[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "12090"
  },
  {
    "text": "BERTHOLD HORN: We're\nswitching topics. So far, we've focused on sort\nof early vision, the low level",
    "start": "12090",
    "end": "21420"
  },
  {
    "text": "material, what to\ndo with gray levels, how to detect features\nof certain types,",
    "start": "21420",
    "end": "28259"
  },
  {
    "text": "in particular edges. We talked about very\naccurately finding edges.",
    "start": "28260",
    "end": "36880"
  },
  {
    "text": "We could continue\nalong that line. We could talk about finding\nso-called interesting points,",
    "start": "36880",
    "end": "43060"
  },
  {
    "text": "but let's move on\nto the next stage where we're actually\nusing that information",
    "start": "43060",
    "end": "49660"
  },
  {
    "text": "to achieve some purpose. And so we'll be talking\nabout photogrammetry next.",
    "start": "49660",
    "end": "55885"
  },
  {
    "text": " And the name is composed of\ntwo roots, which basically",
    "start": "55885",
    "end": "67000"
  },
  {
    "text": "mean measurement and images. So it's about\nmeasurement from images.",
    "start": "67000",
    "end": "73750"
  },
  {
    "text": "And it has its origins in\nright after photography",
    "start": "73750",
    "end": "79390"
  },
  {
    "text": "was invented because people saw\nthe potential for map making.",
    "start": "79390",
    "end": "86170"
  },
  {
    "text": "You would send someone up\nin a hot air balloon, which was popular in those days.",
    "start": "86170",
    "end": "91180"
  },
  {
    "text": "And then you have a picture,\nwhich is kind of a map",
    "start": "91180",
    "end": "97360"
  },
  {
    "text": "if the ground is flat\nand you had the camera just the right way. If you were over hilly terrain,\nthen taking multiple images",
    "start": "97360",
    "end": "106810"
  },
  {
    "text": "might allow you to reconstruct\na three-dimensional surface. So that's the kind of\nthing we'll be looking at.",
    "start": "106810",
    "end": "115000"
  },
  {
    "text": "And in particular,\nwe're going to talk about four different problems,\nwhich have the names--",
    "start": "115000",
    "end": "124480"
  },
  {
    "start": "124480",
    "end": "141190"
  },
  {
    "text": "and these are just\nclassic problems from photogrammetry,\nwhich have been reinvented",
    "start": "141190",
    "end": "156540"
  },
  {
    "text": "by people in machine\nvision and different given different names. But basically,\nthat's what they are.",
    "start": "156540",
    "end": "161830"
  },
  {
    "text": "So this is the one\nwe'll talk about first. And it's about finding the\nrelationship between something",
    "start": "161830",
    "end": "173220"
  },
  {
    "text": "in 3D and something else in 3D. And it could be,\nfor example, that we",
    "start": "173220",
    "end": "178530"
  },
  {
    "text": "have two different coordinated\nsystems, two different sensors.",
    "start": "178530",
    "end": "185319"
  },
  {
    "text": "Imagine the autonomous vehicle\nwith two laser sensors.",
    "start": "185320",
    "end": "190430"
  },
  {
    "text": "And we're trying to relate\nthose to coordinate systems. So they're different\nkind of tests.",
    "start": "190430",
    "end": "197099"
  },
  {
    "text": "One is how do you\nuse the measurements from these two coordinate\nsystems to get 3D information.",
    "start": "197100",
    "end": "203300"
  },
  {
    "text": "But before you do\nthat, you first have to figure out how those\ntwo systems are related.",
    "start": "203300",
    "end": "208680"
  },
  {
    "text": "So you need to find out the\ncoordinate transformation from one sensor coordinate\nsystem to the other.",
    "start": "208680",
    "end": "215670"
  },
  {
    "text": "So that's one kind of problem. And the symmetrical\nproblem to that",
    "start": "215670",
    "end": "223370"
  },
  {
    "text": "is where we have a\nsingle coordinate system, but either they are two\nobjects or the object moves.",
    "start": "223370",
    "end": "233580"
  },
  {
    "text": "And we want to know\nthe relationship between before and after. And it's actually\njust the same problem,",
    "start": "233580",
    "end": "241350"
  },
  {
    "text": "and we'll talk about that. There are some advantages to\nattacking the 3D problem first.",
    "start": "241350",
    "end": "251340"
  },
  {
    "text": "One is that it has a\nclosed-form solution. It's always nice even though,\nin some sense in machine vision,",
    "start": "251340",
    "end": "259790"
  },
  {
    "text": "we often are more concerned\nwith the second problem, which is 2D to 2D, right?",
    "start": "259790",
    "end": "268790"
  },
  {
    "text": "So the main sense that we're\nconcerned with is a camera, and we get images, 2D images.",
    "start": "268790",
    "end": "277220"
  },
  {
    "text": "And for example, we might have\ntwo cameras, get two 2D images. And we'd like to use them to\nrecover the third dimension.",
    "start": "277220",
    "end": "286919"
  },
  {
    "text": "So that's binocular\nstereo, for example. ",
    "start": "286920",
    "end": "296630"
  },
  {
    "text": "That's just one application. And again, there are\ntwo types of problems, two types of applications.",
    "start": "296630",
    "end": "303000"
  },
  {
    "text": "One is how do I recover the\nthree-dimensional information",
    "start": "303000",
    "end": "308210"
  },
  {
    "text": "from those two images. And the other one is how do I\nfirst get the two cameras lined",
    "start": "308210",
    "end": "313610"
  },
  {
    "text": "up, so that I can do that. How do I find the relationship\nbetween these two cameras,",
    "start": "313610",
    "end": "320330"
  },
  {
    "text": "where they are in space\nand how they are rotated, so exterior orientation.",
    "start": "320330",
    "end": "328040"
  },
  {
    "text": "So that it is a mixed\nproblem, 2D to 3D.",
    "start": "328040",
    "end": "336390"
  },
  {
    "text": "And this has to do\nwith the situation where we have an\nimage and we also",
    "start": "336390",
    "end": "344520"
  },
  {
    "text": "have a 3D model of the\nthing that we're looking at. And so we're trying\nto figure out",
    "start": "344520",
    "end": "351930"
  },
  {
    "text": "where we are and, again,\nhow we're oriented in space.",
    "start": "351930",
    "end": "360300"
  },
  {
    "text": "We're going to keep on hearing\nabout rotation and orientation because that's a problem\nin all of these areas.",
    "start": "360300",
    "end": "367060"
  },
  {
    "text": "And so I don't know. You could imagine a drone\nflying over this are,",
    "start": "367060",
    "end": "372100"
  },
  {
    "text": "and you have a map of this area. And you're trying to figure out\nfrom the image where you are.",
    "start": "372100",
    "end": "381480"
  },
  {
    "text": "So that'd be a difficult\nproblem of that form. Or you're on a spacecraft, and\nyou're staring at the stars.",
    "start": "381480",
    "end": "388620"
  },
  {
    "text": "And you're trying to figure\nout the rotation in space of your spacecraft.",
    "start": "388620",
    "end": "395590"
  },
  {
    "text": "And then the last\none is very similar. And I just write it the\nother way around, 3D to 2D.",
    "start": "395590",
    "end": "405070"
  },
  {
    "text": "And that is interior\norientation. Exterior and interior\nrefers to the camera.",
    "start": "405070",
    "end": "411400"
  },
  {
    "text": "So interior orientation\nis basically your camera calibration. ",
    "start": "411400",
    "end": "418320"
  },
  {
    "text": "So we make the camera\nto certain specs. We have the lenses with\ncertain focal length.",
    "start": "418320",
    "end": "425030"
  },
  {
    "text": "And we have some\nkind of metal case that puts the image in a\nposition relative to the lens,",
    "start": "425030",
    "end": "434390"
  },
  {
    "text": "but it's never going to be\nexactly according to spec. So in order to make very\nprecise measurements",
    "start": "434390",
    "end": "440629"
  },
  {
    "text": "using these cameras, we\nneed to first figure out their properties. And we already talked about\nfinding the principle point,",
    "start": "440630",
    "end": "448400"
  },
  {
    "text": "and that's form of\ninterior orientation.",
    "start": "448400",
    "end": "454690"
  },
  {
    "text": "So since I have\nsomething here, I should have something\nin the last one. ",
    "start": "454690",
    "end": "465285"
  },
  {
    "text": "OK.  And in terms of applications,\nit's kind of obvious.",
    "start": "465285",
    "end": "473180"
  },
  {
    "text": "The original application\nin photogrammetry was making topographic maps.",
    "start": "473180",
    "end": "478340"
  },
  {
    "text": "So you'd fly a plane along\nsome predetermined path taking",
    "start": "478340",
    "end": "484100"
  },
  {
    "text": "pictures at regular\nintervals, and then a person would look through an instrument\nsort of like binoculars.",
    "start": "484100",
    "end": "493190"
  },
  {
    "text": "Except you're presenting\ntwo of these images, and the person's eye-brain\ncombination lines",
    "start": "493190",
    "end": "500720"
  },
  {
    "text": "them up and basically\ndetermines the height",
    "start": "500720",
    "end": "506190"
  },
  {
    "text": "at any particular point. And in order to\nplot the map, there",
    "start": "506190",
    "end": "511210"
  },
  {
    "text": "would be an\nartificial point where you've introduced two points\nin the two images the person is",
    "start": "511210",
    "end": "517690"
  },
  {
    "text": "looking at. And their position\ndetermines the height.",
    "start": "517690",
    "end": "522770"
  },
  {
    "text": "And so the person basically\nplaces that artificial point on the surface they see and\nmoves it around at that height",
    "start": "522770",
    "end": "531400"
  },
  {
    "text": "and thereby creating a contour. And of course, we\ndon't do that anymore.",
    "start": "531400",
    "end": "536690"
  },
  {
    "text": "It's all now automated using\ncorrelation, then convolution.",
    "start": "536690",
    "end": "542530"
  },
  {
    "text": "But before we do that,\nwe need to figure out how the cameras\nrelate to each other.",
    "start": "542530",
    "end": "550030"
  },
  {
    "text": "OK, just to give a\nreally simple example",
    "start": "550030",
    "end": "555820"
  },
  {
    "text": "of the kind of thing that\nhappens in photogrammetry--",
    "start": "555820",
    "end": "561460"
  },
  {
    "start": "561460",
    "end": "568680"
  },
  {
    "text": "so humans have many depth\ncues, a dozen or so at least.",
    "start": "568680",
    "end": "574820"
  },
  {
    "text": "And we already talked\nabout some of them. We talked about shading,\nand we talked about shape from shading.",
    "start": "574820",
    "end": "580160"
  },
  {
    "text": "And another one is\nbinocular stereo. So if you talk to the woman or\nman in the street and ask them,",
    "start": "580160",
    "end": "587519"
  },
  {
    "text": "how do we see 3D, typically\nthey say, oh, we have two eyes. So this is an important\ndepth cue at least",
    "start": "587520",
    "end": "594470"
  },
  {
    "text": "from the point of\nview of how people think we see 3D even if it's not\nthe most important depth cue.",
    "start": "594470",
    "end": "602570"
  },
  {
    "text": "But let's take a look\nat that and look at it in a highly simplified\nspecial case situation.",
    "start": "602570",
    "end": "609690"
  },
  {
    "text": "So in this situation,\nwe have two cameras. ",
    "start": "609690",
    "end": "617690"
  },
  {
    "text": "And we've lined them\nup so that they are",
    "start": "617690",
    "end": "623060"
  },
  {
    "text": "perpendicular to the baseline. ",
    "start": "623060",
    "end": "628300"
  },
  {
    "text": "So each of the optical axes is\nperpendicular to the baseline. And the optical\naxes are parallel.",
    "start": "628300",
    "end": "634230"
  },
  {
    "text": "And the lenses have the\nsame focal length and so on. So in practice, we need\nto be more careful.",
    "start": "634230",
    "end": "643420"
  },
  {
    "text": "And we need to allow\nfor differences between the cameras. And typically, it'll be not very\npractical to perfectly align",
    "start": "643420",
    "end": "652260"
  },
  {
    "text": "them up this way. There's someone at Draper Lab--",
    "start": "652260",
    "end": "658589"
  },
  {
    "text": "Sutro was his name-- who spent a long time\nworking on stereo for Mars",
    "start": "658590",
    "end": "665010"
  },
  {
    "text": "rovers long before there\nreally was a Mars rover. And he was concerned with\ngetting these cameras lined up.",
    "start": "665010",
    "end": "674430"
  },
  {
    "text": "And let's just say that\nhe never succeeded. It's too difficult to get them\nlined up accurately enough.",
    "start": "674430",
    "end": "683380"
  },
  {
    "text": "And so what we're\ngoing to do later is actually figure out how these\ncameras relate to each other.",
    "start": "683380",
    "end": "690660"
  },
  {
    "text": "But just to get a feel for this,\nlet's look at this situation.",
    "start": "690660",
    "end": "696389"
  },
  {
    "text": "And we'll pick an origin that's\nhalfway between the lenses. And the baseline length is b,\nso b over 2 from each of those.",
    "start": "696390",
    "end": "708459"
  },
  {
    "text": "And then let's\nsuppose that they're a distance f from their\nrespective image plains,",
    "start": "708460",
    "end": "715800"
  },
  {
    "text": "where f is, as we know,\nnot the focal length, but slightly larger.",
    "start": "715800",
    "end": "722200"
  },
  {
    "text": "And then we've picked\nsome point out here. ",
    "start": "722200",
    "end": "728750"
  },
  {
    "text": "And we'll image it\nin both cameras. ",
    "start": "728750",
    "end": "736240"
  },
  {
    "text": "We're leaving out\nthe y direction, which is perpendicular\nto the blackboard because that's less interesting\nfrom this point of view.",
    "start": "736240",
    "end": "744550"
  },
  {
    "text": "And so up here, we have\na point at X and Z.",
    "start": "744550",
    "end": "750980"
  },
  {
    "text": "And our task is, from xl and xr,\nthe position in those two image",
    "start": "750980",
    "end": "759949"
  },
  {
    "text": "plans, to determine\nbig X and big Z. So we have the two images.",
    "start": "759950",
    "end": "767180"
  },
  {
    "text": "The object does not image in the\nsame place in the two images.",
    "start": "767180",
    "end": "772190"
  },
  {
    "text": "And from the difference,\nwe can calculate where it is, whereas from a\nmonocular image, of course,",
    "start": "772190",
    "end": "778709"
  },
  {
    "text": "we have that scale\nfactor ambiguity. We can tell what direction\nsomething lies in, but we have no idea\nhow far away it is.",
    "start": "778710",
    "end": "785720"
  },
  {
    "text": "Adding the second eye or\nlens gives us that ability.",
    "start": "785720",
    "end": "791329"
  },
  {
    "text": "Well, we just use\nsimilar triangles. ",
    "start": "791330",
    "end": "798330"
  },
  {
    "text": "So using similar triangles-- ",
    "start": "798330",
    "end": "814709"
  },
  {
    "text": "because x and y are\nrelative to this origin.",
    "start": "814710",
    "end": "822230"
  },
  {
    "text": "And so if we want to\nhave this distance,",
    "start": "822230",
    "end": "827360"
  },
  {
    "text": "we need to subtract\nout half the baseline. And similarly, on\nthe other side, we have to add in\nhalf the baseline.",
    "start": "827360",
    "end": "834720"
  },
  {
    "text": "OK, so two equations, two\nunknowns, we can solve.",
    "start": "834720",
    "end": "840180"
  },
  {
    "start": "840180",
    "end": "855810"
  },
  {
    "text": "So the depth is inversely\nproportional to the disparity.",
    "start": "855810",
    "end": "862230"
  },
  {
    "text": "So the disparity is the\ndiscrepancy in position if you were to superimpose\nthe left and the right image.",
    "start": "862230",
    "end": "868204"
  },
  {
    "text": " And so that gives us directly\nthe depth, the distance.",
    "start": "868205",
    "end": "876830"
  },
  {
    "text": "And that also allows us to\ndetermine the sensitivity to error.",
    "start": "876830",
    "end": "883010"
  },
  {
    "text": "Obviously, if we're\nvery far away, the disparity will\nbe very small. And then any small error\nin measuring the disparity",
    "start": "883010",
    "end": "890420"
  },
  {
    "text": "is going to produce a\nlarge error in depth. ",
    "start": "890420",
    "end": "896900"
  },
  {
    "text": "OK, and xr plus xl-- ",
    "start": "896900",
    "end": "914790"
  },
  {
    "text": "and again, the disparity comes\ninto it and the baseline.",
    "start": "914790",
    "end": "921060"
  },
  {
    "text": "And this time,\nwe're sort of taking an average of the positions. ",
    "start": "921060",
    "end": "927990"
  },
  {
    "text": "So we can determine\nthe 3D position-- well, we've left out y, but\nthat's pretty easy--",
    "start": "927990",
    "end": "935580"
  },
  {
    "text": "if we have those\ntwo measurements. And one thing is clear.",
    "start": "935580",
    "end": "943880"
  },
  {
    "text": "If we increase the baseline,\nthe disparity gets larger,",
    "start": "943880",
    "end": "949040"
  },
  {
    "text": "and so then the measurement\nwill be more accurate. If we increase the focal\nlength, then the disparity",
    "start": "949040",
    "end": "961420"
  },
  {
    "text": "will be larger, and we improve\nthe measurement accuracy. But of course, you\nhave other constraints",
    "start": "961420",
    "end": "968020"
  },
  {
    "text": "on these quantities. You don't want the\ntwo cameras to be",
    "start": "968020",
    "end": "973149"
  },
  {
    "text": "too far apart if possible. So for example, in\nautonomous vehicles,",
    "start": "973150",
    "end": "979630"
  },
  {
    "text": "it'd be nice if the two cameras\ncould be close enough together, so you could hide them\nbehind the rear view mirror,",
    "start": "979630",
    "end": "985449"
  },
  {
    "text": "rather than have them\ngo all the way across. And if they are that\nfar apart, then you",
    "start": "985450",
    "end": "992860"
  },
  {
    "text": "have a calibration\nproblem because they're unlikely to stay\nperfectly lined up over the lifetime of the car.",
    "start": "992860",
    "end": "999730"
  },
  {
    "text": "So you'd have to\nhave some automated way of rediscovering the\nrelationship between those two",
    "start": "999730",
    "end": "1005640"
  },
  {
    "text": "coordinate systems. OK, so this is a very\nspecial case, not",
    "start": "1005640",
    "end": "1013900"
  },
  {
    "text": "one that one could rely on\nin practice, as I mentioned. And so we'll have to talk\nabout what happens if these two",
    "start": "1013900",
    "end": "1022180"
  },
  {
    "text": "cameras are not exactly\nequal and they're not exactly",
    "start": "1022180",
    "end": "1029050"
  },
  {
    "text": "arranged in this geometry. What if there's a rotation\nbetween the two cameras? What if the baseline\nis not perpendicular",
    "start": "1029050",
    "end": "1035439"
  },
  {
    "text": "to the optical axis and so on? How do you calibrate for that? And that's going to be the\ntopic of a later conversation.",
    "start": "1035440",
    "end": "1044230"
  },
  {
    "text": "So let's dive right\nin, problem number one. Let's look at\nabsolute orientations.",
    "start": "1044230",
    "end": "1050920"
  },
  {
    "start": "1050920",
    "end": "1056890"
  },
  {
    "text": "And one version of that is\nwe have two LIDARs, laser range-finding imaging devices,\nthat give us 3D coordinates.",
    "start": "1056890",
    "end": "1067150"
  },
  {
    "text": "And we're going to\nuse that information",
    "start": "1067150",
    "end": "1073180"
  },
  {
    "text": "to get a picture of the world\naround our autonomous vehicle or whatever.",
    "start": "1073180",
    "end": "1078340"
  },
  {
    "text": "And to do so, we need to get the\nrelationship between those two",
    "start": "1078340",
    "end": "1085090"
  },
  {
    "text": "systems. I mean, we try to line them\nup in some reasonable way,",
    "start": "1085090",
    "end": "1090290"
  },
  {
    "text": "but we can't really\ndepend on it. In the case of the\ntopographic reconstruction",
    "start": "1090290",
    "end": "1097330"
  },
  {
    "text": "from aerial photography,\nit's obviously even worse because the two camera\npositions aren't",
    "start": "1097330",
    "end": "1105250"
  },
  {
    "text": "connected by some rigid object. The plane flies along,\ntakes a picture. It flies along, takes a picture.",
    "start": "1105250",
    "end": "1110740"
  },
  {
    "text": "And the pilot, of\ncourse, tries to maintain a constant altitude, but the\nair is not a constant medium.",
    "start": "1110740",
    "end": "1120280"
  },
  {
    "text": "So the orientation\nof the plane is not going to be maintained exactly.",
    "start": "1120280",
    "end": "1127299"
  },
  {
    "text": "And so we need to\ncompensate for that. ",
    "start": "1127300",
    "end": "1138460"
  },
  {
    "text": "Notice that, in\nall of this, we're presupposing that we\nsomehow found points.",
    "start": "1138460",
    "end": "1144549"
  },
  {
    "text": "And we've seen how to find\nedges very accurately, and that's one type of\ninput that we can use.",
    "start": "1144550",
    "end": "1154180"
  },
  {
    "text": "Similarly, there are\nmethods for finding quote, \"interesting\" points. And you know, SIFT\nis an example.",
    "start": "1154180",
    "end": "1162130"
  },
  {
    "text": "And I think I have David Lowe's\npaper on the stellar site.",
    "start": "1162130",
    "end": "1168690"
  },
  {
    "text": "It's a little opaque. And since he wrote\nit and patented it,",
    "start": "1168690",
    "end": "1176309"
  },
  {
    "text": "there have been\nmany other variants that typically are\ncomputationally much faster,",
    "start": "1176310",
    "end": "1184410"
  },
  {
    "text": "but may not be as\naccurate and so on. But anyway, we're\nassuming here that there's some way of finding\ninteresting points",
    "start": "1184410",
    "end": "1191850"
  },
  {
    "text": "and finding them again\nin another image. So we're leaving aside\nthe matching problem.",
    "start": "1191850",
    "end": "1198090"
  },
  {
    "text": "We're assuming that's been done. And so, now, we just have\nthe problem of here's a bunch of coordinates\nin the two systems.",
    "start": "1198090",
    "end": "1205250"
  },
  {
    "text": "What do we do with them? ",
    "start": "1205250",
    "end": "1220670"
  },
  {
    "text": "So I'm going to call these left\nand right coordinate systems just because one of\nthe big applications",
    "start": "1220670",
    "end": "1227260"
  },
  {
    "text": "here is to binocular stereo. But of course, they could\nbe before and after.",
    "start": "1227260",
    "end": "1232610"
  },
  {
    "text": "So the vehicle took a\npicture of the world, then it moved, then it\ntook another picture.",
    "start": "1232610",
    "end": "1238750"
  },
  {
    "text": "So don't assume that, because\nit's l and r, that that's-- ",
    "start": "1238750",
    "end": "1245780"
  },
  {
    "text": "so here's a point\nin the environment. And we're going to find we'll\nneed more than one point, so let's put a\nsubscript on them.",
    "start": "1245780",
    "end": "1253070"
  },
  {
    "text": "And we measure it in\nthis coordinate system, and we get rli.",
    "start": "1253070",
    "end": "1258470"
  },
  {
    "text": "And we measure it in this,\nand we get the vector rri. ",
    "start": "1258470",
    "end": "1266230"
  },
  {
    "text": "And again, there's\nthis duality where",
    "start": "1266230",
    "end": "1271290"
  },
  {
    "text": "we could be talking\nabout one object measured in two different\ncoordinate systems, or we could be talking\nabout two objects measured",
    "start": "1271290",
    "end": "1279630"
  },
  {
    "text": "in the same coordinate system. And this is sort of like, is\nthe camera moving or the object",
    "start": "1279630",
    "end": "1285480"
  },
  {
    "text": "moving? It doesn't matter. We just occasionally need\nto be careful about the sign",
    "start": "1285480",
    "end": "1291060"
  },
  {
    "text": "because the sign will flip. OK, so now, if we know where\nthose coordinate systems are,",
    "start": "1291060",
    "end": "1299700"
  },
  {
    "text": "we have a very happy situation. We simply project out this ray\ninto 3D and this ray in 3D,",
    "start": "1299700",
    "end": "1306780"
  },
  {
    "text": "find out where they\nintersect, and we know pi is, that point i.",
    "start": "1306780",
    "end": "1312060"
  },
  {
    "text": "And that's sort of ultimately\nwhat we want to do. And they typically\nwon't intersect.",
    "start": "1312060",
    "end": "1318910"
  },
  {
    "text": "So we'll find the point where\nthey have the closest approach,",
    "start": "1318910",
    "end": "1324690"
  },
  {
    "text": "which is where the\nline connecting them",
    "start": "1324690",
    "end": "1332960"
  },
  {
    "text": "is as short as possible. And that will be a line that is\nperpendicular to both of them.",
    "start": "1332960",
    "end": "1339220"
  },
  {
    "text": "So there's an interesting\nlittle geometry problem there, how to do that.",
    "start": "1339220",
    "end": "1344540"
  },
  {
    "text": "But right now, we're focusing\non another problem, which is, before I can\nproject these out",
    "start": "1344540",
    "end": "1350240"
  },
  {
    "text": "into the world to find\ntheir intersection, I need to know how these two\ncoordinate systems relate",
    "start": "1350240",
    "end": "1356300"
  },
  {
    "text": "to one another. And so how do three-dimensional\ncoordinate systems",
    "start": "1356300",
    "end": "1361670"
  },
  {
    "text": "relate to each other? Well, there's rotation\nand there's translation. And so our job is going\nto be to find the rotation",
    "start": "1361670",
    "end": "1368540"
  },
  {
    "text": "and to find the translation. ",
    "start": "1368540",
    "end": "1374460"
  },
  {
    "text": "And we've talked\nabout this before. In 3D, there are 3 degrees\nof freedom to rotation,",
    "start": "1374460",
    "end": "1380910"
  },
  {
    "text": "and there are 3 degrees\nof freedom to translation. And that's slightly surprising.",
    "start": "1380910",
    "end": "1388260"
  },
  {
    "text": "You know I'd say, oh,\nyeah, because it's 3D. So it's got to be three. But as we mentioned\nin 2D, rotation only",
    "start": "1388260",
    "end": "1395190"
  },
  {
    "text": "has 1 degree of freedom, not 2. And in 4D, it has 6.",
    "start": "1395190",
    "end": "1400620"
  },
  {
    "text": "So it's n times n\nminus 1 over 2, not n.",
    "start": "1400620",
    "end": "1406050"
  },
  {
    "text": "And so it's a fortuitous\naccident that, in 3D,",
    "start": "1406050",
    "end": "1411150"
  },
  {
    "text": "3 times 2 of over 2 is 3. So it's slightly confusing.",
    "start": "1411150",
    "end": "1416520"
  },
  {
    "text": "It makes it look like rotation\nis simple when it isn't. OK, so we're looking\nfor six numbers.",
    "start": "1416520",
    "end": "1424860"
  },
  {
    "text": "And we will need\nenough constraint so that we can find them. ",
    "start": "1424860",
    "end": "1442809"
  },
  {
    "text": "So we're looking for a\ntransformation of this form where this is a\ntranslation which is fixed.",
    "start": "1442810",
    "end": "1453580"
  },
  {
    "text": "That is this formula applies\nto all the points, Pi and Pj.",
    "start": "1453580",
    "end": "1459789"
  },
  {
    "text": "And this is our rotation. And I've purposefully written\nit this way with a parenthesis",
    "start": "1459790",
    "end": "1468010"
  },
  {
    "text": "to indicate that\nwe are not going to insist on that\nbeing represented",
    "start": "1468010",
    "end": "1474340"
  },
  {
    "text": "as an orthogonal matrix,\nwhich is what would happen if I left out the parentheses.",
    "start": "1474340",
    "end": "1479540"
  },
  {
    "text": "You would assume that\nI'm talking about a 3 by 3 matrix multiplied\nby a vector,",
    "start": "1479540",
    "end": "1484960"
  },
  {
    "text": "but we'll be looking at\nother representation. And we'll see why.",
    "start": "1484960",
    "end": "1489970"
  },
  {
    "text": "OK, so those are the unknowns. ",
    "start": "1489970",
    "end": "1497429"
  },
  {
    "text": "So with an equation like\nthis, there are typically two ways of using them. The one is you know the\nrotation and translation.",
    "start": "1497430",
    "end": "1506270"
  },
  {
    "text": "You plunk in r of l,\nand you compute r of r. That's sort of the easy\nthing and certainly",
    "start": "1506270",
    "end": "1514669"
  },
  {
    "text": "what we use it for,\nbut that's easy. Our problem is different. We know some rl, rr pairs.",
    "start": "1514670",
    "end": "1522470"
  },
  {
    "text": "That is there are\ncertain points we've measured in both\ncoordinate systems. And our job is to find the\nrotation and the translation.",
    "start": "1522470",
    "end": "1530100"
  },
  {
    "text": " OK, now, before we\ngo on, we should",
    "start": "1530100",
    "end": "1536540"
  },
  {
    "text": "talk about some\nproperties of rotation. And we already mentioned\nthem, but let me do it again.",
    "start": "1536540",
    "end": "1543390"
  },
  {
    "text": "So if we represent r\nas a 3 by 3 matrix, it's better be orthonormal.",
    "start": "1543390",
    "end": "1551100"
  },
  {
    "text": "And that means that the\ndot product of rows is 0",
    "start": "1551100",
    "end": "1557070"
  },
  {
    "text": "and that the dot product of\nrows with themselves is 1. And so a quick way of\nwriting that is that way.",
    "start": "1557070",
    "end": "1567669"
  },
  {
    "text": "That is the matrix times\nits transpose is identity. And you can check that.",
    "start": "1567670",
    "end": "1573520"
  },
  {
    "text": "That means that, I\nguess, the columns, if we treat the columns as\nvectors, those are orthogonal.",
    "start": "1573520",
    "end": "1580460"
  },
  {
    "text": "And they're unit vectors. And it turns out\nthat you can prove",
    "start": "1580460",
    "end": "1586550"
  },
  {
    "text": "that, if the columns\nhave that property, then the rows have\nthat property. So we could also write\nit as r times r transpose",
    "start": "1586550",
    "end": "1593900"
  },
  {
    "text": "equals i, same thing. And then you look at this\nand say, wait a minute. We've got a 3 by 3 matrix\nequals a 3 by 3 matrix.",
    "start": "1593900",
    "end": "1601880"
  },
  {
    "text": "That's 9 constraints. And that seems excessive\nbecause we only got 9 numbers.",
    "start": "1601880",
    "end": "1609630"
  },
  {
    "text": "So if you take\nout 9 constraints, there's nothing left,\nno degrees of freedom. Well, the thing is that\nthis is a symmetric matrix.",
    "start": "1609630",
    "end": "1615780"
  },
  {
    "text": "So it's actually only\nsix constraints, right? Because the diagonal plus,\nsay, the top right triangle",
    "start": "1615780",
    "end": "1622280"
  },
  {
    "text": "is 3 plus 3 is 6. So there's 6 constraints. The 3 by 3 matrix has 9 numbers.",
    "start": "1622280",
    "end": "1627980"
  },
  {
    "text": "We've got 6 constraints. 9 minus 6 is 3, 3\ndegrees of freedom.",
    "start": "1627980",
    "end": "1634850"
  },
  {
    "text": "So typically, that's\nwhere people stop. That's all the conditions\nwe need on the matrix.",
    "start": "1634850",
    "end": "1641990"
  },
  {
    "text": "But actually, it's not. ",
    "start": "1641990",
    "end": "1647370"
  },
  {
    "text": "You need an\nadditional constraint, which is different\nin that it's not the quality of some\nnumber to some value.",
    "start": "1647370",
    "end": "1655080"
  },
  {
    "text": "It's really a single\nbit of information. And why do we need that?",
    "start": "1655080",
    "end": "1660790"
  },
  {
    "text": "Well, here's the example\nof why we need that. So this matrix, if you\ntake its transpose--",
    "start": "1660790",
    "end": "1669500"
  },
  {
    "text": "it's the same matrix-- and then you multiply it by\nitself, you get the identity. So this matrix satisfies\nthat first condition,",
    "start": "1669500",
    "end": "1678380"
  },
  {
    "text": "but it's not a rotation, right? Because it's flipping\nthe z direction.",
    "start": "1678380",
    "end": "1684360"
  },
  {
    "text": "So it's a mirror image. It's I'm standing on\nthe floor, and there's",
    "start": "1684360",
    "end": "1690080"
  },
  {
    "text": "another person talking on the\nother side with his feet up. And that person's left\nhand would be my right hand",
    "start": "1690080",
    "end": "1699420"
  },
  {
    "text": "and so on. So no rotation would turn\nme into that other person.",
    "start": "1699420",
    "end": "1707120"
  },
  {
    "text": "It's like turning your left\nhand into your right hand. It can't be done\nwith just rotation. It can be done trivially\nwith a reflection.",
    "start": "1707120",
    "end": "1714620"
  },
  {
    "text": "And reflections satisfy this. So in order to\neliminate reflections,",
    "start": "1714620",
    "end": "1720350"
  },
  {
    "text": "we have to introduce\nthat constraint. ",
    "start": "1720350",
    "end": "1726900"
  },
  {
    "text": "So if, say, we set something up\nlike a least squares problem-- we're trying to get\nthese cameras lined up.",
    "start": "1726900",
    "end": "1732000"
  },
  {
    "text": "And we make some measurements,\nand there's some errors that we're trying to minimize. Well, then we also\nneed to enforce",
    "start": "1732000",
    "end": "1739200"
  },
  {
    "text": "the orthonormality constraint. And annoyingly, we also need\nto enforce this constraint.",
    "start": "1739200",
    "end": "1744630"
  },
  {
    "text": "and that's hard. So that's one reason\nwhy we won't be using",
    "start": "1744630",
    "end": "1749789"
  },
  {
    "text": "orthonormal matrices much. OK.",
    "start": "1749790",
    "end": "1754830"
  },
  {
    "text": "Oh, by the way, this means\nthat the inverse of a rotation",
    "start": "1754830",
    "end": "1761649"
  },
  {
    "text": "matrix is easy to obtain. ",
    "start": "1761650",
    "end": "1768600"
  },
  {
    "text": "I mean, we'll use some of these\nproperties as we go along. OK, so one way of\nthinking about this",
    "start": "1768600",
    "end": "1776460"
  },
  {
    "text": "is in terms of a\nphysical model where we have a cluster of\npoints, a cloud of points",
    "start": "1776460",
    "end": "1785130"
  },
  {
    "text": "that we've, say, got from\nthe left coordinate system. Then we have a\ncluster of points from",
    "start": "1785130",
    "end": "1791640"
  },
  {
    "text": "the right coordinate system. And we want to superimpose them. We want to line them\nup as best as possible.",
    "start": "1791640",
    "end": "1798250"
  },
  {
    "text": "And one model for\nthat is, if this is one of the left-hand\ncoordinate system points",
    "start": "1798250",
    "end": "1804120"
  },
  {
    "text": "and this is one of the\nright-hand coordinate system points after we've\ntransformed it,",
    "start": "1804120",
    "end": "1809820"
  },
  {
    "text": "we want to make that distance\nas short as possible. And in terms of\nphysical model, we",
    "start": "1809820",
    "end": "1815610"
  },
  {
    "text": "can think of that as a spring\nthat's connecting the two.",
    "start": "1815610",
    "end": "1821040"
  },
  {
    "text": "Why is that? Well, because by Hooke's law--",
    "start": "1821040",
    "end": "1826140"
  },
  {
    "text": "let's call this\ndistance e for error. ",
    "start": "1826140",
    "end": "1831490"
  },
  {
    "text": "By Hooke's law, the\nforce is proportional to the displacement\nfrom the rest length.",
    "start": "1831490",
    "end": "1838900"
  },
  {
    "text": "Let's assume these springs\nhave a rest length of 0. And then the energy is\nthe integral of that.",
    "start": "1838900",
    "end": "1846370"
  },
  {
    "text": " So it's a half the\ndisplacement squared.",
    "start": "1846370",
    "end": "1853800"
  },
  {
    "text": "And so we can think of this\nas an energy minimizing problem, which is what a\nphysical system like that",
    "start": "1853800",
    "end": "1859559"
  },
  {
    "text": "would do. It would want to adjust\nitself to minimize the energy. And we've run across that in\na way in that last pattern--",
    "start": "1859560",
    "end": "1868860"
  },
  {
    "text": "not the last, the\none before last where there was a translation\nand rotation in the scaling",
    "start": "1868860",
    "end": "1875600"
  },
  {
    "text": "based on attraction of points to\ncorresponding points and so on.",
    "start": "1875600",
    "end": "1882049"
  },
  {
    "text": "OK, so we can think\nof this and we can approach this in a\nsort of least squares way.",
    "start": "1882050",
    "end": "1887850"
  },
  {
    "text": "So what we're trying\nto do might be this. So we define some kind of error.",
    "start": "1887850",
    "end": "1893615"
  },
  {
    "start": "1893615",
    "end": "1905160"
  },
  {
    "text": "So we choose to\ntransform the vector",
    "start": "1905160",
    "end": "1910250"
  },
  {
    "text": "in the left coordinate system\nby rotation and translation into the coordinate system\nof the right system,",
    "start": "1910250",
    "end": "1917720"
  },
  {
    "text": "and then we compare it\nwith what we get there. And ideally, they\nshould be the same. And if they're not,\nthen we get some error.",
    "start": "1917720",
    "end": "1924950"
  },
  {
    "text": "And now, this introduces\nsome sort of apparent bias, that we're treating one of\nthe two coordinate systems",
    "start": "1924950",
    "end": "1932509"
  },
  {
    "text": "differently from the other. And that's undesirable. You know, like, why should\none coordinate system",
    "start": "1932510",
    "end": "1940850"
  },
  {
    "text": "have preference over the other? So we want to be\nsure when we're done to check that, if we had\nfound the transformation",
    "start": "1940850",
    "end": "1948020"
  },
  {
    "text": "from the right to\nthe left system, it would be the\nexact inverse of what",
    "start": "1948020",
    "end": "1953180"
  },
  {
    "text": "we found going from the\nleft to the right system. Otherwise, there's\nsomething wrong. And we already discussed this\nfor example in line fitting.",
    "start": "1953180",
    "end": "1963500"
  },
  {
    "text": "y equals mx plus\nc is not desirable because it pretends that there's\nno error in x and there's all",
    "start": "1963500",
    "end": "1970100"
  },
  {
    "text": "the error and y when, in\nmany of our applications, the error is in image position,\nwhich includes both x and y.",
    "start": "1970100",
    "end": "1977659"
  },
  {
    "text": "So similarly, here,\nwe'll be looking at transformations\nand methods that",
    "start": "1977660",
    "end": "1983630"
  },
  {
    "text": "have that property that\nthere's that symmetry. And that symmetry is not\napparent in that formula,",
    "start": "1983630",
    "end": "1989930"
  },
  {
    "text": "but so we'll have to\nactually check for it. OK, so what we want to do\nis, of course, minimize that.",
    "start": "1989930",
    "end": "1995269"
  },
  {
    "text": " And what do we\nhave to play with?",
    "start": "1995270",
    "end": "2001059"
  },
  {
    "text": "Well, we've got r, and we've\ngot the translation r0.",
    "start": "2001060",
    "end": "2006580"
  },
  {
    "text": "So that's sort of, in\na nutshell, the problem we're trying to solve. ",
    "start": "2006580",
    "end": "2013420"
  },
  {
    "text": "We've got a bunch of\ncorresponding measurements in the two systems. And we're trying to find the\ncoordinate transformation",
    "start": "2013420",
    "end": "2022390"
  },
  {
    "text": "between the two\nsystems using it. And again, as I\nmentioned, that's sort of the other way of\nusing those equations.",
    "start": "2022390",
    "end": "2032780"
  },
  {
    "text": "Normally, you\nwould be just going in the forward direction\nof the problem. You plug in your rl,\nrotate, translate,",
    "start": "2032780",
    "end": "2041480"
  },
  {
    "text": "and you get rr where the\nrotation and translation are known.",
    "start": "2041480",
    "end": "2046970"
  },
  {
    "text": "And what's not known\nis the correspondence between the\ncoordinates of points.",
    "start": "2046970",
    "end": "2052219"
  },
  {
    "text": "And here, we're doing\nthe very opposite. We're assuming that we\nknow the coordinates",
    "start": "2052219",
    "end": "2057260"
  },
  {
    "text": "of the points, pairs of them. And we're trying to find\nthe transformation that makes that work.",
    "start": "2057260",
    "end": "2065090"
  },
  {
    "text": "OK, well, there are\na bunch of methods we could use to do this. One of them is to\nseparate the problem",
    "start": "2065090",
    "end": "2072860"
  },
  {
    "text": "of finding the translation from\nthe problem of the rotation. And actually, all of the\nmethods we'll look at",
    "start": "2072860",
    "end": "2079100"
  },
  {
    "text": "take that approach because it\ngreatly simplifies the problem. We, in each case now, only\nhave to deal with 3 degrees",
    "start": "2079100",
    "end": "2087319"
  },
  {
    "text": "of freedom at a time. And one way we can do that is\nto pick some sort of reference",
    "start": "2087320",
    "end": "2093530"
  },
  {
    "text": "point in each of this point\nof clouds and go with that.",
    "start": "2093530",
    "end": "2100080"
  },
  {
    "text": "And so here's a way of taking,\nsay, all of the left points",
    "start": "2100080",
    "end": "2106910"
  },
  {
    "text": "and constructing a\ncoordinate system in it. So let's suppose we\nhave point 1 here.",
    "start": "2106910",
    "end": "2112980"
  },
  {
    "text": "So this is a measurement\nof some point. And we're going to use\nthat as the origin.",
    "start": "2112980",
    "end": "2121530"
  },
  {
    "text": "So out of all the\npoints we've measured, we pick one and declare\nthat to be the origin--",
    "start": "2121530",
    "end": "2127339"
  },
  {
    "text": "OK, step one. Then we look at a second\npoint, and we connect these two",
    "start": "2127340",
    "end": "2135150"
  },
  {
    "text": "by a line. And that's going to\nbe one of our axes. ",
    "start": "2135150",
    "end": "2142380"
  },
  {
    "text": "Now, the separation between\n1 and 2 won't be a unit. So we don't use the actual\ndifference between 2 and 1",
    "start": "2142380",
    "end": "2153090"
  },
  {
    "text": "as our coordinate. We normalize it.",
    "start": "2153090",
    "end": "2158220"
  },
  {
    "text": "OK, so let's write it over\nhere, x hat unit vector",
    "start": "2158220",
    "end": "2165660"
  },
  {
    "text": "rl2 minus rl1. ",
    "start": "2165660",
    "end": "2172950"
  },
  {
    "text": "Oh, sorry. Let me just define x and then\ndefine x bar in terms of x-- ",
    "start": "2172950",
    "end": "2181920"
  },
  {
    "text": "save some writing. OK, now, we take a third point.",
    "start": "2181920",
    "end": "2192150"
  },
  {
    "text": "Now, we can't sort of\nconnect these up and say, OK, that's the y-axis because\nthen x and y-axis won't",
    "start": "2192150",
    "end": "2198450"
  },
  {
    "text": "be perpendicular. But what we can do is decide\nthat the plane defined",
    "start": "2198450",
    "end": "2204990"
  },
  {
    "text": "by 1, 2, and 3 is the xy plane. So we can certainly do that.",
    "start": "2204990",
    "end": "2211440"
  },
  {
    "text": "And actually, then\nbased on that idea, we can just remove,\nthe vector from 1 to 3,",
    "start": "2211440",
    "end": "2221520"
  },
  {
    "text": "the component that is in\nthe direction of 1 to 2. And what's left is going\nto be automatically",
    "start": "2221520",
    "end": "2227549"
  },
  {
    "text": "perpendicular to us. And that's the y-axis.",
    "start": "2227550",
    "end": "2233530"
  },
  {
    "text": "So we pick y equals\nrl3 minus rl1.",
    "start": "2233530",
    "end": "2243120"
  },
  {
    "text": "And then we find the component\nof that rl3 minus rl1",
    "start": "2243120",
    "end": "2249630"
  },
  {
    "text": "in the direction of x hat. ",
    "start": "2249630",
    "end": "2257480"
  },
  {
    "text": "So we picked this\nvector from 1 to 3. But we take out a\ncomponent that's",
    "start": "2257480",
    "end": "2264110"
  },
  {
    "text": "in the x-axis direction,\nwhich we do simply by taking the dot\nproduct of that vector",
    "start": "2264110",
    "end": "2270049"
  },
  {
    "text": "with the unit vector\nin x direction. That gives us a scalar. And then we multiply that by the\nunit vector in the x direction.",
    "start": "2270050",
    "end": "2278280"
  },
  {
    "text": "So that removes this\ncomponent, the one that's parallel to the x-axis.",
    "start": "2278280",
    "end": "2284060"
  },
  {
    "text": "And we're left with\nsomething that's perpendicular to the original.",
    "start": "2284060",
    "end": "2289160"
  },
  {
    "text": " And then, again, we\ncan make a unit vector.",
    "start": "2289160",
    "end": "2295349"
  },
  {
    "text": "So this won't be a unit\nvector in general, of course. OK. And it's going to\nbe easy to show",
    "start": "2295350",
    "end": "2301510"
  },
  {
    "text": "that x dot y dot\nis 0, that they're",
    "start": "2301510",
    "end": "2306880"
  },
  {
    "text": "perpendicular to each other. You can check that\nvery easily just by taking the dot product of\nthis with our definition for x.",
    "start": "2306880",
    "end": "2315519"
  },
  {
    "text": "Or you can just show\nthat the y vector is perpendicular to the x\nvector, not the unit, really.",
    "start": "2315520",
    "end": "2322830"
  },
  {
    "text": "OK, so we have the origin. We have the x-axis. We have the xy plane.",
    "start": "2322830",
    "end": "2329520"
  },
  {
    "text": "Yeah. So we have an object, and\nwe've identified quote",
    "start": "2329520",
    "end": "2335430"
  },
  {
    "text": "\"interesting\" points on it. And we've measured them. So it's a cloud of points.",
    "start": "2335430",
    "end": "2340530"
  },
  {
    "text": "And they could be\ncorners, not edges.",
    "start": "2340530",
    "end": "2347310"
  },
  {
    "text": "Because edges don't give\nus full 3D constraint. So if our calibration object\nor whatever was a cube,",
    "start": "2347310",
    "end": "2356700"
  },
  {
    "text": "we might very well\nhave these points. Or if it's someone's\nhead, then it",
    "start": "2356700",
    "end": "2363690"
  },
  {
    "text": "might be the position of the\niris of the eye and so on.",
    "start": "2363690",
    "end": "2369172"
  },
  {
    "text": "And we've measured those\nin both coordinate systems. That's the important thing. But right now,\nwe're just working",
    "start": "2369173",
    "end": "2374339"
  },
  {
    "text": "on the left coordinate system. OK, well, at this\npoint, we define z",
    "start": "2374340",
    "end": "2382630"
  },
  {
    "text": "to be the cross\nproduct of x and y because the cross product is\nperpendicular to both vectors",
    "start": "2382630",
    "end": "2392319"
  },
  {
    "text": "in the cross product. So z is going to be\nperpendicular to both x and y. So now, we've got a\nwhole coordinate system.",
    "start": "2392320",
    "end": "2400839"
  },
  {
    "text": "We have a triad of\nunit vectors that",
    "start": "2400840",
    "end": "2406262"
  },
  {
    "text": "define the coordinate system. ",
    "start": "2406262",
    "end": "2415410"
  },
  {
    "text": "So we've done that for the left,\nand we only need three points.",
    "start": "2415410",
    "end": "2422530"
  },
  {
    "text": "So if we measure the whole bunch\nof points, we don't need them. We just need three. ",
    "start": "2422530",
    "end": "2432369"
  },
  {
    "text": "Now, we do the same thing for\nthe right coordinate system. And you know, I'm not going to\ngo through the process again.",
    "start": "2432370",
    "end": "2440680"
  },
  {
    "text": "We'll just get an Xr hat,\na Yr hat, and a Zr hat.",
    "start": "2440680",
    "end": "2446200"
  },
  {
    "text": "And I suppose I should call\nthose x left hat, y left hat,",
    "start": "2446200",
    "end": "2455550"
  },
  {
    "text": "and z left hat. So what I do is I take my\ntwo clouds of points measured",
    "start": "2455550",
    "end": "2462870"
  },
  {
    "text": "in these two coordinate\nsystems, and I use them to build an access, an\nx-axis, a y-axis, and a z-axis.",
    "start": "2462870",
    "end": "2472330"
  },
  {
    "text": "And now, all I need to do--\nquote \"all I need to do\"-- is to map those unit\nvectors into each other.",
    "start": "2472330",
    "end": "2480760"
  },
  {
    "text": "So I need to find a\ntransformation that puts xl into Xr and the transformation\nthat puts yl into Yr and so on.",
    "start": "2480760",
    "end": "2492370"
  },
  {
    "text": "OK, now, because\nI've artificially removed a translation by\npicking one of the points",
    "start": "2492370",
    "end": "2500140"
  },
  {
    "text": "as the origin, I don't have\nto worry about translation for the moment. I only need to\ndeal with rotation.",
    "start": "2500140",
    "end": "2506680"
  },
  {
    "text": "I've separated that problem. So I've got then Xr\nhat is Rxl hat, right?",
    "start": "2506680",
    "end": "2516100"
  },
  {
    "text": "So the unknown rotation R does\nthis, and it also does that.",
    "start": "2516100",
    "end": "2525460"
  },
  {
    "text": "I mean, if I just\nhad that first line, that wouldn't pin\ndown R because there are lots of ways of rotating\none vector into another.",
    "start": "2525460",
    "end": "2533320"
  },
  {
    "text": "It's not unique. ",
    "start": "2533320",
    "end": "2545470"
  },
  {
    "text": "So that's what I expect. And now, my problem\nis solving for R.",
    "start": "2545470",
    "end": "2554330"
  },
  {
    "text": "So I've got these three\nvector matrix equations, but I think you can see\nthat we can compose them.",
    "start": "2554330",
    "end": "2561140"
  },
  {
    "text": "We can stick them together\ninto one equation. So we could have Xr\nhat, a Yr hat, a Zr hat.",
    "start": "2561140",
    "end": "2570980"
  },
  {
    "text": "That's now a matrix, right? Because in the\nrepresentation we're using, these are column vectors.",
    "start": "2570980",
    "end": "2576780"
  },
  {
    "text": "So this is a 3 by 3\nmatrix and the same",
    "start": "2576780",
    "end": "2589620"
  },
  {
    "text": "for the right-hand side. And I think you'll agree\nthat this single equation is",
    "start": "2589620",
    "end": "2594690"
  },
  {
    "text": "equivalent to these\nseparate equations. Because if I multiply the\nmatrix by that first vector,",
    "start": "2594690",
    "end": "2602670"
  },
  {
    "text": "I get the first vector\nover here and so on. So that makes the\nanswer trivial, right?",
    "start": "2602670",
    "end": "2609090"
  },
  {
    "text": "R is-- let's see, I\nneed to post-multiply.",
    "start": "2609090",
    "end": "2618330"
  },
  {
    "start": "2618330",
    "end": "2640860"
  },
  {
    "text": "Right. Because if I multiply both\nsides of that equation",
    "start": "2640860",
    "end": "2647030"
  },
  {
    "text": "up here by the inverse\nof this matrix,",
    "start": "2647030",
    "end": "2652250"
  },
  {
    "text": "it'll drop out over here. It's multiplied by its own\ninverse, so it gives identity.",
    "start": "2652250",
    "end": "2657380"
  },
  {
    "text": "And then over here on this\nside, I get this expression. Does the inverse exist?",
    "start": "2657380",
    "end": "2663200"
  },
  {
    "text": "We always ask that question. When does this fail? Well, it should. Because by construction,\nthose things",
    "start": "2663200",
    "end": "2670549"
  },
  {
    "text": "are orthogonal to each other. So you've got kind of\nan ideal case where the three columns\nof the matrix are",
    "start": "2670550",
    "end": "2676850"
  },
  {
    "text": "orthogonal to each\nother as opposed to being linearly dependent. That's the other extreme\nend of the spectrum.",
    "start": "2676850",
    "end": "2683800"
  },
  {
    "text": "OK, so there we are. We solved the problem.",
    "start": "2683800",
    "end": "2690720"
  },
  {
    "text": "So we said that, if we remove\ntranslation for the moment,",
    "start": "2690720",
    "end": "2697780"
  },
  {
    "text": "we have 3 degrees of\nfreedom left to find. And then we said, OK, we\nhave three correspondences",
    "start": "2697780",
    "end": "2703860"
  },
  {
    "text": "between the two\ncoordinate systems. So that sounds about\nright, three constraints, three unknowns.",
    "start": "2703860",
    "end": "2709800"
  },
  {
    "text": "But those constraints\nare much more powerful because they are not just\na scalar equals a scalar.",
    "start": "2709800",
    "end": "2715320"
  },
  {
    "text": "They are vector equals a vector. So each of them\nis worth 3 points. So we actually\nhave 9 constraints.",
    "start": "2715320",
    "end": "2723660"
  },
  {
    "text": "We're saying that point number\n1 transforms into point number 1 in the other system. Point number 2 transforms into--",
    "start": "2723660",
    "end": "2730290"
  },
  {
    "text": "and so on. And so each of those are\nvector equalities, you know? Rl of 1 is going to map\ninto Rr of 1 and so on.",
    "start": "2730290",
    "end": "2740320"
  },
  {
    "text": "So we have three\nvector equalities. Or if you like, how\nmuch constraint do you",
    "start": "2740320",
    "end": "2747599"
  },
  {
    "text": "need to pin a point down in 3D? Well, three constraints, right? You need x, y, and z or\nsome other three numbers,",
    "start": "2747600",
    "end": "2754980"
  },
  {
    "text": "like distances from three-- I don't know-- Wi-Fi\nrouters or something. You need three things.",
    "start": "2754980",
    "end": "2761289"
  },
  {
    "text": "So in this case, we've got 9. But wait a minute, rotation\nonly has 3 degrees of freedom. So what's going on?",
    "start": "2761290",
    "end": "2768360"
  },
  {
    "text": "It's excessive. So we don't need three points. We can just stop\nwith two, right?",
    "start": "2768360",
    "end": "2774630"
  },
  {
    "text": "Well, but we said with two\nwe just get the x-axis. And then the whole thing can\nstill rotate about the x-axis,",
    "start": "2774630",
    "end": "2781750"
  },
  {
    "text": "so that's not good enough. We do actually need all three. But what's going on is\nthat we are not using all",
    "start": "2781750",
    "end": "2788570"
  },
  {
    "text": "the information we get, right? So let's make a tally here.",
    "start": "2788570",
    "end": "2794220"
  },
  {
    "text": "So of the point number\n1, we are using all three of its components.",
    "start": "2794220",
    "end": "2801960"
  },
  {
    "text": "So this provides\nthree constraints. Then this one here, we're not\nusing the distance from 1 to 2.",
    "start": "2801960",
    "end": "2810670"
  },
  {
    "text": "We're only using the unit\nvector in that direction. So it's a direction.",
    "start": "2810670",
    "end": "2817270"
  },
  {
    "text": "So it's really\nproviding only two. And then this one\nhere is even worse. We're actually only using\none constraint from that.",
    "start": "2817270",
    "end": "2826930"
  },
  {
    "text": "And so the total is\n3 plus 2 plus 1 is 6. Oh, well, that includes\nthe translation.",
    "start": "2826930",
    "end": "2834450"
  },
  {
    "text": "So that explains some\nof what's going on, that this particular\nconstruction does give us",
    "start": "2834450",
    "end": "2843120"
  },
  {
    "text": "a rotation, but we're\nnot using the information from the points equally.",
    "start": "2843120",
    "end": "2848579"
  },
  {
    "text": "So we've made some\narbitrary decision. We picked number 1,\nand we're using all-- so that seems wrong, right?",
    "start": "2848580",
    "end": "2854820"
  },
  {
    "text": "Because I mean, who's\nto say which point's more important than another?",
    "start": "2854820",
    "end": "2859839"
  },
  {
    "text": "I mean, there might be\nweight associated with it because, when you\nmeasured them, you found one point that's\nreally distinctive",
    "start": "2859840",
    "end": "2865740"
  },
  {
    "text": "and you're very certain\nabout where it is. In some other matches,\nthat might not be so good. But that's a different issue.",
    "start": "2865740",
    "end": "2872520"
  },
  {
    "text": "OK, so that's one thing about\nthis that's less than optimal.",
    "start": "2872520",
    "end": "2879270"
  },
  {
    "text": "So another one is what if\nI picked this point first?",
    "start": "2879270",
    "end": "2885090"
  },
  {
    "text": "So this is my 1. And that's my two,\nand that's my 3. Will I get the same\ntransformation?",
    "start": "2885090",
    "end": "2891920"
  },
  {
    "text": "No, I won't get the\nsame transformation because I've selectively\nneglected information.",
    "start": "2891920",
    "end": "2898559"
  },
  {
    "text": "And now, I am selectively\nneglecting in a different way. I'm throwing away\nsomething else.",
    "start": "2898560",
    "end": "2905380"
  },
  {
    "text": "And so that also tells\nyou that this isn't ideal.",
    "start": "2905380",
    "end": "2910630"
  },
  {
    "text": "Now, in practice\nalso, we might be inclined to measure more\nthan three correspondences.",
    "start": "2910630",
    "end": "2916280"
  },
  {
    "text": "If we have these two\nLIDARs on the vehicle, they're giving us\nhundreds of points.",
    "start": "2916280",
    "end": "2921760"
  },
  {
    "text": "And there will be some error\nin all of those measurements. But again, as we know noted,\nif you have lots of points,",
    "start": "2921760",
    "end": "2929680"
  },
  {
    "text": "least squares or\nsome other method can dramatically\nimprove your accuracy",
    "start": "2929680",
    "end": "2935260"
  },
  {
    "text": "if you can make use of all\nof those correspondences. So this doesn't. It just uses three points.",
    "start": "2935260",
    "end": "2940420"
  },
  {
    "text": "And yeah, you could now repeat\nit picking three other points and do that lots of\ndifferent ways and averaging.",
    "start": "2940420",
    "end": "2946359"
  },
  {
    "text": "And that would be better, but\nit would be kludgy, ad hoc.",
    "start": "2946360",
    "end": "2951490"
  },
  {
    "text": "OK, so ad hoc method\nnumber one, it's-- and in some sense,\nthis might be a way",
    "start": "2951490",
    "end": "2959050"
  },
  {
    "text": "to go if you needed\nan initial guess or if you needed a\nreally rough answer.",
    "start": "2959050",
    "end": "2965830"
  },
  {
    "text": "Say you had a more precise-- so this could be like pat\nquick and pat max where",
    "start": "2965830",
    "end": "2971020"
  },
  {
    "text": "you use one to give you a\nfast approximate answer, and then you use that as\ninitial condition for something",
    "start": "2971020",
    "end": "2979300"
  },
  {
    "text": "else that gives you a\nmore precise answer. OK, so here's method number two.",
    "start": "2979300",
    "end": "2985740"
  },
  {
    "start": "2985740",
    "end": "2990910"
  },
  {
    "text": "And we briefly talked\nabout this in 2D, so let me just refresh your\nmemory because we didn't really",
    "start": "2990910",
    "end": "2996730"
  },
  {
    "text": "spend a lot of time on it. The idea was that we had some\nsort of blob, a binary image.",
    "start": "2996730",
    "end": "3004410"
  },
  {
    "text": "And we're trying to make some\nmeasurement on it that could",
    "start": "3004410",
    "end": "3010140"
  },
  {
    "text": "help us identify or align. And we said that one\nway of doing that",
    "start": "3010140",
    "end": "3017250"
  },
  {
    "text": "is to look at the axis\nof inertia, right?",
    "start": "3017250",
    "end": "3024100"
  },
  {
    "text": "So if I have a cloud\nof points as opposed to some binary image, I\ncan do the same thing.",
    "start": "3024100",
    "end": "3032690"
  },
  {
    "text": "I can find the axes\nabout which the-- oh, wrong way around.",
    "start": "3032690",
    "end": "3039250"
  },
  {
    "text": "Excuse me-- minimum\naxis, maximum. So why do I know\nthat's the minimum?",
    "start": "3039250",
    "end": "3044950"
  },
  {
    "text": "Well, because the\ninertia depends on the integral of the distance\nsquared times the mass.",
    "start": "3044950",
    "end": "3055569"
  },
  {
    "text": " Let me put r. ",
    "start": "3055570",
    "end": "3063880"
  },
  {
    "text": "And so about this axis, these\ndistances are all very short.",
    "start": "3063880",
    "end": "3069170"
  },
  {
    "text": "So the sum of squares\nof those distances is going to be\nsmall, whereas about this axis at right angles, a\nlot of the distances are large.",
    "start": "3069170",
    "end": "3077140"
  },
  {
    "text": "So I'm going to\nget a huge inertia. And you can show that they\nhave to be at right angles to each other.",
    "start": "3077140",
    "end": "3082880"
  },
  {
    "text": "And you can show that\nyou can find them by finding the eigenvectors and\neigenvalues of a 2 by 2 matrix.",
    "start": "3082880",
    "end": "3090839"
  },
  {
    "text": "OK-- so 2D. Let's go to 3D\nwith the same idea.",
    "start": "3090840",
    "end": "3097270"
  },
  {
    "text": "So there's some object in\nspace, a bunch of points. ",
    "start": "3097270",
    "end": "3105320"
  },
  {
    "text": "So we've identified\nthese points in a way that we can find them\nagain in another image.",
    "start": "3105320",
    "end": "3112930"
  },
  {
    "text": "Now, we're trying to\nestablish a coordinate system. Because we know that, once\nwe've got a coordinate system",
    "start": "3112930",
    "end": "3118930"
  },
  {
    "text": "in the left data\nand the right data, we just have to correlate\nthose two coordinate systems.",
    "start": "3118930",
    "end": "3124029"
  },
  {
    "text": "And over there,\nwe use that method to find a coordinate system. But we could also look for\naxis of minimum inertia in 3D",
    "start": "3124030",
    "end": "3134619"
  },
  {
    "text": "just as we do in 2D.  And in 3D, we're then\nalso going to find",
    "start": "3134620",
    "end": "3142200"
  },
  {
    "text": "that there's a\nperpendicular axis that has a maximum inertia.",
    "start": "3142200",
    "end": "3148319"
  },
  {
    "text": "And the difference about 3D\nis that there's a third axis, which is a saddle point.",
    "start": "3148320",
    "end": "3155580"
  },
  {
    "text": "So if you move the\naxis in one direction, the inertia gets bigger\nin a quadratic way.",
    "start": "3155580",
    "end": "3163620"
  },
  {
    "text": "And if you move it in another\ndirection at right angles, the inertia gets smaller\nin a quadratic way.",
    "start": "3163620",
    "end": "3168940"
  },
  {
    "text": "So it's sort of like that,\nkind of hard to draw. But here's the\nsaddle point axis.",
    "start": "3168940",
    "end": "3178330"
  },
  {
    "text": "And then if you move\nit in this direction, the inertia goes down,\nsame on this side.",
    "start": "3178330",
    "end": "3184890"
  },
  {
    "text": "But then if you move\nit at right angles, the inertia goes up quadratic.",
    "start": "3184890",
    "end": "3190500"
  },
  {
    "text": "Anyway, so if we can figure\nout what those axes are,",
    "start": "3190500",
    "end": "3201765"
  },
  {
    "text": "we should be-- well, let's do the math. It's not that hard.",
    "start": "3201765",
    "end": "3207190"
  },
  {
    "text": "OK, so what we're\nlooking for is expression for the distance from the axis.",
    "start": "3207190",
    "end": "3213640"
  },
  {
    "text": "Because, again, the inertia is\nthe integral of that distance",
    "start": "3213640",
    "end": "3221589"
  },
  {
    "text": "squared over the object. ",
    "start": "3221590",
    "end": "3230620"
  },
  {
    "text": "OK. So that means we need to\nfigure out a formula for--",
    "start": "3230620",
    "end": "3237120"
  },
  {
    "text": " so this is the\npoint r, vector r.",
    "start": "3237120",
    "end": "3243190"
  },
  {
    "text": "And here's the axes. And we need to\nfind that distance.",
    "start": "3243190",
    "end": "3248590"
  },
  {
    "text": "Now, I'm going to\ncheat a little bit because I'm going to pick\nthe centroid as the origin,",
    "start": "3248590",
    "end": "3256780"
  },
  {
    "text": "same trick. I want to separate\nthe problem of finding the translation from the\nproblem of finding the rotation.",
    "start": "3256780",
    "end": "3262450"
  },
  {
    "text": "And we know in 2D\nthat the answer is that it goes\nthrough the centroid.",
    "start": "3262450",
    "end": "3270190"
  },
  {
    "text": "And then we had\nthat formula with-- we knew the sine and\nthe cosine of the angle, so we could compute the angle.",
    "start": "3270190",
    "end": "3277390"
  },
  {
    "text": "OK, so we're going to do\nthe same thing here in 3D. ",
    "start": "3277390",
    "end": "3290220"
  },
  {
    "text": "Let me blow up that\npicture a little bit. So this is the distance r. This is our vector r.",
    "start": "3290220",
    "end": "3295410"
  },
  {
    "text": "This is our axis. Let's call it omega hat is\nthe direction of the axis.",
    "start": "3295410",
    "end": "3301890"
  },
  {
    "text": "And here is r prime. We drop it perpendicular\non the axis.",
    "start": "3301890",
    "end": "3308860"
  },
  {
    "text": "And what we want to know is the\ndistance between r and r prime. So what is r prime?",
    "start": "3308860",
    "end": "3314595"
  },
  {
    "text": " So let's see, we need to\nfind the component of r",
    "start": "3314595",
    "end": "3324640"
  },
  {
    "text": "in the direction omega. ",
    "start": "3324640",
    "end": "3330570"
  },
  {
    "text": "OK, that's that component. And we're going to\nsubtract that out. ",
    "start": "3330570",
    "end": "3337900"
  },
  {
    "text": "No, I'm already one step ahead. Let me say r prime is just\nr projected onto omega.",
    "start": "3337900",
    "end": "3347650"
  },
  {
    "text": "And this is actually\nour r minus r prime. So this is the length\nwe're looking for.",
    "start": "3347650",
    "end": "3356180"
  },
  {
    "text": "OK, and so we need r squared. ",
    "start": "3356180",
    "end": "3371060"
  },
  {
    "text": "Don't worry too much\nabout this algebra because we won't be\nusing this again. But at least try and follow it,\nand tell me when I screw up.",
    "start": "3371060",
    "end": "3387720"
  },
  {
    "text": "So if I multiply this\nout, I get r dot r.",
    "start": "3387720",
    "end": "3393500"
  },
  {
    "text": "And then I get minus 2 r\ndot omega hat squared plus r",
    "start": "3393500",
    "end": "3401990"
  },
  {
    "text": "dot omega hat squared. That's because there's an\nomega hat dot omega hat.",
    "start": "3401990",
    "end": "3409700"
  },
  {
    "text": "This is a unit vector,\nso that's just a 1. So I can just forget about that. Well, and since the two\nthings have the same form,",
    "start": "3409700",
    "end": "3421150"
  },
  {
    "text": "so I end up with r dot r\nminus r dot omega hat squared.",
    "start": "3421150",
    "end": "3429789"
  },
  {
    "text": "So that's my distance\nfrom the axis. So that's what's in the\nformula for inertia.",
    "start": "3429790",
    "end": "3436210"
  },
  {
    "text": "And so I'm going to then\nsay that the inertia-- ",
    "start": "3436210",
    "end": "3452600"
  },
  {
    "text": "and what I'm\ninterested in is how that varies as I change omega. So omega says, unit vector,\nthey can point in any direction.",
    "start": "3452600",
    "end": "3459859"
  },
  {
    "text": "And I'm looking\nfor the directions where that value takes on\nan extreme one or maybe",
    "start": "3459860",
    "end": "3466310"
  },
  {
    "text": "a saddle point. But starting off with\njust the minimum, I want to find\nwhere the minimum.",
    "start": "3466310",
    "end": "3472400"
  },
  {
    "text": "And, well, that doesn't\nlook particularly simple,",
    "start": "3472400",
    "end": "3478910"
  },
  {
    "text": "but we can rewrite this. So first of all, let me\ntake this and rewrite it.",
    "start": "3478910",
    "end": "3485910"
  },
  {
    "text": "Now, dot products\nare commutative. So I can write it this way.",
    "start": "3485910",
    "end": "3494940"
  },
  {
    "text": "I can write that. And then we have this\nnotation where we write",
    "start": "3494940",
    "end": "3500099"
  },
  {
    "text": "the dot product in that form. ",
    "start": "3500100",
    "end": "3506430"
  },
  {
    "text": "And these multiplications\nof the skinny matrices are associative, so I can\nwrite it that way if I want to.",
    "start": "3506430",
    "end": "3515850"
  },
  {
    "text": "And this, of course, is the\ndyadic product, which we've run into a few times before. It's a 3 by 3 matrix, a\nvery simple structure.",
    "start": "3515850",
    "end": "3526350"
  },
  {
    "text": "OK, now for my next step, I'd\nlike to rewrite this also.",
    "start": "3526350",
    "end": "3533400"
  },
  {
    "text": "So I'm going to say\nthat's the same as r dot r into omega dot omega.",
    "start": "3533400",
    "end": "3538890"
  },
  {
    "text": "Well, in fact, you know,\nI had this over here. I just dropped the omega\ndot omega because it's 1,",
    "start": "3538890",
    "end": "3544200"
  },
  {
    "text": "but let me put it back in again. OK, then that is r\ntranspose r omega transpose.",
    "start": "3544200",
    "end": "3555779"
  },
  {
    "start": "3555780",
    "end": "3564460"
  },
  {
    "text": "Oh, sorry. So we're going to do the\ndouble integral of that-- the triple integral of that.",
    "start": "3564460",
    "end": "3571330"
  },
  {
    "text": "And so that I can\nwrite as r dot r into--",
    "start": "3571330",
    "end": "3576495"
  },
  {
    "start": "3576495",
    "end": "3583740"
  },
  {
    "text": "this I is the identity matrix. And I wrote the inertia\nwith the blackboard bold I,",
    "start": "3583740",
    "end": "3591300"
  },
  {
    "text": "so that it wouldn't\nget confused with this. OK. So now, I've got the whole thing\nis omega transpose times omega.",
    "start": "3591300",
    "end": "3605019"
  },
  {
    "text": "And I have two terms. I have this thing, which\nis the identity matrix--",
    "start": "3605020",
    "end": "3612400"
  },
  {
    "text": "the integral of r dot r\ntimes the identity matrix.",
    "start": "3612400",
    "end": "3618980"
  },
  {
    "text": "And then I have this thing,\nwhich is rr transpose.",
    "start": "3618980",
    "end": "3624990"
  },
  {
    "text": "So given the points, I can-- well, I've written\nit as an integral.",
    "start": "3624990",
    "end": "3631940"
  },
  {
    "text": "Of course, if we have a\nfinite number of points, it would be just a sum. So this first part is\njust an identity matrix",
    "start": "3631940",
    "end": "3639880"
  },
  {
    "text": "multiplied by some scalar. And this is a dyadic product. And so, what I'm looking\nfor is an extremum--",
    "start": "3639880",
    "end": "3651960"
  },
  {
    "text": "of that whole expression. ",
    "start": "3651960",
    "end": "3657750"
  },
  {
    "text": "Now, I've run out of\ndifferent versions of i. So I don't know,\nlet me call it A.",
    "start": "3657750",
    "end": "3664710"
  },
  {
    "text": "So we have something\nof this form. ",
    "start": "3664710",
    "end": "3670790"
  },
  {
    "text": "And I'm looking for,\nlet's say, a minimum. ",
    "start": "3670790",
    "end": "3676910"
  },
  {
    "text": "And even though it says A, this\nis called the inertia matrix.",
    "start": "3676910",
    "end": "3683119"
  },
  {
    "text": "So given some\nthree-dimensional shape, I can compute this 3\nby 3 inertia matrix.",
    "start": "3683120",
    "end": "3689060"
  },
  {
    "text": "Or given a cloud of points in\n3D, I can compute this matrix.",
    "start": "3689060",
    "end": "3694280"
  },
  {
    "text": "This is just a detail of how\nto do it from the points.",
    "start": "3694280",
    "end": "3699930"
  },
  {
    "text": "And so what is that problem? Well, that's just the classic\neigenvalue eigenvector problem,",
    "start": "3699930",
    "end": "3709970"
  },
  {
    "text": "right? The axis I want for\nthe minimization is the eigenvalue associated\nwith the smallest eigenvalue,",
    "start": "3709970",
    "end": "3719650"
  },
  {
    "text": "obviously. And then I can look for,\nalso, the other axis that maximizes it.",
    "start": "3719650",
    "end": "3725710"
  },
  {
    "text": "And that's the\neigenvector corresponding to the largest eigenvalue. And then there's a third\none, which is in between.",
    "start": "3725710",
    "end": "3733240"
  },
  {
    "text": "And those three axes are at\nright angles to each other.",
    "start": "3733240",
    "end": "3740680"
  },
  {
    "text": "In some nasty\ncases, they're not, but we can make them in\nthat case at right angles",
    "start": "3740680",
    "end": "3746020"
  },
  {
    "text": "to each other. So it's a very simple\neigenvalue eigenvector problem.",
    "start": "3746020",
    "end": "3751090"
  },
  {
    "text": "Now, finding eigenvalues and\neigenvectors of 3 by 3 matrices is a little bit more work than\n2 by 2, which we did by hand.",
    "start": "3751090",
    "end": "3757990"
  },
  {
    "text": "But of course, you know,\nyou've got all sorts of tools for doing this kind of stuff. And there is actually\na closed form solution.",
    "start": "3757990",
    "end": "3764830"
  },
  {
    "text": "Why? Well, because polynomials\nof degree 3 do have a closed form solution\neven though we generally",
    "start": "3764830",
    "end": "3771790"
  },
  {
    "text": "only remember the\nformula for quadratic. ",
    "start": "3771790",
    "end": "3777730"
  },
  {
    "text": "OK, so what are we doing? So what we've done now\nis we've taken the point",
    "start": "3777730",
    "end": "3783520"
  },
  {
    "text": "cloud in the left\ncoordinate system, and we've built a coordinate\nsystem basis in it.",
    "start": "3783520",
    "end": "3790690"
  },
  {
    "text": "We've got three axes that are\nat right angles to each other and just based on the\ndistribution of points.",
    "start": "3790690",
    "end": "3797480"
  },
  {
    "text": "And so we have a left-hand\ncoordinate system",
    "start": "3797480",
    "end": "3803830"
  },
  {
    "text": "based on these three vectors,\nthe ones that minimize, the ones that maximize, and\nthe ones at right angle,",
    "start": "3803830",
    "end": "3811180"
  },
  {
    "text": "that saddle point. Now, we do the same thing\nfor the right-hand coordinate system, same\nconstruction, right?",
    "start": "3811180",
    "end": "3821120"
  },
  {
    "text": "If there's an\nelongated point cloud, the x-axis is going to be\nalong the length of that cloud",
    "start": "3821120",
    "end": "3826400"
  },
  {
    "text": "and so on. And then we just use the\nmethod we had before.",
    "start": "3826400",
    "end": "3832430"
  },
  {
    "text": "I guess it's gone,\nbut the same method we used for method number one.",
    "start": "3832430",
    "end": "3838369"
  },
  {
    "text": "And that gives us\nthen another way of relating the two\ncoordinate systems",
    "start": "3838370",
    "end": "3845780"
  },
  {
    "text": "or relating the two\npositions of the object because those problems\nare duels to each other.",
    "start": "3845780",
    "end": "3852380"
  },
  {
    "text": "So this sounds a little\nbit more reasonable. Because first of all, it\ntreats all the points equally.",
    "start": "3852380",
    "end": "3858579"
  },
  {
    "text": "They are all thrown into\nthe pot into these sums. We're not picking one and\nusing all of its information",
    "start": "3858580",
    "end": "3865450"
  },
  {
    "text": "and only using a little\nbit of the second point. Also, we're using\nall the points.",
    "start": "3865450",
    "end": "3872650"
  },
  {
    "text": "And we've constructed a least\nsquares problem that performs some sort of minimization.",
    "start": "3872650",
    "end": "3878290"
  },
  {
    "text": "So we're using\nall of the points.  So what's the problem?",
    "start": "3878290",
    "end": "3886030"
  },
  {
    "text": "Why is this not generally used? Well, for certain\nkinds of problems,",
    "start": "3886030",
    "end": "3894070"
  },
  {
    "text": "like lining up cryogenic\nelectron microscope images,",
    "start": "3894070",
    "end": "3899950"
  },
  {
    "text": "this is fine. This works. It's not always ideal.",
    "start": "3899950",
    "end": "3905420"
  },
  {
    "text": "And one reason is that\nit fails on the symmetry. ",
    "start": "3905420",
    "end": "3913230"
  },
  {
    "text": "Well, suppose I have a sphere. It doesn't have a minimum\nmaximum and saddle point axis",
    "start": "3913230",
    "end": "3922559"
  },
  {
    "text": "because its inertia about\nany axis is the same. And then you might say,\nwell, that's not fair.",
    "start": "3922560",
    "end": "3931330"
  },
  {
    "text": "Sphere is completely\nsymmetrical, so we have to accept that. So we might grudgingly\nsay, OK, so it",
    "start": "3931330",
    "end": "3939550"
  },
  {
    "text": "doesn't work for a sphere,\nbut that's sort of reasonable. Well, what if I told you that,\nif I give it a tetrahedron,",
    "start": "3939550",
    "end": "3948240"
  },
  {
    "text": "it also won't work? It turns out, if you\ncompute it's inertia matrix,",
    "start": "3948240",
    "end": "3954270"
  },
  {
    "text": "it's inertia is the\nsame in all directions and the same with\nthe octahedron.",
    "start": "3954270",
    "end": "3962510"
  },
  {
    "text": "So these are just special cases. I mean, there are obviously\nan infinite number of figures that have that problem.",
    "start": "3962510",
    "end": "3968510"
  },
  {
    "text": "Again, the inertia of\nthis, surprisingly, is independent of the direction.",
    "start": "3968510",
    "end": "3974990"
  },
  {
    "text": "Even more surprising,\nif I take a cube, now you'd think with\na cube-- you know,",
    "start": "3974990",
    "end": "3981440"
  },
  {
    "text": "there are three\nwell-defined axes. So what's going on there? Well, the trouble is that\nthe inertia about those three",
    "start": "3981440",
    "end": "3987260"
  },
  {
    "text": "well-defined axes are all\nthe same if it's a cube. If it's a brick, then you're\nfine because the three axes",
    "start": "3987260",
    "end": "3995049"
  },
  {
    "text": "will have different inertias. And you can line\nthings up that way. ",
    "start": "3995050",
    "end": "4002040"
  },
  {
    "text": "But with the cube, again\nsomewhat surprisingly, you can pick any axis, you\nget the same inertia.",
    "start": "4002040",
    "end": "4008970"
  },
  {
    "text": " OK, so what's going on?",
    "start": "4008970",
    "end": "4014089"
  },
  {
    "text": "What have we lost? What have we forgotten? Well, we haven't used\nall the correspondences.",
    "start": "4014090",
    "end": "4019369"
  },
  {
    "text": " Well, in this particular\nad hoc method,",
    "start": "4019370",
    "end": "4025760"
  },
  {
    "text": "we have taken a point cloud. And we've sort of\nfound its elongation and we've built these\nother axes without thinking",
    "start": "4025760",
    "end": "4033320"
  },
  {
    "text": "about the other\npoint cloud at all. Then we've done the same thing\nfor the other point cloud.",
    "start": "4033320",
    "end": "4039380"
  },
  {
    "text": "But we actually-- assuming that\nwe know the correspondences. So we know that this point is\nhere and that point is there.",
    "start": "4039380",
    "end": "4047720"
  },
  {
    "text": "And that's a very\ndifferent problem, right?",
    "start": "4047720",
    "end": "4052910"
  },
  {
    "text": "Because even with a sphere,\nI can line these up correctly if I have the correspondences.",
    "start": "4052910",
    "end": "4059690"
  },
  {
    "text": "So this is kind of\na two-edged sword because we'll see that there\nare some methods that don't depend on correspondences.",
    "start": "4059690",
    "end": "4066330"
  },
  {
    "text": "They're very handy. They're very appealing. Because if you screw\nup the correspondences,",
    "start": "4066330",
    "end": "4072799"
  },
  {
    "text": "they're not going\nto be affected. On the other hand, you often\nrun into this type of problem",
    "start": "4072800",
    "end": "4078980"
  },
  {
    "text": "where the method won't\ngive you an answer because of some symmetry.",
    "start": "4078980",
    "end": "4084110"
  },
  {
    "text": "And so they're generally\nnot as accurate as methods that do take into account--",
    "start": "4084110",
    "end": "4091339"
  },
  {
    "text": "OK. So enough of these\nad hoc methods. I bring them up partly\nbecause people actually use",
    "start": "4091340",
    "end": "4097520"
  },
  {
    "text": "them and often don't know that\nthere's a problem with them. That's one reason. And the other reason\nis that sometimes these",
    "start": "4097520",
    "end": "4105350"
  },
  {
    "text": "are useful to give a quick\nanswer, and it's systematic.",
    "start": "4105350",
    "end": "4110479"
  },
  {
    "text": "I mean, there's no iteration\nor search or anything. You just compute the\neigenvalues and eigenvectors,",
    "start": "4110479",
    "end": "4116930"
  },
  {
    "text": "which, for a 3 by 3, is\nbasically a closed form operation.",
    "start": "4116930",
    "end": "4122330"
  },
  {
    "text": "OK, so let's go back. So the problem is\nnot the translation. The translation is going to\nbe pretty easy to deal with.",
    "start": "4122330",
    "end": "4128939"
  },
  {
    "text": "So let's focus on the rotation. So generally speaking, we have\na bunch of different methods",
    "start": "4128939",
    "end": "4136489"
  },
  {
    "text": "of representing rotations. So let's, first of all,\nlook at the properties. ",
    "start": "4136490",
    "end": "4146680"
  },
  {
    "text": "OK, preserve dot\nproducts, that means--",
    "start": "4146680",
    "end": "4155950"
  },
  {
    "start": "4155950",
    "end": "4162000"
  },
  {
    "text": "right? That's sort of obvious. And that has two\nsort of corollaries.",
    "start": "4162000",
    "end": "4167689"
  },
  {
    "text": "One of them is that\npreserve length,",
    "start": "4167689",
    "end": "4174420"
  },
  {
    "text": "which is just what you get\nif you make a the same as b.",
    "start": "4174420",
    "end": "4181140"
  },
  {
    "start": "4181140",
    "end": "4186640"
  },
  {
    "text": "And they preserve angles, right?",
    "start": "4186640",
    "end": "4191770"
  },
  {
    "text": "Because, for example--\nand what's interesting",
    "start": "4191770",
    "end": "4211190"
  },
  {
    "text": "is they also preserve\ntriple products, so R of a.",
    "start": "4211190",
    "end": "4222640"
  },
  {
    "start": "4222640",
    "end": "4233930"
  },
  {
    "text": "Now, the triple product\nof the three vectors is just the volume\nof the parallelepiped",
    "start": "4233930",
    "end": "4240409"
  },
  {
    "text": "that you draw based on\nsuppose this is vector a.",
    "start": "4240410",
    "end": "4246250"
  },
  {
    "text": "This is vector b. This is vector c. You can imagine drawing this\nthree-dimensional shape, which",
    "start": "4246250",
    "end": "4253810"
  },
  {
    "text": "has parallel surfaces. But it's generally not a brick. It's skewed generally.",
    "start": "4253810",
    "end": "4260710"
  },
  {
    "text": "And this is the\nvolume of that object. ",
    "start": "4260710",
    "end": "4267680"
  },
  {
    "text": "And now, imagine taking\nthose three vectors and rotating them all\nwith the same rotation.",
    "start": "4267680",
    "end": "4273830"
  },
  {
    "text": "Well, that just\nrotates this figure. And it'll retain\nits volume, right?",
    "start": "4273830",
    "end": "4278960"
  },
  {
    "text": "And that's this quantity. So that makes sense. What's important is that\nit doesn't flip sign.",
    "start": "4278960",
    "end": "4285590"
  },
  {
    "text": "If we had replaced that\nrotation by a reflection, that triple product\nwould have flipped sign.",
    "start": "4285590",
    "end": "4292850"
  },
  {
    "text": "And you would say, well,\nwhat's a negative volume? Well, it just means\nthat you don't have the vectors in the\nsequence of the right-hand rule.",
    "start": "4292850",
    "end": "4302650"
  },
  {
    "text": "You have a left-hand rule. So you know, I was talking\nabout reflection in the ground",
    "start": "4302650",
    "end": "4308320"
  },
  {
    "text": "reversing z. Well, obviously now, if I\ntake that triple product--",
    "start": "4308320",
    "end": "4314480"
  },
  {
    "text": "I suppose I should write\nit out, a dot b cross c. ",
    "start": "4314480",
    "end": "4321730"
  },
  {
    "text": "And if I flip the\nsign of one of these, I'm going to get\na negative sign.",
    "start": "4321730",
    "end": "4327170"
  },
  {
    "text": "So when I say volume,\nwe should really take into account the\nsign so that the magnitude",
    "start": "4327170",
    "end": "4336010"
  },
  {
    "text": "of that triple product\nis the actual volume. And the sign of it\ntells you whether it's",
    "start": "4336010",
    "end": "4341380"
  },
  {
    "text": "been flipped from left-hand to\nright-hand coordinate system. ",
    "start": "4341380",
    "end": "4348230"
  },
  {
    "text": "While I have this here,\nlet me just make sure we understand that there are a\nlarge number of equivalent ways",
    "start": "4348230",
    "end": "4355250"
  },
  {
    "text": "of writing the triple product. So in terms of our earlier\ndiscussion, all of this",
    "start": "4355250",
    "end": "4364639"
  },
  {
    "text": "corresponds to orthonormality. And this corresponds to that\ncondition about the determinant",
    "start": "4364640",
    "end": "4375610"
  },
  {
    "text": "being greater than 1. OK, so those are all the\nproperties we need to proceed.",
    "start": "4375610",
    "end": "4384230"
  },
  {
    "text": "So now, we set it up as\na least squares problem. We've got correspondences\nbetween vectors measured",
    "start": "4384230",
    "end": "4393580"
  },
  {
    "text": "in the two coordinate systems. Then we're trying to find the\ntransformation between them.",
    "start": "4393580",
    "end": "4400200"
  },
  {
    "text": " to find some sort of error. ",
    "start": "4400200",
    "end": "4416090"
  },
  {
    "text": "OK, do I want to start\nwith the [INAUDIBLE]?? Oh, OK. So we get rr. ",
    "start": "4416090",
    "end": "4423530"
  },
  {
    "text": "So that's the transformation\nwe're dealing with. And we can then define an\nerror for the i-th point.",
    "start": "4423530",
    "end": "4443115"
  },
  {
    "start": "4443115",
    "end": "4449350"
  },
  {
    "text": "And of course, what we're trying\nto do is minimize that error. ",
    "start": "4449350",
    "end": "4457860"
  },
  {
    "text": "And what we have to choose is\nthe offset and the rotation.",
    "start": "4457860",
    "end": "4464150"
  },
  {
    "text": " OK, so again, we're arbitrarily\npicking the left coordinate",
    "start": "4464150",
    "end": "4474720"
  },
  {
    "text": "system and mapping it into\nthe right coordinate system and then comparing\nthe result. And they",
    "start": "4474720",
    "end": "4482760"
  },
  {
    "text": "should be the same, ideally. There will be some\nsmall error in practice. So we're trying to make that\nerror as small as possible.",
    "start": "4482760",
    "end": "4489120"
  },
  {
    "text": "And we try and\nfind the parameters of the transformation by\nminimizing that error.",
    "start": "4489120",
    "end": "4496590"
  },
  {
    "text": "OK, now since I\nknow the answer, I can transform things in a way\nthat simplifies the problem.",
    "start": "4496590",
    "end": "4505755"
  },
  {
    "start": "4505755",
    "end": "4522960"
  },
  {
    "text": "So I just take all\nof the coordinates in the left-hand\ncoordinate system, add them up, divide by\nn to get the centroid.",
    "start": "4522960",
    "end": "4529320"
  },
  {
    "text": "And I do the same in the\nright-hand coordinate system. And I pick those as\nthe origins, basically.",
    "start": "4529320",
    "end": "4534480"
  },
  {
    "text": "So I'm going to\nsubtract out that--",
    "start": "4534480",
    "end": "4540510"
  },
  {
    "start": "4540510",
    "end": "4559070"
  },
  {
    "text": "OK. And this is in\nline with the idea that I want to separate\nthe problem of finding",
    "start": "4559070",
    "end": "4565120"
  },
  {
    "text": "the translation from\nfinding the rotation. So this way I'm going to\nget rid of the translation.",
    "start": "4565120",
    "end": "4571000"
  },
  {
    "text": "We'll worry about it later. It's very simple. OK, by the way,\nwhile we're here,",
    "start": "4571000",
    "end": "4580120"
  },
  {
    "text": "we might wonder what that is. So I've changed\nall the coordinates",
    "start": "4580120",
    "end": "4586090"
  },
  {
    "text": "to be relative to the centroid. Now, I take them\nall and add them up. What do I get?",
    "start": "4586090",
    "end": "4592740"
  },
  {
    "text": "Well, you could\nplug this in here,",
    "start": "4592740",
    "end": "4597830"
  },
  {
    "text": "and you're going to\nget n copies of that. And you get the sum of these.",
    "start": "4597830",
    "end": "4603230"
  },
  {
    "text": "And then you look\nat that formula. And when you divide by n,\nthey all cancel out, right?",
    "start": "4603230",
    "end": "4608960"
  },
  {
    "text": " And it's a vector.",
    "start": "4608960",
    "end": "4614400"
  },
  {
    "text": "So one feature of moving\nthrough the centroid is that now the\ncentroid's at the origin",
    "start": "4614400",
    "end": "4621860"
  },
  {
    "text": "of in new coordinates. That makes sense, right-- and similarly for the other one.",
    "start": "4621860",
    "end": "4627770"
  },
  {
    "text": "And we need this property\nin the second cell. OK. ",
    "start": "4627770",
    "end": "4647550"
  },
  {
    "text": "So I'm going to plug these\nnew coordinates into my error formula.",
    "start": "4647550",
    "end": "4653980"
  },
  {
    "text": "So to do that, I need to solve\nthis equation for r sub ri.",
    "start": "4653980",
    "end": "4659640"
  },
  {
    "text": "Well, it's hardly\nworth writing out. It's just moving this\nto the other side.",
    "start": "4659640",
    "end": "4665680"
  },
  {
    "text": "And if I make those\nsubstitutions, then I get this where the\noffset now is different.",
    "start": "4665680",
    "end": "4674580"
  },
  {
    "start": "4674580",
    "end": "4682470"
  },
  {
    "text": "And so my new problem is-- ",
    "start": "4682470",
    "end": "4710220"
  },
  {
    "text": "so there's a square. And I can multiply these out,\nbut I'm going to group them.",
    "start": "4710220",
    "end": "4716800"
  },
  {
    "text": "So I'm going to treat\nthis as the difference of that thing and that thing\nand then undo the square.",
    "start": "4716800",
    "end": "4724560"
  },
  {
    "text": "And I get-- now, there are\nother ways to get here.",
    "start": "4724560",
    "end": "4730940"
  },
  {
    "text": "You can differentiate with\nrespect to the translation,",
    "start": "4730940",
    "end": "4736620"
  },
  {
    "text": "but I think this is\nthe most obvious. ",
    "start": "4736620",
    "end": "4755680"
  },
  {
    "text": "OK. Now, over here, this\nwhole center term",
    "start": "4755680",
    "end": "4762920"
  },
  {
    "text": "goes away because it involves\nthe sum of r of sub ri.",
    "start": "4762920",
    "end": "4768410"
  },
  {
    "text": "That's 0, right? And then it involves the sum\nof the rotated version of r sub",
    "start": "4768410",
    "end": "4776825"
  },
  {
    "text": "li. And we know that sum is\ngoing to be 0 as well.",
    "start": "4776825",
    "end": "4782340"
  },
  {
    "text": "So this whole term disappears. So that makes life\na lot simpler. ",
    "start": "4782340",
    "end": "4791720"
  },
  {
    "text": "OK, so then the\nnext question is, what should we choose for the\noffset for the translation r0.",
    "start": "4791720",
    "end": "4801440"
  },
  {
    "text": "Well, this term doesn't depend\non the translation at all. So forget about that\none for the moment.",
    "start": "4801440",
    "end": "4808409"
  },
  {
    "text": "This one does. It depends on the square of it. So how do we make it\nas small as possible? ",
    "start": "4808410",
    "end": "4816389"
  },
  {
    "text": "0, right? ",
    "start": "4816390",
    "end": "4822160"
  },
  {
    "text": "So now, you can see\na couple of things.",
    "start": "4822160",
    "end": "4827620"
  },
  {
    "text": "One of them is over here we find\nthat the optimum solution has",
    "start": "4827620",
    "end": "4836500"
  },
  {
    "text": "r0 prime 0, which means\nthat this is the case. r0 is-- so this is the\nformula for the translation.",
    "start": "4836500",
    "end": "4856380"
  },
  {
    "text": "Now, of course, right\nnow, we can't use it because we don't know\nwhat the rotation is.",
    "start": "4856380",
    "end": "4861420"
  },
  {
    "text": "So we don't know what big R is. But it's very intuitive. It says that the translation\nis the difference between where",
    "start": "4861420",
    "end": "4868530"
  },
  {
    "text": "the centroid is in the\nright coordinate system and where the left\ncoordinate system centroid",
    "start": "4868530",
    "end": "4873989"
  },
  {
    "text": "is after you rotate it. So the centroid maps\ninto the centroid. ",
    "start": "4873990",
    "end": "4886750"
  },
  {
    "text": "So we've accomplished\none objective, which is to separate the\nproblem of finding translation",
    "start": "4886750",
    "end": "4894670"
  },
  {
    "text": "from the problem of\nfinding rotation.  And then we have\na formula there.",
    "start": "4894670",
    "end": "4901390"
  },
  {
    "text": "If we ever find the rotation,\nwe just go back to that formula, plug it in to find\nthe translation.",
    "start": "4901390",
    "end": "4908410"
  },
  {
    "text": " OK. And then what's left is--",
    "start": "4908410",
    "end": "4917449"
  },
  {
    "text": "so basically, that gets\nrid of this term as well. So that's gone. So we're left with this part\nand only worry about rotation.",
    "start": "4917450",
    "end": "4931080"
  },
  {
    "text": "So our job is to find-- ",
    "start": "4931080",
    "end": "4940600"
  },
  {
    "text": "so our new error-- ",
    "start": "4940600",
    "end": "4950680"
  },
  {
    "text": "right? That's just that error term. And we're now going to minimize.",
    "start": "4950680",
    "end": "4956020"
  },
  {
    "text": " And that means-- and I'm\njust taking this term",
    "start": "4956020",
    "end": "4989250"
  },
  {
    "text": "and squaring it. I suppose I can\nwrite this out here. This is dot.",
    "start": "4989250",
    "end": "5001449"
  },
  {
    "text": "So I'm just expanding this out. ",
    "start": "5001450",
    "end": "5007890"
  },
  {
    "text": "And so from the first two terms\nhere, dot product of these two",
    "start": "5007890",
    "end": "5015650"
  },
  {
    "text": "gives me that. And then I have the dot\nproduct of that with this.",
    "start": "5015650",
    "end": "5021860"
  },
  {
    "text": "That gives me this part,\nwhich occurs twice. And then, finally, I\nhave the dot product",
    "start": "5021860",
    "end": "5027800"
  },
  {
    "text": "of these last things. And since we said that\nrotation preserves length,",
    "start": "5027800",
    "end": "5035150"
  },
  {
    "text": "I might as well compute\nthe length before rotation. So that's very convenient. So these last two\ncollapse into that, and r",
    "start": "5035150",
    "end": "5043820"
  },
  {
    "text": "doesn't appear in there. So this is fixed in\nthe sense that it",
    "start": "5043820",
    "end": "5049880"
  },
  {
    "text": "doesn't depend on the rotation. This is fixed in that it\ndoesn't depend on the rotation.",
    "start": "5049880",
    "end": "5057000"
  },
  {
    "text": "And so we now focus on this term\nexcept it's got a minus sign.",
    "start": "5057000",
    "end": "5063180"
  },
  {
    "text": "So instead of minimizing,\nwe want to maximize this.",
    "start": "5063180",
    "end": "5068970"
  },
  {
    "text": "So that's sort of, in a\nnutshell, our remaining problem.",
    "start": "5068970",
    "end": "5074910"
  },
  {
    "text": "And if we can do\nthat, then we're done. And notice how this\nintuitively makes sense. ",
    "start": "5074910",
    "end": "5082050"
  },
  {
    "text": "Think of the cloud of points,\nand there's a centroid. Now, connect each of the\npoints in the cloud of points",
    "start": "5082050",
    "end": "5089003"
  },
  {
    "text": "to the centroid. So there's a vector from the\ncentroid out to each point, sort of like a spiky--",
    "start": "5089003",
    "end": "5094440"
  },
  {
    "text": " what's the term in sushi?",
    "start": "5094440",
    "end": "5102400"
  },
  {
    "text": "Uni, that's it. It's uni. It's a sea urchin, right? It's got these spikes, OK?",
    "start": "5102400",
    "end": "5108700"
  },
  {
    "text": "And so what we're\ndoing here is we're taking one of these\nsea urchins and we're",
    "start": "5108700",
    "end": "5115860"
  },
  {
    "text": "bringing the other sea\nurchin into alignment. And the way we're\ndoing it is we're saying that corresponding\nspines should have",
    "start": "5115860",
    "end": "5122340"
  },
  {
    "text": "a small angle between them. Their dot product\nshould be large, right? Because the dot\nproduct between two",
    "start": "5122340",
    "end": "5127440"
  },
  {
    "text": "vectors is proportional to\nthe cosine of the angle. So the largest you can\nmake that is 1, which",
    "start": "5127440",
    "end": "5132900"
  },
  {
    "text": "happens when theta equals 0. So this makes perfect\nsense because we're taking each of the corresponding\nspines of this spiky ball",
    "start": "5132900",
    "end": "5141870"
  },
  {
    "text": "and saying, put a\ncontribution in that's proportional to the\ndot product and rotate",
    "start": "5141870",
    "end": "5149370"
  },
  {
    "text": "it to make that as\nlarge as possible. So our whole rotation problem\nhas been simplified down",
    "start": "5149370",
    "end": "5156540"
  },
  {
    "text": "to this if we can solve that. And so, well, we\nare calculus people.",
    "start": "5156540",
    "end": "5164830"
  },
  {
    "text": "So one thing you\nmight think of is-- ",
    "start": "5164830",
    "end": "5169869"
  },
  {
    "text": "we've done this kind\nof thing before-- we'll differentiate with respect to r\nand set the result equal to 0.",
    "start": "5169870",
    "end": "5176290"
  },
  {
    "text": "And, well, that's\nnot quite right",
    "start": "5176290",
    "end": "5181870"
  },
  {
    "text": "because r is not a scalar. It's not even a vector. We know how to differentiate\nwith respect to a vector.",
    "start": "5181870",
    "end": "5188739"
  },
  {
    "text": "It's a whole matrix. But we could just take the\n9 elements of the matrix and string them into a 9 vector\nand differentiate with respect",
    "start": "5188740",
    "end": "5197500"
  },
  {
    "text": "to the 9 vector. So we could do that. The problem is those 9\nnumbers aren't independent.",
    "start": "5197500",
    "end": "5204140"
  },
  {
    "text": "They have to satisfy all of\nthose annoying constraints. And so it's actually\nvery hard to impose",
    "start": "5204140",
    "end": "5211000"
  },
  {
    "text": "these constraints subject\nto R transpose R is I",
    "start": "5211000",
    "end": "5217905"
  },
  {
    "text": "and determinant of R is plus 1.",
    "start": "5217905",
    "end": "5223590"
  },
  {
    "text": "So you can go down that route,\nbut it gets incredibly messy. And so we won't be doing that.",
    "start": "5223590",
    "end": "5229650"
  },
  {
    "text": "We'll be looking at other\nrepresentations for rotation",
    "start": "5229650",
    "end": "5235050"
  },
  {
    "text": "where this problem\ncomes out very easily.  But it's like a\nlot of things where",
    "start": "5235050",
    "end": "5241420"
  },
  {
    "text": "there's a bit of an effort\nto develop the technology,",
    "start": "5241420",
    "end": "5247179"
  },
  {
    "text": "the representation. Once you've got the\nrepresentation, it's trivial. So we'll spend the\nnext class building up",
    "start": "5247180",
    "end": "5253900"
  },
  {
    "text": "that representation. OK. ",
    "start": "5253900",
    "end": "5262316"
  }
]