[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": " PROFESSOR: All right. So, lecture 13 was\nabout a lot of things.",
    "start": "0",
    "end": "6000"
  },
  {
    "text": "We had algorithms for the\ncarpenter's rule theorem. We had three of those. Let's see, there's\nthe CDR strain",
    "start": "6000",
    "end": "13600"
  },
  {
    "text": "of pseudo-triangulations,\nwhich we're going to talk about\na bunch today. There's the energy method, which\nwe'll talk about a little bit.",
    "start": "13600",
    "end": "20869"
  },
  {
    "text": "Then there was locked trees. I'll give you-- there's one\nnew result in locked trees I'll tell you about.",
    "start": "20870",
    "end": "26539"
  },
  {
    "text": "And then we had the last topic,\nwhich was-- cheat-- oh, right.",
    "start": "26540",
    "end": "37520"
  },
  {
    "text": "Last topic for today\nis four dimensions, which wasn't covered in class. And what we did talk\nabout in class is 3D.",
    "start": "37520",
    "end": "42764"
  },
  {
    "text": "Essentially no updates\nthere, although open problems are still open. Fairly challenging. But 4D we didn't get\nto talk about at all.",
    "start": "42764",
    "end": "49750"
  },
  {
    "text": "And that's not too hard,\nhow to unfold any 4D chain. So that'll be fun. Also 5D chains we'll get--\nand 6D and 7D, but not eight.",
    "start": "49750",
    "end": "59440"
  },
  {
    "start": "56000",
    "end": "195000"
  },
  {
    "text": "Any dimension. First question for\ntoday is why do we care so much about\nexpansiveness?",
    "start": "59440",
    "end": "66240"
  },
  {
    "text": "And this is mostly--\nmostly, I want to reference next lecture,\nwhich will use expansiveness.",
    "start": "66240",
    "end": "71520"
  },
  {
    "text": "But, indeed, the original\npoint of expansiveness was just a convenient way\nto ensure self-intersection.",
    "start": "71520",
    "end": "78990"
  },
  {
    "text": "Essentially, before the\nidea of expansiveness, we had this idea of a\nreally complicated chain.",
    "start": "78990",
    "end": "85830"
  },
  {
    "text": "that's not very complicated\nbut for the carpenter's rule problem, we had this\nidea that, well,",
    "start": "85830",
    "end": "92480"
  },
  {
    "text": "how do we distinguish\nbetween a linkage that is locked within Epsilon? However you draw it, if\nit's not self-touching,",
    "start": "92480",
    "end": "99010"
  },
  {
    "text": "it's going to\njiggle a little bit. Versus something they\ncan eventually unfold.",
    "start": "99010",
    "end": "104190"
  },
  {
    "text": "And there was no good\nway to distinguish between just jiggling a little\nbit and unfolding all the way.",
    "start": "104190",
    "end": "111200"
  },
  {
    "text": "Which was frustrating,\nand expansiveness gave us a way to guarantee that.",
    "start": "111200",
    "end": "117830"
  },
  {
    "text": "Not only did it avoid\nself-intersection, which is nice. If you expand, you\ndon't self-intersect.",
    "start": "117830",
    "end": "123079"
  },
  {
    "text": "But it also gave a way\nthat things would actually be rigid if it was\nimpossible to do.",
    "start": "123079",
    "end": "128160"
  },
  {
    "text": "And so you couldn't move at all. That reduced it to a rigidity\ntheory problem or, really, a tensegrity theory problem.",
    "start": "128160",
    "end": "134700"
  },
  {
    "text": "Which was kind of what\nthis problem needed. That's why it was\nopen for 25 years before we could prove\nit with tensegrities.",
    "start": "134700",
    "end": "142090"
  },
  {
    "text": "So, that's one answer. But, in fact, now that we\nknow expansive motions exist, they're really handy.",
    "start": "142090",
    "end": "148000"
  },
  {
    "text": "They let us prove that the\nenergy method worked, for one. And next class we're going\nto use them to add thickness",
    "start": "148000",
    "end": "154670"
  },
  {
    "text": "to our edges, add polygons or\nregions attached to every edge. And if you have an\nexpansive motion,",
    "start": "154670",
    "end": "161239"
  },
  {
    "text": "it turns out under\ncertain conditions, this thing will still work. Whereas with non-expansive\nmotions like those",
    "start": "161240",
    "end": "167239"
  },
  {
    "text": "produced by the energy method\nit won't work in general. So initially it was\nconvenience, but it turns out",
    "start": "167240",
    "end": "173676"
  },
  {
    "text": "to be handy mathematically. Two, we've seen one example\njust proving the energy method That's actually our next topic.",
    "start": "173676",
    "end": "179790"
  },
  {
    "text": "We will see another,\nnext lecture. ",
    "start": "179790",
    "end": "186630"
  },
  {
    "text": "But a few people asked about\nthe proof of the energy method, so I wanted to review it.",
    "start": "186630",
    "end": "191870"
  },
  {
    "text": "How do we know we don't get\nstuck in a local minimum? So this is an obvious\nquestion to ask",
    "start": "191870",
    "end": "198209"
  },
  {
    "start": "195000",
    "end": "305000"
  },
  {
    "text": "if you're familiar\nwith gradient descent. If not, here's a\nkind of picture.",
    "start": "198210",
    "end": "204440"
  },
  {
    "text": "Imagine you have some\nenergy landscape. In reality, this\nis a surface drawn",
    "start": "204440",
    "end": "209590"
  },
  {
    "text": "over n times d\ndimensions, but I will assume n times d equals\n1 because I can draw it.",
    "start": "209590",
    "end": "215140"
  },
  {
    "text": "So here's configurations.  And then on the x-axis, or in\ngeneral all the other axes.",
    "start": "215140",
    "end": "223120"
  },
  {
    "text": "And then the y-axis, which\nwill always be one thing, is the energy function. So sometimes the energy is high.",
    "start": "223120",
    "end": "229051"
  },
  {
    "text": "At some points it's going to\nactually shoot off to infinity. That's where you'd\nself-intersect. Remember, the energy function\nwas sum over all edges.",
    "start": "229051",
    "end": "239190"
  },
  {
    "text": "The w sum over all vertices. U of 1 over the distance\nbetween u and dw.",
    "start": "239190",
    "end": "250049"
  },
  {
    "text": "So when a distance goes to 0,\nthe energy shoots to infinity. Those are the points\nwe want to avoid.",
    "start": "250050",
    "end": "256898"
  },
  {
    "text": "So those are bad things. But if we start at some\nnon self-intersecting configuration, we'll\nhave some finite energy.",
    "start": "256899",
    "end": "262509"
  },
  {
    "text": "And the idea is, well, if we\nfollowed the negative gradient,",
    "start": "262510",
    "end": "269010"
  },
  {
    "text": "that will decrease energy\nas fast as possible. And from here it's going\nto basically follow",
    "start": "269010",
    "end": "274300"
  },
  {
    "text": "this trajectory. And it would get stuck\nin this little well. This is called a local minimum.",
    "start": "274300",
    "end": "279460"
  },
  {
    "text": "But this local minimum\nmight be lower. And so the worry is that\nit depends where you start. If I start over here,\nI'll fall down there.",
    "start": "279460",
    "end": "286890"
  },
  {
    "text": "But if I start in\nthis kind of well, I'll end up at this kind\nof accumulation point. And what I really want\nis maybe some kind",
    "start": "286890",
    "end": "293250"
  },
  {
    "text": "of global energy minimum. That's the usual issue\nwith gradient descent. That's why people don't like to\nuse gradient descent sometimes.",
    "start": "293250",
    "end": "299795"
  },
  {
    "text": "Because it gets stuck. Hey, Jason.",
    "start": "299795",
    "end": "305300"
  },
  {
    "start": "305000",
    "end": "630000"
  },
  {
    "text": "However, with this\nparticular setting we actually proved that\nthe energy method does not",
    "start": "305300",
    "end": "311990"
  },
  {
    "text": "get stuck in a local minimum. And I'll just review\nthat proof because it went by quickly in lecture.",
    "start": "311990",
    "end": "317000"
  },
  {
    "text": " So the idea in our setting is\nwe know the carpenter's rule",
    "start": "317000",
    "end": "330100"
  },
  {
    "text": "theorem. ",
    "start": "330101",
    "end": "336460"
  },
  {
    "text": "Carpenter's rule\ntheorem tells us that any configuration\nwhere we're not done--",
    "start": "336460",
    "end": "344900"
  },
  {
    "text": "and I'll start just by thinking\nabout a single chain, maybe an open chain or a closed chain.",
    "start": "344900",
    "end": "350530"
  },
  {
    "text": "Any chain that is not\nalready straight or convex,",
    "start": "350530",
    "end": "360130"
  },
  {
    "text": "not only can be\nunfolded, but has an expansive motion\nto unfolding. ",
    "start": "360130",
    "end": "370160"
  },
  {
    "text": "Expansive motion\ntells us that if we look at any distance between\na vertex and an edge,",
    "start": "370160",
    "end": "378070"
  },
  {
    "text": "this increases. That's not how we\ndefine expansive. We define it between\nevery pair of vertices.",
    "start": "378070",
    "end": "384810"
  },
  {
    "text": "But it turns out\nif you have-- this is actually something we needed\nfor non-self-intersection. If you have a vertex and an\nedge, and you know that-- well,",
    "start": "384810",
    "end": "393190"
  },
  {
    "text": "this edge stays fixed\nlength because it's a bar. We know that these\ndistances increase.",
    "start": "393190",
    "end": "399500"
  },
  {
    "text": "And this distance\nincreases by expansiveness. Then, in fact, this point\nmust go away from this bar.",
    "start": "399500",
    "end": "405660"
  },
  {
    "text": "You can draw an ellipse. If you held these fixed, it\nwould move along an ellipse. Or held the sum fixed.",
    "start": "405660",
    "end": "411280"
  },
  {
    "text": "But you've got to go\noutside that ellipse. This guy's got to get farther\naway from-- every vertex,",
    "start": "411280",
    "end": "416940"
  },
  {
    "text": "it has to get farther\naway from every bar if the pairwise vertex-vertex\ndistances increase.",
    "start": "416940",
    "end": "422610"
  },
  {
    "text": "So if you take this\nexpansive motion, you know that it is an\nenergy-decreasing motion.",
    "start": "422610",
    "end": "428220"
  },
  {
    "text": "So what that tells you is\nthat any configuration that's not already straight\nor convex has",
    "start": "428220",
    "end": "434539"
  },
  {
    "text": "an energy-decreasing motion. ",
    "start": "434540",
    "end": "443360"
  },
  {
    "text": "So this tells you, you never\nget stuck in a local minimum. Because what's a local\nminimum in one dimension?",
    "start": "443360",
    "end": "452490"
  },
  {
    "text": "It's a place where you\ncannot go down from here. And those are the places\nwe're worried about.",
    "start": "452490",
    "end": "457540"
  },
  {
    "text": "And the claim is the\nonly places where you don't have a downhill motion\nare places where you don't have",
    "start": "457540",
    "end": "462770"
  },
  {
    "text": "expansive motions, and\ntherefore the configuration must already be\nstraight or convex.",
    "start": "462770",
    "end": "468180"
  },
  {
    "text": "And then you're done. So you don't have to\nworry about getting stuck with the energy method. There is one tricky\npart which is,",
    "start": "468180",
    "end": "475500"
  },
  {
    "text": "if you have a linkage that\nconsists of multiple pieces--",
    "start": "475500",
    "end": "481364"
  },
  {
    "text": "maybe you have some open\nchains, some closed chains, you can have some\nguy stuck in here. They won't necessarily\nstraighten out,",
    "start": "481364",
    "end": "486603"
  },
  {
    "text": "but-- there's a couple kinds\nof things you could do. You could unfold this chain,\nyou could unfold this chain,",
    "start": "486603",
    "end": "493280"
  },
  {
    "text": "or you could just let them\nfly away from each other. All of those things\nwill decrease energy.",
    "start": "493280",
    "end": "498539"
  },
  {
    "text": "And so the worry here would\nbe that these two linkages fly apart and never\nreally unfold locally.",
    "start": "498540",
    "end": "506629"
  },
  {
    "text": "That would be bad for us because\nwe're always decreasing energy. There's always a\ndecreasing flow,",
    "start": "506630",
    "end": "513740"
  },
  {
    "text": "but we may not actually finish. We might not finally make this. Our goal in this case, remember,\nis to make it outer convex.",
    "start": "513740",
    "end": "521400"
  },
  {
    "text": "Meaning that all the\noutermost chains are straight. All that outermost\npolygons become convex.",
    "start": "521400",
    "end": "527295"
  },
  {
    "text": " So we want to argue this. And I'm just going to\nsketch the proof here.",
    "start": "527295",
    "end": "533530"
  },
  {
    "text": "Essentially, when you\nhave multiple components, once they're very,\nvery, very far away,",
    "start": "533530",
    "end": "539560"
  },
  {
    "text": "their contribution\nto energy, just by all the pairwise distances\nacross between two components,",
    "start": "539560",
    "end": "545709"
  },
  {
    "text": "will be very, very tiny. And the claim is actually\nthe energy method",
    "start": "545710",
    "end": "552570"
  },
  {
    "text": "won't get you all the way to\nan outer-convex configuration, but it will get you within\nsome Epsilon of outer convex.",
    "start": "552570",
    "end": "561830"
  },
  {
    "text": "You get to choose\nwhatever Epsilon you want. And so when these guys\nare far enough away,",
    "start": "561830",
    "end": "567250"
  },
  {
    "text": "their contribution to energy\nis much less than Epsilon. Once they're, like, n squared\ndivided by Epsilon away",
    "start": "567250",
    "end": "572889"
  },
  {
    "text": "or something, the\ncontribution between them will be far less than Epsilon.",
    "start": "572890",
    "end": "578000"
  },
  {
    "text": "So, what really\nmatters in energy is all the distances\ninside the linkages, inside",
    "start": "578000",
    "end": "585820"
  },
  {
    "text": "the components. And we're following the gradient\nmotion, which decreases energy as fast as possible.",
    "start": "585820",
    "end": "592199"
  },
  {
    "text": "And so you can prove\nthat it's better-- if you want to decrease\nenergy as fast as possible, it's better at some point\nto unfold the pieces.",
    "start": "592200",
    "end": "598440"
  },
  {
    "text": "Not to just let them\ncontinue flying apart. So waving my hands\na little bit there. But if you know that you're\nat least Epsilon away",
    "start": "598440",
    "end": "608010"
  },
  {
    "text": "from being done,\nthen the energy will be fairly high within\nthe components. And therefore it's worth\nunfolding the components.",
    "start": "608010",
    "end": "616360"
  },
  {
    "text": "But it's especially\nclear for one component. All right.",
    "start": "616360",
    "end": "621410"
  },
  {
    "text": "Any questions about that.? That's why the\nenergy method works. ",
    "start": "621410",
    "end": "629010"
  },
  {
    "text": "The next set of\ntopics is related to pointed\npseudo-triangulations, which are indeed very cool.",
    "start": "629010",
    "end": "635240"
  },
  {
    "start": "630000",
    "end": "750000"
  },
  {
    "text": "There's dozens of\npapers about them. They've spawned their\nwhole little sub-field of computational geometry.",
    "start": "635240",
    "end": "642160"
  },
  {
    "text": "We touched on them a\nlittle bit in lecture, but there's a lot\nmore to say about it.",
    "start": "642160",
    "end": "647544"
  },
  {
    "text": "In particular, why they even\nwork for the carpenter's rule problem. I didn't make clear,\nbut I would like to.",
    "start": "647544",
    "end": "654040"
  },
  {
    "text": "So a couple things about them. They were actually\noriginally invented",
    "start": "654040",
    "end": "659310"
  },
  {
    "text": "in 1994 or the first\nused, I guess, in 1994. At this point, they were\ncalled geodesic triangulations",
    "start": "659310",
    "end": "665880"
  },
  {
    "text": "for a particular reason. And so for the carpenter's\nrule problem, we had a polygon",
    "start": "665880",
    "end": "671880"
  },
  {
    "text": "and then we\npseudo-triangulated the inside and the outside of the polygon. Here we're just\npseudo-triangulating",
    "start": "671880",
    "end": "678870"
  },
  {
    "text": "the inside. In that setting, they're\ncall geodesic triangulations. And it's for a particular data\nstructures problem, actually.",
    "start": "678870",
    "end": "686870"
  },
  {
    "text": "This is sometimes\ncovered in 6851, which is Advanced\nData Structures.",
    "start": "686870",
    "end": "691889"
  },
  {
    "text": "You can check out online.  The goal is to\ndecompose this polygon",
    "start": "691889",
    "end": "697780"
  },
  {
    "text": "in a kind of balanced way. So first you choose\na pseudo-triangle that's kind of most in\nthe middle of the polygon.",
    "start": "697780",
    "end": "703040"
  },
  {
    "text": "Then you recurse on the sides. Actually number one is this one.",
    "start": "703040",
    "end": "708389"
  },
  {
    "text": "And if you do this,\nit turns out if you want to walk from any\npoint in this polygon to any other point\nin the polygon,",
    "start": "708390",
    "end": "714500"
  },
  {
    "text": "you only visit log\nn pseudo-triangles. Just a nice, small number. And this is a particular problem\ncalled ray shooting, where",
    "start": "714500",
    "end": "722330"
  },
  {
    "text": "you imagine you have a laser\nto shoot in some direction.",
    "start": "722330",
    "end": "727620"
  },
  {
    "text": "The polygon-- you want to know\nwhen it exits the polygon, when it hits the boundary\nand where it hits.",
    "start": "727620",
    "end": "733450"
  },
  {
    "text": "One way to do that is to\nwalk through the pieces here, the pseudo-triangles. And if you only have to\nwalk through log n of them,",
    "start": "733450",
    "end": "739095"
  },
  {
    "text": "it turns out walking through\na single triangle only takes log n time. Total amount of time\nis log squared n.",
    "start": "739095",
    "end": "744120"
  },
  {
    "text": "So this is a pretty good way\nto do ray shooting in polygons. Which is nice.",
    "start": "744120",
    "end": "751889"
  },
  {
    "start": "750000",
    "end": "960000"
  },
  {
    "text": "So that's where\nthey originally come from but they weren't used\nvery much until later.",
    "start": "751890",
    "end": "758980"
  },
  {
    "text": "So let me tell you some\nnice properties about them. Pseudo-triangulation\nhas 2n minus 3 edges",
    "start": "758980",
    "end": "771010"
  },
  {
    "text": "and n minus 2 pseudo-triangles. ",
    "start": "771010",
    "end": "777955"
  },
  {
    "text": "Always.  I should say, if you draw a\npointed pseudo-triangulation,",
    "start": "777955",
    "end": "784110"
  },
  {
    "text": "remember pointed\nmeans at every vertex of the pseudo-triangulation. You have some angle\nwhich is-- you",
    "start": "784110",
    "end": "791000"
  },
  {
    "text": "have a reflex angle\nbigger than 180. This is the pointed property.",
    "start": "791000",
    "end": "796430"
  },
  {
    "text": "Pseudo-triangles-- all\nthe faces look like this. They only have three\nconvex vertices.",
    "start": "796430",
    "end": "802750"
  },
  {
    "text": "All the other\nvertices are reflex. ",
    "start": "802750",
    "end": "807840"
  },
  {
    "text": "So this is pseudo-triangle. Pointed pseudo-triangulation\nhas both of these properties.",
    "start": "807840",
    "end": "813690"
  },
  {
    "text": "And it's pretty easy to\nprove this by induction. I won't go through\nthe proof here. It's interesting\nin the way that it",
    "start": "813690",
    "end": "819530"
  },
  {
    "text": "is different from triangulation. So n here is the\nnumber of points. And I'm thinking about\npointed pseudo-triangulations",
    "start": "819530",
    "end": "827780"
  },
  {
    "text": "of the points. Meaning, I take some\npoints and I add edges",
    "start": "827780",
    "end": "837000"
  },
  {
    "text": "until I can't anymore. Subject to the pointed property. So I add this edge,\nI'm still pointed.",
    "start": "837000",
    "end": "843820"
  },
  {
    "text": "I add this edge,\nI'm still pointed. I add this edge,\nI'm still pointed. Can't add this edge. Can't really add that edge.",
    "start": "843820",
    "end": "850750"
  },
  {
    "text": "Let's see if I can and this\none and this one and this one.",
    "start": "850750",
    "end": "859530"
  },
  {
    "text": "Anymore? This one and now I'm done. I can tell that I'm done because\nat this point, all of the faces",
    "start": "859530",
    "end": "866280"
  },
  {
    "text": "are pseudo-triangles. They each have three\nconvex vertices. And as soon as you have that all\nthe faces are pseudo-triangles,",
    "start": "866280",
    "end": "874140"
  },
  {
    "text": "we can show that you\ncan't add any more edges while still being pointed. I'm still pointed\nbecause I only added",
    "start": "874140",
    "end": "879910"
  },
  {
    "text": "edges that preserve pointedness. And this is a sort\nof greedy algorithm to construct pointed\npseudo-triangulation.",
    "start": "879910",
    "end": "887369"
  },
  {
    "text": "It always works.  And we can count\nthe number of edges. I won't bother, but it\nwill always be 2n minus 3.",
    "start": "887369",
    "end": "894649"
  },
  {
    "text": " By contrast, if you look\nat regular triangulations--",
    "start": "894650",
    "end": "902070"
  },
  {
    "text": "so a triangulation would\ngo all the way to the point where every face is a\ntriangle, like this.",
    "start": "902070",
    "end": "910230"
  },
  {
    "text": " And in that case they have\nmore edges, obviously.",
    "start": "910230",
    "end": "916340"
  },
  {
    "text": "In general they\nwill have-- here is two more edges because there\nare two interior vertices.",
    "start": "916340",
    "end": "923530"
  },
  {
    "text": "So, in general, it would\nbe 2n minus 3 plus i edges for a triangulation, where i is\nthe number of interior points.",
    "start": "923530",
    "end": "931390"
  },
  {
    "text": "And it will have n minus\n2 plus i faces, triangles.",
    "start": "931390",
    "end": "938715"
  },
  {
    "start": "938715",
    "end": "943920"
  },
  {
    "text": "Pseudo-triangulations are quite\nminimal in the number of edges. In particular, they are\nminimally generically rigid.",
    "start": "943920",
    "end": "951649"
  },
  {
    "text": "This is the number\nof edges I want for a nice rigid structure. 2 n minus 3 is\nwhat I should have.",
    "start": "951650",
    "end": "957379"
  },
  {
    "text": "And indeed, pointed\npseudo-triangulations are minimally generically rigid.",
    "start": "957380",
    "end": "963690"
  },
  {
    "text": "That's the next thing.  Minimally generically rigid.",
    "start": "963690",
    "end": "975190"
  },
  {
    "text": "This was the Laman condition. We saw a couple\ncharacterizations,",
    "start": "975190",
    "end": "980410"
  },
  {
    "text": "but in particular,\nyou can fairly easily prove that they satisfy\nthe Laman condition. Why?",
    "start": "980410",
    "end": "985426"
  },
  {
    "text": "Well, first thing to check is\nthey have 2n minus 3 edges. That, I just claim. Second thing to\ncheck is that if I",
    "start": "985426",
    "end": "990750"
  },
  {
    "text": "look at any subset of the\nvertices, k of the vertices, they should only have at most\n2k minus 3 edges among them.",
    "start": "990750",
    "end": "997339"
  },
  {
    "text": "It should induce at\nmost 2k minus 3 edges. Well, let's look\nat any k vertices.",
    "start": "997340",
    "end": "1004654"
  },
  {
    "text": " What are the edges\nthat they induce?",
    "start": "1004655",
    "end": "1012670"
  },
  {
    "text": "Well, the thing\nI know about them is that they will induce\na pointed set of edges.",
    "start": "1012670",
    "end": "1019009"
  },
  {
    "text": " Because this structure without\nthe blue edges is pointed.",
    "start": "1019010",
    "end": "1026949"
  },
  {
    "text": "If I remove edges\nfrom it, it will still be pointed, [CHUCKLE] right? If you have a big\nangle, you'll continue to have a big angle if\nyou remove edges from it.",
    "start": "1026950",
    "end": "1034069"
  },
  {
    "text": "It's a matter which subset of\nedges I look at, in particular, in the deuce subset. It will still be pointed.",
    "start": "1034069",
    "end": "1040290"
  },
  {
    "text": "If I have a pointed set of\nedges on some k vertices,",
    "start": "1040290",
    "end": "1045839"
  },
  {
    "text": "I can use that greedy\nalgorithm to finish the pseudo-triangulation. ",
    "start": "1045839",
    "end": "1052660"
  },
  {
    "text": "As long as you're\npointed, you can add edges",
    "start": "1052660",
    "end": "1060340"
  },
  {
    "text": "until you can't\nadd edges, subject",
    "start": "1060340",
    "end": "1065370"
  },
  {
    "text": "to the pointed constraint. ",
    "start": "1065370",
    "end": "1070880"
  },
  {
    "text": "At all times\npreserving pointedness. This is what I did to\ngenerate this triangulation the first place.",
    "start": "1070880",
    "end": "1075946"
  },
  {
    "text": "If I take some\nsubset of k vertices, I can do it again\non those k vertices. When I'm finished, I will\nhave a pseudo-triangulation.",
    "start": "1075946",
    "end": "1084170"
  },
  {
    "start": "1084170",
    "end": "1089600"
  },
  {
    "text": "And that has 2n minus 3 edges. In this case, 2k minus 3 edges.",
    "start": "1089600",
    "end": "1095875"
  },
  {
    "text": " So I started with some\npointed set of edges.",
    "start": "1095875",
    "end": "1102080"
  },
  {
    "text": "I added stuff. I ended up with 2k minus 3. That means I started with,\nat most, 2k minus 3 edges.",
    "start": "1102080",
    "end": "1107425"
  },
  {
    "text": " 2k minus 3.",
    "start": "1107425",
    "end": "1114721"
  },
  {
    "text": "And so that's how you\nprove the Laman condition. It's kind of trivial,\nbecause pointedness is an inherited property.",
    "start": "1114721",
    "end": "1121510"
  },
  {
    "text": "So if you believe in\n2n minus 3, then you believe minimally\ngenerically rigid.",
    "start": "1121510",
    "end": "1127230"
  },
  {
    "text": "Cool. Even cooler is that the\nconverse is roughly true.",
    "start": "1127230",
    "end": "1133400"
  },
  {
    "text": "In some sense, all\nLaman graphs can be drawn a pseudo-triangulation.",
    "start": "1133400",
    "end": "1138809"
  },
  {
    "text": "There's one catch, which is\nthat you need a plane area. ",
    "start": "1138810",
    "end": "1144970"
  },
  {
    "text": "Any planar Laman graph\nhas a pseudo-triangulation",
    "start": "1144970",
    "end": "1162260"
  },
  {
    "text": "as a realization. ",
    "start": "1162260",
    "end": "1167549"
  },
  {
    "text": "Realization was just a way\nto draw the graph in 2D. Now, pseudo-triangulations\nare planar,",
    "start": "1167550",
    "end": "1174240"
  },
  {
    "text": "meaning none of the\nedges cross each other. So you definitely need a graph\nthat can be drawn in the plane",
    "start": "1174240",
    "end": "1179260"
  },
  {
    "text": "without crossings. That's the planar constraint. But if you have a planar\nminimally generically rigid graph, you can always draw\nit as a pseudo-triangulation.",
    "start": "1179260",
    "end": "1187640"
  },
  {
    "text": "So it's kind of a\nconverse of this theorem. And a sense in which\npseudo-triangulations are universal for planar\nminimal generic rigidity.",
    "start": "1187640",
    "end": "1196560"
  },
  {
    "text": "Which is pretty neat. I will not prove that\ntheorem, but I will give you",
    "start": "1196560",
    "end": "1203860"
  },
  {
    "text": "a visual sense of what\nthe proof looks like. It's based on the Henneberg\nnumber construction. So we know minimally\ngenerically rigid graphs",
    "start": "1203860",
    "end": "1210370"
  },
  {
    "text": "can always be drawn\nin a Henneberg way, either by adding new\ndegree-two vertices,",
    "start": "1210370",
    "end": "1216580"
  },
  {
    "text": "or by adding new\ndegree-three vertices and removing one of\nthe existing edges. And the claim is, you take\nany Henneberg construction.",
    "start": "1216580",
    "end": "1224190"
  },
  {
    "text": "You can do it-- you\ncan implement it in a pseudo-triangulation. So you start up with\nyour single edge,",
    "start": "1224190",
    "end": "1230620"
  },
  {
    "text": "that's a pseudo-triangulation. You keep adding things. Preserving the fact\nthat at all times",
    "start": "1230620",
    "end": "1235640"
  },
  {
    "text": "is a pointed\npseudo-triangulation. It's tricky, but\nfor example, if you know that you want to add this\nred vertex next to these two,",
    "start": "1235640",
    "end": "1243860"
  },
  {
    "text": "you find a place\nthat will guarantee that this is a pseudo-triangle.",
    "start": "1243860",
    "end": "1248970"
  },
  {
    "text": "This is a pseudo-triangle. It will be pointed for\nfree because it's just a degree-two vertex.",
    "start": "1248970",
    "end": "1254700"
  },
  {
    "text": "So the challenge is\npreserving pseudo-triangles. And same for adding the\ndegree-three vertex.",
    "start": "1254700",
    "end": "1259799"
  },
  {
    "text": "This is harder,\nof course, but you need to-- you find\na little patch here where, if you choose\nthe point in there,",
    "start": "1259800",
    "end": "1266050"
  },
  {
    "text": "you get pseudo-triangles\non all three sides. And also, that\nremoving the edge still preserves pseudo-triangulation.",
    "start": "1266050",
    "end": "1273130"
  },
  {
    "text": "It's definitely not trivial to\ndo this, but it can be done. And it's kind of\nneat that it can be done for any\nHenneberg construction.",
    "start": "1273130",
    "end": "1278765"
  },
  {
    "start": "1278765",
    "end": "1284470"
  },
  {
    "start": "1280000",
    "end": "1380000"
  },
  {
    "text": "The last thing I wanted to tell\nyou about pseudo-triangulations is why they work for the\ncarpenter's rule theorem.",
    "start": "1284470",
    "end": "1289810"
  },
  {
    "text": "Why do they give\nexpansive motions. Well, they're rigid of course. They don't give you any motions.",
    "start": "1289810",
    "end": "1295103"
  },
  {
    "text": "But what we claimed is that if\nyou remove a convex hull edge-- so if we take a pointed\npseudo-triangulation,",
    "start": "1295103",
    "end": "1309919"
  },
  {
    "text": "and then we remove a convex\nhull edge, we of course",
    "start": "1309920",
    "end": "1322530"
  },
  {
    "text": "get something that's flexible. Because we were minimally\ngenerically rigid, so if you remove an\nedge, you will now",
    "start": "1322530",
    "end": "1328159"
  },
  {
    "text": "be generically flexible. It turns out, you're not\nonly generically flexible, you are actually flexible for\nat least a little bit of time.",
    "start": "1328160",
    "end": "1334760"
  },
  {
    "text": "So pointed pseudo-triangulation\nminus convex hull edge. It's not only as flexible,\nbut it flexes expansively.",
    "start": "1334760",
    "end": "1346480"
  },
  {
    "text": " Meaning, if you look at\nall pairwise distances--",
    "start": "1346480",
    "end": "1352870"
  },
  {
    "text": "expansively-- look at\nall pairwise distances, they either stay the same,\nthey're connected by a bar,",
    "start": "1352870",
    "end": "1359990"
  },
  {
    "text": "or they will increase. And this is what we wanted\nfor carpenter's rule. You could do that motion\nfor a little while.",
    "start": "1359990",
    "end": "1366330"
  },
  {
    "text": "Then you might have to\nswitch to a different pseudo-triangulation\naccording to a flip, which I won't talk about.",
    "start": "1366330",
    "end": "1371410"
  },
  {
    "text": "We already did in lecture. But at all times\nthe claim is there is an expansive\npseudo-triangulation motion",
    "start": "1371410",
    "end": "1378460"
  },
  {
    "text": "by removing single edge. So why does this hold? This, it turns\nout, you can prove using things similar\nto what we know",
    "start": "1378460",
    "end": "1387660"
  },
  {
    "text": "from our proof of the\ncarpenter's rule theorem that we covered. ",
    "start": "1387660",
    "end": "1395322"
  },
  {
    "text": "So it's kind of neat to see\nthe connection between the two. ",
    "start": "1395322",
    "end": "1407520"
  },
  {
    "text": "So, why is this true?",
    "start": "1407520",
    "end": "1413900"
  },
  {
    "text": "Well, we already\nargued that the thing is flexible without the\nexpansiveness constraint.",
    "start": "1413900",
    "end": "1420952"
  },
  {
    "text": "So we want to add the\nexpansiveness constraint. So just like before, we're going\nto add all pairwise struts.",
    "start": "1420952",
    "end": "1426320"
  },
  {
    "start": "1426320",
    "end": "1433500"
  },
  {
    "text": "So between all\npairs of vertices, let's say they're already\nconnected by a bar, we add a strut between them.",
    "start": "1433500",
    "end": "1438800"
  },
  {
    "text": "Meaning, that could\nonly increase in length. Now we have a tensegrity. We want to argue that tensegrity\nis infinitesimally flexible.",
    "start": "1438800",
    "end": "1445030"
  },
  {
    "text": " So, we're going to do that\nusing the duality just",
    "start": "1445030",
    "end": "1458980"
  },
  {
    "text": "like CDR, just like the\nproof the carpenter's rule theorem we saw. We say, OK we want to prove this\nthing is flexible by duality.",
    "start": "1458980",
    "end": "1467190"
  },
  {
    "text": "That's equivalent\nto proving something about the equilibrium stresses. Now in the case of CDR\nin a single chain, what",
    "start": "1467190",
    "end": "1475825"
  },
  {
    "text": "we needed to say was\nthe equilibrium stresses were all zero. And then we said,\nOK, if in order",
    "start": "1475825",
    "end": "1482292"
  },
  {
    "text": "to prove the equilibrium\nstresses are all zero, we use Maxwell-Cremona theorem. That's equivalent to saying all\npolyhedral lifting are flat.",
    "start": "1482292",
    "end": "1488285"
  },
  {
    "text": "And then we prove\nthat by looking at the maximum z-coordinate. In this case, we can't argue\nthat all the stresses are zero.",
    "start": "1488285",
    "end": "1495250"
  },
  {
    "text": "It's not true. But if you recall\nthe duality claim, I said if you have a\ntensegrity, the tensegrity",
    "start": "1495250",
    "end": "1501899"
  },
  {
    "text": "is rigid if and only if the\nunderlying linkage is rigid. Like when you replace\nstruts with bars.",
    "start": "1501900",
    "end": "1509180"
  },
  {
    "text": "Which is going to be true here. And there is a stress,\nan equilibrium stress,",
    "start": "1509180",
    "end": "1515309"
  },
  {
    "text": "that is non-zero on every strut. Equilibrium stress being\nnon-zero in every strut",
    "start": "1515310",
    "end": "1520710"
  },
  {
    "text": "means that all the\nstruts basically have to stay fixed length. They become bars and\nthen you're done.",
    "start": "1520710",
    "end": "1527539"
  },
  {
    "text": "What I need to\nprove the opposite, I want to prove its\nflexible, I need to find a strut where\nthere's no stress.",
    "start": "1527540",
    "end": "1534281"
  },
  {
    "text": "If I find a strut where\nthere's no stress, then basically that strut can\nexpand and there's a motion.",
    "start": "1534281",
    "end": "1539650"
  },
  {
    "text": "That is roughly\ntrue. [CHUCKLE] It's a little bit more\ncomplicated than that but I'm going to just\nclaim suffice as to prove.",
    "start": "1539650",
    "end": "1546900"
  },
  {
    "start": "1546900",
    "end": "1555410"
  },
  {
    "text": "There's a strut that has zero\nin every equilibrium stress.",
    "start": "1555410",
    "end": "1570770"
  },
  {
    "start": "1570770",
    "end": "1577060"
  },
  {
    "text": "Which strut am I\ngoing to choose? I am going to\nchoose the one that comes from this\nconvex hull edge, e.",
    "start": "1577060",
    "end": "1584950"
  },
  {
    "text": "So I removed a convex\nhull edge as a bar. It's going to get replaced\nwhen I add all pairwise struts,",
    "start": "1584950",
    "end": "1590309"
  },
  {
    "text": "by a strut. So I've got the vertices\non the corner here.",
    "start": "1590310",
    "end": "1598270"
  },
  {
    "text": "One of these, I\nreplaced with a strut. The other guys are\nwhatever they are.",
    "start": "1598270",
    "end": "1603530"
  },
  {
    "text": "This is a pseudo-triangulation. Not a very interesting\ntriangulation in this case. I'm going to add a vertex here.",
    "start": "1603530",
    "end": "1609900"
  },
  {
    "text": "Now it's a pseudo-triangulation. So this guy got replaced\nwith a strut, for example.",
    "start": "1609900",
    "end": "1617080"
  },
  {
    "text": "I claim this guy is\nzero in every stress. Why is it zero in every stress?",
    "start": "1617080",
    "end": "1623820"
  },
  {
    "text": "Well, I claim, we've\nessentially proved this,",
    "start": "1623820",
    "end": "1639480"
  },
  {
    "text": "in any equilibrium stress\nnon-zero stresses must",
    "start": "1639480",
    "end": "1646880"
  },
  {
    "text": "be on or interior to\nconvex polygons of bars.",
    "start": "1646880",
    "end": "1655970"
  },
  {
    "start": "1655970",
    "end": "1664130"
  },
  {
    "text": "OK, first believe this claim. The only place I have non-zero\nstress is when I'm interior",
    "start": "1664130",
    "end": "1670890"
  },
  {
    "text": "or on the boundary of a\nconvex polygon of bars. And then, so there might be\nsome non-zero stresses in here.",
    "start": "1670890",
    "end": "1679160"
  },
  {
    "text": "These edges might be\nnon-zero stressed. Intuitively, what's\nhappening here, these guys are going to serve\nas mountains in the lifting.",
    "start": "1679160",
    "end": "1685260"
  },
  {
    "text": "And there's a hole. So you go deep into\nthe hole there. Claim is that is the picture.",
    "start": "1685260",
    "end": "1693120"
  },
  {
    "text": "So you've got some\nconvex polygons.  There's stuff in here\nthat's-- could be bad.",
    "start": "1693120",
    "end": "1700370"
  },
  {
    "text": "Could be stressed. But the stuff outside the convex\npolygons, whatever they are, have to be flat.",
    "start": "1700370",
    "end": "1706600"
  },
  {
    "text": "Meaning they have zero stress. I'm jumping back and\nforth between the lifting and the stresses\nby Maxwell-Cremona.",
    "start": "1706600",
    "end": "1711980"
  },
  {
    "text": "Those are the same thing. Now look at edge e. Edge e is a strut.",
    "start": "1711980",
    "end": "1718020"
  },
  {
    "text": "The other edges here that I've\ndrawn, those are the bars. I haven't drawn all\nthe other struts. I should really use\na color for this guy.",
    "start": "1718020",
    "end": "1725707"
  },
  {
    "text": "So this red edge-- there's\nlots of other red edges I'm not drawing between\nall pairs of vertices, but the only bars\nare the white edges.",
    "start": "1725707",
    "end": "1733010"
  },
  {
    "text": "And those white\nedges-- well there's some convex polygons,\nhere's a convex polygon,",
    "start": "1733010",
    "end": "1738930"
  },
  {
    "text": "here's a convex polygon. But none of the convex\npolygons enclose e.",
    "start": "1738930",
    "end": "1744640"
  },
  {
    "text": "Because e's on the convex hull. E's on the outside here. So it can't be\nstressed by this claim.",
    "start": "1744640",
    "end": "1753110"
  },
  {
    "text": "And so if you\nbelieve this claim, then you believe\ne has zero stress because it's not interior\nto any convex bar polygon.",
    "start": "1753110",
    "end": "1758919"
  },
  {
    "text": "Because it's a strut, not a bar. OK. Now let's prove the claim. ",
    "start": "1758920",
    "end": "1771900"
  },
  {
    "start": "1770000",
    "end": "2140000"
  },
  {
    "text": "It follows from the argument\nwe gave in, was it lecture 12? Previous one?",
    "start": "1771900",
    "end": "1777590"
  },
  {
    "text": "Where we proved the\ncarpenter's rule theorem.  But it's not obvious\nthat it follows.",
    "start": "1777590",
    "end": "1783960"
  },
  {
    "text": "Let me explain why. ",
    "start": "1783960",
    "end": "1799380"
  },
  {
    "text": "I want to look at the\nmaximum z-coordinate. I want to look at the region\nof all the points in the plane",
    "start": "1799380",
    "end": "1805960"
  },
  {
    "text": "that, in the polyhedral lifting,\ngiven by Maxwell-Cremona's theorem, they are at maximum z.",
    "start": "1805960",
    "end": "1814550"
  },
  {
    "text": " That is some region. It could be two-dimensional.",
    "start": "1814550",
    "end": "1820800"
  },
  {
    "text": "It could be one-dimensional. Can't be three-dimensional.\n[CHUCKLE] It's part of the plane. So this region may have\nsome one-dimensional parts.",
    "start": "1820800",
    "end": "1828870"
  },
  {
    "text": "It may have some two-dimensional\nparts, like this whole part. All of this stuff might\nlift to maximum z.",
    "start": "1828870",
    "end": "1836100"
  },
  {
    "text": "It could be-- have some\nnon-convex parts, like this. Whatever. This is kind of generically\nwhat it might look like.",
    "start": "1836100",
    "end": "1843429"
  },
  {
    "text": "I guess it could have cycles\nwith not-filled interior. All these things are plausible,\nexcept we had this lemma.",
    "start": "1843430",
    "end": "1850990"
  },
  {
    "text": "This is the key lemma, the heart\nof the proof of the carpenter's rule theorem. If you look at m and\nyou look at a vertex, v,",
    "start": "1850990",
    "end": "1861539"
  },
  {
    "text": "of the boundary of m. I'll use this Dell\nnotation to mean-- ignore the points in here.",
    "start": "1861540",
    "end": "1868180"
  },
  {
    "text": "I want points along\nthe boundary here. And in particular I want\nto look at these vertices in this drawing. ",
    "start": "1868180",
    "end": "1875840"
  },
  {
    "text": "Look at such a vertex, v, and\nsuppose that v is pointed. We didn't use this\nterminology because we",
    "start": "1875840",
    "end": "1881580"
  },
  {
    "text": "didn't have it at the time. But maybe v looks like this. And there is an angle\nhere, this reflex.",
    "start": "1881580",
    "end": "1890039"
  },
  {
    "text": " That's a point of vertex. Now I'm looking here just at\nthe bars, ignoring the struts.",
    "start": "1890040",
    "end": "1898370"
  },
  {
    "text": "So suppose vertex v has a reflex\nangle among just the bars.",
    "start": "1898370",
    "end": "1908955"
  },
  {
    "start": "1908955",
    "end": "1914120"
  },
  {
    "text": "Then the claim is locally, this\nentire region must be in m.",
    "start": "1914120",
    "end": "1920730"
  },
  {
    "start": "1920730",
    "end": "1925740"
  },
  {
    "text": "Must be locally at the\nmaximum z-coordinate. How did we prove that?",
    "start": "1925740",
    "end": "1931200"
  },
  {
    "text": "Well. the claim is this had to\nbe flat because there's no mountains here.",
    "start": "1931200",
    "end": "1938320"
  },
  {
    "text": "So if you think of a\nreflex region and v",
    "start": "1938320",
    "end": "1943659"
  },
  {
    "text": "is at the maximum\nz-coordinate, right? It's on the boundary of\nthe maximum z-coordinate so it has maximum possible z.",
    "start": "1943660",
    "end": "1950530"
  },
  {
    "text": "So there's no way you can go up. These edges could be mountains. But all the other edges\nwhich are not drawn here,",
    "start": "1950530",
    "end": "1958934"
  },
  {
    "text": "these blue-- there\nare some other edges. Those are the\nstruts coming to v. Those all have to be valleys.",
    "start": "1958934",
    "end": "1965100"
  },
  {
    "text": "They all have to lift to valleys\nbecause stresses can only carry positive stress. Positive stress\ncorrespond to valleys.",
    "start": "1965100",
    "end": "1971050"
  },
  {
    "text": "These guys are all valleys\nand this is at maximum z. You really can't use those\nvalleys, right? [CHUCKLE]",
    "start": "1971050",
    "end": "1976770"
  },
  {
    "text": "You're up here at maximum z. If you use valleys, you go to\nhigher z, which is not allowed.",
    "start": "1976770",
    "end": "1981932"
  },
  {
    "text": "So these actually all\nhave to be flat out here. Which means locally,\nall this stuff is at maximum z That was the\nproof we had a couple lectures",
    "start": "1981932",
    "end": "1989380"
  },
  {
    "text": "ago. Now, once you know that\nthat's at maximum z, you know that a lot of\nthese things are impossible.",
    "start": "1989380",
    "end": "1995820"
  },
  {
    "text": "Because look, here's a\nreflex angle among bars. ",
    "start": "1995820",
    "end": "2001170"
  },
  {
    "text": "There might be more\nbars here, but we know that this is pointed.",
    "start": "2001170",
    "end": "2007230"
  },
  {
    "text": "Whatever's missing here,\nthere's some reflex angle. We're assuming we have a\npointed pseudo-triangulation. And then we remove an edge.",
    "start": "2007230",
    "end": "2013175"
  },
  {
    "text": "It's still pointed. So that means all of\nthis has to be in m. Is it in this picture? No, contradiction.",
    "start": "2013175",
    "end": "2019240"
  },
  {
    "text": "So you cannot have\none-dimensional parts because wherever you have\na one-dimensional part, there's a reflex\nangle that's not in m.",
    "start": "2019240",
    "end": "2026100"
  },
  {
    "text": "So that's bad. In fact, they all have to\nbe two-dimensional parts like this. Can it be a two-dimensional\npart like this?",
    "start": "2026100",
    "end": "2031730"
  },
  {
    "text": "No, because here's a reflex\nangle that is not in m. Contradiction.",
    "start": "2031730",
    "end": "2037400"
  },
  {
    "text": "So the only situation\nyou can have is a convex polygon with the\ninterior all in m.",
    "start": "2037400",
    "end": "2044830"
  },
  {
    "text": "Sorry , wrong. The reverse. The exterior should all be in m.",
    "start": "2044830",
    "end": "2049840"
  },
  {
    "text": " Because, you have all\nthese reflex angles.",
    "start": "2049840",
    "end": "2056580"
  },
  {
    "text": "That has to contain\nthe pointed part. And locally, by this\nlemma, it has to be in m.",
    "start": "2056580",
    "end": "2062335"
  },
  {
    "text": "So all this stuff has\nto locally be in m. The only way is for\nall of that to be in m. Inside, we don't know.",
    "start": "2062335",
    "end": "2067995"
  },
  {
    "text": "Could be stresses\nthere, and this could be a hole\nwhere you go deeper. All of this is at the\nmaximum z-coordinate.",
    "start": "2067996",
    "end": "2073888"
  },
  {
    "text": "The boundary, here. The inside, who knows. Could go down. So you can have\nstresses interior",
    "start": "2073889",
    "end": "2079929"
  },
  {
    "text": "to convex polygons\nin bars, but not exterior to the convex polygon.",
    "start": "2079929",
    "end": "2087039"
  },
  {
    "text": "M is either everything,\nand there's no boundary, and then there's no stress. Or it's not\neverything, and then it",
    "start": "2087040",
    "end": "2092219"
  },
  {
    "text": "will have to have stresses only\ninterior to convex polygons. And that's what we're claiming,\nis that stresses can only",
    "start": "2092219",
    "end": "2097950"
  },
  {
    "text": "be interior to\nconvex bar polygons. And in particular then,\ne is not stressed.",
    "start": "2097950",
    "end": "2103950"
  },
  {
    "text": "The end. This is definitely harder\nthan the case we talked about for carpenter's rule theorem.",
    "start": "2103950",
    "end": "2110201"
  },
  {
    "text": "When you have a\nsingle chain, you're just trying to prove\nthere's an expansive motion. It's a lot easier than this\nbecause m is much simpler.",
    "start": "2110201",
    "end": "2117320"
  },
  {
    "text": "It could basically only\nbe a path or cycle. You only have a single chain.",
    "start": "2117320",
    "end": "2124940"
  },
  {
    "text": "Here m could be more\ncomplicated, but in the end, it's actually\npretty darn simple. ",
    "start": "2124940",
    "end": "2131589"
  },
  {
    "text": "Any questions about that?  Cool.",
    "start": "2131590",
    "end": "2137690"
  },
  {
    "text": "Perfectly clear?\n[CHUCKLE] Definitely a bit complicated, but nice.",
    "start": "2137690",
    "end": "2144605"
  },
  {
    "start": "2140000",
    "end": "2350000"
  },
  {
    "text": "Now, it turns out\npseudo-triangulations are really at the core\nof expansive motions. I'll just mention one\nmore theorem about them.",
    "start": "2144605",
    "end": "2151040"
  },
  {
    "text": " So you may recall\nI mentioned, if you",
    "start": "2151040",
    "end": "2158250"
  },
  {
    "text": "look at the space of\ninfinitesimal motions of a linkage or a\ntensegrity, they form a cone.",
    "start": "2158250",
    "end": "2166290"
  },
  {
    "text": "It lives in some\nhigh-dimensional space, but I'll try to\ndraw a cone here.",
    "start": "2166290",
    "end": "2172210"
  },
  {
    "text": "These guys go off to infinity. I'm drawing it in three\ndimensions, I guess.",
    "start": "2172210",
    "end": "2177800"
  },
  {
    "text": "You have some place here--\nthis is the zero zero zero motion we're nothing moves.",
    "start": "2177800",
    "end": "2184010"
  },
  {
    "text": "And these are potential\ndifferent motion-- each of these points corresponds\nto an assignment of velocity",
    "start": "2184010",
    "end": "2189350"
  },
  {
    "text": "vectors where you move and you\npreserve all the constraints. If I take such a motion,\nI can scale it up.",
    "start": "2189350",
    "end": "2195200"
  },
  {
    "text": "It's still a motion. Motions form a cone. It's called a convex cone.",
    "start": "2195200",
    "end": "2200780"
  },
  {
    "text": "Every motion can be scaled up\nor down all the way to zero. So if we look at the cone\nof expansive motions,",
    "start": "2200780",
    "end": "2215220"
  },
  {
    "text": "it's also a cone. It's a cone of motions of a\nparticular tensegrity where",
    "start": "2215220",
    "end": "2220940"
  },
  {
    "text": "we add all pairwise struts. Then, the pseudo-triangulations\ncorrespond",
    "start": "2220940",
    "end": "2229430"
  },
  {
    "text": "to these edges of the cone. These edges,\nthey're really rays.",
    "start": "2229430",
    "end": "2235740"
  },
  {
    "text": "They go off to infinity. These things are\ncalled extreme rays. ",
    "start": "2235740",
    "end": "2243590"
  },
  {
    "text": "Meaning, they're extreme\nin a particular direction. Like if I want the motion\nthat is the most this way,",
    "start": "2243590",
    "end": "2249600"
  },
  {
    "text": "then it will be this ray. They're kind of the\ncorners of this polyhedron.",
    "start": "2249600",
    "end": "2255350"
  },
  {
    "text": "The edges of the\npolyhedron, if you will. Although in higher\ndimensions, it is edges",
    "start": "2255350",
    "end": "2260430"
  },
  {
    "text": "but they're called extreme\nrays in the case of a cone.",
    "start": "2260430",
    "end": "2266579"
  },
  {
    "text": "The extreme rays in the\ncone of expansive motions equal pointed\npseudo-triangulations",
    "start": "2266580",
    "end": "2273570"
  },
  {
    "text": "minus one edge. ",
    "start": "2273570",
    "end": "2290500"
  },
  {
    "text": "I think I have a slide about it. Yes. So this is a paper by [? Roto ?]\n[? Santos ?] [? Enstrenu ?].",
    "start": "2290500",
    "end": "2298330"
  },
  {
    "text": "This is just a particular\nexample for five points. These are all the different\npseudo-triangulations",
    "start": "2298330",
    "end": "2304380"
  },
  {
    "text": "minus an edge. In some cases, like here,\nyou get two triangles. So that becomes rigid.",
    "start": "2304380",
    "end": "2309690"
  },
  {
    "text": "So they fill in the\nwhole clique to indicate that's a rigid component. But the claim is\nfor five points.",
    "start": "2309690",
    "end": "2316210"
  },
  {
    "text": "These are the edges\nof the expansive cone. Each of these guys has\nan expansive motion. Like this guy would rotate. Pretty simple.",
    "start": "2316210",
    "end": "2322040"
  },
  {
    "text": "This one would open up a little. Like that. In general, all these guys\nhave an expansive motion.",
    "start": "2322040",
    "end": "2329440"
  },
  {
    "text": "Those are\ncharacterizing the cone. Those are kind of the\nextreme rays in this fairly",
    "start": "2329440",
    "end": "2335530"
  },
  {
    "text": "high-dimensional cone. It has something like 10\ndimensions if it's 5 times 2.",
    "start": "2335530",
    "end": "2340850"
  },
  {
    "text": "And you can prove that\nif you're interested. Read the paper. So, in fact,\npseudo-triangulations",
    "start": "2340850",
    "end": "2350290"
  },
  {
    "start": "2350000",
    "end": "2650000"
  },
  {
    "text": "are really core to\nexpansive motions. If you wrote down the\nlinear program, which is the expansive\nmotions, then you",
    "start": "2350290",
    "end": "2357562"
  },
  {
    "text": "are essentially\ncharacterizing this as the polyhedron in\nthe linear program. If you know linear programming. And you follow the\nsimplex method.",
    "start": "2357562",
    "end": "2363960"
  },
  {
    "text": "Simplex method is all about\nfinding where the edges are. And here they are. So you would actually, if you\nimplemented the linear program,",
    "start": "2363960",
    "end": "2371359"
  },
  {
    "text": "ran it on a simplex\nsolver, you would get pointed\npseudo-triangulations automatically.",
    "start": "2371360",
    "end": "2376940"
  },
  {
    "text": "They would just pop out. That's actually originally\nhow they were discovered. But then this is why they\nwere discovered that way.",
    "start": "2376940",
    "end": "2383210"
  },
  {
    "text": " End of pseudo-triangulations.",
    "start": "2383210",
    "end": "2390410"
  },
  {
    "text": "All right. Next question is have any of\nthe open problems been solved? [CHUCKLE] I get this\nalmost every lecture",
    "start": "2390410",
    "end": "2396480"
  },
  {
    "text": "and usually the answer is, no. So I don't tell you anything. But this time, there\nis a nice result",
    "start": "2396480",
    "end": "2401580"
  },
  {
    "text": "which is related\nto this picture. These are slides\nfrom the lecture.",
    "start": "2401580",
    "end": "2408839"
  },
  {
    "text": "We had this linear\nlocked tree, which is minimal among all\nlinear locked trees.",
    "start": "2408840",
    "end": "2414070"
  },
  {
    "text": "Minimum number of edges. We have this\nequilateral locked tree. All the edges were\nthe same length.",
    "start": "2414070",
    "end": "2419960"
  },
  {
    "text": "Was not strongly locked. There was some positive\ndistances here, but it is locked.",
    "start": "2419960",
    "end": "2425430"
  },
  {
    "text": "I didn't mention this question,\nbut an obvious open question is, can you get both\nat the same time? Is there a linear\nequilateral locked tree?",
    "start": "2425430",
    "end": "2432937"
  },
  {
    "text": "If there were, it'd\nprobably be a lot easier to prove locked that this mess. So it'd be nice to get both but,\nin fact, you cannot get both.",
    "start": "2432937",
    "end": "2441339"
  },
  {
    "text": "There's this paper by a bunch\nof people in the open problem session from two years ago.",
    "start": "2441340",
    "end": "2447400"
  },
  {
    "text": "It finally got\npublished last year. And it proves a bunch\nof things, but one",
    "start": "2447400",
    "end": "2453390"
  },
  {
    "text": "of the things it\nproves that there's no equilateral locked tree\nthat is also linear, also",
    "start": "2453390",
    "end": "2459260"
  },
  {
    "text": "lives in a single dimension. And the way it proves\nthat, essentially,",
    "start": "2459260",
    "end": "2466280"
  },
  {
    "text": "so you take any linear\nequilateral tree.",
    "start": "2466280",
    "end": "2471380"
  },
  {
    "text": "What does it look like? ",
    "start": "2471380",
    "end": "2478820"
  },
  {
    "text": "Well, it lives\nalong a line here. It's segmented into\nequal-length chunks.",
    "start": "2478820",
    "end": "2486310"
  },
  {
    "text": "So from a high level,\nit looks like this. Now in reality,\nthere could be lots",
    "start": "2486310",
    "end": "2491590"
  },
  {
    "text": "of edges along each\nof these segments. And there's interesting\nthings happening inside one of these vertices.",
    "start": "2491590",
    "end": "2498430"
  },
  {
    "text": "Could be something like this. That's one way to do a\ntree-like structure in there.",
    "start": "2498430",
    "end": "2505630"
  },
  {
    "text": "It could have parts\nlike this that go from side to side\nwithout touching these guys.",
    "start": "2505630",
    "end": "2511410"
  },
  {
    "text": "Who knows what's happening\nhere, but from a high-level perspective, it's a bunch\nof segments in a path.",
    "start": "2511410",
    "end": "2517859"
  },
  {
    "text": "The idea is this is\nbasically just looking at five of the vertices\nout of all n of them.",
    "start": "2517860",
    "end": "2525149"
  },
  {
    "text": "But if we just look at\nthose five vertices, everything looks good. This is in canonical form. Canonical form for\na tree is where",
    "start": "2525149",
    "end": "2531220"
  },
  {
    "text": "all the edges\npoint to the right. Something like this\nis nice and canonical.",
    "start": "2531220",
    "end": "2536830"
  },
  {
    "text": "So right now this is canonical. What we do is look\ninside the path here.",
    "start": "2536830",
    "end": "2542060"
  },
  {
    "text": "Look for a break point where\nthings are not canonical. And then we fix it.",
    "start": "2542060",
    "end": "2547370"
  },
  {
    "text": "So here's just an\nexample of that. Here, this is what it looks\nlike currently at a high level.",
    "start": "2547370",
    "end": "2553460"
  },
  {
    "text": "Here's what it looks\nlike in reality. So imagine-- so the tree\nis doing this stuff locally",
    "start": "2553460",
    "end": "2559370"
  },
  {
    "text": "at all these vertices. Right now, we're coalescing this\nall into one big mega-vertex. And then it looks like this.",
    "start": "2559370",
    "end": "2565670"
  },
  {
    "text": "But suppose now we realize,\noh actually there's kind of a split here. There's stuff over\nto the right of this.",
    "start": "2565670",
    "end": "2571360"
  },
  {
    "text": "There's stuff over\nto right of this. They're not directly connected. Then what we'll do\nis pull it apart. Treat these as two\nseparate vertices.",
    "start": "2571360",
    "end": "2577640"
  },
  {
    "text": "Increase the number of vertices\nin this picture by one. So we end up splitting\nw here, according",
    "start": "2577640",
    "end": "2582930"
  },
  {
    "text": "to whatever is actually\nhappening in the linkage. And then we say, oh gosh, this\nis not really canonical, right?",
    "start": "2582930",
    "end": "2588410"
  },
  {
    "text": "This edge is\npointing to the left. These guys are pointing\nto the right, still. But this one's\npointing to the left. So it looks like this picture\ngot a rightward edge and then",
    "start": "2588410",
    "end": "2595788"
  },
  {
    "text": "a leftward edge. We fix it by just rotating\nthis edge 180 degrees, keeping",
    "start": "2595788",
    "end": "2601370"
  },
  {
    "text": "at all times this thing\npointing to the right. So this comes\nalong for the ride.",
    "start": "2601370",
    "end": "2606410"
  },
  {
    "text": "And then we will end\nup with this picture. Now we're canonical again\nwith one more vertex. We'll repeat.",
    "start": "2606410",
    "end": "2611660"
  },
  {
    "text": "Eventually we'll be canonical\nwith all the vertices. And we're done. So if you take any\ntwo configurations,",
    "start": "2611660",
    "end": "2617980"
  },
  {
    "text": "you canonicalize both of them. You will end up with\nessentially the same picture. It doesn't matter\nwhich route you choose.",
    "start": "2617980",
    "end": "2624570"
  },
  {
    "text": "But it's already\nknown that it doesn't matter which route you choose. You can change the route\njust by flopping the tree",
    "start": "2624570",
    "end": "2631900"
  },
  {
    "text": "with one motion or a very\nsmall number of motions. So if you have two\nconfigurations,",
    "start": "2631900",
    "end": "2637500"
  },
  {
    "text": "you canonicalize\nboth of them then. Then there's a\nmotion between them and you get a motion from one\nconfiguration to the other.",
    "start": "2637500",
    "end": "2645010"
  },
  {
    "text": "Therefore, there\nare no locked trees that are equilateral and linear. ",
    "start": "2645010",
    "end": "2651440"
  },
  {
    "start": "2650000",
    "end": "2710000"
  },
  {
    "text": "Kind of nice. The last thing I want\nto talk about is 4D.",
    "start": "2651440",
    "end": "2657290"
  },
  {
    "text": "A couple people asked about 4D. Why is it so different from 3D? The essential reason is we\nhave one-dimensional bars,",
    "start": "2657290",
    "end": "2664530"
  },
  {
    "text": "but four dimensions of motion. That's a gap of\nthree dimensions. Three dimensions is a lot.",
    "start": "2664530",
    "end": "2670860"
  },
  {
    "text": "When you have\none-dimensional chains in 3D, you have a gap of\ntwo dimensions. Two dimensions turns\nout to not be a lot.",
    "start": "2670860",
    "end": "2676130"
  },
  {
    "text": "[CHUCKLE] So why is that? Let me prove it to you. Here is actually an animation\nof the motion, just for fun.",
    "start": "2676130",
    "end": "2683059"
  },
  {
    "text": "This is in the textbook. The top row is if you are zoomed\nout from the very beginning.",
    "start": "2683060",
    "end": "2688590"
  },
  {
    "text": "It's this mess and you\nbasically pull out a string. It actually wiggles\naround a lot.",
    "start": "2688590",
    "end": "2693660"
  },
  {
    "text": "Here's what it looks\nlike zoomed in. This is the original mess. And you end up flopping\nthis over here,",
    "start": "2693660",
    "end": "2698910"
  },
  {
    "text": "then flopping it over there. And it's hard to\nsee because this is a two-dimensional projection\nof a four-dimensional thing. But eventually you pull\nopen the whole thing.",
    "start": "2698910",
    "end": "2706247"
  },
  {
    "text": "So how does this algorithm work? It's actually very simple. ",
    "start": "2706247",
    "end": "2713030"
  },
  {
    "start": "2710000",
    "end": "3092000"
  },
  {
    "text": "For open chains,\nit's very simple. Closed chains, a little\nmore complicated. Trees, also very simple.",
    "start": "2713030",
    "end": "2720220"
  },
  {
    "text": "So unfolding 4D open chains.",
    "start": "2720220",
    "end": "2730859"
  },
  {
    "text": "This is by Roxanna Cocan\nand Joseph O'Rourke. Back before the\ncarpenter's rule theorem.",
    "start": "2730860",
    "end": "2736500"
  },
  {
    "text": " This publication was later\nbut the original version was in 1998, I think, or '99.",
    "start": "2736500",
    "end": "2745549"
  },
  {
    "text": "So what do we do? Well, what I do is\nlook at the end bar.",
    "start": "2745550",
    "end": "2750740"
  },
  {
    "text": "So let's say this is\nthe end of the chain. From here it goes in some\ndirection, and stuff.",
    "start": "2750740",
    "end": "2756190"
  },
  {
    "text": "What I'd like to do\nis rotate this bar so that it extends this bar.",
    "start": "2756190",
    "end": "2762530"
  },
  {
    "text": "So I have an\n180-degree angle here. That's my goal. If I can do that, I\ncan fuse that vertex,",
    "start": "2762530",
    "end": "2768790"
  },
  {
    "text": "never rotate it again. Treat this as a longer edge. Therefore the remaining\nthing has n minus 1 edges",
    "start": "2768790",
    "end": "2775040"
  },
  {
    "text": "if I had n edges originally. So I can just apply induction. In other words,\njust repeat that. Eventually the whole\nthing will be straight.",
    "start": "2775040",
    "end": "2781690"
  },
  {
    "text": "So the challenge is,\ncan I make a move-- can I fold this last\nbar to extend the next--",
    "start": "2781690",
    "end": "2788230"
  },
  {
    "text": "the second bar? Two issues. Two problems that\ncould happen here.",
    "start": "2788230",
    "end": "2794540"
  },
  {
    "text": "One is that there's no\ncontinuous motion to get there. The other problem is that\neven instantaneously,",
    "start": "2794540",
    "end": "2801060"
  },
  {
    "text": "if I just picked it\nup and dropped it into the right\nlocation, it might intersect the rest of the chain.",
    "start": "2801060",
    "end": "2807060"
  },
  {
    "text": "Maybe the chain here comes\nand intersects that ray. If it intersects that ray, I\ncan just jiggle the whole chain",
    "start": "2807060",
    "end": "2814940"
  },
  {
    "text": "a little bit, and it won't. [CHUCKLE] Is that clear? Let's see, you've got\nthese one-dimensional bars,",
    "start": "2814940",
    "end": "2822450"
  },
  {
    "text": "and this is a\none-dimensional target ray. So if a bar happens\nto be on this ray,",
    "start": "2822450",
    "end": "2828610"
  },
  {
    "text": "just wiggle it a tiny bit. It's going to come\noff of that place. This will actually even\nwork in three dimensions.",
    "start": "2828610",
    "end": "2834980"
  },
  {
    "text": "This step.  There's an even easier way to do\nit, is just to rotate this bar.",
    "start": "2834980",
    "end": "2842152"
  },
  {
    "text": "If you rotate this\nbar, you can basically point the ray wherever you want. And if you look at where\nthat bar is pointing,",
    "start": "2842152",
    "end": "2849080"
  },
  {
    "text": "it's kind of hard\nto draw the picture but you just have to miss all\nof these one-dimensional things.",
    "start": "2849080",
    "end": "2855089"
  },
  {
    "text": "So it's very easy to miss. So let's just assume for now--\nwe'll kind of see this again in a moment.",
    "start": "2855090",
    "end": "2860212"
  },
  {
    "text": "Assume that this ray\nhappens to be clear. There maybe things that\ncome very close to it.",
    "start": "2860212",
    "end": "2865230"
  },
  {
    "text": "Maybe they go on the backside\nand then come on the front. But they never-- don't\nactually touch the ray.",
    "start": "2865230",
    "end": "2871910"
  },
  {
    "text": "Now think about where this bar\ncan go relative to this vertex.",
    "start": "2871910",
    "end": "2877349"
  },
  {
    "text": "If I draw a little\nsphere here, I'm going to draw it initially\nin three dimensions",
    "start": "2877350",
    "end": "2883640"
  },
  {
    "text": "but really it's in\nfour dimensions. So I have a little sphere. Where this bar is\ncurrently, corresponds",
    "start": "2883640",
    "end": "2889800"
  },
  {
    "text": "to a single point on the sphere. I'm currently here. Where I want to be corresponds\nto another point on the sphere.",
    "start": "2889800",
    "end": "2897150"
  },
  {
    "text": "My goal is to find a path on\nthe sphere that gets to the x.",
    "start": "2897150",
    "end": "2903079"
  },
  {
    "text": "Gets to the buried treasure. This is essentially treating\nthis as a whole ray.",
    "start": "2903080",
    "end": "2909250"
  },
  {
    "text": "So I don't even care\nthat it's short. If I just imagine it\ngoing off to infinity, can I go from\nposition a position b?",
    "start": "2909250",
    "end": "2915810"
  },
  {
    "text": " Now in three dimensions, this\nis a two-dimensional sphere.",
    "start": "2915810",
    "end": "2923637"
  },
  {
    "text": "And if you look at the\nobstacles, the things I have to avoid,\nthose correspond to one-dimensional bars here.",
    "start": "2923637",
    "end": "2931258"
  },
  {
    "text": "Which, if you project\nthem onto the sphere, correspond to great\ncircular arcs. So the worry would\nbe-- let me draw them",
    "start": "2931259",
    "end": "2938079"
  },
  {
    "text": "in red, the obstacles. The things that will\nkill you if you hit them. The worry would be\nyou have what we",
    "start": "2938080",
    "end": "2944080"
  },
  {
    "text": "call a cage,\nsomething like this, of one-dimensional\nobstacles on the sphere that",
    "start": "2944080",
    "end": "2952010"
  },
  {
    "text": "block this x-point. Block the target\nfrom the source.",
    "start": "2952010",
    "end": "2958180"
  },
  {
    "text": "And in 3D this--\nif you draw what happens in the knitting\nneedles, this is what happens. You can't move the last link\nto extend the previous one",
    "start": "2958180",
    "end": "2965520"
  },
  {
    "text": "because one-dimensional\nbarriers are a problem on a\ntwo-dimensional sphere because 2 minus 1 equals 1.",
    "start": "2965520",
    "end": "2973359"
  },
  {
    "text": "But on a\nthree-dimensional sphere, if you draw\none-dimensional obstacles, they have basically no\neffect on the sphere.",
    "start": "2973360",
    "end": "2981069"
  },
  {
    "text": "They do not\ndisconnect the surface of a three-dimensional sphere. Can you see that?\n[CHUCKLE] The analogy--",
    "start": "2981070",
    "end": "2987650"
  },
  {
    "text": "if you just keep the difference\nin dimensions the same-- so we have a\nthree-dimensional sphere",
    "start": "2987650",
    "end": "2992964"
  },
  {
    "text": "versus a one-dimensional\nobstacle. Let's go down a dimension. You have a\ntwo-dimensional sphere and a zero-dimensional obstacle.",
    "start": "2992964",
    "end": "2998820"
  },
  {
    "text": "What's a zero-dimensional\nobstacle? A point. So imagine you have all\nthese red points which",
    "start": "2998820",
    "end": "3005600"
  },
  {
    "text": "you can't touch. And then you have the initial\nposition and the target position, b.",
    "start": "3005600",
    "end": "3010750"
  },
  {
    "text": "How do you get there? No problem. There's tons of paths. It's basically the same in four\ndimensions, just harder to see.",
    "start": "3010750",
    "end": "3019130"
  },
  {
    "text": "You have a three-sphere, which\nis the boundary of a four-ball.",
    "start": "3019130",
    "end": "3024519"
  },
  {
    "text": "And you have these\none-dimensional arcs on it. And they just don't\nblock your way at all because they're so\nlow-dimensional.",
    "start": "3024520",
    "end": "3030900"
  },
  {
    "text": "So that's intuitively why 4D\nis easy, 5D is also easy, 6D, and so on. Because the obstacles\nare so tiny.",
    "start": "3030900",
    "end": "3037330"
  },
  {
    "text": "The obstacles remain\none-dimensional on this high-dimensional sphere. You can just fix\none link at a time. Eventually the whole\nthing will be straight.",
    "start": "3037330",
    "end": "3044876"
  },
  {
    "text": "Ta-da, 4D! Any final questions?",
    "start": "3044876",
    "end": "3050030"
  },
  {
    "text": "Yes? AUDIENCE: Is the situation\nof folding a surface",
    "start": "3050030",
    "end": "3056411"
  },
  {
    "text": "in four dimensions\nroughly analogous with folding [INAUDIBLE]? PROFESSOR: Folding a\ntwo-dimensional surface in four dimensions?",
    "start": "3056412",
    "end": "3062870"
  },
  {
    "text": "Definitely, this\nargument breaks down. And so you can get\nlocked things, there.",
    "start": "3062870",
    "end": "3068882"
  },
  {
    "text": "If you'd asked earlier\nI could show one example we have of a kind\nof locked surface. I don't know if there's\nactually a locked 2D",
    "start": "3068882",
    "end": "3075010"
  },
  {
    "text": "surface in 4D known, though. I suspect there is one. That could be an interesting\nquestion to work on.",
    "start": "3075010",
    "end": "3080630"
  },
  {
    "text": " Think about that. All right, see you Thursday.",
    "start": "3080630",
    "end": "3087819"
  },
  {
    "start": "3087820",
    "end": "3092641"
  }
]