[
  {
    "text": "[SQUEAKING] [RUSTLING] [CLICKING]",
    "start": "0",
    "end": "7305"
  },
  {
    "text": " ANA BELL: All right, so\nlet's begin today's lecture.",
    "start": "7305",
    "end": "15150"
  },
  {
    "text": "We have only two lectures\nleft, this one and next Monday. I realized that\nthere are no more",
    "start": "15150",
    "end": "21560"
  },
  {
    "text": "deliverables for this class. No more quizzes after\ntonight, no more P sets. So I do appreciate you\ncoming to these lectures.",
    "start": "21560",
    "end": "28670"
  },
  {
    "text": "They're intended to be\na little bit more fun. No need to take notes. Just kind of sit back\nand enjoy the content.",
    "start": "28670",
    "end": "35690"
  },
  {
    "text": "Today, we're going to be talking\nabout a library in Python that can help you do plotting.",
    "start": "35690",
    "end": "41540"
  },
  {
    "text": "And the reason why we talk\nabout this plotting library as opposed to something else\nthat's maybe more machine learning or something\nelse like that is because",
    "start": "41540",
    "end": "48680"
  },
  {
    "text": "at one point or\nanother, if you decide to take any other course that\nkind of builds upon this intro",
    "start": "48680",
    "end": "54469"
  },
  {
    "text": "course, you'll probably\nwant to create some graphs or visualize something.",
    "start": "54470",
    "end": "59570"
  },
  {
    "text": "Even if you do a\nUROP, you'll probably have to visualize\nsome sort of data. And it's a really nice\nnext step to show you",
    "start": "59570",
    "end": "67490"
  },
  {
    "text": "how to use a library\nthat already exists. So somebody already\nput in the work in creating this library\nthat can plot things for us.",
    "start": "67490",
    "end": "74440"
  },
  {
    "text": "So let's just try to use it. And so it's just a really,\nreally nice way for us",
    "start": "74440",
    "end": "79710"
  },
  {
    "text": "to wrap up the course by showing\nyou this visualization library.",
    "start": "79710",
    "end": "85930"
  },
  {
    "text": "So we're going to--\nthe library we're going to do to use\nis called matplotlib.",
    "start": "85930",
    "end": "91320"
  },
  {
    "text": "And it's the most basic\nplotting visualization library that we can have. And the way that we\nbring it into our code,",
    "start": "91320",
    "end": "98729"
  },
  {
    "text": "just like we have in\nthe past few lectures, is with this import statement. And the actual file\nthat comes into our--",
    "start": "98730",
    "end": "107580"
  },
  {
    "text": "that we would bring\ninto our program is called matplotlib.pyplot. Now, that's kind of a mouthful.",
    "start": "107580",
    "end": "113430"
  },
  {
    "text": "And a lot of times when\nwe want to use this-- or when we want to\nuse this library,",
    "start": "113430",
    "end": "118530"
  },
  {
    "text": "you'd have to basically say\nmatplotlib.pyplot dot function name from that file.",
    "start": "118530",
    "end": "124030"
  },
  {
    "text": "And so that's a lot of\nwriting and a lot of typing. So when we bring it into our-- when we bring in this\nlibrary into our own file,",
    "start": "124030",
    "end": "131580"
  },
  {
    "text": "we can actually rename it. So \"as plt\" tells\nPython that now I",
    "start": "131580",
    "end": "137430"
  },
  {
    "text": "would like to refer to this file\nand this library as the name plt. So if we ever want to\ncall functions or maybe objects",
    "start": "137430",
    "end": "147480"
  },
  {
    "text": "and things like\nthat from this file, we would do it using plt dot\nand then the name of whatever we",
    "start": "147480",
    "end": "153299"
  },
  {
    "text": "want to use. So it's just a much nicer way\nto grab the contents of the file instead of always writing\nmatplotlib.pyplot dot",
    "start": "153300",
    "end": "161100"
  },
  {
    "text": "something else. Yeah, question. AUDIENCE: Is plt\na variable name? ANA BELL: You can think\nof it as a variable name.",
    "start": "161100",
    "end": "166260"
  },
  {
    "text": "It's anything you want it to be. So you can import it\nmatplotlib.pyplot as ana.",
    "start": "166260",
    "end": "171359"
  },
  {
    "text": "And then from there\non, you can say ana dot process name, or\nplot, or whatever it is.",
    "start": "171360",
    "end": "176890"
  },
  {
    "text": "So it's just whatever\nname you want to give it. ",
    "start": "176890",
    "end": "182040"
  },
  {
    "text": "OK, so there are other\nvisualization libraries that exist out there.",
    "start": "182040",
    "end": "189349"
  },
  {
    "text": "A lot of them-- or all of\nthem build upon this one. So this is the most basic\nlibrary that you can get.",
    "start": "189350",
    "end": "195650"
  },
  {
    "text": "And the other ones that\nexist build upon it by doing some things\nbehind the scenes",
    "start": "195650",
    "end": "201709"
  },
  {
    "text": "to maybe make your\nlives easier or to do some really cool\nvisualizations or maybe",
    "start": "201710",
    "end": "207680"
  },
  {
    "text": "things where you can hover\nthe mouse over a coordinate and things like that. But we don't need to do\nany of that at this time.",
    "start": "207680",
    "end": "215180"
  },
  {
    "text": "It's just nice to take a look at\nthis really basic visualization library.",
    "start": "215180",
    "end": "220560"
  },
  {
    "text": "So throughout the\nlecture, we're going to look a little\nbit at some code. We're going to run\nit on the Python--",
    "start": "220560",
    "end": "226320"
  },
  {
    "text": "just from the Python file. Then we'll just talk\nabout it on the slides. So whenever we're\nplotting things,",
    "start": "226320",
    "end": "232490"
  },
  {
    "text": "we need to tell Python a set of\nx values and a set of y values.",
    "start": "232490",
    "end": "238550"
  },
  {
    "text": "That's pretty common. If you've used\nMatlab, you'll know that that's kind of the way\nit's done-- same in Python.",
    "start": "238550",
    "end": "245030"
  },
  {
    "text": "So when we're creating\nthe coordinates that we'd like to\nplot in a 2D plane,",
    "start": "245030",
    "end": "250489"
  },
  {
    "text": "we're essentially just creating\ntwo lists, where index by index we're going to have\na list containing",
    "start": "250490",
    "end": "257419"
  },
  {
    "text": "all the values that we want for\nthe x coordinate and a list-- and in a separate list\nall the values that we'd",
    "start": "257420",
    "end": "264620"
  },
  {
    "text": "like for the y coordinate. So at index 0 in\neach of these lists, you're basically creating\nx values at index 0,",
    "start": "264620",
    "end": "271880"
  },
  {
    "text": "y values at index 0 becomes\nthe coordinate-- one coordinate point. So one of the very simplest\nthings that we can do",
    "start": "271880",
    "end": "279590"
  },
  {
    "text": "is we can create a\nnice list of values that will be our x values.",
    "start": "279590",
    "end": "285090"
  },
  {
    "text": "So our x-axis will basically\nbe the numbers 0 through 29.",
    "start": "285090",
    "end": "290190"
  },
  {
    "text": "And then down here we can\ncreate four different lists containing four different\ny value coordinates.",
    "start": "290190",
    "end": "298450"
  },
  {
    "text": "So when we're\nplotting, we're going to plot this x value\nlist against all",
    "start": "298450",
    "end": "303780"
  },
  {
    "text": "these linear points, this\nx value list against all these quadratic points,\nand this x value list against the cubic\npoints, and so on.",
    "start": "303780",
    "end": "310780"
  },
  {
    "text": "So the way we're\ncreating these lists are a pretty familiar\nPython syntax.",
    "start": "310780",
    "end": "316800"
  },
  {
    "text": "Our n is going through 0 to 29. And then we're\nappending to the end of each one of these lists,\nlinear, quadratic, cubic,",
    "start": "316800",
    "end": "324060"
  },
  {
    "text": "and exponential, some\nfunction of that n. So the linear list will just\nhave all the values again.",
    "start": "324060",
    "end": "331060"
  },
  {
    "text": "So we're plotting 0,\n0, 1, 1, 2, 2, so on. The quadratic list, we'll be\nplotting 0, 0, 1, 1, 2, 4, 3,",
    "start": "331060",
    "end": "338639"
  },
  {
    "text": "9, and so on. Same with the cubic and\nthen this exponential. I just chose randomly\n1.5 to the power of n",
    "start": "338640",
    "end": "346180"
  },
  {
    "text": "just because it kind of\nlooked nice in the plot, but you can imagine\ndifferent number for the exponential in there.",
    "start": "346180",
    "end": "353210"
  },
  {
    "text": "So the way we plot some values\nis by, not surprisingly,",
    "start": "353210",
    "end": "359410"
  },
  {
    "text": "the plot command. So plt was how we\ndecided to import that library as, the\nname that we gave it,",
    "start": "359410",
    "end": "366280"
  },
  {
    "text": "dot plot tells Python\nwe'd like to plot some list of x and y values.",
    "start": "366280",
    "end": "371990"
  },
  {
    "text": "So the parameters\nto the plot command are going to be two\nsequences of values.",
    "start": "371990",
    "end": "377270"
  },
  {
    "text": "They can be lists typically,\nbut they could also be tuples. They could also be\nthe keys you get",
    "start": "377270",
    "end": "383110"
  },
  {
    "text": "from a dictionary that was also\nan iterable, things like that. So we have to pass in a\nlist of numerical things.",
    "start": "383110",
    "end": "390140"
  },
  {
    "text": "So this will be typically\nthe stuff on your x-axis. And the second\nparameter is going to be the function of\nthose values of the x-axis.",
    "start": "390140",
    "end": "397850"
  },
  {
    "text": "The lists have to be the\nsame length, obviously, so Python knows which\ncoordinates we're plotting.",
    "start": "397850",
    "end": "403520"
  },
  {
    "text": "If they're not the same\nlength by accident, then Python will throw an\nerror and then you don't--",
    "start": "403520",
    "end": "409699"
  },
  {
    "text": "it just won't plot anything. So when we run the code, Python\nwill generally plot the values",
    "start": "409700",
    "end": "418400"
  },
  {
    "text": "in either a new\nwindow or directly in line in the console,\nso right over here.",
    "start": "418400",
    "end": "425819"
  },
  {
    "text": "So right in here, it\ncould put the plot directly sort of in line\nwith a bunch of stuff",
    "start": "425820",
    "end": "431480"
  },
  {
    "text": "that you might print out. To toggle between that,\njust out of curiosity, you go to Tools, Preferences,\niPython console, Graphics.",
    "start": "431480",
    "end": "439070"
  },
  {
    "text": "And then here you can\nchoose either automatic, which will make a new\nwindow for us that's interactive, you\ncan zoom in and out,",
    "start": "439070",
    "end": "445070"
  },
  {
    "text": "things like that, or\ninline, which will just put the plot that you tell\nPython to generate directly",
    "start": "445070",
    "end": "452030"
  },
  {
    "text": "in the console here. So I prefer the new window\nbecause it's easier for me",
    "start": "452030",
    "end": "457070"
  },
  {
    "text": "to interact with it. So we'll do that. So let's actually run\none of the plot commands.",
    "start": "457070",
    "end": "462710"
  },
  {
    "text": "So plt.plot, we're plotting\nhere the x-axis as just",
    "start": "462710",
    "end": "467810"
  },
  {
    "text": "the numbers 0 through 29. And the y-axis is just going to\nalso be the value 0 through 29. So we've made a nice\nlittle linear plot.",
    "start": "467810",
    "end": "474710"
  },
  {
    "text": "And you notice it popped up a\nlittle window down here for me. And this is the plot\nthat it generated.",
    "start": "474710",
    "end": "480650"
  },
  {
    "text": "Yay, not surprising. This is exactly what\nwe expected out of it.",
    "start": "480650",
    "end": "486520"
  },
  {
    "text": "OK, so what do we\nnotice about that plot? We notice how Python nicely\nfit the line within this frame.",
    "start": "486520",
    "end": "496510"
  },
  {
    "text": "So it added a little bit\nof wiggle room to the left and to the right of my line and\nto the below and above my line",
    "start": "496510",
    "end": "502540"
  },
  {
    "text": "just so it fits nicely\nwithin the frame. It didn't zoom out to some\nstandard 0 to 100 value.",
    "start": "502540",
    "end": "509919"
  },
  {
    "text": "It zoomed in to this 0 to\n30-ish range, 0 to 30-ish on the y-axis range.",
    "start": "509920",
    "end": "514990"
  },
  {
    "text": "So really, really nice that\nit did all that for us.",
    "start": "514990",
    "end": "520929"
  },
  {
    "text": "The order of the points\ndoes matter in the list. So you'll notice one of the\nother things in this plot",
    "start": "520929",
    "end": "526930"
  },
  {
    "text": "here is we gave it actual\npoints that it needed to plot. But the plot command doesn't\nplot the points by default.",
    "start": "526930",
    "end": "534940"
  },
  {
    "text": "Instead, it just connects\nall the points by line. So it connects consecutive\nindices of points by a line.",
    "start": "534940",
    "end": "541750"
  },
  {
    "text": "So connected the 0, 0,\n1, 1, 2, 2, and so on. So the order of the points\ndoes actually matter.",
    "start": "541750",
    "end": "548830"
  },
  {
    "text": "If we have a function,\nfor example, in this case, n and n squared--",
    "start": "548830",
    "end": "554600"
  },
  {
    "text": "so n being 0 through 29 and\nn squared being 0, 1, 2, 4-- 0, 1, 4, 9, and so on--",
    "start": "554600",
    "end": "562050"
  },
  {
    "text": "but they're in-- but\nthey're out of order, Python will just take\nconsecutive pairs",
    "start": "562050",
    "end": "567440"
  },
  {
    "text": "from those lists and\nconnect them with a line. So here's an example.",
    "start": "567440",
    "end": "572700"
  },
  {
    "text": "I've got my x values\nlist is this testSamples. It's all the numbers 0\nthrough 29 but out of order.",
    "start": "572700",
    "end": "580279"
  },
  {
    "text": "And the test values associated\nwith each one of those, again, they are correct.",
    "start": "580280",
    "end": "586110"
  },
  {
    "text": "This is 0 squared. This 25 is 5 squared. This 9 is 3 squared. But they're out of order.",
    "start": "586110",
    "end": "591810"
  },
  {
    "text": "So if we run that just\nwith a pure plot command,",
    "start": "591810",
    "end": "598150"
  },
  {
    "text": "we're going to get\nsome garbage plot. It doesn't look very\nnice, and we already",
    "start": "598150",
    "end": "607420"
  },
  {
    "text": "know what's wrong, right? Python just connected 0, 0, 5,\n25, and then 3, 9 by a line--",
    "start": "607420",
    "end": "615520"
  },
  {
    "text": "not really very nice. Instead, what we'd like\nto do is to just tell",
    "start": "615520",
    "end": "623290"
  },
  {
    "text": "Python to plot the points. So I don't care about\nconnecting them with a line. In this case, I\nwould tell Python,",
    "start": "623290",
    "end": "629320"
  },
  {
    "text": "instead of just plotting it, to\ncreate a scatter plot for me. So plt.scatter with the\nsame list of x and y values",
    "start": "629320",
    "end": "637540"
  },
  {
    "text": "is going to just create\nfor me this nice plot where it plots the coordinates.",
    "start": "637540",
    "end": "643908"
  },
  {
    "text": "It doesn't matter that they're\nout of order because they just get plotted without\nanything connecting them.",
    "start": "643908",
    "end": "649206"
  },
  {
    "text": "So pretty nice. So that's this example\nthat we just did here.",
    "start": "649206",
    "end": "655220"
  },
  {
    "text": "And then this is us doing\na scatter plot giving us this nice plot.",
    "start": "655220",
    "end": "660840"
  },
  {
    "text": "OK, one of the other things\nthat you might want to do is to have a whole\nbunch of lines",
    "start": "660840",
    "end": "666480"
  },
  {
    "text": "being plotted on one window. So to do that, all you\nhave to tell Python",
    "start": "666480",
    "end": "673230"
  },
  {
    "text": "is just a sequence of\nall the commands, all the plotting commands\nor everything that you'd like to\nplot on the one figure.",
    "start": "673230",
    "end": "679920"
  },
  {
    "text": "So without telling\nPython you'd like to create a new figure,\nanytime it sees a plot command,",
    "start": "679920",
    "end": "686120"
  },
  {
    "text": "it will just keep adding\nwhatever points get generated or whatever lines get generated\nto the current figure that's",
    "start": "686120",
    "end": "692889"
  },
  {
    "text": "open. So we just have one thing\nthat's open right now. So it'll just keep adding\nstuff to our figure.",
    "start": "692890",
    "end": "699860"
  },
  {
    "text": "So here I've got four\nplotting commands in a row. I never explicitly told Python\nto create a new figure for me.",
    "start": "699860",
    "end": "706120"
  },
  {
    "text": "So it's just going to add\nall four of these lines to the same plot. So it just doesn't\ncreate a new figure.",
    "start": "706120",
    "end": "713050"
  },
  {
    "text": "It just keeps adding\nstuff to my plot. So you can imagine if I\nadded a scatter plot as well, it would just add the\nindividual dots to this plot.",
    "start": "713050",
    "end": "720760"
  },
  {
    "text": " OK, so again, what do we notice?",
    "start": "720760",
    "end": "728620"
  },
  {
    "text": "Well, Python nicely\nframed everything for me to make sure that every\nline that I have fits",
    "start": "728620",
    "end": "736850"
  },
  {
    "text": "within this graph. So my x-axis is comfortably\nbetween 0 and 30.",
    "start": "736850",
    "end": "741980"
  },
  {
    "text": "And my y-axis is\nalso comfortably between 0 and 120,000. So there's a little bit\nof gap up at that top",
    "start": "741980",
    "end": "748850"
  },
  {
    "text": "of that exponential line. But this leads us, if we\nwere presented this graph,",
    "start": "748850",
    "end": "755329"
  },
  {
    "text": "to kind of mistakenly\nnot know what's going on with these bottom lines here.",
    "start": "755330",
    "end": "760940"
  },
  {
    "text": "So this is our\nlinear, the blue line. And the orange one\nis the quadratic.",
    "start": "760940",
    "end": "766070"
  },
  {
    "text": "We're not really sure\nwhat's going on down there because the scales are just--",
    "start": "766070",
    "end": "771529"
  },
  {
    "text": "the y scale is just too high. So in this particular\ncase, it would be better",
    "start": "771530",
    "end": "777700"
  },
  {
    "text": "to visualize the data in\nseparate, different windows. So instead of having everything\nbe plotted in one window,",
    "start": "777700",
    "end": "787930"
  },
  {
    "text": "we're going to tell Python\nto create a new window and plot some stuff in it.",
    "start": "787930",
    "end": "794120"
  },
  {
    "text": "So the way we tell Python to\ncreate a new window for us is with the command plt.figure.",
    "start": "794120",
    "end": "801190"
  },
  {
    "text": "So as soon as Python\nsees plt.figure, it will create a new window,\nbring it to the foreground.",
    "start": "801190",
    "end": "807610"
  },
  {
    "text": "And any further\nplotting commands will be added to\nthis new figure. So there's a parameter\nthat this figure can take.",
    "start": "807610",
    "end": "814940"
  },
  {
    "text": "And that's going to be\nthe name of the figure. So you know like when you\nhave a window at the top,",
    "start": "814940",
    "end": "820779"
  },
  {
    "text": "it has a name for the\nname of the program or whatever is running? Well, the string\nthat you put in there is going to be the name that\nyou give to that figure.",
    "start": "820780",
    "end": "829250"
  },
  {
    "text": "If Python doesn't have a figure\nwith that name already there, it creates a new figure,\nbrings it to the foreground.",
    "start": "829250",
    "end": "835540"
  },
  {
    "text": "But if there's a figure\nwith that name already there and you just happen to call\nplt.figure with that same name,",
    "start": "835540",
    "end": "842290"
  },
  {
    "text": "it'll just rebring that\nwindow up to the foreground again to readd more stuff to it.",
    "start": "842290",
    "end": "850819"
  },
  {
    "text": "So we're going to look\nat this example here. We've got a whole bunch\nof stuff being plotted.",
    "start": "850820",
    "end": "856880"
  },
  {
    "text": "So the first two\nlines of code here, first we've got a new\nfigure being created.",
    "start": "856880",
    "end": "863100"
  },
  {
    "text": "And we called it expo. And then this plot command\nhere coming up right",
    "start": "863100",
    "end": "868580"
  },
  {
    "text": "after the figure will\nadd this exponential that we created to\nthat expo figure.",
    "start": "868580",
    "end": "874360"
  },
  {
    "text": "Then we've got a plt.figure\nright after that. So Python will bring this\nnew figure to the foreground.",
    "start": "874360",
    "end": "880839"
  },
  {
    "text": "And the plot command\nthat comes right after that will add\nthe linear, this line,",
    "start": "880840",
    "end": "886600"
  },
  {
    "text": "to this new figure--\none that we called lin. A couple more times we're\ngoing to create and do",
    "start": "886600",
    "end": "891670"
  },
  {
    "text": "the same thing to create\nthis quad and this cube. And those will each get\none line added to them.",
    "start": "891670",
    "end": "897570"
  },
  {
    "text": "And then down here, we're\ngoing to say, well, let me just go back to that\nexponential figure",
    "start": "897570",
    "end": "903110"
  },
  {
    "text": "and add another different\nexponential curve to it. So we're going to create\nthe exponential curve,",
    "start": "903110",
    "end": "908940"
  },
  {
    "text": "this time 1.6 to the\npower of i instead of 1.5 to the power of i. Then we're going to tell Python\nto bring the figure called expo",
    "start": "908940",
    "end": "917569"
  },
  {
    "text": "back up to the foreground. So remember, we\ncreated it up here. So it doesn't\ncreate a new figure.",
    "start": "917570",
    "end": "922730"
  },
  {
    "text": "It'll just bring\nthat one back up. And it already\nhas a curve in it. And then we're\ngoing to tell Python",
    "start": "922730",
    "end": "928010"
  },
  {
    "text": "to plot a second curve to it. So let's see that.",
    "start": "928010",
    "end": "933690"
  },
  {
    "text": " That's all this code right here.",
    "start": "933690",
    "end": "939140"
  },
  {
    "text": "Run it. OK, so not just one figure--",
    "start": "939140",
    "end": "945710"
  },
  {
    "text": "one window got\ncreated, but four. So this is my cube. And you can see up in the top\nhere, a little hard to see,",
    "start": "945710",
    "end": "951600"
  },
  {
    "text": "but that's the name\nthat we gave it. This is my quad. This is my lin, my linear.",
    "start": "951600",
    "end": "958579"
  },
  {
    "text": "And this is my exponential. So we see the exponential\none has two lines in it",
    "start": "958580",
    "end": "965089"
  },
  {
    "text": "because we added one\nway at the beginning and then we brought\nit back for processing to add another line to it.",
    "start": "965090",
    "end": "971000"
  },
  {
    "text": " So again, so these graphs\nare actually on the slide.",
    "start": "971000",
    "end": "980580"
  },
  {
    "text": "This is the quad one. This is the cube one. This is the linear one. And this is the exponential one.",
    "start": "980580",
    "end": "985710"
  },
  {
    "text": "The blue line was our original\ncurve, 1.5 to the power of x. And the orange one is\n1.6 to the power of x.",
    "start": "985710",
    "end": "992100"
  },
  {
    "text": "So they both got added\nto the same plot. Cool. So again, just\nsomething to note,",
    "start": "992100",
    "end": "998300"
  },
  {
    "text": "you'll see how Python nicely\nframed our lines so that it's able to fit everything\nthat it needs",
    "start": "998300",
    "end": "1004840"
  },
  {
    "text": "to plot within this graph. ",
    "start": "1004840",
    "end": "1010149"
  },
  {
    "text": "So what we're going to do next-- I know, that was a\nlittle bit tedious. What we're going\nto do next is we're",
    "start": "1010150",
    "end": "1016629"
  },
  {
    "text": "start looking at some real\nexamples, some real-world data. So first we're going to do\nsome toy real-world data.",
    "start": "1016630",
    "end": "1022480"
  },
  {
    "text": "And then soon we're\ngoing to start dealing with some actual\ndata sets that we're",
    "start": "1022480",
    "end": "1028510"
  },
  {
    "text": "going to read in,\nwe're going to plot, we're going to\ninvestigate, try to answer some questions about them,\nand things like that.",
    "start": "1028510",
    "end": "1035689"
  },
  {
    "text": "So first, let's look at\nthis real-life example where we've got months\nand temperatures",
    "start": "1035690",
    "end": "1043359"
  },
  {
    "text": "for each of those months. So notice the months here\nis actually the value",
    "start": "1043359",
    "end": "1050320"
  },
  {
    "text": "that this range returns,\nwhich is like an iterable, like a tuple. So it's still a\nsequence of values.",
    "start": "1050320",
    "end": "1056090"
  },
  {
    "text": "It's not a list but\ntotally fine to be passed in as an argument to the plot.",
    "start": "1056090",
    "end": "1063059"
  },
  {
    "text": "And temps, of course,\nare going to be temperatures corresponding to\neach of those months as a list.",
    "start": "1063060",
    "end": "1069600"
  },
  {
    "text": "So the plot looks\nsomething like this if we actually run that code.",
    "start": "1069600",
    "end": "1076400"
  },
  {
    "text": "What do we notice? Well, just like before,\nmatplotlib nicely framed our data.",
    "start": "1076400",
    "end": "1082466"
  },
  {
    "text": "It's got a little bit of\nwiggle room left and right, top and bottom. And it automatically selected\nthe scales, how low to go,",
    "start": "1082467",
    "end": "1089570"
  },
  {
    "text": "how high to go, and the\ntick marks for this. But let's say that you're\nthe advisor to a student",
    "start": "1089570",
    "end": "1099500"
  },
  {
    "text": "and they came to you with a\nplot that looked like this. Would you be able to tell\nanything about this plot",
    "start": "1099500",
    "end": "1107690"
  },
  {
    "text": "without knowing exactly what the\ncode that generated this plot is? Not really, right?",
    "start": "1107690",
    "end": "1113360"
  },
  {
    "text": "It just looks like a bump. It could be any sort of data. So what we'd like to do before\nactually-- for your apps",
    "start": "1113360",
    "end": "1120530"
  },
  {
    "text": "and things like\nthat in the future, before presenting a\nplot to somebody else, you'll want to add a title, and\nyou'll want to label your axes.",
    "start": "1120530",
    "end": "1130700"
  },
  {
    "text": "So what we want to do, in\naddition to actually plotting the data, is to tell Python\nto add for us a title",
    "start": "1130700",
    "end": "1139850"
  },
  {
    "text": "and labels for our axes. So we do this using these\nthree lines of code here.",
    "start": "1139850",
    "end": "1146039"
  },
  {
    "text": "So since we haven't told\nPython to create a new figure or anything like\nthat, any commands",
    "start": "1146040",
    "end": "1151340"
  },
  {
    "text": "that we do with\nregards to plotting will just get added\non to this figure. So here I've got Python\nadding this title, these two",
    "start": "1151340",
    "end": "1160080"
  },
  {
    "text": "labels to our axis-- to our axes. So here I've got\nthis and this plot.",
    "start": "1160080",
    "end": "1169030"
  },
  {
    "text": "So I run it, and ta-da,\nwe have something that looks much nicer.",
    "start": "1169030",
    "end": "1174930"
  },
  {
    "text": "So now we can hand\nthis plot to somebody, and they'll know\nwhat it's about. ",
    "start": "1174930",
    "end": "1181840"
  },
  {
    "text": "Now, that's fine, but since it's\ntemperatures what I'd really",
    "start": "1181840",
    "end": "1187090"
  },
  {
    "text": "like to do is to say, well,\nthe temperature-- the lowest temperature I have should\nreally start at the y-axis here,",
    "start": "1187090",
    "end": "1193720"
  },
  {
    "text": "this intersect with the y-axis. And the highest\ntemperature I've got, I don't really want\nthat wiggle room",
    "start": "1193720",
    "end": "1199060"
  },
  {
    "text": "because this is my\nlast temperature value. Let's just have the\nframe just end there.",
    "start": "1199060",
    "end": "1205580"
  },
  {
    "text": "So we can do that little\nchange by setting limits on our x-axis.",
    "start": "1205580",
    "end": "1210980"
  },
  {
    "text": "So here I'm going to limit the\nx-axis to say that it starts from 1, and it ends at 12.",
    "start": "1210980",
    "end": "1218780"
  },
  {
    "text": "So if I do that, again,\nthat's just a little command we put in, a continuation\nwith the rest of the commands.",
    "start": "1218780",
    "end": "1224920"
  },
  {
    "text": "And it gets applied\nto this plot. So as soon as I do\nthat, Python now creates for me the same plot,\nexcept that the x-axis starts",
    "start": "1224920",
    "end": "1234130"
  },
  {
    "text": "at 1 and ends at 12 nicely\nframed within here, so no more wiggle room. ",
    "start": "1234130",
    "end": "1241110"
  },
  {
    "text": "Still some improvements to be\nmade to this plot as in here",
    "start": "1241110",
    "end": "1246210"
  },
  {
    "text": "the months skip. So Python decided that it's best\nto just show 2, 4, 6, 8, 10,",
    "start": "1246210",
    "end": "1253575"
  },
  {
    "text": "12 as the ticks on the x-axis. But I decide that\nI would-- since I'm",
    "start": "1253575",
    "end": "1260340"
  },
  {
    "text": "showing all the months of the\nyear and their temperatures, I would really like to have\nticks for every single month.",
    "start": "1260340",
    "end": "1267299"
  },
  {
    "text": "So again, a little command\nwill do that for us. So plt.xticks takes in a\ntuple of all of the places",
    "start": "1267300",
    "end": "1277200"
  },
  {
    "text": "where you'd like one of those\nlittle ticks to be created. So if we do that--",
    "start": "1277200",
    "end": "1282630"
  },
  {
    "text": "again, just another little\ncommand in series here-- if we do that, Python\nnow fills in the ticks",
    "start": "1282630",
    "end": "1290040"
  },
  {
    "text": "for every single spot that\nwe told it to fill in. So it's looking\nway better already.",
    "start": "1290040",
    "end": "1296130"
  },
  {
    "text": " What's still not quite right-- I promise, this will be the\nlast improvement we make.",
    "start": "1296130",
    "end": "1304040"
  },
  {
    "text": "I personally find it hard to\nmap numbers to the months. I still count my fingers.",
    "start": "1304040",
    "end": "1310430"
  },
  {
    "text": "So what would be\nnice is to say, well,",
    "start": "1310430",
    "end": "1315840"
  },
  {
    "text": "instead of having\nnumbers on my x-axis, I would like to have the actual\nnames of my months, Jan, Feb,",
    "start": "1315840",
    "end": "1323660"
  },
  {
    "text": "Mar, and so on. So to do that, we're going\nto make one small change to our xticks command here.",
    "start": "1323660",
    "end": "1330890"
  },
  {
    "text": "We're going to give\nit a second parameter. So first one is, of course,\nwhat we had before, saying these",
    "start": "1330890",
    "end": "1337910"
  },
  {
    "text": "are all the ticks that\nI would like to have. And the second\nparameter is the labels",
    "start": "1337910",
    "end": "1343010"
  },
  {
    "text": "for each one of those ticks. So one by one,\nthey'll be mapped. So 1 will be mapped to Jan,\n2 will be mapped to February,",
    "start": "1343010",
    "end": "1349250"
  },
  {
    "text": "and so on. So instead of using\nthe numerical values, Python will create\nfor us the string",
    "start": "1349250",
    "end": "1358480"
  },
  {
    "text": "values that I've told it to do. So here it is. Run creates for me this\nvery nice-looking plot.",
    "start": "1358480",
    "end": "1364970"
  },
  {
    "text": "So this I would be happy\nto receive as an advisor compared to that very\nfirst one that we had.",
    "start": "1364970",
    "end": "1370450"
  },
  {
    "text": " All right, questions so far?",
    "start": "1370450",
    "end": "1376680"
  },
  {
    "text": "We seem all right? OK. The other thing that you can do\nis potentially add grid lines",
    "start": "1376680",
    "end": "1384080"
  },
  {
    "text": "if you wanted to. So plt.grid will either toggle\nthe grid lines on and off. So if there's\nalready grid lines,",
    "start": "1384080",
    "end": "1390540"
  },
  {
    "text": "it'll toggle them off\nwhen it sees that command. If there are no grid lines,\nit'll toggle them on. So you could potentially have\na bunch of plt.grid commands",
    "start": "1390540",
    "end": "1398120"
  },
  {
    "text": "that keep toggling things\non and off and so on. OK, so that was us plotting\none city's temperature",
    "start": "1398120",
    "end": "1408870"
  },
  {
    "text": "values for a year,\nlet's say, an average. Let's say that we wanted to\nplot two different cities.",
    "start": "1408870",
    "end": "1416130"
  },
  {
    "text": "The code to do\nthat is as follows. So again, we've got months\nbeing this range, 1 through 12,",
    "start": "1416130",
    "end": "1422100"
  },
  {
    "text": "inclusive. I've got a list of all the\nBoston temperatures here, I plot that, a list of all\nthe Phoenix temperatures here,",
    "start": "1422100",
    "end": "1428160"
  },
  {
    "text": "and I plot that. And of course I'm going to\nadd some labels to my graph.",
    "start": "1428160",
    "end": "1434390"
  },
  {
    "text": "So like that. So if I run that, we get\nsomething that looks like this.",
    "start": "1434390",
    "end": "1446030"
  },
  {
    "text": "Now, of course, I could remove\nthose little wiggle rooms on the left and right,\nbut for now it's fine.",
    "start": "1446030",
    "end": "1454140"
  },
  {
    "text": "What's missing from this plot? Let's say you\ndidn't see the code and you were just\ngiven this plot.",
    "start": "1454140",
    "end": "1460354"
  },
  {
    "text": "AUDIENCE: You wouldn't\nknow which city is which. ANA BELL: Yeah, exactly. I don't know what-- yes, these are\ndifferent temperatures",
    "start": "1460354",
    "end": "1466720"
  },
  {
    "text": "from the title and the\nlabels, but you don't know which city is which, exactly.",
    "start": "1466720",
    "end": "1472360"
  },
  {
    "text": "So what we'd like\nto do is tell Python how to label these two lines.",
    "start": "1472360",
    "end": "1480059"
  },
  {
    "text": "So to do that, it's\njust an extra parameter here in the plot command.",
    "start": "1480060",
    "end": "1485200"
  },
  {
    "text": "So when you tell it\nwhich data to plot, you can also tell it what\nlabel that data should get.",
    "start": "1485200",
    "end": "1491520"
  },
  {
    "text": "So here I've got Boston label\nfor the first one, Phoenix label for the second one. And then you tell Python to\nadd a legend to your plot.",
    "start": "1491520",
    "end": "1501190"
  },
  {
    "text": "So here the parameter is\nthe location for the legend. And best just\nmeans Python should decide where to put the legend,\ntop left, top right, middle,",
    "start": "1501190",
    "end": "1509130"
  },
  {
    "text": "wherever, so it doesn't really\ninterfere much with the data. Or you can just tell it\nwhere to put that legend.",
    "start": "1509130",
    "end": "1516420"
  },
  {
    "text": "So you can force the legend\nto be in a particular spot. So here I've got\nalready labeled data.",
    "start": "1516420",
    "end": "1523559"
  },
  {
    "text": "And then we add the legend. And now you can see in\nthis particular case, it decided to put\nit in the top right.",
    "start": "1523560",
    "end": "1529170"
  },
  {
    "text": "But again, you can force\nit to go somewhere else. Bottom middle seemed like\na fine choice as well. ",
    "start": "1529170",
    "end": "1537860"
  },
  {
    "text": "OK, very nice. So now we've got Python--",
    "start": "1537860",
    "end": "1544610"
  },
  {
    "text": "it automatically did\nthe x and y-axes for us, as we told it to do, but\nthe colors that it picked",
    "start": "1544610",
    "end": "1550580"
  },
  {
    "text": "were random. Now, we can specify a bunch of\ndifferent details for the plot.",
    "start": "1550580",
    "end": "1557100"
  },
  {
    "text": "So we're going to do that next\njust to show you that you can. So we're going to\nchoose different colors",
    "start": "1557100",
    "end": "1563330"
  },
  {
    "text": "and different styles\nfor our plots. We're going to choose\ndifferent widths for our lines.",
    "start": "1563330",
    "end": "1569130"
  },
  {
    "text": "And then maybe we can-- and then\nwe'll also add some markers, so where exactly-- each\ndata point we have,",
    "start": "1569130",
    "end": "1575120"
  },
  {
    "text": "we're going to mark. And then I'll show you how\nyou can create subplots. So instead of\ncreating new windows,",
    "start": "1575120",
    "end": "1580400"
  },
  {
    "text": "you can actually have one window\nwith different little subplots within.",
    "start": "1580400",
    "end": "1586000"
  },
  {
    "text": "OK, so the first thing\nwe're going to see is how to customize the\ndata to have a certain line",
    "start": "1586000",
    "end": "1593860"
  },
  {
    "text": "style and a certain color. So there's a shorthand\nnotation to do this.",
    "start": "1593860",
    "end": "1599110"
  },
  {
    "text": "Instead of actually passing in\nthe parameter name in the plot command, we can do a\nshorthand notation.",
    "start": "1599110",
    "end": "1605127"
  },
  {
    "text": "So you might have already\nnoticed this little extra bit here. So the more you use it, the\nmore you'll get used to it.",
    "start": "1605128",
    "end": "1612000"
  },
  {
    "text": "But this basically\ntells Python that I would like this plot, this\nline corresponding to this data",
    "start": "1612000",
    "end": "1617779"
  },
  {
    "text": "to be blue, that's\nwhat the b stands for, and to be a solid line.",
    "start": "1617780",
    "end": "1623390"
  },
  {
    "text": "That's what that\nlittle dash means. The Phoenix one, you\nmay have guessed, tells Python that I would like\nthis one to be red, r for red,",
    "start": "1623390",
    "end": "1631520"
  },
  {
    "text": "and to be a dashed line. And then the last one, I'm going\nto add one more temperature here, temperature\ndata for Minneapolis--",
    "start": "1631520",
    "end": "1638510"
  },
  {
    "text": "I would like this one to be\ngreen and a dash-dot-dash line.",
    "start": "1638510",
    "end": "1644450"
  },
  {
    "text": "So we can run that. ",
    "start": "1644450",
    "end": "1655410"
  },
  {
    "text": "And it looks\nsomething like this. All right, so I've got my\nsolid blue line for Boston,",
    "start": "1655410",
    "end": "1661530"
  },
  {
    "text": "my dashed line for Phoenix,\nand my dash-dot-dash line for Minneapolis. ",
    "start": "1661530",
    "end": "1668910"
  },
  {
    "text": "Very nice. Now, instead of doing\nthat shorthand notation where we've got this one\nparameter that just somehow",
    "start": "1668910",
    "end": "1676020"
  },
  {
    "text": "magically knows the\ncolor and the style based on just\nbeing passed in, we",
    "start": "1676020",
    "end": "1681750"
  },
  {
    "text": "can actually tell Python\nthe parameter values that",
    "start": "1681750",
    "end": "1688530"
  },
  {
    "text": "correspond to the\ncolor, so here I've got color equals b for blue,\nand then that correspond",
    "start": "1688530",
    "end": "1693840"
  },
  {
    "text": "to the line style. So here line style\nequals-- and then you explicitly pass in the\nline style that you'd like.",
    "start": "1693840",
    "end": "1700090"
  },
  {
    "text": "So this may be more\nintuitive, according to what we've learned. But Python does allow you the\noption to do it all in one.",
    "start": "1700090",
    "end": "1709050"
  },
  {
    "text": "So if we do-- if we run\nit with these specific, explicit parameters, then\nwe'll get the exact same graph",
    "start": "1709050",
    "end": "1715740"
  },
  {
    "text": "as before-- no surprise. So there's a lot of options\nthat we can have here.",
    "start": "1715740",
    "end": "1722100"
  },
  {
    "text": "So these are all the\nline style options. So you can also add a dotted\nline, which I didn't show. These are all the color\noptions plus many more.",
    "start": "1722100",
    "end": "1729470"
  },
  {
    "text": "You could also pass in the RGB\nvalues or maybe the hex values if you want a very specific\nshade of magenta or something.",
    "start": "1729470",
    "end": "1736679"
  },
  {
    "text": "And then we can also add\nmarkers to our lines. We haven't seen this yet,\nbut let's do that next.",
    "start": "1736680",
    "end": "1744270"
  },
  {
    "text": "So let's say that I would\nlike to have the actual data points that I've plotted\nshow up in my lines.",
    "start": "1744270",
    "end": "1751790"
  },
  {
    "text": "Right now, the lines\njust get connected-- or the data points just get\nconnected with our lines,",
    "start": "1751790",
    "end": "1757040"
  },
  {
    "text": "dashed or dotted or\nwhatever we chose, but the marker-- the\ndata points themselves don't show up with markers.",
    "start": "1757040",
    "end": "1763010"
  },
  {
    "text": "So again, in\nshorthand notation, we can tell Python, hey,\nlet's add these markers. So here I'm telling\nPython to just do",
    "start": "1763010",
    "end": "1769789"
  },
  {
    "text": "a dot for this blue solid line. Here I'm telling\nPython to do a larger",
    "start": "1769790",
    "end": "1774919"
  },
  {
    "text": "dot for this red dashed line. And here I'm telling it to do\na star for the green dash dot",
    "start": "1774920",
    "end": "1781440"
  },
  {
    "text": "dash dot line. All right, so that's down here.",
    "start": "1781440",
    "end": "1787990"
  },
  {
    "text": "Run it. And now we see\nnice little markers for every one of\nour data points.",
    "start": "1787990",
    "end": "1794120"
  },
  {
    "text": "So we can also do triangles,\nwe can do squares. There's lots of\nother marker options,",
    "start": "1794120",
    "end": "1799160"
  },
  {
    "text": "and they all exist in the\ndocumentation for matplotlib.",
    "start": "1799160",
    "end": "1804410"
  },
  {
    "text": "So this is what we got, perfect. The last thing that we can do is\nto add thickness to our lines.",
    "start": "1804410",
    "end": "1814090"
  },
  {
    "text": "So oftentimes, it's\ngood to, first of all, delineate the lines\nusing dashes or dots",
    "start": "1814090",
    "end": "1820419"
  },
  {
    "text": "and things like\nthat but also width. So here another parameter\npassed in, the line width, this",
    "start": "1820420",
    "end": "1826413"
  },
  {
    "text": "is going to be a\nskinny line, this is going to be maybe\na thicker line, and this one's going to\nbe unreasonably thick.",
    "start": "1826413",
    "end": "1832690"
  },
  {
    "text": "So let's see exactly\nwhat this will look like. It's going to look super weird.",
    "start": "1832690",
    "end": "1837970"
  },
  {
    "start": "1837970",
    "end": "1843890"
  },
  {
    "text": "As I said, unreasonably\nthick line. But there it is. And then you can see that\nthe legend itself also",
    "start": "1843890",
    "end": "1850070"
  },
  {
    "text": "adjusted to whatever you\nchose for your line styles.",
    "start": "1850070",
    "end": "1855514"
  },
  {
    "start": "1855515",
    "end": "1861420"
  },
  {
    "text": "So yeah, that's\nexactly what I said. Cool. Last thing I want to\ntalk about is subplots.",
    "start": "1861420",
    "end": "1869000"
  },
  {
    "text": "So right now, the only things\nthat we've kind of learned about plotting is you\neither plot every line",
    "start": "1869000",
    "end": "1875440"
  },
  {
    "text": "that you have on one figure,\nor you create a new figure and then it becomes\na new window that you",
    "start": "1875440",
    "end": "1881590"
  },
  {
    "text": "have to switch between for\nwhatever you'd like to plot.",
    "start": "1881590",
    "end": "1886960"
  },
  {
    "text": "Oftentimes, what's\nreally nice to do is to create only one figure.",
    "start": "1886960",
    "end": "1892600"
  },
  {
    "text": "So you have only one thing\nthat pops up, like one window.",
    "start": "1892600",
    "end": "1897760"
  },
  {
    "text": "And within that window\nwith some name here-- and within that\nwindow, you can create",
    "start": "1897760",
    "end": "1903820"
  },
  {
    "text": "a bunch of different subplots. So here I've created\nsix different subplots.",
    "start": "1903820",
    "end": "1912920"
  },
  {
    "text": "So we can tell that to Python. And we do that using\nthe subplot command.",
    "start": "1912920",
    "end": "1918350"
  },
  {
    "text": "So in this particular\ncase, I've told Python to create for me a\nsubplot with two rows, that's",
    "start": "1918350",
    "end": "1926750"
  },
  {
    "text": "what the first parameter\nsays, and one column. That's what the\nsecond parameter says.",
    "start": "1926750",
    "end": "1932419"
  },
  {
    "text": "So here, this is one window\nwith two positions in it. The third parameter tells Python\nwhich one of these positions",
    "start": "1932420",
    "end": "1940340"
  },
  {
    "text": "to open for adding\nlines to or data to. So 1 means this is the\none that you're opening,",
    "start": "1940340",
    "end": "1948140"
  },
  {
    "text": "and 2 means this is the second\none that you're opening. So you can see here\nthe very top subplot",
    "start": "1948140",
    "end": "1954289"
  },
  {
    "text": "command tells Python to open\nup this one for editing,",
    "start": "1954290",
    "end": "1960140"
  },
  {
    "text": "basically. So we're going to add to\nit the Boston temperature. So this is all the plotting\ncommands and all the labels",
    "start": "1960140",
    "end": "1965930"
  },
  {
    "text": "and everything after it belong\nto this top subplot here. And then subplot command\ndown here tells Python",
    "start": "1965930",
    "end": "1973250"
  },
  {
    "text": "that on this figure with\ntwo rows and one column I would like to now open\nposition number 2 for editing.",
    "start": "1973250",
    "end": "1979970"
  },
  {
    "text": "And then everything that\nI have thereafter gets added to the subplot\nat this position.",
    "start": "1979970",
    "end": "1986690"
  },
  {
    "text": "So the way that this is\ngoing to look is as follows. So I've got-- this is just\none window that gets created.",
    "start": "1986690",
    "end": "1994490"
  },
  {
    "text": "And you can see the top one\nhas the Boston temperature, and the bottom one has\nthe Phoenix temperature.",
    "start": "1994490",
    "end": "2000576"
  },
  {
    "text": " At first glance, does this look\nright in terms of temperatures,",
    "start": "2000576",
    "end": "2008050"
  },
  {
    "text": "if you were just to look\nat the pictures themselves? ",
    "start": "2008050",
    "end": "2014100"
  },
  {
    "text": "I don't know about you,\nbut at first glance, I thought that the temperatures\nfor Boston and Phoenix",
    "start": "2014100",
    "end": "2020640"
  },
  {
    "text": "were the same because I didn't\nlook closely at the y-axes.",
    "start": "2020640",
    "end": "2026998"
  },
  {
    "text": "It kind of looked like,\nhey, they both bottom out in the same way, they both\ntop out in the same way. So they look very similar to me.",
    "start": "2026998",
    "end": "2032770"
  },
  {
    "text": "But if we inspect\nthe y-axes closer, we see that the Boston\ntemperature starts at 30,",
    "start": "2032770",
    "end": "2038309"
  },
  {
    "text": "goes to 70. But the Phoenix one starts\nat, what is this, 50 and goes to 90.",
    "start": "2038310",
    "end": "2044570"
  },
  {
    "text": "So if we're presenting\nplots in one figure what would be really nice\nto do is to make sure",
    "start": "2044570",
    "end": "2051399"
  },
  {
    "text": "that the axes are both\nbounded in a similar way, especially if we're plotting\nsimilar data, temperature",
    "start": "2051400",
    "end": "2058210"
  },
  {
    "text": "in this particular case. So in our code what\nwe'd also like to do",
    "start": "2058210",
    "end": "2066158"
  },
  {
    "text": "is set limits on our\naxes, and just the y-axis because the x-axis is the same.",
    "start": "2066159",
    "end": "2072129"
  },
  {
    "text": "So here I can limit the y-axis\nfrom 0 to 100, a reasonable set",
    "start": "2072130",
    "end": "2077769"
  },
  {
    "text": "of temperatures in Fahrenheit. So if I fix these temperature\nlimits from 0 to 100",
    "start": "2077770",
    "end": "2084780"
  },
  {
    "text": "and now I plot, I get\nsomething that looks like this. And now at first glance, this\nmakes a lot more sense to me.",
    "start": "2084780",
    "end": "2092629"
  },
  {
    "text": "I've got-- the Phoenix\ntemperatures seem to be on for this year,\non average, higher",
    "start": "2092630",
    "end": "2100730"
  },
  {
    "text": "than the Boston temperatures. ",
    "start": "2100730",
    "end": "2107430"
  },
  {
    "text": "So we can plot now multiple--\nwe can create multiple subplots. So here in the previous example,\nI just had two, top and bottom.",
    "start": "2107430",
    "end": "2115769"
  },
  {
    "text": "But I can create\nas many subplots as I'd like within my window. So when I create them and\nI tell Python how many rows",
    "start": "2115770",
    "end": "2125099"
  },
  {
    "text": "and columns I have-- in this\nparticular example I just drew here, I have three\nrows and two columns.",
    "start": "2125100",
    "end": "2133240"
  },
  {
    "text": "So the third parameter\nthat I pass in will basically tell Python\nwhich one of these subplots",
    "start": "2133240",
    "end": "2139230"
  },
  {
    "text": "to open up for processing. So this will be the first one,\nthis will be the second one-- kind of the way we read--",
    "start": "2139230",
    "end": "2144690"
  },
  {
    "text": "third, fourth, fifth, and sixth. So that third parameter\nto these subplot commands",
    "start": "2144690",
    "end": "2151619"
  },
  {
    "text": "will be either 1,\n2, 3, 4, 5, or 6, telling Python which\none of these sections I'm going to add plots to.",
    "start": "2151620",
    "end": "2159300"
  },
  {
    "text": "In this particular case,\nI had a Boston, Phoenix, and Minneapolis temperature. So I'm just creating\na two-by-two matrix.",
    "start": "2159300",
    "end": "2166810"
  },
  {
    "text": "So here I just have\nthis thing that looks like this, a figure\nwith these four subplots.",
    "start": "2166810",
    "end": "2172090"
  },
  {
    "text": "And I am going to add the Boston\none over here, the Phoenix one over here, and\nthen the Minneapolis",
    "start": "2172090",
    "end": "2180700"
  },
  {
    "text": "down here, so 1, 2, and 3 as\nmy subplots that I'm opening.",
    "start": "2180700",
    "end": "2188470"
  },
  {
    "text": "Nothing in four, so that\nfourth spot will just be empty. So the plots will look\nsomething like this.",
    "start": "2188470",
    "end": "2194390"
  },
  {
    "text": "And I haven't changed the line\nwidths in this particular case. I didn't need to. And you can see everything's\nplotted with the heights,",
    "start": "2194390",
    "end": "2202809"
  },
  {
    "text": "again, limited\nfrom 0 to 100 just so everything's comparable. And notice the empty\nspot here because I",
    "start": "2202810",
    "end": "2208523"
  },
  {
    "text": "had nothing to fill in with.  Questions about this?",
    "start": "2208523",
    "end": "2214265"
  },
  {
    "text": "Is this interesting? OK.",
    "start": "2214265",
    "end": "2220000"
  },
  {
    "text": "All right, so that finishes up\njust some really basic things",
    "start": "2220000",
    "end": "2227010"
  },
  {
    "text": "that we can do with plotting,\nbasic customizations. Now what I'd like to do is just\nopen up a few different data",
    "start": "2227010",
    "end": "2235860"
  },
  {
    "text": "sets for processing. We can start by just\nplotting the pure values",
    "start": "2235860",
    "end": "2242609"
  },
  {
    "text": "on a regular plot. And then we can start\nto investigate things that we visualize,\nask more questions,",
    "start": "2242610",
    "end": "2249930"
  },
  {
    "text": "and see where we go from there. So the first thing I'd like\nto do is open up a file",
    "start": "2249930",
    "end": "2255450"
  },
  {
    "text": "on the US population. So this particular file\ncontains 40 different numbers.",
    "start": "2255450",
    "end": "2264220"
  },
  {
    "text": "So it has a population value\nover about 400 years, every 10",
    "start": "2264220",
    "end": "2271560"
  },
  {
    "text": "years. So that's 40 different\nvalues for the temperatures, starting from, I don't know, a\nreally long time ago till about",
    "start": "2271560",
    "end": "2280170"
  },
  {
    "text": "2010 or something like that. So the file looks\nsomething like this.",
    "start": "2280170",
    "end": "2286250"
  },
  {
    "text": "So it starts at 1610\nand goes down to 2010.",
    "start": "2286250",
    "end": "2291880"
  },
  {
    "text": "So this is 40 lines\nfor 40 years-- 400 years, every 10 years.",
    "start": "2291880",
    "end": "2299660"
  },
  {
    "text": "Then there's a\nspace in the file. And then I've got\nthe population value.",
    "start": "2299660",
    "end": "2305350"
  },
  {
    "text": "So it starts at 350, increases,\ngoes down to 300,000 in 2010.",
    "start": "2305350",
    "end": "2310640"
  },
  {
    "text": "So that's what the\nfile looks like. It's important to know what the\nfile looks like because you're going to have to\nread in this data",
    "start": "2310640",
    "end": "2317680"
  },
  {
    "text": "and save it in some\nsort of data structure that's easy to manipulate. So in our case, a\ndata structure that's",
    "start": "2317680",
    "end": "2324845"
  },
  {
    "text": "really easy to manipulate\nwhere you have a whole sequence of values is a list.",
    "start": "2324845",
    "end": "2330099"
  },
  {
    "text": "So what we can do\nis we can open up this file for processing,\nread in the years as a list,",
    "start": "2330100",
    "end": "2336369"
  },
  {
    "text": "and then read in the population\nvalues as a list as well.",
    "start": "2336370",
    "end": "2341740"
  },
  {
    "text": "We could use a dictionary\nalso if we wanted to. But in this case, I\njust used two lists.",
    "start": "2341740",
    "end": "2348030"
  },
  {
    "text": "So let's look at\nthe code to do that. It looks like a lot,\nbut I'll go through it.",
    "start": "2348030",
    "end": "2353070"
  },
  {
    "text": "So here is the function that's\ngoing to read in the file. It just opens up the file,\ncreates two empty lists.",
    "start": "2353070",
    "end": "2360500"
  },
  {
    "text": "One will contain the dates. The other will contain\nthe populations. It iterates through\neach line in the file.",
    "start": "2360500",
    "end": "2366260"
  },
  {
    "text": "So I've put up what a line\nin the file kind of looks like up here. So it's got some number,\nspace, some other number.",
    "start": "2366260",
    "end": "2374250"
  },
  {
    "text": "But when we read and file-- when we read in a\nline from a file, Python actually\nreads it as a string.",
    "start": "2374250",
    "end": "2382020"
  },
  {
    "text": "So what that means\nfor us is we're going to have to take\nthis string, each line",
    "start": "2382020",
    "end": "2388220"
  },
  {
    "text": "being the string, \"1640 space\n26,634,\" something like that,",
    "start": "2388220",
    "end": "2394160"
  },
  {
    "text": "and somehow separate it so\nthat we have the date and then the number of the population\nand then somehow save",
    "start": "2394160",
    "end": "2403010"
  },
  {
    "text": "those two pieces to lists. So the first thing to notice\nis that we have a pesky comma",
    "start": "2403010",
    "end": "2412680"
  },
  {
    "text": "in our population values. Those values are human-readable,\nso it makes it easy",
    "start": "2412680",
    "end": "2420300"
  },
  {
    "text": "for us to read, but the computer\nis not so happy about them.",
    "start": "2420300",
    "end": "2426600"
  },
  {
    "text": "So if I have a\nnumber like 11,345, whatever, this is read\nin as a string, right?",
    "start": "2426600",
    "end": "2436080"
  },
  {
    "text": "And if I just try to\ncast that as an integer, straight without doing any\nsort of processing on it,",
    "start": "2436080",
    "end": "2444090"
  },
  {
    "text": "Python is very unhappy. So what we need to do\nis remove that comma.",
    "start": "2444090",
    "end": "2450150"
  },
  {
    "text": "Because as long as I\ndon't have a comma there, Python can convert that string\nnumber into a regular integer",
    "start": "2450150",
    "end": "2460020"
  },
  {
    "text": "number for us to then plot. So that's what this bit\nof the code is doing.",
    "start": "2460020",
    "end": "2466540"
  },
  {
    "text": "It's doing it in a weird way. It's saying, hey, take this\nentire line of characters",
    "start": "2466540",
    "end": "2474760"
  },
  {
    "text": "and only keep characters that\nare either a digit or a space.",
    "start": "2474760",
    "end": "2479980"
  },
  {
    "text": "So in doing so, it\neffectively removes the comma because it creates a new\nversion of that line containing",
    "start": "2479980",
    "end": "2486790"
  },
  {
    "text": "only digits and spaces. So it'll just take the 2, 6 and\nthen the 6, 3, 4 right after.",
    "start": "2486790",
    "end": "2492580"
  },
  {
    "text": "So it just creates this new\nline that looks like that. And then after it\nhas this new line,",
    "start": "2492580",
    "end": "2498680"
  },
  {
    "text": "we're going to\nsplit on the space because we note\nthat every single--",
    "start": "2498680",
    "end": "2504530"
  },
  {
    "text": "after every date,\nevery year, we've got a space that separates our\npopulation value and our date.",
    "start": "2504530",
    "end": "2511290"
  },
  {
    "text": "So if we split on the space\nusing the split command, the thing before the space,\nso the line at index 0,",
    "start": "2511290",
    "end": "2518750"
  },
  {
    "text": "gives us the date. We'll just cast that to an\nint and append it to dates.",
    "start": "2518750",
    "end": "2523970"
  },
  {
    "text": "And then the line at index 1\nis the thing after the space, again without the comma\nbecause we did that trick.",
    "start": "2523970",
    "end": "2530810"
  },
  {
    "text": "And then we cast\nthat to an integer and append that to\nour populations value.",
    "start": "2530810",
    "end": "2535954"
  },
  {
    "text": " So that's what we do there. And that's what we do there. And then, from there\non out, we just",
    "start": "2535955",
    "end": "2542589"
  },
  {
    "text": "return the dates\nand the populations. The dates become my\nx values for my plot,",
    "start": "2542590",
    "end": "2548920"
  },
  {
    "text": "and the populations become\nthe y values for my plot.  And then we plot it, and it\nlooks something like this.",
    "start": "2548920",
    "end": "2557029"
  },
  {
    "text": "So much easier to\nread or to tell what's going on than just\nlooking at pure numbers.",
    "start": "2557030",
    "end": "2564460"
  },
  {
    "text": "Always nicer to visualize\nthings than to just read a whole bunch of numbers,\neven if it's just 40. And in fact, we can\ntell a couple things",
    "start": "2564460",
    "end": "2572200"
  },
  {
    "text": "that we weren't able to tell-- we definitely couldn't have\nbeen able to tell from just pure looking at pure numbers.",
    "start": "2572200",
    "end": "2579109"
  },
  {
    "text": "The first is that we\nnotice a little bump right here in the population.",
    "start": "2579110",
    "end": "2586910"
  },
  {
    "text": "This is the impact of World\nWar II on the population. Second, a little harder to\ntell is another little bump",
    "start": "2586910",
    "end": "2592779"
  },
  {
    "text": "down here. And that's the impact of the\nCivil War on the population. So nicer to visualize.",
    "start": "2592780",
    "end": "2599710"
  },
  {
    "text": "It exposes some\ninteresting things. The other thing to\nnotice is, well, what's going on down here?",
    "start": "2599710",
    "end": "2607290"
  },
  {
    "text": "It kind of looks like the\npopulation is not really growing much.",
    "start": "2607290",
    "end": "2612750"
  },
  {
    "text": "And then maybe from\n1750 onward, it starts to grow exponentially. It's hard to tell what exactly\nis going on in that lower part.",
    "start": "2612750",
    "end": "2622039"
  },
  {
    "text": "So let's think about a different\nway of showing this data. Instead of having a linear\nscale on our y-axis,",
    "start": "2622040",
    "end": "2630590"
  },
  {
    "text": "let's see about doing it\nin a logarithmic scale.",
    "start": "2630590",
    "end": "2636040"
  },
  {
    "text": "So we're going to\nadd a command that tells Python to make our y-axis\na logarithmic scale, instead",
    "start": "2636040",
    "end": "2644230"
  },
  {
    "text": "of linear. So if we do that,\nthen that means that every regular increment\nin our y-- on our y-axis",
    "start": "2644230",
    "end": "2655150"
  },
  {
    "text": "is going to imply an exponential\nincrease in the population.",
    "start": "2655150",
    "end": "2660670"
  },
  {
    "text": "OK, so let's plot that. And if we plot that, we get\nsomething that looks like this.",
    "start": "2660670",
    "end": "2668140"
  },
  {
    "text": "The x-axis remains unchanged. We're still incrementing\nthe years linearly.",
    "start": "2668140",
    "end": "2673150"
  },
  {
    "text": "But the y-axis is\nnow logarithmic. So what do we notice?",
    "start": "2673150",
    "end": "2679970"
  },
  {
    "text": "Well, I see a line here,\nand I see another line here.",
    "start": "2679970",
    "end": "2687730"
  },
  {
    "text": " Again, linear growth\non a log scale",
    "start": "2687730",
    "end": "2693950"
  },
  {
    "text": "means exponential growth\non a linear scale. So what we notice is that\nthere's these two time",
    "start": "2693950",
    "end": "2701750"
  },
  {
    "text": "periods of exponential growth. And in fact, those early years\nactually seem to be growing--",
    "start": "2701750",
    "end": "2708170"
  },
  {
    "text": "the population seems to\nbe growing at a faster rate than the later years.",
    "start": "2708170",
    "end": "2713270"
  },
  {
    "text": "And that was not readily\nvisible on the previous graph that we had.",
    "start": "2713270",
    "end": "2718610"
  },
  {
    "text": "So the question-- I have a question for you. Which one of those did\nyou find more informative? Well, it kind of\ndepends on what we're",
    "start": "2718610",
    "end": "2725319"
  },
  {
    "text": "interested in finding out. If we're interested in big\ntrends in the data, where",
    "start": "2725320",
    "end": "2730480"
  },
  {
    "text": "in the top left one we spotted\nhere the impacts of wars on the population,\nwell, then the top",
    "start": "2730480",
    "end": "2737320"
  },
  {
    "text": "left one is the one to look at. But if we visualize the data\nin a slightly different way, it gives us different\ninsights into what's",
    "start": "2737320",
    "end": "2744250"
  },
  {
    "text": "happened to the population. That wasn't as apparent\nin the previous graph. So it really kind\nof just depends",
    "start": "2744250",
    "end": "2750730"
  },
  {
    "text": "on what you're\ninterested in finding out",
    "start": "2750730",
    "end": "2755890"
  },
  {
    "text": "which one of these plots\nyou find more informative. And sometimes both are probably\nnecessary to figure out",
    "start": "2755890",
    "end": "2764410"
  },
  {
    "text": "exactly what happened. OK, so that finishes our\nexample on the US population.",
    "start": "2764410",
    "end": "2771990"
  },
  {
    "text": "Now let's look at a\nslightly different file. In this particular\nfile, we're going",
    "start": "2771990",
    "end": "2777950"
  },
  {
    "text": "to look at country populations. So these are the\npopulations in a whole bunch",
    "start": "2777950",
    "end": "2783950"
  },
  {
    "text": "of different\ncountries-- or sorry, all the countries, ordered\nfrom countries with the highest",
    "start": "2783950",
    "end": "2790220"
  },
  {
    "text": "population up at the top of\nthe file down to the countries with the lowest population\nat the bottom of the file.",
    "start": "2790220",
    "end": "2796380"
  },
  {
    "text": "So they are basically\nranked in this order. So I know that this\norder is correct. So there's 237\nlines in this file.",
    "start": "2796380",
    "end": "2806250"
  },
  {
    "text": "What do we notice\nabout the data? So we need to know what the\ndata looks like in order to read the file in. And again, we're going to\nbe interested in extracting",
    "start": "2806250",
    "end": "2816540"
  },
  {
    "text": "certain parts of it. For the particular analysis\nI'm going to do next, I'm actually only interested\nin the population itself.",
    "start": "2816540",
    "end": "2823900"
  },
  {
    "text": "So I don't care about the rank. And I don't actually care\nabout the country either.",
    "start": "2823900",
    "end": "2829890"
  },
  {
    "text": "So all that my-- the code that's going\nto read in the file will only be interested in\nextracting the population",
    "start": "2829890",
    "end": "2837390"
  },
  {
    "text": "value. And notice, once again,\nwe've got our commas here",
    "start": "2837390",
    "end": "2842760"
  },
  {
    "text": "in the population values right. So we're going to use the same\ntrick to get rid of those.",
    "start": "2842760",
    "end": "2848430"
  },
  {
    "text": "Again, nice human-readable\nformat here but not so good for reading in the\nfile and dealing with the data",
    "start": "2848430",
    "end": "2855299"
  },
  {
    "text": "itself. So we're going to have to take\ncare of that when we read in. So here's the function\nthat reads in the file.",
    "start": "2855300",
    "end": "2862850"
  },
  {
    "text": "It's going to have\na very similar feel to the previous one. Again, I've got a little\nsample of our file",
    "start": "2862850",
    "end": "2868120"
  },
  {
    "text": "up here just to remind\nourselves what it looks like. So this particular file, I'm\nonly interested in grabbing",
    "start": "2868120",
    "end": "2874510"
  },
  {
    "text": "the population value. And it's actually a\ntab-separated file. So I've got rank, tab, country,\ntab, population, tab, and then",
    "start": "2874510",
    "end": "2884890"
  },
  {
    "text": "the date. So when I take a line of code\nwhat I'm first going to do",
    "start": "2884890",
    "end": "2892060"
  },
  {
    "text": "is split it on\nthe tab character. And the tab character is\nthis backslash t thing.",
    "start": "2892060",
    "end": "2898530"
  },
  {
    "text": "So once I split it on the tab\ncharacter, the thing at index 0 is my rank, the thing at\nindex 1 is my country,",
    "start": "2898530",
    "end": "2905740"
  },
  {
    "text": "and the thing at index\n2 is my population. The thing at index 3 is my date.",
    "start": "2905740",
    "end": "2911050"
  },
  {
    "text": "So if I'm only interested\nin grabbing the population, I'm going to look at\nthe thing at index 2,",
    "start": "2911050",
    "end": "2916350"
  },
  {
    "text": "and this gives me the\npopulation as a string here. And then we do the\nexact same trick",
    "start": "2916350",
    "end": "2921869"
  },
  {
    "text": "as before to\neliminate the commas. There's no space in\nthis particular case",
    "start": "2921870",
    "end": "2927600"
  },
  {
    "text": "because I've just got the number\nsaved because of my tab split. So all I need to\ndo is keep digits.",
    "start": "2927600",
    "end": "2935610"
  },
  {
    "text": "And then if I keep\nthe digits, then I'm just going to keep that\nnumber as a population.",
    "start": "2935610",
    "end": "2940950"
  },
  {
    "text": "Again, I cast it to\nan integer because I would like to work with\nnumbers in my lists as opposed to strings.",
    "start": "2940950",
    "end": "2946620"
  },
  {
    "text": "That would be very weird. And at the end of this function,\nI've got all of the populations",
    "start": "2946620",
    "end": "2952230"
  },
  {
    "text": "in the same order that\nthey were in that file read in as a list,\nnumbers not strings.",
    "start": "2952230",
    "end": "2959009"
  },
  {
    "text": "And so if we plot\nthe populations, just pure populations, I'm going\nto have something like this.",
    "start": "2959010",
    "end": "2966000"
  },
  {
    "start": "2966000",
    "end": "2972980"
  },
  {
    "text": "If I plot just the\npure populations, I see something that\nlooks like this. Kind of hard to tell--",
    "start": "2972980",
    "end": "2978480"
  },
  {
    "text": "I mean, it's a big\nexponential decrease, but is that really what it is? So again, we'll do a little\nsemi-log plot on the y-axis",
    "start": "2978480",
    "end": "2987559"
  },
  {
    "text": "to see exactly if there's any\nsort of linear action going on on that log plot. And unsurprisingly, it kind\nof matches our intuition.",
    "start": "2987560",
    "end": "2997760"
  },
  {
    "text": "There are very\nfew countries that have a really high population. There are very few countries\nthat have a low population.",
    "start": "2997760",
    "end": "3005620"
  },
  {
    "text": "And then a bunch of countries\nthat are kind of in the middle here where the population\njust exponentially decreases.",
    "start": "3005620",
    "end": "3012369"
  },
  {
    "text": " All right, but that's\nnot the analysis",
    "start": "3012370",
    "end": "3018950"
  },
  {
    "text": "I would like to do on this data\nbecause that's kind of boring.",
    "start": "3018950",
    "end": "3024990"
  },
  {
    "text": "So instead what we're\ngoing to analyze is actually just the first\ndigits from every country's",
    "start": "3024990",
    "end": "3032910"
  },
  {
    "text": "population. So what I'd like to do from that\ndata set is once I've grabbed",
    "start": "3032910",
    "end": "3039630"
  },
  {
    "text": "a list of all of the\ncountry populations, I am going to extract\nthat first digit.",
    "start": "3039630",
    "end": "3046150"
  },
  {
    "text": "So the way we do it is\nif we have a population, I don't know, 2542136, whatever,\nI'm going to take this number,",
    "start": "3046150",
    "end": "3058500"
  },
  {
    "text": "cast it to a string. That's what this one line\nof code is doing all in one.",
    "start": "3058500",
    "end": "3063510"
  },
  {
    "text": "It casts it to a\nstring, extracts the element at index 0. This becomes the string 2.",
    "start": "3063510",
    "end": "3070470"
  },
  {
    "text": "And then we cast that to\nan integer to give us 2.",
    "start": "3070470",
    "end": "3077369"
  },
  {
    "text": "So that line of code does\nall of those steps in order. So at the end of this loop,\nI've got this first digits list",
    "start": "3077370",
    "end": "3085500"
  },
  {
    "text": "that contains all of the first\ndigits of every single one of those country populations.",
    "start": "3085500",
    "end": "3092030"
  },
  {
    "text": "So I'll print that for\nyou, just to give you a sense of what it looks like. So we see this.",
    "start": "3092030",
    "end": "3097240"
  },
  {
    "text": "So we had two\ncountries up at the top that had 1 billion people--",
    "start": "3097240",
    "end": "3102310"
  },
  {
    "text": "1 billion people. Then the next country down\nhad 300 million people, then 200 million, then 200\nmillion, then 200 million,",
    "start": "3102310",
    "end": "3108980"
  },
  {
    "text": "100 million, and so on. So just extracting\nthat first digit, we see this pattern of values.",
    "start": "3108980",
    "end": "3118580"
  },
  {
    "text": "So if we plot that-- so that's exactly\nwhat we do down here, and I'll just do\nit in the slides.",
    "start": "3118580",
    "end": "3124250"
  },
  {
    "text": "If we plot that\nlist in that order, we get a plot that looks\nsomething like this.",
    "start": "3124250",
    "end": "3131520"
  },
  {
    "text": "It's a nice little\nsawtooth pattern. And if we stare at it a bit, it\nmakes sense because the numbers",
    "start": "3131520",
    "end": "3140210"
  },
  {
    "text": "that we got right from the file\nwere already in ranked order",
    "start": "3140210",
    "end": "3145310"
  },
  {
    "text": "highest population to\nthe lowest population. So down here, we had--",
    "start": "3145310",
    "end": "3154540"
  },
  {
    "text": "sorry, down here,\nthis little dot right here had two countries that\nwere 1 billion, so 1, 1,",
    "start": "3154540",
    "end": "3160079"
  },
  {
    "text": "and then had one country\nthat had 300 million. And then it had three\ncountries that had 200 million,",
    "start": "3160080",
    "end": "3165780"
  },
  {
    "text": "then a bunch of countries that\nhad 100 million something, so 1, 1, 1, 1, 1, 1.",
    "start": "3165780",
    "end": "3171390"
  },
  {
    "text": "And then, since we're going\nin decreasing order in terms of rank, once we've\nfinished going",
    "start": "3171390",
    "end": "3176790"
  },
  {
    "text": "to that significant\ndigit, when we move down, then we're going to start\nlooking at countries that have 90 million, 90 million,\n90 million, 80 million,",
    "start": "3176790",
    "end": "3184980"
  },
  {
    "text": "80 million, and so on. So just the order of all of\nthese values, the first digits",
    "start": "3184980",
    "end": "3190470"
  },
  {
    "text": "of every one of these\nvalues, it makes sense to have that sawtooth\npattern, right? We basically have 9, 8, 7, 6,\n5, 4, 3, 2, 1, 9, 8, 7, 6, 5, 4,",
    "start": "3190470",
    "end": "3199339"
  },
  {
    "text": "3, 2, 1, and so on.  So we get this pattern.",
    "start": "3199340",
    "end": "3206970"
  },
  {
    "text": "What I'd like to do is\nask how many countries",
    "start": "3206970",
    "end": "3212940"
  },
  {
    "text": "have their first digit a 1? It seems like\nthere's a lot, right? If we count how many of these\ncountries are down here,",
    "start": "3212940",
    "end": "3221220"
  },
  {
    "text": "it seems to be a lot. How many countries have\na first digit of 2? So again, we count\nhow many countries",
    "start": "3221220",
    "end": "3226500"
  },
  {
    "text": "are on this step of my sawtooth. How many countries\nhave the first digit 3? And so on.",
    "start": "3226500",
    "end": "3232470"
  },
  {
    "text": "And it kind of looks\nlike, I don't know, maybe there are more countries\nthat have a first digit of 1",
    "start": "3232470",
    "end": "3238230"
  },
  {
    "text": "than there are countries that\nhave a first digit of 9, right? There's only a couple\nhere, maybe like five here,",
    "start": "3238230",
    "end": "3243870"
  },
  {
    "text": "maybe one here, a\ncouple here, a couple here, whereas the number\nof countries that have a 1 are actually a lot.",
    "start": "3243870",
    "end": "3250470"
  },
  {
    "text": "So let's try to plot this\ndata, the values here. So what I'm interested in\ndoing is creating a histogram.",
    "start": "3250470",
    "end": "3258820"
  },
  {
    "text": "So a histogram on the\nx-axis has a bunch of bins. In this particular case, the\nway I'd like to bin my data",
    "start": "3258820",
    "end": "3267090"
  },
  {
    "text": "is by saying my bins\nare going to be the digits 1, 2, 3, 4,\n5, 6, 7, 8, and 9.",
    "start": "3267090",
    "end": "3273800"
  },
  {
    "text": "That's the x-axis. And the y-axis is going to be\na count, a frequency of how",
    "start": "3273800",
    "end": "3278839"
  },
  {
    "text": "many of my countries\nhave the number 1 as their first digit, how\nmany countries have the number",
    "start": "3278840",
    "end": "3284630"
  },
  {
    "text": "2 as my first digit, and so on. So in terms of this\nlist containing",
    "start": "3284630",
    "end": "3289670"
  },
  {
    "text": "all of the first digits\nof the countries, I'm essentially have-- I essentially have one bin\nthat counts how many ones I",
    "start": "3289670",
    "end": "3297290"
  },
  {
    "text": "have in this list, another\nbin that counts how many twos I have in this list, another\nbin that counts how many threes",
    "start": "3297290",
    "end": "3302870"
  },
  {
    "text": "I have in this list, and so on. So if I plot that histogram,\nit looks like this.",
    "start": "3302870",
    "end": "3312059"
  },
  {
    "text": "Now, I would have\nexpected this histogram to be about even, right?",
    "start": "3312060",
    "end": "3318680"
  },
  {
    "text": "Why does it matter\nthe first digit? It seems like in\nthis particular case,",
    "start": "3318680",
    "end": "3324870"
  },
  {
    "text": "the first digit has a higher\nprobability of being a 1 than being a 9. But intuitively, I would've\nexpected every digit",
    "start": "3324870",
    "end": "3333080"
  },
  {
    "text": "to come out with equal\nprobability, 11%, 1 over 9. But instead what we get is\nthis really surprising result,",
    "start": "3333080",
    "end": "3340890"
  },
  {
    "text": "which is that the first\ndigit seems to be about 30%.",
    "start": "3340890",
    "end": "3346537"
  },
  {
    "text": "To have the first-- sorry,\nto have the first digit of 1 seems to be about 30%. To have the first\ndigit being a 2",
    "start": "3346538",
    "end": "3353869"
  },
  {
    "text": "seems to be about 18\nor something percent, and so on and so on.",
    "start": "3353870",
    "end": "3359400"
  },
  {
    "text": "And then the first digit\nbeing a 9 is pretty low. It's going to be about, what is\nthis, 12 out of 200 countries.",
    "start": "3359400",
    "end": "3367710"
  },
  {
    "text": "So pretty low probability. So as it turns out,\nthis graph actually",
    "start": "3367710",
    "end": "3374080"
  },
  {
    "text": "follows something\ncalled Benford's law. And this is a well-proven law.",
    "start": "3374080",
    "end": "3380110"
  },
  {
    "text": "It applies to a bunch\nof different data sets that we find in\nnature, data sets that don't really have\nupper or lower bounds,",
    "start": "3380110",
    "end": "3386940"
  },
  {
    "text": "like country populations. So Benford's law effectively\nsays the probability",
    "start": "3386940",
    "end": "3393779"
  },
  {
    "text": "of the first digit in some big\nset of numbers being a 1, a 2,",
    "start": "3393780",
    "end": "3400350"
  },
  {
    "text": "a 3, whatever-- this d being\nthe 1, a 2, or 3, or whatever-- is according to this formula.",
    "start": "3400350",
    "end": "3405990"
  },
  {
    "text": "So if we find the probability\nof that first digit being a 1, we basically find log base\n10 of 2, which is about 0.28.",
    "start": "3405990",
    "end": "3415920"
  },
  {
    "text": "Probability of that first\ndigit being a 2 is log base 10 of 1 and 1/2,\nwhich is about 0.17.",
    "start": "3415920",
    "end": "3423000"
  },
  {
    "text": "So our data, the\ncountry populations, if we look at just the\nfirst digit of our data,",
    "start": "3423000",
    "end": "3430809"
  },
  {
    "text": "it also follows this law,\nwhich is pretty neat.",
    "start": "3430810",
    "end": "3436120"
  },
  {
    "text": "So a lot of data that we\ndeal with on a daily basis follows this law, number\nof social media followers,",
    "start": "3436120",
    "end": "3444190"
  },
  {
    "text": "number of posts people make,\nstock values, grocery prices, sports statistics, building\nheights, income taxes, things",
    "start": "3444190",
    "end": "3452260"
  },
  {
    "text": "like that all follow this\nlaw, which is pretty cool.",
    "start": "3452260",
    "end": "3458270"
  },
  {
    "text": "As an aside, one of the\nways that people figure out",
    "start": "3458270",
    "end": "3463760"
  },
  {
    "text": "tax fraud on income taxes\nis by applying Benford's law to income taxes submitted.",
    "start": "3463760",
    "end": "3470600"
  },
  {
    "text": "People, when they submit\nfraudulent numbers, they tend to make\nevery number come up",
    "start": "3470600",
    "end": "3475850"
  },
  {
    "text": "with an equal probability. They forget about Benford's law. And so they run this Benford's\nlaw on potentially fraudulent",
    "start": "3475850",
    "end": "3483920"
  },
  {
    "text": "tax submissions. And they figure out that\nwhatever those people submitted don't actually follow this law.",
    "start": "3483920",
    "end": "3490190"
  },
  {
    "text": "And hence, it's fraudulent. So if you're making up numbers,\njust remember Benford's law.",
    "start": "3490190",
    "end": "3498829"
  },
  {
    "text": "Cool. So yeah, that's a\nreally interesting thing",
    "start": "3498830",
    "end": "3504380"
  },
  {
    "text": "that can come out of some data. And again, we got to visualize\nit and see the law in action.",
    "start": "3504380",
    "end": "3511130"
  },
  {
    "text": "OK, one last example\nI want to go through. This one will show a\nbunch of different things.",
    "start": "3511130",
    "end": "3519145"
  },
  {
    "text": "It's going to have\na lot of code. I'm just going to\nbriefly talk about it. But the code is in the slides-- or sorry, in the\nPython file if you want",
    "start": "3519145",
    "end": "3525710"
  },
  {
    "text": "to look at it more in depth. I'm going to compare\ncity temperatures again,",
    "start": "3525710",
    "end": "3531540"
  },
  {
    "text": "but we're going to do a more\nin-depth analysis dealing with a whole bunch more data. So this particular\ndata set, I've",
    "start": "3531540",
    "end": "3538940"
  },
  {
    "text": "got daily temperatures for 55\nyears for 21 different cities.",
    "start": "3538940",
    "end": "3546030"
  },
  {
    "text": "So the amount of\ndata that I have here is going to be 365\ntimes 55 times 21.",
    "start": "3546030",
    "end": "3554370"
  },
  {
    "text": "So that's how many rows\nwould exist in my data set. So that's a lot of numbers\nto look at manually.",
    "start": "3554370",
    "end": "3561870"
  },
  {
    "text": "So instead, we're going\nto rely on aggregating it with averages and\nthings like that to make",
    "start": "3561870",
    "end": "3567620"
  },
  {
    "text": "sense of all of this data. So this is what the\nfile would look like. I've got three\ncolumns, effectively,",
    "start": "3567620",
    "end": "3574869"
  },
  {
    "text": "separated by commas. So the first one\ncorresponds to the city. Second one corresponds to\nthe temperature in Celsius.",
    "start": "3574870",
    "end": "3583660"
  },
  {
    "text": "And the third one is the\ndate that it was taken. So it's nicely in order. The date is\ndelineated like this.",
    "start": "3583660",
    "end": "3592250"
  },
  {
    "text": "So it's got year, year, year,\nyear, month, month, day, day. So this is 1961, January 4.",
    "start": "3592250",
    "end": "3597520"
  },
  {
    "text": "That's how we would read that. So later, when we're trying\nto think about which one of--",
    "start": "3597520",
    "end": "3603580"
  },
  {
    "text": "grabbing particular temperatures\nfor a specific year or things like that, then we\ncan use the format--",
    "start": "3603580",
    "end": "3609920"
  },
  {
    "text": "keep the format in\nmind and use that to extract the\nrelevant information. OK, so the first thing we want\nto do is to grab this data",
    "start": "3609920",
    "end": "3618339"
  },
  {
    "text": "and save it again in a\nnice data structure that allows us to manipulate\nit to our heart's content.",
    "start": "3618340",
    "end": "3624400"
  },
  {
    "text": "That is a list. So we're going to open\nup our file for reading.",
    "start": "3624400",
    "end": "3629619"
  },
  {
    "text": "I'm creating two lists here,\none for the temperatures, the other one for the dates. I'm going to loop through\neach line in my file.",
    "start": "3629620",
    "end": "3636520"
  },
  {
    "text": "And I know it's\ncomma-separated, so I'm going to split it on the comma. The thing at index\n0 will be my date--",
    "start": "3636520",
    "end": "3642490"
  },
  {
    "text": "will be my city. The thing at index 1 will\nbe my temperature value. The thing at index\n2 will be my date.",
    "start": "3642490",
    "end": "3649180"
  },
  {
    "text": "I would like to take\nthe temperature value and save it as a number because\nI want to plot these numbers.",
    "start": "3649180",
    "end": "3656660"
  },
  {
    "text": "This specific function\nwill get a list of all of the temperatures\nfor a particular city.",
    "start": "3656660",
    "end": "3663870"
  },
  {
    "text": "So the city here is\ngoing to be a parameter. So as I'm reading the\nfile, I would only",
    "start": "3663870",
    "end": "3669290"
  },
  {
    "text": "like to grab the lines\nthat match that city. So here I've got\nthis if statement.",
    "start": "3669290",
    "end": "3674579"
  },
  {
    "text": "So I'm only going to do this\nstuff inside this if statement if the city is matching\nwhat I'm interested in.",
    "start": "3674580",
    "end": "3680869"
  },
  {
    "text": "And then what do we do? Well, we're going to take\nour temperature value, which is the thing at index 1, because\nI've split on the commas.",
    "start": "3680870",
    "end": "3688799"
  },
  {
    "text": "Convert it to a float. There's no commas or anything\nweird like in that number. So it's just a pure\nfloat, 0.55 as a string.",
    "start": "3688800",
    "end": "3696450"
  },
  {
    "text": "If we cast it to a float, Python\nwill happily do that for us. Then we're going to run a\nCelsius to Fahrenheit function,",
    "start": "3696450",
    "end": "3705630"
  },
  {
    "text": "throwback to lecture 1,\nto convert that Celsius to Fahrenheit value.",
    "start": "3705630",
    "end": "3710730"
  },
  {
    "text": "And then we're going to append\nall of these temperatures in a nice list. And at the end of\nthe function, we're",
    "start": "3710730",
    "end": "3716790"
  },
  {
    "text": "going to return all\nthe temperatures. So it's going to\nbe 365 times 55. That's how many temperature\nvalues we have for one city.",
    "start": "3716790",
    "end": "3726050"
  },
  {
    "text": "And what we'd like\nto do as a first step is to just get a sense of\nthe average temperatures",
    "start": "3726050",
    "end": "3732260"
  },
  {
    "text": "for each one of these\ndifferent cities. So over every single\ndata point that we",
    "start": "3732260",
    "end": "3737660"
  },
  {
    "text": "have for a particular city,\nwhat is the average temperature over all these days\nfor all of these years?",
    "start": "3737660",
    "end": "3743940"
  },
  {
    "text": "So I would one\nnumber to represent the temperature per city. So that's what\nthis code is doing.",
    "start": "3743940",
    "end": "3750460"
  },
  {
    "text": "It's going to first get all of\nthe cities that are in my file, so all the unique values. Then it's going to get the\naverage temperature over all",
    "start": "3750460",
    "end": "3759580"
  },
  {
    "text": "of those 365 times 55 years. Then it's going to grab\nthe name of my city",
    "start": "3759580",
    "end": "3765490"
  },
  {
    "text": "as just the first\ntwo characters, and then it's going to\ncreate a nice scatter plot. So I don't want to link all\nof these city values together.",
    "start": "3765490",
    "end": "3774109"
  },
  {
    "text": "I would just like them\nto be dots in my plot. If we do that, we get\nsomething that looks like this.",
    "start": "3774110",
    "end": "3781100"
  },
  {
    "text": "So this point here represents\nthe temperature in Seattle over every day over 55 years.",
    "start": "3781100",
    "end": "3788510"
  },
  {
    "text": "So one temperature point\nthat represents the Seattle temperature for all of\nthis data that I've got.",
    "start": "3788510",
    "end": "3795420"
  },
  {
    "text": "What does this tell us? Well, not much that we\ndidn't already know.",
    "start": "3795420",
    "end": "3800490"
  },
  {
    "text": "I've got these\ncities down here that are super cold and those cities\nup there that are super warm.",
    "start": "3800490",
    "end": "3809100"
  },
  {
    "text": "And then all the\nrest of my cities are somewhere in the\nmiddle on average. So nothing that we didn't really\nknow, nothing groundbreaking",
    "start": "3809100",
    "end": "3816690"
  },
  {
    "text": "here. What would be a nicer\nthing to look at is the temperature\nchange over time.",
    "start": "3816690",
    "end": "3823570"
  },
  {
    "text": "So here, my one data point\ntells me the temperature",
    "start": "3823570",
    "end": "3829140"
  },
  {
    "text": "that represents that city. But what I would\nlike to do is grab the temperature that represents\nthat city for each year.",
    "start": "3829140",
    "end": "3836109"
  },
  {
    "text": "So for each year, I would like\nto get the average temperature for that year. And maybe I could see a\ntrend for the temperatures",
    "start": "3836110",
    "end": "3842880"
  },
  {
    "text": "getting warmer over time or\ncooling over time or something like-- or not having\nany change at all.",
    "start": "3842880",
    "end": "3850120"
  },
  {
    "text": "So this is the code\nthat does that. I've got get temperatures\nby year for city.",
    "start": "3850120",
    "end": "3855360"
  },
  {
    "text": "This is kind of the\nfunction that gets run. And it calls the one at the top. So here I've got the code\nfrom the previous slide.",
    "start": "3855360",
    "end": "3862890"
  },
  {
    "text": "It gets a list of\nall the temperatures for a particular city, so\nover all those 55 years.",
    "start": "3862890",
    "end": "3869089"
  },
  {
    "text": "And then I'm interested in\nall of these different years. So for each one of\nthese years, I'm",
    "start": "3869090",
    "end": "3874250"
  },
  {
    "text": "going to get a\ntemperature value. This getTempsForYear is\nthe function up there.",
    "start": "3874250",
    "end": "3880220"
  },
  {
    "text": "And all it does is it looks\nat that third column and grabs the year. It matches those first four\ncharacters of the year entry.",
    "start": "3880220",
    "end": "3889940"
  },
  {
    "text": "And as long as it\nmatches that year, then it's going to get\nadded to this running sum. And at the end, I'm going to\nget the average for the year.",
    "start": "3889940",
    "end": "3900470"
  },
  {
    "text": "And let's say that I'm going to\ncompare four different cities. So I've got 55 values for\neach city representing",
    "start": "3900470",
    "end": "3909050"
  },
  {
    "text": "the average temperature\nin those 55 years. And I've got four\ncities to compare.",
    "start": "3909050",
    "end": "3914660"
  },
  {
    "text": "So this is what one plot\nwould look like for Boston-- sorry, so this is what\nthe plot would look like.",
    "start": "3914660",
    "end": "3919910"
  },
  {
    "text": "I've got one line for\nBoston, that's the blue; one line for San Diego,\nthe red; one line for Phoenix, the orange; and\none line for Miami, the green.",
    "start": "3919910",
    "end": "3929710"
  },
  {
    "text": "What do we see? Well, yes, Boston on\naverage is a lot colder",
    "start": "3929710",
    "end": "3934900"
  },
  {
    "text": "than any of the\nthree other cities. Cool. We knew that. Miami and Phoenix\nare nicely hot there.",
    "start": "3934900",
    "end": "3942550"
  },
  {
    "text": "I'd like to be there right now. And what about trends? This is why we\ndid this analysis.",
    "start": "3942550",
    "end": "3947870"
  },
  {
    "text": "What do we see from\nthe trends here? Well, the Boston temperature\nmaybe increases a little bit slightly over time.",
    "start": "3947870",
    "end": "3954430"
  },
  {
    "text": "San Diego, it seems\nto stay about steady. The Phoenix one\nseems to increase",
    "start": "3954430",
    "end": "3961210"
  },
  {
    "text": "pretty dramatically as time\nhas gone by, on average. And the Miami one maybe\nalso slightly increased.",
    "start": "3961210",
    "end": "3969680"
  },
  {
    "text": "But this only tells us\naverage temperatures. So one thing that we can do\nis check out the extremes.",
    "start": "3969680",
    "end": "3977869"
  },
  {
    "text": "In addition to\nplotting the average, let's also plot the\nminimum for Boston",
    "start": "3977870",
    "end": "3983990"
  },
  {
    "text": "and the maximum for\nBoston and see exactly how close that average is.",
    "start": "3983990",
    "end": "3990250"
  },
  {
    "text": "Is the average in\nthe middle and then the minimum and maximums\nare super far away from the average? Or are they all pretty\nmuch close to the average?",
    "start": "3990250",
    "end": "3998780"
  },
  {
    "text": "So this is the code\nthat does that. The function here is exactly the\nsame as on the previous slide.",
    "start": "3998780",
    "end": "4005790"
  },
  {
    "text": "The only difference is instead\nof returning the average, we're also going to\ngrab the max and the min",
    "start": "4005790",
    "end": "4011849"
  },
  {
    "text": "for that list of temperatures. And then we've got all\nof the different cities",
    "start": "4011850",
    "end": "4020050"
  },
  {
    "text": "to plot this for. So we get something\nthat looks like this.",
    "start": "4020050",
    "end": "4025869"
  },
  {
    "text": "Again, at first glance, I\ntend to ignore the y-axes",
    "start": "4025870",
    "end": "4031470"
  },
  {
    "text": "at first glance. So at first glance\nagain, it looks like, hey, the minimums\nare pretty much the same,",
    "start": "4031470",
    "end": "4039397"
  },
  {
    "text": "the maximums are\npretty much the same, averages are pretty\nmuch the same. So, misleading to\nthink about that.",
    "start": "4039397",
    "end": "4044770"
  },
  {
    "text": "So once again, let's\nhelp the reader and set limits on our y-axes.",
    "start": "4044770",
    "end": "4052500"
  },
  {
    "text": "So here, I've got a limit to\nmy function or to my code. It's going to have every\none of my graphs start at 0",
    "start": "4052500",
    "end": "4059819"
  },
  {
    "text": "and top out at 100. And now the plots are\nnicely comparable.",
    "start": "4059820",
    "end": "4066049"
  },
  {
    "text": "So now I'm plotting the average\ntemperature for each year. So there's 55 of\nthese data points, the minimum temperature\nfor each year",
    "start": "4066050",
    "end": "4072770"
  },
  {
    "text": "and the maximum\ntemperature for each year. So 55 data points being plotted.",
    "start": "4072770",
    "end": "4078300"
  },
  {
    "text": "What can we tell? A lot easier to infer\ninformation from this, right? So we could see that the\naverage temperature in Boston",
    "start": "4078300",
    "end": "4085080"
  },
  {
    "text": "is the minimum temperature\nin Miami and San Diego.",
    "start": "4085080",
    "end": "4090150"
  },
  {
    "text": "What else can we see? The variation in\nBoston is pretty high.",
    "start": "4090150",
    "end": "4095760"
  },
  {
    "text": "The variation in Miami and\nSan Diego is a lot lower. San Diego goes from 40\nto 80, whereas Boston",
    "start": "4095760",
    "end": "4101969"
  },
  {
    "text": "goes from 0 to 90, so\npretty high variation. The average for\nBoston and San Diego",
    "start": "4101970",
    "end": "4110490"
  },
  {
    "text": "seems to be almost the\nsame, but that variation is very different\nbetween these two cities.",
    "start": "4110490",
    "end": "4116415"
  },
  {
    "start": "4116415",
    "end": "4122818"
  },
  {
    "text": "Yeah, question. AUDIENCE: So what happens\nif there's a value that's lower than the minimum y value? ANA BELL: Oh, yeah, then\nit doesn't get plotted.",
    "start": "4122819",
    "end": "4129989"
  },
  {
    "text": "Yeah, so that was a tenuous\nthere, but it didn't go down. I could imagine the\nminimum in Boston",
    "start": "4129990",
    "end": "4137189"
  },
  {
    "text": "being below 0 for one year. But yeah, then it just\nwouldn't get plotted. ",
    "start": "4137189",
    "end": "4144699"
  },
  {
    "text": "So you could use that\nto guide your limits. The code here could say y limit\nequals minimum of those three",
    "start": "4144700",
    "end": "4152350"
  },
  {
    "text": "lists, and then you'll\nbe sure to make sure to-- you'll ensure\nthat that minimum will",
    "start": "4152350",
    "end": "4158979"
  },
  {
    "text": "be hitting the limits. Great question. OK, so one other thing\nthat we can look at",
    "start": "4158979",
    "end": "4165220"
  },
  {
    "text": "is the distribution\nof temperatures. So this is a nice plot. It gives us sort\nof an overview look",
    "start": "4165220",
    "end": "4172450"
  },
  {
    "text": "at what happens year by year. But what if we focus\non one specific year?",
    "start": "4172450",
    "end": "4178049"
  },
  {
    "text": "And now, for that\nyear, let's think about what the temperature\ndistribution looks like.",
    "start": "4178050",
    "end": "4185670"
  },
  {
    "text": "So what I'm\ninterested in plotting is something like this.",
    "start": "4185670",
    "end": "4191290"
  },
  {
    "text": "So I've got on the\nx-axis maybe bins that correspond to different\ntemperatures, so a temperature",
    "start": "4191290",
    "end": "4198690"
  },
  {
    "text": "of 0, temperature of\n1, temperature of 2, 3, 4, and so on. And then this is going to be\npretty big because maybe my max",
    "start": "4198690",
    "end": "4206010"
  },
  {
    "text": "temperature will be 100. So for one particular year, I\nwould like to have 100 bins.",
    "start": "4206010",
    "end": "4212280"
  },
  {
    "text": "And the height of\neach bin is going to be a count of how many\ndays within that year",
    "start": "4212280",
    "end": "4219130"
  },
  {
    "text": "we reached a temperature of 0,\nhow many days within the year we reached a temperature of 1.",
    "start": "4219130",
    "end": "4224550"
  },
  {
    "text": "And we can average things,\nor we can round temperatures because obviously the\ntemperature would be like 20.6",
    "start": "4224550",
    "end": "4230430"
  },
  {
    "text": "or something like that. And then we can just round it\nso it fits in one of these bins.",
    "start": "4230430",
    "end": "4236210"
  },
  {
    "text": "So that's exactly what\nthis code is doing. So here it's looping over\nevery single one of the dates.",
    "start": "4236210",
    "end": "4245179"
  },
  {
    "text": "And we're creating this\nlist of the temperatures. And the list is for\none specific year.",
    "start": "4245180",
    "end": "4251790"
  },
  {
    "text": "So this year is\nmy parameter here. So here, this is just\ngoing through the data and ensuring that I'm\ngrabbing only the rows that",
    "start": "4251790",
    "end": "4259610"
  },
  {
    "text": "match that year. And then down here\nis where I'm creating",
    "start": "4259610",
    "end": "4265230"
  },
  {
    "text": "a list of 100 elements. So this down here, you can think\nof it as a list, like this.",
    "start": "4265230",
    "end": "4276330"
  },
  {
    "text": "And the index nicely-- it worked out really\nnicely-- the index",
    "start": "4276330",
    "end": "4281699"
  },
  {
    "text": "is going to correspond\nto a temperature value, which is weird to think. It only works in this\nparticular scenario",
    "start": "4281700",
    "end": "4287519"
  },
  {
    "text": "with Fahrenheit temperatures. But the index in this list\ncorresponds to a temperature.",
    "start": "4287520",
    "end": "4293020"
  },
  {
    "text": "So as I'm iterating through\nmy list of temperatures over 365 days in\na year, I'm going",
    "start": "4293020",
    "end": "4299670"
  },
  {
    "text": "to round that temperature. And I'm going to\nadd it to the index that I believe it belongs to.",
    "start": "4299670",
    "end": "4306690"
  },
  {
    "text": "So in this way,\nI'm going to have-- if the temperature was 4\ndegrees, then that index 4,",
    "start": "4306690",
    "end": "4313860"
  },
  {
    "text": "I'm going to increment\nmy count by one. And if further on\nin the list I've got another temperature\nthat's 4, at index 4,",
    "start": "4313860",
    "end": "4321087"
  },
  {
    "text": "I'm going to increment it again. So I've got this nice\nlist, these nice counts",
    "start": "4321087",
    "end": "4326219"
  },
  {
    "text": "of all of the temperatures\nat different-- sorry, all of the\ncounts at all of",
    "start": "4326220",
    "end": "4333330"
  },
  {
    "text": "these different temperatures. So out of those 365\ndays, how many days had a temperature of 4?",
    "start": "4333330",
    "end": "4339450"
  },
  {
    "text": "Out of 365 days, how many\ndays had a temperature of 85? ",
    "start": "4339450",
    "end": "4345469"
  },
  {
    "text": "And then we can plot it. And we're not going to plot\na regular plot, because we",
    "start": "4345470",
    "end": "4351034"
  },
  {
    "text": "don't want these connected. We're not going to do\na histogram, because we made our own histogram here.",
    "start": "4351035",
    "end": "4356570"
  },
  {
    "text": "Instead, we're going\nto do a bar plot. And the bar plot takes in\nmy x-axis and my y-axis,",
    "start": "4356570",
    "end": "4363500"
  },
  {
    "text": "the x-axis being this\nlist 0 through 100 corresponding temperatures\nand the y-axis",
    "start": "4363500",
    "end": "4370640"
  },
  {
    "text": "being the count of\nhow many days had each one of those temperatures. And we get something\nthat looks like this.",
    "start": "4370640",
    "end": "4378620"
  },
  {
    "text": "So this is only for one year. So if we count the sum of all of\nthese bars, how many times they",
    "start": "4378620",
    "end": "4386380"
  },
  {
    "text": "appear, it should\nadd up to 365 days. So this is the distribution,\nI think, in 1961.",
    "start": "4386380",
    "end": "4394659"
  },
  {
    "text": "Left is Boston and\nright is San Diego. ",
    "start": "4394660",
    "end": "4400830"
  },
  {
    "text": "Already we can tell some pretty\ninteresting things from this. So 1961, what does\nthe distribution look",
    "start": "4400830",
    "end": "4406890"
  },
  {
    "text": "like for these two cities? Well, it looks like-- this is\nsomething we could already tell from the minimum and maximum--",
    "start": "4406890",
    "end": "4412170"
  },
  {
    "text": "it looks like\ntemperatures in Boston kind of went from about 0 to 85.",
    "start": "4412170",
    "end": "4417750"
  },
  {
    "text": "But what the\ndistribution tells us that the minimum and\nmaximum couldn't tell",
    "start": "4417750",
    "end": "4423360"
  },
  {
    "text": "us is how many\ndays were that low, how many days were that high.",
    "start": "4423360",
    "end": "4428790"
  },
  {
    "text": "Is it that we have some sort\nof nice-looking bell-curve-type",
    "start": "4428790",
    "end": "4434040"
  },
  {
    "text": "distribution where most\nof our temperatures land comfortably in\nthis middle range?",
    "start": "4434040",
    "end": "4439260"
  },
  {
    "text": "That's one option. Or maybe there is\nsome city out there",
    "start": "4439260",
    "end": "4444900"
  },
  {
    "text": "where it just has an\neven distribution. So basically, they're going\nto have temperatures that--",
    "start": "4444900",
    "end": "4452679"
  },
  {
    "text": " sorry, the count of the\ntemperatures basically is even.",
    "start": "4452680",
    "end": "4458400"
  },
  {
    "text": "So it doesn't really\nmatter what temperature you're talking about, there\nwill be an even number of days throughout the year\nthat are at that temperature.",
    "start": "4458400",
    "end": "4465190"
  },
  {
    "text": "So this kind of graph\ncan tell us this. So it looks like the temperature\nin Boston kind of maybe",
    "start": "4465190",
    "end": "4470470"
  },
  {
    "text": "follows a very wide\nbell-shaped-curve kind of, maybe two bumps, a bimodal.",
    "start": "4470470",
    "end": "4476785"
  },
  {
    "text": "The temperature in San\nDiego, again, much, much lower variability but\nalso seems to follow this",
    "start": "4476785",
    "end": "4485050"
  },
  {
    "text": "bell-type-curve here, where-- bimodal with two bumps here, one\nwith temperatures that are just",
    "start": "4485050",
    "end": "4492639"
  },
  {
    "text": "in the 55s, very few\ntemperatures in the middle, and then a bunch of\ntemperatures in the 70s.",
    "start": "4492640",
    "end": "4499280"
  },
  {
    "text": "So this is the\ndistribution for 1961. And then we can again ask what\nhappens to the distribution",
    "start": "4499280",
    "end": "4506600"
  },
  {
    "text": "in a later year. So if we take more than\none year that we plot,",
    "start": "4506600",
    "end": "4512300"
  },
  {
    "text": "here I'm going to\nplot 1961 and 2015. So just two years, not\neverything in between.",
    "start": "4512300",
    "end": "4518150"
  },
  {
    "text": "That would be a very,\nvery cluttered graph. I'm going to label the 1961\ntemperatures blue and the 2015",
    "start": "4518150",
    "end": "4527030"
  },
  {
    "text": "temperatures red. So then I get something\nthat looks like this.",
    "start": "4527030",
    "end": "4533100"
  },
  {
    "text": "A little hard to tell. So what we can do for this\ngraph is we can actually add something called an alpha\nvalue, so a transparency,",
    "start": "4533100",
    "end": "4540659"
  },
  {
    "text": "so we can see what's\nbehind the red. Does the blue go all\nthe way down here?",
    "start": "4540660",
    "end": "4546480"
  },
  {
    "text": "Is the blue just\nslightly below the red? Hard to tell from this. One thing we can do is to add\nthat transparency, like I said.",
    "start": "4546480",
    "end": "4553800"
  },
  {
    "text": "Another thing that we can\ndo is to just plot them on two separate subplots.",
    "start": "4553800",
    "end": "4559360"
  },
  {
    "text": "And then we can\ntry to compare them to see exactly what\nhappened from 1961 in terms",
    "start": "4559360",
    "end": "4566350"
  },
  {
    "text": "of the distribution\nto 2015, again, in terms of the distribution. So you can, if you\nwant, play around",
    "start": "4566350",
    "end": "4571990"
  },
  {
    "text": "with different cities,\nyour home city, and see exactly what\nhappened to the temperatures over all those years.",
    "start": "4571990",
    "end": "4578140"
  },
  {
    "text": "So it's kind of a\ncute thing to try. Any questions?",
    "start": "4578140",
    "end": "4584370"
  },
  {
    "text": "OK, so that's the end. We've really just scratched\nthe surface of the things",
    "start": "4584370",
    "end": "4589950"
  },
  {
    "text": "that you can do\nwith plotting today. We saw how to\ncustomize our graphs. We saw how to create\nlabels, some really, really",
    "start": "4589950",
    "end": "4596880"
  },
  {
    "text": "basic things. But I hope that sort of\nthroughout all of this, you saw how useful it is\nto visualize the data.",
    "start": "4596880",
    "end": "4604650"
  },
  {
    "text": "The commands are\nnot so important, because you can\nalways look those up. But what's important is to take\nsome set of data, which you'll",
    "start": "4604650",
    "end": "4612539"
  },
  {
    "text": "be working with in the real\nworld, if you do a UROP, if you decide to take\nother computer science",
    "start": "4612540",
    "end": "4617580"
  },
  {
    "text": "courses in other departments,\ncomputation courses. You'll be working with data. And as soon as you get it.",
    "start": "4617580",
    "end": "4623500"
  },
  {
    "text": "It's important to\njust initialize it to see what it looks,\nget a general sense of it.",
    "start": "4623500",
    "end": "4628570"
  },
  {
    "text": "And once you get\na sense of it, it can lead to more\nquestions, which will cause you to visualize\nthe data in a slightly",
    "start": "4628570",
    "end": "4634830"
  },
  {
    "text": "different way, which becomes\nmore useful in answering questions and potentially posing\nnew questions to investigate.",
    "start": "4634830",
    "end": "4641940"
  },
  {
    "text": "OK, so that's it for today. Next lecture, we'll be just\ntying up some loose ends regarding dictionaries and\nsome ideas on hash tables",
    "start": "4641940",
    "end": "4651520"
  },
  {
    "text": "and how dictionaries\nare stored in memory, as well as doing a\nlittle bit of preview of simulations, which\nis something that's",
    "start": "4651520",
    "end": "4657820"
  },
  {
    "text": "a really useful technique. Again, if you're going to do\nsome more computation courses",
    "start": "4657820",
    "end": "4663190"
  },
  {
    "text": "in other departments,\na simulation is something that's going to\nbe really, really helpful. ",
    "start": "4663190",
    "end": "4674000"
  }
]