[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "start": "0",
    "end": "21170"
  },
  {
    "text": "PROFESSOR: Well, now that we've\ngiven you some power to make independent local state\nand to model objects, I",
    "start": "21170",
    "end": "28340"
  },
  {
    "text": "thought we'd do a bit of\nprogramming of a very complicated kind, just to\nillustrate what you can do",
    "start": "28340",
    "end": "35380"
  },
  {
    "text": "with this sort of thing. ",
    "start": "35380",
    "end": "40430"
  },
  {
    "start": "40000",
    "end": "115000"
  },
  {
    "text": "I suppose, as I said, we were\nmotivated by physical systems and the ways we like to think\nabout physical systems, which",
    "start": "40430",
    "end": "47200"
  },
  {
    "text": "is that there are these things\nthat the world is made out of. And each of these things has\nparticular independent local",
    "start": "47200",
    "end": "55570"
  },
  {
    "text": "state, and therefore\nit is a thing. That's what makes it a thing.",
    "start": "55570",
    "end": "61280"
  },
  {
    "text": "And then we're going to say\nthat in the model in the world--we have a world and a\nmodel in our minds and in the",
    "start": "61280",
    "end": "67900"
  },
  {
    "text": "computer of that world. And what I want to make is a\ncorrespondence between the",
    "start": "67900",
    "end": "73230"
  },
  {
    "text": "objects in the world and the\nobjects in the computer, the relationships between the\nobjects in the world and the relationships between those same\nobj...--the model objects",
    "start": "73230",
    "end": "81200"
  },
  {
    "text": "in the computer, and the\nfunctions that relate things in the world to the functions\nthat relate",
    "start": "81200",
    "end": "87320"
  },
  {
    "text": "things in the computer.  This buys us modularity.",
    "start": "87320",
    "end": "94740"
  },
  {
    "text": "If we really believe the world\nis like that, that it's made out of these little pieces, and\nof course we could arrange",
    "start": "94740",
    "end": "100120"
  },
  {
    "text": "our world to be like that, we\ncould only model those things that are like that, then we can\ninherit the modularity in",
    "start": "100120",
    "end": "107030"
  },
  {
    "text": "the world into our\nprogramming. That's why we would invent some\nof this object-oriented",
    "start": "107030",
    "end": "113149"
  },
  {
    "text": "programming. Well, let's take the best\nkind of objects I know.",
    "start": "113150",
    "end": "118890"
  },
  {
    "start": "115000",
    "end": "202000"
  },
  {
    "text": "They're completely--they're\ncompletely wonderful: electrical systems. Electrical\nsystems really are the",
    "start": "118890",
    "end": "130270"
  },
  {
    "text": "physicist's best,\nbest objects. You see over here I have some\npiece of machinery.",
    "start": "130270",
    "end": "136760"
  },
  {
    "text": "Right here's a piece\nof machinery. And it's got an electrical wire\nconnecting one part of",
    "start": "136760",
    "end": "144269"
  },
  {
    "text": "the machinery with another\npart of the machinery. And one of the wonderful\nproperties of the electrical",
    "start": "144270",
    "end": "150450"
  },
  {
    "text": "world is that I can say this is\nan object, and this is an object, and they're--",
    "start": "150450",
    "end": "156040"
  },
  {
    "text": "the connection between\nthem is clear. In principle, there is no\nconnection that I didn't",
    "start": "156040",
    "end": "161190"
  },
  {
    "text": "describe with these wires. Let's say if I have light bulbs,\na light bulb and a",
    "start": "161190",
    "end": "168000"
  },
  {
    "text": "power supply that's plugged\ninto the outlet. Then the connection is\nperfectly clear.",
    "start": "168000",
    "end": "173620"
  },
  {
    "text": "There's no other connections\nthat we know of. If I were to tie a knot in the\nwire that connects the light",
    "start": "173620",
    "end": "179250"
  },
  {
    "text": "bulb to the power supply, the\nlight remains lit up. It doesn't care.",
    "start": "179250",
    "end": "185290"
  },
  {
    "text": " That the way the physics is\narranged is such that the",
    "start": "185290",
    "end": "191120"
  },
  {
    "text": "connection can be made abstract,\nat least for low frequencies and things\nlike that. ",
    "start": "191120",
    "end": "197840"
  },
  {
    "text": "So in fact, we have captured all\nof the connections there really are. Well, as you can go one step\nfurther and talk about the",
    "start": "197840",
    "end": "204310"
  },
  {
    "start": "202000",
    "end": "340000"
  },
  {
    "text": "most abstract types of\nelectrical systems we have, digital to dual circuits.",
    "start": "204310",
    "end": "210951"
  },
  {
    "text": "And here there are certain\nkinds of objects. For example, in digital\ncircuits we",
    "start": "210951",
    "end": "218240"
  },
  {
    "text": "have things like inverters. We have things like and-gates.",
    "start": "218240",
    "end": "223989"
  },
  {
    "text": "We have things like or-gates. We connect them together by\nsort-of wires which represent",
    "start": "223990",
    "end": "233980"
  },
  {
    "text": "abstract signals. We don't really care as physical\nvariables whether these are voltages or currents\nor some combination or",
    "start": "233980",
    "end": "240190"
  },
  {
    "text": "anything like that, or water,\nwater pressure. These abstract variables\nrepresent certain signals.",
    "start": "240190",
    "end": "249420"
  },
  {
    "text": "And we build systems by\nwiring these things together with wires. So today what I'm going to show\nyou, right now, we're",
    "start": "249420",
    "end": "257730"
  },
  {
    "text": "going to build up an invented\nlanguage in Lisp, embedded in the same sense that Henderson's\npicture language",
    "start": "257730",
    "end": "264590"
  },
  {
    "text": "was embedded, which is not the\nsame sense as the language of",
    "start": "264590",
    "end": "269780"
  },
  {
    "text": "pattern match and substitution\nwas done yesterday. The pattern match/substitution\nlanguage was interpreted by a",
    "start": "269780",
    "end": "275725"
  },
  {
    "text": "Lisp program. But the embedding of Henderson's\nprogram is that we",
    "start": "275725",
    "end": "280920"
  },
  {
    "text": "just build up more and more\nprocedures that encapsulate the structure we want. So for example here, I'm going\nto have some various primitive",
    "start": "280920",
    "end": "289280"
  },
  {
    "text": "kinds of objects, as you see,\nthat one and that one. I'm going to use wires\nto combine them.",
    "start": "289280",
    "end": "295810"
  },
  {
    "text": "The way I represent\nattaching-- I can make wires. So let's say A is a wire.",
    "start": "295810",
    "end": "301740"
  },
  {
    "text": "And B is a wire. And C is a wire. And D is a wire. And E is wire. And S is a wire.",
    "start": "301740",
    "end": "306879"
  },
  {
    "text": "Well, an or-gate that has both\ninputs, the inputs being A and",
    "start": "306880",
    "end": "312380"
  },
  {
    "text": "B, and the output being Y or\nD, you notate like this.",
    "start": "312380",
    "end": "317940"
  },
  {
    "text": "An and-gate, which has inputs\nA and B and output C, we notate like that.",
    "start": "317940",
    "end": "324820"
  },
  {
    "text": "By making such a sequence of\ndeclarations, like this, I can wire together an arbitrary\ncircuit.",
    "start": "324820",
    "end": "332750"
  },
  {
    "text": "So I've just told you a set\nof primitives and means of combination for building digital\ncircuits, when I need",
    "start": "332750",
    "end": "340930"
  },
  {
    "start": "340000",
    "end": "523000"
  },
  {
    "text": "more in a real language\nthan abstraction. And so for example,\nhere I have--here",
    "start": "340930",
    "end": "346766"
  },
  {
    "text": "I have a half adder.",
    "start": "346766",
    "end": "352240"
  },
  {
    "text": "It's something you all\nknow if you've done any digital design. It's used for adding numbers\ntogether on A and B and",
    "start": "352240",
    "end": "360830"
  },
  {
    "text": "putting out a sum and a carry. And in fact, the wiring\ndiagram is exactly what I told you.",
    "start": "360830",
    "end": "367449"
  },
  {
    "text": "A half adder with things that\ncome out of the box-- you see the box, the boundary, the\nabstraction is always a box.",
    "start": "367450",
    "end": "374790"
  },
  {
    "text": "And there are things that come\nout of it, A, B, S, and C. Those are the declared\nvariables--declared variables",
    "start": "374790",
    "end": "384950"
  },
  {
    "text": "of a lambda expression,\nwhich is the one that defines half adder. ",
    "start": "384950",
    "end": "391400"
  },
  {
    "text": "And internal to that, I make up\nsome more wires, D and E, which I'm going to use for\nthe interconnect--",
    "start": "391400",
    "end": "397759"
  },
  {
    "text": "here E is this one and D is this\nwire, the interconnect that doesn't come through\nthe walls of the box--",
    "start": "397760",
    "end": "405099"
  },
  {
    "text": "and wire things together\nas you just saw. And the nice thing about this\nthat I've just shown you is",
    "start": "405100",
    "end": "411180"
  },
  {
    "text": "this language is hierarchical\nin the right way. If a language isn't hierarchical\nin the right way, if it turns out that a compound\nobject doesn't look",
    "start": "411180",
    "end": "418850"
  },
  {
    "text": "like a primitive, there's\nsomething wrong with the language-- at least the way I\nfeel about that.",
    "start": "418850",
    "end": "426300"
  },
  {
    "text": "So here we have--here, instead\nof starting with mathematical functions, or things that\ncompute mathematical functions, which is what we've\nbeen doing up until now,",
    "start": "426300",
    "end": "433870"
  },
  {
    "text": "instead of starting with\nthings that look like mathematical functions, or\ncompute such things, we are starting with things that are\nelectrical objects and we",
    "start": "433870",
    "end": "441330"
  },
  {
    "text": "build up more electrical\nobjects. And the glue we're using\nis basically the",
    "start": "441330",
    "end": "446590"
  },
  {
    "text": "Lisp structure: lambdas. Lambda is the ultimate\nglue, if you will.",
    "start": "446590",
    "end": "452930"
  },
  {
    "text": "And of course, half adder itself\ncan be used in a more",
    "start": "452930",
    "end": "459000"
  },
  {
    "text": "complicated abstraction called\na full adder, which in fact involves two half adders, as you\nsee here, hooked together",
    "start": "459000",
    "end": "466670"
  },
  {
    "text": "with some extra wires, that you\nsee here, S, C1, and C2, and an or-gate, to manufacture\na full adder, which takes a",
    "start": "466670",
    "end": "477340"
  },
  {
    "text": "input number, another input\nnumber, a carry in, and produces output, a sum\nand a carry out.",
    "start": "477340",
    "end": "485900"
  },
  {
    "text": "And out of full adders, you can\nmake real adder chains and big adders.",
    "start": "485900",
    "end": "492990"
  },
  {
    "text": "So we have here a language so\nfar that has primitives, means",
    "start": "492990",
    "end": "498870"
  },
  {
    "text": "of combination, and means of\nabstraction to real language. Now, how are we going\nto implement this?",
    "start": "498870",
    "end": "505000"
  },
  {
    "text": "Well, let's do it easily. Let's look at the primitives. The only problem is we have to\nimplement the primitives.",
    "start": "505000",
    "end": "511159"
  },
  {
    "text": "Nothing else has to be\nimplemented, because we're picking up the means of\ncombination and abstraction",
    "start": "511160",
    "end": "517640"
  },
  {
    "text": "from Lisp, inheriting them\nin the embedding.",
    "start": "517640",
    "end": "523417"
  },
  {
    "start": "523000",
    "end": "645000"
  },
  {
    "text": "OK, so let's look at a\nparticular primitive. An inverter is a nice one. ",
    "start": "523417",
    "end": "531540"
  },
  {
    "text": "Now, inverter has two wires\ncoming in, an in and an out. ",
    "start": "531540",
    "end": "537440"
  },
  {
    "text": "And somehow, it's going to have\nto know what to do when a signal comes in.",
    "start": "537440",
    "end": "544300"
  },
  {
    "text": "So somehow it's going to have\nto tell its input wire-- and now we're going to talk\nabout objects and we're going",
    "start": "544300",
    "end": "550756"
  },
  {
    "text": "to see this in a little\nmore detail soon-- but it's going to have to tell\nits input wire that when you",
    "start": "550756",
    "end": "556660"
  },
  {
    "text": "change, tell me. So this object, the object which\nis the inverter has to",
    "start": "556660",
    "end": "562720"
  },
  {
    "text": "tell the object which\nis the input wire, hi, my name is George. And my, my job is to do\nsomething with results when",
    "start": "562720",
    "end": "570480"
  },
  {
    "text": "you change. So when you change, you get a\nchange, tell me about it. Because I've got to do\nsomething with that.",
    "start": "570480",
    "end": "577010"
  },
  {
    "text": "Well, that's done down here by\nadding an action on the input",
    "start": "577010",
    "end": "582200"
  },
  {
    "text": "wire called invert-in, where\ninvert-in is defined over here to be a procedure of no\narguments, which gets the",
    "start": "582200",
    "end": "591660"
  },
  {
    "text": "logical not of the signal\non the input wire. And after some delay, which is\nthe inverter delay, all these",
    "start": "591660",
    "end": "599720"
  },
  {
    "text": "electrical objects have delays,\nwe'll do the following thing-- set the signal on the\noutput wire to the new value.",
    "start": "599720",
    "end": "607140"
  },
  {
    "text": " A very simple program.",
    "start": "607140",
    "end": "612399"
  },
  {
    "text": "Now, you have to imagine that\nthe output wire has to be sensitive and know that when\nits signal changes, it may",
    "start": "612400",
    "end": "619650"
  },
  {
    "text": "have to tell other guys,\nhey, wake up. My value has changed.",
    "start": "619650",
    "end": "626050"
  },
  {
    "text": "So when you hook together\ninverter with an and-gate or something like that, there has\nto be a lot of communication",
    "start": "626050",
    "end": "631680"
  },
  {
    "text": "going on in order to\nmake sure that the signal propagates right.",
    "start": "631680",
    "end": "636810"
  },
  {
    "text": "And down here is nothing\nvery exciting. This is just the definition\nof logical not for some particular representations\nof the logical values--",
    "start": "636810",
    "end": "644170"
  },
  {
    "text": "1, 0 in this case. And we can look at things more\ncomplicated like and-gates.",
    "start": "644170",
    "end": "649779"
  },
  {
    "text": "And-gates take two inputs, A1\nand A2, we'll call them, and",
    "start": "649780",
    "end": "655000"
  },
  {
    "text": "produce an output. But the structure of the\nand-gate is identical to the one we just saw.",
    "start": "655000",
    "end": "660860"
  },
  {
    "text": "There's one called an and-action\nprocedure that's defined, which is the thing that\ngets called when an input",
    "start": "660860",
    "end": "668570"
  },
  {
    "text": "is changed. And what it does, of course, is\nnothing more than compute the logical and of the signals\non the inputs.",
    "start": "668570",
    "end": "675899"
  },
  {
    "text": "And after some delay, called the\nand-gate delay, calls this procedure, which sets a signal\non the output to a new value.",
    "start": "675900",
    "end": "685470"
  },
  {
    "text": "Now, how I implement\nthese things is all wishful thinking. As you see here, I have an\nassignment operation.",
    "start": "685470",
    "end": "692019"
  },
  {
    "text": "It's not set. It's a derived assignment\noperation in the same way we had functions that were derived\nfrom CAR and CDR. So",
    "start": "692020",
    "end": "701140"
  },
  {
    "text": "I, by convention, label that\nwith an exclamation point.",
    "start": "701140",
    "end": "706340"
  },
  {
    "text": "And over here, you see there's\nan action, which is to inform the wire, called A1 locally in\nthis and-gate, to call the",
    "start": "706340",
    "end": "717190"
  },
  {
    "text": "and-action procedure when it\ngets changed, and the wire A2 to call the and-action\nprocedure when it gets changed.",
    "start": "717190",
    "end": "723350"
  },
  {
    "text": " All very simple.",
    "start": "723350",
    "end": "729510"
  },
  {
    "text": "Well, let's talk a little bit\nabout this communication that must occur between these\nvarious parts.",
    "start": "729510",
    "end": "738310"
  },
  {
    "start": "738000",
    "end": "1082000"
  },
  {
    "text": "Suppose, for example, I have\na very simple circuit which",
    "start": "738310",
    "end": "744560"
  },
  {
    "text": "contains an and with wires A\nand B. And that connects",
    "start": "744560",
    "end": "754230"
  },
  {
    "text": "through a wire called C to an\ninverter which has a wire",
    "start": "754230",
    "end": "760579"
  },
  {
    "text": "output called D. What are\nthe comput...--here's",
    "start": "760580",
    "end": "766310"
  },
  {
    "text": "the physical world. It's an abstraction of\nthe physical world. Now I can buy these out of\nlittle pieces that you get at",
    "start": "766310",
    "end": "772010"
  },
  {
    "text": "Radio Shack for a few cents. And there are boxes that act\nlike this, which have little",
    "start": "772010",
    "end": "777680"
  },
  {
    "text": "numbers on them like\nLS04 or something. Now supposing I were to\ntry to say what's the",
    "start": "777680",
    "end": "786980"
  },
  {
    "text": "computational model. What is the thing that\ncorresponds to that, that part of reality in the mind of\nus and in the computer?",
    "start": "786980",
    "end": "795850"
  },
  {
    "text": "Well, I have to assign for every\nobject in the world an object in the computer, and for\nevery relationship in the",
    "start": "795850",
    "end": "802160"
  },
  {
    "text": "world between them a\nrelationship in the computer. That's my goal.",
    "start": "802160",
    "end": "808560"
  },
  {
    "text": "So let's do that. Well, I have some sort of thing\ncalled the signal, A.",
    "start": "808560",
    "end": "815401"
  },
  {
    "text": "This is A. It's a signal. It's a cloudy thing like that. And I have another one down here\nwhich I'm going to call",
    "start": "815401",
    "end": "822390"
  },
  {
    "text": "B. It's another signal.",
    "start": "822390",
    "end": "829140"
  },
  {
    "text": "Now this signal--these two\nsignals are somehow going to have to hook together into a\nbox, let's call it this, which",
    "start": "829140",
    "end": "836180"
  },
  {
    "text": "is the and-gate, action\nprocedure. That's the and-gate's\naction procedure.",
    "start": "836180",
    "end": "842040"
  },
  {
    "start": "842040",
    "end": "847660"
  },
  {
    "text": "And it's going to produce--well,\nit's going to interact with a signal object,\nwhich we call C--a wire",
    "start": "847660",
    "end": "858360"
  },
  {
    "text": "object, excuse me, we call\nC. And then the-- this is going to put out again,\nor connect to, another",
    "start": "858360",
    "end": "865630"
  },
  {
    "text": "action procedure which is one\nassociated with the inverter in the world, not. ",
    "start": "865630",
    "end": "872860"
  },
  {
    "text": "And I'm going to have\nanother--another wire, which",
    "start": "872860",
    "end": "879980"
  },
  {
    "text": "we'll call D. So here's my layout of stuff.",
    "start": "879980",
    "end": "885769"
  },
  {
    "text": "Now we have to say what's inside\nthem and what they have to know to compute.",
    "start": "885770",
    "end": "891500"
  },
  {
    "text": "Well, every--every one of these\nwires has to know what the value of the signal that's\non that wire is.",
    "start": "891500",
    "end": "897340"
  },
  {
    "text": "So there's going to be some\nvariable inside here, we'll call it signal. ",
    "start": "897340",
    "end": "902670"
  },
  {
    "text": "And he owns a value. So there must be some\nenvironment associated with this.",
    "start": "902670",
    "end": "908656"
  },
  {
    "text": "And for each one of these, there\nmust be an environment that binds signal. ",
    "start": "908656",
    "end": "915399"
  },
  {
    "text": "And there must be a signal\nhere, therefore.  And presumably, signal's a value\nthat's either 1 or 0,",
    "start": "915400",
    "end": "922920"
  },
  {
    "text": "and signal. ",
    "start": "922920",
    "end": "928000"
  },
  {
    "text": "Now, we also have to have some\nlist of people to inform if",
    "start": "928000",
    "end": "933140"
  },
  {
    "text": "the signal here changes.  We're going to have\nto inform this.",
    "start": "933140",
    "end": "939300"
  },
  {
    "text": "So I've got that list.\nWe'll call it the Action Procedures, AP.",
    "start": "939300",
    "end": "944500"
  },
  {
    "text": "And it's presumably a list.\nBut the first thing on the list, in this case,\nis this guy.",
    "start": "944500",
    "end": "950500"
  },
  {
    "text": "And the action procedures of\nthis one happens to have some list of stuff. There might be other people\nwho are sharing A, who are",
    "start": "950500",
    "end": "957510"
  },
  {
    "text": "looking at it. So there might be other guys\non this list, like somebody over there that we\ndon't know about.",
    "start": "957510",
    "end": "963630"
  },
  {
    "text": "It's the other guy\nattached to A. And the action procedure here\nalso has to point to that, the",
    "start": "963630",
    "end": "971230"
  },
  {
    "text": "list of action procedures. And of course, that means this\none, its action procedures has",
    "start": "971230",
    "end": "977060"
  },
  {
    "text": "to point up to here. This is the things-- the people it has to inform. And this guy has some too.",
    "start": "977060",
    "end": "984280"
  },
  {
    "text": "But I don't know what they\nare because I didn't draw it in my diagram. It's the things connected\nto D.",
    "start": "984280",
    "end": "990320"
  },
  {
    "text": "Now, it's also the case that\nwhen the and-action procedure",
    "start": "990320",
    "end": "996240"
  },
  {
    "text": "is awakened, saying one of the\npeople who know that you've",
    "start": "996240",
    "end": "1001951"
  },
  {
    "text": "told--one of the people you've\ntold to wake you up if their signal changes, you have to go\nlook and ask them what's their",
    "start": "1001951",
    "end": "1008430"
  },
  {
    "text": "signal so you can do the\nand, and produce a signal for this one. ",
    "start": "1008430",
    "end": "1017089"
  },
  {
    "text": "So there has to be, for example,\ninformation here saying A1, my A1 is this guy,\nand my A2 is this guy.",
    "start": "1017090",
    "end": "1026400"
  },
  {
    "text": " And not only that, when I do my\nand, I'm going to have to",
    "start": "1026400",
    "end": "1034170"
  },
  {
    "text": "tell this guy something. So I need an output-- ",
    "start": "1034170",
    "end": "1039904"
  },
  {
    "text": "being this guy. ",
    "start": "1039904",
    "end": "1045800"
  },
  {
    "text": "And similarly, this guy's going\nto have a thing called the input that he interrogates\nto find out what the value of",
    "start": "1045800",
    "end": "1057540"
  },
  {
    "text": "the signal on the input is, when\nthe signal wakes up and says, I've changed, and sends\na message this way saying,",
    "start": "1057540",
    "end": "1062980"
  },
  {
    "text": "I've changed. This guy says, OK, what's\nyour value now? When he gets that value, then\nhe's going to have to say, OK,",
    "start": "1062980",
    "end": "1070840"
  },
  {
    "text": "output changes this guy,\nchanges this guy.",
    "start": "1070840",
    "end": "1075860"
  },
  {
    "text": " And so on.",
    "start": "1075860",
    "end": "1082481"
  },
  {
    "start": "1082000",
    "end": "1170000"
  },
  {
    "text": "And so I have to have at least\nthat much connected-ness. Now, let's go back and look, for\nexample, at the and-gate.",
    "start": "1082481",
    "end": "1090260"
  },
  {
    "text": "Here we are back\non this slide. And we can see some\nof these parts.",
    "start": "1090260",
    "end": "1096040"
  },
  {
    "text": "For any particular and-gate,\nthere is an A1, there is an A2, and the output. And those are, those are an\nenvironment that was created",
    "start": "1096040",
    "end": "1101483"
  },
  {
    "text": "at the--those produce a frame\nat the time and-gate was",
    "start": "1101483",
    "end": "1110720"
  },
  {
    "text": "called, a frame where A1, A2,\nand output are--have as their",
    "start": "1110720",
    "end": "1117200"
  },
  {
    "text": "values, they're bound to the\nwires which, they are--which were passed in.",
    "start": "1117200",
    "end": "1126240"
  },
  {
    "text": "In that environment, I\nconstructed a procedure-- this one right there.",
    "start": "1126240",
    "end": "1134590"
  },
  {
    "text": "And-action procedure was\nconstructed in that environment. That was the result of\nevaluating a lambda",
    "start": "1134590",
    "end": "1140190"
  },
  {
    "text": "expression. So it hangs onto the frame\nwhere these were defined.",
    "start": "1140190",
    "end": "1147620"
  },
  {
    "text": "Local--part of its local\nstate is that. The and-action procedure,\ntherefore, has access to A1,",
    "start": "1147620",
    "end": "1155000"
  },
  {
    "text": "A2, and output as we see here. A1, A2, and output. ",
    "start": "1155000",
    "end": "1162360"
  },
  {
    "text": "Now, we haven't looked\ninside of a wire yet. That's all that remains.",
    "start": "1162360",
    "end": "1169030"
  },
  {
    "text": "Let's look at a wire.  Like the overhead, very good.",
    "start": "1169030",
    "end": "1176160"
  },
  {
    "start": "1170000",
    "end": "1356000"
  },
  {
    "text": " Well, the wire, again,\nis a, is a somewhat complicated mess.",
    "start": "1176160",
    "end": "1183090"
  },
  {
    "text": "Ooh, wrong one. It's a big complicated\nmess, like that.",
    "start": "1183090",
    "end": "1189779"
  },
  {
    "text": "But let's look at it in detail\nand see what's going on. Well, the wire is\none of these.",
    "start": "1189780",
    "end": "1197760"
  },
  {
    "text": "And it has to have two things\nthat are part of it, that it's state.",
    "start": "1197760",
    "end": "1205009"
  },
  {
    "text": "One of them is the signal\nwe see here. In other words, when we call\nmake-wire to make a wire, then",
    "start": "1205010",
    "end": "1210670"
  },
  {
    "text": "the first thing we do is we\ncreate some variables which are the signal and the action\nprocedures for this wire.",
    "start": "1210670",
    "end": "1219270"
  },
  {
    "text": " And in that context, we define\nvarious functions--or",
    "start": "1219270",
    "end": "1226540"
  },
  {
    "text": "procedures, excuse\nme, procedures. One of them is called\nset-my-signal to a new value.",
    "start": "1226540",
    "end": "1232850"
  },
  {
    "text": "And what that does is takes\na new value in.",
    "start": "1232850",
    "end": "1237929"
  },
  {
    "text": "If that's equal to my current\nvalue of my signal, I'm done. Otherwise, I set the signal to\nthe new value and call each of",
    "start": "1237930",
    "end": "1243460"
  },
  {
    "text": "the action procedures that\nI've been, that I've been--what's the right word?-- ",
    "start": "1243460",
    "end": "1251700"
  },
  {
    "text": "introduced to. I get introduced when the\nand-gate was applied to me.",
    "start": "1251700",
    "end": "1261530"
  },
  {
    "text": " I add action procedure\nat the bottom.",
    "start": "1261530",
    "end": "1267410"
  },
  {
    "text": "Also, I have to define a way\nof accepting an action procedure-- which is what\nyou see here---",
    "start": "1267410",
    "end": "1272779"
  },
  {
    "text": "which increments my action\nprocedures using set to the",
    "start": "1272780",
    "end": "1278530"
  },
  {
    "text": "result of CONSing up a new\nprocess--a procedure, which is passed to me, on to my actions\nprocedures list. And for",
    "start": "1278530",
    "end": "1285760"
  },
  {
    "text": "technical reasons, I have to\ncall that procedure one. So I'm not going to tell you\nanything about that, that has to do with event-driven\nsimulations and getting them",
    "start": "1285760",
    "end": "1292610"
  },
  {
    "text": "started, which takes a little\nbit of thinking. And finally, I'm going to define\na thing called the",
    "start": "1292610",
    "end": "1298690"
  },
  {
    "text": "dispatcher, which is a way of\npassing a message to a wire,",
    "start": "1298690",
    "end": "1305389"
  },
  {
    "text": "which is going to be used to\nextract from it various information, like what is the\ncurrent signal value?",
    "start": "1305390",
    "end": "1313820"
  },
  {
    "text": "What is the method of\nsetting your signal? I want to get that out of it.",
    "start": "1313820",
    "end": "1320100"
  },
  {
    "text": "How do I--how do I add another\naction procedure? ",
    "start": "1320100",
    "end": "1325510"
  },
  {
    "text": "And I'm going to return\nthat dispatch, that procedure as a value. So the wire that I've\nconstructed is a message",
    "start": "1325510",
    "end": "1332610"
  },
  {
    "text": "accepting object which accepts\na message like, like what's your method of adding\naction procedures?",
    "start": "1332610",
    "end": "1339789"
  },
  {
    "text": "In fact, it'll give me a\nprocedure, which is the add action procedure, which I can\nthen apply to an action",
    "start": "1339790",
    "end": "1346020"
  },
  {
    "text": "procedure to create another\naction procedure in the wire. ",
    "start": "1346020",
    "end": "1351620"
  },
  {
    "text": "So that's a permission. So it's given me permission to\nchange your action procedures.",
    "start": "1351620",
    "end": "1357450"
  },
  {
    "start": "1356000",
    "end": "1616000"
  },
  {
    "text": "And in fact, you can\nsee that over here. Next slide.",
    "start": "1357450",
    "end": "1363278"
  },
  {
    "text": "Ah.  This is nothing very\ninteresting.",
    "start": "1363278",
    "end": "1369120"
  },
  {
    "text": "The call each of the action\nprocedures is just a CDRing down a list. And I'm\nnot going to even talk about that anymore.",
    "start": "1369120",
    "end": "1374990"
  },
  {
    "text": "We're too advanced for that. However, if I want to\nget a signal from a",
    "start": "1374990",
    "end": "1380280"
  },
  {
    "text": "wire, I ask the wire-- which is, what is the wire? The wire is the dispatch\nreturned by creating the wire.",
    "start": "1380280",
    "end": "1385860"
  },
  {
    "text": "It's a procedure. I call that dispatch on the\nmessage get-signal.",
    "start": "1385860",
    "end": "1392590"
  },
  {
    "text": "And what I should expect\nto get is a method of getting a signal. Or actually, I get the signal.",
    "start": "1392590",
    "end": "1399220"
  },
  {
    "text": "If I want to set a signal, I\nwant to change a signal, then",
    "start": "1399220",
    "end": "1405799"
  },
  {
    "text": "what I'm going to do is take a\nwire as an argument and a new value for the signal, I'm going\nto ask the wire for",
    "start": "1405800",
    "end": "1411120"
  },
  {
    "text": "permission to set its signal and\nuse that permission, which is a procedure, on\nthe new value.",
    "start": "1411120",
    "end": "1418700"
  },
  {
    "text": "And if we go back to the\noverhead here, thank you, if",
    "start": "1418700",
    "end": "1424156"
  },
  {
    "text": "we go back to the overhead here,\nwe see that the method-- if I ask for the method of\nsetting the signal, that's",
    "start": "1424156",
    "end": "1429720"
  },
  {
    "text": "over here, it's set-my-signal,\na procedure that's defined inside the wire, which if we\nlook over here is the thing",
    "start": "1429720",
    "end": "1439270"
  },
  {
    "text": "that says set my internal value\ncalled the signal, my internal variable, which is the\nsignal, to the new value,",
    "start": "1439270",
    "end": "1448640"
  },
  {
    "text": "which is passed to me as an\nargument, and then call each of the action procedures\nwaking them up. ",
    "start": "1448640",
    "end": "1456340"
  },
  {
    "text": "Very simple. Going back to that slide, we\nalso have the one last thing--",
    "start": "1456340",
    "end": "1464310"
  },
  {
    "text": "which I suppose now you can\neasily work out for yourself-- is the way you add an action.",
    "start": "1464310",
    "end": "1470100"
  },
  {
    "text": "You take a wire--a wire and\nan action procedure.",
    "start": "1470100",
    "end": "1476470"
  },
  {
    "text": "And I ask the wire for\npermission to add an action. Getting that permission, I use\nthat permission to give it an",
    "start": "1476470",
    "end": "1483210"
  },
  {
    "text": "action procedure. So that's a real object.",
    "start": "1483210",
    "end": "1488570"
  },
  {
    "text": "There's a few more details\nabout this. For example, how am I going\nto control this thing?",
    "start": "1488570",
    "end": "1498390"
  },
  {
    "text": "How do I do these delays? Let's look at that\nfor a second. ",
    "start": "1498390",
    "end": "1505275"
  },
  {
    "text": "The next one here. Let's see. We know when we looked at the\nand-gate or the not-gate that",
    "start": "1505275",
    "end": "1515450"
  },
  {
    "text": "when a signal changed on the\ninput, there was a delay. And then it was going to call\nthe procedure, which was going",
    "start": "1515450",
    "end": "1522060"
  },
  {
    "text": "to change the output.  Well, how are we going\nto do this?",
    "start": "1522060",
    "end": "1528120"
  },
  {
    "text": "We're going to make up some\nmechanism, a fairly complicated mechanism at that,\nwhich we're going to have to be very careful about.",
    "start": "1528120",
    "end": "1534720"
  },
  {
    "text": "But after a delay, we're\ngoing to do an action. A delay is a number, and an\naction is a procedure.",
    "start": "1534720",
    "end": "1540590"
  },
  {
    "text": "What that's going to be is\nthey're going to have a special structure called an\nagenda, which is a thing that",
    "start": "1540590",
    "end": "1547120"
  },
  {
    "text": "organizes time and actions. And we're going to see\nthat in a while. I don't want to get into\nthat right now.",
    "start": "1547120",
    "end": "1553070"
  },
  {
    "text": "But the agenda has a\nmoment at which--at which something happens.",
    "start": "1553070",
    "end": "1559130"
  },
  {
    "text": "We're setting up for later at\nsome moment, which is the sum of the time, which is the delay\ntime plus the current",
    "start": "1559130",
    "end": "1565400"
  },
  {
    "text": "time, which the agenda\nthinks is now. We're going to set up to do this\naction, and add that to",
    "start": "1565400",
    "end": "1571840"
  },
  {
    "text": "the agenda.  And the way this machine will\nnow run is very simple.",
    "start": "1571840",
    "end": "1578660"
  },
  {
    "text": "We have a thing called\npropagate, which is the way things run. If the agenda is empty, we're\ndone--if there's nothing more",
    "start": "1578660",
    "end": "1585289"
  },
  {
    "text": "to be done. Otherwise, we're going to take\nthe first item off the agenda,",
    "start": "1585290",
    "end": "1591690"
  },
  {
    "text": "and that's a procedure\nof no arguments. So that we're going to see\nextra parentheses here. We call that on no arguments.",
    "start": "1591690",
    "end": "1599190"
  },
  {
    "text": "That takes the action. Then we remove that first item\nfrom the agenda, and we go",
    "start": "1599190",
    "end": "1605049"
  },
  {
    "text": "around the propagation loop. So that's the overall structure\nof this thing.",
    "start": "1605050",
    "end": "1610750"
  },
  {
    "text": " Now, there's a, a few other\nthings we can look at.",
    "start": "1610750",
    "end": "1617430"
  },
  {
    "start": "1616000",
    "end": "1936000"
  },
  {
    "text": "And then we're going to\nlook into the agenda a little while from now. Now the overhead again.",
    "start": "1617430",
    "end": "1622800"
  },
  {
    "text": "Well, in order to set this thing\ngoing, I just want to show you some behavior out\nof this simulator. By the way, you may think this\nsimulator is very simple, and",
    "start": "1622800",
    "end": "1630610"
  },
  {
    "text": "probably too simple\nto be useful. The fact of the matter is that\nthis simulator has been used",
    "start": "1630610",
    "end": "1635730"
  },
  {
    "text": "to manufacture a fairly\nlarge computer. So this is a real\nlive example.",
    "start": "1635730",
    "end": "1642360"
  },
  {
    "text": "Actually, not exactly this\nsimulator, because I'll tell you the difference. The difference is that there\nwere many more different kinds",
    "start": "1642360",
    "end": "1648180"
  },
  {
    "text": "of primitives. There's not just the word\ninverter or and-gate.",
    "start": "1648180",
    "end": "1653200"
  },
  {
    "text": "There were things like\nedge-triggered, flip-flops, and latches, transparent\nlatches, and adders, and",
    "start": "1653200",
    "end": "1663779"
  },
  {
    "text": "things like that. And the difficulty with that\nis that there's pages and pages of the definitions of\nall these primitives with",
    "start": "1663780",
    "end": "1671410"
  },
  {
    "text": "numbers like LS04. And then there's many more\nparameters for them.",
    "start": "1671410",
    "end": "1676740"
  },
  {
    "text": "It's not just one delay. There's things like set\nup times and hold times and all that. But with the exception of that\npart of the complexity, the",
    "start": "1676740",
    "end": "1683990"
  },
  {
    "text": "structure of the simulator that\nwe use for building a real computer, that works\nis exactly what",
    "start": "1683990",
    "end": "1692289"
  },
  {
    "text": "you're seeing here. Well in any case, what we have\nhere is a few simple things.",
    "start": "1692290",
    "end": "1699270"
  },
  {
    "text": "Like, there's inverter delays\nbeing set up and making a new agenda. And then we can make\nsome inputs.",
    "start": "1699270",
    "end": "1706470"
  },
  {
    "text": "There's input-1, input-2,\na sum and a carry, which are wires. I'm going to put a special kind\nof object called a probe",
    "start": "1706470",
    "end": "1712559"
  },
  {
    "text": "onto, onto some of the wires,\nonto sum and onto carry.",
    "start": "1712560",
    "end": "1717810"
  },
  {
    "text": "A probe is a, can object that\nhas the property that when you change a wire it's attached to,\nit types out a message.",
    "start": "1717810",
    "end": "1726120"
  },
  {
    "text": "It's an easy thing to do. And then once we have that, of\ncourse, the way you put the probe on, the first thing it\ndoes, it says, the current",
    "start": "1726120",
    "end": "1733040"
  },
  {
    "text": "value of the sum at time 0 is\n0 because I just noticed it.",
    "start": "1733040",
    "end": "1739400"
  },
  {
    "text": "And the value of the carry\nat time 0, this is the time, is 0.",
    "start": "1739400",
    "end": "1745556"
  },
  {
    "text": "And then we go off and we\nbuild some structure. Like, we can build a structure\nhere that says you have a",
    "start": "1745556",
    "end": "1754440"
  },
  {
    "text": "half-adder on input-1, input-2,\nsum, and carry. And we're going to set the\nsignal on input-1 to 1.",
    "start": "1754440",
    "end": "1760420"
  },
  {
    "text": "We do some propagation. At time 8, which you could see\ngoing through this thing if you wanted to, the new value\nof sum became 1.",
    "start": "1760420",
    "end": "1769520"
  },
  {
    "text": "And the thing says I'm done. That wasn't very interesting. But we can send it some\nmore signals. Like, we set-signal on\ninput-2 to be one.",
    "start": "1769520",
    "end": "1776590"
  },
  {
    "text": "And at that time if we\npropagate, then it carried at 11, the carry becomes 1, and\nat 16, the sum's new",
    "start": "1776590",
    "end": "1783280"
  },
  {
    "text": "value becomes 0. And you might want to work out\nthat, if you like, about the digital circuitry.",
    "start": "1783280",
    "end": "1788990"
  },
  {
    "text": "It's true, and it works. And it's not very interesting. But that's the kind\nof behavior we get out of this thing.",
    "start": "1788990",
    "end": "1794580"
  },
  {
    "start": "1794580",
    "end": "1801830"
  },
  {
    "text": "So what I've shown you right now\nis a large-scale picture, how you, at a bigger, big\nscale, you implement an",
    "start": "1801830",
    "end": "1810360"
  },
  {
    "text": "event-driven simulation\nof some sort. And how you might organize it\nto have nice hierarchical",
    "start": "1810360",
    "end": "1816010"
  },
  {
    "text": "structure allowing you to build\nabstract boxes that you can instantiate.",
    "start": "1816010",
    "end": "1821225"
  },
  {
    "text": "But I haven't told you any of\nthe details about how this agenda and things\nlike that work. That we'll do next.",
    "start": "1821225",
    "end": "1828630"
  },
  {
    "text": "And that's going to involve\nchange and mutation of data and things like that.",
    "start": "1828630",
    "end": "1834310"
  },
  {
    "text": "Are there any questions\nnow, before I go on? ",
    "start": "1834310",
    "end": "1847160"
  },
  {
    "text": "Thank you. Let's take a break. ",
    "start": "1847160",
    "end": "1888940"
  },
  {
    "text": "Well, we've been making\na simulation.",
    "start": "1888940",
    "end": "1895059"
  },
  {
    "text": "And the simulation is an\nevent-driven simulation where the objects in the world are the\nobjects in the computer.",
    "start": "1895060",
    "end": "1903920"
  },
  {
    "text": "And the changes of state that\nare happening in the world in time are organized to be time\nin the computer, so that if",
    "start": "1903920",
    "end": "1913519"
  },
  {
    "text": "something happens after\nsomething else in the world, then we have it happen after,\nafter the corresponding events",
    "start": "1913520",
    "end": "1920910"
  },
  {
    "text": "happen in the same order\nin the computer. That's where we have\nassignments, when",
    "start": "1920910",
    "end": "1926070"
  },
  {
    "text": "we make that alignment. Right now I want to show you a\nway of organizing time, which",
    "start": "1926070",
    "end": "1931860"
  },
  {
    "text": "is an agenda or priority queue,\nit's sometimes called. We'll do some--we'll do\na little bit of just",
    "start": "1931860",
    "end": "1937990"
  },
  {
    "start": "1936000",
    "end": "2436000"
  },
  {
    "text": "understanding what are the\nthings we need to be able to do to make agendas. ",
    "start": "1937990",
    "end": "1948330"
  },
  {
    "text": "And so we're going to have--and\nso right now over here, I'm going to write down\na bunch of primitive operations for manipulating\nagendas.",
    "start": "1948330",
    "end": "1955960"
  },
  {
    "text": "I'm not going to show you the\ncode for them because they're all very simple, and you've got",
    "start": "1955960",
    "end": "1961300"
  },
  {
    "text": "listings of all that anyway. So what do we have? We have things like make-agenda\nwhich produces a",
    "start": "1961300",
    "end": "1972880"
  },
  {
    "text": "new agenda. ",
    "start": "1972880",
    "end": "1979860"
  },
  {
    "text": "We can ask--we get the\ncurrent-time of an agenda,",
    "start": "1979860",
    "end": "1990950"
  },
  {
    "text": "which gives me a\nnumber, a time. ",
    "start": "1990950",
    "end": "1996990"
  },
  {
    "text": "We can get--we can ask whether\nan agenda is empty, empty-agenda. ",
    "start": "1996990",
    "end": "2010200"
  },
  {
    "text": "And that produces either\na true or a false. ",
    "start": "2010200",
    "end": "2022590"
  },
  {
    "text": "We can add an object\nto an agenda. ",
    "start": "2022590",
    "end": "2032710"
  },
  {
    "text": "Actually, what we add to an\nagenda is an operation--an action to be done. And that takes a time, the\naction itself, and the agenda",
    "start": "2032710",
    "end": "2043560"
  },
  {
    "text": "I want to add it to.  That inserts it in\nthe appropriate",
    "start": "2043560",
    "end": "2049280"
  },
  {
    "text": "place in the agenda. I can get the first item off an\nagenda, the first thing I",
    "start": "2049280",
    "end": "2054850"
  },
  {
    "text": "have to do, which is going\nto give me an action.",
    "start": "2054850",
    "end": "2063259"
  },
  {
    "text": " And I can remove the first\nitem from an agenda.",
    "start": "2063259",
    "end": "2069540"
  },
  {
    "text": "That's what I have to be able\nto do with agendas. That is a big complicated\nmess. ",
    "start": "2069540",
    "end": "2082530"
  },
  {
    "text": "From an agenda.  Well, let's see how we can\norganize this thing as a data",
    "start": "2082530",
    "end": "2088040"
  },
  {
    "text": "structure a bit. Well, an agenda is going to be\nsome kind of list. And it's",
    "start": "2088040",
    "end": "2098720"
  },
  {
    "text": "going to be a list that\nI'm going to have to be able to modify. So we have to talk about\nmodifying of lists, because",
    "start": "2098720",
    "end": "2105820"
  },
  {
    "text": "I'm going to add things to it,\nand delete things from it, and things like that.",
    "start": "2105820",
    "end": "2111070"
  },
  {
    "text": "It's organized by time. It's probably good to keep\nit in sorted order. ",
    "start": "2111070",
    "end": "2118330"
  },
  {
    "text": "But sometimes there are lots of\nthings that happen at the same time--approximate\nsame time.",
    "start": "2118330",
    "end": "2123420"
  },
  {
    "text": "What I have to do is say, group\nthings by the time at which they're supposed\nto happen.",
    "start": "2123420",
    "end": "2129040"
  },
  {
    "text": "So I'm going to make an agenda\nas a list of segments. And so I'm going to draw you a\ndata structure for an agenda,",
    "start": "2129040",
    "end": "2136780"
  },
  {
    "text": "a perfectly reasonable one. Here's an agenda. It's a thing that begins\nwith a name.",
    "start": "2136780",
    "end": "2142870"
  },
  {
    "text": " I'm going to do it right now\nout of list structure.",
    "start": "2142870",
    "end": "2149940"
  },
  {
    "text": " It's got a header. There's a reason\nfor the header.",
    "start": "2149940",
    "end": "2155840"
  },
  {
    "text": "We're going to see\nthe reason soon.  And it will have a segment.",
    "start": "2155840",
    "end": "2163750"
  },
  {
    "text": "It will have--it will be\na list of segments.  Supposing this agenda has two\nsegments, they're the car's--",
    "start": "2163750",
    "end": "2173580"
  },
  {
    "text": "successive car's of this\nlist. Each segment is going to have a time--",
    "start": "2173580",
    "end": "2180250"
  },
  {
    "text": " say for example, 10--",
    "start": "2180250",
    "end": "2186900"
  },
  {
    "text": "that says that the things\nthat happen in this segment are at time 10.",
    "start": "2186900",
    "end": "2193320"
  },
  {
    "text": "And what I'm going to have in\nhere is another data structure which I'm not going to describe,\nwhich is a queue of",
    "start": "2193320",
    "end": "2199490"
  },
  {
    "text": "things to do at time 10. It's a queue. And we'll talk about\nthat in a second.",
    "start": "2199490",
    "end": "2205130"
  },
  {
    "text": "But abstractly, the queue is\njust a list of things to do at a particular time.",
    "start": "2205130",
    "end": "2210200"
  },
  {
    "text": "And I can add things\nto a queue. This is a queue.",
    "start": "2210200",
    "end": "2216140"
  },
  {
    "text": "There's a time, there's\na segment. ",
    "start": "2216140",
    "end": "2222889"
  },
  {
    "text": "Now, I may have another segment\nin this agenda. ",
    "start": "2222889",
    "end": "2228940"
  },
  {
    "text": "Supposing this is stuff that\nhappens at time 30. It has, of course, another\nqueue of things that are",
    "start": "2228940",
    "end": "2238020"
  },
  {
    "text": "queued up to be done\nat time 30.",
    "start": "2238020",
    "end": "2243210"
  },
  {
    "text": "Well, there are various\nthings I have to be able to do to an agenda. Supposing I want to add to an\nagenda another thing to be",
    "start": "2243210",
    "end": "2250410"
  },
  {
    "text": "done at time 10. Well, that's not very hard. I'm going to walk down\nhere, looking for the",
    "start": "2250410",
    "end": "2257480"
  },
  {
    "text": "segment of time 10. It is possible that there is\nno segment of time 10.",
    "start": "2257480",
    "end": "2262930"
  },
  {
    "text": "We'll cover that case\nin a second. But if I find a segment of time\n10, then if I want to add",
    "start": "2262930",
    "end": "2268589"
  },
  {
    "text": "another thing to be done\nat time 10, I just increase that queue--",
    "start": "2268590",
    "end": "2273860"
  },
  {
    "text": "\"just increase\" isn't such\nan obvious idea. But I increase the things\nto be done at that time.",
    "start": "2273860",
    "end": "2281430"
  },
  {
    "text": "Now, supposing I want to\nadd something to be done at time 20. There is no segment\nfor time 20.",
    "start": "2281430",
    "end": "2288680"
  },
  {
    "text": "I'm going to have to create\na new segment. I want my time 20 segment\nto exist between",
    "start": "2288680",
    "end": "2293960"
  },
  {
    "text": "time 10 and time 30. Well, that takes\na little work.",
    "start": "2293960",
    "end": "2300170"
  },
  {
    "text": "I'm going to have\nto do a CONS.  I'm going to have to make a\nnew element of the agenda",
    "start": "2300170",
    "end": "2308690"
  },
  {
    "text": "list--list of segments.  I'm going to have to change.",
    "start": "2308690",
    "end": "2315400"
  },
  {
    "text": "Here's change. I'm going to have to change\nthe CDR of the CDR of the",
    "start": "2315400",
    "end": "2322290"
  },
  {
    "text": "agenda to point that a new CONS\nof the new segment and",
    "start": "2322290",
    "end": "2330620"
  },
  {
    "text": "the CDR of the CDR of the CDR of\nthe agenda, the CD-D-D-DR.",
    "start": "2330620",
    "end": "2336657"
  },
  {
    "text": "And this is going to have a\nnew segment now of time 20",
    "start": "2336657",
    "end": "2342470"
  },
  {
    "text": "with its own queue, which now\nhas one element in it. ",
    "start": "2342470",
    "end": "2350730"
  },
  {
    "text": "If I wanted to add something at\nthe end, I'm going to have to replace the CDR of this, of\nthis list with something.",
    "start": "2350730",
    "end": "2360770"
  },
  {
    "text": "We're going to have to change\nthat piece of data structure. So I'm going to need new\nprimitives for doing this.",
    "start": "2360770",
    "end": "2367210"
  },
  {
    "text": "But I'm just showing you\nwhy I need them. And finally, if I wanted to add\na thing to be done at time",
    "start": "2367210",
    "end": "2373390"
  },
  {
    "text": "5, I'm going to have to change\nthis one, because I'm going to",
    "start": "2373390",
    "end": "2381240"
  },
  {
    "text": "have to add it in over here,\nwhich is why I planned ahead and had a header cell,\nwhich has a place.",
    "start": "2381240",
    "end": "2389400"
  },
  {
    "text": "If I'm going to change things,\nI have to have places for the change. I have to have a place\nto make the change.",
    "start": "2389400",
    "end": "2398599"
  },
  {
    "text": "If I remove things from the\nagenda, that's not so hard. Removing them from the beginning\nis pretty easy,",
    "start": "2398600",
    "end": "2404990"
  },
  {
    "text": "which is the only case I have.\nI can go looking for the first, the first segment.",
    "start": "2404990",
    "end": "2411220"
  },
  {
    "text": "I see if it has a\nnon-empty queue. If it has a non-empty queue,\nwell, I'm going to delete one",
    "start": "2411220",
    "end": "2417610"
  },
  {
    "text": "element from the queue,\nlike that. If the queue ever becomes empty,\nthen I have to delete",
    "start": "2417610",
    "end": "2423460"
  },
  {
    "text": "the whole segment. And then this, this changes\nto point to here. So it's quite a complicated data\nstructure manipulation",
    "start": "2423460",
    "end": "2430540"
  },
  {
    "text": "going on, the details of which\nare not really very exciting.",
    "start": "2430540",
    "end": "2436440"
  },
  {
    "start": "2436000",
    "end": "2676000"
  },
  {
    "text": "Now, let's talk about queues. They're similar. Because each of these agendas\nhas a queue in it.",
    "start": "2436440",
    "end": "2444339"
  },
  {
    "text": "What's a queue?  A queue is going to have\nthe following primitive",
    "start": "2444340",
    "end": "2451110"
  },
  {
    "text": "operations. To make a queue, this gives\nme a new queue.",
    "start": "2451110",
    "end": "2462170"
  },
  {
    "start": "2462170",
    "end": "2467274"
  },
  {
    "text": "I'm going to have to be\nable to insert into",
    "start": "2467274",
    "end": "2472609"
  },
  {
    "text": "a queue a new item. ",
    "start": "2472610",
    "end": "2484510"
  },
  {
    "text": "I'm going to have to be able\nto delete from a queue the first item in the queue. ",
    "start": "2484510",
    "end": "2499988"
  },
  {
    "text": "And I want to be able to get the\nfirst thing in the queue",
    "start": "2499988",
    "end": "2511320"
  },
  {
    "text": "from some queue. I also have to be able to test\nwhether a queue is empty. ",
    "start": "2511320",
    "end": "2527109"
  },
  {
    "text": "And when you invent things like\nthis, I want you to be very careful to use the kinds\nof conventions I use for",
    "start": "2527110",
    "end": "2533220"
  },
  {
    "text": "naming things. Notice that I'm careful to say\nthese change something and",
    "start": "2533220",
    "end": "2538450"
  },
  {
    "text": "that tests it. And presumably, I did the\nsame thing over here.",
    "start": "2538450",
    "end": "2544335"
  },
  {
    "text": "OK, and there should be an\nempty test over here. OK, well, how would\nI make a queue?",
    "start": "2544335",
    "end": "2551720"
  },
  {
    "text": "A queue wants to be something\nI can add to at the end of, and pick up the thing\nat the beginning of.",
    "start": "2551720",
    "end": "2557839"
  },
  {
    "text": "I should be able to delete\nfrom the beginning and add to the end. Well, I'm going to show\nyou a very simple structure for that.",
    "start": "2557840",
    "end": "2563740"
  },
  {
    "text": "We can make this out\nof CONSes as well. Here's a queue.",
    "start": "2563740",
    "end": "2569910"
  },
  {
    "text": "It has--it has a queue header,\nwhich contains two parts--",
    "start": "2569910",
    "end": "2575309"
  },
  {
    "text": "a front pointer and\na rear pointer. ",
    "start": "2575310",
    "end": "2582930"
  },
  {
    "text": "And here I have a queue\nwith two items in it.",
    "start": "2582930",
    "end": "2589000"
  },
  {
    "text": "The first item, I don't know,\nit's perhaps a 1. And the second item, I don't\nknow, let's give it a 2.",
    "start": "2589000",
    "end": "2596530"
  },
  {
    "text": " The reason why I want two\npointers in here, a front",
    "start": "2596530",
    "end": "2604549"
  },
  {
    "text": "pointer and a rear pointer,\nis so I can add to the end without having to chase down\nfrom the beginning.",
    "start": "2604550",
    "end": "2611850"
  },
  {
    "text": "So for example, if I wanted to\nadd one more item to this queue, if I want to add on\nanother item to be worried",
    "start": "2611850",
    "end": "2620380"
  },
  {
    "text": "about later, all I have to do is\nmake a CONS, which contains that item, say a 3.",
    "start": "2620380",
    "end": "2627530"
  },
  {
    "text": "That's for inserting\n3 into the queue. Then I have to change this\npointer here to here.",
    "start": "2627530",
    "end": "2640100"
  },
  {
    "text": "And I have to change this one\nto point to the new rear. ",
    "start": "2640100",
    "end": "2649120"
  },
  {
    "text": "If I wish to take the first\nelement of the queue, the first item, I just go chasing\ndown the front pointer until I",
    "start": "2649120",
    "end": "2655130"
  },
  {
    "text": "find the first one\nand pick it up. If I wish to delete the first\nitem from the queue,",
    "start": "2655130",
    "end": "2662559"
  },
  {
    "text": "delete-queue, all I do\nis move the front pointer along this way. The new front of the\nqueue is now this.",
    "start": "2662560",
    "end": "2671700"
  },
  {
    "text": "So queues are very simple too. So what you see now is that I\nneed a certain number of new",
    "start": "2671700",
    "end": "2679690"
  },
  {
    "start": "2676000",
    "end": "2797000"
  },
  {
    "text": "primitive operations. And I'm going to give\nthem some names. And then we're going to look\ninto how they work, and how",
    "start": "2679690",
    "end": "2685310"
  },
  {
    "text": "they're used. We have set the CAR of some\npair, or a thing produced by",
    "start": "2685310",
    "end": "2696970"
  },
  {
    "text": "CONSing, to a new value. ",
    "start": "2696970",
    "end": "2702369"
  },
  {
    "text": "And set the CDR of a pair\nto a new value.",
    "start": "2702370",
    "end": "2709920"
  },
  {
    "text": " And then we're going to look\ninto how they work.",
    "start": "2709920",
    "end": "2716030"
  },
  {
    "text": "I needed setting CAR over\nhere to delete the first element of the queue. This is the CAR, and\nI had to set it.",
    "start": "2716030",
    "end": "2723470"
  },
  {
    "text": "I had to be able to set the\nCDR to be able to move the rear pointer, or to be able to\nincrement the queue here.",
    "start": "2723470",
    "end": "2730160"
  },
  {
    "text": "All of the operations I did were\nmade out of those that I just showed you on the, on\nthe last blackboard.",
    "start": "2730160",
    "end": "2735515"
  },
  {
    "text": " Good. Let's pause the time, and take\na little break then. ",
    "start": "2735515",
    "end": "2798346"
  },
  {
    "start": "2797000",
    "end": "2936000"
  },
  {
    "text": "When we originally introduced\npairs made out of CONS, made by CONS, we only said a few\naxioms about them, which were",
    "start": "2798346",
    "end": "2808640"
  },
  {
    "text": "of the form-- what were they-- for all X and Y, the CAR of the\nCONS of X and Y is X and",
    "start": "2808640",
    "end": "2826040"
  },
  {
    "text": "the CDR of the CONS of X and Y\nis Y. Now, these say nothing",
    "start": "2826040",
    "end": "2835650"
  },
  {
    "text": "about whether a CONS has an\nidentity like a person.",
    "start": "2835650",
    "end": "2841849"
  },
  {
    "text": "In fact, all they say is\nsomething sort of abstract, that a CONS is the parts\nit's made out of.",
    "start": "2841850",
    "end": "2849740"
  },
  {
    "text": "And of course, two things are\nmade out of the same parts, they're the same, at least\nfrom the point of view of",
    "start": "2849740",
    "end": "2854990"
  },
  {
    "text": "these axioms. But by introducing\nassignment-- in fact, mutable data is a kind\nof assignment, we have a",
    "start": "2854990",
    "end": "2863359"
  },
  {
    "text": "set CAR and a set CDR-- by introducing those, these\naxioms no longer tell the whole story.",
    "start": "2863360",
    "end": "2869830"
  },
  {
    "text": "And they're still true if\nwritten exactly like this. But they don't tell\nthe whole story.",
    "start": "2869830",
    "end": "2876070"
  },
  {
    "text": "Because if I'm going to set a\nparticular CAR in a particular",
    "start": "2876070",
    "end": "2881150"
  },
  {
    "text": "CONS, the questions are, well,\nis that setting all CARs and all CONSes of the same\ntwo things or not?",
    "start": "2881150",
    "end": "2890090"
  },
  {
    "text": "If I--if we use CONSes to make\nup things like rational numbers, or things like 3 over\n4, supposing I had two",
    "start": "2890090",
    "end": "2899540"
  },
  {
    "text": "three-fourths. Are they the same one-- or are they different?",
    "start": "2899540",
    "end": "2905340"
  },
  {
    "text": "Well, in the case of numbers,\nit doesn't matter. Because there's no meaning\nto changing the denominator of a number.",
    "start": "2905340",
    "end": "2913020"
  },
  {
    "text": "What you could do is make a\nnumber which has a different denominator. But the concept of changing a\nnumber which has to have a",
    "start": "2913020",
    "end": "2918980"
  },
  {
    "text": "different denominator is sort\nof a very weird, and sort of not supported by what you\nthink of as mathematics.",
    "start": "2918980",
    "end": "2924770"
  },
  {
    "text": "However, when these CONSes\nrepresent things in the physical world, then changing\nsomething like the CAR is like",
    "start": "2924770",
    "end": "2930940"
  },
  {
    "text": "removing a piece of\nthe fingernail. And so CONSes have\nan identity.",
    "start": "2930940",
    "end": "2937770"
  },
  {
    "start": "2936000",
    "end": "3043000"
  },
  {
    "text": "Let me show you what I mean\nabout identity, first of all. Let's do some little\nexample here.",
    "start": "2937770",
    "end": "2944320"
  },
  {
    "text": "Supposing I define A to\nthe CONS of 1 and 2.",
    "start": "2944320",
    "end": "2955200"
  },
  {
    "text": " Well, what that means, first of\nall, is that somewhere in",
    "start": "2955200",
    "end": "2962510"
  },
  {
    "text": "some environment I've made a\nsymbol A to have a value which",
    "start": "2962510",
    "end": "2967590"
  },
  {
    "text": "is a pair consisting of pointers\nto a 1 and a pointer",
    "start": "2967590",
    "end": "2973300"
  },
  {
    "text": "to a 2, just like that. Now, supposing I also say define\nB to be the CONS--",
    "start": "2973300",
    "end": "2987220"
  },
  {
    "start": "2987220",
    "end": "2993320"
  },
  {
    "text": "it doesn't matter, but I like\nit better, it's prettier-- of A and A.",
    "start": "2993320",
    "end": "3003970"
  },
  {
    "text": "Well, first of all, I'm using\nthe name A twice. At this moment, I'm\ngoing to think of",
    "start": "3003970",
    "end": "3009100"
  },
  {
    "text": "CONSes as having identity. This is the same one. And so what that means is I make\nanother pair, which I'm",
    "start": "3009100",
    "end": "3019200"
  },
  {
    "text": "going to call B. And it contains\ntwo pointers to A. At",
    "start": "3019200",
    "end": "3029119"
  },
  {
    "text": "this point, I have three\nnames for this object. A is its name.",
    "start": "3029120",
    "end": "3034790"
  },
  {
    "text": "The CAR of B is its name. And the CDR of B is its name. It has several aliases,\nthey're called.",
    "start": "3034790",
    "end": "3041150"
  },
  {
    "text": " Now, supposing I do something\nlike set-the-CAR, the CAR of",
    "start": "3041150",
    "end": "3061859"
  },
  {
    "text": "the CAR of B to 3.",
    "start": "3061860",
    "end": "3067880"
  },
  {
    "text": " What that means is I find the\nCAR of B, that's this.",
    "start": "3067880",
    "end": "3077830"
  },
  {
    "text": "I set the CAR of that to\nbe 3, changing this. ",
    "start": "3077830",
    "end": "3084760"
  },
  {
    "text": "I've changed A. If I were\nto ask what's the",
    "start": "3084760",
    "end": "3089940"
  },
  {
    "text": "CAR of A--of A now?",
    "start": "3089940",
    "end": "3095339"
  },
  {
    "text": "I would get out 3, even though\nhere we see that A was the",
    "start": "3095340",
    "end": "3102250"
  },
  {
    "text": "CONS of 1 and 2. I caused A to change\nby changing B.",
    "start": "3102250",
    "end": "3108400"
  },
  {
    "text": "There is sharing here. That's sometimes what we want.",
    "start": "3108400",
    "end": "3114240"
  },
  {
    "text": "Surely in the queues and things\nlike that, that's exactly what we defined\nour--organized our data",
    "start": "3114240",
    "end": "3119559"
  },
  {
    "text": "structures to facilitate-- sharing. But inadvertent sharing,\nunanticipated interactions",
    "start": "3119560",
    "end": "3128950"
  },
  {
    "text": "between objects, is the source\nof most of the bugs that occur in complicated programs. So by\nintroducing this possibility",
    "start": "3128950",
    "end": "3137820"
  },
  {
    "text": "of things having identity and\nsharing and having multiple names for the same thing,\nwe get a lot of power.",
    "start": "3137820",
    "end": "3145190"
  },
  {
    "text": "But we're going to pay\nfor it with lots of complexity and bugs. ",
    "start": "3145190",
    "end": "3152190"
  },
  {
    "start": "3151000",
    "end": "3253000"
  },
  {
    "text": "So also, for example, if I just\nlooked at this just to drive that home, the CADR of\nB, which has nothing to do",
    "start": "3152190",
    "end": "3163369"
  },
  {
    "text": "with even the CAR of\nB, apparently. The CADR of B, what's that?",
    "start": "3163370",
    "end": "3169350"
  },
  {
    "text": "Take that CDR of B and now\ntake the CAR of that. Oh, that's 3 also.",
    "start": "3169350",
    "end": "3176480"
  },
  {
    "text": "So I can have non-local\ninteractions by sharing. And I have to be very\ncareful of that.",
    "start": "3176480",
    "end": "3182480"
  },
  {
    "text": " Well, so far, of course, it\nseems I've introduced several",
    "start": "3182480",
    "end": "3190529"
  },
  {
    "text": "different assignment\noperators-- set, set CAR, set CDR. Well,\nmaybe I should just get rid of",
    "start": "3190530",
    "end": "3199480"
  },
  {
    "text": "set CAR and set CDR. Maybe\nthey're not worthwhile. Well, the answer is that once\nyou let the camel's nose into",
    "start": "3199480",
    "end": "3205680"
  },
  {
    "text": "the tent, the rest\nof him follows.  All I have to have is set, and\nI can make all of the--all of",
    "start": "3205680",
    "end": "3214599"
  },
  {
    "text": "the bad things that\ncan happen.  Let's play with that\na little bit.",
    "start": "3214600",
    "end": "3220690"
  },
  {
    "text": "A couple of days ago, when we\nintroduced compound data, you saw Hal show you a definition\nof CONS in terms",
    "start": "3220690",
    "end": "3229980"
  },
  {
    "text": "of a message acceptor. I'm going to show you even\na more horrible thing, a",
    "start": "3229980",
    "end": "3237280"
  },
  {
    "text": "definition of CONS in terms of\nnothing but air, hot air.",
    "start": "3237280",
    "end": "3244440"
  },
  {
    "text": "What is the definition of CONS,\nof the old functional kind, in terms of purely\nlambdic expressions,",
    "start": "3244440",
    "end": "3253329"
  },
  {
    "text": "procedures?  Because I'm going to then modify\nthis definition to get",
    "start": "3253330",
    "end": "3260630"
  },
  {
    "text": "assignment to be only one kind\nof assignment, to get rid of the set CAR and set CDR\nin terms of set.",
    "start": "3260630",
    "end": "3268580"
  },
  {
    "text": "So what if I define CONS of X\nand Y to be a procedure of one",
    "start": "3268580",
    "end": "3281020"
  },
  {
    "text": "argument called a message\nM, which calls that message on X and Y?",
    "start": "3281020",
    "end": "3286320"
  },
  {
    "text": " This [? idea ?] was invented by\nAlonzo Church, who was the",
    "start": "3286320",
    "end": "3294080"
  },
  {
    "text": "greatest programmer of the\n20th century, although he never saw a computer. It was done in the 1930s.",
    "start": "3294080",
    "end": "3299130"
  },
  {
    "text": "He was a logician, I suppose\nat Princeton at the time. ",
    "start": "3299130",
    "end": "3308660"
  },
  {
    "text": "Define CAR of X to be the result\nof applying X to that",
    "start": "3308660",
    "end": "3315690"
  },
  {
    "text": "procedure of two arguments, A\nand D, which selects A. I will",
    "start": "3315690",
    "end": "3324000"
  },
  {
    "text": "define CDR of X to be that\nprocedure, to be the result of",
    "start": "3324000",
    "end": "3336410"
  },
  {
    "text": "applying X to that procedure of\nA and D, which selects D.",
    "start": "3336410",
    "end": "3346670"
  },
  {
    "text": "Now, you may not recognize this\nas CAR, CDR, and CONS. But I'm going to demonstrate to\nyou that it satisfies the",
    "start": "3346670",
    "end": "3352690"
  },
  {
    "text": "original axioms, just once. And then we're going to do\nsome playing of games.",
    "start": "3352690",
    "end": "3358290"
  },
  {
    "text": "Consider the problem CAR of\nCONS of, say, 35 and 47.",
    "start": "3358290",
    "end": "3369695"
  },
  {
    "text": "Well, what is that? It is the result of taking car\nof the result of substituting 35 and 47 for X and Y\nin the body of this.",
    "start": "3369695",
    "end": "3379710"
  },
  {
    "text": "Well, that's easy enough. That's CAR of the result of\nsubstituting into lambda of M,",
    "start": "3379710",
    "end": "3387780"
  },
  {
    "text": "M of 35 and 47.",
    "start": "3387780",
    "end": "3395750"
  },
  {
    "text": "Well, what this is, is the\nresult of substituting this object for X in the\nbody of that.",
    "start": "3395750",
    "end": "3402829"
  },
  {
    "text": "So that's just lambda of M--",
    "start": "3402830",
    "end": "3408930"
  },
  {
    "text": "that's substituted, because\nthis object is being substituted for X, which is\nthe beginning of a list,",
    "start": "3408930",
    "end": "3414980"
  },
  {
    "text": "lambda of M-- M of 35 and 47, applied to that\nprocedure of A and D,",
    "start": "3414980",
    "end": "3427570"
  },
  {
    "text": "which gives me A. Well, that's\nthe result of substituting this for M here.",
    "start": "3427570",
    "end": "3435840"
  },
  {
    "text": "So that's the same thing\nas lambda of A, D, A,",
    "start": "3435840",
    "end": "3442320"
  },
  {
    "text": "applied to 35 and 47. Oh, well that's 35.",
    "start": "3442320",
    "end": "3447559"
  },
  {
    "text": "That's substituting 35 for A\nand for 47 for D in A. So I",
    "start": "3447560",
    "end": "3456000"
  },
  {
    "text": "don't need any data at all,\nnot even numbers. This is Alonso Church's hack.",
    "start": "3456000",
    "end": "3462640"
  },
  {
    "start": "3462640",
    "end": "3472420"
  },
  {
    "text": "Well, now we're going to do\nsomething nasty to him. Being a logician, he\nwouldn't like this.",
    "start": "3472420",
    "end": "3478860"
  },
  {
    "text": "But as programmers, let's\nlook at the overhead. And here we go.",
    "start": "3478860",
    "end": "3485390"
  },
  {
    "text": "I'm going to change the\ndefinition of CONS. It's almost the same as Alonzo\nChurch's, but not quite.",
    "start": "3485390",
    "end": "3494520"
  },
  {
    "text": "What do we have here? The CONS of two arguments, X\nand Y, is going to be that",
    "start": "3494520",
    "end": "3500880"
  },
  {
    "text": "procedure of one argument M,\nwhich supplies M to X and Y as before, but also to two\npermissions, the permission to",
    "start": "3500880",
    "end": "3510900"
  },
  {
    "text": "set X to N and the permission\nto set Y to N, given that I have an N.",
    "start": "3510900",
    "end": "3520940"
  },
  {
    "text": "So besides the things that\nI had here in Church's definition, what I have is\nthat the thing that CONS",
    "start": "3520940",
    "end": "3530990"
  },
  {
    "text": "returns will apply its argument\nto not just the values of the X and Y that the\nCONS is made of, but also",
    "start": "3530990",
    "end": "3540210"
  },
  {
    "text": "permissions to set X and\nY to new values. ",
    "start": "3540210",
    "end": "3546540"
  },
  {
    "text": "Now, of course, just\nas before, CAR is exactly the same.",
    "start": "3546540",
    "end": "3551690"
  },
  {
    "text": "The CAR of X is nothing more\nthan applying X, as in Church's definition, to a\nprocedure, in this case, of",
    "start": "3551690",
    "end": "3558109"
  },
  {
    "text": "four arguments, which selects\nout the first one. And just as we did before, that\nwill be the value of X",
    "start": "3558110",
    "end": "3568750"
  },
  {
    "text": "that was contained in the\nprocedure which is the result of evaluating this lambda\nexpression in the environment",
    "start": "3568750",
    "end": "3576260"
  },
  {
    "text": "where X and Y are defined\nover here. ",
    "start": "3576260",
    "end": "3581940"
  },
  {
    "text": "That's the value of CONS. Now, however, the\nexciting part.",
    "start": "3581940",
    "end": "3587730"
  },
  {
    "text": "CDR, of course, is the same. The exciting part, set CAR and\nset CDR. Well, they're nothing",
    "start": "3587730",
    "end": "3594270"
  },
  {
    "text": "very complicated anymore. Set CAR of a CONS X to a new\nvalue Y is nothing more than",
    "start": "3594270",
    "end": "3602700"
  },
  {
    "text": "applying that CONS, which is\nthe procedure of four--the procedure of one argument which\napplies its argument to",
    "start": "3602700",
    "end": "3609160"
  },
  {
    "text": "four things, to a procedure\nwhich is of four arguments--",
    "start": "3609160",
    "end": "3615950"
  },
  {
    "text": "the value of X, the value of\nY, permission to set X, the permission to set Y--",
    "start": "3615950",
    "end": "3621390"
  },
  {
    "text": "and using it--using that\npermission to set X to the new value. ",
    "start": "3621390",
    "end": "3631650"
  },
  {
    "text": "And similarly, set-cdr\nis the same thing.  So what you've just seen is that\nI didn't introduce any",
    "start": "3631650",
    "end": "3638470"
  },
  {
    "text": "new primitives at all. Whether or not I want to\nimplement it this way is a matter of engineering.",
    "start": "3638470",
    "end": "3645340"
  },
  {
    "text": "And the answer is of course I\ndon't implement it this way for reasons that have to\ndo with engineering.",
    "start": "3645340",
    "end": "3651680"
  },
  {
    "text": "However in principle, logically,\nonce I introduced one assignment operator,\nI've assigned--I've",
    "start": "3651680",
    "end": "3657515"
  },
  {
    "text": "introduced them all. ",
    "start": "3657515",
    "end": "3665420"
  },
  {
    "text": "Are there any questions?  Yes, David.",
    "start": "3665420",
    "end": "3672040"
  },
  {
    "text": "AUDIENCE: I can follow you up\nuntil you get--I can follow all of that. But when we bring in the\npermissions, defining CONS in",
    "start": "3672040",
    "end": "3679760"
  },
  {
    "text": "terms of the lambda N, I don't\nfollow where N gets passed. PROFESSOR: Oh, I'm sorry.",
    "start": "3679760",
    "end": "3685099"
  },
  {
    "text": "I'll show you. Let's follow it. Of course, we could do\nit on the blackboard. It's not so hard.",
    "start": "3685100",
    "end": "3690170"
  },
  {
    "text": "But it's also easy here. Supposing I wish to set-cdr of\nX to Y. See that right there.",
    "start": "3690170",
    "end": "3698520"
  },
  {
    "text": "set-cdr of X to Y. X is\npresumably a CONS, a thing",
    "start": "3698520",
    "end": "3703680"
  },
  {
    "text": "resulting from evaluating\nCONS. Therefore X comes from a place\nover here, that that X is of",
    "start": "3703680",
    "end": "3714029"
  },
  {
    "text": "the result of evaluating\nthis lambda expression. Right?",
    "start": "3714030",
    "end": "3719380"
  },
  {
    "text": "That when I evaluated that\nlambda expression, I evaluated",
    "start": "3719380",
    "end": "3724474"
  },
  {
    "text": "it in an environment\nwhere the arguments to CONS were defined. ",
    "start": "3724475",
    "end": "3731750"
  },
  {
    "text": "That means that as free\nvariables in this lambda expression, there is the--there\nare in the frame,",
    "start": "3731750",
    "end": "3738670"
  },
  {
    "text": "which is the parent frame of\nthis lambda expression, the",
    "start": "3738670",
    "end": "3743859"
  },
  {
    "text": "procedure resulting from this\nlambda expression, X and Y have places.",
    "start": "3743860",
    "end": "3749250"
  },
  {
    "text": "And it's possible to set them. I set them to an N, which\nis the argument of the",
    "start": "3749250",
    "end": "3755380"
  },
  {
    "text": "permission. The permission is a procedure\nwhich is passed to M, which is",
    "start": "3755380",
    "end": "3763650"
  },
  {
    "text": "the argument that the CONS\nobject gets passed. Now, let's go back here in the\nset-cdr The CONS object, which",
    "start": "3763650",
    "end": "3774020"
  },
  {
    "text": "is the first argument\nof set-cdr gets passed an argument. ",
    "start": "3774020",
    "end": "3780260"
  },
  {
    "text": "That--there's a procedure of\nfour things, indeed, because that's the same thing as this M\nover here, which is applied",
    "start": "3780260",
    "end": "3785780"
  },
  {
    "text": "to four objects. The object over here, SD, is,\nin fact, this permission.",
    "start": "3785780",
    "end": "3792970"
  },
  {
    "text": " When I use SD, I apply\nit to Y, right there.",
    "start": "3792970",
    "end": "3799930"
  },
  {
    "text": " So that comes from this.",
    "start": "3799930",
    "end": "3805740"
  },
  {
    "text": "AUDIENCE: So what do you-- PROFESSOR: So to finish that,\nthe N that was here is the Y",
    "start": "3805740",
    "end": "3811420"
  },
  {
    "text": "which is here. How's that? AUDIENCE: Right, OK. Now, when you do a set-cdr,\nX is the value the",
    "start": "3811420",
    "end": "3820240"
  },
  {
    "text": "CDR is going to become. PROFESSOR: The X over here. I'm sorry, that's not true.",
    "start": "3820240",
    "end": "3826200"
  },
  {
    "text": "The X is--set-cdr has\ntwo arguments-- The CONS I'm changing and the\nvalue I'm changing it to.",
    "start": "3826200",
    "end": "3836150"
  },
  {
    "text": "So you have them backwards,\nthat's all. ",
    "start": "3836150",
    "end": "3841750"
  },
  {
    "text": "Are there any other questions? ",
    "start": "3841750",
    "end": "3847880"
  },
  {
    "text": "Well, thank you. It's time for lunch. ",
    "start": "3847880",
    "end": "3868970"
  }
]