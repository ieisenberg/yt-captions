[
  {
    "text": " PROFESSOR: Continue today. We're still in the\nspirit of origami.",
    "start": "0",
    "end": "6930"
  },
  {
    "text": "And we're going to do some\norigami design and foldability again.",
    "start": "6930",
    "end": "12830"
  },
  {
    "text": "There are two main topics\nhere on the design side we're going to talk about--\nuniversal hinge patterns, which",
    "start": "12830",
    "end": "19930"
  },
  {
    "text": "are the things that make\nunderlying this robot, which I showed in lecture one.",
    "start": "19930",
    "end": "25050"
  },
  {
    "text": "You may recall. So it's called a\nbox pleat pattern. It's a square grid with\nalternating diagonal creases.",
    "start": "25050",
    "end": "32418"
  },
  {
    "text": "And the idea with\nthe robot is you're constrained to only-- you have\nto build the creases ahead",
    "start": "32419",
    "end": "37451"
  },
  {
    "text": "of time. You can't say, you\ncan't build one sheet that can fold\nanywhere at anytime. You want to build\na sheet that can",
    "start": "37451",
    "end": "43500"
  },
  {
    "text": "fold at any of the crease\nlines, at the built crease lines whenever you want.",
    "start": "43500",
    "end": "49870"
  },
  {
    "text": "And so whereas with\nsomething like Origamizer, every design has a completely\ndifferent crease pattern",
    "start": "49870",
    "end": "57230"
  },
  {
    "text": "and it's difficult to\ncontrol that, here we wanted to make one. It's not exactly\na crease pattern,",
    "start": "57230",
    "end": "62770"
  },
  {
    "text": "because you're not\nusing all the creases. It's what we call\na hinge pattern, all the possible places\nyou could fold that thing",
    "start": "62770",
    "end": "68710"
  },
  {
    "text": "and make lots of\ndifferent shapes from that one hinge pattern. So that's the first\npart of the lecture.",
    "start": "68710",
    "end": "76714"
  },
  {
    "text": "And the second part of the\nlecture will be about hardness. And we'll see, I think,\nfour different kinds of origami problems\nwhich are all NP-hard.",
    "start": "76714",
    "end": "84460"
  },
  {
    "text": "And I'll tell you\nwhat NP-hard means. And we'll prove all that. So there are lots\nof problems that are computationally intractable.",
    "start": "84460",
    "end": "91429"
  },
  {
    "text": "And we're going to cluster them\nall together into one lecture. Because it's kind of fun\nto see them together.",
    "start": "91430",
    "end": "98540"
  },
  {
    "text": "Mostly we've been talking\nabout positive results so far. All right, so let's do\nuniversal hinge patterns.",
    "start": "98540",
    "end": "104920"
  },
  {
    "start": "104920",
    "end": "115766"
  },
  {
    "text": "This is pretty recent work. It just appeared at the\nbig origami math conference this summer. And its work by Nadia, and me,\nand Marty, and Aviv Ovadya,",
    "start": "115766",
    "end": "126370"
  },
  {
    "text": "who I think actually came out\nof this class three years ago, if I recall. It just took us awhile\nto write it all up.",
    "start": "126370",
    "end": "135530"
  },
  {
    "text": "And it's why the robot\nhas a box pleat pattern. ",
    "start": "135530",
    "end": "142140"
  },
  {
    "text": "So the idea is to require that\nthe crease pattern of whatever",
    "start": "142140",
    "end": "147650"
  },
  {
    "text": "you want to fold must be a\nsubset of some fixed hinge",
    "start": "147650",
    "end": "156939"
  },
  {
    "text": "pattern.  And the goal is to make one\nhinge pattern to rule them",
    "start": "156940",
    "end": "164310"
  },
  {
    "text": "all, one hinge pattern\nthat you can make anything. I mean you can't make literally\nanything, I don't think.",
    "start": "164310",
    "end": "170179"
  },
  {
    "text": "I was wondering\nabout this yesterday. But we're not going to\ntry to make everything out",
    "start": "170179",
    "end": "175840"
  },
  {
    "text": "of one hinge pattern. But we want to make\nlots of different things somehow from one hinge pattern.",
    "start": "175840",
    "end": "181590"
  },
  {
    "text": "And here's the theorem\nthat formalizes this idea of lots of things.",
    "start": "181590",
    "end": "186710"
  },
  {
    "text": " We're going to take the box\npleat pattern from an n by n.",
    "start": "186710",
    "end": "192360"
  },
  {
    "text": "Grid so that's you take\na square grid, n by n.",
    "start": "192360",
    "end": "202220"
  },
  {
    "text": "And then you fill in\nalternating diagonals. ",
    "start": "202220",
    "end": "216500"
  },
  {
    "text": "Then that thing\nthat hinge pattern can make by using a\nsubset of those creases,",
    "start": "216500",
    "end": "223350"
  },
  {
    "text": "you can make any\npolycube of n cubes.",
    "start": "223350",
    "end": "231520"
  },
  {
    "start": "231520",
    "end": "236760"
  },
  {
    "text": "I'm sorry, order n cubes. ",
    "start": "236760",
    "end": "243050"
  },
  {
    "text": "And what else? You can even do it seamless. ",
    "start": "243050",
    "end": "252420"
  },
  {
    "text": "So a polycube made of n cubes\nis just you take n cubes. And you start\ngluing them together face to face until you\nhave one connected monster.",
    "start": "252420",
    "end": "261229"
  },
  {
    "text": "And that's a polycube. So you can make, for\nexample, I don't know,",
    "start": "261230",
    "end": "267173"
  },
  {
    "text": "all the Tetris pieces. Tetris pieces would\nbe four cubes. Normally they're squares, but\nyou can 3-dimensionalize them.",
    "start": "267173",
    "end": "277889"
  },
  {
    "text": "That's a four cube polycube. And you get the general idea. So this is cool because\nthere are exponentially",
    "start": "277890",
    "end": "283740"
  },
  {
    "text": "many polycubes with n cubes. And here is one pattern\nthat can make all of them.",
    "start": "283740",
    "end": "289050"
  },
  {
    "text": "And if you imagine\nsome crazy 3D shape, you can, of course,\napproximate it by cubes,",
    "start": "289050",
    "end": "294270"
  },
  {
    "text": "sort of voxelization\nis the usual term, the same way that\nwe pixelize images. And then you can make\nbasically anything",
    "start": "294270",
    "end": "301180"
  },
  {
    "text": "you want up to the resolution\nprovided by your sheet. So that's the sense in\nwhich this is universal.",
    "start": "301180",
    "end": "306295"
  },
  {
    "start": "306295",
    "end": "312650"
  },
  {
    "text": "So let's prove that. It's actually not too hard\nto do in at least one way.",
    "start": "312650",
    "end": "320890"
  },
  {
    "text": "The first idea is to build\nsomething called a cube gadget. ",
    "start": "320890",
    "end": "328565"
  },
  {
    "text": "We're going to use the idea\nof a gadget a lot, especially in this lecture. But in general, it's a\nuseful algorithmic tool.",
    "start": "328565",
    "end": "333658"
  },
  {
    "text": "A gadget is just something\nthat you reuse many times. It's like a tool.",
    "start": "333658",
    "end": "338720"
  },
  {
    "text": "And in this case, we're going\nto use this folding many times.",
    "start": "338720",
    "end": "345420"
  },
  {
    "text": "At a high level, it's just\na way to fold a single cube. But it has lots of\nnice properties.",
    "start": "345420",
    "end": "350430"
  },
  {
    "text": "So this is a crease pattern. Red lines are mountains. Blue dashed lines are valleys.",
    "start": "350430",
    "end": "355650"
  },
  {
    "text": "It folds into this thing,\nwhich you can see is a cube. Here it's some\nsemi-transparent material.",
    "start": "355650",
    "end": "361129"
  },
  {
    "text": "And there's some pleats coming\nout in the four directions. But it's basically\na cube on a plane.",
    "start": "361130",
    "end": "368530"
  },
  {
    "text": "So we started with a\nplane, a rectangle. We fold that pattern. And you get a rectangle\nplus a cube sticking out.",
    "start": "368530",
    "end": "377130"
  },
  {
    "text": "OK, so in particular, I can make\na one cube polycube out of this if I just made this, got\nrid of the rectangular part.",
    "start": "377130",
    "end": "384140"
  },
  {
    "text": "But by using this\ngadget n times, I claim I can make\nan n cube polycube.",
    "start": "384140",
    "end": "390740"
  },
  {
    "text": "And this kind of a crazy\nidea that, so for example, suppose the starting sheet\nwas not just a rectangle.",
    "start": "390740",
    "end": "398668"
  },
  {
    "text": "But suppose it was a rectangle\nwith a cube sticking out right here. I could still do this folding.",
    "start": "398669",
    "end": "403950"
  },
  {
    "text": "Because this folding\ndidn't touch The gray lines are not creases. They're just hinges. If I had a cube sticking out\nhere. and I folded this thing,",
    "start": "403950",
    "end": "411479"
  },
  {
    "text": "it would now be a rectangle\nwith a cube in the center and a cube sticking\nout of this corner. Because that corner just\nfolds to right there.",
    "start": "411480",
    "end": "418840"
  },
  {
    "text": "In fact, I could have a cube\nsticking out right here also. And then there'd be a\ncube sticking out here in the finished product.",
    "start": "418840",
    "end": "425180"
  },
  {
    "text": "And the idea is to just\nkeep using this gadget. And make your sheet\nbumpier and bumpier",
    "start": "425180",
    "end": "430850"
  },
  {
    "text": "with more and more\ncubes sticking out. And this is the\nsort of thing if you wanted to make-- so\nthere I had cubes",
    "start": "430850",
    "end": "437040"
  },
  {
    "text": "that were separated\nfrom each other. If you want to have cubes that\nare attached to each other, you can do that too.",
    "start": "437040",
    "end": "443720"
  },
  {
    "text": "Because all right, say here,\nif you apply the cube gadget",
    "start": "443720",
    "end": "448970"
  },
  {
    "text": "at this center\nsquare, so you want to pull a cube out from there. Maybe I should show you\nin the previous diagram.",
    "start": "448970",
    "end": "457100"
  },
  {
    "text": "So you have these four squares\naround the center square",
    "start": "457100",
    "end": "462910"
  },
  {
    "text": "make up the four sides of the\ncube, other than the top side. And so if you already had\na cube on that side face,",
    "start": "462910",
    "end": "471110"
  },
  {
    "text": "when you fold this\nthing, you end up with a cube that has a\ncube attached on its right.",
    "start": "471110",
    "end": "477130"
  },
  {
    "text": "So if I wave my hands\nenough, I believe that it's possible to\nmake anything in this way. Let me convince you a\nlittle more formally.",
    "start": "477130",
    "end": "485900"
  },
  {
    "text": "Let's see. Here's a real example. It gives you an idea of\nhow you can make even overhanging cubes.",
    "start": "485900",
    "end": "492100"
  },
  {
    "text": "All I did was initially\nI made this first cube. Then I made this cube with\nthis one attached to the side,",
    "start": "492100",
    "end": "500610"
  },
  {
    "text": "just like the previous picture. And then I just made another\ncube right underneath that one,",
    "start": "500610",
    "end": "506030"
  },
  {
    "text": "so this cube was already\nattached to the center square. And it just got raised\nup by another cube.",
    "start": "506030",
    "end": "511820"
  },
  {
    "text": "So now you've got\nthis L overhang. And this is not quite\nthe crease pattern. This is there's some lines\nthat are not drawn here.",
    "start": "511820",
    "end": "517839"
  },
  {
    "text": "But it's a rough sketch\nof the crease pattern. Let's see.",
    "start": "517840",
    "end": "524320"
  },
  {
    "text": "I'll worry about the rest next. Let me give you a little bit\nof an argument why this works. ",
    "start": "524320",
    "end": "533040"
  },
  {
    "text": "So a cube gadget\nlet's say transforms",
    "start": "533040",
    "end": "538709"
  },
  {
    "text": "a constant number of rows\nand columns of the grid",
    "start": "538710",
    "end": "547640"
  },
  {
    "text": "into a cube that's\nsticking out of your sheet.",
    "start": "547640",
    "end": "553040"
  },
  {
    "start": "553040",
    "end": "561040"
  },
  {
    "text": "And the key property is\nit works even if there are bumps on your\nsheet elsewhere.",
    "start": "561040",
    "end": "575150"
  },
  {
    "text": "So when I say elsewhere, let me\nshow you the cube gadget again. ",
    "start": "575150",
    "end": "582420"
  },
  {
    "text": "There's actually two columns\nsort of getting used up here.",
    "start": "582420",
    "end": "587500"
  },
  {
    "text": "And there's one row\ngetting used up there. Sorry, actually one row here. So there's one row and two\ncolumns in this corner.",
    "start": "587500",
    "end": "594430"
  },
  {
    "text": "And there's actually one\nrow and two columns used up in each corner. And that material disappears\nin some sense from the folding",
    "start": "594430",
    "end": "601130"
  },
  {
    "text": "up here. But all the other\nstuff, this column, everything out in this\ncorner, and those four squares",
    "start": "601130",
    "end": "607885"
  },
  {
    "text": "around the center\nand the center square itself, those can\nall have bumps. You better not have bumps\nhere where I need to fold.",
    "start": "607885",
    "end": "613770"
  },
  {
    "text": "But everywhere else\ncan have bumps. And it's OK-- so I just need\nto set up my bump pattern so",
    "start": "613770",
    "end": "619920"
  },
  {
    "text": "that when I finish\nmaking that cube, I have the bumps\nin the right place.",
    "start": "619920",
    "end": "625540"
  },
  {
    "text": "So it's sort of a working\nbackwards process. And the idea is to\nmake a tree of cubes.",
    "start": "625540",
    "end": "635790"
  },
  {
    "text": "So if you want to make\nsomething that has cycles in it, like a big n by n\nby n cube array,",
    "start": "635790",
    "end": "642690"
  },
  {
    "text": "you can just cut it\nup, subdivide it, so that it's just\na tree of objects.",
    "start": "642690",
    "end": "648230"
  },
  {
    "text": "So for example, suppose I wanted\nto build this shape, which",
    "start": "648230",
    "end": "656389"
  },
  {
    "text": "is not really a tree. I can just pretend that\nthere's a slice here.",
    "start": "656390",
    "end": "664730"
  },
  {
    "text": " So these guys are\nconnected in a path.",
    "start": "664730",
    "end": "670940"
  },
  {
    "text": "But they're not connected here. In general, you can\njust keep slicing until your thing is\nconnected like a tree.",
    "start": "670940",
    "end": "679530"
  },
  {
    "text": "Then once you have a tree,\nyou may know this fact, every tree has at least two\nleaves except in winter.",
    "start": "679530",
    "end": "686940"
  },
  {
    "text": "But in this context,\nwe're thinking of a tree. Here the tree is just this path.",
    "start": "686940",
    "end": "693880"
  },
  {
    "text": "And a leaf is a vertex\nthat has degree one. And every leaf has\nat least, every tree has at least two leaves\nis a fun fact about trees.",
    "start": "693880",
    "end": "702949"
  },
  {
    "text": "And so what we do to make\nthis thing is make a leaf.",
    "start": "702950",
    "end": "709350"
  },
  {
    "text": "So what I mean is we\nstart with a blank sheet. And we'll say OK, here's a leaf. I'm going to build\nthat cube first.",
    "start": "709350",
    "end": "715839"
  },
  {
    "text": "So you apply cube gadget. You build a cube. Then you effectively\nremove that leaf.",
    "start": "715840",
    "end": "722570"
  },
  {
    "text": "Just pretend it was never there. This is sort of a\nconceptual thing. You're not really removing\nit, but and then you repeat.",
    "start": "722570",
    "end": "730800"
  },
  {
    "text": " It's actually a super\nsimple algorithm. The details are a\nlittle bit tricky,",
    "start": "730800",
    "end": "738149"
  },
  {
    "text": "because we have to make\nsure that this works. But once I remove that cube,\nnow my graph is like this.",
    "start": "738150",
    "end": "745748"
  },
  {
    "text": "So I have a choice. I could either fold this leaf\nnext, or I could fold this one.",
    "start": "745749",
    "end": "750940"
  },
  {
    "text": "I just keep going. In this case, I could just\ngo linearly along the path, like I did for making\nthe overhanging L.",
    "start": "750940",
    "end": "757330"
  },
  {
    "text": "And you will make all the cubes. And the property you'll have is\nthat whenever I build a cube,",
    "start": "757330",
    "end": "762360"
  },
  {
    "text": "all the things that\nwere hanging off of it have already been built. Because I'm always working\nfrom the leaves up the tree.",
    "start": "762361",
    "end": "769509"
  },
  {
    "text": "This is, for those\nwho know trees, this is called a\npost-order traversal.",
    "start": "769510",
    "end": "774965"
  },
  {
    "text": " It just means whenever\nI touch a node, whenever",
    "start": "774965",
    "end": "782680"
  },
  {
    "text": "I create a node, all\nof its descendants, all of the leaves below it,\nhave already been built.",
    "start": "782680",
    "end": "788060"
  },
  {
    "text": "And that's exactly how\nthis thing needs to work. Because you can have\nexisting bumps which are the things that were\nattached to that cube",
    "start": "788060",
    "end": "794270"
  },
  {
    "text": "and sort of are\ndeeper in the tree. Those are harder. You can't make those later. As long as they're\nalready built,",
    "start": "794270",
    "end": "800470"
  },
  {
    "text": "you just sort of keep\nworking up the tree. And the stuff you've\nalready built hangs off. In the end, you'll\nhave your entire tree.",
    "start": "800470",
    "end": "806310"
  },
  {
    "text": "And you'll have your polycube. That's it. So there are obviously details\nhere that I'm skipping.",
    "start": "806310",
    "end": "813720"
  },
  {
    "text": "But I think this is\na fun essence of it. Another fact, this is\nessentially optimal.",
    "start": "813720",
    "end": "820790"
  },
  {
    "text": "So I'm using an n by n grid\nto make around n cubes. You might hope in some\ncases you can do better.",
    "start": "820790",
    "end": "828170"
  },
  {
    "text": "In some cases, you can make\nn squared cubes out of an n by n grid. That's the best case.",
    "start": "828170",
    "end": "833510"
  },
  {
    "text": "The worst case\nreally is n cubes. Because if you want to\nmake a super long polycube,",
    "start": "833510",
    "end": "842154"
  },
  {
    "text": "a one by one by n grid, then\nthe diameter of this thing",
    "start": "842154",
    "end": "849640"
  },
  {
    "text": "is about n. And the diameter of my\nsquare paper is like maybe root 2 times n.",
    "start": "849640",
    "end": "855180"
  },
  {
    "text": "So maybe I could\nsave a root 2 factor. But just to get this diameter\nn, I'm going to need about an n",
    "start": "855180",
    "end": "860190"
  },
  {
    "text": "by n sheet. So in the worst case,\nthis is the best you can hope for from\nour usual diameter",
    "start": "860190",
    "end": "865540"
  },
  {
    "text": "argument like last class. But sometimes you can do better. So for example, here is an\nMIT made by Aviv Ovadya.",
    "start": "865540",
    "end": "876620"
  },
  {
    "text": "And this is much more\nefficient, in some sense because everything\nhere is height one.",
    "start": "876620",
    "end": "884290"
  },
  {
    "text": "You can share a lot\nof those pleats. You don't have to waste rows\nfor every single gadget.",
    "start": "884290",
    "end": "891440"
  },
  {
    "text": "You just, you can\nshare those wasted rows along all the guys\nwho are aligned.",
    "start": "891440",
    "end": "897430"
  },
  {
    "text": "And general picture,\nthis is actually Aviv's master's thesis. ",
    "start": "897430",
    "end": "904529"
  },
  {
    "text": "The way I described it, if you\nwanted to make two cubes right next to each other, you fold\ntwo separate cube gadgets",
    "start": "904529",
    "end": "910810"
  },
  {
    "text": "that each use up their\nrows and columns. You can be a little bit more\nclever like I was saying",
    "start": "910810",
    "end": "916400"
  },
  {
    "text": "and share those used up\nrows between the two guys. Because they are\nhorizontally aligned.",
    "start": "916400",
    "end": "922889"
  },
  {
    "text": "And it's a little\nmore efficient. And that's essentially\nwhat's done in that example.",
    "start": "922890",
    "end": "929029"
  },
  {
    "text": "But there's still some\nsort of wastage here. You don't really\nneed to do that. You really want to build\nthe two by one thing.",
    "start": "929030",
    "end": "935750"
  },
  {
    "text": "And with some fancier version of\nthe algorithm, you can do that. If you want to check\nit out, you can see Aviv's [INAUDIBLE]\nthesis, which",
    "start": "935750",
    "end": "943720"
  },
  {
    "text": "was just completed last month. And yeah, we don't have a formal\nsense in which in how much",
    "start": "943720",
    "end": "952370"
  },
  {
    "text": "better this is. But it's sort of\nopportunistic, tries to be as good as possible. ",
    "start": "952370",
    "end": "960440"
  },
  {
    "text": "And that is one version\nof box pleating.",
    "start": "960440",
    "end": "966040"
  },
  {
    "text": "But in the same spirit, I want\nto talk about another situation where we can do very well.",
    "start": "966040",
    "end": "973040"
  },
  {
    "text": "And here we can prove\nthat we can do very well. So again, trying to\nbe more efficient",
    "start": "973040",
    "end": "979990"
  },
  {
    "text": "and this sort of square wasted. We have n squared of material. We only make n things.",
    "start": "979990",
    "end": "985910"
  },
  {
    "text": "Be really nice if we could make\nn squared things out of an n by n grid.",
    "start": "985910",
    "end": "992290"
  },
  {
    "text": "And oh, here's another\nfun example which uses all those optimizations\nbuilding a car. This one there's a real version\nof, but I don't have it here.",
    "start": "992290",
    "end": "1001930"
  },
  {
    "text": "And where we can be particularly\nefficient is maze folding.",
    "start": "1001930",
    "end": "1007000"
  },
  {
    "text": "So suppose you take a\ngraph on an n by n grid. Here it happens\nnot to be square.",
    "start": "1007000",
    "end": "1014170"
  },
  {
    "text": "And then you just sort\nof extrude that graph out from the sheet. That would give you\na bunch of walls",
    "start": "1014170",
    "end": "1019750"
  },
  {
    "text": "in an orthogonal, 3D pattern. Let's say I extrude by one\nunit, one unit of this square.",
    "start": "1019750",
    "end": "1028329"
  },
  {
    "text": "And I claim I can\nfold this 3D shape from a square of paper\nthat is just 3n by 3n.",
    "start": "1028329",
    "end": "1037490"
  },
  {
    "text": "So it's just a constant\nfactor shrinkage. And this is essentially the\nbest you could hope for.",
    "start": "1037490",
    "end": "1044022"
  },
  {
    "text": "Yeah, should I try to argue it. So if you look at where did\nthis material come from,",
    "start": "1044022",
    "end": "1049730"
  },
  {
    "text": "well you've got to go up\nthis wall, down this wall, over the side, up the\nwall, down the wall, over, over, over,\nover, up, down.",
    "start": "1049730",
    "end": "1056961"
  },
  {
    "text": "And in general, you\nhave to go up and down and along the floor. So that's three for every\nsquare that you have here.",
    "start": "1056961",
    "end": "1065549"
  },
  {
    "text": "So that's maze folding. And this is work with\nJason Ku and Marty, also",
    "start": "1065550",
    "end": "1070650"
  },
  {
    "text": "from the big origami\nconference this summer. ",
    "start": "1070650",
    "end": "1087690"
  },
  {
    "text": "So you could call it a maze. You could call it a graph. But it's orthogonal.",
    "start": "1087690",
    "end": "1092740"
  },
  {
    "text": "It's on the grid. And it's extruded from an\nn by n square let's say.",
    "start": "1092740",
    "end": "1098610"
  },
  {
    "text": " And that thing can be\nfolded from an order n",
    "start": "1098610",
    "end": "1111820"
  },
  {
    "text": "by order n square of paper. ",
    "start": "1111820",
    "end": "1118920"
  },
  {
    "text": "And if you're extruding by one\nunit, this big O at that three.",
    "start": "1118920",
    "end": "1124164"
  },
  {
    "text": "And to me this is\nreally exciting. Because one of the big mysteries\nto me in origami design",
    "start": "1124164",
    "end": "1129950"
  },
  {
    "text": "is in practical origami, you\nusually start with a sheet. And you make something that's\nlike two or three times smaller",
    "start": "1129950",
    "end": "1135409"
  },
  {
    "text": "and never much more. And it would be really nice\nto capture theoretically what things can you make by only\nshrinking by a constant factor.",
    "start": "1135410",
    "end": "1143130"
  },
  {
    "text": "Like checkerboards,\nwe know, or we think, you have to shrink a lot. For an n by n\ncheckerboard, you have",
    "start": "1143130",
    "end": "1148970"
  },
  {
    "text": "to shrink by like factor\nof n over 2, n over 4, whatever the best bound is.",
    "start": "1148970",
    "end": "1154090"
  },
  {
    "text": "But it seems the more\ncomplicated you want, the more you have to fold. Here, I can make a\nsuper complicated maze.",
    "start": "1154090",
    "end": "1159850"
  },
  {
    "text": "It could be a\nmillion by million. And I'm still only shrinking\nthe sheet by a factor of three.",
    "start": "1159850",
    "end": "1165520"
  },
  {
    "text": "So this is one of\nthe few results we know where you can\nget a large class, and yet you're only\nshrinking by small factor.",
    "start": "1165520",
    "end": "1173800"
  },
  {
    "text": "The proof of this is also\npretty easy, in fact even easier than the previous one.",
    "start": "1173800",
    "end": "1179513"
  },
  {
    "text": "Again, we're going\nto use gadgets. And we're going to combine\nthem in different ways.",
    "start": "1179514",
    "end": "1184580"
  },
  {
    "text": "But the idea is we\njust make a gadget for each possible\nvertex in this graph.",
    "start": "1184580",
    "end": "1193020"
  },
  {
    "text": " So a vertex in the graph could\nhave no edges incident to it.",
    "start": "1193020",
    "end": "1200340"
  },
  {
    "text": "So we call this degree 0.  Or it could have one incident\nedge and the rest are absent.",
    "start": "1200340",
    "end": "1209740"
  },
  {
    "text": "That's degree 1. Or it could have\ntwo incident edges. And there's two ways\nit could be like that. It could be a turn or\nit could be straight.",
    "start": "1209740",
    "end": "1217050"
  },
  {
    "text": " You could have three\nincident edges.",
    "start": "1217050",
    "end": "1222445"
  },
  {
    "text": " Or you could have\nfour incident edges. ",
    "start": "1222445",
    "end": "1229720"
  },
  {
    "text": "So that's all the\npossible vertices in our orthogonal graph. And we're just going to make\na crease pattern, a folding",
    "start": "1229720",
    "end": "1235470"
  },
  {
    "text": "for each one of these and then\njust combine them together. Now it takes a lot of care\nin designing those patterns",
    "start": "1235470",
    "end": "1243360"
  },
  {
    "text": "that they actually fit together. But all you need to know\nis that it can be done.",
    "start": "1243360",
    "end": "1248970"
  },
  {
    "text": "And they're not trivial. But once you have\nthem, it's easy.",
    "start": "1248970",
    "end": "1254580"
  },
  {
    "text": "So you've got\ndegree 0 on the top, degree 2 straight, degree 4,\ndegree 3, degree 1, degree 2",
    "start": "1254580",
    "end": "1261250"
  },
  {
    "text": "turned. And they're at, I guess, an\nincreasing order of difficulty. And we need to know\nthat these things exist.",
    "start": "1261250",
    "end": "1269240"
  },
  {
    "text": "One way is to in some\nsense just to draw the picture of the folded state. But there's so many layers\nhere it's a little hard to see,",
    "start": "1269240",
    "end": "1275530"
  },
  {
    "text": "and so in order to really\nprove that these things exist, Jason drew diagrams of how\nthese things could actually",
    "start": "1275530",
    "end": "1281360"
  },
  {
    "text": "be folded in isolation. In some sense, we only care\nabout this final 3D picture in knowing that it works and is\nnon self-intersecting and all",
    "start": "1281360",
    "end": "1288180"
  },
  {
    "text": "that. But to show that\nthese exist, one way is to actually\nbuild them or show",
    "start": "1288180",
    "end": "1295080"
  },
  {
    "text": "the sequence that got there. But in reality, you\nwouldn't fold it this way. Because what you do is you\ntake these crease patterns",
    "start": "1295080",
    "end": "1301820"
  },
  {
    "text": "on the left and just start\npasting them together. It's like a big\ncut and paste job.",
    "start": "1301820",
    "end": "1307200"
  },
  {
    "text": "So you say, oh well maybe like\nif I made the square of turns, I would just take one of\nthese, copy, rotate, put it",
    "start": "1307200",
    "end": "1315140"
  },
  {
    "text": "here, copy, rotate, put it\nhere, copy, rotate, put it here. And that would make a\nsquare root of turns.",
    "start": "1315140",
    "end": "1320770"
  },
  {
    "text": "And what you need\nfor that to work is that the interfaces\nhere are compatible. You can think of it\nin the crease pattern,",
    "start": "1320770",
    "end": "1327130"
  },
  {
    "text": "or you can think of\nit in the 3D state. The interface in all\nof these pictures is that when you have an\nactual edge that's raised,",
    "start": "1327130",
    "end": "1335602"
  },
  {
    "text": "it's very simple. It just goes over,\nup, down, over. And when you have an edge that\ndoesn't exist, you go over",
    "start": "1335602",
    "end": "1342470"
  },
  {
    "text": "and then you have\na pleat underneath. And then you go over. And it's important that those\nare the same total length.",
    "start": "1342470",
    "end": "1349630"
  },
  {
    "text": "Because you need to be\nable to choose whether it's a raised edge or\na non-raised edge.",
    "start": "1349630",
    "end": "1355380"
  },
  {
    "text": "And because all of those\ninterfaces are the same, all of the down edges are\nthis kind of double pleat. And all of the up edges\nare just the ridge.",
    "start": "1355380",
    "end": "1363400"
  },
  {
    "text": "These things fit together. And you can see that in\nthe crease pattern also. Here's what the\npleat looks like.",
    "start": "1363400",
    "end": "1368405"
  },
  {
    "text": "And it can match with\nthis pleat or this one. You can rotate. Here is the ridge.",
    "start": "1368405",
    "end": "1374110"
  },
  {
    "text": "It just goes up and back down. And you just paste\nthose together.",
    "start": "1374110",
    "end": "1381280"
  },
  {
    "text": "And you get your\ndesired crease pattern. So here's a simple example. The graph has almost all the\nvertices, everything except 0",
    "start": "1381280",
    "end": "1388810"
  },
  {
    "text": "I think, and straights. All right, not\nquite all of them.",
    "start": "1388810",
    "end": "1393990"
  },
  {
    "text": "But I've color coded here. So like you take the graph. You just embed it on a\nslightly larger grid.",
    "start": "1393990",
    "end": "1399280"
  },
  {
    "text": "And you replace each\nof those vertices with the crease pattern\nthat makes that thing. You just have to rotate\nit for it to work out.",
    "start": "1399280",
    "end": "1406140"
  },
  {
    "text": "And then you see that\nall of these creases just meet up correctly. And then that's your crease\npattern, which will fold this.",
    "start": "1406140",
    "end": "1414454"
  },
  {
    "text": "So that once you\nhave the gadgets, the algorithm is super\nsimple, just a bunch of cutting and pasting.",
    "start": "1414454",
    "end": "1421289"
  },
  {
    "text": "And you can do more\ncomplicated examples. Here's an actual maze. ",
    "start": "1421290",
    "end": "1427640"
  },
  {
    "text": "Get some pretty complicated\ncrease patterns. Not so easy to fold. But it can be done.",
    "start": "1427640",
    "end": "1435050"
  },
  {
    "text": "I didn't bring the\nphysical model of this, because it actually looks\nbetter in photograph. ",
    "start": "1435050",
    "end": "1441240"
  },
  {
    "text": "It's a challenge. This was folded by an\nundergrad here, Chris Chin. And in fact, it's such\nan easy an algorithm,",
    "start": "1441240",
    "end": "1448389"
  },
  {
    "text": "I implemented it as\na web application. It runs in JavaScript. And you can go play with it.",
    "start": "1448390",
    "end": "1454500"
  },
  {
    "text": "It's [INAUDIBLE]. And you can say, OK\ngive me a random maze.",
    "start": "1454500",
    "end": "1460040"
  },
  {
    "text": "And you get a 3D representation. And you get your crease pattern. You hit print. It will print out this\npart in vector forms,",
    "start": "1460040",
    "end": "1466269"
  },
  {
    "text": "nice high resolution,\nand all that. You can make more mazes. If you really want to\nmake a particular maze,",
    "start": "1466270",
    "end": "1472300"
  },
  {
    "text": "you can fool around with that. And you can also write\nimportant messages",
    "start": "1472300",
    "end": "1478000"
  },
  {
    "text": "like something like that.",
    "start": "1478000",
    "end": "1486190"
  },
  {
    "text": "And then you get this\n3D representation, which you can fold by this\nsimple crease pattern.",
    "start": "1486190",
    "end": "1494070"
  },
  {
    "text": "If you make that, one\nplease send it to me. But that may take several hours\nand use a big sheet of paper.",
    "start": "1494070",
    "end": "1502656"
  },
  {
    "text": "I mean, you're only shrinking\nby a constant factor. How hard could it be? The answer is quite hard,\nbecause the gadgets interact.",
    "start": "1502656",
    "end": "1508920"
  },
  {
    "text": "It's tricky. All right, that's maze folding. Any questions about maze\nfolding or this stuff?",
    "start": "1508920",
    "end": "1516990"
  },
  {
    "text": "I think that's the end of\npositive results for today. And we move into NP-hardness. ",
    "start": "1516990",
    "end": "1523935"
  },
  {
    "text": "Good?  All right, well every\norigamist knows,",
    "start": "1523935",
    "end": "1532980"
  },
  {
    "text": "and if you've been\nworking on a problem set, you should know by\nnow origami is hard.",
    "start": "1532980",
    "end": "1538980"
  },
  {
    "text": "And we'd like to\nprove that formally. And because we're\ncomputer scientists,",
    "start": "1538980",
    "end": "1546010"
  },
  {
    "text": "we like to know what we\ncan't know essentially. ",
    "start": "1546010",
    "end": "1555546"
  },
  {
    "text": "There are a lot\nof problems where there's no efficient algorithm. And instead of\njust giving up, we",
    "start": "1555546",
    "end": "1561010"
  },
  {
    "text": "like to prove that no one can\nfind an efficient algorithm. Because then we know\nwe're kind of done.",
    "start": "1561010",
    "end": "1567080"
  },
  {
    "text": "That's comforting. And NP-hardness,\nlet me change this,",
    "start": "1567080",
    "end": "1575332"
  },
  {
    "text": "I don't want to\nformally define it. Because it's a\nlittle bit technical. But a working\ndefinition, there are",
    "start": "1575332",
    "end": "1581280"
  },
  {
    "text": "lots of working definitions\nthat are super easy to tell you. ",
    "start": "1581280",
    "end": "1588830"
  },
  {
    "text": "So the informal version\nis that NP-hard problems are computationally\nintractable problems,",
    "start": "1588830",
    "end": "1596700"
  },
  {
    "text": "meaning there's no tractable\nway, no efficient way, to solve it on a computer. But what it really means,\nor what it really implies,",
    "start": "1596700",
    "end": "1608130"
  },
  {
    "text": "is if a problem is NP-hard, then\nthere's no efficient algorithm.",
    "start": "1608130",
    "end": "1621240"
  },
  {
    "text": "I wish we could just say that. But there's a slight\ncatch, unless P=NP.",
    "start": "1621240",
    "end": "1634240"
  },
  {
    "text": "How many people know\nabout NP-hardness? Well, how many people don't?",
    "start": "1634240",
    "end": "1641039"
  },
  {
    "text": "Just a few. All right, I'm going to go\nrelatively quickly then. Those who haven't heard\nNP-hardness and haven't heard",
    "start": "1641040",
    "end": "1648040"
  },
  {
    "text": "of P=NP? Good. So you've all heard about\nthis famous problem.",
    "start": "1648040",
    "end": "1653060"
  },
  {
    "text": "It's almost certainly the\ncase that P does not equal NP.",
    "start": "1653060",
    "end": "1659380"
  },
  {
    "text": "Pretty much everyone\nbelieves that, unless you watch my April Foo;s\nvideo and search for P equals",
    "start": "1659380",
    "end": "1666940"
  },
  {
    "text": "NP in YouTube. And what this means intuitively\nis that there's no cheating.",
    "start": "1666940",
    "end": "1676440"
  },
  {
    "text": "There's no trick to make\nlucky guesses in life. If you've got two choices\nand you don't know which is",
    "start": "1676440",
    "end": "1682530"
  },
  {
    "text": "the right choice,\nand you're computer, you can't-- computers\naren't lucky.",
    "start": "1682530",
    "end": "1689740"
  },
  {
    "text": "The best they can do\nis try both options. That's what P does not\nequal NP means basically.",
    "start": "1689740",
    "end": "1694960"
  },
  {
    "text": "There are no lucky, there's\nno way to simulate luckiness. That's the technical version.",
    "start": "1694960",
    "end": "1700140"
  },
  {
    "text": " Those who know NP\nshould agree with me. That is real.",
    "start": "1700140",
    "end": "1705480"
  },
  {
    "text": " It's not how most\npeople explain it.",
    "start": "1705480",
    "end": "1712210"
  },
  {
    "text": "But it's how I like\nto think about it. And from that perspective,\nit's kind of obvious.",
    "start": "1712210",
    "end": "1718529"
  },
  {
    "text": "But it's very annoying. It's unlikely anyone will\nprove this in the near future,",
    "start": "1718530",
    "end": "1725100"
  },
  {
    "text": "says Scott Aaronson,\nwho bet $200,000 that that was the case.",
    "start": "1725100",
    "end": "1731320"
  },
  {
    "text": "Right.  So you don't need to know\nthe definition of NP-hardness",
    "start": "1731320",
    "end": "1737430"
  },
  {
    "text": "except that it probably means\nthere's no efficient algorithm. For what we need here is\nthis idea of reduction,",
    "start": "1737430",
    "end": "1744390"
  },
  {
    "text": "that we can take some\nhard problem, known NP-hard problems.",
    "start": "1744390",
    "end": "1750150"
  },
  {
    "text": "Why did I write ness there? NP-hard problems\nshow that a problem",
    "start": "1750150",
    "end": "1757090"
  },
  {
    "text": "that we care about,\nlike origami design, is even harder than\nthose problems.",
    "start": "1757090",
    "end": "1762360"
  },
  {
    "text": "Therefore, it's also NP-hard. That's the usual\nway for NP-hardness. It's always showing that your\nproblem is harder than another.",
    "start": "1762360",
    "end": "1768430"
  },
  {
    "text": "Or showing that one\nof these problems is easier than your problem. And therefore, yours is harder. So I'm going to need\nthree problems today.",
    "start": "1768430",
    "end": "1775150"
  },
  {
    "text": "I'll start just by defining two\nof them, which you've probably seen before. One is called partition.",
    "start": "1775150",
    "end": "1781299"
  },
  {
    "text": " And I give you n numbers.",
    "start": "1781300",
    "end": "1786419"
  },
  {
    "text": " I want to know, can I split\nthem into equal halves?",
    "start": "1786420",
    "end": "1793690"
  },
  {
    "start": "1793690",
    "end": "1807184"
  },
  {
    "text": "Be a little more precise. ",
    "start": "1807184",
    "end": "1812308"
  },
  {
    "text": "Two halves of equal sum. ",
    "start": "1812308",
    "end": "1818100"
  },
  {
    "text": "So suppose you're playing\nvideo game Team Deathmatch. You've got two teams. You've got a ranking\nfor every player.",
    "start": "1818100",
    "end": "1824370"
  },
  {
    "text": "You'd like to divide\nyour players so that the sum of the\nrankings on the red side is the same as the sum of the\nrankings on the blue side,",
    "start": "1824370",
    "end": "1831160"
  },
  {
    "text": "so it's an even game,\nmore fun, whatever. This problem, sadly, is NP-hard. There's no way to do\nthat, even approximately.",
    "start": "1831160",
    "end": "1837915"
  },
  {
    "text": " The only catch is this\nproblem is hard only",
    "start": "1837915",
    "end": "1843139"
  },
  {
    "text": "when these integers\nare super big, like exponentially large in n.",
    "start": "1843140",
    "end": "1848330"
  },
  {
    "text": "This problem is\ncalled weakly NP-hard. So as long as your player\nrankings are nice and small,",
    "start": "1848330",
    "end": "1854430"
  },
  {
    "text": "there actually is an\nefficient way to solve that. Problem but when the integers\nare big, this is NP-hard.",
    "start": "1854430",
    "end": "1859790"
  },
  {
    "text": " An even nastier problem\nis satisfiability, or SAT.",
    "start": "1859790",
    "end": "1867460"
  },
  {
    "text": " Here you're given\nsome Boolean formula.",
    "start": "1867460",
    "end": "1872540"
  },
  {
    "text": " So it has a bunch\nvariables, like x and y.",
    "start": "1872540",
    "end": "1880550"
  },
  {
    "text": " You can do and. You can do not.",
    "start": "1880550",
    "end": "1887660"
  },
  {
    "text": "And you can do or, let's say. That's all you need,\nx and not y or z.",
    "start": "1887660",
    "end": "1894500"
  },
  {
    "text": "And you want to know, can\nI make that formula true? Is there some setting to\nthe variables x, y, and z,",
    "start": "1894500",
    "end": "1908809"
  },
  {
    "text": "or in general there's\nn variables, so",
    "start": "1908810",
    "end": "1913940"
  },
  {
    "text": "that the formula is true? ",
    "start": "1913940",
    "end": "1920300"
  },
  {
    "text": "So we'd say the\nformula's satisfied. And that's NP-hard. And here there's not even\nany numbers to make it hard.",
    "start": "1920300",
    "end": "1927312"
  },
  {
    "text": "So we call this problem\nstrongly NP-hard. ",
    "start": "1927312",
    "end": "1935450"
  },
  {
    "text": "And this is really the\nprototypical hard problem, NP-hard problem, is the very\nfirst one is proved NP-hard.",
    "start": "1935450",
    "end": "1942780"
  },
  {
    "text": "It's the only one\nreally that we usually prove without a\nreduction, you could say.",
    "start": "1942780",
    "end": "1947920"
  },
  {
    "text": " So what we're going to do it\nfor four different origami",
    "start": "1947920",
    "end": "1955440"
  },
  {
    "text": "problems is show those problems\nare easier than our problems.",
    "start": "1955440",
    "end": "1961184"
  },
  {
    "start": "1961185",
    "end": "1966220"
  },
  {
    "text": "Therefore, our problems\nare NP-hard also. ",
    "start": "1966220",
    "end": "1975470"
  },
  {
    "text": "How do we show that,\nsay a partition is easier than some problem?",
    "start": "1975470",
    "end": "1980970"
  },
  {
    "text": "Well, we just take a parti--\nwe show that partition is a special case\nof our problem.",
    "start": "1980970",
    "end": "1986097"
  },
  {
    "text": "It's a special case. Clearly it's easier. So to show that, we take one\nof these partition problems,",
    "start": "1986097",
    "end": "1991640"
  },
  {
    "text": "like n integers. We want to know whether you\ncan split them in equal halves. I'm going to convert\nthat into my problem,",
    "start": "1991640",
    "end": "1998360"
  },
  {
    "text": "so that that problem has\na yes answer if and only if the partition problem\nhas a yes answer. Therefore, really this\nproblem becomes a special case",
    "start": "1998360",
    "end": "2005750"
  },
  {
    "text": "of the one I care about. Therefore, that problem\nis harder, and therefore also NP-hard.",
    "start": "2005750",
    "end": "2011030"
  },
  {
    "text": " So I'm going to start out with\na super simple example which",
    "start": "2011030",
    "end": "2019810"
  },
  {
    "text": "we did in the problem\nsession on Monday. Someone pose this to me after\nclass last week, I think.",
    "start": "2019810",
    "end": "2028510"
  },
  {
    "text": " I think two lectures ago.",
    "start": "2028510",
    "end": "2034820"
  },
  {
    "text": "So here's a problem. I give you a single\nvertex hinge pattern.",
    "start": "2034820",
    "end": "2041360"
  },
  {
    "start": "2041360",
    "end": "2046670"
  },
  {
    "text": "Someone built some crazy\nrobot with some crazy pattern of hinges all around\na single vertex.",
    "start": "2046670",
    "end": "2051809"
  },
  {
    "text": "You want to know, can I\nmake anything out of it? Does some subset\nof those hinges,",
    "start": "2051810",
    "end": "2059149"
  },
  {
    "text": "if I take that as a\ncrease pattern, fold flat? ",
    "start": "2059150",
    "end": "2066850"
  },
  {
    "text": "Who posed this problem? Anybody remember? All right. Maybe he's not here.",
    "start": "2066850",
    "end": "2072980"
  },
  {
    "text": "I forgot, unfortunately. He asked me, so what\nabout this problem? I said, yeah it's\nobviously NP-hard.",
    "start": "2072980",
    "end": "2080060"
  },
  {
    "text": "And we thought about\nit for five minutes. And then after five minutes,\nit's obviously NP-hard.",
    "start": "2080060",
    "end": "2085446"
  },
  {
    "text": "So let me show you the\nobvious proof once we have it.",
    "start": "2085446",
    "end": "2091419"
  },
  {
    "text": "We're going to show\nthat this problem is harder than partition. So we take n integers, want\nto know how to divide them.",
    "start": "2091420",
    "end": "2098430"
  },
  {
    "text": "And it's really simple. So suppose someone\ngives us n integers. ",
    "start": "2098430",
    "end": "2106819"
  },
  {
    "text": "For integers, we're\ngoing to scale them all by the same scale factor,\nso that their sum equals",
    "start": "2106820",
    "end": "2115960"
  },
  {
    "text": "360 degrees. And now, lo and\nbehold, those integers are angles in a crease\npattern, in a hinge pattern.",
    "start": "2115960",
    "end": "2123870"
  },
  {
    "text": "So you just take those numbers. You turn them. You put them on a wheel. ",
    "start": "2123870",
    "end": "2131670"
  },
  {
    "text": "OK. Now presumably, it's not a flat,\nfoldable, single vertex crease pattern. Otherwise, the\nanswer would be yes.",
    "start": "2131670",
    "end": "2137464"
  },
  {
    "text": "We want to know, can I\nremove some the creases to make it flat foldable? Now if you think about\nKawasaki's theorem,",
    "start": "2137464",
    "end": "2144410"
  },
  {
    "text": "the sum, the alternating\nsum of angles equals 0. Remember how that proof worked? We said, OK you follow\none angle for a while.",
    "start": "2144410",
    "end": "2151260"
  },
  {
    "text": "Then you turn. Then you go back. And somehow, you have to end\nup back where you started.",
    "start": "2151260",
    "end": "2156460"
  },
  {
    "text": "That's the equals zero part. And it's the\nalternating sum part. Now in this case, we have\na choice at every crease.",
    "start": "2156460",
    "end": "2162320"
  },
  {
    "text": "We could include it or not. If we include the\ncrease, we turn around. If we remove the crease,\nwe keep going straight.",
    "start": "2162320",
    "end": "2170310"
  },
  {
    "text": "So now the problem is I\ngive you all these integers. And I can go right. And now I have a choice.",
    "start": "2170310",
    "end": "2175820"
  },
  {
    "text": "Do I go right or left by\nthe next integer, theta 2. There's theta 1, theta 2.",
    "start": "2175820",
    "end": "2182127"
  },
  {
    "text": "Each one, I have a choice. Do I go right or left? ",
    "start": "2182127",
    "end": "2188190"
  },
  {
    "text": "In the end, the sum\nmust equal zero. So this problem is\nthe same problem",
    "start": "2188190",
    "end": "2193900"
  },
  {
    "text": "really as given a\nbunch of numbers, can I assign signs of plus or\nminus so that they add up to 0?",
    "start": "2193900",
    "end": "2202800"
  },
  {
    "text": "But assigning signs of plus\nor minus so they add up to is the same as saying all the\nplus guys equal all the minus",
    "start": "2202800",
    "end": "2209480"
  },
  {
    "text": "guys. So really, this problem becomes\nassigning pluses and minuses,",
    "start": "2209480",
    "end": "2226670"
  },
  {
    "text": "so that the sum with\nthe appropriate pluses or minuses of\ntheta i is equal 0.",
    "start": "2226670",
    "end": "2232550"
  },
  {
    "text": "That's the Kawasaki version. But that's the same thing as\nsaying the sum of the pluses",
    "start": "2232550",
    "end": "2238550"
  },
  {
    "text": "equals the sum of the minuses. And if that's the case,\nthen really you've",
    "start": "2238550",
    "end": "2245000"
  },
  {
    "text": "partitioned your numbers\ninto two halves of equal sum. So this is going to be\npossible exactly when there's",
    "start": "2245000",
    "end": "2252319"
  },
  {
    "text": "a partition. And so you've\nconverted partition into this problem, which\nmeans this problem is harder.",
    "start": "2252320",
    "end": "2257980"
  },
  {
    "text": "Because it has other\nsituations maybe. But you take any\npartition, and are actually pretty much identical.",
    "start": "2257980",
    "end": "2263500"
  },
  {
    "text": "But partition becomes a\nspecial case with this problem. Therefore, this problem is\nharder, and therefore NP-hard.",
    "start": "2263500",
    "end": "2270569"
  },
  {
    "text": "It's only weakly NP-hard. But that's a minor detail.",
    "start": "2270570",
    "end": "2276260"
  },
  {
    "text": "Clear? All right. Now we move on to the\nmore, I don't know,",
    "start": "2276260",
    "end": "2284000"
  },
  {
    "text": "that's a brand new result,\nand a very simple one. ",
    "start": "2284000",
    "end": "2289660"
  },
  {
    "text": "Now we move on to the sort of\nmore established, well-studied problems. ",
    "start": "2289660",
    "end": "2296477"
  },
  {
    "text": "The NP-hardness proofs are\nquite a bit more complicated. But they're still, they\nall follow the same spirit.",
    "start": "2296477",
    "end": "2302660"
  },
  {
    "text": "And they're a lot of fun,\nbecause they involve gadgets. Here there aren't\nreally any gadgets. We represented an\ninteger by an angle.",
    "start": "2302660",
    "end": "2310080"
  },
  {
    "text": "It's pretty direct. But in some sense,\nthat's the gadget. And we just used n of them. All of the other proofs are\ngoing to use tons of gadgets.",
    "start": "2310080",
    "end": "2316740"
  },
  {
    "text": "And they're kind of fun. I love NP-hard proofs. They're one of my\nfavorite things. ",
    "start": "2316740",
    "end": "2326294"
  },
  {
    "text": "All right, one of\nthe first things we talked about in this\nclass was simple folds. And we showed that in\none dimension, if you",
    "start": "2326294",
    "end": "2333105"
  },
  {
    "text": "had a one dimensional\npiece of paper, simple folds were universal. You could make any flat,\nfoldable crease pattern.",
    "start": "2333105",
    "end": "2339059"
  },
  {
    "text": "And if you remember,\nat the very end, we talked about\nmap folding, which",
    "start": "2339060",
    "end": "2344950"
  },
  {
    "text": "is where you have a bunch\nof orthogonal creases in a rectangular paper, and\nmaybe also with mountain valley",
    "start": "2344950",
    "end": "2353510"
  },
  {
    "text": "assignment. And we showed that\nthis problem really is a bunch of one\ndimensional problems.",
    "start": "2353510",
    "end": "2359750"
  },
  {
    "text": "And so if we wanted to\nsolve it was simple folds, where you only fold along\na single line at a time by 180 degrees, then\nreally this turned",
    "start": "2359750",
    "end": "2368130"
  },
  {
    "text": "into a one dimensional\nproblem in one dimension, then a one dimensional problem\nin the other dimension. You just kept doing\nthat until either you",
    "start": "2368130",
    "end": "2374590"
  },
  {
    "text": "got stuck, in which case the\nthing was not flat foldable, or you flat folded it. So this is an example where\nsimple folding is easy.",
    "start": "2374590",
    "end": "2382290"
  },
  {
    "text": "But in general,\ndeciding whether you can fold a crease pattern flat\nby simple folds is NP-hard.",
    "start": "2382290",
    "end": "2388040"
  },
  {
    "text": "So for this special\ncase, it's easy. For another situation, which\nis when the polygons are not",
    "start": "2388040",
    "end": "2397300"
  },
  {
    "text": "just rectangles, but are\na little more general, then it becomes NP-hard. ",
    "start": "2397300",
    "end": "2404570"
  },
  {
    "text": "So in general, the problem\nis given a crease pattern, possibly with mountain\nvalley assignments, doesn't really matter, can it\nbe folded flat by simple folds,",
    "start": "2404570",
    "end": "2418290"
  },
  {
    "text": "by a sequence of simple folds? Initially we thought maybe\nthis problem was polynomially solvable, because simple\nfolds are so damn simple.",
    "start": "2418290",
    "end": "2425610"
  },
  {
    "text": "We were wishful,\nbut it's not true.",
    "start": "2425610",
    "end": "2433270"
  },
  {
    "text": "This turns out to be NP-hard. ",
    "start": "2433270",
    "end": "2439870"
  },
  {
    "text": "If we take this situation,\nthe map situation,",
    "start": "2439870",
    "end": "2445820"
  },
  {
    "text": "and we add 45 degree\nfolds, creases, so I just",
    "start": "2445820",
    "end": "2452890"
  },
  {
    "text": "add some things like that. It looks kind of crazy. Got to do some sub division.",
    "start": "2452890",
    "end": "2459390"
  },
  {
    "text": "I just add 45 degree folds. Then this problem\nbecomes NP-hard. So with orthogonal creases\nin a rectangle, it's easy.",
    "start": "2459390",
    "end": "2465670"
  },
  {
    "text": "But you had one more\ndirection, it's hard. Another version that's hard. If I keep all the creases\nhorizontal and vertical",
    "start": "2465670",
    "end": "2472710"
  },
  {
    "text": "but I make an orthogonal polygon\ninstead of just a rectangle,",
    "start": "2472710",
    "end": "2479586"
  },
  {
    "text": "then it's also NP-hard. I'm going to show this\none because it's easier. But this actually just converts.",
    "start": "2479586",
    "end": "2486280"
  },
  {
    "text": "You can set up 45\ndegree folds so that you are forced to make a\nparticular orthogonal polygon to get started.",
    "start": "2486280",
    "end": "2491890"
  },
  {
    "text": "And then it's the same proof. So I think I have\nthe proof here. ",
    "start": "2491890",
    "end": "2499070"
  },
  {
    "text": "So again, we're going to\nreduce from partition. So we're given n integers.",
    "start": "2499070",
    "end": "2504730"
  },
  {
    "text": "We want to know whether\nwe can divide them into equal summing halves. And we're going to\nrepresent those integers",
    "start": "2504730",
    "end": "2510360"
  },
  {
    "text": "by these lengths. So here's an, then\na3, and a2, and a1.",
    "start": "2510360",
    "end": "2518380"
  },
  {
    "text": "So the lengths in the top part\nof the staircase are integers.",
    "start": "2518380",
    "end": "2524327"
  },
  {
    "text": "We want to somehow divide\nthose into equal halves. And when they have two halves,\nand I suppose at their sum",
    "start": "2524327",
    "end": "2531049"
  },
  {
    "text": "is L, capital L. I can\njust add them all up. I should get 2L. I divide by 2, I could get\nwhat the target sum is.",
    "start": "2531050",
    "end": "2537350"
  },
  {
    "text": "So I know ahead of time without\nsolving the partition problem what L ought to be, and\nwhat twice L ought to be.",
    "start": "2537350",
    "end": "2544000"
  },
  {
    "text": "And then I build this frame\nover on the right whose height is exactly twice\nL. And so there's",
    "start": "2544000",
    "end": "2551880"
  },
  {
    "text": "these creases in the horizontal\ncreases down the staircase. All these creases have\nto get folded eventually,",
    "start": "2551880",
    "end": "2558850"
  },
  {
    "text": "and by simple folds. And then there's also\nthese two vertical creases",
    "start": "2558850",
    "end": "2564540"
  },
  {
    "text": "bounding the frame. So the idea is, well you make\nsome of the horizontal creases.",
    "start": "2564540",
    "end": "2570240"
  },
  {
    "text": "Then you fold one of\nthose horizontal creases. And then eventually you\nhave to fold-- I'm sorry, one of those vertical creases.",
    "start": "2570240",
    "end": "2575600"
  },
  {
    "text": "I always get horizontal\nand vertical confused, which causes me great\ndifficulty when trying to sleep. But so when I fold the first\nvertical crease, whatever's",
    "start": "2575600",
    "end": "2586860"
  },
  {
    "text": "over here comes over here. If it hits the frame,\nI'm in big trouble. Because then how\nam I going to fold",
    "start": "2586860",
    "end": "2593220"
  },
  {
    "text": "the other horizontal,\nother vertical crease without colliding\nwith the frame?",
    "start": "2593220",
    "end": "2600890"
  },
  {
    "text": "If I want to avoid collision\nwith the frame by simple folds, and I fold the vertical\ncrease, I really should not be\ntouching the frame.",
    "start": "2600890",
    "end": "2607101"
  },
  {
    "text": "So you try to fold through it. They're both valleys\nin this case. It doesn't matter too much.",
    "start": "2607102",
    "end": "2613590"
  },
  {
    "text": "So what I really need to do\nis fold this thing compactly like this, so that it just\nfits inside the frame.",
    "start": "2613590",
    "end": "2621630"
  },
  {
    "text": "And the only way to\ndo that is for each of those vertical\nsegments of the staircase to decide should it go\nup, or should it go down?",
    "start": "2621630",
    "end": "2628810"
  },
  {
    "text": "And you do that in\nactually pretty much the same way this proof works. For each of these\nsegments here, we",
    "start": "2628810",
    "end": "2634765"
  },
  {
    "text": "were deciding should I\nkeep going straight and go, or should I turn around?",
    "start": "2634765",
    "end": "2639790"
  },
  {
    "text": "Over here, it's the same deal. I either keep going\nstraight, whichever direction I was going, up or\ndown, or I turn around.",
    "start": "2639790",
    "end": "2646090"
  },
  {
    "text": "But I always have a\nchoice at every crease. I'll just fold it or not to make\nit go up or down how I want. The up guys are going\nto be one of the halves.",
    "start": "2646090",
    "end": "2652607"
  },
  {
    "text": "And the down guys are going\nto be the other halves. Here, it's the other\nside of the paper, the dark blue versus\nthe light blue.",
    "start": "2652607",
    "end": "2658920"
  },
  {
    "text": "As long as those numbers\nadd up to exactly L,",
    "start": "2658920",
    "end": "2664400"
  },
  {
    "text": "I've got this twice. Then I start here at\nthe middle of the frame.",
    "start": "2664400",
    "end": "2673480"
  },
  {
    "text": "If I can get them\nto balance out, I will end over here,\nalso at the middle.",
    "start": "2673480",
    "end": "2680700"
  },
  {
    "text": "And then I go up by L.\nAnd then I go down by 2L. And that will just\nfit inside the frame.",
    "start": "2680700",
    "end": "2686840"
  },
  {
    "text": "But only if I stay in\nthe middle will that 2L fit inside the frame. And so the only way\nfor these two creases",
    "start": "2686840",
    "end": "2693810"
  },
  {
    "text": "to be foldable and not\ncollide with the frame is if I can solve the\npartition problem.",
    "start": "2693810",
    "end": "2699560"
  },
  {
    "text": "Therefore, so finding\nsimple fold sequences is actually way harder than\npartition in some sense.",
    "start": "2699560",
    "end": "2705390"
  },
  {
    "text": "Because this is just\na very specific kind of map, specific kind of crease\npattern you might want to fold. And folding that is\nexactly partition.",
    "start": "2705390",
    "end": "2714120"
  },
  {
    "text": "So the general simple\nfoldability problem is going to be NP-hard,\nbecause it includes partition",
    "start": "2714120",
    "end": "2719420"
  },
  {
    "text": "as a special case. Clear? ",
    "start": "2719420",
    "end": "2725291"
  },
  {
    "text": "Good.  That's our easiest proof\namong the next three.",
    "start": "2725291",
    "end": "2733130"
  },
  {
    "text": "Going to get increasingly\ndifficult, I guess. But I'll just getting\nincreasingly sketchy, so it will be easy for me.",
    "start": "2733130",
    "end": "2740460"
  },
  {
    "text": " I mean, the more\ncomplicated a proof gets,",
    "start": "2740460",
    "end": "2745960"
  },
  {
    "text": "somehow I feel like the\nnumber of interesting details in a proof remains constant.",
    "start": "2745960",
    "end": "2751447"
  },
  {
    "text": "If the proof gets\nmore complicated, then I throw away more\nof the messy details. ",
    "start": "2751447",
    "end": "2781030"
  },
  {
    "text": "All right, the next theorem is\nalso about flat foldability.",
    "start": "2781030",
    "end": "2793990"
  },
  {
    "text": "But now I don't just\ncare about simple folds,",
    "start": "2793990",
    "end": "2800260"
  },
  {
    "text": "I want to look at\nregular origami folds, which are folded states.",
    "start": "2800260",
    "end": "2806350"
  },
  {
    "text": "So we talked a couple lectures\nago about local foldability, which was can we\nassign mountains",
    "start": "2806350",
    "end": "2813349"
  },
  {
    "text": "and valleys to\nsome crease pattern so that each vertex, if you\ncut it out into a little disk,",
    "start": "2813350",
    "end": "2818500"
  },
  {
    "text": "would by itself fold flat. And that was easy, polynomially\nsolvable, actually linear time.",
    "start": "2818500",
    "end": "2825120"
  },
  {
    "text": "And that was a result\nby Bern and Hayes. Another result in the same\npaper by Bern and Hayes, which is actually sort\nof the bigger result",
    "start": "2825120",
    "end": "2831350"
  },
  {
    "text": "that everyone knows about,\nis that if I give you an arbitrary crease\npattern, I want to know just does it fold\nflat, that's NP-hard.",
    "start": "2831350",
    "end": "2839720"
  },
  {
    "text": "They proved actually two\nNP-hard hardness results. ",
    "start": "2839720",
    "end": "2850400"
  },
  {
    "text": "So this is way back in '96. This is one of\nthe oldest results in computational origami.",
    "start": "2850400",
    "end": "2857950"
  },
  {
    "text": " So I give you a crease pattern.",
    "start": "2857950",
    "end": "2864110"
  },
  {
    "text": "I just want to know, is it\nflat foldable in the global, in the regular sense? ",
    "start": "2864110",
    "end": "2871819"
  },
  {
    "text": "This is strongly NP-hard. ",
    "start": "2871820",
    "end": "2878959"
  },
  {
    "text": "The proof I just gave is\nactually weakly NP-hard. It is not known whether that\nproblem is strongly or weakly",
    "start": "2878959",
    "end": "2884120"
  },
  {
    "text": "hard, but at least weekly. ",
    "start": "2884120",
    "end": "2902270"
  },
  {
    "text": "The other thing they\nproved is that if you're given a flat foldable, even I\ntell you it's flat foldable,",
    "start": "2902270",
    "end": "2914167"
  },
  {
    "text": "and I even give you the\nmountains and valleys that make it work, still flat\nfolding thing is NP-hard.",
    "start": "2914167",
    "end": "2920510"
  },
  {
    "start": "2920510",
    "end": "2933606"
  },
  {
    "text": "So if I give you a flat foldable\nmountain valley pattern, all that's left is to decide\nI can fold each vertex.",
    "start": "2933606",
    "end": "2939260"
  },
  {
    "text": "And then there's this\nissue of layering. If I have two layers of\npaper that are overlapping, they could be like this.",
    "start": "2939260",
    "end": "2944850"
  },
  {
    "text": "Or they could be like this. And if I have, for\nexample, two crimps, I could decide\nhow the layers go.",
    "start": "2944850",
    "end": "2951860"
  },
  {
    "text": "Figuring out what the\nright layer ordering is is really the heart\nof the problem. This is what makes it NP-hard.",
    "start": "2951860",
    "end": "2957261"
  },
  {
    "text": "Because we know finding a\nmountain valley assignment-- locally things work-- is easy. But getting that\nlayering to work is hard.",
    "start": "2957261",
    "end": "2964840"
  },
  {
    "text": "That's what all\nthese proofs say. ",
    "start": "2964840",
    "end": "2975812"
  },
  {
    "text": "So I'm going to talk about\nthe proof of the first result though, because the second\none is pretty complicated. ",
    "start": "2975812",
    "end": "2985320"
  },
  {
    "text": "It's the same spirit,\njust a lot more details. ",
    "start": "2985320",
    "end": "2993720"
  },
  {
    "text": "Again, we're going\nto do a reduction. And we have these two nice\nproblems, partition and SAT.",
    "start": "2993720",
    "end": "2999420"
  },
  {
    "text": "I'm not going to\nuse either of them, though in theory\nyou could use SAT. I'm going to reduce from one\nof my favorite problems, one",
    "start": "2999420",
    "end": "3006440"
  },
  {
    "text": "of my favorite NP-hard\nproblems, I should say. Wait, no. That's the next proof. This is not my favorite.",
    "start": "3006440",
    "end": "3012630"
  },
  {
    "text": "It's a pretty good one, though. I do like it. Is just a little more technical.",
    "start": "3012630",
    "end": "3017990"
  },
  {
    "start": "3017990",
    "end": "3031230"
  },
  {
    "text": "All positive, not\nall equal 3SAT, has anyone heard of\nthis problem before?",
    "start": "3031230",
    "end": "3037559"
  },
  {
    "text": "Nadia's heard of it, because\nshe TA'd this class before. It's no surprise. So you've read the book.",
    "start": "3037560",
    "end": "3043986"
  },
  {
    "text": "This is, there aren't a lot\nof proofs that use this one. But not all equal 3SAT is\nactually fairly common.",
    "start": "3043987",
    "end": "3049660"
  },
  {
    "text": "All positive is just makes\na little more convenient. I think actually the original\nproof didn't use all positive.",
    "start": "3049660",
    "end": "3054860"
  },
  {
    "text": "But our book does. Because it simplifies things. So let me tell you\nwhat this problem is.",
    "start": "3054860",
    "end": "3061907"
  },
  {
    "text": "Most people don't know it. So don't worry. ",
    "start": "3061907",
    "end": "3068830"
  },
  {
    "text": "You could technically,\nit's a version of SAT. But instead of giving\na Boolean formula, I'm going to think of that\nit's really a Boolean formula.",
    "start": "3068830",
    "end": "3076100"
  },
  {
    "text": "But I'm going to think of\nit in a simpler way, which is I give you a bunch of triples\nif variables, so like xi,",
    "start": "3076100",
    "end": "3082390"
  },
  {
    "text": "xj xk. And I want to know is\nthere a Boolean assignment",
    "start": "3082390",
    "end": "3089299"
  },
  {
    "text": "to those variables? I want to set each of\nthem to true or false. ",
    "start": "3089299",
    "end": "3103730"
  },
  {
    "text": "Say there's n variables.  So that no triple is\nall equal, no triple",
    "start": "3103730",
    "end": "3117150"
  },
  {
    "text": "is all true or all false. ",
    "start": "3117150",
    "end": "3127450"
  },
  {
    "text": "Maybe we could call it\nthe all state problem. I've been watching too many ads. All right, so if not all equal\n3SAT, that's this version.",
    "start": "3127450",
    "end": "3137400"
  },
  {
    "text": "Actually, it's\nalso all positive, meaning I don't have\nany nots in here. So ignore that.",
    "start": "3137400",
    "end": "3142880"
  },
  {
    "text": "Ignore the technical term. This is the right definition. So I have a bunch of\ntriples of variables.",
    "start": "3142880",
    "end": "3148296"
  },
  {
    "text": "I just don't want them all to\nbe true or all to be false. So two of them could be true\nand one false, or two of them could be false, and one true.",
    "start": "3148296",
    "end": "3154829"
  },
  {
    "text": "That's all. It turns out this is\nbasically equivalent to SAT. But the proof of that\nis kind of messy.",
    "start": "3154830",
    "end": "3160440"
  },
  {
    "text": "So I don't want to do it here. ",
    "start": "3160440",
    "end": "3166040"
  },
  {
    "text": "And so that problem is NP-hard. Just take that on faith.",
    "start": "3166040",
    "end": "3171349"
  },
  {
    "text": "And now I want to show that\nglobal flat foldability includes all positive\nnot all will equal 3SAT",
    "start": "3171350",
    "end": "3179809"
  },
  {
    "text": "as a special case. And therefore,\nit's also NP-hard. ",
    "start": "3179810",
    "end": "3192010"
  },
  {
    "text": "So I'll give you a preview. ",
    "start": "3192010",
    "end": "3204490"
  },
  {
    "text": "Start with a high level, what\nwe need in terms of gadgets.",
    "start": "3204490",
    "end": "3216170"
  },
  {
    "start": "3216170",
    "end": "3225072"
  },
  {
    "text": "And then I'll show\nyou the gadgets, and then show you how\nthey fit together. So this is a general\npicture, in fact,",
    "start": "3225072",
    "end": "3232420"
  },
  {
    "text": "of what a SAT kind of\nNP-hardness proof looks like. If you haven't done many\nof them, now you'll know.",
    "start": "3232420",
    "end": "3239514"
  },
  {
    "text": "If you have done\nmany of them, you will recognize\nthis pattern, which is to represent\nBoolean-ness, we need",
    "start": "3239514",
    "end": "3246490"
  },
  {
    "text": "something that represents\ntrue and false. And that's usually\ncalled a wire. We think of digital\nsignals like chips.",
    "start": "3246490",
    "end": "3253209"
  },
  {
    "text": "And then we've got to be able\nto connect those wires together to do interesting things. In this case, the interesting\nthing we need to do",
    "start": "3253209",
    "end": "3259200"
  },
  {
    "text": "is tell if I have\na triple of them, are they all true or\nall false, and somehow force them to not be\nall true or all false.",
    "start": "3259200",
    "end": "3266570"
  },
  {
    "text": "And in this case, that will\nbe a not all equal clause. It'll be a gadget\nthe folds flat,",
    "start": "3266570",
    "end": "3272009"
  },
  {
    "text": "exactly when those wires that\ncome together, three wires come together. And if they're all truth,\nthey won't fold flat.",
    "start": "3272010",
    "end": "3278079"
  },
  {
    "text": "If they're all false,\nit won't fold flat. In all of the cases,\nit will fold flat. So if we could\nbuild that, that'll",
    "start": "3278080",
    "end": "3284180"
  },
  {
    "text": "constrain the variables\nthat I connect together with a not all equal clause. But how do I actually\nmove the wires around",
    "start": "3284180",
    "end": "3292480"
  },
  {
    "text": "to make them connect\ntogether at these clauses? Well, I need something\ncalled a turn gadget. If I have a wire\ngoing straight, I'd",
    "start": "3292480",
    "end": "3298762"
  },
  {
    "text": "like to be able to turn\nit to some other angle. I could just sort\nof move them around. It's harder than it sounds.",
    "start": "3298762",
    "end": "3304170"
  },
  {
    "text": "And I'll also need a split. Because in this, it's maybe not\nobvious from this formulation,",
    "start": "3304170",
    "end": "3310230"
  },
  {
    "text": "but I have these n variables. I might have many\nmore than n clauses. Each variable, like\nx1, might appear",
    "start": "3310230",
    "end": "3316740"
  },
  {
    "text": "in 100 different triples. And so I actually\nneed 100 copies of x1.",
    "start": "3316740",
    "end": "3322551"
  },
  {
    "text": "And that's what a\nsplit gadget does. And we're going to\nbuild one gadget called a reflector, which actually\ndoes both of those in one",
    "start": "3322551",
    "end": "3327790"
  },
  {
    "text": "fell swoop. And the last thing we\nneed is a crossover. Because you make all these\nconnections between variables",
    "start": "3327790",
    "end": "3334780"
  },
  {
    "text": "and clauses or triples. And they might have\nto cross each other. And we want them to\ncross each other,",
    "start": "3334780",
    "end": "3340770"
  },
  {
    "text": "but not affect each other. And because we're\nin a sheet of paper, we've got to deal with that.",
    "start": "3340770",
    "end": "3345841"
  },
  {
    "text": "It's going to be these wires\nto go right through each other. We got to make it\nstill flat foldable without affecting either wire.",
    "start": "3345841",
    "end": "3352790"
  },
  {
    "text": "That's all. That's pretty standard\nfor this kind of proof.",
    "start": "3352790",
    "end": "3357960"
  },
  {
    "text": "These are the proofs that\nI like the most, actually. Pretty fun. So in our case, a wire is\ngoing to be super easy.",
    "start": "3357960",
    "end": "3364109"
  },
  {
    "text": "It's just pleat, so two very\nnearby parallel creases.",
    "start": "3364110",
    "end": "3370080"
  },
  {
    "text": "And because they're nearby,\nI mean, if you look locally, it's like a one\ndimensional problem. They can't both be valley\nor both be mountain.",
    "start": "3370080",
    "end": "3376630"
  },
  {
    "text": "Because then these\ntwo big panels would intersect each other. So one of them is valley,\none of them is mountain.",
    "start": "3376630",
    "end": "3383710"
  },
  {
    "text": "There's exactly two choices. I'm going to always\nhave an arrow on my wire so I have a sense\nof orientation, which way the signal is going.",
    "start": "3383710",
    "end": "3389770"
  },
  {
    "text": "And once I have an\norientation, the left side, if the left side is\nvalley, that's true. If the left side is\nmountain, that's false.",
    "start": "3389770",
    "end": "3397240"
  },
  {
    "text": "That's just I'm going\nto decide it that way. It doesn't actually matter,\nbecause in this problem, true and false are symmetric.",
    "start": "3397240",
    "end": "3402800"
  },
  {
    "text": "But I just need to be\nconsistent about which is which. OK, so that was the wire gadget.",
    "start": "3402800",
    "end": "3409061"
  },
  {
    "text": "The next one is the\nnot all equal gadget. And I'm guessing this is\nwhere Bern and Hayes started.",
    "start": "3409062",
    "end": "3414650"
  },
  {
    "text": "Because it's sort of\nthe heart of the proof. Then there's all these details\nto connect up with the wires,",
    "start": "3414650",
    "end": "3419670"
  },
  {
    "text": "and split them, and whatnot. But this is something\ncalled a triangular twist.",
    "start": "3419670",
    "end": "3425288"
  },
  {
    "text": "You may have folded one before. It's kind of classic. So the crease pattern's\nin the top left. And the idea is I have\nthree wires coming together.",
    "start": "3425289",
    "end": "3431895"
  },
  {
    "text": "I want this thing to fold flat\nif, and only if, the wires are not all the same.",
    "start": "3431895",
    "end": "3438080"
  },
  {
    "text": "And I've drawn here sort of\nthree of the possible patterns you could have. Here I have one\ntruth and two false.",
    "start": "3438080",
    "end": "3443530"
  },
  {
    "text": "That folds flat. Here I have three false. And here I have two\ntrue and one false.",
    "start": "3443530",
    "end": "3450329"
  },
  {
    "text": "This also folds flat. In all cases, this is what\nthe folded state looks like.",
    "start": "3450330",
    "end": "3457602"
  },
  {
    "text": "I maybe never mentioned this. But this is an\nimportant concept. If you take a crease pattern and\nyou say I want to fold it flat,",
    "start": "3457602",
    "end": "3465290"
  },
  {
    "text": "you can tell where\nall the stuff is going to go in\nterms of geometry. What you can't tell\nis the layer ordering.",
    "start": "3465290",
    "end": "3471730"
  },
  {
    "text": "That depends on the\nmountain valley assignment. That depends on how you\ndecide the layers to stack. But you can tell already where\neverything goes in the plane.",
    "start": "3471730",
    "end": "3478990"
  },
  {
    "text": "Because you pick, let's see,\ndid anything stay fixed here. Yeah, the triangle stayed fix.",
    "start": "3478990",
    "end": "3484850"
  },
  {
    "text": "So you pick some face to\nstay fixed, like that center triangle. You put it there. And then you say, OK.",
    "start": "3484850",
    "end": "3489900"
  },
  {
    "text": "Well, where is this flap? Where is this face of the\ncrease pattern going to go? Well, it gets reflected\nthrough that horizontal line.",
    "start": "3489900",
    "end": "3497619"
  },
  {
    "text": "So it goes here. And you can just keep\nplaying this reflection game. Because you know every\ncrease geometrically,",
    "start": "3497620",
    "end": "3504080"
  },
  {
    "text": "it's a reflection. It could be a reflection\nthis way or this way. But it just, as soon\nas you cross a crease, you end up reflecting\nyour material.",
    "start": "3504080",
    "end": "3511319"
  },
  {
    "text": "And so you can draw this\npicture without knowing anything about how it's folded. Just if there's a flat folding,\nit's got to look like this.",
    "start": "3511320",
    "end": "3517430"
  },
  {
    "text": "And the annoying\nthing about this set up, because that angle\nup there is 35 degrees,",
    "start": "3517430",
    "end": "3523690"
  },
  {
    "text": "these guys are going to\noverlap in this common center. And in this situation where\nit's all false or all true,",
    "start": "3523690",
    "end": "3531510"
  },
  {
    "text": "you get an intersection there. It's a little tricky to prove. And you've just got\nto fiddle with one.",
    "start": "3531510",
    "end": "3536955"
  },
  {
    "text": "I should have brought\none, but that is true. And so in the all false and\nsymmetrically the all true",
    "start": "3536955",
    "end": "3543650"
  },
  {
    "text": "case, this thing\ndoes not fold flat. In all the other\nsituations, it folds fine. Because the layers\nget out of the way.",
    "start": "3543650",
    "end": "3550640"
  },
  {
    "text": "OK, also over here, and there's\na bunch of these in the book, are little analyses of\nwhich of the creases",
    "start": "3550640",
    "end": "3556210"
  },
  {
    "text": "have to have the same\nmountain valley assignment and which have to\nhave different. That's actually how\nthese patterns are drawn.",
    "start": "3556210",
    "end": "3562780"
  },
  {
    "text": "This is from our old local\nanalysis of a single vertex crease pattern, right. You've got these four creases.",
    "start": "3562780",
    "end": "3569399"
  },
  {
    "text": "Check it out. The only one that could\nbe crimped is this one. Because it's globally smallest.",
    "start": "3569399",
    "end": "3574710"
  },
  {
    "text": "All the other guys have a bigger\nneighbor or are in trouble.",
    "start": "3574710",
    "end": "3580089"
  },
  {
    "text": "So this guy has to be crimped. So these two are not equal. And therefore, these\ntwo must be equal.",
    "start": "3580090",
    "end": "3585490"
  },
  {
    "text": "And that's symmetrical\nall the way around. So in fact, you know\nthat this crease is different from this\none, is equal to this one.",
    "start": "3585490",
    "end": "3591014"
  },
  {
    "text": "You already knew that\nthese two are different. So that's OK. So you can figure out\nthese crease patterns.",
    "start": "3591014",
    "end": "3597760"
  },
  {
    "text": "There's a little bit of flexi--\nonce you have the mountains and valleys coming in, you know\nhow the mountains and valleys",
    "start": "3597760",
    "end": "3603560"
  },
  {
    "text": "have to be in the center. Just makes life easier. There's only one mountain\nvalley assignment you need to consider.",
    "start": "3603560",
    "end": "3609150"
  },
  {
    "text": "And the symmetric one\nturns out to be bad. So that's two gadgets.",
    "start": "3609150",
    "end": "3614580"
  },
  {
    "text": "We got the wire, the\nnot all equal clause. Of course, if we're\nlucky, all the wires",
    "start": "3614580",
    "end": "3620412"
  },
  {
    "text": "will just meet at\nthe right points. But I'm going to need\nmany copies of them. I've got to move\nthem around to reach all the different clauses,\nall the different triples.",
    "start": "3620412",
    "end": "3629049"
  },
  {
    "text": "So next up is reflector. ",
    "start": "3629050",
    "end": "3637559"
  },
  {
    "text": "This is actually in\nsome sense really easy. So we have, here's our input.",
    "start": "3637560",
    "end": "3644292"
  },
  {
    "text": "What the reflector is\ngoing to do is it's going to make two copies, one\ndown here which is negated,",
    "start": "3644292",
    "end": "3650350"
  },
  {
    "text": "and one up here, which\nis the same value. And it also effectively\nturns the signal",
    "start": "3650350",
    "end": "3655930"
  },
  {
    "text": "two different directions. So to see why it works\nis actually pretty easy.",
    "start": "3655930",
    "end": "3662099"
  },
  {
    "text": "It's just a local\nanalysis again. You look at this vertex. This is the only increase\nthey could be crimped.",
    "start": "3662100",
    "end": "3668270"
  },
  {
    "text": "So we know that these two\nguys have opposite assignment. Therefore, these two wires\nwill have opposite value.",
    "start": "3668270",
    "end": "3676147"
  },
  {
    "text": "And actually, they\nhave the same value if they're pointing\nin the same direction. But they'll have\nopposite value because I",
    "start": "3676147",
    "end": "3681680"
  },
  {
    "text": "decided this one's\npointing down. So if this one's a mountain,\nthis one has to be a valley.",
    "start": "3681680",
    "end": "3687060"
  },
  {
    "text": "And so if this is true because\nit's valley on the left, this one's false because\nit's mountain on the left.",
    "start": "3687060",
    "end": "3693286"
  },
  {
    "text": "OK, and then you can\ndo the same thing. Then you also know these\ntwo guys are equal. And because again, this is\nthe only crimpable pair here,",
    "start": "3693286",
    "end": "3700650"
  },
  {
    "text": "these two creases are not equal. And so you know these\ntwo guys are equal and these two guys are equal.",
    "start": "3700650",
    "end": "3705690"
  },
  {
    "text": "And so you know that this\nvalley is propagated up there.",
    "start": "3705690",
    "end": "3711130"
  },
  {
    "text": "And therefore, these two\nwires have the same value. So you've split the signal. You've made a positive\ncopy and a negated copy.",
    "start": "3711130",
    "end": "3717790"
  },
  {
    "text": "And if you just do\nthis again, you'll get-- this will make\nanother negated copy",
    "start": "3717790",
    "end": "3724990"
  },
  {
    "text": "and a positive copy. So I get two positive\ncopies and a negated one. You can just keep\ndoing this and you'll",
    "start": "3724990",
    "end": "3730875"
  },
  {
    "text": "get tons of positive copies,\ntons of negative copies. So it doesn't even matter\nif it's all positive. But if you take\nall positive ones.",
    "start": "3730875",
    "end": "3736500"
  },
  {
    "text": "Let the others go\noff to infinity. And now you want to\nmove around so that they hit those not all equal clauses.",
    "start": "3736500",
    "end": "3743307"
  },
  {
    "text": "How do I move them around? I just use more reflectors. If I come in at some\nangle, I can now",
    "start": "3743307",
    "end": "3748480"
  },
  {
    "text": "turn by however much that is. Or I can turn by\nhowever much that is. I'm not going to try to figure\nout what those angles are.",
    "start": "3748480",
    "end": "3755030"
  },
  {
    "text": "But it turns out, this is\nenough to make everything work. The last thing you need are\na bunch of crossover gadgets.",
    "start": "3755030",
    "end": "3762290"
  },
  {
    "text": "This is one of them. There's a second one. I'll just wave my\nhands and say, if you take two pleats in\nthe obvious way,",
    "start": "3762290",
    "end": "3768500"
  },
  {
    "text": "they really don't\ncare about each other. Because the way to\nfold this locally, is to fold this diagonal\npleat and then fold",
    "start": "3768500",
    "end": "3775210"
  },
  {
    "text": "the vertical pleat. And it will work whether\none pleat is true or false. It doesn't matter which side is\nvalley, which side is mountain.",
    "start": "3775210",
    "end": "3781500"
  },
  {
    "text": "It always works. So crossovers aren't\nactually that big a deal.",
    "start": "3781500",
    "end": "3786570"
  },
  {
    "text": "Once you have that,\nyou take those gadgets. And you put them together\ninto a monstrosity of a crease pattern, which\nlooks something like this.",
    "start": "3786570",
    "end": "3794240"
  },
  {
    "text": "And this took forever\nto draw, I remember. So we have on the left\nside our variables.",
    "start": "3794240",
    "end": "3800660"
  },
  {
    "text": "These are just wires. They're pleats. And each one could be\nfolded true or false,",
    "start": "3800660",
    "end": "3806080"
  },
  {
    "text": "left over right or\nright over left. And then I do a whole\nbunch of reflectors, just reflect, reflect,\nreflect, reflect, reflect,",
    "start": "3806080",
    "end": "3812810"
  },
  {
    "text": "just to make a whole\nbunch of copies. And then at the top there, way\nat that little yellow triangle,",
    "start": "3812810",
    "end": "3824109"
  },
  {
    "text": "is a not all equal clause. And is a not all equal\nclause between x3,",
    "start": "3824110",
    "end": "3829869"
  },
  {
    "text": "where we make a copy. Wow, this is crazy. I end up making a copy,\nnegate it downwards,",
    "start": "3829870",
    "end": "3835310"
  },
  {
    "text": "and I flip it around. And it goes up straight. And then I turn it at an angle\nto hit the triangle dead on,",
    "start": "3835310",
    "end": "3841400"
  },
  {
    "text": "the way it's supposed to. Then I also take x1\nup the top, just get",
    "start": "3841400",
    "end": "3846890"
  },
  {
    "text": "a copy straight\noff the top there. And x2, I take a copy here. For some reason I feel like\nnegating it, and turning it",
    "start": "3846890",
    "end": "3853090"
  },
  {
    "text": "around, and spitting\nit up there. And then I turn it back down. It hits the yellow triangle\nat just the right angle.",
    "start": "3853090",
    "end": "3858990"
  },
  {
    "text": "And therefore, if this\nthing's going to fold flat, it must be that x1, x2,\nand x3 are not all equal. And you just keep doing\nthat, one for every triple.",
    "start": "3858990",
    "end": "3866480"
  },
  {
    "text": "Remember, we're given as input\none of these not all equal SAT problems.",
    "start": "3866480",
    "end": "3871880"
  },
  {
    "text": "I give you a bunch of triples. I just put the wires together\naccording to those triples.",
    "start": "3871880",
    "end": "3877540"
  },
  {
    "text": "This thing we flat\nfoldable if and only if this formula is satisfiable.",
    "start": "3877540",
    "end": "3883290"
  },
  {
    "text": "You can set the pleats so that\nthe desired triples are not equal. So that's pretty crazy.",
    "start": "3883290",
    "end": "3889260"
  },
  {
    "text": "This is in some sense\none of the hardest proofs that we will see.",
    "start": "3889260",
    "end": "3894710"
  },
  {
    "text": "But in the end,\nyou get NP-hardness of flat foldability. Questions?",
    "start": "3894710",
    "end": "3900105"
  },
  {
    "text": " OK, I want to do one\nmore proof sketch.",
    "start": "3900105",
    "end": "3905885"
  },
  {
    "start": "3905885",
    "end": "3940890"
  },
  {
    "text": "This is yet another\npaper that was at this year's Origami in\nScience Math and Education conference.",
    "start": "3940890",
    "end": "3946880"
  },
  {
    "text": "This is, it's fun\nto teach this class. Because it changes so much\nover a period of three years.",
    "start": "3946880",
    "end": "3953220"
  },
  {
    "text": "Lots of new results. This is a result\nwith a guy named Sandor Fekete from Germany. He does a lot of optimization,\nand Robert Lang, and myself.",
    "start": "3953220",
    "end": "3964079"
  },
  {
    "text": "So disk packing is something\nwe talked about last class in the context of the tree\nmethod of origami design.",
    "start": "3964080",
    "end": "3971550"
  },
  {
    "text": "We said, in particular we were\nthinking of this situation where we wanted to make them\na Margulis napkin counter",
    "start": "3971550",
    "end": "3977290"
  },
  {
    "text": "example. So this was equivalent. If we wanted to build this\nuniaxial base and sides,",
    "start": "3977290",
    "end": "3984650"
  },
  {
    "text": "was the same thing as packing\nn disks into a square.",
    "start": "3984650",
    "end": "3991210"
  },
  {
    "text": "That's what the\ntree method shows. So in some sense, I'm\ntalking about this problem.",
    "start": "3991210",
    "end": "3997430"
  },
  {
    "text": "But equivalently, I'm\ntalking about this problem of packing disks into a square. Now if I give you n unit\ndisks all the same size,",
    "start": "3997430",
    "end": "4004250"
  },
  {
    "text": "I want to pack them in a square,\nthat problem cannot be NP-hard.",
    "start": "4004250",
    "end": "4009710"
  },
  {
    "text": "That's annoying. But the input is only n. It's not very interesting.",
    "start": "4009710",
    "end": "4014920"
  },
  {
    "text": "So to make it harder, be able\nto show that this problem is",
    "start": "4014920",
    "end": "4020299"
  },
  {
    "text": "computationally\nintractable, I'm going to consider\ngeneralization, which is I still have this\nkind of star tree,",
    "start": "4020300",
    "end": "4027180"
  },
  {
    "text": "still a very simple\nkind of uniaxial base I might want to build. But now all the limbs\nare different lengths.",
    "start": "4027180",
    "end": "4033609"
  },
  {
    "text": "So what that corresponds to is\nI have disks of various sizes. ",
    "start": "4033610",
    "end": "4042310"
  },
  {
    "text": "It's kind of fun. It's like bubbles. ",
    "start": "4042310",
    "end": "4047446"
  },
  {
    "text": "They all have to fit. They can't overlap each other. All of the centers of the\ndisks are inside the square.",
    "start": "4047446",
    "end": "4052840"
  },
  {
    "text": " And I want to know,\ncan I-- how big",
    "start": "4052840",
    "end": "4058329"
  },
  {
    "text": "a square do I need to pack them? OK, I'm going to formulate it as\na decision question, yes or no.",
    "start": "4058330",
    "end": "4064500"
  },
  {
    "text": "Can you place n given disks,\nI give you the sizes of them.",
    "start": "4064500",
    "end": "4070360"
  },
  {
    "text": " I want them to be\nnon-overlapping.",
    "start": "4070360",
    "end": "4075640"
  },
  {
    "text": " They can touch on the\nboundary but the interiors",
    "start": "4075640",
    "end": "4081740"
  },
  {
    "text": "can't overlap. And I need the centers\nto lie in a given square.",
    "start": "4081740",
    "end": "4090720"
  },
  {
    "text": "So I want to know, can I\nmake this uniaxial base from this square paper? And I claim that as NP-hard.",
    "start": "4090720",
    "end": "4098560"
  },
  {
    "text": "So good luck solving\nit perfectly. And what tree maker\ndoes is it solves it approximately\nwith a heuristic.",
    "start": "4098560",
    "end": "4105739"
  },
  {
    "start": "4105740",
    "end": "4112625"
  },
  {
    "text": "For those who know\napproximation algorithims, this is a problem you can find\na constant factor approximation.",
    "start": "4112625",
    "end": "4118299"
  },
  {
    "text": "There's one in the same paper. But it's still not,\nstill unresolved how close to\noptimal you can get.",
    "start": "4118300",
    "end": "4124410"
  },
  {
    "text": " But I want to focus\nhere on the NP-hardness. ",
    "start": "4124410",
    "end": "4134350"
  },
  {
    "text": "So I should say this\nproblem is NP-hard. ",
    "start": "4134350",
    "end": "4143759"
  },
  {
    "text": "So we're going to prove that.  And now I get to reduce\nfor my favorite problem,",
    "start": "4143760",
    "end": "4153109"
  },
  {
    "text": "favorite NP-hard. It's my favorite partly\nbecause not many people know it",
    "start": "4153109",
    "end": "4159410"
  },
  {
    "text": "unless you've done NP-hardness\nproofs with me before. And it's very powerful.",
    "start": "4159410",
    "end": "4165599"
  },
  {
    "text": "Whenever you have a problem\nthat involves numbers, and this problem\ninvolves numbers. It's the radii of the disk's.",
    "start": "4165600",
    "end": "4171399"
  },
  {
    "text": "Three partition is the\nproblem you should know. Partition is all right. The three partition\nis like 50% better.",
    "start": "4171399",
    "end": "4178140"
  },
  {
    "text": " Because partition is like you've\npartitioned it to two parts.",
    "start": "4178140",
    "end": "4184920"
  },
  {
    "text": "So it's like two partition. Three partition,\nyou partition into? ",
    "start": "4184920",
    "end": "4191779"
  },
  {
    "text": "Does not one have\nthe right answer? I hear three parts\nand five parts. Any other guesses? AUDIENCE: Seven",
    "start": "4191780",
    "end": "4197660"
  },
  {
    "text": "PROFESSOR: Seven. Keep going. n over three parts\nis the answer.",
    "start": "4197660",
    "end": "4204630"
  },
  {
    "text": "So it's not so obvious. Maybe it should be called\nn over 3 partition.",
    "start": "4204630",
    "end": "4210415"
  },
  {
    "start": "4210415",
    "end": "4216884"
  },
  {
    "text": "So instead of the number\nof parts being three, the size of each part is three. So n should be divisible by 3.",
    "start": "4216884",
    "end": "4223720"
  },
  {
    "text": " So I'm going to\npartition it to n over 3 triples of numbers\nof equal sum.",
    "start": "4223720",
    "end": "4231300"
  },
  {
    "start": "4231300",
    "end": "4239500"
  },
  {
    "text": "This problem is cool for\nthis technical reason that it is strongly NP-hard.",
    "start": "4239500",
    "end": "4245730"
  },
  {
    "text": " So even when the numbers are\nreally small, like about n,",
    "start": "4245730",
    "end": "4254720"
  },
  {
    "text": "this problem is NP-hard. With partition, the numbers\nhad to be exponential and n for the problem to be hard.",
    "start": "4254720",
    "end": "4260420"
  },
  {
    "text": "And that's kind of\nartificial here. So this is actually\nstrongly NP-hard. So this problem\nis hard even when",
    "start": "4260420",
    "end": "4266990"
  },
  {
    "text": "the disk sizes are\nnot that different. There's like a range between\none and n, let's say.",
    "start": "4266990",
    "end": "4272120"
  },
  {
    "text": "If I reduce from partition,\nI'd need some disks to be microscopic and\nsome to be ginormous,",
    "start": "4272120",
    "end": "4277640"
  },
  {
    "text": "exponential difference. I'm going to reduce\nfrom three partition because I get a better result.",
    "start": "4277640",
    "end": "4283080"
  },
  {
    "text": "I get a stronger result the\nsays even when the disks are not so different in size,\nthis problem is NP-hard.",
    "start": "4283080",
    "end": "4288190"
  },
  {
    "text": " That's my problem that\nI've got to start from.",
    "start": "4288190",
    "end": "4302500"
  },
  {
    "text": "So I give you n integers. I want to somehow triple\nthem up using a disk packing.",
    "start": "4302500",
    "end": "4313430"
  },
  {
    "text": "So somehow solving a\ndisk packing problem is going to solve this\nthree partition problem.",
    "start": "4313430",
    "end": "4318719"
  },
  {
    "text": "And it's kind of crazy.  I'll give you the\nhigh level picture.",
    "start": "4318720",
    "end": "4325330"
  },
  {
    "start": "4325330",
    "end": "4336027"
  },
  {
    "text": "It's n over three\nidentical pockets. ",
    "start": "4336027",
    "end": "4356250"
  },
  {
    "text": "So in this case, there\nis kind of like the proof where we had the simple folds\nand we a frame and some stuff.",
    "start": "4356250",
    "end": "4365564"
  },
  {
    "text": "We're going to have some\ninfrastructure, which in that case was the frame. That was sort of a basic\nthing that always exists.",
    "start": "4365564",
    "end": "4371070"
  },
  {
    "text": "In this case, we're going to\nhave some infrastructure which is a whole bunch of disks\nthat just sort of set, instead of having this very\nopen problem, open playing",
    "start": "4371070",
    "end": "4378570"
  },
  {
    "text": "field with a square, and like\nyou could put disks anywhere, I want to partition\nmy square into lots",
    "start": "4378570",
    "end": "4383890"
  },
  {
    "text": "of little pockets, all the\nsame size, all the same shape. And all other pockets are\ngoing to be much smaller.",
    "start": "4383890",
    "end": "4393451"
  },
  {
    "text": "So it's a little\nhard to draw this. Because while I said\nthat the disks aren't that different size,\nthey're only a factor of n",
    "start": "4393452",
    "end": "4398890"
  },
  {
    "text": "different in size, if you\ntry to draw these pictures, it gets tiny very quickly.",
    "start": "4398890",
    "end": "4404400"
  },
  {
    "text": "So here's the high\nlevel picture. You have a square. And I'm going to put\ndown these disks.",
    "start": "4404400",
    "end": "4411860"
  },
  {
    "text": "There's 20 disks here, I\nthink, 4 times 4 is 16 plus 5.",
    "start": "4411860",
    "end": "4420139"
  },
  {
    "text": "I'm sorry, 21. So these 21 disks, they\nhave a unique package,",
    "start": "4420140",
    "end": "4425517"
  },
  {
    "text": "this one right here. You can see that\nbecause these four disks have to be in the corners,\ncan't fit one in the center",
    "start": "4425517",
    "end": "4431660"
  },
  {
    "text": "and have room for the others. Then this guy has\nto go right there. And then these four disks are\nunique if you set it up right.",
    "start": "4431660",
    "end": "4438439"
  },
  {
    "text": "It's a little bit,\nit's hard to draw. But these are little bit\nwedged over to the right.",
    "start": "4438439",
    "end": "4444690"
  },
  {
    "text": "So you set up these disks. That's infrastructure. It's the only way to put them. And then there's these\nlittle pockets here.",
    "start": "4444690",
    "end": "4450940"
  },
  {
    "text": "They're nice. They're symmetric. They're like a triangle,\nan equilateral triangle so to speak, except\nthey have curved edges.",
    "start": "4450940",
    "end": "4457840"
  },
  {
    "text": "They're all the same size. That gives me four pockets. But I want n over 3 pockets.",
    "start": "4457840",
    "end": "4463260"
  },
  {
    "text": "So I'm going to need a lot more. So I take each of these pockets. That's these three disks.",
    "start": "4463260",
    "end": "4470060"
  },
  {
    "text": "And this is the triangular\npocket in the center. And I put down these 17 disks.",
    "start": "4470060",
    "end": "4477000"
  },
  {
    "text": "It's almost the same. And I can see it's not\nquite drawn perfectly. This is supposed to touch here.",
    "start": "4477000",
    "end": "4482730"
  },
  {
    "text": "This guy is floating\na little bit. And what we end up, this\nguy's uniquely placed.",
    "start": "4482730",
    "end": "4488655"
  },
  {
    "text": "And then these guys have got\nto go in the three remaining pockets. What we end up getting is\nanother equilateral whole",
    "start": "4488655",
    "end": "4495690"
  },
  {
    "text": "pocket right there. And these three will have the\nsame size and be identical.",
    "start": "4495690",
    "end": "4500900"
  },
  {
    "text": "If I do that in\nall four of these, now I'll have 16 pockets. And each time I do\nthis, side I quadruple",
    "start": "4500900",
    "end": "4507900"
  },
  {
    "text": "the number of pockets. So after I do it,\nwhatever log n times, or I apply that\ngadget around n times,",
    "start": "4507900",
    "end": "4514470"
  },
  {
    "text": "I get around n over 3 pockets. They're all identical. The ones I don't want, I'll\njust throw a disk in there",
    "start": "4514470",
    "end": "4520270"
  },
  {
    "text": "to destroy it. That's the infrastructure. Now I've got n over\nthree identical pockets.",
    "start": "4520270",
    "end": "4525850"
  },
  {
    "text": "There are these other pockets. Just throw in disks in there. I mean, I can't force\nthem to go there. But if you set disks\nto the right size,",
    "start": "4525850",
    "end": "4532200"
  },
  {
    "text": "they really have to go there. And so all of the other\npockets will get even tinier. It will destroy them.",
    "start": "4532200",
    "end": "4539767"
  },
  {
    "text": "That's the infrastructure. It's already pretty crazy. But then the last\npart is actually kind, is very cool and elegant.",
    "start": "4539767",
    "end": "4549137"
  },
  {
    "text": "So I've got these\nn over 3 pockets. ",
    "start": "4549137",
    "end": "4554840"
  },
  {
    "text": "And this was the central\nidea we started with. It actually took us\nawhile to find this way to force a bunch of\nidentical pockets.",
    "start": "4554840",
    "end": "4560822"
  },
  {
    "text": "It's easy if you start\nfrom a triangle of paper or a rectangle of paper. But we really wanted\nto start from a square.",
    "start": "4560822",
    "end": "4566210"
  },
  {
    "text": "So that's the case we\ncare about in origami. And so we came up\nwith that proof.",
    "start": "4566210",
    "end": "4571580"
  },
  {
    "text": "This is hard to draw perfectly. Here's an equilateral\ntriangle, so to speak,",
    "start": "4571580",
    "end": "4577949"
  },
  {
    "text": "of equal radius disks\npairwise kissing. A little slightly\nwrong aspect ratio.",
    "start": "4577950",
    "end": "4583666"
  },
  {
    "text": "But you get the idea.  I'm going to put a disk here\nthat has a little bit of slack.",
    "start": "4583666",
    "end": "4591159"
  },
  {
    "text": " I'm going to put a disk\nhere that-- actually, I'm",
    "start": "4591160",
    "end": "4599905"
  },
  {
    "text": "going to draw them\nwithout slack first. And then I'm going to\nsay how the slack is. Because that'll be\nclearer what I mean.",
    "start": "4599905",
    "end": "4605620"
  },
  {
    "text": "So suppose this guy was\nactually kissing all three. And this guy was\nkissing three and it's",
    "start": "4605620",
    "end": "4612074"
  },
  {
    "text": "like a bunch of threesomes here. All right, now I want to\nmake each of these disks",
    "start": "4612074",
    "end": "4618850"
  },
  {
    "text": "a little bit bigger, which\nwill make this impossible. But then I'm going to make\nthis guy a little bit smaller.",
    "start": "4618850",
    "end": "4626100"
  },
  {
    "text": "So I'm going to make\nthis one ai bigger.",
    "start": "4626100",
    "end": "4631745"
  },
  {
    "text": "I'm going to make\nthis one aj bigger. ",
    "start": "4631745",
    "end": "4637150"
  },
  {
    "text": "I'm going to make\nthis one ak bigger. ",
    "start": "4637150",
    "end": "4643619"
  },
  {
    "text": "And this one, what did\nI call it, L, smaller.",
    "start": "4643620",
    "end": "4651090"
  },
  {
    "text": "So L is the target\nsum for a triple,",
    "start": "4651090",
    "end": "4660290"
  },
  {
    "text": "meaning I take all the\nintegers that I'm given. And I add them all up.",
    "start": "4660290",
    "end": "4667790"
  },
  {
    "text": "And then I divide by n over 3. That's what every\ntriple should sum to. Because they're all\nsupposed to be the same.",
    "start": "4667790",
    "end": "4673770"
  },
  {
    "text": "So I call that L. This is\nthe sum divided by n over 3. ",
    "start": "4673770",
    "end": "4680820"
  },
  {
    "text": "So I'm going to make this\none that much smaller. This is all slightly\napproximate. Bear with me.",
    "start": "4680820",
    "end": "4686750"
  },
  {
    "text": "So that gives it a\nlittle bit of slack, which is good because these\nguys are little bit bigger. And if they are bigger, in total\nif the sum of these two values",
    "start": "4686750",
    "end": "4696790"
  },
  {
    "text": "is L, this will barely fit. If it's bigger than\nL, it won't fit. If it's less than\nL, it will fit.",
    "start": "4696790",
    "end": "4704710"
  },
  {
    "text": "But because L has\nto be, L is always the average sum of the\ntriples, if they're all",
    "start": "4704710",
    "end": "4711670"
  },
  {
    "text": "going to-- if you have\na bunch of triples, all of whose sum is less\nthan or equal to L, in fact",
    "start": "4711670",
    "end": "4716869"
  },
  {
    "text": "they all have to be exactly\nequal L. Because there's no slack. So the only way for these guys\nto pack, now I said this is ai,",
    "start": "4716870",
    "end": "4724340"
  },
  {
    "text": "aj, ak, in fact I'm just giving\nyou a heap, a bag of disks. I don't say which ones go where.",
    "start": "4724340",
    "end": "4729600"
  },
  {
    "text": "You have to choose. So clearly, these are\nall the same size. And they're just going\nto go in the center.",
    "start": "4729600",
    "end": "4734740"
  },
  {
    "text": "And they'll wiggle\naround a little. These guys, you get to\nchoose how I triple them up",
    "start": "4734740",
    "end": "4741520"
  },
  {
    "text": "and how I put them into\nthese n over 3 pockets. So that's your flexibility\nin disk packing. It's your only flexibility\nin disk packing,",
    "start": "4741520",
    "end": "4747699"
  },
  {
    "text": "is how you triple them up. And the only way\nfor it to work is if you can triple them up\nso that their sums, the sum",
    "start": "4747700",
    "end": "4753590"
  },
  {
    "text": "of the amount by\nwhich they are bigger, is exactly L. Because that's\nexactly the slack of this disk. And it will just fit.",
    "start": "4753590",
    "end": "4760739"
  },
  {
    "text": "Question? AUDIENCE: So the fact that you\nhave an increase in the ai, j, k [INAUDIBLE] geometry work out\nwith some tangents and stuff?",
    "start": "4760740",
    "end": "4770965"
  },
  {
    "text": "PROFESSOR: Yeah, all right. So you raise a good point, which\nis I said this is ai bigger. I didn't really mean that\nthe radius is ai bigger,",
    "start": "4770965",
    "end": "4777310"
  },
  {
    "text": "although it's actually\nclose to that. ai is an integer. If I made it that much\nbigger, it might be huge.",
    "start": "4777310",
    "end": "4784320"
  },
  {
    "text": "But what I really\nmean is I take ai, I multiply it by a very small\nnumber greater than zero",
    "start": "4784320",
    "end": "4789580"
  },
  {
    "text": "called epsilon. And all of these are\nactually by epsilon. And that is actually how\nmuch you change the radius.",
    "start": "4789580",
    "end": "4796964"
  },
  {
    "text": "Maybe there's a\nsecond order term. But to the first order, yeah you\nthink, oh, there's this trig. And I've got to do tangents\nand all this funny stuff.",
    "start": "4796964",
    "end": "4803990"
  },
  {
    "text": "It turns out to the\nfirst order, actually things work really simply. If I shrink this disk\nby an additive amount,",
    "start": "4803990",
    "end": "4812849"
  },
  {
    "text": "or sorry, if I grow these\ndisks by and additive amount, I shrink this by\nthe same amount, this will still work up\nto the first order, so up",
    "start": "4812849",
    "end": "4822160"
  },
  {
    "text": "to the first derivative. So you might have to do\na little bit of fudging. I can just subtract off an\nepsilon squared or something",
    "start": "4822160",
    "end": "4829440"
  },
  {
    "text": "to give me just a\nlittle bit of freedom. And then this is actually\nhow big the disks are. But you raise a good point.",
    "start": "4829440",
    "end": "4835270"
  },
  {
    "text": "There's details I'm hiding here. It's actually pretty clean. You work out the\ntangents and things just",
    "start": "4835270",
    "end": "4840490"
  },
  {
    "text": "are pretty, surprisingly. We thought this would be messy. But it actually\nworks pretty well.",
    "start": "4840490",
    "end": "4845971"
  },
  {
    "text": "Other the questions?  All right. Now you're experts at\nNP-hardness of origami.",
    "start": "4845972",
    "end": "4853170"
  },
  {
    "text": " So here's the no equal\nset clause gadget.",
    "start": "4853170",
    "end": "4863450"
  },
  {
    "text": "And if we fold it here\nwith all of the incoming signals the same direction,\nin the center they collide.",
    "start": "4863450",
    "end": "4873520"
  },
  {
    "text": "You can't go all\nthe way to flat. This thing is not yet folded. And it's stuck in the center.",
    "start": "4873520",
    "end": "4881474"
  },
  {
    "text": "But if I flip one of\nthem, I'll flip this guy,",
    "start": "4881475",
    "end": "4887570"
  },
  {
    "text": "then it very happily folds flat. Because you don't get that\ncollision because the center ends up going off to the side.",
    "start": "4887570",
    "end": "4893880"
  },
  {
    "text": "And you can check that for all\nthree, it's actually symmetric. But no matter how these guys\nare set, if they're all equal,",
    "start": "4893880",
    "end": "4899110"
  },
  {
    "text": "you get collision in the center. If they're not all\nequal, it folds flat. ",
    "start": "4899110",
    "end": "4922977"
  }
]