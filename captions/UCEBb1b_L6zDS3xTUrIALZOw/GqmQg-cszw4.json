[
  {
    "text": " The following content is\nprovided under a Creative Commons license. Your support will help\nMIT OpenCourseWare",
    "start": "0",
    "end": "6050"
  },
  {
    "text": "continue to offer high quality\neducational resources for free. To make a donation or to\nview additional materials",
    "start": "6050",
    "end": "12690"
  },
  {
    "text": "from hundreds of MIT courses,\nvisit MIT OpenCourseWare at ocw.mit.edu",
    "start": "12690",
    "end": "26054"
  },
  {
    "text": "PROFESSOR: In this\nclass, this semester, the other co-lecturer\nis going to be James Mickens, who is a visiting\nprofessor from Microsoft",
    "start": "26054",
    "end": "32070"
  },
  {
    "text": "Research. He'll lecture on some other\ntopics like web security later on.",
    "start": "32070",
    "end": "37520"
  },
  {
    "text": "But we'll decide later what's\ngoing on exactly, in terms of the lecture split up. We also have four TAs this year,\nStephen, Webb, [INAUDIBLE],",
    "start": "37520",
    "end": "46120"
  },
  {
    "text": "and James. And hopefully you'll meet them\nin office hours over the year",
    "start": "46120",
    "end": "52590"
  },
  {
    "text": "if you need help. So the plan for this\nclass is to understand",
    "start": "52590",
    "end": "57949"
  },
  {
    "text": "how to build secure systems,\nwhy computer systems sometimes are insecure and how we\ncan make them better,",
    "start": "57950",
    "end": "64330"
  },
  {
    "text": "and what goes wrong. And in order to do this, there's\nnot really a great textbook about this topic.",
    "start": "64330",
    "end": "69830"
  },
  {
    "text": "So instead, what\nwe're going to do is, each lecture\nother than this one is going to be focused around some\nresearch, typically a paper,",
    "start": "69830",
    "end": "76860"
  },
  {
    "text": "that we'll assign on\nthe website and you guys should read ahead of time. And there are some\nquestion that you",
    "start": "76860",
    "end": "82550"
  },
  {
    "text": "should answer in the submission\nsystem about the paper. And submit your own question\nby 10:00 PM before the lecture",
    "start": "82550",
    "end": "88520"
  },
  {
    "text": "day. And then when you\ncome to lecture, we'll actually discuss\nthe paper, figure out, what is the system? What problem does it solve?",
    "start": "88520",
    "end": "94500"
  },
  {
    "text": "When does it work? When does it not work? Are these ideas any\ngood in other cases? Et cetera.",
    "start": "94500",
    "end": "99560"
  },
  {
    "text": "And hopefully, through\nthese case studies, we'll get some appreciation\nof how do we actually build",
    "start": "99560",
    "end": "105079"
  },
  {
    "text": "systems that are secure. And we have some preliminary\nschedule up on the website. If there's other topics you guys\nare particularly interested in,",
    "start": "105080",
    "end": "112310"
  },
  {
    "text": "or if there's particular\npapers you're excited about, just send us email and\nwe'll see if we can fit them in or do something.",
    "start": "112310",
    "end": "117530"
  },
  {
    "text": "We're pretty flexible. So if there's\nanything that you'd like to hear more\nabout, just let us know.",
    "start": "117530",
    "end": "123973"
  },
  {
    "text": "And in a similar vein, if\nyou ever have a question or if there's some mistake,\njust interrupt and ask",
    "start": "123973",
    "end": "131290"
  },
  {
    "text": "us what's going on\nin lecture, anytime. Security is, in many ways,\nall about the details",
    "start": "131290",
    "end": "138189"
  },
  {
    "text": "and getting everything right. And I will inevitably\nmake mistakes. So if something\ndoesn't seem right,",
    "start": "138190",
    "end": "143200"
  },
  {
    "text": "there's a good chance it's not. And you should just\ninterrupt and ask. And we'll figure\nout what's going on and what's the right\nway to do things.",
    "start": "143200",
    "end": "150730"
  },
  {
    "text": "And I guess in terms of\nthe class organization, the other large\npart of the class, in addition to\nlectures, is going",
    "start": "150730",
    "end": "156510"
  },
  {
    "text": "to be a series of\nlab assignments. The first one is already\nposted on the website. And these lab\nassignments will help",
    "start": "156510",
    "end": "162960"
  },
  {
    "text": "you go through understanding\nthe different range of security problems and how do you prevent\nthem in a simple web server.",
    "start": "162960",
    "end": "171220"
  },
  {
    "text": "So in lab one, which\nis out right now, you'll actually\ntake a web server that we give you and find ways\nto exploit buffer overflow",
    "start": "171220",
    "end": "178909"
  },
  {
    "text": "vulnerabilities in it and\ntake control of this website by just sending it\ncarefully-crafted requests",
    "start": "178910",
    "end": "184020"
  },
  {
    "text": "and packets. And in other labs,\nyou'll look at ways to defend the web server,\nto find bugs in the code,",
    "start": "184020",
    "end": "190150"
  },
  {
    "text": "to write worms that\nrun in the user's browser, and other kinds of\ninteresting security problems.",
    "start": "190150",
    "end": "198920"
  },
  {
    "text": "One thing that\nsurprises many students is that every lab uses\na different language.",
    "start": "198920",
    "end": "204739"
  },
  {
    "text": "So lab one is all\nabout C and Assembly. Lab two involves a\nlot of Python coding. Lab three will be\nsomething else.",
    "start": "204740",
    "end": "210980"
  },
  {
    "text": "Lab five will be JavaScript. And so on. This is sort of inevitable. And I sort of\napologize ahead of time",
    "start": "210980",
    "end": "216920"
  },
  {
    "text": "that you're going\nto have to learn all these languages if you\nhaven't seen them already. In some ways it's useful,\nbecause the real world",
    "start": "216920",
    "end": "222178"
  },
  {
    "text": "is like this. All the systems are\ncomplicated and composed of different parts. And in the long run,\nit'll be useful for you,",
    "start": "222178",
    "end": "228149"
  },
  {
    "text": "for your moral\ncharacter or something like that, to learn this stuff. But it will take\nsome preparation,",
    "start": "228149",
    "end": "233870"
  },
  {
    "text": "especially if you haven't\nseen these languages before. It might be helpful\nto start early. In particular, lab\none is going to rely",
    "start": "233871",
    "end": "240750"
  },
  {
    "text": "on a lot of subtle\ndetails of C and Assembly code that we don't really\nteach in other classes",
    "start": "240750",
    "end": "246040"
  },
  {
    "text": "here in as much detail. So it's probably a good\nidea to start early. And we'll try to get the TAs\nto hold office hours next week",
    "start": "246040",
    "end": "252290"
  },
  {
    "text": "where we'll do some sort\nof a tutorial session where we can help you get\nstarted with understanding what",
    "start": "252290",
    "end": "258700"
  },
  {
    "text": "a binary program looks\nlike, how to disassemble it, how to figure out what's\non the stack, and so on.",
    "start": "258700",
    "end": "265900"
  },
  {
    "text": "All right. And I guess the one other\nthing, we're actually videotaping lectures this year. So you might be able\nto watch these online.",
    "start": "265900",
    "end": "273030"
  },
  {
    "text": "We'll post them as soon\nas we get them ourselves from the video people. And the last bit\nof administrivia",
    "start": "273030",
    "end": "279340"
  },
  {
    "text": "is you should, if you\nhave questions online, we're using Piazza,\nso I'm sure you've",
    "start": "279340",
    "end": "284360"
  },
  {
    "text": "used this in other classes. All right. So before we dive into security,\nI need to tell you one thing.",
    "start": "284360",
    "end": "291020"
  },
  {
    "text": "There is a sort of rules\nthat MIT has for accessing MIT's network when you're,\nespecially, doing security",
    "start": "291020",
    "end": "298030"
  },
  {
    "text": "research or playing\nwith security problems, you should be aware that not\neverything you can technically",
    "start": "298030",
    "end": "303199"
  },
  {
    "text": "do is legal. And there's many things that you\nwill learn in this class that",
    "start": "303200",
    "end": "308449"
  },
  {
    "text": "are technically possible. We'll understand how systems\ncan be broken or compromised.",
    "start": "308450",
    "end": "313879"
  },
  {
    "text": "Doesn't mean you should go\nout and do this everywhere. And there's this link\nin the lecture notes",
    "start": "313880",
    "end": "319370"
  },
  {
    "text": "we'll post that has some rules\nthat are good guidelines. But in general, if\nyou're in doubt, ask one of the lecturers or a\nTA as to what you should do.",
    "start": "319370",
    "end": "328950"
  },
  {
    "text": "And hopefully it's not too\npuzzling, what's going on.",
    "start": "328950",
    "end": "334800"
  },
  {
    "text": "All right. So any questions about\nall this administrivia before we dive in? Feel free to ask questions.",
    "start": "334800",
    "end": "342150"
  },
  {
    "text": "OK. So what is security? So we'll start with\nsome basic stuff today.",
    "start": "342150",
    "end": "347240"
  },
  {
    "text": "And we'll look at just\nsome general examples of why security is hard\nand what it means to try",
    "start": "347240",
    "end": "353280"
  },
  {
    "text": "to build a secure system. Because there's\nnot really a paper, this will not have sort of deep\nintellectual content, maybe,",
    "start": "353280",
    "end": "359930"
  },
  {
    "text": "but it'll give you some\nbackground and context for how to think about secure systems. So security, in\ngeneral, is all about",
    "start": "359930",
    "end": "366889"
  },
  {
    "text": "achieving some goal when\nthere is an adversary present. ",
    "start": "366890",
    "end": "373410"
  },
  {
    "text": "So think of it as there's some\nbad guy out there that wants to make sure you don't succeed.",
    "start": "373410",
    "end": "378520"
  },
  {
    "text": "They want to steal your files. They want to delete your\nentire hard drive contents. They want to make\nsure nothing works",
    "start": "378520",
    "end": "384710"
  },
  {
    "text": "and your phone doesn't connect,\nall these things, right? And a secure system is\none that can actually",
    "start": "384710",
    "end": "390129"
  },
  {
    "text": "do something, regardless\nof what the bad guy is trying to do to you. So it's kind of cool that we\ncan actually potentially build",
    "start": "390130",
    "end": "395950"
  },
  {
    "text": "systems that are\nresilient to a whole range of bad guys,\nadversaries, attackers,",
    "start": "395950",
    "end": "401400"
  },
  {
    "text": "whatever you want to call them. And we can still build\ncomputer systems that allow us to get our work done.",
    "start": "401400",
    "end": "408010"
  },
  {
    "text": "And the general way to\nthink about security",
    "start": "408010",
    "end": "413430"
  },
  {
    "text": "is sort of break it\nup into three parts. One part is roughly\nthe policy that you",
    "start": "413430",
    "end": "420064"
  },
  {
    "text": "want your system to enforce. This is roughly the goal\nthat you want to achieve. Like well, maybe,\nonly I should be",
    "start": "420064",
    "end": "425430"
  },
  {
    "text": "able to read the\ngrades file for 6.858. Or maybe the TAs as well,\nand all the co-lecturers,",
    "start": "425430",
    "end": "431330"
  },
  {
    "text": "et cetera. But there is some statement\nabout what I want my system to be able to do. And then, if you\nwant sort of think",
    "start": "431330",
    "end": "438466"
  },
  {
    "text": "about what kinds of\npolicies you might write, typical ones have to do with\neither confidentiality of data,",
    "start": "438466",
    "end": "446850"
  },
  {
    "text": "so the grades file is only\naccessible to the 6.858 course staff.",
    "start": "446850",
    "end": "452330"
  },
  {
    "text": "Another example of\na security policy has something to\ndo with integrity. For example, only\nthe course staff can also modify the grades file.",
    "start": "452330",
    "end": "458604"
  },
  {
    "text": "Or only the course staff\ncan upload the final grades to the registrar's office. That'll be great. Then you can also think about\nthings like availability.",
    "start": "458604",
    "end": "467770"
  },
  {
    "text": "So for example, a website\nshould be available, even if the bad guys try\nto take it down and mount",
    "start": "467770",
    "end": "474039"
  },
  {
    "text": "some sort of a DOS-- Denial\nof Service-- attack on it. So this is all well and good.",
    "start": "474040",
    "end": "479180"
  },
  {
    "text": "So these are the policies\nthat we might actually care about from a system. But because it's security,\nthere's a bad guy involved.",
    "start": "479180",
    "end": "485219"
  },
  {
    "text": "We need to understand,\nwhat are we thinking the bad guy is going to do? And this is typically what\nwe call a threat model. ",
    "start": "485220",
    "end": "493090"
  },
  {
    "text": "And this is basically\njust a set of assumptions about the bad guy or adversary.",
    "start": "493090",
    "end": "503090"
  },
  {
    "text": "And it's important to have\nsome sort of assumptions about the bad guy because,\nif the bad guy is omnipresent",
    "start": "503090",
    "end": "509310"
  },
  {
    "text": "and is everywhere at once and\nyou can do anything they want, it's going to be hard to achieve\nsome semblance of security.",
    "start": "509310",
    "end": "516030"
  },
  {
    "text": "So for example,\nyou probably want to assume the bad guy doesn't\nexactly know your password, or they don't actually have\nphysical access to your phone",
    "start": "516030",
    "end": "523159"
  },
  {
    "text": "and your keys and your laptop. Otherwise, it's going to be hard\nto make some sort of progress in this game.",
    "start": "523159",
    "end": "530510"
  },
  {
    "text": "And turns out that while\nthis is actually quite tricky to come up with, but I guess\none general rule is it's",
    "start": "530510",
    "end": "536470"
  },
  {
    "text": "much better err on\nthe side of caution and being conservative in\npicking your threat model,",
    "start": "536470",
    "end": "541800"
  },
  {
    "text": "because bad guy might\nalways surprise you in terms of what they might\nbe able to do in practice.",
    "start": "541800",
    "end": "547290"
  },
  {
    "text": "And finally, in order to\nachieve security, in order to achieve our goal under\nthe set of assumptions,",
    "start": "547290",
    "end": "552980"
  },
  {
    "text": "we're going to look\nat some mechanism.  And this is the, basically,\nsoftware or hardware",
    "start": "552980",
    "end": "561720"
  },
  {
    "text": "or whatever part\nof system design, implementation,\net cetera, that's going to try to make sure\nour policy is followed",
    "start": "561720",
    "end": "570470"
  },
  {
    "text": "as long as the bad guy\nfollows the threat model. So the end result\nis that, as long",
    "start": "570470",
    "end": "576970"
  },
  {
    "text": "as our threat model was\ncorrect, hopefully we'll satisfy our policy. And it has to be the case that\nthe mechanism doesn't screw up.",
    "start": "576970",
    "end": "584100"
  },
  {
    "text": "Make sense? Fairly high level\nstory about how to think about\nthis kind of stuff.",
    "start": "584100",
    "end": "590470"
  },
  {
    "text": "So why is this so hard, right? It seems like a simple plan. You write down\nthese three things, and you're off and running.",
    "start": "590470",
    "end": "597180"
  },
  {
    "text": "But in practice, as you, I'm\nsure, have seen in the world, computer systems are\nalmost always compromised",
    "start": "597180",
    "end": "604490"
  },
  {
    "text": "in some way or another. And break ins are\npretty commonplace. And the big reason\nwhy security tends",
    "start": "604490",
    "end": "612209"
  },
  {
    "text": "to be a difficult problem\nis because what we have here is sort of, this will be\nfamiliar to those of you",
    "start": "612210",
    "end": "617260"
  },
  {
    "text": "took 6.033, this\nis a negative goal, meaning that we have to make\nsure our security policy is",
    "start": "617260",
    "end": "623270"
  },
  {
    "text": "followed regardless of\nwhat the attacker can do. So just by contrast, if you\nwant to build a file system,",
    "start": "623270",
    "end": "630730"
  },
  {
    "text": "and you want to make sure that\nmy TAs can access the grades",
    "start": "630730",
    "end": "636310"
  },
  {
    "text": "file, that's pretty easy. I just ask them, hey, can\nyou guys test and see? Can you access the grades file?",
    "start": "636310",
    "end": "641411"
  },
  {
    "text": "And if they all can\naccess it, done. The system works. But if I want to say that\nno one other than the TAs",
    "start": "641411",
    "end": "648070"
  },
  {
    "text": "can access the grades file,\nthis is a much harder problem to solve, because now\nI have to figure out what could all these non TA\npeople in the world to try",
    "start": "648070",
    "end": "656010"
  },
  {
    "text": "to get my grades file, right? They could try to just\nopen it and read it.",
    "start": "656010",
    "end": "661110"
  },
  {
    "text": "Maybe my file system\nwill disallow it. But they might try all\nkinds of other attacks, like guessing the\npassword for the TAs",
    "start": "661110",
    "end": "667060"
  },
  {
    "text": "or stealing the TAs laptops\nor breaking into the room or who knows, right? This is all stuff that\nwe have to really put",
    "start": "667060",
    "end": "674010"
  },
  {
    "text": "into our threat model. Probably for this class,\nI'm not that concerned about the grades file to worry about\nthese guys' laptops being",
    "start": "674010",
    "end": "681280"
  },
  {
    "text": "stolen from their dorm room. Although maybe I should be. I don't know. It's hard to tell, right? And as a result,\nthis security game",
    "start": "681280",
    "end": "687700"
  },
  {
    "text": "is often not so\nclear cut as to what the right set of\nassumptions to make is.",
    "start": "687700",
    "end": "692884"
  },
  {
    "text": "And it's only after the\nfact that you often realize, well should have\nthought of that. ",
    "start": "692884",
    "end": "699520"
  },
  {
    "text": "All right. And sort of, as a\nresult, this is very much an iterative process. And the thing you end up\nrealizing at every iteration",
    "start": "699520",
    "end": "706959"
  },
  {
    "text": "is, well, here's the\nweakest link into my system. Maybe I got the\nthreat model wrong. Maybe my mechanism had some bugs\nin it because it's a software",
    "start": "706960",
    "end": "713290"
  },
  {
    "text": "and it's going to\nbe large systems. They'll have lots of bugs. And you sort of fix them up.",
    "start": "713290",
    "end": "718490"
  },
  {
    "text": "You change your\nthreat model a bit. And you iterate and try\nto design a new system, and hopefully,\nmake things better.",
    "start": "718490",
    "end": "726720"
  },
  {
    "text": "So one possible interpretation\nof this class-- well, one danger-- is that you come\naway thinking, man, everything",
    "start": "726720",
    "end": "734360"
  },
  {
    "text": "is just broken. Nothing works. We should just give up\nand stop using computers. And this is one\npossible interpretation.",
    "start": "734360",
    "end": "741460"
  },
  {
    "text": "But it's probably not\nquite the right one. The reason this is\ngoing to come up or you're going\nto think this way",
    "start": "741460",
    "end": "746585"
  },
  {
    "text": "is because,\nthroughout this class, we're going to look at all\nthese different systems, and we're going to sort\nof push them to the edge. We're going to see, OK,\nwell, what if we do this?",
    "start": "746585",
    "end": "753100"
  },
  {
    "text": "Is it going to break? What if we do that? Is it going to break then? And inevitably,\nevery system is going to have some sort\nof a breaking point.",
    "start": "753100",
    "end": "758643"
  },
  {
    "text": "And we'll figure out, oh hey. This system, we can break\nit in if we push this way. And this system doesn't work\nunder these set of assumptions.",
    "start": "758643",
    "end": "766260"
  },
  {
    "text": "And it's inevitable\nthat every system will have a breaking point. But that doesn't mean that\nevery system is worthless.",
    "start": "766260",
    "end": "771380"
  },
  {
    "text": "It just means you\nhave to know when to use every system design. And it's sort of useful to\ndo this pushing exercise",
    "start": "771380",
    "end": "777360"
  },
  {
    "text": "to find the\nweaknesses so that you know when certain ideas work,\nwhen certain ideas are not",
    "start": "777360",
    "end": "783530"
  },
  {
    "text": "applicable. And in reality, this is a little\nmore fuzzy boundary, right?",
    "start": "783530",
    "end": "789190"
  },
  {
    "text": "The more secure you make\nyour system, the less likely you'll have some embarrassing\nstory on the front page of New",
    "start": "789190",
    "end": "794910"
  },
  {
    "text": "York Times saying,\nyour start up company leaked a million people's\nsocial security numbers.",
    "start": "794910",
    "end": "801460"
  },
  {
    "text": "And then you pay less money\nto recover from that disaster.",
    "start": "801460",
    "end": "806770"
  },
  {
    "text": "And I guess one sort of actually\npositive note on security is that, in many ways, security\nenables cool things that you",
    "start": "806770",
    "end": "813230"
  },
  {
    "text": "couldn't do before, because\nsecurity, especially mechanisms, that\nallow us to protect",
    "start": "813230",
    "end": "820170"
  },
  {
    "text": "against certain classes of\nattacks, are pretty powerful. As one example, the browser used\nto be fairly boring in terms",
    "start": "820170",
    "end": "826512"
  },
  {
    "text": "of what you could do with it. You could just view\nweb pages, maybe run some JavaScript code in it. But now there's all\nthese cool mechanisms",
    "start": "826512",
    "end": "832710"
  },
  {
    "text": "we'll learn about\nin a couple of weeks that allow you to run arbitrary\nx86 native code in the web",
    "start": "832710",
    "end": "837810"
  },
  {
    "text": "browser and make\nsure it doesn't do anything funny to your machine. And it can send-- and\nthere's a technique or system",
    "start": "837810",
    "end": "844154"
  },
  {
    "text": "called Native Client\nfrom Google that actually allows us to do this securely. And before, in order to run some\nnative game on your machine,",
    "start": "844154",
    "end": "851127"
  },
  {
    "text": "you'd have download and install\nit, click on lot's of dialogue boxes, say yes, I allow this. But now, you can just\nrun it in a browser,",
    "start": "851127",
    "end": "857420"
  },
  {
    "text": "no clicking required. It just runs. And the reason it's\nso easy and powerful is that our security mechanism\ncan sandbox this program",
    "start": "857420",
    "end": "865990"
  },
  {
    "text": "and not have to assume anything\nabout the user choosing the right game and not\nsome malicious game to play",
    "start": "865990",
    "end": "871730"
  },
  {
    "text": "in their computer, or\nsome other program to run. So in many ways, good\nsecurity mechanisms are going to enable constructing\ncool new systems that weren't",
    "start": "871730",
    "end": "880610"
  },
  {
    "text": "possible to construct before. All right. Make sense? Any questions about this story?",
    "start": "880610",
    "end": "890485"
  },
  {
    "text": "All right. So I guess in the\nrest of the lecture, I want to go through a bunch\nof different examples of how",
    "start": "890485",
    "end": "898320"
  },
  {
    "text": "security goes wrong. So, so far, we've seen\nhow you can think of it. But inevitably, it's\nuseful to see examples",
    "start": "898320",
    "end": "905790"
  },
  {
    "text": "of what not to do so that you\ncan have a better mindset when you're approaching\nsecurity problems.",
    "start": "905790",
    "end": "912470"
  },
  {
    "text": "And in this sort of breakdown\nof a security system, pretty much every one of\nthese three things goes wrong.",
    "start": "912470",
    "end": "918942"
  },
  {
    "text": "In practice, people\nget the policy wrong, people get the\nthreat model wrong, and people get the\nmechanism wrong. And let's, I guess, start\nwith policies and examples",
    "start": "918942",
    "end": "927280"
  },
  {
    "text": "of how you can screw\nup a system's policy. Maybe the cleanest or sort\nof simplest example of this",
    "start": "927280",
    "end": "935220"
  },
  {
    "text": "are account recovery questions. ",
    "start": "935220",
    "end": "941810"
  },
  {
    "text": "So typically, when you\nsign into a website, you provide a password.",
    "start": "941810",
    "end": "947240"
  },
  {
    "text": "But what happens if\nyou lose your password? Some sites will send\nyou email if you",
    "start": "947240",
    "end": "952570"
  },
  {
    "text": "lose your password with a\nlink to reset your password. So it's easy enough, if you\nhave another email address. But what if this is\nyour email provider?",
    "start": "952570",
    "end": "959400"
  },
  {
    "text": "So at least, several\nyears ago, Yahoo hosted email, webmail, for\nanyone on the internet.",
    "start": "959400",
    "end": "966660"
  },
  {
    "text": "And when you forgot\nyour Yahoo password, they couldn't really\nsend you email because you couldn't get it. So instead, they\nhad you register",
    "start": "966660",
    "end": "973420"
  },
  {
    "text": "a couple of questions with them\nthat hopefully only you know. And if you forget your password,\nyou can click on a link",
    "start": "973420",
    "end": "978650"
  },
  {
    "text": "and say, well, here's the\nanswers to my questions. Let me have my password again. And what turns out to\nbe the case is-- well,",
    "start": "978650",
    "end": "986360"
  },
  {
    "text": "some people failed to realize is\nthat this changes your policy, because before, the\npolicy of the system",
    "start": "986360",
    "end": "992800"
  },
  {
    "text": "is people that can log\nin are the people that know the password. And when you introduce\nthese recovery questions,",
    "start": "992800",
    "end": "998930"
  },
  {
    "text": "the policy becomes,\nwell, you can log in if you know either the password\nor those security questions.",
    "start": "998930",
    "end": "1004380"
  },
  {
    "text": "So it strictly weakens the\nsecurity of your system. And many people have actually\ntaken advantage of this. One sort of well known example\nis, I think a couple years ago,",
    "start": "1004380",
    "end": "1013410"
  },
  {
    "text": "Sarah Palin had an\nemail account at Yahoo. And her recovery questions\nwere things like, well,",
    "start": "1013410",
    "end": "1019390"
  },
  {
    "text": "where'd you go to school? What was your friend's name? What's your birthday? Et cetera.",
    "start": "1019390",
    "end": "1024959"
  },
  {
    "text": "These were all things written\non her Wikipedia page. And as a result, someone\ncan quite easily, and someone did, actually, get\ninto her Yahoo email account",
    "start": "1024960",
    "end": "1032839"
  },
  {
    "text": "just by looking up on Wikipedia\nwhat her high school was and what her birthday was. So you really have\nto think carefully",
    "start": "1032839",
    "end": "1038920"
  },
  {
    "text": "about the implications\nof different security policies you're making here.",
    "start": "1038920",
    "end": "1044819"
  },
  {
    "text": "Perhaps a more intricate and,\nmaybe, interesting example, is what happens when you have\nmultiple systems that start",
    "start": "1044819",
    "end": "1052720"
  },
  {
    "text": "interacting with one another. So there's this nice story\nabout a guy called Mat Honan.",
    "start": "1052720",
    "end": "1059340"
  },
  {
    "text": "Maybe you read this\nstory a year or two ago. He's a editor at this\nwired.com magazine.",
    "start": "1059340",
    "end": "1065900"
  },
  {
    "text": "And had a bit of a problem. Someone basically got\ninto his Gmail account and did lots of bad things.",
    "start": "1065900",
    "end": "1072340"
  },
  {
    "text": "But how did they do it, right? So it's kind of interesting. So all parties in\nthis story seem",
    "start": "1072340",
    "end": "1077640"
  },
  {
    "text": "to be doing reasonable things. But we'll see how they add\nup to something unfortunate. So we have Gmail. And Gmail lets you\nreset your password",
    "start": "1077640",
    "end": "1086580"
  },
  {
    "text": "if you forget, as do pretty\nmuch every other system. And the way you do\na reset at Gmail",
    "start": "1086580",
    "end": "1093669"
  },
  {
    "text": "is you send them\na reset request. And what they say\nis, well, you weren't",
    "start": "1093670",
    "end": "1099029"
  },
  {
    "text": "going to do this recovery\nquestions, at least not for this guy. What they do is they send you a\nrecovery link to a backup email",
    "start": "1099030",
    "end": "1104930"
  },
  {
    "text": "address, or some other\nemail address that you have. And helpful, they actually\nprint the email address for you. So for this guy's\naccount, someone",
    "start": "1104930",
    "end": "1111139"
  },
  {
    "text": "went and asked Gmail\nto reset the password. And they said, well, yeah. Sure. We just sent the recovery\nlink to this email,",
    "start": "1111139",
    "end": "1117080"
  },
  {
    "text": "foo@me.com, which was\nsome Apple email service.",
    "start": "1117080",
    "end": "1122089"
  },
  {
    "text": "OK, but the bad guy doesn't\nhave access to me.com, either. But they want to get\nthis password reset link to get access to Gmail.",
    "start": "1122089",
    "end": "1128790"
  },
  {
    "text": "Well, the way things\nworked was that, in Apple's case,\nthis me.com site,",
    "start": "1128790",
    "end": "1135980"
  },
  {
    "text": "allowed you to actually reset\nyour password if you know your billing address and the\nlast four digits of your credit",
    "start": "1135980",
    "end": "1143580"
  },
  {
    "text": "card number. So it's still not clear how\nyou're going to get this guy's-- well, home address,\nmaybe you could look it up",
    "start": "1143580",
    "end": "1150591"
  },
  {
    "text": "somewhere. This guy was a well\nknown person at the time. But where do you get the last\nfour digits of his credit card number?",
    "start": "1150591",
    "end": "1156640"
  },
  {
    "text": "Well, not clear, but\nlet's keep going further. So you need to send these\nthings to me.com to get access",
    "start": "1156640",
    "end": "1163510"
  },
  {
    "text": "to his email account there. Well, it turns out this guy\nhad an account at Amazon, which is another party in this story.",
    "start": "1163510",
    "end": "1171250"
  },
  {
    "text": "Amazon really wants\nyou to buy things. And as a result, they actually\nhave a fairly elaborate account",
    "start": "1171250",
    "end": "1178029"
  },
  {
    "text": "management system. And in particular, because they\nreally want you to buy stuff, they don't require\nyou to sign in",
    "start": "1178030",
    "end": "1184490"
  },
  {
    "text": "in order to purchase some\nitem with a credit card. So I can actually go on Amazon,\nor at least at the time,",
    "start": "1184490",
    "end": "1190710"
  },
  {
    "text": "I was able to go on Amazon\nand say, well, I'm this user. And I want to buy this\npack of toothbrushes.",
    "start": "1190710",
    "end": "1197490"
  },
  {
    "text": "And if I wanted to use\nthe saved credit card number in the guy's account, I\nshouldn't be able to do this.",
    "start": "1197490",
    "end": "1202640"
  },
  {
    "text": "But if I just was providing a\nnew credit card, what Amazon would do is, they can\nactually add a new credit",
    "start": "1202640",
    "end": "1208280"
  },
  {
    "text": "card to some guy's account.",
    "start": "1208280",
    "end": "1213500"
  },
  {
    "text": "So that seems not\ntoo bad, right? I'm basically\nordering toothbrushes through one of your\nAmazon accounts.",
    "start": "1213500",
    "end": "1218839"
  },
  {
    "text": "But it's not your\ncredit card anyway. It's just my credit\ncard number being used. So it's not clear how\nthings go wrong yet.",
    "start": "1218839",
    "end": "1224220"
  },
  {
    "text": "But Amazon had\nanother interface. All these are\ncomplicated systems. And Amazon had an interface\nfor password reset.",
    "start": "1224220",
    "end": "1231700"
  },
  {
    "text": "And in order to reset\na password in Amazon, what you had to provide is just\none of the user's credit card",
    "start": "1231700",
    "end": "1238230"
  },
  {
    "text": "numbers. So I can order stuff and\nadd a credit card number to your account. And then I can say, hey, I\nwant to reset my password.",
    "start": "1238230",
    "end": "1245298"
  },
  {
    "text": "This is one of my\ncredit card numbers. And this, in fact, worked. So this is where the bad guy\ngot a hold of this guy's, Mat's,",
    "start": "1245298",
    "end": "1253590"
  },
  {
    "text": "Amazon account. But OK. How do you fish out\nthe credit card number for resetting Apple's site?",
    "start": "1253590",
    "end": "1259350"
  },
  {
    "text": "Well, Amazon was\nactually very careful. Even if you break into\nsomeone's Amazon account, it will not print you\nthe saved credit card",
    "start": "1259350",
    "end": "1265620"
  },
  {
    "text": "numbers from that person. But it will show the\nlast four digits. Just so you know which credit\ncard you're talking about.",
    "start": "1265620",
    "end": "1271616"
  },
  {
    "text": "So you can list all the credit\ncards, other than the one you added. You can then go and\nbreak into me.com.",
    "start": "1271616",
    "end": "1276770"
  },
  {
    "text": "You can click on this\nlink and get access to the guy's Gmail account. This is all very subtle stuff.",
    "start": "1276770",
    "end": "1282530"
  },
  {
    "text": "And in isolation,\neach system seems to be doing somewhat\nsensible things. But it's actually\nquite hard to reason",
    "start": "1282530",
    "end": "1288590"
  },
  {
    "text": "about these vulnerabilities\nand weaknesses unless you have this whole\npicture explained to you",
    "start": "1288590",
    "end": "1294480"
  },
  {
    "text": "and you've sort of put\nall the pieces together. So this is actually\nfairly tricky stuff.",
    "start": "1294480",
    "end": "1301310"
  },
  {
    "text": "And unfortunately, well,\nmuch like for every one of these three categories, the\nanswer for how to avoid this",
    "start": "1301310",
    "end": "1307470"
  },
  {
    "text": "is often think hard\nand be careful. I guess the one general plan\nis, be conservative in terms",
    "start": "1307470",
    "end": "1314330"
  },
  {
    "text": "of what you set\nyour policy to be, to maybe not depend on things\nother sites might reveal.",
    "start": "1314330",
    "end": "1321539"
  },
  {
    "text": "So well, I'm not sure if any\nreally great advice would have prevented this problem.",
    "start": "1321540",
    "end": "1326942"
  },
  {
    "text": "But now you know. And now you'll make\nother mistakes. There's many other\nexamples of policies",
    "start": "1326942",
    "end": "1333970"
  },
  {
    "text": "going wrong and allowing a\nsystem to be compromised. That's interesting enough.",
    "start": "1333970",
    "end": "1339660"
  },
  {
    "text": "But let's look at how people\nmight screw up threat models. So let me turn off\nthis blue square.",
    "start": "1339660",
    "end": "1348020"
  },
  {
    "text": "OK. So what are examples of\nthreat models that go wrong?",
    "start": "1348020",
    "end": "1356060"
  },
  {
    "text": "Well, probably a big one in\npractice is human factors.",
    "start": "1356060",
    "end": "1362410"
  },
  {
    "text": "So we often make\nassumptions about what people will do in\na system, like they",
    "start": "1362410",
    "end": "1369039"
  },
  {
    "text": "will pick a good,\nstrong password, or they will not click\non random websites that they get through email\nand enter their password there.",
    "start": "1369040",
    "end": "1376800"
  },
  {
    "text": "So these are-- well, as\nyou probably suspect, and in practice,\nhappens to be the case, these are not good\nassumptions in all cases.",
    "start": "1376800",
    "end": "1383800"
  },
  {
    "text": "And people pick bad passwords. And people will click\non random links. And people will\nenter their password",
    "start": "1383800",
    "end": "1390350"
  },
  {
    "text": "on sites that are actually\nnot the right site at all. And they will not be\npaying a lot of attention.",
    "start": "1390350",
    "end": "1396990"
  },
  {
    "text": "So you probably don't want\nto have threat models that make very strong\nassumptions about what humans will do because\ninevitably, something",
    "start": "1396990",
    "end": "1403433"
  },
  {
    "text": "will go wrong. Make sense? Any questions?",
    "start": "1403433",
    "end": "1409220"
  },
  {
    "text": "All right. Another sort of good thing\nto watch out in threat models is that they sometimes\nchange over time.",
    "start": "1409220",
    "end": "1415860"
  },
  {
    "text": "Or whether something is\na good assumption or not changes over time. One example of this is actually\nat MIT in the mid '90s-- mid",
    "start": "1415860",
    "end": "1425420"
  },
  {
    "text": "'80s, actually--\nProject Athena developed this system called Kerberos. And we'll read about this in a\ncouple of weeks in this class.",
    "start": "1425420",
    "end": "1432830"
  },
  {
    "text": "And at the time, they were sort\nof figuring out, well, Kerberos is going to be based\non cryptography. So we need to pick\nsome size keys",
    "start": "1432830",
    "end": "1439331"
  },
  {
    "text": "to make sure they're\nnot going to be guessed by arbitrary people. And they said, OK. Well you know, 56-bit\nkeys, at the time,",
    "start": "1439331",
    "end": "1446120"
  },
  {
    "text": "for this cypher called DES,\nseemed like a plausible size. Maybe not great, but certainly\nnot entirely unreasonable.",
    "start": "1446120",
    "end": "1453700"
  },
  {
    "text": "And this was in the mid '80s. But then you know, this system\ngot popular and got used a lot. MIT still uses it.",
    "start": "1453700",
    "end": "1459399"
  },
  {
    "text": "And they never really went\nback to seriously revisit this assumption. And then, a couple years ago,\na group of 6.858 students",
    "start": "1459400",
    "end": "1467244"
  },
  {
    "text": "figured out that actually, yeah,\nyou can just break this, right? It's easy enough to enumerate\nall the 256 keys these days.",
    "start": "1467244",
    "end": "1474480"
  },
  {
    "text": "Computers are so fast,\nyou can just do it. And as a result,\nthey were able to, with the help of some\nhardware from a particular web",
    "start": "1474480",
    "end": "1482619"
  },
  {
    "text": "service-- we'll have some links\nthe lecture notes-- they were able to get, basically, anyone's\nKerberos account key in roughly",
    "start": "1482619",
    "end": "1490170"
  },
  {
    "text": "a day. And so this assumption\nwas good in the mid 1980s. No longer a good\nassumption today.",
    "start": "1490170",
    "end": "1497210"
  },
  {
    "text": "So you really have to\nmake sure your assumptions sort of keep up with the times.",
    "start": "1497210",
    "end": "1502220"
  },
  {
    "text": "Maybe a more timely example\nis, if your adversary-- or if you're worried\nabout government attacks,",
    "start": "1502220",
    "end": "1508980"
  },
  {
    "text": "you might realize that you\nshouldn't trust hardware even these days, right? There was all these\nrevelations about what",
    "start": "1508980",
    "end": "1514870"
  },
  {
    "text": "the NSA is capable of doing. And they have\nhardware back doors that they can insert\ninto computers.",
    "start": "1514870",
    "end": "1520922"
  },
  {
    "text": "And maybe up until a couple\nyears ago, well, who knows? I guess we didn't\nknow about this stuff. So maybe it was a\nreasonable assumption",
    "start": "1520922",
    "end": "1527360"
  },
  {
    "text": "to assume your\nlaptop is not going to be compromised physically,\nthe hardware itself. But now you know.",
    "start": "1527360",
    "end": "1532670"
  },
  {
    "text": "Actually, if you're worried\nabout the government being after you, you probably\nhave a much harder problem to deal with because\nyour laptop might",
    "start": "1532670",
    "end": "1539008"
  },
  {
    "text": "be compromised\nphysically, regardless of what you install in it. So we really have to be\ncareful with your threat model",
    "start": "1539009",
    "end": "1544870"
  },
  {
    "text": "and really sort of\nbalance it against who you think is out to get you. I think it's going to be a very\nexpensive proposition if you're",
    "start": "1544870",
    "end": "1550860"
  },
  {
    "text": "going to try to protect\nyourself from the NSA, really. On the other hand, if you're\njust protecting yourself from random other\nstudents that are,",
    "start": "1550860",
    "end": "1557772"
  },
  {
    "text": "I don't know, snooping around\nin your Athena home directory or whatnot, maybe you\ndon't have to worry about this stuff as much.",
    "start": "1557772",
    "end": "1563210"
  },
  {
    "text": "So it's really a balancing game\nand picking the right threat model.",
    "start": "1563210",
    "end": "1568610"
  },
  {
    "text": "Another example of a bad threat\nmodel shows up in the way",
    "start": "1568610",
    "end": "1575370"
  },
  {
    "text": "secure websites these days\ncheck certificates of a website that you're connecting to. So in this SSL protocol or TLS,\nwhen you connect to a website",
    "start": "1575370",
    "end": "1583350"
  },
  {
    "text": "and it says HTTPS-- we'll\ntalk much more about this in later lectures--\nbut what happens",
    "start": "1583350",
    "end": "1588710"
  },
  {
    "text": "is that the site you're\nconnecting to presents you a certificate signed by one\nof the certificate authorities",
    "start": "1588710",
    "end": "1594799"
  },
  {
    "text": "out there that attests\nthat, yep, this key belongs to Amazon.com.",
    "start": "1594800",
    "end": "1599909"
  },
  {
    "text": "And architecturally,\nthe sort of mistake or the bad threat model\nthat these guys assumed",
    "start": "1599910",
    "end": "1606937"
  },
  {
    "text": "is that all these CAs are\ngoing to be trustworthy. They will never make a mistake. And in fact, the\nway system works",
    "start": "1606937",
    "end": "1612180"
  },
  {
    "text": "is that there's hundreds\nof these CAs out there. The Indian postal authority,\nI think, has a CA.",
    "start": "1612180",
    "end": "1618390"
  },
  {
    "text": "The Chinese government has a CA. Lots of entities are certificate\nauthorities in this design.",
    "start": "1618390",
    "end": "1624780"
  },
  {
    "text": "And any of them can\nmake a certificate for any host name\nor a domain name. And as a result, what\nhappens if you're a bad guy,",
    "start": "1624780",
    "end": "1631750"
  },
  {
    "text": "if you want to compromise Gmail\nor if you want to impersonate Gmail's website, you\njust have to compromise one of these\ncertificate authorities.",
    "start": "1631750",
    "end": "1638280"
  },
  {
    "text": "And it turns out the\nweakest link is probably some poorly run authority\nsomewhere in some, you know, not particularly\nup to date country.",
    "start": "1638280",
    "end": "1646730"
  },
  {
    "text": "Who knows, right? And as a result, it's\nprobably a bad assumption to build a system--\nor it's a bad idea",
    "start": "1646730",
    "end": "1653216"
  },
  {
    "text": "to build a system\naround the assumption that you'll manage to\nkeep all 300 certificate",
    "start": "1653216",
    "end": "1658870"
  },
  {
    "text": "authorities spread out around\nthe globe perfectly secure. But yet, that's the\nassumption underpinning",
    "start": "1658870",
    "end": "1664560"
  },
  {
    "text": "the security mechanism of\ntoday's SSL protocol used by web browsers.",
    "start": "1664560",
    "end": "1671900"
  },
  {
    "text": "And there's sort of many\nother, I guess, examples that are things you might\nnot have thought of.",
    "start": "1671900",
    "end": "1678510"
  },
  {
    "text": "Another sort of amusing example\nfrom the 1980s was DARPA.",
    "start": "1678510",
    "end": "1684080"
  },
  {
    "text": "This defense\nagency, at the time, really wanted to build\nsecure operating systems.",
    "start": "1684080",
    "end": "1690309"
  },
  {
    "text": "And they actually\nwent so far as to get a bunch of universities\nand researchers to build secure OS prototypes.",
    "start": "1690310",
    "end": "1697840"
  },
  {
    "text": "And then they actually\ngot a red team, like a team of bad guys\npretending to be the attackers,",
    "start": "1697840",
    "end": "1703516"
  },
  {
    "text": "and told them, well, go break\ninto these secure operating systems any way you can. We actually want to\nknow, is it secure?",
    "start": "1703516",
    "end": "1709300"
  },
  {
    "text": "And it's kind of amusing,\nsome of the surprising ways they compromised the systems. One was that there\nwas this OS research",
    "start": "1709300",
    "end": "1716960"
  },
  {
    "text": "team that seemed to have\na perfectly secure OS, but it got compromised. And the way it happened is that\nthe server in which the source",
    "start": "1716960",
    "end": "1722940"
  },
  {
    "text": "code of the operating\nsystem was stored was some development\nmachine in someone's office that wasn't secured at all. But that had all\nthe source code.",
    "start": "1722940",
    "end": "1728660"
  },
  {
    "text": "So the bad guys broke\ninto that server. It was not protected very well. Changed the source code\nof the operating system to introduce a back door.",
    "start": "1728660",
    "end": "1734690"
  },
  {
    "text": "And then, when the researchers\nbuilt their operating systems, well, it had this back door. And the bad guys were\nable to break in.",
    "start": "1734690",
    "end": "1740755"
  },
  {
    "text": "So you really have to think\nabout all the possible sort of assumptions\nyou're making about",
    "start": "1740755",
    "end": "1745800"
  },
  {
    "text": "where your software\nis coming from, about how the bad\nguy can get in, in order to make sure your\nsystem is really secure.",
    "start": "1745800",
    "end": "1754150"
  },
  {
    "text": "And there's many other examples\nin lecture notes, if you want. So I'm using anecdotes.",
    "start": "1754150",
    "end": "1759240"
  },
  {
    "text": "You can page through those.  Probably the most pervasive\nproblem that shows up,",
    "start": "1759240",
    "end": "1768580"
  },
  {
    "text": "of course, is in\nmechanisms, though. And in part, it's\nbecause mechanisms are the most complicated\npart of the story.",
    "start": "1768580",
    "end": "1775490"
  },
  {
    "text": "It's the entirety of all\nthe software and hardware and all that sort\nof system components",
    "start": "1775490",
    "end": "1781000"
  },
  {
    "text": "that make up what is trying to\nenforce your security policy. And there's no end of ways\nin which mechanisms can fail.",
    "start": "1781000",
    "end": "1789960"
  },
  {
    "text": "And, partly as a result,\nmuch of this class",
    "start": "1789960",
    "end": "1795070"
  },
  {
    "text": "will focus pretty\nheavily on mechanisms and how do you make\nmechanisms that are secure,",
    "start": "1795070",
    "end": "1800480"
  },
  {
    "text": "that provide correct enforcement\nof security policies. And we'll talk about threat\nmodels and policies as well.",
    "start": "1800480",
    "end": "1806929"
  },
  {
    "text": "But turns out it's much\neasier to make clean,",
    "start": "1806930",
    "end": "1812010"
  },
  {
    "text": "sort of crisp statements\nabout mechanisms and ways they work and don't work, as\nopposed to policies and threat",
    "start": "1812010",
    "end": "1818100"
  },
  {
    "text": "models which, really,\nyou have to figure out how to fit them into\na particular context where you're using a system.",
    "start": "1818100",
    "end": "1824980"
  },
  {
    "text": "So let's look at some examples\nof, I guess, mechanism bugs.",
    "start": "1824980",
    "end": "1830320"
  },
  {
    "text": "One that you might have heard\nin the last couple of days was a problem in the security\nmechanism in Apple's cloud",
    "start": "1830320",
    "end": "1838380"
  },
  {
    "text": "infrastructure called iCloud.  Well actually, any one\nof you that has an iPhone",
    "start": "1838380",
    "end": "1845429"
  },
  {
    "text": "might be using this\niCloud service. They basically provide\nstorage for files and let you find your iPhone\nif you lose it, and probably",
    "start": "1845430",
    "end": "1853289"
  },
  {
    "text": "lots of other useful features. And I think it's some relative\nof this me.com service",
    "start": "1853290",
    "end": "1858779"
  },
  {
    "text": "that was implicated in this\nscheme a couple years back. And the problem that\nsomeone discovered",
    "start": "1858780",
    "end": "1864840"
  },
  {
    "text": "in this iCloud\nservice is that they didn't enforce the same sort\nof mechanism at all interfaces.",
    "start": "1864840",
    "end": "1871960"
  },
  {
    "text": "OK, so what does\niCloud look like? Well, it basically provides lots\nof services for the same sort",
    "start": "1871960",
    "end": "1878410"
  },
  {
    "text": "of set of accounts. So maybe you have your\nfile storage on iCloud. Maybe you have\nyour photo sharing.",
    "start": "1878410",
    "end": "1886087"
  },
  {
    "text": "Maybe you have other interfaces. And one of the\ninterfaces into iCloud-- these are all sort\nof at different APIs that they provide-- was this\nfeature to find my iPhone,",
    "start": "1886087",
    "end": "1895130"
  },
  {
    "text": "I think. And all these interfaces\nwant to make sure that you are the right user,\nyou're authenticated correctly.",
    "start": "1895130",
    "end": "1902580"
  },
  {
    "text": "And unfortunately,\nthe developers all this iCloud system, you know\nit's a giant piece of software.",
    "start": "1902580",
    "end": "1908190"
  },
  {
    "text": "I'm sure lots of\ndevelopers worked on this. But on this\nparticular interface, the find my iPhone\ninterface, when",
    "start": "1908190",
    "end": "1915480"
  },
  {
    "text": "you tried to log in with\na username and password, they didn't keep track of how\nmany times you tried to log in.",
    "start": "1915480",
    "end": "1922420"
  },
  {
    "text": "And the reason is important is\nthat, as I mentioned earlier, humans are not that great\nat picking good passwords.",
    "start": "1922420",
    "end": "1927930"
  },
  {
    "text": "So actually building a system\nthat authenticates users with passwords is pretty tricky. We'll actually read a whole\npaper about this later on.",
    "start": "1927930",
    "end": "1934820"
  },
  {
    "text": "But one good strategy\nis, there's probably a million passwords out\nthere that will account",
    "start": "1934820",
    "end": "1942170"
  },
  {
    "text": "for 50% percent of accounts. So if you can guess,\nmake a million attempts at someone's\naccount, then there's",
    "start": "1942170",
    "end": "1948900"
  },
  {
    "text": "a good chance you'll get\ntheir password because people actually pick\npredictable passwords. And one way to\ntry to defeat this",
    "start": "1948900",
    "end": "1954494"
  },
  {
    "text": "is to make sure that\nyour system doesn't allow an arbitrary\nnumber of attempts to log in to an account.",
    "start": "1954494",
    "end": "1959870"
  },
  {
    "text": "Maybe after three\nor 10 tries, you should say, well,\nyou've had enough tries.",
    "start": "1959870",
    "end": "1964950"
  },
  {
    "text": "Time out. You can try again in 10\nminutes or in an hour. And this way you really\nslow down the attacker.",
    "start": "1964950",
    "end": "1970870"
  },
  {
    "text": "So they can only make a\nhandful of guesses a day, instead of millions of guesses.",
    "start": "1970870",
    "end": "1976216"
  },
  {
    "text": "And as a result, even if\nyou have not the greatest of passwords, it's going to\nbe pretty hard for someone to guess it.",
    "start": "1976217",
    "end": "1981570"
  },
  {
    "text": "What would happen is that iCloud\nhad this password guessing",
    "start": "1981570",
    "end": "1986990"
  },
  {
    "text": "prevention or, basically,\nback off, on some interfaces, like if you tried to log\nin through other interfaces",
    "start": "1986990",
    "end": "1992730"
  },
  {
    "text": "and you failed 10 times,\nit would say, well, sorry. You have to wait\nuntil you try again. But on this find my\niPhone interface,",
    "start": "1992730",
    "end": "1998710"
  },
  {
    "text": "they forget this check. That's probably, you\nknow, some guy just forgot to call this\nfunction on this API. But the result is that, for\nthe same set of accounts,",
    "start": "1998710",
    "end": "2006867"
  },
  {
    "text": "a bad guy would be able\nto now guess your password through this interface at\nmillions of attempts per day",
    "start": "2006867",
    "end": "2012889"
  },
  {
    "text": "easily, because this is just\nlimited up to how fast they can send packets to\nthis iCloud thing. And they can probably\nguess your password",
    "start": "2012890",
    "end": "2019160"
  },
  {
    "text": "with pretty good accuracy, or\nwith pretty good success rate, after making many guesses.",
    "start": "2019160",
    "end": "2026779"
  },
  {
    "text": "And this led to some\nunfortunate break ins. And people's confidential\ndata got stolen from this iCloud service.",
    "start": "2026780",
    "end": "2034870"
  },
  {
    "text": "So this is sort of an example\nof you had the right policy. Only the user and\nthe right password",
    "start": "2034870",
    "end": "2041120"
  },
  {
    "text": "would get you\naccess to the files. You even had the\nright threat model that, well, the bad guy might\nbe able to guess the password.",
    "start": "2041120",
    "end": "2046809"
  },
  {
    "text": "So we'll have to break limit\nthe number of guess attempts. But he just screwed up, like\nthe mechanism had a bug in it.",
    "start": "2046810",
    "end": "2052250"
  },
  {
    "text": "He just forgot to enforce this\nright policy and mechanism at some interface. And this shows up again\nand again in systems,",
    "start": "2052250",
    "end": "2059520"
  },
  {
    "text": "where just made a mistake and\nit has pretty drastic effects on the security of\nthe overall system.",
    "start": "2059520",
    "end": "2067000"
  },
  {
    "text": "This make sense? Any questions so far? ",
    "start": "2067000",
    "end": "2073290"
  },
  {
    "text": "All right. OK. So another example-- this\nis sort of an example of you",
    "start": "2073290",
    "end": "2079148"
  },
  {
    "text": "forget to check for\npassword guessing attempts. There's many other\nthings you can forget.",
    "start": "2079149",
    "end": "2084690"
  },
  {
    "text": "You could forget to check for\naccess control altogether. So one example is, Citibank\nhad a website-- actually, still",
    "start": "2084690",
    "end": "2093179"
  },
  {
    "text": "has a website that allows you\nto look at your credit card account information.",
    "start": "2093179",
    "end": "2098279"
  },
  {
    "text": "So if you have a credit\ncard with Citibank, you go to this\nwebsite, it tells you, yeah, you have this credit card. Here's all the charges,\nall this great stuff.",
    "start": "2098280",
    "end": "2104160"
  },
  {
    "text": "And the workflow a couple\nof years ago was that you go to some site, you provide a\nlog in username and password,",
    "start": "2104160",
    "end": "2112710"
  },
  {
    "text": "and you get redirected\nto another URL, which is something like, I\ndon't know, I'm guessing,",
    "start": "2112710",
    "end": "2118130"
  },
  {
    "text": "but basically like\nciti.com/account?id= you know,",
    "start": "2118130",
    "end": "2123190"
  },
  {
    "text": "whatever, one two three four. And it turns out that some\nguy figured out, well,",
    "start": "2123190",
    "end": "2129422"
  },
  {
    "text": "if you change this\nnumber, you just get someone else's account. And it's not clear quite\nhow to think of this.",
    "start": "2129422",
    "end": "2137510"
  },
  {
    "text": "One possibility is that these\nguys were just thinking right, but they, again, forgot to\ncheck a function in this account",
    "start": "2137510",
    "end": "2143020"
  },
  {
    "text": "page that, not only do I\nhave a valid ID number, but it's also the ID\nnumber of the guy that's",
    "start": "2143020",
    "end": "2148520"
  },
  {
    "text": "currently logged in. It's an important check to me. But it's easy to forget.",
    "start": "2148520",
    "end": "2153759"
  },
  {
    "text": "Another thing is, maybe\nthese guys were thinking, no, no one could hit URLs. Maybe they had a bad\nthreat model, right? Maybe they're\nthinking, the URL--",
    "start": "2153759",
    "end": "2160450"
  },
  {
    "text": "if I don't print this URL,\nno one can click on it. It's like a bad threat model. So maybe that's-- well, it's\nhard to tell exactly what went",
    "start": "2160450",
    "end": "2167480"
  },
  {
    "text": "wrong. But anyway, these\nmistakes do happen. And they show up a lot.",
    "start": "2167480",
    "end": "2172860"
  },
  {
    "text": "So easy to have\nsmall, seemingly, bugs in your mechanism lead to\npretty unfortunate consequences.",
    "start": "2172860",
    "end": "2184430"
  },
  {
    "text": "Another example that's not\nso much in missing checks is a problem that\nshowed up on Android",
    "start": "2184430",
    "end": "2190990"
  },
  {
    "text": "phones a couple of months ago. Maybe I'll use this\nboard over here.",
    "start": "2190990",
    "end": "2198070"
  },
  {
    "text": "So the problem was related to\nBitcoin, which is this-- well, I'm sure you've heard--\nthis electronic currency",
    "start": "2198070",
    "end": "2204480"
  },
  {
    "text": "system that's pretty\npopular these days. And the way that Bitcoin\nworks, at a very high level,",
    "start": "2204480",
    "end": "2214650"
  },
  {
    "text": "is that your balance\nof Bitcoins is associated with a private key.",
    "start": "2214650",
    "end": "2220900"
  },
  {
    "text": "And if you have\nsomeone's private key you can, of course,\nspend their Bitcoins. So the security of Bitcoin\nrelies quite heavily",
    "start": "2220900",
    "end": "2230610"
  },
  {
    "text": "on no one else knowing\nyour private key. It's kind of like a password,\nexcept it's even more",
    "start": "2230610",
    "end": "2235720"
  },
  {
    "text": "important, because people can\nprobably make lots of guesses at your private key. And there's no real server\nthat's checking your key.",
    "start": "2235720",
    "end": "2241396"
  },
  {
    "text": "It's just cryptography. So any machine can try\nto make lots of guesses at your private key. And if they guess it, then\nthey can transfer your Bitcoins",
    "start": "2241396",
    "end": "2248380"
  },
  {
    "text": "to someone else. And as a result, it's\ncritically important that you generate\ngood, random keys",
    "start": "2248380",
    "end": "2254910"
  },
  {
    "text": "that no one else can guess. And there are people\nusing Bitcoin on Android.",
    "start": "2254910",
    "end": "2261220"
  },
  {
    "text": "And the Android applications\nfor Bitcoin were getting random values for these keys using this\nJava API called SecureRandom(),",
    "start": "2261220",
    "end": "2271210"
  },
  {
    "text": "which sounds great, but as\npeople figured out, well, OK. So what it is, right, it doesn't\nreally get real random numbers.",
    "start": "2271210",
    "end": "2279080"
  },
  {
    "text": "Inside of it, there's\nthis construction called Pseudorandom\nNumber Generator,",
    "start": "2279080",
    "end": "2284090"
  },
  {
    "text": "or PRNG that, given\na particular seed value, like you get\nmaybe a couple of hundred",
    "start": "2284090",
    "end": "2289540"
  },
  {
    "text": "bits of randomness and you\nshove it into this PRNG, you can keep asking it for more\nrandomness and sort of stretch",
    "start": "2289540",
    "end": "2295410"
  },
  {
    "text": "these random bits into as\nmany random bits as you want. So you see them\ninitially, and then you",
    "start": "2295410",
    "end": "2302126"
  },
  {
    "text": "can generate as many\nrandom bits as you want. And for various cryptographic\nreasons I won't go into here, it actually works.",
    "start": "2302126",
    "end": "2307330"
  },
  {
    "text": "If you give it a couple of\nhundred really good random bits initially, it's going to\nbe very hard for anyone to predict what the pseudorandom\nvalues it's generating are.",
    "start": "2307330",
    "end": "2317380"
  },
  {
    "text": "But the problem is\nthat this Java library had a small bug in it. In some set of\ncircumstances, it forgot",
    "start": "2317380",
    "end": "2324980"
  },
  {
    "text": "to initialize the\nPRNG with a seed, so it was just all zeros, which\nmeans that everyone could just",
    "start": "2324980",
    "end": "2330022"
  },
  {
    "text": "figure out what your\nrandom numbers were. If they start with\nzeros, they'll produce the same\nrandom numbers as you, which means they'll produce\nthe same private key as you.",
    "start": "2330022",
    "end": "2337090"
  },
  {
    "text": "So they can just generate\nthe same private key and transfer your Bitcoins. So this is, again, a\nsmall or not small bug,",
    "start": "2337090",
    "end": "2345400"
  },
  {
    "text": "depending on, I\nguess, who is asking. But nonetheless, right? Another example of small\nprogramming mistakes",
    "start": "2345400",
    "end": "2352500"
  },
  {
    "text": "leading to pretty\ncatastrophic results. Lot's of people got their\nBitcoin balances stolen because of this weakness.",
    "start": "2352500",
    "end": "2359400"
  },
  {
    "text": "Of course, the fix is\npretty simple at some level. You change the\nJava implementation of SecureRandom() to always\nseed this PRNG with random input",
    "start": "2359400",
    "end": "2368270"
  },
  {
    "text": "bits. And then, hopefully,\nyou're in good shape. But still, that's yet another\nexample of mechanism failure.",
    "start": "2368270",
    "end": "2376532"
  },
  {
    "text": "Yeah? AUDIENCE: Just to be clear,\nis this a different attack from the DSA\nsignature randomness?",
    "start": "2376532",
    "end": "2382096"
  },
  {
    "text": "PROFESSOR: Well yeah. So the actual problem\nis a little bit more complicated, as\nyou're hinting at. The problem is, even\nif you didn't generate",
    "start": "2382096",
    "end": "2388700"
  },
  {
    "text": "your key on the Android\ndevice in the first place, the particular signature\nscheme used by Bitcoin",
    "start": "2388700",
    "end": "2396150"
  },
  {
    "text": "assumes that every time you\ngenerate a new signature with that key, you\nuse a fresh, what's",
    "start": "2396150",
    "end": "2401310"
  },
  {
    "text": "called a nonce, for\ngenerating that signature. And if you ever generate two\nsignatures with the same nonce,",
    "start": "2401310",
    "end": "2407270"
  },
  {
    "text": "then someone can figure\nout what your key is. The story is pretty similar. But the details are\na little different. So yeah, even if you actually\ngenerated your key somewhere",
    "start": "2407270",
    "end": "2414310"
  },
  {
    "text": "else and your key was great,\nit's just that every time you generate a signature,\nyou would--",
    "start": "2414310",
    "end": "2419840"
  },
  {
    "text": "and you generated two signatures\nwith exactly the same nonce, or random value, someone\ncould apply some clever math",
    "start": "2419840",
    "end": "2426650"
  },
  {
    "text": "to your signatures and sort\nof extract your public key out of it. Or private key,\nmore importantly.",
    "start": "2426650",
    "end": "2434240"
  },
  {
    "text": "All right. Other questions about these\nproblems, examples, et cetera?",
    "start": "2434240",
    "end": "2440609"
  },
  {
    "text": "All right. So I guess, one thing I wanted\nto point out is that actually,",
    "start": "2440610",
    "end": "2446569"
  },
  {
    "text": "well, as you're\nstarting to appreciate, is that in computer security,\nalmost every detail has",
    "start": "2446570",
    "end": "2452829"
  },
  {
    "text": "a chance of really mattering. If you screw up almost something\nseemingly inconsequential,",
    "start": "2452830",
    "end": "2458390"
  },
  {
    "text": "like forgetting to check\nsomething, or this, or forgetting to\ninitialize the random seed, it can have pretty\ndramatic consequences",
    "start": "2458390",
    "end": "2464980"
  },
  {
    "text": "for the overall system. And you really have to\nbe very clear about, what is the specification\nof your system?",
    "start": "2464980",
    "end": "2471510"
  },
  {
    "text": "What is it doing? Exactly what are all\nthe corner cases? And a good way to sort of\nthink of breaking a system",
    "start": "2471510",
    "end": "2477170"
  },
  {
    "text": "or, conversely, figure out\nif your system is secure, is to really push\nall the edge cases, like what happens if my\ninput is just large enough?",
    "start": "2477170",
    "end": "2483950"
  },
  {
    "text": "Or what is the biggest\nor the smallest input? What is the sort\nof strangest set",
    "start": "2483950",
    "end": "2488980"
  },
  {
    "text": "of inputs I could\nprovide to my program and push it in all\nthese corner cases?",
    "start": "2488980",
    "end": "2494250"
  },
  {
    "text": "One example of this ambiguity,\nsort of a good example to keep in mind, is how\nSSL certificates, again,",
    "start": "2494250",
    "end": "2504849"
  },
  {
    "text": "encode names into the\ncertificate itself. So this is a different\nproblem than the problem",
    "start": "2504850",
    "end": "2511160"
  },
  {
    "text": "about the certificate\nauthorities being trusted. So these SSL certificates\nare just sequences of bytes",
    "start": "2511160",
    "end": "2517470"
  },
  {
    "text": "that a web server sends to you. And inside of this\nSSL certificate is the name of the server\nyou're connecting to,",
    "start": "2517470",
    "end": "2524339"
  },
  {
    "text": "so something like Amazon.com. You know, you can't just\nput down those bytes. You have to encode it\nsomehow and specify, well,",
    "start": "2524340",
    "end": "2529870"
  },
  {
    "text": "it's Amazon.com. And that's the\nend of the string. So in SSL certificates, they\nuse a particular encoding scheme",
    "start": "2529870",
    "end": "2538540"
  },
  {
    "text": "that writes down Amazon.com\nby first writing down",
    "start": "2538540",
    "end": "2544290"
  },
  {
    "text": "the number of bytes\nin the string. So you first write down, OK. Well, I'm going to have a 10\nbyte string called Amazon.com.",
    "start": "2544290",
    "end": "2552314"
  },
  {
    "text": " That's actually 10 bytes. Great. OK.",
    "start": "2552314",
    "end": "2557510"
  },
  {
    "text": "So this is like-- in the\nSSL certificate, somewhere in there, there is this byte\n10 followed by 10 bytes saying",
    "start": "2557510",
    "end": "2564160"
  },
  {
    "text": "what the host name is. And there's other stuff\nafterwards, right, and before. And when a browser takes\nit, well, the browser",
    "start": "2564160",
    "end": "2570810"
  },
  {
    "text": "is written in C. And the\nway C represents strings is by null terminating them.",
    "start": "2570810",
    "end": "2576660"
  },
  {
    "text": "So in C, a string doesn't\nhave a length count. Instead, it has all the bytes. And the end of the string\nis just the byte zero.",
    "start": "2576660",
    "end": "2583660"
  },
  {
    "text": "And in C, you write it with\na backslash zero character. So this is in memory\nin your browser.",
    "start": "2583660",
    "end": "2588740"
  },
  {
    "text": " Somewhere in memory\nthere's this string of 11 bytes, now, with\nan extra zero at the end.",
    "start": "2588740",
    "end": "2595951"
  },
  {
    "text": "And when a browser\ninterprets this string, it just keeps going until\nit sees an end of string marker, which is a zero byte.",
    "start": "2595951",
    "end": "2602839"
  },
  {
    "text": "OK. So, what could go wrong? Any guesses?",
    "start": "2602840",
    "end": "2608751"
  },
  {
    "text": "Yeah? AUDIENCE: You have a zero\nin the middle [INAUDIBLE]? PROFESSOR: Yes. This is great. All right. So, this is actually a\nbit of a discontinuity",
    "start": "2608751",
    "end": "2615222"
  },
  {
    "text": "in terms of how\nthis guy represents strings and this guy. So suppose that I own\nthe domain foo.com.",
    "start": "2615222",
    "end": "2621530"
  },
  {
    "text": "So I can get certificates\nfor anything dot foo dot com. So what I could do is ask for\na certificate for the name",
    "start": "2621530",
    "end": "2630567"
  },
  {
    "text": "amazon.com0x.foo.com. ",
    "start": "2630568",
    "end": "2637325"
  },
  {
    "text": "That's a perfectly valid string. It has a bunch of bytes. I guess it's 10, 11\n12 13, 14, 15, 16,",
    "start": "2637325",
    "end": "2643710"
  },
  {
    "text": "there's another four, 20, right? So this is 20 byte name\nwith these 20 bytes.",
    "start": "2643710",
    "end": "2650020"
  },
  {
    "text": "So it used to be that if you\ngo to a certificate authority, in many cases, you could\nsay, hey, I own foo.com.",
    "start": "2650020",
    "end": "2655230"
  },
  {
    "text": "Give me a certificate\nfor this thing. And they'd be perfectly\nwilling to do it because it's a subdomain of foo.com.",
    "start": "2655230",
    "end": "2660789"
  },
  {
    "text": "It's all yours. But then, when a browser\ntakes this string and loads it in memory, well,\nwhat it does is the same thing",
    "start": "2660790",
    "end": "2667930"
  },
  {
    "text": "it did here. It copies the string. amazon.com0x.foo.com. ",
    "start": "2667930",
    "end": "2677206"
  },
  {
    "text": "It'll dutifully add the\nterminating zero at the end. But then, when the rest\nof the browser software",
    "start": "2677206",
    "end": "2683369"
  },
  {
    "text": "goes and tries to interpret the\nstring at this memory location, it'll keep going up until it\ngets to zero and say, OK well,",
    "start": "2683370",
    "end": "2690722"
  },
  {
    "text": "that's the end of the string. So this is Amazon.com. That's it. So this sort of disconnect\nbetween how C software",
    "start": "2690722",
    "end": "2700119"
  },
  {
    "text": "and how SSL certificates\nrepresent names led to some unfortunate\nsecurity problems.",
    "start": "2700120",
    "end": "2705800"
  },
  {
    "text": "This was actually\ndiscovered a number of years ago now by this guy,\nMoxie Marlinspike.",
    "start": "2705800",
    "end": "2711030"
  },
  {
    "text": "But it's a fairly\nclever observation. And these kinds of encoding\nbugs are actually also",
    "start": "2711030",
    "end": "2717470"
  },
  {
    "text": "pretty common in\nlots of software because, unless you're very\ndiligent about exactly how you",
    "start": "2717470",
    "end": "2724030"
  },
  {
    "text": "encode things, there might be\ndifferent ways of encoding. And whenever there's\ndisagreement, there's a chance the bad guy\ncan take advantage of this.",
    "start": "2724030",
    "end": "2730880"
  },
  {
    "text": "One system thinks\nthat's a fine name. Another thinks that's\nnot, something else. So these are good places\nto sort of push a system",
    "start": "2730880",
    "end": "2736870"
  },
  {
    "text": "to see how it might break. That make sense?",
    "start": "2736870",
    "end": "2742030"
  },
  {
    "text": "All right. So maybe the last example\nof mechanism failure",
    "start": "2742030",
    "end": "2747220"
  },
  {
    "text": "I'm going to talk about today\nis a reasonably popular one. It's this problem\nor buffer overflows.",
    "start": "2747220",
    "end": "2752910"
  },
  {
    "text": " So some of you have seen this\nin, or at least at some level,",
    "start": "2752910",
    "end": "2759380"
  },
  {
    "text": "in 6.033, if you did\nthe undergrad course. But for those of you that have\nforgotten or haven't taken",
    "start": "2759380",
    "end": "2765290"
  },
  {
    "text": "oh three three, we'll sort\nof go over buffer overflows in more detail. And this will be, actually,\nquite critical for you guys,",
    "start": "2765290",
    "end": "2770463"
  },
  {
    "text": "because lab one is all\nabout buffer overflows. And you're going\nto be exploiting these vulnerabilities in a\nsomewhat real web server.",
    "start": "2770463",
    "end": "2779710"
  },
  {
    "text": "So let's figure out,\nwhat is the setting? What are we talking about here? So the setting we're\ngoing to be considering",
    "start": "2779710",
    "end": "2785470"
  },
  {
    "text": "is a system which has,\nlet's say, a web server. So what we have is, we have\nsome computer out there",
    "start": "2785470",
    "end": "2794510"
  },
  {
    "text": "that has a web server on it.  And the web server\nis a program that",
    "start": "2794510",
    "end": "2801200"
  },
  {
    "text": "is going to accept connections\nfrom the outside world, take requests-- which are\nbasically just packets--",
    "start": "2801200",
    "end": "2807480"
  },
  {
    "text": "and somehow process them, and\ndo some checking, probably. If it's an illegal\nURL or if they're",
    "start": "2807480",
    "end": "2814174"
  },
  {
    "text": "trying to access a file they\nare not authorized to access, the web server is going\nto return an error. But otherwise, it's going\nto access some files,",
    "start": "2814174",
    "end": "2820400"
  },
  {
    "text": "maybe on disk, and\nsend them back out in some sort of a reply.",
    "start": "2820400",
    "end": "2826990"
  },
  {
    "text": "So this is a hugely common\npicture, almost any system you look at. What's the policy?",
    "start": "2826990",
    "end": "2833146"
  },
  {
    "text": "Or what's the threat model? ",
    "start": "2833146",
    "end": "2838300"
  },
  {
    "text": "So this is a bit of a problem\nin many real world systems, namely that it's\nactually pretty hard",
    "start": "2838300",
    "end": "2843849"
  },
  {
    "text": "to pin down what is the\nexact policy or threat model that we're talking about. And this sort of imprecision\nor ambiguity about policies,",
    "start": "2843850",
    "end": "2851570"
  },
  {
    "text": "threat models, et\ncetera, is what sometimes leads to security problems. Not in this particular\ncase, but we'll see.",
    "start": "2851570",
    "end": "2857180"
  },
  {
    "text": "But maybe just to give\nyou a sense of how to think of a typical web server\nin the context of this policy,",
    "start": "2857180",
    "end": "2864780"
  },
  {
    "text": "threat model kind of stuff, is\nthat well, probably the policy is, the web server should do\nwhat the programmer intended",
    "start": "2864780",
    "end": "2870005"
  },
  {
    "text": "it to do. It's a little vague. But that's probably what's\ngoing on because anything more specific, as well,\nthe web server should",
    "start": "2870005",
    "end": "2875616"
  },
  {
    "text": "do exactly what the\ncode does, is going to be a bit of an [INAUDIBLE]\nAnd if your code has a bug, well, your policy\nsays, well, that's",
    "start": "2875616",
    "end": "2881090"
  },
  {
    "text": "exactly what I should do. I should follow the bug. So it's a little hard to\nstate a policy precisely,",
    "start": "2881090",
    "end": "2887390"
  },
  {
    "text": "but in this case, let's\ngo with some intuitive version of, well, the\nweb server should do what the programmer wanted it to do.",
    "start": "2887390",
    "end": "2893785"
  },
  {
    "text": "And the threat\nmodel is probably, the attacker doesn't have\naccess to this machine, can't log in to it remotely,\ndoesn't have physical access",
    "start": "2893785",
    "end": "2900800"
  },
  {
    "text": "to it, but can send\nany packet they want. So they're not restricted\nto certain kinds of packets.",
    "start": "2900800",
    "end": "2906874"
  },
  {
    "text": "Anything you can\nshape and sort of deliver to this web\nserver, that's fair game. Seems like a reasonable\nthreat model, in practice,",
    "start": "2906874",
    "end": "2912270"
  },
  {
    "text": "to have in mind. And I guess the goal is that\nthis web server shouldn't",
    "start": "2912270",
    "end": "2919940"
  },
  {
    "text": "allow arbitrary stuff\nto go wrong here. I guess that sort of\ngoes along with what the programmer intended.",
    "start": "2919940",
    "end": "2925589"
  },
  {
    "text": "The programmer probably\ndidn't intend any request to be able to access\nanything on the server. And yet, it turns out if you\nmake certain kinds of mistakes",
    "start": "2925590",
    "end": "2931630"
  },
  {
    "text": "in writing the web server\nsoftware, which is basically the mechanism here, right? The web server software is\nthe thing that takes a request",
    "start": "2931630",
    "end": "2937390"
  },
  {
    "text": "and looks at it and\nmakes sure that it's not going to do something bad, sends\na response back if everything's OK. The web server in\nthis mechanism.",
    "start": "2937390",
    "end": "2943424"
  },
  {
    "text": "It's enforcing your policy. And as a result, if the web\nserver software is buggy,",
    "start": "2943424",
    "end": "2948730"
  },
  {
    "text": "then you're in trouble. And one sort of common\nproblem, if you're writing software in\nC which, you know,",
    "start": "2948730",
    "end": "2954670"
  },
  {
    "text": "many things are\nstill written in C and probably will continue to\nbe written in C for a while, you can mismanage your\nmemory allocations.",
    "start": "2954670",
    "end": "2961540"
  },
  {
    "text": "And as we saw in this SSL\ncertificate naming example, even sort of a single\nbyte can really",
    "start": "2961540",
    "end": "2967270"
  },
  {
    "text": "make a huge difference,\nin terms of what goes on. And I guess for\nthis example, we'll",
    "start": "2967270",
    "end": "2972480"
  },
  {
    "text": "look at a small piece of code\nthat's not quite a real web server. In the lab, you'll have this\nwhole picture to play with.",
    "start": "2972480",
    "end": "2978900"
  },
  {
    "text": "But for lecture, I\njust want to give you a simplified example\nso we can talk about what's sort of at the\ncore of what's going wrong.",
    "start": "2978900",
    "end": "2987140"
  },
  {
    "text": "And, in particular, if\nthis system wakes up, I will show you sort of\na very small C function.",
    "start": "2987140",
    "end": "2996240"
  },
  {
    "text": "And we can sort of\nsee what goes wrong if you provide different\ninputs to that piece of code.",
    "start": "2996240",
    "end": "3004400"
  },
  {
    "text": "All right. So the C function that I\nhave in mind is this guy.",
    "start": "3004400",
    "end": "3009460"
  },
  {
    "text": " Somewhere here.",
    "start": "3009460",
    "end": "3015920"
  },
  {
    "text": "Oh, yeah.  It's coming on.",
    "start": "3015920",
    "end": "3021166"
  },
  {
    "text": "All right. So here's the sort of\nprogram I'm talking about,",
    "start": "3021166",
    "end": "3027740"
  },
  {
    "text": "or I want to use\nas an example here. So this program is just\ngoing to read a request.",
    "start": "3027740",
    "end": "3032974"
  },
  {
    "text": "And you can sort of\nimagine it's going to read a request from the network. But for the purposes\nof this example,",
    "start": "3032974",
    "end": "3038462"
  },
  {
    "text": "it's just going to read\na request from whatever I'm typing in on the keyboard. And it's going to store\nit in a buffer here.",
    "start": "3038462",
    "end": "3045425"
  },
  {
    "text": "And then it's going to\nparse it is an integer and return the integer. And the program will then print\nwhatever integer I get back.",
    "start": "3045425",
    "end": "3052430"
  },
  {
    "text": "It's like far from a web server. But we'll at least\nsee some basics of how buffer overflows\nwork and what goes wrong.",
    "start": "3052430",
    "end": "3060920"
  },
  {
    "text": "So let's see actually what\nhappens if we run this program. So I can compile it here. And actually, you\ncan sort of see",
    "start": "3060920",
    "end": "3067250"
  },
  {
    "text": "the-- it's already telling me\nwhat I'm screwing up, right? The get function is dangerous\nand should not be used.",
    "start": "3067250",
    "end": "3073535"
  },
  {
    "text": "And we'll see in a second\nwhy the compiler is so intent on telling me this. And it actually is true.",
    "start": "3073535",
    "end": "3080320"
  },
  {
    "text": "But for now, suppose\nwe're a happy go lucky developer that is willing\nto ignore this warning.",
    "start": "3080320",
    "end": "3086660"
  },
  {
    "text": "So OK. I run this redirect function,\nI provide some input, and it works.",
    "start": "3086660",
    "end": "3093040"
  },
  {
    "text": "Let's see if I\nprovide large inputs. If I type in some\nlarge number, well, at least it gives me\nsome large number.",
    "start": "3093040",
    "end": "3098890"
  },
  {
    "text": "It basically maxes out to\ntwo to the 31 and prints that and doesn't go any higher.",
    "start": "3098890",
    "end": "3104530"
  },
  {
    "text": "So that's maybe not\ndisastrous, right? Whatever. You provided this\nridiculously large number.",
    "start": "3104530",
    "end": "3109570"
  },
  {
    "text": "You got something\ndidn't quite work. It's not quite a problem yet. But if we provide some\nreally large input,",
    "start": "3109570",
    "end": "3115520"
  },
  {
    "text": "we might get some\nother problem, right? So suppose I provide\nin a lot of by 12",
    "start": "3115520",
    "end": "3120940"
  },
  {
    "text": "I just provided things\nthat are not numbers. It prints zero. That's not so bad.",
    "start": "3120940",
    "end": "3126430"
  },
  {
    "text": "But suppose I'm going to\npaste in a huge number of As. OK, so now the program crashes.",
    "start": "3126430",
    "end": "3133490"
  },
  {
    "text": "Maybe not too surprising. So if it was the case that if\nI send a bad request to the web server, it just doesn't get back\nto me or doesn't send a reply,",
    "start": "3133490",
    "end": "3140740"
  },
  {
    "text": "that would be fine. But we'll sort of\nlook inside and see what happens, and try to\nfigure out how we can actually",
    "start": "3140740",
    "end": "3145750"
  },
  {
    "text": "take advantage of this crash\nto maybe do something much more interesting, or, well, much more\nalong with what a hacker might",
    "start": "3145750",
    "end": "3155960"
  },
  {
    "text": "be interested in doing. So to do this, we're\ngoing to run this program under a debugger. You'll get super familiar\nwith this in lab one.",
    "start": "3155960",
    "end": "3163980"
  },
  {
    "text": "But for now, what\nwe're going to do is set a breakpoint in\nthat redirect function.",
    "start": "3163980",
    "end": "3169700"
  },
  {
    "text": "And we're going to sort of run\nalong and see what happens. So when I run the\nprogram, it's going to start executing\nin the main function.",
    "start": "3169700",
    "end": "3176450"
  },
  {
    "text": "And pretty quickly,\nit calls redirect. And the debugger is now stopped\nat the beginning of redirect.",
    "start": "3176450",
    "end": "3181790"
  },
  {
    "text": "And we can actually see what's\ngoing on here by, for example,",
    "start": "3181790",
    "end": "3186830"
  },
  {
    "text": "we can ask it to print\nthe current CPU registers. We're going to look at\nreally low level stuff here, as opposed to at the\nlevel of C source code.",
    "start": "3186830",
    "end": "3193610"
  },
  {
    "text": "We're going to look at\nthe actual instructions that my machine is\nexecuting because that's what really is going on. The C is actually maybe\nhiding some things from us.",
    "start": "3193610",
    "end": "3200950"
  },
  {
    "text": "So you can actually\nprint all the registers. So on x86, as you\nmight remember.",
    "start": "3200950",
    "end": "3205974"
  },
  {
    "text": "Well, on [INAUDIBLE]\narchitecture, there's a stack pointer. So let me start maybe drawing\nthis diagram on the board",
    "start": "3205974",
    "end": "3212530"
  },
  {
    "text": "so we can try to reconstruct\nwhat's happening. So what's going on is that\nmy program, not surprisingly,",
    "start": "3212530",
    "end": "3219550"
  },
  {
    "text": "has a stack. On x86, the stack grows down. So it sort of is\nthis stack like this.",
    "start": "3219550",
    "end": "3226040"
  },
  {
    "text": "And we can keep\npushing stuff onto it. So right now, the\nstack pointer points",
    "start": "3226040",
    "end": "3231980"
  },
  {
    "text": "at this particular\nmemory location FFD010.",
    "start": "3231980",
    "end": "3238230"
  },
  {
    "text": "So some value. So you can try to figure\nout, how did it get there? One way to do it is to\ndisassemble the code",
    "start": "3238230",
    "end": "3245480"
  },
  {
    "text": "of this redirect function. ",
    "start": "3245480",
    "end": "3252650"
  },
  {
    "text": "Is this going to work better? Really? Convenience variable\nmust have integer value.",
    "start": "3252650",
    "end": "3258250"
  },
  {
    "text": " Man. What is going on\nwith my debugger? ",
    "start": "3258250",
    "end": "3268190"
  },
  {
    "text": "All right. Well, we can disassemble\nthe function by name. So this is what the\nfunction is doing.",
    "start": "3268190",
    "end": "3273200"
  },
  {
    "text": "So first off, it starts\nby manipulating something with this EBP register. That's not super interesting.",
    "start": "3273200",
    "end": "3278570"
  },
  {
    "text": "But the first thing\nit does after that is subtract a certain value\nfrom the stack pointer.",
    "start": "3278570",
    "end": "3283800"
  },
  {
    "text": "This is, basically, it's making\nspace for all those variables, like the buffer and the integer,\ni, we saw in the C source code.",
    "start": "3283800",
    "end": "3290680"
  },
  {
    "text": "So we're actually,\nnow, four instructions into the function, here. So that stack\npointer value that we",
    "start": "3290680",
    "end": "3297190"
  },
  {
    "text": "saw before is actually already\nin the middle, so to say, of the stack.",
    "start": "3297190",
    "end": "3302730"
  },
  {
    "text": "And currently,\nthere's stuff above it that is going to be the\nbuffer, that integer",
    "start": "3302730",
    "end": "3309550"
  },
  {
    "text": "value, and actually,\nalso the return address into the main function\ngoes on the stack, as well. So somewhere here, we'll\nhave the return address.",
    "start": "3309550",
    "end": "3317734"
  },
  {
    "text": "And we actually\ntry to figure out, where are things on the stack? So we can print the address\nof that buffer variable.",
    "start": "3317734",
    "end": "3326849"
  },
  {
    "text": "So the buffer variable\nis at address D02C. We can also print the\nvalue of that integer, i.",
    "start": "3326850",
    "end": "3335690"
  },
  {
    "text": "That guy is at D0AC. So the i is way up on the stack.",
    "start": "3335690",
    "end": "3340970"
  },
  {
    "text": "But the buffer is a bit lower. So what's going on is that\nwe have our buffer here",
    "start": "3340970",
    "end": "3347210"
  },
  {
    "text": "on the stack, and then\nfollowed above by i and maybe",
    "start": "3347210",
    "end": "3352460"
  },
  {
    "text": "some other stuff, and\nthen finally, the return address into the main\nfunction that called redirect. And the buffer\nis-- this is going,",
    "start": "3352460",
    "end": "3360910"
  },
  {
    "text": "the stack is growing down. So these are higher addresses. ",
    "start": "3360910",
    "end": "3367250"
  },
  {
    "text": "So what this means is that\nthe buffer-- we actually have to decide, where is the\nzeroth element of the buffer,",
    "start": "3367250",
    "end": "3373750"
  },
  {
    "text": "and where is the 128th\nelement of this buffer? So where does the zeroth\nelement of the buffer go?",
    "start": "3373750",
    "end": "3380510"
  },
  {
    "text": "Yeah? Should be at the bottom,\nright, because yeah, higher elements\njust keep going up.",
    "start": "3380510",
    "end": "3385590"
  },
  {
    "text": "So buff of zero is down here. It just keeps going on. And buff of 127 is\ngoing to be up there.",
    "start": "3385590",
    "end": "3391140"
  },
  {
    "text": "And then we'll have\ni and other stuff. OK. Well, let's see what\nhappens now if we",
    "start": "3391140",
    "end": "3396860"
  },
  {
    "text": "provide that input that seemed\nto be crashing it before. So I guess one thing\nwe can actually do before this is to see\nwhether we can actually",
    "start": "3396860",
    "end": "3403700"
  },
  {
    "text": "find this return address. Where it actually happens to\nlive is at the EBP pointer.",
    "start": "3403700",
    "end": "3408870"
  },
  {
    "text": "This is just a convenient thing\nin the x86 calling convention, that the EBP pointer,\nor register, actually",
    "start": "3408870",
    "end": "3419270"
  },
  {
    "text": "happens to point to something\non the stack which is going to be called the saved EBP.",
    "start": "3419270",
    "end": "3426039"
  },
  {
    "text": "It's a separate location, sort\nof after all the variables but before the return address. And this is the\nthing that's being",
    "start": "3426040",
    "end": "3431666"
  },
  {
    "text": "saved by those first couple\nof instructions at the top. And you actually\nsort of examine it. In GDB you can say, examine x,\nsome value, so the EBP pointer",
    "start": "3431666",
    "end": "3443450"
  },
  {
    "text": "value. So that's the location\nof the stack, D0B8. Indeed, it's actually\nabove even the i variable.",
    "start": "3443450",
    "end": "3450020"
  },
  {
    "text": "So it's great. And it has some other\nvalue that happens to be the EBP before\nthis function was called.",
    "start": "3450020",
    "end": "3456050"
  },
  {
    "text": "But then, sort of one\nmore memory location up is going to be\nthe return address. So if we print EBP plus four,\nthere's something else there,",
    "start": "3456050",
    "end": "3464210"
  },
  {
    "text": "this 0x08048E5F. And let's actually see\nwhere that's pointing.",
    "start": "3464210",
    "end": "3471720"
  },
  {
    "text": "So this is something you're\ngoing to do a lot in the lab. So you can take this address. And you can try\nto disassemble it.",
    "start": "3471720",
    "end": "3479069"
  },
  {
    "text": "So what is this guy? Where did we end up? So GDB actually helpfully\nfigures out which function",
    "start": "3479070",
    "end": "3485040"
  },
  {
    "text": "contains that address. So 5F. This is the guy that our\nreturn address is pointing to.",
    "start": "3485040",
    "end": "3491549"
  },
  {
    "text": "And as you can see, this\nis the instruction right after the call to redirect. So when we return\nfrom redirect, this",
    "start": "3491550",
    "end": "3497655"
  },
  {
    "text": "is exactly where we're going\nto jump and continue execution. This is, hopefully,\nfairly straightforward stuff from double oh four,\nsome standard OS class.",
    "start": "3497655",
    "end": "3505660"
  },
  {
    "text": "OK. So where are we now? Just to recap, we can try to\ndisassemble our instruction",
    "start": "3505660",
    "end": "3513060"
  },
  {
    "text": "pointer. So we're at the beginning\nof redirect right now. And we can run for a bit, and\nmaybe run that getS() function.",
    "start": "3513060",
    "end": "3523520"
  },
  {
    "text": "So OK, we run next. What this does is it runs getS()\nand it's waiting for getS()",
    "start": "3523520",
    "end": "3528619"
  },
  {
    "text": "to return. We can provide our bad input\nto getS() and try to get it to crash again and see what's\ngoing on, really, there, right?",
    "start": "3528620",
    "end": "3534950"
  },
  {
    "text": "So we can paste a\nbunch of As again. OK. So we got out of getS() and\nthings are actually still OK,",
    "start": "3534950",
    "end": "3540420"
  },
  {
    "text": "right? The program is still running. But we can try to figure out,\nwhat is in memory right now",
    "start": "3540420",
    "end": "3545830"
  },
  {
    "text": "and why are things\ngoing to go wrong? Actually, what do\nyou guys think? What happened, right?",
    "start": "3545830",
    "end": "3551025"
  },
  {
    "text": "So I printed out a bunch of As. What did getS()\ndo to the memory? ",
    "start": "3551025",
    "end": "3556770"
  },
  {
    "text": "Yeah, yeah. So it just keeps\nwriting As here, right? All we actually passed to\ngetS() was a single pointer, the start of this\naddress, right?",
    "start": "3556770",
    "end": "3563410"
  },
  {
    "text": "So this is the\nargument to getS(), is a pointer to this memory\nlocation on the stack.",
    "start": "3563410",
    "end": "3568799"
  },
  {
    "text": "So it just kept writing As. And it doesn't actually\nknow what the length is, so it just keeps going, right? It's going to override As\nall the way up the stack,",
    "start": "3568800",
    "end": "3576334"
  },
  {
    "text": "past the return address,\nprobably, and into whatever was up the stack above us. So we can check whether\nthat's the case.",
    "start": "3576334",
    "end": "3582600"
  },
  {
    "text": "So we can actually\nprint the buffer. And in fact, it\ntells us, yeah, we",
    "start": "3582600",
    "end": "3588480"
  },
  {
    "text": "have 180 As there,\neven though the buffer should be 128 elements large.",
    "start": "3588480",
    "end": "3595670"
  },
  {
    "text": "So this is not so great. And we can actually,\nagain, examine what's going on in that EBP pointer.",
    "start": "3595670",
    "end": "3603290"
  },
  {
    "text": "Dollar sign, EBP. So in fact, yeah. It's all 0x41, which is the\nASCII encoding of the letter A.",
    "start": "3603290",
    "end": "3612159"
  },
  {
    "text": "And in fact, the return\naddress is probably going to be the same way, right? If we print the return\naddress, it's also all As.",
    "start": "3612159",
    "end": "3619349"
  },
  {
    "text": "That's not so great. In fact, what's going to\nhappen if we return now is the program will jump to\nthat address, 41414141.",
    "start": "3619350",
    "end": "3625447"
  },
  {
    "text": "And there's nothing there. And it'll crash. That's the segmentation\nfault you're getting. So let's just step up to\nit and see what happens.",
    "start": "3625447",
    "end": "3633090"
  },
  {
    "text": "So let's run next. So we keep stepping\nthrough the program. And we can see where we are.",
    "start": "3633090",
    "end": "3640060"
  },
  {
    "text": "OK. We're getting close to\nthe end of the function. So we can step over\ntwo more instructions.",
    "start": "3640060",
    "end": "3646400"
  },
  {
    "text": "nexti. And now we can\ndisassemble again.",
    "start": "3646400",
    "end": "3651531"
  },
  {
    "text": "OK. We're now just at the return\ninstruction from this function. And we can actually figure out. So as you can see, at\nthe end of the function,",
    "start": "3651531",
    "end": "3659690"
  },
  {
    "text": "it runs this leave\nx86 instruction, which basically restores the\nstack back to where it was.",
    "start": "3659690",
    "end": "3665220"
  },
  {
    "text": "So it sort of pushes\nthe stack pointer all the way back to the return\naddress using the same EBP. That's what it's basically for.",
    "start": "3665220",
    "end": "3671810"
  },
  {
    "text": "And now, the stack is\npointing at the return address that we're going to use. And in fact, it's all A's.",
    "start": "3671810",
    "end": "3678339"
  },
  {
    "text": "And if we run one\nmore instruction, the CPU is going to jump to\nthat exact memory address and start executing\ncode there and crash,",
    "start": "3678340",
    "end": "3685350"
  },
  {
    "text": "because it's not a valid address\nthat's in the page table. So let's actually see, just to\ndouble check, what's going on.",
    "start": "3685350",
    "end": "3692359"
  },
  {
    "text": "Let's print our buffer again. Our buffer-- well, that's\nactually kind of interesting, right? So now, buffer,\nfor some reason it",
    "start": "3692360",
    "end": "3698930"
  },
  {
    "text": "only says A repeats 128 times. Whereas if you remember before,\nit said A repeated 180 times",
    "start": "3698930",
    "end": "3705589"
  },
  {
    "text": "in our buffer. So what happened? Yeah? AUDIENCE: [INAUDIBLE].",
    "start": "3705590",
    "end": "3711340"
  },
  {
    "text": "PROFESSOR: Yeah, yeah. Exactly. So there's actually\nsomething going on after the buffer\noverflow happens that changes what's going on.",
    "start": "3711340",
    "end": "3716812"
  },
  {
    "text": "So actually, if\nyou remember, we do this A to i conversion of\nthe string to an integer. And if you provide\nall As, it actually",
    "start": "3716812",
    "end": "3723069"
  },
  {
    "text": "writes zero to this\nmemory location. So a zero, if you remember,\nterminates strings in C.",
    "start": "3723070",
    "end": "3728840"
  },
  {
    "text": "So GDB now thinks, yep, we have\na perfectly well-terminated 128 byte string of all As.",
    "start": "3728840",
    "end": "3735155"
  },
  {
    "text": "But you know, it\ndoesn't really matter, because we still have\nthose As up top that already corrupted our stack.",
    "start": "3735155",
    "end": "3741180"
  },
  {
    "text": "OK. That was actually kind\nof an important lesson that-- it's actually a\nlittle bit tricky, sometimes, to explore these buffer\noverflows because, even",
    "start": "3741180",
    "end": "3748896"
  },
  {
    "text": "though you've already changed\nlots of stuff on the stack, you still have to\nget to the point where you use the value\nthat you have somehow",
    "start": "3748896",
    "end": "3754810"
  },
  {
    "text": "placed on the stack. So there's other\ncode that's going to run after you've\nmanaged to overflow some buffer and corrupt memory.",
    "start": "3754810",
    "end": "3760274"
  },
  {
    "text": "You have to make sure that\ncode doesn't do something silly like, if it's A to i,\njust exited right away,",
    "start": "3760274",
    "end": "3765490"
  },
  {
    "text": "as soon as it saw a\nnon-integer value, we might not get to jump to\nall this 41414141 address.",
    "start": "3765490",
    "end": "3773350"
  },
  {
    "text": "So you have to massage\nyour input in some cases. Maybe not so much in this case. But in other\nsituations, you'll have",
    "start": "3773350",
    "end": "3778470"
  },
  {
    "text": "to be careful in\nconstructing this input. OK, so just to see what happens,\nwe can jump one more time.",
    "start": "3778470",
    "end": "3784655"
  },
  {
    "text": "Well, let's look\nat our register. So right now, our EIP, the\nsort of instruction pointer,",
    "start": "3784655",
    "end": "3790400"
  },
  {
    "text": "is pointing at the\nlast thing in redirect. And if we step one more\ntime, hopefully we'll jump to, finally, that\nunfortunate 4141 address.",
    "start": "3790400",
    "end": "3799570"
  },
  {
    "text": "Over here. And in fact, yep. The program now seems\nto be executing there. If we ask GDB to print the\ncurrent set of registers,",
    "start": "3799570",
    "end": "3805990"
  },
  {
    "text": "yep, the current instruction\npointer is this strange value. And if we exclude\none more instruction,",
    "start": "3805990",
    "end": "3811839"
  },
  {
    "text": "it's going to crash\nbecause that's finally trying to execute an instruction\npointer that doesn't correspond",
    "start": "3811840",
    "end": "3819700"
  },
  {
    "text": "to a valid page in the\noperating system's page table for this process.",
    "start": "3819700",
    "end": "3824770"
  },
  {
    "text": "Make sense? Any questions? All right. Well, I've got a question\nfor you guys, actually.",
    "start": "3824770",
    "end": "3832910"
  },
  {
    "text": "So what happens-- you know,\nit seems to be exploitable.",
    "start": "3832910",
    "end": "3838539"
  },
  {
    "text": "Or well, OK. Maybe let's first figure out\nwhy this is particularly bad, right? So why is it a problem?",
    "start": "3838540",
    "end": "3843762"
  },
  {
    "text": "So not only does\nour program crash, but presumably we're\ngoing to take it over. So I guess, first\nsimple question is, OK,",
    "start": "3843762",
    "end": "3849010"
  },
  {
    "text": "so what's the problem? What can you do? Yeah? AUDIENCE: You can do\nwhatever you want. PROFESSOR: Yeah. So I was actually pretty silly\nand just put in lots of As.",
    "start": "3849010",
    "end": "3856808"
  },
  {
    "text": "But if you were\ncareful about knowing where to put what\nvalues, you might be able to put in\na different value",
    "start": "3856809",
    "end": "3861970"
  },
  {
    "text": "and get it to jump\nsomewhere else. So let's see if we can\nactually do this, right? We can retrace this whole thing. OK.",
    "start": "3861970",
    "end": "3867210"
  },
  {
    "text": "Re-run the program again. And I guess I have to\nreset the breakpoint.",
    "start": "3867210",
    "end": "3873030"
  },
  {
    "text": "So I can break and\nredirect again. And run. And this time,\nI'll, again, next,",
    "start": "3873030",
    "end": "3882000"
  },
  {
    "text": "supply lots of As\nand overflow things. But I'm not going to try\nto carefully construct--",
    "start": "3882000",
    "end": "3887980"
  },
  {
    "text": "you know, figure out which\npoint in these As corresponds to the location in the stack. That's something\nyou guys are going to have to do for lab one.",
    "start": "3887980",
    "end": "3893920"
  },
  {
    "text": "But suppose that I\noverflow the stack here. And then I'm going\nto manually try to change things on the stack to\nget it to jump to some point I",
    "start": "3893920",
    "end": "3901470"
  },
  {
    "text": "want to jump to. And in this program, OK,\nso let's again-- nexti.",
    "start": "3901470",
    "end": "3908979"
  },
  {
    "text": "Where are we? We're at, again, at the\nvery end of redirect. And let's actually look\nat the stack, right?",
    "start": "3908979",
    "end": "3914540"
  },
  {
    "text": "So if we examine esp here,\nwe see our corrupted pointer. OK. Where could we jump to?",
    "start": "3914540",
    "end": "3921020"
  },
  {
    "text": "What interesting\nthings could we do? Unfortunately, this\nprogram is pretty limited. There's almost nothing\nin the program's code",
    "start": "3921020",
    "end": "3926543"
  },
  {
    "text": "where you could jump and\ndo anything interesting. But maybe we can do a little\nbit of something interesting. Maybe we'll find\nthe printf in main",
    "start": "3926543",
    "end": "3933460"
  },
  {
    "text": "and jump directly there, and\nget it to print the x value, or x equals something. So we can do this.",
    "start": "3933460",
    "end": "3938589"
  },
  {
    "text": "We can actually disassemble\nthe main function. And main does a\nbunch of stuff, you",
    "start": "3938590",
    "end": "3944630"
  },
  {
    "text": "know, initializes, calls\nredirect, does some more stuff, and then calls printf. So how about we jump to\nthis point, which is,",
    "start": "3944630",
    "end": "3951970"
  },
  {
    "text": "it sets up the\nargument to printf, which is x equals percent d,\nand then actually calls printf.",
    "start": "3951970",
    "end": "3958203"
  },
  {
    "text": "So we can actually\ntake this value and try to stick\nit in the stack. And should be able to do\nthis with the debugger",
    "start": "3958204",
    "end": "3965289"
  },
  {
    "text": "pretty easily, at least. So you can do this set\n[? int ?] esp equals this value.",
    "start": "3965290",
    "end": "3971780"
  },
  {
    "text": "So we can examine esp again\nand, indeed, it actually has this value. So if we continue now,\nwell, it printed out x",
    "start": "3971780",
    "end": "3979590"
  },
  {
    "text": "equals some garbage,\nwhich I guess happens to be just whatever\nis on the stack that was passed to printf.",
    "start": "3979590",
    "end": "3985259"
  },
  {
    "text": "We didn't correctly set\nup all the arguments because we jumped in the middle\nof this calling sequence. But yeah, we printed this value.",
    "start": "3985260",
    "end": "3990810"
  },
  {
    "text": "And then it crashed. Why did crash? Why do you think?",
    "start": "3990810",
    "end": "3996312"
  },
  {
    "text": "What actually happens, right? So we jump to printf. And then, something went wrong.",
    "start": "3996312",
    "end": "4002085"
  },
  {
    "text": "Yeah?  Well, we changed\nthe return address",
    "start": "4002085",
    "end": "4007230"
  },
  {
    "text": "so that when we\nreturn from redirect, we now jump to this new address,\nwhich is that point up there,",
    "start": "4007230",
    "end": "4012420"
  },
  {
    "text": "right after printf. So where's this\ncrash coming from?",
    "start": "4012420",
    "end": "4018160"
  },
  {
    "text": "Yeah? AUDIENCE: Is it\nrestricted because your i is supposed to be some\nsort of integer, but-- PROFESSOR: No, actually,\nwell the i is like,",
    "start": "4018160",
    "end": "4024420"
  },
  {
    "text": "well it's a 32-bit register. So whatever's in the\nregister, it'll print. In fact, that's the thing\nthat's in the register. So that's OK.",
    "start": "4024420",
    "end": "4030370"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE]\nmain returns. PROFESSOR: Yes. Actually, yeah. What's going on is, you\nhave to sort of-- OK,",
    "start": "4030370",
    "end": "4035525"
  },
  {
    "text": "so this is the point\nwhere we jumped. It's set up some arguments. It actually calls printf. printf seems to work.\nprintf is going to return.",
    "start": "4035525",
    "end": "4042140"
  },
  {
    "text": "Now actually, that's fine,\nbecause this call instruction put a return address on the\nstack for printf to use. That's fine.",
    "start": "4042140",
    "end": "4047810"
  },
  {
    "text": "Then main is going\nto continue running. It's going to run the sleeve\ninstruction, which doesn't do anything interesting.",
    "start": "4047810",
    "end": "4052929"
  },
  {
    "text": "And then it does another return. But the thing in\nthis-- up to the stack, it doesn't actually have\na valid return address.",
    "start": "4052929",
    "end": "4058120"
  },
  {
    "text": "So presumably, we\nreturn to some other who knows what memory location\nthat's up on the stack and jump somewhere else.",
    "start": "4058120",
    "end": "4064750"
  },
  {
    "text": "So unfortunately,\nhere, our pseudoattack didn't really work. It ran some code.",
    "start": "4064750",
    "end": "4069839"
  },
  {
    "text": "But then it crashed. That's probably not\nsomething you want to do. So if you really\nwanted to be careful, you would carefully plant not\njust this return address up",
    "start": "4069840",
    "end": "4076310"
  },
  {
    "text": "on the stack, but\nmaybe you'd figure out, where is this second red going\nto get its return address from,",
    "start": "4076310",
    "end": "4082270"
  },
  {
    "text": "and try to carefully\nplace something else on the stack\nthere that will ensure that your program cleanly\nexits after it gets exploited",
    "start": "4082270",
    "end": "4088950"
  },
  {
    "text": "so that no one notices. So this is all\nstuff you'll sort of try to do in lab one in\na little bit more detail.",
    "start": "4088950",
    "end": "4095680"
  },
  {
    "text": "But I guess one thing we\ncan try to think about now is, we sort of understand\nwhy it's bad to jump to the--",
    "start": "4095680",
    "end": "4104197"
  },
  {
    "text": "or to have these\nbuffer overflows. ",
    "start": "4104198",
    "end": "4111630"
  },
  {
    "text": "One problem, or one sort\nof way to think of this is that, the problem is just\nbecause the return address is up there, right? So the buffer keeps\ngrowing and eventually runs",
    "start": "4111630",
    "end": "4118939"
  },
  {
    "text": "over the return address. What if we flip\nthe stack around? You know, some machines actually\nhave stacks that grow up.",
    "start": "4118939",
    "end": "4127318"
  },
  {
    "text": "So an alternative design\nwe could sort of imagine is one where the stack\nstarts at the bottom",
    "start": "4127319",
    "end": "4135369"
  },
  {
    "text": "and keeps going up\ninstead of going down. So then, if you\noverflow this buffer,",
    "start": "4135370",
    "end": "4141336"
  },
  {
    "text": "you'll just keep\ngoing up on the stack, and maybe there's nothing\nbad that will happen.",
    "start": "4141336",
    "end": "4146576"
  },
  {
    "text": "Yeah? AUDIENCE: [INAUDIBLE]. PROFESSOR: So you're right.",
    "start": "4146576",
    "end": "4151970"
  },
  {
    "text": "It might be that,\nif you have-- well, so let me draw this\nnew stack diagram. And we'll sort of try to figure\nout what it applies to and not.",
    "start": "4151970",
    "end": "4160089"
  },
  {
    "text": "But OK. So we'll basically just\ninvert the picture. So when you call redirect on\nthis alternative architecture,",
    "start": "4160090",
    "end": "4165410"
  },
  {
    "text": "what's going to happen\nis the return address is going to go\nhere on the stack.",
    "start": "4165410",
    "end": "4171040"
  },
  {
    "text": "Then we'll have our i variable,\nor maybe the saved EBP. ",
    "start": "4171040",
    "end": "4176930"
  },
  {
    "text": "Then we'll have our i variable. And then we'll have buff. So we'll have buff of zero,\nbuff 127, and so on, right?",
    "start": "4176930",
    "end": "4184660"
  },
  {
    "text": "So then when we do the overflow,\nit overflows up there and maybe doesn't hit anything bad. I guess what you're\nsaying is that,",
    "start": "4184660",
    "end": "4190768"
  },
  {
    "text": "well, maybe we had\na buffer down there. And if we had a buffer\ndown there, then yeah, that seems kind of unfortunate. It could overrun\nthis return address.",
    "start": "4190768",
    "end": "4198930"
  },
  {
    "text": "So you're right. So you could still\nrun into problems on this stack growing up. But what about\nthis exact program?",
    "start": "4198930",
    "end": "4204785"
  },
  {
    "text": " Is this particular\nprogram safe on machines",
    "start": "4204785",
    "end": "4211119"
  },
  {
    "text": "where the stack grows up? So just to recap what the\nprogram read is this guy. ",
    "start": "4211119",
    "end": "4218391"
  },
  {
    "text": "Yeah? AUDIENCE: Still\ngoing to overwrite [INAUDIBLE] as a return value. PROFESSOR: Yeah. So that's actually\nclever, right? So this is the stack\nframe for redirect.",
    "start": "4218391",
    "end": "4229040"
  },
  {
    "text": "I guess it actually spans\nall the way up here. But what actually happens\nwhen you call getS() is that",
    "start": "4229040",
    "end": "4234790"
  },
  {
    "text": "redirect makes a function call. It actually saves its return\naddress up here on the stack.",
    "start": "4234790",
    "end": "4240380"
  },
  {
    "text": "And then getS() starts running. And getS() puts its\nown saved EBP up here.",
    "start": "4240380",
    "end": "4245490"
  },
  {
    "text": "And getS() is going to post\nits own variables higher up. And then getS() is going\nto fill in the buffer.",
    "start": "4245490",
    "end": "4254142"
  },
  {
    "text": "So this is still problematic. Basically, the buffer is\nsurrounded by return initials on all sides.",
    "start": "4254142",
    "end": "4259430"
  },
  {
    "text": "Either way, you're going to\nbe able to overflow something. So at what point-- suppose we\nhad a stack growing up machine.",
    "start": "4259430",
    "end": "4266300"
  },
  {
    "text": "At what point would\nyou be able to take control of the program's\nexecution then? ",
    "start": "4266300",
    "end": "4274099"
  },
  {
    "text": "Yes, and that is actually\neven easier in some ways. You don't have to wait\nuntil redirect returns. And maybe there was like, stuff\nthat was going to mess you up",
    "start": "4274100",
    "end": "4280199"
  },
  {
    "text": "like this A to i. No. It's actually easier, because\ngetS() is going to overflow the buffer. It's going to change\nthe return address",
    "start": "4280200",
    "end": "4286480"
  },
  {
    "text": "and then immediately\nreturn and immediately jump to wherever you sort\nof tried to construct,",
    "start": "4286480",
    "end": "4292440"
  },
  {
    "text": "makes sense. So what happens if we\nhave a program like this",
    "start": "4292440",
    "end": "4298175"
  },
  {
    "text": "that's pretty boring? There's like no real\ninteresting code to jump to. All you can do is get it to\nprint different x values here.",
    "start": "4298175",
    "end": "4305199"
  },
  {
    "text": "What if you want to do\nsomething interesting that you didn't-- yeah? AUDIENCE: I mean, if you\nhave an extra cable stack,",
    "start": "4305200",
    "end": "4312085"
  },
  {
    "text": "you could put\narbitrary code that, for example, executes a shell? PROFESSOR: Yeah yeah yeah.",
    "start": "4312085",
    "end": "4317110"
  },
  {
    "text": "So that's kind of clever,\nright, because you actually can supply other inputs, right? So at least, well-- there's\nsome defenses against this.",
    "start": "4317110",
    "end": "4324520"
  },
  {
    "text": "And we'll go over these\nin subsequent lectures. But in principle, you could\nhave the return address here",
    "start": "4324520",
    "end": "4330270"
  },
  {
    "text": "that you override on either the\nstack up or stack down machine. And instead of pointing\nit to some existing code,",
    "start": "4330270",
    "end": "4336360"
  },
  {
    "text": "like the printf\ninside of main, we can actually have the return\naddress point into the buffer.",
    "start": "4336360",
    "end": "4342486"
  },
  {
    "text": "So it's previously just\nsome location on the stack. But you could jump there\nand treat it as executable. So as part of your\nrequest, you'll actually",
    "start": "4342486",
    "end": "4349270"
  },
  {
    "text": "send some bytes of\ndata to the server, and then have the return address\nor the thing you overwrite here",
    "start": "4349270",
    "end": "4355690"
  },
  {
    "text": "point to the base of the\nbuffer, and you'll just keep going from there. So then you'll be able\nto sort of provide",
    "start": "4355690",
    "end": "4361429"
  },
  {
    "text": "the code you want\nto run, jump to it, and get the server to run it. And in fact, traditionally,\nin Unix systems,",
    "start": "4361429",
    "end": "4366710"
  },
  {
    "text": "what adversaries would often\ndo is just ask the operating system to execute the\nbinsh command, which lets you sort of type in\narbitrary shell commands",
    "start": "4366710",
    "end": "4373389"
  },
  {
    "text": "after that. So as a result, this\nthing, this piece of code you inject\ninto this buffer, was often called, sort of for\nhistorical reasons, shell code.",
    "start": "4373390",
    "end": "4381260"
  },
  {
    "text": "And you'll try to construct\nsome in this lab one as well.",
    "start": "4381260",
    "end": "4386420"
  },
  {
    "text": "All right. Make sense, what\nyou can do here? Any questions? Yeah? AUDIENCE: Is there a separation\nbetween code and data?",
    "start": "4386420",
    "end": "4393491"
  },
  {
    "text": "PROFESSOR: Right. So is there a separation\nbetween code and data here? At least, well,\nhistorically, many machines",
    "start": "4393492",
    "end": "4400882"
  },
  {
    "text": "didn't enforce any\nseparation of code and data. You'd just have a flat\nmemory address space. The stack pointer\npoints somewhere.",
    "start": "4400882",
    "end": "4406290"
  },
  {
    "text": "The code pointer\npoints somewhere else. And you just execute wherever\nthe code pointer, instruction pointer is pointing.",
    "start": "4406290",
    "end": "4412510"
  },
  {
    "text": "Modern machines try to\nprovide some defenses for these kinds of attacks. And what modern\nmachines often do is,",
    "start": "4412510",
    "end": "4419140"
  },
  {
    "text": "they actually\nassociate permissions with various memory regions. And one of the\npermissions is execute.",
    "start": "4419140",
    "end": "4424280"
  },
  {
    "text": "So the part of your\n32-bit or 64-bit address space that contains code\nhas the execute permission.",
    "start": "4424280",
    "end": "4431180"
  },
  {
    "text": "So if your instruction\npointer points there, the CPU will actually\nrun those things. And the stack and other data\nportions of your address space",
    "start": "4431180",
    "end": "4439057"
  },
  {
    "text": "typically don't have\nthe execute permission. So if you happen to somehow\nset your instruction pointer to some non-code memory\nlocation, you can set it,",
    "start": "4439057",
    "end": "4447570"
  },
  {
    "text": "but the CPU will\nrefuse to execute it. So this is a reasonably\nnice way to defend",
    "start": "4447570",
    "end": "4453930"
  },
  {
    "text": "against these kinds of attacks. But it doesn't prevent\nquite everything. So just a question.",
    "start": "4453930",
    "end": "4459990"
  },
  {
    "text": "OK. So how would you\nbypass this if you had this non-executable stack? You actually saw this\nexample earlier, right,",
    "start": "4459990",
    "end": "4466860"
  },
  {
    "text": "when I actually jumped\nto the middle of main. So that was a way of sort\nof exploiting this buffer",
    "start": "4466860",
    "end": "4474179"
  },
  {
    "text": "overflow without having to\ninject new code of my own. So even if the stack\nwas non-executable,",
    "start": "4474180",
    "end": "4479513"
  },
  {
    "text": "I would still be able to\njump in the middle of main. In this particular case,\nit's kind of boring. It just prints x and crashes.",
    "start": "4479514",
    "end": "4485020"
  },
  {
    "text": "But in other\nsituations, you might have other pieces of\ncode in your program that are doing interesting\nstuff that you really",
    "start": "4485020",
    "end": "4490089"
  },
  {
    "text": "do want to execute. And that's sort of called return\nto libc attacks for, again, somewhat historical reasons.",
    "start": "4490089",
    "end": "4496170"
  },
  {
    "text": "But it is a way to bypass\nthe security measures. So in the context\nof buffer overflows,",
    "start": "4496170",
    "end": "4502860"
  },
  {
    "text": "there's not really\na clear cut solution that provides perfect protection\nagainst these mistakes",
    "start": "4502860",
    "end": "4508990"
  },
  {
    "text": "because, at the end of the\nday, the programmer did make some mistake in\nwriting this source code. And the best way to fix it\nis probably just to change",
    "start": "4508990",
    "end": "4514540"
  },
  {
    "text": "the source code and make sure\nyou don't call getS() very much, like the\ncompiler warned you. And there's more subtle\nthings that the compiler",
    "start": "4514540",
    "end": "4520000"
  },
  {
    "text": "doesn't warn you about. And you still have to\navoid making those calls. But because it's\nhard, in practice,",
    "start": "4520000",
    "end": "4526570"
  },
  {
    "text": "to change all the\nsoftware out there, many people try to\ndevise techniques that make it more difficult\nto exploit these bugs.",
    "start": "4526570",
    "end": "4533100"
  },
  {
    "text": "For example, making the\nstack non-executable, so you can't inject the\nshell code onto the stack,",
    "start": "4533100",
    "end": "4539135"
  },
  {
    "text": "and you have to do something\nslightly more elaborate. And next couple of\nlectures, next two lectures,",
    "start": "4539135",
    "end": "4545690"
  },
  {
    "text": "actually, we'll look at\nthese defense techniques. They're not all perfect. But they do, in\npractice, make it much more difficult for that\nhacker to exploit things.",
    "start": "4545690",
    "end": "4552780"
  },
  {
    "text": "Question? AUDIENCE: I just have a general\nadministrative question. PROFESSOR: Yeah? AUDIENCE: I was wondering\nif there was a final? And also if there are\nquizzes, and what dates--",
    "start": "4552780",
    "end": "4558696"
  },
  {
    "text": "PROFESSOR: Oh yeah. Yeah, I think if you go\nto the schedule page, there's two quizzes.",
    "start": "4558696",
    "end": "4563960"
  },
  {
    "text": "And there's no final\nduring the final week, but there's a quiz\nright before it. So you're free for\nthe final week,",
    "start": "4563960",
    "end": "4569450"
  },
  {
    "text": "but there's still something\nat the end of the class. Yeah. All right.",
    "start": "4569450",
    "end": "4574469"
  },
  {
    "text": "OK. So I think that's probably\nit for buffer overflows. I guess the one\nquestion is, so what",
    "start": "4574470",
    "end": "4579600"
  },
  {
    "text": "do you do about\nmechanism problems? And the general answer is to\nprobably have fewer mechanisms.",
    "start": "4579600",
    "end": "4586030"
  },
  {
    "text": "So as we saw here,\nif you're relying on every piece of software to\nenforce your security policy, you'll inevitably\nhave mistakes that",
    "start": "4586030",
    "end": "4591349"
  },
  {
    "text": "allow an adversary to bypass\nyour mechanism to exploit some bug in the web server. And a much better\ndesign, and one but",
    "start": "4591349",
    "end": "4597370"
  },
  {
    "text": "you will explore\nin lab two, is one where you structure\nyour whole system so the security of\nthe system doesn't",
    "start": "4597370",
    "end": "4602620"
  },
  {
    "text": "depend on all the\npieces of software enforcing your security policy. The security policy\nis going to be enforced by a small\nnumber of components.",
    "start": "4602621",
    "end": "4608970"
  },
  {
    "text": "And the rest of\nthe stuff actually doesn't matter, for\nsecurity purposes, if it's right or wrong. It's not going to violate\nyour security policy at all.",
    "start": "4608970",
    "end": "4615060"
  },
  {
    "text": "So this, kind of minimizing\nyour trusted computing base is a pretty powerful technique\nto get around these mechanism",
    "start": "4615060",
    "end": "4621820"
  },
  {
    "text": "bugs and problems that we've\nlooked at today, at least in a little bit of detail. All right. So read the paper for Monday.",
    "start": "4621820",
    "end": "4627620"
  },
  {
    "text": "And come to Monday's lecture. And submit the questions\non the website. See you guys then.",
    "start": "4627620",
    "end": "4632920"
  }
]