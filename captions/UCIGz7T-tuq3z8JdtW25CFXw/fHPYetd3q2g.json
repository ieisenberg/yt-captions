[
  {
    "text": "[Music]",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "[Applause]",
    "start": "5040",
    "end": "8200"
  },
  {
    "text": "thank you for that introduction hello everyone and welcome to my presentation tonight entitled",
    "start": "10120",
    "end": "17359"
  },
  {
    "text": "durable microservices with WM very excited to be here tonight and I know",
    "start": "17359",
    "end": "23080"
  },
  {
    "text": "that you are all all tired so I'm going to try to get through this as fast as I can all right so what I'm going to talk",
    "start": "23080",
    "end": "29439"
  },
  {
    "text": "about tonight is a simple API and I'm going to",
    "start": "29439",
    "end": "34719"
  },
  {
    "text": "motivate the use case for the technology that I work on on my day job which is a",
    "start": "34719",
    "end": "40440"
  },
  {
    "text": "new open source project called Golem we're going to be hearing a lot about Golem and then after I motivate the",
    "start": "40440",
    "end": "48120"
  },
  {
    "text": "reason why that technology exists I'm going to take a look at how that technology can be used to solve problems",
    "start": "48120",
    "end": "54559"
  },
  {
    "text": "that many of us developers has have faced numerous times over the course of our career",
    "start": "54559",
    "end": "60480"
  },
  {
    "text": "and then finally I'm going to give you a sneak peek into where I think this type of technology is heading especially in",
    "start": "60480",
    "end": "68040"
  },
  {
    "text": "the WM ecosystem just a simple",
    "start": "68040",
    "end": "74560"
  },
  {
    "text": "API all right so it is 5:15 and I know you're very tired you've",
    "start": "74560",
    "end": "83000"
  },
  {
    "text": "been here for 2 days you've attended dozens and dozens of talks you're",
    "start": "83000",
    "end": "88040"
  },
  {
    "text": "exhausted you want to get your weekend on you want to do whatever fun stuff",
    "start": "88040",
    "end": "93680"
  },
  {
    "text": "there is to do in Barcelona I know there's a ton of great stuff to do but then your phone starts ringing ring ring",
    "start": "93680",
    "end": "102000"
  },
  {
    "text": "ring who could it be I wonder and so you answer your phone and oh no it's your",
    "start": "102000",
    "end": "109600"
  },
  {
    "text": "pointy haired boss and he has a little tiny little assignment that he wants you",
    "start": "109600",
    "end": "115680"
  },
  {
    "text": "to do before you kick off your great weekend in Barcelona what is it well he just wants you to add",
    "start": "115680",
    "end": "122560"
  },
  {
    "text": "a new checkout API for the mobile app your company is working on right just",
    "start": "122560",
    "end": "127600"
  },
  {
    "text": "make sure you do that before you enjoy your weekend in",
    "start": "127600",
    "end": "132720"
  },
  {
    "text": "Barcelona so he leaves you and you go into your cubicle to think about your",
    "start": "132720",
    "end": "138800"
  },
  {
    "text": "life choices and after some amount of reflection you're like this isn't too",
    "start": "138800",
    "end": "146080"
  },
  {
    "text": "bad right this is not too challenging this is something I can handle I'm going",
    "start": "146080",
    "end": "152000"
  },
  {
    "text": "to get done in plenty of time to enjoy the weekend after all checkout processes are not that hard right there's only a",
    "start": "152000",
    "end": "159280"
  },
  {
    "text": "few steps involved in checking out a user from some sort of online shopping",
    "start": "159280",
    "end": "164360"
  },
  {
    "text": "store so what do you do well you write your checkout function in",
    "start": "164360",
    "end": "170519"
  },
  {
    "text": "typescript and the first thing you do is check and Reserve inventory to make sure",
    "start": "170519",
    "end": "176040"
  },
  {
    "text": "that the Ware Warehouse can actually satisfy the order why do you do that check because you're about to charge the",
    "start": "176040",
    "end": "183360"
  },
  {
    "text": "user's credit card and you don't want to charge them unless you actually have that many items in the warehouse for",
    "start": "183360",
    "end": "191400"
  },
  {
    "text": "delivery so you make that check and then you go on to charge the users's credit",
    "start": "191400",
    "end": "197360"
  },
  {
    "text": "card and that way they'll only be charged if the warehouse can actually",
    "start": "197360",
    "end": "202640"
  },
  {
    "text": "deliver on the order but you're not done there you still have a few steps left",
    "start": "202640",
    "end": "208879"
  },
  {
    "text": "after you've charged the user's order and the inventory is reserved in the warehouse you now know that this order",
    "start": "208879",
    "end": "216840"
  },
  {
    "text": "will be fulfilled borrowing something catastrophic the user is going to get",
    "start": "216840",
    "end": "221920"
  },
  {
    "text": "their stuff so you need to call into UPS or DHL or whatever Shipping Company of",
    "start": "221920",
    "end": "229000"
  },
  {
    "text": "your choice and you need to generate a shipping label and a tracking number and you specify the weight of the",
    "start": "229000",
    "end": "235519"
  },
  {
    "text": "goods and you know the dimensions of the Box whatever you specify all that and you get get back your shipping",
    "start": "235519",
    "end": "242319"
  },
  {
    "text": "details after you have your shipping details you can now dispatch the order to the warehouse because you have the",
    "start": "242319",
    "end": "249480"
  },
  {
    "text": "label you have the tracking number you have the the order the customer has already paid for the order so now it's",
    "start": "249480",
    "end": "255959"
  },
  {
    "text": "time to get that thing in motion and then finally after all those",
    "start": "255959",
    "end": "261239"
  },
  {
    "text": "steps have been completed you send the user a confirmation email saying here's your order here's the tracking number",
    "start": "261239",
    "end": "269199"
  },
  {
    "text": "good luck you you see your stuff in a few days hopefully all right well that wasn't so",
    "start": "269199",
    "end": "276360"
  },
  {
    "text": "bad right an hour later come on it wouldn't take us that long to write that code it's not that much code it fit on",
    "start": "276360",
    "end": "282039"
  },
  {
    "text": "one slide we push that code to Amazon right and we're about ready to celebrate",
    "start": "282039",
    "end": "288840"
  },
  {
    "text": "here we come big weekend but then a little voice in the",
    "start": "288840",
    "end": "295360"
  },
  {
    "text": "back of your head starts talking and it's saying are you you sure you've",
    "start": "295360",
    "end": "300680"
  },
  {
    "text": "analyzed all four million possibilities and so you begin thinking",
    "start": "300680",
    "end": "307479"
  },
  {
    "text": "through different failure scenarios that little voice by the way it's it's a distributed systems engineer and he sits",
    "start": "307479",
    "end": "314440"
  },
  {
    "text": "in the in the back of your head reminding you of all the terrible things you're about to do you sit and you think and you",
    "start": "314440",
    "end": "321759"
  },
  {
    "text": "immediately come up with a failure scenario that's pretty bad this failure scenario is",
    "start": "321759",
    "end": "330520"
  },
  {
    "text": "you reserve inventory at the warehouse and then something happens to that running program the server dies",
    "start": "330520",
    "end": "337680"
  },
  {
    "text": "kubernetes kills it developer pushes a new update something happens right then",
    "start": "337680",
    "end": "342840"
  },
  {
    "text": "before the next line of code is ever executed and so you have the situation",
    "start": "342840",
    "end": "349039"
  },
  {
    "text": "where the user clicks the buy button and the inventory is reserved but nothing",
    "start": "349039",
    "end": "354240"
  },
  {
    "text": "else happens after that fact that's it and uh no payment is ever",
    "start": "354240",
    "end": "361840"
  },
  {
    "text": "processed and that those items in the warehouse will just sit there reserved okay that's a problem that's a",
    "start": "361840",
    "end": "367919"
  },
  {
    "text": "discrepancy between the real world in which the user hasn't actually ordered anything because that process didn't",
    "start": "367919",
    "end": "373720"
  },
  {
    "text": "complete and then the virtual world in which we're still holding on to some items and we're not releasing them for",
    "start": "373720",
    "end": "379240"
  },
  {
    "text": "other people to buy that's bad but it actually gets",
    "start": "379240",
    "end": "384560"
  },
  {
    "text": "worse your brain starts thinking and you immediately run across a second failure",
    "start": "384560",
    "end": "389759"
  },
  {
    "text": "scenario in which the payment is process you actually charge the user's credit card",
    "start": "389759",
    "end": "395280"
  },
  {
    "text": "so you do the first step and then you do the second step and then something bad happens the server runs out of memory",
    "start": "395280",
    "end": "402800"
  },
  {
    "text": "the instance just goes down it gets degraded and goes down and so now you're in the situation",
    "start": "402800",
    "end": "410280"
  },
  {
    "text": "where the user was charged the items are reserved but nothing is ever going to",
    "start": "410280",
    "end": "415440"
  },
  {
    "text": "happen those items are always going to be in the warehouse everything downam of those first two steps is never going to",
    "start": "415440",
    "end": "422800"
  },
  {
    "text": "execute that's a major problem because the customer is going to be pissed off that they paid money for something that",
    "start": "422800",
    "end": "428199"
  },
  {
    "text": "is never going to arrive all right so let's take a step",
    "start": "428199",
    "end": "434000"
  },
  {
    "text": "back and figure this out how many failure scenarios are there",
    "start": "434000",
    "end": "439479"
  },
  {
    "text": "in total any",
    "start": "439479",
    "end": "444960"
  },
  {
    "text": "guesses can we say no",
    "start": "446319",
    "end": "453280"
  },
  {
    "text": "guesses I can tell you what the answer is not it's not",
    "start": "453800",
    "end": "459440"
  },
  {
    "text": "five and you might think oh well in any sequence of end steps we can fail in",
    "start": "459440",
    "end": "464840"
  },
  {
    "text": "between the steps and therefore there's n minus one failure scenarios",
    "start": "464840",
    "end": "469960"
  },
  {
    "text": "wrong why because every function we're calling consists of another M steps",
    "start": "469960",
    "end": "476080"
  },
  {
    "text": "let's say and those steps may or may not be Atomic and some of them may or may not",
    "start": "476080",
    "end": "481759"
  },
  {
    "text": "involve concurrency so even a small program like this could have hundreds thousands or",
    "start": "481759",
    "end": "487680"
  },
  {
    "text": "tens of thousands of different failure scenarios this is why distributed",
    "start": "487680",
    "end": "493240"
  },
  {
    "text": "systems engineering is really hard and so you you walk away from that",
    "start": "493240",
    "end": "500000"
  },
  {
    "text": "simple code that you wrote and you're like what do I do I don't know what to do I don't even know if I'm going to be",
    "start": "500000",
    "end": "506360"
  },
  {
    "text": "playing this weekend I might have to work in the office both days and and that's when you call your friend you",
    "start": "506360",
    "end": "513080"
  },
  {
    "text": "know the guy super nerdy guy who Delights in Reading academic papers this",
    "start": "513080",
    "end": "518560"
  },
  {
    "text": "is the distributed systems engineer everyone knows at least one and you ask them hey how do I solve",
    "start": "518560",
    "end": "526120"
  },
  {
    "text": "this problem and he pulls out this equation here nice simple equation he says this",
    "start": "526120",
    "end": "534519"
  },
  {
    "text": "will give you everything you need this just says an Anyan distributed system it's possible possible to realize the",
    "start": "534519",
    "end": "541120"
  },
  {
    "text": "current state of your application as the semi- gral",
    "start": "541120",
    "end": "547000"
  },
  {
    "text": "composition of a bunch of rified patches representing State changes in",
    "start": "547000",
    "end": "553839"
  },
  {
    "text": "English chop up your application into little tiny bits called",
    "start": "553839",
    "end": "558880"
  },
  {
    "text": "events and construct the current state of your application through a fold over",
    "start": "558880",
    "end": "564800"
  },
  {
    "text": "those events so in this way of programming which is probably the dominant way we",
    "start": "564800",
    "end": "571040"
  },
  {
    "text": "build highly reliable highly scalable systems today the huge Advantage is that we can",
    "start": "571040",
    "end": "578600"
  },
  {
    "text": "take every discret packet of information that results in a change in the running",
    "start": "578600",
    "end": "583760"
  },
  {
    "text": "state of our application these things are cold events and we can store it inside a fault tolerant redundant you",
    "start": "583760",
    "end": "591399"
  },
  {
    "text": "know cross data center replicated Q or nosql database or whatever else we",
    "start": "591399",
    "end": "597279"
  },
  {
    "text": "want and so if something bad happens to any piece of infrastructure a node or",
    "start": "597279",
    "end": "602320"
  },
  {
    "text": "the server or request handle does doesn't matter we can always reconstruct the running state of our application and",
    "start": "602320",
    "end": "608800"
  },
  {
    "text": "we can resume processing so many of the biggest most reliable systems out there are built",
    "start": "608800",
    "end": "616000"
  },
  {
    "text": "using some variation of this pattern called event",
    "start": "616000",
    "end": "620639"
  },
  {
    "text": "sourcing the bad thing is that simple code we wrote that we did in like you",
    "start": "621600",
    "end": "627200"
  },
  {
    "text": "know 10 minutes that's not not going to work anymore no we're going to need to take a sledgehammer to that code and",
    "start": "627200",
    "end": "634720"
  },
  {
    "text": "step number one is we actually have to extract a bunch of events and events",
    "start": "634720",
    "end": "640279"
  },
  {
    "text": "represent tiny little steps in the progress that our application is",
    "start": "640279",
    "end": "646079"
  },
  {
    "text": "making how many do you extract well that requires some judgment too few and",
    "start": "646079",
    "end": "653360"
  },
  {
    "text": "you're going to run into reliability problems too much and you're going to run into maintenance problems",
    "start": "653360",
    "end": "660000"
  },
  {
    "text": "and once you extract those events by the way and then deal with the infrastructure involved in persisting",
    "start": "660000",
    "end": "665800"
  },
  {
    "text": "them and serializing them and everything else then comes the fun part you need to",
    "start": "665800",
    "end": "672240"
  },
  {
    "text": "take what was a very simple straightforward imperative process representing checkout that probably just",
    "start": "672240",
    "end": "678200"
  },
  {
    "text": "follows the structure of the user story right there's nothing fancy going on there and you need to transform that",
    "start": "678200",
    "end": "684839"
  },
  {
    "text": "into what's called a finite State machine",
    "start": "684839",
    "end": "690320"
  },
  {
    "text": "and state machines this is my poor man's attempt at a state machine diagram because I couldn't figure out how to",
    "start": "690320",
    "end": "695959"
  },
  {
    "text": "draw some stuff in Google drawing State machines provide you with",
    "start": "695959",
    "end": "701320"
  },
  {
    "text": "a deterministic way of reconstructing the application state from that series",
    "start": "701320",
    "end": "706800"
  },
  {
    "text": "of discrete events and then you write the state",
    "start": "706800",
    "end": "711959"
  },
  {
    "text": "machine I can't fit that on one page I can't fit that on 10 slides that's too",
    "start": "711959",
    "end": "717279"
  },
  {
    "text": "big there's too much code here but but this is a little snippet of the rewrite",
    "start": "717279",
    "end": "722519"
  },
  {
    "text": "that refactors that checkout into State machine style and then in addition to this you need all the serialization the",
    "start": "722519",
    "end": "729200"
  },
  {
    "text": "deserialization code the code that talks to Cassandra or Kafka probably you need",
    "start": "729200",
    "end": "734440"
  },
  {
    "text": "some sort of schema registry to maintain long-term schemas probably you need to do validation on the data you're reading",
    "start": "734440",
    "end": "741079"
  },
  {
    "text": "in case of mismatches there's all sorts of stuff that you have to write in order to make this work in",
    "start": "741079",
    "end": "747120"
  },
  {
    "text": "scale two months later you've you've given up on that weekend it didn't happen I'm",
    "start": "747120",
    "end": "754920"
  },
  {
    "text": "sorry and you've all you've ended up reconstructing modern application",
    "start": "754920",
    "end": "760079"
  },
  {
    "text": "architecture it's a mess and yeah these systems are highly reliable and they're very scalable and",
    "start": "760079",
    "end": "766839"
  },
  {
    "text": "they can be as stateful as you want but they are a pain to build and they're a",
    "start": "766839",
    "end": "772440"
  },
  {
    "text": "pain to maintain and they don't allow businesses to go fast and they're not fun to work",
    "start": "772440",
    "end": "778120"
  },
  {
    "text": "on all right well we made a mistake we need to rewind the clock we need to go back",
    "start": "778120",
    "end": "785760"
  },
  {
    "text": "in time really we need to go back 30 years because that's when we started making",
    "start": "785760",
    "end": "791040"
  },
  {
    "text": "these mistakes but for our purposes we're just going to go back to that point when we made the decision",
    "start": "791040",
    "end": "798240"
  },
  {
    "text": "to deploy this on Amazon and that brings me to Golem so",
    "start": "798240",
    "end": "804160"
  },
  {
    "text": "Golem is a new open- source project that is trying to revolutionize the way you build highly reliable",
    "start": "804160",
    "end": "811519"
  },
  {
    "text": "backends so if you're trying to build a micros service or an API or some sort of",
    "start": "811519",
    "end": "816680"
  },
  {
    "text": "web service and you want that to be extremely reliable like that checkout example then Golem is trying to be the",
    "start": "816680",
    "end": "823240"
  },
  {
    "text": "open source platform you use for building and deploying that back",
    "start": "823240",
    "end": "828399"
  },
  {
    "text": "end its claim to fame is transparent High",
    "start": "828399",
    "end": "833519"
  },
  {
    "text": "reliability which we'll see here in a second you go back to that simple",
    "start": "833519",
    "end": "839639"
  },
  {
    "text": "looking code that you wrote in 10 minutes and you're like this is the code that I really want to use so you do you",
    "start": "839639",
    "end": "849160"
  },
  {
    "text": "write this simple impossibly simple looking code that you and I both know can't possibly work right there's no way",
    "start": "849160",
    "end": "855600"
  },
  {
    "text": "code this simple can actually work and be reliable not on today's Cloud it's too",
    "start": "855600",
    "end": "861240"
  },
  {
    "text": "unreliable but this time instead of pushing to AWS you push to",
    "start": "861240",
    "end": "867720"
  },
  {
    "text": "go and so something happens that little voice in the back of",
    "start": "867720",
    "end": "872959"
  },
  {
    "text": "your head silent right's he's not talking about",
    "start": "872959",
    "end": "878680"
  },
  {
    "text": "failure scenarios anymore because there are none there are no more failure",
    "start": "878680",
    "end": "883839"
  },
  {
    "text": "scenario all the failure scenarios that I mentioned before Gone",
    "start": "883839",
    "end": "889959"
  },
  {
    "text": "poof in fact that program of yours that is now running on Golem can survive",
    "start": "889959",
    "end": "897320"
  },
  {
    "text": "Hardware failures CPU catches fire doesn't matter that program will be",
    "start": "897320",
    "end": "903040"
  },
  {
    "text": "relocated to a new node and its state will be reconstructed and it will continue from the very line of code that",
    "start": "903040",
    "end": "908720"
  },
  {
    "text": "it left off on without any intervention or supervision and from your point of view it's as if nothing",
    "start": "908720",
    "end": "915639"
  },
  {
    "text": "happened there's some sort of server error doesn't matter there's a catastrophic bug that brings down the",
    "start": "915639",
    "end": "922240"
  },
  {
    "text": "server nope it's not going to affect your program the server is restarted or",
    "start": "922240",
    "end": "927880"
  },
  {
    "text": "maybe developer issues a new version of the application they like change some code in there and that rolls out a new",
    "start": "927880",
    "end": "934639"
  },
  {
    "text": "version of the application doesn't affect your running code your code continues to execute in a fault tolerant",
    "start": "934639",
    "end": "942560"
  },
  {
    "text": "update tolerant and even flaky tolerant way giving you instant and transparent",
    "start": "942560",
    "end": "949720"
  },
  {
    "text": "High reliability and you didn't have to do anything except push the big deploy",
    "start": "949720",
    "end": "955680"
  },
  {
    "text": "button yeah our weekend is back on we're going to have a good",
    "start": "955680",
    "end": "962800"
  },
  {
    "text": "time so what's the secret behind this it sounds when you describe it to people",
    "start": "962880",
    "end": "968600"
  },
  {
    "text": "like that they're like What's the Catch This sounds too good to be true what's going on and I wish I could",
    "start": "968600",
    "end": "977120"
  },
  {
    "text": "claim credit for that honestly but I can't the secret sauce at the heart of",
    "start": "977120",
    "end": "984040"
  },
  {
    "text": "Golem is none other than web assembly web assembly gives us a",
    "start": "984040",
    "end": "990560"
  },
  {
    "text": "deterministic virtual machine that has a capability based security model that",
    "start": "990560",
    "end": "996120"
  },
  {
    "text": "ensures that a web assembly program can only do exactly what you allow it to do",
    "start": "996120",
    "end": "1002399"
  },
  {
    "text": "web assembly programs don't have native capabilities every capability they have is passed into it from the outside world",
    "start": "1002399",
    "end": "1008759"
  },
  {
    "text": "which means the outside world that's running your web assembly program has 100% control over everything that",
    "start": "1008759",
    "end": "1016839"
  },
  {
    "text": "happens and then in this day and age we have wazzy which is a sort of foundational system call like interface",
    "start": "1016839",
    "end": "1024678"
  },
  {
    "text": "that allows us to build all of the other stuff that's in our standard libraries and Frameworks and and uh thirdparty",
    "start": "1024679",
    "end": "1032558"
  },
  {
    "text": "libraries and we web assembly gives us cross language support and crossplatform support for",
    "start": "1032559",
    "end": "1039600"
  },
  {
    "text": "free if you wanted to think about solving this problem for machine code you wouldn't even know where to",
    "start": "1039600",
    "end": "1046319"
  },
  {
    "text": "begin right machine code if you wanted to exit Ute that in some sort of magical way that can survive failures you now",
    "start": "1046319",
    "end": "1053280"
  },
  {
    "text": "need to deal with the fact that machine code is not deterministic it's open-ended it can do",
    "start": "1053280",
    "end": "1058440"
  },
  {
    "text": "anything that it wants right it can install interrupts it can execute things which are not code right there's a",
    "start": "1058440",
    "end": "1064120"
  },
  {
    "text": "billion different things it can do to escape its sandbox and then beyond that like which",
    "start": "1064120",
    "end": "1071120"
  },
  {
    "text": "machine code are you going to choose there's dozens of CPUs out there CPU",
    "start": "1071120",
    "end": "1076240"
  },
  {
    "text": "architectures and and you can't support them all right that the task of building",
    "start": "1076240",
    "end": "1083440"
  },
  {
    "text": "transparent High reliability on machine code is just too monumentous to even",
    "start": "1083440",
    "end": "1090120"
  },
  {
    "text": "contemplate but the web assembly VM small precise deterministic",
    "start": "1090120",
    "end": "1096760"
  },
  {
    "text": "specification that does makes all the right decisions from the point of view of of security that is something that we",
    "start": "1096760",
    "end": "1104640"
  },
  {
    "text": "take advantage of this is how every web assembly program in the world looks you got your",
    "start": "1104640",
    "end": "1111760"
  },
  {
    "text": "user logic up there at the top and then underneath there you have all the Frameworks in libraries that",
    "start": "1111760",
    "end": "1117840"
  },
  {
    "text": "you're using and then underneath there those Frameworks in libraries I mean maybe",
    "start": "1117840",
    "end": "1122880"
  },
  {
    "text": "they all go down to your programming language is standard library but in any case at the end of the day your standard",
    "start": "1122880",
    "end": "1129520"
  },
  {
    "text": "Library as well as all the low-level CIS calls go down to",
    "start": "1129520",
    "end": "1135559"
  },
  {
    "text": "wazzy and then from Wazi Wazi is that layer that sort of standardized layer",
    "start": "1135559",
    "end": "1141200"
  },
  {
    "text": "that has different implementations on different hosts so you like you have one for Windows and one for Linux and one",
    "start": "1141200",
    "end": "1146320"
  },
  {
    "text": "for mac and and maybe many actually on On Any Given like concrete platform you have at least",
    "start": "1146320",
    "end": "1153600"
  },
  {
    "text": "one and what this architecture allows us to do is weave our own",
    "start": "1153600",
    "end": "1161600"
  },
  {
    "text": "implementation of wazzy into that stack and our implementation of Wazi",
    "start": "1161600",
    "end": "1167840"
  },
  {
    "text": "ordinarily the first time you run your program is going to call out to the host",
    "start": "1167840",
    "end": "1172880"
  },
  {
    "text": "version of Wazi but it's going to make one important distinction it's going to",
    "start": "1172880",
    "end": "1179880"
  },
  {
    "text": "take whatever request it gets from your app and it's going to serialize it in",
    "start": "1179880",
    "end": "1185440"
  },
  {
    "text": "some sort of redundant fault tolerant data store like could be redis cluster could be S3 could be Cassandra could be",
    "start": "1185440",
    "end": "1193400"
  },
  {
    "text": "whatever and then when the host environment returns some sort of response it's going to take that and",
    "start": "1193400",
    "end": "1199720"
  },
  {
    "text": "it's also going to send it and serialize it in The Fault tolerant data store in effect all of the low-level",
    "start": "1199720",
    "end": "1208120"
  },
  {
    "text": "system calls in your web assembly application are being written out in",
    "start": "1208120",
    "end": "1213440"
  },
  {
    "text": "this stream of events and these individual events describe all of the",
    "start": "1213440",
    "end": "1218960"
  },
  {
    "text": "external act interactions that are happening with your program and what that allows us to do is",
    "start": "1218960",
    "end": "1226320"
  },
  {
    "text": "thanks to the deterministic nature of the web assembly VM if something happens we can actually",
    "start": "1226320",
    "end": "1233000"
  },
  {
    "text": "reconstruct the running state of your application from basically a fold on all those events from the beginning of time",
    "start": "1233000",
    "end": "1239360"
  },
  {
    "text": "to the last one before the failure event",
    "start": "1239360",
    "end": "1244440"
  },
  {
    "text": "occurred so this gives us the ability this gives Golem the ability",
    "start": "1246080",
    "end": "1252880"
  },
  {
    "text": "to provide transparent fault tolerance which means if there's a fault",
    "start": "1252880",
    "end": "1258600"
  },
  {
    "text": "than Hardware or software or whatever your program continues to survive that transparent update tolerance which means",
    "start": "1258600",
    "end": "1265679"
  },
  {
    "text": "you can push as many new versions and they don't interfere with currently running versions and then flaky tolerance which",
    "start": "1265679",
    "end": "1272320"
  },
  {
    "text": "means that your system can interact with if your system does interact with other components that are flaky you don't see",
    "start": "1272320",
    "end": "1279440"
  },
  {
    "text": "that because retry policies are automatically applied and what this allows you to do",
    "start": "1279440",
    "end": "1287600"
  },
  {
    "text": "is build code that looks impossibly simple but is extraordinarily",
    "start": "1287600",
    "end": "1294720"
  },
  {
    "text": "reliable and this this new approach to high reliability it it basically lets us kill",
    "start": "1296159",
    "end": "1302960"
  },
  {
    "text": "off event sourcing right there's probably hundreds of millions maybe",
    "start": "1302960",
    "end": "1310559"
  },
  {
    "text": "billions of lines of code out there that has been written to support and maintain these large scale Event Source systems",
    "start": "1310559",
    "end": "1319679"
  },
  {
    "text": "and it should all go away there's no reason we should ever have to be writing Event Source systems it's not an easy",
    "start": "1319679",
    "end": "1325600"
  },
  {
    "text": "thing to do it's very complicated you have to have a lot of knowledge to build and maintain these systems we don't need",
    "start": "1325600",
    "end": "1330960"
  },
  {
    "text": "it anymore but another Super interesting thing that Golem gives us that we're",
    "start": "1330960",
    "end": "1338000"
  },
  {
    "text": "still in the early stages of exploring is the fact that if you're running program can't go down for any",
    "start": "1338000",
    "end": "1346039"
  },
  {
    "text": "reason then you can start storing important things in memory right in this simple example you",
    "start": "1346039",
    "end": "1353559"
  },
  {
    "text": "can see we're using an an inmemory list to hold the contents of",
    "start": "1353559",
    "end": "1360240"
  },
  {
    "text": "the user's shopping cart there's no need to store that in redus or postgress or",
    "start": "1360240",
    "end": "1366679"
  },
  {
    "text": "Dynamo DB why why would we do that our program",
    "start": "1366679",
    "end": "1372200"
  },
  {
    "text": "can't go down it's always going to be running so memory becomes as reliable as",
    "start": "1372200",
    "end": "1380279"
  },
  {
    "text": "a database which means you can't literally",
    "start": "1380279",
    "end": "1385400"
  },
  {
    "text": "delete databases okay because we use databases for lots of reasons but Golem",
    "start": "1385400",
    "end": "1390760"
  },
  {
    "text": "lets you rethink the decision to use a database and a cache and a nosql store",
    "start": "1390760",
    "end": "1397840"
  },
  {
    "text": "and all the other decisions that we make instinctually in this age of stateless apps we build stateless apps because we",
    "start": "1397840",
    "end": "1404520"
  },
  {
    "text": "don't want to head down the path of event sourcing but in the world of Golem we",
    "start": "1404520",
    "end": "1410480"
  },
  {
    "text": "can Embrace State and we can build State flaps and we can rely on that state to survive any",
    "start": "1410480",
    "end": "1417080"
  },
  {
    "text": "sort of catastrophe at the level of the the server or the hardware or whatever",
    "start": "1417080",
    "end": "1422240"
  },
  {
    "text": "we can treat memory as if memory itself is a",
    "start": "1422240",
    "end": "1427840"
  },
  {
    "text": "database another very interesting thing I think",
    "start": "1429159",
    "end": "1435320"
  },
  {
    "text": "is is the relationship between kubernetes and",
    "start": "1435320",
    "end": "1441799"
  },
  {
    "text": "Golem if you look at all the features that a framework an orchestration",
    "start": "1441799",
    "end": "1448039"
  },
  {
    "text": "framework like kubernetes gives us I mean they're really great we get automatic scaling and container",
    "start": "1448039",
    "end": "1453799"
  },
  {
    "text": "management and just on and on and on and kubernetes has really given us like an operating system for distributed",
    "start": "1453799",
    "end": "1461039"
  },
  {
    "text": "applications that lets us scale and monitor provision and manage or distributed",
    "start": "1461039",
    "end": "1466200"
  },
  {
    "text": "applications but a lot of these things are actually already being done by Golem itself at a",
    "start": "1466200",
    "end": "1472279"
  },
  {
    "text": "different level of scale than kubernetes was ever designed to handle on kubernetes you can have I",
    "start": "1472279",
    "end": "1479840"
  },
  {
    "text": "think around 200 or so pods per machine the equivalent Concept in Golem",
    "start": "1479840",
    "end": "1486159"
  },
  {
    "text": "would be a running WM instance and you can have hundreds of",
    "start": "1486159",
    "end": "1491799"
  },
  {
    "text": "thousands of those dedicated to a machine and they can all be stateful and you can address anyone from",
    "start": "1491799",
    "end": "1498919"
  },
  {
    "text": "any other wasm instance in the cluster so even though this is not a a",
    "start": "1498919",
    "end": "1508120"
  },
  {
    "text": "short-term alignment I think over the course of the next two to five years you're going to see more and more",
    "start": "1508120",
    "end": "1514159"
  },
  {
    "text": "alignment between the features that Golem has in supports and the features that kubernetes has been giving us in a",
    "start": "1514159",
    "end": "1521880"
  },
  {
    "text": "slightly different context where instead of managing containers Golem is helping",
    "start": "1521880",
    "end": "1530399"
  },
  {
    "text": "you manage web assembly instances with the ultimate goal being",
    "start": "1530399",
    "end": "1536520"
  },
  {
    "text": "at some point Golem provides a unified fabric for deploying scaling and",
    "start": "1536520",
    "end": "1543000"
  },
  {
    "text": "operating all of your WM components with softwar defined",
    "start": "1543000",
    "end": "1548919"
  },
  {
    "text": "reliability what does that mean it means for some of your components you don't really care if it's highly reliable so",
    "start": "1548919",
    "end": "1555679"
  },
  {
    "text": "you shouldn't have to pay the cost of that and for others like the checkout example you really do care if that's",
    "start": "1555679",
    "end": "1562159"
  },
  {
    "text": "reliable so you turn up the knobs on reliability to the max right reliability",
    "start": "1562159",
    "end": "1568080"
  },
  {
    "text": "should be something that we decide independent from the Cod we should have knobs and switches that we use to tweak",
    "start": "1568080",
    "end": "1575200"
  },
  {
    "text": "reliability Up and Down based on how valuable it is to us and how much we want to pay for",
    "start": "1575200",
    "end": "1581240"
  },
  {
    "text": "that and and in that future Golem provides that unified fabric that lets us deploy all of our workloads even if",
    "start": "1581240",
    "end": "1588960"
  },
  {
    "text": "those workloads contained mixed requirements for",
    "start": "1588960",
    "end": "1594559"
  },
  {
    "text": "reliability and then finally Golem because it Embraces the",
    "start": "1596520",
    "end": "1602760"
  },
  {
    "text": "web assembly component model and because the component model allows you to say this component exports these types and",
    "start": "1602760",
    "end": "1611080"
  },
  {
    "text": "these functions and these resources and this is how component link",
    "start": "1611080",
    "end": "1616760"
  },
  {
    "text": "linking works right you compose components and it works using these exported types functions and",
    "start": "1616760",
    "end": "1624520"
  },
  {
    "text": "resources because Golem has embraced the component model 100% it's gone all in on",
    "start": "1624520",
    "end": "1630200"
  },
  {
    "text": "the component model what this allows it to do is",
    "start": "1630200",
    "end": "1635600"
  },
  {
    "text": "provide a way for your running web assembly instances to talk to other",
    "start": "1635600",
    "end": "1642039"
  },
  {
    "text": "instances through the component model right in a pure Golem cluster",
    "start": "1642039",
    "end": "1649039"
  },
  {
    "text": "you don't need grpc you don't need",
    "start": "1649039",
    "end": "1654159"
  },
  {
    "text": "protuff you don't need Jason between your your web assembly microservices you",
    "start": "1654159",
    "end": "1661480"
  },
  {
    "text": "don't need HTTP you don't need any of that stuff why because you already have",
    "start": "1661480",
    "end": "1667320"
  },
  {
    "text": "the component model and the component model already has wit and wit could be thought of as a better version of",
    "start": "1667320",
    "end": "1674519"
  },
  {
    "text": "protuff that's specialized to web assembly data type well web assembly",
    "start": "1674519",
    "end": "1680760"
  },
  {
    "text": "component model data types and so in the",
    "start": "1680760",
    "end": "1686639"
  },
  {
    "text": "limit Golem allows you to delete HTTP Json",
    "start": "1686720",
    "end": "1693559"
  },
  {
    "text": "grpc all the different formats out there it's kind of silly to me that in",
    "start": "1693559",
    "end": "1703640"
  },
  {
    "text": "20124 we take our type data structures and then we figure out how to",
    "start": "1703640",
    "end": "1708919"
  },
  {
    "text": "turn them into Strings and then we take those strings while bite arrays and we send them over",
    "start": "1708919",
    "end": "1714840"
  },
  {
    "text": "the wire and then we figure out how to turn those strings back into type data",
    "start": "1714840",
    "end": "1720720"
  },
  {
    "text": "structures there's something wrong with that has been wrong for a long time I know we have things like protuff that",
    "start": "1720720",
    "end": "1727200"
  },
  {
    "text": "help us and do a great job but fundamentally in a world in which microservices are gone because the",
    "start": "1727200",
    "end": "1734840"
  },
  {
    "text": "web assembly component model has killed them and we ass resemble our applications from different components",
    "start": "1734840",
    "end": "1741840"
  },
  {
    "text": "written in different languages those components should be able to talk to each other whether",
    "start": "1741840",
    "end": "1747519"
  },
  {
    "text": "they're locally composed and running in the same process or whether they're",
    "start": "1747519",
    "end": "1753200"
  },
  {
    "text": "remote across Network boundaries and that's what Golem gives us is the ability to take this great component",
    "start": "1753200",
    "end": "1759240"
  },
  {
    "text": "model and extend it across time and space to do distributed",
    "start": "1759240",
    "end": "1766278"
  },
  {
    "text": "computation all right so in summary web assembly isn't just a toy",
    "start": "1767039",
    "end": "1773960"
  },
  {
    "text": "right this is serious heavyduty technology and there's a better reason to use web",
    "start": "1773960",
    "end": "1782000"
  },
  {
    "text": "assembly than it's the shiny new thing right web assembly is enabling new",
    "start": "1782000",
    "end": "1787399"
  },
  {
    "text": "classes of technology to exist that could not exist otherwise you cannot build Golem on top of machine code it",
    "start": "1787399",
    "end": "1794720"
  },
  {
    "text": "cannot happen you cannot build Golem for the jvm cannot happen you can build Golem for",
    "start": "1794720",
    "end": "1802760"
  },
  {
    "text": "web assembly so web assembly is enabling us to build new types of things that",
    "start": "1802760",
    "end": "1808159"
  },
  {
    "text": "have never before existed and that that's one of of I think many killer use",
    "start": "1808159",
    "end": "1813880"
  },
  {
    "text": "cases for for adopting web assembly number three Golem provides a",
    "start": "1813880",
    "end": "1821120"
  },
  {
    "text": "highly reliable foundation for distributed apps it's trying to allow us",
    "start": "1821120",
    "end": "1826159"
  },
  {
    "text": "to have write very simple code very very simple code that is extremely",
    "start": "1826159",
    "end": "1832039"
  },
  {
    "text": "reliable and previously that combination was not possible right you you can have",
    "start": "1832039",
    "end": "1837440"
  },
  {
    "text": "simple code or you can have highly reliable code you don't get to choose both of those but Golem says you do get",
    "start": "1837440",
    "end": "1845039"
  },
  {
    "text": "to choose both of them thanks to this new thing called Web assembly and then",
    "start": "1845039",
    "end": "1851760"
  },
  {
    "text": "finally I hope you've seen by attending many of the Great talks uh today that",
    "start": "1851760",
    "end": "1857080"
  },
  {
    "text": "disruption in in the cloud native ecosystem is right around the corner there's a lot of really exciting things",
    "start": "1857080",
    "end": "1863480"
  },
  {
    "text": "happening and the component model you know Golem WM Cloud all the great stuff",
    "start": "1863480",
    "end": "1869159"
  },
  {
    "text": "that's being done out there is going to change the way we build Cloud native applications I hope you're all as",
    "start": "1869159",
    "end": "1875760"
  },
  {
    "text": "excited about that as I am all right that's it thank you very much for attending my",
    "start": "1875760",
    "end": "1883278"
  },
  {
    "text": "talk I don't know if I have any time for",
    "start": "1886919",
    "end": "1892000"
  },
  {
    "text": "questions I hope I have time for one hello awesome presentation um so you",
    "start": "1892000",
    "end": "1899840"
  },
  {
    "text": "talk about like the Der minism in wasum is kind of like one of the key pieces I wonder if you have thought about like",
    "start": "1899840",
    "end": "1905760"
  },
  {
    "text": "how to handle multi-threading in this context it's not",
    "start": "1905760",
    "end": "1911639"
  },
  {
    "text": "fun um it's not fun uh and it's going to come down to exactly how WM ends up",
    "start": "1911639",
    "end": "1918720"
  },
  {
    "text": "supporting multi-threading um but in a shared everything scenario it's not great because uh you really you need to",
    "start": "1918720",
    "end": "1927399"
  },
  {
    "text": "identify points where shared memory is read and points where shared memory is written too and those become points that",
    "start": "1927399",
    "end": "1934440"
  },
  {
    "text": "you need to create a record in the log so that if you're restoring the state of that running process you you can restore",
    "start": "1934440",
    "end": "1941200"
  },
  {
    "text": "it to exactly what it was despite all the concurrency that's otherwise happening so it's not a fun process it",
    "start": "1941200",
    "end": "1947600"
  },
  {
    "text": "is possible and if if WM threads ends up succeeding and being adopted then we'll",
    "start": "1947600",
    "end": "1954000"
  },
  {
    "text": "probably support it but it's not going to be pretty that's going to be some very ugly looking code I think awesome",
    "start": "1954000",
    "end": "1960320"
  },
  {
    "text": "thank you",
    "start": "1960320",
    "end": "1963000"
  },
  {
    "text": "yeah hello so uh thank you very much for the presentation it was really good um",
    "start": "1971240",
    "end": "1976399"
  },
  {
    "text": "so I think that was a in this sense where talking about reliability and trying to recreate the St that we had in",
    "start": "1976399",
    "end": "1982799"
  },
  {
    "text": "the past before the disruption um I think about it about like if you ever play video games on an",
    "start": "1982799",
    "end": "1989519"
  },
  {
    "text": "emulator like have you play you can do that already like I think it's a similar idea right like yeah if I close my",
    "start": "1989519",
    "end": "1996240"
  },
  {
    "text": "emulator but I save the state of the game then I can because I guess that you dumping memory of the Heat and stack and",
    "start": "1996240",
    "end": "2002480"
  },
  {
    "text": "all that okay so um if I it correctly you're like synchronizing wherever um a",
    "start": "2002480",
    "end": "2009279"
  },
  {
    "text": "call to the was CK is done like for example if you do an assistant call um",
    "start": "2009279",
    "end": "2014399"
  },
  {
    "text": "so that means that some sections of the code like imagine that you are assigning numbers moving things around but you're",
    "start": "2014399",
    "end": "2020760"
  },
  {
    "text": "not calling an assistant call it would mean that between those two points there will be no synchronization am I right",
    "start": "2020760",
    "end": "2027320"
  },
  {
    "text": "that's correct okay and that lets you do a huge amount of CPU work right without",
    "start": "2027320",
    "end": "2033080"
  },
  {
    "text": "any network because that CPU work um if there is a failure event any you have to",
    "start": "2033080",
    "end": "2038120"
  },
  {
    "text": "replay it it's going to produce the same inmemory state as an outcome so that means CPU um driven workloads are very",
    "start": "2038120",
    "end": "2044960"
  },
  {
    "text": "very efficient because there's almost no synchronization points in that type of code yeah I was just wondering because",
    "start": "2044960",
    "end": "2050720"
  },
  {
    "text": "um I don't know if you're like uh doing a head of time compilation for those was modules because otherwise it would be",
    "start": "2050720",
    "end": "2056480"
  },
  {
    "text": "even harder to control what happens within CIS right yeah yeah it minimizes Network bandwidth it adds a very tiny",
    "start": "2056480",
    "end": "2062679"
  },
  {
    "text": "amount of network bandwidth to your running app but for CPU work there's no network iio okay thank you very much",
    "start": "2062679",
    "end": "2068398"
  },
  {
    "text": "great question it's all open source so please",
    "start": "2068399",
    "end": "2075158"
  },
  {
    "text": "check it out and uh give us feedback report bugs play around with it it is not 1.0 so don't put your boss's",
    "start": "2075159",
    "end": "2083320"
  },
  {
    "text": "application checkout API onto that system right now because you you'll Pro we'll probably be",
    "start": "2083320",
    "end": "2090040"
  },
  {
    "text": "hearing from that but July is our Target date for a 1.o that you can ship stuff",
    "start": "2090040",
    "end": "2096639"
  },
  {
    "text": "on okay thank you very",
    "start": "2096640",
    "end": "2104440"
  },
  {
    "text": "much",
    "start": "2106200",
    "end": "2109200"
  }
]