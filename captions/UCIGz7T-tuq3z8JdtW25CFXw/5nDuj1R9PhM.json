[
  {
    "start": "0",
    "end": "106000"
  },
  {
    "text": "foreign [Music] [Applause]",
    "start": "599",
    "end": "7620"
  },
  {
    "text": "things an upside down guide to webassembly",
    "start": "9559",
    "end": "15139"
  },
  {
    "text": "so I am Eduardo vaki you may remember me for successful blog posts such as webassembly for the Java geek",
    "start": "20100",
    "end": "28260"
  },
  {
    "text": "um I am myself a Java geek so when I talk to other people that do Java they",
    "start": "28260",
    "end": "33899"
  },
  {
    "text": "go like webassembly yeah python in the browser we know that didn't really work well",
    "start": "33899",
    "end": "39840"
  },
  {
    "text": "what's the what's to be excited about but then we are here",
    "start": "39840",
    "end": "45480"
  },
  {
    "text": "um not just for webassembly in the browser but for webassembly on the back",
    "start": "45480",
    "end": "51300"
  },
  {
    "text": "end right and seriously seriously now so",
    "start": "51300",
    "end": "56820"
  },
  {
    "text": "I'm so in the in this presentation I'm going to try to give an overview of how",
    "start": "56820",
    "end": "62100"
  },
  {
    "text": "we came to talk about webassembly uh just giving if you want some other",
    "start": "62100",
    "end": "69360"
  },
  {
    "text": "um another another picture from the previous talk from Taylor and um yeah and I'm gonna do that by the",
    "start": "69360",
    "end": "78000"
  },
  {
    "text": "help of uh some sources primary sources of information um actually wanted to uh quote from this",
    "start": "78000",
    "end": "85380"
  },
  {
    "text": "paper bringing a web up to speed with webassembly uh because well we have a bunch of people here today there are the",
    "start": "85380",
    "end": "93180"
  },
  {
    "text": "co-olders of this paper and it was presented six years ago right here in",
    "start": "93180",
    "end": "98520"
  },
  {
    "text": "Barcelona so it's really cool to be here again um to talk about the future of",
    "start": "98520",
    "end": "104220"
  },
  {
    "text": "webassembly so let me meet another trip down memory lane and a",
    "start": "104220",
    "end": "112079"
  },
  {
    "start": "106000",
    "end": "152000"
  },
  {
    "text": "bit earlier than where we were with Taylor I'm talking about two early 2000s",
    "start": "112079",
    "end": "118320"
  },
  {
    "text": "late 90s these are the browsers more or less that we were using including our beloved Internet Explorer sex",
    "start": "118320",
    "end": "125040"
  },
  {
    "text": "and all of these browsers were already capable of running JavaScript but it",
    "start": "125040",
    "end": "130619"
  },
  {
    "text": "wasn't really considered a proper programming language it was more considered like a language to do button",
    "start": "130619",
    "end": "136860"
  },
  {
    "text": "rollovers and and I mean what web browser at the time",
    "start": "136860",
    "end": "143160"
  },
  {
    "text": "wasn't asked capable as they are now I mean they mostly uh display text and",
    "start": "143160",
    "end": "149879"
  },
  {
    "text": "pictures and sometimes animations but if you wanted to do a little bit",
    "start": "149879",
    "end": "156300"
  },
  {
    "start": "152000",
    "end": "468000"
  },
  {
    "text": "more in that you had to resort to resort to plugins you had to use plugins so the",
    "start": "156300",
    "end": "161459"
  },
  {
    "text": "problem with plugins is that you may do basically everything but their native",
    "start": "161459",
    "end": "166620"
  },
  {
    "text": "bits of code that plug into your web browser so um you could play music videos and do interactivity proper",
    "start": "166620",
    "end": "174360"
  },
  {
    "text": "programming if you will but I had a lot of downsides they ran pretty much at the",
    "start": "174360",
    "end": "179519"
  },
  {
    "text": "same level of uh privileges of your web browser and well um you as a developer",
    "start": "179519",
    "end": "186900"
  },
  {
    "text": "if you wanted to develop a plugin you had to Target all the browsers CPUs and",
    "start": "186900",
    "end": "193800"
  },
  {
    "text": "operating systems that you wanted your user uh to to support for your user and",
    "start": "193800",
    "end": "199800"
  },
  {
    "text": "then the other issues is was that you had to keep them up to date as an end user and you know you can rely on your",
    "start": "199800",
    "end": "206280"
  },
  {
    "text": "end user to keep their systems tidy but I'm not blaming our users it's just put",
    "start": "206280",
    "end": "212879"
  },
  {
    "text": "putting too much burden on them so ultimately we decided that that was not",
    "start": "212879",
    "end": "218760"
  },
  {
    "text": "the way to go there could be better ways and this guy was also the reason why we",
    "start": "218760",
    "end": "227580"
  },
  {
    "text": "ultimately dropped uh Pro plugins not just this guy of course I just mean uh",
    "start": "227580",
    "end": "233640"
  },
  {
    "text": "mobile platforms that didn't support uh plugins at all so but in the meantime we",
    "start": "233640",
    "end": "240060"
  },
  {
    "text": "we discovered that JavaScript wasn't that bad of a language it was actually a proper language that you could use to",
    "start": "240060",
    "end": "245400"
  },
  {
    "text": "write software and browser were gaining more and more capabilities so we started",
    "start": "245400",
    "end": "251819"
  },
  {
    "text": "to write JavaScript but at the same time we wanted to use code that we had",
    "start": "251819",
    "end": "257160"
  },
  {
    "text": "already written or we wanted to use the programming language that we liked more so we started to treat JavaScript not",
    "start": "257160",
    "end": "265320"
  },
  {
    "text": "just as a proper programming language a dynamic language that just ran but has a",
    "start": "265320",
    "end": "271020"
  },
  {
    "text": "compilation Target and I'm just mentioning a bunch of compilers or transpilers",
    "start": "271020",
    "end": "277440"
  },
  {
    "text": "um here just uh you know forgive an overview but there were many more and",
    "start": "277440",
    "end": "282660"
  },
  {
    "text": "some of them are still little e-news including as I said I at least used to",
    "start": "282660",
    "end": "288060"
  },
  {
    "text": "be a Java developer and so I now agreed but wheat is still around there in the",
    "start": "288060",
    "end": "293880"
  },
  {
    "text": "form of Jekyll I think we may have some talk about Jekyll too",
    "start": "293880",
    "end": "299160"
  },
  {
    "text": "um and uh yeah to the point we were treating JavaScript as a compilation Target to the point",
    "start": "299160",
    "end": "305880"
  },
  {
    "text": "that someone called it the Assembly of the web this is Scott hanselman's blog",
    "start": "305880",
    "end": "311520"
  },
  {
    "text": "that which I think was the first calling it that way um and um so we needed undeserved a",
    "start": "311520",
    "end": "321540"
  },
  {
    "text": "better compilation Target that just uh minified JavaScript so",
    "start": "321540",
    "end": "326699"
  },
  {
    "text": "uh Taylor mentioned native clients so what what was native client about it was mostly a cc Plus tool chain",
    "start": "326699",
    "end": "334919"
  },
  {
    "text": "um in the native client flavor which was actually the first even though it's on the right",
    "start": "334919",
    "end": "340860"
  },
  {
    "text": "um we use the GCC tool chain modify tool chain to generate native code that was",
    "start": "340860",
    "end": "346860"
  },
  {
    "text": "I'll have her sandboxed and we had to Target all the architectures that we wanted to run on but it was sandboxed",
    "start": "346860",
    "end": "354120"
  },
  {
    "text": "and we solved the deployment issue because the native payload was directly",
    "start": "354120",
    "end": "360120"
  },
  {
    "text": "delivered to our end users like any other resource like images and JavaScript payloads and so on so forth",
    "start": "360120",
    "end": "366539"
  },
  {
    "text": "so what about portable native client it solved another issue the issue of our",
    "start": "366539",
    "end": "372720"
  },
  {
    "text": "portability and CPU architectures you just Target one calculation Target and then it would be recompiled on your",
    "start": "372720",
    "end": "379020"
  },
  {
    "text": "client machine what was the issue well one of the issues is that was uh specific to Chrome",
    "start": "379020",
    "end": "386600"
  },
  {
    "text": "and yeah so could we do better well we already had",
    "start": "386600",
    "end": "393180"
  },
  {
    "text": "JavaScript runtimes everywhere all major browser implemented a just-in-time",
    "start": "393180",
    "end": "398520"
  },
  {
    "text": "compiler for JavaScript this is a these are features from the comic uh that presented for the first time Chrome with",
    "start": "398520",
    "end": "404819"
  },
  {
    "text": "a with V8 and but pretty much every other major browser uh had uh wrote JavaScript just",
    "start": "404819",
    "end": "413100"
  },
  {
    "text": "in time compilation to the mainstream so we had already a platform could we target it in a better way instead of",
    "start": "413100",
    "end": "420120"
  },
  {
    "text": "just generating some JavaScript and that's where um asm.js was was released",
    "start": "420120",
    "end": "427699"
  },
  {
    "text": "it was a proper compilation Target but defined as a subset of of JavaScript",
    "start": "427699",
    "end": "434340"
  },
  {
    "text": "that um browsers that were aware of of that Target could actually use to generate",
    "start": "434340",
    "end": "441240"
  },
  {
    "text": "ahead of time native code that was performant and uh yeah the the unreal",
    "start": "441240",
    "end": "446699"
  },
  {
    "text": "demo demonstrated really that that was feasible and was actually pretty impressive for the time so",
    "start": "446699",
    "end": "454380"
  },
  {
    "text": "okay let's go back to the present or actually to 2015 it was in October but",
    "start": "454380",
    "end": "461699"
  },
  {
    "text": "that was the date that was the year where uh web assembly was first announced",
    "start": "461699",
    "end": "467940"
  },
  {
    "text": "and and so back to the actual present people that have been using Java and",
    "start": "467940",
    "end": "474900"
  },
  {
    "start": "468000",
    "end": "538000"
  },
  {
    "text": "other platforms such as CLR um are are still thinking his history repeating are",
    "start": "474900",
    "end": "481020"
  },
  {
    "text": "we doing over and over again the same things the same mistake we all know probably here that it is not the case",
    "start": "481020",
    "end": "487080"
  },
  {
    "text": "but I wanted to give you um a comparison to want to better understand why people are asking",
    "start": "487080",
    "end": "493979"
  },
  {
    "text": "themselves these questions and actually to give to prove a point to to really",
    "start": "493979",
    "end": "499440"
  },
  {
    "text": "show that there is a reason why I are doing that so the jvm on the surface",
    "start": "499440",
    "end": "504539"
  },
  {
    "text": "really looks like webassembly runtimes so there's a bytecode representation you",
    "start": "504539",
    "end": "509819"
  },
  {
    "text": "compile your source code into bytecode there's a stack based VM um it can run on the client and the",
    "start": "509819",
    "end": "515940"
  },
  {
    "text": "server and the boycott could be interpreted or could be just in time compiled or even compile ahead of time",
    "start": "515940",
    "end": "522899"
  },
  {
    "text": "CLR pretty much the same thing all right so yeah Case Closed we're just",
    "start": "522899",
    "end": "529620"
  },
  {
    "text": "Reinventing the wheel we should have just gone with a jvm uh right once Run",
    "start": "529620",
    "end": "534660"
  },
  {
    "text": "Anywhere debug everywhere am I right um",
    "start": "534660",
    "end": "540660"
  },
  {
    "start": "538000",
    "end": "656000"
  },
  {
    "text": "the point the thing is uh jvm the Java by code was never really meant to be a",
    "start": "540660",
    "end": "547200"
  },
  {
    "text": "general purpose compilation Target this is not just a while claim that I'm doing just to justify the webassemblies better",
    "start": "547200",
    "end": "553980"
  },
  {
    "text": "um there is actually there are actually papers this one I wanted to mention because a tailor mentioned J Ruby",
    "start": "553980",
    "end": "560459"
  },
  {
    "text": "um and this was the first paper where I would say it was acknowledged that the jvm was being targeted by other",
    "start": "560459",
    "end": "567420"
  },
  {
    "text": "languages in particular Dynamic languages and we're gonna talk about we're going to see a talk about Dynamic",
    "start": "567420",
    "end": "572700"
  },
  {
    "text": "languages on Friday on webassembly I don't know if there are others definitely there's one on Friday so",
    "start": "572700",
    "end": "578940"
  },
  {
    "text": "boycott's meat combinators invoke Dynamic on the jvm it was the first time we were acknowledging the dynamic",
    "start": "578940",
    "end": "584339"
  },
  {
    "text": "languages wanted to run on the jvm by in and a new instruction was being",
    "start": "584339",
    "end": "590040"
  },
  {
    "text": "introduced to the jvm to better support these languages and I'm quoting from the",
    "start": "590040",
    "end": "595800"
  },
  {
    "text": "abstract the jvm was designed for just one",
    "start": "595800",
    "end": "601260"
  },
  {
    "text": "language Java and so when it is used to express programs in other source languages there are often pain points",
    "start": "601260",
    "end": "607080"
  },
  {
    "text": "which makes it harder right so besides now in quoting from the pldi 17",
    "start": "607080",
    "end": "614760"
  },
  {
    "text": "paper pld has a Premiere uh venue for programming language research it was",
    "start": "614760",
    "end": "620700"
  },
  {
    "text": "presented in Barcelona bringing the web up to speed with webassembly so jvm",
    "start": "620700",
    "end": "625860"
  },
  {
    "text": "bytecode verification takes 150 page to describe while webassembly takes one",
    "start": "625860",
    "end": "631500"
  },
  {
    "text": "page it took a decade to get it right and definitely don't want that for",
    "start": "631500",
    "end": "638820"
  },
  {
    "text": "something that runs in a browser or for that matter anywhere and jvm Cil and",
    "start": "638820",
    "end": "645000"
  },
  {
    "text": "Android Dalvik allow biker to create control flow structure that can get the",
    "start": "645000",
    "end": "651240"
  },
  {
    "text": "Justin Time compiler confused so again that's probably something we don't want",
    "start": "651240",
    "end": "657060"
  },
  {
    "start": "656000",
    "end": "861000"
  },
  {
    "text": "so let's say bye to Old Duke that's not what we want",
    "start": "657060",
    "end": "662339"
  },
  {
    "text": "what about llvm it's a VM right it's a collection of modular and reusable",
    "start": "662339",
    "end": "669120"
  },
  {
    "text": "compiler and Tool technique tool chain Technologies this is the web page the home page for llvm they actually say on",
    "start": "669120",
    "end": "676620"
  },
  {
    "text": "the home page despite its name llvm it is not really a virtual machine the name",
    "start": "676620",
    "end": "683519"
  },
  {
    "text": "lvm itself is not an acronym it is the full name of the project that is",
    "start": "683519",
    "end": "688560"
  },
  {
    "text": "actually not true at least not in historical sense it used to mean low level virtual",
    "start": "688560",
    "end": "695220"
  },
  {
    "text": "machine but it is true now and that it was confusing because people when they heard virtual machine they thought oh I",
    "start": "695220",
    "end": "702180"
  },
  {
    "text": "can run this code you really cannot I mean lvm was shipping uh an interpreter",
    "start": "702180",
    "end": "710220"
  },
  {
    "text": "in the very first versions I mean there are experiments to actually do it there's one VM on the jvm that does it",
    "start": "710220",
    "end": "716220"
  },
  {
    "text": "but if you take a close look it has a bunch of issues again quoting from that",
    "start": "716220",
    "end": "721740"
  },
  {
    "text": "paper we investigated and we here is the portable native client Developers",
    "start": "721740",
    "end": "729000"
  },
  {
    "text": "um and portable native client was portable because they were using llvm bit code now it is a bit code bytecode",
    "start": "729000",
    "end": "737579"
  },
  {
    "text": "representation what's wrong with it can't we use it well not really it is not entirely",
    "start": "737579",
    "end": "744360"
  },
  {
    "text": "stable it changes across major versions so again the browsers",
    "start": "744360",
    "end": "750000"
  },
  {
    "text": "um the we don't want to break the web so that's that's an issue but even if that",
    "start": "750000",
    "end": "755399"
  },
  {
    "text": "wasn't an issue it has a defined Behavior do you want that on a portable",
    "start": "755399",
    "end": "760860"
  },
  {
    "text": "runtime it was planned to be less compact than a stack machine is",
    "start": "760860",
    "end": "766200"
  },
  {
    "text": "essentially required everyone to either ship llvm or re-implement a part of it",
    "start": "766200",
    "end": "774180"
  },
  {
    "text": "of course yeah and and of course lvm is known to be slow so again not great",
    "start": "774180",
    "end": "782160"
  },
  {
    "text": "so what about other compiler IRS so the main issue with compiler IRS and that's",
    "start": "782160",
    "end": "787620"
  },
  {
    "text": "why the VM in llvm can be confusing is that the IRS are meant for doing further",
    "start": "787620",
    "end": "795480"
  },
  {
    "text": "Transformations um not really for immediate execution so",
    "start": "795480",
    "end": "800880"
  },
  {
    "text": "they're not necessarily Compact and not necessarily easily too easy to verify so",
    "start": "800880",
    "end": "806399"
  },
  {
    "text": "again goodbye into the wyvern so that's how pretty much we we got to",
    "start": "806399",
    "end": "814139"
  },
  {
    "text": "webassembly webassembly offers compact representation efficient validation and compilation and safe low to no override",
    "start": "814139",
    "end": "821279"
  },
  {
    "text": "execution as compared to say the jvm it's an abstraction over Modern Hardware",
    "start": "821279",
    "end": "827639"
  },
  {
    "text": "why for instance the jvm bytecode is really a lower level representation of",
    "start": "827639",
    "end": "833100"
  },
  {
    "text": "the Java language I'm going to show you a few examples of that a little bit and it's basic",
    "start": "833100",
    "end": "838440"
  },
  {
    "text": "portable a portable platform for language Hardware platform independent",
    "start": "838440",
    "end": "843720"
  },
  {
    "text": "and it can be used outside the web and that's why also we're here there are many supported languages this was from",
    "start": "843720",
    "end": "851100"
  },
  {
    "text": "uh the one of the excellent fermi's blog post um doesn't mean to be complete this list",
    "start": "851100",
    "end": "857220"
  },
  {
    "text": "because it's just growing every day now I want to give you an overview of",
    "start": "857220",
    "end": "863100"
  },
  {
    "start": "861000",
    "end": "1078000"
  },
  {
    "text": "the architecture so I mentioned already that the jvm is a stack machine and we",
    "start": "863100",
    "end": "869519"
  },
  {
    "text": "know the webassembly is a stack machine so they're the same right now they are not really the same one of the examples",
    "start": "869519",
    "end": "875519"
  },
  {
    "text": "in which they differ is that they are provide yes they do computation on a",
    "start": "875519",
    "end": "880800"
  },
  {
    "text": "stack of values but they use structured constructs for control flow",
    "start": "880800",
    "end": "887220"
  },
  {
    "text": "and let's see so there is not there are any jumps there are blocks ifs and loops",
    "start": "887220",
    "end": "893100"
  },
  {
    "text": "and we're going to see an example of that but first on the surface they really really really look like uh",
    "start": "893100",
    "end": "898740"
  },
  {
    "text": "lookalike so let's see an example uh there's the X variable and then I sum that to two and then the result I'm",
    "start": "898740",
    "end": "905399"
  },
  {
    "text": "gonna do times three so on the left you see jvm bytecode on the right you see",
    "start": "905399",
    "end": "911220"
  },
  {
    "text": "webassembly in the what format web assembly text format uh and uh if if you look at them first",
    "start": "911220",
    "end": "919440"
  },
  {
    "text": "you load the variable X and then push that on the stack then you get the constant two push that on the stack pop",
    "start": "919440",
    "end": "926399"
  },
  {
    "text": "two values because you're doing an ad and then push the result in the stack then you push the value for constant",
    "start": "926399",
    "end": "931980"
  },
  {
    "text": "three and then you pop them both because you're doing a multiplication and then you push the result pretty much the same",
    "start": "931980",
    "end": "938459"
  },
  {
    "text": "you can just jump with your eyes left and right and it will be exactly the same sequence of instructions one of the",
    "start": "938459",
    "end": "945180"
  },
  {
    "text": "difference with the wasm text format is uh that you can also write it in a nested representation which is",
    "start": "945180",
    "end": "950519"
  },
  {
    "text": "reminiscent of scheme which is obviously a sort of a inside joke about the",
    "start": "950519",
    "end": "956300"
  },
  {
    "text": "Origins really early origins of JavaScript um and the thing is these",
    "start": "956300",
    "end": "962339"
  },
  {
    "text": "representations really is just uh mostly uh cosmetic because if you follow the",
    "start": "962339",
    "end": "968220"
  },
  {
    "text": "order of well-parenthesized Expressions it just linearizes to the one on the",
    "start": "968220",
    "end": "973320"
  },
  {
    "text": "left which is nice because it's more readable but it's pretty much the same",
    "start": "973320",
    "end": "978480"
  },
  {
    "text": "so we were saying that um the the issue with jvm Cil and",
    "start": "978480",
    "end": "984240"
  },
  {
    "text": "Android Dalvik bytecode is that you are able to create pathological pieces of",
    "start": "984240",
    "end": "991320"
  },
  {
    "text": "code that can get the just inside compile a completely confused and in",
    "start": "991320",
    "end": "997019"
  },
  {
    "text": "construct in contrast webassembly has this structured control flow which makes validation and compilation faster",
    "start": "997019",
    "end": "1003199"
  },
  {
    "text": "simpler and of course can be extended for further types of control flow and",
    "start": "1003199",
    "end": "1009500"
  },
  {
    "text": "even locking structures so let's see an example again for Java",
    "start": "1009500",
    "end": "1015199"
  },
  {
    "text": "bytec and that's because as you as I've told you I'm more familiar with it but that's the same for other uh other biker",
    "start": "1015199",
    "end": "1021920"
  },
  {
    "text": "representations so we have a very stupid um if then else if x is true then I'm",
    "start": "1021920",
    "end": "1028100"
  },
  {
    "text": "going to print one if else is false gonna print Zero Secret Service structure is not really important when I",
    "start": "1028100",
    "end": "1033140"
  },
  {
    "text": "want you to see is that we have this jump here jump set instruction 14 and",
    "start": "1033140",
    "end": "1038178"
  },
  {
    "text": "then we have a go to here that jumps at 21 and there's no restriction on the",
    "start": "1038179",
    "end": "1043520"
  },
  {
    "text": "point where you can jump in the bytecode so that's why you can really mess things",
    "start": "1043520",
    "end": "1048620"
  },
  {
    "text": "up here as opposed to webassembly that really has structure is actually it actually",
    "start": "1048620",
    "end": "1054500"
  },
  {
    "text": "kind of reads like a normal programming language you have and if you have a Dan you have an else branch and this is the",
    "start": "1054500",
    "end": "1061580"
  },
  {
    "text": "structured the nested representation but even the linearized version still maintains the structure and this is one",
    "start": "1061580",
    "end": "1069200"
  },
  {
    "text": "of the reasons why it's safer and uh you know gives you more guarantees",
    "start": "1069200",
    "end": "1075320"
  },
  {
    "text": "so that was just one example of how they differ now I want to give you an overview",
    "start": "1075320",
    "end": "1082480"
  },
  {
    "start": "1078000",
    "end": "1542000"
  },
  {
    "text": "of the landscape also um it is not meant to be complete we have two days to make",
    "start": "1082480",
    "end": "1088280"
  },
  {
    "text": "here make it more complete and just gonna name drop a few uh a few a few",
    "start": "1088280",
    "end": "1094220"
  },
  {
    "text": "relevant um run times but of course we're going to get a better picture in the next in",
    "start": "1094220",
    "end": "1100700"
  },
  {
    "text": "the next hours and days so um well of course I want to mention Docker uh as",
    "start": "1100700",
    "end": "1106100"
  },
  {
    "text": "you know they have just released um there was um support and they",
    "start": "1106100",
    "end": "1112520"
  },
  {
    "text": "yesterday I think they just announced an extension to it the first runtime they",
    "start": "1112520",
    "end": "1117919"
  },
  {
    "text": "were supporting was was a match but now they support many more including Fermi and spin and wasn't time and like",
    "start": "1117919",
    "end": "1125900"
  },
  {
    "text": "from Days labs so wasn't time I guess everybody here",
    "start": "1125900",
    "end": "1131179"
  },
  {
    "text": "knows it it's the most widely known runtime and a lot of other projects are based on",
    "start": "1131179",
    "end": "1137059"
  },
  {
    "text": "it I wanted to mention Docker also because some a lot we talk we hear a lot",
    "start": "1137059",
    "end": "1143120"
  },
  {
    "text": "um that wasam is an alternative to containers and I wanted to explain maybe",
    "start": "1143120",
    "end": "1148760"
  },
  {
    "text": "why we say that so what are Linux containers Linux containers are technology that puts together sandboxing",
    "start": "1148760",
    "end": "1155240"
  },
  {
    "text": "packaging and distribution so sandboxing is through a bunch of Cisco",
    "start": "1155240",
    "end": "1161299"
  },
  {
    "text": "there are in the Linus kernel that allows you to expose only a part of your environment to the running executable",
    "start": "1161299",
    "end": "1168020"
  },
  {
    "text": "and this is basically delivered through Wazi because it's a capabilities-based",
    "start": "1168020",
    "end": "1173720"
  },
  {
    "text": "set of ciscals um that provide you with that kind of",
    "start": "1173720",
    "end": "1179419"
  },
  {
    "text": "safety as for packaging and distribution Docker is providing that through their",
    "start": "1179419",
    "end": "1184880"
  },
  {
    "text": "registry infrastructure and but there are also ecosystems that",
    "start": "1184880",
    "end": "1190220"
  },
  {
    "text": "are trying to spin off their own kind of thing such as weapon wapism is part of the wasamer umbrella",
    "start": "1190220",
    "end": "1197660"
  },
  {
    "text": "which I wanted to mention because of course the title of the talk is also inspired by that",
    "start": "1197660",
    "end": "1203799"
  },
  {
    "text": "um but also so this is for running outside the browser and kind of Standalone applications",
    "start": "1203900",
    "end": "1210280"
  },
  {
    "text": "container like I wanted to mention the other great use case for webassembly",
    "start": "1210280",
    "end": "1215360"
  },
  {
    "text": "which is the extensibility of other applications so Envoy proxy is",
    "start": "1215360",
    "end": "1221120"
  },
  {
    "text": "supporting webassembly for doing filters and transformations similarly to red panda which is an",
    "start": "1221120",
    "end": "1228919"
  },
  {
    "text": "alternative Kafka implementation that allows you to write filters and Transformations and run close to the",
    "start": "1228919",
    "end": "1234140"
  },
  {
    "text": "core close to your data using webassembly so allowing you to write using any language that is able to",
    "start": "1234140",
    "end": "1240080"
  },
  {
    "text": "support it's pretty cool uh we're gonna have a talk about lunatic and I think it's lunatic plus grain",
    "start": "1240080",
    "end": "1246559"
  },
  {
    "text": "pretty cool on Friday um I think this is this is not often talking about uh talk about it's uh it's",
    "start": "1246559",
    "end": "1254000"
  },
  {
    "text": "a runtime that's based on wasn't time but provides um capabilities for you to run applications uh in another language so",
    "start": "1254000",
    "end": "1262100"
  },
  {
    "text": "you instead of writing uh processes actors uh only in languages that are",
    "start": "1262100",
    "end": "1267200"
  },
  {
    "text": "able to run on the beam VM that is erlang maybe Elixir and a bunch of",
    "start": "1267200",
    "end": "1272539"
  },
  {
    "text": "others you can write them using any language that is capable of targeting webassembly so that's pretty cool",
    "start": "1272539",
    "end": "1279679"
  },
  {
    "text": "and of course crustlet is one probably the one first project that",
    "start": "1279679",
    "end": "1285380"
  },
  {
    "text": "um promoted running webassembly payloads on kubernetes but also I wanted to mention see run",
    "start": "1285380",
    "end": "1293140"
  },
  {
    "text": "because it's another project that allows you to run web assembly on a cluster",
    "start": "1293140",
    "end": "1298720"
  },
  {
    "text": "well in well send box down Linux and in general also on a cluster we're going to",
    "start": "1298720",
    "end": "1304340"
  },
  {
    "text": "have a workshop I think tomorrow about oci and",
    "start": "1304340",
    "end": "1309919"
  },
  {
    "text": "um and webassembly from Tony I wanted to mention a weird use case",
    "start": "1309919",
    "end": "1316100"
  },
  {
    "text": "because I'm that kind of guy I like compilers and weird stuff doing done with compilers so Zig programming",
    "start": "1316100",
    "end": "1322820"
  },
  {
    "text": "language lesser known programming language but pretty cool uh they use webassembly to bootstrap their",
    "start": "1322820",
    "end": "1328760"
  },
  {
    "text": "programming language their implementation usually one of the ways you can bootstrap your implementation is",
    "start": "1328760",
    "end": "1333799"
  },
  {
    "text": "by writing a an interpreter for a subset of the language and they just said why",
    "start": "1333799",
    "end": "1338960"
  },
  {
    "text": "should I do an uh another interpreter when can I can just use webassembly as a",
    "start": "1338960",
    "end": "1344480"
  },
  {
    "text": "Target and then bootstrap that way pretty interesting pretty cool and then of course let me",
    "start": "1344480",
    "end": "1350600"
  },
  {
    "text": "spend a couple of words about zero because that's the project I'm working on tetrate",
    "start": "1350600",
    "end": "1356179"
  },
  {
    "text": "it's the one I would say or at least one of the uh",
    "start": "1356179",
    "end": "1364159"
  },
  {
    "text": "runtimes that run and go without seagull so you can run any web assembly runtime",
    "start": "1364159",
    "end": "1370039"
  },
  {
    "text": "and Link it against the go run time provided that you use sigo so if there",
    "start": "1370039",
    "end": "1376640"
  },
  {
    "text": "are go developers in the room I know there are some they will be familiar with seagull but for the people that are",
    "start": "1376640",
    "end": "1382280"
  },
  {
    "text": "not familiar with it um basically it's a flavor of the go language if you will in runtime that has",
    "start": "1382280",
    "end": "1388520"
  },
  {
    "text": "some constraint and you give up a lot if you're using sigo so you're able to link against native libraries but you give up",
    "start": "1388520",
    "end": "1395480"
  },
  {
    "text": "some some of the benefits that you you have by choosing go in the first place so there are a bunch of cool use cases",
    "start": "1395480",
    "end": "1402860"
  },
  {
    "text": "for waziro and go that I wanted to show you and one of the things since seagull",
    "start": "1402860",
    "end": "1409460"
  },
  {
    "text": "has this kind of friction with the runtime is using webassembly as an",
    "start": "1409460",
    "end": "1415460"
  },
  {
    "text": "extension language through with zero for doing foreign function interfaces and this blog posts were very very funny if",
    "start": "1415460",
    "end": "1421159"
  },
  {
    "text": "carsonization of go programs were was about using the rust library inside your go program for doing some stuff so it's",
    "start": "1421159",
    "end": "1428659"
  },
  {
    "text": "interesting um Dynamic linking so one of the selling",
    "start": "1428659",
    "end": "1434240"
  },
  {
    "text": "point of go is creating a static binary that you can deploy anywhere but what",
    "start": "1434240",
    "end": "1440000"
  },
  {
    "text": "about Dynamic linking where that's something that basically you give up unless you use ego so",
    "start": "1440000",
    "end": "1446539"
  },
  {
    "text": "by using webassembly you don't need to give that up because you can use",
    "start": "1446539",
    "end": "1451780"
  },
  {
    "text": "webassembly as a form of dynamic linking basically so language extension program extension I wanted to mention Dapper",
    "start": "1451780",
    "end": "1458960"
  },
  {
    "text": "because there's uh they're using one zero to deliver HTTP to let the user",
    "start": "1458960",
    "end": "1466460"
  },
  {
    "text": "develop http middleware and there are others so",
    "start": "1466460",
    "end": "1472460"
  },
  {
    "text": "in fact you are cordially invited to the zero 1.0 launch party happening on",
    "start": "1472460",
    "end": "1480380"
  },
  {
    "text": "March 24th so Friday at 7 pm it's 10 minute walk from here this is the",
    "start": "1480380",
    "end": "1485659"
  },
  {
    "text": "official Graphics I think my Graphics was much better but whatever",
    "start": "1485659",
    "end": "1491659"
  },
  {
    "text": "why not take any personally so if you want to get there there's an rsbp RSVP on the app for the conference",
    "start": "1491659",
    "end": "1500480"
  },
  {
    "text": "but this is also the Eventbrite link and you can register there we're going to have some food some drinks and a bunch",
    "start": "1500480",
    "end": "1507919"
  },
  {
    "text": "of awesome lighting talks from our community some of the folks are of course at the conference giving talks",
    "start": "1507919",
    "end": "1514159"
  },
  {
    "text": "and I couldn't list all of them here but yeah we're gonna also have an",
    "start": "1514159",
    "end": "1520700"
  },
  {
    "text": "introduction from Takeshi who's the founder of the project so it's gonna be awesome hope you'll see you there",
    "start": "1520700",
    "end": "1526700"
  },
  {
    "text": "thank you for staying with me and hope you'll enjoy the rest [Applause]",
    "start": "1526700",
    "end": "1542500"
  },
  {
    "start": "1542000",
    "end": "1667000"
  },
  {
    "text": "are there any questions",
    "start": "1542500",
    "end": "1546039"
  },
  {
    "text": "good everything was crystal clear I mean pushing to the core here so I'm happy to",
    "start": "1550279",
    "end": "1558500"
  },
  {
    "text": "talk to you uh oh there is a question",
    "start": "1558500",
    "end": "1563320"
  },
  {
    "text": "oh there is one so basically as web assembly matures and",
    "start": "1563659",
    "end": "1571520"
  },
  {
    "text": "do you think that there will be even more and more specialized runtimes is",
    "start": "1571520",
    "end": "1576980"
  },
  {
    "text": "especially giving how simpler webassembly is compared to",
    "start": "1576980",
    "end": "1582200"
  },
  {
    "text": "to you know say the some other specifications or do you think like naturally it will you know get more",
    "start": "1582200",
    "end": "1589700"
  },
  {
    "text": "Consolidated or what's your your take on yeah that's an interesting question I I",
    "start": "1589700",
    "end": "1595580"
  },
  {
    "text": "probably we can't really tell right now maybe we're here also to discuss this in a way",
    "start": "1595580",
    "end": "1601539"
  },
  {
    "text": "I think that specialized runtime are actually an exciting part of the web",
    "start": "1601539",
    "end": "1606980"
  },
  {
    "text": "assembly ecosystem because it's not just uh you know one side fits all there are",
    "start": "1606980",
    "end": "1612799"
  },
  {
    "text": "multiple use cases I think the nest talk will be about Edge so there and and there are talks about",
    "start": "1612799",
    "end": "1620000"
  },
  {
    "text": "embedded embedded runtimes so uh",
    "start": "1620000",
    "end": "1625220"
  },
  {
    "text": "I don't know if we'll Converge on one run time actually I would hope that",
    "start": "1625220",
    "end": "1630320"
  },
  {
    "text": "we're not converging over one runtime because I mean platforms like Java and net kind of",
    "start": "1630320",
    "end": "1638000"
  },
  {
    "text": "software for having not that much diversity it's not like there is only",
    "start": "1638000",
    "end": "1643400"
  },
  {
    "text": "one implementation there are a few but at the end of the day there are not many",
    "start": "1643400",
    "end": "1649159"
  },
  {
    "text": "so I think it's it's cool that we have that diversity because the specification is sufficiently small to that we can",
    "start": "1649159",
    "end": "1658520"
  },
  {
    "text": "have more flavors and specialized runtime so probably I hope not I hope",
    "start": "1658520",
    "end": "1664820"
  },
  {
    "text": "we'll keep those foreign there's a question there",
    "start": "1664820",
    "end": "1672100"
  },
  {
    "start": "1667000",
    "end": "1774000"
  },
  {
    "text": "first of all great talk and congratulations on the wah Zero release",
    "start": "1683179",
    "end": "1688279"
  },
  {
    "text": "thank you so my question is do you think there's any parallels that can be drawn",
    "start": "1688279",
    "end": "1693980"
  },
  {
    "text": "between the openness of platform operating system low level",
    "start": "1693980",
    "end": "1700760"
  },
  {
    "text": "software architectures and the same thing that's happening in Hardware with new processors like Risk five",
    "start": "1700760",
    "end": "1707840"
  },
  {
    "text": "huh that's an interesting question I don't",
    "start": "1707840",
    "end": "1713179"
  },
  {
    "text": "know if I can answer that um I mean yeah we're seeing an interesting",
    "start": "1713179",
    "end": "1720640"
  },
  {
    "text": "and it's an interesting time honestly [Music] um",
    "start": "1720640",
    "end": "1726340"
  },
  {
    "text": "we we are seeing that there is uh there is movement and and it is really interesting that risk five is being",
    "start": "1726799",
    "end": "1733400"
  },
  {
    "text": "developed as an open platform um and it is interesting that",
    "start": "1733400",
    "end": "1738799"
  },
  {
    "text": "webassembly itself has been implemented realized and defined as a as an Isa so",
    "start": "1738799",
    "end": "1747020"
  },
  {
    "text": "the thing is uh there there could be some sort of",
    "start": "1747020",
    "end": "1752059"
  },
  {
    "text": "interaction with this between these two words I don't know how but uh we're living interesting time I I",
    "start": "1752059",
    "end": "1760340"
  },
  {
    "text": "don't have a clear answer to your question it was kind of open-ended uh but uh yeah I hope I hope you we will",
    "start": "1760340",
    "end": "1766820"
  },
  {
    "text": "see more openness even in the hardware sector as uh as well yeah",
    "start": "1766820",
    "end": "1773380"
  },
  {
    "start": "1774000",
    "end": "1882000"
  },
  {
    "text": "there's another question here I hope I can answer this one",
    "start": "1774620",
    "end": "1779620"
  },
  {
    "text": "thank you for the question by the way yeah I guess it's an easy question um",
    "start": "1781039",
    "end": "1786740"
  },
  {
    "text": "thank you first for the talk it was a very um interesting one um like coming from the adoption",
    "start": "1786740",
    "end": "1793580"
  },
  {
    "text": "perspective what do you think are the uh yet to be delivered things that that we",
    "start": "1793580",
    "end": "1800059"
  },
  {
    "text": "need for a bigger adoption of web assembly and web assembly technology that that's a very good question so",
    "start": "1800059",
    "end": "1805159"
  },
  {
    "text": "what's the what do we still need so uh so a friend of mine wanted to that was",
    "start": "1805159",
    "end": "1813860"
  },
  {
    "text": "it was skeptical about webassembly and he he uh bluntly asked him yeah what can",
    "start": "1813860",
    "end": "1820820"
  },
  {
    "text": "he do which is not a calculator with this so YZ and in general Haas function and",
    "start": "1820820",
    "end": "1828679"
  },
  {
    "text": "specialized runtime are an answer or an answer to that um we definitely need a set of",
    "start": "1828679",
    "end": "1835600"
  },
  {
    "text": "Cisco's apis libraries don't know what you want to call them by the setup",
    "start": "1835600",
    "end": "1842059"
  },
  {
    "text": "um shared a shared platform that that is not just the core runtime that we can",
    "start": "1842059",
    "end": "1848600"
  },
  {
    "text": "use and to to do proper actual work so Wazi goes in that direction and we're",
    "start": "1848600",
    "end": "1856159"
  },
  {
    "text": "going to need probably an ecosystem of libraries like I don't know I'm just thinking from the top of my mind things for the numerical analysis for instance",
    "start": "1856159",
    "end": "1863240"
  },
  {
    "text": "things that people need and and then probably deduction will",
    "start": "1863240",
    "end": "1868520"
  },
  {
    "text": "come with itself because of the benefits of running everywhere are are there I",
    "start": "1868520",
    "end": "1874220"
  },
  {
    "text": "mean they're just I don't think that's debatable thank you",
    "start": "1874220",
    "end": "1881380"
  },
  {
    "start": "1882000",
    "end": "2045000"
  },
  {
    "text": "boom Another question hi thanks for the talk uh also bit the",
    "start": "1883340",
    "end": "1889700"
  },
  {
    "text": "general question aren't we all a bit worried about the speed the things are",
    "start": "1889700",
    "end": "1894740"
  },
  {
    "text": "shaping specifically I'm talking about a specification for interfaces which",
    "start": "1894740",
    "end": "1900080"
  },
  {
    "text": "became modules which became components and yeah we've lived through pandemics obviously to two years wasted I guess",
    "start": "1900080",
    "end": "1907520"
  },
  {
    "text": "but aren't we all a bit worried that things aren't developing fast enough not",
    "start": "1907520",
    "end": "1913159"
  },
  {
    "text": "in general sense but some people have compared the interfaces with core by ADLs and com idls and stuff",
    "start": "1913159",
    "end": "1920960"
  },
  {
    "text": "like that right and these things went nowhere I mean de facto nowhere yet they",
    "start": "1920960",
    "end": "1926960"
  },
  {
    "text": "were aiming at the same thing like let's mix languages Let's uh let's develop components in different layers is is",
    "start": "1926960",
    "end": "1933860"
  },
  {
    "text": "there any hope that these we've seen the slide from the previous talk about Taylor how these things may",
    "start": "1933860",
    "end": "1941600"
  },
  {
    "text": "look like and they look very complex and that's normal I mean we've seen this before us who have lived through com and",
    "start": "1941600",
    "end": "1948020"
  },
  {
    "text": "Corbin and all that we've seen that this this is a hard problem are we sure in a",
    "start": "1948020",
    "end": "1953179"
  },
  {
    "text": "way that it's going to be sold I mean what's your take on it thanks okay",
    "start": "1953179",
    "end": "1958940"
  },
  {
    "text": "um so actually the at the beginning I thought the question was isn't this",
    "start": "1958940",
    "end": "1964820"
  },
  {
    "text": "moving too fast and then you know because you know uh in a way kinds of",
    "start": "1964820",
    "end": "1971299"
  },
  {
    "text": "feels that way but on the other hand you're right I mean uh there are there",
    "start": "1971299",
    "end": "1976399"
  },
  {
    "text": "have been a lot of Evolutions that went extremely fast in a way but then to solve proper problems uh maybe we're not",
    "start": "1976399",
    "end": "1984620"
  },
  {
    "text": "moving fast enough I don't know I mean it it is a it is a",
    "start": "1984620",
    "end": "1990020"
  },
  {
    "text": "complex issue I mean you have to move an entire community and get consensus and if you want to do that properly you want",
    "start": "1990020",
    "end": "1997100"
  },
  {
    "text": "to do it in a way that you actually get consensus and that's uh that's a major issue I mean",
    "start": "1997100",
    "end": "2003760"
  },
  {
    "text": "um we cannot just be driven by one specific interest so that we can deliver",
    "start": "2003760",
    "end": "2009580"
  },
  {
    "text": "faster and unfortunately one of the pain points of moving as a community is that",
    "start": "2009580",
    "end": "2015340"
  },
  {
    "text": "things will move slower and so um I guess the point I'm trying to make",
    "start": "2015340",
    "end": "2022419"
  },
  {
    "text": "is that there are proven technologies that you can Embrace today for doing anything",
    "start": "2022419",
    "end": "2027700"
  },
  {
    "text": "and webassembly maybe is not ready for everything right now but for some use",
    "start": "2027700",
    "end": "2033640"
  },
  {
    "text": "cases is a promising technology that you can already adopt and I think it is worth investing in it anyway",
    "start": "2033640",
    "end": "2041880"
  },
  {
    "text": "foreign I don't know if there's enough time though",
    "start": "2044559",
    "end": "2050679"
  },
  {
    "text": "okay I as a fellow old Java person do you have any uh opinions on kind of uh",
    "start": "2050679",
    "end": "2056980"
  },
  {
    "text": "graul and some of the newer work coming out of the jvm because you know historically technology is always copy",
    "start": "2056980",
    "end": "2063158"
  },
  {
    "text": "ideas from each other and get inspired and you know as crawl advances is that going to potentially negate uh folks",
    "start": "2063159",
    "end": "2070419"
  },
  {
    "text": "moving to something like a web assembly type setups and scroll could handle some of those needs for those type of",
    "start": "2070419",
    "end": "2076898"
  },
  {
    "text": "language so I'm just curious of your yeah so uh there's a flavor if you will of this talk that is more oriented",
    "start": "2076899",
    "end": "2083138"
  },
  {
    "text": "towards Java developers and cut some of the slides because I didn't want to bore the rest of the audience and thanks for the question and so the reason run time",
    "start": "2083139",
    "end": "2090220"
  },
  {
    "text": "that I haven't mentioned for Java which is called what's called growl VM which I have mentioned",
    "start": "2090220",
    "end": "2096878"
  },
  {
    "text": "it it was born as an experiment or runtime like 10 years ago or maybe more than that now yeah about 10 years ago",
    "start": "2096879",
    "end": "2104260"
  },
  {
    "text": "and now it's called the Java system by storm with their native compilation",
    "start": "2104260",
    "end": "2111160"
  },
  {
    "text": "capabilities but it's a polyglot runtime that is able to run a number of different languages Dynamic languages as",
    "start": "2111160",
    "end": "2117700"
  },
  {
    "text": "well the llvm bit code which I previously said couldn't be run it can",
    "start": "2117700",
    "end": "2122740"
  },
  {
    "text": "be run um they also they also provide a web",
    "start": "2122740",
    "end": "2128500"
  },
  {
    "text": "assembly runtime and I hear they're considering",
    "start": "2128500",
    "end": "2133839"
  },
  {
    "text": "um using llvn to generate code which will make it possible also to Target they're",
    "start": "2133839",
    "end": "2140079"
  },
  {
    "text": "already targeting risk 5 through that and it probably makes it possible to Target webassembly as well",
    "start": "2140079",
    "end": "2145839"
  },
  {
    "text": "I don't know the status of that except for uh mention in a blog post on medium",
    "start": "2145839",
    "end": "2151900"
  },
  {
    "text": "so I think they're thinking about it because a lot of there's a lot of bus bus about web assembly so probably",
    "start": "2151900",
    "end": "2157960"
  },
  {
    "text": "they're considering it I'm excited to see what what will come out of that there I know there are also other efforts to compile Java to webassembly",
    "start": "2157960",
    "end": "2166240"
  },
  {
    "text": "or to run webassembly on top of java I couldn't I didn't have enough time to to",
    "start": "2166240",
    "end": "2171339"
  },
  {
    "text": "man to to talk about that but uh I have a few slides if you'd like all right thanks again and see you",
    "start": "2171339",
    "end": "2178480"
  },
  {
    "text": "around thank you",
    "start": "2178480",
    "end": "2182338"
  }
]