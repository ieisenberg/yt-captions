[
  {
    "text": "[Music]",
    "start": "290",
    "end": "13179"
  },
  {
    "text": "I'm going to talk today about Golem and",
    "start": "13400",
    "end": "16520"
  },
  {
    "text": "uh Golem is a serverless durable",
    "start": "16520",
    "end": "18680"
  },
  {
    "text": "execution platform uh but we can just",
    "start": "18680",
    "end": "22359"
  },
  {
    "text": "say that it's something that runs web",
    "start": "22359",
    "end": "24160"
  },
  {
    "text": "assembly applications on the server site",
    "start": "24160",
    "end": "25720"
  },
  {
    "text": "for now and um instead of trying to sell",
    "start": "25720",
    "end": "29199"
  },
  {
    "text": "you Golem or that you need durable",
    "start": "29199",
    "end": "31119"
  },
  {
    "text": "execution I'm just going to talk about",
    "start": "31119",
    "end": "34040"
  },
  {
    "text": "why did we choose web assembly and I'm",
    "start": "34040",
    "end": "36320"
  },
  {
    "text": "going to give a few examples of how we",
    "start": "36320",
    "end": "39000"
  },
  {
    "text": "are taking advantage of web assembly's",
    "start": "39000",
    "end": "41640"
  },
  {
    "text": "uh",
    "start": "41640",
    "end": "42440"
  },
  {
    "text": "powers and then I'm going to talk a",
    "start": "42440",
    "end": "45200"
  },
  {
    "text": "little bit about a few things that that",
    "start": "45200",
    "end": "47520"
  },
  {
    "text": "we are doing that might be interesting",
    "start": "47520",
    "end": "49399"
  },
  {
    "text": "for you even if you are not using Golem",
    "start": "49399",
    "end": "52600"
  },
  {
    "text": "itself so let's start with core web",
    "start": "52600",
    "end": "56079"
  },
  {
    "text": "assembly so if if we think about why we",
    "start": "56079",
    "end": "58640"
  },
  {
    "text": "chose core web assembly to build golemon",
    "start": "58640",
    "end": "61600"
  },
  {
    "text": "of course one of the reasons can be",
    "start": "61600",
    "end": "63439"
  },
  {
    "text": "performance another is its unboxing",
    "start": "63439",
    "end": "65960"
  },
  {
    "text": "capabilities and the large number of",
    "start": "65960",
    "end": "68920"
  },
  {
    "text": "languages that are supporting",
    "start": "68920",
    "end": "71240"
  },
  {
    "text": "it uh in this talk I'm only going to",
    "start": "71240",
    "end": "74439"
  },
  {
    "text": "focus on the sandboxing capabilities uh",
    "start": "74439",
    "end": "76920"
  },
  {
    "text": "which is really uh important of course",
    "start": "76920",
    "end": "79040"
  },
  {
    "text": "because of safety that allows us to run",
    "start": "79040",
    "end": "81880"
  },
  {
    "text": "applications multiple applications from",
    "start": "81880",
    "end": "83680"
  },
  {
    "text": "multiple users in this in a single uh",
    "start": "83680",
    "end": "86439"
  },
  {
    "text": "Golem ex executor process without having",
    "start": "86439",
    "end": "89280"
  },
  {
    "text": "to fear about they are they interfering",
    "start": "89280",
    "end": "91640"
  },
  {
    "text": "with each other uh but even more",
    "start": "91640",
    "end": "93840"
  },
  {
    "text": "importantly this is the thing that",
    "start": "93840",
    "end": "95840"
  },
  {
    "text": "allows us to implement transparent",
    "start": "95840",
    "end": "98759"
  },
  {
    "text": "durability and uh our durability",
    "start": "98759",
    "end": "103119"
  },
  {
    "text": "implementation basically consists of",
    "start": "103119",
    "end": "105320"
  },
  {
    "text": "three layers and the most important one",
    "start": "105320",
    "end": "107040"
  },
  {
    "text": "is what we call",
    "start": "107040",
    "end": "108439"
  },
  {
    "text": "oplog uh and we can also have automatic",
    "start": "108439",
    "end": "111600"
  },
  {
    "text": "snapshots and something we call Custom",
    "start": "111600",
    "end": "113560"
  },
  {
    "text": "snapshots and let me talk about",
    "start": "113560",
    "end": "116920"
  },
  {
    "text": "these so if you running a assembly",
    "start": "116920",
    "end": "121119"
  },
  {
    "text": "program you have full control of the",
    "start": "121119",
    "end": "122439"
  },
  {
    "text": "outside word it cannot do anything with",
    "start": "122439",
    "end": "124399"
  },
  {
    "text": "the outside word uh that you is that is",
    "start": "124399",
    "end": "127719"
  },
  {
    "text": "not done through host functions",
    "start": "127719",
    "end": "130399"
  },
  {
    "text": "right uh and everything else that is",
    "start": "130400",
    "end": "132840"
  },
  {
    "text": "happening in the program is completely",
    "start": "132840",
    "end": "134640"
  },
  {
    "text": "deterministic and because of these two",
    "start": "134640",
    "end": "137840"
  },
  {
    "text": "we can basically restore an application",
    "start": "137840",
    "end": "139640"
  },
  {
    "text": "state by recording everything that is",
    "start": "139640",
    "end": "141519"
  },
  {
    "text": "non-deterministic which is a subset of",
    "start": "141519",
    "end": "144680"
  },
  {
    "text": "of these host function CES that uh that",
    "start": "144680",
    "end": "147440"
  },
  {
    "text": "are interacting with something external",
    "start": "147440",
    "end": "151319"
  },
  {
    "text": "and if you take a look at a a very",
    "start": "151319",
    "end": "154000"
  },
  {
    "text": "stupid example which has an ad function",
    "start": "154000",
    "end": "156239"
  },
  {
    "text": "and a g function where the ad is just",
    "start": "156239",
    "end": "158239"
  },
  {
    "text": "generating a random number and adding it",
    "start": "158239",
    "end": "160400"
  },
  {
    "text": "to a a global State and the g is just",
    "start": "160400",
    "end": "164159"
  },
  {
    "text": "returning this state if we compile this",
    "start": "164159",
    "end": "166680"
  },
  {
    "text": "to web assembly and look at the the web",
    "start": "166680",
    "end": "169239"
  },
  {
    "text": "assembly module we are going to find",
    "start": "169239",
    "end": "171720"
  },
  {
    "text": "five uh imported host functions and",
    "start": "171720",
    "end": "175560"
  },
  {
    "text": "among these five only the first one is",
    "start": "175560",
    "end": "177680"
  },
  {
    "text": "interesting from the non-determination",
    "start": "177680",
    "end": "180159"
  },
  {
    "text": "ISM point of view the random number",
    "start": "180159",
    "end": "182879"
  },
  {
    "text": "generator uh the others are used because",
    "start": "182879",
    "end": "186000"
  },
  {
    "text": "it was printing something and and it's",
    "start": "186000",
    "end": "187959"
  },
  {
    "text": "not important from uh for this",
    "start": "187959",
    "end": "190840"
  },
  {
    "text": "discussion so based on this we can",
    "start": "190840",
    "end": "193440"
  },
  {
    "text": "imagine a very simplified version of of",
    "start": "193440",
    "end": "196239"
  },
  {
    "text": "our oplog could be something that uh",
    "start": "196239",
    "end": "198400"
  },
  {
    "text": "recording what kind of exported",
    "start": "198400",
    "end": "200640"
  },
  {
    "text": "functions we are calling on a worker",
    "start": "200640",
    "end": "202879"
  },
  {
    "text": "worker is just uh running web sem",
    "start": "202879",
    "end": "206360"
  },
  {
    "text": "program in Golem and uh we are also",
    "start": "206360",
    "end": "209200"
  },
  {
    "text": "recording",
    "start": "209200",
    "end": "210280"
  },
  {
    "text": "what result was produced by by those",
    "start": "210280",
    "end": "213640"
  },
  {
    "text": "host functions that are introducing some",
    "start": "213640",
    "end": "215920"
  },
  {
    "text": "kind of non",
    "start": "215920",
    "end": "217560"
  },
  {
    "text": "determinism so to recover the",
    "start": "217560",
    "end": "220400"
  },
  {
    "text": "application after this example of",
    "start": "220400",
    "end": "222439"
  },
  {
    "text": "calling add twice and and calling get",
    "start": "222439",
    "end": "224959"
  },
  {
    "text": "once uh it would look like something",
    "start": "224959",
    "end": "228080"
  },
  {
    "text": "like an outer loop that uh does these",
    "start": "228080",
    "end": "230720"
  },
  {
    "text": "three method or exported function calls",
    "start": "230720",
    "end": "233840"
  },
  {
    "text": "on our program but every time we are",
    "start": "233840",
    "end": "237000"
  },
  {
    "text": "running into a random G hole instead of",
    "start": "237000",
    "end": "240280"
  },
  {
    "text": "actually generating a new random number",
    "start": "240280",
    "end": "242560"
  },
  {
    "text": "we are just returning what we previously",
    "start": "242560",
    "end": "244120"
  },
  {
    "text": "saved so this way uh we can recover the",
    "start": "244120",
    "end": "248280"
  },
  {
    "text": "state of the applica of the application",
    "start": "248280",
    "end": "250480"
  },
  {
    "text": "and U how it looks like in Golems",
    "start": "250480",
    "end": "252840"
  },
  {
    "text": "actually this is the actual random wzy",
    "start": "252840",
    "end": "255879"
  },
  {
    "text": "random",
    "start": "255879",
    "end": "257280"
  },
  {
    "text": "implementation first we check if we are",
    "start": "257280",
    "end": "259359"
  },
  {
    "text": "live uh when we are live then we are",
    "start": "259359",
    "end": "261959"
  },
  {
    "text": "running something new and and we are",
    "start": "261959",
    "end": "263680"
  },
  {
    "text": "generating for example a new random",
    "start": "263680",
    "end": "265560"
  },
  {
    "text": "number in this case calling the",
    "start": "265560",
    "end": "267000"
  },
  {
    "text": "underlying uh was implementation",
    "start": "267000",
    "end": "270240"
  },
  {
    "text": "and then persisting the result but if it",
    "start": "270240",
    "end": "271960"
  },
  {
    "text": "was not live uh then we are just running",
    "start": "271960",
    "end": "274479"
  },
  {
    "text": "this code to recover a previous state of",
    "start": "274479",
    "end": "277520"
  },
  {
    "text": "the application and then we are just",
    "start": "277520",
    "end": "279120"
  },
  {
    "text": "reading it from the oplog and returning",
    "start": "279120",
    "end": "281000"
  },
  {
    "text": "it it without even touching the",
    "start": "281000",
    "end": "283080"
  },
  {
    "text": "underlying V",
    "start": "283080",
    "end": "285840"
  },
  {
    "text": "implementation and this of course cannot",
    "start": "285840",
    "end": "288560"
  },
  {
    "text": "recover to a specific uh instruction in",
    "start": "288560",
    "end": "291759"
  },
  {
    "text": "your program it can only recover to",
    "start": "291759",
    "end": "293800"
  },
  {
    "text": "points where you were saving",
    "start": "293800",
    "end": "295960"
  },
  {
    "text": "something and this doesn't really matter",
    "start": "295960",
    "end": "298759"
  },
  {
    "text": "or it can matter for example if you are",
    "start": "298759",
    "end": "300960"
  },
  {
    "text": "doing something CPU intensive then it",
    "start": "300960",
    "end": "303400"
  },
  {
    "text": "matters because if you because those are",
    "start": "303400",
    "end": "306400"
  },
  {
    "text": "not saved right if you are recovering",
    "start": "306400",
    "end": "308639"
  },
  {
    "text": "you are rerunning the whole CPN",
    "start": "308639",
    "end": "310520"
  },
  {
    "text": "intensive calculation again and again",
    "start": "310520",
    "end": "313360"
  },
  {
    "text": "but in many of the use cases this",
    "start": "313360",
    "end": "315360"
  },
  {
    "text": "doesn't",
    "start": "315360",
    "end": "316240"
  },
  {
    "text": "matter and when it does matter then we",
    "start": "316240",
    "end": "319080"
  },
  {
    "text": "can optimize this by taking snapshots of",
    "start": "319080",
    "end": "321960"
  },
  {
    "text": "the program from time to time and here I",
    "start": "321960",
    "end": "325240"
  },
  {
    "text": "mean taking snap snapshot of everything",
    "start": "325240",
    "end": "327919"
  },
  {
    "text": "the linear Memories the function tables",
    "start": "327919",
    "end": "330560"
  },
  {
    "text": "the file system associated with this",
    "start": "330560",
    "end": "333080"
  },
  {
    "text": "program the resource States and this is",
    "start": "333080",
    "end": "335800"
  },
  {
    "text": "something we don't have yet uh we had a",
    "start": "335800",
    "end": "338039"
  },
  {
    "text": "working prototype it's somewhere in our",
    "start": "338039",
    "end": "340560"
  },
  {
    "text": "road map uh but even until we have it",
    "start": "340560",
    "end": "344120"
  },
  {
    "text": "there is a third possibility which uh",
    "start": "344120",
    "end": "346479"
  },
  {
    "text": "I'm calling Custom",
    "start": "346479",
    "end": "348880"
  },
  {
    "text": "snapshotting and this is basically where",
    "start": "348880",
    "end": "352560"
  },
  {
    "text": "it stops being magical because it",
    "start": "352560",
    "end": "354759"
  },
  {
    "text": "unfortunately requires you to implement",
    "start": "354759",
    "end": "356919"
  },
  {
    "text": "a custom State save and load function",
    "start": "356919",
    "end": "360720"
  },
  {
    "text": "uh but if you do so uh then we have a",
    "start": "360720",
    "end": "362759"
  },
  {
    "text": "very compact representation of your",
    "start": "362759",
    "end": "364240"
  },
  {
    "text": "application",
    "start": "364240",
    "end": "365360"
  },
  {
    "text": "State and this also allows arbitrary",
    "start": "365360",
    "end": "367960"
  },
  {
    "text": "updates because if you implement the",
    "start": "367960",
    "end": "369319"
  },
  {
    "text": "save in an old version and Implement a",
    "start": "369319",
    "end": "372199"
  },
  {
    "text": "load function for the same format in a",
    "start": "372199",
    "end": "374120"
  },
  {
    "text": "completely Rewritten a new version uh",
    "start": "374120",
    "end": "377000"
  },
  {
    "text": "then you can transfer your application",
    "start": "377000",
    "end": "378400"
  },
  {
    "text": "state from the old to the new code",
    "start": "378400",
    "end": "380639"
  },
  {
    "text": "base and uh yeah the problem is that",
    "start": "380639",
    "end": "383919"
  },
  {
    "text": "this requires contribution from the user",
    "start": "383919",
    "end": "385720"
  },
  {
    "text": "it's no longer a transparent durability",
    "start": "385720",
    "end": "388319"
  },
  {
    "text": "thing uh but but we are already using",
    "start": "388319",
    "end": "390440"
  },
  {
    "text": "this for supporting these complex",
    "start": "390440",
    "end": "392759"
  },
  {
    "text": "updates and we are planning to take",
    "start": "392759",
    "end": "396599"
  },
  {
    "text": "advantage of these functions or also to",
    "start": "396599",
    "end": "399120"
  },
  {
    "text": "optimize the recovery",
    "start": "399120",
    "end": "401120"
  },
  {
    "text": "process so as you can see restoring a",
    "start": "401120",
    "end": "404160"
  },
  {
    "text": "running program is a core feature in",
    "start": "404160",
    "end": "405720"
  },
  {
    "text": "Golem but it's not always always",
    "start": "405720",
    "end": "408039"
  },
  {
    "text": "necessary so we have two kind of workers",
    "start": "408039",
    "end": "411120"
  },
  {
    "text": "as I said worker is just a running web",
    "start": "411120",
    "end": "412919"
  },
  {
    "text": "assembly instance we have durable",
    "start": "412919",
    "end": "414720"
  },
  {
    "text": "workers and ephemeral workers and",
    "start": "414720",
    "end": "418120"
  },
  {
    "text": "ephemeral workers are basically",
    "start": "418120",
    "end": "419599"
  },
  {
    "text": "stateless and fast uh they are just",
    "start": "419599",
    "end": "423080"
  },
  {
    "text": "created for serving a single core and",
    "start": "423080",
    "end": "426400"
  },
  {
    "text": "the durable workers are what are long",
    "start": "426400",
    "end": "428240"
  },
  {
    "text": "running and supporting multiple",
    "start": "428240",
    "end": "429560"
  },
  {
    "text": "invocations the things that I I was",
    "start": "429560",
    "end": "431479"
  },
  {
    "text": "talking about so",
    "start": "431479",
    "end": "433599"
  },
  {
    "text": "far",
    "start": "433599",
    "end": "436000"
  },
  {
    "text": "and let's talk about the component model",
    "start": "436000",
    "end": "439639"
  },
  {
    "text": "so we started Golem on on the component",
    "start": "439639",
    "end": "442800"
  },
  {
    "text": "model from the beginning we started",
    "start": "442800",
    "end": "444400"
  },
  {
    "text": "Golem about two years ago using WM time",
    "start": "444400",
    "end": "448160"
  },
  {
    "text": "8 and",
    "start": "448160",
    "end": "450639"
  },
  {
    "text": "um the component model implementation at",
    "start": "450639",
    "end": "452479"
  },
  {
    "text": "the time in VM time was already almost a",
    "start": "452479",
    "end": "455199"
  },
  {
    "text": "year old but still I think we were very",
    "start": "455199",
    "end": "457720"
  },
  {
    "text": "early adopters of the component model",
    "start": "457720",
    "end": "460400"
  },
  {
    "text": "and we always wanted to use it because",
    "start": "460400",
    "end": "462039"
  },
  {
    "text": "it enables a lot of features for us and",
    "start": "462039",
    "end": "464280"
  },
  {
    "text": "we're trying not to reinvent the",
    "start": "464280",
    "end": "466039"
  },
  {
    "text": "wheel and basically Golem workers are",
    "start": "466039",
    "end": "469599"
  },
  {
    "text": "nothing else than web assembly component",
    "start": "469599",
    "end": "471720"
  },
  {
    "text": "model",
    "start": "471720",
    "end": "473919"
  },
  {
    "text": "instances so let's talk about invocation",
    "start": "473919",
    "end": "477879"
  },
  {
    "text": "we wanted to expose a tide API from our",
    "start": "477879",
    "end": "480159"
  },
  {
    "text": "workers and we wanted to support",
    "start": "480159",
    "end": "482280"
  },
  {
    "text": "multiple",
    "start": "482280",
    "end": "483440"
  },
  {
    "text": "invocations and also not just multiple",
    "start": "483440",
    "end": "485759"
  },
  {
    "text": "invocations but having multiple",
    "start": "485759",
    "end": "488039"
  },
  {
    "text": "functions to be invoked and uh well this",
    "start": "488039",
    "end": "491520"
  },
  {
    "text": "is exactly what a component export is so",
    "start": "491520",
    "end": "495240"
  },
  {
    "text": "there is no real magic here the Golem",
    "start": "495240",
    "end": "498400"
  },
  {
    "text": "invocation API is just a front end for",
    "start": "498400",
    "end": "502159"
  },
  {
    "text": "calling anything that your component is",
    "start": "502159",
    "end": "505879"
  },
  {
    "text": "exporting and as I said Golem can run",
    "start": "505879",
    "end": "508919"
  },
  {
    "text": "multiple components and expose their",
    "start": "508919",
    "end": "511639"
  },
  {
    "text": "exports to this worker invocation API",
    "start": "511639",
    "end": "514518"
  },
  {
    "text": "but on the other hand components can",
    "start": "514519",
    "end": "516440"
  },
  {
    "text": "also be composed together and",
    "start": "516440",
    "end": "520440"
  },
  {
    "text": "um and there is this idea that if you",
    "start": "520440",
    "end": "523518"
  },
  {
    "text": "are calling a worker from another worker",
    "start": "523519",
    "end": "525200"
  },
  {
    "text": "through this worker invocation API that",
    "start": "525200",
    "end": "528560"
  },
  {
    "text": "should behave exactly like if you",
    "start": "528560",
    "end": "530800"
  },
  {
    "text": "compose these two components together uh",
    "start": "530800",
    "end": "534279"
  },
  {
    "text": "it should be just an architectural",
    "start": "534279",
    "end": "535600"
  },
  {
    "text": "decision from the user whether whether",
    "start": "535600",
    "end": "537200"
  },
  {
    "text": "you are composing things or you are",
    "start": "537200",
    "end": "538880"
  },
  {
    "text": "running the components instances as",
    "start": "538880",
    "end": "541600"
  },
  {
    "text": "separate golm workers it can be done to",
    "start": "541600",
    "end": "544240"
  },
  {
    "text": "be more scalable to run things in",
    "start": "544240",
    "end": "546120"
  },
  {
    "text": "parallel and so",
    "start": "546120",
    "end": "548279"
  },
  {
    "text": "on and how this is implemented is is",
    "start": "548279",
    "end": "552640"
  },
  {
    "text": "called Golem's RPC feature which was",
    "start": "552640",
    "end": "555240"
  },
  {
    "text": "first created in in Golem in the Golem",
    "start": "555240",
    "end": "558399"
  },
  {
    "text": "VM RPC crade uh started about a year",
    "start": "558399",
    "end": "562320"
  },
  {
    "text": "ago and at the time there was no public",
    "start": "562320",
    "end": "565880"
  },
  {
    "text": "version or published version of of uh",
    "start": "565880",
    "end": "568760"
  },
  {
    "text": "the w",
    "start": "568760",
    "end": "570399"
  },
  {
    "text": "RPC uh solution yet so we wrote we",
    "start": "570399",
    "end": "574120"
  },
  {
    "text": "created our own but we are planning to",
    "start": "574120",
    "end": "575760"
  },
  {
    "text": "migrate to it but in this talk I'm going",
    "start": "575760",
    "end": "578680"
  },
  {
    "text": "to show how our version",
    "start": "578680",
    "end": "581360"
  },
  {
    "text": "works basically it consists of two",
    "start": "581360",
    "end": "583480"
  },
  {
    "text": "things uh VM RPC host interface and",
    "start": "583480",
    "end": "586640"
  },
  {
    "text": "something that we call the stab",
    "start": "586640",
    "end": "589320"
  },
  {
    "text": "generator and the host interface is is a",
    "start": "589320",
    "end": "592720"
  },
  {
    "text": "vit resource which has a Constructor",
    "start": "592720",
    "end": "596320"
  },
  {
    "text": "which selects what worker we are trying",
    "start": "596320",
    "end": "598519"
  },
  {
    "text": "to communicate with",
    "start": "598519",
    "end": "599920"
  },
  {
    "text": "and it Al",
    "start": "599920",
    "end": "601880"
  },
  {
    "text": "sorry and it also has uh a few functions",
    "start": "601880",
    "end": "606600"
  },
  {
    "text": "that are are quite dynamic they are",
    "start": "606600",
    "end": "608920"
  },
  {
    "text": "taking the the invoked functions name as",
    "start": "608920",
    "end": "611040"
  },
  {
    "text": "a string and they are taking the list of",
    "start": "611040",
    "end": "613600"
  },
  {
    "text": "parameters as something that we call",
    "start": "613600",
    "end": "615200"
  },
  {
    "text": "with value and also the result value is",
    "start": "615200",
    "end": "616959"
  },
  {
    "text": "a WID value uh where withd value is just",
    "start": "616959",
    "end": "620200"
  },
  {
    "text": "a way to describe an arbitrary component",
    "start": "620200",
    "end": "622120"
  },
  {
    "text": "model value within within the component",
    "start": "622120",
    "end": "626560"
  },
  {
    "text": "model and I know of course this host",
    "start": "626560",
    "end": "630079"
  },
  {
    "text": "interface is implemented by Golem any",
    "start": "630079",
    "end": "632040"
  },
  {
    "text": "Golem component can import it and use it",
    "start": "632040",
    "end": "634640"
  },
  {
    "text": "and use it to invoke another worker with",
    "start": "634640",
    "end": "637200"
  },
  {
    "text": "it but it is very hard to use because uh",
    "start": "637200",
    "end": "641160"
  },
  {
    "text": "you have to construct these with values",
    "start": "641160",
    "end": "642800"
  },
  {
    "text": "from your real values and uh and it's",
    "start": "642800",
    "end": "645920"
  },
  {
    "text": "not type safe at all you have to provide",
    "start": "645920",
    "end": "649920"
  },
  {
    "text": "function names as strings and also the",
    "start": "649920",
    "end": "651800"
  },
  {
    "text": "list of WID values is dynamic and so on",
    "start": "651800",
    "end": "654200"
  },
  {
    "text": "so it was never intended to be used by",
    "start": "654200",
    "end": "657000"
  },
  {
    "text": "hand uh that's why we have the other",
    "start": "657000",
    "end": "659000"
  },
  {
    "text": "half of this solution which is called a",
    "start": "659000",
    "end": "660440"
  },
  {
    "text": "stab",
    "start": "660440",
    "end": "661279"
  },
  {
    "text": "generator and let's see an example of",
    "start": "661279",
    "end": "663920"
  },
  {
    "text": "that so if you have worker a that is",
    "start": "663920",
    "end": "666079"
  },
  {
    "text": "trying to call worker B and worker a is",
    "start": "666079",
    "end": "669399"
  },
  {
    "text": "just exporting a function that we can",
    "start": "669399",
    "end": "671120"
  },
  {
    "text": "call worker B is exporting some kind of",
    "start": "671120",
    "end": "674519"
  },
  {
    "text": "counter a counter interface with an",
    "start": "674519",
    "end": "676519"
  },
  {
    "text": "increment in the get",
    "start": "676519",
    "end": "677920"
  },
  {
    "text": "function so we could have the first idea",
    "start": "677920",
    "end": "680639"
  },
  {
    "text": "of just importing the counter interface",
    "start": "680639",
    "end": "682680"
  },
  {
    "text": "into the caller component and uh that",
    "start": "682680",
    "end": "687240"
  },
  {
    "text": "would make it a regular function call if",
    "start": "687240",
    "end": "688920"
  },
  {
    "text": "you generate bindings then we have a",
    "start": "688920",
    "end": "690639"
  },
  {
    "text": "static statically typed way to to call",
    "start": "690639",
    "end": "693600"
  },
  {
    "text": "these uh methods and we can say that let",
    "start": "693600",
    "end": "697480"
  },
  {
    "text": "Golem solve this for us it knows what",
    "start": "697480",
    "end": "699519"
  },
  {
    "text": "components we are running it can figure",
    "start": "699519",
    "end": "701200"
  },
  {
    "text": "this out uh but it cannot figure it out",
    "start": "701200",
    "end": "703880"
  },
  {
    "text": "because in this setup we would have no",
    "start": "703880",
    "end": "706279"
  },
  {
    "text": "way to say which worker we are targeting",
    "start": "706279",
    "end": "708760"
  },
  {
    "text": "if if we would only have ephemeral",
    "start": "708760",
    "end": "710480"
  },
  {
    "text": "workers then this would be enough and it",
    "start": "710480",
    "end": "712240"
  },
  {
    "text": "would work uh but because we have",
    "start": "712240",
    "end": "714360"
  },
  {
    "text": "durable workers we have to exactly",
    "start": "714360",
    "end": "717000"
  },
  {
    "text": "specify who we are talk targeting with",
    "start": "717000",
    "end": "719800"
  },
  {
    "text": "our our RPC",
    "start": "719800",
    "end": "721920"
  },
  {
    "text": "call so the idea is that we are",
    "start": "721920",
    "end": "724079"
  },
  {
    "text": "generating a third with file package",
    "start": "724079",
    "end": "726839"
  },
  {
    "text": "that is is the client package of of the",
    "start": "726839",
    "end": "729160"
  },
  {
    "text": "thing that we are calling and uh that is",
    "start": "729160",
    "end": "732120"
  },
  {
    "text": "derived from the original uh WID package",
    "start": "732120",
    "end": "735560"
  },
  {
    "text": "by wrapping everything in resource and",
    "start": "735560",
    "end": "737800"
  },
  {
    "text": "adding a Constructor that uh that allows",
    "start": "737800",
    "end": "740959"
  },
  {
    "text": "you to specify which worker you want to",
    "start": "740959",
    "end": "743040"
  },
  {
    "text": "talk",
    "start": "743040",
    "end": "744399"
  },
  {
    "text": "to and yeah this way we have an answer",
    "start": "744399",
    "end": "747760"
  },
  {
    "text": "to this question",
    "start": "747760",
    "end": "749800"
  },
  {
    "text": "and",
    "start": "749800",
    "end": "750760"
  },
  {
    "text": "then yeah we have this generated stab",
    "start": "750760",
    "end": "754079"
  },
  {
    "text": "client withd file but what implements it",
    "start": "754079",
    "end": "757440"
  },
  {
    "text": "and and originally we were generating an",
    "start": "757440",
    "end": "759639"
  },
  {
    "text": "implementation for it in Rust and",
    "start": "759639",
    "end": "761560"
  },
  {
    "text": "compiled it to bom and then compos the",
    "start": "761560",
    "end": "764600"
  },
  {
    "text": "this compiled component with the Coler",
    "start": "764600",
    "end": "767199"
  },
  {
    "text": "component and by that we eliminated the",
    "start": "767199",
    "end": "769880"
  },
  {
    "text": "dependency on the generated client stub",
    "start": "769880",
    "end": "773160"
  },
  {
    "text": "and uh it was only depending on the on",
    "start": "773160",
    "end": "776199"
  },
  {
    "text": "the generic Dynamic host interface that",
    "start": "776199",
    "end": "778639"
  },
  {
    "text": "Golem impl",
    "start": "778639",
    "end": "780399"
  },
  {
    "text": "uh we are treating this deprecated now",
    "start": "780399",
    "end": "783600"
  },
  {
    "text": "uh because we have another way where you",
    "start": "783600",
    "end": "786399"
  },
  {
    "text": "are just marking all these generated",
    "start": "786399",
    "end": "788959"
  },
  {
    "text": "stab interfaces record their names in",
    "start": "788959",
    "end": "791959"
  },
  {
    "text": "some kind of metadata and then do",
    "start": "791959",
    "end": "794440"
  },
  {
    "text": "Dynamic linking which was actually",
    "start": "794440",
    "end": "796199"
  },
  {
    "text": "inspired by looking at",
    "start": "796199",
    "end": "799399"
  },
  {
    "text": "wrpc and this means that when you are",
    "start": "799399",
    "end": "802560"
  },
  {
    "text": "instantiating the component it's going",
    "start": "802560",
    "end": "805000"
  },
  {
    "text": "to complain about these generated withd",
    "start": "805000",
    "end": "809120"
  },
  {
    "text": "packages because that is not implemented",
    "start": "809120",
    "end": "811079"
  },
  {
    "text": "in our host and then these missing",
    "start": "811079",
    "end": "814480"
  },
  {
    "text": "Imports can be checked whether they are",
    "start": "814480",
    "end": "816160"
  },
  {
    "text": "marked in the metadata as as are being",
    "start": "816160",
    "end": "818720"
  },
  {
    "text": "RPC",
    "start": "818720",
    "end": "819920"
  },
  {
    "text": "clients and then we can just dynamically",
    "start": "819920",
    "end": "822480"
  },
  {
    "text": "link them to to an implementation that",
    "start": "822480",
    "end": "825519"
  },
  {
    "text": "does the actual RPC course under the",
    "start": "825519",
    "end": "828279"
  },
  {
    "text": "hood and this is a very generic idea",
    "start": "828279",
    "end": "831079"
  },
  {
    "text": "that we can use for many other things",
    "start": "831079",
    "end": "832720"
  },
  {
    "text": "for example you can imagine having an",
    "start": "832720",
    "end": "835519"
  },
  {
    "text": "open API grpc Smithy graph GE what ever",
    "start": "835519",
    "end": "839920"
  },
  {
    "text": "client uh withd generated from these",
    "start": "839920",
    "end": "843839"
  },
  {
    "text": "specifications and then just generate",
    "start": "843839",
    "end": "846240"
  },
  {
    "text": "either a composable client component uh",
    "start": "846240",
    "end": "848440"
  },
  {
    "text": "that implements this C this withd or you",
    "start": "848440",
    "end": "851240"
  },
  {
    "text": "can use the trick to directly support",
    "start": "851240",
    "end": "853959"
  },
  {
    "text": "this uh through Dynamic linking within",
    "start": "853959",
    "end": "855800"
  },
  {
    "text": "the executor and it doesn't even have to",
    "start": "855800",
    "end": "858440"
  },
  {
    "text": "be just clients it can be for example",
    "start": "858440",
    "end": "861839"
  },
  {
    "text": "typed configurations is also a good",
    "start": "861839",
    "end": "863519"
  },
  {
    "text": "example where you can specify a set of",
    "start": "863519",
    "end": "866040"
  },
  {
    "text": "configuration properties and then",
    "start": "866040",
    "end": "868639"
  },
  {
    "text": "generate a withd file from that so you",
    "start": "868639",
    "end": "871560"
  },
  {
    "text": "have a staticly typed way in your",
    "start": "871560",
    "end": "873920"
  },
  {
    "text": "program to access these properties and",
    "start": "873920",
    "end": "876320"
  },
  {
    "text": "then we can use the dynamic linking",
    "start": "876320",
    "end": "877680"
  },
  {
    "text": "trick again to to calculate the values",
    "start": "877680",
    "end": "880079"
  },
  {
    "text": "for these properties run",
    "start": "880079",
    "end": "883320"
  },
  {
    "text": "time and yeah and invocations in Golem",
    "start": "883519",
    "end": "887600"
  },
  {
    "text": "are processed",
    "start": "887600",
    "end": "890000"
  },
  {
    "text": "sequentially at the",
    "start": "890000",
    "end": "891800"
  },
  {
    "text": "moment uh which is a limitation because",
    "start": "891800",
    "end": "894639"
  },
  {
    "text": "if you're doing something long running",
    "start": "894639",
    "end": "896560"
  },
  {
    "text": "and and uh trying to invoke the same",
    "start": "896560",
    "end": "898720"
  },
  {
    "text": "work again uh then that invocation will",
    "start": "898720",
    "end": "901360"
  },
  {
    "text": "wait until the previous invocation is",
    "start": "901360",
    "end": "903240"
  },
  {
    "text": "finished I think it's also a feature",
    "start": "903240",
    "end": "906079"
  },
  {
    "text": "because it it makes things easier to",
    "start": "906079",
    "end": "908040"
  },
  {
    "text": "think about but the good news is that",
    "start": "908040",
    "end": "910240"
  },
  {
    "text": "with the arrival of uh the async feature",
    "start": "910240",
    "end": "913600"
  },
  {
    "text": "in vzi preview 3 this is going to be a",
    "start": "913600",
    "end": "916480"
  },
  {
    "text": "user choice and uh as I already said the",
    "start": "916480",
    "end": "920480"
  },
  {
    "text": "worker to worker communication is",
    "start": "920480",
    "end": "923440"
  },
  {
    "text": "somewhat equivalent to comp composition",
    "start": "923440",
    "end": "926320"
  },
  {
    "text": "and uh in this case it means that",
    "start": "926320",
    "end": "928440"
  },
  {
    "text": "allowing these inter leing external",
    "start": "928440",
    "end": "930319"
  },
  {
    "text": "invocations is basically the same",
    "start": "930319",
    "end": "931959"
  },
  {
    "text": "decision as whether you",
    "start": "931959",
    "end": "934319"
  },
  {
    "text": "are uh export or",
    "start": "934319",
    "end": "937880"
  },
  {
    "text": "importing uh a component interface as a",
    "start": "937880",
    "end": "940440"
  },
  {
    "text": "synchronous or an asynchronous uh set of",
    "start": "940440",
    "end": "944079"
  },
  {
    "text": "functions and once we have this we can",
    "start": "944079",
    "end": "948839"
  },
  {
    "text": "do also something that we call",
    "start": "948839",
    "end": "950399"
  },
  {
    "text": "persistent sockets where you can imagine",
    "start": "950399",
    "end": "953160"
  },
  {
    "text": "two or more clients that are connecting",
    "start": "953160",
    "end": "955199"
  },
  {
    "text": "through websocket to to some kind of API",
    "start": "955199",
    "end": "957519"
  },
  {
    "text": "Gateway and then the API Gateway is",
    "start": "957519",
    "end": "960279"
  },
  {
    "text": "talking to Golem workers through",
    "start": "960279",
    "end": "963720"
  },
  {
    "text": "RPC and and we can represent these",
    "start": "963720",
    "end": "966519"
  },
  {
    "text": "connected clients as remote resources",
    "start": "966519",
    "end": "969199"
  },
  {
    "text": "through this RPC connection and we can",
    "start": "969199",
    "end": "971680"
  },
  {
    "text": "use the preview three stream types to to",
    "start": "971680",
    "end": "975279"
  },
  {
    "text": "model the streaming nature of of the",
    "start": "975279",
    "end": "977920"
  },
  {
    "text": "websocket and then uh yeah we this is uh",
    "start": "977920",
    "end": "981440"
  },
  {
    "text": "something that require has a few",
    "start": "981440",
    "end": "983800"
  },
  {
    "text": "requirements we need RPC with first",
    "start": "983800",
    "end": "986279"
  },
  {
    "text": "class resource support so you can send",
    "start": "986279",
    "end": "988680"
  },
  {
    "text": "over where this remote resource from the",
    "start": "988680",
    "end": "991399"
  },
  {
    "text": "API Gateway to the to the worker",
    "start": "991399",
    "end": "993040"
  },
  {
    "text": "representing the connections our RPC is",
    "start": "993040",
    "end": "996000"
  },
  {
    "text": "not completely satisfying this but",
    "start": "996000",
    "end": "998440"
  },
  {
    "text": "migrating to wrpc will solve this and of",
    "start": "998440",
    "end": "1001680"
  },
  {
    "text": "course we need the new",
    "start": "1001680",
    "end": "1003079"
  },
  {
    "text": "streams and we need to support these",
    "start": "1003079",
    "end": "1005199"
  },
  {
    "text": "interlift invocations otherwise a new",
    "start": "1005199",
    "end": "1007800"
  },
  {
    "text": "incoming connection wouldn't be able to",
    "start": "1007800",
    "end": "1011160"
  },
  {
    "text": "be added to your running uh worker that",
    "start": "1011160",
    "end": "1013600"
  },
  {
    "text": "is already handling these",
    "start": "1013600",
    "end": "1016199"
  },
  {
    "text": "streams and uh another use case that",
    "start": "1016199",
    "end": "1019040"
  },
  {
    "text": "that we have for all these component",
    "start": "1019040",
    "end": "1021360"
  },
  {
    "text": "model features like resources and",
    "start": "1021360",
    "end": "1023120"
  },
  {
    "text": "composition and everything is answering",
    "start": "1023120",
    "end": "1026038"
  },
  {
    "text": "the question how to constrain worker to",
    "start": "1026039",
    "end": "1028000"
  },
  {
    "text": "worker",
    "start": "1028000",
    "end": "1029640"
  },
  {
    "text": "communication and uh one idea is that we",
    "start": "1029640",
    "end": "1032520"
  },
  {
    "text": "could have we could model permits as as",
    "start": "1032520",
    "end": "1035798"
  },
  {
    "text": "with resources that you cannot create",
    "start": "1035799",
    "end": "1038319"
  },
  {
    "text": "you can just derive more strict ones and",
    "start": "1038319",
    "end": "1040558"
  },
  {
    "text": "you have some root permit associated",
    "start": "1040559",
    "end": "1043038"
  },
  {
    "text": "with your worker that you can get with a",
    "start": "1043039",
    "end": "1044558"
  },
  {
    "text": "host function for example and then RPC",
    "start": "1044559",
    "end": "1047480"
  },
  {
    "text": "course can require you to actually pass",
    "start": "1047480",
    "end": "1049520"
  },
  {
    "text": "a handle to this resource uh and check",
    "start": "1049520",
    "end": "1053080"
  },
  {
    "text": "on in the host whether you have uh",
    "start": "1053080",
    "end": "1056200"
  },
  {
    "text": "permissions to to do this SC and they",
    "start": "1056200",
    "end": "1059160"
  },
  {
    "text": "can by by having resources as a first",
    "start": "1059160",
    "end": "1062240"
  },
  {
    "text": "class sing over RPC you can also share",
    "start": "1062240",
    "end": "1064600"
  },
  {
    "text": "these these uh resource handers with",
    "start": "1064600",
    "end": "1066919"
  },
  {
    "text": "other workers and pass capabilities to",
    "start": "1066919",
    "end": "1070120"
  },
  {
    "text": "them with",
    "start": "1070120",
    "end": "1071720"
  },
  {
    "text": "that",
    "start": "1071720",
    "end": "1073919"
  },
  {
    "text": "and uh we also planning to actually make",
    "start": "1073919",
    "end": "1077080"
  },
  {
    "text": "WM RPC or wrpc the primary protocol of",
    "start": "1077080",
    "end": "1079720"
  },
  {
    "text": "Golem and together with this permission",
    "start": "1079720",
    "end": "1081919"
  },
  {
    "text": "model it will allow any worker to",
    "start": "1081919",
    "end": "1084039"
  },
  {
    "text": "manipulate Golem itself in a very nice",
    "start": "1084039",
    "end": "1087760"
  },
  {
    "text": "way and yeah of course we are also very",
    "start": "1087760",
    "end": "1091799"
  },
  {
    "text": "much depending on V",
    "start": "1091799",
    "end": "1093679"
  },
  {
    "text": "itself uh we always wanted Golem",
    "start": "1093679",
    "end": "1097360"
  },
  {
    "text": "to always said that Golem should run any",
    "start": "1097360",
    "end": "1100280"
  },
  {
    "text": "kind of program automatically in a",
    "start": "1100280",
    "end": "1102200"
  },
  {
    "text": "durable way of course the any is",
    "start": "1102200",
    "end": "1105240"
  },
  {
    "text": "something that you can compile to to a",
    "start": "1105240",
    "end": "1107400"
  },
  {
    "text": "web asembly component",
    "start": "1107400",
    "end": "1109840"
  },
  {
    "text": "uh but we never wanted to create custom",
    "start": "1109840",
    "end": "1112240"
  },
  {
    "text": "host apis for things that are having a",
    "start": "1112240",
    "end": "1114360"
  },
  {
    "text": "Wei interface already so we ended up",
    "start": "1114360",
    "end": "1117919"
  },
  {
    "text": "right now supporting basically",
    "start": "1117919",
    "end": "1119640"
  },
  {
    "text": "everything that is implemented in VM",
    "start": "1119640",
    "end": "1121640"
  },
  {
    "text": "time for vzi and we are also",
    "start": "1121640",
    "end": "1124559"
  },
  {
    "text": "implementing a few additional interfaces",
    "start": "1124559",
    "end": "1126760"
  },
  {
    "text": "like blob store and key value store and",
    "start": "1126760",
    "end": "1128400"
  },
  {
    "text": "the loging",
    "start": "1128400",
    "end": "1129559"
  },
  {
    "text": "interface we have our own relational",
    "start": "1129559",
    "end": "1131960"
  },
  {
    "text": "database access package which I will",
    "start": "1131960",
    "end": "1134360"
  },
  {
    "text": "talk a little bit more about and there",
    "start": "1134360",
    "end": "1136799"
  },
  {
    "text": "are a few Golem specific packages but",
    "start": "1136799",
    "end": "1139360"
  },
  {
    "text": "they are completely optional if you",
    "start": "1139360",
    "end": "1140600"
  },
  {
    "text": "don't want to customize durability",
    "start": "1140600",
    "end": "1142640"
  },
  {
    "text": "features and uh and stuff like that you",
    "start": "1142640",
    "end": "1145320"
  },
  {
    "text": "don't have to use",
    "start": "1145320",
    "end": "1147880"
  },
  {
    "text": "them so what can we contribute or what",
    "start": "1147880",
    "end": "1151159"
  },
  {
    "text": "are the things that might be useful for",
    "start": "1151159",
    "end": "1152880"
  },
  {
    "text": "you even if you're not using go uh I",
    "start": "1152880",
    "end": "1155640"
  },
  {
    "text": "will talk about something that we call",
    "start": "1155640",
    "end": "1158080"
  },
  {
    "text": "Rib and another thing that we call up",
    "start": "1158080",
    "end": "1161600"
  },
  {
    "text": "manifest and this uh database with",
    "start": "1161600",
    "end": "1165200"
  },
  {
    "text": "package thing and I'm not going to talk",
    "start": "1165200",
    "end": "1167440"
  },
  {
    "text": "about but uh",
    "start": "1167440",
    "end": "1169440"
  },
  {
    "text": "uh we most of Golem is open source and",
    "start": "1169440",
    "end": "1171799"
  },
  {
    "text": "we are publishing rust rates and and so",
    "start": "1171799",
    "end": "1173559"
  },
  {
    "text": "on so you can check out the actual code",
    "start": "1173559",
    "end": "1175240"
  },
  {
    "text": "or use things that we are we we are",
    "start": "1175240",
    "end": "1178120"
  },
  {
    "text": "having and also we are treating the",
    "start": "1178120",
    "end": "1181640"
  },
  {
    "text": "JavaScript typescript ecosystem is very",
    "start": "1181640",
    "end": "1183919"
  },
  {
    "text": "important to us so we are heavily",
    "start": "1183919",
    "end": "1186840"
  },
  {
    "text": "testing these things in the ecosystem",
    "start": "1186840",
    "end": "1188640"
  },
  {
    "text": "like the staring monkey and component",
    "start": "1188640",
    "end": "1190520"
  },
  {
    "text": "IGS and all those St things and",
    "start": "1190520",
    "end": "1193360"
  },
  {
    "text": "Reporting issues fixing things if if we",
    "start": "1193360",
    "end": "1195440"
  },
  {
    "text": "can and so and also we published the",
    "start": "1195440",
    "end": "1198120"
  },
  {
    "text": "scaly withd binding generator so if you",
    "start": "1198120",
    "end": "1200799"
  },
  {
    "text": "want to use Scala for some reason to",
    "start": "1200799",
    "end": "1203240"
  },
  {
    "text": "create components then you",
    "start": "1203240",
    "end": "1205320"
  },
  {
    "text": "can so rib is what is rib rib is a",
    "start": "1205320",
    "end": "1209159"
  },
  {
    "text": "scripting language to work with Golem",
    "start": "1209159",
    "end": "1211360"
  },
  {
    "text": "components and it was primarily created",
    "start": "1211360",
    "end": "1215039"
  },
  {
    "text": "for describing apis for example in this",
    "start": "1215039",
    "end": "1218440"
  },
  {
    "text": "snippet we have a few lines of code that",
    "start": "1218440",
    "end": "1222320"
  },
  {
    "text": "is extracting things from from an HTTP",
    "start": "1222320",
    "end": "1225960"
  },
  {
    "text": "request body and then we are creating",
    "start": "1225960",
    "end": "1228679"
  },
  {
    "text": "some new data types we are selecting a",
    "start": "1228679",
    "end": "1230600"
  },
  {
    "text": "worker that we want to call and then we",
    "start": "1230600",
    "end": "1233320"
  },
  {
    "text": "are calling an exported function on that",
    "start": "1233320",
    "end": "1235000"
  },
  {
    "text": "worker and returning uh",
    "start": "1235000",
    "end": "1238080"
  },
  {
    "text": "HTTP",
    "start": "1238080",
    "end": "1240360"
  },
  {
    "text": "response uh so basically rib is",
    "start": "1240360",
    "end": "1242799"
  },
  {
    "text": "something that enables you to call Web",
    "start": "1242799",
    "end": "1245000"
  },
  {
    "text": "assembly components and it has access to",
    "start": "1245000",
    "end": "1246960"
  },
  {
    "text": "some kind of context in this case an",
    "start": "1246960",
    "end": "1248440"
  },
  {
    "text": "HTTP",
    "start": "1248440",
    "end": "1249960"
  },
  {
    "text": "request and the language itself is a",
    "start": "1249960",
    "end": "1252640"
  },
  {
    "text": "statically tied with type inference the",
    "start": "1252640",
    "end": "1254440"
  },
  {
    "text": "types are exactly the component model",
    "start": "1254440",
    "end": "1256760"
  },
  {
    "text": "types so there is no any m in necessary",
    "start": "1256760",
    "end": "1260559"
  },
  {
    "text": "the value syntax is is just the web",
    "start": "1260559",
    "end": "1263840"
  },
  {
    "text": "assembly value encoding itself it",
    "start": "1263840",
    "end": "1266880"
  },
  {
    "text": "supports things like pattern matching it",
    "start": "1266880",
    "end": "1269039"
  },
  {
    "text": "supports list comprehensions and",
    "start": "1269039",
    "end": "1271880"
  },
  {
    "text": "redu and uh string interpolation it has",
    "start": "1271880",
    "end": "1275720"
  },
  {
    "text": "first class support for selecting a",
    "start": "1275720",
    "end": "1278080"
  },
  {
    "text": "worker and invoking methods on it and",
    "start": "1278080",
    "end": "1280159"
  },
  {
    "text": "creating with resources and invoking",
    "start": "1280159",
    "end": "1282760"
  },
  {
    "text": "methods on",
    "start": "1282760",
    "end": "1284080"
  },
  {
    "text": "that and it has some kind of WID package",
    "start": "1284080",
    "end": "1287200"
  },
  {
    "text": "interface inference so you don't always",
    "start": "1287200",
    "end": "1289880"
  },
  {
    "text": "have to specify this fully qualified",
    "start": "1289880",
    "end": "1292080"
  },
  {
    "text": "namespace",
    "start": "1292080",
    "end": "1293480"
  },
  {
    "text": "name version interface whatever PA of",
    "start": "1293480",
    "end": "1297440"
  },
  {
    "text": "accessing a",
    "start": "1297440",
    "end": "1299559"
  },
  {
    "text": "type uh but there is no need to only use",
    "start": "1299559",
    "end": "1302039"
  },
  {
    "text": "this for API mappings for example even",
    "start": "1302039",
    "end": "1304080"
  },
  {
    "text": "internally we could use this for testing",
    "start": "1304080",
    "end": "1306720"
  },
  {
    "text": "we are planning to create a rib repple",
    "start": "1306720",
    "end": "1309720"
  },
  {
    "text": "to interact with workers even having a",
    "start": "1309720",
    "end": "1311960"
  },
  {
    "text": "prototype of that already and it doesn't",
    "start": "1311960",
    "end": "1314880"
  },
  {
    "text": "even have to be Golem specific it could",
    "start": "1314880",
    "end": "1317320"
  },
  {
    "text": "be treated like a general purpose",
    "start": "1317320",
    "end": "1319640"
  },
  {
    "text": "scripting language for for web assembly",
    "start": "1319640",
    "end": "1322440"
  },
  {
    "text": "components or it could be a scripting",
    "start": "1322440",
    "end": "1324760"
  },
  {
    "text": "language for anything that has a wrpc",
    "start": "1324760",
    "end": "1330000"
  },
  {
    "text": "interface and yeah this is a implemented",
    "start": "1331000",
    "end": "1334120"
  },
  {
    "text": "in Rust and it's published and uh and",
    "start": "1334120",
    "end": "1337000"
  },
  {
    "text": "it's ready to be used although it's it",
    "start": "1337000",
    "end": "1339039"
  },
  {
    "text": "has some Golem specific dependencies at",
    "start": "1339039",
    "end": "1341039"
  },
  {
    "text": "the moment but we are planning to get",
    "start": "1341039",
    "end": "1342360"
  },
  {
    "text": "rid of",
    "start": "1342360",
    "end": "1344039"
  },
  {
    "text": "those so what is the app manifest it's a",
    "start": "1344039",
    "end": "1346440"
  },
  {
    "text": "yl file not very surprising ly uh a Ami",
    "start": "1346440",
    "end": "1351279"
  },
  {
    "text": "that is describing one or more Golem",
    "start": "1351279",
    "end": "1352799"
  },
  {
    "text": "components and their relationships for",
    "start": "1352799",
    "end": "1354760"
  },
  {
    "text": "example if they are communicating with",
    "start": "1354760",
    "end": "1357760"
  },
  {
    "text": "this RPC Tech uh",
    "start": "1357760",
    "end": "1360720"
  },
  {
    "text": "method and it it is a build tool as well",
    "start": "1360720",
    "end": "1363960"
  },
  {
    "text": "that builds and composes components it's",
    "start": "1363960",
    "end": "1366600"
  },
  {
    "text": "fully customizable and or Golem has",
    "start": "1366600",
    "end": "1369279"
  },
  {
    "text": "built in templates for for a lot of",
    "start": "1369279",
    "end": "1373720"
  },
  {
    "text": "languages and yeah so basically it's a",
    "start": "1373720",
    "end": "1376840"
  },
  {
    "text": "build tool that understands things like",
    "start": "1376840",
    "end": "1378200"
  },
  {
    "text": "with directories and and this sub",
    "start": "1378200",
    "end": "1380559"
  },
  {
    "text": "generation that I was talking about and",
    "start": "1380559",
    "end": "1383080"
  },
  {
    "text": "it knows how to compose",
    "start": "1383080",
    "end": "1385039"
  },
  {
    "text": "components and let's uh just see a quick",
    "start": "1385039",
    "end": "1387799"
  },
  {
    "text": "example so if we create a new Golem",
    "start": "1387799",
    "end": "1390720"
  },
  {
    "text": "application with our CLI tool and add",
    "start": "1390720",
    "end": "1393279"
  },
  {
    "text": "three new components to it in three",
    "start": "1393279",
    "end": "1394919"
  },
  {
    "text": "different languages rust typescript and",
    "start": "1394919",
    "end": "1398240"
  },
  {
    "text": "moonbit uh and then we are just typing",
    "start": "1398240",
    "end": "1400880"
  },
  {
    "text": "Golem app",
    "start": "1400880",
    "end": "1402039"
  },
  {
    "text": "build what's happening is that it will",
    "start": "1402039",
    "end": "1404559"
  },
  {
    "text": "assemble with deps directories from",
    "start": "1404559",
    "end": "1406480"
  },
  {
    "text": "various sources it's doing component",
    "start": "1406480",
    "end": "1408960"
  },
  {
    "text": "build for the rust component it's doing",
    "start": "1408960",
    "end": "1410600"
  },
  {
    "text": "the component tjs thing for the",
    "start": "1410600",
    "end": "1412640"
  },
  {
    "text": "typescript one it's doing Moon build and",
    "start": "1412640",
    "end": "1415799"
  },
  {
    "text": "then the additional necessary steps for",
    "start": "1415799",
    "end": "1418679"
  },
  {
    "text": "the moonbit one and of course it also",
    "start": "1418679",
    "end": "1422120"
  },
  {
    "text": "does caching and upto-date checks and",
    "start": "1422120",
    "end": "1423799"
  },
  {
    "text": "everything that you would",
    "start": "1423799",
    "end": "1425679"
  },
  {
    "text": "expect and then if we",
    "start": "1425679",
    "end": "1428039"
  },
  {
    "text": "add uh dependencies in this so we can",
    "start": "1428039",
    "end": "1431559"
  },
  {
    "text": "describe relationships like the",
    "start": "1431559",
    "end": "1432880"
  },
  {
    "text": "typescript component is depending on the",
    "start": "1432880",
    "end": "1434279"
  },
  {
    "text": "rust component and the moon bit one is",
    "start": "1434279",
    "end": "1436080"
  },
  {
    "text": "depending on the typescript one and and",
    "start": "1436080",
    "end": "1438559"
  },
  {
    "text": "we are just typing Golem app build",
    "start": "1438559",
    "end": "1441960"
  },
  {
    "text": "again uh then it's going to do all the",
    "start": "1441960",
    "end": "1445320"
  },
  {
    "text": "things that that has to be done it",
    "start": "1445320",
    "end": "1446799"
  },
  {
    "text": "generates these client tubs it Auto",
    "start": "1446799",
    "end": "1449799"
  },
  {
    "text": "Imports them in the in the places where",
    "start": "1449799",
    "end": "1451679"
  },
  {
    "text": "it has to be it generates and builds",
    "start": "1451679",
    "end": "1453919"
  },
  {
    "text": "these files and compose everything that",
    "start": "1453919",
    "end": "1456440"
  },
  {
    "text": "has to be",
    "start": "1456440",
    "end": "1457600"
  },
  {
    "text": "composed and this is very Golem specific",
    "start": "1457600",
    "end": "1460159"
  },
  {
    "text": "at the moment but it doesn't necessarily",
    "start": "1460159",
    "end": "1462200"
  },
  {
    "text": "has to be it could be a general purpose",
    "start": "1462200",
    "end": "1466960"
  },
  {
    "text": "glue tool for G language tooling if if",
    "start": "1466960",
    "end": "1470240"
  },
  {
    "text": "we want",
    "start": "1470240",
    "end": "1471840"
  },
  {
    "text": "to and the final thing here is that as I",
    "start": "1471840",
    "end": "1477240"
  },
  {
    "text": "said we want to build on standard",
    "start": "1477240",
    "end": "1479679"
  },
  {
    "text": "interfaces uh but sometimes we cannot",
    "start": "1479679",
    "end": "1481760"
  },
  {
    "text": "wait for them so that's why we for",
    "start": "1481760",
    "end": "1484360"
  },
  {
    "text": "example created the Golem rdbms WID",
    "start": "1484360",
    "end": "1487600"
  },
  {
    "text": "package uh it's a WID package for",
    "start": "1487600",
    "end": "1489840"
  },
  {
    "text": "working with pogress and",
    "start": "1489840",
    "end": "1492399"
  },
  {
    "text": "MySQL and it's not Golem specific at all",
    "start": "1492399",
    "end": "1494919"
  },
  {
    "text": "it's just was created by us and it's",
    "start": "1494919",
    "end": "1498440"
  },
  {
    "text": "already implemented in Golem so it it",
    "start": "1498440",
    "end": "1500240"
  },
  {
    "text": "can also be tried out and we would be",
    "start": "1500240",
    "end": "1503200"
  },
  {
    "text": "happy to cooperate in any way to make",
    "start": "1503200",
    "end": "1505919"
  },
  {
    "text": "this uh one of the standard interfaces",
    "start": "1505919",
    "end": "1508600"
  },
  {
    "text": "or or at least Inspire the standard",
    "start": "1508600",
    "end": "1510480"
  },
  {
    "text": "interface with",
    "start": "1510480",
    "end": "1513039"
  },
  {
    "text": "it and finally a few things or I could",
    "start": "1513080",
    "end": "1518559"
  },
  {
    "text": "say a wish",
    "start": "1518559",
    "end": "1519720"
  },
  {
    "text": "list uh better support for with",
    "start": "1519720",
    "end": "1521960"
  },
  {
    "text": "evolution is one thing code first withd",
    "start": "1521960",
    "end": "1524360"
  },
  {
    "text": "tooling is",
    "start": "1524360",
    "end": "1525559"
  },
  {
    "text": "another and also some kind of solution",
    "start": "1525559",
    "end": "1529919"
  },
  {
    "text": "for JavaScript and python components",
    "start": "1529919",
    "end": "1531960"
  },
  {
    "text": "being so big I not sure what exactly the",
    "start": "1531960",
    "end": "1534799"
  },
  {
    "text": "solution will be but that is something",
    "start": "1534799",
    "end": "1536760"
  },
  {
    "text": "that would be nice to to be solved in",
    "start": "1536760",
    "end": "1539559"
  },
  {
    "text": "the near future and also if vom time",
    "start": "1539559",
    "end": "1542520"
  },
  {
    "text": "would support that snapshotting that I",
    "start": "1542520",
    "end": "1544159"
  },
  {
    "text": "was talking about uh that would be nice",
    "start": "1544159",
    "end": "1547480"
  },
  {
    "text": "because then I wouldn't have to figure",
    "start": "1547480",
    "end": "1548919"
  },
  {
    "text": "out how to do it",
    "start": "1548919",
    "end": "1550880"
  },
  {
    "text": "properly and better support for V",
    "start": "1550880",
    "end": "1553720"
  },
  {
    "text": "Evolution what do I mean by that we",
    "start": "1553720",
    "end": "1556200"
  },
  {
    "text": "already have this semantic versioning",
    "start": "1556200",
    "end": "1558279"
  },
  {
    "text": "support in VM time which is really nice",
    "start": "1558279",
    "end": "1561080"
  },
  {
    "text": "uh it's not working in some other places",
    "start": "1561080",
    "end": "1562960"
  },
  {
    "text": "though and even if it would work we",
    "start": "1562960",
    "end": "1566279"
  },
  {
    "text": "don't really have a a answer I think for",
    "start": "1566279",
    "end": "1569039"
  },
  {
    "text": "how to do data Evolution with WID like",
    "start": "1569039",
    "end": "1572000"
  },
  {
    "text": "adding new variant case or new optional",
    "start": "1572000",
    "end": "1573799"
  },
  {
    "text": "record fields and stuff like that and if",
    "start": "1573799",
    "end": "1576200"
  },
  {
    "text": "if people are starting to use wrpc for",
    "start": "1576200",
    "end": "1579520"
  },
  {
    "text": "even uh communication between things uh",
    "start": "1579520",
    "end": "1582679"
  },
  {
    "text": "I think we should have an answer for",
    "start": "1582679",
    "end": "1584120"
  },
  {
    "text": "these",
    "start": "1584120",
    "end": "1585520"
  },
  {
    "text": "questions and finally",
    "start": "1585520",
    "end": "1588720"
  },
  {
    "text": "code first withd tooling we are in the",
    "start": "1588720",
    "end": "1591440"
  },
  {
    "text": "ecosystem very much specification first",
    "start": "1591440",
    "end": "1593399"
  },
  {
    "text": "at the moment ER we are always writing",
    "start": "1593399",
    "end": "1595600"
  },
  {
    "text": "these withd files first and generating",
    "start": "1595600",
    "end": "1597320"
  },
  {
    "text": "everything from them which is good but",
    "start": "1597320",
    "end": "1600360"
  },
  {
    "text": "we could also support a code first",
    "start": "1600360",
    "end": "1602679"
  },
  {
    "text": "approach and uh of course that could be",
    "start": "1602679",
    "end": "1605080"
  },
  {
    "text": "done in two ways there could be native",
    "start": "1605080",
    "end": "1607080"
  },
  {
    "text": "component model support in in languages",
    "start": "1607080",
    "end": "1609720"
  },
  {
    "text": "but even if we don't have that uh we",
    "start": "1609720",
    "end": "1612360"
  },
  {
    "text": "could have language specific libraries",
    "start": "1612360",
    "end": "1614399"
  },
  {
    "text": "for example rust macros and so on uh",
    "start": "1614399",
    "end": "1616960"
  },
  {
    "text": "that are taking your interface and data",
    "start": "1616960",
    "end": "1620279"
  },
  {
    "text": "type definitions in in your chosen",
    "start": "1620279",
    "end": "1622520"
  },
  {
    "text": "language and just figuring out the WID",
    "start": "1622520",
    "end": "1625039"
  },
  {
    "text": "packages from that and then the users do",
    "start": "1625039",
    "end": "1627679"
  },
  {
    "text": "not have to learn with or understand all",
    "start": "1627679",
    "end": "1629760"
  },
  {
    "text": "these uh special",
    "start": "1629760",
    "end": "1632679"
  },
  {
    "text": "things and uh that was it so thank you",
    "start": "1632679",
    "end": "1637039"
  },
  {
    "text": "for",
    "start": "1637039",
    "end": "1639280"
  },
  {
    "text": "[Applause]",
    "start": "1639280",
    "end": "1646150"
  },
  {
    "text": "attending any questions yes uh I I",
    "start": "1646600",
    "end": "1650279"
  },
  {
    "text": "wonder is Golem actually sort of a actor",
    "start": "1650279",
    "end": "1653520"
  },
  {
    "text": "framework of",
    "start": "1653520",
    "end": "1655440"
  },
  {
    "text": "D it can be seen as an actor framework",
    "start": "1655440",
    "end": "1658679"
  },
  {
    "text": "yes it has similar uh semantics",
    "start": "1658679",
    "end": "1664679"
  },
  {
    "text": "yes okay thank you",
    "start": "1667240",
    "end": "1670220"
  },
  {
    "text": "[Applause]",
    "start": "1670220",
    "end": "1674599"
  }
]