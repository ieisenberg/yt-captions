[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "foreign",
    "start": "599",
    "end": "3599"
  },
  {
    "text": "thank you what's up",
    "start": "6660",
    "end": "10460"
  },
  {
    "text": "good afternoon everyone uh thank you so",
    "start": "12480",
    "end": "15120"
  },
  {
    "text": "much for giving me uh your time to go",
    "start": "15120",
    "end": "17279"
  },
  {
    "text": "listen to this talk so it's going to be",
    "start": "17279",
    "end": "19260"
  },
  {
    "text": "about a tool called Javi which is a way",
    "start": "19260",
    "end": "21720"
  },
  {
    "text": "of taking uh JavaScript source code and",
    "start": "21720",
    "end": "23760"
  },
  {
    "text": "converting it into a webassembly module",
    "start": "23760",
    "end": "26699"
  },
  {
    "text": "so I'm Jeff Charles I'm a senior",
    "start": "26699",
    "end": "29039"
  },
  {
    "text": "developer on the Watson foundations team",
    "start": "29039",
    "end": "31080"
  },
  {
    "text": "at Shopify and I'm one of javi's",
    "start": "31080",
    "end": "33420"
  },
  {
    "text": "maintainers",
    "start": "33420",
    "end": "35760"
  },
  {
    "text": "so let's talk I'm going to go over what",
    "start": "35760",
    "end": "37800"
  },
  {
    "text": "is Javi how to write some JavaScript for",
    "start": "37800",
    "end": "40020"
  },
  {
    "text": "job e why we made Javi and then we'll",
    "start": "40020",
    "end": "42899"
  },
  {
    "text": "get to the interesting bits where we",
    "start": "42899",
    "end": "44460"
  },
  {
    "text": "take a deep dive on different ways that",
    "start": "44460",
    "end": "46800"
  },
  {
    "text": "we transform JavaScript source code into",
    "start": "46800",
    "end": "49200"
  },
  {
    "text": "a webassembly module",
    "start": "49200",
    "end": "51000"
  },
  {
    "text": "and then I'll also cover how we use some",
    "start": "51000",
    "end": "53460"
  },
  {
    "text": "of the underlying Tech inside Javi to go",
    "start": "53460",
    "end": "55980"
  },
  {
    "text": "and add additional functions into the",
    "start": "55980",
    "end": "58559"
  },
  {
    "text": "JavaScript execution environment",
    "start": "58559",
    "end": "61980"
  },
  {
    "start": "60000",
    "end": "125000"
  },
  {
    "text": "so kicking off with what is Javi that's",
    "start": "61980",
    "end": "64378"
  },
  {
    "text": "sort of the tagline mentions it's a way",
    "start": "64379",
    "end": "65939"
  },
  {
    "text": "of converting JavaScript to a",
    "start": "65939",
    "end": "67680"
  },
  {
    "text": "webassembly module more concretely it's",
    "start": "67680",
    "end": "70860"
  },
  {
    "text": "both a command line application and a",
    "start": "70860",
    "end": "73080"
  },
  {
    "text": "webassembly library",
    "start": "73080",
    "end": "74820"
  },
  {
    "text": "command line application takes",
    "start": "74820",
    "end": "76740"
  },
  {
    "text": "JavaScript source code as an input",
    "start": "76740",
    "end": "78360"
  },
  {
    "text": "argument and outputs a webassembly",
    "start": "78360",
    "end": "80220"
  },
  {
    "text": "module's output simple enough",
    "start": "80220",
    "end": "82560"
  },
  {
    "text": "the webassembly library has exported",
    "start": "82560",
    "end": "85500"
  },
  {
    "text": "functions that can compile JavaScript",
    "start": "85500",
    "end": "87840"
  },
  {
    "text": "source code to Quick Trace bytecode",
    "start": "87840",
    "end": "90240"
  },
  {
    "text": "and an eval and an exported function for",
    "start": "90240",
    "end": "92880"
  },
  {
    "text": "evaluating quickjs by code that's been",
    "start": "92880",
    "end": "95040"
  },
  {
    "text": "provided to it",
    "start": "95040",
    "end": "96540"
  },
  {
    "text": "the internals ajavi are used by many of",
    "start": "96540",
    "end": "98939"
  },
  {
    "text": "the companies here and I'll be giving",
    "start": "98939",
    "end": "100320"
  },
  {
    "text": "them a bit of a shout out when we get to",
    "start": "100320",
    "end": "101939"
  },
  {
    "text": "a brief tour of that internal piece a",
    "start": "101939",
    "end": "104400"
  },
  {
    "text": "little later",
    "start": "104400",
    "end": "105840"
  },
  {
    "text": "another important piece about Joby is it",
    "start": "105840",
    "end": "108659"
  },
  {
    "text": "targets Wazi as basically the API layer",
    "start": "108659",
    "end": "112200"
  },
  {
    "text": "it uses to communicate so this is unlike",
    "start": "112200",
    "end": "114240"
  },
  {
    "text": "something that targets a browser",
    "start": "114240",
    "end": "116220"
  },
  {
    "text": "environment or web apis like inscript in",
    "start": "116220",
    "end": "118320"
  },
  {
    "text": "so this is more typically used on the",
    "start": "118320",
    "end": "120479"
  },
  {
    "text": "server side but could be used in the",
    "start": "120479",
    "end": "122460"
  },
  {
    "text": "browser with lazy shim",
    "start": "122460",
    "end": "126259"
  },
  {
    "start": "125000",
    "end": "191000"
  },
  {
    "text": "so in terms of like how we expect people",
    "start": "126479",
    "end": "128099"
  },
  {
    "text": "to write code for Javi is it uses top",
    "start": "128099",
    "end": "131819"
  },
  {
    "text": "level evaluation so this is a bit",
    "start": "131819",
    "end": "134160"
  },
  {
    "text": "different than what you would normally",
    "start": "134160",
    "end": "136440"
  },
  {
    "text": "see with things that compile to",
    "start": "136440",
    "end": "138420"
  },
  {
    "text": "webassembly where there's an exported",
    "start": "138420",
    "end": "140760"
  },
  {
    "text": "main function or a series of exported",
    "start": "140760",
    "end": "143640"
  },
  {
    "text": "functions and then execution enters at",
    "start": "143640",
    "end": "146580"
  },
  {
    "text": "those points instead the execution of",
    "start": "146580",
    "end": "149459"
  },
  {
    "text": "the JavaScript starts at the top and",
    "start": "149459",
    "end": "150840"
  },
  {
    "text": "goes line by line by line and",
    "start": "150840",
    "end": "153480"
  },
  {
    "text": "uh invokes in that way but what we do do",
    "start": "153480",
    "end": "155700"
  },
  {
    "text": "is we wrap that in the Wazi command",
    "start": "155700",
    "end": "158700"
  },
  {
    "text": "pattern so the logic command pattern is",
    "start": "158700",
    "end": "160860"
  },
  {
    "text": "you have a function called underscore",
    "start": "160860",
    "end": "163080"
  },
  {
    "text": "start doesn't take any arguments doesn't",
    "start": "163080",
    "end": "164760"
  },
  {
    "text": "return any values",
    "start": "164760",
    "end": "166500"
  },
  {
    "text": "so you invoke that and then we start",
    "start": "166500",
    "end": "168120"
  },
  {
    "text": "evaluating the JavaScript code",
    "start": "168120",
    "end": "170879"
  },
  {
    "text": "and then we use wazi's standard input",
    "start": "170879",
    "end": "173700"
  },
  {
    "text": "standard output and standard error",
    "start": "173700",
    "end": "175620"
  },
  {
    "text": "streams for i o to the host so that is",
    "start": "175620",
    "end": "178980"
  },
  {
    "text": "we take the input over standard input as",
    "start": "178980",
    "end": "181019"
  },
  {
    "text": "a collection of bytes write the output",
    "start": "181019",
    "end": "183720"
  },
  {
    "text": "over standard output as a collection of",
    "start": "183720",
    "end": "184980"
  },
  {
    "text": "bytes and write to standard error",
    "start": "184980",
    "end": "187260"
  },
  {
    "text": "usually assuming it's going to be a",
    "start": "187260",
    "end": "188819"
  },
  {
    "text": "utf-8 encoded string",
    "start": "188819",
    "end": "192200"
  },
  {
    "start": "191000",
    "end": "221000"
  },
  {
    "text": "so go over a bit of a code example so",
    "start": "192480",
    "end": "195060"
  },
  {
    "text": "given an input that looks like foo1",
    "start": "195060",
    "end": "197519"
  },
  {
    "text": "that's encoded as Json increment the",
    "start": "197519",
    "end": "200280"
  },
  {
    "text": "food parameter I do want to call out",
    "start": "200280",
    "end": "201840"
  },
  {
    "text": "though that Javi doesn't require that",
    "start": "201840",
    "end": "203879"
  },
  {
    "text": "you use Json you can use any format that",
    "start": "203879",
    "end": "206519"
  },
  {
    "text": "can be provided as an array of bytes as",
    "start": "206519",
    "end": "210599"
  },
  {
    "text": "input in this case I'm just using Json",
    "start": "210599",
    "end": "212879"
  },
  {
    "text": "or a Json string because hey it's a lot",
    "start": "212879",
    "end": "215700"
  },
  {
    "text": "easier to see what that is compared to",
    "start": "215700",
    "end": "217800"
  },
  {
    "text": "like that is protopuff",
    "start": "217800",
    "end": "221840"
  },
  {
    "start": "221000",
    "end": "283000"
  },
  {
    "text": "so starting at the top we do our Imports",
    "start": "222120",
    "end": "225000"
  },
  {
    "text": "of basically stdio which is an enum of",
    "start": "225000",
    "end": "228959"
  },
  {
    "text": "the three streams and a couple helper",
    "start": "228959",
    "end": "230819"
  },
  {
    "text": "functions three file sync right file",
    "start": "230819",
    "end": "232379"
  },
  {
    "text": "sync this comes in from a package that's",
    "start": "232379",
    "end": "235200"
  },
  {
    "text": "on npm called Javi",
    "start": "235200",
    "end": "237659"
  },
  {
    "text": "and the reason we have it on npm is we",
    "start": "237659",
    "end": "239580"
  },
  {
    "text": "want to decouple the release cycle for",
    "start": "239580",
    "end": "241440"
  },
  {
    "text": "these helper functions from built-ins",
    "start": "241440",
    "end": "243599"
  },
  {
    "text": "inside Javi that are a little perhaps a",
    "start": "243599",
    "end": "246299"
  },
  {
    "text": "little less user friendly to work with",
    "start": "246299",
    "end": "249680"
  },
  {
    "text": "and then this step's pretty",
    "start": "249900",
    "end": "251340"
  },
  {
    "text": "straightforward read the bytes in from",
    "start": "251340",
    "end": "253140"
  },
  {
    "text": "standard input go run it through a text",
    "start": "253140",
    "end": "255060"
  },
  {
    "text": "decoder to get back a UTI or to get back",
    "start": "255060",
    "end": "258479"
  },
  {
    "text": "a JavaScript string from the utf-8",
    "start": "258479",
    "end": "261780"
  },
  {
    "text": "character byte array and then we parse",
    "start": "261780",
    "end": "264960"
  },
  {
    "text": "that JavaScript string into an object",
    "start": "264960",
    "end": "268280"
  },
  {
    "text": "increment the parameter the interesting",
    "start": "268280",
    "end": "270300"
  },
  {
    "text": "part",
    "start": "270300",
    "end": "271259"
  },
  {
    "text": "and then reverse out the whole process",
    "start": "271259",
    "end": "273600"
  },
  {
    "text": "re-encode it back into Json take that",
    "start": "273600",
    "end": "276300"
  },
  {
    "text": "JavaScript string put it into a byte",
    "start": "276300",
    "end": "278880"
  },
  {
    "text": "array of utf-8 characters and then write",
    "start": "278880",
    "end": "280979"
  },
  {
    "text": "that out over standard output",
    "start": "280979",
    "end": "284540"
  },
  {
    "start": "283000",
    "end": "353000"
  },
  {
    "text": "and then here's where things get a",
    "start": "285000",
    "end": "286680"
  },
  {
    "text": "little different from perhaps how other",
    "start": "286680",
    "end": "288540"
  },
  {
    "text": "how people are used to working with",
    "start": "288540",
    "end": "290160"
  },
  {
    "text": "JavaScript and how people are used to",
    "start": "290160",
    "end": "292139"
  },
  {
    "text": "working with languages like Ruby with a",
    "start": "292139",
    "end": "295139"
  },
  {
    "text": "virtual file system is because this",
    "start": "295139",
    "end": "298620"
  },
  {
    "text": "example involves multiple JavaScript",
    "start": "298620",
    "end": "300840"
  },
  {
    "text": "files we have to bundle them to actually",
    "start": "300840",
    "end": "303600"
  },
  {
    "text": "put them through jabby",
    "start": "303600",
    "end": "306300"
  },
  {
    "text": "so we ran a tool we run es build but you",
    "start": "306300",
    "end": "308699"
  },
  {
    "text": "can use V2 you can use anything else",
    "start": "308699",
    "end": "309960"
  },
  {
    "text": "that'll basically take a collection of",
    "start": "309960",
    "end": "311340"
  },
  {
    "text": "modules and bundle them together and",
    "start": "311340",
    "end": "313020"
  },
  {
    "text": "then get your output Javascript file",
    "start": "313020",
    "end": "316220"
  },
  {
    "text": "and the reason you have to do that is",
    "start": "316220",
    "end": "318720"
  },
  {
    "text": "Javi has no concept of what require",
    "start": "318720",
    "end": "320520"
  },
  {
    "text": "means or what import means",
    "start": "320520",
    "end": "323100"
  },
  {
    "text": "um you do need to actually go and do",
    "start": "323100",
    "end": "325680"
  },
  {
    "text": "that conversion",
    "start": "325680",
    "end": "327180"
  },
  {
    "text": "and then we call Javi compile give it",
    "start": "327180",
    "end": "329520"
  },
  {
    "text": "that bundled JavaScript file",
    "start": "329520",
    "end": "332160"
  },
  {
    "text": "we give it the webassembly the name of",
    "start": "332160",
    "end": "334620"
  },
  {
    "text": "the web server file we want it to Output",
    "start": "334620",
    "end": "336780"
  },
  {
    "text": "and then you can just use walls of time",
    "start": "336780",
    "end": "338400"
  },
  {
    "text": "and the name of the webassembly file and",
    "start": "338400",
    "end": "340440"
  },
  {
    "text": "that'll go and invoke that",
    "start": "340440",
    "end": "342419"
  },
  {
    "text": "that start function that's part of the",
    "start": "342419",
    "end": "344160"
  },
  {
    "text": "Velocity command pattern provide that",
    "start": "344160",
    "end": "347160"
  },
  {
    "text": "Json string as input here and you get",
    "start": "347160",
    "end": "349500"
  },
  {
    "text": "back your parameter incremented easy",
    "start": "349500",
    "end": "351840"
  },
  {
    "text": "enough",
    "start": "351840",
    "end": "354080"
  },
  {
    "start": "353000",
    "end": "482000"
  },
  {
    "text": "so again to give a bit of context so why",
    "start": "354419",
    "end": "356699"
  },
  {
    "text": "did we build Javi",
    "start": "356699",
    "end": "358139"
  },
  {
    "text": "so Shopify for anyone in the room who",
    "start": "358139",
    "end": "359880"
  },
  {
    "text": "doesn't know it's a it's an e-commerce",
    "start": "359880",
    "end": "362400"
  },
  {
    "text": "platform it's hosted software",
    "start": "362400",
    "end": "365580"
  },
  {
    "text": "and as part of that we want to allow our",
    "start": "365580",
    "end": "368520"
  },
  {
    "text": "partner developers to customize parts of",
    "start": "368520",
    "end": "371039"
  },
  {
    "text": "the backend logic",
    "start": "371039",
    "end": "372840"
  },
  {
    "text": "so examples of that are",
    "start": "372840",
    "end": "375419"
  },
  {
    "text": "as part of the checkout flow we might",
    "start": "375419",
    "end": "377039"
  },
  {
    "text": "want to offer custom discounts to I know",
    "start": "377039",
    "end": "380100"
  },
  {
    "text": "people the first name Jeff or we might",
    "start": "380100",
    "end": "382319"
  },
  {
    "text": "want to go and hide different types of",
    "start": "382319",
    "end": "385259"
  },
  {
    "text": "payment methods or delivery options so",
    "start": "385259",
    "end": "388919"
  },
  {
    "text": "this is how we let third-party",
    "start": "388919",
    "end": "390780"
  },
  {
    "text": "developers alter our backend logic is by",
    "start": "390780",
    "end": "393419"
  },
  {
    "text": "inserting a bit of webassembly code that",
    "start": "393419",
    "end": "395759"
  },
  {
    "text": "matches an API",
    "start": "395759",
    "end": "398160"
  },
  {
    "text": "and where things get a little",
    "start": "398160",
    "end": "399180"
  },
  {
    "text": "interesting is because this runs as part",
    "start": "399180",
    "end": "400919"
  },
  {
    "text": "of our checkout flow and in e-commerce",
    "start": "400919",
    "end": "403139"
  },
  {
    "text": "uh slow checkout means lost sales",
    "start": "403139",
    "end": "406800"
  },
  {
    "text": "these need to operate very very very",
    "start": "406800",
    "end": "409020"
  },
  {
    "text": "quickly they need to finish executing in",
    "start": "409020",
    "end": "411720"
  },
  {
    "text": "under five milliseconds",
    "start": "411720",
    "end": "414240"
  },
  {
    "text": "and as part of having that fast loading",
    "start": "414240",
    "end": "417360"
  },
  {
    "text": "of the web assembly we also want to very",
    "start": "417360",
    "end": "419819"
  },
  {
    "text": "aggressively cache these webassembly",
    "start": "419819",
    "end": "421680"
  },
  {
    "text": "modules",
    "start": "421680",
    "end": "422819"
  },
  {
    "text": "so we impose a tight size restriction of",
    "start": "422819",
    "end": "426240"
  },
  {
    "text": "256 kilobytes on the size of the modules",
    "start": "426240",
    "end": "430020"
  },
  {
    "text": "this unfortunately does exclude a number",
    "start": "430020",
    "end": "432120"
  },
  {
    "text": "of possible ways to compile webassembly",
    "start": "432120",
    "end": "434220"
  },
  {
    "text": "that need to",
    "start": "434220",
    "end": "435500"
  },
  {
    "text": "include more base code to execute",
    "start": "435500",
    "end": "440220"
  },
  {
    "text": "now you don't need JavaScript for any of",
    "start": "440220",
    "end": "442139"
  },
  {
    "text": "this obviously you can write in a tiny",
    "start": "442139",
    "end": "443460"
  },
  {
    "text": "go of rust Zig C plus plus you know all",
    "start": "443460",
    "end": "446340"
  },
  {
    "text": "sorts of languages they'll meet these",
    "start": "446340",
    "end": "448020"
  },
  {
    "text": "requirements our partner developers",
    "start": "448020",
    "end": "449819"
  },
  {
    "text": "expressed an extremely strong preference",
    "start": "449819",
    "end": "452580"
  },
  {
    "text": "for wanting to write their code in",
    "start": "452580",
    "end": "454139"
  },
  {
    "text": "JavaScript or typescript because these",
    "start": "454139",
    "end": "456599"
  },
  {
    "text": "are the languages they know they don't",
    "start": "456599",
    "end": "458580"
  },
  {
    "text": "want to have to learn a new language to",
    "start": "458580",
    "end": "460919"
  },
  {
    "text": "use our platform",
    "start": "460919",
    "end": "463580"
  },
  {
    "text": "as well",
    "start": "463620",
    "end": "464880"
  },
  {
    "text": "we didn't want to run an additional",
    "start": "464880",
    "end": "466620"
  },
  {
    "text": "non-web assembly runtime to go and",
    "start": "466620",
    "end": "468840"
  },
  {
    "text": "execute these JavaScript functions",
    "start": "468840",
    "end": "471180"
  },
  {
    "text": "we wanted to use the existing",
    "start": "471180",
    "end": "472500"
  },
  {
    "text": "webassembly runtime that we had so we",
    "start": "472500",
    "end": "474780"
  },
  {
    "text": "needed a tool that could go and take",
    "start": "474780",
    "end": "476520"
  },
  {
    "text": "JavaScript",
    "start": "476520",
    "end": "477780"
  },
  {
    "text": "and then convert it into a webassembly",
    "start": "477780",
    "end": "479639"
  },
  {
    "text": "module that we could execute",
    "start": "479639",
    "end": "482840"
  },
  {
    "start": "482000",
    "end": "490000"
  },
  {
    "text": "so getting a bit more into the depth",
    "start": "483360",
    "end": "486300"
  },
  {
    "text": "part of this talk how we create",
    "start": "486300",
    "end": "487979"
  },
  {
    "text": "webassembly that runs JavaScript",
    "start": "487979",
    "end": "491340"
  },
  {
    "start": "490000",
    "end": "500000"
  },
  {
    "text": "so the first piece I'm going to start",
    "start": "491340",
    "end": "492419"
  },
  {
    "text": "with is called choppy core",
    "start": "492419",
    "end": "495000"
  },
  {
    "text": "you can think about it like a rust it's",
    "start": "495000",
    "end": "497400"
  },
  {
    "text": "essentially a rust application",
    "start": "497400",
    "end": "500720"
  },
  {
    "start": "500000",
    "end": "511000"
  },
  {
    "text": "so",
    "start": "500819",
    "end": "502080"
  },
  {
    "text": "first starting from the left we have",
    "start": "502080",
    "end": "504060"
  },
  {
    "text": "quickjs this is a C library that",
    "start": "504060",
    "end": "507419"
  },
  {
    "text": "includes a JavaScript interpreter that's",
    "start": "507419",
    "end": "509220"
  },
  {
    "text": "es2020 compatible",
    "start": "509220",
    "end": "512459"
  },
  {
    "start": "511000",
    "end": "546000"
  },
  {
    "text": "we take that and we wrap it with a crate",
    "start": "512459",
    "end": "515399"
  },
  {
    "text": "so great we call quickjs walls and sys",
    "start": "515399",
    "end": "517620"
  },
  {
    "text": "it's a way of just adding",
    "start": "517620",
    "end": "519599"
  },
  {
    "text": "rust bindings around the quickjs crate",
    "start": "519599",
    "end": "521760"
  },
  {
    "text": "and importantly these bindings Target a",
    "start": "521760",
    "end": "524339"
  },
  {
    "text": "Wazee like awazi Target as opposed to a",
    "start": "524339",
    "end": "527339"
  },
  {
    "text": "native Target",
    "start": "527339",
    "end": "529320"
  },
  {
    "text": "and then we wrap that syscrate with a",
    "start": "529320",
    "end": "531180"
  },
  {
    "text": "crate called quickjs wasm RS",
    "start": "531180",
    "end": "533940"
  },
  {
    "text": "and that adds more ergonomic API around",
    "start": "533940",
    "end": "536519"
  },
  {
    "text": "the raw quick JS bindings",
    "start": "536519",
    "end": "539100"
  },
  {
    "text": "and it'll go into a bit more detail",
    "start": "539100",
    "end": "540720"
  },
  {
    "text": "about what the API around this crate",
    "start": "540720",
    "end": "542700"
  },
  {
    "text": "looks like in a few minutes because it",
    "start": "542700",
    "end": "544500"
  },
  {
    "text": "is really interesting",
    "start": "544500",
    "end": "547160"
  },
  {
    "start": "546000",
    "end": "575000"
  },
  {
    "text": "then we add some IO code so this is this",
    "start": "547500",
    "end": "550800"
  },
  {
    "text": "is essentially like text encoding text",
    "start": "550800",
    "end": "553080"
  },
  {
    "text": "coding hooking up the Wazi streams to",
    "start": "553080",
    "end": "557480"
  },
  {
    "text": "functions that we inject into the",
    "start": "557480",
    "end": "559800"
  },
  {
    "text": "JavaScript environment",
    "start": "559800",
    "end": "562740"
  },
  {
    "text": "and then we export a couple functions so",
    "start": "562740",
    "end": "566040"
  },
  {
    "text": "we have that start function that I",
    "start": "566040",
    "end": "567540"
  },
  {
    "text": "mentioned earlier that just triggers",
    "start": "567540",
    "end": "568740"
  },
  {
    "text": "module evaluation but the interesting",
    "start": "568740",
    "end": "570899"
  },
  {
    "text": "ones that's why is our initialize",
    "start": "570899",
    "end": "572100"
  },
  {
    "text": "function which I'm going to get into in",
    "start": "572100",
    "end": "573899"
  },
  {
    "text": "a second",
    "start": "573899",
    "end": "576200"
  },
  {
    "start": "575000",
    "end": "660000"
  },
  {
    "text": "so going up a layer to the command line",
    "start": "576959",
    "end": "579060"
  },
  {
    "text": "application",
    "start": "579060",
    "end": "580320"
  },
  {
    "text": "we actually embed that jivycore",
    "start": "580320",
    "end": "582600"
  },
  {
    "text": "webassembly module inside the CLI",
    "start": "582600",
    "end": "585120"
  },
  {
    "text": "application itself",
    "start": "585120",
    "end": "587160"
  },
  {
    "text": "and when we ask Javi to compile a module",
    "start": "587160",
    "end": "590160"
  },
  {
    "text": "the first thing we go to is a tool",
    "start": "590160",
    "end": "591540"
  },
  {
    "text": "called wiser now why is there for anyone",
    "start": "591540",
    "end": "593640"
  },
  {
    "text": "in the room who's not familiar with it",
    "start": "593640",
    "end": "595019"
  },
  {
    "text": "is a bytecode Alliance tool that allows",
    "start": "595019",
    "end": "597420"
  },
  {
    "text": "you to run given a webassembly module",
    "start": "597420",
    "end": "600060"
  },
  {
    "text": "that has an initialization function",
    "start": "600060",
    "end": "601620"
  },
  {
    "text": "it'll instantiate the module",
    "start": "601620",
    "end": "604140"
  },
  {
    "text": "and it'll invoke a wiser initialize",
    "start": "604140",
    "end": "606779"
  },
  {
    "text": "function that's exported from that",
    "start": "606779",
    "end": "608700"
  },
  {
    "text": "module",
    "start": "608700",
    "end": "609720"
  },
  {
    "text": "when that's done it'll take the memory",
    "start": "609720",
    "end": "611700"
  },
  {
    "text": "in the instance and then snapshot it",
    "start": "611700",
    "end": "613740"
  },
  {
    "text": "into a new webassembly module along with",
    "start": "613740",
    "end": "615839"
  },
  {
    "text": "some code to basically dump that that",
    "start": "615839",
    "end": "618120"
  },
  {
    "text": "back into memory when that module starts",
    "start": "618120",
    "end": "621420"
  },
  {
    "text": "now normally it doesn't let you call",
    "start": "621420",
    "end": "623339"
  },
  {
    "text": "imported functions but you can you can",
    "start": "623339",
    "end": "625740"
  },
  {
    "text": "configure it to run Wazi uh Wazi",
    "start": "625740",
    "end": "629940"
  },
  {
    "text": "functions that are available so what we",
    "start": "629940",
    "end": "631140"
  },
  {
    "text": "do is we make the JavaScript source code",
    "start": "631140",
    "end": "632640"
  },
  {
    "text": "available over the standard input stream",
    "start": "632640",
    "end": "634620"
  },
  {
    "text": "to Javi core",
    "start": "634620",
    "end": "637140"
  },
  {
    "text": "and in that initialization function we",
    "start": "637140",
    "end": "638880"
  },
  {
    "text": "read the read the JavaScript source code",
    "start": "638880",
    "end": "640860"
  },
  {
    "text": "over standard input and then tell",
    "start": "640860",
    "end": "643260"
  },
  {
    "text": "quickjs hey compile this to quickjs",
    "start": "643260",
    "end": "646560"
  },
  {
    "text": "bytecode Let's store that in memory",
    "start": "646560",
    "end": "648480"
  },
  {
    "text": "let's initialize the JavaScript context",
    "start": "648480",
    "end": "650220"
  },
  {
    "text": "let's store that in memory and then that",
    "start": "650220",
    "end": "652200"
  },
  {
    "text": "all gets snapshot out to a new module",
    "start": "652200",
    "end": "654120"
  },
  {
    "text": "that's configured with that start",
    "start": "654120",
    "end": "655680"
  },
  {
    "text": "command to go and load that JavaScript",
    "start": "655680",
    "end": "657120"
  },
  {
    "text": "context and then start evaluating that",
    "start": "657120",
    "end": "658980"
  },
  {
    "text": "by code",
    "start": "658980",
    "end": "661459"
  },
  {
    "start": "660000",
    "end": "681000"
  },
  {
    "text": "so zooming out of it we see we have that",
    "start": "662220",
    "end": "664380"
  },
  {
    "text": "Javi core piece that's embedded in that",
    "start": "664380",
    "end": "666000"
  },
  {
    "text": "CLI piece goes through wiser we're not",
    "start": "666000",
    "end": "668040"
  },
  {
    "text": "quite done yet we go through binarian's",
    "start": "668040",
    "end": "670140"
  },
  {
    "text": "Wasim opt as a final step and this",
    "start": "670140",
    "end": "672000"
  },
  {
    "text": "basically runs the series of",
    "start": "672000",
    "end": "672839"
  },
  {
    "text": "optimizations that goes to shrink the",
    "start": "672839",
    "end": "675540"
  },
  {
    "text": "module and allow it to run faster and",
    "start": "675540",
    "end": "678000"
  },
  {
    "text": "then we get out the final module that we",
    "start": "678000",
    "end": "679560"
  },
  {
    "text": "get back to the developer",
    "start": "679560",
    "end": "682260"
  },
  {
    "start": "681000",
    "end": "699000"
  },
  {
    "text": "and as promised quick tour of quickjs",
    "start": "682260",
    "end": "684120"
  },
  {
    "text": "was Mrs this is a crate that's used by a",
    "start": "684120",
    "end": "687180"
  },
  {
    "text": "number of companies in this room",
    "start": "687180",
    "end": "688200"
  },
  {
    "text": "including xdism",
    "start": "688200",
    "end": "690180"
  },
  {
    "text": "including suborbital",
    "start": "690180",
    "end": "692220"
  },
  {
    "text": "including fermian and including VMware",
    "start": "692220",
    "end": "697699"
  },
  {
    "start": "699000",
    "end": "765000"
  },
  {
    "text": "so the two high-level Concepts that we",
    "start": "700320",
    "end": "703019"
  },
  {
    "text": "have in quick JS lawsm RS are context",
    "start": "703019",
    "end": "706200"
  },
  {
    "text": "and value so context roughly corresponds",
    "start": "706200",
    "end": "708899"
  },
  {
    "text": "to a quick JS context so this allows you",
    "start": "708899",
    "end": "712440"
  },
  {
    "text": "to do things like create new JavaScript",
    "start": "712440",
    "end": "715019"
  },
  {
    "text": "values to basically insert rust",
    "start": "715019",
    "end": "717779"
  },
  {
    "text": "functions into your JavaScript",
    "start": "717779",
    "end": "720120"
  },
  {
    "text": "environment into doing things like",
    "start": "720120",
    "end": "721680"
  },
  {
    "text": "executing jobs that are pending on the",
    "start": "721680",
    "end": "724079"
  },
  {
    "text": "event Loop see if there are jobs pending",
    "start": "724079",
    "end": "725820"
  },
  {
    "text": "just all the sort of logistical stuff",
    "start": "725820",
    "end": "728339"
  },
  {
    "text": "you need to do with the JavaScript",
    "start": "728339",
    "end": "729300"
  },
  {
    "text": "environment oh yes and evaluate code",
    "start": "729300",
    "end": "731399"
  },
  {
    "text": "and then the value piece is corresponds",
    "start": "731399",
    "end": "734940"
  },
  {
    "text": "with the JavaScript value so that's your",
    "start": "734940",
    "end": "736440"
  },
  {
    "text": "booleans your numbers uh",
    "start": "736440",
    "end": "740240"
  },
  {
    "text": "objects things like that",
    "start": "740240",
    "end": "743100"
  },
  {
    "text": "now the really cool part about value is",
    "start": "743100",
    "end": "744959"
  },
  {
    "text": "that it also includes survey support so",
    "start": "744959",
    "end": "746760"
  },
  {
    "text": "if you have some Json and you want to",
    "start": "746760",
    "end": "748740"
  },
  {
    "text": "just convert it straight into",
    "start": "748740",
    "end": "750540"
  },
  {
    "text": "a JavaScript value we let you do that",
    "start": "750540",
    "end": "753720"
  },
  {
    "text": "and vice versa if you have a JavaScript",
    "start": "753720",
    "end": "755640"
  },
  {
    "text": "value and you want to get Json or",
    "start": "755640",
    "end": "757560"
  },
  {
    "text": "message pack or any other survey",
    "start": "757560",
    "end": "759180"
  },
  {
    "text": "supported format out of it Again Sports",
    "start": "759180",
    "end": "762600"
  },
  {
    "text": "built in to go do that which is super",
    "start": "762600",
    "end": "764220"
  },
  {
    "text": "convenient",
    "start": "764220",
    "end": "766639"
  },
  {
    "start": "765000",
    "end": "783000"
  },
  {
    "text": "and then we use this as I say to add",
    "start": "767100",
    "end": "768839"
  },
  {
    "text": "some JavaScript apis so in our case we",
    "start": "768839",
    "end": "771480"
  },
  {
    "text": "used to add text decoder but you know",
    "start": "771480",
    "end": "773700"
  },
  {
    "text": "say you wanted to make a network",
    "start": "773700",
    "end": "774959"
  },
  {
    "text": "connection and hypothetically you wanted",
    "start": "774959",
    "end": "776399"
  },
  {
    "text": "to call it fetch that's something else",
    "start": "776399",
    "end": "779220"
  },
  {
    "text": "that you would be able to use a similar",
    "start": "779220",
    "end": "780779"
  },
  {
    "text": "approach to what I'm about to outline to",
    "start": "780779",
    "end": "782279"
  },
  {
    "text": "do",
    "start": "782279",
    "end": "784200"
  },
  {
    "start": "783000",
    "end": "823000"
  },
  {
    "text": "so",
    "start": "784200",
    "end": "785459"
  },
  {
    "text": "we start off with in this case in",
    "start": "785459",
    "end": "787440"
  },
  {
    "text": "JavaScript because it's a bit easier to",
    "start": "787440",
    "end": "789120"
  },
  {
    "text": "actually Express",
    "start": "789120",
    "end": "790579"
  },
  {
    "text": "classes with JavaScript and then we have",
    "start": "790579",
    "end": "793740"
  },
  {
    "text": "some boilerplate code around it to help",
    "start": "793740",
    "end": "795600"
  },
  {
    "text": "clean up the the global object after",
    "start": "795600",
    "end": "798120"
  },
  {
    "text": "we're done defining things",
    "start": "798120",
    "end": "800040"
  },
  {
    "text": "now the texture class itself isn't too",
    "start": "800040",
    "end": "801839"
  },
  {
    "text": "interesting there's decode method on",
    "start": "801839",
    "end": "803279"
  },
  {
    "text": "there and then in there we actually",
    "start": "803279",
    "end": "805019"
  },
  {
    "text": "invoke",
    "start": "805019",
    "end": "806339"
  },
  {
    "text": "a function that we're injecting into the",
    "start": "806339",
    "end": "808440"
  },
  {
    "text": "environment off of the global object",
    "start": "808440",
    "end": "810779"
  },
  {
    "text": "called Javi decod code utfa buffered",
    "start": "810779",
    "end": "812639"
  },
  {
    "text": "string",
    "start": "812639",
    "end": "814880"
  },
  {
    "text": "so again we use that context to go and",
    "start": "815279",
    "end": "817920"
  },
  {
    "text": "evaluate that code to pull it into the",
    "start": "817920",
    "end": "820860"
  },
  {
    "text": "JavaScript environment",
    "start": "820860",
    "end": "823700"
  },
  {
    "text": "and then to add that method or that",
    "start": "824100",
    "end": "826680"
  },
  {
    "text": "function sorry that we're going to be",
    "start": "826680",
    "end": "827940"
  },
  {
    "text": "using we get the global object off the",
    "start": "827940",
    "end": "830820"
  },
  {
    "text": "context",
    "start": "830820",
    "end": "832380"
  },
  {
    "text": "and we go and we call route callback on",
    "start": "832380",
    "end": "835980"
  },
  {
    "text": "that basically on the context and pass",
    "start": "835980",
    "end": "838079"
  },
  {
    "text": "it a function that happens to return a",
    "start": "838079",
    "end": "841380"
  },
  {
    "text": "closure that matches a particular",
    "start": "841380",
    "end": "842579"
  },
  {
    "text": "signature",
    "start": "842579",
    "end": "843779"
  },
  {
    "text": "so that signature is we take in the",
    "start": "843779",
    "end": "845700"
  },
  {
    "text": "JavaScript context so again you can do",
    "start": "845700",
    "end": "847500"
  },
  {
    "text": "things like create values which is super",
    "start": "847500",
    "end": "849360"
  },
  {
    "text": "useful we have this parameter that gets",
    "start": "849360",
    "end": "852300"
  },
  {
    "text": "sent through so if you're working off a",
    "start": "852300",
    "end": "853620"
  },
  {
    "text": "class you have access to that",
    "start": "853620",
    "end": "855540"
  },
  {
    "text": "and zero or more arguments that get",
    "start": "855540",
    "end": "858600"
  },
  {
    "text": "taken in as input",
    "start": "858600",
    "end": "860279"
  },
  {
    "text": "and then we return back result to Value",
    "start": "860279",
    "end": "861959"
  },
  {
    "text": "so the okay case get the value back in",
    "start": "861959",
    "end": "864720"
  },
  {
    "text": "the error case it throws an exception",
    "start": "864720",
    "end": "866579"
  },
  {
    "text": "and we have some particular uh we have a",
    "start": "866579",
    "end": "869880"
  },
  {
    "text": "particular error type that you can use",
    "start": "869880",
    "end": "871019"
  },
  {
    "text": "if you want to customize what kind of",
    "start": "871019",
    "end": "872579"
  },
  {
    "text": "exception gets thrown",
    "start": "872579",
    "end": "875540"
  },
  {
    "text": "so this all works great you know we we",
    "start": "875760",
    "end": "878339"
  },
  {
    "text": "get our JavaScript we get our",
    "start": "878339",
    "end": "880019"
  },
  {
    "text": "webassembly module out of this",
    "start": "880019",
    "end": "881760"
  },
  {
    "text": "and everybody's happy accept",
    "start": "881760",
    "end": "885420"
  },
  {
    "text": "if you'll remember earlier I mentioned",
    "start": "885420",
    "end": "886800"
  },
  {
    "text": "we have a size limit of 256 kilobytes",
    "start": "886800",
    "end": "889100"
  },
  {
    "text": "and the smallest module that this",
    "start": "889100",
    "end": "891420"
  },
  {
    "text": "approach produces is 870 kilobytes so",
    "start": "891420",
    "end": "895139"
  },
  {
    "text": "not not super great for that use case in",
    "start": "895139",
    "end": "898019"
  },
  {
    "text": "particular but",
    "start": "898019",
    "end": "899880"
  },
  {
    "text": "enter Dynamic linking",
    "start": "899880",
    "end": "902760"
  },
  {
    "start": "901000",
    "end": "1009000"
  },
  {
    "text": "the idea here is we separate out",
    "start": "902760",
    "end": "906240"
  },
  {
    "text": "we basically separated the walls and",
    "start": "906240",
    "end": "907800"
  },
  {
    "text": "modules so we have a Wasa module that",
    "start": "907800",
    "end": "910079"
  },
  {
    "text": "contains the user's code",
    "start": "910079",
    "end": "912060"
  },
  {
    "text": "and we have a web it was a module that",
    "start": "912060",
    "end": "914160"
  },
  {
    "text": "contains the JavaScript interpreter",
    "start": "914160",
    "end": "916680"
  },
  {
    "text": "so for context like we call it the",
    "start": "916680",
    "end": "918420"
  },
  {
    "text": "provider at Shopify because it provides",
    "start": "918420",
    "end": "920760"
  },
  {
    "text": "a quick JS execution environment",
    "start": "920760",
    "end": "924360"
  },
  {
    "text": "and the way these two get glued together",
    "start": "924360",
    "end": "926040"
  },
  {
    "text": "is we use wasn't time to actually",
    "start": "926040",
    "end": "928860"
  },
  {
    "text": "execute these modules in production and",
    "start": "928860",
    "end": "931620"
  },
  {
    "text": "while sometimes exposes this concept of",
    "start": "931620",
    "end": "933600"
  },
  {
    "text": "a Linker",
    "start": "933600",
    "end": "934860"
  },
  {
    "text": "and the neat thing you can do with the",
    "start": "934860",
    "end": "936120"
  },
  {
    "text": "linkers you can say okay if I have",
    "start": "936120",
    "end": "938779"
  },
  {
    "text": "Imports that I'm pulling in under this",
    "start": "938779",
    "end": "941100"
  },
  {
    "text": "namespace",
    "start": "941100",
    "end": "942480"
  },
  {
    "text": "and this other module has exports that",
    "start": "942480",
    "end": "946139"
  },
  {
    "text": "correspond to the",
    "start": "946139",
    "end": "949380"
  },
  {
    "text": "the second part of the namespace for the",
    "start": "949380",
    "end": "951480"
  },
  {
    "text": "import",
    "start": "951480",
    "end": "953160"
  },
  {
    "text": "you can hook those up with the Linker",
    "start": "953160",
    "end": "954660"
  },
  {
    "text": "and basically say like okay if I want",
    "start": "954660",
    "end": "956040"
  },
  {
    "text": "something called eval by code from",
    "start": "956040",
    "end": "958199"
  },
  {
    "text": "quickjs provider well",
    "start": "958199",
    "end": "960779"
  },
  {
    "text": "proprietor comes in under quick JS",
    "start": "960779",
    "end": "962279"
  },
  {
    "text": "provider and it has an export called",
    "start": "962279",
    "end": "963779"
  },
  {
    "text": "eval byte code cool when I go and import",
    "start": "963779",
    "end": "966000"
  },
  {
    "text": "that I'm actually importing the eval",
    "start": "966000",
    "end": "968579"
  },
  {
    "text": "byte code in the module that it's being",
    "start": "968579",
    "end": "971699"
  },
  {
    "text": "exported from",
    "start": "971699",
    "end": "974040"
  },
  {
    "text": "I'm at a high level I'll go into some",
    "start": "974040",
    "end": "976139"
  },
  {
    "text": "details exactly how this works is we",
    "start": "976139",
    "end": "978120"
  },
  {
    "text": "have the JS code module that Imports",
    "start": "978120",
    "end": "980339"
  },
  {
    "text": "memory and functions from the provider",
    "start": "980339",
    "end": "982380"
  },
  {
    "text": "module using that Linker in wasometime",
    "start": "982380",
    "end": "985380"
  },
  {
    "text": "and we use the memory allocation",
    "start": "985380",
    "end": "986760"
  },
  {
    "text": "function defined in the component model",
    "start": "986760",
    "end": "988440"
  },
  {
    "text": "to basically have the one module or the",
    "start": "988440",
    "end": "991620"
  },
  {
    "text": "one instance managed memory in the other",
    "start": "991620",
    "end": "993480"
  },
  {
    "text": "instance",
    "start": "993480",
    "end": "994500"
  },
  {
    "text": "so we're using these little pieces that",
    "start": "994500",
    "end": "996839"
  },
  {
    "text": "are that exist today inside walls in",
    "start": "996839",
    "end": "999000"
  },
  {
    "text": "time and exist today as part of the",
    "start": "999000",
    "end": "1000860"
  },
  {
    "text": "component model specification to go and",
    "start": "1000860",
    "end": "1003579"
  },
  {
    "text": "coordinate all this to basically give us",
    "start": "1003579",
    "end": "1006980"
  },
  {
    "text": "more options than we had before",
    "start": "1006980",
    "end": "1010060"
  },
  {
    "text": "so again that provider Library looks",
    "start": "1010160",
    "end": "1013160"
  },
  {
    "text": "very similar to the driving core piece",
    "start": "1013160",
    "end": "1015440"
  },
  {
    "text": "we have that quickjs welcome RS piece",
    "start": "1015440",
    "end": "1017300"
  },
  {
    "text": "with again quickjs embedded inside of it",
    "start": "1017300",
    "end": "1019940"
  },
  {
    "text": "we have very similar i o code",
    "start": "1019940",
    "end": "1023899"
  },
  {
    "start": "1023000",
    "end": "1079000"
  },
  {
    "text": "but our exported functions are different",
    "start": "1023899",
    "end": "1025400"
  },
  {
    "text": "in this case because again this is that",
    "start": "1025400",
    "end": "1027140"
  },
  {
    "text": "webassembly Library piece as mentioned",
    "start": "1027140",
    "end": "1028699"
  },
  {
    "text": "earlier",
    "start": "1028699",
    "end": "1029959"
  },
  {
    "text": "so we have uh the first method is",
    "start": "1029959",
    "end": "1031880"
  },
  {
    "text": "canonical API realic method so this is",
    "start": "1031880",
    "end": "1034220"
  },
  {
    "text": "part of the component model it's used",
    "start": "1034220",
    "end": "1035959"
  },
  {
    "text": "for basically having one instance manage",
    "start": "1035959",
    "end": "1038298"
  },
  {
    "text": "memory inside of another instance so",
    "start": "1038299",
    "end": "1041000"
  },
  {
    "text": "this is how we're able to basically move",
    "start": "1041000",
    "end": "1042798"
  },
  {
    "text": "things between modules and have it be",
    "start": "1042799",
    "end": "1045438"
  },
  {
    "text": "somewhat coordinated in a standard way",
    "start": "1045439",
    "end": "1048020"
  },
  {
    "text": "and then we have that compile Source",
    "start": "1048020",
    "end": "1049700"
  },
  {
    "text": "method that takes in",
    "start": "1049700",
    "end": "1051679"
  },
  {
    "text": "that basically expects you to use the",
    "start": "1051679",
    "end": "1053720"
  },
  {
    "text": "realic method to go and put some",
    "start": "1053720",
    "end": "1055520"
  },
  {
    "text": "JavaScript source code inside the",
    "start": "1055520",
    "end": "1057320"
  },
  {
    "text": "provider's linear memory and you go and",
    "start": "1057320",
    "end": "1060020"
  },
  {
    "text": "give it the address to that source code",
    "start": "1060020",
    "end": "1061580"
  },
  {
    "text": "like that source code file source gives",
    "start": "1061580",
    "end": "1063440"
  },
  {
    "text": "you back a wide pointer to the quickjs",
    "start": "1063440",
    "end": "1066679"
  },
  {
    "text": "bytecode it's produced and we have an",
    "start": "1066679",
    "end": "1069140"
  },
  {
    "text": "eval bytecode exported function that",
    "start": "1069140",
    "end": "1070700"
  },
  {
    "text": "again expects a y pointer to the quickjs",
    "start": "1070700",
    "end": "1074780"
  },
  {
    "text": "bytecode that's been inserted into the",
    "start": "1074780",
    "end": "1076820"
  },
  {
    "text": "module or into the instruments",
    "start": "1076820",
    "end": "1079760"
  },
  {
    "start": "1079000",
    "end": "1108000"
  },
  {
    "text": "so it's CLI level the way we do the",
    "start": "1079760",
    "end": "1081559"
  },
  {
    "text": "embedded linking we embed this provider",
    "start": "1081559",
    "end": "1084260"
  },
  {
    "text": "Muslim Library again as a library",
    "start": "1084260",
    "end": "1086480"
  },
  {
    "text": "embedded in the command line application",
    "start": "1086480",
    "end": "1088280"
  },
  {
    "text": "and we use wallsom time to instantiate",
    "start": "1088280",
    "end": "1090559"
  },
  {
    "text": "it and work with that Library",
    "start": "1090559",
    "end": "1093260"
  },
  {
    "text": "so the command line level we call",
    "start": "1093260",
    "end": "1095059"
  },
  {
    "text": "compile source so we go and we take that",
    "start": "1095059",
    "end": "1097340"
  },
  {
    "text": "user source code",
    "start": "1097340",
    "end": "1099080"
  },
  {
    "text": "run it through compile Source get the",
    "start": "1099080",
    "end": "1100820"
  },
  {
    "text": "byte code back and then we use a crate",
    "start": "1100820",
    "end": "1102380"
  },
  {
    "text": "called wasm encoder to go and actually",
    "start": "1102380",
    "end": "1104660"
  },
  {
    "text": "write out the code module",
    "start": "1104660",
    "end": "1108760"
  },
  {
    "start": "1108000",
    "end": "1163000"
  },
  {
    "text": "so the code module that we output looks",
    "start": "1109700",
    "end": "1113299"
  },
  {
    "text": "well like this again series of imports",
    "start": "1113299",
    "end": "1116179"
  },
  {
    "text": "and then a start function and then a",
    "start": "1116179",
    "end": "1118460"
  },
  {
    "text": "date data segment containing the byte",
    "start": "1118460",
    "end": "1120559"
  },
  {
    "text": "code",
    "start": "1120559",
    "end": "1121640"
  },
  {
    "text": "so first we pull in that canonical ABI",
    "start": "1121640",
    "end": "1124280"
  },
  {
    "text": "realic function we pull in the eval",
    "start": "1124280",
    "end": "1127400"
  },
  {
    "text": "bytecode function those both come from",
    "start": "1127400",
    "end": "1129260"
  },
  {
    "text": "the provider module",
    "start": "1129260",
    "end": "1131480"
  },
  {
    "text": "and then we import memory from the",
    "start": "1131480",
    "end": "1133460"
  },
  {
    "text": "provider module to give this",
    "start": "1133460",
    "end": "1135919"
  },
  {
    "text": "to give this instance access to the",
    "start": "1135919",
    "end": "1138020"
  },
  {
    "text": "memory this instance itself doesn't need",
    "start": "1138020",
    "end": "1140240"
  },
  {
    "text": "its own memory thankfully with the way",
    "start": "1140240",
    "end": "1141620"
  },
  {
    "text": "the the start function is currently",
    "start": "1141620",
    "end": "1142940"
  },
  {
    "text": "implemented but if it did again it's",
    "start": "1142940",
    "end": "1145400"
  },
  {
    "text": "possible for this instance to also",
    "start": "1145400",
    "end": "1147559"
  },
  {
    "text": "Define its own memory and then you would",
    "start": "1147559",
    "end": "1150020"
  },
  {
    "text": "need the multi-memory proposal enabled",
    "start": "1150020",
    "end": "1152240"
  },
  {
    "text": "in the environment that you're executing",
    "start": "1152240",
    "end": "1153799"
  },
  {
    "text": "this",
    "start": "1153799",
    "end": "1154820"
  },
  {
    "text": "module in but since we don't need it it",
    "start": "1154820",
    "end": "1158419"
  },
  {
    "text": "we're able to keep it at one memory so",
    "start": "1158419",
    "end": "1160880"
  },
  {
    "text": "we don't need that so it runs more",
    "start": "1160880",
    "end": "1162080"
  },
  {
    "text": "environments",
    "start": "1162080",
    "end": "1164679"
  },
  {
    "start": "1163000",
    "end": "1247000"
  },
  {
    "text": "and then zooming into that start",
    "start": "1164960",
    "end": "1166700"
  },
  {
    "text": "function",
    "start": "1166700",
    "end": "1168020"
  },
  {
    "text": "we start by again calling realic to go",
    "start": "1168020",
    "end": "1170780"
  },
  {
    "text": "and get an address to where we can go",
    "start": "1170780",
    "end": "1172700"
  },
  {
    "text": "and put some quickjs by code",
    "start": "1172700",
    "end": "1175340"
  },
  {
    "text": "so that function signature for anyone in",
    "start": "1175340",
    "end": "1177919"
  },
  {
    "text": "the room who's not familiar with the",
    "start": "1177919",
    "end": "1178880"
  },
  {
    "text": "reality function the component model we",
    "start": "1178880",
    "end": "1180980"
  },
  {
    "text": "have zeros for the original pointer and",
    "start": "1180980",
    "end": "1182840"
  },
  {
    "text": "the original length because we didn't",
    "start": "1182840",
    "end": "1184160"
  },
  {
    "text": "have previous application",
    "start": "1184160",
    "end": "1186260"
  },
  {
    "text": "we give it an alignment of one and then",
    "start": "1186260",
    "end": "1188840"
  },
  {
    "text": "we say give us by code length amount of",
    "start": "1188840",
    "end": "1191299"
  },
  {
    "text": "memory and at this point it's a constant",
    "start": "1191299",
    "end": "1193280"
  },
  {
    "text": "value we know what the byte code is so",
    "start": "1193280",
    "end": "1195500"
  },
  {
    "text": "when we're creating this module we can",
    "start": "1195500",
    "end": "1197299"
  },
  {
    "text": "just stamp this in its constants",
    "start": "1197299",
    "end": "1198679"
  },
  {
    "text": "wherever we need to",
    "start": "1198679",
    "end": "1201559"
  },
  {
    "text": "and then given that we have that memory",
    "start": "1201559",
    "end": "1204140"
  },
  {
    "text": "address to go and write the byte code to",
    "start": "1204140",
    "end": "1205760"
  },
  {
    "text": "we call the memory init instruction",
    "start": "1205760",
    "end": "1207200"
  },
  {
    "text": "which basically says hey take this data",
    "start": "1207200",
    "end": "1209600"
  },
  {
    "text": "segment and go and put your entire",
    "start": "1209600",
    "end": "1211700"
  },
  {
    "text": "contents inside this memory address",
    "start": "1211700",
    "end": "1213620"
  },
  {
    "text": "please",
    "start": "1213620",
    "end": "1214700"
  },
  {
    "text": "and so we give it the bytecode data",
    "start": "1214700",
    "end": "1216260"
  },
  {
    "text": "segment that contains the byte code and",
    "start": "1216260",
    "end": "1217760"
  },
  {
    "text": "we give it the address of the memory we",
    "start": "1217760",
    "end": "1220340"
  },
  {
    "text": "just allocated to start the beginning of",
    "start": "1220340",
    "end": "1222500"
  },
  {
    "text": "the data segment",
    "start": "1222500",
    "end": "1223760"
  },
  {
    "text": "and tell it the amount of memory we want",
    "start": "1223760",
    "end": "1225799"
  },
  {
    "text": "transferred out of that data segment",
    "start": "1225799",
    "end": "1227120"
  },
  {
    "text": "into the basically that memory address",
    "start": "1227120",
    "end": "1230000"
  },
  {
    "text": "we just allocated and then we drop the",
    "start": "1230000",
    "end": "1231860"
  },
  {
    "text": "data segment because we don't need it",
    "start": "1231860",
    "end": "1233240"
  },
  {
    "text": "anymore",
    "start": "1233240",
    "end": "1235360"
  },
  {
    "text": "and then",
    "start": "1235580",
    "end": "1237260"
  },
  {
    "text": "the big step calling evaluate by code",
    "start": "1237260",
    "end": "1240140"
  },
  {
    "text": "again giving it the address where we",
    "start": "1240140",
    "end": "1242000"
  },
  {
    "text": "just copied the byte code to and the",
    "start": "1242000",
    "end": "1243679"
  },
  {
    "text": "byte code length and off it goes",
    "start": "1243679",
    "end": "1247779"
  },
  {
    "start": "1247000",
    "end": "1330000"
  },
  {
    "text": "and then actually what this looks like",
    "start": "1248360",
    "end": "1249919"
  },
  {
    "text": "and in terms of like creating one of",
    "start": "1249919",
    "end": "1251720"
  },
  {
    "text": "these modules and executing it so we",
    "start": "1251720",
    "end": "1253760"
  },
  {
    "text": "have the uh the echo command to",
    "start": "1253760",
    "end": "1256400"
  },
  {
    "text": "basically write out a simple hello world",
    "start": "1256400",
    "end": "1258080"
  },
  {
    "text": "program in JavaScript right then do a",
    "start": "1258080",
    "end": "1260299"
  },
  {
    "text": "Javascript file we do that similar Javi",
    "start": "1260299",
    "end": "1262460"
  },
  {
    "text": "compile call but this time we pass the",
    "start": "1262460",
    "end": "1264559"
  },
  {
    "text": "Dash D flag to go and indicate that we",
    "start": "1264559",
    "end": "1266660"
  },
  {
    "text": "want it dynamically compiled if you",
    "start": "1266660",
    "end": "1268640"
  },
  {
    "text": "don't pass the Dash D flag it's just",
    "start": "1268640",
    "end": "1270380"
  },
  {
    "text": "going to Pilot statically so that's",
    "start": "1270380",
    "end": "1272299"
  },
  {
    "text": "that's default",
    "start": "1272299",
    "end": "1273799"
  },
  {
    "text": "and then we do this interesting thing",
    "start": "1273799",
    "end": "1275240"
  },
  {
    "text": "with this Joby emit provider call so",
    "start": "1275240",
    "end": "1277760"
  },
  {
    "text": "normally this isn't something that",
    "start": "1277760",
    "end": "1279080"
  },
  {
    "text": "someone would need to run except if they",
    "start": "1279080",
    "end": "1280880"
  },
  {
    "text": "wanted to execute this code locally or",
    "start": "1280880",
    "end": "1282679"
  },
  {
    "text": "otherwise wanted to get our webassembly",
    "start": "1282679",
    "end": "1284360"
  },
  {
    "text": "library because there aren't really a",
    "start": "1284360",
    "end": "1286520"
  },
  {
    "text": "lot of widely available options at the",
    "start": "1286520",
    "end": "1289340"
  },
  {
    "text": "moment for Distributing webassembly",
    "start": "1289340",
    "end": "1290780"
  },
  {
    "text": "libraries and because the library is",
    "start": "1290780",
    "end": "1293299"
  },
  {
    "text": "embedded in our CLI we decided to add a",
    "start": "1293299",
    "end": "1295340"
  },
  {
    "text": "sub command to go and actually get the",
    "start": "1295340",
    "end": "1298520"
  },
  {
    "text": "library from the CLI itself so for",
    "start": "1298520",
    "end": "1301640"
  },
  {
    "text": "something like this it's super",
    "start": "1301640",
    "end": "1302720"
  },
  {
    "text": "convenient",
    "start": "1302720",
    "end": "1304760"
  },
  {
    "text": "and then for running this again it's a",
    "start": "1304760",
    "end": "1307100"
  },
  {
    "text": "very similar wasn't time run command",
    "start": "1307100",
    "end": "1308780"
  },
  {
    "text": "where we just all to run the example we",
    "start": "1308780",
    "end": "1311360"
  },
  {
    "text": "do need to pass an additional flag to",
    "start": "1311360",
    "end": "1313159"
  },
  {
    "text": "basically tell a while sometime hey if",
    "start": "1313159",
    "end": "1315140"
  },
  {
    "text": "you see an import for Javi quickjs",
    "start": "1315140",
    "end": "1317059"
  },
  {
    "text": "provider V1",
    "start": "1317059",
    "end": "1318380"
  },
  {
    "text": "go and use that file that we just",
    "start": "1318380",
    "end": "1321080"
  },
  {
    "text": "basically output from the Javi CLI",
    "start": "1321080",
    "end": "1323840"
  },
  {
    "text": "so it's able to actually link it in and",
    "start": "1323840",
    "end": "1326600"
  },
  {
    "text": "then we run it and we get back our hello",
    "start": "1326600",
    "end": "1328580"
  },
  {
    "text": "world as expected",
    "start": "1328580",
    "end": "1331539"
  },
  {
    "start": "1330000",
    "end": "1380000"
  },
  {
    "text": "so again just to reiterate sort of what",
    "start": "1332059",
    "end": "1334400"
  },
  {
    "text": "we went over went over what Joby is how",
    "start": "1334400",
    "end": "1336679"
  },
  {
    "text": "to write some high level JavaScript code",
    "start": "1336679",
    "end": "1338299"
  },
  {
    "text": "for it what that looks like what the",
    "start": "1338299",
    "end": "1339919"
  },
  {
    "text": "input and output output flow looks like",
    "start": "1339919",
    "end": "1342860"
  },
  {
    "text": "moving over how to create modules with",
    "start": "1342860",
    "end": "1344900"
  },
  {
    "text": "quickjs embedded inside the module we",
    "start": "1344900",
    "end": "1347840"
  },
  {
    "text": "went over a quick tour of quickjs wasm",
    "start": "1347840",
    "end": "1350480"
  },
  {
    "text": "RS which you can use today to build all",
    "start": "1350480",
    "end": "1353120"
  },
  {
    "text": "sorts of applications that use",
    "start": "1353120",
    "end": "1354740"
  },
  {
    "text": "webassembly and compile those into",
    "start": "1354740",
    "end": "1356960"
  },
  {
    "text": "webassembly modules so they can be",
    "start": "1356960",
    "end": "1358340"
  },
  {
    "text": "executed in a variety of environments",
    "start": "1358340",
    "end": "1361039"
  },
  {
    "text": "how to use that to go and add your own",
    "start": "1361039",
    "end": "1363080"
  },
  {
    "text": "custom JS functionality into a",
    "start": "1363080",
    "end": "1365419"
  },
  {
    "text": "JavaScript environment that you're",
    "start": "1365419",
    "end": "1366440"
  },
  {
    "text": "hoping to offer",
    "start": "1366440",
    "end": "1367700"
  },
  {
    "text": "as well as how we go and we we create",
    "start": "1367700",
    "end": "1369740"
  },
  {
    "text": "these tiny modules that are about like",
    "start": "1369740",
    "end": "1371900"
  },
  {
    "text": "three kilobytes in size for an",
    "start": "1371900",
    "end": "1373640"
  },
  {
    "text": "interpreted language that normally",
    "start": "1373640",
    "end": "1374780"
  },
  {
    "text": "requires modules that are at least 870",
    "start": "1374780",
    "end": "1377840"
  },
  {
    "text": "kilobytes in size",
    "start": "1377840",
    "end": "1380600"
  },
  {
    "start": "1380000",
    "end": "1402000"
  },
  {
    "text": "thank you so much please go visit our",
    "start": "1380600",
    "end": "1383240"
  },
  {
    "text": "engineering blog",
    "start": "1383240",
    "end": "1385900"
  },
  {
    "text": "it looks like we have about six minutes",
    "start": "1389480",
    "end": "1391580"
  },
  {
    "text": "for questions so uh so any questions",
    "start": "1391580",
    "end": "1396399"
  },
  {
    "start": "1402000",
    "end": "1664000"
  },
  {
    "text": "hey Jeff uh great talk",
    "start": "1404299",
    "end": "1407179"
  },
  {
    "text": "um I was wondering uh if you have plans",
    "start": "1407179",
    "end": "1409820"
  },
  {
    "text": "for uh leveraging the GC proposal",
    "start": "1409820",
    "end": "1413960"
  },
  {
    "text": "not at the moment uh we are keeping an",
    "start": "1413960",
    "end": "1416419"
  },
  {
    "text": "eye on it",
    "start": "1416419",
    "end": "1417440"
  },
  {
    "text": "um for context with Shopify functions",
    "start": "1417440",
    "end": "1419419"
  },
  {
    "text": "because they have to",
    "start": "1419419",
    "end": "1420980"
  },
  {
    "text": "execute in yeah just",
    "start": "1420980",
    "end": "1424460"
  },
  {
    "text": "uh because they have to execute in less",
    "start": "1424460",
    "end": "1426980"
  },
  {
    "text": "than",
    "start": "1426980",
    "end": "1428059"
  },
  {
    "text": "um five milliseconds PC typically",
    "start": "1428059",
    "end": "1429980"
  },
  {
    "text": "doesn't run in our case",
    "start": "1429980",
    "end": "1432400"
  },
  {
    "text": "so it's not really a concern from our",
    "start": "1432400",
    "end": "1435200"
  },
  {
    "text": "side but obviously for Javi the tool",
    "start": "1435200",
    "end": "1436700"
  },
  {
    "text": "itself would be useful for other use",
    "start": "1436700",
    "end": "1438620"
  },
  {
    "text": "cases potentially",
    "start": "1438620",
    "end": "1440120"
  },
  {
    "text": "very cool I also wanted to say that",
    "start": "1440120",
    "end": "1441860"
  },
  {
    "text": "we've been playing around with Javi at",
    "start": "1441860",
    "end": "1443659"
  },
  {
    "text": "loophole and it's super great it's",
    "start": "1443659",
    "end": "1445460"
  },
  {
    "text": "awesome thank you",
    "start": "1445460",
    "end": "1448360"
  },
  {
    "text": "first of all great talk",
    "start": "1459940",
    "end": "1463039"
  },
  {
    "text": "um you mentioned the use case for",
    "start": "1463039",
    "end": "1466460"
  },
  {
    "text": "webassembly at Shopify was this",
    "start": "1466460",
    "end": "1469580"
  },
  {
    "text": "if and buts in the checkout flow could",
    "start": "1469580",
    "end": "1473120"
  },
  {
    "text": "you share some more on what Shopify",
    "start": "1473120",
    "end": "1475400"
  },
  {
    "text": "wants to use webassembly for",
    "start": "1475400",
    "end": "1478460"
  },
  {
    "text": "in your business",
    "start": "1478460",
    "end": "1479780"
  },
  {
    "text": "oh yes uh so it's basically Shopify is",
    "start": "1479780",
    "end": "1483620"
  },
  {
    "text": "like hosted code right so it's not like",
    "start": "1483620",
    "end": "1485419"
  },
  {
    "text": "an open source project like Magento",
    "start": "1485419",
    "end": "1487820"
  },
  {
    "text": "um and it's not a self-hosted product",
    "start": "1487820",
    "end": "1489919"
  },
  {
    "text": "it's hosted on our servers and we have",
    "start": "1489919",
    "end": "1491960"
  },
  {
    "text": "third-party developers who want to",
    "start": "1491960",
    "end": "1494200"
  },
  {
    "text": "customize parts of the checkout flow and",
    "start": "1494200",
    "end": "1497120"
  },
  {
    "text": "like do things like ad discounts",
    "start": "1497120",
    "end": "1499419"
  },
  {
    "text": "high payment methods you know things",
    "start": "1499419",
    "end": "1502280"
  },
  {
    "text": "along those lines and we wanted a way to",
    "start": "1502280",
    "end": "1504919"
  },
  {
    "text": "do this securely and quickly so",
    "start": "1504919",
    "end": "1507679"
  },
  {
    "text": "webassembly allows people who aren't",
    "start": "1507679",
    "end": "1509419"
  },
  {
    "text": "Shopify you know developers to go and",
    "start": "1509419",
    "end": "1512720"
  },
  {
    "text": "change code on our back end essentially",
    "start": "1512720",
    "end": "1514520"
  },
  {
    "text": "and",
    "start": "1514520",
    "end": "1515840"
  },
  {
    "text": "alter the business logic of the checkout",
    "start": "1515840",
    "end": "1518120"
  },
  {
    "text": "flow",
    "start": "1518120",
    "end": "1519020"
  },
  {
    "text": "so so that could potentially expand to",
    "start": "1519020",
    "end": "1521059"
  },
  {
    "text": "other use cases like just the checkout",
    "start": "1521059",
    "end": "1523580"
  },
  {
    "text": "flow oh absolutely yeah",
    "start": "1523580",
    "end": "1526960"
  },
  {
    "text": "so my question is about security so this",
    "start": "1533140",
    "end": "1536779"
  },
  {
    "text": "is a",
    "start": "1536779",
    "end": "1538120"
  },
  {
    "text": "uh with a one module with a big module",
    "start": "1538120",
    "end": "1540860"
  },
  {
    "text": "with a big JS you have a security but",
    "start": "1540860",
    "end": "1543860"
  },
  {
    "text": "with a dynamic linking you have a as I",
    "start": "1543860",
    "end": "1548539"
  },
  {
    "text": "understand a shared Heap inside quickjs",
    "start": "1548539",
    "end": "1550640"
  },
  {
    "text": "for each client I mean no no okay no so",
    "start": "1550640",
    "end": "1554360"
  },
  {
    "text": "actually we instantiate a that quickjs",
    "start": "1554360",
    "end": "1557539"
  },
  {
    "text": "provider module separately for each",
    "start": "1557539",
    "end": "1560600"
  },
  {
    "text": "instance of the quickjs by code",
    "start": "1560600",
    "end": "1564080"
  },
  {
    "text": "so the module is the same we have the",
    "start": "1564080",
    "end": "1566539"
  },
  {
    "text": "same module across all of the users of",
    "start": "1566539",
    "end": "1569240"
  },
  {
    "text": "quickjs but a different instance of that",
    "start": "1569240",
    "end": "1571700"
  },
  {
    "text": "module for execution or per quickjs uh",
    "start": "1571700",
    "end": "1576919"
  },
  {
    "text": "bytecode containing module",
    "start": "1576919",
    "end": "1580460"
  },
  {
    "text": "oh yeah I see thanks yeah",
    "start": "1580460",
    "end": "1584140"
  },
  {
    "text": "hey great talk uh do you have any data",
    "start": "1596539",
    "end": "1598880"
  },
  {
    "text": "on the overhead uh between the static",
    "start": "1598880",
    "end": "1601940"
  },
  {
    "text": "Milling monolith and uh the dynamic",
    "start": "1601940",
    "end": "1605179"
  },
  {
    "text": "linking like especially with the actual",
    "start": "1605179",
    "end": "1607340"
  },
  {
    "text": "compilation step involved and you know",
    "start": "1607340",
    "end": "1609980"
  },
  {
    "text": "the snapshot of the modeler that gets",
    "start": "1609980",
    "end": "1613100"
  },
  {
    "text": "that extra boost from from visor yeah",
    "start": "1613100",
    "end": "1616700"
  },
  {
    "text": "yeah we did we do have Benchmark numbers",
    "start": "1616700",
    "end": "1619820"
  },
  {
    "text": "they are internal I don't remember the",
    "start": "1619820",
    "end": "1623059"
  },
  {
    "text": "exact numbers off the top of my head",
    "start": "1623059",
    "end": "1624919"
  },
  {
    "text": "unfortunately",
    "start": "1624919",
    "end": "1626559"
  },
  {
    "text": "but uh yeah we did do the numbers the",
    "start": "1626559",
    "end": "1629539"
  },
  {
    "text": "dynamic linking actually usually is",
    "start": "1629539",
    "end": "1630980"
  },
  {
    "text": "faster because it is a smaller module uh",
    "start": "1630980",
    "end": "1633740"
  },
  {
    "text": "there are like the single kilobytes and",
    "start": "1633740",
    "end": "1636140"
  },
  {
    "text": "we can use uh the initialize pre method",
    "start": "1636140",
    "end": "1639440"
  },
  {
    "text": "on the shared engine uh module to",
    "start": "1639440",
    "end": "1643940"
  },
  {
    "text": "basically speed up initialization time",
    "start": "1643940",
    "end": "1645380"
  },
  {
    "text": "because it doesn't need to check that",
    "start": "1645380",
    "end": "1646400"
  },
  {
    "text": "the Imports are all satisfied every time",
    "start": "1646400",
    "end": "1648440"
  },
  {
    "text": "it runs",
    "start": "1648440",
    "end": "1650000"
  },
  {
    "text": "sweet thanks",
    "start": "1650000",
    "end": "1652840"
  },
  {
    "text": "all right",
    "start": "1656900",
    "end": "1659440"
  },
  {
    "text": "foreign",
    "start": "1661580",
    "end": "1664580"
  }
]