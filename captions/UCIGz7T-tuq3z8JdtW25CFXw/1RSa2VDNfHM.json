[
  {
    "text": "foreign [Music] [Applause]",
    "start": "599",
    "end": "13099"
  },
  {
    "text": "and today I'm here with my teammate Raphael glad to be here to talk to you about how",
    "start": "13099",
    "end": "20100"
  },
  {
    "text": "to develop serverless application with Watson worker server",
    "start": "20100",
    "end": "25340"
  },
  {
    "text": "just before starting with the topic a bit introduction about what we are doing so we are both are part of the team",
    "start": "25619",
    "end": "31980"
  },
  {
    "text": "called Wasa Labs at VMware and the idea is that we explore create and contribute",
    "start": "31980",
    "end": "37559"
  },
  {
    "text": "to projects to showcase the possibilities of webassembly and also helping developers to adopt this amazing",
    "start": "37559",
    "end": "43379"
  },
  {
    "text": "technology and now let's talk just a little bit",
    "start": "43379",
    "end": "48420"
  },
  {
    "text": "about serverless and webassembly so serverless is a popular cloud",
    "start": "48420",
    "end": "54719"
  },
  {
    "text": "computing model that has been using for several years already so the main idea is that it abstracts developers from the",
    "start": "54719",
    "end": "61920"
  },
  {
    "text": "underlying infrastructure so your service instead of building microservices or entire application you",
    "start": "61920",
    "end": "68460"
  },
  {
    "text": "build a small individual units that are in charge of replying to a specific",
    "start": "68460",
    "end": "73920"
  },
  {
    "text": "events and provide a response so those this uh individual units are usually",
    "start": "73920",
    "end": "79020"
  },
  {
    "text": "called functions or workers main difference between between these two terms is that initially all the",
    "start": "79020",
    "end": "86820"
  },
  {
    "text": "platforms talk about functions as it's the easiest way to define those but recently some companies like cloudflare",
    "start": "86820",
    "end": "94259"
  },
  {
    "text": "are starting to introduce the concept of workers which is a similar concept of functions but they took the ideas from",
    "start": "94259",
    "end": "101700"
  },
  {
    "text": "the web plan for apis and integrated into this uh the serverless model so the",
    "start": "101700",
    "end": "107340"
  },
  {
    "text": "idea is that you get requests you process them and provide a response to",
    "start": "107340",
    "end": "112680"
  },
  {
    "text": "your users if we think of an application kind of a microservice or application we see we",
    "start": "112680",
    "end": "119880"
  },
  {
    "text": "have the framework that we are using regardless of the language we have the libraries that that specific framework",
    "start": "119880",
    "end": "126600"
  },
  {
    "text": "depends on you may have more things that your code needs actually and then your code which is the thing that you are",
    "start": "126600",
    "end": "133860"
  },
  {
    "text": "actually calling the idea for serverless is that we take that code and split them into individual",
    "start": "133860",
    "end": "140340"
  },
  {
    "text": "units that will be the ones implementing your business logic",
    "start": "140340",
    "end": "146120"
  },
  {
    "text": "if we focus now from the point of view of developers working with serverless applications you may want to main things",
    "start": "146940",
    "end": "154920"
  },
  {
    "text": "first thing is that you want to focus on writing the code or writing those functions or workers that will Implement",
    "start": "154920",
    "end": "161280"
  },
  {
    "text": "your business logic and then eventually you want to reuse all the knowledge that you already have",
    "start": "161280",
    "end": "167580"
  },
  {
    "text": "to develop best workers we really think that webassembly is a",
    "start": "167580",
    "end": "173040"
  },
  {
    "text": "game changer for this ecosystem and this is because from the developer's point of view it",
    "start": "173040",
    "end": "178980"
  },
  {
    "text": "gives you the ability to write your workers and functions you see almost any language as you can for example Target",
    "start": "178980",
    "end": "185640"
  },
  {
    "text": "webassembly from compilation from compilation you can use interpreters inside that are already compiled so that",
    "start": "185640",
    "end": "192120"
  },
  {
    "text": "makes webassembly a great idea for for running serverless also thinking a bit more about the",
    "start": "192120",
    "end": "199680"
  },
  {
    "text": "future the component model will be even go a step further in that direction because developers not only will be able",
    "start": "199680",
    "end": "207480"
  },
  {
    "text": "to reuse the existing knowledge in terms of languages and libraries but also a",
    "start": "207480",
    "end": "213180"
  },
  {
    "text": "small components that the community and even your company will be providing to you so you have already efficient",
    "start": "213180",
    "end": "219480"
  },
  {
    "text": "libraries compiling to webassembly that you can reuse in any project or any worker",
    "start": "219480",
    "end": "226519"
  },
  {
    "text": "but let's be fair it's true that when you get started it's",
    "start": "227159",
    "end": "232440"
  },
  {
    "text": "a bit of a complex ecosystem so I can speak by myself I've been working in as",
    "start": "232440",
    "end": "238260"
  },
  {
    "text": "a full stack developer for several years and one year ago I started working more specifically in webassembly so the first",
    "start": "238260",
    "end": "245879"
  },
  {
    "text": "thing that I did of course was to look about what's webassembly just to get a bit of information about this technology",
    "start": "245879",
    "end": "253379"
  },
  {
    "text": "webassembly itself introduces a new set of Concepts and tooling so for example",
    "start": "253379",
    "end": "258660"
  },
  {
    "text": "you need to think now what some Isa you have also that it's a",
    "start": "258660",
    "end": "264600"
  },
  {
    "text": "stack-based virtual machine which are terms that you are not used to when you",
    "start": "264600",
    "end": "269940"
  },
  {
    "text": "work as a full stack or you are working as in services or microservices you also need to think about compilation",
    "start": "269940",
    "end": "276419"
  },
  {
    "text": "is that the way I'm going to work always with webassembly do I need now to learn",
    "start": "276419",
    "end": "281940"
  },
  {
    "text": "a new language how I pass the data what's even the host and the guest how can we pass that we",
    "start": "281940",
    "end": "288120"
  },
  {
    "text": "were talking previous uh presentations about that and also the differences between browser",
    "start": "288120",
    "end": "293880"
  },
  {
    "text": "server what's wasi how it helps me to build the solution sign it it's it's kind of complex so at that time when we",
    "start": "293880",
    "end": "301919"
  },
  {
    "text": "were researching about this we thought like is there any way we can take all",
    "start": "301919",
    "end": "308400"
  },
  {
    "text": "the benefits from webassembly and for now ignore the complexity and all",
    "start": "308400",
    "end": "314580"
  },
  {
    "text": "the new Concepts and this is why we created this project so the idea behind this project is that",
    "start": "314580",
    "end": "321419"
  },
  {
    "text": "we want developers to be productive quickly while creating the apps that",
    "start": "321419",
    "end": "326759"
  },
  {
    "text": "fully benefit from webassembly itself",
    "start": "326759",
    "end": "330800"
  },
  {
    "text": "and that's was a worker server or the implementation of this idea from the Watson Labs theme so what's a worker",
    "start": "332220",
    "end": "339240"
  },
  {
    "text": "server is an open source project for developing and running um web serverless apps on top of",
    "start": "339240",
    "end": "345240"
  },
  {
    "text": "webassembly so it exposes all the workers that you write as an HTTP API",
    "start": "345240",
    "end": "351300"
  },
  {
    "text": "receiving request and then returning the responses to your users",
    "start": "351300",
    "end": "357120"
  },
  {
    "text": "the same way that we were talking before about this individual units thanks to webassembly now you can write those",
    "start": "357120",
    "end": "363539"
  },
  {
    "text": "workers in different languages you can use JavaScript you can use Ruby you can use Python and in the future you will be",
    "start": "363539",
    "end": "370320"
  },
  {
    "text": "able to use more as we add more and more support for new languages on this project",
    "start": "370320",
    "end": "376860"
  },
  {
    "text": "and one of the questions that you may think at this point is that but how quickly can you get something work with",
    "start": "376860",
    "end": "383580"
  },
  {
    "text": "wasang worker server so for that I'm going to give the turn to graphile",
    "start": "383580",
    "end": "389460"
  },
  {
    "text": "yeah so let's see how that",
    "start": "389460",
    "end": "395180"
  },
  {
    "text": "okay so what we claim is that you can do this in less than five minutes and we",
    "start": "398280",
    "end": "403440"
  },
  {
    "text": "are going to reproduce that um so let me just run that",
    "start": "403440",
    "end": "409860"
  },
  {
    "text": "and the idea is that you are going to be able to install wasn't worker server and run an example function in less than",
    "start": "409860",
    "end": "416639"
  },
  {
    "text": "five minutes uh well this really depends on this on the downloaded speed that we have here but this is kind of the idea",
    "start": "416639",
    "end": "424740"
  },
  {
    "text": "let's wait for it and now that we downloaded it we just",
    "start": "424740",
    "end": "431400"
  },
  {
    "text": "installed it locally like in the local directory we can actually run the help command that is going to tell us what is",
    "start": "431400",
    "end": "437940"
  },
  {
    "text": "disabled to do and here this is a work in progress this bracket just started let's say we have",
    "start": "437940",
    "end": "445259"
  },
  {
    "text": "the runtimes command that angel is going to talk a bit about later and you are just able to provide a path where you",
    "start": "445259",
    "end": "452340"
  },
  {
    "text": "have your workers and they they might be in different languages and you can configure other things like what is the",
    "start": "452340",
    "end": "458520"
  },
  {
    "text": "host the port and the prefix and I have created a directory called my workers that you can see over here I only have",
    "start": "458520",
    "end": "464759"
  },
  {
    "text": "one worker which is written in JavaScript and it's called yes basic so my service is called GS basic or this",
    "start": "464759",
    "end": "471900"
  },
  {
    "text": "function and so the code is really straightforward um if we go to the end here we see that",
    "start": "471900",
    "end": "479639"
  },
  {
    "text": "we are using the feds listener and then we respond uh with our own Lambda where",
    "start": "479639",
    "end": "485039"
  },
  {
    "text": "we we react everything that is not a get request and then we answer with a",
    "start": "485039",
    "end": "490560"
  },
  {
    "text": "definitely a tip of the body with a 418 uh HTTP code",
    "start": "490560",
    "end": "497960"
  },
  {
    "text": "so we can just run Watson worker server with it and either out of the box detected that the folder is yes basic",
    "start": "498000",
    "end": "504599"
  },
  {
    "text": "and it exposed that on this specific path so now now you can see that we have the",
    "start": "504599",
    "end": "510720"
  },
  {
    "text": "detected route which is being served at 8080 as last year's basic out of the box",
    "start": "510720",
    "end": "515760"
  },
  {
    "text": "without me having to configure anything um so if I go to this one you see that",
    "start": "515760",
    "end": "521880"
  },
  {
    "text": "we got the expected response definitely the teapot I'm a teapot 418 is the",
    "start": "521880",
    "end": "527040"
  },
  {
    "text": "return code so you can check the documentation at",
    "start": "527040",
    "end": "533480"
  },
  {
    "text": "workers.wassenlabs.dev and there is more information on there and there is also a",
    "start": "533480",
    "end": "538800"
  },
  {
    "text": "a really nice thing here that you can reuse this work in other platforms and this is no coincidence because of the",
    "start": "538800",
    "end": "545279"
  },
  {
    "text": "decisions we have taken in order to make this reusable for example with other projects as uh we are seeing here with",
    "start": "545279",
    "end": "551640"
  },
  {
    "text": "cloudflare workers and so if we look at the command or the",
    "start": "551640",
    "end": "556740"
  },
  {
    "text": "code from this uh worker it's basically the very same thing I just copied and",
    "start": "556740",
    "end": "562019"
  },
  {
    "text": "pasted the the code over there and I can just run Wrangler over there and it's",
    "start": "562019",
    "end": "567540"
  },
  {
    "text": "going to start it's starting",
    "start": "567540",
    "end": "570680"
  },
  {
    "text": "and now I can just go ahead and curl over there",
    "start": "573000",
    "end": "578540"
  },
  {
    "text": "and you see it's basically the same answer that we got from before",
    "start": "579480",
    "end": "585740"
  },
  {
    "text": "is going to explain more about how it works yeah so thank you thank you for",
    "start": "592640",
    "end": "598019"
  },
  {
    "text": "the for the demo so basically you saw like in five minutes in less than five",
    "start": "598019",
    "end": "603420"
  },
  {
    "text": "minutes you can have already a workout running and not only that but you can also use the same code to run it in",
    "start": "603420",
    "end": "610140"
  },
  {
    "text": "different uh platforms so before going a bit more on a",
    "start": "610140",
    "end": "615480"
  },
  {
    "text": "more complete uh demo about what applications can you run with with Watson worker server let's talk a little",
    "start": "615480",
    "end": "621959"
  },
  {
    "text": "bit about how this works and what are the decisions that we took to create this project so when you start a",
    "start": "621959",
    "end": "629339"
  },
  {
    "text": "question worker server process it will check all the different files that are in the folder that you passed to the to",
    "start": "629339",
    "end": "636600"
  },
  {
    "text": "the CLI it will identify what are the files that can be managed or can be",
    "start": "636600",
    "end": "641820"
  },
  {
    "text": "converted into workers and then it will based on the directly on the name of the",
    "start": "641820",
    "end": "647399"
  },
  {
    "text": "files it will serve an HTTP endpoint you don't need to configure anything it's just everything based on the on the file",
    "start": "647399",
    "end": "654180"
  },
  {
    "text": "system which is called for other projects like Nexus they call it file system protein",
    "start": "654180",
    "end": "660360"
  },
  {
    "text": "for certain uh source code like you can see here for JavaScript and for Ruby",
    "start": "660360",
    "end": "666000"
  },
  {
    "text": "files you cannot run them directly so you need a specific uh runtime to run",
    "start": "666000",
    "end": "672180"
  },
  {
    "text": "them like the Ruby interpreter or the or a JavaScript engine for those cases the uh wasn't worker",
    "start": "672180",
    "end": "680519"
  },
  {
    "text": "server detects what's the runtime that it needs to use it downloads them as a",
    "start": "680519",
    "end": "686480"
  },
  {
    "text": "webassembly model so those are basically the room interpreter compiling to webassembly and the same for JavaScript",
    "start": "686480",
    "end": "693300"
  },
  {
    "text": "and then we'll use that to run the source code that you already created and",
    "start": "693300",
    "end": "698399"
  },
  {
    "text": "provide responses to the users in the apis that you consider apart from that",
    "start": "698399",
    "end": "703680"
  },
  {
    "text": "it comes with other features that we are going to see now so that's the basics for this project",
    "start": "703680",
    "end": "709980"
  },
  {
    "text": "and now the interesting part is what you can build with with this project",
    "start": "709980",
    "end": "716279"
  },
  {
    "text": "and today I want to show you how you can create your own your own Maps service",
    "start": "716279",
    "end": "721860"
  },
  {
    "text": "API with Watson worker server and Proto Maps so Proto Maps is a serverless",
    "start": "721860",
    "end": "728100"
  },
  {
    "text": "system for planets collapse this is the headline that they have in their Pro in their site so what they offer are two",
    "start": "728100",
    "end": "735060"
  },
  {
    "text": "main things they offer basically a way of storing all the maps metadata inside one",
    "start": "735060",
    "end": "742380"
  },
  {
    "text": "file and then Ally set of libraries that you can reuse to serve that information to clients like the maps that we chose",
    "start": "742380",
    "end": "750779"
  },
  {
    "text": "in websites and in applications I think all of us here are consumers of",
    "start": "750779",
    "end": "756959"
  },
  {
    "text": "maps in many different ways Google Maps Apple Maps and everything so how this",
    "start": "756959",
    "end": "762779"
  },
  {
    "text": "works internally is that you have first a client that is able to reproduce Maps",
    "start": "762779",
    "end": "768120"
  },
  {
    "text": "and then you need an API that serves you the maps metadata this super basic things about maps maps",
    "start": "768120",
    "end": "775620"
  },
  {
    "text": "in reality are composed by tiles so all that information is usually distributed and it requires you apis like Google",
    "start": "775620",
    "end": "782459"
  },
  {
    "text": "Maps and Apple Maps to serve you the styles but of course they have a free layer but",
    "start": "782459",
    "end": "789839"
  },
  {
    "text": "at some point you may want to host yourself the services as they were saying uh in proto-maps at one percent",
    "start": "789839",
    "end": "797279"
  },
  {
    "text": "cost of a regular service and this is what we what we did with",
    "start": "797279",
    "end": "803279"
  },
  {
    "text": "Watson worker server thanks to the ability to reduce the existing code and to reduce libraries you can run",
    "start": "803279",
    "end": "808860"
  },
  {
    "text": "protomaps with uh with Watson worker server and I'm going to show you how to do it",
    "start": "808860",
    "end": "815600"
  },
  {
    "text": "so here we have the sites from Proto Maps it contains a lot of information if you",
    "start": "817320",
    "end": "823200"
  },
  {
    "text": "are interested I totally recommend you to check it and the first thing that we need to do is to check what are the",
    "start": "823200",
    "end": "829560"
  },
  {
    "text": "library that we are going to use so the protomaps thing already put in place",
    "start": "829560",
    "end": "836160"
  },
  {
    "text": "several libraries they have JavaScript libraries and other languages so but for",
    "start": "836160",
    "end": "841440"
  },
  {
    "text": "this specific example we decided to use Python so from the repository they have tools for converting things writing Maps",
    "start": "841440",
    "end": "848820"
  },
  {
    "text": "that's not something that we are going to do today so we will focus on the reader and the tile libraries",
    "start": "848820",
    "end": "856560"
  },
  {
    "text": "whoops I lost okay now it's back so I just took those libraries directly",
    "start": "856560",
    "end": "864180"
  },
  {
    "text": "from the repository and put them locally in my project so we have the tile which is a library to read those small boxes",
    "start": "864180",
    "end": "871440"
  },
  {
    "text": "from the from the map and then the reader which is the one loading the entire map",
    "start": "871440",
    "end": "877260"
  },
  {
    "text": "information for those files style is not modified for reader we had to the slide",
    "start": "877260",
    "end": "882959"
  },
  {
    "text": "modification how the map is read but just minimal modifications then we need a map to show fortunately",
    "start": "882959",
    "end": "889760"
  },
  {
    "text": "protomaps already provides you with some example Maps so I just downloaded the planet map that they provide it's at 2.4",
    "start": "889760",
    "end": "897180"
  },
  {
    "text": "gigabytes file that's the reason I put it like in advance and not have to download it here",
    "start": "897180",
    "end": "903240"
  },
  {
    "text": "and then let's start from the client side so how we are going to show this in this case as a demo",
    "start": "903240",
    "end": "909959"
  },
  {
    "text": "I created an index.html file which uses leaflet which is a library JavaScript",
    "start": "909959",
    "end": "916199"
  },
  {
    "text": "library for maps then the protomaps library and here we have the integration",
    "start": "916199",
    "end": "921300"
  },
  {
    "text": "we have to create the map and then we should add a new layer with the URL",
    "start": "921300",
    "end": "926519"
  },
  {
    "text": "so this URL is the actual API that we need to implement using workers",
    "start": "926519",
    "end": "932399"
  },
  {
    "text": "one of the conventions that we followed in Watson worker server as following the idea of using the file system as the way",
    "start": "932399",
    "end": "939060"
  },
  {
    "text": "to to create the applications is that the public folder is automatically served as static assets so anything that",
    "start": "939060",
    "end": "946139"
  },
  {
    "text": "you put inside here it will be served as a static that's the reason we have here the index the yes and the CSS",
    "start": "946139",
    "end": "953160"
  },
  {
    "text": "so the next step is to reproduce this specific URL in a in a worker as you saw",
    "start": "953160",
    "end": "959519"
  },
  {
    "text": "before the URLs are composed by the name of the files to create Dynamic routes",
    "start": "959519",
    "end": "966300"
  },
  {
    "text": "like this one because this values will be replaced by the actual information from the map client then we use the",
    "start": "966300",
    "end": "974519"
  },
  {
    "text": "brackets and within with unidentified insights so that will automatically convert those URLs into Dynamic routes",
    "start": "974519",
    "end": "981720"
  },
  {
    "text": "that can retrieve the params inside the workers here we have the same approach like zxy",
    "start": "981720",
    "end": "989760"
  },
  {
    "text": "and here we have our index.p file which is the actual worker that will provide you with the tiles",
    "start": "989760",
    "end": "995940"
  },
  {
    "text": "here as Rafa showed before the concept is pretty similar we have a function",
    "start": "995940",
    "end": "1002420"
  },
  {
    "text": "that receives a request um in the end return a response that any",
    "start": "1002420",
    "end": "1008180"
  },
  {
    "text": "that's the only thing that we need to provide to create a worker in Python so for this case we import the libraries we",
    "start": "1008180",
    "end": "1014540"
  },
  {
    "text": "import the reader then we load the map at this point we pass the map",
    "start": "1014540",
    "end": "1019699"
  },
  {
    "text": "information to the reader we got the parameters from the from the uh request",
    "start": "1019699",
    "end": "1026058"
  },
  {
    "text": "and then we try to get the point just to get the tile if the point is filled let's return it",
    "start": "1026059",
    "end": "1032480"
  },
  {
    "text": "if not let's return time not found and that's that's all we need for creating uh this API",
    "start": "1032480",
    "end": "1040720"
  },
  {
    "text": "then the next thing as you saw at this point is that we need these libraries and Maps available inside the worker so",
    "start": "1041360",
    "end": "1048740"
  },
  {
    "text": "this is the only point in which you need a specific feature when you need to create a configuration file for creating",
    "start": "1048740",
    "end": "1055520"
  },
  {
    "text": "configuration file to configure your workers you just need to create the same exact file name but without thermal",
    "start": "1055520",
    "end": "1061160"
  },
  {
    "text": "extension and then you can do things like adding environmental variables mounting folders and other features like",
    "start": "1061160",
    "end": "1068419"
  },
  {
    "text": "in memory key value store for example so now that we have all the code ready",
    "start": "1068419",
    "end": "1075080"
  },
  {
    "text": "we need one more thing and it's that we need that python interpreter",
    "start": "1075080",
    "end": "1080179"
  },
  {
    "text": "unfortunately we cannot ship all the interpreters inside the Watson worker server binary because that will make it",
    "start": "1080179",
    "end": "1086600"
  },
  {
    "text": "grow like forever just because we are not only offering a python or room",
    "start": "1086600",
    "end": "1091880"
  },
  {
    "text": "interpreter but also several versions so for that we have the runtimes list",
    "start": "1091880",
    "end": "1097820"
  },
  {
    "text": "common that will gives you all this open source models that you can also download by",
    "start": "1097820",
    "end": "1103700"
  },
  {
    "text": "yourself um the ability to directly install them inside wasn't worker server",
    "start": "1103700",
    "end": "1110720"
  },
  {
    "text": "you can install like runtimes install python latest oops",
    "start": "1110720",
    "end": "1117919"
  },
  {
    "text": "but I already installed it so instead of doing that I'm going to show you like with the check that whoops it's a bit uh",
    "start": "1117919",
    "end": "1127820"
  },
  {
    "text": "let me remove this so that's that's already installed here so I don't need to install it again just",
    "start": "1127820",
    "end": "1134059"
  },
  {
    "text": "once so now let's run the project wws",
    "start": "1134059",
    "end": "1139399"
  },
  {
    "text": "let's use the port 1990 and automatically it will look for the roots",
    "start": "1139520",
    "end": "1144980"
  },
  {
    "text": "in the current folder so as we saw here it's going to serve this API and also",
    "start": "1144980",
    "end": "1150200"
  },
  {
    "text": "all the static assets so now if I go here and go to localhost 1990 we have our map and we have our API",
    "start": "1150200",
    "end": "1157580"
  },
  {
    "text": "working so now you have your own service that you can take this and deploy it",
    "start": "1157580",
    "end": "1162919"
  },
  {
    "text": "anywhere that's it's a self-contained server so you can use any machine you can use a container you can use the best",
    "start": "1162919",
    "end": "1169340"
  },
  {
    "text": "approach that works for your use case",
    "start": "1169340",
    "end": "1173860"
  },
  {
    "text": "okay and now let's continue a little bit explaining a bit more about how this project and what's the idea behind it so",
    "start": "1178100",
    "end": "1185600"
  },
  {
    "text": "the idea is that we want everyone to create their own workers and to be able",
    "start": "1185600",
    "end": "1191360"
  },
  {
    "text": "to run them everywhere and what that means for us",
    "start": "1191360",
    "end": "1196720"
  },
  {
    "text": "so the first thing is that to run it everywhere we think that the best way to accomplish",
    "start": "1197360",
    "end": "1203240"
  },
  {
    "text": "that is to ensure that we follow a set of conventions when we were looking for",
    "start": "1203240",
    "end": "1208340"
  },
  {
    "text": "those conventions when we started this project we found this great initiative from the teams on cloudflare workers",
    "start": "1208340",
    "end": "1214820"
  },
  {
    "text": "Andino Now supported by more companies like Shopify like versus netlify that",
    "start": "1214820",
    "end": "1221419"
  },
  {
    "text": "it's called winter CE so the idea of winter CE is that documenting and improving the different",
    "start": "1221419",
    "end": "1228980"
  },
  {
    "text": "web platform apis that can be reused on the server side for creating",
    "start": "1228980",
    "end": "1234020"
  },
  {
    "text": "applications so this Maps the ideas from the web apis and put them inside the",
    "start": "1234020",
    "end": "1240620"
  },
  {
    "text": "other runtime so you have a common API that can be reused in different platforms",
    "start": "1240620",
    "end": "1247940"
  },
  {
    "text": "we took this ideas because we send those those were great and we're already supported this is it was not a",
    "start": "1247940",
    "end": "1254480"
  },
  {
    "text": "coincident that before the same exact JavaScript code that we created for Watson worker server dragon cloudflare",
    "start": "1254480",
    "end": "1260720"
  },
  {
    "text": "and that's because we are following this this conventions it's true that there is still a long path for wasang worker",
    "start": "1260720",
    "end": "1267080"
  },
  {
    "text": "server to be winter CD compatible and that's because this documentation or this spec focuses",
    "start": "1267080",
    "end": "1274940"
  },
  {
    "text": "on JavaScript runtimes while wasn't worker server can work with many different languages so the idea is that",
    "start": "1274940",
    "end": "1282080"
  },
  {
    "text": "for JavaScript we aim to Target compatibility with winter CD but for other languages we really use the same",
    "start": "1282080",
    "end": "1288860"
  },
  {
    "text": "ideas and Concepts like request responses and all of that and put that in the language so you can reuse them",
    "start": "1288860",
    "end": "1295220"
  },
  {
    "text": "with the language that you prefer and now talking about languages Rafa is",
    "start": "1295220",
    "end": "1300919"
  },
  {
    "text": "going to give you an introduction about how those runtimes work yeah so we have seen an example uh this",
    "start": "1300919",
    "end": "1307340"
  },
  {
    "text": "example used quick JS in order to run the JavaScript code we also another example with python but how does this",
    "start": "1307340",
    "end": "1313700"
  },
  {
    "text": "work under the covers and the answer is in our case we are building the wasam language runtimes which is an open",
    "start": "1313700",
    "end": "1319700"
  },
  {
    "text": "source project that provides popular languages the interpreters in this case",
    "start": "1319700",
    "end": "1324919"
  },
  {
    "text": "we are providing Ruby Python and PHP we have done the work to board a PHP",
    "start": "1324919",
    "end": "1331039"
  },
  {
    "text": "interpreter we also have a work to Upstream that to the Upstream community and then what uh Western workers are",
    "start": "1331039",
    "end": "1337940"
  },
  {
    "text": "visible to do is to download the right the right runtime from this very well known set of the list of languages that",
    "start": "1337940",
    "end": "1344360"
  },
  {
    "text": "we support and build and publish and then it just runs the runtimes but the idea is that this is available for the",
    "start": "1344360",
    "end": "1351440"
  },
  {
    "text": "whole community and actually there are other projects such as spin for example that is also has documentation on how to",
    "start": "1351440",
    "end": "1357500"
  },
  {
    "text": "run this for example repeats p with CGI as a server",
    "start": "1357500",
    "end": "1364419"
  },
  {
    "text": "and in that uh in that context when we released actually wasn't working server",
    "start": "1364460",
    "end": "1369500"
  },
  {
    "text": "1.0 where we had support for Python and Ruby and we actually like kind of",
    "start": "1369500",
    "end": "1374840"
  },
  {
    "text": "announced that umatz uh who is the Ruby study he said",
    "start": "1374840",
    "end": "1380000"
  },
  {
    "text": "uh well after retweeting our uh our release uh he tweeted I'm glad Ruby",
    "start": "1380000",
    "end": "1385039"
  },
  {
    "text": "wasn't left behind this time and we think this is really important and this is something that we think webassembly",
    "start": "1385039",
    "end": "1390380"
  },
  {
    "text": "can also Embrace like we can it can also help Embrace everyone uh in the in the",
    "start": "1390380",
    "end": "1396320"
  },
  {
    "text": "in the community and so as Buddhist said onto his story um no toi gets left behind and in that",
    "start": "1396320",
    "end": "1403580"
  },
  {
    "text": "context we as awesome Labs we want to say is that no app gets left behind with",
    "start": "1403580",
    "end": "1409760"
  },
  {
    "text": "web assembly and this is what we want to achieve this we want to get as many developers as possible to webassembly",
    "start": "1409760",
    "end": "1416659"
  },
  {
    "text": "and so we can build up even bigger and reader community",
    "start": "1416659",
    "end": "1422320"
  },
  {
    "text": "is going to speak about the next steps of this project okay",
    "start": "1422320",
    "end": "1428860"
  },
  {
    "text": "yep so after you watch this after you watch this presentation you mentioned",
    "start": "1428900",
    "end": "1434299"
  },
  {
    "text": "what are the next steps so we recommend you to try it it's as simple as just running that command you have also a",
    "start": "1434299",
    "end": "1441020"
  },
  {
    "text": "quick start guide for five minutes introduction you have a lot of examples we will publish also the protomap",
    "start": "1441020",
    "end": "1447559"
  },
  {
    "text": "example that you already saw in case you want to host and create your own map service API you have also a website in",
    "start": "1447559",
    "end": "1454400"
  },
  {
    "text": "which you can find other projects all the Articles and also on Twitter so we encourage you to try this and just give",
    "start": "1454400",
    "end": "1460940"
  },
  {
    "text": "us feedback about what are the next thing that we want to pray that we should prioritize and how we can make",
    "start": "1460940",
    "end": "1466340"
  },
  {
    "text": "awesome worker server better for everyone",
    "start": "1466340",
    "end": "1470860"
  },
  {
    "text": "and what's next in terms of features or what we plan to have for this so the",
    "start": "1471980",
    "end": "1477440"
  },
  {
    "text": "first idea is that we want to support new languages that's the entire goal that we add more support for languages",
    "start": "1477440",
    "end": "1483620"
  },
  {
    "text": "that can Target webassembly natively like Golan for example and others like PHP as Rafa was commenting before",
    "start": "1483620",
    "end": "1491480"
  },
  {
    "text": "apart from that we want to provide workers with new features such as fetch persistence and everything this is kind",
    "start": "1491480",
    "end": "1499220"
  },
  {
    "text": "of a challenge for awesome worker server as it not only supports JavaScript but many different languages that requires",
    "start": "1499220",
    "end": "1505640"
  },
  {
    "text": "you to create bindings and all those functions spoke exposed to the workers",
    "start": "1505640",
    "end": "1511940"
  },
  {
    "text": "that's where we really think that the component model can help us and we are already exploring how we can bring all",
    "start": "1511940",
    "end": "1518299"
  },
  {
    "text": "those features into the different uh languages at the same time thanks to the component model so we can the idea is",
    "start": "1518299",
    "end": "1525200"
  },
  {
    "text": "that adding more languages will take less time as we can reuse the code uh",
    "start": "1525200",
    "end": "1530480"
  },
  {
    "text": "between every of the between every language finally I would love to say that if you",
    "start": "1530480",
    "end": "1538580"
  },
  {
    "text": "are trying or playing with serverless and you want to get a better overview",
    "start": "1538580",
    "end": "1544159"
  },
  {
    "text": "about what's in the ecosystem we totally recommend you to check other amazing projects that are around I think we",
    "start": "1544159",
    "end": "1550460"
  },
  {
    "text": "already have several talks in this in this amazing conference with vermillness being wasn't cloud from cosmonic",
    "start": "1550460",
    "end": "1557000"
  },
  {
    "text": "suborbital and also scale SSH also congratulations to the Fairmont to the",
    "start": "1557000",
    "end": "1562279"
  },
  {
    "text": "ferment team for the announcement of 1.0 and that's all from us we want to also",
    "start": "1562279",
    "end": "1569000"
  },
  {
    "text": "thank you all the amazing Community bathroom worker service based on really great projects like wase was on time and",
    "start": "1569000",
    "end": "1576200"
  },
  {
    "text": "much more so thank you because it it seems that this is a really vibrant uh",
    "start": "1576200",
    "end": "1581539"
  },
  {
    "text": "ecosystem and we are really glad to be part of that thank you thank you",
    "start": "1581539",
    "end": "1587539"
  },
  {
    "text": "thank you",
    "start": "1587539",
    "end": "1589658"
  },
  {
    "text": "I think we have five minutes for questions you have any",
    "start": "1595460",
    "end": "1601059"
  },
  {
    "text": "hey thanks for the presentation have you explored the component model with regards to communication between the how",
    "start": "1605480",
    "end": "1613520"
  },
  {
    "text": "shall I put in those let's let's call them processes that run inside the",
    "start": "1613520",
    "end": "1618620"
  },
  {
    "text": "runtime let's say I have a ruby component I want to expose to my JavaScript command vice versa",
    "start": "1618620",
    "end": "1625760"
  },
  {
    "text": "because this TCP is slow for some and HTTP is even slower so the idea is that",
    "start": "1625760",
    "end": "1630919"
  },
  {
    "text": "when the request does come in maybe there is going to be some work sharing between different languages which is you",
    "start": "1630919",
    "end": "1637400"
  },
  {
    "text": "know the Holy Grail of of all of us being able to to use all these languages",
    "start": "1637400",
    "end": "1643159"
  },
  {
    "text": "the center have you explored the possibility to do so I mean it's not up to you obviously the component",
    "start": "1643159",
    "end": "1648740"
  },
  {
    "text": "um yeah specification is about to one day solve this problem",
    "start": "1648740",
    "end": "1654380"
  },
  {
    "text": "so thank you thank you for the question that's that's actually one of the things that we would love to bring to this to",
    "start": "1654380",
    "end": "1660740"
  },
  {
    "text": "this project so one-sided component model we think may help us exposing",
    "start": "1660740",
    "end": "1665960"
  },
  {
    "text": "those from I mean the features that wasn't working server can provide to the different workers so that's one part and",
    "start": "1665960",
    "end": "1672440"
  },
  {
    "text": "the other part this was you exactly mentioned about reusing existing models and can connect them",
    "start": "1672440",
    "end": "1678500"
  },
  {
    "text": "with their workers so you can reuse and share things that's something that we are exploring also we are not there yet",
    "start": "1678500",
    "end": "1684980"
  },
  {
    "text": "we are we are first started in providing the the features that we want uh from",
    "start": "1684980",
    "end": "1690080"
  },
  {
    "text": "the I think from the host which is what's a worker server to the workers but that definitively one thing that we",
    "start": "1690080",
    "end": "1695659"
  },
  {
    "text": "want to to Target the ability to the same way that you have libraries that you can share in this case we are",
    "start": "1695659",
    "end": "1701120"
  },
  {
    "text": "mounting them inside but if you can share models directly and connect them to the workers to expose certain apis",
    "start": "1701120",
    "end": "1707539"
  },
  {
    "text": "that's something that we would love to explore and that we think can bring a lot of value there's there is also",
    "start": "1707539",
    "end": "1712940"
  },
  {
    "text": "something that if you put a awesome module inside the directory it gets served as long as it as long as it",
    "start": "1712940",
    "end": "1719539"
  },
  {
    "text": "provides the contract that awesome worker server expect it will work for example you can write a function in C",
    "start": "1719539",
    "end": "1725480"
  },
  {
    "text": "and so if you if you build a module in a way with the component model where you have everything that you need in this in",
    "start": "1725480",
    "end": "1732200"
  },
  {
    "text": "this module then you will be able to get advantage of the company model on your own model and then this gets served with",
    "start": "1732200",
    "end": "1737779"
  },
  {
    "text": "wasn't working server without any issue so that will be a way to to use that",
    "start": "1737779",
    "end": "1743360"
  },
  {
    "text": "but yeah definitely something we have to to check I think there is a question there yeah",
    "start": "1743360",
    "end": "1750320"
  },
  {
    "text": "okay third",
    "start": "1750320",
    "end": "1753399"
  },
  {
    "text": "hi great talk um have you tried also other mapping techniques for the URL request",
    "start": "1756740",
    "end": "1762320"
  },
  {
    "text": "parameters instead of just those bracketed folders that you have shown",
    "start": "1762320",
    "end": "1768080"
  },
  {
    "text": "so yes just to understand so the question is if there are other features around how",
    "start": "1768080",
    "end": "1774919"
  },
  {
    "text": "you can build your rails with uh with Watson worker server or yeah how to get these request parameters out of it so",
    "start": "1774919",
    "end": "1782120"
  },
  {
    "text": "how to to map the request parameters you've shown this way with the folders with the bracketed X and Y and said is",
    "start": "1782120",
    "end": "1789500"
  },
  {
    "text": "there other mappings for example in the config files or do I have to buy it to",
    "start": "1789500",
    "end": "1794840"
  },
  {
    "text": "this folder structure so in this case the for now the idea is that the file system is the one defined",
    "start": "1794840",
    "end": "1801440"
  },
  {
    "text": "in the URLs so that's the reason why we use the the brackets you can reuse the bracket not only with folders but you",
    "start": "1801440",
    "end": "1806840"
  },
  {
    "text": "can reuse also in in one file so the file name could be brackets with the identifier you can use also multiple",
    "start": "1806840",
    "end": "1813860"
  },
  {
    "text": "identifiers in the same file name you don't need to create for example if you need I know one parameter which is IV",
    "start": "1813860",
    "end": "1820580"
  },
  {
    "text": "slash or Dash another parameter like I know id2 you can get both in the same",
    "start": "1820580",
    "end": "1827179"
  },
  {
    "text": "file name you don't need to go with the folder structure that's just the way that we did for this example just to",
    "start": "1827179",
    "end": "1832700"
  },
  {
    "text": "follow that slash slash and slash with parameters but currently there is no way",
    "start": "1832700",
    "end": "1838760"
  },
  {
    "text": "to edit that in the in the configuration file for the workers because that relies completely on the on the file system",
    "start": "1838760",
    "end": "1846640"
  },
  {
    "text": "yeah all right what would you how would you describe the main struggle that",
    "start": "1851899",
    "end": "1857539"
  },
  {
    "text": "everybody's having for the adoption of a component module model for wasm what's stopping you or",
    "start": "1857539",
    "end": "1866480"
  },
  {
    "text": "not just you but everybody involved to achieve that",
    "start": "1866480",
    "end": "1872360"
  },
  {
    "text": "so I I didn't get it sorry okay sorry",
    "start": "1872360",
    "end": "1877580"
  },
  {
    "text": "what's the struggle that you're having or what's the struggle on an industry-wide basis for",
    "start": "1877580",
    "end": "1885020"
  },
  {
    "text": "the adoption of the component model so webassembly what's stopping you from",
    "start": "1885020",
    "end": "1892460"
  },
  {
    "text": "implementing this okay uh well Nothing is Stopping Us in the sense that you know this is this is",
    "start": "1892460",
    "end": "1898700"
  },
  {
    "text": "a work in progress so right now is like we have to figure out how would we integrate that but for us as the way I",
    "start": "1898700",
    "end": "1906140"
  },
  {
    "text": "see that is that with company knowledge you are able to reuse uh to reuse pieces of software in a way that you can",
    "start": "1906140",
    "end": "1912080"
  },
  {
    "text": "compose bigger programs and so you are able to config like you are able to put",
    "start": "1912080",
    "end": "1917539"
  },
  {
    "text": "pieces in the middle that are able to filter certain uh attributes for example uh when you're working with bigger",
    "start": "1917539",
    "end": "1924740"
  },
  {
    "text": "components of where you're when you're working with the final program let's say and so with the component model you are",
    "start": "1924740",
    "end": "1929840"
  },
  {
    "text": "able to you will be able to serve a function that contains several other components if you provide that and then",
    "start": "1929840",
    "end": "1937100"
  },
  {
    "text": "this components will filter will map certain attributes or certain calls of",
    "start": "1937100",
    "end": "1942440"
  },
  {
    "text": "these functions and in the end this this is a tool for developers so we want them to you know to get used to this software",
    "start": "1942440",
    "end": "1948500"
  },
  {
    "text": "and to start working with webassembly and get these people into webassembly and so the idea is that you know it will",
    "start": "1948500",
    "end": "1955460"
  },
  {
    "text": "be straightforward for them to try uh them out to try their software uh Within webassembly",
    "start": "1955460",
    "end": "1961039"
  },
  {
    "text": "so company model is another answer to that and we have to think about how we're going to integrate that",
    "start": "1961039",
    "end": "1967840"
  },
  {
    "text": "does that answer to any extent will you I mean it looks like there's a lot of controversy as far as how that adoption",
    "start": "1968000",
    "end": "1975200"
  },
  {
    "text": "is going to take place as far as the standardization goes Etc can you speak to that so so yeah so maybe replying",
    "start": "1975200",
    "end": "1982940"
  },
  {
    "text": "specifically to that Western worker server is also based on this uh this models that Rafa was",
    "start": "1982940",
    "end": "1990380"
  },
  {
    "text": "talking about before about for example the Ruby interpreters python interpreters that we are compiling we",
    "start": "1990380",
    "end": "1995419"
  },
  {
    "text": "want those to be as universal in terms of that everyone can take those models and run them to run for example Python",
    "start": "1995419",
    "end": "2002679"
  },
  {
    "text": "scripts or Ruby scripts and get information there those models actually are compiled in a",
    "start": "2002679",
    "end": "2009460"
  },
  {
    "text": "separate project so anyone can download them and reuse and but that's",
    "start": "2009460",
    "end": "2015539"
  },
  {
    "text": "we need to finish so that's that's one of the main reasons like since we want those those models to be compatible with",
    "start": "2016740",
    "end": "2023320"
  },
  {
    "text": "everyone and the component model is not it's not still implemented in the different runtimes we currently we're",
    "start": "2023320",
    "end": "2030100"
  },
  {
    "text": "still sticking to not using component model and the other reason is time that we need also time to better understand",
    "start": "2030100",
    "end": "2036460"
  },
  {
    "text": "what's integration with some worker server and how we can make it available while not compromising the compatibility",
    "start": "2036460",
    "end": "2042340"
  },
  {
    "text": "of the builds that we are doing for other projects so",
    "start": "2042340",
    "end": "2048820"
  },
  {
    "text": "thank you thank you very much [Applause]",
    "start": "2048820",
    "end": "2056899"
  }
]