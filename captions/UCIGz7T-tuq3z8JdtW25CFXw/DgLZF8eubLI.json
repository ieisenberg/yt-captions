[
  {
    "text": "[Music]",
    "start": "290",
    "end": "11679"
  },
  {
    "text": "hello um today we're going to be talking about how uh we made PHP extremely fast",
    "start": "11679",
    "end": "17279"
  },
  {
    "text": "we are going to be uh analyzing like what the strategies we did and how close we got to Native if any close so let's",
    "start": "17279",
    "end": "24760"
  },
  {
    "text": "start with uh who are we speaking today um here is setto here is my self here is",
    "start": "24760",
    "end": "31439"
  },
  {
    "text": "uh images generated by Chad GPT with the lastest latest trending uh uh Trend in",
    "start": "31439",
    "end": "37399"
  },
  {
    "text": "in X which is was making the images with gibly and um yeah we both work at wasmer",
    "start": "37399",
    "end": "43480"
  },
  {
    "text": "uh if any anyone of you don't know the name of wasmer actually cames from uh wasam and Docker so that just by itself",
    "start": "43480",
    "end": "50440"
  },
  {
    "text": "is hopefully very cool and um yeah we've been uh working on making things um",
    "start": "50440",
    "end": "55760"
  },
  {
    "text": "extremely fast so um to make W assembly be approach able and usable by a lot of",
    "start": "55760",
    "end": "62440"
  },
  {
    "text": "uh companies and and use cases we actually need to make it run almost as",
    "start": "62440",
    "end": "67640"
  },
  {
    "text": "at netive speeds because otherwise it's going to be not compelling for some of the use cases that we are working at at",
    "start": "67640",
    "end": "73680"
  },
  {
    "text": "wasmer so about one year ago we presented the first strategy which was",
    "start": "73680",
    "end": "78880"
  },
  {
    "text": "uh to make python faster and we got it working with a kind of like pre-compiler using nut we presented here one year ago",
    "start": "78880",
    "end": "86640"
  },
  {
    "text": "and TDR we made it like 3x faster it was was still about like 20% slower than",
    "start": "86640",
    "end": "91759"
  },
  {
    "text": "native but it was like notely faster especially like versus a norm normal",
    "start": "91759",
    "end": "97920"
  },
  {
    "text": "interpreter so after presenting this and about six months later we start working",
    "start": "97920",
    "end": "103399"
  },
  {
    "text": "on on wasmer edge which is basically a platform to run compute on on the edge",
    "start": "103399",
    "end": "108520"
  },
  {
    "text": "or on the clouds and uh we scale things automatically and so on so we want to bring more workloads into into the edge",
    "start": "108520",
    "end": "115920"
  },
  {
    "text": "and one of the most non sexy workloads is actually work press and uh probably",
    "start": "115920",
    "end": "121640"
  },
  {
    "text": "like not of all of us are attracting to PHP and so on but um the market is very huge actually like around uh I think 60%",
    "start": "121640",
    "end": "129840"
  },
  {
    "text": "or 55% of all the websites in the world are running through WordPress so it's incredibly a big use case and all the",
    "start": "129840",
    "end": "137000"
  },
  {
    "text": "hosting providers that exist on WordPress are actually like let's say not great so we think we can make a",
    "start": "137000",
    "end": "143080"
  },
  {
    "text": "difference here and we started to see if we could actually run WordPress at at dedge and and what will be the",
    "start": "143080",
    "end": "149519"
  },
  {
    "text": "consequence es of doing that if we run at proper speed or not so we started by",
    "start": "149519",
    "end": "155000"
  },
  {
    "text": "just trying WordPress and uh we started with our theault back end which uh was",
    "start": "155000",
    "end": "160599"
  },
  {
    "text": "screen lift and with a snle f I'm going to go in depth about why we use each of these things",
    "start": "160599",
    "end": "167200"
  },
  {
    "text": "and why each of these things are going to be needed but uh basically when we tried to get warpers uh working it was",
    "start": "167200",
    "end": "173959"
  },
  {
    "text": "taking a little bit to load and after a little bit of time basically like the we",
    "start": "173959",
    "end": "179959"
  },
  {
    "text": "side load more or less the loading time was around 600 milliseconds so this is",
    "start": "179959",
    "end": "185599"
  },
  {
    "text": "not ideal if you want to make use of uh WordPress in production uh this is about",
    "start": "185599",
    "end": "191440"
  },
  {
    "text": "like 10 to 11x slower than native so we cannot ship this to customers like",
    "start": "191440",
    "end": "196920"
  },
  {
    "text": "basically we ship that no one will use us so this was not a good enough strategy that we could do to actually",
    "start": "196920",
    "end": "203400"
  },
  {
    "text": "like ship on production we actually Shi this on production by the way but the the the speeds were not good so so we",
    "start": "203400",
    "end": "209959"
  },
  {
    "text": "wanted to prove them so why PHP was this slow first uh we start analyzing like",
    "start": "209959",
    "end": "215920"
  },
  {
    "text": "what were the all the reasons first is it didn't have op cache um second we use",
    "start": "215920",
    "end": "221599"
  },
  {
    "text": "screen lift and third we use a syn ify for long jump and set jump I'm going to",
    "start": "221599",
    "end": "226640"
  },
  {
    "text": "go in uh detail about like each of those so yeah we're going to see about uh each",
    "start": "226640",
    "end": "232280"
  },
  {
    "text": "of these uh cases like what we did and how we enabled it so let's start with opach opach for those that you don't",
    "start": "232280",
    "end": "240239"
  },
  {
    "text": "know about PHP is a strategy that PHP uses to cache all the parsing that it",
    "start": "240239",
    "end": "245599"
  },
  {
    "text": "does on the files and also it does improve a little bit the speed Times by doing small optimizations on that ASD",
    "start": "245599",
    "end": "253640"
  },
  {
    "text": "that it generates so when you just run the homepage of Wordpress there are 350",
    "start": "253640",
    "end": "259880"
  },
  {
    "text": "files that are being pared each time so that more or less is kind of what brings",
    "start": "259880",
    "end": "265880"
  },
  {
    "text": "a lot of like a Slowdown into into WordPress and there was one challenge that we Face here which is normally like",
    "start": "265880",
    "end": "272639"
  },
  {
    "text": "PHP modules are run by using theop and DLC basically our native modules that",
    "start": "272639",
    "end": "278280"
  },
  {
    "text": "like you can like uh integrate on the on the side so we have to embed it inside of the same PHP binary because right now",
    "start": "278280",
    "end": "285440"
  },
  {
    "text": "currently wasix uh doesn't support uh the open on DL team although we are working on that so that's going to be",
    "start": "285440",
    "end": "291639"
  },
  {
    "text": "actually pretty pretty cool to see super soon we have a prototype already so yeah basically enabling could be a huge win",
    "start": "291639",
    "end": "298600"
  },
  {
    "text": "so as you see or sloth is going a little bit faster um we've gone from 600",
    "start": "298600",
    "end": "304039"
  },
  {
    "text": "milliseconds to around 380 so uh on about 1.5 to 2x speed up so",
    "start": "304039",
    "end": "311919"
  },
  {
    "text": "that was a great nice win but we are still far from production we wanted to get into like way faster speeds and we",
    "start": "311919",
    "end": "320240"
  },
  {
    "text": "were still like about like 7x slower than they did so we look at the next strategy uh",
    "start": "320240",
    "end": "327000"
  },
  {
    "text": "can we use to compiler and I'm not sure you have used uh crane lift but for some",
    "start": "327000",
    "end": "333039"
  },
  {
    "text": "reason in the last years it actually have gotten slower on the runtime speed",
    "start": "333039",
    "end": "338199"
  },
  {
    "text": "I think they did a lot of refactors I mean the the team is pretty smart actually like we would find uh you could",
    "start": "338199",
    "end": "343479"
  },
  {
    "text": "probably like chat with them in this conference a lot of them are are here um but basically like lbm has actually a",
    "start": "343479",
    "end": "350759"
  },
  {
    "text": "lot of optimizations that we can that we can use that are not available in cran lift this um basically makes lbm way",
    "start": "350759",
    "end": "360120"
  },
  {
    "text": "faster on 13 workloads than cran lifs so how faster more or less 2.5 to 3x speed up",
    "start": "360120",
    "end": "367560"
  },
  {
    "text": "um this by the way I'm going to demonstrate everything or we are going to demonstrate everything with demos so",
    "start": "367560",
    "end": "373400"
  },
  {
    "text": "you can actually run this yourself on your laptops if you have wasmer installed by the way the timings on",
    "start": "373400",
    "end": "378440"
  },
  {
    "text": "wasmer CR lift and wasm time cran lift wasmer is a tiny bit smaller H smaller faster um but basically like it's uh",
    "start": "378440",
    "end": "385440"
  },
  {
    "text": "they they are on par so it's not it's not that wasmer is emitting weird cran lift are is more about like CR lift",
    "start": "385440",
    "end": "391479"
  },
  {
    "text": "optimizations and so on so by using lbm we got much nicer speeds and the last",
    "start": "391479",
    "end": "397120"
  },
  {
    "text": "one is that we are using a syn5 for long jump and set jump so let's start with",
    "start": "397120",
    "end": "402160"
  },
  {
    "text": "what the is a syn5 uh I'm just going to ask the question because I'm curious have any of you heard of a Sy",
    "start": "402160",
    "end": "408120"
  },
  {
    "text": "aify before okay more or less one third of the room uh to a half so aify in the",
    "start": "408120",
    "end": "415720"
  },
  {
    "text": "natural brings pause and resume to W assembly workload why this is useful because when you do",
    "start": "415720",
    "end": "422599"
  },
  {
    "text": "long jump and set jump basically what you're are doing is you're telling to the runtime to stop the program at that",
    "start": "422599",
    "end": "429479"
  },
  {
    "text": "moment or to save a checkpoint of where the program is at that moment and then",
    "start": "429479",
    "end": "434680"
  },
  {
    "text": "you might want to recover the program from that exact spot some moments later maybe one second later 5 seconds later",
    "start": "434680",
    "end": "441120"
  },
  {
    "text": "or whatever and basically a single file transforms your wembly code so so",
    "start": "441120",
    "end": "446879"
  },
  {
    "text": "it introduced a lot of like checkpoints into into your code and uh make it possible to then like",
    "start": "446879",
    "end": "452120"
  },
  {
    "text": "save the state and restore your program from the same state uh that it was running before so that's how we were",
    "start": "452120",
    "end": "457199"
  },
  {
    "text": "running long jump or how we were enabling like long jump and set jump this is not the strategy that we started",
    "start": "457199",
    "end": "462800"
  },
  {
    "text": "actually like this strategy was created by Ruby about Ruby into W assembly about",
    "start": "462800",
    "end": "468199"
  },
  {
    "text": "two to three years ago so yeah we were using that it was great and basically like after you run a sfy on a wembly",
    "start": "468199",
    "end": "475159"
  },
  {
    "text": "module you will get an output towm that is more or less uh about 1.5 times",
    "start": "475159",
    "end": "481039"
  },
  {
    "text": "bigger and the downside is two times slower so yeah we were like can what can",
    "start": "481039",
    "end": "488479"
  },
  {
    "text": "we do to actually like uh get into more reasonable speeds um and the answer was",
    "start": "488479",
    "end": "495479"
  },
  {
    "text": "use W assembly exceptions uh W assembly exceptions prevented us to um to use a",
    "start": "495479",
    "end": "503240"
  },
  {
    "text": "singy and it allow us to use long jump and set jump through we exceptions and",
    "start": "503240",
    "end": "508800"
  },
  {
    "text": "uh as said is going to present in just uh one slide or two um basically like uh",
    "start": "508800",
    "end": "514240"
  },
  {
    "text": "we are going to see how they had like T cost and so on so by having W assembly",
    "start": "514240",
    "end": "519518"
  },
  {
    "text": "exceptions we bring down uh the time about like 2x so we ended with a 60",
    "start": "519519",
    "end": "525480"
  },
  {
    "text": "millisecond um time of response for WordPress which is quite fast here we",
    "start": "525480",
    "end": "531440"
  },
  {
    "text": "can see our sloth now is in a Ferrari very very happy about like this this New Path and uh right now to go in a little",
    "start": "531440",
    "end": "539440"
  },
  {
    "text": "a little bit more depth of what exceptions now whether is going to present yeah hello hi again and in this",
    "start": "539440",
    "end": "546480"
  },
  {
    "text": "part of the talk I'll try to give a an introduction to how WM exception work uh",
    "start": "546480",
    "end": "553519"
  },
  {
    "text": "it will not be an really in depth because it will take a day to explain it",
    "start": "553519",
    "end": "559360"
  },
  {
    "text": "exactly I I didn't even understand it fully as of now but so the proposal itself comes in",
    "start": "559360",
    "end": "566040"
  },
  {
    "text": "two flavors one is the Legacy one and the new one is the X and ref uh flavor",
    "start": "566040",
    "end": "571760"
  },
  {
    "text": "and we implemented this last one uh in nature it resembles the behavior of C++",
    "start": "571760",
    "end": "577440"
  },
  {
    "text": "the way uh cop plus exception uh work and uh in practice it adds two new types",
    "start": "577440",
    "end": "584800"
  },
  {
    "text": "tag and x and ref and the number of control flow instructions to throw in catch instru uh exceptions as you can",
    "start": "584800",
    "end": "591760"
  },
  {
    "text": "see here uh although some of these uh",
    "start": "591760",
    "end": "596839"
  },
  {
    "text": "embedders we can see in the web.org features uh website and the page it's",
    "start": "596839",
    "end": "602079"
  },
  {
    "text": "not it's getting momentum but it's not that widely adopted and three out of the",
    "start": "602079",
    "end": "607880"
  },
  {
    "text": "five that implemented are based on V8 so only V8 has it as of now and who has to",
    "start": "607880",
    "end": "613680"
  },
  {
    "text": "see and Safari um so let's start slow in the beginning there was the module after",
    "start": "613680",
    "end": "620560"
  },
  {
    "text": "the module came the tag and the tag pretty much uh is a way to um",
    "start": "620560",
    "end": "627240"
  },
  {
    "text": "uh represent an event that will happen in the cod as of now TXS can only",
    "start": "627240",
    "end": "632680"
  },
  {
    "text": "represent exceptions but in the future the plan is that of having TXS represent other kind of events after the tag came",
    "start": "632680",
    "end": "639480"
  },
  {
    "text": "the function that throws and in this simple function it just gets takes a",
    "start": "639480",
    "end": "644560"
  },
  {
    "text": "parameter checks if the parameters is uh equal to zero if it is then you're out",
    "start": "644560",
    "end": "650560"
  },
  {
    "text": "uh we throw an exception and if if it's not then does nothing and then we have a",
    "start": "650560",
    "end": "657600"
  },
  {
    "text": "function that calls takes a parameter calls this function and tries to to catch the exception that should might be",
    "start": "657600",
    "end": "664639"
  },
  {
    "text": "thrown by the check nonzero function uh so what are the semantics of this uh",
    "start": "664639",
    "end": "670720"
  },
  {
    "text": "statement of this function uh when we get into the block we see the TR table uh and catch all is",
    "start": "670720",
    "end": "678160"
  },
  {
    "text": "pretty much a statement that says whatever exception you might see being",
    "start": "678160",
    "end": "684680"
  },
  {
    "text": "thrown you catch it and you U return to execution after the Block H",
    "start": "684680",
    "end": "691000"
  },
  {
    "text": "so if we catch a uh an exception execution will will start back let's see if the pointer works yeah uh here after",
    "start": "691000",
    "end": "699320"
  },
  {
    "text": "this block it will return it will return basically return one if we catch an exception return zero if no exception is",
    "start": "699320",
    "end": "705200"
  },
  {
    "text": "being caught and this pretty much translates roughly to this C++ code you",
    "start": "705200",
    "end": "711320"
  },
  {
    "text": "can see uh where is it okay you call this function this function if the value",
    "start": "711320",
    "end": "716839"
  },
  {
    "text": "is zero you throw the exception you catch exception return one no exception was caught you return zero and this is",
    "start": "716839",
    "end": "723680"
  },
  {
    "text": "pretty much it and let's get a bit more enter the depth of how it works uh it is",
    "start": "723680",
    "end": "730800"
  },
  {
    "text": "a zero cost abstraction this flavor of exception handling in the sense that if",
    "start": "730800",
    "end": "736120"
  },
  {
    "text": "the function you have um do not throw an exception you don't pay a of hat uh to",
    "start": "736120",
    "end": "742440"
  },
  {
    "text": "have them in your own time or in the object file so uh yeah if you don't throw exception you don't see any any uh",
    "start": "742440",
    "end": "749920"
  },
  {
    "text": "you don't pay any cost during execution uh it is based on the same",
    "start": "749920",
    "end": "755000"
  },
  {
    "text": "structure that wolf uses that is it B is based on sections embedded in the object",
    "start": "755000",
    "end": "760959"
  },
  {
    "text": "file and uh as C++ like a such handle mechanism work uh you need a cooperation",
    "start": "760959",
    "end": "769760"
  },
  {
    "text": "between the runtime the object format that you you emit compiled functions in",
    "start": "769760",
    "end": "776040"
  },
  {
    "text": "and libraries such as Lian wind so how does it actually work it's just a",
    "start": "776040",
    "end": "783639"
  },
  {
    "text": "couple step not nothing crazy it is indeed a bit of an obscure corner of run",
    "start": "783639",
    "end": "790000"
  },
  {
    "text": "times and shout out to Nik Bowski whose blog post pretty much form the only",
    "start": "790000",
    "end": "796120"
  },
  {
    "text": "introductory material for runtime embeds to uh to implement exception handling",
    "start": "796120",
    "end": "802199"
  },
  {
    "text": "and yeah in short just one or two points you have a function that I do yes I",
    "start": "802199",
    "end": "809519"
  },
  {
    "text": "compile the function into an object this already arguable this object file has an eh",
    "start": "809519",
    "end": "815480"
  },
  {
    "text": "frame I set three points why there is so much white left in this light uh the",
    "start": "815480",
    "end": "821000"
  },
  {
    "text": "frame section shall contain one or more cframe information records okay uh how",
    "start": "821000",
    "end": "827440"
  },
  {
    "text": "many bullets how many bullets oh no oh no oh no ah nah too long too long ah",
    "start": "827440",
    "end": "836759"
  },
  {
    "text": "no well you see the joke again okay so let's start from the other way",
    "start": "836759",
    "end": "842560"
  },
  {
    "text": "around and of course take it with a not a pinch of salt but it will Bear worth of salt uh so you execute your code you",
    "start": "842560",
    "end": "852160"
  },
  {
    "text": "throw an exception at some program counter let's say PC and the run time",
    "start": "852160",
    "end": "858279"
  },
  {
    "text": "creates an exception object let's call it e and it encodes the type of the exception and the domain the exception",
    "start": "858279",
    "end": "864040"
  },
  {
    "text": "belongs to so for example if uh you embed a C++ um uh function that throws U",
    "start": "864040",
    "end": "870639"
  },
  {
    "text": "an exception in a rust code base through ffi rust knows that the",
    "start": "870639",
    "end": "877800"
  },
  {
    "text": "exception thrown by C++ is not a rust exception so it know it's a foreign exception and Treats in a different",
    "start": "877800",
    "end": "882920"
  },
  {
    "text": "Manner and yeah so durun time then calls liban wind and liban wind does all the",
    "start": "882920",
    "end": "888199"
  },
  {
    "text": "magic for us to look at the stack and see uh in the object file you have uh",
    "start": "888199",
    "end": "894079"
  },
  {
    "text": "sections that map uh program counters to catch blocks roughly and and libon wi",
    "start": "894079",
    "end": "899920"
  },
  {
    "text": "pretty much tries to see if the function DPC belongs to has a special function",
    "start": "899920",
    "end": "905560"
  },
  {
    "text": "which is called the personality function cause dysfunction and dysfunctions try",
    "start": "905560",
    "end": "911720"
  },
  {
    "text": "to uh give uh to liban wind a way to figure out uh where to restore execution",
    "start": "911720",
    "end": "918279"
  },
  {
    "text": "from basically just tries to find the catch block that belongs to the exception if you uh find if lion wind or",
    "start": "918279",
    "end": "925440"
  },
  {
    "text": "the personality function together can find the catch block then your all set and execution can be restored you need",
    "start": "925440",
    "end": "931920"
  },
  {
    "text": "to manually uh install the context and restore the contents of the registers before you can actually return back to",
    "start": "931920",
    "end": "939399"
  },
  {
    "text": "uh the catch block uh yeah you install the context and if you don't find a",
    "start": "939399",
    "end": "944480"
  },
  {
    "text": "catch block uh control returns to libon wind we gets which gets to the uh parent",
    "start": "944480",
    "end": "950519"
  },
  {
    "text": "function of the current function and tries to repeat the process of course this means that uh you need to well",
    "start": "950519",
    "end": "957639"
  },
  {
    "text": "unwind the stack and if you don't find uh any function that can handle this exception you're out of luck and lion",
    "start": "957639",
    "end": "963399"
  },
  {
    "text": "wine will be glad to inform you that uh well there's something wrong no one called exception and so now we perfectly",
    "start": "963399",
    "end": "971759"
  },
  {
    "text": "understood how it works uh and how this is from the theoretical side of uh",
    "start": "971759",
    "end": "978440"
  },
  {
    "text": "things uh now in practice we need a runtime that actually supports eh backed",
    "start": "978440",
    "end": "984880"
  },
  {
    "text": "uh um exception handling um so the steps",
    "start": "984880",
    "end": "990240"
  },
  {
    "text": "towards that are to implement eh packed set jump and lock jump in W Li Z which",
    "start": "990240",
    "end": "996880"
  },
  {
    "text": "by the way just uses an intrinsic function lvm uh which is wasm set jump and wasm",
    "start": "996880",
    "end": "1003959"
  },
  {
    "text": "long jump I think if I remember correctly then we compile PHP targeting this was e clipsy and we just have to",
    "start": "1003959",
    "end": "1010160"
  },
  {
    "text": "find the run time which we can use that supports uh the XM ref proposal and V8",
    "start": "1010160",
    "end": "1016680"
  },
  {
    "text": "does indeed support it and wmer Sports V8 so you can see here in this figure uh",
    "start": "1016680",
    "end": "1023000"
  },
  {
    "text": "is we have this U anecdotal so to speak does not does not really have a",
    "start": "1023000",
    "end": "1028959"
  },
  {
    "text": "statistical balance but it's just a rule of thumb of um the execution speed and you can see uh here where is it this is",
    "start": "1028959",
    "end": "1038199"
  },
  {
    "text": "this Benchmark run with V8 with normal non backed PHP you can see it's almost",
    "start": "1038199",
    "end": "1043319"
  },
  {
    "text": "6.7 seconds and with exception handling it is 4.7 which is already",
    "start": "1043319",
    "end": "1049480"
  },
  {
    "text": "great uh but yeah we had the support for V8 and reception handling WesMer but can",
    "start": "1049480",
    "end": "1055080"
  },
  {
    "text": "we actually make it even faster and here comes lvm we not only have V8 of course",
    "start": "1055080",
    "end": "1061520"
  },
  {
    "text": "we also have um a bean based on lvm and roughly the idea is that we get the web",
    "start": "1061520",
    "end": "1067120"
  },
  {
    "text": "assembly which is from to lvm and then we compile it to Native uh apply the relocations mark decode as executable",
    "start": "1067120",
    "end": "1074559"
  },
  {
    "text": "and all of that nlvm has this Nifty uh Landing Pad intrinsic which which is used exactly to represent C++ style",
    "start": "1074559",
    "end": "1081000"
  },
  {
    "text": "exception handling and we map uh the operations from the WM side to",
    "start": "1081000",
    "end": "1086960"
  },
  {
    "text": "operations to the lvm side and we only have to create in chain six in the VM",
    "start": "1086960",
    "end": "1093240"
  },
  {
    "text": "wasmer in the runtime itself to allocate destroy throw and rethrow exceptions we must create our very own uh wmer",
    "start": "1093240",
    "end": "1100799"
  },
  {
    "text": "personality personality function we Mark each lvm function we generate with that",
    "start": "1100799",
    "end": "1105919"
  },
  {
    "text": "personality function and yeah profit and I guess it's now time for the live demo",
    "start": "1105919",
    "end": "1112880"
  },
  {
    "text": "I shall only run use arrows and enter so",
    "start": "1112880",
    "end": "1118840"
  },
  {
    "text": "nothing can go wrong right uh let's start with where we",
    "start": "1118840",
    "end": "1123919"
  },
  {
    "text": "started from",
    "start": "1123919",
    "end": "1129200"
  },
  {
    "text": "oh here we go so these were the numbers we were seeing with cran lift before",
    "start": "1131080",
    "end": "1136200"
  },
  {
    "text": "this whole endeavor okay let's",
    "start": "1136200",
    "end": "1143440"
  },
  {
    "text": "go good but not great let's we do we have lvm without eh uh I",
    "start": "1151600",
    "end": "1160240"
  },
  {
    "text": "don't think so so let's just cut straight to the Chase and lvm with",
    "start": "1160240",
    "end": "1165440"
  },
  {
    "text": "EH and yeah I guess that's it native oh yeah native we are not",
    "start": "1165440",
    "end": "1172760"
  },
  {
    "text": "actually done yet in the sense that we are close but not exactly as",
    "start": "1172760",
    "end": "1180720"
  },
  {
    "text": "fast as native but still with where we started from I think these are great",
    "start": "1180720",
    "end": "1186640"
  },
  {
    "text": "numbers of course again these are I don't think they really have a statistical balance in s that we then",
    "start": "1186640",
    "end": "1192799"
  },
  {
    "text": "have to see how it behaves actually in production but uh really for a rule of thumb measurement this is already great",
    "start": "1192799",
    "end": "1199400"
  },
  {
    "text": "numbers and yeah back to you",
    "start": "1199400",
    "end": "1204600"
  },
  {
    "text": "Sirus cool so as we can see or we have seen uh with lbm uh wasmer was able to",
    "start": "1209240",
    "end": "1216320"
  },
  {
    "text": "run PHP just about 15% slower than native which is quite good we can uh by",
    "start": "1216320",
    "end": "1222039"
  },
  {
    "text": "the way we are still experimenting with a few things that we believe is going to bring us way closer to Native and maybe",
    "start": "1222039",
    "end": "1227240"
  },
  {
    "text": "in some cases even faster which is fun to see um but yeah we are still we still have work to do but we are getting much",
    "start": "1227240",
    "end": "1234200"
  },
  {
    "text": "much closer to where we want it to be so now that we get the runtime fast and",
    "start": "1234200",
    "end": "1240080"
  },
  {
    "text": "then we realize that boot time was slow and why boot time were slow uh because",
    "start": "1240080",
    "end": "1245480"
  },
  {
    "text": "WordPress actually like pares 350 files at the startup um these even when you op",
    "start": "1245480",
    "end": "1252919"
  },
  {
    "text": "cash there are still some operations that you need to do and there is a lot of initialization system calls that uh",
    "start": "1252919",
    "end": "1258360"
  },
  {
    "text": "work press needs to do in order to render the homepage so we were seeing",
    "start": "1258360",
    "end": "1263919"
  },
  {
    "text": "about 1.2 seconds of call starts this is by the way this is just WordPress take",
    "start": "1263919",
    "end": "1269880"
  },
  {
    "text": "don't take on account any wer whatsoever so if you try to run WordPress on go Cloud if you try to run it on flight o",
    "start": "1269880",
    "end": "1276640"
  },
  {
    "text": "Dio if you try to run it basically anywhere you're going to have this called start times what's the issue we",
    "start": "1276640",
    "end": "1283279"
  },
  {
    "text": "are an edge provider we cannot afford 1.2 seconds called the starts if we have",
    "start": "1283279",
    "end": "1288320"
  },
  {
    "text": "that that means that we can never shut down your website which means that you can never save money the money that we",
    "start": "1288320",
    "end": "1294120"
  },
  {
    "text": "are aiming to save by using the edge right so we are presented about a few",
    "start": "1294120",
    "end": "1300440"
  },
  {
    "text": "months ago uh instabut and with that we are close to bringing the cold start",
    "start": "1300440",
    "end": "1306400"
  },
  {
    "text": "times to zero so basically how instabut works is we have snapshot the whole",
    "start": "1306400",
    "end": "1312679"
  },
  {
    "text": "state of the web assembly application uh into a journal This Journal has all the",
    "start": "1312679",
    "end": "1320039"
  },
  {
    "text": "state of uh system calls that are executed when uh when uh before prior",
    "start": "1320039",
    "end": "1325279"
  },
  {
    "text": "doing the the snapshot which basically let us recover the program exactly at the same state even if it open the so",
    "start": "1325279",
    "end": "1331760"
  },
  {
    "text": "even if it open a file or whatever we recover the program at exactly the same point not sure if you have used doer",
    "start": "1331760",
    "end": "1338240"
  },
  {
    "text": "snapshots before so it's something very similar but way more optimized and performant why because in doer you need",
    "start": "1338240",
    "end": "1344000"
  },
  {
    "text": "to snapshot the whole memory even if it's not used because the allocation is not linear so that's one of the",
    "start": "1344000",
    "end": "1350480"
  },
  {
    "text": "uniqueness things that we can do in wob assembly that could be not done before so thanks to all that we achieved about",
    "start": "1350480",
    "end": "1358400"
  },
  {
    "text": "uh 90 milliseconds cold starts uh here you have the QR code if you want to read more about that this will link to the",
    "start": "1358400",
    "end": "1365000"
  },
  {
    "text": "blog post on how we make this possible we don't have a lot of time so I I just cannot go in depth so I want to finish",
    "start": "1365000",
    "end": "1372799"
  },
  {
    "text": "just by how everything was plugged into production and how everything works in wasmer so",
    "start": "1372799",
    "end": "1379320"
  },
  {
    "text": "by the way you can uh deploy WordPress from your phone here is one example of deploying a WordPress page just from",
    "start": "1379320",
    "end": "1385279"
  },
  {
    "text": "wasart um you will see here basically like what are all the things that are happening by the way we are running jobs",
    "start": "1385279",
    "end": "1392679"
  },
  {
    "text": "using the W CLI which is like normal to use on WordPress we are using bash for",
    "start": "1392679",
    "end": "1398200"
  },
  {
    "text": "actually executing the scripts so basically wasmer you can run everything that you would need to run on the normal",
    "start": "1398200",
    "end": "1404480"
  },
  {
    "text": "cloud provider but now you can run it on the edge performant and and so on so",
    "start": "1404480",
    "end": "1410000"
  },
  {
    "text": "basically after around like 20 seconds um we have the website live screenshot takes a tiny bit to generate we are",
    "start": "1410000",
    "end": "1416559"
  },
  {
    "text": "optimizing this but uh here you can see the WordPress site is live and yeah this",
    "start": "1416559",
    "end": "1421760"
  },
  {
    "text": "is how long it takes to actually deploy a website and what's a cool fact everything that we presented today is",
    "start": "1421760",
    "end": "1427720"
  },
  {
    "text": "now actually using production so right now you will have the very fast uh startup times you will have the very by",
    "start": "1427720",
    "end": "1435360"
  },
  {
    "text": "the way very fast startup times and thisbut is part of the pro pro promote for wasmer so but you will have like",
    "start": "1435360",
    "end": "1441520"
  },
  {
    "text": "very fast run time and fast startup times if you need so so that means that you can have your WordPress site like",
    "start": "1441520",
    "end": "1447400"
  },
  {
    "text": "live for the whole month and pay only like when when it's accessed so that means like you don't need to to actually",
    "start": "1447400",
    "end": "1453039"
  },
  {
    "text": "pay for the whole month maybe if your website is having 10 10 visits or 100 or thousand per month like basically like",
    "start": "1453039",
    "end": "1460159"
  },
  {
    "text": "you can actually use the free service so yeah I put the QR code if anyone wants to try it you can do it from your phone",
    "start": "1460159",
    "end": "1465720"
  },
  {
    "text": "as well so yeah that's uh that's it about the presentation here you can find",
    "start": "1465720",
    "end": "1470760"
  },
  {
    "text": "our handles uh Edo doesn't have any handle on X or Twitter or however you want to name it so you want chat right",
    "start": "1470760",
    "end": "1477399"
  },
  {
    "text": "now probably is the best the best time and yeah hopefully you have enjoyed our our talk today thank",
    "start": "1477399",
    "end": "1485760"
  },
  {
    "text": "you we do you have time for questions yeah any any",
    "start": "1487760",
    "end": "1493799"
  },
  {
    "text": "questions what's the difference between insta boot inot inot Wier wiser so so",
    "start": "1493799",
    "end": "1503279"
  },
  {
    "text": "basically wiser snapshots the states just prior executing the main function the start function so it's a snapshot",
    "start": "1503279",
    "end": "1510480"
  },
  {
    "text": "just before executing the start so that means like if you open the socket or do things before start up which by the way",
    "start": "1510480",
    "end": "1516960"
  },
  {
    "text": "this is super normal in Python this super normal in in uh in PHP so for",
    "start": "1516960",
    "end": "1522640"
  },
  {
    "text": "example in PHP you want to open a server like after executing the main function you want to open a server you want to ex",
    "start": "1522640",
    "end": "1528360"
  },
  {
    "text": "execute some request to warm up your snapshot in wiser you cannot do that um",
    "start": "1528360",
    "end": "1534200"
  },
  {
    "text": "so basically wiser only snapshot the memory and and basically like what's the layout kind of like yeah what's the",
    "start": "1534200",
    "end": "1540840"
  },
  {
    "text": "layout of the W program PRI snapshotting in the case of wasmer it goes one step further and it snapshot the system calls",
    "start": "1540840",
    "end": "1547600"
  },
  {
    "text": "that have happened before the the snapshotting so that means that you can recover your pram in the middle of the",
    "start": "1547600",
    "end": "1554399"
  },
  {
    "text": "pram running while wiser is only at the beginning if that makes sense",
    "start": "1554399",
    "end": "1560240"
  },
  {
    "text": "mention snap earlier I",
    "start": "1561600",
    "end": "1566640"
  },
  {
    "text": "asse are no no we are we are not yeah we are",
    "start": "1568600",
    "end": "1573919"
  },
  {
    "text": "not actually using uh we Linux snapshotting other thing that is kind",
    "start": "1573919",
    "end": "1579399"
  },
  {
    "text": "like important to know is wiser actually generates a new W assembly file so and",
    "start": "1579399",
    "end": "1585440"
  },
  {
    "text": "and uh this might actually like make the file a little bit bigger because the data needs to be shifted in the case of",
    "start": "1585440",
    "end": "1592240"
  },
  {
    "text": "wasmer uh Institute we generate a journal file with a",
    "start": "1592240",
    "end": "1598279"
  },
  {
    "text": "snapshot so so you don't we we are not modifying the W assembly file in the case of Wier is is doing",
    "start": "1598279",
    "end": "1604279"
  },
  {
    "text": "that",
    "start": "1604279",
    "end": "1607279"
  },
  {
    "text": "yeah the Legacy the so-called Legacy I don't know why it's called Legacy was the only name I mean if you even look at",
    "start": "1614640",
    "end": "1621640"
  },
  {
    "text": "the uh proposal itself the old non-x ref one is under the folder Legacy so I'm",
    "start": "1621640",
    "end": "1628360"
  },
  {
    "text": "not sure how uh used it is in practice but I guess the objective was to",
    "start": "1628360",
    "end": "1636520"
  },
  {
    "text": "um it was so to start with it was just a choice we had to decide between one and the other and we knew that V8 for",
    "start": "1636520",
    "end": "1644120"
  },
  {
    "text": "example had both it supports both and we uh I we just thought that X Andre was gting",
    "start": "1644120",
    "end": "1651360"
  },
  {
    "text": "a bit more momentum and was actually the way that the proposal is to actually be",
    "start": "1651360",
    "end": "1657200"
  },
  {
    "text": "accepted and implemented in The Wider uh space of web assembly in general I mean what I mean is I'm not sure if the",
    "start": "1657200",
    "end": "1663320"
  },
  {
    "text": "Legacy uh implementation will actually be implemented by any other new runtime",
    "start": "1663320",
    "end": "1669240"
  },
  {
    "text": "will it be implemented will go ahead I",
    "start": "1669240",
    "end": "1675080"
  },
  {
    "text": "assume it's available in I would",
    "start": "1675080",
    "end": "1680519"
  },
  {
    "text": "assume I think that the I don't think there is a difference",
    "start": "1685039",
    "end": "1691519"
  },
  {
    "text": "between how lvm in the end have the pipeline thinks about X and ref and",
    "start": "1691519",
    "end": "1696559"
  },
  {
    "text": "Legacy in the sense that it has it only has landing pads for what it's worth what concerns lvm uh I think that the",
    "start": "1696559",
    "end": "1704080"
  },
  {
    "text": "xon ref I'm glad to stand corrected is actually the evolution of the legacy is",
    "start": "1704080",
    "end": "1709320"
  },
  {
    "text": "the new way uh the the new proposal that the Legacy mechanism is to be implemented so yeah that's it I guess",
    "start": "1709320",
    "end": "1717039"
  },
  {
    "text": "yeah in in a natural basically like uh we future future proof wasmer otherwise",
    "start": "1717039",
    "end": "1723480"
  },
  {
    "text": "basically like we'll need to reimplement it twice one for Legacy and the other for for the new one so at the end it was",
    "start": "1723480",
    "end": "1729000"
  },
  {
    "text": "like we want to save time and uh we already could proy failure I think there",
    "start": "1729000",
    "end": "1734159"
  },
  {
    "text": "was another question thank you foration two questions",
    "start": "1734159",
    "end": "1740240"
  },
  {
    "text": "in could you please talk a little bit what state goes into so you",
    "start": "1740240",
    "end": "1747240"
  },
  {
    "text": "have it all SN and now the question",
    "start": "1753799",
    "end": "1759039"
  },
  {
    "text": "is what point snapshot can be taken like when uh when a call to complet",
    "start": "1759039",
    "end": "1769120"
  },
  {
    "text": "so uh basically the first the first question was uh about um can you repeat",
    "start": "1769120",
    "end": "1775760"
  },
  {
    "text": "the first one what kind of save goes into the okay so basically we save everything uh we save the globals we",
    "start": "1775760",
    "end": "1781720"
  },
  {
    "text": "save the data we save the system calls that happened we save literally everything it makes things a little bit",
    "start": "1781720",
    "end": "1787799"
  },
  {
    "text": "challenging because for example when you want to open the socket the the operating system might not will not give",
    "start": "1787799",
    "end": "1793760"
  },
  {
    "text": "you the same FD that you're using so it makes things snapshotting we are using other Technologies to actually like",
    "start": "1793760",
    "end": "1800399"
  },
  {
    "text": "compact the journal uh what we call like the snapshot um to be able to let's say",
    "start": "1800399",
    "end": "1806120"
  },
  {
    "text": "like you write multip multiple times into a file and and this can be compacted then we'll compact it so to",
    "start": "1806120",
    "end": "1812480"
  },
  {
    "text": "make it only one call so we are doing certain things as small to try to accelerate uh the snapshotting when we",
    "start": "1812480",
    "end": "1818399"
  },
  {
    "text": "recover from it uh but in general we save the whole state and regarding the second question which is where where can",
    "start": "1818399",
    "end": "1824679"
  },
  {
    "text": "you a snapshot the question the answer is anywhere anywhere ER there is only one catch the",
    "start": "1824679",
    "end": "1832640"
  },
  {
    "text": "catch is right now for snapshotting to work universally we actually are doing that",
    "start": "1832640",
    "end": "1839080"
  },
  {
    "text": "specific part through a S5 the main reason for this is because um even though like it only slow down certain",
    "start": "1839080",
    "end": "1845559"
  },
  {
    "text": "parts of the code not the whole just kind like when when we snapshot and so on um it makes it usable on the browsers",
    "start": "1845559",
    "end": "1852080"
  },
  {
    "text": "and on the servers on exactly the same way there is a way to actually make this super fast extremely fast natively but",
    "start": "1852080",
    "end": "1858360"
  },
  {
    "text": "we could not assure the same thing on the browser So currently like we are using aify to make it uh Universal but",
    "start": "1858360",
    "end": "1865840"
  },
  {
    "text": "uh the truth is this can be actually done extremely performant without the 2x slowdown from a singy using lbm stack",
    "start": "1865840",
    "end": "1872880"
  },
  {
    "text": "points so basically like based on that you could just you have your pram exu in you can save the state at any moment you",
    "start": "1872880",
    "end": "1879320"
  },
  {
    "text": "can save it actually multiple times if you want and then the pr will recover exactly at the same point inside of a",
    "start": "1879320",
    "end": "1885960"
  },
  {
    "text": "loop function if you want like basically like just",
    "start": "1885960",
    "end": "1890398"
  },
  {
    "text": "anywhere apply so you have slower after Sy app you have slower you have larer",
    "start": "1895120",
    "end": "1902919"
  },
  {
    "text": "binary also I think has number of issues like if your function",
    "start": "1902919",
    "end": "1909000"
  },
  {
    "text": "some tyes work if you it doesn't support",
    "start": "1909000",
    "end": "1915039"
  },
  {
    "text": "uh like inside C of exceptions yeah the the go",
    "start": "1915039",
    "end": "1923120"
  },
  {
    "text": "the go side is right now unless you want to make it work within direct calls the cool thing is actually like you know",
    "start": "1923120",
    "end": "1928880"
  },
  {
    "text": "what functions are going to be a snapshotting so actually you only pay the overhead on those functions that",
    "start": "1928880",
    "end": "1934120"
  },
  {
    "text": "might be calling the snapshot so that means that like actually you can get this run extremely performant why",
    "start": "1934120",
    "end": "1940000"
  },
  {
    "text": "because normally like you want the snapshots to happen on the main on happen on on a certain part that you",
    "start": "1940000",
    "end": "1946440"
  },
  {
    "text": "know actually like when it's going to happen like more or less at compile time so it's uh it's at the end like you",
    "start": "1946440",
    "end": "1953360"
  },
  {
    "text": "don't pay as much as you were paying when I syn ifying the whole module and everything needs to syn fied you still",
    "start": "1953360",
    "end": "1959519"
  },
  {
    "text": "pay some price so for example we are doing that when when we are H foring the process on on bmer and the main reason",
    "start": "1959519",
    "end": "1967279"
  },
  {
    "text": "for this is there is no more performant way of doing this on the browser uh but",
    "start": "1967279",
    "end": "1972440"
  },
  {
    "text": "either way actually like on the server when we are on on control of our own compiler and the code that we meet we",
    "start": "1972440",
    "end": "1978080"
  },
  {
    "text": "can actually like just be extremely performant there uh we have not just uh walked that path yet but yeah could be",
    "start": "1978080",
    "end": "1984159"
  },
  {
    "text": "possible you're",
    "start": "1984159",
    "end": "1987360"
  },
  {
    "text": "welcome fun fact for H Clank we actually got Clank compiler running on the browser about four months AG I don't",
    "start": "2003679",
    "end": "2010799"
  },
  {
    "text": "know four months ago and uh actually we are using that strategy because lbm was",
    "start": "2010799",
    "end": "2017080"
  },
  {
    "text": "huge it's like I don't know like 15 megabytes or no no was 90 I I don't know was was very big so basically like uh I",
    "start": "2017080",
    "end": "2023960"
  },
  {
    "text": "think if I had a module that big actually makes sometimes a crash so so",
    "start": "2023960",
    "end": "2029360"
  },
  {
    "text": "we actually have to make that strategy on like just asyfi this certain path but not the whole and we have like two",
    "start": "2029360",
    "end": "2035559"
  },
  {
    "text": "clanks one is the asyn ified one and the that is not signified because Clank just",
    "start": "2035559",
    "end": "2040760"
  },
  {
    "text": "kind like forus the process and calls them",
    "start": "2040760",
    "end": "2045720"
  },
  {
    "text": "itself any other questions cool perfect thank you thank",
    "start": "2046760",
    "end": "2053118"
  },
  {
    "text": "you very much thank you",
    "start": "2053119",
    "end": "2057398"
  }
]