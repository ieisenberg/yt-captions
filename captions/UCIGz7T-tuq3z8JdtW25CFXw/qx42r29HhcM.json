[
  {
    "text": "[Music]",
    "start": "1490",
    "end": "7109"
  },
  {
    "text": "do I sound okay oo I'm really loud okay alsoo now I'm here to talk today about Dart flutter and web assembly a model",
    "start": "10120",
    "end": "17600"
  },
  {
    "text": "for building web applications first info about me I'm a product manager at Google I just passed",
    "start": "17600",
    "end": "23119"
  },
  {
    "text": "10 years it's gone really fast and the whole time I've been on the dart team so it's really been cool to watch The Evolution when I started on Dart there",
    "start": "23119",
    "end": "29400"
  },
  {
    "text": "was no we assembly we were trying to actually ship Dart as part of the Chrome browser um Native client was a thing and",
    "start": "29400",
    "end": "34960"
  },
  {
    "text": "so it's amazing looking back the uh progress we made I'd say actually philosophically and we can talk after if",
    "start": "34960",
    "end": "41160"
  },
  {
    "text": "you're curious um the days when we thought about adding Dart to the Chrome browser um I really feel like web assembly is kind of where we wanted to",
    "start": "41160",
    "end": "47719"
  },
  {
    "text": "go which is how do we do better faster um in the browser and the fact that we have a standard thing now just makes me",
    "start": "47719",
    "end": "53480"
  },
  {
    "text": "super excited so you can find me kevm on most of the things on the internet even the blue skies and the mastadons if if",
    "start": "53480",
    "end": "60000"
  },
  {
    "text": "you're curious um and there's my weird vanity domain which is mostly just links to all that stuff plus talks I've given",
    "start": "60000",
    "end": "67119"
  },
  {
    "text": "if you want to learn more so Dart and flutter how many people here are familiar Dart and flutter how",
    "start": "67119",
    "end": "73159"
  },
  {
    "text": "many have actually implemented anything with dart and flutter okay good to hear that we have some fans here um I'll do a brief",
    "start": "73159",
    "end": "79360"
  },
  {
    "text": "introduction of both because I'm guessing a lot of people here don't have some deep context and then we'll talk about web assembly so first Dart uh a",
    "start": "79360",
    "end": "87880"
  },
  {
    "text": "programming language meant to be approachable portable and productive for apps on any platform so here's the",
    "start": "87880",
    "end": "94200"
  },
  {
    "text": "canonical Hell Out World um pretty short and sweet last year I went through a bunch of kind of basic language features",
    "start": "94200",
    "end": "100520"
  },
  {
    "text": "and I didn't want to repeat myself this year but I think it's good to point out some things here we're object oriented plus a bunch of really great functional",
    "start": "100520",
    "end": "106439"
  },
  {
    "text": "features the syntax is very similar to folks that use those languages listed there we have a sound type system which",
    "start": "106439",
    "end": "112079"
  },
  {
    "text": "we're very happy about um including no safety which was added in the last year when stable so our n safety thing is not",
    "start": "112079",
    "end": "118000"
  },
  {
    "text": "just a semantic or syntactic sugar actually is sound null all the way down um which adds a lot of benefits happy to",
    "start": "118000",
    "end": "124159"
  },
  {
    "text": "talk more about that um we have Futures in streams records and patterns and are very rich model for inference which is",
    "start": "124159",
    "end": "129720"
  },
  {
    "text": "great for running code quickly I want to give a preview so this is a feature we just added in last year everyone's",
    "start": "129720",
    "end": "136480"
  },
  {
    "text": "familiar with switch statements right you might switch over strings or you switch over integers or switch over Eno",
    "start": "136480",
    "end": "141680"
  },
  {
    "text": "values um this is a feature where we're switching over Jason a map and so look just real careful at the code so you see",
    "start": "141680",
    "end": "148160"
  },
  {
    "text": "the switch statement on the top line we're switching of adjacent and now the match for the switch statement is not a",
    "start": "148160",
    "end": "153640"
  },
  {
    "text": "string literal or an integer an enum it's actually a map literal what this is saying is match any map that has the key",
    "start": "153640",
    "end": "162440"
  },
  {
    "text": "type with a value text question and the next four things are saying you know match over a string category a map a",
    "start": "162440",
    "end": "169680"
  },
  {
    "text": "string a string but it's not actually just matching over the values it's saying match over the type and then",
    "start": "169680",
    "end": "174760"
  },
  {
    "text": "capture the value and then below I can instantiate an object there and so extending the notion what we can do in",
    "start": "174760",
    "end": "180480"
  },
  {
    "text": "switch was something we added in the last year and it's been super productive so we keep evolving and pushing Dart and I think it's super useful um another fun",
    "start": "180480",
    "end": "187200"
  },
  {
    "text": "example of where we're using new language features how many people have written code like this where you kind of have a nested if block dealing with a",
    "start": "187200",
    "end": "193599"
  },
  {
    "text": "bunch of booleans um if you actually count all the booleans here there are five and so if you do you know the",
    "start": "193599",
    "end": "199239"
  },
  {
    "text": "combinatorial math 2 to the 5th there's actually 32 possible cases you have to",
    "start": "199239",
    "end": "204680"
  },
  {
    "text": "handle right for these five booleans are active and correct and you know all the other things",
    "start": "204680",
    "end": "210720"
  },
  {
    "text": "and so this is actually tricky like have I you know in this case I've actually covered the is active case twice and",
    "start": "210720",
    "end": "215959"
  },
  {
    "text": "it's tough for static analysis to tell that you've missed a case or you might have duplicated one or forgotten one um",
    "start": "215959",
    "end": "221920"
  },
  {
    "text": "this is the feature in our new Switch syntax and this is actually using a feature we have called records so you see here is I'm actually",
    "start": "221920",
    "end": "228519"
  },
  {
    "text": "instantiating a record that's just a Boolean set of values so positional five Boolean values instantiating This Record",
    "start": "228519",
    "end": "235280"
  },
  {
    "text": "C we call this Anonymous types and then I'm switching over it and look carefully",
    "start": "235280",
    "end": "240720"
  },
  {
    "text": "so what we're doing is switching over all the possible values that could exist in this record",
    "start": "240720",
    "end": "246599"
  },
  {
    "text": "and since all the fields are booleans we know all the type possible values that can exist there and actually statically",
    "start": "246599",
    "end": "252040"
  },
  {
    "text": "we can guarantee that you'll hit every case so if you're not if you don't care about the case like you only care about is active true and is pressed true you",
    "start": "252040",
    "end": "259199"
  },
  {
    "text": "can say I ignore those other values but in this case we'll actually give you static analysis that if you forget a possible value will yell at you and say",
    "start": "259199",
    "end": "265320"
  },
  {
    "text": "you've missed a case just like if you miss a value in an En num and if you duplicate a switch context will yell at",
    "start": "265320",
    "end": "271800"
  },
  {
    "text": "you too so I just wanted to highlight some new features we've haded in Dart that have added a lot of good ergonomics um and super useful so we keep evolving",
    "start": "271800",
    "end": "278680"
  },
  {
    "text": "the language quickly um if you're curious about just new things we're doing in Dart how we're pushing the language I highly recommend watching",
    "start": "278680",
    "end": "284320"
  },
  {
    "text": "this talk and one feature that's actually brand new as of February is something called extension types and so",
    "start": "284320",
    "end": "290560"
  },
  {
    "text": "this is the ability to define a type that's basically a zero cost wrapper so I can say I want to make an extension",
    "start": "290560",
    "end": "296520"
  },
  {
    "text": "type on Integer in this case and maybe if I'm doing an ID I don't want people doing math on the ID I don't you adding",
    "start": "296520",
    "end": "302320"
  },
  {
    "text": "two IDs together or subtracting them I just want to care about equality and so you have a feature that is much more",
    "start": "302320",
    "end": "308639"
  },
  {
    "text": "ergonomic and safer than using um an integer for an ID or maybe I'm trying to",
    "start": "308639",
    "end": "315000"
  },
  {
    "text": "think a string for URI for instance but fundamentally cheaper than doing a wrapper value and actually we use this",
    "start": "315000",
    "end": "320280"
  },
  {
    "text": "in interop that I'll talk a little bit later so that's just some stuff about Dart um we don't just use it for flutter",
    "start": "320280",
    "end": "326440"
  },
  {
    "text": "our common front end for all our languages written in in Dart along with our analyzer and our formatter so",
    "start": "326440",
    "end": "332000"
  },
  {
    "text": "thousands of lines of code um both of our JavaScript compilers and a WM compiler are also written in Dart um our",
    "start": "332000",
    "end": "339240"
  },
  {
    "text": "package site which I think at Max handles 200 QPS um I think more now is completely in Dart um and you can",
    "start": "339240",
    "end": "345919"
  },
  {
    "text": "compile Dart code aot to a really tiny binary and have a single binary to deploy which is actually great for",
    "start": "345919",
    "end": "351240"
  },
  {
    "text": "containers you can actually have a 10 megabyte container um and do you know millisecond um cold starts on containers",
    "start": "351240",
    "end": "357680"
  },
  {
    "text": "and dart so this is actually tweeted yesterday I'm like I'm going to totally steal this tweet and publish it um",
    "start": "357680",
    "end": "364479"
  },
  {
    "text": "usually when you think of Dart you think of flutter but we used all a bunch of places um and um I think there's at",
    "start": "364479",
    "end": "369680"
  },
  {
    "text": "least three production companies now basing on offering server offerings in Dart which again is a small number of",
    "start": "369680",
    "end": "375080"
  },
  {
    "text": "total Dart users most of our users are flutter um but it's exciting to see people using it in other places so if",
    "start": "375080",
    "end": "380560"
  },
  {
    "text": "you want to go try out Dart dart. deev and dartpad doev if you want to hack some code together now you can do that",
    "start": "380560",
    "end": "386160"
  },
  {
    "text": "right now um it runs online so let's jump to flutter this is by far the most popular framework for",
    "start": "386160",
    "end": "392400"
  },
  {
    "text": "writing um or the most popular usage of Dart um a framework for building apps beautiful fast productive open on any",
    "start": "392400",
    "end": "398800"
  },
  {
    "text": "screen so flutterdev is the URI um this is actually a really great slide for me to do because I was looking",
    "start": "398800",
    "end": "404720"
  },
  {
    "text": "at my slides from last year and last year I said 700,000 and we've topped over a million I think we're actually closer to 1.2 million I don't have the",
    "start": "404720",
    "end": "411199"
  },
  {
    "text": "exact number um but the number of apps we have in stores is substantial um the percentage of new apps on like the Apple",
    "start": "411199",
    "end": "418199"
  },
  {
    "text": "I store or the apps store um I don't think I'm allowed to see the actual number it is really surprising like",
    "start": "418199",
    "end": "423599"
  },
  {
    "text": "there a lot of new apps I'm sure most of you with a mobile device have a flutter app on your phone and you just don't know it um we're used all",
    "start": "423599",
    "end": "430319"
  },
  {
    "text": "over and over 30 teams at Google use flutter um so not YouTube itself but there's a YouTube create app out in beta",
    "start": "430319",
    "end": "437400"
  },
  {
    "text": "um is uh uses flutter Google Earth classroom a bunch of things um um Family",
    "start": "437400",
    "end": "443160"
  },
  {
    "text": "Link which I use all the time with my kids pieces of the cloud offering on mobile devices all use",
    "start": "443160",
    "end": "448520"
  },
  {
    "text": "flutter and usually you think about doing three bullets we're crazy and do five in terms of kind of the things",
    "start": "448520",
    "end": "453599"
  },
  {
    "text": "we're happy about beautiful fast productive portable open all open source um I want to talk about two of these",
    "start": "453599",
    "end": "459280"
  },
  {
    "text": "today which is portable and fast first portable being able to run anywhere so most people that have done flutter we",
    "start": "459280",
    "end": "465240"
  },
  {
    "text": "started out was mobile apps Android and iOS um but you know so not just arm but",
    "start": "465240",
    "end": "471159"
  },
  {
    "text": "actually we now have support for risk processors which are excited about obviously deploying to web with JavaScript today I'll talk about web",
    "start": "471159",
    "end": "476560"
  },
  {
    "text": "assembly you can build desktop apps Windows Linux Mac and even embedded",
    "start": "476560",
    "end": "482440"
  },
  {
    "text": "scenarios um uh I still don't have the tweet from last year if someone is actually written and running um flutter",
    "start": "482440",
    "end": "487599"
  },
  {
    "text": "on a lanyard which is kind of crazy Toyota uses us for um infotainment systems and cars um we run",
    "start": "487599",
    "end": "494599"
  },
  {
    "text": "everywhere um my favorite example and actually this is something that I knew about last year and couldn't talk about but this released in October uh Google",
    "start": "494599",
    "end": "501120"
  },
  {
    "text": "Earth recently ported all of their common UI to flutter I'm going be very careful there so obviously Google Earth",
    "start": "501120",
    "end": "506560"
  },
  {
    "text": "has a 3D rendering engine that was written in C++ but the problem was they had this common code that could use",
    "start": "506560",
    "end": "511720"
  },
  {
    "text": "across all the mobile devices and the web with web assembly but all the common UI you know the widgets you see on the",
    "start": "511720",
    "end": "517399"
  },
  {
    "text": "left and the right here they had to rewrite in three times in three different platforms and of course this is tough for a team you know have to",
    "start": "517399",
    "end": "523800"
  },
  {
    "text": "maintain it stay consistent and they were able to substantially reduce the amount of code they had greatly incl",
    "start": "523800",
    "end": "529240"
  },
  {
    "text": "increase their velocity because now all this common UI you see the buttons on the bottom and the side panels that's all written in flutter so this is a",
    "start": "529240",
    "end": "535399"
  },
  {
    "text": "great example of of flutter web and actually so if you have Google Earth on your phone or you go to earth.",
    "start": "535399",
    "end": "541000"
  },
  {
    "text": "google.com um you're running a C++ app with um Chrome written all in",
    "start": "541000",
    "end": "547200"
  },
  {
    "text": "flutter so besides portability fast is important we want something close to Native speed and I highlighted this app",
    "start": "547200",
    "end": "554040"
  },
  {
    "text": "last year um Wonder us we built this as an example of be able to have high fidelity apps that run on iOS frankly",
    "start": "554040",
    "end": "560160"
  },
  {
    "text": "and Android um but this year I thought I'd actually show you so here's the wondrous application",
    "start": "560160",
    "end": "566839"
  },
  {
    "text": "running on my desktop you know I'm doing a swipe gesture oops wrong swipe gesture two",
    "start": "566839",
    "end": "573040"
  },
  {
    "text": "fingers there we go so I can swipe between these um famous um places in the",
    "start": "573040",
    "end": "580320"
  },
  {
    "text": "world you know you can see the pretty animations even like the little flipping",
    "start": "580320",
    "end": "586399"
  },
  {
    "text": "around here Integrations with things like YouTube and Google",
    "start": "586399",
    "end": "593040"
  },
  {
    "text": "Maps so this is all written in flutter and running on desktop alth actually it is not a desktop app and I did the same",
    "start": "594880",
    "end": "602000"
  },
  {
    "text": "same thing last year and I still think it's funny um this is actually a web",
    "start": "602000",
    "end": "607480"
  },
  {
    "text": "app so they be to have a super high fidelity beautiful user experience um",
    "start": "612600",
    "end": "617800"
  },
  {
    "text": "the kind of customization you would really want something that looks really good native and be able deploy the web that's what we do with flutter we're",
    "start": "617800",
    "end": "623360"
  },
  {
    "text": "super excited about it of course now my presentation's messed up let's see if we can get it going so I invite you to go now although",
    "start": "623360",
    "end": "630600"
  },
  {
    "text": "if you go to a mobile device on the web you might notice that the per performance is not spectacular it's actually pretty solid for a JS thing but",
    "start": "630600",
    "end": "637440"
  },
  {
    "text": "we want to have this kind of Rich experience be really beautiful and fast and feel native even on mobile web and",
    "start": "637440",
    "end": "644600"
  },
  {
    "text": "so how do we do that well actually before we get into that though I'm going to say if you want to try out flutter as well um darpet Dev also has flutter",
    "start": "644600",
    "end": "651519"
  },
  {
    "text": "content and so this is an example of a 2d game engine called Flame that's available so if you want to try out if",
    "start": "651519",
    "end": "656600"
  },
  {
    "text": "you want to try out what our copertino witchet are you everone see the date time picker in a web browser on a Linux",
    "start": "656600",
    "end": "661800"
  },
  {
    "text": "laptop you can do it on dartpad um so if you want to play with dart and flutter dartpad is the place to go but now I",
    "start": "661800",
    "end": "668200"
  },
  {
    "text": "want to talk about web specifically um first a slight aside",
    "start": "668200",
    "end": "673519"
  },
  {
    "text": "about sites versus apps and this is actually really important in terms of how we think about what's important and how we target things with flutter web um",
    "start": "673519",
    "end": "681160"
  },
  {
    "text": "I won't read through all of these but like um if you Google the term um bodal distribution um I think there actually",
    "start": "681160",
    "end": "687480"
  },
  {
    "text": "kind of is um two Islands here that matter certainly you can switch between the two but I think",
    "start": "687480",
    "end": "693720"
  },
  {
    "text": "there is this notion of kind of a traditional notion of what we think a site is like I think about Wikipedia um",
    "start": "693720",
    "end": "699920"
  },
  {
    "text": "which is text based more linear more static not so much user content or user state right um maybe not so much code",
    "start": "699920",
    "end": "706680"
  },
  {
    "text": "and then on the app side often much more than text it's interactive you write lots of code to maintain it you have",
    "start": "706680",
    "end": "712399"
  },
  {
    "text": "user state so I think there is kind of like two clusterings of experiences on the web here and I'd say you know most",
    "start": "712399",
    "end": "717800"
  },
  {
    "text": "content on the web is still sites but being able to deploy a rich application experience is super valuable on the web",
    "start": "717800",
    "end": "724079"
  },
  {
    "text": "um and that's what we're really focused and so certainly when you think about sites you want to load really fast you",
    "start": "724079",
    "end": "729440"
  },
  {
    "text": "want to be indexable um you want the broadest reach possible and on apps it's really about having flexibility the type",
    "start": "729440",
    "end": "735880"
  },
  {
    "text": "of experience you can offer the richness of the experience and maybe portability the ability to actually deploy it natively on desktop or web or desktop or",
    "start": "735880",
    "end": "743680"
  },
  {
    "text": "mobile and so obviously HTML and CSS JavaScript were great on the site side",
    "start": "743680",
    "end": "749000"
  },
  {
    "text": "and what I'm excited about especially in the flutter team and we're seeing this with other Technologies as well is thinking about a new paradigm for",
    "start": "749000",
    "end": "754720"
  },
  {
    "text": "experiences that are based on accelerated Graphics so this is using canvas webg and hopefully in the future web GPU and web",
    "start": "754720",
    "end": "761959"
  },
  {
    "text": "assembly and flutter web specifically is for applications so when you think of",
    "start": "761959",
    "end": "767680"
  },
  {
    "text": "sites the examples I'll bring up you know not surprising are our sites so if you go to Dart dodev or flutterdev or a",
    "start": "767680",
    "end": "774120"
  },
  {
    "text": "package site pub. these are unapologetically HTML and CSS and JavaScript I think in some cases we",
    "start": "774120",
    "end": "780240"
  },
  {
    "text": "actually Source some of the JavaScript in Dart so we compile the dart to JavaScript but they're Dom sites they're HTML sites and that's perfect for this",
    "start": "780240",
    "end": "786399"
  },
  {
    "text": "scenario this is documentation this is you know a search engine but you think about rich",
    "start": "786399",
    "end": "791480"
  },
  {
    "text": "experiences so I showed you wondrous um the developer tools that we have for flutter are all running in flutter web",
    "start": "791480",
    "end": "797160"
  },
  {
    "text": "um we have companies that are betting on us this a super list is an amazing to-do app collaborative to-do app RVE is",
    "start": "797160",
    "end": "802920"
  },
  {
    "text": "actually mentioned earlier does an amazing um has a whole uh 2D Vector",
    "start": "802920",
    "end": "808120"
  },
  {
    "text": "animation experience that runs completely on the web you can install natively as well and things like Google",
    "start": "808120",
    "end": "813440"
  },
  {
    "text": "Earth these are apps so we don't care necessarily as much about indexing these maybe your homepage w't indexable but",
    "start": "813440",
    "end": "819639"
  },
  {
    "text": "you know I don't want my bank content indexed right necessarily and so um and maybe it's okay if you have a splash",
    "start": "819639",
    "end": "825240"
  },
  {
    "text": "screen and a little bit of load time because you have a rich experience and you're going to spend minutes or hours in the experience and so this is kind of",
    "start": "825240",
    "end": "831639"
  },
  {
    "text": "the place for targeting and let's see how we make that better with web",
    "start": "831639",
    "end": "837639"
  },
  {
    "text": "assembly so today we talk about Google Earth um and some of the other apps we talked about um we're compiling to",
    "start": "837639",
    "end": "844560"
  },
  {
    "text": "JavaScript so we do have a low-level Library called skia and this is actually we're in the process of migrating some",
    "start": "844560",
    "end": "850240"
  },
  {
    "text": "of this right now to a new technology called impeller but at least on the web right now we're using a technology called skia This is actually the 2D",
    "start": "850240",
    "end": "856079"
  },
  {
    "text": "rendering engine that exists in Chrome if you're curious um we compile that to web assembly and then we take all of the",
    "start": "856079",
    "end": "863079"
  },
  {
    "text": "engine code the framework code for flutter so you think animations all of our layout all of our widgets all those",
    "start": "863079",
    "end": "869240"
  },
  {
    "text": "things that's all sourced in Dart along with your application code or packages that you use and that now is all",
    "start": "869240",
    "end": "874800"
  },
  {
    "text": "compiled to JavaScript and what we're excited about is moving to a world where that's web assembly so we still have the canvas kit",
    "start": "874800",
    "end": "882240"
  },
  {
    "text": "bits in this case we call it sasm this is what happens when Engineers name things that's okay and that's linear",
    "start": "882240",
    "end": "887800"
  },
  {
    "text": "memory WM and as we discussed last year and I think Thomas and Tom from the Chrome team will talk tomorrow the GC",
    "start": "887800",
    "end": "893360"
  },
  {
    "text": "stuff is where we're targeting um Dart and we're excited that as of I believe it was November",
    "start": "893360",
    "end": "900120"
  },
  {
    "text": "both Firefox and chrome have stable support for GC so why would we do web assembly",
    "start": "900120",
    "end": "907079"
  },
  {
    "text": "implementing an entire compiler is not easy and we did all this work for JavaScript so why' we do",
    "start": "907079",
    "end": "912399"
  },
  {
    "text": "it performance and in some cases correctness we'll get to that later but first",
    "start": "912399",
    "end": "917759"
  },
  {
    "text": "performance so this is a actually our performance dashboard we're running the",
    "start": "917759",
    "end": "923440"
  },
  {
    "text": "same app I think it's a material demo we had we still have an HTML renderer which actually you would like to get rid of",
    "start": "923440",
    "end": "928560"
  },
  {
    "text": "because there's ACH reasons for that um but I'm comparing performance here so this HTML renderer we have Legacy our",
    "start": "928560",
    "end": "934360"
  },
  {
    "text": "current GS implementation and then web assembly and as you see here we're over twice as fast for initial load the unit",
    "start": "934360",
    "end": "940800"
  },
  {
    "text": "of time is microsc so we're talking about you know 100 versus 50 milliseconds so not only is it",
    "start": "940800",
    "end": "947000"
  },
  {
    "text": "definitively better and this is across multiple releases of or multiple builds multiple commits effectively a flutter",
    "start": "947000",
    "end": "953199"
  },
  {
    "text": "notice the noise as well so obviously if you scale that up all the little bumps will get bigger but the the bumps are",
    "start": "953199",
    "end": "959560"
  },
  {
    "text": "much higher in the JS version and obviously performance benchmarks there's always a little bit of noise so not only",
    "start": "959560",
    "end": "965000"
  },
  {
    "text": "is web assembly faster it's consistently faster it's reliably faster you don't",
    "start": "965000",
    "end": "970199"
  },
  {
    "text": "have as much bumps in the performance and in fact you can see this I took the uh the Wess app I showed you earlier I",
    "start": "970199",
    "end": "976519"
  },
  {
    "text": "made a custom build that actually deployed to web assembly um someone on our team made this little Benchmark button we actually",
    "start": "976519",
    "end": "982279"
  },
  {
    "text": "ran through about 10 seconds of slipping between um flipping between screens scrolling doing all the transitions so",
    "start": "982279",
    "end": "988959"
  },
  {
    "text": "about a th frames we captured and then we looked at the analysis so as you see",
    "start": "988959",
    "end": "996680"
  },
  {
    "text": "here for so p50 p80 you guys know what I'm talking about when I say this you know the 50th percentile so the median",
    "start": "996680",
    "end": "1004279"
  },
  {
    "text": "frame time is about 60% faster with web assembly and what's really exciting is when you get to P90",
    "start": "1004279",
    "end": "1010399"
  },
  {
    "text": "P95 talking about 110% 120% faster so obviously if you're trying to Target 60",
    "start": "1010399",
    "end": "1017160"
  },
  {
    "text": "FPS 15 16 milliseconds is your goal right like that's how you don't Jank when you're rendering frames um",
    "start": "1017160",
    "end": "1024160"
  },
  {
    "text": "obviously on my M1 Mac you know 8 milliseconds is fine you start talking about mobile devices you know the",
    "start": "1024160",
    "end": "1029438"
  },
  {
    "text": "difference between 15 milliseconds and 30 is the difference between janking and not janking and so you have so much more",
    "start": "1029439",
    "end": "1035280"
  },
  {
    "text": "overhead on the web assembly version and what this means is either you can do",
    "start": "1035280",
    "end": "1040600"
  },
  {
    "text": "more on the more interesting animations you know more interesting effects richer content with the exact same behavior or",
    "start": "1040600",
    "end": "1048960"
  },
  {
    "text": "or you can go much lower on your devices you Target and still have a great user experience um we've done some of the",
    "start": "1048960",
    "end": "1055120"
  },
  {
    "text": "benchmarking with this wondrous app on a six-year-old Chrome device a Samsung device um and it was amazing the",
    "start": "1055120",
    "end": "1061240"
  },
  {
    "text": "difference you can it's night and day what you can see with web assembly um so one trick we do is",
    "start": "1061240",
    "end": "1066840"
  },
  {
    "text": "obviously just web assemblies faster the second thing is and this is one of the benefits of using um canvas based",
    "start": "1066840",
    "end": "1072880"
  },
  {
    "text": "Graphics accelerated Graphics is actually we can do off- thread rendering which is kind of crazy to think about doing on the web so this is a zoom in",
    "start": "1072880",
    "end": "1080080"
  },
  {
    "text": "it's kind of hard to parse I apologize but um you can see the main thread and then the worker thread and it's not all",
    "start": "1080080",
    "end": "1086360"
  },
  {
    "text": "of the work but a huge chunk of work we're actually able to do off thread and of course anyone who's done any UI",
    "start": "1086360",
    "end": "1091840"
  },
  {
    "text": "programming especially on the web a lot of things end up happening on that main thread and that means you're blocking UI",
    "start": "1091840",
    "end": "1097240"
  },
  {
    "text": "you're janking and the ability to actually offload rasterization to a separate thread means you just have a",
    "start": "1097240",
    "end": "1102360"
  },
  {
    "text": "much more interactive much more smooth user experience and this is the benefit of using Hardware Exel graphics on the",
    "start": "1102360",
    "end": "1108520"
  },
  {
    "text": "web and web assembly the second thing we want to talk about is correctness so here's a",
    "start": "1108520",
    "end": "1114559"
  },
  {
    "text": "quiz A or B which column is correct for this High bit math I'll take a shout",
    "start": "1114559",
    "end": "1123320"
  },
  {
    "text": "out and you don't need your phone B is correct how what's the fast",
    "start": "1123440",
    "end": "1129799"
  },
  {
    "text": "way to figure out that b is correct less zeros it turns out when you",
    "start": "1129799",
    "end": "1135080"
  },
  {
    "text": "do the powers of two you should not have trailing zeros they should all end in 2486 2486 forever so why column A why",
    "start": "1135080",
    "end": "1143400"
  },
  {
    "text": "are there zeros any guesses no 64-bit integers on JavaScript",
    "start": "1143400",
    "end": "1151480"
  },
  {
    "text": "so JavaScript doesn't have the notion of an integer it's just JavaScript number and so it's effectively a double and the",
    "start": "1151480",
    "end": "1157039"
  },
  {
    "text": "problem is after about 53 bits you start getting rounding errors it goes to",
    "start": "1157039",
    "end": "1162440"
  },
  {
    "text": "double math and so obviously we're able to correct for this right so if you're doing cry you know crypto cryptography I",
    "start": "1162440",
    "end": "1168880"
  },
  {
    "text": "should be very clear maybe crypto too if you're doing Bitcoin um you have to do a bunch of special tricks on the browser",
    "start": "1168880",
    "end": "1175039"
  },
  {
    "text": "to make sure that you have correct numbers you can't go beyond 32 bits basically um which is really unfortunate",
    "start": "1175039",
    "end": "1181480"
  },
  {
    "text": "and so we tell folks in dark that the number Precision is a factor of the",
    "start": "1181480",
    "end": "1186880"
  },
  {
    "text": "runtime um but actually be able to have reliable numbers so I actually have verified that on the dart VM and on WM",
    "start": "1186880",
    "end": "1193280"
  },
  {
    "text": "um the powers work all the way through and of course 2 to the 63rd goes negative for weird reasons so I cut that one off um but actually wm's correct",
    "start": "1193280",
    "end": "1200679"
  },
  {
    "text": "which is great so actually we're in place now we had a number of places in our um our tooling even in the last few",
    "start": "1200679",
    "end": "1206760"
  },
  {
    "text": "months that we're just doing math like comparing um 1.0 to one and if they're",
    "start": "1206760",
    "end": "1212240"
  },
  {
    "text": "the same or not to figure out if we're on the web we can't do that anymore because on the web might be WM and so numbers are correct now which is super",
    "start": "1212240",
    "end": "1219159"
  },
  {
    "text": "nice so how do you take as a user of flutter how do you start using web",
    "start": "1219159",
    "end": "1224440"
  },
  {
    "text": "assembly it must be really difficult actually it's super easy barely an inconvenience",
    "start": "1224440",
    "end": "1229880"
  },
  {
    "text": "you just had the flag so as of today or yesterday we now have beta out with flutter so flutter",
    "start": "1229880",
    "end": "1236760"
  },
  {
    "text": "beta now has the ability to build with WM and it's as simple as a web as an author um if you don't do any interop so",
    "start": "1236760",
    "end": "1243799"
  },
  {
    "text": "if you're using all the widgets and things they just work and compile the WM um and other than perf they should be",
    "start": "1243799",
    "end": "1250000"
  },
  {
    "text": "basically identical implementation assuming you're not doing High bit math and actually what we do now by",
    "start": "1250000",
    "end": "1257200"
  },
  {
    "text": "default there's actually no way currently to deploy only WM so if you pass the WM flag we will compile both so",
    "start": "1257200",
    "end": "1263360"
  },
  {
    "text": "we will run both our JavaScript compiler and our web assem compiler with every build and we do the work to do runtime",
    "start": "1263360",
    "end": "1269559"
  },
  {
    "text": "feature detection to switch between the two so you can do one build and deploy and on browsers that support won GC",
    "start": "1269559",
    "end": "1276120"
  },
  {
    "text": "you'll get great performance um and actually even the JavaScript version generally you get pretty good performance it works well um you can",
    "start": "1276120",
    "end": "1282080"
  },
  {
    "text": "turn it up to 11 and so the idea here is there's no Cliff you can support all browsers today umow that have support",
    "start": "1282080",
    "end": "1289279"
  },
  {
    "text": "for GC and the features we use will be faster um and then my aspiration for",
    "start": "1289279",
    "end": "1294400"
  },
  {
    "text": "this calendar year we'll see if it happens I'm a product manager not an engineer is I'd like to get to the point where by default if you build for web we",
    "start": "1294400",
    "end": "1300480"
  },
  {
    "text": "will always build web assembly there's some things we're working on um and in fact if you're really curious I'll show some examples here in a bit um you can",
    "start": "1300480",
    "end": "1306600"
  },
  {
    "text": "dig in and look at the MJS file which is how we bootstrap things and you actually can see a numbered list of every function that we ex we um import into",
    "start": "1306600",
    "end": "1313960"
  },
  {
    "text": "the WM module and this is kind of how we Bridge the browser stuff so if you're curious how we do um talking to browser",
    "start": "1313960",
    "end": "1319440"
  },
  {
    "text": "apis you actually see it in the generated MJS file so there two examples you can look at today I showed the material demo last",
    "start": "1319440",
    "end": "1326760"
  },
  {
    "text": "year so it's the same URI and you could open it now in Safari or Firefox and chrome um and if you look at the dev",
    "start": "1326760",
    "end": "1332559"
  },
  {
    "text": "tools you can see which version you're using keep in mind that they both load a wasm module which is this canvas kit",
    "start": "1332559",
    "end": "1337720"
  },
  {
    "text": "wasm thing so you know you want to look for main. dart. JS versus main. dart. WM",
    "start": "1337720",
    "end": "1343840"
  },
  {
    "text": "um but in Chrome at least you know you can look at the wasm you can expand it out it shows the the wasm text t format",
    "start": "1343840",
    "end": "1349080"
  },
  {
    "text": "you can set break points if you want it's all there this vote thing is actually the first thing I ever wrote in",
    "start": "1349080",
    "end": "1354120"
  },
  {
    "text": "Dart um if you're interested about election methods and ranked voting we can talk later it's an interest of mine",
    "start": "1354120",
    "end": "1359880"
  },
  {
    "text": "but I was very excited to get that up and running and it's a more Simple app written um and deployed with web",
    "start": "1359880",
    "end": "1365400"
  },
  {
    "text": "assembly of course there's one detail left which is how do you handle JavaScript right in this new WM World um",
    "start": "1365400",
    "end": "1372480"
  },
  {
    "text": "before when you all only cared about JavaScript a Bo in Dart effectively was compiled and used as a Boolean in",
    "start": "1372480",
    "end": "1377720"
  },
  {
    "text": "JavaScript exact same thing so really no conversion was necessary but now we live in a world where a dart bu compiled to",
    "start": "1377720",
    "end": "1384799"
  },
  {
    "text": "web assembly is not the same thing is a JavaScript Boolean right it's actually a WM i32 we use zero and one not",
    "start": "1384799",
    "end": "1391520"
  },
  {
    "text": "surprising it's a good thing to use so now we need is a mechanism to",
    "start": "1391520",
    "end": "1397240"
  },
  {
    "text": "talk to browser libraries other JavaScript libraries correctly and have it work the same in JavaScript and web",
    "start": "1397240",
    "end": "1402520"
  },
  {
    "text": "assembly so there were four things I wanted I wanted it to be sound meaning like from a computer science perspective",
    "start": "1402520",
    "end": "1408000"
  },
  {
    "text": "you know don't mess up typing consistent you want the JavaScript version and the web assembly version to work the same you want to be fast and I would love I",
    "start": "1408000",
    "end": "1415200"
  },
  {
    "text": "would have loved it to be magically trivial you just do the right thing and will convert for you it turns out that's really hard to do and do fast and do",
    "start": "1415200",
    "end": "1422000"
  },
  {
    "text": "consistently so we punt it on magically trivial there's some work you have to do um um although what's interesting is we",
    "start": "1422000",
    "end": "1428640"
  },
  {
    "text": "now no longer kind of gloss over the difference like JavaScript is a different Beast than Dart um and",
    "start": "1428640",
    "end": "1433960"
  },
  {
    "text": "especially now that we're in web assembly we don't assume that so we actually expose an entire hierarchy of objects that represent things from",
    "start": "1433960",
    "end": "1439600"
  },
  {
    "text": "JavaScript you know you know big in symbol numbers even things like promises",
    "start": "1439600",
    "end": "1444799"
  },
  {
    "text": "so in Dart there's a notion of a future and JavaScript is a promise and we expose a hierarchy here and then mapping",
    "start": "1444799",
    "end": "1450559"
  },
  {
    "text": "between it and so what's cool is you have to do the work to call tojs to Dart to pass things around you need to",
    "start": "1450559",
    "end": "1456600"
  },
  {
    "text": "convert a dart function to a JS function you pass things and effectively in Dart tojs it's mostly a no op and some cases",
    "start": "1456600",
    "end": "1462760"
  },
  {
    "text": "there are differences but for things like Boolean and string we just pass it over there's no all these operations are",
    "start": "1462760",
    "end": "1468399"
  },
  {
    "text": "are no Ops then obviously in the wasm side we need to convert like we need to convert the notion of a JavaScript number to the right kind of number as",
    "start": "1468399",
    "end": "1475880"
  },
  {
    "text": "well on the dark side right like do you want us to do this like an integer or a double and we you need to tell us because at runtime it's just a JS numb",
    "start": "1475880",
    "end": "1483360"
  },
  {
    "text": "and that could be you know it's eff floating point so we have an explicit notion of conversions this is well documented if you're curious go take a",
    "start": "1483360",
    "end": "1490039"
  },
  {
    "text": "look and today we're super excited to say that we're now in beta so last year I you know a year ago I was here talking",
    "start": "1490039",
    "end": "1496120"
  },
  {
    "text": "about this as an experiment we are in the process now of flying towards um stable um stay tuned the website I have",
    "start": "1496120",
    "end": "1503440"
  },
  {
    "text": "here flutter. dwm will have all the details um as of today it's beta and obviously if you're watching this",
    "start": "1503440",
    "end": "1508919"
  },
  {
    "text": "recording in the future you want to look at that website for the current story is as far as browser support So chromium",
    "start": "1508919",
    "end": "1515440"
  },
  {
    "text": "based browsers so obviously Chrome and Edge things are fully supported I mentioned before we have this uh cross",
    "start": "1515440",
    "end": "1521200"
  },
  {
    "text": "stud rendering it turns out that Firefox has what we consider a bug which is they do extra copying when we're copying bit",
    "start": "1521200",
    "end": "1527440"
  },
  {
    "text": "Maps across the um the web worker boundary and it's insanely slow and so we need to figure out are we going to",
    "start": "1527440",
    "end": "1534640"
  },
  {
    "text": "basically turn off the cross thread rendering and just use a single thread rendering on Firefox or hopefully",
    "start": "1534640",
    "end": "1540200"
  },
  {
    "text": "Firefox will fix their bug so we need to figure that out I'd recommend if you go to either of these bugs please don't spam with me too but you know the plus",
    "start": "1540200",
    "end": "1547039"
  },
  {
    "text": "one Whatever star thing is they know these are important bugs they appreciate that same thing with Safari um and",
    "start": "1547039",
    "end": "1552480"
  },
  {
    "text": "actually was great to see the cotlin talk it seems like um a web kit is much further long than I thought um they're",
    "start": "1552480",
    "end": "1557919"
  },
  {
    "text": "cranking along really well um but obviously once we're stable in safari with GC we'll be excited to see um",
    "start": "1557919",
    "end": "1563320"
  },
  {
    "text": "flutter on WM running in Safari as well so I hear this a lot and I see this in discussions right like people like I",
    "start": "1563320",
    "end": "1569640"
  },
  {
    "text": "want a web assembly UI framework like give me a web assembly UI framework I have one for you it's high performance",
    "start": "1569640",
    "end": "1575840"
  },
  {
    "text": "it's a rich UI framework that covers material design and um Cupertino which",
    "start": "1575840",
    "end": "1581840"
  },
  {
    "text": "we call a ios's design language so if you want to make a app that looks like a native IOS app or native Mac app you can",
    "start": "1581840",
    "end": "1587960"
  },
  {
    "text": "do that in flutter today full support for localization internationalization accessibility it's battle tested",
    "start": "1587960",
    "end": "1594720"
  },
  {
    "text": "production by Fortune 100 companies in the states all over the world a bunch of Google products and as a bonus from this",
    "start": "1594720",
    "end": "1602799"
  },
  {
    "text": "you know this beta framework for web assembly it's also stable in JavaScript and lets you deploy natively to iOS",
    "start": "1602799",
    "end": "1609159"
  },
  {
    "text": "Android and desktop so I think it's a pretty good solution if you're interested in doing um a web assembly UI",
    "start": "1609159",
    "end": "1614679"
  },
  {
    "text": "framework and we'd love to have you so flutter. dev. the updates on the where we are with WM",
    "start": "1614679",
    "end": "1621640"
  },
  {
    "text": "is fl. dewm and of course you going to find any of my other random things I've done go to my personal website and I'm",
    "start": "1621640",
    "end": "1627240"
  },
  {
    "text": "open for questions thank you [Applause]",
    "start": "1627240",
    "end": "1639780"
  },
  {
    "text": "much thank you so might be a naive question",
    "start": "1647159",
    "end": "1652399"
  },
  {
    "text": "but like the performance is all great um in terms of power management for mobile devices are the implications the same in",
    "start": "1652399",
    "end": "1659600"
  },
  {
    "text": "terms of like sleep States and stuff when running web assembly applications I'm thinking things like Progressive web apps and like background threads and all",
    "start": "1659600",
    "end": "1666399"
  },
  {
    "text": "the rest of it um or are they higher performance but there's still work to be",
    "start": "1666399",
    "end": "1671640"
  },
  {
    "text": "done in terms of efficiency Etc I don't know whether that is hope it makes sense",
    "start": "1671640",
    "end": "1679080"
  },
  {
    "text": "so it's in some ways flutter web apps are just other web apps right so if you're thinking about doing background",
    "start": "1679080",
    "end": "1684440"
  },
  {
    "text": "processing obviously we have our background fed we're using for rendering here in the WM case if you're doing other background processing or whatever",
    "start": "1684440",
    "end": "1691120"
  },
  {
    "text": "it's just like any other web app so if folks install a web worker or wpwa and they register for background events it's",
    "start": "1691120",
    "end": "1698519"
  },
  {
    "text": "I I can't speak to the details of managing performance or expectation of that but it's just like any other web app we are no different in that respect",
    "start": "1698519",
    "end": "1705159"
  },
  {
    "text": "but the the web assembly version specifically it uh versus the JavaScript version yeah for the same code I mean",
    "start": "1705159",
    "end": "1712760"
  },
  {
    "text": "it's it's kind of what we talked about right so like fundamentally we're getting the same pixels on the screen it's actually kind of crazy to go",
    "start": "1712760",
    "end": "1718000"
  },
  {
    "text": "through all this work implementing an entire new language Target and all the tests and then we have the same we have",
    "start": "1718000",
    "end": "1723919"
  },
  {
    "text": "you know our our um our screenshot tests and they're the same pixels like our goal is pixel identical and so what you",
    "start": "1723919",
    "end": "1731080"
  },
  {
    "text": "get is like half the CPU time so you're doing the same work but you know you're spending half the CPU and even doing",
    "start": "1731080",
    "end": "1736559"
  },
  {
    "text": "multi- thread or multi-core um you get obviously benefits there in terms of Jen and everything else but in terms of the",
    "start": "1736559",
    "end": "1741679"
  },
  {
    "text": "total amount of CPU work happening it's half and so you're either getting more frames on the screen drawing frames",
    "start": "1741679",
    "end": "1747919"
  },
  {
    "text": "faster obviously or you're just using less battery which is great sweet thank",
    "start": "1747919",
    "end": "1753799"
  },
  {
    "text": "you going once I'm curious if you're using webgl",
    "start": "1754399",
    "end": "1762240"
  },
  {
    "text": "for rendering the UI um how do you achieve accessibility there do you have",
    "start": "1762240",
    "end": "1767559"
  },
  {
    "text": "to Define specific accessibility attributes and all of the UI elements separately and does how much overhead",
    "start": "1767559",
    "end": "1774279"
  },
  {
    "text": "does that bring to the final binary size as far as anant you would have to reimplement some of the things that are",
    "start": "1774279",
    "end": "1780240"
  },
  {
    "text": "already available in the browser for Dom if you did not use webgl in the first",
    "start": "1780240",
    "end": "1785840"
  },
  {
    "text": "place right so for accessibility we actually use the Dom and so if you",
    "start": "1785840",
    "end": "1791519"
  },
  {
    "text": "there's certain signals you get from the system to realize that user wants to use accessibility and then we hydrate a hidden Dom underneath the canvas",
    "start": "1791519",
    "end": "1798640"
  },
  {
    "text": "effectively that has all of the Dom elements you care about and um you know",
    "start": "1798640",
    "end": "1804640"
  },
  {
    "text": "has the right ARA tags and everything else there is a runtime per hit there and probably you know a compile time hit",
    "start": "1804640",
    "end": "1810919"
  },
  {
    "text": "like because you know we have a bunch of logic there to instantiate the tree the nice thing is because we're not worried about the presentation to the user but",
    "start": "1810919",
    "end": "1817440"
  },
  {
    "text": "just the accessibility elements um It's relatively lightweight especially compared to doing a full UI framework in",
    "start": "1817440",
    "end": "1822919"
  },
  {
    "text": "HTML um but there is obviously compile time pit to include accessibility just like on any platform and we're all happy",
    "start": "1822919",
    "end": "1829279"
  },
  {
    "text": "to do that work because it's good to have an accessible application um and there is a runtime hit because you know now if you're scrolling or interacting",
    "start": "1829279",
    "end": "1835559"
  },
  {
    "text": "with the app not only are you manipulating the pixels on the screen you're also manipulating this Dom this",
    "start": "1835559",
    "end": "1840600"
  },
  {
    "text": "kind of virtual hidden Dom prevent accessibility to present accessibility um but generally we find it okay like we",
    "start": "1840600",
    "end": "1847240"
  },
  {
    "text": "get bugs on the accessibility side for you know just correctness things that were fixing very quickly but um in terms",
    "start": "1847240",
    "end": "1853919"
  },
  {
    "text": "of actual end users using accessibility of the flutter app I've actually never gotten a bug about performance so it",
    "start": "1853919",
    "end": "1860000"
  },
  {
    "text": "seems to be solid thanks it is a early problem do you know doing a canvas app and having",
    "start": "1860000",
    "end": "1866159"
  },
  {
    "text": "accessibility It's Tricky anybody",
    "start": "1866159",
    "end": "1870919"
  },
  {
    "text": "else thank you so",
    "start": "1871600",
    "end": "1875080"
  },
  {
    "text": "much",
    "start": "1877080",
    "end": "1880080"
  }
]