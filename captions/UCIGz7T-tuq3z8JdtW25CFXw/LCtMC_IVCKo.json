[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "hi everyone I'm Salim I'm writing kotlin in kotlin at your brains and leading",
    "start": "5060",
    "end": "11160"
  },
  {
    "text": "coach and wasm we are going to have a quick Journey around kotlin wasm and we",
    "start": "11160",
    "end": "16619"
  },
  {
    "text": "will see what kind of things already possible there also work a bit inside",
    "start": "16619",
    "end": "23840"
  },
  {
    "text": "I'm working at VMware as a spring farmer committer today I'm not here to talk about spring but if you want to chat",
    "start": "24439",
    "end": "30359"
  },
  {
    "text": "about running spring on wazam you can talk with me I have a few ideas but",
    "start": "30359",
    "end": "35579"
  },
  {
    "text": "today we are really going to talk about continuism and the work I do on that on my spare time in collaboration with the",
    "start": "35579",
    "end": "41219"
  },
  {
    "text": "continuous M team so first a quick presentation of what kotlin is kotlin is a modern statically",
    "start": "41219",
    "end": "49379"
  },
  {
    "start": "42000",
    "end": "162000"
  },
  {
    "text": "typed garbage collected language it managed to be both concise and expressive pragmatic but elegance and in",
    "start": "49379",
    "end": "56940"
  },
  {
    "text": "my opinion it I found the right Trader between imperative and functional programming it manages to turn the",
    "start": "56940",
    "end": "63780"
  },
  {
    "text": "billion dollar mistake no references into a pretty useful feature of null",
    "start": "63780",
    "end": "69600"
  },
  {
    "text": "safety check at real time to detect the presence or not of a value main adoption is on mobile side because",
    "start": "69600",
    "end": "76799"
  },
  {
    "text": "kotlin as you may know is the official language on Android side we have a fair amount of market share also on server",
    "start": "76799",
    "end": "84060"
  },
  {
    "text": "side especially a lot of people are using kotlin to build spring boot application and thanks to its DSL and scripting",
    "start": "84060",
    "end": "91619"
  },
  {
    "text": "capabilities we are basically able to use kotlin to build to write Gradle build files",
    "start": "91619",
    "end": "99780"
  },
  {
    "text": "most of the successful use cases are on gvm but kotlin provide a pretty",
    "start": "99780",
    "end": "105079"
  },
  {
    "text": "first-class report for multi-platform development so basically you write your common code in kotlin no dependency on a",
    "start": "105079",
    "end": "111960"
  },
  {
    "text": "specific platform and you just write the specific bits for the gvm for Native 4GS and that's it",
    "start": "111960",
    "end": "119240"
  },
  {
    "text": "and there is a pretty powerful copilot plugin mechanism that allow to perform a",
    "start": "120680",
    "end": "126240"
  },
  {
    "text": "code transformation at real time so about wazam I would like to share a",
    "start": "126240",
    "end": "131280"
  },
  {
    "text": "bit of History so since I work in this industry I try to find ways to remove textiles to be able to use the same code",
    "start": "131280",
    "end": "138599"
  },
  {
    "text": "for various use cases and so in 2016 when web assembly with",
    "start": "138599",
    "end": "144660"
  },
  {
    "text": "in in the process of being standardized I share this crazy idea with the curtain",
    "start": "144660",
    "end": "149879"
  },
  {
    "text": "team and the Curtin Community about targeting webassembly for cartiling at that time that sounds a bit crazy but",
    "start": "149879",
    "end": "156000"
  },
  {
    "text": "since I have been dreaming of a dedicated support for wazamin kotlin and that's what we are going to show today",
    "start": "156000",
    "end": "163680"
  },
  {
    "start": "162000",
    "end": "251000"
  },
  {
    "text": "so um first it has started as a prototype we are kotlin native which is a version",
    "start": "163680",
    "end": "171120"
  },
  {
    "text": "of kotlin that generates a native executable using an llvm tool chain was a bit modified to generate webassembly",
    "start": "171120",
    "end": "177959"
  },
  {
    "text": "but what we are going to present today is a brand new compiler that is natively designed for targeting West mgc we had",
    "start": "177959",
    "end": "186300"
  },
  {
    "text": "we had a good presentation by Google about that and by Kevin about that so um",
    "start": "186300",
    "end": "191519"
  },
  {
    "text": "yeah kotlin was um was born to really Target was mgc and zelim who has work on",
    "start": "191519",
    "end": "198480"
  },
  {
    "text": "the compiler is going to present you that next yeah",
    "start": "198480",
    "end": "203819"
  },
  {
    "text": "um a key point about kotlin wasm is that it targets a competitive footprint including for public websites so we have",
    "start": "203819",
    "end": "211379"
  },
  {
    "text": "already talked about using webmgc to draw an interface with a basically a",
    "start": "211379",
    "end": "216900"
  },
  {
    "text": "library that is a few one megabyte for example that here we also would like to",
    "start": "216900",
    "end": "223920"
  },
  {
    "text": "Target public website and this pretty efficient compilation is illustrated by",
    "start": "223920",
    "end": "229920"
  },
  {
    "text": "these three kilobytes footprint for a very simple hello world application like",
    "start": "229920",
    "end": "235200"
  },
  {
    "text": "that that's basically use the done binding but that means that kotlin wasm",
    "start": "235200",
    "end": "240239"
  },
  {
    "text": "is also usable to Target public websites not just back offices and stuff like that",
    "start": "240239",
    "end": "247280"
  },
  {
    "text": "thank you thank you Sam we built new compiler from",
    "start": "247760",
    "end": "253319"
  },
  {
    "start": "251000",
    "end": "447000"
  },
  {
    "text": "scratch and targeting next goals we want to have fast compilation because",
    "start": "253319",
    "end": "259620"
  },
  {
    "text": "we think it's important to have under the second time around tip time to",
    "start": "259620",
    "end": "264780"
  },
  {
    "text": "achieve phase regenerate binaries directly and later we're going to make",
    "start": "264780",
    "end": "269820"
  },
  {
    "text": "it incremental we don't do much optimization during development but we use binary to optimize release builds",
    "start": "269820",
    "end": "277680"
  },
  {
    "text": "also we want to have a small binaries and great integration with hosts for",
    "start": "277680",
    "end": "283620"
  },
  {
    "text": "example to avoid leaks with across model wings and modern shiny proposals help or",
    "start": "283620",
    "end": "290880"
  },
  {
    "text": "help us a lot with it we are using next proposals reference",
    "start": "290880",
    "end": "297780"
  },
  {
    "text": "types each which introduces basic reference types and instructions to work",
    "start": "297780",
    "end": "303360"
  },
  {
    "text": "with fam it's already part of course specification and implemented by most of",
    "start": "303360",
    "end": "308520"
  },
  {
    "text": "VMS next is exception handling proposal as you can guess it introduces something",
    "start": "308520",
    "end": "315060"
  },
  {
    "text": "like exceptions some ways to throw and catch them it's",
    "start": "315060",
    "end": "320699"
  },
  {
    "text": "in Phase five for three or four but it's available by default in all major",
    "start": "320699",
    "end": "325979"
  },
  {
    "text": "browsers next type function references the name speaks for itself it",
    "start": "325979",
    "end": "332699"
  },
  {
    "text": "it adds a better typing for functional references and instructions to call",
    "start": "332699",
    "end": "338100"
  },
  {
    "text": "functions through a reference it's in phase three now",
    "start": "338100",
    "end": "343160"
  },
  {
    "text": "and to ask but not least scratch collection proposal interest clearly the",
    "start": "343160",
    "end": "348720"
  },
  {
    "text": "proposal has only one sentence about garbage collection but it introduced how",
    "start": "348720",
    "end": "354180"
  },
  {
    "text": "level Concepts required for languages and runtimes with GC such as structure",
    "start": "354180",
    "end": "361680"
  },
  {
    "text": "Fields references and so on also in phase three",
    "start": "361680",
    "end": "367080"
  },
  {
    "text": "we have a great news today origin Trail for wasmgc and chrome is open for",
    "start": "367080",
    "end": "373800"
  },
  {
    "text": "registration starting today it allows you to turn on wasmgc for your site",
    "start": "373800",
    "end": "380520"
  },
  {
    "text": "follow the link for more information webassembly evolves continuously and",
    "start": "380520",
    "end": "387180"
  },
  {
    "text": "there are many new proposals some of them are interesting to us and even more",
    "start": "387180",
    "end": "392460"
  },
  {
    "text": "we are experimenting with some of them let's quickly look at them",
    "start": "392460",
    "end": "397800"
  },
  {
    "text": "there are many proposals aimed to improve interrupt with external world",
    "start": "397800",
    "end": "403020"
  },
  {
    "text": "performance is important as well we can you can say nowadays disk space",
    "start": "403020",
    "end": "409440"
  },
  {
    "text": "is cheap and networks are fast but there are use cases where size is still",
    "start": "409440",
    "end": "414840"
  },
  {
    "text": "important for example web I'd like to highlight few proposals here",
    "start": "414840",
    "end": "421880"
  },
  {
    "text": "first component model because I personally think it is important for how",
    "start": "421880",
    "end": "427680"
  },
  {
    "text": "awesome ecosystem next is multiple memory because I can it",
    "start": "427680",
    "end": "434639"
  },
  {
    "text": "can unbox some interrupt cases for example between uh between models",
    "start": "434639",
    "end": "440340"
  },
  {
    "text": "compiled by different languages and last one is steering graph proposal I'll",
    "start": "440340",
    "end": "445620"
  },
  {
    "text": "explain it a bit later let's take a deep look at some questions",
    "start": "445620",
    "end": "450960"
  },
  {
    "start": "447000",
    "end": "453000"
  },
  {
    "text": "implementation details we start from cutting any it's a base",
    "start": "450960",
    "end": "456000"
  },
  {
    "start": "453000",
    "end": "704000"
  },
  {
    "text": "type for everything in kotlin something like Java and object but better",
    "start": "456000",
    "end": "461400"
  },
  {
    "text": "from the question developer point of view it's only free functions and no",
    "start": "461400",
    "end": "468539"
  },
  {
    "text": "fields but actually in terms of wasm it's a structure with four Fields so every",
    "start": "468539",
    "end": "476460"
  },
  {
    "text": "instance of any has this four fields the table field refers on the table",
    "start": "476460",
    "end": "482699"
  },
  {
    "text": "structure for the specific class now it is nsv table all instances of any shares",
    "start": "482699",
    "end": "490860"
  },
  {
    "text": "one instance of the table structure with references to the specific function",
    "start": "490860",
    "end": "496319"
  },
  {
    "text": "implementations the table virtual table used for dispatch virtual calls as you",
    "start": "496319",
    "end": "502560"
  },
  {
    "text": "can guess let's introduce an overcast full which",
    "start": "502560",
    "end": "508080"
  },
  {
    "text": "extends any with a with one more field in wasm we extend any structure",
    "start": "508080",
    "end": "515640"
  },
  {
    "text": "repeat fields from any and introduce the new one we also want to change some something",
    "start": "515640",
    "end": "522899"
  },
  {
    "text": "some method and add a new one so to achieve that we introduce a new virtual",
    "start": "522899",
    "end": "529740"
  },
  {
    "text": "table and change the type of origin of the table original V table field to a more",
    "start": "529740",
    "end": "537540"
  },
  {
    "text": "specific one to avoid costs when we try to call some function in the new table",
    "start": "537540",
    "end": "543600"
  },
  {
    "text": "we change the referencing for tostring and introduce a new field bar for new",
    "start": "543600",
    "end": "551580"
  },
  {
    "text": "method okay how to access fields and core methods now",
    "start": "551580",
    "end": "557700"
  },
  {
    "text": "accessing Fields is simple say we have a local variable D referencing on instance",
    "start": "557700",
    "end": "563880"
  },
  {
    "text": "4. we have a stack for values and instructions to execute",
    "start": "563880",
    "end": "570720"
  },
  {
    "text": "first we need to put reference to the stack using Google get instruction",
    "start": "570720",
    "end": "576240"
  },
  {
    "text": "and when we use track get to access the field it takes reference from the stack",
    "start": "576240",
    "end": "582540"
  },
  {
    "text": "read the field and put failure to to the stack easy",
    "start": "582540",
    "end": "588600"
  },
  {
    "text": "to do a virtual call we need a bit more we have the same variable d uh",
    "start": "588600",
    "end": "596580"
  },
  {
    "text": "with instance of four and now we want to call the method bar let's do that we first put the on the",
    "start": "596580",
    "end": "604260"
  },
  {
    "text": "stack two times the first is an argument of the method and second we will use to",
    "start": "604260",
    "end": "610440"
  },
  {
    "text": "reach the method next we read the table field from the instance",
    "start": "610440",
    "end": "616260"
  },
  {
    "text": "and then read bar from the table and finally we can call it and see",
    "start": "616260",
    "end": "622080"
  },
  {
    "text": "result on the stack for comparison aesthetical or function",
    "start": "622080",
    "end": "627480"
  },
  {
    "text": "we know at compile time it is only one instruction of course if a function has some",
    "start": "627480",
    "end": "634440"
  },
  {
    "text": "parameters we also need to put arguments on the stake before call it cotton also has concept of interfaces",
    "start": "634440",
    "end": "642779"
  },
  {
    "text": "and it's much trigger let's say the same class 4 is implementing interface timer",
    "start": "642779",
    "end": "650940"
  },
  {
    "text": "worker and maybe something else so we introduce a new structure a table one",
    "start": "650940",
    "end": "656959"
  },
  {
    "text": "with fields for each Implement implemented interface for each interface we have a separate",
    "start": "656959",
    "end": "663899"
  },
  {
    "text": "structure similar to the table with references to actual implementations",
    "start": "663899",
    "end": "670320"
  },
  {
    "text": "and calling interface methods is similar to Virtual one what we've seen before",
    "start": "670320",
    "end": "675800"
  },
  {
    "text": "but needs some slightly more instructions here is comparison of different calls it",
    "start": "675800",
    "end": "683760"
  },
  {
    "text": "gives it gives a good sense of cost of course",
    "start": "683760",
    "end": "689459"
  },
  {
    "text": "but be careful it doesn't necessarily mean for example what every virtual call",
    "start": "689459",
    "end": "696540"
  },
  {
    "text": "is five five times slower than every static call there are many aspects what",
    "start": "696540",
    "end": "701940"
  },
  {
    "text": "could affect your runtime performance let's move to string internals",
    "start": "701940",
    "end": "708839"
  },
  {
    "start": "704000",
    "end": "828000"
  },
  {
    "text": "must real world application work with strings award so string implementation may have a big",
    "start": "708839",
    "end": "715920"
  },
  {
    "text": "influence on the performance and memory usage of your application we had some simple native implementation",
    "start": "715920",
    "end": "723600"
  },
  {
    "text": "which is just wrapper over array of charts and it is good both in terms of",
    "start": "723600",
    "end": "729540"
  },
  {
    "text": "memory and footprint memory footprint and performance except one thing is",
    "start": "729540",
    "end": "735620"
  },
  {
    "text": "concatenation it is a purple operation of strings uh during concatenation over default",
    "start": "735620",
    "end": "743160"
  },
  {
    "text": "strings especially in hot path is not can is considered bad practice in many",
    "start": "743160",
    "end": "749579"
  },
  {
    "text": "languages and these languages usually have something like string builder in",
    "start": "749579",
    "end": "755160"
  },
  {
    "text": "kotlin anyway writing concatenation is much simpler and it is easy to",
    "start": "755160",
    "end": "761420"
  },
  {
    "text": "underestimate the hotness of your code so to optimize this case we change it as",
    "start": "761420",
    "end": "768420"
  },
  {
    "text": "string representation by adding optional reference to prefix and length",
    "start": "768420",
    "end": "775260"
  },
  {
    "text": "assume we have two strings wasm and Io if we concatenate them we will get an",
    "start": "775260",
    "end": "781740"
  },
  {
    "text": "object reference to the left string and share the array with right one it could",
    "start": "781740",
    "end": "788160"
  },
  {
    "text": "be changed like this until we fold it it's fought On Demand on all our",
    "start": "788160",
    "end": "794279"
  },
  {
    "text": "operations now it is good on concatenations in the future we can consider improving",
    "start": "794279",
    "end": "800279"
  },
  {
    "text": "built-in string for other cases but there is a better option",
    "start": "800279",
    "end": "806579"
  },
  {
    "text": "it is string graph proposal the preliminary results of our experiments are promising 60 times",
    "start": "806579",
    "end": "815279"
  },
  {
    "text": "faster in interrupt microbinch marks and up to three times faster and on DB",
    "start": "815279",
    "end": "821820"
  },
  {
    "text": "monster Benchmark what do you see it works a lot with dom",
    "start": "821820",
    "end": "828120"
  },
  {
    "start": "828000",
    "end": "849000"
  },
  {
    "text": "uh let's move out and look at what is already possible to do with quacking",
    "start": "828120",
    "end": "834420"
  },
  {
    "text": "wasm and uh the exciting opportunities there are",
    "start": "834420",
    "end": "840660"
  },
  {
    "text": "it is jetbag composed delivery the decorative UI toolkit in kotlin",
    "start": "840660",
    "end": "846380"
  },
  {
    "text": "developed by Google for Android sometime ago a team in Japan's took it",
    "start": "846380",
    "end": "852779"
  },
  {
    "start": "849000",
    "end": "874000"
  },
  {
    "text": "and make it multi-platform and available on desktop for example so now you can write multiplied from",
    "start": "852779",
    "end": "859800"
  },
  {
    "text": "application and use compose for UI by writing code like on this slide and now",
    "start": "859800",
    "end": "866220"
  },
  {
    "text": "it now works with codeine wasm it's",
    "start": "866220",
    "end": "871860"
  },
  {
    "text": "it is demo it is demo originally built for this",
    "start": "871860",
    "end": "878220"
  },
  {
    "start": "874000",
    "end": "893000"
  },
  {
    "text": "this club but run inside the browser you can follow the link on the top and",
    "start": "878220",
    "end": "884459"
  },
  {
    "text": "play with live demo it works perfectly in Chrome and Firefox",
    "start": "884459",
    "end": "891740"
  },
  {
    "start": "893000",
    "end": "908000"
  },
  {
    "text": "even more you can debug its other question sources inspect vocal variables",
    "start": "894000",
    "end": "899880"
  },
  {
    "text": "and call stack very soon now it's a concept to show something cool thanks",
    "start": "899880",
    "end": "906300"
  },
  {
    "text": "pretty excited about the debugging story um so yeah that's uh that's super",
    "start": "906300",
    "end": "911760"
  },
  {
    "start": "908000",
    "end": "1112000"
  },
  {
    "text": "exciting currently coaching was the mostly target the browser and I must have a side guy I also like to do",
    "start": "911760",
    "end": "917940"
  },
  {
    "text": "front-end development so I would like to explore what uh could be done via uh by",
    "start": "917940",
    "end": "924180"
  },
  {
    "text": "continuism for other kind of workloads so earlier this year I took the decision to create a new project and this new",
    "start": "924180",
    "end": "931500"
  },
  {
    "text": "project is cover them the goal of co-azam is basically to explore server",
    "start": "931500",
    "end": "936540"
  },
  {
    "text": "side and full stack development with cotton and webassembly by leveraging Wazi for interacting with the system and",
    "start": "936540",
    "end": "943920"
  },
  {
    "text": "component model in order to implement the interoperability",
    "start": "943920",
    "end": "949320"
  },
  {
    "text": "the vision Beyond cover them just limited to kotlin it's a kind of opinionated participation of what could",
    "start": "949320",
    "end": "955920"
  },
  {
    "text": "be the web assembly ecosystem in the future the idea is that was mgc is going to",
    "start": "955920",
    "end": "961500"
  },
  {
    "text": "change a bit the landscape so sure people will continue to use rest and other languages to create nice and super",
    "start": "961500",
    "end": "967440"
  },
  {
    "text": "performance application but I think there will be a lot of people that will begin to use languages that Target was",
    "start": "967440",
    "end": "973860"
  },
  {
    "text": "mgc like kotlin Dart Java to write code that will run in the browser or on",
    "start": "973860",
    "end": "979380"
  },
  {
    "text": "server side sharing the business logic and that's pretty exciting component",
    "start": "979380",
    "end": "984899"
  },
  {
    "text": "model will likely be used to interact with the libraries and the various components that are written in different",
    "start": "984899",
    "end": "990240"
  },
  {
    "text": "languages and here I think that we need languages that are closer to the metal",
    "start": "990240",
    "end": "995519"
  },
  {
    "text": "that have no or very literal times and that's where in my opinion rest Zig C",
    "start": "995519",
    "end": "1001339"
  },
  {
    "text": "and C plus plus will dominate to write super super fast components with a very",
    "start": "1001339",
    "end": "1006980"
  },
  {
    "text": "tiny footprint and those components will be exposed via work repositories which will be close to what you have with npm",
    "start": "1006980",
    "end": "1014600"
  },
  {
    "text": "with the JavaScript ecosystem or Maven Central in the gvm world to basically publish the various components maybe",
    "start": "1014600",
    "end": "1021680"
  },
  {
    "text": "with work and webassembly that will be more decentralized but the ideas we need to expose some components that will be",
    "start": "1021680",
    "end": "1028579"
  },
  {
    "text": "consumed by other languages so I have begin to create this coversm",
    "start": "1028579",
    "end": "1034040"
  },
  {
    "text": "library that provide and document values libraries you can follow the link to to check the documentation generated for",
    "start": "1034040",
    "end": "1040100"
  },
  {
    "text": "kotlin the first package is worthy so the goal is to provide for now on Library sites and Facilities to deal",
    "start": "1040100",
    "end": "1046880"
  },
  {
    "text": "with the file system on their non-viable random number generation Etc ultimately",
    "start": "1046880",
    "end": "1052100"
  },
  {
    "text": "I hope zalim and his team will integrate that natively in continuous but for now",
    "start": "1052100",
    "end": "1057140"
  },
  {
    "text": "I explore that on Library side and since I am a spring guy I work on web servers",
    "start": "1057140",
    "end": "1062600"
  },
  {
    "text": "Etc I have begin to basically introduce some kotlin API that I'm going to demonstrate to create a web server",
    "start": "1062600",
    "end": "1069440"
  },
  {
    "text": "Define HTTP roots and begin to build web application a web client will follow in",
    "start": "1069440",
    "end": "1075200"
  },
  {
    "text": "the in the upcoming weeks that's interesting to see that I only",
    "start": "1075200",
    "end": "1081140"
  },
  {
    "text": "needed a very small API surface from the kotlin wasm team to basically Bridge the",
    "start": "1081140",
    "end": "1086660"
  },
  {
    "text": "wasmgc world with the linear memory so the kotlin team has provided to me a memory allocator that basically allow me",
    "start": "1086660",
    "end": "1094460"
  },
  {
    "text": "to bridge these two words and cartoon wasm also provides the capability to import the Amazon function and that",
    "start": "1094460",
    "end": "1101299"
  },
  {
    "text": "allow me to import the Wazi preview 1 API and directly Bridge it to expose",
    "start": "1101299",
    "end": "1106340"
  },
  {
    "text": "that in a higher level coded API so if the network got are with us yes",
    "start": "1106340",
    "end": "1111980"
  },
  {
    "text": "that works so here is what looks like creating a new server-side application with kotlin so",
    "start": "1111980",
    "end": "1118220"
  },
  {
    "start": "1112000",
    "end": "1313000"
  },
  {
    "text": "you are declaring the Western platform you are declaring a set of dependencies for kubasm and we are also leveraging",
    "start": "1118220",
    "end": "1124340"
  },
  {
    "text": "the Western version of kotlin platform libraries that we are using for data validation like here so I'm create my",
    "start": "1124340",
    "end": "1131000"
  },
  {
    "text": "data class user I'm defining some validation rules that will be used on backend or front-end or",
    "start": "1131000",
    "end": "1137440"
  },
  {
    "text": "where I want I'm creating this fake user service repository that Implement find",
    "start": "1137440",
    "end": "1143660"
  },
  {
    "text": "all and find one method and then I just begin to write my server side application creating an instance of this",
    "start": "1143660",
    "end": "1150380"
  },
  {
    "text": "user service I'm then going to create this web server I could specify the purchase here I'm",
    "start": "1150380",
    "end": "1157700"
  },
  {
    "text": "just going to Define with the router DSL various HTTP predicate that will match",
    "start": "1157700",
    "end": "1163460"
  },
  {
    "text": "so here we want that match for text HTML media type we can Define some endpoints",
    "start": "1163460",
    "end": "1169880"
  },
  {
    "text": "with get post boot patch Etc here we are just going to do a simple get at the",
    "start": "1169880",
    "end": "1175280"
  },
  {
    "text": "roots it will return an HTTP response with the OK status code and we are going to create a body with the method that",
    "start": "1175280",
    "end": "1183320"
  },
  {
    "text": "will basically create the HTML contents using a kotlin DSL",
    "start": "1183320",
    "end": "1189980"
  },
  {
    "text": "um providing full autocomplete so here I'm building my HTML like that so this is regular cutting code we don't have",
    "start": "1189980",
    "end": "1196400"
  },
  {
    "text": "macros we have dsls where we can mix a pretty decorative approach with some",
    "start": "1196400",
    "end": "1201440"
  },
  {
    "text": "real kotlin statement like um users that for Rich and then I'm",
    "start": "1201440",
    "end": "1207020"
  },
  {
    "text": "going to iterate on each list element to provide thanks to kotlin interpolations",
    "start": "1207020",
    "end": "1212179"
  },
  {
    "text": "the user Edge Etc this code I'm currently using internet server side but",
    "start": "1212179",
    "end": "1217280"
  },
  {
    "text": "that could use exactly the same code on front end or whatever I want",
    "start": "1217280",
    "end": "1222500"
  },
  {
    "text": "so here I have my function that generate a string with the HTML body I'm just",
    "start": "1222500",
    "end": "1228500"
  },
  {
    "text": "calling it an user service.finder and that's it obviously I can create values",
    "start": "1228500",
    "end": "1234080"
  },
  {
    "text": "of the endpoint I could do nested request predicates I could expose the static resources that are in a directory",
    "start": "1234080",
    "end": "1240559"
  },
  {
    "text": "yeah we have pretty pretty good capabilities there the little trick is that for now I'm using node.js API to",
    "start": "1240559",
    "end": "1247100"
  },
  {
    "text": "expose that because we don't have yet a standalone was your own time that provide both westm GCS report and what's",
    "start": "1247100",
    "end": "1253160"
  },
  {
    "text": "this report so for now I'm basically starting node.js I compiled Michael clean project to wasm",
    "start": "1253160",
    "end": "1259580"
  },
  {
    "text": "and then I run it with node.js and that's it",
    "start": "1259580",
    "end": "1264860"
  },
  {
    "text": "so let's focus a bit more on the deployment side of the story because this is pretty important for now I do",
    "start": "1264860",
    "end": "1271100"
  },
  {
    "text": "little trick like I said I'm using node.js and node.js API for the socket bar because not yet available but we are",
    "start": "1271100",
    "end": "1277340"
  },
  {
    "text": "working to introduce smgc reports into the values by zero run times like what's",
    "start": "1277340",
    "end": "1282440"
  },
  {
    "text": "the match was on time and that will be the case when that will be the case we are going to be able to deploy that as a",
    "start": "1282440",
    "end": "1288799"
  },
  {
    "text": "purewassee workload without any JavaScript involved we can ship that to Docker to any kubernetes platform or to",
    "start": "1288799",
    "end": "1296059"
  },
  {
    "text": "cloud or Edge platform that supports wazam and Wazee so the goal is really to deploy a very small like let's say it",
    "start": "1296059",
    "end": "1303500"
  },
  {
    "text": "will be 200 kilobytes a web application instead of 100 megabytes container that",
    "start": "1303500",
    "end": "1310100"
  },
  {
    "text": "you have typically currently with Enterprise solution another area where we do some work in",
    "start": "1310100",
    "end": "1317000"
  },
  {
    "start": "1313000",
    "end": "1389000"
  },
  {
    "text": "collaboration with the content team is to understand how the width format which is powering the webassembly component",
    "start": "1317000",
    "end": "1323419"
  },
  {
    "text": "model translate to kotlin and so far this is a pretty good match for example we have with records that translate",
    "start": "1323419",
    "end": "1330440"
  },
  {
    "text": "pretty nicely to kotlin data classes we can even use width option that translate",
    "start": "1330440",
    "end": "1336860"
  },
  {
    "text": "to container safety we don't even need a wrapper on Cut inside to deal with the presence a lot of value and we have some",
    "start": "1336860",
    "end": "1343760"
  },
  {
    "text": "new safety at build time kotlin is a pretty rich language and",
    "start": "1343760",
    "end": "1349159"
  },
  {
    "text": "maybe some people will complain if I say that but there is a lot of common points between rest and and kotlin in terms of",
    "start": "1349159",
    "end": "1355280"
  },
  {
    "text": "Rich constructs and modern language capabilities even if that is obviously not garbage collected so here we can",
    "start": "1355280",
    "end": "1361820"
  },
  {
    "text": "translate with variant to kotlin sealed interfaces and classes so that's a pretty straightforward translation",
    "start": "1361820",
    "end": "1368780"
  },
  {
    "text": "sometimes the translation is more invoked the goal is to have a more",
    "start": "1368780",
    "end": "1374200"
  },
  {
    "text": "continuumatic code so we are translating with results into curtain exceptions so here we are",
    "start": "1374200",
    "end": "1381620"
  },
  {
    "text": "doing a bit more involved translation but the goal here is to provide an idiomatic API to kotlin Developers",
    "start": "1381620",
    "end": "1390200"
  },
  {
    "start": "1389000",
    "end": "1450000"
  },
  {
    "text": "now let's go back a little bit on the front end um we have seen the nice demo that zalima",
    "start": "1390200",
    "end": "1396380"
  },
  {
    "text": "shared about being able to basically you have your compose application for mobile you can basically without doing anything",
    "start": "1396380",
    "end": "1403940"
  },
  {
    "text": "have it on desktop and render it in the browser in the canvas but like I said",
    "start": "1403940",
    "end": "1409820"
  },
  {
    "text": "I'm a web developer so canvas could be a good solution for back offices for example where I don't care to have two",
    "start": "1409820",
    "end": "1416240"
  },
  {
    "text": "megabytes or for them to render the rendering engine but myself I want to be",
    "start": "1416240",
    "end": "1422059"
  },
  {
    "text": "able to use webassembly and kotlin everywhere including for public websites so I know people are a bit skeptic about",
    "start": "1422059",
    "end": "1428720"
  },
  {
    "text": "that but it's it's possible to use components that are basically targeting",
    "start": "1428720",
    "end": "1434960"
  },
  {
    "text": "the dam so here we are using components like button text div Li Etc in order to",
    "start": "1434960",
    "end": "1441860"
  },
  {
    "text": "be able to leverage a compose capability to create reactive UI that will automatically update where you modify",
    "start": "1441860",
    "end": "1448340"
  },
  {
    "text": "the data and the the silly idea would like to explore in collaboration with the kotlin",
    "start": "1448340",
    "end": "1453919"
  },
  {
    "start": "1450000",
    "end": "1535000"
  },
  {
    "text": "team is if they agree on this journey is basically take these compost components where you",
    "start": "1453919",
    "end": "1460100"
  },
  {
    "text": "describe your HTML interface so here really we target the Dom not the canvas the goal is to try to Via kotlin",
    "start": "1460100",
    "end": "1468679"
  },
  {
    "text": "compiler plugin split the server side code from the the client side code so",
    "start": "1468679",
    "end": "1473780"
  },
  {
    "text": "server side we are just generating the initial rendering of the HTML of the HTML it's a bit like the recent",
    "start": "1473780",
    "end": "1480740"
  },
  {
    "text": "JavaScript and jam stack solution are basically going more and more server side and just",
    "start": "1480740",
    "end": "1488000"
  },
  {
    "text": "doing the tiny bits of resumability on front end and so here we would like to",
    "start": "1488000",
    "end": "1493460"
  },
  {
    "text": "leverage the powerful compiler plugin mechanism that there is in kotlin to just extract the binders and the code",
    "start": "1493460",
    "end": "1499880"
  },
  {
    "text": "that is inside the Lambda translate that to Azam and only ship the teeny bit of",
    "start": "1499880",
    "end": "1504919"
  },
  {
    "text": "infrastructure that will allow to resume the rendering recreating the state and carry on side and basically have a very",
    "start": "1504919",
    "end": "1511039"
  },
  {
    "text": "tiny footprint all of that should be invisible for the developer the goal will be to develop server side rendering",
    "start": "1511039",
    "end": "1518059"
  },
  {
    "text": "a site generator I think the goal is to go from Pure server side monitoring to",
    "start": "1518059",
    "end": "1523280"
  },
  {
    "text": "Pure front-end rendering and address the Continuum of use case there is between via just pure configuration that's just",
    "start": "1523280",
    "end": "1530539"
  },
  {
    "text": "an ID that may be not possible I'm not sure but I would like to experiment on that",
    "start": "1530539",
    "end": "1535760"
  },
  {
    "start": "1535000",
    "end": "1664000"
  },
  {
    "text": "so what's next are things the general availability of westmgc without a flag because if you authorize the common",
    "start": "1535760",
    "end": "1542240"
  },
  {
    "text": "demos of continuous without enabling the West mgc report in your browser that won't work thanks to origin trial we can",
    "start": "1542240",
    "end": "1548900"
  },
  {
    "text": "begin to basically yeah make that work on Chrome for your website I hope smgc will be available in your",
    "start": "1548900",
    "end": "1556220"
  },
  {
    "text": "browser without a flag soon and I think that will happen soon on cartoon was on",
    "start": "1556220",
    "end": "1561860"
  },
  {
    "text": "the side footprint improvements are already applied in kotlin 1.9 so the three kilobytes footprint I shared it's",
    "start": "1561860",
    "end": "1569059"
  },
  {
    "text": "with basically internal builds of Colton 1.9 so we need to work you need to work on",
    "start": "1569059",
    "end": "1575179"
  },
  {
    "text": "that to make that possible compost for the web is really one of the first",
    "start": "1575179",
    "end": "1580520"
  },
  {
    "text": "libraries that will take advantage of kotlin wasm capabilities and I really believe this is the right platform for",
    "start": "1580520",
    "end": "1586159"
  },
  {
    "text": "for compose and a lot of potential there currently kotlin was a target a bit the",
    "start": "1586159",
    "end": "1592880"
  },
  {
    "text": "JavaScript ecosystem so I think there will be some Evolution to be able to Target pure Standalone runtime with Wazi",
    "start": "1592880",
    "end": "1600200"
  },
  {
    "text": "like wasn't time was a match without any JavaScript involved so you have a bit of work on that too",
    "start": "1600200",
    "end": "1606140"
  },
  {
    "text": "and currently cotton wazam is experimental and yeah I work on that every day it's experimental so it need",
    "start": "1606140",
    "end": "1614480"
  },
  {
    "text": "to mature a bit to reach the alpha status um on covers on the side so the the",
    "start": "1614480",
    "end": "1619820"
  },
  {
    "text": "framework are beginning to build the dot when release is expected in May so this",
    "start": "1619820",
    "end": "1625100"
  },
  {
    "text": "is the point where you could begin to write some shiny web app with the API I expose",
    "start": "1625100",
    "end": "1631720"
  },
  {
    "text": "we plan to I plan to work on component model maybe contributing codeine with",
    "start": "1631720",
    "end": "1637340"
  },
  {
    "text": "some support in Wheat by engine report uh in Western time I think for",
    "start": "1637340",
    "end": "1644360"
  },
  {
    "text": "that switch to weather Preview 2 when that's possible and explore so the the",
    "start": "1644360",
    "end": "1650240"
  },
  {
    "text": "idea I shared is a bit on the issues so I think I would like to begin by exploring using compost for web and pure server",
    "start": "1650240",
    "end": "1656360"
  },
  {
    "text": "side and then trying to do the clever compiler engineer compiler plugin stuff",
    "start": "1656360",
    "end": "1662179"
  },
  {
    "text": "later thanks a lot you can learn more about cartoon noisem in this link and zelim",
    "start": "1662179",
    "end": "1668720"
  },
  {
    "start": "1664000",
    "end": "1856000"
  },
  {
    "text": "and me are available to answer to your questions thanks",
    "start": "1668720",
    "end": "1673360"
  },
  {
    "text": "thank you",
    "start": "1675460",
    "end": "1678460"
  },
  {
    "text": "any question don't be shy",
    "start": "1683539",
    "end": "1687820"
  },
  {
    "text": "thank you a great presentation um you're talking about how to bring",
    "start": "1701960",
    "end": "1707380"
  },
  {
    "text": "kotlin to to wasam can you compare this to the efforts to bring Java to to to",
    "start": "1707380",
    "end": "1716380"
  },
  {
    "text": "webassembly as well if you see this as like uh stepping step towards that goal",
    "start": "1716380",
    "end": "1723620"
  },
  {
    "text": "um or something that can be done in in parallel and how much of the award that",
    "start": "1723620",
    "end": "1728720"
  },
  {
    "text": "you're doing could be potentially reused to to Java or independent efforts",
    "start": "1728720",
    "end": "1734960"
  },
  {
    "text": "yeah so kotlin has met has made a bet and was mgc a few years ago so they are",
    "start": "1734960",
    "end": "1742100"
  },
  {
    "text": "moving forward and maybe also it's also in time of culture I think that maybe",
    "start": "1742100",
    "end": "1747740"
  },
  {
    "text": "could go faster on kotlin's side but that's true that on Java side there is two main capab two main possibilities to",
    "start": "1747740",
    "end": "1754460"
  },
  {
    "text": "compare the record to um towards them the first one is ground VM so I have been working on guard VM to",
    "start": "1754460",
    "end": "1761299"
  },
  {
    "text": "compare Java workload to Native executable the past four years technically it's possible to use the",
    "start": "1761299",
    "end": "1767360"
  },
  {
    "text": "llvm tool chain to generate wasn't byte code instead of a native executable I",
    "start": "1767360",
    "end": "1772880"
  },
  {
    "text": "don't think this work at has started already but it's technically possible the other possibility is via g2cl which",
    "start": "1772880",
    "end": "1781039"
  },
  {
    "text": "is basically the successor of GWT and that basically historically compiled",
    "start": "1781039",
    "end": "1786679"
  },
  {
    "text": "Java byte code to JavaScript Google is working for several years now to use",
    "start": "1786679",
    "end": "1791960"
  },
  {
    "text": "that to compile to generate wasn't GC and it's working for simple simple",
    "start": "1791960",
    "end": "1798320"
  },
  {
    "text": "example but no reflection supported Etc so here it's super efficient but you can",
    "start": "1798320",
    "end": "1806120"
  },
  {
    "text": "support Advanced feature so I guess worldvm would be the way to support Java for server side and g2cl could be a way",
    "start": "1806120",
    "end": "1813919"
  },
  {
    "text": "to produce very efficient was mgc byte code for the front end and maybe it could be a nice idea to combine both I",
    "start": "1813919",
    "end": "1821600"
  },
  {
    "text": "write one things here we just brains a stooling company we focused more on",
    "start": "1821600",
    "end": "1829700"
  },
  {
    "text": "tooling we want to provide based toiling for debugging for edit editing and so on",
    "start": "1829700",
    "end": "1837020"
  },
  {
    "text": "and it's maybe one thing what is make a",
    "start": "1837020",
    "end": "1842120"
  },
  {
    "text": "special equipment in this area thank you",
    "start": "1842120",
    "end": "1849100"
  },
  {
    "text": "okay thank you [Applause]",
    "start": "1849740",
    "end": "1857789"
  }
]