[
  {
    "text": "[Music]",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "[Applause]",
    "start": "5040",
    "end": "8200"
  },
  {
    "text": "all right folks thank you so much for coming to our talk today filling a registry shaped hole in the wasm",
    "start": "10080",
    "end": "16240"
  },
  {
    "text": "component ecosystem I'm Oscar Spencer I'm a principal engineer at F5 enginex and co-author of the grand programming",
    "start": "16240",
    "end": "22359"
  },
  {
    "text": "language and I am Danny moov co-founder at jaff Labs or uh just another",
    "start": "22359",
    "end": "28519"
  },
  {
    "text": "framework labs all right so today we're going to talk about some of the promises of the component model some of the pain points",
    "start": "28519",
    "end": "35920"
  },
  {
    "text": "that are there war the web assembly registry and then very interesting the",
    "start": "35920",
    "end": "41160"
  },
  {
    "text": "diminishing line between libraries and services and then a little demo so first",
    "start": "41160",
    "end": "47280"
  },
  {
    "text": "some of those component model promises so of course uh being a language author one of the things I've",
    "start": "47280",
    "end": "53960"
  },
  {
    "text": "been telling folks for ages about the component model is that we get to have guest to guest interrup that means me",
    "start": "53960",
    "end": "60519"
  },
  {
    "text": "code that's been authored from my language or your language can interrupt with code written in any other language",
    "start": "60519",
    "end": "66680"
  },
  {
    "text": "via the component model which this is one of the most exciting things about the component model thinking through how",
    "start": "66680",
    "end": "73479"
  },
  {
    "text": "we can change software how we develop software developers picking and choosing libraries from any language ecosystem to",
    "start": "73479",
    "end": "80720"
  },
  {
    "text": "build their projects further than that start thinking about teams in your organization imagine if every team in",
    "start": "80720",
    "end": "87119"
  },
  {
    "text": "your organization could choose whatever Tex stack they want wanted to develop what they were responsible for and then",
    "start": "87119",
    "end": "93079"
  },
  {
    "text": "at the end you just composed it all together into one application starting to think like this starts thinking about",
    "start": "93079",
    "end": "99680"
  },
  {
    "text": "ways that this is pretty powerful for actually developing software of course portability is a huge",
    "start": "99680",
    "end": "106439"
  },
  {
    "text": "one so one of the problems that we see all the time as developers is I've got",
    "start": "106439",
    "end": "111640"
  },
  {
    "text": "code running on my machine but when I send it to you and you run that same code the same thing doesn't happen and",
    "start": "111640",
    "end": "117600"
  },
  {
    "text": "that's incredibly frustrating but with web assm the same code that runs on my machine is",
    "start": "117600",
    "end": "123399"
  },
  {
    "text": "the same code that runs on your machine and going further than that the same",
    "start": "123399",
    "end": "128479"
  },
  {
    "text": "artifact that runs on my machine is the same one that runs on your machine and going even a step further the same",
    "start": "128479",
    "end": "136080"
  },
  {
    "text": "artifact that I'm running and checking against in development is the same one that's running in production now that",
    "start": "136080",
    "end": "141879"
  },
  {
    "text": "might sound like okay that's cool but if you think for a moment about software and how compilers work compilers spit",
    "start": "141879",
    "end": "148440"
  },
  {
    "text": "out different uh instruction depending on what architecture your CPU is on your machine so a lot of us have those fancy",
    "start": "148440",
    "end": "155599"
  },
  {
    "text": "M1 MacBooks and that's pretty sweet but maybe in production you're running on x86 it's not going to be the same code",
    "start": "155599",
    "end": "163319"
  },
  {
    "text": "granted I know there's a few folks here who say well you know the engines are going to you know get different instructions whatever but you understand",
    "start": "163319",
    "end": "170239"
  },
  {
    "text": "from we have sane execution semantics for these things to make sure they actually do run the same on different",
    "start": "170239",
    "end": "176560"
  },
  {
    "text": "platforms and of course sandboxing we need to make sure that",
    "start": "176560",
    "end": "181879"
  },
  {
    "text": "we're all working consistently together across the ecosystem so we do this via Wazi we know hey there are certain",
    "start": "181879",
    "end": "189959"
  },
  {
    "text": "system interfaces that we need just about everywhere we're talking clocks file system IO those sorts of things and",
    "start": "189959",
    "end": "196239"
  },
  {
    "text": "through wazzy we're able to make sure that's all available in a consistent manner but even further making sure that",
    "start": "196239",
    "end": "202200"
  },
  {
    "text": "we only opt into those resources when it makes sense for the applications and we're not just handing out access uh",
    "start": "202200",
    "end": "208280"
  },
  {
    "text": "willy-nilly and conveniently for different runtimes depending on their needs they can actually change the",
    "start": "208280",
    "end": "214799"
  },
  {
    "text": "implementations uh to suit whatever is necessary for that particular runtime which is pretty neat through the power",
    "start": "214799",
    "end": "220879"
  },
  {
    "text": "of virtualization that's how we can say hey actually all these wazzy interfaces let's run them in the browser that's just yet another",
    "start": "220879",
    "end": "227760"
  },
  {
    "text": "implementation so the last thing is we say we can do all of this and it's still going to be performing and a lot of",
    "start": "227760",
    "end": "234560"
  },
  {
    "text": "people are skeptical about this one uh because hey the component model we're not not you know passing or we're not",
    "start": "234560",
    "end": "241519"
  },
  {
    "text": "allowing modules to access other modules memories and that's true we do typically copy data back and forth but through the",
    "start": "241519",
    "end": "247879"
  },
  {
    "text": "power of resources and handles we're able to let data reside in one module and give handles to that data in other",
    "start": "247879",
    "end": "254879"
  },
  {
    "text": "modules and methods to interact on it which actually keeps us from copying data back and forth to keep things",
    "start": "254879",
    "end": "260079"
  },
  {
    "text": "pretty quick so did I lie about that is this is",
    "start": "260079",
    "end": "265440"
  },
  {
    "text": "this true are there pain points with this or is it happy uh yeah so Oscar def definely just highlighted a lot of what",
    "start": "265440",
    "end": "271000"
  },
  {
    "text": "the uh component model promises uh but if anybody here has tried using the",
    "start": "271000",
    "end": "276280"
  },
  {
    "text": "component model today they're definitely are some pain points that you uh hit I mean it is a new technology we just had",
    "start": "276280",
    "end": "282320"
  },
  {
    "text": "the P2 release in January and I thought I'd just talk about a few of the most",
    "start": "282320",
    "end": "287960"
  },
  {
    "text": "common pain points that I've heard people talk about uh so the first one is documentation uh there are certain",
    "start": "287960",
    "end": "294160"
  },
  {
    "text": "workflows that people say just aren't even documented at all and they're correct about that um I think that there",
    "start": "294160",
    "end": "300240"
  },
  {
    "text": "are also things that are outdated and there's actually in the Bode Alliance a",
    "start": "300240",
    "end": "305960"
  },
  {
    "text": "documentation Sig that is specifically uh you know focused on improving documentation and it is like two weeks",
    "start": "305960",
    "end": "312560"
  },
  {
    "text": "old so this is an understood problem that people want to work on uh the other one is composition there are who who who",
    "start": "312560",
    "end": "319000"
  },
  {
    "text": "chairs that uh and I'm the co-chair of the uh doc Sig so bring all your",
    "start": "319000",
    "end": "324800"
  },
  {
    "text": "documentation yeah um and then also uh composition so specifying in one",
    "start": "324800",
    "end": "330759"
  },
  {
    "text": "component that you want to use functionality that's exported from another component uh there are a variety of ways that you can do that I'm going",
    "start": "330759",
    "end": "337000"
  },
  {
    "text": "to show one of the newest ones uh today called whack but so far people have also found this to be something that can be",
    "start": "337000",
    "end": "343360"
  },
  {
    "text": "counterintuitive at times uh another one is distribution uh it is not super easy to find a place uh with a you know",
    "start": "343360",
    "end": "350800"
  },
  {
    "text": "catalog of useful components that you can import into another component uh and similarly if you uh create an",
    "start": "350800",
    "end": "357440"
  },
  {
    "text": "interesting component there's not an easy way to make that easy for other people to import into their components",
    "start": "357440",
    "end": "363400"
  },
  {
    "text": "uh and then reproducibility would be things like sver uh acting on wasm so that that way you're able to you know",
    "start": "363400",
    "end": "369199"
  },
  {
    "text": "produce the same thing every time and what I'd like to point out is basically all four of these bullet points are",
    "start": "369199",
    "end": "376520"
  },
  {
    "text": "things that we expect out of a registry if you go to npm or you go look at",
    "start": "376520",
    "end": "381599"
  },
  {
    "text": "crates.io every Library there is documented uh it's very clear how you",
    "start": "381599",
    "end": "388120"
  },
  {
    "text": "import the functions that those things export uh you can do cargo install or npm install and go get all of the things",
    "start": "388120",
    "end": "394919"
  },
  {
    "text": "and it's going to create a lock file and happen in a reproducible way so essentially uh what I'm indicating is",
    "start": "394919",
    "end": "401000"
  },
  {
    "text": "that the component model ecosystem doesn't have a registry that serves these purposes right now uh and I think",
    "start": "401000",
    "end": "408400"
  },
  {
    "text": "that's what is largely responsible for some of the most common devx complaints that people have um and so we are going",
    "start": "408400",
    "end": "415599"
  },
  {
    "text": "to talk about Warg which is a project that is also under the bik code Alliance there is a registry Sig which I also",
    "start": "415599",
    "end": "421199"
  },
  {
    "text": "attend regularly and uh yeah Warg stands for the web assembly",
    "start": "421199",
    "end": "426720"
  },
  {
    "text": "registry given that it's a little bit misleading because it's actually a protocol uh that is designed for",
    "start": "426720",
    "end": "434360"
  },
  {
    "text": "multiple people to implement so that you could have uh several Registries existing together uh and the two most",
    "start": "434360",
    "end": "441120"
  },
  {
    "text": "interesting features that uh the war protocol has is that it is cryptographically verifiable and Federated and these are both um not",
    "start": "441120",
    "end": "448319"
  },
  {
    "text": "simple things but I'm going to you know concisely say just a little bit about them so anytime there's any kind of sver",
    "start": "448319",
    "end": "454520"
  },
  {
    "text": "event like a package version bump in a registry uh if you want to download that",
    "start": "454520",
    "end": "461440"
  },
  {
    "text": "or publish that there is a record that contributes to a hash that represents the state of the entire registry that",
    "start": "461440",
    "end": "467720"
  },
  {
    "text": "hash is going to get updated every time that anybody publishes a new version of any package and you're actually given",
    "start": "467720",
    "end": "473000"
  },
  {
    "text": "information or your CLI is given information from the server that you are",
    "start": "473000",
    "end": "478319"
  },
  {
    "text": "able to use to show that this record was actually incorporated into the hash that represents the registry at that snapshot",
    "start": "478319",
    "end": "485319"
  },
  {
    "text": "in time so there's really big you know supply chain Security benefits here where you're actually able to be very",
    "start": "485319",
    "end": "492199"
  },
  {
    "text": "certain that the thing that you're installing is actually the thing that the author published uh and that it was",
    "start": "492199",
    "end": "497800"
  },
  {
    "text": "that author who published it uh so we're really happy that you know uh users are going to be able to feel certain yeah",
    "start": "497800",
    "end": "504520"
  },
  {
    "text": "and earlier today uh we mentioned um you know statements from the White House and one of the ones that was mentioned was",
    "start": "504520",
    "end": "509960"
  },
  {
    "text": "exactly supply chain uh security so the fact that this has been baked into the",
    "start": "509960",
    "end": "515080"
  },
  {
    "text": "protocol shows that you know folks are actually thinking about these things the other interesting uh characteristic is",
    "start": "515080",
    "end": "521000"
  },
  {
    "text": "the Federation as I said there are multiple Registries um and so uh you know I think just given what people have",
    "start": "521000",
    "end": "528440"
  },
  {
    "text": "seen in other language communities you know uh a variety of things could happen to a package manager which could be a",
    "start": "528440",
    "end": "534600"
  },
  {
    "text": "huge piece of infrastructure that everybody uses anytime they like do any project using that technology ology uh",
    "start": "534600",
    "end": "540640"
  },
  {
    "text": "so you know if somebody has concerns hey maybe that business could go out of business or you know they could get",
    "start": "540640",
    "end": "546640"
  },
  {
    "text": "acquired by somebody that I don't like or you know a variety of things could happen to them uh that would make people",
    "start": "546640",
    "end": "551760"
  },
  {
    "text": "basically upset about the fact that there was a centralized Place uh Federation you know should help to",
    "start": "551760",
    "end": "556880"
  },
  {
    "text": "alleviate that so every registry uh can actually have packages that depend on packages in a different registry uh and",
    "start": "556880",
    "end": "564200"
  },
  {
    "text": "each one of them handles their own cryptographic verifiability um at this point in time there are two Warg",
    "start": "564200",
    "end": "570399"
  },
  {
    "text": "implementations uh there's one that you can see on uh in the bite code Alliance uh and that is like the reference",
    "start": "570399",
    "end": "576760"
  },
  {
    "text": "implementation and then there's wdev so I guess I'm going to talk a little bit about",
    "start": "576760",
    "end": "582079"
  },
  {
    "text": "W.D uh jaff Labs today is releasing a",
    "start": "582079",
    "end": "587120"
  },
  {
    "text": "public beta on W.D so anybody can go to W.D now and interact with it and they'll",
    "start": "587120",
    "end": "593200"
  },
  {
    "text": "be interacting with a War registry um I'm going to show it off just",
    "start": "593200",
    "end": "598320"
  },
  {
    "text": "a [Applause]",
    "start": "598320",
    "end": "604399"
  },
  {
    "text": "so this is what W.D looks like uh I'm going to show just a little bit of it right now because I know Oscar has",
    "start": "604399",
    "end": "610079"
  },
  {
    "text": "another point that he wants to make but then afterwards I'll come back and I'll do a demo where I show what the workflow would look like in order to interact",
    "start": "610079",
    "end": "616519"
  },
  {
    "text": "with uh W.D so right now there are actually two namespaces when a user",
    "start": "616519",
    "end": "622040"
  },
  {
    "text": "creates an account they get a namespace which is actually a registry uh there are multiple Registries and anytime that",
    "start": "622040",
    "end": "628480"
  },
  {
    "text": "anybody creates an account that is a new registry that is associated with that",
    "start": "628480",
    "end": "633680"
  },
  {
    "text": "namespace so my GitHub handle is this combination of letters uh and these are",
    "start": "633680",
    "end": "639720"
  },
  {
    "text": "all of the packages that I've published and if we want we can go look at these and anytime that a package gets published uh the wit types are analyzed",
    "start": "639720",
    "end": "646839"
  },
  {
    "text": "inside of it and we actually autogenerate the docs on that packages page uh but then we also have an",
    "start": "646839",
    "end": "652880"
  },
  {
    "text": "organization that I created which is wazzy where I've published all of the wazzy interfaces um which many",
    "start": "652880",
    "end": "658600"
  },
  {
    "text": "components are going use so if we want I can go look at say wazzy HTTP and there's going to be a lot of information",
    "start": "658600",
    "end": "664240"
  },
  {
    "text": "here because this does like a whole lot of stuff uh but basically this is an interface uh and these are we'll see",
    "start": "664240",
    "end": "671120"
  },
  {
    "text": "down the line how I actually use the information in these docs when I'm offering components uh down the line but",
    "start": "671120",
    "end": "676959"
  },
  {
    "text": "here we have this and this can even reference uh you know things that are defined in other wazzy packages and um",
    "start": "676959",
    "end": "682880"
  },
  {
    "text": "yeah we can like link over to like pullable so this is like a different wazzy package that this package depends",
    "start": "682880",
    "end": "688240"
  },
  {
    "text": "on so a very experience to Doc RS here um yeah I'll give it back to Oscar for",
    "start": "688240",
    "end": "694079"
  },
  {
    "text": "just a second and then we can go demo the rest of it so there's this diminishing line between libraries and",
    "start": "694079",
    "end": "700320"
  },
  {
    "text": "services and I'll tell you what we're talking about when we say that so when you think about a library what is it",
    "start": "700320",
    "end": "706440"
  },
  {
    "text": "it's importable functionality right you're writing some software and you think oh man I really want some extra",
    "start": "706440",
    "end": "713800"
  },
  {
    "text": "code that somebody else wrote and you bring it in so you're you know thinking through oh that's your mpm packages is",
    "start": "713800",
    "end": "719320"
  },
  {
    "text": "your crate. that's what you're thinking through use simber and things like that for dependency resolution when we think",
    "start": "719320",
    "end": "725760"
  },
  {
    "text": "about Services you don't import Services they're just kind of there we deploy",
    "start": "725760",
    "end": "732079"
  },
  {
    "text": "them and we have some way of interacting with those Services typically they're",
    "start": "732079",
    "end": "737160"
  },
  {
    "text": "going to be sandbox they're going to be multi-tenant maybe you have a bunch of different users who can interact with it",
    "start": "737160",
    "end": "742680"
  },
  {
    "text": "um maybe you're deploying you know using Docker or something like that what if we could take a service",
    "start": "742680",
    "end": "751079"
  },
  {
    "text": "that's been deployed and just import it as a library that's something that the",
    "start": "751079",
    "end": "756480"
  },
  {
    "text": "component model enables maybe you have some uh services that are talking to each other over HTTP and there's no real",
    "start": "756480",
    "end": "763480"
  },
  {
    "text": "reason for that other than maybe within your organization it's just two different teams that work on those services but if you could just compose",
    "start": "763480",
    "end": "771240"
  },
  {
    "text": "those two Services together into one you could save a bunch of network traffic maybe it's only within you know the same",
    "start": "771240",
    "end": "777320"
  },
  {
    "text": "kubernetes pod but getting rid of uh stuff like that helps with a ton of overhead a way you can think about this",
    "start": "777320",
    "end": "783880"
  },
  {
    "text": "as well and bear with me everyone's favorite thing on their laptop is their",
    "start": "783880",
    "end": "789639"
  },
  {
    "text": "node modules folder now yeah it is uh and imagine for just a second you could",
    "start": "789639",
    "end": "797240"
  },
  {
    "text": "run Docker containers within your node modules I'm sorry if that made you want to vomit like in the auditorium right",
    "start": "797240",
    "end": "804160"
  },
  {
    "text": "now but when you think about the component model that's sort of exactly what this is is because I can say hey I",
    "start": "804160",
    "end": "811760"
  },
  {
    "text": "have this component which is not dependent on some operating system or",
    "start": "811760",
    "end": "817240"
  },
  {
    "text": "Linux that's running with it that's been packaged with it it's simply the functionality that I wanted maybe a",
    "start": "817240",
    "end": "822360"
  },
  {
    "text": "collection of wazzy interfaces so it ends up being quite a bit smaller and being able to have artifacts like that",
    "start": "822360",
    "end": "828079"
  },
  {
    "text": "uh that I can just run is actually kind of neat uh you never think about oh let me just import a Docker container or",
    "start": "828079",
    "end": "835160"
  },
  {
    "text": "another thing when you have services that are running you don't care what language that service was implemented in",
    "start": "835160",
    "end": "841199"
  },
  {
    "text": "you're you just care that it has a restful interface or something like that and it's the same idea with components you don't care what the source language",
    "start": "841199",
    "end": "847480"
  },
  {
    "text": "was you just care that you can actually compose them so we're going to see a little bit more about that Danny let's",
    "start": "847480",
    "end": "854040"
  },
  {
    "text": "get to the demo yeah okay so over",
    "start": "854040",
    "end": "859120"
  },
  {
    "text": "here let's go like this and let's also go like",
    "start": "859120",
    "end": "864560"
  },
  {
    "text": "that so I'm basically going to show off uh several components and what it would",
    "start": "864560",
    "end": "870199"
  },
  {
    "text": "be like to use these components that exist in the registry together um so I guess we'll just start with one of them",
    "start": "870199",
    "end": "876519"
  },
  {
    "text": "and then go through one by one uh the very first one that I have is uh is",
    "start": "876519",
    "end": "881680"
  },
  {
    "text": "actually what's called a wit package so if we come and we actually look at uh any of the ones that I publish under",
    "start": "881680",
    "end": "887519"
  },
  {
    "text": "wazzy these are all uh just wit packages so they describe the shape of something",
    "start": "887519",
    "end": "893240"
  },
  {
    "text": "that could exist and you could have multiple different things that implement the interfaces that are defined in a wit",
    "start": "893240",
    "end": "898839"
  },
  {
    "text": "package package so in the what the demo that we're using uh today I'm going to",
    "start": "898839",
    "end": "904759"
  },
  {
    "text": "look at the shapes wi package that I published that exists uh outside of uh",
    "start": "904759",
    "end": "910639"
  },
  {
    "text": "wazzy and so here what we have is basically several worlds and we can use",
    "start": "910639",
    "end": "916920"
  },
  {
    "text": "any of these worlds to describe the shape of a specific component and I'll uh actually demonstrate how I've",
    "start": "916920",
    "end": "924199"
  },
  {
    "text": "basically already published all of these components to the registry uh before the talk but I'll do one test example so",
    "start": "924199",
    "end": "930759"
  },
  {
    "text": "that you can see how you would actually go about authoring a component that implements a specific interface that was published elsewhere so right if we",
    "start": "930759",
    "end": "937240"
  },
  {
    "text": "wanted to let's just say that I wanted to create a new package and uh we could call it uh we could call it my component",
    "start": "937240",
    "end": "944720"
  },
  {
    "text": "the default name for a package so then over here I can say",
    "start": "944720",
    "end": "950319"
  },
  {
    "text": "cargo component new library Target and then the name of the uh shape component",
    "start": "950319",
    "end": "960920"
  },
  {
    "text": "was the Nam space and the package name and the name of the world so I'll say m a o v e",
    "start": "961199",
    "end": "967600"
  },
  {
    "text": "DJ shapes and then we can pick any of these worlds that are here why don't we",
    "start": "967600",
    "end": "972680"
  },
  {
    "text": "do local hashmap so if I do local hashmap here and then let's call it my",
    "start": "972680",
    "end": "982120"
  },
  {
    "text": "component so what it's doing is one second",
    "start": "982959",
    "end": "990920"
  },
  {
    "text": "and it's the local Hatchy map that's right I forgot I uh inserted an i in",
    "start": "992839",
    "end": "998880"
  },
  {
    "text": "here because there's a data structure in Rust natively called hashmap and I wanted them to have different names uh",
    "start": "998880",
    "end": "1005639"
  },
  {
    "text": "so um thank you Oscar so what that did is it actually created this component called my component over here that",
    "start": "1005639",
    "end": "1012759"
  },
  {
    "text": "actually checked in the registry what the shape is that's defined in this package and generated something for me",
    "start": "1012759",
    "end": "1019680"
  },
  {
    "text": "that lets me know what functions I need to implement in order to satisfy the requirements of that world and then I",
    "start": "1019680",
    "end": "1024798"
  },
  {
    "text": "can go and Implement that any way that I want and if I come over here then and I uh so that was called my component and I",
    "start": "1024799",
    "end": "1030720"
  },
  {
    "text": "can do cargo component build and then let's uh copy that binary",
    "start": "1030720",
    "end": "1037959"
  },
  {
    "text": "up somewhere where it's easier to access and then I can do Warg",
    "start": "1037959",
    "end": "1046280"
  },
  {
    "text": "publish and that was called my component and this",
    "start": "1046280",
    "end": "1053480"
  },
  {
    "text": "is my component and we'll do it at version",
    "start": "1053480",
    "end": "1059120"
  },
  {
    "text": "0.0.1 and uh give it just a second I think this works a little bit uh faster",
    "start": "1059120",
    "end": "1065240"
  },
  {
    "text": "in the states uh but now if we come back over",
    "start": "1065240",
    "end": "1070200"
  },
  {
    "text": "here and I called that my component right so it actually is published here",
    "start": "1071000",
    "end": "1078000"
  },
  {
    "text": "now automatically generated docs for that component and it's actually giving information about the implementation",
    "start": "1078000",
    "end": "1084360"
  },
  {
    "text": "that was provided in this component so we would say that this component is an implementation of uh the world that is",
    "start": "1084360",
    "end": "1090400"
  },
  {
    "text": "defined in this interface so now over here basically all of the components that we're using today were created and",
    "start": "1090400",
    "end": "1095720"
  },
  {
    "text": "published using that process that I just showed and now we're going to show how you can use wack to compose all of these",
    "start": "1095720",
    "end": "1101400"
  },
  {
    "text": "things together in a variety of ways wack is a new Tool uh stands for web assembly composition uh created by Peter",
    "start": "1101400",
    "end": "1108799"
  },
  {
    "text": "tun who's made a lot of really useful tools for web assembly composition shout out to our boy Peter he's really done a",
    "start": "1108799",
    "end": "1115440"
  },
  {
    "text": "lot to make composition really easy for us and I'm really appreciative of all the work that he's done so the very first uh component that we're going to",
    "start": "1115440",
    "end": "1121559"
  },
  {
    "text": "like start composing things with is uh actually one that Oscar authored and Oscar if you want to tell us a little",
    "start": "1121559",
    "end": "1127840"
  },
  {
    "text": "bit about this component yeah so actually real quick let's hop over to this wit file um so",
    "start": "1127840",
    "end": "1136280"
  },
  {
    "text": "the interface that this is implementing is this hashy map interface so we want",
    "start": "1136280",
    "end": "1141559"
  },
  {
    "text": "uh a component that implements a hashmap uh and it needs a Constructor it needs",
    "start": "1141559",
    "end": "1147000"
  },
  {
    "text": "uh get and it needs Keys um so decided to do this in Grain because knew it' be pretty easy so in this case um there are",
    "start": "1147000",
    "end": "1154880"
  },
  {
    "text": "some bind genin that happened and then the Constructor for this uh we just included the grain map module because",
    "start": "1154880",
    "end": "1161440"
  },
  {
    "text": "it's already a perfectly good um hashmap implementation uh we make a map set some",
    "start": "1161440",
    "end": "1166919"
  },
  {
    "text": "values in this case uh this is uh owed to our local Austin web assembly Meetup",
    "start": "1166919",
    "end": "1172080"
  },
  {
    "text": "folks uh go to your local meetups they're awesome uh but we make that and then for get uh that one's pretty easy",
    "start": "1172080",
    "end": "1178600"
  },
  {
    "text": "that's just map. getet uh and for Keys that's also pretty convenient it's map.",
    "start": "1178600",
    "end": "1183679"
  },
  {
    "text": "Keys one thing I want to point out here for this component is that grain does not yet support building components",
    "start": "1183679",
    "end": "1191320"
  },
  {
    "text": "natively uh this is made possible through all of the tooling that exists in the community so this uh happens via",
    "start": "1191320",
    "end": "1199840"
  },
  {
    "text": "WM tools using WM tools you can embed a wit into a Coreal wasm and you can make a component from it and that's exactly",
    "start": "1199840",
    "end": "1206120"
  },
  {
    "text": "what we do here and that's how we get it to work cool so then I also have this CLI component over here and I wrote this",
    "start": "1206120",
    "end": "1213280"
  },
  {
    "text": "one in Rust and the thing that's cool about the component model is we have this like language interupt so it really doesn't matter that Oscar wrote the",
    "start": "1213280",
    "end": "1219760"
  },
  {
    "text": "package that I'm depending on in Grain and that I'm going to import it from rust that's just part of what happens when you compose web simply components",
    "start": "1219760",
    "end": "1225600"
  },
  {
    "text": "with each other uh and so what we're actually going to do is we're going to create this component in a bunch of",
    "start": "1225600",
    "end": "1230640"
  },
  {
    "text": "different ways so this Imports the Hashim map interface and what Oscar just showed off is one implementation of that",
    "start": "1230640",
    "end": "1237760"
  },
  {
    "text": "interface and what I'm going to do is basically import that interface into this rust code hashy map and I'm not",
    "start": "1237760",
    "end": "1244440"
  },
  {
    "text": "saying which implementation of a hashmap I want to use I'm just saying I need one implementation whack is how we're going",
    "start": "1244440",
    "end": "1250559"
  },
  {
    "text": "to specify which component in the registry we want to fulfill that implementation and what we're going to",
    "start": "1250559",
    "end": "1255720"
  },
  {
    "text": "do is we're going to fulfill it with like four different components and it's going to be really cool uh so we'll uh",
    "start": "1255720",
    "end": "1261000"
  },
  {
    "text": "first do it with the first one so the uh CLI whack file that we have here is",
    "start": "1261000",
    "end": "1266640"
  },
  {
    "text": "basically saying so I already published Oscar's component as just the vanilla hashmap and it's under the name under my",
    "start": "1266640",
    "end": "1272559"
  },
  {
    "text": "namespace and if you know it'll get tedious if we go back and look at the every page for every package that we've already published up there but there's",
    "start": "1272559",
    "end": "1278440"
  },
  {
    "text": "one up there that's called you know hashmap under my namespace and then there's also one that's there already",
    "start": "1278440",
    "end": "1283640"
  },
  {
    "text": "that is the CLI that is uh you know basically what I showed right here uh that basically just logs out the values",
    "start": "1283640",
    "end": "1290120"
  },
  {
    "text": "for every key in that hashmap um so what we're saying basically right here is import Oscar's implementation of a",
    "start": "1290120",
    "end": "1297080"
  },
  {
    "text": "hashmap and use that with the CLI and so now we can just run whack in code and",
    "start": "1297080",
    "end": "1304760"
  },
  {
    "text": "this one is c. wac and this one is cwac and this spits",
    "start": "1304760",
    "end": "1310240"
  },
  {
    "text": "out a new component",
    "start": "1310240",
    "end": "1315279"
  },
  {
    "text": "that and I'm in the wrong folder",
    "start": "1315279",
    "end": "1320520"
  },
  {
    "text": "so this is fetching all of the components that I just referenced from the registry and then spitting out a new",
    "start": "1322720",
    "end": "1328080"
  },
  {
    "text": "component that feeds all of the things that we just specified are expected from one component in another component uh so",
    "start": "1328080",
    "end": "1333640"
  },
  {
    "text": "now we can go and we can do wasum time uh on the",
    "start": "1333640",
    "end": "1339799"
  },
  {
    "text": "C.W and boom we see the debug statements that exist in the CLI and the data that",
    "start": "1340559",
    "end": "1345679"
  },
  {
    "text": "it's getting is coming from the component that we published that Oscar wrote earlier yeah and let's take a",
    "start": "1345679",
    "end": "1351000"
  },
  {
    "text": "second to just underscore what just happened okay so we had a component that was authored in Grain That Was Then",
    "start": "1351000",
    "end": "1357600"
  },
  {
    "text": "composed with a component that was authored in Rust so those WM promises that you've heard us talk about for ages",
    "start": "1357600",
    "end": "1364080"
  },
  {
    "text": "they're true and real it went through a registry to pull those components down",
    "start": "1364080",
    "end": "1370120"
  },
  {
    "text": "and then compose them so I'm incredibly hype about this as you all can tell uh",
    "start": "1370120",
    "end": "1375159"
  },
  {
    "text": "thank you Oscar uh so let's do that with a bunch of other ones too so so uh here we can uh you know spend a little less",
    "start": "1375159",
    "end": "1381480"
  },
  {
    "text": "time going through each of these but basically what if I want to make a web server and I want that web server to be defined using Oscar's component right so",
    "start": "1381480",
    "end": "1388679"
  },
  {
    "text": "the first thing that I do is I have this guy over here called hashmap service and it is importing things from uh wzy that",
    "start": "1388679",
    "end": "1396720"
  },
  {
    "text": "enable it to be a uh basically it's satisfying uh this um in or outgoing",
    "start": "1396720",
    "end": "1402720"
  },
  {
    "text": "Handler right from wzy HTTP process from Wy HTTP and if we don't know what these",
    "start": "1402720",
    "end": "1407880"
  },
  {
    "text": "like data types are that we're using like incoming request or response out pram we can actually go look at the",
    "start": "1407880",
    "end": "1413640"
  },
  {
    "text": "documentation that was defined for Wy HTTP and we can find all of those types",
    "start": "1413640",
    "end": "1419400"
  },
  {
    "text": "here if we need uh assistance you know understanding how any of these things are working which is pretty cool um but",
    "start": "1419400",
    "end": "1425080"
  },
  {
    "text": "anyways so this what this is doing is this is also uh importing any implementation of a hashmap and this",
    "start": "1425080",
    "end": "1432000"
  },
  {
    "text": "time we're also going to import Oscar's implementation of a hashmap and then we're going to create a service out of it basically so I also already compiled",
    "start": "1432000",
    "end": "1438720"
  },
  {
    "text": "this publish it to the registry I have a whack file for it here we're again importing Oscar's grain implementation",
    "start": "1438720",
    "end": "1444679"
  },
  {
    "text": "of a hashmap and then we're instantiating our hashmap service with it and I actually have it running over",
    "start": "1444679",
    "end": "1450200"
  },
  {
    "text": "here right now on uh Port 880 and if we want we can see let me do this uh I can",
    "start": "1450200",
    "end": "1458919"
  },
  {
    "text": "actually get uh you know a list of all of the keys that exist and if instead of",
    "start": "1458919",
    "end": "1464000"
  },
  {
    "text": "doing keys I do get then it'll tell me what value is associated with a which is pretty cool so again we have a rust",
    "start": "1464000",
    "end": "1470200"
  },
  {
    "text": "service that is composed with Oscar's grain thing uh grain component but then",
    "start": "1470200",
    "end": "1477039"
  },
  {
    "text": "what we can do is we could actually Implement a different implementation of the hashmap that instead of doing everything in memory actually reaches",
    "start": "1477039",
    "end": "1483039"
  },
  {
    "text": "out to that service right so over here I have client hashmap which is another component and it's also importing",
    "start": "1483039",
    "end": "1489799"
  },
  {
    "text": "interfaces from Wazi and it's actually going to go reach out and make requests to the service that I have running on my",
    "start": "1489799",
    "end": "1495720"
  },
  {
    "text": "machine so if we come back to the CLI we can actually compose the CLI instead",
    "start": "1495720",
    "end": "1502360"
  },
  {
    "text": "with this client HTTP with this HTTP client that reaches out to a service and we'll get the exact same values only",
    "start": "1502360",
    "end": "1508360"
  },
  {
    "text": "this time the hashmap isn't Oscar's hashmap it's a hashmap that talks to the service we made with Oscar's hashmap so",
    "start": "1508360",
    "end": "1515039"
  },
  {
    "text": "uh here we have this remote whack and again we're importing the client hashmap",
    "start": "1515039",
    "end": "1520120"
  },
  {
    "text": "here and then we are uh you know creating the CLI with that and so when",
    "start": "1520120",
    "end": "1525399"
  },
  {
    "text": "we do that we make a new Wim called remote W remote WM and down",
    "start": "1525399",
    "end": "1533200"
  },
  {
    "text": "here we can just do remote WM and we'll see that when we do this one we see the",
    "start": "1533240",
    "end": "1538679"
  },
  {
    "text": "exact same information printed only this time it's hitting the the service that we have running on Port 880 so without",
    "start": "1538679",
    "end": "1545200"
  },
  {
    "text": "changing any code in our CLI at all we just like basically have our whack is configuration where we're saying here's",
    "start": "1545200",
    "end": "1551760"
  },
  {
    "text": "this application it was once running with something that did everything in memory and now instead it's running with",
    "start": "1551760",
    "end": "1557440"
  },
  {
    "text": "something that's actually getting all the information over HTTP without changing a single line of code which I also think is pretty cool and it's also",
    "start": "1557440",
    "end": "1563200"
  },
  {
    "text": "fetching all of that from the registry we're H about this but uh then also just to like show",
    "start": "1563200",
    "end": "1568799"
  },
  {
    "text": "that if we wanted to we could actually Nest a bunch of components we have another one that Oscar actually authored in Grain uh and Oscar do you want to",
    "start": "1568799",
    "end": "1575600"
  },
  {
    "text": "talk about this one a little bit uh yeah so essentially one of the things you'll notice uh with this uh implementation",
    "start": "1575600",
    "end": "1582240"
  },
  {
    "text": "here is that the keys are not alphabetically ordered um it's a hashmap that's not guaranteed so what if we had",
    "start": "1582240",
    "end": "1589919"
  },
  {
    "text": "a service that ordered the keys for us uh so this one is a web service written in Grain uh and that's what it does it",
    "start": "1589919",
    "end": "1597399"
  },
  {
    "text": "it sorts the keys that's the relevant line there um but what's neat about this is this uh component is going to be able",
    "start": "1597399",
    "end": "1604039"
  },
  {
    "text": "to make an HTTP request to the running server and essentially proxying to it sorting the keys and returning the",
    "start": "1604039",
    "end": "1610640"
  },
  {
    "text": "result and that server is again using another component uh and so chaining all",
    "start": "1610640",
    "end": "1616120"
  },
  {
    "text": "these things together is pretty neat let's see Yeah so basically we also have uh that",
    "start": "1616120",
    "end": "1621640"
  },
  {
    "text": "server running on 881 and it is getting information from the service on 880 and it's sorting that information and then",
    "start": "1621640",
    "end": "1628080"
  },
  {
    "text": "we are going to compose our CLI with another guest that instead of reaching out to the surface on 880 reaches out to",
    "start": "1628080",
    "end": "1634279"
  },
  {
    "text": "the service on 881 which will reach out to 880 and get the information that way it'll all come full sir so I have the",
    "start": "1634279",
    "end": "1641080"
  },
  {
    "text": "wack file for that one over here remote sort whack and again so it's",
    "start": "1641080",
    "end": "1648679"
  },
  {
    "text": "pulling in our third implementation of a hashmap which talks to the service that's running on 880 and so if I run",
    "start": "1648679",
    "end": "1654279"
  },
  {
    "text": "the wazen time CLI here with remote sort we will see that it actually hit",
    "start": "1654279",
    "end": "1660279"
  },
  {
    "text": "both of these Services the one running on 8881 and the one running on 880 because the one running on 881 talks to",
    "start": "1660279",
    "end": "1666240"
  },
  {
    "text": "the one that's running on 880 uh and because we're talking to the thing that sorts it we actually see that where as",
    "start": "1666240",
    "end": "1672360"
  },
  {
    "text": "before we were getting like Danny Oscar Calvin we're now consistently getting Calvin Danny Oscar because the second",
    "start": "1672360",
    "end": "1678240"
  },
  {
    "text": "service sorts the information in the first one and so then finally we might end up in a situation where we have a",
    "start": "1678240",
    "end": "1684240"
  },
  {
    "text": "bunch of disparate services that all exist and then we're like wait a second does that actually need to be a bunch of",
    "start": "1684240",
    "end": "1689360"
  },
  {
    "text": "different HTTP services and the whole point that Oscar was making earlier is maybe this line is kind of blurry",
    "start": "1689360",
    "end": "1694519"
  },
  {
    "text": "between libraries and services right so what we could do is we could actually get rid of all these HTTP services that",
    "start": "1694519",
    "end": "1700919"
  },
  {
    "text": "we have and do composition on composition on composition and just do everything in memory so what we have",
    "start": "1700919",
    "end": "1707039"
  },
  {
    "text": "here is a another component uh our local sorder that",
    "start": "1707039",
    "end": "1712240"
  },
  {
    "text": "actually Imports one implementation of hashmap and then exports a different implementation of hashmap that",
    "start": "1712240",
    "end": "1718240"
  },
  {
    "text": "guarantees that it'll be sorted so it's going to import Oscar's original grain hashmap and then spit out a new hashmap",
    "start": "1718240",
    "end": "1725240"
  },
  {
    "text": "that is sorted but this one won't use any HTTP at all and we can uh go and we can look at this uh all local whack and",
    "start": "1725240",
    "end": "1732760"
  },
  {
    "text": "so here we actually see several so first we import Oscar's hashmap component then we import the local sorder component",
    "start": "1732760",
    "end": "1739640"
  },
  {
    "text": "which takes the Oscar's component as an import and then we take the new hashmap and we pass that to the CLI component uh",
    "start": "1739640",
    "end": "1747200"
  },
  {
    "text": "as its hashmap implementation that it requires and so we can see I can turn off I can shut down these Services now",
    "start": "1747200",
    "end": "1754399"
  },
  {
    "text": "and since and it won't break whereas if I was running it with the remote sort it would break if I tried to do it because those Services wouldn't be running but",
    "start": "1754399",
    "end": "1760720"
  },
  {
    "text": "here we're going to do this with the all local plasm and again we're consistently",
    "start": "1760720",
    "end": "1767360"
  },
  {
    "text": "sorted and what we basically did is we just reduced a bunch of separate things that would be analogous to a Docker",
    "start": "1767360",
    "end": "1773640"
  },
  {
    "text": "container being different Services deployed in different ways and then instead turned it into something that seems more like npm where we've done an",
    "start": "1773640",
    "end": "1779600"
  },
  {
    "text": "install and we have like several uh you know libraries doing everything in memory locally and I think that's all",
    "start": "1779600",
    "end": "1786240"
  },
  {
    "text": "the components in the demo right that's all that for components in the demo but uh the fact this is all enabled through",
    "start": "1786240",
    "end": "1792120"
  },
  {
    "text": "the fact that we can compose components together and pull data uh like the actual components and their interfaces",
    "start": "1792120",
    "end": "1797399"
  },
  {
    "text": "from the registry it is and I guess i' just like like to end on you know there are several",
    "start": "1797399",
    "end": "1804200"
  },
  {
    "text": "different use cases that get people really jazzed about the component model some people really like the idea of",
    "start": "1804200",
    "end": "1809600"
  },
  {
    "text": "doing things local first and some people really like the idea of running compute inside of a database and some people are",
    "start": "1809600",
    "end": "1815200"
  },
  {
    "text": "just like yeah just moving compute around instead of moving data around and all these things and I think that the",
    "start": "1815200",
    "end": "1820240"
  },
  {
    "text": "fact that you actually have a place where everybody can put things and then it's actually there's an understood",
    "start": "1820240",
    "end": "1826279"
  },
  {
    "text": "workflow for consuming it inside of another wasm component makes it so that you can actually start to experiment",
    "start": "1826279",
    "end": "1832720"
  },
  {
    "text": "with doing things that like maybe I was making HTTP requests before but now that service instead of sending me an HTTP",
    "start": "1832720",
    "end": "1839640"
  },
  {
    "text": "response sends me a Handler and I actually can do everything local first and then we can you know tie interesting",
    "start": "1839640",
    "end": "1847279"
  },
  {
    "text": "local first Dev in browser development Studios to the registry in a browser and",
    "start": "1847279",
    "end": "1853000"
  },
  {
    "text": "yeah there's just like a lot of room for iteration given that we have this sandboxing that we didn't have before in",
    "start": "1853000",
    "end": "1859240"
  },
  {
    "text": "our libraries so I'd like for people to like you know leave this talk thinking what are the ways that I can take",
    "start": "1859240",
    "end": "1865279"
  },
  {
    "text": "advantage of the fact that my libraries and my services aren't so different from each other anymore absolutely cool and",
    "start": "1865279",
    "end": "1871039"
  },
  {
    "text": "uh that's our",
    "start": "1871039",
    "end": "1873840"
  },
  {
    "text": "talk uh seems like we got some questions yeah and I think we went over but I guess it's probably okay if we do one or",
    "start": "1879519",
    "end": "1885600"
  },
  {
    "text": "two because we're the last Talk of the day yeah do a couple questions uh thank you for the talk um this may be an",
    "start": "1885600",
    "end": "1891919"
  },
  {
    "text": "incredibly silly question so uh pardon in advance but like what happens if you leave the happy path so let's say in",
    "start": "1891919",
    "end": "1898720"
  },
  {
    "text": "your hashmap implementation in language one if you uh want to get a hash for a",
    "start": "1898720",
    "end": "1903880"
  },
  {
    "text": "key that doesn't exist language one would return false and now you implement it in language two and it would return",
    "start": "1903880",
    "end": "1910360"
  },
  {
    "text": "null for example so your contract would still be fulfilled by both but like the implementation details then would leak",
    "start": "1910360",
    "end": "1917120"
  },
  {
    "text": "through is this a problem at all or is this really stupid I love this question",
    "start": "1917120",
    "end": "1922200"
  },
  {
    "text": "um so this is something that uh was solved uh with uh with the component model is what we call the canonical ABI",
    "start": "1922200",
    "end": "1929320"
  },
  {
    "text": "so essentially uh it's an application binary interface uh and it's contracts",
    "start": "1929320",
    "end": "1934480"
  },
  {
    "text": "that are well defined between every single language so we say the way you pass this data across this boundary is",
    "start": "1934480",
    "end": "1941279"
  },
  {
    "text": "specifically in this format and so the bind genin for different languages to actually uh get to this point make sure",
    "start": "1941279",
    "end": "1948360"
  },
  {
    "text": "that the that language is uh you know uh idioms and things are accounted for in that sense but so the um like hashmap",
    "start": "1948360",
    "end": "1956519"
  },
  {
    "text": "interface for example I think uh can you go to the um the wit for the the global",
    "start": "1956519",
    "end": "1962000"
  },
  {
    "text": "one yeah um so yeah this is perfect so if",
    "start": "1962000",
    "end": "1968880"
  },
  {
    "text": "you look at this wit here uh so get returns an option of string uh so the whole point of this type is it might not",
    "start": "1968880",
    "end": "1975679"
  },
  {
    "text": "be there um but I know for for a fact that I don't have to deal with a null or a false I know that with the component",
    "start": "1975679",
    "end": "1982080"
  },
  {
    "text": "model I'm going to get the option type of none and that's going to be consistent across all the languages so a",
    "start": "1982080",
    "end": "1988559"
  },
  {
    "text": "lot of work went into making that happen so shout out to everyone in the WM",
    "start": "1988559",
    "end": "1993919"
  },
  {
    "text": "Community who contributed to that but that was an excellent question and yeah uh I don't know how",
    "start": "1993919",
    "end": "2000360"
  },
  {
    "text": "much time we have to do this do another one right",
    "start": "2000360",
    "end": "2004919"
  },
  {
    "text": "here thank you this this is a great presentation great demo um I was looking at your registry uh just now that's also",
    "start": "2006080",
    "end": "2014039"
  },
  {
    "text": "looks really nice great UI um it's got extra couple of clicks on the authentication so I went to have a look",
    "start": "2014039",
    "end": "2019880"
  },
  {
    "text": "for the repost so I can maybe fix it uh and it's I can't find it that's that piece is close source assum so at this",
    "start": "2019880",
    "end": "2027120"
  },
  {
    "text": "point so there's Warg the uh you know protocol that we were talking about and there's two implementations of it so at",
    "start": "2027120",
    "end": "2032840"
  },
  {
    "text": "this point in time the uh reference implementation is open source and right now the implementation that is used for",
    "start": "2032840",
    "end": "2040039"
  },
  {
    "text": "wdev is not um which we may open source various parts of it I think that's just something that we're going to determine",
    "start": "2040039",
    "end": "2046679"
  },
  {
    "text": "as we see what people want but if you're finding issues we'd love to hear about it and we can well no my question was actually just off the back of that um do",
    "start": "2046679",
    "end": "2054320"
  },
  {
    "text": "you have any actual specific plans around you know avoiding a kind of",
    "start": "2054320",
    "end": "2059839"
  },
  {
    "text": "Docker registry Docker type situation or a secure software supply chain you know",
    "start": "2059839",
    "end": "2065079"
  },
  {
    "text": "um mess how do you what are your plans for that for that registry from a kind of openness and transparency perspective",
    "start": "2065079",
    "end": "2073040"
  },
  {
    "text": "how much have you thought about it yeah I mean we've definitely thought about it and it's a great question thanks for asking um I think that we still I guess",
    "start": "2073040",
    "end": "2081839"
  },
  {
    "text": "we just went live today right and so there are things in there that you know",
    "start": "2081839",
    "end": "2087240"
  },
  {
    "text": "should probably not be open right now because you know it would be like a security vulnerability for them to be",
    "start": "2087240",
    "end": "2092560"
  },
  {
    "text": "open right so I think that just we are going to see how people are using it and make that decision as we understand what",
    "start": "2092560",
    "end": "2098760"
  },
  {
    "text": "our users needs are but uh I think it's very likely that like quite a bit of uh what we're doing ends up being open so",
    "start": "2098760",
    "end": "2104839"
  },
  {
    "text": "yeah also throughout you know remember that the War uh protocol is Federated as well uh so folks freely have the option",
    "start": "2104839",
    "end": "2111640"
  },
  {
    "text": "to say actually we don't want to use that we want to use a different registry um and you know you're freely open to do so and they can all talk to each other",
    "start": "2111640",
    "end": "2117800"
  },
  {
    "text": "so you're not going to lose anything by switching to other registers one more cool um so a lot of",
    "start": "2117800",
    "end": "2125960"
  },
  {
    "text": "libraries and application need embedded files attached files file systems do you",
    "start": "2125960",
    "end": "2131920"
  },
  {
    "text": "have any plans for uh like I don't know what are the artif effects that are distributed by the registry right now",
    "start": "2131920",
    "end": "2138880"
  },
  {
    "text": "and do you have any plans for attached file systems uh yeah well so one thing is you have wzy right so Wazi has a file",
    "start": "2138880",
    "end": "2147480"
  },
  {
    "text": "system virtualization right so they're depending on what your needs are you might be able to just leverage wazzy um",
    "start": "2147480",
    "end": "2153200"
  },
  {
    "text": "but then I guess there's also no no I'm talking more about like a Ser that also or static assets or machine learning",
    "start": "2153200",
    "end": "2160200"
  },
  {
    "text": "where you need some models yeah so I actually do think still uh I might be mistaken here I don't know if you're",
    "start": "2160200",
    "end": "2165280"
  },
  {
    "text": "familiar with Wazi vert uh but I think that Wazi vert actually has a way to mount uh so that it is like persistent",
    "start": "2165280",
    "end": "2172119"
  },
  {
    "text": "file system not something that's like just available on the Fly um we don't have like an immediate plan for uh you",
    "start": "2172119",
    "end": "2178400"
  },
  {
    "text": "know getting that to work inside of like W.D but uh you know that's definitely no no the equivalent would be like uh",
    "start": "2178400",
    "end": "2185400"
  },
  {
    "text": "Docker images right because they have multiple layers there you can have your",
    "start": "2185400",
    "end": "2190560"
  },
  {
    "text": "uh related files inside the image sure but I think that also if this Mount uh",
    "start": "2190560",
    "end": "2197160"
  },
  {
    "text": "that I'm referring to that in Wazi vert actually feeds mounted files into Wazi",
    "start": "2197160",
    "end": "2202920"
  },
  {
    "text": "vert in a persistent way similar to how Docker would and similar to the docker example like if you have a Docker file",
    "start": "2202920",
    "end": "2208800"
  },
  {
    "text": "and say you include files like within a particular layer um similar to that uh in web assembly is through your",
    "start": "2208800",
    "end": "2214960"
  },
  {
    "text": "languages tool chain um like usually like there like a rust Macro for this but like including files that just get",
    "start": "2214960",
    "end": "2220720"
  },
  {
    "text": "embedded within the component itself so you have a ton of different options there but of course potentially there",
    "start": "2220720",
    "end": "2226240"
  },
  {
    "text": "might be options for static files I generally people are pointed to towards like pre-ops where you specify like a",
    "start": "2226240",
    "end": "2232040"
  },
  {
    "text": "local directory that is like what is used from Wy but I'm talking about something else called Bounce and I'm not positive that it does what I'm saying",
    "start": "2232040",
    "end": "2237480"
  },
  {
    "text": "but I think that it might so yeah okay thanks all right folks I believe that's",
    "start": "2237480",
    "end": "2243319"
  },
  {
    "text": "all the time that we've got and we really appreciate all you folks being here with us today and thanks",
    "start": "2243319",
    "end": "2249520"
  },
  {
    "text": "[Music] again",
    "start": "2249520",
    "end": "2254760"
  }
]