[
  {
    "text": "[Music]",
    "start": "1490",
    "end": "7109"
  },
  {
    "text": "hi everyone welcome uh I Am SE Chang and I'm a CTO and a co-founder of company",
    "start": "10240",
    "end": "17359"
  },
  {
    "text": "called inan uh throughout this event we have",
    "start": "17359",
    "end": "22840"
  },
  {
    "text": "many insightful presentation about the how the web assembly is changing the",
    "start": "22840",
    "end": "28840"
  },
  {
    "text": "it uh landscape uh today our Focus turned into",
    "start": "28840",
    "end": "34840"
  },
  {
    "text": "slightly but in different area of role of how web assembly is potentially",
    "start": "34840",
    "end": "41120"
  },
  {
    "text": "changing in in terms of impacting to event driven application especially",
    "start": "41120",
    "end": "47199"
  },
  {
    "text": "real-time services and toward building a next",
    "start": "47199",
    "end": "53239"
  },
  {
    "text": "generation of computer engine using a component model all right so agenda is",
    "start": "53239",
    "end": "60440"
  },
  {
    "text": "first we go over the basics of streaming computation and then say why why we why",
    "start": "60440",
    "end": "67159"
  },
  {
    "text": "the won company will be useful in the area then go to a high level design",
    "start": "67159",
    "end": "72200"
  },
  {
    "text": "decision on why some of the design was made their way and then how we actually",
    "start": "72200",
    "end": "77240"
  },
  {
    "text": "translate into company model and in and in and sprink go with uh some real time",
    "start": "77240",
    "end": "84840"
  },
  {
    "text": "demos and see if that works right so so start with the Whata",
    "start": "84840",
    "end": "91040"
  },
  {
    "text": "stream computation okay so in traditional it",
    "start": "91040",
    "end": "96600"
  },
  {
    "text": "data sort of a pipeline is that you feed the data into a data lake or database a",
    "start": "96600",
    "end": "105040"
  },
  {
    "text": "central and then you pull the data using either a manual process or",
    "start": "105040",
    "end": "111360"
  },
  {
    "text": "application and then further down the line another application pull that data from that another",
    "start": "111360",
    "end": "118200"
  },
  {
    "text": "application so the problem unfortunately is that that's very inefficient it takes sometimes days",
    "start": "118200",
    "end": "125280"
  },
  {
    "text": "and hour hours and days in years to get a very insightful uh analytics and that",
    "start": "125280",
    "end": "132800"
  },
  {
    "text": "translate that into a meaningful business outcomes because you don't want to deal",
    "start": "132800",
    "end": "138879"
  },
  {
    "text": "with the stale knowledge um about your competition and especially about",
    "start": "138879",
    "end": "145800"
  },
  {
    "text": "changing the world Okay so so the way to solve this",
    "start": "145800",
    "end": "153160"
  },
  {
    "text": "problem is thinking in terms of everything as a stream because the the",
    "start": "153160",
    "end": "159400"
  },
  {
    "text": "root of the the cause of this uh issue is because we're treating the data as a",
    "start": "159400",
    "end": "165159"
  },
  {
    "text": "stale as the static static items in reality data is",
    "start": "165159",
    "end": "171800"
  },
  {
    "text": "everchanging uh whether you're talking about your stock market prices your your how",
    "start": "171800",
    "end": "179680"
  },
  {
    "text": "the your customer is purchasing uh your uh your products their habit all those are",
    "start": "179680",
    "end": "188040"
  },
  {
    "text": "changing in real time so you know to deal with this one you have to tr treat",
    "start": "188040",
    "end": "193480"
  },
  {
    "text": "the data as a as really Dynamic environment and so that means treating",
    "start": "193480",
    "end": "199959"
  },
  {
    "text": "everything as a stream so when instead of putting that into Data lake or",
    "start": "199959",
    "end": "206480"
  },
  {
    "text": "databases and sitting there for hours and and days is is computed that as on",
    "start": "206480",
    "end": "212200"
  },
  {
    "text": "the fly so we turn one stream into another stream and using a approach",
    "start": "212200",
    "end": "218200"
  },
  {
    "text": "called stream processing which is to compute that on the Fly and potentially",
    "start": "218200",
    "end": "223239"
  },
  {
    "text": "that could be further down and reach using a machine learning model or some",
    "start": "223239",
    "end": "228439"
  },
  {
    "text": "kind of AI algorithm and turn into meaningful insight and that turns into very low",
    "start": "228439",
    "end": "234959"
  },
  {
    "text": "latency so we are talking in terms of a minutes and and the seconds instead of",
    "start": "234959",
    "end": "242920"
  },
  {
    "text": "dayses okay so to really concise into turn",
    "start": "243840",
    "end": "249799"
  },
  {
    "text": "into what does means of uh stream computation is is turning up events",
    "start": "249799",
    "end": "256600"
  },
  {
    "text": "coming in because a stream is made of events and converting to another",
    "start": "256600",
    "end": "262479"
  },
  {
    "text": "events but really the heart of is is a state without the state is you cannot do",
    "start": "262479",
    "end": "269919"
  },
  {
    "text": "uh aggregation which is basically the H of any kind of analytical",
    "start": "269919",
    "end": "275520"
  },
  {
    "text": "competition okay so with that you could build things like a delivery pipeline where in if you",
    "start": "275520",
    "end": "284600"
  },
  {
    "text": "have Airbase delivery you are taking a order events from the customers and turn",
    "start": "284600",
    "end": "291080"
  },
  {
    "text": "the RO ingredients into food that gets delivered to the",
    "start": "291080",
    "end": "296160"
  },
  {
    "text": "driver um now now nowadays you actually deliver that to drone in other kind of a",
    "start": "296160",
    "end": "303680"
  },
  {
    "text": "uh automated vehicle delivery and then you need some kind of dashboard to",
    "start": "303680",
    "end": "309199"
  },
  {
    "text": "figure out whether everything is happening and whether you are actually making money or not so in order to do this you have to",
    "start": "309199",
    "end": "317000"
  },
  {
    "text": "think in terms of how actually the data flows from the source to sync what does and what is a latency involved and what",
    "start": "317000",
    "end": "324160"
  },
  {
    "text": "kind of analytics that requires okay now the one of the big uh",
    "start": "324160",
    "end": "331520"
  },
  {
    "text": "issue with using uh streaming trying to into traditional data data pipeline is",
    "start": "331520",
    "end": "339160"
  },
  {
    "text": "that um most of the streaming uh applications down on to the what you",
    "start": "339160",
    "end": "344240"
  },
  {
    "text": "call Big Data streaming the traditional Java Centric um and these are pretty much uh",
    "start": "344240",
    "end": "353560"
  },
  {
    "text": "the most popular uh framework you know spark um and or apach uh flck and beam",
    "start": "353560",
    "end": "360600"
  },
  {
    "text": "and kafa and they're very Java Centric it requires a lot of",
    "start": "360600",
    "end": "365880"
  },
  {
    "text": "complexity and not only that but they're resource heavy and and then also they're",
    "start": "365880",
    "end": "372400"
  },
  {
    "text": "designed for not designed for really Edge so you couldn't put that into uh",
    "start": "372400",
    "end": "377680"
  },
  {
    "text": "embedded devices or or or many kind of resour where uh you have a memory and",
    "start": "377680",
    "end": "384319"
  },
  {
    "text": "the uh CPU uh constraints and and then there's a a lot",
    "start": "384319",
    "end": "389960"
  },
  {
    "text": "of talk about advantage of w in this conference so I'm not going to go down into really that Advantage but it's",
    "start": "389960",
    "end": "397520"
  },
  {
    "text": "obviously that the won could be useful for solving this kind of",
    "start": "397520",
    "end": "403560"
  },
  {
    "text": "challenges okay so basically the biggest I think is the benefit is one is a cross",
    "start": "403560",
    "end": "409520"
  },
  {
    "text": "language because a lot of these big data uh framework is based on Java so if you",
    "start": "409520",
    "end": "415240"
  },
  {
    "text": "want to use like language like you know Swift or Ruby other languages there's a",
    "start": "415240",
    "end": "421720"
  },
  {
    "text": "lot of CH challenges integrating that and and it's we want to make a streaming",
    "start": "421720",
    "end": "429319"
  },
  {
    "text": "uh popular and we want need to democratize such that anyone can use those uh treat those stream as a really",
    "start": "429319",
    "end": "439000"
  },
  {
    "text": "um easy to pick it up and can be used by any developers and not just that but",
    "start": "439000",
    "end": "444800"
  },
  {
    "text": "also deploy it everywhere ships bat trucks anywhere and and that also the WM",
    "start": "444800",
    "end": "451160"
  },
  {
    "text": "now brings that all the isolation and security benefit and and with a uh potential of",
    "start": "451160",
    "end": "458599"
  },
  {
    "text": "the work uh the component registry now you can potentially package those W",
    "start": "458599",
    "end": "464720"
  },
  {
    "text": "components if you do it properly and and can distribute",
    "start": "464720",
    "end": "470720"
  },
  {
    "text": "everywhere okay so idea is take this uh state for streaming computation and then",
    "start": "470720",
    "end": "477759"
  },
  {
    "text": "map to Wasing component and and now the challenge is how do we actually go by doing",
    "start": "477759",
    "end": "484680"
  },
  {
    "text": "this okay so we talk about some high level disign decision so we start with",
    "start": "484680",
    "end": "490159"
  },
  {
    "text": "uh some of the basics about um how do we actually dealing with the the streem",
    "start": "490159",
    "end": "495560"
  },
  {
    "text": "computation um the good thing is that a lot of this fundamental um how about",
    "start": "495560",
    "end": "503000"
  },
  {
    "text": "dealing with the streams are actually uh well established so this is a uh pretty",
    "start": "503000",
    "end": "509520"
  },
  {
    "text": "fairly well known 2015 uh Google paper about how to actually deal with streams",
    "start": "509520",
    "end": "515120"
  },
  {
    "text": "so Google spent quite a bit of tremendous amount of uh Research into how do we actually building that compute",
    "start": "515120",
    "end": "522518"
  },
  {
    "text": "that on a fly and basically there's a four different areas of of addressing",
    "start": "522519",
    "end": "528240"
  },
  {
    "text": "this one is how do we actually map this into set of patterns um and then also uh building",
    "start": "528240",
    "end": "538360"
  },
  {
    "text": "this uh operation into what you call Deck as a set of a decks uh a set of",
    "start": "538360",
    "end": "544880"
  },
  {
    "text": "deck operators and then also uh dealing with ordering uh because when you're dealing",
    "start": "544880",
    "end": "551519"
  },
  {
    "text": "with the streams events can be coming out of the uh not usually uh in order",
    "start": "551519",
    "end": "558519"
  },
  {
    "text": "because when you are talking to embedded uh mobile devices when you're dealing",
    "start": "558519",
    "end": "564680"
  },
  {
    "text": "with other uh compute uh resource you can get all",
    "start": "564680",
    "end": "570640"
  },
  {
    "text": "things out of the order line so it's really the hardest part of is conceptualizing what does it means to",
    "start": "570640",
    "end": "577160"
  },
  {
    "text": "synchronize these events and because when you're dealing with the analytics you want to make sure that that",
    "start": "577160",
    "end": "584079"
  },
  {
    "text": "everything is on on that your analytics makes",
    "start": "584079",
    "end": "590600"
  },
  {
    "text": "sense okay so the basic approach is the way uh goat we did it was to so we we",
    "start": "590600",
    "end": "597440"
  },
  {
    "text": "have this now to called ssdk so that's our the framework that Maps this stream",
    "start": "597440",
    "end": "604480"
  },
  {
    "text": "based computation into uh into the wasi and the we uh web",
    "start": "604480",
    "end": "611040"
  },
  {
    "text": "assembly components map into it and then that we buil in terms of flu whe which is our",
    "start": "611040",
    "end": "616800"
  },
  {
    "text": "open source streaming engine that we actually built before so we're actually using that to map underlying streaming",
    "start": "616800",
    "end": "623640"
  },
  {
    "text": "and then we build this new uh engine to map this uh streaming competition okay okay so so we start",
    "start": "623640",
    "end": "632320"
  },
  {
    "text": "with the operators so the operators the basic the fundamental ingredients how we actually transform these streams so",
    "start": "632320",
    "end": "639399"
  },
  {
    "text": "those are uh just Basics like mapping right one mapping of one data to another",
    "start": "639399",
    "end": "645360"
  },
  {
    "text": "data of filtering uh that if you have Encounters",
    "start": "645360",
    "end": "650880"
  },
  {
    "text": "of events you want to drop those events or map one event to many events which go",
    "start": "650880",
    "end": "657160"
  },
  {
    "text": "flat mapping um and then other things like partitioning because when you deal with the advance it could be massive so",
    "start": "657160",
    "end": "664399"
  },
  {
    "text": "you want to divide any into partition so those streams can be process parallel uh and then also the uh time stamping which",
    "start": "664399",
    "end": "671600"
  },
  {
    "text": "is way to dealing with times you divide that into this Windows uh and then after that you want",
    "start": "671600",
    "end": "678639"
  },
  {
    "text": "to maybe want to aggregate it grouping sort it okay so so here's one probably the",
    "start": "678639",
    "end": "687839"
  },
  {
    "text": "most uh uh uh immediate problems because when you're dealing with this kind of",
    "start": "687839",
    "end": "693680"
  },
  {
    "text": "operation patterns like mapping uh you're mapping string to Strings numbers",
    "start": "693680",
    "end": "698839"
  },
  {
    "text": "to Strings or you know money to profit you're mapping essentially a data types",
    "start": "698839",
    "end": "706440"
  },
  {
    "text": "so the question so that in terms of a traditional uh streaming API is all",
    "start": "706440",
    "end": "713320"
  },
  {
    "text": "generics uh so first problem is that you try to model that into uh width is of",
    "start": "713320",
    "end": "719279"
  },
  {
    "text": "course the the biggest uh the barrier was the the lack of a generics in a width because the width is a",
    "start": "719279",
    "end": "726519"
  },
  {
    "text": "flat um services so if you have uh service like a mapping of oper case to",
    "start": "726519",
    "end": "734320"
  },
  {
    "text": "string to Strings you have to lay out this in a flat manner uh unfortunately",
    "start": "734320",
    "end": "739800"
  },
  {
    "text": "then we want to of course have to repeat this one then how do you actually dealing with all this different",
    "start": "739800",
    "end": "747360"
  },
  {
    "text": "variation so so then kind of realization is just the the component model is just",
    "start": "747680",
    "end": "753120"
  },
  {
    "text": "beginning so uh think of this uh component model as a basis for building",
    "start": "753120",
    "end": "758639"
  },
  {
    "text": "other kind of abstraction on top of it and then that brings the quot that",
    "start": "758639",
    "end": "765160"
  },
  {
    "text": "had a Cy high tower that had a while back which is the for kuber netics is",
    "start": "765160",
    "end": "770320"
  },
  {
    "text": "kubernets is a platform building for platform so now realize the WM is OS is",
    "start": "770320",
    "end": "776079"
  },
  {
    "text": "for building the OS it's a start not the uh end game so it it give us attraction",
    "start": "776079",
    "end": "783600"
  },
  {
    "text": "to build the next generation of services and and the kind of new kind of uh uh",
    "start": "783600",
    "end": "791639"
  },
  {
    "text": "compete uh platforms okay so what so so what we uh",
    "start": "791639",
    "end": "800079"
  },
  {
    "text": "the initial uh ssdk uh exraction is is that we are going to build start to",
    "start": "800079",
    "end": "806360"
  },
  {
    "text": "building this kind of a DSL to build this abstraction so for example in here",
    "start": "806360",
    "end": "812800"
  },
  {
    "text": "we have a transforms that operator map and since we we know that this is a",
    "start": "812800",
    "end": "819959"
  },
  {
    "text": "mapping and we know that takes a single argument that turns another single argument we can actually conceptualize",
    "start": "819959",
    "end": "827040"
  },
  {
    "text": "we can actually do the mization and that actually we turn that into the width so we use this to",
    "start": "827040",
    "end": "833839"
  },
  {
    "text": "generate so we becomes another um a layer that we can actually",
    "start": "833839",
    "end": "839279"
  },
  {
    "text": "plate just like we has been to mechanize the how we deal with the multiple",
    "start": "839279",
    "end": "844480"
  },
  {
    "text": "language we can build another set of More Level abstraction dealing with B",
    "start": "844480",
    "end": "850160"
  },
  {
    "text": "you know for example stream based computation and other kind of abstraction that we can build on",
    "start": "850160",
    "end": "856160"
  },
  {
    "text": "top all right all right so now let's just do the quick demo let see if this",
    "start": "856160",
    "end": "863839"
  },
  {
    "text": "works all right so here's a simple simplest operator that",
    "start": "864519",
    "end": "871639"
  },
  {
    "text": "Maps single strings into uh we actually do capitalize and with this our SS you",
    "start": "871639",
    "end": "879600"
  },
  {
    "text": "can actually in line and here we just happen to have a rust code the idea is",
    "start": "879600",
    "end": "884639"
  },
  {
    "text": "that we can support different languages here and that will translate that into a",
    "start": "884639",
    "end": "889680"
  },
  {
    "text": "WID and with a western component and SS will actually schedule it and run and we",
    "start": "889680",
    "end": "896160"
  },
  {
    "text": "used a won time underneath so we we'll start this one here and we run SS run",
    "start": "896160",
    "end": "903480"
  },
  {
    "text": "which actually compile this into the withd components and run it so you see component here and then",
    "start": "903480",
    "end": "911440"
  },
  {
    "text": "what we're going to do is we're going to do so flu is the underly the streaming",
    "start": "911440",
    "end": "918240"
  },
  {
    "text": "um uh message queue input so we go",
    "start": "918240",
    "end": "923680"
  },
  {
    "text": "here and we have uh",
    "start": "923680",
    "end": "928680"
  },
  {
    "text": "okay so we have a producer that will send a event then we have another that",
    "start": "930040",
    "end": "936279"
  },
  {
    "text": "we uh listen to this up band so we say ABC and you can see here we translated",
    "start": "936279",
    "end": "944800"
  },
  {
    "text": "into ABC right away and that actually uh actually caused the Weston component in",
    "start": "944800",
    "end": "951519"
  },
  {
    "text": "using a we to translate all this uh underneath and come back and send it to the streams so this is a",
    "start": "951519",
    "end": "959440"
  },
  {
    "text": "so this is like a hello word and here another one another word let me see so",
    "start": "959440",
    "end": "966040"
  },
  {
    "text": "Apple here and now we can actually now do here a simple case let's change this",
    "start": "966040",
    "end": "972920"
  },
  {
    "text": "to another message to low case so we're going to do actually do this on the",
    "start": "972920",
    "end": "980120"
  },
  {
    "text": "live okay and let's see if that works we save it and we actually run",
    "start": "983199",
    "end": "991120"
  },
  {
    "text": "again and we go here and this is like a",
    "start": "991120",
    "end": "996199"
  },
  {
    "text": "test and turns into lcase okay so this is the simplest that",
    "start": "996199",
    "end": "1002480"
  },
  {
    "text": "we have and actually so this also I can see the other thing is that we have the",
    "start": "1002480",
    "end": "1008000"
  },
  {
    "text": "types here so we actually defining we can actually Define the uh the stream",
    "start": "1008000",
    "end": "1013199"
  },
  {
    "text": "and Define this happen to be a very simplest here string type then we mapped",
    "start": "1013199",
    "end": "1019440"
  },
  {
    "text": "here and we Define it and we can actually Define uh different types of operators so that's the here let me go",
    "start": "1019440",
    "end": "1026319"
  },
  {
    "text": "back to presentation all right then the next we",
    "start": "1026319",
    "end": "1032438"
  },
  {
    "text": "talk about States so the states is actually the heart of the uh streaming computation because the states are",
    "start": "1032439",
    "end": "1039400"
  },
  {
    "text": "doable it means that when you have a crash it automatically recover the previous date and resume and resume that",
    "start": "1039400",
    "end": "1047280"
  },
  {
    "text": "uh the same data point and the states are also open only which means it's imitable because once you",
    "start": "1047280",
    "end": "1054000"
  },
  {
    "text": "capture the state you should not change and but you can actually append and so",
    "start": "1054000",
    "end": "1059360"
  },
  {
    "text": "so the values may be changed but you can go back to the previous the in time and recover and replay back uh currently we",
    "start": "1059360",
    "end": "1067280"
  },
  {
    "text": "sport uh key value and that talk about those kind of how what kind of the the",
    "start": "1067280",
    "end": "1074240"
  },
  {
    "text": "state can be the representation of a simple or value right",
    "start": "1074240",
    "end": "1079520"
  },
  {
    "text": "so here the the good thing so the way we map the state is we use the the resource",
    "start": "1079520",
    "end": "1087320"
  },
  {
    "text": "in a West component um the the resource is how actually the wasi uh used to",
    "start": "1087320",
    "end": "1094200"
  },
  {
    "text": "model like a suus file system but instead of doing that we in ssdk we",
    "start": "1094200",
    "end": "1100640"
  },
  {
    "text": "actually use that to model the the state okay so this is a simple exp uh",
    "start": "1100640",
    "end": "1109919"
  },
  {
    "text": "to join of a space so suppose we have SIMPLE a City temperature value and so",
    "start": "1109919",
    "end": "1117640"
  },
  {
    "text": "Paris has a 55 degre this happen to be Fahrenheit not Celsius uh and the C has",
    "start": "1117640",
    "end": "1123799"
  },
  {
    "text": "a 70 so this is the simplest possible values which call Scala values and and",
    "start": "1123799",
    "end": "1131799"
  },
  {
    "text": "then we turn we actually if you can see this one here we have this called State",
    "start": "1131799",
    "end": "1137000"
  },
  {
    "text": "here that actually represents these values then we compile this into WID the",
    "start": "1137000",
    "end": "1142840"
  },
  {
    "text": "resource value the get set value uh and then you can increment it and we",
    "start": "1142840",
    "end": "1149120"
  },
  {
    "text": "actually also translate those into uh wi types as well to actually do orchestrate",
    "start": "1149120",
    "end": "1155080"
  },
  {
    "text": "all this type representation from the simple high level extraction okay so this is another uh",
    "start": "1155080",
    "end": "1162400"
  },
  {
    "text": "representation of actually transl using the width as the way to represent more",
    "start": "1162400",
    "end": "1167440"
  },
  {
    "text": "complex uh representation ation okay right so let's do another",
    "start": "1167440",
    "end": "1174440"
  },
  {
    "text": "demo okay so the same scenario here except now we're going to count we're",
    "start": "1175520",
    "end": "1181320"
  },
  {
    "text": "going to count how many words that we actually done here see",
    "start": "1181320",
    "end": "1187000"
  },
  {
    "text": "here okay so we run this one here so now",
    "start": "1189039",
    "end": "1194120"
  },
  {
    "text": "the difference is now we have this go show state",
    "start": "1194120",
    "end": "1199360"
  },
  {
    "text": "okay you can see there's nothing here because we haven't done anything so now let's go into the same thing we've done",
    "start": "1199720",
    "end": "1206080"
  },
  {
    "text": "before input and output so let's say",
    "start": "1206080",
    "end": "1212880"
  },
  {
    "text": "apple okay and here you see this what apple one because when we do show State here",
    "start": "1212880",
    "end": "1221520"
  },
  {
    "text": "we're actually capturing this States and we mapped it so so when we actually do show state",
    "start": "1221520",
    "end": "1228880"
  },
  {
    "text": "op case count PR here and",
    "start": "1228880",
    "end": "1235320"
  },
  {
    "text": "state see it says apple and the value is one because we are actually doing a very",
    "start": "1235320",
    "end": "1241679"
  },
  {
    "text": "simple representation now we do another apple and here we actually what happen",
    "start": "1241679",
    "end": "1249080"
  },
  {
    "text": "is is that we actually increment one and print here and you see that it haveed to be two and we go to the same state here",
    "start": "1249080",
    "end": "1257480"
  },
  {
    "text": "it shows two same thing we do panana and here one and if it's here",
    "start": "1257480",
    "end": "1266480"
  },
  {
    "text": "actually B here okay now the interesting part is that the state is durable so if",
    "start": "1266480",
    "end": "1273000"
  },
  {
    "text": "you go and quit and when you come back we replay the events and restore the",
    "start": "1273000",
    "end": "1278360"
  },
  {
    "text": "state as was before exactly so here you say exactly and can resume the B and you",
    "start": "1278360",
    "end": "1285080"
  },
  {
    "text": "can replay back so that's the state is not is not just a simple a memory based",
    "start": "1285080",
    "end": "1290279"
  },
  {
    "text": "value but it's a durable and it's designed to uh recover from the failure",
    "start": "1290279",
    "end": "1296760"
  },
  {
    "text": "and to replace and you can Al go back to the previous state based on the previous",
    "start": "1296760",
    "end": "1302640"
  },
  {
    "text": "time right here right now we're going to more",
    "start": "1302919",
    "end": "1308760"
  },
  {
    "text": "complex so before it was a simple State now we can actually represent multiple",
    "start": "1308760",
    "end": "1314840"
  },
  {
    "text": "values uh so this is the example of where if you want to capture for example like the number of a flights a statistic",
    "start": "1314840",
    "end": "1321799"
  },
  {
    "text": "about the passengers on on the airport you know so CDG may have a flight",
    "start": "1321799",
    "end": "1329120"
  },
  {
    "text": "450 uh so this is accumulated right as the new flights coming in we are adding",
    "start": "1329120",
    "end": "1334760"
  },
  {
    "text": "more values to it so we split that by this key here CDG airport and San",
    "start": "1334760",
    "end": "1341039"
  },
  {
    "text": "Francisco and of course Barcelona and then when you have this uh",
    "start": "1341039",
    "end": "1346559"
  },
  {
    "text": "key value split value we can actually then also now do aggregation so that",
    "start": "1346559",
    "end": "1351880"
  },
  {
    "text": "means we we can actually look in all state as a single entity so here we using the go data",
    "start": "1351880",
    "end": "1359600"
  },
  {
    "text": "frame so the data frame is kind of a fancy word for the",
    "start": "1359600",
    "end": "1364720"
  },
  {
    "text": "table so here you can actually see the uh the key value uh Barcelona San",
    "start": "1364720",
    "end": "1370400"
  },
  {
    "text": "Francisco as a key and you can see the flight and passengers and freight and here then you can do",
    "start": "1370400",
    "end": "1376720"
  },
  {
    "text": "actually more very more complex operation so and the data frame now the",
    "start": "1376720",
    "end": "1384320"
  },
  {
    "text": "interesting part of the data frame is we actually use apach arrow is underneath representation um apach arrow is it's a",
    "start": "1384320",
    "end": "1392760"
  },
  {
    "text": "colum representation for data frame so so the column frame means that we store",
    "start": "1392760",
    "end": "1399440"
  },
  {
    "text": "this values by the column instead of row so that's so in traditional post Grace",
    "start": "1399440",
    "end": "1405919"
  },
  {
    "text": "all the uh the rols are sto one by one but in a column representation we store",
    "start": "1405919",
    "end": "1411520"
  },
  {
    "text": "the column first uh advantage of that is that you have a huge amount because you",
    "start": "1411520",
    "end": "1416720"
  },
  {
    "text": "can do the vector processing of those uh CES it's typically about 10 to 100 times",
    "start": "1416720",
    "end": "1422440"
  },
  {
    "text": "faster and you can actually perform huge amount of computation in very fast um another benefit of a PCH arrow",
    "start": "1422440",
    "end": "1430279"
  },
  {
    "text": "is that it's becoming a standard so a lot of ecosystem data ecosystem uh use",
    "start": "1430279",
    "end": "1436520"
  },
  {
    "text": "Arrow as now the standard way to represent value so easy to actually can integrate the state into uh different",
    "start": "1436520",
    "end": "1443679"
  },
  {
    "text": "kind of uh uh other tools and in ecosystems okay now there's actually two",
    "start": "1443679",
    "end": "1451600"
  },
  {
    "text": "way to do this handling this uh um um Arrow of representation so so those",
    "start": "1451600",
    "end": "1459520"
  },
  {
    "text": "states are in a in a host uh here and there's actually two way to go about it",
    "start": "1459520",
    "end": "1465919"
  },
  {
    "text": "so one is to we copy those uh the arrow memory column in to the guest or we do",
    "start": "1465919",
    "end": "1473320"
  },
  {
    "text": "lazily uh run from the client uh for the first generation of our what we're doing",
    "start": "1473320",
    "end": "1478600"
  },
  {
    "text": "is we're actually going to copy that into the client uh it's that's much easier to handle it guess is doing the lazy is",
    "start": "1478600",
    "end": "1486919"
  },
  {
    "text": "still a lot of technical the challenges we have to overcome so the first generation of product we're doing is we",
    "start": "1486919",
    "end": "1493200"
  },
  {
    "text": "actually copying this on offline uh and it turns out that most of the time it's not too bad because when you're dealing",
    "start": "1493200",
    "end": "1499480"
  },
  {
    "text": "with a stream based computation amount of data is hopefully small enough that we can actually do it in efficient",
    "start": "1499480",
    "end": "1507760"
  },
  {
    "text": "manner okay so that actually we actually use a WID to represent Arrow chunks so",
    "start": "1507760",
    "end": "1513840"
  },
  {
    "text": "we actually represent these columns and then we actually represent this Arrow chunks in a width here this Arrow",
    "start": "1513840",
    "end": "1520240"
  },
  {
    "text": "because they're column base each of this uh different numeric representation is",
    "start": "1520240",
    "end": "1526679"
  },
  {
    "text": "is by itself so you can actually uh copy all this uh array one by one and",
    "start": "1526679",
    "end": "1534440"
  },
  {
    "text": "the reassemble on the fly on the into uh guas so and then so what happened then",
    "start": "1534440",
    "end": "1541840"
  },
  {
    "text": "is then we can actually in the guas component we copy this Arrow uh in the",
    "start": "1541840",
    "end": "1547799"
  },
  {
    "text": "guas memory then we can actually run any uh aor compatible Library like a um PO",
    "start": "1547799",
    "end": "1555600"
  },
  {
    "text": "is a very popular Arrow Library uh and access it directly and and then and then you can",
    "start": "1555600",
    "end": "1563080"
  },
  {
    "text": "actually run this business logic just like you're doing in POA and here this is a a simple way to do a select",
    "start": "1563080",
    "end": "1569559"
  },
  {
    "text": "statement basically and you can perform any kind of uh data frame operations in",
    "start": "1569559",
    "end": "1574760"
  },
  {
    "text": "uh inside only constraint is probably a",
    "start": "1574760",
    "end": "1580039"
  },
  {
    "text": "memory okay and that's the last demo let's try",
    "start": "1580279",
    "end": "1586640"
  },
  {
    "text": "that okay and here is just one more here",
    "start": "1586640",
    "end": "1591919"
  },
  {
    "text": "the same thing we do",
    "start": "1591919",
    "end": "1595039"
  },
  {
    "text": "here okay so we run here and here",
    "start": "1597679",
    "end": "1602760"
  },
  {
    "text": "is and we show nothing's here and then we're going to do",
    "start": "1602760",
    "end": "1608159"
  },
  {
    "text": "is",
    "start": "1608159",
    "end": "1611159"
  },
  {
    "text": "consume actually we're going to do is we have a data",
    "start": "1614080",
    "end": "1621640"
  },
  {
    "text": "set representing the flight data right so you have the flight some this flight",
    "start": "1621640",
    "end": "1629080"
  },
  {
    "text": "and you have a departure and destination and you have a number of passengers coming in and you have a fight so what",
    "start": "1629080",
    "end": "1636320"
  },
  {
    "text": "we're doing is we're now sending this is individual events so imagine that you have some kind of telemetry coming from",
    "start": "1636320",
    "end": "1642520"
  },
  {
    "text": "uh airport they're capturing this one and then we sending on a fly in a real time just that we just not doing",
    "start": "1642520",
    "end": "1649120"
  },
  {
    "text": "manually so we do okay and we have a topic called",
    "start": "1649120",
    "end": "1658159"
  },
  {
    "text": "arrival and we sending right so then when we do a show",
    "start": "1658159",
    "end": "1666080"
  },
  {
    "text": "state do state",
    "start": "1666080",
    "end": "1673000"
  },
  {
    "text": "here and you can see that we actually not created here",
    "start": "1673000",
    "end": "1679519"
  },
  {
    "text": "let me see here we actually have a this data coming in let me also do we have this called data table here here we have",
    "start": "1679519",
    "end": "1688480"
  },
  {
    "text": "a CDG uh kind of kind of messed up let me just clean this up",
    "start": "1688480",
    "end": "1694279"
  },
  {
    "text": "here data here so this is what I going you do real time",
    "start": "1694279",
    "end": "1701158"
  },
  {
    "text": "here just clean up the data here try again",
    "start": "1701600",
    "end": "1708879"
  },
  {
    "text": "okay so it's actually showing the uh showing different data uh just happened",
    "start": "1722960",
    "end": "1728480"
  },
  {
    "text": "to have probably kind of messed up here but that's what I been you're doing a real time we're doing a real time demo",
    "start": "1728480",
    "end": "1734880"
  },
  {
    "text": "kind of probably messed up the data here so um so the point is is that this here we",
    "start": "1734880",
    "end": "1744480"
  },
  {
    "text": "do is that this is the code that actually compute this data on a fly so",
    "start": "1744480",
    "end": "1750279"
  },
  {
    "text": "we actually get the uh a table here and then we actually compute this add this",
    "start": "1750279",
    "end": "1756840"
  },
  {
    "text": "uh F and phras on a real time I think it's actually correct because go to",
    "start": "1756840",
    "end": "1765960"
  },
  {
    "text": "and oh yeah that's right that's right so yeah that's right that's right that's that's correct I just got a little bit",
    "start": "1765960",
    "end": "1772640"
  },
  {
    "text": "confused on there so actually correct and then now I",
    "start": "1772640",
    "end": "1779399"
  },
  {
    "text": "can try to let me just here flly two and let's",
    "start": "1779399",
    "end": "1786279"
  },
  {
    "text": "see here we do yes that's right so now",
    "start": "1786279",
    "end": "1791440"
  },
  {
    "text": "we do data two here is that we just added these two",
    "start": "1791440",
    "end": "1799720"
  },
  {
    "text": "uh two data sets flight so as the the new data is coming in we actually so",
    "start": "1799720",
    "end": "1806240"
  },
  {
    "text": "this state is maintaining in in in a real time basis okay and let me go",
    "start": "1806240",
    "end": "1814120"
  },
  {
    "text": "here right and then now go to the last part which is the uh what you call",
    "start": "1814120",
    "end": "1819559"
  },
  {
    "text": "Window invas calculation so the um the problem the one so the interesting part",
    "start": "1819559",
    "end": "1826840"
  },
  {
    "text": "about the previous was is accumulator so we actually increase the counting by one",
    "start": "1826840",
    "end": "1832320"
  },
  {
    "text": "by one but in terms of when you want to track the statistic you want to do it in",
    "start": "1832320",
    "end": "1838640"
  },
  {
    "text": "real time which means that you want to get the statistic by every hour for",
    "start": "1838640",
    "end": "1843799"
  },
  {
    "text": "example so idea is to you want to compute all the get the top airport",
    "start": "1843799",
    "end": "1850519"
  },
  {
    "text": "every hour you want to who which airport is actually has the most passengers and",
    "start": "1850519",
    "end": "1855960"
  },
  {
    "text": "most flights so in terms of that we call the window processor here and we use",
    "start": "1855960",
    "end": "1861760"
  },
  {
    "text": "this called Simple tumbling window and so before we had this state",
    "start": "1861760",
    "end": "1868039"
  },
  {
    "text": "uh divide in uh uh divide in terms of uh uh simple uh state but the states are now",
    "start": "1868039",
    "end": "1875399"
  },
  {
    "text": "split that into different windows so between 9:00 a.m. to 10 a.m. we have this one same here table 10 and 11",
    "start": "1875399",
    "end": "1883480"
  },
  {
    "text": "different tables and so what happened is that when windows are closed those get",
    "start": "1883480",
    "end": "1888840"
  },
  {
    "text": "flushed down and we do another calculation okay and hopefully that goes",
    "start": "1888840",
    "end": "1895480"
  },
  {
    "text": "here the last one here all",
    "start": "1895480",
    "end": "1900600"
  },
  {
    "text": "right okay so in this case we have what we have this called uh flush aggregated",
    "start": "1905720",
    "end": "1912519"
  },
  {
    "text": "and what this things does is that we compute we get all this when the windows",
    "start": "1912519",
    "end": "1917600"
  },
  {
    "text": "closed we get advance and we compute the top three airport and hopefully this gets a",
    "start": "1917600",
    "end": "1923200"
  },
  {
    "text": "little bit better here okay so to show",
    "start": "1923200",
    "end": "1928600"
  },
  {
    "text": "State same thing nothing here okay so and what we're going to",
    "start": "1928600",
    "end": "1936279"
  },
  {
    "text": "listen for is we have this called top three most busy Airport",
    "start": "1936279",
    "end": "1943158"
  },
  {
    "text": "yes oh yeah that's right thanks all right and then we have data",
    "start": "1951000",
    "end": "1958080"
  },
  {
    "text": "set okay so the difference is previous uh is",
    "start": "1958080",
    "end": "1963799"
  },
  {
    "text": "that we have a time so previous data set it's just a just the data so you don't",
    "start": "1963799",
    "end": "1970279"
  },
  {
    "text": "know when the data was produced now we going to do make it more realistic so we",
    "start": "1970279",
    "end": "1975919"
  },
  {
    "text": "have a flight data coming here and this is a data when that was produced by some kind of telemetry so we",
    "start": "1975919",
    "end": "1982799"
  },
  {
    "text": "use that to compute the uh window based okay so let me I think we here so",
    "start": "1982799",
    "end": "1991080"
  },
  {
    "text": "we do same",
    "start": "1991080",
    "end": "1993960"
  },
  {
    "text": "thing okay so in that case the the",
    "start": "2000240",
    "end": "2005519"
  },
  {
    "text": "difference is that",
    "start": "2005519",
    "end": "2009320"
  },
  {
    "text": "State St right yes right stick let me",
    "start": "2014399",
    "end": "2022000"
  },
  {
    "text": "see there we go pack this one here",
    "start": "2022000",
    "end": "2029960"
  },
  {
    "text": "compute me just yeah",
    "start": "2030519",
    "end": "2038360"
  },
  {
    "text": "all right let me see what let me try",
    "start": "2041120",
    "end": "2048240"
  },
  {
    "text": "again this is the easiest way to do",
    "start": "2048560",
    "end": "2053000"
  },
  {
    "text": "it there we go and you see flight varable and if you",
    "start": "2056520",
    "end": "2061560"
  },
  {
    "text": "do here you can see the the output and",
    "start": "2061560",
    "end": "2067079"
  },
  {
    "text": "the time window and this was because they all aligned to the same window you can see these windows are aligned here",
    "start": "2067079",
    "end": "2073919"
  },
  {
    "text": "and number of flights and number flights and passengers now we do the last demo here",
    "start": "2073919",
    "end": "2080560"
  },
  {
    "text": "we have another data to here and what happened is that then",
    "start": "2080560",
    "end": "2085878"
  },
  {
    "text": "because this data set will be sitting there in the window and we when we produce this data set",
    "start": "2085879",
    "end": "2094358"
  },
  {
    "text": "here that will close the window because we use a watermark to compute that value",
    "start": "2095040",
    "end": "2100440"
  },
  {
    "text": "here and you see this coming here top three based on the P1 so those are top",
    "start": "2100440",
    "end": "2106240"
  },
  {
    "text": "three and and then if you see those new data",
    "start": "2106240",
    "end": "2111520"
  },
  {
    "text": "will overwrite the previous time table okay I think that's that's the",
    "start": "2111520",
    "end": "2119280"
  },
  {
    "text": "part of the demo and and I just closing this one",
    "start": "2119280",
    "end": "2124359"
  },
  {
    "text": "here so we have a lot of more features uh the sstk is still in a preview so we",
    "start": "2124359",
    "end": "2130280"
  },
  {
    "text": "are looking for a lot of feedbacks on the different use case and I don't think I we ran out of questions",
    "start": "2130280",
    "end": "2138480"
  },
  {
    "text": "but happy to answer questions after [Applause]",
    "start": "2138480",
    "end": "2148989"
  }
]