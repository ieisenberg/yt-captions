[
  {
    "text": "[Music]",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "[Applause]",
    "start": "5040",
    "end": "8200"
  },
  {
    "text": "y hello everybody thank you for coming",
    "start": "10160",
    "end": "13000"
  },
  {
    "text": "for my",
    "start": "13000",
    "end": "14920"
  },
  {
    "text": "talk and U so thank you sergy for the",
    "start": "14920",
    "end": "18720"
  },
  {
    "text": "introduction yep my name is Dimitri and",
    "start": "18720",
    "end": "21760"
  },
  {
    "text": "um I'm working for a company called the",
    "start": "21760",
    "end": "24400"
  },
  {
    "text": "Galia we are actually uh Outsource for",
    "start": "24400",
    "end": "29119"
  },
  {
    "text": "open source and today I'm going to give",
    "start": "29119",
    "end": "31400"
  },
  {
    "text": "you a short but take deep dive into",
    "start": "31400",
    "end": "36800"
  },
  {
    "text": "the uh compiler stuff J stuff and",
    "start": "36800",
    "end": "40200"
  },
  {
    "text": "running J verm",
    "start": "40200",
    "end": "42960"
  },
  {
    "text": "faster running JavaScript so JavaScript",
    "start": "42960",
    "end": "48440"
  },
  {
    "text": "is getting popular yeah you all know",
    "start": "48440",
    "end": "50399"
  },
  {
    "text": "especially in a web assembly community",
    "start": "50399",
    "end": "53640"
  },
  {
    "text": "so if you see the state of web assem",
    "start": "53640",
    "end": "56800"
  },
  {
    "text": "from 2021 to 2023 so you see that",
    "start": "56800",
    "end": "61920"
  },
  {
    "text": "JavaScript is getting more and more",
    "start": "61920",
    "end": "64239"
  },
  {
    "text": "adaption even for compiling to web",
    "start": "64239",
    "end": "67960"
  },
  {
    "text": "assembly and how to run JavaScript",
    "start": "67960",
    "end": "71560"
  },
  {
    "text": "inside a web assembly because you you",
    "start": "71560",
    "end": "73479"
  },
  {
    "text": "can't run it",
    "start": "73479",
    "end": "75040"
  },
  {
    "text": "directly so you need a some kind of frun",
    "start": "75040",
    "end": "77960"
  },
  {
    "text": "time so one option is to use mazilla",
    "start": "77960",
    "end": "81079"
  },
  {
    "text": "spider monkey it's a good choice or you",
    "start": "81079",
    "end": "84280"
  },
  {
    "text": "can use KJ there of course other options",
    "start": "84280",
    "end": "87280"
  },
  {
    "text": "like d tape aot compilation but they are",
    "start": "87280",
    "end": "90400"
  },
  {
    "text": "too experimental or too",
    "start": "90400",
    "end": "92079"
  },
  {
    "text": "small so it's Spiderman is like a new",
    "start": "92079",
    "end": "95520"
  },
  {
    "text": "good Ferrari so it has",
    "start": "95520",
    "end": "99040"
  },
  {
    "text": "a comparable big size around 5 mbes it",
    "start": "99040",
    "end": "103240"
  },
  {
    "text": "is supports only interpreter reme",
    "start": "103240",
    "end": "105360"
  },
  {
    "text": "compiled it to web assembly because",
    "start": "105360",
    "end": "107159"
  },
  {
    "text": "there's no any code",
    "start": "107159",
    "end": "108560"
  },
  {
    "text": "generation and uh it actually provides a",
    "start": "108560",
    "end": "111960"
  },
  {
    "text": "perfect support of all JavaScript",
    "start": "111960",
    "end": "113680"
  },
  {
    "text": "features and in the standards because",
    "start": "113680",
    "end": "115759"
  },
  {
    "text": "it's actively developed and under",
    "start": "115759",
    "end": "117680"
  },
  {
    "text": "mazilla",
    "start": "117680",
    "end": "118840"
  },
  {
    "text": "company",
    "start": "118840",
    "end": "120640"
  },
  {
    "text": "from other side you can have a quick Jaz",
    "start": "120640",
    "end": "123240"
  },
  {
    "text": "it's very small it supports to only",
    "start": "123240",
    "end": "126399"
  },
  {
    "text": "interpreter mode compil it to web",
    "start": "126399",
    "end": "127920"
  },
  {
    "text": "assembly it has less support of",
    "start": "127920",
    "end": "130080"
  },
  {
    "text": "JavaScript standards because there are",
    "start": "130080",
    "end": "131920"
  },
  {
    "text": "no any big company under quickjs yet and",
    "start": "131920",
    "end": "136440"
  },
  {
    "text": "it has a very fast interpreter it's very",
    "start": "136440",
    "end": "139239"
  },
  {
    "text": "fascinating stuff and uh it provides a",
    "start": "139239",
    "end": "142000"
  },
  {
    "text": "support for preprocessing your",
    "start": "142000",
    "end": "143239"
  },
  {
    "text": "JavaScript into bite",
    "start": "143239",
    "end": "145360"
  },
  {
    "text": "code and there are several issues with",
    "start": "145360",
    "end": "148560"
  },
  {
    "text": "only JavaScript inter interpreters so",
    "start": "148560",
    "end": "151280"
  },
  {
    "text": "they provide slow math it has an",
    "start": "151280",
    "end": "154319"
  },
  {
    "text": "overhead on a dispatch so all these",
    "start": "154319",
    "end": "156840"
  },
  {
    "text": "interpreters are just switches in C++ so",
    "start": "156840",
    "end": "160040"
  },
  {
    "text": "you need to dispatch on a dispatch block",
    "start": "160040",
    "end": "163319"
  },
  {
    "text": "for every bite code it has no any",
    "start": "163319",
    "end": "166920"
  },
  {
    "text": "specialization and so no any",
    "start": "166920",
    "end": "170560"
  },
  {
    "text": "optimizations and what we want actually",
    "start": "170560",
    "end": "172879"
  },
  {
    "text": "is to have a better than interpreter",
    "start": "172879",
    "end": "176319"
  },
  {
    "text": "throughput we want industrial support of",
    "start": "176319",
    "end": "179040"
  },
  {
    "text": "new features of JavaScript standards and",
    "start": "179040",
    "end": "182319"
  },
  {
    "text": "we want it for free of course and we",
    "start": "182319",
    "end": "184640"
  },
  {
    "text": "want a reasonable size and pre",
    "start": "184640",
    "end": "188200"
  },
  {
    "text": "processing or even aut",
    "start": "188200",
    "end": "191760"
  },
  {
    "text": "support so I'm introducing you the D",
    "start": "191760",
    "end": "194760"
  },
  {
    "text": "support for JavaScript with web",
    "start": "194760",
    "end": "198200"
  },
  {
    "text": "assembly so what we are going to do we",
    "start": "198200",
    "end": "200799"
  },
  {
    "text": "will take a spider mon key compile it",
    "start": "200799",
    "end": "203239"
  },
  {
    "text": "into web assembly with was Target and it",
    "start": "203239",
    "end": "207239"
  },
  {
    "text": "supports a lot of uh architectures for",
    "start": "207239",
    "end": "211319"
  },
  {
    "text": "AIT code generation like x64 RM 64 risk",
    "start": "211319",
    "end": "214480"
  },
  {
    "text": "and Etc and we are going to add another",
    "start": "214480",
    "end": "218640"
  },
  {
    "text": "Target for a spider monkey like wasm so",
    "start": "218640",
    "end": "221640"
  },
  {
    "text": "that it can produce wasm bytes for your",
    "start": "221640",
    "end": "225200"
  },
  {
    "text": "JavaScript code and this point you can",
    "start": "225200",
    "end": "227920"
  },
  {
    "text": "say why or what is going on because",
    "start": "227920",
    "end": "230280"
  },
  {
    "text": "spider monke is also a VM engine that",
    "start": "230280",
    "end": "233560"
  },
  {
    "text": "can produce as a Cod gen your wasm bites",
    "start": "233560",
    "end": "236760"
  },
  {
    "text": "and it's a bit tricky but if you see at",
    "start": "236760",
    "end": "239799"
  },
  {
    "text": "the solution you will see that it",
    "start": "239799",
    "end": "242040"
  },
  {
    "text": "provides industrial support of",
    "start": "242040",
    "end": "243360"
  },
  {
    "text": "JavaScript and if you implement a wasm",
    "start": "243360",
    "end": "245599"
  },
  {
    "text": "backend we will have interpreter for a",
    "start": "245599",
    "end": "248200"
  },
  {
    "text": "cold code and Jet for a hold code and we",
    "start": "248200",
    "end": "251840"
  },
  {
    "text": "will still have a big size but we will",
    "start": "251840",
    "end": "253799"
  },
  {
    "text": "talk about that in the last",
    "start": "253799",
    "end": "256320"
  },
  {
    "text": "section so how can we add a VM bant to",
    "start": "256320",
    "end": "261199"
  },
  {
    "text": "the",
    "start": "261199",
    "end": "262199"
  },
  {
    "text": "Spiderman so let's see to the internal",
    "start": "262199",
    "end": "266120"
  },
  {
    "text": "uh picture of spider monkey so when when",
    "start": "266120",
    "end": "269800"
  },
  {
    "text": "you compile your Source JavaScript",
    "start": "269800",
    "end": "272199"
  },
  {
    "text": "into not compile you run uh with a",
    "start": "272199",
    "end": "275400"
  },
  {
    "text": "Spiderman key first of all it compiles",
    "start": "275400",
    "end": "278160"
  },
  {
    "text": "it to bite code then it goes to C++",
    "start": "278160",
    "end": "281280"
  },
  {
    "text": "interpreter and then you have four G",
    "start": "281280",
    "end": "284680"
  },
  {
    "text": "tiers for execution and all these tiers",
    "start": "284680",
    "end": "288080"
  },
  {
    "text": "are using one obstruction that's called",
    "start": "288080",
    "end": "290400"
  },
  {
    "text": "micro assembler and from this micro",
    "start": "290400",
    "end": "293400"
  },
  {
    "text": "assembler it um generates a bytes or",
    "start": "293400",
    "end": "298400"
  },
  {
    "text": "assembly for for execution so what we",
    "start": "298400",
    "end": "301800"
  },
  {
    "text": "need we need to somehow translate micro",
    "start": "301800",
    "end": "304479"
  },
  {
    "text": "assembler into web assembly and it's not",
    "start": "304479",
    "end": "307960"
  },
  {
    "text": "easy to do because it's a very different",
    "start": "307960",
    "end": "311080"
  },
  {
    "text": "architectures so let's compare them so",
    "start": "311080",
    "end": "314479"
  },
  {
    "text": "the micro assembler have conception of",
    "start": "314479",
    "end": "316840"
  },
  {
    "text": "registers of a hardware machine and in",
    "start": "316840",
    "end": "319440"
  },
  {
    "text": "VM we have only locals and globals we",
    "start": "319440",
    "end": "321440"
  },
  {
    "text": "don't have any control of Hardware",
    "start": "321440",
    "end": "323880"
  },
  {
    "text": "registers and um in maam we have a",
    "start": "323880",
    "end": "326680"
  },
  {
    "text": "direct SE access for example we can",
    "start": "326680",
    "end": "329000"
  },
  {
    "text": "unwind the few frames and it's easy to",
    "start": "329000",
    "end": "331319"
  },
  {
    "text": "done it's easy to do but in web assembly",
    "start": "331319",
    "end": "334400"
  },
  {
    "text": "we have own restricted St that can be",
    "start": "334400",
    "end": "336199"
  },
  {
    "text": "manipulated only with web assembly",
    "start": "336199",
    "end": "339560"
  },
  {
    "text": "instructions but hopefully we have uh",
    "start": "339560",
    "end": "342759"
  },
  {
    "text": "almost a similar set of instructions on",
    "start": "342759",
    "end": "345280"
  },
  {
    "text": "both",
    "start": "345280",
    "end": "346039"
  },
  {
    "text": "sides and uh in mcro assembler we have",
    "start": "346039",
    "end": "349319"
  },
  {
    "text": "like assembly like language so it's",
    "start": "349319",
    "end": "352280"
  },
  {
    "text": "labels jumps Jump by addresses and in",
    "start": "352280",
    "end": "356199"
  },
  {
    "text": "web assembly only have structured",
    "start": "356199",
    "end": "358240"
  },
  {
    "text": "control flow so how could we uh",
    "start": "358240",
    "end": "362720"
  },
  {
    "text": "translate one to another let's start",
    "start": "362720",
    "end": "365680"
  },
  {
    "text": "with a control F so this is a piece of",
    "start": "365680",
    "end": "368919"
  },
  {
    "text": "micro assembler code and if you see at",
    "start": "368919",
    "end": "371199"
  },
  {
    "text": "it you can actually if you are familiar",
    "start": "371199",
    "end": "375520"
  },
  {
    "text": "with assembler you can see that it's",
    "start": "375520",
    "end": "378599"
  },
  {
    "text": "possible to use labels information and",
    "start": "378599",
    "end": "382720"
  },
  {
    "text": "reconstruct a control F graph from it so",
    "start": "382720",
    "end": "385039"
  },
  {
    "text": "each time you jump to a a new",
    "start": "385039",
    "end": "388560"
  },
  {
    "text": "instruction a label you create a basic",
    "start": "388560",
    "end": "391919"
  },
  {
    "text": "block and uh each time you bind bind",
    "start": "391919",
    "end": "395479"
  },
  {
    "text": "this label you also create a new basic",
    "start": "395479",
    "end": "397039"
  },
  {
    "text": "block with another set of instruction",
    "start": "397039",
    "end": "399599"
  },
  {
    "text": "and so you can reconstruct control FL",
    "start": "399599",
    "end": "403199"
  },
  {
    "text": "graph from a micro assembl and then if",
    "start": "403199",
    "end": "406880"
  },
  {
    "text": "you sort this simple graph",
    "start": "406880",
    "end": "410120"
  },
  {
    "text": "topologically you can actually emit",
    "start": "410120",
    "end": "412479"
  },
  {
    "text": "directly a block structure in web",
    "start": "412479",
    "end": "416680"
  },
  {
    "text": "assembly and so yeah it's how it's doing",
    "start": "416680",
    "end": "420599"
  },
  {
    "text": "and U also want to note that since",
    "start": "420599",
    "end": "424879"
  },
  {
    "text": "JavaScript is a JavaScript in spider",
    "start": "424879",
    "end": "428319"
  },
  {
    "text": "monkey produces only control uh",
    "start": "428319",
    "end": "431360"
  },
  {
    "text": "structured control for graph and our uh",
    "start": "431360",
    "end": "435680"
  },
  {
    "text": "control FR graph obtain it from a micro",
    "start": "435680",
    "end": "437639"
  },
  {
    "text": "assembler it's also structured so we",
    "start": "437639",
    "end": "440120"
  },
  {
    "text": "don't need to apply some fancy stuff",
    "start": "440120",
    "end": "442840"
  },
  {
    "text": "like reup algorithms and",
    "start": "442840",
    "end": "445520"
  },
  {
    "text": "Etc and uh if we are using if we use",
    "start": "445520",
    "end": "449199"
  },
  {
    "text": "some compiler classic compiler",
    "start": "449199",
    "end": "451440"
  },
  {
    "text": "algorithms to lay out this graph with",
    "start": "451440",
    "end": "454360"
  },
  {
    "text": "loops it's a bit tricky but doal we can",
    "start": "454360",
    "end": "459240"
  },
  {
    "text": "have actually direct mapping from macro",
    "start": "459240",
    "end": "461360"
  },
  {
    "text": "assembler to web",
    "start": "461360",
    "end": "463919"
  },
  {
    "text": "assembly registers so when we compile",
    "start": "463919",
    "end": "467560"
  },
  {
    "text": "JavaScript into micro assembler micro",
    "start": "467560",
    "end": "469240"
  },
  {
    "text": "assembler uses registers and we",
    "start": "469240",
    "end": "472000"
  },
  {
    "text": "experimented a lot how to represent them",
    "start": "472000",
    "end": "474319"
  },
  {
    "text": "inside of web assembly and came up with",
    "start": "474319",
    "end": "476960"
  },
  {
    "text": "a an idea of representing registers",
    "start": "476960",
    "end": "479879"
  },
  {
    "text": "other parameters of function",
    "start": "479879",
    "end": "482879"
  },
  {
    "text": "so um each time when we call a function",
    "start": "482879",
    "end": "486159"
  },
  {
    "text": "inside of web assembly we pass this set",
    "start": "486159",
    "end": "488400"
  },
  {
    "text": "of fix it",
    "start": "488400",
    "end": "489800"
  },
  {
    "text": "parameters uh that represent registers",
    "start": "489800",
    "end": "492759"
  },
  {
    "text": "and uh why is that because of the",
    "start": "492759",
    "end": "495199"
  },
  {
    "text": "performance because when we compile this",
    "start": "495199",
    "end": "497680"
  },
  {
    "text": "web assembly code to actual bytes um we",
    "start": "497680",
    "end": "501639"
  },
  {
    "text": "can for example wasm time can allocate",
    "start": "501639",
    "end": "504479"
  },
  {
    "text": "real registers for these parameters",
    "start": "504479",
    "end": "506520"
  },
  {
    "text": "because it's a parameters of",
    "start": "506520",
    "end": "508440"
  },
  {
    "text": "function",
    "start": "508440",
    "end": "510080"
  },
  {
    "text": "and stack",
    "start": "510080",
    "end": "512919"
  },
  {
    "text": "so uh Spider monkey maintain the native",
    "start": "512919",
    "end": "516159"
  },
  {
    "text": "stack it stack supports of like save",
    "start": "516159",
    "end": "518440"
  },
  {
    "text": "frame pointers return addresses locals",
    "start": "518440",
    "end": "521279"
  },
  {
    "text": "arguments and Etc but in VM we have only",
    "start": "521279",
    "end": "525080"
  },
  {
    "text": "like uh restricted stack is locals",
    "start": "525080",
    "end": "528640"
  },
  {
    "text": "intermediate vales and Etc and what we",
    "start": "528640",
    "end": "531920"
  },
  {
    "text": "are going to do we are going to maintain",
    "start": "531920",
    "end": "535240"
  },
  {
    "text": "the same sex structure um in a linear",
    "start": "535240",
    "end": "538440"
  },
  {
    "text": "memory as it is done in spider monkey",
    "start": "538440",
    "end": "542079"
  },
  {
    "text": "compiled to Wi wi interpreter and by",
    "start": "542079",
    "end": "546120"
  },
  {
    "text": "importing the St pointer value from a",
    "start": "546120",
    "end": "549680"
  },
  {
    "text": "spider",
    "start": "549680",
    "end": "551040"
  },
  {
    "text": "monkey uh C++ from a C++ version of",
    "start": "551040",
    "end": "554440"
  },
  {
    "text": "spider monkey and so we will have two um",
    "start": "554440",
    "end": "559800"
  },
  {
    "text": "equal Stacks bytes by bytes and so it",
    "start": "559800",
    "end": "562640"
  },
  {
    "text": "will help us in the future to provide a",
    "start": "562640",
    "end": "564959"
  },
  {
    "text": "better support for garbage collection",
    "start": "564959",
    "end": "566720"
  },
  {
    "text": "for unwinding for exceptions and Etc",
    "start": "566720",
    "end": "570399"
  },
  {
    "text": "and so there a short resum of a",
    "start": "570399",
    "end": "572320"
  },
  {
    "text": "compilation so we recreate control full",
    "start": "572320",
    "end": "575680"
  },
  {
    "text": "graph for mro assembler we used",
    "start": "575680",
    "end": "578120"
  },
  {
    "text": "structured property of spider monkey to",
    "start": "578120",
    "end": "579959"
  },
  {
    "text": "lay out all blocks without any",
    "start": "579959",
    "end": "583320"
  },
  {
    "text": "virtualizing uh program",
    "start": "583320",
    "end": "585680"
  },
  {
    "text": "counter and we represent registers as a",
    "start": "585680",
    "end": "590240"
  },
  {
    "text": "parameters and maintain almost the same",
    "start": "590240",
    "end": "594079"
  },
  {
    "text": "structure as Spider monkey natively",
    "start": "594079",
    "end": "596519"
  },
  {
    "text": "would",
    "start": "596519",
    "end": "597760"
  },
  {
    "text": "do and so how can we then install this",
    "start": "597760",
    "end": "602279"
  },
  {
    "text": "code",
    "start": "602279",
    "end": "603279"
  },
  {
    "text": "because yeah web assembly can't",
    "start": "603279",
    "end": "606160"
  },
  {
    "text": "instantiate new bites inside of web",
    "start": "606160",
    "end": "608240"
  },
  {
    "text": "assembly you have to run the host",
    "start": "608240",
    "end": "611240"
  },
  {
    "text": "code luckily wasm time is able to",
    "start": "611240",
    "end": "614399"
  },
  {
    "text": "compile and instantiate new VM modules",
    "start": "614399",
    "end": "617040"
  },
  {
    "text": "at one time so we will see how to patch",
    "start": "617040",
    "end": "620880"
  },
  {
    "text": "spider monkey a bit to install new code",
    "start": "620880",
    "end": "624560"
  },
  {
    "text": "so let's see how spider monkey",
    "start": "624560",
    "end": "626760"
  },
  {
    "text": "internally uh call code when it compile",
    "start": "626760",
    "end": "630160"
  },
  {
    "text": "it to web assembly so when we execute a",
    "start": "630160",
    "end": "632440"
  },
  {
    "text": "source. JS it's going to spider monkey.",
    "start": "632440",
    "end": "635320"
  },
  {
    "text": "wasm and this spider monkey. wasm has",
    "start": "635320",
    "end": "639200"
  },
  {
    "text": "its own web assembly memory and its own",
    "start": "639200",
    "end": "642279"
  },
  {
    "text": "web assembly table and then if we have a",
    "start": "642279",
    "end": "645880"
  },
  {
    "text": "compiled code for Source we will go to",
    "start": "645880",
    "end": "648639"
  },
  {
    "text": "jit if we don't have a compiled version",
    "start": "648639",
    "end": "651279"
  },
  {
    "text": "for this code we will go to",
    "start": "651279",
    "end": "653600"
  },
  {
    "text": "interpreter and",
    "start": "653600",
    "end": "655320"
  },
  {
    "text": "so uh if we have a compiled code we have",
    "start": "655320",
    "end": "659560"
  },
  {
    "text": "to emit a call inir and load from memory",
    "start": "659560",
    "end": "663200"
  },
  {
    "text": "why is that because uh in VM MVP it's",
    "start": "663200",
    "end": "666160"
  },
  {
    "text": "only way to indir call code and uh uh",
    "start": "666160",
    "end": "670279"
  },
  {
    "text": "this code can be changed at R time and",
    "start": "670279",
    "end": "672839"
  },
  {
    "text": "it's why it's called indirect with load",
    "start": "672839",
    "end": "675680"
  },
  {
    "text": "so if we have a freshly instantiated",
    "start": "675680",
    "end": "678720"
  },
  {
    "text": "wasm modules for our compiled code we",
    "start": "678720",
    "end": "681639"
  },
  {
    "text": "can export this wasm memory and VM table",
    "start": "681639",
    "end": "685320"
  },
  {
    "text": "extend the table actually calling table",
    "start": "685320",
    "end": "690320"
  },
  {
    "text": "uh with a new function and then patch a",
    "start": "690320",
    "end": "692800"
  },
  {
    "text": "memory of original Spider",
    "start": "692800",
    "end": "695480"
  },
  {
    "text": "monkey with setting some bu and flux",
    "start": "695480",
    "end": "698639"
  },
  {
    "text": "that we have a compiled code for this",
    "start": "698639",
    "end": "700920"
  },
  {
    "text": "Source address so the next time we will",
    "start": "700920",
    "end": "703320"
  },
  {
    "text": "execute with spider mon key this Source",
    "start": "703320",
    "end": "707120"
  },
  {
    "text": "address will go to the compiled",
    "start": "707120",
    "end": "709480"
  },
  {
    "text": "code that we provided from our aome",
    "start": "709480",
    "end": "713639"
  },
  {
    "text": "module and the next question is to when",
    "start": "713639",
    "end": "716760"
  },
  {
    "text": "to call the compilation because if we",
    "start": "716760",
    "end": "718519"
  },
  {
    "text": "call it each time on each request it",
    "start": "718519",
    "end": "720519"
  },
  {
    "text": "will be a lot of vom modules and it will",
    "start": "720519",
    "end": "723560"
  },
  {
    "text": "be very slow so we come up with an idea",
    "start": "723560",
    "end": "727320"
  },
  {
    "text": "of a so-called asynchronous compilation",
    "start": "727320",
    "end": "730040"
  },
  {
    "text": "model so um we have wasm time driver",
    "start": "730040",
    "end": "734720"
  },
  {
    "text": "that instantiate the Spiderman was",
    "start": "734720",
    "end": "737440"
  },
  {
    "text": "module so then you execute your sourcejs",
    "start": "737440",
    "end": "740839"
  },
  {
    "text": "it Returns the result you do it many",
    "start": "740839",
    "end": "743399"
  },
  {
    "text": "times and at some point of time spider",
    "start": "743399",
    "end": "745920"
  },
  {
    "text": "monkey decides to compile this source to",
    "start": "745920",
    "end": "748160"
  },
  {
    "text": "J and we postpone this compilation for",
    "start": "748160",
    "end": "752240"
  },
  {
    "text": "the some time in future and then we are",
    "start": "752240",
    "end": "755320"
  },
  {
    "text": "going to in a some next future uh run we",
    "start": "755320",
    "end": "761120"
  },
  {
    "text": "can from our wasm time driver run all",
    "start": "761120",
    "end": "763680"
  },
  {
    "text": "pend in compilation from spider monkey",
    "start": "763680",
    "end": "766519"
  },
  {
    "text": "and then instantiate all these bites and",
    "start": "766519",
    "end": "769639"
  },
  {
    "text": "execute Source",
    "start": "769639",
    "end": "770920"
  },
  {
    "text": "JZ with a jit this time so we are",
    "start": "770920",
    "end": "774440"
  },
  {
    "text": "batching all compilation",
    "start": "774440",
    "end": "777279"
  },
  {
    "text": "together and what about results uh I",
    "start": "777279",
    "end": "780800"
  },
  {
    "text": "know that benchmarking is a some kind of",
    "start": "780800",
    "end": "783800"
  },
  {
    "text": "piece of art it's not like a science and",
    "start": "783800",
    "end": "788399"
  },
  {
    "text": "uh uh so be oh",
    "start": "788399",
    "end": "791720"
  },
  {
    "text": "sorry yep uh so be prepared uh and we",
    "start": "791720",
    "end": "797120"
  },
  {
    "text": "are measuring throughput so we warm up",
    "start": "797120",
    "end": "800079"
  },
  {
    "text": "our code a little bit so we can compile",
    "start": "800079",
    "end": "803440"
  },
  {
    "text": "it version of all",
    "start": "803440",
    "end": "805440"
  },
  {
    "text": "operations and so you can see uh the the",
    "start": "805440",
    "end": "809240"
  },
  {
    "text": "difference between C++ interpreter in",
    "start": "809240",
    "end": "812399"
  },
  {
    "text": "spider monkey compiled to web assembly",
    "start": "812399",
    "end": "814839"
  },
  {
    "text": "and our G version our J version",
    "start": "814839",
    "end": "818480"
  },
  {
    "text": "significantly faster you can see a few",
    "start": "818480",
    "end": "822600"
  },
  {
    "text": "actually uh benchmarks from octane",
    "start": "822600",
    "end": "826079"
  },
  {
    "text": "especially",
    "start": "826079",
    "end": "827680"
  },
  {
    "text": "um um prepared for for for this talk",
    "start": "827680",
    "end": "830880"
  },
  {
    "text": "because",
    "start": "830880",
    "end": "832839"
  },
  {
    "text": "um because it's a benchmarking with a",
    "start": "832839",
    "end": "836360"
  },
  {
    "text": "lot of heavy",
    "start": "836360",
    "end": "838040"
  },
  {
    "text": "calculations",
    "start": "838040",
    "end": "839560"
  },
  {
    "text": "and uh yeah in general we a lot of",
    "start": "839560",
    "end": "842880"
  },
  {
    "text": "faster like five times or sometimes even",
    "start": "842880",
    "end": "846440"
  },
  {
    "text": "11 times sometimes even faster and why",
    "start": "846440",
    "end": "849959"
  },
  {
    "text": "is that why we are providing so fast",
    "start": "849959",
    "end": "852839"
  },
  {
    "text": "throughput well because JavaScript is a",
    "start": "852839",
    "end": "856079"
  },
  {
    "text": "really Dynamic language and spider",
    "start": "856079",
    "end": "858800"
  },
  {
    "text": "monkey supports a lot of optimization",
    "start": "858800",
    "end": "861240"
  },
  {
    "text": "and um specialization for uh known types",
    "start": "861240",
    "end": "866480"
  },
  {
    "text": "so it pro it provides a cash support",
    "start": "866480",
    "end": "869600"
  },
  {
    "text": "so it's a way to implement uh",
    "start": "869600",
    "end": "873160"
  },
  {
    "text": "specialization in spider monkey so we",
    "start": "873160",
    "end": "875399"
  },
  {
    "text": "get it for free because we implement the",
    "start": "875399",
    "end": "877639"
  },
  {
    "text": "micro stemler that uh that is used by",
    "start": "877639",
    "end": "881639"
  },
  {
    "text": "cash and we apply a few some tune in",
    "start": "881639",
    "end": "885519"
  },
  {
    "text": "optimization for example between our",
    "start": "885519",
    "end": "888000"
  },
  {
    "text": "compilation calls we know that no any",
    "start": "888000",
    "end": "890040"
  },
  {
    "text": "new code will be generated and so we can",
    "start": "890040",
    "end": "892560"
  },
  {
    "text": "apply for example inlining for know",
    "start": "892560",
    "end": "894800"
  },
  {
    "text": "targets for example we always can inline",
    "start": "894800",
    "end": "897959"
  },
  {
    "text": "the first SC to the first IC um",
    "start": "897959",
    "end": "902279"
  },
  {
    "text": "operation in the IC chain from spider",
    "start": "902279",
    "end": "906800"
  },
  {
    "text": "monkey what about readiness of all this",
    "start": "906839",
    "end": "909839"
  },
  {
    "text": "solution we don't support the whole JS",
    "start": "909839",
    "end": "912120"
  },
  {
    "text": "yet but we pass",
    "start": "912120",
    "end": "914759"
  },
  {
    "text": "83% of internal G tests from spider",
    "start": "914759",
    "end": "919160"
  },
  {
    "text": "monin we are actively working on",
    "start": "919160",
    "end": "921880"
  },
  {
    "text": "upstreaming all this stuff so see this",
    "start": "921880",
    "end": "924560"
  },
  {
    "text": "back",
    "start": "924560",
    "end": "926040"
  },
  {
    "text": "for uh for any news",
    "start": "926040",
    "end": "930959"
  },
  {
    "text": "and um how to use all of this",
    "start": "931680",
    "end": "935759"
  },
  {
    "text": "yep we have three interesting mods of",
    "start": "935759",
    "end": "941360"
  },
  {
    "text": "execution the first mod is called Full",
    "start": "941360",
    "end": "943880"
  },
  {
    "text": "specialization the second one called the",
    "start": "943880",
    "end": "946240"
  },
  {
    "text": "sharing scheme and the third one",
    "start": "946240",
    "end": "949319"
  },
  {
    "text": "calls call imp compilation each",
    "start": "949319",
    "end": "952600"
  },
  {
    "text": "time so in a full specialization",
    "start": "952600",
    "end": "955600"
  },
  {
    "text": "mode you you will we will provide you a",
    "start": "955600",
    "end": "958519"
  },
  {
    "text": "Spiderman compile it to wasm and you",
    "start": "958519",
    "end": "960959"
  },
  {
    "text": "provide your",
    "start": "960959",
    "end": "963000"
  },
  {
    "text": "sourcejs and you can or actually it will",
    "start": "963000",
    "end": "967079"
  },
  {
    "text": "be better if you provide some test data",
    "start": "967079",
    "end": "969680"
  },
  {
    "text": "for your source. JavaScript in in some",
    "start": "969680",
    "end": "973720"
  },
  {
    "text": "cases and it's easily easy to provide",
    "start": "973720",
    "end": "976399"
  },
  {
    "text": "some test data for example if you are",
    "start": "976399",
    "end": "978360"
  },
  {
    "text": "compiling your",
    "start": "978360",
    "end": "980759"
  },
  {
    "text": "typescript into the source JavaScript",
    "start": "980759",
    "end": "983720"
  },
  {
    "text": "you know all the types or you for",
    "start": "983720",
    "end": "985839"
  },
  {
    "text": "example you're using component model and",
    "start": "985839",
    "end": "987959"
  },
  {
    "text": "you know the the real type that is going",
    "start": "987959",
    "end": "990440"
  },
  {
    "text": "to your function in JavaScript and we",
    "start": "990440",
    "end": "992759"
  },
  {
    "text": "will provide you a fully specialized",
    "start": "992759",
    "end": "994800"
  },
  {
    "text": "only one web assembly module that is the",
    "start": "994800",
    "end": "998360"
  },
  {
    "text": "compilation of spider monkey with all of",
    "start": "998360",
    "end": "1001759"
  },
  {
    "text": "jet um of all of the jet modules",
    "start": "1001759",
    "end": "1007480"
  },
  {
    "text": "together it's good because you can then",
    "start": "1007480",
    "end": "1010279"
  },
  {
    "text": "disable any runtime code",
    "start": "1010279",
    "end": "1012800"
  },
  {
    "text": "generation if needed you have a full",
    "start": "1012800",
    "end": "1016079"
  },
  {
    "text": "support full power of of jit with",
    "start": "1016079",
    "end": "1018920"
  },
  {
    "text": "Baseline and all kind of",
    "start": "1018920",
    "end": "1021560"
  },
  {
    "text": "ICS and you will have a full full",
    "start": "1021560",
    "end": "1024160"
  },
  {
    "text": "isolation because it's a one module per",
    "start": "1024160",
    "end": "1027360"
  },
  {
    "text": "your source.",
    "start": "1027360",
    "end": "1029120"
  },
  {
    "text": "JS but it still has big size around 5",
    "start": "1029120",
    "end": "1035038"
  },
  {
    "text": "megabytes okay the sharing",
    "start": "1036640",
    "end": "1040160"
  },
  {
    "text": "scheme the workload is similar so you",
    "start": "1040160",
    "end": "1043000"
  },
  {
    "text": "provide spider monkey source. J and test",
    "start": "1043000",
    "end": "1045880"
  },
  {
    "text": "data and then we can generate you a very",
    "start": "1045880",
    "end": "1049280"
  },
  {
    "text": "small jit",
    "start": "1049280",
    "end": "1051679"
  },
  {
    "text": "module so then for example in a uh Cloud",
    "start": "1051679",
    "end": "1057200"
  },
  {
    "text": "environment you can you want to execute",
    "start": "1057200",
    "end": "1059320"
  },
  {
    "text": "your Source JavaScript for for example",
    "start": "1059320",
    "end": "1061520"
  },
  {
    "text": "for a client and you already aut",
    "start": "1061520",
    "end": "1064559"
  },
  {
    "text": "compiled this jit module for this",
    "start": "1064559",
    "end": "1067120"
  },
  {
    "text": "particular client with Source dress and",
    "start": "1067120",
    "end": "1070000"
  },
  {
    "text": "then you can instantiate a shared",
    "start": "1070000",
    "end": "1071720"
  },
  {
    "text": "version of spider",
    "start": "1071720",
    "end": "1073000"
  },
  {
    "text": "monkey install this a very small module",
    "start": "1073000",
    "end": "1077640"
  },
  {
    "text": "and it it's a phas called called setup",
    "start": "1077640",
    "end": "1079480"
  },
  {
    "text": "phas and then you can execute source.",
    "start": "1079480",
    "end": "1082679"
  },
  {
    "text": "with j and it is this in uh setup phas",
    "start": "1082679",
    "end": "1086640"
  },
  {
    "text": "is very fast because we're using visor",
    "start": "1086640",
    "end": "1089559"
  },
  {
    "text": "and",
    "start": "1089559",
    "end": "1090880"
  },
  {
    "text": "U uh incorporate all of the G time into",
    "start": "1090880",
    "end": "1094280"
  },
  {
    "text": "Spiderman key already ahead of",
    "start": "1094280",
    "end": "1097559"
  },
  {
    "text": "time the sharing scheme",
    "start": "1097559",
    "end": "1101039"
  },
  {
    "text": "is it's what is called it allows you to",
    "start": "1101039",
    "end": "1104960"
  },
  {
    "text": "share the all runtime code of spider",
    "start": "1104960",
    "end": "1107240"
  },
  {
    "text": "monkey between all clients",
    "start": "1107240",
    "end": "1110000"
  },
  {
    "text": "and uh you still need one instance per",
    "start": "1110000",
    "end": "1112159"
  },
  {
    "text": "client for isolation and security",
    "start": "1112159",
    "end": "1115880"
  },
  {
    "text": "reason and this G",
    "start": "1115880",
    "end": "1118360"
  },
  {
    "text": "module you you need to use to provide a",
    "start": "1118360",
    "end": "1122679"
  },
  {
    "text": "j code to your spider",
    "start": "1122679",
    "end": "1125559"
  },
  {
    "text": "monkey",
    "start": "1125559",
    "end": "1127640"
  },
  {
    "text": "okay yeah and the third mod of execution",
    "start": "1127640",
    "end": "1131200"
  },
  {
    "text": "called call compilation each time it's",
    "start": "1131200",
    "end": "1133400"
  },
  {
    "text": "actually emulation of how Native SP",
    "start": "1133400",
    "end": "1135440"
  },
  {
    "text": "monkey works for tests it's uh",
    "start": "1135440",
    "end": "1139480"
  },
  {
    "text": "very",
    "start": "1139480",
    "end": "1140559"
  },
  {
    "text": "slow but we can use it for test to",
    "start": "1140559",
    "end": "1143799"
  },
  {
    "text": "replace the shell inside of spider",
    "start": "1143799",
    "end": "1146240"
  },
  {
    "text": "monkey with our custom shell and it and",
    "start": "1146240",
    "end": "1151200"
  },
  {
    "text": "we can run all kind of tests inside the",
    "start": "1151200",
    "end": "1154480"
  },
  {
    "text": "spider",
    "start": "1154480",
    "end": "1156559"
  },
  {
    "text": "marke okay and that's a short resume of",
    "start": "1156559",
    "end": "1160159"
  },
  {
    "text": "what we what we've done so we",
    "start": "1160159",
    "end": "1162280"
  },
  {
    "text": "implemented that new wasm back end for",
    "start": "1162280",
    "end": "1164320"
  },
  {
    "text": "spider monkey we supported ic's and",
    "start": "1164320",
    "end": "1167559"
  },
  {
    "text": "provided promising pair results from 2x",
    "start": "1167559",
    "end": "1170159"
  },
  {
    "text": "to 11x so why from 2x not from like 1X",
    "start": "1170159",
    "end": "1175000"
  },
  {
    "text": "even for a simple",
    "start": "1175000",
    "end": "1176880"
  },
  {
    "text": "console.log hello world applications you",
    "start": "1176880",
    "end": "1179840"
  },
  {
    "text": "are still doing look up like console do",
    "start": "1179840",
    "end": "1182600"
  },
  {
    "text": "lo you are finding lock object and this",
    "start": "1182600",
    "end": "1184960"
  },
  {
    "text": "is done through the cash and uh so we",
    "start": "1184960",
    "end": "1189240"
  },
  {
    "text": "are we we are fast at",
    "start": "1189240",
    "end": "1191360"
  },
  {
    "text": "it and we are passing most of the G",
    "start": "1191360",
    "end": "1195120"
  },
  {
    "text": "tests and continue our development and",
    "start": "1195120",
    "end": "1199480"
  },
  {
    "text": "provide interesting modes of execution",
    "start": "1199480",
    "end": "1203000"
  },
  {
    "text": "or for cloud or for",
    "start": "1203000",
    "end": "1205760"
  },
  {
    "text": "embedding and right now we support only",
    "start": "1205760",
    "end": "1209039"
  },
  {
    "text": "the first J tier but in theoretically we",
    "start": "1209039",
    "end": "1213120"
  },
  {
    "text": "unblocking the higher G tiers like warp",
    "start": "1213120",
    "end": "1217760"
  },
  {
    "text": "or",
    "start": "1217760",
    "end": "1219280"
  },
  {
    "text": "ion and I want to say thanks for all",
    "start": "1219280",
    "end": "1224400"
  },
  {
    "text": "people from Shopify who sponsored this",
    "start": "1224400",
    "end": "1227400"
  },
  {
    "text": "work as especially to Mike Shier and sa",
    "start": "1227400",
    "end": "1230600"
  },
  {
    "text": "cabera who are passionately provide us",
    "start": "1230600",
    "end": "1233440"
  },
  {
    "text": "feedback for our",
    "start": "1233440",
    "end": "1235280"
  },
  {
    "text": "work and I want to say thanks to spider",
    "start": "1235280",
    "end": "1238400"
  },
  {
    "text": "Mony team who reviewing and providing",
    "start": "1238400",
    "end": "1241360"
  },
  {
    "text": "feedback for our design documents and",
    "start": "1241360",
    "end": "1243320"
  },
  {
    "text": "our",
    "start": "1243320",
    "end": "1244919"
  },
  {
    "text": "patches and yep I'm happy to hear your",
    "start": "1244919",
    "end": "1248440"
  },
  {
    "text": "opinion about all of",
    "start": "1248440",
    "end": "1251440"
  },
  {
    "text": "this",
    "start": "1257600",
    "end": "1260600"
  },
  {
    "text": "hello uh awesome presentation I'm super",
    "start": "1261760",
    "end": "1264120"
  },
  {
    "text": "excited about like your work um I wonder",
    "start": "1264120",
    "end": "1267520"
  },
  {
    "text": "if you have thought of of inlining the W",
    "start": "1267520",
    "end": "1269880"
  },
  {
    "text": "assembly itself into the previous W",
    "start": "1269880",
    "end": "1271679"
  },
  {
    "text": "assembly so there are like no further",
    "start": "1271679",
    "end": "1273640"
  },
  {
    "text": "calls kind like needed could you repeat",
    "start": "1273640",
    "end": "1276400"
  },
  {
    "text": "sorry if uh have you thought about the",
    "start": "1276400",
    "end": "1278320"
  },
  {
    "text": "inlining the generated jet web assembly",
    "start": "1278320",
    "end": "1281679"
  },
  {
    "text": "inside of the the runtime one instead of",
    "start": "1281679",
    "end": "1285440"
  },
  {
    "text": "the the component one if that makes",
    "start": "1285440",
    "end": "1287520"
  },
  {
    "text": "sense",
    "start": "1287520",
    "end": "1289640"
  },
  {
    "text": "don't",
    "start": "1289640",
    "end": "1290720"
  },
  {
    "text": "know actually do you mean in lining",
    "start": "1290720",
    "end": "1294120"
  },
  {
    "text": "inside of our generated code or in",
    "start": "1294120",
    "end": "1296760"
  },
  {
    "text": "lining uh into the run time yeah in",
    "start": "1296760",
    "end": "1300720"
  },
  {
    "text": "lining the generated jit code inside of",
    "start": "1300720",
    "end": "1303880"
  },
  {
    "text": "the the the base one instead of the",
    "start": "1303880",
    "end": "1306000"
  },
  {
    "text": "spider monkey GS plus I know whatever",
    "start": "1306000",
    "end": "1309480"
  },
  {
    "text": "yeah yeah we we we're already doing that",
    "start": "1309480",
    "end": "1311559"
  },
  {
    "text": "okay so um when we provide a spider",
    "start": "1311559",
    "end": "1314600"
  },
  {
    "text": "monkey for shared scheme we regenerate",
    "start": "1314600",
    "end": "1316799"
  },
  {
    "text": "all J one time as a g module then we",
    "start": "1316799",
    "end": "1319799"
  },
  {
    "text": "merge these two modules together so we",
    "start": "1319799",
    "end": "1322080"
  },
  {
    "text": "don't do like table grow and Etc we just",
    "start": "1322080",
    "end": "1324840"
  },
  {
    "text": "incorporate all this into one module so",
    "start": "1324840",
    "end": "1327640"
  },
  {
    "text": "then it will can be done can can could",
    "start": "1327640",
    "end": "1330279"
  },
  {
    "text": "be instantiated faster yeah awesome",
    "start": "1330279",
    "end": "1332480"
  },
  {
    "text": "thank",
    "start": "1332480",
    "end": "1334640"
  },
  {
    "text": "you do you have to add um more apis on",
    "start": "1337360",
    "end": "1341840"
  },
  {
    "text": "the host side to support uh",
    "start": "1341840",
    "end": "1344919"
  },
  {
    "text": "compilation uh yes yes okay so it's Wy",
    "start": "1344919",
    "end": "1349520"
  },
  {
    "text": "plus some extensions that enable this",
    "start": "1349520",
    "end": "1353039"
  },
  {
    "text": "it's just Wy plus some exported function",
    "start": "1353039",
    "end": "1355919"
  },
  {
    "text": "added to Spiderman K C++ it's",
    "start": "1355919",
    "end": "1359960"
  },
  {
    "text": "yeah actually following right that",
    "start": "1361320",
    "end": "1364320"
  },
  {
    "text": "question um do you see an option uh a",
    "start": "1364320",
    "end": "1367720"
  },
  {
    "text": "sensible API that would be cross",
    "start": "1367720",
    "end": "1369960"
  },
  {
    "text": "language that could enable chit",
    "start": "1369960",
    "end": "1373799"
  },
  {
    "text": "compilation I don't know I don't think",
    "start": "1374320",
    "end": "1376960"
  },
  {
    "text": "it's possible for any language yeah it's",
    "start": "1376960",
    "end": "1378960"
  },
  {
    "text": "only applied for SP monkey and it needs",
    "start": "1378960",
    "end": "1381679"
  },
  {
    "text": "to be done inside of one engine yeah",
    "start": "1381679",
    "end": "1384440"
  },
  {
    "text": "yeah no but conceptually do you see the",
    "start": "1384440",
    "end": "1387159"
  },
  {
    "text": "if the possibility of having a generic",
    "start": "1387159",
    "end": "1390480"
  },
  {
    "text": "uh API that could be used by different",
    "start": "1390480",
    "end": "1392840"
  },
  {
    "text": "Jets yeah yeah why not",
    "start": "1392840",
    "end": "1396840"
  },
  {
    "text": "yeah yep so thank",
    "start": "1403559",
    "end": "1407240"
  },
  {
    "text": "you",
    "start": "1407440",
    "end": "1410440"
  }
]