[
  {
    "text": "[Music]",
    "start": "310",
    "end": "15019"
  },
  {
    "text": "hello everyone my name is Fabio Nepos this is my colleague Patrick Tikla uh",
    "start": "19279",
    "end": "25119"
  },
  {
    "text": "the both of us are working in uh on the gravium team with an Oracle labs and",
    "start": "25119",
    "end": "30720"
  },
  {
    "text": "today we're going to talk about the future of uh run write once run anywhere",
    "start": "30720",
    "end": "37280"
  },
  {
    "text": "uh from Java to web assembly so some of you may know that uh",
    "start": "37280",
    "end": "42800"
  },
  {
    "text": "we have a web assembly runtime that you can embed in Java that's not really new there's other runtimes like chory right",
    "start": "42800",
    "end": "49920"
  },
  {
    "text": "that you can use we're going to talk about guism at the end a little bit i want to show you a cool demo something",
    "start": "49920",
    "end": "55280"
  },
  {
    "text": "that we can do uh with our um grow was stack um but today we are really keen",
    "start": "55280",
    "end": "63359"
  },
  {
    "text": "and really um excited to show you the other project that we've been working",
    "start": "63359",
    "end": "69280"
  },
  {
    "text": "around uh working on which is our web assembly back end um for grow VM so we",
    "start": "69280",
    "end": "76439"
  },
  {
    "text": "thought we show you a demo and to be honest this is a bit crazy so bear with",
    "start": "76439",
    "end": "83520"
  },
  {
    "text": "me and hopefully um yeah we'll get through the demo uh at least I pray to",
    "start": "83520",
    "end": "89360"
  },
  {
    "text": "the demo gods so what we're trying to do is I'm going to open my Chrome and this",
    "start": "89360",
    "end": "96320"
  },
  {
    "text": "is um the Java compiler Java C compiled with Gravm to Web Assembly running in",
    "start": "96320",
    "end": "103840"
  },
  {
    "text": "the browser and here's a simple hello world written in Java so I can compile",
    "start": "103840",
    "end": "109280"
  },
  {
    "text": "it i can compile it in the browser and it compiles just fine if I put in a typo",
    "start": "109280",
    "end": "115280"
  },
  {
    "text": "and I recompile I get an error message from the compiler right so let's go back",
    "start": "115280",
    "end": "121840"
  },
  {
    "text": "and let's compile and here's a class file uh we're going to take a look at",
    "start": "121840",
    "end": "126880"
  },
  {
    "text": "that later but we can also use Java P to disassemble um everything that we just",
    "start": "126880",
    "end": "132560"
  },
  {
    "text": "compiled so here you can see for example the string that was in there and this is",
    "start": "132560",
    "end": "138480"
  },
  {
    "text": "Java byte code right so uh just to make sure that this is not fake let's replace",
    "start": "138480",
    "end": "145879"
  },
  {
    "text": "this and say was io compile and now we're going to download",
    "start": "145879",
    "end": "154200"
  },
  {
    "text": "this in my download directory there's now a new",
    "start": "154200",
    "end": "159560"
  },
  {
    "text": "file hello class which I can run on Java right so",
    "start": "159560",
    "end": "166879"
  },
  {
    "text": "this is Java byte code compiled in the browser and then I ran it on",
    "start": "166879",
    "end": "174879"
  },
  {
    "text": "Java hold on but didn't we say we can compile Java byte code to web assembly",
    "start": "179720",
    "end": "186239"
  },
  {
    "text": "well yes and let's do that so we have native image our tool for AOT",
    "start": "186239",
    "end": "191720"
  },
  {
    "text": "compilation and I can enable the experimental web assembly back end and I",
    "start": "191720",
    "end": "197840"
  },
  {
    "text": "can call it with the same argument that I call Java with so now I'm kicking off a build with GRVM this is using the web",
    "start": "197840",
    "end": "206800"
  },
  {
    "text": "assembly back end there's a lot of things going on but within 6.3 seconds",
    "start": "206800",
    "end": "212080"
  },
  {
    "text": "we now have a web assembly module that I can run on",
    "start": "212080",
    "end": "219200"
  },
  {
    "text": "node [Applause]",
    "start": "219799",
    "end": "226680"
  },
  {
    "text": "right okay cool and to tell you all about how this works I now like to hand",
    "start": "226680",
    "end": "233840"
  },
  {
    "text": "this over to Patrick",
    "start": "233840",
    "end": "237560"
  },
  {
    "text": "yes thank you Fabio uh I mean this is all built on our um ground VM ahead of",
    "start": "239439",
    "end": "245840"
  },
  {
    "text": "time compilation technology right native image um so maybe let's just quickly go over how this works um I mean it right",
    "start": "245840",
    "end": "252959"
  },
  {
    "text": "usually Java is a just in time compile language right uh at runtime the",
    "start": "252959",
    "end": "258959"
  },
  {
    "text": "compiler like dynamically figures out what you want to compile so on and grow",
    "start": "258959",
    "end": "264160"
  },
  {
    "text": "is kind of more uh more classical compiler like your GCC right that takes",
    "start": "264160",
    "end": "269280"
  },
  {
    "text": "as an input your uh like your applications your libraries your standard library um in this case al some",
    "start": "269280",
    "end": "274759"
  },
  {
    "text": "grav specific code um takes it all in",
    "start": "274759",
    "end": "279919"
  },
  {
    "text": "compiles them into a native executable and for native image the way we do this um here in the middle we do a some um a",
    "start": "279919",
    "end": "288160"
  },
  {
    "text": "fixed point um iteration on our static analysis so the way this works is we",
    "start": "288160",
    "end": "293280"
  },
  {
    "text": "start at our main entry point so that's your main method usually and from there we spread out we figure out all the",
    "start": "293280",
    "end": "300160"
  },
  {
    "text": "methods that this thing calls and that all those things called transitively uh we do this in right in an iteration",
    "start": "300160",
    "end": "307120"
  },
  {
    "text": "until we no longer discover anything new as part of that we may have to run some",
    "start": "307120",
    "end": "312800"
  },
  {
    "text": "Java static initializers and as part of that some Java objects may get created those are then snapshotted and in the",
    "start": "312800",
    "end": "320800"
  },
  {
    "text": "final image are um emitted as something we call the image heap so that means at",
    "start": "320800",
    "end": "325840"
  },
  {
    "text": "runtime you don't have to reinitialize those objects they're already there for you and right traditionally native image",
    "start": "325840",
    "end": "331039"
  },
  {
    "text": "would then produce a native executable for example like for Linux on x86 right",
    "start": "331039",
    "end": "336880"
  },
  {
    "text": "um and now where we come in is really just that last part here we will uh now",
    "start": "336880",
    "end": "342639"
  },
  {
    "text": "generate a was module out of the whole thing um everything in frontier that's more or less basically the same of",
    "start": "342639",
    "end": "348960"
  },
  {
    "text": "course with certain modifications but the core pipeline um is unchanged just",
    "start": "348960",
    "end": "354080"
  },
  {
    "text": "in the in the back end we now emit for each function or for each method we emit a web assembly function and then package",
    "start": "354080",
    "end": "360880"
  },
  {
    "text": "everything up into a was a module um right this uh we target a the was gc",
    "start": "360880",
    "end": "368560"
  },
  {
    "text": "proposal and currently this is also targeting a ch embedder um so we there",
    "start": "368560",
    "end": "374080"
  },
  {
    "text": "is a uh JavaScript binding that's produced with the with the compilation",
    "start": "374080",
    "end": "379120"
  },
  {
    "text": "you may have already seen this in a demo right there's a the hello that you actually run is a JavaScript file this",
    "start": "379120",
    "end": "384880"
  },
  {
    "text": "uh provides some imports for the wasome module downloads it instantiates it um and so on like it provides for example",
    "start": "384880",
    "end": "391120"
  },
  {
    "text": "the printing functionality because otherwise like it's wasn't doesn't really do printing by itself um yeah",
    "start": "391120",
    "end": "397360"
  },
  {
    "text": "already mentioned this we're doing we're targeting the garbage collection proposal and exception handling this",
    "start": "397360",
    "end": "403039"
  },
  {
    "text": "makes like mapping Java to wom a lot easier right every Java type is",
    "start": "403039",
    "end": "408479"
  },
  {
    "text": "represented as a web assembly strct and exception handling same story right basically what maps almost one to one to",
    "start": "408479",
    "end": "415280"
  },
  {
    "text": "web assembly um this helps a lot with uh just complexity it helps with with code size currently hello world is around uh",
    "start": "415280",
    "end": "422400"
  },
  {
    "text": "1 megabyte in size seems pretty big um of course it is for a short program it's not that big also this is before you",
    "start": "422400",
    "end": "429360"
  },
  {
    "text": "even do compression or running was opt if you do all of that you get down to like 300 kilobytes um easy uh another",
    "start": "429360",
    "end": "437680"
  },
  {
    "text": "nice thing that we have here um because we use Wasam GC we can now do we can now share WOM Java objects with JavaScript",
    "start": "437680",
    "end": "445280"
  },
  {
    "text": "and we can share JavaScript objects with Java um and we have like a nice Java JavaScript interoperability API that",
    "start": "445280",
    "end": "452080"
  },
  {
    "text": "does this and like in the demo we saw before like all the buttons all the all the interaction that was all backed by",
    "start": "452080",
    "end": "458240"
  },
  {
    "text": "Java code so every button had an event listener that called Java code that did the actual compilation um and like the",
    "start": "458240",
    "end": "466160"
  },
  {
    "text": "the API handles conversions of all different types for you it handles um",
    "start": "466160",
    "end": "471280"
  },
  {
    "text": "method invokes and so on there's really a lot you can do uh if you're targeting",
    "start": "471280",
    "end": "476319"
  },
  {
    "text": "a JS embedding um another thing here is that you basically have the whole Java",
    "start": "476319",
    "end": "482720"
  },
  {
    "text": "standard library the JDK available to you right java P Java C they're all shipped with the JDK you just have to",
    "start": "482720",
    "end": "488479"
  },
  {
    "text": "import them um and call into them and they're available to you of course not everything is working um things like",
    "start": "488479",
    "end": "494960"
  },
  {
    "text": "threading networking graphics that's all things that will just throw an exception right now if you call them um but it's I",
    "start": "494960",
    "end": "501680"
  },
  {
    "text": "mean it's all step by step right now what what what does work is is for example file system those parts have been appropriately substituted in the",
    "start": "501680",
    "end": "508160"
  },
  {
    "text": "JDK um in like an in-memory file system so you have all the file system stuff",
    "start": "508160",
    "end": "514399"
  },
  {
    "text": "available it's just not persisted anymore um but you can use it and it als it's also used in this demo right for",
    "start": "514399",
    "end": "519839"
  },
  {
    "text": "example you at beginning um when the the app starts up it first populates the",
    "start": "519839",
    "end": "525519"
  },
  {
    "text": "in-memory file system with all the JDK classes it needs um it writes the the",
    "start": "525519",
    "end": "530880"
  },
  {
    "text": "actual Java file into the file system where Java C then reads it out again and then places back the class file that has",
    "start": "530880",
    "end": "537519"
  },
  {
    "text": "uh finished compiling uh and finally we do plan to contribute this to the open-",
    "start": "537519",
    "end": "542880"
  },
  {
    "text": "source CrawlVM community edition um but if you want to get your hands on this uh",
    "start": "542880",
    "end": "548000"
  },
  {
    "text": "right now it is available as a preview build an early access build of Oracle Grow VM um it will it's available in EA",
    "start": "548000",
    "end": "556560"
  },
  {
    "text": "build 15 for JDK25 um SDK man does not currently have",
    "start": "556560",
    "end": "561600"
  },
  {
    "text": "it at least last we checked um let's hope over the weekend this should be in there it is available from our GitHub",
    "start": "561600",
    "end": "568160"
  },
  {
    "text": "page where we um provide these early access builds as well so you can use it hello world also works with earlier",
    "start": "568160",
    "end": "574560"
  },
  {
    "text": "versions but for uh you need version 15 to get like the Java C demo working you",
    "start": "574560",
    "end": "579920"
  },
  {
    "text": "also need Binarian we use that one for assembling um the final binary we just",
    "start": "579920",
    "end": "585200"
  },
  {
    "text": "emit the text format and binarian then takes care of actually producing the um",
    "start": "585200",
    "end": "590240"
  },
  {
    "text": "the web assembly module and the last part I mean this is more just a reference right use a native image tool",
    "start": "590240",
    "end": "596160"
  },
  {
    "text": "like you would for compiling any other Java application but you now use the D-tool: SVM-wam option to turn on this",
    "start": "596160",
    "end": "604640"
  },
  {
    "text": "new web assembly back end all right um I've uh like this is like the the rough",
    "start": "604640",
    "end": "611120"
  },
  {
    "text": "outline of what this thing actually is and there's a ton of things I could talk about here but I just don't really have",
    "start": "611120",
    "end": "616560"
  },
  {
    "text": "the time so I'm going to drill down on just one thing um and this is how we're using the wasmgc proposal specifically",
    "start": "616560",
    "end": "623680"
  },
  {
    "text": "the um the the type hierarchy it produc provides for us to map the java type",
    "start": "623680",
    "end": "630000"
  },
  {
    "text": "system and how we then use this for doing type checks for doing cha type checks in wasc right on the left here",
    "start": "630000",
    "end": "636000"
  },
  {
    "text": "you have the the java type system well the type hierarchy um this is pretty straightforward just want a quick",
    "start": "636000",
    "end": "642240"
  },
  {
    "text": "refresher on how the arrays are laid out so every uh there's primitive and object arrays primitive arrays are just all",
    "start": "642240",
    "end": "648800"
  },
  {
    "text": "objects And the object arrays have their own little type hierarchy right if a if a",
    "start": "648800",
    "end": "654000"
  },
  {
    "text": "class A is a subclass of a class B the arrays of A will also be a subclass of",
    "start": "654000",
    "end": "660240"
  },
  {
    "text": "the arrays of B um so little uh something that Java has um and we'll see",
    "start": "660240",
    "end": "665600"
  },
  {
    "text": "now how do we actually map this into the WASMT GC type hierarchy and we do this",
    "start": "665600",
    "end": "671200"
  },
  {
    "text": "more or less by just shoving the whole thing under the strct uh the strct type",
    "start": "671200",
    "end": "676480"
  },
  {
    "text": "um so pretty straightforward every every Java object has a strct definition or",
    "start": "676480",
    "end": "682800"
  },
  {
    "text": "most of them do at least like all regular objects do write number integer all regular classes have that for arrays",
    "start": "682800",
    "end": "688399"
  },
  {
    "text": "the story is slightly different um just because a bit of the quirks of how Java works um one thing we did is we",
    "start": "688399",
    "end": "694560"
  },
  {
    "text": "introduced this base array type uh which Java does not have it makes it's very",
    "start": "694560",
    "end": "700320"
  },
  {
    "text": "useful in was gc because you can uh read array length without knowing what the actual array is which is something you",
    "start": "700320",
    "end": "706480"
  },
  {
    "text": "can't really do in Java In Java you just like let the JVM do this for you and it",
    "start": "706480",
    "end": "711760"
  },
  {
    "text": "uh does some like unsafe magic and it works but for wasome you can't really do this you need to be very precise about",
    "start": "711760",
    "end": "717920"
  },
  {
    "text": "what you do because everything is supposed to be type safe um uh next the",
    "start": "717920",
    "end": "723040"
  },
  {
    "text": "primitive arrays are just the same as they are in Java and now the I think the biggest limitation of this here is the",
    "start": "723040",
    "end": "730240"
  },
  {
    "text": "object arrays um we had to represent all object arrays as a single strct",
    "start": "730240",
    "end": "735440"
  },
  {
    "text": "definition um in was GC uh because that's just because how the was GC type",
    "start": "735440",
    "end": "742079"
  },
  {
    "text": "system works right uh you cannot um have arrays subtyping each other if the",
    "start": "742079",
    "end": "747920"
  },
  {
    "text": "arrays are mutable so we can't uh we can't really have the same type",
    "start": "747920",
    "end": "753040"
  },
  {
    "text": "hierarchy as Java has for objects which is uh makes a lot of sense because for Java this is also not totally sane uh in",
    "start": "753040",
    "end": "760959"
  },
  {
    "text": "Java every time you store something in an array there is a runtime check to make sure that this is actually a valid store because you could take a number",
    "start": "760959",
    "end": "768720"
  },
  {
    "text": "array cast it to object and write the string into it which of course does not make any sense um in Java this just",
    "start": "768720",
    "end": "774800"
  },
  {
    "text": "fails at at runtime was GC will just not allow you to do that at all which is why all object arrays are just one single",
    "start": "774800",
    "end": "782000"
  },
  {
    "text": "thing um and we'll see how this actually then now translates into type checks um",
    "start": "782000",
    "end": "787839"
  },
  {
    "text": "in the final uh web assembly binary so let me switch to a terminal here",
    "start": "787839",
    "end": "794880"
  },
  {
    "text": "uh let me see here yes so I have a just a very small program Java program here",
    "start": "794880",
    "end": "800800"
  },
  {
    "text": "on the left that does a bunch of type checks right bunch of instance ofs against some some input object and on",
    "start": "800800",
    "end": "808639"
  },
  {
    "text": "the right here I have the compiler output of our um wasn't back end right",
    "start": "808639",
    "end": "814160"
  },
  {
    "text": "this is onetoone map to a wasn't function and if you check here the first the first if is very basic uses ref test",
    "start": "814160",
    "end": "822240"
  },
  {
    "text": "which is GC's built-in um subtype checking because number is part of that",
    "start": "822240",
    "end": "827839"
  },
  {
    "text": "hierarchy and does faithfully um represent all those relationships we can just use uh what was builtin",
    "start": "827839",
    "end": "834959"
  },
  {
    "text": "instructions for this the second one uh which is the the check for string should",
    "start": "834959",
    "end": "840079"
  },
  {
    "text": "be the same in this case it's a bit different because the compiler figured out hey string doesn't have any subtypes",
    "start": "840079",
    "end": "846639"
  },
  {
    "text": "so instead of doing a subtype check I can do a type equality check um now",
    "start": "846639",
    "end": "851800"
  },
  {
    "text": "wasn't type equality checks unfortunately so which is why we need to fall back to our own implementation of",
    "start": "851800",
    "end": "857839"
  },
  {
    "text": "this uh which uses the metadata that Java already has about types right the class um object which encodes this kind",
    "start": "857839",
    "end": "865600"
  },
  {
    "text": "of information um the next is going to be the object array this looks exactly the same right object arrays are uh can",
    "start": "865600",
    "end": "873040"
  },
  {
    "text": "be represented as those strcts so we just do a ne regular ref test again",
    "start": "873040",
    "end": "878560"
  },
  {
    "text": "against this against the strruct uh which is in this case of course represents all object arrays but it is",
    "start": "878560",
    "end": "884720"
  },
  {
    "text": "also enough to just check for object object array specifically since this is a subtype check um the only like this",
    "start": "884720",
    "end": "892800"
  },
  {
    "text": "stops working once you um get into uh type checking against subtypes",
    "start": "892800",
    "end": "899040"
  },
  {
    "text": "of object array right so if you want to know if something is a number array you can't really do that in web assembly um",
    "start": "899040",
    "end": "906720"
  },
  {
    "text": "because all uh at runtime right the the the type of reference you have it's the",
    "start": "906720",
    "end": "912320"
  },
  {
    "text": "same for all object arrays so you can't really do a a type check there so we also fall back to our internal type",
    "start": "912320",
    "end": "918320"
  },
  {
    "text": "checking algorithm for I'm not going to get into how this works this is uh um it's pretty complicated so it's I think",
    "start": "918320",
    "end": "924800"
  },
  {
    "text": "just going to skip over that but we have all that information available in um in",
    "start": "924800",
    "end": "930000"
  },
  {
    "text": "the in our internal metadata about uh which classes are available all right",
    "start": "930000",
    "end": "938240"
  },
  {
    "text": "um ah now all right yes so uh I mean you've seen the you've seen the demo",
    "start": "938519",
    "end": "944959"
  },
  {
    "text": "about Java C uh right and it's I mean it's a pretty it's pretty cool demo uh but like why would you why is this",
    "start": "944959",
    "end": "951680"
  },
  {
    "text": "useful to you why would you want to like compile Java C all over the place and put it in your like on your websites",
    "start": "951680",
    "end": "957440"
  },
  {
    "text": "usually you don't right but this is a general use case right uh turning command line interfaces into web UIs",
    "start": "957440",
    "end": "963279"
  },
  {
    "text": "with the same underlying code so an example here is we have something called the corral development kit which is a",
    "start": "963279",
    "end": "969920"
  },
  {
    "text": "micronut based framework uh micro a micronaut based microser framework and it has a command line interface which uh",
    "start": "969920",
    "end": "978160"
  },
  {
    "text": "you give it certain configuration right some command line flags and it will then create a project template for you based",
    "start": "978160",
    "end": "984000"
  },
  {
    "text": "on those flags and now with this back end right you could you can take the same underlying Java code um write some",
    "start": "984000",
    "end": "991040"
  },
  {
    "text": "Java glue code around this that then um that expose the right functionality",
    "start": "991040",
    "end": "996560"
  },
  {
    "text": "uh build some nice UI in the web right um of course this you have to do by hand",
    "start": "996880",
    "end": "1002639"
  },
  {
    "text": "this is not something Java can do for you obviously um but you map all those",
    "start": "1002639",
    "end": "1007759"
  },
  {
    "text": "all those configurations you map to nice um selectors or radio boxes whatever and",
    "start": "1007759",
    "end": "1012880"
  },
  {
    "text": "then when you press the button generate project you just call into the Java code the Java code uh creates a whole project",
    "start": "1012880",
    "end": "1020320"
  },
  {
    "text": "for you gives you back a zip file and you let your users download that um the",
    "start": "1020320",
    "end": "1025839"
  },
  {
    "text": "underlying code is the same right usually you would have to rewrite the whole logic about how the project is um",
    "start": "1025839",
    "end": "1031438"
  },
  {
    "text": "composed you have to rewrite the logic usually but with this you can just take the existing Java code compile the web",
    "start": "1031439",
    "end": "1037120"
  },
  {
    "text": "assembly put it on the client side and uh don't really have to duplicate any",
    "start": "1037120",
    "end": "1043600"
  },
  {
    "text": "work you can just reuse the same thing pretty easily uh and with that that's the end of my part in giving back to",
    "start": "1043600",
    "end": "1049440"
  },
  {
    "text": "Fabio thank you Patrick so this was the web assembly backend for Gravium and now",
    "start": "1049440",
    "end": "1055039"
  },
  {
    "text": "we'd like to talk a little bit more about Growl Wom because we're at the WAM IO conference so in case you didn't know",
    "start": "1055039",
    "end": "1061679"
  },
  {
    "text": "Growlv VM um provides different languages we call them Growl languages growl was just one of them and it's",
    "start": "1061679",
    "end": "1068960"
  },
  {
    "text": "ready for production um it actually implements several different uh WASM",
    "start": "1068960",
    "end": "1074000"
  },
  {
    "text": "features as you can see on the web assembly website um here's a screenshot of that and um we primarily use that for",
    "start": "1074000",
    "end": "1082640"
  },
  {
    "text": "embedding um was code in Java applications however you can also",
    "start": "1082640",
    "end": "1088640"
  },
  {
    "text": "download GR Wom on its own as a standalone distribution if you want to run it for example um instead of W",
    "start": "1088640",
    "end": "1096160"
  },
  {
    "text": "wasn't time or some other wasn't runtime you can do that too uh even use our tooling which you'll see in just a bit",
    "start": "1096160",
    "end": "1103440"
  },
  {
    "text": "we also have a JavaScript runtime which is called Growjs and Growljs implements",
    "start": "1103440",
    "end": "1108720"
  },
  {
    "text": "the web assembly ES module integration so that means you can use JavaScript",
    "start": "1108720",
    "end": "1114559"
  },
  {
    "text": "bindings to facilitate high-level communication between Java and web",
    "start": "1114559",
    "end": "1120000"
  },
  {
    "text": "assembly right so whatever like wasn't binden spits out you can just use that to interface from Java to JavaScript and",
    "start": "1120000",
    "end": "1127440"
  },
  {
    "text": "then from JavaScript to wasn't and lastly in the following update uh",
    "start": "1127440",
    "end": "1133039"
  },
  {
    "text": "hopefully we can finish our work on the Simney proposal um but we also have some exciting cool updates on debugging with",
    "start": "1133039",
    "end": "1140480"
  },
  {
    "text": "DR and because debugging on the server side I mean debugging web assembly on",
    "start": "1140480",
    "end": "1146000"
  },
  {
    "text": "the server side is all the rage right now and we saw a great talk by Microsoft today we figured we sneak in a little",
    "start": "1146000",
    "end": "1152400"
  },
  {
    "text": "debugging demo as well okay so here's VS",
    "start": "1152400",
    "end": "1160720"
  },
  {
    "text": "Code and it's a this is a spring boot application the spring boot application",
    "start": "1160840",
    "end": "1166880"
  },
  {
    "text": "implements an endpoint called photo and then it takes an effect name i can run",
    "start": "1166880",
    "end": "1172799"
  },
  {
    "text": "this on my",
    "start": "1172799",
    "end": "1175600"
  },
  {
    "text": "computer and this is an image that you would get from the service this is",
    "start": "1179000",
    "end": "1184240"
  },
  {
    "text": "actually already applying a filter called uh flip h but we can also apply",
    "start": "1184240",
    "end": "1190080"
  },
  {
    "text": "flip v and then we flip the image vertically right so this is Photon a",
    "start": "1190080",
    "end": "1197280"
  },
  {
    "text": "photo image processing library written in Rust compiled to web assembly and uh we're using our",
    "start": "1197280",
    "end": "1205600"
  },
  {
    "text": "JavaScript and grow runtimes to embed all of this in a spring boot application",
    "start": "1205600",
    "end": "1212720"
  },
  {
    "text": "right so that's kind of crazy but what if something is wrong with this pixel",
    "start": "1212720",
    "end": "1220960"
  },
  {
    "text": "right like how would you debug this we are in a spring boot application that",
    "start": "1220960",
    "end": "1226320"
  },
  {
    "text": "has embedded WASM code and we're talking through JavaScript to the WASM module right so let me kill the process real",
    "start": "1226320",
    "end": "1233640"
  },
  {
    "text": "quick and let me start a different configuration with the DAP",
    "start": "1233640",
    "end": "1241080"
  },
  {
    "text": "profile so we all of our languages are implemented in the truffle framework and the truffle framework provides tool",
    "start": "1241080",
    "end": "1247520"
  },
  {
    "text": "support one of which is the debug adapter protocol and the debug adapter",
    "start": "1247520",
    "end": "1252960"
  },
  {
    "text": "protocol is a first class citizen in VS Code so now I can go here and I can",
    "start": "1252960",
    "end": "1260640"
  },
  {
    "text": "start a debugger session and now I'm connected to the process uh you may have noticed the application hasn't hasn't",
    "start": "1260640",
    "end": "1267440"
  },
  {
    "text": "actually gone up yet we're still booting and now we are evaluating something that",
    "start": "1267440",
    "end": "1272720"
  },
  {
    "text": "looks like JavaScript well I can show you why because the thing that initializes the application in the pool",
    "start": "1272720",
    "end": "1280960"
  },
  {
    "text": "um it this just happens to be the first that we're evaluating in JavaScript so this happens right before we actually",
    "start": "1280960",
    "end": "1288559"
  },
  {
    "text": "load the Photon module right so that's the very first request that we get so",
    "start": "1288559",
    "end": "1294559"
  },
  {
    "text": "now let's see in the debugger um take a look at the loaded script section when I",
    "start": "1294559",
    "end": "1300240"
  },
  {
    "text": "now resume the application comes up here we go",
    "start": "1300240",
    "end": "1305520"
  },
  {
    "text": "okay and in the Lotus script section we have a bunch of files well we have lots",
    "start": "1305520",
    "end": "1310799"
  },
  {
    "text": "of files in the cargo directory which happen to be the dependencies of Photon and we have Photon itself which I built",
    "start": "1310799",
    "end": "1317520"
  },
  {
    "text": "on my machine with DR info on right and we have the binding so here's the uh Wom",
    "start": "1317520",
    "end": "1325840"
  },
  {
    "text": "bindgen generated um code that glues the JavaScript binding together with the web",
    "start": "1325840",
    "end": "1331760"
  },
  {
    "text": "assembly code here's the Web Assembly module and here's the JavaScript binding so we've been talking about flip v which",
    "start": "1331760",
    "end": "1339200"
  },
  {
    "text": "happens to be in here and conveniently I have set set a breakpoint already right so let me fire up the",
    "start": "1339200",
    "end": "1347200"
  },
  {
    "text": "request again and we are in the debugging session so what's really cool now",
    "start": "1347200",
    "end": "1354120"
  },
  {
    "text": "is this is running in growjs and the wasom code runs on grow",
    "start": "1354120",
    "end": "1361280"
  },
  {
    "text": "was and grow was also support for our tooling based on draft which means I can",
    "start": "1361280",
    "end": "1368480"
  },
  {
    "text": "step in now and now I'm looking at some frame which actually happens to be a",
    "start": "1368480",
    "end": "1374080"
  },
  {
    "text": "generated frame from wasn't binden we can see that here right so let me step",
    "start": "1374080",
    "end": "1379520"
  },
  {
    "text": "in again and then we see something Crazy this is coming from this is an effect of the compiler well there's an inline",
    "start": "1379520",
    "end": "1386400"
  },
  {
    "text": "statement so the compiler has decided to inline this okay so far so good let's just step in again okay another inline",
    "start": "1386400",
    "end": "1394320"
  },
  {
    "text": "okay okay here we go flip v now we are in flip vc code and here's the photon",
    "start": "1394320",
    "end": "1400799"
  },
  {
    "text": "image right so we can actually look at the uh object so this is the rust frame",
    "start": "1400799",
    "end": "1407919"
  },
  {
    "text": "running in wasom and this is the javascript frame here we have JavaScript module and a photon image JavaScript",
    "start": "1407919",
    "end": "1415840"
  },
  {
    "text": "object with a pointer and on the other side we have a photon image which is then processed right so we can even look",
    "start": "1415840",
    "end": "1423440"
  },
  {
    "text": "at the image it's some I don't know this is uh rust and I'm not so much of a rust",
    "start": "1423440",
    "end": "1430000"
  },
  {
    "text": "guy but um yeah we're reading width and height and now we're creating a new",
    "start": "1430000",
    "end": "1436080"
  },
  {
    "text": "image with width and height and we iterate through the original image And then we read every pixel and put it",
    "start": "1436080",
    "end": "1443360"
  },
  {
    "text": "in the flipped image right so here's the pixel that I was talking about in the browser unfortunately in this demo I",
    "start": "1443360",
    "end": "1450880"
  },
  {
    "text": "can't change the value i was going to change it to something red and show you the red pixel um but this is work in",
    "start": "1450880",
    "end": "1456960"
  },
  {
    "text": "progress it hasn't actually been committed to master yet um but um we're",
    "start": "1456960",
    "end": "1462000"
  },
  {
    "text": "going to hopefully be able to ship this in September okay so now I can like step",
    "start": "1462000",
    "end": "1467760"
  },
  {
    "text": "and we can step through every pixel but I don't want to bore you too much with this so I'm just going to resume and",
    "start": "1467760",
    "end": "1473520"
  },
  {
    "text": "then we can see the browser request uh is finishing okay great so I I this is",
    "start": "1473520",
    "end": "1482000"
  },
  {
    "text": "debugging so yeah so this is debugging with debug adapter protocol obviously it doesn't just work in VS Code it works on",
    "start": "1488120",
    "end": "1495279"
  },
  {
    "text": "any IDE that supports debug adapter protocol we also support um the Chrome",
    "start": "1495279",
    "end": "1501760"
  },
  {
    "text": "inspector protocol which conveniently is also integrated in Intelligj right so",
    "start": "1501760",
    "end": "1506880"
  },
  {
    "text": "you can even do all of this in Intelligj um here's a screenshot of the two IDEs",
    "start": "1506880",
    "end": "1512720"
  },
  {
    "text": "but what's also really really cool I think is we have more tooling for example profilers and um because I",
    "start": "1512720",
    "end": "1520799"
  },
  {
    "text": "thought it's a good idea I ran the profiler uh on this thing yesterday and",
    "start": "1520799",
    "end": "1526240"
  },
  {
    "text": "this is me u profiling uh the application that you just saw with a",
    "start": "1526240",
    "end": "1531360"
  },
  {
    "text": "single request so this is this turns out to be the loading part like loading an",
    "start": "1531360",
    "end": "1536720"
  },
  {
    "text": "image this is flip v which apparently is really fast right and then converting it",
    "start": "1536720",
    "end": "1542799"
  },
  {
    "text": "back into um a bite array that can be sent back over rya is apparently uh",
    "start": "1542799",
    "end": "1549679"
  },
  {
    "text": "slower here so and what we can see here is a Java thread uh running JavaScript",
    "start": "1549679",
    "end": "1556600"
  },
  {
    "text": "code right js there's a little JS right there there wasn't bind genen is all",
    "start": "1556600",
    "end": "1561840"
  },
  {
    "text": "over the place right gluing everything together and then the Rust code",
    "start": "1561840",
    "end": "1567159"
  },
  {
    "text": "right so and it's just an SVG and we also integrate other um profiling tools",
    "start": "1567159",
    "end": "1573679"
  },
  {
    "text": "that so yeah give this a go try this out and let us know whether you find this",
    "start": "1573679",
    "end": "1578720"
  },
  {
    "text": "useful",
    "start": "1578720",
    "end": "1581720"
  },
  {
    "text": "okay so that was Growl Wasom and that's our growl uh language for web assembly",
    "start": "1585440",
    "end": "1591279"
  },
  {
    "text": "and that allows you to embed uh web assembly in Java applications as we've",
    "start": "1591279",
    "end": "1597440"
  },
  {
    "text": "just seen with the Spring Boot um application um Growjs also allows you to",
    "start": "1597440",
    "end": "1602960"
  },
  {
    "text": "reuse um JavaScript bindings and facilitate high level communication",
    "start": "1602960",
    "end": "1609120"
  },
  {
    "text": "between Java and Web Assembly we're watching out for the component model and hopefully one day we can do direct",
    "start": "1609120",
    "end": "1616000"
  },
  {
    "text": "interop between Java and Web Assembly but we're not there yet um but in the",
    "start": "1616000",
    "end": "1621120"
  },
  {
    "text": "first part of this talk we introduced um the web assembly back end and finally we",
    "start": "1621120",
    "end": "1626720"
  },
  {
    "text": "have gone full circle so Gravm can now generate was GC for Java applications um",
    "start": "1626720",
    "end": "1634799"
  },
  {
    "text": "the web the was modules are built with a JDK25 EA builds and uh the web assembly",
    "start": "1634799",
    "end": "1641039"
  },
  {
    "text": "back end allows you to do a high level interaction between Java and JavaScript",
    "start": "1641039",
    "end": "1646400"
  },
  {
    "text": "and with that thank you very much and we are happy to take any",
    "start": "1646400",
    "end": "1650799"
  },
  {
    "text": "questions yep oh I forgot to mention the uh C Java",
    "start": "1653000",
    "end": "1659919"
  },
  {
    "text": "C demo is of course up on the internet so if you want to try this out on your",
    "start": "1659919",
    "end": "1665520"
  },
  {
    "text": "computer or if you want to try this out even on your mobile phone maybe you fancy building uh or generating JVM bite",
    "start": "1665520",
    "end": "1673039"
  },
  {
    "text": "code on your mobile phone for whatever reason right here's a link um the source",
    "start": "1673039",
    "end": "1678080"
  },
  {
    "text": "code is up on GitHub you can take a look at all builds uh with GitHub action so you can reproduce what we've just done",
    "start": "1678080",
    "end": "1684720"
  },
  {
    "text": "and uh yes so now we are taking your questions thanks",
    "start": "1684720",
    "end": "1690760"
  },
  {
    "text": "oh really awesome presentation today i'm super excited about this uh I have two",
    "start": "1691200",
    "end": "1696480"
  },
  {
    "text": "questions one it's about the the support of the reflection API if you fully",
    "start": "1696480",
    "end": "1702320"
  },
  {
    "text": "support it or or not or what's the caveats that um so this is the",
    "start": "1702320",
    "end": "1707600"
  },
  {
    "text": "reflection support is basically on the same level as what native image has and their reflection is basically turned off",
    "start": "1707600",
    "end": "1714720"
  },
  {
    "text": "by default but if you need it you can select classes or entire packages you need reflection for if you do like class",
    "start": "1714720",
    "end": "1722159"
  },
  {
    "text": "for name it will detect it for you stuff like that so you can get reflection metadata into the image But if you don't",
    "start": "1722159",
    "end": "1727840"
  },
  {
    "text": "need it you don't have it okay just to not pay the cost basically exactly and",
    "start": "1727840",
    "end": "1733120"
  },
  {
    "text": "uh the other uh the other question is regarding Wasi or was so do you plan to",
    "start": "1733120",
    "end": "1738480"
  },
  {
    "text": "have any support for it yes i mean we're right now targeting a a JavaScript",
    "start": "1738480",
    "end": "1743760"
  },
  {
    "text": "embeder we have our own custom bindings between those um but yes I mean especially after like being here uh at",
    "start": "1743760",
    "end": "1749679"
  },
  {
    "text": "this conference it is clear that like the component model is the future and it's something we do need to support in combin combination with Wuzi so",
    "start": "1749679",
    "end": "1756320"
  },
  {
    "text": "definitely something I want to work on yeah awesome thank you",
    "start": "1756320",
    "end": "1761679"
  },
  {
    "text": "here um yeah so thank you for that uh I'm constantly impressed by what is happening with crawl uh I think it's so",
    "start": "1761679",
    "end": "1767919"
  },
  {
    "text": "cool i wanted to continue doing what you're doing um just a curiosity i noticed you mentioned that you um you're",
    "start": "1767919",
    "end": "1774559"
  },
  {
    "text": "you're targeting uh WAT and then using binary in to create the binaries why",
    "start": "1774559",
    "end": "1782000"
  },
  {
    "text": "because I'm lazy i just ju just because it's easier yeah i mean like generating",
    "start": "1782000",
    "end": "1788080"
  },
  {
    "text": "the the text format is easier at least for me I think than generating the binary format because I don't need to care about well which ID has which",
    "start": "1788080",
    "end": "1795360"
  },
  {
    "text": "number and all that kind of stuff um of course it precludes some things right it's difficult for us to not generate",
    "start": "1795360",
    "end": "1801200"
  },
  {
    "text": "debug info because we don't control the assembler um but it's more like at the time I I'm not going to like spend time",
    "start": "1801200",
    "end": "1808720"
  },
  {
    "text": "doing this if I don't need to um I think at some point we're going to have our own assembler but for the time being",
    "start": "1808720",
    "end": "1813760"
  },
  {
    "text": "it's Yeah it's",
    "start": "1813760",
    "end": "1816640"
  },
  {
    "text": "binarian we're still around in the coffee break so feel free to get in touch and otherwise uh thank you again",
    "start": "1820600",
    "end": "1827919"
  },
  {
    "text": "and enjoy the rest of the conference",
    "start": "1827919",
    "end": "1832200"
  }
]