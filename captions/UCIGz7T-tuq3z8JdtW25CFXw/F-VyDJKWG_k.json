[
  {
    "text": "[Music]",
    "start": "290",
    "end": "12000"
  },
  {
    "text": "um I am co-founder of a company called",
    "start": "12000",
    "end": "13839"
  },
  {
    "text": "launch Scout in Cincinnati Ohio we do uh",
    "start": "13839",
    "end": "17320"
  },
  {
    "text": "web and Mobile Custom app",
    "start": "17320",
    "end": "19960"
  },
  {
    "text": "development um and yeah that's me so",
    "start": "19960",
    "end": "23439"
  },
  {
    "text": "what",
    "start": "23439",
    "end": "24279"
  },
  {
    "text": "are what are we going to be talking",
    "start": "24279",
    "end": "26679"
  },
  {
    "text": "about today uh I'm going to start with",
    "start": "26679",
    "end": "29279"
  },
  {
    "text": "uh introduc ucing Elixir and OTP briefly",
    "start": "29279",
    "end": "32880"
  },
  {
    "text": "for people who aren't familiar with it",
    "start": "32880",
    "end": "35600"
  },
  {
    "text": "I'm then going to go into wmex which is",
    "start": "35600",
    "end": "38920"
  },
  {
    "text": "the rapper library that uh lets Elixir",
    "start": "38920",
    "end": "42280"
  },
  {
    "text": "talk to web assembly and web assembly",
    "start": "42280",
    "end": "44879"
  },
  {
    "text": "components uh and then I'm going to",
    "start": "44879",
    "end": "46760"
  },
  {
    "text": "spend a good portion of the time going",
    "start": "46760",
    "end": "48719"
  },
  {
    "text": "through some demos and finally towards",
    "start": "48719",
    "end": "51680"
  },
  {
    "text": "the end I'll talk about sort of future",
    "start": "51680",
    "end": "55359"
  },
  {
    "text": "directions where the wmex project is",
    "start": "56440",
    "end": "59000"
  },
  {
    "text": "going all right so I'm going to Dive",
    "start": "59000",
    "end": "62000"
  },
  {
    "text": "Right In so how many people uh are",
    "start": "62000",
    "end": "64518"
  },
  {
    "text": "already writing Elixir or at least have",
    "start": "64519",
    "end": "67080"
  },
  {
    "text": "done a little bit or familiar with it",
    "start": "67080",
    "end": "69520"
  },
  {
    "text": "okay so just a few people cool so for",
    "start": "69520",
    "end": "72240"
  },
  {
    "text": "those who haven't seen Elixir before um",
    "start": "72240",
    "end": "74840"
  },
  {
    "text": "I think it's a really great language",
    "start": "74840",
    "end": "76280"
  },
  {
    "text": "it's kind of my favorite language for",
    "start": "76280",
    "end": "78200"
  },
  {
    "text": "writing code uh it is a functional",
    "start": "78200",
    "end": "80799"
  },
  {
    "text": "language that runs on the beam virtual",
    "start": "80799",
    "end": "83560"
  },
  {
    "text": "machine which is from erlang so Elixir",
    "start": "83560",
    "end": "86840"
  },
  {
    "text": "kind of sits on top of llang uh it's",
    "start": "86840",
    "end": "90079"
  },
  {
    "text": "interesting it's a functional language",
    "start": "90079",
    "end": "91640"
  },
  {
    "text": "all the data structures are immutable uh",
    "start": "91640",
    "end": "94479"
  },
  {
    "text": "it's a dynamically typed language",
    "start": "94479",
    "end": "96439"
  },
  {
    "text": "although there is a uh gradual type",
    "start": "96439",
    "end": "99159"
  },
  {
    "text": "system that is being added to the",
    "start": "99159",
    "end": "101040"
  },
  {
    "text": "language right now and will be you know",
    "start": "101040",
    "end": "103000"
  },
  {
    "text": "it's underway and will be finished here",
    "start": "103000",
    "end": "104880"
  },
  {
    "text": "in the next year or so uh it's got a",
    "start": "104880",
    "end": "107399"
  },
  {
    "text": "really easy to grock syntax um if you've",
    "start": "107399",
    "end": "110719"
  },
  {
    "text": "done erlang uh the syntax can be a",
    "start": "110719",
    "end": "112880"
  },
  {
    "text": "little bit intimidating and elixir has a",
    "start": "112880",
    "end": "115719"
  },
  {
    "text": "syntax that's kind of uh closely modeled",
    "start": "115719",
    "end": "118039"
  },
  {
    "text": "on Ruby I was created by a guy named",
    "start": "118039",
    "end": "120399"
  },
  {
    "text": "Jose valim uh who was originally from",
    "start": "120399",
    "end": "122920"
  },
  {
    "text": "Brazil it's now in po Poland and he was",
    "start": "122920",
    "end": "125360"
  },
  {
    "text": "very active in the Ruby Community before",
    "start": "125360",
    "end": "127640"
  },
  {
    "text": "he uh created",
    "start": "127640",
    "end": "129479"
  },
  {
    "text": "Elixir so um what's so great about the",
    "start": "129479",
    "end": "134160"
  },
  {
    "text": "uh beam virtual machine that underpins",
    "start": "134160",
    "end": "137160"
  },
  {
    "text": "uh Elixir and llang um it's actually",
    "start": "137160",
    "end": "140120"
  },
  {
    "text": "quite old Elixir is a language is",
    "start": "140120",
    "end": "142360"
  },
  {
    "text": "relatively recent but erlangs",
    "start": "142360",
    "end": "144560"
  },
  {
    "text": "surprisingly old uh it was started by",
    "start": "144560",
    "end": "146599"
  },
  {
    "text": "Ericson telecommunications back in",
    "start": "146599",
    "end": "148519"
  },
  {
    "text": "the80s",
    "start": "148519",
    "end": "150040"
  },
  {
    "text": "and uh it was originally designed to run",
    "start": "150040",
    "end": "152920"
  },
  {
    "text": "on telecommunications equipment phone",
    "start": "152920",
    "end": "155440"
  },
  {
    "text": "switches that kind of thing and so uh",
    "start": "155440",
    "end": "158440"
  },
  {
    "text": "they've had decades to kind of think",
    "start": "158440",
    "end": "160640"
  },
  {
    "text": "about how to build systems to run in",
    "start": "160640",
    "end": "162879"
  },
  {
    "text": "those kinds of environments and if you",
    "start": "162879",
    "end": "164519"
  },
  {
    "text": "think about like what kind of",
    "start": "164519",
    "end": "165920"
  },
  {
    "text": "characteristics you need to run on a",
    "start": "165920",
    "end": "167519"
  },
  {
    "text": "phone switch obviously you have to have",
    "start": "167519",
    "end": "170000"
  },
  {
    "text": "a high degree of",
    "start": "170000",
    "end": "171640"
  },
  {
    "text": "concurrency and you can never ever go",
    "start": "171640",
    "end": "174400"
  },
  {
    "text": "down for any reason it's not like you",
    "start": "174400",
    "end": "176000"
  },
  {
    "text": "can say like hey sorry we're upgrading",
    "start": "176000",
    "end": "178159"
  },
  {
    "text": "no phone calls between 3 and 5 am. on",
    "start": "178159",
    "end": "180280"
  },
  {
    "text": "Sunday that's not a thing you can do it",
    "start": "180280",
    "end": "182040"
  },
  {
    "text": "has to be up all the time and it turns",
    "start": "182040",
    "end": "184319"
  },
  {
    "text": "out these same characteristics are",
    "start": "184319",
    "end": "185959"
  },
  {
    "text": "pretty awesome for building modern web",
    "start": "185959",
    "end": "188280"
  },
  {
    "text": "applications",
    "start": "188280",
    "end": "189640"
  },
  {
    "text": "too uh so the thing that makes it go uh",
    "start": "189640",
    "end": "193799"
  },
  {
    "text": "is really the concept of processes that",
    "start": "193799",
    "end": "197760"
  },
  {
    "text": "uh llang adopts and the beam adopts and",
    "start": "197760",
    "end": "200440"
  },
  {
    "text": "when we say processes in llang we're not",
    "start": "200440",
    "end": "203280"
  },
  {
    "text": "talking about operating system processes",
    "start": "203280",
    "end": "206239"
  },
  {
    "text": "uh they are like an order of magnitude",
    "start": "206239",
    "end": "208680"
  },
  {
    "text": "at least small than an operating system",
    "start": "208680",
    "end": "211200"
  },
  {
    "text": "processes they come at like 2K um they",
    "start": "211200",
    "end": "214879"
  },
  {
    "text": "have their own isolated memory and the",
    "start": "214879",
    "end": "218239"
  },
  {
    "text": "only way that processes can communicate",
    "start": "218239",
    "end": "220560"
  },
  {
    "text": "with one another is through message",
    "start": "220560",
    "end": "222640"
  },
  {
    "text": "passing that means there is no shared",
    "start": "222640",
    "end": "225760"
  },
  {
    "text": "mutable State at all and because of that",
    "start": "225760",
    "end": "229239"
  },
  {
    "text": "it eliminates a whole class of problems",
    "start": "229239",
    "end": "231680"
  },
  {
    "text": "that you usually has to deal with when",
    "start": "231680",
    "end": "233879"
  },
  {
    "text": "you're talking about like concurrency",
    "start": "233879",
    "end": "235519"
  },
  {
    "text": "and async uh because they are so small",
    "start": "235519",
    "end": "238760"
  },
  {
    "text": "it's been demonstrated that you can",
    "start": "238760",
    "end": "240439"
  },
  {
    "text": "create millions of processes on a single",
    "start": "240439",
    "end": "242840"
  },
  {
    "text": "machine and everything just hums along",
    "start": "242840",
    "end": "245680"
  },
  {
    "text": "and the most awesome thing you have",
    "start": "245680",
    "end": "247799"
  },
  {
    "text": "concurrency without any locks or mxes or",
    "start": "247799",
    "end": "250920"
  },
  {
    "text": "any of that jazz which is pretty",
    "start": "250920",
    "end": "253959"
  },
  {
    "text": "awesome uh the other thing that",
    "start": "253959",
    "end": "255840"
  },
  {
    "text": "processes can do in the earling OTP",
    "start": "255840",
    "end": "257880"
  },
  {
    "text": "platform provides is supervision so",
    "start": "257880",
    "end": "261280"
  },
  {
    "text": "processes uh you basically have worker",
    "start": "261280",
    "end": "264040"
  },
  {
    "text": "processes and you have other processes",
    "start": "264040",
    "end": "266400"
  },
  {
    "text": "called supervisors that watch those",
    "start": "266400",
    "end": "268880"
  },
  {
    "text": "processes supervisors themselves can be",
    "start": "268880",
    "end": "271280"
  },
  {
    "text": "supervised by other supervisors and so",
    "start": "271280",
    "end": "273680"
  },
  {
    "text": "you have what looks like a tree and they",
    "start": "273680",
    "end": "276000"
  },
  {
    "text": "call that a supervision tree and",
    "start": "276000",
    "end": "279160"
  },
  {
    "text": "configura as part of the the platform",
    "start": "279160",
    "end": "282440"
  },
  {
    "text": "itself when a worker crashes the",
    "start": "282440",
    "end": "285320"
  },
  {
    "text": "supervisor can do different things it",
    "start": "285320",
    "end": "287560"
  },
  {
    "text": "can restart just it it can restart all",
    "start": "287560",
    "end": "290360"
  },
  {
    "text": "of the children processes that it",
    "start": "290360",
    "end": "291960"
  },
  {
    "text": "supervisors or it can just like give up",
    "start": "291960",
    "end": "294400"
  },
  {
    "text": "and die and let its its presumably",
    "start": "294400",
    "end": "297000"
  },
  {
    "text": "supervisor do whatever it wants to or it",
    "start": "297000",
    "end": "299479"
  },
  {
    "text": "can say like sorry we're done and shut",
    "start": "299479",
    "end": "301680"
  },
  {
    "text": "down everything and so because of this",
    "start": "301680",
    "end": "304919"
  },
  {
    "text": "notion of supervision um the kind of",
    "start": "304919",
    "end": "307919"
  },
  {
    "text": "model for programming on the OT platform",
    "start": "307919",
    "end": "310919"
  },
  {
    "text": "uh kind of Embraces this idea of Let It",
    "start": "310919",
    "end": "313080"
  },
  {
    "text": "crash which is that rather than handle",
    "start": "313080",
    "end": "315880"
  },
  {
    "text": "every possible failure scenario we're",
    "start": "315880",
    "end": "318479"
  },
  {
    "text": "going to stick to the Happy path as much",
    "start": "318479",
    "end": "320240"
  },
  {
    "text": "as is reasonable and let the supervisors",
    "start": "320240",
    "end": "324280"
  },
  {
    "text": "deal with things that go wrong so it's",
    "start": "324280",
    "end": "327319"
  },
  {
    "text": "considered fairly normal to uh have a",
    "start": "327319",
    "end": "330240"
  },
  {
    "text": "process crash in except exceptional",
    "start": "330240",
    "end": "332680"
  },
  {
    "text": "conditions and it as a result like the",
    "start": "332680",
    "end": "336000"
  },
  {
    "text": "practicality of it is it's really easy",
    "start": "336000",
    "end": "338160"
  },
  {
    "text": "to accidentally create highly resilient",
    "start": "338160",
    "end": "340560"
  },
  {
    "text": "systems uh we've had some that like we",
    "start": "340560",
    "end": "342960"
  },
  {
    "text": "created as little demo apps that are",
    "start": "342960",
    "end": "345160"
  },
  {
    "text": "dependent on external services that go",
    "start": "345160",
    "end": "347240"
  },
  {
    "text": "up and down and the thing will just like",
    "start": "347240",
    "end": "348720"
  },
  {
    "text": "hum along for years even in between",
    "start": "348720",
    "end": "351639"
  },
  {
    "text": "things going up and down because",
    "start": "351639",
    "end": "353160"
  },
  {
    "text": "everything just restarts and it's",
    "start": "353160",
    "end": "355160"
  },
  {
    "text": "great so let's see what this looks like",
    "start": "355160",
    "end": "357759"
  },
  {
    "text": "in practice here's a little bit of",
    "start": "357759",
    "end": "359840"
  },
  {
    "text": "Elixir code uh I'm not going to walk",
    "start": "359840",
    "end": "362319"
  },
  {
    "text": "through all of it but what this is is",
    "start": "362319",
    "end": "363800"
  },
  {
    "text": "it's a stateful stack worker process in",
    "start": "363800",
    "end": "367599"
  },
  {
    "text": "Elixir and the way that state Works in",
    "start": "367599",
    "end": "370919"
  },
  {
    "text": "Elixir uh you have um process functions",
    "start": "370919",
    "end": "374880"
  },
  {
    "text": "that you call that in general they will",
    "start": "374880",
    "end": "376759"
  },
  {
    "text": "take a message and a current state and",
    "start": "376759",
    "end": "379840"
  },
  {
    "text": "return a new state and in this case we",
    "start": "379840",
    "end": "382319"
  },
  {
    "text": "have anit function that just sets up the",
    "start": "382319",
    "end": "384360"
  },
  {
    "text": "initial state which we decide is an",
    "start": "384360",
    "end": "386080"
  },
  {
    "text": "empty list here we have a handle",
    "start": "386080",
    "end": "390639"
  },
  {
    "text": "uh function that handles the pop message",
    "start": "390639",
    "end": "393880"
  },
  {
    "text": "and gets the current state which is uh",
    "start": "393880",
    "end": "396639"
  },
  {
    "text": "the stack itself and it's just basically",
    "start": "396639",
    "end": "398919"
  },
  {
    "text": "going to split the stack into a head and",
    "start": "398919",
    "end": "400880"
  },
  {
    "text": "tail and uh in this case I'm doing it",
    "start": "400880",
    "end": "403960"
  },
  {
    "text": "wrong I'm so that's a bug um I actually",
    "start": "403960",
    "end": "407400"
  },
  {
    "text": "the correct code is actually returning",
    "start": "407400",
    "end": "409120"
  },
  {
    "text": "the head that's what it should do there",
    "start": "409120",
    "end": "410960"
  },
  {
    "text": "oh no I'm sorry I'm confusing myself so",
    "start": "410960",
    "end": "415280"
  },
  {
    "text": "in this case uh I'm uh returning the",
    "start": "415280",
    "end": "418680"
  },
  {
    "text": "head and saying the tail is the new",
    "start": "418680",
    "end": "420759"
  },
  {
    "text": "state so I'm sorry there's a bug in that",
    "start": "420759",
    "end": "422840"
  },
  {
    "text": "code that two collar should be head my",
    "start": "422840",
    "end": "424919"
  },
  {
    "text": "bad uh I'm also uh have a function there",
    "start": "424919",
    "end": "428440"
  },
  {
    "text": "that handles the push that just pushes",
    "start": "428440",
    "end": "430280"
  },
  {
    "text": "the element on top of the stat so sorry",
    "start": "430280",
    "end": "433240"
  },
  {
    "text": "for making that so confusing so let's",
    "start": "433240",
    "end": "436120"
  },
  {
    "text": "just see that um oh there's an obvious",
    "start": "436120",
    "end": "439520"
  },
  {
    "text": "bug in this stack uh maybe you're seeing",
    "start": "439520",
    "end": "442280"
  },
  {
    "text": "it already but if not we'll just like",
    "start": "442280",
    "end": "444800"
  },
  {
    "text": "show you what that is and show you what",
    "start": "444800",
    "end": "447000"
  },
  {
    "text": "happens so let's crash our stack",
    "start": "447000",
    "end": "450199"
  },
  {
    "text": "so I'm going to go into my editor now",
    "start": "450199",
    "end": "452800"
  },
  {
    "text": "and I'm going",
    "start": "452800",
    "end": "455360"
  },
  {
    "text": "to font bump a good few",
    "start": "455360",
    "end": "459840"
  },
  {
    "text": "times how does that font size look you",
    "start": "459840",
    "end": "462199"
  },
  {
    "text": "want one",
    "start": "462199",
    "end": "463879"
  },
  {
    "text": "more good okay so the way we talk to our",
    "start": "463879",
    "end": "468520"
  },
  {
    "text": "process uh behind the scenes uh we have",
    "start": "468520",
    "end": "472240"
  },
  {
    "text": "a supervised stack process that's",
    "start": "472240",
    "end": "474479"
  },
  {
    "text": "already",
    "start": "474479",
    "end": "475479"
  },
  {
    "text": "started and we can just like push things",
    "start": "475479",
    "end": "478599"
  },
  {
    "text": "onto our",
    "start": "478599",
    "end": "481440"
  },
  {
    "text": "stack by doing this and it's sending",
    "start": "483159",
    "end": "485800"
  },
  {
    "text": "messages to our stack process and then",
    "start": "485800",
    "end": "488840"
  },
  {
    "text": "we can pop things",
    "start": "488840",
    "end": "492400"
  },
  {
    "text": "off but we popped everything off our",
    "start": "493360",
    "end": "496039"
  },
  {
    "text": "stack what's going to happen now you",
    "start": "496039",
    "end": "497960"
  },
  {
    "text": "guys want to guess oh no it blew",
    "start": "497960",
    "end": "501759"
  },
  {
    "text": "up but we can just push things onto our",
    "start": "501759",
    "end": "505479"
  },
  {
    "text": "stack and everything is hunky dory and",
    "start": "505479",
    "end": "508599"
  },
  {
    "text": "that is because we have a supervisor",
    "start": "508599",
    "end": "510520"
  },
  {
    "text": "that just like saw that there was a",
    "start": "510520",
    "end": "512279"
  },
  {
    "text": "crash and just restarted our stack",
    "start": "512279",
    "end": "514599"
  },
  {
    "text": "server process and we can just like hum",
    "start": "514599",
    "end": "516440"
  },
  {
    "text": "along and everything things hunky dory",
    "start": "516440",
    "end": "518959"
  },
  {
    "text": "so that's supervised worker processes",
    "start": "518959",
    "end": "521800"
  },
  {
    "text": "and action so now I want to talk about",
    "start": "521800",
    "end": "524680"
  },
  {
    "text": "Phoenix live view um have people heard",
    "start": "524680",
    "end": "527519"
  },
  {
    "text": "of Phoenix live view at all or anybody",
    "start": "527519",
    "end": "530120"
  },
  {
    "text": "okay so not so many um so Phoenix live",
    "start": "530120",
    "end": "534000"
  },
  {
    "text": "view is a sub project of Phoenix which",
    "start": "534000",
    "end": "536640"
  },
  {
    "text": "is the web application framework for",
    "start": "536640",
    "end": "539000"
  },
  {
    "text": "elixir",
    "start": "539000",
    "end": "540200"
  },
  {
    "text": "and Phoenix Live View kind of pioneered",
    "start": "540200",
    "end": "543000"
  },
  {
    "text": "a different way to do web application",
    "start": "543000",
    "end": "545600"
  },
  {
    "text": "development and what it specifically",
    "start": "545600",
    "end": "547760"
  },
  {
    "text": "does is let you write a server rendered",
    "start": "547760",
    "end": "550320"
  },
  {
    "text": "app that has the behavior and",
    "start": "550320",
    "end": "553200"
  },
  {
    "text": "performance of a spa like you would",
    "start": "553200",
    "end": "555680"
  },
  {
    "text": "write and react and the way that it does",
    "start": "555680",
    "end": "557920"
  },
  {
    "text": "this is uh it is maintaining um the",
    "start": "557920",
    "end": "562720"
  },
  {
    "text": "state of every connected user on the",
    "start": "562720",
    "end": "565480"
  },
  {
    "text": "server uh it has a client library that",
    "start": "565480",
    "end": "568279"
  },
  {
    "text": "sends events on user interaction up to",
    "start": "568279",
    "end": "571920"
  },
  {
    "text": "the server and it also receives State",
    "start": "571920",
    "end": "575720"
  },
  {
    "text": "updates from the server so basically the",
    "start": "575720",
    "end": "578480"
  },
  {
    "text": "page will behave completely dynamically",
    "start": "578480",
    "end": "581800"
  },
  {
    "text": "but you don't have to write any front-",
    "start": "581800",
    "end": "583440"
  },
  {
    "text": "end code at all which is really pretty",
    "start": "583440",
    "end": "585720"
  },
  {
    "text": "awesome in practices but what this means",
    "start": "585720",
    "end": "588640"
  },
  {
    "text": "like as an implementation detail is you",
    "start": "588640",
    "end": "591279"
  },
  {
    "text": "have a process on the server for every",
    "start": "591279",
    "end": "594079"
  },
  {
    "text": "connected client of a system and that",
    "start": "594079",
    "end": "596160"
  },
  {
    "text": "could easily be Millions if you have",
    "start": "596160",
    "end": "598600"
  },
  {
    "text": "like a high traffic web app right and",
    "start": "598600",
    "end": "600959"
  },
  {
    "text": "because OTP is is pretty awesome at",
    "start": "600959",
    "end": "603320"
  },
  {
    "text": "handling that scenario uh things",
    "start": "603320",
    "end": "605440"
  },
  {
    "text": "continue to work you can have millions",
    "start": "605440",
    "end": "607000"
  },
  {
    "text": "of web stateful websocket connections on",
    "start": "607000",
    "end": "609519"
  },
  {
    "text": "a single box and they've like chested",
    "start": "609519",
    "end": "611480"
  },
  {
    "text": "this out uh so let's see what this looks",
    "start": "611480",
    "end": "614079"
  },
  {
    "text": "like in code really briefly this is kind",
    "start": "614079",
    "end": "616320"
  },
  {
    "text": "of like the hello world of Phoenix live",
    "start": "616320",
    "end": "618720"
  },
  {
    "text": "view it's a multi-user chat and so this",
    "start": "618720",
    "end": "622160"
  },
  {
    "text": "is the function that renders the HTML",
    "start": "622160",
    "end": "624480"
  },
  {
    "text": "and this gets called anytime the state",
    "start": "624480",
    "end": "626560"
  },
  {
    "text": "changes basically and the state in this",
    "start": "626560",
    "end": "629120"
  },
  {
    "text": "case case is the list of messages and",
    "start": "629120",
    "end": "631480"
  },
  {
    "text": "we're just like looping over the",
    "start": "631480",
    "end": "633000"
  },
  {
    "text": "messages and displaying them in a list",
    "start": "633000",
    "end": "635560"
  },
  {
    "text": "right below it we have a form that PHX",
    "start": "635560",
    "end": "639120"
  },
  {
    "text": "DS submit add message is basically",
    "start": "639120",
    "end": "641880"
  },
  {
    "text": "saying when any user submits this form",
    "start": "641880",
    "end": "644480"
  },
  {
    "text": "we're going to have an add message",
    "start": "644480",
    "end": "646240"
  },
  {
    "text": "that's going to Bubble Up to the server",
    "start": "646240",
    "end": "648120"
  },
  {
    "text": "an add message or yeah an ad message",
    "start": "648120",
    "end": "650760"
  },
  {
    "text": "event that's going to Bubble Up to the",
    "start": "650760",
    "end": "653000"
  },
  {
    "text": "server so what it looks like to handle",
    "start": "653000",
    "end": "656160"
  },
  {
    "text": "on the back end that stuff is we have a",
    "start": "656160",
    "end": "658880"
  },
  {
    "text": "mount function that sets up our initial",
    "start": "658880",
    "end": "660880"
  },
  {
    "text": "state which is an empty list we have an",
    "start": "660880",
    "end": "663680"
  },
  {
    "text": "add message function that gets called",
    "start": "663680",
    "end": "666000"
  },
  {
    "text": "when like I said that form is submitted",
    "start": "666000",
    "end": "668800"
  },
  {
    "text": "and because we have a single process for",
    "start": "668800",
    "end": "671800"
  },
  {
    "text": "every connected user we need some way to",
    "start": "671800",
    "end": "674399"
  },
  {
    "text": "like notify all the other processes when",
    "start": "674399",
    "end": "677079"
  },
  {
    "text": "somebody's done a chat so that everybody",
    "start": "677079",
    "end": "679160"
  },
  {
    "text": "sees it and we do that by leveraging Pub",
    "start": "679160",
    "end": "682440"
  },
  {
    "text": "sub that's built into Phoenix so we're",
    "start": "682440",
    "end": "684399"
  },
  {
    "text": "just broadcasting over a pub sub Channel",
    "start": "684399",
    "end": "687560"
  },
  {
    "text": "here's a new message",
    "start": "687560",
    "end": "689720"
  },
  {
    "text": "finally we have a handle info that",
    "start": "689720",
    "end": "691760"
  },
  {
    "text": "basically gets called when a message",
    "start": "691760",
    "end": "694079"
  },
  {
    "text": "comes in over pubsub and at that time we",
    "start": "694079",
    "end": "696959"
  },
  {
    "text": "just put it on the state which is then",
    "start": "696959",
    "end": "698920"
  },
  {
    "text": "going to trigger the render down on the",
    "start": "698920",
    "end": "701399"
  },
  {
    "text": "client so that's how everything fits",
    "start": "701399",
    "end": "704279"
  },
  {
    "text": "together and what it looks like in",
    "start": "704279",
    "end": "708200"
  },
  {
    "text": "practice we can just say like hi in one",
    "start": "708200",
    "end": "712639"
  },
  {
    "text": "browser and",
    "start": "712639",
    "end": "714440"
  },
  {
    "text": "say was up in the other and everything",
    "start": "714440",
    "end": "719279"
  },
  {
    "text": "thing just works and",
    "start": "719279",
    "end": "722560"
  },
  {
    "text": "yeah okay so now let's talk about wmex",
    "start": "722560",
    "end": "727519"
  },
  {
    "text": "so where am I at time was okay not too",
    "start": "727519",
    "end": "729440"
  },
  {
    "text": "bad so wmx is the Elixir wrapper for",
    "start": "729440",
    "end": "733920"
  },
  {
    "text": "wasm time and it's what lets you talk to",
    "start": "733920",
    "end": "737760"
  },
  {
    "text": "web assembly from Elixir uh it was",
    "start": "737760",
    "end": "740399"
  },
  {
    "text": "started by a guy named Philip tesano in",
    "start": "740399",
    "end": "743240"
  },
  {
    "text": "20202 and behind the scenes it makes use",
    "start": "743240",
    "end": "746160"
  },
  {
    "text": "of rustler which is a great library that",
    "start": "746160",
    "end": "748800"
  },
  {
    "text": "makes it really easy to use rust code",
    "start": "748800",
    "end": "751240"
  },
  {
    "text": "from",
    "start": "751240",
    "end": "752079"
  },
  {
    "text": "Elixir and it also Embraces the OTP",
    "start": "752079",
    "end": "755959"
  },
  {
    "text": "model under the covers in that all of",
    "start": "755959",
    "end": "758600"
  },
  {
    "text": "the web assembly modules and now",
    "start": "758600",
    "end": "761160"
  },
  {
    "text": "components are started as managed Elixir",
    "start": "761160",
    "end": "765000"
  },
  {
    "text": "processes which has some pretty nice",
    "start": "765000",
    "end": "767600"
  },
  {
    "text": "benefits I think um the way that you",
    "start": "767600",
    "end": "771040"
  },
  {
    "text": "communicate with those web assembly",
    "start": "771040",
    "end": "772560"
  },
  {
    "text": "modules and components is via Elixir",
    "start": "772560",
    "end": "774639"
  },
  {
    "text": "message passing um which we'll see here",
    "start": "774639",
    "end": "777680"
  },
  {
    "text": "in a second all right so wmex here in",
    "start": "777680",
    "end": "782079"
  },
  {
    "text": "the last uh just really few weeks has",
    "start": "782079",
    "end": "785639"
  },
  {
    "text": "had a new release 0.10 that has added",
    "start": "785639",
    "end": "789040"
  },
  {
    "text": "support for the component model uh it",
    "start": "789040",
    "end": "792600"
  },
  {
    "text": "has both a lowlevel API to talk to um",
    "start": "792600",
    "end": "796600"
  },
  {
    "text": "component functions and then u a macro",
    "start": "796600",
    "end": "800079"
  },
  {
    "text": "that's kind of like the equivalent of B",
    "start": "800079",
    "end": "802519"
  },
  {
    "text": "gen that will give you idiomatic Elixir",
    "start": "802519",
    "end": "805760"
  },
  {
    "text": "functions to call uh web assembly",
    "start": "805760",
    "end": "808160"
  },
  {
    "text": "component functions",
    "start": "808160",
    "end": "810000"
  },
  {
    "text": "uh it supports all of the wasm types",
    "start": "810000",
    "end": "812560"
  },
  {
    "text": "mapped onto their Elixir equivalent uh",
    "start": "812560",
    "end": "815720"
  },
  {
    "text": "it supports interfaces and it also",
    "start": "815720",
    "end": "818320"
  },
  {
    "text": "supports Imports that are implemented in",
    "start": "818320",
    "end": "821440"
  },
  {
    "text": "Elixir and then used by uh web assembly",
    "start": "821440",
    "end": "825079"
  },
  {
    "text": "components uh under the covers that is",
    "start": "825079",
    "end": "827880"
  },
  {
    "text": "actually Asic message passing between",
    "start": "827880",
    "end": "830199"
  },
  {
    "text": "different Elixir processes but it's kind",
    "start": "830199",
    "end": "832639"
  },
  {
    "text": "of like gloss it's behind a synchronous",
    "start": "832639",
    "end": "835279"
  },
  {
    "text": "veneer essentially so it appears",
    "start": "835279",
    "end": "836759"
  },
  {
    "text": "synchronous from the calling side um the",
    "start": "836759",
    "end": "839800"
  },
  {
    "text": "only thing that I haven't done yet or",
    "start": "839800",
    "end": "841720"
  },
  {
    "text": "one of the big things I guess I haven't",
    "start": "841720",
    "end": "843199"
  },
  {
    "text": "done yet is support resources uh I think",
    "start": "843199",
    "end": "845800"
  },
  {
    "text": "that's doable I just kind of need to",
    "start": "845800",
    "end": "847880"
  },
  {
    "text": "think a little bit more about how that",
    "start": "847880",
    "end": "849360"
  },
  {
    "text": "should work and how it makes sense to",
    "start": "849360",
    "end": "851680"
  },
  {
    "text": "work from The Elixir",
    "start": "851680",
    "end": "853720"
  },
  {
    "text": "standpoint all right so the type",
    "start": "853720",
    "end": "855959"
  },
  {
    "text": "mappings um the basic types strings and",
    "start": "855959",
    "end": "859000"
  },
  {
    "text": "numbers and floats and bullion and lists",
    "start": "859000",
    "end": "861079"
  },
  {
    "text": "they just have direct equivalents in",
    "start": "861079",
    "end": "862680"
  },
  {
    "text": "Elixir so that's pretty easy to figure",
    "start": "862680",
    "end": "864519"
  },
  {
    "text": "out uh Records right now I'm uh mapping",
    "start": "864519",
    "end": "868320"
  },
  {
    "text": "onto Maps in Elixir there's also a thing",
    "start": "868320",
    "end": "871040"
  },
  {
    "text": "in Elixir called strs which eventually I",
    "start": "871040",
    "end": "874040"
  },
  {
    "text": "want to have a way to specify",
    "start": "874040",
    "end": "875600"
  },
  {
    "text": "declaratively like this record goes with",
    "start": "875600",
    "end": "877680"
  },
  {
    "text": "this struct an Elixir uh I haven't",
    "start": "877680",
    "end": "880120"
  },
  {
    "text": "implemented that yet but that's",
    "start": "880120",
    "end": "881639"
  },
  {
    "text": "definitely a plan uh variance map pretty",
    "start": "881639",
    "end": "885279"
  },
  {
    "text": "nicely onto a tupple in Elixir I don't",
    "start": "885279",
    "end": "888079"
  },
  {
    "text": "have it on the screen but TPP is also ma",
    "start": "888079",
    "end": "890120"
  },
  {
    "text": "directly into Elixir um results it's",
    "start": "890120",
    "end": "894120"
  },
  {
    "text": "idiomatic in Elixir to have functions",
    "start": "894120",
    "end": "896160"
  },
  {
    "text": "that return tuples that have either an",
    "start": "896160",
    "end": "898040"
  },
  {
    "text": "okay or an error and then a value and so",
    "start": "898040",
    "end": "901399"
  },
  {
    "text": "I'm mapping results uh onto those kinds",
    "start": "901399",
    "end": "903800"
  },
  {
    "text": "of tuples uh Flags just become maps of",
    "start": "903800",
    "end": "906639"
  },
  {
    "text": "booleans enums map really nicely on to",
    "start": "906639",
    "end": "909639"
  },
  {
    "text": "atoms and options are just going to be a",
    "start": "909639",
    "end": "912000"
  },
  {
    "text": "value or",
    "start": "912000",
    "end": "913440"
  },
  {
    "text": "nil all right so let's see what it looks",
    "start": "913440",
    "end": "916759"
  },
  {
    "text": "like to reimplement that chat that I",
    "start": "916759",
    "end": "919600"
  },
  {
    "text": "just showed you as a web assembly",
    "start": "919600",
    "end": "922800"
  },
  {
    "text": "component the first thing that we need",
    "start": "922800",
    "end": "924959"
  },
  {
    "text": "to do is Define the wit interface to our",
    "start": "924959",
    "end": "928160"
  },
  {
    "text": "web assembly component that gives us",
    "start": "928160",
    "end": "930519"
  },
  {
    "text": "what we need and so we're just making a",
    "start": "930519",
    "end": "933720"
  },
  {
    "text": "chat room world uh we're going to import",
    "start": "933720",
    "end": "936759"
  },
  {
    "text": "a published message function so that we",
    "start": "936759",
    "end": "938839"
  },
  {
    "text": "can send messages onto pubsub which is",
    "start": "938839",
    "end": "942240"
  },
  {
    "text": "provided from you know the outside world",
    "start": "942240",
    "end": "945199"
  },
  {
    "text": "uh and then we're going to export an",
    "start": "945199",
    "end": "946800"
  },
  {
    "text": "anit function that sets up our initial",
    "start": "946800",
    "end": "948959"
  },
  {
    "text": "state which is just going to be a list",
    "start": "948959",
    "end": "951240"
  },
  {
    "text": "of those messages which are strings",
    "start": "951240",
    "end": "953639"
  },
  {
    "text": "we're going to have an add message",
    "start": "953639",
    "end": "955240"
  },
  {
    "text": "function which gets called when the user",
    "start": "955240",
    "end": "957079"
  },
  {
    "text": "submits the form that's just going to",
    "start": "957079",
    "end": "959240"
  },
  {
    "text": "take a message and return a result and",
    "start": "959240",
    "end": "962160"
  },
  {
    "text": "then finally we have a message added",
    "start": "962160",
    "end": "964279"
  },
  {
    "text": "function that's going to get called when",
    "start": "964279",
    "end": "966399"
  },
  {
    "text": "a new message comes in over the pub sub",
    "start": "966399",
    "end": "969199"
  },
  {
    "text": "its job is to take the message the",
    "start": "969199",
    "end": "971600"
  },
  {
    "text": "current state which is a list of the",
    "start": "971600",
    "end": "973240"
  },
  {
    "text": "current messages and return a new state",
    "start": "973240",
    "end": "975759"
  },
  {
    "text": "which is a new list of",
    "start": "975759",
    "end": "977560"
  },
  {
    "text": "messages so that's the",
    "start": "977560",
    "end": "980399"
  },
  {
    "text": "interface this is an implementation in",
    "start": "980399",
    "end": "983440"
  },
  {
    "text": "JavaScript of that web assembly",
    "start": "983440",
    "end": "985120"
  },
  {
    "text": "component uh it was pretty easy to do in",
    "start": "985120",
    "end": "987759"
  },
  {
    "text": "JavaScript and not much code is the",
    "start": "987759",
    "end": "989399"
  },
  {
    "text": "reason I went with JavaScript um and so",
    "start": "989399",
    "end": "992480"
  },
  {
    "text": "I'm importing publish message from my",
    "start": "992480",
    "end": "996240"
  },
  {
    "text": "imports and then I'm exporting an add",
    "start": "996240",
    "end": "999399"
  },
  {
    "text": "message function which uses publish",
    "start": "999399",
    "end": "1001480"
  },
  {
    "text": "message and in this case I'm publishing",
    "start": "1001480",
    "end": "1004120"
  },
  {
    "text": "the message that the user gave me and",
    "start": "1004120",
    "end": "1005800"
  },
  {
    "text": "then I'm also adding another message",
    "start": "1005800",
    "end": "1008040"
  },
  {
    "text": "just so I can see that like yeah this is",
    "start": "1008040",
    "end": "1009920"
  },
  {
    "text": "actually the wasm component version of",
    "start": "1009920",
    "end": "1011720"
  },
  {
    "text": "the chat uh I'm also like rather than",
    "start": "1011720",
    "end": "1015160"
  },
  {
    "text": "starting with an empty list I'm giving",
    "start": "1015160",
    "end": "1016839"
  },
  {
    "text": "it an initial message so that you'll see",
    "start": "1016839",
    "end": "1019040"
  },
  {
    "text": "that message when you join the component",
    "start": "1019040",
    "end": "1020519"
  },
  {
    "text": "chat and then finally the message added",
    "start": "1020519",
    "end": "1023880"
  },
  {
    "text": "function uh is pretty straightforward it",
    "start": "1023880",
    "end": "1026240"
  },
  {
    "text": "just takes the current message and the",
    "start": "1026240",
    "end": "1028000"
  },
  {
    "text": "list of messages and just TXS on the",
    "start": "1028000",
    "end": "1029760"
  },
  {
    "text": "message so nothing much going on there",
    "start": "1029760",
    "end": "1033280"
  },
  {
    "text": "uh in the ad message added um so this is",
    "start": "1033280",
    "end": "1037400"
  },
  {
    "text": "what it looks like to consume or use our",
    "start": "1037400",
    "end": "1040760"
  },
  {
    "text": "web assembly component in Elixir we have",
    "start": "1040760",
    "end": "1044360"
  },
  {
    "text": "a module which is really just a name",
    "start": "1044360",
    "end": "1046720"
  },
  {
    "text": "space and then that U statement is",
    "start": "1046720",
    "end": "1049880"
  },
  {
    "text": "calling a macro in Elixir and this",
    "start": "1049880",
    "end": "1052280"
  },
  {
    "text": "component server macro takes the width",
    "start": "1052280",
    "end": "1056280"
  },
  {
    "text": "and it will actually produce idiomatic",
    "start": "1056280",
    "end": "1058960"
  },
  {
    "text": "Elixir functions for all of the exports",
    "start": "1058960",
    "end": "1061480"
  },
  {
    "text": "in the component for us uh and then we",
    "start": "1061480",
    "end": "1064720"
  },
  {
    "text": "also Define our Imports which just Maps",
    "start": "1064720",
    "end": "1067120"
  },
  {
    "text": "published ask message onto the published",
    "start": "1067120",
    "end": "1070039"
  },
  {
    "text": "message function right below there and",
    "start": "1070039",
    "end": "1072559"
  },
  {
    "text": "that published message does the same",
    "start": "1072559",
    "end": "1074240"
  },
  {
    "text": "thing we saw earlier it's just sending",
    "start": "1074240",
    "end": "1076960"
  },
  {
    "text": "the message to the pubsub",
    "start": "1076960",
    "end": "1080840"
  },
  {
    "text": "all right um this is what it looks like",
    "start": "1081440",
    "end": "1084480"
  },
  {
    "text": "to use our chat server uh web assembly",
    "start": "1084480",
    "end": "1088200"
  },
  {
    "text": "component in what's called a supervision",
    "start": "1088200",
    "end": "1090799"
  },
  {
    "text": "tree or in this case it's an OTP",
    "start": "1090799",
    "end": "1093320"
  },
  {
    "text": "application which has a supervision tree",
    "start": "1093320",
    "end": "1095919"
  },
  {
    "text": "the way that looks is we set up a list",
    "start": "1095919",
    "end": "1098600"
  },
  {
    "text": "of children I'm not showing you all of",
    "start": "1098600",
    "end": "1101080"
  },
  {
    "text": "them uh but the one here that we care",
    "start": "1101080",
    "end": "1103720"
  },
  {
    "text": "about is our chat server and uh we just",
    "start": "1103720",
    "end": "1107240"
  },
  {
    "text": "give it a name so that um we can find",
    "start": "1107240",
    "end": "1110159"
  },
  {
    "text": "that process and be able to talk to it",
    "start": "1110159",
    "end": "1113280"
  },
  {
    "text": "we give it a path to the web assembly",
    "start": "1113280",
    "end": "1115200"
  },
  {
    "text": "module that's the wasm file and then we",
    "start": "1115200",
    "end": "1117880"
  },
  {
    "text": "give it some wazzy configuration if we",
    "start": "1117880",
    "end": "1120240"
  },
  {
    "text": "wanted to let our component do HTTP",
    "start": "1120240",
    "end": "1122720"
  },
  {
    "text": "calls or things like that it would go in",
    "start": "1122720",
    "end": "1125240"
  },
  {
    "text": "that wazzy wazzy P2 options structure",
    "start": "1125240",
    "end": "1129000"
  },
  {
    "text": "there uh finally we're telling it our",
    "start": "1129000",
    "end": "1132600"
  },
  {
    "text": "supervisor how we want to supervise this",
    "start": "1132600",
    "end": "1135039"
  },
  {
    "text": "process and that one for one strategy",
    "start": "1135039",
    "end": "1137400"
  },
  {
    "text": "just basically says hey if this chat",
    "start": "1137400",
    "end": "1139679"
  },
  {
    "text": "server process crashes please just",
    "start": "1139679",
    "end": "1141919"
  },
  {
    "text": "restart it for me but don't worry about",
    "start": "1141919",
    "end": "1144039"
  },
  {
    "text": "any of my other children or anything",
    "start": "1144039",
    "end": "1147159"
  },
  {
    "text": "else all right finally we see here's",
    "start": "1147159",
    "end": "1151039"
  },
  {
    "text": "what it looks like to rewrite our live",
    "start": "1151039",
    "end": "1153120"
  },
  {
    "text": "view to basically delegating everything",
    "start": "1153120",
    "end": "1155919"
  },
  {
    "text": "onto our web assembly component we have",
    "start": "1155919",
    "end": "1158679"
  },
  {
    "text": "that mount function we saw before and",
    "start": "1158679",
    "end": "1161080"
  },
  {
    "text": "now we're just going to instead of",
    "start": "1161080",
    "end": "1162919"
  },
  {
    "text": "returning an empty list we're going to",
    "start": "1162919",
    "end": "1164440"
  },
  {
    "text": "call our chat server uh we give it the",
    "start": "1164440",
    "end": "1168080"
  },
  {
    "text": "address of the process that's what we",
    "start": "1168080",
    "end": "1169960"
  },
  {
    "text": "saw wasmo 2025. chatro is is kind of",
    "start": "1169960",
    "end": "1173280"
  },
  {
    "text": "like well the name of the process uh and",
    "start": "1173280",
    "end": "1176840"
  },
  {
    "text": "we get back whatever it gives us and we",
    "start": "1176840",
    "end": "1178679"
  },
  {
    "text": "say hey this is the state um our add",
    "start": "1178679",
    "end": "1182360"
  },
  {
    "text": "message function is also taking it's",
    "start": "1182360",
    "end": "1185000"
  },
  {
    "text": "just taking the message that the user",
    "start": "1185000",
    "end": "1186679"
  },
  {
    "text": "typed in and just handing it to the web",
    "start": "1186679",
    "end": "1189039"
  },
  {
    "text": "assembly component via the ad message so",
    "start": "1189039",
    "end": "1192400"
  },
  {
    "text": "that's what it looks like it's uh that",
    "start": "1192400",
    "end": "1194400"
  },
  {
    "text": "add message function is not code that we",
    "start": "1194400",
    "end": "1196559"
  },
  {
    "text": "wrote that's basically where the macro",
    "start": "1196559",
    "end": "1199200"
  },
  {
    "text": "looked at the wit and dynamically",
    "start": "1199200",
    "end": "1201640"
  },
  {
    "text": "produced that add message function uh",
    "start": "1201640",
    "end": "1204880"
  },
  {
    "text": "finally message added is getting the",
    "start": "1204880",
    "end": "1207840"
  },
  {
    "text": "message and the current list of messages",
    "start": "1207840",
    "end": "1210320"
  },
  {
    "text": "and just sticking it on there so that's",
    "start": "1210320",
    "end": "1214159"
  },
  {
    "text": "how everything fits together let's see",
    "start": "1214159",
    "end": "1216919"
  },
  {
    "text": "what it looks like in practice and to do",
    "start": "1216919",
    "end": "1220600"
  },
  {
    "text": "that we'll over here we'll go to wmex",
    "start": "1220600",
    "end": "1224640"
  },
  {
    "text": "chat and right away we'll see that like",
    "start": "1224640",
    "end": "1227200"
  },
  {
    "text": "we have another message here",
    "start": "1227200",
    "end": "1229159"
  },
  {
    "text": "here and if we talk we'll see that we",
    "start": "1229159",
    "end": "1233840"
  },
  {
    "text": "get an extra message over",
    "start": "1233840",
    "end": "1237679"
  },
  {
    "text": "there and we can chat back and forth and",
    "start": "1237679",
    "end": "1240679"
  },
  {
    "text": "everything just",
    "start": "1240679",
    "end": "1243320"
  },
  {
    "text": "works what's",
    "start": "1243799",
    "end": "1247559"
  },
  {
    "text": "sorry",
    "start": "1253039",
    "end": "1255039"
  },
  {
    "text": "okay all right so that's cool and all",
    "start": "1255039",
    "end": "1259039"
  },
  {
    "text": "that it works but let's break it on",
    "start": "1259039",
    "end": "1262600"
  },
  {
    "text": "purpose and to do that we're going to go",
    "start": "1262600",
    "end": "1265880"
  },
  {
    "text": "into our",
    "start": "1265880",
    "end": "1269039"
  },
  {
    "text": "code and we're going to go to chat room",
    "start": "1272880",
    "end": "1276520"
  },
  {
    "text": "and we're going to do something dumb",
    "start": "1276520",
    "end": "1279960"
  },
  {
    "text": "we're going to define a secret",
    "start": "1279960",
    "end": "1283399"
  },
  {
    "text": "word and we're going to say cursor is",
    "start": "1283600",
    "end": "1287640"
  },
  {
    "text": "kind of wanting to help me here and I'm",
    "start": "1287640",
    "end": "1289000"
  },
  {
    "text": "going to let it we're going to say if",
    "start": "1289000",
    "end": "1290840"
  },
  {
    "text": "you send a message that's a secret word",
    "start": "1290840",
    "end": "1293159"
  },
  {
    "text": "we're going to blow up on purpose so of",
    "start": "1293159",
    "end": "1296440"
  },
  {
    "text": "course in JavaScript the secret word is",
    "start": "1296440",
    "end": "1299400"
  },
  {
    "text": "w everybody know where W comes from I",
    "start": "1299400",
    "end": "1302240"
  },
  {
    "text": "saw at least one person nice",
    "start": "1302240",
    "end": "1305559"
  },
  {
    "text": "okay so we need to rebuild our web",
    "start": "1305559",
    "end": "1310880"
  },
  {
    "text": "assembly",
    "start": "1310880",
    "end": "1313279"
  },
  {
    "text": "module and I have a shell script that's",
    "start": "1313279",
    "end": "1315760"
  },
  {
    "text": "using jco to do that",
    "start": "1315760",
    "end": "1320120"
  },
  {
    "text": "we need",
    "start": "1322400",
    "end": "1324880"
  },
  {
    "text": "to",
    "start": "1325159",
    "end": "1328159"
  },
  {
    "text": "okay all",
    "start": "1329240",
    "end": "1332360"
  },
  {
    "text": "righty we need to restart our server so",
    "start": "1332360",
    "end": "1335200"
  },
  {
    "text": "that it will reload the web assembly",
    "start": "1335200",
    "end": "1337000"
  },
  {
    "text": "module in the supervision",
    "start": "1337000",
    "end": "1340200"
  },
  {
    "text": "tree and we reload our browser to",
    "start": "1340880",
    "end": "1346320"
  },
  {
    "text": "reconnect and then",
    "start": "1346320",
    "end": "1349600"
  },
  {
    "text": "things still",
    "start": "1349600",
    "end": "1351360"
  },
  {
    "text": "work but if we type the secret",
    "start": "1351360",
    "end": "1355320"
  },
  {
    "text": "word we'll see oh man something went",
    "start": "1355320",
    "end": "1358600"
  },
  {
    "text": "wrong and then it'll",
    "start": "1358600",
    "end": "1360360"
  },
  {
    "text": "reconnect over here it doesn't know",
    "start": "1360360",
    "end": "1362679"
  },
  {
    "text": "anything happened at",
    "start": "1362679",
    "end": "1365640"
  },
  {
    "text": "all and everything is just",
    "start": "1365799",
    "end": "1370880"
  },
  {
    "text": "fine and so that is our supervisor",
    "start": "1370880",
    "end": "1374360"
  },
  {
    "text": "managing our web assembly component for",
    "start": "1374360",
    "end": "1376520"
  },
  {
    "text": "it seeing that it crashed and restarting",
    "start": "1376520",
    "end": "1379960"
  },
  {
    "text": "it for",
    "start": "1379960",
    "end": "1382440"
  },
  {
    "text": "us all",
    "start": "1385760",
    "end": "1388760"
  },
  {
    "text": "right",
    "start": "1388760",
    "end": "1391559"
  },
  {
    "text": "so where are we going from here so wmx",
    "start": "1391559",
    "end": "1396559"
  },
  {
    "text": "at least the component support in wmx is",
    "start": "1396559",
    "end": "1399240"
  },
  {
    "text": "fairly new and I definitely have a few",
    "start": "1399240",
    "end": "1402039"
  },
  {
    "text": "things that I want to continue to add to",
    "start": "1402039",
    "end": "1404520"
  },
  {
    "text": "the wmex component support uh one of the",
    "start": "1404520",
    "end": "1407279"
  },
  {
    "text": "things I do want to do is implementing",
    "start": "1407279",
    "end": "1409600"
  },
  {
    "text": "resources uh still got to think about",
    "start": "1409600",
    "end": "1411640"
  },
  {
    "text": "like how that should work with Elixir",
    "start": "1411640",
    "end": "1413919"
  },
  {
    "text": "because Elixir is not stateful by",
    "start": "1413919",
    "end": "1415679"
  },
  {
    "text": "default and so uh it's a little weird",
    "start": "1415679",
    "end": "1418120"
  },
  {
    "text": "but I I think it'll work out pretty well",
    "start": "1418120",
    "end": "1420480"
  },
  {
    "text": "uh I definitely want to improve the",
    "start": "1420480",
    "end": "1422200"
  },
  {
    "text": "config for capabilities like right now",
    "start": "1422200",
    "end": "1424880"
  },
  {
    "text": "there are things like you basically just",
    "start": "1424880",
    "end": "1426520"
  },
  {
    "text": "turn HTTP off or on and I'd like to be",
    "start": "1426520",
    "end": "1429120"
  },
  {
    "text": "able to say here's what you can actually",
    "start": "1429120",
    "end": "1430760"
  },
  {
    "text": "call uh I need to add support for",
    "start": "1430760",
    "end": "1433120"
  },
  {
    "text": "pre-ops and file system things uh but",
    "start": "1433120",
    "end": "1436720"
  },
  {
    "text": "the main thing I need to do is get",
    "start": "1436720",
    "end": "1438159"
  },
  {
    "text": "people people using it to find out like",
    "start": "1438159",
    "end": "1440640"
  },
  {
    "text": "you know what are the missing things and",
    "start": "1440640",
    "end": "1442760"
  },
  {
    "text": "what works well and what doesn't uh and",
    "start": "1442760",
    "end": "1446159"
  },
  {
    "text": "then long term what I want to actually",
    "start": "1446159",
    "end": "1448080"
  },
  {
    "text": "be able to do with wmx and I'm starting",
    "start": "1448080",
    "end": "1450159"
  },
  {
    "text": "to reach out to some uh Elixir SAS",
    "start": "1450159",
    "end": "1453080"
  },
  {
    "text": "platforms as well I think the support",
    "start": "1453080",
    "end": "1455520"
  },
  {
    "text": "for um the ability to on a SAS platform",
    "start": "1455520",
    "end": "1458720"
  },
  {
    "text": "written in Elixir be able to use web",
    "start": "1458720",
    "end": "1461520"
  },
  {
    "text": "assembly components for userdefined code",
    "start": "1461520",
    "end": "1464799"
  },
  {
    "text": "I think is a really compelling story",
    "start": "1464799",
    "end": "1466799"
  },
  {
    "text": "like every s form at at some point needs",
    "start": "1466799",
    "end": "1469640"
  },
  {
    "text": "to be able to extend uh and let users",
    "start": "1469640",
    "end": "1473159"
  },
  {
    "text": "you know have some control and right now",
    "start": "1473159",
    "end": "1474799"
  },
  {
    "text": "that's like web Hooks and API calls in",
    "start": "1474799",
    "end": "1476880"
  },
  {
    "text": "kind of yucky and I think web assembly",
    "start": "1476880",
    "end": "1479520"
  },
  {
    "text": "components is a great fit for that kind",
    "start": "1479520",
    "end": "1481480"
  },
  {
    "text": "of thing uh the other thing like I'm",
    "start": "1481480",
    "end": "1484039"
  },
  {
    "text": "kind of interested in longer term is I",
    "start": "1484039",
    "end": "1485960"
  },
  {
    "text": "think live view is a really great way to",
    "start": "1485960",
    "end": "1488080"
  },
  {
    "text": "build web applications and being able to",
    "start": "1488080",
    "end": "1490720"
  },
  {
    "text": "do that in a polyglot way using web",
    "start": "1490720",
    "end": "1493520"
  },
  {
    "text": "assembly components I think is a really",
    "start": "1493520",
    "end": "1495320"
  },
  {
    "text": "interesting idea um and you know longer",
    "start": "1495320",
    "end": "1498799"
  },
  {
    "text": "term I'd love to build in build a",
    "start": "1498799",
    "end": "1500760"
  },
  {
    "text": "project that would let you do that so",
    "start": "1500760",
    "end": "1503880"
  },
  {
    "text": "that's kind of what I have and I think",
    "start": "1503880",
    "end": "1507360"
  },
  {
    "text": "maybe I have like a few minutes maybe",
    "start": "1507360",
    "end": "1511120"
  },
  {
    "text": "yeah maybe like four minutes for",
    "start": "1511120",
    "end": "1512840"
  },
  {
    "text": "questions or something like that so yeah",
    "start": "1512840",
    "end": "1515799"
  },
  {
    "text": "that's what I",
    "start": "1515799",
    "end": "1517100"
  },
  {
    "text": "[Applause]",
    "start": "1517100",
    "end": "1524360"
  },
  {
    "text": "got all right any questions",
    "start": "1524360",
    "end": "1530278"
  },
  {
    "text": "what motivated you to do this work so um",
    "start": "1533640",
    "end": "1537120"
  },
  {
    "text": "I was really most interested in that",
    "start": "1537120",
    "end": "1539559"
  },
  {
    "text": "like extending SAS platforms with WM",
    "start": "1539559",
    "end": "1543000"
  },
  {
    "text": "components uh well both of the bottom",
    "start": "1543000",
    "end": "1546120"
  },
  {
    "text": "one as well but I think that's the more",
    "start": "1546120",
    "end": "1548000"
  },
  {
    "text": "imminently like practical thing um",
    "start": "1548000",
    "end": "1551000"
  },
  {
    "text": "they're you know Elixir is a really",
    "start": "1551000",
    "end": "1553120"
  },
  {
    "text": "great um language for building SAS",
    "start": "1553120",
    "end": "1557000"
  },
  {
    "text": "platformed large web app",
    "start": "1557000",
    "end": "1559679"
  },
  {
    "text": "and uh yeah the extension story for that",
    "start": "1559679",
    "end": "1562399"
  },
  {
    "text": "is like kind of clunky and I think yeah",
    "start": "1562399",
    "end": "1565880"
  },
  {
    "text": "I think using web assembly components",
    "start": "1565880",
    "end": "1567720"
  },
  {
    "text": "from Elixir is going to serve a need",
    "start": "1567720",
    "end": "1572600"
  },
  {
    "text": "there I guess kind of a comment and a",
    "start": "1573080",
    "end": "1575760"
  },
  {
    "text": "question sure have you done much with",
    "start": "1575760",
    "end": "1579120"
  },
  {
    "text": "like other languages than like rust for",
    "start": "1579120",
    "end": "1582799"
  },
  {
    "text": "using what languages have you like tried",
    "start": "1582799",
    "end": "1585640"
  },
  {
    "text": "executing as",
    "start": "1585640",
    "end": "1589120"
  },
  {
    "text": "um certainly rust uh I think we have",
    "start": "1589320",
    "end": "1592320"
  },
  {
    "text": "some tests that use a rust web component",
    "start": "1592320",
    "end": "1594679"
  },
  {
    "text": "I'm sure uh I did an experiment with",
    "start": "1594679",
    "end": "1597760"
  },
  {
    "text": "python that worked fine although the",
    "start": "1597760",
    "end": "1599880"
  },
  {
    "text": "components are huge because python um so",
    "start": "1599880",
    "end": "1603480"
  },
  {
    "text": "those are the three that I know I've",
    "start": "1603480",
    "end": "1604640"
  },
  {
    "text": "tried and worked I'm curious it would be",
    "start": "1604640",
    "end": "1606640"
  },
  {
    "text": "funny if you had like a you can like do",
    "start": "1606640",
    "end": "1609120"
  },
  {
    "text": "JavaScript too and I guess like sell",
    "start": "1609120",
    "end": "1612360"
  },
  {
    "text": "resiliency but like let people still use",
    "start": "1612360",
    "end": "1614600"
  },
  {
    "text": "JavaScript if they like using JavaScript",
    "start": "1614600",
    "end": "1616320"
  },
  {
    "text": "it would like loaded you could just like",
    "start": "1616320",
    "end": "1619039"
  },
  {
    "text": "make your JavaScript a lot more",
    "start": "1619039",
    "end": "1620159"
  },
  {
    "text": "resilient going through this supervised",
    "start": "1620159",
    "end": "1623200"
  },
  {
    "text": "JavaScript yeah that could be a thing",
    "start": "1623200",
    "end": "1624679"
  },
  {
    "text": "for",
    "start": "1624679",
    "end": "1626840"
  },
  {
    "text": "sure yes I saw theem module when you",
    "start": "1627440",
    "end": "1630520"
  },
  {
    "text": "looked it up to live you still had to to",
    "start": "1630520",
    "end": "1633360"
  },
  {
    "text": "take theem",
    "start": "1633360",
    "end": "1636120"
  },
  {
    "text": "mod 100% yeah yeah I I wanted to have",
    "start": "1640880",
    "end": "1644720"
  },
  {
    "text": "that code explicit in the demo just so",
    "start": "1644720",
    "end": "1646720"
  },
  {
    "text": "we could understand what was going on on",
    "start": "1646720",
    "end": "1648840"
  },
  {
    "text": "but yes I think what you could do is",
    "start": "1648840",
    "end": "1651080"
  },
  {
    "text": "just like replace all that code with a",
    "start": "1651080",
    "end": "1654360"
  },
  {
    "text": "like a use component live view",
    "start": "1654360",
    "end": "1657480"
  },
  {
    "text": "essentially and say like Mount maps onto",
    "start": "1657480",
    "end": "1660279"
  },
  {
    "text": "this function handle event maps onto",
    "start": "1660279",
    "end": "1662320"
  },
  {
    "text": "this function Etc yeah I think you could",
    "start": "1662320",
    "end": "1665159"
  },
  {
    "text": "do that with a macro I'd be I'm",
    "start": "1665159",
    "end": "1667240"
  },
  {
    "text": "interested in like doing that um it",
    "start": "1667240",
    "end": "1670880"
  },
  {
    "text": "would be more sort of a fun experiment I",
    "start": "1670880",
    "end": "1672840"
  },
  {
    "text": "think initially but yeah I think you",
    "start": "1672840",
    "end": "1674679"
  },
  {
    "text": "could 100% do that it's great great",
    "start": "1674679",
    "end": "1677080"
  },
  {
    "text": "question",
    "start": "1677080",
    "end": "1680080"
  },
  {
    "text": "all right if there's nothing else I'll",
    "start": "1682360",
    "end": "1685279"
  },
  {
    "text": "give you your last minute back",
    "start": "1685279",
    "end": "1687950"
  },
  {
    "text": "[Applause]",
    "start": "1687950",
    "end": "1694659"
  }
]