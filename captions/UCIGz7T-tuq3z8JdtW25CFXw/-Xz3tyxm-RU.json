[
  {
    "text": "foreign [Music] [Applause]",
    "start": "599",
    "end": "7620"
  },
  {
    "text": "yes so so as mentioned I'm going to be discussing more use cases here rather than the underlying technology I think there's some great people here over the",
    "start": "11940",
    "end": "18359"
  },
  {
    "text": "next two days that can go into the deeper workings of somebody this stack but I want to discuss more of the architectural changes working on the age",
    "start": "18359",
    "end": "25260"
  },
  {
    "text": "environments and some of the commercial projects that I've been working with with some major brands in how they're",
    "start": "25260",
    "end": "30660"
  },
  {
    "text": "using pragmatic web assembly so not just using it as a gimmick or Cutting Edge but actually pragmatically getting",
    "start": "30660",
    "end": "36120"
  },
  {
    "text": "benefits from applying webassembly in their architecture um to start off with a confession I used",
    "start": "36120",
    "end": "42120"
  },
  {
    "text": "to write a lot of java too it seems like there's a lot of us here um but I I will try not to regress too",
    "start": "42120",
    "end": "48960"
  },
  {
    "text": "much into into those painful times in this talk okay so the introduction the agenda what",
    "start": "48960",
    "end": "56940"
  },
  {
    "text": "I'm going to go through today is where webassembly works and where it doesn't because at the moment it doesn't work",
    "start": "56940",
    "end": "62579"
  },
  {
    "text": "everywhere equally we have to understand where to practically apply it and where not to apply it",
    "start": "62579",
    "end": "68700"
  },
  {
    "text": "um common constraints are the full stack web assembly I'm going to be talking about some Edge runtimes or some Edge",
    "start": "68700",
    "end": "73799"
  },
  {
    "text": "environments with some companies that are here and some companies are not here and how the limitations on those",
    "start": "73799",
    "end": "79500"
  },
  {
    "text": "environments are at the moment and also where the benefits are of using those Edge environments but also how to self-host Edge environments",
    "start": "79500",
    "end": "87240"
  },
  {
    "text": "um shifting architectural patterns so how to change what we currently do with blueprints with Cloud environments and",
    "start": "87240",
    "end": "93240"
  },
  {
    "text": "on-premise environments and then how to apply webassembly and shift the architecture to a more modern efficient architecture obviously things like",
    "start": "93240",
    "end": "99780"
  },
  {
    "text": "Docker can help with that but there are other tools as well that I want to go through and what the tooling landscape",
    "start": "99780",
    "end": "104880"
  },
  {
    "text": "looks like I'm not going to provide a full map of the tooling landscape I want to provide an idea of some of the tools",
    "start": "104880",
    "end": "110520"
  },
  {
    "text": "that can be used and where they're at at the moment and I will be happy to answer some questions of those tools in a",
    "start": "110520",
    "end": "115619"
  },
  {
    "text": "deeper way after this talk as well um and then what's next so I want to go through some of the projects I'm working",
    "start": "115619",
    "end": "122520"
  },
  {
    "text": "on in the future which are open source projects and I'm working with some of the parties here and some other",
    "start": "122520",
    "end": "128759"
  },
  {
    "text": "companies as well that aren't here using webassembly to build new open source tools uh to solve those sustainability",
    "start": "128759",
    "end": "135360"
  },
  {
    "text": "issues and privacy issues for humans",
    "start": "135360",
    "end": "139760"
  },
  {
    "text": "so the first case I'm going to go through is a very simple case it's um I",
    "start": "140700",
    "end": "146280"
  },
  {
    "text": "say simple but it's not so simple when we go into the details but it's about building a privacy first AI solution",
    "start": "146280",
    "end": "154459"
  },
  {
    "text": "so the key requirements we got when discussing this with the with the stakeholders was we wanted to build a",
    "start": "155580",
    "end": "162060"
  },
  {
    "text": "mobile application now it says modern web up here because I put my foot in it in the early conversations they wanted a",
    "start": "162060",
    "end": "167580"
  },
  {
    "text": "mobile application they wanted to do machine learning on a mobile which is really easy comparatively to the web and",
    "start": "167580",
    "end": "174300"
  },
  {
    "text": "they wanted to ensure that the solution was Private by just securing the information on a server",
    "start": "174300",
    "end": "180000"
  },
  {
    "text": "I bravely said why stored on the server when you can store it on the H device and never send any information to the",
    "start": "180000",
    "end": "185700"
  },
  {
    "text": "server and also why use a mobile native app when we can do a web app that created me a lot of pain in the",
    "start": "185700",
    "end": "192060"
  },
  {
    "text": "future which we'll go through um so we developed a solution to do machine learning inference in the",
    "start": "192060",
    "end": "198360"
  },
  {
    "text": "browser and this obviously is powered by webassembly which we'll go into in a minute",
    "start": "198360",
    "end": "203459"
  },
  {
    "text": "use web services as a progressive enhancement so the application the web application had to work entirely offline",
    "start": "203459",
    "end": "208800"
  },
  {
    "text": "as a progressive web application and then it could connect to the web services when it needed to for some additional features",
    "start": "208800",
    "end": "216000"
  },
  {
    "text": "and then if we use models built for the native mobile runtime so we still had mobile native apps coming in the future",
    "start": "216000",
    "end": "222299"
  },
  {
    "text": "but we wanted to say hey you don't need to install a mobile app you can use the web application and still get the same machine learning capabilities",
    "start": "222299",
    "end": "229560"
  },
  {
    "text": "um and again that those and still straightforward and then we wanted to retrain the model in the browser so we",
    "start": "229560",
    "end": "235260"
  },
  {
    "text": "didn't want to then send all that data to a server put it into the the pipeline for training and then distribute new",
    "start": "235260",
    "end": "241739"
  },
  {
    "text": "models with updates based on the learnings we wanted to do the learning on each instance of the browser so when you open the browser and use it it would",
    "start": "241739",
    "end": "248280"
  },
  {
    "text": "learn from your usage and train that model directly and not send your data to the cloud to be aggregated with a",
    "start": "248280",
    "end": "253739"
  },
  {
    "text": "traditional data Lake so the key components to building this",
    "start": "253739",
    "end": "259320"
  },
  {
    "text": "um we try to go fully modern with a progressive web app so we used some shiny tools but we also used some very",
    "start": "259320",
    "end": "265919"
  },
  {
    "text": "familiar tools and we started with pi torch in Python for the model development which is fairly standard we",
    "start": "265919",
    "end": "272460"
  },
  {
    "text": "could have used tensorflow which we tried but we had limitations and we used tensorflow.js for the inference in a",
    "start": "272460",
    "end": "278759"
  },
  {
    "text": "browser and we did that by converting the model after building and optimizing",
    "start": "278759",
    "end": "284100"
  },
  {
    "text": "we used Pi system Pi grid which you may not be familiar with but this allowed us to do Federated learning and Federated",
    "start": "284100",
    "end": "290040"
  },
  {
    "text": "learning is the ability to run the learning in a browser aggregate the learnings not the data and then send the",
    "start": "290040",
    "end": "295380"
  },
  {
    "text": "learnings to the server so it's entirely private and then we use Google workbox for caching in the browser so that meant we",
    "start": "295380",
    "end": "301979"
  },
  {
    "text": "could download the models cache them in the browse of offline use and then do the inference on those and set a policy",
    "start": "301979",
    "end": "307979"
  },
  {
    "text": "essentially for for optimizing those caches and then we used HTML CSS and JavaScript because the good tools really",
    "start": "307979",
    "end": "314820"
  },
  {
    "text": "do work so we didn't want to use too many new Frameworks",
    "start": "314820",
    "end": "320060"
  },
  {
    "text": "um and then for the service stack we decided we were using webassembly for the inference",
    "start": "320759",
    "end": "325919"
  },
  {
    "text": "so we started using cloudflare which at the time was one of the more mature Edge environments and I say at the time we we",
    "start": "325919",
    "end": "332340"
  },
  {
    "text": "have made some changes since then um so it was interesting we want to do some reuse on cloudflare but also we",
    "start": "332340",
    "end": "339660"
  },
  {
    "text": "wanted to ensure that we were Distributing the workload efficiently and optimizing the workload on cloudflare to the best of cloudflare's",
    "start": "339660",
    "end": "346020"
  },
  {
    "text": "architectural promises so we used modular packages mostly separating the structure first so we",
    "start": "346020",
    "end": "351300"
  },
  {
    "text": "understood data types data structures and we could separate those into separate packages and then we could run them both on the edge environment in",
    "start": "351300",
    "end": "357240"
  },
  {
    "text": "cloudflare but also in the browser as well and have the same kind of data touches mapped we determine the shared",
    "start": "357240",
    "end": "363240"
  },
  {
    "text": "objects using domain driven design so we designed our services as domains and then we went into the web application",
    "start": "363240",
    "end": "368699"
  },
  {
    "text": "and shared those domains in there as well so we understood the fragment pragmatism of picking domains first and",
    "start": "368699",
    "end": "374580"
  },
  {
    "text": "then separating the code based on that and then we started using web services with the cloudflare workers and which",
    "start": "374580",
    "end": "381240"
  },
  {
    "text": "worked really well at the time and then we extended that into our kubernetes cluster we use kubernetes mostly for our",
    "start": "381240",
    "end": "387120"
  },
  {
    "text": "training workloads for a distributed Federated training workloads and then we extended kubernetes for policy",
    "start": "387120",
    "end": "392580"
  },
  {
    "text": "management using webassembly on Envoy to get that to work effectively but then it created a seamless integration between",
    "start": "392580",
    "end": "398100"
  },
  {
    "text": "cloudflare and our actual Cloud clusters",
    "start": "398100",
    "end": "403139"
  },
  {
    "text": "so the Federated training platform what does it look like so first of all we have our Custom Metal",
    "start": "403740",
    "end": "408840"
  },
  {
    "text": "model executor which ones in the browser um this again runs on",
    "start": "408840",
    "end": "414300"
  },
  {
    "text": "um tensorflow.js it's very familiar I'll go over the stack in a moment it's optimizes CMD and GPU running and this",
    "start": "414300",
    "end": "421500"
  },
  {
    "text": "is kind of important because we didn't want to run the battery out on a web browser application and also we didn't want to deploy a massive model onto a",
    "start": "421500",
    "end": "428940"
  },
  {
    "text": "mobile phone on the server we were looking at 250 megabytes maybe we don't want to deploy a 250 megabyte model into",
    "start": "428940",
    "end": "435120"
  },
  {
    "text": "a web application so we have to do some optimizations there and by using the",
    "start": "435120",
    "end": "440220"
  },
  {
    "text": "um web assembly optimized simd and GPU optimizations in the browser we could",
    "start": "440220",
    "end": "446039"
  },
  {
    "text": "actually we tend to log.js we could do some optimizations there and also we split the way we're processing that audio data the model being an audio data",
    "start": "446039",
    "end": "453060"
  },
  {
    "text": "model and so we did a three three passes essentially with webassembly we did a pass that said hey is this actually",
    "start": "453060",
    "end": "459900"
  },
  {
    "text": "audio is it above a certain volume based on ambient environmental noise and then the second pass was is it voice",
    "start": "459900",
    "end": "466259"
  },
  {
    "text": "data because we want to analyze voice data really small model to analyze voice data so it's super simple and then the",
    "start": "466259",
    "end": "472139"
  },
  {
    "text": "third model is where it gets interesting is this a person we want to hear is this the person in the room we want to listen",
    "start": "472139",
    "end": "477599"
  },
  {
    "text": "to We don't want to listen to anyone else we want to discard that data so that third model is where the execution",
    "start": "477599",
    "end": "482699"
  },
  {
    "text": "was really starting to use the hardware and but that free path meant we could",
    "start": "482699",
    "end": "487740"
  },
  {
    "text": "optimize what we were processing we sent the model um to the service Gateway once it had",
    "start": "487740",
    "end": "493800"
  },
  {
    "text": "been trained on a regular basis again when the internet connection was available um we used policy North management as a",
    "start": "493800",
    "end": "500460"
  },
  {
    "text": "sidecar into that using webassembly so we pushed into an authentication Service as well and then we used a worker what",
    "start": "500460",
    "end": "507840"
  },
  {
    "text": "we call a domain worker which is essentially the domain logic of the applications we were split into different domains and we would run",
    "start": "507840",
    "end": "513779"
  },
  {
    "text": "behind the service Gateway so I had no HTTP access the traffic would then run to the service Gateway into the service",
    "start": "513779",
    "end": "519899"
  },
  {
    "text": "workers with zero IO and that's because the way cloudflare works is it Imports",
    "start": "519899",
    "end": "525000"
  },
  {
    "text": "the webassembly workers that you use like they're localized you don't have to use networking so they were quite fast",
    "start": "525000",
    "end": "533580"
  },
  {
    "text": "and then we send that information that model to the training grid again no data went up it was just the learning from",
    "start": "533580",
    "end": "538800"
  },
  {
    "text": "the models that went up so we're entirely private at this point and then we aggregate those learnings so we shift and balance the weights",
    "start": "538800",
    "end": "544740"
  },
  {
    "text": "and that's using pi grid and Pi sift so we still have training data we have training data because we need data",
    "start": "544740",
    "end": "550920"
  },
  {
    "text": "initially to set the Baseline for what our model looks like so we still have training data but the training data is synthetic it's not from real people so",
    "start": "550920",
    "end": "557760"
  },
  {
    "text": "we don't need to worry about that we have Pi torch for learning mechanism we ingest the data we use webassembly here",
    "start": "557760",
    "end": "563880"
  },
  {
    "text": "to actually do the data transformation and we'll show you some of the tooling we use for that later",
    "start": "563880",
    "end": "569339"
  },
  {
    "text": "um and then we use kubeflow on kubernetes to actually do the training mechanism and the distribution",
    "start": "569339",
    "end": "575420"
  },
  {
    "text": "so the Retro aspect of what we learned this is probably the first use case where I've seen webassembly used",
    "start": "575580",
    "end": "580860"
  },
  {
    "text": "um pragmatically to solve some real problems in distributing web applications so browsers are great at rendering we",
    "start": "580860",
    "end": "587519"
  },
  {
    "text": "didn't use webassembly for any of the rendering pipeline because JavaScript and the Dom and everything else is super",
    "start": "587519",
    "end": "592980"
  },
  {
    "text": "good and really powerful and optimized for the hardware the browser is running on so why try and inject some",
    "start": "592980",
    "end": "598320"
  },
  {
    "text": "webassembly in there you're not going to get much benefit so we ignored that JavaScript is fast enough",
    "start": "598320",
    "end": "604279"
  },
  {
    "text": "I've hated JavaScript for many years I'm starting to really appreciate it when it actually does a good job and you don't",
    "start": "604279",
    "end": "610140"
  },
  {
    "text": "need to do anything else so we did transpile from typescript but that's because I love types and apps don't need",
    "start": "610140",
    "end": "617100"
  },
  {
    "text": "to send data anywhere there's a little asterisk there because it's sometimes a provides some Progressive enhancement to",
    "start": "617100",
    "end": "623040"
  },
  {
    "text": "the service you're providing but we really didn't need to send any data we made a fully private web application",
    "start": "623040",
    "end": "628620"
  },
  {
    "text": "that used Advanced machine learning in a browser so that's the first project and that was",
    "start": "628620",
    "end": "634920"
  },
  {
    "text": "a lot of learning today now to do a full stack webassembly application but also pick the points of where you're going to fight webassembly and where you're just",
    "start": "634920",
    "end": "641040"
  },
  {
    "text": "going to let other tools take over the next project is isomorphic analytics",
    "start": "641040",
    "end": "646260"
  },
  {
    "text": "very similar we needed to do some machine learning we needed to build a full stack application this is maybe two years later we've done a couple of",
    "start": "646260",
    "end": "652320"
  },
  {
    "text": "projects with webassembly at this point so in this case we wanted to replace a",
    "start": "652320",
    "end": "657480"
  },
  {
    "text": "legacy monolithic stack service or leading um medical company",
    "start": "657480",
    "end": "663420"
  },
  {
    "text": "they use JavaScript extensions on a server um they were a lot worse than you can",
    "start": "663420",
    "end": "669300"
  },
  {
    "text": "imagine they were running on the jvm on National they were seriously out of date and nobody was maintaining them because",
    "start": "669300",
    "end": "675779"
  },
  {
    "text": "nobody knew how to do old JavaScript without all the modern features and then they used Python and they even use R so",
    "start": "675779",
    "end": "682260"
  },
  {
    "text": "we had a really really painful stack to work with I think the jvm was the version 8 and this was maybe two",
    "start": "682260",
    "end": "689220"
  },
  {
    "text": "years ago this project so it was really out of date and they wanted this to run on medical equipment and in the browser and on",
    "start": "689220",
    "end": "695399"
  },
  {
    "text": "their service stack which was a hybrid stack so it was Microsoft Azure and it was some on-prem Hardware as well",
    "start": "695399",
    "end": "701579"
  },
  {
    "text": "and they had unknown connectivity problems because they distributed this to places where they didn't have a great connectivity they used multi-regional",
    "start": "701579",
    "end": "708420"
  },
  {
    "text": "SIM cards and they couldn't always get a connection so they needed this to work really well offline but then when it worked online they got everything they",
    "start": "708420",
    "end": "714779"
  },
  {
    "text": "needed from the Analytics so in this particular project we decided",
    "start": "714779",
    "end": "719940"
  },
  {
    "text": "to simplify the way we deployed our services on-prem and we took Fermi and spin first Spin and which worked really",
    "start": "719940",
    "end": "726779"
  },
  {
    "text": "well for us and this was quite early with spin I think it was an announcement on Twitter that they were working on it and they'll link to GitHub and then we",
    "start": "726779",
    "end": "733140"
  },
  {
    "text": "just tried to see what we could do with it um we use Spin and we were already using",
    "start": "733140",
    "end": "738480"
  },
  {
    "text": "Nomad underneath the kubernetes Clusters at this point because it was simpler to do Nomad clusters with kubernetes as",
    "start": "738480",
    "end": "744060"
  },
  {
    "text": "just the ingest um and then we built isomorphic analytical functions with webassembly",
    "start": "744060",
    "end": "749279"
  },
  {
    "text": "what I mean by isomorphic is we run the same webassembly code on the server that we run in the browser and we did this on",
    "start": "749279",
    "end": "756300"
  },
  {
    "text": "demand and then we extended data process into an in-process Kafka event queue so we",
    "start": "756300",
    "end": "761459"
  },
  {
    "text": "started using event cues quite a lot at this point and we wanted to do data transformation that was really powerful",
    "start": "761459",
    "end": "766680"
  },
  {
    "text": "we didn't want to use Apache spark or Flink or any of the other python Java solutions that required kubernetes setup",
    "start": "766680",
    "end": "773279"
  },
  {
    "text": "we wanted something a little bit simpler and so we did some in-process processing",
    "start": "773279",
    "end": "778380"
  },
  {
    "text": "for the data with webassembly and then we extended the kubernetes Clusters in the same way we did before but we",
    "start": "778380",
    "end": "784260"
  },
  {
    "text": "extended them with webassembly in this case and to manage critical infrastructure this was a medical",
    "start": "784260",
    "end": "789839"
  },
  {
    "text": "solution it had to always work so we wanted to make sure that we could handle some of the load balancing policy",
    "start": "789839",
    "end": "795899"
  },
  {
    "text": "management and everything else within kubernetes in a way that was very resilient so we built our own custom extensions using webassembly and on",
    "start": "795899",
    "end": "802980"
  },
  {
    "text": "Envoy and so the improcess extensions I'll go through briefly we used red panda for",
    "start": "802980",
    "end": "809399"
  },
  {
    "text": "that it's quite early days but it worked quite well for us so it was Kafka compliant you can inject your webassembly into the event queue so when",
    "start": "809399",
    "end": "817019"
  },
  {
    "text": "something comes through in a data stream then you can process that data before it leaves your event queue so when you",
    "start": "817019",
    "end": "822600"
  },
  {
    "text": "think about typical Kafka and Apache spark and Flink you would pull the data out process it and then send it",
    "start": "822600",
    "end": "829320"
  },
  {
    "text": "somewhere we wanted to actually manage this in queue and it was a lot faster doing that",
    "start": "829320",
    "end": "835200"
  },
  {
    "text": "um and it was like a serverless delivery platform essentially we'd have a red panda queue somewhere we'd throw the",
    "start": "835200",
    "end": "840660"
  },
  {
    "text": "webassembly module at it and it would process it and we this would allow the data scientists and data Engineers to just keep deploying webassembly",
    "start": "840660",
    "end": "847440"
  },
  {
    "text": "transformation modules to do whatever they wanted without having to give them a lot of different tooling we just had to provide a lightweight API",
    "start": "847440",
    "end": "854639"
  },
  {
    "text": "essentially and we built most of that in lust we wanted to reduce the network overhead so we use sidecar architecture that",
    "start": "854639",
    "end": "861779"
  },
  {
    "text": "means that when the processing came in the webassembly process runs within the",
    "start": "861779",
    "end": "867300"
  },
  {
    "text": "event queue as a sidecar so it listens to the information coming through and then starts processing when it's needed",
    "start": "867300",
    "end": "873180"
  },
  {
    "text": "and then we did high performance data processing because we use the event queue or red panda event queue to",
    "start": "873180",
    "end": "879600"
  },
  {
    "text": "actually do this scaling it was essentially a runtime for us at this point for the data scientists um and then we use reusable domain codes",
    "start": "879600",
    "end": "886560"
  },
  {
    "text": "so a lot of the code that we used in the event queue we could also use in the browser and under services and this",
    "start": "886560",
    "end": "892260"
  },
  {
    "text": "allowed us to do things like gdpr regulation compliance CCP CCPA regulation compliance because we didn't",
    "start": "892260",
    "end": "897959"
  },
  {
    "text": "take any data once it hit the ingest queue and put it anywhere temporarily and then process and clean it and",
    "start": "897959",
    "end": "903240"
  },
  {
    "text": "anonymize it we anonymized in the queue before we hit any of our actual data centers",
    "start": "903240",
    "end": "909920"
  },
  {
    "text": "and this actually allowed us cost savings because typically we would go backwards and then clean up the data which required another process",
    "start": "910260",
    "end": "917639"
  },
  {
    "text": "um so it's critical infrastructure Envoy is great uh some of you have probably already used it in kubernetes",
    "start": "917639",
    "end": "923160"
  },
  {
    "text": "um previous to using webassembly it was C plus plus that a lot of people built these extensions in which even I did but",
    "start": "923160",
    "end": "929699"
  },
  {
    "text": "webassembly makes it a lot easier to do that at the moment um and then allows us to do things like common routing so we applied a singular",
    "start": "929699",
    "end": "936480"
  },
  {
    "text": "policy control across all of our clusters we wrote one module handled all the policy so we knew what had",
    "start": "936480",
    "end": "941820"
  },
  {
    "text": "permissions to do what in our clusters and where the routing happened we would optimize between a cloud environment and",
    "start": "941820",
    "end": "946920"
  },
  {
    "text": "the edge environment and our cluster um by doing some clever caching and sidecar and then we'll support closer",
    "start": "946920",
    "end": "953880"
  },
  {
    "text": "Integrations with hybrid environments um again using the edge environment and the on-prem Clusters and the API routing",
    "start": "953880",
    "end": "961139"
  },
  {
    "text": "so all the services we had a common API routing we knew which one was a billing service which one was a diagnostic service we could split each of those",
    "start": "961139",
    "end": "967980"
  },
  {
    "text": "domains create a common routing library and then deploy it into Envoy as well and also it was the same Library we're",
    "start": "967980",
    "end": "973740"
  },
  {
    "text": "using in the services themselves so a lot of reusable code and then we would have more control over",
    "start": "973740",
    "end": "979380"
  },
  {
    "text": "critical infrastructure again this had to always work this was a national service so we didn't want this to go down at any point",
    "start": "979380",
    "end": "985620"
  },
  {
    "text": "um because it could cause lives um so the target architecture we have our web application again very familiar",
    "start": "985620",
    "end": "992279"
  },
  {
    "text": "now we have our service cluster Gateway um which is running in the edge environment",
    "start": "992279",
    "end": "998100"
  },
  {
    "text": "and then connects to our kubernetes cluster and then we have a HTTP services our new",
    "start": "998100",
    "end": "1004519"
  },
  {
    "text": "ones were all built with the spin we had Venice on there and postgres later which",
    "start": "1004519",
    "end": "1011120"
  },
  {
    "text": "worked really well um because it's provided by Spin and then we had our analytical models",
    "start": "1011120",
    "end": "1017420"
  },
  {
    "text": "connected to our web applications so we could do the normalizing the statistical modeling on demand so if somebody knew",
    "start": "1017420",
    "end": "1023060"
  },
  {
    "text": "they needed to do diagnostics on a heart murmur for example they could download the model run it not",
    "start": "1023060",
    "end": "1029660"
  },
  {
    "text": "and explicitly it would automatically download Once A entered that feature and then when they went offline they could continue to do that modeling and that",
    "start": "1029660",
    "end": "1036020"
  },
  {
    "text": "assessment and then when results came in and the connection was available it could send that data back up but it was",
    "start": "1036020",
    "end": "1041540"
  },
  {
    "text": "the same model we were using on the server to do the same Diagnostics again we have the red panda event queue to do",
    "start": "1041540",
    "end": "1046819"
  },
  {
    "text": "the data processing as it comes up through the web application and then we have our domain worker in the back doing",
    "start": "1046819",
    "end": "1052160"
  },
  {
    "text": "the actual heavy lifting for the applications we have and these are split when it's not a single domain work we",
    "start": "1052160",
    "end": "1057380"
  },
  {
    "text": "have distributed domain workers but they're using the same analytical models and the reason we have two here is because somebody can fake the",
    "start": "1057380",
    "end": "1063380"
  },
  {
    "text": "information coming from a browser that the model says oh I've detected a arrhythmia in a heart but we wanted to",
    "start": "1063380",
    "end": "1069980"
  },
  {
    "text": "make sure that that data once it came to the server was revalidated and it used exactly the same code in webassembly to",
    "start": "1069980",
    "end": "1075440"
  },
  {
    "text": "make sure that that data was was is integral and the next use case is Automotive so",
    "start": "1075440",
    "end": "1083780"
  },
  {
    "text": "we've been working with polstar who wanted to do a decentralized web free project and I'm",
    "start": "1083780",
    "end": "1090740"
  },
  {
    "text": "not going to take questions on web3 in this conversation but they wanted to build an open ecosystem the actual use",
    "start": "1090740",
    "end": "1097340"
  },
  {
    "text": "case was super interesting so they said hey we don't want to work with various Partners we don't even want to worry about our competitors we want to build",
    "start": "1097340",
    "end": "1104600"
  },
  {
    "text": "an open ecosystem where we can have a feature in the car somebody can provide a service for cars they can integrate",
    "start": "1104600",
    "end": "1110780"
  },
  {
    "text": "without us having to actually have a conversation so the data is always private it was",
    "start": "1110780",
    "end": "1116419"
  },
  {
    "text": "it's key to me to build systems where data is private so we made sure the data was Private in this case and but it was",
    "start": "1116419",
    "end": "1122120"
  },
  {
    "text": "actionable by all so we used the blockchain as an event system which is super interesting we use Smart contacts",
    "start": "1122120",
    "end": "1128539"
  },
  {
    "text": "for this again I'm not going to discuss a validity or smart contracts in this but but they worked quite well for this",
    "start": "1128539",
    "end": "1134059"
  },
  {
    "text": "project and the focus was on ecosystems they didn't want to build a product or platform they wanted to build an open",
    "start": "1134059",
    "end": "1139220"
  },
  {
    "text": "ecosystem where anybody in the industry could operate and they wanted highly computer computational workloads to run because",
    "start": "1139220",
    "end": "1146780"
  },
  {
    "text": "we needed cryptography we needed zero knowledge proofs throughout the system to validate information without actually having the information itself so zero",
    "start": "1146780",
    "end": "1153679"
  },
  {
    "text": "knowledge proofs for anybody that's not familiar we would send a proof to say we're claiming maybe",
    "start": "1153679",
    "end": "1159080"
  },
  {
    "text": "a vehicle has done ten thousand to twenty thousand kilometers it's a range proof we would need then the system to",
    "start": "1159080",
    "end": "1165140"
  },
  {
    "text": "say yes this is valid this car has done this this this much mileage so we could validate information that the car and I",
    "start": "1165140",
    "end": "1171200"
  },
  {
    "text": "mean the car was claiming it was to um and then logical structure reuse is",
    "start": "1171200",
    "end": "1176539"
  },
  {
    "text": "critical this is a small project we have like three people in the development team uh yeah three people on the service",
    "start": "1176539",
    "end": "1183020"
  },
  {
    "text": "stuck in the development team and then one mobile developer so we it was super important to make sure we were reusing",
    "start": "1183020",
    "end": "1188120"
  },
  {
    "text": "components here and introducing uh Rustin webassembly caused a few very serious discussions",
    "start": "1188120",
    "end": "1195440"
  },
  {
    "text": "with that development team um so we use Smart contacts as extensions and they run in a blockchain",
    "start": "1195440",
    "end": "1200720"
  },
  {
    "text": "with webassembly built with a rust SDK we use something called concorium as a blockchain and which was mandated by by",
    "start": "1200720",
    "end": "1207980"
  },
  {
    "text": "pole star but it works really well um every contract is public and verifiable in this blockchain so you're",
    "start": "1207980",
    "end": "1213799"
  },
  {
    "text": "releasing code that everybody can see it's not open source but everybody can see your code on the blockchain and they",
    "start": "1213799",
    "end": "1219320"
  },
  {
    "text": "could see what you're essentially doing and interact as well contracts can never be updated or deleted there's a little",
    "start": "1219320",
    "end": "1225140"
  },
  {
    "text": "bit of an aspect here because you can update or delete these contracts but they're not really updated or deleted",
    "start": "1225140",
    "end": "1231320"
  },
  {
    "text": "they're just replaced with another one and the old ones still or they're just not actionable but again you have to rethink your",
    "start": "1231320",
    "end": "1237559"
  },
  {
    "text": "deployment model authorization and role-based access control was actually done by delegation so we still needed",
    "start": "1237559",
    "end": "1243919"
  },
  {
    "text": "things that weren't running on the cluster so we built some services in Rust where we could do the",
    "start": "1243919",
    "end": "1250220"
  },
  {
    "text": "authentication using uh crypto IDs and then testing was far more complicated",
    "start": "1250220",
    "end": "1256100"
  },
  {
    "text": "because it really hard to test code in an environment that is public and everybody can see it you don't want to",
    "start": "1256100",
    "end": "1261740"
  },
  {
    "text": "deploy something with your name on it and then find out it's doing something really stupid so you have to find a way of really doing unit testing with smart",
    "start": "1261740",
    "end": "1268700"
  },
  {
    "text": "contacts which is difficult and then accidents are far more damaging with this environment so we really had a deployment problem how do we deploy",
    "start": "1268700",
    "end": "1275720"
  },
  {
    "text": "something and make sure it's really good code um without causing some problems",
    "start": "1275720",
    "end": "1282580"
  },
  {
    "text": "um so the target architecture for this we had two wallets the vehicle has its own wallet here everybody has a wallet a",
    "start": "1283039",
    "end": "1289039"
  },
  {
    "text": "driver has a wallet and they they're spending stuff with their crypto um not crypto tokens uh but they're",
    "start": "1289039",
    "end": "1294559"
  },
  {
    "text": "spending stuff with their um crypto rewards uh the subscriptions and such but we have a vehicle wallet as",
    "start": "1294559",
    "end": "1299900"
  },
  {
    "text": "well so the vehicle can pay for its own stuff it can be paid for things as well so it's autonomous not in self-driving",
    "start": "1299900",
    "end": "1305840"
  },
  {
    "text": "but it can actually do its own things its own shopping if you could actually pick up the grocery bags",
    "start": "1305840",
    "end": "1312500"
  },
  {
    "text": "um and then they will share contracts so we're building contracts with webassembly concordium supports this with the rust SDK it supports other",
    "start": "1312500",
    "end": "1318679"
  },
  {
    "text": "languages as well um and but it's built on Rust and then we shared these contracts between a mobile wallet and a vehicle wallet and",
    "start": "1318679",
    "end": "1325820"
  },
  {
    "text": "these two talk to each other in a peer-to-peer so they didn't need to go to the blockchain the blockchain was used for the Eventing only",
    "start": "1325820",
    "end": "1331340"
  },
  {
    "text": "and then concordium nodes offer it anywhere and anybody can run their own node they would use the same contracts",
    "start": "1331340",
    "end": "1337159"
  },
  {
    "text": "and these contracts would say things like um hey this car wants to charge it's plugged into a charging point is anybody",
    "start": "1337159",
    "end": "1344120"
  },
  {
    "text": "using this network that can provide charging on this charging point and then it would talk with the wallet it would",
    "start": "1344120",
    "end": "1350480"
  },
  {
    "text": "start the charging process with a smart contract and then it would take the money from the car with a smart contract",
    "start": "1350480",
    "end": "1357200"
  },
  {
    "text": "once he had finished charging and the car could say things like I only want to recharged to 80 today and then third-party services so when",
    "start": "1357200",
    "end": "1364880"
  },
  {
    "text": "we're talking about the charging Point operators the aggregators on electric vehicles these could integrate with the concordium network and by integrating",
    "start": "1364880",
    "end": "1371720"
  },
  {
    "text": "with the smart contracts and say I want to provide charging service to this I want to hear on the network on the Chain",
    "start": "1371720",
    "end": "1377840"
  },
  {
    "text": "when an event comes up that operates in one of my charging points and again this",
    "start": "1377840",
    "end": "1383120"
  },
  {
    "text": "is all webassembly extension is essentially running entirely through this network on the vehicle wallet as well we um",
    "start": "1383120",
    "end": "1390380"
  },
  {
    "text": "we we've built on the web assembly runtime so we tried to run the the webassembly component on that runtime",
    "start": "1390380",
    "end": "1397520"
  },
  {
    "text": "and so we use fastly for this we we moved from our previous mentioned Edge cloud provider and we started using",
    "start": "1397520",
    "end": "1403400"
  },
  {
    "text": "fastly um and again I can talk to anybody today about why that was but I won't cover this in this talk",
    "start": "1403400",
    "end": "1409640"
  },
  {
    "text": "um but we ran about three projects at the same time so it was a great learning experience to try and learn everything",
    "start": "1409640",
    "end": "1415159"
  },
  {
    "text": "across three different projects um it was easier easiest to build on I say easy-ish because there's a learning",
    "start": "1415159",
    "end": "1420860"
  },
  {
    "text": "curve on the terminology and faster use something called varnish which I haven't used in a long time and we had to get",
    "start": "1420860",
    "end": "1427340"
  },
  {
    "text": "the development team to get up and running with that but pretty much it went up and running fairly painlessly",
    "start": "1427340",
    "end": "1434539"
  },
  {
    "text": "um with the SDK so we used again rust for the webassembly edge environment on fastly it was performed with zero",
    "start": "1434539",
    "end": "1440419"
  },
  {
    "text": "maintenance and I mean zero maintenance we deployed something with our CI and then we never looked at it again it just",
    "start": "1440419",
    "end": "1445640"
  },
  {
    "text": "worked and and because fussy does versioning we could just see what was happening when a new version was deployed and it broke and we could",
    "start": "1445640",
    "end": "1452240"
  },
  {
    "text": "figure out what was happening with the logging on that as well um there was no real database or storage so there's a dictionary but there's no",
    "start": "1452240",
    "end": "1458299"
  },
  {
    "text": "real database or storage if you want to build highly scalable database on fastly at the moment so we had a problem there",
    "start": "1458299",
    "end": "1463340"
  },
  {
    "text": "we had to solve that other companies Edge companies had their databases but it wasn't that painful to solve and the",
    "start": "1463340",
    "end": "1470840"
  },
  {
    "text": "HTTP interface leaders to be customized for our use case it doesn't normally it works really well but we had to do something really clever where we wanted",
    "start": "1470840",
    "end": "1476840"
  },
  {
    "text": "to run HTTP services on multiple formations of Hardware as well as in",
    "start": "1476840",
    "end": "1482539"
  },
  {
    "text": "fastly so and we didn't want to write duplicate code so we wrote a bridging component to bridge fastly's HTTP",
    "start": "1482539",
    "end": "1488600"
  },
  {
    "text": "interface on our own we wanted to use the open source library from firstly in Russ but there wasn't one so",
    "start": "1488600",
    "end": "1494360"
  },
  {
    "text": "I think that's coming from what I've heard and so data on the edge was surprisingly difficult to get right when",
    "start": "1494360",
    "end": "1500419"
  },
  {
    "text": "they don't have a database so most environments like any of your database solution in with webassembly in a browser on the edge you you want to be",
    "start": "1500419",
    "end": "1507380"
  },
  {
    "text": "able to do that you don't have the TCP access so how do you do that data processing with databases",
    "start": "1507380",
    "end": "1513020"
  },
  {
    "text": "um there's also ambiguous with regulation so other companies can claim that they are gdpr compliant but the",
    "start": "1513020",
    "end": "1519380"
  },
  {
    "text": "problem is you don't know where that data is being processed or stored in most cases um so we had a bit of an issue there",
    "start": "1519380",
    "end": "1525080"
  },
  {
    "text": "when using other providers so in this case we were quite happy to go Regional and make sure we were compliant with our",
    "start": "1525080",
    "end": "1530600"
  },
  {
    "text": "data storage and securing Edge databases is very difficult because you want to make sure",
    "start": "1530600",
    "end": "1535760"
  },
  {
    "text": "that the traffic is secured usually how we use Mutual TLS and other forms of encryption but some Edge databases they",
    "start": "1535760",
    "end": "1541940"
  },
  {
    "text": "really do lack options there um and then supporting database is obviously difficult so we use terminusdb",
    "start": "1541940",
    "end": "1547520"
  },
  {
    "text": "to begin with as an open API you can use over HTTP you can send your queries and",
    "start": "1547520",
    "end": "1552860"
  },
  {
    "text": "get the responses back and then and change them it doesn't have a web assembly driver so we built our own but",
    "start": "1552860",
    "end": "1558380"
  },
  {
    "text": "it does have a JavaScript drive and I think a python driver which worked really well so see it's essentially a",
    "start": "1558380",
    "end": "1563539"
  },
  {
    "text": "Knowledge Graph database quite powerful um super recommend experimenting with it",
    "start": "1563539",
    "end": "1568580"
  },
  {
    "text": "and seeing what you can do with it and it works really well in disputed fashion and then more recently towards the end",
    "start": "1568580",
    "end": "1574159"
  },
  {
    "text": "of this project we started applying several DB which is fairly new civil DB does have a webassembly driver which",
    "start": "1574159",
    "end": "1580039"
  },
  {
    "text": "works really well we got up and running in less than a day but deployed our database on Nomad on a cluster somewhere",
    "start": "1580039",
    "end": "1585860"
  },
  {
    "text": "and then connected with our fafsley workers straight into our civil DB",
    "start": "1585860",
    "end": "1592480"
  },
  {
    "text": "so what am I doing next after all these experiments so we're building something called namio now and namio is a human",
    "start": "1592820",
    "end": "1599480"
  },
  {
    "text": "Cloud environment it's designed not for organizations still on their workloads but for people to on their workloads",
    "start": "1599480",
    "end": "1604640"
  },
  {
    "text": "people that don't have any technical experience and but they do want to control the data",
    "start": "1604640",
    "end": "1609799"
  },
  {
    "text": "and the applications they're using so we're building it on the solid project which we've been experimenting",
    "start": "1609799",
    "end": "1616640"
  },
  {
    "text": "with for years I'm going to say we it's a non-profit Foundation we're doing at the moment in in the nordics",
    "start": "1616640",
    "end": "1622580"
  },
  {
    "text": "um and we're part of the fastly fast forward program at the moment and building this on facilities",
    "start": "1622580",
    "end": "1628640"
  },
  {
    "text": "infrastructure but also it has to run on premise so our Target environment is can somebody run it on a low powered",
    "start": "1628640",
    "end": "1634159"
  },
  {
    "text": "Raspberry Pi at home with very little technical knowledge so this is about personal data storage",
    "start": "1634159",
    "end": "1640700"
  },
  {
    "text": "personal functionality can you store your address book on this can you store your email on this can you store your",
    "start": "1640700",
    "end": "1645980"
  },
  {
    "text": "social media on this um so it's a distributed Cloud project designed for everybody and it's entirely",
    "start": "1645980",
    "end": "1652340"
  },
  {
    "text": "webassembly based it's entirely open sourced um we're working on open sourcing more",
    "start": "1652340",
    "end": "1657559"
  },
  {
    "text": "pieces at the moment and it's all about distributed data spaces so you can store your data anywhere so if your health",
    "start": "1657559",
    "end": "1663500"
  },
  {
    "text": "company or your insurance company has some of your data they can operate part of this um on their environment and you can",
    "start": "1663500",
    "end": "1669740"
  },
  {
    "text": "operate a different part and you can operate the trust model between those two different areas and it supports",
    "start": "1669740",
    "end": "1674840"
  },
  {
    "text": "activity Pub and a very verse because hey we might as well support everything open and then it's designed to be",
    "start": "1674840",
    "end": "1681679"
  },
  {
    "text": "convenient and simple so we have a real zero technical approach here we want a single click approach my target is kind",
    "start": "1681679",
    "end": "1688220"
  },
  {
    "text": "of my mother deploy this at home on a very old Mac and my mother is a great",
    "start": "1688220",
    "end": "1694700"
  },
  {
    "text": "Benchmark for testing technology um and it supports privacy preserving AI because the problem we have at the",
    "start": "1694700",
    "end": "1700520"
  },
  {
    "text": "moment is everybody's getting benefits from AI tools with all the the email and everything else we wanted to provide",
    "start": "1700520",
    "end": "1705919"
  },
  {
    "text": "that convenience to everybody else without saying you have to give up your data for that convenience so you can use privacy preserving AI with Federated",
    "start": "1705919",
    "end": "1713179"
  },
  {
    "text": "learning in this environment with webassembly to make sure that anybody can deploy a webassembly module do some",
    "start": "1713179",
    "end": "1718940"
  },
  {
    "text": "Federated learning and provide you with some um anticipatory recommendations",
    "start": "1718940",
    "end": "1725120"
  },
  {
    "text": "and then it's fully extensible with webassembly modules so we have a three-tier stack which I will go through",
    "start": "1725120",
    "end": "1730640"
  },
  {
    "text": "very quickly um because I'm running out of time with this so it's based on decentralized",
    "start": "1730640",
    "end": "1736460"
  },
  {
    "text": "knowledge class we have our web identity which is a web standard uh we have a web access control so you can Define who can",
    "start": "1736460",
    "end": "1743120"
  },
  {
    "text": "access your data when can they access it um and then we have for example Cloud",
    "start": "1743120",
    "end": "1748279"
  },
  {
    "text": "Medical Data somewhere with a medical practitioner that could be stored somewhere but it's behind your web access control so you control that and",
    "start": "1748279",
    "end": "1754159"
  },
  {
    "text": "Define that and then your local social data could be locally on your Raspberry Pi but it's part of your same singular",
    "start": "1754159",
    "end": "1760399"
  },
  {
    "text": "Knowledge Graph that you fully control rather than a company controlling that where you can provide access on demand",
    "start": "1760399",
    "end": "1765860"
  },
  {
    "text": "within certain rules of who can use that and then we have third-party abstract",
    "start": "1765860",
    "end": "1771799"
  },
  {
    "text": "common on that environment so we redid the data mesh architecture to get this to work and I'm really going to rush",
    "start": "1771799",
    "end": "1778220"
  },
  {
    "text": "through this now because I think the the diagram is more interesting than the text but data Lakes are kind of",
    "start": "1778220",
    "end": "1784520"
  },
  {
    "text": "old-fashioned aggregate data store it and then do something on it later maybe but now we have everyone's data we",
    "start": "1784520",
    "end": "1790460"
  },
  {
    "text": "didn't want to build that we wanted people to own their own isolated data in this case so we have a HTTP rest interface we have",
    "start": "1790460",
    "end": "1797360"
  },
  {
    "text": "a core service runtime which is a webassembly powered runtime written in Rust it runs webassembly module so we",
    "start": "1797360",
    "end": "1802700"
  },
  {
    "text": "have a base run time for Ingress into our data mesh and then all of our data processing and endpoint registrations",
    "start": "1802700",
    "end": "1809840"
  },
  {
    "text": "happens within webassembly modules so once you deploy this you can install as many modules as you want to do what you",
    "start": "1809840",
    "end": "1816200"
  },
  {
    "text": "need we have our event cues these are Kafka compliant we can support others which I'll show you how to in a",
    "start": "1816200",
    "end": "1822380"
  },
  {
    "text": "moment and we support grpc as well so if somebody wants more control over their code they can run grpc we should then",
    "start": "1822380",
    "end": "1828440"
  },
  {
    "text": "integrate into the web assembly modules and then we have our domain worker runtime which does most of our heavy",
    "start": "1828440",
    "end": "1833899"
  },
  {
    "text": "lifting again and we do this through Cloud events so Cloud events go throughout the entire system we have a a",
    "start": "1833899",
    "end": "1839059"
  },
  {
    "text": "documentation of what the Json schema is for those but this allows extensions to the event queue as well so people can",
    "start": "1839059",
    "end": "1844399"
  },
  {
    "text": "build their own extensions to subscribe to events in the queue and then in the back end we also have webassembly",
    "start": "1844399",
    "end": "1849559"
  },
  {
    "text": "modules for those extensions so you can do some logic behind the scenes to manage different data storage solutions and such",
    "start": "1849559",
    "end": "1855620"
  },
  {
    "text": "so this is a web service architecture not a data mesh architecture which is what I've just claimed it is and but",
    "start": "1855620",
    "end": "1860720"
  },
  {
    "text": "what if we took about away the interface then essentially we have an event queue and we are domain processing but what if",
    "start": "1860720",
    "end": "1867740"
  },
  {
    "text": "we decide that we want to support a different event queue so we use grpc uh same one time same SDK",
    "start": "1867740",
    "end": "1875419"
  },
  {
    "text": "we now extend to support a different event queue uses the same webassembly modules we've already written we don't",
    "start": "1875419",
    "end": "1882140"
  },
  {
    "text": "want to have to rewrite these now we've introduced a new component into the stack um so the SDK allows us to use the same",
    "start": "1882140",
    "end": "1887659"
  },
  {
    "text": "ones and then for any Ingress that we need to do from other data we can just Connect into there one time and pull that data",
    "start": "1887659",
    "end": "1894140"
  },
  {
    "text": "in and then process it again in process on the event queue and make sure that data is processed transformed and is not",
    "start": "1894140",
    "end": "1900919"
  },
  {
    "text": "storing anything we shouldn't be storing before it goes into our data source if you wanted to add a different data store and this is the interesting thing about",
    "start": "1900919",
    "end": "1906500"
  },
  {
    "text": "spin adding for example postgres support if you wanted to add something different we do something very similar we would",
    "start": "1906500",
    "end": "1913340"
  },
  {
    "text": "deploy a new domain work runtime which adds support for a different data store but it would run again the same",
    "start": "1913340",
    "end": "1919039"
  },
  {
    "text": "webassembly modules that would now rate right to a different data store seamlessly",
    "start": "1919039",
    "end": "1924398"
  },
  {
    "text": "so the extensibility model for this and this is our the final part we have our Cloud events so you do event driven",
    "start": "1925340",
    "end": "1931399"
  },
  {
    "text": "architecture you subscribe to the events pulling the information processor information in queue",
    "start": "1931399",
    "end": "1936679"
  },
  {
    "text": "um anybody can build something to subscribe to that event queue so it's fully extensible grpc provides a more",
    "start": "1936679",
    "end": "1942020"
  },
  {
    "text": "Technical and more powerful way of doing extensions because now you can distribute your workloads across",
    "start": "1942020",
    "end": "1947120"
  },
  {
    "text": "different environments for one different solution and use grpc to do some really interesting things that has access to",
    "start": "1947120",
    "end": "1952640"
  },
  {
    "text": "the hardware if needed but then we do webassembly there should be the 90 of extensions with webassembly running",
    "start": "1952640",
    "end": "1959140"
  },
  {
    "text": "multilingual plugins that are lightweight that run on those grpc nodes",
    "start": "1959140",
    "end": "1965600"
  },
  {
    "text": "and then finally combining all three is our holistic solution to extensibility",
    "start": "1965600",
    "end": "1970720"
  },
  {
    "text": "for Building Services in the future we're doing this across multiple commercial projects with companies as well where we're giving them the tooling",
    "start": "1970720",
    "end": "1977659"
  },
  {
    "text": "to build a stack um using most of the tools that you guys are familiar with and then they're just",
    "start": "1977659",
    "end": "1983419"
  },
  {
    "text": "building extensions in their organizations not building the core boilerplate for Building Services instead which they shouldn't be doing",
    "start": "1983419",
    "end": "1989120"
  },
  {
    "text": "anyway and then I'm going to skip through this this is essentially we're building a authentication Service on namio that is",
    "start": "1989120",
    "end": "1996559"
  },
  {
    "text": "fully open source fully powered by webassembly so if you want to add a different capability you do a webassembly module so or2 oidc web ID",
    "start": "1996559",
    "end": "2004059"
  },
  {
    "text": "they're all webassembly modules in this and if you want to support something new you can just do that and it fully works on faster's edge",
    "start": "2004059",
    "end": "2011740"
  },
  {
    "text": "compute at the moment so it's pluggable but it also runs on your Raspberry Pi at home and you can actually boost it too",
    "start": "2011740",
    "end": "2016779"
  },
  {
    "text": "so you can say hey if my pie goes down I want to use fastest compute if my Pi is",
    "start": "2016779",
    "end": "2022299"
  },
  {
    "text": "available use that so I have a synchronization of my personal data if anything happens",
    "start": "2022299",
    "end": "2028018"
  },
  {
    "text": "so thank you [Applause]",
    "start": "2028960",
    "end": "2040960"
  },
  {
    "text": "any questions",
    "start": "2040960",
    "end": "2043620"
  },
  {
    "text": "thank you very much um really good presentation and it was also really good to see a machine",
    "start": "2049419",
    "end": "2054520"
  },
  {
    "text": "learning workflow presented in waslam I was wondering if you could talk a little bit more about your model training cycle yeah so the model training cycle looks",
    "start": "2054520",
    "end": "2061179"
  },
  {
    "text": "so super simple there but it's really not so we use kubeflow which is obviously very familiar for doing this we used a tensorflow extender to begin",
    "start": "2061179",
    "end": "2068500"
  },
  {
    "text": "with so we did our training our data ingest our processing our validation and",
    "start": "2068500",
    "end": "2074138"
  },
  {
    "text": "then we would go through a training mechanism and validating the model so we wouldn't test against that the way I don't want to go too much into this but",
    "start": "2074139",
    "end": "2080320"
  },
  {
    "text": "the way I do my model development is like good software development a lot of data scientists don't know good software development because they were trained as",
    "start": "2080320",
    "end": "2086618"
  },
  {
    "text": "data scientists but we did unit testing and integration testing and all the things you don't get with models typically and then we would do the",
    "start": "2086619",
    "end": "2092858"
  },
  {
    "text": "validation on a model so the validation on the output with our own synthetic data and that's where the complication is is your synthetic data realistic",
    "start": "2092859",
    "end": "2099099"
  },
  {
    "text": "enough to make the model valid or are you synthesizing something I'm breaking your model essentially so we had to",
    "start": "2099099",
    "end": "2104380"
  },
  {
    "text": "really work on that and that was part of our data validation we would generate data and then we would validate the datas as some and then the process would",
    "start": "2104380",
    "end": "2111339"
  },
  {
    "text": "be circular so we will continue that process and make sure that the model is is always updating itself once a month we would release a new model even if the",
    "start": "2111339",
    "end": "2117700"
  },
  {
    "text": "data hadn't changed and we wanted to make sure we were efficient with the Ecology of that so we would make sure we",
    "start": "2117700",
    "end": "2123760"
  },
  {
    "text": "were running in the optimal time not to use make bad mixed energy in Europe for example",
    "start": "2123760",
    "end": "2129640"
  },
  {
    "text": "um but then when the date when the weights came up and that process came up where the people were using the application and Shifting the models back",
    "start": "2129640",
    "end": "2136599"
  },
  {
    "text": "into the cloud environment and we needed to rebalance those weights into the models and retrain based on the weights not the data then we would have to",
    "start": "2136599",
    "end": "2143380"
  },
  {
    "text": "aggregate all of the models into a single we say data Lake but there's no data there's just some models and then",
    "start": "2143380",
    "end": "2149200"
  },
  {
    "text": "we would process the Learning Cycle manually at that point I say manually there wasn't a human involved but we",
    "start": "2149200",
    "end": "2154599"
  },
  {
    "text": "would trigger it based on events and say we're now going to take all these models and we want to rebalance all of these in",
    "start": "2154599",
    "end": "2159940"
  },
  {
    "text": "the grid system and then redeploy all the models back down into the browser into people's devices when they have a",
    "start": "2159940",
    "end": "2165700"
  },
  {
    "text": "connection again",
    "start": "2165700",
    "end": "2168180"
  },
  {
    "text": "thank you for the presentation I want to ask when you develop these modules web",
    "start": "2178020",
    "end": "2184660"
  },
  {
    "text": "assembly modules so you probably needed some external libraries to use and",
    "start": "2184660",
    "end": "2192000"
  },
  {
    "text": "is it uh was it compatible like uh since",
    "start": "2192000",
    "end": "2197500"
  },
  {
    "text": "they may not be ported towards wasn't right no we had a lot of pains my my",
    "start": "2197500",
    "end": "2202540"
  },
  {
    "text": "development team hated me at times because I kept introducing tools that they weren't familiar with so we used",
    "start": "2202540",
    "end": "2207579"
  },
  {
    "text": "different versions of wasm runtimes for example because we were trying to solve different problems in the car we were used",
    "start": "2207579",
    "end": "2213700"
  },
  {
    "text": "um wasma for example I think but in most other areas we're using was some time and then we're using rust throughout so",
    "start": "2213700",
    "end": "2220720"
  },
  {
    "text": "we used golang so we didn't decide to go go against golang but that was for infrastructure we used rust for our core",
    "start": "2220720",
    "end": "2228099"
  },
  {
    "text": "tooling um and that created a lot of problems because the majority of some of those components wasn't as good as it would",
    "start": "2228099",
    "end": "2233980"
  },
  {
    "text": "have been if we use go or if we'd use a different was on one time so we had a lot of I would say it wasn't smooth",
    "start": "2233980",
    "end": "2239619"
  },
  {
    "text": "smooth sailing of implementing all the tools and getting everything to work correctly and a lot of experimentation experiments including this real DB which",
    "start": "2239619",
    "end": "2246760"
  },
  {
    "text": "we only did recently um because we were having real problems with supporting what the databases securely for for a",
    "start": "2246760",
    "end": "2253180"
  },
  {
    "text": "pole star so therefore we have to experiment with a new database and again it was easy but it was finding a",
    "start": "2253180",
    "end": "2258220"
  },
  {
    "text": "database that would provide what we needed that would run on an edge time environment or at least be accessible",
    "start": "2258220",
    "end": "2263380"
  },
  {
    "text": "from an edge environment and so I would say none of this was was straightforward but again it benefits for most of the",
    "start": "2263380",
    "end": "2269440"
  },
  {
    "text": "work people are doing in this room which when I first started web assembly years ago everything was a lot more painful so",
    "start": "2269440",
    "end": "2275440"
  },
  {
    "text": "we're gonna we're in a great state right now to actually be doing this pragmatically without costing people money or time trying to get things to",
    "start": "2275440",
    "end": "2282040"
  },
  {
    "text": "work too too far and one final thing about this crpc",
    "start": "2282040",
    "end": "2287859"
  },
  {
    "text": "approach I mean did you find inefficiency in terms of performance did",
    "start": "2287859",
    "end": "2293380"
  },
  {
    "text": "you find it performant enough when yeah it was it was super super powerful",
    "start": "2293380",
    "end": "2298480"
  },
  {
    "text": "the grpc connection so we could do it from the browser as well so grpc the way we loaded it and we did some load about",
    "start": "2298480",
    "end": "2304000"
  },
  {
    "text": "so some I would say clever load balancing but I didn't build it so we did some clever load balancing on the",
    "start": "2304000",
    "end": "2309520"
  },
  {
    "text": "grpc traffic um and we didn't have really any problems with the grpc load and the grpc",
    "start": "2309520",
    "end": "2315220"
  },
  {
    "text": "just didn't work over the network either with his grpc locally so in the same way that tools like terraform work we wanted",
    "start": "2315220",
    "end": "2320859"
  },
  {
    "text": "to be able to deploy plugins locally and we used erpc on a local machine to do that because we didn't want to use",
    "start": "2320859",
    "end": "2326680"
  },
  {
    "text": "too many low-level Concepts on each different environment each different platform just to get some remote",
    "start": "2326680",
    "end": "2332440"
  },
  {
    "text": "invocation to work from different modules",
    "start": "2332440",
    "end": "2336599"
  },
  {
    "text": "okay thank you thank you",
    "start": "2342820",
    "end": "2348420"
  }
]