[
  {
    "text": "foreign",
    "start": "599",
    "end": "3599"
  },
  {
    "text": "[Applause]",
    "start": "8250",
    "end": "15199"
  },
  {
    "text": "I'm a senior software engineer at",
    "start": "15199",
    "end": "17400"
  },
  {
    "text": "Century on the issue experience team and",
    "start": "17400",
    "end": "20039"
  },
  {
    "text": "welcome to my talk on debugging for",
    "start": "20039",
    "end": "21660"
  },
  {
    "text": "webassembly",
    "start": "21660",
    "end": "23100"
  },
  {
    "text": "as we all know webassemblies are very",
    "start": "23100",
    "end": "25080"
  },
  {
    "text": "powerful tool and fast emerging",
    "start": "25080",
    "end": "27420"
  },
  {
    "text": "technology for the browser and Beyond",
    "start": "27420",
    "end": "31080"
  },
  {
    "text": "however as with any technology there's",
    "start": "31080",
    "end": "33899"
  },
  {
    "text": "always bugs",
    "start": "33899",
    "end": "35940"
  },
  {
    "text": "so in this talk I'll be covering the",
    "start": "35940",
    "end": "39000"
  },
  {
    "text": "techniques that you would use to deal",
    "start": "39000",
    "end": "42660"
  },
  {
    "text": "with those bugs and the technologies",
    "start": "42660",
    "end": "44700"
  },
  {
    "text": "that power the tools that will help you",
    "start": "44700",
    "end": "46680"
  },
  {
    "text": "solve those bugs",
    "start": "46680",
    "end": "49640"
  },
  {
    "text": "debugging is core to the developer",
    "start": "50399",
    "end": "52440"
  },
  {
    "text": "experience roughly 25 percent of your",
    "start": "52440",
    "end": "55199"
  },
  {
    "text": "time is spent squashing bugs",
    "start": "55199",
    "end": "57899"
  },
  {
    "text": "and we as a community should spend time",
    "start": "57899",
    "end": "60600"
  },
  {
    "text": "and invest in the tools and tooling",
    "start": "60600",
    "end": "64260"
  },
  {
    "text": "around debugging to help us and",
    "start": "64260",
    "end": "66840"
  },
  {
    "text": "newcomers to webassembly",
    "start": "66840",
    "end": "69720"
  },
  {
    "text": "so basic debugging involves using print",
    "start": "69720",
    "end": "72479"
  },
  {
    "text": "line debugging which is the most basic",
    "start": "72479",
    "end": "74760"
  },
  {
    "text": "tool essentially just log out your",
    "start": "74760",
    "end": "77220"
  },
  {
    "text": "variables run the code and work",
    "start": "77220",
    "end": "79740"
  },
  {
    "text": "backwards to figure out what's going",
    "start": "79740",
    "end": "82259"
  },
  {
    "text": "wrong",
    "start": "82259",
    "end": "83520"
  },
  {
    "text": "unit tests are a little bit better but",
    "start": "83520",
    "end": "86159"
  },
  {
    "text": "I'm not going to go into too much detail",
    "start": "86159",
    "end": "87840"
  },
  {
    "text": "here but these are the most basic Tools",
    "start": "87840",
    "end": "90420"
  },
  {
    "text": "in your tool belt",
    "start": "90420",
    "end": "92640"
  },
  {
    "text": "before we get into more advanced tools I",
    "start": "92640",
    "end": "95340"
  },
  {
    "text": "want to talk about the tech that powers",
    "start": "95340",
    "end": "96720"
  },
  {
    "text": "those tools so I'm going to dive deep",
    "start": "96720",
    "end": "99720"
  },
  {
    "text": "into dwarf and Source Maps",
    "start": "99720",
    "end": "103380"
  },
  {
    "text": "dwarf is a debugging format that's",
    "start": "103380",
    "end": "106380"
  },
  {
    "text": "commonly used in low-level programming",
    "start": "106380",
    "end": "108180"
  },
  {
    "text": "languages like C and C plus",
    "start": "108180",
    "end": "111360"
  },
  {
    "text": "dwarf works for works by embedding",
    "start": "111360",
    "end": "114240"
  },
  {
    "text": "sections of debug debug data in an",
    "start": "114240",
    "end": "117420"
  },
  {
    "text": "executable or object file and because",
    "start": "117420",
    "end": "120119"
  },
  {
    "text": "wasm is an extensible object format it's",
    "start": "120119",
    "end": "124079"
  },
  {
    "text": "totally possible to embed the dwarf data",
    "start": "124079",
    "end": "127439"
  },
  {
    "text": "so this thing this debug data includes",
    "start": "127439",
    "end": "130619"
  },
  {
    "text": "function names file names and line",
    "start": "130619",
    "end": "132480"
  },
  {
    "text": "numbers so which we can use to pinpoint",
    "start": "132480",
    "end": "134640"
  },
  {
    "text": "issues in the code",
    "start": "134640",
    "end": "136140"
  },
  {
    "text": "however there are some limitations",
    "start": "136140",
    "end": "137780"
  },
  {
    "text": "because not all compilers support it and",
    "start": "137780",
    "end": "141300"
  },
  {
    "text": "this debug data can be quite large",
    "start": "141300",
    "end": "144980"
  },
  {
    "text": "to address these limitations webassembly",
    "start": "145080",
    "end": "147239"
  },
  {
    "text": "also supports Source Maps and you may be",
    "start": "147239",
    "end": "150000"
  },
  {
    "text": "familiar with Source Maps if you ever",
    "start": "150000",
    "end": "151260"
  },
  {
    "text": "work with JavaScript but for those of",
    "start": "151260",
    "end": "153120"
  },
  {
    "text": "you who are unfamiliar",
    "start": "153120",
    "end": "154620"
  },
  {
    "text": "Source Maps provide a way to map",
    "start": "154620",
    "end": "158099"
  },
  {
    "text": "compiled code back to the original",
    "start": "158099",
    "end": "160739"
  },
  {
    "text": "Source Code by using like a file",
    "start": "160739",
    "end": "163739"
  },
  {
    "text": "and this file contains like line numbers",
    "start": "163739",
    "end": "165840"
  },
  {
    "text": "file numbers and we can just use it to",
    "start": "165840",
    "end": "168000"
  },
  {
    "text": "map like inverse relationship",
    "start": "168000",
    "end": "171560"
  },
  {
    "text": "and",
    "start": "172319",
    "end": "174120"
  },
  {
    "text": "how do you use Source maps and dwarf to",
    "start": "174120",
    "end": "176760"
  },
  {
    "text": "debug webassembly the best supported",
    "start": "176760",
    "end": "179640"
  },
  {
    "text": "tool is going to be the browser Dev",
    "start": "179640",
    "end": "181560"
  },
  {
    "text": "tools which have support for debugging",
    "start": "181560",
    "end": "185459"
  },
  {
    "text": "webassembly using those formats so for",
    "start": "185459",
    "end": "187560"
  },
  {
    "text": "example in Chrome Dev tools you can view",
    "start": "187560",
    "end": "189780"
  },
  {
    "text": "the source code of your webassembly",
    "start": "189780",
    "end": "191159"
  },
  {
    "text": "module set breakpoints and step through",
    "start": "191159",
    "end": "193200"
  },
  {
    "text": "the code just like you would with",
    "start": "193200",
    "end": "195060"
  },
  {
    "text": "traditional JavaScript",
    "start": "195060",
    "end": "196739"
  },
  {
    "text": "and to do this you would need to enable",
    "start": "196739",
    "end": "198360"
  },
  {
    "text": "dwarf support in your browser",
    "start": "198360",
    "end": "201420"
  },
  {
    "text": "and allow us to pause on codex options",
    "start": "201420",
    "end": "206519"
  },
  {
    "text": "and when you have an error or breakpoint",
    "start": "206519",
    "end": "208980"
  },
  {
    "text": "by default it stops on the JavaScript",
    "start": "208980",
    "end": "211920"
  },
  {
    "text": "glue code",
    "start": "211920",
    "end": "213120"
  },
  {
    "text": "but on the right you can see the call",
    "start": "213120",
    "end": "214739"
  },
  {
    "text": "stack representing the stack trace of",
    "start": "214739",
    "end": "217019"
  },
  {
    "text": "the error",
    "start": "217019",
    "end": "218159"
  },
  {
    "text": "and you can navigate to the original",
    "start": "218159",
    "end": "219659"
  },
  {
    "text": "source code and the line that invoked",
    "start": "219659",
    "end": "221940"
  },
  {
    "text": "the exception",
    "start": "221940",
    "end": "223980"
  },
  {
    "text": "now if you look in the scope view you",
    "start": "223980",
    "end": "226080"
  },
  {
    "text": "can see the original names and values of",
    "start": "226080",
    "end": "228180"
  },
  {
    "text": "the variables in code",
    "start": "228180",
    "end": "231019"
  },
  {
    "text": "now that we've covered the basics of",
    "start": "231540",
    "end": "233700"
  },
  {
    "text": "debugging webassembly using the browser",
    "start": "233700",
    "end": "235500"
  },
  {
    "text": "Dev tools I want to dive into some more",
    "start": "235500",
    "end": "237599"
  },
  {
    "text": "advanced uh tooling",
    "start": "237599",
    "end": "240540"
  },
  {
    "text": "so WAP stands for the webassembly binary",
    "start": "240540",
    "end": "243239"
  },
  {
    "text": "toolkit it's a powerful tool set when",
    "start": "243239",
    "end": "245640"
  },
  {
    "text": "working with webassembly so it includes",
    "start": "245640",
    "end": "247980"
  },
  {
    "text": "uh like in Suite of tools includes a",
    "start": "247980",
    "end": "250019"
  },
  {
    "text": "disassembler a validator and a debugger",
    "start": "250019",
    "end": "252420"
  },
  {
    "text": "so it's pretty useful when you're trying",
    "start": "252420",
    "end": "255060"
  },
  {
    "text": "to debug webassembly",
    "start": "255060",
    "end": "256979"
  },
  {
    "text": "and so I want to go into an example of",
    "start": "256979",
    "end": "260400"
  },
  {
    "text": "how we can debug issues with compiled",
    "start": "260400",
    "end": "262320"
  },
  {
    "text": "webassembly when we don't have access to",
    "start": "262320",
    "end": "264720"
  },
  {
    "text": "the source code",
    "start": "264720",
    "end": "267060"
  },
  {
    "text": "so I built this a small application that",
    "start": "267060",
    "end": "270000"
  },
  {
    "text": "Returns the Fibonacci sequence the",
    "start": "270000",
    "end": "272580"
  },
  {
    "text": "calculations offloaded to a wasm",
    "start": "272580",
    "end": "274560"
  },
  {
    "text": "function that we don't have the source",
    "start": "274560",
    "end": "277380"
  },
  {
    "text": "to",
    "start": "277380",
    "end": "278100"
  },
  {
    "text": "and this demo is running in an iframe so",
    "start": "278100",
    "end": "281220"
  },
  {
    "text": "on my local host but as we can see here",
    "start": "281220",
    "end": "284639"
  },
  {
    "text": "the moment we hit 21 it's returning a",
    "start": "284639",
    "end": "287220"
  },
  {
    "text": "zero right so something's going wrong",
    "start": "287220",
    "end": "291979"
  },
  {
    "text": "so the first thing we can do is use the",
    "start": "294240",
    "end": "296820"
  },
  {
    "text": "wasm decompile tool to decompile the",
    "start": "296820",
    "end": "299580"
  },
  {
    "text": "Wasa module into a readable C like",
    "start": "299580",
    "end": "303199"
  },
  {
    "text": "syntax it's not C code but the result",
    "start": "303199",
    "end": "307020"
  },
  {
    "text": "will let you read large volumes of code",
    "start": "307020",
    "end": "309320"
  },
  {
    "text": "when you don't have access to the source",
    "start": "309320",
    "end": "311699"
  },
  {
    "text": "of the wasn't binary",
    "start": "311699",
    "end": "313979"
  },
  {
    "text": "and so looking closer at the output",
    "start": "313979",
    "end": "316380"
  },
  {
    "text": "does anything look suspicious",
    "start": "316380",
    "end": "318720"
  },
  {
    "text": "probably this line where if a is greater",
    "start": "318720",
    "end": "321240"
  },
  {
    "text": "than 20 it's returning a zero",
    "start": "321240",
    "end": "324180"
  },
  {
    "text": "so the next thing we can do is also use",
    "start": "324180",
    "end": "326460"
  },
  {
    "text": "The wasm Interpreter to run our unit",
    "start": "326460",
    "end": "329520"
  },
  {
    "text": "tests or pass arguments to want some",
    "start": "329520",
    "end": "332039"
  },
  {
    "text": "functions so this would allow you to",
    "start": "332039",
    "end": "334440"
  },
  {
    "text": "pinpoint the exact location of the",
    "start": "334440",
    "end": "336300"
  },
  {
    "text": "performance issue and identify any bugs",
    "start": "336300",
    "end": "338340"
  },
  {
    "text": "that might be causing them and here you",
    "start": "338340",
    "end": "340199"
  },
  {
    "text": "can just run it and you can see like oh",
    "start": "340199",
    "end": "342360"
  },
  {
    "text": "it's actually the Fibonacci function",
    "start": "342360",
    "end": "344400"
  },
  {
    "text": "here that's causing the problem",
    "start": "344400",
    "end": "347520"
  },
  {
    "text": "so after identifying the problem",
    "start": "347520",
    "end": "349680"
  },
  {
    "text": "you can run the wasm2 watt tool to",
    "start": "349680",
    "end": "352800"
  },
  {
    "text": "translate the binary file format into",
    "start": "352800",
    "end": "355800"
  },
  {
    "text": "the text format and now we can edit the",
    "start": "355800",
    "end": "358440"
  },
  {
    "text": "watt file",
    "start": "358440",
    "end": "360660"
  },
  {
    "text": "so when we open up the release watt file",
    "start": "360660",
    "end": "363600"
  },
  {
    "text": "it looks like this",
    "start": "363600",
    "end": "366440"
  },
  {
    "text": "and as we're like looking at that this",
    "start": "366840",
    "end": "370440"
  },
  {
    "text": "is where the suspicious code lies and if",
    "start": "370440",
    "end": "372900"
  },
  {
    "text": "we just delete it",
    "start": "372900",
    "end": "374340"
  },
  {
    "text": "and edit out a little bit more",
    "start": "374340",
    "end": "376500"
  },
  {
    "text": "uh",
    "start": "376500",
    "end": "377940"
  },
  {
    "text": "we can generate the binary from that",
    "start": "377940",
    "end": "380460"
  },
  {
    "text": "text format using the what to wasm Tool",
    "start": "380460",
    "end": "383940"
  },
  {
    "text": "import the modified library and run it",
    "start": "383940",
    "end": "386940"
  },
  {
    "text": "and hopefully this works",
    "start": "386940",
    "end": "390259"
  },
  {
    "text": "yeah",
    "start": "392400",
    "end": "394940"
  },
  {
    "text": "oh no oh",
    "start": "395100",
    "end": "398100"
  },
  {
    "text": "oh I gotta click this thing",
    "start": "398100",
    "end": "400500"
  },
  {
    "text": "oh nice",
    "start": "400500",
    "end": "402539"
  },
  {
    "text": "okay so it's working oh I guess you guys",
    "start": "402539",
    "end": "404819"
  },
  {
    "text": "didn't see the other one or whatever",
    "start": "404819",
    "end": "408319"
  },
  {
    "text": "okay",
    "start": "410880",
    "end": "411960"
  },
  {
    "text": "another interesting problem is when our",
    "start": "411960",
    "end": "413759"
  },
  {
    "text": "code has a memory leak",
    "start": "413759",
    "end": "416580"
  },
  {
    "text": "so when a web assembly module is",
    "start": "416580",
    "end": "418199"
  },
  {
    "text": "instantiated the JavaScript engine",
    "start": "418199",
    "end": "420060"
  },
  {
    "text": "internally creates an array buffer uh",
    "start": "420060",
    "end": "422520"
  },
  {
    "text": "the array buffer is a JavaScript object",
    "start": "422520",
    "end": "424139"
  },
  {
    "text": "that JavaScript has a reference to and",
    "start": "424139",
    "end": "426479"
  },
  {
    "text": "allows us to pass values between",
    "start": "426479",
    "end": "427979"
  },
  {
    "text": "JavaScript and webassembly",
    "start": "427979",
    "end": "430080"
  },
  {
    "text": "if a web assembly module has instance to",
    "start": "430080",
    "end": "432360"
  },
  {
    "text": "the direct memory and forgets to clear",
    "start": "432360",
    "end": "435419"
  },
  {
    "text": "out that memory before it goes out of",
    "start": "435419",
    "end": "437759"
  },
  {
    "text": "scope then the browser can leak memory",
    "start": "437759",
    "end": "440099"
  },
  {
    "text": "and so once the array buffer size is",
    "start": "440099",
    "end": "442560"
  },
  {
    "text": "greater than the browser's limit then",
    "start": "442560",
    "end": "445199"
  },
  {
    "text": "it's going to crash",
    "start": "445199",
    "end": "447300"
  },
  {
    "text": "so the first thing to do is to verify",
    "start": "447300",
    "end": "449340"
  },
  {
    "text": "the issue so we can use the browser's",
    "start": "449340",
    "end": "451319"
  },
  {
    "text": "profiling Dev tool to get a heap dump",
    "start": "451319",
    "end": "453960"
  },
  {
    "text": "and if you look at the bottom left you",
    "start": "453960",
    "end": "456419"
  },
  {
    "text": "can see a graph of the Heap dump and the",
    "start": "456419",
    "end": "458880"
  },
  {
    "text": "line goes up and to the right so",
    "start": "458880",
    "end": "461400"
  },
  {
    "text": "indicating that there's probably a leak",
    "start": "461400",
    "end": "463080"
  },
  {
    "text": "here",
    "start": "463080",
    "end": "465198"
  },
  {
    "text": "after you've identified the to identify",
    "start": "465419",
    "end": "468000"
  },
  {
    "text": "where the leak is you can use the memory",
    "start": "468000",
    "end": "470220"
  },
  {
    "text": "inspector in your browser's Dev tools to",
    "start": "470220",
    "end": "472740"
  },
  {
    "text": "inspect the contents of the array buffer",
    "start": "472740",
    "end": "474720"
  },
  {
    "text": "at a breakpoint and see what's causing",
    "start": "474720",
    "end": "478500"
  },
  {
    "text": "the problem",
    "start": "478500",
    "end": "480539"
  },
  {
    "text": "okay at this point we've talked a lot",
    "start": "480539",
    "end": "483300"
  },
  {
    "text": "about how to debug issues on our local",
    "start": "483300",
    "end": "485759"
  },
  {
    "text": "machine and I think we have a like our",
    "start": "485759",
    "end": "488340"
  },
  {
    "text": "code in a good state so we should be",
    "start": "488340",
    "end": "490440"
  },
  {
    "text": "thinking about how we're going to get",
    "start": "490440",
    "end": "491699"
  },
  {
    "text": "ready to deploy",
    "start": "491699",
    "end": "493199"
  },
  {
    "text": "and we'll need to generate a release",
    "start": "493199",
    "end": "494759"
  },
  {
    "text": "binary and monitor the release for",
    "start": "494759",
    "end": "496860"
  },
  {
    "text": "errors",
    "start": "496860",
    "end": "498840"
  },
  {
    "text": "but before but let's go back to dwarf if",
    "start": "498840",
    "end": "501300"
  },
  {
    "text": "you recall the dwarf debug data is",
    "start": "501300",
    "end": "503699"
  },
  {
    "text": "embedded right in the was in binary",
    "start": "503699",
    "end": "506160"
  },
  {
    "text": "and it's a problem for two reasons",
    "start": "506160",
    "end": "508620"
  },
  {
    "text": "it allows most like it'll allow you to",
    "start": "508620",
    "end": "511139"
  },
  {
    "text": "easily decompile your code and most",
    "start": "511139",
    "end": "513539"
  },
  {
    "text": "people won't want that",
    "start": "513539",
    "end": "515159"
  },
  {
    "text": "and even if you're a big fan of Open",
    "start": "515159",
    "end": "517200"
  },
  {
    "text": "Source",
    "start": "517200",
    "end": "518279"
  },
  {
    "text": "this debug data is quite big",
    "start": "518279",
    "end": "521039"
  },
  {
    "text": "it's going to be like an order of",
    "start": "521039",
    "end": "522419"
  },
  {
    "text": "magnitude larger than the actual binary",
    "start": "522419",
    "end": "526640"
  },
  {
    "text": "and",
    "start": "527160",
    "end": "529560"
  },
  {
    "text": "you can split out the wasm file into the",
    "start": "529560",
    "end": "531899"
  },
  {
    "text": "code and debug data",
    "start": "531899",
    "end": "533899"
  },
  {
    "text": "it's totally possible the debug data can",
    "start": "533899",
    "end": "536700"
  },
  {
    "text": "live in a non-executable non-functional",
    "start": "536700",
    "end": "538800"
  },
  {
    "text": "was on file that only contains the debug",
    "start": "538800",
    "end": "541200"
  },
  {
    "text": "information",
    "start": "541200",
    "end": "542519"
  },
  {
    "text": "the problem is that after splitting out",
    "start": "542519",
    "end": "544680"
  },
  {
    "text": "those two things it's difficult to put",
    "start": "544680",
    "end": "547380"
  },
  {
    "text": "them back together",
    "start": "547380",
    "end": "549240"
  },
  {
    "text": "or like link them you know",
    "start": "549240",
    "end": "551820"
  },
  {
    "text": "an idea popularized by both apple and",
    "start": "551820",
    "end": "554519"
  },
  {
    "text": "Microsoft was giving debug uh an",
    "start": "554519",
    "end": "557519"
  },
  {
    "text": "executable files globally unique debug",
    "start": "557519",
    "end": "560399"
  },
  {
    "text": "IDs and with that ID you can link the",
    "start": "560399",
    "end": "563040"
  },
  {
    "text": "debug file and the binary",
    "start": "563040",
    "end": "565260"
  },
  {
    "text": "together",
    "start": "565260",
    "end": "566820"
  },
  {
    "text": "this proposal was raised by a century",
    "start": "566820",
    "end": "569220"
  },
  {
    "text": "team member actually Armin and was just",
    "start": "569220",
    "end": "572220"
  },
  {
    "text": "merged in three weeks ago and Century",
    "start": "572220",
    "end": "574680"
  },
  {
    "text": "has built some tooling around this like",
    "start": "574680",
    "end": "576480"
  },
  {
    "text": "three years ago",
    "start": "576480",
    "end": "578760"
  },
  {
    "text": "but first what century I know a couple",
    "start": "578760",
    "end": "581220"
  },
  {
    "text": "of you in the room use Century but for",
    "start": "581220",
    "end": "583260"
  },
  {
    "text": "those of you who don't it's an error",
    "start": "583260",
    "end": "585959"
  },
  {
    "text": "monitoring application performance",
    "start": "585959",
    "end": "587760"
  },
  {
    "text": "monitoring and session replay tool it's",
    "start": "587760",
    "end": "590160"
  },
  {
    "text": "open source it's really easy to sell",
    "start": "590160",
    "end": "592380"
  },
  {
    "text": "post you can spin up a VM and run the",
    "start": "592380",
    "end": "594600"
  },
  {
    "text": "install script super easy and we have",
    "start": "594600",
    "end": "597660"
  },
  {
    "text": "sdks for lots of languages including",
    "start": "597660",
    "end": "599580"
  },
  {
    "text": "wazo",
    "start": "599580",
    "end": "601560"
  },
  {
    "text": "so the tool that essentially built will",
    "start": "601560",
    "end": "604260"
  },
  {
    "text": "split out the dwarf information",
    "start": "604260",
    "end": "606300"
  },
  {
    "text": "uh into a server file and strip it from",
    "start": "606300",
    "end": "608820"
  },
  {
    "text": "the wasm uh like from your release file",
    "start": "608820",
    "end": "611040"
  },
  {
    "text": "so generating two files right like your",
    "start": "611040",
    "end": "612959"
  },
  {
    "text": "debug file and the actual release binary",
    "start": "612959",
    "end": "616680"
  },
  {
    "text": "the tool will also add in a custom",
    "start": "616680",
    "end": "619019"
  },
  {
    "text": "header called build ID into the wasm",
    "start": "619019",
    "end": "621360"
  },
  {
    "text": "files with the uuid and you're left with",
    "start": "621360",
    "end": "624740"
  },
  {
    "text": "and this header you can use to link",
    "start": "624740",
    "end": "628140"
  },
  {
    "text": "those two files together",
    "start": "628140",
    "end": "630839"
  },
  {
    "text": "so as part of your CI CD pipeline you're",
    "start": "630839",
    "end": "634019"
  },
  {
    "text": "going to want to upload that uh those",
    "start": "634019",
    "end": "636779"
  },
  {
    "text": "debug files from walls and split and the",
    "start": "636779",
    "end": "638640"
  },
  {
    "text": "source Maps and then Center is able to",
    "start": "638640",
    "end": "641480"
  },
  {
    "text": "enrich the captured exceptions",
    "start": "641480",
    "end": "645060"
  },
  {
    "text": "from production",
    "start": "645060",
    "end": "647220"
  },
  {
    "text": "and once we deploy our application we're",
    "start": "647220",
    "end": "649380"
  },
  {
    "text": "going to want to monitor those",
    "start": "649380",
    "end": "650339"
  },
  {
    "text": "exceptions that our users face and then",
    "start": "650339",
    "end": "652740"
  },
  {
    "text": "resolve them using the tools that we",
    "start": "652740",
    "end": "654480"
  },
  {
    "text": "just discussed",
    "start": "654480",
    "end": "656700"
  },
  {
    "text": "thanks for listening to my talk",
    "start": "656700",
    "end": "658910"
  },
  {
    "text": "[Applause]",
    "start": "658910",
    "end": "668880"
  },
  {
    "text": "any questions",
    "start": "668880",
    "end": "671420"
  },
  {
    "text": "thanks for the talk my question is that",
    "start": "676680",
    "end": "680279"
  },
  {
    "text": "seemed very awesome browser-centric did",
    "start": "680279",
    "end": "683339"
  },
  {
    "text": "I kind of get that wrong",
    "start": "683339",
    "end": "684920"
  },
  {
    "text": "what about doing some debugging of",
    "start": "684920",
    "end": "688380"
  },
  {
    "text": "non-browser or web assembly applications",
    "start": "688380",
    "end": "691860"
  },
  {
    "text": "so you can use the webassembly binary",
    "start": "691860",
    "end": "694920"
  },
  {
    "text": "toolkit uh for that so The Interpreter",
    "start": "694920",
    "end": "698640"
  },
  {
    "text": "works with the binary like that you'd",
    "start": "698640",
    "end": "700980"
  },
  {
    "text": "use on like awesome time stuff like that",
    "start": "700980",
    "end": "704339"
  },
  {
    "text": "or like the Wazi runtime uh",
    "start": "704339",
    "end": "708000"
  },
  {
    "text": "yeah like that portion is probably like",
    "start": "708000",
    "end": "710399"
  },
  {
    "text": "your best bet right now uh but the most",
    "start": "710399",
    "end": "713940"
  },
  {
    "text": "well supported tooling is for the",
    "start": "713940",
    "end": "715860"
  },
  {
    "text": "browser because that makes sense because",
    "start": "715860",
    "end": "718079"
  },
  {
    "text": "that's where it originally started right",
    "start": "718079",
    "end": "721100"
  },
  {
    "text": "uh but yeah the tooling is pretty",
    "start": "721100",
    "end": "723600"
  },
  {
    "text": "lacking for server side",
    "start": "723600",
    "end": "726240"
  },
  {
    "text": "but once you capture exceptions in",
    "start": "726240",
    "end": "729420"
  },
  {
    "text": "Sentry we actually show you the stock",
    "start": "729420",
    "end": "731399"
  },
  {
    "text": "trace and all that stuff so it's",
    "start": "731399",
    "end": "733380"
  },
  {
    "text": "actually pretty decent like at least on",
    "start": "733380",
    "end": "735420"
  },
  {
    "text": "our side yeah",
    "start": "735420",
    "end": "738440"
  },
  {
    "text": "anything else",
    "start": "740760",
    "end": "743540"
  },
  {
    "text": "cool",
    "start": "748860",
    "end": "751279"
  },
  {
    "text": "okay thank you",
    "start": "756360",
    "end": "758100"
  },
  {
    "text": "[Applause]",
    "start": "758100",
    "end": "764350"
  }
]