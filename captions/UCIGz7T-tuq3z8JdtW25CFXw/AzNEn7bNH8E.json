[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "foreign",
    "start": "599",
    "end": "3599"
  },
  {
    "text": "thank you and uh hola was Amigos thank",
    "start": "7340",
    "end": "11340"
  },
  {
    "text": "you so much and by the way that should",
    "start": "11340",
    "end": "14400"
  },
  {
    "text": "be obviously what we call ourselves",
    "start": "14400",
    "end": "16020"
  },
  {
    "text": "right",
    "start": "16020",
    "end": "16859"
  },
  {
    "text": "like that's so much better than a lot of",
    "start": "16859",
    "end": "18840"
  },
  {
    "text": "other things I've heard and wasm is not",
    "start": "18840",
    "end": "20880"
  },
  {
    "text": "a very easy word to string against uh",
    "start": "20880",
    "end": "23279"
  },
  {
    "text": "other things but thank you very much for",
    "start": "23279",
    "end": "25800"
  },
  {
    "text": "having me uh this is just such an",
    "start": "25800",
    "end": "28260"
  },
  {
    "text": "amazing event all of you are doing just",
    "start": "28260",
    "end": "31520"
  },
  {
    "text": "ridiculous things with one of the",
    "start": "31520",
    "end": "34940"
  },
  {
    "text": "hardest technologies that I've ever",
    "start": "34940",
    "end": "37920"
  },
  {
    "text": "worked with and that people making it",
    "start": "37920",
    "end": "39660"
  },
  {
    "text": "better people doing just absolutely",
    "start": "39660",
    "end": "41399"
  },
  {
    "text": "amazing things with it now none of you",
    "start": "41399",
    "end": "44219"
  },
  {
    "text": "are boring and this is awesome awesome",
    "start": "44219",
    "end": "46559"
  },
  {
    "text": "to be here it's awesome to have this",
    "start": "46559",
    "end": "48000"
  },
  {
    "text": "conference I'm really really happy to be",
    "start": "48000",
    "end": "50399"
  },
  {
    "text": "here so I am Jared overson I've been",
    "start": "50399",
    "end": "53760"
  },
  {
    "text": "doing web stuff for",
    "start": "53760",
    "end": "56160"
  },
  {
    "text": "since the web was invented uh seeing a",
    "start": "56160",
    "end": "59820"
  },
  {
    "text": "lot of progress there uh been a on the",
    "start": "59820",
    "end": "63059"
  },
  {
    "text": "security side on both on the attacker",
    "start": "63059",
    "end": "64619"
  },
  {
    "text": "and Defender side I'm currently CTO",
    "start": "64619",
    "end": "66900"
  },
  {
    "text": "working at Candle we're building a",
    "start": "66900",
    "end": "69720"
  },
  {
    "text": "reactive streaming framework to compose",
    "start": "69720",
    "end": "71760"
  },
  {
    "text": "a functional uh web assembly components",
    "start": "71760",
    "end": "75479"
  },
  {
    "text": "together I used to work at Napster if",
    "start": "75479",
    "end": "77939"
  },
  {
    "text": "anyone remembers that Riot games shape",
    "start": "77939",
    "end": "79920"
  },
  {
    "text": "security uh and I usually look like that",
    "start": "79920",
    "end": "82799"
  },
  {
    "text": "up there uh at least I used to",
    "start": "82799",
    "end": "87060"
  },
  {
    "start": "87000",
    "end": "106000"
  },
  {
    "text": "uh so before I get into the reactive",
    "start": "87060",
    "end": "89280"
  },
  {
    "text": "streams I want to talk a little bit",
    "start": "89280",
    "end": "90659"
  },
  {
    "text": "about how applications evolve and",
    "start": "90659",
    "end": "92460"
  },
  {
    "text": "applications are like flowers they",
    "start": "92460",
    "end": "94500"
  },
  {
    "text": "always grow towards the sun where the",
    "start": "94500",
    "end": "97979"
  },
  {
    "text": "sun is a asynchronous fault tolerant",
    "start": "97979",
    "end": "100259"
  },
  {
    "text": "handling of uh distributed arbitrary",
    "start": "100259",
    "end": "102840"
  },
  {
    "text": "unpredictable size data",
    "start": "102840",
    "end": "104880"
  },
  {
    "text": "and I'm not sure if any of you have seen",
    "start": "104880",
    "end": "107700"
  },
  {
    "start": "106000",
    "end": "149000"
  },
  {
    "text": "a matrix or table like this but this is",
    "start": "107700",
    "end": "110100"
  },
  {
    "text": "how things are described to people",
    "start": "110100",
    "end": "112079"
  },
  {
    "text": "getting into programming now everyone",
    "start": "112079",
    "end": "114540"
  },
  {
    "text": "learns about the function they leave the",
    "start": "114540",
    "end": "116460"
  },
  {
    "text": "core reusable building block uh that you",
    "start": "116460",
    "end": "119159"
  },
  {
    "text": "can make applications out of but then",
    "start": "119159",
    "end": "121320"
  },
  {
    "text": "trying to talk about Futures promises",
    "start": "121320",
    "end": "122880"
  },
  {
    "text": "streams of verbals whatever else becomes",
    "start": "122880",
    "end": "125040"
  },
  {
    "text": "a little bit confusing I see you mash it",
    "start": "125040",
    "end": "127020"
  },
  {
    "text": "up in this table to give a little bit",
    "start": "127020",
    "end": "128280"
  },
  {
    "text": "more context where an iterator is a",
    "start": "128280",
    "end": "131520"
  },
  {
    "text": "function that produces multiple values",
    "start": "131520",
    "end": "133560"
  },
  {
    "text": "and a future or promise is a function",
    "start": "133560",
    "end": "137640"
  },
  {
    "text": "that will eventually give you your data",
    "start": "137640",
    "end": "139920"
  },
  {
    "text": "and a stream observable or event-based",
    "start": "139920",
    "end": "142440"
  },
  {
    "text": "system is kind of a mashup of both where",
    "start": "142440",
    "end": "144840"
  },
  {
    "text": "you eventually get a bunch of data bring",
    "start": "144840",
    "end": "148140"
  },
  {
    "text": "this up because uh code naturally Moves",
    "start": "148140",
    "end": "151860"
  },
  {
    "text": "In One Direction",
    "start": "151860",
    "end": "153599"
  },
  {
    "text": "you can turn a function into an iterator",
    "start": "153599",
    "end": "155700"
  },
  {
    "text": "that returns one value you can turn a",
    "start": "155700",
    "end": "157860"
  },
  {
    "text": "function into an asynchronous function",
    "start": "157860",
    "end": "160080"
  },
  {
    "text": "that produces a value eventually but",
    "start": "160080",
    "end": "163200"
  },
  {
    "text": "code resists moving the other direction",
    "start": "163200",
    "end": "166860"
  },
  {
    "text": "it's not uh very straightforward in a",
    "start": "166860",
    "end": "170220"
  },
  {
    "text": "lot of languages to turn asynchronous",
    "start": "170220",
    "end": "172500"
  },
  {
    "text": "streaming stuff back into just",
    "start": "172500",
    "end": "174540"
  },
  {
    "text": "synchronous single value things a lot of",
    "start": "174540",
    "end": "176819"
  },
  {
    "text": "times you can't so when I say",
    "start": "176819",
    "end": "178620"
  },
  {
    "text": "applications uh grow towards the sun the",
    "start": "178620",
    "end": "181500"
  },
  {
    "text": "sun is eventually at least asynchronous",
    "start": "181500",
    "end": "184920"
  },
  {
    "text": "if not heavily streaming based which is",
    "start": "184920",
    "end": "187980"
  },
  {
    "text": "tough in the webassembly world because",
    "start": "187980",
    "end": "189420"
  },
  {
    "text": "we don't really have much of that at all",
    "start": "189420",
    "end": "191580"
  },
  {
    "text": "by default unless you go through uh",
    "start": "191580",
    "end": "193980"
  },
  {
    "text": "using some magic that people are making",
    "start": "193980",
    "end": "197220"
  },
  {
    "text": "eventually we'll get there and I'm very",
    "start": "197220",
    "end": "199080"
  },
  {
    "text": "very optimistic right now it's uh it's a",
    "start": "199080",
    "end": "201300"
  },
  {
    "text": "little bit difficult",
    "start": "201300",
    "end": "202980"
  },
  {
    "text": "so we've been working a lot on making",
    "start": "202980",
    "end": "206519"
  },
  {
    "start": "203000",
    "end": "256000"
  },
  {
    "text": "streams uh very very rich and usable in",
    "start": "206519",
    "end": "210780"
  },
  {
    "text": "webassembly because our platform is",
    "start": "210780",
    "end": "212700"
  },
  {
    "text": "heavily aggressively based on streaming",
    "start": "212700",
    "end": "215819"
  },
  {
    "text": "and we've been",
    "start": "215819",
    "end": "218099"
  },
  {
    "text": "pushing very very far running into",
    "start": "218099",
    "end": "220140"
  },
  {
    "text": "hurdles solving those hurdles for a few",
    "start": "220140",
    "end": "222360"
  },
  {
    "text": "years now",
    "start": "222360",
    "end": "223319"
  },
  {
    "text": "so asmrs is what I'm talking about right",
    "start": "223319",
    "end": "225900"
  },
  {
    "text": "now and for those of you who know wasm",
    "start": "225900",
    "end": "228360"
  },
  {
    "text": "RS by a different name this is a",
    "start": "228360",
    "end": "229680"
  },
  {
    "text": "different wasm RS wasm reactive streams",
    "start": "229680",
    "end": "232580"
  },
  {
    "text": "this is mashing up a lot of our socket",
    "start": "232580",
    "end": "235920"
  },
  {
    "text": "ideas inside a web assembly context so",
    "start": "235920",
    "end": "238860"
  },
  {
    "text": "you can essentially open up a socket",
    "start": "238860",
    "end": "241680"
  },
  {
    "text": "into webassembly and treat it just like",
    "start": "241680",
    "end": "244860"
  },
  {
    "text": "a server and you can you can mash up a",
    "start": "244860",
    "end": "247260"
  },
  {
    "text": "bunch of these webassembly modules",
    "start": "247260",
    "end": "248459"
  },
  {
    "text": "together pipe streams from one to",
    "start": "248459",
    "end": "250019"
  },
  {
    "text": "another and get a lot of fancy cool",
    "start": "250019",
    "end": "253680"
  },
  {
    "text": "stuff out of it",
    "start": "253680",
    "end": "256400"
  },
  {
    "start": "256000",
    "end": "337000"
  },
  {
    "text": "so the path we took to get to asmrs",
    "start": "256739",
    "end": "259260"
  },
  {
    "text": "progressed over the course of many years",
    "start": "259260",
    "end": "261540"
  },
  {
    "text": "trying to do useful things with",
    "start": "261540",
    "end": "263220"
  },
  {
    "text": "webassembly I started off with a project",
    "start": "263220",
    "end": "266520"
  },
  {
    "text": "called WAP EC which uh it was originally",
    "start": "266520",
    "end": "269100"
  },
  {
    "text": "started by a Kevin Hoffman and Phil",
    "start": "269100",
    "end": "270900"
  },
  {
    "text": "Keddy",
    "start": "270900",
    "end": "272280"
  },
  {
    "text": "um it's a way to to just kind of use",
    "start": "272280",
    "end": "275639"
  },
  {
    "text": "webassembly as a component model now",
    "start": "275639",
    "end": "277680"
  },
  {
    "text": "xdism is new and hot wappy C did similar",
    "start": "277680",
    "end": "280500"
  },
  {
    "text": "things a while ago uh across language",
    "start": "280500",
    "end": "284040"
  },
  {
    "text": "way of a cross-language protocol for",
    "start": "284040",
    "end": "287580"
  },
  {
    "text": "building webassembly that you can call",
    "start": "287580",
    "end": "289560"
  },
  {
    "text": "easily in and out of with Rich data so",
    "start": "289560",
    "end": "292020"
  },
  {
    "text": "you weren't just dealing with numbers",
    "start": "292020",
    "end": "293880"
  },
  {
    "text": "then progress to async ypc which is a",
    "start": "293880",
    "end": "297060"
  },
  {
    "text": "way to do that with uh asynchronous",
    "start": "297060",
    "end": "299040"
  },
  {
    "text": "calls back and forth in and out of the",
    "start": "299040",
    "end": "301740"
  },
  {
    "text": "web assembly and then async wapping C",
    "start": "301740",
    "end": "304860"
  },
  {
    "text": "plus basic streams which worked well",
    "start": "304860",
    "end": "307080"
  },
  {
    "text": "until we reached the limit of what basic",
    "start": "307080",
    "end": "308880"
  },
  {
    "text": "streams would provide us and now we're",
    "start": "308880",
    "end": "311220"
  },
  {
    "text": "finally at wasm RS which I want to give",
    "start": "311220",
    "end": "314340"
  },
  {
    "text": "full credit to Phil Ketty for first uh",
    "start": "314340",
    "end": "316979"
  },
  {
    "text": "having the idea of leveraging our socket",
    "start": "316979",
    "end": "319500"
  },
  {
    "text": "as the protocol and framing mechanism",
    "start": "319500",
    "end": "322139"
  },
  {
    "text": "for getting streams into webassembly we",
    "start": "322139",
    "end": "325740"
  },
  {
    "text": "looked at a few others and our socket",
    "start": "325740",
    "end": "328199"
  },
  {
    "text": "was a good combination of code that",
    "start": "328199",
    "end": "329820"
  },
  {
    "text": "existed good documentation and low",
    "start": "329820",
    "end": "332220"
  },
  {
    "text": "enough level for us to do the things",
    "start": "332220",
    "end": "334440"
  },
  {
    "text": "that we wanted to do with webassembly",
    "start": "334440",
    "end": "338039"
  },
  {
    "start": "337000",
    "end": "390000"
  },
  {
    "text": "so that starts off with a protocol",
    "start": "338039",
    "end": "340440"
  },
  {
    "text": "methods in and outside of webassembly uh",
    "start": "340440",
    "end": "343380"
  },
  {
    "text": "starts off with a host uh initiating",
    "start": "343380",
    "end": "345960"
  },
  {
    "text": "your call to webassembly saying hey make",
    "start": "345960",
    "end": "348120"
  },
  {
    "text": "these two buffers this size this is the",
    "start": "348120",
    "end": "349979"
  },
  {
    "text": "maximum length that I want you to accept",
    "start": "349979",
    "end": "352039"
  },
  {
    "text": "webassembly calls back says all right",
    "start": "352039",
    "end": "354419"
  },
  {
    "text": "these are my buffers uh",
    "start": "354419",
    "end": "356699"
  },
  {
    "text": "move on",
    "start": "356699",
    "end": "358800"
  },
  {
    "text": "second core protocol method uh it's just",
    "start": "358800",
    "end": "361139"
  },
  {
    "text": "send method each respective side writes",
    "start": "361139",
    "end": "365039"
  },
  {
    "text": "frames to their buffer calls their",
    "start": "365039",
    "end": "366900"
  },
  {
    "text": "respective send that's it that's the",
    "start": "366900",
    "end": "369419"
  },
  {
    "text": "that's the core bit of the protocol",
    "start": "369419",
    "end": "371280"
  },
  {
    "text": "there is another method to map index",
    "start": "371280",
    "end": "375060"
  },
  {
    "text": "operation names to indexes",
    "start": "375060",
    "end": "378199"
  },
  {
    "text": "to make it a little bit faster to",
    "start": "378199",
    "end": "380580"
  },
  {
    "text": "execute but the core of it is just",
    "start": "380580",
    "end": "382259"
  },
  {
    "text": "initialization and these send methods",
    "start": "382259",
    "end": "384419"
  },
  {
    "text": "which means that a lot of the complexity",
    "start": "384419",
    "end": "386160"
  },
  {
    "text": "is deferred to the framing",
    "start": "386160",
    "end": "390300"
  },
  {
    "start": "390000",
    "end": "410000"
  },
  {
    "text": "so our socket frames about what a dozen",
    "start": "390300",
    "end": "393600"
  },
  {
    "text": "and a half there or something like that",
    "start": "393600",
    "end": "394860"
  },
  {
    "text": "uh",
    "start": "394860",
    "end": "396360"
  },
  {
    "text": "these are the r socket frames that are",
    "start": "396360",
    "end": "399419"
  },
  {
    "text": "socket describes for network streaming",
    "start": "399419",
    "end": "402539"
  },
  {
    "text": "bi-directional network streaming over",
    "start": "402539",
    "end": "404400"
  },
  {
    "text": "TCP and uh whatever else you implement I",
    "start": "404400",
    "end": "408000"
  },
  {
    "text": "don't need all of those for webassembly",
    "start": "408000",
    "end": "409740"
  },
  {
    "text": "so these are the ones that we uh we've",
    "start": "409740",
    "end": "414120"
  },
  {
    "start": "410000",
    "end": "444000"
  },
  {
    "text": "implemented in wazm RS and both a go and",
    "start": "414120",
    "end": "417960"
  },
  {
    "text": "rust implementations uh we've left the",
    "start": "417960",
    "end": "421319"
  },
  {
    "text": "network the ones that were more",
    "start": "421319",
    "end": "423000"
  },
  {
    "text": "important for Network stuff uh off to",
    "start": "423000",
    "end": "425220"
  },
  {
    "text": "the side",
    "start": "425220",
    "end": "427020"
  },
  {
    "text": "so these are data structures uh that you",
    "start": "427020",
    "end": "429780"
  },
  {
    "text": "build and uh and go into binary right to",
    "start": "429780",
    "end": "432240"
  },
  {
    "text": "the buffers call your send method and",
    "start": "432240",
    "end": "434220"
  },
  {
    "text": "then the other side reads up until the",
    "start": "434220",
    "end": "436560"
  },
  {
    "text": "point that uh that that is that",
    "start": "436560",
    "end": "438960"
  },
  {
    "text": "prescribed and uh decodes the frames and",
    "start": "438960",
    "end": "441900"
  },
  {
    "text": "does whatever magic it needs to do",
    "start": "441900",
    "end": "444780"
  },
  {
    "start": "444000",
    "end": "465000"
  },
  {
    "text": "so the core the four core frames that",
    "start": "444780",
    "end": "447599"
  },
  {
    "text": "initiate operations are the request",
    "start": "447599",
    "end": "448979"
  },
  {
    "text": "frames request response which is a frame",
    "start": "448979",
    "end": "452580"
  },
  {
    "text": "that initiates an asynchronous operation",
    "start": "452580",
    "end": "454560"
  },
  {
    "text": "that takes in a single set of payload a",
    "start": "454560",
    "end": "456780"
  },
  {
    "text": "single set of arguments a payload and",
    "start": "456780",
    "end": "459300"
  },
  {
    "text": "then returns an asynchronous payload",
    "start": "459300",
    "end": "461520"
  },
  {
    "text": "back it's basically just an asynchronous",
    "start": "461520",
    "end": "463259"
  },
  {
    "text": "operation",
    "start": "463259",
    "end": "465060"
  },
  {
    "start": "465000",
    "end": "492000"
  },
  {
    "text": "request fire and forget takes a single",
    "start": "465060",
    "end": "467880"
  },
  {
    "text": "set of arguments a payload and gives you",
    "start": "467880",
    "end": "470460"
  },
  {
    "text": "nothing back it's useful for like",
    "start": "470460",
    "end": "472740"
  },
  {
    "text": "Telemetry or or operations that have",
    "start": "472740",
    "end": "475440"
  },
  {
    "text": "side effects where the return value",
    "start": "475440",
    "end": "476819"
  },
  {
    "text": "isn't important",
    "start": "476819",
    "end": "479039"
  },
  {
    "text": "request stream takes a single set of",
    "start": "479039",
    "end": "481380"
  },
  {
    "text": "arguments or payload and returns a",
    "start": "481380",
    "end": "483180"
  },
  {
    "text": "stream back and request Channel takes in",
    "start": "483180",
    "end": "486539"
  },
  {
    "text": "a stream and an optional set of",
    "start": "486539",
    "end": "488340"
  },
  {
    "text": "arguments and returns a stream back",
    "start": "488340",
    "end": "492380"
  },
  {
    "text": "the descriptions are a little bit",
    "start": "493500",
    "end": "496280"
  },
  {
    "text": "esoteric this is what it would look like",
    "start": "496280",
    "end": "499259"
  },
  {
    "text": "in code if you were to",
    "start": "499259",
    "end": "501979"
  },
  {
    "text": "abstract away this framing concept and",
    "start": "501979",
    "end": "504780"
  },
  {
    "text": "provide an interface to users that they",
    "start": "504780",
    "end": "506400"
  },
  {
    "text": "would actually want to use request",
    "start": "506400",
    "end": "508139"
  },
  {
    "text": "response which is just a simple function",
    "start": "508139",
    "end": "509699"
  },
  {
    "text": "returns a promise fire and forget",
    "start": "509699",
    "end": "511560"
  },
  {
    "text": "function returns nothing and the other",
    "start": "511560",
    "end": "513479"
  },
  {
    "text": "two are uh to deal with streams",
    "start": "513479",
    "end": "518099"
  },
  {
    "text": "so with uh with rust this is uh similar",
    "start": "518099",
    "end": "520740"
  },
  {
    "text": "to what you get in go we don't have as",
    "start": "520740",
    "end": "523680"
  },
  {
    "text": "much control over the execution so we",
    "start": "523680",
    "end": "525959"
  },
  {
    "text": "use the like observable data structures",
    "start": "525959",
    "end": "529680"
  },
  {
    "text": "like flux mono observables things like",
    "start": "529680",
    "end": "532320"
  },
  {
    "text": "that to give you the ability to write",
    "start": "532320",
    "end": "535260"
  },
  {
    "text": "your code in a way that handles the",
    "start": "535260",
    "end": "538019"
  },
  {
    "text": "asynchronous nature of streams without",
    "start": "538019",
    "end": "539940"
  },
  {
    "text": "having full control over the the",
    "start": "539940",
    "end": "542100"
  },
  {
    "text": "executor",
    "start": "542100",
    "end": "544380"
  },
  {
    "start": "543000",
    "end": "648000"
  },
  {
    "text": "other frames that are important uh error",
    "start": "544380",
    "end": "546480"
  },
  {
    "text": "frame sends an error code and a message",
    "start": "546480",
    "end": "547920"
  },
  {
    "text": "so this is this can be sent in in",
    "start": "547920",
    "end": "553860"
  },
  {
    "text": "as an alternate to a payload so for",
    "start": "553860",
    "end": "556260"
  },
  {
    "text": "every value that comes back it can",
    "start": "556260",
    "end": "558240"
  },
  {
    "text": "either be an error frame or a payload",
    "start": "558240",
    "end": "560220"
  },
  {
    "text": "frame for those who play with rust or",
    "start": "560220",
    "end": "562680"
  },
  {
    "text": "have used best practices and go this is",
    "start": "562680",
    "end": "565440"
  },
  {
    "text": "similar to like your result pattern you",
    "start": "565440",
    "end": "567180"
  },
  {
    "text": "either get a success value or an error",
    "start": "567180",
    "end": "569160"
  },
  {
    "text": "value which means that these streams by",
    "start": "569160",
    "end": "571440"
  },
  {
    "text": "default give you the tools necessary to",
    "start": "571440",
    "end": "574680"
  },
  {
    "text": "make better decisions about what's going",
    "start": "574680",
    "end": "576959"
  },
  {
    "text": "on",
    "start": "576959",
    "end": "577920"
  },
  {
    "text": "uh request n uh there's a frame that you",
    "start": "577920",
    "end": "580980"
  },
  {
    "text": "would send back after a stream has been",
    "start": "580980",
    "end": "583019"
  },
  {
    "text": "initiated to request an N number of",
    "start": "583019",
    "end": "586019"
  },
  {
    "text": "frames by default it's coded to uh have",
    "start": "586019",
    "end": "589019"
  },
  {
    "text": "Max n so your stream is just going to be",
    "start": "589019",
    "end": "591000"
  },
  {
    "text": "a fire hose of data down but you can",
    "start": "591000",
    "end": "592740"
  },
  {
    "text": "configure that to be programmatically",
    "start": "592740",
    "end": "595680"
  },
  {
    "text": "defined so you can tell streams to back",
    "start": "595680",
    "end": "598560"
  },
  {
    "text": "off hold on until you're ready for more",
    "start": "598560",
    "end": "600720"
  },
  {
    "text": "frames or whatever you want cancel frame",
    "start": "600720",
    "end": "603540"
  },
  {
    "text": "cancels the stream gracefully and a",
    "start": "603540",
    "end": "605880"
  },
  {
    "text": "payload frame contains the same sort of",
    "start": "605880",
    "end": "608040"
  },
  {
    "text": "payload data as the request initiation",
    "start": "608040",
    "end": "610200"
  },
  {
    "text": "frames but is used to send it doesn't",
    "start": "610200",
    "end": "612959"
  },
  {
    "text": "initiator operation so it's used to send",
    "start": "612959",
    "end": "614880"
  },
  {
    "text": "additional payloads in a stream or",
    "start": "614880",
    "end": "617459"
  },
  {
    "text": "additional fragments of a larger payload",
    "start": "617459",
    "end": "619380"
  },
  {
    "text": "something like that and payload frames",
    "start": "619380",
    "end": "622320"
  },
  {
    "text": "and the request operation frames also",
    "start": "622320",
    "end": "624600"
  },
  {
    "text": "include the concept of metadata which is",
    "start": "624600",
    "end": "626459"
  },
  {
    "text": "optional by default but these things are",
    "start": "626459",
    "end": "628980"
  },
  {
    "text": "important to have defined in uh in in a",
    "start": "628980",
    "end": "633779"
  },
  {
    "text": "in a spec in an implementation because",
    "start": "633779",
    "end": "635959"
  },
  {
    "text": "at some point",
    "start": "635959",
    "end": "637920"
  },
  {
    "text": "things will need to be extended and",
    "start": "637920",
    "end": "639959"
  },
  {
    "text": "having a place where it's ready to be",
    "start": "639959",
    "end": "642240"
  },
  {
    "text": "extended is valuable because you don't",
    "start": "642240",
    "end": "644160"
  },
  {
    "text": "have to break anything when you need to",
    "start": "644160",
    "end": "645720"
  },
  {
    "text": "change something",
    "start": "645720",
    "end": "648139"
  },
  {
    "start": "648000",
    "end": "745000"
  },
  {
    "text": "so anyone who's used uh wattpc one of",
    "start": "648959",
    "end": "651480"
  },
  {
    "text": "the things that I I liked about it and",
    "start": "651480",
    "end": "652860"
  },
  {
    "text": "why I got uh started uh uh contributing",
    "start": "652860",
    "end": "656339"
  },
  {
    "text": "back to it back in the day was that it",
    "start": "656339",
    "end": "657720"
  },
  {
    "text": "was it was very much a layered set of",
    "start": "657720",
    "end": "659880"
  },
  {
    "text": "Technologies you could jump into it and",
    "start": "659880",
    "end": "662160"
  },
  {
    "text": "you can pick and choose what you wanted",
    "start": "662160",
    "end": "663420"
  },
  {
    "text": "and make it work the way that you wanted",
    "start": "663420",
    "end": "665160"
  },
  {
    "text": "so we built wasm RS in very much the",
    "start": "665160",
    "end": "668339"
  },
  {
    "text": "same way where you have these layers",
    "start": "668339",
    "end": "670459"
  },
  {
    "text": "that you can pick and choose from so at",
    "start": "670459",
    "end": "673620"
  },
  {
    "text": "the top you have the wasmos the the",
    "start": "673620",
    "end": "675300"
  },
  {
    "text": "protocol methods which at their core is",
    "start": "675300",
    "end": "677760"
  },
  {
    "text": "just a way of of uh describing chunks of",
    "start": "677760",
    "end": "681120"
  },
  {
    "text": "data uh in a contract that both sides",
    "start": "681120",
    "end": "684660"
  },
  {
    "text": "can read and write from uh that you",
    "start": "684660",
    "end": "687959"
  },
  {
    "text": "could easily just take that and",
    "start": "687959",
    "end": "689640"
  },
  {
    "text": "Implement your own sort of framing",
    "start": "689640",
    "end": "691019"
  },
  {
    "text": "mechanism uh or whatever you want uh",
    "start": "691019",
    "end": "693779"
  },
  {
    "text": "then you have the r socket frames which",
    "start": "693779",
    "end": "695459"
  },
  {
    "text": "you can use uh at their core and don't",
    "start": "695459",
    "end": "698040"
  },
  {
    "text": "need to deal with any of the wasm RS",
    "start": "698040",
    "end": "700019"
  },
  {
    "text": "specific metadata or implementations and",
    "start": "700019",
    "end": "704220"
  },
  {
    "text": "then you have the wasmos metadata which",
    "start": "704220",
    "end": "706260"
  },
  {
    "text": "allows you to have the multiple",
    "start": "706260",
    "end": "707459"
  },
  {
    "text": "operations within the the",
    "start": "707459",
    "end": "710360"
  },
  {
    "text": "webassembly module some other",
    "start": "710360",
    "end": "712860"
  },
  {
    "text": "optimizations and then below that if you",
    "start": "712860",
    "end": "716279"
  },
  {
    "text": "if you wanted to jump into asmrs right",
    "start": "716279",
    "end": "718380"
  },
  {
    "text": "now you still have spots to add your own",
    "start": "718380",
    "end": "720839"
  },
  {
    "text": "extensibility and encoders decoders",
    "start": "720839",
    "end": "723839"
  },
  {
    "text": "whatever you want uh the the way that",
    "start": "723839",
    "end": "727560"
  },
  {
    "text": "you could jump in right now we have some",
    "start": "727560",
    "end": "729600"
  },
  {
    "text": "code generators in both like a rust code",
    "start": "729600",
    "end": "733140"
  },
  {
    "text": "generator build step and Apex code",
    "start": "733140",
    "end": "735360"
  },
  {
    "text": "generators which use message pack to uh",
    "start": "735360",
    "end": "738420"
  },
  {
    "text": "to broker complex data back and forth",
    "start": "738420",
    "end": "740339"
  },
  {
    "text": "but again that is also plugable you can",
    "start": "740339",
    "end": "742200"
  },
  {
    "text": "do whatever you want to with it",
    "start": "742200",
    "end": "745640"
  },
  {
    "start": "745000",
    "end": "830000"
  },
  {
    "text": "so extending uh wasm RS",
    "start": "746519",
    "end": "750779"
  },
  {
    "text": "uh that so asmrs is the is the",
    "start": "750779",
    "end": "753600"
  },
  {
    "text": "unipinuated protocol implementation that",
    "start": "753600",
    "end": "756720"
  },
  {
    "text": "allows for a lot of this stuff to work",
    "start": "756720",
    "end": "760019"
  },
  {
    "text": "well",
    "start": "760019",
    "end": "761120"
  },
  {
    "text": "uh the way that we build things is we we",
    "start": "761120",
    "end": "764639"
  },
  {
    "text": "build things in small libraries uh that",
    "start": "764639",
    "end": "766560"
  },
  {
    "text": "are encapsulated testable uh uh",
    "start": "766560",
    "end": "769019"
  },
  {
    "text": "extensible uh so that we don't have to",
    "start": "769019",
    "end": "771480"
  },
  {
    "text": "apply opinions everywhere and force",
    "start": "771480",
    "end": "772920"
  },
  {
    "text": "everyone into a lot of those opinions",
    "start": "772920",
    "end": "774899"
  },
  {
    "text": "um now those opinions uh we pull up to",
    "start": "774899",
    "end": "776700"
  },
  {
    "text": "where they need to go and uh this is",
    "start": "776700",
    "end": "779100"
  },
  {
    "text": "where we can show how a bunch of this",
    "start": "779100",
    "end": "782839"
  },
  {
    "text": "functionality amount to uh the stuff",
    "start": "782839",
    "end": "785820"
  },
  {
    "text": "that you would actually want to do in an",
    "start": "785820",
    "end": "787560"
  },
  {
    "text": "application",
    "start": "787560",
    "end": "788459"
  },
  {
    "text": "so WIC is a framework uh we were built",
    "start": "788459",
    "end": "792240"
  },
  {
    "text": "at Candle which is a it takes a lot of",
    "start": "792240",
    "end": "794339"
  },
  {
    "text": "inspiration from languages like like uh",
    "start": "794339",
    "end": "798000"
  },
  {
    "text": "like uh Haskell uh it gives you like the",
    "start": "798000",
    "end": "800820"
  },
  {
    "text": "the functional streaming pipelines where",
    "start": "800820",
    "end": "804060"
  },
  {
    "text": "you can string these components together",
    "start": "804060",
    "end": "805440"
  },
  {
    "text": "uh and build applications out of them uh",
    "start": "805440",
    "end": "808740"
  },
  {
    "text": "we we focus a lot on uh the",
    "start": "808740",
    "end": "811139"
  },
  {
    "text": "statelessness uh functional Purity",
    "start": "811139",
    "end": "813420"
  },
  {
    "text": "making sure that applications don't",
    "start": "813420",
    "end": "814860"
  },
  {
    "text": "break uh statelessness is very very",
    "start": "814860",
    "end": "817079"
  },
  {
    "text": "important to us uh and for everyone",
    "start": "817079",
    "end": "819360"
  },
  {
    "text": "who's ever restarted a computer to fix a",
    "start": "819360",
    "end": "822000"
  },
  {
    "text": "problem then you intuitively uh",
    "start": "822000",
    "end": "824220"
  },
  {
    "text": "understand as well that state is one of",
    "start": "824220",
    "end": "826079"
  },
  {
    "text": "the biggest sources of problems in",
    "start": "826079",
    "end": "828420"
  },
  {
    "text": "software",
    "start": "828420",
    "end": "830839"
  },
  {
    "start": "830000",
    "end": "917000"
  },
  {
    "text": "so what we've added uh with the WIC",
    "start": "831300",
    "end": "833940"
  },
  {
    "text": "extensions to was this is a multiplexing",
    "start": "833940",
    "end": "836399"
  },
  {
    "text": "so multiplexing is the combination of",
    "start": "836399",
    "end": "838620"
  },
  {
    "text": "multiple streams into one of these",
    "start": "838620",
    "end": "840060"
  },
  {
    "text": "channels so that you can kind of bring",
    "start": "840060",
    "end": "843120"
  },
  {
    "text": "in a whole bunch of streams uh down into",
    "start": "843120",
    "end": "845279"
  },
  {
    "text": "one and then fan them out on on either",
    "start": "845279",
    "end": "847560"
  },
  {
    "text": "side so this gives you the ability to",
    "start": "847560",
    "end": "850139"
  },
  {
    "text": "take that request Channel Concept in our",
    "start": "850139",
    "end": "853260"
  },
  {
    "text": "socket that we saw before and extend",
    "start": "853260",
    "end": "855540"
  },
  {
    "text": "that to multiple streams and we use this",
    "start": "855540",
    "end": "857700"
  },
  {
    "text": "in WIC to isolate uh or to",
    "start": "857700",
    "end": "862320"
  },
  {
    "text": "to give operations the ability to",
    "start": "862320",
    "end": "866779"
  },
  {
    "text": "manage state within the context of",
    "start": "866779",
    "end": "870120"
  },
  {
    "text": "execution so rather than maintaining",
    "start": "870120",
    "end": "872040"
  },
  {
    "text": "state within the webassembly module or",
    "start": "872040",
    "end": "874500"
  },
  {
    "text": "whatever else you get the streams in you",
    "start": "874500",
    "end": "877500"
  },
  {
    "text": "initiate the state that you need and you",
    "start": "877500",
    "end": "879120"
  },
  {
    "text": "slurp data as necessary you deliver data",
    "start": "879120",
    "end": "882420"
  },
  {
    "text": "out and then when the operation is done",
    "start": "882420",
    "end": "883920"
  },
  {
    "text": "all state is erased and washed away so",
    "start": "883920",
    "end": "887519"
  },
  {
    "text": "there's a contrived example for a",
    "start": "887519",
    "end": "889740"
  },
  {
    "text": "complex operation that might give you",
    "start": "889740",
    "end": "892440"
  },
  {
    "text": "directions uh you start off with just a",
    "start": "892440",
    "end": "895199"
  },
  {
    "text": "single location where you want to go and",
    "start": "895199",
    "end": "897899"
  },
  {
    "text": "then you might get a stream of your",
    "start": "897899",
    "end": "899940"
  },
  {
    "text": "continually updated location as you go",
    "start": "899940",
    "end": "902480"
  },
  {
    "text": "as well as a stream of additional stops",
    "start": "902480",
    "end": "905699"
  },
  {
    "text": "that you might want to augment your your",
    "start": "905699",
    "end": "908940"
  },
  {
    "text": "path with and then out of that you get a",
    "start": "908940",
    "end": "911399"
  },
  {
    "text": "stream of updated steps and potentially",
    "start": "911399",
    "end": "913680"
  },
  {
    "text": "any hazards along the way",
    "start": "913680",
    "end": "917000"
  },
  {
    "start": "917000",
    "end": "977000"
  },
  {
    "text": "uh Now with uh with WIC and with",
    "start": "918000",
    "end": "921120"
  },
  {
    "text": "Multiplex streams uh we got to the point",
    "start": "921120",
    "end": "923339"
  },
  {
    "text": "where we needed to uh introduce a",
    "start": "923339",
    "end": "925860"
  },
  {
    "text": "substream or windowed stream concept uh",
    "start": "925860",
    "end": "929880"
  },
  {
    "text": "we aggressively use streams and uh when",
    "start": "929880",
    "end": "932760"
  },
  {
    "text": "you start to make everything streams",
    "start": "932760",
    "end": "934139"
  },
  {
    "text": "it's easy to lose context with something",
    "start": "934139",
    "end": "936180"
  },
  {
    "text": "like this",
    "start": "936180",
    "end": "937440"
  },
  {
    "text": "so if we want to make a process that",
    "start": "937440",
    "end": "939600"
  },
  {
    "text": "just continually took in file names read",
    "start": "939600",
    "end": "941820"
  },
  {
    "text": "them and output a stream of bytes then",
    "start": "941820",
    "end": "943980"
  },
  {
    "text": "that stream of bytes starts to lose",
    "start": "943980",
    "end": "946019"
  },
  {
    "text": "context with every file uh beyond the",
    "start": "946019",
    "end": "949199"
  },
  {
    "text": "first one there's just a blob of bytes",
    "start": "949199",
    "end": "951120"
  },
  {
    "text": "going down so with sub streams you get",
    "start": "951120",
    "end": "954600"
  },
  {
    "text": "this concept of this substream so you",
    "start": "954600",
    "end": "956940"
  },
  {
    "text": "get the stream of file names coming in",
    "start": "956940",
    "end": "958680"
  },
  {
    "text": "and then what you get is a stream of",
    "start": "958680",
    "end": "960899"
  },
  {
    "text": "stream of bytes going down so as pay as",
    "start": "960899",
    "end": "964680"
  },
  {
    "text": "individual payloads expand and contract",
    "start": "964680",
    "end": "967639"
  },
  {
    "text": "the context of where they came from and",
    "start": "967639",
    "end": "970920"
  },
  {
    "text": "what they're associated with is",
    "start": "970920",
    "end": "972420"
  },
  {
    "text": "maintained throughout the application",
    "start": "972420",
    "end": "975800"
  },
  {
    "start": "977000",
    "end": "1029000"
  },
  {
    "text": "now any of the multiplexing and sub",
    "start": "979440",
    "end": "981240"
  },
  {
    "text": "screens in then you can start to build",
    "start": "981240",
    "end": "984139"
  },
  {
    "text": "interfaces that that decompose larger",
    "start": "984139",
    "end": "986760"
  },
  {
    "text": "data structures into the individual",
    "start": "986760",
    "end": "988500"
  },
  {
    "text": "pieces so that you can",
    "start": "988500",
    "end": "991220"
  },
  {
    "text": "have more granular control about how you",
    "start": "991220",
    "end": "993899"
  },
  {
    "text": "plug everything together while still",
    "start": "993899",
    "end": "995760"
  },
  {
    "text": "maintaining the context and",
    "start": "995760",
    "end": "997019"
  },
  {
    "text": "relationships of those uh pieces of data",
    "start": "997019",
    "end": "1000259"
  },
  {
    "text": "uh so an example of a of a component",
    "start": "1000259",
    "end": "1002779"
  },
  {
    "text": "that would take a stream of bytes a zip",
    "start": "1002779",
    "end": "1005660"
  },
  {
    "text": "file and outputs a stream of file names",
    "start": "1005660",
    "end": "1008860"
  },
  {
    "text": "uh with also a stream of stream of bytes",
    "start": "1008860",
    "end": "1012320"
  },
  {
    "text": "because a zip file can have any number",
    "start": "1012320",
    "end": "1014779"
  },
  {
    "text": "of files in it and a right uh right",
    "start": "1014779",
    "end": "1017660"
  },
  {
    "text": "component can take a stream of strings",
    "start": "1017660",
    "end": "1019880"
  },
  {
    "text": "uh and a stream of stream of bytes and",
    "start": "1019880",
    "end": "1022579"
  },
  {
    "text": "just produce a stream of uh integers out",
    "start": "1022579",
    "end": "1025938"
  },
  {
    "text": "for the bytes that have been written",
    "start": "1025939",
    "end": "1029740"
  },
  {
    "start": "1029000",
    "end": "1073000"
  },
  {
    "text": "so when you get this then you start to",
    "start": "1029900",
    "end": "1031819"
  },
  {
    "text": "be able to plug these components",
    "start": "1031819",
    "end": "1033558"
  },
  {
    "text": "together and just Shuffle the frames",
    "start": "1033559",
    "end": "1035240"
  },
  {
    "text": "around",
    "start": "1035240",
    "end": "1036040"
  },
  {
    "text": "uh when you get the operations outside",
    "start": "1036040",
    "end": "1039438"
  },
  {
    "text": "of uh wasm RS component then you can",
    "start": "1039439",
    "end": "1043160"
  },
  {
    "text": "just Shuffle those frames somewhere else",
    "start": "1043160",
    "end": "1045699"
  },
  {
    "text": "all you need to do is uh just change uh",
    "start": "1045699",
    "end": "1050179"
  },
  {
    "text": "essentially one byte in the frame to map",
    "start": "1050179",
    "end": "1053960"
  },
  {
    "text": "an operation from one to another and",
    "start": "1053960",
    "end": "1057260"
  },
  {
    "text": "then you just Shuffle the frame to the",
    "start": "1057260",
    "end": "1058880"
  },
  {
    "text": "other component and everything works",
    "start": "1058880",
    "end": "1060740"
  },
  {
    "text": "magically",
    "start": "1060740",
    "end": "1061760"
  },
  {
    "text": "now the reason why we break things down",
    "start": "1061760",
    "end": "1063679"
  },
  {
    "text": "into the uh into the smallest",
    "start": "1063679",
    "end": "1068860"
  },
  {
    "text": "logical chunks of data is so that we can",
    "start": "1068860",
    "end": "1073100"
  },
  {
    "text": "really plug components in wherever we",
    "start": "1073100",
    "end": "1075740"
  },
  {
    "text": "want",
    "start": "1075740",
    "end": "1076460"
  },
  {
    "text": "uh so in this example like if we were",
    "start": "1076460",
    "end": "1078740"
  },
  {
    "text": "piping in the file name and the bytes to",
    "start": "1078740",
    "end": "1080660"
  },
  {
    "text": "from unzip to right uh we could then",
    "start": "1080660",
    "end": "1083120"
  },
  {
    "text": "carve off a pipeline for uh the bytes to",
    "start": "1083120",
    "end": "1086539"
  },
  {
    "text": "go to a process step uh and then pipe",
    "start": "1086539",
    "end": "1088820"
  },
  {
    "text": "those bytes back over to right without",
    "start": "1088820",
    "end": "1090679"
  },
  {
    "text": "changing anything else",
    "start": "1090679",
    "end": "1093640"
  },
  {
    "start": "1094000",
    "end": "1150000"
  },
  {
    "text": "this is what it looks like and they were",
    "start": "1094340",
    "end": "1096980"
  },
  {
    "text": "we're putting it into practice I mean",
    "start": "1096980",
    "end": "1099080"
  },
  {
    "text": "this is a a very very small DSL inside",
    "start": "1099080",
    "end": "1102980"
  },
  {
    "text": "yaml but just shows how this stuff is",
    "start": "1102980",
    "end": "1106700"
  },
  {
    "text": "written I get the input which then pipes",
    "start": "1106700",
    "end": "1110120"
  },
  {
    "text": "directly to the read file name",
    "start": "1110120",
    "end": "1112720"
  },
  {
    "text": "read.contents goes to the unzip input",
    "start": "1112720",
    "end": "1115880"
  },
  {
    "text": "and then the unzip file name and",
    "start": "1115880",
    "end": "1118039"
  },
  {
    "text": "contents go to the right file name and",
    "start": "1118039",
    "end": "1119660"
  },
  {
    "text": "contents uh the unzip.file name fans out",
    "start": "1119660",
    "end": "1123860"
  },
  {
    "text": "to also be output alongside the bytes",
    "start": "1123860",
    "end": "1127280"
  },
  {
    "text": "written",
    "start": "1127280",
    "end": "1128200"
  },
  {
    "text": "and that is just something that works",
    "start": "1128200",
    "end": "1132860"
  },
  {
    "text": "nicely that's going to be a very super",
    "start": "1132860",
    "end": "1135440"
  },
  {
    "text": "exciting demo of a one gigabyte file",
    "start": "1135440",
    "end": "1138380"
  },
  {
    "text": "being unzipped but we're at a wasm",
    "start": "1138380",
    "end": "1141200"
  },
  {
    "text": "conference and we're we're accustomed to",
    "start": "1141200",
    "end": "1143299"
  },
  {
    "text": "uh super exciting uh demos like this",
    "start": "1143299",
    "end": "1146240"
  },
  {
    "text": "which is a very very fun uh these are",
    "start": "1146240",
    "end": "1149059"
  },
  {
    "text": "just raw packets as they're being",
    "start": "1149059",
    "end": "1150500"
  },
  {
    "start": "1150000",
    "end": "1266000"
  },
  {
    "text": "written out not uh not wildly exciting",
    "start": "1150500",
    "end": "1154280"
  },
  {
    "text": "but it's the it's the technology that uh",
    "start": "1154280",
    "end": "1157700"
  },
  {
    "text": "that is important",
    "start": "1157700",
    "end": "1159860"
  },
  {
    "text": "um so before I uh stop here I don't have",
    "start": "1159860",
    "end": "1162260"
  },
  {
    "text": "a time",
    "start": "1162260",
    "end": "1163520"
  },
  {
    "text": "um so I'm not sure exactly where I am in",
    "start": "1163520",
    "end": "1165320"
  },
  {
    "text": "the in the schedule here uh but we have",
    "start": "1165320",
    "end": "1167900"
  },
  {
    "text": "been shuffling around a lot of",
    "start": "1167900",
    "end": "1169520"
  },
  {
    "text": "repositories we've extracted wazm RS out",
    "start": "1169520",
    "end": "1172100"
  },
  {
    "text": "from our project uh Mana repo into its",
    "start": "1172100",
    "end": "1174440"
  },
  {
    "text": "own organization uh and uh that means",
    "start": "1174440",
    "end": "1178220"
  },
  {
    "text": "that we've lost all stars and everything",
    "start": "1178220",
    "end": "1179780"
  },
  {
    "text": "else so if there's anything that I could",
    "start": "1179780",
    "end": "1182480"
  },
  {
    "text": "possibly ask you for now is to just give",
    "start": "1182480",
    "end": "1185360"
  },
  {
    "text": "us a little bit of love right now and",
    "start": "1185360",
    "end": "1187100"
  },
  {
    "text": "just give us our third or fourth star it",
    "start": "1187100",
    "end": "1190640"
  },
  {
    "text": "would be nice",
    "start": "1190640",
    "end": "1192740"
  },
  {
    "text": "um yeah we're putting a lot of practice",
    "start": "1192740",
    "end": "1194840"
  },
  {
    "text": "right now there's a lot of stuff that we",
    "start": "1194840",
    "end": "1196940"
  },
  {
    "text": "are looking to shed as the component",
    "start": "1196940",
    "end": "1200360"
  },
  {
    "text": "model matures uh and as the one the",
    "start": "1200360",
    "end": "1203720"
  },
  {
    "text": "component model gets to the point where",
    "start": "1203720",
    "end": "1205100"
  },
  {
    "text": "we can bite the bullet and go all in uh",
    "start": "1205100",
    "end": "1207980"
  },
  {
    "text": "then the stuff in wazamara shrinks uh to",
    "start": "1207980",
    "end": "1210679"
  },
  {
    "text": "the to the point at which it is really",
    "start": "1210679",
    "end": "1212900"
  },
  {
    "text": "only doing the stuff that that is the",
    "start": "1212900",
    "end": "1215600"
  },
  {
    "text": "component model can't do so we're",
    "start": "1215600",
    "end": "1217820"
  },
  {
    "text": "eagerly looking forward to to uh full",
    "start": "1217820",
    "end": "1220340"
  },
  {
    "text": "integration with a component model",
    "start": "1220340",
    "end": "1222440"
  },
  {
    "text": "technology as it matures uh so thank you",
    "start": "1222440",
    "end": "1225740"
  },
  {
    "text": "very much",
    "start": "1225740",
    "end": "1227059"
  },
  {
    "text": "and uh I'm not sure what our time is so",
    "start": "1227059",
    "end": "1230780"
  },
  {
    "text": "uh maybe questions",
    "start": "1230780",
    "end": "1233060"
  },
  {
    "text": "[Applause]",
    "start": "1233060",
    "end": "1241560"
  },
  {
    "text": "comments on whether or not we are all",
    "start": "1246140",
    "end": "1248000"
  },
  {
    "text": "Waz Amigos",
    "start": "1248000",
    "end": "1249919"
  },
  {
    "text": "we got t-shirts made no",
    "start": "1249919",
    "end": "1253419"
  },
  {
    "text": "all right",
    "start": "1256280",
    "end": "1259000"
  },
  {
    "text": "thank you very much",
    "start": "1260240",
    "end": "1262130"
  },
  {
    "text": "[Applause]",
    "start": "1262130",
    "end": "1267859"
  }
]