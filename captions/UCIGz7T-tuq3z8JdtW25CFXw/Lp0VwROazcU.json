[
  {
    "text": "[Music]",
    "start": "1490",
    "end": "7109"
  },
  {
    "text": "hello everyone hey everyone my name is Dimitri I'm working at light s. but it",
    "start": "10160",
    "end": "16840"
  },
  {
    "text": "doesn't matter we're doing like but it it matters like we're doing rust based supply chain platform we have fancy",
    "start": "16840",
    "end": "22560"
  },
  {
    "text": "animations and if you are talented rust engineer you know where to find me if you want to have a nice job right but",
    "start": "22560",
    "end": "29080"
  },
  {
    "text": "today I'm going to talk about my different passion a little bit it's videos it's actually all the media files",
    "start": "29080",
    "end": "34719"
  },
  {
    "text": "I love the media programming yeah sorry about that I will try to not do that but in fact I love media programming I love",
    "start": "34719",
    "end": "41840"
  },
  {
    "text": "everything related to the media files and Especial videos which are damn",
    "start": "41840",
    "end": "46920"
  },
  {
    "text": "complicated but I started three years ago I started my pet project kind of my",
    "start": "46920",
    "end": "52719"
  },
  {
    "text": "site project it's a giant framework which in Rust that renders the video files so basically you can make binary",
    "start": "52719",
    "end": "58920"
  },
  {
    "text": "that renders a video file and I'm working on that for three years and in fact uh it's ready kind of it's in",
    "start": "58920",
    "end": "65799"
  },
  {
    "text": "closed beta State you can try it right now and all of the code samples from this talk will be actually somewhere",
    "start": "65799",
    "end": "71119"
  },
  {
    "text": "from a code base kind of Simply maybe simplified a bit but in fact yes um and",
    "start": "71119",
    "end": "76840"
  },
  {
    "text": "today I'm going to talk about the wasm video preview from this framework so basically you render video and I'm going",
    "start": "76840",
    "end": "82240"
  },
  {
    "text": "to talk about def tools that I buil for this framework that allows you to in real time see what the videos generated",
    "start": "82240",
    "end": "88840"
  },
  {
    "text": "so basically you can see that it is just like playing the video and basically it is in a browser it in a wasm and in a",
    "start": "88840",
    "end": "96759"
  },
  {
    "text": "like on the right side you can see the actual video on the left side you can see audio files and all of the problems",
    "start": "96759",
    "end": "102159"
  },
  {
    "text": "I had during the buing this stuff is processing and working with media file because rendering is actually like okay",
    "start": "102159",
    "end": "107439"
  },
  {
    "text": "because we're rendering SVG it's SVG based framework browsers are good in rendering svgs so we're going to talk",
    "start": "107439",
    "end": "114280"
  },
  {
    "text": "about the media files on the left side and how I made to work with them overall",
    "start": "114280",
    "end": "120320"
  },
  {
    "text": "I think it would be interesting so uh what is the most important part of the video how do you think",
    "start": "120320",
    "end": "126200"
  },
  {
    "text": "so what is the most part okay let me let me ask a question yeah when when last time you were watching silent movies in",
    "start": "126200",
    "end": "133840"
  },
  {
    "text": "1920s so yeah like in fact audio is the most important part of the video basically you you are not watching",
    "start": "133840",
    "end": "140720"
  },
  {
    "text": "videos silently that is not useful right so let's talk on the most important and the most complicated part one of the",
    "start": "140720",
    "end": "147560"
  },
  {
    "text": "most complicated part so audio files what is audio file let me do a quick overview so basically audio sound is a",
    "start": "147560",
    "end": "154879"
  },
  {
    "text": "vibration right and microphones like this one can record vibration and time per second is 44,100 time per second and",
    "start": "154879",
    "end": "163159"
  },
  {
    "text": "this one recording called sample and basically all of what is audio file is basically a set of samples right it's a",
    "start": "163159",
    "end": "169560"
  },
  {
    "text": "vector of F32 it doesn't matter it could be in16 it could be an but in fact like just a simple Vector of whatever time",
    "start": "169560",
    "end": "176560"
  },
  {
    "text": "per of whatever time samples recorded and it's nice but it's encoded right",
    "start": "176560",
    "end": "183080"
  },
  {
    "text": "it's a giant uh audio file it's basically binary right it's just a file that you need to somehow work with and",
    "start": "183080",
    "end": "189920"
  },
  {
    "text": "when I started and like when I see how people are working with media files in R they're basically trying to charge how",
    "start": "189920",
    "end": "197000"
  },
  {
    "text": "to decode the audio files okay here is what encoders that we have okay let's use what encoder that is the same one I",
    "start": "197000",
    "end": "202840"
  },
  {
    "text": "use mini3 on back end let's use Min 3 was built into the browser and then just",
    "start": "202840",
    "end": "209120"
  },
  {
    "text": "just work it and that's fine but please don't do that and I understand that this is weird that",
    "start": "209120",
    "end": "215200"
  },
  {
    "text": "I'm saying on a wasum conference I'm saying don't not use wasma the first my statement but in fact like browsers are",
    "start": "215200",
    "end": "221760"
  },
  {
    "text": "kind of good in working with media files so here is a rust sample that is rendering the decoding audio files you",
    "start": "221760",
    "end": "229400"
  },
  {
    "text": "may like it you may not like it but it's the most efficient way to now get the",
    "start": "229400",
    "end": "234680"
  },
  {
    "text": "vector of F32 in web assembly and it just works and it's kind of like even beautiful you know like you just yes it",
    "start": "234680",
    "end": "240640"
  },
  {
    "text": "has its Dynamic interest but you know why not like it has a everything and",
    "start": "240640",
    "end": "245799"
  },
  {
    "text": "then you have just like here you can have a channel data which is basically everything you need to right and now",
    "start": "245799",
    "end": "252680"
  },
  {
    "text": "when you have this Vector of F32 you can do whatever you want to like for instance here is a simple code samples",
    "start": "252680",
    "end": "259880"
  },
  {
    "text": "that I wrote very quickly to just showcase how it works like how many five lines of code right but you can",
    "start": "259880",
    "end": "266960"
  },
  {
    "text": "do something really beautiful with that some like is it cool right this is even",
    "start": "266960",
    "end": "273360"
  },
  {
    "text": "cooler and this is basically what's this sound with this five lines of code are",
    "start": "273360",
    "end": "278800"
  },
  {
    "text": "done with audio file from the previous code and in fact it's just like very simple example you just set in like the",
    "start": "278800",
    "end": "285479"
  },
  {
    "text": "delay in time and you in the room size kind of and it just works and it's nice you can get it back to the JavaScript",
    "start": "285479",
    "end": "292720"
  },
  {
    "text": "world or you can play it through the audio context right here through the JavaScript Bridges uh and you know like",
    "start": "292720",
    "end": "300320"
  },
  {
    "text": "you can go more over that once you have the samples you can go to the whole",
    "start": "300320",
    "end": "305520"
  },
  {
    "text": "digital audio signal processing functionality you can do whatever you want to want to build a VST plugin it",
    "start": "305520",
    "end": "311720"
  },
  {
    "text": "would be VST plugin but you can and you can actually like do whatever you want to like be a DJ do something like that",
    "start": "311720",
    "end": "317919"
  },
  {
    "text": "there is a crate in Rust called dasp that allows that that is building into wasm perfectly and allows to have",
    "start": "317919",
    "end": "324360"
  },
  {
    "text": "Primitives to work with audio and once you get into that it's really fun when you have a pure audio data and you can",
    "start": "324360",
    "end": "330360"
  },
  {
    "text": "change it somehow using your code but uh in F frames we do that and moreover what",
    "start": "330360",
    "end": "336919"
  },
  {
    "text": "we do is we are um mixing the files in Rust basically and in wasm as well for",
    "start": "336919",
    "end": "344160"
  },
  {
    "text": "the previewer so here is a general video timeline in F frames there is a bunch of audio file they all different all",
    "start": "344160",
    "end": "350520"
  },
  {
    "text": "different sized all different volumed you need to process every of them you need to align them to the vo to the gain",
    "start": "350520",
    "end": "357000"
  },
  {
    "text": "gain them as the user wants to and mix into one thing and I think that I don't have a code sample I somehow missed that",
    "start": "357000",
    "end": "363840"
  },
  {
    "text": "likely yes I did but in fact it's nothing like nothing more different than just taking a bunch of vectors somehow",
    "start": "363840",
    "end": "370880"
  },
  {
    "text": "merge them and then align into one basically you just fold into the vector of samples and merging them like",
    "start": "370880",
    "end": "378240"
  },
  {
    "text": "aligning using specific algorithm but because the vector of F32 the volume is",
    "start": "378240",
    "end": "383599"
  },
  {
    "text": "zero is no volume one is volume you just you just like align in together the ABS",
    "start": "383599",
    "end": "389919"
  },
  {
    "text": "but that's not even what's really fun here is what fun and here is hey everyone on W.O I hope you're enjoying",
    "start": "389919",
    "end": "396560"
  },
  {
    "text": "the talk so far and let's just all of me that this animation looks gorgeous okay",
    "start": "396560",
    "end": "402440"
  },
  {
    "text": "now passing my voice back to my future me so thanks P Dimitri but in fact this",
    "start": "402440",
    "end": "408080"
  },
  {
    "text": "is just rendered video from F frames if you don't believe that this works in wasm in real time it does so you can",
    "start": "408080",
    "end": "413880"
  },
  {
    "text": "just scroll your timeline it just works perfectly fine you can analyze you can visualize your video and it just works",
    "start": "413880",
    "end": "420199"
  },
  {
    "text": "cool because you can process the data and this is how it works it works using fre transform you can do that very",
    "start": "420199",
    "end": "426680"
  },
  {
    "text": "efficient in browser you can use one of the rust grades um here I'm using micro5",
    "start": "426680",
    "end": "432199"
  },
  {
    "text": "because it's no STD and at the same time it has bit WS which is algorithmic optimization for the fft which makes it",
    "start": "432199",
    "end": "438160"
  },
  {
    "text": "really fast and especially in wasm and basically what you have here you just",
    "start": "438160",
    "end": "443479"
  },
  {
    "text": "asking for 16 samples for 16 frequencies from the samples array and then you",
    "start": "443479",
    "end": "448840"
  },
  {
    "text": "because it's getting back you the complex numbers you are normalizing them to get amplitudes and then you just",
    "start": "448840",
    "end": "454400"
  },
  {
    "text": "render everything you want to like this fancy wave animation it's like yeah it's it has more cut I agree but you can drug",
    "start": "454400",
    "end": "461479"
  },
  {
    "text": "some bars right and it just works as well and that's really nice right you can do that and all of the all of the",
    "start": "461479",
    "end": "468639"
  },
  {
    "text": "equalization all of the modern like CICS are also based on fre transform you can just use and you can process audio",
    "start": "468639",
    "end": "476120"
  },
  {
    "text": "whatever you want to like I I don't understand why nobody built vam in browser yet I don't really understand",
    "start": "476120",
    "end": "481639"
  },
  {
    "text": "that I miss it but hold on hold on okay I understand somebody I I see some",
    "start": "481639",
    "end": "486720"
  },
  {
    "text": "eyesight on me like very this doesn't sound right I feel like it doesn't sound",
    "start": "486720",
    "end": "492319"
  },
  {
    "text": "right this looks good right so basically we're doing some weird and checked into but how is it possible that web assembly",
    "start": "492319",
    "end": "499840"
  },
  {
    "text": "gives us a owned V after to R it doesn't sound right so break let's break it down",
    "start": "499840",
    "end": "505879"
  },
  {
    "text": "uh just check how um we just like this a fun that is called in a web assembly",
    "start": "505879",
    "end": "512560"
  },
  {
    "text": "text format the vat right so here is what I found from the buildt binary and",
    "start": "512560",
    "end": "517800"
  },
  {
    "text": "I can see that there is an UT from the vasit test bggs that is calling the we",
    "start": "517800",
    "end": "523599"
  },
  {
    "text": "function uh Channel data and then I'm getting the pointer wow I was so excited",
    "start": "523600",
    "end": "529640"
  },
  {
    "text": "no I don't it does the copy of the whole file and this is kind of what you can't",
    "start": "529640",
    "end": "536200"
  },
  {
    "text": "avoid with current modor browser JavaScript and we assembly unfortunately",
    "start": "536200",
    "end": "541519"
  },
  {
    "text": "so basically here the get flood 32 memory set is what where the copy happens and this is needed because we",
    "start": "541519",
    "end": "548320"
  },
  {
    "text": "need to own the memory and we can own the memory only in the other direction so I thought that this is bad and this",
    "start": "548320",
    "end": "556040"
  },
  {
    "text": "is really bad because here is a bevy if you don't know Bevy is a 2d engine uh",
    "start": "556040",
    "end": "561279"
  },
  {
    "text": "webgl based in Rust in wasm that allows you to build G images and here's an",
    "start": "561279",
    "end": "567519"
  },
  {
    "text": "example for audio files here they or they Lo The Sounds windless slope OG and",
    "start": "567519",
    "end": "573040"
  },
  {
    "text": "you can see the problem here I highlighted in a waterfall example you can see how much time it takes to get",
    "start": "573040",
    "end": "580519"
  },
  {
    "text": "from downloading the wasm example to actually start uh to start to start",
    "start": "580519",
    "end": "586560"
  },
  {
    "text": "downloading the the slopes and then playing them it takes a lot of time because it's kind of like you want to",
    "start": "586560",
    "end": "592480"
  },
  {
    "text": "manage your resources from web assembly you want to um download them quickly and",
    "start": "592480",
    "end": "598440"
  },
  {
    "text": "you don't want to copy them so how to deal with that uh in fact I I I created",
    "start": "598440",
    "end": "604040"
  },
  {
    "text": "a new strategy to doing that and it's not because I'm that smart but because I have a very specific very weird use case",
    "start": "604040",
    "end": "611079"
  },
  {
    "text": "where I'm doing the def tool for the browser right so I know how it going to compile so I'm just going to cover a bit",
    "start": "611079",
    "end": "618320"
  },
  {
    "text": "of how it is doing and why it is becoming really nice so what I thought I",
    "start": "618320",
    "end": "623480"
  },
  {
    "text": "saw that so basically if we're talking about web assembly there is a data section like in any assem or like Global",
    "start": "623480",
    "end": "628680"
  },
  {
    "text": "files so let's just inline all of our data in it so here is already working",
    "start": "628680",
    "end": "634360"
  },
  {
    "text": "example white string don't ask me why is a string this is a string because B uh",
    "start": "634360",
    "end": "639600"
  },
  {
    "text": "rust includes uh static bytes as a strings because it's easy for for for rust uh for some reason but you can use",
    "start": "639600",
    "end": "647040"
  },
  {
    "text": "the bite section if you just work with a pure web assembly and it just works uh",
    "start": "647040",
    "end": "652680"
  },
  {
    "text": "how a little bit of un safety um so here is an idea in F frames when you have",
    "start": "652680",
    "end": "659360"
  },
  {
    "text": "have a known media file that is not Dynamic that is not 1 Hour podcast long",
    "start": "659360",
    "end": "665120"
  },
  {
    "text": "we just take your audio file in a compile time we decode it using lib",
    "start": "665120",
    "end": "670399"
  },
  {
    "text": "directly from the compiler in in Rust then getting the sample from the compiler align them the at bite and in",
    "start": "670399",
    "end": "677680"
  },
  {
    "text": "line so all of this align align literal and all of this F frames alignance to is basically align as alternative and",
    "start": "677680",
    "end": "684639"
  },
  {
    "text": "rust from C right so you just align the after as as bites to make it work right",
    "start": "684639",
    "end": "692720"
  },
  {
    "text": "to not stick fa in and then you just like in a runtime the the string the string that happens in runtime you're",
    "start": "692720",
    "end": "699200"
  },
  {
    "text": "just basically cting the slice back and it just works and then in runtime you",
    "start": "699200",
    "end": "704279"
  },
  {
    "text": "don't have all of the things because yes it's a bit of unsafe but all of the decoders I wrote like lib V decoders in",
    "start": "704279",
    "end": "711720"
  },
  {
    "text": "Forever frames and it just like all of this unsafety weird unsafety and you can",
    "start": "711720",
    "end": "717279"
  },
  {
    "text": "just avoid that and you can have all of the the audio file directly in the audio F in your in your binary so here how lo",
    "start": "717279",
    "end": "725519"
  },
  {
    "text": "before so here I just had five audio file that works that needed right now that going to play right now and you can",
    "start": "725519",
    "end": "732079"
  },
  {
    "text": "see that it's kind of like I don't know like uh here like it's reload in the files and it's reload in it do just",
    "start": "732079",
    "end": "738639"
  },
  {
    "text": "reload on every on every keystroke on every safe and it's kind of slow and here's",
    "start": "738639",
    "end": "744600"
  },
  {
    "text": "after just take a look on this like Arrow right you can see that the browser even caches the the internal uh view so",
    "start": "744600",
    "end": "753120"
  },
  {
    "text": "basically my my my fully featured video editor video previewer is no faster than modern Spas because it doesn't have",
    "start": "753120",
    "end": "759440"
  },
  {
    "text": "waterfalls and if you think that the we assembly is weird in terms of like um",
    "start": "759440",
    "end": "764839"
  },
  {
    "text": "it's weird to encod your audio in Inc media inside the binaries it's not because the web assembly uh sections are",
    "start": "764839",
    "end": "772240"
  },
  {
    "text": "perfectly aligned and it like first Parson the code and instructions is",
    "start": "772240",
    "end": "777680"
  },
  {
    "text": "harder than parsing memory because memory is just a giant block of memory that size it and you just just read it",
    "start": "777680",
    "end": "783920"
  },
  {
    "text": "and the web assembly don't need to parse it unless it needed so basically uh encoding a giant encoder like shipping",
    "start": "783920",
    "end": "792760"
  },
  {
    "text": "the giant decoder into the wasm is much slower than decode small audio file um",
    "start": "792760",
    "end": "800639"
  },
  {
    "text": "and it also gives us a neat public API because you can use the marker to create your perfectly fine struct and then you",
    "start": "800639",
    "end": "807240"
  },
  {
    "text": "have compile time guarantees that this specific media is available so here it's image but it doesn't really matter",
    "start": "807240",
    "end": "813440"
  },
  {
    "text": "because um you just do the same with audio and you always know that your binary always contain the audio file and",
    "start": "813440",
    "end": "819959"
  },
  {
    "text": "if you're building like things like that is required to have audio files like for example a game that have a sound just",
    "start": "819959",
    "end": "826680"
  },
  {
    "text": "make sure that you are not overwhelmed your code with unneeded like decorders",
    "start": "826680",
    "end": "832639"
  },
  {
    "text": "especially like it was and you way copy because you can do that and if I check and look on this uh example you can see",
    "start": "832639",
    "end": "839639"
  },
  {
    "text": "that this is a public API for frames you can write SVG which is a micro for SVG",
    "start": "839639",
    "end": "844680"
  },
  {
    "text": "and you have an image and you know what's a big problem of SVG it's basically images right so it's everyone",
    "start": "844680",
    "end": "854160"
  },
  {
    "text": "hates SVS like that but fun fact in NE frames s FS are literally like that",
    "start": "854160",
    "end": "859880"
  },
  {
    "text": "looks like that and apparently it's the fastest way to Pro to work with this FES in wasm in pres and like for us",
    "start": "859880",
    "end": "868440"
  },
  {
    "text": "specifically to deliver that into the browser based previewer",
    "start": "868440",
    "end": "873480"
  },
  {
    "text": "because there are two ways of working with images in browser in web assembly",
    "start": "873480",
    "end": "881480"
  },
  {
    "text": "the first one is cannabis if we're Tak can look at one of the uh most popular it's the most popular wasm based image",
    "start": "881480",
    "end": "888560"
  },
  {
    "text": "processing Library called Fon and how they are processing Library they're doing the same thing they're calling",
    "start": "888560",
    "end": "894440"
  },
  {
    "text": "eight JavaScript this JavaScript back functions doing two data copies to get",
    "start": "894440",
    "end": "899600"
  },
  {
    "text": "the pixels into JavaScript uh into the rust world and then they just do all of the processing which is actually like I",
    "start": "899600",
    "end": "906480"
  },
  {
    "text": "don't want to really to include it because it's really simple because image is basically right is a set of pixels s",
    "start": "906480",
    "end": "912880"
  },
  {
    "text": "RGB you have one bite for color you have four byes for per pixel and you just process it it's it's not a problem right",
    "start": "912880",
    "end": "920279"
  },
  {
    "text": "and but the library is pretty nice because they have situations all this stuff or you can for sure you can statically align in line or you can",
    "start": "920279",
    "end": "927160"
  },
  {
    "text": "compile time in line the the images which are required for you right now and it also works fine you can do that very",
    "start": "927160",
    "end": "934240"
  },
  {
    "text": "quickly and you can render that very fast because okay so there's a bit of",
    "start": "934240",
    "end": "940079"
  },
  {
    "text": "processing Library so it's a web assembly Photon photon wasm is basically",
    "start": "940079",
    "end": "945160"
  },
  {
    "text": "a rust library that you can use wasm that can do image like all of the changes you can just use it as a DP it",
    "start": "945160",
    "end": "952120"
  },
  {
    "text": "has all of The Primitives and you can build your Photoshop or whatever based on that but in fact what it does what it",
    "start": "952120",
    "end": "958319"
  },
  {
    "text": "does allow us so when we have an inline based images and when we store images as",
    "start": "958319",
    "end": "964319"
  },
  {
    "text": "Bas 64s we can first render them like indefinitely",
    "start": "964319",
    "end": "971199"
  },
  {
    "text": "because browser has a memory cach for images and even if you're rendering them on to the conest you just like have",
    "start": "971199",
    "end": "977480"
  },
  {
    "text": "inline optimization for everything you don't have the waterfalls bottlenecks",
    "start": "977480",
    "end": "982680"
  },
  {
    "text": "when you downloading images and here is a cannabis that also like giant cannabis",
    "start": "982680",
    "end": "987839"
  },
  {
    "text": "with a lot of previews all of this are individual frames all of this are running for you transform to display",
    "start": "987839",
    "end": "993560"
  },
  {
    "text": "audio analization all of this displaying images and everything works just like very fast thanks to the dynamic audio",
    "start": "993560",
    "end": "1001160"
  },
  {
    "text": "preview but I'm just not saying that this is bad just like I'm not saying that downloading images from the fetch",
    "start": "1001160",
    "end": "1007759"
  },
  {
    "text": "is bad you still need that because obviously most of the time images are",
    "start": "1007759",
    "end": "1013880"
  },
  {
    "text": "somewhere but and it's not that slow but when you I'm very sorry for that so when",
    "start": "1013880",
    "end": "1021319"
  },
  {
    "text": "you are getting images compiled it's just like NE Next Level so basically",
    "start": "1021319",
    "end": "1026360"
  },
  {
    "text": "here is data structure that works in not wasm we just having the all of the",
    "start": "1026360",
    "end": "1032120"
  },
  {
    "text": "pixels uh in lined for the image data and in wasm we're always having Bas 64",
    "start": "1032120",
    "end": "1037520"
  },
  {
    "text": "and it just works because browser are Dam good in B 64 and rendering images but um so what to do with svgs",
    "start": "1037520",
    "end": "1046120"
  },
  {
    "text": "svgs is also images we have public based on SVG and SVG is kind of scary you know",
    "start": "1046120",
    "end": "1051720"
  },
  {
    "text": "like svgs have very concise very neat very declarative API just like on this",
    "start": "1051720",
    "end": "1057559"
  },
  {
    "text": "website okay I see you are you are slipping after go break so basically no it's not like right so SVG is kind of",
    "start": "1057559",
    "end": "1064400"
  },
  {
    "text": "weird sometimes you don't want to understand this things but at the same time svgs do not be scared of svgs svgs",
    "start": "1064400",
    "end": "1072360"
  },
  {
    "text": "are very declarative XML based format that allows you to do something like",
    "start": "1072360",
    "end": "1077480"
  },
  {
    "text": "that very declarative decoration of V of graphics for a certain frame like here you just have a",
    "start": "1077480",
    "end": "1083919"
  },
  {
    "text": "rectangle for background you just have a text you just have everything here you",
    "start": "1083919",
    "end": "1089960"
  },
  {
    "text": "just inline it right and that's nice but you know what we can do with SVG more we",
    "start": "1089960",
    "end": "1099159"
  },
  {
    "text": "need to render it somehow and again we can do the compile time optimization and",
    "start": "1099159",
    "end": "1104720"
  },
  {
    "text": "render F from the rust so basically what we do we are taking the VG and por it in",
    "start": "1104720",
    "end": "1110840"
  },
  {
    "text": "EST in runtime and then inlining the as basically into your wasm binary which is",
    "start": "1110840",
    "end": "1116400"
  },
  {
    "text": "good until this the short size of of SG sometimes it just faster than than to De",
    "start": "1116400",
    "end": "1121760"
  },
  {
    "text": "optimize back to the string but in fact you just can process F in compile time in line it into the rust and then just",
    "start": "1121760",
    "end": "1129720"
  },
  {
    "text": "render it using react or your favorite to without like parsen so if you are",
    "start": "1129720",
    "end": "1135080"
  },
  {
    "text": "getting your SVG from WM and you need to render it you can just inline it directly and then render it through",
    "start": "1135080",
    "end": "1141080"
  },
  {
    "text": "react so you have benefits of virtual D you can use whatever virtual D uh you use you can you have like optimizations",
    "start": "1141080",
    "end": "1149440"
  },
  {
    "text": "so the video when it changes it doesn't change the whole the whole the whole VG is not Chang it only certain parameters",
    "start": "1149440",
    "end": "1156080"
  },
  {
    "text": "that are changing are like literally updated the D and at the same time you have a very neat representation of svgs",
    "start": "1156080",
    "end": "1164120"
  },
  {
    "text": "in uh in your code and inm and you have no JavaScript thanks to but what is the",
    "start": "1164120",
    "end": "1170559"
  },
  {
    "text": "biggest problem of SVG according to stack Overflow it's one of the most like question about SVG and stack Overflow",
    "start": "1170559",
    "end": "1177360"
  },
  {
    "text": "it's text wrapping so basically the question can I wrap text in JavaScript in SVG no if you are not no because it's",
    "start": "1177360",
    "end": "1184679"
  },
  {
    "text": "not a part of SG spec and you can use it only browser using foreign object so let's fix that using fonts fonts is the",
    "start": "1184679",
    "end": "1192360"
  },
  {
    "text": "next media file format that I'm going to cover today and what is font font is always just a binary format that is not",
    "start": "1192360",
    "end": "1199080"
  },
  {
    "text": "in cuted it's just a pure binary file that is already have all of the information that you might need to",
    "start": "1199080",
    "end": "1205720"
  },
  {
    "text": "resolve the actual um glys to resolve all the information and funs contains of",
    "start": "1205720",
    "end": "1212159"
  },
  {
    "text": "glys and specific information about a certain glyph you have some sizes you have some ever it doesn't really matter",
    "start": "1212159",
    "end": "1219240"
  },
  {
    "text": "right now and the shape of the glyph itself and why you can do that you can",
    "start": "1219240",
    "end": "1224520"
  },
  {
    "text": "do a nice things with this so for example here is is I just want spend",
    "start": "1224520",
    "end": "1231000"
  },
  {
    "text": "more time saying that this btes can come from the fetch or you can compile time",
    "start": "1231000",
    "end": "1236919"
  },
  {
    "text": "and line it and the fonts actually have much more much more sense to inline in compile time especially if you are rendering them like that you can have if",
    "start": "1236919",
    "end": "1245320"
  },
  {
    "text": "for example if you ship them on micr controller you can just inline your font a bit M font and then just use it",
    "start": "1245320",
    "end": "1251480"
  },
  {
    "text": "directly but here's the thing you just have a font that you can parse and fun fact this ttf parse for creating R does",
    "start": "1251480",
    "end": "1258480"
  },
  {
    "text": "not not allocate so basically it just sets the pointers to the specific part of the binary and then you can just look",
    "start": "1258480",
    "end": "1264360"
  },
  {
    "text": "it up for specific table for specific binary position and get a direct um",
    "start": "1264360",
    "end": "1269559"
  },
  {
    "text": "direct pointer to the name that is set inside of the of the binary file itself",
    "start": "1269559",
    "end": "1276240"
  },
  {
    "text": "the fun fact neither brow neither browser nor figma can do that because in figma one of the biggest problem is the",
    "start": "1276240",
    "end": "1282799"
  },
  {
    "text": "fonts management right because figma does not allowed you to drag a Fone the the most the most powerful the most",
    "start": "1282799",
    "end": "1288679"
  },
  {
    "text": "popular Java web assembly application does not allow you to just get a font downloaded they require to install some",
    "start": "1288679",
    "end": "1295840"
  },
  {
    "text": "kind of font manager on your computer install desktop application and that's so weird because like you can literally",
    "start": "1295840",
    "end": "1301279"
  },
  {
    "text": "do that in two seconds and if you if you're going to build the figma killer just you know where to",
    "start": "1301279",
    "end": "1307440"
  },
  {
    "text": "start um and here is something more interesting we can resolve the Char wids",
    "start": "1307440",
    "end": "1312559"
  },
  {
    "text": "right what does this mean you can get information about the certain Char character like right the Sy okay I found",
    "start": "1312559",
    "end": "1320279"
  },
  {
    "text": "the the bug here symbol Char doesn't matter so you just getting the certain charart and resolve the size in a font",
    "start": "1320279",
    "end": "1328880"
  },
  {
    "text": "size as you want to so the units uh so the fonts are stor size in eem which is",
    "start": "1328880",
    "end": "1335880"
  },
  {
    "text": "a specific size directly for this font which you can then scale as you need to and this like five lines of code and you",
    "start": "1335880",
    "end": "1343080"
  },
  {
    "text": "have direct Char size from this from the font file just like a browser do and now",
    "start": "1343080",
    "end": "1349360"
  },
  {
    "text": "you solve the problem with text layout and because you can rub text in SVG because you know the sizes of text of",
    "start": "1349360",
    "end": "1355679"
  },
  {
    "text": "chars you know the size of words and you can solve the problem of um rendering",
    "start": "1355679",
    "end": "1361919"
  },
  {
    "text": "text in SVG so basically here is a funny mail that I get from my close beta project that they were looking for a way",
    "start": "1361919",
    "end": "1369120"
  },
  {
    "text": "to Rob text in JavaScript and they heard that somehow somewhere there is a",
    "start": "1369120",
    "end": "1374440"
  },
  {
    "text": "function that drops text in SVG and actually was in my project so I gave them beta access and they just used it",
    "start": "1374440",
    "end": "1381120"
  },
  {
    "text": "to build uh real text text drop in an SVG which is not possible without like",
    "start": "1381120",
    "end": "1386960"
  },
  {
    "text": "knowing font and it's really simple but we can go much more Beyond of that so",
    "start": "1386960",
    "end": "1392720"
  },
  {
    "text": "let's do something really really interesting we have for example we can do the same thing we can have the find",
    "start": "1392720",
    "end": "1399880"
  },
  {
    "text": "the glyph ID we can find information about certain G glyph and then we can use outline glyph it's also part of this",
    "start": "1399880",
    "end": "1405799"
  },
  {
    "text": "CR and what we'll get do have you can you guess what we will get in this Builder after the execution surprise",
    "start": "1405799",
    "end": "1415080"
  },
  {
    "text": "SVG everything is SVG and basically you can just take SVG out of the Builder out",
    "start": "1415080",
    "end": "1421240"
  },
  {
    "text": "of res Sone right from the browser and then you can just runer it into the canvas and this is actually one of the s",
    "start": "1421240",
    "end": "1429120"
  },
  {
    "text": "that I found today it just like the people are paying for that and you can build in like in in two functions in web",
    "start": "1429120",
    "end": "1435720"
  },
  {
    "text": "assembly uh and then just R it to coners maybe just add some lines you know like",
    "start": "1435720",
    "end": "1440880"
  },
  {
    "text": "uh so it's shaped and you can then repack your phones back",
    "start": "1440880",
    "end": "1446279"
  },
  {
    "text": "and this is like really nice and you can do that very fast and you can do it right now and unfortunately nobody is",
    "start": "1446279",
    "end": "1454120"
  },
  {
    "text": "doing that for for some reason okay so I",
    "start": "1454120",
    "end": "1460640"
  },
  {
    "text": "feel I feel that we don't have much more time anymore but I I'm going to cover a",
    "start": "1460640",
    "end": "1466760"
  },
  {
    "text": "bit about the videos which are also media files and to be honest everything is bad with videos so videos are",
    "start": "1466760",
    "end": "1474200"
  },
  {
    "text": "collection of the audios and images and in order to get them please don't use f",
    "start": "1474200",
    "end": "1479840"
  },
  {
    "text": "mm it's slow right it's slow I tried to I endless times I tried to build certain",
    "start": "1479840",
    "end": "1488120"
  },
  {
    "text": "s things using M scripton from lib into the wasm and use it in together with the",
    "start": "1488120",
    "end": "1493880"
  },
  {
    "text": "rust binary and unfortunately it just doesn't work nice there is a proposal called Web codex that just uh works much",
    "start": "1493880",
    "end": "1502240"
  },
  {
    "text": "better but unfortunately it's flagged everywhere and unfortunately it's sick fold so basically currently videos are",
    "start": "1502240",
    "end": "1510480"
  },
  {
    "text": "in F frames video editor is supported really weirdly because we have a very",
    "start": "1510480",
    "end": "1515720"
  },
  {
    "text": "specific scenario but you can still do uh that using good old canvases and good",
    "start": "1515720",
    "end": "1520880"
  },
  {
    "text": "old manipulation unfortunately it's just like I w't spend like I have giant stack of slides next so yeah let me try let me",
    "start": "1520880",
    "end": "1528080"
  },
  {
    "text": "just skip it yeah and yeah we have we are running out of time I thing right um",
    "start": "1528080",
    "end": "1534960"
  },
  {
    "text": "yeah and yeah so basically media is doable in wasm in wasm you can very",
    "start": "1534960",
    "end": "1542559"
  },
  {
    "text": "seamlessly very like you know in in in the",
    "start": "1542559",
    "end": "1548240"
  },
  {
    "text": "very um you know correct matter work with the media files you can even avoid",
    "start": "1548240",
    "end": "1555279"
  },
  {
    "text": "copying of the memory of the files to the web assembly and you can do",
    "start": "1555279",
    "end": "1560320"
  },
  {
    "text": "literally a lot of interesting stuff that people are not doing right now so you have a power to do that because",
    "start": "1560320",
    "end": "1565760"
  },
  {
    "text": "browser based web assembly is just like you know it's just a treasure that you can use to do something that were not",
    "start": "1565760",
    "end": "1572679"
  },
  {
    "text": "possible like literally yes today and just don't be afraid of media files don't be afraid of compiling media files",
    "start": "1572679",
    "end": "1579520"
  },
  {
    "text": "playing around with that it's really fun and it's really doable so and it could be really fast thank",
    "start": "1579520",
    "end": "1586360"
  },
  {
    "text": "you yeah so here is f frames Studio where you can find the invitation to the",
    "start": "1586360",
    "end": "1592720"
  },
  {
    "text": "beta of the F frames framework and you can find all of the code Snippets and all of the things I've been talking",
    "start": "1592720",
    "end": "1598760"
  },
  {
    "text": "about there and thanks for your",
    "start": "1598760",
    "end": "1603840"
  },
  {
    "text": "attention nice any questions yeah sure uh there's",
    "start": "1608240",
    "end": "1616080"
  },
  {
    "text": "a lot of Hing process we do expecting canvas and so they done on the",
    "start": "1616080",
    "end": "1622399"
  },
  {
    "text": "browser is it possible to execute them also on the server so we can generate so",
    "start": "1622399",
    "end": "1628919"
  },
  {
    "text": "sorry one onee one on the server side from a canvas no to instead of targeting",
    "start": "1628919",
    "end": "1635720"
  },
  {
    "text": "canvas targeting like five generation yeah you can but like um I mean the canvas are not that slow right so when",
    "start": "1635720",
    "end": "1642320"
  },
  {
    "text": "you render an image on Canabis it's very fast in the browser uh you can just render canvis and it's it will be much",
    "start": "1642320",
    "end": "1648840"
  },
  {
    "text": "faster than doing that through server side uh for sure like so you shouldn't do that probably through server side I",
    "start": "1648840",
    "end": "1655840"
  },
  {
    "text": "tried to a little bit but like uh in in fact Canabis are pretty fast the problem that web assembly right now requires the",
    "start": "1655840",
    "end": "1662799"
  },
  {
    "text": "whole data copy in and if you downloaded the whole bite from the server it's still doing much bigger overhead so yeah",
    "start": "1662799",
    "end": "1669240"
  },
  {
    "text": "canis is more efficient this case it's possible yeah for sure if you if you're just like asking for a browser to get",
    "start": "1669240",
    "end": "1675279"
  },
  {
    "text": "Thebes directly from server you can just get the byes in the same manner you can just download the image as a bytes right",
    "start": "1675279",
    "end": "1682159"
  },
  {
    "text": "uh you can just there is a BMP format so you can just get image unencoded you can",
    "start": "1682159",
    "end": "1687360"
  },
  {
    "text": "download it from server like using Fetch and then it's very easy decod in from the like raw image",
    "start": "1687360",
    "end": "1694480"
  },
  {
    "text": "directly from service he yeah sure is it possible somehow to",
    "start": "1694480",
    "end": "1701559"
  },
  {
    "text": "stream the data yeah sure sure yeah sure HTML that is true audio video elements",
    "start": "1701559",
    "end": "1708519"
  },
  {
    "text": "to yes yes you can do that so basically in",
    "start": "1708519",
    "end": "1714159"
  },
  {
    "text": "the whole audio context thing I only showed I know that I only showed the um",
    "start": "1714159",
    "end": "1719399"
  },
  {
    "text": "thing that just LS the whole audio file decodes that but there is a create media element source which is work as chunks",
    "start": "1719399",
    "end": "1726480"
  },
  {
    "text": "so basically you download a specific chunk it works totally the same thing you just download a specific chunk and you apply in a chunk and you just",
    "start": "1726480",
    "end": "1733039"
  },
  {
    "text": "modifying a chunk and then you can store it back into the actual audio file basically it's um I I don't know I I",
    "start": "1733039",
    "end": "1739840"
  },
  {
    "text": "thought that I included it but apparently not right so yeah you can you can for sure stream it you won't like to",
    "start": "1739840",
    "end": "1746159"
  },
  {
    "text": "download the one hour long podcast from the from from from the javascri M I'm just I insist you you don't need to do",
    "start": "1746159",
    "end": "1754799"
  },
  {
    "text": "that yeah sure so since you're already",
    "start": "1758960",
    "end": "1764679"
  },
  {
    "text": "uh you portions of of the let's say LDA functions for example what's the benefit",
    "start": "1764679",
    "end": "1771919"
  },
  {
    "text": "uh so I still don't understand what's the benefit for assembly",
    "start": "1771919",
    "end": "1778039"
  },
  {
    "text": "versus Those portions on so yeah in in fact so yeah as I said so the framework",
    "start": "1778039",
    "end": "1784399"
  },
  {
    "text": "F frames is pure rust We R neveron in Rust as a release mode and in Dev mode",
    "start": "1784399",
    "end": "1791399"
  },
  {
    "text": "you just want to have a code you have your Neo or your V code here and you have your browser here and you type code",
    "start": "1791399",
    "end": "1797799"
  },
  {
    "text": "and you you can see that it's changed here but in order to do that you need to somehow load all of the information in",
    "start": "1797799",
    "end": "1803640"
  },
  {
    "text": "the browser you can do that probably through the desktop app but desktop app doesn't have that debug tools for svgs",
    "start": "1803640",
    "end": "1809919"
  },
  {
    "text": "browser have so basically I just faed this problem and I tried to as much as possible you know be pass the limitation",
    "start": "1809919",
    "end": "1816279"
  },
  {
    "text": "of the browser and be pass and make it as fast as possible to lower the media files to make your preview looks like so",
    "start": "1816279",
    "end": "1822640"
  },
  {
    "text": "basically as I said as I showed in one IM in one um in one video so you just",
    "start": "1822640",
    "end": "1828279"
  },
  {
    "text": "save it and it just immediately appears in the screen and it just it works pretty decently right now yeah",
    "start": "1828279",
    "end": "1835960"
  },
  {
    "text": "sure what's the UI the one sorry what UI U the ux ux of no so",
    "start": "1836960",
    "end": "1846919"
  },
  {
    "text": "basically it is yeah so it is a framework for developers so you just write in your code right it's just like",
    "start": "1846919",
    "end": "1853000"
  },
  {
    "text": "a a file system based so you just like have your file system you have a bunch of or you have a bunch of media files in",
    "start": "1853000",
    "end": "1860120"
  },
  {
    "text": "your file system then you just start in the server and it just appears on the screen and when you change the media",
    "start": "1860120",
    "end": "1866799"
  },
  {
    "text": "file you also get a propagation and Dr all",
    "start": "1866799",
    "end": "1871159"
  },
  {
    "text": "it I think any more questions right oh gosh",
    "start": "1872559",
    "end": "1878679"
  }
]