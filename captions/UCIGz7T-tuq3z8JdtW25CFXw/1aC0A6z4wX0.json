[
  {
    "text": "[Music]",
    "start": "310",
    "end": "14040"
  },
  {
    "text": "before I get started I just want to say a big thank you to the organizers to the",
    "start": "14040",
    "end": "19840"
  },
  {
    "text": "staff to the sponsors the other speakers and and you wonderful people for coming in here to share this with me so let's",
    "start": "19840",
    "end": "26480"
  },
  {
    "text": "give a round of applause for everyone",
    "start": "26480",
    "end": "30680"
  },
  {
    "text": "all right so I am dead program some people call me Ron a couple humans call me dad",
    "start": "34399",
    "end": "42079"
  },
  {
    "text": "but in all of the important places I am dead program i mean I'm not dead you know not yet but uh and I am a",
    "start": "42079",
    "end": "49520"
  },
  {
    "text": "technologist for hire for hire get it i was told to be",
    "start": "49520",
    "end": "56000"
  },
  {
    "text": "very subtle when doing uh sales and marketing so uh I run a consultancy called the hybrid group where we create",
    "start": "56000",
    "end": "62399"
  },
  {
    "text": "the software that makes your hardware work and some of us contribute to a couple open source projects you may have",
    "start": "62399",
    "end": "68560"
  },
  {
    "text": "heard of like tiny go and also go CV which are the go wrappers around the",
    "start": "68560",
    "end": "74640"
  },
  {
    "text": "open CV so this is about computer vision using web assembly conven vision using",
    "start": "74640",
    "end": "81280"
  },
  {
    "text": "web assembly I mean why would you do that well let's define the space a little bit what we're talking about",
    "start": "81280",
    "end": "87119"
  },
  {
    "text": "really is industrial computer systems and for generally running on embedded",
    "start": "87119",
    "end": "92479"
  },
  {
    "text": "Linux devices or some type of edge computing device or potentially as some",
    "start": "92479",
    "end": "98079"
  },
  {
    "text": "type of cloud computing cluster and applications are things like agriculture transportation energy",
    "start": "98079",
    "end": "106439"
  },
  {
    "text": "security manufacturing and retail kinds of applications so not not really home",
    "start": "106439",
    "end": "111840"
  },
  {
    "text": "webcam stuff a lot of computer vision applications have a very similar basic structure you know it's some type of",
    "start": "111840",
    "end": "118079"
  },
  {
    "text": "pipeline of processing vision data but there's a lot of different parts to integrate it's very hard to run on",
    "start": "118079",
    "end": "124719"
  },
  {
    "text": "different kinds of machines having the same application that you need to deploy the different hardware and it's very hard to update oh that sounds and also",
    "start": "124719",
    "end": "132640"
  },
  {
    "text": "there's some need for customization generally it's not just like uh checkbox style parameters but some type of logic",
    "start": "132640",
    "end": "139200"
  },
  {
    "text": "involved you know if a defect is detected then reject that product for",
    "start": "139200",
    "end": "144440"
  },
  {
    "text": "example so that's why we created WASM vision which helps you get going with",
    "start": "144440",
    "end": "149520"
  },
  {
    "text": "computer vision using web assembly and basically capture video through a stream",
    "start": "149520",
    "end": "154640"
  },
  {
    "text": "or a camera process it somehow and then save it stream it or do something",
    "start": "154640",
    "end": "159760"
  },
  {
    "text": "because of what you discovered from it so we have a WASM vision command line interface the WASOM vision engine and",
    "start": "159760",
    "end": "167519"
  },
  {
    "text": "then Wasome vision processors so the engine itself is written in Go and it's",
    "start": "167519",
    "end": "173440"
  },
  {
    "text": "based on Open CV which is really the gold standard as far as computer vision software it's the oldest and probably",
    "start": "173440",
    "end": "180480"
  },
  {
    "text": "most mature computer vision software it's runs on everything from Android phones cloud computing clusters small",
    "start": "180480",
    "end": "187239"
  },
  {
    "text": "devices ffmpeg which is a whole another streaming system that many people have",
    "start": "187239",
    "end": "192319"
  },
  {
    "text": "used for converting video greamer which is yet another complete toolkit for",
    "start": "192319",
    "end": "198879"
  },
  {
    "text": "doing computer vision processing go CV which is what's controlling all of this and then W zero",
    "start": "198879",
    "end": "206000"
  },
  {
    "text": "which is our web assembly runtime and all of this combined into a single",
    "start": "206000",
    "end": "211120"
  },
  {
    "text": "statically linked binary as long as you're running on Linux without a GPU",
    "start": "211120",
    "end": "216959"
  },
  {
    "text": "some other rules may apply so basically what we're talking about is this architecture oh wait sorry",
    "start": "216959",
    "end": "223599"
  },
  {
    "text": "that's something else my mistake uh that's a different unified architecture i'm I'm actually talking about this one",
    "start": "223599",
    "end": "230080"
  },
  {
    "text": "so as I was saying we have the Wasome vision engine where we capture video then through the runtime we pass those",
    "start": "230080",
    "end": "236799"
  },
  {
    "text": "frames to the different processors and then they can do different things with open CV ffmpeg or gstreamer so you might",
    "start": "236799",
    "end": "244239"
  },
  {
    "text": "notice from this diagram that the vast majority of the processing is actually being done in the host in the engine and",
    "start": "244239",
    "end": "250159"
  },
  {
    "text": "not in the processor so let's that's a pattern we're going to see a lot more of so vision processors can be written",
    "start": "250159",
    "end": "256720"
  },
  {
    "text": "using go with tiny go can be written using rust or they can be written using the C programming language and this is",
    "start": "256720",
    "end": "264160"
  },
  {
    "text": "all because of Wasom CV so Wasom CV is a set of WASUS interfaces for computer",
    "start": "264160",
    "end": "271199"
  },
  {
    "text": "vision that is defined using WIT and uh we saw a couple of great talks yesterday",
    "start": "271199",
    "end": "277040"
  },
  {
    "text": "about using Wit for generating client stuff wit is part of the WASOM component",
    "start": "277040",
    "end": "282400"
  },
  {
    "text": "model however WASOM vision is not using the WASOM component model at this time",
    "start": "282400",
    "end": "289280"
  },
  {
    "text": "it's just using WIT to generate client interface wrappers and documentation so this is a very important point you can",
    "start": "289280",
    "end": "295120"
  },
  {
    "text": "use wit without needing to use a component model so what we're using on the host side is something called wipes",
    "start": "295120",
    "end": "301919"
  },
  {
    "text": "which is a package created by my friend and colleague at Orinium Labs Graham who actually has a really amazing handheld",
    "start": "301919",
    "end": "308560"
  },
  {
    "text": "gaming system that runs web assembly check it out uh Firefly Zero so a quick",
    "start": "308560",
    "end": "314479"
  },
  {
    "text": "briefer on how computer vision works you have the mat which is a matrix of data",
    "start": "314479",
    "end": "321199"
  },
  {
    "text": "some type and then a RGB mat is generally how we would be representing",
    "start": "321199",
    "end": "328080"
  },
  {
    "text": "color data usually it's BGR in the world of OpenCV just an ordering thing so now",
    "start": "328080",
    "end": "335440"
  },
  {
    "text": "how wit works we have interfaces and within those interfaces we have basic",
    "start": "335440",
    "end": "340800"
  },
  {
    "text": "types we can define like um ins floats strings we have records which basically",
    "start": "340800",
    "end": "347840"
  },
  {
    "text": "would be uh strcts it's a collection of data that's all together and then we",
    "start": "347840",
    "end": "352960"
  },
  {
    "text": "have resources which are basically external references to things that exist on the host and that the client the",
    "start": "352960",
    "end": "361120"
  },
  {
    "text": "guest is calling so that it does its work there so let's take a look at the whit file that's part of Wasom",
    "start": "361120",
    "end": "368120"
  },
  {
    "text": "CV so we see here we've got our basic world of imports we have the types we",
    "start": "368120",
    "end": "374400"
  },
  {
    "text": "have the mat let's take a look at the mat since that's one that's particularly interesting we see we have different",
    "start": "374400",
    "end": "380880"
  },
  {
    "text": "kinds of mats based on the different bit depths and resolutions we can create a",
    "start": "380880",
    "end": "386240"
  },
  {
    "text": "mat we can copy mats to other mats we can see how big they are we can merge",
    "start": "386240",
    "end": "393280"
  },
  {
    "text": "them together do different sorts of things so that just sort of gives you an idea of what the API is like",
    "start": "393280",
    "end": "399360"
  },
  {
    "text": "so Wasom CV docs are generated entirely from those wit files and here we can see this is the same map functions as",
    "start": "399360",
    "end": "406639"
  },
  {
    "text": "generated on the wasumcv.org website so that just gives us documentation and so let's take a look",
    "start": "406639",
    "end": "413199"
  },
  {
    "text": "at a couple of the processors the first one is the Go processor and of course in Go we use package was ce to bring it in",
    "start": "413199",
    "end": "420880"
  },
  {
    "text": "and able to use it so to create that we use wit binden go which is a set of",
    "start": "420880",
    "end": "426080"
  },
  {
    "text": "tools from the by code alliance that also some of the people who are maintainers of tiny go collaborate and",
    "start": "426080",
    "end": "431120"
  },
  {
    "text": "contribute to thank you Fastley and so the way of course we compile it is with tiny go we build we",
    "start": "431120",
    "end": "439039"
  },
  {
    "text": "target wasome unknown that way we have the most minimal stripped down barebones",
    "start": "439039",
    "end": "444080"
  },
  {
    "text": "and efficient web assembly module we say no debug and then blur",
    "start": "444080",
    "end": "449680"
  },
  {
    "text": "so let's take a quick look at the B blur processor in Go so we can see here it",
    "start": "449680",
    "end": "455680"
  },
  {
    "text": "imports the W was cv CV and matt and basic types and then it exports this",
    "start": "455680",
    "end": "461599"
  },
  {
    "text": "process function that's really the entry point for the module it gets passed an image and then it does something in this",
    "start": "461599",
    "end": "467680"
  },
  {
    "text": "case we're going to call cv.blur and we're going to blur it using a 25x 25",
    "start": "467680",
    "end": "473120"
  },
  {
    "text": "kernel so that's the size of the blurring mechanism and then we're just going to return the blurred image all",
    "start": "473120",
    "end": "479120"
  },
  {
    "text": "right so far so good so let's actually see it work so if",
    "start": "479120",
    "end": "486120"
  },
  {
    "text": "we make blur okay and we're running",
    "start": "486120",
    "end": "493160"
  },
  {
    "text": "it and here I am i'm blurry demo one complete gratuitous",
    "start": "493160",
    "end": "500960"
  },
  {
    "text": "applause all right so far so good all right rust we can use Rust very cool",
    "start": "502360",
    "end": "508319"
  },
  {
    "text": "language a lot of people like it in Rust of course we use crate awesome CV to bring it into our code and the",
    "start": "508319",
    "end": "514959"
  },
  {
    "text": "generation is done using wit bind which is another set of collection of tools from the by code alliance to build it we",
    "start": "514959",
    "end": "522399"
  },
  {
    "text": "used cargo build we target was 32 unknown unknown in release mode which will do as much as it can to get rid of",
    "start": "522399",
    "end": "529279"
  },
  {
    "text": "any extraneous things let's take a quick look at the blur processor in Rust we",
    "start": "529279",
    "end": "534399"
  },
  {
    "text": "see it's very similar no standard library we have our crates that we bring",
    "start": "534399",
    "end": "539519"
  },
  {
    "text": "in we're using Wasom CV we have a process function same idea we get passed",
    "start": "539519",
    "end": "545519"
  },
  {
    "text": "a mat and we're going to return a mat we take that mat and we blur it using a",
    "start": "545519",
    "end": "552000"
  },
  {
    "text": "kernel of 25x 25 where have we seen this code a minute ago and then we return it",
    "start": "552000",
    "end": "557360"
  },
  {
    "text": "yeah it's basically the same exact thing just in Rust so now let's see if that actually works",
    "start": "557360",
    "end": "564399"
  },
  {
    "text": "so if we make blur rs so we run it oops wrong",
    "start": "564399",
    "end": "570920"
  },
  {
    "text": "pane and we're still blurry now this time in Rust so far so good two demos",
    "start": "570920",
    "end": "577480"
  },
  {
    "text": "down you you can applaud and of course C the C",
    "start": "577480",
    "end": "584560"
  },
  {
    "text": "programming language venerable and respected uh who here has a copy of",
    "start": "584560",
    "end": "589920"
  },
  {
    "text": "Kerning and Richie's book yeah that's usually about the correct number quite a few people um so of",
    "start": "589920",
    "end": "596800"
  },
  {
    "text": "course in C we include and we include CV imports.h and we're again we're using",
    "start": "596800",
    "end": "602959"
  },
  {
    "text": "whit bind genen to generate the C bindings and it's very simply compiled just using a command line something like",
    "start": "602959",
    "end": "608959"
  },
  {
    "text": "this you know C is so easy right so just to be fair um all of these types of",
    "start": "608959",
    "end": "616399"
  },
  {
    "text": "parameters are exactly the same ones that are being set by both tiny go and rust it's just those are hidden in C",
    "start": "616399",
    "end": "623040"
  },
  {
    "text": "these are explicit so we actually know what's going on for better or for worse let's take a look at the C code it of",
    "start": "623040",
    "end": "629360"
  },
  {
    "text": "course looks very similar to the code we've already seen we import was CV our",
    "start": "629360",
    "end": "634640"
  },
  {
    "text": "process function takes a matt image it has to calculate the size of the kernel",
    "start": "634640",
    "end": "640240"
  },
  {
    "text": "it calls the blur function and it takes the result of that and returns it so",
    "start": "640240",
    "end": "645760"
  },
  {
    "text": "again very very much the same code as we've seen so now let's run the blur",
    "start": "645760",
    "end": "651320"
  },
  {
    "text": "processor blur C keep going left when I want to go",
    "start": "651320",
    "end": "657000"
  },
  {
    "text": "right and we're still blurry same blur same algorithm same code same web",
    "start": "657000",
    "end": "662720"
  },
  {
    "text": "assembly three different languages yes it does work you should be applauding for C just",
    "start": "662720",
    "end": "668320"
  },
  {
    "text": "cuz like when are you going to see C again all right so processors provide",
    "start": "668320",
    "end": "676480"
  },
  {
    "text": "basic building blocks for computer vision they can also be chained together so that the output of one is the input",
    "start": "676480",
    "end": "681760"
  },
  {
    "text": "of another and we can create our own processors of course since it's based on these published APIs and all open source",
    "start": "681760",
    "end": "688399"
  },
  {
    "text": "languages and standards a quick tour of some of the included processors that we",
    "start": "688399",
    "end": "693800"
  },
  {
    "text": "have so the asyncify processor the asyncy processor is just kind of a fun",
    "start": "693800",
    "end": "701200"
  },
  {
    "text": "one it what it does is it takes and processes again our image it clears the",
    "start": "701200",
    "end": "707680"
  },
  {
    "text": "screen on the terminal it resizes the image it converts it to ASKI right we're",
    "start": "707680",
    "end": "715120"
  },
  {
    "text": "going to we're going to be matrixified and then outputs that to the terminal resizes that again to the size",
    "start": "715120",
    "end": "722560"
  },
  {
    "text": "of the original image and then writes that asy text onto it so we can stream",
    "start": "722560",
    "end": "728000"
  },
  {
    "text": "as well as see on our terminal all right let's see this",
    "start": "728000",
    "end": "734319"
  },
  {
    "text": "work yes it's me hello is anyone in",
    "start": "739000",
    "end": "746240"
  },
  {
    "text": "there no no we want to stream this to the internet i mean isn't the Matrix on the internet like are you there hello",
    "start": "748519",
    "end": "755760"
  },
  {
    "text": "Neo come in all right enough of that",
    "start": "755760",
    "end": "762560"
  },
  {
    "text": "so the WASUM vision platform so in addition to Wasom CV WASUM vision itself",
    "start": "763519",
    "end": "768639"
  },
  {
    "text": "has a platform it add some capabilities that processors need like logging configuration management being able to",
    "start": "768639",
    "end": "775200"
  },
  {
    "text": "make HTTP calls to external services a data store which is a key value store",
    "start": "775200",
    "end": "780399"
  },
  {
    "text": "that's built in where we can store data either associated with each image frame or with processors in general",
    "start": "780399",
    "end": "787279"
  },
  {
    "text": "and so I'm going to show you a little bit more complete of an application that I call creative captioning so creative",
    "start": "787279",
    "end": "793200"
  },
  {
    "text": "captioning is live caption generation with an artistic flare and so here's how this",
    "start": "793200",
    "end": "799079"
  },
  {
    "text": "works shrink this down so we're going to capture the vision images and then we're going to",
    "start": "799079",
    "end": "805600"
  },
  {
    "text": "pass that to one of three different processors the Olama.wam processor the",
    "start": "805600",
    "end": "811000"
  },
  {
    "text": "mosaic.Wasom processor and then the captions.Wasom processor so each of",
    "start": "811000",
    "end": "816639"
  },
  {
    "text": "these is going to process an image in a different way and then by using the capabilities that are built into the",
    "start": "816639",
    "end": "822800"
  },
  {
    "text": "WASUM vision engine we're going to see the actual result so let's take a look at the first one so we also can",
    "start": "822800",
    "end": "829200"
  },
  {
    "text": "configure Wasome vision uh using TOML files this way we can instead of typing",
    "start": "829200",
    "end": "834959"
  },
  {
    "text": "a really long command line so we can see here our destination is port 8080 wasome",
    "start": "834959",
    "end": "840959"
  },
  {
    "text": "vision has built-in MJPEG streaming as output that's how we're seeing the output this time we're going to CUDA",
    "start": "840959",
    "end": "846639"
  },
  {
    "text": "enable equals true so far everything we've seen has been entirely using CPU we just introduced a new feature in the",
    "start": "846639",
    "end": "852639"
  },
  {
    "text": "release earlier this morning which allows us to have transparent GPU acceleration for processors and then",
    "start": "852639",
    "end": "858399"
  },
  {
    "text": "here's that pipeline again Olama then Mosaic then the captions and then our",
    "start": "858399",
    "end": "864000"
  },
  {
    "text": "configuration is we're going to use the nano lava model it's a large language",
    "start": "864000",
    "end": "869440"
  },
  {
    "text": "model for vision and it's a miniaturaturized version of the lava model that some people may have already",
    "start": "869440",
    "end": "875040"
  },
  {
    "text": "heard of um sidebar I'm going to have the MCP server turned off we just also",
    "start": "875040",
    "end": "880880"
  },
  {
    "text": "introduced an MCP server in the version this morning so you know get your machine learning on so let's take a quick look at the",
    "start": "880880",
    "end": "888000"
  },
  {
    "text": "Alama processor so the Alama processor what processing that it does is first it",
    "start": "888000",
    "end": "894480"
  },
  {
    "text": "loads a configuration that configuration is what URL we're going to use to call the external llama server or O lama",
    "start": "894480",
    "end": "902079"
  },
  {
    "text": "server what the default model is and then what our template is in this case our prompt is going to be describe what",
    "start": "902079",
    "end": "908639"
  },
  {
    "text": "is in this picture in high complimentary terms using six words or less good",
    "start": "908639",
    "end": "914480"
  },
  {
    "text": "challenge right so then the mosaic processor the mosaic processor does something",
    "start": "914480",
    "end": "920160"
  },
  {
    "text": "different what it does is it takes the image and then using something called fast neural style transfer it's going to",
    "start": "920160",
    "end": "927199"
  },
  {
    "text": "use a different machine learning model to take the vision images and to convert them into the style of a well-known",
    "start": "927199",
    "end": "932720"
  },
  {
    "text": "artist whose name I can't mention because that seems unethical but so we take and we convert",
    "start": "932720",
    "end": "938160"
  },
  {
    "text": "that image into a blob which is the necessarily format for open CV and as a",
    "start": "938160",
    "end": "944000"
  },
  {
    "text": "consequence was vision we set that as the input to the mosaic network we",
    "start": "944000",
    "end": "949519"
  },
  {
    "text": "process the data through the neural network and then by taking the image data from that we draw it back onto the",
    "start": "949519",
    "end": "956600"
  },
  {
    "text": "screen all right you'll see more about that in a minute and then the last one is the captions processor so the lama",
    "start": "956600",
    "end": "963759"
  },
  {
    "text": "processor takes the information that it finds and it saves it into the key value",
    "start": "963759",
    "end": "968800"
  },
  {
    "text": "data store the captions processor what it does is it takes that image it looks",
    "start": "968800",
    "end": "974399"
  },
  {
    "text": "up the caption data from the data store and then based on it it draws it onto the screen for us so we're going to have",
    "start": "974399",
    "end": "980480"
  },
  {
    "text": "live captioning coming from our machine learning model if the gods are",
    "start": "980480",
    "end": "986360"
  },
  {
    "text": "good all right let's see if it's all still running so far so",
    "start": "986360",
    "end": "994800"
  },
  {
    "text": "good uh let's see if I docker exec",
    "start": "995639",
    "end": "1001440"
  },
  {
    "text": "actually I already have it in the other window make sure that my lava model is",
    "start": "1001440",
    "end": "1007519"
  },
  {
    "text": "running it is all right let's see it",
    "start": "1007519",
    "end": "1015079"
  },
  {
    "text": "happen make captions",
    "start": "1015079",
    "end": "1022399"
  },
  {
    "text": "oh uh oh unreachable",
    "start": "1022440",
    "end": "1028000"
  },
  {
    "text": "let's see something happened here this is how you know it's",
    "start": "1038559",
    "end": "1043720"
  },
  {
    "text": "real um",
    "start": "1043720",
    "end": "1050440"
  },
  {
    "text": "unreachable well here one thing we can maybe do is",
    "start": "1050440",
    "end": "1056679"
  },
  {
    "text": "uh see this is what happens when you do a software release uh early in the",
    "start": "1056679",
    "end": "1064080"
  },
  {
    "text": "morning i want that awesome",
    "start": "1064679",
    "end": "1069200"
  },
  {
    "text": "vision uh processors",
    "start": "1070840",
    "end": "1076240"
  },
  {
    "text": "let's copy the Olama to our normal processors",
    "start": "1076240",
    "end": "1084600"
  },
  {
    "text": "directory let's see if that was it let's do the same also with um",
    "start": "1084600",
    "end": "1092160"
  },
  {
    "text": "wh let's also copy the um",
    "start": "1092280",
    "end": "1098120"
  },
  {
    "text": "mosaic and the captions all",
    "start": "1098120",
    "end": "1105039"
  },
  {
    "text": "right nope h I've done something wrong what might that",
    "start": "1111000",
    "end": "1118720"
  },
  {
    "text": "be pressure is on this is how you know it's real and also it's early early days",
    "start": "1119559",
    "end": "1125480"
  },
  {
    "text": "software this is what you come to live demos for right let's see",
    "start": "1125480",
    "end": "1132679"
  },
  {
    "text": "um let's see make",
    "start": "1134799",
    "end": "1138080"
  },
  {
    "text": "processors there we go let's build all the processors up real fast just",
    "start": "1143480",
    "end": "1151200"
  },
  {
    "text": "cuz we have a lot of the processors built in all right",
    "start": "1156520",
    "end": "1162400"
  },
  {
    "text": "copy a llama copy mosaic copy the",
    "start": "1165679",
    "end": "1173440"
  },
  {
    "text": "captions oh so sad what's it not",
    "start": "1176679",
    "end": "1183440"
  },
  {
    "text": "doing we are running it here's an idea let's stop",
    "start": "1185559",
    "end": "1192120"
  },
  {
    "text": "it stop a llama let's",
    "start": "1192120",
    "end": "1198160"
  },
  {
    "text": "restart let's load the model and let's try again one last time",
    "start": "1204440",
    "end": "1210880"
  },
  {
    "text": "before we move on to the next thing oh that's so sad well I'll show you that demo later um I apologize for",
    "start": "1210880",
    "end": "1219200"
  },
  {
    "text": "that it It ran right before I was on my way over here but uh apparently not today all right well that was going to",
    "start": "1219200",
    "end": "1227039"
  },
  {
    "text": "be fun let's get to the last part because we only have 9 minutes left video drone",
    "start": "1227039",
    "end": "1233840"
  },
  {
    "text": "so uh this is a flight control station using face tracking and a machine learning model using my pet DJI TE drone",
    "start": "1233840",
    "end": "1242640"
  },
  {
    "text": "that some of you may have seen last year and a DualShock 4 joystick so uh let's",
    "start": "1242640",
    "end": "1248799"
  },
  {
    "text": "take a quick look at the hardware if",
    "start": "1248799",
    "end": "1255000"
  },
  {
    "text": "we let's see",
    "start": "1255000",
    "end": "1260240"
  },
  {
    "text": "make show",
    "start": "1260919",
    "end": "1264158"
  },
  {
    "text": "video here's my camera there's my uh DualShock",
    "start": "1268840",
    "end": "1273880"
  },
  {
    "text": "controller stolen from one of my children this is my TE drone that I'm pulling out",
    "start": "1273880",
    "end": "1281200"
  },
  {
    "text": "of the case right now along with a battery that I'm going to put into",
    "start": "1281200",
    "end": "1286080"
  },
  {
    "text": "it let's boot it up the T actually has two cameras it has",
    "start": "1287480",
    "end": "1293120"
  },
  {
    "text": "one camera on the front which is an HD camera and it has a second camera on the bottom which is low resolution generally",
    "start": "1293120",
    "end": "1300320"
  },
  {
    "text": "used for flight stabilization so now that we've seen what we're going",
    "start": "1300320",
    "end": "1305600"
  },
  {
    "text": "to be playing with here so for this we're also going to bring in Gobot gobot is a uh physical",
    "start": "1305600",
    "end": "1313919"
  },
  {
    "text": "computing framework uh that's been around for a while that I'm the original author of has a different maintainer now",
    "start": "1313919",
    "end": "1320080"
  },
  {
    "text": "um supports many different pieces of hardware and software running it from your embedded Linux and that's going to use for the control system we're also",
    "start": "1320080",
    "end": "1326640"
  },
  {
    "text": "going to use a UNET face detection model which is a very efficient model from a research team in China and just a quick",
    "start": "1326640",
    "end": "1334400"
  },
  {
    "text": "briefing on how computer vision models work um basically we take the images the",
    "start": "1334400",
    "end": "1340159"
  },
  {
    "text": "input layer is just trying to locate where there are actual faces then another hidden layer says \"Oh here are",
    "start": "1340159",
    "end": "1346799"
  },
  {
    "text": "features of those faces.\" And then another hidden layer maybe says \"Here's the actual face itself.\" At that point",
    "start": "1346799",
    "end": "1353440"
  },
  {
    "text": "maybe we use a face recognizer network this is just detecting the faces not recognizing them and here's the",
    "start": "1353440",
    "end": "1360720"
  },
  {
    "text": "architecture of what we're going to see here um we've got our video drone program which I'm controlling with the",
    "start": "1360720",
    "end": "1366720"
  },
  {
    "text": "DualShock 4 it's going to send the signals through Wi-Fi oh yeah i should connect through Wi-Fi shouldn't I let's",
    "start": "1366720",
    "end": "1373120"
  },
  {
    "text": "do that connect to the drone",
    "start": "1373120",
    "end": "1379000"
  },
  {
    "text": "there it is actually I should not connect to the",
    "start": "1381600",
    "end": "1386799"
  },
  {
    "text": "John if I want to show you the code connecting back to the conference Wi-Fi wait which is the conference",
    "start": "1386799",
    "end": "1394720"
  },
  {
    "text": "Wi-Fi i don't I'm not connected to that one there was another one a very long",
    "start": "1397159",
    "end": "1405240"
  },
  {
    "text": "name is it the auditorium",
    "start": "1405240",
    "end": "1410039"
  },
  {
    "text": "h a premature connection i hate when I do that what's the password for this",
    "start": "1410520",
    "end": "1417490"
  },
  {
    "text": "[Laughter] conference awesome at",
    "start": "1417490",
    "end": "1426919"
  },
  {
    "text": "BCN okay yeah sorry about that i got excited okay so that's going to communicate to the T the T is going to",
    "start": "1426919",
    "end": "1433520"
  },
  {
    "text": "send the video through a UDP stream and then we're going to pump that through to W was vision uh which is going to then",
    "start": "1433520",
    "end": "1440640"
  },
  {
    "text": "take that send that to the face detection model and then draw that onto our screen doing this with the GPU",
    "start": "1440640",
    "end": "1447240"
  },
  {
    "text": "acceleration so let's take a quick look at that config toml so our source is going to be the",
    "start": "1447240",
    "end": "1453440"
  },
  {
    "text": "UDP connection we're going to capture it using the FFmpeg and not just the webcam",
    "start": "1453440",
    "end": "1458720"
  },
  {
    "text": "we're going to CUDA enable and then we're going to pump that through the face detect YN",
    "start": "1458720",
    "end": "1465159"
  },
  {
    "text": "model so let's take a quick look at the face detector code again this is a Tiny",
    "start": "1465159",
    "end": "1471279"
  },
  {
    "text": "Go program written compiled to web assembly we're going to create the face detector we do not need to know whether",
    "start": "1471279",
    "end": "1478480"
  },
  {
    "text": "or not there's a GPU present wasome Vision will automatically accelerate it if there is a GPU and will run in the",
    "start": "1478480",
    "end": "1484559"
  },
  {
    "text": "CPU mode only if there isn't and then the processing that we're going to do is",
    "start": "1484559",
    "end": "1489919"
  },
  {
    "text": "we're going to take that mat we're going to you tell the detector what the size",
    "start": "1489919",
    "end": "1494960"
  },
  {
    "text": "of the image is and then we're going to try to detect the faces when we take those faces we're going to draw them",
    "start": "1494960",
    "end": "1501120"
  },
  {
    "text": "onto the output mat and then display it drawing the faces is simply taking that",
    "start": "1501120",
    "end": "1508000"
  },
  {
    "text": "uh list of faces which is considered in another mat remember everything in OpenCV is a mat and for each one of",
    "start": "1508000",
    "end": "1514960"
  },
  {
    "text": "those faces we locate the face rectangle features like the left and the right eye",
    "start": "1514960",
    "end": "1520159"
  },
  {
    "text": "and then we draw them on to that output interestingly one other thing we do is we store the face data into the data",
    "start": "1520159",
    "end": "1529200"
  },
  {
    "text": "store for that particular frame in case we want to do something downstream like blur the faces for",
    "start": "1529200",
    "end": "1535720"
  },
  {
    "text": "example now a quick look at the video drone code itself that we're going to run talking to the drone we're going to",
    "start": "1535720",
    "end": "1541200"
  },
  {
    "text": "start the joystick we're going to start the drone all we really have to do um",
    "start": "1541200",
    "end": "1547039"
  },
  {
    "text": "luckily for us is we take and we create a very simple proxy two-line proxy that",
    "start": "1547039",
    "end": "1553840"
  },
  {
    "text": "forwards the drones video packets on so that WASM Vision can read them in we",
    "start": "1553840",
    "end": "1559919"
  },
  {
    "text": "only do this because it turns out the TE drone which some of us helped reverse engineer a couple of years ago uh you",
    "start": "1559919",
    "end": "1566320"
  },
  {
    "text": "have to get rid of the first two bytes to turn it into normal video all right here we",
    "start": "1566320",
    "end": "1572919"
  },
  {
    "text": "go now we connect to the drone is it still awake still",
    "start": "1572919",
    "end": "1581278"
  },
  {
    "text": "awake turn off that video all right so",
    "start": "1583799",
    "end": "1590919"
  },
  {
    "text": "first we uh we run the drone",
    "start": "1590919",
    "end": "1597799"
  },
  {
    "text": "then we run the",
    "start": "1600440",
    "end": "1604158"
  },
  {
    "text": "stream right",
    "start": "1607080",
    "end": "1611440"
  },
  {
    "text": "right wonder if there's something wrong with my my GPU is I have a GPU in my",
    "start": "1616520",
    "end": "1622919"
  },
  {
    "text": "laptop well here's what we can do",
    "start": "1622919",
    "end": "1627880"
  },
  {
    "text": "oh wait let's just try one more time before",
    "start": "1629200",
    "end": "1632880"
  },
  {
    "text": "we Something's going wrong oh am I leaving do I have another video window open by",
    "start": "1635960",
    "end": "1643520"
  },
  {
    "text": "accident no it doesn't look like it okay well there's one thing we can do which",
    "start": "1651159",
    "end": "1656400"
  },
  {
    "text": "is turn off the GPU since that is an experimental feature i guess it would be under demos",
    "start": "1656400",
    "end": "1663360"
  },
  {
    "text": "video drone config i'm just guessing but that's probably a pretty good",
    "start": "1663360",
    "end": "1671360"
  },
  {
    "text": "possibility yeah that looks like that's we'll have to run in CPU mode so it's going to be a lot",
    "start": "1677799",
    "end": "1683320"
  },
  {
    "text": "slower you'll see a lot more latency all",
    "start": "1683320",
    "end": "1690760"
  },
  {
    "text": "right let's move my camera out of the way my other",
    "start": "1690760",
    "end": "1696720"
  },
  {
    "text": "camera yeah you can see it's a lot slower without the GPU but we'll see it work",
    "start": "1699559",
    "end": "1706799"
  },
  {
    "text": "anyway let's see if it can find any people",
    "start": "1708279",
    "end": "1713559"
  },
  {
    "text": "there's one now there's",
    "start": "1719520",
    "end": "1724080"
  },
  {
    "text": "humans you only have to stay away from it for about 8 minutes and then the battery will be",
    "start": "1725559",
    "end": "1733200"
  },
  {
    "text": "dead don't think you people up there are safe",
    "start": "1733320",
    "end": "1738679"
  },
  {
    "text": "i was told I should only fly over the walkway let's see if I can get a shot of",
    "start": "1740080",
    "end": "1746960"
  },
  {
    "text": "the stage oh got to refresh the video there",
    "start": "1746960",
    "end": "1752799"
  },
  {
    "text": "it is yep web Assembly is getting pretty",
    "start": "1752799",
    "end": "1759279"
  },
  {
    "text": "real I would say",
    "start": "1759279",
    "end": "1762919"
  },
  {
    "text": "so this is just running with the CPU only with the GPU it's actually quite a lot faster i'm going to have to look in",
    "start": "1770880",
    "end": "1776480"
  },
  {
    "text": "and see what went wrong there during this morning's release i guess we're going to have a 0.3.1 release this",
    "start": "1776480",
    "end": "1782200"
  },
  {
    "text": "afternoon all right well that's it for me come home little [Music]",
    "start": "1782200",
    "end": "1788279"
  },
  {
    "text": "drone all right",
    "start": "1788279",
    "end": "1792279"
  },
  {
    "text": "so um let's turn off the drone it landed yes that's good it knew",
    "start": "1798159",
    "end": "1804159"
  },
  {
    "text": "it landed i'm going to fly the drone entirely with AI next demo um so I hope",
    "start": "1804159",
    "end": "1810480"
  },
  {
    "text": "that was fun for all of you uh version.3 is available now and uh version 0.3.1",
    "start": "1810480",
    "end": "1816480"
  },
  {
    "text": "about a few hours later um check it out wasvision.com uh you can",
    "start": "1816480",
    "end": "1822240"
  },
  {
    "text": "find out more on the feathers at wasamvision.mmastad on social and at blue sky",
    "start": "1822240",
    "end": "1827799"
  },
  {
    "text": "wasvision.com and thank you very much [Applause]",
    "start": "1827799",
    "end": "1836819"
  },
  {
    "text": "if you want to see the OAMA demo I will figure out what that is by lunchtime and",
    "start": "1838960",
    "end": "1844559"
  },
  {
    "text": "uh I can show it to you because I swear that worked in my hotel room on the way over here any",
    "start": "1844559",
    "end": "1852880"
  },
  {
    "text": "questions everyone's just stunned yeah the",
    "start": "1854760",
    "end": "1862760"
  },
  {
    "text": "um No nothing yet nothing so far all right we'll see you at lunch",
    "start": "1862760",
    "end": "1869279"
  },
  {
    "text": "thank you very much",
    "start": "1869279",
    "end": "1872760"
  }
]