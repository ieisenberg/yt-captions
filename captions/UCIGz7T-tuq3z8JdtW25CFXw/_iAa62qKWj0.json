[
  {
    "text": "[Music]",
    "start": "1490",
    "end": "7109"
  },
  {
    "text": "my name is Masashi yosimura and I'm from",
    "start": "10040",
    "end": "12759"
  },
  {
    "text": "entity entity Corporation in Japan and I",
    "start": "12759",
    "end": "16520"
  },
  {
    "text": "repres comp L compiler that translates",
    "start": "16520",
    "end": "20439"
  },
  {
    "text": "relux 64 binary",
    "start": "20439",
    "end": "23519"
  },
  {
    "text": "to web",
    "start": "23519",
    "end": "26759"
  },
  {
    "text": "assembly okay so first I briefly explain",
    "start": "27599",
    "end": "31240"
  },
  {
    "text": "the features of vom vom is a parture",
    "start": "31240",
    "end": "34360"
  },
  {
    "text": "machine instruction set and currently",
    "start": "34360",
    "end": "37360"
  },
  {
    "text": "this is used on servers as well as",
    "start": "37360",
    "end": "40039"
  },
  {
    "text": "browsers in production",
    "start": "40039",
    "end": "42760"
  },
  {
    "text": "environments and compared to existing",
    "start": "42760",
    "end": "45960"
  },
  {
    "text": "applications there are mainly two",
    "start": "45960",
    "end": "48199"
  },
  {
    "text": "advantages portability and security and",
    "start": "48199",
    "end": "51879"
  },
  {
    "text": "in portability wasm enables us to run",
    "start": "51879",
    "end": "55480"
  },
  {
    "text": "applications on both browsers and",
    "start": "55480",
    "end": "58039"
  },
  {
    "text": "servers without modification",
    "start": "58039",
    "end": "61920"
  },
  {
    "text": "and of course wasm doesn't depend on CP",
    "start": "64799",
    "end": "67479"
  },
  {
    "text": "architectures so that we can run wasm",
    "start": "67479",
    "end": "70400"
  },
  {
    "text": "applications on computers with various",
    "start": "70400",
    "end": "73320"
  },
  {
    "text": "CP architectures without",
    "start": "73320",
    "end": "77200"
  },
  {
    "text": "modification and in Security in the case",
    "start": "78080",
    "end": "81240"
  },
  {
    "text": "of uh outside browsers wasm is highly",
    "start": "81240",
    "end": "85280"
  },
  {
    "text": "isolated from the host canel by",
    "start": "85280",
    "end": "88600"
  },
  {
    "text": "Washi and also wasm has a harbard",
    "start": "88600",
    "end": "92119"
  },
  {
    "text": "architecture design so the memory of the",
    "start": "92119",
    "end": "95360"
  },
  {
    "text": "wasm instance is separated into rer Data",
    "start": "95360",
    "end": "99240"
  },
  {
    "text": "memory and code",
    "start": "99240",
    "end": "101399"
  },
  {
    "text": "memory and the code of vasm can access",
    "start": "101399",
    "end": "105280"
  },
  {
    "text": "uh can access only to r a data memory",
    "start": "105280",
    "end": "108759"
  },
  {
    "text": "and that which increases",
    "start": "108759",
    "end": "112960"
  },
  {
    "text": "security however uh there are some",
    "start": "116680",
    "end": "120399"
  },
  {
    "text": "limitations in the capability of",
    "start": "120399",
    "end": "122759"
  },
  {
    "text": "applications first RM can jump to only",
    "start": "122759",
    "end": "125920"
  },
  {
    "text": "the codes that are determined at",
    "start": "125920",
    "end": "128360"
  },
  {
    "text": "compared time in other words it is",
    "start": "128360",
    "end": "131400"
  },
  {
    "text": "impossible to indirectly jump to the Cod",
    "start": "131400",
    "end": "135280"
  },
  {
    "text": "generate it in the data",
    "start": "135280",
    "end": "138720"
  },
  {
    "text": "memory and second wash implementation",
    "start": "138720",
    "end": "142160"
  },
  {
    "text": "doesn't cover all POS apis for example",
    "start": "142160",
    "end": "145879"
  },
  {
    "text": "for and exac and so on and so when you",
    "start": "145879",
    "end": "150519"
  },
  {
    "text": "develop VM applications you should",
    "start": "150519",
    "end": "153120"
  },
  {
    "text": "consider the limitations when you use",
    "start": "153120",
    "end": "155879"
  },
  {
    "text": "Washi run",
    "start": "155879",
    "end": "158519"
  },
  {
    "text": "times and so many programming languages",
    "start": "160200",
    "end": "163599"
  },
  {
    "text": "support RM for example C C++ rust go and",
    "start": "163599",
    "end": "169280"
  },
  {
    "text": "so on however it isn't easy to build",
    "start": "169280",
    "end": "173080"
  },
  {
    "text": "wasm in some cases as",
    "start": "173080",
    "end": "175519"
  },
  {
    "text": "follows mainly there are three such",
    "start": "175519",
    "end": "178680"
  },
  {
    "text": "cases uh first the programming language",
    "start": "178680",
    "end": "182400"
  },
  {
    "text": "that you want to use doesn't completely",
    "start": "182400",
    "end": "185040"
  },
  {
    "text": "support",
    "start": "185040",
    "end": "186519"
  },
  {
    "text": "vers uh many major languages have begun",
    "start": "186519",
    "end": "190879"
  },
  {
    "text": "to support ver but only a limited number",
    "start": "190879",
    "end": "194760"
  },
  {
    "text": "of languages are available in production",
    "start": "194760",
    "end": "198680"
  },
  {
    "text": "environment",
    "start": "198680",
    "end": "200200"
  },
  {
    "text": "now and also you could use a awesome was",
    "start": "200200",
    "end": "204000"
  },
  {
    "text": "language repos story as reference",
    "start": "204000",
    "end": "208319"
  },
  {
    "text": "information and second",
    "start": "208319",
    "end": "210519"
  },
  {
    "text": "binaries are available but the sour",
    "start": "210519",
    "end": "212640"
  },
  {
    "text": "scores of the binaries are not",
    "start": "212640",
    "end": "215200"
  },
  {
    "text": "available recently the number of Open",
    "start": "215200",
    "end": "217959"
  },
  {
    "text": "Source programs has increased but",
    "start": "217959",
    "end": "220760"
  },
  {
    "text": "several programs are still not",
    "start": "220760",
    "end": "223840"
  },
  {
    "text": "published and third the case of being",
    "start": "223840",
    "end": "227239"
  },
  {
    "text": "difficult to build build the",
    "start": "227239",
    "end": "230640"
  },
  {
    "text": "S if the dependent liaries are not",
    "start": "230640",
    "end": "234680"
  },
  {
    "text": "public or unavailable for some reasons",
    "start": "234680",
    "end": "238400"
  },
  {
    "text": "it is difficult to generate the wasm",
    "start": "238400",
    "end": "240799"
  },
  {
    "text": "binary of the target",
    "start": "240799",
    "end": "243079"
  },
  {
    "text": "program considering these facts I",
    "start": "243079",
    "end": "245920"
  },
  {
    "text": "propose running binaries on the was",
    "start": "245920",
    "end": "250200"
  },
  {
    "text": "enironment okay so next I will show",
    "start": "252560",
    "end": "255480"
  },
  {
    "text": "existing projects that run reux binaries",
    "start": "255480",
    "end": "258600"
  },
  {
    "text": "on wasm the first project is",
    "start": "258600",
    "end": "261840"
  },
  {
    "text": "tin this is x86 and risk 5 ulator",
    "start": "261840",
    "end": "266600"
  },
  {
    "text": "available on the browser and reux count",
    "start": "266600",
    "end": "270039"
  },
  {
    "text": "can run on the BR with tiny",
    "start": "270039",
    "end": "272479"
  },
  {
    "text": "mu and the second project is coner WM",
    "start": "272479",
    "end": "276840"
  },
  {
    "text": "and this enables as to run reux scanner",
    "start": "276840",
    "end": "279960"
  },
  {
    "text": "and content run times with emulators",
    "start": "279960",
    "end": "282440"
  },
  {
    "text": "compared to was for example tiny",
    "start": "282440",
    "end": "286199"
  },
  {
    "text": "mu and this can run containers without",
    "start": "286199",
    "end": "289840"
  },
  {
    "text": "modification both on the browser and",
    "start": "289840",
    "end": "292360"
  },
  {
    "text": "Washi run",
    "start": "292360",
    "end": "294000"
  },
  {
    "text": "times however these projects use BM on",
    "start": "294000",
    "end": "297960"
  },
  {
    "text": "emulators possibly in ing Rush",
    "start": "297960",
    "end": "300560"
  },
  {
    "text": "performance",
    "start": "300560",
    "end": "302479"
  },
  {
    "text": "overheads considering this fact we",
    "start": "302479",
    "end": "305039"
  },
  {
    "text": "propose the method of LD compiling reux",
    "start": "305039",
    "end": "308560"
  },
  {
    "text": "binaries to",
    "start": "308560",
    "end": "311240"
  },
  {
    "text": "wasm so I propose AR comp L compiler",
    "start": "311680",
    "end": "316320"
  },
  {
    "text": "from reux F binary to",
    "start": "316320",
    "end": "318800"
  },
  {
    "text": "wasm in this project first the input is",
    "start": "318800",
    "end": "322560"
  },
  {
    "text": "f binary and we compare the binary to",
    "start": "322560",
    "end": "325840"
  },
  {
    "text": "erbm bit cord by aircom lifting measure",
    "start": "325840",
    "end": "330560"
  },
  {
    "text": "and second we generate the wasm binary",
    "start": "330560",
    "end": "334080"
  },
  {
    "text": "by existing compiler collections for",
    "start": "334080",
    "end": "337039"
  },
  {
    "text": "example Ms group 10 or was SDK while",
    "start": "337039",
    "end": "340800"
  },
  {
    "text": "comparing the lbm bit Cod and statically",
    "start": "340800",
    "end": "344080"
  },
  {
    "text": "rinking the LC run time and lcom runtime",
    "start": "344080",
    "end": "348400"
  },
  {
    "text": "includes reux system called imulation",
    "start": "348400",
    "end": "351560"
  },
  {
    "text": "and so",
    "start": "351560",
    "end": "353919"
  },
  {
    "text": "on okay so next I will show the demo of",
    "start": "354280",
    "end": "357560"
  },
  {
    "text": "er com the demo program is a new network",
    "start": "357560",
    "end": "361960"
  },
  {
    "text": "for trainings am database written with c",
    "start": "361960",
    "end": "365600"
  },
  {
    "text": "c language and this D program is public",
    "start": "365600",
    "end": "369759"
  },
  {
    "text": "on",
    "start": "369759",
    "end": "371080"
  },
  {
    "text": "GitHub and amist database is a large",
    "start": "371080",
    "end": "375240"
  },
  {
    "text": "popular database of handwritten digits",
    "start": "375240",
    "end": "378160"
  },
  {
    "text": "for mainly machine learning training of",
    "start": "378160",
    "end": "381560"
  },
  {
    "text": "image processing",
    "start": "381560",
    "end": "384560"
  },
  {
    "text": "systems and many handwritten digits as",
    "start": "384800",
    "end": "388199"
  },
  {
    "text": "shown in this figure include it in the",
    "start": "388199",
    "end": "391000"
  },
  {
    "text": "database and you can check the accuracy",
    "start": "391000",
    "end": "394120"
  },
  {
    "text": "of your model using",
    "start": "394120",
    "end": "397199"
  },
  {
    "text": "it and so this program keeps training",
    "start": "397199",
    "end": "402080"
  },
  {
    "text": "the administer database and keeps",
    "start": "402080",
    "end": "404639"
  },
  {
    "text": "outputting so aous and",
    "start": "404639",
    "end": "408160"
  },
  {
    "text": "accuracy then I will show the demo",
    "start": "408160",
    "end": "411400"
  },
  {
    "text": "but I will show video of the demo uh for",
    "start": "411400",
    "end": "416720"
  },
  {
    "text": "for reasons such as it takes a few",
    "start": "416720",
    "end": "419599"
  },
  {
    "text": "minutes to translate by",
    "start": "419599",
    "end": "423319"
  },
  {
    "text": "FC okay okay so this is a video of the",
    "start": "425280",
    "end": "429800"
  },
  {
    "text": "demo and you can see that the lcom",
    "start": "429800",
    "end": "432720"
  },
  {
    "text": "container has already",
    "start": "432720",
    "end": "435840"
  },
  {
    "text": "started and first I will show how the M",
    "start": "435840",
    "end": "439120"
  },
  {
    "text": "program is",
    "start": "439120",
    "end": "441800"
  },
  {
    "text": "executed and the directory is examples",
    "start": "442280",
    "end": "446280"
  },
  {
    "text": "new network PRC and we can build this",
    "start": "446280",
    "end": "449240"
  },
  {
    "text": "program",
    "start": "449240",
    "end": "450440"
  },
  {
    "text": "by make",
    "start": "450440",
    "end": "453479"
  },
  {
    "text": "command Okay so as the generated M",
    "start": "454840",
    "end": "458840"
  },
  {
    "text": "binary is statically linked",
    "start": "458840",
    "end": "461680"
  },
  {
    "text": "a64",
    "start": "461680",
    "end": "463680"
  },
  {
    "text": "binary and then I will execute M",
    "start": "463680",
    "end": "468599"
  },
  {
    "text": "binary okay",
    "start": "470840",
    "end": "472130"
  },
  {
    "text": "[Music]",
    "start": "472130",
    "end": "474080"
  },
  {
    "text": "so and and here can see two numbers of",
    "start": "474080",
    "end": "479039"
  },
  {
    "text": "Regal and accuracy and you can see that",
    "start": "479039",
    "end": "482240"
  },
  {
    "text": "the aage Ross continues to decrease and",
    "start": "482240",
    "end": "485599"
  },
  {
    "text": "accuracy continues to increase",
    "start": "485599",
    "end": "489360"
  },
  {
    "text": "okay okay so second I will translate",
    "start": "489360",
    "end": "492800"
  },
  {
    "text": "this Mist a64 binary to was",
    "start": "492800",
    "end": "496720"
  },
  {
    "text": "binary and we can try LC translation in",
    "start": "496720",
    "end": "500759"
  },
  {
    "text": "the LC being directory by ercom Dosh",
    "start": "500759",
    "end": "506840"
  },
  {
    "text": "file Okay so",
    "start": "508000",
    "end": "510520"
  },
  {
    "text": "I will",
    "start": "510520",
    "end": "511839"
  },
  {
    "text": "translate and Target this",
    "start": "511839",
    "end": "515240"
  },
  {
    "text": "asfor and execute arom s and examples am",
    "start": "515240",
    "end": "521200"
  },
  {
    "text": "neur Network pry and",
    "start": "521200",
    "end": "524599"
  },
  {
    "text": "amist okay so and and now ER comp rating",
    "start": "528200",
    "end": "533600"
  },
  {
    "text": "binary to was and it takes a few a few",
    "start": "533600",
    "end": "536560"
  },
  {
    "text": "minutes to translate so I proceed with",
    "start": "536560",
    "end": "538920"
  },
  {
    "text": "the video",
    "start": "538920",
    "end": "541440"
  },
  {
    "text": "a",
    "start": "544600",
    "end": "545480"
  },
  {
    "text": "sorry okay okay at this time translation",
    "start": "545480",
    "end": "549880"
  },
  {
    "text": "has finished and",
    "start": "549880",
    "end": "551839"
  },
  {
    "text": "the uh exit was was",
    "start": "551839",
    "end": "557720"
  },
  {
    "text": "generated yeah so and by the way you can",
    "start": "557720",
    "end": "560920"
  },
  {
    "text": "see it takes 1 minute uh 47 seconds to",
    "start": "560920",
    "end": "567360"
  },
  {
    "text": "translate so then I can execute this was",
    "start": "567560",
    "end": "571040"
  },
  {
    "text": "file by was time but it is very slow to",
    "start": "571040",
    "end": "574560"
  },
  {
    "text": "execute by interpret model so I will a",
    "start": "574560",
    "end": "578440"
  },
  {
    "text": "to compile this wasm file by was h r",
    "start": "578440",
    "end": "583839"
  },
  {
    "text": "time so now was compile the was binary",
    "start": "586399",
    "end": "593279"
  },
  {
    "text": "okay so and it takes uh H sorry and it",
    "start": "606600",
    "end": "610399"
  },
  {
    "text": "takes a uh few minutes to compile so I",
    "start": "610399",
    "end": "615399"
  },
  {
    "text": "proceed with the",
    "start": "615399",
    "end": "617360"
  },
  {
    "text": "video",
    "start": "617360",
    "end": "620360"
  },
  {
    "text": "okay oh okay",
    "start": "620720",
    "end": "624200"
  },
  {
    "text": "s",
    "start": "624200",
    "end": "626720"
  },
  {
    "text": "okay okay so and uh now now at",
    "start": "626720",
    "end": "630600"
  },
  {
    "text": "compilation has finished and it takes 1",
    "start": "630600",
    "end": "634000"
  },
  {
    "text": "minute uh 54 seconds to compile okay uh",
    "start": "634000",
    "end": "639760"
  },
  {
    "text": "finally I can execute the was binary as",
    "start": "639760",
    "end": "644880"
  },
  {
    "text": "fors so L under score exit wasn't is the",
    "start": "657240",
    "end": "660920"
  },
  {
    "text": "target wasn't",
    "start": "660920",
    "end": "663600"
  },
  {
    "text": "binary yeah great so the speed is a a",
    "start": "671680",
    "end": "676040"
  },
  {
    "text": "little slow but you can see that the uh",
    "start": "676040",
    "end": "679560"
  },
  {
    "text": "training is in",
    "start": "679560",
    "end": "680959"
  },
  {
    "text": "progress and if if I proceed with the",
    "start": "680959",
    "end": "684560"
  },
  {
    "text": "video you can see that the training",
    "start": "684560",
    "end": "687440"
  },
  {
    "text": "process is correct",
    "start": "687440",
    "end": "691079"
  },
  {
    "text": "okay so this concludes the demonstration",
    "start": "693959",
    "end": "697000"
  },
  {
    "text": "let's return to the presentation",
    "start": "697000",
    "end": "701720"
  },
  {
    "text": "okay okay so I will explain the details",
    "start": "710680",
    "end": "714040"
  },
  {
    "text": "of the translation of L com and reux L",
    "start": "714040",
    "end": "718399"
  },
  {
    "text": "binary has two major sections data",
    "start": "718399",
    "end": "721279"
  },
  {
    "text": "sections and C sections so we should",
    "start": "721279",
    "end": "724320"
  },
  {
    "text": "convert this these sections to the lbm",
    "start": "724320",
    "end": "727120"
  },
  {
    "text": "bit",
    "start": "727120",
    "end": "728079"
  },
  {
    "text": "code and as I as I explained uh sorry as",
    "start": "728079",
    "end": "731959"
  },
  {
    "text": "I explained earlier the a com lifting",
    "start": "731959",
    "end": "734959"
  },
  {
    "text": "mure compares the a binary to a BMB C",
    "start": "734959",
    "end": "739560"
  },
  {
    "text": "and it consists of uh two",
    "start": "739560",
    "end": "743199"
  },
  {
    "text": "measures and the first meure is aircom",
    "start": "743199",
    "end": "747000"
  },
  {
    "text": "rter uh this passes are L binary and",
    "start": "747000",
    "end": "750480"
  },
  {
    "text": "allocat the memory uh for the data",
    "start": "750480",
    "end": "753160"
  },
  {
    "text": "sections of the L binary on the lbm bit",
    "start": "753160",
    "end": "758000"
  },
  {
    "text": "Cod and also the LOM lifter detects the",
    "start": "758000",
    "end": "762040"
  },
  {
    "text": "function of the ER binary and inputs",
    "start": "762040",
    "end": "764880"
  },
  {
    "text": "those functions to the second module",
    "start": "764880",
    "end": "769040"
  },
  {
    "text": "rir and rir is a library for lifting",
    "start": "770279",
    "end": "774839"
  },
  {
    "text": "machine code to lbm be",
    "start": "774839",
    "end": "777360"
  },
  {
    "text": "code and r is an open source project of",
    "start": "777360",
    "end": "781320"
  },
  {
    "text": "lifting bits organization and supports",
    "start": "781320",
    "end": "784079"
  },
  {
    "text": "similar CPU",
    "start": "784079",
    "end": "785480"
  },
  {
    "text": "architectures uh for example ex64 Spar",
    "start": "785480",
    "end": "789160"
  },
  {
    "text": "32 and X x86 and so",
    "start": "789160",
    "end": "794399"
  },
  {
    "text": "on and so R receives the function from",
    "start": "795720",
    "end": "799120"
  },
  {
    "text": "the LC lifter and converts every",
    "start": "799120",
    "end": "801839"
  },
  {
    "text": "function of the L binary to the function",
    "start": "801839",
    "end": "804839"
  },
  {
    "text": "of the L",
    "start": "804839",
    "end": "806760"
  },
  {
    "text": "vmir for example as you can see see in",
    "start": "806760",
    "end": "809760"
  },
  {
    "text": "the figure underscore underscore",
    "start": "809760",
    "end": "812880"
  },
  {
    "text": "function on the AL binary is converted",
    "start": "812880",
    "end": "815920"
  },
  {
    "text": "to underscore underscore LIF",
    "start": "815920",
    "end": "818600"
  },
  {
    "text": "function and underscore f one function",
    "start": "818600",
    "end": "821560"
  },
  {
    "text": "is converted to underscore F onecore LIF",
    "start": "821560",
    "end": "825040"
  },
  {
    "text": "function uh in the arbm",
    "start": "825040",
    "end": "829240"
  },
  {
    "text": "IR okay so next in converting the arbnb",
    "start": "831720",
    "end": "835240"
  },
  {
    "text": "code to one statically link the arbnb",
    "start": "835240",
    "end": "838680"
  },
  {
    "text": "code and erom",
    "start": "838680",
    "end": "841519"
  },
  {
    "text": "runtime erom runtime includes the",
    "start": "841519",
    "end": "845040"
  },
  {
    "text": "runtime memory of the stack and he hip",
    "start": "845040",
    "end": "848040"
  },
  {
    "text": "area of the a",
    "start": "848040",
    "end": "850360"
  },
  {
    "text": "binary and also a com runtime includes",
    "start": "850360",
    "end": "853839"
  },
  {
    "text": "the program of reux system called",
    "start": "853839",
    "end": "857160"
  },
  {
    "text": "emulation",
    "start": "857160",
    "end": "858720"
  },
  {
    "text": "uh and existing compiler M Ms script 10",
    "start": "858720",
    "end": "863920"
  },
  {
    "text": "or wask Compares these two modules to",
    "start": "863920",
    "end": "867360"
  },
  {
    "text": "was",
    "start": "867360",
    "end": "870360"
  },
  {
    "text": "okay so uh in the reux system called",
    "start": "872680",
    "end": "875920"
  },
  {
    "text": "ulation there are two ways of",
    "start": "875920",
    "end": "878079"
  },
  {
    "text": "implementing the",
    "start": "878079",
    "end": "879600"
  },
  {
    "text": "imulation uh the way of implementing",
    "start": "879600",
    "end": "882440"
  },
  {
    "text": "depends on the Rish",
    "start": "882440",
    "end": "884560"
  },
  {
    "text": "implementation in P one if the ri",
    "start": "884560",
    "end": "887959"
  },
  {
    "text": "implements the target system call lcom",
    "start": "887959",
    "end": "890920"
  },
  {
    "text": "just uses the ri function as shown in",
    "start": "890920",
    "end": "894199"
  },
  {
    "text": "this figure of the right system C",
    "start": "894199",
    "end": "899480"
  },
  {
    "text": "and in pattern two if the ri doesn't",
    "start": "902040",
    "end": "905440"
  },
  {
    "text": "implement the target system core fcom Su",
    "start": "905440",
    "end": "909279"
  },
  {
    "text": "implements their system code as shown in",
    "start": "909279",
    "end": "912040"
  },
  {
    "text": "this figure of BRK system code and as",
    "start": "912040",
    "end": "916560"
  },
  {
    "text": "you can see this Cod doesn't call the",
    "start": "916560",
    "end": "919360"
  },
  {
    "text": "BRK",
    "start": "919360",
    "end": "921920"
  },
  {
    "text": "function okay so next I will show the",
    "start": "925160",
    "end": "927759"
  },
  {
    "text": "performance of the execution speed of",
    "start": "927759",
    "end": "930319"
  },
  {
    "text": "the generated wasn't",
    "start": "930319",
    "end": "932319"
  },
  {
    "text": "binary uh okay so I use a Rak Benchmark",
    "start": "932319",
    "end": "937560"
  },
  {
    "text": "program for Benchmark tests and RAR is a",
    "start": "937560",
    "end": "941839"
  },
  {
    "text": "program to evaluate 64bit uh couting",
    "start": "941839",
    "end": "945959"
  },
  {
    "text": "Point operations per",
    "start": "945959",
    "end": "948360"
  },
  {
    "text": "second and we use the lia program",
    "start": "948360",
    "end": "951920"
  },
  {
    "text": "written in C language as benchmark test",
    "start": "951920",
    "end": "955199"
  },
  {
    "text": "so we we generate Target a binary by",
    "start": "955199",
    "end": "961199"
  },
  {
    "text": "Quan and so I will show the methods to",
    "start": "963040",
    "end": "965880"
  },
  {
    "text": "measure the",
    "start": "965880",
    "end": "967120"
  },
  {
    "text": "performance and LC is a technique of",
    "start": "967120",
    "end": "970319"
  },
  {
    "text": "binary binary translation between",
    "start": "970319",
    "end": "972680"
  },
  {
    "text": "different binary formats so we compare",
    "start": "972680",
    "end": "976160"
  },
  {
    "text": "the execution speed of running the",
    "start": "976160",
    "end": "978680"
  },
  {
    "text": "binary of different architectures from",
    "start": "978680",
    "end": "981440"
  },
  {
    "text": "the host",
    "start": "981440",
    "end": "983360"
  },
  {
    "text": "environment and currently a com supports",
    "start": "983360",
    "end": "986880"
  },
  {
    "text": "translating only A6 for binary so we",
    "start": "986880",
    "end": "991240"
  },
  {
    "text": "chosen a64 as a Target binary",
    "start": "991240",
    "end": "995279"
  },
  {
    "text": "architecture and x86 64 as a host",
    "start": "995279",
    "end": "999160"
  },
  {
    "text": "environment",
    "start": "999160",
    "end": "1001480"
  },
  {
    "text": "architecture and we use three methods",
    "start": "1001480",
    "end": "1004319"
  },
  {
    "text": "for measuring the performance of the",
    "start": "1004319",
    "end": "1007240"
  },
  {
    "text": "execution speed of the limac ex64",
    "start": "1007240",
    "end": "1012319"
  },
  {
    "text": "binary and the first method is qm",
    "start": "1012319",
    "end": "1016160"
  },
  {
    "text": "emulation in this method we execute use",
    "start": "1016160",
    "end": "1019199"
  },
  {
    "text": "the x64 binary by the qm ustion from x64",
    "start": "1019199",
    "end": "1024280"
  },
  {
    "text": "to x86",
    "start": "1024280",
    "end": "1027360"
  },
  {
    "text": "64 another uh second method is L",
    "start": "1027959",
    "end": "1032438"
  },
  {
    "text": "compilation from ex64 to x86",
    "start": "1032439",
    "end": "1036640"
  },
  {
    "text": "64 in this method we use AR comp and",
    "start": "1036640",
    "end": "1040520"
  },
  {
    "text": "Kuran to a compile to x86 64 a binary",
    "start": "1040520",
    "end": "1045319"
  },
  {
    "text": "and we directory executes a binary on",
    "start": "1045319",
    "end": "1048919"
  },
  {
    "text": "the host",
    "start": "1048919",
    "end": "1051440"
  },
  {
    "text": "environment and the third method is L",
    "start": "1051600",
    "end": "1055160"
  },
  {
    "text": "compilation from x64 to",
    "start": "1055160",
    "end": "1058360"
  },
  {
    "text": "wasm in this method we use l comp and",
    "start": "1058360",
    "end": "1062000"
  },
  {
    "text": "wask to a compile to was binary and",
    "start": "1062000",
    "end": "1066280"
  },
  {
    "text": "execute the was binary by was long time",
    "start": "1066280",
    "end": "1070520"
  },
  {
    "text": "furthermore in the sou method we a to",
    "start": "1070520",
    "end": "1073840"
  },
  {
    "text": "compile the wasm binary by was which and",
    "start": "1073840",
    "end": "1076919"
  },
  {
    "text": "execute the binary uh not not interpret",
    "start": "1076919",
    "end": "1081799"
  },
  {
    "text": "model okay so here are the me",
    "start": "1084559",
    "end": "1087679"
  },
  {
    "text": "measurement results and impact Benchmark",
    "start": "1087679",
    "end": "1091200"
  },
  {
    "text": "evaluates a 64bit floating Point",
    "start": "1091200",
    "end": "1093679"
  },
  {
    "text": "operations per seconds so the number is",
    "start": "1093679",
    "end": "1096600"
  },
  {
    "text": "larger the execution speed is",
    "start": "1096600",
    "end": "1100919"
  },
  {
    "text": "faster as you can see in the current",
    "start": "1101880",
    "end": "1105440"
  },
  {
    "text": "implementation comparing methods one and",
    "start": "1105440",
    "end": "1108280"
  },
  {
    "text": "one and two the L compilation is a",
    "start": "1108280",
    "end": "1111880"
  },
  {
    "text": "little faster than qm",
    "start": "1111880",
    "end": "1115480"
  },
  {
    "text": "emulation and comparing method one two",
    "start": "1115480",
    "end": "1118960"
  },
  {
    "text": "and three the performance of method 3 is",
    "start": "1118960",
    "end": "1122200"
  },
  {
    "text": "slower than the method one two and",
    "start": "1122200",
    "end": "1125280"
  },
  {
    "text": "method three is 0 uh 34 times as first",
    "start": "1125280",
    "end": "1129760"
  },
  {
    "text": "as method",
    "start": "1129760",
    "end": "1131400"
  },
  {
    "text": "two and by the way I measure the IMPACT",
    "start": "1131400",
    "end": "1135159"
  },
  {
    "text": "program performance compared from sourc",
    "start": "1135159",
    "end": "1138799"
  },
  {
    "text": "not bin binary",
    "start": "1138799",
    "end": "1140640"
  },
  {
    "text": "translation and found that the",
    "start": "1140640",
    "end": "1143360"
  },
  {
    "text": "performance of the was impact binary is",
    "start": "1143360",
    "end": "1147000"
  },
  {
    "text": "0. 51 times as fast as the performance",
    "start": "1147000",
    "end": "1151679"
  },
  {
    "text": "of the a 64",
    "start": "1151679",
    "end": "1154679"
  },
  {
    "text": "binary and at this is show since wasm is",
    "start": "1154679",
    "end": "1159799"
  },
  {
    "text": "slower than native in the first place so",
    "start": "1159799",
    "end": "1163840"
  },
  {
    "text": "I consider that it is inevitable that",
    "start": "1163840",
    "end": "1167039"
  },
  {
    "text": "method 3 will be thr the method one and",
    "start": "1167039",
    "end": "1172679"
  },
  {
    "text": "two okay so I will show the Future",
    "start": "1176600",
    "end": "1180039"
  },
  {
    "text": "Works and first we will append the",
    "start": "1180039",
    "end": "1183120"
  },
  {
    "text": "system called",
    "start": "1183120",
    "end": "1184720"
  },
  {
    "text": "emulation and now e comp implements a",
    "start": "1184720",
    "end": "1187960"
  },
  {
    "text": "part of system course and a lot of",
    "start": "1187960",
    "end": "1190799"
  },
  {
    "text": "system CS are not",
    "start": "1190799",
    "end": "1193440"
  },
  {
    "text": "implemented and specifically when",
    "start": "1193440",
    "end": "1196360"
  },
  {
    "text": "targeting wasn't as out for the B",
    "start": "1196360",
    "end": "1199240"
  },
  {
    "text": "format some system CS are difficult to",
    "start": "1199240",
    "end": "1202679"
  },
  {
    "text": "implement for example fork exac and so",
    "start": "1202679",
    "end": "1207679"
  },
  {
    "text": "on and second supporting Dynamic",
    "start": "1207679",
    "end": "1211640"
  },
  {
    "text": "rinking uh elcom can compile their",
    "start": "1211640",
    "end": "1214679"
  },
  {
    "text": "static link a binary that Dynamic",
    "start": "1214679",
    "end": "1218039"
  },
  {
    "text": "rinking is an important function and",
    "start": "1218039",
    "end": "1220799"
  },
  {
    "text": "will support it in the",
    "start": "1220799",
    "end": "1224000"
  },
  {
    "text": "future and third I will make the",
    "start": "1224000",
    "end": "1227440"
  },
  {
    "text": "generated binary and lbnb SC more",
    "start": "1227440",
    "end": "1231240"
  },
  {
    "text": "efficient uh in the current",
    "start": "1231240",
    "end": "1233960"
  },
  {
    "text": "implementation the L binary is a faster",
    "start": "1233960",
    "end": "1237440"
  },
  {
    "text": "than qm emulation but I want to generate",
    "start": "1237440",
    "end": "1240840"
  },
  {
    "text": "the binary or lbn bit Cod that runs",
    "start": "1240840",
    "end": "1244720"
  },
  {
    "text": "considerably faster than Q",
    "start": "1244720",
    "end": "1248159"
  },
  {
    "text": "emulation so and also I I want to make",
    "start": "1248159",
    "end": "1251600"
  },
  {
    "text": "the translated was fter",
    "start": "1251600",
    "end": "1256039"
  },
  {
    "text": "uh next uh uh we will enables us to",
    "start": "1260200",
    "end": "1264520"
  },
  {
    "text": "translate the binary of the other CP",
    "start": "1264520",
    "end": "1268080"
  },
  {
    "text": "architectures and now erom can translate",
    "start": "1268080",
    "end": "1271240"
  },
  {
    "text": "only a64 binary",
    "start": "1271240",
    "end": "1276440"
  },
  {
    "text": "yeah uh next uh we support the output of",
    "start": "1279400",
    "end": "1283840"
  },
  {
    "text": "other binary formats um currently lcom",
    "start": "1283840",
    "end": "1287159"
  },
  {
    "text": "supports the output of only ver and l x",
    "start": "1287159",
    "end": "1291880"
  },
  {
    "text": "8664",
    "start": "1291880",
    "end": "1294880"
  },
  {
    "text": "binary okay so next in the future we",
    "start": "1296039",
    "end": "1299200"
  },
  {
    "text": "will continue to uh we will continue to",
    "start": "1299200",
    "end": "1302720"
  },
  {
    "text": "develop AR of comp and uh want to want",
    "start": "1302720",
    "end": "1307440"
  },
  {
    "text": "to spread the usage of aom and integrate",
    "start": "1307440",
    "end": "1311960"
  },
  {
    "text": "it into the existing WX system so I hope",
    "start": "1311960",
    "end": "1316039"
  },
  {
    "text": "that you will not H it to throw your",
    "start": "1316039",
    "end": "1318840"
  },
  {
    "text": "issues and PE to",
    "start": "1318840",
    "end": "1322360"
  },
  {
    "text": "us so next I will show related works and",
    "start": "1328600",
    "end": "1333000"
  },
  {
    "text": "Ecom is a successor to my aot project",
    "start": "1333000",
    "end": "1336919"
  },
  {
    "text": "and this is an experimental aot compiler",
    "start": "1336919",
    "end": "1339919"
  },
  {
    "text": "that transl reux R S2 binary to similar",
    "start": "1339919",
    "end": "1344640"
  },
  {
    "text": "binary formats and I refer the some",
    "start": "1344640",
    "end": "1347960"
  },
  {
    "text": "implementation of my L project for aom",
    "start": "1347960",
    "end": "1353600"
  },
  {
    "text": "developing okay so that concludes my",
    "start": "1353679",
    "end": "1355799"
  },
  {
    "text": "presentation thank you very",
    "start": "1355799",
    "end": "1359120"
  },
  {
    "text": "much okay have you ever compared uh the",
    "start": "1360400",
    "end": "1364960"
  },
  {
    "text": "performance of an elfcon binary versus",
    "start": "1364960",
    "end": "1367799"
  },
  {
    "text": "container 2",
    "start": "1367799",
    "end": "1369600"
  },
  {
    "text": "was uh so yes uh yeah so it is a future",
    "start": "1369600",
    "end": "1376159"
  },
  {
    "text": "task and in the Conor wasm",
    "start": "1376159",
    "end": "1379039"
  },
  {
    "text": "uh uh there's notas results in the cont",
    "start": "1379039",
    "end": "1383440"
  },
  {
    "text": "now so yeah I cannot uh compare the",
    "start": "1383440",
    "end": "1387240"
  },
  {
    "text": "performance H now uh between the fcom",
    "start": "1387240",
    "end": "1390600"
  },
  {
    "text": "and conduct",
    "start": "1390600",
    "end": "1393440"
  },
  {
    "text": "was",
    "start": "1399159",
    "end": "1402159"
  },
  {
    "text": "okay okay so um you mention like you",
    "start": "1402600",
    "end": "1407200"
  },
  {
    "text": "have in the future work make faster the",
    "start": "1407200",
    "end": "1410039"
  },
  {
    "text": "we assembly Target population but do you",
    "start": "1410039",
    "end": "1412279"
  },
  {
    "text": "have already some ideas about how to",
    "start": "1412279",
    "end": "1414159"
  },
  {
    "text": "improve the",
    "start": "1414159",
    "end": "1416600"
  },
  {
    "text": "performance sorry M sorry yeah mention",
    "start": "1416720",
    "end": "1420559"
  },
  {
    "text": "like you mentioned that the future work",
    "start": "1420559",
    "end": "1422120"
  },
  {
    "text": "for this project is to make the web",
    "start": "1422120",
    "end": "1423840"
  },
  {
    "text": "assembly Target faster so do you have",
    "start": "1423840",
    "end": "1426520"
  },
  {
    "text": "already some ideas about how to make",
    "start": "1426520",
    "end": "1428760"
  },
  {
    "text": "this performance Improvement uh",
    "start": "1428760",
    "end": "1432120"
  },
  {
    "text": "so uh the the question is about uh how",
    "start": "1432120",
    "end": "1436360"
  },
  {
    "text": "to uh how uh we can uh compare as sorry",
    "start": "1436360",
    "end": "1442400"
  },
  {
    "text": "uh the how we can faster the gener was",
    "start": "1442400",
    "end": "1446679"
  },
  {
    "text": "binary",
    "start": "1446679",
    "end": "1447960"
  },
  {
    "text": "run so yes so and in my in my idea",
    "start": "1447960",
    "end": "1456158"
  },
  {
    "text": "uh uh the generated a bit code in",
    "start": "1456240",
    "end": "1461640"
  },
  {
    "text": "the implementation is a little long and",
    "start": "1461640",
    "end": "1466840"
  },
  {
    "text": "and not uh optimized so",
    "start": "1466840",
    "end": "1472799"
  },
  {
    "text": "so uh one method to uh optim uh one one",
    "start": "1472799",
    "end": "1478640"
  },
  {
    "text": "method is to optimize the",
    "start": "1478640",
    "end": "1482080"
  },
  {
    "text": "generat",
    "start": "1482080",
    "end": "1484080"
  },
  {
    "text": "yeah",
    "start": "1484080",
    "end": "1486200"
  },
  {
    "text": "so thank you okay thank",
    "start": "1486200",
    "end": "1490240"
  },
  {
    "text": "you so um on VM Edge did you enable aot",
    "start": "1490240",
    "end": "1495159"
  },
  {
    "text": "on that side as well that would be per",
    "start": "1495159",
    "end": "1498360"
  },
  {
    "text": "performance Improvement I",
    "start": "1498360",
    "end": "1500159"
  },
  {
    "text": "guess sorry so uh could could you please",
    "start": "1500159",
    "end": "1503240"
  },
  {
    "text": "speak little slow and simple on okay so",
    "start": "1503240",
    "end": "1506960"
  },
  {
    "text": "um you mentioned wasm Edge as the target",
    "start": "1506960",
    "end": "1510279"
  },
  {
    "text": "runtime oh yeah and wasm Edge has an",
    "start": "1510279",
    "end": "1514000"
  },
  {
    "text": "option to enable aot compilation yeah",
    "start": "1514000",
    "end": "1517760"
  },
  {
    "text": "yeah is that enabled in this case this",
    "start": "1517760",
    "end": "1521960"
  },
  {
    "text": "this could be an improvement for",
    "start": "1521960",
    "end": "1524880"
  },
  {
    "text": "performance I guess ah yes so so you",
    "start": "1524880",
    "end": "1527640"
  },
  {
    "text": "would and end up having binary that runs",
    "start": "1527640",
    "end": "1530760"
  },
  {
    "text": "machine",
    "start": "1530760",
    "end": "1531880"
  },
  {
    "text": "code uh so",
    "start": "1531880",
    "end": "1535440"
  },
  {
    "text": "but so in the performance of the RAR",
    "start": "1535440",
    "end": "1538520"
  },
  {
    "text": "program I I already uh compile by was",
    "start": "1538520",
    "end": "1544320"
  },
  {
    "text": "time and I measure the performance of",
    "start": "1544320",
    "end": "1546919"
  },
  {
    "text": "The L compil wasn't binary by was",
    "start": "1546919",
    "end": "1552320"
  },
  {
    "text": "which it is not answer",
    "start": "1552600",
    "end": "1557080"
  },
  {
    "text": "so uh after the",
    "start": "1558799",
    "end": "1560799"
  },
  {
    "text": "presentation could you explain again",
    "start": "1560799",
    "end": "1563080"
  },
  {
    "text": "sorry thank",
    "start": "1563080",
    "end": "1565600"
  },
  {
    "text": "you um you mentioned that uh CIS calls",
    "start": "1567080",
    "end": "1570919"
  },
  {
    "text": "and dynamic linking are two things that",
    "start": "1570919",
    "end": "1573559"
  },
  {
    "text": "aren't supported are there uh",
    "start": "1573559",
    "end": "1576200"
  },
  {
    "text": "any any constructs expressed in elf",
    "start": "1576200",
    "end": "1579880"
  },
  {
    "text": "besides that that are difficult to",
    "start": "1579880",
    "end": "1581880"
  },
  {
    "text": "translate to",
    "start": "1581880",
    "end": "1584240"
  },
  {
    "text": "awom uh so the question is about D",
    "start": "1584240",
    "end": "1589120"
  },
  {
    "text": "Dynamic rinking the support of dynamic",
    "start": "1589120",
    "end": "1591440"
  },
  {
    "text": "rinking is difficult to wasm uh no just",
    "start": "1591440",
    "end": "1596679"
  },
  {
    "text": "um are there any besides the CIS calls",
    "start": "1596679",
    "end": "1602159"
  },
  {
    "text": "the the missing Linux CIS calls like",
    "start": "1602159",
    "end": "1603720"
  },
  {
    "text": "fork and exec um are there any",
    "start": "1603720",
    "end": "1606360"
  },
  {
    "text": "constructs that are expressed in elf but",
    "start": "1606360",
    "end": "1609480"
  },
  {
    "text": "cannot be expressed in wasum",
    "start": "1609480",
    "end": "1612840"
  },
  {
    "text": "today",
    "start": "1612840",
    "end": "1615279"
  },
  {
    "text": "uh sorry could you speak sor simple us",
    "start": "1615279",
    "end": "1621039"
  },
  {
    "text": "um yeah uh what other",
    "start": "1621039",
    "end": "1625840"
  },
  {
    "text": "incompatibilities uh besides the CIS",
    "start": "1625840",
    "end": "1628360"
  },
  {
    "text": "call besides the missing CIS calls um",
    "start": "1628360",
    "end": "1631840"
  },
  {
    "text": "did you experience or run",
    "start": "1631840",
    "end": "1634360"
  },
  {
    "text": "into D",
    "start": "1634360",
    "end": "1637120"
  },
  {
    "text": "experience",
    "start": "1637120",
    "end": "1640120"
  },
  {
    "text": "uh uh sorry sorry I uh I don't answer",
    "start": "1640399",
    "end": "1646279"
  },
  {
    "text": "this question so I it's okay sorry sorry",
    "start": "1646279",
    "end": "1649360"
  },
  {
    "text": "I'll the presentation thank you sorry",
    "start": "1649360",
    "end": "1652200"
  },
  {
    "text": "okay thanks so",
    "start": "1652200",
    "end": "1654880"
  },
  {
    "text": "much hi thank you for the talk he um can",
    "start": "1658760",
    "end": "1662960"
  },
  {
    "text": "you compare the size of the binaries",
    "start": "1662960",
    "end": "1666440"
  },
  {
    "text": "both with uh x64 and with wasum and how",
    "start": "1666440",
    "end": "1670679"
  },
  {
    "text": "do they compare is wasum a bigger file",
    "start": "1670679",
    "end": "1674399"
  },
  {
    "text": "size uh so the question is about the",
    "start": "1674399",
    "end": "1679039"
  },
  {
    "text": "image size of the generated was binary",
    "start": "1679039",
    "end": "1681360"
  },
  {
    "text": "between the generated was binary and the",
    "start": "1681360",
    "end": "1684399"
  },
  {
    "text": "was binary compared from sour code yeah",
    "start": "1684399",
    "end": "1687440"
  },
  {
    "text": "correct uh yeah so thank you so I",
    "start": "1687440",
    "end": "1690840"
  },
  {
    "text": "think the generated was binary basically",
    "start": "1690840",
    "end": "1694360"
  },
  {
    "text": "uh very lar very large and for example",
    "start": "1694360",
    "end": "1699480"
  },
  {
    "text": "in the lar Benchmark uh uh lmar",
    "start": "1699480",
    "end": "1703039"
  },
  {
    "text": "Benchmark program the generated was",
    "start": "1703039",
    "end": "1706679"
  },
  {
    "text": "binary is a maybe uh uh 17 megabytes is",
    "start": "1706679",
    "end": "1711840"
  },
  {
    "text": "there so but the uh was binary uh",
    "start": "1711840",
    "end": "1715679"
  },
  {
    "text": "compared from sourc is uh about uh 100",
    "start": "1715679",
    "end": "1722440"
  },
  {
    "text": "ktes maybe so I think the gener B is",
    "start": "1722440",
    "end": "1727000"
  },
  {
    "text": "very large so yeah uh that is a uh",
    "start": "1727000",
    "end": "1733159"
  },
  {
    "text": "program to",
    "start": "1733159",
    "end": "1734440"
  },
  {
    "text": "Sol yeah thank you thank you",
    "start": "1734440",
    "end": "1739480"
  },
  {
    "text": "okay thank you",
    "start": "1751679",
    "end": "1754760"
  },
  {
    "text": "[Applause]",
    "start": "1754760",
    "end": "1760240"
  }
]