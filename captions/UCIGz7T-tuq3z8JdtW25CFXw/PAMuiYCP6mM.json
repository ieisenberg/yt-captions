[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "foreign",
    "start": "599",
    "end": "3599"
  },
  {
    "text": "[Music]",
    "start": "3850",
    "end": "4340"
  },
  {
    "text": "[Applause]",
    "start": "4340",
    "end": "7620"
  },
  {
    "text": "welcome to my lightning talk uh where",
    "start": "8240",
    "end": "10679"
  },
  {
    "text": "we'll discuss procedural modeling with",
    "start": "10679",
    "end": "12840"
  },
  {
    "text": "micro web assemblies I'm Sean Isom I am",
    "start": "12840",
    "end": "15900"
  },
  {
    "text": "based in New York uh for my day job I'm",
    "start": "15900",
    "end": "18060"
  },
  {
    "text": "a senior engineering manager at Adobe",
    "start": "18060",
    "end": "19859"
  },
  {
    "text": "working on optimizing our Cloud platform",
    "start": "19859",
    "end": "22520"
  },
  {
    "text": "but I love burning the midnight oil",
    "start": "22520",
    "end": "24960"
  },
  {
    "text": "working on webassembly I know quite a",
    "start": "24960",
    "end": "27720"
  },
  {
    "text": "few folks here for some of the work we",
    "start": "27720",
    "end": "29460"
  },
  {
    "text": "have done at Adobe with webassembly on",
    "start": "29460",
    "end": "31260"
  },
  {
    "text": "the server side but today I'm here to",
    "start": "31260",
    "end": "33300"
  },
  {
    "text": "talk about a completely different topic",
    "start": "33300",
    "end": "34920"
  },
  {
    "text": "running tons of small webassembly blocks",
    "start": "34920",
    "end": "37620"
  },
  {
    "text": "in parallel and some applications of",
    "start": "37620",
    "end": "40140"
  },
  {
    "text": "that technology and procedural Graphics",
    "start": "40140",
    "end": "41940"
  },
  {
    "text": "this is kind of a crazy experiment to",
    "start": "41940",
    "end": "44520"
  },
  {
    "text": "push wasm to its limits I think and",
    "start": "44520",
    "end": "47420"
  },
  {
    "text": "let's get started lots to talk about",
    "start": "47420",
    "end": "51360"
  },
  {
    "text": "uh so I always like to start with a",
    "start": "51360",
    "end": "53160"
  },
  {
    "text": "quote to form a thesis and here's a very",
    "start": "53160",
    "end": "54899"
  },
  {
    "text": "relevant one for this experiment",
    "start": "54899",
    "end": "56399"
  },
  {
    "text": "software equals code Plus data now I",
    "start": "56399",
    "end": "59940"
  },
  {
    "text": "think I read this in a book somewhere",
    "start": "59940",
    "end": "61140"
  },
  {
    "text": "many years ago if you know where this",
    "start": "61140",
    "end": "62879"
  },
  {
    "text": "actually came from please let me know",
    "start": "62879",
    "end": "64080"
  },
  {
    "text": "because I can't remember myself but",
    "start": "64080",
    "end": "66119"
  },
  {
    "text": "anyway software systems can sometimes",
    "start": "66119",
    "end": "68159"
  },
  {
    "text": "logically be reduced to some sort of",
    "start": "68159",
    "end": "70200"
  },
  {
    "text": "basis of data and then code that",
    "start": "70200",
    "end": "72299"
  },
  {
    "text": "performs operations on top of that data",
    "start": "72299",
    "end": "74520"
  },
  {
    "text": "we collectively spend a lot of time",
    "start": "74520",
    "end": "76680"
  },
  {
    "text": "thinking about how to optimize the code",
    "start": "76680",
    "end": "78360"
  },
  {
    "text": "but other than basic things like",
    "start": "78360",
    "end": "80220"
  },
  {
    "text": "compression and locality we don't think",
    "start": "80220",
    "end": "82439"
  },
  {
    "text": "nearly as much about how do we actually",
    "start": "82439",
    "end": "83880"
  },
  {
    "text": "optimize the data so this leads to a",
    "start": "83880",
    "end": "86400"
  },
  {
    "text": "potential thesis can we using",
    "start": "86400",
    "end": "88140"
  },
  {
    "text": "webassembly replace portions of the data",
    "start": "88140",
    "end": "90720"
  },
  {
    "text": "with the instructions to procedurally",
    "start": "90720",
    "end": "92759"
  },
  {
    "text": "generate that data can this be used to",
    "start": "92759",
    "end": "95579"
  },
  {
    "text": "supplement or enhance the Fidelity of",
    "start": "95579",
    "end": "97439"
  },
  {
    "text": "the data and meet some sort of quality",
    "start": "97439",
    "end": "99360"
  },
  {
    "text": "metrics for greater efficiency",
    "start": "99360",
    "end": "102720"
  },
  {
    "start": "102000",
    "end": "102000"
  },
  {
    "text": "uh so what do I mean by procedurally",
    "start": "102720",
    "end": "105240"
  },
  {
    "text": "generate the data let's very very",
    "start": "105240",
    "end": "107460"
  },
  {
    "text": "briefly discuss procedural modeling it's",
    "start": "107460",
    "end": "109259"
  },
  {
    "text": "a huge topic but procedural modeling is",
    "start": "109259",
    "end": "111659"
  },
  {
    "text": "essentially just algorithms to generate",
    "start": "111659",
    "end": "113340"
  },
  {
    "text": "data using some sort of input it could",
    "start": "113340",
    "end": "115799"
  },
  {
    "text": "be a smaller chunk of data it could be",
    "start": "115799",
    "end": "117420"
  },
  {
    "text": "the output of another algorithm uh",
    "start": "117420",
    "end": "119939"
  },
  {
    "text": "applying a series of Transformations on",
    "start": "119939",
    "end": "121680"
  },
  {
    "text": "top of that data to generate higher",
    "start": "121680",
    "end": "123479"
  },
  {
    "text": "detail output often at a much larger",
    "start": "123479",
    "end": "125820"
  },
  {
    "text": "scale than the input itself a great",
    "start": "125820",
    "end": "128819"
  },
  {
    "text": "example of this could be something like",
    "start": "128819",
    "end": "130860"
  },
  {
    "text": "Minecraft which pretty much everybody",
    "start": "130860",
    "end": "132239"
  },
  {
    "text": "probably knows what that is using like a",
    "start": "132239",
    "end": "134340"
  },
  {
    "text": "random seed as input it generates an",
    "start": "134340",
    "end": "136319"
  },
  {
    "text": "infinite deterministic procedural World",
    "start": "136319",
    "end": "138540"
  },
  {
    "text": "applying those algorithms on that input",
    "start": "138540",
    "end": "141140"
  },
  {
    "text": "there's a lot of different types of",
    "start": "141140",
    "end": "143400"
  },
  {
    "text": "procedural systems but you know for this",
    "start": "143400",
    "end": "145500"
  },
  {
    "text": "talk we'll focus on formal grammars and",
    "start": "145500",
    "end": "149220"
  },
  {
    "text": "in the context of of kind of 2D and 3D",
    "start": "149220",
    "end": "151860"
  },
  {
    "text": "Graphics this gives us just a lot of",
    "start": "151860",
    "end": "153840"
  },
  {
    "text": "benefits over manual modeling it allows",
    "start": "153840",
    "end": "156180"
  },
  {
    "text": "us to scale to large spaces incorporate",
    "start": "156180",
    "end": "158760"
  },
  {
    "text": "variations in that data Randomness",
    "start": "158760",
    "end": "160640"
  },
  {
    "text": "supplement noisy or sparse data sets",
    "start": "160640",
    "end": "163200"
  },
  {
    "text": "with high resolution details which to",
    "start": "163200",
    "end": "165900"
  },
  {
    "text": "help prove our thesis we think can be a",
    "start": "165900",
    "end": "168720"
  },
  {
    "text": "really efficient use of Space Trading",
    "start": "168720",
    "end": "170459"
  },
  {
    "text": "that kind of compute versus data",
    "start": "170459",
    "end": "172459"
  },
  {
    "text": "complexity at runtime to represent these",
    "start": "172459",
    "end": "174959"
  },
  {
    "text": "regular structures",
    "start": "174959",
    "end": "177739"
  },
  {
    "text": "so that's great but what does this have",
    "start": "177840",
    "end": "179280"
  },
  {
    "text": "to do with webassembly we're at a",
    "start": "179280",
    "end": "181080"
  },
  {
    "text": "webassembly conference well if you're",
    "start": "181080",
    "end": "182760"
  },
  {
    "text": "going to replace arbitrary data with",
    "start": "182760",
    "end": "184319"
  },
  {
    "text": "arbitrary code from arbitrary sources at",
    "start": "184319",
    "end": "187019"
  },
  {
    "text": "runtime one can kind of quickly see how",
    "start": "187019",
    "end": "189180"
  },
  {
    "text": "all the benefits we talk about every day",
    "start": "189180",
    "end": "190800"
  },
  {
    "text": "with webassembly allow it to be a key",
    "start": "190800",
    "end": "193080"
  },
  {
    "text": "enabler for these kinds of workloads if",
    "start": "193080",
    "end": "195659"
  },
  {
    "text": "webassembly uh modules validate our",
    "start": "195659",
    "end": "199200"
  },
  {
    "text": "thesis that code to generate data can be",
    "start": "199200",
    "end": "201239"
  },
  {
    "text": "more efficient than just raw large data",
    "start": "201239",
    "end": "203220"
  },
  {
    "text": "sets themselves the performance benefits",
    "start": "203220",
    "end": "205560"
  },
  {
    "text": "the fast startup time the security by",
    "start": "205560",
    "end": "208140"
  },
  {
    "text": "default allows us to implement this kind",
    "start": "208140",
    "end": "210360"
  },
  {
    "text": "of architecture at runtime instead of",
    "start": "210360",
    "end": "211739"
  },
  {
    "text": "just building it offline",
    "start": "211739",
    "end": "213239"
  },
  {
    "text": "this leads to our first example which",
    "start": "213239",
    "end": "215580"
  },
  {
    "text": "you can see an architecture diagram of",
    "start": "215580",
    "end": "217019"
  },
  {
    "text": "here for a 2d mapping system so here map",
    "start": "217019",
    "end": "220560"
  },
  {
    "text": "data like Geographic mapping data is",
    "start": "220560",
    "end": "223200"
  },
  {
    "text": "organized into a quad tree streamed down",
    "start": "223200",
    "end": "225480"
  },
  {
    "text": "to a client machine for rendering but",
    "start": "225480",
    "end": "227640"
  },
  {
    "text": "instead of providing like RAW graphics",
    "start": "227640",
    "end": "230040"
  },
  {
    "text": "behind that we're streaming webassembly",
    "start": "230040",
    "end": "232319"
  },
  {
    "text": "workloads we're streaming tiles to",
    "start": "232319",
    "end": "234840"
  },
  {
    "text": "execute which contains a small chunk of",
    "start": "234840",
    "end": "237180"
  },
  {
    "text": "procedural data embedded in each and",
    "start": "237180",
    "end": "239220"
  },
  {
    "text": "then references a common library of",
    "start": "239220",
    "end": "240900"
  },
  {
    "text": "things like textures to generate the",
    "start": "240900",
    "end": "242340"
  },
  {
    "text": "actual map",
    "start": "242340",
    "end": "244799"
  },
  {
    "text": "here's some of that data as an input for",
    "start": "244799",
    "end": "247500"
  },
  {
    "text": "this algorithm for for a tile so on the",
    "start": "247500",
    "end": "250500"
  },
  {
    "text": "top rows input and below is how it is",
    "start": "250500",
    "end": "252599"
  },
  {
    "text": "used this is actually an implementation",
    "start": "252599",
    "end": "255480"
  },
  {
    "text": "of algorithm based off of land",
    "start": "255480",
    "end": "256979"
  },
  {
    "text": "classification from a very old version",
    "start": "256979",
    "end": "259260"
  },
  {
    "text": "of Microsoft flight simulator",
    "start": "259260",
    "end": "260299"
  },
  {
    "text": "everybody's familiar with that on the",
    "start": "260299",
    "end": "262919"
  },
  {
    "text": "left you can see that there's a class",
    "start": "262919",
    "end": "264960"
  },
  {
    "text": "map which is a blend texture essentially",
    "start": "264960",
    "end": "268380"
  },
  {
    "text": "and then that references geotypical",
    "start": "268380",
    "end": "270479"
  },
  {
    "text": "textures for the area you see you've got",
    "start": "270479",
    "end": "272580"
  },
  {
    "text": "some trees you've got some grass you've",
    "start": "272580",
    "end": "274080"
  },
  {
    "text": "got some sand to produce an output like",
    "start": "274080",
    "end": "276900"
  },
  {
    "text": "what you see below you have elevation",
    "start": "276900",
    "end": "278699"
  },
  {
    "text": "data for example that produces a contour",
    "start": "278699",
    "end": "280620"
  },
  {
    "text": "map to supplement that land",
    "start": "280620",
    "end": "282720"
  },
  {
    "text": "classification data with additional",
    "start": "282720",
    "end": "284820"
  },
  {
    "text": "resolution you have compressed Vector",
    "start": "284820",
    "end": "287759"
  },
  {
    "text": "data which references things like",
    "start": "287759",
    "end": "289979"
  },
  {
    "text": "textures for roads and water and all of",
    "start": "289979",
    "end": "292440"
  },
  {
    "text": "this leads to",
    "start": "292440",
    "end": "293820"
  },
  {
    "text": "something that looks like this this is a",
    "start": "293820",
    "end": "295860"
  },
  {
    "text": "procedurally synthesized version uh this",
    "start": "295860",
    "end": "299100"
  },
  {
    "text": "is a Ginny Lake just in Wyoming in the",
    "start": "299100",
    "end": "302160"
  },
  {
    "text": "U.S and all of this is generated at",
    "start": "302160",
    "end": "304440"
  },
  {
    "text": "runtime this was built in M script and",
    "start": "304440",
    "end": "307080"
  },
  {
    "text": "and just running in a browser on a",
    "start": "307080",
    "end": "308759"
  },
  {
    "text": "canvas so you see it's not a perfect",
    "start": "308759",
    "end": "310979"
  },
  {
    "text": "satellite image but you can see how it",
    "start": "310979",
    "end": "312780"
  },
  {
    "text": "is representative and really most",
    "start": "312780",
    "end": "314940"
  },
  {
    "text": "importantly just can be generated from",
    "start": "314940",
    "end": "317340"
  },
  {
    "text": "client-side from a compressed limited",
    "start": "317340",
    "end": "319080"
  },
  {
    "text": "data set",
    "start": "319080",
    "end": "321500"
  },
  {
    "text": "so let's dig into a bit more detailed",
    "start": "322199",
    "end": "325020"
  },
  {
    "text": "example of this 3D building models weird",
    "start": "325020",
    "end": "329039"
  },
  {
    "text": "topic but procedural generation of",
    "start": "329039",
    "end": "331139"
  },
  {
    "text": "buildings is something that has been",
    "start": "331139",
    "end": "332520"
  },
  {
    "text": "covered kind of extensively in academic",
    "start": "332520",
    "end": "334199"
  },
  {
    "text": "literature but this has mostly been",
    "start": "334199",
    "end": "336479"
  },
  {
    "text": "centered around offline uh generation",
    "start": "336479",
    "end": "338880"
  },
  {
    "text": "offline workloads you're building a",
    "start": "338880",
    "end": "340919"
  },
  {
    "text": "static 3D model but an artist can",
    "start": "340919",
    "end": "343680"
  },
  {
    "text": "exploit the regular structure of things",
    "start": "343680",
    "end": "345120"
  },
  {
    "text": "like buildings to quickly generate data",
    "start": "345120",
    "end": "346860"
  },
  {
    "text": "for a scene with similar look and feel",
    "start": "346860",
    "end": "349139"
  },
  {
    "text": "amongst the objects massively in",
    "start": "349139",
    "end": "351240"
  },
  {
    "text": "parallel so they'll generate you know",
    "start": "351240",
    "end": "354180"
  },
  {
    "text": "this they'll supplement it with high",
    "start": "354180",
    "end": "355979"
  },
  {
    "text": "resolution details uh you know more",
    "start": "355979",
    "end": "358620"
  },
  {
    "text": "detailed models like you might put an",
    "start": "358620",
    "end": "360060"
  },
  {
    "text": "air conditioner unit on the side of the",
    "start": "360060",
    "end": "361500"
  },
  {
    "text": "building up close and then export that",
    "start": "361500",
    "end": "363960"
  },
  {
    "text": "to the static scene that's loaded into a",
    "start": "363960",
    "end": "365820"
  },
  {
    "text": "graphics engine but obviously this comes",
    "start": "365820",
    "end": "368100"
  },
  {
    "text": "at a high cost like imagine here in",
    "start": "368100",
    "end": "369960"
  },
  {
    "text": "Barcelona if you were to have a high",
    "start": "369960",
    "end": "371460"
  },
  {
    "text": "resolution building for every every",
    "start": "371460",
    "end": "374280"
  },
  {
    "text": "single building every single Street in",
    "start": "374280",
    "end": "375720"
  },
  {
    "text": "the city there'd be petabytes if not",
    "start": "375720",
    "end": "377400"
  },
  {
    "text": "more of data and so",
    "start": "377400",
    "end": "379620"
  },
  {
    "text": "uh how can we optimize that well we",
    "start": "379620",
    "end": "382500"
  },
  {
    "text": "generate this at runtime and here's an",
    "start": "382500",
    "end": "384360"
  },
  {
    "text": "example on on the left is the shape",
    "start": "384360",
    "end": "385979"
  },
  {
    "text": "grammar uh this is something called CGA",
    "start": "385979",
    "end": "388259"
  },
  {
    "text": "representing a building middle is the",
    "start": "388259",
    "end": "390240"
  },
  {
    "text": "resulting 3D model and so instead of uh",
    "start": "390240",
    "end": "394100"
  },
  {
    "text": "generating the next forwarding these",
    "start": "394100",
    "end": "396000"
  },
  {
    "text": "procedural models we offline compile to",
    "start": "396000",
    "end": "398639"
  },
  {
    "text": "webassembly and then execute the actual",
    "start": "398639",
    "end": "400620"
  },
  {
    "text": "modules to generate each building at",
    "start": "400620",
    "end": "401880"
  },
  {
    "text": "runtime and you can kind of see the",
    "start": "401880",
    "end": "403560"
  },
  {
    "text": "output of that on the right this is just",
    "start": "403560",
    "end": "404940"
  },
  {
    "text": "a generic graph extension but here's",
    "start": "404940",
    "end": "406440"
  },
  {
    "text": "where we have taken that same basic",
    "start": "406440",
    "end": "407940"
  },
  {
    "text": "procedural model executed it to generate",
    "start": "407940",
    "end": "410340"
  },
  {
    "text": "a bunch of buildings slightly varied the",
    "start": "410340",
    "end": "412020"
  },
  {
    "text": "parameters and can generate some pretty",
    "start": "412020",
    "end": "414479"
  },
  {
    "text": "amazing level of detail with just a few",
    "start": "414479",
    "end": "415979"
  },
  {
    "text": "laws and tiles",
    "start": "415979",
    "end": "418680"
  },
  {
    "start": "418000",
    "end": "418000"
  },
  {
    "text": "uh this so can we successfully do this",
    "start": "418680",
    "end": "421560"
  },
  {
    "text": "at scale that's the question I wanted to",
    "start": "421560",
    "end": "423479"
  },
  {
    "text": "prove with this thesis and I think the",
    "start": "423479",
    "end": "424979"
  },
  {
    "text": "answer is yes with some limitations uh",
    "start": "424979",
    "end": "427740"
  },
  {
    "text": "first the split grammar they showed",
    "start": "427740",
    "end": "429300"
  },
  {
    "text": "before it's parse turn into C plus which",
    "start": "429300",
    "end": "431340"
  },
  {
    "text": "is then compiled with clang to",
    "start": "431340",
    "end": "433259"
  },
  {
    "text": "webassembly uh this could be optimized",
    "start": "433259",
    "end": "435539"
  },
  {
    "text": "as some sort of direct to webassembly",
    "start": "435539",
    "end": "437039"
  },
  {
    "text": "compilation as well but this works for",
    "start": "437039",
    "end": "438960"
  },
  {
    "text": "now the procedural modeling kernel is",
    "start": "438960",
    "end": "441660"
  },
  {
    "text": "also written in C plus compiled into the",
    "start": "441660",
    "end": "443699"
  },
  {
    "text": "module with translated grammar snippet",
    "start": "443699",
    "end": "446039"
  },
  {
    "text": "of which you can see on the left there",
    "start": "446039",
    "end": "447479"
  },
  {
    "text": "kind of an analog to what we saw in the",
    "start": "447479",
    "end": "449699"
  },
  {
    "text": "last slide",
    "start": "449699",
    "end": "451560"
  },
  {
    "text": "um how do we get data in and out and",
    "start": "451560",
    "end": "453240"
  },
  {
    "text": "Wazi uh it's not seamless today we treat",
    "start": "453240",
    "end": "456000"
  },
  {
    "text": "so we treat each module kind of like a",
    "start": "456000",
    "end": "457560"
  },
  {
    "text": "command line program where we",
    "start": "457560",
    "end": "459360"
  },
  {
    "text": "parametrize attributes like colors and",
    "start": "459360",
    "end": "461460"
  },
  {
    "text": "Heights and Footprints as command line",
    "start": "461460",
    "end": "463919"
  },
  {
    "text": "args and then we hook a pipe into",
    "start": "463919",
    "end": "466979"
  },
  {
    "text": "standard out to dump basically the",
    "start": "466979",
    "end": "469440"
  },
  {
    "text": "resultant 3D object as just an obj file",
    "start": "469440",
    "end": "472400"
  },
  {
    "text": "this is not the most efficient way to do",
    "start": "472400",
    "end": "475020"
  },
  {
    "text": "this but this work also works for now",
    "start": "475020",
    "end": "477539"
  },
  {
    "text": "having each building have their own",
    "start": "477539",
    "end": "479340"
  },
  {
    "text": "grammar is not very efficient either so",
    "start": "479340",
    "end": "481620"
  },
  {
    "text": "let's look at some optimizations for",
    "start": "481620",
    "end": "484020"
  },
  {
    "text": "example a city block or a neighborhood",
    "start": "484020",
    "end": "485460"
  },
  {
    "text": "can look kind of similar so you can",
    "start": "485460",
    "end": "486900"
  },
  {
    "text": "parameterize some of the inputs and add",
    "start": "486900",
    "end": "488639"
  },
  {
    "text": "some Randomness as you zoom in close you",
    "start": "488639",
    "end": "490919"
  },
  {
    "text": "could then individually load detailed",
    "start": "490919",
    "end": "493319"
  },
  {
    "text": "individual building grammar as a formal",
    "start": "493319",
    "end": "495120"
  },
  {
    "text": "level of detail",
    "start": "495120",
    "end": "497960"
  },
  {
    "start": "498000",
    "end": "498000"
  },
  {
    "text": "so how does this perform uh here's a",
    "start": "498300",
    "end": "502919"
  },
  {
    "text": "single threaded side-by-side comparison",
    "start": "502919",
    "end": "504539"
  },
  {
    "text": "of two different models right see on the",
    "start": "504539",
    "end": "506940"
  },
  {
    "text": "left you've got a model that's kind of a",
    "start": "506940",
    "end": "508500"
  },
  {
    "text": "basic blob but you know it looks like a",
    "start": "508500",
    "end": "510419"
  },
  {
    "text": "building on the right you've got a much",
    "start": "510419",
    "end": "512039"
  },
  {
    "text": "more high resolution uh model and what",
    "start": "512039",
    "end": "514500"
  },
  {
    "text": "you're seeing here is kind of like in",
    "start": "514500",
    "end": "516120"
  },
  {
    "text": "nanoseconds uh through you know just a",
    "start": "516120",
    "end": "519060"
  },
  {
    "text": "single threaded loader built with",
    "start": "519060",
    "end": "520440"
  },
  {
    "text": "Blossom time uh loading individual",
    "start": "520440",
    "end": "523020"
  },
  {
    "text": "buildings and you can see that for the",
    "start": "523020",
    "end": "524820"
  },
  {
    "text": "small building the compilation time is",
    "start": "524820",
    "end": "526800"
  },
  {
    "text": "high but about the same but the run time",
    "start": "526800",
    "end": "530040"
  },
  {
    "text": "the internal time it takes is much much",
    "start": "530040",
    "end": "531959"
  },
  {
    "text": "faster and so that's good and so we've",
    "start": "531959",
    "end": "533820"
  },
  {
    "text": "been able to get webassembly with things",
    "start": "533820",
    "end": "535560"
  },
  {
    "text": "like simdi I think it was up to 60 to 75",
    "start": "535560",
    "end": "538560"
  },
  {
    "text": "percent of the Native performance of",
    "start": "538560",
    "end": "540000"
  },
  {
    "text": "this but you can see still like if we",
    "start": "540000",
    "end": "542519"
  },
  {
    "text": "imagine like a camera moving down a",
    "start": "542519",
    "end": "544440"
  },
  {
    "text": "street if we're procedurally generating",
    "start": "544440",
    "end": "545760"
  },
  {
    "text": "that building on the right you know",
    "start": "545760",
    "end": "547380"
  },
  {
    "text": "infinite times over and over again it is",
    "start": "547380",
    "end": "549600"
  },
  {
    "text": "kind of slow",
    "start": "549600",
    "end": "551820"
  },
  {
    "text": "all right what do we just do there on",
    "start": "551820",
    "end": "554040"
  },
  {
    "text": "the left I just generated 2 000",
    "start": "554040",
    "end": "556320"
  },
  {
    "text": "procedural buildings with one",
    "start": "556320",
    "end": "558000"
  },
  {
    "text": "compilation and so that's kind of where",
    "start": "558000",
    "end": "560040"
  },
  {
    "text": "we are headed next with with this is uh",
    "start": "560040",
    "end": "562800"
  },
  {
    "text": "maybe we don't aot compile every single",
    "start": "562800",
    "end": "564899"
  },
  {
    "text": "tile every single time maybe we exploit",
    "start": "564899",
    "end": "567060"
  },
  {
    "text": "regularity between different buildings",
    "start": "567060",
    "end": "568680"
  },
  {
    "text": "to be able to reuse that same grammar",
    "start": "568680",
    "end": "570480"
  },
  {
    "text": "and just add more variation of",
    "start": "570480",
    "end": "572580"
  },
  {
    "text": "parameters this allows us to really",
    "start": "572580",
    "end": "574620"
  },
  {
    "text": "start seeing that City scale data and",
    "start": "574620",
    "end": "577680"
  },
  {
    "text": "that kind of leads us to to where we",
    "start": "577680",
    "end": "579839"
  },
  {
    "text": "want to go next with this to to really",
    "start": "579839",
    "end": "581760"
  },
  {
    "text": "get",
    "start": "581760",
    "end": "583080"
  },
  {
    "text": "um you know just some higher higher",
    "start": "583080",
    "end": "585240"
  },
  {
    "text": "Fidelity data so we have a working",
    "start": "585240",
    "end": "588540"
  },
  {
    "text": "procedural modeling system",
    "start": "588540",
    "end": "590940"
  },
  {
    "text": "um but our setup is kind of far from",
    "start": "590940",
    "end": "592500"
  },
  {
    "text": "ideal given given those timings that",
    "start": "592500",
    "end": "595019"
  },
  {
    "text": "you've seen uh if we really want to",
    "start": "595019",
    "end": "596940"
  },
  {
    "text": "scale this it's going to take",
    "start": "596940",
    "end": "597959"
  },
  {
    "text": "implementing things like the component",
    "start": "597959",
    "end": "599640"
  },
  {
    "text": "model uh here's a basic mock-up of what",
    "start": "599640",
    "end": "602339"
  },
  {
    "text": "a procedural modeling operation could",
    "start": "602339",
    "end": "604019"
  },
  {
    "text": "look like exposed as a wick component",
    "start": "604019",
    "end": "606300"
  },
  {
    "text": "this would allow us for example instead",
    "start": "606300",
    "end": "608279"
  },
  {
    "text": "of moving common functionality like the",
    "start": "608279",
    "end": "610080"
  },
  {
    "text": "geometry kernel into the host allows for",
    "start": "610080",
    "end": "613019"
  },
  {
    "text": "common composable kernel operations",
    "start": "613019",
    "end": "614640"
  },
  {
    "text": "themselves in webassembly minimizing the",
    "start": "614640",
    "end": "617279"
  },
  {
    "text": "API footprint of what needs to be that",
    "start": "617279",
    "end": "619440"
  },
  {
    "text": "separate host functionality to just the",
    "start": "619440",
    "end": "621000"
  },
  {
    "text": "communication back and forth it allows",
    "start": "621000",
    "end": "623040"
  },
  {
    "text": "us to kind of compose and build plugable",
    "start": "623040",
    "end": "624540"
  },
  {
    "text": "Graphics objects with this kind of",
    "start": "624540",
    "end": "627120"
  },
  {
    "text": "architecture the binary size should be",
    "start": "627120",
    "end": "628680"
  },
  {
    "text": "reduced and my theory is that the",
    "start": "628680",
    "end": "630120"
  },
  {
    "text": "compilation performance will",
    "start": "630120",
    "end": "631320"
  },
  {
    "text": "significantly improve as well because",
    "start": "631320",
    "end": "632760"
  },
  {
    "text": "we're not compiling the same you know",
    "start": "632760",
    "end": "634620"
  },
  {
    "text": "Library code again and again and again",
    "start": "634620",
    "end": "636959"
  },
  {
    "text": "tens to hundreds of times per second",
    "start": "636959",
    "end": "640019"
  },
  {
    "text": "um but with this architecture it's we",
    "start": "640019",
    "end": "643019"
  },
  {
    "text": "should be able to generate a large",
    "start": "643019",
    "end": "646320"
  },
  {
    "text": "number of buildings or really a large",
    "start": "646320",
    "end": "648240"
  },
  {
    "text": "number of Graphics objects in general",
    "start": "648240",
    "end": "649700"
  },
  {
    "text": "based off of this limited set of input",
    "start": "649700",
    "end": "652200"
  },
  {
    "text": "and replace a lot of what we saw before",
    "start": "652200",
    "end": "655380"
  },
  {
    "text": "to use actually I missed it but I'm",
    "start": "655380",
    "end": "658200"
  },
  {
    "text": "going to go back a slide but that model",
    "start": "658200",
    "end": "659820"
  },
  {
    "text": "on the right that is 529 kilobyte binary",
    "start": "659820",
    "end": "664019"
  },
  {
    "text": "the resultant or sorry yeah 5.29",
    "start": "664019",
    "end": "666779"
  },
  {
    "text": "kilobyte binary the resultant obj file",
    "start": "666779",
    "end": "669480"
  },
  {
    "text": "is four times larger and so we've shown",
    "start": "669480",
    "end": "671880"
  },
  {
    "text": "that even though we're you know adding a",
    "start": "671880",
    "end": "673320"
  },
  {
    "text": "runtime cost to building the data we",
    "start": "673320",
    "end": "675420"
  },
  {
    "text": "have been able to compress the data",
    "start": "675420",
    "end": "676740"
  },
  {
    "text": "further and with larger higher detail",
    "start": "676740",
    "end": "678899"
  },
  {
    "text": "buildings than the one you see there",
    "start": "678899",
    "end": "680160"
  },
  {
    "text": "we've seen up to 50 to 100 x",
    "start": "680160",
    "end": "682320"
  },
  {
    "text": "improvements in size so it's significant",
    "start": "682320",
    "end": "686600"
  },
  {
    "text": "all right so uh that was my time thanks",
    "start": "687000",
    "end": "689339"
  },
  {
    "text": "for listening I think wasm is a great",
    "start": "689339",
    "end": "691200"
  },
  {
    "text": "enabler for these types of workloads",
    "start": "691200",
    "end": "692579"
  },
  {
    "text": "where we can run massively parallel",
    "start": "692579",
    "end": "694440"
  },
  {
    "text": "blocks of micro code modules helping us",
    "start": "694440",
    "end": "697380"
  },
  {
    "text": "to optimize our data",
    "start": "697380",
    "end": "699300"
  },
  {
    "text": "um the link on GitHub there I don't",
    "start": "699300",
    "end": "700620"
  },
  {
    "text": "actually have the code up yet uh there's",
    "start": "700620",
    "end": "702420"
  },
  {
    "text": "some things I need to sort out with",
    "start": "702420",
    "end": "704279"
  },
  {
    "text": "libraries and whatnot but hopefully by",
    "start": "704279",
    "end": "705959"
  },
  {
    "text": "the time this talk is posted live uh we",
    "start": "705959",
    "end": "708180"
  },
  {
    "text": "will I will have that sorted out and uh",
    "start": "708180",
    "end": "710339"
  },
  {
    "text": "hopefully within the next week so if you",
    "start": "710339",
    "end": "711480"
  },
  {
    "text": "want go start the repo follow uh for",
    "start": "711480",
    "end": "714000"
  },
  {
    "text": "when the code is there any questions",
    "start": "714000",
    "end": "715740"
  },
  {
    "text": "feel free to reach out I'm very",
    "start": "715740",
    "end": "717600"
  },
  {
    "text": "passionate about this stuff thanks",
    "start": "717600",
    "end": "719810"
  },
  {
    "text": "[Applause]",
    "start": "719810",
    "end": "728040"
  },
  {
    "text": "I think I can take any live questions if",
    "start": "728040",
    "end": "731160"
  },
  {
    "text": "there's time",
    "start": "731160",
    "end": "732540"
  },
  {
    "text": "thanks",
    "start": "732540",
    "end": "733920"
  },
  {
    "text": "for the brevity and the details on that",
    "start": "733920",
    "end": "736440"
  },
  {
    "text": "could you talk a little bit about your",
    "start": "736440",
    "end": "738420"
  },
  {
    "text": "experience with the siamd optimizations",
    "start": "738420",
    "end": "741240"
  },
  {
    "text": "and where you think that's going for you",
    "start": "741240",
    "end": "743579"
  },
  {
    "text": "know real world high performance",
    "start": "743579",
    "end": "745200"
  },
  {
    "text": "workloads",
    "start": "745200",
    "end": "746279"
  },
  {
    "text": "yes so it was quite literally necessary",
    "start": "746279",
    "end": "749700"
  },
  {
    "text": "to get that performance well you know",
    "start": "749700",
    "end": "751079"
  },
  {
    "text": "just compiling with default settings and",
    "start": "751079",
    "end": "752519"
  },
  {
    "text": "cling like I think I was seeing like a I",
    "start": "752519",
    "end": "755700"
  },
  {
    "text": "don't remember exactly it's like a four",
    "start": "755700",
    "end": "756779"
  },
  {
    "text": "to five x slowdown compared to native",
    "start": "756779",
    "end": "758459"
  },
  {
    "text": "code so uh you know particularly there's",
    "start": "758459",
    "end": "761100"
  },
  {
    "text": "a lot of Matrix math involved in some of",
    "start": "761100",
    "end": "763079"
  },
  {
    "text": "the the generic floating Point Matrix",
    "start": "763079",
    "end": "764459"
  },
  {
    "text": "math and so like when you're using a",
    "start": "764459",
    "end": "766260"
  },
  {
    "text": "library like glm that helps it but the",
    "start": "766260",
    "end": "768120"
  },
  {
    "text": "other thing I'll say is I think when I",
    "start": "768120",
    "end": "770579"
  },
  {
    "text": "specifically for glm I was only able to",
    "start": "770579",
    "end": "772620"
  },
  {
    "text": "build it uh with 128 bit 7D like it",
    "start": "772620",
    "end": "775620"
  },
  {
    "text": "doesn't support AVX or anything right",
    "start": "775620",
    "end": "777120"
  },
  {
    "text": "now in wasms MD and so uh I don't know",
    "start": "777120",
    "end": "780420"
  },
  {
    "text": "any if anybody's looking at that but",
    "start": "780420",
    "end": "781860"
  },
  {
    "text": "that would be a huge performance benefit",
    "start": "781860",
    "end": "783300"
  },
  {
    "text": "to workloads like this like I think I",
    "start": "783300",
    "end": "785040"
  },
  {
    "text": "think that would",
    "start": "785040",
    "end": "786480"
  },
  {
    "text": "maybe maybe even get on par with Native",
    "start": "786480",
    "end": "788639"
  },
  {
    "text": "performance",
    "start": "788639",
    "end": "791180"
  },
  {
    "text": "all right thanks",
    "start": "797519",
    "end": "800600"
  },
  {
    "text": "[Applause]",
    "start": "800830",
    "end": "807899"
  }
]