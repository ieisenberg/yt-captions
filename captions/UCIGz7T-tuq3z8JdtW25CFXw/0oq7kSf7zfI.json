[
  {
    "text": "[Music]",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "[Applause]",
    "start": "5040",
    "end": "8200"
  },
  {
    "text": "so um thank you sergy for the great",
    "start": "10240",
    "end": "12880"
  },
  {
    "text": "introduction about this project and also",
    "start": "12880",
    "end": "15480"
  },
  {
    "text": "thank you all for staying until the last",
    "start": "15480",
    "end": "17560"
  },
  {
    "text": "talk of this amazing conference so we",
    "start": "17560",
    "end": "20880"
  },
  {
    "text": "are here to talk about computer vision",
    "start": "20880",
    "end": "23320"
  },
  {
    "text": "at the edge with web assembly my name is",
    "start": "23320",
    "end": "26000"
  },
  {
    "text": "Sanel and I'm part of the AI and",
    "start": "26000",
    "end": "28359"
  },
  {
    "text": "Advanced Services Group in br",
    "start": "28359",
    "end": "30679"
  },
  {
    "text": "but today I'm here more as a web",
    "start": "30679",
    "end": "32719"
  },
  {
    "text": "assembly and computer vision",
    "start": "32719",
    "end": "35120"
  },
  {
    "text": "Enthusiast oh hello everyone uh I'm",
    "start": "35120",
    "end": "37719"
  },
  {
    "text": "Migel anel uh I'm a former engineer from",
    "start": "37719",
    "end": "40079"
  },
  {
    "text": "bami and bware and now I'm the founder",
    "start": "40079",
    "end": "43239"
  },
  {
    "text": "of pipeless but we will be talking about",
    "start": "43239",
    "end": "45160"
  },
  {
    "text": "pipeless in a few minutes so first of",
    "start": "45160",
    "end": "48320"
  },
  {
    "text": "all first of all what is computer visum",
    "start": "48320",
    "end": "51600"
  },
  {
    "text": "as you probably know it is about",
    "start": "51600",
    "end": "53399"
  },
  {
    "text": "extracting data from images and videos",
    "start": "53399",
    "end": "56280"
  },
  {
    "text": "that represent what is actually",
    "start": "56280",
    "end": "57719"
  },
  {
    "text": "happening on those images and videos",
    "start": "57719",
    "end": "60039"
  },
  {
    "text": "some examples of computer vision are uh",
    "start": "60039",
    "end": "63039"
  },
  {
    "text": "protective equipment detection in the",
    "start": "63039",
    "end": "64920"
  },
  {
    "text": "construction industry U traffic",
    "start": "64920",
    "end": "67479"
  },
  {
    "text": "analytics like like we can see there or",
    "start": "67479",
    "end": "71560"
  },
  {
    "text": "um analyzing uh players performance in",
    "start": "71560",
    "end": "75320"
  },
  {
    "text": "sports so what do you need to build the",
    "start": "75320",
    "end": "79080"
  },
  {
    "text": "most basic computer vision application",
    "start": "79080",
    "end": "81560"
  },
  {
    "text": "so basically H you need some multimedia",
    "start": "81560",
    "end": "84320"
  },
  {
    "text": "pipelines those pipelines take care of",
    "start": "84320",
    "end": "87479"
  },
  {
    "text": "ingesting the video like thatc come from",
    "start": "87479",
    "end": "90360"
  },
  {
    "text": "an rtsp stream web RTC directly from a",
    "start": "90360",
    "end": "93600"
  },
  {
    "text": "webcam and then they extract rout frames",
    "start": "93600",
    "end": "97399"
  },
  {
    "text": "rout frames are basically a rise of",
    "start": "97399",
    "end": "100200"
  },
  {
    "text": "pixels so they are like numbers and once",
    "start": "100200",
    "end": "103200"
  },
  {
    "text": "you have those rout frames you need to",
    "start": "103200",
    "end": "105399"
  },
  {
    "text": "convert them into something that your",
    "start": "105399",
    "end": "108560"
  },
  {
    "text": "computer vision model can understand so",
    "start": "108560",
    "end": "111280"
  },
  {
    "text": "that's what we call the pre-processing",
    "start": "111280",
    "end": "113079"
  },
  {
    "text": "step your model will delegate the",
    "start": "113079",
    "end": "116000"
  },
  {
    "text": "inference to your your GPU or whatever",
    "start": "116000",
    "end": "118960"
  },
  {
    "text": "Hardware you have using some run times",
    "start": "118960",
    "end": "122119"
  },
  {
    "text": "and then it will produce an output that",
    "start": "122119",
    "end": "124360"
  },
  {
    "text": "you need to convert into some structured",
    "start": "124360",
    "end": "126759"
  },
  {
    "text": "data that is easy to work with and that",
    "start": "126759",
    "end": "129200"
  },
  {
    "text": "is what we call the",
    "start": "129200",
    "end": "131160"
  },
  {
    "text": "postprocessing H so to give you some",
    "start": "131160",
    "end": "133640"
  },
  {
    "text": "context all this needs to happen just in",
    "start": "133640",
    "end": "137200"
  },
  {
    "text": "milliseconds um if you have a more",
    "start": "137200",
    "end": "139640"
  },
  {
    "text": "complex application you need to",
    "start": "139640",
    "end": "141319"
  },
  {
    "text": "replicate the structure below that blue",
    "start": "141319",
    "end": "144080"
  },
  {
    "text": "line several times so you may have",
    "start": "144080",
    "end": "147040"
  },
  {
    "text": "different models different processing",
    "start": "147040",
    "end": "148760"
  },
  {
    "text": "Logic for each model um in sometimes",
    "start": "148760",
    "end": "151319"
  },
  {
    "text": "even different uh I mean several video",
    "start": "151319",
    "end": "153800"
  },
  {
    "text": "streams",
    "start": "153800",
    "end": "156040"
  },
  {
    "text": "so if I'm new to computer visum how do I",
    "start": "156040",
    "end": "160000"
  },
  {
    "text": "get started how do I start creating the",
    "start": "160000",
    "end": "162319"
  },
  {
    "text": "boxes above uh which libraries or",
    "start": "162319",
    "end": "164920"
  },
  {
    "text": "Frameworks can I use to build those",
    "start": "164920",
    "end": "167959"
  },
  {
    "text": "boxes um you don't have so many options",
    "start": "167959",
    "end": "170920"
  },
  {
    "text": "there are some uh libraries like G",
    "start": "170920",
    "end": "173800"
  },
  {
    "text": "streamer to create multimedia pipelines",
    "start": "173800",
    "end": "176040"
  },
  {
    "text": "but they are not actually easy to use um",
    "start": "176040",
    "end": "181360"
  },
  {
    "text": "also how do I parallelize the code I",
    "start": "181360",
    "end": "184360"
  },
  {
    "text": "mean that processing code the",
    "start": "184360",
    "end": "186239"
  },
  {
    "text": "pre-processing and prop and",
    "start": "186239",
    "end": "187879"
  },
  {
    "text": "postprocessing step need to be",
    "start": "187879",
    "end": "189920"
  },
  {
    "text": "parallelized to take advantage of the",
    "start": "189920",
    "end": "191760"
  },
  {
    "text": "full uh capacities of the device also",
    "start": "191760",
    "end": "194840"
  },
  {
    "text": "you may want to run Sometimes using the",
    "start": "194840",
    "end": "197840"
  },
  {
    "text": "wall capacity using the all the cores",
    "start": "197840",
    "end": "200280"
  },
  {
    "text": "that you have available in the device",
    "start": "200280",
    "end": "202120"
  },
  {
    "text": "and other times like when you are",
    "start": "202120",
    "end": "203920"
  },
  {
    "text": "performing some kind of object tracking",
    "start": "203920",
    "end": "206360"
  },
  {
    "text": "you may want to maintain some kind of",
    "start": "206360",
    "end": "209840"
  },
  {
    "text": "internal state that H performs some",
    "start": "209840",
    "end": "213400"
  },
  {
    "text": "sequential processing on the frames so",
    "start": "213400",
    "end": "215480"
  },
  {
    "text": "it has the context of what is of what is",
    "start": "215480",
    "end": "218640"
  },
  {
    "text": "happening uh before the frame that it is",
    "start": "218640",
    "end": "221000"
  },
  {
    "text": "actually",
    "start": "221000",
    "end": "221959"
  },
  {
    "text": "processing and also uh how do you",
    "start": "221959",
    "end": "224920"
  },
  {
    "text": "distribute your applications you may",
    "start": "224920",
    "end": "227239"
  },
  {
    "text": "want to run this on the cloud you may",
    "start": "227239",
    "end": "229080"
  },
  {
    "text": "want to run this on a on a heterogeneous",
    "start": "229080",
    "end": "232599"
  },
  {
    "text": "device Fleet where each device have a",
    "start": "232599",
    "end": "234920"
  },
  {
    "text": "different architecture or has a",
    "start": "234920",
    "end": "237400"
  },
  {
    "text": "different operating system or or well as",
    "start": "237400",
    "end": "240439"
  },
  {
    "text": "we have seen in other talks maybe they",
    "start": "240439",
    "end": "242640"
  },
  {
    "text": "don't even have an operating",
    "start": "242640",
    "end": "244840"
  },
  {
    "text": "system and here is where pipeless com",
    "start": "244840",
    "end": "247840"
  },
  {
    "text": "comes to the rescue pess is an open",
    "start": "247840",
    "end": "249720"
  },
  {
    "text": "source framework for computer vision",
    "start": "249720",
    "end": "251680"
  },
  {
    "text": "that allows you to build and deploy",
    "start": "251680",
    "end": "253360"
  },
  {
    "text": "applications in",
    "start": "253360",
    "end": "255320"
  },
  {
    "text": "minutes uh to pess you just need to to",
    "start": "255320",
    "end": "259079"
  },
  {
    "text": "provide uh you just need to provide pess",
    "start": "259079",
    "end": "261840"
  },
  {
    "text": "with h video sources and it will",
    "start": "261840",
    "end": "264199"
  },
  {
    "text": "automatically produce a structured and",
    "start": "264199",
    "end": "267080"
  },
  {
    "text": "actionable data streams to you so those",
    "start": "267080",
    "end": "270520"
  },
  {
    "text": "uh data streams are easy to work with",
    "start": "270520",
    "end": "273199"
  },
  {
    "text": "just like you work with other you know",
    "start": "273199",
    "end": "276240"
  },
  {
    "text": "like when you work with normal data um",
    "start": "276240",
    "end": "278800"
  },
  {
    "text": "so you don't even need to know anything",
    "start": "278800",
    "end": "280720"
  },
  {
    "text": "about computer vision to create Vision",
    "start": "280720",
    "end": "282840"
  },
  {
    "text": "powered",
    "start": "282840",
    "end": "283960"
  },
  {
    "text": "applications and how does pipeless know",
    "start": "283960",
    "end": "287600"
  },
  {
    "text": "H what kind of data it has to extract",
    "start": "287600",
    "end": "289919"
  },
  {
    "text": "from those video sources here is where",
    "start": "289919",
    "end": "292199"
  },
  {
    "text": "filters come into play so for us a",
    "start": "292199",
    "end": "295199"
  },
  {
    "text": "filter has three main steps H just like",
    "start": "295199",
    "end": "298560"
  },
  {
    "text": "in the in the architecture before we",
    "start": "298560",
    "end": "301320"
  },
  {
    "text": "have the pre-processing step which for",
    "start": "301320",
    "end": "303440"
  },
  {
    "text": "pipeless is basically a function that",
    "start": "303440",
    "end": "306000"
  },
  {
    "text": "receives a rout frame that data aray um",
    "start": "306000",
    "end": "309600"
  },
  {
    "text": "that converts that into something that",
    "start": "309600",
    "end": "311360"
  },
  {
    "text": "our model understands then we then we",
    "start": "311360",
    "end": "313360"
  },
  {
    "text": "have a processing step which H it's can",
    "start": "313360",
    "end": "317120"
  },
  {
    "text": "be a function or can be uh defined in",
    "start": "317120",
    "end": "320120"
  },
  {
    "text": "Json format where you specify the",
    "start": "320120",
    "end": "322240"
  },
  {
    "text": "inference runtime to use which kind of",
    "start": "322240",
    "end": "324919"
  },
  {
    "text": "exe execution provider you want to use",
    "start": "324919",
    "end": "327120"
  },
  {
    "text": "it can be like Nvidia Cuda tensor RT",
    "start": "327120",
    "end": "329880"
  },
  {
    "text": "open bino or whatever and then uh the",
    "start": "329880",
    "end": "334479"
  },
  {
    "text": "postprocessing step which is also a",
    "start": "334479",
    "end": "336880"
  },
  {
    "text": "function that receive the processing",
    "start": "336880",
    "end": "339080"
  },
  {
    "text": "output and converts that into the data",
    "start": "339080",
    "end": "342120"
  },
  {
    "text": "that that is structured and that you can",
    "start": "342120",
    "end": "344319"
  },
  {
    "text": "easily work with later so this is an",
    "start": "344319",
    "end": "348720"
  },
  {
    "text": "example of a very basic filter that will",
    "start": "348720",
    "end": "351120"
  },
  {
    "text": "perform object detection um it will",
    "start": "351120",
    "end": "354080"
  },
  {
    "text": "basically perform the object the object",
    "start": "354080",
    "end": "355639"
  },
  {
    "text": "detection and Export uh the bounding",
    "start": "355639",
    "end": "358120"
  },
  {
    "text": "boxes in an structure format so as you",
    "start": "358120",
    "end": "360319"
  },
  {
    "text": "can see we have a pre-processing",
    "start": "360319",
    "end": "362400"
  },
  {
    "text": "function which is writing in Python in",
    "start": "362400",
    "end": "364479"
  },
  {
    "text": "this case it obtains The Frame data and",
    "start": "364479",
    "end": "368400"
  },
  {
    "text": "return something you know it performs",
    "start": "368400",
    "end": "370599"
  },
  {
    "text": "like resizing some kind of uh",
    "start": "370599",
    "end": "373080"
  },
  {
    "text": "normalization on the pixels that is H",
    "start": "373080",
    "end": "377039"
  },
  {
    "text": "passed to the processing step in which",
    "start": "377039",
    "end": "380280"
  },
  {
    "text": "we are defining this Json that specifies",
    "start": "380280",
    "end": "382840"
  },
  {
    "text": "to use the own andx runtime H we have",
    "start": "382840",
    "end": "385319"
  },
  {
    "text": "there a model URI which is basically H",
    "start": "385319",
    "end": "388520"
  },
  {
    "text": "where we have a a file hosted in an S3",
    "start": "388520",
    "end": "391199"
  },
  {
    "text": "bucket that pess can download um and",
    "start": "391199",
    "end": "395479"
  },
  {
    "text": "instantiate that model locally and the",
    "start": "395479",
    "end": "398120"
  },
  {
    "text": "execution provider like as I said it can",
    "start": "398120",
    "end": "400280"
  },
  {
    "text": "be tensor RT Cuda or whatever and then",
    "start": "400280",
    "end": "403880"
  },
  {
    "text": "we have the post-processing function",
    "start": "403880",
    "end": "405840"
  },
  {
    "text": "which takes the output from that",
    "start": "405840",
    "end": "407840"
  },
  {
    "text": "processing step and Returns the structur",
    "start": "407840",
    "end": "410280"
  },
  {
    "text": "data in this case they are going to be",
    "start": "410280",
    "end": "412400"
  },
  {
    "text": "bounding",
    "start": "412400",
    "end": "413639"
  },
  {
    "text": "boxes um so this is a 9 seconds video uh",
    "start": "413639",
    "end": "418039"
  },
  {
    "text": "from a drone which",
    "start": "418039",
    "end": "420639"
  },
  {
    "text": "uh has a frame rate of 24 frames per",
    "start": "420639",
    "end": "425000"
  },
  {
    "text": "seconds and we are going to be using",
    "start": "425000",
    "end": "427319"
  },
  {
    "text": "this video for the next couple of demos",
    "start": "427319",
    "end": "430240"
  },
  {
    "text": "so this demo uh is going to show H can",
    "start": "430240",
    "end": "435560"
  },
  {
    "text": "you play anle yeah thanks so this Dem is",
    "start": "435560",
    "end": "437919"
  },
  {
    "text": "going to show um the filter that we have",
    "start": "437919",
    "end": "440479"
  },
  {
    "text": "defined above um and over the video that",
    "start": "440479",
    "end": "443400"
  },
  {
    "text": "we has just shown there we are running",
    "start": "443400",
    "end": "444960"
  },
  {
    "text": "pipeless once pipeless has loaded the",
    "start": "444960",
    "end": "447440"
  },
  {
    "text": "filters and it's already running we'll",
    "start": "447440",
    "end": "449720"
  },
  {
    "text": "expose H the interface and in the other",
    "start": "449720",
    "end": "452160"
  },
  {
    "text": "terminal we provide a video source and",
    "start": "452160",
    "end": "455280"
  },
  {
    "text": "it automatically starts um processing",
    "start": "455280",
    "end": "458199"
  },
  {
    "text": "that um extracting our frames you maybe",
    "start": "458199",
    "end": "461120"
  },
  {
    "text": "will notice that that video um I mean",
    "start": "461120",
    "end": "464080"
  },
  {
    "text": "the output has being like H faster than",
    "start": "464080",
    "end": "468199"
  },
  {
    "text": "the original video and this is because",
    "start": "468199",
    "end": "469759"
  },
  {
    "text": "pipeless was able to process that video",
    "start": "469759",
    "end": "472479"
  },
  {
    "text": "at 31 frames per second which is",
    "start": "472479",
    "end": "474680"
  },
  {
    "text": "actually faster than the original",
    "start": "474680",
    "end": "477680"
  },
  {
    "text": "one uh so yeah I'm going to let anel now",
    "start": "477680",
    "end": "482879"
  },
  {
    "text": "so thank you for this great introduction",
    "start": "482879",
    "end": "484919"
  },
  {
    "text": "about PES and computer vision but we are",
    "start": "484919",
    "end": "487479"
  },
  {
    "text": "here at wasang AO so where is web",
    "start": "487479",
    "end": "489759"
  },
  {
    "text": "assembling of this model and what are",
    "start": "489759",
    "end": "491680"
  },
  {
    "text": "the benefits that it can bring so to",
    "start": "491680",
    "end": "494919"
  },
  {
    "text": "talk a little bit more about wasam let",
    "start": "494919",
    "end": "496960"
  },
  {
    "text": "me travel back a little bit in time and",
    "start": "496960",
    "end": "499840"
  },
  {
    "text": "talk you about uh six months ago so as",
    "start": "499840",
    "end": "503800"
  },
  {
    "text": "as U Miguel Angel mentioned before we",
    "start": "503800",
    "end": "505840"
  },
  {
    "text": "were working together in the past in",
    "start": "505840",
    "end": "507560"
  },
  {
    "text": "different companies and we usually catch",
    "start": "507560",
    "end": "509960"
  },
  {
    "text": "up about the projects that we are",
    "start": "509960",
    "end": "511280"
  },
  {
    "text": "working on so 6 months ago we met in a",
    "start": "511280",
    "end": "514880"
  },
  {
    "text": "cafe and we started talking about pess",
    "start": "514880",
    "end": "517719"
  },
  {
    "text": "and how it was solving certain problems",
    "start": "517719",
    "end": "519880"
  },
  {
    "text": "with computer vision so just to give you",
    "start": "519880",
    "end": "522680"
  },
  {
    "text": "a little bit more context about what",
    "start": "522680",
    "end": "524440"
  },
  {
    "text": "happened at that time pess 6 months ago",
    "start": "524440",
    "end": "527600"
  },
  {
    "text": "was a full python project in which all",
    "start": "527600",
    "end": "530839"
  },
  {
    "text": "the filters that Miguel anel was",
    "start": "530839",
    "end": "532839"
  },
  {
    "text": "mentioning before and showing before",
    "start": "532839",
    "end": "534959"
  },
  {
    "text": "were written also in Python it has some",
    "start": "534959",
    "end": "538200"
  },
  {
    "text": "kind of performance issues especially",
    "start": "538200",
    "end": "540079"
  },
  {
    "text": "related about parallelization that it",
    "start": "540079",
    "end": "543040"
  },
  {
    "text": "was actually working pretty well um",
    "start": "543040",
    "end": "545640"
  },
  {
    "text": "another problem was also that both the",
    "start": "545640",
    "end": "548320"
  },
  {
    "text": "platform and the filters were big siiz",
    "start": "548320",
    "end": "551680"
  },
  {
    "text": "artifacts um since you may run pipeless",
    "start": "551680",
    "end": "555640"
  },
  {
    "text": "in different kind of uh environments",
    "start": "555640",
    "end": "558120"
  },
  {
    "text": "from a cloud environment to an edge",
    "start": "558120",
    "end": "560079"
  },
  {
    "text": "device you don't want to actually uh use",
    "start": "560079",
    "end": "563480"
  },
  {
    "text": "like big size artifacts because yeah if",
    "start": "563480",
    "end": "565760"
  },
  {
    "text": "you're running this in a store you may",
    "start": "565760",
    "end": "567399"
  },
  {
    "text": "don't have even a good uh network access",
    "start": "567399",
    "end": "570680"
  },
  {
    "text": "So after talking about",
    "start": "570680",
    "end": "573279"
  },
  {
    "text": "this we started brainstorming some ideas",
    "start": "573279",
    "end": "576959"
  },
  {
    "text": "around this so we focus it or we discuss",
    "start": "576959",
    "end": "580120"
  },
  {
    "text": "it since the same challenges that we",
    "start": "580120",
    "end": "582320"
  },
  {
    "text": "were discussing before um for example in",
    "start": "582320",
    "end": "584880"
  },
  {
    "text": "the developer experience side we were",
    "start": "584880",
    "end": "587120"
  },
  {
    "text": "thinking about hey can we provide tools",
    "start": "587120",
    "end": "590800"
  },
  {
    "text": "to simplify how you develop filters and",
    "start": "590800",
    "end": "593760"
  },
  {
    "text": "reuse some tooling that is around",
    "start": "593760",
    "end": "596800"
  },
  {
    "text": "also um it's true that for mat learning",
    "start": "596800",
    "end": "599959"
  },
  {
    "text": "most of users and developers are used to",
    "start": "599959",
    "end": "602200"
  },
  {
    "text": "work with python but there are other",
    "start": "602200",
    "end": "606399"
  },
  {
    "text": "most likely there are other developers",
    "start": "606399",
    "end": "608200"
  },
  {
    "text": "that are used to work in different",
    "start": "608200",
    "end": "609760"
  },
  {
    "text": "languages that can take advantage on",
    "start": "609760",
    "end": "611640"
  },
  {
    "text": "pess and that may help to grow the",
    "start": "611640",
    "end": "614560"
  },
  {
    "text": "ecosystem of pess to other kind of",
    "start": "614560",
    "end": "617360"
  },
  {
    "text": "developers about performance and",
    "start": "617360",
    "end": "619399"
  },
  {
    "text": "stability we want to ensure that all the",
    "start": "619399",
    "end": "622160"
  },
  {
    "text": "filters perform properly and that you",
    "start": "622160",
    "end": "625040"
  },
  {
    "text": "can effectively parallelize them so you",
    "start": "625040",
    "end": "627720"
  },
  {
    "text": "can take advantage of the full Hardware",
    "start": "627720",
    "end": "629720"
  },
  {
    "text": "that is running underneath um that",
    "start": "629720",
    "end": "632240"
  },
  {
    "text": "basically filters run",
    "start": "632240",
    "end": "634399"
  },
  {
    "text": "anywhere and also about distribution so",
    "start": "634399",
    "end": "637920"
  },
  {
    "text": "if you have worked before with python",
    "start": "637920",
    "end": "639519"
  },
  {
    "text": "applications in which you need to bundle",
    "start": "639519",
    "end": "641639"
  },
  {
    "text": "huge libraries and a lot of D inside one",
    "start": "641639",
    "end": "644320"
  },
  {
    "text": "artifact it may complex and you get big",
    "start": "644320",
    "end": "647360"
  },
  {
    "text": "artifacts so can we simplify these",
    "start": "647360",
    "end": "650399"
  },
  {
    "text": "two um of course as a good citizen of",
    "start": "650399",
    "end": "654160"
  },
  {
    "text": "this amazing Community I asked like um",
    "start": "654160",
    "end": "658480"
  },
  {
    "text": "miguelangel did you hear about web",
    "start": "658480",
    "end": "661279"
  },
  {
    "text": "assembly um this was the time in which",
    "start": "661279",
    "end": "664040"
  },
  {
    "text": "after discussing all the different uh",
    "start": "664040",
    "end": "666560"
  },
  {
    "text": "benefits you see clear that web assembly",
    "start": "666560",
    "end": "668920"
  },
  {
    "text": "can bring many benefits to to pipeless",
    "start": "668920",
    "end": "672600"
  },
  {
    "text": "if we think about the diagram that Migel",
    "start": "672600",
    "end": "675120"
  },
  {
    "text": "anle just showed",
    "start": "675120",
    "end": "676800"
  },
  {
    "text": "before we can say for example that",
    "start": "676800",
    "end": "679279"
  },
  {
    "text": "instead of writing filters in pure",
    "start": "679279",
    "end": "681760"
  },
  {
    "text": "python why not def finding them as web",
    "start": "681760",
    "end": "684440"
  },
  {
    "text": "assembly components so you can use any",
    "start": "684440",
    "end": "686440"
  },
  {
    "text": "language and if new languages can Target",
    "start": "686440",
    "end": "689480"
  },
  {
    "text": "the component model and web assembly",
    "start": "689480",
    "end": "691600"
  },
  {
    "text": "components pess can take advantage of it",
    "start": "691600",
    "end": "694000"
  },
  {
    "text": "without having to create custom sdks for",
    "start": "694000",
    "end": "696519"
  },
  {
    "text": "example for every language so now we",
    "start": "696519",
    "end": "699160"
  },
  {
    "text": "have wasam for pre-processing and",
    "start": "699160",
    "end": "702040"
  },
  {
    "text": "postprocessing you can also instantiate",
    "start": "702040",
    "end": "704639"
  },
  {
    "text": "multiple filters in parallel because",
    "start": "704639",
    "end": "706720"
  },
  {
    "text": "every filter runs totally isolated which",
    "start": "706720",
    "end": "710000"
  },
  {
    "text": "means that you also get more security",
    "start": "710000",
    "end": "712839"
  },
  {
    "text": "and come like make them um keep them",
    "start": "712839",
    "end": "716240"
  },
  {
    "text": "under control so a filter cannot just",
    "start": "716240",
    "end": "718760"
  },
  {
    "text": "blow up the entire",
    "start": "718760",
    "end": "721360"
  },
  {
    "text": "system also if you convert filters to uh",
    "start": "721360",
    "end": "725279"
  },
  {
    "text": "web assembly models basically any filter",
    "start": "725279",
    "end": "728079"
  },
  {
    "text": "runs in any environment that pipeless",
    "start": "728079",
    "end": "730320"
  },
  {
    "text": "can run before if you were uh right um",
    "start": "730320",
    "end": "733920"
  },
  {
    "text": "if you were working with python to",
    "start": "733920",
    "end": "735880"
  },
  {
    "text": "create the the different filters you may",
    "start": "735880",
    "end": "737959"
  },
  {
    "text": "need to install certain libraries that",
    "start": "737959",
    "end": "739959"
  },
  {
    "text": "may not be compatible with the target",
    "start": "739959",
    "end": "742519"
  },
  {
    "text": "environment and finally you define a",
    "start": "742519",
    "end": "745160"
  },
  {
    "text": "pretty strong and proper interface using",
    "start": "745160",
    "end": "747600"
  },
  {
    "text": "composed model but the key thing here is",
    "start": "747600",
    "end": "750480"
  },
  {
    "text": "that you can also split and create some",
    "start": "750480",
    "end": "753839"
  },
  {
    "text": "small models that can contain common",
    "start": "753839",
    "end": "756680"
  },
  {
    "text": "actions that users may want to to run uh",
    "start": "756680",
    "end": "760079"
  },
  {
    "text": "against the streams and then you can",
    "start": "760079",
    "end": "761800"
  },
  {
    "text": "compose them creating a small and",
    "start": "761800",
    "end": "763639"
  },
  {
    "text": "sharable units that anyone can take",
    "start": "763639",
    "end": "765839"
  },
  {
    "text": "advantage",
    "start": "765839",
    "end": "767480"
  },
  {
    "text": "from so just to recap and to see uh to",
    "start": "767480",
    "end": "771440"
  },
  {
    "text": "talk about uh about the evolution from",
    "start": "771440",
    "end": "773399"
  },
  {
    "text": "pipeless 6 months ago it was a python",
    "start": "773399",
    "end": "776360"
  },
  {
    "text": "project both uh the the or the platform",
    "start": "776360",
    "end": "780199"
  },
  {
    "text": "and also the",
    "start": "780199",
    "end": "781320"
  },
  {
    "text": "filters then after like a lot of work",
    "start": "781320",
    "end": "785040"
  },
  {
    "text": "Migel Angel move the entire project to",
    "start": "785040",
    "end": "787160"
  },
  {
    "text": "rest just to gain more control and",
    "start": "787160",
    "end": "789480"
  },
  {
    "text": "stability but as a first step and to",
    "start": "789480",
    "end": "792120"
  },
  {
    "text": "continue supporting python as the guess",
    "start": "792120",
    "end": "794279"
  },
  {
    "text": "language for the filters integrated p 3",
    "start": "794279",
    "end": "797600"
  },
  {
    "text": "as the way to do it and finally and this",
    "start": "797600",
    "end": "800480"
  },
  {
    "text": "is why we are here you have already",
    "start": "800480",
    "end": "802920"
  },
  {
    "text": "support experimental support for web",
    "start": "802920",
    "end": "805199"
  },
  {
    "text": "assembly modules as as",
    "start": "805199",
    "end": "808120"
  },
  {
    "text": "filters and we are now uh going to talk",
    "start": "808120",
    "end": "811120"
  },
  {
    "text": "a little bit more about implementation",
    "start": "811120",
    "end": "812920"
  },
  {
    "text": "details challenges and benefits of this",
    "start": "812920",
    "end": "815720"
  },
  {
    "text": "journey thank you so this is going to be",
    "start": "815720",
    "end": "819320"
  },
  {
    "text": "just uh three more slides before the",
    "start": "819320",
    "end": "822040"
  },
  {
    "text": "second demo um here uh well we had three",
    "start": "822040",
    "end": "827279"
  },
  {
    "text": "main challenges when integrating with",
    "start": "827279",
    "end": "828920"
  },
  {
    "text": "web assembly the first one was H that in",
    "start": "828920",
    "end": "831399"
  },
  {
    "text": "pipeless we have a concept that we call",
    "start": "831399",
    "end": "833639"
  },
  {
    "text": "stateful versus stateless filters um",
    "start": "833639",
    "end": "837560"
  },
  {
    "text": "stateful filters are just like I was",
    "start": "837560",
    "end": "840040"
  },
  {
    "text": "commenting before there are some cases",
    "start": "840040",
    "end": "842880"
  },
  {
    "text": "when you need to have some kind of",
    "start": "842880",
    "end": "844440"
  },
  {
    "text": "internal State you need to perform some",
    "start": "844440",
    "end": "846279"
  },
  {
    "text": "kind of sequential processing and you",
    "start": "846279",
    "end": "848279"
  },
  {
    "text": "need to maintain an state of what was of",
    "start": "848279",
    "end": "851040"
  },
  {
    "text": "what happened on the on the frames that",
    "start": "851040",
    "end": "853560"
  },
  {
    "text": "you processed before so for that uh well",
    "start": "853560",
    "end": "857800"
  },
  {
    "text": "it it this this kind of uh filter was",
    "start": "857800",
    "end": "861000"
  },
  {
    "text": "actually easy to implement you just have",
    "start": "861000",
    "end": "863639"
  },
  {
    "text": "to acquire a loog call the component",
    "start": "863639",
    "end": "866279"
  },
  {
    "text": "function and release the log and that's",
    "start": "866279",
    "end": "868680"
  },
  {
    "text": "all",
    "start": "868680",
    "end": "869560"
  },
  {
    "text": "however we also support stateless",
    "start": "869560",
    "end": "871800"
  },
  {
    "text": "filters stateless filters allows you to",
    "start": "871800",
    "end": "874680"
  },
  {
    "text": "H take advantage of all the capacity of",
    "start": "874680",
    "end": "877800"
  },
  {
    "text": "your of your CPU GPU or whatever and use",
    "start": "877800",
    "end": "881360"
  },
  {
    "text": "all the cores that are available and",
    "start": "881360",
    "end": "884160"
  },
  {
    "text": "this was more complex to implement",
    "start": "884160",
    "end": "886519"
  },
  {
    "text": "because uh at pipeless we are using",
    "start": "886519",
    "end": "889680"
  },
  {
    "text": "Tokyo for the multi threading support",
    "start": "889680",
    "end": "892360"
  },
  {
    "text": "and was some time for the h to as wasam",
    "start": "892360",
    "end": "896519"
  },
  {
    "text": "runtime and when you work with with uh",
    "start": "896519",
    "end": "899920"
  },
  {
    "text": "was and time and you want to call a a",
    "start": "899920",
    "end": "903399"
  },
  {
    "text": "function on a component you need to call",
    "start": "903399",
    "end": "905600"
  },
  {
    "text": "that function uh passing a mutable store",
    "start": "905600",
    "end": "909440"
  },
  {
    "text": "that must be the same store that was",
    "start": "909440",
    "end": "912000"
  },
  {
    "text": "used to instantiate that component so uh",
    "start": "912000",
    "end": "916680"
  },
  {
    "text": "you cannot acquire a loog in this case",
    "start": "916680",
    "end": "918959"
  },
  {
    "text": "because if you acquire a lock you are",
    "start": "918959",
    "end": "920279"
  },
  {
    "text": "locking basically all the threats on",
    "start": "920279",
    "end": "922320"
  },
  {
    "text": "that component so what we did instead",
    "start": "922320",
    "end": "924160"
  },
  {
    "text": "was to instantiate uh a component per",
    "start": "924160",
    "end": "927480"
  },
  {
    "text": "Tokyo thread and in that way each thread",
    "start": "927480",
    "end": "931000"
  },
  {
    "text": "can rank a uh um Can rank the processing",
    "start": "931000",
    "end": "934720"
  },
  {
    "text": "I mean the the pre-processing or",
    "start": "934720",
    "end": "936519"
  },
  {
    "text": "post-processing hook um without having",
    "start": "936519",
    "end": "939600"
  },
  {
    "text": "to lock the rest of the threads so you",
    "start": "939600",
    "end": "941360"
  },
  {
    "text": "can run several frames at the same",
    "start": "941360",
    "end": "944120"
  },
  {
    "text": "time uh the Second Challenge uh well",
    "start": "944120",
    "end": "948040"
  },
  {
    "text": "this more than a challenge because we",
    "start": "948040",
    "end": "949720"
  },
  {
    "text": "have not been able to solve this but it",
    "start": "949720",
    "end": "951839"
  },
  {
    "text": "has been a problem that we faced during",
    "start": "951839",
    "end": "953720"
  },
  {
    "text": "the development is that python",
    "start": "953720",
    "end": "957120"
  },
  {
    "text": "is python with H wasam is very slow",
    "start": "957120",
    "end": "961399"
  },
  {
    "text": "however as anel mentioned before",
    "start": "961399",
    "end": "963440"
  },
  {
    "text": "computer vision users love python they",
    "start": "963440",
    "end": "965959"
  },
  {
    "text": "are mostly researchers or people that",
    "start": "965959",
    "end": "968680"
  },
  {
    "text": "are not actually developers um and",
    "start": "968680",
    "end": "971279"
  },
  {
    "text": "python is easy to understand it's easy",
    "start": "971279",
    "end": "973279"
  },
  {
    "text": "to write and it's basically easy to use",
    "start": "973279",
    "end": "976880"
  },
  {
    "text": "uh so there is something that is very",
    "start": "976880",
    "end": "980120"
  },
  {
    "text": "interesting to comment here and that's",
    "start": "980120",
    "end": "982399"
  },
  {
    "text": "why this is slide is there and is the",
    "start": "982399",
    "end": "984639"
  },
  {
    "text": "fact that in Python you have something",
    "start": "984639",
    "end": "987279"
  },
  {
    "text": "that is called the global interpreter",
    "start": "987279",
    "end": "989079"
  },
  {
    "text": "Locker that doesn't allow you to",
    "start": "989079",
    "end": "991120"
  },
  {
    "text": "actually run multi-threading so the",
    "start": "991120",
    "end": "993480"
  },
  {
    "text": "global interpreter Locker basically uh",
    "start": "993480",
    "end": "996120"
  },
  {
    "text": "locks the python interpreter when some",
    "start": "996120",
    "end": "998560"
  },
  {
    "text": "red when some thread is running not",
    "start": "998560",
    "end": "1001440"
  },
  {
    "text": "allowing you to run a real uh to create",
    "start": "1001440",
    "end": "1005360"
  },
  {
    "text": "real parallelism between different",
    "start": "1005360",
    "end": "1007040"
  },
  {
    "text": "threads uh that limitation can be",
    "start": "1007040",
    "end": "1009399"
  },
  {
    "text": "overcome with wasm but it comes with the",
    "start": "1009399",
    "end": "1012079"
  },
  {
    "text": "cost of memory uh if you mention if you",
    "start": "1012079",
    "end": "1014880"
  },
  {
    "text": "remember the the the slide just before",
    "start": "1014880",
    "end": "1017040"
  },
  {
    "text": "this one we have stateless hooks",
    "start": "1017040",
    "end": "1019440"
  },
  {
    "text": "and when you use componentize pi to",
    "start": "1019440",
    "end": "1022319"
  },
  {
    "text": "create python components which by the",
    "start": "1022319",
    "end": "1024558"
  },
  {
    "text": "way is a great project um it",
    "start": "1024559",
    "end": "1028319"
  },
  {
    "text": "instantiates a a python interpreter and",
    "start": "1028319",
    "end": "1031480"
  },
  {
    "text": "when you create a stateless hooks with",
    "start": "1031480",
    "end": "1033319"
  },
  {
    "text": "pipeless we are instantiating a",
    "start": "1033319",
    "end": "1035520"
  },
  {
    "text": "component per thread so you are actually",
    "start": "1035520",
    "end": "1037760"
  },
  {
    "text": "creating several python interpreters uh",
    "start": "1037760",
    "end": "1040480"
  },
  {
    "text": "at the same time and that consumes a lot",
    "start": "1040480",
    "end": "1042400"
  },
  {
    "text": "of",
    "start": "1042400",
    "end": "1043038"
  },
  {
    "text": "memory and the last one is uh the time",
    "start": "1043039",
    "end": "1047918"
  },
  {
    "text": "that it takes to copy memory from the",
    "start": "1047919",
    "end": "1050559"
  },
  {
    "text": "host to the to the wasam guest let's say",
    "start": "1050559",
    "end": "1053799"
  },
  {
    "text": "or to the to the wasam memory uh to work",
    "start": "1053799",
    "end": "1057080"
  },
  {
    "text": "around this uh what we did was basically",
    "start": "1057080",
    "end": "1059480"
  },
  {
    "text": "to obtain a reference to the frame in",
    "start": "1059480",
    "end": "1062480"
  },
  {
    "text": "the host uh map that to a random value",
    "start": "1062480",
    "end": "1065600"
  },
  {
    "text": "that we pass into the Wason component",
    "start": "1065600",
    "end": "1068039"
  },
  {
    "text": "and then we inject whop we inject uhle",
    "start": "1068039",
    "end": "1072000"
  },
  {
    "text": "can you Che yeah we inject into the",
    "start": "1072000",
    "end": "1074039"
  },
  {
    "text": "Wason components a library of common",
    "start": "1074039",
    "end": "1077600"
  },
  {
    "text": "operations that the user can call and",
    "start": "1077600",
    "end": "1081159"
  },
  {
    "text": "will basically invoke um the the actual",
    "start": "1081159",
    "end": "1085320"
  },
  {
    "text": "operation on the host with the frame",
    "start": "1085320",
    "end": "1088159"
  },
  {
    "text": "reference",
    "start": "1088159",
    "end": "1089919"
  },
  {
    "text": "so uh well this is our second demo which",
    "start": "1089919",
    "end": "1093799"
  },
  {
    "text": "is going to show the same that we saw",
    "start": "1093799",
    "end": "1096520"
  },
  {
    "text": "before but instead of using python",
    "start": "1096520",
    "end": "1098919"
  },
  {
    "text": "functions here we are using uh wasam",
    "start": "1098919",
    "end": "1101799"
  },
  {
    "text": "components H just to clarify the",
    "start": "1101799",
    "end": "1104080"
  },
  {
    "text": "previous demo was using python functions",
    "start": "1104080",
    "end": "1106280"
  },
  {
    "text": "using p 3 and this case we are going to",
    "start": "1106280",
    "end": "1109240"
  },
  {
    "text": "be loading the filter using H wasam",
    "start": "1109240",
    "end": "1112280"
  },
  {
    "text": "components",
    "start": "1112280",
    "end": "1113840"
  },
  {
    "text": "so uh as you can see here H we have",
    "start": "1113840",
    "end": "1118000"
  },
  {
    "text": "there the filters of the the files of",
    "start": "1118000",
    "end": "1120320"
  },
  {
    "text": "the filter we have a postprocessing hook",
    "start": "1120320",
    "end": "1123520"
  },
  {
    "text": "which is a python component and a",
    "start": "1123520",
    "end": "1125240"
  },
  {
    "text": "pre-processing hook which is a rust",
    "start": "1125240",
    "end": "1127320"
  },
  {
    "text": "component so we can easily mix",
    "start": "1127320",
    "end": "1129760"
  },
  {
    "text": "languages now pipeless is loading those",
    "start": "1129760",
    "end": "1132400"
  },
  {
    "text": "filters it takes a bit longer than",
    "start": "1132400",
    "end": "1134400"
  },
  {
    "text": "before because python components are",
    "start": "1134400",
    "end": "1136520"
  },
  {
    "text": "heavy and it exposes the interface face",
    "start": "1136520",
    "end": "1139039"
  },
  {
    "text": "and now in the other terminal we provide",
    "start": "1139039",
    "end": "1140919"
  },
  {
    "text": "the video and you will see here that we",
    "start": "1140919",
    "end": "1143720"
  },
  {
    "text": "have a similar result but in this case",
    "start": "1143720",
    "end": "1146159"
  },
  {
    "text": "it is a slower so why this is slower is",
    "start": "1146159",
    "end": "1149039"
  },
  {
    "text": "basically because of the fact that",
    "start": "1149039",
    "end": "1150880"
  },
  {
    "text": "python components are not very",
    "start": "1150880",
    "end": "1153480"
  },
  {
    "text": "performant um something that is",
    "start": "1153480",
    "end": "1155600"
  },
  {
    "text": "interesting here is that even though",
    "start": "1155600",
    "end": "1158080"
  },
  {
    "text": "python components are not very",
    "start": "1158080",
    "end": "1159480"
  },
  {
    "text": "performant if you write if you write",
    "start": "1159480",
    "end": "1161559"
  },
  {
    "text": "that postprocessing step uh using a rust",
    "start": "1161559",
    "end": "1165159"
  },
  {
    "text": "component it can even beat the first",
    "start": "1165159",
    "end": "1167720"
  },
  {
    "text": "demo that we saw",
    "start": "1167720",
    "end": "1169440"
  },
  {
    "text": "so yeah this this time H it was able to",
    "start": "1169440",
    "end": "1172960"
  },
  {
    "text": "process that at around eight frames per",
    "start": "1172960",
    "end": "1176440"
  },
  {
    "text": "second",
    "start": "1176440",
    "end": "1178720"
  },
  {
    "text": "um okay yeah and just to recap what we",
    "start": "1178720",
    "end": "1181960"
  },
  {
    "text": "have been uh talking about H we expect a",
    "start": "1181960",
    "end": "1185280"
  },
  {
    "text": "bright future for pipeless using wasam",
    "start": "1185280",
    "end": "1188520"
  },
  {
    "text": "um it allows us to run a untrusted code",
    "start": "1188520",
    "end": "1191919"
  },
  {
    "text": "securely because after all uh filters",
    "start": "1191919",
    "end": "1194400"
  },
  {
    "text": "are trusted code you don't know who have",
    "start": "1194400",
    "end": "1196520"
  },
  {
    "text": "wrri in those filters um is easy to",
    "start": "1196520",
    "end": "1199320"
  },
  {
    "text": "share those filters and we can also",
    "start": "1199320",
    "end": "1201799"
  },
  {
    "text": "support several languages uh also as I",
    "start": "1201799",
    "end": "1204760"
  },
  {
    "text": "mentioned before uh there are some ways",
    "start": "1204760",
    "end": "1207159"
  },
  {
    "text": "of getting rid of the limitations of the",
    "start": "1207159",
    "end": "1209200"
  },
  {
    "text": "Python multi threadings H still there",
    "start": "1209200",
    "end": "1212120"
  },
  {
    "text": "are some things that we need to improve",
    "start": "1212120",
    "end": "1214320"
  },
  {
    "text": "um as I said python components are as",
    "start": "1214320",
    "end": "1216960"
  },
  {
    "text": "slow um well we have seen here in know",
    "start": "1216960",
    "end": "1220640"
  },
  {
    "text": "talks some ways of H improving the",
    "start": "1220640",
    "end": "1223159"
  },
  {
    "text": "performance of python with Wason um",
    "start": "1223159",
    "end": "1226840"
  },
  {
    "text": "there is still a a lack of support for",
    "start": "1226840",
    "end": "1229840"
  },
  {
    "text": "libraries that are really useful in",
    "start": "1229840",
    "end": "1231960"
  },
  {
    "text": "computer vision like open CV um still H",
    "start": "1231960",
    "end": "1236360"
  },
  {
    "text": "we are performing a kind of complex",
    "start": "1236360",
    "end": "1238760"
  },
  {
    "text": "complex workaround to avoid copying that",
    "start": "1238760",
    "end": "1241240"
  },
  {
    "text": "memory from was from the host to wasam I",
    "start": "1241240",
    "end": "1244720"
  },
  {
    "text": "have to say that this last point is",
    "start": "1244720",
    "end": "1246880"
  },
  {
    "text": "going to be fixed very soon because uh",
    "start": "1246880",
    "end": "1249679"
  },
  {
    "text": "wasam time is adding support for for",
    "start": "1249679",
    "end": "1253840"
  },
  {
    "text": "resources which is a a type on the WID",
    "start": "1253840",
    "end": "1256039"
  },
  {
    "text": "that allows you to avoid that copy of",
    "start": "1256039",
    "end": "1258080"
  },
  {
    "text": "the memory just maintaining a handle to",
    "start": "1258080",
    "end": "1260159"
  },
  {
    "text": "the host memory um it's a work in",
    "start": "1260159",
    "end": "1262679"
  },
  {
    "text": "progress so we hope to have that ready",
    "start": "1262679",
    "end": "1264520"
  },
  {
    "text": "very soon and with that uh we have",
    "start": "1264520",
    "end": "1269080"
  },
  {
    "text": "finished the presentation so I hope it",
    "start": "1269080",
    "end": "1270720"
  },
  {
    "text": "hasn't been too",
    "start": "1270720",
    "end": "1273799"
  },
  {
    "text": "heavy okay so are there any",
    "start": "1279720",
    "end": "1283960"
  },
  {
    "text": "questions",
    "start": "1285960",
    "end": "1287520"
  },
  {
    "text": "well",
    "start": "1287520",
    "end": "1290520"
  },
  {
    "text": "just curious as a developer knew to web",
    "start": "1294679",
    "end": "1297640"
  },
  {
    "text": "assembly what was the most uh surprising",
    "start": "1297640",
    "end": "1300919"
  },
  {
    "text": "thing either you know surprisingly",
    "start": "1300919",
    "end": "1302760"
  },
  {
    "text": "difficult or surprisingly easy versus",
    "start": "1302760",
    "end": "1305559"
  },
  {
    "text": "you know what what the expectation was",
    "start": "1305559",
    "end": "1307279"
  },
  {
    "text": "to to kind of ADD web assembly to to an",
    "start": "1307279",
    "end": "1309760"
  },
  {
    "text": "existing",
    "start": "1309760",
    "end": "1311440"
  },
  {
    "text": "project yeah that's a good question",
    "start": "1311440",
    "end": "1316000"
  },
  {
    "text": "um I will say",
    "start": "1316200",
    "end": "1319840"
  },
  {
    "text": "the most uh complex part here has been",
    "start": "1319840",
    "end": "1326279"
  },
  {
    "text": "implementing that logic for avoid",
    "start": "1326279",
    "end": "1328360"
  },
  {
    "text": "copying the memory uh I know this is",
    "start": "1328360",
    "end": "1330440"
  },
  {
    "text": "probably something that many people",
    "start": "1330440",
    "end": "1332120"
  },
  {
    "text": "won't face because this is like an",
    "start": "1332120",
    "end": "1334039"
  },
  {
    "text": "special case where we are copying that",
    "start": "1334039",
    "end": "1337000"
  },
  {
    "text": "like a really big really big data",
    "start": "1337000",
    "end": "1339279"
  },
  {
    "text": "structure from the host to the to the",
    "start": "1339279",
    "end": "1342000"
  },
  {
    "text": "wasm memory but I will say that has been",
    "start": "1342000",
    "end": "1344799"
  },
  {
    "text": "the most complex or at least the most",
    "start": "1344799",
    "end": "1347400"
  },
  {
    "text": "time consuming part to to implement",
    "start": "1347400",
    "end": "1349279"
  },
  {
    "text": "securely um yeah I I will say",
    "start": "1349279",
    "end": "1353200"
  },
  {
    "text": "so so are there any other",
    "start": "1353200",
    "end": "1357399"
  },
  {
    "text": "questions okay well so thank you very",
    "start": "1358120",
    "end": "1360679"
  },
  {
    "text": "much for being here uh at the last talk",
    "start": "1360679",
    "end": "1363279"
  },
  {
    "text": "um we will be around so if you have some",
    "start": "1363279",
    "end": "1365279"
  },
  {
    "text": "questions you can just reach out thank",
    "start": "1365279",
    "end": "1369360"
  },
  {
    "text": "you",
    "start": "1369360",
    "end": "1372360"
  }
]