[
  {
    "text": "[Music]",
    "start": "310",
    "end": "12880"
  },
  {
    "text": "hi everyone my name is Colin Murphy i'm an engineer at Adobe um I'm also a member",
    "start": "12880",
    "end": "20320"
  },
  {
    "text": "of the W3C web assembly group and the WY subgroup and uh a maintainer of WASM",
    "start": "20320",
    "end": "26720"
  },
  {
    "text": "cloud um so uh I'm presenting these slides using Adobe Express a product I worked",
    "start": "26720",
    "end": "33520"
  },
  {
    "text": "on for a couple years um please do not hold my ugly slides against the product",
    "start": "33520",
    "end": "40000"
  },
  {
    "text": "and they are ugly i'm not being uh I'm not being modest um uh so in this talk",
    "start": "40000",
    "end": "46320"
  },
  {
    "text": "I'm going to cover what kind of problems the component model can solve and what",
    "start": "46320",
    "end": "51360"
  },
  {
    "text": "would motivate someone like me to use it um a practical walkthrough of how to create components for real SDKs um and",
    "start": "51360",
    "end": "60359"
  },
  {
    "text": "then you know if I maybe may may be so bold how the component model can lead us",
    "start": "60359",
    "end": "65840"
  },
  {
    "text": "to a transformation of the web",
    "start": "65840",
    "end": "71039"
  },
  {
    "text": "um okay so um my my team at Adobe is the",
    "start": "74119",
    "end": "80320"
  },
  {
    "text": "content authenticity initiative team um and what is that uh it promotes an",
    "start": "80320",
    "end": "87920"
  },
  {
    "text": "industry standard for provenence metadata metadata pro uh content credentials to help curb disinformation",
    "start": "87920",
    "end": "94720"
  },
  {
    "text": "and increase trust and transparency online membership includes camera manufacturers editing software media",
    "start": "94720",
    "end": "102079"
  },
  {
    "text": "companies social media companies um and Adobe is a member of it there's also",
    "start": "102079",
    "end": "107520"
  },
  {
    "text": "there also two other groups that are closely related c2pa which is the tooling and the use of content",
    "start": "107520",
    "end": "113920"
  },
  {
    "text": "credentials and then uh the creator attribution and uh working group so",
    "start": "113920",
    "end": "119920"
  },
  {
    "text": "sorry um yeah creator attribution working group um and that's around uh uh",
    "start": "119920",
    "end": "127200"
  },
  {
    "text": "signing your work so you've made work and you sign it and you know that it is yours if somebody else uses it or other",
    "start": "127200",
    "end": "133120"
  },
  {
    "text": "reasons um okay so why would spec why why would",
    "start": "133120",
    "end": "138879"
  },
  {
    "text": "Adobe specifically the content authenticity team use",
    "start": "138879",
    "end": "144360"
  },
  {
    "text": "components okay um so today maintaining SDKs and services is very labor",
    "start": "144360",
    "end": "150640"
  },
  {
    "text": "intensive uh with lots of feature requests from internal teams external partners across a wide range of use",
    "start": "150640",
    "end": "156480"
  },
  {
    "text": "cases um some you know embedded use cases web and web use cases so the big",
    "start": "156480",
    "end": "163040"
  },
  {
    "text": "idea And I if you saw Luke's talk from yesterday not a shouldn't be surprising",
    "start": "163040",
    "end": "168720"
  },
  {
    "text": "is that one component could run as a web service we could generate SDKs uh from our main Rust SDK uh and even",
    "start": "168720",
    "end": "176879"
  },
  {
    "text": "run on embedded devices um I'm not going to talk about creating full SDKs from a",
    "start": "176879",
    "end": "184159"
  },
  {
    "text": "component um I haven't gotten that far yet uh and that would require packaging a runtime with within the SDK for things",
    "start": "184159",
    "end": "191760"
  },
  {
    "text": "like C um things other than JavaScript uh and maybe maybe that'll be a future talk um instead I plan on focusing on",
    "start": "191760",
    "end": "198720"
  },
  {
    "text": "how to create and use a component okay so I've had identified",
    "start": "198720",
    "end": "205680"
  },
  {
    "text": "four steps um number one uh depend get your get everything",
    "start": "205680",
    "end": "211040"
  },
  {
    "text": "compiling to wi p2 that's that used to be the whole talk um two define",
    "start": "211040",
    "end": "216959"
  },
  {
    "text": "interfaces i think we've seen a few examples of that today um and then implement the main API component how",
    "start": "216959",
    "end": "223120"
  },
  {
    "text": "what that looks like and then implement uh dependent components in different languages and compile and whack them all",
    "start": "223120",
    "end": "229879"
  },
  {
    "text": "together um yeah so lots of progress has been made on just dependencies um two",
    "start": "229879",
    "end": "235360"
  },
  {
    "text": "years ago I gave a talk around this and it took uh I think I had to fork eight different crates um that took you know",
    "start": "235360",
    "end": "243599"
  },
  {
    "text": "many nights and weekends to get that working um but now I've have CTPA RS our",
    "start": "243599",
    "end": "249920"
  },
  {
    "text": "our rust crate our CTPA crate officially supports WASM 32 wii p uh p2 without any",
    "start": "249920",
    "end": "256479"
  },
  {
    "text": "forks um and even the CLI tool the ctpa tool just works uh with time you can do",
    "start": "256479",
    "end": "263680"
  },
  {
    "text": "wom time ctpa tool give it the right directory permissions and it'll run um",
    "start": "263680",
    "end": "269759"
  },
  {
    "text": "and now I am biased but I find it easier to build for WAZI P2 than was 32 unknown",
    "start": "269759",
    "end": "277199"
  },
  {
    "text": "unknown with WASM binden um and having the ability to use standard lib APIs file systems specifically for C2PA is a",
    "start": "277199",
    "end": "284880"
  },
  {
    "text": "big plus um and it it actually is less configuration and additional code than",
    "start": "284880",
    "end": "291040"
  },
  {
    "text": "wasn't binden in our SDK um also uh W stood I don't know a WSD uh",
    "start": "291040",
    "end": "299360"
  },
  {
    "text": "super valuable for tests uh and HTTP i mean we've seen it in multiple talks",
    "start": "299360",
    "end": "304800"
  },
  {
    "text": "today it's it's invaluable since we don't have Tokyo or request sport",
    "start": "304800",
    "end": "310160"
  },
  {
    "text": "yet okay so step two defining interfaces",
    "start": "310840",
    "end": "317000"
  },
  {
    "text": "um this was actually very straightforward for me because we already had so many uh foreign function",
    "start": "317199",
    "end": "323720"
  },
  {
    "text": "interfaces so many language bindings for CTP RS i just basically took that very",
    "start": "323720",
    "end": "329039"
  },
  {
    "text": "uh explicit public API uh and and I uh I just kind of converted",
    "start": "329039",
    "end": "336400"
  },
  {
    "text": "into wit um I think the only the real challenge",
    "start": "336400",
    "end": "341919"
  },
  {
    "text": "is to for for people like me when you're really you know I' I'd heard about importing and exporting and using um but",
    "start": "341919",
    "end": "348960"
  },
  {
    "text": "it actually it's not obvious it's not obvious what a world imports and exports",
    "start": "348960",
    "end": "354160"
  },
  {
    "text": "and how that works so that that will that definitely takes um some getting used to um I'm going to try to I'm gonna",
    "start": "354160",
    "end": "362080"
  },
  {
    "text": "have to do it eventually so I'm going to have to going to try to show if Oh man okay hold on shortcuts",
    "start": "362080",
    "end": "371319"
  },
  {
    "text": "no oh there we go okay so this is the wit this is the main part of the wit file um",
    "start": "371319",
    "end": "380039"
  },
  {
    "text": "um so as you can see I've got a couple resources and I've got a function this is the main interface um there's also a",
    "start": "380560",
    "end": "386080"
  },
  {
    "text": "types interface which is very large um but really not used um but pretty pretty",
    "start": "386080",
    "end": "392400"
  },
  {
    "text": "basic really straightforward pretty pretty easy to see",
    "start": "392400",
    "end": "398840"
  },
  {
    "text": "okay back all right [Music] um use streams is another piece of",
    "start": "398840",
    "end": "406560"
  },
  {
    "text": "advice I'd have you um you do not want to duplicate large data buffers on both",
    "start": "406560",
    "end": "412080"
  },
  {
    "text": "sides of a component interface um and you know with 0.3 streams are going to be even easier",
    "start": "412080",
    "end": "419160"
  },
  {
    "text": "um uh you know uh let's see um one",
    "start": "419160",
    "end": "424199"
  },
  {
    "text": "challenge so kind of why we have to use big files why we have big things is one",
    "start": "424199",
    "end": "429440"
  },
  {
    "text": "challenge particular to C2PA is that uh applying credentials to media containers right so vid pictures and video think of",
    "start": "429440",
    "end": "436000"
  },
  {
    "text": "that that's what that when I say containers that's what I'm talking about requires seekable streams because um",
    "start": "436000",
    "end": "442639"
  },
  {
    "text": "when you're validating a image let's just say um you you have to jump around",
    "start": "442639",
    "end": "447759"
  },
  {
    "text": "within the file so you can't just stream it and and p and uh you know consume the",
    "start": "447759",
    "end": "453520"
  },
  {
    "text": "stream you have to jump back and forth so it has to be a a uh a file or it has",
    "start": "453520",
    "end": "459199"
  },
  {
    "text": "to be a buffer and if it's a video there's no way you're going to get that into memory especially in these kind of",
    "start": "459199",
    "end": "464639"
  },
  {
    "text": "wasn't you know very small type use cases so you have to use uh file descriptors i did not know about file",
    "start": "464639",
    "end": "470720"
  },
  {
    "text": "descriptors when I first started this project i wish I had um but really very",
    "start": "470720",
    "end": "475840"
  },
  {
    "text": "uh very useful um uh and you can get SQL streams really",
    "start": "475840",
    "end": "480879"
  },
  {
    "text": "easily from them um so to do this I created three",
    "start": "480879",
    "end": "488240"
  },
  {
    "text": "interfaces and four worlds that's that's the talk um the uh interfaces are C2PA which I",
    "start": "488240",
    "end": "496560"
  },
  {
    "text": "just showed you um SER which I'll get to in a little bit when I talk about callbacks and first class functions um",
    "start": "496560",
    "end": "503360"
  },
  {
    "text": "and uh the types which I kind of already mentioned and then these interfaces are utilized by four worlds the main world",
    "start": "503360",
    "end": "509840"
  },
  {
    "text": "CI which is going to be implement which is going the main component is going to implement um the serer which wraps uh",
    "start": "509840",
    "end": "517599"
  },
  {
    "text": "the serer function uh and allows it to be used as an argument in uh the CI",
    "start": "517599",
    "end": "522959"
  },
  {
    "text": "world and then C2PA tool just a CLI tool",
    "start": "522959",
    "end": "528440"
  },
  {
    "text": "um uh really just something that uses the C the CI world and then also um the",
    "start": "528440",
    "end": "535040"
  },
  {
    "text": "uh the C2PA web server which is um which exports the incoming handler so",
    "start": "535040",
    "end": "541440"
  },
  {
    "text": "you can make a web service i did it in node in this example the rest I implemented in Rust because that's",
    "start": "541440",
    "end": "547200"
  },
  {
    "text": "that's easier for me um okay um so then implementing so I",
    "start": "547200",
    "end": "554560"
  },
  {
    "text": "wanted to create this main component um and it's pretty familiar to anyone using who's done FFI bindings so UniFi or I've",
    "start": "554560",
    "end": "562560"
  },
  {
    "text": "been using a lot of neon for node recently um with bind genen very mature",
    "start": "562560",
    "end": "568720"
  },
  {
    "text": "uh the best bind genen uh you know the best of the bindens um additional",
    "start": "568720",
    "end": "574560"
  },
  {
    "text": "derives I'll show in a little bit is basically that what bind genen would be unusable for this kind of use case for",
    "start": "574560",
    "end": "580640"
  },
  {
    "text": "for an actual real SDK with lots and lots of types without additional derives",
    "start": "580640",
    "end": "587480"
  },
  {
    "text": "um and uh and then wtood I don't know if you're",
    "start": "587480",
    "end": "593360"
  },
  {
    "text": "I'm pronouncing that right Um but definitely needed",
    "start": "593360",
    "end": "598800"
  },
  {
    "text": "um for if you want to do any sort of tests um see if I can once again temp fate and",
    "start": "598800",
    "end": "607720"
  },
  {
    "text": "um okay right so so yeah so this is it was just implemented in lib RS nothing",
    "start": "607720",
    "end": "615920"
  },
  {
    "text": "uh you know this is this is a public repo that the SDK is a public is also",
    "start": "615920",
    "end": "621360"
  },
  {
    "text": "public um this is all open source um just going to go back",
    "start": "621360",
    "end": "628240"
  },
  {
    "text": "um just going to describe what you're seeing here okay So um this is this is the big idea right if",
    "start": "628240",
    "end": "635760"
  },
  {
    "text": "I if I go back to that world um I had an interface called c2pa I defined a",
    "start": "635760",
    "end": "641600"
  },
  {
    "text": "function and I define two resources and this and I'm going to implement the guest for for that so I just define a",
    "start": "641600",
    "end": "649200"
  },
  {
    "text": "strct it could have any name manifest in this case implement guest for the manifest I have to define the functions",
    "start": "649200",
    "end": "655839"
  },
  {
    "text": "and just ex and and define some types",
    "start": "655839",
    "end": "660959"
  },
  {
    "text": "uh And then I wrap I get C2PA builder from uh my SDK the C2PA RS SDK and I",
    "start": "660959",
    "end": "668000"
  },
  {
    "text": "just wrap that in a ref cell and then I'm just and then from there I'm just passing on the arguments",
    "start": "668000",
    "end": "675519"
  },
  {
    "text": "from the wit definition into the SDK uh and from almost everything super",
    "start": "675519",
    "end": "681680"
  },
  {
    "text": "straightforward uh you know whit wit gets mapped into a certain type of rust type you can either",
    "start": "681680",
    "end": "687279"
  },
  {
    "text": "use that rust type directly or you can convert it into you know whatever you need it to be",
    "start": "687279",
    "end": "694160"
  },
  {
    "text": "um the kind of the closest type from wit and then you call the SDK methods really",
    "start": "694160",
    "end": "700000"
  },
  {
    "text": "really basic um for the most part until until you get",
    "start": "700000",
    "end": "706920"
  },
  {
    "text": "um well until you get to first class functions um there are some gotchas",
    "start": "706920",
    "end": "712480"
  },
  {
    "text": "around whitbinden um if you notice Here I've got",
    "start": "712480",
    "end": "717839"
  },
  {
    "text": "statements here that say generate and I have some that say wy io you know colon",
    "start": "717839",
    "end": "723680"
  },
  {
    "text": "so generate is typically what you do with witbind genen it just sees the wit and it and it knows what to do to make",
    "start": "723680",
    "end": "729920"
  },
  {
    "text": "rust strus and types and interfaces things like that um but unfortunately I",
    "start": "729920",
    "end": "735760"
  },
  {
    "text": "needed input stream so I need wiio input stream uh to have read and um and seek",
    "start": "735760",
    "end": "745279"
  },
  {
    "text": "so that's not done by whit bind genen that but that is done in the w was crate so you can you can specify no I want to",
    "start": "745279",
    "end": "752399"
  },
  {
    "text": "use the crate implementation I don't want to use your whit binden um which is",
    "start": "752399",
    "end": "757839"
  },
  {
    "text": "great makes it possible for me to do this example um make this code uh but",
    "start": "757839",
    "end": "762959"
  },
  {
    "text": "the problem is that when you use the waz crate whatever version you have locally",
    "start": "762959",
    "end": "768399"
  },
  {
    "text": "um the types the interface version might not be 0.24 24 and you might have",
    "start": "768399",
    "end": "775040"
  },
  {
    "text": "written 0.24 here doesn't mean it's going to actually be 0.24 um so",
    "start": "775040",
    "end": "781480"
  },
  {
    "text": "uh when you whack the you'll you'll be able to build just fine but when you whack the components together it's going",
    "start": "781480",
    "end": "788480"
  },
  {
    "text": "to give you uh a tight mismatch um and it's it'll and there is good news um you",
    "start": "788480",
    "end": "795519"
  },
  {
    "text": "there is W was tools so W was tools component wit you can use that to debug",
    "start": "795519",
    "end": "801920"
  },
  {
    "text": "make sure you print out your widths from the components and see which one doesn't have the version of the interface that",
    "start": "801920",
    "end": "807360"
  },
  {
    "text": "you were expecting um other than that additional derives makes this possible this would",
    "start": "807360",
    "end": "814480"
  },
  {
    "text": "not be possible to make an SDK with uh without additional derives certialize",
    "start": "814480",
    "end": "820399"
  },
  {
    "text": "serialize would not be possible to implement on all of these str I'm creating um so uh the only problem with",
    "start": "820399",
    "end": "828399"
  },
  {
    "text": "that was it will crash well whit bind genen will will fail if uh it's trying",
    "start": "828399",
    "end": "835200"
  },
  {
    "text": "to implement that drives on a resource u and if you wrap resources in a variant",
    "start": "835200",
    "end": "842000"
  },
  {
    "text": "right and an enum uh it doesn't know what it's do it doesn't know that they're resources and it'll it'll it'll",
    "start": "842000",
    "end": "847680"
  },
  {
    "text": "fail so I just added to whit binden this little uh ignore thing so I said \"Hey",
    "start": "847680",
    "end": "853440"
  },
  {
    "text": "I've got these two variants they wrap they have uh one some of the you know",
    "start": "853440",
    "end": "858560"
  },
  {
    "text": "one option of the variant is is a resource so just ignore",
    "start": "858560",
    "end": "864079"
  },
  {
    "text": "it.\" And then you get you can serialize and deserialize all the types you",
    "start": "864120",
    "end": "870880"
  },
  {
    "text": "generate okay so first class functions um ordinarily in a rust crate in a",
    "start": "873160",
    "end": "880720"
  },
  {
    "text": "public SDK you don't want to have traits be part of that public SDK um un uh you",
    "start": "880720",
    "end": "887839"
  },
  {
    "text": "know unless you have a good reason uh so because it adds complexity it can slow things down it makes language bindings",
    "start": "887839",
    "end": "894560"
  },
  {
    "text": "uh aka wit really difficult um in this case though the CI team we",
    "start": "894560",
    "end": "900560"
  },
  {
    "text": "have a very good reason and that's that um a cryptographic science signer is provided by the user um and they don't",
    "start": "900560",
    "end": "907839"
  },
  {
    "text": "want to have to pass that into the SDK uh this allows the user to sign their manifest or their or apply their cog",
    "start": "907839",
    "end": "914560"
  },
  {
    "text": "credentials um without passing the their private key so this is this is by design",
    "start": "914560",
    "end": "919839"
  },
  {
    "text": "a user a call back function and that's just part of the public uh",
    "start": "919839",
    "end": "925519"
  },
  {
    "text": "API um callbacks are supported i mean if you if you've done wom bind genen if",
    "start": "925639",
    "end": "931519"
  },
  {
    "text": "you've done an mcript inton you can call you can use call has callbacks to functions um so this is from the",
    "start": "931519",
    "end": "939240"
  },
  {
    "text": "jsdk for wasn't bind genen yeah here's a pointer to a function that's perfectly fine",
    "start": "939240",
    "end": "945519"
  },
  {
    "text": "um problem is this can't be expressed in wit and it can't be expressed in wit for a reason um which I don't fully",
    "start": "945519",
    "end": "952880"
  },
  {
    "text": "understand but was explained to me yesterday but um but around you know you have loops you don't know the that both",
    "start": "952880",
    "end": "959120"
  },
  {
    "text": "sides need to understand that a callback has been passed right and when you know you're going to",
    "start": "959120",
    "end": "964839"
  },
  {
    "text": "JavaScript JavaScript is aware of that there's a callback that needs to be there but you can't just do that generally you have to um at least not",
    "start": "964839",
    "end": "971600"
  },
  {
    "text": "yet but this this will this will be implemented um we're going to um All",
    "start": "971600",
    "end": "977680"
  },
  {
    "text": "right so since I can't pass a a call back as an argument in wit the serer function needs to be defined in an",
    "start": "977680",
    "end": "983759"
  },
  {
    "text": "interface implemented in a separate world you know referenced in a separate",
    "start": "983759",
    "end": "989360"
  },
  {
    "text": "world implemented into component and then imported into the main CI world so",
    "start": "989360",
    "end": "995279"
  },
  {
    "text": "that that function you can see it right there um",
    "start": "995279",
    "end": "1001000"
  },
  {
    "text": "uh you know that funk data list u8 to uh returns result list u8",
    "start": "1001000",
    "end": "1008440"
  },
  {
    "text": "error so this is how you because you can't is wit doesn't support callbacks",
    "start": "1008440",
    "end": "1013759"
  },
  {
    "text": "this is how you can make it work um in the main CGPS SDK component the",
    "start": "1013759",
    "end": "1019519"
  },
  {
    "text": "import is wrapped in a strct and the serer trait is then implemented i mean",
    "start": "1019519",
    "end": "1024880"
  },
  {
    "text": "um and this would have to be done regardless right even if we did support callbacks you we're not going to support",
    "start": "1024880",
    "end": "1030240"
  },
  {
    "text": "traits in wit right we're not going to support rust traits in wit so um you would still have to do this um",
    "start": "1030240",
    "end": "1037839"
  },
  {
    "text": "and then this implementation of the trait is instantiated in the main",
    "start": "1037839",
    "end": "1043360"
  },
  {
    "text": "component implementation of the main component you can see here let ser there's some sort",
    "start": "1043360",
    "end": "1048880"
  },
  {
    "text": "of a little bit of a configuration and then we pass that so that import gets",
    "start": "1048880",
    "end": "1054799"
  },
  {
    "text": "wrapped in a in a in a well gets wrapped in a strct which implements a trait and then we pass that funk to the main SDK",
    "start": "1054799",
    "end": "1063520"
  },
  {
    "text": "so in summary instead of taking a function as an argument as a you know a callback function the serer is defined",
    "start": "1063520",
    "end": "1069039"
  },
  {
    "text": "in a different interface imported into a different world which is compiled into a component imported to the main component",
    "start": "1069039",
    "end": "1074240"
  },
  {
    "text": "wrapped in a strruct that implements the desired trait and finally pass the original method in the SDK so that's",
    "start": "1074240",
    "end": "1079520"
  },
  {
    "text": "that's a lot uh and certainly if you were doing this every time you had a call back in your SDK it",
    "start": "1079520",
    "end": "1086960"
  },
  {
    "text": "would be unsustainable right um uh so but with only one this is",
    "start": "1086960",
    "end": "1094160"
  },
  {
    "text": "actually presents interesting possibilities of having this idea of having a component that implements a trait",
    "start": "1094160",
    "end": "1100559"
  },
  {
    "text": "um for a callback um uh so and I'm going to get to kind of",
    "start": "1100559",
    "end": "1106880"
  },
  {
    "text": "some of that cool stuff later um okay so getting to uh getting to the kind of the demos here",
    "start": "1106880",
    "end": "1113840"
  },
  {
    "text": "so I have these dependent components which I defined in those other worlds",
    "start": "1113840",
    "end": "1118880"
  },
  {
    "text": "um I use JO for web and node obviously we just saw JCO jco is awesome um I did",
    "start": "1118880",
    "end": "1125360"
  },
  {
    "text": "Rust for a CLI i didn't get to go i wish I had uh because it's come a long",
    "start": "1125360",
    "end": "1132200"
  },
  {
    "text": "way okay so um really pretty basic for I found JCode",
    "start": "1132200",
    "end": "1138480"
  },
  {
    "text": "to be super straightforward uh it's much better in a lot of ways than than neon or other um node binding",
    "start": "1138480",
    "end": "1147039"
  },
  {
    "text": "tools um because it generates types directly from wit so this is before I",
    "start": "1147039",
    "end": "1152880"
  },
  {
    "text": "have to with those other tools I have to write I have to create if I'm doing typescript I have to create types files",
    "start": "1152880",
    "end": "1158880"
  },
  {
    "text": "by hand for many many strus it's a real pain in the butt um but this I can",
    "start": "1158880",
    "end": "1164080"
  },
  {
    "text": "generate this directly and then of course ts config I mean it's funny",
    "start": "1164080",
    "end": "1170080"
  },
  {
    "text": "bundling and ts config and and roll up all these things that I used for years without ever thinking about them are",
    "start": "1170080",
    "end": "1175840"
  },
  {
    "text": "actually very hard if you just starting for nothing um for me at least um so yeah so we generate the types we build",
    "start": "1175840",
    "end": "1182480"
  },
  {
    "text": "the component we whack it all together and then we serve it",
    "start": "1182480",
    "end": "1187640"
  },
  {
    "text": "um really like very straightforward and it's all in in the in the in the it's in",
    "start": "1187640",
    "end": "1193039"
  },
  {
    "text": "the package.json when you if you want to pull this down um JCO for web um these",
    "start": "1193039",
    "end": "1200960"
  },
  {
    "text": "are the steps of course leading out leaving out the TS compilation and the bundle um unlike other parts of the project with the web I'm not uh directly",
    "start": "1200960",
    "end": "1209440"
  },
  {
    "text": "using a world i'm just I'm I'm not implementing a world i'm just taking a component and I'm saying transpile this",
    "start": "1209440",
    "end": "1216160"
  },
  {
    "text": "so I can use it in in a in a web page um",
    "start": "1216160",
    "end": "1221520"
  },
  {
    "text": "uh obviously the s has the same ts challenges the actual the actual work took no time the typescript took a long",
    "start": "1221520",
    "end": "1228480"
  },
  {
    "text": "time um and uh a couple challenges just around JCO kind of things that still",
    "start": "1228480",
    "end": "1235120"
  },
  {
    "text": "need to be done um there's no way to get a wazy stream from a uh a you know a",
    "start": "1235120",
    "end": "1241760"
  },
  {
    "text": "JavaScript readable stream at least not yet so just in this example I have to read the whole stream into a into a list",
    "start": "1241760",
    "end": "1248799"
  },
  {
    "text": "u and uh and then pass that to my SDK to the uh main",
    "start": "1248799",
    "end": "1254520"
  },
  {
    "text": "component um and so I basically have to take a stream put it into a list and then convert it back into a",
    "start": "1254520",
    "end": "1261320"
  },
  {
    "text": "stream um also this is kind of funny because it's very unexpected if you",
    "start": "1261320",
    "end": "1267360"
  },
  {
    "text": "forget to if you have to whack together a bunch of components uh in order to uh",
    "start": "1267360",
    "end": "1273280"
  },
  {
    "text": "fully implement the world that you're then transpiling the component you're then transpiling if you don't do that",
    "start": "1273280",
    "end": "1278559"
  },
  {
    "text": "you get a coores error which is which is pretty funny i just put that in there that's just funny so it's like it's",
    "start": "1278559",
    "end": "1283919"
  },
  {
    "text": "thinking that this reference to uh this other world this import is actually a script and it's going to give you a",
    "start": "1283919",
    "end": "1289919"
  },
  {
    "text": "cause error i thought that was fun okay so let's let's demo i've been encouraged",
    "start": "1289919",
    "end": "1296240"
  },
  {
    "text": "by the other demos at the conference um so let's see um so I don't usually do",
    "start": "1296240",
    "end": "1304320"
  },
  {
    "text": "live demos um and let me see if I can if I can do",
    "start": "1304320",
    "end": "1310840"
  },
  {
    "text": "this get to the terminal i hope this doesn't take the whole",
    "start": "1310840",
    "end": "1317600"
  },
  {
    "text": "time okay all right so first the",
    "start": "1323559",
    "end": "1329960"
  },
  {
    "text": "web i should have done control L learned that from the Firmian demo yesterday",
    "start": "1329960",
    "end": "1335679"
  },
  {
    "text": "uh npm run start so it's going to do all those things I just mentioned it's going to transpile it it's going to serve it",
    "start": "1335679",
    "end": "1343280"
  },
  {
    "text": "and I'm going to uh go back to the web",
    "start": "1343280",
    "end": "1350490"
  },
  {
    "text": "[Music] page and I'm going to drop a",
    "start": "1350490",
    "end": "1356720"
  },
  {
    "text": "file drop a file into it see if I can drag and Okay so so here this is a like",
    "start": "1356840",
    "end": "1365360"
  },
  {
    "text": "here's this Oh it doesn't open it opens it on the wrong page okay so here's a here's a picture okay it has some it has",
    "start": "1365360",
    "end": "1370880"
  },
  {
    "text": "a CGPA manifest in it that's the important part and so I'm going to give",
    "start": "1370880",
    "end": "1376559"
  },
  {
    "text": "it a bunch of JSON i mean I'm basically going to read out that manifest here on this page okay it's a bunch of JSON yes",
    "start": "1376559",
    "end": "1383760"
  },
  {
    "text": "it's not very pretty for a demo but it's actually what real APIs and SDKs do they usually spit out a bunch of JSON so not",
    "start": "1383760",
    "end": "1390880"
  },
  {
    "text": "going to apologize um and then uh and as you can see",
    "start": "1390880",
    "end": "1396840"
  },
  {
    "text": "um if I do the same thing with uh then if I",
    "start": "1396840",
    "end": "1402960"
  },
  {
    "text": "want to stand up that node server right and I want to",
    "start": "1402960",
    "end": "1411679"
  },
  {
    "text": "uh curl that same file I'm going to get the same result so it's both node and",
    "start": "1411679",
    "end": "1418320"
  },
  {
    "text": "web much less cool after till's debugging of the using the same component in jco in jco before web and",
    "start": "1418320",
    "end": "1425120"
  },
  {
    "text": "uh but you get the idea um and then um and then I can",
    "start": "1425120",
    "end": "1432200"
  },
  {
    "text": "um I can apply my CLI now this is actually a little more advanced this is",
    "start": "1432200",
    "end": "1437440"
  },
  {
    "text": "actually doing that signing it's going to apply a new manifest to the file and it's going to assign it with cryp you",
    "start": "1437440",
    "end": "1444559"
  },
  {
    "text": "know using rust crypto in native rust uh cryptography um and then if",
    "start": "1444559",
    "end": "1453039"
  },
  {
    "text": "I right and then if I want to take that new file we're going to see that it's",
    "start": "1454840",
    "end": "1460720"
  },
  {
    "text": "got a new manifest so there it is okay so yeah so",
    "start": "1460720",
    "end": "1466799"
  },
  {
    "text": "that is the demo it y thank [Applause]",
    "start": "1466799",
    "end": "1473779"
  },
  {
    "text": "you right yeah and that's the idea right it's a very complicated the C2B RS is",
    "start": "1475240",
    "end": "1481520"
  },
  {
    "text": "SDK is very complicated it's lots of cryptography um it's much much harder i",
    "start": "1481520",
    "end": "1487520"
  },
  {
    "text": "can't I am still only learning the basics of it um but it does I don't have to i can make components from it um",
    "start": "1487520",
    "end": "1496520"
  },
  {
    "text": "so where do we go from here like what do I what am I going to uh you know abuse",
    "start": "1496520",
    "end": "1502320"
  },
  {
    "text": "this time to to to you know complain about um so number one on my wish list",
    "start": "1502320",
    "end": "1508240"
  },
  {
    "text": "right over here yep java so every time at Adobe I bring up Wazi people are like",
    "start": "1508240",
    "end": "1515520"
  },
  {
    "text": "\"Oh so I can take my Java and can buy it to Wazi.\" And like \"Oh no no you can't do that.\" So someday that that'll that",
    "start": "1515520",
    "end": "1523440"
  },
  {
    "text": "story is going to change and those guys over there are going to do it uh the other two the others are in kind of no",
    "start": "1523440",
    "end": "1528880"
  },
  {
    "text": "particular order um uh testing components frame you know we've got this",
    "start": "1528880",
    "end": "1534400"
  },
  {
    "text": "wit should be eas easy easy to make testing tools now we've got the debugging let's get the the testing kind",
    "start": "1534400",
    "end": "1539840"
  },
  {
    "text": "of going there is w uh w a d g wge for",
    "start": "1539840",
    "end": "1545159"
  },
  {
    "text": "go uh but you kind of a general purpose i've got a I've got a component i should",
    "start": "1545159",
    "end": "1551039"
  },
  {
    "text": "be able to throw data at it um and for Rust nothing I haven't already mentioned",
    "start": "1551039",
    "end": "1557039"
  },
  {
    "text": "um and hopefully uh hopefully now with the async and then the threads this stuff's going to just work uh Tokyo um",
    "start": "1557039",
    "end": "1565760"
  },
  {
    "text": "it'd be nice to not have to use nightly to compile my SDK to Wasp 2 um you know",
    "start": "1565760",
    "end": "1573120"
  },
  {
    "text": "uh callback functions it's going to happen and then component support in browsers i don't know us sometimes we",
    "start": "1573120",
    "end": "1578720"
  },
  {
    "text": "usually get some like Chrome people here i don't think we have any this year but Chrome Chrome uh component support in",
    "start": "1578720",
    "end": "1584080"
  },
  {
    "text": "browsers and more on that in a second here so more ugly slides incredibly ugly",
    "start": "1584080",
    "end": "1589200"
  },
  {
    "text": "slides um this is what I did i made three components i whacked them together",
    "start": "1589200",
    "end": "1594720"
  },
  {
    "text": "and this application part can be anything that can be you know supports the component model any language the",
    "start": "1594720",
    "end": "1600720"
  },
  {
    "text": "serer part can be anything that supports the uh the component model and I can put those together with my SDK's component",
    "start": "1600720",
    "end": "1608320"
  },
  {
    "text": "and uh encompose lots of different types of applications um with different trust boundaries and and cryptographical use",
    "start": "1608320",
    "end": "1615799"
  },
  {
    "text": "cases um users could compile their own signers right um with WASM cloud I don't",
    "start": "1615799",
    "end": "1623919"
  },
  {
    "text": "have to whack them together i can if it's performant right uh but these components can all be",
    "start": "1623919",
    "end": "1630200"
  },
  {
    "text": "distinct um and multiple applications can all be paired with this single C2PA",
    "start": "1630200",
    "end": "1636799"
  },
  {
    "text": "API component um customers could specify their own configuration if we allowed you know provided an interface for that",
    "start": "1636799",
    "end": "1643840"
  },
  {
    "text": "um uh components could be dispersed through a network of CDNs cloud providers",
    "start": "1643840",
    "end": "1650240"
  },
  {
    "text": "traditional data centers the uh which gets me to this this next point wouldn't",
    "start": "1650240",
    "end": "1655919"
  },
  {
    "text": "it be and it's really ugly sorry uh the browser or something like the browser something the browser so supports",
    "start": "1655919",
    "end": "1662400"
  },
  {
    "text": "component model and supports some sort of WRPC connection maybe over quick um",
    "start": "1662400",
    "end": "1669440"
  },
  {
    "text": "the serer in the application exists where the asset is so I I'm a I'm I'm",
    "start": "1669440",
    "end": "1675039"
  },
  {
    "text": "editing a photo in Photoshop that's where the or a video that's where it",
    "start": "1675039",
    "end": "1680240"
  },
  {
    "text": "lives and that's where the processing happens um the I I send up the manifest to an",
    "start": "1680240",
    "end": "1688080"
  },
  {
    "text": "Adobe service that has the Adobe key that we do not want running on your browser it signs that yes you used",
    "start": "1688080",
    "end": "1695120"
  },
  {
    "text": "Photoshop to do this and then comes back through the serer through a weight",
    "start": "1695120",
    "end": "1700480"
  },
  {
    "text": "interface to the user's key and something that implements the serer function signs it with the user's key on",
    "start": "1700480",
    "end": "1708080"
  },
  {
    "text": "the user's device and that that's the actual complete workflow that's a single API call going all going through WRPC no",
    "start": "1708080",
    "end": "1715919"
  },
  {
    "text": "REST calls no JSON just whit bindings over WRPC so I kind of see this as as a",
    "start": "1715919",
    "end": "1722240"
  },
  {
    "text": "as a future for kind of network use of applications uh you know if we could",
    "start": "1722240",
    "end": "1728399"
  },
  {
    "text": "redesign from scratch knowing that most stuff that happens over the web is not text I think web apps would look a lot a",
    "start": "1728399",
    "end": "1735440"
  },
  {
    "text": "lot more like this uh yeah just programs running on computers talking to each other okay so thanks um thank you for",
    "start": "1735440",
    "end": "1744159"
  },
  {
    "text": "coming to the for allowing me to speak here thank you for listening um this code is all open source um and I am",
    "start": "1744159",
    "end": "1751840"
  },
  {
    "text": "going to push my component someday to uh a public repo thanks",
    "start": "1751840",
    "end": "1759640"
  },
  {
    "text": "okay hi Colin great great talk thanks a lot",
    "start": "1767919",
    "end": "1774799"
  },
  {
    "text": "of complexity in the um uh in the story could we maybe just align quickly on the",
    "start": "1774799",
    "end": "1780960"
  },
  {
    "text": "why components you know because it seems like Oh yeah there's a this was a really hard journey for you to climb you know",
    "start": "1780960",
    "end": "1786960"
  },
  {
    "text": "what was the what had you so inspired to choose Web Assembly uh for this oh as",
    "start": "1786960",
    "end": "1792559"
  },
  {
    "text": "your goal okay well I mean I've always been in web assembly well I've been in web assembly for a long time for",
    "start": "1792559",
    "end": "1799200"
  },
  {
    "text": "different reasons but this is the main thing right is that it's a lot of work to do this it's a lot of engineers and",
    "start": "1799200",
    "end": "1805520"
  },
  {
    "text": "it's a lot of language language knowledge right you have to have a lot in somebody who knows",
    "start": "1805520",
    "end": "1810559"
  },
  {
    "text": "JavaScript you have to have somebody that knows C or Python or embedded right uh and um we don't that's a lot of work",
    "start": "1810559",
    "end": "1818480"
  },
  {
    "text": "we can save a lot of work by doing this we can also make services uh that are more flexible and easier to maintain so",
    "start": "1818480",
    "end": "1825760"
  },
  {
    "text": "that's the CI story uh if you want to hear the story about other stuff for why I got involved in web assembly that's uh",
    "start": "1825760",
    "end": "1832159"
  },
  {
    "text": "CubeCon next week so okay so what I play back what I think I just heard is doing",
    "start": "1832159",
    "end": "1838799"
  },
  {
    "text": "all this cryptography to create this these fingerprints for artifacts you know I take a picture who took it who",
    "start": "1838799",
    "end": "1845440"
  },
  {
    "text": "edited it who AIed it who put it on Twitter who put it on TikTok etc like",
    "start": "1845440",
    "end": "1850720"
  },
  {
    "text": "this forensic record all the way down is very complex and so by packaging in WASAM you can enable your whole",
    "start": "1850720",
    "end": "1856080"
  },
  {
    "text": "ecosystem now to use the same engine everywhere is that right yeah right well",
    "start": "1856080",
    "end": "1862159"
  },
  {
    "text": "right there'll be different components that interact on either side but yeah that's the big the big idea is one",
    "start": "1862159",
    "end": "1867360"
  },
  {
    "text": "component can be used in multiple places all right thank you",
    "start": "1867360",
    "end": "1874278"
  },
  {
    "text": "all right",
    "start": "1874559",
    "end": "1877640"
  },
  {
    "text": "thanks [Applause]",
    "start": "1881520",
    "end": "1888720"
  }
]