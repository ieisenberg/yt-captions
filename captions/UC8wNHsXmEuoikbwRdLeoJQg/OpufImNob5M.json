[
  {
    "text": "All right. So today I want to work a little bit on",
    "start": "6666",
    "end": "14208"
  },
  {
    "text": "the second revision of HTTP API.",
    "start": "14208",
    "end": "18208"
  },
  {
    "text": "I've just got a couple more things I want to add around the new middleware API.",
    "start": "19708",
    "end": "26375"
  },
  {
    "text": "And then once we've finished the year, I'm going to switch over to content layer and start with flushing it out a bit more.",
    "start": "29250",
    "end": "37250"
  },
  {
    "text": "So one of the things I want to get done in HTTP API today is optional middleware.",
    "start": "39791",
    "end": "46500"
  },
  {
    "text": "So if we look at the readme, so this new",
    "start": "50250",
    "end": "62375"
  },
  {
    "text": "middleware module has been added, which allows you to",
    "start": "62375",
    "end": "67458"
  },
  {
    "text": "define middleware in a nice way, which allow you to kind of like,",
    "start": "70541",
    "end": "76958"
  },
  {
    "text": "for example, here we have a log of middleware and you can specify value schemas.",
    "start": "76958",
    "end": "82500"
  },
  {
    "text": "And also if your middleware provides context to your application.",
    "start": "83750",
    "end": "88333"
  },
  {
    "text": "And also you can define security middleware to protect endpoints.",
    "start": "92083",
    "end": "97041"
  },
  {
    "text": "So here we have a middleware called authorization, which can fail with an unauthorized error.",
    "start": "98166",
    "end": "103333"
  },
  {
    "text": "It will provide the current user to your API.",
    "start": "104958",
    "end": "108625"
  },
  {
    "text": "And then you can pass in some security definitions, which HTTP API will",
    "start": "110750",
    "end": "120625"
  },
  {
    "text": "automatically resolve for you. So here it will pull the token from the headers and then pass it to your handlers.",
    "start": "120625",
    "end": "126250"
  },
  {
    "text": "When it comes to implementing the middleware, you can, so this",
    "start": "128958",
    "end": "143625"
  },
  {
    "text": "is probably a better example. There's our error, there's our middleware definition.",
    "start": "143625",
    "end": "147790"
  },
  {
    "text": "And then when you implement it, you just say, you can just grab the bearer token and then",
    "start": "148708",
    "end": "154333"
  },
  {
    "text": "pass it to any of services like a repository and then return the current user.",
    "start": "154583",
    "end": "160375"
  },
  {
    "text": "So I want to add an option here called optional.",
    "start": "162958",
    "end": "167208"
  },
  {
    "text": "And when you pass optional true, if this middleware fails, like if it fails to",
    "start": "170750",
    "end": "179958"
  },
  {
    "text": "authorize the current user, then the API endpoints will still",
    "start": "179958",
    "end": "185833"
  },
  {
    "text": "run, but the current user just won't be supplied.",
    "start": "185833",
    "end": "189500"
  },
  {
    "text": "So we'll take a stab at implementing that today.",
    "start": "193125",
    "end": "196750"
  },
  {
    "text": "I think the first place to start is in this module.",
    "start": "201208",
    "end": "207000"
  },
  {
    "text": "Where is the tag?",
    "start": "218541",
    "end": "223458"
  },
  {
    "text": "So we're currently using overlines. We want to keep that.",
    "start": "233541",
    "end": "239083"
  },
  {
    "text": "Yeah, I think so.",
    "start": "244041",
    "end": "246333"
  },
  {
    "text": "I'm going to add optional here.",
    "start": "250666",
    "end": "252250"
  },
  {
    "text": "So if optional is set to true, then this",
    "start": "259958",
    "end": "272708"
  },
  {
    "text": "middleware will not provide anything. Maybe we'll just rename this for clarity.",
    "start": "272708",
    "end": "277125"
  },
  {
    "text": "So I here is what the middleware will provide to your application.",
    "start": "279208",
    "end": "283458"
  },
  {
    "text": "I want to rename it to provides because it's a bit clearer.",
    "start": "285291",
    "end": "287916"
  },
  {
    "text": "And then.",
    "start": "293833",
    "end": "295625"
  },
  {
    "text": "provides. That's a bit better.",
    "start": "306500",
    "end": "311125"
  },
  {
    "text": "So because we need to detect.",
    "start": "313708",
    "end": "316708"
  },
  {
    "text": "If this is true or not, we need to get this sign this to a generic.",
    "start": "319500",
    "end": "323875"
  },
  {
    "text": "Do the same for security middleware.",
    "start": "326291",
    "end": "330207"
  },
  {
    "text": "And then make this a const generic.",
    "start": "340666",
    "end": "344250"
  },
  {
    "text": "extends boolean It's going to default to false.",
    "start": "346166",
    "end": "350791"
  },
  {
    "text": "This. And there will copy paste this down here.",
    "start": "354666",
    "end": "358625"
  },
  {
    "text": "And then for implementation. Yeah, let's do that.",
    "start": "378416",
    "end": "382375"
  },
  {
    "text": "I think we're going to need this later on, so we should add it to the tag itself as well.",
    "start": "385916",
    "end": "394458"
  },
  {
    "text": "This.",
    "start": "404000",
    "end": "404291"
  },
  {
    "text": "And that is so when we're implementing the server, we can then branch",
    "start": "412166",
    "end": "419125"
  },
  {
    "text": "out to the different behavior.",
    "start": "419125",
    "end": "420958"
  },
  {
    "text": "Yeah, that's.",
    "start": "426500",
    "end": "427375"
  },
  {
    "text": "Okay, we need to use this here in the types as well. So Boolean is true.",
    "start": "435666",
    "end": "441875"
  },
  {
    "text": "Then we will provide nothing. So optional extends true.",
    "start": "443083",
    "end": "449208"
  },
  {
    "text": "Otherwise provides.",
    "start": "450500",
    "end": "453333"
  },
  {
    "text": "And I guess technically the same with the error. Because if it's optional, then a failure will never reach.",
    "start": "457458",
    "end": "464000"
  },
  {
    "text": "Never reach for canvas.",
    "start": "466041",
    "end": "469291"
  },
  {
    "text": "And then we'll do the same for security one.",
    "start": "471416",
    "end": "475791"
  },
  {
    "text": "Optional extends true. And then same for failure.",
    "start": "478166",
    "end": "484916"
  },
  {
    "text": "This. I think. That's all we need at the top level.",
    "start": "486958",
    "end": "493291"
  },
  {
    "text": "Now let's have a look at the runtime behavior.",
    "start": "495833",
    "end": "498291"
  },
  {
    "text": "And for that, we need to go to the API builder module.",
    "start": "501000",
    "end": "506166"
  },
  {
    "text": "Look at make her out. I know we need to look at.",
    "start": "507333",
    "end": "513041"
  },
  {
    "text": "Apply middleware. This is where the middleware is applied.",
    "start": "515583",
    "end": "520958"
  },
  {
    "text": "So it's like iterating over the map of the tags.",
    "start": "522125",
    "end": "525625"
  },
  {
    "text": "And the handlers.",
    "start": "527166",
    "end": "527708"
  },
  {
    "text": "Okay. So we go to entry dot tag dot optional.",
    "start": "549041",
    "end": "556708"
  },
  {
    "text": "We need to do an optional provide here.",
    "start": "570750",
    "end": "574416"
  },
  {
    "text": "I guess we do effect dot match on the fit.",
    "start": "580708",
    "end": "584125"
  },
  {
    "text": "I think we'll keep defects as defects. So if this fails.",
    "start": "588666",
    "end": "592416"
  },
  {
    "text": "If the middleware fails with a defect, then we'll let that pass through. But if it's a normal error, then we'll rescue.",
    "start": "594666",
    "end": "601583"
  },
  {
    "text": "So on a failure, we just want to.",
    "start": "604000",
    "end": "607125"
  },
  {
    "text": "This needs to be that perfect. Failure would just run the handler like usual.",
    "start": "609375",
    "end": "615250"
  },
  {
    "text": "Once it says value. And then we provide",
    "start": "616416",
    "end": "622541"
  },
  {
    "text": "service to the handler.",
    "start": "622541",
    "end": "624000"
  },
  {
    "text": "And for this one.",
    "start": "635500",
    "end": "639166"
  },
  {
    "text": "I guess we could just do the same.",
    "start": "644041",
    "end": "646333"
  },
  {
    "text": "I don't know what we can do.",
    "start": "651375",
    "end": "652375"
  },
  {
    "text": "So if effect dot tag. Sorry.",
    "start": "658291",
    "end": "663083"
  },
  {
    "text": "Entry dot tag dot. So if this middleware provides something.",
    "start": "664875",
    "end": "670500"
  },
  {
    "text": "We will use this. Otherwise.",
    "start": "673083",
    "end": "676333"
  },
  {
    "text": "We ignore the output and just run the handler.",
    "start": "679458",
    "end": "682791"
  },
  {
    "text": "Let's get rid of that type error. And I think that's all we need.",
    "start": "693666",
    "end": "699166"
  },
  {
    "text": "I guess we should try this out. We go to our sample.",
    "start": "702500",
    "end": "706833"
  },
  {
    "text": "Let's make. An optional middleware.",
    "start": "710833",
    "end": "717083"
  },
  {
    "text": "Let me I guess if we try every do option through here.",
    "start": "721583",
    "end": "725458"
  },
  {
    "text": "authentication dot provides.",
    "start": "729750",
    "end": "732166"
  },
  {
    "text": "Yeah, provides never. And we should.",
    "start": "743250",
    "end": "748625"
  },
  {
    "text": "No handlers where we use current user.",
    "start": "750666",
    "end": "753583"
  },
  {
    "text": "Get a type error. Because it no longer is explicitly added.",
    "start": "756291",
    "end": "761166"
  },
  {
    "text": "Look at this layer. Yeah. Current user is there. So optional is working.",
    "start": "762375",
    "end": "766166"
  },
  {
    "text": "So what we can do here instead. It's got Effect dot service option.",
    "start": "771333",
    "end": "776541"
  },
  {
    "text": "Current user.",
    "start": "777083",
    "end": "777583"
  },
  {
    "text": "Option.",
    "start": "787666",
    "end": "788416"
  },
  {
    "text": "Option. There's no user to that.",
    "start": "794791",
    "end": "801916"
  },
  {
    "text": "If on some. Sure.",
    "start": "802208",
    "end": "805666"
  },
  {
    "text": "We'll just do. Identity here.",
    "start": "807333",
    "end": "811041"
  },
  {
    "text": "No errors.",
    "start": "814875",
    "end": "815666"
  },
  {
    "text": "We run this.",
    "start": "832125",
    "end": "833833"
  },
  {
    "text": "Nothing's happening.",
    "start": "854375",
    "end": "856375"
  },
  {
    "text": "There's nothing happening.",
    "start": "869000",
    "end": "870250"
  },
  {
    "text": "Okay.",
    "start": "878833",
    "end": "879041"
  },
  {
    "text": "Watch. API example.",
    "start": "885666",
    "end": "889333"
  },
  {
    "text": "So first we'll just make sure it is hitting the middleware.",
    "start": "896708",
    "end": "900125"
  },
  {
    "text": "Console.log. Success.",
    "start": "927666",
    "end": "931458"
  },
  {
    "text": "And then I guess. We'll add one for. It's a branch.",
    "start": "934416",
    "end": "940083"
  },
  {
    "text": "Console.log. Failure.",
    "start": "942041",
    "end": "944000"
  },
  {
    "text": "Okay. Why is that in a loop?",
    "start": "951875",
    "end": "956583"
  },
  {
    "text": "See. So because we're assigned a handler, it's performing.",
    "start": "962375",
    "end": "968500"
  },
  {
    "text": "Let's see if you download. Let's get all recursion for you.",
    "start": "970916",
    "end": "980666"
  },
  {
    "text": "So I guess we can find that first to.",
    "start": "987125",
    "end": "991750"
  },
  {
    "text": "The previous handler.",
    "start": "995708",
    "end": "997166"
  },
  {
    "text": "Previous.",
    "start": "1001416",
    "end": "1001625"
  },
  {
    "text": "Yeah, I think that should work now.",
    "start": "1014416",
    "end": "1015708"
  },
  {
    "text": "Correct. It works. That's what happens if you hit the successful branch.",
    "start": "1021833",
    "end": "1028416"
  },
  {
    "text": "So to test the optional behavior. Instead of succeeding here.",
    "start": "1029125",
    "end": "1034375"
  },
  {
    "text": "We'll fail with a new.",
    "start": "1037250",
    "end": "1040541"
  },
  {
    "text": "Here.",
    "start": "1043916",
    "end": "1044041"
  },
  {
    "text": "It looks like we can't.",
    "start": "1067708",
    "end": "1073541"
  },
  {
    "text": "Set the error to never here. Otherwise your middleware can't fail.",
    "start": "1073916",
    "end": "1080541"
  },
  {
    "text": "What can we do.",
    "start": "1090666",
    "end": "1094375"
  },
  {
    "text": "I guess on the class we're going to add another generic.",
    "start": "1104708",
    "end": "1107250"
  },
  {
    "text": "Or. We move optional to here.",
    "start": "1134208",
    "end": "1139625"
  },
  {
    "text": "And then move out the. The type of the logic.",
    "start": "1152791",
    "end": "1158833"
  },
  {
    "text": "The optional here. At the moment we are doing all this",
    "start": "1161916",
    "end": "1168250"
  },
  {
    "text": "optional is true stuff.",
    "start": "1168250",
    "end": "1170041"
  },
  {
    "text": "Yeah, but we moved it to the tag class itself.",
    "start": "1173708",
    "end": "1177875"
  },
  {
    "text": "Optional.",
    "start": "1187666",
    "end": "1188291"
  },
  {
    "text": "And then do the same for this one.",
    "start": "1193291",
    "end": "1196208"
  },
  {
    "text": "Okay.",
    "start": "1208791",
    "end": "1209000"
  },
  {
    "text": "So failure here will be. The type that is removed from.",
    "start": "1215666",
    "end": "1223250"
  },
  {
    "text": "The failure that we added to the client methods.",
    "start": "1226708",
    "end": "1231750"
  },
  {
    "text": "So you know what type of failures. API dot edge.",
    "start": "1232125",
    "end": "1238541"
  },
  {
    "text": "Edge.",
    "start": "1246666",
    "end": "1246916"
  },
  {
    "text": "And then here we can do the optional.",
    "start": "1263166",
    "end": "1265958"
  },
  {
    "text": "extends Never.",
    "start": "1270666",
    "end": "1273625"
  },
  {
    "text": "So this is this type will be used to determine what areas will",
    "start": "1279666",
    "end": "1287458"
  },
  {
    "text": "reach the end of your API. And this type will be used to work out what failures your",
    "start": "1287458",
    "end": "1295166"
  },
  {
    "text": "handlers can fail with. And then to make it consistent.",
    "start": "1295166",
    "end": "1300666"
  },
  {
    "text": "I was reading this to provide.",
    "start": "1300666",
    "end": "1302750"
  },
  {
    "text": "And then let's just copy this down to our security version.",
    "start": "1308708",
    "end": "1313166"
  },
  {
    "text": "Okay. And one thing I have to worry about",
    "start": "1318250",
    "end": "1324583"
  },
  {
    "text": "actually is how this will affect the open API schema.",
    "start": "1324583",
    "end": "1328583"
  },
  {
    "text": "So I'll just do that now. So the middle is optional.",
    "start": "1331041",
    "end": "1337875"
  },
  {
    "text": "We don't want to edge the failures.",
    "start": "1338375",
    "end": "1340833"
  },
  {
    "text": "The handlers. Or sorry to the.",
    "start": "1350458",
    "end": "1354666"
  },
  {
    "text": "To the API spec. Actually that is done in.",
    "start": "1356666",
    "end": "1361375"
  },
  {
    "text": "Actually we can do that here.",
    "start": "1367708",
    "end": "1372041"
  },
  {
    "text": "Yeah we can go. Options.",
    "start": "1380916",
    "end": "1385541"
  },
  {
    "text": "So if optional is true we had a failure schema never. Otherwise we have the failure schema.",
    "start": "1402791",
    "end": "1408625"
  },
  {
    "text": "And we need to do the same. There's only one to add constructor",
    "start": "1410041",
    "end": "1417708"
  },
  {
    "text": "That should handle the big side of things.",
    "start": "1419458",
    "end": "1425666"
  },
  {
    "text": "So now we need to use this new type for our handlers.",
    "start": "1425666",
    "end": "1432958"
  },
  {
    "text": "We create a new thing for extracting it.",
    "start": "1457458",
    "end": "1461625"
  },
  {
    "text": "Failure.",
    "start": "1463083",
    "end": "1463291"
  },
  {
    "text": "There are here handlers and this is the error.",
    "start": "1496708",
    "end": "1501416"
  },
  {
    "text": "That will reach the client.",
    "start": "1502541",
    "end": "1505833"
  },
  {
    "text": "Okay. Maybe we work backwards from the handlers.",
    "start": "1510541",
    "end": "1515375"
  },
  {
    "text": "Maybe we do the client first.",
    "start": "1557375",
    "end": "1560708"
  },
  {
    "text": "What does the client do here.",
    "start": "1563208",
    "end": "1566166"
  },
  {
    "text": "They just use the error which is fine I think.",
    "start": "1576916",
    "end": "1580708"
  },
  {
    "text": "Okay so.",
    "start": "1587583",
    "end": "1590541"
  },
  {
    "text": "Extra.",
    "start": "1597041",
    "end": "1597541"
  },
  {
    "text": "So this is so we can pull the errors out. Of the context.",
    "start": "1618291",
    "end": "1624250"
  },
  {
    "text": "And we need to. Add them to our handlers.",
    "start": "1627625",
    "end": "1634083"
  },
  {
    "text": "error with name. Where else is this used.",
    "start": "1646000",
    "end": "1650166"
  },
  {
    "text": "Use that handle and raw.",
    "start": "1658458",
    "end": "1660125"
  },
  {
    "text": "Okay.",
    "start": "1674333",
    "end": "1679000"
  },
  {
    "text": "Maybe we can just set it here.",
    "start": "1698291",
    "end": "1702208"
  },
  {
    "text": "And then pull that out of the requirements.",
    "start": "1733041",
    "end": "1736208"
  },
  {
    "text": "Seems like we're doing some. Double handling here.",
    "start": "1749666",
    "end": "1754208"
  },
  {
    "text": "We go back to API builder and the handlers.",
    "start": "1762750",
    "end": "1766083"
  },
  {
    "text": "We can simplify this a bit so currently.",
    "start": "1804208",
    "end": "1809500"
  },
  {
    "text": "There is a head. Yeah.",
    "start": "1811458",
    "end": "1815416"
  },
  {
    "text": "Tracking context is fine.",
    "start": "1817750",
    "end": "1820125"
  },
  {
    "text": "But maybe if instead we.",
    "start": "1826333",
    "end": "1830125"
  },
  {
    "text": "Track the API and the group. Instead.",
    "start": "1834416",
    "end": "1839500"
  },
  {
    "text": "And then our handler",
    "start": "1862083",
    "end": "1863458"
  },
  {
    "text": "Can constrain the error type.",
    "start": "1873166",
    "end": "1876708"
  },
  {
    "text": "I think they all work better.",
    "start": "1898041",
    "end": "1900958"
  },
  {
    "text": "So we need to. Pull the possible areas here.",
    "start": "1910083",
    "end": "1917458"
  },
  {
    "text": "We need to extract what the middleware is providing.",
    "start": "1956750",
    "end": "1960166"
  },
  {
    "text": "First we need to take all this error thing",
    "start": "1963083",
    "end": "1965000"
  },
  {
    "text": "Maybe. We create a type of that.",
    "start": "1977250",
    "end": "1980875"
  },
  {
    "text": "Where the best place for it is. Http API. This type helper we need to get all the",
    "start": "1984750",
    "end": "1992375"
  },
  {
    "text": "possible error types. Or.",
    "start": "1992375",
    "end": "1997083"
  },
  {
    "text": "Endpoint. Group and API spec.",
    "start": "1998833",
    "end": "2006458"
  },
  {
    "text": "So all the possible errors. a handler could fail with.",
    "start": "2012458",
    "end": "2018416"
  },
  {
    "text": "Maybe we can move it to here.",
    "start": "2026208",
    "end": "2029916"
  },
  {
    "text": "and the input extends any",
    "start": "2061208",
    "end": "2066583"
  },
  {
    "text": "So I guess we can just go here, handlers input, plus the additional errors",
    "start": "2084375",
    "end": "2095708"
  },
  {
    "text": "from the group and API.",
    "start": "2095708",
    "end": "2097666"
  },
  {
    "text": "So how are we extracting errors for our group?",
    "start": "2114166",
    "end": "2118416"
  },
  {
    "text": "Group, error. Yeah, I think for the",
    "start": "2139916",
    "end": "2148458"
  },
  {
    "text": "group, we need to edge an error for our head loss",
    "start": "2148458",
    "end": "2154875"
  },
  {
    "text": "We'll extract the error handlers  from the requirements.",
    "start": "2194833",
    "end": "2199833"
  },
  {
    "text": "All right, we need to start using it. I",
    "start": "2218458",
    "end": "2228041"
  },
  {
    "text": "guess we need one for HTTP API too.",
    "start": "2228041",
    "end": "2230458"
  },
  {
    "text": "That'd be easier just to just track the errors",
    "start": "2304958",
    "end": "2308958"
  },
  {
    "text": "provided instead of the group in API",
    "start": "2311750",
    "end": "2315625"
  },
  {
    "text": "So they were not passing around a bunch of stuff",
    "start": "2319916",
    "end": "2323250"
  },
  {
    "text": "Not sure if I like this ordering",
    "start": "2345208",
    "end": "2347041"
  },
  {
    "text": "Yeah, but it's okay So errors, yeah, yeah, provided",
    "start": "2357166",
    "end": "2365208"
  },
  {
    "text": "Okay, and now we need to",
    "start": "2385791",
    "end": "2388291"
  },
  {
    "text": "Do our error handlers thing Or track all the errors, maybe we'll just take this over",
    "start": "2396916",
    "end": "2403333"
  },
  {
    "text": "And here we can take any group",
    "start": "2421166",
    "end": "2424666"
  },
  {
    "text": "Group Extends HTTP API group",
    "start": "2447708",
    "end": "2455666"
  },
  {
    "text": "Any And this will actually be error",
    "start": "2456625",
    "end": "2462916"
  },
  {
    "text": "handlers API or",
    "start": "2463208",
    "end": "2466083"
  },
  {
    "text": "http API group",
    "start": "2469208",
    "end": "2471458"
  },
  {
    "text": "So this will stretch all the handlers error types or the API in a group",
    "start": "2489208",
    "end": "2497000"
  },
  {
    "text": "And we need to do The same thing for provided",
    "start": "2503666",
    "end": "2508166"
  },
  {
    "text": "Context is there, great",
    "start": "2528208",
    "end": "2530000"
  },
  {
    "text": "Stretch provides from the context Of the API",
    "start": "2540208",
    "end": "2546000"
  },
  {
    "text": "And then provides with group",
    "start": "2554541",
    "end": "2559041"
  },
  {
    "text": "HTTP API group And we can take any group here",
    "start": "2568208",
    "end": "2573000"
  },
  {
    "text": "This is what we want, but provides doesn't exist yet And I think for the group version",
    "start": "2578750",
    "end": "2587416"
  },
  {
    "text": "We can space it off this",
    "start": "2587416",
    "end": "2589666"
  },
  {
    "text": "Group extends any",
    "start": "2599125",
    "end": "2600541"
  },
  {
    "text": "This",
    "start": "2605083",
    "end": "2605333"
  },
  {
    "text": "So I think we have Type helpers now So when we create our handlers",
    "start": "2613375",
    "end": "2619875"
  },
  {
    "text": "We just need to pass In those new",
    "start": "2620208",
    "end": "2625708"
  },
  {
    "text": "Generics",
    "start": "2627375",
    "end": "2627875"
  },
  {
    "text": "And we also need to update the usage of this Handlers type to use these four Generics now",
    "start": "2634333",
    "end": "2640083"
  },
  {
    "text": "We need to edit any here Make handlers so this will change",
    "start": "2691833",
    "end": "2696041"
  },
  {
    "text": "It's internal API",
    "start": "2723375",
    "end": "2724458"
  },
  {
    "text": "Maybe we don't need those Helpers",
    "start": "2752250",
    "end": "2755291"
  },
  {
    "text": "Let's do that anyway So the first you're going to pass here is",
    "start": "2765250",
    "end": "2770666"
  },
  {
    "text": "error handlers with group",
    "start": "2775208",
    "end": "2777416"
  },
  {
    "text": "Groups",
    "start": "2786208",
    "end": "2787125"
  },
  {
    "text": "http API group With name",
    "start": "2802208",
    "end": "2806250"
  },
  {
    "text": "Groups name",
    "start": "2808208",
    "end": "2809541"
  },
  {
    "text": "Like we can simplify this a bit",
    "start": "2838750",
    "end": "2841125"
  },
  {
    "text": "Requirements",
    "start": "2857125",
    "end": "2857916"
  },
  {
    "text": "This point",
    "start": "2871458",
    "end": "2872166"
  },
  {
    "text": "What do we need here? We need",
    "start": "2885291",
    "end": "2886833"
  },
  {
    "text": "Maybe if we move this Craziness",
    "start": "2916333",
    "end": "2921208"
  },
  {
    "text": "Here",
    "start": "2922208",
    "end": "2923625"
  },
  {
    "text": "handlers from",
    "start": "2930000",
    "end": "2931208"
  },
  {
    "text": "Group",
    "start": "2943083",
    "end": "2943250"
  },
  {
    "text": "So we will need the API",
    "start": "2949208",
    "end": "2952791"
  },
  {
    "text": "API error",
    "start": "2979250",
    "end": "2980875"
  },
  {
    "text": "error handlers from the group",
    "start": "3019041",
    "end": "3020291"
  },
  {
    "text": "And then we need the provides",
    "start": "3030375",
    "end": "3031541"
  },
  {
    "text": "Provides from the API requirements",
    "start": "3037041",
    "end": "3039833"
  },
  {
    "text": "Okay And then the generic is",
    "start": "3053333",
    "end": "3058125"
  },
  {
    "text": "The requirements here we had API requirements",
    "start": "3062250",
    "end": "3067416"
  },
  {
    "text": "No we don't They will be provided to",
    "start": "3073666",
    "end": "3078833"
  },
  {
    "text": "API layer",
    "start": "3082791",
    "end": "3083708"
  },
  {
    "text": "the error schema has requirements",
    "start": "3112208",
    "end": "3114541"
  },
  {
    "text": "They probably should be extracted here",
    "start": "3123250",
    "end": "3126208"
  },
  {
    "text": "error schema",
    "start": "3140750",
    "end": "3141333"
  },
  {
    "text": "Maybe here we need to extract some context",
    "start": "3155541",
    "end": "3160416"
  },
  {
    "text": "So if we have requirements in the error schema They probably should be provided",
    "start": "3172208",
    "end": "3178875"
  },
  {
    "text": "to this layer",
    "start": "3179208",
    "end": "3180500"
  },
  {
    "text": "Yeah that seems better",
    "start": "3218250",
    "end": "3219791"
  },
  {
    "text": "And here we can add read only context",
    "start": "3229958",
    "end": "3236750"
  },
  {
    "text": "So we need to capture this context here so any of our middleware or",
    "start": "3251458",
    "end": "3257291"
  },
  {
    "text": "error schema use context We can then use that",
    "start": "3257291",
    "end": "3263916"
  },
  {
    "text": "to pass it along",
    "start": "3269833",
    "end": "3272708"
  },
  {
    "text": "So we come back down here we have this context subject",
    "start": "3284541",
    "end": "3288583"
  },
  {
    "text": "That we used for just the error schemas",
    "start": "3308833",
    "end": "3314166"
  },
  {
    "text": "Now we'll just do it for the error handler",
    "start": "3340250",
    "end": "3342333"
  },
  {
    "text": "So context is used for middleware",
    "start": "3348208",
    "end": "3351458"
  },
  {
    "text": "We don't need the middleware here",
    "start": "3355208",
    "end": "3358125"
  },
  {
    "text": "Yeah we've already extracted the middleware",
    "start": "3362958",
    "end": "3364541"
  },
  {
    "text": "So we can move this",
    "start": "3374458",
    "end": "3376500"
  },
  {
    "text": "then I think we can remove this now",
    "start": "3416208",
    "end": "3420125"
  },
  {
    "text": "Quickly fix up my tabs",
    "start": "3442500",
    "end": "3445833"
  },
  {
    "text": "Close this Builder Okay",
    "start": "3448208",
    "end": "3454291"
  },
  {
    "text": "So we go back to our handlers",
    "start": "3460291",
    "end": "3461791"
  },
  {
    "text": "Each time we handle something we're excluding provides",
    "start": "3480250",
    "end": "3486041"
  },
  {
    "text": "We've set the known errors here",
    "start": "3487208",
    "end": "3489875"
  },
  {
    "text": "So handlers can fail with API level errors and errors from the API level middleware",
    "start": "3502208",
    "end": "3508916"
  },
  {
    "text": "They can fail with group errors",
    "start": "3509208",
    "end": "3512541"
  },
  {
    "text": "There we've already done that Those are the errors",
    "start": "3522125",
    "end": "3526041"
  },
  {
    "text": "So pull provides We extract the provides",
    "start": "3533458",
    "end": "3538708"
  },
  {
    "text": "by the API middleware provides for the group middleware",
    "start": "3540208",
    "end": "3543833"
  },
  {
    "text": "So for requirements we don't need this here",
    "start": "3547708",
    "end": "3550541"
  },
  {
    "text": "We just need the group level requirements",
    "start": "3553291",
    "end": "3560000"
  },
  {
    "text": "context group",
    "start": "3562208",
    "end": "3564791"
  },
  {
    "text": "What's this group provider doing?",
    "start": "3597708",
    "end": "3600583"
  },
  {
    "text": "Is it extracting any",
    "start": "3613833",
    "end": "3616166"
  },
  {
    "text": "provides at the endpoint level which is fine",
    "start": "3620208",
    "end": "3623666"
  },
  {
    "text": "That's good",
    "start": "3626208",
    "end": "3627916"
  },
  {
    "text": "So that's all we need there And then we need to do",
    "start": "3645208",
    "end": "3650708"
  },
  {
    "text": "the endpoint Okay",
    "start": "3651458",
    "end": "3655708"
  },
  {
    "text": "In terms of the return type we just need to make sure the endpoints don't have any",
    "start": "3705208",
    "end": "3713208"
  },
  {
    "text": "or the handlers don't have any endpoints left",
    "start": "3714208",
    "end": "3719916"
  },
  {
    "text": "Return to handlers",
    "start": "3735208",
    "end": "3736916"
  },
  {
    "text": "So here return extends",
    "start": "3745791",
    "end": "3749000"
  },
  {
    "text": "handlers dot any",
    "start": "3752208",
    "end": "3754916"
  },
  {
    "text": "Do we have any type? No",
    "start": "3759208",
    "end": "3762916"
  },
  {
    "text": "handlers do have a type ID",
    "start": "3765375",
    "end": "3766666"
  },
  {
    "text": "Okay So let's define",
    "start": "3780208",
    "end": "3783625"
  },
  {
    "text": "an interface any",
    "start": "3786208",
    "end": "3788958"
  },
  {
    "text": "In here we just make sure it has the type ID",
    "start": "3793208",
    "end": "3797041"
  },
  {
    "text": "and then maybe if we add a validate return type",
    "start": "3804416",
    "end": "3811916"
  },
  {
    "text": "and maybe we can add like a nice error message if you forget to implement",
    "start": "3811916",
    "end": "3817875"
  },
  {
    "text": "a handler validate return",
    "start": "3819208",
    "end": "3823208"
  },
  {
    "text": "Just a bunch of inference here That provides inputs",
    "start": "3846333",
    "end": "3853916"
  },
  {
    "text": "So the input extends never",
    "start": "3861500",
    "end": "3867500"
  },
  {
    "text": "I'm not sure what we want to return from this",
    "start": "3883458",
    "end": "3887791"
  },
  {
    "text": "So we put 16 is never there were good we've implemented everything",
    "start": "3891208",
    "end": "3896583"
  },
  {
    "text": "Otherwise this will be our error message here",
    "start": "3901208",
    "end": "3905208"
  },
  {
    "text": "Inputs",
    "start": "3907291",
    "end": "3909708"
  },
  {
    "text": "I guess we need to extract the names",
    "start": "3921500",
    "end": "3925208"
  },
  {
    "text": "http API input dot",
    "start": "3929958",
    "end": "3934250"
  },
  {
    "text": "name",
    "start": "3935541",
    "end": "3935875"
  },
  {
    "text": "Not sure how that will look",
    "start": "3945208",
    "end": "3947000"
  },
  {
    "text": "So we just need to extract the context from the handlers at some point",
    "start": "3967500",
    "end": "3973208"
  },
  {
    "text": "We're doing some extraction here off-paste that",
    "start": "4014208",
    "end": "4019333"
  },
  {
    "text": "Here we can just use handlers dot context return",
    "start": "4034958",
    "end": "4041083"
  },
  {
    "text": "Okay That means we can",
    "start": "4065208",
    "end": "4070208"
  },
  {
    "text": "set this to never",
    "start": "4072208",
    "end": "4074250"
  },
  {
    "text": "Because we're already adding it to the layer here",
    "start": "4082208",
    "end": "4086208"
  },
  {
    "text": "And we've established we don't need the API context here because it's added",
    "start": "4088416",
    "end": "4093708"
  },
  {
    "text": "to the API layer not the group layer",
    "start": "4095458",
    "end": "4098541"
  },
  {
    "text": "Just force that type to work",
    "start": "4159375",
    "end": "4161333"
  },
  {
    "text": "We just need to validate the return type",
    "start": "4171250",
    "end": "4174875"
  },
  {
    "text": "And handlers",
    "start": "4182125",
    "end": "4185125"
  },
  {
    "text": "Okay",
    "start": "4188208",
    "end": "4188958"
  },
  {
    "text": "All this work, let's find out",
    "start": "4201208",
    "end": "4203958"
  },
  {
    "text": "So it's not complaining about the error anymore which is good",
    "start": "4218625",
    "end": "4221416"
  },
  {
    "text": "If I replace this of current user",
    "start": "4227208",
    "end": "4232208"
  },
  {
    "text": "It should be adding it here It's not Okay",
    "start": "4246208",
    "end": "4251458"
  },
  {
    "text": "What's going on?",
    "start": "4265041",
    "end": "4267208"
  },
  {
    "text": "That looks right All this handlers here",
    "start": "4310208",
    "end": "4316958"
  },
  {
    "text": "I want to see what this type is This work",
    "start": "4359041",
    "end": "4363708"
  },
  {
    "text": "Kind of I guess one way to do",
    "start": "4367041",
    "end": "4376625"
  },
  {
    "text": "it is just copy this",
    "start": "4376625",
    "end": "4378041"
  },
  {
    "text": "What am I trying to find out?",
    "start": "4387333",
    "end": "4389875"
  },
  {
    "text": "It'll work out What is being provided",
    "start": "4401875",
    "end": "4406916"
  },
  {
    "text": "So current user is there",
    "start": "4455000",
    "end": "4456125"
  },
  {
    "text": "Current user is there Which is good",
    "start": "4474041",
    "end": "4476625"
  },
  {
    "text": "That's a nice error message",
    "start": "4492208",
    "end": "4493375"
  },
  {
    "text": "I think we need to improve that error message quickly Say",
    "start": "4526875",
    "end": "4531375"
  },
  {
    "text": "Endpoints not handled",
    "start": "4532208",
    "end": "4534208"
  },
  {
    "text": "So we just need to work out why current user is",
    "start": "4555208",
    "end": "4559916"
  },
  {
    "text": "not there anymore",
    "start": "4561208",
    "end": "4562250"
  },
  {
    "text": "Should it be? Yes, it should be",
    "start": "4567208",
    "end": "4570708"
  },
  {
    "text": "Because we are optional",
    "start": "4573291",
    "end": "4574333"
  },
  {
    "text": "http API middleware",
    "start": "4582791",
    "end": "4585791"
  },
  {
    "text": "It's because we're not doing our optional check My bad",
    "start": "4592958",
    "end": "4596583"
  },
  {
    "text": "Failure And if optional is true then it will be schema.never",
    "start": "4625166",
    "end": "4631708"
  },
  {
    "text": "This is the way that we're copying this to us Whatever",
    "start": "4640458",
    "end": "4645666"
  },
  {
    "text": "And the same for security",
    "start": "4654208",
    "end": "4656416"
  },
  {
    "text": "That should Yep",
    "start": "4665583",
    "end": "4669291"
  },
  {
    "text": "So we check the type now current user is being added because our middleware is optional And if we delete that",
    "start": "4672250",
    "end": "4679208"
  },
  {
    "text": "That's being excluded. That's all we look",
    "start": "4686583",
    "end": "4688666"
  },
  {
    "text": "We've got a couple of comments out some endpoints and looking at error message We've got",
    "start": "4699208",
    "end": "4705208"
  },
  {
    "text": "handlers  Blah blah blah Endpoint not handled by ID Endpoint not handled me",
    "start": "4708875",
    "end": "4714958"
  },
  {
    "text": "That's pretty good",
    "start": "4719208",
    "end": "4720000"
  },
  {
    "text": "So we've added our failure and now we can go back to testing the case where",
    "start": "4738625",
    "end": "4743833"
  },
  {
    "text": "The middleware fails",
    "start": "4745208",
    "end": "4746750"
  },
  {
    "text": "Okay, but our error is still bubbling",
    "start": "4751208",
    "end": "4754208"
  },
  {
    "text": "We make it optional",
    "start": "4774625",
    "end": "4775208"
  },
  {
    "text": "Why is that",
    "start": "4793208",
    "end": "4793625"
  },
  {
    "text": "I mean it's a key in both of the overloads",
    "start": "4798833",
    "end": "4801208"
  },
  {
    "text": "Great we get our anonymous user So it's",
    "start": "4822333",
    "end": "4826625"
  },
  {
    "text": "Hitting this approach here, which is what we want",
    "start": "4828958",
    "end": "4831666"
  },
  {
    "text": "So optional middleware is working great",
    "start": "4836458",
    "end": "4839791"
  },
  {
    "text": "Now we didn't check the error types So this should be able to",
    "start": "4844333",
    "end": "4851875"
  },
  {
    "text": "not fail with a null price Yep, which is good and null price isn't there",
    "start": "4851875",
    "end": "4858000"
  },
  {
    "text": "But it is supported in the handlers, which is good",
    "start": "4858208",
    "end": "4863083"
  },
  {
    "text": "Wait a second",
    "start": "4871291",
    "end": "4873875"
  },
  {
    "text": "I don't think we want middleware errors showing up in our handlers actually Or no handlers, we still",
    "start": "4877291",
    "end": "4883083"
  },
  {
    "text": "want it in the middleware itself",
    "start": "4883083",
    "end": "4884208"
  },
  {
    "text": "Yeah, we don't need this What was I doing? Middleware doesn't affect handlers",
    "start": "4909375",
    "end": "4914875"
  },
  {
    "text": "The only thing we want it to show up in is in this interface here",
    "start": "4926208",
    "end": "4933000"
  },
  {
    "text": "Well, at least we can simplify",
    "start": "4939208",
    "end": "4941125"
  },
  {
    "text": "We need to adjust",
    "start": "4968625",
    "end": "4969541"
  },
  {
    "text": "And this one",
    "start": "4978208",
    "end": "4979666"
  },
  {
    "text": "We still need here a group",
    "start": "4996125",
    "end": "4998208"
  },
  {
    "text": "Yeah, we don't need that anymore",
    "start": "5018416",
    "end": "5021125"
  },
  {
    "text": "We do need that provides is still good",
    "start": "5024208",
    "end": "5029583"
  },
  {
    "text": "Alright, one thing we need to check is with this return thing here that context used in",
    "start": "5052250",
    "end": "5061750"
  },
  {
    "text": "handlers gets added to the layer",
    "start": "5061750",
    "end": "5065083"
  },
  {
    "text": "So I just create a random tag here",
    "start": "5073208",
    "end": "5078083"
  },
  {
    "text": "Extends context.tag",
    "start": "5079208",
    "end": "5082208"
  },
  {
    "text": "Yep, that was good",
    "start": "5102916",
    "end": "5105166"
  },
  {
    "text": "that took a bit longer than expected",
    "start": "5111208",
    "end": "5114416"
  },
  {
    "text": "Great, it's all working Maybe we'll edit tests for optional",
    "start": "5132166",
    "end": "5141208"
  },
  {
    "text": "middleware while we're here",
    "start": "5141208",
    "end": "5146208"
  },
  {
    "text": "So we're testing normal middleware here",
    "start": "5153958",
    "end": "5157208"
  },
  {
    "text": "Maybe I'll do that later",
    "start": "5164000",
    "end": "5165750"
  },
  {
    "text": "Let's clean up the example",
    "start": "5178666",
    "end": "5180750"
  },
  {
    "text": "I think I'm running out of time to do content layer actually",
    "start": "5189041",
    "end": "5191708"
  },
  {
    "text": "Some point I need to update the readme Maybe I can just quickly do that now",
    "start": "5250208",
    "end": "5255208"
  },
  {
    "text": "I think that handlers design is much better Let me get better error messages as well",
    "start": "5285208",
    "end": "5292208"
  },
  {
    "text": "I think what I'll do is commit this optional",
    "start": "5310791",
    "end": "5316916"
  },
  {
    "text": "Once I've committed it I'll try it out in the I've got like a little test project for HTTP API",
    "start": "5318208",
    "end": "5325291"
  },
  {
    "text": "push",
    "start": "5326208",
    "end": "5327458"
  },
  {
    "text": "And then once we've done that I'll be calling for the stream I don't really have time to do content layer on this stream",
    "start": "5337375",
    "end": "5342750"
  },
  {
    "text": "API middleware",
    "start": "5350208",
    "end": "5352208"
  },
  {
    "text": "So optional",
    "start": "5365708",
    "end": "5369708"
  },
  {
    "text": "A boolean",
    "start": "5375416",
    "end": "5377208"
  },
  {
    "text": "With an expected error",
    "start": "5389125",
    "end": "5393958"
  },
  {
    "text": "The request should continue",
    "start": "5396208",
    "end": "5398333"
  },
  {
    "text": "The provides and",
    "start": "5403416",
    "end": "5408416"
  },
  {
    "text": "maybe options will",
    "start": "5413500",
    "end": "5415208"
  },
  {
    "text": "will not",
    "start": "5460833",
    "end": "5461708"
  },
  {
    "text": "been using optional middleware",
    "start": "5471250",
    "end": "5476166"
  },
  {
    "text": "Yeah, that's good",
    "start": "5492208",
    "end": "5493416"
  },
  {
    "text": "It's important only to update the stream to show actually how to",
    "start": "5497416",
    "end": "5502375"
  },
  {
    "text": "apply middleware to your API",
    "start": "5502750",
    "end": "5506666"
  },
  {
    "text": "Maybe I can just do that here",
    "start": "5509208",
    "end": "5513708"
  },
  {
    "text": "Apply the middleware to user API group",
    "start": "5517500",
    "end": "5519208"
  },
  {
    "text": "Let's quickly paste this in here",
    "start": "5539416",
    "end": "5543125"
  },
  {
    "text": "And let's create an API group user's API",
    "start": "5544458",
    "end": "5548708"
  },
  {
    "text": "Seems that should be API group",
    "start": "5550208",
    "end": "5553208"
  },
  {
    "text": "like users And then we'll add",
    "start": "5555416",
    "end": "5561416"
  },
  {
    "text": "input",
    "start": "5561416",
    "end": "5562291"
  },
  {
    "text": "And then use middleware",
    "start": "5583625",
    "end": "5586041"
  },
  {
    "text": "Apply the middleware to the group",
    "start": "5593041",
    "end": "5596041"
  },
  {
    "text": "Or you can add it to a single input",
    "start": "5601791",
    "end": "5607750"
  },
  {
    "text": "Great",
    "start": "5622416",
    "end": "5623916"
  },
  {
    "text": "Paste it in",
    "start": "5630041",
    "end": "5632083"
  },
  {
    "text": "Read me",
    "start": "5656625",
    "end": "5657791"
  },
  {
    "text": "Just double check that's built",
    "start": "5668166",
    "end": "5669208"
  },
  {
    "text": "Let's open up our test project",
    "start": "5718208",
    "end": "5721666"
  },
  {
    "text": "We'll switch to that latest build",
    "start": "5726208",
    "end": "5730875"
  },
  {
    "text": "Install",
    "start": "5742833",
    "end": "5743041"
  },
  {
    "text": "Actually I don't need to use optional middleware in here But maybe we'll just check that",
    "start": "5752333",
    "end": "5758625"
  },
  {
    "text": "Everything type checks one",
    "start": "5760583",
    "end": "5761875"
  },
  {
    "text": "No, it doesn't type check, okay",
    "start": "5770208",
    "end": "5773125"
  },
  {
    "text": "What are the issues?",
    "start": "5777208",
    "end": "5778833"
  },
  {
    "text": "Just the test file What is that completed?",
    "start": "5801791",
    "end": "5803958"
  },
  {
    "text": "This should be all good Yep I'm not sure why that's complaining",
    "start": "5815583",
    "end": "5820833"
  },
  {
    "text": "Let's try and let's run",
    "start": "5821208",
    "end": "5822500"
  },
  {
    "text": "The final is going We just run the server",
    "start": "5837208",
    "end": "5843041"
  },
  {
    "text": "And I'm just going to pull open the docs",
    "start": "5845208",
    "end": "5848583"
  },
  {
    "text": "Everything's all that's good there",
    "start": "5857458",
    "end": "5860666"
  },
  {
    "text": "I guess one thing we can check is if we make the middleware optional that we get type errors",
    "start": "5868666",
    "end": "5875000"
  },
  {
    "text": "So it counts HTTP",
    "start": "5877416",
    "end": "5880875"
  },
  {
    "text": "Here's our middleware We go option",
    "start": "5887208",
    "end": "5891791"
  },
  {
    "text": "Okay, some reason we're not getting order complete",
    "start": "5893208",
    "end": "5898000"
  },
  {
    "text": "I'll have a look at that later",
    "start": "5909291",
    "end": "5911208"
  },
  {
    "text": "Might need to move to a single overload with a union of options",
    "start": "5920833",
    "end": "5925041"
  },
  {
    "text": "Type an all prize, a single rotation So we still need to edge an all prize",
    "start": "5956208",
    "end": "5964666"
  },
  {
    "text": "errors to the right places",
    "start": "5965208",
    "end": "5967208"
  },
  {
    "text": "Which is a correct top error",
    "start": "5979000",
    "end": "5981208"
  },
  {
    "text": "Okay, that fixes it",
    "start": "6004208",
    "end": "6006708"
  },
  {
    "text": "Yeah, and it is correctly adding current user here, which is what we want",
    "start": "6019791",
    "end": "6024208"
  },
  {
    "text": "Cool, so that works",
    "start": "6033208",
    "end": "6036166"
  },
  {
    "text": "Check the other APIs",
    "start": "6051500",
    "end": "6053291"
  },
  {
    "text": "Cool, maybe we'll just double check that improved error message while we're here",
    "start": "6063916",
    "end": "6069625"
  },
  {
    "text": "So we'll get a wall of types But you get this message",
    "start": "6074625",
    "end": "6080125"
  },
  {
    "text": "I feel like",
    "start": "6108208",
    "end": "6109625"
  },
  {
    "text": "I haven't added a schema for authorize so should be complaining",
    "start": "6118750",
    "end": "6122541"
  },
  {
    "text": "But",
    "start": "6137208",
    "end": "6137750"
  },
  {
    "text": "Is In the expected error types",
    "start": "6149208",
    "end": "6153083"
  },
  {
    "text": "If I added to the top level API",
    "start": "6158208",
    "end": "6161125"
  },
  {
    "text": "Hmm, how's that getting in there?",
    "start": "6167250",
    "end": "6170625"
  },
  {
    "text": "API error",
    "start": "6178875",
    "end": "6179666"
  },
  {
    "text": "Group",
    "start": "6205708",
    "end": "6205916"
  },
  {
    "text": "It's getting into the group",
    "start": "6214208",
    "end": "6217458"
  },
  {
    "text": "I have a look in here groups API",
    "start": "6223916",
    "end": "6227208"
  },
  {
    "text": "error schema And authorize isn't there",
    "start": "6231708",
    "end": "6239041"
  },
  {
    "text": "Yeah Okay",
    "start": "6255208",
    "end": "6259958"
  },
  {
    "text": "So that should work",
    "start": "6271000",
    "end": "6272916"
  },
  {
    "text": "If I remove that now",
    "start": "6276208",
    "end": "6279791"
  },
  {
    "text": "Yeah I guess that's fine",
    "start": "6283208",
    "end": "6291208"
  },
  {
    "text": "Because if you add a schema to a middleware it gets added",
    "start": "6292208",
    "end": "6297583"
  },
  {
    "text": "to the entire group anyway",
    "start": "6302875",
    "end": "6306833"
  },
  {
    "text": "Okay",
    "start": "6320291",
    "end": "6320375"
  },
  {
    "text": "Let's make that optional again",
    "start": "6327666",
    "end": "6329583"
  },
  {
    "text": "Maybe I'll try and get what I complete to work and then we'll Call it a day",
    "start": "6334041",
    "end": "6339666"
  },
  {
    "text": "This up does it work here? Yeah",
    "start": "6343125",
    "end": "6345208"
  },
  {
    "text": "It wasn't that shut again",
    "start": "6355791",
    "end": "6357666"
  },
  {
    "text": "Still shutting down",
    "start": "6366208",
    "end": "6370333"
  },
  {
    "text": "Kill",
    "start": "6374666",
    "end": "6377083"
  },
  {
    "text": "So the options weren't working for our constructor here",
    "start": "6400208",
    "end": "6405208"
  },
  {
    "text": "Thank you",
    "start": "6433791",
    "end": "6435041"
  },
  {
    "text": "If we use",
    "start": "6438875",
    "end": "6441333"
  },
  {
    "text": "A union instead declare namespace tag class",
    "start": "6444500",
    "end": "6451833"
  },
  {
    "text": "We add An options union",
    "start": "6454916",
    "end": "6459208"
  },
  {
    "text": "I Guess it doesn't need to be a union",
    "start": "6477666",
    "end": "6483000"
  },
  {
    "text": "It just needs to be a partial interface",
    "start": "6490208",
    "end": "6492208"
  },
  {
    "text": "And I think we can inline it just so when you are looking at the signature you can see all the options",
    "start": "6497208",
    "end": "6504916"
  },
  {
    "text": "Options extends and then we paste that here",
    "start": "6507041",
    "end": "6512583"
  },
  {
    "text": "boolean",
    "start": "6517708",
    "end": "6519125"
  },
  {
    "text": "Yes",
    "start": "6524541",
    "end": "6525041"
  },
  {
    "text": "The tag of any security will be",
    "start": "6531500",
    "end": "6537625"
  },
  {
    "text": "And I think here we see to do",
    "start": "6553291",
    "end": "6556208"
  },
  {
    "text": "Like a tag class from options",
    "start": "6572250",
    "end": "6575625"
  },
  {
    "text": "I just comment this out",
    "start": "6621000",
    "end": "6622166"
  },
  {
    "text": "So tag classes    ",
    "start": "6627208",
    "end": "6630291"
  },
  {
    "text": "Which is the constructor type",
    "start": "6637666",
    "end": "6641416"
  },
  {
    "text": "Options extends",
    "start": "6669958",
    "end": "6674125"
  },
  {
    "text": "For security branch",
    "start": "6721208",
    "end": "6725583"
  },
  {
    "text": "We need to stretch Security record provides",
    "start": "6732750",
    "end": "6740833"
  },
  {
    "text": "So The security is easy because we can just do options security",
    "start": "6744875",
    "end": "6751708"
  },
  {
    "text": "Okay, so anyway of extracting provides",
    "start": "6777541",
    "end": "6781625"
  },
  {
    "text": "So we get our namespace",
    "start": "6795958",
    "end": "6800166"
  },
  {
    "text": "And then we add a type upper for extracting provides from options",
    "start": "6813125",
    "end": "6820333"
  },
  {
    "text": "Identifier",
    "start": "6835250",
    "end": "6835958"
  },
  {
    "text": "Service",
    "start": "6846583",
    "end": "6847166"
  },
  {
    "text": "We also need to stretch the failure",
    "start": "6857083",
    "end": "6862791"
  },
  {
    "text": "If the failure extends schema.schema.all, then we will",
    "start": "6875458",
    "end": "6884000"
  },
  {
    "text": "Turn the schema otherwise, I'll be type of",
    "start": "6889208",
    "end": "6892541"
  },
  {
    "text": "You're right, we're gonna type up as you start using them",
    "start": "6910916",
    "end": "6916750"
  },
  {
    "text": "So that options have security for this branch",
    "start": "6921000",
    "end": "6924250"
  },
  {
    "text": "security provides",
    "start": "6938500",
    "end": "6942750"
  },
  {
    "text": "It's the service",
    "start": "6944958",
    "end": "6946250"
  },
  {
    "text": "So we haven't provided anything the fix should return void",
    "start": "6973083",
    "end": "6976500"
  },
  {
    "text": "That's wrong tag",
    "start": "6983791",
    "end": "6985791"
  },
  {
    "text": "Correct",
    "start": "6993791",
    "end": "6994166"
  },
  {
    "text": "Start optional options since true never",
    "start": "7062833",
    "end": "7068291"
  },
  {
    "text": "Or in the wrong place",
    "start": "7071083",
    "end": "7072583"
  },
  {
    "text": "Otherwise take last upper minds",
    "start": "7077666",
    "end": "7080958"
  },
  {
    "text": "And the failure type",
    "start": "7091625",
    "end": "7094125"
  },
  {
    "text": "And the tag service",
    "start": "7120083",
    "end": "7123791"
  },
  {
    "text": "Okay, we can copy this for the other branch",
    "start": "7155125",
    "end": "7157958"
  },
  {
    "text": "Quite a bit duplication here was the only thing changing is the service",
    "start": "7200833",
    "end": "7206375"
  },
  {
    "text": "So maybe we can extract this out",
    "start": "7212791",
    "end": "7216250"
  },
  {
    "text": "And our type helper still here",
    "start": "7219083",
    "end": "7223083"
  },
  {
    "text": "You need to pass in this service and the options and the name.",
    "start": "7237208",
    "end": "7250875"
  },
  {
    "text": "So this would be our service.",
    "start": "7260333",
    "end": "7262333"
  },
  {
    "text": "We need some too.",
    "start": "7272166",
    "end": "7273041"
  },
  {
    "text": "Okay.",
    "start": "7339375",
    "end": "7340250"
  },
  {
    "text": "So we still need to add the security type.",
    "start": "7351708",
    "end": "7355291"
  },
  {
    "text": "But here we can use our new helpertagged class dot base",
    "start": "7359000",
    "end": "7363625"
  },
  {
    "text": "Provides service.",
    "start": "7382125",
    "end": "7384708"
  },
  {
    "text": "In failure. Yeah.",
    "start": "7389666",
    "end": "7391166"
  },
  {
    "text": "And now we can get rid of that.",
    "start": "7397041",
    "end": "7400750"
  },
  {
    "text": "And we can get rid of that.",
    "start": "7416416",
    "end": "7417833"
  },
  {
    "text": "And so what else are we missing here?",
    "start": "7428625",
    "end": "7432458"
  },
  {
    "text": "Security is options security.",
    "start": "7437166",
    "end": "7441500"
  },
  {
    "text": "And to the base.",
    "start": "7447083",
    "end": "7448958"
  },
  {
    "text": "We add the failure schema. And the provides.",
    "start": "7452125",
    "end": "7457333"
  },
  {
    "text": "And the type ID.",
    "start": "7461291",
    "end": "7462375"
  },
  {
    "text": "Optional.",
    "start": "7467416",
    "end": "7468000"
  },
  {
    "text": "What were we doing before for optional?",
    "start": "7496958",
    "end": "7500416"
  },
  {
    "text": "Or provides take. Okay.",
    "start": "7503041",
    "end": "7508333"
  },
  {
    "text": "Okay. And the failure schema.",
    "start": "7526541",
    "end": "7528875"
  },
  {
    "text": "And we still need supply.",
    "start": "7562791",
    "end": "7563791"
  },
  {
    "text": "Where were we using supply before?",
    "start": "7583791",
    "end": "7585583"
  },
  {
    "text": "And the tag.",
    "start": "7590916",
    "end": "7593333"
  },
  {
    "text": "That's just ensuring that when we define a middleware.",
    "start": "7620041",
    "end": "7623208"
  },
  {
    "text": "It's easy to look at.",
    "start": "7629125",
    "end": "7632083"
  },
  {
    "text": "Or easy to kind of just look at what you should be implementing.",
    "start": "7636166",
    "end": "7640541"
  },
  {
    "text": "What is complaining about?",
    "start": "7671833",
    "end": "7672750"
  },
  {
    "text": "Security and not compatible.",
    "start": "7692041",
    "end": "7693583"
  },
  {
    "text": "Yep.",
    "start": "7699875",
    "end": "7700291"
  },
  {
    "text": "Let's check our sub-haul, make sure.",
    "start": "7708375",
    "end": "7711125"
  },
  {
    "text": "It's still working.",
    "start": "7714375",
    "end": "7715125"
  },
  {
    "text": "Not getting auto complete though.",
    "start": "7719583",
    "end": "7721041"
  },
  {
    "text": "Interesting.",
    "start": "7733708",
    "end": "7733875"
  },
  {
    "text": "Why isn't that working?",
    "start": "7748666",
    "end": "7750208"
  },
  {
    "text": "Just gonna check VS code really quick.",
    "start": "7754125",
    "end": "7756208"
  },
  {
    "text": "Okay, it looks like it's because the",
    "start": "7826625",
    "end": "7832583"
  },
  {
    "text": "options are optional. And we have a default.",
    "start": "7832583",
    "end": "7836500"
  },
  {
    "text": "What happens if we do that?",
    "start": "7841458",
    "end": "7844750"
  },
  {
    "text": "There it is.",
    "start": "7861916",
    "end": "7862416"
  },
  {
    "text": "And if we delete the options altogether.",
    "start": "7873333",
    "end": "7875500"
  },
  {
    "text": "What does it look like?",
    "start": "7880708",
    "end": "7882000"
  },
  {
    "text": "The tag of never void, which is right.",
    "start": "7896125",
    "end": "7900875"
  },
  {
    "text": "Failure. Never. I think failure in this cache should be,",
    "start": "7901916",
    "end": "7911166"
  },
  {
    "text": "oh yeah, that should be schema.",
    "start": "7911166",
    "end": "7913000"
  },
  {
    "text": "Schema dot never. What else do I need to check? optional.",
    "start": "7919166",
    "end": "7923791"
  },
  {
    "text": "Well, good.",
    "start": "7925958",
    "end": "7927333"
  },
  {
    "text": "So it looks like this is all working.",
    "start": "7933583",
    "end": "7936125"
  },
  {
    "text": "Now if I check the types, authentication dot provides.",
    "start": "7961916",
    "end": "7965583"
  },
  {
    "text": "Should be never. And then the service. Yep.",
    "start": "7967416",
    "end": "7972458"
  },
  {
    "text": "Failure should be never. And if I remove optional.",
    "start": "7974833",
    "end": "7981125"
  },
  {
    "text": "Should be unauthorized. Yep.",
    "start": "7983666",
    "end": "7985833"
  },
  {
    "text": "Optional true.",
    "start": "7990125",
    "end": "7992166"
  },
  {
    "text": "Else correct.",
    "start": "7996458",
    "end": "7997750"
  },
  {
    "text": "And if I make it optional, we should see the current user in here. Yep.",
    "start": "8005916",
    "end": "8011375"
  },
  {
    "text": "And if I remove optional, everything should type check.",
    "start": "8014625",
    "end": "8017250"
  },
  {
    "text": "Okay.",
    "start": "8022500",
    "end": "8024833"
  },
  {
    "text": "I think I will call it a day there.",
    "start": "8040125",
    "end": "8044083"
  },
  {
    "text": "I'll commit that.",
    "start": "8047250",
    "end": "8050541"
  },
  {
    "text": "The message will be improve. What a comment",
    "start": "8055791",
    "end": "8062458"
  },
  {
    "text": "You're right. I'll finish up there. No content layer today. Because I've been going for quite a while.",
    "start": "8072000",
    "end": "8077875"
  },
  {
    "text": "But maybe next week, we'll take a look at content layer.",
    "start": "8079833",
    "end": "8083041"
  },
  {
    "text": "But for now. we'll call it a day",
    "start": "8087791",
    "end": "8094458"
  },
  {
    "text": "see you folks",
    "start": "8096416",
    "end": "8097500"
  }
]