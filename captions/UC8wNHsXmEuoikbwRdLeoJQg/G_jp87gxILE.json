[
  {
    "text": "(audience applauds)",
    "start": "2486",
    "end": "3720"
  },
  {
    "text": "Yeah, so hi, everyone.",
    "start": "3720",
    "end": "5800"
  },
  {
    "text": "This is the toy of Effect on the front end.",
    "start": "6520",
    "end": "10320"
  },
  {
    "text": "So one of the few toys on Effect on the front end.",
    "start": "10320",
    "end": "14200"
  },
  {
    "text": "And we will go over why I think Effect",
    "start": "14200",
    "end": "18279"
  },
  {
    "text": "is ideal on the front end.",
    "start": "18280",
    "end": "21160"
  },
  {
    "text": "This bold claim comes from \nmore than three years working",
    "start": "21160",
    "end": "25000"
  },
  {
    "text": "on production front end code basis.",
    "start": "25000",
    "end": "28600"
  },
  {
    "text": "Three years is a long time, \nespecially in the Effect",
    "start": "28600",
    "end": "31200"
  },
  {
    "text": "ecosystem.",
    "start": "31200",
    "end": "32800"
  },
  {
    "text": "And the whole purpose of this talk",
    "start": "32800",
    "end": "34559"
  },
  {
    "text": "is going around when, how, and why.",
    "start": "34560",
    "end": "37960"
  },
  {
    "text": "Specifically, we're starting from when.",
    "start": "37960",
    "end": "41040"
  },
  {
    "text": "So there are some cases on the front end",
    "start": "41040",
    "end": "43000"
  },
  {
    "text": "where you definitely don't want to use Effect,",
    "start": "43000",
    "end": "45400"
  },
  {
    "text": "or you don't care about using Effect.",
    "start": "45400",
    "end": "47640"
  },
  {
    "text": "And we will see that.",
    "start": "47640",
    "end": "48880"
  },
  {
    "text": "We will go into how.",
    "start": "48880",
    "end": "50120"
  },
  {
    "text": "And these are quick step by step on how",
    "start": "50120",
    "end": "52440"
  },
  {
    "text": "I create a project on the \nfront end and use Effect on it.",
    "start": "52440",
    "end": "56600"
  },
  {
    "text": "And then we will go into why.",
    "start": "56600",
    "end": "58440"
  },
  {
    "text": "Also, why there are a lot of things to say.",
    "start": "58440",
    "end": "60440"
  },
  {
    "text": "We're going to some really complete example",
    "start": "60440",
    "end": "63239"
  },
  {
    "text": "that we'll show you on the benefit of Effect",
    "start": "63240",
    "end": "65440"
  },
  {
    "text": "on the front end.",
    "start": "65440",
    "end": "68200"
  },
  {
    "text": "So starting from when.",
    "start": "68200",
    "end": "71479"
  },
  {
    "text": "When to use Effect on the front end?",
    "start": "71480",
    "end": "73600"
  },
  {
    "text": "The answer is simple.",
    "start": "74280",
    "end": "75240"
  },
  {
    "text": "It's like everything that \nhas business logic on it.",
    "start": "75240",
    "end": "78640"
  },
  {
    "text": "So in this here of front end work,",
    "start": "78640",
    "end": "82000"
  },
  {
    "text": "this is everything around React server components,",
    "start": "82000",
    "end": "84320"
  },
  {
    "text": "worker loaders, and also state management.",
    "start": "84320",
    "end": "87120"
  },
  {
    "text": "And instead of showing you some code samples here,",
    "start": "87120",
    "end": "91960"
  },
  {
    "text": "I will show you some real \nexamples from real code basis.",
    "start": "91960",
    "end": "95240"
  },
  {
    "text": "These are production code basis I have.",
    "start": "95240",
    "end": "97640"
  },
  {
    "text": "Some private, some not.",
    "start": "97640",
    "end": "99960"
  },
  {
    "text": "All using Effect on the front end.",
    "start": "99960",
    "end": "102200"
  },
  {
    "text": "So you can see here an example.",
    "start": "102200",
    "end": "106039"
  },
  {
    "text": "So these are React server components.",
    "start": "106040",
    "end": "109600"
  },
  {
    "text": "I usually get a main function on the top.",
    "start": "110240",
    "end": "112759"
  },
  {
    "text": "This is using all Effect services.",
    "start": "112760",
    "end": "116160"
  },
  {
    "text": "And then you just run promise \nand get the results here.",
    "start": "116160",
    "end": "119840"
  },
  {
    "text": "And these are like React server components.",
    "start": "120360",
    "end": "121960"
  },
  {
    "text": "So it is technically server,",
    "start": "121960",
    "end": "123720"
  },
  {
    "text": "but it's still on the front end.",
    "start": "123720",
    "end": "125760"
  },
  {
    "text": "And another example here I have for workers.",
    "start": "125760",
    "end": "130000"
  },
  {
    "text": "So everything is front end.",
    "start": "130000",
    "end": "131840"
  },
  {
    "text": "Think of it like everything on the front end side.",
    "start": "131840",
    "end": "134680"
  },
  {
    "text": "So it is like a NestJS, Vite \napp, your standard Vite app.",
    "start": "134680",
    "end": "138640"
  },
  {
    "text": "Here like browser, so \nEffect, Effect platform here,",
    "start": "138640",
    "end": "143560"
  },
  {
    "text": "all the Effect modules.",
    "start": "143560",
    "end": "145040"
  },
  {
    "text": "And you just get four lines with services.",
    "start": "145040",
    "end": "148239"
  },
  {
    "text": "Everything is testable.",
    "start": "148240",
    "end": "149120"
  },
  {
    "text": "Everything is here.",
    "start": "149120",
    "end": "150680"
  },
  {
    "text": "So to example, React server \ncomponents and workers here.",
    "start": "150680",
    "end": "155760"
  },
  {
    "text": "When you said you don't want",
    "start": "155760",
    "end": "157439"
  },
  {
    "text": "to use Effect on the front end,",
    "start": "157440",
    "end": "159240"
  },
  {
    "text": "and the answer is like when you have anything",
    "start": "159240",
    "end": "162240"
  },
  {
    "text": "to do like styling, layout, animations,",
    "start": "162240",
    "end": "165160"
  },
  {
    "text": "this is a huge chunk on the front end.",
    "start": "165160",
    "end": "166840"
  },
  {
    "text": "So if you have a worker on the front end side,",
    "start": "166840",
    "end": "169080"
  },
  {
    "text": "you have to deal with like-- you have a design,",
    "start": "169080",
    "end": "171160"
  },
  {
    "text": "and you have to create it on the front end.",
    "start": "171160",
    "end": "175080"
  },
  {
    "text": "And this is like where \nEffect is not at all present.",
    "start": "175080",
    "end": "178200"
  },
  {
    "text": "So if you are just like building \nlike components, styling,",
    "start": "178200",
    "end": "181840"
  },
  {
    "text": "don't use Effect.",
    "start": "181840",
    "end": "183239"
  },
  {
    "text": "And I will show you here.",
    "start": "183240",
    "end": "184920"
  },
  {
    "text": "So I have a components folder.",
    "start": "184920",
    "end": "188720"
  },
  {
    "text": "And here the components are \nlike your standard front end",
    "start": "188720",
    "end": "191280"
  },
  {
    "text": "components.",
    "start": "191280",
    "end": "192120"
  },
  {
    "text": "And here there is no trace of Effect.",
    "start": "192120",
    "end": "194080"
  },
  {
    "text": "So you won't find anything.",
    "start": "194080",
    "end": "195320"
  },
  {
    "text": "These are like all styling, \nwhatever styling library",
    "start": "195320",
    "end": "198560"
  },
  {
    "text": "you're using, all like components and stuff.",
    "start": "198560",
    "end": "201560"
  },
  {
    "text": "The interface is no trace of Effect.",
    "start": "201560",
    "end": "203160"
  },
  {
    "text": "Unless you're taking like state management,",
    "start": "203160",
    "end": "205840"
  },
  {
    "text": "but this is like another topic.",
    "start": "205840",
    "end": "208560"
  },
  {
    "text": "So this is the answer for when.",
    "start": "208560",
    "end": "211040"
  },
  {
    "text": "And then we are going to like how.",
    "start": "211040",
    "end": "212599"
  },
  {
    "text": "And this is like really going to",
    "start": "212600",
    "end": "214240"
  },
  {
    "text": "tactical details of specifically",
    "start": "214240",
    "end": "215920"
  },
  {
    "text": "how we create a project.",
    "start": "215920",
    "end": "217160"
  },
  {
    "text": "And now I'm using it on the front end for Effect.",
    "start": "217160",
    "end": "221240"
  },
  {
    "text": "So first thing first, you just PMPM artifact.",
    "start": "221240",
    "end": "225440"
  },
  {
    "text": "And this is not obvious, but this really",
    "start": "225440",
    "end": "227600"
  },
  {
    "text": "all the things you need there.",
    "start": "227600",
    "end": "229280"
  },
  {
    "text": "So all your TypeScript configuration,",
    "start": "229280",
    "end": "232280"
  },
  {
    "text": "all your config, the linking, \nit's everything there.",
    "start": "232280",
    "end": "234880"
  },
  {
    "text": "And it's not obvious, especially \nfor some of this library",
    "start": "234880",
    "end": "237940"
  },
  {
    "text": "of at this scale.",
    "start": "237940",
    "end": "239880"
  },
  {
    "text": "Second services.",
    "start": "239880",
    "end": "242040"
  },
  {
    "text": "So I usually create like straight away",
    "start": "242040",
    "end": "245719"
  },
  {
    "text": "this like NextJS project.",
    "start": "245720",
    "end": "248160"
  },
  {
    "text": "I'll leave folder inside and services inside it.",
    "start": "248160",
    "end": "251240"
  },
  {
    "text": "I can show you here.",
    "start": "251240",
    "end": "252960"
  },
  {
    "text": "So you have like lib and services.",
    "start": "252960",
    "end": "256400"
  },
  {
    "text": "And these are all the service that you",
    "start": "256400",
    "end": "257600"
  },
  {
    "text": "will create on the front end.",
    "start": "257600",
    "end": "259640"
  },
  {
    "text": "You will always find in all my open source project",
    "start": "260160",
    "end": "262560"
  },
  {
    "text": "this service folder here.",
    "start": "262560",
    "end": "265080"
  },
  {
    "text": "You can find it as well on \nthe other project here, lib",
    "start": "265080",
    "end": "268360"
  },
  {
    "text": "and services.",
    "start": "268360",
    "end": "269840"
  },
  {
    "text": "And you will basically \nstore all the services here,",
    "start": "269840",
    "end": "271800"
  },
  {
    "text": "implement them.",
    "start": "271800",
    "end": "272800"
  },
  {
    "text": "It's easy to like to track \nand to implement as well.",
    "start": "272800",
    "end": "277440"
  },
  {
    "text": "First step, it's Effect.Service.",
    "start": "277440",
    "end": "280160"
  },
  {
    "text": "A lot of people talking about the Effect.Service,",
    "start": "280160",
    "end": "282120"
  },
  {
    "text": "not enough examples here, because I",
    "start": "282120",
    "end": "284520"
  },
  {
    "text": "think it's like the core API \nthat we definitely use a lot,",
    "start": "284520",
    "end": "287759"
  },
  {
    "text": "especially on the front end.",
    "start": "287760",
    "end": "289600"
  },
  {
    "text": "So inside the lib, we can see \nlike all these services here.",
    "start": "289600",
    "end": "292800"
  },
  {
    "text": "And a service is basically all these services",
    "start": "292800",
    "end": "294960"
  },
  {
    "text": "are using this Effect.Service API.",
    "start": "294960",
    "end": "298919"
  },
  {
    "text": "You, for example, here for MDX, we",
    "start": "298920",
    "end": "301240"
  },
  {
    "text": "want to convert some like \nstring to some representation",
    "start": "301240",
    "end": "305240"
  },
  {
    "text": "for the front end.",
    "start": "305240",
    "end": "306479"
  },
  {
    "text": "So you install whatever package it as outside,",
    "start": "306480",
    "end": "309680"
  },
  {
    "text": "in this case, the mdx-js.",
    "start": "309680",
    "end": "312080"
  },
  {
    "text": "And then you usually create this like class",
    "start": "312080",
    "end": "315720"
  },
  {
    "text": "with Effect.Service.",
    "start": "315720",
    "end": "317120"
  },
  {
    "text": "You have some dependencies inside it.",
    "start": "317120",
    "end": "319919"
  },
  {
    "text": "These dependencies are internal to the project.",
    "start": "319920",
    "end": "323240"
  },
  {
    "text": "So you can see here, these are other services",
    "start": "323240",
    "end": "326240"
  },
  {
    "text": "inside the services folder.",
    "start": "326240",
    "end": "328400"
  },
  {
    "text": "So these are like all the composition abilities",
    "start": "328400",
    "end": "330240"
  },
  {
    "text": "for Effect.",
    "start": "330240",
    "end": "331520"
  },
  {
    "text": "You can use dependencies \nhere, probably the first time",
    "start": "331520",
    "end": "335120"
  },
  {
    "text": "that you will--",
    "start": "335120",
    "end": "335919"
  },
  {
    "text": "in this conference that we see in this.",
    "start": "335920",
    "end": "337560"
  },
  {
    "text": "But you can just provide dependencies and layers",
    "start": "337560",
    "end": "340040"
  },
  {
    "text": "inside Effect.Service.",
    "start": "340040",
    "end": "342160"
  },
  {
    "text": "So it's packing everything in one API.",
    "start": "342160",
    "end": "345000"
  },
  {
    "text": "And then you do your implementation.",
    "start": "345000",
    "end": "347120"
  },
  {
    "text": "This is like the details of your app.",
    "start": "347120",
    "end": "348680"
  },
  {
    "text": "It doesn't really matter right now.",
    "start": "348680",
    "end": "350199"
  },
  {
    "text": "But you provide these like \nAPI that returns Effect.",
    "start": "350200",
    "end": "353120"
  },
  {
    "text": "You can see here, you give a string",
    "start": "353120",
    "end": "355000"
  },
  {
    "text": "and you turn whatever Effect with all the arrows",
    "start": "355000",
    "end": "357080"
  },
  {
    "text": "stuck there.",
    "start": "357080",
    "end": "359240"
  },
  {
    "text": "And so all the other services are the same.",
    "start": "359240",
    "end": "361400"
  },
  {
    "text": "So you will see like all of \nthese like Effect.Service,",
    "start": "361400",
    "end": "364360"
  },
  {
    "text": "Effect.Service, all of the year.",
    "start": "364360",
    "end": "366360"
  },
  {
    "text": "And the same for the other example",
    "start": "366360",
    "end": "367719"
  },
  {
    "text": "that the other code base that I show you.",
    "start": "367720",
    "end": "370120"
  },
  {
    "text": "So third step.",
    "start": "370120",
    "end": "371919"
  },
  {
    "text": "First step is like runtime.",
    "start": "371920",
    "end": "374000"
  },
  {
    "text": "I find really great to create",
    "start": "374000",
    "end": "375680"
  },
  {
    "text": "a runtime out of the services.",
    "start": "375680",
    "end": "378320"
  },
  {
    "text": "So you can see here, inside the",
    "start": "378320",
    "end": "380960"
  },
  {
    "text": "lib folder, out of the services",
    "start": "380960",
    "end": "382520"
  },
  {
    "text": "folder, we have a runtime \nclient and a runtime server.",
    "start": "382520",
    "end": "385800"
  },
  {
    "text": "This for next year specifically, \nwhere you have both server",
    "start": "385800",
    "end": "388319"
  },
  {
    "text": "and client.",
    "start": "388320",
    "end": "389240"
  },
  {
    "text": "And Effects allows you to extract all the layers",
    "start": "389240",
    "end": "393560"
  },
  {
    "text": "from Effect.Service that we \nsaw in the services here.",
    "start": "393560",
    "end": "397919"
  },
  {
    "text": "You take the service that you learn on the server",
    "start": "397920",
    "end": "400240"
  },
  {
    "text": "in this case, and you basically put all of them",
    "start": "400240",
    "end": "403240"
  },
  {
    "text": "in the main layer.",
    "start": "403240",
    "end": "404479"
  },
  {
    "text": "This layer, as you can see, \nwill contain all your services.",
    "start": "404480",
    "end": "411240"
  },
  {
    "text": "And then you put everything in a measure on time.",
    "start": "411240",
    "end": "413840"
  },
  {
    "text": "We saw this also yesterday.",
    "start": "413840",
    "end": "416199"
  },
  {
    "text": "And you have this runtime that is basically",
    "start": "416200",
    "end": "418800"
  },
  {
    "text": "able to learn any kind of \nEffect using the listed services",
    "start": "418800",
    "end": "422680"
  },
  {
    "text": "here.",
    "start": "422680",
    "end": "423720"
  },
  {
    "text": "And this is for the server.",
    "start": "423720",
    "end": "425040"
  },
  {
    "text": "And the same for the client.",
    "start": "425040",
    "end": "426720"
  },
  {
    "text": "So I have another one for the client.",
    "start": "426720",
    "end": "428120"
  },
  {
    "text": "These are specific for the client.",
    "start": "428120",
    "end": "430680"
  },
  {
    "text": "And then you can just run \npromise on it, the five step.",
    "start": "430680",
    "end": "434960"
  },
  {
    "text": "So you will, as you saw before,",
    "start": "434960",
    "end": "437080"
  },
  {
    "text": "in your server component here.",
    "start": "437080",
    "end": "441400"
  },
  {
    "text": "And you create the main at \nthe top using some services.",
    "start": "441400",
    "end": "445479"
  },
  {
    "text": "In this case, the content \nservice and the metadata here.",
    "start": "445480",
    "end": "449520"
  },
  {
    "text": "You can also use whatever other package or module",
    "start": "450120",
    "end": "453080"
  },
  {
    "text": "that Effect oversees.",
    "start": "453080",
    "end": "454479"
  },
  {
    "text": "So you see your Orion order.",
    "start": "454480",
    "end": "457000"
  },
  {
    "text": "This is great.",
    "start": "457000",
    "end": "457640"
  },
  {
    "text": "For example, here in a few lines of code,",
    "start": "457640",
    "end": "459240"
  },
  {
    "text": "you can sort all the articles by the updated date.",
    "start": "459240",
    "end": "463360"
  },
  {
    "text": "And it's always backed by schema.",
    "start": "463360",
    "end": "465520"
  },
  {
    "text": "So this is great as well.",
    "start": "465520",
    "end": "467560"
  },
  {
    "text": "And you get the final main here that",
    "start": "467560",
    "end": "469639"
  },
  {
    "text": "contains the result for your \ncomponent, whatever error",
    "start": "469640",
    "end": "474480"
  },
  {
    "text": "tracked on the type level.",
    "start": "474480",
    "end": "476200"
  },
  {
    "text": "And also the services that are required here.",
    "start": "476200",
    "end": "479720"
  },
  {
    "text": "And you can just use the runtime server,",
    "start": "479720",
    "end": "481560"
  },
  {
    "text": "a core run main, run promise.",
    "start": "481560",
    "end": "483960"
  },
  {
    "text": "And just get back to the result.",
    "start": "483960",
    "end": "486160"
  },
  {
    "text": "This would work because the \nruntime server here, you can",
    "start": "486160",
    "end": "488720"
  },
  {
    "text": "see, provides both metadata in content here, which",
    "start": "488720",
    "end": "494040"
  },
  {
    "text": "are required by main here.",
    "start": "494040",
    "end": "496200"
  },
  {
    "text": "And so you don't even have \nto think a lot about it.",
    "start": "496200",
    "end": "498760"
  },
  {
    "text": "You just create the service.",
    "start": "498760",
    "end": "500200"
  },
  {
    "text": "As we saw, you create the service.",
    "start": "500200",
    "end": "502560"
  },
  {
    "text": "You put everything in a runtime.",
    "start": "502560",
    "end": "504280"
  },
  {
    "text": "And just run promise wherever you need.",
    "start": "504280",
    "end": "507840"
  },
  {
    "text": "So this was all the OW.",
    "start": "507840",
    "end": "509480"
  },
  {
    "text": "And then just go into why.",
    "start": "509480",
    "end": "511520"
  },
  {
    "text": "For the why, I will just show \nyou a couple of examples.",
    "start": "511520",
    "end": "513919"
  },
  {
    "text": "We can go like a long list of why you would",
    "start": "513920",
    "end": "516279"
  },
  {
    "text": "want to use a stack on the front end.",
    "start": "516280",
    "end": "517919"
  },
  {
    "text": "I will show you a couple of examples",
    "start": "517920",
    "end": "519279"
  },
  {
    "text": "so we can get pretty tactical on the example",
    "start": "519280",
    "end": "522680"
  },
  {
    "text": "that I showed you in the code base before.",
    "start": "522680",
    "end": "525320"
  },
  {
    "text": "First is error handling.",
    "start": "525320",
    "end": "527120"
  },
  {
    "text": "So as we saw here, main tracks all the errors",
    "start": "527120",
    "end": "530680"
  },
  {
    "text": "that happen anywhere in whatever main you created.",
    "start": "530680",
    "end": "535480"
  },
  {
    "text": "And so in this case, you can just run promise.",
    "start": "535480",
    "end": "537680"
  },
  {
    "text": "And the correct error component would fail.",
    "start": "537680",
    "end": "539440"
  },
  {
    "text": "But you can also just pipe here.",
    "start": "541120",
    "end": "544600"
  },
  {
    "text": "Write a pipe.",
    "start": "544600",
    "end": "546240"
  },
  {
    "text": "And check for whatever error using something",
    "start": "546240",
    "end": "550600"
  },
  {
    "text": "like catch tag or catch text.",
    "start": "550600",
    "end": "553120"
  },
  {
    "text": "So you get all the errors here.",
    "start": "553120",
    "end": "555320"
  },
  {
    "text": "And you can also decide to \nprovide an error message",
    "start": "555320",
    "end": "557960"
  },
  {
    "text": "to the user on the front end, \nespecially this is great.",
    "start": "557960",
    "end": "561160"
  },
  {
    "text": "Because oftentimes, you end \nup with something happen.",
    "start": "561160",
    "end": "565560"
  },
  {
    "text": "And this is not really great on the front end.",
    "start": "565560",
    "end": "568320"
  },
  {
    "text": "So you can decide to catch whatever error",
    "start": "568320",
    "end": "570480"
  },
  {
    "text": "all tracked on the background.",
    "start": "570480",
    "end": "573279"
  },
  {
    "text": "And you don't really need to",
    "start": "573280",
    "end": "574640"
  },
  {
    "text": "care where this error originates",
    "start": "574640",
    "end": "576640"
  },
  {
    "text": "or why they happen, as long \nas you have enough information",
    "start": "576640",
    "end": "579920"
  },
  {
    "text": "to show a message to the user.",
    "start": "579920",
    "end": "583839"
  },
  {
    "text": "The second one, it's like you",
    "start": "583840",
    "end": "585400"
  },
  {
    "text": "have no more issue, especially",
    "start": "585400",
    "end": "587080"
  },
  {
    "text": "for something like an SGS, to run",
    "start": "587080",
    "end": "589280"
  },
  {
    "text": "several codes on the client and vice versa.",
    "start": "589280",
    "end": "592520"
  },
  {
    "text": "So as we mentioned, we create two run times,",
    "start": "592520",
    "end": "594880"
  },
  {
    "text": "one for the client and one for the server.",
    "start": "594880",
    "end": "597160"
  },
  {
    "text": "That's because all the \nservices that are listed here",
    "start": "597160",
    "end": "599319"
  },
  {
    "text": "will not be bundled in the client.",
    "start": "600080",
    "end": "602480"
  },
  {
    "text": "These are like all server stuff.",
    "start": "602480",
    "end": "604320"
  },
  {
    "text": "And that's why they are \ncontaining this runtime server.",
    "start": "604320",
    "end": "608760"
  },
  {
    "text": "And this means that if you try to run something",
    "start": "608760",
    "end": "613080"
  },
  {
    "text": "using a runtime client on the server,",
    "start": "613080",
    "end": "615840"
  },
  {
    "text": "you will get the compile time error.",
    "start": "615840",
    "end": "617680"
  },
  {
    "text": "This is like an error that \nyou can spot right away.",
    "start": "617680",
    "end": "622399"
  },
  {
    "text": "Because it says that the \ncontent in the metadata, which",
    "start": "622400",
    "end": "624680"
  },
  {
    "text": "are required by main, as we \nsaw here, these two services",
    "start": "624680",
    "end": "628279"
  },
  {
    "text": "are required to run the system.",
    "start": "628280",
    "end": "630360"
  },
  {
    "text": "They are not assignable to an RPC client.",
    "start": "630360",
    "end": "634480"
  },
  {
    "text": "And that's because the runtime client doesn't",
    "start": "634480",
    "end": "637199"
  },
  {
    "text": "have these services inside it.",
    "start": "637200",
    "end": "639720"
  },
  {
    "text": "So there is no issue at all to running something",
    "start": "639720",
    "end": "643319"
  },
  {
    "text": "that should be on the server.",
    "start": "643320",
    "end": "644840"
  },
  {
    "text": "So it should run something like Node or whatever",
    "start": "644840",
    "end": "649440"
  },
  {
    "text": "on the client and vice versa.",
    "start": "649440",
    "end": "651240"
  },
  {
    "text": "For example, there are some \ncases with state management",
    "start": "651240",
    "end": "653320"
  },
  {
    "text": "where you want to use some browser API.",
    "start": "653320",
    "end": "656120"
  },
  {
    "text": "And you pack a service inside runtime client.",
    "start": "656120",
    "end": "659640"
  },
  {
    "text": "And there is no chance to have \nany kind of runtime error,",
    "start": "659640",
    "end": "663200"
  },
  {
    "text": "in this case, because everything",
    "start": "663200",
    "end": "664360"
  },
  {
    "text": "is on the runtime of the client",
    "start": "664360",
    "end": "665680"
  },
  {
    "text": "and not the server.",
    "start": "665680",
    "end": "666880"
  },
  {
    "text": "So you want to mix and match them,",
    "start": "666880",
    "end": "669080"
  },
  {
    "text": "because you get compile time error for everything.",
    "start": "669080",
    "end": "672880"
  },
  {
    "text": "And then there are a lot of other things",
    "start": "672880",
    "end": "675320"
  },
  {
    "text": "that I can talk about.",
    "start": "675320",
    "end": "676080"
  },
  {
    "text": "There is no time here.",
    "start": "676080",
    "end": "677320"
  },
  {
    "text": "But multiple data structure, which",
    "start": "677320",
    "end": "679200"
  },
  {
    "text": "are great for something like \nreactive mutable updates.",
    "start": "679200",
    "end": "682440"
  },
  {
    "text": "So use state, use hash map upset from Effect.",
    "start": "682440",
    "end": "687320"
  },
  {
    "text": "As we otherd talked about, like, rattle adoption,",
    "start": "687960",
    "end": "690560"
  },
  {
    "text": "just TypeScript, and things like Effect platform",
    "start": "690560",
    "end": "693200"
  },
  {
    "text": "and platform-browser are great \nfor HTTP call web workers,",
    "start": "693200",
    "end": "699240"
  },
  {
    "text": "as we saw here, come from platform.",
    "start": "699240",
    "end": "701320"
  },
  {
    "text": "You can just work around.",
    "start": "701320",
    "end": "703080"
  },
  {
    "text": "And you don't need to care how it works,",
    "start": "703080",
    "end": "705000"
  },
  {
    "text": "shut down, interruption, and everything.",
    "start": "705000",
    "end": "708320"
  },
  {
    "text": "So these are all the benefits.",
    "start": "708320",
    "end": "710240"
  },
  {
    "text": "I talk about this a lot more, \nlike local first payments",
    "start": "710240",
    "end": "714720"
  },
  {
    "text": "with all examples, all open source, all free,",
    "start": "714720",
    "end": "717040"
  },
  {
    "text": "on type pass on depth.",
    "start": "717040",
    "end": "718800"
  },
  {
    "text": "Specifically, I have a course for beginners.",
    "start": "718800",
    "end": "721399"
  },
  {
    "text": "It's made completely for beginners.",
    "start": "721400",
    "end": "723520"
  },
  {
    "text": "It's the kind of resource that I wanted.",
    "start": "723520",
    "end": "726840"
  },
  {
    "text": "For me, as I was getting started with Effect,",
    "start": "726840",
    "end": "730080"
  },
  {
    "text": "I wrote all down here.",
    "start": "730080",
    "end": "731160"
  },
  {
    "text": "You can check it out in the link.",
    "start": "731160",
    "end": "733199"
  },
  {
    "text": "And another more specific \nfor Effect with React 19,",
    "start": "733200",
    "end": "736600"
  },
  {
    "text": "this is like setting up a project with Effect",
    "start": "736600",
    "end": "739360"
  },
  {
    "text": "on the front end using all the \nnew patterns with React 19.",
    "start": "739360",
    "end": "742880"
  },
  {
    "text": "Also here, you can check it out.",
    "start": "742880",
    "end": "745120"
  },
  {
    "text": "Yeah, this was me.",
    "start": "745120",
    "end": "746120"
  },
  {
    "text": "I'm Sandro.",
    "start": "746120",
    "end": "746839"
  },
  {
    "text": "And you can check me out.",
    "start": "746840",
    "end": "747840"
  },
  {
    "text": "Time to type one, start there.",
    "start": "747840",
    "end": "749200"
  },
  {
    "text": "All the links are there, DMs, whatever.",
    "start": "749200",
    "end": "751880"
  },
  {
    "text": "And that's it.",
    "start": "751880",
    "end": "753040"
  },
  {
    "text": "Thank you.",
    "start": "753040",
    "end": "761639"
  },
  {
    "text": "(audience applauds)",
    "start": "761640",
    "end": "762874"
  }
]