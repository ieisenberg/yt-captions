[
  {
    "text": "It looks like we're live. All right, everybody. Hello.",
    "start": "6083",
    "end": "11250"
  },
  {
    "text": "Tim and Max back again with our, session on Re-imagining ContentLayer.",
    "start": "11458",
    "end": "17750"
  },
  {
    "text": "I know Tim, you did some work on your own on this. I think it was last week.",
    "start": "17875",
    "end": "22916"
  },
  {
    "text": "maybe you want to like recap what you were working on last week.",
    "start": "23541",
    "end": "28833"
  },
  {
    "text": "Yeah. last week I took off from where we",
    "start": "30208",
    "end": "36583"
  },
  {
    "text": "got to last time, which was getting something up and running so we could start iterating on the API.",
    "start": "36583",
    "end": "43750"
  },
  {
    "text": "so got that part done and then started working on what",
    "start": "46041",
    "end": "52375"
  },
  {
    "text": "sources would look like and what plugins might look like.",
    "start": "52375",
    "end": "56958"
  },
  {
    "text": "So made some progress there and kind of finished the stream at that point.",
    "start": "58875",
    "end": "64375"
  },
  {
    "text": "So kind of at the stage where you probably start to refine the plugin API",
    "start": "64500",
    "end": "71583"
  },
  {
    "text": "a bit and work out how the source would then pass information into our document",
    "start": "71583",
    "end": "78583"
  },
  {
    "text": "schemas, and then once we worked that part out, then we can actually start",
    "start": "78625",
    "end": "84291"
  },
  {
    "text": "generating the content and having something ready to",
    "start": "84416",
    "end": "90666"
  },
  {
    "text": "start using in a project. Cool.",
    "start": "90666",
    "end": "94500"
  },
  {
    "text": "So I guess just for to bring you up to speed and also everyone else",
    "start": "96958",
    "end": "103375"
  },
  {
    "text": "will be the best place to start. If we maybe go to source.",
    "start": "104583",
    "end": "108583"
  },
  {
    "text": "so this stage I've made source directly extended stream",
    "start": "112833",
    "end": "118541"
  },
  {
    "text": "and I think last time I was on, I",
    "start": "118583",
    "end": "125875"
  },
  {
    "text": "didn't, I changed it since I was on stream to output a context.",
    "start": "125875",
    "end": "132875"
  },
  {
    "text": "And the reason being is each plugin will probably want to contribute something unique to",
    "start": "134000",
    "end": "139916"
  },
  {
    "text": "the output in a context. So the best way of getting like typed",
    "start": "139916",
    "end": "145208"
  },
  {
    "text": "keys and that map without having like conflicts.",
    "start": "145208",
    "end": "150208"
  },
  {
    "text": "Cool. That sounds interesting. So the context for each plugin, they emit like, metadata about themselves.",
    "start": "152125",
    "end": "159250"
  },
  {
    "text": "Yeah. So we have to take a look at the files source.",
    "start": "160583",
    "end": "164958"
  },
  {
    "text": "it's a source that outputs content, meta and file system meta, content",
    "start": "169333",
    "end": "176458"
  },
  {
    "text": "meta is an interface where you can access the content of the file that you can get",
    "start": "176458",
    "end": "182375"
  },
  {
    "text": "a stream or you can get a string content or you can get binary content.",
    "start": "182375",
    "end": "187125"
  },
  {
    "text": "And then the file system plugin also adds metadata like the file part for the stat information.",
    "start": "189750",
    "end": "196375"
  },
  {
    "text": "so the idea is you could have another source that outputs the content meta as",
    "start": "199333",
    "end": "205916"
  },
  {
    "text": "well as I dunno, if it's like a database that could like, it's an extra",
    "start": "205958",
    "end": "213666"
  },
  {
    "text": "information like, ID or something.",
    "start": "213708",
    "end": "218540"
  },
  {
    "text": "So is the idea like you could yield like the file system source that's, or maybe",
    "start": "219583",
    "end": "224708"
  },
  {
    "text": "like, like, I guess, what's the, how would you access the context",
    "start": "224750",
    "end": "231165"
  },
  {
    "text": "emitted by a source if you needed to, like, is the idea that the user has the ability to access that",
    "start": "231500",
    "end": "239833"
  },
  {
    "text": "context or is that kind of going to be abstracted away? And you would basically just get access to that context somehow",
    "start": "239833",
    "end": "245915"
  },
  {
    "text": "through like some other API. yeah. So I'm not sure how we would then turn",
    "start": "245916",
    "end": "252375"
  },
  {
    "text": "this context into something that schema would consume because right now we have the",
    "start": "252375",
    "end": "257958"
  },
  {
    "text": "fields which are just during to a schema or just a plane.",
    "start": "257958",
    "end": "263875"
  },
  {
    "text": "Yeah. So we go to document or maybe if we go to our test config, which would probably",
    "start": "264916",
    "end": "270875"
  },
  {
    "text": "illustrate it better, so we have our",
    "start": "270875",
    "end": "276250"
  },
  {
    "text": "source and then fields. So I'm still not quite sure how these",
    "start": "276250",
    "end": "284500"
  },
  {
    "text": "will pull information from the source. In this case, we would probably want",
    "start": "284500",
    "end": "290625"
  },
  {
    "text": "these particular fields to come from the front better of the markdown.",
    "start": "290625",
    "end": "294541"
  },
  {
    "text": "so I kind of need to work out a way of getting information out of the source",
    "start": "297833",
    "end": "303583"
  },
  {
    "text": "into fields without having like a naming conflicts.",
    "start": "304000",
    "end": "308832"
  },
  {
    "text": "It's like, for example, you might have a body field in the front better, but also you want to",
    "start": "310375",
    "end": "315582"
  },
  {
    "text": "access the body of the markdown document.",
    "start": "315583",
    "end": "318000"
  },
  {
    "text": "So we just need a way of working around those conflicts.",
    "start": "321583",
    "end": "325125"
  },
  {
    "text": "Maybe maybe one way of doing it is we",
    "start": "326833",
    "end": "335708"
  },
  {
    "text": "could do like source star.",
    "start": "335708",
    "end": "337625"
  },
  {
    "text": "Maybe it could come from the source plugin. I don't know. Source plugin front meta.",
    "start": "341416",
    "end": "348166"
  },
  {
    "text": "That could be an interesting, but I guess what would be, what would be an example? That you could think of",
    "start": "351125",
    "end": "356166"
  },
  {
    "text": "up like another source. currently that we'd want to support",
    "start": "356166",
    "end": "365375"
  },
  {
    "text": "that like wouldn't, wouldn't be like a markdown document.",
    "start": "365375",
    "end": "369082"
  },
  {
    "text": "Do you know what I mean? Yeah. I guess it could",
    "start": "370541",
    "end": "377500"
  },
  {
    "text": "be like YAML or Todl. You might want to pass those.",
    "start": "377500",
    "end": "384875"
  },
  {
    "text": "those will be more straightforward to",
    "start": "386791",
    "end": "391957"
  },
  {
    "text": "markdown because usually they're quite, usually they go straight to a structured output.",
    "start": "391958",
    "end": "397666"
  },
  {
    "text": "That doesn't need any additional program processing. Yeah. Cause like the, the thing I could see",
    "start": "399333",
    "end": "405957"
  },
  {
    "text": "being a problem with the definition of a document, if you have",
    "start": "405958",
    "end": "412333"
  },
  {
    "text": "fields defined that way as like, let's say that you're using a file system source, which is",
    "start": "412333",
    "end": "419208"
  },
  {
    "text": "pulling in like markdown or, or Todl and you accidentally like, you know, right front matter field",
    "start": "419208",
    "end": "426208"
  },
  {
    "text": "or something like that, would you then just like get an error at runtime or would that type check?",
    "start": "426208",
    "end": "430000"
  },
  {
    "text": "Yeah. I guess, because we're using context, we can add type safety.",
    "start": "432250",
    "end": "439125"
  },
  {
    "text": "The like, the fields here can check",
    "start": "439125",
    "end": "444833"
  },
  {
    "text": "that the information they're accessing is actually in the source.",
    "start": "444833",
    "end": "448583"
  },
  {
    "text": "Yeah. Okay. That makes sense. Otherwise we scrap that idea",
    "start": "451291",
    "end": "459208"
  },
  {
    "text": "and just use a plain object. I think like the initial version ",
    "start": "459208",
    "end": "465750"
  },
  {
    "text": "that we're building out here, we should just focus on Markdown dot or MDX documents.",
    "start": "465750",
    "end": "471708"
  },
  {
    "text": "Like just focus on the like most common content type and then, because otherwise",
    "start": "471708",
    "end": "481791"
  },
  {
    "text": "we're not like, I think we should focus on Markdown on MDX and",
    "start": "481791",
    "end": "487125"
  },
  {
    "text": "then like add on later. If that makes sense.",
    "start": "487125",
    "end": "493083"
  },
  {
    "text": "so like using the, the document",
    "start": "493083",
    "end": "499916"
  },
  {
    "text": "definition would basically, the fields would actually just be straight up one-to-one mapped to like, the meta fields.",
    "start": "499916",
    "end": "505457"
  },
  {
    "text": "You know what I mean? So I started working on plugins in the",
    "start": "505708",
    "end": "511166"
  },
  {
    "text": "last stream as well. And currently plugins are just",
    "start": "511166",
    "end": "515500"
  },
  {
    "text": "a function that takes in a source or returns a new source.",
    "start": "518000",
    "end": "521416"
  },
  {
    "text": "And the nice thing about using context was you can not quite easily just like",
    "start": "524666",
    "end": "528958"
  },
  {
    "text": "add on things that you are adding to the context.",
    "start": "530041",
    "end": "533875"
  },
  {
    "text": "But if we have a Markdown plugin, you kind of have to, and",
    "start": "535958",
    "end": "541791"
  },
  {
    "text": "would become like a, a record that takes in like the file system",
    "start": "541791",
    "end": "550166"
  },
  {
    "text": "information and then return something that adds like a key to that record.",
    "start": "550166",
    "end": "554083"
  },
  {
    "text": "So if you, you receive file system information and then",
    "start": "557833",
    "end": "563500"
  },
  {
    "text": "return the file system information with additional fields, like I've now passed the",
    "start": "563500",
    "end": "569541"
  },
  {
    "text": "body out of the Markdown document in the front matter. So you might go and front matter body.",
    "start": "569541",
    "end": "582541"
  },
  {
    "text": "But then the problem then becomes, how do you pass that into your, because the",
    "start": "587875",
    "end": "593958"
  },
  {
    "text": "document fields are flat at the moment.",
    "start": "593958",
    "end": "598208"
  },
  {
    "text": "We got a document or a simple config, but we just have a flat set of fields.",
    "start": "599583",
    "end": "606000"
  },
  {
    "text": "And I've, and then a few starters adding random keys in here.",
    "start": "608541",
    "end": "613791"
  },
  {
    "text": "It's like, I've come like a nested structure. Right.",
    "start": "613791",
    "end": "617916"
  },
  {
    "text": "So I'm wondering if we have like, an additional configuration that maps",
    "start": "620958",
    "end": "627750"
  },
  {
    "text": "the output of the source to a flat field subject.",
    "start": "631791",
    "end": "635833"
  },
  {
    "text": "Maybe there's a bit away. Well, so, so can you show me an example?",
    "start": "641625",
    "end": "653166"
  },
  {
    "text": "Like, I don't know if this is working currently, but can you show me an example of like you using a plugin?",
    "start": "653458",
    "end": "658666"
  },
  {
    "text": "Currently like the, with what you built here, let's see the source plugin thing.",
    "start": "658666",
    "end": "662583"
  },
  {
    "text": "Yeah. So this is using a plugin here.",
    "start": "664166",
    "end": "667958"
  },
  {
    "text": "It's using the remark one, which, what was the two right now?",
    "start": "670166",
    "end": "676458"
  },
  {
    "text": "Currently it's just adding The unified output to the context.",
    "start": "681958",
    "end": "688958"
  },
  {
    "text": "The value is the output of the processor and data is like a, it is like the",
    "start": "690833",
    "end": "698833"
  },
  {
    "text": "metadata that the process adds. So from the remark, this",
    "start": "698833",
    "end": "704083"
  },
  {
    "text": "would be the output markdown.",
    "start": "704083",
    "end": "706000"
  },
  {
    "text": "And this would be an object that looks like it has a front meta field on it.",
    "start": "709333",
    "end": "718833"
  },
  {
    "text": "I should be able to.",
    "start": "719000",
    "end": "722291"
  },
  {
    "text": "What if I can get it working example? Because I think if we had, if we have",
    "start": "724791",
    "end": "731166"
  },
  {
    "text": "something running through the plugin, it's probably going to be a little more easy for us to think about like, then",
    "start": "731166",
    "end": "739833"
  },
  {
    "text": "what becomes like the best user experience that we could provide for plugins. Cause again, I think if we like scope",
    "start": "739833",
    "end": "746458"
  },
  {
    "text": "ourselves down to just considering markdown and MDX files at the moment and building plugins around those, we can",
    "start": "746458",
    "end": "753083"
  },
  {
    "text": "always add this document types on top of everything later, but I think the, I",
    "start": "753083",
    "end": "757625"
  },
  {
    "text": "think the focus should be on markdown and MDX documents, because that's like, that's probably going to be the most",
    "start": "758208",
    "end": "764000"
  },
  {
    "text": "common, probably going to be the most common content type that we deal with.",
    "start": "764000",
    "end": "773541"
  },
  {
    "text": "so last time I ended this service as well, which takes the stream of config",
    "start": "774500",
    "end": "782416"
  },
  {
    "text": "and then turns it into a stream of. passed documents.",
    "start": "782916",
    "end": "786458"
  },
  {
    "text": "Cool. so for each, each time the config",
    "start": "788416",
    "end": "794041"
  },
  {
    "text": "gets submitted from the config builder, it will let in the",
    "start": "794041",
    "end": "801083"
  },
  {
    "text": "documents in the config. And then for each document type, it will consume the source.",
    "start": "801083",
    "end": "807625"
  },
  {
    "text": "And you'll get back the, like the output of it where you would get the passed output.",
    "start": "812375",
    "end": "818458"
  },
  {
    "text": "And at the moment it's just logging it. Maybe we can run this.",
    "start": "822791",
    "end": "827625"
  },
  {
    "text": "Yeah, that'd be cool. Get it running. Here's the scratch.",
    "start": "827916",
    "end": "834833"
  },
  {
    "text": "Is your terminal outside of the current window that you have opened?",
    "start": "838916",
    "end": "843666"
  },
  {
    "text": "Or can you split your neovim into a terminal as well?",
    "start": "848291",
    "end": "852708"
  },
  {
    "text": "okay. We just set a new tab.",
    "start": "853875",
    "end": "858708"
  },
  {
    "text": "Yeah. That's what I did. Nope.",
    "start": "863250",
    "end": "865833"
  },
  {
    "text": "Just one second. I'm going to turn my light on and close my door.",
    "start": "872625",
    "end": "875333"
  },
  {
    "text": "The reason I ask is because we current can't actually see what you're running right now.",
    "start": "885916",
    "end": "891791"
  },
  {
    "text": "Oh, that's funny. It's just the way, ghosty work.",
    "start": "893000",
    "end": "898083"
  },
  {
    "text": "So I guess. There we go.",
    "start": "898083",
    "end": "903000"
  },
  {
    "text": "Maybe I'll just open the tmux session.",
    "start": "909458",
    "end": "911416"
  },
  {
    "text": "And then let's go to tsx packages.",
    "start": "920666",
    "end": "923250"
  },
  {
    "text": "Okay.",
    "start": "930708",
    "end": "931041"
  },
  {
    "text": "So that's the document schema there. And here's ours stored output",
    "start": "936458",
    "end": "942166"
  },
  {
    "text": "I go back to the document builder.",
    "start": "946250",
    "end": "948125"
  },
  {
    "text": "In this content object, we have the content meta, which is a bunch",
    "start": "1005000",
    "end": "1012583"
  },
  {
    "text": "of effects and streams for consuming the content.",
    "start": "1012583",
    "end": "1017083"
  },
  {
    "text": "File system meta, which has the path in the stat information, and then",
    "start": "1019208",
    "end": "1026916"
  },
  {
    "text": "the output from our plugin. So here you can see the front meta.",
    "start": "1026916",
    "end": "1032041"
  },
  {
    "text": "It looks like this is just the whole markdown document.",
    "start": "1034458",
    "end": "1037250"
  },
  {
    "text": "So should the plug-in-- so OK, thinking about this",
    "start": "1041041",
    "end": "1046833"
  },
  {
    "text": "from a user perspective, right? User is going to define a document.",
    "start": "1046833",
    "end": "1051958"
  },
  {
    "text": "They're going to define the schema of the fields in the document. They're going to define a source. And then that source",
    "start": "1052333",
    "end": "1057875"
  },
  {
    "text": "may also have plug-ins. The user, generally speaking, is not",
    "start": "1057875",
    "end": "1069500"
  },
  {
    "text": "going to want to have to configure much about-- they should be able to configure the plug-in, but they're not going to want to have to",
    "start": "1069500",
    "end": "1075625"
  },
  {
    "text": "configure it upfront. It shouldn't be a requirement, right? So how do we take what",
    "start": "1075625",
    "end": "1081666"
  },
  {
    "text": "the plug-in is currently generating here and make it into something useful?",
    "start": "1081666",
    "end": "1087416"
  },
  {
    "text": "Because right now, we have",
    "start": "1088250",
    "end": "1100500"
  },
  {
    "text": "these three different context meta-thingies that we're emitting,",
    "start": "1100500",
    "end": "1103750"
  },
  {
    "text": "but the engine should somehow eventually turn this into document information, right?",
    "start": "1105833",
    "end": "1113250"
  },
  {
    "text": "So what's the thought? I don't know if you got this far, but what is your thought process on how that should",
    "start": "1115541",
    "end": "1121666"
  },
  {
    "text": "work within the plug-ins? Is the plug-in going to define each successive transformation?",
    "start": "1121750",
    "end": "1128041"
  },
  {
    "text": "Or is the plug-in literally additive only? Is there supposed to be a final plug-in that",
    "start": "1128958",
    "end": "1134041"
  },
  {
    "text": "does the work of doing the final transformation and checking it against",
    "start": "1134041",
    "end": "1143166"
  },
  {
    "text": "the schema of the document? I guess those are my question. So I don't know if you got",
    "start": "1143166",
    "end": "1148791"
  },
  {
    "text": "that far in your last stream. No, I don't get that far.",
    "start": "1148791",
    "end": "1151625"
  },
  {
    "text": "We could probably like package up a source for Markdown,",
    "start": "1157416",
    "end": "1164833"
  },
  {
    "text": "so you only have to do-- use one API. So currently, the file",
    "start": "1165541",
    "end": "1171250"
  },
  {
    "text": "system doesn't really care about what the content is. It just reads things from the disk.",
    "start": "1171250",
    "end": "1178041"
  },
  {
    "text": "But if we had like a file system Markdown source, maybe that would be",
    "start": "1179250",
    "end": "1184291"
  },
  {
    "text": "the better experience. I almost think that--",
    "start": "1184291",
    "end": "1189958"
  },
  {
    "text": "so I almost think-- tell me if you think I'm nuts.",
    "start": "1192708",
    "end": "1196708"
  },
  {
    "text": "But I almost think like the source, it should be decoupled from the--",
    "start": "1198041",
    "end": "1206208"
  },
  {
    "text": "I'm going to use the term like destination or transformer or whatever. But the source is just where the",
    "start": "1206500",
    "end": "1213083"
  },
  {
    "text": "documents come from. But then a source, we",
    "start": "1213083",
    "end": "1218250"
  },
  {
    "text": "could have the source take, I don't know, an array of transformers",
    "start": "1218250",
    "end": "1224041"
  },
  {
    "text": "or we could have destinations. Or targets for that file system source.",
    "start": "1224041",
    "end": "1230375"
  },
  {
    "text": "I don't know what the best term is. But basically, instead of thinking about it as like a plug-in for a source, we",
    "start": "1230375",
    "end": "1237208"
  },
  {
    "text": "can think of it more as like the source is just",
    "start": "1237208",
    "end": "1242416"
  },
  {
    "text": "responsible for pulling the document and adding whatever metadata is related to the source.",
    "start": "1242541",
    "end": "1247958"
  },
  {
    "text": "And then what we're currently calling plug-ins could be like syncs for a source.",
    "start": "1249583",
    "end": "1256750"
  },
  {
    "text": "Do you know what I mean? And what's cool about that kind of idea is like let's say we have",
    "start": "1258166",
    "end": "1264083"
  },
  {
    "text": "a Markdown sync where we-- or something like that where we take the file system",
    "start": "1264083",
    "end": "1270125"
  },
  {
    "text": "source of a transformer to Markdown. You could also have another sync that's doing some other work on those Markdown documents",
    "start": "1270125",
    "end": "1275916"
  },
  {
    "text": "that you get from the file system. And in addition, you could like pipe the source",
    "start": "1276166",
    "end": "1283000"
  },
  {
    "text": "through transformers, which would be like the equivalent of plug-ins. And then the sync would receive to output",
    "start": "1283166",
    "end": "1289583"
  },
  {
    "text": "the final information. I don't know if any of that makes any sense.",
    "start": "1289583",
    "end": "1295458"
  },
  {
    "text": "But I think that decoupling the source from the destination",
    "start": "1295708",
    "end": "1300375"
  },
  {
    "text": "feels like the right thing to me. What do you think?",
    "start": "1301208",
    "end": "1304208"
  },
  {
    "text": "I think-- I'm not sure if sync is the right abstraction.",
    "start": "1309250",
    "end": "1314333"
  },
  {
    "text": "sync, not like the effect sync, more just like sync as like a destination.",
    "start": "1315916",
    "end": "1320250"
  },
  {
    "text": "Destination. Because like the source is",
    "start": "1324791",
    "end": "1329916"
  },
  {
    "text": "going to read like your Markdown from like the file system, or it could also potentially",
    "start": "1329916",
    "end": "1334583"
  },
  {
    "text": "read Markdown from like a CMS in the future, right? The source gets the documents.",
    "start": "1334958",
    "end": "1341416"
  },
  {
    "text": "But then we have to have something that takes those documents and turns them",
    "start": "1342458",
    "end": "1347500"
  },
  {
    "text": "into something consumable.",
    "start": "1347500",
    "end": "1351375"
  },
  {
    "text": "Yes, this could be CMS.",
    "start": "1352625",
    "end": "1359958"
  },
  {
    "text": "Do you think the additional field of plug-ins? Maybe.",
    "start": "1372083",
    "end": "1376333"
  },
  {
    "text": "I'm not exactly sure like what the best way to think about it",
    "start": "1384083",
    "end": "1389916"
  },
  {
    "text": "or to do this is. But I'm just thinking",
    "start": "1390125",
    "end": "1395666"
  },
  {
    "text": "that the end result, if we think about what the end result of the current version",
    "start": "1395666",
    "end": "1401833"
  },
  {
    "text": "of content layer is, the end result of content layer as it stands currently",
    "start": "1401833",
    "end": "1407375"
  },
  {
    "text": "is essentially like JSON.",
    "start": "1407375",
    "end": "1414166"
  },
  {
    "text": "It's JSON. It's these. Yeah, it's JSON. These are the same fields. The JSON, the computed",
    "start": "1414666",
    "end": "1421083"
  },
  {
    "text": "fields, and the Markdown that you need to render.",
    "start": "1421083",
    "end": "1426166"
  },
  {
    "text": "And if it's MDX, that's the MDX, right? It's the body. I think it does add metadata, but I can't",
    "start": "1426375",
    "end": "1435791"
  },
  {
    "text": "remember what it is. It does add some metadata depending",
    "start": "1435791",
    "end": "1441375"
  },
  {
    "text": "on what source you've used. So the file system",
    "start": "1441541",
    "end": "1447666"
  },
  {
    "text": "source has path information that you get access to.",
    "start": "1447666",
    "end": "1453875"
  },
  {
    "text": "Let's look at the picked website. Is it blog?",
    "start": "1454708",
    "end": "1459708"
  },
  {
    "text": "It's under-- yeah, the all-- are you looking for the output or are you",
    "start": "1460791",
    "end": "1465958"
  },
  {
    "text": "just looking for documents? Yeah. Or the schemas.",
    "start": "1465958",
    "end": "1469875"
  },
  {
    "text": "My current project isn't built. It's probably not a good idea.",
    "start": "1471208",
    "end": "1475625"
  },
  {
    "text": "Yeah. I don't want to build it because it takes ages.",
    "start": "1478916",
    "end": "1482291"
  },
  {
    "text": "Plugins.",
    "start": "1487833",
    "end": "1488208"
  },
  {
    "text": "Yeah, just need to think about how we go from source to fields.",
    "start": "1497333",
    "end": "1502958"
  },
  {
    "text": "And maybe in the first",
    "start": "1504041",
    "end": "1509291"
  },
  {
    "text": "version that we're designing here, maybe the best thing to do is to have one source, one",
    "start": "1509291",
    "end": "1515166"
  },
  {
    "text": "destination. Do you know what I mean? So what you have here is",
    "start": "1515166",
    "end": "1520750"
  },
  {
    "text": "probably good enough for us to start with where the Remark plugin here",
    "start": "1520750",
    "end": "1527375"
  },
  {
    "text": "is the thing that actually will take whatever it gets",
    "start": "1531583",
    "end": "1537833"
  },
  {
    "text": "and output to the file system. But yeah, I think--",
    "start": "1537833",
    "end": "1546041"
  },
  {
    "text": "We probably want to add-- like, for the picked website, we also add the Remark plugins",
    "start": "1546041",
    "end": "1553208"
  },
  {
    "text": "or passing the code blocks and stuff.",
    "start": "1554791",
    "end": "1556500"
  },
  {
    "text": "So we'll probably need to work out how that works too. It's important.",
    "start": "1560500",
    "end": "1563833"
  },
  {
    "text": "But if we try to get this working just for front",
    "start": "1567583",
    "end": "1574250"
  },
  {
    "text": "meta in the Markdown body, I think it's a good start.",
    "start": "1574291",
    "end": "1579333"
  },
  {
    "text": "I agree. I think we need to do a little research.",
    "start": "1580708",
    "end": "1587375"
  },
  {
    "text": "And we also probably need to do a little research into Remark and Rehype plugins. Because I think the",
    "start": "1587958",
    "end": "1593083"
  },
  {
    "text": "current version of Content Layer supports all three Mark and Rehype plugins.",
    "start": "1593083",
    "end": "1599125"
  },
  {
    "text": "Yeah, Rehype or go into HTML or Sera. I think so.",
    "start": "1601125",
    "end": "1606166"
  },
  {
    "text": "Rehype is a tool that transforms HTML with plugins.",
    "start": "1612541",
    "end": "1616083"
  },
  {
    "text": "These plugins can inspect and change the HTML. Yeah.",
    "start": "1617750",
    "end": "1622875"
  },
  {
    "text": "And then Remark, I'm assuming, is the Markdown.",
    "start": "1624041",
    "end": "1626750"
  },
  {
    "text": "Markdown processor. I'm going to go Remark.",
    "start": "1632291",
    "end": "1637916"
  },
  {
    "text": "I feel like in the",
    "start": "1640625",
    "end": "1651625"
  },
  {
    "text": "effect website, Remark, we're not rendering to HTML, but we're",
    "start": "1651625",
    "end": "1657291"
  },
  {
    "text": "using a React component that doesn't.",
    "start": "1657291",
    "end": "1660791"
  },
  {
    "text": "I don't know. Let me look.",
    "start": "1668875",
    "end": "1670333"
  },
  {
    "text": "Website. blog.",
    "start": "1674666",
    "end": "1677541"
  },
  {
    "text": "blog. Page. Yeah, the slug page is",
    "start": "1682583",
    "end": "1688708"
  },
  {
    "text": "probably what we want. Open.",
    "start": "1688708",
    "end": "1692833"
  },
  {
    "text": "Yeah, we're using MDX. Yeah, so all of our posts on the effect website",
    "start": "1694208",
    "end": "1700958"
  },
  {
    "text": "are MDX, right? Most of them. Yeah. And so we-- yeah, I think",
    "start": "1701125",
    "end": "1708083"
  },
  {
    "text": "are just taking the output. Because Content Layer generates MDX code.",
    "start": "1708083",
    "end": "1713041"
  },
  {
    "text": "And then we just take it and output it. And use MDX component. What is that?",
    "start": "1714666",
    "end": "1719333"
  },
  {
    "text": "Content is a string.",
    "start": "1720208",
    "end": "1721125"
  },
  {
    "text": "Get MDX component. What's get MDX component?",
    "start": "1732750",
    "end": "1735500"
  },
  {
    "text": "We'll take a look at the website configuration.",
    "start": "1768583",
    "end": "1771291"
  },
  {
    "text": "Next, Content Layer. Hello.",
    "start": "1778583",
    "end": "1781458"
  },
  {
    "text": "Where is the actual body of the post upfront here?",
    "start": "1800875",
    "end": "1805041"
  },
  {
    "text": "Is it just automatically added? Yeah, the body is",
    "start": "1806458",
    "end": "1813125"
  },
  {
    "text": "automatically added by Content Layer currently. OK.",
    "start": "1813125",
    "end": "1815916"
  },
  {
    "text": "I'm just looking at what this all these hooks do.",
    "start": "1823208",
    "end": "1825916"
  },
  {
    "text": "Yeah, I guess next Content Layer is doing some stuff to take the code string and",
    "start": "1865000",
    "end": "1871833"
  },
  {
    "text": "output it as an MDX component. But the current version of",
    "start": "1871833",
    "end": "1882916"
  },
  {
    "text": "the website, the effect website.",
    "start": "1882916",
    "end": "1891958"
  },
  {
    "text": "If I look at the generated code for a blog, for example.",
    "start": "1897166",
    "end": "1901083"
  },
  {
    "text": "Yeah, the body of the generated Content",
    "start": "1905375",
    "end": "1912250"
  },
  {
    "text": "Layer code, for example. The body has the raw MDX. And then there's a body",
    "start": "1912250",
    "end": "1920458"
  },
  {
    "text": "field that has a raw field, which is just the raw content of the file. And then there's a code field, which",
    "start": "1920458",
    "end": "1926458"
  },
  {
    "text": "is like the compiled bundled MDX, transformed to JavaScript.",
    "start": "1926458",
    "end": "1934125"
  },
  {
    "text": "So the latch, it's the body field.",
    "start": "1938833",
    "end": "1944375"
  },
  {
    "text": "Yeah, so that--",
    "start": "1945750",
    "end": "1951125"
  },
  {
    "text": "The limited data fields are just prefixes.",
    "start": "1951375",
    "end": "1954333"
  },
  {
    "text": "Yeah, I mean, we don't necessarily have to follow this structure. But I think that at a minimum, we",
    "start": "1966083",
    "end": "1976958"
  },
  {
    "text": "have to output all of the fields that we define,",
    "start": "1976958",
    "end": "1983083"
  },
  {
    "text": "both like the regular static fields and the computed fields.",
    "start": "1983166",
    "end": "1986541"
  },
  {
    "text": "And we also need to",
    "start": "1988833",
    "end": "1995333"
  },
  {
    "text": "probably emit the source metadata somehow, if we can.",
    "start": "1995333",
    "end": "1999250"
  },
  {
    "text": "Maybe if we rework the source of it then.",
    "start": "2005791",
    "end": "2012375"
  },
  {
    "text": "We don't have-- The stream is still OK. But the output of the stream, maybe",
    "start": "2012750",
    "end": "2018041"
  },
  {
    "text": "if we go back to a plain object.",
    "start": "2018166",
    "end": "2019875"
  },
  {
    "text": "Let me update. content meta",
    "start": "2024791",
    "end": "2026958"
  },
  {
    "text": "Every source should kind of output a similar-- all the same structure, I guess.",
    "start": "2032416",
    "end": "2037083"
  },
  {
    "text": "It should output the same structure, but the metadata that the source provides can be different, right?",
    "start": "2041666",
    "end": "2047416"
  },
  {
    "text": "Because for the file system source, for example, you get file system information.",
    "start": "2050666",
    "end": "2055833"
  },
  {
    "text": "But for a CMS source, you might get other things.",
    "start": "2057791",
    "end": "2060666"
  },
  {
    "text": "So I feel like maybe a source--",
    "start": "2064916",
    "end": "2068625"
  },
  {
    "text": "Like a source should always--",
    "start": "2104708",
    "end": "2106250"
  },
  {
    "text": "On the website, it had a bunch of metadata fields.",
    "start": "2156958",
    "end": "2164208"
  },
  {
    "text": "What was that again?",
    "start": "2164666",
    "end": "2165166"
  },
  {
    "text": "For the file system source, you get stuff about the file",
    "start": "2171083",
    "end": "2176333"
  },
  {
    "text": "systems, like the source file path, source file name, source file directory, the content type,",
    "start": "2176416",
    "end": "2182875"
  },
  {
    "text": "and then the flattened path. Although, I don't",
    "start": "2182875",
    "end": "2188250"
  },
  {
    "text": "particularly like any of those names.",
    "start": "2188250",
    "end": "2190250"
  },
  {
    "text": "I guess-- I feel like we did use some of those.",
    "start": "2200166",
    "end": "2205041"
  },
  {
    "text": "We do in the computed fields. But if you look at the implementation I had had for the computed fields previously,",
    "start": "2206458",
    "end": "2212000"
  },
  {
    "text": "in the source-- the file system source that you provide--",
    "start": "2213250",
    "end": "2219458"
  },
  {
    "text": "Yeah. Is able to forward those fields along to",
    "start": "2219958",
    "end": "2225375"
  },
  {
    "text": "the computed fields. So one of them is ID.",
    "start": "2225375",
    "end": "2229666"
  },
  {
    "text": "We are using these paths and things to generate the slugs somewhere.",
    "start": "2234083",
    "end": "2239291"
  },
  {
    "text": "But I feel like they should be computed fields anyway.",
    "start": "2240125",
    "end": "2245625"
  },
  {
    "text": "Maybe if I just quickly search the project to see if we're using these.",
    "start": "2251125",
    "end": "2257500"
  },
  {
    "text": "I wonder if-- We're using it for like, navigation of fields, or critical resource fields.",
    "start": "2261750",
    "end": "2266791"
  },
  {
    "text": "I wonder if the-- if a source--",
    "start": "2267625",
    "end": "2273208"
  },
  {
    "text": "like, in the way I had originally defined a source, even though it was kind of dumb, it was able to--",
    "start": "2277875",
    "end": "2286958"
  },
  {
    "text": "it defined the stuff that it was going to emit.",
    "start": "2287166",
    "end": "2292083"
  },
  {
    "text": "Do you know what I mean? So like-- Yeah. When you specify-- when I specified file",
    "start": "2293875",
    "end": "2299208"
  },
  {
    "text": "system source, for example, it defined, oh, I'm going",
    "start": "2299208",
    "end": "2305208"
  },
  {
    "text": "to emit into whatever result. I'm going to emit my path name, file",
    "start": "2305208",
    "end": "2312291"
  },
  {
    "text": "name, blah, blah, blah, blah, blah. So instead of like, ID",
    "start": "2312291",
    "end": "2319250"
  },
  {
    "text": "and raw and all of this, I wonder if we should emit under a key called source meta,",
    "start": "2319250",
    "end": "2325708"
  },
  {
    "text": "or just source. Yeah.",
    "start": "2329500",
    "end": "2331833"
  },
  {
    "text": "Do you know what I mean? yeah. So we kind of have",
    "start": "2336500",
    "end": "2342583"
  },
  {
    "text": "like two parts of output there's like the metadata and then the fields.",
    "start": "2342583",
    "end": "2346750"
  },
  {
    "text": "And the fields is just a record of string, unknown",
    "start": "2350666",
    "end": "2358291"
  },
  {
    "text": "And then the metadata-- content-- this isn't",
    "start": "2363625",
    "end": "2368750"
  },
  {
    "text": "really meta, it's content. Like source meta, it's not really content meta, right?",
    "start": "2368750",
    "end": "2373916"
  },
  {
    "text": "So this is just a way--",
    "start": "2376333",
    "end": "2380291"
  },
  {
    "text": "well, the source provides a way of reading the content.",
    "start": "2381625",
    "end": "2384375"
  },
  {
    "text": "And currently it's lazy. So it only reads the content at the point",
    "start": "2389291",
    "end": "2396958"
  },
  {
    "text": "where it's necessary. But I feel like content meta isn't the right name for it.",
    "start": "2396958",
    "end": "2405250"
  },
  {
    "text": "Maybe it should just be called content.",
    "start": "2408000",
    "end": "2410458"
  },
  {
    "text": "Source content.",
    "start": "2414208",
    "end": "2414958"
  },
  {
    "text": "And source meta. Yeah, because like I",
    "start": "2421083",
    "end": "2426916"
  },
  {
    "text": "think you were onto something before when you said there's basically two things where you need to emit.",
    "start": "2426916",
    "end": "2431833"
  },
  {
    "text": "There's the metadata that the source is providing. And then there's the fields, both like the static fields",
    "start": "2432125",
    "end": "2438250"
  },
  {
    "text": "and the computed fields, right? So when we emit that like JSON result,",
    "start": "2438250",
    "end": "2443375"
  },
  {
    "text": "I almost feel like we could have literally-- there's technically a third field, right? The actual body of",
    "start": "2444083",
    "end": "2451416"
  },
  {
    "text": "whatever we've generated, which could probably go under source metadata. But the two main things we generate",
    "start": "2451416",
    "end": "2460833"
  },
  {
    "text": "are like besides the actual content, whatever we're generating in terms of like fields,",
    "start": "2460833",
    "end": "2466208"
  },
  {
    "text": "it's the source metadata and the source",
    "start": "2467500",
    "end": "2473375"
  },
  {
    "text": "metadata in the fields. This metadata will be different depending on the source use.",
    "start": "2473500",
    "end": "2480416"
  },
  {
    "text": "So you don't have a file",
    "start": "2483583",
    "end": "2491041"
  },
  {
    "text": "directory for CMS usually. I agree. That's why I think the source should define the metadata",
    "start": "2491041",
    "end": "2497916"
  },
  {
    "text": "that it provides to the result. Do you know what I mean? So like when you plug a",
    "start": "2497916",
    "end": "2505083"
  },
  {
    "text": "source onto a document, the document now knows, OK, in my result I'm going to have XYZ pieces of metadata.",
    "start": "2505083",
    "end": "2513708"
  },
  {
    "text": "If I go to the tutorials page, there",
    "start": "2516833",
    "end": "2528250"
  },
  {
    "text": "was a place where these fields were used.",
    "start": "2530875",
    "end": "2533333"
  },
  {
    "text": "Is this typed? Any-- any-- yes.",
    "start": "2538166",
    "end": "2544000"
  },
  {
    "text": "So the types are generated separately.",
    "start": "2547833",
    "end": "2554916"
  },
  {
    "text": "And the types-- The raw document data. Some of the types are actually invalid as well.",
    "start": "2556708",
    "end": "2562083"
  },
  {
    "text": "For example, in some of the-- some of the documents that are emit, there's like a JSON type, which actually doesn't exist.",
    "start": "2564458",
    "end": "2570625"
  },
  {
    "text": "Yes, I guess here the top is assuming that it's always going to be a file system document.",
    "start": "2573041",
    "end": "2580458"
  },
  {
    "text": "It depends on the source plugin you plug into content layer. OK.",
    "start": "2581625",
    "end": "2586125"
  },
  {
    "text": "The types are generated at runtime as well.",
    "start": "2587041",
    "end": "2590083"
  },
  {
    "text": "Sorry, the types are generated at build time. Right.",
    "start": "2596083",
    "end": "2599708"
  },
  {
    "text": "So I feel like a source also needs some kind of generic--",
    "start": "2601583",
    "end": "2606625"
  },
  {
    "text": "or so we can infer the metadata structure.",
    "start": "2609083",
    "end": "2614250"
  },
  {
    "text": "I agree. What do we got here?",
    "start": "2615791",
    "end": "2618875"
  },
  {
    "text": "So the meta-- that metadata, I think, was the original piece that I had put in there,",
    "start": "2623333",
    "end": "2628125"
  },
  {
    "text": "where in my original sort-- like, again, my source was really dumb.",
    "start": "2629333",
    "end": "2634083"
  },
  {
    "text": "But I had a way to infer the meta, at least in the computed fields.",
    "start": "2634833",
    "end": "2639250"
  },
  {
    "text": "I hadn't gotten to the point of like-- Yes. How that fits into the document, but--",
    "start": "2640791",
    "end": "2645083"
  },
  {
    "text": "but the document, I think, tracks its source on the type level. So you could theoretically extract all of the type",
    "start": "2649958",
    "end": "2656250"
  },
  {
    "text": "information you need.",
    "start": "2656333",
    "end": "2657250"
  },
  {
    "text": "OK.",
    "start": "2662458",
    "end": "2663125"
  },
  {
    "text": "OK. Output fields.",
    "start": "2669875",
    "end": "2676166"
  },
  {
    "text": "And output fields is what will go to the actual fields",
    "start": "2682666",
    "end": "2689666"
  },
  {
    "text": "of our document.",
    "start": "2689875",
    "end": "2691208"
  },
  {
    "text": "Still doesn't feel quite right. I'll just throw a bit for now",
    "start": "2724000",
    "end": "2726875"
  },
  {
    "text": "files system meta",
    "start": "2730083",
    "end": "2731208"
  },
  {
    "text": "So the things that are useful--",
    "start": "2738000",
    "end": "2739708"
  },
  {
    "text": "path, name, directory, content type.",
    "start": "2743083",
    "end": "2751125"
  },
  {
    "text": "What is flattened path? path it's removed. and index it's removed.",
    "start": "2755791",
    "end": "2761000"
  },
  {
    "text": "I don't think we should put flattened path in there, but it's just me.",
    "start": "2765541",
    "end": "2769666"
  },
  {
    "text": "I think we should mimic almost the structure of path.parse.",
    "start": "2771625",
    "end": "2775500"
  },
  {
    "text": "Do you know what I mean? Like a parsed path? A node.js parse.",
    "start": "2780041",
    "end": "2786916"
  },
  {
    "text": "Node.js parsed path. OK.",
    "start": "2788083",
    "end": "2791208"
  },
  {
    "text": "Like if you want to see what the type looks like, I don't know if you've seen it, but if",
    "start": "2793375",
    "end": "2799000"
  },
  {
    "text": "you just import path, we can take a look at the type.",
    "start": "2799000",
    "end": "2805000"
  },
  {
    "text": "You can see if you think I'm nuts.",
    "start": "2805666",
    "end": "2807875"
  },
  {
    "text": "Yeah, so you get the root, the directory, the base, the extension, and the name.",
    "start": "2812791",
    "end": "2818250"
  },
  {
    "text": "So that basically gives us all the pieces.",
    "start": "2819708",
    "end": "2823583"
  },
  {
    "text": "OK. How about parse as a better equals--",
    "start": "2825208",
    "end": "2833458"
  },
  {
    "text": "we want to add the full path and the info.",
    "start": "2836750",
    "end": "2839125"
  },
  {
    "text": "Do we want the info in there? At some point, we're going to need this for caching and stuff.",
    "start": "2842333",
    "end": "2851833"
  },
  {
    "text": "Because we want to know when things are modified or not.",
    "start": "2853958",
    "end": "2857458"
  },
  {
    "text": "Is that how it works in content layer? It's cached based on the",
    "start": "2859125",
    "end": "2864666"
  },
  {
    "text": "hash of the document's content. OK. I think. Oh, no.",
    "start": "2864666",
    "end": "2869750"
  },
  {
    "text": "Wait. No, no. It's cached. Wait. Wait, check.",
    "start": "2869750",
    "end": "2874583"
  },
  {
    "text": "So-- no, I was wrong. It's cached based on the hash of the",
    "start": "2883125",
    "end": "2891166"
  },
  {
    "text": "content layer configuration file, I think. Which is not-- we want",
    "start": "2891166",
    "end": "2897416"
  },
  {
    "text": "to do better, basically.",
    "start": "2897416",
    "end": "2898333"
  },
  {
    "text": "So the mtime is fine with me, but there may not technically be-- trying to think here.",
    "start": "2903500",
    "end": "2917750"
  },
  {
    "text": "The string hash in effect is deterministic, right?",
    "start": "2933916",
    "end": "2937333"
  },
  {
    "text": "String hash is deterministic. Yeah, so the hash module",
    "start": "2940125",
    "end": "2946208"
  },
  {
    "text": "always returns the same number for the same string. Is that what you mean? Yeah.",
    "start": "2946208",
    "end": "2950875"
  },
  {
    "text": "So we could do-- we don't necessarily need",
    "start": "2952000",
    "end": "2957125"
  },
  {
    "text": "the file info then for caching purposes, because we could just do the",
    "start": "2957125",
    "end": "2962208"
  },
  {
    "text": "hash of the file content.",
    "start": "2962208",
    "end": "2963500"
  },
  {
    "text": "And we might get collisions once in a while, but-- well, we could use mtime as well. It doesn't matter.",
    "start": "2967916",
    "end": "2972958"
  },
  {
    "text": "Just wondering how we would extract the",
    "start": "2991000",
    "end": "2998791"
  },
  {
    "text": "shape of the metadata depending on the source.",
    "start": "2998791",
    "end": "3001416"
  },
  {
    "text": "So this will be the shape of the meta field.",
    "start": "3007750",
    "end": "3012125"
  },
  {
    "text": "We'll just need to add it to the new instruction then.",
    "start": "3022166",
    "end": "3026291"
  },
  {
    "text": "I'm doing a generally generic tag. it's not a bad idea",
    "start": "3069500",
    "end": "3074000"
  },
  {
    "text": "Let's see how it goes.",
    "start": "3087416",
    "end": "3089791"
  },
  {
    "text": "The mode is kind of stumbling.",
    "start": "3096458",
    "end": "3101000"
  },
  {
    "text": "Yeah, I mean-- Something that works. I mean, I think that--",
    "start": "3104583",
    "end": "3109750"
  },
  {
    "text": "So I'm just trying to think if context is still",
    "start": "3118916",
    "end": "3124625"
  },
  {
    "text": "the right abstraction for a source like this.",
    "start": "3124625",
    "end": "3131416"
  },
  {
    "text": "Because let's say that--",
    "start": "3133916",
    "end": "3137041"
  },
  {
    "text": "we're saying that a source is going to have metadata. And it's going to",
    "start": "3139125",
    "end": "3150083"
  },
  {
    "text": "produce output fields, which include that metadata. So it's taking a full step back.",
    "start": "3150083",
    "end": "3166000"
  },
  {
    "text": "A source does not care about the documents fields.",
    "start": "3167916",
    "end": "3172708"
  },
  {
    "text": "It only cares about its own metadata. When you read a source, it pulls in the--",
    "start": "3175208",
    "end": "3183916"
  },
  {
    "text": "obviously the source-- and gets the metadata associated with that source. So as you read files in, you get the",
    "start": "3184625",
    "end": "3191666"
  },
  {
    "text": "content of that file plus the associated metadata, right?",
    "start": "3191666",
    "end": "3194958"
  },
  {
    "text": "The document fields are added by validating the document",
    "start": "3198875",
    "end": "3205166"
  },
  {
    "text": "schema against the document and done it at a separate point. So I almost think that",
    "start": "3205208",
    "end": "3213291"
  },
  {
    "text": "the source doesn't need to know anything about the fields.",
    "start": "3213291",
    "end": "3216458"
  },
  {
    "text": "All it needs to know about is its own meta. I try to figure the source is the source of information",
    "start": "3218500",
    "end": "3228041"
  },
  {
    "text": "for these fields, not rather than just where the content was.",
    "start": "3228791",
    "end": "3236708"
  },
  {
    "text": "I mean, the root level of",
    "start": "3240291",
    "end": "3248041"
  },
  {
    "text": "the source, which is this file system, doesn't care about fields.",
    "start": "3248041",
    "end": "3251625"
  },
  {
    "text": "Well, somewhere we need to put these plugins, whether it's in a separate thing under source,",
    "start": "3260333",
    "end": "3273125"
  },
  {
    "text": "or whether it's part of the document source.",
    "start": "3273666",
    "end": "3278541"
  },
  {
    "text": "I mean, either of those is owned by me.",
    "start": "3279916",
    "end": "3286083"
  },
  {
    "text": "But plugins should be able to access,",
    "start": "3292583",
    "end": "3299125"
  },
  {
    "text": "no matter where they are in the stack, the original information, or the original",
    "start": "3300791",
    "end": "3308458"
  },
  {
    "text": "content, if possible. Yeah, I think the current",
    "start": "3308458",
    "end": "3314458"
  },
  {
    "text": "version of Content Layer-- if we're talking specifically, again, if we just scope it down to just mark down for a minute,",
    "start": "3314458",
    "end": "3319250"
  },
  {
    "text": "the current version of Content Layer has some default unified stuff that it adds, I think.",
    "start": "3320125",
    "end": "3326208"
  },
  {
    "text": "I'm pretty sure. The stuff to basically transform the markdown, whatever.",
    "start": "3326791",
    "end": "3332500"
  },
  {
    "text": "And then you can specify additional plugins. But the defaults for markdown files",
    "start": "3332791",
    "end": "3337916"
  },
  {
    "text": "is to basically parse it into a format that the document can then handle.",
    "start": "3338083",
    "end": "3341916"
  },
  {
    "text": "It would be not, it's generic. Yes, I would just be like, metadata.",
    "start": "3359375",
    "end": "3365875"
  },
  {
    "text": "Yeah, because I think in the",
    "start": "3368625",
    "end": "3374583"
  },
  {
    "text": "implementation of source that I had worked on when I wasn't using context, and was, again, just considering source,",
    "start": "3374583",
    "end": "3381041"
  },
  {
    "text": "a document source not associated with fields, metadata was a generic on source,",
    "start": "3381750",
    "end": "3387875"
  },
  {
    "text": "or meta was a generic on source. And then different specific sources,",
    "start": "3388166",
    "end": "3394666"
  },
  {
    "text": "like the file system source, extended the file system meta.",
    "start": "3394666",
    "end": "3399833"
  },
  {
    "text": "And then you could use that file system",
    "start": "3401541",
    "end": "3406916"
  },
  {
    "text": "source to extract the metadata, basically. But with context in the mix, it does",
    "start": "3406916",
    "end": "3412541"
  },
  {
    "text": "become a little bit difficult.",
    "start": "3412833",
    "end": "3414000"
  },
  {
    "text": "Maybe if we have-- maybe",
    "start": "3420541",
    "end": "3429708"
  },
  {
    "text": "if we define a wrapper top,",
    "start": "3429708",
    "end": "3435750"
  },
  {
    "text": "interface output, then that's going to",
    "start": "3438583",
    "end": "3448500"
  },
  {
    "text": "have its own property,",
    "start": "3448500",
    "end": "3452291"
  },
  {
    "text": "where you need to know, so we're all not. Or that's sure cool.",
    "start": "3466333",
    "end": "3473375"
  },
  {
    "text": "So all sappered. Thank you. Come on up.",
    "start": "3473375",
    "end": "3481041"
  },
  {
    "text": "And then",
    "start": "3485041",
    "end": "3486791"
  },
  {
    "text": "it's gonna be on here.",
    "start": "3492625",
    "end": "3493666"
  },
  {
    "text": "And then we can move our content here.",
    "start": "3502666",
    "end": "3510666"
  },
  {
    "text": "And then we can add up and down.",
    "start": "3534750",
    "end": "3541041"
  },
  {
    "text": "And then a source would just be",
    "start": "3545916",
    "end": "3556416"
  },
  {
    "text": "a stream of these output things.",
    "start": "3560666",
    "end": "3566500"
  },
  {
    "text": "There is a source of provided.",
    "start": "3578750",
    "end": "3580416"
  },
  {
    "text": "Let's see how that sticks.",
    "start": "3584416",
    "end": "3585333"
  },
  {
    "text": "And a file system source, I think we can get a release now.",
    "start": "3592125",
    "end": "3596125"
  },
  {
    "text": "And this can just be a plain interface",
    "start": "3600166",
    "end": "3602541"
  },
  {
    "text": "that extends the past path that we mentioned earlier.",
    "start": "3605208",
    "end": "3613375"
  },
  {
    "text": "It's the full path in the file name.",
    "start": "3613375",
    "end": "3620000"
  },
  {
    "text": "Come, let's set our class.",
    "start": "3620875",
    "end": "3622791"
  },
  {
    "text": "There we are a source that outputs file system in it.",
    "start": "3632125",
    "end": "3637208"
  },
  {
    "text": "This contains effectful stuff.",
    "start": "3662750",
    "end": "3667000"
  },
  {
    "text": "It can't be a schema.",
    "start": "3668250",
    "end": "3669791"
  },
  {
    "text": "We just add a constructor file.",
    "start": "3675458",
    "end": "3676958"
  },
  {
    "text": "It's a convenient way of making an output object.",
    "start": "3687791",
    "end": "3691333"
  },
  {
    "text": "So far I like this approach more than the previous.",
    "start": "3693833",
    "end": "3698583"
  },
  {
    "text": "And options would just be this.",
    "start": "3703291",
    "end": "3707500"
  },
  {
    "text": "This is like more similar to like what I had originally had which I think it'll make it easier to,",
    "start": "3715375",
    "end": "3720125"
  },
  {
    "text": "I think it'll make it easier. I also am starting to understand what you were saying about thinking about the source as a",
    "start": "3723708",
    "end": "3730083"
  },
  {
    "text": "source for the fields. Because if we're basically creating a stream of these like output objects,",
    "start": "3730083",
    "end": "3738208"
  },
  {
    "text": "then it starts to make a little more sense. What you were saying before about like having the source",
    "start": "3740416",
    "end": "3745916"
  },
  {
    "text": "be a literally a source for the fields rather than just a source of documents.",
    "start": "3746083",
    "end": "3750500"
  },
  {
    "text": "Yeah, I think we have a replying need here.",
    "start": "3753916",
    "end": "3756500"
  },
  {
    "text": "To build output. We'll just copy this there.",
    "start": "3763041",
    "end": "3769500"
  },
  {
    "text": "What are we missing? We need to spread in the passed path.",
    "start": "3776291",
    "end": "3783833"
  },
  {
    "text": "That we pull in the path service here.",
    "start": "3788208",
    "end": "3792125"
  },
  {
    "text": "What is imported is a tile. Okay.",
    "start": "3798166",
    "end": "3801958"
  },
  {
    "text": "So here we would go after pass.",
    "start": "3804166",
    "end": "3806250"
  },
  {
    "text": "It's the full path in name.",
    "start": "3811541",
    "end": "3813083"
  },
  {
    "text": "What was it saying? Path does not exist.",
    "start": "3832166",
    "end": "3834750"
  },
  {
    "text": "Only. Of course.",
    "start": "3841416",
    "end": "3845250"
  },
  {
    "text": "So this is going in the meta field.",
    "start": "3846958",
    "end": "3848916"
  },
  {
    "text": "We want to see. So in this stage, we would have no fields.",
    "start": "3858583",
    "end": "3862750"
  },
  {
    "text": "And we don't need this anymore.",
    "start": "3868958",
    "end": "3870708"
  },
  {
    "text": "Yeah, because we can determine the caching strategy later.",
    "start": "3880000",
    "end": "3883416"
  },
  {
    "text": "It's a problem for tomorrow, Max and Tim.",
    "start": "3889625",
    "end": "3892125"
  },
  {
    "text": "Okay.",
    "start": "3895041",
    "end": "3895208"
  },
  {
    "text": "Saying that the error type is never. That shouldn't be a problem.",
    "start": "3923666",
    "end": "3929458"
  },
  {
    "text": "Is it supposed to be never?",
    "start": "3932333",
    "end": "3934333"
  },
  {
    "text": "Source. Oh, yeah, I didn't specify.",
    "start": "3939791",
    "end": "3944583"
  },
  {
    "text": "The error here. Content layer error. Great.",
    "start": "3946250",
    "end": "3950125"
  },
  {
    "text": "Nice. All right, if we...",
    "start": "3953375",
    "end": "3955583"
  },
  {
    "text": "Try that. See what happens.",
    "start": "3960458",
    "end": "3963875"
  },
  {
    "text": "It's kind of confusing because you have like the CLI, but then you also have the config.",
    "start": "3973625",
    "end": "3980916"
  },
  {
    "text": "So it's kind of like two levels. We have some build",
    "start": "3981791",
    "end": "3988000"
  },
  {
    "text": "errors in plugin there, which makes sense.",
    "start": "3988000",
    "end": "3993916"
  },
  {
    "text": "So instead of output, we'll just be adding things to the field.",
    "start": "3998625",
    "end": "4002875"
  },
  {
    "text": "Our plugin should probably now import source module.",
    "start": "4008125",
    "end": "4012333"
  },
  {
    "text": "So now our unified plugin,",
    "start": "4038500",
    "end": "4044916"
  },
  {
    "text": "I guess I'll just add some fields now.",
    "start": "4045208",
    "end": "4050958"
  },
  {
    "text": "We'll add a body field from the value and spread in the front meta.",
    "start": "4052625",
    "end": "4060041"
  },
  {
    "text": "What we do here, we're building the unified processor.",
    "start": "4067416",
    "end": "4071416"
  },
  {
    "text": "And then for each output in the source,",
    "start": "4073083",
    "end": "4078208"
  },
  {
    "text": "we are grabbing the content and processing it.",
    "start": "4085791",
    "end": "4089333"
  },
  {
    "text": "We already named that to output.",
    "start": "4093416",
    "end": "4097750"
  },
  {
    "text": "I think at the top of your method, you need source.source.",
    "start": "4103750",
    "end": "4107500"
  },
  {
    "text": "So we've got the output here, which is the unified output.",
    "start": "4113791",
    "end": "4119041"
  },
  {
    "text": "Source.make output.",
    "start": "4119708",
    "end": "4124333"
  },
  {
    "text": "Probably what we'll want to do is, maybe, I don't know if this makes sense",
    "start": "4128833",
    "end": "4134666"
  },
  {
    "text": "to keep cloning the output for every plugin, but well, I guess it's",
    "start": "4134666",
    "end": "4141500"
  },
  {
    "text": "not that big of a deal. Yeah, I don't think that it's not cloning",
    "start": "4141500",
    "end": "4146458"
  },
  {
    "text": "the content itself.",
    "start": "4146750",
    "end": "4147958"
  },
  {
    "text": "But in this case, I guess we'll just be adding fields.",
    "start": "4152708",
    "end": "4155333"
  },
  {
    "text": "Fields, and then we'll add, maybe we could add some like,",
    "start": "4158875",
    "end": "4163583"
  },
  {
    "text": "helper methods to make content easier to work with.",
    "start": "4165208",
    "end": "4167708"
  },
  {
    "text": "And then, yeah,",
    "start": "4209500",
    "end": "4213666"
  },
  {
    "text": "read OutputTypeID",
    "start": "4216083",
    "end": "4217208"
  },
  {
    "text": "And now we can add some helpers like",
    "start": "4222625",
    "end": "4227500"
  },
  {
    "text": "add field.",
    "start": "4231000",
    "end": "4231500"
  },
  {
    "text": "Thank you, Chat GPT.",
    "start": "4244375",
    "end": "4245291"
  },
  {
    "text": "I think you need to spread fields. Yeah, we do.",
    "start": "4257666",
    "end": "4261000"
  },
  {
    "text": "Thank you, Max. Thank you, Chat GPT.",
    "start": "4266375",
    "end": "4269166"
  },
  {
    "text": "We go back to source plugin.",
    "start": "4283458",
    "end": "4286083"
  },
  {
    "text": "Then we can go to the output dot add field.",
    "start": "4289291",
    "end": "4292583"
  },
  {
    "text": "Body will be V file dot value.",
    "start": "4310833",
    "end": "4315000"
  },
  {
    "text": "And we want to add",
    "start": "4321750",
    "end": "4323583"
  },
  {
    "text": "fields from the metadata. So maybe if we make that an option.",
    "start": "4328750",
    "end": "4335750"
  },
  {
    "text": "Unified, they will have a processor,",
    "start": "4352500",
    "end": "4354833"
  },
  {
    "text": "which could be a picture.",
    "start": "4357833",
    "end": "4359083"
  },
  {
    "text": "And then, maybe we specify here like a bunch of fields we want to add from the metadata.",
    "start": "4364041",
    "end": "4370750"
  },
  {
    "text": "Well, maybe it could just be a function.",
    "start": "4376500",
    "end": "4380708"
  },
  {
    "text": "Maybe like an extractor or something like that? Yeah, an extractor.",
    "start": "4389250",
    "end": "4395083"
  },
  {
    "text": "That will take the record of string unknown",
    "start": "4395083",
    "end": "4398833"
  },
  {
    "text": "and produce a record of string unknown.",
    "start": "4400750",
    "end": "4403708"
  },
  {
    "text": "Here we need to basically do that.",
    "start": "4412416",
    "end": "4416750"
  },
  {
    "text": "So, if, for example, for remark,",
    "start": "4421416",
    "end": "4423750"
  },
  {
    "text": "it would be something like, and then,",
    "start": "4431083",
    "end": "4436583"
  },
  {
    "text": "Okay.",
    "start": "4448833",
    "end": "4449041"
  },
  {
    "text": "Probably could do a bit of name. Feels a little weird, but... All of this can be refined, I think.",
    "start": "4455041",
    "end": "4461541"
  },
  {
    "text": "Yes. But I think we're on the right track. Does it work?",
    "start": "4461750",
    "end": "4466041"
  },
  {
    "text": "Probably not. Here we go. Document.",
    "start": "4470583",
    "end": "4472875"
  },
  {
    "text": "Oh, yes. There's my little extractor in the documents. In the document.",
    "start": "4477750",
    "end": "4484208"
  },
  {
    "text": "Do we need that anymore? What is it? That allows you to provide the source metadata",
    "start": "4484875",
    "end": "4491083"
  },
  {
    "text": "to computed fields in a typed fashion. Okay.",
    "start": "4491083",
    "end": "4496083"
  },
  {
    "text": "So, yes, I would argue that that's a must because that's how Content Layer currently computes",
    "start": "4497708",
    "end": "4503583"
  },
  {
    "text": "a lot of its computed fields. You grab metadata and do stuff like to compute a slug, for example.",
    "start": "4503583",
    "end": "4508958"
  },
  {
    "text": "I had a little extractor built in there.",
    "start": "4509458",
    "end": "4512250"
  },
  {
    "text": "I guess we could just provide the output",
    "start": "4520291",
    "end": "4522041"
  },
  {
    "text": "Okay, this was a bit overzealous and excellent.",
    "start": "4536708",
    "end": "4541416"
  },
  {
    "text": "And here it would be...",
    "start": "4543875",
    "end": "4546875"
  },
  {
    "text": "The way I was doing it before was basically just inferring the meta-argument. Yeah. Source extends.",
    "start": "4548916",
    "end": "4556875"
  },
  {
    "text": "stream.",
    "start": "4561916",
    "end": "4562250"
  },
  {
    "text": "Could you not just infer the source?",
    "start": "4569916",
    "end": "4572125"
  },
  {
    "text": "Because... I guess this is like more...",
    "start": "4575250",
    "end": "4581708"
  },
  {
    "text": "But it starts pulling out the inner meta... The inner meta is the first",
    "start": "4581750",
    "end": "4586875"
  },
  {
    "text": "type argument to source, right? So, we could in theory just extract it directly from source now.",
    "start": "4586875",
    "end": "4591916"
  },
  {
    "text": "We just have to change the name source. That's all.",
    "start": "4593000",
    "end": "4595416"
  },
  {
    "text": "This... Thank you, chatgpt.",
    "start": "4609500",
    "end": "4613166"
  },
  {
    "text": "That was what chatgpt originally suggested, which is the only reason I suggested it.",
    "start": "4615583",
    "end": "4619708"
  },
  {
    "text": "Yeah, I just kind of used chatgpt as a far supporter completely and just...",
    "start": "4624000",
    "end": "4628333"
  },
  {
    "text": "...ignore its ideas. I found when I was using it that it slowed me down",
    "start": "4629416",
    "end": "4634583"
  },
  {
    "text": "because I kept reading what it was suggesting. Oh, yeah, obviously I was just going to ignore it most of the time. Yeah, I had to get rid of it.",
    "start": "4634750",
    "end": "4643166"
  },
  {
    "text": "Okay. Cool.",
    "start": "4645500",
    "end": "4648000"
  },
  {
    "text": "I think this is workable. Yeah, I think this is a good start, for sure.",
    "start": "4653208",
    "end": "4660708"
  },
  {
    "text": "I do have to hop off in like two minutes.",
    "start": "4660750",
    "end": "4670291"
  },
  {
    "text": "Okay. But I feel like this was a pretty good... I mean, you can feel free to keep going, but I think that this was",
    "start": "4670958",
    "end": "4676125"
  },
  {
    "text": "like a pretty good milestone.",
    "start": "4676125",
    "end": "4679666"
  },
  {
    "text": "I like the direction. I also like the... I think like if there's a way we can get",
    "start": "4681750",
    "end": "4687458"
  },
  {
    "text": "more of the plug-in information typed. I don't know if there's a way, but if there is a way, maybe by providing a",
    "start": "4687458",
    "end": "4693208"
  },
  {
    "text": "schema to like the... I don't know, like maybe by providing a schema",
    "start": "4693208",
    "end": "4699041"
  },
  {
    "text": "or maybe by like extracting type information from like whatever the plug-in's doing,",
    "start": "4699041",
    "end": "4704458"
  },
  {
    "text": "that would be good because then the extractor would be working with typed information instead of a record of string any.",
    "start": "4704750",
    "end": "4711958"
  },
  {
    "text": "But yeah. Yeah, I guess the field is being like an under record is okay",
    "start": "4714208",
    "end": "4721166"
  },
  {
    "text": "because it's getting past the field schema anyway.",
    "start": "4721166",
    "end": "4725458"
  },
  {
    "text": "Yeah, I just mean if you're going to be... It depends on whether or not we're giving",
    "start": "4727250",
    "end": "4733208"
  },
  {
    "text": "users access to it or not, I guess. Yeah, I guess the only thing is like if",
    "start": "4733208",
    "end": "4738291"
  },
  {
    "text": "plug-ins want to access output from other plug-ins, but there might be an",
    "start": "4738291",
    "end": "4744583"
  },
  {
    "text": "each quad or edgy case. Right.",
    "start": "4744583",
    "end": "4747250"
  },
  {
    "text": "But anyways, this is really good progress. Thank you for taking the time also to",
    "start": "4749750",
    "end": "4755041"
  },
  {
    "text": "catch me up on your work the last time you were doing this.",
    "start": "4755041",
    "end": "4760000"
  },
  {
    "text": "But yeah, we'll try to keep doing this on Wednesdays moving forward.",
    "start": "4761750",
    "end": "4766333"
  },
  {
    "text": "Thanks Tim. Let's commit this and I'll call it a day of it.",
    "start": "4768750",
    "end": "4773458"
  },
  {
    "text": "Sounds good. Well, thank you everybody for joining and until next time, cheers.",
    "start": "4775166",
    "end": "4779541"
  },
  {
    "text": "See ya.",
    "start": "4780916",
    "end": "4781541"
  }
]