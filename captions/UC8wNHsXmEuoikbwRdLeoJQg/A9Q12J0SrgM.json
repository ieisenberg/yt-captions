[
  {
    "text": "Welcome back everybody. Tim and I are going to continue our,",
    "start": "4733",
    "end": "12566"
  },
  {
    "text": "re-imagining of content layer with Effect. Where do we leave off?",
    "start": "12566",
    "end": "17633"
  },
  {
    "text": "I don't remember. we got the",
    "start": "17633",
    "end": "23733"
  },
  {
    "text": "documents out, putting to disk. That's right.",
    "start": "23733",
    "end": "28500"
  },
  {
    "text": "That's right. Currently they're just JSON files. So, I forget we had talked briefly",
    "start": "29666",
    "end": "35333"
  },
  {
    "text": "the last time we met about what the next steps should be. I don't remember what that was either.",
    "start": "35333",
    "end": "41033"
  },
  {
    "text": "Do you remember what we said? I think the logical next step is, so",
    "start": "42266",
    "end": "52300"
  },
  {
    "text": "we've got the JSON files. Then we need to turn those into modules that you can use in your project.",
    "start": "52300",
    "end": "58266"
  },
  {
    "text": "And we also need to generate the types. Let me see if I can find maybe while you",
    "start": "59033",
    "end": "64400"
  },
  {
    "text": "pull up your editor, I'll see if I can find the hacked together version of like",
    "start": "64400",
    "end": "70333"
  },
  {
    "text": "a type generator that I had written a long time ago.",
    "start": "70333",
    "end": "73900"
  },
  {
    "text": "You look like you need some bit of logs.",
    "start": "90166",
    "end": "91900"
  },
  {
    "text": "Um, so the document builder.",
    "start": "97933",
    "end": "100900"
  },
  {
    "text": "So here's the system login. Let me try to really say",
    "start": "154633",
    "end": "162833"
  },
  {
    "text": "how many documents we're going to build because we evaluate",
    "start": "162833",
    "end": "169500"
  },
  {
    "text": "the sources in the stream. This one.",
    "start": "170033",
    "end": "174933"
  },
  {
    "text": "There we go.",
    "start": "176199",
    "end": "177000"
  },
  {
    "text": "If we go to stream.tap.",
    "start": "194300",
    "end": "201666"
  },
  {
    "text": "OK. I think I found it. Yes. It is a hot mess, but it worked on a",
    "start": "237099",
    "end": "246500"
  },
  {
    "text": "previous version of schema. So we can maybe look at it for this version.",
    "start": "246500",
    "end": "249533"
  },
  {
    "text": "Maybe here we go.",
    "start": "252666",
    "end": "254333"
  },
  {
    "text": "And then in here we'll have a direction.",
    "start": "261800",
    "end": "270565"
  },
  {
    "text": "I don't feel that's going to be too precise.",
    "start": "305133",
    "end": "306866"
  },
  {
    "text": "That's awesome. No one know how many nanoseconds it took you to build.",
    "start": "312233",
    "end": "316133"
  },
  {
    "text": "I think developers will appreciate it. I think so.",
    "start": "319199",
    "end": "322933"
  },
  {
    "text": "The nanoseconds. You got to know very precisely how many milliseconds",
    "start": "324966",
    "end": "332900"
  },
  {
    "text": "and nanoseconds it took you to build these documents.",
    "start": "332900",
    "end": "335832"
  },
  {
    "text": "So we want to add modules.",
    "start": "343133",
    "end": "350633"
  },
  {
    "text": "So we look at the output generated.",
    "start": "351033",
    "end": "355332"
  },
  {
    "text": "We have a bunch of JSON files.",
    "start": "356933",
    "end": "360699"
  },
  {
    "text": "I guess we want to import them into bucket index.js.",
    "start": "363633",
    "end": "367833"
  },
  {
    "text": "Index.js here. And that just goes",
    "start": "381033",
    "end": "386266"
  },
  {
    "text": "what it did. What it's gotten there to do. I don't have to think about it.",
    "start": "394033",
    "end": "399733"
  },
  {
    "text": "The website.",
    "start": "400233",
    "end": "402699"
  },
  {
    "text": "I'm going to send you a blog file.",
    "start": "405933",
    "end": "409733"
  },
  {
    "text": "So it creates index.js and index.json. What they can send index.json.",
    "start": "412099",
    "end": "422133"
  },
  {
    "text": "This is an array of everything. Interesting.",
    "start": "431500",
    "end": "436432"
  },
  {
    "text": "Interesting that it's not using the index.json here. Instead, importing every module.",
    "start": "468333",
    "end": "474966"
  },
  {
    "text": "So in the output, there's this index.json, which is an array of all these.",
    "start": "489533",
    "end": "495533"
  },
  {
    "text": "But in the index.js, it's importing everything anyway. I don't know.",
    "start": "496399",
    "end": "501533"
  },
  {
    "text": "Maybe it was added as a feature later. Maybe.",
    "start": "501533",
    "end": "504266"
  },
  {
    "text": "We could start hacking on the type generator",
    "start": "512866",
    "end": "516966"
  },
  {
    "text": "and then move on to the module generator. Because we're going to have to generate both type definitions for the schemas.",
    "start": "518133",
    "end": "525500"
  },
  {
    "text": "And then we're also going to have to generate the module structure. But maybe we can-- I feel like the type definitions are going to be the harder thing.",
    "start": "527733",
    "end": "533500"
  },
  {
    "text": "Maybe not.",
    "start": "535533",
    "end": "535866"
  },
  {
    "text": "Don't judge. Don't judge me. The code you're about to read.",
    "start": "540699",
    "end": "543300"
  },
  {
    "text": "Is a writer make this append?",
    "start": "548333",
    "end": "556000"
  },
  {
    "text": "So it's a to generate type script?",
    "start": "558100",
    "end": "561699"
  },
  {
    "text": "Yeah. So in a much older version of the project",
    "start": "565466",
    "end": "571699"
  },
  {
    "text": "that I had been working on myself-- here, I can just steal the",
    "start": "571699",
    "end": "577366"
  },
  {
    "text": "screen from you for a second. So in a much older version of this--",
    "start": "577366",
    "end": "582399"
  },
  {
    "text": "the writer in here is basically just used to accumulate stuff.",
    "start": "585533",
    "end": "591266"
  },
  {
    "text": "And then this type script thingy is the thing",
    "start": "591899",
    "end": "597266"
  },
  {
    "text": "that actually traverses the AST. But the way it looks when it's finished",
    "start": "597300",
    "end": "601166"
  },
  {
    "text": "was something like this.",
    "start": "603366",
    "end": "609366"
  },
  {
    "text": "You'd end up with-- let me just make the terminal a little bigger.",
    "start": "611000",
    "end": "614666"
  },
  {
    "text": "You'd end up with a generated type that looks like this.",
    "start": "617866",
    "end": "623199"
  },
  {
    "text": "And it preserves the descriptions and stuff for the fields so that you end up getting that in the",
    "start": "624199",
    "end": "630866"
  },
  {
    "text": "generated type definitions. So we could use this as a starting point,",
    "start": "630866",
    "end": "636766"
  },
  {
    "text": "but it's probably not valid anymore because the AST has changed a lot.",
    "start": "636766",
    "end": "642333"
  },
  {
    "text": "But yeah, I mean, the idea is that as you're traversing",
    "start": "644266",
    "end": "649433"
  },
  {
    "text": "the AST, you're basically creating type script nodes.",
    "start": "649433",
    "end": "654566"
  },
  {
    "text": "And then adding them to the writer.",
    "start": "655699",
    "end": "658133"
  },
  {
    "text": "And then some of those type nodes may also have declarations that are associated with them.",
    "start": "661166",
    "end": "666899"
  },
  {
    "text": "So yeah, I mean, we don't have to use the writer module. This was just the way I chose to do it originally.",
    "start": "667899",
    "end": "673399"
  },
  {
    "text": "But yeah, because I guess a single type node",
    "start": "674566",
    "end": "681666"
  },
  {
    "text": "could have multiple other nodes associated with it. Anyway, so I'll stop",
    "start": "681666",
    "end": "690766"
  },
  {
    "text": "sharing and let you share. But that was kind of like the idea that I had when I originally did this.",
    "start": "690766",
    "end": "696466"
  },
  {
    "text": "Stop sharing. And it worked pretty well. And we can use our config file somehow",
    "start": "697166",
    "end": "707899"
  },
  {
    "text": "because that already has all the types we need in it.",
    "start": "708199",
    "end": "712566"
  },
  {
    "text": "Including the types for the source. Because if we were going to use the AST, do the AST,",
    "start": "715066",
    "end": "728000"
  },
  {
    "text": "then we need to-- our source will also need to provide the AST for the metadata.",
    "start": "728233",
    "end": "733399"
  },
  {
    "text": "Because we add the metadata to the JSON. And currently, it's top level, won't we?",
    "start": "737399",
    "end": "744500"
  },
  {
    "text": "It's not a schema. Yeah.",
    "start": "745800",
    "end": "750833"
  },
  {
    "text": "I'm not sure because the content layer config file can theoretically import from anywhere.",
    "start": "758000",
    "end": "762833"
  },
  {
    "text": "So you basically have to create a type script project.",
    "start": "763066",
    "end": "766533"
  },
  {
    "text": "Well, let's try the AST even first.",
    "start": "770233",
    "end": "773365"
  },
  {
    "text": "So what was the limitation that you mentioned? What was the problem with just generating",
    "start": "780800",
    "end": "787166"
  },
  {
    "text": "the types from the AST? What would be missing? We currently don't have an AST or--",
    "start": "787166",
    "end": "792365"
  },
  {
    "text": "we look at the generated content.",
    "start": "792966",
    "end": "794399"
  },
  {
    "text": "Oh, this guy. We can do this one.",
    "start": "799500",
    "end": "805600"
  },
  {
    "text": "But we don't have an AST for this section right now.",
    "start": "806766",
    "end": "811066"
  },
  {
    "text": "But we can look to add a schema to sources.",
    "start": "814666",
    "end": "818800"
  },
  {
    "text": "Yeah, I think that would make sense. Because then we could reuse the type generator.",
    "start": "821399",
    "end": "825733"
  },
  {
    "text": "Yeah. Well, if we--",
    "start": "827333",
    "end": "831966"
  },
  {
    "text": "So I guess for now, just going to text it to us.",
    "start": "863733",
    "end": "866866"
  },
  {
    "text": "OK. So the type builder will take a document config",
    "start": "923366",
    "end": "929733"
  },
  {
    "text": "and then return the type script AST.",
    "start": "931966",
    "end": "934899"
  },
  {
    "text": "I guess we'll just copy your code from Discord.",
    "start": "937166",
    "end": "941000"
  },
  {
    "text": "Don't judge me, everyone.",
    "start": "946033",
    "end": "947199"
  },
  {
    "text": "Yeah, this was code I wasn't very proud of at the time that I wrote it. But--",
    "start": "954466",
    "end": "958966"
  },
  {
    "text": "It worked. It worked.",
    "start": "960466",
    "end": "962365"
  },
  {
    "text": "I guess we'll just place it down here if you want. Move that up there.",
    "start": "969933",
    "end": "974665"
  },
  {
    "text": "What does a writer do? So the writer is a way to basically have",
    "start": "977533",
    "end": "987300"
  },
  {
    "text": "a way to accumulate values over time.",
    "start": "987300",
    "end": "991166"
  },
  {
    "text": "But I would say it might be better for us to figure out a way not to use the writer, because I think it",
    "start": "992500",
    "end": "998399"
  },
  {
    "text": "just introduces overhead. But the idea is that a type node can have many other nodes",
    "start": "998399",
    "end": "1005899"
  },
  {
    "text": "inside of it, I think. I remember correctly. Yeah. But I'm sure that we can",
    "start": "1005899",
    "end": "1011166"
  },
  {
    "text": "figure out a better way to represent this.",
    "start": "1011166",
    "end": "1017000"
  },
  {
    "text": "Yeah, I don't remember what that was.",
    "start": "1018466",
    "end": "1024600"
  },
  {
    "text": "I can actually look.",
    "start": "1024600",
    "end": "1025465"
  },
  {
    "text": "And I think I originally stole the code, the first version of all of this from Giulio.",
    "start": "1047133",
    "end": "1052733"
  },
  {
    "text": "Yeah. But I had to adapt it for an AST that was totally different,",
    "start": "1054100",
    "end": "1058533"
  },
  {
    "text": "which is basically what we're doing now.",
    "start": "1059800",
    "end": "1061100"
  },
  {
    "text": "And we need to add type scripts to the operating.",
    "start": "1077699",
    "end": "1080566"
  },
  {
    "text": "I also think that I was using effect in places that I didn't need to.",
    "start": "1125533",
    "end": "1131466"
  },
  {
    "text": "Because I anticipated having to do something asynchronous, but then ended up not having to, I think.",
    "start": "1132300",
    "end": "1138699"
  },
  {
    "text": "I can't remember. I honestly can't remember.",
    "start": "1138699",
    "end": "1142366"
  },
  {
    "text": "Looks like writer was a fitful. It was using a riff.",
    "start": "1144933",
    "end": "1149366"
  },
  {
    "text": "Oh, yeah, that makes sense. OK.",
    "start": "1150666",
    "end": "1152033"
  },
  {
    "text": "I think Go should just set the node.",
    "start": "1159833",
    "end": "1165833"
  },
  {
    "text": "Writer takes a value. It produces a read-only array of ts.node.",
    "start": "1195600",
    "end": "1202733"
  },
  {
    "text": "Anyway, so we come here. We get a literal. We create a node for that thing.",
    "start": "1208733",
    "end": "1215166"
  },
  {
    "text": "Then return it.",
    "start": "1217033",
    "end": "1219065"
  },
  {
    "text": "Does type scripts-- TypeScript is completely synchronous. So I think we can just--",
    "start": "1226966",
    "end": "1232366"
  },
  {
    "text": "It is. It is.",
    "start": "1233000",
    "end": "1234066"
  },
  {
    "text": "That's why I think I wasn't sure if I was going-- I know I was using a ref internally, but I also think I wasn't sure if I was going",
    "start": "1247266",
    "end": "1254000"
  },
  {
    "text": "to be handling transformations. And then I decided no.",
    "start": "1254000",
    "end": "1257266"
  },
  {
    "text": "The AST is just a static thing.",
    "start": "1259566",
    "end": "1264699"
  },
  {
    "text": "Yeah. We do have some errors here.",
    "start": "1265466",
    "end": "1276399"
  },
  {
    "text": "Maybe-- We can just write those. Yeah, I was going to say",
    "start": "1276899",
    "end": "1282166"
  },
  {
    "text": "one of the things we could do is start with the simpler nodes in the AST",
    "start": "1282166",
    "end": "1288065"
  },
  {
    "text": "and figure out-- Yeah. Basically, on the simplest level of the-- for the simplest nodes,",
    "start": "1288566",
    "end": "1294399"
  },
  {
    "text": "what do we want the return type to look like? And then we can work our way up from there.",
    "start": "1295166",
    "end": "1300232"
  },
  {
    "text": "So here, we would just change that to return.",
    "start": "1301566",
    "end": "1304766"
  },
  {
    "text": "Is literal? Why did I do it this way? Maybe I just didn't want to",
    "start": "1314566",
    "end": "1319699"
  },
  {
    "text": "have another switch statement. Well, what else is on here?",
    "start": "1319699",
    "end": "1324866"
  },
  {
    "text": "AST dot-- literal value.",
    "start": "1325266",
    "end": "1330166"
  },
  {
    "text": "I just-- I couldn't probably add another switch statement instead of all of this stuff, but--",
    "start": "1337166",
    "end": "1340766"
  },
  {
    "text": "yeah, you're good to go. Half of it.",
    "start": "1343366",
    "end": "1350166"
  },
  {
    "text": "Write a JPT. Let's go. It's good for that kind of stuff.",
    "start": "1361166",
    "end": "1365166"
  },
  {
    "text": "And then this is the default case.",
    "start": "1371466",
    "end": "1376565"
  },
  {
    "text": "Unique symbol.",
    "start": "1389566",
    "end": "1390399"
  },
  {
    "text": "Yeah, I'm not sure. There are also maybe AST nodes that are not or are present now",
    "start": "1396166",
    "end": "1402233"
  },
  {
    "text": "that we're not handling yet. So we'll have to figure that out as well. I feel like we don't",
    "start": "1402233",
    "end": "1408433"
  },
  {
    "text": "want symbols in the type because you can't JSON. You can't-- not symbols in JSON.",
    "start": "1408433",
    "end": "1418566"
  },
  {
    "text": "We'll do all of this. True.",
    "start": "1426566",
    "end": "1429833"
  },
  {
    "text": "And also, we'll be targeting the encoded type of the AST.",
    "start": "1432966",
    "end": "1438000"
  },
  {
    "text": "So-- Really? Yeah, because JSON is the encoded version of the clones.",
    "start": "1442000",
    "end": "1447065"
  },
  {
    "text": "But the type that we're-- Yeah, because you'll be-- we won't be decoding the clones at all",
    "start": "1449500",
    "end": "1459165"
  },
  {
    "text": "because you'll be reading them straight from the disk.",
    "start": "1460166",
    "end": "1463366"
  },
  {
    "text": "Otherwise, you have to do another trip through content layer somehow. Yeah, I thought we were--",
    "start": "1467333",
    "end": "1474466"
  },
  {
    "text": "OK. That means we're going to",
    "start": "1475733",
    "end": "1481399"
  },
  {
    "text": "need to access the schemas again somehow. So we're going to have",
    "start": "1481399",
    "end": "1486733"
  },
  {
    "text": "to import the config.",
    "start": "1486733",
    "end": "1488066"
  },
  {
    "text": "Well, let's think about this for a second. I think that the idea with the types that we're generating",
    "start": "1492500",
    "end": "1498566"
  },
  {
    "text": "is that this is going to go in that generated package, right? That then you can just import the JSON from.",
    "start": "1498566",
    "end": "1503398"
  },
  {
    "text": "Yeah. So to your point, it is-- you're right. It is going to have to be",
    "start": "1504166",
    "end": "1509399"
  },
  {
    "text": "the encoded side because-- yeah, because it has to be.",
    "start": "1509399",
    "end": "1517466"
  },
  {
    "text": "Do we want to work around it? Wondering if you had a schema that used the transformation",
    "start": "1520399",
    "end": "1527600"
  },
  {
    "text": "like big decimal?",
    "start": "1527800",
    "end": "1529800"
  },
  {
    "text": "What's the encoded types for now? Yeah, because when--",
    "start": "1541666",
    "end": "1547666"
  },
  {
    "text": "OK, so the original content layer config comes in, and it reads from the source, right?",
    "start": "1548333",
    "end": "1555866"
  },
  {
    "text": "But then we have to re-encode whatever we've read from the source and spit it back out to disk.",
    "start": "1557066",
    "end": "1562800"
  },
  {
    "text": "And people are going to be directly importing that. And there's no way to go through content layer again",
    "start": "1563500",
    "end": "1568166"
  },
  {
    "text": "in that case because you're literally directly importing the values. We have to-- yeah, so we have to encode inside.",
    "start": "1569133",
    "end": "1575233"
  },
  {
    "text": "You're right. Let's continue a bit of some truth now.",
    "start": "1575233",
    "end": "1579899"
  },
  {
    "text": "Otherwise, you'll need to re-import the config somehow and use the content layer API.",
    "start": "1583100",
    "end": "1590533"
  },
  {
    "text": "Yeah. I don't think that's the user experience we're going for.",
    "start": "1593333",
    "end": "1599000"
  },
  {
    "text": "So I agree-- upon further reflection, I agree with you that we're targeting the info.",
    "start": "1599000",
    "end": "1603699"
  },
  {
    "text": "So four symbols. We'll just ignore them.",
    "start": "1606533",
    "end": "1612399"
  },
  {
    "text": "And the find keyword is--",
    "start": "1617500",
    "end": "1620399"
  },
  {
    "text": "or we should've recorded a met keyword by this stage. How many more of us have",
    "start": "1653366",
    "end": "1660466"
  },
  {
    "text": "we got? One, two, three, four.",
    "start": "1660466",
    "end": "1661799"
  },
  {
    "text": "Enums. So we get the identifier.",
    "start": "1684866",
    "end": "1691100"
  },
  {
    "text": "Yeah, we're probably going to have to like uneffectify or this returns an option, I'm assuming.",
    "start": "1693033",
    "end": "1696500"
  },
  {
    "text": "Wow, I forgot we even had option.gen.",
    "start": "1700733",
    "end": "1704133"
  },
  {
    "text": "Yeah, that's quite useful.",
    "start": "1706233",
    "end": "1707399"
  },
  {
    "text": "So we got members of enum",
    "start": "1728699",
    "end": "1740299"
  },
  {
    "text": "the type node declaration.",
    "start": "1740300",
    "end": "1743600"
  },
  {
    "text": "Yeah. So the type nodes, the reason why those exist is because like, let's say you have a container",
    "start": "1745899",
    "end": "1751833"
  },
  {
    "text": "type, like, I don't know, in the example I had, there's like a blog post, right? Yeah.",
    "start": "1751866",
    "end": "1756866"
  },
  {
    "text": "Let's say that there's an enum as a field of that blog post. You have to generate the enum and export",
    "start": "1757800",
    "end": "1763466"
  },
  {
    "text": "it like separate from the container type, which is the reason why you can accumulate",
    "start": "1763466",
    "end": "1769266"
  },
  {
    "text": "declarations as you're also generating type nodes because the declarations are top level and they",
    "start": "1769266",
    "end": "1775300"
  },
  {
    "text": "have to be exported. Right. That was kind of like, that was, yeah.",
    "start": "1775300",
    "end": "1782466"
  },
  {
    "text": "So that was the reason why I was using, I guess writer. I'm remembering these things now, but",
    "start": "1784000",
    "end": "1789699"
  },
  {
    "text": "there's definitely like better ways to do this.",
    "start": "1789699",
    "end": "1793366"
  },
  {
    "text": "The template literal type has changed, I",
    "start": "1822199",
    "end": "1829733"
  },
  {
    "text": "think, if I remember correctly, like, or the AST might've changed.",
    "start": "1829733",
    "end": "1834565"
  },
  {
    "text": "I can't remember. So there's the end. It's got spans.",
    "start": "1836933",
    "end": "1841000"
  },
  {
    "text": "Okay. So then maybe this is still really good. I think this might, maybe this is still valid then.",
    "start": "1842233",
    "end": "1848800"
  },
  {
    "text": "True. Yeah.",
    "start": "1849466",
    "end": "1854533"
  },
  {
    "text": "I already saw the encoded side here.",
    "start": "1854533",
    "end": "1856100"
  },
  {
    "text": "Tuple.",
    "start": "1863933",
    "end": "1864299"
  },
  {
    "text": "So what do we want to do with the tuple? We want to go over its elements.",
    "start": "1876966",
    "end": "1880466"
  },
  {
    "text": "There's two more. Tuple type.",
    "start": "1905933",
    "end": "1912100"
  },
  {
    "text": "Of course. There's rest elements.",
    "start": "1913600",
    "end": "1918699"
  },
  {
    "text": "So here we're going over every element and then recursing until the top.",
    "start": "1922800",
    "end": "1930199"
  },
  {
    "text": "Optional. Yeah, because on a Tuple type you can make the node optional.",
    "start": "1938933",
    "end": "1942666"
  },
  {
    "text": "You can probably just do this, um, imperatively.",
    "start": "1944199",
    "end": "1948199"
  },
  {
    "text": "At that point we've got an option. So we'll need to filter that.",
    "start": "1965866",
    "end": "1972933"
  },
  {
    "text": "You can just compact here. Filter map. Impact. Other way.",
    "start": "2022699",
    "end": "2028266"
  },
  {
    "text": "Yeah. Not quite. Option. Not there.",
    "start": "2029100",
    "end": "2033366"
  },
  {
    "text": "So here we've got our type node and then we just do the second.",
    "start": "2038300",
    "end": "2041933"
  },
  {
    "text": "I think we actually check the element. If the element's optional and then make the type node. Yeah, exactly.",
    "start": "2044333",
    "end": "2049866"
  },
  {
    "text": "Exactly. So here we have our type nodes.",
    "start": "2052000",
    "end": "2055966"
  },
  {
    "text": "And we make a tuple. And what is this doing? Encurring a tuple node.",
    "start": "2059233",
    "end": "2063166"
  },
  {
    "text": "With the elements.",
    "start": "2065966",
    "end": "2067166"
  },
  {
    "text": "They see.",
    "start": "2079533",
    "end": "2080099"
  },
  {
    "text": "And I guess another function because it's recursive.",
    "start": "2094166",
    "end": "2096666"
  },
  {
    "text": "Make tuple. Nope. Oh, yeah.",
    "start": "2100899",
    "end": "2104500"
  },
  {
    "text": "Where's the AST coming from?",
    "start": "2215566",
    "end": "2216866"
  },
  {
    "text": "I don't remember what's going on here. Yeah. There's a rest--",
    "start": "2247333",
    "end": "2252666"
  },
  {
    "text": "Rest property.",
    "start": "2253933",
    "end": "2255399"
  },
  {
    "text": "I've been at the top. Redundly array is not assigned at all to not empty.",
    "start": "2314966",
    "end": "2321233"
  },
  {
    "text": "Why is that not assigned at all AST?",
    "start": "2340766",
    "end": "2342566"
  },
  {
    "text": "Ah, yes. The old type.type.",
    "start": "2358366",
    "end": "2360699"
  },
  {
    "text": "I did. And--",
    "start": "2364333",
    "end": "2366699"
  },
  {
    "text": "Looks like TypeScript's having troubles refining the types here.",
    "start": "2378899",
    "end": "2383100"
  },
  {
    "text": "So, not sure why it sounds weird to move this.",
    "start": "2408199",
    "end": "2411866"
  },
  {
    "text": "Probably have an ESLint. Probably have an ESLint rule enabled in here because this is an older ESLint config.",
    "start": "2413333",
    "end": "2420066"
  },
  {
    "text": "Type node. Is read only.",
    "start": "2448066",
    "end": "2453399"
  },
  {
    "text": "Else. Honestly, don't remember what's going on in this if else statement.",
    "start": "2460933",
    "end": "2466300"
  },
  {
    "text": "At some point-- At some point I knew what was going on in here.",
    "start": "2469199",
    "end": "2473899"
  },
  {
    "text": "But not now.",
    "start": "2474633",
    "end": "2475633"
  },
  {
    "text": "So-- It's either an array or a",
    "start": "2479766",
    "end": "2486066"
  },
  {
    "text": "tuple with like a spread.",
    "start": "2486066",
    "end": "2487465"
  },
  {
    "text": "Maybe it was--",
    "start": "2492800",
    "end": "2493466"
  },
  {
    "text": "Yes. I think.",
    "start": "2498500",
    "end": "2500666"
  },
  {
    "text": "I think we're differentiating here between whether or not it's a--like you said, a tuple with a spread or a",
    "start": "2512566",
    "end": "2520133"
  },
  {
    "text": "tuple with a spread at the beginning and the end.",
    "start": "2520133",
    "end": "2523033"
  },
  {
    "text": "Like, I think we're differentiating where the spread operator is in the two-- And we need the tail.",
    "start": "2525933",
    "end": "2539066"
  },
  {
    "text": "They have to slice it and then map it. We have unsafe tail.",
    "start": "2553933",
    "end": "2560100"
  },
  {
    "text": "Yeah, but I think that you're going to end up having to map over the rest elements.",
    "start": "2562000",
    "end": "2578933"
  },
  {
    "text": "Maybe if we--",
    "start": "2593466",
    "end": "2594633"
  },
  {
    "text": "The top should never probably--",
    "start": "2609533",
    "end": "2611500"
  },
  {
    "text": "Oh.",
    "start": "2620100",
    "end": "2620300"
  },
  {
    "text": "Yeah, that works.",
    "start": "2652100",
    "end": "2653000"
  },
  {
    "text": "Or the--show the tail though. Don't we need to take the full tail? Because right now we're just taking this last element.",
    "start": "2657366",
    "end": "2664033"
  },
  {
    "text": "Doesn't tail take the--from one through the end? Yeah, it's a slice.",
    "start": "2665733",
    "end": "2670566"
  },
  {
    "text": "I think we need the slice and then-- And then go.",
    "start": "2672066",
    "end": "2677133"
  },
  {
    "text": "There was the head and the tail.",
    "start": "2713366",
    "end": "2715966"
  },
  {
    "text": "We make a tuple of the element.",
    "start": "2720133",
    "end": "2727466"
  },
  {
    "text": "Is that just a fancy way of going-- Basically.",
    "start": "2731566",
    "end": "2738500"
  },
  {
    "text": "But I don't remember what the--like, I don't think we're taking into account elements here.",
    "start": "2740933",
    "end": "2746100"
  },
  {
    "text": "What was elements doing in that flow statement? This is just handling the",
    "start": "2747100",
    "end": "2753366"
  },
  {
    "text": "case where we have the rest.",
    "start": "2753366",
    "end": "2756566"
  },
  {
    "text": "Yeah, but if you show that flow statement",
    "start": "2758466",
    "end": "2763866"
  },
  {
    "text": "again, it was piping elements into a flow.",
    "start": "2763866",
    "end": "2767333"
  },
  {
    "text": "You see? So elements.",
    "start": "2769066",
    "end": "2771166"
  },
  {
    "text": "And I guess that's what we're doing. pending. So it's got elements in here.",
    "start": "2784033",
    "end": "2789866"
  },
  {
    "text": "I honestly don't remember. I'm sorry, Tim.",
    "start": "2797000",
    "end": "2798766"
  },
  {
    "text": "I think so. I think that that is correct. I think it's taking the elements. What is elements need to",
    "start": "2804100",
    "end": "2809866"
  },
  {
    "text": "be part of the adoption? I'll be pulling up in my editor since I",
    "start": "2809866",
    "end": "2815899"
  },
  {
    "text": "still have the types working.",
    "start": "2815899",
    "end": "2816932"
  },
  {
    "text": "So it is traverse return option.",
    "start": "2843966",
    "end": "2846133"
  },
  {
    "text": "Traverse returns an effect. So it's just being lazy.",
    "start": "2849933",
    "end": "2856600"
  },
  {
    "text": "Yeah, I think it is basically what you said. So we're going to do the elements, appending the head and",
    "start": "2858699",
    "end": "2864266"
  },
  {
    "text": "then appending the tail to it.",
    "start": "2864266",
    "end": "2867266"
  },
  {
    "text": "I guess we'll see through testing.",
    "start": "2874866",
    "end": "2876599"
  },
  {
    "text": "We just go in there. Take all elements.",
    "start": "2884933",
    "end": "2887765"
  },
  {
    "text": "Option. Type literal.",
    "start": "2890000",
    "end": "2895866"
  },
  {
    "text": "Favorite property signature. We have  type nodes.",
    "start": "2896800",
    "end": "2900866"
  },
  {
    "text": "They say that property signatures.",
    "start": "2909199",
    "end": "2911366"
  },
  {
    "text": "dot map node.",
    "start": "2946433",
    "end": "2949100"
  },
  {
    "text": "It's documentation.",
    "start": "2961666",
    "end": "2962533"
  },
  {
    "text": "So here we have signatures.",
    "start": "2968500",
    "end": "2973733"
  },
  {
    "text": "The signatures.",
    "start": "2987300",
    "end": "2987966"
  },
  {
    "text": "Then we do the same for the index options.",
    "start": "2996933",
    "end": "3000500"
  },
  {
    "text": "I think it just puts them into a tuple. OK.",
    "start": "3050733",
    "end": "3054966"
  },
  {
    "text": "Modifiers.",
    "start": "3061300",
    "end": "3061899"
  },
  {
    "text": "I wonder what the x is there in the pre-parameter declaration.",
    "start": "3072666",
    "end": "3078433"
  },
  {
    "text": "Modifiers.",
    "start": "3098533",
    "end": "3099500"
  },
  {
    "text": "The name.",
    "start": "3103800",
    "end": "3104399"
  },
  {
    "text": "Name. Do we not have the name here?",
    "start": "3109466",
    "end": "3114632"
  },
  {
    "text": "What is-- It's weird. So g was the parameter nodes, I believe.",
    "start": "3118500",
    "end": "3124166"
  },
  {
    "text": "But it's--",
    "start": "3125766",
    "end": "3131666"
  },
  {
    "text": "1, 2, 3, 4, 5th parameter. 1, 2, 3, 4, type.",
    "start": "3137833",
    "end": "3143500"
  },
  {
    "text": "I believe it's the type node. In this case, I believe it is the parameter node.",
    "start": "3147733",
    "end": "3153265"
  },
  {
    "text": "And then the index signature is the-- as the value gets the type node.",
    "start": "3154300",
    "end": "3160300"
  },
  {
    "text": "There's a lot of data that I'm not propagating here.",
    "start": "3163933",
    "end": "3167199"
  },
  {
    "text": "That we probably could propagate, but--",
    "start": "3172733",
    "end": "3174500"
  },
  {
    "text": "So those are probably signatures and index signatures.",
    "start": "3180533",
    "end": "3186899"
  },
  {
    "text": "We append them to get the return option.",
    "start": "3187899",
    "end": "3193000"
  },
  {
    "text": "Union.",
    "start": "3206633",
    "end": "3207000"
  },
  {
    "text": "I feel like this writer was making it quite noisy. Yeah.",
    "start": "3212500",
    "end": "3217666"
  },
  {
    "text": "There was a method to my madness. I assure you, but I don't remember it all.",
    "start": "3220000",
    "end": "3223599"
  },
  {
    "text": "And then we go into it.",
    "start": "3236399",
    "end": "3238799"
  },
  {
    "text": "Suspend transformation. What are we missing? Nothing.",
    "start": "3241933",
    "end": "3245000"
  },
  {
    "text": "So this was more part of a test. The final piece here,",
    "start": "3257300",
    "end": "3262099"
  },
  {
    "text": "we need to basically get the name of the schema that we create somehow.",
    "start": "3262733",
    "end": "3271566"
  },
  {
    "text": "So yeah, I hadn't gotten that far with all the rest of this yet.",
    "start": "3275366",
    "end": "3279033"
  },
  {
    "text": "So we've got a type node, document type.",
    "start": "3285399",
    "end": "3289632"
  },
  {
    "text": "Don't remember why there's an if true there.",
    "start": "3309100",
    "end": "3310800"
  },
  {
    "text": "There's a funny thing. I told you not to judge me.",
    "start": "3315233",
    "end": "3321199"
  },
  {
    "text": "Depends for the type parameters.",
    "start": "3343266",
    "end": "3349199"
  },
  {
    "text": "Return them into params. So let's see. There we go.",
    "start": "3352199",
    "end": "3357466"
  },
  {
    "text": "Do we need to push that into declarations here?",
    "start": "3377699",
    "end": "3381566"
  },
  {
    "text": "What's the writer doing? I'm sorry. Oh, actually, look at my own code. Hang on.",
    "start": "3383433",
    "end": "3387066"
  },
  {
    "text": "I don't think so. This is a type reference node that it's making.",
    "start": "3393133",
    "end": "3395833"
  },
  {
    "text": "Should be just a-- it's not a declaration.",
    "start": "3398433",
    "end": "3400866"
  },
  {
    "text": "If true.",
    "start": "3425233",
    "end": "3426000"
  },
  {
    "text": "I think I was trying to figure out what the if condition was going to be to add documentation from a",
    "start": "3430366",
    "end": "3436199"
  },
  {
    "text": "schema to the final type. I also, if you notice, hard coded the identifier blog post there.",
    "start": "3436199",
    "end": "3441666"
  },
  {
    "text": "So I think I was starting to try to figure out, OK, I've got my type literal. My final type defined.",
    "start": "3442300",
    "end": "3447699"
  },
  {
    "text": "So here it would use the document description and the document name.",
    "start": "3447766",
    "end": "3453100"
  },
  {
    "text": "Yeah. So we may need to take in more information than just the AST.",
    "start": "3454733",
    "end": "3458866"
  },
  {
    "text": "Might need to take in the full document. I'm not sure yet.",
    "start": "3463466",
    "end": "3466699"
  },
  {
    "text": "I don't know. Document--",
    "start": "3473800",
    "end": "3478833"
  },
  {
    "text": "Maybe a document was-- the description was optional.",
    "start": "3522366",
    "end": "3527166"
  },
  {
    "text": "I-- this was probably at a time when-- Oh, yes.",
    "start": "3528766",
    "end": "3533866"
  },
  {
    "text": "It's an option. This was probably-- like, I probably wrote this at a time when--",
    "start": "3534333",
    "end": "3541500"
  },
  {
    "text": "document was defined completely different. This was-- I mean, I wrote this months ago.",
    "start": "3542500",
    "end": "3546866"
  },
  {
    "text": "OK. I think we have top checking now.",
    "start": "3550033",
    "end": "3555199"
  },
  {
    "text": "If it type checks, it works. So let's test it. Yeah. ",
    "start": "3556933",
    "end": "3560399"
  },
  {
    "text": "Wow. Access service M. Throwback.",
    "start": "3573399",
    "end": "3576666"
  },
  {
    "text": "Well, I guess we don't even need a service for this. Yeah.",
    "start": "3591300",
    "end": "3596199"
  },
  {
    "text": "We don't need the error either. Like, a lot of this stuff doesn't need to be in here anymore.",
    "start": "3596866",
    "end": "3601266"
  },
  {
    "text": "Even being like a utility is zero lib folder.",
    "start": "3606366",
    "end": "3608666"
  },
  {
    "text": "Or it could be even on the document folder.",
    "start": "3611833",
    "end": "3613899"
  },
  {
    "text": "We can just leave that in this module. Yeah, I mean, that's fine. That's whatever.",
    "start": "3617166",
    "end": "3620166"
  },
  {
    "text": "So let's test that in document owner, I guess.",
    "start": "3624000",
    "end": "3628432"
  },
  {
    "text": "Over here. Build config.",
    "start": "3640199",
    "end": "3644866"
  },
  {
    "text": "Document.",
    "start": "3647500",
    "end": "3647966"
  },
  {
    "text": "Yeah, we could tap into the stream and just try rendering the document and see what happens.",
    "start": "3653899",
    "end": "3657733"
  },
  {
    "text": "I don't want to want to spare config.",
    "start": "3669699",
    "end": "3673366"
  },
  {
    "text": "Also, I'm pretty sure we have somewhere a utility that formats durations a little more prettily.",
    "start": "3687766",
    "end": "3694833"
  },
  {
    "text": "I just want to be rendering the types in parallel.",
    "start": "3698199",
    "end": "3702266"
  },
  {
    "text": "This will be rendering the JSON.",
    "start": "3715100",
    "end": "3718699"
  },
  {
    "text": "Know where it is. It's on the websites. Code base.",
    "start": "3721233",
    "end": "3723799"
  },
  {
    "text": "There we go.",
    "start": "3729800",
    "end": "3730399"
  },
  {
    "text": "Render JSON.",
    "start": "3758866",
    "end": "3760733"
  },
  {
    "text": "Isn't it still going to just render the type synchronously? Yeah, we will need to just.",
    "start": "3768300",
    "end": "3774766"
  },
  {
    "text": "There.",
    "start": "3778300",
    "end": "3778666"
  },
  {
    "text": "Builder.",
    "start": "3785333",
    "end": "3785666"
  },
  {
    "text": "No, we just do a get old console log. But who knows.",
    "start": "3793666",
    "end": "3799000"
  },
  {
    "text": "We're in the document. Trustee console.log.",
    "start": "3799699",
    "end": "3802966"
  },
  {
    "text": "Oh, we do need the document.",
    "start": "3805166",
    "end": "3806233"
  },
  {
    "text": "String.let.",
    "start": "3820199",
    "end": "3822199"
  },
  {
    "text": "Let's see.",
    "start": "3836733",
    "end": "3837399"
  },
  {
    "text": "In the document.",
    "start": "3845733",
    "end": "3846733"
  },
  {
    "text": "And. The option is questionable, but the post type looks good.",
    "start": "3879733",
    "end": "3886099"
  },
  {
    "text": "I think it's probably just the way I'm adding documentation. It's probably completely wrong now.",
    "start": "3889566",
    "end": "3894699"
  },
  {
    "text": "All right. Yeah, so the post type.",
    "start": "3895433",
    "end": "3899199"
  },
  {
    "text": "That's good. I wonder. Did we export into this place? I was about to say, like, we might want",
    "start": "3901233",
    "end": "3907199"
  },
  {
    "text": "to just use an interface. I know Johannes had previously used types so that on hover you get the non opaque",
    "start": "3907199",
    "end": "3913533"
  },
  {
    "text": "version, but I kind of feel like you might want the opaque version.",
    "start": "3913533",
    "end": "3916866"
  },
  {
    "text": "Yeah, I think there's just something wrong with. JS doc.",
    "start": "3936233",
    "end": "3939866"
  },
  {
    "text": "Again, the type builder. Just not missing.",
    "start": "3952433",
    "end": "3956699"
  },
  {
    "text": "So somewhere. It would be at the very bottom in this case where I'm doing",
    "start": "3964733",
    "end": "3970866"
  },
  {
    "text": "the add JS doc thing. Right.",
    "start": "3970866",
    "end": "3975899"
  },
  {
    "text": "So it was for print. You have to give it a name.",
    "start": "3976199",
    "end": "3981800"
  },
  {
    "text": "Yeah. print node. Document type.",
    "start": "3992266",
    "end": "3994199"
  },
  {
    "text": "Yeah. One of the JS doc. Come and see what I'm doing there.",
    "start": "4000733",
    "end": "4003833"
  },
  {
    "text": "I'm thinking here is fishy documentation.",
    "start": "4007233",
    "end": "4010465"
  },
  {
    "text": "Does that get rid of it? Yeah. So it is here.",
    "start": "4021000",
    "end": "4024766"
  },
  {
    "text": "So interesting. The fishy thing that's happening.",
    "start": "4037833",
    "end": "4040899"
  },
  {
    "text": "In the top. It was our fault. No, mine.",
    "start": "4043633",
    "end": "4046866"
  },
  {
    "text": "Still mine. Like now me not previously.",
    "start": "4049333",
    "end": "4052466"
  },
  {
    "text": "description.",
    "start": "4054966",
    "end": "4056500"
  },
  {
    "text": "Make that's description. Here we go.",
    "start": "4068533",
    "end": "4071932"
  },
  {
    "text": "My fault. Probably. Yeah, we just want to this one.",
    "start": "4075733",
    "end": "4081066"
  },
  {
    "text": "And if we go back to type order. This safe.",
    "start": "4087733",
    "end": "4092666"
  },
  {
    "text": "Because we need to build. Right.",
    "start": "4100733",
    "end": "4104033"
  },
  {
    "text": "Yeah. I've sent you a snippet for the format duration that we use on like the website if you want to use that one instead.",
    "start": "4116133",
    "end": "4121766"
  },
  {
    "text": "I remember writing that. Yeah, I stole it from somewhere.",
    "start": "4123033",
    "end": "4127699"
  },
  {
    "text": "I don't remember. I know you wrote it. I just don't remember where I stole it from.",
    "start": "4128100",
    "end": "4132698"
  },
  {
    "text": "Might have been the first iteration of the playground.",
    "start": "4134166",
    "end": "4138233"
  },
  {
    "text": "The posts. Okay. Do we have types?",
    "start": "4150733",
    "end": "4156733"
  },
  {
    "text": "I guess we want to accumulate all of those and put it in a single file somewhere.",
    "start": "4164000",
    "end": "4168099"
  },
  {
    "text": "Do we. I think that's what the current content layer does and I think that's probably fine.",
    "start": "4171033",
    "end": "4177132"
  },
  {
    "text": "I mean the alternative is a meeting. The type declaration file",
    "start": "4178266",
    "end": "4184199"
  },
  {
    "text": "for every single schema. But I feel like if the content layer",
    "start": "4184199",
    "end": "4190166"
  },
  {
    "text": "config changes we're going to re-emit all the types anyways. Because the types are based off the",
    "start": "4190166",
    "end": "4195366"
  },
  {
    "text": "schema is not off the documents. So there's really no way to cache it. Single file.",
    "start": "4195366",
    "end": "4199800"
  },
  {
    "text": "And so we don't really want it. In this room we kind of just want to. Tap here.",
    "start": "4207833",
    "end": "4220000"
  },
  {
    "text": "We want to track all the times. So these way of doing that is just going.",
    "start": "4225399",
    "end": "4233766"
  },
  {
    "text": "We don't even need to hear actually.",
    "start": "4261866",
    "end": "4266100"
  },
  {
    "text": "And so the types of configuration.",
    "start": "4307100",
    "end": "4309500"
  },
  {
    "text": "That's render types.",
    "start": "4316133",
    "end": "4319000"
  },
  {
    "text": "So we build all the types every single document and then we write it to a simple file somewhere.",
    "start": "4322533",
    "end": "4330699"
  },
  {
    "text": "But it goes config.documents.",
    "start": "4339066",
    "end": "4343865"
  },
  {
    "text": "And then we need to persist it. What are we doing for the JSON here?",
    "start": "4367833",
    "end": "4373566"
  },
  {
    "text": "I think we have a storage.",
    "start": "4375366",
    "end": "4376566"
  },
  {
    "text": "This is document storage I guess.",
    "start": "4384100",
    "end": "4385866"
  },
  {
    "text": "Stream.",
    "start": "4402833",
    "end": "4403033"
  },
  {
    "text": "Once we finish this. I was going to say once we finish this up, Tim, I probably have to head out.",
    "start": "4409800",
    "end": "4415733"
  },
  {
    "text": "Yeah, we don't know if",
    "start": "4429833",
    "end": "4434866"
  },
  {
    "text": "the path is going to exist.",
    "start": "4434866",
    "end": "4436566"
  },
  {
    "text": "All set and look in dot content layer generated types. What do we got?",
    "start": "4501066",
    "end": "4506066"
  },
  {
    "text": "The posts. Cool. Right. So, you know, my hacky writer was not the",
    "start": "4506800",
    "end": "4513399"
  },
  {
    "text": "worst, even though it was terrible code, at least it got us here. Yeah.",
    "start": "4513399",
    "end": "4518599"
  },
  {
    "text": "Give us some gold.",
    "start": "4519899",
    "end": "4520800"
  },
  {
    "text": "That was great. So I guess next thing now that we have types being generated is",
    "start": "4526033",
    "end": "4531865"
  },
  {
    "text": "probably to assemble like a package structure so that we can create",
    "start": "4531866",
    "end": "4537833"
  },
  {
    "text": "the phantom package. Right. It's still in the stream.",
    "start": "4537833",
    "end": "4542300"
  },
  {
    "text": "We need to create modules. We need to also create the phantom package.",
    "start": "4544333",
    "end": "4550566"
  },
  {
    "text": "Right. Phantom. Good. Maybe we'll move that to a to do file.",
    "start": "4553966",
    "end": "4566366"
  },
  {
    "text": "To create modules.",
    "start": "4569866",
    "end": "4572533"
  },
  {
    "text": "Yeah. And was there really a phantom package? It's just a package.",
    "start": "4575433",
    "end": "4579966"
  },
  {
    "text": "It's a package, but I don't know if it's going to. I forget. Right. You need to create",
    "start": "4581466",
    "end": "4586800"
  },
  {
    "text": "some declaration files.",
    "start": "4586800",
    "end": "4589599"
  },
  {
    "text": "That declare the modules.",
    "start": "4592200",
    "end": "4594766"
  },
  {
    "text": "Yeah.",
    "start": "4598200",
    "end": "4598399"
  },
  {
    "text": "Cool.",
    "start": "4605866",
    "end": "4606233"
  },
  {
    "text": "It is. Push.",
    "start": "4615799",
    "end": "4618799"
  },
  {
    "text": "I hope that everybody enjoyed our stream today. We'll try to. So next week, I think it's a holiday.",
    "start": "4622100",
    "end": "4627200"
  },
  {
    "text": "Maybe we can reorganize which day we actually stream Tim. But I'll touch base the offline about that. ",
    "start": "4628366",
    "end": "4634100"
  },
  {
    "text": "For now, wish you a great evening and cheers. See ya",
    "start": "4634100",
    "end": "4639533"
  }
]