[
  {
    "text": "thanks everybody for joining this is the first edition of a new",
    "start": "15759",
    "end": "21119"
  },
  {
    "text": "like meetup slash podcast that we will try to do on",
    "start": "21119",
    "end": "27680"
  },
  {
    "text": "on a sort of bi-weekly schedule at the beginning and the purpose is take a look at the",
    "start": "27680",
    "end": "35360"
  },
  {
    "text": "applications of effect in real world projects and",
    "start": "35360",
    "end": "40399"
  },
  {
    "text": "to speak about interesting technologies and interesting ideas that we we generally have",
    "start": "40399",
    "end": "47440"
  },
  {
    "text": "and for today",
    "start": "47440",
    "end": "53120"
  },
  {
    "text": "we have here johannes johannes has built a content layer which is a really nice",
    "start": "53120",
    "end": "60399"
  },
  {
    "text": "tool that is going to talk and it's going to have a little bit of a demo",
    "start": "60399",
    "end": "66159"
  },
  {
    "text": "keep in mind live coding so everything might go wrong and he has used effect behind the scenes",
    "start": "66159",
    "end": "72960"
  },
  {
    "text": "to build up content layer as a sort of first open source project where effect is is",
    "start": "72960",
    "end": "80320"
  },
  {
    "text": "consumed almost as a transitive dependency so it's not really targeting",
    "start": "80320",
    "end": "85759"
  },
  {
    "text": "an effect audience but it's more targeting the broader",
    "start": "85759",
    "end": "91439"
  },
  {
    "text": "javascript and typescript ecosystem which i believe it's very it's very interesting",
    "start": "91439",
    "end": "97040"
  },
  {
    "text": "so i'll hand over to johannes to say his part and welcome everybody to effect",
    "start": "97040",
    "end": "103200"
  },
  {
    "text": "time all right thanks michael um yeah welcome everyone uh in the live stream and on",
    "start": "103200",
    "end": "109920"
  },
  {
    "text": "youtube uh before speaking more about effects and content layer uh just little uh",
    "start": "109920",
    "end": "116719"
  },
  {
    "text": "background on me uh i've been uh diving really deep in",
    "start": "116719",
    "end": "121759"
  },
  {
    "text": "dev tools uh for for quite a while um both on the using devtools and then sometimes i'm",
    "start": "121759",
    "end": "129280"
  },
  {
    "text": "drifting into building devtools uh if i'm unhappy with the things i've been using in the past",
    "start": "129280",
    "end": "135360"
  },
  {
    "text": "and so roughly six years ago i started a company called back then was called",
    "start": "135360",
    "end": "141440"
  },
  {
    "text": "graph cool now it's called prisma where we're building database tools so i've been",
    "start": "141440",
    "end": "148160"
  },
  {
    "text": "co-founding this company roughly six years ago uh last year i decided to take a bit of",
    "start": "148160",
    "end": "153360"
  },
  {
    "text": "a step back since i was really itching to get my own hands dirty again and was working since then like on various",
    "start": "153360",
    "end": "160480"
  },
  {
    "text": "projects helping other startups um and uh yeah somehow found my way in",
    "start": "160480",
    "end": "167760"
  },
  {
    "text": "uh into the effect yes community and uh was kindly welcomed by by michael",
    "start": "167760",
    "end": "174959"
  },
  {
    "text": "and so many others and uh yeah i was really intrigued um",
    "start": "174959",
    "end": "180640"
  },
  {
    "text": "about functional programming for for quite a while i've been using",
    "start": "180640",
    "end": "186239"
  },
  {
    "text": "haskell and scala in the past and but always kind of came back to the",
    "start": "186239",
    "end": "192959"
  },
  {
    "text": "to the web and a big fan of typescript and i wanted to",
    "start": "192959",
    "end": "198239"
  },
  {
    "text": "see hey can there be like typescript and functional programming can we have both of these together and effect yes seems",
    "start": "198239",
    "end": "205760"
  },
  {
    "text": "to be the most promising technology foundation really for that and i've been blown away with uh yeah",
    "start": "205760",
    "end": "213120"
  },
  {
    "text": "what what this gives me and uh i've been describing it to to friends that there's",
    "start": "213120",
    "end": "218879"
  },
  {
    "text": "like been few technologies that are as clear to me as like a big leap",
    "start": "218879",
    "end": "224560"
  },
  {
    "text": "forward in in various aspects similar to how how i would describe the",
    "start": "224560",
    "end": "231120"
  },
  {
    "text": "um benefit of going from jquery to react or from javascript to typescript i think",
    "start": "231120",
    "end": "236799"
  },
  {
    "text": "uh having learned effect um and even though it's not as easy to learn right now but having gone through uh learning",
    "start": "236799",
    "end": "244560"
  },
  {
    "text": "it i really get like a similar value um benefit and i've been using it in",
    "start": "244560",
    "end": "249920"
  },
  {
    "text": "various projects and one of these projects is called content layer which is by now also open source that's",
    "start": "249920",
    "end": "256720"
  },
  {
    "text": "one of the little projects i'm working on um i'm working on it on behalf of another",
    "start": "256720",
    "end": "262400"
  },
  {
    "text": "startup i'm advising called stackpit they're building a very interesting",
    "start": "262400",
    "end": "267759"
  },
  {
    "text": "website builder but for developers and i'll tell you more about it in a second",
    "start": "267759",
    "end": "273680"
  },
  {
    "text": "but uh yeah so the the way how i thought about",
    "start": "273680",
    "end": "278800"
  },
  {
    "text": "this uh talk conversation presentation live debugging session whatever it will",
    "start": "278800",
    "end": "285199"
  },
  {
    "text": "uh end up being is that i'll um start off with giving a",
    "start": "285199",
    "end": "290320"
  },
  {
    "text": "little demo of what content layer is also before that motivate what content layer",
    "start": "290320",
    "end": "296880"
  },
  {
    "text": "is trying to solve and um then as you understand what it's",
    "start": "296880",
    "end": "302240"
  },
  {
    "text": "doing uh trying to take you behind the scenes into actually looking into the code base as",
    "start": "302240",
    "end": "309360"
  },
  {
    "text": "an example of kind of like a real world application where effect yes is used",
    "start": "309360",
    "end": "316080"
  },
  {
    "text": "and a disclaimer already i've probably made many many mistakes in using effect",
    "start": "316080",
    "end": "323360"
  },
  {
    "text": "yes there are probably much better ways to use effect and i hope michael can point these out",
    "start": "323360",
    "end": "329840"
  },
  {
    "text": "uh to to me and in this very public manner so this is i guess um what people refer to as like",
    "start": "329840",
    "end": "337280"
  },
  {
    "text": "learn in public uh right here live um so and yeah then let's see where the",
    "start": "337280",
    "end": "343360"
  },
  {
    "text": "session takes us i have a few ideas where uh i think things can could be",
    "start": "343360",
    "end": "348479"
  },
  {
    "text": "improved but um yeah so uh let's let's get started um so content layer",
    "start": "348479",
    "end": "356080"
  },
  {
    "text": "is a tool that helps you um work with content so",
    "start": "356080",
    "end": "361280"
  },
  {
    "text": "um let's say you're building a site with",
    "start": "361280",
    "end": "366400"
  },
  {
    "text": "next js next js.org",
    "start": "366400",
    "end": "371440"
  },
  {
    "text": "next is a great site framework app framework um but it leaves a lot of the",
    "start": "371440",
    "end": "378000"
  },
  {
    "text": "things you need to do still up to the developer as opposed to something like gatsby which is much more like a",
    "start": "378000",
    "end": "385919"
  },
  {
    "text": "full framework which takes care of like many many things for you but also there's a lot more that you need to",
    "start": "385919",
    "end": "391199"
  },
  {
    "text": "learn and has a few other disadvantages so it's was always uh with things always",
    "start": "391199",
    "end": "396319"
  },
  {
    "text": "it's a it's a trade-off it depends um i find myself reaching for next chest for",
    "start": "396319",
    "end": "401759"
  },
  {
    "text": "almost all my web projects but in next year's then it's a question of like hey",
    "start": "401759",
    "end": "407199"
  },
  {
    "text": "how do i deal with content so by content i mean content that might live as markdown files mdx files um",
    "start": "407199",
    "end": "416080"
  },
  {
    "text": "but might also be content that lives in a headless cms like contentful etc and",
    "start": "416080",
    "end": "422160"
  },
  {
    "text": "when you're using next or similar framework um it's basically up to you to",
    "start": "422160",
    "end": "427680"
  },
  {
    "text": "wire everything up um i've yeah had to do this a bunch of times",
    "start": "427680",
    "end": "433440"
  },
  {
    "text": "with various projects and i thought hey there has to be a better way and that has led to content layer so um there's a",
    "start": "433440",
    "end": "440880"
  },
  {
    "text": "few sites that are already uh using content layer today so for example",
    "start": "440880",
    "end": "446880"
  },
  {
    "text": "uh graph cms which is the headless cms itself they're using um content layer for the docs",
    "start": "446880",
    "end": "452800"
  },
  {
    "text": "uh lee rob robinson um who's working at vercelle um this page is actually backed",
    "start": "452800",
    "end": "459360"
  },
  {
    "text": "by content layer so if you're like going on a specific um like for example on a",
    "start": "459360",
    "end": "464879"
  },
  {
    "text": "blog post by lee or uh like all of this content um is",
    "start": "464879",
    "end": "472240"
  },
  {
    "text": "written in mdx and fed into nexus",
    "start": "472240",
    "end": "477440"
  },
  {
    "text": "through uh through mdx uh sorry it's through content layer so um here for",
    "start": "477440",
    "end": "483199"
  },
  {
    "text": "example when we're looking at the source of this um this is using content layer so all of",
    "start": "483199",
    "end": "489440"
  },
  {
    "text": "this uh content here and the blog sorry my thing is that behind the scenes here uh",
    "start": "489440",
    "end": "496319"
  },
  {
    "text": "effect is used as a transitive dependency which is also the reason why the amount of usage on the on the",
    "start": "496319",
    "end": "503599"
  },
  {
    "text": "repository in effect yes it's kind of growing progressively more and more",
    "start": "503599",
    "end": "509280"
  },
  {
    "text": "with repositories that have nothing to do with effect that is a is a great point let's see effect",
    "start": "509280",
    "end": "517518"
  },
  {
    "text": "ts we've got the",
    "start": "517519",
    "end": "523360"
  },
  {
    "text": "path wrong let's see how this is growing yeah i suspect a decent number of usage is",
    "start": "523360",
    "end": "531680"
  },
  {
    "text": "contributed by uh content there um i'll get to that in a second but so i just",
    "start": "531680",
    "end": "536880"
  },
  {
    "text": "wanted to point out like here um this content that's powering um",
    "start": "536880",
    "end": "543040"
  },
  {
    "text": "this website is actually just marked on mdx and content",
    "start": "543040",
    "end": "548640"
  },
  {
    "text": "layer takes care of providing those so i'll show this to you at as a smaller",
    "start": "548640",
    "end": "554560"
  },
  {
    "text": "example um so here i've booted up gitpod",
    "start": "554560",
    "end": "560480"
  },
  {
    "text": "gitpod is an alternative to github code spaces uh which is uh free to use and",
    "start": "560480",
    "end": "567120"
  },
  {
    "text": "and really awesome uh so this is what i'm gonna gonna use here um so",
    "start": "567120",
    "end": "572959"
  },
  {
    "text": "and this is this is just loaded up this repository in vs code in the browser so and this",
    "start": "572959",
    "end": "580080"
  },
  {
    "text": "repository has a folder of examples so here's for example a",
    "start": "580080",
    "end": "587440"
  },
  {
    "text": "example about mdx so i'll i'm currently in this directory",
    "start": "587440",
    "end": "593440"
  },
  {
    "text": "and i'll just be firing up next dev um i'll open this in the",
    "start": "593440",
    "end": "599200"
  },
  {
    "text": "browser let me put this next to each other so",
    "start": "599200",
    "end": "605760"
  },
  {
    "text": "let's see what what's going on here um again just gonna demo content layer that",
    "start": "605760",
    "end": "611519"
  },
  {
    "text": "you have an idea of what it's doing and then we'll do what i guess most of us are here for is like hey let's look at",
    "start": "611519",
    "end": "618000"
  },
  {
    "text": "some effect code um so what is going on here so here we have a very minimal page uh",
    "start": "618000",
    "end": "625279"
  },
  {
    "text": "has like a little navigation hello world just one second can everybody see the font size",
    "start": "625279",
    "end": "631200"
  },
  {
    "text": "correctly because i'm seeing some messages coming up",
    "start": "631200",
    "end": "636399"
  },
  {
    "text": "um okay",
    "start": "636399",
    "end": "640079"
  },
  {
    "text": "yes okay everybody's everyone's fine i'm just interpreting that message go on all right cool",
    "start": "642399",
    "end": "649360"
  },
  {
    "text": "um so yeah various um like sub pages here uh here's like a sub page here's a",
    "start": "649360",
    "end": "654959"
  },
  {
    "text": "sub page the content so this is a very minimal example uh the content of this",
    "start": "654959",
    "end": "660000"
  },
  {
    "text": "comes from here so here is like this index mdx file um let's say",
    "start": "660000",
    "end": "665920"
  },
  {
    "text": "we want to change this and say hey hey effect",
    "start": "665920",
    "end": "671600"
  },
  {
    "text": "i'll save this and this live reloads um live reloading is for example one of the",
    "start": "671600",
    "end": "677040"
  },
  {
    "text": "features of of content layer and ask one thing yes absolutely i see a",
    "start": "677040",
    "end": "683920"
  },
  {
    "text": "button there it titled me that doesn't seem to be standard html",
    "start": "683920",
    "end": "689519"
  },
  {
    "text": "is that a react component um so that that might be an entirely different",
    "start": "689519",
    "end": "694720"
  },
  {
    "text": "conversation this is using uh mdx uh condylar supports both markdown and mdx",
    "start": "694720",
    "end": "700560"
  },
  {
    "text": "mdx is basically marked on as a foundation and then it supports um use importing um",
    "start": "700560",
    "end": "708000"
  },
  {
    "text": "importing rack components okay so markdom itself supports html and this",
    "start": "708000",
    "end": "713200"
  },
  {
    "text": "basically takes it to the next level and supports react components so you thought okay button that's not valid html",
    "start": "713200",
    "end": "721440"
  },
  {
    "text": "so the way our mdx is used and we will see that here is that you can",
    "start": "721440",
    "end": "728000"
  },
  {
    "text": "have marked on as our react components and you wire them up like this so",
    "start": "728000",
    "end": "734240"
  },
  {
    "text": "uh this is the content you saw content live for loading and so now it's a matter of",
    "start": "734240",
    "end": "739760"
  },
  {
    "text": "like the point of content layer is making it easy to let developers use the",
    "start": "739760",
    "end": "745120"
  },
  {
    "text": "content transform it in a way that you can easily use it in your next.js app or",
    "start": "745120",
    "end": "750800"
  },
  {
    "text": "in your other whatever framework you're using and all that content layer does",
    "start": "750800",
    "end": "756079"
  },
  {
    "text": "is here you point it to where does the content live so here we are using a",
    "start": "756079",
    "end": "761760"
  },
  {
    "text": "local source um with source files but could also be source contentful source",
    "start": "761760",
    "end": "766800"
  },
  {
    "text": "notion whatever will be supported at some point contentful is already supported",
    "start": "766800",
    "end": "772480"
  },
  {
    "text": "and what content layer then does which runs as part of your next dev server",
    "start": "772480",
    "end": "778639"
  },
  {
    "text": "is that it puts here into this dot content layer folder",
    "start": "778639",
    "end": "785200"
  },
  {
    "text": "um it has here like beta it basically turns all of your",
    "start": "785200",
    "end": "790720"
  },
  {
    "text": "all of your content files uh conveniently into json files",
    "start": "790720",
    "end": "796480"
  },
  {
    "text": "and these json files is something that your uh nexus app can actually deal with",
    "start": "796480",
    "end": "802880"
  },
  {
    "text": "so this is what we're what we're seeing here here we're saying um give me all the docs",
    "start": "802880",
    "end": "808880"
  },
  {
    "text": "um from we just imported from here and this is something then our next shares app can deal with so",
    "start": "808880",
    "end": "816399"
  },
  {
    "text": "here we have access to those documents in a typed manner exactly that's so we're getting the",
    "start": "816399",
    "end": "823360"
  },
  {
    "text": "content transformed into data and for convenience for people who use",
    "start": "823360",
    "end": "828800"
  },
  {
    "text": "typescript i guess most of us here are using typescript we get even types for that content so",
    "start": "828800",
    "end": "836000"
  },
  {
    "text": "specifically when we look at this index",
    "start": "836000",
    "end": "843040"
  },
  {
    "text": "mdx json side by side with the markdown source or",
    "start": "843040",
    "end": "848560"
  },
  {
    "text": "the index source we see okay title title body and we even get the body",
    "start": "848560",
    "end": "853920"
  },
  {
    "text": "pre-processed in a way that react has an easier time dealing with it",
    "start": "853920",
    "end": "859120"
  },
  {
    "text": "and yeah so and then we're basically let's put this away again",
    "start": "859120",
    "end": "866480"
  },
  {
    "text": "let's briefly understand how this works so we're first generating all the paths",
    "start": "866480",
    "end": "871760"
  },
  {
    "text": "the paths is that nexus understands root this this is like sub a and so on um",
    "start": "871760",
    "end": "880320"
  },
  {
    "text": "this is how we're dealing with a path very simple uh and then get static props for a given",
    "start": "880320",
    "end": "886000"
  },
  {
    "text": "path uh we're fetching the right uh docs all docks is just an array uh it's just",
    "start": "886000",
    "end": "892880"
  },
  {
    "text": "like a json array um of uh of documents um we're finding the",
    "start": "892880",
    "end": "898639"
  },
  {
    "text": "right one and then passing it back we're also building this little helper thingy nav info which is like all the routes",
    "start": "898639",
    "end": "905440"
  },
  {
    "text": "here um and then we're basically just uh passing this over to this react",
    "start": "905440",
    "end": "910560"
  },
  {
    "text": "component where we see here doc and the great thing here is with the stock we get uh as michael pointed out we get",
    "start": "910560",
    "end": "918000"
  },
  {
    "text": "type safety here we see title we see type all of that um and yep this works",
    "start": "918000",
    "end": "924240"
  },
  {
    "text": "with mdx etc so um just pointing out a few more uh neat features about this",
    "start": "924240",
    "end": "931440"
  },
  {
    "text": "uh one of it is like the developer overall developer experience like i've tried to make this as nice as possible",
    "start": "931440",
    "end": "938480"
  },
  {
    "text": "to use was like type save etc live reload um another of it is uh validation",
    "start": "938480",
    "end": "946000"
  },
  {
    "text": "so you see here is part of the dev server live reload is also on the mdx files and",
    "start": "946000",
    "end": "952399"
  },
  {
    "text": "whatever content you link into exactly so it actually uses the the live reload",
    "start": "952399",
    "end": "957519"
  },
  {
    "text": "infrastructure from nexus or what framework you're using so um since this",
    "start": "957519",
    "end": "963199"
  },
  {
    "text": "is what are you you're running basically a compiler on the side where you are",
    "start": "963199",
    "end": "968399"
  },
  {
    "text": "exactly so there's like a little um live watcher that basically watches your content as it changes it updates um",
    "start": "968399",
    "end": "976240"
  },
  {
    "text": "that's uh that that jason um and because it's just jason uh",
    "start": "976240",
    "end": "981360"
  },
  {
    "text": "nextjs can understand that and automatically deals with it so when we're changing this to hello world 2",
    "start": "981360",
    "end": "990320"
  },
  {
    "text": "notice that that well sometimes here actually vs code has a harder time",
    "start": "990320",
    "end": "996959"
  },
  {
    "text": "uh live reloading i think you need to switch the tab once um and so just automatically live reloads",
    "start": "996959",
    "end": "1004320"
  },
  {
    "text": "um and yeah but even more than that there's also validation so let's say we have a",
    "start": "1004320",
    "end": "1010800"
  },
  {
    "text": "extra field high um this will even give us a warning hey",
    "start": "1010800",
    "end": "1016720"
  },
  {
    "text": "saying like hey we don't we don't notice we haven't configured this here um we",
    "start": "1016720",
    "end": "1021839"
  },
  {
    "text": "could also have like another field like sub title",
    "start": "1021839",
    "end": "1027918"
  },
  {
    "text": "type string and let's say we make it required",
    "start": "1027919",
    "end": "1033678"
  },
  {
    "text": "um then this would actually even complain and saying like hey we're",
    "start": "1033679",
    "end": "1038798"
  },
  {
    "text": "missing these required fields first three documents you saw now that these documents are no longer there um that",
    "start": "1038799",
    "end": "1045600"
  },
  {
    "text": "that fails we can remove this again um and then this should work again so a bunch",
    "start": "1045600",
    "end": "1052640"
  },
  {
    "text": "of little features uh the other thing that i wanted to point out is speed and performance um as i mentioned initially",
    "start": "1052640",
    "end": "1060400"
  },
  {
    "text": "i've been using gatsby in the past and i think it's great technology um but it does a lot and that",
    "start": "1060400",
    "end": "1067440"
  },
  {
    "text": "comes at a um at the cost of speed or like slow performance sometimes",
    "start": "1067440",
    "end": "1073280"
  },
  {
    "text": "so uh just for for fun of it uh i tried to",
    "start": "1073280",
    "end": "1078799"
  },
  {
    "text": "um also check out the entire gatsby docks which i think takes in the order",
    "start": "1078799",
    "end": "1083840"
  },
  {
    "text": "of like 20 or 30 minutes to build um in here and uh",
    "start": "1083840",
    "end": "1089919"
  },
  {
    "text": "just running content layer over it so yarn content layer",
    "start": "1089919",
    "end": "1095679"
  },
  {
    "text": "build uh that should take uh in the order of seconds let's let's give it a second",
    "start": "1095679",
    "end": "1103520"
  },
  {
    "text": "um there we go so this now like ran through the entire content i think",
    "start": "1103520",
    "end": "1108960"
  },
  {
    "text": "that took like you know 10 seconds or so like you can add another 30 seconds for the next build uh so you stay in the",
    "start": "1108960",
    "end": "1116400"
  },
  {
    "text": "realm of like a minute uh instead of like half an hour uh which again it's kind of unfair comparison",
    "start": "1116400",
    "end": "1123360"
  },
  {
    "text": "because that's a lot less but if you need less i think it's a it's a good tool anyway",
    "start": "1123360",
    "end": "1128640"
  },
  {
    "text": "let's uh look into how content layer actually works unless",
    "start": "1128640",
    "end": "1134000"
  },
  {
    "text": "someone who is currently listening and watching has a question about what",
    "start": "1134000",
    "end": "1139679"
  },
  {
    "text": "content layer is",
    "start": "1139679",
    "end": "1142799"
  },
  {
    "text": "i think doing was a question in the in the chat and it was around hot module replacement",
    "start": "1149600",
    "end": "1156559"
  },
  {
    "text": "just to be clear you're not interacting in any way with module replacement you're just replacing files on file",
    "start": "1156559",
    "end": "1163360"
  },
  {
    "text": "system and those are picked up by inside the framework exactly in in that regard it's it's",
    "start": "1163360",
    "end": "1169280"
  },
  {
    "text": "simple and elegant i think it's a handover to the framework side basically",
    "start": "1169280",
    "end": "1175039"
  },
  {
    "text": "the only thing that that's really uh is done here um that's where we need to",
    "start": "1175039",
    "end": "1180480"
  },
  {
    "text": "help nexus a little bit and this is in the form of a uh here as a nexus",
    "start": "1180480",
    "end": "1188720"
  },
  {
    "text": "plugin so uh the only thing that this really does here is with content layer",
    "start": "1188720",
    "end": "1194240"
  },
  {
    "text": "is it tells webpack to by default webpack doesn't",
    "start": "1194240",
    "end": "1199520"
  },
  {
    "text": "watch for changes in node modules um however content layer is generating",
    "start": "1199520",
    "end": "1204640"
  },
  {
    "text": "these json files into like you see it here this is actually just a sim link to node modules on content layer um and",
    "start": "1204640",
    "end": "1212000"
  },
  {
    "text": "this is where we are importing it from and so that nexus or webpack specifically is still watching for",
    "start": "1212000",
    "end": "1218720"
  },
  {
    "text": "changes going on and there this is really the only thing this does additionally to like running this little",
    "start": "1218720",
    "end": "1224240"
  },
  {
    "text": "dev server um but there's like additionally there's no magic it's just um like very simple",
    "start": "1224240",
    "end": "1231280"
  },
  {
    "text": "sorry i think you had a question yeah my my other question uh is hot",
    "start": "1231280",
    "end": "1236640"
  },
  {
    "text": "module i'm not sure how it's called updating like not replacement but um",
    "start": "1236640",
    "end": "1243520"
  },
  {
    "text": "updating it and that's that would be webpack's job as well then",
    "start": "1243520",
    "end": "1248960"
  },
  {
    "text": "exactly i guess okay cool um and my other question was breakpoints um that was at the beginning and when",
    "start": "1248960",
    "end": "1255440"
  },
  {
    "text": "you were talking about um markup files so there is no css involved so",
    "start": "1255440",
    "end": "1262640"
  },
  {
    "text": "how is breakpoint management done when i want to switch to a smaller screen let's",
    "start": "1262640",
    "end": "1267919"
  },
  {
    "text": "say the smallest okay yeah this is completely apple watch for example",
    "start": "1267919",
    "end": "1273520"
  },
  {
    "text": "this is completely decoupled so content layer as the name might already suggest just as consequent with the with the",
    "start": "1273520",
    "end": "1279120"
  },
  {
    "text": "content um and typically it's i think it's um some people use mdx i haven't seen it as",
    "start": "1279120",
    "end": "1285760"
  },
  {
    "text": "much i think typically you're rather just like looking at a simple um",
    "start": "1285760",
    "end": "1292640"
  },
  {
    "text": "markdown file which is markdown files which is just just content",
    "start": "1292640",
    "end": "1298799"
  },
  {
    "text": "and then that content is just then turned into data and the same ways like",
    "start": "1298799",
    "end": "1304240"
  },
  {
    "text": "data in the database isn't really concerned with styling but that's like where like in your react front and like",
    "start": "1304240",
    "end": "1310320"
  },
  {
    "text": "to be clear using mbx i think it gives you a little bit more",
    "start": "1310320",
    "end": "1315760"
  },
  {
    "text": "of a syntax dsl on your content i imagine if you have like a blog post you're gonna have images and you wanna",
    "start": "1315760",
    "end": "1322880"
  },
  {
    "text": "use standard components for those so you can pass it down from from react but then it's styling it's completely",
    "start": "1322880",
    "end": "1328880"
  },
  {
    "text": "decoupling exactly exactly so that's the frameworks business then yeah",
    "start": "1328880",
    "end": "1334080"
  },
  {
    "text": "completely okay and i can feed a feeded markdown mdx and html",
    "start": "1334080",
    "end": "1343440"
  },
  {
    "text": "if you'd want to i think you typically want to yeah like an advantage yeah",
    "start": "1343440",
    "end": "1349200"
  },
  {
    "text": "okay i would you yeah well um i would probably uh call it a wrap",
    "start": "1349200",
    "end": "1355600"
  },
  {
    "text": "here for the the demo part um maybe if you're looking into a more specific",
    "start": "1355600",
    "end": "1360960"
  },
  {
    "text": "uh feature set um i'd be maybe coming back to that but uh i would",
    "start": "1360960",
    "end": "1366400"
  },
  {
    "text": "for now suggest we're we're actually diving into the um effective specific parts",
    "start": "1366400",
    "end": "1372480"
  },
  {
    "text": "um and uh yeah if there are any questions uh please bring them up um but for now",
    "start": "1372480",
    "end": "1380240"
  },
  {
    "text": "i'll close this examples repo and i'll also close the dev server um and we're",
    "start": "1380240",
    "end": "1386720"
  },
  {
    "text": "looking into the actual i have one yes i have one one question actually how does it work",
    "start": "1386720",
    "end": "1393120"
  },
  {
    "text": "with i mean if you are deleting files are you gonna delete files correctly in the",
    "start": "1393120",
    "end": "1399919"
  },
  {
    "text": "hand folder the compiled output or like typescript for example i have to if i remove i have",
    "start": "1399919",
    "end": "1406960"
  },
  {
    "text": "to clean up the views um i think that that should be the case yeah i can see that",
    "start": "1406960",
    "end": "1414320"
  },
  {
    "text": "um cool so let's look into this so overall this entire um repository it's",
    "start": "1414320",
    "end": "1420960"
  },
  {
    "text": "all just like one monorepo uh consisting of multiple packages for the monorepo",
    "start": "1420960",
    "end": "1427200"
  },
  {
    "text": "management uh i'm using uh yarn two or guns free um",
    "start": "1427200",
    "end": "1433360"
  },
  {
    "text": "and um then basically just typescript and the uh typescript setup that effect ts",
    "start": "1433360",
    "end": "1440720"
  },
  {
    "text": "requires i'll explain more about that in a second from a user point of view",
    "start": "1440720",
    "end": "1447520"
  },
  {
    "text": "you what you would need to install as a package is content layer and if you're using next",
    "start": "1447520",
    "end": "1453919"
  },
  {
    "text": "chess i also recommend the next content layer package um from an implementation",
    "start": "1453919",
    "end": "1460000"
  },
  {
    "text": "perspective here content this content layer package is basically just re-um exporting",
    "start": "1460000",
    "end": "1468080"
  },
  {
    "text": "uh various sub packages which will now look for the sake of convenience for the",
    "start": "1468080",
    "end": "1473360"
  },
  {
    "text": "user um and these are the packages that we that we're now gonna gonna look into",
    "start": "1473360",
    "end": "1478720"
  },
  {
    "text": "content layer is um built in a plug-in oriented way that means we have",
    "start": "1478720",
    "end": "1485919"
  },
  {
    "text": "particularly around the the concept of a source we have um various plugins so",
    "start": "1485919",
    "end": "1492159"
  },
  {
    "text": "here for example we're seeing a source for contentful we're seeing a source for files",
    "start": "1492159",
    "end": "1499360"
  },
  {
    "text": "there's also a experimental source for sanity which is another headless cms",
    "start": "1499360",
    "end": "1506720"
  },
  {
    "text": "we've so far interacted with content layer from the next plugin perspective but content layer also has a cli which",
    "start": "1506720",
    "end": "1514320"
  },
  {
    "text": "does exactly the same the next plot the next js plug-in is just there for the sake of",
    "start": "1514320",
    "end": "1520320"
  },
  {
    "text": "convenience but i think the cli might be a good entry point to to think about um",
    "start": "1520320",
    "end": "1528480"
  },
  {
    "text": "so um just also demonstrating uh what that uh what that would do so the yarn",
    "start": "1528480",
    "end": "1534000"
  },
  {
    "text": "content layer uh cli here um let's take a look has a build command",
    "start": "1534000",
    "end": "1539760"
  },
  {
    "text": "and a dev command def is basically the same as build but with a watch mode",
    "start": "1539760",
    "end": "1545039"
  },
  {
    "text": "so let's go into a smaller example so for example the starter one",
    "start": "1545039",
    "end": "1551600"
  },
  {
    "text": "yarn content layer later",
    "start": "1551600",
    "end": "1557679"
  },
  {
    "text": "um build um so this is now",
    "start": "1557679",
    "end": "1563360"
  },
  {
    "text": "doing its thing so let's take a look at the cli how this is working so content",
    "start": "1563360",
    "end": "1569120"
  },
  {
    "text": "layer uh the bin here is just importing content layer cli",
    "start": "1569120",
    "end": "1576080"
  },
  {
    "text": "and importing this run thing from it and then running it",
    "start": "1576080",
    "end": "1581200"
  },
  {
    "text": "now let's take a look at that so here we have content layer cli",
    "start": "1581200",
    "end": "1587440"
  },
  {
    "text": "and then index.js and now we're seeing some",
    "start": "1587440",
    "end": "1592559"
  },
  {
    "text": "effect stuff so now we're on track so let's take a look",
    "start": "1592559",
    "end": "1597760"
  },
  {
    "text": "here um i'm right now for example now uh one of the latest entry in the ecosystem is",
    "start": "1597760",
    "end": "1604960"
  },
  {
    "text": "is a port of z ocli i i just wanted to mention i just wanted to mention so here as the cli",
    "start": "1604960",
    "end": "1611120"
  },
  {
    "text": "a framework it's very lightweight i'm using clipping i think that's how you",
    "start": "1611120",
    "end": "1617120"
  },
  {
    "text": "pronounce it it's by if i'm not mistaken by the author of yarn mile",
    "start": "1617120",
    "end": "1624480"
  },
  {
    "text": "and it's actually really nice uh to to use um there's many cli ish libraries",
    "start": "1624480",
    "end": "1630720"
  },
  {
    "text": "and frameworks and i haven't fallen in love with any particular one yet but this is uh one of the better ones i've",
    "start": "1630720",
    "end": "1637360"
  },
  {
    "text": "used um but there is now also an addition um in the effect uh ecosystem um called",
    "start": "1637360",
    "end": "1644799"
  },
  {
    "text": "effects cli uh i think by someone called uh i think it's max max sound which",
    "start": "1644799",
    "end": "1651360"
  },
  {
    "text": "should be in the field actually i i might port this actually um yeah and max seems to be here in the",
    "start": "1651360",
    "end": "1658399"
  },
  {
    "text": "in the audience uh so uh let's take a look and to we just see another just just mention it it",
    "start": "1658399",
    "end": "1666080"
  },
  {
    "text": "would be nice to have like another session of these effect times and trying to port",
    "start": "1666080",
    "end": "1672240"
  },
  {
    "text": "these to zero cli if max wants to do it yeah absolutely",
    "start": "1672240",
    "end": "1677840"
  },
  {
    "text": "um cool so let's take a look at the build command build command",
    "start": "1677840",
    "end": "1683520"
  },
  {
    "text": "extends a base command and just that we understand what the space",
    "start": "1683520",
    "end": "1689440"
  },
  {
    "text": "command thing is doing let's put this side by side here the space command is just extending well",
    "start": "1689440",
    "end": "1696799"
  },
  {
    "text": "object oriented programming has extending another command which uh then comes from",
    "start": "1696799",
    "end": "1703440"
  },
  {
    "text": "i should mention i'm not against in general i have really nothing against it it has its place",
    "start": "1703440",
    "end": "1709440"
  },
  {
    "text": "so the the entire point of like the space command here is to encapsulate a couple of like common things",
    "start": "1709440",
    "end": "1714960"
  },
  {
    "text": "uh across uh across the entire cli so for example since content layer has this config",
    "start": "1714960",
    "end": "1721360"
  },
  {
    "text": "here's a config path um and and so on and then the other thing specifically for effectives is",
    "start": "1721360",
    "end": "1728559"
  },
  {
    "text": "that we're trying to provide a more effect",
    "start": "1728559",
    "end": "1733600"
  },
  {
    "text": "native entry point for each command so by default uh",
    "start": "1733600",
    "end": "1739039"
  },
  {
    "text": "companion has this execute uh method that you need to implement and",
    "start": "1739039",
    "end": "1744080"
  },
  {
    "text": "they become like your main your main functions for exactly exactly and here i'm basically",
    "start": "1744080",
    "end": "1749919"
  },
  {
    "text": "just delegating this to execute safe which is where we're finally in effect",
    "start": "1749919",
    "end": "1755039"
  },
  {
    "text": "land so this is our this is our entry point and um then each command you can see",
    "start": "1755039",
    "end": "1760640"
  },
  {
    "text": "there that we execution executes safe you also have other as tracer so i guess",
    "start": "1760640",
    "end": "1766240"
  },
  {
    "text": "you're also providing the tracing facility through that exactly yep so that might actually also",
    "start": "1766240",
    "end": "1772799"
  },
  {
    "text": "be a good point uh to to like look into in a second um",
    "start": "1772799",
    "end": "1777919"
  },
  {
    "text": "so yeah and then each command so for example here also the def command is",
    "start": "1777919",
    "end": "1783919"
  },
  {
    "text": "just implementing this execute save and here calling the respective kind of",
    "start": "1783919",
    "end": "1790159"
  },
  {
    "text": "business logic of the overall machinery so",
    "start": "1790159",
    "end": "1795600"
  },
  {
    "text": "there's one one thing here on the on the right side in line 34 it seems you're using tough",
    "start": "1795600",
    "end": "1801840"
  },
  {
    "text": "calls and and after honest it appears that top codes doesn't cannot catch the",
    "start": "1801840",
    "end": "1809600"
  },
  {
    "text": "the interruption causes that that also reproduces in in zeo so",
    "start": "1809600",
    "end": "1815279"
  },
  {
    "text": "it might be intended behavior i would suggest moving that to a tdot run promise exit and just check",
    "start": "1815279",
    "end": "1823039"
  },
  {
    "text": "left or right in the in the exit side okay that that's a that's a great point",
    "start": "1823039",
    "end": "1828720"
  },
  {
    "text": "um i'll i've actually prepared a little notes uh document here where we can keep",
    "start": "1828720",
    "end": "1834799"
  },
  {
    "text": "track of of these change suggestions so i i might actually just uh note just",
    "start": "1834799",
    "end": "1841200"
  },
  {
    "text": "down yeah so here uh instead of this",
    "start": "1841200",
    "end": "1846880"
  },
  {
    "text": "oh let's close this i worked for a while",
    "start": "1846880",
    "end": "1853360"
  },
  {
    "text": "under the assumption that it was catching interruption causes but apparently it's",
    "start": "1853360",
    "end": "1858399"
  },
  {
    "text": "not like that even in here so here um",
    "start": "1858399",
    "end": "1864320"
  },
  {
    "text": "use t run promise exit cool",
    "start": "1864320",
    "end": "1869760"
  },
  {
    "text": "um i'll try to like make a first vertical slice at everything and then i think we",
    "start": "1869760",
    "end": "1875600"
  },
  {
    "text": "can maybe i've shared the link with you uh for for this notion documents yeah if i have free to go a lot to to take some",
    "start": "1875600",
    "end": "1882720"
  },
  {
    "text": "notes and then then we can go through everything um cool so uh",
    "start": "1882720",
    "end": "1889760"
  },
  {
    "text": "right one one interesting point maybe uh as well to um to already go into a",
    "start": "1889760",
    "end": "1895840"
  },
  {
    "text": "little bit is like um here i'm providing a layer um i suppose most of you uh who are",
    "start": "1895840",
    "end": "1903200"
  },
  {
    "text": "interested in effect have heard of like what a layer is um and here we're",
    "start": "1903200",
    "end": "1908240"
  },
  {
    "text": "providing a layer for tracing uh for open telemetry tracing i'm a big fan of",
    "start": "1908240",
    "end": "1913679"
  },
  {
    "text": "open telemetry tracing um that basically gives me for it's kind of like if you",
    "start": "1913679",
    "end": "1919039"
  },
  {
    "text": "can think about it if you're not familiar with it as like a better console log um",
    "start": "1919039",
    "end": "1924559"
  },
  {
    "text": "that gives you like a nice trace view of um of your executed application after",
    "start": "1924559",
    "end": "1930559"
  },
  {
    "text": "you run it so um let's uh i i can i can give you a quick uh",
    "start": "1930559",
    "end": "1938480"
  },
  {
    "text": "example of this i've actually have here uh a infra folder with jagger so we can",
    "start": "1938480",
    "end": "1947039"
  },
  {
    "text": "hear darker compose up jagger uh as well as this booting uh",
    "start": "1947039",
    "end": "1954320"
  },
  {
    "text": "jager uh is by developed by uber and um is",
    "start": "1954320",
    "end": "1960880"
  },
  {
    "text": "a um open this uh open telemetry back end um so this gives us a nice ui",
    "start": "1960880",
    "end": "1968720"
  },
  {
    "text": "for uh for open telemetry um so i think we should be able to",
    "start": "1968720",
    "end": "1977440"
  },
  {
    "text": "let's open this yeah so this is this is jager and um with that now in place",
    "start": "1977440",
    "end": "1984960"
  },
  {
    "text": "i think the next time um i'm running",
    "start": "1984960",
    "end": "1990320"
  },
  {
    "text": "this",
    "start": "1990320",
    "end": "1992639"
  },
  {
    "text": "this should automatically send things to uh to open telemetry",
    "start": "1996720",
    "end": "2002880"
  },
  {
    "text": "content layer cli and now we're seeing here um our execution",
    "start": "2002880",
    "end": "2008960"
  },
  {
    "text": "uh and so this is uh in my opinion really really useful once you're like getting a bit used to it so this gives",
    "start": "2008960",
    "end": "2016399"
  },
  {
    "text": "me an entire view of like what has happened so that the overall command uh",
    "start": "2016399",
    "end": "2022159"
  },
  {
    "text": "took 300 milliseconds to execute and now we're seeing it broken down into what",
    "start": "2022159",
    "end": "2027679"
  },
  {
    "text": "has happened so this is our entry point build command execute save so this is uh here what",
    "start": "2027679",
    "end": "2035200"
  },
  {
    "text": "we've just been looking at so this is our entry point from now from there on",
    "start": "2035200",
    "end": "2040640"
  },
  {
    "text": "we're starting to kind of like take note of what's going on and this is also here",
    "start": "2040640",
    "end": "2047360"
  },
  {
    "text": "this open telemetry with span that's exactly uh what we have here so",
    "start": "2047360",
    "end": "2054079"
  },
  {
    "text": "um this trace here allows us to clear that route the the execution of the",
    "start": "2054079",
    "end": "2060638"
  },
  {
    "text": "child so if you have any form of error it's correctly traced and rendered in the in the telemetry side and",
    "start": "2060639",
    "end": "2067919"
  },
  {
    "text": "everything works as expected okay um exactly yeah so now let's take a look",
    "start": "2067919",
    "end": "2074878"
  },
  {
    "text": "into like how the various pieces i mean affect yes uh one",
    "start": "2074879",
    "end": "2080320"
  },
  {
    "text": "one major benefit of it is like that you can compose a bigger program out of smaller pieces very nicely so",
    "start": "2080320",
    "end": "2087679"
  },
  {
    "text": "one part of the of the program here is um getting the config we also see it",
    "start": "2087679",
    "end": "2094240"
  },
  {
    "text": "here getting the config it actually takes the longest part um in the entire execution here um",
    "start": "2094240",
    "end": "2102000"
  },
  {
    "text": "there's room for for optimization but overall i think it's still still right",
    "start": "2102000",
    "end": "2107680"
  },
  {
    "text": "um and yeah we can so getting the config means",
    "start": "2107680",
    "end": "2113680"
  },
  {
    "text": "here in this specific example let's take a look at it one more time um",
    "start": "2113680",
    "end": "2120720"
  },
  {
    "text": "here we're in the starter so when we're in this directory",
    "start": "2120720",
    "end": "2126079"
  },
  {
    "text": "and running this command then this automatically tries to look for this content layer config ts",
    "start": "2126079",
    "end": "2133440"
  },
  {
    "text": "and um then it basically tries to uh like get an export statement uh gets",
    "start": "2133440",
    "end": "2140880"
  },
  {
    "text": "basically this source code that it can run and get this information out of it",
    "start": "2140880",
    "end": "2145920"
  },
  {
    "text": "and given that it's in typescript um and i wanted to make it so that it can be in typescript that's nice to use but i",
    "start": "2145920",
    "end": "2153040"
  },
  {
    "text": "don't have to bother you with setting up like typescript build step and so on i'm doing that",
    "start": "2153040",
    "end": "2159119"
  },
  {
    "text": "for you and um yeah that's basically uh what's",
    "start": "2159119",
    "end": "2164240"
  },
  {
    "text": "happening here and we're seeing this is already broken down down i can ship a javascript",
    "start": "2164240",
    "end": "2171040"
  },
  {
    "text": "one if i want to take exactly yep so this would just work out of the box with",
    "start": "2171040",
    "end": "2176240"
  },
  {
    "text": "uh if it dots js as well and as we've seen here um",
    "start": "2176240",
    "end": "2182400"
  },
  {
    "text": "we can provide our own config path here oh it's not in the help",
    "start": "2182400",
    "end": "2188320"
  },
  {
    "text": "message but uh oh there there it is so you can provide your own uh config path",
    "start": "2188320",
    "end": "2193920"
  },
  {
    "text": "here um and we can already hear see roughly like how it's working it's gonna read",
    "start": "2193920",
    "end": "2200240"
  },
  {
    "text": "this file uh we're seeing here the file path is",
    "start": "2200240",
    "end": "2206240"
  },
  {
    "text": "this let's take a sec give it a second",
    "start": "2206320",
    "end": "2211920"
  },
  {
    "text": "ah [Music] i need to understand myself again let's take a look at the source code what's",
    "start": "2211920",
    "end": "2217599"
  },
  {
    "text": "going on um so here let's click into get config notice core get config this",
    "start": "2217599",
    "end": "2225200"
  },
  {
    "text": "is now in a other um and like not the cli package but this core package",
    "start": "2225200",
    "end": "2232240"
  },
  {
    "text": "so let's take a look into this and um now there's even more effect",
    "start": "2232240",
    "end": "2237680"
  },
  {
    "text": "stuff so let's let's look at that what what's going on here so um here first we are uh",
    "start": "2237680",
    "end": "2246880"
  },
  {
    "text": "getting the we're delegating here to get config watch the the reason uh why what's what this",
    "start": "2246880",
    "end": "2254240"
  },
  {
    "text": "is doing is that overall [Music] content layer is built to",
    "start": "2254240",
    "end": "2261599"
  },
  {
    "text": "support streaming and a watch mode so that means",
    "start": "2261599",
    "end": "2266960"
  },
  {
    "text": "as we have here content layer build and we also have content layer dev",
    "start": "2266960",
    "end": "2273839"
  },
  {
    "text": "so content layer dev would basically do the same thing but it would not stop after",
    "start": "2273839",
    "end": "2279760"
  },
  {
    "text": "the first run but it would watch for change file changes so it doesn't just watch for file",
    "start": "2279760",
    "end": "2284880"
  },
  {
    "text": "changes in your content files but it also watches for file changes in your config file",
    "start": "2284880",
    "end": "2290800"
  },
  {
    "text": "um and this is exactly why we also have this get config watch here",
    "start": "2290800",
    "end": "2296800"
  },
  {
    "text": "and if we're calling content layer with um the build command we don't want it to",
    "start": "2296800",
    "end": "2302480"
  },
  {
    "text": "watch anymore we just want it to run once so this is why um and this is a model as",
    "start": "2302480",
    "end": "2308160"
  },
  {
    "text": "a stream this is why we're just taking the first um event or whatever a thing in a stream is",
    "start": "2308160",
    "end": "2314720"
  },
  {
    "text": "called at some point in time you had like the problem uh that you were setting up the watchers",
    "start": "2314720",
    "end": "2321520"
  },
  {
    "text": "even even if you wanted only the a single build",
    "start": "2321520",
    "end": "2327520"
  },
  {
    "text": "did you solve that in any way or right yeah michael is is already um",
    "start": "2327520",
    "end": "2335280"
  },
  {
    "text": "pointing at one thing which is um if you're um building something that",
    "start": "2335280",
    "end": "2341599"
  },
  {
    "text": "supports kind of like this dual mode of like um just a single run and watching",
    "start": "2341599",
    "end": "2347119"
  },
  {
    "text": "and by watching you're just delegating to uh running the by the single run you're just delegating",
    "start": "2347119",
    "end": "2353760"
  },
  {
    "text": "to the watch uh and stopping after after first event um then you might still and in this case",
    "start": "2353760",
    "end": "2360960"
  },
  {
    "text": "i think i still do it i do um set up the watchers and then killing",
    "start": "2360960",
    "end": "2366160"
  },
  {
    "text": "it right away afterwards so i think we can save a bit of uh work here that the",
    "start": "2366160",
    "end": "2371839"
  },
  {
    "text": "computer needs to do by not even setting up the watcher in the first place but i haven't is ideally you could have like a",
    "start": "2371839",
    "end": "2377839"
  },
  {
    "text": "configuration parameter and if that configuration parameter is like",
    "start": "2377839",
    "end": "2385760"
  },
  {
    "text": "set it up to be a single run then you don't set up the watchers but",
    "start": "2385760",
    "end": "2391359"
  },
  {
    "text": "you emit a single event and then you close down the stream you let the string complete like instead of taking one you",
    "start": "2391359",
    "end": "2398720"
  },
  {
    "text": "always take everything and it's just a stream of a single output if it runs in",
    "start": "2398720",
    "end": "2404560"
  },
  {
    "text": "build mode and if it's a it's a stream of n outputs infinite many outputs if it's if you're",
    "start": "2404560",
    "end": "2411359"
  },
  {
    "text": "trying in watch mode i'll make a note for for that awesome yeah i haven't haven't done that yet as",
    "start": "2411359",
    "end": "2417839"
  },
  {
    "text": "there were like a couple of bigger fish to fry at that point but that that's very very true um again",
    "start": "2417839",
    "end": "2425200"
  },
  {
    "text": "whenever you see this ot with span this is basically when you see that and here",
    "start": "2425200",
    "end": "2430720"
  },
  {
    "text": "we even have like these attributes this is when it's going to appear on in open telemetry so this is what gives us this",
    "start": "2430720",
    "end": "2438079"
  },
  {
    "text": "with like this working um current working directory uh",
    "start": "2438079",
    "end": "2443280"
  },
  {
    "text": "and and so on so i won't get too deep into this since at this point we're also",
    "start": "2443280",
    "end": "2448960"
  },
  {
    "text": "basically just delegating this to to es build um but i i want to get a bit more",
    "start": "2448960",
    "end": "2455599"
  },
  {
    "text": "uh through through this here since like now we're calling this generate dot pkg this uh",
    "start": "2455599",
    "end": "2463480"
  },
  {
    "text": "generate.pkg this is actually doing like the all the work that that you'd expect so that",
    "start": "2463480",
    "end": "2470000"
  },
  {
    "text": "means like it reads the source either like your local source files or contentful etc",
    "start": "2470000",
    "end": "2476640"
  },
  {
    "text": "it um turns all of that content into data and then it",
    "start": "2476640",
    "end": "2482160"
  },
  {
    "text": "persists that data into um as we've seen here",
    "start": "2482160",
    "end": "2487440"
  },
  {
    "text": "into this directory so this dot pkg this is what i what i mean with that so let's take a",
    "start": "2487440",
    "end": "2495599"
  },
  {
    "text": "step out of this again um and let's look into core generate.pkg",
    "start": "2495599",
    "end": "2502000"
  },
  {
    "text": "so that's that's what we're doing here um let's look into this",
    "start": "2502000",
    "end": "2508480"
  },
  {
    "text": "um here we're still in the core package so let's take a look what's what's",
    "start": "2508480",
    "end": "2514800"
  },
  {
    "text": "happening here um you'll notice the same pattern um as before with a config and config watch",
    "start": "2514800",
    "end": "2523200"
  },
  {
    "text": "we have the same pattern here where this just calls the stream and takes the",
    "start": "2523200",
    "end": "2529280"
  },
  {
    "text": "first one this is because we're coming from the build command if we're looking at the",
    "start": "2529280",
    "end": "2536079"
  },
  {
    "text": "dev command let's put this on the side um then notice here we'd be calling get",
    "start": "2536079",
    "end": "2543599"
  },
  {
    "text": "config watch and then generate the pkg stream this should also",
    "start": "2543599",
    "end": "2550640"
  },
  {
    "text": "be stream stream um or watch and watch so",
    "start": "2550640",
    "end": "2556640"
  },
  {
    "text": "it's quite straightforward um it's uh yeah you basically just need to",
    "start": "2556640",
    "end": "2563200"
  },
  {
    "text": "in this case you're dealing with a single effect and in this case you're dealing with",
    "start": "2563200",
    "end": "2569599"
  },
  {
    "text": "streams from from bottom to finish we'll take a look",
    "start": "2569599",
    "end": "2575839"
  },
  {
    "text": "more specifically into the the streams uh in in a moment but i want to take",
    "start": "2575839",
    "end": "2581280"
  },
  {
    "text": "first a full uh a full take through our full vertical slice",
    "start": "2581280",
    "end": "2587200"
  },
  {
    "text": "so let's take a look at our um at our trace and see what to expect here",
    "start": "2587200",
    "end": "2593520"
  },
  {
    "text": "so um what you expect we're creating a directory we're reading some files",
    "start": "2593520",
    "end": "2599119"
  },
  {
    "text": "um there's some caching going on in order to make something fast we've got",
    "start": "2599119",
    "end": "2604160"
  },
  {
    "text": "to do caching so content layer does caching uh and that again makes stuff more complicated and error prone so you",
    "start": "2604160",
    "end": "2611280"
  },
  {
    "text": "know like too hard problems with computer science uh and then we're fetching uh all the",
    "start": "2611280",
    "end": "2617440"
  },
  {
    "text": "documents and then later we're turning these documents uh into into files and writing them",
    "start": "2617440",
    "end": "2625760"
  },
  {
    "text": "after all and so yeah quite straightforward let's take a look into how this is working so",
    "start": "2625760",
    "end": "2633280"
  },
  {
    "text": "looking at generate.pkg again and um",
    "start": "2633280",
    "end": "2639040"
  },
  {
    "text": "now we're like already switching over into stream mode since uh content layer supports that",
    "start": "2639040",
    "end": "2646880"
  },
  {
    "text": "and um yeah let's take a look uh what's what's going on here",
    "start": "2646880",
    "end": "2652480"
  },
  {
    "text": "so as mentioned content layer is um supports multiple plugins",
    "start": "2652480",
    "end": "2658880"
  },
  {
    "text": "so at this point it's basically uh it gets the source",
    "start": "2658880",
    "end": "2664240"
  },
  {
    "text": "plug-in injected and now we need to so the source plug-in we're getting out of this config",
    "start": "2664240",
    "end": "2671599"
  },
  {
    "text": "and each source plug-in you see it here from the signature um has prov has a function or an effect",
    "start": "2671599",
    "end": "2679920"
  },
  {
    "text": "to provide the schema and to fetch the data providing the schema is",
    "start": "2679920",
    "end": "2686319"
  },
  {
    "text": "basically that stuff here that we get like the structured information about uh the the content",
    "start": "2686319",
    "end": "2692640"
  },
  {
    "text": "and then fetching the data is looking to all of these content",
    "start": "2692640",
    "end": "2699359"
  },
  {
    "text": "to all of these um pieces of content and getting the the data",
    "start": "2699359",
    "end": "2705200"
  },
  {
    "text": "so um let's take a look at how this is working here um we're doing",
    "start": "2705200",
    "end": "2712400"
  },
  {
    "text": "this in parallel uh so we're getting the schema and then we're",
    "start": "2712400",
    "end": "2719680"
  },
  {
    "text": "creating this artifacts directory um let's take a look at a concrete",
    "start": "2719680",
    "end": "2726079"
  },
  {
    "text": "implementation for providing the schema so here we could now look into",
    "start": "2726079",
    "end": "2732480"
  },
  {
    "text": "one of the the sources i'll show you the source for the files",
    "start": "2732480",
    "end": "2739119"
  },
  {
    "text": "so let's look into this let's look into the entry point here so the entry point",
    "start": "2739119",
    "end": "2745680"
  },
  {
    "text": "make the source plugin returns a provided schema",
    "start": "2745680",
    "end": "2751040"
  },
  {
    "text": "and a fetch data so if you're looking into this make core schema",
    "start": "2751040",
    "end": "2758720"
  },
  {
    "text": "we're basically getting in these document type devs which is basically just",
    "start": "2758720",
    "end": "2764640"
  },
  {
    "text": "turning this representation here into um something that like this",
    "start": "2764640",
    "end": "2772400"
  },
  {
    "text": "core like the schema the way how the schema is described for a source file this is like for",
    "start": "2772400",
    "end": "2778319"
  },
  {
    "text": "try to be as convenient to use for a user and then core itself has its own",
    "start": "2778319",
    "end": "2784480"
  },
  {
    "text": "understanding of a schema which is a bit more a bit more verbose and easier for",
    "start": "2784480",
    "end": "2791280"
  },
  {
    "text": "me as the implementer to to use so this is all that this is doing",
    "start": "2791280",
    "end": "2796480"
  },
  {
    "text": "so here we're getting back this schema definition or sorry not yet um",
    "start": "2796480",
    "end": "2801860"
  },
  {
    "text": "[Music] yes sorry so here we're getting a um effect that",
    "start": "2801860",
    "end": "2808800"
  },
  {
    "text": "allows us to to get that um and then we're basically starting this we're",
    "start": "2808800",
    "end": "2815440"
  },
  {
    "text": "starting to execute this effect um and uh we're at this point from a single",
    "start": "2815440",
    "end": "2822400"
  },
  {
    "text": "effect starting to turn this into a stream so we're kicking off a stream",
    "start": "2822400",
    "end": "2827680"
  },
  {
    "text": "here the stream is uh if you've worked with streams in effect",
    "start": "2827680",
    "end": "2835040"
  },
  {
    "text": "uh they are um streams have like it's basically like an effect but uh it can",
    "start": "2835040",
    "end": "2841680"
  },
  {
    "text": "return a's multiple times what i want and but in the case of an error the",
    "start": "2841680",
    "end": "2847040"
  },
  {
    "text": "entire stream uh dies uh what i wanted because uh you saw this",
    "start": "2847040",
    "end": "2852720"
  },
  {
    "text": "before when a content layer runs in mode sorry there's an interesting question",
    "start": "2852720",
    "end": "2858480"
  },
  {
    "text": "and what's the benefit of using sync.jan when creating the schema",
    "start": "2858480",
    "end": "2864160"
  },
  {
    "text": "um good good point uh so this might be a bit of a special case here",
    "start": "2864160",
    "end": "2871839"
  },
  {
    "text": "typically resolving the schema so maybe a better example is for contentful",
    "start": "2871839",
    "end": "2878559"
  },
  {
    "text": "actually so when we're looking into this for contentful and providing the schema",
    "start": "2878559",
    "end": "2884319"
  },
  {
    "text": "provide schema here here's actually an effect um for contentful we need to call like",
    "start": "2884319",
    "end": "2891920"
  },
  {
    "text": "http endpoints and stuff and like do it it's therefore it's asynchronous and",
    "start": "2891920",
    "end": "2898160"
  },
  {
    "text": "therefore in effect here in this case uh it can be uh synchronous because",
    "start": "2898160",
    "end": "2905280"
  },
  {
    "text": "we're just mapping over data structures um so this is why i've used sort of like",
    "start": "2905280",
    "end": "2912000"
  },
  {
    "text": "effects little brother which is sync which is in uh but do you have any case",
    "start": "2912000",
    "end": "2917280"
  },
  {
    "text": "where you are running the computation synchronously or you always end up calling it from within",
    "start": "2917280",
    "end": "2923839"
  },
  {
    "text": "an effect um i think further up we're again dealing with it as uh as an effect uh i",
    "start": "2923839",
    "end": "2931599"
  },
  {
    "text": "think we're using here um we might be using generators there's",
    "start": "2931599",
    "end": "2937920"
  },
  {
    "text": "like some point where where we're basically turning the where we're treating the synchronous again as an",
    "start": "2937920",
    "end": "2943280"
  },
  {
    "text": "effect um yeah in that case uh it's a little bit more performant to just use effect",
    "start": "2943280",
    "end": "2949520"
  },
  {
    "text": "directly it's usually you have to jump onto basically the fiber of effect",
    "start": "2949520",
    "end": "2955599"
  },
  {
    "text": "has to uh pass down the the context of execution to the",
    "start": "2955599",
    "end": "2961280"
  },
  {
    "text": "to the sync driver so there is a shifting of the execution",
    "start": "2961280",
    "end": "2966400"
  },
  {
    "text": "okay so basically at this point here",
    "start": "2966400",
    "end": "2972720"
  },
  {
    "text": "where we're using sync gen i could basically just use uh effect gen yeah okay",
    "start": "2972720",
    "end": "2978480"
  },
  {
    "text": "yep so i guess that should just work in the same way uh great any other questions uh up to",
    "start": "2978480",
    "end": "2986160"
  },
  {
    "text": "this point nope right",
    "start": "2986160",
    "end": "2993599"
  },
  {
    "text": "so where were i uh",
    "start": "2993760",
    "end": "2999319"
  },
  {
    "text": "yes i i was about to explain um how my stream usage here is is a bit special",
    "start": "2999520",
    "end": "3006319"
  },
  {
    "text": "since we saw it before when i ran um content the dev mode of content layer so",
    "start": "3006319",
    "end": "3012720"
  },
  {
    "text": "watches for changes in the config and what just for changes in the content um what i want is",
    "start": "3012720",
    "end": "3020400"
  },
  {
    "text": "i want to in the same way as like if you're running a nexus app and you have like a typo somewhere the entire process",
    "start": "3020400",
    "end": "3027680"
  },
  {
    "text": "doesn't just crash and say you're an idiot but it like shows it treats that problem",
    "start": "3027680",
    "end": "3034400"
  },
  {
    "text": "uh as a value and shows you like hey here's like it life refreshes shows you",
    "start": "3034400",
    "end": "3039920"
  },
  {
    "text": "here's a problem you it waits until you fix the problem and then life reloads with the right example again and i want",
    "start": "3039920",
    "end": "3046400"
  },
  {
    "text": "to do the same here uh with content layer so if you have a bug somewhere",
    "start": "3046400",
    "end": "3052720"
  },
  {
    "text": "let's say you're missing um a required field for uh for a piece of content or you might",
    "start": "3052720",
    "end": "3059440"
  },
  {
    "text": "even in your content layer config have a problem i don't want to just die like and crash the entire process",
    "start": "3059440",
    "end": "3066400"
  },
  {
    "text": "but um i want to basically up to a certain point um catch the the problem",
    "start": "3066400",
    "end": "3072880"
  },
  {
    "text": "and then i want to print out a useful error message that describes what the problem was that you can fix it and",
    "start": "3072880",
    "end": "3079920"
  },
  {
    "text": "watch for changes um and therefore have like a nice provide a nice foundation for for the",
    "start": "3079920",
    "end": "3086559"
  },
  {
    "text": "user to iterate on so um yeah this is basically where",
    "start": "3086559",
    "end": "3091680"
  },
  {
    "text": "normal streams would just um on the first error that occurs uh would just",
    "start": "3091680",
    "end": "3097280"
  },
  {
    "text": "die it would just allow for multiple values like these a things here to pass through because to be clear it's",
    "start": "3097280",
    "end": "3104480"
  },
  {
    "text": "in in a normal stream when you have an error you have semantics to be able to recover",
    "start": "3104480",
    "end": "3110559"
  },
  {
    "text": "from that error with other strings so it would be would not be possible to",
    "start": "3110559",
    "end": "3116400"
  },
  {
    "text": "have this sort of semantic and in parallel to allow multiple errors",
    "start": "3116400",
    "end": "3121440"
  },
  {
    "text": "to occur or errors not to be final because for example when you have an error you have to catch it",
    "start": "3121440",
    "end": "3127440"
  },
  {
    "text": "and handle it if you have an error you catch it you handle it but the initial streams",
    "start": "3127440",
    "end": "3132559"
  },
  {
    "text": "continue to emit you you end up multiplying multiplying streams",
    "start": "3132559",
    "end": "3137599"
  },
  {
    "text": "so for this case janus has chosen to encode it as an output value",
    "start": "3137599",
    "end": "3143040"
  },
  {
    "text": "and manage a stream of either one consideration might be if we",
    "start": "3143040",
    "end": "3148880"
  },
  {
    "text": "if we may be able to move it instead to be an environmental service",
    "start": "3148880",
    "end": "3154559"
  },
  {
    "text": "well we your stream creation if you have an error you just fire a message into",
    "start": "3154559",
    "end": "3160880"
  },
  {
    "text": "an environmental service that collects the error that would allow you to use the plain",
    "start": "3160880",
    "end": "3166720"
  },
  {
    "text": "stream of values rather than a stream of items and i guess that that links into",
    "start": "3166720",
    "end": "3171839"
  },
  {
    "text": "another question that it was before if you are using your own uh version of effect you are using a",
    "start": "3171839",
    "end": "3178559"
  },
  {
    "text": "proxy around effect what a little bit of combinations",
    "start": "3178559",
    "end": "3183839"
  },
  {
    "text": "yeah right yeah that are not maybe now that you've already teased it maybe that's a good",
    "start": "3183839",
    "end": "3190400"
  },
  {
    "text": "moment to uh to show that uh all of like these little effect",
    "start": "3190400",
    "end": "3195920"
  },
  {
    "text": "imports t or ot or s",
    "start": "3195920",
    "end": "3201200"
  },
  {
    "text": "i'm importing all of that from this place here uh content layer utils effect which is another package in",
    "start": "3201200",
    "end": "3209680"
  },
  {
    "text": "here utils source effect",
    "start": "3209680",
    "end": "3215680"
  },
  {
    "text": "and why i'm doing this and instead of importing directly from effect ts core",
    "start": "3215680",
    "end": "3222640"
  },
  {
    "text": "or whatever other package is um for for a few reasons um",
    "start": "3222640",
    "end": "3228960"
  },
  {
    "text": "one is um i can structure the imports and exports",
    "start": "3228960",
    "end": "3234480"
  },
  {
    "text": "in a way that um like how i like i think other community members i think patrick for",
    "start": "3234480",
    "end": "3241280"
  },
  {
    "text": "example i think is doing the doing the same and might be again a different story once um",
    "start": "3241280",
    "end": "3249119"
  },
  {
    "text": "once the fluent api uh might uh see the light um but until then uh this is the the",
    "start": "3249119",
    "end": "3256480"
  },
  {
    "text": "pattern i'm going for which has the benefit that i don't need to",
    "start": "3256480",
    "end": "3261839"
  },
  {
    "text": "um like i can consolidate all the dependencies in this utils package which i'm doing here so this utils",
    "start": "3261839",
    "end": "3268800"
  },
  {
    "text": "package has effect yes core op telemetry open telemetry node etc so",
    "start": "3268800",
    "end": "3274559"
  },
  {
    "text": "all of this uh is consolidating another point here is your linking effect as a as a",
    "start": "3274559",
    "end": "3281680"
  },
  {
    "text": "dependency that has a strong tight conversion number and if one consumer of the library",
    "start": "3281680",
    "end": "3289200"
  },
  {
    "text": "will also be using effect you would end up with two effect versions yeah yeah that should probably be",
    "start": "3289200",
    "end": "3296559"
  },
  {
    "text": "your dependency i i should probably make it a peer dependency but a pure dependency that um is uh treated",
    "start": "3296559",
    "end": "3304079"
  },
  {
    "text": "optional so that basically means like if the end user doesn't have it specified",
    "start": "3304079",
    "end": "3309119"
  },
  {
    "text": "that they don't get a warning uh how is it how can you do that that um i think i'm",
    "start": "3309119",
    "end": "3316000"
  },
  {
    "text": "doing that for example for um yes build um in here",
    "start": "3316000",
    "end": "3323040"
  },
  {
    "text": "um so es build here is a period oh it's optional nice um",
    "start": "3323040",
    "end": "3329760"
  },
  {
    "text": "and uh what this means is like if someone has years build in their package they",
    "start": "3329760",
    "end": "3335599"
  },
  {
    "text": "as long as it has this range it's all good um if they don't have it",
    "start": "3335599",
    "end": "3340799"
  },
  {
    "text": "um then baby just picks this up and ignores that it was a peer dependency",
    "start": "3340799",
    "end": "3346640"
  },
  {
    "text": "right so uh look going back to my little uh effect",
    "start": "3346640",
    "end": "3352079"
  },
  {
    "text": "ts um helper so one benefit is um given i have monorepo different",
    "start": "3352079",
    "end": "3358480"
  },
  {
    "text": "packages i don't need to duplicate this to all the dependencies of my little sub",
    "start": "3358480",
    "end": "3363680"
  },
  {
    "text": "packages but i can just have it in one place and the other is that i can um",
    "start": "3363680",
    "end": "3371440"
  },
  {
    "text": "in here in my own little entry point for this i can um kind of",
    "start": "3371440",
    "end": "3377760"
  },
  {
    "text": "like in a soft way override some of the i guess the right term is combinators",
    "start": "3377760",
    "end": "3383920"
  },
  {
    "text": "um and exports of effectives and i override i mean mostly that i can",
    "start": "3383920",
    "end": "3390480"
  },
  {
    "text": "add my own little helpers and um access them from t dot for effect",
    "start": "3390480",
    "end": "3396559"
  },
  {
    "text": "for example so here i have like t.log which is like a nice um",
    "start": "3396559",
    "end": "3402839"
  },
  {
    "text": "convenience function for for console logging or um yeah various other parts that have",
    "start": "3402839",
    "end": "3410319"
  },
  {
    "text": "been useful for me and uh on stream for example given i have this stream over either values um",
    "start": "3410319",
    "end": "3418300"
  },
  {
    "text": "[Music] i have created a whole bunch of like little helpers for me",
    "start": "3418300",
    "end": "3423760"
  },
  {
    "text": "for for that but as mike pointed out a valid alternative would be to still",
    "start": "3423760",
    "end": "3431119"
  },
  {
    "text": "have just a stream over values and have the error channel for something really catastrophic",
    "start": "3431119",
    "end": "3437359"
  },
  {
    "text": "and have an environment um that is responsible for for printing might actually be a cleaner um",
    "start": "3437359",
    "end": "3444640"
  },
  {
    "text": "cleaner implementation and already a great takeaway uh for for me from from this stream",
    "start": "3444640",
    "end": "3452240"
  },
  {
    "text": "um pausing here for a second to see whether there's some questions",
    "start": "3452240",
    "end": "3460119"
  },
  {
    "text": "uh there is one it's more related to effect and it is",
    "start": "3460640",
    "end": "3465920"
  },
  {
    "text": "if if there is any thought of adding the console to the the default environment similar to zeo",
    "start": "3465920",
    "end": "3472240"
  },
  {
    "text": "yes uh it's gonna be part of the changes we make for um while we we finish porting the the",
    "start": "3472240",
    "end": "3479760"
  },
  {
    "text": "zero 2.0 combinators that also have integrated login so it's going to take a while longer but",
    "start": "3479760",
    "end": "3486640"
  },
  {
    "text": "there is um notice here that like for this um use",
    "start": "3486640",
    "end": "3492640"
  },
  {
    "text": "case of using effect yes i'm building like a tool for others but you can think about it both as a tool",
    "start": "3492640",
    "end": "3498960"
  },
  {
    "text": "and as an application in itself um i want to keep console.log here",
    "start": "3498960",
    "end": "3504799"
  },
  {
    "text": "um as kind of reserved as like user facing um",
    "start": "3504799",
    "end": "3509839"
  },
  {
    "text": "so anything that's more like for me to like understand and debugging etc i like use",
    "start": "3509839",
    "end": "3516240"
  },
  {
    "text": "mostly jager for that so when i'm for example like reading a file here instead",
    "start": "3516240",
    "end": "3521359"
  },
  {
    "text": "of logging the file path uh and then just like when i run it when i need it and i",
    "start": "3521359",
    "end": "3527839"
  },
  {
    "text": "comment in the console yeah i can basically all keep it on",
    "start": "3527839",
    "end": "3533839"
  },
  {
    "text": "and i can see it i can look at it if i'm if i'm longing for knowing it",
    "start": "3533839",
    "end": "3539359"
  },
  {
    "text": "um so um yeah so this is uh michael you asked about like my little helper",
    "start": "3539359",
    "end": "3545520"
  },
  {
    "text": "library for effect um i'm doing this in all the projects where i'm using effect and it's quite nice",
    "start": "3545520",
    "end": "3551599"
  },
  {
    "text": "uh it allows me to um yeah to enrich or extend which i would say it's a common",
    "start": "3551599",
    "end": "3558720"
  },
  {
    "text": "thing to do if you're using effect in like a little bit more of a neat to advanced",
    "start": "3558720",
    "end": "3565200"
  },
  {
    "text": "level it's kind of possible to have those uh therefore preludes",
    "start": "3565200",
    "end": "3570720"
  },
  {
    "text": "everybody has their specific flavor in there there's more preferences and",
    "start": "3570720",
    "end": "3576160"
  },
  {
    "text": "usually you have these packages to adapt it's very common thing to do",
    "start": "3576160",
    "end": "3582000"
  },
  {
    "text": "exactly so yeah this is where we have like the stream of um",
    "start": "3582000",
    "end": "3588960"
  },
  {
    "text": "of like these errors or this generate value here i even um hope",
    "start": "3588960",
    "end": "3594640"
  },
  {
    "text": "that there is ever actually never an error thrown here um and this generate info um that is",
    "start": "3594640",
    "end": "3603520"
  },
  {
    "text": "uh like this is not returning the actual uh generated data it rather along the way",
    "start": "3603520",
    "end": "3609119"
  },
  {
    "text": "general like persist sets to to files to desktop pkg but this generate info is",
    "start": "3609119",
    "end": "3614960"
  },
  {
    "text": "basically um it's for the build command itself with this generate",
    "start": "3614960",
    "end": "3621200"
  },
  {
    "text": "info uh where we're best where we're just logging this so log generate info",
    "start": "3621200",
    "end": "3627040"
  },
  {
    "text": "here we're basically just saying generated that many documents in node",
    "start": "3627040",
    "end": "3632400"
  },
  {
    "text": "modules content layer which we've seen here um",
    "start": "3632400",
    "end": "3638160"
  },
  {
    "text": "right so briefly going a bit further through this just to understand what's going on so here we're",
    "start": "3638160",
    "end": "3646319"
  },
  {
    "text": "getting our schema with the schema and this target directory target directory basically means",
    "start": "3646319",
    "end": "3652480"
  },
  {
    "text": "if we haven't before created this dot content layer",
    "start": "3652480",
    "end": "3658079"
  },
  {
    "text": "directory that this would create it notice that for all of this um we get",
    "start": "3658079",
    "end": "3663839"
  },
  {
    "text": "like nice errors so for example make there we're getting mic make their error",
    "start": "3663839",
    "end": "3668960"
  },
  {
    "text": "and we can treat all of that nicely and um",
    "start": "3668960",
    "end": "3674400"
  },
  {
    "text": "yeah then we're fetching the data this fetching the data the result of",
    "start": "3674400",
    "end": "3679839"
  },
  {
    "text": "this is a cache um this cache item",
    "start": "3679839",
    "end": "3686559"
  },
  {
    "text": "is then um written uh to disk and",
    "start": "3686559",
    "end": "3692000"
  },
  {
    "text": "um yeah and that's really um that that's really all this is doing and the com the",
    "start": "3692000",
    "end": "3699599"
  },
  {
    "text": "implementation complexity is kind of like outsourced to the individual sources to like the source for reading",
    "start": "3699599",
    "end": "3706880"
  },
  {
    "text": "from like local markdown files or to the source from content contentful for",
    "start": "3706880",
    "end": "3712880"
  },
  {
    "text": "sort of like i'm i'm looking forward to building a source for notion as well so you can treat notion as like your little",
    "start": "3712880",
    "end": "3719680"
  },
  {
    "text": "cms for blog posts etc and um yeah",
    "start": "3719680",
    "end": "3725119"
  },
  {
    "text": "one how do you load up one of those i call it plugins in in userland yeah so",
    "start": "3725119",
    "end": "3730720"
  },
  {
    "text": "this isn't like you said in in userland so you're doing this like in the config uh it's part of the config",
    "start": "3730720",
    "end": "3737440"
  },
  {
    "text": "um so here you're saying okay i'm using source files make source",
    "start": "3737440",
    "end": "3743520"
  },
  {
    "text": "um and again this part is being picked up by this get",
    "start": "3743520",
    "end": "3749200"
  },
  {
    "text": "config part of of core um core not effect core but content",
    "start": "3749200",
    "end": "3756079"
  },
  {
    "text": "layer core um so here in this get config uh here we have a config path",
    "start": "3756079",
    "end": "3764799"
  },
  {
    "text": "the file path and um we are uh yeah resolving that",
    "start": "3764799",
    "end": "3770480"
  },
  {
    "text": "we're we're literally compiling that importing it and then taking the",
    "start": "3770480",
    "end": "3775520"
  },
  {
    "text": "imported thing and returning it so and that again is the",
    "start": "3775520",
    "end": "3780799"
  },
  {
    "text": "thing that actually took a bunch of time uh where it took that time actually let's let's look",
    "start": "3780799",
    "end": "3787680"
  },
  {
    "text": "into it it's interesting um [Music] and this is design your your source",
    "start": "3787680",
    "end": "3795359"
  },
  {
    "text": "still uses effect and you are compiling your source with effect as an external",
    "start": "3795359",
    "end": "3800640"
  },
  {
    "text": "so everything when you integrate it back in your main process everything still link up",
    "start": "3800640",
    "end": "3806640"
  },
  {
    "text": "exactly exactly like assuming um you have like javascript code there",
    "start": "3806640",
    "end": "3813200"
  },
  {
    "text": "that makes sense so in for example like that if it's compiled by es build should",
    "start": "3813200",
    "end": "3818960"
  },
  {
    "text": "be good um it's already wired up that um like it's kind of like defensively built that",
    "start": "3818960",
    "end": "3826799"
  },
  {
    "text": "it's not using the most cutting edge like esm whatever uh but it's like tries to to pick like a",
    "start": "3826799",
    "end": "3833839"
  },
  {
    "text": "solid um a solid foundation for the importing and then if you're using like any",
    "start": "3833839",
    "end": "3840240"
  },
  {
    "text": "dependencies in there it would just assume that these dependencies are uh are provided by your package manager so",
    "start": "3840240",
    "end": "3848000"
  },
  {
    "text": "if you think about it as part of your project then you're golden that should be that should be fine",
    "start": "3848000",
    "end": "3853520"
  },
  {
    "text": "um so uh yeah i think one uh interesting aspect of",
    "start": "3853520",
    "end": "3860400"
  },
  {
    "text": "this uh that i would also like to quickly show off is um if you were",
    "start": "3860400",
    "end": "3867440"
  },
  {
    "text": "going you you saw like the these error messages before where like if i forgot a",
    "start": "3867440",
    "end": "3873039"
  },
  {
    "text": "required field etc um that was really important for me that um",
    "start": "3873039",
    "end": "3879119"
  },
  {
    "text": "that i like this for example that you know like if there is a problem",
    "start": "3879119",
    "end": "3885359"
  },
  {
    "text": "that you know where where is there a problem what can i do to fix it et cetera that it's not just saying like",
    "start": "3885359",
    "end": "3890720"
  },
  {
    "text": "hey era and like good luck but i want to provide like useful error messages",
    "start": "3890720",
    "end": "3897920"
  },
  {
    "text": "and there's a whole bun and this is where effectives has been so crucial for me because like in the source in the",
    "start": "3897920",
    "end": "3905119"
  },
  {
    "text": "implementation i need to deal with a happy path and a not so happy path and the not so happy",
    "start": "3905119",
    "end": "3911280"
  },
  {
    "text": "path this is where i already have the opportunity to semantically distinguish",
    "start": "3911280",
    "end": "3917359"
  },
  {
    "text": "what is going wrong and instead of just ignoring it which most javascript developers unfortunately",
    "start": "3917359",
    "end": "3923039"
  },
  {
    "text": "do but instead of just ignoring it but actually creating an",
    "start": "3923039",
    "end": "3928960"
  },
  {
    "text": "error case for that that encaptures all the context that's useful for that so",
    "start": "3928960",
    "end": "3934240"
  },
  {
    "text": "for example if there is a field that's not defined in the",
    "start": "3934240",
    "end": "3939920"
  },
  {
    "text": "definition what is the name of the field what is the value of the field in which",
    "start": "3939920",
    "end": "3944960"
  },
  {
    "text": "file does this occur etc and so for each of these cases i have created or",
    "start": "3944960",
    "end": "3951920"
  },
  {
    "text": "like my goal is for each of these cases but now i've like covered as many as i could think of",
    "start": "3951920",
    "end": "3958960"
  },
  {
    "text": "i have created error cases so let's take a look at them they're actually specific to the source",
    "start": "3958960",
    "end": "3966640"
  },
  {
    "text": "providers so um if you have that that's like specific to the and you have like",
    "start": "3966640",
    "end": "3973280"
  },
  {
    "text": "the source provider provides some sort of rendering it to a stringify",
    "start": "3973280",
    "end": "3978720"
  },
  {
    "text": "exactly so let's let's take a look at that um so for the source files here we have a",
    "start": "3978720",
    "end": "3985680"
  },
  {
    "text": "directory of arrows so let's take a look here so here we have uh",
    "start": "3985680",
    "end": "3992640"
  },
  {
    "text": "uh 230 lines of of arrows it's better than nothing",
    "start": "3992640",
    "end": "3998319"
  },
  {
    "text": "and so we see here uh we see here a bunch of different error cases so we see here invalid um",
    "start": "3998319",
    "end": "4006640"
  },
  {
    "text": "front matter or invalid markdown file error or invalid whatever uh and",
    "start": "4006640",
    "end": "4012720"
  },
  {
    "text": "also like missing required fields error or extra field data etc and each of",
    "start": "4012720",
    "end": "4018079"
  },
  {
    "text": "these um contains all of the uh information that",
    "start": "4018079",
    "end": "4023680"
  },
  {
    "text": "is useful um when dealing with the error somehow um and i've also built myself this",
    "start": "4023680",
    "end": "4029680"
  },
  {
    "text": "little like aggregate i'm not gonna pretend to pronounce it",
    "start": "4029680",
    "end": "4035440"
  },
  {
    "text": "but an error that you can aggregate um and what this means is like i have",
    "start": "4035440",
    "end": "4040559"
  },
  {
    "text": "this like render headline and and render line um this is because i want to for",
    "start": "4040559",
    "end": "4046880"
  },
  {
    "text": "all of these errors i don't want to just like have hundreds of lines of like",
    "start": "4046880",
    "end": "4052160"
  },
  {
    "text": "er like for every error just like printed print out printed out with a stack trace or whatever but i wanted to",
    "start": "4052160",
    "end": "4058160"
  },
  {
    "text": "nicely aggregate all of this that's nice to consume and so i've built uh",
    "start": "4058160",
    "end": "4064160"
  },
  {
    "text": "this little uh aggregate um error thing here",
    "start": "4064160",
    "end": "4069839"
  },
  {
    "text": "the the best way uh to to look at this is probably through a",
    "start": "4069839",
    "end": "4075760"
  },
  {
    "text": "uh there are tests um and um yeah just scrolling through this",
    "start": "4075760",
    "end": "4082079"
  },
  {
    "text": "like here's like a simple case which print four arrows for the specific error category but this can also or here it",
    "start": "4082079",
    "end": "4090319"
  },
  {
    "text": "would uh truncate uh these errors if it's too many or",
    "start": "4090319",
    "end": "4095440"
  },
  {
    "text": "um if you want to print out all of them if it's verbose you can get all of them um and for a bunch of different",
    "start": "4095440",
    "end": "4102318"
  },
  {
    "text": "categories and it categorizes these errors like this so um",
    "start": "4102319",
    "end": "4108560"
  },
  {
    "text": "that was really important for me and again i couldn't have done that if i wouldn't have like nice error",
    "start": "4108560",
    "end": "4114640"
  },
  {
    "text": "handling as effect yes allows me to do it and then on top of it and this was why",
    "start": "4114640",
    "end": "4121679"
  },
  {
    "text": "uh the um in in here why i needed",
    "start": "4121679",
    "end": "4126960"
  },
  {
    "text": "the stream of uh hold on hold on hold on",
    "start": "4126960",
    "end": "4133199"
  },
  {
    "text": "here why we needed a stream of errors or uh or",
    "start": "4133199",
    "end": "4139359"
  },
  {
    "text": "valid values is um because arrows are also",
    "start": "4139359",
    "end": "4144838"
  },
  {
    "text": "configurable in um for for content layer so depending on",
    "start": "4144839",
    "end": "4151600"
  },
  {
    "text": "like your content that you have and especially let's say you're moving from like an old",
    "start": "4151600",
    "end": "4157838"
  },
  {
    "text": "site that might use something like shackle or so um to uh content layer and next chess",
    "start": "4157839",
    "end": "4164560"
  },
  {
    "text": "um and it might be that you literally have like thousands of pages like for example the",
    "start": "4164560",
    "end": "4170798"
  },
  {
    "text": "the gatsby docs has literally thousands of pages uh or thousands of pieces of content",
    "start": "4170799",
    "end": "4176480"
  },
  {
    "text": "um and you might not want to um like they're you might not want to touch all of them",
    "start": "4176480",
    "end": "4183278"
  },
  {
    "text": "and like clean them up uh now you can actually in your content layer config",
    "start": "4183279",
    "end": "4189040"
  },
  {
    "text": "you can uh configure this here so you can say here um on uh let's actually",
    "start": "4189040",
    "end": "4195600"
  },
  {
    "text": "make this uh do this like okay so if i have an extra field just ignore it or if",
    "start": "4195600",
    "end": "4202719"
  },
  {
    "text": "exactly so let's take a look at this so here we're saying found problems uh in one of two documents",
    "start": "4202719",
    "end": "4210400"
  },
  {
    "text": "so we have this pre-rendering file here let's look at this here",
    "start": "4210400",
    "end": "4217360"
  },
  {
    "text": "um we have some other fields of a field but um like again if we get rid of this",
    "start": "4217360",
    "end": "4224320"
  },
  {
    "text": "it's happy if we re-add it it's unhappy um however we could for example also say",
    "start": "4224320",
    "end": "4232480"
  },
  {
    "text": "um what if we're missing uh an important field then it says it's it's missing this field",
    "start": "4232480",
    "end": "4240000"
  },
  {
    "text": "um and uh it could also be that like we actually like this bothers me that it's",
    "start": "4240000",
    "end": "4245360"
  },
  {
    "text": "like printed here with this extra field so we can now configure this and saying here uh on extra field data",
    "start": "4245360",
    "end": "4253679"
  },
  {
    "text": "um we want to just ignore it and this is again where the config",
    "start": "4253679",
    "end": "4260320"
  },
  {
    "text": "watching comes in to play here we say we detected that the config has changed we",
    "start": "4260320",
    "end": "4266080"
  },
  {
    "text": "recompile it and re-execute the entire thing and now this is gone however we",
    "start": "4266080",
    "end": "4271760"
  },
  {
    "text": "could also this is still using the uh the stable stream model",
    "start": "4271760",
    "end": "4277840"
  },
  {
    "text": "yes we also have the experimental one yeah yep exactly i've been starting off with",
    "start": "4277840",
    "end": "4283600"
  },
  {
    "text": "the experimental one and then i think it's been too experimental and i've been hitting yeah",
    "start": "4283600",
    "end": "4289440"
  },
  {
    "text": "it has been a little bit too expensive um but i'm looking forward to uh to switching once that's uh no longer",
    "start": "4289440",
    "end": "4296000"
  },
  {
    "text": "experimental um but yeah to show you like there's also more extreme the default here is worn there's also more",
    "start": "4296000",
    "end": "4303280"
  },
  {
    "text": "um extreme option let's say we never ever want that we can even choose to fail",
    "start": "4303280",
    "end": "4308800"
  },
  {
    "text": "and if it's uh if it's set to fail like this actually um stops the substance",
    "start": "4308800",
    "end": "4314239"
  },
  {
    "text": "entire process and we can also do this for for",
    "start": "4314239",
    "end": "4319280"
  },
  {
    "text": "missing or incompatible data where we had like a skip worn by default",
    "start": "4319280",
    "end": "4325120"
  },
  {
    "text": "and so on and there's also an option for unknown documents so",
    "start": "4325120",
    "end": "4330640"
  },
  {
    "text": "we don't need to get into all options now but the point is um error handling is kind of like",
    "start": "4330640",
    "end": "4337040"
  },
  {
    "text": "hard enough to build and effect yes makes is possible but really really hard is to make the error",
    "start": "4337040",
    "end": "4343280"
  },
  {
    "text": "handling behavior configurable by the user and that's that's what what's being done here",
    "start": "4343280",
    "end": "4349520"
  },
  {
    "text": "so um yeah there's various places where it could dive a little bit deeper",
    "start": "4349520",
    "end": "4355199"
  },
  {
    "text": "but maybe and i think we should also like uh wrap this up in next 10 minutes or so um",
    "start": "4355199",
    "end": "4361840"
  },
  {
    "text": "maybe now is a good time for for questions and some reflections uh from",
    "start": "4361840",
    "end": "4367600"
  },
  {
    "text": "michael from you or from others yeah i can start with a little bit of a",
    "start": "4367600",
    "end": "4373600"
  },
  {
    "text": "reflection it's honestly quite an impressive",
    "start": "4373600",
    "end": "4378640"
  },
  {
    "text": "undertaking and it's a modular system it's doing very",
    "start": "4378640",
    "end": "4384960"
  },
  {
    "text": "very complicated things and in principle like you describe you have like",
    "start": "4384960",
    "end": "4390560"
  },
  {
    "text": "configurable error behavior and dynamic plugins",
    "start": "4390560",
    "end": "4396480"
  },
  {
    "text": "compiling it is very very very complicated and i'm",
    "start": "4396480",
    "end": "4402000"
  },
  {
    "text": "so happy to see and look at the code and still understand the world even even",
    "start": "4402000",
    "end": "4408880"
  },
  {
    "text": "though i've never looked into all of the details i know you you talked to me a little bit about content",
    "start": "4408880",
    "end": "4415920"
  },
  {
    "text": "layer before never in in those details and",
    "start": "4415920",
    "end": "4421440"
  },
  {
    "text": "there are some design choices that as you said at the beginning that they could be improved",
    "start": "4421440",
    "end": "4427199"
  },
  {
    "text": "but i'm extremely curious for example to see how how this might play out in",
    "start": "4427199",
    "end": "4432360"
  },
  {
    "text": "[Music] in dlcli with the port of zero cli",
    "start": "4432360",
    "end": "4437679"
  },
  {
    "text": "because that's one one part of the integration where currently like have this",
    "start": "4437679",
    "end": "4444640"
  },
  {
    "text": "independent thing using console log to provide structure logging there",
    "start": "4444640",
    "end": "4451280"
  },
  {
    "text": "is probably another aspect that we might improve in the future with some libraries of the ecosystem",
    "start": "4451280",
    "end": "4458400"
  },
  {
    "text": "and and then there are these some design notes that that we have been taking",
    "start": "4458400",
    "end": "4463840"
  },
  {
    "text": "and i see that you've made a lot of combinations in streams most of that is needed because you are",
    "start": "4463840",
    "end": "4469920"
  },
  {
    "text": "using providers so ideally if we are able to simplify",
    "start": "4469920",
    "end": "4475679"
  },
  {
    "text": "that model a little bit you can cut off",
    "start": "4475679",
    "end": "4480719"
  },
  {
    "text": "a decent amount of complexity from from your side of the board not that this is a bad way",
    "start": "4480719",
    "end": "4487520"
  },
  {
    "text": "it would be the classical way like you would in a normal functional programming context",
    "start": "4487520",
    "end": "4493840"
  },
  {
    "text": "you would just use transformers to stock the idler and stream together without having to create the module",
    "start": "4494159",
    "end": "4500239"
  },
  {
    "text": "yourself yep why yeah i i think like you like you pointed",
    "start": "4500239",
    "end": "4505679"
  },
  {
    "text": "out already i think the biggest simplification i could make here um without sacrificing functionality",
    "start": "4505679",
    "end": "4514080"
  },
  {
    "text": "is uh instead of using a stream of ethers",
    "start": "4514080",
    "end": "4519920"
  },
  {
    "text": "um like my initial design was that i had these errors",
    "start": "4519920",
    "end": "4526239"
  },
  {
    "text": "actually in the error channel kind of as my assumption was that errors",
    "start": "4526239",
    "end": "4531840"
  },
  {
    "text": "in a stream are also just values and the stream survives an error",
    "start": "4531840",
    "end": "4537440"
  },
  {
    "text": "however um what you've suggested makes a lot of sense to me that in the environment i",
    "start": "4537440",
    "end": "4542640"
  },
  {
    "text": "would basically just have like a uh like a special error logger collective",
    "start": "4542640",
    "end": "4548400"
  },
  {
    "text": "service error error or some sort and delegate basically to the caller",
    "start": "4548400",
    "end": "4555120"
  },
  {
    "text": "the requirement to handle exactly and at the point where uh",
    "start": "4555120",
    "end": "4561040"
  },
  {
    "text": "like the the stream here there's actually just relatively few pieces that really",
    "start": "4561040",
    "end": "4567760"
  },
  {
    "text": "necessitate this being the stream um the the mo here is basically just fetch",
    "start": "4567760",
    "end": "4573840"
  },
  {
    "text": "schema that is the stream itself all the other pieces here um this is an effect uh",
    "start": "4573840",
    "end": "4580800"
  },
  {
    "text": "this is an effect um so it's basically just here this being a stream",
    "start": "4580800",
    "end": "4586239"
  },
  {
    "text": "um and i can basically in here um i could like access the uh the the environment",
    "start": "4586239",
    "end": "4593120"
  },
  {
    "text": "the like error logger and i basically just pass it here the error logger itself is aware of the the",
    "start": "4593120",
    "end": "4600960"
  },
  {
    "text": "con the error configuration mode um and then i could simplify this a lot again like since all of these uh special",
    "start": "4600960",
    "end": "4608880"
  },
  {
    "text": "combinators like chain map either right that's a little thing that i had to build because i wanted like a specific",
    "start": "4608880",
    "end": "4616000"
  },
  {
    "text": "combinator that would like yeah have like chain a stream",
    "start": "4616000",
    "end": "4621440"
  },
  {
    "text": "um and then also over the right value of of the of the stream i can like simplify",
    "start": "4621440",
    "end": "4628080"
  },
  {
    "text": "this a lot again so yeah that that's a that's a very welcome um suggestion",
    "start": "4628080",
    "end": "4633280"
  },
  {
    "text": "the the other thing that's um has been uh implemented in a very naive",
    "start": "4633280",
    "end": "4640000"
  },
  {
    "text": "a very sorry a very low hanging fruit can also be the swapping of",
    "start": "4640000",
    "end": "4645440"
  },
  {
    "text": "like s dot take one and configure the watchers just make",
    "start": "4645440",
    "end": "4650719"
  },
  {
    "text": "like a configuration flag i have a single stream which is either producing multiple values or it's losing",
    "start": "4650719",
    "end": "4657600"
  },
  {
    "text": "just one however it it feels a bit like it it's a bit redundant to um like right now it's",
    "start": "4657600",
    "end": "4665440"
  },
  {
    "text": "very simple and it's it's like it's either configure the watchers",
    "start": "4665440",
    "end": "4672080"
  },
  {
    "text": "or not configure the watchers it is really a configuration on your",
    "start": "4672080",
    "end": "4677520"
  },
  {
    "text": "whole stream fair that that's a valid way to to look at it for me it felt a bit like exposing",
    "start": "4677520",
    "end": "4684800"
  },
  {
    "text": "and implementation internals of that and leaking that to the outside um",
    "start": "4684800",
    "end": "4689840"
  },
  {
    "text": "but on the other hand like setting up the water or not is really like i'd have to measure uh",
    "start": "4689840",
    "end": "4696239"
  },
  {
    "text": "whether that contributes a lot but i think it's probably like less than five if he doesn't i don't think he should",
    "start": "4696239",
    "end": "4701760"
  },
  {
    "text": "care yeah exactly um the the thing another thing that i would like to see um maybe in another session",
    "start": "4701760",
    "end": "4709520"
  },
  {
    "text": "uh that would like to see whether uh effects can provide me some some nice um",
    "start": "4709520",
    "end": "4715360"
  },
  {
    "text": "abstractions or utilities to improve there's like a part that i'm less proud",
    "start": "4715360",
    "end": "4720960"
  },
  {
    "text": "of here uh it works but uh it's not as beautiful as it could be so for the",
    "start": "4720960",
    "end": "4727440"
  },
  {
    "text": "source files plugin here um in the fetch data the fetch data um",
    "start": "4727440",
    "end": "4735040"
  },
  {
    "text": "like this needs to like if you have a ton of content files like",
    "start": "4735040",
    "end": "4741600"
  },
  {
    "text": "the gatsby docs example like you have thousands of uh of markdown files and i don't want like on every change",
    "start": "4741600",
    "end": "4748960"
  },
  {
    "text": "recompute all of them so i want to do as little work as necessary um i want to do",
    "start": "4748960",
    "end": "4754960"
  },
  {
    "text": "caching but i also want to do like caching in a way that i uh that i it's currently if you find one",
    "start": "4754960",
    "end": "4762159"
  },
  {
    "text": "change you recompile everything um no right now uh it's like if there is",
    "start": "4762159",
    "end": "4770560"
  },
  {
    "text": "one change in the markdown file and the others have been calculated before i'm just gonna recalculate that part",
    "start": "4770560",
    "end": "4777040"
  },
  {
    "text": "and given and this will also just regenerate one json file",
    "start": "4777040",
    "end": "4782239"
  },
  {
    "text": "uh and therefore the next.js app is also just gonna like uh be updated on that very on that",
    "start": "4782239",
    "end": "4788960"
  },
  {
    "text": "single thing so it's like it's these pieces fit very very well together",
    "start": "4788960",
    "end": "4794560"
  },
  {
    "text": "and there's like it's it's by being simple um very efficient yeah i don't think i",
    "start": "4794560",
    "end": "4800719"
  },
  {
    "text": "understand the last point you made on caching",
    "start": "4800719",
    "end": "4806639"
  },
  {
    "text": "yeah so the way how fetch data which this is where the caching um implementation needs to oh",
    "start": "4806639",
    "end": "4814000"
  },
  {
    "text": "it's within the fetch data got it to resolve data dependencies since fetch data is um like yeah that's just",
    "start": "4814000",
    "end": "4821520"
  },
  {
    "text": "knowledge that can be just implemented in the the source the way how how i've understood it so",
    "start": "4821520",
    "end": "4828719"
  },
  {
    "text": "far and and here like like max suggested in the in the comments i think effect yes",
    "start": "4828719",
    "end": "4834719"
  },
  {
    "text": "query might be might be what you're looking for because it is precisely to",
    "start": "4834719",
    "end": "4840880"
  },
  {
    "text": "like interpret pipelines and batching over dynamic queries",
    "start": "4840880",
    "end": "4846480"
  },
  {
    "text": "which seems precisely what you have um yum i i should look into that i've",
    "start": "4846480",
    "end": "4852719"
  },
  {
    "text": "been so far i've been punching on learning it's not too scary effects",
    "start": "4852719",
    "end": "4858400"
  },
  {
    "text": "query there are no docs yet um there is one test where you have queries defined and",
    "start": "4858400",
    "end": "4866080"
  },
  {
    "text": "batching defined it's literally a copy paste from the from the test all right i'm uh i'm",
    "start": "4866080",
    "end": "4872480"
  },
  {
    "text": "i've been running into um use cases for for effect query left and right so i'm",
    "start": "4872480",
    "end": "4878080"
  },
  {
    "text": "i'm sure the time has come for me to very very soon to look into it uh it",
    "start": "4878080",
    "end": "4883840"
  },
  {
    "text": "might be a great um a great future effect time session actually to look at",
    "start": "4883840",
    "end": "4889520"
  },
  {
    "text": "something that's naively implemented not using effect yes um and then see or not using effect",
    "start": "4889520",
    "end": "4896000"
  },
  {
    "text": "query and then seeing how it could be simplified improve things",
    "start": "4896000",
    "end": "4901440"
  },
  {
    "text": "i think we can definitely show you that one one other suggestion was from a",
    "start": "4901440",
    "end": "4906719"
  },
  {
    "text": "member of the audience i would love to watch someone moving the either to a collector service",
    "start": "4906719",
    "end": "4913440"
  },
  {
    "text": "so that would be another idea for probably an effect time if you are up to it",
    "start": "4913440",
    "end": "4918960"
  },
  {
    "text": "yep um yeah so that the last point i just wanted to to show here of something that",
    "start": "4918960",
    "end": "4925920"
  },
  {
    "text": "i think is worthy of improvement is the way how the caching here is implemented",
    "start": "4925920",
    "end": "4932960"
  },
  {
    "text": "um is that i have where is it",
    "start": "4932960",
    "end": "4938159"
  },
  {
    "text": "i have a cache object which is um yeah which which is uh",
    "start": "4938159",
    "end": "4945840"
  },
  {
    "text": "injected uh here and where is it even",
    "start": "4945840",
    "end": "4951199"
  },
  {
    "text": "coming from uh yeah i think it's kind of coming from here so um load previous cache from disk",
    "start": "4951199",
    "end": "4958800"
  },
  {
    "text": "so this is when uh when i'm firing this up that it like even the caching even",
    "start": "4958800",
    "end": "4964960"
  },
  {
    "text": "survives um runs um which is um yeah it just speeds it up and avoids",
    "start": "4964960",
    "end": "4972480"
  },
  {
    "text": "unnecessary work um and so here it loads up that cache",
    "start": "4972480",
    "end": "4977600"
  },
  {
    "text": "the previous cache from the disk so it can depending on whether it already existed or not",
    "start": "4977600",
    "end": "4983760"
  },
  {
    "text": "can return cache or undefined this should probably be an option um but that that aside",
    "start": "4983760",
    "end": "4989760"
  },
  {
    "text": "uh we have this cash thing here now and then the way how i'm working with",
    "start": "4989760",
    "end": "4995520"
  },
  {
    "text": "the cash is really not uh really not very um",
    "start": "4995520",
    "end": "5000639"
  },
  {
    "text": "uh applaudable so here i'm basically just treating this in a very mutable way um",
    "start": "5000639",
    "end": "5007760"
  },
  {
    "text": "and deleting something out of it and then returning this most importantly you don't have any coordination if like",
    "start": "5007760",
    "end": "5014320"
  },
  {
    "text": "multiple places are trying to resolve the same thing like if it's either in the cache and you",
    "start": "5014320",
    "end": "5020719"
  },
  {
    "text": "get it yeah or you start two different requests on the point being this is i think also",
    "start": "5020719",
    "end": "5027440"
  },
  {
    "text": "like a a good candidate for some refactoring it works um to my knowledge",
    "start": "5027440",
    "end": "5034080"
  },
  {
    "text": "uh but i would like to see whether there is like a better implementation of this",
    "start": "5034080",
    "end": "5039520"
  },
  {
    "text": "i think that there's two things we could look at either using the effect query or there's an in-progress port of",
    "start": "5039520",
    "end": "5047120"
  },
  {
    "text": "geocache which defines fine-tuning policies on on caches",
    "start": "5047120",
    "end": "5052800"
  },
  {
    "text": "that that sounds great yeah it would be useful to look at both cool i would probably um call it a day",
    "start": "5052800",
    "end": "5061280"
  },
  {
    "text": "uh for the deep dive session here uh yeah feel free to uh to reach out to",
    "start": "5061280",
    "end": "5069199"
  },
  {
    "text": "me on i'm under this in the discord uh that effect discord um you'll if you google my name you'll",
    "start": "5069199",
    "end": "5076960"
  },
  {
    "text": "you'll find also other ways how to get in touch with me um give content layer a try uh for your",
    "start": "5076960",
    "end": "5084320"
  },
  {
    "text": "website or whatever uh it's currently it's still under development but like the api should be stabilizing it's",
    "start": "5084320",
    "end": "5090800"
  },
  {
    "text": "probably more uh like if you're if you're in if into effect yes uh it's probably",
    "start": "5090800",
    "end": "5096560"
  },
  {
    "text": "like more mature than effect overall like don't mean to step on any toes here",
    "start": "5096560",
    "end": "5101679"
  },
  {
    "text": "but it's like also doing way way way less um so uh yeah feel free to to give this a",
    "start": "5101679",
    "end": "5108239"
  },
  {
    "text": "try and especially it start getting a very different audience exactly exactly exactly so there's already um people",
    "start": "5108239",
    "end": "5115280"
  },
  {
    "text": "who've created who've created issues um i'm i'm trying to do my best to to",
    "start": "5115280",
    "end": "5121280"
  },
  {
    "text": "address these and um uh yeah feedback always welcome um",
    "start": "5121280",
    "end": "5127199"
  },
  {
    "text": "if you're on the verge of like trying to see is effect yes for you worth investigating",
    "start": "5127199",
    "end": "5133360"
  },
  {
    "text": "or not um it's currently uh quite challenging to just get started just by the lack of",
    "start": "5133360",
    "end": "5141360"
  },
  {
    "text": "learning resources but that's getting better by the day and the best thing you can do i think is join",
    "start": "5141360",
    "end": "5148080"
  },
  {
    "text": "the discord and ask questions people are very welcoming",
    "start": "5148080",
    "end": "5153120"
  },
  {
    "text": "and helpful there um and um yeah hopefully through content there",
    "start": "5153120",
    "end": "5159280"
  },
  {
    "text": "but if you're not using it but if you're just looking for an example project",
    "start": "5159280",
    "end": "5164480"
  },
  {
    "text": "that's using effect hopefully that's helpful to you and um yeah so",
    "start": "5164480",
    "end": "5170159"
  },
  {
    "text": "that's that's it from my side um maybe we have some closing questions",
    "start": "5170159",
    "end": "5176159"
  },
  {
    "text": "no not specifically yeah i think so too",
    "start": "5176159",
    "end": "5182320"
  },
  {
    "text": "cool thanks so tony honest yeah thank you very much it's quite impressive what",
    "start": "5182320",
    "end": "5187520"
  },
  {
    "text": "what you will then i i'm gonna be trying it out for a project of mine awesome",
    "start": "5187520",
    "end": "5193760"
  },
  {
    "text": "thanks a lot yeah it was a uh a nice i thought this was a nice way to kind of like",
    "start": "5193760",
    "end": "5198880"
  },
  {
    "text": "uh give back a bit to like to you and the overall the community since you've you all helped have helped me so much",
    "start": "5198880",
    "end": "5206000"
  },
  {
    "text": "and uh yeah i hope this community grows nicely and progresses nicely",
    "start": "5206000",
    "end": "5212880"
  },
  {
    "text": "and i thought this might be a nice little way how i can help absolutely",
    "start": "5212880",
    "end": "5219440"
  },
  {
    "text": "lovely guys i think that's that's a wrap if there are no no other questions i'm gonna put this in in youtube john has",
    "start": "5219440",
    "end": "5227199"
  },
  {
    "text": "mentioned there's a discord channel feel free to join if you're not there yet",
    "start": "5227199",
    "end": "5233760"
  },
  {
    "text": "i'm gonna be putting that in the in the youtube awesome links and",
    "start": "5233760",
    "end": "5238800"
  },
  {
    "text": "cheeky little comment at the end if if you're putting uh ads on the youtube uh video and you're getting some money from",
    "start": "5238800",
    "end": "5245040"
  },
  {
    "text": "it please buy a microphone uh i'll keep bringing it come on",
    "start": "5245040",
    "end": "5250719"
  },
  {
    "text": "i've ordered a microphone and then i changed the idea at the last minute and forgot to buy it again but i'm gonna",
    "start": "5250719",
    "end": "5257120"
  },
  {
    "text": "have to i'm gonna have to all right otherwise we have to crowdfund it for you",
    "start": "5257120",
    "end": "5262320"
  },
  {
    "text": "it's not a funny issue all right great thank you thank you very",
    "start": "5262320",
    "end": "5267520"
  },
  {
    "text": "much see you everyone bye cheers bye bye",
    "start": "5267520",
    "end": "5273320"
  },
  {
    "text": "you",
    "start": "5285760",
    "end": "5287840"
  }
]