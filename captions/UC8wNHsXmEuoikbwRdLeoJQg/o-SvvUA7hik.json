[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "(audience applauds)",
    "start": "0",
    "end": "2666"
  },
  {
    "text": "All right. Thank you, Anjana. Thank you for raising the energy level in the room to",
    "start": "6583",
    "end": "12458"
  },
  {
    "text": "about where I can meet it. OK, so today, guys, we're going to be talking about beyond apps, solving the schema problem with effect schema.",
    "start": "12458",
    "end": "20541"
  },
  {
    "text": "So as Anjana was saying, my name is Jess Martin. I just want to say, if you can tell from my accent, I'm not",
    "start": "20750",
    "end": "26208"
  },
  {
    "text": "actually from here. I'm from the states. But I'm very much enjoying your country, for those of you",
    "start": "26250",
    "end": "31416"
  },
  {
    "text": "who are here. This is me yesterday at St. Anton. The weather is very nice, some very deep powder there.",
    "start": "31416",
    "end": "37500"
  },
  {
    "text": "And apparently, it's dumping there today. So let's see.",
    "start": "38000",
    "end": "41666"
  },
  {
    "start": "42000",
    "end": "93000"
  },
  {
    "text": "So a little bit about me. I've been building web and mobile apps for almost two decades now. I know that's hard to believe.",
    "start": "43041",
    "end": "48625"
  },
  {
    "text": "Not any hair is gray yet, I don't think, maybe in my beard. But I've seen a lot of technologies come and go",
    "start": "48958",
    "end": "55541"
  },
  {
    "text": "over the years. And the last couple of years, I've been focusing on thinking about, what is the shape of software to come?",
    "start": "55541",
    "end": "61708"
  },
  {
    "text": "And that's really what we're going to be focusing on today, is how might software be built in the next few years that",
    "start": "62333",
    "end": "68500"
  },
  {
    "text": "departs from the ways that we've done it in the past? And how might that affect the experience that users have",
    "start": "68541",
    "end": "74458"
  },
  {
    "text": "using that software? So as Anjana mentioned, I'm working on DXOS, which is a platform that helps you build this different shape of",
    "start": "74541",
    "end": "82625"
  },
  {
    "text": "software that we're going to talk about. You can find out more on that at DXOS.org. And if you want to find out more about my philosophy of",
    "start": "82666",
    "end": "88958"
  },
  {
    "text": "computing, you can go to my website at jessmart.in. It is very dry. OK.",
    "start": "88958",
    "end": "94041"
  },
  {
    "start": "93000",
    "end": "122000"
  },
  {
    "text": "So this talk is divided into three parts. I'm going to go pretty quick, so I'm going to try and give you a roadmap up front.",
    "start": "95083",
    "end": "99916"
  },
  {
    "text": "The first part is going to be the more philosophical musings on a new shape of software. So that'll have to put on your thinking caps for a minute.",
    "start": "100291",
    "end": "106833"
  },
  {
    "text": "In part two, we'll actually get to some Effect-specific stuff, and unpack how this new shape of",
    "start": "107250",
    "end": "113333"
  },
  {
    "text": "software collides with the Effect Schema package. And then in part three, hopefully we'll have time to",
    "start": "113375",
    "end": "119666"
  },
  {
    "text": "talk about beyond apps and what software might be like in the future. And we'll have some demos along the way and have some fun.",
    "start": "119666",
    "end": "125250"
  },
  {
    "start": "122000",
    "end": "322000"
  },
  {
    "text": "OK. So what if software had a different shape? Something I've been thinking about for a while.",
    "start": "125750",
    "end": "131208"
  },
  {
    "text": "But let me put it to you in a scenario. You go into work on Monday morning, and your boss says,",
    "start": "131500",
    "end": "136375"
  },
  {
    "text": "you're on a new project. You're going to be building a new web app or a mobile app. It's a pretty standard SaaS app, something you've built",
    "start": "137791",
    "end": "145083"
  },
  {
    "text": "before, that kind of stuff. He gives you a little description of the project. I'm not going to give you one. I'll let you fill in the blank based on your workplace,",
    "start": "145166",
    "end": "152041"
  },
  {
    "text": "wherever you work. Imagine the decisions that are currently going through your mind.",
    "start": "152041",
    "end": "156333"
  },
  {
    "text": "I imagine you're thinking, I'll probably use this language. Or maybe I'll use this front-end framework.",
    "start": "157416",
    "end": "162916"
  },
  {
    "text": "Or we're already using this tool internally. Obviously, I'll have to use that tool when I build this",
    "start": "163125",
    "end": "169083"
  },
  {
    "text": "new project, because I can't just choose whatever I want. Or maybe you get to explore, and you're thinking about this new hotness platform or library.",
    "start": "169083",
    "end": "175833"
  },
  {
    "text": "You're like, oh, maybe this is the project where I can bring in the new thing. So things that are going through your mind,",
    "start": "175833",
    "end": "181791"
  },
  {
    "text": "TypeScript, React, maybe Effect. But I bet of all the things",
    "start": "182083",
    "end": "188375"
  },
  {
    "text": "that are going through your mind, it probably looks something like this in terms of shape.",
    "start": "188375",
    "end": "193333"
  },
  {
    "text": "You probably have a front-end that the user is going to interact with. And whether that's a web app or a mobile app,",
    "start": "193833",
    "end": "200833"
  },
  {
    "text": "whether you're building it in iOS or React, you've got that front-end. And then you've got some database",
    "start": "200875",
    "end": "206500"
  },
  {
    "text": "where you're storing the data for the user, whether you were thinking of Postgres or SQLite or some fancy",
    "start": "207375",
    "end": "214541"
  },
  {
    "text": "or Amazon-hosted thing. And in order to communicate with that database, you've got to put a back-end in front of it. Because who writes to the database with their front-end?",
    "start": "214833",
    "end": "221875"
  },
  {
    "text": "That's insane. No one writes SQL anymore. It's not PHP anymore. So you need a back-end.",
    "start": "221875",
    "end": "226333"
  },
  {
    "text": "And where back-end is going to wrap that database with some form of ORM. And you've got another language over here. And you've got the choice of JavaScript everywhere.",
    "start": "227416",
    "end": "233958"
  },
  {
    "text": "Or Rails is still around, guys. And then you've got an API layer to disintermediate",
    "start": "234375",
    "end": "241833"
  },
  {
    "text": "the front-end and the back-end. Did anybody... raise your hand if you had a different shape in mind than this.",
    "start": "242208",
    "end": "248040"
  },
  {
    "text": "Sort of a couple hands. I would love to talk to you afterwards to hear what you had in mind.",
    "start": "249666",
    "end": "254000"
  },
  {
    "text": "OK. So what we're talking about when we're talking about shape is this weaselly word architecture.",
    "start": "254791",
    "end": "260583"
  },
  {
    "text": "And it's one of those words that's really hard to define. Everybody has a different thing that they call architecture.",
    "start": "261333",
    "end": "265500"
  },
  {
    "text": "Front-end developers now want to be called front-end architects because it makes them feel special. But I love this definition.",
    "start": "266416",
    "end": "273416"
  },
  {
    "text": "Architecture is the stuff that's hard to change. And when you adopt this shape, you",
    "start": "274000",
    "end": "280207"
  },
  {
    "text": "have made some things very hard to change. You are going down this path. And like a railroad, this path will make certain things",
    "start": "280208",
    "end": "286375"
  },
  {
    "text": "very easy to do. And it will make other things prohibitively difficult.",
    "start": "286375",
    "end": "290791"
  },
  {
    "text": "And I know that you're thinking of some of those things that have been difficult in your world in this client server.",
    "start": "291583",
    "end": "296791"
  },
  {
    "text": "I'll just name a couple offline support, real-time collaboration, all of these things that,",
    "start": "297750",
    "end": "302541"
  },
  {
    "text": "whoo, to get that, I have to add whole new systems on top of my existing thing. Well, what if we made one change, just one change",
    "start": "303000",
    "end": "310000"
  },
  {
    "text": "to this diagram? And let's just see what happens. Since we can do that, we haven't written the software yet, we can just drag boxes around, right?",
    "start": "310000",
    "end": "315916"
  },
  {
    "text": "Let's drag this box, the database box, and we're going to put it over here in the front end. Just see what it would look like something like this.",
    "start": "316083",
    "end": "322375"
  },
  {
    "start": "322000",
    "end": "424000"
  },
  {
    "text": "Just a front end and a database, right? Well, if we do that, what else happens?",
    "start": "322875",
    "end": "328541"
  },
  {
    "text": "Let's see. So the front end can just write to the database. I know I teased PHP earlier.",
    "start": "328541",
    "end": "333458"
  },
  {
    "text": "But there's no server here. There's just a client. And there's a database.",
    "start": "333750",
    "end": "339416"
  },
  {
    "text": "And they can write directly to each other. So there's no need for a back end to wrap the database. And so they don't have a back end. They don't also need an API layer.",
    "start": "339666",
    "end": "346000"
  },
  {
    "text": "And so I just have these two things. That sounds kind of nice, actually.",
    "start": "346291",
    "end": "350207"
  },
  {
    "text": "Less boxes is usually good when we're defining an architecture. But that kind of starts to feel like this.",
    "start": "351583",
    "end": "356875"
  },
  {
    "text": "Didn't we have this 30 years ago? Well, yeah, sure. We had a computer with a hard drive that",
    "start": "357500",
    "end": "365208"
  },
  {
    "text": "was running application software that saved to and read from the hard drive. But we don't want that.",
    "start": "365208",
    "end": "370500"
  },
  {
    "text": "The internet is here now. We actually want our software to be connected to other software. So maybe an architecture,",
    "start": "371000",
    "end": "377125"
  },
  {
    "text": "maybe a shape like this might work. So we could have a bunch of front ends",
    "start": "377458",
    "end": "381583"
  },
  {
    "text": "that have the same database that's maybe synchronized or shared across them.",
    "start": "382666",
    "end": "387625"
  },
  {
    "text": "But each front end is writing to its own database. I mean, this kind of makes sense. I mean, at the very least, I would like my devices",
    "start": "388458",
    "end": "396083"
  },
  {
    "text": "to share their data. I mean, I'm sitting here looking at my slides on my phone, which are synchronized",
    "start": "396291",
    "end": "401916"
  },
  {
    "text": "with the slides on my... that seems like a nice thing. And I also might want to share some stuff",
    "start": "401916",
    "end": "407000"
  },
  {
    "text": "with other people's devices as well. So still, this is a different kind of shape.",
    "start": "407000",
    "end": "413375"
  },
  {
    "text": "Looks more like peer to peer, something like that. We'll get into the networking stuff about this later.",
    "start": "413375",
    "end": "418500"
  },
  {
    "text": "But like, postpone those thoughts of WebRTC and WebSockets for a moment while we consider this.",
    "start": "418500",
    "end": "423541"
  },
  {
    "start": "424000",
    "end": "713000"
  },
  {
    "text": "Quick show of hands. Who has heard the term local first software? Two hands up from some folks.",
    "start": "424583",
    "end": "430707"
  },
  {
    "text": "That's great. A lot of people. That is awesome. So yes, I am roughly describing something",
    "start": "430958",
    "end": "436875"
  },
  {
    "text": "that meets the seven ideals of local first software. If you want to talk more about local first software,",
    "start": "436875",
    "end": "443333"
  },
  {
    "text": "I am not the expert. You should be talking to Johannes in the back of the room who gave the talk earlier. He has this wonderful podcast, localfirst.fm.",
    "start": "443541",
    "end": "450041"
  },
  {
    "text": "You should go check it out. And it's a great listen. All right, so that's local first. So now you guys actually want to see some software.",
    "start": "450541",
    "end": "457125"
  },
  {
    "text": "Like, let's actually switch to demo mode. Let's see. All right.",
    "start": "457208",
    "end": "461958"
  },
  {
    "text": "All right, cool. OK, so this right here... oh, I got to speak in this. This right here is a very simple piece of software",
    "start": "463791",
    "end": "472041"
  },
  {
    "text": "that has the shape that I just described. You can actually go try it out for yourself at hello.dxos.org.",
    "start": "472041",
    "end": "477541"
  },
  {
    "text": "If you want to pull it up on your phone, go for it. Give it a try. This replicates the experience that you",
    "start": "477875",
    "end": "484666"
  },
  {
    "text": "would have of going to an event and wanting to meet people and get their contact information.",
    "start": "484666",
    "end": "489791"
  },
  {
    "text": "And so I'll daringly put my email there and pick my favorite emoji.",
    "start": "490250",
    "end": "495333"
  },
  {
    "text": "I'm tired. Haven't had enough coffee. Pick a color and hit Submit. And it gives me a little name tag.",
    "start": "496041",
    "end": "501916"
  },
  {
    "text": "Not a whole lot to it, right? Now, there's some things that you might notice if you've built software before that there was--",
    "start": "502750",
    "end": "508875"
  },
  {
    "text": "I didn't set up an account just now. There was no, like, when I put in my email, go to your email.",
    "start": "509083",
    "end": "514125"
  },
  {
    "text": "Click the magic sign in link. And then come back. And now you have an account somewhere on a server.",
    "start": "514250",
    "end": "519291"
  },
  {
    "text": "That's because all this data is served, like I showed earlier, is saved locally on this machine.",
    "start": "519291",
    "end": "524583"
  },
  {
    "text": "And I can kind of demonstrate that by closing it and coming back to it.",
    "start": "524916",
    "end": "528750"
  },
  {
    "text": "And a few seconds will pass. And hopefully it'll do it back up. And maybe... and boom.",
    "start": "531416",
    "end": "538000"
  },
  {
    "text": "There we are. Same data is there. I can even... dare I turn the Wi-Fi off?",
    "start": "538083",
    "end": "546208"
  },
  {
    "text": "Oh. Whoa. Whoa. What's he doing?",
    "start": "547250",
    "end": "551833"
  },
  {
    "text": "Oh my gosh. This guy's a maniac. All right. Submit. All right. Whoa.",
    "start": "552333",
    "end": "557583"
  },
  {
    "text": "OK.\nLet's go turn it back on. I just made an edit while offline. Who does that? You can't do that with most software?",
    "start": "557583",
    "end": "563833"
  },
  {
    "text": "All right. So that's kind of neat. But like we talked about, you actually want to share with other people, too.",
    "start": "564333",
    "end": "569833"
  },
  {
    "text": "So I'm going to bring up another device, so to speak.",
    "start": "569875",
    "end": "574250"
  },
  {
    "text": "This is another browser. So just treat these as two separate devices. On the right, you've got Chrome. And on the left, you have Arc.",
    "start": "575833",
    "end": "581666"
  },
  {
    "text": "And let's see. Let me go to this little Invite button. Invite... not all of you yet.",
    "start": "583250",
    "end": "591250"
  },
  {
    "text": "Invite 1. I'm going to copy that over here. And I'm really tempting the conference Wi-Fi right now.",
    "start": "592375",
    "end": "600375"
  },
  {
    "text": "And connecting. Dot, dot, dot. Will we be in luck?",
    "start": "601416",
    "end": "606166"
  },
  {
    "text": "Let's see. Drum roll. Woo. All right.\nI'm going to kick it one time and see if it works.",
    "start": "607625",
    "end": "612458"
  },
  {
    "text": "All right. Invite. Come on, baby. Let's see. Invite 1.",
    "start": "612750",
    "end": "617333"
  },
  {
    "text": "One more time. Two invites. I appreciated the Drum Roll on Drum Roll.",
    "start": "618416",
    "end": "622458"
  },
  {
    "text": "Somebody's giving it up. Here we go. Come on now.",
    "start": "624291",
    "end": "626958"
  },
  {
    "text": "Second time's the charm. All right. 749271.",
    "start": "630000",
    "end": "634291"
  },
  {
    "text": "Can barely type. Here we go. All right. OK. And there's Jeff Martinsss.",
    "start": "635541",
    "end": "640708"
  },
  {
    "text": "What? What's going on here? All right. So there's no servers that this is getting backed up to.",
    "start": "641250",
    "end": "646500"
  },
  {
    "text": "Live demo. Not live demo. I promise this is real.",
    "start": "647375",
    "end": "653000"
  },
  {
    "text": "This is real. email.com. All right.",
    "start": "653416",
    "end": "658083"
  },
  {
    "text": "Having trouble typing. Let me give an emoji to this guy. He's slightly crying because it didn't work right away.",
    "start": "658875",
    "end": "664375"
  },
  {
    "text": "And I'll give it a different color. All right. And hit Submit. And boom. That was kind of fast.",
    "start": "665166",
    "end": "670916"
  },
  {
    "text": "All right.\nSo now you can actually synchronize on both sides. I can come over here and make some edits.",
    "start": "672000",
    "end": "678541"
  },
  {
    "text": "And hit Save. And it automatically changes on both sides. OK. I could go on to demonstrate turning off the Wi-Fi again,",
    "start": "680000",
    "end": "687250"
  },
  {
    "text": "making edits on both sides, bringing it back up. But that takes time to do the PTP networking dance.",
    "start": "687500",
    "end": "692291"
  },
  {
    "text": "And I've got other stuff to show you guys today. So trust me that it works.",
    "start": "692875",
    "end": "697875"
  },
  {
    "text": "Dot, dot, dot. Thank you, sir. Thank you.",
    "start": "698500",
    "end": "702666"
  },
  {
    "text": "All right. I'm not sure if I'm supposed to drink that now or later. Or--",
    "start": "704500",
    "end": "708541"
  },
  {
    "text": "[INAUDIBLE] Yes, indeed. Appreciate it, buddy. OK. So I need to explain a couple of things",
    "start": "709875",
    "end": "716458"
  },
  {
    "text": "about what's going on there. So that demo was powered by the DXOS.",
    "start": "716458",
    "end": "721000"
  },
  {
    "text": "And there's a lot of magic happening there behind the scenes. I'm just going to give you... this talk is not about DXOS.",
    "start": "721875",
    "end": "728375"
  },
  {
    "text": "It's really about how we're using Effect Schema. So I'm just going to give you the only intro you need in order to understand the rest of the talk.",
    "start": "728750",
    "end": "734500"
  },
  {
    "text": "There's basically three things that make up DXOS. We have a data layer, which is our in-memory or our database... sorry, on the client database",
    "start": "734916",
    "end": "742916"
  },
  {
    "text": "called Echo. We're going to talk a lot more about that in a minute, because we're going to use that with Effect Schema. We also have an identity layer, because when",
    "start": "744000",
    "end": "750333"
  },
  {
    "text": "you don't have OAuth and all of that other stuff to deal with, you have to solve for identity somehow.",
    "start": "750333",
    "end": "754916"
  },
  {
    "text": "And so I saw you back there nodding your head. And then you have to deal with networking.",
    "start": "755625",
    "end": "759916"
  },
  {
    "text": "So we do some peer-to-peer networking. We call that mesh. I won't talk about Halo or Mesh anymore today,",
    "start": "760708",
    "end": "765875"
  },
  {
    "text": "but I will talk some more about Echo. All right. Now we're in part two. Whoo! We made it through one third of the talk.",
    "start": "766291",
    "end": "772375"
  },
  {
    "start": "768000",
    "end": "787000"
  },
  {
    "text": "OK. So part two, now that I want to focus on one specific aspect of local first software that",
    "start": "772833",
    "end": "780250"
  },
  {
    "text": "has a radically different shape when you move to this peer-to-peer system over client server,",
    "start": "780250",
    "end": "785708"
  },
  {
    "text": "and that's schema. What is schema?",
    "start": "785708",
    "end": "789125"
  },
  {
    "start": "787000",
    "end": "1031000"
  },
  {
    "text": "I know that probably the first thing that went through your mind when you heard that was something about databases. You probably thought about your database schema in Postgres",
    "start": "791333",
    "end": "797833"
  },
  {
    "text": "or your SQL database that defines the shape of the data in the database. But really schemas are everywhere in software.",
    "start": "798083",
    "end": "804333"
  },
  {
    "text": "Function signatures are schema. These are the type of things you can pass to this function, and you have to pass them or the function fails.",
    "start": "805541",
    "end": "812625"
  },
  {
    "text": "There is API layers are schema. In fact, they're explicitly. This endpoint accepts these fields in these types.",
    "start": "813750",
    "end": "821583"
  },
  {
    "text": "Do not send me anything else, or I will 200 your butt. Types themselves in our systems are schemas.",
    "start": "821916",
    "end": "828750"
  },
  {
    "text": "All of these things are schemas. Even protocols like HTTP and so forth define schemas.",
    "start": "829916",
    "end": "835791"
  },
  {
    "text": "We find that basically computing is absolutely littered with schema, and we don't do a great job of handling that.",
    "start": "836000",
    "end": "844125"
  },
  {
    "text": "Let's go back to our architecture. What we're going to do is we're going to look at schema and client server, and then talk about schema",
    "start": "845000",
    "end": "851208"
  },
  {
    "text": "in this new shape of software. Where is the schema here? I've already hinted at it.",
    "start": "851208",
    "end": "856583"
  },
  {
    "text": "You've got, starting on that side, you've got in your database, you're defining your schema somehow, probably in the SQL, but maybe you're",
    "start": "857875",
    "end": "864750"
  },
  {
    "text": "one of those crazy people who still believes in the NoSQL movement and likes your schema's implicit.",
    "start": "864750",
    "end": "870291"
  },
  {
    "text": "But you've got a schema somehow defining the shape of your data. You also have another schema at the ORM layer.",
    "start": "871666",
    "end": "877250"
  },
  {
    "text": "People don't often think about this, but think about the time that you had to do a validation that",
    "start": "877250",
    "end": "882625"
  },
  {
    "text": "wasn't a basic type in your database. Maybe you had to validate an email address, or you had to validate the formatting of something.",
    "start": "882666",
    "end": "889791"
  },
  {
    "text": "You probably wondered where to write that. Do I go write a stored procedure and store it in my database and then have my database tell me when it violates that?",
    "start": "890916",
    "end": "897833"
  },
  {
    "text": "Or do I just write it in the ORM layer? Or do I do both? Or how do I have my ORM layer ask Postgres",
    "start": "898125",
    "end": "904000"
  },
  {
    "text": "about the stored procedure to find out if it's valid before I try to do the save and then it throws an accept?",
    "start": "904250",
    "end": "908458"
  },
  {
    "text": "You end up with a separate set of validations, usually, in your ORM layer. That's a bunch of custom code that's not quite supported",
    "start": "909333",
    "end": "915791"
  },
  {
    "text": "by your database or isn't just quite ergonomic. And then over here in the API layer, you usually transform your back end into some API.",
    "start": "916125",
    "end": "923750"
  },
  {
    "text": "These aren't even the same thing anymore. And we brag about that. We're like, look, they're decoupled. You can independently iterate on them.",
    "start": "924250",
    "end": "930416"
  },
  {
    "text": "I can make changes to the back end without having to change the API layer. Except if you want to do any real work,",
    "start": "930416",
    "end": "935666"
  },
  {
    "text": "you have to do both of them. And then we have, on the front end, now that we have rich web apps on the front end, we have state management systems that have schema again.",
    "start": "935666",
    "end": "944208"
  },
  {
    "text": "Here's how we're going to store the data in memory in JavaScript. We have TypeScript. You guys know a few things about types way more",
    "start": "944250",
    "end": "950541"
  },
  {
    "text": "than I do about them. But we have to take care of that. All of that is schema.",
    "start": "950541",
    "end": "954375"
  },
  {
    "text": "That's a lot of schema. If you just consider making one change to a system, I just want to add one field to the front end.",
    "start": "956958",
    "end": "963125"
  },
  {
    "text": "One field, right? Your boss says, oh, we just need middle name in addition to first name and last name. How long can it take?",
    "start": "964041",
    "end": "969708"
  },
  {
    "text": "Imagine all of the changes that you have to go through in order to do that. You've got to update your state management system,",
    "start": "970208",
    "end": "974958"
  },
  {
    "text": "update the types, add a new field to your API, add a new field to the database, do a SQL migration,",
    "start": "975416",
    "end": "981416"
  },
  {
    "text": "update the ORM. There's changes in seven layers to just add another field to an existing object.",
    "start": "981666",
    "end": "987541"
  },
  {
    "text": "This is crazy. OK. Well, in this world, we still need schema.",
    "start": "988083",
    "end": "992833"
  },
  {
    "text": "It's not that we're throwing it out. We still need to define what the shape of data is at rest.",
    "start": "993625",
    "end": "999416"
  },
  {
    "text": "We'd still like to have nice compile time type checking. That would be wonderful. And we still need database validations,",
    "start": "1000791",
    "end": "1007666"
  },
  {
    "text": "like data validations. If I need to know is this thing valid before I try to stick it in the database, I need the database to tell me, nope.",
    "start": "1007875",
    "end": "1013958"
  },
  {
    "text": "Not going to accept that. Well, we think we can do all of this with a single schema.",
    "start": "1014541",
    "end": "1021041"
  },
  {
    "text": "One schema for the whole stack, all the way from the data to the front end. The schema of the database is the schema of the API,",
    "start": "1021833",
    "end": "1028750"
  },
  {
    "text": "is the schema of the front end. Whole thing. How do we do that magic? With effect schema, of course.",
    "start": "1028875",
    "end": "1034250"
  },
  {
    "start": "1031000",
    "end": "1043000"
  },
  {
    "text": "All right. So what's about to happen is I'm going to go into 2x mode. You thought I was speaking fast before?",
    "start": "1035375",
    "end": "1042375"
  },
  {
    "start": "1043000",
    "end": "1165000"
  },
  {
    "text": "I am about to go very fast, because I'm going to give you a very brief overview of effect schema. How many people have actually written s.struct?",
    "start": "1043166",
    "end": "1050166"
  },
  {
    "text": "Oh, sweet. I can go very quickly. All right. Great.\nMost of you are familiar with the basics of effect schema.",
    "start": "1051958",
    "end": "1058666"
  },
  {
    "text": "I'm still going to go through it. Here's 2x. All right. So we need... effect schema, in my mind, does three things for the",
    "start": "1059000",
    "end": "1064791"
  },
  {
    "text": "people who are not familiar with it. It allows you to define the shape of data, define a schema, perform some validations against that data,",
    "start": "1064791",
    "end": "1070958"
  },
  {
    "text": "and then do the all-important encode-decode step of transforming unknown data into that particular type",
    "start": "1071166",
    "end": "1077791"
  },
  {
    "text": "that you've just defined, or the object that you've just defined. So defining a schema looks like this. I'm only showing you this, because I'm",
    "start": "1077791",
    "end": "1083541"
  },
  {
    "text": "going to show it to you again on a slide seven or so slides from now. And I want you to see how it's different.",
    "start": "1083875",
    "end": "1088500"
  },
  {
    "text": "So here's the basics. s.struct allows me to define a schema object. It has a title. It has a done.",
    "start": "1088916",
    "end": "1094500"
  },
  {
    "text": "This is a task item. You can even define fancy schemas, which is pretty cool. So that custom code that I was talking about",
    "start": "1094500",
    "end": "1101583"
  },
  {
    "text": "that often your database may or may not support some or all of, you can pipe that item or that field",
    "start": "1101583",
    "end": "1108333"
  },
  {
    "text": "to a set of functions that will validate that it meets those requirements. So you can make it required.",
    "start": "1108958",
    "end": "1115041"
  },
  {
    "text": "You can set a min-length for strings. There's a whole bundle of these that are included with effect schema, which is really nice.",
    "start": "1115041",
    "end": "1119791"
  },
  {
    "text": "Every time I've needed to write one so far, for the most part, there's already been one there. And obviously, we could add more.",
    "start": "1120625",
    "end": "1126208"
  },
  {
    "text": "And then the reason you want that fancy schema is so you can do validation. So now I've written a bad task at the top,",
    "start": "1128083",
    "end": "1133333"
  },
  {
    "text": "where that done field, that is not a Boolean. Did I finish the talk slides? I don't know.",
    "start": "1133583",
    "end": "1138916"
  },
  {
    "text": "I guess we'll find out in a few minutes. It's a maybe. That's not a Boolean. And so is this thing a task?",
    "start": "1139083",
    "end": "1145375"
  },
  {
    "text": "If you call this isTask, it returns false. But you can do a stronger thing, where you can assert",
    "start": "1145833",
    "end": "1151041"
  },
  {
    "text": "that a thing is the right shape. And if you do an assertion, it throws a parse error.",
    "start": "1151791",
    "end": "1157625"
  },
  {
    "text": "And parse errors are actually really cool. I'm going to talk about those in a second, because they give you some really nice information about exactly what went wrong while you're parsing it.",
    "start": "1158083",
    "end": "1165208"
  },
  {
    "text": "All right. I don't have to cover encode and decode because in 45 minutes, Anna's going to talk about that, which is awesome.",
    "start": "1165750",
    "end": "1171208"
  },
  {
    "text": "So that's coming up. And let's see. The other nice thing is that your types can be inferred from the schema.",
    "start": "1172083",
    "end": "1177791"
  },
  {
    "text": "So if you haven't heard that... if you're not familiar with that... sorry, Effect Schema, it's nice to be able to get the same compile time type checking",
    "start": "1178250",
    "end": "1185583"
  },
  {
    "text": "that you have for validating data. It's a really nice library. OK.",
    "start": "1186041",
    "end": "1191125"
  },
  {
    "start": "1190000",
    "end": "1526000"
  },
  {
    "text": "In 2x mode. Now I'm going to show you how we're using Effect Schema at DXOS.",
    "start": "1191333",
    "end": "1198125"
  },
  {
    "text": "Caution. These are unreleased APIs. This is not in production yet at DXOS,",
    "start": "1200500",
    "end": "1206041"
  },
  {
    "text": "but it is something that we're testing internally and actively debating the shape of the API. In fact, we were changing it last night on the train.",
    "start": "1206041",
    "end": "1212750"
  },
  {
    "text": "So if you like this API, or you want to have some feedback on it,",
    "start": "1213750",
    "end": "1218208"
  },
  {
    "text": "feel free to talk to me or my three colleagues who I'll introduce in a little bit, and give us feedback.",
    "start": "1218791",
    "end": "1224833"
  },
  {
    "text": "Because we're going to implement this API in the next few weeks. Or lock it down.",
    "start": "1224833",
    "end": "1229750"
  },
  {
    "text": "So this would be sample code from our Hello app earlier. Remember our Hello app had a name, an email, your favorite",
    "start": "1230333",
    "end": "1238833"
  },
  {
    "text": "color, and hex code, and an emoji. So you've got a contact object",
    "start": "1238833",
    "end": "1244291"
  },
  {
    "text": "that has those objects, strings, and you've got this extra import of DXOS echo schema.",
    "start": "1244291",
    "end": "1250625"
  },
  {
    "text": "And the only thing that's different here is this extra pipe, this magical line, e.echo object.",
    "start": "1251375",
    "end": "1257583"
  },
  {
    "text": "What the heck is that? Notice that we pass in two things. One is a name for this type so that we can recognize it",
    "start": "1257875",
    "end": "1266500"
  },
  {
    "text": "and describe it or whatever. And then the last thing is a version number. Because eventually, you might want to change your schemas.",
    "start": "1266791",
    "end": "1274291"
  },
  {
    "text": "I'm not going to talk about that yet. And so that's nice.",
    "start": "1274791",
    "end": "1280000"
  },
  {
    "text": "The other thing that you get here is we have our own schema,",
    "start": "1280458",
    "end": "1285458"
  },
  {
    "text": "or we have our own function for deriving the types. Why do we do that? Why don't we just use s.schema2?",
    "start": "1286500",
    "end": "1292291"
  },
  {
    "text": "And the reason is that there are echo-specific fields. I don't know if anybody was paying attention in Tim's talk when he talked about persistence.",
    "start": "1292625",
    "end": "1298291"
  },
  {
    "text": "But I was. That's cool. That's a cool library. And he mentioned specifically that they",
    "start": "1298625",
    "end": "1304416"
  },
  {
    "text": "have to add additional fields to the schema. You need the database ID. And that's one of the things that they add on top",
    "start": "1304416",
    "end": "1310458"
  },
  {
    "text": "using their persistence library. Same for here. There's some database-specific stuff that you want to add.",
    "start": "1310791",
    "end": "1316125"
  },
  {
    "text": "That needs to be part of your types. Because we're using one schema the whole way through. You may not need that on the",
    "start": "1316166",
    "end": "1321625"
  },
  {
    "text": "front end on your client server app. But when you're using one schema, you do.",
    "start": "1321625",
    "end": "1325500"
  },
  {
    "text": "All right. Let's go to validation. Talk about this. We talked about we want to do data at rest.",
    "start": "1326708",
    "end": "1332000"
  },
  {
    "text": "We want type checking. And we want really nice validation. And so here's a... this is actually... OK.",
    "start": "1332000",
    "end": "1337916"
  },
  {
    "text": "Pause on validation. We'll come back. That's the next slide. This is the echo part. Remember I talked about how we",
    "start": "1339208",
    "end": "1345250"
  },
  {
    "text": "have a database in DXOS that's running on the client. This is where you actually take an object",
    "start": "1345250",
    "end": "1351333"
  },
  {
    "text": "and insert it into the database. So that space.db.add is inserting an object",
    "start": "1352083",
    "end": "1357416"
  },
  {
    "text": "into the database. And you'll notice that I'm passing in that contact type. That's the contact type that I got from the previous slide",
    "start": "1357541",
    "end": "1363291"
  },
  {
    "text": "that we inferred from the schema object. And then I can pass in these fields.",
    "start": "1363291",
    "end": "1367583"
  },
  {
    "text": "And when I do this, this performs the validation at that point. And if it is valid, inserts it in the database.",
    "start": "1368416",
    "end": "1375833"
  },
  {
    "text": "If it doesn't, we'll talk about what happens in a second. But this also triggers replication",
    "start": "1375833",
    "end": "1381791"
  },
  {
    "text": "to all connected devices. So this is that mesh piece where what you guys saw happening",
    "start": "1382166",
    "end": "1387750"
  },
  {
    "text": "between those two devices in the Hello app was happening because this object was added in. And then if you want to change the object",
    "start": "1387875",
    "end": "1394166"
  },
  {
    "text": "remember that one change that you needed to add a field or that kind of stuff? If you want to mutate the object, you just do this.",
    "start": "1395375",
    "end": "1400625"
  },
  {
    "text": "There isn't anything else. You just set the email directly. That updates the database. That replicates it to all devices.",
    "start": "1402208",
    "end": "1408833"
  },
  {
    "text": "That updates it in memory. That's it. It's just one line. Just mutate the object directly.",
    "start": "1409125",
    "end": "1413916"
  },
  {
    "text": "Remember this diagram from earlier. So it's replicating that database across all the different clients.",
    "start": "1416000",
    "end": "1420875"
  },
  {
    "text": "The really cool thing about that object that you got back from the database, that space.db.add, is it's a reactive object that any time any client makes",
    "start": "1422041",
    "end": "1429916"
  },
  {
    "text": "any change to that object, it updates in memory using a signals library. We can talk more about signals later.",
    "start": "1430083",
    "end": "1434916"
  },
  {
    "text": "But the nice thing is here's a really simple contact card that uses contact.name. This thing will re-render magically, automatically,",
    "start": "1435208",
    "end": "1442375"
  },
  {
    "text": "every time the name field changes on contact. And so you get that kind of reactivity for free,",
    "start": "1443000",
    "end": "1450083"
  },
  {
    "text": "which plays really nicely with React. Makes it really easy to write these kind of applications. Notice there's no subscriptions here.",
    "start": "1450083",
    "end": "1455875"
  },
  {
    "text": "It'll automatically re-render. We talked about validations a minute ago.",
    "start": "1456708",
    "end": "1462000"
  },
  {
    "text": "This gives you really nice validation. So you can write this email regex and pipe it in.",
    "start": "1462708",
    "end": "1469125"
  },
  {
    "text": "And I'm basically showing you this pipe. If you're familiar with... this isn't anything surprising. This isn't different at all from effect schema.",
    "start": "1469750",
    "end": "1477291"
  },
  {
    "text": "But then we take advantage of everything about the effect schema library for the purposes of validation.",
    "start": "1478208",
    "end": "1483500"
  },
  {
    "text": "So if you actually do a if you set contact email to something that's not an email,",
    "start": "1484041",
    "end": "1488500"
  },
  {
    "text": "it'll throw a parse error. And this is what I was talking about. You have these really nice errors. I don't know if anybody remembers ActiveRecord,",
    "start": "1489875",
    "end": "1495416"
  },
  {
    "text": "but I'm old enough to remember ActiveRecord from Rails. And these kinds of error messages make building UIs",
    "start": "1495916",
    "end": "1500916"
  },
  {
    "text": "and building applications really nice. Here's how the thing was wrong. And you can translate that directly",
    "start": "1501208",
    "end": "1506958"
  },
  {
    "text": "into a message to the user. OK. Woo! OK. We got one schema,",
    "start": "1507166",
    "end": "1514041"
  },
  {
    "text": "data at rest, type checking, and database validations, all from effect schema. And then building that on top of DXOS's Echo database,",
    "start": "1514041",
    "end": "1522916"
  },
  {
    "text": "it also replicates all across all your devices. You survived the first two parts of the talk.",
    "start": "1523208",
    "end": "1528750"
  },
  {
    "start": "1526000",
    "end": "1596000"
  },
  {
    "text": "We're now to part three, Beyond Apps. So far, we talked about a new shape of software. We talked about how we use Effect Schema",
    "start": "1529166",
    "end": "1535666"
  },
  {
    "text": "to solve for the distributed schema problem. But now I want to talk about Beyond Apps.",
    "start": "1536208",
    "end": "1541750"
  },
  {
    "text": "The thing is, once you have schema everywhere in your system, and it's the same schema,",
    "start": "1543041",
    "end": "1548000"
  },
  {
    "text": "it enables all kinds of new and interesting things. So let me show you another demo.",
    "start": "1548500",
    "end": "1553708"
  },
  {
    "text": "Let's see. Actually, before I get there... I'll do the demo in a second here... one thing that we do...",
    "start": "1554208",
    "end": "1560166"
  },
  {
    "text": "who's familiar with Effect Schema's ability to serialize schemas to JSON schema?",
    "start": "1561208",
    "end": "1566375"
  },
  {
    "text": "So Effect Schema can actually take your schema and serialize it out to disk. So what we do is we take that schema",
    "start": "1567000",
    "end": "1573833"
  },
  {
    "text": "and we store the schema itself in the database. Now, you might be thinking, why would you do that?",
    "start": "1574333",
    "end": "1581000"
  },
  {
    "text": "You literally have the library or whatever... you exported const s.struct.",
    "start": "1581500",
    "end": "1586166"
  },
  {
    "text": "You have it in your code base. Why would you need to store it in the database? Let's find out.",
    "start": "1587000",
    "end": "1592625"
  },
  {
    "text": "Let's see. All right.",
    "start": "1593125",
    "end": "1600291"
  },
  {
    "start": "1596000",
    "end": "2038000"
  },
  {
    "text": "OK. Can you give me some volume? There we go. So we will come back over here and",
    "start": "1602583",
    "end": "1610375"
  },
  {
    "text": "So I need to introduce another application.",
    "start": "1617500",
    "end": "1622750"
  },
  {
    "text": "So we had Hello, which is hello.dxos.org. This is Composer. So I'll tell you more about Composer in a second.",
    "start": "1623541",
    "end": "1630041"
  },
  {
    "text": "But the important thing you need to know about Composer is it's basically like a crossover between Notion",
    "start": "1630541",
    "end": "1635208"
  },
  {
    "text": "and Air Table. But it's fully customizable and it's open source. And it's built on top of DXOS,",
    "start": "1635833",
    "end": "1641833"
  },
  {
    "text": "so it's real time collaborative and all the magic. And it is infused with schema.",
    "start": "1642125",
    "end": "1647291"
  },
  {
    "text": "In other words, it knows all about the schemas you have in the database. And one way I'll demonstrate that is coming over here.",
    "start": "1648041",
    "end": "1656250"
  },
  {
    "text": "We're going to go to our Effect Days thing. So Composer has this really nice thing called a table.",
    "start": "1657541",
    "end": "1665583"
  },
  {
    "text": "And the table actually can look up schemas in the database.",
    "start": "1667083",
    "end": "1672458"
  },
  {
    "text": "So you see this dxos.org.contact schema. And then contacts.",
    "start": "1673500",
    "end": "1677833"
  },
  {
    "text": "Close here. Whoa. What just happened? This application on the left",
    "start": "1679250",
    "end": "1685958"
  },
  {
    "text": "let me open a new window here. Not a new incognito window.",
    "start": "1686208",
    "end": "1692208"
  },
  {
    "text": "Whoop. Boop. Boop. There we go.",
    "start": "1694083",
    "end": "1698416"
  },
  {
    "text": "All right. So on the left, we have composer.dxos.org and hello.",
    "start": "1700250",
    "end": "1706500"
  },
  {
    "text": "I'm sorry, hello.dxos.org on the other side. Those two applications are synchronizing",
    "start": "1706791",
    "end": "1711541"
  },
  {
    "text": "the same database across applications. So you have multiple apps reading from the same database.",
    "start": "1712083",
    "end": "1720750"
  },
  {
    "text": "The Composer code base knows nothing. There's no code that defines a contact schema",
    "start": "1721500",
    "end": "1727833"
  },
  {
    "text": "inside the Composer database. Instead, it saw an object in the database,",
    "start": "1728416",
    "end": "1733500"
  },
  {
    "text": "looked up the object schema from the database, and then was able to instantiate a table.",
    "start": "1734083",
    "end": "1739208"
  },
  {
    "text": "And so you get things like this, where I can come in and make a change, fix my last name,",
    "start": "1739791",
    "end": "1744333"
  },
  {
    "text": "and it does it magically right both ways. I can even add new records.",
    "start": "1746208",
    "end": "1750583"
  },
  {
    "text": "Whoops. Not that one. Here we go. Johannes Schickling.",
    "start": "1751875",
    "end": "1757208"
  },
  {
    "text": "Johannes, what's your favorite emoji? Mind blown.",
    "start": "1758666",
    "end": "1763500"
  },
  {
    "text": "Let's see if we can do it. Sorry, we're already on mind blown.",
    "start": "1766583",
    "end": "1770791"
  },
  {
    "text": "And we're going to do a random color. Six random digits.",
    "start": "1772333",
    "end": "1776458"
  },
  {
    "text": "Boom. There's Johannes over there. For some reason, I didn't pick up his name. Johannes.",
    "start": "1777541",
    "end": "1782708"
  },
  {
    "text": "Boom. Whoa. OK. So the reality of what's going on here",
    "start": "1783541",
    "end": "1789250"
  },
  {
    "text": "is that my previous little diagram was a little bit of a lie.",
    "start": "1789625",
    "end": "1793833"
  },
  {
    "text": "The lie was that there's a front end that has a database in it. When it's really multiple applications reading",
    "start": "1794708",
    "end": "1802166"
  },
  {
    "text": "from the same database. Fun.",
    "start": "1802166",
    "end": "1807041"
  },
  {
    "text": "So there's some magic that you get from this when you have the schema everywhere",
    "start": "1807500",
    "end": "1813458"
  },
  {
    "text": "in your application. And I could show you some really cool things that DXOS does, or that Composer does for you.",
    "start": "1813458",
    "end": "1820916"
  },
  {
    "text": "But I think the coolest one I'll jump straight to the closer. Here we go.",
    "start": "1821833",
    "end": "1827291"
  },
  {
    "text": "Why does it keep doing that?",
    "start": "1829083",
    "end": "1831000"
  },
  {
    "text": "All right. We'll open this little AI folder. What is that?",
    "start": "1835291",
    "end": "1839416"
  },
  {
    "text": "All right. Let's see. OK. So somebody might have actually read the effect blog",
    "start": "1840458",
    "end": "1847541"
  },
  {
    "text": "and read this post. But I've got this little AI thing that I can show you.",
    "start": "1848000",
    "end": "1854250"
  },
  {
    "text": "So over here, we've got",
    "start": "1855416",
    "end": "1859833"
  },
  {
    "text": "these are AI prompts. Who's used Chat GPT? Please, every hand go up.",
    "start": "1863041",
    "end": "1868708"
  },
  {
    "text": "Most hands. So when you're prompting an LLM, you have to tell it what you want it to return to you.",
    "start": "1869916",
    "end": "1876458"
  },
  {
    "text": "So you've got this little prompt here. List all companies mentioned in the text below. Now, we can actually add the schema into the contact,",
    "start": "1876625",
    "end": "1886041"
  },
  {
    "text": "into what we're asking the LLM to return. So this gives us the ability to say, hey, LLM,",
    "start": "1886708",
    "end": "1894500"
  },
  {
    "text": "this is the shape of the data that I would like you to return. And so we can go over here.",
    "start": "1895750",
    "end": "1901500"
  },
  {
    "text": "I think I need to do I need to recall one thing.",
    "start": "1902000",
    "end": "1906875"
  },
  {
    "text": "Creat table. New schema. dxos.org.contact. OK, cool.",
    "start": "1910041",
    "end": "1914875"
  },
  {
    "text": "Boop. Close.",
    "start": "1915250",
    "end": "1918833"
  },
  {
    "text": "All right, when you go over here.",
    "start": "1922791",
    "end": "1927000"
  },
  {
    "text": "Boop. All right, so we're asking, list all the people",
    "start": "1931875",
    "end": "1936666"
  },
  {
    "text": "from mentioned in the text below. And can you have it conform to this dxos.org.contact?",
    "start": "1937416",
    "end": "1942375"
  },
  {
    "text": "Let's see if this works. So we'll go over to the summary of the trip. This was a blog post posted on the effect blog.",
    "start": "1942916",
    "end": "1947916"
  },
  {
    "text": "I'm going to select the whole thing, come over here, and say, slash extract.",
    "start": "1948375",
    "end": "1955166"
  },
  {
    "text": "All right, hopefully you see a little processing thing right here. Please.",
    "start": "1958583",
    "end": "1962375"
  },
  {
    "text": "This is reliant on us hitting the OpenAI API. Let's see.",
    "start": "1964000",
    "end": "1968583"
  },
  {
    "text": "Actually check and make sure the function server's still running. Boop.",
    "start": "1970750",
    "end": "1975916"
  },
  {
    "text": "Two seconds. Two seconds.",
    "start": "1976833",
    "end": "1978375"
  },
  {
    "text": "Up, up, up. At first, you don't succeed. Today's been the demo day of do it twice.",
    "start": "1983833",
    "end": "1990500"
  },
  {
    "text": "Let's see. Slash extract. Ah, you're right.",
    "start": "1991500",
    "end": "1998750"
  },
  {
    "text": "That one is. Thank you. This is why you should always code with a large group of people watching you.",
    "start": "1998791",
    "end": "2003625"
  },
  {
    "text": "Slash extract. There we go.",
    "start": "2004333",
    "end": "2005791"
  },
  {
    "text": "We do need some type. I think I need some Effect. All right, well, I'm going to give it up at the end here.",
    "start": "2009916",
    "end": "2016791"
  },
  {
    "text": "I think the point is that I wanted to make is that when you have schema encoded through your entire application, you",
    "start": "2017125",
    "end": "2023291"
  },
  {
    "text": "can do lots of magical things. Composer does some great stuff here. If you'd actually like to see this AI demo working,",
    "start": "2023291",
    "end": "2028833"
  },
  {
    "text": "I have three compadres sitting over here. Let me switch over to my last slides,",
    "start": "2029333",
    "end": "2035041"
  },
  {
    "text": "and we'll close this sucker out. All right. So one thing I didn't talk about was schema migration.",
    "start": "2035666",
    "end": "2043250"
  },
  {
    "start": "2038000",
    "end": "2104000"
  },
  {
    "text": "That's a hard problem. We're working on it. If it's something you're interested in learning how to change schemas across a decentralized or distributed",
    "start": "2043791",
    "end": "2049958"
  },
  {
    "text": "group of applications, talk to me. Johannes is also working on that one. It's an interesting one. Schema distribution is also not as challenging.",
    "start": "2049958",
    "end": "2055708"
  },
  {
    "text": "I'm not as easy as I made it sound. How do you serialize arbitrary code for validations?",
    "start": "2056083",
    "end": "2062666"
  },
  {
    "text": "We don't do that yet. In fact, schema doesn't do that yet. But the point of the talk, hopefully,",
    "start": "2063666",
    "end": "2068625"
  },
  {
    "text": "is a different shape of software makes some hard things easy.",
    "start": "2069083",
    "end": "2073750"
  },
  {
    "text": "You can go from many schemas down to a single schema. So I hope you guys rethink the shape of software",
    "start": "2074416",
    "end": "2079750"
  },
  {
    "text": "the next time you're approaching one of your new projects. If you're interested in working on this or seeing more demos,",
    "start": "2079750",
    "end": "2085125"
  },
  {
    "text": "come help us build. Rich, Yaroslav, Dima, can you guys wave your hands? All three of those guys are also working on DXOS.",
    "start": "2085375",
    "end": "2091875"
  },
  {
    "text": "So feel free to grab any one of us, ask us questions. We have loved working with a Effect Schema",
    "start": "2092333",
    "end": "2098583"
  },
  {
    "text": "and hoping to do more. So thanks, guys. (audience applauds)",
    "start": "2099083",
    "end": "2103250"
  }
]