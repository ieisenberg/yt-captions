[
  {
    "text": "Allright. There. Today we're going to be working on the effects.",
    "start": "7125",
    "end": "13375"
  },
  {
    "text": "Content layer for effect. Continuing off, continuing from where we left off last time.",
    "start": "15625",
    "end": "21791"
  },
  {
    "text": "And where did we get to last time?",
    "start": "23958",
    "end": "28000"
  },
  {
    "text": "We implemented sources in-- well, we improved sources, which are the",
    "start": "31500",
    "end": "41791"
  },
  {
    "text": "part of content layer that will provide content to your app.",
    "start": "41791",
    "end": "49416"
  },
  {
    "text": "And we started working on source plugins.",
    "start": "50500",
    "end": "53333"
  },
  {
    "text": "So what I'm going to do is open source.",
    "start": "56041",
    "end": "58666"
  },
  {
    "text": "And have a quick catch up. The source is a stream",
    "start": "61541",
    "end": "69291"
  },
  {
    "text": "that has some output. It can fail with any error.",
    "start": "69291",
    "end": "77916"
  },
  {
    "text": "Maybe we should remove the error type and just fail with content layer error.",
    "start": "81833",
    "end": "87833"
  },
  {
    "text": "I think that should simplify things, actually.",
    "start": "96041",
    "end": "98583"
  },
  {
    "text": "So get rid of error there. Provided it's fine.",
    "start": "102416",
    "end": "107416"
  },
  {
    "text": "And the output for a source contains how to--",
    "start": "108833",
    "end": "112666"
  },
  {
    "text": "write helpers for retrieving the content. Contains the fields that will",
    "start": "114333",
    "end": "119750"
  },
  {
    "text": "be part of the document schema and some metadata.",
    "start": "119750",
    "end": "121875"
  },
  {
    "text": "Yeah, we defined a file system source.",
    "start": "130833",
    "end": "134833"
  },
  {
    "text": "OK. And source plugin.",
    "start": "136000",
    "end": "140000"
  },
  {
    "text": "We've started working on a unified one, which we use for passing markdown using remark.",
    "start": "151833",
    "end": "157540"
  },
  {
    "text": "Because we changed the error type, we need to update this.",
    "start": "159000",
    "end": "165625"
  },
  {
    "text": "X can only fail with content layer error.",
    "start": "189208",
    "end": "198625"
  },
  {
    "text": "OK. Let's spin it.",
    "start": "205625",
    "end": "207833"
  },
  {
    "text": "I think the output type could be a bit better.",
    "start": "211791",
    "end": "217290"
  },
  {
    "text": "I think plugins should be able to add metadata.",
    "start": "224833",
    "end": "229500"
  },
  {
    "text": "So maybe instead of meta, we use context again.",
    "start": "231666",
    "end": "238375"
  },
  {
    "text": "So I think a couple iterations back, I was saying context. But the problem was the fields.",
    "start": "241833",
    "end": "249333"
  },
  {
    "text": "So we moved to this output structure with metadata added",
    "start": "250833",
    "end": "256875"
  },
  {
    "text": "here. But I think what we can do instead is add context back.",
    "start": "256875",
    "end": "263458"
  },
  {
    "text": "Can do that. And then that way, we can add--",
    "start": "265208",
    "end": "271416"
  },
  {
    "text": "We can add things to metadata.",
    "start": "274416",
    "end": "275582"
  },
  {
    "text": "And then file system",
    "start": "280583",
    "end": "290833"
  },
  {
    "text": "would then become a tag.",
    "start": "290833",
    "end": "294750"
  },
  {
    "text": "Content layer core, source, file system meta in here.",
    "start": "322750",
    "end": "325916"
  },
  {
    "text": "And then the shape will be path, after pass, and readonly path.",
    "start": "331916",
    "end": "339708"
  },
  {
    "text": "It removes underscore. Context is imported as a type.",
    "start": "348125",
    "end": "356458"
  },
  {
    "text": "Is that it?",
    "start": "358000",
    "end": "358875"
  },
  {
    "text": "And then here, context equals-- context equals--",
    "start": "363708",
    "end": "367291"
  },
  {
    "text": "There we go.",
    "start": "379250",
    "end": "382833"
  },
  {
    "text": "And then that means our plugins can add metadata.",
    "start": "388666",
    "end": "392500"
  },
  {
    "text": "Maybe we can add a",
    "start": "406791",
    "end": "414207"
  },
  {
    "text": "meta context extractor.",
    "start": "414208",
    "end": "416625"
  },
  {
    "text": "It's a similar thing. Context dot context meta",
    "start": "439583",
    "end": "445833"
  },
  {
    "text": "OK. Let's look at plugins again.",
    "start": "452041",
    "end": "456250"
  },
  {
    "text": "And I think the unified plugin could add some output here.",
    "start": "461708",
    "end": "469875"
  },
  {
    "text": "V file with output.",
    "start": "473250",
    "end": "474958"
  },
  {
    "text": "Where is that coming from? V file.",
    "start": "479541",
    "end": "483833"
  },
  {
    "text": "This thing? V file?",
    "start": "490833",
    "end": "492708"
  },
  {
    "text": "V file.",
    "start": "504250",
    "end": "505000"
  },
  {
    "text": "It's coming from a V file. Package.",
    "start": "513125",
    "end": "518000"
  },
  {
    "text": "Again.",
    "start": "522250",
    "end": "522541"
  },
  {
    "text": "It is core.",
    "start": "531375",
    "end": "536541"
  },
  {
    "text": "add V file.",
    "start": "539125",
    "end": "544500"
  },
  {
    "text": "Let me search npm npm package.",
    "start": "553125",
    "end": "560333"
  },
  {
    "text": "V file.",
    "start": "562625",
    "end": "563375"
  },
  {
    "text": "So it contains the types.",
    "start": "568333",
    "end": "570583"
  },
  {
    "text": "We don't want to add it here. We will get that in plugins.",
    "start": "600833",
    "end": "605166"
  },
  {
    "text": "process.",
    "start": "631083",
    "end": "635250"
  },
  {
    "text": "Promise V file with output.",
    "start": "638791",
    "end": "642541"
  },
  {
    "text": "V file. With a result field.",
    "start": "678083",
    "end": "682958"
  },
  {
    "text": "class unified output.",
    "start": "713416",
    "end": "717333"
  },
  {
    "text": "ezxtends context. We import context.",
    "start": "720625",
    "end": "726791"
  },
  {
    "text": "tagged",
    "start": "733541",
    "end": "733833"
  },
  {
    "text": "Maybe that. V file is a class.",
    "start": "762916",
    "end": "768666"
  },
  {
    "text": "This is fun.",
    "start": "784791",
    "end": "786083"
  },
  {
    "text": "So the unified plugin.",
    "start": "799916",
    "end": "801041"
  },
  {
    "text": "We'll take a unified processor.",
    "start": "809458",
    "end": "812750"
  },
  {
    "text": "And the function that extracts the fields. Maybe we'll rename this to extract fields.",
    "start": "820208",
    "end": "827041"
  },
  {
    "text": "It will take the V file.",
    "start": "827916",
    "end": "834041"
  },
  {
    "text": "And.",
    "start": "835125",
    "end": "835833"
  },
  {
    "text": "Then I'll build the processor. We will add ",
    "start": "844291",
    "end": "849916"
  },
  {
    "text": "The unified output to the metadata.",
    "start": "849958",
    "end": "851916"
  },
  {
    "text": "Body field from the value.",
    "start": "865916",
    "end": "868125"
  },
  {
    "text": "Maybe we'll just do that.",
    "start": "871875",
    "end": "873916"
  },
  {
    "text": "Oh, Maxwell might join us. Let's grab a look from.",
    "start": "882666",
    "end": "888625"
  },
  {
    "text": "Let's see if Max joins us.",
    "start": "906500",
    "end": "908791"
  },
  {
    "text": "So here we're processing the content.",
    "start": "913791",
    "end": "917375"
  },
  {
    "text": "Adding fields.",
    "start": "920750",
    "end": "921500"
  },
  {
    "text": "And let's add a helper to add metadata.",
    "start": "928041",
    "end": "932916"
  },
  {
    "text": "And here we'll take a tag. For the context dot tag.",
    "start": "938416",
    "end": "942625"
  },
  {
    "text": "And a value. And the output meta slash the tag.",
    "start": "945500",
    "end": "953500"
  },
  {
    "text": "And then for context, we can go, context start add.",
    "start": "955625",
    "end": "960166"
  },
  {
    "text": "This dot context.",
    "start": "960916",
    "end": "962083"
  },
  {
    "text": "Cool. We go back here.",
    "start": "967458",
    "end": "972791"
  },
  {
    "text": "We can go and add meta Unified output.",
    "start": "975083",
    "end": "980541"
  },
  {
    "text": "Now the unified plugin, we'll add some fields.",
    "start": "987250",
    "end": "993333"
  },
  {
    "text": "And also add some metadata.",
    "start": "995875",
    "end": "997583"
  },
  {
    "text": "So that we can use another plugin that we want to.",
    "start": "1001833",
    "end": "1004166"
  },
  {
    "text": "So now we'll take this, take the v file.",
    "start": "1008083",
    "end": "1010791"
  },
  {
    "text": "It'll return a body from v file dot value.",
    "start": "1016416",
    "end": "1022333"
  },
  {
    "text": "v file dot doesn't.",
    "start": "1032541",
    "end": "1035166"
  },
  {
    "text": "What happens if we want to add remark plugins here?",
    "start": "1062791",
    "end": "1065958"
  },
  {
    "text": "Also does this strip the prompt? I guess we can try and find out.",
    "start": "1075750",
    "end": "1080750"
  },
  {
    "text": "Let's build.",
    "start": "1083291",
    "end": "1084000"
  },
  {
    "text": "new tab",
    "start": "1092291",
    "end": "1097291"
  },
  {
    "text": "How do we run this again?",
    "start": "1099875",
    "end": "1102541"
  },
  {
    "text": "cannot find module effects schema. Of course.",
    "start": "1129125",
    "end": "1131916"
  },
  {
    "text": "I did update all the packages before, but forgot to update the config file.",
    "start": "1135250",
    "end": "1140833"
  },
  {
    "text": "and now schema is part of effect.",
    "start": "1147250",
    "end": "1150750"
  },
  {
    "text": "There we go.",
    "start": "1158958",
    "end": "1161625"
  },
  {
    "text": "Sorry ContentLayer",
    "start": "1171416",
    "end": "1172208"
  },
  {
    "text": "We've got our output stream, output object.",
    "start": "1177291",
    "end": "1181208"
  },
  {
    "text": "We've got content helpers. Our content submitted data, which contains the fastest",
    "start": "1182375",
    "end": "1189000"
  },
  {
    "text": "emitter and the unified output, the v file.",
    "start": "1189000",
    "end": "1193458"
  },
  {
    "text": "It doesn't look quite right. We want front meta in there.",
    "start": "1198875",
    "end": "1203791"
  },
  {
    "text": "So we go back to source plugin. Go back to our extract fields.",
    "start": "1207083",
    "end": "1210875"
  },
  {
    "text": "We need to build.",
    "start": "1249666",
    "end": "1251875"
  },
  {
    "text": "Oh, it's Max. There you go.",
    "start": "1261250",
    "end": "1266458"
  },
  {
    "text": "Hello. Can you hear me? I can hear you.",
    "start": "1267166",
    "end": "1272750"
  },
  {
    "text": "Can you hear me? Yes, I can. Excellent. I seem to have lost the",
    "start": "1272750",
    "end": "1279291"
  },
  {
    "text": "little nub on my headset. I'm just going to see if it's over here. All right.",
    "start": "1279291",
    "end": "1284208"
  },
  {
    "text": "What would we do without a nub? You might have to listen to my heavy breathing.",
    "start": "1286541",
    "end": "1291333"
  },
  {
    "text": "I'm going to run this again.",
    "start": "1297541",
    "end": "1298958"
  },
  {
    "text": "We are SOL.",
    "start": "1303833",
    "end": "1304791"
  },
  {
    "text": "It's up here. How are you doing, my friend?",
    "start": "1310083",
    "end": "1314500"
  },
  {
    "text": "Pretty good. Just looking at the Markdown plugin.",
    "start": "1315958",
    "end": "1322583"
  },
  {
    "text": "Nice. And while you weren't here, I addressed--",
    "start": "1323500",
    "end": "1331916"
  },
  {
    "text": "I made a couple of changes to source, the first one being,",
    "start": "1333125",
    "end": "1337291"
  },
  {
    "text": "I removed the error generic and just fixed it to content layer error. OK.",
    "start": "1338708",
    "end": "1344833"
  },
  {
    "text": "Just to make the interface a bit simpler.",
    "start": "1346125",
    "end": "1348000"
  },
  {
    "text": "And I made it so plugins could contribute to metadata by any context to output, which means we",
    "start": "1351708",
    "end": "1363708"
  },
  {
    "text": "can do things like this.",
    "start": "1363708",
    "end": "1368208"
  },
  {
    "text": "The plugin can take a source in and then add stuff to the metadata like we",
    "start": "1371375",
    "end": "1377291"
  },
  {
    "text": "do with effect context.",
    "start": "1377291",
    "end": "1380583"
  },
  {
    "text": "With the idea being in the computed fields or in other plugins, you",
    "start": "1383500",
    "end": "1389416"
  },
  {
    "text": "could access the metadata from plugins.",
    "start": "1389416",
    "end": "1392166"
  },
  {
    "text": "Yeah, that's exactly what I was trying to go for in at least the mocked up document thingy.",
    "start": "1394500",
    "end": "1399750"
  },
  {
    "text": "I really wanted at least metadata from source, but having metadata from plugins is",
    "start": "1400208",
    "end": "1406291"
  },
  {
    "text": "really cool as well. And right now, I'm just looking at the remark plugin",
    "start": "1406291",
    "end": "1413416"
  },
  {
    "text": "and trying to get the fields looking right. And I think this isn't looking too bad.",
    "start": "1414458",
    "end": "1422125"
  },
  {
    "text": "I'm just wondering, in the body, we want to make sure the",
    "start": "1422416",
    "end": "1427791"
  },
  {
    "text": "front meta is stripped out. Because at the moment, that will render stuff.",
    "start": "1427791",
    "end": "1434666"
  },
  {
    "text": "So I'm just going to quickly Google Remark strip.",
    "start": "1438041",
    "end": "1442708"
  },
  {
    "text": "front meta Where is the generated piece of this?",
    "start": "1443750",
    "end": "1450291"
  },
  {
    "text": "How is this being produced currently? So the content layer",
    "start": "1450416",
    "end": "1455666"
  },
  {
    "text": "config looks like this. OK. I think for now, I",
    "start": "1455666",
    "end": "1460916"
  },
  {
    "text": "want to actually remove these computed fields.",
    "start": "1460916",
    "end": "1463041"
  },
  {
    "text": "So this is what our source looks like right now. OK.",
    "start": "1468541",
    "end": "1472375"
  },
  {
    "text": "It's taking-- Sorry, go ahead. And it's just taking posts from the scratch pad.",
    "start": "1473833",
    "end": "1481416"
  },
  {
    "text": "OK. And then the unified remark plugin",
    "start": "1483000",
    "end": "1487833"
  },
  {
    "text": "that you have there contributes what, if anything?",
    "start": "1488083",
    "end": "1496208"
  },
  {
    "text": "So it's kind of like it's using this",
    "start": "1498000",
    "end": "1503125"
  },
  {
    "text": "unified plugin, which contributes unified output, which is kind",
    "start": "1503125",
    "end": "1511791"
  },
  {
    "text": "of like the raw output from unified, this feed file thing.",
    "start": "1511791",
    "end": "1515833"
  },
  {
    "text": "And then it just adds some fields.",
    "start": "1517333",
    "end": "1518833"
  },
  {
    "text": "And it uses these Remark plugins here. But I guess if a user wanted",
    "start": "1524458",
    "end": "1531666"
  },
  {
    "text": "to add their own Remark plugins, then maybe we create",
    "start": "1531666",
    "end": "1542250"
  },
  {
    "text": "another abstraction for Remark, where you just add",
    "start": "1542250",
    "end": "1551333"
  },
  {
    "text": "your plugins or provide an array of plugins, maybe?",
    "start": "1551333",
    "end": "1555708"
  },
  {
    "text": "Yeah, because I could see-- Well, the current content layer allows",
    "start": "1557291",
    "end": "1562666"
  },
  {
    "text": "you to provide both Remark and Rehype plugins, I think. Yeah.",
    "start": "1562666",
    "end": "1567083"
  },
  {
    "text": "Well, Rehype is a layer on Remark, isn't it? I don't know.",
    "start": "1569125",
    "end": "1573750"
  },
  {
    "text": "I don't know. I know that a lot of tools separate them out. But--",
    "start": "1575625",
    "end": "1580833"
  },
  {
    "text": "Remark Rehype strips it out here.",
    "start": "1581166",
    "end": "1583708"
  },
  {
    "text": "I thought Rehype goes to HTML. Do we want to go to HTML?",
    "start": "1586875",
    "end": "1592666"
  },
  {
    "text": "I think in the Effect website. We have our own Markdown renderer instead of HTML.",
    "start": "1594833",
    "end": "1600541"
  },
  {
    "text": "Let me look.",
    "start": "1600583",
    "end": "1604291"
  },
  {
    "text": "Let's take a look, because I don't remember a while ago that we set all that stuff up.",
    "start": "1610416",
    "end": "1614666"
  },
  {
    "text": "Let's look at the Rehype-- Remark Rehype.",
    "start": "1622458",
    "end": "1624833"
  },
  {
    "text": "So it looks like we use some Remark plugins. We have the code import plugin.",
    "start": "1628416",
    "end": "1634041"
  },
  {
    "text": "We have Shiki twoslash, GitHub flavored Markdown, and MDX code meta.",
    "start": "1634375",
    "end": "1640416"
  },
  {
    "text": "And then we also have some Rehype plugins, which we have Rehype raw",
    "start": "1641250",
    "end": "1645041"
  },
  {
    "text": "Then we have Rehype pretty code. Rehype slug.",
    "start": "1646958",
    "end": "1651333"
  },
  {
    "text": "So probably like a similar interface where a lot",
    "start": "1658458",
    "end": "1667916"
  },
  {
    "text": "of these tools, I feel like, take an array of tuples of the",
    "start": "1667916",
    "end": "1674250"
  },
  {
    "text": "plugin and their config. Yes.",
    "start": "1674250",
    "end": "1677416"
  },
  {
    "text": "Well, I like the unified abstraction, but I'm not sure about the Remark one.",
    "start": "1687166",
    "end": "1692708"
  },
  {
    "text": "I know in the old content layer, this builder, the builder of the processor is abstracted away,",
    "start": "1693958",
    "end": "1700833"
  },
  {
    "text": "which is a bit annoying if you wanted to add asynchronous construction or something.",
    "start": "1702125",
    "end": "1708916"
  },
  {
    "text": "Because I know  twoslash uses promises to create the Remark plugin.",
    "start": "1712125",
    "end": "1717833"
  },
  {
    "text": "So in that case, you would have to",
    "start": "1721333",
    "end": "1728541"
  },
  {
    "text": "resolve that promise before constructing your processor. So it would be something like two slash.",
    "start": "1728541",
    "end": "1746000"
  },
  {
    "text": "plugin equals yield effect.promise and",
    "start": "1754333",
    "end": "1764833"
  },
  {
    "text": "then you would build your two slash plugin in there and then return the processor.",
    "start": "1764833",
    "end": "1771500"
  },
  {
    "text": "Is the processor for your unified interface thingy here already an effect thing?",
    "start": "1773833",
    "end": "1782166"
  },
  {
    "text": "Like does it take you to effect? Yeah, it takes an effect Oh nice. Okay, cool.",
    "start": "1782208",
    "end": "1786458"
  },
  {
    "text": "Yeah, I mean, I think eventually we'll probably want to provide like the flexibility of adding",
    "start": "1789291",
    "end": "1794500"
  },
  {
    "text": "additional whatever, but I feel like the default ones you have here are probably fine for now.",
    "start": "1794500",
    "end": "1799000"
  },
  {
    "text": "We could just like focus on content and stuff. But maybe we just",
    "start": "1800041",
    "end": "1805833"
  },
  {
    "text": "quickly add rehype here.",
    "start": "1805833",
    "end": "1807875"
  },
  {
    "text": "And just so we get HTML. Let me quickly find what we want.",
    "start": "1811000",
    "end": "1816666"
  },
  {
    "text": "I'll get rehype. So rehype is a tool transforms HTML plugin.",
    "start": "1817875",
    "end": "1821916"
  },
  {
    "text": "It's like a bajillion packages. Yeah, it's a great ecosystem, but it is.",
    "start": "1824041",
    "end": "1830291"
  },
  {
    "text": "There's, there is a lot.",
    "start": "1831416",
    "end": "1832458"
  },
  {
    "text": "What I need to add, remark. Rehype document.",
    "start": "1837416",
    "end": "1841541"
  },
  {
    "text": "I think you need. It's the same kind of builder interface, right? But then I think you need rehype parse.",
    "start": "1866208",
    "end": "1872458"
  },
  {
    "text": "I think parse is the HTML. Plugin take HTML as input",
    "start": "1873958",
    "end": "1879333"
  },
  {
    "text": "and turn it into a syntax tree. Yeah. So we need rehype parse. I guess we need.",
    "start": "1879333",
    "end": "1884750"
  },
  {
    "text": "Remark. Rehype.",
    "start": "1886250",
    "end": "1887458"
  },
  {
    "text": "and then we need rehype document. I think we need rehype.",
    "start": "1897416",
    "end": "1903750"
  },
  {
    "text": "Well, I think we need rehype stringify, which is the thing that takes the abstract syntax tree and turns it back into",
    "start": "1903958",
    "end": "1910458"
  },
  {
    "text": "html So it's not very high document. Like a lot of reps that with HTML. Which is not very good.",
    "start": "1910458",
    "end": "1916000"
  },
  {
    "text": "Yeah. What is rehype format?",
    "start": "1918250",
    "end": "1921375"
  },
  {
    "text": "All of these like simple little examples I'm looking at are rehype parse followed by something",
    "start": "1927708",
    "end": "1933250"
  },
  {
    "text": "followed by rehab stringify. So.",
    "start": "1933250",
    "end": "1937291"
  },
  {
    "text": "Rehype format.",
    "start": "1938458",
    "end": "1939833"
  },
  {
    "text": "Yeah. And then rehype",
    "start": "1944958",
    "end": "1950666"
  },
  {
    "text": "stringify.",
    "start": "1951166",
    "end": "1952416"
  },
  {
    "text": "Rehype stringify is the thing that actually serializes to HTML.",
    "start": "1961958",
    "end": "1966875"
  },
  {
    "text": "Yeah.",
    "start": "1968166",
    "end": "1968458"
  },
  {
    "text": "So the current content layer, what does it do? It uses rehype stringify.",
    "start": "1979250",
    "end": "1983833"
  },
  {
    "text": "Remark. Remark rehype. Or something. These might be old packages.",
    "start": "1987541",
    "end": "1992833"
  },
  {
    "text": "I'm just looking at what the. what it does here.",
    "start": "1992833",
    "end": "1997583"
  },
  {
    "text": "It's like we have a buffer. So you already have",
    "start": "1998958",
    "end": "2005541"
  },
  {
    "text": "the thing that parses the front matter. Right. For a remark. Yes.",
    "start": "2005541",
    "end": "2010291"
  },
  {
    "text": "There we go. So now if we just. add rehype on top of this.",
    "start": "2013416",
    "end": "2021625"
  },
  {
    "text": "Oh, they don't even use remark rehype. Remark.",
    "start": "2025500",
    "end": "2030583"
  },
  {
    "text": "Remark. Rehype. So we need to.",
    "start": "2036333",
    "end": "2038375"
  },
  {
    "text": "What is the difference between remark front matter and remark parse front matter.",
    "start": "2043958",
    "end": "2049250"
  },
  {
    "text": "I could have told you two weeks ago. Let me look.",
    "start": "2050958",
    "end": "2056000"
  },
  {
    "text": "Remark. Okay. Remark front matter.",
    "start": "2060083",
    "end": "2062833"
  },
  {
    "text": "Remark front matter. Is the remark plug in the support front matter.",
    "start": "2068250",
    "end": "2073833"
  },
  {
    "text": "Sure.",
    "start": "2075250",
    "end": "2075416"
  },
  {
    "text": "The input. All that there.",
    "start": "2082958",
    "end": "2089000"
  },
  {
    "text": "You know, let's see what that does.",
    "start": "2091958",
    "end": "2094375"
  },
  {
    "text": "ContentLayer config. And then. We're done here.",
    "start": "2132291",
    "end": "2137125"
  },
  {
    "text": "And. Use the remark rehype",
    "start": "2138041",
    "end": "2142291"
  },
  {
    "text": "We're getting top checking.",
    "start": "2148125",
    "end": "2149708"
  },
  {
    "text": "Save.",
    "start": "2158500",
    "end": "2158833"
  },
  {
    "text": "That looks promising.",
    "start": "2175166",
    "end": "2175958"
  },
  {
    "text": "front matter body. That's stripped out the front meta",
    "start": "2187958",
    "end": "2191833"
  },
  {
    "text": "I think that's enough for us to.",
    "start": "2199583",
    "end": "2205958"
  },
  {
    "text": "Start turning it into.",
    "start": "2205958",
    "end": "2209875"
  },
  {
    "text": "The actual content.",
    "start": "2212125",
    "end": "2212833"
  },
  {
    "text": "Okay. Cool stuff.",
    "start": "2219958",
    "end": "2224875"
  },
  {
    "text": "So we have the output now So we go back to our document building services.",
    "start": "2227916",
    "end": "2237291"
  },
  {
    "text": "So just to recap this is. Taking in a stream of config.",
    "start": "2237291",
    "end": "2243333"
  },
  {
    "text": "And then pulling out the documents from the config. And then for every",
    "start": "2245666",
    "end": "2250833"
  },
  {
    "text": "document it's evaluating. The source.",
    "start": "2250833",
    "end": "2254791"
  },
  {
    "text": "And logging errors",
    "start": "2260708",
    "end": "2262750"
  },
  {
    "text": "Why was this any?",
    "start": "2267333",
    "end": "2270000"
  },
  {
    "text": "Yeah, I'm pretty, I think internally we're going to have to work with in a type safe",
    "start": "2293416",
    "end": "2298583"
  },
  {
    "text": "type unsafe manner, probably stream stream.",
    "start": "2298583",
    "end": "2304958"
  },
  {
    "text": "Are we importing source here?",
    "start": "2306250",
    "end": "2308458"
  },
  {
    "text": "So I'll start output.",
    "start": "2315166",
    "end": "2318208"
  },
  {
    "text": "here we have our document and output.",
    "start": "2326708",
    "end": "2334750"
  },
  {
    "text": "So we have our output here and the output has fields in that metadata. So this is where we pass it to,",
    "start": "2342416",
    "end": "2353041"
  },
  {
    "text": "essentially pass it to our schema,",
    "start": "2354083",
    "end": "2356875"
  },
  {
    "text": "document schema.",
    "start": "2359958",
    "end": "2361041"
  },
  {
    "text": "And then evaluate the computed fields, I guess. Well, maybe it's just pass the fields.",
    "start": "2370166",
    "end": "2376916"
  },
  {
    "text": "Yeah. Cause we're going to need the fields to run the computed fields through. Right. And then it actually like there is a lot",
    "start": "2377708",
    "end": "2384125"
  },
  {
    "text": "logic to how we built up the computed fields so that it has to process them in",
    "start": "2384125",
    "end": "2390625"
  },
  {
    "text": "groups sequentially, but every group can be processed concurrently.",
    "start": "2390625",
    "end": "2394083"
  },
  {
    "text": "And I can explain what that means in a second, but yeah, I think the first",
    "start": "2397833",
    "end": "2403291"
  },
  {
    "text": "thing to do for sure is like, grab the fields. Right.",
    "start": "2403375",
    "end": "2408750"
  },
  {
    "text": "So for that, we need schema.",
    "start": "2408750",
    "end": "2410375"
  },
  {
    "text": "So we got schema dot decode",
    "start": "2414041",
    "end": "2417791"
  },
  {
    "text": "unknown.",
    "start": "2419833",
    "end": "2421541"
  },
  {
    "text": "No, that's not really the document. There's a document itself.",
    "start": "2427833",
    "end": "2432333"
  },
  {
    "text": "it was originally, I don't know if I",
    "start": "2433291",
    "end": "2438666"
  },
  {
    "text": "still have it that way. Okay. I don't, I don't think I'd do it anymore.",
    "start": "2438666",
    "end": "2442916"
  },
  {
    "text": "We create implementation. I'm pretty sure that the fields are just",
    "start": "2444041",
    "end": "2449958"
  },
  {
    "text": "a struct of, so I think you have to schema dot struct the fields and then",
    "start": "2449958",
    "end": "2456500"
  },
  {
    "text": "you can pass it to decode time. Yeah. Unless we want to do that internally, but I think the types get all",
    "start": "2456500",
    "end": "2461875"
  },
  {
    "text": "weird if you do that. Right.",
    "start": "2461916",
    "end": "2464500"
  },
  {
    "text": "I guess it would be nice.",
    "start": "2467166",
    "end": "2471541"
  },
  {
    "text": "Let's just make it work for now. so it'll be a schema.",
    "start": "2474583",
    "end": "2477916"
  },
  {
    "text": "It is a little bit annoying that we're creating the schema for every document.",
    "start": "2483666",
    "end": "2491333"
  },
  {
    "text": "So maybe here we'll go let the old schema.",
    "start": "2491708",
    "end": "2499583"
  },
  {
    "text": "So here we will, I guess,",
    "start": "2557875",
    "end": "2565333"
  },
  {
    "text": "just log out the fields now.",
    "start": "2565791",
    "end": "2567083"
  },
  {
    "text": "Nothing. Nothing.",
    "start": "2604875",
    "end": "2607833"
  },
  {
    "text": "schema is doing its job.",
    "start": "2629541",
    "end": "2631833"
  },
  {
    "text": "Okay. So we don't author.",
    "start": "2636625",
    "end": "2639333"
  },
  {
    "text": "I'm just wondering if there's an error on this",
    "start": "2642541",
    "end": "2648125"
  },
  {
    "text": "schema, I guess we just skip that document, then log",
    "start": "2648125",
    "end": "2653625"
  },
  {
    "text": "the error. There's no everything going to a halt.",
    "start": "2653625",
    "end": "2658166"
  },
  {
    "text": "I guess everything should go into a halt. We probably want to accumulate all the",
    "start": "2659458",
    "end": "2665625"
  },
  {
    "text": "errors and then show them to the user somehow. Yeah.",
    "start": "2665625",
    "end": "2669666"
  },
  {
    "text": "In this case, I had we just log the",
    "start": "2676083",
    "end": "2686208"
  },
  {
    "text": "error and then we try.",
    "start": "2686208",
    "end": "2687833"
  },
  {
    "text": "so if you then collect, make a",
    "start": "2696166",
    "end": "2702833"
  },
  {
    "text": "change in the config, it restarts.",
    "start": "2702833",
    "end": "2705833"
  },
  {
    "text": "Nope, it's not a good idea.",
    "start": "2710916",
    "end": "2712333"
  },
  {
    "text": "Well, to do what I'm thinking, we'll need to add it to this flat map in here.",
    "start": "2724541",
    "end": "2733500"
  },
  {
    "text": "what do you think we need to do then?",
    "start": "2740541",
    "end": "2743541"
  },
  {
    "text": "What I might do actually is flat map switch. So the new config change comes in, it",
    "start": "2764333",
    "end": "2771625"
  },
  {
    "text": "interrupts the previous build. It starts again.",
    "start": "2771625",
    "end": "2775916"
  },
  {
    "text": "Okay.",
    "start": "2782041",
    "end": "2782791"
  },
  {
    "text": "So now in theory, like we got this error and if we go try to fix it, so if we go",
    "start": "2790750",
    "end": "2798625"
  },
  {
    "text": "content layer config, let me just see what our",
    "start": "2798833",
    "end": "2807666"
  },
  {
    "text": "content looks like again.",
    "start": "2807666",
    "end": "2809125"
  },
  {
    "text": "So we do schema dot non empty string here.",
    "start": "2816791",
    "end": "2822500"
  },
  {
    "text": "It passes. Great.",
    "start": "2824708",
    "end": "2828458"
  },
  {
    "text": "Yeah. Maybe we need to debounce somewhere",
    "start": "2831291",
    "end": "2836500"
  },
  {
    "text": "because we've got two bounces.",
    "start": "2836500",
    "end": "2838000"
  },
  {
    "text": "where should we do that?",
    "start": "2845666",
    "end": "2850541"
  },
  {
    "text": "config builder. probably like that or the es build.",
    "start": "2851833",
    "end": "2857916"
  },
  {
    "text": "Like we're streaming out the es build results. Maybe. Okay.",
    "start": "2858291",
    "end": "2862833"
  },
  {
    "text": "we're actually doing it like.",
    "start": "2868083",
    "end": "2873166"
  },
  {
    "text": "maybe, I don't know,",
    "start": "2892416",
    "end": "2899125"
  },
  {
    "text": "200 milies",
    "start": "2899125",
    "end": "2901416"
  },
  {
    "text": "Save.",
    "start": "2916125",
    "end": "2919416"
  },
  {
    "text": "Interesting. I guess we must be deleting it and re-creating it.",
    "start": "2925125",
    "end": "2930833"
  },
  {
    "text": "Yeah, that's kind of interesting. Do you have swap enabled in the oven?",
    "start": "2934041",
    "end": "2939333"
  },
  {
    "text": "I think so. I don't know.",
    "start": "2940250",
    "end": "2944416"
  },
  {
    "text": "We're getting fields back, which is great.",
    "start": "2946791",
    "end": "2950166"
  },
  {
    "text": "Let's see if we can, I think it would be",
    "start": "2962291",
    "end": "2968625"
  },
  {
    "text": "even cooler if we could actually get some computed fields building as well. That would be interesting.",
    "start": "2968625",
    "end": "2974208"
  },
  {
    "text": "I think you would just build up and maybe try building up like a YAML object.",
    "start": "2997166",
    "end": "3001541"
  },
  {
    "text": "What do I even have the author object looking like?",
    "start": "3002791",
    "end": "3006583"
  },
  {
    "text": "What was that name and I honestly don't know.",
    "start": "3010208",
    "end": "3018250"
  },
  {
    "text": "So we go back and change it back to author.",
    "start": "3026291",
    "end": "3032750"
  },
  {
    "text": "That's awesome. We're building stuff.",
    "start": "3038208",
    "end": "3042083"
  },
  {
    "text": "Stuff is building. It only took four weeks of streams.",
    "start": "3043666",
    "end": "3049958"
  },
  {
    "text": "We're only working once a week. For like an hour. So yeah.",
    "start": "3051750",
    "end": "3056416"
  },
  {
    "text": "So what's the structure of the computed field? Is it a description schema and a resolve?",
    "start": "3057916",
    "end": "3063416"
  },
  {
    "text": "Yeah. So the idea here is that the resolve function gets some arguments and then uses the resolver",
    "start": "3065583",
    "end": "3072791"
  },
  {
    "text": "the schema to validate the return type. And it's also like type safe.",
    "start": "3072916",
    "end": "3078750"
  },
  {
    "text": "And then the other thing about this is if you notice you can add like multiple groups of computed fields.",
    "start": "3080458",
    "end": "3085708"
  },
  {
    "text": "The way we decided to do it was like you have an array of fields and every group, every",
    "start": "3086416",
    "end": "3093625"
  },
  {
    "text": "group can be run. Every group is run sequentially one after the other because",
    "start": "3093625",
    "end": "3098666"
  },
  {
    "text": "previous groups have access to the next group's computed fields, but every group itself can",
    "start": "3098666",
    "end": "3104583"
  },
  {
    "text": "be run, can be decoded concurrently. So like for the only try to like performance optimize,",
    "start": "3104583",
    "end": "3110083"
  },
  {
    "text": "that's like something to keep. Keep in mind.",
    "start": "3110291",
    "end": "3113041"
  },
  {
    "text": "So we need to code resolve and then with the output, validate it with the schema.",
    "start": "3122416",
    "end": "3128416"
  },
  {
    "text": "And then it even, would it make sense for us to take in a context here or would it would",
    "start": "3130166",
    "end": "3136125"
  },
  {
    "text": "like we literally put that into the context of the effect So this context would be straight from",
    "start": "3136125",
    "end": "3143125"
  },
  {
    "text": "the output from the source.",
    "start": "3143125",
    "end": "3146791"
  },
  {
    "text": "It just seems awkward to work with context as an argument",
    "start": "3150708",
    "end": "3154708"
  },
  {
    "text": "we can try and see how it feels like",
    "start": "3158833",
    "end": "3161833"
  },
  {
    "text": "We probably also want to take in the",
    "start": "3244291",
    "end": "3249875"
  },
  {
    "text": "decoded fields, right? Oh, yes.",
    "start": "3249875",
    "end": "3252458"
  },
  {
    "text": "So, for each, we want to resolve each group concurrently.",
    "start": "3265791",
    "end": "3271833"
  },
  {
    "text": "So, what if... Each group, each individual group will be concurrently, but the groups should be done sequentially.",
    "start": "3274125",
    "end": "3279833"
  },
  {
    "text": "Because previous groups get fed into subsequent groups.",
    "start": "3282208",
    "end": "3286916"
  },
  {
    "text": "So we probably also have to keep track of, like, the groups we've resolved. So, there's a read, only a write...",
    "start": "3287625",
    "end": "3293291"
  },
  {
    "text": "Look, I even gave you a spec...",
    "start": "3298625",
    "end": "3299750"
  },
  {
    "text": "in the jsdoc",
    "start": "3303791",
    "end": "3306791"
  },
  {
    "text": "i think when I construct the computed fields, I made it into, like, an array of arrays.",
    "start": "3316750",
    "end": "3321500"
  },
  {
    "text": "there's a computed fields portion of the document that should be just not really",
    "start": "3340625",
    "end": "3347500"
  },
  {
    "text": "defining the output shape here. Are we?",
    "start": "3347500",
    "end": "3351000"
  },
  {
    "text": "No. what should be the type",
    "start": "3352708",
    "end": "3358791"
  },
  {
    "text": "that went right to this?",
    "start": "3358791",
    "end": "3360125"
  },
  {
    "text": "Well, the type that gets written to this should be the same thing as fields.",
    "start": "3365791",
    "end": "3371625"
  },
  {
    "text": "Yeah. Right. Eventually a record of string unknown, but.",
    "start": "3372375",
    "end": "3379125"
  },
  {
    "text": "Fields would be initial.",
    "start": "3383625",
    "end": "3386250"
  },
  {
    "text": "Yeah.",
    "start": "3390000",
    "end": "3390166"
  },
  {
    "text": "Fields and then come.",
    "start": "3397500",
    "end": "3400416"
  },
  {
    "text": "For each group. Field.",
    "start": "3410666",
    "end": "3415041"
  },
  {
    "text": "This will be a computed field definition.",
    "start": "3418541",
    "end": "3420875"
  },
  {
    "text": "And it has a name added to it. because when you specify the group of",
    "start": "3423791",
    "end": "3431541"
  },
  {
    "text": "computed fields, obviously there's obviously like a name associated with it. So you can use that to like.",
    "start": "3431541",
    "end": "3436875"
  },
  {
    "text": "Give it the K N the computed fields are safe on a type level, for like,",
    "start": "3437125",
    "end": "3443541"
  },
  {
    "text": "preventing key collisions. So you don't have to worry about that when you're actually writing the code. Unless you want to be like",
    "start": "3443708",
    "end": "3449250"
  },
  {
    "text": "super pedantic, but like.",
    "start": "3449250",
    "end": "3452125"
  },
  {
    "text": "So we're reducing this array. And for each group of",
    "start": "3461625",
    "end": "3470500"
  },
  {
    "text": "fields, we resolve them. Concurrently. Yeah. And the group we can do concurrently.",
    "start": "3470500",
    "end": "3476916"
  },
  {
    "text": "Uh, and then we'll get the values back.",
    "start": "3486833",
    "end": "3492916"
  },
  {
    "text": "What should be. And then we need to",
    "start": "3496208",
    "end": "3504166"
  },
  {
    "text": "turn that for each value. We need to add it to the field screw.",
    "start": "3504166",
    "end": "3507958"
  },
  {
    "text": "One thing that you might want to add to the for each is after a resolve has been",
    "start": "3509958",
    "end": "3515166"
  },
  {
    "text": "called, you probably also want to validate the output of resolve against the schema.",
    "start": "3515166",
    "end": "3520250"
  },
  {
    "text": "We do. But that can meet a later step.",
    "start": "3520250",
    "end": "3523833"
  },
  {
    "text": "takes it and ensures it's A.",
    "start": "3574125",
    "end": "3579875"
  },
  {
    "text": "for every group of computed field.",
    "start": "3590458",
    "end": "3596125"
  },
  {
    "text": "All right, here we go.",
    "start": "3596125",
    "end": "3601916"
  },
  {
    "text": "So for every group, we go for each field concurrently.",
    "start": "3602291",
    "end": "3605125"
  },
  {
    "text": "This formatting is confusing me. There we go, that's better. Me too.",
    "start": "3607791",
    "end": "3613000"
  },
  {
    "text": "So it's resolving the field. Yeah, this is good. Schema, and then we get the values and add them to the fields.",
    "start": "3616666",
    "end": "3625708"
  },
  {
    "text": "Where is it getting index from?",
    "start": "3629125",
    "end": "3630458"
  },
  {
    "text": "I would personally use this.",
    "start": "3638333",
    "end": "3641541"
  },
  {
    "text": "Great.",
    "start": "3649750",
    "end": "3650208"
  },
  {
    "text": "It would get back a parse error, which is fine.",
    "start": "3656500",
    "end": "3659583"
  },
  {
    "text": "Okay. So we've got the fields,",
    "start": "3664875",
    "end": "3668583"
  },
  {
    "text": "and now we can bind",
    "start": "3670208",
    "end": "3675250"
  },
  {
    "text": "the computed fields.",
    "start": "3679750",
    "end": "3680791"
  },
  {
    "text": "we would just edit to the end of this, wouldn't we?",
    "start": "3686708",
    "end": "3691833"
  },
  {
    "text": "Yeah. Because it adds the fields to the existing one.",
    "start": "3694875",
    "end": "3698500"
  },
  {
    "text": "Yeah, because eventually you want fields and computed fields to be merged together, so I think this is perfect.",
    "start": "3700000",
    "end": "3705625"
  },
  {
    "text": "Like that.",
    "start": "3707041",
    "end": "3707458"
  },
  {
    "text": "And then we can do this concurrently.",
    "start": "3718625",
    "end": "3721125"
  },
  {
    "text": "Right.",
    "start": "3732083",
    "end": "3732291"
  },
  {
    "text": "So we should get a bunch of errors.",
    "start": "3739125",
    "end": "3742166"
  },
  {
    "text": "Yeah, that worked. Yeah.",
    "start": "3744666",
    "end": "3749208"
  },
  {
    "text": "Wait, wait, did it work? Yeah. Wait, go back to the Alpha, hey?",
    "start": "3749833",
    "end": "3755458"
  },
  {
    "text": "That's in the code. Yeah, go to the... Yeah, we got... Go to the config. Yeah, we'll see. I'll config stuff this.",
    "start": "3755458",
    "end": "3760833"
  },
  {
    "text": "So it's... So it is just a slice of it. It's got a very good slug.",
    "start": "3761291",
    "end": "3766250"
  },
  {
    "text": "Fields.title. That's... Well...",
    "start": "3768125",
    "end": "3771708"
  },
  {
    "text": "It's like in the first five characters. Yeah. So it is working. It is indeed doing what it's supposed to.",
    "start": "3773250",
    "end": "3778833"
  },
  {
    "text": "That's fantastic. Slug 2 is exactly the same.",
    "start": "3778833",
    "end": "3781333"
  },
  {
    "text": "great. There we go. This was basically a test to try to",
    "start": "3784833",
    "end": "3792416"
  },
  {
    "text": "prevent key collisions. So...",
    "start": "3792416",
    "end": "3795583"
  },
  {
    "text": "This... Super cool.",
    "start": "3800333",
    "end": "3803916"
  },
  {
    "text": "Now... Yeah, this is very cool.",
    "start": "3805750",
    "end": "3809750"
  },
  {
    "text": "Great. Um...",
    "start": "3811041",
    "end": "3813041"
  },
  {
    "text": "How do we do it over time?",
    "start": "3819416",
    "end": "3820333"
  },
  {
    "text": "that's a good point. I probably need to go. Yeah, I think that's a natural start point.",
    "start": "3825250",
    "end": "3831041"
  },
  {
    "text": "This is great though. This is very, very good progress. Yeah, I think next time we need to look",
    "start": "3833708",
    "end": "3839583"
  },
  {
    "text": "at what the structure will look like.",
    "start": "3839583",
    "end": "3843916"
  },
  {
    "text": "Because we need to add the metadata to this.",
    "start": "3844916",
    "end": "3849708"
  },
  {
    "text": "Yeah. And we need to like play around with actually using the metadata.",
    "start": "3853500",
    "end": "3858750"
  },
  {
    "text": "Yeah. To basically see if... Like how it feels and whatnot.",
    "start": "3859375",
    "end": "3862875"
  },
  {
    "text": "And then we need to start saving it to disc somewhere.",
    "start": "3866875",
    "end": "3870458"
  },
  {
    "text": "Yeah, I feel like the key value store is going to be really nice here. Because you could basically have like",
    "start": "3872958",
    "end": "3878291"
  },
  {
    "text": "underneath the hashed content layer config, wherever we're going to save it.",
    "start": "3878291",
    "end": "3883791"
  },
  {
    "text": "You could basically have like a file per",
    "start": "3885041",
    "end": "3890083"
  },
  {
    "text": "document that's associated with the esbuild hash. And then that's an easy",
    "start": "3890083",
    "end": "3897791"
  },
  {
    "text": "way to cache things as well. Is kind of like doing it that way.",
    "start": "3897791",
    "end": "3904500"
  },
  {
    "text": "Right.",
    "start": "3905000",
    "end": "3905208"
  },
  {
    "text": "Let's commit this.",
    "start": "3912458",
    "end": "3913500"
  },
  {
    "text": "No, it's condition. So many whips. Yeah.",
    "start": "3921666",
    "end": "3926041"
  },
  {
    "text": "Cool. Yeah. Thank you, Tim. Thank you, Max. Hope you have a good rest of your day.",
    "start": "3929041",
    "end": "3934250"
  },
  {
    "text": "You too. Cheers, folks. Yeah.",
    "start": "3934250",
    "end": "3937000"
  }
]