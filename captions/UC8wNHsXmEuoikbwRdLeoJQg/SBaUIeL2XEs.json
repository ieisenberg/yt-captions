[
  {
    "text": "(audience applauds)",
    "start": "0",
    "end": "3833"
  },
  {
    "text": "Yeah, thank you so much for having me.",
    "start": "5833",
    "end": "7291"
  },
  {
    "text": "I'm happy that I'm no longer the last thing standing",
    "start": "8375",
    "end": "10500"
  },
  {
    "text": "between you and lunch.",
    "start": "10625",
    "end": "11583"
  },
  {
    "text": "But I'll be quick.",
    "start": "12333",
    "end": "14250"
  },
  {
    "text": "So yes, my name is Elliot.",
    "start": "14583",
    "end": "16541"
  },
  {
    "text": "I am a founding engineer at Markprompt.",
    "start": "17500",
    "end": "19625"
  },
  {
    "text": "We're based in San Francisco.",
    "start": "20166",
    "end": "21208"
  },
  {
    "text": "And I'll talk a little bit more about what we're building.",
    "start": "22333",
    "end": "25416"
  },
  {
    "text": "Yes, I did speak in the San Francisco Meetup as well.",
    "start": "26083",
    "end": "29875"
  },
  {
    "text": "And this will be somewhat of a continuation of the things",
    "start": "30416",
    "end": "32916"
  },
  {
    "text": "I was discussing there.",
    "start": "32916",
    "end": "33708"
  },
  {
    "text": "So first, I'll talk about what",
    "start": "34250",
    "end": "35083"
  },
  {
    "text": "we're building at Markprompt.",
    "start": "35083",
    "end": "35958"
  },
  {
    "text": "And then mostly, I'm going to",
    "start": "36791",
    "end": "37500"
  },
  {
    "text": "be talking about our type safe,",
    "start": "37500",
    "end": "39041"
  },
  {
    "text": "composable agent framework, obviously built with Effect.",
    "start": "39083",
    "end": "41500"
  },
  {
    "text": "So this includes things like agents, actions,",
    "start": "41500",
    "end": "43541"
  },
  {
    "text": "and then workflows.",
    "start": "43541",
    "end": "44250"
  },
  {
    "text": "So how can we build in things that are deterministic",
    "start": "44250",
    "end": "47125"
  },
  {
    "text": "and not just leave everything up to the LLM",
    "start": "47125",
    "end": "49166"
  },
  {
    "text": "and do that in a very effectful way that is easy for us",
    "start": "49166",
    "end": "52500"
  },
  {
    "text": "to move fast.",
    "start": "52500",
    "end": "53166"
  },
  {
    "text": "So we're building two main things.",
    "start": "53958",
    "end": "55708"
  },
  {
    "text": "So we're largely in customer support, customer experience,",
    "start": "55916",
    "end": "59750"
  },
  {
    "text": "largely catering towards developer platforms",
    "start": "60583",
    "end": "62750"
  },
  {
    "text": "with high complexity support cases.",
    "start": "62916",
    "end": "66833"
  },
  {
    "text": "So working with large scale LLM",
    "start": "67166",
    "end": "69791"
  },
  {
    "text": "processing and analysis systems",
    "start": "69791",
    "end": "71375"
  },
  {
    "text": "to provide insights, and then also building",
    "start": "71375",
    "end": "73583"
  },
  {
    "text": "highly customizable user facing LLMs.",
    "start": "73583",
    "end": "75875"
  },
  {
    "text": "So these are language models that",
    "start": "75875",
    "end": "77625"
  },
  {
    "text": "communicate directly with",
    "start": "77625",
    "end": "78750"
  },
  {
    "text": "users that our customers can really",
    "start": "78750",
    "end": "81125"
  },
  {
    "text": "customize.",
    "start": "81250",
    "end": "81750"
  },
  {
    "text": "So our focuses are on user experience,",
    "start": "82500",
    "end": "84458"
  },
  {
    "text": "so things like reliability and latency,",
    "start": "84666",
    "end": "86500"
  },
  {
    "text": "and then also developer speed.",
    "start": "86500",
    "end": "88000"
  },
  {
    "text": "We're a lean team, and we need tools",
    "start": "88000",
    "end": "89625"
  },
  {
    "text": "that are going to allow us to move fast.",
    "start": "89625",
    "end": "91416"
  },
  {
    "text": "Our codebase is written almost entirely in Effect.",
    "start": "92000",
    "end": "93833"
  },
  {
    "text": "And a bit about me, I graduated from school in June.",
    "start": "95333",
    "end": "99500"
  },
  {
    "text": "And this is really my first big step in my career.",
    "start": "100583",
    "end": "104375"
  },
  {
    "text": "I did not have much TypeScript or Effect experience",
    "start": "104875",
    "end": "107083"
  },
  {
    "text": "before this, but it's been really fun to jump in,",
    "start": "107208",
    "end": "109625"
  },
  {
    "text": "and I'm really glad that I'm using the tooling.",
    "start": "109625",
    "end": "111500"
  },
  {
    "text": "So I think a lot of you have probably",
    "start": "112208",
    "end": "114250"
  },
  {
    "text": "seen generally agents.",
    "start": "114375",
    "end": "116083"
  },
  {
    "text": "This is kind of the simplest version",
    "start": "116083",
    "end": "117583"
  },
  {
    "text": "of what an agent might be.",
    "start": "117583",
    "end": "118666"
  },
  {
    "text": "So something that is able to plan and reason on a task,",
    "start": "118666",
    "end": "121916"
  },
  {
    "text": "choose an action, and do that, and then feed that back",
    "start": "121916",
    "end": "124791"
  },
  {
    "text": "into the system to take another action.",
    "start": "124791",
    "end": "126916"
  },
  {
    "text": "So this is kind of a loop.",
    "start": "127625",
    "end": "128625"
  },
  {
    "text": "It starts with a user input, and it ends with an output",
    "start": "128625",
    "end": "131375"
  },
  {
    "text": "to the user.",
    "start": "131375",
    "end": "131916"
  },
  {
    "text": "So actions might be something like searching and analyzing",
    "start": "132583",
    "end": "134833"
  },
  {
    "text": "logs, getting payment information like invoices.",
    "start": "135000",
    "end": "139875"
  },
  {
    "text": "It also might be traditional, like RAG, so querying,",
    "start": "141250",
    "end": "145375"
  },
  {
    "text": "V-embeddings, or using metadata filters, things like that.",
    "start": "145791",
    "end": "148458"
  },
  {
    "text": "And then also, this typically ends",
    "start": "149666",
    "end": "151375"
  },
  {
    "text": "with a response to the user, whether that's",
    "start": "151375",
    "end": "153208"
  },
  {
    "text": "some information or asking for clarification questions.",
    "start": "153208",
    "end": "155415"
  },
  {
    "text": "So an action in our system looks like this.",
    "start": "156666",
    "end": "159750"
  },
  {
    "text": "You'll notice, basically, everything I'm showing today",
    "start": "160333",
    "end": "162125"
  },
  {
    "text": "has a name and description.",
    "start": "162125",
    "end": "163000"
  },
  {
    "text": "This is kind of how the LLM is able to choose what to do.",
    "start": "163250",
    "end": "166500"
  },
  {
    "text": "It has some parameters.",
    "start": "167000",
    "end": "167958"
  },
  {
    "text": "We use schema to encode these.",
    "start": "167958",
    "end": "169208"
  },
  {
    "text": "And then some handler that takes those parameters,",
    "start": "170833",
    "end": "173790"
  },
  {
    "text": "parses them, and then returns something.",
    "start": "173875",
    "end": "176416"
  },
  {
    "text": "So like I said, it might be something like searching logs.",
    "start": "178041",
    "end": "180666"
  },
  {
    "text": "Takes a query.",
    "start": "182166",
    "end": "182833"
  },
  {
    "text": "You can see the types get propagated here,",
    "start": "184541",
    "end": "186666"
  },
  {
    "text": "just like we're used to in effect.",
    "start": "186666",
    "end": "187791"
  },
  {
    "text": "So we get the error, and then the log service.",
    "start": "187791",
    "end": "189208"
  },
  {
    "text": "There's no success channel",
    "start": "189625",
    "end": "192083"
  },
  {
    "text": "here, because the successes are kind",
    "start": "192083",
    "end": "194625"
  },
  {
    "text": "of like...",
    "start": "194625",
    "end": "195166"
  },
  {
    "text": "they're just strings, at least for now.",
    "start": "195166",
    "end": "196708"
  },
  {
    "text": "Another one might be responding.",
    "start": "197958",
    "end": "200665"
  },
  {
    "text": "And so how we signal that this",
    "start": "200958",
    "end": "202000"
  },
  {
    "text": "should actually go to the user",
    "start": "202000",
    "end": "203208"
  },
  {
    "text": "is we set this done flag on the action response to true.",
    "start": "203208",
    "end": "206500"
  },
  {
    "text": "This has no requirements, takes no dependencies--",
    "start": "208666",
    "end": "211125"
  },
  {
    "text": "or sorry, no errors.",
    "start": "212000",
    "end": "212750"
  },
  {
    "text": "Some of these actions can get quite complicated,",
    "start": "214291",
    "end": "216666"
  },
  {
    "text": "and there also might be a lot of action.",
    "start": "216666",
    "end": "218333"
  },
  {
    "text": "So we don't necessarily have control",
    "start": "218333",
    "end": "219875"
  },
  {
    "text": "over the number of things that our customers want",
    "start": "219875",
    "end": "221625"
  },
  {
    "text": "to be able to give their agents the capabilities to do.",
    "start": "221625",
    "end": "224291"
  },
  {
    "text": "So our solution here is subagents.",
    "start": "224916",
    "end": "227208"
  },
  {
    "text": "So these are... you can think of as a team of people",
    "start": "227916",
    "end": "230583"
  },
  {
    "text": "that might have different specialties.",
    "start": "230583",
    "end": "233000"
  },
  {
    "text": "They each have their own actions,",
    "start": "233000",
    "end": "234416"
  },
  {
    "text": "and then one agent will just",
    "start": "234416",
    "end": "235833"
  },
  {
    "text": "be able to delegate to another.",
    "start": "235833",
    "end": "237208"
  },
  {
    "text": "So instead of just choosing an action and doing it,",
    "start": "238125",
    "end": "241458"
  },
  {
    "text": "you actually may invoke a subagent.",
    "start": "242333",
    "end": "244040"
  },
  {
    "text": "And so a typical flow might look something",
    "start": "244583",
    "end": "247250"
  },
  {
    "text": "like our main agent planning, choosing, doing an action,",
    "start": "247333",
    "end": "250500"
  },
  {
    "text": "going back into its loop, and then choosing",
    "start": "251166",
    "end": "253375"
  },
  {
    "text": "to invoke a subagent that maybe has a more special purpose,",
    "start": "253583",
    "end": "256540"
  },
  {
    "text": "like logging, searching logs, or handling payments.",
    "start": "256541",
    "end": "259540"
  },
  {
    "text": "So this one, again, kind of has the same steps.",
    "start": "261583",
    "end": "264541"
  },
  {
    "text": "These are all the same, and this is an inherently recursive",
    "start": "264541",
    "end": "266791"
  },
  {
    "text": "system.",
    "start": "266958",
    "end": "267458"
  },
  {
    "text": "Oops, sorry.",
    "start": "267708",
    "end": "268208"
  },
  {
    "text": "And then it may go back to the main agent",
    "start": "270166",
    "end": "271875"
  },
  {
    "text": "and then choose to respond to the user.",
    "start": "271875",
    "end": "273791"
  },
  {
    "text": "So this is great, but the question is,",
    "start": "273791",
    "end": "276750"
  },
  {
    "text": "should we really leave all this up to chance?",
    "start": "276750",
    "end": "278333"
  },
  {
    "text": "You can imagine there are some more deterministic workflows",
    "start": "278750",
    "end": "281458"
  },
  {
    "text": "that we want to encode, and we don't want to just",
    "start": "281458",
    "end": "283083"
  },
  {
    "text": "full autonomy to choose what it's going to do,",
    "start": "284500",
    "end": "286708"
  },
  {
    "text": "because most likely, these systems aren't perfect.",
    "start": "286708",
    "end": "289250"
  },
  {
    "text": "It's going to choose things wrong some of the time,",
    "start": "289250",
    "end": "293166"
  },
  {
    "text": "and we want our customers to be able to control that.",
    "start": "293166",
    "end": "295332"
  },
  {
    "text": "So an example, a user wants to cancel their subscription.",
    "start": "296166",
    "end": "299250"
  },
  {
    "text": "A workflow is triggered, and maybe our LLM",
    "start": "300166",
    "end": "303832"
  },
  {
    "text": "will ask them why they want to cancel their subscription,",
    "start": "303833",
    "end": "305708"
  },
  {
    "text": "and then we'll go fetch some information from an API",
    "start": "306458",
    "end": "309291"
  },
  {
    "text": "about it.",
    "start": "309500",
    "end": "310000"
  },
  {
    "text": "If it's relevant, we'll try to convince them not to cancel.",
    "start": "310416",
    "end": "312832"
  },
  {
    "text": "If it's successful, great, we're done.",
    "start": "314958",
    "end": "316458"
  },
  {
    "text": "Otherwise, we do have to cancel the subscription",
    "start": "316833",
    "end": "318541"
  },
  {
    "text": "and let them know it's canceled.",
    "start": "319166",
    "end": "320082"
  },
  {
    "text": "So this is just one example.",
    "start": "320416",
    "end": "321416"
  },
  {
    "text": "This sounds a lot like code execution,",
    "start": "321875",
    "end": "323500"
  },
  {
    "text": "so if this was not a conversation with a user",
    "start": "323500",
    "end": "328000"
  },
  {
    "text": "where the user's input is non-deterministic,",
    "start": "328000",
    "end": "330750"
  },
  {
    "text": "it would basically just be code execution, right?",
    "start": "331166",
    "end": "333375"
  },
  {
    "text": "But in this scenario that I've modelled,",
    "start": "334500",
    "end": "337208"
  },
  {
    "text": "we're leaving this up to an LLM.",
    "start": "337208",
    "end": "338625"
  },
  {
    "text": "So the solution here is workflows.",
    "start": "339000",
    "end": "340625"
  },
  {
    "text": "This is also something that Maxwell",
    "start": "340625",
    "end": "341750"
  },
  {
    "text": "talked about in the beginning.",
    "start": "342083",
    "end": "342916"
  },
  {
    "text": "Again, workflows have a name and description.",
    "start": "344416",
    "end": "345832"
  },
  {
    "text": "This is how a LLM can choose whether or not",
    "start": "346083",
    "end": "348166"
  },
  {
    "text": "it wants to trigger it.",
    "start": "348166",
    "end": "349250"
  },
  {
    "text": "And then just like the other things,",
    "start": "350416",
    "end": "351791"
  },
  {
    "text": "it has the action return, so it returns the same thing",
    "start": "351791",
    "end": "354125"
  },
  {
    "text": "that an action does, unifying the interface,",
    "start": "354125",
    "end": "355958"
  },
  {
    "text": "and then it has a bunch of",
    "start": "356583",
    "end": "357500"
  },
  {
    "text": "errors and a bunch of requirements.",
    "start": "357500",
    "end": "359333"
  },
  {
    "text": "So we would model this as a cancel subscription workflow,",
    "start": "361708",
    "end": "365625"
  },
  {
    "text": "and it takes a name and description,",
    "start": "366333",
    "end": "367750"
  },
  {
    "text": "and also a flow.",
    "start": "368333",
    "end": "369333"
  },
  {
    "text": "So this is what a flow looks like.",
    "start": "370250",
    "end": "372416"
  },
  {
    "text": "This is something that I've built internally.",
    "start": "373416",
    "end": "374916"
  },
  {
    "text": "It's kind of a DSL for",
    "start": "375333",
    "end": "376791"
  },
  {
    "text": "building these deterministic workflows",
    "start": "376791",
    "end": "379500"
  },
  {
    "text": "with being able to handle non-deterministic input",
    "start": "379583",
    "end": "383000"
  },
  {
    "text": "from users.",
    "start": "383000",
    "end": "383541"
  },
  {
    "text": "So as you can see, this kind of",
    "start": "384583",
    "end": "385625"
  },
  {
    "text": "looks a lot like an effect pipe.",
    "start": "385625",
    "end": "387208"
  },
  {
    "text": "We are using the Effect piping mechanism,",
    "start": "387958",
    "end": "390333"
  },
  {
    "text": "and I'll kind of show a little bit of what this",
    "start": "390875",
    "end": "392666"
  },
  {
    "text": "looks like behind the scenes.",
    "start": "392666",
    "end": "393666"
  },
  {
    "text": "And then I'll go more into what this flow does.",
    "start": "394208",
    "end": "395875"
  },
  {
    "text": "What is a flow?",
    "start": "396916",
    "end": "397500"
  },
  {
    "text": "The interface here is just something",
    "start": "398208",
    "end": "399708"
  },
  {
    "text": "that basically can be executed, and it returns an Effect.",
    "start": "399708",
    "end": "402333"
  },
  {
    "text": "Very simple.",
    "start": "402791",
    "end": "403375"
  },
  {
    "text": "Returns this flow intermediate result.",
    "start": "403791",
    "end": "405750"
  },
  {
    "text": "It's not very important.",
    "start": "405750",
    "end": "406541"
  },
  {
    "text": "It has some errors and requirements.",
    "start": "406833",
    "end": "408166"
  },
  {
    "text": "And it also depends on the state of the agent.",
    "start": "408916",
    "end": "412041"
  },
  {
    "text": "And then I just have kind of aliases to flow wrap",
    "start": "414041",
    "end": "416875"
  },
  {
    "text": "to make it a little bit easier to read in the presentation.",
    "start": "417791",
    "end": "419666"
  },
  {
    "text": "So it's just an Effect that returns a flow.",
    "start": "421000",
    "end": "423083"
  },
  {
    "text": "So there's a few things.",
    "start": "424583",
    "end": "425916"
  },
  {
    "text": "This is how we compose flows.",
    "start": "426208",
    "end": "427291"
  },
  {
    "text": "So the first thing we do is we kind of lift an action",
    "start": "427583",
    "end": "430041"
  },
  {
    "text": "into the flow ecosystem.",
    "start": "430208",
    "end": "431333"
  },
  {
    "text": "Very simple.",
    "start": "432000",
    "end": "432583"
  },
  {
    "text": "Just takes an action, returns a flow.",
    "start": "432916",
    "end": "434500"
  },
  {
    "text": "Then we have and then, which takes a previous flow...",
    "start": "435250",
    "end": "437708"
  },
  {
    "text": "or sorry, and then takes an action,",
    "start": "438583",
    "end": "440333"
  },
  {
    "text": "which returns a function that takes a previous flow",
    "start": "440333",
    "end": "442625"
  },
  {
    "text": "and returns a new one.",
    "start": "442625",
    "end": "443666"
  },
  {
    "text": "So this is how we can start to actually pipe these things",
    "start": "443958",
    "end": "446083"
  },
  {
    "text": "together and how this actually becomes a DSL.",
    "start": "446416",
    "end": "448207"
  },
  {
    "text": "And then we have things like...",
    "start": "451000",
    "end": "452666"
  },
  {
    "text": "you can kind of think of this",
    "start": "452666",
    "end": "453625"
  },
  {
    "text": "very similar to Effect.if",
    "start": "453750",
    "end": "455041"
  },
  {
    "text": "It's Flow.doif",
    "start": "455583",
    "end": "456583"
  },
  {
    "text": "So it takes a condition and then takes a true and false",
    "start": "456583",
    "end": "459083"
  },
  {
    "text": "based on that condition.",
    "start": "459291",
    "end": "460332"
  },
  {
    "text": "Right now, conditions are just going to be strings.",
    "start": "460333",
    "end": "462208"
  },
  {
    "text": "And it is able to actually propagate all the types.",
    "start": "464208",
    "end": "466833"
  },
  {
    "text": "So there's kind of a lot of type stuff going on here.",
    "start": "466833",
    "end": "468500"
  },
  {
    "text": "But it's basically just propagating all of the true",
    "start": "468500",
    "end": "470833"
  },
  {
    "text": "and false types through to the final flow that's returned.",
    "start": "470833",
    "end": "474458"
  },
  {
    "text": "And then there's a no op flow, which is just a utility",
    "start": "475500",
    "end": "477625"
  },
  {
    "text": "that I'll show in a moment.",
    "start": "477625",
    "end": "478500"
  },
  {
    "text": "It literally just returns the previous flow.",
    "start": "479208",
    "end": "480958"
  },
  {
    "text": "So to go through this cancel subscription flow,",
    "start": "482375",
    "end": "484458"
  },
  {
    "text": "we first ask the user for the cancellation reason.",
    "start": "485416",
    "end": "487666"
  },
  {
    "text": "And then we get the subscription details.",
    "start": "488375",
    "end": "490500"
  },
  {
    "text": "If the user has only been subscribed for one month,",
    "start": "491583",
    "end": "493791"
  },
  {
    "text": "we do something.",
    "start": "493791",
    "end": "494625"
  },
  {
    "text": "Otherwise, we do something else.",
    "start": "494625",
    "end": "496000"
  },
  {
    "text": "And so this is where we use an LLM to actually work",
    "start": "496250",
    "end": "499250"
  },
  {
    "text": "in the non-deterministic input from the user.",
    "start": "499458",
    "end": "502250"
  },
  {
    "text": "And there's a lot of kind of",
    "start": "502250",
    "end": "503291"
  },
  {
    "text": "stuff happening behind the scenes",
    "start": "503291",
    "end": "504625"
  },
  {
    "text": "in this flow module that",
    "start": "504625",
    "end": "506333"
  },
  {
    "text": "allows it to eject and retry steps.",
    "start": "506333",
    "end": "508791"
  },
  {
    "text": "But this allows us to",
    "start": "509375",
    "end": "510208"
  },
  {
    "text": "basically just create these things very",
    "start": "510208",
    "end": "512958"
  },
  {
    "text": "easily as developers and allow our users to create them",
    "start": "513041",
    "end": "515916"
  },
  {
    "text": "in a way that allows us to combine",
    "start": "517416",
    "end": "519000"
  },
  {
    "text": "the non-determinism of agents with the determinism",
    "start": "519000",
    "end": "521333"
  },
  {
    "text": "of workflows.",
    "start": "521333",
    "end": "521958"
  },
  {
    "text": "So the cancel subscription flow, again,",
    "start": "524166",
    "end": "525833"
  },
  {
    "text": "gets all those error states piped through.",
    "start": "525833",
    "end": "527416"
  },
  {
    "text": "So why is this a good solution?",
    "start": "528041",
    "end": "529291"
  },
  {
    "text": "First, it's modular.",
    "start": "529583",
    "end": "530500"
  },
  {
    "text": "We can create new flow utilities.",
    "start": "530916",
    "end": "533250"
  },
  {
    "text": "You can imagine Flow.all or something, very similar Effect,",
    "start": "534000",
    "end": "536791"
  },
  {
    "text": "where we're able to just",
    "start": "537333",
    "end": "538208"
  },
  {
    "text": "execute a bunch of steps in parallel.",
    "start": "538208",
    "end": "540041"
  },
  {
    "text": "And all of this stuff is contained within those functions.",
    "start": "540041",
    "end": "542041"
  },
  {
    "text": "It's not contained in some executor that",
    "start": "542041",
    "end": "545083"
  },
  {
    "text": "has to manage every single type of these things.",
    "start": "545083",
    "end": "548041"
  },
  {
    "text": "We're not managing a graph.",
    "start": "548666",
    "end": "549916"
  },
  {
    "text": "Everything is self-managed.",
    "start": "549916",
    "end": "550875"
  },
  {
    "text": "It's also type safe, just like the rest of Effect.",
    "start": "551083",
    "end": "553000"
  },
  {
    "text": "So putting it all together, we have an agent.",
    "start": "553791",
    "end": "555458"
  },
  {
    "text": "It may have sub-agents.",
    "start": "555708",
    "end": "556416"
  },
  {
    "text": "And it may also have workflows.",
    "start": "556666",
    "end": "557958"
  },
  {
    "text": "All of these things are",
    "start": "558291",
    "end": "558958"
  },
  {
    "text": "unified into a single decision-making",
    "start": "558958",
    "end": "560750"
  },
  {
    "text": "interface.",
    "start": "560958",
    "end": "561458"
  },
  {
    "text": "And then the state is handled internally.",
    "start": "561875",
    "end": "563875"
  },
  {
    "text": "So this is what an agent looks like.",
    "start": "564583",
    "end": "565666"
  },
  {
    "text": "Again, name description has the",
    "start": "566125",
    "end": "569125"
  },
  {
    "text": "errors and the requirements propagated.",
    "start": "569125",
    "end": "570708"
  },
  {
    "text": "So we can create a logging agent.",
    "start": "571458",
    "end": "573041"
  },
  {
    "text": "And those slides are backwards.",
    "start": "575208",
    "end": "576708"
  },
  {
    "text": "We can create a logging agent.",
    "start": "577000",
    "end": "578000"
  },
  {
    "text": "And then we can create our main",
    "start": "578333",
    "end": "579875"
  },
  {
    "text": "agent that has the logging agent,",
    "start": "579875",
    "end": "581875"
  },
  {
    "text": "has a workflow.",
    "start": "581875",
    "end": "582625"
  },
  {
    "text": "And all of these types get propagated through.",
    "start": "582958",
    "end": "585041"
  },
  {
    "text": "And so in this naturally recursive ecosystem,",
    "start": "585500",
    "end": "587791"
  },
  {
    "text": "we can actually get all of these types propagated.",
    "start": "587791",
    "end": "589875"
  },
  {
    "text": "And this is the really, really nice thing here about effect",
    "start": "589875",
    "end": "591833"
  },
  {
    "text": "is that all of this, you're not just dealing",
    "start": "592333",
    "end": "595083"
  },
  {
    "text": "with this jumbled mess of things that can happen.",
    "start": "595208",
    "end": "597375"
  },
  {
    "text": "You know exactly on the output of this what can happen.",
    "start": "597375",
    "end": "599833"
  },
  {
    "text": "So just very quickly to recap, these LLM systems",
    "start": "600583",
    "end": "603708"
  },
  {
    "text": "are very inherently complex and non-deterministic.",
    "start": "603916",
    "end": "607041"
  },
  {
    "text": "And it can be easy to build these simple cases.",
    "start": "607958",
    "end": "610291"
  },
  {
    "text": "It's pretty fast to get a",
    "start": "611458",
    "end": "612708"
  },
  {
    "text": "prototype of these agents up and running.",
    "start": "612708",
    "end": "614375"
  },
  {
    "text": "But it can get really messy when your customers",
    "start": "614625",
    "end": "616875"
  },
  {
    "text": "start to have 10, 20 things that",
    "start": "616875",
    "end": "618500"
  },
  {
    "text": "they want them to be able to do.",
    "start": "618500",
    "end": "619625"
  },
  {
    "text": "And it's really nice with Effect to",
    "start": "619833",
    "end": "621125"
  },
  {
    "text": "be able to break these things down",
    "start": "621125",
    "end": "622333"
  },
  {
    "text": "and provide ways for your customers",
    "start": "622750",
    "end": "624416"
  },
  {
    "text": "to be sure that what they want is going to happen,",
    "start": "624416",
    "end": "627000"
  },
  {
    "text": "is actually going to happen.",
    "start": "627000",
    "end": "627875"
  },
  {
    "text": "This is this point here.",
    "start": "629250",
    "end": "630083"
  },
  {
    "text": "So we still have a lot to do.",
    "start": "631541",
    "end": "632625"
  },
  {
    "text": "But I think that the moral of",
    "start": "632625",
    "end": "634541"
  },
  {
    "text": "the story is we're very confident",
    "start": "634541",
    "end": "635666"
  },
  {
    "text": "that we're building the right tools.",
    "start": "635666",
    "end": "637000"
  },
  {
    "text": "It's very nice to be able to create these DSLs,",
    "start": "637000",
    "end": "639291"
  },
  {
    "text": "use the primitives that Effect has already created,",
    "start": "639291",
    "end": "642750"
  },
  {
    "text": "to write code that really just fits very well",
    "start": "643208",
    "end": "645750"
  },
  {
    "text": "within the rest of our system.",
    "start": "646208",
    "end": "647416"
  },
  {
    "text": "Yeah, so thank you.",
    "start": "648916",
    "end": "649791"
  },
  {
    "text": "And this is my contact info.",
    "start": "650583",
    "end": "651916"
  },
  {
    "text": "I'd love to talk if you're",
    "start": "651916",
    "end": "652708"
  },
  {
    "text": "interested in this kind of stuff.",
    "start": "652708",
    "end": "653708"
  },
  {
    "text": "And yeah, I really appreciate",
    "start": "654000",
    "end": "654875"
  },
  {
    "text": "everybody watching and being here",
    "start": "654875",
    "end": "657208"
  },
  {
    "text": "and the Effect team for having me.",
    "start": "657208",
    "end": "658625"
  },
  {
    "text": "Thank you.",
    "start": "658625",
    "end": "659125"
  },
  {
    "text": "(audience applauds)",
    "start": "659666",
    "end": "662291"
  }
]