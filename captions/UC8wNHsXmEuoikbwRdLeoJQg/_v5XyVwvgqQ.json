[
  {
    "text": "Welcome back everybody. Sorry that we skipped last week. We had a scheduling conflict, but we're",
    "start": "5250",
    "end": "10875"
  },
  {
    "text": "back with our content layer series. I think this week we're going to be working on fixing up watch mode from the last time",
    "start": "10875",
    "end": "17166"
  },
  {
    "text": "that we met. Because I think when we ran, I think when",
    "start": "17166",
    "end": "22375"
  },
  {
    "text": "we tried to run watch mode last week, we got some unexpected results.",
    "start": "22375",
    "end": "26500"
  },
  {
    "text": "So yeah. Why don't we like start maybe Tim by like",
    "start": "27958",
    "end": "34000"
  },
  {
    "text": "taking a look at our to do list. Yeah. So it's option mode.",
    "start": "34000",
    "end": "39833"
  },
  {
    "text": "And then get it working.",
    "start": "41000",
    "end": "43541"
  },
  {
    "text": "And then improve the plugin API. We have time. Alright so it sounds like watch mode is",
    "start": "47041",
    "end": "53250"
  },
  {
    "text": "our priority right now. We just get it going.",
    "start": "53250",
    "end": "66125"
  },
  {
    "text": "Yeah I don't remember what the issue was. I don't remember what the exact issue was so it'd be good to.",
    "start": "69333",
    "end": "74666"
  },
  {
    "text": "We get some configs. First one.",
    "start": "96083",
    "end": "100750"
  },
  {
    "text": "We did some posts in some content.",
    "start": "101375",
    "end": "103500"
  },
  {
    "text": "We get a watch events. But they're not.",
    "start": "107333",
    "end": "113291"
  },
  {
    "text": "Changing. Well it's four. I think that I was having this issue with",
    "start": "118458",
    "end": "124375"
  },
  {
    "text": "a different project. And I'm pretty sure these are all the new swap files and buffers.",
    "start": "124375",
    "end": "130041"
  },
  {
    "text": "Okay. So if we go to.",
    "start": "131375",
    "end": "136540"
  },
  {
    "text": "so we're gonna watch events here. We've seen check if",
    "start": "142416",
    "end": "148083"
  },
  {
    "text": "we're getting a path which.",
    "start": "148083",
    "end": "149458"
  },
  {
    "text": "Could have a chilling that's just for turning calls. I'm feeling you're right.",
    "start": "155416",
    "end": "160958"
  },
  {
    "text": "We're probably just the API of the package we downloaded correctly.",
    "start": "164500",
    "end": "171250"
  },
  {
    "text": "What is path match. Mini match. Oh yeah okay. So let's pull up the docs",
    "start": "189000",
    "end": "195375"
  },
  {
    "text": "for mini match mini match.",
    "start": "195375",
    "end": "197750"
  },
  {
    "text": "So what are we trying to do here.",
    "start": "202000",
    "end": "203500"
  },
  {
    "text": "So we've got a list and array of patterns here.",
    "start": "207500",
    "end": "211708"
  },
  {
    "text": "And the worst one to make sure that matches the part of it.",
    "start": "218333",
    "end": "222083"
  },
  {
    "text": "Let me see what mini match has to offer.",
    "start": "224500",
    "end": "228500"
  },
  {
    "text": "The path is absolute but the pattern is not.",
    "start": "249791",
    "end": "253291"
  },
  {
    "text": "That matter though. Because we're not we don't",
    "start": "255333",
    "end": "261375"
  },
  {
    "text": "have a path in front of it right. That shouldn't really matter.",
    "start": "261375",
    "end": "266458"
  },
  {
    "text": "It should still match the globe. I think.",
    "start": "268375",
    "end": "272125"
  },
  {
    "text": "The globe and the front. And.",
    "start": "273875",
    "end": "277541"
  },
  {
    "text": "Who-ho",
    "start": "281666",
    "end": "281916"
  },
  {
    "text": "So maybe we make just path.resolve the P. Maybe a bit.",
    "start": "287500",
    "end": "293041"
  },
  {
    "text": "By the way I think with options I think that there's a debug mode you can pass.",
    "start": "295083",
    "end": "299916"
  },
  {
    "text": "Really good partial is partial partial. Compare a partial path to a pattern as",
    "start": "312375",
    "end": "320041"
  },
  {
    "text": "long as the parts of the path that are present are not contradicted by the",
    "start": "320041",
    "end": "325082"
  },
  {
    "text": "pattern it will be treated as a match. I'll link you to a",
    "start": "325083",
    "end": "330207"
  },
  {
    "text": "relevant piece of the box.",
    "start": "330208",
    "end": "332208"
  },
  {
    "text": "Just be easier to have that resolved on the little P there.",
    "start": "344291",
    "end": "349500"
  },
  {
    "text": "Well that even work well actually because it's not it's not technically a path.",
    "start": "351208",
    "end": "354625"
  },
  {
    "text": "I guess you just need a prefix and what's the.",
    "start": "359541",
    "end": "362083"
  },
  {
    "text": "But after join.",
    "start": "383000",
    "end": "384416"
  },
  {
    "text": "Well we can see what result does.",
    "start": "393791",
    "end": "396041"
  },
  {
    "text": "I mean if P was an actual path resolve would prepend the current working directory.",
    "start": "400208",
    "end": "404166"
  },
  {
    "text": "And then resolve it.",
    "start": "405583",
    "end": "408750"
  },
  {
    "text": "Yes it's not how resolved works. We're still getting false.",
    "start": "433333",
    "end": "438041"
  },
  {
    "text": "I was just testing partial. Okay. Sorry. Yeah I don't think partial is what we want. I was reading a little bit",
    "start": "439708",
    "end": "446375"
  },
  {
    "text": "more about that option I don't think it's.",
    "start": "446375",
    "end": "449333"
  },
  {
    "text": "Such should be in the mailbox.",
    "start": "501250",
    "end": "503833"
  },
  {
    "text": "But let's see a stream.",
    "start": "511875",
    "end": "513625"
  },
  {
    "text": "Do we need to build for the document builder.",
    "start": "549000",
    "end": "551375"
  },
  {
    "text": "Saving up a stop for the future.",
    "start": "559000",
    "end": "561666"
  },
  {
    "text": "There is the energy. All right.",
    "start": "566000",
    "end": "568666"
  },
  {
    "text": "Well I have a fair way to single the IDs and it's fun.",
    "start": "579916",
    "end": "584541"
  },
  {
    "text": "I was going to say if it gets removed then added.",
    "start": "587583",
    "end": "589583"
  },
  {
    "text": "Should probably check if the IDs actually change.",
    "start": "603041",
    "end": "608583"
  },
  {
    "text": "We got an import.",
    "start": "609958",
    "end": "614958"
  },
  {
    "text": "It was equal.",
    "start": "616125",
    "end": "617083"
  },
  {
    "text": "Catching the.",
    "start": "628000",
    "end": "629833"
  },
  {
    "text": "Is that changes.",
    "start": "634000",
    "end": "635458"
  },
  {
    "text": "Changes with.",
    "start": "640125",
    "end": "641083"
  },
  {
    "text": "What is the equals to raise.",
    "start": "667125",
    "end": "672083"
  },
  {
    "text": "We're in a structural region. It looks like it does.",
    "start": "682000",
    "end": "686708"
  },
  {
    "text": "some other checks. The structured region does state equals.",
    "start": "688041",
    "end": "695791"
  },
  {
    "text": "But we just use. Maybe the equivalent small job.",
    "start": "697916",
    "end": "702250"
  },
  {
    "text": "I need to submit. I'm fairly certain right now that a and B are void.",
    "start": "764583",
    "end": "771375"
  },
  {
    "text": "This is ID mailbox.",
    "start": "780083",
    "end": "784041"
  },
  {
    "text": "Just the signal is just. And it is immutable structures.",
    "start": "785833",
    "end": "791833"
  },
  {
    "text": "But it is.",
    "start": "808125",
    "end": "811333"
  },
  {
    "text": "Something to you to see. What's the key?",
    "start": "816000",
    "end": "821375"
  },
  {
    "text": "Down below IDs dot set document name document IDs.",
    "start": "838375",
    "end": "842833"
  },
  {
    "text": "That looks like the document. To document.",
    "start": "844000",
    "end": "847000"
  },
  {
    "text": "Yeah. But is what we're doing.",
    "start": "852000",
    "end": "858250"
  },
  {
    "text": "So now you just okay. Yes. Yeah. Yeah. Is what we're doing in the filter map then does that",
    "start": "858250",
    "end": "864208"
  },
  {
    "text": "make sense for the events. What is the idea of an event.",
    "start": "864208",
    "end": "868958"
  },
  {
    "text": "Is it the document name.",
    "start": "873500",
    "end": "875250"
  },
  {
    "text": "I'm saying we're checking on events. ID there is the event ID of an event.",
    "start": "887083",
    "end": "894125"
  },
  {
    "text": "The ID of an event the document name or not is really the question.",
    "start": "895208",
    "end": "898625"
  },
  {
    "text": "So then here we go stream dot map.",
    "start": "995708",
    "end": "998666"
  },
  {
    "text": "We just all demand values.",
    "start": "1031416",
    "end": "1032666"
  },
  {
    "text": "Nope, that's not what I want.",
    "start": "1051166",
    "end": "1052541"
  },
  {
    "text": "Bless.",
    "start": "1109458",
    "end": "1109583"
  },
  {
    "text": "True.",
    "start": "1115083",
    "end": "1115250"
  },
  {
    "text": "and then we can do a stream",
    "start": "1133375",
    "end": "1137750"
  },
  {
    "text": "Well, we can only do a stream",
    "start": "1138958",
    "end": "1140708"
  },
  {
    "text": "And then here we can get the",
    "start": "1163166",
    "end": "1165500"
  },
  {
    "text": "Is it previous in Purge?",
    "start": "1185208",
    "end": "1186791"
  },
  {
    "text": "I think so. Where is that pretty good thing used?",
    "start": "1194875",
    "end": "1201416"
  },
  {
    "text": "Previous.",
    "start": "1205333",
    "end": "1205750"
  },
  {
    "text": "There have been previous IDs, so... Current IDs. Is that...",
    "start": "1244625",
    "end": "1250833"
  },
  {
    "text": "And then we can do the Equality issue.",
    "start": "1269208",
    "end": "1271083"
  },
  {
    "text": "Is it just an array of strings? Do we need equal.equals?",
    "start": "1312125",
    "end": "1315208"
  },
  {
    "text": "Here we can probably just use the string equivalent now.",
    "start": "1319625",
    "end": "1324208"
  },
  {
    "text": "I think you won't affect equivalence.",
    "start": "1340833",
    "end": "1342500"
  },
  {
    "text": "Equivalence or string.",
    "start": "1373875",
    "end": "1374916"
  },
  {
    "text": "How is it working out the previous",
    "start": "1402416",
    "end": "1407125"
  },
  {
    "text": "Yeah, I think it only fires if it gets this form to elements in the room.",
    "start": "1416125",
    "end": "1424166"
  },
  {
    "text": "Yeah. It might be better to do like a filter",
    "start": "1425291",
    "end": "1432375"
  },
  {
    "text": "here instead of the changes with. It just means we would need to keep track",
    "start": "1432375",
    "end": "1438208"
  },
  {
    "text": "of the previous IDs.",
    "start": "1438208",
    "end": "1439583"
  },
  {
    "text": "Well, right now",
    "start": "1444875",
    "end": "1448125"
  },
  {
    "text": "This is always going to lie behind one element, right? And right now we're not even using the subsequent element in the changes.",
    "start": "1450833",
    "end": "1458375"
  },
  {
    "text": "Well, this is what it works because it's not properly tracking the previous item per document name.",
    "start": "1458583",
    "end": "1464625"
  },
  {
    "text": "It's just giving us the previous item of whatever document name.",
    "start": "1470541",
    "end": "1473833"
  },
  {
    "text": "So here we've got a previous",
    "start": "1499875",
    "end": "1502875"
  },
  {
    "text": "So then here we can just keep that as a right.",
    "start": "1523833",
    "end": "1526291"
  },
  {
    "text": "So we just return true there? I will do that.",
    "start": "1538833",
    "end": "1542666"
  },
  {
    "text": "So grab the previous, make sure it's populated with a current set of IDs,",
    "start": "1543875",
    "end": "1547666"
  },
  {
    "text": "And we only let it pass if they are not the same.",
    "start": "1560958",
    "end": "1567583"
  },
  {
    "text": "Great.",
    "start": "1587833",
    "end": "1588416"
  },
  {
    "text": "So that ID is coming from",
    "start": "1664166",
    "end": "1666875"
  },
  {
    "text": "events. Event.path.",
    "start": "1669875",
    "end": "1675250"
  },
  {
    "text": "Where do we calculate the ID for the document? We're building them.",
    "start": "1681125",
    "end": "1686333"
  },
  {
    "text": "Here we just see two",
    "start": "1695083",
    "end": "1696833"
  },
  {
    "text": "living in here.",
    "start": "1702250",
    "end": "1702958"
  },
  {
    "text": "I wouldn't just keep the path as absolute now.",
    "start": "1720250",
    "end": "1722333"
  },
  {
    "text": "No, we don't want the absolute paths.",
    "start": "1725791",
    "end": "1727666"
  },
  {
    "text": "Yeah, because document IDs are supposed to be",
    "start": "1766625",
    "end": "1771875"
  },
  {
    "text": "relative.",
    "start": "1772500",
    "end": "1772708"
  },
  {
    "text": "So we're not getting another ID right. Let's just need to",
    "start": "1788000",
    "end": "1794041"
  },
  {
    "text": "make sure we're getting the actual event.",
    "start": "1794041",
    "end": "1797125"
  },
  {
    "text": "We wouldn't be relative to",
    "start": "1882833",
    "end": "1884875"
  },
  {
    "text": "I guess the options are",
    "start": "1901833",
    "end": "1906416"
  },
  {
    "text": "determine when it's relative to.",
    "start": "1907500",
    "end": "1910833"
  },
  {
    "text": "Are we relative to the current working directory?",
    "start": "1942875",
    "end": "1946791"
  },
  {
    "text": "We're going to restore that.",
    "start": "1958125",
    "end": "1959000"
  },
  {
    "text": "I guess if you just resolve",
    "start": "1969750",
    "end": "1971833"
  },
  {
    "text": "You can pass an empty argument to path.resolve and it will give you the current working directory.",
    "start": "1977583",
    "end": "1982041"
  },
  {
    "text": "Thank you.",
    "start": "1983583",
    "end": "1983916"
  },
  {
    "text": "Current working directory. Also, if you just do a path.resolve",
    "start": "1990958",
    "end": "1996000"
  },
  {
    "text": "and then the path name, it will pre-pend the current working directory. Automatically. So you",
    "start": "1996291",
    "end": "2001583"
  },
  {
    "text": "don't have to do like a separate thing. Just a",
    "start": "2001583",
    "end": "2005833"
  },
  {
    "text": "Little Node.js tidbits.",
    "start": "2013333",
    "end": "2014666"
  },
  {
    "text": "Yes. Okay. So we're getting the event",
    "start": "2020750",
    "end": "2029750"
  },
  {
    "text": "but we're not getting another index update which is what we want.",
    "start": "2030291",
    "end": "2035458"
  },
  {
    "text": "We'll get rid of our console logs.",
    "start": "2039500",
    "end": "2041791"
  },
  {
    "text": "So I guess that means what should I be working with?",
    "start": "2060208",
    "end": "2066500"
  },
  {
    "text": "I feel like we need to have some logs for when it's done all right.",
    "start": "2066541",
    "end": "2070875"
  },
  {
    "text": "Just some indication that it's done something. I'm sorry, did we fix the ID thing that",
    "start": "2073500",
    "end": "2080250"
  },
  {
    "text": "you were saying was a problem? Yeah. So that's correctly detecting duplicates.",
    "start": "2080250",
    "end": "2088166"
  },
  {
    "text": "Nice. So where would we do our log?",
    "start": "2089666",
    "end": "2095291"
  },
  {
    "text": "We just need a way of detecting this.",
    "start": "2100625",
    "end": "2106541"
  },
  {
    "text": "A run is finished. Was it this internal string?",
    "start": "2108333",
    "end": "2114375"
  },
  {
    "text": "So if a watch thing is triggered, then it'll send some events here.",
    "start": "2116708",
    "end": "2122833"
  },
  {
    "text": "But that's a different string.",
    "start": "2126666",
    "end": "2128583"
  },
  {
    "text": "I guess we could just log for every document, but that's quite wizzy.",
    "start": "2143208",
    "end": "2146541"
  },
  {
    "text": "I wonder what make more sense here, does it make more sense to",
    "start": "2149291",
    "end": "2152625"
  },
  {
    "text": "I feel like you probably do want to know when So maybe the first most useful log would be if a document does change, you",
    "start": "2154833",
    "end": "2161958"
  },
  {
    "text": "probably want to know. Right. Yeah. So if you edit a document and save it and",
    "start": "2161958",
    "end": "2169416"
  },
  {
    "text": "that triggers a rebuild, you probably want to know.",
    "start": "2169416",
    "end": "2171708"
  },
  {
    "text": "We have no way of knowing at the moment that an event was initial or was a change.",
    "start": "2181250",
    "end": "2190458"
  },
  {
    "text": "I thought that Do we feed the mailbox? Oh, I see. Do we just feed the mailbox",
    "start": "2191833",
    "end": "2197000"
  },
  {
    "text": "all of the initial events up front? Yeah.",
    "start": "2197000",
    "end": "2201416"
  },
  {
    "text": "Got it.",
    "start": "2202500",
    "end": "2203041"
  },
  {
    "text": "Well, I mean, we could... I don't know if you like this idea, but instead of adding a proper dues to the event, we could just",
    "start": "2211041",
    "end": "2217375"
  },
  {
    "text": "run all of the initial events first and then start the changes stream.",
    "start": "2217375",
    "end": "2222375"
  },
  {
    "text": "Run the initial bits first. Like where we're feeding all of the",
    "start": "2226708",
    "end": "2231916"
  },
  {
    "text": "initial events into the mailbox. Instead of doing that, we",
    "start": "2231916",
    "end": "2238375"
  },
  {
    "text": "could extract the logic.",
    "start": "2238375",
    "end": "2239875"
  },
  {
    "text": "Somewhere else and basically do an initial build and then start the stream.",
    "start": "2245500",
    "end": "2250375"
  },
  {
    "text": "You know what I mean? Well, the stream is used for the initial build.",
    "start": "2253625",
    "end": "2256875"
  },
  {
    "text": "It's the same stream for Watchmode and not watchmode.",
    "start": "2259583",
    "end": "2263083"
  },
  {
    "text": "The other option is We could just have a We could just save.",
    "start": "2267833",
    "end": "2272375"
  },
  {
    "text": "Yeah, we could just The other option would be to track it inside the stream.",
    "start": "2282166",
    "end": "2286833"
  },
  {
    "text": "We could literally just have a boolean",
    "start": "2287833",
    "end": "2292958"
  },
  {
    "text": "that we flipped to false after. We can't because the",
    "start": "2292958",
    "end": "2298791"
  },
  {
    "text": "Nevermind. So I just wanted to say",
    "start": "2300125",
    "end": "2305708"
  },
  {
    "text": "If this was not an initial event, then log it.",
    "start": "2309208",
    "end": "2314708"
  },
  {
    "text": "So we could just do a tip.",
    "start": "2315041",
    "end": "2315833"
  },
  {
    "text": "Event here.",
    "start": "2321166",
    "end": "2321958"
  },
  {
    "text": "Event start initial. You turn it into void.",
    "start": "2349375",
    "end": "2354875"
  },
  {
    "text": "What about for removed events though? Removed events are always from a change.",
    "start": "2368458",
    "end": "2375458"
  },
  {
    "text": "We don't track those in this particular stream. If it's not watchmode, then you're never",
    "start": "2378750",
    "end": "2385833"
  },
  {
    "text": "going to remove events. Got it.",
    "start": "2385833",
    "end": "2392541"
  },
  {
    "text": "I'm wondering how long something will work though. It's starting to look like one document.",
    "start": "2392833",
    "end": "2398541"
  },
  {
    "text": "I think we only have a path on the event.",
    "start": "2458541",
    "end": "2462125"
  },
  {
    "text": "Okay.",
    "start": "2502833",
    "end": "2503208"
  },
  {
    "text": "What program do you need to build? It always feels better to build.",
    "start": "2510208",
    "end": "2514541"
  },
  {
    "text": "Ah, see, we did need to build. It's only about our type errors.",
    "start": "2518958",
    "end": "2524291"
  },
  {
    "text": "It's interesting document remove document added.",
    "start": "2576875",
    "end": "2580208"
  },
  {
    "text": "I can think so right at the top there before you triggered this like read the change.",
    "start": "2590333",
    "end": "2596583"
  },
  {
    "text": "The one other time where I think we might want to emit a log. I don't know if it's going to be possible to be honest and watch mode.",
    "start": "2598125",
    "end": "2603833"
  },
  {
    "text": "But we might want to log the",
    "start": "2603875",
    "end": "2609416"
  },
  {
    "text": "total number of documents built. I don't know that we can really do that and watch mode.",
    "start": "2609416",
    "end": "2614458"
  },
  {
    "text": "We don't we don't have like batches of events that we're tracking.",
    "start": "2616708",
    "end": "2620625"
  },
  {
    "text": "We can just give them the ID.",
    "start": "2624583",
    "end": "2626958"
  },
  {
    "text": "That's true I guess.",
    "start": "2632125",
    "end": "2632833"
  },
  {
    "text": "Wait a bit longer. Done here.",
    "start": "2650083",
    "end": "2651458"
  },
  {
    "text": "There's a function I just made in scope.",
    "start": "2695583",
    "end": "2698791"
  },
  {
    "text": "This function. I think it would have to be outside documents.",
    "start": "2707166",
    "end": "2713041"
  },
  {
    "text": "No way.",
    "start": "2715958",
    "end": "2716750"
  },
  {
    "text": "So we can just. That's okay.",
    "start": "2721083",
    "end": "2724958"
  },
  {
    "text": "So what.",
    "start": "2741291",
    "end": "2741708"
  },
  {
    "text": "Yeah the only thing that sucks about this is it won't be a myth like every time the stream finishes. So we have to.",
    "start": "2760583",
    "end": "2765875"
  },
  {
    "text": "It would be great to figure that out too. I mean I know the stream isn't finishing in watch mode. I'm saying like.",
    "start": "2766041",
    "end": "2771291"
  },
  {
    "text": "At some reasonable interval.",
    "start": "2771958",
    "end": "2772833"
  },
  {
    "text": "Let's just get rid of the notation.",
    "start": "2809375",
    "end": "2811833"
  },
  {
    "text": "All right. So I got watch working.",
    "start": "2851875",
    "end": "2853833"
  },
  {
    "text": "Can you do it can ask can you just add another document in that directory.",
    "start": "2858250",
    "end": "2861583"
  },
  {
    "text": "Yeah.",
    "start": "2873000",
    "end": "2873250"
  },
  {
    "text": "We'll probably want to add a more useful error message at some point. The title was missing.",
    "start": "2882208",
    "end": "2889833"
  },
  {
    "text": "Well it crashed inside",
    "start": "2899125",
    "end": "2901916"
  },
  {
    "text": "Right. I guess.",
    "start": "2913666",
    "end": "2915916"
  },
  {
    "text": "And we don't really want this to. Fail a fight like stop the stream we want to.",
    "start": "2920250",
    "end": "2925000"
  },
  {
    "text": "Yes. emit a useful log and then just not write the document.",
    "start": "2925625",
    "end": "2929375"
  },
  {
    "text": "We want to wait for a change. Again. Then watch.",
    "start": "2931000",
    "end": "2936333"
  },
  {
    "text": "So I mean this branch which is fine for a normal build.",
    "start": "2939833",
    "end": "2944291"
  },
  {
    "text": "And watch mode Yeah. what we really want and watch mode is.",
    "start": "2947583",
    "end": "2955166"
  },
  {
    "text": "Yeah like. Log.",
    "start": "2959375",
    "end": "2964291"
  },
  {
    "text": "A useful error message. We don't want to retry the source.",
    "start": "2966916",
    "end": "2973416"
  },
  {
    "text": "We just want to keep it. Correct. Where is the build happening again.",
    "start": "2974166",
    "end": "2981458"
  },
  {
    "text": "That's weird. There's a schema dot decode somewhere. Yeah.",
    "start": "2982791",
    "end": "2987416"
  },
  {
    "text": "We just. So here's one area where we could recover but we could also.",
    "start": "2988416",
    "end": "2994125"
  },
  {
    "text": "You kind of want to get entire block.",
    "start": "2994708",
    "end": "2999916"
  },
  {
    "text": "I think you're just missing a parentheses.",
    "start": "3054833",
    "end": "3057833"
  },
  {
    "text": "And we need to catch this operation if it fails or decode either or whatever.",
    "start": "3075375",
    "end": "3079166"
  },
  {
    "text": "Because. In the event that.",
    "start": "3081875",
    "end": "3084875"
  },
  {
    "text": "Because in the event the field is missing we probably want to show an error saying like hey you're missing X field in the",
    "start": "3087541",
    "end": "3093541"
  },
  {
    "text": "front matter or something.",
    "start": "3093541",
    "end": "3095208"
  },
  {
    "text": "So that point we have. The result.",
    "start": "3106250",
    "end": "3109666"
  },
  {
    "text": "The side effect is storage.",
    "start": "3133666",
    "end": "3136041"
  },
  {
    "text": "Yeah there's a config I thought like like. I think you can. You know.",
    "start": "3159583",
    "end": "3164375"
  },
  {
    "text": "You can just yield it here though.",
    "start": "3165000",
    "end": "3167833"
  },
  {
    "text": "I love when it suggests like effect like 1.0 code.",
    "start": "3174833",
    "end": "3178083"
  },
  {
    "text": "It's nostalgic.",
    "start": "3180583",
    "end": "3181208"
  },
  {
    "text": "What we're doing.",
    "start": "3222958",
    "end": "3224458"
  },
  {
    "text": "And I guess we just. This is fine for now but we're definitely",
    "start": "3230041",
    "end": "3236541"
  },
  {
    "text": "going to want to like enhance these error messages like for the DX. Later.",
    "start": "3236541",
    "end": "3240875"
  },
  {
    "text": "I can already hear you like Johannes in my head.",
    "start": "3245291",
    "end": "3247958"
  },
  {
    "text": "Because we're catching everything. I think you're going to need to do the watch mode check inside.",
    "start": "3271333",
    "end": "3277250"
  },
  {
    "text": "Catch all cause and then just refill. Not as like fancy but.",
    "start": "3277250",
    "end": "3285000"
  },
  {
    "text": "That's an interesting one. And then.",
    "start": "3299083",
    "end": "3301541"
  },
  {
    "text": "Was there a reason we did it here. We wanted to be.",
    "start": "3309833",
    "end": "3314958"
  },
  {
    "text": "We wanted to be. It wasn't really.",
    "start": "3316125",
    "end": "3320416"
  },
  {
    "text": "It wasn't really changing behavior. It was straight after the.",
    "start": "3322833",
    "end": "3327291"
  },
  {
    "text": "Concurrent anyway. The mailbox offering could.",
    "start": "3328416",
    "end": "3333875"
  },
  {
    "text": "Do we still want it to be on the unsafe version. We want it to be atomic. Or can we actually make",
    "start": "3334500",
    "end": "3340083"
  },
  {
    "text": "it the effectful version.",
    "start": "3340083",
    "end": "3341125"
  },
  {
    "text": "Where is it. Right there. It makes a difference.",
    "start": "3345833",
    "end": "3352333"
  },
  {
    "text": "Cool. We just need to test this return.",
    "start": "3361791",
    "end": "3364875"
  },
  {
    "text": "We don't need the fields. Because we're going to run joined.",
    "start": "3368958",
    "end": "3374333"
  },
  {
    "text": "Has the output. I think that we want to do the opposite there. Yeah.",
    "start": "3408333",
    "end": "3412833"
  },
  {
    "text": "It's a document that he's has the output to the early return. What did we have before.",
    "start": "3415833",
    "end": "3421166"
  },
  {
    "text": "You're doing an early return. Yeah.",
    "start": "3422666",
    "end": "3425125"
  },
  {
    "text": "Okay. That should.",
    "start": "3431166",
    "end": "3435500"
  },
  {
    "text": "Well this case it's a document.",
    "start": "3445750",
    "end": "3449083"
  },
  {
    "text": "I think that's fine now. They're building document.",
    "start": "3453333",
    "end": "3458500"
  },
  {
    "text": "And again here I think we can do a lot to enhance the errors later.",
    "start": "3465541",
    "end": "3469041"
  },
  {
    "text": "You can put that on our to do list.",
    "start": "3470625",
    "end": "3471958"
  },
  {
    "text": "Should say you're building document. The rule of the title.",
    "start": "3521916",
    "end": "3529500"
  },
  {
    "text": "We remove the title again and show me the law.",
    "start": "3541166",
    "end": "3543875"
  },
  {
    "text": "It's still saying that one document was built. Oh yeah because we do. We build the document one.",
    "start": "3550541",
    "end": "3556375"
  },
  {
    "text": "Yeah. But we didn't build. We didn't build document one.",
    "start": "3557541",
    "end": "3563291"
  },
  {
    "text": "Did we. We did. document One is still fine. it's document two that we screwed up.",
    "start": "3563291",
    "end": "3569500"
  },
  {
    "text": "Yeah but but why are we rebuilding document one of it didn't change.",
    "start": "3569500",
    "end": "3574291"
  },
  {
    "text": "It's just saying it's just giving you the count of all the IDs.",
    "start": "3577541",
    "end": "3581250"
  },
  {
    "text": "Yeah that's that's that's giving you like the current state on the documents rather than.",
    "start": "3582833",
    "end": "3588625"
  },
  {
    "text": "The change.",
    "start": "3589666",
    "end": "3590500"
  },
  {
    "text": "Count there that we'll just need to do. Like a counter.",
    "start": "3600250",
    "end": "3605041"
  },
  {
    "text": "Which I said could be quite easy.",
    "start": "3609708",
    "end": "3611625"
  },
  {
    "text": "Count is the new pound.",
    "start": "3633833",
    "end": "3634833"
  },
  {
    "text": "And then.",
    "start": "3649333",
    "end": "3649916"
  },
  {
    "text": "We only have. We only increment if the doc if we add a",
    "start": "3664041",
    "end": "3670166"
  },
  {
    "text": "new document ID or is it only if we. Oh no no no because. Yeah nevermind.",
    "start": "3670166",
    "end": "3675125"
  },
  {
    "text": "Except for the old one. And then that way every time we.",
    "start": "3676041",
    "end": "3682666"
  },
  {
    "text": "Render this thing. We'll get.",
    "start": "3686583",
    "end": "3688791"
  },
  {
    "text": "The actual built documents and say the counter because there is.",
    "start": "3691625",
    "end": "3695625"
  },
  {
    "text": "And for that should the message be like rebuilt.",
    "start": "3697916",
    "end": "3700583"
  },
  {
    "text": "No. Because we do emit an initial number of documents built right.",
    "start": "3702958",
    "end": "3707833"
  },
  {
    "text": "Yeah.",
    "start": "3713708",
    "end": "3713833"
  },
  {
    "text": "Can it returns a content processor.",
    "start": "3819541",
    "end": "3822666"
  },
  {
    "text": "So kind of like. The constructor pattern. Yeah.",
    "start": "3827833",
    "end": "3832791"
  },
  {
    "text": "Let's try that. Let's try that.",
    "start": "3839375",
    "end": "3842458"
  },
  {
    "text": "And then the construct. We have here.",
    "start": "3867291",
    "end": "3869541"
  },
  {
    "text": "And we'll see the requirements.",
    "start": "3872833",
    "end": "3875083"
  },
  {
    "text": "And it'll return.",
    "start": "3883291",
    "end": "3885791"
  },
  {
    "text": "Essentially one of these.",
    "start": "3888708",
    "end": "3890500"
  },
  {
    "text": "So it's a function that takes some kind of. Upfront",
    "start": "3940750",
    "end": "3944208"
  },
  {
    "text": "It's got weird.",
    "start": "3955250",
    "end": "3956250"
  },
  {
    "text": "You're.",
    "start": "3980791",
    "end": "3981208"
  },
  {
    "text": "We're going to need to lift. Meta everything out.",
    "start": "4008833",
    "end": "4012916"
  },
  {
    "text": "The inner method. Yeah.",
    "start": "4016083",
    "end": "4019500"
  },
  {
    "text": "So this the internal build function is going to receive the previous output and transform it basically like that's what",
    "start": "4025291",
    "end": "4031958"
  },
  {
    "text": "the method is going to. return the new source.",
    "start": "4031958",
    "end": "4034833"
  },
  {
    "text": "The same meta",
    "start": "4039833",
    "end": "4040541"
  },
  {
    "text": "return new content.",
    "start": "4045833",
    "end": "4047083"
  },
  {
    "text": "With this signature. Catching.",
    "start": "4063708",
    "end": "4066708"
  },
  {
    "text": "I was going to say with this signature I think we need to union them right.",
    "start": "4071000",
    "end": "4073958"
  },
  {
    "text": "Same thing for context.",
    "start": "4079916",
    "end": "4080916"
  },
  {
    "text": "The because it's replacing the output.",
    "start": "4090416",
    "end": "4092375"
  },
  {
    "text": "But still your applies and you don't do a union. But it's still a union.",
    "start": "4097291",
    "end": "4103291"
  },
  {
    "text": "The problem is when you back to plan and you don't know these generics. So we can't get them",
    "start": "4129125",
    "end": "4136416"
  },
  {
    "text": "I mean, in the ideal world, you would just give a stream of output.",
    "start": "4170416",
    "end": "4179625"
  },
  {
    "text": "Well, I think we started this last time. I thought this was the original signature we had.",
    "start": "4179625",
    "end": "4187458"
  },
  {
    "text": "We had like a, basically it was a thing that like just transformed stream. It wasn't that the original like map",
    "start": "4188208",
    "end": "4194208"
  },
  {
    "text": "effect was like a transform method or something.",
    "start": "4194208",
    "end": "4197583"
  },
  {
    "text": "Or are you saying this is the constructor now? The problem is",
    "start": "4202416",
    "end": "4206583"
  },
  {
    "text": "The problem is stream. We're doing a stream of events.",
    "start": "4223125",
    "end": "4227583"
  },
  {
    "text": "So if you wanted to",
    "start": "4235500",
    "end": "4238500"
  },
  {
    "text": "So it has the stream. So you get output. You do",
    "start": "4256500",
    "end": "4262541"
  },
  {
    "text": "the new stream with new output.",
    "start": "4262541",
    "end": "4264916"
  },
  {
    "text": "And you can do it.",
    "start": "4270541",
    "end": "4272875"
  },
  {
    "text": "Okay, what's wrong with it?",
    "start": "4281333",
    "end": "4284666"
  },
  {
    "text": "I think in the generics you just need to add context too.",
    "start": "4286916",
    "end": "4293083"
  },
  {
    "text": "I think this will do. This will do.",
    "start": "4332666",
    "end": "4335625"
  },
  {
    "text": "So to achieve this, we are going to have to extract the added events.",
    "start": "4340875",
    "end": "4347500"
  },
  {
    "text": "Map them through the plugin and then merge them.",
    "start": "4349041",
    "end": "4353708"
  },
  {
    "text": "So to extract it, we need a mailbox of",
    "start": "4358791",
    "end": "4364833"
  },
  {
    "text": "output, meta, context.",
    "start": "4367416",
    "end": "4374416"
  },
  {
    "text": "Then we will need to basically feed the",
    "start": "4386041",
    "end": "4392375"
  },
  {
    "text": "self stream into the mailbox. And then take the mailbox and transform",
    "start": "4392375",
    "end": "4398333"
  },
  {
    "text": "it to a stream and transform the outputs that way.",
    "start": "4398333",
    "end": "4401250"
  },
  {
    "text": "So we'll need to consume self.events.",
    "start": "4407375",
    "end": "4413166"
  },
  {
    "text": "So if the event is a removal, then",
    "start": "4432916",
    "end": "4440166"
  },
  {
    "text": "succeed event.",
    "start": "4445541",
    "end": "4448291"
  },
  {
    "text": "Otherwise, we return stream ID.",
    "start": "4452375",
    "end": "4458875"
  },
  {
    "text": "This is not going to maintain ordering of events, right?",
    "start": "4463416",
    "end": "4465875"
  },
  {
    "text": "No. Could we push all the events into the",
    "start": "4469958",
    "end": "4479208"
  },
  {
    "text": "mailbox and only transform the added ones?",
    "start": "4479208",
    "end": "4483250"
  },
  {
    "text": "Servers are removed after an edit.",
    "start": "4509958",
    "end": "4512000"
  },
  {
    "text": "I think this will be a good problem for us to work on the next time we meet.",
    "start": "4519000",
    "end": "4522041"
  },
  {
    "text": "So that's good. I think that if we add to our to dos right now, the things to add would be",
    "start": "4524541",
    "end": "4533083"
  },
  {
    "text": "We're still continually iterating on the plugin API, so we need to basically keep working",
    "start": "4534291",
    "end": "4539291"
  },
  {
    "text": "I think event ordering is the problem we need to solve if we're going to go with this route.",
    "start": "4539333",
    "end": "4544458"
  },
  {
    "text": "And then the other thing I want to add to our to do list is to improve error messages.",
    "start": "4550833",
    "end": "4556250"
  },
  {
    "text": "I think we have a really good opportunity to provide some very nice error messages when stuff happens.",
    "start": "4560875",
    "end": "4566541"
  },
  {
    "text": "Cool cool. Cool. Well, thank you very much everyone for hanging with us.",
    "start": "4568791",
    "end": "4578041"
  },
  {
    "text": "Yeah, I guess we'll see you guys all next week.",
    "start": "4579416",
    "end": "4585541"
  }
]