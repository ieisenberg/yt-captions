[
  {
    "text": "so for bad presentations I'll try one and again as Johanna said we we haven't",
    "start": "3760",
    "end": "10440"
  },
  {
    "text": "yet learned very well how to present so that's the first time I'm giving this",
    "start": "10440",
    "end": "16240"
  },
  {
    "text": "talk and first of all I'd like again to thank all of you um especially amplify",
    "start": "16240",
    "end": "23080"
  },
  {
    "text": "that gave us the space to do this it would have been very hard without the",
    "start": "23080",
    "end": "28439"
  },
  {
    "text": "help so thank you thank you for coming here and I'll",
    "start": "28439",
    "end": "35520"
  },
  {
    "text": "start so the presentation is called y",
    "start": "36360",
    "end": "40920"
  },
  {
    "text": "effect this slide comes from the state of",
    "start": "42920",
    "end": "48039"
  },
  {
    "text": "JavaScript um survey from last year and",
    "start": "48039",
    "end": "54120"
  },
  {
    "text": "this is asking people what they feel it's missing from uh typescript from",
    "start": "54120",
    "end": "60320"
  },
  {
    "text": "JavaScript getting a little bit ahead of myself if if I read this",
    "start": "60320",
    "end": "66799"
  },
  {
    "text": "slide I read static typing I read standard Library which is a weird name",
    "start": "66799",
    "end": "74360"
  },
  {
    "text": "better date management guess a lot of people had problems with moment immutable data structures that's",
    "start": "74360",
    "end": "82880"
  },
  {
    "text": "that's interesting observable good pipe",
    "start": "82880",
    "end": "87920"
  },
  {
    "text": "operator uh decorator opinion and pattern matching does does",
    "start": "87920",
    "end": "95560"
  },
  {
    "text": "this reflect any of you like you've you've used JavaScript for for a while",
    "start": "95560",
    "end": "103360"
  },
  {
    "text": "okay it's funny because this reflects exactly my ideas",
    "start": "103360",
    "end": "108439"
  },
  {
    "text": "and that's I'm getting again a bit of ahead of myself hi I'm Mike kind of love",
    "start": "108439",
    "end": "118039"
  },
  {
    "text": "typescript or rather gr love typescript and I built a fat and now I'm going to",
    "start": "118039",
    "end": "125399"
  },
  {
    "text": "try to tell you why so why",
    "start": "125399",
    "end": "130399"
  },
  {
    "text": "effect the slide before we' saw quite different names on on that slide and",
    "start": "130400",
    "end": "138239"
  },
  {
    "text": "with effect you do get immutable data structures you do get type safety for",
    "start": "138239",
    "end": "144360"
  },
  {
    "text": "errors and requirements you get structured concurrency you get observability and",
    "start": "144360",
    "end": "151720"
  },
  {
    "text": "later on we're we're going to see most of those uh things in a in a Concrete ad",
    "start": "151720",
    "end": "157879"
  },
  {
    "text": "especially observability is something that can be obscure to many because it's",
    "start": "157879",
    "end": "163000"
  },
  {
    "text": "sort of a recent recent pattern but it's one of the things I love most about the fat fat",
    "start": "163000",
    "end": "171360"
  },
  {
    "text": "gives you indeed pattern matching if you want to uh gives you interruptibility",
    "start": "171360",
    "end": "176400"
  },
  {
    "text": "and resource safety modularity comp posibility and it has a rich ecosystem",
    "start": "176400",
    "end": "182080"
  },
  {
    "text": "of uh of integration it's kind of the missing standard library from from typescript or",
    "start": "182080",
    "end": "188959"
  },
  {
    "text": "at least I I like to I like to think of it in this way well let's take a little bit of a",
    "start": "188959",
    "end": "196239"
  },
  {
    "text": "detour um into JavaScript which is really what backs the runtime of all of",
    "start": "196239",
    "end": "204400"
  },
  {
    "text": "this JavaScript thebat this slide could be way longer uh I sort of kind of",
    "start": "204400",
    "end": "211000"
  },
  {
    "text": "summarized it in a in a few points it's very old language well very old relatively old",
    "start": "211000",
    "end": "220319"
  },
  {
    "text": "can drink beer pretty much all the world it didn't really have modules CU",
    "start": "220319",
    "end": "227120"
  },
  {
    "text": "you know I was meant to run in a browser to build scripts so didn't really need",
    "start": "227120",
    "end": "232439"
  },
  {
    "text": "any any module or architecture at the beginning was definitely not designed to",
    "start": "232439",
    "end": "238400"
  },
  {
    "text": "scale and never had a standard Library like if you",
    "start": "238400",
    "end": "243680"
  },
  {
    "text": "see any other language that's the language run time and then you have a rich standard library of functionality",
    "start": "243680",
    "end": "250439"
  },
  {
    "text": "that you can just plug into your um into your program and use if I think of go",
    "start": "250439",
    "end": "256160"
  },
  {
    "text": "standard library is extremely rich rust the same JavaScript no standard Library",
    "start": "256160",
    "end": "264639"
  },
  {
    "text": "whatsoever and it kind of of have an off behavior",
    "start": "264639",
    "end": "269960"
  },
  {
    "text": "in many things and as one number plus one string can yield whatever um a equal",
    "start": "269960",
    "end": "277440"
  },
  {
    "text": "B might be true or false depending it's kind of a mess but has evolved and here we can",
    "start": "277440",
    "end": "287520"
  },
  {
    "text": "kind of see a timeline of some of the important steps this as I as I see them",
    "start": "287520",
    "end": "294360"
  },
  {
    "text": "um starting from the very beginning with creation of JavaScript U meant to running browsers",
    "start": "294360",
    "end": "301560"
  },
  {
    "text": "so funny enough it's one of the languages with a better specification and with multiple",
    "start": "301560",
    "end": "308960"
  },
  {
    "text": "independently Le developed run times since day one CU we always had",
    "start": "308960",
    "end": "317120"
  },
  {
    "text": "multiple browsers but took a few years",
    "start": "317120",
    "end": "323160"
  },
  {
    "text": "before somebody uh Ryan Dal in this case decided to try and use JavaScript in the",
    "start": "323160",
    "end": "330479"
  },
  {
    "text": "back end uh with the creation of node.js that's sort of marked a very important",
    "start": "330479",
    "end": "336120"
  },
  {
    "text": "step in the in the development of JavaScript that's where first Concepts",
    "start": "336120",
    "end": "341720"
  },
  {
    "text": "like modules and and really what JavaScript is today kind of Bor with npm and the",
    "start": "341720",
    "end": "349800"
  },
  {
    "text": "and the ecosystem of modules another very important step is to me the creation of typescript by Microsoft",
    "start": "349800",
    "end": "356960"
  },
  {
    "text": "that's 2012 and we've got riat",
    "start": "356960",
    "end": "362720"
  },
  {
    "text": "2013 Dino as a as a separated runtime very recent now a year ago",
    "start": "362720",
    "end": "371080"
  },
  {
    "text": "ban like JavaScript is evolving it's becoming a beast it's becoming amazing",
    "start": "371080",
    "end": "376680"
  },
  {
    "text": "to use and you can do way more than than what it was thought to work",
    "start": "376680",
    "end": "385440"
  },
  {
    "text": "with so JavaScript the good because there's also a lot of good it is a synchronous and event R",
    "start": "385440",
    "end": "393880"
  },
  {
    "text": "it's concurrency model is really great it runs",
    "start": "393880",
    "end": "399199"
  },
  {
    "text": "everywhere pretty much everywhere I've already mentioned nodejs Dino and ban",
    "start": "399199",
    "end": "405440"
  },
  {
    "text": "but there's more there's tons of embedded JavaScript run times and it truly runs on an amazing",
    "start": "405440",
    "end": "413639"
  },
  {
    "text": "number of devices has a rich tool chain as much as we like to complain about the tool chain",
    "start": "413639",
    "end": "419400"
  },
  {
    "text": "chain of JavaScript it's one of the best I found in many other languages not the",
    "start": "419400",
    "end": "425960"
  },
  {
    "text": "best hence hence down it's messy sometimes but it's by far uh not the",
    "start": "425960",
    "end": "433840"
  },
  {
    "text": "worst it again I've mentioned the concurrency model which really fits",
    "start": "434199",
    "end": "440240"
  },
  {
    "text": "business logic really fits um problems from The Real",
    "start": "440240",
    "end": "445879"
  },
  {
    "text": "World and can be in boxes so it can really run even i' I've even seen",
    "start": "445879",
    "end": "453440"
  },
  {
    "text": "implementations where um wasn't runtime in the browser and you run JavaScript",
    "start": "453440",
    "end": "458759"
  },
  {
    "text": "embedded in an embedded sandbox is amazing what you can",
    "start": "458759",
    "end": "464120"
  },
  {
    "text": "do this is a a tweet from a friend of mine uh who happened to be the author of",
    "start": "464440",
    "end": "472639"
  },
  {
    "text": "zoo Z is a scolar library targets the jbm this person was a heavily",
    "start": "472639",
    "end": "480560"
  },
  {
    "text": "parallel Advocate and has tweeted this this year",
    "start": "480560",
    "end": "486720"
  },
  {
    "text": "and was like I have to screenshot this it taken me a decade but I don't think high level languages not made for",
    "start": "486720",
    "end": "492479"
  },
  {
    "text": "writing operating systems should provide green threats at top of a single OS threat she almost",
    "start": "492479",
    "end": "499319"
  },
  {
    "text": "JavaScript not really but almost concurrence is great but 99% of the",
    "start": "499319",
    "end": "505840"
  },
  {
    "text": "problems don't need it in the form of parallelism effect is precisely that it gives you",
    "start": "505840",
    "end": "513080"
  },
  {
    "text": "green threads gives you fibers on top of a single execution thread which is the",
    "start": "513080",
    "end": "519159"
  },
  {
    "text": "event Loop of JavaScript and he did admit which is almost",
    "start": "519159",
    "end": "526080"
  },
  {
    "text": "JS but with the fact we really consider JavaScript and typescript to be the same",
    "start": "526320",
    "end": "533440"
  },
  {
    "text": "at the at the moment why because Ty really the reason why",
    "start": "533440",
    "end": "540040"
  },
  {
    "text": "JavaScript is usable at scale um Microsoft has a unique capability in Dev",
    "start": "540040",
    "end": "546279"
  },
  {
    "text": "tooling the dev tooling around typescript is just amazing it's really just JavaScript with",
    "start": "546279",
    "end": "552600"
  },
  {
    "text": "types the sense that they did not reinvent a new language it's widely supported by pretty",
    "start": "552600",
    "end": "559399"
  },
  {
    "text": "much any tool I can think of today and it's one of the most advanced",
    "start": "559399",
    "end": "565200"
  },
  {
    "text": "and complete type systems that I've ever had to work with and I've worked with quite a few typ",
    "start": "565200",
    "end": "572120"
  },
  {
    "text": "systems if we see during the years another another slide that I took from",
    "start": "572120",
    "end": "577760"
  },
  {
    "text": "the state of JavaScript is how many users are now",
    "start": "577760",
    "end": "583839"
  },
  {
    "text": "using typescript fully that's 20 plus% of the full JavaScript usage base is",
    "start": "583839",
    "end": "594000"
  },
  {
    "text": "huge and most importantly you see that it's not like",
    "start": "594000",
    "end": "599760"
  },
  {
    "text": "if you see 100% JavaScript against 100% typescript there's almost no gain and",
    "start": "599760",
    "end": "607600"
  },
  {
    "text": "even even people that don't use it for everything still use it for 75% of the",
    "start": "607600",
    "end": "614200"
  },
  {
    "text": "things like this part takes 40% of developers in the JavaScript",
    "start": "614200",
    "end": "620600"
  },
  {
    "text": "space so it's a language that we can use reliably it's heavily used in production",
    "start": "620600",
    "end": "626480"
  },
  {
    "text": "by many people and it's a great basis to begin working",
    "start": "626480",
    "end": "631720"
  },
  {
    "text": "on so what do we target with effect well we target pretty much everything you can",
    "start": "631720",
    "end": "637120"
  },
  {
    "text": "build with JavaScript we target single page applications multi-page applications a",
    "start": "637120",
    "end": "644399"
  },
  {
    "text": "very interesting another type of applications that are called local first",
    "start": "644399",
    "end": "650079"
  },
  {
    "text": "johanes is going to uh give a talk about how he built an effect um a local first",
    "start": "650079",
    "end": "656639"
  },
  {
    "text": "app after it's a extremely interesting can be used for backend apis",
    "start": "656639",
    "end": "663320"
  },
  {
    "text": "and middlewares it's actually the the first reason I've created effect was to",
    "start": "663320",
    "end": "669320"
  },
  {
    "text": "deploy a Bend so was to be used in a Bend you can develop full stack",
    "start": "669320",
    "end": "676160"
  },
  {
    "text": "apps can use it with react server components you can use it with remix can use it with nextjs you can use it quick",
    "start": "676160",
    "end": "684440"
  },
  {
    "text": "I will demo in a few minutes um a remix um integr",
    "start": "684440",
    "end": "689560"
  },
  {
    "text": "where we're going to go step by step can use it for serverless like Lambda",
    "start": "689560",
    "end": "694639"
  },
  {
    "text": "functions are ruling the word and it's perfect for writing",
    "start": "694639",
    "end": "699920"
  },
  {
    "text": "business Logics and workflows right even very widely used work for",
    "start": "699920",
    "end": "706600"
  },
  {
    "text": "platforms you see the first language used typescript we want to get",
    "start": "706600",
    "end": "713000"
  },
  {
    "text": "there so let's see some code that's enough enough for slides",
    "start": "714160",
    "end": "719519"
  },
  {
    "text": "and I'm bad enough so I'm slightly better to",
    "start": "719519",
    "end": "725320"
  },
  {
    "text": "quote so I've prepared for you",
    "start": "726839",
    "end": "732040"
  },
  {
    "text": "um a demo",
    "start": "732040",
    "end": "737079"
  },
  {
    "text": "that hopefully it's going to all [Music]",
    "start": "737079",
    "end": "742240"
  },
  {
    "text": "work I am using remix as",
    "start": "742240",
    "end": "747839"
  },
  {
    "text": "a as a framework as I've described before",
    "start": "747880",
    "end": "754880"
  },
  {
    "text": "and we are going to start with um make it bigger make it bigger",
    "start": "754880",
    "end": "763000"
  },
  {
    "text": "thank bigger bigger again yes bigger he",
    "start": "765040",
    "end": "770480"
  },
  {
    "text": "come up no that's too",
    "start": "770480",
    "end": "776199"
  },
  {
    "text": "big I for reason there you",
    "start": "776199",
    "end": "781880"
  },
  {
    "text": "go okay it's going to look fun with the effect side",
    "start": "781880",
    "end": "787079"
  },
  {
    "text": "yeah so let me maybe",
    "start": "787079",
    "end": "794639"
  },
  {
    "text": "show what this beautiful up is",
    "start": "796320",
    "end": "800680"
  },
  {
    "text": "doing oh fig well you're not going understand it",
    "start": "802399",
    "end": "809519"
  },
  {
    "text": "anyway that's the point okay this error",
    "start": "809519",
    "end": "816639"
  },
  {
    "text": "sucks let's try again oh it works my graphic skills are close to",
    "start": "816639",
    "end": "824199"
  },
  {
    "text": "nonone so you got to have to deal with white interface but once I'm here I",
    "start": "824199",
    "end": "832880"
  },
  {
    "text": "can hopefully create a two so hi let's see if it works oh come on",
    "start": "832880",
    "end": "839360"
  },
  {
    "text": "so what what is happening here behind the scenes well these error is close to",
    "start": "839360",
    "end": "847639"
  },
  {
    "text": "useless for how I see things and that's the user experience",
    "start": "847639",
    "end": "854519"
  },
  {
    "text": "when something goes wrong and you're not using effect so what is going wrong is that",
    "start": "854519",
    "end": "862360"
  },
  {
    "text": "this is a normal typescript app as you see the effect is not even imported is",
    "start": "862360",
    "end": "869079"
  },
  {
    "text": "it uses s to do data serialization and it uses um SQ light to",
    "start": "869079",
    "end": "876120"
  },
  {
    "text": "persist data locally what the app does you've seen it",
    "start": "876120",
    "end": "881920"
  },
  {
    "text": "is a it's a simple index page and I'm I'm going to skip the details if",
    "start": "881920",
    "end": "889199"
  },
  {
    "text": "you if you don't know remix of of how it it works internally but remix",
    "start": "889199",
    "end": "895040"
  },
  {
    "text": "fundamentally has two um two things things that you export on a component",
    "start": "895040",
    "end": "901920"
  },
  {
    "text": "apart from the component itself those can be an action which is like if you",
    "start": "901920",
    "end": "907639"
  },
  {
    "text": "post on the on the page or there's a loader which gets called before",
    "start": "907639",
    "end": "914880"
  },
  {
    "text": "rendering of age it's very similar to nextjs and and other um other UI",
    "start": "914880",
    "end": "923880"
  },
  {
    "text": "Frameworks so we can drill down from here and",
    "start": "923880",
    "end": "929600"
  },
  {
    "text": "and it's really hard to understand what's what's going on",
    "start": "929600",
    "end": "935480"
  },
  {
    "text": "but I can show you where the error is because I've wrot the error so I kind of know",
    "start": "935480",
    "end": "941160"
  },
  {
    "text": "it inside this get to do get all to this",
    "start": "941160",
    "end": "946920"
  },
  {
    "text": "function it's randomly failing obviously I've made the random failure because it's pretty hard to",
    "start": "946920",
    "end": "953160"
  },
  {
    "text": "simulate a failure with a local database but in real life when you're using real databases that's happen it's",
    "start": "953160",
    "end": "961120"
  },
  {
    "text": "going to happen all the time so here we are throwing an",
    "start": "961120",
    "end": "966480"
  },
  {
    "text": "error and I found it because I know it's supposed to eror it's really really hard",
    "start": "966480",
    "end": "973199"
  },
  {
    "text": "to deug it from uh from purely looking at the at the code",
    "start": "973199",
    "end": "979040"
  },
  {
    "text": "base here we can follow what's going on in the code base um as we can see there's an action that",
    "start": "979040",
    "end": "987800"
  },
  {
    "text": "takes a request object it's deserialized using Zod as an input to to",
    "start": "987800",
    "end": "996720"
  },
  {
    "text": "get which action we are using that's a pattern common in in in remix and we're switching on which",
    "start": "996720",
    "end": "1004560"
  },
  {
    "text": "action to take based on that actually do something and the loader simply loads up",
    "start": "1004560",
    "end": "1011519"
  },
  {
    "text": "the the twoos so that's that's remix without uh",
    "start": "1011519",
    "end": "1018240"
  },
  {
    "text": "without without effect but let's say that we are not So",
    "start": "1018240",
    "end": "1024720"
  },
  {
    "text": "Satisfied with this kind of observability like we have to console",
    "start": "1024720",
    "end": "1029839"
  },
  {
    "text": "log now now I knew where the error was if you don't know usually you're you",
    "start": "1029839",
    "end": "1035360"
  },
  {
    "text": "resort to a number of console logs who has ever rote a console log to the B the",
    "start": "1035360",
    "end": "1041720"
  },
  {
    "text": "wagon error okay not alone see one of the beautiful",
    "start": "1041720",
    "end": "1049000"
  },
  {
    "text": "um I guess Innovations of the last recent time I I don't precisely know the",
    "start": "1049000",
    "end": "1054960"
  },
  {
    "text": "when the concept was first introduced it's called observability and now in today's terms",
    "start": "1054960",
    "end": "1062120"
  },
  {
    "text": "we call it open Telemetry and it's mainly composed of three things the",
    "start": "1062120",
    "end": "1067960"
  },
  {
    "text": "first one is the deer logging that we all do sometimes even iot with console L",
    "start": "1067960",
    "end": "1076679"
  },
  {
    "text": "sometimes the second one is metrics Al many people are familiar with metrics um",
    "start": "1076679",
    "end": "1083480"
  },
  {
    "text": "metrics you can think of them like for example counters in your application that you increase or decrease based on",
    "start": "1083480",
    "end": "1090799"
  },
  {
    "text": "traffic whatever you want to tune into and they're usually exported to either",
    "start": "1090799",
    "end": "1097120"
  },
  {
    "text": "promethus or um other systems you you probably are familiar more with with",
    "start": "1097120",
    "end": "1103520"
  },
  {
    "text": "promeets but um open Telemetry which is a new um library to handle Telemetry",
    "start": "1103520",
    "end": "1111400"
  },
  {
    "text": "includes metrics the third piece which is to me the most",
    "start": "1111400",
    "end": "1119200"
  },
  {
    "text": "refreshing is called tracing and with tracing what we aim to",
    "start": "1119200",
    "end": "1125520"
  },
  {
    "text": "is to decorate our program with metadata",
    "start": "1125520",
    "end": "1130760"
  },
  {
    "text": "with additional information that we can render on an interface and show exactly what's",
    "start": "1130760",
    "end": "1138799"
  },
  {
    "text": "happening and where if you think of a program at this end point this this app",
    "start": "1138799",
    "end": "1145480"
  },
  {
    "text": "in the moment I refresh there's a loader who's been hit the loader calls to",
    "start": "1145480",
    "end": "1151159"
  },
  {
    "text": "another function which may be called to a third function and so on and so forth we would really like to visualize the",
    "start": "1151159",
    "end": "1157080"
  },
  {
    "text": "whole three and that's totally possible and now we are going to see how to do it",
    "start": "1157080",
    "end": "1164240"
  },
  {
    "text": "without effect hopefully it's not going to be that",
    "start": "1164240",
    "end": "1170240"
  },
  {
    "text": "nice or at least I don't like",
    "start": "1172320",
    "end": "1176480"
  },
  {
    "text": "it so I have beautiful branches this this by the way is a project on my gab",
    "start": "1180000",
    "end": "1186039"
  },
  {
    "text": "profile so hit my kernal and you're going to find it I'll hold your mic this way a bit",
    "start": "1186039",
    "end": "1192880"
  },
  {
    "text": "faster oh in typing that's that's right",
    "start": "1192880",
    "end": "1198840"
  },
  {
    "text": "without effect and O so let's",
    "start": "1198840",
    "end": "1207360"
  },
  {
    "text": "see let's see why the thing became a bit better I'm not going to yet show the",
    "start": "1207440",
    "end": "1214280"
  },
  {
    "text": "code but I'm going to show the result of running",
    "start": "1214280",
    "end": "1222519"
  },
  {
    "text": "it okay it's fing intermitted now it's no longer filing amazing",
    "start": "1223080",
    "end": "1229799"
  },
  {
    "text": "okay we have a few failures and I have an account in",
    "start": "1229799",
    "end": "1235840"
  },
  {
    "text": "honeycomb honeycomb is a is",
    "start": "1235840",
    "end": "1241919"
  },
  {
    "text": "a service that allows you to push metric and",
    "start": "1241919",
    "end": "1247000"
  },
  {
    "text": "Telemetry to see it there's many other services there's open source ones",
    "start": "1247000",
    "end": "1252400"
  },
  {
    "text": "there's products such as beta dog and many more um I kind of like anom to do",
    "start": "1252400",
    "end": "1258480"
  },
  {
    "text": "the tests myself because it's extremely easy to use um here I see a few calls let's",
    "start": "1258480",
    "end": "1266960"
  },
  {
    "text": "explore one you see that's we've called the",
    "start": "1266960",
    "end": "1272520"
  },
  {
    "text": "index loader and we've called get TW index loer took half a millisecond and",
    "start": "1272520",
    "end": "1279320"
  },
  {
    "text": "get all two took 0.1 and there was no error here let's",
    "start": "1279320",
    "end": "1286480"
  },
  {
    "text": "check for something that had errors and see okay we have quite a few",
    "start": "1286480",
    "end": "1295520"
  },
  {
    "text": "let's say in the last 10 minutes okay we have eight traces with",
    "start": "1295520",
    "end": "1301039"
  },
  {
    "text": "errors let's analyze one of them I see",
    "start": "1301039",
    "end": "1306400"
  },
  {
    "text": "red which usually means something bad happened",
    "start": "1306400",
    "end": "1313600"
  },
  {
    "text": "and I can pretty much see okay there's there's a message error fetching to",
    "start": "1313600",
    "end": "1319919"
  },
  {
    "text": "do so this is kind of helpful to know where",
    "start": "1319919",
    "end": "1325200"
  },
  {
    "text": "the error originated but you might ask why are we seeing only two things cuz now I'm going",
    "start": "1325200",
    "end": "1332919"
  },
  {
    "text": "to show you how long does it take to add one of those so in",
    "start": "1332919",
    "end": "1339480"
  },
  {
    "text": "code what I have terminal add",
    "start": "1339480",
    "end": "1345559"
  },
  {
    "text": "it so you y code looks exactly the same nothing has",
    "start": "1346240",
    "end": "1351919"
  },
  {
    "text": "changed the loader code has changed the loader code first was one",
    "start": "1351919",
    "end": "1359120"
  },
  {
    "text": "line was just calling the other function now the loader has to talk to something",
    "start": "1359120",
    "end": "1366559"
  },
  {
    "text": "called a tracer which you got to know of you got to call start span to begin one",
    "start": "1366559",
    "end": "1374320"
  },
  {
    "text": "of those entries that we've seen in the in the UI so this is a",
    "start": "1374320",
    "end": "1380279"
  },
  {
    "text": "span and that code is what generates the first one the top one we see",
    "start": "1380279",
    "end": "1387799"
  },
  {
    "text": "here so this is the loader code then I try",
    "start": "1387799",
    "end": "1393000"
  },
  {
    "text": "catch I try to get the tus if I fail I check if if e so the",
    "start": "1393000",
    "end": "1401600"
  },
  {
    "text": "error is an instance of error I set the status code to error and I add a",
    "start": "1401600",
    "end": "1410799"
  },
  {
    "text": "message as a last thing I rraw and in any case either failure or",
    "start": "1410799",
    "end": "1418559"
  },
  {
    "text": "success I end the span and you see that I also pass the",
    "start": "1418559",
    "end": "1425799"
  },
  {
    "text": "span as an argument to this get all tus function that does the same thing",
    "start": "1425799",
    "end": "1434240"
  },
  {
    "text": "again wraps everything in a try catch starts a new",
    "start": "1434240",
    "end": "1439400"
  },
  {
    "text": "span but this time if the parent is present sets the",
    "start": "1439400",
    "end": "1446200"
  },
  {
    "text": "parent to a to to the specific span that was passed in and this is what allows",
    "start": "1446200",
    "end": "1453200"
  },
  {
    "text": "you to see this relationship this get old tudus is a child of the index",
    "start": "1453200",
    "end": "1460760"
  },
  {
    "text": "loader I ended up here because I don't like to write my hoding this way I don't",
    "start": "1461120",
    "end": "1467919"
  },
  {
    "text": "like to have all my functions wrapped in TR catches that have absolutely nothing to do with business",
    "start": "1467919",
    "end": "1473960"
  },
  {
    "text": "logic I don't like my Cod to talk about Telemetry in specific terms I would like",
    "start": "1473960",
    "end": "1482360"
  },
  {
    "text": "all of that to be worst case one line of code and hopefully I'm I'm going to show",
    "start": "1482360",
    "end": "1490000"
  },
  {
    "text": "you how to do this the same thing with effect and adding Telemetry and error handling which by",
    "start": "1490000",
    "end": "1496760"
  },
  {
    "text": "the way we're not doing here cuz if I were to add error handling I would have",
    "start": "1496760",
    "end": "1502080"
  },
  {
    "text": "to add further try catches and again I really I really really don't like",
    "start": "1502080",
    "end": "1509679"
  },
  {
    "text": "that because they they lead to indented code and they lead to very hard to maintain and and",
    "start": "1509679",
    "end": "1516880"
  },
  {
    "text": "read so while Mike is pulling up the other example anyone here already using open Telemetry for for your",
    "start": "1516880",
    "end": "1524600"
  },
  {
    "text": "app uh your instrument painstakingly yourself",
    "start": "1524600",
    "end": "1529679"
  },
  {
    "text": "okay uh cool anyone who uh wraps all their code",
    "start": "1530399",
    "end": "1536559"
  },
  {
    "text": "and try catches like very diligently all righty yeah my",
    "start": "1536559",
    "end": "1543919"
  },
  {
    "text": "cond so you're actually using Tri catches okay so first of all let's see",
    "start": "1544080",
    "end": "1549799"
  },
  {
    "text": "what this looks like if we're using effect compared to if we're not using",
    "start": "1549799",
    "end": "1556200"
  },
  {
    "text": "effect and then we're going to integrate the L on top first of all here UI code exactly",
    "start": "1556200",
    "end": "1564320"
  },
  {
    "text": "the same unchanged what has changed is now we",
    "start": "1564320",
    "end": "1570360"
  },
  {
    "text": "would like to define the loaders and the action using uh effect this case I'll",
    "start": "1570360",
    "end": "1578240"
  },
  {
    "text": "start from the loader which is the thing that we saw before in this case we are declaring",
    "start": "1578240",
    "end": "1586760"
  },
  {
    "text": "that this is an effect loader uh this comes from the remix integration you",
    "start": "1586760",
    "end": "1592080"
  },
  {
    "text": "find it in the in the repo and this function is what",
    "start": "1592080",
    "end": "1597840"
  },
  {
    "text": "configures the whole context of running the to run the effect this returns a",
    "start": "1597840",
    "end": "1603720"
  },
  {
    "text": "normal promise to the outside so for remix it's like effect doesn't",
    "start": "1603720",
    "end": "1609520"
  },
  {
    "text": "exist and here we are accessing the get to the get get all toos procedure from",
    "start": "1609520",
    "end": "1618159"
  },
  {
    "text": "um our Todo repository module which before was just a normal import now we",
    "start": "1618159",
    "end": "1624840"
  },
  {
    "text": "are using the effect context for this to be testable and more",
    "start": "1624840",
    "end": "1632960"
  },
  {
    "text": "modular we are accessing the get all to functions function we",
    "start": "1632960",
    "end": "1638679"
  },
  {
    "text": "are this yield star is like mentally MPP it to an await so this is like a syn",
    "start": "1638679",
    "end": "1645200"
  },
  {
    "text": "await a syn a weight a syn a weight we're calling the get to getting the result and differently from what we've",
    "start": "1645200",
    "end": "1653279"
  },
  {
    "text": "done before this time we can uh use schema to encode the twoos for the front",
    "start": "1653279",
    "end": "1662440"
  },
  {
    "text": "end CU schema it's um library from",
    "start": "1662440",
    "end": "1668000"
  },
  {
    "text": "effect to handle data modeling it's a lot inspired by Zod the one we were",
    "start": "1668000",
    "end": "1674080"
  },
  {
    "text": "using before as you see the syntax doesn't doesn't change too",
    "start": "1674080",
    "end": "1679120"
  },
  {
    "text": "much but what it allows is B directionality with schema you can both",
    "start": "1679120",
    "end": "1684320"
  },
  {
    "text": "encode data and decode data while with you can only decode the data so in this",
    "start": "1684320",
    "end": "1690360"
  },
  {
    "text": "case we're saying okay toos may have structured information such as for example data objects and stuff like that",
    "start": "1690360",
    "end": "1697240"
  },
  {
    "text": "we want to encode it for the front end usage and we see that U this loader",
    "start": "1697240",
    "end": "1703480"
  },
  {
    "text": "function precisely return a promise with a with an way of Simply",
    "start": "1703480",
    "end": "1710120"
  },
  {
    "text": "structure no crazy types we see created that used to be a date now it's a",
    "start": "1710120",
    "end": "1717159"
  },
  {
    "text": "string and this type safety is passed to the to the front end",
    "start": "1717159",
    "end": "1723080"
  },
  {
    "text": "code so this is how we would look to write an effect app in general with CN",
    "start": "1723080",
    "end": "1730559"
  },
  {
    "text": "action just we before remember the action we had to decode the payload of",
    "start": "1730559",
    "end": "1736200"
  },
  {
    "text": "the action from from the input of the request here we do it with",
    "start": "1736200",
    "end": "1742120"
  },
  {
    "text": "a with a function that we wrote on purpose to do that and here we have our beautifully decoded type we branch on",
    "start": "1742120",
    "end": "1749919"
  },
  {
    "text": "the actions and take the according um action based on based on the",
    "start": "1749919",
    "end": "1756279"
  },
  {
    "text": "input so this code while being a bit more verbose because we have to be sincere it",
    "start": "1756279",
    "end": "1763000"
  },
  {
    "text": "is a bit more verbose it looks almost one to one from the from the previous",
    "start": "1763000",
    "end": "1770440"
  },
  {
    "text": "one provided that you mentally map a sinka weight to generator plus yield",
    "start": "1770440",
    "end": "1779120"
  },
  {
    "text": "star so let's let's see now how I would first all let's check that this",
    "start": "1779399",
    "end": "1786600"
  },
  {
    "text": "works it does oh I have it same error as before she's",
    "start": "1795120",
    "end": "1803080"
  },
  {
    "text": "a bit more clean now has removed some of the mess from the",
    "start": "1803080",
    "end": "1809080"
  },
  {
    "text": "original stock Trace it's not yet perfect but it works pretty much the the",
    "start": "1809080",
    "end": "1815120"
  },
  {
    "text": "same way as it as it was working",
    "start": "1815120",
    "end": "1819279"
  },
  {
    "text": "before so let's see how would I go about in integrating Telemetry on top of on",
    "start": "1822760",
    "end": "1830399"
  },
  {
    "text": "top of this remember before we we added a span",
    "start": "1830399",
    "end": "1838200"
  },
  {
    "text": "to the loader called the span was called index loader okay if I had to do it using",
    "start": "1838200",
    "end": "1846320"
  },
  {
    "text": "effect what I would do is I would call effect",
    "start": "1846320",
    "end": "1852559"
  },
  {
    "text": "dot we span index",
    "start": "1852559",
    "end": "1858799"
  },
  {
    "text": "loader and that is it that's the thing you have",
    "start": "1858799",
    "end": "1864159"
  },
  {
    "text": "to add no TR catches no nested indentation well a bit of nested",
    "start": "1864159",
    "end": "1870880"
  },
  {
    "text": "indentation that we'll now see how to remove but it's as easy as writing um",
    "start": "1870880",
    "end": "1879080"
  },
  {
    "text": "function call if you don't like indentation you",
    "start": "1879080",
    "end": "1885200"
  },
  {
    "text": "can use the pipe method and pass the same function inside",
    "start": "1885200",
    "end": "1893760"
  },
  {
    "text": "the pipe this is very useful when you have to compose multiple actions now",
    "start": "1893760",
    "end": "1901600"
  },
  {
    "text": "pipe is simply means function application to the prior argument it's a common pattern",
    "start": "1901600",
    "end": "1909559"
  },
  {
    "text": "that was initially thought I guessing um either a",
    "start": "1909559",
    "end": "1914880"
  },
  {
    "text": "rocks or F pts first and now even uh even popular libraries such as Zod has a",
    "start": "1914880",
    "end": "1922120"
  },
  {
    "text": "has a pipe method and hopefully at some point in time JavaScript will get a pipe operator where we can cancel this uh",
    "start": "1922120",
    "end": "1930440"
  },
  {
    "text": "this additional pipe method but up until that point it's pretty decent to",
    "start": "1930440",
    "end": "1936039"
  },
  {
    "text": "use so let's skip a little bit a little bit",
    "start": "1936039",
    "end": "1941960"
  },
  {
    "text": "more ahead and I want to show you a version of the same app that um",
    "start": "1941960",
    "end": "1951919"
  },
  {
    "text": "uses tracing in",
    "start": "1951919",
    "end": "1956200"
  },
  {
    "text": "full we've added a few with spans around the",
    "start": "1958360",
    "end": "1963880"
  },
  {
    "text": "app for example this loader pretty much looks like the one before I think",
    "start": "1963880",
    "end": "1972039"
  },
  {
    "text": "I've OCD a little bit on how to write this portion I've changed it probably",
    "start": "1972039",
    "end": "1977639"
  },
  {
    "text": "510 times but doesn't doesn't really matter much we are fundamentally",
    "start": "1977639",
    "end": "1984039"
  },
  {
    "text": "wrapping any um operation with a span",
    "start": "1984039",
    "end": "1989080"
  },
  {
    "text": "just because we want to visualize everything and because adding one line of code it's way less intrusive than",
    "start": "1989080",
    "end": "1995600"
  },
  {
    "text": "adding a try catch plus everything",
    "start": "1995600",
    "end": "1999880"
  },
  {
    "text": "else let's see ins side of this note I've clicked",
    "start": "2001840",
    "end": "2009480"
  },
  {
    "text": "and took me to the implementation which was nice there's another element that I've spoken about before when mentioning",
    "start": "2009480",
    "end": "2016840"
  },
  {
    "text": "Telemetry those are Matrix effect has native integration with Matrix so you",
    "start": "2016840",
    "end": "2022679"
  },
  {
    "text": "can Define together with spans also the metrix now we're going to run the",
    "start": "2022679",
    "end": "2029399"
  },
  {
    "text": "application and see the application with tracing see what what we would visualize",
    "start": "2029399",
    "end": "2037080"
  },
  {
    "text": "in a normal",
    "start": "2037080",
    "end": "2039799"
  },
  {
    "text": "run okay still same error as before with",
    "start": "2055480",
    "end": "2060919"
  },
  {
    "text": "a little bit more context this time you see that we added two entries to the",
    "start": "2060919",
    "end": "2067000"
  },
  {
    "text": "error description to the error stack those are the spans that we declared on code so now we can just by looking at",
    "start": "2067000",
    "end": "2075480"
  },
  {
    "text": "the code easily know that okay this comes from an index loer this comes from",
    "start": "2075480",
    "end": "2080960"
  },
  {
    "text": "the get old toos and hopefully if the trace is right if the stock Trace is",
    "start": "2080960",
    "end": "2087679"
  },
  {
    "text": "right you're going to get a pointer to the exact location where the error first",
    "start": "2087679",
    "end": "2093079"
  },
  {
    "text": "occurred of course uh can also go well",
    "start": "2093079",
    "end": "2098879"
  },
  {
    "text": "and if it goes well there's no error but this time I want to check again",
    "start": "2099160",
    "end": "2107839"
  },
  {
    "text": "um the span I'm going to do the same as I did before going to search",
    "start": "2107839",
    "end": "2114640"
  },
  {
    "text": "by name this case no first I I did I did a search by error",
    "start": "2114640",
    "end": "2122200"
  },
  {
    "text": "sorry so let's search something that has errored",
    "start": "2122200",
    "end": "2128280"
  },
  {
    "text": "St the L",
    "start": "2128280",
    "end": "2133880"
  },
  {
    "text": "and okay here we see few more things than we saw before CU it was easy to",
    "start": "2134119",
    "end": "2140960"
  },
  {
    "text": "instrument so in my very lazy two days of working on this demo",
    "start": "2140960",
    "end": "2147800"
  },
  {
    "text": "I've managed to trace the full application instead of just half a",
    "start": "2147800",
    "end": "2153200"
  },
  {
    "text": "function we can should the error from here and it has a bit more context than",
    "start": "2154680",
    "end": "2160520"
  },
  {
    "text": "before so the status message gives you exactly the error that was um that was",
    "start": "2160520",
    "end": "2168920"
  },
  {
    "text": "raised so let's now do something about that annoying error cuz I I don't think",
    "start": "2168920",
    "end": "2175160"
  },
  {
    "text": "you like your apps to be unreliable do you you like to see errors no good",
    "start": "2175160",
    "end": "2182359"
  },
  {
    "text": "neither neither I I hate when page is cra in this",
    "start": "2182359",
    "end": "2189359"
  },
  {
    "text": "way so we add error management what have we",
    "start": "2194319",
    "end": "2202400"
  },
  {
    "text": "added well to the imputing place where the",
    "start": "2202400",
    "end": "2209920"
  },
  {
    "text": "error was rows we've added two lines of Goode not one two",
    "start": "2209920",
    "end": "2217720"
  },
  {
    "text": "why because we wanted also to add another span so adding a retry is as",
    "start": "2217720",
    "end": "2224119"
  },
  {
    "text": "simple as add one line of code so we wrap the procedure that's",
    "start": "2224119",
    "end": "2230200"
  },
  {
    "text": "supposed to fail well that's not supposed to fail but that we know will fail at some point in",
    "start": "2230200",
    "end": "2237240"
  },
  {
    "text": "time we rra it with effect on r f and we give it a rri",
    "start": "2237240",
    "end": "2243000"
  },
  {
    "text": "policy in this case the rri policy is going to be an",
    "start": "2243000",
    "end": "2248240"
  },
  {
    "text": "exponential back of curve composed together with a timeout so this will",
    "start": "2248240",
    "end": "2254079"
  },
  {
    "text": "keep retrying according to an exponential back of curve up until the point we've reached 3 seconds and I",
    "start": "2254079",
    "end": "2260760"
  },
  {
    "text": "could add further complexity in here you don't have to go as complex you can say",
    "start": "2260760",
    "end": "2267000"
  },
  {
    "text": "schedule dot retry up to recur up",
    "start": "2267000",
    "end": "2273280"
  },
  {
    "text": "to and there there's a full module of functions that you can use at your own",
    "start": "2273280",
    "end": "2282440"
  },
  {
    "text": "at your own discretion for API end points usually exponential back off is",
    "start": "2282440",
    "end": "2287480"
  },
  {
    "text": "is what you want to avoid um abusing the",
    "start": "2287480",
    "end": "2292839"
  },
  {
    "text": "faulty API end point if it keeps failing so you should retry as fast as possible at the beginning but only slow down if",
    "start": "2292839",
    "end": "2301560"
  },
  {
    "text": "the errors keep happening cuz it's fairly common to fail one HTTP request",
    "start": "2301560",
    "end": "2307079"
  },
  {
    "text": "it's fairly uncommon to fail 10 consecutive HTTP requests when the",
    "start": "2307079",
    "end": "2312480"
  },
  {
    "text": "backend is just fine when the back is degraded very possible and you should",
    "start": "2312480",
    "end": "2317800"
  },
  {
    "text": "not keep hitting the backend otherwise it'll degrade further but that's the",
    "start": "2317800",
    "end": "2323839"
  },
  {
    "text": "only thing we had to add let's check our application",
    "start": "2323839",
    "end": "2331800"
  },
  {
    "text": "now if this keeps hopping now now going to keep",
    "start": "2332119",
    "end": "2339400"
  },
  {
    "text": "refreshing and the UI is good so hi might just be random not",
    "start": "2339400",
    "end": "2348240"
  },
  {
    "text": "random hi s Francisco hi everything works",
    "start": "2348240",
    "end": "2353960"
  },
  {
    "text": "yes let's see let's see from the traces let's see from the traces wow we",
    "start": "2353960",
    "end": "2360760"
  },
  {
    "text": "have a trace with 21 spans it means things really really",
    "start": "2360760",
    "end": "2368319"
  },
  {
    "text": "failed almost almost almost just go in time actually I think this H still 0.3",
    "start": "2368319",
    "end": "2377119"
  },
  {
    "text": "seconds so not quite hitting the the time out but we can already see the",
    "start": "2377119",
    "end": "2384400"
  },
  {
    "text": "beginning of this retry curve that's the nice exponential now I'm going to do",
    "start": "2384400",
    "end": "2390880"
  },
  {
    "text": "something live hopefully I don't crash everything or hopefully I do",
    "start": "2390880",
    "end": "2397560"
  },
  {
    "text": "I'm going to increase the error rate like crazy say math. random is greater than",
    "start": "2397560",
    "end": "2406480"
  },
  {
    "text": "0.1 I don't know why I keep closing the terminal this UT reloads it's just me",
    "start": "2406480",
    "end": "2413520"
  },
  {
    "text": "being used to do this manually for half of my life but be is great and you don't",
    "start": "2413520",
    "end": "2418920"
  },
  {
    "text": "have to do that any of that manually let's check this interface",
    "start": "2418920",
    "end": "2425359"
  },
  {
    "text": "again taking a bit long",
    "start": "2425359",
    "end": "2434400"
  },
  {
    "text": "oh hey sometimes it's fast sometimes takes a bit longer come on come on come",
    "start": "2434680",
    "end": "2440680"
  },
  {
    "text": "back",
    "start": "2440680",
    "end": "2443680"
  },
  {
    "text": "no should up it's too too random but it's still going to make the point I'm",
    "start": "2445880",
    "end": "2451200"
  },
  {
    "text": "going to show um just last race",
    "start": "2451200",
    "end": "2458319"
  },
  {
    "text": "get that pH 12 times and here you have your",
    "start": "2468240",
    "end": "2475440"
  },
  {
    "text": "beautiful exponential back of curve that doesn't kill your beon while",
    "start": "2475440",
    "end": "2481760"
  },
  {
    "text": "making your up way more reliable so hopefully",
    "start": "2481760",
    "end": "2488040"
  },
  {
    "text": "that was the the demo Cod thank you Johannes for having",
    "start": "2488040",
    "end": "2493480"
  },
  {
    "text": "provided an arm and that's a effect now I'm going to",
    "start": "2493480",
    "end": "2498760"
  },
  {
    "text": "leave the microphone to Johannes which is most likely going to show you a",
    "start": "2498760",
    "end": "2505079"
  },
  {
    "text": "slightly more complex version of a of an application thank you",
    "start": "2505079",
    "end": "2510470"
  },
  {
    "text": "[Applause] everybody",
    "start": "2510470",
    "end": "2518240"
  }
]