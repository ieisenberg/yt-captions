[
  {
    "text": "Okay, so what are we going to do today? So today we are gonna perform some",
    "start": "4433",
    "end": "12166"
  },
  {
    "text": "cleanup over the codebase. We did some work last time,",
    "start": "12166",
    "end": "20900"
  },
  {
    "text": "we made our examples work.",
    "start": "20900",
    "end": "24099"
  },
  {
    "text": "And right now the thing is that our example works, but the",
    "start": "26333",
    "end": "31583"
  },
  {
    "text": "code is pretty awful. Because as you can see in here, let's go",
    "start": "31583",
    "end": "39233"
  },
  {
    "text": "for example into the sample manager. Yeah, you can see that we have all of",
    "start": "39233",
    "end": "44500"
  },
  {
    "text": "these things that are not so great.",
    "start": "44500",
    "end": "48016"
  },
  {
    "text": "And even in the connect side we have some inline provides and",
    "start": "49666",
    "end": "55816"
  },
  {
    "text": "maybe we want to clean those up. And so today we will work towards",
    "start": "55816",
    "end": "61666"
  },
  {
    "text": "cleaning up some code. And let's see, where can we start?",
    "start": "61666",
    "end": "68400"
  },
  {
    "text": "Maybe let's have a look at the list of issues that were opened on the effect-ts/cluster.",
    "start": "70866",
    "end": "77833"
  },
  {
    "text": "Effect-ts/cluster repositories. Okay, so here we have the",
    "start": "80116",
    "end": "85283"
  },
  {
    "text": "list of issues we need to tackle. And let's see what we can tackle.",
    "start": "85283",
    "end": "90966"
  },
  {
    "text": "We have, consider renaming user",
    "start": "93016",
    "end": "98333"
  },
  {
    "text": "prototype, refactor, fixed tag values.",
    "start": "98333",
    "end": "101133"
  },
  {
    "text": "This is the one that we are all working on. And maybe what we can tackle is, for example, this one.",
    "start": "104216",
    "end": "113066"
  },
  {
    "text": "Maybe this \"fix tag values.\" We can start by looking at all the tag",
    "start": "113366",
    "end": "119166"
  },
  {
    "text": "values and see if they are correctly written and exposed.",
    "start": "119166",
    "end": "124565"
  },
  {
    "text": "Okay, so let's start by looking at our tag.",
    "start": "125849",
    "end": "133966"
  },
  {
    "text": "And see whenever we use this.",
    "start": "134849",
    "end": "139283"
  },
  {
    "text": "And okay. So all of those declarations are fine",
    "start": "140083",
    "end": "148983"
  },
  {
    "text": "because they are just re-exports. Re-export, re-export, that's fine.",
    "start": "148983",
    "end": "155316"
  },
  {
    "text": "And then we have another one, another one.",
    "start": "156616",
    "end": "161366"
  },
  {
    "text": "Generic tag, at least once. Symbol key. Okay, this one is already okay.",
    "start": "162933",
    "end": "169116"
  },
  {
    "text": "We need to make all of those work exactly like this one.",
    "start": "169666",
    "end": "173515"
  },
  {
    "text": "And that's fine. Symbol key. Okay, this one instead is wrong.",
    "start": "175733",
    "end": "182116"
  },
  {
    "text": "Because instead of this, we want now to use pod's symbol key.",
    "start": "183916",
    "end": "190550"
  },
  {
    "text": "And save. And pod else symbol key.",
    "start": "193949",
    "end": "201316"
  },
  {
    "text": "That's perfect. This one uses the symbol.",
    "start": "201316",
    "end": "206265"
  },
  {
    "text": "Symbol. Generic tag.",
    "start": "207550",
    "end": "213183"
  },
  {
    "text": "Oh, this one isn't. So this one should use",
    "start": "213916",
    "end": "222416"
  },
  {
    "text": "instead something like sharding.",
    "start": "222416",
    "end": "225933"
  },
  {
    "text": "Sharding. dot",
    "start": "227883",
    "end": "229750"
  },
  {
    "text": "Do we have a symbol key? No. So we can create one.",
    "start": "233033",
    "end": "240416"
  },
  {
    "text": "Something like this. I'm going to sharding.",
    "start": "241816",
    "end": "247349"
  },
  {
    "text": "Sharding. And this is sharding symbol key.",
    "start": "251783",
    "end": "256116"
  },
  {
    "text": "And sharding symbol key.",
    "start": "259383",
    "end": "265616"
  },
  {
    "text": "As sharding.sharding",
    "start": "268716",
    "end": "277766"
  },
  {
    "text": "sharding type ID.",
    "start": "277766",
    "end": "285516"
  },
  {
    "text": "And this is sharding type ID.",
    "start": "286949",
    "end": "292349"
  },
  {
    "text": "And we export this one as sharding type ID.",
    "start": "295016",
    "end": "299516"
  },
  {
    "text": "And here we use instead sharding symbol key.",
    "start": "301633",
    "end": "307050"
  },
  {
    "text": "Okay, now we need to update the sharding type in here, in this module, in here.",
    "start": "308016",
    "end": "314616"
  },
  {
    "text": "Okay, we need now to export. In the same way we do in pods here.",
    "start": "315816",
    "end": "322483"
  },
  {
    "text": "Type ID. We need to export.",
    "start": "323849",
    "end": "327050"
  },
  {
    "text": "Sharding type ID. Internal.shardingTypeId.",
    "start": "331750",
    "end": "338266"
  },
  {
    "text": "Sharding type ID. This is just a re-export. And maybe while we are at it, we can do",
    "start": "339866",
    "end": "348683"
  },
  {
    "text": "something like say... readonly Sharding type ID.",
    "start": "348683",
    "end": "357916"
  },
  {
    "text": "Should have the value of sharding type ID.",
    "start": "358583",
    "end": "363432"
  },
  {
    "text": "Right.",
    "start": "369383",
    "end": "369583"
  },
  {
    "text": "Oh right, here we exported the value. But we need also to export the type as well.",
    "start": "374883",
    "end": "380833"
  },
  {
    "text": "So here's the value. And here we have the type which goes sharding type ID.",
    "start": "382349",
    "end": "389033"
  },
  {
    "text": "Sharding type ID. Okay, now we are fine. And we want this to be exported.",
    "start": "389433",
    "end": "395416"
  },
  {
    "text": "So that's fine. Maybe we should move this one in here. Move the internal ones just at the end.",
    "start": "395833",
    "end": "402733"
  },
  {
    "text": "In here, yeah. So you will know that these methods are internal and they should not be exported.",
    "start": "405050",
    "end": "411716"
  },
  {
    "text": "And here, okay. Okay. And we should be fine with that.",
    "start": "414866",
    "end": "421416"
  },
  {
    "text": "So going back to our research. Now this is fixed.",
    "start": "423716",
    "end": "427733"
  },
  {
    "text": "This one is already fixed. This one is not fixed.",
    "start": "429566",
    "end": "434883"
  },
  {
    "text": "But luckily for us. Shard manager symbol key.",
    "start": "436066",
    "end": "443150"
  },
  {
    "text": "You can easily fix one. So as you can see, this is",
    "start": "443583",
    "end": "449849"
  },
  {
    "text": "just some boring bookkeeping. But you know, not every",
    "start": "449849",
    "end": "456050"
  },
  {
    "text": "day can be a happy day. Sometimes you have things to do.",
    "start": "456050",
    "end": "461732"
  },
  {
    "text": "And this is sample service. This is an example test. So I am fine with that.",
    "start": "462516",
    "end": "467083"
  },
  {
    "text": "And this activity context. Okay. This one needs to be changed as well.",
    "start": "468066",
    "end": "473166"
  },
  {
    "text": "So we can do something like export const",
    "start": "474150",
    "end": "480150"
  },
  {
    "text": "or maybe not exported. Just declared const ActivityContextSymbolKey",
    "start": "480150",
    "end": "492466"
  },
  {
    "text": "equals \"@effect/cluster-workflow/ActivityContext",
    "start": "492733",
    "end": "502716"
  },
  {
    "text": "and this should be marked as @internal",
    "start": "503333",
    "end": "511033"
  },
  {
    "text": "and then we also have",
    "start": "514699",
    "end": "519149"
  },
  {
    "text": "Since version zero, the category is",
    "start": "521000",
    "end": "526449"
  },
  {
    "text": "models or maybe symbols.",
    "start": "526449",
    "end": "530250"
  },
  {
    "text": "And we will also export type activity context type ID.",
    "start": "533583",
    "end": "540616"
  },
  {
    "text": "So the users can use that without caring of an actual",
    "start": "544233",
    "end": "549716"
  },
  {
    "text": "value, which will be activity this one.",
    "start": "549716",
    "end": "554883"
  },
  {
    "text": "Export const. And this is the actual value for the simple.",
    "start": "556183",
    "end": "561966"
  },
  {
    "text": "And we will also export the type level.",
    "start": "564449",
    "end": "568633"
  },
  {
    "text": "And that will be type of activity context type ID.",
    "start": "572183",
    "end": "578032"
  },
  {
    "text": "Okay. Perfect. This one, maybe we can say unique symbol.",
    "start": "580233",
    "end": "586933"
  },
  {
    "text": "Perfect. Okay. This one then can be replaced with",
    "start": "589783",
    "end": "598733"
  },
  {
    "text": "activity context symbol key.",
    "start": "598733",
    "end": "602683"
  },
  {
    "text": "Okay. And I think that we have also this one,",
    "start": "604350",
    "end": "612433"
  },
  {
    "text": "which should have the same treatment as the one we already did.",
    "start": "613283",
    "end": "618033"
  },
  {
    "text": "So maybe we can just copy and paste some code in here and do",
    "start": "618733",
    "end": "625449"
  },
  {
    "text": "some bookkeeping and say this is not activity context.",
    "start": "625449",
    "end": "630683"
  },
  {
    "text": "This is a durable execution journal.",
    "start": "631166",
    "end": "636883"
  },
  {
    "text": "So in here, this is the symbol key.",
    "start": "638816",
    "end": "643133"
  },
  {
    "text": "And we use that to create the type ID.",
    "start": "645350",
    "end": "650383"
  },
  {
    "text": "And that's the type ID. And then we export the type ID also as a type.",
    "start": "651816",
    "end": "659216"
  },
  {
    "text": "That's perfect. And okay.",
    "start": "660750",
    "end": "666649"
  },
  {
    "text": "Let's save. Everything is fine and happy.",
    "start": "666933",
    "end": "671350"
  },
  {
    "text": "And now we have to do, oh, we need to fix here with durable",
    "start": "672483",
    "end": "680183"
  },
  {
    "text": "execution journal symbol key.",
    "start": "680183",
    "end": "682983"
  },
  {
    "text": "Okay. And last but not least, we need to do the",
    "start": "686016",
    "end": "692949"
  },
  {
    "text": "same thing with workflow context. So maybe I can go a bit from activity",
    "start": "692949",
    "end": "698583"
  },
  {
    "text": "context, which is more similar. Then we go into workflow context and say workflow context.",
    "start": "698583",
    "end": "710666"
  },
  {
    "text": "Say workflow context symbol key, workflow context type ID, which comes up workflow context symbol",
    "start": "715149",
    "end": "722383"
  },
  {
    "text": "key, workflow context type ID, workflow context type ID. Okay.",
    "start": "722433",
    "end": "727216"
  },
  {
    "text": "So ideally we should have fixed all of our tags. So we can go back and say closure issue.",
    "start": "728416",
    "end": "737833"
  },
  {
    "text": "Perfect. And here say fix tags values.",
    "start": "738916",
    "end": "745149"
  },
  {
    "text": "Yes. Next one.",
    "start": "748500",
    "end": "752750"
  },
  {
    "text": "What's on the list? Do not recreate test",
    "start": "755183",
    "end": "760733"
  },
  {
    "text": "container for each test. This is one I would like to tackle.",
    "start": "760733",
    "end": "767433"
  },
  {
    "text": "And also we have \"make serialized envelope a message itself.\"",
    "start": "770716",
    "end": "776833"
  },
  {
    "text": "Yeah. This is more difficult. So let's say we start with something very",
    "start": "777266",
    "end": "785433"
  },
  {
    "text": "simple instead and say, okay, we want to make",
    "start": "785433",
    "end": "791633"
  },
  {
    "text": "the tests. In here, if we look at the test, we see",
    "start": "791633",
    "end": "798083"
  },
  {
    "text": "that in the cluster-pg package, all of those tests",
    "start": "798083",
    "end": "804383"
  },
  {
    "text": "uses, if I remember correctly, yeah, test container Postgres layer.",
    "start": "804383",
    "end": "810566"
  },
  {
    "text": "And this layer is created and then shut down for each test.",
    "start": "810983",
    "end": "817750"
  },
  {
    "text": "And what we would like to do instead is do something like",
    "start": "818750",
    "end": "823782"
  },
  {
    "text": "create one before the test starts. And then after all the tests have",
    "start": "823783",
    "end": "832583"
  },
  {
    "text": "completed, then we want to shut down.",
    "start": "832583",
    "end": "836833"
  },
  {
    "text": "So we could say something like before",
    "start": "839316",
    "end": "844766"
  },
  {
    "text": "all, if I remember correctly. So describe.",
    "start": "844766",
    "end": "849750"
  },
  {
    "text": "it",
    "start": "851933",
    "end": "854933"
  },
  {
    "text": "I don't remember every time.",
    "start": "858116",
    "end": "861466"
  },
  {
    "text": "Vitest before all?",
    "start": "863383",
    "end": "865816"
  },
  {
    "text": "I don't remember. Let's see. Test the reference.",
    "start": "868616",
    "end": "873050"
  },
  {
    "text": "Test. Okay. And I want to say",
    "start": "874316",
    "end": "880949"
  },
  {
    "text": "something like before, before all. Okay.",
    "start": "880949",
    "end": "886066"
  },
  {
    "text": "Okay. This is, this is the code to be called once before starting",
    "start": "887983",
    "end": "894033"
  },
  {
    "text": "order and the correct context. The function is as a promise, it waits until the promise is resolved before running test.",
    "start": "894033",
    "end": "900016"
  },
  {
    "text": "Optionally, you can provide that amount for specifying how long to wait before terminating.",
    "start": "900433",
    "end": "905149"
  },
  {
    "text": "Okay. The thing is that how can I pass",
    "start": "905750",
    "end": "911433"
  },
  {
    "text": "something that I create in my before all?",
    "start": "911433",
    "end": "915915"
  },
  {
    "text": "Clean up function called the test run. How can I pass something, some resource to every test?",
    "start": "917350",
    "end": "927333"
  },
  {
    "text": "Let's say. Vitest beforeAll pass value to test.",
    "start": "928816",
    "end": "939533"
  },
  {
    "text": "Maybe before all test containers.",
    "start": "939983",
    "end": "945066"
  },
  {
    "text": "How to use before? Okay.",
    "start": "949833",
    "end": "951916"
  },
  {
    "text": "This is not something related to Vitest. So Vitest before all test containers and",
    "start": "955266",
    "end": "963532"
  },
  {
    "text": "say test container, test environment, re-attain testing, no, no, no.",
    "start": "963533",
    "end": "971449"
  },
  {
    "text": "No. Vitest before all the source context.",
    "start": "971449",
    "end": "978250"
  },
  {
    "text": "Test context.",
    "start": "982366",
    "end": "983033"
  },
  {
    "text": "Oh, maybe we can do something very silly that could work.",
    "start": "988100",
    "end": "993816"
  },
  {
    "text": "It could say before all.",
    "start": "994616",
    "end": "997866"
  },
  {
    "text": "Okay. And then say in here something like.",
    "start": "1000449",
    "end": "1008532"
  },
  {
    "text": "I'm in the wrong file. I'm in the correct file.",
    "start": "1012683",
    "end": "1017766"
  },
  {
    "text": "I should have in here. Pass with test container.",
    "start": "1018516",
    "end": "1025016"
  },
  {
    "text": "Here it is. Okay. So I can say something like before all.",
    "start": "1026316",
    "end": "1033366"
  },
  {
    "text": "Okay. And say async.",
    "start": "1034816",
    "end": "1040216"
  },
  {
    "text": "We want them to wait and we create a new container.",
    "start": "1041633",
    "end": "1047649"
  },
  {
    "text": "Well this is the premise. Okay. We want to start the",
    "start": "1058283",
    "end": "1065915"
  },
  {
    "text": "PostgresSQL container. Okay. We want to await the container.",
    "start": "1065916",
    "end": "1070133"
  },
  {
    "text": "Okay. So this is now the container. Okay. And then we want to return async.",
    "start": "1075600",
    "end": "1080583"
  },
  {
    "text": "Something that is like a container.stop.",
    "start": "1081516",
    "end": "1089449"
  },
  {
    "text": "And this should ideally before every test start a container and stop it.",
    "start": "1090666",
    "end": "1096433"
  },
  {
    "text": "Okay. And then we want to have something like",
    "start": "1096733",
    "end": "1101833"
  },
  {
    "text": "let connection URI of type string.",
    "start": "1101833",
    "end": "1111083"
  },
  {
    "text": "We want that to be that. And after we started that we say",
    "start": "1112000",
    "end": "1118283"
  },
  {
    "text": "connection URI equals container.get connection URI.",
    "start": "1118283",
    "end": "1126783"
  },
  {
    "text": "Perfect. And then we say that in each test what we",
    "start": "1127516",
    "end": "1137666"
  },
  {
    "text": "do instead of using these test containers,",
    "start": "1137666",
    "end": "1141283"
  },
  {
    "text": "we get this, which is the actual connection string to our database.",
    "start": "1143216",
    "end": "1148733"
  },
  {
    "text": "And actually is not a sign, but never used.",
    "start": "1150083",
    "end": "1155633"
  },
  {
    "text": "Yeah, correctly. We will now say. layer.",
    "start": "1155949",
    "end": "1161933"
  },
  {
    "text": "provide",
    "start": "1171983",
    "end": "1177266"
  },
  {
    "text": "pgclient.",
    "start": "1178233",
    "end": "1184350"
  },
  {
    "text": "I don't remember how it was called My memory is getting",
    "start": "1184350",
    "end": "1190966"
  },
  {
    "text": "pg.client.pgclient, okay, so layer.provide pg.client.layer",
    "start": "1192783",
    "end": "1203933"
  },
  {
    "text": "Now we can use layer and say URL and the URL is",
    "start": "1204666",
    "end": "1210850"
  },
  {
    "text": "the connection URI, right?",
    "start": "1214149",
    "end": "1216449"
  },
  {
    "text": "But secret From string because we have to create a",
    "start": "1219933",
    "end": "1228750"
  },
  {
    "text": "secret from a string Okay, and the only thing is that",
    "start": "1228750",
    "end": "1238233"
  },
  {
    "text": "I'm not happy because The thing is that we set the connection string",
    "start": "1241866",
    "end": "1248616"
  },
  {
    "text": "asynchronously But this value is constructed synchronously",
    "start": "1249316",
    "end": "1253683"
  },
  {
    "text": "so He won't be happy about this. So we need to make this lazy",
    "start": "1254833",
    "end": "1259783"
  },
  {
    "text": "and We in order to make this",
    "start": "1262333",
    "end": "1266966"
  },
  {
    "text": "In order to make this lazy what we can do is",
    "start": "1268183",
    "end": "1272250"
  },
  {
    "text": "use instead make and say layer.provide",
    "start": "1273266",
    "end": "1278633"
  },
  {
    "text": "layer.scoped",
    "start": "1279233",
    "end": "1281116"
  },
  {
    "text": "Exactly as we did here we pass in the tag which is",
    "start": "1284850",
    "end": "1289766"
  },
  {
    "text": "as pgclient.pgclient.pgclient here",
    "start": "1290266",
    "end": "1295066"
  },
  {
    "text": "And We pass in the effect which is this one",
    "start": "1297383",
    "end": "1302133"
  },
  {
    "text": "Okay, and now we can use This here and here provide perfect",
    "start": "1302716",
    "end": "1312165"
  },
  {
    "text": "And now in order to make this lazy what we can do is",
    "start": "1313433",
    "end": "1318283"
  },
  {
    "text": "Use something like effect.suspend",
    "start": "1319316",
    "end": "1325433"
  },
  {
    "text": "Not And effect.suspend is a quite useful effect operators",
    "start": "1325683",
    "end": "1332933"
  },
  {
    "text": "that Since effect is lazy itself. So",
    "start": "1333583",
    "end": "1338866"
  },
  {
    "text": "Effect is a computation that can be tried many times as you want Effect.lazy you can provide in some lazy",
    "start": "1339516",
    "end": "1346716"
  },
  {
    "text": "function and will create an effect of an effect and",
    "start": "1346716",
    "end": "1352483"
  },
  {
    "text": "This allows you to have something like Resolving a variable in my example in a lazy way",
    "start": "1352666",
    "end": "1358616"
  },
  {
    "text": "So it will be called in the moment that this effect is evaluated if I don't put the",
    "start": "1358666",
    "end": "1366016"
  },
  {
    "text": "Effect.suspend in here the problem in here will be that we will resolve the",
    "start": "1366550",
    "end": "1373083"
  },
  {
    "text": "value of connection string too much early and it's not what we want",
    "start": "1373083",
    "end": "1378833"
  },
  {
    "text": "Okay, so let's try to see if that",
    "start": "1379583",
    "end": "1385166"
  },
  {
    "text": "now fixes everything this is not",
    "start": "1386033",
    "end": "1391233"
  },
  {
    "text": "Needed anymore. I See that we have some errors. Let's see and problem is that",
    "start": "1391666",
    "end": "1398233"
  },
  {
    "text": "Effect requires a PG client But we should have provided that Oh wrong",
    "start": "1399066",
    "end": "1407516"
  },
  {
    "text": "position we need to provide that here",
    "start": "1407516",
    "end": "1410550"
  },
  {
    "text": "Yes, now we are fine, okay, so right now",
    "start": "1427566",
    "end": "1432233"
  },
  {
    "text": "We should be fine, I think Let's see, let's try to do something like",
    "start": "1434949",
    "end": "1444833"
  },
  {
    "text": "PNPM Build check first See if the sources are okay",
    "start": "1446750",
    "end": "1454949"
  },
  {
    "text": "Let it compile and we have some problems. Perfect Okay, so we have internal sharding oh",
    "start": "1455433",
    "end": "1465250"
  },
  {
    "text": "it's saying that right We updated sharding in here",
    "start": "1465250",
    "end": "1472898"
  },
  {
    "text": "But now The value we have in here is not assignable to sharding",
    "start": "1474550",
    "end": "1480449"
  },
  {
    "text": "because we need also to provide",
    "start": "1480449",
    "end": "1483600"
  },
  {
    "text": "Sharding type ID",
    "start": "1492850",
    "end": "1494350"
  },
  {
    "text": "And the value Sharding type ID and these fixes and",
    "start": "1499833",
    "end": "1506300"
  },
  {
    "text": "let's see if now it compiles Okay, it type checks so",
    "start": "1506300",
    "end": "1513899"
  },
  {
    "text": "now we can try to build Okay, it seems that that seems to build",
    "start": "1513899",
    "end": "1521600"
  },
  {
    "text": "perfect and pnpm run test",
    "start": "1521600",
    "end": "1524949"
  },
  {
    "text": "Let's see if the tests are succeeding anything that I forgot to attach yeah",
    "start": "1527066",
    "end": "1533366"
  },
  {
    "text": "It is Okay, so something is wrong",
    "start": "1534466",
    "end": "1539016"
  },
  {
    "text": "I could not find all we need to start docker docker",
    "start": "1539866",
    "end": "1546449"
  },
  {
    "text": "Okay now docker is started let's try again",
    "start": "1551000",
    "end": "1556449"
  },
  {
    "text": "Okay So the one we have changed is",
    "start": "1563916",
    "end": "1568733"
  },
  {
    "text": "Should not mark as process is at least once postgres. Okay. Is that one the one that",
    "start": "1569949",
    "end": "1575416"
  },
  {
    "text": "we have changed? Yes So what's the problem with those tests?",
    "start": "1575416",
    "end": "1580050"
  },
  {
    "text": "Duplicate Duplicate key value value. Okay, this is expected because we have now updated to",
    "start": "1581949",
    "end": "1589799"
  },
  {
    "text": "use only a single postgres instance for all the tests But the thing is that now we need each",
    "start": "1589800",
    "end": "1599949"
  },
  {
    "text": "test to use a different table name In here we need to each test",
    "start": "1599949",
    "end": "1607550"
  },
  {
    "text": "is using the same table name So we need to change this durable execution",
    "start": "1607550",
    "end": "1612916"
  },
  {
    "text": "journal postgres in order to accept in Here the table name",
    "start": "1613866",
    "end": "1619500"
  },
  {
    "text": "So What we can do is do something like change this to make",
    "start": "1621416",
    "end": "1627466"
  },
  {
    "text": "and say something like We have some options we can pass in.",
    "start": "1628116",
    "end": "1635600"
  },
  {
    "text": "So for example the table name which is a type string",
    "start": "1635600",
    "end": "1640533"
  },
  {
    "text": "Okay, and then we need to change these with table name",
    "start": "1642199",
    "end": "1647933"
  },
  {
    "text": "We Will create the primary key by pending to",
    "start": "1648316",
    "end": "1654815"
  },
  {
    "text": "the table table name The primary key and",
    "start": "1654816",
    "end": "1660066"
  },
  {
    "text": "Perfect and now also both the append",
    "start": "1661550",
    "end": "1665750"
  },
  {
    "text": "Method should accept table name inserting to table name",
    "start": "1667833",
    "end": "1673750"
  },
  {
    "text": "Now select from table name",
    "start": "1677350",
    "end": "1681199"
  },
  {
    "text": "And we need also to accept as a parameter the table name of type string",
    "start": "1685266",
    "end": "1690898"
  },
  {
    "text": "Okay, and in here what execution be okay, so right now it should",
    "start": "1692800",
    "end": "1699750"
  },
  {
    "text": "Accept table name as a parameter table name",
    "start": "1703516",
    "end": "1707733"
  },
  {
    "text": "Okay Okay Perfect now. This is not the actual",
    "start": "1709000",
    "end": "1716100"
  },
  {
    "text": "service, but this is now a function make and now this accepts",
    "start": "1716866",
    "end": "1724116"
  },
  {
    "text": "the name of label so we can move this provide in from here. Oops.",
    "start": "1726883",
    "end": "1732915"
  },
  {
    "text": "You can move it from here",
    "start": "1733199",
    "end": "1735699"
  },
  {
    "text": "Into our tests Saying like for example this one",
    "start": "1739550",
    "end": "1746565"
  },
  {
    "text": "Provide And we can change Saying with test",
    "start": "1748066",
    "end": "1754266"
  },
  {
    "text": "Test Creation",
    "start": "1755666",
    "end": "1759050"
  },
  {
    "text": "And we do Okay with",
    "start": "1761916",
    "end": "1766316"
  },
  {
    "text": "Okay This is okay. So why are you now? Oh,",
    "start": "1766949",
    "end": "1773300"
  },
  {
    "text": "right and we need to provide this one before everything because",
    "start": "1773300",
    "end": "1777866"
  },
  {
    "text": "Okay, because this as you can see by the signature this exclude is the PG clients but",
    "start": "1780199",
    "end": "1787250"
  },
  {
    "text": "it's Defined then required here. So we need to move that one and then",
    "start": "1788000",
    "end": "1793716"
  },
  {
    "text": "We need to do the same thing for all the other tests So in here, for example, but we need to",
    "start": "1794033",
    "end": "1802149"
  },
  {
    "text": "change the table name for your example test store",
    "start": "1802149",
    "end": "1807766"
  },
  {
    "text": "And then we Test read for example and this test that",
    "start": "1811683",
    "end": "1818516"
  },
  {
    "text": "record are actually read on the table",
    "start": "1818516",
    "end": "1821733"
  },
  {
    "text": "And that's it so right now, let's see Hmm",
    "start": "1824266",
    "end": "1829750"
  },
  {
    "text": "I've seen some errors Let's say SQL error syntax error near dollar one",
    "start": "1833716",
    "end": "1841833"
  },
  {
    "text": "Let's go back go to definition You have here the table name create a",
    "start": "1842800",
    "end": "1849449"
  },
  {
    "text": "table if not exists table name constrain table name Appends the first argument is table name",
    "start": "1849449",
    "end": "1856666"
  },
  {
    "text": "and we read the table name first argument for append this table name and",
    "start": "1856666",
    "end": "1863699"
  },
  {
    "text": "here is Red table name, okay",
    "start": "1863716",
    "end": "1868399"
  },
  {
    "text": "So we need to check Which query are you running in order to",
    "start": "1869833",
    "end": "1875833"
  },
  {
    "text": "have this syntax error. Oh",
    "start": "1875833",
    "end": "1882216"
  },
  {
    "text": "I see the thing is that The thing is that",
    "start": "1882216",
    "end": "1889266"
  },
  {
    "text": "Effect SQL Automatically escapes value. So here",
    "start": "1889800",
    "end": "1898649"
  },
  {
    "text": "We need to Say that that value should not be escaped",
    "start": "1900066",
    "end": "1906266"
  },
  {
    "text": "so import everything as SQL from",
    "start": "1907516",
    "end": "1911966"
  },
  {
    "text": "Effect SQL",
    "start": "1912916",
    "end": "1916416"
  },
  {
    "text": "Okay, are you okay? Yeah, I know you're not completely okay",
    "start": "1920716",
    "end": "1926800"
  },
  {
    "text": "with that because I need to add the dependency over",
    "start": "1926800",
    "end": "1931666"
  },
  {
    "text": "SQL let's say which version is actually installed",
    "start": "1933266",
    "end": "1937049"
  },
  {
    "text": "pnpm-lock and say Effect",
    "start": "1938433",
    "end": "1942199"
  },
  {
    "text": "SQL 0.1.16 okay",
    "start": "1945466",
    "end": "1950533"
  },
  {
    "text": "So let's go back to the package json and add our new dependency",
    "start": "1952633",
    "end": "1957100"
  },
  {
    "text": "Our new dependency near is effect SQL",
    "start": "1958750",
    "end": "1964416"
  },
  {
    "text": "Okay save We stop the tests we say pnpm install",
    "start": "1971666",
    "end": "1978649"
  },
  {
    "text": "Now we will update everything",
    "start": "1980316",
    "end": "1983199"
  },
  {
    "text": "Let's see Okay We've installed everything. We can go",
    "start": "1988666",
    "end": "1995533"
  },
  {
    "text": "back to pnpm test and in here we need now to update",
    "start": "1995533",
    "end": "1999866"
  },
  {
    "text": "Okay, now SQL is something defined and then we can do SQL dot",
    "start": "2001350",
    "end": "2008050"
  },
  {
    "text": "Statement",
    "start": "2010916",
    "end": "2011399"
  },
  {
    "text": "I remember unsafe",
    "start": "2016316",
    "end": "2018366"
  },
  {
    "text": "Okay should be this one That basically tells SQL to",
    "start": "2026516",
    "end": "2033166"
  },
  {
    "text": "do not try to escape the value We could have also been more",
    "start": "2033166",
    "end": "2039266"
  },
  {
    "text": "Okay More quick and dirty about that, but yeah, I",
    "start": "2041233",
    "end": "2048349"
  },
  {
    "text": "Think it's unsafe fragment if I remember correctly, but yeah, we can see now some tests as",
    "start": "2048350",
    "end": "2055500"
  },
  {
    "text": "Relation execution journal do not exist",
    "start": "2056666",
    "end": "2059550"
  },
  {
    "text": "Oh Let's say Maybe oh",
    "start": "2062733",
    "end": "2069116"
  },
  {
    "text": "Because yeah, we need to say that test creation test",
    "start": "2069350",
    "end": "2075433"
  },
  {
    "text": "creation",
    "start": "2076316",
    "end": "2077515"
  },
  {
    "text": "Okay",
    "start": "2087949",
    "end": "2088533"
  },
  {
    "text": "Okay relation execution journal do not exist, okay",
    "start": "2095949",
    "end": "2100750"
  },
  {
    "text": "and the test that's failing is Should store the execution in the table",
    "start": "2101466",
    "end": "2109866"
  },
  {
    "text": "upon append should store the execution. Oh",
    "start": "2109866",
    "end": "2115500"
  },
  {
    "text": "Here yeah Because we are actually reading directly from there",
    "start": "2115500",
    "end": "2121966"
  },
  {
    "text": "Okay Perfect perfect perfect",
    "start": "2123266",
    "end": "2128800"
  },
  {
    "text": "Okay, and we should see that",
    "start": "2130266",
    "end": "2134300"
  },
  {
    "text": "When we try to run our tests in here If we do again, oh",
    "start": "2136033",
    "end": "2142932"
  },
  {
    "text": "You should see yeah a lot of spinning up. Yeah I",
    "start": "2143350",
    "end": "2147366"
  },
  {
    "text": "Okay Pg type type name nsp  index",
    "start": "2151833",
    "end": "2158000"
  },
  {
    "text": "All of those are failing let's see why they are failing",
    "start": "2158000",
    "end": "2165100"
  },
  {
    "text": "they are all trying to create something that's common to everyone and",
    "start": "2165399",
    "end": "2171466"
  },
  {
    "text": "Let's see Exist Pg type name nsp index",
    "start": "2171466",
    "end": "2178966"
  },
  {
    "text": "This again should use a unique",
    "start": "2186433",
    "end": "2190833"
  },
  {
    "text": "This one should",
    "start": "2198183",
    "end": "2199466"
  },
  {
    "text": "Yeah, I'll see if fragment just Okay closing this okay",
    "start": "2204866",
    "end": "2211416"
  },
  {
    "text": "Maybe it's not It's Literal now and see yeah,",
    "start": "2216133",
    "end": "2222799"
  },
  {
    "text": "that's it. That should be it Okay, maybe with we can do something like",
    "start": "2222800",
    "end": "2228766"
  },
  {
    "text": "Try to execute test with the log level of the bug",
    "start": "2229800",
    "end": "2235899"
  },
  {
    "text": "And see what's trying to run Where is it? Where is it? Where is the",
    "start": "2239716",
    "end": "2246316"
  },
  {
    "text": "memory with a stem log level debug? Let's see what what's the output?",
    "start": "2246316",
    "end": "2253533"
  },
  {
    "text": "Okay",
    "start": "2256216",
    "end": "2258266"
  },
  {
    "text": "sql duplicate key violate unique constraints nsp index. Let's see what is about",
    "start": "2263716",
    "end": "2271466"
  },
  {
    "text": "Not too familiar with",
    "start": "2273116",
    "end": "2274649"
  },
  {
    "text": "when you creating/updating the same table with parallel processing Understand because of this so I think the",
    "start": "2280166",
    "end": "2286616"
  },
  {
    "text": "benchmarks can start not any connection driver on the module. Oh",
    "start": "2286616",
    "end": "2291666"
  },
  {
    "text": "Oh, so it's something",
    "start": "2296449",
    "end": "2297515"
  },
  {
    "text": "So it's something actually tied to Postgres Oh didn't know about that. ",
    "start": "2306633",
    "end": "2316366"
  },
  {
    "text": "I see I see",
    "start": "2328350",
    "end": "2330716"
  },
  {
    "text": "Let's see, can I get",
    "start": "2335416",
    "end": "2339800"
  },
  {
    "text": "Effect-ts Effect",
    "start": "2341516",
    "end": "2346266"
  },
  {
    "text": "Can I get effect to Dump all the queries, let's see SQL",
    "start": "2348350",
    "end": "2356316"
  },
  {
    "text": "SRC maybe SQL PG",
    "start": "2359033",
    "end": "2361899"
  },
  {
    "text": "SRC I'd like to have this",
    "start": "2369399",
    "end": "2372799"
  },
  {
    "text": "Make and this does everything I would like to have this",
    "start": "2374716",
    "end": "2381566"
  },
  {
    "text": "Client",
    "start": "2382916",
    "end": "2383616"
  },
  {
    "text": "Span event On sequence concurrent mode. Oh, hello everyone",
    "start": "2388516",
    "end": "2395716"
  },
  {
    "text": "On sequence concurrent mode, yeah, I could",
    "start": "2397716",
    "end": "2400533"
  },
  {
    "text": "sequential It's right is not anymore like that. It should be like",
    "start": "2405149",
    "end": "2410833"
  },
  {
    "text": "Here if I remember correctly And let's see how the test options are",
    "start": "2412350",
    "end": "2419550"
  },
  {
    "text": "Go to definition",
    "start": "2427199",
    "end": "2430666"
  },
  {
    "text": "Options sequential true Let's say thank you for suggesting that",
    "start": "2434833",
    "end": "2447632"
  },
  {
    "text": "yeah, that could be a quick fix for it",
    "start": "2447633",
    "end": "2452066"
  },
  {
    "text": "Okay, yeah now it's more believable, okay Okay",
    "start": "2453816",
    "end": "2461266"
  },
  {
    "text": "Okay Okay, that's that's fix it for now",
    "start": "2461266",
    "end": "2467049"
  },
  {
    "text": "Now we have expected should not mark expected zeros be one. Okay",
    "start": "2467066",
    "end": "2474099"
  },
  {
    "text": "So, let's see why",
    "start": "2475633",
    "end": "2477216"
  },
  {
    "text": "This one is not related to that",
    "start": "2481233",
    "end": "2484866"
  },
  {
    "text": "So, let's see and placements and",
    "start": "2491633",
    "end": "2493833"
  },
  {
    "text": "Select from message each. Oh, this is at least one. Yeah. Okay, so this and completely another",
    "start": "2497966",
    "end": "2504949"
  },
  {
    "text": "The same test but yeah, shouldn't Did I put the before",
    "start": "2506233",
    "end": "2513533"
  },
  {
    "text": "all in the wrong file Yeah, we have the connection URI in here",
    "start": "2513533",
    "end": "2519250"
  },
  {
    "text": "Okay, I provided in here",
    "start": "2521516",
    "end": "2523800"
  },
  {
    "text": "Connection URI And then I",
    "start": "2527416",
    "end": "2534399"
  },
  {
    "text": "Okay, I I was drunk apparently I modified the wrong file because yeah, I",
    "start": "2545783",
    "end": "2552816"
  },
  {
    "text": "need to do this one in here as well Let's do that",
    "start": "2552816",
    "end": "2558500"
  },
  {
    "text": "let's remove that and Provide",
    "start": "2559800",
    "end": "2565166"
  },
  {
    "text": "This goes away and I need to do that. I need to remove that I need to say that",
    "start": "2565933",
    "end": "2574300"
  },
  {
    "text": "this is sequential true Okay, and now each test",
    "start": "2574466",
    "end": "2581233"
  },
  {
    "text": "should have its layer",
    "start": "2581233",
    "end": "2584632"
  },
  {
    "text": "Global execution journal. Yeah Make the robot execution journal",
    "start": "2587566",
    "end": "2593350"
  },
  {
    "text": "Now",
    "start": "2596066",
    "end": "2596932"
  },
  {
    "text": "Okay, this is imported",
    "start": "2606199",
    "end": "2607800"
  },
  {
    "text": "And  withTestEnv should do this one as well",
    "start": "2611433",
    "end": "2615750"
  },
  {
    "text": "Okay, now we should be okay because now the function withTestEnv creates the",
    "start": "2626750",
    "end": "2632100"
  },
  {
    "text": "environment for the test Here we are creating all the test test creation, test store, test. Okay, so",
    "start": "2632100",
    "end": "2639733"
  },
  {
    "text": "at least durable execution Should pass everything. Yeah, as you can see now durable execution passes all of",
    "start": "2639733",
    "end": "2647515"
  },
  {
    "text": "our tests. That's perfect Okay, and it takes definitely a lot more",
    "start": "2647516",
    "end": "2656550"
  },
  {
    "text": "a lot less than before And now we need to do the same for at least once",
    "start": "2656550",
    "end": "2663149"
  },
  {
    "text": "So at least once so these used before a table name and",
    "start": "2665466",
    "end": "2674166"
  },
  {
    "text": "At least once we go to the vision and now we will do the same thing that we did there in here",
    "start": "2675750",
    "end": "2682616"
  },
  {
    "text": "Make at least once storage Okay, let's drop off the typings and say",
    "start": "2682666",
    "end": "2690750"
  },
  {
    "text": "that I want the user to give me the table name They want to use table name",
    "start": "2690750",
    "end": "2696699"
  },
  {
    "text": "string and then you need to import",
    "start": "2697666",
    "end": "2701850"
  },
  {
    "text": "everything as SQL from effect",
    "start": "2703033",
    "end": "2707833"
  },
  {
    "text": "SQL SQL",
    "start": "2709600",
    "end": "2714266"
  },
  {
    "text": "Okay, and now ideally we could say create a table if not exist",
    "start": "2717750",
    "end": "2724133"
  },
  {
    "text": "SQL SQL why are not? Oh",
    "start": "2724166",
    "end": "2732799"
  },
  {
    "text": "Because now in this package",
    "start": "2733000",
    "end": "2737149"
  },
  {
    "text": "Effect SQL SQL right Effect SQL without",
    "start": "2739166",
    "end": "2745100"
  },
  {
    "text": "Okay SQL dot Statement dot",
    "start": "2746800",
    "end": "2752966"
  },
  {
    "text": "unsafe and want to pass you the table name and",
    "start": "2754316",
    "end": "2761050"
  },
  {
    "text": "This kind of fragment I need to provide everywhere",
    "start": "2761050",
    "end": "2764866"
  },
  {
    "text": "messge ack and",
    "start": "2766149",
    "end": "2769265"
  },
  {
    "text": "On conflict here This is the table name",
    "start": "2771550",
    "end": "2777350"
  },
  {
    "text": "update table name Process will equals true. So something",
    "start": "2777916",
    "end": "2784416"
  },
  {
    "text": "from table names that processing will false Okay, and now",
    "start": "2784416",
    "end": "2789199"
  },
  {
    "text": "we should Have everything not working",
    "start": "2790066",
    "end": "2794566"
  },
  {
    "text": "Counter it but oh because we updated the definition, but we didn't update the test so make at least",
    "start": "2795816",
    "end": "2804616"
  },
  {
    "text": "Postgres",
    "start": "2805733",
    "end": "2806233"
  },
  {
    "text": "Yeah, we need to this one",
    "start": "2810916",
    "end": "2815500"
  },
  {
    "text": "And say For each test now we need to say Effect.provide",
    "start": "2818916",
    "end": "2826149"
  },
  {
    "text": "And at least once storage postgres dot make at least one storage postgres",
    "start": "2827633",
    "end": "2833850"
  },
  {
    "text": "and create Test",
    "start": "2834866",
    "end": "2838816"
  },
  {
    "text": "Okay, why are you not Oh",
    "start": "2844550",
    "end": "2850266"
  },
  {
    "text": "Merge Let's go back and see what we",
    "start": "2852116",
    "end": "2858550"
  },
  {
    "text": "are because this one relies on And this one relies on",
    "start": "2858550",
    "end": "2864899"
  },
  {
    "text": "Serialization so let's say provide This provides just sharding. Yeah",
    "start": "2866199",
    "end": "2873366"
  },
  {
    "text": "but then I Also need to provide serialization",
    "start": "2874149",
    "end": "2879533"
  },
  {
    "text": "Which is here. Yeah So let's see maybe I",
    "start": "2880266",
    "end": "2885899"
  },
  {
    "text": "could say something like",
    "start": "2885899",
    "end": "2887149"
  },
  {
    "text": "Memory sharding that uses that",
    "start": "2899166",
    "end": "2901433"
  },
  {
    "text": "I'm not so happy about this because I have this one",
    "start": "2905116",
    "end": "2911366"
  },
  {
    "text": "This basically create just a huge layer",
    "start": "2915116",
    "end": "2917366"
  },
  {
    "text": "And this one can be all moved in here and say something like",
    "start": "2922466",
    "end": "2930816"
  },
  {
    "text": "Okay effect provide and this",
    "start": "2931933",
    "end": "2937500"
  },
  {
    "text": "be just a chain of provides",
    "start": "2937500",
    "end": "2940866"
  },
  {
    "text": "Oops, okay. This is not needed anymore",
    "start": "2945666",
    "end": "2949949"
  },
  {
    "text": "And I could say that with test and also passes in table name",
    "start": "2951250",
    "end": "2957816"
  },
  {
    "text": "table name string",
    "start": "2958733",
    "end": "2961266"
  },
  {
    "text": "This is not required anymore",
    "start": "2964033",
    "end": "2965899"
  },
  {
    "text": "So this way we could say",
    "start": "2969066",
    "end": "2972916"
  },
  {
    "text": "Effect.provide and we can move this one",
    "start": "2975383",
    "end": "2979033"
  },
  {
    "text": "Here for example and same passing the table name",
    "start": "2981649",
    "end": "2988816"
  },
  {
    "text": "Table name",
    "start": "2990033",
    "end": "2991649"
  },
  {
    "text": "And now that we have this one this should not have any requirement",
    "start": "2995666",
    "end": "3001416"
  },
  {
    "text": "So we could say withTestEnv test",
    "start": "3002266",
    "end": "3006166"
  },
  {
    "text": "creation Yeah, I really like this",
    "start": "3007283",
    "end": "3013316"
  },
  {
    "text": "Very much instead of all of those ones. Yeah They are all effects",
    "start": "3014466",
    "end": "3020416"
  },
  {
    "text": "dot provide. Yeah, so creation this one should be",
    "start": "3020416",
    "end": "3026932"
  },
  {
    "text": "Test storage",
    "start": "3027666",
    "end": "3029100"
  },
  {
    "text": "And this one could be test marked process",
    "start": "3034600",
    "end": "3040233"
  },
  {
    "text": "and Test marked Process and these",
    "start": "3042966",
    "end": "3049666"
  },
  {
    "text": "Test acknowledged Test",
    "start": "3050949",
    "end": "3055350"
  },
  {
    "text": "Acknowledge unprocess",
    "start": "3057316",
    "end": "3062000"
  },
  {
    "text": "Okay, and We also need to update the checks then we",
    "start": "3064666",
    "end": "3071350"
  },
  {
    "text": "do in the test because they should read from",
    "start": "3071350",
    "end": "3076133"
  },
  {
    "text": "the correct tables These run test mark process for example",
    "start": "3076800",
    "end": "3082015"
  },
  {
    "text": "should read from test mark process",
    "start": "3082016",
    "end": "3084166"
  },
  {
    "text": "And then we have test storage",
    "start": "3096833",
    "end": "3099300"
  },
  {
    "text": "And test creation Okay",
    "start": "3103550",
    "end": "3108633"
  },
  {
    "text": "Okay, these one as expect table name test creation to be able to message ack",
    "start": "3114716",
    "end": "3121266"
  },
  {
    "text": "Yeah, that's right. That's one",
    "start": "3121266",
    "end": "3124850"
  },
  {
    "text": "Okay, let's try everything again Yes Yes, everything works. Now the tests are",
    "start": "3128666",
    "end": "3137449"
  },
  {
    "text": "definitely faster than before I Would also like to update this one",
    "start": "3137449",
    "end": "3143066"
  },
  {
    "text": "withTestEnv that what provides just those one. Yeah",
    "start": "3145233",
    "end": "3150965"
  },
  {
    "text": "And do something like",
    "start": "3151016",
    "end": "3157216"
  },
  {
    "text": "This one and say withTestEnv",
    "start": "3159116",
    "end": "3164116"
  },
  {
    "text": "Table name as a string Okay, and say dot provide table name",
    "start": "3165149",
    "end": "3175116"
  },
  {
    "text": "Here we go, perfect. So now we can say",
    "start": "3179733",
    "end": "3184916"
  },
  {
    "text": "test creation and then we could say",
    "start": "3186766",
    "end": "3193166"
  },
  {
    "text": "Test store",
    "start": "3196616",
    "end": "3202149"
  },
  {
    "text": "Then we say test read",
    "start": "3207866",
    "end": "3209833"
  },
  {
    "text": "Okay, and now everything should be fine, let's run everything again",
    "start": "3216866",
    "end": "3223216"
  },
  {
    "text": "Perfect perfect perfect",
    "start": "3223250",
    "end": "3229300"
  },
  {
    "text": "perfect and ideally in here before all",
    "start": "3229300",
    "end": "3235933"
  },
  {
    "text": "Should I want here down? Yeah before all okay and return async await. Yeah",
    "start": "3235933",
    "end": "3243666"
  },
  {
    "text": "So we should be oh await I didn't await for that. I",
    "start": "3245183",
    "end": "3250966"
  },
  {
    "text": "think Yeah, async container.stop. Yeah, but this one is a promise. So I could say await",
    "start": "3250966",
    "end": "3259250"
  },
  {
    "text": "container.stop And since it was here",
    "start": "3259766",
    "end": "3263932"
  },
  {
    "text": "Now you see why it's easier to use effect Now we should say that okay, and if I run",
    "start": "3265133",
    "end": "3273366"
  },
  {
    "text": "everything I see the before all yeah, and then it shuts out Perfectly",
    "start": "3273366",
    "end": "3279849"
  },
  {
    "text": "Okay, let's see what we updated here here",
    "start": "3282216",
    "end": "3287716"
  },
  {
    "text": "Okay, and now we can see fix test running",
    "start": "3296583",
    "end": "3301516"
  },
  {
    "text": "Parallel Okay, so now test will run much much faster. Let's see",
    "start": "3302333",
    "end": "3309033"
  },
  {
    "text": "Ideally if we go to do our pull request",
    "start": "3310016",
    "end": "3313666"
  },
  {
    "text": "Okay, did we break something before? What did we break check? Oh",
    "start": "3315050",
    "end": "3326000"
  },
  {
    "text": "Let's see, let's see if the build succeeds",
    "start": "3328250",
    "end": "3332050"
  },
  {
    "text": "Or if it breaks And maybe we can also quit",
    "start": "3334966",
    "end": "3340000"
  },
  {
    "text": "and say pnpm check and see",
    "start": "3340000",
    "end": "3342899"
  },
  {
    "text": "Yeah, we have some issues to fix oh the examples right yeah",
    "start": "3345333",
    "end": "3350800"
  },
  {
    "text": "The examples as well now Needs to be updated. Yeah",
    "start": "3351733",
    "end": "3356566"
  },
  {
    "text": "here Yeah here here make make durable",
    "start": "3357949",
    "end": "3363550"
  },
  {
    "text": "execution journal postgres And we say",
    "start": "3363550",
    "end": "3370316"
  },
  {
    "text": "Event journal Perfect",
    "start": "3371649",
    "end": "3375433"
  },
  {
    "text": "And the same goes here we need to say make I need now to provide the table name",
    "start": "3378366",
    "end": "3385000"
  },
  {
    "text": "Event journal Okay",
    "start": "3386850",
    "end": "3391899"
  },
  {
    "text": "Now the examples should be okay perfect So we say that we fixed",
    "start": "3392766",
    "end": "3400699"
  },
  {
    "text": "Examples Okay today I'm not able to write yes same changes",
    "start": "3403050",
    "end": "3411199"
  },
  {
    "text": "And now we should see that this one should compile and be fine",
    "start": "3414899",
    "end": "3422050"
  },
  {
    "text": "Let's see now it's running CI is running, okay",
    "start": "3429766",
    "end": "3435750"
  },
  {
    "text": "So I Think that this one",
    "start": "3440266",
    "end": "3445333"
  },
  {
    "text": "Let's go back to our list of issues cluster Issues",
    "start": "3446500",
    "end": "3452699"
  },
  {
    "text": "Do not recreate test container for each test now we can close this issue perfect",
    "start": "3452699",
    "end": "3459916"
  },
  {
    "text": "Okay CI is still running",
    "start": "3461166",
    "end": "3465050"
  },
  {
    "text": "Yeah, but some tests already passed we need now okay everything has passed perfect",
    "start": "3466616",
    "end": "3471649"
  },
  {
    "text": "Are you passed? yeah everything passed in",
    "start": "3471833",
    "end": "3479899"
  },
  {
    "text": "CCI so we are fine and Let's see what else we can do",
    "start": "3479899",
    "end": "3486800"
  },
  {
    "text": "Much time have I left about 12 10 to 20 minutes, okay",
    "start": "3487850",
    "end": "3494116"
  },
  {
    "text": "Okay, okay, okay, so consider renaming",
    "start": "3494149",
    "end": "3500215"
  },
  {
    "text": "from function effect to from effect Yeah Let's say I will add from function",
    "start": "3500216",
    "end": "3508849"
  },
  {
    "text": "Effect And that comes from",
    "start": "3510649",
    "end": "3516199"
  },
  {
    "text": "Here recipient behavior, yeah I Rename this one as",
    "start": "3517933",
    "end": "3523916"
  },
  {
    "text": "From function yeah, I keep from fromFunctionEffect for now because it's",
    "start": "3528133",
    "end": "3533566"
  },
  {
    "text": "actually a function that returns an effect So I'm actually fine with that for now. Yeah",
    "start": "3533566",
    "end": "3539000"
  },
  {
    "text": "Let's see something else We need to find a better",
    "start": "3540016",
    "end": "3545433"
  },
  {
    "text": "naming for recipient type",
    "start": "3545433",
    "end": "3547733"
  },
  {
    "text": "Refactor interface all that I want",
    "start": "3553816",
    "end": "3557000"
  },
  {
    "text": "This one is already closed I think mixer is my message itself.",
    "start": "3560566",
    "end": "3565750"
  },
  {
    "text": "Yeah, this is already closed Okay",
    "start": "3565750",
    "end": "3570716"
  },
  {
    "text": "And then what we have left Not a lot",
    "start": "3572416",
    "end": "3578100"
  },
  {
    "text": "I Okay So I think that",
    "start": "3582383",
    "end": "3587765"
  },
  {
    "text": "We can now merge It could ideally as last thing",
    "start": "3589366",
    "end": "3596250"
  },
  {
    "text": "Rename these cluster node package",
    "start": "3597250",
    "end": "3601000"
  },
  {
    "text": "To something else like for example",
    "start": "3602366",
    "end": "3606533"
  },
  {
    "text": "Cluster RPC right now because now it's more cluster RPC than a cluster node",
    "start": "3608333",
    "end": "3615116"
  },
  {
    "text": "But yeah, I want to do that for now Because we also have this",
    "start": "3616449",
    "end": "3623066"
  },
  {
    "text": "storage file in here right now and Yeah, I would like to have separate",
    "start": "3623066",
    "end": "3629833"
  },
  {
    "text": "cluster platform package Yeah, and that cluster platform package",
    "start": "3629833",
    "end": "3636616"
  },
  {
    "text": "can perform this yeah But that is out of scope for today I",
    "start": "3636616",
    "end": "3645066"
  },
  {
    "text": "almost finished my time So I think that I will go",
    "start": "3645066",
    "end": "3651316"
  },
  {
    "text": "and start prepare dinner So thank you everyone who joined today.",
    "start": "3651316",
    "end": "3657550"
  },
  {
    "text": "Sorry for this one being a quick one, but yeah We fixed some example. We now made",
    "start": "3657550",
    "end": "3665350"
  },
  {
    "text": "running examples quicker now we can actually see the example of run in",
    "start": "3665350",
    "end": "3670699"
  },
  {
    "text": "the past for example the example took a lot to run and the CI was",
    "start": "3670699",
    "end": "3676399"
  },
  {
    "text": "every time failing because of that so I think that for now I can I merge this one and",
    "start": "3676949",
    "end": "3685033"
  },
  {
    "text": "Say thank you everyone and see you next time. Bye. Bye. Thank you everyone again",
    "start": "3685100",
    "end": "3691266"
  }
]