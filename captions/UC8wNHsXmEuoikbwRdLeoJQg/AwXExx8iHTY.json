[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "Welcome everybody to another episode of re-factoring content layer with the latest Effect.",
    "start": "5366",
    "end": "10566"
  },
  {
    "text": "We'll just jump right in, I think. I know the last time we met we were",
    "start": "12000",
    "end": "18566"
  },
  {
    "text": "working on generating the pseudo package",
    "start": "18566",
    "end": "23666"
  },
  {
    "text": "for content layer locally, the generated package, the type declarations, and the package JSON, etc.",
    "start": "23666",
    "end": "29633"
  },
  {
    "text": "I think the last time we met we stopped at the point we were talking about module",
    "start": "31533",
    "end": "37033"
  },
  {
    "text": "resolution and type declaration, resolution, etc. So I guess we can start there.",
    "start": "37033",
    "end": "43900"
  },
  {
    "text": "I think Tim worked out what the previous strategy was that content layer was using",
    "start": "44099",
    "end": "51300"
  },
  {
    "start": "48000",
    "end": "354000"
  },
  {
    "text": "for, at least for the type declarations. We really want to show that quickly first.",
    "start": "51300",
    "end": "56500"
  },
  {
    "text": "And then we can hear it. So last time we got the types generating.",
    "start": "58433",
    "end": "64099"
  },
  {
    "text": "And at the moment, we got to a point",
    "start": "66566",
    "end": "74266"
  },
  {
    "text": "where we were quite sure what the type declaration file should look like.",
    "start": "74266",
    "end": "78799"
  },
  {
    "text": "But we took a quick look at the previous version of content layer, and they have",
    "start": "80900",
    "end": "87500"
  },
  {
    "text": "two declaration files. One's for the index export, and then they",
    "start": "87500",
    "end": "94666"
  },
  {
    "text": "have a general types declaration file,",
    "start": "94666",
    "end": "100099"
  },
  {
    "text": "which contains all the document types. Let's copy what they're doing.",
    "start": "100099",
    "end": "109132"
  },
  {
    "text": "Here in the same query we're doing the storage. I think we've actually, I think we",
    "start": "111900",
    "end": "118666"
  },
  {
    "text": "created a, we were talking about moving all this stuff to a different thing, but",
    "start": "118666",
    "end": "125933"
  },
  {
    "text": "we hadn't done it yet.",
    "start": "125933",
    "end": "126733"
  },
  {
    "text": "What does the exports look like?",
    "start": "132199",
    "end": "139033"
  },
  {
    "text": "Well, they put the package.json file up.",
    "start": "140066",
    "end": "143666"
  },
  {
    "text": "I guess we could do that.",
    "start": "145099",
    "end": "146933"
  },
  {
    "text": "So they're using it. I think that is so you can do like",
    "start": "151599",
    "end": "158900"
  },
  {
    "text": "require, and then just require the content layer directory.",
    "start": "158900",
    "end": "164933"
  },
  {
    "text": "Or import.",
    "start": "169500",
    "end": "170099"
  },
  {
    "text": "I'll put this, okay.",
    "start": "175099",
    "end": "177066"
  },
  {
    "text": "I guess it doesn't matter what the",
    "start": "180666",
    "end": "186766"
  },
  {
    "text": "name is generated.",
    "start": "186766",
    "end": "191000"
  },
  {
    "text": "So in their package JSON, they were using the types versions, right?",
    "start": "196133",
    "end": "198900"
  },
  {
    "text": "Yeah. Instead of the top level types.",
    "start": "202933",
    "end": "206765"
  },
  {
    "text": "I think in exports, you can.",
    "start": "210099",
    "end": "214533"
  },
  {
    "text": "So we'll see how this works.",
    "start": "219500",
    "end": "220433"
  },
  {
    "text": "I think the property is called types versions.",
    "start": "230966",
    "end": "234866"
  },
  {
    "text": "Interesting. So with the types versions thing.",
    "start": "330599",
    "end": "335465"
  },
  {
    "text": "Yeah, if you specify a types field and package JSON, like, and point it to dot",
    "start": "337766",
    "end": "342900"
  },
  {
    "text": "slash like index dot D dot TS, let's say, in the types of in the types of versions.",
    "start": "342900",
    "end": "349099"
  },
  {
    "text": "You can then like specify like how that resolves based on the TypeScript version itself.",
    "start": "351099",
    "end": "355699"
  },
  {
    "start": "354000",
    "end": "778000"
  },
  {
    "text": "We actually probably could. We probably could just use the types field instead of the types versions.",
    "start": "356566",
    "end": "361500"
  },
  {
    "text": "I think I mean.",
    "start": "365000",
    "end": "368066"
  },
  {
    "text": "Whatever works. I think that what we're doing right now is fine.",
    "start": "370800",
    "end": "374000"
  },
  {
    "text": "Okay. I don't know if that trailing slash and generated is going to cause",
    "start": "376099",
    "end": "381866"
  },
  {
    "text": "an issue, but as we'll see.",
    "start": "381866",
    "end": "383599"
  },
  {
    "text": "Type exports.",
    "start": "432433",
    "end": "435699"
  },
  {
    "text": "That's the types for the general one.",
    "start": "438966",
    "end": "443766"
  },
  {
    "text": "So that's the exports for the collections.",
    "start": "479766",
    "end": "485066"
  },
  {
    "text": "It's an interesting approach where they",
    "start": "515100",
    "end": "524500"
  },
  {
    "text": "import everything from types and then re-export the collection.",
    "start": "524500",
    "end": "529600"
  },
  {
    "text": "Not sure if you need to import type in",
    "start": "557533",
    "end": "563633"
  },
  {
    "text": "the declaration file. And then export the types.",
    "start": "563633",
    "end": "573399"
  },
  {
    "text": "Okay. Let's see what happens.",
    "start": "576266",
    "end": "579266"
  },
  {
    "text": "We run a watch now.",
    "start": "622500",
    "end": "628533"
  },
  {
    "text": "I don't think so because we didn't change anything for the actual config, right?",
    "start": "632699",
    "end": "637500"
  },
  {
    "text": "Yeah.",
    "start": "638600",
    "end": "638800"
  },
  {
    "text": "Content generated. Now we have an index file.",
    "start": "643800",
    "end": "647365"
  },
  {
    "text": "Yep. And then types",
    "start": "654066",
    "end": "659399"
  },
  {
    "text": "Great. I guess just the",
    "start": "662300",
    "end": "672533"
  },
  {
    "text": "Is that just because type script doesn't include it?",
    "start": "703966",
    "end": "709466"
  },
  {
    "text": "I think we had We don't know the samples. We'll scratch.",
    "start": "713699",
    "end": "717300"
  },
  {
    "text": "And here we include it.",
    "start": "719399",
    "end": "724300"
  },
  {
    "text": "So we've got everything in there and then we want",
    "start": "729933",
    "end": "732699"
  },
  {
    "text": "App directory dot content layer.",
    "start": "750699",
    "end": "754199"
  },
  {
    "text": "Okay. What does the What did the old",
    "start": "777699",
    "end": "784133"
  },
  {
    "start": "778000",
    "end": "1220000"
  },
  {
    "text": "website do for the TS config? Because I know you had to include something.",
    "start": "784133",
    "end": "788866"
  },
  {
    "text": "Actually, I think the content layer website says this.",
    "start": "789300",
    "end": "792100"
  },
  {
    "text": "You have to include",
    "start": "800966",
    "end": "802266"
  },
  {
    "text": "So the way that the current content layer advises you to do this is to add dot",
    "start": "808399",
    "end": "815500"
  },
  {
    "text": "content layer slash generated to your include.",
    "start": "815500",
    "end": "819300"
  },
  {
    "text": "As well.",
    "start": "823966",
    "end": "824466"
  },
  {
    "text": "I added this export here, but I'm not sure if it will work. I don't know. But on the current content layer",
    "start": "829500",
    "end": "836533"
  },
  {
    "text": "basically says you can add the dot content layer slash generated and to",
    "start": "836533",
    "end": "841933"
  },
  {
    "text": "include to your like TS config and that might work.",
    "start": "841933",
    "end": "845933"
  },
  {
    "text": "I think we're not. I guess we just include everything.",
    "start": "851833",
    "end": "855100"
  },
  {
    "text": "Interesting. Strange.",
    "start": "897100",
    "end": "902233"
  },
  {
    "text": "That would be.",
    "start": "938699",
    "end": "942266"
  },
  {
    "text": "I feel like that's weird.",
    "start": "944800",
    "end": "948500"
  },
  {
    "text": "Is it just because we need the file extension because we're emitting.",
    "start": "993066",
    "end": "997533"
  },
  {
    "text": "It's because that's the same.",
    "start": "1006800",
    "end": "1008500"
  },
  {
    "start": "1220000",
    "end": "1681000"
  },
  {
    "text": "So we're not getting past this right.",
    "start": "1228199",
    "end": "1231166"
  },
  {
    "text": "What's going on here?",
    "start": "1257833",
    "end": "1259766"
  },
  {
    "text": "We're getting interrupted.",
    "start": "1271199",
    "end": "1272866"
  },
  {
    "text": "We're getting interrupted.",
    "start": "1281000",
    "end": "1281933"
  },
  {
    "text": "So we want to go to the document",
    "start": "1289399",
    "end": "1292699"
  },
  {
    "text": "So outright, I do this here.",
    "start": "1296033",
    "end": "1301799"
  },
  {
    "text": "So it's in the uninterruptual region.",
    "start": "1312199",
    "end": "1314299"
  },
  {
    "text": "What are we looking for?",
    "start": "1319600",
    "end": "1320600"
  },
  {
    "text": "We want to make this uninterruptual.",
    "start": "1333366",
    "end": "1335666"
  },
  {
    "text": "It might be worth adding the same treatment with logging and everything.",
    "start": "1349300",
    "end": "1354199"
  },
  {
    "text": "To What was that? It might be worth adding the same treatment with the logging on error and",
    "start": "1356800",
    "end": "1362199"
  },
  {
    "text": "everything to the right index call in the document builder that we're doing for the other Thingy.",
    "start": "1362199",
    "end": "1368799"
  },
  {
    "text": "Like if you go back to the document builder that you were working on a second ago, there was",
    "start": "1371366",
    "end": "1376133"
  },
  {
    "text": "We were just tapping the error and logging it.",
    "start": "1378666",
    "end": "1384066"
  },
  {
    "text": "Since we're forking that fiber, we might want to add that back to the document builder for that other fiber as well.",
    "start": "1384100",
    "end": "1389533"
  },
  {
    "text": "Probably on the Fiber",
    "start": "1393833",
    "end": "1397600"
  },
  {
    "text": "It's in the builder It's in the document builder. So the same thing we're doing for that fiber, we might want to just do for the",
    "start": "1398933",
    "end": "1404533"
  },
  {
    "text": "fiber above as well.",
    "start": "1404533",
    "end": "1405533"
  },
  {
    "text": "And this is for IDEs.",
    "start": "1453233",
    "end": "1455833"
  },
  {
    "text": "This exit's getting ported to the mailbox.",
    "start": "1464199",
    "end": "1467833"
  },
  {
    "text": "Now it's for serial.",
    "start": "1484766",
    "end": "1485632"
  },
  {
    "text": "And these are documents. Cool. Okay. Progress.",
    "start": "1492699",
    "end": "1497632"
  },
  {
    "text": "Progress was made. We might want to The import is still a bit weird there.",
    "start": "1498733",
    "end": "1505533"
  },
  {
    "text": "Yeah, we might want to be explicit about the fact that we're generating ESM, maybe.",
    "start": "1505533",
    "end": "1510233"
  },
  {
    "text": "I don't know",
    "start": "1511666",
    "end": "1512300"
  },
  {
    "text": "And we want to continue with the JSON. Here we've got type logo.",
    "start": "1518233",
    "end": "1524699"
  },
  {
    "text": "not that should make a difference in this case.",
    "start": "1526633",
    "end": "1529500"
  },
  {
    "text": "This issue here is TypeScripts, look, resolving this package.json.",
    "start": "1532766",
    "end": "1537000"
  },
  {
    "text": "If I change this to",
    "start": "1541199",
    "end": "1542733"
  },
  {
    "text": "Okay, so we've got to change the module resolution here and see what it gives.",
    "start": "1584733",
    "end": "1587833"
  },
  {
    "text": "Yeah, so to be explicit in that case.",
    "start": "1626833",
    "end": "1630100"
  },
  {
    "text": "It does. Interesting.",
    "start": "1651199",
    "end": "1655399"
  },
  {
    "text": "I guess we could make it like the generated dot ts.",
    "start": "1660833",
    "end": "1665866"
  },
  {
    "text": "So what does the current content layer do?",
    "start": "1667399",
    "end": "1669666"
  },
  {
    "text": "So current content layer also recommends setting up a path",
    "start": "1674633",
    "end": "1681398"
  },
  {
    "start": "1681000",
    "end": "2131000"
  },
  {
    "text": "alias for TypeScript. For content layer slash generated to",
    "start": "1681399",
    "end": "1686500"
  },
  {
    "text": "point to the dot directory slash generated. Okay.",
    "start": "1686500",
    "end": "1691466"
  },
  {
    "text": "If you set up it in the last, you also have to set it up on the JS side.",
    "start": "1694199",
    "end": "1697899"
  },
  {
    "text": "Which means updating like your bundler config is on.",
    "start": "1700133",
    "end": "1706100"
  },
  {
    "text": "Yeah, I think this is specifically for like the next JS integration that content layer had.",
    "start": "1706566",
    "end": "1712333"
  },
  {
    "text": "I",
    "start": "1712833",
    "end": "1713033"
  },
  {
    "text": "see if I can find the nice solution was more generic",
    "start": "1719699",
    "end": "1723100"
  },
  {
    "text": "seems like these exports are even working",
    "start": "1754699",
    "end": "1756800"
  },
  {
    "text": "We're not really exporting from the module right now, right? We're importing from a relative path?",
    "start": "1762566",
    "end": "1767366"
  },
  {
    "text": "Yeah, directly. So it's not the It's probably not even hitting the language JSON",
    "start": "1768199",
    "end": "1772533"
  },
  {
    "text": "Yeah, so looking at looking at some of the content layer examples",
    "start": "1842466",
    "end": "1847933"
  },
  {
    "text": "where Next.js is not used it's importing directly from the index file.",
    "start": "1849333",
    "end": "1854600"
  },
  {
    "text": "Yeah. So I feel like this is fine. I mean, I know it's not ideal",
    "start": "1858033",
    "end": "1862933"
  },
  {
    "text": "but I do feel like it's okay.",
    "start": "1863666",
    "end": "1865199"
  },
  {
    "text": "At least doing it this way, you don't need to add any config.",
    "start": "1872100",
    "end": "1874833"
  },
  {
    "text": "Right. You just import directly from the generated file. And if anybody has any better ideas,",
    "start": "1878633",
    "end": "1884166"
  },
  {
    "text": "certainly drop them in the comments or in chat.",
    "start": "1884733",
    "end": "1888433"
  },
  {
    "text": "But I feel like this is okay for the moment. Yeah.",
    "start": "1889833",
    "end": "1894966"
  },
  {
    "text": "So the exports are working and the types are working, so Do you think that we should be generating .js files",
    "start": "1896300",
    "end": "1902666"
  },
  {
    "text": "or do you think that just generating .js is fine?",
    "start": "1903000",
    "end": "1905933"
  },
  {
    "text": "I think the patch search it's working, it's okay.",
    "start": "1915199",
    "end": "1920333"
  },
  {
    "text": "We could try compile it to .js and see what happens.",
    "start": "1920933",
    "end": "1926699"
  },
  {
    "text": "And then running it directly with merge.",
    "start": "1935066",
    "end": "1937899"
  },
  {
    "text": "Yeah, that's generated .js, I don't think that's going to work.",
    "start": "1941566",
    "end": "1946132"
  },
  {
    "text": "Why was that machine writing .js?",
    "start": "1957199",
    "end": "1961866"
  },
  {
    "text": "The resuppose file and the module.",
    "start": "1962933",
    "end": "1964199"
  },
  {
    "text": "So the target and we have modules that's node next.",
    "start": "1997199",
    "end": "2001199"
  },
  {
    "text": "I'm not sure that is affecting .js.",
    "start": "2005899",
    "end": "2011133"
  },
  {
    "text": "Before you go",
    "start": "2019833",
    "end": "2020800"
  },
  {
    "text": "I need to change that.",
    "start": "2049199",
    "end": "2055500"
  },
  {
    "text": "Oh, it's coming from one of the other scratch pad files?",
    "start": "2071800",
    "end": "2073666"
  },
  {
    "text": "It's just writes on the JavaScript. Disgusting, Tim.",
    "start": "2079166",
    "end": "2082800"
  },
  {
    "text": "Yeah, it works. Okay.",
    "start": "2098199",
    "end": "2101899"
  },
  {
    "text": "Alright, I feel good about this.",
    "start": "2106500",
    "end": "2107966"
  },
  {
    "text": "Just commit that. At least now we get to work on some fun stuff.",
    "start": "2111766",
    "end": "2116833"
  },
  {
    "text": "Module resolution is not particularly entertaining.",
    "start": "2118766",
    "end": "2121199"
  },
  {
    "text": "But setting up the file watchers and dealing with caching and all of that will be interesting.",
    "start": "2125199",
    "end": "2128766"
  },
  {
    "text": "Yeah. So, to do",
    "start": "2130833",
    "end": "2136265"
  },
  {
    "start": "2131000",
    "end": "3046000"
  },
  {
    "text": "So, that's in source",
    "start": "2140233",
    "end": "2141632"
  },
  {
    "text": "So, our goal. We only want to do it in watch mode. Yeah, I think",
    "start": "2146133",
    "end": "2151199"
  },
  {
    "text": "I mean, what we have right now for watch mode is fine. I think eventually we'll probably have many settings, and we'll probably just have a context",
    "start": "2152699",
    "end": "2158666"
  },
  {
    "text": "reference for settings. However Yeah. what is our goal here with the watchers?",
    "start": "2158666",
    "end": "2164866"
  },
  {
    "text": "In my mind, the goal would be that we're watching",
    "start": "2164866",
    "end": "2170699"
  },
  {
    "text": "Are we watching every single file that we're editing? With Parcel Watcher, I think you can only",
    "start": "2171833",
    "end": "2178099"
  },
  {
    "text": "watch directories if we were to use that watcher.",
    "start": "2178100",
    "end": "2182300"
  },
  {
    "text": "there's already a watcher. in platform that we can use. I know. I was just saying, if",
    "start": "2183833",
    "end": "2189066"
  },
  {
    "text": "we wanted to use the If you wanted to overlay that with the Parcel Watcher layer, I think Parcel Watcher",
    "start": "2189066",
    "end": "2194366"
  },
  {
    "text": "only allows directories. I thought the watcher in",
    "start": "2194366",
    "end": "2200100"
  },
  {
    "text": "Yeah, the platform on uses Parcel",
    "start": "2200199",
    "end": "2203000"
  },
  {
    "text": "It can use Parcel.",
    "start": "2207199",
    "end": "2208599"
  },
  {
    "text": "Yeah, I thought by default it did not.",
    "start": "2212533",
    "end": "2214199"
  },
  {
    "text": "Parcel Watcher.",
    "start": "2241066",
    "end": "2241833"
  },
  {
    "text": "So, if the type is in the directory, then",
    "start": "2269199",
    "end": "2274300"
  },
  {
    "text": "it falls back to node. But it has the directory that uses Parcel.",
    "start": "2274300",
    "end": "2280399"
  },
  {
    "text": "But regardless, it looks like we're using gloves",
    "start": "2299233",
    "end": "2302566"
  },
  {
    "text": "or the input box. What was it?",
    "start": "2304933",
    "end": "2310333"
  },
  {
    "text": "It doesn't really matter, because I'm pretty sure the I guess if we just pass this array in Doesn't the watcher give you the path",
    "start": "2310766",
    "end": "2318765"
  },
  {
    "text": "that the event occurred for anyways? So, like, we can always, like, filter out stuff we're not interested in?",
    "start": "2318766",
    "end": "2324199"
  },
  {
    "text": "Basically, the point I was making is that we are gonna want to only respond to",
    "start": "2326033",
    "end": "2333800"
  },
  {
    "text": "changes to the individual files, right?",
    "start": "2333800",
    "end": "2335899"
  },
  {
    "text": "Yes. Yes, I think the watch events give you access to the path",
    "start": "2339500",
    "end": "2343632"
  },
  {
    "text": "in every single event. Yeah.",
    "start": "2344699",
    "end": "2348766"
  },
  {
    "text": "So, we can always just watch the directory of content that the glob is pointing at?",
    "start": "2350066",
    "end": "2355266"
  },
  {
    "text": "Or we can gather the direct I don't know We can figure out a way to gather the",
    "start": "2356300",
    "end": "2361699"
  },
  {
    "text": "directories or something? And just pass them to the watcher? The problem is, they could",
    "start": "2361699",
    "end": "2367433"
  },
  {
    "text": "be wildcards in the paths.",
    "start": "2367433",
    "end": "2369433"
  },
  {
    "text": "So we just need to resolve the globs to directories somehow.",
    "start": "2374699",
    "end": "2382533"
  },
  {
    "text": "Which glob implementation are we using? Are we using fast glob?",
    "start": "2385699",
    "end": "2388932"
  },
  {
    "text": "We're just using glob glob. Glob glob. Let's take a look and see if there's anything that's",
    "start": "2393199",
    "end": "2399199"
  },
  {
    "text": "Glob gives us",
    "start": "2401199",
    "end": "2402199"
  },
  {
    "text": "So",
    "start": "2410733",
    "end": "2411099"
  },
  {
    "text": "Glob But glob has an option you can pass to it called with file types.",
    "start": "2416500",
    "end": "2422300"
  },
  {
    "text": "Which we could potentially use to filter down to the directories.",
    "start": "2428199",
    "end": "2432566"
  },
  {
    "text": "Yeah, so we want to get the bust top level",
    "start": "2438500",
    "end": "2442333"
  },
  {
    "text": "directories, so watch those. So",
    "start": "2445133",
    "end": "2447199"
  },
  {
    "text": "What was that?",
    "start": "2482766",
    "end": "2488366"
  },
  {
    "text": "And here you're filtering to things that are almost appreciated.",
    "start": "2534733",
    "end": "2537266"
  },
  {
    "text": "Somewhat counter-intuitively, this property refers to the parent path, not the path object itself.",
    "start": "2543366",
    "end": "2547800"
  },
  {
    "text": "So the parent path refers to the path of the directory that was passed to reader.",
    "start": "2552600",
    "end": "2558000"
  },
  {
    "text": "Okay. Or it traces the path to the tree, so",
    "start": "2560500",
    "end": "2565599"
  },
  {
    "text": "Parent The base name",
    "start": "2568633",
    "end": "2573500"
  },
  {
    "text": "Well, let me just want the path. What if you just want the path, man?",
    "start": "2578866",
    "end": "2585133"
  },
  {
    "text": "what is the glob documentation? Fully resolved path string. What is it, full path?",
    "start": "2587500",
    "end": "2593333"
  },
  {
    "text": "Holy moly.",
    "start": "2597933",
    "end": "2598466"
  },
  {
    "text": "Yeah, full path. Okay.",
    "start": "2603933",
    "end": "2608733"
  },
  {
    "text": "So here, why are you filtering to things that are Oh, I see. We're loading the meta to things that are not directory.",
    "start": "2609699",
    "end": "2615366"
  },
  {
    "text": "Got it. yeah, so that is just four files.",
    "start": "2615600",
    "end": "2622899"
  },
  {
    "text": "and now we want to get Next we're in watch mode, we want to get the top level directories,",
    "start": "2625133",
    "end": "2632399"
  },
  {
    "text": "and then set up the watches.",
    "start": "2634266",
    "end": "2635466"
  },
  {
    "text": "Hooray. Claude did come up with something",
    "start": "2654899",
    "end": "2660000"
  },
  {
    "text": "interesting, but I'm not sure if it actually makes any sense.",
    "start": "2660000",
    "end": "2662800"
  },
  {
    "text": "So for the glob matches, you get the absolute path.",
    "start": "2667699",
    "end": "2671333"
  },
  {
    "text": "For all the matches",
    "start": "2673000",
    "end": "2673899"
  },
  {
    "text": "Split the path, get the first entry.",
    "start": "2678066",
    "end": "2680733"
  },
  {
    "text": "This is what Claude generated. I sent it to you.",
    "start": "2683699",
    "end": "2686766"
  },
  {
    "text": "I don't think it actually makes sense.",
    "start": "2689066",
    "end": "2690666"
  },
  {
    "text": "Get top level directories. So I've got the matches.",
    "start": "2700533",
    "end": "2705399"
  },
  {
    "text": "Split.",
    "start": "2716633",
    "end": "2717100"
  },
  {
    "text": "I guess that makes sense. It literally gets the highest level directories.",
    "start": "2739033",
    "end": "2743399"
  },
  {
    "text": "Don't you have to compare to the previous? Well if the goal is literally",
    "start": "2752699",
    "end": "2757899"
  },
  {
    "text": "Previous entries to find the common prefix. I mean if the goal is literally to find",
    "start": "2758133",
    "end": "2764366"
  },
  {
    "text": "the top level directories that were matched, I guess this will technically work, won't it?",
    "start": "2764366",
    "end": "2770766"
  },
  {
    "text": "It's like",
    "start": "2770766",
    "end": "2771800"
  },
  {
    "text": "I mean this is not going to return subdirectories basically, this is literally returning the top level ones.",
    "start": "2776033",
    "end": "2783066"
  },
  {
    "text": "Yeah we want to find",
    "start": "2785699",
    "end": "2789265"
  },
  {
    "text": "Let's say we hedge We probably won't be",
    "start": "2792133",
    "end": "2798265"
  },
  {
    "text": "I'm instructing Claude. If we had those two files in the output, what should be for",
    "start": "2806233",
    "end": "2810866"
  },
  {
    "text": "Okay hang on. Adjust the implementation to return the deepest common subdirectories that are",
    "start": "2813300",
    "end": "2825199"
  },
  {
    "text": "The lowest top level.",
    "start": "2826533",
    "end": "2828800"
  },
  {
    "text": "Let me give you an example.",
    "start": "2832133",
    "end": "2833800"
  },
  {
    "text": "For the following For the following input paths.",
    "start": "2838066",
    "end": "2845933"
  },
  {
    "text": "So I don't think we need those files back soon.",
    "start": "2859300",
    "end": "2861933"
  },
  {
    "text": "Let's see if we just want to work on",
    "start": "2870733",
    "end": "2872399"
  },
  {
    "text": "We need to check if top level directories",
    "start": "2914399",
    "end": "2917600"
  },
  {
    "text": "So if our top level directories had that in it And we're now checking for",
    "start": "2930333",
    "end": "2936399"
  },
  {
    "text": "We're now checking directories here.",
    "start": "2937133",
    "end": "2940699"
  },
  {
    "text": "Here's the updated implementation.",
    "start": "2953699",
    "end": "2955099"
  },
  {
    "text": "So we go through the array and we're trying to find another thing that starts",
    "start": "2994233",
    "end": "2999866"
  },
  {
    "text": "with this initially.",
    "start": "2999866",
    "end": "3001566"
  },
  {
    "text": "So we have a shorter one. It will match. And if we have a longer one, it will match.",
    "start": "3029333",
    "end": "3035533"
  },
  {
    "text": "If there is no match, then we have a different branch. We can push",
    "start": "3043966",
    "end": "3048600"
  },
  {
    "start": "3046000",
    "end": "3308000"
  },
  {
    "text": "I'm going to read this back. Let's see it.",
    "start": "3065533",
    "end": "3070266"
  },
  {
    "text": "And if we don't find any matches, then we can edge.",
    "start": "3114733",
    "end": "3117800"
  },
  {
    "text": "I got too many curlies. Too many curlies.",
    "start": "3137233",
    "end": "3140766"
  },
  {
    "text": "What's the problem? Can you do that?",
    "start": "3145366",
    "end": "3146766"
  },
  {
    "text": "You scroll up, is there like a extraneous curly bracket somewhere?",
    "start": "3153000",
    "end": "3157899"
  },
  {
    "text": "Maybe.",
    "start": "3160699",
    "end": "3163399"
  },
  {
    "text": "Oh yeah, you're uh, you're It's inside the stream.",
    "start": "3175166",
    "end": "3178866"
  },
  {
    "text": "we're gonna make a new stream. Yeah.",
    "start": "3191766",
    "end": "3196433"
  },
  {
    "text": "Like, should the source constructor be effectful?",
    "start": "3220933",
    "end": "3226666"
  },
  {
    "text": "Might have to be. That's gonna be annoying.",
    "start": "3237933",
    "end": "3240432"
  },
  {
    "text": "This will merge the stream somehow",
    "start": "3244733",
    "end": "3248733"
  },
  {
    "start": "3308000",
    "end": "6988000"
  },
  {
    "text": "We are done with this path. Pull it.",
    "start": "3308199",
    "end": "3311432"
  },
  {
    "text": "So the other case is this.",
    "start": "3318166",
    "end": "3324033"
  },
  {
    "text": "We know that we have a subset of the path at this point.",
    "start": "3325533",
    "end": "3331633"
  },
  {
    "text": "And if that's shorter, dot length is",
    "start": "3333000",
    "end": "3339199"
  },
  {
    "text": "grade 2 and pull path dot length. Let the previous match share this one.",
    "start": "3339199",
    "end": "3345599"
  },
  {
    "text": "Otherwise we don't do anything.",
    "start": "3349500",
    "end": "3351066"
  },
  {
    "text": "Still not fitting that point.",
    "start": "3440699",
    "end": "3443133"
  },
  {
    "text": "I think we have an empty set. In the console. Well, I was just logging.",
    "start": "3451666",
    "end": "3456899"
  },
  {
    "text": "What's that thing? In the console, we have an empty set, I don't know. Oh, yeah, we do.",
    "start": "3459699",
    "end": "3464633"
  },
  {
    "text": "OK. So, none of that-- we're not getting any directories",
    "start": "3466133",
    "end": "3471932"
  },
  {
    "text": "in those paths.",
    "start": "3472266",
    "end": "3473300"
  },
  {
    "text": "I guess we can just go back to doing this.",
    "start": "3490733",
    "end": "3494833"
  },
  {
    "text": "And then get out Here, retrieve",
    "start": "3503533",
    "end": "3509399"
  },
  {
    "text": "Try to build the end.",
    "start": "3551466",
    "end": "3552800"
  },
  {
    "text": "Got to do.",
    "start": "3556800",
    "end": "3557433"
  },
  {
    "text": "Scratch man pose. All right.",
    "start": "3580300",
    "end": "3582333"
  },
  {
    "text": "So I guess now If we didn't have any content here, that still wouldn't work. Well, it's going to allow us to set up a",
    "start": "3592133",
    "end": "3598932"
  },
  {
    "text": "watcher for that directory. Which then, based on the events, we can",
    "start": "3598933",
    "end": "3604466"
  },
  {
    "text": "filter out like paths that we want, right? Yeah. Because all we need right",
    "start": "3604466",
    "end": "3609766"
  },
  {
    "text": "now is just directories. We still need to solve the problem of",
    "start": "3609766",
    "end": "3615933"
  },
  {
    "text": "How bad is it to make a source an eventful constructor?",
    "start": "3618399",
    "end": "3621300"
  },
  {
    "text": "There will be a pain because on the common phone queue you'll have to like",
    "start": "3626933",
    "end": "3630265"
  },
  {
    "text": "Unwrap it to your applied plugins. Oh yeah, that's right.",
    "start": "3635433",
    "end": "3638466"
  },
  {
    "text": "So if we just combine these",
    "start": "3640866",
    "end": "3644833"
  },
  {
    "text": "to the stream of events It's probably It'll work.",
    "start": "3648100",
    "end": "3653166"
  },
  {
    "text": "Probably what we gotta do.",
    "start": "3653633",
    "end": "3654899"
  },
  {
    "text": "Source event.",
    "start": "3659166",
    "end": "3659766"
  },
  {
    "text": "And this will have to be a generic",
    "start": "3676533",
    "end": "3678600"
  },
  {
    "text": "Where is our output? It's got mid-run contents.",
    "start": "3682100",
    "end": "3684566"
  },
  {
    "text": "Would it be ID? Yeah, it would be ID.",
    "start": "3745399",
    "end": "3748099"
  },
  {
    "text": "And types of variance innovations. Get rid of it.",
    "start": "3758333",
    "end": "3764500"
  },
  {
    "text": "And Don't need that. Okay",
    "start": "3765199",
    "end": "3768666"
  },
  {
    "text": "I guess we also need No, we don't need change.",
    "start": "3797800",
    "end": "3801600"
  },
  {
    "text": "I don't think we need it right now, though.",
    "start": "3808800",
    "end": "3811166"
  },
  {
    "text": "We're not sticking this transform working on the output. So I guess",
    "start": "3820000",
    "end": "3824333"
  },
  {
    "text": "What we could do Stream filter? Or",
    "start": "3825766",
    "end": "3830833"
  },
  {
    "text": "Just do",
    "start": "3833166",
    "end": "3833766"
  },
  {
    "text": "And why is there What is this a bit too in?",
    "start": "3886733",
    "end": "3891432"
  },
  {
    "text": "And then it's the text.",
    "start": "3894699",
    "end": "3895633"
  },
  {
    "text": "Partish in the stream and then merge them.",
    "start": "3911000",
    "end": "3913333"
  },
  {
    "text": "This seems like a little work. This is probably",
    "start": "3918033",
    "end": "3922233"
  },
  {
    "text": "It would probably It is probably a partition and merge, but",
    "start": "3924833",
    "end": "3930932"
  },
  {
    "text": "around. So",
    "start": "3932500",
    "end": "3936233"
  },
  {
    "text": "We'll need to super-ride them out.",
    "start": "3940899",
    "end": "3944399"
  },
  {
    "text": "Merge them back. In an ordered fashion, right?",
    "start": "3951899",
    "end": "3955966"
  },
  {
    "text": "If that's even possible. We can't make that guarantee actually because",
    "start": "3959199",
    "end": "3964300"
  },
  {
    "text": "can't the the function the stream that's the transformation stream return more elements?",
    "start": "3965399",
    "end": "3971733"
  },
  {
    "text": "I guess those would have to all be processed before Do we need the guarantee ordering?",
    "start": "3972566",
    "end": "3977933"
  },
  {
    "text": "I guess my question here. There is a way of doing it, but",
    "start": "3977933",
    "end": "3984533"
  },
  {
    "text": "is a little bit convoluted",
    "start": "3984533",
    "end": "3987599"
  },
  {
    "text": "It's a lot of work to preserve this, I feel. You were really interested in this API",
    "start": "4059666",
    "end": "4065433"
  },
  {
    "text": "last time, so we gotta keep it.",
    "start": "4065433",
    "end": "4070100"
  },
  {
    "text": "There was an API from the stream.",
    "start": "4082000",
    "end": "4085600"
  },
  {
    "text": "Oh, we can just condition the stream.",
    "start": "4088266",
    "end": "4090033"
  },
  {
    "text": "Otherwise, we send it to the events.",
    "start": "4130433",
    "end": "4133366"
  },
  {
    "text": "Yeah, we need to do this. the events here.",
    "start": "4154633",
    "end": "4159133"
  },
  {
    "text": "I guess, in this case, we need to make sure that the event has processed before proceeding.",
    "start": "4173500",
    "end": "4179466"
  },
  {
    "text": "Sounds like we need to push it to ferret as well. Or latch or something, and then, like, await it.",
    "start": "4184366",
    "end": "4191266"
  },
  {
    "text": "And then we need to make much",
    "start": "4191933",
    "end": "4194033"
  },
  {
    "text": "let's close to start with, and then, yeah, restart.",
    "start": "4197500",
    "end": "4201233"
  },
  {
    "text": "Big start, isn't it?",
    "start": "4203733",
    "end": "4206266"
  },
  {
    "text": "Then we have to make sure the latch is close to start with.",
    "start": "4225366",
    "end": "4230366"
  },
  {
    "text": "And I'm concerned across the latch offer it await.",
    "start": "4239800",
    "end": "4244866"
  },
  {
    "text": "And then, now we can go mailbox",
    "start": "4249800",
    "end": "4254600"
  },
  {
    "text": "to stream. approach.",
    "start": "4257100",
    "end": "4261433"
  },
  {
    "text": "And then we can offer that to our solution.",
    "start": "4262699",
    "end": "4264766"
  },
  {
    "text": "So it doesn't solve the case, or we might want to eliminate requirements.",
    "start": "4304466",
    "end": "4308366"
  },
  {
    "text": "This one.",
    "start": "4333100",
    "end": "4335766"
  },
  {
    "text": "One is source top provided?",
    "start": "4371833",
    "end": "4373100"
  },
  {
    "text": "Just some redefined some predefined requirements.",
    "start": "4378800",
    "end": "4386600"
  },
  {
    "text": "So here, what are we dealing with?",
    "start": "4420666",
    "end": "4424833"
  },
  {
    "text": "The output.",
    "start": "4425966",
    "end": "4426432"
  },
  {
    "text": "And then, in this case, it would be make more sense to make this a bit of a same solution.",
    "start": "4438366",
    "end": "4444500"
  },
  {
    "text": "And then it takes the output and then does some stuff to it.",
    "start": "4448766",
    "end": "4454133"
  },
  {
    "text": "And just returns a new stream?",
    "start": "4454366",
    "end": "4455600"
  },
  {
    "text": "Or a new source.",
    "start": "4459566",
    "end": "4460333"
  },
  {
    "text": "Yeah, let's try it.",
    "start": "4471733",
    "end": "4472666"
  },
  {
    "text": "I was really excited to get to see coordination of all this streaming business.",
    "start": "4481199",
    "end": "4485500"
  },
  {
    "text": "Alright, it's a disappoint. Okay, I'm pretty sure it would have ended up being really convoluted and probably unnecessary.",
    "start": "4490366",
    "end": "4496533"
  },
  {
    "text": "Okay.",
    "start": "4530399",
    "end": "4531032"
  },
  {
    "text": "The effect in Sidemap Effect, it looks like, is causing problems.",
    "start": "4552433",
    "end": "4556399"
  },
  {
    "text": "There is returning",
    "start": "4560233",
    "end": "4561399"
  },
  {
    "text": "e2 in source for bondage.",
    "start": "4566533",
    "end": "4568466"
  },
  {
    "text": "It could be because if we're narrowing to we're narrowing to added coptates to",
    "start": "4599366",
    "end": "4604633"
  },
  {
    "text": "maybe it's thinking we're only getting removed and they succeed?",
    "start": "4604633",
    "end": "4606966"
  },
  {
    "text": "I already need to re-emit that output back into the event.",
    "start": "4616766",
    "end": "4620765"
  },
  {
    "text": "But here we go.",
    "start": "4622633",
    "end": "4624199"
  },
  {
    "text": "So, I'm going to explain the contents issue. I'm not sure if the deal is with context, but",
    "start": "4647533",
    "end": "4652299"
  },
  {
    "text": "Why is it having such a hard time there?",
    "start": "4706399",
    "end": "4709133"
  },
  {
    "text": "Yeah, maybe because it's narrowing it's having problems? Maybe.",
    "start": "4716266",
    "end": "4721466"
  },
  {
    "text": "It's supposed to be talked to event.added",
    "start": "4722333",
    "end": "4728000"
  },
  {
    "text": "Or just what about just a Event on event.",
    "start": "4728500",
    "end": "4731333"
  },
  {
    "text": "Because the As the annotated type.",
    "start": "4746166",
    "end": "4747966"
  },
  {
    "text": "I think you have it in the Global scope.",
    "start": "4754366",
    "end": "4757733"
  },
  {
    "text": "Yeah, so it's something to do in their own.",
    "start": "4760366",
    "end": "4762866"
  },
  {
    "text": "So we unified a stream.",
    "start": "4770366",
    "end": "4774500"
  },
  {
    "text": "So here",
    "start": "4783733",
    "end": "4785600"
  },
  {
    "text": "So this needs to be like an added event, right? I guess.",
    "start": "4805666",
    "end": "4809100"
  },
  {
    "text": "Yeah. I think keeping this type small is fine.",
    "start": "4811166",
    "end": "4817566"
  },
  {
    "text": "We need to integrate our watch mode.",
    "start": "4821299",
    "end": "4822865"
  },
  {
    "text": "So when watch mode is happening it will be running a separate fiber.",
    "start": "4826733",
    "end": "4831433"
  },
  {
    "text": "Then pumping events. And",
    "start": "4832299",
    "end": "4836700"
  },
  {
    "text": "you still need to have the initial run there.",
    "start": "4838966",
    "end": "4842700"
  },
  {
    "text": "So in watch mode, instead of a single run stream you'd probably need some kind of like.",
    "start": "4856866",
    "end": "4861133"
  },
  {
    "text": "You'd want to do the first initial run and then switch to like some kind of",
    "start": "4864466",
    "end": "4871899"
  },
  {
    "text": "mailbox, as it went. So I guess in watch mode we could create",
    "start": "4872100",
    "end": "4877500"
  },
  {
    "text": "a mailbox.",
    "start": "4879766",
    "end": "4880433"
  },
  {
    "text": "And here we use put our events in there.",
    "start": "4889366",
    "end": "4893432"
  },
  {
    "text": "And then we're going to offer like initial paths.",
    "start": "4895899",
    "end": "4900433"
  },
  {
    "text": "What if we do like additions",
    "start": "4917399",
    "end": "4920799"
  },
  {
    "text": "And then we process them separately, and manage them.",
    "start": "4946366",
    "end": "4951866"
  },
  {
    "text": "Sounds good to me. Seems like it would work, right?",
    "start": "4956133",
    "end": "4958633"
  },
  {
    "text": "I think we could just make this",
    "start": "4963633",
    "end": "4966099"
  },
  {
    "text": "It's pretty easy.",
    "start": "4970133",
    "end": "4970765"
  },
  {
    "text": "This is a synchronous function.",
    "start": "4978766",
    "end": "4979966"
  },
  {
    "text": "It's generic, so",
    "start": "5022366",
    "end": "5024433"
  },
  {
    "text": "I did. It's not the best. It's also not that hard",
    "start": "5030533",
    "end": "5036333"
  },
  {
    "text": "to just add constructors. No, it's not.",
    "start": "5036333",
    "end": "5040466"
  },
  {
    "text": "You got it. Yield it or Or does that return a stream?",
    "start": "5121566",
    "end": "5126899"
  },
  {
    "text": "The slow meter one makes the update.",
    "start": "5129766",
    "end": "5131933"
  },
  {
    "text": "Okay. So now we need just to set up our Watchers on the top level directory.",
    "start": "5157633",
    "end": "5163600"
  },
  {
    "text": "We're actually mapping the paths in both cases to an event added thingy.",
    "start": "5164366",
    "end": "5169432"
  },
  {
    "text": "We could just do the path mapping to the event added above, even watch mode.",
    "start": "5170100",
    "end": "5175099"
  },
  {
    "text": "And then return the metas inside both the offer and Yeah.",
    "start": "5175799",
    "end": "5180399"
  },
  {
    "text": "I was speaking about that, but I liked your idea. So I stole it as my own.",
    "start": "5192966",
    "end": "5199033"
  },
  {
    "text": "And then I'm here",
    "start": "5215566",
    "end": "5216666"
  },
  {
    "text": "But if I still not watch",
    "start": "5238366",
    "end": "5241566"
  },
  {
    "text": "Get your readout pod. So we need to filter Stream.run for each",
    "start": "5243466",
    "end": "5251000"
  },
  {
    "text": "event. I think that we do want to filter events to make sure that the path of the event",
    "start": "5253533",
    "end": "5259899"
  },
  {
    "text": "matches some path that we're watching. Like, we already spoke before about how",
    "start": "5259899",
    "end": "5265766"
  },
  {
    "text": "the directories might contain other stuff. Right?",
    "start": "5265766",
    "end": "5270799"
  },
  {
    "text": "Directories might contain other stuff. Right, because if we're watching a directory and it has content in it",
    "start": "5277633",
    "end": "5284666"
  },
  {
    "text": "I mean, in theory, our glob should only be pointing to the files of our eventress.",
    "start": "5285333",
    "end": "5291133"
  },
  {
    "text": "So I guess we don't have to worry about that right now. We'll just figure out if it becomes a problem.",
    "start": "5291133",
    "end": "5295265"
  },
  {
    "text": "So do you have any difference that matches the glob? No, I was saying, like",
    "start": "5301333",
    "end": "5306133"
  },
  {
    "text": "Because, like, when we're adding the initial events, we always have the exact",
    "start": "5307366",
    "end": "5313200"
  },
  {
    "text": "path to the files, I think. But then when we go back up to the",
    "start": "5313200",
    "end": "5318299"
  },
  {
    "text": "directories, there's a chance we may end up collecting files in those directories to watch that are irrelevant.",
    "start": "5318299",
    "end": "5325133"
  },
  {
    "text": "So we may want to consider here while we're watching doing a stream.filter and",
    "start": "5325366",
    "end": "5330633"
  },
  {
    "text": "making sure that the event.path is included in the paths that we got from the glob.",
    "start": "5330633",
    "end": "5335199"
  },
  {
    "text": "Does glob have like in a match? I think Minimatch does, which glob is based on, I think.",
    "start": "5338133",
    "end": "5344466"
  },
  {
    "text": "Glob sync. Stream iterates stream sync.",
    "start": "5349299",
    "end": "5351633"
  },
  {
    "text": "Is there a way of just making sure our glob matches something?",
    "start": "5369299",
    "end": "5373033"
  },
  {
    "text": "I think under the hood glob uses minimatch.",
    "start": "5374366",
    "end": "5382299"
  },
  {
    "text": "Minimatch is the library that uses under the hood.",
    "start": "5397366",
    "end": "5399366"
  },
  {
    "text": "Source.",
    "start": "5429266",
    "end": "5429466"
  },
  {
    "text": "I think it's a named export, actually. I think it's like minimatch.minimatch.",
    "start": "5436933",
    "end": "5441466"
  },
  {
    "text": "There's a match function there. What does that do?",
    "start": "5444100",
    "end": "5446500"
  },
  {
    "text": "Let's add in",
    "start": "5452333",
    "end": "5454633"
  },
  {
    "text": "Minimatch.match. Match against the list of files in the",
    "start": "5461500",
    "end": "5466799"
  },
  {
    "text": "style of FN match or glob. If nothing is matched, then return a list.",
    "start": "5466799",
    "end": "5471633"
  },
  {
    "text": "Wait, match against the list of",
    "start": "5476700",
    "end": "5478733"
  },
  {
    "text": "Yeah, so match takes a list of files and then a pattern.",
    "start": "5488366",
    "end": "5495166"
  },
  {
    "text": "We see like regular expressions.",
    "start": "5497700",
    "end": "5503600"
  },
  {
    "text": "Yeah, I think match will do what we want, though. It takes in a list of files and a pattern",
    "start": "5506533",
    "end": "5511799"
  },
  {
    "text": "and checks to see if",
    "start": "5511799",
    "end": "5513199"
  },
  {
    "text": "No, actually, that's not what we want. I think the default minimatch export will do what we want.",
    "start": "5521533",
    "end": "5527666"
  },
  {
    "text": "Not the default, but you know what I mean. Minimatch.minimatch.",
    "start": "5530233",
    "end": "5533133"
  },
  {
    "text": "The named minimatch export.",
    "start": "5535533",
    "end": "5537366"
  },
  {
    "text": "Lowercase minimatch named import.",
    "start": "5542333",
    "end": "5544366"
  },
  {
    "text": "I think it takes a path and a pattern. When we're matching, we can basically",
    "start": "5549366",
    "end": "5555000"
  },
  {
    "text": "pass it the same glob pattern. We're giving it initially to the glob.",
    "start": "5555000",
    "end": "5560866"
  },
  {
    "text": "And just basically say, does the event.path match that glob?",
    "start": "5562666",
    "end": "5568566"
  },
  {
    "text": "Yeah. Here.",
    "start": "5569399",
    "end": "5570766"
  },
  {
    "text": "So there's also I know I'm like throwing a lot at you right now, but in the API, there's a minimatch.filter method, which",
    "start": "5601833",
    "end": "5611433"
  },
  {
    "text": "could be relevant here as well. Because we get a list of",
    "start": "5611433",
    "end": "5617366"
  },
  {
    "text": "Yeah. We can try it this way, see if it works.",
    "start": "5617666",
    "end": "5620799"
  },
  {
    "text": "strand.filter event.",
    "start": "5626366",
    "end": "5629533"
  },
  {
    "text": "So we have a matching path with this point.",
    "start": "5639933",
    "end": "5641733"
  },
  {
    "text": "And then depending",
    "start": "5645366",
    "end": "5646799"
  },
  {
    "text": "on the event, we go to the new box.",
    "start": "5652533",
    "end": "5656899"
  },
  {
    "text": "I think that will work. Let's find out.",
    "start": "5688166",
    "end": "5693200"
  },
  {
    "text": "Oh, you see, to enable I think this I guess we could just set the default. I think the CLI also",
    "start": "5695066",
    "end": "5700899"
  },
  {
    "text": "supports it, sort of.",
    "start": "5700899",
    "end": "5702899"
  },
  {
    "text": "I think. I just don't know if I wired it up at all.",
    "start": "5706100",
    "end": "5710033"
  },
  {
    "text": "Were we providing a node context? Probably in the CLI.",
    "start": "5713799",
    "end": "5719600"
  },
  {
    "text": "Maybe. I actually don't know. Source.",
    "start": "5724333",
    "end": "5728133"
  },
  {
    "text": "Where is our source getting run? In the Document",
    "start": "5730366",
    "end": "5733799"
  },
  {
    "text": "We can actually figure this out by looking at the CLI.",
    "start": "5740366",
    "end": "5744299"
  },
  {
    "text": "So now we have events.",
    "start": "5750600",
    "end": "5752200"
  },
  {
    "text": "So we don't need that anymore. Yeah, we have everything in one stream.",
    "start": "5772766",
    "end": "5776399"
  },
  {
    "text": "We don't need any new to know if it's watch merge. I don't think.",
    "start": "5780899",
    "end": "5785365"
  },
  {
    "text": "And if that's a removal, it won't do this.",
    "start": "5884500",
    "end": "5888000"
  },
  {
    "text": "I think you need to just move everything down one break. Yeah, this one's in, clearly.",
    "start": "5903600",
    "end": "5907433"
  },
  {
    "text": "That's interesting.",
    "start": "5947166",
    "end": "5947533"
  },
  {
    "text": "What is this problem?",
    "start": "5971366",
    "end": "5973366"
  },
  {
    "text": "No, this filter map is supposed to return.",
    "start": "6028066",
    "end": "6030100"
  },
  {
    "text": "What's the type of document.source of events?",
    "start": "6070033",
    "end": "6072666"
  },
  {
    "text": "We're piping off of?",
    "start": "6075799",
    "end": "6076365"
  },
  {
    "text": "I wonder why it's getting that weird type though.",
    "start": "6122899",
    "end": "6126365"
  },
  {
    "text": "Probably something to do over any implementation.",
    "start": "6131700",
    "end": "6136333"
  },
  {
    "text": "Or any type.",
    "start": "6138766",
    "end": "6139399"
  },
  {
    "text": "I'm not going to try to say it's there.",
    "start": "6157333",
    "end": "6158433"
  },
  {
    "text": "Let's see what happens, because I'm just about out of time. Okay, we just need to enable watch mode.",
    "start": "6197000",
    "end": "6205299"
  },
  {
    "text": "Actually, we should be able to do a command.provide sync, or provide a vector.",
    "start": "6222366",
    "end": "6228366"
  },
  {
    "text": "No, we can inject into the environment with one of the other provide methods",
    "start": "6232799",
    "end": "6237932"
  },
  {
    "text": "that you had a while back.",
    "start": "6237933",
    "end": "6239233"
  },
  {
    "text": "Here we should be able to just",
    "start": "6244033",
    "end": "6246433"
  },
  {
    "text": "Generate the layer here.",
    "start": "6251733",
    "end": "6252365"
  },
  {
    "text": "I think that we just need to grab it from there.",
    "start": "6280366",
    "end": "6288399"
  },
  {
    "text": "Why is it a string or boolean? That is Boolean?",
    "start": "6288933",
    "end": "6293799"
  },
  {
    "text": "Well, that's because Config.boolean. Just a stupid mistake on my part. No big deal.",
    "start": "6294033",
    "end": "6299299"
  },
  {
    "text": "Casual. No big deal.",
    "start": "6300533",
    "end": "6302899"
  },
  {
    "text": "We need update our source plugins.",
    "start": "6306133",
    "end": "6307365"
  },
  {
    "text": "Oh yeah, this really want to build",
    "start": "6335000",
    "end": "6338933"
  },
  {
    "text": "the process of once. So you can build",
    "start": "6341633",
    "end": "6346566"
  },
  {
    "text": "the processor once if you call it like a function.",
    "start": "6348500",
    "end": "6353533"
  },
  {
    "text": "Like the actual unified processor.",
    "start": "6356799",
    "end": "6359099"
  },
  {
    "text": "This can be a fake tool.",
    "start": "6362133",
    "end": "6365966"
  },
  {
    "text": "I mean, from now we can check around a bit, but we're going to have to focus later.",
    "start": "6386366",
    "end": "6390265"
  },
  {
    "text": "And then",
    "start": "6435600",
    "end": "6436600"
  },
  {
    "text": "We just need to embed this into a stream at some point. Yeah.",
    "start": "6478399",
    "end": "6483199"
  },
  {
    "text": "We can put it on our to-do list for the next time.",
    "start": "6489399",
    "end": "6491699"
  },
  {
    "text": "One other thing I forgot to do was",
    "start": "6552366",
    "end": "6555333"
  },
  {
    "text": "in document builder",
    "start": "6558000",
    "end": "6559433"
  },
  {
    "text": "get the parcel back in.",
    "start": "6564533",
    "end": "6574399"
  },
  {
    "text": "There's an effect.",
    "start": "6575600",
    "end": "6577133"
  },
  {
    "text": "I think it's called \"parcel watcher\" actually.",
    "start": "6585133",
    "end": "6587966"
  },
  {
    "text": "Okay.",
    "start": "6599366",
    "end": "6600200"
  },
  {
    "text": "I was supplying dependencies here. Yeah, I think I do the",
    "start": "6612433",
    "end": "6618866"
  },
  {
    "text": "node stuff in the CLI.",
    "start": "6618866",
    "end": "6621333"
  },
  {
    "text": "There was a live thingy in the document builder. We were building up a layer there.",
    "start": "6648633",
    "end": "6653066"
  },
  {
    "text": "I can probably just drop it in the CLI for now.",
    "start": "6699600",
    "end": "6702100"
  },
  {
    "text": "Now what?",
    "start": "6804766",
    "end": "6806799"
  },
  {
    "text": "It's not exiting, which is what we want. So now what we can",
    "start": "6810366",
    "end": "6815865"
  },
  {
    "text": "So if we go to the scratchpad, press and edit this guy, and change it to",
    "start": "6816266",
    "end": "6822233"
  },
  {
    "text": "Nope, that didn't work.",
    "start": "6834366",
    "end": "6835433"
  },
  {
    "text": "Maybe some defense for next time. Yeah, I was gonna say, we got to a pretty good point. I feel like maybe we can put in the",
    "start": "6844766",
    "end": "6850899"
  },
  {
    "text": "to-dos to investigate logging for this.",
    "start": "6850899",
    "end": "6860500"
  },
  {
    "text": "Yeah, this I've had this happen to me before too. Something with Neovim, where you get all",
    "start": "6924133",
    "end": "6929799"
  },
  {
    "text": "these weird file system events because of the Yeah.",
    "start": "6929799",
    "end": "6934799"
  },
  {
    "text": "Because of the But anyways, there is",
    "start": "6935133",
    "end": "6940866"
  },
  {
    "text": "It is being We are getting events submitted, so Yeah.",
    "start": "6941333",
    "end": "6946033"
  },
  {
    "text": "This is the swap file. I guess it's just a case of how pathmatch and all working properly.",
    "start": "6946799",
    "end": "6952500"
  },
  {
    "text": "Yeah, it's okay. We can put that in our To-do.",
    "start": "6953433",
    "end": "6956533"
  },
  {
    "text": "To improve our pathmatch here. I'll look into the mini-match stuff as well for next time.",
    "start": "6959000",
    "end": "6965699"
  },
  {
    "text": "Cool. Well, thank you everybody for watching. And I suppose we will",
    "start": "6970933",
    "end": "6977299"
  },
  {
    "text": "see you all next week. Cheers everyone.",
    "start": "6977299",
    "end": "6981200"
  }
]