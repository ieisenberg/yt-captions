[
  {
    "text": "Okay, so,",
    "start": "3599",
    "end": "5718"
  },
  {
    "text": "let's start where we left off last time. So, what did we do last time?",
    "start": "10039",
    "end": "18665"
  },
  {
    "text": "Last time we did some couple of fixes all around the effect cluster.",
    "start": "18665",
    "end": "24520"
  },
  {
    "text": "We did some quick fixes, some little changes.",
    "start": "24854",
    "end": "28725"
  },
  {
    "text": "But today I want to tackle something quite big",
    "start": "29909",
    "end": "34397"
  },
  {
    "text": "and that something is basically move everything from effect platform to effect RPC.",
    "start": "35281",
    "end": "42939"
  },
  {
    "text": "So, what do I mean with that? I mean that right now we have a system.",
    "start": "46676",
    "end": "54616"
  },
  {
    "text": "Let me show you the system that we have right now.",
    "start": "55501",
    "end": "58521"
  },
  {
    "text": "Okay, so, this is the system that we have right now.",
    "start": "60823",
    "end": "67397"
  },
  {
    "text": "Right now the system works by having different processes. This is, for example, the shard manager.",
    "start": "67880",
    "end": "74821"
  },
  {
    "text": "The shard manager is basically the coordinator for all the servers that keep track",
    "start": "75471",
    "end": "81444"
  },
  {
    "text": "of your application server that are running. This one is the shard manager.",
    "start": "81594",
    "end": "86582"
  },
  {
    "text": "And as I start new processes that are able to host your entities",
    "start": "88601",
    "end": "95425"
  },
  {
    "text": "that are called pods, they register themselves to the shard manager",
    "start": "95425",
    "end": "100947"
  },
  {
    "text": "and then any process can message to any entity without knowing in which",
    "start": "101864",
    "end": "108838"
  },
  {
    "text": "server is actually running because this is basically called the location transparency.",
    "start": "108838",
    "end": "114460"
  },
  {
    "text": "You refer to an entity based on its entity ID instead of actually knowing where he",
    "start": "114994",
    "end": "123236"
  },
  {
    "text": "lives over your server. And this is really nice. This also allows your",
    "start": "123236",
    "end": "129175"
  },
  {
    "text": "application to scale because for example, here now I can start a new process,",
    "start": "129175",
    "end": "134263"
  },
  {
    "text": "a new entity manager and this process, this pod,",
    "start": "134580",
    "end": "140103"
  },
  {
    "text": "which is now an entity manager, will register itself to the shard manager",
    "start": "140103",
    "end": "145258"
  },
  {
    "text": "and now the shard manager have seen that there is a new pod that is able to run entities.",
    "start": "145258",
    "end": "151114"
  },
  {
    "text": "And so what will happen is that slowly but surely entities will be",
    "start": "152365",
    "end": "157453"
  },
  {
    "text": "assigned from the old server, will be even out and",
    "start": "157453",
    "end": "163259"
  },
  {
    "text": "moved to a new server and they will balance themselves. Okay, so we have a shard manager,",
    "start": "163259",
    "end": "169365"
  },
  {
    "text": "which is basically a process that coordinates everything. And now the process that can",
    "start": "169699",
    "end": "176189"
  },
  {
    "text": "run entities can be started. They will register themselves to the shard manager.",
    "start": "176189",
    "end": "180777"
  },
  {
    "text": "And then entities, as you can see, will be started to be",
    "start": "182778",
    "end": "188217"
  },
  {
    "text": "balanced with between the two processes that are able to balance the entities.",
    "start": "188217",
    "end": "192704"
  },
  {
    "text": "And now you can see, for example, that entity zero, two, three, four, two, four, six,",
    "start": "194524",
    "end": "199996"
  },
  {
    "text": "will run these processes and that the TT one, six, one is running on these other processes.",
    "start": "200947",
    "end": "206769"
  },
  {
    "text": "So basically you can scale up as you want, as you wish your system. So imagine like, for example,",
    "start": "207770",
    "end": "213843"
  },
  {
    "text": "some system that will spawn up new server when it sees that you're running short",
    "start": "214193",
    "end": "221200"
  },
  {
    "text": "or resources are running to height on its process and spawn up new different services.",
    "start": "221200",
    "end": "226789"
  },
  {
    "text": "And its server will be basically be the same, but they balance out the",
    "start": "227723",
    "end": "232845"
  },
  {
    "text": "load on all the server. And you can set up maybe some threshold that when the server is",
    "start": "232845",
    "end": "238134"
  },
  {
    "text": "not doing enough work, it can shut itself down like I will do now.",
    "start": "238134",
    "end": "244840"
  },
  {
    "text": "And what will happen is that now the pod will see",
    "start": "245424",
    "end": "251013"
  },
  {
    "text": "that the server is not responding anymore. What will happen is that now the shard manager",
    "start": "251080",
    "end": "257019"
  },
  {
    "text": "will assign back the entities to the old server that was running, which is the only one",
    "start": "257136",
    "end": "262825"
  },
  {
    "text": "that is running up right now and slowly everything will start again.",
    "start": "262825",
    "end": "267697"
  },
  {
    "text": "And also there is settings that allows you to control how many entities you want to move",
    "start": "268881",
    "end": "275738"
  },
  {
    "text": "from one server to one other, slowly let's say 5% of the entities",
    "start": "276205",
    "end": "282962"
  },
  {
    "text": "that are living on a server want to move that. 5% of the entities each five minutes",
    "start": "282962",
    "end": "288733"
  },
  {
    "text": "or something like that. And that is in order to avoid that the network shape",
    "start": "288968",
    "end": "294807"
  },
  {
    "text": "of the communication between your entities changes every second.",
    "start": "295007",
    "end": "299962"
  },
  {
    "text": "Because you can imagine every situation where server are going up and down really fast",
    "start": "300479",
    "end": "305434"
  },
  {
    "text": "due to some issues and having, not having that settings basically will let you in trouble",
    "start": "305568",
    "end": "312708"
  },
  {
    "text": "because your network shape will change continuously, which is not ideal. So basically is trying to",
    "start": "312825",
    "end": "319048"
  },
  {
    "text": "keep the entity working. What I also want to say",
    "start": "319048",
    "end": "324754"
  },
  {
    "text": "is that the shard manager is only a coordinator. So let's say that maybe now I start back",
    "start": "324754",
    "end": "331776"
  },
  {
    "text": "the old pod that I had before. Okay, now I started back.",
    "start": "332244",
    "end": "339018"
  },
  {
    "text": "And now you can see that now he registered back himself into the network.",
    "start": "341087",
    "end": "346475"
  },
  {
    "text": "Now he has, and again entities to process. And what you will see is",
    "start": "346909",
    "end": "353316"
  },
  {
    "text": "that even if I shut down the shard manager, everything keeps working.",
    "start": "353316",
    "end": "359889"
  },
  {
    "text": "Because right now, as long the network shape doesn't change too much.",
    "start": "361874",
    "end": "368247"
  },
  {
    "text": "All the pods have a local cache of all the pods that are alive and where entities are living.",
    "start": "368664",
    "end": "374503"
  },
  {
    "text": "So even if your shard manager dies for a moment or takes some time to restart,",
    "start": "375054",
    "end": "379858"
  },
  {
    "text": "you can work, you can have your system working. Federico says, \"I also thought that infra scaling",
    "start": "380426",
    "end": "386399"
  },
  {
    "text": "should be coupled to app code because it can know how and when it should scale.",
    "start": "386399",
    "end": "392304"
  },
  {
    "text": "I see something integrated with Pulumi.\" And Mike exactly says, \"Ideally this can also",
    "start": "392304",
    "end": "397760"
  },
  {
    "text": "instruct K8S exactly.\" Basically, you can have your shard manager",
    "start": "397843",
    "end": "403866"
  },
  {
    "text": "or your app code tell the infrastructure how many entities running, if",
    "start": "404233",
    "end": "409822"
  },
  {
    "text": "maybe it is going to struggle or something. And do that either on",
    "start": "409822",
    "end": "415678"
  },
  {
    "text": "the infrastructure side. So having the infrastructure manage and control",
    "start": "415678",
    "end": "421567"
  },
  {
    "text": "the percentage of the usage of the resources that your pod have or the opposite side.",
    "start": "422385",
    "end": "428941"
  },
  {
    "text": "I think the pods tell infrastructure, \"Okay, I'm struggling. Maybe start something new because I need more resources.\"",
    "start": "429275",
    "end": "434847"
  },
  {
    "text": "Okay, so after this quick demo, maybe we can start doing something.",
    "start": "439685",
    "end": "445408"
  },
  {
    "text": "Okay, let's shut down everything. Okay.",
    "start": "446142",
    "end": "450563"
  },
  {
    "text": "Okay, first thing I want to update effect everywhere",
    "start": "455117",
    "end": "460089"
  },
  {
    "text": "because there were some patches.",
    "start": "461107",
    "end": "464626"
  },
  {
    "text": "So I want to update effect everywhere. So effect and files.json.",
    "start": "466529",
    "end": "474854"
  },
  {
    "text": "Okay. So right now I am on 3.0.6, which is not the latest one,",
    "start": "478424",
    "end": "484613"
  },
  {
    "text": "which is 3.1.1.",
    "start": "485498",
    "end": "486899"
  },
  {
    "text": "Okay, so quick and dirty update 306 becomes 311.",
    "start": "492488",
    "end": "500195"
  },
  {
    "text": "Okay, and then we update the dependency accordingly. The latest one is 0.66.13.",
    "start": "505351",
    "end": "513024"
  },
  {
    "text": "Okay, we set 13.",
    "start": "518697",
    "end": "520149"
  },
  {
    "text": "Okay. And then we have also other dependencies to update.",
    "start": "525387",
    "end": "530775"
  },
  {
    "text": "Let's have a look at cluster node, which is one of the packages that has most dependencies.",
    "start": "532678",
    "end": "537183"
  },
  {
    "text": "Okay, we have effect platform, which now is 0.52.1.",
    "start": "537716",
    "end": "545774"
  },
  {
    "text": "52.1. Here we go.",
    "start": "549578",
    "end": "552214"
  },
  {
    "text": "And platform node should be something like 48. Yeah, 0.48.2.",
    "start": "554783",
    "end": "558604"
  },
  {
    "text": "There should be some more intelligent way to do whatever I shouldn't do. I am doing my audio right now,",
    "start": "564627",
    "end": "570049"
  },
  {
    "text": "but to be honest, I don't care too much because it's something that I usually don't do very much.",
    "start": "570082",
    "end": "576021"
  },
  {
    "text": "So I'm fine with some certain replace. Okay, schema, schema should be 0.66.13.",
    "start": "576589",
    "end": "583779"
  },
  {
    "text": "We already update that. Okay, okay, effect is updated. I think that the only",
    "start": "584029",
    "end": "589118"
  },
  {
    "text": "thing that we are missing that is we have effect RPC in sample app,",
    "start": "589118",
    "end": "595057"
  },
  {
    "text": "which now should be something like 32, right? 0.32.16, okay, only patches, no minors.",
    "start": "595975",
    "end": "602982"
  },
  {
    "text": "16, right? Right.",
    "start": "607186",
    "end": "609922"
  },
  {
    "text": "Okay, now quick PNPM install.",
    "start": "614343",
    "end": "616962"
  },
  {
    "text": "Okay. Oh, platform node.",
    "start": "630542",
    "end": "634580"
  },
  {
    "text": "Did we miss to update that? I think, yeah. Packages, JSON, platform node, right?",
    "start": "636215",
    "end": "646075"
  },
  {
    "text": "Let's see. Package, platform node.",
    "start": "647326",
    "end": "651697"
  },
  {
    "text": "44 requires platform, okay. 52.1 found zeros, okay.",
    "start": "653432",
    "end": "664743"
  },
  {
    "text": "Is in cluster PG, okay, let me have a look. Here, what are you seeing?",
    "start": "665978",
    "end": "672401"
  },
  {
    "text": "Platform node, okay.",
    "start": "674036",
    "end": "676355"
  },
  {
    "text": "Oh, I see. Platform node requires platform, yeah.",
    "start": "679224",
    "end": "684596"
  },
  {
    "text": "Yep.",
    "start": "694323",
    "end": "694606"
  },
  {
    "text": "Let's try again.",
    "start": "700896",
    "end": "702681"
  },
  {
    "text": "And all right, yeah, we also have SQL in here.",
    "start": "710422",
    "end": "715394"
  },
  {
    "text": "SQL PG now is .16, one .16, okay.",
    "start": "715427",
    "end": "722901"
  },
  {
    "text": "And we should have SQL only in here, so we're fine.",
    "start": "723669",
    "end": "727139"
  },
  {
    "text": "Okay, okay, now we do what we do always, PNPM check.",
    "start": "735798",
    "end": "742738"
  },
  {
    "text": "Let's see that we don't have broke nothing. Okay, nothing is broken. Maybe we clean and we build again.",
    "start": "742738",
    "end": "750178"
  },
  {
    "text": "And okay, that seemed to be fine.",
    "start": "755250",
    "end": "758454"
  },
  {
    "text": "And maybe some docgen. Shouldn't be nothing new.",
    "start": "761940",
    "end": "767346"
  },
  {
    "text": "Okay, succeeded. And here we are, okay.",
    "start": "767880",
    "end": "773502"
  },
  {
    "text": "And then some test. And if it passes, we are golden.",
    "start": "775387",
    "end": "784430"
  },
  {
    "text": "Let me have a quick sip of water, while it builds. Oh, also, I forgot my Effect cap.",
    "start": "786181",
    "end": "794506"
  },
  {
    "text": "Okay.",
    "start": "799545",
    "end": "800027"
  },
  {
    "text": "Now this should take some time, because we are waiting for Docker to run",
    "start": "804733",
    "end": "809822"
  },
  {
    "text": "the test containers. But ideally, shouldn't take too much.",
    "start": "809822",
    "end": "816261"
  },
  {
    "text": "And after that, I think we can create the PR.",
    "start": "817713",
    "end": "821683"
  },
  {
    "text": "Yeah, I timed out, but yeah, I'm fine with that. Okay, git checkout",
    "start": "830442",
    "end": "835547"
  },
  {
    "text": "minus P, upgrade effect.",
    "start": "835547",
    "end": "841019"
  },
  {
    "text": "And we are now on effect 3.1.1.",
    "start": "842771",
    "end": "846091"
  },
  {
    "text": "Okay, upgrade effect.",
    "start": "847860",
    "end": "851647"
  },
  {
    "text": "And that's it. Effect, okay. Now I was finally able",
    "start": "856151",
    "end": "862307"
  },
  {
    "text": "to type it right, publish.",
    "start": "862307",
    "end": "864443"
  },
  {
    "text": "Can you use test clock? The test fails on CI and 60s is a bit long for a test.",
    "start": "869765",
    "end": "874953"
  },
  {
    "text": "Yeah, it's not actually the test clock the problem.",
    "start": "874970",
    "end": "879725"
  },
  {
    "text": "The problem is that that test relies on spinning up test container postgres.",
    "start": "880592",
    "end": "887699"
  },
  {
    "text": "And that always took ages,",
    "start": "889101",
    "end": "893572"
  },
  {
    "text": "at least in my setup with test containers. And it goes on timeout because of that.",
    "start": "895007",
    "end": "901230"
  },
  {
    "text": "Because it takes too much to spin up the test container postgres.",
    "start": "902814",
    "end": "907852"
  },
  {
    "text": "Oh yeah, I should indeed look into not running that always. Yeah.",
    "start": "912224",
    "end": "917329"
  },
  {
    "text": "It is something that I need to speak with Fubhy, which is more experienced",
    "start": "920866",
    "end": "927321"
  },
  {
    "text": "with me with testing setup and that setup in order to make sure that that test,",
    "start": "927322",
    "end": "932511"
  },
  {
    "text": "the postgres repo test only works. Yeah",
    "start": "932995",
    "end": "938066"
  },
  {
    "text": "Another thing I thought is that maybe I can use only a single test container",
    "start": "939935",
    "end": "944973"
  },
  {
    "text": "and then just create a different database for each test. And that's it.",
    "start": "945324",
    "end": "950495"
  },
  {
    "text": "Maybe that's something better. And now instead of creating,",
    "start": "951163",
    "end": "956184"
  },
  {
    "text": "let me go to the, instead of creating a",
    "start": "957352",
    "end": "964293"
  },
  {
    "text": "test container for each test, which is what I'm doing right now. I am basically creating here.",
    "start": "964293",
    "end": "971782"
  },
  {
    "text": "Yeah. Yeah, I should do that in the fall.",
    "start": "975454",
    "end": "981159"
  },
  {
    "text": "Yeah. If I make that part of the, yeah.",
    "start": "981443",
    "end": "985213"
  },
  {
    "text": "In the before all, I should start the postgres container, shut it down in after all.",
    "start": "986765",
    "end": "993322"
  },
  {
    "text": "And in each test, I just can provide a different database name. Yeah.",
    "start": "994106",
    "end": "998343"
  },
  {
    "text": "I need to maybe add that to the issue. I need to fix, you know, fix here.",
    "start": "999528",
    "end": "1004750"
  },
  {
    "text": "Oh, I need to sign in. Okay, so upgrade Effect.",
    "start": "1005050",
    "end": "1009204"
  },
  {
    "text": "And I need to add to each.",
    "start": "1017045",
    "end": "1018463"
  },
  {
    "text": "Okay. Do not recreate",
    "start": "1022868",
    "end": "1028974"
  },
  {
    "text": "test container for each test.",
    "start": "1030525",
    "end": "1034746"
  },
  {
    "text": "Instead use before all and after all.",
    "start": "1038433",
    "end": "1043387"
  },
  {
    "text": "And then use a different",
    "start": "1044039",
    "end": "1049243"
  },
  {
    "text": "database for each test.",
    "start": "1049244",
    "end": "1055267"
  },
  {
    "text": "Okay. I should be as an arrangement.",
    "start": "1058453",
    "end": "1062124"
  },
  {
    "text": "Okay. Okay, so let's see our pull request.",
    "start": "1063542",
    "end": "1069965"
  },
  {
    "text": "It's no merging.",
    "start": "1071333",
    "end": "1072234"
  },
  {
    "text": "Squish and merge. That's it. Okay, so now we successfully updated effect.",
    "start": "1076521",
    "end": "1083127"
  },
  {
    "text": "Let's go back to main and pull changes.",
    "start": "1084246",
    "end": "1089133"
  },
  {
    "text": "Okay. So why are you? Oh yeah, I need to restart my,",
    "start": "1090485",
    "end": "1097726"
  },
  {
    "text": "ts server. So we figured out that we have updated effect. Okay, and now everything is fine.",
    "start": "1101012",
    "end": "1107034"
  },
  {
    "text": "Okay, so now we can start having a look at effect RPC",
    "start": "1107636",
    "end": "1111907"
  },
  {
    "text": "and see how we can use it in our project. So let's start by having",
    "start": "1114926",
    "end": "1123969"
  },
  {
    "text": "a look at the examples, RPC HTTP is the one I want to implement.",
    "start": "1123969",
    "end": "1130659"
  },
  {
    "text": "Okay, so we have a schema, a router, a client. Let's start by having a schema.",
    "start": "1131810",
    "end": "1138283"
  },
  {
    "text": "So Effect RPC and we should then have",
    "start": "1139718",
    "end": "1144239"
  },
  {
    "text": "our RPC request either extend a class or a tagged request.",
    "start": "1145157",
    "end": "1152696"
  },
  {
    "text": "Okay, so is there a tagged request from schema",
    "start": "1152697",
    "end": "1158537"
  },
  {
    "text": "which is what I think I will use because at the moment the protocol does not",
    "start": "1158537",
    "end": "1163642"
  },
  {
    "text": "have any stream request. It all relies on request",
    "start": "1163642",
    "end": "1170966"
  },
  {
    "text": "response without having something that is streamed from the server to the client.",
    "start": "1170966",
    "end": "1175387"
  },
  {
    "text": "So let's go back and say right now let's",
    "start": "1176037",
    "end": "1181676"
  },
  {
    "text": "go to here cluster node. Let's start by adding the dependency.",
    "start": "1181676",
    "end": "1187983"
  },
  {
    "text": "Now not on effect platform but on effect RPC",
    "start": "1189100",
    "end": "1195640"
  },
  {
    "text": "both on peer and on dev dependencies and run a pnpm install, pnpm install.",
    "start": "1197359",
    "end": "1206067"
  },
  {
    "text": "That's it.",
    "start": "1207819",
    "end": "1209320"
  },
  {
    "text": "Okay. So back in the days I had",
    "start": "1214326",
    "end": "1220782"
  },
  {
    "text": "something really similar on how effect RPC works",
    "start": "1220782",
    "end": "1226554"
  },
  {
    "text": "because I had those two protocol, protocol files which is",
    "start": "1226555",
    "end": "1232627"
  },
  {
    "text": "the sharding protocol HTTP and the shared manager protocol HTTP",
    "start": "1232627",
    "end": "1237582"
  },
  {
    "text": "which back in the days relied on returning a schema",
    "start": "1239117",
    "end": "1244656"
  },
  {
    "text": "ping shards, yeah struct, yeah a schema. Those are all the requests.",
    "start": "1247409",
    "end": "1252047"
  },
  {
    "text": "Yeah and each request if I remember correctly returns something like an either, right?",
    "start": "1253465",
    "end": "1262224"
  },
  {
    "text": "Let me have a look back like the protocol register and register and if I an else depart",
    "start": "1262240",
    "end": "1267695"
  },
  {
    "text": "or get a send me result, okay. And now the actual HTTP",
    "start": "1268563",
    "end": "1274518"
  },
  {
    "text": "calls are register, yeah",
    "start": "1274519",
    "end": "1278023"
  },
  {
    "text": "and just responds true, okay. And the client uses",
    "start": "1279608",
    "end": "1285213"
  },
  {
    "text": "the register, yeah, okay. Schema body, yeah, this is a register, okay.",
    "start": "1285213",
    "end": "1290819"
  },
  {
    "text": "Yeah, I think that most of these things will effectfully die",
    "start": "1293004",
    "end": "1299277"
  },
  {
    "text": "thanks to effect RPC, yeah.",
    "start": "1299277",
    "end": "1304565"
  },
  {
    "text": "Okay, so let's try maybe starting by the sharding protocol. Okay, so we have the assignShard method",
    "start": "1304933",
    "end": "1312741"
  },
  {
    "text": "which now should become something like export class assignShard,",
    "start": "1315160",
    "end": "1320782"
  },
  {
    "text": "extends schema.taggedrequest,",
    "start": "1322183",
    "end": "1328239"
  },
  {
    "text": "identifier should be something like assignShard.",
    "start": "1330926",
    "end": "1334996"
  },
  {
    "text": "And now we have to provide a tag which will use something like",
    "start": "1339601",
    "end": "1344055"
  },
  {
    "text": "effect cluster node",
    "start": "1345206",
    "end": "1352213"
  },
  {
    "text": "and then sharding protocol HTTP.",
    "start": "1353565",
    "end": "1358620"
  },
  {
    "text": "Maybe just sharding protocol since we are dropping the HTTP and then assignShard.",
    "start": "1359437",
    "end": "1369047"
  },
  {
    "text": "That's very long but to be honest I like it. And then we need to",
    "start": "1369931",
    "end": "1376655"
  },
  {
    "text": "provide the failure schema so are there any failure? No, they aren't so schema.never",
    "start": "1376655",
    "end": "1383979"
  },
  {
    "text": "and are there some response?",
    "start": "1385480",
    "end": "1390085"
  },
  {
    "text": "I think no, so it just schema.void.",
    "start": "1390618",
    "end": "1395457"
  },
  {
    "text": "Okay, and that's it.",
    "start": "1395974",
    "end": "1403765"
  },
  {
    "text": "So all you are missing the self type, yeah.",
    "start": "1404866",
    "end": "1410138"
  },
  {
    "text": "AssignShard, yeah, do I remember correctly?",
    "start": "1411206",
    "end": "1415777"
  },
  {
    "text": "Oh no, the other one. I always forget the other of the parameters.",
    "start": "1420115",
    "end": "1423968"
  },
  {
    "text": "Let's see schema.taggedrequest myself, oh yeah.",
    "start": "1428606",
    "end": "1432444"
  },
  {
    "text": "Okay, schema.taggedrequest here and oh, I'm missing the fields, yeah.",
    "start": "1438650",
    "end": "1444522"
  },
  {
    "text": "Those are the fields on my request. Okay.",
    "start": "1445623",
    "end": "1450128"
  },
  {
    "text": "And it is fields after the success type. Okay, so it's the error, the",
    "start": "1454849",
    "end": "1460221"
  },
  {
    "text": "success and then the fields. Okay.",
    "start": "1460221",
    "end": "1463708"
  },
  {
    "text": "And the fields that we have is shards which is basically",
    "start": "1465343",
    "end": "1470749"
  },
  {
    "text": "schema.set, now we have it. HashSet, okay, we didn't",
    "start": "1470749",
    "end": "1477388"
  },
  {
    "text": "have it back in the days. Now we have a offShardID",
    "start": "1477388",
    "end": "1483078"
  },
  {
    "text": "that comes from shardid.schema and that's it.",
    "start": "1485713",
    "end": "1493104"
  },
  {
    "text": "And then we have unassignedShards and I think that I will just copy this one",
    "start": "1498810",
    "end": "1503665"
  },
  {
    "text": "and maybe change the name, unassignedShards.",
    "start": "1504182",
    "end": "1507969"
  },
  {
    "text": "unassignedShart. I will also make it",
    "start": "1510071",
    "end": "1515460"
  },
  {
    "text": "plural since it's actually, I'm sending shards, not only one shard, so it's better.",
    "start": "1515460",
    "end": "1522383"
  },
  {
    "text": "Shards and here, okay, unassignedShards here,",
    "start": "1524035",
    "end": "1528940"
  },
  {
    "text": "here, here and goes the same, okay. And then we have send",
    "start": "1529157",
    "end": "1537665"
  },
  {
    "text": "export class send extentschema.taggedrequest, not class,",
    "start": "1540084",
    "end": "1547058"
  },
  {
    "text": "tagged request here and send",
    "start": "1548376",
    "end": "1553298"
  },
  {
    "text": "and takes in the same no identifier but the same tag,",
    "start": "1556034",
    "end": "1560805"
  },
  {
    "text": "which is this one.",
    "start": "1562357",
    "end": "1562974"
  },
  {
    "text": "But it's send, okay, it never fails",
    "start": "1567929",
    "end": "1573467"
  },
  {
    "text": "but takes in a message,",
    "start": "1574886",
    "end": "1577955"
  },
  {
    "text": "message which is basically a SerializedEnvelope.schema.",
    "start": "1581242",
    "end": "1586181"
  },
  {
    "text": "Okay, and that's it.",
    "start": "1591803",
    "end": "1595622"
  },
  {
    "text": "Oh, this is send result, yeah. So we actually have a",
    "start": "1597876",
    "end": "1605166"
  },
  {
    "text": "failure for our send and that's right, yeah, because it can fail because maybe the",
    "start": "1605166",
    "end": "1610737"
  },
  {
    "text": "entity is not registered or something happened and we have a response,",
    "start": "1610738",
    "end": "1617245"
  },
  {
    "text": "we have a message state, yeah. So now those ones are",
    "start": "1618296",
    "end": "1623735"
  },
  {
    "text": "actually only one type instead of two different schemas and I really like that.",
    "start": "1623735",
    "end": "1630959"
  },
  {
    "text": "And then we have the last one, which is ping shards and I did remain this to",
    "start": "1631442",
    "end": "1641519"
  },
  {
    "text": "ping shards instead of shards. Tagged request, ping shards.",
    "start": "1641519",
    "end": "1647825"
  },
  {
    "text": "Okay, and I don't expect this to fail, so never",
    "start": "1653748",
    "end": "1659621"
  },
  {
    "text": "and I want to return nothing.",
    "start": "1660788",
    "end": "1665777"
  },
  {
    "text": "And has no parameters. This request is used by",
    "start": "1667295",
    "end": "1672333"
  },
  {
    "text": "any pod or the shard manager to ping a pod and",
    "start": "1672333",
    "end": "1677338"
  },
  {
    "text": "effectfully know if it's up and running or if it died, if the pod",
    "start": "1677338",
    "end": "1683394"
  },
  {
    "text": "responds, everything is fine. If the pod doesn't respond, okay, he died.",
    "start": "1683394",
    "end": "1688366"
  },
  {
    "text": "So we have now the schema for the protocol, which is basically the union",
    "start": "1689400",
    "end": "1694022"
  },
  {
    "text": "or all the possible request. But since we are using",
    "start": "1694505",
    "end": "1700178"
  },
  {
    "text": "now Effect RPC, instead of having a schema, we now have a router.",
    "start": "1700178",
    "end": "1707402"
  },
  {
    "text": "Okay, so the router needs to be exported",
    "start": "1711339",
    "end": "1718229"
  },
  {
    "text": "from the part that is handling the server, so cannot be exposed anymore from here.",
    "start": "1718613",
    "end": "1726320"
  },
  {
    "text": "So let's just kill that, okay. I also want to rename",
    "start": "1727555",
    "end": "1733628"
  },
  {
    "text": "this as sharding protocol instead of, and no, I don't want to",
    "start": "1733628",
    "end": "1743104"
  },
  {
    "text": "update imports, okay. And now I want to have sharding service,",
    "start": "1743104",
    "end": "1750978"
  },
  {
    "text": "RPC instead of HTTP.",
    "start": "1751879",
    "end": "1755800"
  },
  {
    "text": "And this will import sharding protocol. And now we need to import everything as RPC",
    "start": "1758052",
    "end": "1765626"
  },
  {
    "text": "from effect/RPC/rpc",
    "start": "1765960",
    "end": "1774886"
  },
  {
    "text": "And we also need the router, I think. Yes, we also need router.",
    "start": "1776871",
    "end": "1782643"
  },
  {
    "text": "As router.",
    "start": "1787565",
    "end": "1788599"
  },
  {
    "text": "From RPC router, and that's it, okay.",
    "start": "1792687",
    "end": "1796023"
  },
  {
    "text": "So this will change a little, so const router equals",
    "start": "1797708",
    "end": "1807502"
  },
  {
    "text": "and let's use the same style of, so RPC router.make",
    "start": "1807502",
    "end": "1814542"
  },
  {
    "text": "and then we handle different kind of requests. So router.make, and now here we handle",
    "start": "1814542",
    "end": "1824786"
  },
  {
    "text": "different kind of requests.",
    "start": "1824786",
    "end": "1826237"
  },
  {
    "text": "So RPC.effect, and the schema is sharding protocol,",
    "start": "1830124",
    "end": "1839132"
  },
  {
    "text": "not HTTP anymore, so need to rename this.",
    "start": "1840101",
    "end": "1843604"
  },
  {
    "text": "I have my mouse, that makes the big change.",
    "start": "1847308",
    "end": "1853247"
  },
  {
    "text": "Yeah, I need to change the mouse, this one, okay. This is dying.",
    "start": "1853464",
    "end": "1857969"
  },
  {
    "text": "Sharding protocol, okay. Let's try by assign shards, okay.",
    "start": "1859003",
    "end": "1864742"
  },
  {
    "text": "And we have the request.",
    "start": "1866544",
    "end": "1869914"
  },
  {
    "text": "And the handler will be basically something like",
    "start": "1874602",
    "end": "1879140"
  },
  {
    "text": "calling sharding.assign and then we pass the hash set. So we'll basically be",
    "start": "1880475",
    "end": "1886464"
  },
  {
    "text": "something like pipe, sharding.sharding.",
    "start": "1886464",
    "end": "1895623"
  },
  {
    "text": "FlatMap, sharding.sharding.assign.",
    "start": "1902763",
    "end": "1908886"
  },
  {
    "text": "What are you complaining about? Oh, pipe, we need to import pipe, yep. And now you should be able",
    "start": "1910204",
    "end": "1915760"
  },
  {
    "text": "to assign request.shards. And that's it.",
    "start": "1915760",
    "end": "1921482"
  },
  {
    "text": "Have a look. Man, it's so clean.",
    "start": "1925286",
    "end": "1929055"
  },
  {
    "text": "This is using effect platform HTTP,",
    "start": "1931359",
    "end": "1935846"
  },
  {
    "text": "and this one instead is using the effect RPC, man.",
    "start": "1936948",
    "end": "1944804"
  },
  {
    "text": "It's so clean. And maybe now I can handle the unassign.",
    "start": "1944805",
    "end": "1951946"
  },
  {
    "text": "Unassign shards, we'll call unassign.",
    "start": "1955349",
    "end": "1959904"
  },
  {
    "text": "And now there are, oh, look, the loader is fully typed. Yeah.",
    "start": "1961055",
    "end": "1965309"
  },
  {
    "text": "Oh. Yeah, I'm still have",
    "start": "1970581",
    "end": "1976037"
  },
  {
    "text": "this one in the old style, but yeah, that even becomes a single line.",
    "start": "1976037",
    "end": "1982276"
  },
  {
    "text": "Yeah, you're right. Because you get for free that fancy thing of,",
    "start": "1982276",
    "end": "1989567"
  },
  {
    "text": "yeah, yeah, yeah, yeah, yeah, yeah, yeah, ooh. Okay, so let's start maybe by, yeah, the proxies.",
    "start": "1989967",
    "end": "1995539"
  },
  {
    "text": "Yeah, that fancy thing. Now you tempted me. Now I want to move to that thing, yeah.",
    "start": "1995973",
    "end": "2006183"
  },
  {
    "text": "Let me just implement those methods and see that everything is running. And then as next",
    "start": "2007201",
    "end": "2012723"
  },
  {
    "text": "tasks, I will move to that to clean up something. So assign, assign, and",
    "start": "2012723",
    "end": "2019797"
  },
  {
    "text": "then we have RPC.effect sharding protocol.",
    "start": "2019797",
    "end": "2024902"
  },
  {
    "text": "Isn't it frowned it up on to use?",
    "start": "2024935",
    "end": "2031359"
  },
  {
    "text": "Frown, I don't know what frown means.",
    "start": "2032443",
    "end": "2034779"
  },
  {
    "text": "Sharding protocol.",
    "start": "2041302",
    "end": "2042203"
  },
  {
    "text": "Ping shard.",
    "start": "2046807",
    "end": "2047625"
  },
  {
    "text": "Oh, by the way, welcome. Effect.succeed true.",
    "start": "2053881",
    "end": "2058269"
  },
  {
    "text": "Oh, not advised to, yeah. I don't actually know, but if Mike says so, I would say that you are",
    "start": "2061288",
    "end": "2068496"
  },
  {
    "text": "perfectly fine by using it.",
    "start": "2068496",
    "end": "2071832"
  },
  {
    "text": "What is this frong app? If you use effect.flatMap and blah, you are already accessing it",
    "start": "2077405",
    "end": "2083060"
  },
  {
    "text": "and using at the same time. So while it's frowned up, yeah, it's in general case, yeah.",
    "start": "2083060",
    "end": "2087698"
  },
  {
    "text": "And now what are the missing requests that I am missing",
    "start": "2093521",
    "end": "2098426"
  },
  {
    "text": "unassigned ping, oh, send message. Yeah.",
    "start": "2098609",
    "end": "2101062"
  },
  {
    "text": "RPC.effect and we have sharding protocol, send,",
    "start": "2105683",
    "end": "2110087"
  },
  {
    "text": "and has a request.",
    "start": "2111322",
    "end": "2112606"
  },
  {
    "text": "Yeah, it's more, yeah, for user apps, yeah.",
    "start": "2119764",
    "end": "2122516"
  },
  {
    "text": "I would say that, yeah, maybe library code, yeah.",
    "start": "2125086",
    "end": "2127555"
  },
  {
    "text": "Sharding protocol send and now send is,",
    "start": "2130958",
    "end": "2134195"
  },
  {
    "text": "send used to do a lot of things because I basically had some kind of RPC",
    "start": "2137448",
    "end": "2142737"
  },
  {
    "text": "that I built myself before. But now I can do something.",
    "start": "2142953",
    "end": "2148843"
  },
  {
    "text": "That is, I can do the same thing.",
    "start": "2151479",
    "end": "2156584"
  },
  {
    "text": "I can type sharding.tag and then effect.flatMap, sharding.",
    "start": "2156600",
    "end": "2163357"
  },
  {
    "text": "And then this one and this one and then request.message and that's it.",
    "start": "2166527",
    "end": "2176887"
  },
  {
    "text": "We have our routers. Lookout is clean the typings that it says",
    "start": "2178606",
    "end": "2185563"
  },
  {
    "text": "all the kind of messages that is able to manage and the environment, the",
    "start": "2185880",
    "end": "2190901"
  },
  {
    "text": "context that it requires.",
    "start": "2190901",
    "end": "2192219"
  },
  {
    "text": "And all of these can basically die",
    "start": "2196707",
    "end": "2199727"
  },
  {
    "text": "and not be a thing.",
    "start": "2202279",
    "end": "2203898"
  },
  {
    "text": "I need to export this, I think, export const router",
    "start": "2207384",
    "end": "2213207"
  },
  {
    "text": "and says that since 1.0.0",
    "start": "2213207",
    "end": "2220147"
  },
  {
    "text": "and I need to say also category.",
    "start": "2221081",
    "end": "2225636"
  },
  {
    "text": "I would say router RPC maybe. Okay, so this is my RPC",
    "start": "2228556",
    "end": "2234595"
  },
  {
    "text": "and now I also need to export the type of the RPC.",
    "start": "2235162",
    "end": "2239700"
  },
  {
    "text": "So export type,",
    "start": "2240851",
    "end": "2243654"
  },
  {
    "text": "sharding service PC",
    "start": "2246640",
    "end": "2250727"
  },
  {
    "text": "equals type of router.",
    "start": "2252046",
    "end": "2255298"
  },
  {
    "text": "And this is the actual router typing because the client will just rely on the type",
    "start": "2257484",
    "end": "2262540"
  },
  {
    "text": "and not on the actual instance of the router.",
    "start": "2263357",
    "end": "2266660"
  },
  {
    "text": "Oops.",
    "start": "2274001",
    "end": "2274018"
  },
  {
    "text": "And now, and client.",
    "start": "2284078",
    "end": "2286814"
  },
  {
    "text": "And now, what we need to do is maybe",
    "start": "2293087",
    "end": "2298075"
  },
  {
    "text": "change the sharding. This was the protocol, okay.",
    "start": "2300878",
    "end": "2306116"
  },
  {
    "text": "This was the service that is exposing the service. Now we can kill all",
    "start": "2307468",
    "end": "2313440"
  },
  {
    "text": "of those dependencies. Okay, okay.",
    "start": "2313440",
    "end": "2319763"
  },
  {
    "text": "And the internal server is not needed anymore. I can kill relying on",
    "start": "2320648",
    "end": "2327338"
  },
  {
    "text": "this, relying on this. Look how it's clean now.",
    "start": "2327338",
    "end": "2333661"
  },
  {
    "text": "Okay, and this is the sharding service. And now we have the shard manager,",
    "start": "2334795",
    "end": "2342318"
  },
  {
    "text": "the shard manager client HTTP",
    "start": "2343954",
    "end": "2347725"
  },
  {
    "text": "and also the pods HTTP. Okay, so now the pods HTTP should be renamed",
    "start": "2351795",
    "end": "2357501"
  },
  {
    "text": "to something like pods RPC because now the pods",
    "start": "2357935",
    "end": "2362957"
  },
  {
    "text": "communication relies on a Effect RPC, not on HTTP anymore.",
    "start": "2362957",
    "end": "2367027"
  },
  {
    "text": "And we need to import sharding protocol that can be renamed into sharding protocol.",
    "start": "2367978",
    "end": "2374218"
  },
  {
    "text": "Rename symbols sharding protocol, that's it. And now, now, now, now, now.",
    "start": "2377604",
    "end": "2385062"
  },
  {
    "text": "Let me see, is HTTP URL.",
    "start": "2386080",
    "end": "2389867"
  },
  {
    "text": "Now this relies on the actual client of the RPC.",
    "start": "2392453",
    "end": "2397524"
  },
  {
    "text": "So I'm curious if the resolver comes from the RPC",
    "start": "2401545",
    "end": "2407067"
  },
  {
    "text": "and HTTP resolver.",
    "start": "2408002",
    "end": "2410137"
  },
  {
    "text": "Yeah, the thing is that resolver to client.",
    "start": "2414808",
    "end": "2419797"
  },
  {
    "text": "Yeah, I would like to have this not rely on",
    "start": "2420264",
    "end": "2425102"
  },
  {
    "text": "the actual HTTP, actually relying just on the platform,",
    "start": "2426520",
    "end": "2431025"
  },
  {
    "text": "the effect RPC, but I need to take a quick look on the effect.website.",
    "start": "2431759",
    "end": "2438315"
  },
  {
    "text": "Typings to see, let me have a look at the API reference",
    "start": "2441235",
    "end": "2445606"
  },
  {
    "text": "and go to effect RPC. Okay, we have the resolver.",
    "start": "2446607",
    "end": "2452129"
  },
  {
    "text": "We can even use resolver on stream to be honest, but yeah, let me look at the resolver to client",
    "start": "2454982",
    "end": "2460637"
  },
  {
    "text": "and resolver to client takes our resolver",
    "start": "2461805",
    "end": "2465676"
  },
  {
    "text": "and makes a client, okay.",
    "start": "2468946",
    "end": "2473367"
  },
  {
    "text": "Okay, resolver.make and this takes something,",
    "start": "2474601",
    "end": "2478889"
  },
  {
    "text": "I'll resolver to client, okay. And now then you can use the client to ask RPC.",
    "start": "2480057",
    "end": "2487765"
  },
  {
    "text": "So let me say that maybe I can request",
    "start": "2489566",
    "end": "2496240"
  },
  {
    "text": "the user to provide a client and then call that",
    "start": "2496240",
    "end": "2501095"
  },
  {
    "text": "to perform the request. Yeah, definitely.",
    "start": "2501445",
    "end": "2504214"
  },
  {
    "text": "Yeah, definitely. I remember that it was",
    "start": "2506834",
    "end": "2512022"
  },
  {
    "text": "relying also on being able to, if I remember correctly, to just type client.",
    "start": "2512022",
    "end": "2519463"
  },
  {
    "text": "Yeah, it's actually using a request resolver, yeah. So ideally I should be able",
    "start": "2519913",
    "end": "2525702"
  },
  {
    "text": "just to yield the request.",
    "start": "2525702",
    "end": "2528856"
  },
  {
    "text": "So if I do something like, let's say,",
    "start": "2531275",
    "end": "2535379"
  },
  {
    "text": "let's try something like const test equals pipe",
    "start": "2537998",
    "end": "2543837"
  },
  {
    "text": "and we just say new ShardingProtocol.PingShard.",
    "start": "2544321",
    "end": "2548909"
  },
  {
    "text": "Okay, and now this should be an effect.",
    "start": "2550844",
    "end": "2554498"
  },
  {
    "text": "Yeah, I need to yield this in new,",
    "start": "2558402",
    "end": "2561038"
  },
  {
    "text": "let's say maybe effect.gen and then function star",
    "start": "2563640",
    "end": "2570864"
  },
  {
    "text": "const a equals yield star",
    "start": "2570864",
    "end": "2579223"
  },
  {
    "text": "new ShardingProtocol.PingShard.",
    "start": "2580791",
    "end": "2585529"
  },
  {
    "text": "I thought that you can, those were requests, so you can, oh, effect.request, yeah.",
    "start": "2586446",
    "end": "2596340"
  },
  {
    "text": "And you need to provide the data source. Okay, okay, now I see. Oh, hy there Milad.",
    "start": "2597958",
    "end": "2603397"
  },
  {
    "text": "How's it going? So we're in the middle of",
    "start": "2604598",
    "end": "2610604"
  },
  {
    "text": "refactoring effect cluster from using platform",
    "start": "2610604",
    "end": "2616976"
  },
  {
    "text": "HTTP server and client to using effect RPC.",
    "start": "2616977",
    "end": "2621248"
  },
  {
    "text": "And we are having a look at the API for our client.",
    "start": "2622883",
    "end": "2629505"
  },
  {
    "text": "And let's start maybe by adding as dependency,",
    "start": "2633076",
    "end": "2638465"
  },
  {
    "text": "maybe effect RPC HTTP,",
    "start": "2641401",
    "end": "2648040"
  },
  {
    "text": "so we can try it out and running a pnp m install.",
    "start": "2648709",
    "end": "2653363"
  },
  {
    "text": "So we install the dependency.",
    "start": "2654765",
    "end": "2657334"
  },
  {
    "text": "And let's start by doing the exact same thing that the example does. So uses both resolver and HTTP resolver.",
    "start": "2660220",
    "end": "2667894"
  },
  {
    "text": "Okay, and then it's constructs the client.",
    "start": "2671865",
    "end": "2676336"
  },
  {
    "text": "I need to import from, import type",
    "start": "2680707",
    "end": "2689633"
  },
  {
    "text": "because I just need the type from effect cluster",
    "start": "2690100",
    "end": "2695605"
  },
  {
    "text": "or maybe just reference the file directly from the sharding service HTTP,",
    "start": "2696673",
    "end": "2703413"
  },
  {
    "text": "sharding service RPC. So this is an HTTP resolver of sharding service.",
    "start": "2704698",
    "end": "2710937"
  },
  {
    "text": "Service, okay, and this, okay, this now builds a function that given a request is",
    "start": "2713273",
    "end": "2719495"
  },
  {
    "text": "able to produce an RPC.result of that, okay.",
    "start": "2719496",
    "end": "2723834"
  },
  {
    "text": "And this is basically resolver.client, okay.",
    "start": "2725585",
    "end": "2729206"
  },
  {
    "text": "Resolver.client is something that takes on her",
    "start": "2731641",
    "end": "2737447"
  },
  {
    "text": "that is either a result, okay.",
    "start": "2737848",
    "end": "2740167"
  },
  {
    "text": "Or effect.request resolver, okay. And then takes resolver",
    "start": "2743553",
    "end": "2749109"
  },
  {
    "text": "and builds a client, okay.",
    "start": "2749109",
    "end": "2751744"
  },
  {
    "text": "And then, just fine.",
    "start": "2758435",
    "end": "2762556"
  },
  {
    "text": "And then the client is something that takes a request, okay.",
    "start": "2765158",
    "end": "2770881"
  },
  {
    "text": "And builds on a RPC resolve, okay. So I think that in the end, I want to basically export",
    "start": "2771114",
    "end": "2777537"
  },
  {
    "text": "just the client, but yeah. Okay, let's start maybe with that.",
    "start": "2777704",
    "end": "2786163"
  },
  {
    "text": "Okay, so when we call the assign shard,",
    "start": "2786847",
    "end": "2793687"
  },
  {
    "text": "now what we want to do is effectfully call just client.",
    "start": "2793904",
    "end": "2799626"
  },
  {
    "text": "This is now the client, oops.",
    "start": "2809169",
    "end": "2811755"
  },
  {
    "text": "Not sure why I copy pasted it twice, but yeah, I'm fine with that.",
    "start": "2816810",
    "end": "2821598"
  },
  {
    "text": "So client, okay, now everything is on error and is on fire because",
    "start": "2822449",
    "end": "2829706"
  },
  {
    "text": "here now we need to  Replace everything with just return client",
    "start": "2829706",
    "end": "2839516"
  },
  {
    "text": "and new ShardingProtocol.AssignShards",
    "start": "2840434",
    "end": "2846873"
  },
  {
    "text": "The assign shards and the shards. And that's it.",
    "start": "2856533",
    "end": "2862806"
  },
  {
    "text": "Yes, that's basically it. The thing is that now that I think about it is that we need to be",
    "start": "2864641",
    "end": "2870647"
  },
  {
    "text": "able to build dynamically client for each port address",
    "start": "2870647",
    "end": "2877653"
  },
  {
    "text": "because a single pod is able to communicate with different pods and",
    "start": "2878121",
    "end": "2883293"
  },
  {
    "text": "each pod has its hosting API.",
    "start": "2883293",
    "end": "2887514"
  },
  {
    "text": "Yeah. So what do we do?",
    "start": "2888315",
    "end": "2893286"
  },
  {
    "text": "Maybe we do something, let's start simple, but I'll do something like function.",
    "start": "2894221",
    "end": "2899876"
  },
  {
    "text": "We need something that function make that takes in a build client",
    "start": "2902596",
    "end": "2908118"
  },
  {
    "text": "and this build client takes a pod address which is a podAddress.PodAddress",
    "start": "2909519",
    "end": "2917394"
  },
  {
    "text": "and given the pod address creates an RPC.client for RPC.client, right?",
    "start": "2918445",
    "end": "2927020"
  },
  {
    "text": "Did I import that? I didn't import that. Import everything as RPC from effect RPC.",
    "start": "2928321",
    "end": "2937564"
  },
  {
    "text": "RPC. Okay.",
    "start": "2939649",
    "end": "2944453"
  },
  {
    "text": "RPC.RPC RPC.client",
    "start": "2946573",
    "end": "2950894"
  },
  {
    "text": "Where is this exposed the client type? Oh, it's not in here,",
    "start": "2958635",
    "end": "2964608"
  },
  {
    "text": "it's in the resolver. Okay. So we already have resolver.",
    "start": "2964608",
    "end": "2970247"
  },
  {
    "text": "So resolver.client. Okay.",
    "start": "2970897",
    "end": "2975385"
  },
  {
    "text": "And it takes an effect of request resolver.",
    "start": "2979306",
    "end": "2984494"
  },
  {
    "text": "Okay. So a client and maybe we should pass in the sharding service RPC, right?",
    "start": "2985028",
    "end": "2992035"
  },
  {
    "text": "No. It's not what you're looking for. What are you looking for?",
    "start": "2992569",
    "end": "2999326"
  },
  {
    "text": "Let's see. Client.",
    "start": "2999876",
    "end": "3002345"
  },
  {
    "text": "I want to be able to understand. This is a client, the",
    "start": "3006683",
    "end": "3012656"
  },
  {
    "text": "client is basically something that takes a request and builds an RPC, RPC result",
    "start": "3012656",
    "end": "3018744"
  },
  {
    "text": "for that request. So maybe I could use that.",
    "start": "3019679",
    "end": "3029406"
  },
  {
    "text": "Hmm. You know, in the end I want something that",
    "start": "3030206",
    "end": "3035694"
  },
  {
    "text": "builds a client. Yeah. But I'm not sure what",
    "start": "3037347",
    "end": "3042886"
  },
  {
    "text": "this client is expecting. Let's say go to the finishing client. I understand request",
    "start": "3042886",
    "end": "3049558"
  },
  {
    "text": "resolver or an effect that produces a request resolver of an RPC request.",
    "start": "3049559",
    "end": "3057183"
  },
  {
    "text": "Okay. And what I want instead is not that.",
    "start": "3058835",
    "end": "3064457"
  },
  {
    "text": "I want something that.",
    "start": "3065709",
    "end": "3069496"
  },
  {
    "text": "Let's see. I see that in here.",
    "start": "3071848",
    "end": "3074401"
  },
  {
    "text": "It's able to produce what I want because what I want is actually this RPC, RPC result and this should be",
    "start": "3077153",
    "end": "3082425"
  },
  {
    "text": "an alias for an effect if I remember correctly. Yeah, it's an effect.",
    "start": "3082425",
    "end": "3088298"
  },
  {
    "text": "A stream or an effect. So this is what I'm looking for. But I'm struggling",
    "start": "3090016",
    "end": "3097223"
  },
  {
    "text": "finding how it should be tried. Yeah, extends effect that",
    "start": "3097223",
    "end": "3102661"
  },
  {
    "text": "effect request resolver. Oh, I see.",
    "start": "3102662",
    "end": "3107801"
  },
  {
    "text": "I see. It takes a resolver. Yeah. Oh, I see a Mirela.",
    "start": "3108284",
    "end": "3114807"
  },
  {
    "text": "How's it going? Very nice cap. Yeah, indeed.",
    "start": "3116192",
    "end": "3120296"
  },
  {
    "text": "So I need to figure out how to build a resolver",
    "start": "3123967",
    "end": "3129406"
  },
  {
    "text": "without relying on, without relying on the,",
    "start": "3129606",
    "end": "3135478"
  },
  {
    "text": "the specific RPC HTTP. So let's see resolver.",
    "start": "3138448",
    "end": "3144053"
  },
  {
    "text": "RPC, RPC. Resolver.",
    "start": "3145505",
    "end": "3151344"
  },
  {
    "text": "Yeah, it's defining here. So maybe, maybe, maybe, maybe.",
    "start": "3154848",
    "end": "3160453"
  },
  {
    "text": "Hmm.",
    "start": "3161554",
    "end": "3163957"
  },
  {
    "text": "Request resolver. Maybe we can do that a",
    "start": "3168928",
    "end": "3175267"
  },
  {
    "text": "little bit differently, saying something like that and saying that I will able",
    "start": "3175268",
    "end": "3181608"
  },
  {
    "text": "to provide you a request resolver that takes in those requests.",
    "start": "3181608",
    "end": "3188465"
  },
  {
    "text": "Yeah, yeah, yeah, yeah. Let's try it like this. Okay, I am import",
    "start": "3188948",
    "end": "3194387"
  },
  {
    "text": "everything as request resolver",
    "start": "3194387",
    "end": "3198640"
  },
  {
    "text": "from effect request resolver.",
    "start": "3200927",
    "end": "3208485"
  },
  {
    "text": "Okay, and the client of RequestResolver.RequestResolver that",
    "start": "3209302",
    "end": "3216009"
  },
  {
    "text": "is able to address requests of type sharding service RPC.request",
    "start": "3216009",
    "end": "3229472"
  },
  {
    "text": "by using an environment of type R or sharding, sharding.sharding.",
    "start": "3229472",
    "end": "3240432"
  },
  {
    "text": "Yeah, let's try something like that. So right now is not happy",
    "start": "3244837",
    "end": "3250326"
  },
  {
    "text": "because this is not a thing. Sharding server HTTP.",
    "start": "3250326",
    "end": "3255949"
  },
  {
    "text": "This is a router. So maybe we already have instrumentation",
    "start": "3260436",
    "end": "3267442"
  },
  {
    "text": "to do something like RPC.router",
    "start": "3267443",
    "end": "3272966"
  },
  {
    "text": "Let me try something. This one in here, let's try with RPC.",
    "start": "3276569",
    "end": "3285545"
  },
  {
    "text": "RPC.request of sharding service RPC.",
    "start": "3286913",
    "end": "3299108"
  },
  {
    "text": "No, this is not my one. I wanted something like to be able from the router",
    "start": "3302562",
    "end": "3308268"
  },
  {
    "text": "to extract the types. But yeah, I think that is exposed from, yeah.",
    "start": "3308534",
    "end": "3314974"
  },
  {
    "text": "I need to export export type sharding service RPC request",
    "start": "3314974",
    "end": "3321564"
  },
  {
    "text": "equals router.router.request",
    "start": "3322665",
    "end": "3330974"
  },
  {
    "text": "of type of router. Yep, type of router, yes.",
    "start": "3330974",
    "end": "3339649"
  },
  {
    "text": "And now this should be all the individual requests. Perfect, perfect, perfect, perfect.",
    "start": "3341167",
    "end": "3350109"
  },
  {
    "text": "And now that we have the type of the single request that can be handled,",
    "start": "3353713",
    "end": "3359401"
  },
  {
    "text": "maybe we can do something like sharding service. Where's my cursor right now?",
    "start": "3359402",
    "end": "3365341"
  },
  {
    "text": "Yeah, shardingserviceRPC.",
    "start": "3365708",
    "end": "3369379"
  },
  {
    "text": "sharding service RPC, oh, everything has,",
    "start": "3371731",
    "end": "3376536"
  },
  {
    "text": "sharding service RPC.request.",
    "start": "3377553",
    "end": "3385428"
  },
  {
    "text": "Request resolver, request resolver of this.",
    "start": "3398007",
    "end": "3400877"
  },
  {
    "text": "Follow me more, yeah. Okay.",
    "start": "3404964",
    "end": "3408618"
  },
  {
    "text": "What are you concerned about? Request resolver of sharding does not satisfy that",
    "start": "3410770",
    "end": "3420146"
  },
  {
    "text": "because request of any is not following that.",
    "start": "3422115",
    "end": "3427987"
  },
  {
    "text": "Hmm. Let me try to break",
    "start": "3427987",
    "end": "3433509"
  },
  {
    "text": "this down a step at a time. Let's say that I just",
    "start": "3433509",
    "end": "3439182"
  },
  {
    "text": "want to make something that, let's try just by",
    "start": "3439182",
    "end": "3444620"
  },
  {
    "text": "making it static and say, I want this, okay.",
    "start": "3444620",
    "end": "3449525"
  },
  {
    "text": "I just want to build and be able to extract this and say type A equals this.",
    "start": "3450043",
    "end": "3456265"
  },
  {
    "text": "Are you okay with that? For sure you don't know about error and you also don't know about sharding.",
    "start": "3456849",
    "end": "3463623"
  },
  {
    "text": "Yep, that's true. Import everything as sharding from effect",
    "start": "3463940",
    "end": "3471380"
  },
  {
    "text": "cluster sharding",
    "start": "3471514",
    "end": "3474716"
  },
  {
    "text": "Yeah, and now this is a request resolver. So now can you build a client out of that?",
    "start": "3476686",
    "end": "3480973"
  },
  {
    "text": "No. Because request resolver of request never.",
    "start": "3481991",
    "end": "3488965"
  },
  {
    "text": "Oh, never. It doesn't need any environment. Oh, I see.",
    "start": "3490149",
    "end": "3494704"
  },
  {
    "text": "I see.",
    "start": "3496272",
    "end": "3497073"
  },
  {
    "text": "The client requires no environment. Okay, I see.",
    "start": "3502095",
    "end": "3507917"
  },
  {
    "text": "Yeah. Yeah, because, yeah. Okay, so never.",
    "start": "3508518",
    "end": "3515007"
  },
  {
    "text": "This should work, right?",
    "start": "3518544",
    "end": "3519694"
  },
  {
    "text": "Request resolver of a request. Or effect request.",
    "start": "3527537",
    "end": "3532475"
  },
  {
    "text": "Okay, request resolver is not assigned. Request is not assigned.",
    "start": "3533259",
    "end": "3536779"
  },
  {
    "text": "Why are you telling me this?",
    "start": "3538498",
    "end": "3540533"
  },
  {
    "text": "Request resolver, okay. Request resolver require environment and is capable to,",
    "start": "3547523",
    "end": "3552145"
  },
  {
    "text": "okay, and this is, okay. But resolver.client, this is saying that I can either",
    "start": "3552528",
    "end": "3558301"
  },
  {
    "text": "extend a request resolver that takes any RPC request.",
    "start": "3558301",
    "end": "3562104"
  },
  {
    "text": "RPC request. Oh, RPC request. And I'm not using RPC request,",
    "start": "3564073",
    "end": "3570580"
  },
  {
    "text": "but I am using the schema right now, yeah? Okay. So let's see if the RPC",
    "start": "3571214",
    "end": "3577954"
  },
  {
    "text": "request is just an alias for...",
    "start": "3577954",
    "end": "3581724"
  },
  {
    "text": "Oh, request is some, oh, request all",
    "start": "3586495",
    "end": "3591717"
  },
  {
    "text": "and then you have your tag schema, okay.",
    "start": "3592034",
    "end": "3594921"
  },
  {
    "text": "Extend and set, okay, yeah.",
    "start": "3600676",
    "end": "3602645"
  },
  {
    "text": "So let's see if maybe in all the types",
    "start": "3606082",
    "end": "3611787"
  },
  {
    "text": "exposed by router we have",
    "start": "3611921",
    "end": "3617559"
  },
  {
    "text": "something that will help us. We have context, contextual request,",
    "start": "3617560",
    "end": "3623649"
  },
  {
    "text": "response, response effect. Okay.",
    "start": "3624033",
    "end": "3628286"
  },
  {
    "text": "Yeah, I think I'm trying to just use...",
    "start": "3630139",
    "end": "3634076"
  },
  {
    "text": "What are you telling me, client? Manually, can't you drive it? Yeah, I can drive it from the router.",
    "start": "3635895",
    "end": "3641067"
  },
  {
    "text": "But the thing is that maybe I'm not figuring out correctly the APIs for effect RPC.",
    "start": "3643386",
    "end": "3649025"
  },
  {
    "text": "What I would like to is that I want this spots RPC module to do not rely on the",
    "start": "3649275",
    "end": "3658084"
  },
  {
    "text": "specific kind of RPC, like for example, RPC HTTP.",
    "start": "3658084",
    "end": "3662088"
  },
  {
    "text": "And this is just the example that I copied from the examples",
    "start": "3663623",
    "end": "3669462"
  },
  {
    "text": "that we have right now. Just me, okay.",
    "start": "3670513",
    "end": "3674183"
  },
  {
    "text": "And the thing is that I need to first make a resolver",
    "start": "3675568",
    "end": "3683342"
  },
  {
    "text": "and the resolver unfortunately is in the actual module",
    "start": "3684410",
    "end": "3690049"
  },
  {
    "text": "that relies on the HTTP. I didn't look maybe there is a make,",
    "start": "3690316",
    "end": "3696255"
  },
  {
    "text": "oh, there is a make in here.",
    "start": "3697273",
    "end": "3698724"
  },
  {
    "text": "There is a make in here, yeah. Just write the type router request and then you can write,",
    "start": "3702778",
    "end": "3708868"
  },
  {
    "text": "yeah, I already have that one.",
    "start": "3709118",
    "end": "3711053"
  },
  {
    "text": "And this is this one, which is router, okay.",
    "start": "3714173",
    "end": "3718644"
  },
  {
    "text": "What I'm struggling is finding out how can I have the client type for this?",
    "start": "3719278",
    "end": "3726802"
  },
  {
    "text": "Okay, so this is the router and I need the typing for the client.",
    "start": "3727720",
    "end": "3734060"
  },
  {
    "text": "So basically the function that takes in the request and runs the effect,",
    "start": "3734927",
    "end": "3741484"
  },
  {
    "text": "which I found where it is, that is basically the, not this one,",
    "start": "3742585",
    "end": "3751594"
  },
  {
    "text": "yeah, this one, client.",
    "start": "3752695",
    "end": "3757133"
  },
  {
    "text": "I want this, I want this to be built.",
    "start": "3759101",
    "end": "3764140"
  },
  {
    "text": "Maybe I can go to references and see what its references.",
    "start": "3765925",
    "end": "3768828"
  },
  {
    "text": "From the references. But yeah, it seems to be referenced only here.",
    "start": "3772565",
    "end": "3777520"
  },
  {
    "text": "I want this type that takes the request and builds the RPC.",
    "start": "3779455",
    "end": "3785528"
  },
  {
    "text": "But yeah, there is the request resolver.",
    "start": "3787096",
    "end": "3793386"
  },
  {
    "text": "I expected R to be the single request type, but instead is the request resolver",
    "start": "3794019",
    "end": "3799859"
  },
  {
    "text": "and I am struggling building the request resolver.",
    "start": "3800926",
    "end": "3804080"
  },
  {
    "text": "I expected something like type B equals",
    "start": "3811003",
    "end": "3815274"
  },
  {
    "text": "resolver.client of, and I expected here to put my,",
    "start": "3819161",
    "end": "3823999"
  },
  {
    "text": "let's say for example, sharding service RPC.",
    "start": "3824717",
    "end": "3827603"
  },
  {
    "text": "I fail to understand why you need to do that too. Because the thing is that",
    "start": "3830923",
    "end": "3838347"
  },
  {
    "text": "requirement that I would like to have is have this RPC module to do not rely",
    "start": "3839999",
    "end": "3846522"
  },
  {
    "text": "on the specific RPC implementation being HTTP or whatever RPC protocol will be provided",
    "start": "3846755",
    "end": "3854947"
  },
  {
    "text": "and supported in the future. And in order to be able",
    "start": "3855114",
    "end": "3861036"
  },
  {
    "text": "to have the pod communicate with whatever pod he wants,",
    "start": "3861036",
    "end": "3866025"
  },
  {
    "text": "I need to have a type signature that provides you basically a function",
    "start": "3866425",
    "end": "3872665"
  },
  {
    "text": "that given the pod address, constructs the RPC client",
    "start": "3872798",
    "end": "3877486"
  },
  {
    "text": "that is able to communicate with that pod. So that needs to be dynamic.",
    "start": "3877803",
    "end": "3883325"
  },
  {
    "text": "I cannot just have a static RPC client. I need to have",
    "start": "3883642",
    "end": "3888663"
  },
  {
    "text": "something that is able to build a RPC client given the pod address. So this is basically the function",
    "start": "3888664",
    "end": "3895020"
  },
  {
    "text": "that I'm trying to build. I'm trying to build something that given a function that has the pod",
    "start": "3895020",
    "end": "3901577"
  },
  {
    "text": "address, constructs a client. So basically I want",
    "start": "3901577",
    "end": "3907199"
  },
  {
    "text": "this to be request. and here I have my",
    "start": "3907199",
    "end": "3913305"
  },
  {
    "text": "sharding server RPC, RPC request and this returns effect.",
    "start": "3913305",
    "end": "3919060"
  },
  {
    "text": "effect of request.request dot succeed success of my request.",
    "start": "3919061",
    "end": "3927219"
  },
  {
    "text": "To be honest, it should be something like extends this.",
    "start": "3928337",
    "end": "3931140"
  },
  {
    "text": "Okay. And then if I import everything as request from effect request.",
    "start": "3944036",
    "end": "3957683"
  },
  {
    "text": "Okay. I want to build a type signature that works like this.",
    "start": "3979755",
    "end": "3984093"
  },
  {
    "text": "Okay.",
    "start": "3984927",
    "end": "3985127"
  },
  {
    "text": "So this is independent of which kind of protocol you are using because",
    "start": "3991667",
    "end": "3997640"
  },
  {
    "text": "basically you are just instrumenting your code to say that even I know the pod address,",
    "start": "3997640",
    "end": "4002861"
  },
  {
    "text": "I can give you a function that when called with a specific request that",
    "start": "4003195",
    "end": "4009168"
  },
  {
    "text": "can be one of the protocol, I am able to run it inside an effect with no environment requirement.",
    "start": "4009168",
    "end": "4015274"
  },
  {
    "text": "Or maybe I can have that, but I would like to provide that on top. And I was trying to",
    "start": "4018560",
    "end": "4023615"
  },
  {
    "text": "look at the RPC typings to see if I can use",
    "start": "4023615",
    "end": "4028936"
  },
  {
    "text": "something from the typings that allows me to do that without manually type that.",
    "start": "4028937",
    "end": "4037179"
  },
  {
    "text": "Yeah, I will indeed try to chat with Tim about that. For now, I think that I will use this",
    "start": "4038080",
    "end": "4043302"
  },
  {
    "text": "because the thing is that I failed to understand how the current API is given you are",
    "start": "4046038",
    "end": "4053379"
  },
  {
    "text": "required to first call the actual software implementation and after that you can",
    "start": "4053379",
    "end": "4058901"
  },
  {
    "text": "provide the global resolver to clients, I am failing to",
    "start": "4058901",
    "end": "4064406"
  },
  {
    "text": "understand how this allows you to build something that is agnostic of the kind of protocol you have behind.",
    "start": "4064406",
    "end": "4071713"
  },
  {
    "text": "Yeah. But for now, I will basically use this type signature.",
    "start": "4072164",
    "end": "4076518"
  },
  {
    "text": "Maybe I will not have any requirement on the environment.",
    "start": "4077469",
    "end": "4081273"
  },
  {
    "text": "Yeah, it doesn't. Yeah. It doesn't, but in my opinion,",
    "start": "4084126",
    "end": "4089380"
  },
  {
    "text": "it should provide some kind of this API, right?",
    "start": "4089381",
    "end": "4093569"
  },
  {
    "text": "And okay. So, effectfully we are looking for something like this.",
    "start": "4096088",
    "end": "4100976"
  },
  {
    "text": "Yeah. Okay, so let's say that we have the build client",
    "start": "4101293",
    "end": "4105297"
  },
  {
    "text": "that builds a client to the specific pod address. Okay. And then we need to",
    "start": "4106365",
    "end": "4112320"
  },
  {
    "text": "build our specific functions. Yeah, assuming the protocol is",
    "start": "4112321",
    "end": "4117526"
  },
  {
    "text": "abstracted, except here. So let's say we start copying in,",
    "start": "4117526",
    "end": "4126819"
  },
  {
    "text": "I hate this mouse, I need to change that. I don't think the, even",
    "start": "4127186",
    "end": "4133459"
  },
  {
    "text": "the server is like that at the moment. The server seems to be able to do that at the moment",
    "start": "4133459",
    "end": "4139882"
  },
  {
    "text": "because I was able to write the entire server router",
    "start": "4140315",
    "end": "4144319"
  },
  {
    "text": "at least I can expose the router without knowing which is the, yeah, here for example,",
    "start": "4145687",
    "end": "4152093"
  },
  {
    "text": "I created successfully the router without knowing which is the protocol we",
    "start": "4152344",
    "end": "4159484"
  },
  {
    "text": "give in HTTP or whatever, or that.",
    "start": "4159485",
    "end": "4163088"
  },
  {
    "text": "That works. At least at type level. And the thing that I am",
    "start": "4165557",
    "end": "4171480"
  },
  {
    "text": "failing to is the client. Yeah.",
    "start": "4171480",
    "end": "4173615"
  },
  {
    "text": "Okay. So let's maybe write this one, assign shard.",
    "start": "4178070",
    "end": "4184927"
  },
  {
    "text": "Okay, now you can see that now I want to do something like, yeah, I know the pod address.",
    "start": "4185944",
    "end": "4191199"
  },
  {
    "text": "I know the request that I have. So this is actually build client.",
    "start": "4191784",
    "end": "4196104"
  },
  {
    "text": "Okay. So build client for the given pod address, then send the request.",
    "start": "4196939",
    "end": "4201426"
  },
  {
    "text": "And this is effectively the actual implementation of the assigned shard that I need to provide",
    "start": "4202177",
    "end": "4207933"
  },
  {
    "text": "to build my layer. And that goes the same for unassigned shards,",
    "start": "4208801",
    "end": "4214239"
  },
  {
    "text": "unassigned shards. And then we have ping.",
    "start": "4217242",
    "end": "4221697"
  },
  {
    "text": "Ping. That just takes in a pod address.",
    "start": "4225951",
    "end": "4230121"
  },
  {
    "text": "So new. And the request is just ping with no parameters.",
    "start": "4231773",
    "end": "4238447"
  },
  {
    "text": "And then last one is send message. If I remember, send and get state, yeah.",
    "start": "4240249",
    "end": "4244403"
  },
  {
    "text": "Which used to do quite a few logic, but now shouldn't.",
    "start": "4247523",
    "end": "4252477"
  },
  {
    "text": "Because I can do something like function send and get state",
    "start": "4253912",
    "end": "4258283"
  },
  {
    "text": "of pod address, given a pod address.",
    "start": "4259101",
    "end": "4262754"
  },
  {
    "text": "Dot pod address and message being serialized.",
    "start": "4265023",
    "end": "4274466"
  },
  {
    "text": "Maybe envelop is better naming. Envelope",
    "start": "4275684",
    "end": "4279288"
  },
  {
    "text": "Okay. And I should already have the explicit typing in here.",
    "start": "4283475",
    "end": "4288714"
  },
  {
    "text": "I didn't. Okay, that's fine. And now I should be able now to return build client",
    "start": "4289681",
    "end": "4296755"
  },
  {
    "text": "for pod address.",
    "start": "4299324",
    "end": "4300859"
  },
  {
    "text": "New sharding protocol.",
    "start": "4304479",
    "end": "4307549"
  },
  {
    "text": "Send and this is the message.",
    "start": "4311320",
    "end": "4315139"
  },
  {
    "text": "Message, message, envelope. Yeah, message. Let me rename in the",
    "start": "4318594",
    "end": "4323948"
  },
  {
    "text": "protocol instead of message. Let's rename this to envelope.",
    "start": "4323949",
    "end": "4328487"
  },
  {
    "text": "Yeah, that's better naming.",
    "start": "4331123",
    "end": "4332658"
  },
  {
    "text": "And now the typing for these. Yeah, look at this.",
    "start": "4340132",
    "end": "4344236"
  },
  {
    "text": "So clean. Message state and those are the possible exception that could happen.",
    "start": "4345437",
    "end": "4350676"
  },
  {
    "text": "Yeah. Yeah. And ideally the typing that should be added by RPC",
    "start": "4350876",
    "end": "4358634"
  },
  {
    "text": "should be something like baking RPC dot communication error or something like that.",
    "start": "4359167",
    "end": "4365073"
  },
  {
    "text": "Yeah. If I have a look at the resolver,",
    "start": "4365073",
    "end": "4369678"
  },
  {
    "text": "you should have something like additional errors given RPC.result",
    "start": "4372130",
    "end": "4379905"
  },
  {
    "text": "and these ones should introduce additional errors. Yeah, because we could imagine having errors",
    "start": "4380155",
    "end": "4385444"
  },
  {
    "text": "over the wire. So I expect that RPC results",
    "start": "4385844",
    "end": "4390499"
  },
  {
    "text": "at least introduces new errors. Oh, it doesn't.",
    "start": "4391967",
    "end": "4397356"
  },
  {
    "text": "So maybe all the communication error are automatically moved into defects maybe",
    "start": "4399775",
    "end": "4404880"
  },
  {
    "text": "because yeah, it's something that we don't expect, but yeah.",
    "start": "4405914",
    "end": "4408934"
  },
  {
    "text": "But yeah, in the end I expect this to be something and then return pods.make",
    "start": "4411002",
    "end": "4418727"
  },
  {
    "text": "and we provide unassignShard, unassigned shard, ping, sending it state",
    "start": "4419561",
    "end": "4426218"
  },
  {
    "text": "and now we're happy.",
    "start": "4427519",
    "end": "4430455"
  },
  {
    "text": "Yes. And the only thing that I am curious is that now",
    "start": "4437896",
    "end": "4443685"
  },
  {
    "text": "if we also use the environment R,",
    "start": "4444119",
    "end": "4448440"
  },
  {
    "text": "yeah, this breaks because he expects the environment",
    "start": "4449741",
    "end": "4455346"
  },
  {
    "text": "to be nothing. Yeah.",
    "start": "4456114",
    "end": "4459117"
  },
  {
    "text": "But we can provide it. Yeah. Because we can make this an effect itself",
    "start": "4461970",
    "end": "4470344"
  },
  {
    "text": "and like we did here, we can access the environment in here.",
    "start": "4471480",
    "end": "4476785"
  },
  {
    "text": "Yeah. Let me just think where should be the best point",
    "start": "4477219",
    "end": "4483308"
  },
  {
    "text": "to do that.",
    "start": "4485527",
    "end": "4486878"
  },
  {
    "text": "Packet that environment and event, it should be provided on creation. Yeah. The thing that I want to do is basically",
    "start": "4502644",
    "end": "4508733"
  },
  {
    "text": "I want to convert this what I call the make right now. I want to make this a layer.",
    "start": "4509000",
    "end": "4513255"
  },
  {
    "text": "A layer that takes in a function that constructs a layer that the function takes in build client",
    "start": "4515524",
    "end": "4523081"
  },
  {
    "text": "and the layer may have some environment. Yeah. So maybe I can make these be R,",
    "start": "4524399",
    "end": "4532307"
  },
  {
    "text": "but then, then, then, then I could do something like,",
    "start": "4534726",
    "end": "4540816"
  },
  {
    "text": "I can do something like,",
    "start": "4543185",
    "end": "4545954"
  },
  {
    "text": "return layer, layer.",
    "start": "4548623",
    "end": "4553528"
  },
  {
    "text": "Yeah. So the layer of course, and the resolver construct inside the layer",
    "start": "4555597",
    "end": "4560784"
  },
  {
    "text": "with a fixed end. Yeah. And then resolver construct, yeah.",
    "start": "4560785",
    "end": "4563655"
  },
  {
    "text": "Effect and it's pods, dot,",
    "start": "4566808",
    "end": "4571446"
  },
  {
    "text": "pods, not pods, dot pods. Okay.",
    "start": "4572747",
    "end": "4577868"
  },
  {
    "text": "And then provide the effect, which is effect.gen function star.",
    "start": "4578286",
    "end": "4587495"
  },
  {
    "text": "Okay. This.",
    "start": "4589514",
    "end": "4594953"
  },
  {
    "text": "And here I can do something like const env equals",
    "start": "4597756",
    "end": "4602544"
  },
  {
    "text": "else star effect.context.",
    "start": "4603995",
    "end": "4608533"
  },
  {
    "text": "So I resolve the context preemptively and the context will be of type R.",
    "start": "4610051",
    "end": "4616341"
  },
  {
    "text": "Yes. So.",
    "start": "4617759",
    "end": "4619327"
  },
  {
    "text": "Now I can make this be never.",
    "start": "4623048",
    "end": "4626700"
  },
  {
    "text": "Yes. Now this looks like function and builds in a layer.",
    "start": "4634542",
    "end": "4639447"
  },
  {
    "text": "Yeah, that's perfectly. And now I need to provide dot pipe",
    "start": "4639881",
    "end": "4645587"
  },
  {
    "text": "effect.provide env And that's it.",
    "start": "4647205",
    "end": "4652777"
  },
  {
    "text": "Now, it should be happy. Yeah.",
    "start": "4653328",
    "end": "4656247"
  },
  {
    "text": "So I can have this require some context",
    "start": "4660669",
    "end": "4664155"
  },
  {
    "text": "and just provide that in here. Yes.",
    "start": "4667809",
    "end": "4672814"
  },
  {
    "text": "And now as you can see typings are happy. And now I can kill",
    "start": "4673164",
    "end": "4679303"
  },
  {
    "text": "whatever I had before.",
    "start": "4680188",
    "end": "4683325"
  },
  {
    "text": "Everything in here dies. That's nice.",
    "start": "4686778",
    "end": "4691733"
  },
  {
    "text": "Look at that. How many dependency I don't need anymore.",
    "start": "4693435",
    "end": "4697956"
  },
  {
    "text": "Okay. Some of those I added. This was an internal implementation.",
    "start": "4700992",
    "end": "4705764"
  },
  {
    "text": "Now I don't. And now export function.",
    "start": "4706348",
    "end": "4710201"
  },
  {
    "text": "Can we just use the provide? Can we just use the provide that applies",
    "start": "4711519",
    "end": "4717042"
  },
  {
    "text": "to all the function? I was already using context R.",
    "start": "4717042",
    "end": "4721196"
  },
  {
    "text": "Yeah, I got it. We can. I'm used to this API because yeah.",
    "start": "4722047",
    "end": "4727936"
  },
  {
    "text": "I mean one provide instead of multiple provides. Yeah, we could. I'm used to this because back in the days",
    "start": "4729137",
    "end": "4736478"
  },
  {
    "text": "where I started effect. Yeah. I just learned the 10 APIs I need.",
    "start": "4736561",
    "end": "4741683"
  },
  {
    "text": "So this is one of the 10 APIs I need. And I did everything else with those 10 APIs.",
    "start": "4742017",
    "end": "4747721"
  },
  {
    "text": "But yeah, that could be a point. One can use that different API.",
    "start": "4748673",
    "end": "4752327"
  },
  {
    "text": "And then we have everything puts to make. And now if I tell infer",
    "start": "4753845",
    "end": "4761586"
  },
  {
    "text": "function return type, yeah, let's see. It builds a pod and requires R.",
    "start": "4761586",
    "end": "4770677"
  },
  {
    "text": "Have a look at what is nice. Okay. So now maybe I name this as pods RPC.",
    "start": "4772030",
    "end": "4779354"
  },
  {
    "text": "And since 1.0.0 and categories,",
    "start": "4785276",
    "end": "4792384"
  },
  {
    "text": "layers, given a function that resolves,",
    "start": "4795837",
    "end": "4803678"
  },
  {
    "text": "given a function that resolves RPC client,",
    "start": "4805480",
    "end": "4811035"
  },
  {
    "text": "constructs a pods service,",
    "start": "4815073",
    "end": "4819260"
  },
  {
    "text": "that uses RPC to communicate.",
    "start": "4821429",
    "end": "4826101"
  },
  {
    "text": "Okay. And eventually when I",
    "start": "4831806",
    "end": "4837662"
  },
  {
    "text": "figure out how to use the typings provided from the RPC client,",
    "start": "4837662",
    "end": "4845452"
  },
  {
    "text": "what I can change is that instead of manually typing this function, I can do something like,",
    "start": "4845453",
    "end": "4850708"
  },
  {
    "text": "okay, I'll take in an effect that takes an environment and produces an RPC client",
    "start": "4851192",
    "end": "4856981"
  },
  {
    "text": "that can handle some kind of requests. Yeah.",
    "start": "4858316",
    "end": "4860919"
  },
  {
    "text": "Okay, but this is good enough as a starting point, I think. And now we did the pod",
    "start": "4863488",
    "end": "4871045"
  },
  {
    "text": "part, the client part. And ideally we should be",
    "start": "4871045",
    "end": "4877919"
  },
  {
    "text": "able to run it, I think. Because right now the",
    "start": "4877919",
    "end": "4884909"
  },
  {
    "text": "communication between pods will rely on RPC.",
    "start": "4884909",
    "end": "4888663"
  },
  {
    "text": "So we can go to our example",
    "start": "4889981",
    "end": "4895086"
  },
  {
    "text": "and see that run main is complaining because there are some broken typings.",
    "start": "4895436",
    "end": "4901142"
  },
  {
    "text": "And that's it because we have now, instead of pods it's",
    "start": "4902644",
    "end": "4908249"
  },
  {
    "text": "TDP, we have pods RPC, maybe with the capital P,",
    "start": "4908249",
    "end": "4914105"
  },
  {
    "text": "and sharding service RPC.",
    "start": "4915573",
    "end": "4919143"
  },
  {
    "text": "Okay. And rename this as well.",
    "start": "4921846",
    "end": "4925033"
  },
  {
    "text": "Pods RPC, sharding service RPC as well.",
    "start": "4932207",
    "end": "4938029"
  },
  {
    "text": "Okay. And now it's not sharding service HTTP",
    "start": "4943017",
    "end": "4949958"
  },
  {
    "text": "because here instead I need to provide the router.",
    "start": "4950325",
    "end": "4954996"
  },
  {
    "text": "So let's see, how do we start? Let's go back to the examples",
    "start": "4955647",
    "end": "4961385"
  },
  {
    "text": "and see if how do I build an RPC server.",
    "start": "4961803",
    "end": "4966107"
  },
  {
    "text": "So router, okay. We start with HTTP.router.empty",
    "start": "4967308",
    "end": "4975767"
  },
  {
    "text": "and then we provide thing and launch the layer, okay.",
    "start": "4976234",
    "end": "4982340"
  },
  {
    "text": "And we still need to rely on platform node indeed. Because that is everything with RPC,",
    "start": "4984742",
    "end": "4992066"
  },
  {
    "text": "it's PC, TDP, yeah basically all of those are required. That's fine.",
    "start": "4992333",
    "end": "4997739"
  },
  {
    "text": "And then let's just copy this live one",
    "start": "4999240",
    "end": "5003845"
  },
  {
    "text": "and rename, okay. This is instead of router,",
    "start": "5005930",
    "end": "5011836"
  },
  {
    "text": "we have our sharding service RPC.router",
    "start": "5012403",
    "end": "5020044"
  },
  {
    "text": "And is exposed at a rest API by default, I think.",
    "start": "5021863",
    "end": "5028620"
  },
  {
    "text": "And then we serve the HTTP middleware with log address",
    "start": "5031155",
    "end": "5036094"
  },
  {
    "text": "and the server creates server and this provides",
    "start": "5036995",
    "end": "5042700"
  },
  {
    "text": "basically the implementation for create server and create server comes from HTTP.",
    "start": "5042700",
    "end": "5047655"
  },
  {
    "text": "We need to pass that as well, okay.",
    "start": "5049207",
    "end": "5053745"
  },
  {
    "text": "And then layer, okay.",
    "start": "5054545",
    "end": "5057882"
  },
  {
    "text": "And this builds an HTTP.server, okay. And takes in the port",
    "start": "5063488",
    "end": "5069844"
  },
  {
    "text": "and builds an HTTP live, the HTTP live provides what?",
    "start": "5073398",
    "end": "5079604"
  },
  {
    "text": "Provides",
    "start": "5081472",
    "end": "5082857"
  },
  {
    "text": "merge instead of provide.",
    "start": "5086761",
    "end": "5089097"
  },
  {
    "text": "I need to have this sharding service to provide the,",
    "start": "5092400",
    "end": "5097755"
  },
  {
    "text": "oh right, that's right, yeah. Just provide this one, yeah. And then this is the router",
    "start": "5101976",
    "end": "5109199"
  },
  {
    "text": "and we'll leave in here and that's fine.",
    "start": "5110118",
    "end": "5113888"
  },
  {
    "text": "We also need to provide HTTP live, live, okay.",
    "start": "5115239",
    "end": "5121195"
  },
  {
    "text": "And then RPC pods and this now requires client",
    "start": "5121996",
    "end": "5127735"
  },
  {
    "text": "and the client will be something like, we can maybe do this in line.",
    "start": "5128719",
    "end": "5134474"
  },
  {
    "text": "pod address and this will do",
    "start": "5135176",
    "end": "5141082"
  },
  {
    "text": "whatever the client does. So let's have a look what does the client does",
    "start": "5141082",
    "end": "5145820"
  },
  {
    "text": "and is as this.",
    "start": "5146487",
    "end": "5149607"
  },
  {
    "text": "And we need to add some imports, HTTP resolver and resolver",
    "start": "5157348",
    "end": "5164005"
  },
  {
    "text": "We'll clean up all of these later. Let's just make it work.",
    "start": "5166057",
    "end": "5170061"
  },
  {
    "text": "Okay. Instead of being of a user router,",
    "start": "5175283",
    "end": "5180988"
  },
  {
    "text": "it will be now, HTTP live is not found. It was, oh, oh man.",
    "start": "5181973",
    "end": "5188463"
  },
  {
    "text": "Okay. Yeah, there is something in the formatter",
    "start": "5194969",
    "end": "5201057"
  },
  {
    "text": "that is basically broken. Yeah.",
    "start": "5201242",
    "end": "5206080"
  },
  {
    "text": "The fantastic word of JavaScript tooling, yeah. Save is basically breaking up everything.",
    "start": "5208349",
    "end": "5217475"
  },
  {
    "text": "Provide measures and correctly, yeah.",
    "start": "5222680",
    "end": "5224298"
  },
  {
    "text": "Effects and this, yes. By the way, provide measures is usually sign of the correct layer creation",
    "start": "5228236",
    "end": "5234025"
  },
  {
    "text": "as the provide part should be co-located with creation. Yeah. Right now I need to rearrange everything.",
    "start": "5234025",
    "end": "5239797"
  },
  {
    "text": "I am in the middle of basically rewriting how the layer works. So yeah.",
    "start": "5240114",
    "end": "5243968"
  },
  {
    "text": "HTTP resolver comes from RPC HTTP. Yeah, but indeed I need to change that.",
    "start": "5245386",
    "end": "5251325"
  },
  {
    "text": "Okay. Okay, it seems like it was able to refactor everything.",
    "start": "5252059",
    "end": "5257014"
  },
  {
    "text": "Okay, so pod address, yeah. Sharding service or PC of this kind.",
    "start": "5257598",
    "end": "5265406"
  },
  {
    "text": "And then, (mumbles) make request to client. This now shouldn't work.",
    "start": "5266724",
    "end": "5273397"
  },
  {
    "text": "Yeah, because I was using that. But that is not assignable.",
    "start": "5275483",
    "end": "5281539"
  },
  {
    "text": "So, just close your eyes for a moment and let me see what's wrong.",
    "start": "5282740",
    "end": "5288062"
  },
  {
    "text": "Okay. Pod address is, yeah, because I need to change this one",
    "start": "5289480",
    "end": "5295903"
  },
  {
    "text": "to be something like HTTP.",
    "start": "5297521",
    "end": "5300908"
  },
  {
    "text": "Each pod exposes an HTTP API",
    "start": "5302877",
    "end": "5307348"
  },
  {
    "text": "on pod address.host",
    "start": "5308399",
    "end": "5313537"
  },
  {
    "text": "on the pod address.port",
    "start": "5314438",
    "end": "5319043"
  },
  {
    "text": "slash API slash REST for a moment.",
    "start": "5320795",
    "end": "5323915"
  },
  {
    "text": "I need to change my HTTP import because it seems like that I have imported HTTP",
    "start": "5328436",
    "end": "5335409"
  },
  {
    "text": "from the wrong module.",
    "start": "5335593",
    "end": "5337577"
  },
  {
    "text": "HTTP dot, oh yeah, because this HTTP is the one",
    "start": "5341766",
    "end": "5347922"
  },
  {
    "text": "that is provided by the actual platform.",
    "start": "5348289",
    "end": "5352043"
  },
  {
    "text": "So let me see, no, the client one.",
    "start": "5355363",
    "end": "5358582"
  },
  {
    "text": "Yes, effect platform HTTP client, yes.",
    "start": "5361502",
    "end": "5364555"
  },
  {
    "text": "And the other one that I have is not, is the HTTP server, not the client, yeah.",
    "start": "5367325",
    "end": "5372797"
  },
  {
    "text": "HTTP server. And instead, now I want HTTP to be HTTP client.",
    "start": "5373681",
    "end": "5380888"
  },
  {
    "text": "And now, here HTTP client,",
    "start": "5387294",
    "end": "5392166"
  },
  {
    "text": "not client, HTTP client, not client, HTTP client dot request.prepand, okay.",
    "start": "5392767",
    "end": "5399372"
  },
  {
    "text": "And now, yeah, it's not still not happy about that, but yeah, it should be working",
    "start": "5400257",
    "end": "5407815"
  },
  {
    "text": "because ideally in here, it should take one of the requests and give back that, okay.",
    "start": "5407882",
    "end": "5416140"
  },
  {
    "text": "So to do, ask Tim about better typings.",
    "start": "5417124",
    "end": "5424181"
  },
  {
    "text": "Okay, now, all the errors we have.",
    "start": "5427935",
    "end": "5432973"
  },
  {
    "text": "What are we missing? For me, it's not, I'm sorry, all the time, okay. Effect server, we're not going to server,",
    "start": "5438429",
    "end": "5444668"
  },
  {
    "text": "we're going to pick never, unknown. Okay, we have something that is throwing in unknown,",
    "start": "5444668",
    "end": "5450024"
  },
  {
    "text": "into the layer construction. Oh, this any, yeah.",
    "start": "5451942",
    "end": "5455946"
  },
  {
    "text": "Yeah, this is building unknown, yeah. I will just say never for now.",
    "start": "5458883",
    "end": "5465656"
  },
  {
    "text": "And now you're happy, now you're happy. And now I have some imports to delete.",
    "start": "5467858",
    "end": "5474065"
  },
  {
    "text": "Okay, now we should be up and running.",
    "start": "5476484",
    "end": "5480720"
  },
  {
    "text": "Oh, I also need to do the same exact thing in here, yeah.",
    "start": "5482206",
    "end": "5487177"
  },
  {
    "text": "In here, yeah.",
    "start": "5487378",
    "end": "5491015"
  },
  {
    "text": "Because the shard manager needs to have the same provides, yeah.",
    "start": "5493634",
    "end": "5498255"
  },
  {
    "text": "For now, I think that I will just copy paste them in there and then we'll fix it later, once it works.",
    "start": "5500958",
    "end": "5508015"
  },
  {
    "text": "And then also, let's see, RPC pods, shard manager.",
    "start": "5509834",
    "end": "5517057"
  },
  {
    "text": "And this one, RPC pods.",
    "start": "5517858",
    "end": "5520260"
  },
  {
    "text": "Okay, and now I need to add all the imports, pods RPC.",
    "start": "5523147",
    "end": "5528601"
  },
  {
    "text": "Pods RPC. Okay.",
    "start": "5534725",
    "end": "5540998"
  },
  {
    "text": "And then I need HTTP server, HTTP client,",
    "start": "5543250",
    "end": "5547838"
  },
  {
    "text": "node HTTP client, RPC, HTTP, all of those, yeah.",
    "start": "5549390",
    "end": "5555529"
  },
  {
    "text": "Okay, and we'll provide those, some of those, maybe",
    "start": "5562052",
    "end": "5568108"
  },
  {
    "text": "HTTP client we already have, node client we don't actually use.",
    "start": "5568108",
    "end": "5575416"
  },
  {
    "text": "We also need sharding service RPC. Here goes.",
    "start": "5577084",
    "end": "5582388"
  },
  {
    "text": "Okay, node server HTTP, we need node server HTTP,",
    "start": "5589763",
    "end": "5596554"
  },
  {
    "text": "node server HTTP. Yeah, I need to fix the",
    "start": "5597288",
    "end": "5603327"
  },
  {
    "text": "code style of the examples, but yeah, not bad. I'm up to right now.",
    "start": "5603327",
    "end": "5611185"
  },
  {
    "text": "Manager. Okay. And now,",
    "start": "5611385",
    "end": "5615371"
  },
  {
    "text": "it's best I don't need this one, yeah. Because this is just going about creating, yeah.",
    "start": "5618459",
    "end": "5624048"
  },
  {
    "text": "Nevermind, I don't actually need that. Because the shard",
    "start": "5625532",
    "end": "5631739"
  },
  {
    "text": "measure just needs to interact with the pods, but the shard manager itself",
    "start": "5631739",
    "end": "5637027"
  },
  {
    "text": "doesn't provide any pod functionality.",
    "start": "5637778",
    "end": "5642166"
  },
  {
    "text": "Okay, so moment of truth.",
    "start": "5643550",
    "end": "5648054"
  },
  {
    "text": "Let's see if,",
    "start": "5650608",
    "end": "5652026"
  },
  {
    "text": "PNPM clean, PNPM build.",
    "start": "5656130",
    "end": "5661185"
  },
  {
    "text": "Yeah, it was a pleasure for me as well, Mike. We'll go to it soon as well.",
    "start": "5666974",
    "end": "5671011"
  },
  {
    "text": "Let's try to fix some of the issues. And once it builds, I think",
    "start": "5673664",
    "end": "5681372"
  },
  {
    "text": "that I will close the stream as well and go back next time and see if everything works.",
    "start": "5681372",
    "end": "5687394"
  },
  {
    "text": "So cluster node, the index has some imports that now are missing, pods RPC",
    "start": "5687995",
    "end": "5697788"
  },
  {
    "text": "pods RPC, and sharding protocol RPC.",
    "start": "5699206",
    "end": "5706964"
  },
  {
    "text": "That's sharding protocol, yeah. Sharding protocol, yeah.",
    "start": "5708732",
    "end": "5712686"
  },
  {
    "text": "And sharding service, RPC.",
    "start": "5713988",
    "end": "5718975"
  },
  {
    "text": "Okay, it's building.",
    "start": "5728052",
    "end": "5730004"
  },
  {
    "text": "PNPM check. Oops.",
    "start": "5737811",
    "end": "5742433"
  },
  {
    "text": "What's the issue? Oh, we also have the connect example here.",
    "start": "5744968",
    "end": "5749189"
  },
  {
    "text": "And this relies on just the pods, so it's the same thing as this one, yeah.",
    "start": "5750574",
    "end": "5758198"
  },
  {
    "text": "Yes. Connect. Instead of each the pods, this one,",
    "start": "5759983",
    "end": "5766273"
  },
  {
    "text": "I should measure, need to copy some imports.",
    "start": "5767091",
    "end": "5770677"
  },
  {
    "text": "Pods RPC, pods RPC, save.",
    "start": "5777768",
    "end": "5782673"
  },
  {
    "text": "Okay, sharding service RPC.",
    "start": "5783524",
    "end": "5787844"
  },
  {
    "text": "And HTTP client, yes. HTTP client.",
    "start": "5797771",
    "end": "5802459"
  },
  {
    "text": "Okay. No. Okay, everything is building.",
    "start": "5811819",
    "end": "5817574"
  },
  {
    "text": "PNPM test. But actually it's not tested, so yeah.",
    "start": "5818625",
    "end": "5824014"
  },
  {
    "text": "I'm sure that this will work. So let's try again.",
    "start": "5824531",
    "end": "5831271"
  },
  {
    "text": "Let's see if it runs. Okay, so let's see, start",
    "start": "5832556",
    "end": "5839046"
  },
  {
    "text": "by starting the manager.",
    "start": "5839046",
    "end": "5841013"
  },
  {
    "text": "And transport error.",
    "start": "5844468",
    "end": "5846236"
  },
  {
    "text": "Oh, this is okay. Let's start first the chart.",
    "start": "5849773",
    "end": "5854143"
  },
  {
    "text": "I break something, I broke something, something, something, something.",
    "start": "5860734",
    "end": "5865272"
  },
  {
    "text": "I broke something, yeah.",
    "start": "5868208",
    "end": "5869226"
  },
  {
    "text": "Yeah. Oh, I saw what I broke, yeah, I saw what I broke, yeah.",
    "start": "5874298",
    "end": "5879052"
  },
  {
    "text": "The pods RPC, yeah, should, one ping should call that.",
    "start": "5880254",
    "end": "5886410"
  },
  {
    "text": "And effect,",
    "start": "5886844",
    "end": "5889446"
  },
  {
    "text": "catch all cause and shoot",
    "start": "5893650",
    "end": "5898672"
  },
  {
    "text": "effect dot fail. New.",
    "start": "5900807",
    "end": "5905829"
  },
  {
    "text": "And we should have import everything as sharding exception",
    "start": "5906763",
    "end": "5915055"
  },
  {
    "text": "from effect cluster. Sharding exception and",
    "start": "5917724",
    "end": "5924665"
  },
  {
    "text": "new sharding exception.",
    "start": "5924665",
    "end": "5927868"
  },
  {
    "text": "Pod, unreadable exception. Pod address. That's it because",
    "start": "5932206",
    "end": "5937810"
  },
  {
    "text": "whenever the shard manager or a pod starts, basically it tries to ping the other pods",
    "start": "5937811",
    "end": "5944518"
  },
  {
    "text": "to see if they are alive. And yeah, it failed",
    "start": "5944685",
    "end": "5949706"
  },
  {
    "text": "because they are not started. Yeah, so that's fine. And now the shard manager",
    "start": "5949706",
    "end": "5955045"
  },
  {
    "text": "is loaded and that's fine. And now let's move to start.",
    "start": "5955045",
    "end": "5960350"
  },
  {
    "text": "Okay, let's start maybe some shard.",
    "start": "5962986",
    "end": "5965672"
  },
  {
    "text": "Okay, it registered itself, it's in.",
    "start": "5970294",
    "end": "5972729"
  },
  {
    "text": "Yeah, registering pod rebalancing.",
    "start": "5982539",
    "end": "5985459"
  },
  {
    "text": "Pod register, yeah, it seems that is actually doing something.",
    "start": "5987694",
    "end": "5990948"
  },
  {
    "text": "And let's try maybe starting.",
    "start": "5992849",
    "end": "5997771"
  },
  {
    "text": "Yeah, the connect side failed. Entity type not registered.",
    "start": "6004778",
    "end": "6009933"
  },
  {
    "text": "Why are you saying that? I haven't sharded up and running, yeah.",
    "start": "6010550",
    "end": "6016606"
  },
  {
    "text": "There should be something not working with, yeah, failed to rebalance pods.",
    "start": "6016990",
    "end": "6022529"
  },
  {
    "text": "Yeah, that's something not working with.",
    "start": "6023547",
    "end": "6025332"
  },
  {
    "text": "There's something not working with the rebalancing, but I think that I will leave debugging",
    "start": "6033690",
    "end": "6040130"
  },
  {
    "text": "for another stream, I think, yeah.",
    "start": "6040364",
    "end": "6045052"
  },
  {
    "text": "Let's see. I think that I have still",
    "start": "6052492",
    "end": "6058632"
  },
  {
    "text": "another 10 minutes, yeah. Other 10 minutes, okay, so let's see if in 10 minutes",
    "start": "6058632",
    "end": "6063804"
  },
  {
    "text": "we can find out what's happening. Okay, so we expect to prefix everything",
    "start": "6063804",
    "end": "6073113"
  },
  {
    "text": "with it, TDP host port API REST, right?",
    "start": "6073113",
    "end": "6077234"
  },
  {
    "text": "But is actually that what we expect.",
    "start": "6079202",
    "end": "6084057"
  },
  {
    "text": "So let's see how sharding config, okay.",
    "start": "6085759",
    "end": "6093483"
  },
  {
    "text": "Defaults.",
    "start": "6095602",
    "end": "6095952"
  },
  {
    "text": "Oh, API REST, not REST API, right? Did I wrote that in the wrong way?",
    "start": "6102426",
    "end": "6110133"
  },
  {
    "text": "API REST, oh no, API REST, yeah. API REST.",
    "start": "6114087",
    "end": "6118925"
  },
  {
    "text": "And REST API, yeah, API REST. That was the issue, yeah, indeed.",
    "start": "6122012",
    "end": "6127384"
  },
  {
    "text": "So let's kill everything and start again with the manager. Now the manager is loaded.",
    "start": "6128218",
    "end": "6134039"
  },
  {
    "text": "And now we'll start again.",
    "start": "6135242",
    "end": "6138145"
  },
  {
    "text": "Shard, registering pod address.",
    "start": "6140897",
    "end": "6143734"
  },
  {
    "text": "And now we start again with the connector.",
    "start": "6158248",
    "end": "6160167"
  },
  {
    "text": "Same issue. It seems like that it's failing to actually",
    "start": "6164020",
    "end": "6169009"
  },
  {
    "text": "register to the pod. The only part that I didn't touch is the one that seems,",
    "start": "6170293",
    "end": "6175982"
  },
  {
    "text": "oh, well. Oh.",
    "start": "6176750",
    "end": "6181605"
  },
  {
    "text": "Now it calls the shard manager, yeah. registering pod to shard manager, yeah.",
    "start": "6188578",
    "end": "6193600"
  },
  {
    "text": "Maybe that issues this one. Let's try again.",
    "start": "6216673",
    "end": "6223630"
  },
  {
    "text": "No, it doesn't seem so.",
    "start": "6226850",
    "end": "6228301"
  },
  {
    "text": "Let's try setting the log level to something like, oh, it's already in the bug, hmm.",
    "start": "6237444",
    "end": "6242549"
  },
  {
    "text": "Strange. I expected the HTTP client",
    "start": "6243783",
    "end": "6251925"
  },
  {
    "text": "to log every request, yeah. And the server.",
    "start": "6251925",
    "end": "6256429"
  },
  {
    "text": "Okay, let's try to stop the server again, okay. This is the manager, the shard manager is loaded, okay.",
    "start": "6261001",
    "end": "6266022"
  },
  {
    "text": "And now we start the sample shard. I expect to see, since last starting,",
    "start": "6266273",
    "end": "6271628"
  },
  {
    "text": "okay, send it to the response, get assignment, unregister,",
    "start": "6271678",
    "end": "6276299"
  },
  {
    "text": "pass an register, get assignments.",
    "start": "6278885",
    "end": "6280921"
  },
  {
    "text": "Registering, and this is one, the new one.",
    "start": "6284107",
    "end": "6286893"
  },
  {
    "text": "And pod registered, and I have my, but now it says failed to rebalance pods.",
    "start": "6289679",
    "end": "6295418"
  },
  {
    "text": "I need to.",
    "start": "6297387",
    "end": "6298805"
  },
  {
    "text": "So it's assign shard, the client, total sign shard, yeah, I need to.",
    "start": "6302542",
    "end": "6308248"
  },
  {
    "text": "And the client, yeah. Yeah, I need to debug this one.",
    "start": "6311001",
    "end": "6315121"
  },
  {
    "text": "assign shard I need to debug this one a little more, yeah.",
    "start": "6316823",
    "end": "6321061"
  },
  {
    "text": "But I think that for today, I am starting to be quite tired.",
    "start": "6323029",
    "end": "6329868"
  },
  {
    "text": "We had almost two hours of fun in here.",
    "start": "6330987",
    "end": "6334541"
  },
  {
    "text": "So I would say thank you, anyone who joined.",
    "start": "6336343",
    "end": "6340679"
  },
  {
    "text": "And next time I think that we'll go over the server and figure out what is failing.",
    "start": "6341665",
    "end": "6347487"
  },
  {
    "text": "But yeah, at least now we have something that it's building.",
    "start": "6348805",
    "end": "6352459"
  },
  {
    "text": "And we'll see why it's not running as it should do. We should have indeed some errors",
    "start": "6354260",
    "end": "6362869"
  },
  {
    "text": "in the assigning and unassigning phase because it's failing to rebalance the pods.",
    "start": "6363586",
    "end": "6368858"
  },
  {
    "text": "So thank you again, everyone who joined. And for whatever was going to have lunch,",
    "start": "6370577",
    "end": "6378284"
  },
  {
    "text": "have fun. And I will tell you when it's time, next time.",
    "start": "6378585",
    "end": "6384624"
  },
  {
    "text": "So please follow in order to receive a notification for next program stream, or follow me on Twitter at Mattia Manzati.",
    "start": "6384624",
    "end": "6392532"
  },
  {
    "text": "So thank you everyone again, and have fun. See you next time.",
    "start": "6393183",
    "end": "6398220"
  }
]