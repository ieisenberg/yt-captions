[
  {
    "start": "0",
    "end": "114000"
  },
  {
    "text": "As an engineer, you want to build features, you want to build like real robust systems. You want to spend ideally",
    "start": "0",
    "end": "5083"
  },
  {
    "text": "all your time doing that. You don't want to spend your time fighting the language, building something that, you",
    "start": "5083",
    "end": "10958"
  },
  {
    "text": "know, the language was not meant for. To give you an example, like concurrency in TypeScript. You want a way to build a concurrent",
    "start": "10958",
    "end": "17291"
  },
  {
    "text": "system where you're thinking about what is the system actually doing rather than like setting up all the boilerplate in order to",
    "start": "17291",
    "end": "23375"
  },
  {
    "text": "have that system in place. So I would say Effect really gives you the right premise.",
    "start": "23541",
    "end": "28833"
  },
  {
    "text": "So now that we've completed this migration, kind of feel like this is the end game feels like more stable and at least if we",
    "start": "28875",
    "end": "35541"
  },
  {
    "text": "continue building our code base on TypeScript with Effect, it doesn't feel like we're going to spend many more like",
    "start": "35541",
    "end": "41416"
  },
  {
    "text": "cycles, like refactoring the code.",
    "start": "41416",
    "end": "43750"
  },
  {
    "text": "Welcome to Cause & Effect, a podcast about the TypeScript library and ecosystem called Effect, helping engineers to build",
    "start": "47291",
    "end": "54083"
  },
  {
    "text": "production-ready software. I'm your host, Johannes Schickling, and I've been building with Effect for over four years.",
    "start": "54083",
    "end": "60000"
  },
  {
    "text": "With this podcast, I want to help others understand the powers and benefits of using Effect.",
    "start": "60583",
    "end": "65708"
  },
  {
    "text": "In this episode, I'm talking to Michael Fester, co-founder of Markprompt, an AI-based customer",
    "start": "66625",
    "end": "72333"
  },
  {
    "text": "support platform. In this conversation, we explore how Markprompt uses Effect across its entire architecture,",
    "start": "72333",
    "end": "79291"
  },
  {
    "text": "including API and RPC endpoints, long-running workflows, and their customer-facing product.",
    "start": "80041",
    "end": "85166"
  },
  {
    "text": "Let's get into it. Hey, welcome Michael. So nice to have you on the Cause & Effect Podcast.",
    "start": "85666",
    "end": "91583"
  },
  {
    "text": "How are you doing? I'm good. Thank you. I'm really happy to be here. It's been, I guess it's been a while that",
    "start": "91583",
    "end": "96916"
  },
  {
    "text": "we're trying to organize this, but I'm very happy that we're doing it now. Yeah. I mean, you're super, super busy.",
    "start": "96916",
    "end": "104250"
  },
  {
    "text": "You're based in San Francisco building an AI company. So I'm really, really happy that you took",
    "start": "104458",
    "end": "110083"
  },
  {
    "text": "the time to share your story about Effect. Maybe you can share a little bit about",
    "start": "110083",
    "end": "116000"
  },
  {
    "start": "114000",
    "end": "229000"
  },
  {
    "text": "yourself, your background and what are you doing? Yeah, sure. So I have a background.",
    "start": "116000",
    "end": "122208"
  },
  {
    "text": "I started in academia. Actually, I was doing research in mathematics. Then I started getting into AI and I built my first AI",
    "start": "122208",
    "end": "128082"
  },
  {
    "text": "company in Europe, specialized on device voice recognition. And we got acquired by Sonos.",
    "start": "128083",
    "end": "133916"
  },
  {
    "text": "And since then I moved here to San Francisco for my next",
    "start": "134291",
    "end": "139458"
  },
  {
    "text": "venture, which is we're building AI infrastructure for customer support.",
    "start": "139458",
    "end": "144666"
  },
  {
    "text": "So this is all like posts, chat GPT, GPT 4 coming out. And we saw this, this incredible",
    "start": "145375",
    "end": "151583"
  },
  {
    "text": "opportunity to start working in this space. That is awesome.",
    "start": "151583",
    "end": "156875"
  },
  {
    "text": "And I highly encourage everyone who is like interested in AI, particularly is looking",
    "start": "156875",
    "end": "163333"
  },
  {
    "text": "for a better customer support solution to check out Markprompt. Can you share about a few companies who",
    "start": "163333",
    "end": "170166"
  },
  {
    "text": "are already using Markprompt? Yeah, sure. So we've been working very closely with",
    "start": "170166",
    "end": "175250"
  },
  {
    "text": "some companies very early on in the process. Actually, that's really interesting. Vercel started using us as one of our",
    "start": "175250",
    "end": "180958"
  },
  {
    "text": "first customers, actually ElevenLabs, Replicate. Things are just moving so fast. So our approach here is not so much of a,",
    "start": "180958",
    "end": "188541"
  },
  {
    "text": "you know, we have a vision of how things will end up, right? It's very much like a learning process,",
    "start": "188541",
    "end": "193750"
  },
  {
    "text": "working very, very closely with customers, hand in hand getting their feedback, understanding together, how",
    "start": "193750",
    "end": "199791"
  },
  {
    "text": "this thing is evolving, how we can improve, you know, the behavior of the LLMs or how we can extend the use cases.",
    "start": "199791",
    "end": "205958"
  },
  {
    "text": "So this has been a very different way, I would say, of building a company from the past, because it's so new to",
    "start": "206625",
    "end": "212333"
  },
  {
    "text": "everyone in the space. And we're just like scratching the surface of the opportunities of building these systems",
    "start": "212333",
    "end": "218333"
  },
  {
    "text": "for you know, down the line. That's awesome. So before we go into the technical parts,",
    "start": "218333",
    "end": "224000"
  },
  {
    "text": "maybe you can share through the lens of one of your typical customers, what Markpompt does and which",
    "start": "224500",
    "end": "231000"
  },
  {
    "start": "229000",
    "end": "465000"
  },
  {
    "text": "problems it solves for some of those customers. Sure. So there's multiple facets of this",
    "start": "231000",
    "end": "237333"
  },
  {
    "text": "running a support operation is it's not a one size fits all. Every company has their own ways of, you",
    "start": "237333",
    "end": "244250"
  },
  {
    "text": "know, the nature of customer issues, the way that they engage with customers, is it like direct contact?",
    "start": "244250",
    "end": "250958"
  },
  {
    "text": "Is it, you know, is it mostly self serve? Technical challenges are very different",
    "start": "251208",
    "end": "256375"
  },
  {
    "text": "from one company to the other. So we offer really an end to end solution.",
    "start": "256375",
    "end": "261500"
  },
  {
    "text": "So there's multiple components in our system. It all starts with understanding your system of record, which is",
    "start": "261875",
    "end": "268458"
  },
  {
    "text": "things like your underlying customer knowledge, your, you know, your documentation, your CRM, the API is that",
    "start": "268458",
    "end": "277707"
  },
  {
    "text": "you use for automating parts of your support. And we connect all that together.",
    "start": "277708",
    "end": "283166"
  },
  {
    "text": "And then we build applications that are either customer facing or agent facing so and use",
    "start": "283166",
    "end": "289458"
  },
  {
    "text": "internally for the company. So it can be, you know, everything from, you know, your contact form powered by AI",
    "start": "289458",
    "end": "295457"
  },
  {
    "text": "to your chatbot to your Slack and Discord bots, right?",
    "start": "295666",
    "end": "300625"
  },
  {
    "text": "This is customer facing email order replies. So you send an email and the AI agent",
    "start": "300833",
    "end": "308083"
  },
  {
    "text": "will start, you know, trying to resolve the issue for you. And it might be possible",
    "start": "308083",
    "end": "313250"
  },
  {
    "text": "that it resolves it fully. And if not, it's going to ask you for all the questions that the team then needs to",
    "start": "313250",
    "end": "319791"
  },
  {
    "text": "use once you know, the ticket hits the inbox internally. And then there's the all the features",
    "start": "319791",
    "end": "325125"
  },
  {
    "text": "which are internal facing for the support team to be able to streamline their work.",
    "start": "325125",
    "end": "330916"
  },
  {
    "text": "Because the truth is that customer support before AI involved",
    "start": "331250",
    "end": "336625"
  },
  {
    "text": "a lot of essentially like robotic work, just answering the same questions over and over again.",
    "start": "336625",
    "end": "342291"
  },
  {
    "text": "This is not super engaging and exciting just to have to answer the same question over and over again. So if you can start like taking that",
    "start": "342625",
    "end": "349458"
  },
  {
    "text": "burden off of your shoulders and help you, you know, work on more like high leverage strategic",
    "start": "349458",
    "end": "356291"
  },
  {
    "text": "questions, then, you know, we can really help streamline the support operation. what happens when you've put",
    "start": "356291",
    "end": "361916"
  },
  {
    "text": "an AI or both like customer facing and agent facing, then you can start, you know,",
    "start": "361916",
    "end": "367041"
  },
  {
    "text": "extracting a lot of intelligence, a lot of knowledge, because you're really at the nerve center in a company, you are,",
    "start": "367750",
    "end": "373375"
  },
  {
    "text": "you know, the interface between your customers and your company, right? So you have so much like knowledge that",
    "start": "373625",
    "end": "380583"
  },
  {
    "text": "often just gets siloed within the support team, right? It's it's actually very rare that support",
    "start": "380583",
    "end": "385791"
  },
  {
    "text": "team reports to product, right? And I think that's a that's really a problem. But if we can start rooting",
    "start": "385791",
    "end": "392375"
  },
  {
    "text": "out all this insight and knowledge, we can start having a really, really good understanding on, you know,",
    "start": "392375",
    "end": "397916"
  },
  {
    "text": "product shortcomings, where the engineering team might, you know, put some effort, right?",
    "start": "397916",
    "end": "402708"
  },
  {
    "text": "Because this is where your customers have been experiencing a lot of friction, right? So we can start generating these",
    "start": "403083",
    "end": "409207"
  },
  {
    "text": "reporting and all sorts of other insights that can help you as a company",
    "start": "409208",
    "end": "414750"
  },
  {
    "text": "streamline your operations, things like spotting knowledge gaps, right, helping you write, you know, keeping your your",
    "start": "414750",
    "end": "420750"
  },
  {
    "text": "documentation up to date, these are all things that we can start also working on. So this concept of",
    "start": "420750",
    "end": "425791"
  },
  {
    "text": "agent is very versatile. The agents can solve issues, they can, you know, answer emails,",
    "start": "425791",
    "end": "431500"
  },
  {
    "text": "but they can also start being tasked of gathering insights and producing new knowledge and keeping your system of record,",
    "start": "431500",
    "end": "437625"
  },
  {
    "text": "always up to date. So there's really a lot of things that need to happen. You cannot approach the problem just from one",
    "start": "437625",
    "end": "443041"
  },
  {
    "text": "angle, you really want to tie the whole thing together, because this is where you start creating these positive feedback",
    "start": "443041",
    "end": "448250"
  },
  {
    "text": "loops, so called data flywheels, right, that enable you to start deploying the solution",
    "start": "448291",
    "end": "453416"
  },
  {
    "text": "and trust it that it's operating really well. So yeah, there's, there's a lot of things to it.",
    "start": "453416",
    "end": "458625"
  },
  {
    "text": "That sounds fascinating, and also quite complex in terms of the different surface areas, etc.",
    "start": "458666",
    "end": "464708"
  },
  {
    "start": "465000",
    "end": "622000"
  },
  {
    "text": "So maybe we can go slightly more technical. And before we go into all of the Effect's specifics, can you more from like an",
    "start": "465208",
    "end": "472416"
  },
  {
    "text": "engineering perspective provide an overview over your system? And which different high level components",
    "start": "472416",
    "end": "479000"
  },
  {
    "text": "it's composed out of? Sure. So this is a, you know, apart from the",
    "start": "479000",
    "end": "484875"
  },
  {
    "text": "machine learning things, the LLM things, this is a classical, you know, setup. there's some servers, both",
    "start": "484875",
    "end": "491041"
  },
  {
    "text": "like short, like serverless instances for API endpoints, then there's some long running",
    "start": "491083",
    "end": "495750"
  },
  {
    "text": "servers to do things like, you know, pre processing data, post",
    "start": "496166",
    "end": "501333"
  },
  {
    "text": "processing, interactions. So yeah, there's a there's a bunch of servers here, everything is in node, everything is",
    "start": "501333",
    "end": "507041"
  },
  {
    "text": "or TypeScript. The front end is a React application.",
    "start": "507291",
    "end": "512125"
  },
  {
    "text": "So both we have a dashboard, which is a V duplication, there is some integrations",
    "start": "512583",
    "end": "518708"
  },
  {
    "text": "inside of Salesforce, Zendesk, Slack, and so on. So it's a classical full",
    "start": "518708",
    "end": "523875"
  },
  {
    "text": "stack, React TypeScript application. So you've built quite an expansive system",
    "start": "523875",
    "end": "529750"
  },
  {
    "text": "here and building all of that in TypeScript I think TypeScript is sort of notorious for only scratching the",
    "start": "529750",
    "end": "535958"
  },
  {
    "text": "surface and only covering the happy path. There's a lot of things that can go wrong in all of those systems, integrating with",
    "start": "535958",
    "end": "543208"
  },
  {
    "text": "different systems. All of those things I think have led you to take a more serious",
    "start": "543208",
    "end": "548666"
  },
  {
    "text": "look at Effect and ultimately adopting it. So can you share that journey of going",
    "start": "548666",
    "end": "554708"
  },
  {
    "text": "from a non-Effect code base to converting step by step to Effect?",
    "start": "554708",
    "end": "559458"
  },
  {
    "text": "Sure, so obviously there's the common complexity increase that happens when you're building",
    "start": "560166",
    "end": "565833"
  },
  {
    "text": "a product and putting it into production. So as you add features and so on, then you hit sort of a ceiling",
    "start": "565833",
    "end": "571875"
  },
  {
    "text": "and then you start assessing the situation and then you might start refactoring and so on. And then next phase, you hit some other",
    "start": "571875",
    "end": "579958"
  },
  {
    "text": "limitations and then you reassess again the situation. So that's just the common thing of",
    "start": "579958",
    "end": "585916"
  },
  {
    "text": "working on an increasingly growing code base. But then there's LLMs and these are",
    "start": "585916",
    "end": "591791"
  },
  {
    "text": "non-deterministic systems and it poses some completely new kinds of challenges.",
    "start": "591791",
    "end": "596833"
  },
  {
    "text": "How do you monitor the behavior of the system, for instance? How do you deal with readable streams",
    "start": "596833",
    "end": "602708"
  },
  {
    "text": "instead of just sending over a payload? This has the potential to making your code base more complex",
    "start": "602708",
    "end": "608375"
  },
  {
    "text": "if you need to stream some tokens down to the customer, but you actually also need to store these chunks on your own",
    "start": "608375",
    "end": "616125"
  },
  {
    "text": "for post-processing. How do you deal with that? TypeScript doesn't give you some great answers to this.",
    "start": "616125",
    "end": "622041"
  },
  {
    "start": "622000",
    "end": "800000"
  },
  {
    "text": "How do you deal with reliability? OpenAI and Anthropic and so on, they offer",
    "start": "622458",
    "end": "627875"
  },
  {
    "text": "a service which is in high demand. We are in a period right",
    "start": "627875",
    "end": "633125"
  },
  {
    "text": "now with scarce resources. So these APIs, they go down and they actually go down more",
    "start": "633125",
    "end": "638875"
  },
  {
    "text": "than you would think. And so how do you build fallback mechanisms so that, say that",
    "start": "638875",
    "end": "644833"
  },
  {
    "text": "OpenAI is down as your main provider, your customers cannot be down. If OpenAI is down, that's not their problem.",
    "start": "644833",
    "end": "650541"
  },
  {
    "text": "That's our problem. So how do you build a fallback system to Anthropic? What happens a few weeks ago when OpenAI",
    "start": "650791",
    "end": "658625"
  },
  {
    "text": "was down for, I think, five hours and then the entire industry shifts towards Anthropic",
    "start": "658625",
    "end": "664250"
  },
  {
    "text": "that just has this spike that they're unable to deal with? So they are experiencing outage or just",
    "start": "664250",
    "end": "671583"
  },
  {
    "text": "very degraded performance. There's outage and then there's actually performance, the speed of tokens and so on.",
    "start": "671583",
    "end": "679083"
  },
  {
    "text": "All that, there's no good answer, no clear best practice in",
    "start": "679958",
    "end": "685750"
  },
  {
    "text": "vanilla TypeScript to deal with these things. And then there's the fact that we are a startup working in a",
    "start": "685750",
    "end": "691541"
  },
  {
    "text": "fast-paced environment where things change all the time. And we want to be efficient and we want",
    "start": "691541",
    "end": "697750"
  },
  {
    "text": "to be able to not deal with all the complexity and all the problems and down times and",
    "start": "697750",
    "end": "702916"
  },
  {
    "text": "reliability, but we need to be effective in shipping new features to constantly meet up with the demand.",
    "start": "702916",
    "end": "709291"
  },
  {
    "text": "the zero to one of building a company here. So there's multiple factors that really made us think hard about",
    "start": "709875",
    "end": "715833"
  },
  {
    "text": "what would be the foundation for us to be able to operate really fast with a small set of",
    "start": "715833",
    "end": "722125"
  },
  {
    "text": "resources from a startup and be a highly reliable solution because we",
    "start": "722125",
    "end": "727458"
  },
  {
    "text": "are catering to larger companies, enterprise companies. So reliability is just really key.",
    "start": "727458",
    "end": "733333"
  },
  {
    "text": "Obviously, I can talk a lot about the whole telemetry part of things, making sure everything",
    "start": "733791",
    "end": "740041"
  },
  {
    "text": "is properly monitored and that we can actually spot when things go wrong before our customers",
    "start": "740041",
    "end": "745750"
  },
  {
    "text": "even see it and then we can take action. So there's a bunch of things here. And Effect just came at a very good",
    "start": "745750",
    "end": "751708"
  },
  {
    "text": "moment where we still had a sufficiently small code base that we could actually start",
    "start": "751708",
    "end": "758291"
  },
  {
    "text": "seriously thinking about completely converting it to Effect. So the timing was really good.",
    "start": "758291",
    "end": "762916"
  },
  {
    "text": "So you've mentioned in regards to adopting Effect for the sake of improving reliability,",
    "start": "763750",
    "end": "768375"
  },
  {
    "text": "one specific use case was that Markbrom is using LLMs such as",
    "start": "769083",
    "end": "774625"
  },
  {
    "text": "the products provided by OpenAI. And if they go down, you need to fall back to another system.",
    "start": "774625",
    "end": "780041"
  },
  {
    "text": "And in case that system also goes down, fall back to yet another one. All of that is helping to improve the",
    "start": "780250",
    "end": "787000"
  },
  {
    "text": "reliability of Markprompt. Which other challenges did you face",
    "start": "787000",
    "end": "792125"
  },
  {
    "text": "similar to that one in regards to reliability and how did you improve reliability through Effect?",
    "start": "792125",
    "end": "798125"
  },
  {
    "text": "I mean, there's lots of examples where Effect has helped us consolidate our system.",
    "start": "799166",
    "end": "804875"
  },
  {
    "start": "800000",
    "end": "1001000"
  },
  {
    "text": "One example is one day we woke up and we realized that we were under attack by a malicious hacker",
    "start": "805125",
    "end": "812208"
  },
  {
    "text": "who was interacting with a public facing deployment of Markprompt and",
    "start": "812375",
    "end": "817916"
  },
  {
    "text": "sending, I think, 20 million requests per hour.",
    "start": "817916",
    "end": "823166"
  },
  {
    "text": "And this was across the globe, so it was kind of hard to deal with. So Ethan Niser, he spent the summer with",
    "start": "823500",
    "end": "830458"
  },
  {
    "text": "us and he's been working on a lot of Effect-related things and on his first day,",
    "start": "830458",
    "end": "836666"
  },
  {
    "text": "this attack started happening. And so he built this great rate limiting",
    "start": "836833",
    "end": "842000"
  },
  {
    "text": "system in the middleware that is capable of looking at multiple facets of a payload.",
    "start": "842000",
    "end": "848250"
  },
  {
    "text": "And the interesting thing here is that you cannot just rely on IP and fingerprinting and so on. You actually also want to start looking",
    "start": "848250",
    "end": "854833"
  },
  {
    "text": "at the LLM payload itself. What kinds of messages is there, pattern that we can spot here in",
    "start": "854833",
    "end": "860000"
  },
  {
    "text": "the nature of the requests? And so it's a multi-tiered rate limiting system that is very easy",
    "start": "860000",
    "end": "865750"
  },
  {
    "text": "to automatically trigger and also manually trigger. So this is an example also where building with composability has just allowed us to",
    "start": "865750",
    "end": "873916"
  },
  {
    "text": "build a fairly sophisticated system here, which just works. We are now very",
    "start": "874250",
    "end": "879583"
  },
  {
    "text": "confident that it just works. And by the way, one of the reasons that we're confident that it works is that it's very easy to test because the whole dependency",
    "start": "879583",
    "end": "886250"
  },
  {
    "text": "injection story is just such a natural thing to do. You just operate a provider and you can",
    "start": "886250",
    "end": "891291"
  },
  {
    "text": "very easily simulate a situation that is hard to reproduce with other means.",
    "start": "891291",
    "end": "896541"
  },
  {
    "text": "So dependency injection, I would say, is a huge factor to the reliability because we",
    "start": "896583",
    "end": "901791"
  },
  {
    "text": "can restart testing all sorts of different combinations of non-happy paths and building",
    "start": "901791",
    "end": "908583"
  },
  {
    "text": "that with just change or service that you provide is just very, very easy with Effect.",
    "start": "908583",
    "end": "914875"
  },
  {
    "text": "Telemetry is obviously a thing. So I think that the whole testing story is not just about one thing.",
    "start": "914875",
    "end": "922000"
  },
  {
    "text": "You want to do unit tests. You want to do integration tests with dependency injection. You also really want to have a full",
    "start": "922000",
    "end": "928166"
  },
  {
    "text": "understanding of what's going on when you are in production. And so being able to have good traces,",
    "start": "928166",
    "end": "933083"
  },
  {
    "text": "good logging of every component of your system is non-trivial. And so we rely heavily on telemetry and",
    "start": "933750",
    "end": "941708"
  },
  {
    "text": "Effect allows us to just add spans everywhere in a very, very simple way.",
    "start": "941708",
    "end": "946916"
  },
  {
    "text": "And it just naturally fits into the rest of the system. And this really has allowed us to have a very, very good",
    "start": "946916",
    "end": "952541"
  },
  {
    "text": "understanding of failure scenarios before our customers even see them. So these are just general patterns that",
    "start": "952541",
    "end": "959750"
  },
  {
    "text": "are very natural to do in Effect that we don't even think about because they actually",
    "start": "959750",
    "end": "965583"
  },
  {
    "text": "don't incur any sort of additional thinking on our part. It's just adding a line",
    "start": "965583",
    "end": "971083"
  },
  {
    "text": "and then it just works. Yeah, this makes a lot of sense. I can totally see how reliability is",
    "start": "971083",
    "end": "977875"
  },
  {
    "text": "almost sort of like a emerging factor, like a second order effect that comes",
    "start": "977875",
    "end": "982916"
  },
  {
    "text": "when you have a composable system, and when you have observability, when you",
    "start": "982916",
    "end": "988791"
  },
  {
    "text": "can look into what's going on, when you can eat your vegetables, then you're healthy.",
    "start": "988791",
    "end": "994250"
  },
  {
    "text": "And so Building a reliable system is going the extra mile on all of those things. This makes a lot of sense.",
    "start": "994750",
    "end": "1000333"
  },
  {
    "start": "1001000",
    "end": "1191000"
  },
  {
    "text": "Given that you built quite an expansive system, maybe we can try to break it down a",
    "start": "1001375",
    "end": "1006875"
  },
  {
    "text": "little bit more with a technical lens on. So I'm sure that you have",
    "start": "1006875",
    "end": "1011916"
  },
  {
    "text": "a client side application. You've mentioned that it's like a single page app built with Vite,",
    "start": "1011916",
    "end": "1016500"
  },
  {
    "text": "but more on the backend side. Can you describe to me what are the different subcomponents of your system?",
    "start": "1017208",
    "end": "1024041"
  },
  {
    "text": "Yeah, so in a very simple way, the main subcomponents here, there's the application server,",
    "start": "1024541",
    "end": "1031166"
  },
  {
    "text": "which is essentially an RPC server that the client application is speaking with. Then we have a public API.",
    "start": "1031166",
    "end": "1037750"
  },
  {
    "text": "So Markprompt is built as Stripe for customer support, in the sense that every part of the system can be",
    "start": "1038458",
    "end": "1044208"
  },
  {
    "text": "interacted with via our APIs so that you can actually build deeper product experiences",
    "start": "1044208",
    "end": "1049666"
  },
  {
    "text": "inside of your core product. So we have a public facing API server. Then we have the ingestion engine, which",
    "start": "1049666",
    "end": "1057625"
  },
  {
    "text": "takes in all your systems data. So this can be public facing like a website that we would",
    "start": "1057625",
    "end": "1062833"
  },
  {
    "text": "scrape on a regular basis. It could be GitHub repository or historical tickets from",
    "start": "1062833",
    "end": "1069250"
  },
  {
    "text": "Zendesk and Jira and Confluence and databases from Salesforce and whatnot.",
    "start": "1069250",
    "end": "1074750"
  },
  {
    "text": "So we do a bunch of things here. We import data. We chunk it up. We monitor the whole structure of",
    "start": "1075125",
    "end": "1082041"
  },
  {
    "text": "documents through the AST and then we build embeddings for multi-levels. And then we store them",
    "start": "1082041",
    "end": "1087291"
  },
  {
    "text": "in a vector database. And then we have all the application related servers, so things like Discord or",
    "start": "1087291",
    "end": "1093416"
  },
  {
    "text": "Slack or Zendesk and so on, which are more like simple servers here.",
    "start": "1093416",
    "end": "1098541"
  },
  {
    "text": "Got it. Yeah, that makes a lot of sense to break it up into those different pieces. I'd actually love to learn a",
    "start": "1098541",
    "end": "1104125"
  },
  {
    "text": "little bit more about each, maybe starting with the application server. So you mentioned that you're",
    "start": "1104125",
    "end": "1109416"
  },
  {
    "text": "using Effect RPC in that regard. What did you use before you were using Effect?",
    "start": "1109416",
    "end": "1114208"
  },
  {
    "text": "And what are the qualities of using Effect for an application for an RPC server here?",
    "start": "1114791",
    "end": "1121166"
  },
  {
    "text": "Yeah, sure. I mean, this before was just like simple API handlers. So you would have two",
    "start": "1121958",
    "end": "1128166"
  },
  {
    "text": "completely decoupled systems. And now pretty much all the",
    "start": "1128166",
    "end": "1133333"
  },
  {
    "text": "endpoints are in full RPC. It starts with a schema, actually.",
    "start": "1133333",
    "end": "1137958"
  },
  {
    "text": "We define the input schema, the output schema, and the error schema for each of these endpoints.",
    "start": "1138500",
    "end": "1144666"
  },
  {
    "text": "And then it trickles down all the way to the client application. So we have this. Ethan actually wrote this and I hope he's",
    "start": "1145250",
    "end": "1150500"
  },
  {
    "text": "going to publish it. Sometimes soon, essentially React query, but wrapped around with Effect so that we have the full schema from the",
    "start": "1150500",
    "end": "1157541"
  },
  {
    "text": "backend all the way to the client side code. And we have nothing more to deal with. So the whole thing is completely",
    "start": "1157541",
    "end": "1162875"
  },
  {
    "text": "streamlined in terms of the communication between the client and the server.",
    "start": "1162875",
    "end": "1167375"
  },
  {
    "text": "That makes a lot of sense. And so before you didn't have any schema layer, anything to express the kind of data",
    "start": "1168125",
    "end": "1175291"
  },
  {
    "text": "you're sending across? No, we didn't actually. Got it. Well, I suppose that through the process",
    "start": "1175291",
    "end": "1182291"
  },
  {
    "text": "of just modeling the schema, I'm sure that there were a couple of code paths that you didn't",
    "start": "1182291",
    "end": "1187666"
  },
  {
    "text": "even account for before. So the-- Absolutely. The public API server where you're",
    "start": "1187666",
    "end": "1195000"
  },
  {
    "start": "1191000",
    "end": "1430000"
  },
  {
    "text": "exposing an open API spec, I suppose, how similar or different is that to",
    "start": "1195000",
    "end": "1201583"
  },
  {
    "text": "your application server? Can you describe the public API server setup a bit more? Yeah, sure.",
    "start": "1201583",
    "end": "1206875"
  },
  {
    "text": "So this is more of a standard HTTP server. This is actually using Effect HTTP.",
    "start": "1206875",
    "end": "1211958"
  },
  {
    "text": "So again, we have the full-- Everything starts with the Effect runtime taking over directly",
    "start": "1212333",
    "end": "1218333"
  },
  {
    "text": "at the request level. So again, we can model everything very nicely via schemas. And one really nice thing of having",
    "start": "1218333",
    "end": "1226291"
  },
  {
    "text": "everything defined by schemas is that we can, for instance, automatically generate the open API spec.",
    "start": "1226291",
    "end": "1231833"
  },
  {
    "text": "So this is something that we now have every single endpoint is automatically documented just via the schema.",
    "start": "1232250",
    "end": "1238250"
  },
  {
    "text": "Got it. How much overlap does your internal application server, that RPC server with",
    "start": "1239208",
    "end": "1245500"
  },
  {
    "text": "the public API server, does it have a lot of overlap? Do you reuse a lot of code internally?",
    "start": "1245500",
    "end": "1250958"
  },
  {
    "text": "Or are those rather fulfilling different purposes? They're fulfilling completely different purposes, yes.",
    "start": "1251083",
    "end": "1257458"
  },
  {
    "text": "So yeah, I mean, these things are completely separate. So to give you one very important",
    "start": "1258625",
    "end": "1264000"
  },
  {
    "text": "differentiator is that on the RPC server, we provide permissions.",
    "start": "1264000",
    "end": "1269750"
  },
  {
    "text": "So you want to make sure that a given user can perform an action that they are allowed to.",
    "start": "1270666",
    "end": "1276000"
  },
  {
    "text": "And so we have a very nice system that provides the level of",
    "start": "1276000",
    "end": "1281583"
  },
  {
    "text": "permissions of a user. This is completely transparent. We actually used RLS before,",
    "start": "1281583",
    "end": "1288583"
  },
  {
    "text": "role level security to enforce these policies. But there was a real performance impact. It was just slowing down the crazy,",
    "start": "1288583",
    "end": "1294708"
  },
  {
    "text": "especially when you're dealing with hundreds of thousands of data points. So this had a real impact.",
    "start": "1294916",
    "end": "1301083"
  },
  {
    "text": "So we got rid of that. And actually, everything now is modeled in code. So the permission, which I guess was",
    "start": "1301333",
    "end": "1306666"
  },
  {
    "text": "always how things have been done without RLS.",
    "start": "1306666",
    "end": "1311041"
  },
  {
    "text": "And so this is, again, an example where Effect at the type level, you can immediately spot whether this is",
    "start": "1312208",
    "end": "1318500"
  },
  {
    "text": "a user that is allowed to perform a single action, because that service",
    "start": "1318500",
    "end": "1324125"
  },
  {
    "text": "requires these sets of permissions. And so this is very, very nice to model as well.",
    "start": "1324125",
    "end": "1328458"
  },
  {
    "text": "That sounds very interesting. So you've built yourself an internal DSL to model those permission rules.",
    "start": "1329708",
    "end": "1336500"
  },
  {
    "text": "Can you explain a little bit more how that's implemented and how that can be imagined from",
    "start": "1336833",
    "end": "1341833"
  },
  {
    "text": "like a type level perspective or from an API perspective? Yeah. I mean, so every user comes",
    "start": "1342500",
    "end": "1348583"
  },
  {
    "text": "with a set of permissions, right? And these permissions can be modeled via types.",
    "start": "1348583",
    "end": "1352916"
  },
  {
    "text": "And services can declare what level of",
    "start": "1353666",
    "end": "1358750"
  },
  {
    "text": "permission they required in order to perform an action. And so we immediately know if within an",
    "start": "1358750",
    "end": "1365041"
  },
  {
    "text": "RPC endpoint, we're using a service, but that the provided permissions don't match.",
    "start": "1365041",
    "end": "1371166"
  },
  {
    "text": "Well, then we can flag it. And so we can guarantee that there's no code being shipped where there's an inconsistency here.",
    "start": "1372000",
    "end": "1377833"
  },
  {
    "text": "I love it. That sounds very elegant. I would love to see some code for that. Could you imagine that there could be a",
    "start": "1379000",
    "end": "1385708"
  },
  {
    "text": "more commonly reusable package for that? Or is that only something that makes",
    "start": "1385708",
    "end": "1390750"
  },
  {
    "text": "sense within your code base? Good question.",
    "start": "1390750",
    "end": "1394250"
  },
  {
    "text": "Obviously, we have been just crunching through this code and getting into production. So we haven't thought too much about how",
    "start": "1395916",
    "end": "1403500"
  },
  {
    "text": "this would extend to a more generic use case. But I guess this could be",
    "start": "1403500",
    "end": "1409541"
  },
  {
    "text": "a very interesting topic. Right. Well, anyone in the audience is happily invited to try to",
    "start": "1409541",
    "end": "1415666"
  },
  {
    "text": "replicate this by themselves. Maybe that's even something that we could, as part of the Effect org, also",
    "start": "1415666",
    "end": "1422041"
  },
  {
    "text": "look into providing. To hear you describing this use case in this DSL, that makes a lot of",
    "start": "1422041",
    "end": "1427541"
  },
  {
    "text": "sense for a lot of use cases. So moving then to the ingestion engine,",
    "start": "1427541",
    "end": "1432875"
  },
  {
    "start": "1430000",
    "end": "1589000"
  },
  {
    "text": "can you describe a little bit more of how that looks like from a lifecycle perspective?",
    "start": "1433416",
    "end": "1438916"
  },
  {
    "text": "So you've mentioned the ingestion engine is mostly meant to bring in data from various data sources,",
    "start": "1439208",
    "end": "1445083"
  },
  {
    "text": "whether it's Salesforce, whether it's Notion. Walk me through how that works and how",
    "start": "1445333",
    "end": "1450625"
  },
  {
    "text": "does that work in regards to Effect? Do you use Effect streams for that?",
    "start": "1450625",
    "end": "1454750"
  },
  {
    "text": "Yeah. How does that work? So it's still pretty bare bones here. This is something that we have been discussing also with the",
    "start": "1455666",
    "end": "1461625"
  },
  {
    "text": "Effect team and the Effect cluster. This is where we will probably be going. So now we have our own system, which is",
    "start": "1461625",
    "end": "1468958"
  },
  {
    "text": "basically just some long running node servers that are able to go and fetch the data.",
    "start": "1468958",
    "end": "1476416"
  },
  {
    "text": "So that could be make a large request to an SQL database or starting a scraper",
    "start": "1476708",
    "end": "1482583"
  },
  {
    "text": "that visits a website and when it's done and purged all the pages,",
    "start": "1482583",
    "end": "1487625"
  },
  {
    "text": "it is then indexed in a temporary cache on our side. And then it goes into the post processing",
    "start": "1488083",
    "end": "1493500"
  },
  {
    "text": "pipeline, where again, we obviously we parallelize all this because every page",
    "start": "1493500",
    "end": "1499708"
  },
  {
    "text": "needs some post processing. So we chunk it up and we try to get a",
    "start": "1499708",
    "end": "1505500"
  },
  {
    "text": "sense of the structure of the document, the AST, and then we build these embeddings for each levels in the AST and",
    "start": "1505500",
    "end": "1512958"
  },
  {
    "text": "then we store it in a database. And so the main challenge here is that these are long running",
    "start": "1512958",
    "end": "1518791"
  },
  {
    "text": "tasks which can time out, they can fail and whatnot.",
    "start": "1518791",
    "end": "1523708"
  },
  {
    "text": "And so now we rely on external systems to do the whole workflow orchestration, but this is something where we are going",
    "start": "1524291",
    "end": "1530083"
  },
  {
    "text": "to be investing some effort as well because Effect is the perfect solution here",
    "start": "1530083",
    "end": "1535708"
  },
  {
    "text": "because we have the full sets of tools for dealing with these kinds of situations.",
    "start": "1535708",
    "end": "1541833"
  },
  {
    "text": "Yeah, I'm really looking forward for Effect Cluster and Effect Workflows to mature further.",
    "start": "1542958",
    "end": "1548291"
  },
  {
    "text": "I think there's more and more use cases, particularly when it comes to AI applications",
    "start": "1549208",
    "end": "1555250"
  },
  {
    "text": "where you want to express things as long running workflows. And I think this is where Effect is",
    "start": "1555666",
    "end": "1562625"
  },
  {
    "text": "really like such a perfect foundation. So yeah, I think we're going to see some",
    "start": "1562625",
    "end": "1568208"
  },
  {
    "text": "very interesting updates throughout the year here. So stay tuned for that. Maybe changing gears slightly.",
    "start": "1568208",
    "end": "1575833"
  },
  {
    "text": "Initially, you've built all of the system, I think mostly by yourself. This is where you started",
    "start": "1575833",
    "end": "1581166"
  },
  {
    "text": "adopting Effect by yourself. and then later you onboarded other engineers who didn't have",
    "start": "1581166",
    "end": "1587250"
  },
  {
    "text": "prior Effect experience. Can you share a bit more about that story, how you onboarded",
    "start": "1587250",
    "end": "1593041"
  },
  {
    "start": "1589000",
    "end": "1851000"
  },
  {
    "text": "other engineers who didn't have Effect experience to become successful working on your code base?",
    "start": "1593041",
    "end": "1598625"
  },
  {
    "text": "I mean, this is such an interesting question. Because you would think that Effect is",
    "start": "1599208",
    "end": "1604500"
  },
  {
    "text": "mainly for a TypeScript audience. Web developers who are proficient now in",
    "start": "1604500",
    "end": "1610750"
  },
  {
    "text": "TypeScript and realize they need to go to the next level in terms of building complex systems.",
    "start": "1610750",
    "end": "1616958"
  },
  {
    "text": "My take here is actually that having a code base which is already fully Effect will actually",
    "start": "1616958",
    "end": "1624750"
  },
  {
    "text": "lower the barrier to entry for people who have less experience with TypeScript.",
    "start": "1624958",
    "end": "1630166"
  },
  {
    "text": "So we've seen that with Elliot, our founding engineer who has joined a few months ago,",
    "start": "1630458",
    "end": "1635166"
  },
  {
    "text": "with very little TypeScript experience, was able to very quickly take it up and then be productive.",
    "start": "1635666",
    "end": "1641625"
  },
  {
    "text": "We've run some trials with some candidates in the last few weeks with, again, little experience in",
    "start": "1642375",
    "end": "1647875"
  },
  {
    "text": "TypeScript. The thing is that we are hiring a lot of machine learning engineers. And so they have typically already a lot",
    "start": "1647875",
    "end": "1655208"
  },
  {
    "text": "of experience with more of the machine learning sets of tools like Python and very little on TypeScript.",
    "start": "1655208",
    "end": "1661541"
  },
  {
    "text": "But what we have seen is onboarding them on our code base, they were actually able to be very productive, very early on.",
    "start": "1661541",
    "end": "1667875"
  },
  {
    "text": "And the great thing is that there's not much room for bad practice or the kinds of things",
    "start": "1668166",
    "end": "1673333"
  },
  {
    "text": "that you need to learn when you get started with a new language. So what I think is that actually",
    "start": "1673333",
    "end": "1678458"
  },
  {
    "text": "Effect will allow them to be proficient and build very reliable code within a few weeks.",
    "start": "1678458",
    "end": "1685083"
  },
  {
    "text": "If it had not been an Effect and more like vanilla TypeScript, yes, sure, there's fewer things to learn.",
    "start": "1685625",
    "end": "1690708"
  },
  {
    "text": "It's kind of easy and so on. But you would build up this understanding and intuition for the",
    "start": "1690708",
    "end": "1696458"
  },
  {
    "text": "language over the course of years. Right. And then within years, you'll be able to build very complex and",
    "start": "1696458",
    "end": "1701791"
  },
  {
    "text": "reliable systems because you have been proficient in the language.",
    "start": "1701791",
    "end": "1706375"
  },
  {
    "text": "So Effect gives you these guardrails that with the whole thing is in Effect, sure, you need",
    "start": "1706875",
    "end": "1712291"
  },
  {
    "text": "to understand the whole catalog of things. And this you just take up as you have new use cases.",
    "start": "1712291",
    "end": "1717541"
  },
  {
    "text": "But if you have a really good foundation, like the full RPC server, you basically just",
    "start": "1717916",
    "end": "1723041"
  },
  {
    "text": "you start writing schema, right? You write a schema and then you fit it into the system.",
    "start": "1723166",
    "end": "1728041"
  },
  {
    "text": "And then once it's there, it's done. You don't need to change it. You haven't done anything bad",
    "start": "1728541",
    "end": "1734125"
  },
  {
    "text": "or anything that will break. Right. So my take on this is that actually it might actually have the",
    "start": "1734125",
    "end": "1740041"
  },
  {
    "text": "opposite effect of what we would expect, which is to be able to onboard non TypeScript",
    "start": "1740041",
    "end": "1746375"
  },
  {
    "text": "engineers much, much faster. Yeah, that definitely sounds a little bit counterintuitive.",
    "start": "1746375",
    "end": "1752333"
  },
  {
    "text": "And the first time I heard about this anecdote, and you shared this privately with me before,",
    "start": "1752458",
    "end": "1757791"
  },
  {
    "text": "and that person you've just mentioned, Elliot, gave a brilliant talk at the last",
    "start": "1758416",
    "end": "1763833"
  },
  {
    "text": "Effect Meetup in San Francisco where he shared his first hand experience learning Effect.",
    "start": "1763916",
    "end": "1769750"
  },
  {
    "text": "And yeah, I think that is a little bit counterintuitive. But when you think about it more, it makes a lot of sense because most",
    "start": "1770500",
    "end": "1777791"
  },
  {
    "text": "experienced TypeScript engineers over years, they had to first learn how to do anything",
    "start": "1777791",
    "end": "1784375"
  },
  {
    "text": "with TypeScript at all and then later learn to ignore like those 80 paths",
    "start": "1784375",
    "end": "1789958"
  },
  {
    "text": "out of 100 how you could do something with TypeScript, but that will lead you down a dangerous road.",
    "start": "1789958",
    "end": "1795958"
  },
  {
    "text": "Whereas Effect constrains you a little bit more and puts you on a path to success in a way.",
    "start": "1796500",
    "end": "1802791"
  },
  {
    "text": "That's also like it has been my experience for I think for me coming more from TypeScript,",
    "start": "1803708",
    "end": "1808875"
  },
  {
    "text": "I had to unlearn a lot of things how I used to do things in TypeScript before. But this is where for me, a good",
    "start": "1809916",
    "end": "1817375"
  },
  {
    "text": "foundation to pick up Effect was actually dabbling in other languages such as Swift and Rust, where I",
    "start": "1817375",
    "end": "1824541"
  },
  {
    "text": "already primed my mind more on more saner engineering practices and learning the",
    "start": "1824541",
    "end": "1831708"
  },
  {
    "text": "right habits and embracing the right abstractions. And so I can totally see how someone who",
    "start": "1831708",
    "end": "1838041"
  },
  {
    "text": "doesn't have prior TypeScript experience maybe experience in other languages, which have more appropriate primitives",
    "start": "1838041",
    "end": "1845666"
  },
  {
    "text": "can be up and running with Effect in no time. That is amazing to hear. So can you walk me through a little bit",
    "start": "1845833",
    "end": "1853125"
  },
  {
    "start": "1851000",
    "end": "2119000"
  },
  {
    "text": "more through the process how you went tactically about migrating the code base as it was",
    "start": "1853125",
    "end": "1860291"
  },
  {
    "text": "before Effect one by one step at a time to migrating it to Effect. Rome wasn't conquered in a",
    "start": "1860291",
    "end": "1866833"
  },
  {
    "text": "day, so wasn't your code base. So how did you go about it? We had some great help. And this is where",
    "start": "1866833",
    "end": "1872083"
  },
  {
    "text": "I think the Effect community is such a wonderful community of people who are nice and helpful. You",
    "start": "1872083",
    "end": "1879875"
  },
  {
    "text": "kicked it off with us. So we've been this for years. And immediately I saw the",
    "start": "1879875",
    "end": "1885541"
  },
  {
    "text": "importance of this, but never found the time to actually learn how to do it in practice.",
    "start": "1885541",
    "end": "1892666"
  },
  {
    "text": "I think this is also maybe related to the lack of documentation and concrete examples back in the day. How do you actually convert an API",
    "start": "1892666",
    "end": "1898625"
  },
  {
    "text": "endpoint to Effect? How do you just do it? So I think this little catalyzer was really important,",
    "start": "1898666",
    "end": "1905041"
  },
  {
    "text": "which allowed us, our team, to then get a sense of where we could",
    "start": "1905666",
    "end": "1910708"
  },
  {
    "text": "start fitting it in. It was still like very, very new. This was earlier last year. And then we had the pleasure",
    "start": "1910708",
    "end": "1917375"
  },
  {
    "text": "of having Ethan with us over the summer. And he wrote a lot of very important code for both",
    "start": "1917375",
    "end": "1923041"
  },
  {
    "text": "the backend side of things, schema, the database, the React query",
    "start": "1923041",
    "end": "1928250"
  },
  {
    "text": "part, which put us in a really good foundation. We had most of it basically sketched out.",
    "start": "1928250",
    "end": "1933875"
  },
  {
    "text": "And then in September, we decided to do a big, big push and just get",
    "start": "1934500",
    "end": "1940083"
  },
  {
    "text": "everything migrated. So this was like a bit slow in the beginning. And then very, very quickly, within a few",
    "start": "1940083",
    "end": "1947583"
  },
  {
    "text": "weeks, we had the whole thing migrated over. Good. That makes a lot of sense. And",
    "start": "1947583",
    "end": "1954291"
  },
  {
    "text": "happy to have acted as a little catalyst here, but you've picked up everything so",
    "start": "1954291",
    "end": "1960833"
  },
  {
    "text": "quickly. So I think this was rather a little bit of giving you",
    "start": "1960833",
    "end": "1965625"
  },
  {
    "text": "more courage to go this way. And I think you figured out quickly how to work with everything,",
    "start": "1965875",
    "end": "1972916"
  },
  {
    "text": "and you migrated everything in no time. I would say, honestly,",
    "start": "1973291",
    "end": "1978875"
  },
  {
    "text": "the important thing is the catalyzer here. Once you have the starter blocks, then it's quite easy to",
    "start": "1979500",
    "end": "1985875"
  },
  {
    "text": "generalize. It's more like where do you start? And the documentation obviously is much better now. So I think this is",
    "start": "1985875",
    "end": "1991625"
  },
  {
    "text": "a great thing. But I think this little initial nudge is",
    "start": "1991666",
    "end": "1997125"
  },
  {
    "text": "what made the difference here. If you think about your system as sort of",
    "start": "1997125",
    "end": "2002250"
  },
  {
    "text": "like a tree of different subsystems,",
    "start": "2002250",
    "end": "2007083"
  },
  {
    "text": "you can go about converting an existing system to Effect in different ways. Either you go first for",
    "start": "2007416",
    "end": "2013875"
  },
  {
    "text": "the leaves, and then you go up one step at a time until your entire program, your entire system is",
    "start": "2013875",
    "end": "2019375"
  },
  {
    "text": "refactored with Effect. But you can also isolate specific sub nodes and from the outside call the",
    "start": "2019416",
    "end": "2027791"
  },
  {
    "text": "effect and inside of it call other things that are not yet Effect with Effect.runPromise or",
    "start": "2027791",
    "end": "2034833"
  },
  {
    "text": "effect dot promise to run some effects, some non-effect code yet.",
    "start": "2034833",
    "end": "2039708"
  },
  {
    "text": "Did you find any particular topology adoption strategy for you to be",
    "start": "2040166",
    "end": "2046250"
  },
  {
    "text": "working well? So did you go first all for the leaves? Or did you go",
    "start": "2046250",
    "end": "2051500"
  },
  {
    "text": "wherever you wanted to refactor something anyway? How did you go about the decision process of when to",
    "start": "2051500",
    "end": "2057791"
  },
  {
    "text": "refactor what with Effect? Well, yeah, it was the leaves in the beginning. And then it was the top",
    "start": "2057791",
    "end": "2064250"
  },
  {
    "text": "down afterwards, because we just realized that this was what we needed. And we just needed as",
    "start": "2064250",
    "end": "2069750"
  },
  {
    "text": "quickly as possible. So then there was a combined push from the whole team to just get the",
    "start": "2069750",
    "end": "2076458"
  },
  {
    "text": "migration done as quickly as possible. So the RPC was written really like top down, right? Because,",
    "start": "2076458",
    "end": "2083166"
  },
  {
    "text": "well top down in the sense that one route would be migrated to RPC, Effect RPC, then another",
    "start": "2083166",
    "end": "2089833"
  },
  {
    "text": "one and so on. But for sure, this is a nice thing with Effect is that you can do it on the",
    "start": "2089833",
    "end": "2095125"
  },
  {
    "text": "leave to start with and you're not touching anything else of your code base. But yeah, you",
    "start": "2095125",
    "end": "2100208"
  },
  {
    "text": "definitely feel the urge to get the whole thing end to end.",
    "start": "2100208",
    "end": "2105250"
  },
  {
    "text": "The runtime should be initiated at the very beginning of the thing, right? So that you have",
    "start": "2105625",
    "end": "2111625"
  },
  {
    "text": "the full happy path, because you get to love the happy path here, right? Nice. So if I remember",
    "start": "2111666",
    "end": "2118625"
  },
  {
    "text": "correctly, I think it's now been pretty much a year since you've been using Effect in production.",
    "start": "2118625",
    "end": "2124000"
  },
  {
    "start": "2119000",
    "end": "2342000"
  },
  {
    "text": "looking back, what were some of the things that were like unexpectedly good with",
    "start": "2124666",
    "end": "2130000"
  },
  {
    "text": "Effect and also some things that were more challenging that you thought or unexpected in some ways?",
    "start": "2130000",
    "end": "2135333"
  },
  {
    "text": "I didn't expect the Schema package to be, you know, I didn't have any",
    "start": "2136583",
    "end": "2142000"
  },
  {
    "text": "expectations that this was really a core thing. In fact, because this is really wonderful, how you can",
    "start": "2142000",
    "end": "2149375"
  },
  {
    "text": "control both like the decoding part, the encoding part, how you can pipe everything",
    "start": "2149375",
    "end": "2154875"
  },
  {
    "text": "together. This is one of the sort of,",
    "start": "2154875",
    "end": "2159333"
  },
  {
    "text": "it shifts away how you think about a problem. Because usually, now when I think of a problem,",
    "start": "2160125",
    "end": "2165375"
  },
  {
    "text": "I start thinking about what is the schema, right? It is very different from what is the actual application code. You redesign your",
    "start": "2165375",
    "end": "2171708"
  },
  {
    "text": "schema, you think, well, how should it transform the data here? And then you work your way up to getting",
    "start": "2171708",
    "end": "2178791"
  },
  {
    "text": "it all the way in your code. So I think that schema was a very, very positive,",
    "start": "2178791",
    "end": "2184833"
  },
  {
    "text": "unexpected thing that came out of this. To give you an example, I always wanted to, again, in the quest",
    "start": "2184833",
    "end": "2192875"
  },
  {
    "text": "for extreme lining and being as efficient as possible as a startup, things like documentation, I",
    "start": "2192875",
    "end": "2199375"
  },
  {
    "text": "care a lot about documentation. And the more we can put that on like autopilot, the better, right? So",
    "start": "2199375",
    "end": "2204875"
  },
  {
    "text": "the ability to take your public API endpoints, and the other schemas generate an open API spec is exactly the kind of things",
    "start": "2204875",
    "end": "2212458"
  },
  {
    "text": "that you want, right? So this was a very, very nice discovery.",
    "start": "2212458",
    "end": "2217250"
  },
  {
    "text": "Right. That makes a lot of sense. And I think that goes hand in hand with what I've also found in",
    "start": "2217791",
    "end": "2224000"
  },
  {
    "text": "my development practices over the years, is that I always started to think more",
    "start": "2224000",
    "end": "2230083"
  },
  {
    "text": "about the types of a system. That's like typically what I start out with. I just like described the",
    "start": "2230083",
    "end": "2236541"
  },
  {
    "text": "types. But then I've also found myself thinking about, actually, this data of this particular",
    "start": "2236541",
    "end": "2242708"
  },
  {
    "text": "type doesn't just live inside of this boundary of the system, but it needs to move across network",
    "start": "2242708",
    "end": "2249416"
  },
  {
    "text": "boundaries, across threat boundaries, etc. And now you're, you need to serialize, deserialize that",
    "start": "2249416",
    "end": "2255541"
  },
  {
    "text": "variable. And this is where schemas come in. So I ended up",
    "start": "2255541",
    "end": "2260916"
  },
  {
    "text": "doing exactly the same as you. Like I start thinking about like, okay, what data am I dealing",
    "start": "2260916",
    "end": "2266291"
  },
  {
    "text": "with here? And I modeled it as schemas and derived the types from it.",
    "start": "2266291",
    "end": "2270541"
  },
  {
    "text": "And well, we see this here as like a big revelation turns out in other programming languages, that's what you",
    "start": "2271500",
    "end": "2278250"
  },
  {
    "text": "always do. When you have like in Rust, etc. When you have like a struct definition, you can",
    "start": "2278250",
    "end": "2283500"
  },
  {
    "text": "derive schemas from it. But I think for TypeScript, this is really for most engineers, that's",
    "start": "2283500",
    "end": "2290166"
  },
  {
    "text": "something novel. And I think this is a pattern that should be embraced much more since I think",
    "start": "2290166",
    "end": "2296291"
  },
  {
    "text": "default is you just ignore the existence of a schema and you JSON stringify everything. And then you're",
    "start": "2296291",
    "end": "2303416"
  },
  {
    "text": "surprised what happens to your classes or to your dates. So yeah, that schema is such",
    "start": "2303416",
    "end": "2309916"
  },
  {
    "text": "an integral part of Effect, I think is no coincidence. And I'm very happy that it gets so",
    "start": "2309916",
    "end": "2316708"
  },
  {
    "text": "much attention for detail. Yeah, I mean, I would say it's not only the fact that you have like",
    "start": "2316708",
    "end": "2322125"
  },
  {
    "text": "decoding and encoding and so on, it's the fact that it's so much in",
    "start": "2322125",
    "end": "2328083"
  },
  {
    "text": "harmony with the rest of the whole like Effect way of doing things, right? So it just feels so,",
    "start": "2328083",
    "end": "2335958"
  },
  {
    "text": "you know, an integral part of effect itself. Yeah, I fully agree. So in regards to the",
    "start": "2335958",
    "end": "2344166"
  },
  {
    "start": "2342000",
    "end": "2505000"
  },
  {
    "text": "more challenging aspects, what were some of the challenges that you found working in an Effect code base?",
    "start": "2344166",
    "end": "2350416"
  },
  {
    "text": "Sure. I would say it can give you a sense of, you know",
    "start": "2351333",
    "end": "2357166"
  },
  {
    "text": "maybe a false sense of security. Because you think that everything is dealt with at the type level and you get no",
    "start": "2357166",
    "end": "2363458"
  },
  {
    "text": "flagged of compile time errors and so on. And this is partly true. But I think it's very,",
    "start": "2363458",
    "end": "2370416"
  },
  {
    "text": "very important. It's very important to understand that this is not the case. And it gives you",
    "start": "2370416",
    "end": "2376666"
  },
  {
    "text": "really good like foundation, but you're not exempt of or die or catch all that",
    "start": "2376833",
    "end": "2384291"
  },
  {
    "text": "was put at the end of your pipes. And so all the other errors in between are, you know, just you don't",
    "start": "2384291",
    "end": "2392083"
  },
  {
    "text": "see them. And we had an example where we had this bug in our code base, and it was quite hard to figure out",
    "start": "2392083",
    "end": "2398708"
  },
  {
    "text": "where it went wrong. So I think this is something that, you know, Effect is a very, very powerful tool. And it brings out the best in us,",
    "start": "2399291",
    "end": "2408166"
  },
  {
    "text": "you know, engineers, I think. But it also needs to be dealt with knowing that, you know,",
    "start": "2408166",
    "end": "2415708"
  },
  {
    "text": "it's not like a safety guard or anything, you can mess up and you can do things that are very hard",
    "start": "2415708",
    "end": "2421916"
  },
  {
    "text": "to then investigate because you've built up this, this sense of everything is just working smoothly. So this is one thing I think",
    "start": "2421916",
    "end": "2428458"
  },
  {
    "text": "that this is as important to keep in mind when you're building, you know, on top of Effect. I",
    "start": "2428458",
    "end": "2434041"
  },
  {
    "text": "think another thing that it gets, a little bit hard to track is, dependency",
    "start": "2434041",
    "end": "2439333"
  },
  {
    "text": "injection is just wonderful, in Effect. And I think that's, that's, I would mention this probably",
    "start": "2439333",
    "end": "2444708"
  },
  {
    "text": "as the second most important, discovery or delight of working with Effect. But,",
    "start": "2444708",
    "end": "2450750"
  },
  {
    "text": "you know, where do you put your dependency? Where is it in your code? How do you like chase the",
    "start": "2450750",
    "end": "2456458"
  },
  {
    "text": "dependency, you know, the service that you provided, that is now affecting a completely different",
    "start": "2456458",
    "end": "2462666"
  },
  {
    "text": "part of your code base, that might be, you know, some some tooling to build inside of the",
    "start": "2462666",
    "end": "2467291"
  },
  {
    "text": "IDE itself, to be able to make it easy to spot the connection, right. But now we still like in this",
    "start": "2467791",
    "end": "2473958"
  },
  {
    "text": "very barebone situation where it's kind of hard to understand exactly, you know, the hierarchy of",
    "start": "2473958",
    "end": "2480166"
  },
  {
    "text": "your dependencies, right, and where they are actually being used in your code. So it can be",
    "start": "2480166",
    "end": "2486208"
  },
  {
    "text": "a little bit hard to navigate sometimes. Right. Yeah, I found that myself as well in the project",
    "start": "2486208",
    "end": "2491541"
  },
  {
    "text": "I'm working on. And it is actually something that we're thinking about, that we could possibly",
    "start": "2491541",
    "end": "2497416"
  },
  {
    "text": "enhance through a IDE integration, etc. So stay, stay tuned for",
    "start": "2497791",
    "end": "2504041"
  },
  {
    "text": "for that. You said something interesting just before, where you said effect brings out the",
    "start": "2504041",
    "end": "2510583"
  },
  {
    "start": "2505000",
    "end": "2734000"
  },
  {
    "text": "best in us engineers. Can you elaborate on that? What do you mean by that Well, as an engineer,",
    "start": "2510583",
    "end": "2518125"
  },
  {
    "text": "you want to build features, you want to build like real robust systems, you want to spend ideally all your time doing",
    "start": "2518125",
    "end": "2525375"
  },
  {
    "text": "that. You don't want to spend your time fighting the language, fighting, you know, building something",
    "start": "2525375",
    "end": "2531375"
  },
  {
    "text": "that you know, the language was not meant for, to give you an example, like concurrency and TypeScript, right, these are things that",
    "start": "2531458",
    "end": "2537000"
  },
  {
    "text": "you know, you want a way to, you know, build a concurrent",
    "start": "2537000",
    "end": "2542916"
  },
  {
    "text": "system, where you're thinking about what is the system actually doing rather than like setting up",
    "start": "2542916",
    "end": "2548000"
  },
  {
    "text": "all the boilerplate in order to have that system in place. So I would",
    "start": "2548000",
    "end": "2554458"
  },
  {
    "text": "say Effect really gives you the right premise. So one thing I'm",
    "start": "2554458",
    "end": "2560041"
  },
  {
    "text": "thinking about is, now that we've completed this migration, the full migration, it kind of feels like",
    "start": "2560041",
    "end": "2566375"
  },
  {
    "text": "this is the end game. I know this might sound a bit like naive or unrealistic, but it kind of",
    "start": "2566375",
    "end": "2574125"
  },
  {
    "text": "feels like more stable. And at least if we continue building our code base on TypeScript with",
    "start": "2574125",
    "end": "2580166"
  },
  {
    "text": "Effect, it doesn't feel like we're going to spend many more like cycles, like refactoring",
    "start": "2580166",
    "end": "2586666"
  },
  {
    "text": "the code, right, it feels like this sort of timeless,",
    "start": "2586666",
    "end": "2591166"
  },
  {
    "text": "like code base now now now it's, it's, it's there. Effect is going to evolve, our code base is",
    "start": "2592166",
    "end": "2597791"
  },
  {
    "text": "going to evolve. It feels like this is going to be like adjustments and not like a full rewrite. And this is what I mean by, you know, it",
    "start": "2597791",
    "end": "2604208"
  },
  {
    "text": "feels like kind of like building a house with some really good like walls and floor and ceiling and",
    "start": "2604208",
    "end": "2609583"
  },
  {
    "text": "so on. It's just there now. And this is what we are all I guess, striving for as engineers is to",
    "start": "2609583",
    "end": "2616500"
  },
  {
    "text": "have these, you know, the right tools, right, the right foundations, instead of having to fight,",
    "start": "2616500",
    "end": "2622375"
  },
  {
    "text": "you know, all these like small things that degrade over time, and then need to revisit them. And you",
    "start": "2622375",
    "end": "2628958"
  },
  {
    "text": "realize how silly you were writing this code, you know, last year kind of thing, it feels like",
    "start": "2628958",
    "end": "2634708"
  },
  {
    "text": "more harmonious and stable Right. I love that. And I think that is also something that has",
    "start": "2634708",
    "end": "2642208"
  },
  {
    "text": "really brought me to Effect. And to flip it on its head, something that I experienced so many",
    "start": "2642208",
    "end": "2650250"
  },
  {
    "text": "times and have observed so many other teams as sort of like a",
    "start": "2650250",
    "end": "2655083"
  },
  {
    "text": "malfunction of engineering teams and of projects that engineers are afraid to make changes in a",
    "start": "2655541",
    "end": "2662916"
  },
  {
    "text": "project. And I've seen this time and time and time again. And when you're afraid to make changes to a",
    "start": "2662916",
    "end": "2669041"
  },
  {
    "text": "project, particularly if the code was written by someone else, maybe the person is no longer there.",
    "start": "2669041",
    "end": "2674500"
  },
  {
    "text": "That's terrible. Like if you're, if you're afraid to change something, you might not change it and you might not improve it. Or if you",
    "start": "2675083",
    "end": "2681458"
  },
  {
    "text": "change it, you don't know about the consequences, etc. And effect allows you to, gives you the",
    "start": "2681458",
    "end": "2688416"
  },
  {
    "text": "confidence to change something and you know what's going to happen. It even makes it fun to do so.",
    "start": "2688416",
    "end": "2694625"
  },
  {
    "text": "And I think that's sort of like a twin to the",
    "start": "2694625",
    "end": "2698750"
  },
  {
    "text": "aspect of composability, almost like the other side of the same coin, where if you can compose",
    "start": "2700333",
    "end": "2707958"
  },
  {
    "text": "things together, you can decompose things that makes, that's, those are just aspects of changing",
    "start": "2707958",
    "end": "2713750"
  },
  {
    "text": "something and changing not in a big bang way, but just moving things",
    "start": "2713916",
    "end": "2719708"
  },
  {
    "text": "around almost feels like a, like a dance. We're getting a little bit too, too like pie in the sky",
    "start": "2719708",
    "end": "2726458"
  },
  {
    "text": "here, but that's really like my reality as well, like working with Effect and one of the things that I like so much about it.",
    "start": "2726458",
    "end": "2733000"
  },
  {
    "text": "And another thing here may be looking a little bit more into the future, but we're increasingly living in the future where we get, where",
    "start": "2733625",
    "end": "2740875"
  },
  {
    "start": "2734000",
    "end": "3018000"
  },
  {
    "text": "we do a lot of our code development in an AI-assisted way. Now it's maybe no longer just us, us as",
    "start": "2740875",
    "end": "2748166"
  },
  {
    "text": "engineers doing performing changes on our code, but it's now AI systems performing changes on our",
    "start": "2748166",
    "end": "2754750"
  },
  {
    "text": "code. And this is where the same underlying dynamic is even more severe. If there is a system, if there is",
    "start": "2754750",
    "end": "2762958"
  },
  {
    "text": "some actor here who's changing our code, who is maybe even less competent or less knowledgeable",
    "start": "2762958",
    "end": "2770083"
  },
  {
    "text": "about this, then maybe even more scary to make changes to a system. And if the material here,",
    "start": "2770083",
    "end": "2778000"
  },
  {
    "text": "the house that we're building that you've mentioned, is where it's inviting to have changes be",
    "start": "2778000",
    "end": "2784708"
  },
  {
    "text": "made, that sets an even better foundation for those AI-assisted,",
    "start": "2784708",
    "end": "2789833"
  },
  {
    "text": "for this AI-assisted future. So that's something I love thinking about. Yeah, I agree. I think the guardrails",
    "start": "2790625",
    "end": "2801041"
  },
  {
    "text": "here are so important, right? You want to make sure that, whatever the LLM generates has as little",
    "start": "2801041",
    "end": "2809541"
  },
  {
    "text": "unintended side effects as possible, because it could hallucinate some code.",
    "start": "2809541",
    "end": "2815083"
  },
  {
    "text": "So if you can make sure that the blast radius is as tight, small as possible, then I think you have",
    "start": "2815416",
    "end": "2821875"
  },
  {
    "text": "a really good foundation. Obviously, I don't know where this is heading. Maybe we're going to be completely wrong and that we're not even",
    "start": "2821875",
    "end": "2827375"
  },
  {
    "text": "going to be thinking about code in the same way in the future. But it feels like it's a",
    "start": "2827375",
    "end": "2833208"
  },
  {
    "text": "really good way of ensuring that whatever an LLM generates stays",
    "start": "2833208",
    "end": "2840000"
  },
  {
    "text": "within the intended radius.",
    "start": "2840000",
    "end": "2844000"
  },
  {
    "text": "Exactly. And I think just to round this part out, Effect gives you a middle ground between",
    "start": "2845916",
    "end": "2853958"
  },
  {
    "text": "a natural language like English that might be more intuitive to",
    "start": "2854416",
    "end": "2860125"
  },
  {
    "text": "describe what a system should do, but maybe less concise, as opposed to a",
    "start": "2860125",
    "end": "2865791"
  },
  {
    "text": "type system or code, which can be more concise, but maybe less intuitive. And I feel",
    "start": "2865791",
    "end": "2871208"
  },
  {
    "text": "Effect is the best of both worlds, where you can, through the help of a type system, and",
    "start": "2871208",
    "end": "2876791"
  },
  {
    "text": "here in this case, TypeScript provides a marvelous type system that allows you to give you the",
    "start": "2876791",
    "end": "2882750"
  },
  {
    "text": "correctness benefits that you wouldn't get from English, yet it gives you that more intuitive way to",
    "start": "2882750",
    "end": "2889791"
  },
  {
    "text": "express and compose things. I feel like Effect is converging towards something that's the best of both",
    "start": "2889791",
    "end": "2896333"
  },
  {
    "text": "worlds here, that is actually a wonderful substrate for AIs to also compose",
    "start": "2896333",
    "end": "2902791"
  },
  {
    "text": "systems out of. Wish that the latest versions of LLMs have even better understanding of the latest developments",
    "start": "2902791",
    "end": "2908958"
  },
  {
    "text": "in Effect. But I think you mentioned that you have a nice hack, which is to clone the Effect repository in cursor and",
    "start": "2908958",
    "end": "2916625"
  },
  {
    "text": "then have it look at that while you're coding. Yeah, so that's actually a shout out to",
    "start": "2916625",
    "end": "2922750"
  },
  {
    "text": "our friend Tim Suchanek. He taught me about",
    "start": "2922750",
    "end": "2927500"
  },
  {
    "text": "this little trick, and I've since applied it many times also for other projects. I think we're currently in this uncanny",
    "start": "2928250",
    "end": "2934875"
  },
  {
    "text": "valley, where LLMs always lag behind on the latest and greatest of actual information. The",
    "start": "2934875",
    "end": "2942833"
  },
  {
    "text": "Effect docs, for example, in particular, they have really advanced a lot, got a lot better over the",
    "start": "2942833",
    "end": "2949291"
  },
  {
    "text": "last couple of months. And those LLMs that we're using on a daily basis have not fully caught up",
    "start": "2949291",
    "end": "2955833"
  },
  {
    "text": "to that level yet, and are also sometimes trained on old code snippets, different syntax,",
    "start": "2955833",
    "end": "2961791"
  },
  {
    "text": "etc. And so when you ask them, you might get an outdated response. So what Tim is doing, and since",
    "start": "2962041",
    "end": "2969500"
  },
  {
    "text": "he's taught me about this as well, is basically check out the Effect code base on your",
    "start": "2969500",
    "end": "2976500"
  },
  {
    "text": "computer locally, open Cursor in it, and then Cursor uses the full Effect repo with",
    "start": "2976500",
    "end": "2983291"
  },
  {
    "text": "all the examples, tests, etc. as the context. And then inside of that, you use the Cursor chat",
    "start": "2983291",
    "end": "2989625"
  },
  {
    "text": "to ask your question, and you're going to get a really useful result. So I've been using this a",
    "start": "2989625",
    "end": "2995458"
  },
  {
    "text": "bunch myself, but we're also working on some exciting improvements to the Effect docs, etc.,",
    "start": "2995458",
    "end": "3002750"
  },
  {
    "text": "where we're trying to combine the latest and greatest documentation with some of our own AI",
    "start": "3002750",
    "end": "3011500"
  },
  {
    "text": "developments as well. So stay tuned for that. You won't need those little tricks for too much longer.",
    "start": "3011500",
    "end": "3017791"
  },
  {
    "start": "3018000",
    "end": "3171000"
  },
  {
    "text": "So Michael, thank you so much for taking out so much of your busy day to share",
    "start": "3018291",
    "end": "3024291"
  },
  {
    "text": "about your experience and journey with Effect. Really greatly appreciate that you share all of that",
    "start": "3024291",
    "end": "3031250"
  },
  {
    "text": "with the entire audience here. Before rounding this out, is there anything else you would like to",
    "start": "3031250",
    "end": "3037500"
  },
  {
    "text": "share with the folks listening? I'm sure that you're",
    "start": "3037500",
    "end": "3042666"
  },
  {
    "text": "very busy building a lot of things, but you're also interested in bringing on more engineers.",
    "start": "3042666",
    "end": "3048583"
  },
  {
    "text": "Anyone in particular who should reach out to you? Yeah, so we are constantly hiring and we",
    "start": "3049541",
    "end": "3057208"
  },
  {
    "text": "are obviously, it's a full TypeScript Effect code base, but we are also very",
    "start": "3057208",
    "end": "3064875"
  },
  {
    "text": "much looking for engineers with an ML background. And we would warmly welcome them even if",
    "start": "3064875",
    "end": "3071541"
  },
  {
    "text": "they don't have specific TypeScript experience. So yeah, if you're interested in working",
    "start": "3071541",
    "end": "3078333"
  },
  {
    "text": "on such a code base, which I think is really, really nice and working on some really interesting",
    "start": "3078333",
    "end": "3084708"
  },
  {
    "text": "LLM related topics, then absolutely reach out.",
    "start": "3084708",
    "end": "3089666"
  },
  {
    "text": "Yeah, I couldn't give you a warmer recommendation to work at Markprompt. Michael, Marie,",
    "start": "3090791",
    "end": "3097958"
  },
  {
    "text": "Elliot, all the folks working at Markprompt are A plus humans. If I",
    "start": "3098583",
    "end": "3103791"
  },
  {
    "text": "wouldn't be doing all of the things I'm doing, I'd strongly consider working with you all as",
    "start": "3103791",
    "end": "3109166"
  },
  {
    "text": "well. So whoever gets a chance to work with you, I think you're making a very smart decision. So",
    "start": "3109166",
    "end": "3115375"
  },
  {
    "text": "now moving back my focus to you, Michael, thank you so much again for",
    "start": "3115375",
    "end": "3120916"
  },
  {
    "text": "taking time, sharing all of your experience and all of those anecdotes with us. I greatly",
    "start": "3120916",
    "end": "3126958"
  },
  {
    "text": "appreciate it. Well, thank you, Johannes. Always a pleasure to speak with you. Awesome.",
    "start": "3126958",
    "end": "3131791"
  },
  {
    "text": "Thank you so much. Thank you.",
    "start": "3132250",
    "end": "3133833"
  }
]