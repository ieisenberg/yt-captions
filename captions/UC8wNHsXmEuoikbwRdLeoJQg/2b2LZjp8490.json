[
  {
    "text": "Okay. Hey, everybody. We're back with another edition of",
    "start": "3933",
    "end": "9033"
  },
  {
    "text": "Reimagining Content Layer. Today, I've got Tim with me instead of Mike.",
    "start": "9033",
    "end": "14400"
  },
  {
    "text": "We're streaming a little bit later in the day, but yeah, I think the",
    "start": "15333",
    "end": "24066"
  },
  {
    "text": "last time we left off, we had just finished up our document definition.",
    "start": "24066",
    "end": "31000"
  },
  {
    "text": "I think we got to a pretty good place. So since this is Tim's first time on this streaming with us",
    "start": "31300",
    "end": "36333"
  },
  {
    "text": "on this particular topic, I figure I'll catch him up while I catch everybody else up.",
    "start": "36333",
    "end": "40599"
  },
  {
    "text": "But we had, Mike and I had been working on a definition for",
    "start": "41500",
    "end": "47166"
  },
  {
    "text": "documents in Content Layer. Essentially, the idea was that you might have",
    "start": "47166",
    "end": "52699"
  },
  {
    "text": "like a Content Layer config file, and you just have documents that you define there",
    "start": "52699",
    "end": "58032"
  },
  {
    "text": "and export from that file. And eventually the core engine would pick up",
    "start": "58033",
    "end": "64433"
  },
  {
    "text": "those document definitions and like do whatever needed to generate the content, blah, blah, blah, blah.",
    "start": "64533",
    "end": "68933"
  },
  {
    "text": "But the idea was that with our document definitions, we wanted to first of all,",
    "start": "69633",
    "end": "76565"
  },
  {
    "text": "like make them schema centric. So the constructor for our initial documents",
    "start": "76566",
    "end": "84066"
  },
  {
    "text": "would take in essentially a struct of schema fields. And like here's an",
    "start": "84699",
    "end": "91466"
  },
  {
    "text": "example down at the bottom here of what defining a document might look like.",
    "start": "91466",
    "end": "96199"
  },
  {
    "text": "So there's an author schema here, and then we use that author schema in our document definition.",
    "start": "97199",
    "end": "102399"
  },
  {
    "text": "So we're creating a post document here. It's got a name, a description.",
    "start": "102633",
    "end": "106632"
  },
  {
    "text": "We define a document source, which for now we just have like this mock file system source,",
    "start": "107699",
    "end": "113599"
  },
  {
    "text": "and then the fields of the document. So this would be like the front matter in a Markdown file or an MDX file.",
    "start": "114300",
    "end": "119833"
  },
  {
    "text": "And essentially the schema, this like struct schema would allow us to",
    "start": "120433",
    "end": "125833"
  },
  {
    "text": "encode and decode the fields of the document. And then we also added the ability to",
    "start": "125833",
    "end": "134133"
  },
  {
    "text": "define computed fields and we talked at length about this, but essentially the computed",
    "start": "134133",
    "end": "140133"
  },
  {
    "text": "fields can be added in groups. So the, I think I",
    "start": "140133",
    "end": "146900"
  },
  {
    "text": "actually do a pretty good job of defining it up here, but the computed fields of a document are grouped up into like",
    "start": "146900",
    "end": "155366"
  },
  {
    "text": "sequential groupings. So every group of computed fields is resolved sequentially.",
    "start": "155366",
    "end": "160699"
  },
  {
    "text": "So one group at a time, but the fields within each group can be resolved concurrently.",
    "start": "160699",
    "end": "165866"
  },
  {
    "text": "So like the resolver for each field in a group could be processed concurrently if it's possible.",
    "start": "166400",
    "end": "171032"
  },
  {
    "text": "And then the benefit of doing it this way too, is that for each group, once one group is processed, the next group gets",
    "start": "172733",
    "end": "179000"
  },
  {
    "text": "access to those computed fields to do different things. So you can have computed fields that are actually",
    "start": "179000",
    "end": "184099"
  },
  {
    "text": "like dependent upon each other. So like here, we're",
    "start": "184099",
    "end": "189199"
  },
  {
    "text": "adding two computed fields in this group, we've got slug and slug two.",
    "start": "189199",
    "end": "193000"
  },
  {
    "text": "And some of like the nice to haves that Mike and I worked on",
    "start": "194800",
    "end": "199566"
  },
  {
    "text": "were that like, if you define a field that already exists in the document,",
    "start": "200566",
    "end": "205666"
  },
  {
    "text": "you'll get like these nice errors that I haven't updated the actual error that you get yet,",
    "start": "206733",
    "end": "214566"
  },
  {
    "text": "but you get an error saying that like this key like shouldn't be there. There's like, for now, Mike",
    "start": "215133",
    "end": "221833"
  },
  {
    "text": "was making fun of me last time about using NeoVim. So that's why the error",
    "start": "221833",
    "end": "227400"
  },
  {
    "text": "reads, I hate my mouse, but it's kind of nice that you actually get",
    "start": "227400",
    "end": "232033"
  },
  {
    "text": "like duplicate field errors basically. And then the other nice thing in here is that the schema",
    "start": "232566",
    "end": "239199"
  },
  {
    "text": "that you define for computed field is actually enforced in the return type of the resolver. So if you like, for example, try to",
    "start": "239199",
    "end": "246900"
  },
  {
    "text": "return a number here, you'll get an error saying that, you know,",
    "start": "246900",
    "end": "255033"
  },
  {
    "text": "whatever your return type was is not assignable to what I was expecting. So we had some kind of nice to haves.",
    "start": "255800",
    "end": "261500"
  },
  {
    "text": "And then the third nice to have that we did was if we inspect the fields.",
    "start": "262199",
    "end": "267433"
  },
  {
    "text": "So in our first group of fields, we just have access to what we define on the document. But if we look at the",
    "start": "267933",
    "end": "273633"
  },
  {
    "text": "fields for this second group of computed, this second group of computed fields,",
    "start": "273633",
    "end": "278266"
  },
  {
    "text": "we actually have access to the fields that were in the previous group of computed fields.",
    "start": "278699",
    "end": "282800"
  },
  {
    "text": "And then there is an argument in the resolve function that I'm not currently using, but we also get access",
    "start": "284533",
    "end": "291000"
  },
  {
    "text": "to the metadata from the document source. So the document sources all have like",
    "start": "291133",
    "end": "297633"
  },
  {
    "text": "this metadata property on them. So if we go to like the",
    "start": "297633",
    "end": "303033"
  },
  {
    "text": "source file, why is this not happy?",
    "start": "303033",
    "end": "307565"
  },
  {
    "text": "Yes, it's not happy. But the documents sources essentially have this like",
    "start": "310800",
    "end": "319000"
  },
  {
    "text": "metadata that they can define. And when you define a document with metadata, it's extractable",
    "start": "319066",
    "end": "324233"
  },
  {
    "text": "within the actual document. So you can use things, the metadata from the document",
    "start": "324233",
    "end": "330566"
  },
  {
    "text": "source to construct computed fields. Yeah, questions about the",
    "start": "330566",
    "end": "336599"
  },
  {
    "text": "document definition, Tim, or suggestions, things that we missed.",
    "start": "336599",
    "end": "341233"
  },
  {
    "text": "- Got to the stage. - Very cool. - Very good.",
    "start": "343000",
    "end": "347300"
  },
  {
    "text": "So I'll just make this, I'm gonna comment this out for now.",
    "start": "350400",
    "end": "354465"
  },
  {
    "text": "And...",
    "start": "355900",
    "end": "356699"
  },
  {
    "text": "- So what are we",
    "start": "361566",
    "end": "366966"
  },
  {
    "text": "gonna be looking at today? - Today, I thought we could take a look at,",
    "start": "366966",
    "end": "372900"
  },
  {
    "text": "so we had started working on the content layer config file, like basically reading",
    "start": "373599",
    "end": "379366"
  },
  {
    "text": "it from the file system, watching it for changes and",
    "start": "379366",
    "end": "385099"
  },
  {
    "text": "essentially like trying to figure out how that was gonna hook into the engine. So if we look at what we did last time,",
    "start": "385099",
    "end": "392133"
  },
  {
    "text": "we created this little ESBuild plugin layer thing,",
    "start": "392433",
    "end": "396833"
  },
  {
    "text": "where essentially we have some ESBuild build options that we could specify as a service.",
    "start": "399199",
    "end": "404166"
  },
  {
    "text": "And we also have the ESBuild layer itself.",
    "start": "404933",
    "end": "408933"
  },
  {
    "text": "And the ESBuild layers were basically just a plugin",
    "start": "410666",
    "end": "415932"
  },
  {
    "text": "that we provide to ES... We basically add to the like build option plugins.",
    "start": "416933",
    "end": "423800"
  },
  {
    "text": "We just create like this plugin in line and add it to the build option plugins.",
    "start": "424066",
    "end": "427533"
  },
  {
    "text": "And we're essentially like using this to watch the content",
    "start": "429966",
    "end": "436232"
  },
  {
    "text": "layer config file. Well, really it's like any file that we're passing in",
    "start": "436233",
    "end": "442300"
  },
  {
    "text": "and the options, but the idea is to use this for the content layer config and then writing any build results",
    "start": "442800",
    "end": "449400"
  },
  {
    "text": "that we get to a queue that we can then make use of from within effect. So essentially like",
    "start": "449400",
    "end": "454965"
  },
  {
    "text": "this is allowing us to... Essentially allowing us to",
    "start": "454966",
    "end": "460500"
  },
  {
    "text": "take builds that we get from",
    "start": "460500",
    "end": "466233"
  },
  {
    "text": "ESBuild, put them into a queue that we can then use from within effect. Cool.",
    "start": "466266",
    "end": "470233"
  },
  {
    "text": "So now we were basically... So this like queue of results that we have here is",
    "start": "471433",
    "end": "478733"
  },
  {
    "text": "essentially like an either of either we get like a build result back from ESBuild or we get this ESBuild error.",
    "start": "478933",
    "end": "485133"
  },
  {
    "text": "And once we had finished like working on this service,",
    "start": "488000",
    "end": "493433"
  },
  {
    "text": "I mean, I'm sure there's like things we're going to have to revisit here, but this was just like very basic implementation of like an",
    "start": "493766",
    "end": "499033"
  },
  {
    "text": "ESBuild watcher that we could use. And then we started looking at the actual config,",
    "start": "499033",
    "end": "506533"
  },
  {
    "text": "which I started sketching something out here, but I'm not exactly sure",
    "start": "507233",
    "end": "513198"
  },
  {
    "text": "where we want to take this. The idea here is that we want to be able to read the",
    "start": "513199",
    "end": "520665"
  },
  {
    "text": "information that we're getting from an our ESBuild result and create the configuration",
    "start": "521433",
    "end": "529165"
  },
  {
    "text": "for content layer based off that, right? So we don't exactly know like what the content layer",
    "start": "529166",
    "end": "534933"
  },
  {
    "text": "config like data type is going to look like yet, but at a very minimum, when we get our,",
    "start": "535000",
    "end": "542100"
  },
  {
    "text": "when we're like reading our queue of build results,",
    "start": "542433",
    "end": "547100"
  },
  {
    "text": "at a minimum I'm anticipating that we're going to want probably like an array of",
    "start": "547800",
    "end": "553000"
  },
  {
    "text": "documents because the content",
    "start": "553000",
    "end": "559333"
  },
  {
    "text": "layer config is going to be like the idea that Mike and I",
    "start": "559333",
    "end": "564532"
  },
  {
    "text": "had had was that the content layer config is going to be exporting these documents just like as top level objects.",
    "start": "564533",
    "end": "570600"
  },
  {
    "text": "So you'd have like from the content layer config, you might have like, you might export a post document",
    "start": "570899",
    "end": "575333"
  },
  {
    "text": "author blog, you know, docs page, blog post, whatever, you might export multiple different documents.",
    "start": "576666",
    "end": "582800"
  },
  {
    "text": "So at a very minimum, this like content layer,",
    "start": "583500",
    "end": "588532"
  },
  {
    "text": "this like results queue here, which we're getting from our ESBuild service.",
    "start": "590166",
    "end": "593600"
  },
  {
    "text": "Should be able to read those documents until like an array that we can then use.",
    "start": "597199",
    "end": "602100"
  },
  {
    "text": "And the other thing that I was talking to Mike about was that it would be great if we",
    "start": "605500",
    "end": "612266"
  },
  {
    "text": "could do this in such a way that the configuration that",
    "start": "612266",
    "end": "618566"
  },
  {
    "text": "we generate from this service can be reloaded in the environment.",
    "start": "618566",
    "end": "624399"
  },
  {
    "text": "Anytime the content layer config changes, but to like do that",
    "start": "625899",
    "end": "632333"
  },
  {
    "text": "without affecting the the",
    "start": "632399",
    "end": "638100"
  },
  {
    "text": "ESBuild watcher that we've already set up, right? Cause we essentially trying to avoid reloading ESBuild",
    "start": "638100",
    "end": "644500"
  },
  {
    "text": "every time, which this currently does, right? Cause I'm reloading the full live layer.",
    "start": "644500",
    "end": "651733"
  },
  {
    "text": "So I probably should do something more like this, but the idea is like every time, like",
    "start": "652233",
    "end": "659000"
  },
  {
    "text": "what I want to achieve here is that every time we get a new ESBuild results here,",
    "start": "659000",
    "end": "663966"
  },
  {
    "text": "which represents a change to the content layer config that the user made, every time we get a new build results,",
    "start": "664500",
    "end": "671199"
  },
  {
    "text": "I'd like to reload the configuration service in the environment of the program",
    "start": "672133",
    "end": "678066"
  },
  {
    "text": "so that we can basically do everything else that we need to do with the documents that we have, right?",
    "start": "678066",
    "end": "683100"
  },
  {
    "text": "Like regenerate the documents, populate the cache, check if we need to like, et cetera, et cetera.",
    "start": "683633",
    "end": "691433"
  },
  {
    "text": "- I think we'll see what the description here probably.",
    "start": "691433",
    "end": "694733"
  },
  {
    "text": "Let's try",
    "start": "696899",
    "end": "697300"
  },
  {
    "text": "- For now.",
    "start": "708633",
    "end": "715566"
  },
  {
    "text": "- Yeah. So instead of curd offer, it would be subscription ref i guess",
    "start": "716933",
    "end": "723800"
  },
  {
    "text": "- Let's do this. - And there would be an option, option of any",
    "start": "736666",
    "end": "741433"
  },
  {
    "text": "because you'll start out with an empty state.",
    "start": "742133",
    "end": "744933"
  },
  {
    "text": "Option.",
    "start": "749966",
    "end": "750166"
  },
  {
    "text": "- For those of you who were here last time, you'll know that I'm still struggling. You'll be happy now I'm still",
    "start": "758533",
    "end": "763600"
  },
  {
    "text": "struggling with many of them key binds, but I've gotten a little bit better. - Then we can get rid of that Q.",
    "start": "763600",
    "end": "771333"
  },
  {
    "text": "And I guess we can expose it as just a stream and then filter out the",
    "start": "772833",
    "end": "782365"
  },
  {
    "text": "nuns or filter method.",
    "start": "782366",
    "end": "784733"
  },
  {
    "text": "- That would be conflict changes.",
    "start": "789300",
    "end": "793633"
  },
  {
    "text": "Yeah, then filter map identity.",
    "start": "797699",
    "end": "800365"
  },
  {
    "text": "- Filter map. - That's D. - We should have a stream of any now.",
    "start": "810633",
    "end": "818966"
  },
  {
    "text": "- Cool.",
    "start": "821933",
    "end": "823600"
  },
  {
    "text": "- Actually we want to do that. Cause when you're consuming this,",
    "start": "828566",
    "end": "832833"
  },
  {
    "text": "what would it look like? - Well, I think that the, I think that,",
    "start": "835699",
    "end": "849399"
  },
  {
    "text": "yeah, I mean, I think what we want to keep in mind is that like eventually this is going to be something that we reload, right?",
    "start": "852133",
    "end": "857833"
  },
  {
    "text": "Maybe we don't have to do it this way. We could do it using a subscription ref, which would negate the need for like reloading.",
    "start": "858966",
    "end": "865133"
  },
  {
    "text": "The layer, we could just watch the changes of the, we could do it in a",
    "start": "866166",
    "end": "872133"
  },
  {
    "text": "streaming fashion that way. So let's actually get rid of this reloadable stuff for now. We'll abandon my idea.",
    "start": "872133",
    "end": "878366"
  },
  {
    "text": "That's where it wanted identity, cool. - I guess you think about the domain more, it's not a reloadable service,",
    "start": "888566",
    "end": "895300"
  },
  {
    "text": "but it's a kind of like reactive configuration. So I feel like a subscription ref",
    "start": "895600",
    "end": "901333"
  },
  {
    "text": "is the right way of modeling it. - Yeah, I think that makes sense.",
    "start": "901333",
    "end": "907933"
  },
  {
    "text": "We can go with that for now. I think that I like that idea and I think it makes more sense. I feel like reloadable",
    "start": "909266",
    "end": "915433"
  },
  {
    "text": "as a concept and effect is useful for a very small number of things.",
    "start": "915433",
    "end": "920933"
  },
  {
    "text": "I think that it's most useful when you have a service that you wanna reload on a schedule",
    "start": "921233",
    "end": "925665"
  },
  {
    "text": "because then you don't have to manually reload. You can just use the auto reloading.",
    "start": "926566",
    "end": "932233"
  },
  {
    "text": "Let's see if we can maybe sketch out a little bit of what the config will look like",
    "start": "935566",
    "end": "940699"
  },
  {
    "text": "so we can get some types to help us. So at a minimum, I want the configuration",
    "start": "940699",
    "end": "949633"
  },
  {
    "text": "config to have a read only array, maybe. I mean, I'm not 100% sure of this yet,",
    "start": "951333",
    "end": "956366"
  },
  {
    "text": "but I think we probably want a read only array of documents",
    "start": "956966",
    "end": "963300"
  },
  {
    "text": "and it's actually gonna be,",
    "start": "964766",
    "end": "966365"
  },
  {
    "text": "if we go back to, so wait,",
    "start": "971033",
    "end": "973633"
  },
  {
    "text": "not that, that's, and then if we go back to here, maybe if we went backwards from usage,",
    "start": "977166",
    "end": "983800"
  },
  {
    "text": "we'd probably have like a constructor function like make config or something, or config.make",
    "start": "986000",
    "end": "992665"
  },
  {
    "text": "and then they would pass in this interface.",
    "start": "994166",
    "end": "997466"
  },
  {
    "text": "- Okay, so give me an idea what you have.",
    "start": "999500",
    "end": "1003066"
  },
  {
    "text": "- So when using this package, users will want type safe configuration,",
    "start": "1006199",
    "end": "1012833"
  },
  {
    "text": "or they wanna declare the configuration a type safe way. And when the best way to do that",
    "start": "1014333",
    "end": "1020366"
  },
  {
    "text": "is providing some kind of factory. - Well, the idea that is currently that,",
    "start": "1020366",
    "end": "1028666"
  },
  {
    "text": "assume that this is their content layer config file, right? So this is content",
    "start": "1030966",
    "end": "1036333"
  },
  {
    "text": "layer.config.ts here, right? In their content layer config,",
    "start": "1036333",
    "end": "1042066"
  },
  {
    "text": "they would essentially just be defining documents that are exported and that's really it. This is their configuration.",
    "start": "1043000",
    "end": "1048398"
  },
  {
    "text": "On the inside, the config service that we're working with here is not actually ever exposed to the user.",
    "start": "1049133",
    "end": "1055433"
  },
  {
    "text": "This is more of like a engine level service. So the documents that we get are not gonna be typed",
    "start": "1055433",
    "end": "1060533"
  },
  {
    "text": "because they're gonna be getting imported, which is why we need to-- - There'll be like",
    "start": "1060533",
    "end": "1066433"
  },
  {
    "text": "more configuration options we wanna add in the future. And by going with that pattern,",
    "start": "1066433",
    "end": "1072800"
  },
  {
    "text": "you're kind of like limiting yourself in the future.",
    "start": "1072800",
    "end": "1077333"
  },
  {
    "text": "- So yeah, so like then, what are you thinking here?",
    "start": "1079766",
    "end": "1086166"
  },
  {
    "text": "- I guess we could just do a default export in our configuration file,",
    "start": "1087633",
    "end": "1093398"
  },
  {
    "text": "and then you like call something like config.make constructor",
    "start": "1093633",
    "end": "1098666"
  },
  {
    "text": "or something and then it has a documents field. - So something like where you have like,",
    "start": "1098966",
    "end": "1104266"
  },
  {
    "text": "instead of exporting the documents directly, maybe at like the very bottom of your content layer config,",
    "start": "1104266",
    "end": "1109833"
  },
  {
    "text": "you'd have like an export default, blah, blah, blah. And in here, there'd be like",
    "start": "1110600",
    "end": "1116600"
  },
  {
    "text": "a documents where you'd pass. - So here you have some kind of constructor",
    "start": "1116600",
    "end": "1122065"
  },
  {
    "text": "that we provide, which provides type safety around.",
    "start": "1122366",
    "end": "1127232"
  },
  {
    "text": "Yeah. And then in the future,",
    "start": "1128666",
    "end": "1133766"
  },
  {
    "text": "if we decide to add other configuration options,",
    "start": "1133766",
    "end": "1137366"
  },
  {
    "text": "we just add it to that interface.",
    "start": "1139399",
    "end": "1143266"
  },
  {
    "text": "- You just wanna make sure like in the future, we have some options. - Yeah, no, it's possible.",
    "start": "1151166",
    "end": "1156033"
  },
  {
    "text": "- We add options. - No, this makes sense.",
    "start": "1156633",
    "end": "1159866"
  },
  {
    "text": "This makes sense. So then,",
    "start": "1162366",
    "end": "1165766"
  },
  {
    "text": "so then, well,",
    "start": "1168166",
    "end": "1171199"
  },
  {
    "text": "then this like config service, I guess shouldn't really be called config.",
    "start": "1173899",
    "end": "1179666"
  },
  {
    "text": "- The config watcher.",
    "start": "1180033",
    "end": "1184666"
  },
  {
    "text": "- Let's call it config builder for now.",
    "start": "1185433",
    "end": "1189898"
  },
  {
    "text": "And then, so,",
    "start": "1191833",
    "end": "1196333"
  },
  {
    "text": "the interface for... - It is a config module,",
    "start": "1201266",
    "end": "1207899"
  },
  {
    "text": "which is responsible for the domain.",
    "start": "1209766",
    "end": "1213466"
  },
  {
    "text": "- Right. And actually let's move this there. So let's do,",
    "start": "1215733",
    "end": "1219066"
  },
  {
    "text": "config.ts.",
    "start": "1221333",
    "end": "1222166"
  },
  {
    "text": "I know that in Vim there's a way, there's stuff to do find and replace, but I have enough key binds",
    "start": "1231300",
    "end": "1237832"
  },
  {
    "text": "I need to memorize right now. So don't add me.",
    "start": "1237833",
    "end": "1240132"
  },
  {
    "text": "File has been changed since reading it. Yes, write it.",
    "start": "1243399",
    "end": "1246898"
  },
  {
    "text": "So this is the config builder.",
    "start": "1248733",
    "end": "1253600"
  },
  {
    "text": "And then I think I just wrote those changes to config as well.",
    "start": "1254100",
    "end": "1257133"
  },
  {
    "text": "Let's just do this. Cool.",
    "start": "1265033",
    "end": "1269633"
  },
  {
    "text": "So then config builder gives us like the, the thing that",
    "start": "1270066",
    "end": "1275466"
  },
  {
    "text": "actually like reads from the, ESbuild results and puts config entries",
    "start": "1275466",
    "end": "1281633"
  },
  {
    "text": "into a subscription ref, but the actual domain definition of the config will go in here.",
    "start": "1281633",
    "end": "1285500"
  },
  {
    "text": "And so maybe we can just start sketching this out a little bit.",
    "start": "1287000",
    "end": "1290666"
  },
  {
    "text": "actually you said you wanted to do this from usage first, right? So... - I will need this interface regardless,",
    "start": "1297233",
    "end": "1304100"
  },
  {
    "text": "because it will just be an identity function essentially.",
    "start": "1304966",
    "end": "1308933"
  },
  {
    "text": "And actually we need to",
    "start": "1314366",
    "end": "1316433"
  },
  {
    "text": "go over here because it would be nice if we had a,",
    "start": "1321566",
    "end": "1326233"
  },
  {
    "text": "any helper for the document, because we can't have typed documents",
    "start": "1328399",
    "end": "1334266"
  },
  {
    "text": "after we export them, we need to rely on the schema that's inside them. So type any equals,",
    "start": "1334266",
    "end": "1341466"
  },
  {
    "text": "right, any, any.",
    "start": "1346233",
    "end": "1348800"
  },
  {
    "text": "Okay.",
    "start": "1353733",
    "end": "1353966"
  },
  {
    "text": "Okay. And then we just have like a simple make, which is an identity.",
    "start": "1360533",
    "end": "1366065"
  },
  {
    "text": "Actually, can I just do, oh, okay.",
    "start": "1380600",
    "end": "1383399"
  },
  {
    "text": "So for now it's just a simple identity, but maybe there'll be things we need to transform in the future.",
    "start": "1389033",
    "end": "1393100"
  },
  {
    "text": "Actually, wait, we could do, no, this is fine.",
    "start": "1394433",
    "end": "1400666"
  },
  {
    "text": "Okay. So going back to our config builder, we can now make this a...",
    "start": "1402066",
    "end": "1412966"
  },
  {
    "text": "- Config. - Is this gonna be an option of config",
    "start": "1415433",
    "end": "1420533"
  },
  {
    "text": "or can we just have maybe like, maybe we can have an empty config? No, that's not really useful.",
    "start": "1420666",
    "end": "1425632"
  },
  {
    "text": "- Perfect big option, not very good fun. - Big.",
    "start": "1427566",
    "end": "1431100"
  },
  {
    "text": "So we're getting back the results. - Yeah, I figure, so in this,",
    "start": "1444800",
    "end": "1452100"
  },
  {
    "text": "I have this like build configuration function, which can take in the ESbuild result",
    "start": "1452633",
    "end": "1457233"
  },
  {
    "text": "and will produce us an effective config, I guess. - I guess you probably",
    "start": "1458333",
    "end": "1464699"
  },
  {
    "text": "need to validate it somehow.",
    "start": "1464699",
    "end": "1468433"
  },
  {
    "text": "- Yeah, there's definitely gonna be some validation in here.",
    "start": "1469766",
    "end": "1474933"
  },
  {
    "text": "How do I do this? Shift R, no.",
    "start": "1481833",
    "end": "1484066"
  },
  {
    "text": "- I guess the config constructor could add a symbol",
    "start": "1492600",
    "end": "1497632"
  },
  {
    "text": "and then we can just validate the symbols there. - It's a good idea. - That will save us from doing annoying",
    "start": "1498666",
    "end": "1508199"
  },
  {
    "text": "kind of like structure checking. - Yeah, type ID equals symbol dot four.",
    "start": "1508933",
    "end": "1518166"
  },
  {
    "text": "Yeah, effect content and Johannes, I actually confirmed with Johannes, but he was gracious enough to allow us",
    "start": "1520000",
    "end": "1526833"
  },
  {
    "text": "to use the content layer, no moniker for this project.",
    "start": "1526833",
    "end": "1531733"
  },
  {
    "text": "So at some point I'll go back and change all of our usage of effect content to effect content layer because I think it's a great name.",
    "start": "1531966",
    "end": "1538132"
  },
  {
    "text": "config - I wonder if ESBuild",
    "start": "1539399",
    "end": "1549366"
  },
  {
    "text": "preserved that, wouldn't we? - Well, won't we be adding it?",
    "start": "1549366",
    "end": "1556266"
  },
  {
    "text": "- I guess we could, but we're trying to know a string identifier",
    "start": "1557266",
    "end": "1562766"
  },
  {
    "text": "should be the same symbol. - I guess we'll find out.",
    "start": "1563066",
    "end": "1566433"
  },
  {
    "text": "- We will. - Slowly introducing interesting potential bugs.",
    "start": "1569066",
    "end": "1574732"
  },
  {
    "text": "- So we want a config without the symbol but the config with the symbol.",
    "start": "1575766",
    "end": "1581866"
  },
  {
    "text": "Cool, and then make should add the symbol you said, right? - So we'll take it to config dot more",
    "start": "1644066",
    "end": "1650632"
  },
  {
    "text": "and then return config.",
    "start": "1652000",
    "end": "1654166"
  },
  {
    "text": "- I will adjust that in a moment. As soon as I remember all my key buttons.",
    "start": "1659466",
    "end": "1666766"
  },
  {
    "text": "I have thoroughly been enjoying NeoVim so far.",
    "start": "1672800",
    "end": "1675833"
  },
  {
    "text": "Config dot raw. But there are certain",
    "start": "1679399",
    "end": "1685933"
  },
  {
    "text": "things I'm still not great at. I still need to learn how to navigate between files",
    "start": "1685933",
    "end": "1691366"
  },
  {
    "text": "and open tabs and search buffers and move stuff around a little bit better,",
    "start": "1691366",
    "end": "1696800"
  },
  {
    "text": "but one key bind at a time. All right, let's see.",
    "start": "1696800",
    "end": "1701966"
  },
  {
    "text": "- Let me get the site. - Let's see, so now if we",
    "start": "1703966",
    "end": "1711366"
  },
  {
    "text": "go back to config builder. So these are gonna be",
    "start": "1711366",
    "end": "1716966"
  },
  {
    "text": "subscription refs of config because we've already, when we get our result,",
    "start": "1716966",
    "end": "1722799"
  },
  {
    "text": "no, we're gonna actually import the file inside probably somewhere inside build.",
    "start": "1729600",
    "end": "1734866"
  },
  {
    "text": "We're gonna actually do like the importing and everything like that. - Maybe if you edit",
    "start": "1734866",
    "end": "1740433"
  },
  {
    "text": "talk, I mean a runtime guard and the config module as well. That is config.",
    "start": "1740433",
    "end": "1745632"
  },
  {
    "text": "Cause we all need to use that somewhere. - Indeed, good idea. Export const, and actually let me go.",
    "start": "1748000",
    "end": "1754666"
  },
  {
    "text": "Should probably be using namespace imports.",
    "start": "1758500",
    "end": "1762433"
  },
  {
    "text": "Pretty good. Oh my God.",
    "start": "1765133",
    "end": "1770500"
  },
  {
    "text": "- Yes, indeed. Is config equals,",
    "start": "1774333",
    "end": "1780666"
  },
  {
    "text": "u unknown, u is config.",
    "start": "1781233",
    "end": "1787333"
  },
  {
    "text": "And this is going to be predicate that is object. - Maybe you just use has property.",
    "start": "1790166",
    "end": "1796933"
  },
  {
    "text": "- Don't I have to check for is object first or does has property do it? - Three.",
    "start": "1798533",
    "end": "1804300"
  },
  {
    "text": "- Nice, pretty good that has property. You type ID.",
    "start": "1805333",
    "end": "1811065"
  },
  {
    "text": "- Brilliant. - Cool.",
    "start": "1812833",
    "end": "1817866"
  },
  {
    "text": "Looks good, okay. So, do you know what the config is in NeoVim?",
    "start": "1820766",
    "end": "1831699"
  },
  {
    "text": "I have the thing where like if I'm scrolling through a file, it gives me like 10 lines before and after,",
    "start": "1831733",
    "end": "1836233"
  },
  {
    "text": "but do you know how to get it to give me empty lines at the end of a file?",
    "start": "1836833",
    "end": "1839366"
  },
  {
    "text": "If not, I can always look it up later, but. - I can't read the.",
    "start": "1841933",
    "end": "1847033"
  },
  {
    "text": "- All right. This is most likely gonna be a generator.",
    "start": "1850466",
    "end": "1855500"
  },
  {
    "text": "So let's think about this for a minute. In our,",
    "start": "1859666",
    "end": "1864833"
  },
  {
    "text": "in our build function, we're gonna need to do some stuff.",
    "start": "1865933",
    "end": "1870866"
  },
  {
    "text": "Oh, I forgot to show you guys the other thing that I did off stream last time. I gave us just an easy way to test stuff.",
    "start": "1874433",
    "end": "1883266"
  },
  {
    "text": "So, not easy way, I guess, but I added a little CLI package in here,",
    "start": "1885000",
    "end": "1893500"
  },
  {
    "text": "which just has like a really, really simple command line interface for content layer,",
    "start": "1893633",
    "end": "1899466"
  },
  {
    "text": "which just adds a root command for the content layer, like root command,",
    "start": "1899666",
    "end": "1905100"
  },
  {
    "text": "and then it also has two options. So allows you to specify the path to a content layer config file,",
    "start": "1905366",
    "end": "1913033"
  },
  {
    "text": "falling back to pulling from config, and then also as an option for watch mode.",
    "start": "1914666",
    "end": "1919966"
  },
  {
    "text": "So I thought this would be useful for like if we had code that we eventually needed to start running",
    "start": "1920266",
    "end": "1925732"
  },
  {
    "text": "and wanted to like just use a CLI to do it, added this.",
    "start": "1925899",
    "end": "1928433"
  },
  {
    "text": "Okay, so back to here.",
    "start": "1931233",
    "end": "1937333"
  },
  {
    "text": "Okay. So yeah, there are a bunch of things that we're gonna need to do",
    "start": "1940766",
    "end": "1945833"
  },
  {
    "text": "when we're actually building. I guess the first",
    "start": "1945833",
    "end": "1951266"
  },
  {
    "text": "thing we might wanna do is",
    "start": "1951266",
    "end": "1952966"
  },
  {
    "text": "check if there are...",
    "start": "1956466",
    "end": "1958100"
  },
  {
    "text": "No, we already checked if there are errors, I think.",
    "start": "1961733",
    "end": "1964266"
  },
  {
    "text": "All right, let's see. So inside... - If the symbol family is gonna work,",
    "start": "1968933",
    "end": "1976666"
  },
  {
    "text": "I'm not sure about this - Say that again, Tim.",
    "start": "1977033",
    "end": "1981633"
  },
  {
    "text": "- We need to see if that symbol check is gonna work.",
    "start": "1983033",
    "end": "1986966"
  },
  {
    "text": "- We can try to set something up. Let's see.",
    "start": "1988366",
    "end": "1992933"
  },
  {
    "text": "So let's just do...",
    "start": "1996366",
    "end": "1999533"
  },
  {
    "text": "Jeez. I'm gonna return just a dummy empty config from here",
    "start": "2001533",
    "end": "2007665"
  },
  {
    "text": "for now so that we can just run the check internally.",
    "start": "2007666",
    "end": "2010966"
  },
  {
    "text": "Oh my God, it has config.make",
    "start": "2012800",
    "end": "2017433"
  },
  {
    "text": "and then we'll just do documents. - So does this build",
    "start": "2018366",
    "end": "2027000"
  },
  {
    "text": "compile the tax script in the same context as the build?",
    "start": "2027000",
    "end": "2031433"
  },
  {
    "text": "- I don't know the answer to that.",
    "start": "2032066",
    "end": "2036633"
  },
  {
    "text": "- Because if it's like, if it has closures in the config, I'm not sure what happens there.",
    "start": "2038233",
    "end": "2044766"
  },
  {
    "text": "- I don't think it does, so we may need to rethink this a little bit, but...",
    "start": "2046133",
    "end": "2051699"
  },
  {
    "text": "- I mean, you should be able to define functions in your config and have that come through.",
    "start": "2052800",
    "end": "2057898"
  },
  {
    "text": "- True.",
    "start": "2058833",
    "end": "2059565"
  },
  {
    "text": "- We're going to wanna be",
    "start": "2067233",
    "end": "2079166"
  },
  {
    "text": "able to do something like this to test and then have some config",
    "start": "2079166",
    "end": "2084300"
  },
  {
    "text": "that we read from somewhere.",
    "start": "2084300",
    "end": "2085399"
  },
  {
    "text": "There's a... Let me see.",
    "start": "2090033",
    "end": "2096133"
  },
  {
    "text": "And the esbuild result. Right, it's an either.",
    "start": "2097466",
    "end": "2100500"
  },
  {
    "text": "We probably want to just get",
    "start": "2104166",
    "end": "2108966"
  },
  {
    "text": "successful esbuild results here, right? Like I'm thinking that when you have a...",
    "start": "2110966",
    "end": "2118533"
  },
  {
    "text": "When you have a config that you define that did not result in a successful esbuild,",
    "start": "2119000",
    "end": "2124066"
  },
  {
    "text": "you probably just wanna stop and not... Like you can take the result, but then you probably",
    "start": "2125166",
    "end": "2130333"
  },
  {
    "text": "don't wanna actually build it. You probably wanna log something out to the user and then keep going.",
    "start": "2130333",
    "end": "2137166"
  },
  {
    "text": "- Yeah, you would wanna log the error and then wait until it changed.",
    "start": "2137800",
    "end": "2141666"
  },
  {
    "text": "- So let's just change this one second to build the result.",
    "start": "2143133",
    "end": "2147199"
  },
  {
    "text": "And now we should have like the properties on.",
    "start": "2166699",
    "end": "2168599"
  },
  {
    "text": "Okay, so what are we doing here? We are taking the results.",
    "start": "2175866",
    "end": "2183199"
  },
  {
    "text": "We probably want to auto flatten the either.",
    "start": "2193333",
    "end": "2198033"
  },
  {
    "text": "And then catch it and do something with it. I think that would work.",
    "start": "2199600",
    "end": "2207033"
  },
  {
    "text": "- Yeah, I guess it's the responsibility of a service",
    "start": "2207033",
    "end": "2212500"
  },
  {
    "text": "to display the errors. - I think that it's the",
    "start": "2212866",
    "end": "2219599"
  },
  {
    "text": "responsibility of this service to display errors related to the config.",
    "start": "2219600",
    "end": "2224666"
  },
  {
    "text": "Not the responsibility. - Yeah, the results coming back. All the esbuild service is",
    "start": "2225899",
    "end": "2232000"
  },
  {
    "text": "doing is attempting to build and reporting whether it was an error or a success.",
    "start": "2232000",
    "end": "2236066"
  },
  {
    "text": "And the config builder should display like error messages to the user if an error occurs.",
    "start": "2237666",
    "end": "2246100"
  },
  {
    "text": "Otherwise it should build the config and update the subscription ref. So maybe what we can do",
    "start": "2247100",
    "end": "2253966"
  },
  {
    "text": "is flatten the either.",
    "start": "2255399",
    "end": "2257765"
  },
  {
    "text": "- And then catch it.",
    "start": "2260500",
    "end": "2267166"
  },
  {
    "text": "No. Oh my God, NeoVim Okay.",
    "start": "2270433",
    "end": "2275000"
  },
  {
    "text": "- Maybe it's still like a catch error cause for now. It'd log out of the cause.",
    "start": "2280000",
    "end": "2285233"
  },
  {
    "text": "- Catch error cause, catch all cause. Yeah, this way we",
    "start": "2288166",
    "end": "2293666"
  },
  {
    "text": "don't have to figure out how we're gonna display errors yet. Effect.log error.",
    "start": "2293666",
    "end": "2299966"
  },
  {
    "text": "Let's just do a log",
    "start": "2304966",
    "end": "2310033"
  },
  {
    "text": "nice messages for the user.",
    "start": "2310033",
    "end": "2313300"
  },
  {
    "text": "Okay. So here.",
    "start": "2316433",
    "end": "2321466"
  },
  {
    "text": "- We'll have a successful result now. - Yeah, so this is, say it again.",
    "start": "2322300",
    "end": "2328866"
  },
  {
    "text": "- Do we have a talk for a successful result? - Yeah, so the esbuild",
    "start": "2329533",
    "end": "2334966"
  },
  {
    "text": "result type is basically in either it's basically in",
    "start": "2334966",
    "end": "2341833"
  },
  {
    "text": "either of, oh my God, this. This. The esbuild result or an esbuild error.",
    "start": "2341833",
    "end": "2348966"
  },
  {
    "text": "So the, we're basically getting the raw esbuild result back. - Okay.",
    "start": "2349466",
    "end": "2353966"
  },
  {
    "text": "- So. - I feel like we should rename one of those",
    "start": "2357333",
    "end": "2363432"
  },
  {
    "text": "because it's, we've got two things of result of the name. - Fair enough.",
    "start": "2364699",
    "end": "2371599"
  },
  {
    "text": "- What do you, maybe it makes more sense to. - Oh, it's a success.",
    "start": "2372100",
    "end": "2376932"
  },
  {
    "text": "- So let's do.",
    "start": "2377833",
    "end": "2382666"
  },
  {
    "text": "Just like a type alias you were saying.",
    "start": "2385899",
    "end": "2391733"
  },
  {
    "text": "If this is an interface, we can make it opaque.",
    "start": "2394466",
    "end": "2398533"
  },
  {
    "text": "- Build result. I don't know why my eslint",
    "start": "2405166",
    "end": "2410933"
  },
  {
    "text": "doesn't read from the config or whatever, esbuild success.",
    "start": "2410933",
    "end": "2416033"
  },
  {
    "text": "ESbuild success. - Is eslint build result not a record?",
    "start": "2418733",
    "end": "2427366"
  },
  {
    "text": "- Say that one more time, Tim, sorry. - Is the raw esbuild result not a",
    "start": "2428266",
    "end": "2435966"
  },
  {
    "text": "compatible type of it? - No, it is, I think it's an interface.",
    "start": "2435966",
    "end": "2440233"
  },
  {
    "text": "- It's saying that I have an empty interface.",
    "start": "2443366",
    "end": "2445233"
  },
  {
    "text": "But we have that, I think turned off in our eslint config. It's just that I probably don't have",
    "start": "2449066",
    "end": "2455199"
  },
  {
    "text": "something configured right in NeoVim, so I need to figure that out.",
    "start": "2455199",
    "end": "2460033"
  },
  {
    "text": "Yeah, okay, so this is, oh, I didn't say that.",
    "start": "2463199",
    "end": "2465366"
  },
  {
    "text": "So back here.",
    "start": "2469733",
    "end": "2471099"
  },
  {
    "text": "Okay, so we should have the...",
    "start": "2490033",
    "end": "2495066"
  },
  {
    "text": "- Here is what it's... - Yeah, I think what we want...",
    "start": "2500333",
    "end": "2506533"
  },
  {
    "text": "- It's interesting that has errors on it as well. - So if it has errors on it,",
    "start": "2507633",
    "end": "2513733"
  },
  {
    "text": "it will automatically become an esbuild error. I do that check in the other service.",
    "start": "2514566",
    "end": "2523366"
  },
  {
    "text": "So here, if there's any errors, basically that becomes an esbuild error.",
    "start": "2525600",
    "end": "2530133"
  },
  {
    "text": "We still keep warnings around because eventually we might want to use them in the build and then we'll resolve",
    "start": "2530933",
    "end": "2536033"
  },
  {
    "text": "maybe at like a debug level or I don't know, make them yellow in the terminal or something.",
    "start": "2536033",
    "end": "2541199"
  },
  {
    "text": "But why am I not getting...",
    "start": "2544466",
    "end": "2546533"
  },
  {
    "text": "What is this unhappy about?",
    "start": "2556333",
    "end": "2557166"
  },
  {
    "text": "- It's because you don't have an error",
    "start": "2563166",
    "end": "2567966"
  },
  {
    "text": "after your function declaration. - Thank you.",
    "start": "2568666",
    "end": "2574466"
  },
  {
    "text": "Okay, so, because I think we want this metafile thing.",
    "start": "2578433",
    "end": "2586000"
  },
  {
    "text": "- Yeah, a result from the actual...",
    "start": "2587966",
    "end": "2596899"
  },
  {
    "text": "I want to see what happens. See what we got. - Yeah, let's...",
    "start": "2597666",
    "end": "2603600"
  },
  {
    "text": "So yield, console.log full result.",
    "start": "2608600",
    "end": "2613533"
  },
  {
    "text": "All right, now let's go back over to our CLI and try to wire this up a little bit.",
    "start": "2619666",
    "end": "2626033"
  },
  {
    "text": "So unless you think we",
    "start": "2626633",
    "end": "2631766"
  },
  {
    "text": "should just call the service but I kind of think running it through the CLI might be nice. - You're gonna free the CLI.",
    "start": "2631766",
    "end": "2637899"
  },
  {
    "text": "- So here.",
    "start": "2639733",
    "end": "2641199"
  },
  {
    "text": "So we need to create",
    "start": "2651833",
    "end": "2659766"
  },
  {
    "text": "the build option service in the environment. So let's actually do this.",
    "start": "2659766",
    "end": "2665266"
  },
  {
    "text": "So we're gonna have a command. Some people don't know about these provide APIs",
    "start": "2670533",
    "end": "2675366"
  },
  {
    "text": "that Tim added a while back, but it's really nice because you can add...",
    "start": "2675733",
    "end": "2679366"
  },
  {
    "text": "Basically you can use the options and arguments from your CLI to add",
    "start": "2681100",
    "end": "2687033"
  },
  {
    "text": "things to the service or add things to the context that the command handler will use.",
    "start": "2687033",
    "end": "2693866"
  },
  {
    "text": "So like the... When you have a handler attached to your command, it'll use services that you",
    "start": "2694699",
    "end": "2701533"
  },
  {
    "text": "can add to the environment with these provide APIs, which is pretty nice. And you can make use of",
    "start": "2701533",
    "end": "2706866"
  },
  {
    "text": "the options and arguments. So here we're gonna need config path because we need to...",
    "start": "2706866",
    "end": "2711366"
  },
  {
    "text": "Actually, before we even do any of this, we need to add the core package as a dependency here.",
    "start": "2712333",
    "end": "2717933"
  },
  {
    "text": "Just make that a little smaller. Filter.",
    "start": "2725533",
    "end": "2728933"
  },
  {
    "text": "So we have the... We're gonna add the core package to the CLI.",
    "start": "2736666",
    "end": "2740765"
  },
  {
    "text": "It's not in the npm registry, cool.",
    "start": "2743933",
    "end": "2746833"
  },
  {
    "text": "See if we just added here content effect content layer or workspace.",
    "start": "2761533",
    "end": "2771366"
  },
  {
    "text": "PNPM install. And then I think I also need to...",
    "start": "2781399",
    "end": "2786966"
  },
  {
    "text": "I don't think I have it in the...",
    "start": "2788166",
    "end": "2789399"
  },
  {
    "text": "TS config. So this is fine.",
    "start": "2793333",
    "end": "2799066"
  },
  {
    "text": "This is fine.",
    "start": "2802899",
    "end": "2805632"
  },
  {
    "text": "No, I need... For the source file, I think I need to reference.",
    "start": "2810333",
    "end": "2814333"
  },
  {
    "text": "References.",
    "start": "2819033",
    "end": "2819432"
  },
  {
    "text": "Sorry for the brief interlude.",
    "start": "2824333",
    "end": "2826833"
  },
  {
    "text": "Directory up to core. That should be fine.",
    "start": "2839833",
    "end": "2844166"
  },
  {
    "text": "And I think we need to add the build. Not that we need it right now, but we might as well do it over here.",
    "start": "2847166",
    "end": "2852333"
  },
  {
    "text": "I think you only need it on the source one.",
    "start": "2854366",
    "end": "2859432"
  },
  {
    "text": "You might be right, but I think that we need... I thought we needed the build one to point at the build.",
    "start": "2861766",
    "end": "2866933"
  },
  {
    "text": "And I could be wrong. Let's let me look at the effect repo and see how they do it over there. Because we've got",
    "start": "2871233",
    "end": "2877300"
  },
  {
    "text": "things very nicely configured in the effect repo.",
    "start": "2877300",
    "end": "2880533"
  },
  {
    "text": "Effect.",
    "start": "2883633",
    "end": "2883833"
  },
  {
    "text": "Yeah, in the build TS config, we have it pointing at the...",
    "start": "2890100",
    "end": "2895932"
  },
  {
    "text": "Build TS config for the other ones. So core TS config.",
    "start": "2898766",
    "end": "2902733"
  },
  {
    "text": "Great. That's good.",
    "start": "2906033",
    "end": "2911066"
  },
  {
    "text": "Okay, so we installed it as a workspace dependency and we have it in these two things. We don't have any",
    "start": "2914699",
    "end": "2919833"
  },
  {
    "text": "tests to worry about yet. So should be fine.",
    "start": "2919833",
    "end": "2924333"
  },
  {
    "text": "Let's see if it worked. Build.",
    "start": "2926899",
    "end": "2931266"
  },
  {
    "text": "Actually, let's do this.",
    "start": "2932300",
    "end": "2933699"
  },
  {
    "text": "This is coming from the...",
    "start": "2944733",
    "end": "2950833"
  },
  {
    "text": "Yes, build service.",
    "start": "2954300",
    "end": "2955066"
  },
  {
    "text": "Cannot find module.",
    "start": "2959566",
    "end": "2960533"
  },
  {
    "text": "Is the path, it is a setup. Yes, I think so.",
    "start": "2967399",
    "end": "2973466"
  },
  {
    "text": "Let me look.",
    "start": "2973466",
    "end": "2973866"
  },
  {
    "text": "Where's the base? Where's the base? There it is.",
    "start": "2978933",
    "end": "2984733"
  },
  {
    "text": "Maybe I just need to restart my language server.",
    "start": "2985966",
    "end": "2991765"
  },
  {
    "text": "Maybe.",
    "start": "2993566",
    "end": "2993699"
  },
  {
    "text": "Yay. - Yes.",
    "start": "3010433",
    "end": "3015033"
  },
  {
    "text": "- I think that worked actually. Let's see.",
    "start": "3016433",
    "end": "3021100"
  },
  {
    "text": "Okay. Build options. Oh.",
    "start": "3021933",
    "end": "3025399"
  },
  {
    "text": "Let's try a swap of buffers. If that helps.",
    "start": "3034166",
    "end": "3037533"
  },
  {
    "text": "Actually, do I have a...",
    "start": "3042800",
    "end": "3043833"
  },
  {
    "text": "I can't remember if I have a...",
    "start": "3050366",
    "end": "3052333"
  },
  {
    "text": "Yep. So, export or static.",
    "start": "3058666",
    "end": "3063133"
  },
  {
    "text": "Live equals layer.succeed.",
    "start": "3064066",
    "end": "3072000"
  },
  {
    "text": "This is actually gonna be a function.",
    "start": "3076100",
    "end": "3077666"
  },
  {
    "text": "Which is a layer succeed this. Options.",
    "start": "3081733",
    "end": "3085932"
  },
  {
    "text": "Option options. Just build that build.",
    "start": "3087600",
    "end": "3091333"
  },
  {
    "text": "All right, that should be good.",
    "start": "3100100",
    "end": "3101666"
  },
  {
    "text": "Please don't judge me for my file navigation.",
    "start": "3108266",
    "end": "3113666"
  },
  {
    "text": "Build options.",
    "start": "3116100",
    "end": "3117133"
  },
  {
    "text": "Still not working. - I'll see for a little better change.",
    "start": "3129600",
    "end": "3136833"
  },
  {
    "text": "What was that? - Yeah, my LSP is just... - No, it's a reopen.",
    "start": "3139899",
    "end": "3145733"
  },
  {
    "text": "- Let's write this.",
    "start": "3147766",
    "end": "3153066"
  },
  {
    "text": "Quit. - You quit. You can quit. (laughs) - Okay.",
    "start": "3153733",
    "end": "3159733"
  },
  {
    "text": "There we go. Okay.",
    "start": "3171166",
    "end": "3175333"
  },
  {
    "text": "Now we need to specify all of our options, or at least some of them.",
    "start": "3176366",
    "end": "3180133"
  },
  {
    "text": "So, let me look this up really quick. I had listed some of the ones I know we need out somewhere.",
    "start": "3182066",
    "end": "3188233"
  },
  {
    "text": "Okay, so I think that we need want",
    "start": "3189100",
    "end": "3191333"
  },
  {
    "text": "the absolute apps working there. Okay, don't judge me for that.",
    "start": "3194966",
    "end": "3201366"
  },
  {
    "text": "We're gonna need bundle. Hmm. We're gonna want entry points.",
    "start": "3214699",
    "end": "3222000"
  },
  {
    "text": "And for now, maybe we just point this directly at a content layer config that we know where it's gonna be.",
    "start": "3224366",
    "end": "3231600"
  },
  {
    "text": "- We've already got our content path, right? - Oh yeah, we do.",
    "start": "3232000",
    "end": "3237266"
  },
  {
    "text": "- It's an option. - Mm-hmm.",
    "start": "3250633",
    "end": "3254033"
  },
  {
    "text": "Why is it an option? Wait a minute, why is it option? - Yeah, we need-- - Oh, because it can default to,",
    "start": "3260100",
    "end": "3266066"
  },
  {
    "text": "okay, so option.get.",
    "start": "3266433",
    "end": "3267833"
  },
  {
    "text": "- But surely the default will be part of the option.",
    "start": "3274233",
    "end": "3279333"
  },
  {
    "text": "- Probably yes, eventually. - Cool, we're good.",
    "start": "3284899",
    "end": "3291399"
  },
  {
    "text": "- Yeah, we could just make the fallback, like we could just make it to default.",
    "start": "3293033",
    "end": "3298699"
  },
  {
    "text": "- What's it like for you to just do with default? - Yeah, I kind of, I wanted",
    "start": "3299000",
    "end": "3305000"
  },
  {
    "text": "to maybe include some logic to also allow potentially a JavaScript file and everything like that, but I think that for",
    "start": "3305000",
    "end": "3310500"
  },
  {
    "text": "now, we'll just do this. - Okay, it's default.",
    "start": "3310500",
    "end": "3314966"
  },
  {
    "text": "- Content layer.config.ts.",
    "start": "3321133",
    "end": "3324000"
  },
  {
    "text": "Great.",
    "start": "3337899",
    "end": "3338000"
  },
  {
    "text": "We don't want it to log stuff.",
    "start": "3351000",
    "end": "3352500"
  },
  {
    "text": "We do want this thing.",
    "start": "3358800",
    "end": "3362433"
  },
  {
    "text": "The out file.",
    "start": "3368833",
    "end": "3370033"
  },
  {
    "text": "Is...",
    "start": "3374166",
    "end": "3374899"
  },
  {
    "text": "I wanna see what happens if I do that.",
    "start": "3379199",
    "end": "3383099"
  },
  {
    "text": "Platform is node. And I think this is",
    "start": "3385666",
    "end": "3392633"
  },
  {
    "text": "maybe all we need for now. Oh, I wanna have entry names be...",
    "start": "3392633",
    "end": "3399899"
  },
  {
    "text": "Name...",
    "start": "3403566",
    "end": "3406033"
  },
  {
    "text": "Yeah. Okay, so now we should",
    "start": "3410333",
    "end": "3418166"
  },
  {
    "text": "have our build options in the environment because the provide lets you take a layer, right?",
    "start": "3418166",
    "end": "3423066"
  },
  {
    "text": "- Yeah. - Yeah. And now our handler.",
    "start": "3424433",
    "end": "3429466"
  },
  {
    "text": "Does our handler, do we even need a handler? Does our handler need to do anything right now?",
    "start": "3438766",
    "end": "3442466"
  },
  {
    "text": "- Well, we've only got build options right now, so we'll need to... - Yeah, I think the rest of the services,",
    "start": "3444133",
    "end": "3451399"
  },
  {
    "text": "I was thinking we could provide inside the... I mean, we could provide them in line here,",
    "start": "3451666",
    "end": "3457733"
  },
  {
    "text": "like inside here, or we could do what we've done in other programs and provide them here.",
    "start": "3459800",
    "end": "3467100"
  },
  {
    "text": "- Well, currently... Are we...",
    "start": "3470366",
    "end": "3474699"
  },
  {
    "text": "So what's config builder doing? Is it currently continuously building the stream?",
    "start": "3476433",
    "end": "3482133"
  },
  {
    "text": "- Yeah. It just builds from the stream and the ES build thing just reads build options.",
    "start": "3486933",
    "end": "3493599"
  },
  {
    "text": "So what we could potentially do is...",
    "start": "3493600",
    "end": "3496366"
  },
  {
    "text": "Take our own advice.",
    "start": "3500733",
    "end": "3501765"
  },
  {
    "text": "- If you just do, \"Layer.provider.\"",
    "start": "3513533",
    "end": "3517333"
  },
  {
    "text": "- Tim, stop adding me like that. Okay, get rid of this.",
    "start": "3521633",
    "end": "3528733"
  },
  {
    "text": "This looks pretty good.",
    "start": "3530233",
    "end": "3532166"
  },
  {
    "text": "Right, this is good. - Yeah. - I don't have it in higher",
    "start": "3538966",
    "end": "3544500"
  },
  {
    "text": "pound, so I have to go back. Whoa, how did I do that?",
    "start": "3544500",
    "end": "3548699"
  },
  {
    "text": "I have no idea how I did that. That's great. Okay, so main live.",
    "start": "3551899",
    "end": "3557965"
  },
  {
    "text": "Let's see.",
    "start": "3568500",
    "end": "3568699"
  },
  {
    "text": "We haven't provided the ES build... The build, whatchamacallit here yet.",
    "start": "3579066",
    "end": "3586033"
  },
  {
    "text": "And actually we need to do this in Scratchpad maybe.",
    "start": "3586366",
    "end": "3590133"
  },
  {
    "text": "I set up a Scratchpad for us as well.",
    "start": "3593733",
    "end": "3596833"
  },
  {
    "text": "So...",
    "start": "3599833",
    "end": "3600033"
  },
  {
    "text": "Probably want the...",
    "start": "3605466",
    "end": "3608500"
  },
  {
    "text": "Big builder.",
    "start": "3612500",
    "end": "3613000"
  },
  {
    "text": "- You probably need to edit inside the command.provide because you'll need to build options on it.",
    "start": "3620500",
    "end": "3627333"
  },
  {
    "text": "- On it? I forget how the context propagates down.",
    "start": "3628466",
    "end": "3634466"
  },
  {
    "text": "Does stuff in command.provide get access to stuff? Or vice versa, does stuff in the outside",
    "start": "3634733",
    "end": "3640966"
  },
  {
    "text": "get access to the stuff in the command? It does not, right? - No, because it's like onion. - Onion.",
    "start": "3640966",
    "end": "3646000"
  },
  {
    "text": "- It's an onion. All right, so...",
    "start": "3646800",
    "end": "3650799"
  },
  {
    "text": "Man, I really hope nobody watches me navigating through my files like this, but...",
    "start": "3655566",
    "end": "3659866"
  },
  {
    "text": "config builder.live.provide.pipe.",
    "start": "3678899",
    "end": "3686099"
  },
  {
    "text": "Then layer.provide. All right, I got to import layer.",
    "start": "3690600",
    "end": "3695599"
  },
  {
    "text": "This is fine, right? I don't need name-spaced imports here. We're just importing a single thing from the files. That's fine.",
    "start": "3705666",
    "end": "3710265"
  },
  {
    "text": "Import everything as layer.",
    "start": "3712466",
    "end": "3716600"
  },
  {
    "text": "This command should now have its environment satisfied. Does.",
    "start": "3723066",
    "end": "3727265"
  },
  {
    "text": "Cool. - What's the effect of it? - No, we won't",
    "start": "3729800",
    "end": "3736266"
  },
  {
    "text": "because, well, we shouldn't. I'm gonna say we shouldn't.",
    "start": "3736266",
    "end": "3741133"
  },
  {
    "text": "However, of course we might. But the reason I say we shouldn't is because",
    "start": "3741300",
    "end": "3746733"
  },
  {
    "text": "if I go back to... - The layer, it's forged.",
    "start": "3747866",
    "end": "3751500"
  },
  {
    "text": "So it's gonna construct immediately. - Well, this, yes. But...",
    "start": "3752966",
    "end": "3758000"
  },
  {
    "text": "Here, not here.",
    "start": "3758533",
    "end": "3763000"
  },
  {
    "text": "Oh no, this. Here.",
    "start": "3768066",
    "end": "3772366"
  },
  {
    "text": "I believe this will keep the process open.",
    "start": "3773199",
    "end": "3776265"
  },
  {
    "text": "- But the... The...",
    "start": "3780399",
    "end": "3783765"
  },
  {
    "text": "Well, really you shouldn't be keeping a layer and structure open.",
    "start": "3785866",
    "end": "3792666"
  },
  {
    "text": "A layer constructor should always start to kind of run immediately.",
    "start": "3794300",
    "end": "3799265"
  },
  {
    "text": "- Well, we couldn't... So there is like an",
    "start": "3802500",
    "end": "3807966"
  },
  {
    "text": "API that ESBuild provides where we could wrap this with our own file watcher, but I wanted to like just prototype",
    "start": "3807966",
    "end": "3813966"
  },
  {
    "text": "with their built-in file watcher initially.",
    "start": "3813966",
    "end": "3819066"
  },
  {
    "text": "- Context.watcher. - Is that again? - What does context.watcher do?",
    "start": "3819066",
    "end": "3825500"
  },
  {
    "text": "- It watches like basically the... Here, I'll open this.",
    "start": "3826300",
    "end": "3831500"
  },
  {
    "text": "You guys won't be able to see it, but I'll pass this to you and I'll also open it.",
    "start": "3831500",
    "end": "3836566"
  },
  {
    "text": "- Basically it listens for changes on the file system and rebuilds whenever a file changes that could",
    "start": "3841800",
    "end": "3847465"
  },
  {
    "text": "invalidate like the... - Yeah, so is it clump effect.never?",
    "start": "3847466",
    "end": "3852566"
  },
  {
    "text": "- Basically. - I feel like we should do this properly",
    "start": "3853866",
    "end": "3859500"
  },
  {
    "text": "and just fork scope it. Or does it take an abort control already then?",
    "start": "3859500",
    "end": "3865265"
  },
  {
    "text": "Can we? - Let's see. I don't actually think watch takes... - Let me stop it.",
    "start": "3865266",
    "end": "3871132"
  },
  {
    "text": "- So I think watch options are actually, it's like an empty interface. - So when this fires on it.",
    "start": "3871800",
    "end": "3877733"
  },
  {
    "text": "- So rebuild would be the API that we could use or we could dispose the build context,",
    "start": "3878000",
    "end": "3882765"
  },
  {
    "text": "which I do do here if we need to. But the way that the",
    "start": "3883866",
    "end": "3891699"
  },
  {
    "text": "proper way to do this, I guess, would be to use our own file watcher and rebuild on changes to that.",
    "start": "3891699",
    "end": "3897466"
  },
  {
    "text": "Because rebuild is like their imperative API for rebuilding. - I think for now if we",
    "start": "3898966",
    "end": "3904866"
  },
  {
    "text": "just call context.watch outside of effect.prolice",
    "start": "3904866",
    "end": "3910399"
  },
  {
    "text": "and this edit finalizer, it calls cancel. - I wonder does this get back?",
    "start": "3910399",
    "end": "3916899"
  },
  {
    "text": "Does cancel the API we're supposed to call to cancel watch mode?",
    "start": "3920500",
    "end": "3926166"
  },
  {
    "text": "- Because we could, I mean, we could do this properly if we wanted, because we are gonna have access to,",
    "start": "3929100",
    "end": "3935599"
  },
  {
    "text": "we could take five minutes and hook this up to a",
    "start": "3936966",
    "end": "3939765"
  },
  {
    "text": "watcher, file system watcher, if you want.",
    "start": "3942866",
    "end": "3946199"
  },
  {
    "text": "This is, Sebastian, I'm putting that one up on the stream.",
    "start": "3955699",
    "end": "3961366"
  },
  {
    "text": "Why don't we just do it properly, Tim?",
    "start": "3964066",
    "end": "3970199"
  },
  {
    "text": "I feel like that's the right thing to do. - Okay. - Let's do this.",
    "start": "3970399",
    "end": "3975800"
  },
  {
    "text": "Also, I'm just gonna take two minutes and convert these imports.",
    "start": "3987899",
    "end": "3993066"
  },
  {
    "text": "And then the last one.",
    "start": "4026600",
    "end": "4028033"
  },
  {
    "text": "Okay, FileSystem.FileSystem All right, Tim, help me out with this.",
    "start": "4037166",
    "end": "4044466"
  },
  {
    "text": "My brain is, it's late in the day for me and my brain is not working on all cylinders.",
    "start": "4045800",
    "end": "4050299"
  },
  {
    "text": "So, we need to watch.",
    "start": "4051300",
    "end": "4058699"
  },
  {
    "text": "We need to watch our config path.",
    "start": "4061600",
    "end": "4072600"
  },
  {
    "text": "Is there anything in here?",
    "start": "4074100",
    "end": "4075466"
  },
  {
    "text": "- What, what, I said there again, I think there's a watch file as well.",
    "start": "4080199",
    "end": "4084000"
  },
  {
    "text": "It probably doesn't wanna go. We need to watch the config path",
    "start": "4089366",
    "end": "4094166"
  },
  {
    "text": "or we won't have that here, we'll have the entry points.",
    "start": "4095433",
    "end": "4099899"
  },
  {
    "text": "- Yeah, it's gonna suck, I have to convert.",
    "start": "4100766",
    "end": "4103733"
  },
  {
    "text": "- Yeah. Can we just call context.watch and call on the day.",
    "start": "4106500",
    "end": "4111932"
  },
  {
    "text": "- All right, fine. So what do you want me to do with this? - Promise, just remove the effect.promise",
    "start": "4112199",
    "end": "4117965"
  },
  {
    "text": "and then just let it run. Because we've already got context, I'll dispose there in the final one.",
    "start": "4117966",
    "end": "4123299"
  },
  {
    "text": "- Excel? - Yep, just fire off the side effect and then run.",
    "start": "4127399",
    "end": "4132399"
  },
  {
    "text": "- Let it run.",
    "start": "4133800",
    "end": "4136500"
  },
  {
    "text": "Clear up this terminal. Okay.",
    "start": "4139600",
    "end": "4141566"
  },
  {
    "text": "But it will mean we need to keep the CLI running",
    "start": "4145366",
    "end": "4153299"
  },
  {
    "text": "with the effect on it or something. - That's fine, maybe we can put that in the command handler.",
    "start": "4153566",
    "end": "4158033"
  },
  {
    "text": "If we trigger watch mode, we could just do effect.never. But for now, I'm just gonna literally drop an effect.never in there.",
    "start": "4158766",
    "end": "4164865"
  },
  {
    "text": "Command dot with handler.",
    "start": "4170800",
    "end": "4173099"
  },
  {
    "text": "It takes a function, right? - Yeah.",
    "start": "4180166",
    "end": "4184166"
  },
  {
    "text": "Noice.",
    "start": "4188133",
    "end": "4188932"
  },
  {
    "text": "This looks pretty good. Okay.",
    "start": "4198866",
    "end": "4202432"
  },
  {
    "text": "This looks good. All right, let's see what happens.",
    "start": "4210399",
    "end": "4214833"
  },
  {
    "text": "- You probably need to write a content file. - Oh yeah. It would actually be good to see",
    "start": "4216233",
    "end": "4221300"
  },
  {
    "text": "like if we actually get an error. - Okay. - This is called main.",
    "start": "4221466",
    "end": "4228365"
  },
  {
    "text": "- Okay, I get the help. And why do I get the help?",
    "start": "4232600",
    "end": "4238933"
  },
  {
    "text": "Going back to the CLI.",
    "start": "4248366",
    "end": "4249333"
  },
  {
    "text": "Did I not write this out? - Yeah, is it actually logging anything at the top of it?",
    "start": "4295633",
    "end": "4301500"
  },
  {
    "text": "Probably. - There we go. I just didn't write it out.",
    "start": "4302266",
    "end": "4307866"
  },
  {
    "text": "- Save. - It's because I'm so used in VS code, I had like auto save turned on",
    "start": "4308966",
    "end": "4315866"
  },
  {
    "text": "and I'm really trying to not do that in NeoVim because I feel like it goes against the religion.",
    "start": "4315966",
    "end": "4321266"
  },
  {
    "text": "All right. This is good. We've got things happening.",
    "start": "4323166",
    "end": "4330266"
  },
  {
    "text": "This is good.",
    "start": "4334966",
    "end": "4335633"
  },
  {
    "text": "I'll try not to utter the editor that shall not be named again, Dillon, my bad.",
    "start": "4342000",
    "end": "4348000"
  },
  {
    "text": "All right, so now we need a config file. - You just need to say, I love NeoVim three times",
    "start": "4351000",
    "end": "4357500"
  },
  {
    "text": "and then you're healed. - It's like Beetlejuice except the opposite.",
    "start": "4357500",
    "end": "4362199"
  },
  {
    "text": "My working directory when I trigger this should still be the parent directory, right? So I can add a",
    "start": "4364699",
    "end": "4370366"
  },
  {
    "text": "content layer.config.ts here and that should be fine.",
    "start": "4370366",
    "end": "4375233"
  },
  {
    "text": "Maybe. Guess we'll find out.",
    "start": "4377566",
    "end": "4382000"
  },
  {
    "text": "Okay. Look at that. - Object and then post. - Hell yeah.",
    "start": "4388833",
    "end": "4393800"
  },
  {
    "text": "Okay. This is progress, ladies and gentlemen.",
    "start": "4395733",
    "end": "4398933"
  },
  {
    "text": "This is great. So can we make the input",
    "start": "4401433",
    "end": "4408265"
  },
  {
    "text": "name more deterministic or? - How do you mean?",
    "start": "4408266",
    "end": "4413566"
  },
  {
    "text": "- Because we're gonna have to work out the right input key",
    "start": "4415100",
    "end": "4421000"
  },
  {
    "text": "to extract the object. - Yes.",
    "start": "4422399",
    "end": "4427532"
  },
  {
    "text": "- Well, I guess we only ever have one entry point. - Well, I think maybe",
    "start": "4429000",
    "end": "4434366"
  },
  {
    "text": "what would be useful is, so content layer has like a directory",
    "start": "4434366",
    "end": "4440066"
  },
  {
    "text": "that it creates for you, right? At least the current implementation. It creates like a dot",
    "start": "4440066",
    "end": "4445699"
  },
  {
    "text": "directory called dot content layer and it outputs like pretty much everything that it generates into there.",
    "start": "4445699",
    "end": "4450366"
  },
  {
    "text": "And then it generates like a mock package that it writes to be able to like actually import from it.",
    "start": "4450866",
    "end": "4455865"
  },
  {
    "text": "But maybe what we can do is have another service that we create that just holds a reference",
    "start": "4456199",
    "end": "4462366"
  },
  {
    "text": "to like the computed names for our content layer config,",
    "start": "4462600",
    "end": "4470633"
  },
  {
    "text": "the artifact direct, like basically like the artifact directory itself, like the full path, absolute path to the artifact directory,",
    "start": "4471833",
    "end": "4477533"
  },
  {
    "text": "absolute path to like the cache directory, all of those things. And also has like a reference to the",
    "start": "4478199",
    "end": "4483766"
  },
  {
    "text": "content layer config name, which we can then",
    "start": "4483766",
    "end": "4490399"
  },
  {
    "text": "use as the entry point. Here, instead of using",
    "start": "4490399",
    "end": "4495500"
  },
  {
    "text": "the config path directly. I don't know if that makes any sense.",
    "start": "4495500",
    "end": "4503733"
  },
  {
    "text": "Was that like you were referring to or were you referring to this path right here?",
    "start": "4504800",
    "end": "4509166"
  },
  {
    "text": "- Well, we just need to extract that object.",
    "start": "4510166",
    "end": "4514866"
  },
  {
    "text": "Well, we want the artifact to still be. I think we want, I think we want,",
    "start": "4516033",
    "end": "4528265"
  },
  {
    "text": "- Can we see what's in the help list?",
    "start": "4529466",
    "end": "4536000"
  },
  {
    "text": "- Yeah, let me change the,",
    "start": "4536933",
    "end": "4539399"
  },
  {
    "text": "maybe Dillon knows what the config is to fix my, Dillon, do you know what the config is",
    "start": "4545466",
    "end": "4550800"
  },
  {
    "text": "so that when I'm going down in a file, like I have the thing when I scroll that it gives me a 10 line buffer on either side.",
    "start": "4550800",
    "end": "4557365"
  },
  {
    "text": "Do you know? - I did find it. - You did find it?",
    "start": "4557566",
    "end": "4562599"
  },
  {
    "text": "- But you're in the middle of something. So I didn't interrupt you.",
    "start": "4562600",
    "end": "4566266"
  },
  {
    "text": "- Let's go scroll off, I think. - Scroll off.",
    "start": "4569800",
    "end": "4575466"
  },
  {
    "text": "I thought that was the name of the one that I have enabled that gives me a 10 line buffer,",
    "start": "4576000",
    "end": "4580166"
  },
  {
    "text": "but maybe it is not. I'll take a look.",
    "start": "4582433",
    "end": "4586800"
  },
  {
    "text": "Okay, rerunning.",
    "start": "4588666",
    "end": "4590699"
  },
  {
    "text": "Cool. So we definitely want this and we can make the outputs more deterministic.",
    "start": "4594066",
    "end": "4600299"
  },
  {
    "text": "In fact, I think in the current version of content layer,",
    "start": "4600299",
    "end": "4606033"
  },
  {
    "text": "I believe this output name is fixed to something like this",
    "start": "4606033",
    "end": "4611766"
  },
  {
    "text": "where it's like content layer.config. Or hang on a minute,",
    "start": "4611766",
    "end": "4617333"
  },
  {
    "text": "it's called, I'll look at, I'll look at what it's called.",
    "start": "4617500",
    "end": "4621799"
  },
  {
    "text": "It's called this. Compiled content layer config-cache.mjs)",
    "start": "4623766",
    "end": "4641066"
  },
  {
    "text": "This is like the current deterministic name that we give.",
    "start": "4644766",
    "end": "4652466"
  },
  {
    "text": "So like in the build options, we could basically specify this as the output file.",
    "start": "4652700",
    "end": "4662333"
  },
  {
    "text": "So the output file would be like compiled content layer config, I think, or something like that.",
    "start": "4662333",
    "end": "4667466"
  },
  {
    "text": "- Where is it putting that file right now? Just in the same place?",
    "start": "4668700",
    "end": "4673600"
  },
  {
    "text": "- Well, yeah, I think it is putting it in the current working directory. Which is my root directory here.",
    "start": "4674566",
    "end": "4682966"
  },
  {
    "text": "But event, like, that's why I thought like having an artifacts service or something like that might be helpful because this way we only need",
    "start": "4684799",
    "end": "4691833"
  },
  {
    "text": "to compute the absolute paths of like the content layer directory and like all of those paths once.",
    "start": "4691833",
    "end": "4697733"
  },
  {
    "text": "And then we can just use that service to grab the name when we need to like output files. Because we're going to be like outputting documents a lot.",
    "start": "4698100",
    "end": "4704366"
  },
  {
    "text": "We're also going to be writing to potentially like a file system cache or maybe a configurable cache.",
    "start": "4704366",
    "end": "4709633"
  },
  {
    "text": "So we could maybe the next time we meet, we could like quickly write up a little artifact service",
    "start": "4710666",
    "end": "4716299"
  },
  {
    "text": "that stores the names of all those directories. So we know where we're putting all this stuff. But maybe it's like the",
    "start": "4716299",
    "end": "4721733"
  },
  {
    "text": "last thing we do today. We can just see if we can get this name",
    "start": "4721733",
    "end": "4726833"
  },
  {
    "text": "to be a little more deterministic. So I am pretty sure, let me just look",
    "start": "4726833",
    "end": "4737199"
  },
  {
    "text": "this up really quick. Pretty sure.",
    "start": "4737200",
    "end": "4740932"
  },
  {
    "text": "- So we've got the text as the name. - Yeah, so the out file path.",
    "start": "4742566",
    "end": "4749199"
  },
  {
    "text": "We basically want. - I guess we would have a .content layer folder.",
    "start": "4752366",
    "end": "4758865"
  },
  {
    "text": "- Exactly. So this will be like a compiled,",
    "start": "4759399",
    "end": "4763765"
  },
  {
    "text": "own template layer. And we don't even need to call it that. So we could just call it like compiled or whatever.",
    "start": "4765466",
    "end": "4772899"
  },
  {
    "text": "Cause this is going to go, this thing is going to go in a .",
    "start": "4772899",
    "end": "4778500"
  },
  {
    "text": "Yeah, I mean, you can specify a full path here. I think this takes like an absolute path.",
    "start": "4780500",
    "end": "4786666"
  },
  {
    "text": "But I think that like. I think the directory has to exist.",
    "start": "4788200",
    "end": "4795365"
  },
  {
    "text": "Like we can try, let's see. Content layer.",
    "start": "4796100",
    "end": "4799866"
  },
  {
    "text": "Actually,",
    "start": "4806433",
    "end": "4807000"
  },
  {
    "text": "just grab this for a second. Look at.",
    "start": "4814166",
    "end": "4817766"
  },
  {
    "text": "This is probably like the last thing we'll do today. And then I got to head out, unfortunately.",
    "start": "4824500",
    "end": "4829566"
  },
  {
    "text": "Yeah, so if there are multiple entry points, you have to use the out dir option.",
    "start": "4833733",
    "end": "4839899"
  },
  {
    "text": "But out file is the output file name for the build operation.",
    "start": "4840399",
    "end": "4844600"
  },
  {
    "text": "I think,",
    "start": "4845500",
    "end": "4846266"
  },
  {
    "text": "I think we can actually, I think it's, I think the absolute working directory might be the directory for the build.",
    "start": "4854233",
    "end": "4860266"
  },
  {
    "text": "- Okay. - So this, I think is actually the place where we'd want to go",
    "start": "4860666",
    "end": "4866365"
  },
  {
    "text": "like .content layer. And then this, we can just called like compiled",
    "start": "4866366",
    "end": "4872932"
  },
  {
    "text": "config or something like that or. - You need to use the, don't continue",
    "start": "4874833",
    "end": "4880066"
  },
  {
    "text": "because it seems like it would save some. - Yeah, yeah, yeah.",
    "start": "4880366",
    "end": "4885133"
  },
  {
    "text": "I'm gonna do the dirty thing right now. Because I just want to see if this works.",
    "start": "4889366",
    "end": "4894100"
  },
  {
    "text": "I'm, I was, I thought that this had to exist. So we'll, we can test that now,",
    "start": "4905500",
    "end": "4910899"
  },
  {
    "text": "but I'm pretty sure it has to exist.",
    "start": "4910899",
    "end": "4912600"
  },
  {
    "text": "Maybe not. Did I not save this? Pretty sure I saved this.",
    "start": "4918466",
    "end": "4924100"
  },
  {
    "text": "Yeah. Where,",
    "start": "4926533",
    "end": "4931699"
  },
  {
    "text": "yeah, not getting a very good message, but that's probably cause I made the error not good.",
    "start": "4941866",
    "end": "4945865"
  },
  {
    "text": "But if we go and create a,",
    "start": "4947200",
    "end": "4952433"
  },
  {
    "text": "and then we rerun this.",
    "start": "4960299",
    "end": "4963199"
  },
  {
    "text": "- Did you write a .content layer files in the directory? - I don't know.",
    "start": "4970266",
    "end": "4975799"
  },
  {
    "text": "I also don't know how to show hidden files with oil.",
    "start": "4976100",
    "end": "4978866"
  },
  {
    "text": "- We'll use the shell too. - Say it again.",
    "start": "4983866",
    "end": "4988966"
  },
  {
    "text": "- Maybe just use the shell.",
    "start": "4990100",
    "end": "4991066"
  },
  {
    "text": "- Yes, I'm done. - Yeah.",
    "start": "5002399",
    "end": "5004566"
  },
  {
    "text": "Make dir .content.",
    "start": "5008266",
    "end": "5009700"
  },
  {
    "text": "Cool.",
    "start": "5016333",
    "end": "5016566"
  },
  {
    "text": "- Lah.content layer. Cool.",
    "start": "5023700",
    "end": "5028066"
  },
  {
    "text": "And if we cat out,",
    "start": "5029799",
    "end": "5031399"
  },
  {
    "text": "yep, it's empty. Wait a minute. - Shouldn't be empty.",
    "start": "5035299",
    "end": "5039433"
  },
  {
    "text": "- Oh, zero pots in the config file. - Yeah, I mean our config file, I think is, is totally repeat.",
    "start": "5044200",
    "end": "5051099"
  },
  {
    "text": "But this is good. I feel like this is a really good, really, really good start to",
    "start": "5053500",
    "end": "5059166"
  },
  {
    "text": "getting our config wired up and nice and reactive.",
    "start": "5059166",
    "end": "5062566"
  },
  {
    "text": "I feel like the next time we can probably continue working on the build. We can test out, we can test out like",
    "start": "5064600",
    "end": "5070699"
  },
  {
    "text": "whether or not the whole like config check thingy works.",
    "start": "5070700",
    "end": "5076365"
  },
  {
    "text": "Yeah, I think this is, I think this is good though. So yeah, hope everybody",
    "start": "5079799",
    "end": "5085899"
  },
  {
    "text": "enjoyed our stream today.",
    "start": "5085899",
    "end": "5088166"
  },
  {
    "text": "And yeah, thank you very much, Tim, for hanging out and we'll see you guys next time.",
    "start": "5090966",
    "end": "5097466"
  },
  {
    "text": "- Yep, see ya.",
    "start": "5098533",
    "end": "5099666"
  }
]