[
  {
    "text": "(audience applauds)",
    "start": "0",
    "end": "1291"
  },
  {
    "text": "Okay, so thank you, organizers,",
    "start": "3375",
    "end": "5125"
  },
  {
    "text": "for this awesome conference.",
    "start": "5291",
    "end": "6708"
  },
  {
    "text": "The first one in Effect that I've been looking for",
    "start": "7166",
    "end": "9666"
  },
  {
    "text": "almost two years up to now.",
    "start": "9708",
    "end": "11041"
  },
  {
    "text": "I am Mattia Manzati for people who don't know me.",
    "start": "11916",
    "end": "14833"
  },
  {
    "text": "I am a developer, as is you, and I do a lot of stuff.",
    "start": "15166",
    "end": "18416"
  },
  {
    "text": "You can recognize me maybe from a talk that I did",
    "start": "18916",
    "end": "21583"
  },
  {
    "text": "at React Alicante presenting two years ago, Effect.",
    "start": "21583",
    "end": "25125"
  },
  {
    "text": "So I tried to spread the word of Effect two years ago.",
    "start": "25333",
    "end": "28375"
  },
  {
    "text": "And now here we are together again",
    "start": "28791",
    "end": "31250"
  },
  {
    "text": "in order to speak about something else.",
    "start": "31250",
    "end": "33708"
  },
  {
    "text": "Today we're gonna speak about Durable Workflows",
    "start": "34291",
    "end": "36583"
  },
  {
    "text": "with Effect Cluster.",
    "start": "36750",
    "end": "37625"
  },
  {
    "text": "So let's start by saying that everyone had to deal",
    "start": "38791",
    "end": "42083"
  },
  {
    "text": "with a computation like these at least once",
    "start": "42083",
    "end": "43916"
  },
  {
    "text": "in your lifetime.",
    "start": "44166",
    "end": "44791"
  },
  {
    "text": "And I'm sure that even today in your production application",
    "start": "45333",
    "end": "48291"
  },
  {
    "text": "you have something like this.",
    "start": "48625",
    "end": "49500"
  },
  {
    "text": "Maybe it's not the same domain,",
    "start": "49708",
    "end": "51250"
  },
  {
    "text": "but just take it as to this example.",
    "start": "51500",
    "end": "53500"
  },
  {
    "text": "So let's see what happens step by step.",
    "start": "53833",
    "end": "55541"
  },
  {
    "text": "We call an API and we get the total amount",
    "start": "55916",
    "end": "58125"
  },
  {
    "text": "that is due for an order.",
    "start": "58500",
    "end": "59833"
  },
  {
    "text": "We charge the credit card for the total amount",
    "start": "60208",
    "end": "62541"
  },
  {
    "text": "that is due for that order.",
    "start": "62708",
    "end": "64250"
  },
  {
    "text": "Then we create a shipping tracking code",
    "start": "64750",
    "end": "67375"
  },
  {
    "text": "for the product we ordered.",
    "start": "67375",
    "end": "69125"
  },
  {
    "text": "And then we send a confirmation email",
    "start": "69458",
    "end": "71583"
  },
  {
    "text": "with the tracking ID we just created",
    "start": "71833",
    "end": "73666"
  },
  {
    "text": "and also with some thank you mail,",
    "start": "74041",
    "end": "76625"
  },
  {
    "text": "how information, et cetera.",
    "start": "77208",
    "end": "78500"
  },
  {
    "text": "So here it seems something really simple, right?",
    "start": "79666",
    "end": "82958"
  },
  {
    "text": "Well, the problem as discussed before is that",
    "start": "83583",
    "end": "86000"
  },
  {
    "text": "this is the happy path of the code,",
    "start": "86583",
    "end": "88708"
  },
  {
    "text": "but we have to take into consideration",
    "start": "89000",
    "end": "91083"
  },
  {
    "text": "a lot of possible failures that are along the way.",
    "start": "91333",
    "end": "93958"
  },
  {
    "text": "So what happens here if something fails?",
    "start": "94875",
    "end": "97250"
  },
  {
    "text": "Well, Effect is a great tool because it helps us",
    "start": "98208",
    "end": "101000"
  },
  {
    "text": "keeping track of all the failures that may happen",
    "start": "101291",
    "end": "104750"
  },
  {
    "text": "during our workflows.",
    "start": "105083",
    "end": "106125"
  },
  {
    "text": "So we can keep track of domain error,",
    "start": "106666",
    "end": "109416"
  },
  {
    "text": "network error, temporary errors, whatever.",
    "start": "109625",
    "end": "112416"
  },
  {
    "text": "But what do we do with those error?",
    "start": "113250",
    "end": "115166"
  },
  {
    "text": "Well, maybe just stacking them is not an idea,",
    "start": "115500",
    "end": "118791"
  },
  {
    "text": "is not ideal.",
    "start": "118791",
    "end": "119541"
  },
  {
    "text": "So eventually we want to do something with that.",
    "start": "119958",
    "end": "122666"
  },
  {
    "text": "So let's start very simple and say that we have those errors",
    "start": "123375",
    "end": "126666"
  },
  {
    "text": "and the simplest thing that we can do",
    "start": "126875",
    "end": "129291"
  },
  {
    "text": "is just put those error into some fancy UI for the user.",
    "start": "129541",
    "end": "134291"
  },
  {
    "text": "So let's see that this is our code",
    "start": "135000",
    "end": "137541"
  },
  {
    "text": "and let's say that the first",
    "start": "137916",
    "end": "139583"
  },
  {
    "text": "code to get total amount works,",
    "start": "139583",
    "end": "141333"
  },
  {
    "text": "the charge credit amount works.",
    "start": "141750",
    "end": "143875"
  },
  {
    "text": "So we now successfully charged the card of the customer",
    "start": "143916",
    "end": "147208"
  },
  {
    "text": "and now we called create shipping tracking code.",
    "start": "147541",
    "end": "149916"
  },
  {
    "text": "But now due, for example, an out of quote API",
    "start": "150458",
    "end": "153875"
  },
  {
    "text": "of the shipment API, we fail.",
    "start": "153875",
    "end": "155750"
  },
  {
    "text": "So what happens now?",
    "start": "157166",
    "end": "158833"
  },
  {
    "text": "Will it be clear to the customer that the order",
    "start": "159291",
    "end": "161875"
  },
  {
    "text": "has something that needs to be performed",
    "start": "162291",
    "end": "165208"
  },
  {
    "text": "in order to actually perform it?",
    "start": "165208",
    "end": "167083"
  },
  {
    "text": "Is the competition completed?",
    "start": "167375",
    "end": "168500"
  },
  {
    "text": "What do we do?",
    "start": "169250",
    "end": "170000"
  },
  {
    "text": "Well, we just learned that in the end,",
    "start": "171000",
    "end": "175166"
  },
  {
    "text": "we need to take care of errors",
    "start": "175166",
    "end": "177791"
  },
  {
    "text": "because errors are part of the domain",
    "start": "178000",
    "end": "180291"
  },
  {
    "text": "and we need to handle them.",
    "start": "180708",
    "end": "182208"
  },
  {
    "text": "So there are some kind of those error that may be,",
    "start": "183083",
    "end": "186125"
  },
  {
    "text": "for example, temporary errors due to network.",
    "start": "186125",
    "end": "188833"
  },
  {
    "text": "So what we can do maybe to get rid of those errors,",
    "start": "189291",
    "end": "192416"
  },
  {
    "text": "it just use retries, right?",
    "start": "192666",
    "end": "194666"
  },
  {
    "text": "So I am a lazy developer, so what I do is that,",
    "start": "195583",
    "end": "199333"
  },
  {
    "text": "thanks to effect having a built-in retry option,",
    "start": "199458",
    "end": "203083"
  },
  {
    "text": "what I do is just put in the end,",
    "start": "203458",
    "end": "205540"
  },
  {
    "text": "I retry option and says, okay, if the error",
    "start": "205791",
    "end": "208416"
  },
  {
    "text": "is a temporary error like a network error,",
    "start": "208500",
    "end": "211041"
  },
  {
    "text": "I will retry the entire workflow and that's it.",
    "start": "211041",
    "end": "213541"
  },
  {
    "text": "But that has its problems.",
    "start": "214416",
    "end": "216125"
  },
  {
    "text": "Again, back to our example,",
    "start": "216916",
    "end": "218375"
  },
  {
    "text": "let's say that on the first turn,",
    "start": "218583",
    "end": "219915"
  },
  {
    "text": "we get the total amount to pay,",
    "start": "219916",
    "end": "221541"
  },
  {
    "text": "then we process the payment,",
    "start": "221541",
    "end": "222791"
  },
  {
    "text": "and then we fail to create a tracking ID.",
    "start": "223000",
    "end": "225125"
  },
  {
    "text": "Okay, retry again the workflow.",
    "start": "225750",
    "end": "227583"
  },
  {
    "text": "We get the amount to pay, we charge the credit card,",
    "start": "228250",
    "end": "231541"
  },
  {
    "text": "we increase the money that the business does",
    "start": "231541",
    "end": "233541"
  },
  {
    "text": "because now we have performed the same thing twice.",
    "start": "233625",
    "end": "236375"
  },
  {
    "text": "So the customer surely will be more than happy to pay",
    "start": "236958",
    "end": "240083"
  },
  {
    "text": "however you want in order to receive just one good, right?",
    "start": "240500",
    "end": "244250"
  },
  {
    "text": "So, well, that doesn't indeed seem right.",
    "start": "245416",
    "end": "249791"
  },
  {
    "text": "So we just learned that also retries are something",
    "start": "249791",
    "end": "253125"
  },
  {
    "text": "that we need to handle in a",
    "start": "253458",
    "end": "255500"
  },
  {
    "text": "meaningful way for the business.",
    "start": "255500",
    "end": "257000"
  },
  {
    "text": "And also what happens if, for example,",
    "start": "257500",
    "end": "259833"
  },
  {
    "text": "we are processing the flow and something happens",
    "start": "260208",
    "end": "263750"
  },
  {
    "text": "at machine level and we go on",
    "start": "264000",
    "end": "265708"
  },
  {
    "text": "an error and the server restart.",
    "start": "265708",
    "end": "267125"
  },
  {
    "text": "That's another possible error.",
    "start": "267708",
    "end": "269125"
  },
  {
    "text": "So all the kind of the errors that we have described before",
    "start": "271125",
    "end": "275750"
  },
  {
    "text": "are just some of the errors because no matter",
    "start": "276625",
    "end": "280833"
  },
  {
    "text": "how you write your code, whatever library you use,",
    "start": "281000",
    "end": "284583"
  },
  {
    "text": "you use a procedural code or whatever,",
    "start": "284583",
    "end": "286833"
  },
  {
    "text": "you end up having the same problem.",
    "start": "287250",
    "end": "289041"
  },
  {
    "text": "The problem here is that all of the code you wrote",
    "start": "289333",
    "end": "292666"
  },
  {
    "text": "had to work and perform everything inside a single process.",
    "start": "293000",
    "end": "297458"
  },
  {
    "text": "And so, as I said, what happens if, for example,",
    "start": "298791",
    "end": "301750"
  },
  {
    "text": "the server crashes or we need to restart the server",
    "start": "302250",
    "end": "304958"
  },
  {
    "text": "for an update?",
    "start": "304958",
    "end": "305625"
  },
  {
    "text": "Well, maybe due to our retries, what we expected",
    "start": "307000",
    "end": "310916"
  },
  {
    "text": "to last very few seconds is now taking minutes or hours.",
    "start": "311291",
    "end": "315082"
  },
  {
    "text": "So restarting a server will result in basically losing",
    "start": "315791",
    "end": "319500"
  },
  {
    "text": "whatever is the state the process was in.",
    "start": "319916",
    "end": "322791"
  },
  {
    "text": "And also leaving the system in a dirty state.",
    "start": "323875",
    "end": "326958"
  },
  {
    "text": "So people would just say, yeah, well, you just need",
    "start": "328583",
    "end": "331583"
  },
  {
    "text": "to put a begin transaction and end transaction",
    "start": "331583",
    "end": "334000"
  },
  {
    "text": "and that's it, right?",
    "start": "334333",
    "end": "335125"
  },
  {
    "text": "Well, the problem is that we do not have a magic",
    "start": "335750",
    "end": "339166"
  },
  {
    "text": "begin transaction, commit transaction functions",
    "start": "339166",
    "end": "341791"
  },
  {
    "text": "for our code.",
    "start": "342166",
    "end": "343000"
  },
  {
    "text": "And that's not a problem of the language.",
    "start": "344041",
    "end": "346375"
  },
  {
    "text": "The problem is that we are interacting with different",
    "start": "346791",
    "end": "349250"
  },
  {
    "text": "systems, external system, for example, REST APIs,",
    "start": "349458",
    "end": "353000"
  },
  {
    "text": "email, whatever, as those systems receive writes",
    "start": "353333",
    "end": "356833"
  },
  {
    "text": "and are not participant of the ACID transactions.",
    "start": "357208",
    "end": "359708"
  },
  {
    "text": "So it may seem very strange, but this is not actually tied",
    "start": "363125",
    "end": "367208"
  },
  {
    "text": "to having an external API to be called.",
    "start": "367416",
    "end": "369582"
  },
  {
    "text": "That may also happen when you have something",
    "start": "370083",
    "end": "373166"
  },
  {
    "text": "in your internal system.",
    "start": "373500",
    "end": "374750"
  },
  {
    "text": "Let's say, for example, that you have a contact form",
    "start": "375125",
    "end": "378166"
  },
  {
    "text": "and in your contact form, you type in your user information",
    "start": "378416",
    "end": "381875"
  },
  {
    "text": "and then you expect that when the submit button is pressed,",
    "start": "382125",
    "end": "386125"
  },
  {
    "text": "you save that contact information in a table",
    "start": "386458",
    "end": "389250"
  },
  {
    "text": "and then you send an email.",
    "start": "389500",
    "end": "390541"
  },
  {
    "text": "How do you ensure that both of those things happens?",
    "start": "391000",
    "end": "393291"
  },
  {
    "text": "Or in the same way, in what can be maybe a",
    "start": "394416",
    "end": "394916"
  },
  {
    "text": "local-first application, let's say that we have a product catalog,",
    "start": "394916",
    "end": "399707"
  },
  {
    "text": "how we ensure that we are storing both the data",
    "start": "400166",
    "end": "404000"
  },
  {
    "text": "of the product catalog in a table in an SQLite",
    "start": "404000",
    "end": "406666"
  },
  {
    "text": "and maybe are storing on the file system the image",
    "start": "406666",
    "end": "408707"
  },
  {
    "text": "for the catalog, and how can we ensure that when we delete",
    "start": "408708",
    "end": "412041"
  },
  {
    "text": "the product, we delete both of them?",
    "start": "412458",
    "end": "414208"
  },
  {
    "text": "Well, we just learned that distributed systems",
    "start": "415500",
    "end": "419833"
  },
  {
    "text": "are everywhere, and that means that we need distributed",
    "start": "420166",
    "end": "423791"
  },
  {
    "text": "workflows in order to orchestrate distributed systems.",
    "start": "423916",
    "end": "426707"
  },
  {
    "text": "And sure, there are existing many solution",
    "start": "427375",
    "end": "429958"
  },
  {
    "text": "to handle workflows, but most of them focuses on backend.",
    "start": "430541",
    "end": "434041"
  },
  {
    "text": "Most of them focuses on code that's running on the server",
    "start": "434500",
    "end": "437375"
  },
  {
    "text": "that's interacting with servers.",
    "start": "437583",
    "end": "438958"
  },
  {
    "text": "But as we said before, we can have distributed systems",
    "start": "439291",
    "end": "442500"
  },
  {
    "text": "even when building local-first applications.",
    "start": "442583",
    "end": "444791"
  },
  {
    "text": "So that was the idea that convinced me that we need",
    "start": "445666",
    "end": "452457"
  },
  {
    "text": "to build Effect Cluster Workflows.",
    "start": "452458",
    "end": "455416"
  },
  {
    "text": "And Effect Cluster Workflows provides you all the building",
    "start": "455916",
    "end": "458916"
  },
  {
    "text": "blocks you need in order to deal with distributed systems.",
    "start": "459000",
    "end": "462625"
  },
  {
    "text": "And it provides you all the building blocks",
    "start": "463333",
    "end": "466250"
  },
  {
    "text": "using the Effect semantics.",
    "start": "466333",
    "end": "467583"
  },
  {
    "text": "So the Effect Cluster Workflows is a system that is built",
    "start": "468166",
    "end": "472000"
  },
  {
    "text": "in TypeScript and runs in TypeScript using Effect.",
    "start": "472125",
    "end": "475750"
  },
  {
    "text": "So you can run that wherever you want.",
    "start": "476250",
    "end": "478416"
  },
  {
    "text": "You can run that in the browser, you can run that",
    "start": "478416",
    "end": "480332"
  },
  {
    "text": "in electron, on the server, whatever.",
    "start": "480333",
    "end": "482208"
  },
  {
    "text": "So one of the concept that helps shaping up",
    "start": "484000",
    "end": "487875"
  },
  {
    "text": "the Durable Eorkflows of Effect Cluster",
    "start": "487875",
    "end": "489875"
  },
  {
    "text": "is the concept of a saga.",
    "start": "490000",
    "end": "491250"
  },
  {
    "text": "And the concept of a saga came from a really old paper.",
    "start": "491875",
    "end": "494416"
  },
  {
    "text": "Back in the days, they had computer, they tried to solve",
    "start": "494916",
    "end": "497791"
  },
  {
    "text": "a really similar but yet different problem",
    "start": "497791",
    "end": "499957"
  },
  {
    "text": "from the one that we are trying to solve.",
    "start": "500000",
    "end": "502000"
  },
  {
    "text": "Back in the days, they have this very long computation",
    "start": "502458",
    "end": "505083"
  },
  {
    "text": "that would lock on into a database transaction",
    "start": "505291",
    "end": "508250"
  },
  {
    "text": "for a lot of minutes.",
    "start": "508375",
    "end": "509750"
  },
  {
    "text": "And what happens is that then many smaller transaction",
    "start": "509791",
    "end": "513708"
  },
  {
    "text": "cannot perform anything on the database",
    "start": "513958",
    "end": "515833"
  },
  {
    "text": "because the transaction of the longer process",
    "start": "516041",
    "end": "518333"
  },
  {
    "text": "is locking the entire database.",
    "start": "518583",
    "end": "520041"
  },
  {
    "text": "So basically, they were looking for a way to have",
    "start": "520625",
    "end": "523333"
  },
  {
    "text": "the same guaranteed of the transaction of either executing",
    "start": "523833",
    "end": "527041"
  },
  {
    "text": "everything or nothing without actually using",
    "start": "527166",
    "end": "530125"
  },
  {
    "text": "a real transaction for the old process.",
    "start": "530125",
    "end": "532291"
  },
  {
    "text": "And the idea they had is really simple.",
    "start": "534708",
    "end": "536875"
  },
  {
    "text": "Instead of having a new transaction along the old process,",
    "start": "537208",
    "end": "542083"
  },
  {
    "text": "you can split it up into many single transactions",
    "start": "542083",
    "end": "544500"
  },
  {
    "text": "and then you can glue those many smaller transactions",
    "start": "545041",
    "end": "548416"
  },
  {
    "text": "with some kind of messaging or signaling.",
    "start": "548833",
    "end": "550666"
  },
  {
    "text": "And even if we don't actually have database transactions,",
    "start": "552208",
    "end": "555291"
  },
  {
    "text": "the same logic applies here for our use case.",
    "start": "555625",
    "end": "557750"
  },
  {
    "text": "External invocation to a system or emails",
    "start": "558458",
    "end": "561375"
  },
  {
    "text": "or external REST APIs can be considered transactions.",
    "start": "561666",
    "end": "564875"
  },
  {
    "text": "So now they also figured out that since we are not using",
    "start": "567208",
    "end": "571958"
  },
  {
    "text": "a single transaction, they had the same problem",
    "start": "571958",
    "end": "574166"
  },
  {
    "text": "we have today.",
    "start": "574166",
    "end": "575333"
  },
  {
    "text": "What happens if our process crashes due to the server",
    "start": "575541",
    "end": "579500"
  },
  {
    "text": "level problem or we need to restart?",
    "start": "579500",
    "end": "581208"
  },
  {
    "text": "We need to have some durable log that basically keep track",
    "start": "581750",
    "end": "585375"
  },
  {
    "text": "of the state of the execution, every attempt that has been",
    "start": "585708",
    "end": "590375"
  },
  {
    "text": "performed of every single smaller step of the workflow",
    "start": "590458",
    "end": "593541"
  },
  {
    "text": "in order to resume the",
    "start": "593916",
    "end": "595250"
  },
  {
    "text": "execution even across server restarts.",
    "start": "595250",
    "end": "597500"
  },
  {
    "text": "So let's see how we can implement that using",
    "start": "598708",
    "end": "601208"
  },
  {
    "text": "Effect Cluster Workflow.",
    "start": "601541",
    "end": "602541"
  },
  {
    "text": "The first building block we want to define is an Activity.",
    "start": "602916",
    "end": "605375"
  },
  {
    "text": "And an Activity can do basically whatever you want,",
    "start": "606041",
    "end": "609583"
  },
  {
    "text": "whatever we said before, you can do things on a database,",
    "start": "609583",
    "end": "612291"
  },
  {
    "text": "you can make HTTP calls, you can write on the file system,",
    "start": "612583",
    "end": "615875"
  },
  {
    "text": "whatever you want.",
    "start": "615875",
    "end": "616500"
  },
  {
    "text": "An activity needs to be identified in some unique way",
    "start": "617583",
    "end": "621958"
  },
  {
    "text": "using a unique string inside",
    "start": "622083",
    "end": "624583"
  },
  {
    "text": "the execution of the workflows.",
    "start": "624583",
    "end": "626208"
  },
  {
    "text": "And as I said before, behind the scene,",
    "start": "626708",
    "end": "628833"
  },
  {
    "text": "there is some kind of persistent, some kind of durable log",
    "start": "629083",
    "end": "631958"
  },
  {
    "text": "keeping track of the execution.",
    "start": "631958",
    "end": "633333"
  },
  {
    "text": "So that's why you also need to provide schemas",
    "start": "633666",
    "end": "636625"
  },
  {
    "text": "for the success and the error type of your activity.",
    "start": "636875",
    "end": "640541"
  },
  {
    "text": "And finally, as I said, you provide",
    "start": "642916",
    "end": "644750"
  },
  {
    "text": "the body of your activity, which can be whatever you want.",
    "start": "644875",
    "end": "648083"
  },
  {
    "text": "Now that we have defined how an Activity works,",
    "start": "649625",
    "end": "653500"
  },
  {
    "text": "we can move on to real workflow.",
    "start": "654000",
    "end": "656000"
  },
  {
    "text": "But before defining a",
    "start": "656291",
    "end": "657708"
  },
  {
    "text": "workflow, the thing that we need to do",
    "start": "657708",
    "end": "659625"
  },
  {
    "text": "is define a request that is used in order",
    "start": "659625",
    "end": "662333"
  },
  {
    "text": "to kick off the execution of the workflow.",
    "start": "662333",
    "end": "664500"
  },
  {
    "text": "So the requests in the same case here",
    "start": "665083",
    "end": "667291"
  },
  {
    "text": "should have the error and the success schema for the case.",
    "start": "667291",
    "end": "670958"
  },
  {
    "text": "It also has an additional capabilities compared to the Activities",
    "start": "671458",
    "end": "675833"
  },
  {
    "text": "that now the request can also have some payloads that",
    "start": "676000",
    "end": "679750"
  },
  {
    "text": "can be later used in the actual workflow definition.",
    "start": "679750",
    "end": "683000"
  },
  {
    "text": "So that payload you provide is basically the arguments",
    "start": "683333",
    "end": "685833"
  },
  {
    "text": "of your workflow function.",
    "start": "686125",
    "end": "687208"
  },
  {
    "text": "And now that we have defined our workflow function,",
    "start": "689958",
    "end": "693125"
  },
  {
    "text": "we can implement the actual real body.",
    "start": "693583",
    "end": "696291"
  },
  {
    "text": "So as you can see, the first thing that we do",
    "start": "696666",
    "end": "699041"
  },
  {
    "text": "is we pass in the request that we defined before.",
    "start": "699291",
    "end": "702375"
  },
  {
    "text": "The second argument we provide here",
    "start": "703000",
    "end": "705000"
  },
  {
    "text": "is a function that given the request object we provided",
    "start": "705333",
    "end": "708083"
  },
  {
    "text": "before with all the details about how",
    "start": "708166",
    "end": "710875"
  },
  {
    "text": "we want to start our workflow is a function that basically",
    "start": "710875",
    "end": "713458"
  },
  {
    "text": "creates, again, a unique identifier for this workflow",
    "start": "713666",
    "end": "717041"
  },
  {
    "text": "instance.",
    "start": "717125",
    "end": "717625"
  },
  {
    "text": "And this string can also be used later",
    "start": "718250",
    "end": "720791"
  },
  {
    "text": "in order to get information such",
    "start": "721083",
    "end": "722791"
  },
  {
    "text": "about if the workflow completed",
    "start": "722791",
    "end": "724250"
  },
  {
    "text": "or we need, for example, to interrupt the workflow.",
    "start": "724625",
    "end": "726916"
  },
  {
    "text": "And as I said before, our workflow",
    "start": "729000",
    "end": "731500"
  },
  {
    "text": "is just a coordinator of multiple Activities.",
    "start": "731708",
    "end": "734000"
  },
  {
    "text": "We have just broken up.",
    "start": "734291",
    "end": "735416"
  },
  {
    "text": "And so in order to guarantee the workflow",
    "start": "736166",
    "end": "740166"
  },
  {
    "text": "has a durable execution, there should",
    "start": "740208",
    "end": "742375"
  },
  {
    "text": "be indeed some constraint.",
    "start": "742375",
    "end": "743500"
  },
  {
    "text": "One of them is that inside of workflow,",
    "start": "744000",
    "end": "746083"
  },
  {
    "text": "all the steps need to be performed inside an Activity.",
    "start": "746708",
    "end": "749041"
  },
  {
    "text": "And the other one is that the workflow",
    "start": "749541",
    "end": "751791"
  },
  {
    "text": "has to be written in a way that is deterministic.",
    "start": "751791",
    "end": "755833"
  },
  {
    "text": "And what does it mean?",
    "start": "756708",
    "end": "758166"
  },
  {
    "text": "Well, deterministic means that whatever",
    "start": "758958",
    "end": "761083"
  },
  {
    "text": "is the state of the system you are into,",
    "start": "761083",
    "end": "763041"
  },
  {
    "text": "you should always be able to receive the same output.",
    "start": "763833",
    "end": "768458"
  },
  {
    "text": "And the output should be always predictable.",
    "start": "768708",
    "end": "770500"
  },
  {
    "text": "So for example, accessing time",
    "start": "771041",
    "end": "772416"
  },
  {
    "text": "or reading for the file system",
    "start": "772416",
    "end": "774083"
  },
  {
    "text": "or a database that by default is not predictable.",
    "start": "774083",
    "end": "777416"
  },
  {
    "text": "It's not deterministic because they completely",
    "start": "777416",
    "end": "779958"
  },
  {
    "text": "depend on the state of the external system.",
    "start": "780041",
    "end": "781875"
  },
  {
    "text": "So as we said, the",
    "start": "783958",
    "end": "785916"
  },
  {
    "text": "determinism is very important for the workflow",
    "start": "785916",
    "end": "788500"
  },
  {
    "text": "because, for example, upon a server restart,",
    "start": "788791",
    "end": "791541"
  },
  {
    "text": "what happens is that behind the scene, any activity call",
    "start": "792458",
    "end": "796541"
  },
  {
    "text": "will be effectively replaced by the successful result",
    "start": "796750",
    "end": "800250"
  },
  {
    "text": "of the previous execution that we have in the durable log.",
    "start": "800250",
    "end": "803416"
  },
  {
    "text": "So does it mean that our workflow can perform only",
    "start": "804875",
    "end": "808666"
  },
  {
    "text": "deterministic work and nothing else?",
    "start": "808708",
    "end": "810541"
  },
  {
    "text": "No.",
    "start": "811125",
    "end": "811583"
  },
  {
    "text": "It just means that whatever is not deterministic",
    "start": "811583",
    "end": "813958"
  },
  {
    "text": "must be wrapped in an Activity.",
    "start": "814250",
    "end": "815541"
  },
  {
    "text": "Now we define the workflow.",
    "start": "818708",
    "end": "819875"
  },
  {
    "text": "How do we run it?",
    "start": "820375",
    "end": "821333"
  },
  {
    "text": "Very simple.",
    "start": "821666",
    "end": "822166"
  },
  {
    "text": "We first spin up our workflow engine.",
    "start": "822458",
    "end": "824416"
  },
  {
    "text": "And the workflow engine is the working unit",
    "start": "824916",
    "end": "827041"
  },
  {
    "text": "that is basically responsible of keeping track",
    "start": "827166",
    "end": "830416"
  },
  {
    "text": "of all the instances of the workflows you are running.",
    "start": "830416",
    "end": "833333"
  },
  {
    "text": "And then you use methods such as send or sendDiscard",
    "start": "833750",
    "end": "837416"
  },
  {
    "text": "in order to request the beginning",
    "start": "837416",
    "end": "839708"
  },
  {
    "text": "of the execution of a workflow.",
    "start": "839708",
    "end": "841541"
  },
  {
    "text": "And if you sendDiscard, you can start the workflow",
    "start": "842166",
    "end": "844666"
  },
  {
    "text": "without caring for the result. Or you can use instead send",
    "start": "844708",
    "end": "847916"
  },
  {
    "text": "and wait for the result. And also, as I said before,",
    "start": "848291",
    "end": "852166"
  },
  {
    "text": "the workflow requires some persistence, right?",
    "start": "852541",
    "end": "855291"
  },
  {
    "text": "And here the persistence, thanks to Effect,",
    "start": "855833",
    "end": "858500"
  },
  {
    "text": "is completely pluggable.",
    "start": "858500",
    "end": "859708"
  },
  {
    "text": "So here I am using Postgres.",
    "start": "860333",
    "end": "862000"
  },
  {
    "text": "But maybe if I'm writing some local-first application,",
    "start": "862541",
    "end": "865250"
  },
  {
    "text": "I can use a SQLite storage.",
    "start": "865458",
    "end": "867625"
  },
  {
    "text": "Or if I am in the browser, I can use whatever I want.",
    "start": "868041",
    "end": "870666"
  },
  {
    "text": "OK, so we said that basically the workflow",
    "start": "872708",
    "end": "875791"
  },
  {
    "text": "needs to be deterministic.",
    "start": "875791",
    "end": "877166"
  },
  {
    "text": "And that's very important because that's",
    "start": "877833",
    "end": "879666"
  },
  {
    "text": "what allows workflow to be safe.",
    "start": "879708",
    "end": "881666"
  },
  {
    "text": "But let's just think about this problem a little.",
    "start": "882541",
    "end": "887125"
  },
  {
    "text": "What happens when the workflow engine",
    "start": "888833",
    "end": "890750"
  },
  {
    "text": "starts an Activity, which is the basic building",
    "start": "891000",
    "end": "893375"
  },
  {
    "text": "block of a workflow?",
    "start": "893500",
    "end": "894708"
  },
  {
    "text": "Well, the workflow engine has no insight",
    "start": "895375",
    "end": "898500"
  },
  {
    "text": "of what is happening inside of the Activity.",
    "start": "898500",
    "end": "900875"
  },
  {
    "text": "So let's take a real world example of a problem.",
    "start": "902708",
    "end": "906250"
  },
  {
    "text": "Let's say that, again, we have our HTTP payment API.",
    "start": "906541",
    "end": "909708"
  },
  {
    "text": "We trigger the HTTP call.",
    "start": "910041",
    "end": "911375"
  },
  {
    "text": "The remote server receives the request.",
    "start": "911625",
    "end": "913666"
  },
  {
    "text": "Then it processes the request.",
    "start": "914000",
    "end": "915250"
  },
  {
    "text": "It successfully processes the request.",
    "start": "915250",
    "end": "916750"
  },
  {
    "text": "But just before sending back the response,",
    "start": "917000",
    "end": "919875"
  },
  {
    "text": "the network connection drops.",
    "start": "920458",
    "end": "921583"
  },
  {
    "text": "So seen by the side of the workflow",
    "start": "923125",
    "end": "925166"
  },
  {
    "text": "is the same as it never started.",
    "start": "925500",
    "end": "927958"
  },
  {
    "text": "It never has been received by the other server.",
    "start": "928250",
    "end": "930791"
  },
  {
    "text": "You cannot tell.",
    "start": "931083",
    "end": "931958"
  },
  {
    "text": "There is no difference between that.",
    "start": "931958",
    "end": "933416"
  },
  {
    "text": "So what will happen is that the workflow will",
    "start": "933833",
    "end": "936041"
  },
  {
    "text": "try to perform again the activity.",
    "start": "936166",
    "end": "937791"
  },
  {
    "text": "And yes, again, we are making business again.",
    "start": "938333",
    "end": "940458"
  },
  {
    "text": "We are performing again the same payment twice.",
    "start": "940458",
    "end": "942333"
  },
  {
    "text": "OK, so what's the lesson to learn here?",
    "start": "943666",
    "end": "945833"
  },
  {
    "text": "While workflows need to be deterministic?",
    "start": "946458",
    "end": "948541"
  },
  {
    "text": "Activities needs to be idempotent.",
    "start": "949458",
    "end": "952000"
  },
  {
    "text": "So what does idempotent mean?",
    "start": "953916",
    "end": "955750"
  },
  {
    "text": "Well, idempotent means that multiple invocation",
    "start": "955958",
    "end": "959208"
  },
  {
    "text": "of the same Effect should result in a state change only",
    "start": "959750",
    "end": "963541"
  },
  {
    "text": "upon the first invocation.",
    "start": "963541",
    "end": "964458"
  },
  {
    "text": "And subsequent one should not",
    "start": "965000",
    "end": "966333"
  },
  {
    "text": "change the state of the system.",
    "start": "966333",
    "end": "967458"
  },
  {
    "text": "So let's try with a real-world example.",
    "start": "968083",
    "end": "970833"
  },
  {
    "text": "Let's say that you have an orders table.",
    "start": "970833",
    "end": "972291"
  },
  {
    "text": "And inside that orders table, you",
    "start": "972583",
    "end": "974333"
  },
  {
    "text": "have a primary key that is out to increment.",
    "start": "974333",
    "end": "976125"
  },
  {
    "text": "And you are performing an insert query.",
    "start": "976541",
    "end": "978250"
  },
  {
    "text": "Performing multiple times the same insert query",
    "start": "978750",
    "end": "981375"
  },
  {
    "text": "is it idempotent?",
    "start": "981583",
    "end": "982708"
  },
  {
    "text": "No, because I will end up with",
    "start": "983291",
    "end": "984541"
  },
  {
    "text": "multiple records in my database.",
    "start": "984541",
    "end": "985916"
  },
  {
    "text": "Thus performing a delete by primary key on my table",
    "start": "986833",
    "end": "991500"
  },
  {
    "text": "and idempotent operation.",
    "start": "991750",
    "end": "992833"
  },
  {
    "text": "Yes, because after the first execution,",
    "start": "994875",
    "end": "998666"
  },
  {
    "text": "you will not delete everything in the table.",
    "start": "999000",
    "end": "1002041"
  },
  {
    "text": "But you need to consider that someone else may insert again",
    "start": "1002791",
    "end": "1006375"
  },
  {
    "text": "something with the same primary key.",
    "start": "1006375",
    "end": "1007750"
  },
  {
    "text": "So how does Effect Cluster Workflow help you with that?",
    "start": "1009750",
    "end": "1013916"
  },
  {
    "text": "A common practice that we have is using idempotency keys.",
    "start": "1015166",
    "end": "1019000"
  },
  {
    "text": "And idempotency key is basically",
    "start": "1019416",
    "end": "1021666"
  },
  {
    "text": "a key that you provide all with your request",
    "start": "1021666",
    "end": "1024375"
  },
  {
    "text": "to the remote server in order",
    "start": "1024666",
    "end": "1026375"
  },
  {
    "text": "to let the remote server handle",
    "start": "1026375",
    "end": "1028916"
  },
  {
    "text": "and detect the duplicated request.",
    "start": "1029083",
    "end": "1030958"
  },
  {
    "text": "So the remote server, when he detects a duplicated request,",
    "start": "1031458",
    "end": "1034625"
  },
  {
    "text": "what he does is just basically send again back the response",
    "start": "1034875",
    "end": "1039041"
  },
  {
    "text": "that he did, for example, in the first execution.",
    "start": "1039166",
    "end": "1042666"
  },
  {
    "text": "An Effect Cluster already helps you",
    "start": "1043375",
    "end": "1045333"
  },
  {
    "text": "by providing you a persistence ID that",
    "start": "1045333",
    "end": "1047416"
  },
  {
    "text": "is deterministic by definition and can be used in order",
    "start": "1047500",
    "end": "1051000"
  },
  {
    "text": "to let you use idempotency keys.",
    "start": "1051000",
    "end": "1053000"
  },
  {
    "text": "So we said before the",
    "start": "1055291",
    "end": "1057375"
  },
  {
    "text": "workflows usually have activities that",
    "start": "1057375",
    "end": "1060416"
  },
  {
    "text": "are usually retried forever until they either succeed",
    "start": "1060416",
    "end": "1063791"
  },
  {
    "text": "or they fail with some domain problem.",
    "start": "1063958",
    "end": "1066375"
  },
  {
    "text": "And thanks to the activities being important",
    "start": "1067000",
    "end": "1071083"
  },
  {
    "text": "and then workflow being deterministic,",
    "start": "1071333",
    "end": "1073458"
  },
  {
    "text": "we can forget about things like temporary error",
    "start": "1073458",
    "end": "1076625"
  },
  {
    "text": "or timeouts.",
    "start": "1077000",
    "end": "1078250"
  },
  {
    "text": "So does that mean that if for some example",
    "start": "1078916",
    "end": "1082000"
  },
  {
    "text": "we get stuck into some potential infinite retry,",
    "start": "1082250",
    "end": "1086208"
  },
  {
    "text": "we are doomed to have something that we can never stop",
    "start": "1086208",
    "end": "1088583"
  },
  {
    "text": "and never fix?",
    "start": "1088583",
    "end": "1089291"
  },
  {
    "text": "Well, no.",
    "start": "1089833",
    "end": "1090333"
  },
  {
    "text": "Thanks to the Activity being idempotent, what we can do",
    "start": "1090375",
    "end": "1093333"
  },
  {
    "text": "is just stop the workflow engine, fix the implementation.",
    "start": "1093583",
    "end": "1096750"
  },
  {
    "text": "Like here, for example, I put wrongly the API secret two",
    "start": "1097000",
    "end": "1100625"
  },
  {
    "text": "times.",
    "start": "1100625",
    "end": "1101125"
  },
  {
    "text": "And then when I start again the workflow engine,",
    "start": "1101333",
    "end": "1103791"
  },
  {
    "text": "it will detect and use the new updated activity definition",
    "start": "1104000",
    "end": "1107500"
  },
  {
    "text": "and then eventually finish the execution of the workflow.",
    "start": "1107875",
    "end": "1111083"
  },
  {
    "text": "So that isn't the best ideal things to do.",
    "start": "1112833",
    "end": "1116000"
  },
  {
    "text": "So Effect Cluster Workflow also provides you",
    "start": "1116416",
    "end": "1119000"
  },
  {
    "text": "what's called yield workflow, yield execution,",
    "start": "1119000",
    "end": "1121916"
  },
  {
    "text": "that basically yields the execution of the workflow,",
    "start": "1122208",
    "end": "1125083"
  },
  {
    "text": "pausing everything.",
    "start": "1125416",
    "end": "1126375"
  },
  {
    "text": "And you can then write maybe in a developer log",
    "start": "1126666",
    "end": "1129041"
  },
  {
    "text": "sending a bug report saying, OK, I got stuck here",
    "start": "1129083",
    "end": "1131791"
  },
  {
    "text": "or something is wrong.",
    "start": "1131791",
    "end": "1132666"
  },
  {
    "text": "And the workflow will be paused and not tried again",
    "start": "1133041",
    "end": "1135958"
  },
  {
    "text": "until it's manually restarted by the developer that",
    "start": "1136125",
    "end": "1138666"
  },
  {
    "text": "has just fixed the problem.",
    "start": "1138666",
    "end": "1140125"
  },
  {
    "text": "So we said that fixing Activity is really easy.",
    "start": "1141125",
    "end": "1145333"
  },
  {
    "text": "What about instead workflows?",
    "start": "1145833",
    "end": "1147541"
  },
  {
    "text": "Well, this is more trickier, but not so much.",
    "start": "1148083",
    "end": "1150833"
  },
  {
    "text": "As we've said before, workflow definition",
    "start": "1152041",
    "end": "1153958"
  },
  {
    "text": "must be deterministic.",
    "start": "1154291",
    "end": "1155250"
  },
  {
    "text": "This means that we can fix running workflows as long",
    "start": "1155958",
    "end": "1159916"
  },
  {
    "text": "we don't break too much determinism.",
    "start": "1159916",
    "end": "1161750"
  },
  {
    "text": "So one way to achieve that is, for example,",
    "start": "1162791",
    "end": "1165000"
  },
  {
    "text": "let's say if you have new activities to add",
    "start": "1165750",
    "end": "1168041"
  },
  {
    "text": "to the end of the workflow, there is no problem.",
    "start": "1168208",
    "end": "1170291"
  },
  {
    "text": "Because if you have a running workflow that",
    "start": "1170625",
    "end": "1172541"
  },
  {
    "text": "haven't completed yet and then you restart",
    "start": "1172833",
    "end": "1175083"
  },
  {
    "text": "with a new definition, you are just adding new jobs",
    "start": "1175083",
    "end": "1178166"
  },
  {
    "text": "to do in the end.",
    "start": "1178166",
    "end": "1179083"
  },
  {
    "text": "But if you use, for example, a variable, an Activity",
    "start": "1179416",
    "end": "1183416"
  },
  {
    "text": "to store the version of the workflow it started,",
    "start": "1183416",
    "end": "1186791"
  },
  {
    "text": "you can do conditional logic, which",
    "start": "1187291",
    "end": "1189000"
  },
  {
    "text": "is deterministic in order to switch between the fixes",
    "start": "1189000",
    "end": "1192000"
  },
  {
    "text": "or implementation or changes in how the workflow behave.",
    "start": "1192208",
    "end": "1195541"
  },
  {
    "text": "Also about our saga paper we mentioned before,",
    "start": "1198791",
    "end": "1201833"
  },
  {
    "text": "we said that we want to guarantee either all steps are",
    "start": "1201833",
    "end": "1204875"
  },
  {
    "text": "performed or in some way we abort everything.",
    "start": "1204875",
    "end": "1208291"
  },
  {
    "text": "And up to now, we only spoke about workflow",
    "start": "1209000",
    "end": "1211208"
  },
  {
    "text": "using retry to indefinitely succeed and do stuff.",
    "start": "1211666",
    "end": "1215458"
  },
  {
    "text": "But what do we do if we have a failure downstream?",
    "start": "1215875",
    "end": "1219041"
  },
  {
    "text": "Let's say that, for example, we have something",
    "start": "1219625",
    "end": "1222333"
  },
  {
    "text": "like an amount of product that goes out of stock,",
    "start": "1222500",
    "end": "1228750"
  },
  {
    "text": "but we already charged the credit card.",
    "start": "1228750",
    "end": "1230458"
  },
  {
    "text": "Now we need to do something because we basically",
    "start": "1230750",
    "end": "1234083"
  },
  {
    "text": "receive the money, but we cannot provide the product.",
    "start": "1234208",
    "end": "1236166"
  },
  {
    "text": "So we can, for example, process a refund.",
    "start": "1237125",
    "end": "1239958"
  },
  {
    "text": "And how do we do it?",
    "start": "1240750",
    "end": "1241708"
  },
  {
    "text": "Well, we just use the regular Effect APIs.",
    "start": "1242250",
    "end": "1245458"
  },
  {
    "text": "We catch the out of stock domain error.",
    "start": "1245750",
    "end": "1247833"
  },
  {
    "text": "And then we can now call the refund credit card",
    "start": "1248208",
    "end": "1251500"
  },
  {
    "text": "method that is also an Activity.",
    "start": "1251541",
    "end": "1253541"
  },
  {
    "text": "So what this means is that inside cluster overflows,",
    "start": "1254125",
    "end": "1257666"
  },
  {
    "text": "you can use regular Effect semantic,",
    "start": "1257666",
    "end": "1260625"
  },
  {
    "text": "but this changes a little because now it's",
    "start": "1261000",
    "end": "1263458"
  },
  {
    "text": "intended in a durable way.",
    "start": "1263500",
    "end": "1264916"
  },
  {
    "text": "So you can use all of the Effect APIs in a durable way.",
    "start": "1265291",
    "end": "1268000"
  },
  {
    "text": "And we are guaranteed that either we succeed all",
    "start": "1268583",
    "end": "1271083"
  },
  {
    "text": "or we revert thanks to using what's",
    "start": "1271083",
    "end": "1273666"
  },
  {
    "text": "called compensating actions.",
    "start": "1273666",
    "end": "1274833"
  },
  {
    "text": "OK.",
    "start": "1275083",
    "end": "1276583"
  },
  {
    "text": "So we have seen how Effect Cluster",
    "start": "1277791",
    "end": "1279458"
  },
  {
    "text": "allowed us to build durable and resisted overflows",
    "start": "1279458",
    "end": "1283125"
  },
  {
    "text": "by using regular Effect code that, to some extent,",
    "start": "1283125",
    "end": "1285916"
  },
  {
    "text": "just seemed like a regular Effect code.",
    "start": "1286625",
    "end": "1288500"
  },
  {
    "text": "But now we have a problem.",
    "start": "1289083",
    "end": "1290791"
  },
  {
    "text": "We also used a lot of use cases where",
    "start": "1292583",
    "end": "1294791"
  },
  {
    "text": "we need a distributed workflow.",
    "start": "1295041",
    "end": "1296666"
  },
  {
    "text": "And maybe a single process is not enough",
    "start": "1297000",
    "end": "1300000"
  },
  {
    "text": "because maybe we are going to starve our single process",
    "start": "1300041",
    "end": "1303625"
  },
  {
    "text": "with all we need to do for all the workflows that",
    "start": "1304250",
    "end": "1306458"
  },
  {
    "text": "are pending in our system.",
    "start": "1306458",
    "end": "1307625"
  },
  {
    "text": "So maybe in order to avoid to starve our process,",
    "start": "1308375",
    "end": "1311916"
  },
  {
    "text": "what we can do is spin up multiple processes, right?",
    "start": "1311916",
    "end": "1314666"
  },
  {
    "text": "So we can fix that.",
    "start": "1315250",
    "end": "1316166"
  },
  {
    "text": "Well, that works, but it opens up a new problem.",
    "start": "1317666",
    "end": "1320375"
  },
  {
    "text": "How do we ensure that, for example, the processing",
    "start": "1321041",
    "end": "1323333"
  },
  {
    "text": "of a payment of an order is now running only",
    "start": "1323750",
    "end": "1327208"
  },
  {
    "text": "on a single server and not on two different processes,",
    "start": "1327208",
    "end": "1330416"
  },
  {
    "text": "for example?",
    "start": "1330416",
    "end": "1330916"
  },
  {
    "text": "We need to ensure uniqueness.",
    "start": "1331166",
    "end": "1332250"
  },
  {
    "text": "And while surely you can do that by using some global lock",
    "start": "1333000",
    "end": "1335666"
  },
  {
    "text": "that won't be performant, that will also",
    "start": "1335666",
    "end": "1338708"
  },
  {
    "text": "add a new central point of failure for your application.",
    "start": "1338708",
    "end": "1341666"
  },
  {
    "text": "So are there alternatives?",
    "start": "1342250",
    "end": "1343333"
  },
  {
    "text": "Well, let's see that in our real world scenario.",
    "start": "1344208",
    "end": "1346875"
  },
  {
    "text": "Let's say that we have a restaurant.",
    "start": "1347333",
    "end": "1348500"
  },
  {
    "text": "The restaurant have six tables.",
    "start": "1348833",
    "end": "1350291"
  },
  {
    "text": "And I'm the waiter.",
    "start": "1350750",
    "end": "1351500"
  },
  {
    "text": "And I take the order for the six table.",
    "start": "1352166",
    "end": "1354041"
  },
  {
    "text": "Now the restaurant owner decides that I'm too slow",
    "start": "1355000",
    "end": "1357416"
  },
  {
    "text": "because I have too many tables to follow.",
    "start": "1357833",
    "end": "1359833"
  },
  {
    "text": "And so the restaurant owner decides",
    "start": "1360291",
    "end": "1362083"
  },
  {
    "text": "to introduce a new waiter in order to help me.",
    "start": "1362083",
    "end": "1364625"
  },
  {
    "text": "But now how does the restaurant owner",
    "start": "1366041",
    "end": "1368791"
  },
  {
    "text": "ensure that every table gets its order taken only once",
    "start": "1368875",
    "end": "1373291"
  },
  {
    "text": "without asking the kitchen",
    "start": "1374000",
    "end": "1375166"
  },
  {
    "text": "every time if the order has already",
    "start": "1375166",
    "end": "1376750"
  },
  {
    "text": "been taken?",
    "start": "1377125",
    "end": "1377625"
  },
  {
    "text": "Well, the restaurant owner is really, really smart.",
    "start": "1378208",
    "end": "1380416"
  },
  {
    "text": "And what he does is basically decide up front",
    "start": "1380791",
    "end": "1383583"
  },
  {
    "text": "that the table from round one to three will go to me,",
    "start": "1383583",
    "end": "1386166"
  },
  {
    "text": "and the table from four to six will go to Michael.",
    "start": "1386166",
    "end": "1388583"
  },
  {
    "text": "And well, that's it.",
    "start": "1390166",
    "end": "1390875"
  },
  {
    "text": "Now me and Michael can serve customers",
    "start": "1391208",
    "end": "1393083"
  },
  {
    "text": "without asking each other if the table has already",
    "start": "1393125",
    "end": "1395583"
  },
  {
    "text": "been taken its order because we know",
    "start": "1395625",
    "end": "1398250"
  },
  {
    "text": "that we have responsibility.",
    "start": "1398250",
    "end": "1399500"
  },
  {
    "text": "And if for some reason",
    "start": "1403333",
    "end": "1405208"
  },
  {
    "text": "if for some reason Michael, Effect.orDie...",
    "start": "1406791",
    "end": "1411958"
  },
  {
    "text": "for some reason Effect.orDie...",
    "start": "1412333",
    "end": "1413833"
  },
  {
    "text": "the restaurant owner can just tell me to just bring",
    "start": "1414541",
    "end": "1418250"
  },
  {
    "text": "the order also for the other table.",
    "start": "1419291",
    "end": "1420791"
  },
  {
    "text": "So he's basically assigning to me the tables.",
    "start": "1421000",
    "end": "1424250"
  },
  {
    "text": "And if for some reason we came",
    "start": "1425916",
    "end": "1429708"
  },
  {
    "text": "back from the Zombie Apocalypse,",
    "start": "1429708",
    "end": "1431666"
  },
  {
    "text": "now the restaurant owner will again",
    "start": "1431958",
    "end": "1434458"
  },
  {
    "text": "assign the worker in order to ensure that every table has",
    "start": "1434541",
    "end": "1438750"
  },
  {
    "text": "a waiter.",
    "start": "1438750",
    "end": "1439250"
  },
  {
    "text": "And this pattern that we have seen in the real world",
    "start": "1440291",
    "end": "1442708"
  },
  {
    "text": "is called sharding.",
    "start": "1443166",
    "end": "1444041"
  },
  {
    "text": "And Effect Cluster also includes a sharding and location",
    "start": "1444666",
    "end": "1448333"
  },
  {
    "text": "transparency set of utilities that",
    "start": "1448541",
    "end": "1450875"
  },
  {
    "text": "allows you to build a Cluster of servers that",
    "start": "1450916",
    "end": "1453916"
  },
  {
    "text": "share workloads of entities to process.",
    "start": "1453916",
    "end": "1456166"
  },
  {
    "text": "So Cluster Sharding, as I said, is all",
    "start": "1458875",
    "end": "1462583"
  },
  {
    "text": "about building entities that",
    "start": "1462583",
    "end": "1464458"
  },
  {
    "text": "live across different processes",
    "start": "1464458",
    "end": "1466250"
  },
  {
    "text": "and communicate with each other, like we mentioned today",
    "start": "1466250",
    "end": "1470416"
  },
  {
    "text": "in an early talk, the Actor Model.",
    "start": "1470416",
    "end": "1472541"
  },
  {
    "text": "So we have entities that communicate together",
    "start": "1472875",
    "end": "1475541"
  },
  {
    "text": "with messages, and they communicate together",
    "start": "1476000",
    "end": "1478791"
  },
  {
    "text": "without knowing where the entity is living.",
    "start": "1478833",
    "end": "1480583"
  },
  {
    "text": "They just communicate by the mailing queue, which is",
    "start": "1481083",
    "end": "1484416"
  },
  {
    "text": "basically the entity ID.",
    "start": "1484416",
    "end": "1485791"
  },
  {
    "text": "And each time a new participant in the cluster",
    "start": "1487041",
    "end": "1489916"
  },
  {
    "text": "appears or disappears, like here, for example,",
    "start": "1489916",
    "end": "1492000"
  },
  {
    "text": "I'm starting a new process",
    "start": "1492000",
    "end": "1493000"
  },
  {
    "text": "the shard manager, which is basically the restaurant owner,",
    "start": "1494083",
    "end": "1497375"
  },
  {
    "text": "will assign new work of entities to the new process,",
    "start": "1497375",
    "end": "1500000"
  },
  {
    "text": "spawning out.",
    "start": "1500291",
    "end": "1500791"
  },
  {
    "text": "And sharding is actually not tied to the workflow problem.",
    "start": "1503791",
    "end": "1506875"
  },
  {
    "text": "That means that you are free to define your protocol using",
    "start": "1507375",
    "end": "1511291"
  },
  {
    "text": "Effect Schema and using your messaging protocol.",
    "start": "1511750",
    "end": "1515208"
  },
  {
    "text": "And then, after that, you can register into your sharding",
    "start": "1516083",
    "end": "1520875"
  },
  {
    "text": "cluster the behavior for the protocol.",
    "start": "1521541",
    "end": "1524416"
  },
  {
    "text": "So when you receive message of that kind, you, for example,",
    "start": "1524750",
    "end": "1528416"
  },
  {
    "text": "can perform increment, decrement for a counter,",
    "start": "1528583",
    "end": "1530958"
  },
  {
    "text": "or get the current value of the counter.",
    "start": "1531208",
    "end": "1533166"
  },
  {
    "text": "So let's have a quick recap of what we have seen today.",
    "start": "1534791",
    "end": "1540291"
  },
  {
    "text": "So today, we have seen, Effect Cluster that",
    "start": "1541083",
    "end": "1544375"
  },
  {
    "text": "helps us solving the sharding problem",
    "start": "1544666",
    "end": "1547166"
  },
  {
    "text": "and distribute work across different processes,",
    "start": "1547625",
    "end": "1550000"
  },
  {
    "text": "we have also seen Cluster Workflows,",
    "start": "1550666",
    "end": "1553041"
  },
  {
    "text": "which helped us building Durable Workflows that",
    "start": "1553458",
    "end": "1557125"
  },
  {
    "text": "are resilient to any problem, even machine failures.",
    "start": "1557208",
    "end": "1559875"
  },
  {
    "text": "And these packages are right now in an experimental state.",
    "start": "1561166",
    "end": "1565041"
  },
  {
    "text": "They're going to be published",
    "start": "1565041",
    "end": "1566000"
  },
  {
    "text": "as tomorrow, effectively on NPM.",
    "start": "1566000",
    "end": "1569208"
  },
  {
    "text": "And I invite you to try to use them in order",
    "start": "1569708",
    "end": "1573416"
  },
  {
    "text": "to build your application in a more resilient way,",
    "start": "1573833",
    "end": "1577208"
  },
  {
    "text": "in a more durable way.",
    "start": "1577208",
    "end": "1578333"
  },
  {
    "text": "And everyone, thanks for listening.",
    "start": "1578666",
    "end": "1580625"
  },
  {
    "text": "And happy effecting!",
    "start": "1581000",
    "end": "1581708"
  },
  {
    "text": "(audience applauds)",
    "start": "1582125",
    "end": "1583166"
  }
]