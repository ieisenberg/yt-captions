[
  {
    "text": "(audience applauds)",
    "start": "0",
    "end": "3083"
  },
  {
    "text": "Thank you.",
    "start": "4791",
    "end": "5291"
  },
  {
    "text": "Today, we'll see four receipts to get from zero tests",
    "start": "6208",
    "end": "10875"
  },
  {
    "text": "with Effect to comfortable testing everyday scenarios.",
    "start": "11125",
    "end": "14625"
  },
  {
    "text": "Okay.",
    "start": "17208",
    "end": "17708"
  },
  {
    "text": "And so first, we should probably start with the templates.",
    "start": "18625",
    "end": "22541"
  },
  {
    "text": "Like, how do you even set up a test for an Effect?",
    "start": "23333",
    "end": "26625"
  },
  {
    "text": "This one is easy, it's always the same steps.",
    "start": "27041",
    "end": "30375"
  },
  {
    "text": "One, you declare the test using whatever test framework,",
    "start": "31583",
    "end": "34791"
  },
  {
    "text": "just the test whatever.",
    "start": "35250",
    "end": "36583"
  },
  {
    "text": "Two, gen, that's where all the test code goes.",
    "start": "38000",
    "end": "42375"
  },
  {
    "text": "Three, provide the required dependencies if any,",
    "start": "43500",
    "end": "46416"
  },
  {
    "text": "and four, run the Effect.",
    "start": "46625",
    "end": "48458"
  },
  {
    "text": "And that's it.",
    "start": "49708",
    "end": "51083"
  },
  {
    "text": "Like, gen, provide run promise, nothing fancy,",
    "start": "51500",
    "end": "54666"
  },
  {
    "text": "but it's easy to pass visually,",
    "start": "55000",
    "end": "56791"
  },
  {
    "text": "and it gives you a reliable structure.",
    "start": "57083",
    "end": "58875"
  },
  {
    "text": "In fact, every example in this talk is going to use it,",
    "start": "59375",
    "end": "62583"
  },
  {
    "text": "starting with testing failure.",
    "start": "62916",
    "end": "65083"
  },
  {
    "text": "Any kind of failure, error, defects, interruption, failure.",
    "start": "67291",
    "end": "71916"
  },
  {
    "text": "And so, new test, exact same structure again,",
    "start": "73750",
    "end": "77583"
  },
  {
    "text": "Gen, provide run promise.",
    "start": "77791",
    "end": "78875"
  },
  {
    "text": "And this test focuses on the create method",
    "start": "80166",
    "end": "83750"
  },
  {
    "text": "of our user repository.",
    "start": "84291",
    "end": "86041"
  },
  {
    "text": "And we want to test that the creation fails",
    "start": "86375",
    "end": "89125"
  },
  {
    "text": "when the user already exists.",
    "start": "89541",
    "end": "91375"
  },
  {
    "text": "So to trigger this case,",
    "start": "92041",
    "end": "93708"
  },
  {
    "text": "we just have to create the same user twice.",
    "start": "94000",
    "end": "96125"
  },
  {
    "text": "And now what we want is to verify that the result",
    "start": "98416",
    "end": "100958"
  },
  {
    "text": "of that second call, the one that we expect to fail",
    "start": "101291",
    "end": "104250"
  },
  {
    "text": "is indeed a failure.",
    "start": "104458",
    "end": "106291"
  },
  {
    "text": "But how do we catch that failure to,",
    "start": "106750",
    "end": "109125"
  },
  {
    "text": "ooh, sorry, how do we catch that failure to assert on it?",
    "start": "110166",
    "end": "113375"
  },
  {
    "text": "Because right now the test is just going to crash",
    "start": "113458",
    "end": "116166"
  },
  {
    "text": "because create is going to crash.",
    "start": "116291",
    "end": "118333"
  },
  {
    "text": "To do that, we're going to use Effect.exit.",
    "start": "119916",
    "end": "123375"
  },
  {
    "text": "With this, our effect will now always succeed,",
    "start": "123916",
    "end": "127000"
  },
  {
    "text": "even if it failed, even if it died, whatever happened.",
    "start": "127166",
    "end": "130375"
  },
  {
    "text": "So the test won't crash anymore,",
    "start": "131291",
    "end": "132750"
  },
  {
    "text": "and it will always succeed with an Exit data type",
    "start": "133291",
    "end": "136625"
  },
  {
    "text": "that contains the status of the Effect",
    "start": "136625",
    "end": "138875"
  },
  {
    "text": "and the data it completed with.",
    "start": "138875",
    "end": "140708"
  },
  {
    "text": "Meaning we can take the result of that second call",
    "start": "142500",
    "end": "145041"
  },
  {
    "text": "and assert on its exit status.",
    "start": "145208",
    "end": "147833"
  },
  {
    "text": "Here we expect the Effect to have exited,",
    "start": "148208",
    "end": "150333"
  },
  {
    "text": "to have completed as a failure,",
    "start": "150625",
    "end": "153208"
  },
  {
    "text": "and more specifically, a failure containing",
    "start": "153208",
    "end": "155875"
  },
  {
    "text": "a duplicate user error.",
    "start": "155875",
    "end": "157875"
  },
  {
    "text": "If instead we want to test that the Effect died,",
    "start": "158583",
    "end": "161625"
  },
  {
    "text": "there is Exit.die.",
    "start": "161916",
    "end": "163291"
  },
  {
    "text": "If you want to test that it was interrupted,",
    "start": "163291",
    "end": "165375"
  },
  {
    "text": "there is Exit.isInterrupted.",
    "start": "166000",
    "end": "167750"
  },
  {
    "text": "And there's more, but basically,",
    "start": "168208",
    "end": "169915"
  },
  {
    "text": "if you want to assert on the exit status of an Effect,",
    "start": "170458",
    "end": "173625"
  },
  {
    "text": "Exit is what you need.",
    "start": "174291",
    "end": "175416"
  },
  {
    "text": "Next receipt, manipulating timing tests,",
    "start": "178041",
    "end": "181375"
  },
  {
    "text": "which is usually tedious, fortunately, not with Effect.",
    "start": "182000",
    "end": "186291"
  },
  {
    "text": "So new test again, same structure again.",
    "start": "187583",
    "end": "190250"
  },
  {
    "text": "This test focuses on the freeze service.",
    "start": "191500",
    "end": "194291"
  },
  {
    "text": "So sometimes we have to stop or freeze",
    "start": "194541",
    "end": "197375"
  },
  {
    "text": "the deployments of our application,",
    "start": "197500",
    "end": "199458"
  },
  {
    "text": "and this is what we use.",
    "start": "200291",
    "end": "201500"
  },
  {
    "text": "So here we start a freeze.",
    "start": "201500",
    "end": "202625"
  },
  {
    "text": "Start takes a timeout of a given duration, here 10 minutes,",
    "start": "203583",
    "end": "206875"
  },
  {
    "text": "and we want to test that the freeze is no longer active",
    "start": "208750",
    "end": "212125"
  },
  {
    "text": "after the given timeout.",
    "start": "212250",
    "end": "213375"
  },
  {
    "text": "But how do we advance the clock 10 minutes",
    "start": "213708",
    "end": "217125"
  },
  {
    "text": "to trigger that timeout?",
    "start": "217333",
    "end": "218750"
  },
  {
    "text": "Well, because under the hood,",
    "start": "221458",
    "end": "223083"
  },
  {
    "text": "the implementation of freeze uses Effect's clock",
    "start": "223333",
    "end": "226665"
  },
  {
    "text": "to get the time service.",
    "start": "226791",
    "end": "227833"
  },
  {
    "text": "It means that in our test,",
    "start": "231291",
    "end": "232833"
  },
  {
    "text": "we can leverage the test clock to override",
    "start": "232833",
    "end": "235458"
  },
  {
    "text": "and manipulate the clock time.",
    "start": "235625",
    "end": "237208"
  },
  {
    "text": "Meaning we can simply adjust the time by a given duration,",
    "start": "239500",
    "end": "243125"
  },
  {
    "text": "and it will change the clock time.",
    "start": "243500",
    "end": "245166"
  },
  {
    "text": "We can also directly set the time if needed",
    "start": "246125",
    "end": "248666"
  },
  {
    "text": "using set time and passing it an instance.",
    "start": "248750",
    "end": "250916"
  },
  {
    "text": "One important thing to note though",
    "start": "251458",
    "end": "253540"
  },
  {
    "text": "is that when using the test clock, time is frozen,",
    "start": "253750",
    "end": "256665"
  },
  {
    "text": "it starts at zero and stays at zero",
    "start": "257000",
    "end": "259583"
  },
  {
    "text": "unless you change it manually.",
    "start": "259875",
    "end": "261208"
  },
  {
    "text": "So here, before the adjustment,",
    "start": "262625",
    "end": "264250"
  },
  {
    "text": "wherever you might call clock back current time release,",
    "start": "264916",
    "end": "268000"
  },
  {
    "text": "you will always get zero.",
    "start": "268000",
    "end": "270208"
  },
  {
    "text": "It only changes after the adjustment",
    "start": "271000",
    "end": "273250"
  },
  {
    "text": "and it will stay at that new adjusted time forever",
    "start": "273250",
    "end": "276000"
  },
  {
    "text": "unless we adjust it again.",
    "start": "276458",
    "end": "278041"
  },
  {
    "text": "Okay, so we know how to manipulate time,",
    "start": "280500",
    "end": "283958"
  },
  {
    "text": "but what if we can't?",
    "start": "283958",
    "end": "286000"
  },
  {
    "text": "What if start was blocking?",
    "start": "287083",
    "end": "288750"
  },
  {
    "text": "How can we adjust the time to trigger the timeout",
    "start": "290291",
    "end": "293582"
  },
  {
    "text": "if we're stuck at the step before",
    "start": "293583",
    "end": "296000"
  },
  {
    "text": "waiting for that timeout to happen?",
    "start": "296000",
    "end": "299333"
  },
  {
    "text": "To do that, we're going to send the Effect away",
    "start": "302000",
    "end": "304875"
  },
  {
    "text": "using fork.",
    "start": "304958",
    "end": "306166"
  },
  {
    "text": "To be clear, we are still starting the Effect.",
    "start": "306833",
    "end": "309666"
  },
  {
    "text": "It is running in the background,",
    "start": "309666",
    "end": "311166"
  },
  {
    "text": "but we are not waiting for it to finish anymore.",
    "start": "311500",
    "end": "314166"
  },
  {
    "text": "Meaning it's not blocking us,",
    "start": "314791",
    "end": "317000"
  },
  {
    "text": "and so the test can move forward",
    "start": "317000",
    "end": "318625"
  },
  {
    "text": "and we can do our time adjustment.",
    "start": "319791",
    "end": "321916"
  },
  {
    "text": "And if we need to assert on the result",
    "start": "324000",
    "end": "326416"
  },
  {
    "text": "of the Effect that we sent away,",
    "start": "326750",
    "end": "328125"
  },
  {
    "text": "fork returns a handle to that Effect.",
    "start": "329500",
    "end": "331708"
  },
  {
    "text": "So we can take that handle",
    "start": "332416",
    "end": "333750"
  },
  {
    "text": "and bring the process back",
    "start": "334291",
    "end": "335916"
  },
  {
    "text": "to wait for its result using Fiber.join.",
    "start": "336708",
    "end": "339500"
  },
  {
    "text": "So we know how to move time forward",
    "start": "341875",
    "end": "344625"
  },
  {
    "text": "even when we are blocked by Effects that are stuck",
    "start": "345541",
    "end": "348250"
  },
  {
    "text": "because they are waiting for time to move forward.",
    "start": "348333",
    "end": "351041"
  },
  {
    "text": "So basically the test is done.",
    "start": "352166",
    "end": "353625"
  },
  {
    "text": "There's only one thing left.",
    "start": "354166",
    "end": "355832"
  },
  {
    "text": "Since we're using the test clock,",
    "start": "356000",
    "end": "357375"
  },
  {
    "text": "we have to provide it.",
    "start": "357708",
    "end": "359041"
  },
  {
    "text": "Its implementation is part of the test context,",
    "start": "359583",
    "end": "362250"
  },
  {
    "text": "so we have to import it and provide it.",
    "start": "362625",
    "end": "366541"
  },
  {
    "text": "Quick note, I used to provide here",
    "start": "367000",
    "end": "369500"
  },
  {
    "text": "because it's easier to read for the example,",
    "start": "369500",
    "end": "371291"
  },
  {
    "text": "but it's a regular Layer.",
    "start": "371500",
    "end": "373166"
  },
  {
    "text": "There is nothing special about it.",
    "start": "373458",
    "end": "375041"
  },
  {
    "text": "And that's it.",
    "start": "377625",
    "end": "378291"
  },
  {
    "text": "Three lines to master time in Effect.",
    "start": "378458",
    "end": "380125"
  },
  {
    "text": "Pretty cool.",
    "start": "380791",
    "end": "381541"
  },
  {
    "text": "That test clock service there is pretty interesting, right?",
    "start": "382458",
    "end": "385833"
  },
  {
    "text": "It allows us to do stuff that we can't do",
    "start": "385833",
    "end": "388541"
  },
  {
    "text": "with the regular clock, right?",
    "start": "389083",
    "end": "390875"
  },
  {
    "text": "We can't adjust the time with the regular clock.",
    "start": "390958",
    "end": "393333"
  },
  {
    "text": "And it overrides the clock transparently,",
    "start": "395291",
    "end": "398291"
  },
  {
    "text": "meaning if you use the regular clock,",
    "start": "398500",
    "end": "400541"
  },
  {
    "text": "what you actually get is the test clock time,",
    "start": "401666",
    "end": "405125"
  },
  {
    "text": "but you don't know that.",
    "start": "405125",
    "end": "406083"
  },
  {
    "text": "That's transparent.",
    "start": "406708",
    "end": "407583"
  },
  {
    "text": "I call that a shadow service",
    "start": "408666",
    "end": "410500"
  },
  {
    "text": "because it runs things from the shadows",
    "start": "410750",
    "end": "413041"
  },
  {
    "text": "while no one is aware of its existence.",
    "start": "413500",
    "end": "415708"
  },
  {
    "text": "It's a totally made up name, but it's very useful.",
    "start": "416125",
    "end": "420083"
  },
  {
    "text": "So let's see how we can create our own.",
    "start": "420333",
    "end": "423125"
  },
  {
    "text": "So new test again.",
    "start": "424583",
    "end": "425666"
  },
  {
    "text": "The subject under test here with the longest name ever",
    "start": "426625",
    "end": "430500"
  },
  {
    "text": "is send by subscription email to all non-paying customers.",
    "start": "430583",
    "end": "435500"
  },
  {
    "text": "And we want to check that we indeed do not send",
    "start": "436291",
    "end": "439000"
  },
  {
    "text": "that email to paying customers.",
    "start": "439291",
    "end": "441041"
  },
  {
    "text": "What we'd like to have is something like this,",
    "start": "441458",
    "end": "443666"
  },
  {
    "text": "mailer that has been sent to customer, email.",
    "start": "444291",
    "end": "447582"
  },
  {
    "text": "So a way to know if an email was sent to someone or not,",
    "start": "448666",
    "end": "451750"
  },
  {
    "text": "but it's not part of the mailer interface",
    "start": "451875",
    "end": "454041"
  },
  {
    "text": "and we don't want it there.",
    "start": "454333",
    "end": "455541"
  },
  {
    "text": "So let's create our own shadow service.",
    "start": "455875",
    "end": "458625"
  },
  {
    "text": "I'm going to call this the test mailer",
    "start": "460500",
    "end": "462416"
  },
  {
    "text": "because I have a wild imagination",
    "start": "462500",
    "end": "464166"
  },
  {
    "text": "and make it an Effect service.",
    "start": "465333",
    "end": "467208"
  },
  {
    "text": "Since we're going to override the mailer with it,",
    "start": "467791",
    "end": "470082"
  },
  {
    "text": "we have to support its operations.",
    "start": "470541",
    "end": "472541"
  },
  {
    "text": "So let's require those.",
    "start": "473208",
    "end": "474166"
  },
  {
    "text": "And now on top of that, that's where the fun begins.",
    "start": "474958",
    "end": "477458"
  },
  {
    "text": "We can add any additional operation that we want.",
    "start": "477750",
    "end": "480583"
  },
  {
    "text": "In this case, has been sent to.",
    "start": "481541",
    "end": "483457"
  },
  {
    "text": "And so now we have two services, right?",
    "start": "485458",
    "end": "487625"
  },
  {
    "text": "We have the mailer and the test mailer.",
    "start": "487625",
    "end": "490125"
  },
  {
    "text": "And we want to make sure that if a change happens in one,",
    "start": "490458",
    "end": "493208"
  },
  {
    "text": "it's reflected in the other.",
    "start": "493666",
    "end": "495166"
  },
  {
    "text": "If I change the time using the test clock,",
    "start": "495791",
    "end": "497791"
  },
  {
    "text": "anyone using the regular clock",
    "start": "498125",
    "end": "499666"
  },
  {
    "text": "should get the test clock time.",
    "start": "500041",
    "end": "501666"
  },
  {
    "text": "And the simplest way to do that",
    "start": "503833",
    "end": "505166"
  },
  {
    "text": "is probably to have both share the same instance.",
    "start": "505291",
    "end": "507875"
  },
  {
    "text": "We're going to do that using a Layer.",
    "start": "508375",
    "end": "510666"
  },
  {
    "text": "So here we define a new layer using unwrap Effect.",
    "start": "511083",
    "end": "513958"
  },
  {
    "text": "Unwrap effect will allow us to turn an Effect",
    "start": "514500",
    "end": "517125"
  },
  {
    "text": "into any number of Layers.",
    "start": "517583",
    "end": "519375"
  },
  {
    "text": "The Effect we're going to generate those Layers from",
    "start": "521750",
    "end": "524333"
  },
  {
    "text": "is make test mailer,",
    "start": "524583",
    "end": "525833"
  },
  {
    "text": "which shocker gives us back an instance of the test mailer.",
    "start": "525833",
    "end": "529416"
  },
  {
    "text": "So we can take that instance and provide both services.",
    "start": "530416",
    "end": "534208"
  },
  {
    "text": "The mailer and the test mailer, the same instance.",
    "start": "535291",
    "end": "539166"
  },
  {
    "text": "And that's it.",
    "start": "541375",
    "end": "542000"
  },
  {
    "text": "Since they share the same instance,",
    "start": "542000",
    "end": "543541"
  },
  {
    "text": "any change in one would be reflected in the other.",
    "start": "543958",
    "end": "546250"
  },
  {
    "text": "The only thing left is to update the tests.",
    "start": "547125",
    "end": "549333"
  },
  {
    "text": "So now back to the test,",
    "start": "549666",
    "end": "550833"
  },
  {
    "text": "we can add the new layer to our dependencies.",
    "start": "551375",
    "end": "554000"
  },
  {
    "text": "And in the test code,",
    "start": "555125",
    "end": "556125"
  },
  {
    "text": "instead of using the regular mailer,",
    "start": "556458",
    "end": "558625"
  },
  {
    "text": "we can use the test mailer to access our new operations.",
    "start": "559708",
    "end": "563541"
  },
  {
    "text": "And all this from the shadows,",
    "start": "564291",
    "end": "566125"
  },
  {
    "text": "while the production code stays the same.",
    "start": "566750",
    "end": "568666"
  },
  {
    "text": "Last before I end, if you use Vitest,",
    "start": "571375",
    "end": "573291"
  },
  {
    "text": "I strongly suggest you use this package,",
    "start": "573291",
    "end": "575416"
  },
  {
    "text": "you'll get better errors, less boilerplate,",
    "start": "575583",
    "end": "577791"
  },
  {
    "text": "prop testing and other things.",
    "start": "578125",
    "end": "579666"
  },
  {
    "text": "You can find the complete code for all the examples",
    "start": "580583",
    "end": "583291"
  },
  {
    "text": "on my GitHub here.",
    "start": "583583",
    "end": "584916"
  },
  {
    "text": "That's it for me.",
    "start": "586666",
    "end": "587416"
  },
  {
    "text": "Thank you to the Effect team for inviting me",
    "start": "587416",
    "end": "590500"
  },
  {
    "text": "to Evryg my company for sending me here.",
    "start": "590583",
    "end": "593083"
  },
  {
    "text": "And thank you to all of you for being here at lunchtime.",
    "start": "593125",
    "end": "595666"
  },
  {
    "text": "(audience applauds)",
    "start": "596625",
    "end": "599208"
  }
]