[
  {
    "start": "0",
    "end": "96000"
  },
  {
    "text": "foreign this time we have team with us team is a",
    "start": "240",
    "end": "8820"
  },
  {
    "text": "core contributor that is working on a few very nice Integrations uh one of",
    "start": "8820",
    "end": "16260"
  },
  {
    "text": "which is close to be ready and we'd like to get some feedback so today",
    "start": "16260",
    "end": "23119"
  },
  {
    "text": "he's gonna show us what what he has been working on I have seen some small",
    "start": "23119",
    "end": "30960"
  },
  {
    "text": "portions of code and it seems very nice I have I have to say I haven't used this",
    "start": "30960",
    "end": "37800"
  },
  {
    "text": "Library yet we we will be talking about HTTP servers and and platform",
    "start": "37800",
    "end": "44840"
  },
  {
    "text": "and yeah I'll leave it up to team thank you for joining Tim good thank you uh yeah I'm term part of",
    "start": "44840",
    "end": "52440"
  },
  {
    "text": "the fit team and today we'll be looking at the",
    "start": "52440",
    "end": "57660"
  },
  {
    "text": "HTTP modules that we've added to platform recently and I Swiss I've started playing around",
    "start": "57660",
    "end": "65040"
  },
  {
    "text": "with them about around the start of this year and only recently we've finally got",
    "start": "65040",
    "end": "70260"
  },
  {
    "text": "around to doing a second revision a second pass on it",
    "start": "70260",
    "end": "75600"
  },
  {
    "text": "polishing it up a little bit and adding it to the effect organization so",
    "start": "75600",
    "end": "82080"
  },
  {
    "text": "maybe the best way to start is maybe looking at the maybe we'll look at the reference",
    "start": "82080",
    "end": "89220"
  },
  {
    "text": "docs and go over the model and then once we've maybe had a chat over that maybe we can build something",
    "start": "89220",
    "end": "96299"
  },
  {
    "start": "96000",
    "end": "608000"
  },
  {
    "text": "and demonstrate it all right so it makes all these other",
    "start": "96299",
    "end": "101700"
  },
  {
    "text": "great modules here is the effect uh the HTTP client module and this is",
    "start": "101700",
    "end": "108180"
  },
  {
    "text": "we're looking at the platform platform node package here",
    "start": "108180",
    "end": "114320"
  },
  {
    "text": "of course look at Client First",
    "start": "118380",
    "end": "122180"
  },
  {
    "text": "so at the core of the HTTP client module is",
    "start": "124439",
    "end": "130739"
  },
  {
    "text": "this client interface first of all the HTTP module is in the platform package",
    "start": "130739",
    "end": "137879"
  },
  {
    "text": "so it's supposed to be implemented by potentially different runtimes in in the future",
    "start": "137879",
    "end": "145500"
  },
  {
    "text": "yeah so in the the core platform package we're putting cross-platform implementation so things",
    "start": "145500",
    "end": "152760"
  },
  {
    "text": "like fetch which is available on every platform",
    "start": "152760",
    "end": "157700"
  },
  {
    "text": "um as well as there's some other things in here that can be used on every platform",
    "start": "158220",
    "end": "165319"
  },
  {
    "text": "um So within the core platform package we include Fitch but also in the node one",
    "start": "165420",
    "end": "171239"
  },
  {
    "text": "there is a a node native implementation using the",
    "start": "171239",
    "end": "176819"
  },
  {
    "text": "node agent but anyway the core of it is this client",
    "start": "176819",
    "end": "183239"
  },
  {
    "text": "interface which is a simple simple function that takes in a request",
    "start": "183239",
    "end": "190080"
  },
  {
    "text": "it returns an effect and then",
    "start": "190080",
    "end": "196680"
  },
  {
    "text": "in most cases so the actual or the core clients return",
    "start": "196680",
    "end": "204360"
  },
  {
    "text": "a client response as the success type",
    "start": "204360",
    "end": "209400"
  },
  {
    "text": "so simply put the client takes a request",
    "start": "209400",
    "end": "214739"
  },
  {
    "text": "returns an effect which by default has a response but then",
    "start": "214739",
    "end": "219959"
  },
  {
    "text": "you can map it to whatever you like um and to illustrate there if we look at",
    "start": "219959",
    "end": "226680"
  },
  {
    "text": "the fetch client client.default",
    "start": "226680",
    "end": "231780"
  },
  {
    "text": "where's default",
    "start": "233159",
    "end": "236000"
  },
  {
    "text": "let's start in here good old preference stocks don't have namespaces",
    "start": "238379",
    "end": "243540"
  },
  {
    "text": "um yeah probably something we need to what yeah",
    "start": "243540",
    "end": "249659"
  },
  {
    "text": "so but the client.default type is a client that returns a client response in",
    "start": "249659",
    "end": "257220"
  },
  {
    "text": "the response that's one of these guys",
    "start": "257220",
    "end": "262100"
  },
  {
    "text": "which implements an incoming message has a status code",
    "start": "263040",
    "end": "268560"
  },
  {
    "text": "an incoming message has things like um",
    "start": "268560",
    "end": "273840"
  },
  {
    "text": "the hitters Json text URL programs body or a buffer in the Stream",
    "start": "273840",
    "end": "280440"
  },
  {
    "text": "so you got several different ways of accessing the body",
    "start": "280440",
    "end": "284960"
  },
  {
    "text": "and so when the response first comes back it's only passed up to the headers",
    "start": "285900",
    "end": "291300"
  },
  {
    "text": "and then you can further request the body using these accesses",
    "start": "291300",
    "end": "298460"
  },
  {
    "text": "which is similar to what fetch does behind the scenes yeah so it's very",
    "start": "298919",
    "end": "304440"
  },
  {
    "text": "similar to the fetch model in a lot of ways",
    "start": "304440",
    "end": "309540"
  },
  {
    "text": "uh cool but I think one of the key things that differentiates us from a lot",
    "start": "309540",
    "end": "316139"
  },
  {
    "text": "of HTTP clients this is a way you can compose together your client",
    "start": "316139",
    "end": "322800"
  },
  {
    "text": "so if I go back here so there's a bunch of combinators and mapping functions in here for",
    "start": "322800",
    "end": "330360"
  },
  {
    "text": "creating the client that fits your needs so like for example you can",
    "start": "330360",
    "end": "337680"
  },
  {
    "text": "filter by status maybe we'll pull up a quick example",
    "start": "337680",
    "end": "344479"
  },
  {
    "text": "[Music] uh schema",
    "start": "349770",
    "end": "358080"
  },
  {
    "text": "okay cool so here we're pulling out a default clutch which is just a simple",
    "start": "359940",
    "end": "368160"
  },
  {
    "text": "client which takes a request to return the response and then we're using some of the client",
    "start": "368160",
    "end": "373500"
  },
  {
    "text": "combinators to build out our Custom Clothes so here we I want",
    "start": "373500",
    "end": "380580"
  },
  {
    "text": "responses with an okay status and then we can do things like",
    "start": "380580",
    "end": "387000"
  },
  {
    "text": "Contra map on the request and prepare the URL with like a base URL",
    "start": "387000",
    "end": "393720"
  },
  {
    "text": "for example and then you can add as much of these combinators as you like to let's say",
    "start": "393720",
    "end": "400380"
  },
  {
    "text": "advera tokens and those could be effectual operations as well",
    "start": "400380",
    "end": "407780"
  },
  {
    "text": "and then you end up with a client that you can start sending requests to",
    "start": "408300",
    "end": "416960"
  },
  {
    "text": "there's a bunch of stuff you could play with in here if we go back",
    "start": "417259",
    "end": "424880"
  },
  {
    "text": "back up here and then the other modules in here",
    "start": "427560",
    "end": "433319"
  },
  {
    "text": "includes things for manipulating bodies for manipulating headers",
    "start": "433319",
    "end": "440460"
  },
  {
    "text": "so that's the node implementation of the client which uses the",
    "start": "440460",
    "end": "446940"
  },
  {
    "text": "node HTTP module instead of fetch particular reason why we don't use",
    "start": "446940",
    "end": "452639"
  },
  {
    "text": "fetchy node uh we do it's",
    "start": "452639",
    "end": "457919"
  },
  {
    "text": "it's still it's the clear under",
    "start": "457919",
    "end": "463020"
  },
  {
    "text": "it's under this module the fetch implementations included but if you really want to use the known",
    "start": "463020",
    "end": "469440"
  },
  {
    "text": "version you can but I mean is there any particular",
    "start": "469440",
    "end": "474599"
  },
  {
    "text": "reason why one would want to use the not clienting node so I have run into issues with fetch",
    "start": "474599",
    "end": "480900"
  },
  {
    "text": "where you can't control things like response timeouts",
    "start": "480900",
    "end": "487500"
  },
  {
    "text": "um I remember a while back I was doing some work where a request would take",
    "start": "487500",
    "end": "492720"
  },
  {
    "text": "several minutes to respond to also some crazy rewarding and I had to switch to the node",
    "start": "492720",
    "end": "500340"
  },
  {
    "text": "to the node implementation because then I could then control the timer with the agent",
    "start": "500340",
    "end": "506819"
  },
  {
    "text": "so there are cases where a bit more control is needed in the node client is",
    "start": "506819",
    "end": "513719"
  },
  {
    "text": "perfect for that uh",
    "start": "513719",
    "end": "519599"
  },
  {
    "text": "we've got response module most of the things you need for",
    "start": "519599",
    "end": "527100"
  },
  {
    "text": "responses are on the response itself but there are some helpers here for",
    "start": "527100",
    "end": "532560"
  },
  {
    "text": "working with schema so if you want to",
    "start": "532560",
    "end": "540300"
  },
  {
    "text": "if you have a schema and you want to decode it decode the like a Json body to",
    "start": "540300",
    "end": "545399"
  },
  {
    "text": "your schemas and there's some helpers here to do that I think another example we're using",
    "start": "545399",
    "end": "551339"
  },
  {
    "text": "there there we go",
    "start": "551339",
    "end": "555500"
  },
  {
    "text": "so here we're using the schema body Json helper to decode a response to a to-do",
    "start": "556800",
    "end": "566180"
  },
  {
    "text": "and then you can just flat map your response",
    "start": "566760",
    "end": "572660"
  },
  {
    "text": "[Music] and then there's a module for working with",
    "start": "578290",
    "end": "583440"
  },
  {
    "text": "URL parameters yeah it just says stuff like set head",
    "start": "583440",
    "end": "589380"
  },
  {
    "text": "append empty",
    "start": "589380",
    "end": "593360"
  },
  {
    "text": "cool um I think that's a very high overview of Clint",
    "start": "596459",
    "end": "604560"
  },
  {
    "text": "and then it's sibling the server",
    "start": "604560",
    "end": "609500"
  },
  {
    "start": "608000",
    "end": "1456000"
  },
  {
    "text": "um so at the core of HTTP servers uh",
    "start": "609899",
    "end": "615000"
  },
  {
    "text": "apps and it is modeled a little bit",
    "start": "615000",
    "end": "620700"
  },
  {
    "text": "differently to the client so an app is just a plain effect",
    "start": "620700",
    "end": "627420"
  },
  {
    "text": "but it receives the quest through context",
    "start": "627420",
    "end": "632540"
  },
  {
    "text": "and then we have the the default variants which",
    "start": "632760",
    "end": "637800"
  },
  {
    "text": "and the success channel of the effect is our response",
    "start": "637800",
    "end": "643080"
  },
  {
    "text": "any particular reason why we haven't done kind of the same on the client side",
    "start": "643080",
    "end": "650540"
  },
  {
    "text": "uh I found through usage that it's a lot easier to pass requests into",
    "start": "650540",
    "end": "658620"
  },
  {
    "text": "a function than doing provide service it just feels a little bit awkward to",
    "start": "658620",
    "end": "666800"
  },
  {
    "text": "like provide a request for your contacts when using a client but when when it came to the server API",
    "start": "666920",
    "end": "674399"
  },
  {
    "text": "it felt a bit more natural um",
    "start": "674399",
    "end": "680700"
  },
  {
    "text": "well in one in one end you are invoking something in the other hand you are receiving",
    "start": "680700",
    "end": "686760"
  },
  {
    "text": "cool so yeah we it's a simple effect",
    "start": "686760",
    "end": "691940"
  },
  {
    "text": "and the by default in the success Channel with",
    "start": "691940",
    "end": "698279"
  },
  {
    "text": "the server response and if we go back",
    "start": "698279",
    "end": "704660"
  },
  {
    "text": "yep so the body module",
    "start": "705000",
    "end": "712440"
  },
  {
    "text": "headers URL prams are shared of clutch the era module is specific to the server",
    "start": "712440",
    "end": "720959"
  },
  {
    "text": "we've added some e-tag generation",
    "start": "720959",
    "end": "727320"
  },
  {
    "text": "for at the moment it's just for file responses",
    "start": "727320",
    "end": "732420"
  },
  {
    "text": "and it will generate uh currently a weak e-tag for",
    "start": "732420",
    "end": "737940"
  },
  {
    "text": "cash validation",
    "start": "737940",
    "end": "741320"
  },
  {
    "text": "[Music] form data so I've added a pretty comprehensive",
    "start": "743430",
    "end": "750180"
  },
  {
    "text": "form data module um in the node implementation under the",
    "start": "750180",
    "end": "756720"
  },
  {
    "text": "hood as it uses as busboy um",
    "start": "756720",
    "end": "762120"
  },
  {
    "text": "and it offers a stream API as well as going straight to disk so nothing hits",
    "start": "762120",
    "end": "768779"
  },
  {
    "text": "memory and there's a bunch of fibrous and here",
    "start": "768779",
    "end": "774240"
  },
  {
    "text": "for controller so you can do things like for your entire server you can set the",
    "start": "774240",
    "end": "779700"
  },
  {
    "text": "limits for file sizes and file limits or you can do it per Handler",
    "start": "779700",
    "end": "785779"
  },
  {
    "text": "and then it also contains things for using schema with form data",
    "start": "787680",
    "end": "795620"
  },
  {
    "text": "uh we can probably take a look at that later",
    "start": "797160",
    "end": "802100"
  },
  {
    "text": "includes some middleware modules so in here we have some very simple middleware",
    "start": "802279",
    "end": "807899"
  },
  {
    "text": "we'll probably add more later but for now it just says logger as well as",
    "start": "807899",
    "end": "815459"
  },
  {
    "text": "a tracer and one that combines both of them and the Tracer will add spans over every",
    "start": "815459",
    "end": "823139"
  },
  {
    "text": "request spans from the Native effect tracing",
    "start": "823139",
    "end": "829440"
  },
  {
    "text": "module and I guess here the then the auto package",
    "start": "829440",
    "end": "836220"
  },
  {
    "text": "could add a threes or that that also take",
    "start": "836220",
    "end": "842399"
  },
  {
    "text": "the tracing from uh from the",
    "start": "842399",
    "end": "848220"
  },
  {
    "text": "because open parameters racing can propagate through HTTP calls if the",
    "start": "848220",
    "end": "854160"
  },
  {
    "text": "client adds a tracing information and the server receives the tracing",
    "start": "854160",
    "end": "859320"
  },
  {
    "text": "information sending it as a as a parent",
    "start": "859320",
    "end": "864079"
  },
  {
    "text": "oh yeah yeah that's probably a good idea actually so like if you use the HTTP client",
    "start": "864720",
    "end": "871100"
  },
  {
    "text": "propagates things yeah with it to the list",
    "start": "871160",
    "end": "879019"
  },
  {
    "text": "because that's the mutual hope and Telemetry linking between yeah yeah the propagation of Trace IDs through",
    "start": "880860",
    "end": "888480"
  },
  {
    "text": "all your different systems um",
    "start": "888480",
    "end": "893760"
  },
  {
    "text": "we have uh the Chris response modules",
    "start": "893760",
    "end": "898880"
  },
  {
    "text": "and they're very similar to the client ones but they're kind of flipped like the",
    "start": "899279",
    "end": "904980"
  },
  {
    "text": "requests one you the quest one you access the um the",
    "start": "904980",
    "end": "911100"
  },
  {
    "text": "request body uh very similar to I felt as a client",
    "start": "911100",
    "end": "917699"
  },
  {
    "text": "response and then the response module",
    "start": "917699",
    "end": "923100"
  },
  {
    "text": "which has a bunch of Constructors for creating all the various types of responses",
    "start": "923100",
    "end": "930360"
  },
  {
    "text": "so things like empty response Json file",
    "start": "930360",
    "end": "936000"
  },
  {
    "text": "from a schema or you can send a stream",
    "start": "936000",
    "end": "941480"
  },
  {
    "text": "push things in there and",
    "start": "942240",
    "end": "947639"
  },
  {
    "text": "then [Music] which kind of brings us to some of the bigger ones which uh the router module",
    "start": "947760",
    "end": "955740"
  },
  {
    "text": "in the server module so a router",
    "start": "955740",
    "end": "962339"
  },
  {
    "text": "if we go to the model is the implementation of a HTTP app",
    "start": "962339",
    "end": "972079"
  },
  {
    "text": "so you can build up your routes and then pass it straight to your",
    "start": "975420",
    "end": "981959"
  },
  {
    "text": "pass it straight to an HTTP server or use all the different effect apis on it like",
    "start": "981959",
    "end": "987420"
  },
  {
    "text": "catch tags or cash checks what you're handling or you can flip map it",
    "start": "987420",
    "end": "994519"
  },
  {
    "text": "and for the node implementation it's using",
    "start": "995399",
    "end": "1001880"
  },
  {
    "text": "the find my way oh sorry the router is actually implemented in",
    "start": "1001880",
    "end": "1007040"
  },
  {
    "text": "the core platform package and it's using find my way for npm which uses a Radix",
    "start": "1007040",
    "end": "1014180"
  },
  {
    "text": "Red X red X3",
    "start": "1014180",
    "end": "1018160"
  },
  {
    "text": "and there's just like a bunch of methods here for all the different HTTP methods",
    "start": "1019300",
    "end": "1026120"
  },
  {
    "text": "you can combine routers together so you could have a",
    "start": "1026120",
    "end": "1031280"
  },
  {
    "text": "router that handles a single part of your domain and then merge them together later",
    "start": "1031280",
    "end": "1038438"
  },
  {
    "text": "and then there's also come notice in here for providing",
    "start": "1038600",
    "end": "1044240"
  },
  {
    "text": "services to routers and that's useful for",
    "start": "1044240",
    "end": "1050240"
  },
  {
    "text": "um the moment you use effect apis or not",
    "start": "1050240",
    "end": "1055700"
  },
  {
    "text": "router it coerces it into an effect or the HTTP type",
    "start": "1055700",
    "end": "1062660"
  },
  {
    "text": "but if you keep it as a router type then merge them",
    "start": "1062660",
    "end": "1067820"
  },
  {
    "text": "together later it builds a single Radix tree",
    "start": "1067820",
    "end": "1073220"
  },
  {
    "text": "out of the combined routers instead of having multiple routers stitched",
    "start": "1073220",
    "end": "1078980"
  },
  {
    "text": "together I guess we would also add provide layer",
    "start": "1078980",
    "end": "1084260"
  },
  {
    "text": "and and so on and so forth right yeah we could um",
    "start": "1084260",
    "end": "1090740"
  },
  {
    "text": "the only thing is it's per request yeah it's not advisable but yeah it's",
    "start": "1090740",
    "end": "1097940"
  },
  {
    "text": "not advisable but um we could add those",
    "start": "1097940",
    "end": "1103360"
  },
  {
    "text": "and then the server module which",
    "start": "1106400",
    "end": "1112280"
  },
  {
    "text": "uh the server interface just has a single",
    "start": "1112280",
    "end": "1117980"
  },
  {
    "text": "method on it serve it exposes the address it's listing on",
    "start": "1117980",
    "end": "1124179"
  },
  {
    "text": "and then there's an accessor in here where is it",
    "start": "1124340",
    "end": "1130039"
  },
  {
    "text": "there's a bit of an early type signature but um this is what you use for",
    "start": "1130039",
    "end": "1137240"
  },
  {
    "text": "uh turn your HTTP app into a running running instance",
    "start": "1137240",
    "end": "1143679"
  },
  {
    "text": "and in the in the platform node package we include",
    "start": "1145700",
    "end": "1153799"
  },
  {
    "text": "the layers with actual implementation for it",
    "start": "1153799",
    "end": "1161200"
  },
  {
    "text": "thank you and then the Euro Euro Prince module which is the same as the same as HTTP",
    "start": "1162080",
    "end": "1169400"
  },
  {
    "text": "client and if we take a look at a quick example",
    "start": "1169400",
    "end": "1177760"
  },
  {
    "text": "so here we're creating our server layer which",
    "start": "1182419",
    "end": "1187460"
  },
  {
    "text": "um at the moment you passed in a lazy HTTP server instance",
    "start": "1187460",
    "end": "1196820"
  },
  {
    "text": "and then the arguments it will use for the lesson call and there's also a Kong config variant",
    "start": "1196820",
    "end": "1205100"
  },
  {
    "text": "of the letter so you can pass it and the listen arguments is a is a config",
    "start": "1205100",
    "end": "1212539"
  },
  {
    "text": "so you can pull in ports from the environment quite easily",
    "start": "1212539",
    "end": "1217780"
  },
  {
    "text": "and then here we're creating our router",
    "start": "1217820",
    "end": "1222399"
  },
  {
    "text": "so we start with the empty router and then we add routes using the",
    "start": "1223760",
    "end": "1230960"
  },
  {
    "text": "the method helpers so on the",
    "start": "1230960",
    "end": "1236360"
  },
  {
    "text": "root HTTP path we're just sending echoing back",
    "start": "1236360",
    "end": "1242120"
  },
  {
    "text": "the request URL so this is just a quick example of how you access the current",
    "start": "1242120",
    "end": "1247520"
  },
  {
    "text": "HTTP request using the um server request tag",
    "start": "1247520",
    "end": "1254139"
  },
  {
    "text": "and then we're creating a post route which accepts some form data",
    "start": "1254240",
    "end": "1262720"
  },
  {
    "text": "so here we're using one of the provided requests schema helpers",
    "start": "1263120",
    "end": "1269299"
  },
  {
    "text": "and we can use this form.file schema",
    "start": "1269299",
    "end": "1275120"
  },
  {
    "text": "helper which is an array of files",
    "start": "1275120",
    "end": "1280840"
  },
  {
    "text": "so you can validate your form data as a files",
    "start": "1281600",
    "end": "1286760"
  },
  {
    "text": "files field and that it contains a bunch of files",
    "start": "1286760",
    "end": "1292460"
  },
  {
    "text": "and then we're logging them returning it into your response and then finally we wrap it all up by",
    "start": "1292460",
    "end": "1298340"
  },
  {
    "text": "calling serve and the middleware you can pass them",
    "start": "1298340",
    "end": "1303440"
  },
  {
    "text": "middleware here and this middleware will wrap the entire HTTP chain including the",
    "start": "1303440",
    "end": "1308840"
  },
  {
    "text": "sending of a response and those are that's for the cases where you might send like a stream back and",
    "start": "1308840",
    "end": "1315620"
  },
  {
    "text": "the stream might take uh quite a bit of time to send and this ensures like all the timing",
    "start": "1315620",
    "end": "1323020"
  },
  {
    "text": "includes the sending of the Stream",
    "start": "1323020",
    "end": "1327580"
  },
  {
    "text": "uh and then here we're just tuning Our serve effect into a into a layer",
    "start": "1328900",
    "end": "1337640"
  },
  {
    "text": "and that will have the type uh there will be a layer never never never",
    "start": "1337640",
    "end": "1344299"
  },
  {
    "text": "never uh yeah where",
    "start": "1344299",
    "end": "1351320"
  },
  {
    "text": "yes yes discarding yeah yeah and then we're just Lord church and",
    "start": "1351320",
    "end": "1359059"
  },
  {
    "text": "using run main from the platform package which will handle interruptions and all",
    "start": "1359059",
    "end": "1365179"
  },
  {
    "text": "that kind of good stuff",
    "start": "1365179",
    "end": "1368140"
  },
  {
    "text": "cool",
    "start": "1370640",
    "end": "1373600"
  },
  {
    "text": "maybe we can [Music] quickly build something yeah",
    "start": "1377240",
    "end": "1386059"
  },
  {
    "text": "let's build something hmm",
    "start": "1386059",
    "end": "1390460"
  },
  {
    "text": "I think I have a template somewhere",
    "start": "1394640",
    "end": "1399039"
  },
  {
    "text": "it's called this uh it should be demo",
    "start": "1409760",
    "end": "1415520"
  },
  {
    "text": "well close it down this already has",
    "start": "1435679",
    "end": "1442760"
  },
  {
    "text": "a bunch of stuff in it already started",
    "start": "1442760",
    "end": "1449440"
  },
  {
    "text": "listen please code",
    "start": "1453020",
    "end": "1456580"
  },
  {
    "start": "1456000",
    "end": "2851000"
  },
  {
    "text": "all right what I've got here",
    "start": "1461200",
    "end": "1466120"
  },
  {
    "text": "so we've got a core an HTTP package in here",
    "start": "1468500",
    "end": "1473440"
  },
  {
    "text": "uh looks like I've got a Creator service and I've already set up in here",
    "start": "1475640",
    "end": "1482480"
  },
  {
    "text": "a really basic http server with a Hello route",
    "start": "1482480",
    "end": "1489260"
  },
  {
    "text": "so I think maybe we could quickly build out a crunch app",
    "start": "1489260",
    "end": "1495500"
  },
  {
    "text": "baby that does users or something yes",
    "start": "1495500",
    "end": "1502120"
  },
  {
    "text": "right so the first thing we need is",
    "start": "1502159",
    "end": "1507158"
  },
  {
    "text": "a user service",
    "start": "1507799",
    "end": "1510820"
  },
  {
    "text": "uh probably need",
    "start": "1519080",
    "end": "1523840"
  },
  {
    "text": "to define the user",
    "start": "1524600",
    "end": "1528820"
  },
  {
    "text": "foreign",
    "start": "1529760",
    "end": "1531940"
  },
  {
    "text": "let's do a quick create",
    "start": "1592760",
    "end": "1596740"
  },
  {
    "text": "which I can use there thank you",
    "start": "1604159",
    "end": "1609580"
  },
  {
    "text": "let me give it an ID",
    "start": "1620620",
    "end": "1624340"
  },
  {
    "text": "[Music] and if we admit the ID for",
    "start": "1630440",
    "end": "1637658"
  },
  {
    "text": "I am saying closing properties",
    "start": "1638960",
    "end": "1644500"
  },
  {
    "text": "ouch",
    "start": "1649640",
    "end": "1651640"
  },
  {
    "text": "what uh the stocks came out",
    "start": "1678400",
    "end": "1684340"
  },
  {
    "text": "um",
    "start": "1703400",
    "end": "1705400"
  },
  {
    "text": "probably type off user without any yeah yeah",
    "start": "1712100",
    "end": "1718960"
  },
  {
    "text": "and then you use a",
    "start": "1725020",
    "end": "1731740"
  },
  {
    "text": "ID of one right now",
    "start": "1739659",
    "end": "1745120"
  },
  {
    "text": "[Music] oh",
    "start": "1747050",
    "end": "1753100"
  },
  {
    "text": "and then we'll just cooking like a service out of that export",
    "start": "1754159",
    "end": "1759679"
  },
  {
    "text": "users enter face",
    "start": "1759679",
    "end": "1765580"
  },
  {
    "text": "perfect benefit",
    "start": "1775700",
    "end": "1780039"
  },
  {
    "text": "I guess",
    "start": "1782179",
    "end": "1784720"
  },
  {
    "text": "oops actually it's on episode",
    "start": "1800360",
    "end": "1804100"
  },
  {
    "text": "and then give it a tag",
    "start": "1808159",
    "end": "1811779"
  },
  {
    "text": "from the context uh that's probably gonna be users",
    "start": "1817100",
    "end": "1823399"
  },
  {
    "text": "otherwise it conflicts with the class definition oh yeah",
    "start": "1823399",
    "end": "1828879"
  },
  {
    "text": "and then we just quickly make a layer",
    "start": "1842860",
    "end": "1847600"
  },
  {
    "text": "the index is right next I'm just going to delete it",
    "start": "1869059",
    "end": "1873820"
  },
  {
    "text": "so really by Tech user service here we go",
    "start": "1875720",
    "end": "1883360"
  },
  {
    "text": "um maybe in HTTP we'll approach",
    "start": "1885799",
    "end": "1891100"
  },
  {
    "text": "the module for users",
    "start": "1891860",
    "end": "1895960"
  },
  {
    "text": "okay we'll just trailers",
    "start": "1900919",
    "end": "1908140"
  },
  {
    "text": "this is one way you could structure it where you have like a",
    "start": "1912740",
    "end": "1917860"
  },
  {
    "text": "separate route up here section of your domain",
    "start": "1917860",
    "end": "1922880"
  },
  {
    "text": "and then you combine them later first you start with MP router",
    "start": "1922880",
    "end": "1930080"
  },
  {
    "text": "and then we want to add our current route which will",
    "start": "1930080",
    "end": "1936500"
  },
  {
    "text": "be post",
    "start": "1936500",
    "end": "1938980"
  },
  {
    "text": "and then in here we can",
    "start": "1947000",
    "end": "1950620"
  },
  {
    "text": "um do we want to get a user from the request so to do that we will create a",
    "start": "1952700",
    "end": "1959720"
  },
  {
    "text": "helper that pull the user from a data body",
    "start": "1959720",
    "end": "1966140"
  },
  {
    "text": "for the HTTP module we can use the requests",
    "start": "1966140",
    "end": "1971779"
  },
  {
    "text": "namespace a new schema body Json",
    "start": "1971779",
    "end": "1977980"
  },
  {
    "text": "we'll import our user service",
    "start": "1986059",
    "end": "1989860"
  },
  {
    "text": "or this",
    "start": "1993200",
    "end": "1998260"
  },
  {
    "text": "will be the next order",
    "start": "2000880",
    "end": "2004260"
  },
  {
    "text": "and for we want the user of our ID",
    "start": "2017740",
    "end": "2022860"
  },
  {
    "text": "and then we want to encoder user for the response all right",
    "start": "2025480",
    "end": "2032700"
  },
  {
    "text": "this stuff here's",
    "start": "2038200",
    "end": "2042360"
  },
  {
    "text": "so here we have an effect that will take in a request and return a user of an ID",
    "start": "2048280",
    "end": "2056520"
  },
  {
    "text": "and here we have something that will take a new user and give us back a response",
    "start": "2057159",
    "end": "2064358"
  },
  {
    "text": "so let's use this",
    "start": "2064359",
    "end": "2067679"
  },
  {
    "text": "uh code use it and we should value the hill",
    "start": "2071560",
    "end": "2079919"
  },
  {
    "text": "that's not a user that's a user without ready",
    "start": "2082599",
    "end": "2089700"
  },
  {
    "text": "and then we create our user",
    "start": "2090639",
    "end": "2094679"
  },
  {
    "text": "[Music] um",
    "start": "2098240",
    "end": "2100920"
  },
  {
    "text": "this and use I'll give this correct methodge",
    "start": "2111640",
    "end": "2120040"
  },
  {
    "text": "I thought we'd use our about ID",
    "start": "2120040",
    "end": "2124020"
  },
  {
    "text": "and now we can send it back",
    "start": "2126960",
    "end": "2131880"
  },
  {
    "text": "I need to yield and quote uh this one is not effectual",
    "start": "2136000",
    "end": "2142960"
  },
  {
    "text": "okay that's weird in this case the effect is",
    "start": "2142960",
    "end": "2149859"
  },
  {
    "text": "embedded in the response yeah but the schema may have effectful transformations in it",
    "start": "2149859",
    "end": "2157920"
  },
  {
    "text": "um and the effect is evaluated as part of the server",
    "start": "2161200",
    "end": "2169078"
  },
  {
    "text": "so we go to the model body",
    "start": "2172420",
    "end": "2178920"
  },
  {
    "text": "yeah so maybe yeah maybe it does a bit more sense to make",
    "start": "2188140",
    "end": "2194440"
  },
  {
    "text": "the creation of bodies effectual in some cases",
    "start": "2194440",
    "end": "2199960"
  },
  {
    "text": "well I mean it's not like you have many choices if the schema you provide has",
    "start": "2199960",
    "end": "2205540"
  },
  {
    "text": "a transformation in it that is effectful functionally true",
    "start": "2205540",
    "end": "2211540"
  },
  {
    "text": "yeah the other example was a stream um",
    "start": "2211540",
    "end": "2217119"
  },
  {
    "text": "stream confer but you cuts",
    "start": "2217119",
    "end": "2223320"
  },
  {
    "text": "evaluator then and there if that makes sense",
    "start": "2223320",
    "end": "2227760"
  },
  {
    "text": "side did Edge effect body",
    "start": "2230320",
    "end": "2235020"
  },
  {
    "text": "I got it",
    "start": "2236140",
    "end": "2239039"
  },
  {
    "text": "so the body in itself is an effect yes",
    "start": "2242980",
    "end": "2248339"
  },
  {
    "text": "so you can attach an effect that results to a non-effect body",
    "start": "2248339",
    "end": "2256260"
  },
  {
    "text": "and then stream is quite similar you can uh kind of wrap it around a stream",
    "start": "2259660",
    "end": "2267760"
  },
  {
    "text": "but you kind of we have to set the error to unknown",
    "start": "2267760",
    "end": "2273720"
  },
  {
    "text": "and I guess I mean what what happens if that if the",
    "start": "2279160",
    "end": "2284260"
  },
  {
    "text": "encoding fails yeah so currently it just",
    "start": "2284260",
    "end": "2290079"
  },
  {
    "text": "um since Becca 500",
    "start": "2290079",
    "end": "2295200"
  },
  {
    "text": "and what does it do",
    "start": "2295660",
    "end": "2301980"
  },
  {
    "text": "T yes",
    "start": "2311280",
    "end": "2314460"
  },
  {
    "text": "uh respond",
    "start": "2321040",
    "end": "2324240"
  },
  {
    "text": "it's tries to send back the response enough",
    "start": "2329140",
    "end": "2335740"
  },
  {
    "text": "there was an error hand in the response is",
    "start": "2335740",
    "end": "2341520"
  },
  {
    "text": "tries to send a 500 unless the head is a very Vincent",
    "start": "2341859",
    "end": "2347220"
  },
  {
    "text": "yeah I'm not sure how else I can do that",
    "start": "2357940",
    "end": "2362280"
  },
  {
    "text": "anyway we can think about that some more",
    "start": "2368920",
    "end": "2376560"
  },
  {
    "text": "um so here we're using the encode user helper to return back a user response",
    "start": "2378520",
    "end": "2385980"
  },
  {
    "text": "and then you can do things like HP router",
    "start": "2391480",
    "end": "2397480"
  },
  {
    "text": "effects and then do things like handle the pass",
    "start": "2398920",
    "end": "2404079"
  },
  {
    "text": "errors",
    "start": "2404079",
    "end": "2406619"
  },
  {
    "text": "okay and sitting back you've probably seen something back a bit more useful than this but",
    "start": "2419920",
    "end": "2428160"
  },
  {
    "text": "say 400 real",
    "start": "2428260",
    "end": "2431460"
  },
  {
    "text": "and again these these parts error is only the",
    "start": "2433900",
    "end": "2439359"
  },
  {
    "text": "parsing from the request not eventually from",
    "start": "2439480",
    "end": "2445359"
  },
  {
    "text": "from the encode back yeah that's right",
    "start": "2445359",
    "end": "2449880"
  },
  {
    "text": "um and at this point we have back uh router",
    "start": "2451900",
    "end": "2462660"
  },
  {
    "text": "that requires a server request the user service",
    "start": "2464380",
    "end": "2469740"
  },
  {
    "text": "and here's the request error",
    "start": "2470260",
    "end": "2474000"
  },
  {
    "text": "so we can then go back to a main HTTP server file",
    "start": "2477820",
    "end": "2486060"
  },
  {
    "text": "and melts that router in here any reason why we",
    "start": "2487660",
    "end": "2495520"
  },
  {
    "text": "are explicitly requiring the server request",
    "start": "2495520",
    "end": "2501820"
  },
  {
    "text": "in the router because it seems to me that the router type could add it automatically and keep",
    "start": "2501820",
    "end": "2508660"
  },
  {
    "text": "it clean from the from the r uh",
    "start": "2508660",
    "end": "2515940"
  },
  {
    "text": "yeah I could exclude it I guess",
    "start": "2516040",
    "end": "2520020"
  },
  {
    "text": "there's no particular reason it's doing it",
    "start": "2522700",
    "end": "2526619"
  },
  {
    "text": "uh HTTP because thinking from a user",
    "start": "2527980",
    "end": "2534280"
  },
  {
    "text": "perspective if I want to use if I want to create a router and inside my router",
    "start": "2534280",
    "end": "2539619"
  },
  {
    "text": "I access anything custom like a database or so on and so forth I should see it in",
    "start": "2539619",
    "end": "2546099"
  },
  {
    "text": "the r but yeah it's fairly normal that I accessed the the request and the type is already an",
    "start": "2546099",
    "end": "2554619"
  },
  {
    "text": "alias on double effect so your your type may be squashed a",
    "start": "2554619",
    "end": "2561520"
  },
  {
    "text": "little bit in user land yeah yeah we could definitely remove it from",
    "start": "2561520",
    "end": "2567640"
  },
  {
    "text": "the router type I guess we just need to work out where",
    "start": "2567640",
    "end": "2572800"
  },
  {
    "text": "to add the exclude but yeah it should be pretty keep it a bit cleaner",
    "start": "2572800",
    "end": "2578339"
  },
  {
    "text": "uh cool",
    "start": "2581400",
    "end": "2584640"
  },
  {
    "text": "uh let's complaining because we haven't added our user service",
    "start": "2589660",
    "end": "2597540"
  },
  {
    "text": "that's good sign ificance to this job",
    "start": "2598420",
    "end": "2604200"
  },
  {
    "text": "uh use this live there it is and now we're happy",
    "start": "2605500",
    "end": "2613319"
  },
  {
    "text": "if we run this",
    "start": "2618420",
    "end": "2622318"
  },
  {
    "text": "this is HP",
    "start": "2626440",
    "end": "2629460"
  },
  {
    "text": "maybe let's pull out a little bit",
    "start": "2635440",
    "end": "2640619"
  },
  {
    "text": "should we build yeah",
    "start": "2645300",
    "end": "2649980"
  },
  {
    "text": "and",
    "start": "2672579",
    "end": "2675579"
  },
  {
    "text": "get up",
    "start": "2684400",
    "end": "2687000"
  },
  {
    "text": "okay Alexis I'm not sure what I said that they say relative Imports see if that works",
    "start": "2689980",
    "end": "2697260"
  },
  {
    "text": "the area that's great it's probably yes note that doesn't",
    "start": "2713560",
    "end": "2720280"
  },
  {
    "text": "yeah template was a recent thing so it needs some needs a bit of work probably",
    "start": "2720280",
    "end": "2728640"
  },
  {
    "text": "yeah let's post something to",
    "start": "2735099",
    "end": "2739599"
  },
  {
    "text": "see if we get a 400. what do we indeed get it for 500.",
    "start": "2744700",
    "end": "2752980"
  },
  {
    "text": "uh oh yeah because we're not sitting back",
    "start": "2756760",
    "end": "2763359"
  },
  {
    "text": "we're not seeing Json yet",
    "start": "2763359",
    "end": "2766980"
  },
  {
    "text": "yeah it's at 400. and we didn't see its name",
    "start": "2772660",
    "end": "2781920"
  },
  {
    "text": "hey",
    "start": "2787900",
    "end": "2790859"
  },
  {
    "text": "good old team there we go great working",
    "start": "2794859",
    "end": "2801480"
  },
  {
    "text": "and if we remove the H field the schema should do its job",
    "start": "2804040",
    "end": "2809400"
  },
  {
    "text": "cool so that's",
    "start": "2812500",
    "end": "2815640"
  },
  {
    "text": "um I think that's enough just to show",
    "start": "2817660",
    "end": "2822760"
  },
  {
    "text": "bits and pieces and now they fit together and how it works for the schema",
    "start": "2822760",
    "end": "2828240"
  },
  {
    "text": "um maybe we can quickly add the well you have the logger Tracer middle",
    "start": "2829300",
    "end": "2835720"
  },
  {
    "text": "middleware yeah we see the logs in the in the console I guess those comes from",
    "start": "2835720",
    "end": "2843880"
  },
  {
    "text": "the logger side of things should we maybe try to see a span",
    "start": "2843880",
    "end": "2851319"
  },
  {
    "start": "2851000",
    "end": "3512000"
  },
  {
    "text": "yeah sure kid uh so let's quickly go to our user service",
    "start": "2851319",
    "end": "2856920"
  },
  {
    "text": "and had a span here",
    "start": "2857260",
    "end": "2863400"
  },
  {
    "text": "the spin users",
    "start": "2864940",
    "end": "2872859"
  },
  {
    "text": "okay",
    "start": "2874660",
    "end": "2876960"
  },
  {
    "text": "um so to do that we'll need to pull in",
    "start": "2881319",
    "end": "2885900"
  },
  {
    "text": "maybe let's quickly do open telemetry",
    "start": "2887319",
    "end": "2891359"
  },
  {
    "text": "oh",
    "start": "2894099",
    "end": "2896520"
  },
  {
    "text": "this chicken I've got Tempo running",
    "start": "2904599",
    "end": "2908400"
  },
  {
    "text": "there we go",
    "start": "2911740",
    "end": "2914400"
  },
  {
    "text": "and to use up until a bit true first we have to",
    "start": "2917339",
    "end": "2924119"
  },
  {
    "text": "good",
    "start": "2924460",
    "end": "2927460"
  },
  {
    "text": "here we want the Tracer module [Music]",
    "start": "2933040",
    "end": "2938460"
  },
  {
    "text": "in the node SD cable",
    "start": "2938460",
    "end": "2945240"
  },
  {
    "text": "uh and I think we want the",
    "start": "2948540",
    "end": "2952980"
  },
  {
    "text": "I think we want the hotel exporter",
    "start": "2953740",
    "end": "2958200"
  },
  {
    "text": "report example suppose",
    "start": "2960579",
    "end": "2966400"
  },
  {
    "text": "yeah this one that guy",
    "start": "2966400",
    "end": "2974160"
  },
  {
    "text": "so we put in the exporter",
    "start": "2980260",
    "end": "2987300"
  },
  {
    "text": "if I just copy of it and follow you also the resource then",
    "start": "2991839",
    "end": "3000000"
  },
  {
    "text": "yes",
    "start": "3000000",
    "end": "3002599"
  },
  {
    "text": "how many forgot the Tracer",
    "start": "3030599",
    "end": "3034640"
  },
  {
    "text": "um go another thing so the resources for",
    "start": "3040440",
    "end": "3046980"
  },
  {
    "text": "identifying your service Decay sets up",
    "start": "3046980",
    "end": "3052920"
  },
  {
    "text": "the exporter and any reason why we're like seeing and as Annie",
    "start": "3052920",
    "end": "3060780"
  },
  {
    "text": "a song",
    "start": "3060780",
    "end": "3063680"
  },
  {
    "text": "foreign",
    "start": "3069180",
    "end": "3072180"
  },
  {
    "text": "[Music]",
    "start": "3083150",
    "end": "3086308"
  },
  {
    "text": "uh domain here it is",
    "start": "3114440",
    "end": "3119839"
  },
  {
    "text": "yeah let's send a few requests foreign",
    "start": "3142740",
    "end": "3148220"
  },
  {
    "text": "there it is a bunch of traces",
    "start": "3180920",
    "end": "3189260"
  },
  {
    "text": "uh so there's the 400.",
    "start": "3195440",
    "end": "3200000"
  },
  {
    "text": "it should have included our user service spin",
    "start": "3203880",
    "end": "3211040"
  },
  {
    "text": "maybe I need to build",
    "start": "3216839",
    "end": "3220040"
  },
  {
    "text": "what is he complaining about it's actually important a bit of oil",
    "start": "3243660",
    "end": "3249119"
  },
  {
    "text": "pressure on top something about open telemetry",
    "start": "3249119",
    "end": "3256640"
  },
  {
    "text": "[Music] oh really looking really hard",
    "start": "3267770",
    "end": "3275240"
  },
  {
    "text": "yeah let's see if [Music]",
    "start": "3275760",
    "end": "3280700"
  },
  {
    "text": "okay I'm not sure why it's not including that child's fan",
    "start": "3281040",
    "end": "3287420"
  },
  {
    "text": "uh you know time ordering",
    "start": "3288420",
    "end": "3295440"
  },
  {
    "text": "for some reason by default it doesn't order it by the time it came in",
    "start": "3295440",
    "end": "3302240"
  },
  {
    "text": "there it is there we go they go effect under one millisecond",
    "start": "3304500",
    "end": "3310500"
  },
  {
    "text": "that's a very fast database cool but it's nice because we didn't have to",
    "start": "3310500",
    "end": "3319200"
  },
  {
    "text": "change literally anything in the codes we 've uh yeah and that's",
    "start": "3319200",
    "end": "3325980"
  },
  {
    "text": "and that's it yeah you can inspect",
    "start": "3325980",
    "end": "3333720"
  },
  {
    "text": "what's going on and I guess probably we could even like add further metadata",
    "start": "3333839",
    "end": "3341400"
  },
  {
    "text": "well I guess we are setting labels for the status code and and stuff like that yeah",
    "start": "3341400",
    "end": "3347400"
  },
  {
    "text": "so when the response gets after responses sent or add the status",
    "start": "3347400",
    "end": "3352980"
  },
  {
    "text": "code um and if we did some logging",
    "start": "3352980",
    "end": "3360839"
  },
  {
    "text": "uh in our app that would also show up so like for example we'll go into our user",
    "start": "3360839",
    "end": "3366000"
  },
  {
    "text": "service in image",
    "start": "3366000",
    "end": "3371780"
  },
  {
    "text": "so",
    "start": "3373440",
    "end": "3376440"
  },
  {
    "text": "uh hello",
    "start": "3383220",
    "end": "3387920"
  },
  {
    "text": "let's do the build again probably just sort of did build much",
    "start": "3403079",
    "end": "3408599"
  },
  {
    "text": "we should go and Report the the error to the to the open Telemetry folks",
    "start": "3408599",
    "end": "3415740"
  },
  {
    "text": "yeah we should",
    "start": "3415740",
    "end": "3421400"
  },
  {
    "text": "foreign",
    "start": "3432119",
    "end": "3434299"
  },
  {
    "text": "do we need to rebuild okay",
    "start": "3446760",
    "end": "3452000"
  },
  {
    "text": "did I save the file with things like that",
    "start": "3457440",
    "end": "3464119"
  },
  {
    "text": "packages",
    "start": "3474599",
    "end": "3477599"
  },
  {
    "text": "oh yeah there it is there it is",
    "start": "3499980",
    "end": "3505520"
  },
  {
    "text": "cool cool well that's a great start",
    "start": "3508680",
    "end": "3516200"
  },
  {
    "start": "3512000",
    "end": "3576000"
  },
  {
    "text": "yeah it's definitely definitely a start",
    "start": "3516359",
    "end": "3520460"
  },
  {
    "text": "I guess where do we want to take it from here probably adding more default",
    "start": "3523319",
    "end": "3530040"
  },
  {
    "text": "middlewares refining a little bit the the apis where",
    "start": "3530040",
    "end": "3535619"
  },
  {
    "text": "where possible and then we really we would really love feedback",
    "start": "3535619",
    "end": "3542040"
  },
  {
    "text": "yeah yeah definitely any more middleware and then just listening to the feedback",
    "start": "3542040",
    "end": "3547079"
  },
  {
    "text": "and working out where everyone's needs are",
    "start": "3547079",
    "end": "3552020"
  },
  {
    "text": "well good good and thank you team again and sorry it took a little bit longer",
    "start": "3552720",
    "end": "3558839"
  },
  {
    "text": "than they initially expected but this was really fun",
    "start": "3558839",
    "end": "3564119"
  },
  {
    "text": "and I hope everybody enjoys it thank you",
    "start": "3564119",
    "end": "3571460"
  }
]