[
  {
    "text": "Welcome in everyone to another edition of Reimagining Content Layer with Effect.",
    "start": "5099",
    "end": "10566"
  },
  {
    "text": "I'm your host, Max and Tim.",
    "start": "12099",
    "end": "16900"
  },
  {
    "text": "We'll say your first.",
    "start": "17166",
    "end": "17933"
  },
  {
    "text": "So, we were just getting ready to crack open. We were smart enough the last time we met to leave",
    "start": "23333",
    "end": "29900"
  },
  {
    "text": "ourself a little reminder file or to-do file to remind ourselves",
    "start": "29966",
    "end": "35466"
  },
  {
    "text": "what we were working on. So, Tim and I were just getting ready to crack that open and take a look at what the next",
    "start": "35466",
    "end": "40500"
  },
  {
    "text": "steps were going to be for our Content Layer rewrite. So, Tim, I don't know if you already",
    "start": "40500",
    "end": "48032"
  },
  {
    "text": "cracked open our to-do file. I just cracked it open.",
    "start": "48033",
    "end": "54899"
  },
  {
    "text": "You have cracked it open. Okay.",
    "start": "55266",
    "end": "60933"
  },
  {
    "text": "Your mind. Okay. So, the last thing I think we worked on was the TypeScript like type generator, right?",
    "start": "63000",
    "end": "69366"
  },
  {
    "text": "Yeah, it would take a schema and generate TypeScript types for it",
    "start": "70533",
    "end": "77199"
  },
  {
    "text": "So, do you think that it makes sense to... Type Builder.",
    "start": "78766",
    "end": "83233"
  },
  {
    "text": "Yeah. So, where do you think the",
    "start": "84000",
    "end": "89033"
  },
  {
    "text": "next logical place to go is? Do you think it makes sense to do the DTS",
    "start": "89033",
    "end": "95500"
  },
  {
    "text": "files or should we create the actual modules or what do you think?",
    "start": "95500",
    "end": "99133"
  },
  {
    "text": "I think if we start creating the modules",
    "start": "102033",
    "end": "107933"
  },
  {
    "text": "in the generated folder here.",
    "start": "107933",
    "end": "114965"
  },
  {
    "text": "So, we're outputting types.",
    "start": "117300",
    "end": "118300"
  },
  {
    "text": "Okay. What did I add there? I think we're outputting this right now.",
    "start": "124666",
    "end": "131633"
  },
  {
    "text": "There. We are. Yeah. So, we want to change that to a DTS file.",
    "start": "135266",
    "end": "142233"
  },
  {
    "text": "And it looks like this is just the field. So, we need to add the ID because if you",
    "start": "145266",
    "end": "154166"
  },
  {
    "text": "look at the generated output.",
    "start": "154166",
    "end": "156199"
  },
  {
    "text": "Generated post and then just one of these guys.",
    "start": "159400",
    "end": "164566"
  },
  {
    "text": "We have fields and meta. Right. I think last time we briefly talked about",
    "start": "165766",
    "end": "171300"
  },
  {
    "text": "that we don't have a schema for the meta right now.",
    "start": "171300",
    "end": "175966"
  },
  {
    "text": "True. So, maybe first start we get types",
    "start": "176500",
    "end": "183033"
  },
  {
    "text": "looking like this and then start working on the package.",
    "start": "183033",
    "end": "187033"
  },
  {
    "text": "That sounds reasonable. Do you think having a schema for meta is",
    "start": "188966",
    "end": "195566"
  },
  {
    "text": "something we can build into the sources? Yeah, I think that's probably the only",
    "start": "195566",
    "end": "201633"
  },
  {
    "text": "place we can really put it.",
    "start": "201633",
    "end": "205300"
  },
  {
    "text": "So, the out meta basically. Yeah. The schema would be over",
    "start": "209633",
    "end": "215299"
  },
  {
    "text": "meta right in this case. Not the like... Or no, it would be the output type or no.",
    "start": "215300",
    "end": "220433"
  },
  {
    "text": "No, it would be the meta. Meta.",
    "start": "221300",
    "end": "225766"
  },
  {
    "text": "Yeah. We've got this add meta function.",
    "start": "226833",
    "end": "230500"
  },
  {
    "text": "If we do this then we also need to modify a schema.",
    "start": "232300",
    "end": "235933"
  },
  {
    "text": "So, maybe meta will just be a fixed field.",
    "start": "238133",
    "end": "241099"
  },
  {
    "text": "So, whatever meta we need add we also need a schema for it to build the types.",
    "start": "256900",
    "end": "262666"
  },
  {
    "text": "Maybe the constructor for a source should take in a schema as well and then that can be what we use to",
    "start": "264199",
    "end": "269699"
  },
  {
    "text": "actually derive the shape of meta. Yeah. So, I think the actual meta schema should",
    "start": "269699",
    "end": "279199"
  },
  {
    "text": "be on the output somewhere.",
    "start": "279199",
    "end": "280833"
  },
  {
    "text": "I guess this would be a schema from unknown to meta right?",
    "start": "291500",
    "end": "295066"
  },
  {
    "text": "Yeah. What does this do? Yes. That was back there easier for us.",
    "start": "297533",
    "end": "301500"
  },
  {
    "text": "Meta. And the context of meta is good for us.",
    "start": "307500",
    "end": "315400"
  },
  {
    "text": "Yeah. Or I guess it could just be an AST but...",
    "start": "318133",
    "end": "325866"
  },
  {
    "text": "Oh, this is fun. From here you'll need a schema.",
    "start": "328333",
    "end": "335400"
  },
  {
    "text": "Or...",
    "start": "341533",
    "end": "342033"
  },
  {
    "text": "I thought we were fixing it to unknown We'll just discard the other.",
    "start": "352733",
    "end": "359133"
  },
  {
    "text": "Clear. Let me use schema.",
    "start": "360933",
    "end": "364400"
  },
  {
    "text": "I think extend makes the most sense here, yeah. Yeah, and I guess I would",
    "start": "370933",
    "end": "378033"
  },
  {
    "text": "have start with an empty struct. Right.",
    "start": "378033",
    "end": "382000"
  },
  {
    "text": "Extend.",
    "start": "385366",
    "end": "385566"
  },
  {
    "text": "Does it have an overload? Is it dual? Yeah, it is dual.",
    "start": "390433",
    "end": "394199"
  },
  {
    "text": "So...",
    "start": "397099",
    "end": "397300"
  },
  {
    "text": "What's the error we're getting here? What's that? What's the error we're getting there?",
    "start": "407099",
    "end": "412699"
  },
  {
    "text": "I'll do it right now. Not assignable to something.",
    "start": "415066",
    "end": "420366"
  },
  {
    "text": "Fixed it. Fixed it. No more errors.",
    "start": "423166",
    "end": "426866"
  },
  {
    "text": "They will be getting an error because... Let's just start with...",
    "start": "433366",
    "end": "438000"
  },
  {
    "text": "The file system. Okay.",
    "start": "440300",
    "end": "443699"
  },
  {
    "text": "So we... write a schema for file system meta",
    "start": "446933",
    "end": "452900"
  },
  {
    "text": "I forgot what it looks",
    "start": "455400",
    "end": "464900"
  },
  {
    "text": "like, the file system meta. Got all the stuff in it.",
    "start": "464900",
    "end": "469400"
  },
  {
    "text": "So if we... Whoops.",
    "start": "476766",
    "end": "479066"
  },
  {
    "text": "We're getting to my new keyboard. At least you don't have to manually push",
    "start": "483233",
    "end": "489533"
  },
  {
    "text": "the comma button anymore. Yeah.",
    "start": "489533",
    "end": "492333"
  },
  {
    "text": "Option error. So it already has name in here.",
    "start": "505433",
    "end": "513333"
  },
  {
    "text": "And the word declaring name again here. There were overriding names.",
    "start": "515866",
    "end": "522232"
  },
  {
    "text": "It's probably fine. So we'll see.",
    "start": "525066",
    "end": "528966"
  },
  {
    "text": "We're going to just get rid of it. Well, does path.parse's name give you the base name?",
    "start": "531933",
    "end": "537800"
  },
  {
    "text": "Or like, why did we even put that in there? What is name?",
    "start": "538000",
    "end": "549466"
  },
  {
    "text": "Name... Is the base name of our extension.",
    "start": "551833",
    "end": "555100"
  },
  {
    "text": "That's different. So base is actually the base name.",
    "start": "557300",
    "end": "561633"
  },
  {
    "text": "Yeah. It seems like it's redundant, even though.",
    "start": "563233",
    "end": "570133"
  },
  {
    "text": "And if we explicitly type the schema",
    "start": "580833",
    "end": "584366"
  },
  {
    "text": "And here we go.",
    "start": "605100",
    "end": "606899"
  },
  {
    "text": "Maybe, maybe having it fixed, like just causing too many problems.",
    "start": "624699",
    "end": "629266"
  },
  {
    "text": "What's that? I said maybe fixing it the input type to unknown is just",
    "start": "630666",
    "end": "636533"
  },
  {
    "text": "causing too many problems. Yeah, maybe. I'm just thinking about, we probably have",
    "start": "636533",
    "end": "649199"
  },
  {
    "text": "a generic for it, but we just don't use it. I mean, is there ever going to be a",
    "start": "649199",
    "end": "655633"
  },
  {
    "text": "situation where the input to the meta is going to be something that we need to transform?",
    "start": "655633",
    "end": "661532"
  },
  {
    "text": "I feel like probably not. Probably the way to do any. Because I mean, that's fine.",
    "start": "662800",
    "end": "669399"
  },
  {
    "text": "It's just that the meta is something the source defines. So I feel like that's not really",
    "start": "669399",
    "end": "674832"
  },
  {
    "text": "something necessarily exposed to the user. That will do.",
    "start": "674833",
    "end": "681033"
  },
  {
    "text": "So we have a schema. When we read that really need the schema",
    "start": "685133",
    "end": "691533"
  },
  {
    "text": "for the AST, we don't actually use it. Right.",
    "start": "691533",
    "end": "696600"
  },
  {
    "text": "So maybe we just change the AST.",
    "start": "700899",
    "end": "705532"
  },
  {
    "text": "Meta nasty. This meta is nasty.",
    "start": "707933",
    "end": "713766"
  },
  {
    "text": "AST. I think that schema is seen now. Yeah.",
    "start": "717966",
    "end": "723100"
  },
  {
    "text": "And that solves that issue. And then here.",
    "start": "731433",
    "end": "735566"
  },
  {
    "text": "We can go. schema.make.",
    "start": "738399",
    "end": "741699"
  },
  {
    "text": "I wonder what extend doesn't.",
    "start": "756533",
    "end": "764866"
  },
  {
    "text": "There's probably a lot of fanciness going on under the hood with extend, but. Yeah, there is.",
    "start": "765066",
    "end": "770833"
  },
  {
    "text": "I guess if we just track the fields.",
    "start": "775000",
    "end": "780033"
  },
  {
    "text": "Did it again Tim? Sorry.",
    "start": "785033",
    "end": "786100"
  },
  {
    "text": "We could just track the struct fields. So we make this.",
    "start": "790500",
    "end": "795699"
  },
  {
    "text": "It's a bit hard to type shape. It's a bit hard to type shape.",
    "start": "796633",
    "end": "803899"
  },
  {
    "text": "Let's just continue. So now type order.",
    "start": "829066",
    "end": "834699"
  },
  {
    "text": "We need to use that.",
    "start": "835033",
    "end": "837300"
  },
  {
    "text": "We need schema. And then we add.",
    "start": "849800",
    "end": "853532"
  },
  {
    "text": "Build or built",
    "start": "861699",
    "end": "862433"
  },
  {
    "text": "So I just we built. document. Are we exporting that type somewhere?",
    "start": "881500",
    "end": "887100"
  },
  {
    "text": "Document builder. Document builder.",
    "start": "893699",
    "end": "900933"
  },
  {
    "text": "Document builder. Yeah, that's it.",
    "start": "903066",
    "end": "905133"
  },
  {
    "text": "Did build again.",
    "start": "914300",
    "end": "916500"
  },
  {
    "text": "I didn't want to be annoying so I didn't say anything.",
    "start": "921233",
    "end": "923100"
  },
  {
    "text": "And then here.",
    "start": "931899",
    "end": "934300"
  },
  {
    "text": "We have an ID field, which is a schema. We have the fields.",
    "start": "953033",
    "end": "962300"
  },
  {
    "text": "Which is document document fields.",
    "start": "965433",
    "end": "969933"
  },
  {
    "text": "And then we have. We have meta Which will be a schema.",
    "start": "971533",
    "end": "976800"
  },
  {
    "text": "And that was from the app. Was it?",
    "start": "982100",
    "end": "983899"
  },
  {
    "text": "I think it was another AST.",
    "start": "987199",
    "end": "988165"
  },
  {
    "text": "What's the type here? Yeah, that's fine.",
    "start": "996666",
    "end": "1002766"
  },
  {
    "text": "We don't need anything fancy here.",
    "start": "1011533",
    "end": "1016000"
  },
  {
    "text": "We've got a type.",
    "start": "1023300",
    "end": "1024733"
  },
  {
    "text": "We type dependency cycle here.",
    "start": "1031800",
    "end": "1034766"
  },
  {
    "text": "I think so. So here we all need the.",
    "start": "1044333",
    "end": "1049933"
  },
  {
    "text": "The built document.",
    "start": "1050800",
    "end": "1052066"
  },
  {
    "text": "We need to create the AST.",
    "start": "1062033",
    "end": "1065100"
  },
  {
    "text": "Yeah. We're going to say I'll go.",
    "start": "1077666",
    "end": "1079233"
  },
  {
    "text": "There you go. That's good.",
    "start": "1140100",
    "end": "1145766"
  },
  {
    "text": "So passing. The document.",
    "start": "1152666",
    "end": "1155898"
  },
  {
    "text": "We kind of want. The mirror schema to",
    "start": "1185899",
    "end": "1191300"
  },
  {
    "text": "be part of the source. So it's like.",
    "start": "1191300",
    "end": "1195699"
  },
  {
    "text": "It's currently it's in the output but that's. The entity or.",
    "start": "1196666",
    "end": "1202866"
  },
  {
    "text": "Actual document. But really the schema is. There's only one schema per source.",
    "start": "1204199",
    "end": "1211533"
  },
  {
    "text": "Could we. It doesn't the source doesn't the document define its own source.",
    "start": "1223300",
    "end": "1228033"
  },
  {
    "text": "Let's get rid of that.",
    "start": "1243266",
    "end": "1245500"
  },
  {
    "text": "So the meta should conform. To.",
    "start": "1250666",
    "end": "1254632"
  },
  {
    "text": "The source of schema.",
    "start": "1257166",
    "end": "1258300"
  },
  {
    "text": "We're going to have to. Up to our source.",
    "start": "1266733",
    "end": "1272466"
  },
  {
    "text": "Definition.",
    "start": "1275366",
    "end": "1275666"
  },
  {
    "text": "So we create a type ID for this.",
    "start": "1283899",
    "end": "1287133"
  },
  {
    "text": "So to. But.",
    "start": "1300566",
    "end": "1304166"
  },
  {
    "text": "And then. Yeah.",
    "start": "1306566",
    "end": "1309933"
  },
  {
    "text": "We saw a copy of this guy.",
    "start": "1320766",
    "end": "1323699"
  },
  {
    "text": "Role of that. So we'll see to create a constructor",
    "start": "1352300",
    "end": "1359600"
  },
  {
    "text": "I don't need that anymore. But we do need to use",
    "start": "1401000",
    "end": "1406199"
  },
  {
    "text": "that constructor here now.",
    "start": "1406199",
    "end": "1407533"
  },
  {
    "text": "Where the error is, yeah.",
    "start": "1465433",
    "end": "1468632"
  },
  {
    "text": "Does make the API for source not as nice, because before you could just use the stream",
    "start": "1477433",
    "end": "1482666"
  },
  {
    "text": "combinator straight on it.",
    "start": "1483500",
    "end": "1486433"
  },
  {
    "text": "But I'm not sure if there's anywhere around this. We just add a combinator to easily",
    "start": "1488699",
    "end": "1497000"
  },
  {
    "text": "transform the stream.",
    "start": "1497000",
    "end": "1500866"
  },
  {
    "text": "Let me guess, I could drill. Uh, so we would...",
    "start": "1516000",
    "end": "1520633"
  },
  {
    "text": "I see you want something that can transform the stream.",
    "start": "1525866",
    "end": "1534899"
  },
  {
    "text": "so it's using meta, context, E",
    "start": "1546666",
    "end": "1556933"
  },
  {
    "text": "It's a bit of function, exit stream, and returns...",
    "start": "1570333",
    "end": "1577933"
  },
  {
    "text": "new stream. Yes, yeah.",
    "start": "1584500",
    "end": "1587933"
  },
  {
    "text": "We can just have like meta 2 and context 2 I guess, and then just merge and all. Yeah, we can't do a meta 2 here, because",
    "start": "1589533",
    "end": "1599699"
  },
  {
    "text": "then you'll need to add a schema for it.",
    "start": "1599699",
    "end": "1602500"
  },
  {
    "text": "So are we only doing this to allow stream transformations?",
    "start": "1606566",
    "end": "1610500"
  },
  {
    "text": "Yeah. Like what type of stream transformation doesn't manipulate the meta, I guess?",
    "start": "1612733",
    "end": "1617066"
  },
  {
    "text": "Yeah, I guess the stream transformations,",
    "start": "1621333",
    "end": "1628166"
  },
  {
    "text": "the main one is adding a plugin. But if we update the plugin signature to",
    "start": "1629066",
    "end": "1634433"
  },
  {
    "text": "take in the source and return a new one, that's fine.",
    "start": "1634433",
    "end": "1637500"
  },
  {
    "text": "Yeah. This could return new areas, so if we do...",
    "start": "1641100",
    "end": "1646833"
  },
  {
    "text": "It is fine like these types of APIs to not be super helpful if we're not actually manipulating the output value, but...",
    "start": "1649800",
    "end": "1656100"
  },
  {
    "text": "We'll be manipulating the context in the fields, but the fields aren't typed.",
    "start": "1657433",
    "end": "1665100"
  },
  {
    "text": "So the plugins would probably use this quite extensively.",
    "start": "1667333",
    "end": "1669833"
  },
  {
    "text": "Does that look... So it takes in the stream, returns a new stream with different context.",
    "start": "1682300",
    "end": "1688066"
  },
  {
    "text": "Yeah, that's fine. I think the source output is incorrect.",
    "start": "1689033",
    "end": "1692766"
  },
  {
    "text": "Okay.",
    "start": "1696300",
    "end": "1696766"
  },
  {
    "text": "Like returning a brand new context, or are we merging them? Yeah, it's a brand new context.",
    "start": "1704833",
    "end": "1711133"
  },
  {
    "text": "So we're just capturing the output of the new stream.",
    "start": "1712399",
    "end": "1716500"
  },
  {
    "text": "Yeah, that looks right.",
    "start": "1717866",
    "end": "1718398"
  },
  {
    "text": "Should we not be merging errors then, at least?",
    "start": "1723300",
    "end": "1726699"
  },
  {
    "text": "No, because you could catch an error in your transformation.",
    "start": "1729366",
    "end": "1733266"
  },
  {
    "text": "Doesn't the signature basically say that your input stream can't ever...",
    "start": "1757500",
    "end": "1763266"
  },
  {
    "text": "That error will never be surfaced? Is it?",
    "start": "1765333",
    "end": "1770833"
  },
  {
    "text": "Unless you're just returning the same error type in the output.",
    "start": "1772300",
    "end": "1775966"
  },
  {
    "text": "I guess we can see how this feels, but I don't know. The",
    "start": "1777766",
    "end": "1782899"
  },
  {
    "text": "signature looks strange to me.",
    "start": "1782899",
    "end": "1786466"
  },
  {
    "text": "It's a little bit different to a map for",
    "start": "1788300",
    "end": "1794100"
  },
  {
    "text": "Monodar, because essentially you're operating on the stream itself.",
    "start": "1794100",
    "end": "1799300"
  },
  {
    "text": "So let's say I did stream.catch tag, then",
    "start": "1799300",
    "end": "1805399"
  },
  {
    "text": "I would eliminate an error. And I want to capture that, and the error has been eliminated.",
    "start": "1805399",
    "end": "1810500"
  },
  {
    "text": "That's why we're not doing any merging, but we're just using the returned types",
    "start": "1811666",
    "end": "1818633"
  },
  {
    "text": "from the new stream. All right, we'll see how it... I think it",
    "start": "1818633",
    "end": "1824732"
  },
  {
    "text": "makes sense. I just want to see how it feels. We need to use this in source plugin now.",
    "start": "1824733",
    "end": "1832266"
  },
  {
    "text": "And then here we're",
    "start": "1840333",
    "end": "1845566"
  },
  {
    "text": "going to source.transform.",
    "start": "1845566",
    "end": "1848633"
  },
  {
    "text": "And then here we've got the previous source stream.",
    "start": "1869899",
    "end": "1873366"
  },
  {
    "text": "And then we're returning a new stream. Yeah, I get what you're doing with this.",
    "start": "1875600",
    "end": "1881399"
  },
  {
    "text": "And then plugins are still things that take in the source and return a new source.",
    "start": "1886500",
    "end": "1891699"
  },
  {
    "text": "So our config API hasn't changed. If we look at content layer.",
    "start": "1892100",
    "end": "1898066"
  },
  {
    "text": "Yeah, this will still work.",
    "start": "1900800",
    "end": "1902033"
  },
  {
    "text": "Okay. And then if we go to our type builder now.",
    "start": "1906699",
    "end": "1913199"
  },
  {
    "text": "Here we can revert to using the document.",
    "start": "1921733",
    "end": "1928233"
  },
  {
    "text": "It was... That's interesting.",
    "start": "1945399",
    "end": "1949199"
  },
  {
    "text": "I don't know if we need this.",
    "start": "1950766",
    "end": "1951666"
  },
  {
    "text": "Yeah, I guess you could copy the generic from document if you wanted to.",
    "start": "1961533",
    "end": "1966233"
  },
  {
    "text": "But yeah, we just go fields.",
    "start": "1968333",
    "end": "1971600"
  },
  {
    "text": "Source. What is that? Meta. Source.",
    "start": "1974166",
    "end": "1978065"
  },
  {
    "text": "I think there's constraints on both of them. No one is really going to use this.",
    "start": "1990833",
    "end": "1995800"
  },
  {
    "text": "So you need this one. And then here we want the meta schema.",
    "start": "1996033",
    "end": "2002000"
  },
  {
    "text": "That's the only reason why I thought you might want to have the generic constraints because you probably would at least get the",
    "start": "2006333",
    "end": "2011899"
  },
  {
    "text": "autocomplete for meta schema. Yeah, in fact this is... I forgot I sourced it.",
    "start": "2011899",
    "end": "2018199"
  },
  {
    "text": "So look at this. Oh yeah.",
    "start": "2021300",
    "end": "2024933"
  },
  {
    "text": "Alrighty then. I think if you wanted to you could just",
    "start": "2031300",
    "end": "2037500"
  },
  {
    "text": "copy the generic input to document.",
    "start": "2037500",
    "end": "2040399"
  },
  {
    "text": "I'll copy that. Since from various variations.",
    "start": "2044300",
    "end": "2048732"
  },
  {
    "text": "Document.",
    "start": "2093500",
    "end": "2094898"
  },
  {
    "text": "What do we got.",
    "start": "2117766",
    "end": "2119933"
  },
  {
    "text": "It looks fun.",
    "start": "2122933",
    "end": "2125000"
  },
  {
    "text": "What's the reason here. What we are using source.",
    "start": "2131366",
    "end": "2136566"
  },
  {
    "text": "The more type.",
    "start": "2136866",
    "end": "2139833"
  },
  {
    "text": "That's weird. Is that. Yes, but sometimes.",
    "start": "2145300",
    "end": "2151000"
  },
  {
    "text": "I guess if we copy",
    "start": "2154899",
    "end": "2160566"
  },
  {
    "text": "this for render document.",
    "start": "2160566",
    "end": "2161899"
  },
  {
    "text": "This is this still a built document schema or is this going to be like a document schema now.",
    "start": "2173199",
    "end": "2177500"
  },
  {
    "text": "This will return a built document schema but now that the meta is in the source itself.",
    "start": "2181300",
    "end": "2187566"
  },
  {
    "text": "We don't need to document to generate the types. I got what you're saying.",
    "start": "2188666",
    "end": "2193199"
  },
  {
    "text": "And then we can remove all of this.",
    "start": "2194766",
    "end": "2196666"
  },
  {
    "text": "On this document document. Yeah. No one loves that.",
    "start": "2200133",
    "end": "2205100"
  },
  {
    "text": "And then we can get rid of the import.",
    "start": "2208333",
    "end": "2210199"
  },
  {
    "text": "LSP restart. I'm using.",
    "start": "2218300",
    "end": "2223800"
  },
  {
    "text": "Yes, let's do you often get is, which is not part of the LSP.",
    "start": "2226300",
    "end": "2230800"
  },
  {
    "text": "Oh right. All right. Yeah. So this should be fine now.",
    "start": "2232500",
    "end": "2241899"
  },
  {
    "text": "Document build change. I think.",
    "start": "2244266",
    "end": "2248500"
  },
  {
    "text": "So we build.",
    "start": "2256300",
    "end": "2261266"
  },
  {
    "text": "See.",
    "start": "2271399",
    "end": "2271599"
  },
  {
    "text": "Also. We don't add.",
    "start": "2302300",
    "end": "2307433"
  },
  {
    "text": "To.",
    "start": "2308300",
    "end": "2308866"
  },
  {
    "text": "That's not even in the top.",
    "start": "2314100",
    "end": "2315333"
  },
  {
    "text": "And then we just.",
    "start": "2327300",
    "end": "2329066"
  },
  {
    "text": "We just add a source.",
    "start": "2346866",
    "end": "2349033"
  },
  {
    "text": "And then just read it and. Like butter.",
    "start": "2356966",
    "end": "2363866"
  },
  {
    "text": "Or it doesn't have made a schema",
    "start": "2404866",
    "end": "2407733"
  },
  {
    "text": "And then to.",
    "start": "2413100",
    "end": "2413699"
  },
  {
    "text": "Okay.",
    "start": "2418800",
    "end": "2428000"
  },
  {
    "text": "get the stream. Oh no.",
    "start": "2439033",
    "end": "2442066"
  },
  {
    "text": "Where would that be maybe on the config builder",
    "start": "2444633",
    "end": "2448366"
  },
  {
    "text": "I'm pretty sure is config builder. This does. It was the config.",
    "start": "2458666",
    "end": "2464199"
  },
  {
    "text": "And here. For documents.",
    "start": "2469433",
    "end": "2471966"
  },
  {
    "text": "So that should be.",
    "start": "2474966",
    "end": "2478466"
  },
  {
    "text": "My document that any type needs to be fixed.",
    "start": "2493100",
    "end": "2496266"
  },
  {
    "text": "Somehow. Yeah. The document.",
    "start": "2500399",
    "end": "2504899"
  },
  {
    "text": "Any. Because it takes the sources generic I'm",
    "start": "2507399",
    "end": "2512566"
  },
  {
    "text": "not sure it can be fixed. What you can do is.",
    "start": "2512566",
    "end": "2518566"
  },
  {
    "text": "Has type ID.",
    "start": "2527266",
    "end": "2530133"
  },
  {
    "text": "We could pass the generic source with any any any.",
    "start": "2532800",
    "end": "2540399"
  },
  {
    "text": "That work. Yeah.",
    "start": "2541899",
    "end": "2545633"
  },
  {
    "text": "Like instead of doing. Make the second generic parameter to document just source that any.",
    "start": "2547133",
    "end": "2553699"
  },
  {
    "text": "That's basically what we're doing. Yeah.",
    "start": "2556466",
    "end": "2561132"
  },
  {
    "text": "I think there's a source that any unless I made that up. Source dot source dot any.",
    "start": "2569300",
    "end": "2575300"
  },
  {
    "text": "Nice.",
    "start": "2578333",
    "end": "2578733"
  },
  {
    "text": "Building.",
    "start": "2615300",
    "end": "2615666"
  },
  {
    "text": "That's good. Nice. Great.",
    "start": "2628333",
    "end": "2632866"
  },
  {
    "text": "Edge.",
    "start": "2636266",
    "end": "2636466"
  },
  {
    "text": "We still probably have like 20 or 30 minutes. Okay.",
    "start": "2661466",
    "end": "2666000"
  },
  {
    "text": "So, go back to our to do list. Right modules.",
    "start": "2669500",
    "end": "2674466"
  },
  {
    "text": "So now generated output.",
    "start": "2677733",
    "end": "2679899"
  },
  {
    "text": "We've got this.",
    "start": "2683633",
    "end": "2686600"
  },
  {
    "text": "I guess if we just start with putting an array for each type.",
    "start": "2700399",
    "end": "2704833"
  },
  {
    "text": "Yeah, I think that makes sense. We just dump it straight into the index.",
    "start": "2708300",
    "end": "2714765"
  },
  {
    "text": "Or we just have generated. I've stopped.",
    "start": "2718566",
    "end": "2720699"
  },
  {
    "text": "Yeah. If we go to document builder.",
    "start": "2729466",
    "end": "2737600"
  },
  {
    "text": "So once I built document we're just sending it straight to a storage service, which.",
    "start": "2744899",
    "end": "2749566"
  },
  {
    "text": "It's good to me. In the storage service is responsible for",
    "start": "2750399",
    "end": "2757099"
  },
  {
    "text": "getting it into the right format.",
    "start": "2757100",
    "end": "2761100"
  },
  {
    "text": "It's just a document.",
    "start": "2766733",
    "end": "2767599"
  },
  {
    "text": "I'm catching that that's good.",
    "start": "2777566",
    "end": "2783599"
  },
  {
    "text": "Wouldn't want to generate a schema for every while.",
    "start": "2786766",
    "end": "2789766"
  },
  {
    "text": "Maybe we can. What do we want to be available in the",
    "start": "2807000",
    "end": "2812765"
  },
  {
    "text": "generated module file for post.",
    "start": "2812766",
    "end": "2814600"
  },
  {
    "text": "Probably. An array of just for now just an array of",
    "start": "2817800",
    "end": "2823033"
  },
  {
    "text": "the post JSONs right. Like with the current. All posts or something like that.",
    "start": "2823033",
    "end": "2829866"
  },
  {
    "text": "The way that we built it now that we can't might collect an array because",
    "start": "2834000",
    "end": "2840066"
  },
  {
    "text": "we're just writing individual documents right now.",
    "start": "2840066",
    "end": "2842633"
  },
  {
    "text": "So we need to perform a collection somewhere.",
    "start": "2845266",
    "end": "2849000"
  },
  {
    "text": "Probably in the document builder and then this would accept an array.",
    "start": "2851266",
    "end": "2856233"
  },
  {
    "text": "But when it comes to the caching part of it, it might be annoying because you kind of just want to invalidate",
    "start": "2858333",
    "end": "2863866"
  },
  {
    "text": "a single document at a time.",
    "start": "2863866",
    "end": "2866333"
  },
  {
    "text": "Maybe we could start from from what we want the output file structure to look",
    "start": "2877333",
    "end": "2883066"
  },
  {
    "text": "like for the module and then maybe like what the content of each file work from there.",
    "start": "2883066",
    "end": "2887899"
  },
  {
    "text": "Yeah. So from like a caching point of view you",
    "start": "2888899",
    "end": "2894599"
  },
  {
    "text": "just want to kind of like only regenerate the index if you add or remove documents",
    "start": "2894600",
    "end": "2902833"
  },
  {
    "text": "but not change them.",
    "start": "2902833",
    "end": "2905399"
  },
  {
    "text": "And then swap out the individual files when the content changes.",
    "start": "2914300",
    "end": "2919733"
  },
  {
    "text": "Well the problem right now is we're hashing based on the ID which is fun.",
    "start": "2923300",
    "end": "2931600"
  },
  {
    "text": "So if we have a new thing of like right.",
    "start": "2938333",
    "end": "2946833"
  },
  {
    "text": "All right. I.D. And then that's kind of like the that",
    "start": "2947266",
    "end": "2958699"
  },
  {
    "text": "will be used to generate the index.",
    "start": "2958699",
    "end": "2960300"
  },
  {
    "text": "And then the document builder we collect all the IDs per config.",
    "start": "2974933",
    "end": "2980166"
  },
  {
    "text": "So here we have a config.",
    "start": "2982199",
    "end": "2984599"
  },
  {
    "text": "And then we have an upset. And then every time we find. 90.",
    "start": "2988233",
    "end": "2995800"
  },
  {
    "text": "We add it to that set. So I guess if we do like a.",
    "start": "3003966",
    "end": "3007333"
  },
  {
    "text": "Run for each.",
    "start": "3010033",
    "end": "3011800"
  },
  {
    "text": "And then when that stream finishes we go. Fixed.",
    "start": "3037300",
    "end": "3040933"
  },
  {
    "text": "Right. I.D. And then.",
    "start": "3051399",
    "end": "3054199"
  },
  {
    "text": "I've had to use case for that before too.",
    "start": "3085966",
    "end": "3087800"
  },
  {
    "text": "What can we do. I guess we can just do. Good old.",
    "start": "3093066",
    "end": "3098033"
  },
  {
    "text": "Yeah. Kind of doesn't feel good but that's that's what we have right now.",
    "start": "3103300",
    "end": "3109066"
  },
  {
    "text": "So this is necessary so we can generate the index.",
    "start": "3143300",
    "end": "3147833"
  },
  {
    "text": "The index file which will reference. And the index is literally just going to export all of that the individual files.",
    "start": "3152833",
    "end": "3160199"
  },
  {
    "text": "It's going to import all the JSONs and export them or it's going to import all",
    "start": "3164500",
    "end": "3169833"
  },
  {
    "text": "like the post that's JS and all the other ones.",
    "start": "3169833",
    "end": "3172666"
  },
  {
    "text": "It will import all the JSON file.",
    "start": "3175300",
    "end": "3178166"
  },
  {
    "text": "Similar to how content layer works right now.",
    "start": "3180500",
    "end": "3185132"
  },
  {
    "text": "Okay. And that. Will work better with",
    "start": "3185566",
    "end": "3191699"
  },
  {
    "text": "cache and validation. So we don't have to.",
    "start": "3191699",
    "end": "3198066"
  },
  {
    "text": "Regenrate the entire JSON array.",
    "start": "3199699",
    "end": "3202033"
  },
  {
    "text": "We just have to update the exports. Which will be cheaper.",
    "start": "3205966",
    "end": "3211433"
  },
  {
    "text": "I'm willing to see how it goes. We're not really tracking us.",
    "start": "3222466",
    "end": "3226800"
  },
  {
    "text": "We don't really have a track but if the file was added or remove to or changed.",
    "start": "3232333",
    "end": "3236399"
  },
  {
    "text": "I guess storage.right would be able to tell us that.",
    "start": "3238100",
    "end": "3242433"
  },
  {
    "text": "But if the file is this on the disk already then we know it's a change.",
    "start": "3246866",
    "end": "3250933"
  },
  {
    "text": "We're not really handing removals. Traffic removals.",
    "start": "3254300",
    "end": "3258300"
  },
  {
    "text": "So like before you remove a markdown document from the disc we're not really.",
    "start": "3259333",
    "end": "3262933"
  },
  {
    "text": "Tracking that right now into leading.",
    "start": "3265633",
    "end": "3267899"
  },
  {
    "text": "The meeting the JSON file. We'll probably have to do that at some point.",
    "start": "3271800",
    "end": "3276333"
  },
  {
    "text": "This is all happening assuming that the config file hasn't changed, right?",
    "start": "3277333",
    "end": "3282699"
  },
  {
    "text": "This is like. Like you added a new piece of content under the content directory that you're",
    "start": "3286033",
    "end": "3291833"
  },
  {
    "text": "tracking or something but you haven't changed the config file right that's what we're assuming at this current moment.",
    "start": "3291833",
    "end": "3296932"
  },
  {
    "text": "Yes. So right now our sources don't really.",
    "start": "3303733",
    "end": "3307666"
  },
  {
    "text": "Track changes or they don't. Because in my mind there's two there's",
    "start": "3309300",
    "end": "3315299"
  },
  {
    "text": "two times we want to perform some changes to the cache. One is if you change a document but you",
    "start": "3315300",
    "end": "3322266"
  },
  {
    "text": "don't change the config right. If the config stays the same in the document pages that's one type of.",
    "start": "3322266",
    "end": "3327600"
  },
  {
    "text": "cache and validation we need to handle. The other type of cache and validation that we need to handle is if you change",
    "start": "3328566",
    "end": "3335166"
  },
  {
    "text": "the config the whole cache needs to be busted. We need to read.",
    "start": "3335166",
    "end": "3339766"
  },
  {
    "text": "Right.",
    "start": "3347000",
    "end": "3347166"
  },
  {
    "text": "Yes. Change the config you don't know you have no way of knowing like what you've in",
    "start": "3353333",
    "end": "3360500"
  },
  {
    "text": "granular we can change. Well the.",
    "start": "3360500",
    "end": "3365333"
  },
  {
    "text": "The index file but not change.",
    "start": "3368899",
    "end": "3370899"
  },
  {
    "text": "But all the individual documents might change.",
    "start": "3374066",
    "end": "3377300"
  },
  {
    "text": "But right now we're not actually doing we're not actually doing any.",
    "start": "3379300",
    "end": "3383199"
  },
  {
    "text": "Watching of the actual content itself.",
    "start": "3384500",
    "end": "3386500"
  },
  {
    "text": "Right. I guess that would be a",
    "start": "3390699",
    "end": "3397833"
  },
  {
    "text": "responsibility of the source.",
    "start": "3397833",
    "end": "3399300"
  },
  {
    "text": "So in here we would need to set up some watches and then admit output.",
    "start": "3406300",
    "end": "3410899"
  },
  {
    "text": "Every time. Part of our content changes.",
    "start": "3417300",
    "end": "3422300"
  },
  {
    "text": "And that would make the stream infinite.",
    "start": "3428333",
    "end": "3431000"
  },
  {
    "text": "Yeah. So that's like my what I was thinking was like the content stream as",
    "start": "3435300",
    "end": "3442100"
  },
  {
    "text": "long as the config stays the same the content streams from the sources are infinite.",
    "start": "3442100",
    "end": "3447533"
  },
  {
    "text": "Yeah. Because it does change what we need to do in the document builder.",
    "start": "3448500",
    "end": "3453000"
  },
  {
    "text": "Yeah. Which kind of means we need a way of",
    "start": "3454300",
    "end": "3459666"
  },
  {
    "text": "indicating that like a build is completed within the stream.",
    "start": "3459666",
    "end": "3463633"
  },
  {
    "text": "Or we just need a way resource provide all the known.",
    "start": "3475333",
    "end": "3480066"
  },
  {
    "text": "Document IDs. Which.",
    "start": "3482866",
    "end": "3487000"
  },
  {
    "text": "Might be better. Or we just track like the known list of",
    "start": "3490899",
    "end": "3497899"
  },
  {
    "text": "IDs so the first time it runs. You get everything. And",
    "start": "3497899",
    "end": "3503199"
  },
  {
    "text": "then there's changes come in. You can buy it or remove IDs from the set.",
    "start": "3503199",
    "end": "3508066"
  },
  {
    "text": "Not what actually that would actually solve the problem of. Tracking whether something is ever added",
    "start": "3509500",
    "end": "3515833"
  },
  {
    "text": "removed or updated we could use that. Method. Yeah. And we wouldn't have to",
    "start": "3515833",
    "end": "3521432"
  },
  {
    "text": "rely on a file watcher to do that. It does mean in source will need to",
    "start": "3521433",
    "end": "3527199"
  },
  {
    "text": "change output to be like a union.",
    "start": "3527199",
    "end": "3531699"
  },
  {
    "text": "Of what. Added removed or changed.",
    "start": "3533933",
    "end": "3538633"
  },
  {
    "text": "Thinking that we would track that that mapping of like stuff we've seen versus",
    "start": "3544300",
    "end": "3549933"
  },
  {
    "text": "stuff we haven't in the in the source or in the builder. Oh I guess we only need a state. So it",
    "start": "3549933",
    "end": "3556432"
  },
  {
    "text": "needs a state where.",
    "start": "3556433",
    "end": "3558899"
  },
  {
    "text": "We're emitting an updated document or anyone or we're removing an ID.",
    "start": "3561766",
    "end": "3568566"
  },
  {
    "text": "Document builder contract removal.",
    "start": "3571300",
    "end": "3574100"
  },
  {
    "text": "I mean I'm. I was thinking that based on what you were saying my I thought you meant that",
    "start": "3585666",
    "end": "3591300"
  },
  {
    "text": "the builder was going to track everything. Because if the.",
    "start": "3591300",
    "end": "3596600"
  },
  {
    "text": "The builder contract removals.",
    "start": "3599300",
    "end": "3603399"
  },
  {
    "text": "Unless the source tells that that's something's been removed. Well you had said that the source could",
    "start": "3606000",
    "end": "3612300"
  },
  {
    "text": "provide could emit all all known IDs which I mean is maybe less efficient than what we're doing now because we're just",
    "start": "3612300",
    "end": "3618399"
  },
  {
    "text": "streaming and IDs as they come in. Yeah.",
    "start": "3618399",
    "end": "3622033"
  },
  {
    "text": "Well the first time a source runs it's going to emit everything.",
    "start": "3623533",
    "end": "3627166"
  },
  {
    "text": "They suffer good shed. And then from that point you've already",
    "start": "3632199",
    "end": "3638133"
  },
  {
    "text": "you've built up enough of a picture to all that different.",
    "start": "3638133",
    "end": "3642100"
  },
  {
    "text": "On the set. So the only thing that's missing from",
    "start": "3644766",
    "end": "3650133"
  },
  {
    "text": "sources really is the ability to say like an ID has been removed.",
    "start": "3650133",
    "end": "3655733"
  },
  {
    "text": "On the source.",
    "start": "3660633",
    "end": "3661333"
  },
  {
    "text": "It would just be a union of like added with like all of the properties or removed or it's just the ID and then the",
    "start": "3669300",
    "end": "3676199"
  },
  {
    "text": "builder would respond to that. Yes I guess this would be.",
    "start": "3676199",
    "end": "3681033"
  },
  {
    "text": "Yeah that would make our plugins but annoying.",
    "start": "3683933",
    "end": "3685799"
  },
  {
    "text": "Well we could filter we could like.",
    "start": "3695300",
    "end": "3699633"
  },
  {
    "text": "Pre filter the source that's coming in. We change that transform",
    "start": "3700899",
    "end": "3708833"
  },
  {
    "text": "API to be like transform.",
    "start": "3708833",
    "end": "3710866"
  },
  {
    "text": "Doesn't feel good.",
    "start": "3717300",
    "end": "3718966"
  },
  {
    "text": "Or I guess we just have a separate stream for removals.",
    "start": "3723333",
    "end": "3728899"
  },
  {
    "text": "Maybe we have like an",
    "start": "3735433",
    "end": "3741733"
  },
  {
    "text": "additions and a deletion stream. And then we know exactly like what and then we just run them both in two",
    "start": "3741733",
    "end": "3747766"
  },
  {
    "text": "separate like fibers. I think this feels a bit later.",
    "start": "3747766",
    "end": "3754333"
  },
  {
    "text": "We can default removals to this an empty stream right. Yeah, stream.nil or empty.",
    "start": "3787466",
    "end": "3794000"
  },
  {
    "text": "And then move also default never",
    "start": "3811300",
    "end": "3814133"
  },
  {
    "text": "Default removals.",
    "start": "3833333",
    "end": "3835000"
  },
  {
    "text": "Not sure how much since there is a removal makes but it's fine.",
    "start": "3844433",
    "end": "3849600"
  },
  {
    "text": "I think you're probably the only time you'd have an error.",
    "start": "3852300",
    "end": "3855433"
  },
  {
    "text": "I guess whatever we'll just see.",
    "start": "3857766",
    "end": "3861833"
  },
  {
    "text": "Let's make it.",
    "start": "3873300",
    "end": "3874600"
  },
  {
    "text": "Because we can just die in the case of issues with deletions.",
    "start": "3883666",
    "end": "3894133"
  },
  {
    "text": "Today, you know, what sure is like I say I don't even want the",
    "start": "3913166",
    "end": "3918466"
  },
  {
    "text": "watches and development mode. Yeah, I mean in a development setting you",
    "start": "3918466",
    "end": "3924933"
  },
  {
    "text": "want it like if you run content layers CLI with the watch argument,",
    "start": "3924933",
    "end": "3930399"
  },
  {
    "text": "then you want file watchers. Otherwise you don't. So it actually should probably be a config.",
    "start": "3930766",
    "end": "3936066"
  },
  {
    "text": "I guess we'll develop mode if we use like a context reference.",
    "start": "3942100",
    "end": "3945933"
  },
  {
    "text": "And then the source plugins can just like look up on the flag.",
    "start": "3949733",
    "end": "3955000"
  },
  {
    "text": "What module would that belong to config. Maybe no, no conflicts for",
    "start": "3965633",
    "end": "3972199"
  },
  {
    "text": "the conflicts for config.",
    "start": "3972199",
    "end": "3974699"
  },
  {
    "text": "There should be like a settings module.",
    "start": "3979300",
    "end": "3984100"
  },
  {
    "text": "No, that's wrong. As a context.",
    "start": "4009433",
    "end": "4013699"
  },
  {
    "text": "This is actually watch mode.",
    "start": "4040699",
    "end": "4044833"
  },
  {
    "text": "Bacause this is CLIble probably",
    "start": "4049666",
    "end": "4052666"
  },
  {
    "text": "I think you still have dev mode in this ID.",
    "start": "4078199",
    "end": "4082699"
  },
  {
    "text": "This could probably be something we turn into a like settings reference at some point.",
    "start": "4090300",
    "end": "4094533"
  },
  {
    "text": "If there's more settings we pass in. Yeah, sure.",
    "start": "4095433",
    "end": "4099932"
  },
  {
    "text": "Okay.",
    "start": "4103766",
    "end": "4104000"
  },
  {
    "text": "What would you say in here?",
    "start": "4128300",
    "end": "4130166"
  },
  {
    "text": "I guess still doesn't quite solve the problem that in watch mode we need to",
    "start": "4148666",
    "end": "4154699"
  },
  {
    "text": "know when everything's finished.",
    "start": "4154699",
    "end": "4158266"
  },
  {
    "text": "For what purpose?",
    "start": "4173566",
    "end": "4174632"
  },
  {
    "text": "I guess if we just debounce.",
    "start": "4179000",
    "end": "4180533"
  },
  {
    "text": "Debounce additions and then what's its idle right there index.",
    "start": "4184266",
    "end": "4188600"
  },
  {
    "text": "We need to way of collecting all of the known IDs.",
    "start": "4190733",
    "end": "4193500"
  },
  {
    "text": "Yeah, I feel like if we debounce additions and probably also deletions.",
    "start": "4196333",
    "end": "4204266"
  },
  {
    "text": "Because deletions will affect the index as well. Yeah.",
    "start": "4205500",
    "end": "4208899"
  },
  {
    "text": "I feel like that should be fine for the moment. You can try to think of a better way to",
    "start": "4213066",
    "end": "4219600"
  },
  {
    "text": "track like the like a build finishing the thing is like in watch mode. Technically the build never finishes.",
    "start": "4219600",
    "end": "4226000"
  },
  {
    "text": "Like you meet number of documents and then after a period you want the index to be updated.",
    "start": "4227300",
    "end": "4234100"
  },
  {
    "text": "I guess the other thing is I mean we can",
    "start": "4234100",
    "end": "4239500"
  },
  {
    "text": "eliminate the index. And try to think of a better way to do",
    "start": "4239500",
    "end": "4244833"
  },
  {
    "text": "cache and validation but. Well we need to do a list somewhere.",
    "start": "4244833",
    "end": "4251966"
  },
  {
    "text": "We need to.",
    "start": "4256399",
    "end": "4261066"
  },
  {
    "text": "Spin off. And you think about for removals.",
    "start": "4267766",
    "end": "4274066"
  },
  {
    "text": "The other thing about having this as separate fibers is that debouncing is going to happen on a different schedule.",
    "start": "4275300",
    "end": "4281633"
  },
  {
    "text": "And I guess we debounce both additions and removals then we could end up where",
    "start": "4287433",
    "end": "4292733"
  },
  {
    "text": "like one stream is currently in the middle of a debounce. And the others writing index may just ping pong.",
    "start": "4292733",
    "end": "4299032"
  },
  {
    "text": "I mean I don't think that would be like that frequent or common but it's a possibility.",
    "start": "4300166",
    "end": "4305100"
  },
  {
    "text": "You know this timing doesn't really make sense anymore if it's going to be an infinite stream",
    "start": "4345533",
    "end": "4349698"
  },
  {
    "text": "because you don't know when the build is actually finished.",
    "start": "4353800",
    "end": "4356100"
  },
  {
    "text": "I guess if this actually does end",
    "start": "4371633",
    "end": "4373532"
  },
  {
    "text": "I mean if the stream does end you'll get the logs right?",
    "start": "4378100",
    "end": "4381633"
  },
  {
    "text": "Yeah we just need to add a finalizer to make sure the ids are written",
    "start": "4384233",
    "end": "4392333"
  },
  {
    "text": "at the end.",
    "start": "4394833",
    "end": "4396199"
  },
  {
    "text": "Okay well if we...",
    "start": "4403766",
    "end": "4406699"
  },
  {
    "text": "So this stream finishes then we want to clean up.",
    "start": "4457566",
    "end": "4465198"
  },
  {
    "text": "I guess we can just move this time stuff in.",
    "start": "4468800",
    "end": "4471899"
  },
  {
    "text": "I mean they might still be useful in the case where you're not in watch mode.",
    "start": "4482833",
    "end": "4488365"
  },
  {
    "text": "100 percent. If you're building maybe as part of CI or like",
    "start": "4491133",
    "end": "4496966"
  },
  {
    "text": "whatever you'll get these logs. So I think in here if we",
    "start": "4496966",
    "end": "4507633"
  },
  {
    "text": "maybe just set up like an ID mailbox.",
    "start": "4510033",
    "end": "4512800"
  },
  {
    "text": "We can just be void. We just need a signal.",
    "start": "4531466",
    "end": "4534033"
  },
  {
    "text": "And every time an ID is added or removed we",
    "start": "4541033",
    "end": "4546633"
  },
  {
    "text": "add a signal.",
    "start": "4550033",
    "end": "4551133"
  },
  {
    "text": "Add IDs.",
    "start": "4562366",
    "end": "4564033"
  },
  {
    "text": "And then we can walk the fiber or the removals.",
    "start": "4574066",
    "end": "4579699"
  },
  {
    "text": "The config.",
    "start": "4581266",
    "end": "4582033"
  },
  {
    "text": "Yeah, I guess the IDs will be unique for every source. So that's fine.",
    "start": "4624133",
    "end": "4629766"
  },
  {
    "text": "I can't see them bounding.",
    "start": "4632399",
    "end": "4633766"
  },
  {
    "text": "So this is every ID that has been removed now.",
    "start": "4640600",
    "end": "4644966"
  },
  {
    "text": "I guess rendering types only needs to happen once per the config.",
    "start": "4699633",
    "end": "4704366"
  },
  {
    "text": "Anyway, already in the config here. Yeah, because if the config changes, this",
    "start": "4714200",
    "end": "4721699"
  },
  {
    "text": "whole thing gets rerun. Yeah.",
    "start": "4721700",
    "end": "4724066"
  },
  {
    "text": "Okay. So the only thing left to do is add a finalizer to ensure.",
    "start": "4731233",
    "end": "4735666"
  },
  {
    "text": "If we're not in watch mode, this will run through. And we will have clicked all the IDs, but",
    "start": "4739766",
    "end": "4745933"
  },
  {
    "text": "we might be in a debalance state.",
    "start": "4745933",
    "end": "4747500"
  },
  {
    "text": "I guess if we get to the end of here, what we can do is",
    "start": "4755933",
    "end": "4761266"
  },
  {
    "text": "effect dots and then ID, the",
    "start": "4761266",
    "end": "4768333"
  },
  {
    "text": "cellbox.end, and then run the index",
    "start": "4769633",
    "end": "4788532"
  },
  {
    "text": "generation index, index generation and uninterruptible region.",
    "start": "4788533",
    "end": "4793399"
  },
  {
    "text": "I guess that would need to be on exit.",
    "start": "4796000",
    "end": "4798366"
  },
  {
    "text": "Now is index generation going to work in the situation where we are in watch mode?",
    "start": "4803766",
    "end": "4810299"
  },
  {
    "text": "So it will be in a debalanced stream.",
    "start": "4817799",
    "end": "4821299"
  },
  {
    "text": "That's what we really do. Yeah. So we quickly add that now.",
    "start": "4824533",
    "end": "4830633"
  },
  {
    "text": "Mailbox.to stream.",
    "start": "4833766",
    "end": "4836766"
  },
  {
    "text": "And then here we just go storage.write",
    "start": "4843633",
    "end": "4851166"
  },
  {
    "text": "IDs, IDs, and then we effect dot fork.",
    "start": "4851166",
    "end": "4858299"
  },
  {
    "text": "And then we basically do the same exact thing in the finalizer. Here we go.",
    "start": "4861733",
    "end": "4866633"
  },
  {
    "text": "Stream dot debalanced.",
    "start": "4867266",
    "end": "4871533"
  },
  {
    "text": "How long shall we wait? I don't know. One second. One second.",
    "start": "4873433",
    "end": "4878265"
  },
  {
    "text": "One second. Five hundred million.",
    "start": "4878700",
    "end": "4881833"
  },
  {
    "text": "We just want to make sure at this point we've had enough time for 500. Yeah, 500 is really fun.",
    "start": "4886666",
    "end": "4895466"
  },
  {
    "text": "Okay. So now it's just a case of getting the",
    "start": "4901000",
    "end": "4906600"
  },
  {
    "text": "interruption set up properly.",
    "start": "4906600",
    "end": "4908700"
  },
  {
    "text": "So if a new config gets built, we kind of just want to abort everything, including this.",
    "start": "4914666",
    "end": "4921266"
  },
  {
    "text": "So maybe if we grab this exit and then.",
    "start": "4926299",
    "end": "4930133"
  },
  {
    "text": "Done a mailbox with an exit. Does what?",
    "start": "4935233",
    "end": "4938633"
  },
  {
    "text": "It finishes the mailbox.",
    "start": "4941899",
    "end": "4948133"
  },
  {
    "text": "If the exit was successful, then this ends it cleanly. If it's a failure, then it sends the",
    "start": "4949200",
    "end": "4957433"
  },
  {
    "text": "failure to the mailbox.",
    "start": "4957433",
    "end": "4959866"
  },
  {
    "text": "Which will terminate this.",
    "start": "4963866",
    "end": "4965766"
  },
  {
    "text": "But if you.",
    "start": "4969600",
    "end": "4970533"
  },
  {
    "text": "Yeah, that'll work. All we could do is.",
    "start": "4975500",
    "end": "4982200"
  },
  {
    "text": "I don't remember what shutdown does.",
    "start": "4986799",
    "end": "4991399"
  },
  {
    "text": "Does it do a clean exit shutdown?",
    "start": "4994600",
    "end": "4997366"
  },
  {
    "text": "Not done. Clears all the messages and it finishes with an exit void.",
    "start": "5020066",
    "end": "5025700"
  },
  {
    "text": "I think this will work then. So we go back to our mailbox and just set the error to any.",
    "start": "5036133",
    "end": "5042500"
  },
  {
    "text": "So this gets interrupted. This exit will now be interrupted exit.",
    "start": "5046200",
    "end": "5050500"
  },
  {
    "text": "Which will then forward onto the mailbox and then. Terminate this.",
    "start": "5051866",
    "end": "5056666"
  },
  {
    "text": "That's fiber. So we can now put this in a.",
    "start": "5057533",
    "end": "5063666"
  },
  {
    "text": "Uninterruptible region.",
    "start": "5065433",
    "end": "5067066"
  },
  {
    "text": "Which will ensure that. If this was a clean exit,",
    "start": "5075933",
    "end": "5082133"
  },
  {
    "text": "it will run till completion.",
    "start": "5082500",
    "end": "5083766"
  },
  {
    "text": "And if it was a bad exit, then it will just kill the stream.",
    "start": "5103700",
    "end": "5108399"
  },
  {
    "text": "Makes sense. So the stream will be like stopped essentially, but the",
    "start": "5110100",
    "end": "5115500"
  },
  {
    "text": "fiber will exit cleanly. Yes.",
    "start": "5115500",
    "end": "5119200"
  },
  {
    "text": "I wonder.",
    "start": "5130966",
    "end": "5131333"
  },
  {
    "text": "I think I'm almost out of time, Tim. OK.",
    "start": "5136233",
    "end": "5139700"
  },
  {
    "text": "I'm going to run it and then I have to head out. Unfortunately.",
    "start": "5182433",
    "end": "5185100"
  },
  {
    "text": "Well, we haven't set up file watchers. We will save it for next time then where",
    "start": "5189766",
    "end": "5196399"
  },
  {
    "text": "we can actually like. Let's put it in the to do file to set up like the file watchers for writing IDs and everything.",
    "start": "5196399",
    "end": "5203399"
  },
  {
    "text": "Well, I hope everybody enjoyed our session.",
    "start": "5246333",
    "end": "5249299"
  },
  {
    "text": "Yeah, I guess until next time. We will actually be doing",
    "start": "5253366",
    "end": "5260166"
  },
  {
    "text": "some like file watching stuff. For now, cheers, everybody. I hope you had a good time and we'll see you next week.",
    "start": "5260166",
    "end": "5266833"
  }
]