[
  {
    "text": "Everybody welcome back. Sorry we skipped last week, just a lot of conference prep work.",
    "start": "4833",
    "end": "9400"
  },
  {
    "text": "So we're back this week for another installment of our content",
    "start": "10233",
    "end": "15333"
  },
  {
    "text": "layer series. And today we're going to be focusing, I think, on",
    "start": "15333",
    "end": "21133"
  },
  {
    "text": "introducing parallelism into our builds via node.js worker threads.",
    "start": "21133",
    "end": "26199"
  },
  {
    "text": "So yeah, we can do a quick recap of like where we left off last.",
    "start": "30066",
    "end": "34866"
  },
  {
    "text": "Last time we updated the to do file.",
    "start": "35433",
    "end": "39032"
  },
  {
    "text": "Nice, nice, nice. So yeah, and we did some work on the",
    "start": "40966",
    "end": "48833"
  },
  {
    "text": "plugin API and build errors. That's right. We refactored the way we",
    "start": "48833",
    "end": "56600"
  },
  {
    "text": "make plugins. Yes, and then made our errors from  here",
    "start": "56600",
    "end": "60732"
  },
  {
    "text": "So did we are we going to use, are we going to use the snapshot builds of your because",
    "start": "70000",
    "end": "75233"
  },
  {
    "text": "so for context for folks, Tim has been working on like a massive refactor of the RPC package",
    "start": "75833",
    "end": "82033"
  },
  {
    "text": "for effect, which is really cool. You can maybe talk a little bit about that, Tim. But",
    "start": "82033",
    "end": "87965"
  },
  {
    "text": "we're trying to decide whether or not we use the new like snapshot builds from our PR or from this PR. Or we just use the",
    "start": "88066",
    "end": "95500"
  },
  {
    "text": "old like, and the reason it's pertinent is because workers are currently implemented in the",
    "start": "95500",
    "end": "101700"
  },
  {
    "text": "platform package. But in the new RPC implementation, we can actually use RPC for workers. So",
    "start": "101700",
    "end": "108299"
  },
  {
    "text": "maybe Tim can give a little more context. Yeah, so platform just kind of like",
    "start": "108299",
    "end": "114933"
  },
  {
    "text": "abstracts workers for the different platforms and browsers where workers, the workers in a",
    "start": "114933",
    "end": "124633"
  },
  {
    "text": "bun, they have their own worker thing. But then the layer on top of that that provides",
    "start": "124633",
    "end": "131033"
  },
  {
    "text": "like a nice API for working with workers. At the moment, there's like a serialized worker",
    "start": "131033",
    "end": "137633"
  },
  {
    "text": "abstraction in platform. But the new RPC libraries",
    "start": "137633",
    "end": "142633"
  },
  {
    "text": "will replace that. Maybe this was a good",
    "start": "142699",
    "end": "148133"
  },
  {
    "text": "way of actually making sure workers and RPC are",
    "start": "148133",
    "end": "154633"
  },
  {
    "text": "nice. Yeah, a little like dog-fooding.",
    "start": "154633",
    "end": "158866"
  },
  {
    "text": "But in parallelizing things, you first need to work out",
    "start": "160733",
    "end": "166199"
  },
  {
    "text": "where you need to work out where you branch everything off",
    "start": "167366",
    "end": "173566"
  },
  {
    "text": "into the workers. So like, you'll have a host that sends stuff to",
    "start": "173566",
    "end": "179133"
  },
  {
    "text": "the workers, you need to work out what that stuff is. And then you'll need to like, collect the results",
    "start": "179133",
    "end": "184900"
  },
  {
    "text": "back to where a merge symbol back in. So we identify that",
    "start": "184900",
    "end": "190033"
  },
  {
    "text": "point first. Because that will determine what the API surface will",
    "start": "190033",
    "end": "196566"
  },
  {
    "text": "apply. Yeah, I feel like a good candidate is definitely in the builder,",
    "start": "196566",
    "end": "201699"
  },
  {
    "text": "probably somewhere like after we've because where do we",
    "start": "202133",
    "end": "207900"
  },
  {
    "text": "do the most work, probably the two places we do the most like IO intensive work would be like,",
    "start": "207933",
    "end": "213933"
  },
  {
    "text": "computed fields, like reading the CPU intensive workers or the",
    "start": "214800",
    "end": "219900"
  },
  {
    "text": "target. So that'll be anything that involves the plugins was wasn't like",
    "start": "219900",
    "end": "228133"
  },
  {
    "text": "the shaky stuff that we do is quite CPU intensive. Shaky two slash. true. So I think like",
    "start": "228133",
    "end": "242633"
  },
  {
    "text": "the index building will happen in the host bridge, the host process, which is fighting the",
    "start": "242633",
    "end": "251300"
  },
  {
    "text": "index files. It's just simple IO bad work. But the",
    "start": "251300",
    "end": "256398"
  },
  {
    "text": "expensive stuff is taking taking like the",
    "start": "256399",
    "end": "263133"
  },
  {
    "text": "content and then processing it into the resulting fields.",
    "start": "263133",
    "end": "267733"
  },
  {
    "text": "Which is so we've got our events. We've",
    "start": "271033",
    "end": "282065"
  },
  {
    "text": "got our added events. So I guess it'll be here where it takes",
    "start": "282066",
    "end": "290633"
  },
  {
    "text": "the raw fields. Actually, we're applying",
    "start": "290666",
    "end": "301932"
  },
  {
    "text": "the plugins before this point, are we in the actual configuration? Yeah, we're applying it as",
    "start": "301933",
    "end": "312633"
  },
  {
    "text": "it's a stream, like a stream manipulation, like re yeah, we work the stream",
    "start": "312633",
    "end": "321000"
  },
  {
    "text": "basically. So yes, we're",
    "start": "321000",
    "end": "326033"
  },
  {
    "text": "applying the plugins beforehand. So I do think resolving computed fields",
    "start": "326033",
    "end": "334633"
  },
  {
    "text": "will also be a good candidate for offloading to workers. So we can do all of that in the worker thread. It'd be a good idea. Because you",
    "start": "334633",
    "end": "341432"
  },
  {
    "text": "could imagine computed fields are effectful. So they could be somewhat intensive,",
    "start": "341433",
    "end": "346500"
  },
  {
    "text": "depending on what's going on. Okay, the way you look at our config content",
    "start": "346500",
    "end": "359300"
  },
  {
    "text": "layer. So we want to distribute this over",
    "start": "359300",
    "end": "367198"
  },
  {
    "text": "workers. But I don't think the plugin API you want to consider this up there. I guess",
    "start": "367199",
    "end": "389899"
  },
  {
    "text": "we just need some way of",
    "start": "389899",
    "end": "397000"
  },
  {
    "text": "partitioning these. Maybe the source like",
    "start": "397133",
    "end": "411399"
  },
  {
    "text": "only processes the files that matches some kind of ID. We can use like some kind of sharding",
    "start": "411399",
    "end": "422433"
  },
  {
    "text": "system to split the work. Would having just like a pool of",
    "start": "422433",
    "end": "431433"
  },
  {
    "text": "workers that we offload to not work well enough to the other? Well, the problem is here we have like",
    "start": "431433",
    "end": "438133"
  },
  {
    "text": "a fully built source. But they would have",
    "start": "438199",
    "end": "446166"
  },
  {
    "text": "to inject somehow our workable in the middle here.",
    "start": "446166",
    "end": "453565"
  },
  {
    "text": "Split the work. So it's happening at this",
    "start": "456666",
    "end": "468732"
  },
  {
    "text": "point before it hits the plugins. But the thing is a",
    "start": "468733",
    "end": "482633"
  },
  {
    "text": "document builder only gets past the light fully built source stream.",
    "start": "482666",
    "end": "486966"
  },
  {
    "text": "Yeah, I mean, we could pass in some kind of partition ID to the source. And then",
    "start": "515533",
    "end": "524333"
  },
  {
    "text": "they only process the things that match the current partition",
    "start": "524333",
    "end": "531799"
  },
  {
    "text": "ID. Are you saying like a",
    "start": "531799",
    "end": "537166"
  },
  {
    "text": "an ID that matches like a particular document ID? Or yes, we have",
    "start": "537166",
    "end": "544066"
  },
  {
    "text": "an output ID here. And we could hash that",
    "start": "544066",
    "end": "549566"
  },
  {
    "text": "into like. Do I like",
    "start": "549566",
    "end": "558466"
  },
  {
    "text": "a number of workers?",
    "start": "558466",
    "end": "559600"
  },
  {
    "text": "Do something like that to work out what I want a worker should run on. And if the",
    "start": "567399",
    "end": "577033"
  },
  {
    "text": "current worker matches this, then we",
    "start": "577033",
    "end": "582866"
  },
  {
    "text": "process it otherwise we skip it. I get",
    "start": "582899",
    "end": "590899"
  },
  {
    "text": "it. Or the other way of doing it is we",
    "start": "590899",
    "end": "605566"
  },
  {
    "text": "somehow like swap this off stream for the workers",
    "start": "605566",
    "end": "609933"
  },
  {
    "text": "and the host does the file system",
    "start": "610600",
    "end": "615699"
  },
  {
    "text": "resolution, but the workers then swap the stream out for life.",
    "start": "615700",
    "end": "622100"
  },
  {
    "text": "The stream of good light output that the host seems to",
    "start": "626299",
    "end": "634033"
  },
  {
    "text": "have, which might be a better approach.",
    "start": "634033",
    "end": "639399"
  },
  {
    "text": "And how would that look from like an API perspective? Do you think like, I think I like that suggestion better.",
    "start": "642866",
    "end": "648633"
  },
  {
    "text": "But how would you envision that like here with the and so in the source dot make",
    "start": "649333",
    "end": "657399"
  },
  {
    "text": "constructor, we would take the context and if there is like a",
    "start": "657399",
    "end": "663266"
  },
  {
    "text": "replacement stream available, then it would switch to it.",
    "start": "663299",
    "end": "667700"
  },
  {
    "text": "Let's maybe pursue that and see how we can. Let's pursue. Let's guess. So we",
    "start": "671866",
    "end": "680399"
  },
  {
    "text": "have this make thing which gets the events like the initial source",
    "start": "680399",
    "end": "689200"
  },
  {
    "text": "so make is currently synchronous,",
    "start": "689200",
    "end": "701333"
  },
  {
    "text": "right? So would we have like a separate constructor? How would this work? We just want to",
    "start": "701333",
    "end": "709433"
  },
  {
    "text": "update this constructor to like swap out the stream.",
    "start": "709433",
    "end": "714566"
  },
  {
    "text": "If lack of replacement one is provided. Okay.",
    "start": "716233",
    "end": "721433"
  },
  {
    "text": "So to do that, we only tag",
    "start": "723966",
    "end": "727266"
  },
  {
    "text": "The work of its stream and I guess this would be a stream of event",
    "start": "767399",
    "end": "777266"
  },
  {
    "text": "Does any of it really? Better.",
    "start": "780533",
    "end": "783600"
  },
  {
    "text": "Yeah, we just have no errors. What else?",
    "start": "801899",
    "end": "807298"
  },
  {
    "text": "I gotta give you the LSG config that I'm working with. Not perfect, but I feel like I've really",
    "start": "823766",
    "end": "831500"
  },
  {
    "text": "zoned it in over the last three or four months.",
    "start": "831500",
    "end": "836066"
  },
  {
    "text": "Are you using ESLint through the LSP or are you using it from the ESLint D?",
    "start": "842733",
    "end": "852566"
  },
  {
    "text": "I'm using ESLint D just because it seems",
    "start": "852633",
    "end": "858500"
  },
  {
    "text": "to be folded a little bit. The LSP is pretty peppy, but you gotta",
    "start": "858500",
    "end": "865665"
  },
  {
    "text": "try it for yourself. Let me know what you think. I tried ESLint D and I ran into a lot of",
    "start": "865666",
    "end": "871166"
  },
  {
    "text": "the same problems you were having here. Yes, we can do it.",
    "start": "871166",
    "end": "877266"
  },
  {
    "text": "This project is still using ESLint H.",
    "start": "878566",
    "end": "883399"
  },
  {
    "text": "It just needs to be updated. I told you I was going to go in the chat",
    "start": "883766",
    "end": "891100"
  },
  {
    "text": "and just say \"Biome for life\". Biome for life. The thing that annoys me about biome, and",
    "start": "891100",
    "end": "899133"
  },
  {
    "text": "maybe I just don't know how to configure it, you can't do context-aware spacing and",
    "start": "899133",
    "end": "906233"
  },
  {
    "text": "new lines that I'm aware of. I've never tried biomes.",
    "start": "906233",
    "end": "911899"
  },
  {
    "text": "I just had light-spending times to a lint, so I just don't do it.",
    "start": "914733",
    "end": "919066"
  },
  {
    "text": "If you can show me, Dylan, how it took",
    "start": "922299",
    "end": "927500"
  },
  {
    "text": "our lint time from 7.5 minutes to 3 seconds. Lin time is not where we spend most of",
    "start": "927500",
    "end": "932566"
  },
  {
    "text": "our time. It's setting these tools up. If you could show me how to set a biome",
    "start": "932566",
    "end": "937866"
  },
  {
    "text": "to do contextually aware spacing and new lines, then I would consider swapping to it.",
    "start": "937866",
    "end": "944433"
  },
  {
    "text": "I did my work, guys. Did I not save when I quit?",
    "start": "945899",
    "end": "949665"
  },
  {
    "text": "Rookie mistake.",
    "start": "952066",
    "end": "954633"
  },
  {
    "text": "Work stream.",
    "start": "961566",
    "end": "962333"
  },
  {
    "text": "Work event stream, it extends context.tag",
    "start": "969700",
    "end": "974266"
  },
  {
    "text": "We've got some re-tag APIs.",
    "start": "978100",
    "end": "988665"
  },
  {
    "text": "You can consolidate them.",
    "start": "989200",
    "end": "990700"
  },
  {
    "text": "We decided this would be a stream of events. I'm going to do a quick check. What actually would it be?",
    "start": "994966",
    "end": "1008066"
  },
  {
    "text": "Here we have our event stream. We just need to swap it out. Work stream.",
    "start": "1014500",
    "end": "1030032"
  },
  {
    "text": "Make it our service option.",
    "start": "1032700",
    "end": "1034298"
  },
  {
    "text": "How many variants to be with Dillon in the chat right now?",
    "start": "1042833",
    "end": "1047166"
  },
  {
    "text": "About just formatting",
    "start": "1049433",
    "end": "1054500"
  },
  {
    "text": "and linting in general?",
    "start": "1054500",
    "end": "1056233"
  },
  {
    "text": "So it's done. Use events, otherwise use the work stream.",
    "start": "1064933",
    "end": "1071233"
  },
  {
    "text": "Here we can just do a stream diagram.",
    "start": "1082000",
    "end": "1086833"
  },
  {
    "text": "If we're on a worker and we provide the replacement stream, we can use that.",
    "start": "1090066",
    "end": "1098733"
  },
  {
    "text": "otherwise, use the original stream.",
    "start": "1098733",
    "end": "1107133"
  },
  {
    "text": "The Docker folder.",
    "start": "1114566",
    "end": "1115900"
  },
  {
    "text": "We need to work out how we're going to get the config into our workers.",
    "start": "1125299",
    "end": "1128799"
  },
  {
    "text": "I've never used workers in a library",
    "start": "1132299",
    "end": "1137500"
  },
  {
    "text": "before, so this is going to be fun.",
    "start": "1137500",
    "end": "1139233"
  },
  {
    "text": "Which config are we trying to get in there?",
    "start": "1143299",
    "end": "1146833"
  },
  {
    "text": "We'll need to get the Delt configuration in there.",
    "start": "1149533",
    "end": "1155732"
  },
  {
    "text": "I guess we'll just pass  inside it in some kind of initialisation message",
    "start": "1156733",
    "end": "1166065"
  },
  {
    "text": " where the Delt module is.",
    "start": "1166066",
    "end": "1168466"
  },
  {
    "text": "Because we're looking at a config builder. What does it do?",
    "start": "1172099",
    "end": "1178466"
  },
  {
    "text": "I guess we just pass the path for a build.",
    "start": "1203400",
    "end": "1207900"
  },
  {
    "text": "Then it just does this to pipe all in the config in the worker. so I can then read all the plugins.",
    "start": "1211466",
    "end": "1226700"
  },
  {
    "text": "Anyway, first we need to get the workers actually working.",
    "start": "1231566",
    "end": "1237533"
  },
  {
    "text": "The worker is actually working.",
    "start": "1239799",
    "end": "1241266"
  },
  {
    "text": "In todo there, we'll need effect platform. What have we got on here?",
    "start": "1250366",
    "end": "1255633"
  },
  {
    "text": "How do we not have an effect platform in the dependencies already?",
    "start": "1256933",
    "end": "1260099"
  },
  {
    "text": "We're not using it everywhere.",
    "start": "1263233",
    "end": "1264333"
  },
  {
    "text": "Doesn't seem right. Is it in the root package, JSON, or maybe?",
    "start": "1273099",
    "end": "1277533"
  },
  {
    "text": "Yeah, it must be. I think we need to add them here too.",
    "start": "1278333",
    "end": "1288099"
  },
  {
    "text": "I forgot to use the new RPC.",
    "start": "1296766",
    "end": "1301333"
  },
  {
    "text": "Yes, the only thing we need.",
    "start": "1303633",
    "end": "1313500"
  },
  {
    "text": "Is this the new RPC or is this the old one? We'll just need to",
    "start": "1318733",
    "end": "1324232"
  },
  {
    "text": "write it to get the new one. Gotcha.",
    "start": "1324233",
    "end": "1331966"
  },
  {
    "text": "That's good. Pretty sure we left an error in there on purpose. Yeah, I think so.",
    "start": "1505966",
    "end": "1511200"
  },
  {
    "text": "So we need to get the worker started.",
    "start": "1512266",
    "end": "1518200"
  },
  {
    "text": "Just call it content worker.",
    "start": "1525299",
    "end": "1526766"
  },
  {
    "text": "Maybe that should be the new name of the package.",
    "start": "1531533",
    "end": "1533066"
  },
  {
    "text": "We should be missing some dependencies here.",
    "start": "1662366",
    "end": "1667000"
  },
  {
    "text": "So we need.",
    "start": "1670299",
    "end": "1671866"
  },
  {
    "text": "So we just need to boot it from the CLI.",
    "start": "1693500",
    "end": "1695333"
  },
  {
    "text": "I guess in the docker builder.",
    "start": "1704400",
    "end": "1709533"
  },
  {
    "text": "We need to do this together working with TSX.",
    "start": "1752299",
    "end": "1756366"
  },
  {
    "text": "Okay. But then when we do the production build,",
    "start": "1762299",
    "end": "1768299"
  },
  {
    "text": "I guess we need to turn it off.",
    "start": "1768299",
    "end": "1770065"
  },
  {
    "text": "So I guess here we're",
    "start": "1901033",
    "end": "1908533"
  },
  {
    "text": "just passing CPU count.",
    "start": "1908533",
    "end": "1911333"
  },
  {
    "text": "Or we could do orders handling in size.",
    "start": "1919566",
    "end": "1923566"
  },
  {
    "text": "Now what does that look like? We look at the default layer.",
    "start": "2031400",
    "end": "2035065"
  },
  {
    "text": "And then maybe if we just pass a new message.",
    "start": "2056800",
    "end": "2061465"
  },
  {
    "text": "So now our run effect should have a dependency on the workable.",
    "start": "2076066",
    "end": "2080433"
  },
  {
    "text": "I'm guessing that's currently provided in the CLI",
    "start": "2090466",
    "end": "2094566"
  },
  {
    "text": "Probably makes the most sense because that's probably also where we would disable it.",
    "start": "2096066",
    "end": "2101366"
  },
  {
    "text": "If need be. Like if the user wants to",
    "start": "2101800",
    "end": "2106833"
  },
  {
    "text": "If we're testing anything, that's fine. We can make it optional later.",
    "start": "2155800",
    "end": "2159800"
  },
  {
    "text": "So we're looking for it to function exactly the same, but also...",
    "start": "2190099",
    "end": "2194266"
  },
  {
    "text": "I wonder if we moved the resolutions into the core package if that would fix this.",
    "start": "2259733",
    "end": "2269433"
  },
  {
    "text": "Let's play it forward.",
    "start": "2289800",
    "end": "2291199"
  },
  {
    "text": "That's not the VR build one.",
    "start": "2403400",
    "end": "2407599"
  },
  {
    "text": "I'm just trying to keep the modules and see what happens. I like it.",
    "start": "2410500",
    "end": "2416599"
  },
  {
    "text": "My favorite piece of advice that I would give to people when I was working in DevOps primarily.",
    "start": "2423366",
    "end": "2429466"
  },
  {
    "text": "My first troubleshooting step. Did you restart it?",
    "start": "2429933",
    "end": "2433765"
  },
  {
    "text": "Yes. It definitely should.",
    "start": "2435133",
    "end": "2437932"
  },
  {
    "text": "Nine out of ten times, that was the fix.",
    "start": "2440466",
    "end": "2442099"
  },
  {
    "text": "Anybody who wants to become a DevOps professional, did you restart it?",
    "start": "2445900",
    "end": "2450900"
  },
  {
    "text": "It should be your primary first question. It's generally all fields of IT.",
    "start": "2451433",
    "end": "2457833"
  },
  {
    "text": "You restart it. Nice. So our work is booting,",
    "start": "2462066",
    "end": "2467733"
  },
  {
    "text": "it's getting a message. Great.",
    "start": "2467733",
    "end": "2469966"
  },
  {
    "text": "I guess this is where",
    "start": "2473199",
    "end": "2478333"
  },
  {
    "text": "we are building up now.",
    "start": "2478333",
    "end": "2482599"
  },
  {
    "text": "We'll start doing the RPC.",
    "start": "2483433",
    "end": "2484566"
  },
  {
    "text": "So we need to",
    "start": "2500099",
    "end": "2501699"
  },
  {
    "text": "What do we actually need to send across the wire?",
    "start": "2513800",
    "end": "2515366"
  },
  {
    "text": "Like to the worker. Just the path. We need to send the current",
    "start": "2521366",
    "end": "2528400"
  },
  {
    "text": "config paths that we're using.",
    "start": "2528400",
    "end": "2530099"
  },
  {
    "text": "I think we can send the configured path along with the document IDs,",
    "start": "2548466",
    "end": "2553366"
  },
  {
    "text": "and then we can partition the",
    "start": "2553699",
    "end": "2559133"
  },
  {
    "text": "Because we can minimize the config.",
    "start": "2559500",
    "end": "2563099"
  },
  {
    "text": "Okay.",
    "start": "2565366",
    "end": "2565699"
  },
  {
    "text": "Just a message that says to notify this worker that we want",
    "start": "2590066",
    "end": "2594900"
  },
  {
    "text": "to process these things. The payload would have",
    "start": "2597533",
    "end": "2604500"
  },
  {
    "text": "Document IDs are strings.",
    "start": "2641366",
    "end": "2643900"
  },
  {
    "text": "So we open up our document builder.",
    "start": "2646833",
    "end": "2648466"
  },
  {
    "text": "Yep. So IDs are sculpts too.",
    "start": "2653633",
    "end": "2656933"
  },
  {
    "text": "And then we'll also need the current configs.",
    "start": "2669000",
    "end": "2676866"
  },
  {
    "text": "But can we send the config over the wire? Because doesn't the config have like...",
    "start": "2689366",
    "end": "2694566"
  },
  {
    "text": "Yeah, we can only send the path. Yeah, because the config itself is going",
    "start": "2696366",
    "end": "2703366"
  },
  {
    "text": "to have to be loaded on every worker, right? Yeah.",
    "start": "2703366",
    "end": "2707066"
  },
  {
    "text": "Config path. So one side of the worker",
    "start": "2708933",
    "end": "2716566"
  },
  {
    "text": "will be sending process messages, but on another side we will need to be",
    "start": "2716566",
    "end": "2726066"
  },
  {
    "text": "like receiving a stream of results.",
    "start": "2726066",
    "end": "2729400"
  },
  {
    "text": "Or a given config path.",
    "start": "2734633",
    "end": "2737933"
  },
  {
    "text": "Tim, explain a little bit about the new RPC and like what you're building up here.",
    "start": "2752699",
    "end": "2757033"
  },
  {
    "text": "So with RPC you need to build up a schema of all your methods first.",
    "start": "2759300",
    "end": "2764733"
  },
  {
    "text": "And each schema is represented by an RPC object.",
    "start": "2767966",
    "end": "2776900"
  },
  {
    "text": "And in here you can do your payload success in the errors.",
    "start": "2778599",
    "end": "2784199"
  },
  {
    "text": "And you can also specify whether it's a stream or not. The process will just be like a simple",
    "start": "2786166",
    "end": "2794566"
  },
  {
    "text": "notification message to tell the worker that, \"Hey, we want to process these things.\"",
    "start": "2794566",
    "end": "2800366"
  },
  {
    "text": "And then the results from that will get sent back down.",
    "start": "2803366",
    "end": "2809366"
  },
  {
    "text": "This will be a stream. And we just need to set the success to",
    "start": "2811666",
    "end": "2820833"
  },
  {
    "text": "whatever the result will look like.",
    "start": "2820833",
    "end": "2827199"
  },
  {
    "text": "Yeah, once you've got your RPC schema,",
    "start": "2827199",
    "end": "2833866"
  },
  {
    "text": "then you can start implementing the server and also deriving a code from it.",
    "start": "2834199",
    "end": "2841699"
  },
  {
    "text": "So we'll see what the shape of our result will be.",
    "start": "2846966",
    "end": "2851833"
  },
  {
    "text": "So we resolve the fields here.",
    "start": "2862699",
    "end": "2864533"
  },
  {
    "text": "I guess in storage we are using writing the encoded fields.",
    "start": "2885366",
    "end": "2890300"
  },
  {
    "text": "We're doing an encode here.",
    "start": "2900400",
    "end": "2901833"
  },
  {
    "text": "We will need an ID to correlate it. We'll need the encoded fields, which",
    "start": "2924366",
    "end": "2932300"
  },
  {
    "text": "we'll know we can just type as a node.",
    "start": "2932300",
    "end": "2934166"
  },
  {
    "text": "Because we will need to decode them on the host.",
    "start": "2938233",
    "end": "2941466"
  },
  {
    "text": "Right.",
    "start": "2944099",
    "end": "2944300"
  },
  {
    "text": "Yeah, I guess it can grab some bit of here too.",
    "start": "2957566",
    "end": "2960066"
  },
  {
    "text": "If they were to start there, it would work out well with this one.",
    "start": "2966833",
    "end": "2971000"
  },
  {
    "text": "So we'll be sending these and then we'll get back a stream.",
    "start": "2982033",
    "end": "2986199"
  },
  {
    "text": "And everything's kind of like partitioned over the config part. So if we update the config, we'll create",
    "start": "2989199",
    "end": "2997933"
  },
  {
    "text": "a new result stream for that. Makes sense. Yep.",
    "start": "2997933",
    "end": "3002966"
  },
  {
    "text": "so that's the schema.",
    "start": "3005433",
    "end": "3007266"
  },
  {
    "text": "So on the server side, which is, in this case, the worker,",
    "start": "3018000",
    "end": "3025033"
  },
  {
    "text": "we need to implement the",
    "start": "3027599",
    "end": "3034366"
  },
  {
    "text": "interface that we just created.",
    "start": "3034366",
    "end": "3037233"
  },
  {
    "text": "So in here, we'll need our server.",
    "start": "3042433",
    "end": "3045099"
  },
  {
    "text": "And then we can do our handles here.",
    "start": "3059166",
    "end": "3062066"
  },
  {
    "text": "And those two layer expects us to return the object for each",
    "start": "3087566",
    "end": "3092300"
  },
  {
    "text": "for each method.",
    "start": "3098733",
    "end": "3099866"
  },
  {
    "text": "And the other one was results.",
    "start": "3115366",
    "end": "3118233"
  },
  {
    "text": "So here we'll return a stream.",
    "start": "3146366",
    "end": "3148265"
  },
  {
    "text": "And it's to layer It's just an effect, or is it a method that has handlers or something?",
    "start": "3152099",
    "end": "3159099"
  },
  {
    "text": "to layer returns a layer from the",
    "start": "3162466",
    "end": "3168199"
  },
  {
    "text": "constructor.",
    "start": "3168199",
    "end": "3169133"
  },
  {
    "text": "So we can see here our payloads.",
    "start": "3174166",
    "end": "3178699"
  },
  {
    "text": "And then we just need to implement the handlers here.",
    "start": "3184233",
    "end": "3188266"
  },
  {
    "text": "And then we can go to RPC server.",
    "start": "3191233",
    "end": "3193333"
  },
  {
    "text": ".layer",
    "start": "3196366",
    "end": "3196900"
  },
  {
    "text": "Once we do that, we have a layer",
    "start": "3207199",
    "end": "3209966"
  },
  {
    "text": "that needs our handlers.",
    "start": "3214466",
    "end": "3216266"
  },
  {
    "text": "We can provide those.",
    "start": "3220000",
    "end": "3221500"
  },
  {
    "text": "We now have a layer that just needs the protocol. In an RPC, the protocol is responsible",
    "start": "3235233",
    "end": "3242932"
  },
  {
    "text": "for the actual transforms. That could be HTTP, TCP sockets.",
    "start": "3242933",
    "end": "3248900"
  },
  {
    "text": "In this case, we want workers.",
    "start": "3249166",
    "end": "3250366"
  },
  {
    "text": "So we've got a layer protocol. We want...",
    "start": "3256933",
    "end": "3259866"
  },
  {
    "text": "worker runner.",
    "start": "3262233",
    "end": "3262632"
  },
  {
    "text": "So that just needs the platform",
    "start": "3269533",
    "end": "3275800"
  },
  {
    "text": "implementation for workers. So in this case, we're going to use node.",
    "start": "3275800",
    "end": "3281199"
  },
  {
    "text": "And now we have our layer of runner,",
    "start": "3286933",
    "end": "3291366"
  },
  {
    "text": "which we can then launch. Cool. I like it.",
    "start": "3292433",
    "end": "3297333"
  },
  {
    "text": "We need to switch to using the RPC client.",
    "start": "3349533",
    "end": "3353299"
  },
  {
    "text": "There we go. Import. RPC client from",
    "start": "3357300",
    "end": "3363733"
  },
  {
    "text": "And here we are RPC client.",
    "start": "3368400",
    "end": "3370366"
  },
  {
    "text": "We need to pass in our schema.",
    "start": "3373599",
    "end": "3377833"
  },
  {
    "text": "Content worker schema.",
    "start": "3381466",
    "end": "3385133"
  },
  {
    "text": "Let us come up a little and then just see what the dependencies are.",
    "start": "3402633",
    "end": "3408500"
  },
  {
    "text": "Content worker pull dot default.",
    "start": "3410000",
    "end": "3413433"
  },
  {
    "text": "Yeah, so we now have a layer that's looking for our RPC client protocol.",
    "start": "3416466",
    "end": "3421733"
  },
  {
    "text": "Let's rename this on that side.",
    "start": "3426366",
    "end": "3429066"
  },
  {
    "text": "So if we look in RPC client, we have some layers with protocols.",
    "start": "3436366",
    "end": "3442133"
  },
  {
    "text": "We want the worker one. And here you can see the",
    "start": "3442333",
    "end": "3447765"
  },
  {
    "text": "whole size like we did before.",
    "start": "3447766",
    "end": "3450000"
  },
  {
    "text": "Yeah, we're missing the top two. And the. on the server side, the reason",
    "start": "3456533",
    "end": "3463000"
  },
  {
    "text": "you launched it with the node worker runner launch, instead of like node runtime or layered out launch,",
    "start": "3463000",
    "end": "3469266"
  },
  {
    "text": "I'm assuming there's some other stuff going on behind the scenes there. Yeah, so like by default, layer dot",
    "start": "3469333",
    "end": "3476066"
  },
  {
    "text": "launch never closes.",
    "start": "3476066",
    "end": "3480233"
  },
  {
    "text": "But with workers, you want to shut down the worker when the client is finished or shut down to.",
    "start": "3484366",
    "end": "3490733"
  },
  {
    "text": "So the node worker launch API, like",
    "start": "3493366",
    "end": "3499800"
  },
  {
    "text": "listens to a special latch. So if the client sends a termination",
    "start": "3499800",
    "end": "3505400"
  },
  {
    "text": "signal, it will also shut down the worker properly.",
    "start": "3505400",
    "end": "3509000"
  },
  {
    "text": "Cool. Very cool.",
    "start": "3510666",
    "end": "3515233"
  },
  {
    "text": "So now we just need to provide to this the actual worker.",
    "start": "3517433",
    "end": "3529699"
  },
  {
    "text": "Well, we need to tell it how to launch the worker.",
    "start": "3532533",
    "end": "3534833"
  },
  {
    "text": "You might just want to also lower up in the imports, fix the import of the node worker.",
    "start": "3547066",
    "end": "3551432"
  },
  {
    "text": "Yeah.",
    "start": "3554633",
    "end": "3554833"
  },
  {
    "text": "The namespace done for you. So what is the alternate layer that you",
    "start": "3571133",
    "end": "3577900"
  },
  {
    "text": "put in there, the layer platform? What does that provide multiple things? I'm assuming.",
    "start": "3577900",
    "end": "3582099"
  },
  {
    "text": "Provide the platform implementation for supporting or setting up the",
    "start": "3584766",
    "end": "3590900"
  },
  {
    "text": "communication for a worker. And then a spawner is basically this",
    "start": "3590900",
    "end": "3596432"
  },
  {
    "text": "function here is the spawner function, which tells it how to",
    "start": "3596433",
    "end": "3604533"
  },
  {
    "text": "actually create the specific worker. Very cool.",
    "start": "3604533",
    "end": "3609733"
  },
  {
    "text": "So we go back up here. We now have our methods.",
    "start": "3613566",
    "end": "3618900"
  },
  {
    "text": "Cool.",
    "start": "3621366",
    "end": "3621633"
  },
  {
    "text": "That's the idea.",
    "start": "3654333",
    "end": "3655933"
  },
  {
    "text": "If we make it work.",
    "start": "3682333",
    "end": "3683900"
  },
  {
    "text": "I guess to do this, we're going to need to collect all the IDs or.",
    "start": "3690599",
    "end": "3695566"
  },
  {
    "text": "We just need to part of them with split them up evenly essentially.",
    "start": "3700733",
    "end": "3704265"
  },
  {
    "text": "So that if we. State a constant somewhere.",
    "start": "3708800",
    "end": "3715932"
  },
  {
    "text": "Probably something we'd eventually pass in through the content layer config.",
    "start": "3734599",
    "end": "3737566"
  },
  {
    "text": "Not the file. The work is. Like the CLI basically.",
    "start": "3742000",
    "end": "3747900"
  },
  {
    "text": "We don't have to do that right now. So we just need to decide",
    "start": "3749333",
    "end": "3758400"
  },
  {
    "text": "how to split the worker.",
    "start": "3758400",
    "end": "3759799"
  },
  {
    "text": "So here. We're grabbing all our events.",
    "start": "3763833",
    "end": "3767433"
  },
  {
    "text": "We couldn't just see this in the added events.",
    "start": "3770599",
    "end": "3772866"
  },
  {
    "text": "I guess we could do like some kind of group aggregation.",
    "start": "3777366",
    "end": "3781066"
  },
  {
    "text": "Or we could send the IDs one at a time.",
    "start": "3783166",
    "end": "3785500"
  },
  {
    "text": "And just have some kind of increment encounter that.",
    "start": "3797366",
    "end": "3800500"
  },
  {
    "text": "Decides which worker to send it to.",
    "start": "3802599",
    "end": "3805433"
  },
  {
    "text": "We can optimize a little. So in here we just go to document ID.",
    "start": "3808199",
    "end": "3814666"
  },
  {
    "text": "And then. We have.",
    "start": "3823599",
    "end": "3827400"
  },
  {
    "text": "Account.",
    "start": "3830066",
    "end": "3830265"
  },
  {
    "text": "So we need to. Do the result stream later.",
    "start": "3839033",
    "end": "3845300"
  },
  {
    "text": "So here.",
    "start": "3846566",
    "end": "3847199"
  },
  {
    "text": "But actually the pool will get into that. We just need to send messages.",
    "start": "3869333",
    "end": "3874033"
  },
  {
    "text": "The pool will evenly distribute.",
    "start": "3880699",
    "end": "3882699"
  },
  {
    "text": "Actually we need to kind of like.",
    "start": "3910833",
    "end": "3912566"
  },
  {
    "text": "Rehydrate the source. First.",
    "start": "3916066",
    "end": "3920366"
  },
  {
    "text": "Because we're replacing the source stream.",
    "start": "3922233",
    "end": "3924233"
  },
  {
    "text": "We also need to resolve.",
    "start": "3928199",
    "end": "3936233"
  },
  {
    "text": "We make sure like the content API is continue to work. The plugins can consume the content.",
    "start": "3936866",
    "end": "3944000"
  },
  {
    "text": "The doesn't mean the sources need to be. We're about to.",
    "start": "3947366",
    "end": "3954066"
  },
  {
    "text": "Rehydrate code output. From an ID.",
    "start": "3955500",
    "end": "3959933"
  },
  {
    "text": "To see the middle as well.",
    "start": "3964333",
    "end": "3967099"
  },
  {
    "text": "We can make. We also take.",
    "start": "3980333",
    "end": "3984800"
  },
  {
    "text": "ID. Yeah.",
    "start": "3989599",
    "end": "3995133"
  },
  {
    "text": "We needed to find a shape for like the. The encoded message that",
    "start": "4024366",
    "end": "4030132"
  },
  {
    "text": "will come from the host.",
    "start": "4030133",
    "end": "4031266"
  },
  {
    "text": "And then this work stream will be a stream of.",
    "start": "4091233",
    "end": "4095133"
  },
  {
    "text": "And here we'll need to go stream. And then we'll need",
    "start": "4104800",
    "end": "4114333"
  },
  {
    "text": "to use that schema to. Decourage the meta.",
    "start": "4114333",
    "end": "4118766"
  },
  {
    "text": "To.",
    "start": "4128333",
    "end": "4128799"
  },
  {
    "text": "We have our stream of output again.",
    "start": "4179266",
    "end": "4189833"
  },
  {
    "text": "Nice. And I guess we can discuss it.",
    "start": "4193633",
    "end": "4198600"
  },
  {
    "text": "I guess we can allow the same errors in here.",
    "start": "4200366",
    "end": "4207100"
  },
  {
    "text": "And then we'll have some type errors for you to fix.",
    "start": "4246699",
    "end": "4249000"
  },
  {
    "text": "Are we using math effect anywhere? I don't actually think we're using it anymore. Anywhere.",
    "start": "4284533",
    "end": "4289800"
  },
  {
    "text": "And that's fun to keep it. We need a different construct.",
    "start": "4292133",
    "end": "4297800"
  },
  {
    "text": "We need one that is for making the raw.",
    "start": "4298333",
    "end": "4301800"
  },
  {
    "text": "The raw prototype.",
    "start": "4304466",
    "end": "4306833"
  },
  {
    "text": "The one that does the hydrate.",
    "start": "4311399",
    "end": "4314633"
  },
  {
    "text": "They need the hydrate key. The options.",
    "start": "4349800",
    "end": "4354800"
  },
  {
    "text": "Yeah.",
    "start": "4358333",
    "end": "4358833"
  },
  {
    "text": "Sources aren't effect. All right. So like but the. The the method.",
    "start": "4436333",
    "end": "4442566"
  },
  {
    "text": "We have a way of tuning the raw work",
    "start": "4531966",
    "end": "4537000"
  },
  {
    "text": "messages back into the output objects. So we're just going to update our worker",
    "start": "4537000",
    "end": "4554800"
  },
  {
    "text": "schema to match the",
    "start": "4554800",
    "end": "4561432"
  },
  {
    "text": "shape of the arm sheet. So when we process something we need to see the meta",
    "start": "4561433",
    "end": "4566532"
  },
  {
    "text": "The body here as well",
    "start": "4567933",
    "end": "4571133"
  },
  {
    "text": "And then we can remove the name space for all these guys.",
    "start": "4580366",
    "end": "4586266"
  },
  {
    "text": "We have to more of just to replace all of this with worker.",
    "start": "4618866",
    "end": "4622433"
  },
  {
    "text": "Process document.",
    "start": "4624000",
    "end": "4624699"
  },
  {
    "text": "This is the host sending all the data to the worker to then tell",
    "start": "4644566",
    "end": "4650433"
  },
  {
    "text": "it to process the document. Then on the worker side will actually do the work.",
    "start": "4650433",
    "end": "4655099"
  },
  {
    "text": "You need to talk to them.",
    "start": "4657666",
    "end": "4658800"
  },
  {
    "text": "And then at some point we need to listen to the results.",
    "start": "4669366",
    "end": "4674899"
  },
  {
    "text": "And then we need to give it error messages again probably.",
    "start": "4677333",
    "end": "4680399"
  },
  {
    "text": "So I guess we'll need some way of signaling to the worker that we're sort of as well.",
    "start": "4705366",
    "end": "4709666"
  },
  {
    "text": "So for the case of like a single run. You're probably like a shutdown message",
    "start": "4714500",
    "end": "4720399"
  },
  {
    "text": "or does the does the RPC worker implementation have some sort of like shutdown.",
    "start": "4720399",
    "end": "4724833"
  },
  {
    "text": "We don't want to shut it down but we just want to tell that the input the finish so",
    "start": "4726333",
    "end": "4733466"
  },
  {
    "text": "the result stream has an input.",
    "start": "4733466",
    "end": "4736000"
  },
  {
    "text": "Got it.",
    "start": "4739266",
    "end": "4742166"
  },
  {
    "text": "So for a case where we are not in watch mode.",
    "start": "4777533",
    "end": "4782800"
  },
  {
    "text": "We do just the same thing.",
    "start": "4785233",
    "end": "4787166"
  },
  {
    "text": "We grab our results.",
    "start": "4823333",
    "end": "4826399"
  },
  {
    "text": "I guess if we just add the decoding while we're at it.",
    "start": "4851933",
    "end": "4862666"
  },
  {
    "text": "I didn't kind of feel it's only turn it back into.",
    "start": "4865833",
    "end": "4869099"
  },
  {
    "text": "Actually do we need it because if the work does all the writing as well.",
    "start": "4873899",
    "end": "4879500"
  },
  {
    "text": "Are you planning on having the worker do all the writing as well. The documents origin everything. Maybe as well.",
    "start": "4883166",
    "end": "4888566"
  },
  {
    "text": "True.",
    "start": "4890333",
    "end": "4890566"
  },
  {
    "text": "That means.",
    "start": "4906833",
    "end": "4908366"
  },
  {
    "text": "Process document represents the entire",
    "start": "4916966",
    "end": "4922666"
  },
  {
    "text": "lifetime of that thing being processed. We can.",
    "start": "4922666",
    "end": "4930233"
  },
  {
    "text": "Do you like the bookkeeping for the process counting here.",
    "start": "4933866",
    "end": "4937433"
  },
  {
    "text": "What are we doing here. Do you feel so that will",
    "start": "4946933",
    "end": "4953533"
  },
  {
    "text": "happen in the work and now. That will happen in the host.",
    "start": "4953533",
    "end": "4958000"
  },
  {
    "text": "So process document or replace all that.",
    "start": "4966333",
    "end": "4969933"
  },
  {
    "text": "We still want to put the document count.",
    "start": "4972666",
    "end": "4975066"
  },
  {
    "text": "Maybe if we just edge the content layer here on the RPC schema.",
    "start": "4986333",
    "end": "4992433"
  },
  {
    "text": "Content worker schema. Forget about this guy.",
    "start": "4997800",
    "end": "5003533"
  },
  {
    "text": "So if any of the processing fails in the air will still come back to us.",
    "start": "5028333",
    "end": "5034399"
  },
  {
    "text": "Okay. We just need to look at",
    "start": "5040333",
    "end": "5045666"
  },
  {
    "text": "moving this to the work.",
    "start": "5045666",
    "end": "5046833"
  },
  {
    "text": "Cool.",
    "start": "5051333",
    "end": "5051433"
  },
  {
    "text": "Here's our worker. You don't need results anymore.",
    "start": "5059866",
    "end": "5064833"
  },
  {
    "text": "So this was not a watch mode. It would.",
    "start": "5097833",
    "end": "5100198"
  },
  {
    "text": "It would just naturally shut down the worker as part of the. The lifetime of the host.",
    "start": "5108333",
    "end": "5114698"
  },
  {
    "text": "So resolve computed fields and only to move to the worker.",
    "start": "5120333",
    "end": "5123633"
  },
  {
    "text": "Refactor this later.",
    "start": "5137366",
    "end": "5138566"
  },
  {
    "text": "It was said to bring them along too.",
    "start": "5142500",
    "end": "5148533"
  },
  {
    "text": "So we've got a conflict path here we need to turn it into a config instance.",
    "start": "5183366",
    "end": "5189500"
  },
  {
    "text": "So I guess we can just copy what config builders do.",
    "start": "5190800",
    "end": "5193100"
  },
  {
    "text": "We export this.",
    "start": "5196800",
    "end": "5201000"
  },
  {
    "text": "Maybe we do but we'll read it.",
    "start": "5204066",
    "end": "5206300"
  },
  {
    "text": "Give me one second. I'm going to step away. I'll be back in a few minutes. Okay.",
    "start": "5210466",
    "end": "5215333"
  },
  {
    "text": "One is this return option.",
    "start": "5235333",
    "end": "5237500"
  },
  {
    "text": "So it says not quite what we need.",
    "start": "5243566",
    "end": "5246100"
  },
  {
    "text": "Sorry about that Tim.",
    "start": "5470933",
    "end": "5471866"
  },
  {
    "text": "How is it going? I'm trying to work out",
    "start": "5477000",
    "end": "5485899"
  },
  {
    "text": "the config building API.",
    "start": "5485899",
    "end": "5489733"
  },
  {
    "text": "So there's like two things happening. There's like this entry",
    "start": "5492266",
    "end": "5497500"
  },
  {
    "text": "point and then the actual file and the compiled version of it.",
    "start": "5497500",
    "end": "5504399"
  },
  {
    "text": "Right. And we pass an entry point to create require.",
    "start": "5504600",
    "end": "5509399"
  },
  {
    "text": "But maybe we can just default it to that.",
    "start": "5512833",
    "end": "5517699"
  },
  {
    "text": "Then this will replace the bottom half of this original building function.",
    "start": "5533399",
    "end": "5541266"
  },
  {
    "text": "Is there a reason we need to default it?",
    "start": "5552399",
    "end": "5559365"
  },
  {
    "text": "We don't have the entry point on the other in the other place or?",
    "start": "5559866",
    "end": "5564100"
  },
  {
    "text": "Yeah, we're not tracking the entry point in the config itself right now.",
    "start": "5585933",
    "end": "5601566"
  },
  {
    "text": "And now that isn't the config option. Config object we returned in.",
    "start": "5602333",
    "end": "5608833"
  },
  {
    "text": "At this point we've kind of already verified that in the host. So we could probably.",
    "start": "5611333",
    "end": "5615533"
  },
  {
    "text": "Or diet there. Yeah, or diet in the worker.",
    "start": "5617233",
    "end": "5620966"
  },
  {
    "text": "Okay.",
    "start": "5628766",
    "end": "5629500"
  },
  {
    "text": "So the first thing we need to do is get our config.",
    "start": "5637366",
    "end": "5646399"
  },
  {
    "text": "I guess we only kind of want to read it once. Okay.",
    "start": "5647933",
    "end": "5652800"
  },
  {
    "text": "So I think for that we could use we can cash in.",
    "start": "5654500",
    "end": "5660500"
  },
  {
    "text": "So our config thing that we just made.",
    "start": "5694366",
    "end": "5699800"
  },
  {
    "text": "This will be quite simple. The config builder from path.",
    "start": "5720333",
    "end": "5727399"
  },
  {
    "text": "So we know how to get from a path or get",
    "start": "5735766",
    "end": "5741699"
  },
  {
    "text": "respect config objects. Like these concepts disappear after.",
    "start": "5741699",
    "end": "5750033"
  },
  {
    "text": "They mean for them to say naming things you could just de structure it. That",
    "start": "5776433",
    "end": "5781466"
  },
  {
    "text": "would be that's when I don't know what to name something I just destructure it.",
    "start": "5781466",
    "end": "5785666"
  },
  {
    "text": "Okay, so we have a conflict.",
    "start": "5789366",
    "end": "5790699"
  },
  {
    "text": "And then we have a document name like report we should rename it.",
    "start": "5808333",
    "end": "5814433"
  },
  {
    "text": "That's one. So from this config we need to get.",
    "start": "5820466",
    "end": "5824833"
  },
  {
    "text": "We need to get.",
    "start": "5826433",
    "end": "5827100"
  },
  {
    "text": "We need to get the matching document by name.",
    "start": "5834666",
    "end": "5837533"
  },
  {
    "text": "So then we need to do what",
    "start": "5847366",
    "end": "5868399"
  },
  {
    "text": "we're doing for in the document builder",
    "start": "5868399",
    "end": "5870800"
  },
  {
    "text": "So we need to decode fields.",
    "start": "5878766",
    "end": "5881600"
  },
  {
    "text": "Well first we need to. Put up for ourselves plugins.",
    "start": "5884233",
    "end": "5892466"
  },
  {
    "text": "We are single element stream.",
    "start": "5896333",
    "end": "5897899"
  },
  {
    "text": "It does seem quite wasteful.",
    "start": "5930366",
    "end": "5933333"
  },
  {
    "text": "It's like a running instance of the source pipeline.",
    "start": "5943733",
    "end": "5947500"
  },
  {
    "text": "Maybe we just get it working first at the single element stream and then we can cache it after the fact.",
    "start": "5955366",
    "end": "5961899"
  },
  {
    "text": "Basically just make sure everything's wired up correctly because then we can optimize.",
    "start": "5966766",
    "end": "5970233"
  },
  {
    "text": "Is the worker event stream",
    "start": "6082066",
    "end": "6088000"
  },
  {
    "text": "a layer or is it a list. I was gonna say.",
    "start": "6088000",
    "end": "6091566"
  },
  {
    "text": "So this is probably.",
    "start": "6095966",
    "end": "6097333"
  },
  {
    "text": "And would this be another situation where we could just flatten and die.",
    "start": "6101333",
    "end": "6106833"
  },
  {
    "text": "Yeah I guess we can just build it up. For now I can always if we feel like we",
    "start": "6124533",
    "end": "6131733"
  },
  {
    "text": "need it you can always. Put like some specific error in there.",
    "start": "6131733",
    "end": "6138066"
  },
  {
    "text": "We do need to live the. The source errors.",
    "start": "6138733",
    "end": "6144633"
  },
  {
    "text": "We need to send the errors back at some point.",
    "start": "6145399",
    "end": "6149765"
  },
  {
    "text": "So the error messages are nice and the first. Right.",
    "start": "6152800",
    "end": "6157033"
  },
  {
    "text": "So that event should be added.",
    "start": "6173333",
    "end": "6176333"
  },
  {
    "text": "Probably was also be able to send the build those like build everything he's back.",
    "start": "6262366",
    "end": "6267100"
  },
  {
    "text": "So I think we did something specific in those. For the error message.",
    "start": "6268066",
    "end": "6272566"
  },
  {
    "text": "Remember we embedded information somewhere.",
    "start": "6277366",
    "end": "6280300"
  },
  {
    "text": "We need to make it a schema.",
    "start": "6291933",
    "end": "6296933"
  },
  {
    "text": "And we can build error is. In the module.",
    "start": "6298366",
    "end": "6304666"
  },
  {
    "text": "It's going to be using data. So we need to switch the schema.",
    "start": "6309600",
    "end": "6312666"
  },
  {
    "text": "So I guess. We just pass the",
    "start": "6328933",
    "end": "6333966"
  },
  {
    "text": "result of that into here. Let's keep it dot stream.",
    "start": "6333966",
    "end": "6338000"
  },
  {
    "text": "I see.",
    "start": "6348899",
    "end": "6349166"
  },
  {
    "text": "We can just spread in the options.",
    "start": "6464966",
    "end": "6469365"
  },
  {
    "text": "The old double dot.",
    "start": "6471566",
    "end": "6472532"
  },
  {
    "text": "Where is the bad argument. The very naughty argument.",
    "start": "6569366",
    "end": "6574899"
  },
  {
    "text": "So we just need to refill the pass here.",
    "start": "6594366",
    "end": "6602000"
  },
  {
    "text": "And then I feel like for the platform",
    "start": "6608833",
    "end": "6614500"
  },
  {
    "text": "error, we should just. Die with it.",
    "start": "6614500",
    "end": "6624266"
  },
  {
    "text": "Actually wait is. You're a catch and something on builder.",
    "start": "6629166",
    "end": "6636699"
  },
  {
    "text": "But I don't think it takes. Never mind.",
    "start": "6639366",
    "end": "6642266"
  },
  {
    "text": "Never mind.",
    "start": "6645000",
    "end": "6645600"
  },
  {
    "text": "For a second I thought the only one we had was in the crown module was about to give Sebastian a lot of credit.",
    "start": "6666633",
    "end": "6671733"
  },
  {
    "text": "I thought that we had. We were dying with platform errors.",
    "start": "6747366",
    "end": "6754833"
  },
  {
    "text": "Inside document storage. Maybe we just forgot to do it for right.",
    "start": "6756333",
    "end": "6760733"
  },
  {
    "text": "But I was pretty sure for other methods we were dying with. When we had a platform.",
    "start": "6761566",
    "end": "6766698"
  },
  {
    "text": "No still something in there.",
    "start": "6790399",
    "end": "6791733"
  },
  {
    "text": "And the bottom.",
    "start": "6804333",
    "end": "6804933"
  },
  {
    "text": "There's a worker. Should be working.",
    "start": "6825800",
    "end": "6831366"
  },
  {
    "text": "I was waiting for you to make the joke and I'm really happy you delivered.",
    "start": "6835199",
    "end": "6840032"
  },
  {
    "text": "Pretty substantial amount of work just to port over 20 lines of code but.",
    "start": "6860800",
    "end": "6865766"
  },
  {
    "text": "Hopefully especially as the number of documents grow hopefully. You know the significant performance benefit.",
    "start": "6866933",
    "end": "6873100"
  },
  {
    "text": "Yeah I guess you have a serialized serialization boundary to cross and you",
    "start": "6875766",
    "end": "6884199"
  },
  {
    "text": "also have to think about how to distribute the work. But I think the pool.",
    "start": "6884199",
    "end": "6889733"
  },
  {
    "text": "Should take care of that. Could be a bit like the cities as well",
    "start": "6892100",
    "end": "6897366"
  },
  {
    "text": "work is one of the options. We can set the concurrency.",
    "start": "6897366",
    "end": "6905000"
  },
  {
    "text": "So we could say that we want to documents",
    "start": "6905733",
    "end": "6912899"
  },
  {
    "text": "but work out anyone to.",
    "start": "6912899",
    "end": "6914198"
  },
  {
    "text": "I am I also think that at some point in the future we'll want to give like I said the user the ability to turn this off.",
    "start": "6921333",
    "end": "6928333"
  },
  {
    "text": "Yeah.",
    "start": "6929800",
    "end": "6930032"
  },
  {
    "text": "While we're here. We also may just want to draw the people. Other people use down on the to do list.",
    "start": "6939466",
    "end": "6945133"
  },
  {
    "text": "Yeah. Which being the optimization you wanted to make for the single element stream we",
    "start": "6946633",
    "end": "6952899"
  },
  {
    "text": "could look at that at some point in the future.",
    "start": "6952899",
    "end": "6954433"
  },
  {
    "text": "It's like reworking the single element stream in the workers.",
    "start": "6958333",
    "end": "6961933"
  },
  {
    "text": "Like worker optimizations or something like this but.",
    "start": "6967333",
    "end": "6969500"
  },
  {
    "text": "And then the other thing we can just drop in here for the future. Is the configurable like worker thing so",
    "start": "6973566",
    "end": "6981399"
  },
  {
    "text": "being able to turn workers on and off. Because like if a user is only processing 10 documents.",
    "start": "6981399",
    "end": "6986800"
  },
  {
    "text": "It's possible I guess depending on the size of the document that workers might slow things down more than just doing",
    "start": "6987533",
    "end": "6993033"
  },
  {
    "text": "everything on the main process. Main thread.",
    "start": "6993033",
    "end": "6995833"
  },
  {
    "text": "Introducing your proper content layer config. duration.",
    "start": "7000333",
    "end": "7005433"
  },
  {
    "text": "Service. We already have the config tag",
    "start": "7007800",
    "end": "7013233"
  },
  {
    "text": "We have a watch mode tag.",
    "start": "7015333",
    "end": "7019966"
  },
  {
    "text": "Right. But that could be rolled into. Like a proper configuration.",
    "start": "7021500",
    "end": "7027666"
  },
  {
    "text": "Right. So here.",
    "start": "7029566",
    "end": "7030933"
  },
  {
    "text": "But I think the. The platform stuff. So the node context.",
    "start": "7051333",
    "end": "7056933"
  },
  {
    "text": "The config path.",
    "start": "7115733",
    "end": "7120333"
  },
  {
    "text": "It's not being searched in.",
    "start": "7121899",
    "end": "7123800"
  },
  {
    "text": "So the config thing is actually just.",
    "start": "7139366",
    "end": "7144666"
  },
  {
    "text": "The user provided config. So maybe we just need to provide.",
    "start": "7146833",
    "end": "7153100"
  },
  {
    "text": "Another type of here called the comms.",
    "start": "7156333",
    "end": "7159066"
  },
  {
    "text": "Probably not a bad idea.",
    "start": "7164733",
    "end": "7169733"
  },
  {
    "text": "And. We can add the entry. In for face.",
    "start": "7172500",
    "end": "7182699"
  },
  {
    "text": "New type script feature.",
    "start": "7184000",
    "end": "7185000"
  },
  {
    "text": "Could we just put the documents on the built config Instead of having the config nested twice because the config itself only has the",
    "start": "7295766",
    "end": "7302100"
  },
  {
    "text": "documents on it, right.",
    "start": "7302100",
    "end": "7303699"
  },
  {
    "text": "Like. It has a source.",
    "start": "7308433",
    "end": "7311600"
  },
  {
    "text": "Yeah I think that config only has documents on it. We could just like flatten that out in",
    "start": "7319899",
    "end": "7326500"
  },
  {
    "text": "the build config to avoid. Having to that. Well we add more in the future.",
    "start": "7326500",
    "end": "7332266"
  },
  {
    "text": "We can.",
    "start": "7335433",
    "end": "7337833"
  },
  {
    "text": "So we update the schema here.",
    "start": "7380133",
    "end": "7385333"
  },
  {
    "text": "We can probably pass the entry point now. I think you are. You didn't end up",
    "start": "7436433",
    "end": "7441800"
  },
  {
    "text": "passing that to the worker right. Yeah.",
    "start": "7441800",
    "end": "7446198"
  },
  {
    "text": "Just because I'll need to update the cache key.",
    "start": "7449566",
    "end": "7454966"
  },
  {
    "text": "And add it to our list.",
    "start": "7461366",
    "end": "7462633"
  },
  {
    "text": "It's in the front path constructor that you were just looking at. I think we were missing it somewhere.",
    "start": "7515733",
    "end": "7522699"
  },
  {
    "text": "You go back there.",
    "start": "7523566",
    "end": "7524933"
  },
  {
    "text": "Where we dropped the entry point in. We're not. Path that resolving it.",
    "start": "7532366",
    "end": "7539300"
  },
  {
    "text": "because the entry points being defaulted to content layered dot config dot ts.",
    "start": "7540066",
    "end": "7546933"
  },
  {
    "text": "I think it might be just better to take the time to update the cache key.",
    "start": "7546933",
    "end": "7551566"
  },
  {
    "text": "And do this the right way.",
    "start": "7552366",
    "end": "7554633"
  },
  {
    "text": "If we go back to the schema.",
    "start": "7576766",
    "end": "7579199"
  },
  {
    "text": "We need to use it.",
    "start": "7644366",
    "end": "7646333"
  },
  {
    "text": "I wonder if there's a way we can set the working directory when we.",
    "start": "7815966",
    "end": "7821133"
  },
  {
    "text": "Run the thing.",
    "start": "7821533",
    "end": "7822766"
  },
  {
    "text": "Let's see if we can get the records.",
    "start": "7829333",
    "end": "7831333"
  },
  {
    "text": "Oh it's because we're loading the VM. The VM run in context is using CJS.",
    "start": "7848333",
    "end": "7854833"
  },
  {
    "text": "That shouldn't be running as to you. It's happening from inside the worker.",
    "start": "7858633",
    "end": "7863000"
  },
  {
    "text": "We shouldn't be loading the document builder anywhere though.",
    "start": "7867533",
    "end": "7872066"
  },
  {
    "text": "The content working.",
    "start": "7883533",
    "end": "7885566"
  },
  {
    "text": "There's like the document or any of those other files like reference the document.",
    "start": "7891000",
    "end": "7895966"
  },
  {
    "text": "It's still tree shaking.",
    "start": "7899366",
    "end": "7900433"
  },
  {
    "text": "The only difference is this is happening inside of a worker.",
    "start": "7924366",
    "end": "7927733"
  },
  {
    "text": "So yes. Somehow inside of a worker.",
    "start": "7933166",
    "end": "7936733"
  },
  {
    "text": "It's loading. This is what I've found so far but it's",
    "start": "8086333",
    "end": "8093233"
  },
  {
    "text": "not super useful yet.",
    "start": "8093233",
    "end": "8096000"
  },
  {
    "text": "we can try passing. Exec or the options.",
    "start": "8165899",
    "end": "8172100"
  },
  {
    "text": "The worker. How are you currently loading the worker.",
    "start": "8173699",
    "end": "8178133"
  },
  {
    "text": "So this is what.",
    "start": "8181500",
    "end": "8183899"
  },
  {
    "text": "Some tests here.",
    "start": "8188000",
    "end": "8189699"
  },
  {
    "text": "You kind of need to do some detection here anyway to work out if we're in a running in TSX or a bundle.",
    "start": "8193200",
    "end": "8200266"
  },
  {
    "text": "The tips to this.",
    "start": "8207600",
    "end": "8209898"
  },
  {
    "text": "And it really gets the import meta URL that we're like even accessing it is",
    "start": "8265766",
    "end": "8270799"
  },
  {
    "text": "causing the problem.",
    "start": "8270799",
    "end": "8272166"
  },
  {
    "text": "We can't just use.",
    "start": "8299900",
    "end": "8301800"
  },
  {
    "text": "The old dirty.",
    "start": "8307833",
    "end": "8308566"
  },
  {
    "text": "You can also just do a check whether or not we're on the main thread.",
    "start": "8331067",
    "end": "8336633"
  },
  {
    "text": "See if that works for avoiding the import meta URL.",
    "start": "8340966",
    "end": "8344565"
  },
  {
    "text": "Worker threads package exposes a check. It will still include the source.",
    "start": "8351466",
    "end": "8358633"
  },
  {
    "text": "The file.",
    "start": "8360366",
    "end": "8360899"
  },
  {
    "text": "It's weird that we were getting these issues before.",
    "start": "8514333",
    "end": "8519566"
  },
  {
    "text": "Because we were still building. We were still building common JS previously.",
    "start": "8523433",
    "end": "8529000"
  },
  {
    "text": "Can we try using. Actually no we can't.",
    "start": "8592799",
    "end": "8602899"
  },
  {
    "text": "I don't think you can pass custom flags.",
    "start": "8602899",
    "end": "8604934"
  },
  {
    "text": "Maybe we could try passing the like experimental strip types or something like that.",
    "start": "8609899",
    "end": "8615833"
  },
  {
    "text": "Instead of using CSX to run the worker.",
    "start": "8618666",
    "end": "8620500"
  },
  {
    "text": "No idea if that'll work.",
    "start": "8623700",
    "end": "8624767"
  },
  {
    "text": "Instead of passing that like literally pass the file name directly and then in the exact Argv",
    "start": "8630333",
    "end": "8636333"
  },
  {
    "text": "Relatives to this model. And then in the option.",
    "start": "8643266",
    "end": "8648899"
  },
  {
    "text": "There should be an exact Argv",
    "start": "8649399",
    "end": "8652267"
  },
  {
    "text": "And then pass. I figure out what it's called like the strip types thing.",
    "start": "8655500",
    "end": "8661766"
  },
  {
    "text": "So we need to finish up. Yeah I think it's time to finish up we can do this last like last try and then.",
    "start": "8739399",
    "end": "8748566"
  },
  {
    "text": "And then we can put this on our to do list for like next time.",
    "start": "8749133",
    "end": "8753833"
  },
  {
    "text": "Figure this out. It's going to get past next list.",
    "start": "8760600",
    "end": "8766799"
  },
  {
    "text": "Let's see the past next.",
    "start": "8767833",
    "end": "8769399"
  },
  {
    "text": "The ultimate great boss.",
    "start": "8776066",
    "end": "8777134"
  },
  {
    "text": "This is thrilling.",
    "start": "8813533",
    "end": "8816200"
  },
  {
    "text": "Let's see if there's any other tips than this.",
    "start": "8825433",
    "end": "8833232"
  },
  {
    "text": "I feel like I mean there's definitely a way to get it working and I was seeing a lot of references to",
    "start": "8836833",
    "end": "8842433"
  },
  {
    "text": "like V in my Google search.",
    "start": "8842433",
    "end": "8846500"
  },
  {
    "text": "So I'm actually. should be good enough.",
    "start": "8852333",
    "end": "8862766"
  },
  {
    "text": "Maybe there's an error happening in the end.",
    "start": "8905533",
    "end": "8907601"
  },
  {
    "text": "Anyway. And to the to do list and we'll do it next time. Although just so everybody knows probably",
    "start": "8913333",
    "end": "8920799"
  },
  {
    "text": "not going to be streaming next week because we're all going to be traveling for effect days.",
    "start": "8920799",
    "end": "8925799"
  },
  {
    "text": "So probably. Miss next week and potentially the week after depending on how travel and",
    "start": "8926333",
    "end": "8933399"
  },
  {
    "text": "everything plays out. But we'll try to keep going after that.",
    "start": "8933399",
    "end": "8940398"
  },
  {
    "text": "All right everybody cheers.",
    "start": "8959766",
    "end": "8966133"
  },
  {
    "text": "I hope you guys enjoyed the stream. We'll see you next time.",
    "start": "8966366",
    "end": "8968333"
  }
]