[
  {
    "text": "(audience applauds)",
    "start": "0",
    "end": "2200"
  },
  {
    "text": "Thank you, thank you for introduction.",
    "start": "2200",
    "end": "4599"
  },
  {
    "text": "Okay, hi all, thank you for joining",
    "start": "5879",
    "end": "7400"
  },
  {
    "text": "and thanks for the team to organize",
    "start": "7679",
    "end": "10599"
  },
  {
    "text": "and put together this conference.",
    "start": "10599",
    "end": "11839"
  },
  {
    "text": "So, when I first discovered Effect",
    "start": "13720",
    "end": "16760"
  },
  {
    "text": "and I was already a bit familiar with FP-PS",
    "start": "17160",
    "end": "19839"
  },
  {
    "text": "and I was thinking, oh, is this thing",
    "start": "19839",
    "end": "22079"
  },
  {
    "text": "that I studied at university that no one really understood",
    "start": "22079",
    "end": "25559"
  },
  {
    "text": "and no one really implemented?",
    "start": "25559",
    "end": "27079"
  },
  {
    "text": "And then I was like, do I have to still continue",
    "start": "27879",
    "end": "30760"
  },
  {
    "text": "reading those typing rules?",
    "start": "30879",
    "end": "32279"
  },
  {
    "text": "But turns out that no, we don't need any of that",
    "start": "32679",
    "end": "35880"
  },
  {
    "text": "to use Effect and to learn Effect.",
    "start": "36000",
    "end": "38520"
  },
  {
    "text": "So, today, instead of going through things like this,",
    "start": "40119",
    "end": "43439"
  },
  {
    "text": "I'm going to give you kind of like a mental model",
    "start": "44560",
    "end": "47560"
  },
  {
    "text": "of what Effect is and why we might want to use it.",
    "start": "47880",
    "end": "52039"
  },
  {
    "text": "So, something that I've read somewhere",
    "start": "52679",
    "end": "54759"
  },
  {
    "text": "and really resonated with me,",
    "start": "54880",
    "end": "56479"
  },
  {
    "text": "a lot is that Effect is kind of like a meta-framework",
    "start": "57280",
    "end": "60840"
  },
  {
    "text": "for TypeScript as we have meta-frameworks",
    "start": "61039",
    "end": "63439"
  },
  {
    "text": "for React, for example.",
    "start": "63439",
    "end": "64839"
  },
  {
    "text": "And it's meant to take TypeScript to the next level.",
    "start": "65719",
    "end": "69799"
  },
  {
    "text": "So, let me explain why.",
    "start": "69799",
    "end": "70959"
  },
  {
    "text": "So, when your app goes in complexity,",
    "start": "73920",
    "end": "76359"
  },
  {
    "text": "our code complexity and like the difficulty",
    "start": "76879",
    "end": "79200"
  },
  {
    "text": "of managing the code goes to.",
    "start": "79519",
    "end": "81358"
  },
  {
    "text": "So, Effect for me is perfect to help write",
    "start": "82239",
    "end": "86040"
  },
  {
    "text": "all the complex stuff, stuff like async code,",
    "start": "86599",
    "end": "89879"
  },
  {
    "text": "to compose code, concurrency, observability,",
    "start": "91079",
    "end": "94239"
  },
  {
    "text": "and it also makes dependency injection way, way easier.",
    "start": "95000",
    "end": "97840"
  },
  {
    "text": "So, on top of all of that, on top of like making this,",
    "start": "98799",
    "end": "102920"
  },
  {
    "text": "like writing this kind of code easier,",
    "start": "103680",
    "end": "105239"
  },
  {
    "text": "it gives you type safety out of the box.",
    "start": "105519",
    "end": "107840"
  },
  {
    "text": "So, let's take a look at this code.",
    "start": "108920",
    "end": "110560"
  },
  {
    "text": "It's not too many lines, but every single line",
    "start": "111599",
    "end": "115200"
  },
  {
    "text": "in this code can throw.",
    "start": "115359",
    "end": "116840"
  },
  {
    "text": "And it's not even the most complicated logic there can be.",
    "start": "117400",
    "end": "120640"
  },
  {
    "text": "And, you know, like the truth is that I don't really know",
    "start": "121239",
    "end": "124319"
  },
  {
    "text": "how it can throw, like what kind of errors.",
    "start": "124719",
    "end": "126439"
  },
  {
    "text": "Like, maybe some of those functions won't,",
    "start": "127079",
    "end": "130479"
  },
  {
    "text": "but in order to know that, I would have to read the code",
    "start": "130479",
    "end": "134080"
  },
  {
    "text": "of these fetching ingredients and prepare dish functions",
    "start": "134080",
    "end": "137800"
  },
  {
    "text": "line by line.",
    "start": "137960",
    "end": "138759"
  },
  {
    "text": "So, this managing of side effects and errors",
    "start": "139319",
    "end": "144280"
  },
  {
    "text": "in predictable and type safe way is quite challenging.",
    "start": "146159",
    "end": "149759"
  },
  {
    "text": "So, I really like explaining things through metaphors.",
    "start": "150879",
    "end": "156039"
  },
  {
    "text": "So, here goes one.",
    "start": "156680",
    "end": "157478"
  },
  {
    "text": "Imagine you are at a restaurant,",
    "start": "158400",
    "end": "159680"
  },
  {
    "text": "and now what if you order the dish",
    "start": "160159",
    "end": "162159"
  },
  {
    "text": "and one ingredient is missing?",
    "start": "162159",
    "end": "163519"
  },
  {
    "text": "Like, or maybe they don't have a dish",
    "start": "163879",
    "end": "165759"
  },
  {
    "text": "that you wanted to order.",
    "start": "165759",
    "end": "166759"
  },
  {
    "text": "Should they just close the restaurant",
    "start": "167439",
    "end": "169080"
  },
  {
    "text": "and say they don't work anymore?",
    "start": "169280",
    "end": "170959"
  },
  {
    "text": "Well, probably that's not what we expect.",
    "start": "171479",
    "end": "173319"
  },
  {
    "text": "So, one thing that we can do is to try to recover",
    "start": "174120",
    "end": "177840"
  },
  {
    "text": "from a failure and maybe somehow retry from scratch",
    "start": "177840",
    "end": "180959"
  },
  {
    "text": "what we were doing.",
    "start": "181240",
    "end": "181919"
  },
  {
    "text": "But with this code, with this particular code,",
    "start": "182639",
    "end": "185400"
  },
  {
    "text": "we can't magically go back to where we were",
    "start": "185400",
    "end": "188000"
  },
  {
    "text": "and do something different.",
    "start": "188319",
    "end": "189879"
  },
  {
    "text": "So, you wouldn't expect that in a restaurant.",
    "start": "190639",
    "end": "192360"
  },
  {
    "text": "You wouldn't expect kitchen to start completely",
    "start": "192879",
    "end": "195439"
  },
  {
    "text": "from scratch when one ingredient is missing.",
    "start": "195639",
    "end": "197960"
  },
  {
    "text": "So, now what if you want to retry with different options?",
    "start": "199680",
    "end": "203239"
  },
  {
    "text": "Imagine handling all of that with just pure JavaScript",
    "start": "203919",
    "end": "206599"
  },
  {
    "text": "and TypeScript.",
    "start": "206599",
    "end": "207099"
  },
  {
    "text": "That could end with quite a mess.",
    "start": "208199",
    "end": "210400"
  },
  {
    "text": "So, what if instead we could communicate?",
    "start": "212159",
    "end": "215759"
  },
  {
    "text": "What if we can ask for guidance and offer alternatives",
    "start": "216400",
    "end": "219719"
  },
  {
    "text": "and do things differently?",
    "start": "220039",
    "end": "221439"
  },
  {
    "text": "And that's what Effect is designed to handle easily",
    "start": "223319",
    "end": "228039"
  },
  {
    "text": "and in a type safe manner.",
    "start": "228400",
    "end": "230319"
  },
  {
    "text": "So, like how I like to think about it is like",
    "start": "232240",
    "end": "235719"
  },
  {
    "text": "when writing code, like non-Effect code,",
    "start": "235719",
    "end": "238879"
  },
  {
    "text": "defining what needs to be done and how side effects",
    "start": "239360",
    "end": "243199"
  },
  {
    "text": "need to be handled is kind of like coupled together.",
    "start": "243199",
    "end": "246520"
  },
  {
    "text": "You can return errors as values,",
    "start": "246960",
    "end": "249240"
  },
  {
    "text": "but then you need to process them right away.",
    "start": "249759",
    "end": "251879"
  },
  {
    "text": "So, now what do you think about it differently?",
    "start": "252719",
    "end": "257398"
  },
  {
    "text": "Because handling exceptions is not the same",
    "start": "257959",
    "end": "260439"
  },
  {
    "text": "as handling errors because everything in software",
    "start": "261160",
    "end": "263959"
  },
  {
    "text": "can safely error.",
    "start": "264160",
    "end": "265279"
  },
  {
    "text": "It's part of that.",
    "start": "265680",
    "end": "267319"
  },
  {
    "text": "But the question is how we paint those errors",
    "start": "267959",
    "end": "270000"
  },
  {
    "text": "and throwing them as exceptions",
    "start": "270399",
    "end": "272680"
  },
  {
    "text": "and like canceling the computation",
    "start": "272879",
    "end": "274439"
  },
  {
    "text": "is just one of the options.",
    "start": "275519",
    "end": "276759"
  },
  {
    "text": "So, what if we disconnected it to?",
    "start": "278399",
    "end": "281000"
  },
  {
    "text": "That's the mental model I like to have",
    "start": "283519",
    "end": "285800"
  },
  {
    "text": "when thinking about Effect.",
    "start": "285839",
    "end": "287959"
  },
  {
    "text": "That we can have this composable blocks",
    "start": "288600",
    "end": "290759"
  },
  {
    "text": "and one of them is defining what needs to be done",
    "start": "291639",
    "end": "295959"
  },
  {
    "text": "and another one is defining how the errors",
    "start": "296519",
    "end": "299600"
  },
  {
    "text": "should be handled and what we want to do",
    "start": "299800",
    "end": "302039"
  },
  {
    "text": "when the error happens.",
    "start": "302360",
    "end": "304518"
  },
  {
    "text": "And those are like two important bits of Effect for me.",
    "start": "305759",
    "end": "310360"
  },
  {
    "text": "So, now let's look into the code and creating effect.",
    "start": "310879",
    "end": "315399"
  },
  {
    "text": "So, I will be operating on like simplified versions",
    "start": "315680",
    "end": "317800"
  },
  {
    "text": "and executing most of the logic.",
    "start": "318199",
    "end": "319240"
  },
  {
    "text": "So, here is one of the options.",
    "start": "319959",
    "end": "321399"
  },
  {
    "text": "We can see that,",
    "start": "323120",
    "end": "324399"
  },
  {
    "text": "we can see a function that returns an Effect",
    "start": "327360",
    "end": "330039"
  },
  {
    "text": "and here are a few important bits.",
    "start": "330680",
    "end": "332560"
  },
  {
    "text": "So, firstly we declare that this Effect",
    "start": "332839",
    "end": "335439"
  },
  {
    "text": "will succeed with an array of strings.",
    "start": "336000",
    "end": "340000"
  },
  {
    "text": "And another part is that it will,",
    "start": "341000",
    "end": "343720"
  },
  {
    "text": "if it will error, it will error",
    "start": "344800",
    "end": "346399"
  },
  {
    "text": "with a custom ingredient error.",
    "start": "346480",
    "end": "348439"
  },
  {
    "text": "So, this custom ingredient error looks like this.",
    "start": "349399",
    "end": "353758"
  },
  {
    "text": "I can use this data from Effect",
    "start": "353959",
    "end": "357879"
  },
  {
    "text": "and this stack error and extend",
    "start": "358120",
    "end": "360279"
  },
  {
    "text": "and create a class that extends it.",
    "start": "361040",
    "end": "363040"
  },
  {
    "text": "So, later on when I want to catch this error,",
    "start": "364079",
    "end": "368439"
  },
  {
    "text": "I can use one of the many utilities that Effect provides.",
    "start": "368680",
    "end": "373518"
  },
  {
    "text": "One of them is catch tag, so I can directly say that,",
    "start": "373519",
    "end": "377240"
  },
  {
    "text": "oh, if there is an ingredient error,",
    "start": "377240",
    "end": "378919"
  },
  {
    "text": "I want to do something in particular.",
    "start": "379160",
    "end": "381480"
  },
  {
    "text": "And then another thing is that we can use pipe",
    "start": "383680",
    "end": "386600"
  },
  {
    "text": "to create effects so we can chain",
    "start": "386839",
    "end": "388919"
  },
  {
    "text": "more than one effect together.",
    "start": "389319",
    "end": "390879"
  },
  {
    "text": "You can also use generators.",
    "start": "391680",
    "end": "392879"
  },
  {
    "text": "I'm coming from more like",
    "start": "393560",
    "end": "394680"
  },
  {
    "text": "functional programming backgrounds",
    "start": "394680",
    "end": "395879"
  },
  {
    "text": "so this resonates more.",
    "start": "395879",
    "end": "397199"
  },
  {
    "text": "And what you can notice here is that this Effect",
    "start": "398000",
    "end": "401000"
  },
  {
    "text": "returns a string and it never errors",
    "start": "401399",
    "end": "403680"
  },
  {
    "text": "because maybe when we want to replace",
    "start": "403959",
    "end": "406920"
  },
  {
    "text": "our missing ingredient, we always have",
    "start": "407399",
    "end": "409279"
  },
  {
    "text": "some cauliflores as a backup.",
    "start": "409839",
    "end": "411560"
  },
  {
    "text": "So, now it's time to run some code.",
    "start": "413240",
    "end": "415160"
  },
  {
    "text": "So, this is how you can do this.",
    "start": "415439",
    "end": "417160"
  },
  {
    "text": "If you have a sync code, you can use Effect.runSync.",
    "start": "417160",
    "end": "421240"
  },
  {
    "text": "And if you noticed, I used Effect.log,",
    "start": "422519",
    "end": "427240"
  },
  {
    "text": "which is built in, so I will see something",
    "start": "428319",
    "end": "430519"
  },
  {
    "text": "like this in my terminal.",
    "start": "430759",
    "end": "435680"
  },
  {
    "text": "And then let's talk about another common scenario.",
    "start": "437600",
    "end": "439759"
  },
  {
    "text": "What if you're at restaurant and the waiter comes",
    "start": "441240",
    "end": "444360"
  },
  {
    "text": "and you are not ready yet?",
    "start": "444560",
    "end": "445680"
  },
  {
    "text": "So, what now?",
    "start": "446120",
    "end": "446720"
  },
  {
    "text": "Would you expect them to just wait and stand next to you",
    "start": "446720",
    "end": "451079"
  },
  {
    "text": "and neglect all the other customers?",
    "start": "451079",
    "end": "453079"
  },
  {
    "text": "Or would you expect them to be like,",
    "start": "453879",
    "end": "455680"
  },
  {
    "text": "oh, I'm giving up, I won't serve this table anymore?",
    "start": "455680",
    "end": "458800"
  },
  {
    "text": "Or maybe you would expect the person",
    "start": "460199",
    "end": "462839"
  },
  {
    "text": "to retry and give you some time.",
    "start": "463240",
    "end": "465360"
  },
  {
    "text": "So, this is how we can do this with Effect.",
    "start": "465360",
    "end": "466800"
  },
  {
    "text": "Here, I'm using this retry or else function,",
    "start": "468399",
    "end": "473319"
  },
  {
    "text": "which takes an Effect as a first parameter,",
    "start": "473560",
    "end": "476399"
  },
  {
    "text": "like something that actually has to be retried, executed.",
    "start": "476399",
    "end": "479360"
  },
  {
    "text": "And then the next thing is policy.",
    "start": "480319",
    "end": "483160"
  },
  {
    "text": "I'm setting it using this schedule library",
    "start": "483680",
    "end": "488240"
  },
  {
    "text": "and I'm saying that it has to retry three times",
    "start": "488800",
    "end": "491959"
  },
  {
    "text": "with a delay of 100 milliseconds.",
    "start": "492160",
    "end": "494839"
  },
  {
    "text": "And if still after retrying three times,",
    "start": "496360",
    "end": "500719"
  },
  {
    "text": "we still have a failure,",
    "start": "500720",
    "end": "501920"
  },
  {
    "text": "this will fall back to Effect.fail.",
    "start": "503319",
    "end": "506319"
  },
  {
    "text": "So, this is how my function",
    "start": "508120",
    "end": "511680"
  },
  {
    "text": "that I want to retry looks like.",
    "start": "511680",
    "end": "513039"
  },
  {
    "text": "So, the difference that you can see here",
    "start": "513519",
    "end": "515558"
  },
  {
    "text": "is that there's Effect.async",
    "start": "515679",
    "end": "519320"
  },
  {
    "text": "because it's supposed to be an asynchronous computation.",
    "start": "519480",
    "end": "523039"
  },
  {
    "text": "And this takes, there's a callback,",
    "start": "524200",
    "end": "526759"
  },
  {
    "text": "there's a function as a first parameter",
    "start": "528600",
    "end": "530279"
  },
  {
    "text": "and I'm resuming in case of error with Effect.fail",
    "start": "530919",
    "end": "535759"
  },
  {
    "text": "and with customer not ready error in one case,",
    "start": "535960",
    "end": "539120"
  },
  {
    "text": "or with dish missing error if, for example,",
    "start": "539759",
    "end": "543240"
  },
  {
    "text": "dish is missing.",
    "start": "543279",
    "end": "543839"
  },
  {
    "text": "And if something, if everything is right,",
    "start": "544320",
    "end": "546159"
  },
  {
    "text": "succeeding with the final dish that the customer ordered.",
    "start": "548399",
    "end": "552720"
  },
  {
    "text": "Okay, and now another thing that I wanted to mention",
    "start": "555200",
    "end": "558240"
  },
  {
    "text": "is dependency injection.",
    "start": "558399",
    "end": "560039"
  },
  {
    "text": "So, let's imagine that we operate in different restaurants,",
    "start": "560879",
    "end": "563600"
  },
  {
    "text": "they have different ingredients.",
    "start": "563840",
    "end": "564960"
  },
  {
    "text": "So, we would like to provide them",
    "start": "565480",
    "end": "568519"
  },
  {
    "text": "before running our computation.",
    "start": "569159",
    "end": "571960"
  },
  {
    "text": "So, here I'm declaring, they have it highlighted,",
    "start": "572879",
    "end": "575679"
  },
  {
    "text": "yes, I do.",
    "start": "575919",
    "end": "576480"
  },
  {
    "text": "So, the first thing is to use, to create a class",
    "start": "576840",
    "end": "580080"
  },
  {
    "text": "that where I'm declaring what kind of properties",
    "start": "580399",
    "end": "583200"
  },
  {
    "text": "are there in my service,",
    "start": "583600",
    "end": "584678"
  },
  {
    "text": "this class extends the Context.Tag from effect",
    "start": "585840",
    "end": "590279"
  },
  {
    "text": "and then the next step, if I want to use it,",
    "start": "590840",
    "end": "595879"
  },
  {
    "text": "then I'm running this pipe, for example,",
    "start": "595879",
    "end": "598840"
  },
  {
    "text": "if I'm going with pipe,",
    "start": "598840",
    "end": "600039"
  },
  {
    "text": "I'm using it on the kitchen class.",
    "start": "601279",
    "end": "604399"
  },
  {
    "text": "And another thing that you can notice is that",
    "start": "605399",
    "end": "608720"
  },
  {
    "text": "I'm passing kitchen as the third generic parameter",
    "start": "609000",
    "end": "613919"
  },
  {
    "text": "to the Effect type.",
    "start": "614519",
    "end": "615399"
  },
  {
    "text": "And that will say that, okay, this is an Effect",
    "start": "616120",
    "end": "619639"
  },
  {
    "text": "that returns an array of string in case of a success",
    "start": "619639",
    "end": "622798"
  },
  {
    "text": "and ingredient error if an error happens,",
    "start": "623440",
    "end": "627440"
  },
  {
    "text": "but it also requires a kitchen service.",
    "start": "628000",
    "end": "630840"
  },
  {
    "text": "And then how I provide it is with this provide service",
    "start": "631799",
    "end": "635080"
  },
  {
    "text": "that firstly takes the Effect and then the class",
    "start": "635720",
    "end": "640798"
  },
  {
    "text": "and I have to specify",
    "start": "641080",
    "end": "642159"
  },
  {
    "text": "everything that I previously specified",
    "start": "642159",
    "end": "645279"
  },
  {
    "text": "in the class as important.",
    "start": "645519",
    "end": "647200"
  },
  {
    "text": "So, in summary, so I'm very annoyed because the font",
    "start": "648159",
    "end": "651840"
  },
  {
    "text": "doesn't work like it used to look nicer on my computer.",
    "start": "652200",
    "end": "655159"
  },
  {
    "text": "(audience laughing)",
    "start": "656039",
    "end": "657234"
  },
  {
    "text": "So, I spend a lot of time choosing the font,",
    "start": "657234",
    "end": "660000"
  },
  {
    "text": "so that is annoying.",
    "start": "660240",
    "end": "662399"
  },
  {
    "text": "So, in summary, Effect gives us a safer way to code",
    "start": "663159",
    "end": "668039"
  },
  {
    "text": "without using exceptions and model absence of things.",
    "start": "668240",
    "end": "671039"
  },
  {
    "text": "And it also allows us to compose functions",
    "start": "671759",
    "end": "674519"
  },
  {
    "text": "in a type safe way compared to untyped JavaScript promises.",
    "start": "674519",
    "end": "678720"
  },
  {
    "text": "It's not a free pickup, it's a meta framework,",
    "start": "680120",
    "end": "683360"
  },
  {
    "text": "so it does require some initial effort to learn it",
    "start": "683360",
    "end": "686519"
  },
  {
    "text": "of course, but the thing is that it's still worth it,",
    "start": "686639",
    "end": "690399"
  },
  {
    "text": "like how powerful Effect is, is worth this initial effort.",
    "start": "690399",
    "end": "695639"
  },
  {
    "text": "So, thank you.",
    "start": "697120",
    "end": "698279"
  },
  {
    "text": "(audience applauding)",
    "start": "699840",
    "end": "700840"
  }
]