[
  {
    "text": "effect is an Innovative typescript",
    "start": "80",
    "end": "1640"
  },
  {
    "text": "Library designed to make it easy to",
    "start": "1640",
    "end": "3399"
  },
  {
    "text": "build typesafe resilient and scalable",
    "start": "3399",
    "end": "5759"
  },
  {
    "text": "applications and it's now stable and",
    "start": "5759",
    "end": "8080"
  },
  {
    "text": "ready for production let's start with a",
    "start": "8080",
    "end": "10280"
  },
  {
    "text": "quick",
    "start": "10280",
    "end": "11080"
  },
  {
    "text": "example consider the standard fetch call",
    "start": "11080",
    "end": "14120"
  },
  {
    "text": "this likely exists in almost every typ",
    "start": "14120",
    "end": "16160"
  },
  {
    "text": "script app it seems simple enough but",
    "start": "16160",
    "end": "19119"
  },
  {
    "text": "things can quickly get out of control as",
    "start": "19119",
    "end": "20880"
  },
  {
    "text": "our requirements evolve effect is",
    "start": "20880",
    "end": "23720"
  },
  {
    "text": "different the effect equivalent begins",
    "start": "23720",
    "end": "26039"
  },
  {
    "text": "with an out-of-the-box effect first HTTP",
    "start": "26039",
    "end": "28320"
  },
  {
    "text": "client the benefits start with error",
    "start": "28320",
    "end": "30320"
  },
  {
    "text": "handling untyped thrown exceptions are",
    "start": "30320",
    "end": "32758"
  },
  {
    "text": "an anti-pattern we want to return the",
    "start": "32759",
    "end": "34920"
  },
  {
    "text": "error as a value instead effect provides",
    "start": "34920",
    "end": "37680"
  },
  {
    "text": "first class support for type safe errors",
    "start": "37680",
    "end": "39760"
  },
  {
    "text": "which are included as part of the type",
    "start": "39760",
    "end": "41640"
  },
  {
    "text": "signature",
    "start": "41640",
    "end": "43280"
  },
  {
    "text": "itself next we want to ensure the",
    "start": "43280",
    "end": "45640"
  },
  {
    "text": "structure and types of our data effect",
    "start": "45640",
    "end": "48360"
  },
  {
    "text": "has its own first-party scheme of",
    "start": "48360",
    "end": "50239"
  },
  {
    "text": "validation Library which easily fits",
    "start": "50239",
    "end": "52440"
  },
  {
    "text": "into our pipeline notice how the parse",
    "start": "52440",
    "end": "54920"
  },
  {
    "text": "error is included alongside the existing",
    "start": "54920",
    "end": "57399"
  },
  {
    "text": "HTTP error in the type signature",
    "start": "57399",
    "end": "61079"
  },
  {
    "text": "when errors are tracked on a type level",
    "start": "61079",
    "end": "63160"
  },
  {
    "text": "it becomes easy to handle all errors",
    "start": "63160",
    "end": "65640"
  },
  {
    "text": "specific errors or let them continue to",
    "start": "65640",
    "end": "67759"
  },
  {
    "text": "Bubble Up to the rest of your program in",
    "start": "67759",
    "end": "70439"
  },
  {
    "text": "this case we'll handle just the parse",
    "start": "70439",
    "end": "72520"
  },
  {
    "text": "error by succeeding with a default empty",
    "start": "72520",
    "end": "75360"
  },
  {
    "text": "to-do again notice how the unhandled",
    "start": "75360",
    "end": "78280"
  },
  {
    "text": "HTTP client error is still present in",
    "start": "78280",
    "end": "80720"
  },
  {
    "text": "the type",
    "start": "80720",
    "end": "82360"
  },
  {
    "text": "signature next we want to make sure our",
    "start": "82360",
    "end": "84840"
  },
  {
    "text": "app can withstand temporary Network",
    "start": "84840",
    "end": "86799"
  },
  {
    "text": "failures for this we'll need to add some",
    "start": "86799",
    "end": "89159"
  },
  {
    "text": "retry logic",
    "start": "89159",
    "end": "91640"
  },
  {
    "text": "effects are just values which means we",
    "start": "91640",
    "end": "93920"
  },
  {
    "text": "can build on them with functions",
    "start": "93920",
    "end": "96000"
  },
  {
    "text": "currently this effect get Todo makes an",
    "start": "96000",
    "end": "98560"
  },
  {
    "text": "HTTP call once but by passing it to",
    "start": "98560",
    "end": "101560"
  },
  {
    "text": "effect. retry either as a function or in",
    "start": "101560",
    "end": "104960"
  },
  {
    "text": "a pipeline we now get a new effect that",
    "start": "104960",
    "end": "107719"
  },
  {
    "text": "makes an HTTP call and repeats on",
    "start": "107719",
    "end": "110119"
  },
  {
    "text": "failure up to three times and spacing",
    "start": "110119",
    "end": "112840"
  },
  {
    "text": "these out by exponential back off or any",
    "start": "112840",
    "end": "115119"
  },
  {
    "text": "other strategy is just as easy this",
    "start": "115119",
    "end": "117880"
  },
  {
    "text": "composability is everywhere in effect",
    "start": "117880",
    "end": "120079"
  },
  {
    "text": "and leads to incredibly powerful",
    "start": "120079",
    "end": "122880"
  },
  {
    "text": "apis next we want to abort requests that",
    "start": "122880",
    "end": "125920"
  },
  {
    "text": "hang for longer than 1 second this is",
    "start": "125920",
    "end": "128160"
  },
  {
    "text": "important for keeping our application",
    "start": "128160",
    "end": "129920"
  },
  {
    "text": "responsive just like repetition this is",
    "start": "129920",
    "end": "132520"
  },
  {
    "text": "as simple as wrapping our existing",
    "start": "132520",
    "end": "134040"
  },
  {
    "text": "effect with a function a single line of",
    "start": "134040",
    "end": "136040"
  },
  {
    "text": "code under the hood effects internal",
    "start": "136040",
    "end": "138640"
  },
  {
    "text": "structured concurrency runtime provides",
    "start": "138640",
    "end": "140640"
  },
  {
    "text": "robust tools to tame complex concurrent",
    "start": "140640",
    "end": "143440"
  },
  {
    "text": "code finally is observability crucial to",
    "start": "143440",
    "end": "146879"
  },
  {
    "text": "be able to monitor the performance of",
    "start": "146879",
    "end": "148640"
  },
  {
    "text": "our application with effect it's again",
    "start": "148640",
    "end": "151720"
  },
  {
    "text": "just one line of code effect natively",
    "start": "151720",
    "end": "154319"
  },
  {
    "text": "supports open Telemetry providing first",
    "start": "154319",
    "end": "156480"
  },
  {
    "text": "class support for tracing and",
    "start": "156480",
    "end": "158640"
  },
  {
    "text": "metrics let's take a step back and",
    "start": "158640",
    "end": "160879"
  },
  {
    "text": "evaluate what we've just done now",
    "start": "160879",
    "end": "163920"
  },
  {
    "text": "consider the non-effect vanilla version",
    "start": "163920",
    "end": "166159"
  },
  {
    "text": "of the same functionality it explodes in",
    "start": "166159",
    "end": "169080"
  },
  {
    "text": "size and complexity not to mention the",
    "start": "169080",
    "end": "171640"
  },
  {
    "text": "web of callbacks and try",
    "start": "171640",
    "end": "173760"
  },
  {
    "text": "catch effect is typescripts missing",
    "start": "173760",
    "end": "176360"
  },
  {
    "text": "standard Library providing a rich and",
    "start": "176360",
    "end": "178879"
  },
  {
    "text": "extensive set of modules mod it begins",
    "start": "178879",
    "end": "181280"
  },
  {
    "text": "with a set of powerful core Primitives a",
    "start": "181280",
    "end": "183920"
  },
  {
    "text": "functional effect system type-safe error",
    "start": "183920",
    "end": "186440"
  },
  {
    "text": "handling and dependency injection",
    "start": "186440",
    "end": "188599"
  },
  {
    "text": "composable Resource Management a mutable",
    "start": "188599",
    "end": "191159"
  },
  {
    "text": "data structures a fiber-based structured",
    "start": "191159",
    "end": "193640"
  },
  {
    "text": "concurrency model and first class",
    "start": "193640",
    "end": "195799"
  },
  {
    "text": "observability with open Telemetry all",
    "start": "195799",
    "end": "198120"
  },
  {
    "text": "built with Zero",
    "start": "198120",
    "end": "199959"
  },
  {
    "text": "dependencies Effect includes important",
    "start": "199959",
    "end": "202519"
  },
  {
    "text": "highlevel Frameworks a scheme of",
    "start": "202519",
    "end": "204799"
  },
  {
    "text": "validation library with bidirectional",
    "start": "204799",
    "end": "206720"
  },
  {
    "text": "Transformations HTTP clients and servers",
    "start": "206720",
    "end": "209879"
  },
  {
    "text": "an Innovative CLI framework and a SQL",
    "start": "209879",
    "end": "212319"
  },
  {
    "text": "toolkit all of which are built on top of",
    "start": "212319",
    "end": "214519"
  },
  {
    "text": "platform independent interfaces with",
    "start": "214519",
    "end": "216560"
  },
  {
    "text": "platform specific implementations this",
    "start": "216560",
    "end": "219000"
  },
  {
    "text": "means you can write once and run",
    "start": "219000",
    "end": "221040"
  },
  {
    "text": "anywhere with one line of code an effect",
    "start": "221040",
    "end": "223879"
  },
  {
    "text": "also includes countless smaller but",
    "start": "223879",
    "end": "225680"
  },
  {
    "text": "important and useful modules including",
    "start": "225680",
    "end": "227560"
  },
  {
    "text": "but not limited to basic utility",
    "start": "227560",
    "end": "229760"
  },
  {
    "text": "functions pattern matching streams",
    "start": "229760",
    "end": "232319"
  },
  {
    "text": "scheduling and more just to name a few",
    "start": "232319",
    "end": "235799"
  },
  {
    "text": "the comprehensive effect ecosystem and",
    "start": "235799",
    "end": "237879"
  },
  {
    "text": "its tight-knit integration creat",
    "start": "237879",
    "end": "239920"
  },
  {
    "text": "compounding benefits as you adopt effect",
    "start": "239920",
    "end": "241920"
  },
  {
    "text": "more and more because while effect is",
    "start": "241920",
    "end": "244560"
  },
  {
    "text": "made to write entire applications and",
    "start": "244560",
    "end": "246400"
  },
  {
    "text": "scale it remains fully incrementally",
    "start": "246400",
    "end": "248760"
  },
  {
    "text": "adaptable and can interface with non-ff",
    "start": "248760",
    "end": "250920"
  },
  {
    "text": "code this means you can start to get the",
    "start": "250920",
    "end": "252959"
  },
  {
    "text": "benefits of effect even within your",
    "start": "252959",
    "end": "254599"
  },
  {
    "text": "existing application or",
    "start": "254599",
    "end": "256479"
  },
  {
    "text": "framework this is the same within effect",
    "start": "256479",
    "end": "258959"
  },
  {
    "text": "itself you can pick and choose the",
    "start": "258959",
    "end": "260880"
  },
  {
    "text": "pieces of the effect ecosystem that fit",
    "start": "260880",
    "end": "262639"
  },
  {
    "text": "your project effect is optimized for",
    "start": "262639",
    "end": "264720"
  },
  {
    "text": "tree shaking so your final bundled",
    "start": "264720",
    "end": "266520"
  },
  {
    "text": "application will only bring with what",
    "start": "266520",
    "end": "268360"
  },
  {
    "text": "parts it requires however effect is so",
    "start": "268360",
    "end": "271320"
  },
  {
    "text": "comprehensive that you may find yourself",
    "start": "271320",
    "end": "273160"
  },
  {
    "text": "soon effectif ying your entire",
    "start": "273160",
    "end": "275600"
  },
  {
    "text": "application typescript is ready for",
    "start": "275600",
    "end": "277880"
  },
  {
    "text": "production with effect you will write",
    "start": "277880",
    "end": "280199"
  },
  {
    "text": "better more robust maintainable and",
    "start": "280199",
    "end": "282720"
  },
  {
    "text": "scalable applications with effect the",
    "start": "282720",
    "end": "285440"
  },
  {
    "text": "fact is modern production apps demand",
    "start": "285440",
    "end": "287919"
  },
  {
    "text": "these higher level requirements whether",
    "start": "287919",
    "end": "289440"
  },
  {
    "text": "you use effect or not effect is the",
    "start": "289440",
    "end": "291840"
  },
  {
    "text": "right abstraction for managing this",
    "start": "291840",
    "end": "293360"
  },
  {
    "text": "complexity in a composable and scalable",
    "start": "293360",
    "end": "295520"
  },
  {
    "text": "way to get started check out the",
    "start": "295520",
    "end": "298000"
  },
  {
    "text": "thorough effect docs en jooy the effect",
    "start": "298000",
    "end": "300080"
  },
  {
    "text": "Discord server where there are dedicated",
    "start": "300080",
    "end": "301800"
  },
  {
    "text": "beginner channels for you to ask",
    "start": "301800",
    "end": "303120"
  },
  {
    "text": "questions and receive help I hope to see",
    "start": "303120",
    "end": "305320"
  },
  {
    "text": "you there and happy affecting",
    "start": "305320",
    "end": "309280"
  }
]