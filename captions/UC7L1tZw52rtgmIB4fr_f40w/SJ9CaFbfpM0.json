[
  {
    "start": "0",
    "end": "72000"
  },
  {
    "text": "[Music]",
    "start": "170",
    "end": "14400"
  },
  {
    "text": "hello everyone",
    "start": "14400",
    "end": "15280"
  },
  {
    "text": "this is tony i am the head of the",
    "start": "15280",
    "end": "17520"
  },
  {
    "text": "product intelligence",
    "start": "17520",
    "end": "19199"
  },
  {
    "text": "and also pmc member and commit committer",
    "start": "19199",
    "end": "22240"
  },
  {
    "text": "of our skyline open source project as we",
    "start": "22240",
    "end": "24960"
  },
  {
    "text": "know",
    "start": "24960",
    "end": "25599"
  },
  {
    "text": "we as the first and simple distributed",
    "start": "25599",
    "end": "28640"
  },
  {
    "text": "computing engine",
    "start": "28640",
    "end": "30000"
  },
  {
    "text": "is well adopted in each domain",
    "start": "30000",
    "end": "32480"
  },
  {
    "text": "especially in data and ai",
    "start": "32480",
    "end": "34960"
  },
  {
    "text": "and ml sql is an open source sql variant",
    "start": "34960",
    "end": "38399"
  },
  {
    "text": "for big data at ai today i will",
    "start": "38399",
    "end": "41040"
  },
  {
    "text": "introduce",
    "start": "41040",
    "end": "41840"
  },
  {
    "text": "how ml sql simplifies big data and ai",
    "start": "41840",
    "end": "45360"
  },
  {
    "text": "on spark and array",
    "start": "45360",
    "end": "48719"
  },
  {
    "text": "so here is today's agenda firstly i will",
    "start": "49039",
    "end": "52079"
  },
  {
    "text": "introduce the background",
    "start": "52079",
    "end": "53680"
  },
  {
    "text": "and the challenges we have in spark and",
    "start": "53680",
    "end": "56079"
  },
  {
    "text": "recommendation",
    "start": "56079",
    "end": "57520"
  },
  {
    "text": "secondly i will give a live demo to show",
    "start": "57520",
    "end": "60800"
  },
  {
    "text": "about the new solution with ml sql",
    "start": "60800",
    "end": "64640"
  },
  {
    "text": "then i will brief what we did aml sql",
    "start": "64640",
    "end": "67520"
  },
  {
    "text": "and then",
    "start": "67520",
    "end": "68240"
  },
  {
    "text": "the technical deploy deep dive",
    "start": "68240",
    "end": "73840"
  },
  {
    "start": "72000",
    "end": "72000"
  },
  {
    "text": "when data scientists do machine learning",
    "start": "75360",
    "end": "78400"
  },
  {
    "text": "and",
    "start": "78400",
    "end": "78880"
  },
  {
    "text": "ai on big data mostly they care about",
    "start": "78880",
    "end": "82000"
  },
  {
    "text": "two things the first one is about the",
    "start": "82000",
    "end": "85040"
  },
  {
    "text": "the language which is a user interface",
    "start": "85040",
    "end": "88159"
  },
  {
    "text": "to interact with the uh machine from",
    "start": "88159",
    "end": "90880"
  },
  {
    "text": "these",
    "start": "90880",
    "end": "91200"
  },
  {
    "text": "users usually they like to use the",
    "start": "91200",
    "end": "94799"
  },
  {
    "text": "python the most and the ml sql is a",
    "start": "94799",
    "end": "98159"
  },
  {
    "text": "position here so with ml sql users can",
    "start": "98159",
    "end": "101840"
  },
  {
    "text": "simply",
    "start": "101840",
    "end": "102799"
  },
  {
    "text": "write the sql statement to finish",
    "start": "102799",
    "end": "106159"
  },
  {
    "text": "ai jobs on the big data instead of",
    "start": "106159",
    "end": "109119"
  },
  {
    "text": "writing",
    "start": "109119",
    "end": "109680"
  },
  {
    "text": "python scripts the second one is engine",
    "start": "109680",
    "end": "113280"
  },
  {
    "text": "the underlying system used to",
    "start": "113280",
    "end": "116399"
  },
  {
    "text": "excuse the job and compute the data in a",
    "start": "116399",
    "end": "119439"
  },
  {
    "text": "distributed way",
    "start": "119439",
    "end": "121200"
  },
  {
    "text": "for example we want to leverage the",
    "start": "121200",
    "end": "123360"
  },
  {
    "text": "spark for big data loading and",
    "start": "123360",
    "end": "125600"
  },
  {
    "text": "processing then use the array for",
    "start": "125600",
    "end": "128239"
  },
  {
    "text": "machine learning and",
    "start": "128239",
    "end": "129440"
  },
  {
    "text": "the model training and prediction",
    "start": "129440",
    "end": "133440"
  },
  {
    "text": "during the machine learning task we also",
    "start": "133440",
    "end": "136160"
  },
  {
    "text": "want to use the tensorflow",
    "start": "136160",
    "end": "138319"
  },
  {
    "text": "or sklearn libraries to fulfill this we",
    "start": "138319",
    "end": "142080"
  },
  {
    "text": "need the engine",
    "start": "142080",
    "end": "143200"
  },
  {
    "text": "to be efficient enough and it's inside",
    "start": "143200",
    "end": "146800"
  },
  {
    "text": "that",
    "start": "146800",
    "end": "147280"
  },
  {
    "text": "the data can exchange between the data",
    "start": "147280",
    "end": "150879"
  },
  {
    "text": "the different clusters with less",
    "start": "150879",
    "end": "153040"
  },
  {
    "text": "sharpening to ensure the efficiency",
    "start": "153040",
    "end": "156879"
  },
  {
    "text": "and from the open source community we",
    "start": "156879",
    "end": "159519"
  },
  {
    "text": "observed",
    "start": "159519",
    "end": "160319"
  },
  {
    "text": "the spartan ray combination is one of",
    "start": "160319",
    "end": "162720"
  },
  {
    "text": "the",
    "start": "162720",
    "end": "163360"
  },
  {
    "text": "popular solutions at this era",
    "start": "163360",
    "end": "167920"
  },
  {
    "start": "167000",
    "end": "167000"
  },
  {
    "text": "to realize the spark and array",
    "start": "168319",
    "end": "170800"
  },
  {
    "text": "combination",
    "start": "170800",
    "end": "171920"
  },
  {
    "text": "python is usually used as the language",
    "start": "171920",
    "end": "174800"
  },
  {
    "text": "by the developers",
    "start": "174800",
    "end": "176319"
  },
  {
    "text": "because both spark and array provides",
    "start": "176319",
    "end": "179360"
  },
  {
    "text": "the python api to write scripts and",
    "start": "179360",
    "end": "181920"
  },
  {
    "text": "program",
    "start": "181920",
    "end": "182879"
  },
  {
    "text": "on spark you can write the pi spark",
    "start": "182879",
    "end": "185920"
  },
  {
    "text": "array and the programming methodology is",
    "start": "185920",
    "end": "189840"
  },
  {
    "text": "quite easy and",
    "start": "189840",
    "end": "190800"
  },
  {
    "text": "friendly to python uh",
    "start": "190800",
    "end": "194400"
  },
  {
    "text": "developers but many of you may have the",
    "start": "194400",
    "end": "197440"
  },
  {
    "text": "following",
    "start": "197440",
    "end": "198000"
  },
  {
    "text": "problems the python is not",
    "start": "198000",
    "end": "201280"
  },
  {
    "text": "as well known as sql as an advanced",
    "start": "201280",
    "end": "204640"
  },
  {
    "text": "programming language",
    "start": "204640",
    "end": "205920"
  },
  {
    "text": "the python has been well adopted in the",
    "start": "205920",
    "end": "208480"
  },
  {
    "text": "data scientist",
    "start": "208480",
    "end": "209599"
  },
  {
    "text": "and engineer group but it is less",
    "start": "209599",
    "end": "212480"
  },
  {
    "text": "popular with business users",
    "start": "212480",
    "end": "214480"
  },
  {
    "text": "and data analysts and python cannot use",
    "start": "214480",
    "end": "218000"
  },
  {
    "text": "as payload protocol to build up the data",
    "start": "218000",
    "end": "220720"
  },
  {
    "text": "as a service",
    "start": "220720",
    "end": "221680"
  },
  {
    "text": "to serve applications quickly",
    "start": "221680",
    "end": "225599"
  },
  {
    "text": "learning curve for the fresh",
    "start": "225599",
    "end": "228640"
  },
  {
    "text": "users they need to learn the python",
    "start": "228640",
    "end": "231120"
  },
  {
    "text": "first",
    "start": "231120",
    "end": "231680"
  },
  {
    "text": "and then password and the way",
    "start": "231680",
    "end": "234159"
  },
  {
    "text": "programming",
    "start": "234159",
    "end": "235360"
  },
  {
    "text": "and also they need to understand the",
    "start": "235360",
    "end": "237200"
  },
  {
    "text": "advanced programming",
    "start": "237200",
    "end": "238720"
  },
  {
    "text": "and the tuning methodology of the whole",
    "start": "238720",
    "end": "241360"
  },
  {
    "text": "technical stack",
    "start": "241360",
    "end": "242959"
  },
  {
    "text": "and then start to work this is not an",
    "start": "242959",
    "end": "245680"
  },
  {
    "text": "easy job",
    "start": "245680",
    "end": "246959"
  },
  {
    "text": "and also as lack of data acl",
    "start": "246959",
    "end": "250159"
  },
  {
    "text": "this architecture only provides the",
    "start": "250159",
    "end": "253120"
  },
  {
    "text": "language in the",
    "start": "253120",
    "end": "255920"
  },
  {
    "text": "framework with no security management",
    "start": "255920",
    "end": "259440"
  },
  {
    "text": "so which requires that the developers to",
    "start": "259440",
    "end": "263040"
  },
  {
    "text": "define the security logics in their",
    "start": "263040",
    "end": "265680"
  },
  {
    "text": "scripts",
    "start": "265680",
    "end": "266560"
  },
  {
    "text": "which misses the point for establishing",
    "start": "266560",
    "end": "270080"
  },
  {
    "text": "a single source of tools for security as",
    "start": "270080",
    "end": "273520"
  },
  {
    "text": "a platform layer",
    "start": "273520",
    "end": "275840"
  },
  {
    "text": "and the fourth one is environment",
    "start": "275840",
    "end": "279120"
  },
  {
    "text": "complexity so if you already have a",
    "start": "279120",
    "end": "282479"
  },
  {
    "text": "star cluster and a red cluster",
    "start": "282479",
    "end": "284240"
  },
  {
    "text": "separately already",
    "start": "284240",
    "end": "285600"
  },
  {
    "text": "it is hard to leverage both",
    "start": "285600",
    "end": "288960"
  },
  {
    "text": "resources and the operation practice",
    "start": "288960",
    "end": "292160"
  },
  {
    "text": "we can talk about it later but at",
    "start": "292160",
    "end": "295440"
  },
  {
    "text": "minimum an intermediate storage layer is",
    "start": "295440",
    "end": "298800"
  },
  {
    "text": "required",
    "start": "298800",
    "end": "299600"
  },
  {
    "text": "between spark and rate for data exchange",
    "start": "299600",
    "end": "302720"
  },
  {
    "text": "which brings more complexity to the",
    "start": "302720",
    "end": "304880"
  },
  {
    "text": "whole cluster",
    "start": "304880",
    "end": "307680"
  },
  {
    "start": "308000",
    "end": "308000"
  },
  {
    "text": "so we come to the solution with ml sql",
    "start": "309039",
    "end": "311840"
  },
  {
    "text": "ml sql is a sql variant",
    "start": "311840",
    "end": "314080"
  },
  {
    "text": "designed for big data at ai whose author",
    "start": "314080",
    "end": "317120"
  },
  {
    "text": "is",
    "start": "317120",
    "end": "317360"
  },
  {
    "text": "william joo from from china as a sql",
    "start": "317360",
    "end": "321199"
  },
  {
    "text": "variant",
    "start": "321199",
    "end": "322000"
  },
  {
    "text": "and has two basic elements the language",
    "start": "322000",
    "end": "324800"
  },
  {
    "text": "and engine",
    "start": "324800",
    "end": "326080"
  },
  {
    "text": "which is distributed engine based on the",
    "start": "326080",
    "end": "329039"
  },
  {
    "text": "spark",
    "start": "329039",
    "end": "330000"
  },
  {
    "text": "just like the java world java is a",
    "start": "330000",
    "end": "332479"
  },
  {
    "text": "language for",
    "start": "332479",
    "end": "333680"
  },
  {
    "text": "coding and the java virtual machine",
    "start": "333680",
    "end": "336960"
  },
  {
    "text": "which is short for jvm yeah it",
    "start": "336960",
    "end": "340320"
  },
  {
    "text": "provides the compiler and the runtime to",
    "start": "340320",
    "end": "344320"
  },
  {
    "text": "finally run the program just like the",
    "start": "344320",
    "end": "346400"
  },
  {
    "text": "engine of java",
    "start": "346400",
    "end": "349360"
  },
  {
    "text": "for ml sql the language is based on the",
    "start": "349360",
    "end": "352240"
  },
  {
    "text": "sql",
    "start": "352240",
    "end": "353120"
  },
  {
    "text": "and it has put in advanced other",
    "start": "353120",
    "end": "356000"
  },
  {
    "text": "functions and the syntax for big data",
    "start": "356000",
    "end": "357919"
  },
  {
    "text": "and ai jobs",
    "start": "357919",
    "end": "359199"
  },
  {
    "text": "such as chain and predictive statement",
    "start": "359199",
    "end": "362080"
  },
  {
    "text": "for example",
    "start": "362080",
    "end": "362960"
  },
  {
    "text": "you can just write train something from",
    "start": "362960",
    "end": "365919"
  },
  {
    "text": "some data",
    "start": "365919",
    "end": "367120"
  },
  {
    "text": "to train the machine learning model",
    "start": "367120",
    "end": "369840"
  },
  {
    "text": "based on the data side",
    "start": "369840",
    "end": "371680"
  },
  {
    "text": "more import importantly if uh if simple",
    "start": "371680",
    "end": "375039"
  },
  {
    "text": "single is not enough",
    "start": "375039",
    "end": "376639"
  },
  {
    "text": "you can still have the option to embed",
    "start": "376639",
    "end": "379759"
  },
  {
    "text": "python in sql statements",
    "start": "379759",
    "end": "382960"
  },
  {
    "text": "for complex processing especially",
    "start": "382960",
    "end": "386240"
  },
  {
    "text": "these python scripts can easily run on",
    "start": "386240",
    "end": "389039"
  },
  {
    "text": "re-cluster",
    "start": "389039",
    "end": "391440"
  },
  {
    "text": "the second is the distributed engine",
    "start": "391440",
    "end": "394880"
  },
  {
    "text": "based on spark api it has a rich",
    "start": "394880",
    "end": "398000"
  },
  {
    "text": "ecosystem",
    "start": "398000",
    "end": "399199"
  },
  {
    "text": "that can integrate with mainstream data",
    "start": "399199",
    "end": "401759"
  },
  {
    "text": "platforms",
    "start": "401759",
    "end": "402560"
  },
  {
    "text": "like data lake data warehouse and other",
    "start": "402560",
    "end": "405520"
  },
  {
    "text": "storage engines",
    "start": "405520",
    "end": "406720"
  },
  {
    "text": "and has many built-in machine learning",
    "start": "406720",
    "end": "409039"
  },
  {
    "text": "operators",
    "start": "409039",
    "end": "410000"
  },
  {
    "text": "to serve data management bi and machine",
    "start": "410000",
    "end": "413280"
  },
  {
    "text": "learning workloads",
    "start": "413280",
    "end": "416160"
  },
  {
    "text": "more importantly we developed an",
    "start": "416160",
    "end": "418880"
  },
  {
    "text": "efficient way to",
    "start": "418880",
    "end": "421360"
  },
  {
    "text": "submit the task to recluster from spark",
    "start": "421360",
    "end": "426000"
  },
  {
    "text": "which is belong to the distributed",
    "start": "426000",
    "end": "428240"
  },
  {
    "text": "engine",
    "start": "428240",
    "end": "430560"
  },
  {
    "start": "430000",
    "end": "430000"
  },
  {
    "text": "ml sql has a wide range of data users",
    "start": "431199",
    "end": "434720"
  },
  {
    "text": "for data scientists and engineers they",
    "start": "434720",
    "end": "437440"
  },
  {
    "text": "are",
    "start": "437440",
    "end": "437840"
  },
  {
    "text": "easy to write ml sql statements",
    "start": "437840",
    "end": "441120"
  },
  {
    "text": "through a notebook gui or just writing",
    "start": "441120",
    "end": "444800"
  },
  {
    "text": "scripts and with ml sql",
    "start": "444800",
    "end": "448240"
  },
  {
    "text": "it is very easy to build applications",
    "start": "448240",
    "end": "451280"
  },
  {
    "text": "on ml sql ng for business users",
    "start": "451280",
    "end": "455520"
  },
  {
    "text": "and also ml sql can do more to publish",
    "start": "455520",
    "end": "458479"
  },
  {
    "text": "data service",
    "start": "458479",
    "end": "460319"
  },
  {
    "text": "as an api okay so if you are interested",
    "start": "460319",
    "end": "464479"
  },
  {
    "text": "in these scenarios",
    "start": "464479",
    "end": "465919"
  },
  {
    "text": "you can visit the website of ml sql to",
    "start": "465919",
    "end": "469199"
  },
  {
    "text": "learn more",
    "start": "469199",
    "end": "470319"
  },
  {
    "text": "all of that are open source and you can",
    "start": "470319",
    "end": "473599"
  },
  {
    "text": "find the document and",
    "start": "473599",
    "end": "476240"
  },
  {
    "text": "the source code on the back side yeah",
    "start": "476240",
    "end": "480479"
  },
  {
    "text": "so uh so talk is cheap",
    "start": "480479",
    "end": "483599"
  },
  {
    "text": "let's do a live demo to demonstrate the",
    "start": "483599",
    "end": "486080"
  },
  {
    "text": "capability of",
    "start": "486080",
    "end": "487759"
  },
  {
    "text": "ml sql so okay so let's imagine",
    "start": "487759",
    "end": "492000"
  },
  {
    "text": "that if you are a data scientist and the",
    "start": "492000",
    "end": "494720"
  },
  {
    "text": "i.t administrator",
    "start": "494720",
    "end": "496160"
  },
  {
    "text": "in your company ask your help to analyze",
    "start": "496160",
    "end": "499440"
  },
  {
    "text": "the",
    "start": "499440",
    "end": "500000"
  },
  {
    "text": "uh the cost of the code",
    "start": "500000",
    "end": "503039"
  },
  {
    "text": "uh platform for example why the cost of",
    "start": "503039",
    "end": "506560"
  },
  {
    "text": "aws",
    "start": "506560",
    "end": "507360"
  },
  {
    "text": "in the company is so high or is there",
    "start": "507360",
    "end": "510240"
  },
  {
    "text": "any action we can take",
    "start": "510240",
    "end": "511759"
  },
  {
    "text": "to save the cost or can we predict the",
    "start": "511759",
    "end": "515518"
  },
  {
    "text": "cost in the future so here is the",
    "start": "515519",
    "end": "518320"
  },
  {
    "text": "notebook application",
    "start": "518320",
    "end": "519839"
  },
  {
    "text": "above ml sql ng we use this to",
    "start": "519839",
    "end": "523440"
  },
  {
    "text": "choose a capability of ml sql so firstly",
    "start": "523440",
    "end": "527200"
  },
  {
    "text": "we have uploaded the data file in csv",
    "start": "527200",
    "end": "531040"
  },
  {
    "text": "format to hdf hdfs directory",
    "start": "531040",
    "end": "535600"
  },
  {
    "text": "let's take uh take a look at the",
    "start": "535600",
    "end": "537600"
  },
  {
    "text": "directory here",
    "start": "537600",
    "end": "539680"
  },
  {
    "text": "we have a syntax in ml sql to run",
    "start": "539680",
    "end": "542720"
  },
  {
    "text": "some hdfs commands like this",
    "start": "542720",
    "end": "546240"
  },
  {
    "text": "and we can see the data file is listed",
    "start": "546240",
    "end": "548720"
  },
  {
    "text": "in the result",
    "start": "548720",
    "end": "551439"
  },
  {
    "text": "and we will load the data as a table we",
    "start": "551760",
    "end": "554800"
  },
  {
    "text": "write a load statement",
    "start": "554800",
    "end": "557600"
  },
  {
    "text": "to transfer the data into a table format",
    "start": "557600",
    "end": "561600"
  },
  {
    "text": "and then use the selected statement to",
    "start": "561600",
    "end": "564160"
  },
  {
    "text": "preview the data",
    "start": "564160",
    "end": "565519"
  },
  {
    "text": "you see two uh two simple sql can",
    "start": "565519",
    "end": "569360"
  },
  {
    "text": "to symbols sql can convert a csv file",
    "start": "569360",
    "end": "572480"
  },
  {
    "text": "into a table",
    "start": "572480",
    "end": "573760"
  },
  {
    "text": "they are quite easy this table will",
    "start": "573760",
    "end": "576080"
  },
  {
    "text": "describe",
    "start": "576080",
    "end": "576880"
  },
  {
    "text": "all the transactions of billing from aws",
    "start": "576880",
    "end": "580080"
  },
  {
    "text": "but it's almost mock-up data",
    "start": "580080",
    "end": "583760"
  },
  {
    "text": "okay so in order to analyze the",
    "start": "583760",
    "end": "586680"
  },
  {
    "text": "employee's",
    "start": "586680",
    "end": "588320"
  },
  {
    "text": "perspective we need to upload the",
    "start": "588320",
    "end": "590640"
  },
  {
    "text": "employee date also",
    "start": "590640",
    "end": "592160"
  },
  {
    "text": "this table describes the join date and",
    "start": "592160",
    "end": "594959"
  },
  {
    "text": "the lead date",
    "start": "594959",
    "end": "595920"
  },
  {
    "text": "to the company for each employee",
    "start": "595920",
    "end": "599360"
  },
  {
    "text": "okay but we will find there are many",
    "start": "599360",
    "end": "602880"
  },
  {
    "text": "empty cells here we need to fill with",
    "start": "602880",
    "end": "606079"
  },
  {
    "text": "some",
    "start": "606079",
    "end": "606640"
  },
  {
    "text": "default value okay so now we can use",
    "start": "606640",
    "end": "610720"
  },
  {
    "text": "some python to process the data aml sql",
    "start": "610720",
    "end": "615440"
  },
  {
    "text": "so firstly we will define some",
    "start": "615440",
    "end": "618160"
  },
  {
    "text": "environmental variables and the",
    "start": "618160",
    "end": "619760"
  },
  {
    "text": "configuration",
    "start": "619760",
    "end": "620640"
  },
  {
    "text": "for python and then we can just write",
    "start": "620640",
    "end": "623279"
  },
  {
    "text": "the normal python script",
    "start": "623279",
    "end": "625519"
  },
  {
    "text": "that's your euler way so here we define",
    "start": "625519",
    "end": "628640"
  },
  {
    "text": "the",
    "start": "628640",
    "end": "629200"
  },
  {
    "text": "input and output",
    "start": "629200",
    "end": "632399"
  },
  {
    "text": "as a table of ml sql and also",
    "start": "632399",
    "end": "635680"
  },
  {
    "text": "we can create a read context to submit",
    "start": "635680",
    "end": "638720"
  },
  {
    "text": "the job",
    "start": "638720",
    "end": "639600"
  },
  {
    "text": "into a existing ray cluster",
    "start": "639600",
    "end": "643279"
  },
  {
    "text": "and finally we get the result as a table",
    "start": "643279",
    "end": "646160"
  },
  {
    "text": "here",
    "start": "646160",
    "end": "647040"
  },
  {
    "text": "you see if you want to large array this",
    "start": "647040",
    "end": "650000"
  },
  {
    "text": "is very easy",
    "start": "650000",
    "end": "651279"
  },
  {
    "text": "if you want to use another ring",
    "start": "651279",
    "end": "655200"
  },
  {
    "text": "you can just switch the ip and port in",
    "start": "655200",
    "end": "657440"
  },
  {
    "text": "the",
    "start": "657440",
    "end": "658240"
  },
  {
    "text": "right context okay so then we will do",
    "start": "658240",
    "end": "662160"
  },
  {
    "text": "some",
    "start": "662160",
    "end": "662720"
  },
  {
    "text": "uh table cleaning with sql",
    "start": "662720",
    "end": "666800"
  },
  {
    "text": "because we want to ensure the data",
    "start": "666800",
    "end": "669519"
  },
  {
    "text": "quality",
    "start": "669519",
    "end": "671680"
  },
  {
    "text": "so we can use some case one",
    "start": "671680",
    "end": "675120"
  },
  {
    "text": "and some function to process the data",
    "start": "675120",
    "end": "679040"
  },
  {
    "text": "you can see all of the this processing",
    "start": "679040",
    "end": "681839"
  },
  {
    "text": "is based on sql",
    "start": "681839",
    "end": "683440"
  },
  {
    "text": "so all of the workload is run on",
    "start": "683440",
    "end": "686640"
  },
  {
    "text": "a spa cluster distributedly you see",
    "start": "686640",
    "end": "690240"
  },
  {
    "text": "so we use the pipeline from spark and",
    "start": "690240",
    "end": "692880"
  },
  {
    "text": "ray together",
    "start": "692880",
    "end": "694320"
  },
  {
    "text": "we can get the data from csv",
    "start": "694320",
    "end": "697360"
  },
  {
    "text": "into sparca dd and then process that",
    "start": "697360",
    "end": "701040"
  },
  {
    "text": "into red cluster",
    "start": "701040",
    "end": "702240"
  },
  {
    "text": "and and then get the output and the path",
    "start": "702240",
    "end": "705200"
  },
  {
    "text": "to",
    "start": "705200",
    "end": "705839"
  },
  {
    "text": "uh spark again so from but",
    "start": "705839",
    "end": "709120"
  },
  {
    "text": "from users perspective all you'll see is",
    "start": "709120",
    "end": "712079"
  },
  {
    "text": "sql",
    "start": "712079",
    "end": "713120"
  },
  {
    "text": "then we can also define a udf",
    "start": "713120",
    "end": "718160"
  },
  {
    "text": "here we use the scala to define a",
    "start": "718160",
    "end": "720320"
  },
  {
    "text": "function to see",
    "start": "720320",
    "end": "722160"
  },
  {
    "text": "if a cloud resource is unreleased from",
    "start": "722160",
    "end": "725120"
  },
  {
    "text": "an",
    "start": "725120",
    "end": "725760"
  },
  {
    "text": "employee when after he",
    "start": "725760",
    "end": "728800"
  },
  {
    "text": "left the company and this kind of",
    "start": "728800",
    "end": "732079"
  },
  {
    "text": "resource should be deleted to save cost",
    "start": "732079",
    "end": "734800"
  },
  {
    "text": "for sure so when we define this",
    "start": "734800",
    "end": "738560"
  },
  {
    "text": "udf we can call that in the sql",
    "start": "738560",
    "end": "742399"
  },
  {
    "text": "and easily we can get the labels of the",
    "start": "742399",
    "end": "745600"
  },
  {
    "text": "such kind of uh results in the",
    "start": "745600",
    "end": "748639"
  },
  {
    "text": "uh in the result it's very easy",
    "start": "748639",
    "end": "752959"
  },
  {
    "text": "okay but time is leaving let's move to",
    "start": "752959",
    "end": "755839"
  },
  {
    "text": "the",
    "start": "755839",
    "end": "756399"
  },
  {
    "text": "machine learning part for example if we",
    "start": "756399",
    "end": "759839"
  },
  {
    "text": "want to",
    "start": "759839",
    "end": "761040"
  },
  {
    "text": "predict the monthly cost based on the",
    "start": "761040",
    "end": "763600"
  },
  {
    "text": "history transition",
    "start": "763600",
    "end": "764959"
  },
  {
    "text": "transactions now we make some",
    "start": "764959",
    "end": "768320"
  },
  {
    "text": "array for the feature engineering",
    "start": "768320",
    "end": "771360"
  },
  {
    "text": "i know and then we can",
    "start": "771360",
    "end": "774800"
  },
  {
    "text": "yeah we can also combine all the",
    "start": "774800",
    "end": "777279"
  },
  {
    "text": "features",
    "start": "777279",
    "end": "777920"
  },
  {
    "text": "into one column and then",
    "start": "777920",
    "end": "781279"
  },
  {
    "text": "we can uh we can use the tree statement",
    "start": "781279",
    "end": "785120"
  },
  {
    "text": "here",
    "start": "785120",
    "end": "785760"
  },
  {
    "text": "to train the linear regression model you",
    "start": "785760",
    "end": "787839"
  },
  {
    "text": "see just like you write a sql",
    "start": "787839",
    "end": "790240"
  },
  {
    "text": "it's very easy and when we build the",
    "start": "790240",
    "end": "794240"
  },
  {
    "text": "uh the model we can register it as a",
    "start": "794240",
    "end": "797600"
  },
  {
    "text": "function just like the udf",
    "start": "797600",
    "end": "800399"
  },
  {
    "text": "yeah and also after we prepared",
    "start": "800399",
    "end": "803760"
  },
  {
    "text": "the uh the the data set to predict",
    "start": "803760",
    "end": "807680"
  },
  {
    "text": "we can use the the function",
    "start": "807680",
    "end": "811360"
  },
  {
    "text": "here which is just like we registered",
    "start": "811360",
    "end": "814560"
  },
  {
    "text": "just now so we can just",
    "start": "814560",
    "end": "818160"
  },
  {
    "text": "use the model we changed in the sql to",
    "start": "818160",
    "end": "820800"
  },
  {
    "text": "get the prediction result",
    "start": "820800",
    "end": "822560"
  },
  {
    "text": "it's very easy okay",
    "start": "822560",
    "end": "826800"
  },
  {
    "text": "and also we can use ray to do the same",
    "start": "826800",
    "end": "829199"
  },
  {
    "text": "prediction",
    "start": "829199",
    "end": "830560"
  },
  {
    "text": "so like we just uh shoot just now",
    "start": "830560",
    "end": "833600"
  },
  {
    "text": "uh firstly we we can uh",
    "start": "833600",
    "end": "836639"
  },
  {
    "text": "prepare the python environment okay",
    "start": "836639",
    "end": "840240"
  },
  {
    "text": "and also we we get we create a great",
    "start": "840240",
    "end": "843920"
  },
  {
    "text": "context to connect with our existing",
    "start": "843920",
    "end": "846480"
  },
  {
    "text": "cluster",
    "start": "846480",
    "end": "848160"
  },
  {
    "text": "and also we will collect the data from",
    "start": "848160",
    "end": "850880"
  },
  {
    "text": "the",
    "start": "850880",
    "end": "851440"
  },
  {
    "text": "uh first block and just write some",
    "start": "851440",
    "end": "854240"
  },
  {
    "text": "normal",
    "start": "854240",
    "end": "855199"
  },
  {
    "text": "python scripts here we use the",
    "start": "855199",
    "end": "858320"
  },
  {
    "text": "linear regression from ascii learn",
    "start": "858320",
    "end": "861199"
  },
  {
    "text": "library",
    "start": "861199",
    "end": "862000"
  },
  {
    "text": "okay and when we change the model we can",
    "start": "862000",
    "end": "865279"
  },
  {
    "text": "guide the",
    "start": "865279",
    "end": "866320"
  },
  {
    "text": "the model in the binary format",
    "start": "866320",
    "end": "870160"
  },
  {
    "text": "in and save that into the context",
    "start": "870160",
    "end": "874320"
  },
  {
    "text": "okay and finally we can we can also save",
    "start": "874320",
    "end": "877760"
  },
  {
    "text": "the",
    "start": "877760",
    "end": "878240"
  },
  {
    "text": "model into the disk and also",
    "start": "878240",
    "end": "881519"
  },
  {
    "text": "load that into the contacts and",
    "start": "881519",
    "end": "884639"
  },
  {
    "text": "finally how can we consume that",
    "start": "884639",
    "end": "888639"
  },
  {
    "text": "you can just get the model from the",
    "start": "888639",
    "end": "891279"
  },
  {
    "text": "recontacts",
    "start": "891279",
    "end": "892160"
  },
  {
    "text": "in the right normal python code to",
    "start": "892160",
    "end": "895199"
  },
  {
    "text": "consume that",
    "start": "895199",
    "end": "896320"
  },
  {
    "text": "and finally we can get the input and the",
    "start": "896320",
    "end": "899839"
  },
  {
    "text": "output",
    "start": "899839",
    "end": "900399"
  },
  {
    "text": "from the rig from the ml sql context",
    "start": "900399",
    "end": "903839"
  },
  {
    "text": "and interact with the tables in aml sql",
    "start": "903839",
    "end": "908720"
  },
  {
    "text": "so you see what you need to do is",
    "start": "908720",
    "end": "912320"
  },
  {
    "text": "to write sql python as you want to focus",
    "start": "912320",
    "end": "915360"
  },
  {
    "text": "on the data exploration",
    "start": "915360",
    "end": "917040"
  },
  {
    "text": "and the data science you don't need to",
    "start": "917040",
    "end": "919680"
  },
  {
    "text": "take",
    "start": "919680",
    "end": "920160"
  },
  {
    "text": "care about the data pipeline and the",
    "start": "920160",
    "end": "922160"
  },
  {
    "text": "data exchange",
    "start": "922160",
    "end": "924839"
  },
  {
    "text": "behind okay",
    "start": "924839",
    "end": "927199"
  },
  {
    "text": "okay so here is the demo let's go back",
    "start": "927199",
    "end": "929920"
  },
  {
    "text": "to the slides",
    "start": "929920",
    "end": "932560"
  },
  {
    "start": "933000",
    "end": "933000"
  },
  {
    "text": "okay so as we saw in the demonstration",
    "start": "934800",
    "end": "937759"
  },
  {
    "text": "so ml sql as a sql variant",
    "start": "937759",
    "end": "940240"
  },
  {
    "text": "is very easy to use and seamlessly",
    "start": "940240",
    "end": "942959"
  },
  {
    "text": "connects to sql and python for users",
    "start": "942959",
    "end": "945920"
  },
  {
    "text": "especially in notebook it's all about",
    "start": "945920",
    "end": "948320"
  },
  {
    "text": "sql",
    "start": "948320",
    "end": "949519"
  },
  {
    "text": "there is no need to learn any new",
    "start": "949519",
    "end": "951600"
  },
  {
    "text": "programming skill",
    "start": "951600",
    "end": "953199"
  },
  {
    "text": "no pass pi spa here and also big data",
    "start": "953199",
    "end": "957040"
  },
  {
    "text": "can be processed on spark and array",
    "start": "957040",
    "end": "959600"
  },
  {
    "text": "in one context and it is",
    "start": "959600",
    "end": "962880"
  },
  {
    "text": "very powerful and performant based on",
    "start": "962880",
    "end": "965600"
  },
  {
    "text": "the python ecosystem",
    "start": "965600",
    "end": "967199"
  },
  {
    "text": "all of the python libraries can be",
    "start": "967199",
    "end": "969440"
  },
  {
    "text": "called in sql",
    "start": "969440",
    "end": "970880"
  },
  {
    "text": "like tensorflow sk learn and so on",
    "start": "970880",
    "end": "974160"
  },
  {
    "text": "users can just write sql to support a",
    "start": "974160",
    "end": "978079"
  },
  {
    "text": "total support regardless of whether it",
    "start": "978079",
    "end": "980959"
  },
  {
    "text": "is a batch",
    "start": "980959",
    "end": "982160"
  },
  {
    "text": "streaming or machine learning task",
    "start": "982160",
    "end": "984959"
  },
  {
    "text": "besides",
    "start": "984959",
    "end": "985759"
  },
  {
    "text": "if you are using apache cutting or",
    "start": "985759",
    "end": "988959"
  },
  {
    "text": "other analytical engines what you want",
    "start": "988959",
    "end": "991360"
  },
  {
    "text": "to do is just",
    "start": "991360",
    "end": "992480"
  },
  {
    "text": "write ml sql in notebook and",
    "start": "992480",
    "end": "995680"
  },
  {
    "text": "lightly send the orders to so many",
    "start": "995680",
    "end": "999279"
  },
  {
    "text": "engines",
    "start": "999279",
    "end": "1000959"
  },
  {
    "text": "and that is on the security part",
    "start": "1000959",
    "end": "1004720"
  },
  {
    "text": "ml sql has a built-in data security",
    "start": "1004720",
    "end": "1008880"
  },
  {
    "text": "engine at the language level without",
    "start": "1008880",
    "end": "1012320"
  },
  {
    "text": "requiring",
    "start": "1012320",
    "end": "1013600"
  },
  {
    "text": "some underlying story ending or some",
    "start": "1013600",
    "end": "1016240"
  },
  {
    "text": "more",
    "start": "1016240",
    "end": "1017040"
  },
  {
    "text": "developer efforts and you can also",
    "start": "1017040",
    "end": "1020320"
  },
  {
    "text": "set up the customer decentralization",
    "start": "1020320",
    "end": "1023360"
  },
  {
    "text": "to protect your data",
    "start": "1023360",
    "end": "1026400"
  },
  {
    "text": "and also extensible ml sql engine",
    "start": "1026559",
    "end": "1029678"
  },
  {
    "text": "provides rich extensible api and sdk",
    "start": "1029679",
    "end": "1033280"
  },
  {
    "text": "to develop the plugins like udf udaf",
    "start": "1033280",
    "end": "1037038"
  },
  {
    "text": "just like we should on the demo okay",
    "start": "1037039",
    "end": "1040319"
  },
  {
    "text": "and in the open source community there",
    "start": "1040319",
    "end": "1042880"
  },
  {
    "text": "are already some",
    "start": "1042880",
    "end": "1044720"
  },
  {
    "text": "many plugins for you to use and uh",
    "start": "1044720",
    "end": "1048160"
  },
  {
    "text": "you are uh invited to computer more if",
    "start": "1048160",
    "end": "1050960"
  },
  {
    "text": "you want if you",
    "start": "1050960",
    "end": "1052000"
  },
  {
    "text": "are interested to join the community",
    "start": "1052000",
    "end": "1054160"
  },
  {
    "text": "yeah",
    "start": "1054160",
    "end": "1055120"
  },
  {
    "text": "so let's come back to the ray and the",
    "start": "1055120",
    "end": "1057440"
  },
  {
    "start": "1056000",
    "end": "1056000"
  },
  {
    "text": "spa combination",
    "start": "1057440",
    "end": "1058720"
  },
  {
    "text": "at present we have seen two kinds of the",
    "start": "1058720",
    "end": "1061840"
  },
  {
    "text": "implementation here the first one is uh",
    "start": "1061840",
    "end": "1065039"
  },
  {
    "text": "ryan spark",
    "start": "1065039",
    "end": "1066240"
  },
  {
    "text": "it is developed by the spark community",
    "start": "1066240",
    "end": "1069520"
  },
  {
    "text": "which means the spark behaviors like the",
    "start": "1069520",
    "end": "1072480"
  },
  {
    "text": "resource manager to run",
    "start": "1072480",
    "end": "1074160"
  },
  {
    "text": "ray process see the latter picture the",
    "start": "1074160",
    "end": "1077600"
  },
  {
    "text": "spark driver and speculator will",
    "start": "1077600",
    "end": "1080640"
  },
  {
    "text": "launch the reprocess to execute the",
    "start": "1080640",
    "end": "1083440"
  },
  {
    "text": "re-task",
    "start": "1083440",
    "end": "1085440"
  },
  {
    "text": "in this option we found that",
    "start": "1085440",
    "end": "1089200"
  },
  {
    "text": "that an hdfs or objective store",
    "start": "1089360",
    "end": "1092720"
  },
  {
    "text": "is required to exchange the data",
    "start": "1092720",
    "end": "1095840"
  },
  {
    "text": "between spark process and reprocess",
    "start": "1095840",
    "end": "1098960"
  },
  {
    "text": "so each piece of data needs to be saved",
    "start": "1098960",
    "end": "1101840"
  },
  {
    "text": "to a disk",
    "start": "1101840",
    "end": "1102960"
  },
  {
    "text": "which is definitely slow and hurting the",
    "start": "1102960",
    "end": "1105360"
  },
  {
    "text": "performance",
    "start": "1105360",
    "end": "1106480"
  },
  {
    "text": "the second one is spock and ray also",
    "start": "1106480",
    "end": "1109280"
  },
  {
    "text": "called",
    "start": "1109280",
    "end": "1109840"
  },
  {
    "text": "ray dp where which is maintained by the",
    "start": "1109840",
    "end": "1113679"
  },
  {
    "text": "ray community",
    "start": "1113679",
    "end": "1115280"
  },
  {
    "text": "this idea is to consider that ray is",
    "start": "1115280",
    "end": "1117919"
  },
  {
    "text": "essentially a distributed programming",
    "start": "1117919",
    "end": "1120000"
  },
  {
    "text": "framework",
    "start": "1120000",
    "end": "1120960"
  },
  {
    "text": "which is a bit higher than yarn and",
    "start": "1120960",
    "end": "1123440"
  },
  {
    "text": "lower than spark",
    "start": "1123440",
    "end": "1124960"
  },
  {
    "text": "and the provide python api to run the",
    "start": "1124960",
    "end": "1128160"
  },
  {
    "text": "program distributedly",
    "start": "1128160",
    "end": "1129840"
  },
  {
    "text": "so we can run spark away",
    "start": "1129840",
    "end": "1133039"
  },
  {
    "text": "just like the way we did",
    "start": "1133039",
    "end": "1136799"
  },
  {
    "text": "so no matter which method you use uh",
    "start": "1138799",
    "end": "1141840"
  },
  {
    "text": "both of them have the challenges of",
    "start": "1141840",
    "end": "1144000"
  },
  {
    "text": "resource isolation",
    "start": "1144000",
    "end": "1145280"
  },
  {
    "text": "and the data exchange exchange issue",
    "start": "1145280",
    "end": "1149120"
  },
  {
    "text": "about the resource isolation issue",
    "start": "1149120",
    "end": "1152640"
  },
  {
    "text": "because the sparking array perfor",
    "start": "1152640",
    "end": "1155520"
  },
  {
    "text": "processes",
    "start": "1155520",
    "end": "1156480"
  },
  {
    "text": "uh because the spartan ray process will",
    "start": "1156480",
    "end": "1160559"
  },
  {
    "text": "run on the same hardware and now the",
    "start": "1160559",
    "end": "1163520"
  },
  {
    "text": "same",
    "start": "1163520",
    "end": "1164000"
  },
  {
    "text": "operation system the environments",
    "start": "1164000",
    "end": "1167200"
  },
  {
    "text": "nearly overlap therefore for example",
    "start": "1167200",
    "end": "1171760"
  },
  {
    "text": "all the python libraries should be",
    "start": "1171760",
    "end": "1173760"
  },
  {
    "text": "installed on each spark node",
    "start": "1173760",
    "end": "1176799"
  },
  {
    "text": "this might become a disaster for",
    "start": "1176799",
    "end": "1178880"
  },
  {
    "text": "maintainers in the production",
    "start": "1178880",
    "end": "1181200"
  },
  {
    "text": "environment especially in the in cases",
    "start": "1181200",
    "end": "1184880"
  },
  {
    "text": "where multiple python versions and",
    "start": "1184880",
    "end": "1187280"
  },
  {
    "text": "customization are required",
    "start": "1187280",
    "end": "1189360"
  },
  {
    "text": "this should be some disaster yeah",
    "start": "1189360",
    "end": "1193679"
  },
  {
    "text": "and then what's more both options need",
    "start": "1193679",
    "end": "1196480"
  },
  {
    "text": "an",
    "start": "1196480",
    "end": "1196960"
  },
  {
    "text": "intermediary storage to achieve the data",
    "start": "1196960",
    "end": "1200080"
  },
  {
    "text": "exchange",
    "start": "1200080",
    "end": "1201120"
  },
  {
    "text": "but ratedp uses its own built-in",
    "start": "1201120",
    "end": "1203840"
  },
  {
    "text": "objective store",
    "start": "1203840",
    "end": "1205039"
  },
  {
    "text": "which can be more efficient to live in",
    "start": "1205039",
    "end": "1207919"
  },
  {
    "text": "memory",
    "start": "1207919",
    "end": "1208960"
  },
  {
    "text": "it should be faster yeah",
    "start": "1208960",
    "end": "1212480"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "and so ml sql provides a new way",
    "start": "1212480",
    "end": "1217039"
  },
  {
    "text": "as a third option behind the ml sql",
    "start": "1217039",
    "end": "1220000"
  },
  {
    "text": "language",
    "start": "1220000",
    "end": "1220720"
  },
  {
    "text": "as the engine level we built a fusion",
    "start": "1220720",
    "end": "1223600"
  },
  {
    "text": "architecture to combine",
    "start": "1223600",
    "end": "1225200"
  },
  {
    "text": "the sparks really together let's look at",
    "start": "1225200",
    "end": "1228720"
  },
  {
    "text": "the architectural diagram",
    "start": "1228720",
    "end": "1230640"
  },
  {
    "text": "firstly we run the ml sql engine knows",
    "start": "1230640",
    "end": "1233840"
  },
  {
    "text": "angean or kubernetes and so on because",
    "start": "1233840",
    "end": "1237039"
  },
  {
    "text": "ml sql engine is implemented",
    "start": "1237039",
    "end": "1239440"
  },
  {
    "text": "based on spark we will connect each",
    "start": "1239440",
    "end": "1241919"
  },
  {
    "text": "spark",
    "start": "1241919",
    "end": "1243440"
  },
  {
    "text": "executors with array to submit",
    "start": "1243440",
    "end": "1246720"
  },
  {
    "text": "jobs and exchange data so in this way",
    "start": "1246720",
    "end": "1250480"
  },
  {
    "text": "we will run the spec job on a smart",
    "start": "1250480",
    "end": "1253120"
  },
  {
    "text": "cluster",
    "start": "1253120",
    "end": "1253840"
  },
  {
    "text": "and run the rakes job on the right",
    "start": "1253840",
    "end": "1256080"
  },
  {
    "text": "cluster dislikes the two way we just",
    "start": "1256080",
    "end": "1258960"
  },
  {
    "text": "talked about previously",
    "start": "1258960",
    "end": "1260640"
  },
  {
    "text": "where both workload must execute in",
    "start": "1260640",
    "end": "1264799"
  },
  {
    "text": "in one cluster which is more friendly",
    "start": "1264799",
    "end": "1268480"
  },
  {
    "text": "to the maintenance team also the",
    "start": "1268480",
    "end": "1271200"
  },
  {
    "text": "developers",
    "start": "1271200",
    "end": "1272240"
  },
  {
    "text": "and users because",
    "start": "1272240",
    "end": "1275600"
  },
  {
    "text": "use the uh the dedicated resource to do",
    "start": "1275679",
    "end": "1278480"
  },
  {
    "text": "dynamical work",
    "start": "1278480",
    "end": "1279600"
  },
  {
    "text": "should be the best practice okay so",
    "start": "1279600",
    "end": "1282720"
  },
  {
    "text": "let's look at the each",
    "start": "1282720",
    "end": "1284240"
  },
  {
    "text": "of the stack executor we will launch a",
    "start": "1284240",
    "end": "1287520"
  },
  {
    "text": "python demon process and a",
    "start": "1287520",
    "end": "1290640"
  },
  {
    "text": "python work process from the executor",
    "start": "1290640",
    "end": "1293120"
  },
  {
    "text": "the java",
    "start": "1293120",
    "end": "1294880"
  },
  {
    "text": "the the java process is",
    "start": "1294880",
    "end": "1298080"
  },
  {
    "text": "where the python worker has a built-in",
    "start": "1298080",
    "end": "1300799"
  },
  {
    "text": "ray cloud module",
    "start": "1300799",
    "end": "1302159"
  },
  {
    "text": "and it can talk to an existing real",
    "start": "1302159",
    "end": "1304240"
  },
  {
    "text": "cluster and submit",
    "start": "1304240",
    "end": "1305360"
  },
  {
    "text": "the job so uh how does the data exchange",
    "start": "1305360",
    "end": "1309360"
  },
  {
    "text": "happen",
    "start": "1309360",
    "end": "1310000"
  },
  {
    "text": "we can implement the deep dive later",
    "start": "1310000",
    "end": "1314640"
  },
  {
    "start": "1315000",
    "end": "1315000"
  },
  {
    "text": "okay so now let's discuss about why we",
    "start": "1315520",
    "end": "1318640"
  },
  {
    "text": "do it like this",
    "start": "1318640",
    "end": "1320159"
  },
  {
    "text": "with its architecture we can see these",
    "start": "1320159",
    "end": "1322799"
  },
  {
    "text": "following advantages",
    "start": "1322799",
    "end": "1324559"
  },
  {
    "text": "so firstly the resources are isolated",
    "start": "1324559",
    "end": "1328159"
  },
  {
    "text": "both the spark array are running as a",
    "start": "1328159",
    "end": "1331760"
  },
  {
    "text": "independent applications in different",
    "start": "1331760",
    "end": "1334400"
  },
  {
    "text": "machines and different clusters",
    "start": "1334400",
    "end": "1336720"
  },
  {
    "text": "you need now to install the python",
    "start": "1336720",
    "end": "1339200"
  },
  {
    "text": "libraries of splat cluster",
    "start": "1339200",
    "end": "1340960"
  },
  {
    "text": "and the both your existing spa cluster",
    "start": "1340960",
    "end": "1343919"
  },
  {
    "text": "and the ray cluster",
    "start": "1343919",
    "end": "1345280"
  },
  {
    "text": "can be leveraged which is more adoptable",
    "start": "1345280",
    "end": "1348880"
  },
  {
    "text": "in the",
    "start": "1348880",
    "end": "1349440"
  },
  {
    "text": "production practice and more to the",
    "start": "1349440",
    "end": "1351679"
  },
  {
    "text": "point the",
    "start": "1351679",
    "end": "1352720"
  },
  {
    "text": "environment is isolated you can connect",
    "start": "1352720",
    "end": "1355280"
  },
  {
    "text": "to",
    "start": "1355280",
    "end": "1356799"
  },
  {
    "text": "to any one of the multiple ray clusters",
    "start": "1356799",
    "end": "1359760"
  },
  {
    "text": "like",
    "start": "1359760",
    "end": "1360240"
  },
  {
    "text": "maybe the production and the testing",
    "start": "1360240",
    "end": "1362559"
  },
  {
    "text": "environment",
    "start": "1362559",
    "end": "1363840"
  },
  {
    "text": "even in different python versions in the",
    "start": "1363840",
    "end": "1366400"
  },
  {
    "text": "different",
    "start": "1366400",
    "end": "1367120"
  },
  {
    "text": "configurations the result affects the",
    "start": "1367120",
    "end": "1369679"
  },
  {
    "text": "splat cluster",
    "start": "1369679",
    "end": "1371280"
  },
  {
    "text": "and they redevelop the the script",
    "start": "1371280",
    "end": "1375120"
  },
  {
    "text": "okay and secondly the intermediate",
    "start": "1375120",
    "end": "1377600"
  },
  {
    "text": "storage is not",
    "start": "1377600",
    "end": "1378720"
  },
  {
    "text": "necessary for uh this exchange",
    "start": "1378720",
    "end": "1382000"
  },
  {
    "text": "it is more performant and stable we can",
    "start": "1382000",
    "end": "1384960"
  },
  {
    "text": "talk about this later",
    "start": "1384960",
    "end": "1386159"
  },
  {
    "text": "in the deep dive part and uh",
    "start": "1386159",
    "end": "1389200"
  },
  {
    "text": "pluggable actually uh ray is",
    "start": "1389200",
    "end": "1392720"
  },
  {
    "text": "a pre is optional here uh users can",
    "start": "1392720",
    "end": "1396880"
  },
  {
    "text": "run the python scripts in the python",
    "start": "1396880",
    "end": "1399200"
  },
  {
    "text": "worker only",
    "start": "1399200",
    "end": "1400799"
  },
  {
    "text": "or just the sum is the job to any",
    "start": "1400799",
    "end": "1403600"
  },
  {
    "text": "recluster",
    "start": "1403600",
    "end": "1404799"
  },
  {
    "text": "only if you provide the connection",
    "start": "1404799",
    "end": "1406400"
  },
  {
    "text": "information of the right just like with",
    "start": "1406400",
    "end": "1408080"
  },
  {
    "text": "the",
    "start": "1408080",
    "end": "1408480"
  },
  {
    "text": "the the demo we shoot you just uh",
    "start": "1408480",
    "end": "1411679"
  },
  {
    "text": "switch the the connector screen the host",
    "start": "1411679",
    "end": "1414480"
  },
  {
    "text": "and port you can just",
    "start": "1414480",
    "end": "1416480"
  },
  {
    "text": "submit the job to another great cluster",
    "start": "1416480",
    "end": "1419679"
  },
  {
    "text": "okay so it's very easy to learn",
    "start": "1419679",
    "end": "1422960"
  },
  {
    "text": "uh users do not need need to learn the",
    "start": "1422960",
    "end": "1425600"
  },
  {
    "text": "passbark",
    "start": "1425600",
    "end": "1426559"
  },
  {
    "text": "or rui programming they just need to be",
    "start": "1426559",
    "end": "1430080"
  },
  {
    "text": "able to rise up",
    "start": "1430080",
    "end": "1431200"
  },
  {
    "text": "the sql and also uh basic",
    "start": "1431200",
    "end": "1434320"
  },
  {
    "text": "some basic python for some advanced",
    "start": "1434320",
    "end": "1436960"
  },
  {
    "text": "scenarios",
    "start": "1436960",
    "end": "1439120"
  },
  {
    "text": "enough so it's very easy to learn okay",
    "start": "1439120",
    "end": "1444480"
  },
  {
    "text": "so from here let's talk about the",
    "start": "1444480",
    "end": "1446880"
  },
  {
    "text": "technical deep dive",
    "start": "1446880",
    "end": "1448400"
  },
  {
    "text": "how does spark send the data to ray and",
    "start": "1448400",
    "end": "1451039"
  },
  {
    "text": "then gets back the result",
    "start": "1451039",
    "end": "1454159"
  },
  {
    "text": "we talked about the processes inside the",
    "start": "1454159",
    "end": "1456960"
  },
  {
    "text": "spark",
    "start": "1456960",
    "end": "1457520"
  },
  {
    "text": "exchangers before so each process can",
    "start": "1457520",
    "end": "1460640"
  },
  {
    "text": "launch",
    "start": "1460640",
    "end": "1461200"
  },
  {
    "text": "socket server to exchange data and the",
    "start": "1461200",
    "end": "1464080"
  },
  {
    "text": "data format",
    "start": "1464080",
    "end": "1465039"
  },
  {
    "text": "we use is average arrow and a very",
    "start": "1465039",
    "end": "1467840"
  },
  {
    "text": "efficient",
    "start": "1467840",
    "end": "1468480"
  },
  {
    "text": "columnar format here i want to mention",
    "start": "1468480",
    "end": "1471760"
  },
  {
    "text": "that",
    "start": "1471760",
    "end": "1472720"
  },
  {
    "text": "you may find that there are both java",
    "start": "1472720",
    "end": "1475039"
  },
  {
    "text": "process and",
    "start": "1475039",
    "end": "1475840"
  },
  {
    "text": "python process here and we need to",
    "start": "1475840",
    "end": "1478880"
  },
  {
    "text": "launch the python",
    "start": "1478880",
    "end": "1480640"
  },
  {
    "text": "from java and communicate between them",
    "start": "1480640",
    "end": "1484480"
  },
  {
    "text": "so in order to fulfill this we developed",
    "start": "1484480",
    "end": "1487520"
  },
  {
    "text": "a dependent library called pi java",
    "start": "1487520",
    "end": "1490960"
  },
  {
    "text": "and it's also open source on github you",
    "start": "1490960",
    "end": "1493360"
  },
  {
    "text": "can visit the",
    "start": "1493360",
    "end": "1494720"
  },
  {
    "text": "repository to learn more about the",
    "start": "1494720",
    "end": "1496559"
  },
  {
    "text": "design and technical details",
    "start": "1496559",
    "end": "1499120"
  },
  {
    "text": "next let's take a look at the detail",
    "start": "1499120",
    "end": "1502000"
  },
  {
    "text": "about",
    "start": "1502000",
    "end": "1502559"
  },
  {
    "text": "how data exchange happens between spark",
    "start": "1502559",
    "end": "1505760"
  },
  {
    "start": "1503000",
    "end": "1503000"
  },
  {
    "text": "and array",
    "start": "1505760",
    "end": "1508000"
  },
  {
    "text": "i start from the list diagram about the",
    "start": "1508000",
    "end": "1511120"
  },
  {
    "text": "data flow",
    "start": "1511120",
    "end": "1512240"
  },
  {
    "text": "so firstly we have a table uh in the",
    "start": "1512240",
    "end": "1515120"
  },
  {
    "text": "form of a spark rdd",
    "start": "1515120",
    "end": "1518159"
  },
  {
    "text": "and we want to process that on the",
    "start": "1518159",
    "end": "1521120"
  },
  {
    "text": "recaster",
    "start": "1521120",
    "end": "1522640"
  },
  {
    "text": "so we need to send the data by partition",
    "start": "1522640",
    "end": "1525440"
  },
  {
    "text": "to the right cluster and",
    "start": "1525440",
    "end": "1526880"
  },
  {
    "text": "get back the the result rdd",
    "start": "1526880",
    "end": "1530799"
  },
  {
    "text": "at the beginning we launched the several",
    "start": "1530799",
    "end": "1533279"
  },
  {
    "text": "read-wise server",
    "start": "1533279",
    "end": "1534400"
  },
  {
    "text": "of the spark executor and the number of",
    "start": "1534400",
    "end": "1537440"
  },
  {
    "text": "the social servers",
    "start": "1537440",
    "end": "1538960"
  },
  {
    "text": "is the same as the number of the",
    "start": "1538960",
    "end": "1541200"
  },
  {
    "text": "partition of the rtd",
    "start": "1541200",
    "end": "1543120"
  },
  {
    "text": "okay so and the system will adjust the",
    "start": "1543120",
    "end": "1546080"
  },
  {
    "text": "number of partitions",
    "start": "1546080",
    "end": "1547520"
  },
  {
    "text": "based on the current resource situation",
    "start": "1547520",
    "end": "1550320"
  },
  {
    "text": "automatically",
    "start": "1550320",
    "end": "1552159"
  },
  {
    "text": "then the spark cluster will send the",
    "start": "1552159",
    "end": "1554880"
  },
  {
    "text": "address",
    "start": "1554880",
    "end": "1555760"
  },
  {
    "text": "of this socket servers to the python",
    "start": "1555760",
    "end": "1558640"
  },
  {
    "text": "worker",
    "start": "1558640",
    "end": "1560000"
  },
  {
    "text": "at this time the user they can use they",
    "start": "1560000",
    "end": "1563120"
  },
  {
    "text": "can obtain this",
    "start": "1563120",
    "end": "1564720"
  },
  {
    "text": "server addresses through the pi java api",
    "start": "1564720",
    "end": "1568240"
  },
  {
    "text": "then the users can start the the the",
    "start": "1568240",
    "end": "1571279"
  },
  {
    "text": "re-task",
    "start": "1571279",
    "end": "1572080"
  },
  {
    "text": "and freely decide how to pass the uh",
    "start": "1572080",
    "end": "1575120"
  },
  {
    "text": "past pass in the uh the the rights",
    "start": "1575120",
    "end": "1578159"
  },
  {
    "text": "and the uh how to pass the array",
    "start": "1578159",
    "end": "1581679"
  },
  {
    "text": "task okay so this",
    "start": "1581679",
    "end": "1585200"
  },
  {
    "text": "server addresses will help the user to",
    "start": "1585200",
    "end": "1587919"
  },
  {
    "text": "get the data from the tables",
    "start": "1587919",
    "end": "1589760"
  },
  {
    "text": "inspired after the processing is",
    "start": "1589760",
    "end": "1592640"
  },
  {
    "text": "completed",
    "start": "1592640",
    "end": "1593600"
  },
  {
    "text": "the system will automatically start some",
    "start": "1593600",
    "end": "1596840"
  },
  {
    "text": "reactors",
    "start": "1596840",
    "end": "1598159"
  },
  {
    "text": "in the real cluster and also each",
    "start": "1598159",
    "end": "1602159"
  },
  {
    "text": "ray actor will provide a soccer server",
    "start": "1602159",
    "end": "1606000"
  },
  {
    "text": "service to provide",
    "start": "1606000",
    "end": "1609279"
  },
  {
    "text": "the data uh the the result data",
    "start": "1609279",
    "end": "1612880"
  },
  {
    "text": "okay and then says it will send the",
    "start": "1612880",
    "end": "1616320"
  },
  {
    "text": "addresses to the spot cluster so that",
    "start": "1616320",
    "end": "1619840"
  },
  {
    "text": "so that the spot cluster will build a",
    "start": "1619840",
    "end": "1622640"
  },
  {
    "text": "new table rdd for the result and",
    "start": "1622640",
    "end": "1626240"
  },
  {
    "text": "the number of the partitions in the",
    "start": "1626240",
    "end": "1628240"
  },
  {
    "text": "table is consistent with the number of",
    "start": "1628240",
    "end": "1630799"
  },
  {
    "text": "actors",
    "start": "1630799",
    "end": "1631360"
  },
  {
    "text": "in ray so in this way the process the",
    "start": "1631360",
    "end": "1634000"
  },
  {
    "text": "data",
    "start": "1634000",
    "end": "1634480"
  },
  {
    "text": "can be obtained from the ray so as a",
    "start": "1634480",
    "end": "1637600"
  },
  {
    "text": "result we can see that",
    "start": "1637600",
    "end": "1639120"
  },
  {
    "text": "we just use the socket server to",
    "start": "1639120",
    "end": "1642000"
  },
  {
    "text": "exchange data",
    "start": "1642000",
    "end": "1643279"
  },
  {
    "text": "from spark to ray and also get the",
    "start": "1643279",
    "end": "1646640"
  },
  {
    "text": "result from red to spark",
    "start": "1646640",
    "end": "1649760"
  },
  {
    "text": "so and it is distributedly",
    "start": "1649760",
    "end": "1653600"
  },
  {
    "text": "and partitioned so with this we can",
    "start": "1653600",
    "end": "1657679"
  },
  {
    "text": "avoid the data shuffling to improve",
    "start": "1657679",
    "end": "1660080"
  },
  {
    "text": "the the exchange efficiency",
    "start": "1660080",
    "end": "1663760"
  },
  {
    "text": "okay",
    "start": "1663760",
    "end": "1666080"
  },
  {
    "text": "and also uh this is this is uh",
    "start": "1667520",
    "end": "1670799"
  },
  {
    "text": "here we talked about how to use the",
    "start": "1670799",
    "end": "1672720"
  },
  {
    "text": "array for data processing",
    "start": "1672720",
    "end": "1674240"
  },
  {
    "text": "and also for the model training it might",
    "start": "1674240",
    "end": "1676159"
  },
  {
    "text": "be different because",
    "start": "1676159",
    "end": "1677760"
  },
  {
    "text": "the model training does not require uh",
    "start": "1677760",
    "end": "1680559"
  },
  {
    "text": "the",
    "start": "1680559",
    "end": "1680960"
  },
  {
    "text": "process data separately and maybe you",
    "start": "1680960",
    "end": "1683840"
  },
  {
    "text": "need to",
    "start": "1683840",
    "end": "1684720"
  },
  {
    "text": "collect the data at some node so in such",
    "start": "1684720",
    "end": "1687919"
  },
  {
    "text": "case",
    "start": "1687919",
    "end": "1688399"
  },
  {
    "text": "maybe we can just need to start one",
    "start": "1688399",
    "end": "1691279"
  },
  {
    "text": "great task",
    "start": "1691279",
    "end": "1692320"
  },
  {
    "text": "to obtain the table data and then",
    "start": "1692320",
    "end": "1695039"
  },
  {
    "text": "perform the model training",
    "start": "1695039",
    "end": "1696559"
  },
  {
    "text": "so after the training is completed we",
    "start": "1696559",
    "end": "1698799"
  },
  {
    "text": "will store the",
    "start": "1698799",
    "end": "1699919"
  },
  {
    "text": "model on the hdfs and return that to",
    "start": "1699919",
    "end": "1702799"
  },
  {
    "text": "spark in a single",
    "start": "1702799",
    "end": "1704399"
  },
  {
    "text": "value table which which which means that",
    "start": "1704399",
    "end": "1707200"
  },
  {
    "text": "the table",
    "start": "1707200",
    "end": "1708000"
  },
  {
    "text": "of just one record and one field",
    "start": "1708000",
    "end": "1711200"
  },
  {
    "text": "to include to to contain the address of",
    "start": "1711200",
    "end": "1713840"
  },
  {
    "text": "the model",
    "start": "1713840",
    "end": "1715600"
  },
  {
    "text": "okay and and then you can also directly",
    "start": "1715600",
    "end": "1718399"
  },
  {
    "text": "transfer the order to spark",
    "start": "1718399",
    "end": "1720000"
  },
  {
    "text": "in a binary format and then save that in",
    "start": "1720000",
    "end": "1723039"
  },
  {
    "text": "this lake so at this time it is directly",
    "start": "1723039",
    "end": "1726000"
  },
  {
    "text": "transmitted",
    "start": "1726000",
    "end": "1726880"
  },
  {
    "text": "back through the re current okay",
    "start": "1726880",
    "end": "1731919"
  },
  {
    "text": "so till now we have finished today's",
    "start": "1731919",
    "end": "1734080"
  },
  {
    "text": "presentation",
    "start": "1734080",
    "end": "1735120"
  },
  {
    "text": "so as i talked to the with will and",
    "start": "1735120",
    "end": "1737200"
  },
  {
    "text": "yesterday he is the author of the ml sql",
    "start": "1737200",
    "end": "1740000"
  },
  {
    "text": "ml sequel is expected to",
    "start": "1740000",
    "end": "1743440"
  },
  {
    "text": "bridge the data and ai he signed and",
    "start": "1743440",
    "end": "1746320"
  },
  {
    "text": "also",
    "start": "1746320",
    "end": "1747039"
  },
  {
    "text": "uh become the industry",
    "start": "1747039",
    "end": "1750399"
  },
  {
    "text": "standard of language interface so",
    "start": "1750399",
    "end": "1753919"
  },
  {
    "text": "if you are interested in that please",
    "start": "1753919",
    "end": "1756399"
  },
  {
    "text": "feel free to join the community and",
    "start": "1756399",
    "end": "1758399"
  },
  {
    "text": "uh and the noaa and learn about more",
    "start": "1758399",
    "end": "1762960"
  },
  {
    "text": "okay so uh here's today's",
    "start": "1762960",
    "end": "1766000"
  },
  {
    "text": "presentation uh if you want to learn",
    "start": "1766000",
    "end": "1768320"
  },
  {
    "text": "more you can visit",
    "start": "1768320",
    "end": "1769520"
  },
  {
    "text": "the the website and to and",
    "start": "1769520",
    "end": "1772799"
  },
  {
    "text": "or just contact us so thanks",
    "start": "1772799",
    "end": "1776000"
  },
  {
    "text": "so if you have any questions please",
    "start": "1776000",
    "end": "1778159"
  },
  {
    "text": "please we can have a qra",
    "start": "1778159",
    "end": "1780080"
  },
  {
    "text": "thank you",
    "start": "1780080",
    "end": "1785519"
  }
]