[
  {
    "text": "hey everybody uh good afternoon I hope",
    "start": "2840",
    "end": "5200"
  },
  {
    "text": "you've all been having a great day uh",
    "start": "5200",
    "end": "7279"
  },
  {
    "text": "for this next 15 minutes we're going to",
    "start": "7279",
    "end": "9120"
  },
  {
    "text": "talk about Ray native data processing in",
    "start": "9120",
    "end": "11400"
  },
  {
    "text": "ETL um at the company I work at City",
    "start": "11400",
    "end": "13759"
  },
  {
    "text": "storage systems um we also go by our",
    "start": "13759",
    "end": "16880"
  },
  {
    "text": "actual company I work with Cloud",
    "start": "16880",
    "end": "18240"
  },
  {
    "text": "kitchens and this will all be using a",
    "start": "18240",
    "end": "20439"
  },
  {
    "text": "new data frame API called Daft um I'm a",
    "start": "20439",
    "end": "23519"
  },
  {
    "text": "data scientist I think this says ml",
    "start": "23519",
    "end": "25400"
  },
  {
    "text": "engineer but I'd call myself in a skill",
    "start": "25400",
    "end": "27279"
  },
  {
    "text": "set more of data scientist modeling on",
    "start": "27279",
    "end": "29279"
  },
  {
    "text": "that side",
    "start": "29279",
    "end": "30560"
  },
  {
    "text": "um so agenda for now we're going to do a",
    "start": "30560",
    "end": "33000"
  },
  {
    "text": "quick overview I want to go over just a",
    "start": "33000",
    "end": "34840"
  },
  {
    "text": "real world problem sort of a proof of",
    "start": "34840",
    "end": "37120"
  },
  {
    "text": "concept to see if this new data frame",
    "start": "37120",
    "end": "38760"
  },
  {
    "text": "API works for us uh very common problem",
    "start": "38760",
    "end": "42200"
  },
  {
    "text": "people work with Ned resolution we're",
    "start": "42200",
    "end": "44039"
  },
  {
    "text": "building a restaurant graph so our",
    "start": "44039",
    "end": "45960"
  },
  {
    "text": "company sort of at the intersection of",
    "start": "45960",
    "end": "47680"
  },
  {
    "text": "food Tech and real estate uh the",
    "start": "47680",
    "end": "50079"
  },
  {
    "text": "previous solution we built is a",
    "start": "50079",
    "end": "51399"
  },
  {
    "text": "spark-based any resolution Pipeline and",
    "start": "51399",
    "end": "54399"
  },
  {
    "text": "how we use spark essentially replacing",
    "start": "54399",
    "end": "56640"
  },
  {
    "text": "spark with Ray plus Daft so do we get",
    "start": "56640",
    "end": "59079"
  },
  {
    "text": "similar performance did it integrate",
    "start": "59079",
    "end": "61079"
  },
  {
    "text": "with our Tech stack how was it to work",
    "start": "61079",
    "end": "64360"
  },
  {
    "text": "with uh so the problem at a high level",
    "start": "64360",
    "end": "67000"
  },
  {
    "text": "I'm not going to go into super great",
    "start": "67000",
    "end": "68200"
  },
  {
    "text": "detail uh we are sort of tasked with",
    "start": "68200",
    "end": "70200"
  },
  {
    "text": "build a consistent source source of",
    "start": "70200",
    "end": "71960"
  },
  {
    "text": "Truth for the restaurant Marketplace so",
    "start": "71960",
    "end": "74200"
  },
  {
    "text": "I want to know all the restaurants in",
    "start": "74200",
    "end": "75640"
  },
  {
    "text": "the world I want to know who's our",
    "start": "75640",
    "end": "77360"
  },
  {
    "text": "customer who's not our customer what",
    "start": "77360",
    "end": "79960"
  },
  {
    "text": "product they should be using so this",
    "start": "79960",
    "end": "81520"
  },
  {
    "text": "goes into sales optimization uh customer",
    "start": "81520",
    "end": "84880"
  },
  {
    "text": "enrichment Marketplace analysis where",
    "start": "84880",
    "end": "87280"
  },
  {
    "text": "should we be putting stuff we do a lot",
    "start": "87280",
    "end": "88799"
  },
  {
    "text": "of spatial data analysis this and also",
    "start": "88799",
    "end": "90799"
  },
  {
    "text": "some internal data validation when you",
    "start": "90799",
    "end": "92200"
  },
  {
    "text": "have Silo data sometimes you find things",
    "start": "92200",
    "end": "94320"
  },
  {
    "text": "like these don't link between these two",
    "start": "94320",
    "end": "96079"
  },
  {
    "text": "data sources uh this is just a toy",
    "start": "96079",
    "end": "98240"
  },
  {
    "text": "example of entities we work with Brands",
    "start": "98240",
    "end": "100680"
  },
  {
    "text": "location menu items obviously there's a",
    "start": "100680",
    "end": "102600"
  },
  {
    "text": "lot more to it some of the edges we know",
    "start": "102600",
    "end": "104640"
  },
  {
    "text": "really well it's our internal data some",
    "start": "104640",
    "end": "106560"
  },
  {
    "text": "we don't know we need to infer",
    "start": "106560",
    "end": "109119"
  },
  {
    "text": "them um so our previous solution and one",
    "start": "109119",
    "end": "112479"
  },
  {
    "text": "actually we're still shadowing or",
    "start": "112479",
    "end": "113640"
  },
  {
    "text": "keeping in why we Shadow the daff",
    "start": "113640",
    "end": "115399"
  },
  {
    "text": "solution uh was based on spark and at a",
    "start": "115399",
    "end": "119039"
  },
  {
    "text": "high level I don't go into too many",
    "start": "119039",
    "end": "120520"
  },
  {
    "text": "details if you've done any resolution it",
    "start": "120520",
    "end": "122119"
  },
  {
    "text": "can be a beast if you don't do it right",
    "start": "122119",
    "end": "123719"
  },
  {
    "text": "and you can explode the problem but you",
    "start": "123719",
    "end": "126079"
  },
  {
    "text": "pre-process your data you then try to",
    "start": "126079",
    "end": "128959"
  },
  {
    "text": "figure out which records you want to",
    "start": "128959",
    "end": "130679"
  },
  {
    "text": "compare in a fast way and a scalable way",
    "start": "130679",
    "end": "133360"
  },
  {
    "text": "you compute similarity between them or",
    "start": "133360",
    "end": "135959"
  },
  {
    "text": "in some way you may generate you can",
    "start": "135959",
    "end": "137360"
  },
  {
    "text": "call this sort of your feature",
    "start": "137360",
    "end": "138480"
  },
  {
    "text": "generation step and then you might score",
    "start": "138480",
    "end": "140640"
  },
  {
    "text": "them this might be rules based scoring",
    "start": "140640",
    "end": "142239"
  },
  {
    "text": "or this might be based on some ml model",
    "start": "142239",
    "end": "144200"
  },
  {
    "text": "where you score and they're essentially",
    "start": "144200",
    "end": "145440"
  },
  {
    "text": "forming scores or weighted edges between",
    "start": "145440",
    "end": "147879"
  },
  {
    "text": "these records and at some point",
    "start": "147879",
    "end": "150040"
  },
  {
    "text": "reconciling all those weighted edges",
    "start": "150040",
    "end": "151599"
  },
  {
    "text": "into a final set of disjoint entities um",
    "start": "151599",
    "end": "155160"
  },
  {
    "text": "the real takeaway from this we wanted",
    "start": "155160",
    "end": "158000"
  },
  {
    "text": "efficient and scalable data processing",
    "start": "158000",
    "end": "159640"
  },
  {
    "text": "for the solution so we chose spark um",
    "start": "159640",
    "end": "163280"
  },
  {
    "text": "why not any other data frame API you",
    "start": "163280",
    "end": "165720"
  },
  {
    "text": "know our team mostly Works in Python uh",
    "start": "165720",
    "end": "168239"
  },
  {
    "text": "had proven scalability we had already",
    "start": "168239",
    "end": "170560"
  },
  {
    "text": "deployed spark in our infrastructure so",
    "start": "170560",
    "end": "173120"
  },
  {
    "text": "it wasn't we weren't going to get a lot",
    "start": "173120",
    "end": "174360"
  },
  {
    "text": "of traction to say hey I want to run a",
    "start": "174360",
    "end": "175920"
  },
  {
    "text": "dask cluster um we already had support",
    "start": "175920",
    "end": "178440"
  },
  {
    "text": "within sort of our SDK we used to write",
    "start": "178440",
    "end": "181200"
  },
  {
    "text": "the uh pipelines in uh this is Cube flow",
    "start": "181200",
    "end": "184080"
  },
  {
    "text": "pipelines and Spark did have an",
    "start": "184080",
    "end": "186360"
  },
  {
    "text": "extension graph frame so it did have",
    "start": "186360",
    "end": "187879"
  },
  {
    "text": "some graph support that might be useful",
    "start": "187879",
    "end": "189640"
  },
  {
    "text": "down the line um the rest of this you",
    "start": "189640",
    "end": "191840"
  },
  {
    "text": "see down here is just sort of an",
    "start": "191840",
    "end": "193239"
  },
  {
    "text": "overview of the text act that I use to",
    "start": "193239",
    "end": "195200"
  },
  {
    "text": "sort of build this initial",
    "start": "195200",
    "end": "196879"
  },
  {
    "text": "solution and so what's the problem right",
    "start": "196879",
    "end": "199280"
  },
  {
    "text": "if it's not broke how do you convince in",
    "start": "199280",
    "end": "201879"
  },
  {
    "text": "a startup especially I'm going to spend",
    "start": "201879",
    "end": "204080"
  },
  {
    "text": "the next three months building an",
    "start": "204080",
    "end": "206040"
  },
  {
    "text": "entirely new thing with different",
    "start": "206040",
    "end": "208080"
  },
  {
    "text": "tools uh and get probably the same",
    "start": "208080",
    "end": "210200"
  },
  {
    "text": "solution like we weren't saying we're",
    "start": "210200",
    "end": "212000"
  },
  {
    "text": "going to get better n resolution um so",
    "start": "212000",
    "end": "215760"
  },
  {
    "text": "the problem for us and we've noticed and",
    "start": "215760",
    "end": "217439"
  },
  {
    "text": "on our ml infrastructure side is there",
    "start": "217439",
    "end": "219640"
  },
  {
    "text": "was pretty slow iteration and it got",
    "start": "219640",
    "end": "221560"
  },
  {
    "text": "even worse with spark uh we're a small",
    "start": "221560",
    "end": "224280"
  },
  {
    "text": "team so we ourselves were actually",
    "start": "224280",
    "end": "226680"
  },
  {
    "text": "supporting all the spark jobs even the",
    "start": "226680",
    "end": "228599"
  },
  {
    "text": "images below them um it was a pretty",
    "start": "228599",
    "end": "231040"
  },
  {
    "text": "high entry barrier so beyond me a lot of",
    "start": "231040",
    "end": "233280"
  },
  {
    "text": "people would have a lot of trouble",
    "start": "233280",
    "end": "234640"
  },
  {
    "text": "actually onboarding to this and getting",
    "start": "234640",
    "end": "236040"
  },
  {
    "text": "used to deploying spark jobs monitoring",
    "start": "236040",
    "end": "238360"
  },
  {
    "text": "them going into netes and figuring out",
    "start": "238360",
    "end": "240799"
  },
  {
    "text": "the logs for it and very painful to",
    "start": "240799",
    "end": "242840"
  },
  {
    "text": "debug and obviously for a lot of dsml or",
    "start": "242840",
    "end": "245680"
  },
  {
    "text": "I guess is what we call now ai type",
    "start": "245680",
    "end": "247480"
  },
  {
    "text": "things uh you're probably going to do",
    "start": "247480",
    "end": "249360"
  },
  {
    "text": "more complex udfs and more than likely",
    "start": "249360",
    "end": "251760"
  },
  {
    "text": "or not you're going to do something bad",
    "start": "251760",
    "end": "253280"
  },
  {
    "text": "and you're going to hit out of memory",
    "start": "253280",
    "end": "254680"
  },
  {
    "text": "with those and it can be a little tricky",
    "start": "254680",
    "end": "257199"
  },
  {
    "text": "um we are also very tied to our internal",
    "start": "257199",
    "end": "259680"
  },
  {
    "text": "Java that's used for our standard",
    "start": "259680",
    "end": "261199"
  },
  {
    "text": "services so I had the fun time of when",
    "start": "261199",
    "end": "263880"
  },
  {
    "text": "we updated Java 17 that I then had to",
    "start": "263880",
    "end": "266199"
  },
  {
    "text": "upgrade pi4j and then I had to update",
    "start": "266199",
    "end": "267960"
  },
  {
    "text": "pis spark and then I had update hoodie",
    "start": "267960",
    "end": "270400"
  },
  {
    "text": "it just wasn't fun so we worked with our",
    "start": "270400",
    "end": "273199"
  },
  {
    "text": "ml infrastructure team we said okay we",
    "start": "273199",
    "end": "275440"
  },
  {
    "text": "kind of came across two different themes",
    "start": "275440",
    "end": "277840"
  },
  {
    "text": "one um we want python first tooling so",
    "start": "277840",
    "end": "281960"
  },
  {
    "text": "one big change we made we said no more",
    "start": "281960",
    "end": "283520"
  },
  {
    "text": "basil for python we're going to move",
    "start": "283520",
    "end": "285240"
  },
  {
    "text": "everything into",
    "start": "285240",
    "end": "286479"
  },
  {
    "text": "poetry and the next thing was unified",
    "start": "286479",
    "end": "289720"
  },
  {
    "text": "compute so as we started migrating a lot",
    "start": "289720",
    "end": "292520"
  },
  {
    "text": "of this tooling one was poetry one was",
    "start": "292520",
    "end": "294280"
  },
  {
    "text": "metaflow the question came up people are",
    "start": "294280",
    "end": "296880"
  },
  {
    "text": "interested in using Ray for model",
    "start": "296880",
    "end": "298360"
  },
  {
    "text": "training and tuning we don't have the",
    "start": "298360",
    "end": "300039"
  },
  {
    "text": "resources to support both spark and Ray",
    "start": "300039",
    "end": "302800"
  },
  {
    "text": "could we somehow use Ray to just do",
    "start": "302800",
    "end": "305919"
  },
  {
    "text": "everything and this is where daff comes",
    "start": "305919",
    "end": "308199"
  },
  {
    "text": "in so from their website directly I'm",
    "start": "308199",
    "end": "311000"
  },
  {
    "text": "just going to read it it's easier than",
    "start": "311000",
    "end": "312240"
  },
  {
    "text": "paraphrasing it's a distributed query",
    "start": "312240",
    "end": "314280"
  },
  {
    "text": "engine for large scale data processing",
    "start": "314280",
    "end": "316080"
  },
  {
    "text": "in Python uh under the hood it's",
    "start": "316080",
    "end": "317800"
  },
  {
    "text": "implemented in Rust why are we talking",
    "start": "317800",
    "end": "319960"
  },
  {
    "text": "about a ray uh their primary integration",
    "start": "319960",
    "end": "322400"
  },
  {
    "text": "is Ray to actually do this in a",
    "start": "322400",
    "end": "324280"
  },
  {
    "text": "distributed way um some other highlights",
    "start": "324280",
    "end": "327360"
  },
  {
    "text": "uh it's using a patriate arrow format on",
    "start": "327360",
    "end": "329720"
  },
  {
    "text": "under the hood uh pretty easy to work",
    "start": "329720",
    "end": "331520"
  },
  {
    "text": "with uh it's a lazy evaluation data",
    "start": "331520",
    "end": "333560"
  },
  {
    "text": "frame API they are targeting multimodal",
    "start": "333560",
    "end": "336440"
  },
  {
    "text": "support and they know that everyone",
    "start": "336440",
    "end": "338160"
  },
  {
    "text": "wants to be Cloud native and also have",
    "start": "338160",
    "end": "339680"
  },
  {
    "text": "some data catalog support like uh patchy",
    "start": "339680",
    "end": "342319"
  },
  {
    "text": "Iceberg and here on the right hand side",
    "start": "342319",
    "end": "344639"
  },
  {
    "text": "I'm just showing you example syntax so",
    "start": "344639",
    "end": "346800"
  },
  {
    "text": "this is not actual code we're using in",
    "start": "346800",
    "end": "348360"
  },
  {
    "text": "anything this should just give you a",
    "start": "348360",
    "end": "349759"
  },
  {
    "text": "flavor that the API itself feels very",
    "start": "349759",
    "end": "353039"
  },
  {
    "text": "much like spark so if you had to",
    "start": "353039",
    "end": "354919"
  },
  {
    "text": "transition over to it it's not going to",
    "start": "354919",
    "end": "356240"
  },
  {
    "text": "be a big surprise now there are some",
    "start": "356240",
    "end": "358039"
  },
  {
    "text": "differences it's not word for word from",
    "start": "358039",
    "end": "359800"
  },
  {
    "text": "a spark API um they made changes that",
    "start": "359800",
    "end": "362319"
  },
  {
    "text": "they felt were best for their",
    "start": "362319",
    "end": "365400"
  },
  {
    "text": "API why test on this project uh we could",
    "start": "365400",
    "end": "368440"
  },
  {
    "text": "just say because I was a willing guinea",
    "start": "368440",
    "end": "369880"
  },
  {
    "text": "pig that said just give me the time I'd",
    "start": "369880",
    "end": "371680"
  },
  {
    "text": "love to try this um but really if you",
    "start": "371680",
    "end": "373960"
  },
  {
    "text": "look at this full pipeline we kind of",
    "start": "373960",
    "end": "375639"
  },
  {
    "text": "have a a flavor of everything uh we have",
    "start": "375639",
    "end": "378160"
  },
  {
    "text": "some custom Transformations we do on on",
    "start": "378160",
    "end": "380800"
  },
  {
    "text": "ingestion and also when we do scoring we",
    "start": "380800",
    "end": "383280"
  },
  {
    "text": "have to do some joins and shuffles when",
    "start": "383280",
    "end": "384759"
  },
  {
    "text": "we do blocking stage it already is using",
    "start": "384759",
    "end": "386919"
  },
  {
    "text": "a lot of our Tech stack uh Iceberg and",
    "start": "386919",
    "end": "388880"
  },
  {
    "text": "metlow",
    "start": "388880",
    "end": "390280"
  },
  {
    "text": "um so it seemed like a good project to",
    "start": "390280",
    "end": "391960"
  },
  {
    "text": "say you know sort of dog food this and",
    "start": "391960",
    "end": "393599"
  },
  {
    "text": "figure out does it work and I was the",
    "start": "393599",
    "end": "396000"
  },
  {
    "text": "guinea pig that said was it easy to",
    "start": "396000",
    "end": "397479"
  },
  {
    "text": "migrate and actually do the same thing",
    "start": "397479",
    "end": "399639"
  },
  {
    "text": "and did I feel like I was actually",
    "start": "399639",
    "end": "400880"
  },
  {
    "text": "getting more",
    "start": "400880",
    "end": "402840"
  },
  {
    "text": "efficiency um",
    "start": "402840",
    "end": "405960"
  },
  {
    "text": "so from a performance standpoint we",
    "start": "405960",
    "end": "408520"
  },
  {
    "text": "looked at",
    "start": "408520",
    "end": "409599"
  },
  {
    "text": "Transformations uh daff team is going to",
    "start": "409599",
    "end": "411520"
  },
  {
    "text": "give some you know will'll give their",
    "start": "411520",
    "end": "412639"
  },
  {
    "text": "benchmarks some more standard",
    "start": "412639",
    "end": "413800"
  },
  {
    "text": "Transformations as you know in our cases",
    "start": "413800",
    "end": "415680"
  },
  {
    "text": "we're kind of doing more complicated",
    "start": "415680",
    "end": "417199"
  },
  {
    "text": "things sometimes so for example we use",
    "start": "417199",
    "end": "419160"
  },
  {
    "text": "uh this open source Library lib postal",
    "start": "419160",
    "end": "421160"
  },
  {
    "text": "that parses instructed address data when",
    "start": "421160",
    "end": "423199"
  },
  {
    "text": "we get external data about restaurants",
    "start": "423199",
    "end": "425840"
  },
  {
    "text": "uh we have someone built a Cuisine",
    "start": "425840",
    "end": "427680"
  },
  {
    "text": "classification inference model we'd love",
    "start": "427680",
    "end": "429319"
  },
  {
    "text": "to apply that in here and it's using you",
    "start": "429319",
    "end": "431560"
  },
  {
    "text": "know Bert and a tensorflow model",
    "start": "431560",
    "end": "433400"
  },
  {
    "text": "underneath it uh we do some additional",
    "start": "433400",
    "end": "435319"
  },
  {
    "text": "location data enrichment um so how does",
    "start": "435319",
    "end": "437879"
  },
  {
    "text": "daft handle this looks very much like",
    "start": "437879",
    "end": "439800"
  },
  {
    "text": "spark you have a standard UDF um which",
    "start": "439800",
    "end": "443120"
  },
  {
    "text": "I'm showing here which is just taking",
    "start": "443120",
    "end": "444720"
  },
  {
    "text": "some lat Longs and converting them to an",
    "start": "444720",
    "end": "446440"
  },
  {
    "text": "H3 index which is a spatial index system",
    "start": "446440",
    "end": "449319"
  },
  {
    "text": "and and they also have what they call",
    "start": "449319",
    "end": "450280"
  },
  {
    "text": "stateful udfs and it's very similar to",
    "start": "450280",
    "end": "452280"
  },
  {
    "text": "what you can kind of get in raise map",
    "start": "452280",
    "end": "453759"
  },
  {
    "text": "batches you can initialize some very",
    "start": "453759",
    "end": "456039"
  },
  {
    "text": "expensive thing at the beginning I need",
    "start": "456039",
    "end": "457599"
  },
  {
    "text": "to load in my lid postal data and then I",
    "start": "457599",
    "end": "460120"
  },
  {
    "text": "go through and I parse my addresses or I",
    "start": "460120",
    "end": "462000"
  },
  {
    "text": "need to load in my models and then I'm",
    "start": "462000",
    "end": "463440"
  },
  {
    "text": "going to run prediction with my Cuisine",
    "start": "463440",
    "end": "464840"
  },
  {
    "text": "inference model um so we originally",
    "start": "464840",
    "end": "467319"
  },
  {
    "text": "tried this obviously bet ver The Bert",
    "start": "467319",
    "end": "469800"
  },
  {
    "text": "vectorizer on these very large menus it",
    "start": "469800",
    "end": "471879"
  },
  {
    "text": "could be hundreds to even up to like a",
    "start": "471879",
    "end": "473759"
  },
  {
    "text": "thousand menu items was saturating CPU",
    "start": "473759",
    "end": "476440"
  },
  {
    "text": "we didn't run it on GPU we took a very",
    "start": "476440",
    "end": "479560"
  },
  {
    "text": "has cluster 10 workers and we were",
    "start": "479560",
    "end": "481159"
  },
  {
    "text": "getting you know 100,000 records per",
    "start": "481159",
    "end": "482840"
  },
  {
    "text": "minute took about 3 to G 3 to 5 gigabyt",
    "start": "482840",
    "end": "485360"
  },
  {
    "text": "per task CU lid postal takes about two",
    "start": "485360",
    "end": "487159"
  },
  {
    "text": "to three gigs every time you loaded in",
    "start": "487159",
    "end": "488720"
  },
  {
    "text": "on each instance um this was a net new",
    "start": "488720",
    "end": "491400"
  },
  {
    "text": "thing we tried we didn't even bother to",
    "start": "491400",
    "end": "493159"
  },
  {
    "text": "try to do something like this in spark",
    "start": "493159",
    "end": "495440"
  },
  {
    "text": "um and we thought it'd be an interesting",
    "start": "495440",
    "end": "497800"
  },
  {
    "text": "thing something net new that we didn't",
    "start": "497800",
    "end": "499280"
  },
  {
    "text": "have anything to work from could we",
    "start": "499280",
    "end": "500720"
  },
  {
    "text": "actually just implement it from scratch",
    "start": "500720",
    "end": "502520"
  },
  {
    "text": "it worked um and you know the scale",
    "start": "502520",
    "end": "506199"
  },
  {
    "text": "itself obviously it's not super fast so",
    "start": "506199",
    "end": "509599"
  },
  {
    "text": "give be something more realistic in",
    "start": "509599",
    "end": "511080"
  },
  {
    "text": "terms of throughput um when we do",
    "start": "511080",
    "end": "513200"
  },
  {
    "text": "scoring we had trained a model also on",
    "start": "513200",
    "end": "515320"
  },
  {
    "text": "Ray just using Ray train and Ray tune um",
    "start": "515320",
    "end": "518240"
  },
  {
    "text": "to score the weighted edges and",
    "start": "518240",
    "end": "520719"
  },
  {
    "text": "essentially we had the same setup 10",
    "start": "520719",
    "end": "522640"
  },
  {
    "text": "workers and you know we could process",
    "start": "522640",
    "end": "524440"
  },
  {
    "text": "three million records a second under",
    "start": "524440",
    "end": "526240"
  },
  {
    "text": "that um much more much lower memory",
    "start": "526240",
    "end": "529360"
  },
  {
    "text": "usage per test because obviously this",
    "start": "529360",
    "end": "530839"
  },
  {
    "text": "boosted model was much smaller when it",
    "start": "530839",
    "end": "532440"
  },
  {
    "text": "was actually loaded into each instance",
    "start": "532440",
    "end": "534560"
  },
  {
    "text": "um Daft also has a beta feature to",
    "start": "534560",
    "end": "536160"
  },
  {
    "text": "improve State full udfs via what they",
    "start": "536160",
    "end": "537959"
  },
  {
    "text": "call actor pool projections",
    "start": "537959",
    "end": "540079"
  },
  {
    "text": "um they'll could probably tell you more",
    "start": "540079",
    "end": "541880"
  },
  {
    "text": "about that I don't want to go into too",
    "start": "541880",
    "end": "542839"
  },
  {
    "text": "many details to save us time uh the",
    "start": "542839",
    "end": "545680"
  },
  {
    "text": "setup of the UDF I have here as before",
    "start": "545680",
    "end": "547880"
  },
  {
    "text": "they actually implemented stateful udfs",
    "start": "547880",
    "end": "549920"
  },
  {
    "text": "this might be how you do it in spark",
    "start": "549920",
    "end": "551519"
  },
  {
    "text": "right you kind of wrap it in a factory",
    "start": "551519",
    "end": "553320"
  },
  {
    "text": "so that your your model's inside of that",
    "start": "553320",
    "end": "555200"
  },
  {
    "text": "and then you run prediction um you could",
    "start": "555200",
    "end": "557360"
  },
  {
    "text": "easily change this just to be a state",
    "start": "557360",
    "end": "558760"
  },
  {
    "text": "fill UDF",
    "start": "558760",
    "end": "560519"
  },
  {
    "text": "instead um for the join steps so",
    "start": "560519",
    "end": "562920"
  },
  {
    "text": "blocking or indexing is really like let",
    "start": "562920",
    "end": "565079"
  },
  {
    "text": "me find some features that I can very",
    "start": "565079",
    "end": "566839"
  },
  {
    "text": "quickly Whittle down what is important",
    "start": "566839",
    "end": "568880"
  },
  {
    "text": "to me we deal with a lot of spatial data",
    "start": "568880",
    "end": "570800"
  },
  {
    "text": "specifically what restaurants are close",
    "start": "570800",
    "end": "572279"
  },
  {
    "text": "to each other uh the way we did it in",
    "start": "572279",
    "end": "574320"
  },
  {
    "text": "spark and the way we do it in Daft is we",
    "start": "574320",
    "end": "576160"
  },
  {
    "text": "actually just use uh in this H3 spatial",
    "start": "576160",
    "end": "579560"
  },
  {
    "text": "index library and we use what's called a",
    "start": "579560",
    "end": "581000"
  },
  {
    "text": "k ring to approximate a radius and the",
    "start": "581000",
    "end": "583880"
  },
  {
    "text": "the joint is actually very simple uh you",
    "start": "583880",
    "end": "586200"
  },
  {
    "text": "just end up exploding the Kring on one",
    "start": "586200",
    "end": "588720"
  },
  {
    "text": "side and joining and you essentially get",
    "start": "588720",
    "end": "590240"
  },
  {
    "text": "everything within one k rring of each",
    "start": "590240",
    "end": "591800"
  },
  {
    "text": "other uh this is an interesting joining",
    "start": "591800",
    "end": "594399"
  },
  {
    "text": "because you can start with a small",
    "start": "594399",
    "end": "595800"
  },
  {
    "text": "number of Records let's say 2 million",
    "start": "595800",
    "end": "597399"
  },
  {
    "text": "and then it explodes out to 500 million",
    "start": "597399",
    "end": "599079"
  },
  {
    "text": "records record and this is just like a",
    "start": "599079",
    "end": "600279"
  },
  {
    "text": "subset of our data um one interesting",
    "start": "600279",
    "end": "603079"
  },
  {
    "text": "thing to note here and things you",
    "start": "603079",
    "end": "604320"
  },
  {
    "text": "probably run into in spark is sometimes",
    "start": "604320",
    "end": "606360"
  },
  {
    "text": "you have to do some manual partitioning",
    "start": "606360",
    "end": "607839"
  },
  {
    "text": "because Spark's not smart enough to know",
    "start": "607839",
    "end": "609560"
  },
  {
    "text": "my data is going to explode in some way",
    "start": "609560",
    "end": "612120"
  },
  {
    "text": "um we had to do the same thing with Daft",
    "start": "612120",
    "end": "614440"
  },
  {
    "text": "although to be honest I did not have to",
    "start": "614440",
    "end": "616120"
  },
  {
    "text": "do this in spark because I think aqe has",
    "start": "616120",
    "end": "618200"
  },
  {
    "text": "gotten a little bit smarter in terms of",
    "start": "618200",
    "end": "619680"
  },
  {
    "text": "estimating like you know how big is your",
    "start": "619680",
    "end": "622320"
  },
  {
    "text": "data going to be in memory or how how",
    "start": "622320",
    "end": "624839"
  },
  {
    "text": "you know is this explosion expected 500",
    "start": "624839",
    "end": "627160"
  },
  {
    "text": "million uh using the same Ray cluster",
    "start": "627160",
    "end": "630120"
  },
  {
    "text": "size we could generate this 500 million",
    "start": "630120",
    "end": "632480"
  },
  {
    "text": "in less than 5 minutes looking at the",
    "start": "632480",
    "end": "634440"
  },
  {
    "text": "throughput of the scoring before which",
    "start": "634440",
    "end": "636200"
  },
  {
    "text": "is like 3 million per second we can also",
    "start": "636200",
    "end": "637720"
  },
  {
    "text": "do all the scoring of each of our",
    "start": "637720",
    "end": "638920"
  },
  {
    "text": "candidate pairs in less than five",
    "start": "638920",
    "end": "640480"
  },
  {
    "text": "minutes in this",
    "start": "640480",
    "end": "641920"
  },
  {
    "text": "case um for Integrations we needed it to",
    "start": "641920",
    "end": "644680"
  },
  {
    "text": "integrate with all of our tooling uh the",
    "start": "644680",
    "end": "647839"
  },
  {
    "text": "team has been putting a lot of work into",
    "start": "647839",
    "end": "650160"
  },
  {
    "text": "read and write support uh they utilize",
    "start": "650160",
    "end": "652480"
  },
  {
    "text": "Pi Iceberg under the hood uh it is not",
    "start": "652480",
    "end": "655160"
  },
  {
    "text": "as fully featured as Sparks API so we're",
    "start": "655160",
    "end": "657920"
  },
  {
    "text": "talking about merge into schema",
    "start": "657920",
    "end": "659600"
  },
  {
    "text": "Evolution but we are able to wrap Daft",
    "start": "659600",
    "end": "662000"
  },
  {
    "text": "and P iberg API to effectively uh get to",
    "start": "662000",
    "end": "665519"
  },
  {
    "text": "that stage uh as we adapted metaflow our",
    "start": "665519",
    "end": "669320"
  },
  {
    "text": "ml ener team actually built custom uh",
    "start": "669320",
    "end": "672000"
  },
  {
    "text": "plugins for it so that we could easily",
    "start": "672000",
    "end": "673720"
  },
  {
    "text": "package up our entire local and third",
    "start": "673720",
    "end": "675760"
  },
  {
    "text": "party dependencies and then ship them",
    "start": "675760",
    "end": "677639"
  },
  {
    "text": "off to array cluster let it run it just",
    "start": "677639",
    "end": "680519"
  },
  {
    "text": "sits there and waiting and then once it",
    "start": "680519",
    "end": "682320"
  },
  {
    "text": "finishes it says okay I can go on to the",
    "start": "682320",
    "end": "684040"
  },
  {
    "text": "next step and that's what this example",
    "start": "684040",
    "end": "686079"
  },
  {
    "text": "metaflow pipeline is",
    "start": "686079",
    "end": "688079"
  },
  {
    "text": "showing um so my sort of initial",
    "start": "688079",
    "end": "690880"
  },
  {
    "text": "conclusions of dog fooding this for this",
    "start": "690880",
    "end": "693839"
  },
  {
    "text": "specific sort of not huge example but a",
    "start": "693839",
    "end": "696200"
  },
  {
    "text": "real life example that we needed to run",
    "start": "696200",
    "end": "698120"
  },
  {
    "text": "in a scalable way it ran fine on",
    "start": "698120",
    "end": "700519"
  },
  {
    "text": "similarly size resources but it did",
    "start": "700519",
    "end": "702880"
  },
  {
    "text": "require some additional tuning when we",
    "start": "702880",
    "end": "704440"
  },
  {
    "text": "did move stuff over and I would be lying",
    "start": "704440",
    "end": "706040"
  },
  {
    "text": "if there were some days I said man can I",
    "start": "706040",
    "end": "708000"
  },
  {
    "text": "just use spark in this new",
    "start": "708000",
    "end": "709800"
  },
  {
    "text": "environment um can we easily integrate",
    "start": "709800",
    "end": "712920"
  },
  {
    "text": "into our stack the answer was very much",
    "start": "712920",
    "end": "714639"
  },
  {
    "text": "yes I wasn't dealing with jars to say do",
    "start": "714639",
    "end": "717200"
  },
  {
    "text": "I have the right jar so I can write read",
    "start": "717200",
    "end": "719360"
  },
  {
    "text": "and write from S3 do I have the right",
    "start": "719360",
    "end": "721320"
  },
  {
    "text": "Hive metastore jars it just kind of just",
    "start": "721320",
    "end": "723399"
  },
  {
    "text": "worked uh but the iceberg API was",
    "start": "723399",
    "end": "725639"
  },
  {
    "text": "slightly incomplete uh easy to migrate",
    "start": "725639",
    "end": "728600"
  },
  {
    "text": "the syntax was similar as you could see",
    "start": "728600",
    "end": "730720"
  },
  {
    "text": "and the UDF support kind of made it",
    "start": "730720",
    "end": "732240"
  },
  {
    "text": "relatively easy it's just there is some",
    "start": "732240",
    "end": "734279"
  },
  {
    "text": "functionality gaps and it's because",
    "start": "734279",
    "end": "735760"
  },
  {
    "text": "spark has been around a long time so for",
    "start": "735760",
    "end": "737560"
  },
  {
    "text": "example window functions still in",
    "start": "737560",
    "end": "739240"
  },
  {
    "text": "process in the works so I had to modify",
    "start": "739240",
    "end": "741279"
  },
  {
    "text": "some of my code to actually support that",
    "start": "741279",
    "end": "744000"
  },
  {
    "text": "uh did it improve my efficiency so one",
    "start": "744000",
    "end": "745880"
  },
  {
    "text": "thing I really like local executor",
    "start": "745880",
    "end": "748000"
  },
  {
    "text": "support so no need start up array",
    "start": "748000",
    "end": "749800"
  },
  {
    "text": "cluster to actually try stuff local you",
    "start": "749800",
    "end": "751680"
  },
  {
    "text": "can write your unit tests without",
    "start": "751680",
    "end": "753920"
  },
  {
    "text": "worrying about you know configuring it",
    "start": "753920",
    "end": "755480"
  },
  {
    "text": "so that you actually have something",
    "start": "755480",
    "end": "756560"
  },
  {
    "text": "running uh no Java really it's not about",
    "start": "756560",
    "end": "760199"
  },
  {
    "text": "Java here it's the fact that I didn't",
    "start": "760199",
    "end": "761959"
  },
  {
    "text": "have to think about rust while I was",
    "start": "761959",
    "end": "763440"
  },
  {
    "text": "writing in Python right you weren't",
    "start": "763440",
    "end": "765279"
  },
  {
    "text": "thinking about ah do I have the right",
    "start": "765279",
    "end": "766680"
  },
  {
    "text": "jars to handle this specific thing minus",
    "start": "766680",
    "end": "769279"
  },
  {
    "text": "the occasional P3 Panic that would show",
    "start": "769279",
    "end": "771600"
  },
  {
    "text": "up in airor traces sometimes but that",
    "start": "771600",
    "end": "773880"
  },
  {
    "text": "was usually my fault uh very responsive",
    "start": "773880",
    "end": "776639"
  },
  {
    "text": "team they're very friendly I bug them",
    "start": "776639",
    "end": "778440"
  },
  {
    "text": "all the time uh I said please please",
    "start": "778440",
    "end": "780600"
  },
  {
    "text": "give me partition right support in pi",
    "start": "780600",
    "end": "782079"
  },
  {
    "text": "Iceberg uh they're waiting uh in iceberg",
    "start": "782079",
    "end": "785639"
  },
  {
    "text": "they're waiting for pi Iceberg team to",
    "start": "785639",
    "end": "786959"
  },
  {
    "text": "do it and finally I said you know what",
    "start": "786959",
    "end": "788320"
  },
  {
    "text": "we'll do it we'll build it and they and",
    "start": "788320",
    "end": "789760"
  },
  {
    "text": "they did with all the supported",
    "start": "789760",
    "end": "791720"
  },
  {
    "text": "Transformations uh again efficiency when",
    "start": "791720",
    "end": "794600"
  },
  {
    "text": "you're missing functionality you're",
    "start": "794600",
    "end": "795680"
  },
  {
    "text": "going have to do workarounds if you have",
    "start": "795680",
    "end": "796880"
  },
  {
    "text": "to do workarounds it's probably going to",
    "start": "796880",
    "end": "797959"
  },
  {
    "text": "require more time uh Ray plus staff",
    "start": "797959",
    "end": "800399"
  },
  {
    "text": "specific so Ray runtime environments are",
    "start": "800399",
    "end": "802399"
  },
  {
    "text": "really useful here uh it just shortens",
    "start": "802399",
    "end": "804519"
  },
  {
    "text": "the startup time right so if you can",
    "start": "804519",
    "end": "806160"
  },
  {
    "text": "cash your runtime environment it works",
    "start": "806160",
    "end": "808279"
  },
  {
    "text": "uh scaled seamless ly there is no",
    "start": "808279",
    "end": "810160"
  },
  {
    "text": "dedicated UI you're depending on the ray",
    "start": "810160",
    "end": "811760"
  },
  {
    "text": "UI in this case instead of a spark UI",
    "start": "811760",
    "end": "814120"
  },
  {
    "text": "and we're still going you know we're",
    "start": "814120",
    "end": "815440"
  },
  {
    "text": "using dedicated autoscaling Ray clusters",
    "start": "815440",
    "end": "817560"
  },
  {
    "text": "right now via Cub but these jobs expect",
    "start": "817560",
    "end": "821760"
  },
  {
    "text": "isolation so we may need transient",
    "start": "821760",
    "end": "823680"
  },
  {
    "text": "clusters um so that was my experience",
    "start": "823680",
    "end": "825839"
  },
  {
    "text": "with it I hope this gives you an idea of",
    "start": "825839",
    "end": "828240"
  },
  {
    "text": "like if this would be an interesting",
    "start": "828240",
    "end": "829639"
  },
  {
    "text": "thing you want to try uh thank you",
    "start": "829639",
    "end": "833180"
  },
  {
    "text": "[Applause]",
    "start": "833180",
    "end": "836270"
  }
]