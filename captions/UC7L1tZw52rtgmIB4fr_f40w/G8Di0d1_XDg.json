[
  {
    "start": "0",
    "end": "104000"
  },
  {
    "text": "[Music]",
    "start": "170",
    "end": "14480"
  },
  {
    "text": "hello i'm",
    "start": "14480",
    "end": "15120"
  },
  {
    "text": "bing i'm a software engineer at any",
    "start": "15120",
    "end": "16880"
  },
  {
    "text": "scale today i'm going to present data",
    "start": "16880",
    "end": "19199"
  },
  {
    "text": "processing on ray",
    "start": "19199",
    "end": "21600"
  },
  {
    "text": "oh there are three things i'm going to",
    "start": "21600",
    "end": "23039"
  },
  {
    "text": "talk today first i'll iterate the",
    "start": "23039",
    "end": "25279"
  },
  {
    "text": "importance of general purple system for",
    "start": "25279",
    "end": "27599"
  },
  {
    "text": "ml infrastructure",
    "start": "27599",
    "end": "29039"
  },
  {
    "text": "second i'll introduce ray and its",
    "start": "29039",
    "end": "31039"
  },
  {
    "text": "previous limitations in large-scale data",
    "start": "31039",
    "end": "33280"
  },
  {
    "text": "processing workloads",
    "start": "33280",
    "end": "34640"
  },
  {
    "text": "and lastly i'll go through the",
    "start": "34640",
    "end": "36079"
  },
  {
    "text": "architectural improvement we've made",
    "start": "36079",
    "end": "37760"
  },
  {
    "text": "over the past year to overcome that",
    "start": "37760",
    "end": "41040"
  },
  {
    "text": "let me start from introducing myself i'm",
    "start": "41040",
    "end": "43200"
  },
  {
    "text": "a software engineer at any scale",
    "start": "43200",
    "end": "44960"
  },
  {
    "text": "i have primarily worked on open source",
    "start": "44960",
    "end": "46879"
  },
  {
    "text": "project ray as a commuter",
    "start": "46879",
    "end": "48960"
  },
  {
    "text": "and my current focus is to improve data",
    "start": "48960",
    "end": "51039"
  },
  {
    "text": "processing support on top of ray",
    "start": "51039",
    "end": "52960"
  },
  {
    "text": "which is why i'm having a talk today",
    "start": "52960",
    "end": "56160"
  },
  {
    "text": "okay then let's start from why we need a",
    "start": "56160",
    "end": "58320"
  },
  {
    "text": "general purpose system for data",
    "start": "58320",
    "end": "60399"
  },
  {
    "text": "processing",
    "start": "60399",
    "end": "62878"
  },
  {
    "text": "in the modern ml infrastructure there",
    "start": "63199",
    "end": "65119"
  },
  {
    "text": "are there are lots of complexities in",
    "start": "65119",
    "end": "67200"
  },
  {
    "text": "composing different types of workload in",
    "start": "67200",
    "end": "69200"
  },
  {
    "text": "different specialized systems",
    "start": "69200",
    "end": "71040"
  },
  {
    "text": "for example this is the one i actually",
    "start": "71040",
    "end": "73280"
  },
  {
    "text": "have seen in the industry",
    "start": "73280",
    "end": "75040"
  },
  {
    "text": "first it needs to do oh it needs to run",
    "start": "75040",
    "end": "77280"
  },
  {
    "text": "etl jobs using the spark cluster",
    "start": "77280",
    "end": "79360"
  },
  {
    "text": "load and shuffle the data to the",
    "start": "79360",
    "end": "80880"
  },
  {
    "text": "training cluster which for example can",
    "start": "80880",
    "end": "82880"
  },
  {
    "text": "use horror vote",
    "start": "82880",
    "end": "84000"
  },
  {
    "text": "and after that it uses different type of",
    "start": "84000",
    "end": "86080"
  },
  {
    "text": "systems to run hyper primary tuning",
    "start": "86080",
    "end": "88720"
  },
  {
    "text": "for example in this case all people can",
    "start": "88720",
    "end": "90640"
  },
  {
    "text": "use ray tune and ray for hyperparametric",
    "start": "90640",
    "end": "93280"
  },
  {
    "text": "and sometimes the training jobs need to",
    "start": "93280",
    "end": "95600"
  },
  {
    "text": "offload",
    "start": "95600",
    "end": "96560"
  },
  {
    "text": "their work back to the spark cluster",
    "start": "96560",
    "end": "98320"
  },
  {
    "text": "because they need some data processing",
    "start": "98320",
    "end": "100000"
  },
  {
    "text": "work again and there could be many other",
    "start": "100000",
    "end": "102079"
  },
  {
    "text": "scenarios that can complicate the male",
    "start": "102079",
    "end": "103759"
  },
  {
    "text": "jobs",
    "start": "103759",
    "end": "105520"
  },
  {
    "start": "104000",
    "end": "104000"
  },
  {
    "text": "oh then what are the problems here",
    "start": "105520",
    "end": "107600"
  },
  {
    "text": "firstly job composition across multiple",
    "start": "107600",
    "end": "110159"
  },
  {
    "text": "different systems",
    "start": "110159",
    "end": "111119"
  },
  {
    "text": "can actually increase the system",
    "start": "111119",
    "end": "113520"
  },
  {
    "text": "complexity",
    "start": "113520",
    "end": "114399"
  },
  {
    "text": "because it requires to maintain the",
    "start": "114399",
    "end": "116399"
  },
  {
    "text": "multiple systems",
    "start": "116399",
    "end": "117840"
  },
  {
    "text": "it requires you to organize the",
    "start": "117840",
    "end": "119280"
  },
  {
    "text": "workflows schedule jobs that",
    "start": "119280",
    "end": "121280"
  },
  {
    "text": "that are that are you know resources uh",
    "start": "121280",
    "end": "124240"
  },
  {
    "text": "take care of dependencies among jobs and",
    "start": "124240",
    "end": "126240"
  },
  {
    "text": "reason about failures",
    "start": "126240",
    "end": "127439"
  },
  {
    "text": "and there are many other complexities",
    "start": "127439",
    "end": "129039"
  },
  {
    "text": "you need to handle between different",
    "start": "129039",
    "end": "130959"
  },
  {
    "text": "uh specialized systems there are so many",
    "start": "130959",
    "end": "133840"
  },
  {
    "text": "other possible complexities",
    "start": "133840",
    "end": "135760"
  },
  {
    "text": "um also at the same time managing",
    "start": "135760",
    "end": "138080"
  },
  {
    "text": "multiple different systems could be",
    "start": "138080",
    "end": "139680"
  },
  {
    "text": "incurring maintenance costs",
    "start": "139680",
    "end": "141360"
  },
  {
    "text": "for example people might need separate",
    "start": "141360",
    "end": "143120"
  },
  {
    "text": "teams and",
    "start": "143120",
    "end": "144480"
  },
  {
    "text": "and to manage the system there's high",
    "start": "144480",
    "end": "146560"
  },
  {
    "text": "learning curve as well as",
    "start": "146560",
    "end": "148160"
  },
  {
    "text": "um you also need to understand uh",
    "start": "148160",
    "end": "151360"
  },
  {
    "text": "each system to efficiently operate and",
    "start": "151360",
    "end": "153120"
  },
  {
    "text": "debug sometimes",
    "start": "153120",
    "end": "154560"
  },
  {
    "text": "it's also not efficient to actually",
    "start": "154560",
    "end": "156400"
  },
  {
    "text": "operate two different systems for two",
    "start": "156400",
    "end": "157920"
  },
  {
    "text": "different workloads like data processing",
    "start": "157920",
    "end": "159760"
  },
  {
    "text": "and ml",
    "start": "159760",
    "end": "160400"
  },
  {
    "text": "workload because in order to communicate",
    "start": "160400",
    "end": "163120"
  },
  {
    "text": "those uh data between jobs you'll",
    "start": "163120",
    "end": "165120"
  },
  {
    "text": "always need to go through the",
    "start": "165120",
    "end": "166480"
  },
  {
    "text": "intermediate layer like target files",
    "start": "166480",
    "end": "170000"
  },
  {
    "start": "169000",
    "end": "169000"
  },
  {
    "text": "then what if you have a general purpose",
    "start": "170000",
    "end": "171680"
  },
  {
    "text": "system if a single system can run",
    "start": "171680",
    "end": "174080"
  },
  {
    "text": "different type of workload",
    "start": "174080",
    "end": "175360"
  },
  {
    "text": "it can actually remove the complexity of",
    "start": "175360",
    "end": "177519"
  },
  {
    "text": "jobs because it can actually group",
    "start": "177519",
    "end": "179360"
  },
  {
    "text": "jobs more logically rather than type of",
    "start": "179360",
    "end": "181280"
  },
  {
    "text": "workloads and those",
    "start": "181280",
    "end": "182640"
  },
  {
    "text": "different complexities while you're",
    "start": "182640",
    "end": "184319"
  },
  {
    "text": "composing all different systems",
    "start": "184319",
    "end": "186159"
  },
  {
    "text": "is going to be reduced for example some",
    "start": "186159",
    "end": "188720"
  },
  {
    "text": "of uh",
    "start": "188720",
    "end": "189519"
  },
  {
    "text": "pre-processing feature processing",
    "start": "189519",
    "end": "191280"
  },
  {
    "text": "workload can be run in the same cluster",
    "start": "191280",
    "end": "193200"
  },
  {
    "text": "as the training workload",
    "start": "193200",
    "end": "194480"
  },
  {
    "text": "if that makes more sense and if they",
    "start": "194480",
    "end": "196239"
  },
  {
    "text": "make things simpler",
    "start": "196239",
    "end": "197519"
  },
  {
    "text": "and second it is all a lot easier to",
    "start": "197519",
    "end": "199360"
  },
  {
    "text": "understand and operate systems because",
    "start": "199360",
    "end": "201280"
  },
  {
    "text": "you just need to understand a single",
    "start": "201280",
    "end": "202720"
  },
  {
    "text": "system you just need to understand you",
    "start": "202720",
    "end": "204319"
  },
  {
    "text": "just need to",
    "start": "204319",
    "end": "204959"
  },
  {
    "text": "learn you just need to teach one system",
    "start": "204959",
    "end": "207040"
  },
  {
    "text": "to your team",
    "start": "207040",
    "end": "208159"
  },
  {
    "text": "and lastly uh some type of optimization",
    "start": "208159",
    "end": "210720"
  },
  {
    "text": "like you just partition data in memory",
    "start": "210720",
    "end": "212959"
  },
  {
    "text": "just caching in the memory uh without",
    "start": "212959",
    "end": "215040"
  },
  {
    "text": "actually going through the project file",
    "start": "215040",
    "end": "216799"
  },
  {
    "text": "it should be possible with this kind of",
    "start": "216799",
    "end": "218799"
  },
  {
    "text": "approach",
    "start": "218799",
    "end": "220640"
  },
  {
    "start": "220000",
    "end": "220000"
  },
  {
    "text": "so as you can see this type of system",
    "start": "220640",
    "end": "222400"
  },
  {
    "text": "composition could become like",
    "start": "222400",
    "end": "224080"
  },
  {
    "text": "this with a single general purpose",
    "start": "224080",
    "end": "225920"
  },
  {
    "text": "system and multiple libraries on top of",
    "start": "225920",
    "end": "228080"
  },
  {
    "text": "it",
    "start": "228080",
    "end": "229280"
  },
  {
    "text": "oh then what could be though it's a good",
    "start": "229280",
    "end": "230879"
  },
  {
    "text": "candidate here um",
    "start": "230879",
    "end": "232400"
  },
  {
    "text": "i'd like to introduce ray like because",
    "start": "232400",
    "end": "234159"
  },
  {
    "text": "it's rate summit oh and",
    "start": "234159",
    "end": "235599"
  },
  {
    "text": "i'm talking about ray so i'd like to",
    "start": "235599",
    "end": "237200"
  },
  {
    "text": "introduce ray today as a solution of",
    "start": "237200",
    "end": "238879"
  },
  {
    "text": "this problem uh what is ray",
    "start": "238879",
    "end": "241040"
  },
  {
    "text": "ray is a simple library for distributed",
    "start": "241040",
    "end": "242959"
  },
  {
    "text": "computing which provides very intuitive",
    "start": "242959",
    "end": "245599"
  },
  {
    "text": "um",
    "start": "245599",
    "end": "246080"
  },
  {
    "text": "apis to actually compose this",
    "start": "246080",
    "end": "248080"
  },
  {
    "text": "distributed computation",
    "start": "248080",
    "end": "250640"
  },
  {
    "text": "and it's also general purpose so you can",
    "start": "250640",
    "end": "252640"
  },
  {
    "text": "use the same system for different",
    "start": "252640",
    "end": "255040"
  },
  {
    "text": "purposes like machine learning training",
    "start": "255040",
    "end": "256880"
  },
  {
    "text": "hyper parameter tuning data processing",
    "start": "256880",
    "end": "258720"
  },
  {
    "text": "and etc",
    "start": "258720",
    "end": "259919"
  },
  {
    "text": "and it's also an ecosystem of libraries",
    "start": "259919",
    "end": "262320"
  },
  {
    "text": "so it has a lot it supports a lot of",
    "start": "262320",
    "end": "264160"
  },
  {
    "text": "different type of workloads",
    "start": "264160",
    "end": "265840"
  },
  {
    "text": "um that usually requires separate",
    "start": "265840",
    "end": "269120"
  },
  {
    "text": "systems normally",
    "start": "269120",
    "end": "270400"
  },
  {
    "text": "and it's also high performance and it",
    "start": "270400",
    "end": "272479"
  },
  {
    "text": "runs really",
    "start": "272479",
    "end": "273520"
  },
  {
    "text": "well or it it keeps the performance even",
    "start": "273520",
    "end": "276560"
  },
  {
    "text": "in the large scale",
    "start": "276560",
    "end": "278880"
  },
  {
    "text": "so this is a simple python program um i",
    "start": "278880",
    "end": "282240"
  },
  {
    "text": "i prepare to demonstrate ray um so as",
    "start": "282240",
    "end": "284880"
  },
  {
    "text": "you can see the left side",
    "start": "284880",
    "end": "286240"
  },
  {
    "text": "is function on the right hand side it's",
    "start": "286240",
    "end": "287840"
  },
  {
    "text": "a class it's like very simple function",
    "start": "287840",
    "end": "290000"
  },
  {
    "text": "in class",
    "start": "290000",
    "end": "290639"
  },
  {
    "text": "and in ray you just need to annotate",
    "start": "290639",
    "end": "292880"
  },
  {
    "text": "function and class using ray.remote and",
    "start": "292880",
    "end": "294880"
  },
  {
    "text": "just by adding dot remote",
    "start": "294880",
    "end": "296720"
  },
  {
    "text": "um after the function invocation or",
    "start": "296720",
    "end": "299040"
  },
  {
    "text": "class initialization",
    "start": "299040",
    "end": "300880"
  },
  {
    "text": "you're able to actually execute them in",
    "start": "300880",
    "end": "302479"
  },
  {
    "text": "the distributed systems and run them",
    "start": "302479",
    "end": "304240"
  },
  {
    "text": "in the distributed manner",
    "start": "304240",
    "end": "307360"
  },
  {
    "text": "array is a framework for distributed",
    "start": "307360",
    "end": "309520"
  },
  {
    "text": "computing it allows you to write",
    "start": "309520",
    "end": "311360"
  },
  {
    "text": "distributed applications like a single",
    "start": "311360",
    "end": "313039"
  },
  {
    "text": "motion program",
    "start": "313039",
    "end": "314080"
  },
  {
    "text": "and many distributed system problems",
    "start": "314080",
    "end": "316080"
  },
  {
    "text": "like fault tolerance",
    "start": "316080",
    "end": "317280"
  },
  {
    "text": "communication fault um the scaling and",
    "start": "317280",
    "end": "319919"
  },
  {
    "text": "etc",
    "start": "319919",
    "end": "320560"
  },
  {
    "text": "are handled by ray it also has many",
    "start": "320560",
    "end": "323199"
  },
  {
    "text": "distributed libraries built on top of it",
    "start": "323199",
    "end": "325440"
  },
  {
    "text": "both native libraries like ray tune rlab",
    "start": "325440",
    "end": "328080"
  },
  {
    "text": "and resurf",
    "start": "328080",
    "end": "328960"
  },
  {
    "text": "and other third-party integrations",
    "start": "328960",
    "end": "331520"
  },
  {
    "text": "libraries",
    "start": "331520",
    "end": "332240"
  },
  {
    "text": "like modin or desk on ray mars for data",
    "start": "332240",
    "end": "335120"
  },
  {
    "text": "processing",
    "start": "335120",
    "end": "335919"
  },
  {
    "text": "hogging face space for nlp and horrible",
    "start": "335919",
    "end": "338240"
  },
  {
    "text": "for",
    "start": "338240",
    "end": "339039"
  },
  {
    "text": "machine learning training and many",
    "start": "339039",
    "end": "340479"
  },
  {
    "text": "others",
    "start": "340479",
    "end": "342240"
  },
  {
    "text": "all these features clearly indicate the",
    "start": "342240",
    "end": "344000"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "raid is a great candidate to be a",
    "start": "344000",
    "end": "345759"
  },
  {
    "text": "general purpose system",
    "start": "345759",
    "end": "347120"
  },
  {
    "text": "to simplify this end-to-end ml pipeline",
    "start": "347120",
    "end": "349600"
  },
  {
    "text": "computation",
    "start": "349600",
    "end": "350960"
  },
  {
    "text": "for example instead of maintaining",
    "start": "350960",
    "end": "352479"
  },
  {
    "text": "clusters for different workloads you can",
    "start": "352479",
    "end": "354320"
  },
  {
    "text": "use spark on ray for",
    "start": "354320",
    "end": "355520"
  },
  {
    "text": "the etl job like data processing job um",
    "start": "355520",
    "end": "358240"
  },
  {
    "text": "you can use the library called hub",
    "start": "358240",
    "end": "359840"
  },
  {
    "text": "for uh loading and shuffling the data",
    "start": "359840",
    "end": "361840"
  },
  {
    "text": "you can use horrible done array for",
    "start": "361840",
    "end": "363440"
  },
  {
    "text": "training and actually use raychan",
    "start": "363440",
    "end": "365360"
  },
  {
    "text": "within the same ray cluster uh before",
    "start": "365360",
    "end": "368880"
  },
  {
    "text": "going into the next section let me",
    "start": "368880",
    "end": "370319"
  },
  {
    "text": "actually",
    "start": "370319",
    "end": "371199"
  },
  {
    "text": "explain what was the previous limitation",
    "start": "371199",
    "end": "373440"
  },
  {
    "text": "ray hat",
    "start": "373440",
    "end": "374800"
  },
  {
    "text": "in order to support this kind of",
    "start": "374800",
    "end": "376560"
  },
  {
    "text": "end-to-end mli cycle",
    "start": "376560",
    "end": "378160"
  },
  {
    "text": "so ray was really really annoyed focused",
    "start": "378160",
    "end": "380400"
  },
  {
    "text": "at at the beginning",
    "start": "380400",
    "end": "381680"
  },
  {
    "text": "and although it was good at running ml",
    "start": "381680",
    "end": "383280"
  },
  {
    "text": "workload at scale the data processing",
    "start": "383280",
    "end": "385440"
  },
  {
    "text": "support wasn't good enough because",
    "start": "385440",
    "end": "387360"
  },
  {
    "text": "the systems didn't have enough features",
    "start": "387360",
    "end": "390160"
  },
  {
    "text": "or didn't have some necessary features",
    "start": "390160",
    "end": "392080"
  },
  {
    "text": "to support",
    "start": "392080",
    "end": "392720"
  },
  {
    "text": "large scale data persisting",
    "start": "392720",
    "end": "395840"
  },
  {
    "text": "and it's been improved a lot over the",
    "start": "395840",
    "end": "397199"
  },
  {
    "text": "last half year and that's what i'm gonna",
    "start": "397199",
    "end": "398880"
  },
  {
    "text": "talk from now on",
    "start": "398880",
    "end": "401039"
  },
  {
    "start": "400000",
    "end": "400000"
  },
  {
    "text": "so before we actually talk about this",
    "start": "401039",
    "end": "402800"
  },
  {
    "text": "architectural improvement we've made",
    "start": "402800",
    "end": "404639"
  },
  {
    "text": "let's see what has been enabled after of",
    "start": "404639",
    "end": "407120"
  },
  {
    "text": "this robust data",
    "start": "407120",
    "end": "408000"
  },
  {
    "text": "processing support on top of ray uh the",
    "start": "408000",
    "end": "410560"
  },
  {
    "text": "first thing that was enabled is",
    "start": "410560",
    "end": "412479"
  },
  {
    "text": "the stronger third-party integration so",
    "start": "412479",
    "end": "415520"
  },
  {
    "text": "for example the desk on ray now has a",
    "start": "415520",
    "end": "418080"
  },
  {
    "text": "much stronger scalability and",
    "start": "418080",
    "end": "419520"
  },
  {
    "text": "performance",
    "start": "419520",
    "end": "420240"
  },
  {
    "text": "and we actually have seen um very high",
    "start": "420240",
    "end": "422479"
  },
  {
    "text": "performance in really really large scale",
    "start": "422479",
    "end": "424560"
  },
  {
    "text": "like four petabyte of data processing",
    "start": "424560",
    "end": "426720"
  },
  {
    "text": "we actually have seen four times cost",
    "start": "426720",
    "end": "428720"
  },
  {
    "text": "saving uh",
    "start": "428720",
    "end": "430000"
  },
  {
    "text": "compared to the regular desk distributed",
    "start": "430000",
    "end": "432880"
  },
  {
    "text": "backend",
    "start": "432880",
    "end": "433759"
  },
  {
    "text": "uh and also the mars which is the",
    "start": "433759",
    "end": "436960"
  },
  {
    "text": "library developed by alibaba um",
    "start": "436960",
    "end": "439120"
  },
  {
    "text": "for scientific data processing um they",
    "start": "439120",
    "end": "442000"
  },
  {
    "text": "decided to have the first integration",
    "start": "442000",
    "end": "444400"
  },
  {
    "text": "uh with ray as well",
    "start": "444400",
    "end": "449360"
  },
  {
    "text": "another benefit is the interoperability",
    "start": "449520",
    "end": "452479"
  },
  {
    "text": "between",
    "start": "452479",
    "end": "452960"
  },
  {
    "text": "etl feature processing and ml training",
    "start": "452960",
    "end": "455199"
  },
  {
    "text": "workloads",
    "start": "455199",
    "end": "456319"
  },
  {
    "text": "it became much more smoother for example",
    "start": "456319",
    "end": "458800"
  },
  {
    "text": "you can use spark on ray or desk on ray",
    "start": "458800",
    "end": "461199"
  },
  {
    "text": "in the same cluster as the distributed",
    "start": "461199",
    "end": "463120"
  },
  {
    "text": "piper",
    "start": "463120",
    "end": "463840"
  },
  {
    "text": "tensorflow so you can actually run the",
    "start": "463840",
    "end": "466879"
  },
  {
    "text": "training and",
    "start": "466879",
    "end": "467840"
  },
  {
    "text": "feature processing in the same cluster",
    "start": "467840",
    "end": "469919"
  },
  {
    "text": "and it's also",
    "start": "469919",
    "end": "470960"
  },
  {
    "text": "possible um to use these things with",
    "start": "470960",
    "end": "473919"
  },
  {
    "text": "other",
    "start": "473919",
    "end": "474319"
  },
  {
    "text": "or kind of native training libraries",
    "start": "474319",
    "end": "476160"
  },
  {
    "text": "like xd boost on ray",
    "start": "476160",
    "end": "479840"
  },
  {
    "text": "so in conclusion it became much smoother",
    "start": "479919",
    "end": "482560"
  },
  {
    "text": "and it became possible",
    "start": "482560",
    "end": "484000"
  },
  {
    "text": "to make ray in charge of distributed n2l",
    "start": "484000",
    "end": "486560"
  },
  {
    "text": "ml",
    "start": "486560",
    "end": "487039"
  },
  {
    "text": "computation or with various libraries",
    "start": "487039",
    "end": "489440"
  },
  {
    "text": "that satisfy your need",
    "start": "489440",
    "end": "491199"
  },
  {
    "text": "like for example you can use different",
    "start": "491199",
    "end": "492800"
  },
  {
    "text": "libraries for training different",
    "start": "492800",
    "end": "494479"
  },
  {
    "text": "libraries for tuning and data processing",
    "start": "494479",
    "end": "496479"
  },
  {
    "text": "and etc",
    "start": "496479",
    "end": "498879"
  },
  {
    "start": "498000",
    "end": "498000"
  },
  {
    "text": "then let's say the short real world",
    "start": "498879",
    "end": "500800"
  },
  {
    "text": "example um in this code example",
    "start": "500800",
    "end": "502800"
  },
  {
    "text": "we are going to use three different",
    "start": "502800",
    "end": "504080"
  },
  {
    "text": "libraries some odin or known as a",
    "start": "504080",
    "end": "507039"
  },
  {
    "text": "distributed pandas",
    "start": "507039",
    "end": "508240"
  },
  {
    "text": "on top of gray oh by the way note that",
    "start": "508240",
    "end": "510319"
  },
  {
    "text": "you can also use",
    "start": "510319",
    "end": "511520"
  },
  {
    "text": "just desk or desk on ray in this case",
    "start": "511520",
    "end": "514640"
  },
  {
    "text": "and xd bluestone ray which is for",
    "start": "514640",
    "end": "516800"
  },
  {
    "text": "distributed extra boost training",
    "start": "516800",
    "end": "518399"
  },
  {
    "text": "and also ration for hyper parameter",
    "start": "518399",
    "end": "520159"
  },
  {
    "text": "training",
    "start": "520159",
    "end": "521518"
  },
  {
    "text": "so this is one of examples that enable",
    "start": "521519",
    "end": "523919"
  },
  {
    "text": "the training and data processing",
    "start": "523919",
    "end": "525600"
  },
  {
    "text": "in the same job so at first you connect",
    "start": "525600",
    "end": "528560"
  },
  {
    "text": "to the ray cluster using rada init",
    "start": "528560",
    "end": "530959"
  },
  {
    "text": "and you get the column names and import",
    "start": "530959",
    "end": "533120"
  },
  {
    "text": "loading so boolean actually supports",
    "start": "533120",
    "end": "535279"
  },
  {
    "text": "exactly the same api as regular panda so",
    "start": "535279",
    "end": "538080"
  },
  {
    "text": "if you just use the pandas api you can",
    "start": "538080",
    "end": "540080"
  },
  {
    "text": "actually think modern is going to",
    "start": "540080",
    "end": "541839"
  },
  {
    "text": "be in charge of the partitioning and the",
    "start": "541839",
    "end": "543680"
  },
  {
    "text": "distributed data processing",
    "start": "543680",
    "end": "545360"
  },
  {
    "text": "so in this case you're reading the csv",
    "start": "545360",
    "end": "547200"
  },
  {
    "text": "file using the modein library",
    "start": "547200",
    "end": "550000"
  },
  {
    "text": "and then you partition this column data",
    "start": "550000",
    "end": "552320"
  },
  {
    "text": "but for the training and validation",
    "start": "552320",
    "end": "554320"
  },
  {
    "text": "of course you can have the testing data",
    "start": "554320",
    "end": "555920"
  },
  {
    "text": "set and you pass this data frame into",
    "start": "555920",
    "end": "559120"
  },
  {
    "text": "the data loading um abstraction for",
    "start": "559120",
    "end": "561360"
  },
  {
    "text": "extra boost array which is spray",
    "start": "561360",
    "end": "563360"
  },
  {
    "text": "d matrix and as you can see from here",
    "start": "563360",
    "end": "565680"
  },
  {
    "text": "you are basically running the training",
    "start": "565680",
    "end": "567440"
  },
  {
    "text": "and this extremely stone array basically",
    "start": "567440",
    "end": "569600"
  },
  {
    "text": "uh runs the trainings up",
    "start": "569600",
    "end": "571040"
  },
  {
    "text": "and at the same time runs the hyper",
    "start": "571040",
    "end": "572480"
  },
  {
    "text": "primary tuning to find the best uh hyper",
    "start": "572480",
    "end": "574880"
  },
  {
    "text": "parameter for this",
    "start": "574880",
    "end": "576160"
  },
  {
    "text": "machine learning model so it's the",
    "start": "576160",
    "end": "579680"
  },
  {
    "text": "diagram that explains what's happening",
    "start": "579680",
    "end": "581600"
  },
  {
    "text": "under the hood so as i mentioned when",
    "start": "581600",
    "end": "583360"
  },
  {
    "text": "you use smoothing",
    "start": "583360",
    "end": "584480"
  },
  {
    "text": "or read csv basically it's doing",
    "start": "584480",
    "end": "587200"
  },
  {
    "text": "arbitrarily fine-grained partitioning",
    "start": "587200",
    "end": "589440"
  },
  {
    "text": "and this data is passed into the extreme",
    "start": "589440",
    "end": "591519"
  },
  {
    "text": "stone ray and each actor",
    "start": "591519",
    "end": "593200"
  },
  {
    "text": "is working as a trainer and they're",
    "start": "593200",
    "end": "594880"
  },
  {
    "text": "training on",
    "start": "594880",
    "end": "596640"
  },
  {
    "text": "the model while they're communicating",
    "start": "596640",
    "end": "598640"
  },
  {
    "text": "with raytune",
    "start": "598640",
    "end": "601279"
  },
  {
    "text": "so then let's dive into what we've done",
    "start": "602160",
    "end": "604000"
  },
  {
    "text": "over the last year and see how ray has",
    "start": "604000",
    "end": "606079"
  },
  {
    "text": "evolved to support large scale data",
    "start": "606079",
    "end": "607600"
  },
  {
    "text": "processing",
    "start": "607600",
    "end": "609279"
  },
  {
    "start": "608000",
    "end": "608000"
  },
  {
    "text": "let me first go through what types of",
    "start": "609279",
    "end": "610959"
  },
  {
    "text": "data processing is out there",
    "start": "610959",
    "end": "612640"
  },
  {
    "text": "well the most common workload is the etl",
    "start": "612640",
    "end": "614800"
  },
  {
    "text": "type of workload",
    "start": "614800",
    "end": "615760"
  },
  {
    "text": "or usually people um write the jobs that",
    "start": "615760",
    "end": "619200"
  },
  {
    "text": "run like over many hours",
    "start": "619200",
    "end": "620880"
  },
  {
    "text": "which basically extract the data from",
    "start": "620880",
    "end": "623279"
  },
  {
    "text": "some file or some other data sources",
    "start": "623279",
    "end": "625680"
  },
  {
    "text": "transform them into different format",
    "start": "625680",
    "end": "627519"
  },
  {
    "text": "that are more useful for",
    "start": "627519",
    "end": "628880"
  },
  {
    "text": "for their purpose and load them into the",
    "start": "628880",
    "end": "630959"
  },
  {
    "text": "different um outcome data source",
    "start": "630959",
    "end": "634240"
  },
  {
    "text": "there's also one of other common",
    "start": "634240",
    "end": "636560"
  },
  {
    "text": "examples this kind of etl",
    "start": "636560",
    "end": "638399"
  },
  {
    "text": "result is going to be streamed into the",
    "start": "638399",
    "end": "640320"
  },
  {
    "text": "ml training which is called data ingest",
    "start": "640320",
    "end": "642880"
  },
  {
    "text": "so sometimes you want to or you",
    "start": "642880",
    "end": "644800"
  },
  {
    "text": "basically do feature processing",
    "start": "644800",
    "end": "646560"
  },
  {
    "text": "and the processed data basically needs",
    "start": "646560",
    "end": "649519"
  },
  {
    "text": "to be fed into the ml workload and this",
    "start": "649519",
    "end": "651600"
  },
  {
    "text": "is called data and just",
    "start": "651600",
    "end": "652880"
  },
  {
    "text": "type of data processing and of course",
    "start": "652880",
    "end": "655200"
  },
  {
    "text": "you have other",
    "start": "655200",
    "end": "655920"
  },
  {
    "text": "type of data processing like analytics",
    "start": "655920",
    "end": "658160"
  },
  {
    "text": "which uh your",
    "start": "658160",
    "end": "659440"
  },
  {
    "text": "the data scientist and doing more um",
    "start": "659440",
    "end": "661440"
  },
  {
    "text": "interactive analytics using like sql",
    "start": "661440",
    "end": "663760"
  },
  {
    "text": "or jupyter notebook and etc and also",
    "start": "663760",
    "end": "666640"
  },
  {
    "text": "streaming processing which um",
    "start": "666640",
    "end": "668399"
  },
  {
    "text": "has different type of requirements for",
    "start": "668399",
    "end": "671360"
  },
  {
    "text": "systems and",
    "start": "671360",
    "end": "672800"
  },
  {
    "text": "there are many uh there are there's a",
    "start": "672800",
    "end": "674800"
  },
  {
    "text": "great system like flank that supports",
    "start": "674800",
    "end": "676480"
  },
  {
    "text": "this",
    "start": "676480",
    "end": "678079"
  },
  {
    "start": "677000",
    "end": "677000"
  },
  {
    "text": "for ray we'd like to make sure ray be",
    "start": "678079",
    "end": "680000"
  },
  {
    "text": "the best choice to run ml workloads so",
    "start": "680000",
    "end": "682000"
  },
  {
    "text": "we focused on the",
    "start": "682000",
    "end": "683040"
  },
  {
    "text": "uh supporting etl and also data in this",
    "start": "683040",
    "end": "685360"
  },
  {
    "text": "type of workload which is the most",
    "start": "685360",
    "end": "686880"
  },
  {
    "text": "common type of workload for machine",
    "start": "686880",
    "end": "688399"
  },
  {
    "text": "learning so etl is used for feature",
    "start": "688399",
    "end": "690399"
  },
  {
    "text": "processing mostly",
    "start": "690399",
    "end": "691519"
  },
  {
    "text": "and etl to ml is really really common",
    "start": "691519",
    "end": "693680"
  },
  {
    "text": "type of workload",
    "start": "693680",
    "end": "694959"
  },
  {
    "text": "um this presentation will mostly cover",
    "start": "694959",
    "end": "697200"
  },
  {
    "text": "how array satisfy requirements to be",
    "start": "697200",
    "end": "699120"
  },
  {
    "text": "robust backend",
    "start": "699120",
    "end": "700160"
  },
  {
    "text": "to support the first type of workloads",
    "start": "700160",
    "end": "702320"
  },
  {
    "text": "because other two",
    "start": "702320",
    "end": "703360"
  },
  {
    "text": "has like a different requirements and",
    "start": "703360",
    "end": "705279"
  },
  {
    "text": "while we're going to support them in the",
    "start": "705279",
    "end": "706880"
  },
  {
    "text": "long term",
    "start": "706880",
    "end": "707760"
  },
  {
    "text": "uh that they're not they're not our main",
    "start": "707760",
    "end": "709839"
  },
  {
    "text": "focus in their short term so",
    "start": "709839",
    "end": "711200"
  },
  {
    "text": "the um the talk is mostly covered about",
    "start": "711200",
    "end": "714160"
  },
  {
    "text": "the first two use cases",
    "start": "714160",
    "end": "717279"
  },
  {
    "text": "okay then let's actually think about",
    "start": "717279",
    "end": "719279"
  },
  {
    "start": "718000",
    "end": "718000"
  },
  {
    "text": "what are the important features",
    "start": "719279",
    "end": "720959"
  },
  {
    "text": "that data processing back-end should",
    "start": "720959",
    "end": "722399"
  },
  {
    "text": "support um firstly it should support",
    "start": "722399",
    "end": "724480"
  },
  {
    "text": "seminars distributed execution",
    "start": "724480",
    "end": "726320"
  },
  {
    "text": "and also it should support robust",
    "start": "726320",
    "end": "728160"
  },
  {
    "text": "distributed memory management",
    "start": "728160",
    "end": "731120"
  },
  {
    "start": "730000",
    "end": "730000"
  },
  {
    "text": "so then how did ray look like before it",
    "start": "731120",
    "end": "733040"
  },
  {
    "text": "satisfied the first requirement but",
    "start": "733040",
    "end": "734720"
  },
  {
    "text": "not the second one let's actually dive",
    "start": "734720",
    "end": "736480"
  },
  {
    "text": "into more details",
    "start": "736480",
    "end": "737920"
  },
  {
    "text": "um ray is designed to be highly",
    "start": "737920",
    "end": "740000"
  },
  {
    "text": "performant general purpose systems",
    "start": "740000",
    "end": "742240"
  },
  {
    "text": "that says it oh it was created",
    "start": "742240",
    "end": "744160"
  },
  {
    "text": "distributed execution",
    "start": "744160",
    "end": "745440"
  },
  {
    "text": "um it has really simple and",
    "start": "745440",
    "end": "746880"
  },
  {
    "text": "straightforward execution model and also",
    "start": "746880",
    "end": "749200"
  },
  {
    "text": "apis",
    "start": "749200",
    "end": "750079"
  },
  {
    "text": "and it's built with scalability and fall",
    "start": "750079",
    "end": "752160"
  },
  {
    "text": "tolerance in mind",
    "start": "752160",
    "end": "753519"
  },
  {
    "text": "and also coming with the distributed",
    "start": "753519",
    "end": "755360"
  },
  {
    "text": "object store or utilize",
    "start": "755360",
    "end": "757040"
  },
  {
    "text": "utilizing the shared memory which",
    "start": "757040",
    "end": "758880"
  },
  {
    "text": "basically makes the memory usage very",
    "start": "758880",
    "end": "760880"
  },
  {
    "text": "efficient",
    "start": "760880",
    "end": "761839"
  },
  {
    "text": "and it also keeps the high performance",
    "start": "761839",
    "end": "764079"
  },
  {
    "text": "at even in large scale",
    "start": "764079",
    "end": "765600"
  },
  {
    "text": "the scheduler is not going to be bought",
    "start": "765600",
    "end": "766880"
  },
  {
    "text": "on it because it uses the decentralized",
    "start": "766880",
    "end": "768880"
  },
  {
    "text": "scheduler",
    "start": "768880",
    "end": "770480"
  },
  {
    "text": "conversely uh it didn't have the robust",
    "start": "770480",
    "end": "772880"
  },
  {
    "text": "distributed memory management",
    "start": "772880",
    "end": "774639"
  },
  {
    "text": "because ray was primarily focusing on ml",
    "start": "774639",
    "end": "777040"
  },
  {
    "text": "workload before",
    "start": "777040",
    "end": "778639"
  },
  {
    "text": "which usually doesn't require memory",
    "start": "778639",
    "end": "780480"
  },
  {
    "text": "intensive uh workloads like etl jobs",
    "start": "780480",
    "end": "784639"
  },
  {
    "text": "um there are three known problems the",
    "start": "784639",
    "end": "786959"
  },
  {
    "text": "first thing is the scheduling doesn't",
    "start": "786959",
    "end": "788720"
  },
  {
    "text": "consider",
    "start": "788720",
    "end": "789360"
  },
  {
    "text": "memory usage or local information and",
    "start": "789360",
    "end": "791839"
  },
  {
    "text": "the workloads could fail",
    "start": "791839",
    "end": "793279"
  },
  {
    "text": "when there's the data size that is",
    "start": "793279",
    "end": "795600"
  },
  {
    "text": "bigger than the memory capacity in the",
    "start": "795600",
    "end": "797440"
  },
  {
    "text": "cluster",
    "start": "797440",
    "end": "798320"
  },
  {
    "text": "and ray cluster was crashed or",
    "start": "798320",
    "end": "800240"
  },
  {
    "text": "deadlocked when there's still a large",
    "start": "800240",
    "end": "801839"
  },
  {
    "text": "memory pressure",
    "start": "801839",
    "end": "804560"
  },
  {
    "text": "uh to make sure ray supports large-scale",
    "start": "804720",
    "end": "806720"
  },
  {
    "text": "data processing well we will need to",
    "start": "806720",
    "end": "808240"
  },
  {
    "text": "make sure to have this robust",
    "start": "808240",
    "end": "810000"
  },
  {
    "text": "distributed memory management layer and",
    "start": "810000",
    "end": "811839"
  },
  {
    "text": "solve the problems",
    "start": "811839",
    "end": "812880"
  },
  {
    "text": "which is i just stated all the approach",
    "start": "812880",
    "end": "815200"
  },
  {
    "text": "we took",
    "start": "815200",
    "end": "816240"
  },
  {
    "text": "was to actually build on the simple",
    "start": "816240",
    "end": "818399"
  },
  {
    "text": "distributed software workload",
    "start": "818399",
    "end": "820000"
  },
  {
    "text": "and we wanted to make sure this works",
    "start": "820000",
    "end": "821760"
  },
  {
    "text": "really really well on top of ray in",
    "start": "821760",
    "end": "823760"
  },
  {
    "text": "at large scale so actually let's see",
    "start": "823760",
    "end": "827199"
  },
  {
    "text": "what uh",
    "start": "827199",
    "end": "828000"
  },
  {
    "text": "distributed shuffle means first um in",
    "start": "828000",
    "end": "830240"
  },
  {
    "text": "the distributed systems",
    "start": "830240",
    "end": "831839"
  },
  {
    "text": "dataset is usually stored in partitions",
    "start": "831839",
    "end": "834399"
  },
  {
    "text": "with each partition holding a group of",
    "start": "834399",
    "end": "836160"
  },
  {
    "text": "rows",
    "start": "836160",
    "end": "837120"
  },
  {
    "text": "and shuffle is basically the operation",
    "start": "837120",
    "end": "839199"
  },
  {
    "text": "over this data set",
    "start": "839199",
    "end": "840480"
  },
  {
    "text": "that redistribute data across its",
    "start": "840480",
    "end": "842639"
  },
  {
    "text": "partitions",
    "start": "842639",
    "end": "843839"
  },
  {
    "text": "oh it is a really important operation",
    "start": "843839",
    "end": "847120"
  },
  {
    "text": "uh because a lot of distributed data",
    "start": "847120",
    "end": "849920"
  },
  {
    "text": "processing algorithm",
    "start": "849920",
    "end": "851120"
  },
  {
    "text": "use this as a primitive for example",
    "start": "851120",
    "end": "853279"
  },
  {
    "text": "distributed sort needs distributed",
    "start": "853279",
    "end": "855120"
  },
  {
    "text": "shuffle behind the hood",
    "start": "855120",
    "end": "856399"
  },
  {
    "text": "like something like join or something",
    "start": "856399",
    "end": "858880"
  },
  {
    "text": "like um repartition",
    "start": "858880",
    "end": "860399"
  },
  {
    "text": "they are actually all work kind of work",
    "start": "860399",
    "end": "862800"
  },
  {
    "text": "like a",
    "start": "862800",
    "end": "863519"
  },
  {
    "text": "data processing algorithm that requires",
    "start": "863519",
    "end": "865440"
  },
  {
    "text": "distributed shuffle as permitted",
    "start": "865440",
    "end": "868639"
  },
  {
    "text": "oh then why did they focus on",
    "start": "868639",
    "end": "870000"
  },
  {
    "text": "distributed shortfall um it's because",
    "start": "870000",
    "end": "872720"
  },
  {
    "text": "the shuffle distributed shuffle stresses",
    "start": "872720",
    "end": "875199"
  },
  {
    "text": "the data processing systems",
    "start": "875199",
    "end": "877040"
  },
  {
    "text": "memory management layer so if we can",
    "start": "877040",
    "end": "879360"
  },
  {
    "text": "make sure um this is working very well",
    "start": "879360",
    "end": "882480"
  },
  {
    "text": "then we can make sure our memory",
    "start": "882480",
    "end": "883760"
  },
  {
    "text": "management layer is robust enough to",
    "start": "883760",
    "end": "885600"
  },
  {
    "text": "support large-scale data per system",
    "start": "885600",
    "end": "887519"
  },
  {
    "text": "it's because in distributed shuffle it's",
    "start": "887519",
    "end": "889440"
  },
  {
    "text": "very common the data",
    "start": "889440",
    "end": "890720"
  },
  {
    "text": "data set size is way larger than the",
    "start": "890720",
    "end": "892639"
  },
  {
    "text": "memory capacity in the cluster",
    "start": "892639",
    "end": "894399"
  },
  {
    "text": "and also shuffle basically requires to",
    "start": "894399",
    "end": "898000"
  },
  {
    "text": "shuffling all the data over the network",
    "start": "898000",
    "end": "899839"
  },
  {
    "text": "in the system so it basically",
    "start": "899839",
    "end": "901680"
  },
  {
    "text": "needs to stress the system a lot so then",
    "start": "901680",
    "end": "904880"
  },
  {
    "start": "903000",
    "end": "903000"
  },
  {
    "text": "how does shuffle work",
    "start": "904880",
    "end": "906240"
  },
  {
    "text": "uh as you can see shuffle consists of",
    "start": "906240",
    "end": "908560"
  },
  {
    "text": "map and reduced phases",
    "start": "908560",
    "end": "910000"
  },
  {
    "text": "um it's it's circle means task",
    "start": "910000",
    "end": "913040"
  },
  {
    "text": "and it's square means objects and",
    "start": "913040",
    "end": "916480"
  },
  {
    "text": "as you can see these objects at each map",
    "start": "916480",
    "end": "919120"
  },
  {
    "text": "task",
    "start": "919120",
    "end": "919600"
  },
  {
    "text": "is going to stream over to the reduced",
    "start": "919600",
    "end": "921760"
  },
  {
    "text": "task and they're shuffled here",
    "start": "921760",
    "end": "923519"
  },
  {
    "text": "so this is how the distributed shuffle",
    "start": "923519",
    "end": "926000"
  },
  {
    "text": "works",
    "start": "926000",
    "end": "928320"
  },
  {
    "text": "uh then let's start being equipped with",
    "start": "928959",
    "end": "930560"
  },
  {
    "text": "how race distributed object store works",
    "start": "930560",
    "end": "932320"
  },
  {
    "text": "before actually we go",
    "start": "932320",
    "end": "933360"
  },
  {
    "text": "deeper uh let me introduce them plasma",
    "start": "933360",
    "end": "936399"
  },
  {
    "text": "store here",
    "start": "936399",
    "end": "937040"
  },
  {
    "text": "so plasma store is the built-in shared",
    "start": "937040",
    "end": "939199"
  },
  {
    "text": "memory um distributed object store that",
    "start": "939199",
    "end": "941360"
  },
  {
    "text": "comes with ready for free",
    "start": "941360",
    "end": "942880"
  },
  {
    "text": "it was originally developed by ray for",
    "start": "942880",
    "end": "945199"
  },
  {
    "text": "the",
    "start": "945199",
    "end": "945920"
  },
  {
    "text": "shared memory performance optimization",
    "start": "945920",
    "end": "947839"
  },
  {
    "text": "and contributed to the error project",
    "start": "947839",
    "end": "949920"
  },
  {
    "text": "and we backported again for further",
    "start": "949920",
    "end": "952240"
  },
  {
    "text": "optimization",
    "start": "952240",
    "end": "953120"
  },
  {
    "text": "in this layer also plasma store as you",
    "start": "953120",
    "end": "956639"
  },
  {
    "text": "can see",
    "start": "956639",
    "end": "957199"
  },
  {
    "text": "um the first characteristic is there's",
    "start": "957199",
    "end": "959279"
  },
  {
    "text": "plasma store permission",
    "start": "959279",
    "end": "960800"
  },
  {
    "text": "and you can think they're local only and",
    "start": "960800",
    "end": "963680"
  },
  {
    "text": "they stores the ray objects in the",
    "start": "963680",
    "end": "965360"
  },
  {
    "text": "shared memory",
    "start": "965360",
    "end": "967120"
  },
  {
    "text": "and whenever there's a task then it's",
    "start": "967120",
    "end": "968959"
  },
  {
    "text": "object a for example",
    "start": "968959",
    "end": "970320"
  },
  {
    "text": "um this object a is basically um in",
    "start": "970320",
    "end": "973120"
  },
  {
    "text": "shared memory store",
    "start": "973120",
    "end": "974480"
  },
  {
    "text": "and we support zero copyright so each of",
    "start": "974480",
    "end": "976800"
  },
  {
    "text": "test doesn't need to actually copy them",
    "start": "976800",
    "end": "978480"
  },
  {
    "text": "into",
    "start": "978480",
    "end": "978959"
  },
  {
    "text": "the process memory um to use this object",
    "start": "978959",
    "end": "982720"
  },
  {
    "text": "so this can be uh use very efficient",
    "start": "982720",
    "end": "984800"
  },
  {
    "text": "memory usage",
    "start": "984800",
    "end": "986639"
  },
  {
    "text": "and plasma store also pull and push",
    "start": "986639",
    "end": "988959"
  },
  {
    "text": "objects on demand",
    "start": "988959",
    "end": "990240"
  },
  {
    "text": "so let's say you have two machines and",
    "start": "990240",
    "end": "991839"
  },
  {
    "text": "the task requires object a",
    "start": "991839",
    "end": "993920"
  },
  {
    "text": "and in this case um machine being each",
    "start": "993920",
    "end": "997600"
  },
  {
    "text": "object",
    "start": "997600",
    "end": "998079"
  },
  {
    "text": "so in this case machine a is basically",
    "start": "998079",
    "end": "1000560"
  },
  {
    "text": "pushing",
    "start": "1000560",
    "end": "1001120"
  },
  {
    "text": "object to version b so this task can",
    "start": "1001120",
    "end": "1003440"
  },
  {
    "text": "actually use this object",
    "start": "1003440",
    "end": "1005040"
  },
  {
    "text": "in this machine b",
    "start": "1005040",
    "end": "1007839"
  },
  {
    "text": "oh then let's start looking at some",
    "start": "1008560",
    "end": "1009920"
  },
  {
    "text": "architectural improvements we've made",
    "start": "1009920",
    "end": "1011839"
  },
  {
    "text": "to support distribution of the scale the",
    "start": "1011839",
    "end": "1014560"
  },
  {
    "text": "first",
    "start": "1014560",
    "end": "1014959"
  },
  {
    "text": "improvement we made was to improve",
    "start": "1014959",
    "end": "1016720"
  },
  {
    "text": "scheduling um originally ray didn't take",
    "start": "1016720",
    "end": "1019519"
  },
  {
    "text": "into account of locality information",
    "start": "1019519",
    "end": "1021279"
  },
  {
    "text": "when scheduling",
    "start": "1021279",
    "end": "1022959"
  },
  {
    "text": "oh and we realized this caused a couple",
    "start": "1022959",
    "end": "1024720"
  },
  {
    "text": "issues so",
    "start": "1024720",
    "end": "1026079"
  },
  {
    "text": "before explaining more more about this",
    "start": "1026079",
    "end": "1028160"
  },
  {
    "text": "let's actually see a diagram",
    "start": "1028160",
    "end": "1031199"
  },
  {
    "start": "1029000",
    "end": "1029000"
  },
  {
    "text": "so this is uh the example when there's",
    "start": "1031199",
    "end": "1033360"
  },
  {
    "text": "no locality over scheduling so as you",
    "start": "1033360",
    "end": "1035360"
  },
  {
    "text": "can see this test requires object a",
    "start": "1035360",
    "end": "1037360"
  },
  {
    "text": "and object a is in motion a but task is",
    "start": "1037360",
    "end": "1039760"
  },
  {
    "text": "scheduled on motion b because it",
    "start": "1039760",
    "end": "1041600"
  },
  {
    "text": "let's say it doesn't take into account",
    "start": "1041600",
    "end": "1043360"
  },
  {
    "text": "um this object",
    "start": "1043360",
    "end": "1045038"
  },
  {
    "text": "location then in this case in order to",
    "start": "1045039",
    "end": "1047600"
  },
  {
    "text": "execute this task on motion b",
    "start": "1047600",
    "end": "1049120"
  },
  {
    "text": "we need to push this object and have",
    "start": "1049120",
    "end": "1051840"
  },
  {
    "text": "unnecessary copy",
    "start": "1051840",
    "end": "1053440"
  },
  {
    "text": "so in this case if we can support",
    "start": "1053440",
    "end": "1055120"
  },
  {
    "text": "locality or scheduling we can have",
    "start": "1055120",
    "end": "1057039"
  },
  {
    "text": "much better memory usage in the cluster",
    "start": "1057039",
    "end": "1059039"
  },
  {
    "text": "because this task",
    "start": "1059039",
    "end": "1060240"
  },
  {
    "text": "object task is gonna be scheduled on the",
    "start": "1060240",
    "end": "1062400"
  },
  {
    "text": "machine the latest object a",
    "start": "1062400",
    "end": "1064400"
  },
  {
    "text": "so machine a doesn't the object a",
    "start": "1064400",
    "end": "1066320"
  },
  {
    "text": "doesn't need to be copied to other",
    "start": "1066320",
    "end": "1067919"
  },
  {
    "text": "machines in the cluster um",
    "start": "1067919",
    "end": "1071280"
  },
  {
    "start": "1071000",
    "end": "1071000"
  },
  {
    "text": "also so now ray scheduler is doing",
    "start": "1071280",
    "end": "1073520"
  },
  {
    "text": "locality over scheduling",
    "start": "1073520",
    "end": "1075039"
  },
  {
    "text": "and it basically calculates which",
    "start": "1075039",
    "end": "1077200"
  },
  {
    "text": "machine will have the biggest input size",
    "start": "1077200",
    "end": "1079280"
  },
  {
    "text": "so input when i say inputs this input",
    "start": "1079280",
    "end": "1081919"
  },
  {
    "text": "because",
    "start": "1081919",
    "end": "1082400"
  },
  {
    "text": "input size or there is already cached in",
    "start": "1082400",
    "end": "1084480"
  },
  {
    "text": "each machine and it's going to be",
    "start": "1084480",
    "end": "1085760"
  },
  {
    "text": "preferred to that",
    "start": "1085760",
    "end": "1086880"
  },
  {
    "text": "node when it's scheduled another",
    "start": "1086880",
    "end": "1089679"
  },
  {
    "text": "improvement we've made is",
    "start": "1089679",
    "end": "1091120"
  },
  {
    "text": "called memory or scheduling so ray",
    "start": "1091120",
    "end": "1093039"
  },
  {
    "text": "always try to schedule tasks to nodes",
    "start": "1093039",
    "end": "1095120"
  },
  {
    "text": "that has the low memory usage",
    "start": "1095120",
    "end": "1097919"
  },
  {
    "text": "so let's imagine this kind of scenario",
    "start": "1097919",
    "end": "1100080"
  },
  {
    "start": "1098000",
    "end": "1098000"
  },
  {
    "text": "you have machine a and machine b",
    "start": "1100080",
    "end": "1101679"
  },
  {
    "text": "and machine a uses more memory than",
    "start": "1101679",
    "end": "1103280"
  },
  {
    "text": "motion b so in this case we always try",
    "start": "1103280",
    "end": "1105520"
  },
  {
    "text": "to prefer",
    "start": "1105520",
    "end": "1106320"
  },
  {
    "text": "all the motion b um so that real",
    "start": "1106320",
    "end": "1109600"
  },
  {
    "text": "algorithm is a little bit more",
    "start": "1109600",
    "end": "1110640"
  },
  {
    "text": "complicated than this but",
    "start": "1110640",
    "end": "1112400"
  },
  {
    "text": "this task is uh respecting the",
    "start": "1112400",
    "end": "1116960"
  },
  {
    "text": "locality information and also trying to",
    "start": "1116960",
    "end": "1118960"
  },
  {
    "text": "schedule the machine to use",
    "start": "1118960",
    "end": "1120320"
  },
  {
    "text": "low memory usage so you can actually",
    "start": "1120320",
    "end": "1122880"
  },
  {
    "text": "distribute it task properly in the",
    "start": "1122880",
    "end": "1124480"
  },
  {
    "text": "cluster",
    "start": "1124480",
    "end": "1126960"
  },
  {
    "text": "so the second improvement we've made is",
    "start": "1127200",
    "end": "1129440"
  },
  {
    "text": "to enable out of core data processing",
    "start": "1129440",
    "end": "1131679"
  },
  {
    "text": "for people who don't know what that",
    "start": "1131679",
    "end": "1132880"
  },
  {
    "text": "means out of core data processing is",
    "start": "1132880",
    "end": "1135120"
  },
  {
    "text": "a processing data that is too large to",
    "start": "1135120",
    "end": "1137600"
  },
  {
    "text": "fit into a computer's main memory",
    "start": "1137600",
    "end": "1139919"
  },
  {
    "text": "so in order to support this we start all",
    "start": "1139919",
    "end": "1142080"
  },
  {
    "text": "we created",
    "start": "1142080",
    "end": "1143280"
  },
  {
    "text": "or we developed a feature called object",
    "start": "1143280",
    "end": "1145440"
  },
  {
    "text": "spelling which basically spills very",
    "start": "1145440",
    "end": "1147600"
  },
  {
    "text": "object to",
    "start": "1147600",
    "end": "1148559"
  },
  {
    "text": "uh from object store the shared memory",
    "start": "1148559",
    "end": "1150799"
  },
  {
    "text": "object store",
    "start": "1150799",
    "end": "1151600"
  },
  {
    "text": "to the external storage like this cone",
    "start": "1151600",
    "end": "1153440"
  },
  {
    "text": "as disk or s3",
    "start": "1153440",
    "end": "1156879"
  },
  {
    "text": "um so let's actually see an example how",
    "start": "1156960",
    "end": "1158960"
  },
  {
    "text": "this object explain works",
    "start": "1158960",
    "end": "1160720"
  },
  {
    "text": "so this is the same shuffle example i",
    "start": "1160720",
    "end": "1162880"
  },
  {
    "text": "demonstrated before oh",
    "start": "1162880",
    "end": "1164480"
  },
  {
    "text": "it's like much simpler diagram so",
    "start": "1164480",
    "end": "1166480"
  },
  {
    "text": "imagine this kind of map and reduce",
    "start": "1166480",
    "end": "1169120"
  },
  {
    "text": "phase and in map phase you basically",
    "start": "1169120",
    "end": "1171760"
  },
  {
    "text": "create",
    "start": "1171760",
    "end": "1172480"
  },
  {
    "text": "the object in the shared memory and in",
    "start": "1172480",
    "end": "1174400"
  },
  {
    "text": "the radio space this reduced test",
    "start": "1174400",
    "end": "1176960"
  },
  {
    "text": "shuffle the data so it gets the data on",
    "start": "1176960",
    "end": "1179679"
  },
  {
    "text": "from each map task",
    "start": "1179679",
    "end": "1182720"
  },
  {
    "start": "1181000",
    "end": "1181000"
  },
  {
    "text": "then how they work with objects doing",
    "start": "1182799",
    "end": "1184559"
  },
  {
    "text": "let's actually see from the map face",
    "start": "1184559",
    "end": "1186559"
  },
  {
    "text": "so it's same as this part so",
    "start": "1186559",
    "end": "1189679"
  },
  {
    "text": "at first this is the how the cluster",
    "start": "1189679",
    "end": "1192400"
  },
  {
    "text": "looks like normally",
    "start": "1192400",
    "end": "1193520"
  },
  {
    "text": "so you have machine so node is same as",
    "start": "1193520",
    "end": "1196080"
  },
  {
    "text": "machine",
    "start": "1196080",
    "end": "1196559"
  },
  {
    "text": "and this gray square is the process and",
    "start": "1196559",
    "end": "1199120"
  },
  {
    "text": "you can",
    "start": "1199120",
    "end": "1199679"
  },
  {
    "text": "schedule task here and this is the",
    "start": "1199679",
    "end": "1201520"
  },
  {
    "text": "shared memory object store which is",
    "start": "1201520",
    "end": "1203280"
  },
  {
    "text": "plasma store",
    "start": "1203280",
    "end": "1204240"
  },
  {
    "text": "and you have the external storage like",
    "start": "1204240",
    "end": "1205919"
  },
  {
    "text": "this so let's imagine we have this",
    "start": "1205919",
    "end": "1208880"
  },
  {
    "text": "map and reduced space in the shuffle so",
    "start": "1208880",
    "end": "1211600"
  },
  {
    "text": "in the map it basically creates these",
    "start": "1211600",
    "end": "1213679"
  },
  {
    "text": "objects",
    "start": "1213679",
    "end": "1215360"
  },
  {
    "text": "and therefore scheduled on each of",
    "start": "1215360",
    "end": "1217760"
  },
  {
    "text": "worker process",
    "start": "1217760",
    "end": "1219280"
  },
  {
    "text": "and they create all the objects so now",
    "start": "1219280",
    "end": "1221600"
  },
  {
    "text": "we need to",
    "start": "1221600",
    "end": "1222400"
  },
  {
    "text": "schedule more map tasks and you just",
    "start": "1222400",
    "end": "1225280"
  },
  {
    "text": "realize you don't have enough memory",
    "start": "1225280",
    "end": "1227039"
  },
  {
    "text": "so in this case you just spill the",
    "start": "1227039",
    "end": "1229440"
  },
  {
    "text": "objects",
    "start": "1229440",
    "end": "1230320"
  },
  {
    "text": "and you fill this up so let's actually",
    "start": "1230320",
    "end": "1234000"
  },
  {
    "text": "see what happens in the radio space uh",
    "start": "1234000",
    "end": "1237200"
  },
  {
    "text": "as i mentioned this is same as this",
    "start": "1237200",
    "end": "1238799"
  },
  {
    "text": "space",
    "start": "1238799",
    "end": "1239440"
  },
  {
    "text": "each of this reduced task gets the",
    "start": "1239440",
    "end": "1241760"
  },
  {
    "text": "object so these objects are shuffled in",
    "start": "1241760",
    "end": "1243840"
  },
  {
    "text": "the reduced worker",
    "start": "1243840",
    "end": "1246400"
  },
  {
    "text": "so this is the state uh from the",
    "start": "1246400",
    "end": "1248159"
  },
  {
    "text": "previous one",
    "start": "1248159",
    "end": "1249679"
  },
  {
    "text": "now this reduced test per schedule on",
    "start": "1249679",
    "end": "1251679"
  },
  {
    "text": "the worker process",
    "start": "1251679",
    "end": "1253039"
  },
  {
    "text": "and it needs to get these four objects",
    "start": "1253039",
    "end": "1256480"
  },
  {
    "text": "and this one needs to get these four",
    "start": "1256480",
    "end": "1258559"
  },
  {
    "text": "objects",
    "start": "1258559",
    "end": "1259520"
  },
  {
    "text": "they're trying to get the object and",
    "start": "1259520",
    "end": "1262080"
  },
  {
    "text": "before it gets the object you have to",
    "start": "1262080",
    "end": "1263840"
  },
  {
    "text": "spill them because it needs more memory",
    "start": "1263840",
    "end": "1265840"
  },
  {
    "text": "capacity in the uh",
    "start": "1265840",
    "end": "1267120"
  },
  {
    "text": "shared memory so it basically spills the",
    "start": "1267120",
    "end": "1270000"
  },
  {
    "text": "objects that are not used by this worker",
    "start": "1270000",
    "end": "1272799"
  },
  {
    "text": "and you restore the objects that are",
    "start": "1272799",
    "end": "1274320"
  },
  {
    "text": "necessary from the external storage",
    "start": "1274320",
    "end": "1277120"
  },
  {
    "text": "and the same thing is going to happen",
    "start": "1277120",
    "end": "1278559"
  },
  {
    "text": "for other reduced tasks so at the end",
    "start": "1278559",
    "end": "1280640"
  },
  {
    "text": "your all of your reduced task is going",
    "start": "1280640",
    "end": "1282559"
  },
  {
    "text": "to have the shuffled objects",
    "start": "1282559",
    "end": "1284080"
  },
  {
    "text": "in memory and there they can do some",
    "start": "1284080",
    "end": "1286080"
  },
  {
    "text": "operation like sorting",
    "start": "1286080",
    "end": "1287679"
  },
  {
    "text": "the shuffle data for example",
    "start": "1287679",
    "end": "1291360"
  },
  {
    "start": "1291000",
    "end": "1291000"
  },
  {
    "text": "the last improvement i'll demonstrate is",
    "start": "1291360",
    "end": "1293440"
  },
  {
    "text": "how we improved our memory management",
    "start": "1293440",
    "end": "1295120"
  },
  {
    "text": "layer",
    "start": "1295120",
    "end": "1296000"
  },
  {
    "text": "in summary now array respects a hard",
    "start": "1296000",
    "end": "1298799"
  },
  {
    "text": "limit for distributed object store",
    "start": "1298799",
    "end": "1300720"
  },
  {
    "text": "and take the smart actions based on this",
    "start": "1300720",
    "end": "1303039"
  },
  {
    "text": "situation",
    "start": "1303039",
    "end": "1304159"
  },
  {
    "text": "um this this means there are three kind",
    "start": "1304159",
    "end": "1306559"
  },
  {
    "text": "of three improvements we've made",
    "start": "1306559",
    "end": "1308480"
  },
  {
    "text": "first we can now detect uh when there",
    "start": "1308480",
    "end": "1311360"
  },
  {
    "text": "when there's the memory pressure",
    "start": "1311360",
    "end": "1313280"
  },
  {
    "text": "and second based on this information or",
    "start": "1313280",
    "end": "1315919"
  },
  {
    "text": "we can actually guarantee the progress",
    "start": "1315919",
    "end": "1317919"
  },
  {
    "text": "when applications runs out of memory by",
    "start": "1317919",
    "end": "1320400"
  },
  {
    "text": "taking actions that are needed to make",
    "start": "1320400",
    "end": "1322240"
  },
  {
    "text": "more space",
    "start": "1322240",
    "end": "1323280"
  },
  {
    "text": "for example we can edit unnecessary",
    "start": "1323280",
    "end": "1325760"
  },
  {
    "text": "objects",
    "start": "1325760",
    "end": "1326480"
  },
  {
    "text": "or we can spill objects that are not",
    "start": "1326480",
    "end": "1328880"
  },
  {
    "text": "used right now",
    "start": "1328880",
    "end": "1330840"
  },
  {
    "text": "um the lastly each of machine now has",
    "start": "1330840",
    "end": "1334799"
  },
  {
    "text": "admission control when scheduling tasks",
    "start": "1334799",
    "end": "1337120"
  },
  {
    "text": "so they limit the max amount of memory",
    "start": "1337120",
    "end": "1339440"
  },
  {
    "text": "it is using",
    "start": "1339440",
    "end": "1340159"
  },
  {
    "text": "in this case we can avoid uh machines",
    "start": "1340159",
    "end": "1342240"
  },
  {
    "text": "are over",
    "start": "1342240",
    "end": "1343280"
  },
  {
    "text": "using memory we are going to dive into",
    "start": "1343280",
    "end": "1346320"
  },
  {
    "text": "the third example in",
    "start": "1346320",
    "end": "1347840"
  },
  {
    "text": "this presentation so imagine",
    "start": "1347840",
    "end": "1350880"
  },
  {
    "text": "the map face just completed and it",
    "start": "1350880",
    "end": "1352799"
  },
  {
    "text": "steals all the objects",
    "start": "1352799",
    "end": "1355120"
  },
  {
    "text": "and now there are two reduced tests",
    "start": "1355120",
    "end": "1356960"
  },
  {
    "text": "scheduled and",
    "start": "1356960",
    "end": "1358159"
  },
  {
    "text": "this task needs four objects as you can",
    "start": "1358159",
    "end": "1360320"
  },
  {
    "text": "see so it's trying to",
    "start": "1360320",
    "end": "1361600"
  },
  {
    "text": "restore four objects to the search",
    "start": "1361600",
    "end": "1363200"
  },
  {
    "text": "memory object store",
    "start": "1363200",
    "end": "1364880"
  },
  {
    "text": "and it happens concurrently and as you",
    "start": "1364880",
    "end": "1368080"
  },
  {
    "text": "can see",
    "start": "1368080",
    "end": "1369280"
  },
  {
    "text": "these last two objects are not",
    "start": "1369280",
    "end": "1371280"
  },
  {
    "text": "restorable because you don't have any",
    "start": "1371280",
    "end": "1372799"
  },
  {
    "text": "more",
    "start": "1372799",
    "end": "1373120"
  },
  {
    "text": "capacity so this is deadlocked so as you",
    "start": "1373120",
    "end": "1376480"
  },
  {
    "text": "can see",
    "start": "1376480",
    "end": "1377039"
  },
  {
    "text": "this needs this a light color for",
    "start": "1377039",
    "end": "1379440"
  },
  {
    "text": "objects",
    "start": "1379440",
    "end": "1380559"
  },
  {
    "text": "but you don't have enough space to put",
    "start": "1380559",
    "end": "1382000"
  },
  {
    "text": "this like color object for the first",
    "start": "1382000",
    "end": "1383760"
  },
  {
    "text": "test and",
    "start": "1383760",
    "end": "1384559"
  },
  {
    "text": "same for the second task so in this case",
    "start": "1384559",
    "end": "1386720"
  },
  {
    "text": "what can happen is you can evict this",
    "start": "1386720",
    "end": "1389120"
  },
  {
    "text": "like a object and bring this in",
    "start": "1389120",
    "end": "1392400"
  },
  {
    "text": "but if you if this is not smart enough",
    "start": "1392400",
    "end": "1395440"
  },
  {
    "text": "imagine um this thick blue is actually",
    "start": "1395440",
    "end": "1397840"
  },
  {
    "text": "evicted and this",
    "start": "1397840",
    "end": "1398880"
  },
  {
    "text": "thick orange is added then you're",
    "start": "1398880",
    "end": "1400400"
  },
  {
    "text": "basically in the same situation your",
    "start": "1400400",
    "end": "1401919"
  },
  {
    "text": "thick balloon needs to be restored again",
    "start": "1401919",
    "end": "1404080"
  },
  {
    "text": "and in there are situations like this",
    "start": "1404080",
    "end": "1406559"
  },
  {
    "text": "that can happen commonly if you don't",
    "start": "1406559",
    "end": "1408159"
  },
  {
    "text": "have",
    "start": "1408159",
    "end": "1408720"
  },
  {
    "text": "smart actions based on your memory usage",
    "start": "1408720",
    "end": "1412880"
  },
  {
    "start": "1413000",
    "end": "1413000"
  },
  {
    "text": "so then how how did you solve the",
    "start": "1413600",
    "end": "1415200"
  },
  {
    "text": "problem so now ray's decentralized",
    "start": "1415200",
    "end": "1417919"
  },
  {
    "text": "scheduler is also working as a decentral",
    "start": "1417919",
    "end": "1420240"
  },
  {
    "text": "decentralized memory manager so it is",
    "start": "1420240",
    "end": "1422559"
  },
  {
    "text": "aware of memory and do proper admission",
    "start": "1422559",
    "end": "1424799"
  },
  {
    "text": "control based on the memory usage",
    "start": "1424799",
    "end": "1426640"
  },
  {
    "text": "and it always trying to not use memory",
    "start": "1426640",
    "end": "1428960"
  },
  {
    "text": "more than its capacity",
    "start": "1428960",
    "end": "1430400"
  },
  {
    "text": "so this means ray doesn't schedule tests",
    "start": "1430400",
    "end": "1432400"
  },
  {
    "text": "if the object",
    "start": "1432400",
    "end": "1433440"
  },
  {
    "text": "that tests require use more memory than",
    "start": "1433440",
    "end": "1435360"
  },
  {
    "text": "the capacity of machines",
    "start": "1435360",
    "end": "1436799"
  },
  {
    "text": "so let's actually say with the real",
    "start": "1436799",
    "end": "1438159"
  },
  {
    "text": "example um so in this case",
    "start": "1438159",
    "end": "1441120"
  },
  {
    "text": "unlike before when we try to restore the",
    "start": "1441120",
    "end": "1443600"
  },
  {
    "text": "object concurrently",
    "start": "1443600",
    "end": "1444720"
  },
  {
    "text": "we now know that if we restore all the",
    "start": "1444720",
    "end": "1447200"
  },
  {
    "text": "object for this and this at the same",
    "start": "1447200",
    "end": "1449120"
  },
  {
    "text": "time we don't have enough capacity",
    "start": "1449120",
    "end": "1451120"
  },
  {
    "text": "in the shared memory so we only try now",
    "start": "1451120",
    "end": "1453360"
  },
  {
    "text": "restore object for the first task",
    "start": "1453360",
    "end": "1455840"
  },
  {
    "text": "and once first tasks are done the second",
    "start": "1455840",
    "end": "1458159"
  },
  {
    "text": "task",
    "start": "1458159",
    "end": "1459039"
  },
  {
    "text": "also needs to restore the object and at",
    "start": "1459039",
    "end": "1461279"
  },
  {
    "text": "the time we also try not to",
    "start": "1461279",
    "end": "1462960"
  },
  {
    "text": "restore object for this test because we",
    "start": "1462960",
    "end": "1465039"
  },
  {
    "text": "know if we do",
    "start": "1465039",
    "end": "1466240"
  },
  {
    "text": "do that we are going to be deadlocked so",
    "start": "1466240",
    "end": "1469279"
  },
  {
    "text": "do the same thing and we basically",
    "start": "1469279",
    "end": "1470960"
  },
  {
    "text": "repeat",
    "start": "1470960",
    "end": "1472400"
  },
  {
    "text": "until every tests are scheduled",
    "start": "1472400",
    "end": "1475440"
  },
  {
    "text": "so there are tons of other programs",
    "start": "1475440",
    "end": "1476880"
  },
  {
    "text": "we've made and if you're interested in",
    "start": "1476880",
    "end": "1478880"
  },
  {
    "text": "more technical details in this layer uh",
    "start": "1478880",
    "end": "1480880"
  },
  {
    "text": "please check out our whitepaper the link",
    "start": "1480880",
    "end": "1482720"
  },
  {
    "text": "is available in the slides",
    "start": "1482720",
    "end": "1485279"
  },
  {
    "text": "so after all the improvement now ray has",
    "start": "1485279",
    "end": "1487760"
  },
  {
    "text": "both features for distributed um data",
    "start": "1487760",
    "end": "1489919"
  },
  {
    "text": "processing engines",
    "start": "1489919",
    "end": "1491360"
  },
  {
    "text": "so it has thinnest distributed execution",
    "start": "1491360",
    "end": "1493360"
  },
  {
    "text": "which it already has before",
    "start": "1493360",
    "end": "1494880"
  },
  {
    "text": "and now it has robust distributed memory",
    "start": "1494880",
    "end": "1496960"
  },
  {
    "text": "management layer which is gonna make",
    "start": "1496960",
    "end": "1499360"
  },
  {
    "text": "on this whole memory management uh",
    "start": "1499360",
    "end": "1501600"
  },
  {
    "text": "better like you use less memory",
    "start": "1501600",
    "end": "1503600"
  },
  {
    "text": "you always in progress when there is a",
    "start": "1503600",
    "end": "1505520"
  },
  {
    "text": "memory pressure and you are able to",
    "start": "1505520",
    "end": "1507279"
  },
  {
    "text": "process",
    "start": "1507279",
    "end": "1507840"
  },
  {
    "text": "data that is larger than your memory",
    "start": "1507840",
    "end": "1509440"
  },
  {
    "text": "capacity and now as",
    "start": "1509440",
    "end": "1511520"
  },
  {
    "text": "another note we recently succeeded to",
    "start": "1511520",
    "end": "1513200"
  },
  {
    "text": "100 terabyte distributed shuffle",
    "start": "1513200",
    "end": "1515120"
  },
  {
    "text": "on top of ray after all the improvements",
    "start": "1515120",
    "end": "1517200"
  },
  {
    "text": "and we are now thinking",
    "start": "1517200",
    "end": "1518320"
  },
  {
    "text": "we are now planning to improve actual",
    "start": "1518320",
    "end": "1520480"
  },
  {
    "text": "sort and see how much",
    "start": "1520480",
    "end": "1521919"
  },
  {
    "text": "performance we can demonstrate from",
    "start": "1521919",
    "end": "1523520"
  },
  {
    "text": "there",
    "start": "1523520",
    "end": "1525679"
  },
  {
    "text": "yeah thank you so much so if you're",
    "start": "1525679",
    "end": "1527279"
  },
  {
    "text": "interested in rey please visit our",
    "start": "1527279",
    "end": "1529120"
  },
  {
    "text": "github page and give a star",
    "start": "1529120",
    "end": "1530720"
  },
  {
    "text": "and or you can come to the discourse for",
    "start": "1530720",
    "end": "1533440"
  },
  {
    "text": "questions",
    "start": "1533440",
    "end": "1534000"
  },
  {
    "text": "and if you're interested in any skill or",
    "start": "1534000",
    "end": "1536000"
  },
  {
    "text": "we are hiring",
    "start": "1536000",
    "end": "1537120"
  },
  {
    "text": "thank you so much",
    "start": "1537120",
    "end": "1542960"
  }
]