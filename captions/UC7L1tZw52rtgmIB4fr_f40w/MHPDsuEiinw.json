[
  {
    "text": "hello i'm feng bing a software engineer",
    "start": "160",
    "end": "2320"
  },
  {
    "text": "at nuscale",
    "start": "2320",
    "end": "3439"
  },
  {
    "text": "today i'll present debugging and",
    "start": "3439",
    "end": "5279"
  },
  {
    "text": "observability in ray and ray",
    "start": "5279",
    "end": "6799"
  },
  {
    "text": "applications",
    "start": "6799",
    "end": "9120"
  },
  {
    "text": "so here's things you're going to learn",
    "start": "9120",
    "end": "10400"
  },
  {
    "text": "today all you're going to learn",
    "start": "10400",
    "end": "11759"
  },
  {
    "text": "challenges and solutions in debugging",
    "start": "11759",
    "end": "13759"
  },
  {
    "text": "distributed array applications",
    "start": "13759",
    "end": "15759"
  },
  {
    "text": "and race monitoring architecture and at",
    "start": "15759",
    "end": "17840"
  },
  {
    "text": "the end of the presentation i'm going to",
    "start": "17840",
    "end": "19600"
  },
  {
    "text": "go over",
    "start": "19600",
    "end": "20400"
  },
  {
    "text": "the future roadmap for debugging and",
    "start": "20400",
    "end": "22240"
  },
  {
    "text": "monitoring support on top of ray",
    "start": "22240",
    "end": "25680"
  },
  {
    "text": "so let's start from the brief",
    "start": "25680",
    "end": "26960"
  },
  {
    "text": "introduction to ray",
    "start": "26960",
    "end": "28880"
  },
  {
    "text": "ray is a general purpose distributed",
    "start": "28880",
    "end": "30960"
  },
  {
    "text": "system that makes it easy for developers",
    "start": "30960",
    "end": "33040"
  },
  {
    "text": "to build distributed applications",
    "start": "33040",
    "end": "35280"
  },
  {
    "text": "it provides clean and minimalism apis",
    "start": "35280",
    "end": "37760"
  },
  {
    "text": "such as",
    "start": "37760",
    "end": "38320"
  },
  {
    "text": "radar remote spread.get and raid.weight",
    "start": "38320",
    "end": "41120"
  },
  {
    "text": "it is also built around very intuitive",
    "start": "41120",
    "end": "43040"
  },
  {
    "text": "programming models",
    "start": "43040",
    "end": "44160"
  },
  {
    "text": "tasks and actors which are corresponding",
    "start": "44160",
    "end": "46640"
  },
  {
    "text": "to",
    "start": "46640",
    "end": "47200"
  },
  {
    "text": "python's function and also classes",
    "start": "47200",
    "end": "50320"
  },
  {
    "text": "let's see an example so this is an",
    "start": "50320",
    "end": "53199"
  },
  {
    "text": "example of ray tasks",
    "start": "53199",
    "end": "54879"
  },
  {
    "text": "as you can see there's a function f and",
    "start": "54879",
    "end": "57360"
  },
  {
    "text": "just by adding a decorator",
    "start": "57360",
    "end": "58960"
  },
  {
    "text": "decorator radar remote you can execute",
    "start": "58960",
    "end": "61199"
  },
  {
    "text": "this function remotely and all the",
    "start": "61199",
    "end": "62879"
  },
  {
    "text": "distributed system problems are",
    "start": "62879",
    "end": "64400"
  },
  {
    "text": "coordinated by ray",
    "start": "64400",
    "end": "66080"
  },
  {
    "text": "after that you can asynchronously get",
    "start": "66080",
    "end": "67840"
  },
  {
    "text": "the result of the task",
    "start": "67840",
    "end": "69600"
  },
  {
    "text": "using ray.get",
    "start": "69600",
    "end": "72640"
  },
  {
    "text": "and in the same way classes are",
    "start": "72640",
    "end": "74240"
  },
  {
    "text": "initially instantiated remotely using",
    "start": "74240",
    "end": "76320"
  },
  {
    "text": "the decorator redoubt remote on top of",
    "start": "76320",
    "end": "78320"
  },
  {
    "text": "the class",
    "start": "78320",
    "end": "79439"
  },
  {
    "text": "um this is called reactors reactors are",
    "start": "79439",
    "end": "82479"
  },
  {
    "text": "useful for stateful computation",
    "start": "82479",
    "end": "84560"
  },
  {
    "text": "and it makes ray really flexible tool to",
    "start": "84560",
    "end": "87200"
  },
  {
    "text": "build",
    "start": "87200",
    "end": "87680"
  },
  {
    "text": "various different distributed",
    "start": "87680",
    "end": "88960"
  },
  {
    "text": "applications",
    "start": "88960",
    "end": "91600"
  },
  {
    "text": "um there are several benefits of using",
    "start": "92000",
    "end": "94159"
  },
  {
    "text": "ray aside from its intuitive apis",
    "start": "94159",
    "end": "96560"
  },
  {
    "text": "first ray is a general purpose system",
    "start": "96560",
    "end": "99200"
  },
  {
    "text": "and it means instead of gluing multiple",
    "start": "99200",
    "end": "101280"
  },
  {
    "text": "specialized systems",
    "start": "101280",
    "end": "102479"
  },
  {
    "text": "you can manage a single system and this",
    "start": "102479",
    "end": "105200"
  },
  {
    "text": "doesn't only make it easy to operate",
    "start": "105200",
    "end": "106799"
  },
  {
    "text": "complex software that requires",
    "start": "106799",
    "end": "108320"
  },
  {
    "text": "large-scale distributed systems",
    "start": "108320",
    "end": "110320"
  },
  {
    "text": "but also helps users to focus on",
    "start": "110320",
    "end": "112320"
  },
  {
    "text": "business logic instead of solving",
    "start": "112320",
    "end": "114000"
  },
  {
    "text": "problems they require specialized",
    "start": "114000",
    "end": "115439"
  },
  {
    "text": "knowledge such as distributed systems",
    "start": "115439",
    "end": "117280"
  },
  {
    "text": "problems",
    "start": "117280",
    "end": "118719"
  },
  {
    "text": "second it allows developers to write",
    "start": "118719",
    "end": "122399"
  },
  {
    "text": "distributed applications with minimal",
    "start": "122399",
    "end": "124640"
  },
  {
    "text": "efforts since complex distributed system",
    "start": "124640",
    "end": "126719"
  },
  {
    "text": "problems such as scaling",
    "start": "126719",
    "end": "128080"
  },
  {
    "text": "resource management or fault tolerance",
    "start": "128080",
    "end": "130080"
  },
  {
    "text": "or coordinated by ray",
    "start": "130080",
    "end": "133440"
  },
  {
    "text": "and thanks to these benefits there are",
    "start": "133599",
    "end": "135520"
  },
  {
    "text": "many distributed applications written",
    "start": "135520",
    "end": "137360"
  },
  {
    "text": "top of ray",
    "start": "137360",
    "end": "138239"
  },
  {
    "text": "or integrated to ray for example there",
    "start": "138239",
    "end": "140480"
  },
  {
    "text": "are native libraries such as rlib tuner",
    "start": "140480",
    "end": "142879"
  },
  {
    "text": "racers",
    "start": "142879",
    "end": "143680"
  },
  {
    "text": "or there are many other community driven",
    "start": "143680",
    "end": "145599"
  },
  {
    "text": "libraries such as",
    "start": "145599",
    "end": "146800"
  },
  {
    "text": "integration to hogging face horror gold",
    "start": "146800",
    "end": "149200"
  },
  {
    "text": "or python",
    "start": "149200",
    "end": "149920"
  },
  {
    "text": "and a lot more",
    "start": "149920",
    "end": "152560"
  },
  {
    "text": "so ray makes it easy to build",
    "start": "153040",
    "end": "154560"
  },
  {
    "text": "distributed applications then what's the",
    "start": "154560",
    "end": "156400"
  },
  {
    "text": "next challenges",
    "start": "156400",
    "end": "158959"
  },
  {
    "text": "the first problem ray developers usually",
    "start": "158959",
    "end": "161040"
  },
  {
    "text": "face after they start development",
    "start": "161040",
    "end": "163040"
  },
  {
    "text": "is to figure out how to debug grade",
    "start": "163040",
    "end": "165200"
  },
  {
    "text": "applications",
    "start": "165200",
    "end": "166480"
  },
  {
    "text": "unfortunately debugging distributed",
    "start": "166480",
    "end": "168640"
  },
  {
    "text": "systems are really hard and it is not an",
    "start": "168640",
    "end": "170560"
  },
  {
    "text": "exception for ray",
    "start": "170560",
    "end": "173200"
  },
  {
    "text": "and you usually face this kind of",
    "start": "173200",
    "end": "174879"
  },
  {
    "text": "situation you find a bug and fix it but",
    "start": "174879",
    "end": "177840"
  },
  {
    "text": "there are two more bugs and three more",
    "start": "177840",
    "end": "179440"
  },
  {
    "text": "bugs",
    "start": "179440",
    "end": "180480"
  },
  {
    "text": "etc another problem",
    "start": "180480",
    "end": "184000"
  },
  {
    "text": "is running them in production for",
    "start": "184000",
    "end": "185920"
  },
  {
    "text": "example we need to monitor systems so",
    "start": "185920",
    "end": "187680"
  },
  {
    "text": "that we can detect anomalies ahead of",
    "start": "187680",
    "end": "189519"
  },
  {
    "text": "time",
    "start": "189519",
    "end": "190159"
  },
  {
    "text": "or when something's broken we should be",
    "start": "190159",
    "end": "191680"
  },
  {
    "text": "able to figure out why it happened",
    "start": "191680",
    "end": "193519"
  },
  {
    "text": "and there are times that uh there are",
    "start": "193519",
    "end": "195519"
  },
  {
    "text": "performance degradation",
    "start": "195519",
    "end": "196800"
  },
  {
    "text": "and in this case you should be able to",
    "start": "196800",
    "end": "198400"
  },
  {
    "text": "understand why performance has been",
    "start": "198400",
    "end": "201040"
  },
  {
    "text": "decreased so which means you need to",
    "start": "201040",
    "end": "203599"
  },
  {
    "text": "understand performance characteristics",
    "start": "203599",
    "end": "207200"
  },
  {
    "text": "so now we are facing the next challenges",
    "start": "207680",
    "end": "209440"
  },
  {
    "text": "in developing distributed applications",
    "start": "209440",
    "end": "211760"
  },
  {
    "text": "debugging and monitoring distributed",
    "start": "211760",
    "end": "213760"
  },
  {
    "text": "systems is hard",
    "start": "213760",
    "end": "216799"
  },
  {
    "text": "let's see why first distributed systems",
    "start": "216799",
    "end": "219360"
  },
  {
    "text": "are usually learning",
    "start": "219360",
    "end": "220400"
  },
  {
    "text": "in really large scale and it makes it",
    "start": "220400",
    "end": "223040"
  },
  {
    "text": "impossible for humans to dig",
    "start": "223040",
    "end": "224480"
  },
  {
    "text": "into and fix issues when something's",
    "start": "224480",
    "end": "226720"
  },
  {
    "text": "broken",
    "start": "226720",
    "end": "227840"
  },
  {
    "text": "and second all the components are spread",
    "start": "227840",
    "end": "229920"
  },
  {
    "text": "across many different machines in the",
    "start": "229920",
    "end": "231360"
  },
  {
    "text": "cluster",
    "start": "231360",
    "end": "232159"
  },
  {
    "text": "and since components are running",
    "start": "232159",
    "end": "233840"
  },
  {
    "text": "independently concurrently and",
    "start": "233840",
    "end": "235439"
  },
  {
    "text": "asynchronously",
    "start": "235439",
    "end": "237200"
  },
  {
    "text": "reasoning the failures or anomalies",
    "start": "237200",
    "end": "239280"
  },
  {
    "text": "became much more difficult",
    "start": "239280",
    "end": "241680"
  },
  {
    "text": "lastly because failures in distributed",
    "start": "241680",
    "end": "243760"
  },
  {
    "text": "systems should be handled gracefully",
    "start": "243760",
    "end": "245760"
  },
  {
    "text": "they are not detected right away but is",
    "start": "245760",
    "end": "247760"
  },
  {
    "text": "discovered later time",
    "start": "247760",
    "end": "250239"
  },
  {
    "text": "because otherwise the whole system will",
    "start": "250239",
    "end": "252080"
  },
  {
    "text": "fail by just a single component failure",
    "start": "252080",
    "end": "254239"
  },
  {
    "text": "which is not desirable",
    "start": "254239",
    "end": "256320"
  },
  {
    "text": "and this is something that ray users",
    "start": "256320",
    "end": "258000"
  },
  {
    "text": "also face when they build distributed",
    "start": "258000",
    "end": "259680"
  },
  {
    "text": "applications",
    "start": "259680",
    "end": "260479"
  },
  {
    "text": "this is the inevitable problem",
    "start": "260479",
    "end": "263600"
  },
  {
    "text": "unfortunately there are many proven",
    "start": "263600",
    "end": "265360"
  },
  {
    "text": "solutions in the industry to debug and",
    "start": "265360",
    "end": "267360"
  },
  {
    "text": "monitor distributed systems",
    "start": "267360",
    "end": "269199"
  },
  {
    "text": "and this means ray can also solve the",
    "start": "269199",
    "end": "271520"
  },
  {
    "text": "same problem by supporting the same tool",
    "start": "271520",
    "end": "273280"
  },
  {
    "text": "such as",
    "start": "273280",
    "end": "274479"
  },
  {
    "text": "metrics events distributed tracing or on",
    "start": "274479",
    "end": "277840"
  },
  {
    "text": "the dashboard that shows the stage of",
    "start": "277840",
    "end": "280160"
  },
  {
    "text": "the array systems um",
    "start": "280160",
    "end": "282160"
  },
  {
    "text": "it is also really important to support",
    "start": "282160",
    "end": "284240"
  },
  {
    "text": "these tools for both",
    "start": "284240",
    "end": "285440"
  },
  {
    "text": "race system and ray distributed",
    "start": "285440",
    "end": "287120"
  },
  {
    "text": "applications",
    "start": "287120",
    "end": "289360"
  },
  {
    "text": "and i'll explain why this really matters",
    "start": "289360",
    "end": "291600"
  },
  {
    "text": "to ray",
    "start": "291600",
    "end": "294000"
  },
  {
    "text": "um the goal of the array is to make it",
    "start": "294479",
    "end": "296960"
  },
  {
    "text": "easy to build distributed applications",
    "start": "296960",
    "end": "299199"
  },
  {
    "text": "since debugging and monitoring is very",
    "start": "299199",
    "end": "301440"
  },
  {
    "text": "difficult problem everyone needs to",
    "start": "301440",
    "end": "303039"
  },
  {
    "text": "solve when they're building distributed",
    "start": "303039",
    "end": "304639"
  },
  {
    "text": "systems",
    "start": "304639",
    "end": "305440"
  },
  {
    "text": "rate cannot make it really easy to build",
    "start": "305440",
    "end": "307280"
  },
  {
    "text": "them if it doesn't provide",
    "start": "307280",
    "end": "308800"
  },
  {
    "text": "seamless experiences in debugging and",
    "start": "308800",
    "end": "310960"
  },
  {
    "text": "monitoring",
    "start": "310960",
    "end": "312320"
  },
  {
    "text": "that means if debugging becomes easy",
    "start": "312320",
    "end": "315600"
  },
  {
    "text": "it'll help rate moving one step forward",
    "start": "315600",
    "end": "317280"
  },
  {
    "text": "to the goal or make it easy to develop",
    "start": "317280",
    "end": "319600"
  },
  {
    "text": "distributed applications",
    "start": "319600",
    "end": "322240"
  },
  {
    "text": "so now it is time to learn how we",
    "start": "322240",
    "end": "323600"
  },
  {
    "text": "actually debug and monitor ray",
    "start": "323600",
    "end": "325039"
  },
  {
    "text": "applications",
    "start": "325039",
    "end": "326479"
  },
  {
    "text": "so before we start let's learn about",
    "start": "326479",
    "end": "328000"
  },
  {
    "text": "race programming models first",
    "start": "328000",
    "end": "329759"
  },
  {
    "text": "uh there are two programming models of",
    "start": "329759",
    "end": "331600"
  },
  {
    "text": "ray",
    "start": "331600",
    "end": "333280"
  },
  {
    "text": "first raise test connector based",
    "start": "333280",
    "end": "334960"
  },
  {
    "text": "programming as we saw in the beginning",
    "start": "334960",
    "end": "336560"
  },
  {
    "text": "of the slides",
    "start": "336560",
    "end": "337680"
  },
  {
    "text": "this means all the distributed systems",
    "start": "337680",
    "end": "339440"
  },
  {
    "text": "operations or interaction",
    "start": "339440",
    "end": "341360"
  },
  {
    "text": "will be done as test connectors which",
    "start": "341360",
    "end": "343360"
  },
  {
    "text": "are corresponding to functions and",
    "start": "343360",
    "end": "344800"
  },
  {
    "text": "classes",
    "start": "344800",
    "end": "345520"
  },
  {
    "text": "respectively second rays based off of",
    "start": "345520",
    "end": "348400"
  },
  {
    "text": "distributed objects",
    "start": "348400",
    "end": "350639"
  },
  {
    "text": "and raised test connectors are sharing",
    "start": "350639",
    "end": "352320"
  },
  {
    "text": "data by accessing immutable objects",
    "start": "352320",
    "end": "354400"
  },
  {
    "text": "called",
    "start": "354400",
    "end": "354720"
  },
  {
    "text": "ray objects so ray is object-based",
    "start": "354720",
    "end": "356960"
  },
  {
    "text": "programming",
    "start": "356960",
    "end": "358800"
  },
  {
    "text": "so let's start from what's the typical",
    "start": "358800",
    "end": "360960"
  },
  {
    "text": "problems you're facing when you debug",
    "start": "360960",
    "end": "362639"
  },
  {
    "text": "task",
    "start": "362639",
    "end": "363039"
  },
  {
    "text": "and actor-based applications this is a",
    "start": "363039",
    "end": "365600"
  },
  {
    "text": "typical",
    "start": "365600",
    "end": "366240"
  },
  {
    "text": "example called the reactors this code",
    "start": "366240",
    "end": "368400"
  },
  {
    "text": "will create an actor they require",
    "start": "368400",
    "end": "369919"
  },
  {
    "text": "require a single gpu",
    "start": "369919",
    "end": "371280"
  },
  {
    "text": "you can see in the radar remote there is",
    "start": "371280",
    "end": "372960"
  },
  {
    "text": "no gpu argument",
    "start": "372960",
    "end": "375120"
  },
  {
    "text": "and after that you can invoke functions",
    "start": "375120",
    "end": "376960"
  },
  {
    "text": "or vectors by calling dot remote so you",
    "start": "376960",
    "end": "379120"
  },
  {
    "text": "can see",
    "start": "379120",
    "end": "379680"
  },
  {
    "text": "c dot inc the remote function is going",
    "start": "379680",
    "end": "382080"
  },
  {
    "text": "to create the id1",
    "start": "382080",
    "end": "384080"
  },
  {
    "text": "and each of the remote will produce ray",
    "start": "384080",
    "end": "386800"
  },
  {
    "text": "project",
    "start": "386800",
    "end": "387360"
  },
  {
    "text": "so in this case id1 an array project ray",
    "start": "387360",
    "end": "390160"
  },
  {
    "text": "objects",
    "start": "390160",
    "end": "390720"
  },
  {
    "text": "and in this case id1 id2 id3 they are",
    "start": "390720",
    "end": "393840"
  },
  {
    "text": "called",
    "start": "393840",
    "end": "394560"
  },
  {
    "text": "object reference which are referencing",
    "start": "394560",
    "end": "396319"
  },
  {
    "text": "to the actual ray objects",
    "start": "396319",
    "end": "397840"
  },
  {
    "text": "of staying in the shared memory",
    "start": "397840",
    "end": "401759"
  },
  {
    "text": "then let's say after the first",
    "start": "402160",
    "end": "403600"
  },
  {
    "text": "invocation of increment method",
    "start": "403600",
    "end": "405199"
  },
  {
    "text": "actor is not working as expected it",
    "start": "405199",
    "end": "407440"
  },
  {
    "text": "means actor could be slow or if there",
    "start": "407440",
    "end": "409599"
  },
  {
    "text": "was broken",
    "start": "409599",
    "end": "410479"
  },
  {
    "text": "or something's hanging or something like",
    "start": "410479",
    "end": "412880"
  },
  {
    "text": "that",
    "start": "412880",
    "end": "413520"
  },
  {
    "text": "uh what would you do in this case this",
    "start": "413520",
    "end": "415680"
  },
  {
    "text": "kind of problem can become really hard",
    "start": "415680",
    "end": "417520"
  },
  {
    "text": "when your applications have for example",
    "start": "417520",
    "end": "419440"
  },
  {
    "text": "like diagonal vectors",
    "start": "419440",
    "end": "422400"
  },
  {
    "text": "and to make debugging this scenarios as",
    "start": "422400",
    "end": "424560"
  },
  {
    "text": "smooth as possible",
    "start": "424560",
    "end": "425840"
  },
  {
    "text": "ray is providing three different",
    "start": "425840",
    "end": "427280"
  },
  {
    "text": "solutions first",
    "start": "427280",
    "end": "428880"
  },
  {
    "text": "ray will increase the visibility of",
    "start": "428880",
    "end": "430639"
  },
  {
    "text": "actors and task states",
    "start": "430639",
    "end": "432479"
  },
  {
    "text": "second it will give users the ability to",
    "start": "432479",
    "end": "434560"
  },
  {
    "text": "add insights to task connectors",
    "start": "434560",
    "end": "436960"
  },
  {
    "text": "third it will provide users to add",
    "start": "436960",
    "end": "439280"
  },
  {
    "text": "distributed tracing",
    "start": "439280",
    "end": "442240"
  },
  {
    "text": "let's see the first solution in details",
    "start": "442880",
    "end": "444800"
  },
  {
    "text": "ray provides the visibility to test",
    "start": "444800",
    "end": "446639"
  },
  {
    "text": "connectors from the dashboard",
    "start": "446639",
    "end": "449759"
  },
  {
    "text": "ray supports a real-time dashboard that",
    "start": "449759",
    "end": "451759"
  },
  {
    "text": "helps users debug gray apps",
    "start": "451759",
    "end": "453599"
  },
  {
    "text": "especially ray focuses on great logical",
    "start": "453599",
    "end": "456000"
  },
  {
    "text": "view support",
    "start": "456000",
    "end": "457520"
  },
  {
    "text": "which displays the stage of tasks or",
    "start": "457520",
    "end": "459759"
  },
  {
    "text": "actors",
    "start": "459759",
    "end": "460800"
  },
  {
    "text": "oh let's actually see the example on",
    "start": "460800",
    "end": "462960"
  },
  {
    "text": "screenshot",
    "start": "462960",
    "end": "465680"
  },
  {
    "text": "so this is the logical view i captured",
    "start": "465680",
    "end": "468000"
  },
  {
    "text": "as you can see it gives the visibility",
    "start": "468000",
    "end": "470000"
  },
  {
    "text": "to existing actors such as",
    "start": "470000",
    "end": "471840"
  },
  {
    "text": "stage resource requirements lifetime etc",
    "start": "471840",
    "end": "475759"
  },
  {
    "text": "there is also actor stage you can see",
    "start": "475759",
    "end": "478560"
  },
  {
    "text": "everything is currently infeasible",
    "start": "478560",
    "end": "481199"
  },
  {
    "text": "this will help you to notice anomalies",
    "start": "481199",
    "end": "483039"
  },
  {
    "text": "in your test connector-based",
    "start": "483039",
    "end": "484400"
  },
  {
    "text": "applications",
    "start": "484400",
    "end": "485120"
  },
  {
    "text": "so that you can easily debug issues when",
    "start": "485120",
    "end": "487039"
  },
  {
    "text": "something's broken",
    "start": "487039",
    "end": "489840"
  },
  {
    "text": "um the second solution is to provide",
    "start": "490720",
    "end": "492560"
  },
  {
    "text": "users the power to add custom metrics",
    "start": "492560",
    "end": "496800"
  },
  {
    "text": "uh custom metric is the metrics you can",
    "start": "497199",
    "end": "500080"
  },
  {
    "text": "record in your application layer",
    "start": "500080",
    "end": "502479"
  },
  {
    "text": "um and recording custom metrics in ray",
    "start": "502479",
    "end": "504960"
  },
  {
    "text": "is really simple",
    "start": "504960",
    "end": "506080"
  },
  {
    "text": "or you can just import the custom metric",
    "start": "506080",
    "end": "508400"
  },
  {
    "text": "api",
    "start": "508400",
    "end": "509120"
  },
  {
    "text": "and define the custom metrics in this",
    "start": "509120",
    "end": "510960"
  },
  {
    "text": "case counts you can see the demo actors",
    "start": "510960",
    "end": "513360"
  },
  {
    "text": "initialization function",
    "start": "513360",
    "end": "515039"
  },
  {
    "text": "and you can record metrics using a",
    "start": "515039",
    "end": "516640"
  },
  {
    "text": "record method so if you look at the ping",
    "start": "516640",
    "end": "519039"
  },
  {
    "text": "method",
    "start": "519039",
    "end": "519518"
  },
  {
    "text": "you can see this count custom metrics is",
    "start": "519519",
    "end": "521919"
  },
  {
    "text": "recorded every time ping is called",
    "start": "521919",
    "end": "524320"
  },
  {
    "text": "and this will be automatically collected",
    "start": "524320",
    "end": "526080"
  },
  {
    "text": "by ray so all the metrics will be",
    "start": "526080",
    "end": "527920"
  },
  {
    "text": "automatically collected by ray",
    "start": "527920",
    "end": "529519"
  },
  {
    "text": "and you can import them through",
    "start": "529519",
    "end": "530800"
  },
  {
    "text": "parameters",
    "start": "530800",
    "end": "532959"
  },
  {
    "text": "uh let me briefly explain how to import",
    "start": "532959",
    "end": "535279"
  },
  {
    "text": "metrics",
    "start": "535279",
    "end": "536000"
  },
  {
    "text": "you will be you'll also be able to find",
    "start": "536000",
    "end": "537760"
  },
  {
    "text": "this information from the document",
    "start": "537760",
    "end": "539440"
  },
  {
    "text": "but ray automatically generates a file",
    "start": "539440",
    "end": "541360"
  },
  {
    "text": "that promotes scan scripts to",
    "start": "541360",
    "end": "543200"
  },
  {
    "text": "and this allows users to script metrics",
    "start": "543200",
    "end": "545120"
  },
  {
    "text": "from every node in the cluster",
    "start": "545120",
    "end": "546880"
  },
  {
    "text": "so this file basically is a service",
    "start": "546880",
    "end": "548560"
  },
  {
    "text": "discovery file",
    "start": "548560",
    "end": "550080"
  },
  {
    "text": "and you just need to start up the",
    "start": "550080",
    "end": "551519"
  },
  {
    "text": "primitives um",
    "start": "551519",
    "end": "553120"
  },
  {
    "text": "with the configuration to scrape this",
    "start": "553120",
    "end": "554800"
  },
  {
    "text": "file and actually any skill product",
    "start": "554800",
    "end": "557760"
  },
  {
    "text": "already automatically starts primitives",
    "start": "557760",
    "end": "560000"
  },
  {
    "text": "and graphana to scrape metrics when you",
    "start": "560000",
    "end": "561920"
  },
  {
    "text": "start up the session",
    "start": "561920",
    "end": "563519"
  },
  {
    "text": "so here's an example if you click the",
    "start": "563519",
    "end": "565279"
  },
  {
    "text": "graph on a button there",
    "start": "565279",
    "end": "567279"
  },
  {
    "text": "or you can actually get into the graph",
    "start": "567279",
    "end": "568800"
  },
  {
    "text": "on the dashboard and from there you'll",
    "start": "568800",
    "end": "570320"
  },
  {
    "text": "be able to create your own dashboard",
    "start": "570320",
    "end": "572320"
  },
  {
    "text": "that shows the custom metrics in this",
    "start": "572320",
    "end": "574240"
  },
  {
    "text": "case as you might remember",
    "start": "574240",
    "end": "576240"
  },
  {
    "text": "um every actor ping uh incremented the",
    "start": "576240",
    "end": "579360"
  },
  {
    "text": "pin count and you can actually see um",
    "start": "579360",
    "end": "582399"
  },
  {
    "text": "the pin count has been increased i was",
    "start": "582399",
    "end": "584880"
  },
  {
    "text": "actually running this",
    "start": "584880",
    "end": "585839"
  },
  {
    "text": "on script for a pretty long time so you",
    "start": "585839",
    "end": "587760"
  },
  {
    "text": "can see there are 1 million pin count",
    "start": "587760",
    "end": "589440"
  },
  {
    "text": "for three minutes",
    "start": "589440",
    "end": "592480"
  },
  {
    "text": "and this is also the real world example",
    "start": "592800",
    "end": "594560"
  },
  {
    "text": "from racer racer is a machine learning",
    "start": "594560",
    "end": "596800"
  },
  {
    "text": "model sorting library written on top of",
    "start": "596800",
    "end": "598640"
  },
  {
    "text": "gray",
    "start": "598640",
    "end": "599279"
  },
  {
    "text": "you can see it creates three different",
    "start": "599279",
    "end": "600880"
  },
  {
    "text": "custom metrics like request counter",
    "start": "600880",
    "end": "602720"
  },
  {
    "text": "error counter and also chain latency",
    "start": "602720",
    "end": "604560"
  },
  {
    "text": "tracker",
    "start": "604560",
    "end": "605760"
  },
  {
    "text": "so they can actually track these metrics",
    "start": "605760",
    "end": "609360"
  },
  {
    "text": "and this is how to record metrics uh as",
    "start": "609360",
    "end": "612399"
  },
  {
    "text": "i showed you you just need to",
    "start": "612399",
    "end": "613920"
  },
  {
    "text": "specify the value with the dot record",
    "start": "613920",
    "end": "615680"
  },
  {
    "text": "method and we also provide the custom",
    "start": "615680",
    "end": "618160"
  },
  {
    "text": "labels so you can actually label",
    "start": "618160",
    "end": "620000"
  },
  {
    "text": "your metrics at the same time",
    "start": "620000",
    "end": "623440"
  },
  {
    "text": "let me briefly explain what's happening",
    "start": "623600",
    "end": "625040"
  },
  {
    "text": "behind the scene once metrics are",
    "start": "625040",
    "end": "627200"
  },
  {
    "text": "recorded through the custom metric api",
    "start": "627200",
    "end": "629200"
  },
  {
    "text": "all the metrics will be collected and",
    "start": "629200",
    "end": "630880"
  },
  {
    "text": "processed in open census formats",
    "start": "630880",
    "end": "632880"
  },
  {
    "text": "by ray and after that they will be",
    "start": "632880",
    "end": "634720"
  },
  {
    "text": "available to promote their samplings",
    "start": "634720",
    "end": "637200"
  },
  {
    "text": "we will go through how metrics are",
    "start": "637200",
    "end": "638480"
  },
  {
    "text": "collected at the end of presentation in",
    "start": "638480",
    "end": "641200"
  },
  {
    "text": "the architecture diagram",
    "start": "641200",
    "end": "644320"
  },
  {
    "text": "so let's see the last solution to",
    "start": "644320",
    "end": "645920"
  },
  {
    "text": "provide a way to track down traces of",
    "start": "645920",
    "end": "647839"
  },
  {
    "text": "distributed test connectors",
    "start": "647839",
    "end": "649440"
  },
  {
    "text": "ray will also have distributed tracing",
    "start": "649440",
    "end": "651440"
  },
  {
    "text": "support",
    "start": "651440",
    "end": "653440"
  },
  {
    "text": "this is something that is not currently",
    "start": "653440",
    "end": "655040"
  },
  {
    "text": "in progress but",
    "start": "655040",
    "end": "656480"
  },
  {
    "text": "we are actively um this is currently",
    "start": "656480",
    "end": "659680"
  },
  {
    "text": "in progress but and we're actively",
    "start": "659680",
    "end": "662079"
  },
  {
    "text": "developing it",
    "start": "662079",
    "end": "662800"
  },
  {
    "text": "and sooner or later it will be available",
    "start": "662800",
    "end": "664720"
  },
  {
    "text": "from ray",
    "start": "664720",
    "end": "665920"
  },
  {
    "text": "um distributed tracing is a way to",
    "start": "665920",
    "end": "667680"
  },
  {
    "text": "collect stats grouped by the same span",
    "start": "667680",
    "end": "669440"
  },
  {
    "text": "id",
    "start": "669440",
    "end": "669920"
  },
  {
    "text": "and this is particularly useful for race",
    "start": "669920",
    "end": "672560"
  },
  {
    "text": "uh",
    "start": "672560",
    "end": "673040"
  },
  {
    "text": "programming models that use actors and",
    "start": "673040",
    "end": "674959"
  },
  {
    "text": "tests because it is really hard to know",
    "start": "674959",
    "end": "678240"
  },
  {
    "text": "on the trace of actors and um tasks when",
    "start": "678240",
    "end": "681519"
  },
  {
    "text": "you're running the application",
    "start": "681519",
    "end": "684320"
  },
  {
    "text": "and actually any skill back-end is",
    "start": "684320",
    "end": "685839"
  },
  {
    "text": "already using open telemetry tracing",
    "start": "685839",
    "end": "688399"
  },
  {
    "text": "on top of gray so we're already",
    "start": "688399",
    "end": "690640"
  },
  {
    "text": "collecting this distributed tracing",
    "start": "690640",
    "end": "692399"
  },
  {
    "text": "and we are actually um able to see all",
    "start": "692399",
    "end": "695680"
  },
  {
    "text": "the",
    "start": "695680",
    "end": "696079"
  },
  {
    "text": "trace information from our dashboard",
    "start": "696079",
    "end": "699440"
  },
  {
    "text": "so this is what we are doing in our",
    "start": "699440",
    "end": "700880"
  },
  {
    "text": "product um this is for our production",
    "start": "700880",
    "end": "703279"
  },
  {
    "text": "monitoring systems now",
    "start": "703279",
    "end": "704480"
  },
  {
    "text": "so this is not provided users but this",
    "start": "704480",
    "end": "706399"
  },
  {
    "text": "will be available for users sooner or",
    "start": "706399",
    "end": "707839"
  },
  {
    "text": "later as well",
    "start": "707839",
    "end": "710480"
  },
  {
    "text": "let's dive into the next topic uh next",
    "start": "710480",
    "end": "712880"
  },
  {
    "text": "topic",
    "start": "712880",
    "end": "713920"
  },
  {
    "text": "ray is also object-based programming",
    "start": "713920",
    "end": "716800"
  },
  {
    "text": "let's take a deep breath into array",
    "start": "716800",
    "end": "718240"
  },
  {
    "text": "objects",
    "start": "718240",
    "end": "719040"
  },
  {
    "text": "first raised test connectors exchange",
    "start": "719040",
    "end": "721120"
  },
  {
    "text": "data through immutable objects stored in",
    "start": "721120",
    "end": "723040"
  },
  {
    "text": "shared memory",
    "start": "723040",
    "end": "724320"
  },
  {
    "text": "all tasks and actors are basically able",
    "start": "724320",
    "end": "726160"
  },
  {
    "text": "to access these objects to pass data to",
    "start": "726160",
    "end": "728160"
  },
  {
    "text": "each other",
    "start": "728160",
    "end": "729279"
  },
  {
    "text": "and second to make it easy to manage",
    "start": "729279",
    "end": "730959"
  },
  {
    "text": "memory usage of objects",
    "start": "730959",
    "end": "732320"
  },
  {
    "text": "ray is supporting distributed reference",
    "start": "732320",
    "end": "733920"
  },
  {
    "text": "counting for the sake of automatic",
    "start": "733920",
    "end": "735279"
  },
  {
    "text": "memory management",
    "start": "735279",
    "end": "736720"
  },
  {
    "text": "and this means objects that are not used",
    "start": "736720",
    "end": "738480"
  },
  {
    "text": "by ray will be automatically cleaned",
    "start": "738480",
    "end": "740000"
  },
  {
    "text": "from the cluster",
    "start": "740000",
    "end": "742079"
  },
  {
    "text": "so this is the demonstration of what i",
    "start": "742079",
    "end": "744000"
  },
  {
    "text": "just said so let's say there are",
    "start": "744000",
    "end": "745600"
  },
  {
    "text": "two tests one actor and there are",
    "start": "745600",
    "end": "747360"
  },
  {
    "text": "mapping or many many too many mapping to",
    "start": "747360",
    "end": "749600"
  },
  {
    "text": "all three objects",
    "start": "749600",
    "end": "751680"
  },
  {
    "text": "this is the corresponding code you can",
    "start": "751680",
    "end": "753440"
  },
  {
    "text": "see there are three objects created and",
    "start": "753440",
    "end": "755040"
  },
  {
    "text": "also two tests",
    "start": "755040",
    "end": "755920"
  },
  {
    "text": "test a and test c and in the middle",
    "start": "755920",
    "end": "757839"
  },
  {
    "text": "there's a task b",
    "start": "757839",
    "end": "758959"
  },
  {
    "text": "so this is exact same um code that",
    "start": "758959",
    "end": "762720"
  },
  {
    "text": "presents the previous diagram let's",
    "start": "762720",
    "end": "765600"
  },
  {
    "text": "suppose tests is done earlier than",
    "start": "765600",
    "end": "767519"
  },
  {
    "text": "on other tasks and in this case the",
    "start": "767519",
    "end": "769279"
  },
  {
    "text": "reference to object 3 is fully gone",
    "start": "769279",
    "end": "771440"
  },
  {
    "text": "and object 3 is guard collected this is",
    "start": "771440",
    "end": "773600"
  },
  {
    "text": "how",
    "start": "773600",
    "end": "775040"
  },
  {
    "text": "all the array objects are automatically",
    "start": "775040",
    "end": "776720"
  },
  {
    "text": "managed",
    "start": "776720",
    "end": "778560"
  },
  {
    "text": "then what's the challenges in this",
    "start": "778560",
    "end": "779760"
  },
  {
    "text": "programming model um",
    "start": "779760",
    "end": "782320"
  },
  {
    "text": "the most common issue is memory lick and",
    "start": "782320",
    "end": "784399"
  },
  {
    "text": "all the array implemented distributed",
    "start": "784399",
    "end": "786000"
  },
  {
    "text": "reference counting to make the memory",
    "start": "786000",
    "end": "787440"
  },
  {
    "text": "management as easy as possible",
    "start": "787440",
    "end": "789440"
  },
  {
    "text": "users still can have memory link for",
    "start": "789440",
    "end": "791760"
  },
  {
    "text": "example imagine you just forget to",
    "start": "791760",
    "end": "794000"
  },
  {
    "text": "have a local reference to one of your",
    "start": "794000",
    "end": "795600"
  },
  {
    "text": "object reference in this case the object",
    "start": "795600",
    "end": "798399"
  },
  {
    "text": "won't be garbage collected forever until",
    "start": "798399",
    "end": "800079"
  },
  {
    "text": "you remove the references because it's",
    "start": "800079",
    "end": "801920"
  },
  {
    "text": "still used",
    "start": "801920",
    "end": "803440"
  },
  {
    "text": "um and in order to solve this problem we",
    "start": "803440",
    "end": "805839"
  },
  {
    "text": "will need to uh",
    "start": "805839",
    "end": "806800"
  },
  {
    "text": "improve the visibility to ray object",
    "start": "806800",
    "end": "808399"
  },
  {
    "text": "references and we developed",
    "start": "808399",
    "end": "810399"
  },
  {
    "text": "one client tool and also dashboard",
    "start": "810399",
    "end": "812320"
  },
  {
    "text": "called memory view",
    "start": "812320",
    "end": "814160"
  },
  {
    "text": "this is how memory view looks like as",
    "start": "814160",
    "end": "816240"
  },
  {
    "text": "you can see it has various information",
    "start": "816240",
    "end": "817920"
  },
  {
    "text": "about objects",
    "start": "817920",
    "end": "818800"
  },
  {
    "text": "and where they're referenced and most",
    "start": "818800",
    "end": "821120"
  },
  {
    "text": "cool stuff is it shows the call side so",
    "start": "821120",
    "end": "823199"
  },
  {
    "text": "you can actually know where the objects",
    "start": "823199",
    "end": "824720"
  },
  {
    "text": "are created",
    "start": "824720",
    "end": "827199"
  },
  {
    "text": "so i'm gonna have a short demo uh about",
    "start": "827199",
    "end": "829360"
  },
  {
    "text": "how to debug real",
    "start": "829360",
    "end": "830800"
  },
  {
    "text": "world issue",
    "start": "830800",
    "end": "833440"
  },
  {
    "text": "so this is the real world issue that i",
    "start": "834320",
    "end": "836240"
  },
  {
    "text": "um was reported about 19 days ago",
    "start": "836240",
    "end": "838560"
  },
  {
    "text": "the user claims that there is always out",
    "start": "838560",
    "end": "840480"
  },
  {
    "text": "of memory issue when",
    "start": "840480",
    "end": "843199"
  },
  {
    "text": "he was running the applications and this",
    "start": "843199",
    "end": "845839"
  },
  {
    "text": "was this was the code example he gave me",
    "start": "845839",
    "end": "847600"
  },
  {
    "text": "originally and he also gave me the",
    "start": "847600",
    "end": "849519"
  },
  {
    "text": "more toy example so what i did is i just",
    "start": "849519",
    "end": "852560"
  },
  {
    "text": "copied",
    "start": "852560",
    "end": "854839"
  },
  {
    "text": "and just started this application",
    "start": "854839",
    "end": "860160"
  },
  {
    "text": "and i just went to the dashboard click",
    "start": "861600",
    "end": "864639"
  },
  {
    "text": "the memory view",
    "start": "864639",
    "end": "867360"
  },
  {
    "text": "and from here you'll be able to see the",
    "start": "868320",
    "end": "871040"
  },
  {
    "text": "total",
    "start": "871040",
    "end": "871519"
  },
  {
    "text": "use by pending test count is keep",
    "start": "871519",
    "end": "873839"
  },
  {
    "text": "increasing and this is why there was",
    "start": "873839",
    "end": "875440"
  },
  {
    "text": "memory link",
    "start": "875440",
    "end": "876560"
  },
  {
    "text": "and let's actually reason about why this",
    "start": "876560",
    "end": "878560"
  },
  {
    "text": "happens so when you actually just look",
    "start": "878560",
    "end": "880320"
  },
  {
    "text": "at code",
    "start": "880320",
    "end": "880880"
  },
  {
    "text": "this object id is uh the reference is",
    "start": "880880",
    "end": "884560"
  },
  {
    "text": "gone every time the loop is done as you",
    "start": "884560",
    "end": "886480"
  },
  {
    "text": "can see",
    "start": "886480",
    "end": "888079"
  },
  {
    "text": "which means this object id has to be",
    "start": "888079",
    "end": "889760"
  },
  {
    "text": "garbage completed",
    "start": "889760",
    "end": "892720"
  },
  {
    "text": "so this is an example so this is our",
    "start": "892800",
    "end": "895760"
  },
  {
    "text": "guess",
    "start": "895760",
    "end": "896160"
  },
  {
    "text": "every for loop uh we just expected the",
    "start": "896160",
    "end": "899519"
  },
  {
    "text": "object was scarce collected but in",
    "start": "899519",
    "end": "901600"
  },
  {
    "text": "reality it wasn't we",
    "start": "901600",
    "end": "902880"
  },
  {
    "text": "could see that the pending test count",
    "start": "902880",
    "end": "905360"
  },
  {
    "text": "has been increased",
    "start": "905360",
    "end": "906720"
  },
  {
    "text": "and the reason behind is because we",
    "start": "906720",
    "end": "909440"
  },
  {
    "text": "submitted so many call tasks",
    "start": "909440",
    "end": "911120"
  },
  {
    "text": "very quickly so all the call test has",
    "start": "911120",
    "end": "913040"
  },
  {
    "text": "been um cued in the relay queue",
    "start": "913040",
    "end": "915279"
  },
  {
    "text": "and because objects are referenced by",
    "start": "915279",
    "end": "917279"
  },
  {
    "text": "them they're although their local",
    "start": "917279",
    "end": "918800"
  },
  {
    "text": "reference was gone their",
    "start": "918800",
    "end": "920240"
  },
  {
    "text": "distributed reference counting wasn't",
    "start": "920240",
    "end": "921839"
  },
  {
    "text": "gone yet and as a result",
    "start": "921839",
    "end": "923760"
  },
  {
    "text": "the object was still not garbage",
    "start": "923760",
    "end": "926639"
  },
  {
    "text": "collected",
    "start": "926639",
    "end": "927360"
  },
  {
    "text": "and we could be able to see this by",
    "start": "927360",
    "end": "929040"
  },
  {
    "text": "actually check the reference type of the",
    "start": "929040",
    "end": "931040"
  },
  {
    "text": "object",
    "start": "931040",
    "end": "931759"
  },
  {
    "text": "and which was thought used by pending",
    "start": "931759",
    "end": "934000"
  },
  {
    "text": "tests",
    "start": "934000",
    "end": "934880"
  },
  {
    "text": "and i really quickly figured out this",
    "start": "934880",
    "end": "936959"
  },
  {
    "text": "issue and",
    "start": "936959",
    "end": "938240"
  },
  {
    "text": "told users that um you just need to uh",
    "start": "938240",
    "end": "942160"
  },
  {
    "text": "make the call task a little bit more",
    "start": "942160",
    "end": "943759"
  },
  {
    "text": "heavier so that um you're not going to",
    "start": "943759",
    "end": "946160"
  },
  {
    "text": "solve me too many tasks at once and in",
    "start": "946160",
    "end": "947839"
  },
  {
    "text": "the case you can avoid",
    "start": "947839",
    "end": "949279"
  },
  {
    "text": "um having too much too large memory in",
    "start": "949279",
    "end": "951360"
  },
  {
    "text": "the short time",
    "start": "951360",
    "end": "953600"
  },
  {
    "text": "so the next update is the observability",
    "start": "953600",
    "end": "955360"
  },
  {
    "text": "of bray itself uh we're going to",
    "start": "955360",
    "end": "957279"
  },
  {
    "text": "actually",
    "start": "957279",
    "end": "957920"
  },
  {
    "text": "um make it very short because we are",
    "start": "957920",
    "end": "959440"
  },
  {
    "text": "kind of out of time but since rey",
    "start": "959440",
    "end": "961680"
  },
  {
    "text": "has really highly distributed",
    "start": "961680",
    "end": "963040"
  },
  {
    "text": "infrastructure it has just typical",
    "start": "963040",
    "end": "964880"
  },
  {
    "text": "problems the most distributed systems",
    "start": "964880",
    "end": "966560"
  },
  {
    "text": "have",
    "start": "966560",
    "end": "967040"
  },
  {
    "text": "like there are too many components you",
    "start": "967040",
    "end": "968639"
  },
  {
    "text": "don't know what they're doing and",
    "start": "968639",
    "end": "970000"
  },
  {
    "text": "they're a lot of logs and",
    "start": "970000",
    "end": "971759"
  },
  {
    "text": "um logs are all across so it's hard to",
    "start": "971759",
    "end": "974160"
  },
  {
    "text": "have a trace of logs",
    "start": "974160",
    "end": "976560"
  },
  {
    "text": "um there are various solutions we",
    "start": "976560",
    "end": "978000"
  },
  {
    "text": "provide to make it easy to debug and",
    "start": "978000",
    "end": "979759"
  },
  {
    "text": "observe the ray system itself",
    "start": "979759",
    "end": "981440"
  },
  {
    "text": "and as i mentioned earlier if races it's",
    "start": "981440",
    "end": "983920"
  },
  {
    "text": "if if",
    "start": "983920",
    "end": "984480"
  },
  {
    "text": "it is if it is easy to debug rate system",
    "start": "984480",
    "end": "986959"
  },
  {
    "text": "itself",
    "start": "986959",
    "end": "987519"
  },
  {
    "text": "you're going to um save a lot of",
    "start": "987519",
    "end": "989440"
  },
  {
    "text": "operational costs because you can just",
    "start": "989440",
    "end": "991279"
  },
  {
    "text": "operate a single system instead of",
    "start": "991279",
    "end": "993199"
  },
  {
    "text": "operating multiple complex",
    "start": "993199",
    "end": "994959"
  },
  {
    "text": "glue systems and we basically provide",
    "start": "994959",
    "end": "997440"
  },
  {
    "text": "three different solutions",
    "start": "997440",
    "end": "998480"
  },
  {
    "text": "one is dashboard machine view and also",
    "start": "998480",
    "end": "1000959"
  },
  {
    "text": "system metrics export",
    "start": "1000959",
    "end": "1002240"
  },
  {
    "text": "and also even framework you'll be able",
    "start": "1002240",
    "end": "1004320"
  },
  {
    "text": "to see this information later more in",
    "start": "1004320",
    "end": "1006399"
  },
  {
    "text": "our documentation so lastly let's see",
    "start": "1006399",
    "end": "1009519"
  },
  {
    "text": "the evolution of race monitoring",
    "start": "1009519",
    "end": "1010880"
  },
  {
    "text": "architecture",
    "start": "1010880",
    "end": "1011920"
  },
  {
    "text": "we'll see race architecture has changed",
    "start": "1011920",
    "end": "1013839"
  },
  {
    "text": "before we'll see how",
    "start": "1013839",
    "end": "1015600"
  },
  {
    "text": "ray's architecture has been changed",
    "start": "1015600",
    "end": "1017120"
  },
  {
    "text": "before and after 1.0",
    "start": "1017120",
    "end": "1019759"
  },
  {
    "text": "so there are two motivation of",
    "start": "1019759",
    "end": "1020959"
  },
  {
    "text": "architectural change um",
    "start": "1020959",
    "end": "1023279"
  },
  {
    "text": "so we figured out some users turned on",
    "start": "1023279",
    "end": "1026079"
  },
  {
    "text": "turned off the dashboard because of",
    "start": "1026079",
    "end": "1027678"
  },
  {
    "text": "overhead so we wanted to minimize the",
    "start": "1027679",
    "end": "1029600"
  },
  {
    "text": "overhead in general",
    "start": "1029600",
    "end": "1030798"
  },
  {
    "text": "and also all of ray users have their own",
    "start": "1030799",
    "end": "1032720"
  },
  {
    "text": "monitoring stacks",
    "start": "1032720",
    "end": "1034000"
  },
  {
    "text": "which means our solution which is making",
    "start": "1034000",
    "end": "1036240"
  },
  {
    "text": "the dashboard the first class citizen",
    "start": "1036240",
    "end": "1038160"
  },
  {
    "text": "for monitoring was not working for most",
    "start": "1038160",
    "end": "1040798"
  },
  {
    "text": "of users",
    "start": "1040799",
    "end": "1041520"
  },
  {
    "text": "so we just wanted to make dashboard um",
    "start": "1041520",
    "end": "1044558"
  },
  {
    "text": "as one of consumers of the whole",
    "start": "1044559",
    "end": "1047038"
  },
  {
    "text": "monitoring infrastructure",
    "start": "1047039",
    "end": "1049600"
  },
  {
    "text": "so firstly let's take a look at",
    "start": "1049600",
    "end": "1050880"
  },
  {
    "text": "architecture before 1.0",
    "start": "1050880",
    "end": "1052799"
  },
  {
    "text": "um so here before 1.0 after 1.0 they're",
    "start": "1052799",
    "end": "1056320"
  },
  {
    "text": "not exactly the right diagram because",
    "start": "1056320",
    "end": "1059120"
  },
  {
    "text": "this architectural changes in in",
    "start": "1059120",
    "end": "1060720"
  },
  {
    "text": "progress",
    "start": "1060720",
    "end": "1061360"
  },
  {
    "text": "so just be aware of that um the diagram",
    "start": "1061360",
    "end": "1064799"
  },
  {
    "text": "represents the common architecture of",
    "start": "1064799",
    "end": "1066320"
  },
  {
    "text": "ray",
    "start": "1066320",
    "end": "1066720"
  },
  {
    "text": "oh it has many worker nodes and a head",
    "start": "1066720",
    "end": "1068640"
  },
  {
    "text": "node which uh has the dashboard process",
    "start": "1068640",
    "end": "1071840"
  },
  {
    "text": "and so let's see what's happening so",
    "start": "1071840",
    "end": "1073360"
  },
  {
    "text": "every one second there's four pings to",
    "start": "1073360",
    "end": "1074960"
  },
  {
    "text": "rail it",
    "start": "1074960",
    "end": "1075840"
  },
  {
    "text": "and after they rayleigh pings all the",
    "start": "1075840",
    "end": "1077120"
  },
  {
    "text": "workers to get the states",
    "start": "1077120",
    "end": "1078880"
  },
  {
    "text": "and relate respond with its own protobuf",
    "start": "1078880",
    "end": "1081200"
  },
  {
    "text": "format so dashboard can get the stage of",
    "start": "1081200",
    "end": "1083360"
  },
  {
    "text": "the",
    "start": "1083360",
    "end": "1083679"
  },
  {
    "text": "um each node and its worker and this",
    "start": "1083679",
    "end": "1086400"
  },
  {
    "text": "happens to",
    "start": "1086400",
    "end": "1087280"
  },
  {
    "text": "every node in the cluster every one",
    "start": "1087280",
    "end": "1088880"
  },
  {
    "text": "second and this actually incurs",
    "start": "1088880",
    "end": "1091280"
  },
  {
    "text": "um really high overhead because",
    "start": "1091280",
    "end": "1094559"
  },
  {
    "text": "a relative is on the critical path which",
    "start": "1094559",
    "end": "1096480"
  },
  {
    "text": "means relative",
    "start": "1096480",
    "end": "1097919"
  },
  {
    "text": "uh quote that we are running for some of",
    "start": "1097919",
    "end": "1100960"
  },
  {
    "text": "ray apis always have to pass braille",
    "start": "1100960",
    "end": "1103520"
  },
  {
    "text": "and since rayleigh becomes busy by",
    "start": "1103520",
    "end": "1106640"
  },
  {
    "text": "collecting metrics",
    "start": "1106640",
    "end": "1108720"
  },
  {
    "text": "oh the system started having overhead",
    "start": "1108720",
    "end": "1111039"
  },
  {
    "text": "and the",
    "start": "1111039",
    "end": "1112000"
  },
  {
    "text": "whole things became a little slower",
    "start": "1112000",
    "end": "1115440"
  },
  {
    "text": "so let's see how the architecture has",
    "start": "1115600",
    "end": "1117200"
  },
  {
    "text": "been changed after 1.0",
    "start": "1117200",
    "end": "1118640"
  },
  {
    "text": "as you can see there is an additional",
    "start": "1118640",
    "end": "1120080"
  },
  {
    "text": "process called dashboard agents at each",
    "start": "1120080",
    "end": "1121760"
  },
  {
    "text": "node and dashboard agent or python",
    "start": "1121760",
    "end": "1123520"
  },
  {
    "text": "processes running",
    "start": "1123520",
    "end": "1124720"
  },
  {
    "text": "at each node and this is in charge of",
    "start": "1124720",
    "end": "1126880"
  },
  {
    "text": "coordinating all metrics logs and",
    "start": "1126880",
    "end": "1128480"
  },
  {
    "text": "tracing from each nodes",
    "start": "1128480",
    "end": "1130320"
  },
  {
    "text": "so this is what's happening now all the",
    "start": "1130320",
    "end": "1131919"
  },
  {
    "text": "rail and workers are reporting to",
    "start": "1131919",
    "end": "1133520"
  },
  {
    "text": "metrics agent",
    "start": "1133520",
    "end": "1134320"
  },
  {
    "text": "and metrics agents call on process all",
    "start": "1134320",
    "end": "1136720"
  },
  {
    "text": "the telemetrics",
    "start": "1136720",
    "end": "1138799"
  },
  {
    "text": "so now there's four request data from",
    "start": "1138799",
    "end": "1140400"
  },
  {
    "text": "the dashboard agents and this is",
    "start": "1140400",
    "end": "1142080"
  },
  {
    "text": "happening",
    "start": "1142080",
    "end": "1143280"
  },
  {
    "text": "on demand in the same way it requests",
    "start": "1143280",
    "end": "1146320"
  },
  {
    "text": "every node in the cluster",
    "start": "1146320",
    "end": "1147760"
  },
  {
    "text": "after that dashboard we'll expose the",
    "start": "1147760",
    "end": "1149919"
  },
  {
    "text": "api so the users are actually able to",
    "start": "1149919",
    "end": "1151600"
  },
  {
    "text": "consume data from the dashboard",
    "start": "1151600",
    "end": "1153600"
  },
  {
    "text": "and note this is also not done yet this",
    "start": "1153600",
    "end": "1155360"
  },
  {
    "text": "is currently in active progress",
    "start": "1155360",
    "end": "1158720"
  },
  {
    "text": "now let's take a look at the advantage",
    "start": "1158720",
    "end": "1160080"
  },
  {
    "text": "of the infrastructure the first",
    "start": "1160080",
    "end": "1161520"
  },
  {
    "text": "advantage is the low overhead as you can",
    "start": "1161520",
    "end": "1163440"
  },
  {
    "text": "see we",
    "start": "1163440",
    "end": "1164640"
  },
  {
    "text": "excluded ray led from the matrix",
    "start": "1164640",
    "end": "1167120"
  },
  {
    "text": "collection pad",
    "start": "1167120",
    "end": "1168160"
  },
  {
    "text": "and everything is done within a single",
    "start": "1168160",
    "end": "1170160"
  },
  {
    "text": "process called dashboard agent",
    "start": "1170160",
    "end": "1171919"
  },
  {
    "text": "and thanks to that um",
    "start": "1171919",
    "end": "1174960"
  },
  {
    "text": "it we had much less overhead than before",
    "start": "1174960",
    "end": "1178640"
  },
  {
    "text": "and also dashboard stay relatively",
    "start": "1178640",
    "end": "1180640"
  },
  {
    "text": "lightweight because we are pulling data",
    "start": "1180640",
    "end": "1182240"
  },
  {
    "text": "only on demand",
    "start": "1182240",
    "end": "1184080"
  },
  {
    "text": "and the second advantage the biggest",
    "start": "1184080",
    "end": "1186000"
  },
  {
    "text": "advantage is we can decouple monitoring",
    "start": "1186000",
    "end": "1188080"
  },
  {
    "text": "infra from the dashboard and dashboard",
    "start": "1188080",
    "end": "1189919"
  },
  {
    "text": "this channel just one of the consumers",
    "start": "1189919",
    "end": "1191520"
  },
  {
    "text": "of the infrastructure",
    "start": "1191520",
    "end": "1193120"
  },
  {
    "text": "so let's see the example um the box",
    "start": "1193120",
    "end": "1195600"
  },
  {
    "text": "means the metrics infrastructure and",
    "start": "1195600",
    "end": "1197360"
  },
  {
    "text": "asian edge node collects",
    "start": "1197360",
    "end": "1198720"
  },
  {
    "text": "and processes telemetry such as events",
    "start": "1198720",
    "end": "1201039"
  },
  {
    "text": "metrics or custom metrics or",
    "start": "1201039",
    "end": "1203200"
  },
  {
    "text": "things like that from each node and as",
    "start": "1203200",
    "end": "1206480"
  },
  {
    "text": "you can see dashboard is just one of",
    "start": "1206480",
    "end": "1207840"
  },
  {
    "text": "consumers",
    "start": "1207840",
    "end": "1208960"
  },
  {
    "text": "and in the same way you can set up the",
    "start": "1208960",
    "end": "1210640"
  },
  {
    "text": "prompt deals as another consumer and",
    "start": "1210640",
    "end": "1212400"
  },
  {
    "text": "that's how we actually collected metrics",
    "start": "1212400",
    "end": "1214320"
  },
  {
    "text": "custom metrics and system",
    "start": "1214320",
    "end": "1215760"
  },
  {
    "text": "system metrics through parameters uh as",
    "start": "1215760",
    "end": "1218400"
  },
  {
    "text": "i show in the beginning of the slides",
    "start": "1218400",
    "end": "1221440"
  },
  {
    "text": "uh we can use many other industry",
    "start": "1221440",
    "end": "1223120"
  },
  {
    "text": "solutions for logging metrics tracing",
    "start": "1223120",
    "end": "1224960"
  },
  {
    "text": "and etc as a consumer of the",
    "start": "1224960",
    "end": "1226559"
  },
  {
    "text": "infrastructure as a result",
    "start": "1226559",
    "end": "1229440"
  },
  {
    "text": "let's see lastly let's do the future",
    "start": "1229440",
    "end": "1231039"
  },
  {
    "text": "roadmap um",
    "start": "1231039",
    "end": "1233120"
  },
  {
    "text": "at the point of 1.0 we are moving",
    "start": "1233120",
    "end": "1235280"
  },
  {
    "text": "towards new architecture",
    "start": "1235280",
    "end": "1236640"
  },
  {
    "text": "and the matrix pushing uh to the agent",
    "start": "1236640",
    "end": "1239520"
  },
  {
    "text": "is already implemented",
    "start": "1239520",
    "end": "1240960"
  },
  {
    "text": "and we are supporting importing metrics",
    "start": "1240960",
    "end": "1243760"
  },
  {
    "text": "using primitives",
    "start": "1243760",
    "end": "1244960"
  },
  {
    "text": "and also dashboard ux has been improved",
    "start": "1244960",
    "end": "1246720"
  },
  {
    "text": "a lot and we also",
    "start": "1246720",
    "end": "1248159"
  },
  {
    "text": "started having experimental custom",
    "start": "1248159",
    "end": "1249840"
  },
  {
    "text": "metrics support",
    "start": "1249840",
    "end": "1251840"
  },
  {
    "text": "and after 1.0 we are also going to have",
    "start": "1251840",
    "end": "1254320"
  },
  {
    "text": "dashboard",
    "start": "1254320",
    "end": "1255360"
  },
  {
    "text": "official dashboard apis the users can",
    "start": "1255360",
    "end": "1257120"
  },
  {
    "text": "consume and we are",
    "start": "1257120",
    "end": "1258640"
  },
  {
    "text": "going to support custom events and also",
    "start": "1258640",
    "end": "1260320"
  },
  {
    "text": "distributed tracing",
    "start": "1260320",
    "end": "1262240"
  },
  {
    "text": "um of course there will be more",
    "start": "1262240",
    "end": "1263840"
  },
  {
    "text": "improvement in dashboard ux we are",
    "start": "1263840",
    "end": "1265600"
  },
  {
    "text": "investing a lot of resources on it",
    "start": "1265600",
    "end": "1267360"
  },
  {
    "text": "resources on it and also the",
    "start": "1267360",
    "end": "1269360"
  },
  {
    "text": "architecture",
    "start": "1269360",
    "end": "1271280"
  },
  {
    "text": "change is gonna be finished up so in",
    "start": "1271280",
    "end": "1274240"
  },
  {
    "text": "conclusion",
    "start": "1274240",
    "end": "1275600"
  },
  {
    "text": "um improving monitoring and debugging",
    "start": "1275600",
    "end": "1277520"
  },
  {
    "text": "experience in prey is crucial to achieve",
    "start": "1277520",
    "end": "1279520"
  },
  {
    "text": "our goal and we are in active progress",
    "start": "1279520",
    "end": "1281919"
  },
  {
    "text": "in building necessary tools to make it",
    "start": "1281919",
    "end": "1283679"
  },
  {
    "text": "really easy",
    "start": "1283679",
    "end": "1285600"
  },
  {
    "text": "that's it thank you so much for watching",
    "start": "1285600",
    "end": "1287200"
  },
  {
    "text": "the presentation",
    "start": "1287200",
    "end": "1291120"
  }
]