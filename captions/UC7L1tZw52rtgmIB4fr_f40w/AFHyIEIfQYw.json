[
  {
    "start": "0",
    "end": "93000"
  },
  {
    "text": "hello everyone thanks for joining this",
    "start": "3120",
    "end": "5120"
  },
  {
    "text": "talk",
    "start": "5120",
    "end": "6000"
  },
  {
    "text": "i'm glad to be here at the resume 2020",
    "start": "6000",
    "end": "10160"
  },
  {
    "text": "unfortunately we cannot meet uh in",
    "start": "10160",
    "end": "12559"
  },
  {
    "text": "person today",
    "start": "12559",
    "end": "13360"
  },
  {
    "text": "due to the pandemic i hope everyone is",
    "start": "13360",
    "end": "16160"
  },
  {
    "text": "staying safe",
    "start": "16160",
    "end": "17920"
  },
  {
    "text": "first let me introduce myself a little",
    "start": "17920",
    "end": "20480"
  },
  {
    "text": "bit",
    "start": "20480",
    "end": "21520"
  },
  {
    "text": "my name is hao chen i'm a committer in",
    "start": "21520",
    "end": "23760"
  },
  {
    "text": "rural community",
    "start": "23760",
    "end": "25199"
  },
  {
    "text": "and a staff engineer at financial",
    "start": "25199",
    "end": "28400"
  },
  {
    "text": "and at the end and my team works on the",
    "start": "28400",
    "end": "31439"
  },
  {
    "text": "recall",
    "start": "31439",
    "end": "32320"
  },
  {
    "text": "we support other teams to build systems",
    "start": "32320",
    "end": "36160"
  },
  {
    "text": "on top of ray and is probably",
    "start": "36160",
    "end": "39520"
  },
  {
    "text": "one of the earls companies that started",
    "start": "39520",
    "end": "42079"
  },
  {
    "text": "using ray",
    "start": "42079",
    "end": "43200"
  },
  {
    "text": "we started with our collaboration with",
    "start": "43200",
    "end": "45920"
  },
  {
    "text": "the red lab",
    "start": "45920",
    "end": "47200"
  },
  {
    "text": "on ray back in 2017",
    "start": "47200",
    "end": "50399"
  },
  {
    "text": "and during the probably years we have",
    "start": "50399",
    "end": "52640"
  },
  {
    "text": "widely adopted ray",
    "start": "52640",
    "end": "54480"
  },
  {
    "text": "in production for many business areas",
    "start": "54480",
    "end": "58079"
  },
  {
    "text": "and we all and we also implemented a lot",
    "start": "58079",
    "end": "61359"
  },
  {
    "text": "of systems",
    "start": "61359",
    "end": "62640"
  },
  {
    "text": "on top of ray at the same time we also",
    "start": "62640",
    "end": "66240"
  },
  {
    "text": "want to contribute back to the open",
    "start": "66240",
    "end": "68320"
  },
  {
    "text": "source community",
    "start": "68320",
    "end": "70159"
  },
  {
    "text": "we have we have open sourced a lot of",
    "start": "70159",
    "end": "72720"
  },
  {
    "text": "features and improvements",
    "start": "72720",
    "end": "74880"
  },
  {
    "text": "and to ray and today i'm going to",
    "start": "74880",
    "end": "78080"
  },
  {
    "text": "talk about two features and java api",
    "start": "78080",
    "end": "81439"
  },
  {
    "text": "and cross language programming they were",
    "start": "81439",
    "end": "84159"
  },
  {
    "text": "just released a few days ago",
    "start": "84159",
    "end": "86080"
  },
  {
    "text": "with the re 1.0",
    "start": "86080",
    "end": "89600"
  },
  {
    "text": "first i'm going to talk about the java",
    "start": "89600",
    "end": "92000"
  },
  {
    "text": "api",
    "start": "92000",
    "end": "93360"
  },
  {
    "start": "93000",
    "end": "93000"
  },
  {
    "text": "so in the beginning i want to explain",
    "start": "93360",
    "end": "95920"
  },
  {
    "text": "why we",
    "start": "95920",
    "end": "96720"
  },
  {
    "text": "needed java on ray",
    "start": "96720",
    "end": "100320"
  },
  {
    "text": "so as we know the mission of ray is to",
    "start": "100320",
    "end": "104399"
  },
  {
    "text": "provide a fast and simple framework for",
    "start": "104399",
    "end": "106960"
  },
  {
    "text": "people to",
    "start": "106960",
    "end": "107920"
  },
  {
    "text": "develop distributed systems",
    "start": "107920",
    "end": "111920"
  },
  {
    "text": "speaking of distributed systems there",
    "start": "111920",
    "end": "115040"
  },
  {
    "text": "are some popular areas",
    "start": "115040",
    "end": "117200"
  },
  {
    "text": "for example in the machine learning area",
    "start": "117200",
    "end": "119680"
  },
  {
    "text": "python is the most popular language",
    "start": "119680",
    "end": "122880"
  },
  {
    "text": "while in the big data area and java is",
    "start": "122880",
    "end": "126719"
  },
  {
    "text": "more common",
    "start": "126719",
    "end": "128720"
  },
  {
    "text": "and so we wanted to extend the risk",
    "start": "128720",
    "end": "131599"
  },
  {
    "text": "scope",
    "start": "131599",
    "end": "132560"
  },
  {
    "text": "from only machine learning to also",
    "start": "132560",
    "end": "135840"
  },
  {
    "text": "big data as well as many other areas",
    "start": "135840",
    "end": "140000"
  },
  {
    "text": "and make it a general purpose framework",
    "start": "140000",
    "end": "143920"
  },
  {
    "text": "for any distributed systems",
    "start": "143920",
    "end": "147599"
  },
  {
    "start": "147000",
    "end": "147000"
  },
  {
    "text": "and before diving into the details uh",
    "start": "147599",
    "end": "150640"
  },
  {
    "text": "let's take a moment to refresh our mind",
    "start": "150640",
    "end": "153519"
  },
  {
    "text": "on",
    "start": "153519",
    "end": "154319"
  },
  {
    "text": "the two basic concepts in ray",
    "start": "154319",
    "end": "157519"
  },
  {
    "text": "so first we have uh the task",
    "start": "157519",
    "end": "160800"
  },
  {
    "text": "and the task is untest a task is a",
    "start": "160800",
    "end": "163680"
  },
  {
    "text": "stateless unit",
    "start": "163680",
    "end": "164800"
  },
  {
    "text": "for computation and the ray can turn any",
    "start": "164800",
    "end": "167920"
  },
  {
    "text": "python function",
    "start": "167920",
    "end": "169120"
  },
  {
    "text": "into a task so it's also called a remote",
    "start": "169120",
    "end": "172239"
  },
  {
    "text": "task remote function",
    "start": "172239",
    "end": "174160"
  },
  {
    "text": "and the other concept is the actor",
    "start": "174160",
    "end": "177440"
  },
  {
    "text": "an actor is a stateful unit for",
    "start": "177440",
    "end": "179440"
  },
  {
    "text": "computation",
    "start": "179440",
    "end": "180800"
  },
  {
    "text": "and enrique creates an actor from any",
    "start": "180800",
    "end": "184480"
  },
  {
    "text": "python class",
    "start": "184480",
    "end": "186000"
  },
  {
    "text": "and here is one example and then when we",
    "start": "186000",
    "end": "189760"
  },
  {
    "start": "189000",
    "end": "189000"
  },
  {
    "text": "started",
    "start": "189760",
    "end": "190879"
  },
  {
    "text": "designing the java api we've got about a",
    "start": "190879",
    "end": "194000"
  },
  {
    "text": "few",
    "start": "194000",
    "end": "194400"
  },
  {
    "text": "principles that we should follow for",
    "start": "194400",
    "end": "197440"
  },
  {
    "text": "example",
    "start": "197440",
    "end": "198080"
  },
  {
    "text": "we wanted we wanted the java api to be",
    "start": "198080",
    "end": "201440"
  },
  {
    "text": "still based on",
    "start": "201440",
    "end": "202879"
  },
  {
    "text": "the two basic concepts in ray the task",
    "start": "202879",
    "end": "206239"
  },
  {
    "text": "and the reactor",
    "start": "206239",
    "end": "208560"
  },
  {
    "text": "and also we wanted the java api to be",
    "start": "208560",
    "end": "212239"
  },
  {
    "text": "as consistent with python as possible",
    "start": "212239",
    "end": "215840"
  },
  {
    "text": "and also we want the api to be idiomatic",
    "start": "215840",
    "end": "219040"
  },
  {
    "text": "to the java language",
    "start": "219040",
    "end": "221040"
  },
  {
    "text": "so java users who are not familiar with",
    "start": "221040",
    "end": "224480"
  },
  {
    "text": "ray can easily get started",
    "start": "224480",
    "end": "229040"
  },
  {
    "start": "229000",
    "end": "229000"
  },
  {
    "text": "and then let's take a look at how the",
    "start": "229040",
    "end": "231440"
  },
  {
    "text": "java api",
    "start": "231440",
    "end": "232879"
  },
  {
    "text": "looks like exactly with a start from the",
    "start": "232879",
    "end": "236000"
  },
  {
    "text": "python",
    "start": "236000",
    "end": "236640"
  },
  {
    "text": "task api and here we have example here",
    "start": "236640",
    "end": "240560"
  },
  {
    "text": "and we have um first we have a regular",
    "start": "240560",
    "end": "243840"
  },
  {
    "text": "javastatic method",
    "start": "243840",
    "end": "245120"
  },
  {
    "text": "here uh it's a it's a square method in a",
    "start": "245120",
    "end": "248560"
  },
  {
    "text": "math",
    "start": "248560",
    "end": "249280"
  },
  {
    "text": "um class and similar with python we can",
    "start": "249280",
    "end": "254879"
  },
  {
    "text": "we can turn any javastatic method into a",
    "start": "254879",
    "end": "257919"
  },
  {
    "text": "retask with this api",
    "start": "257919",
    "end": "261720"
  },
  {
    "text": "read.task.remote and we can see there",
    "start": "261720",
    "end": "264400"
  },
  {
    "text": "are two",
    "start": "264400",
    "end": "265360"
  },
  {
    "text": "arguments here the first one is the",
    "start": "265360",
    "end": "268960"
  },
  {
    "text": "is the method reference to the square",
    "start": "268960",
    "end": "271520"
  },
  {
    "text": "method",
    "start": "271520",
    "end": "272479"
  },
  {
    "text": "and the second one is an integer which",
    "start": "272479",
    "end": "275199"
  },
  {
    "text": "is the",
    "start": "275199",
    "end": "276160"
  },
  {
    "text": "original argument of the square method",
    "start": "276160",
    "end": "280639"
  },
  {
    "text": "and by doing this and we will create a",
    "start": "280639",
    "end": "283520"
  },
  {
    "text": "task",
    "start": "283520",
    "end": "284240"
  },
  {
    "text": "in the background uh in a remote process",
    "start": "284240",
    "end": "288240"
  },
  {
    "text": "and at the same time uh this time this",
    "start": "288240",
    "end": "291040"
  },
  {
    "text": "this method",
    "start": "291040",
    "end": "291840"
  },
  {
    "text": "this api will return immediately",
    "start": "291840",
    "end": "294880"
  },
  {
    "text": "with an object graph objects",
    "start": "294880",
    "end": "298080"
  },
  {
    "text": "and an object left is like a future",
    "start": "298080",
    "end": "302000"
  },
  {
    "text": "it represents and a reference",
    "start": "302000",
    "end": "305520"
  },
  {
    "text": "to a task results in the increase",
    "start": "305520",
    "end": "309120"
  },
  {
    "text": "store increase distributed object store",
    "start": "309120",
    "end": "312400"
  },
  {
    "text": "and we can get the actual data of the",
    "start": "312400",
    "end": "315840"
  },
  {
    "text": "object from this object of",
    "start": "315840",
    "end": "319440"
  },
  {
    "text": "get methods okay then",
    "start": "319440",
    "end": "323199"
  },
  {
    "start": "323000",
    "end": "323000"
  },
  {
    "text": "here we have an example for the for",
    "start": "323199",
    "end": "326240"
  },
  {
    "text": "using",
    "start": "326240",
    "end": "326880"
  },
  {
    "text": "actors in grey first",
    "start": "326880",
    "end": "330160"
  },
  {
    "text": "we still have a regular java class here",
    "start": "330160",
    "end": "333680"
  },
  {
    "text": "it's a counter class with a increment",
    "start": "333680",
    "end": "336840"
  },
  {
    "text": "method",
    "start": "336840",
    "end": "339360"
  },
  {
    "text": "now we want to create an actor",
    "start": "339360",
    "end": "342800"
  },
  {
    "text": "from this class we use this read.remote",
    "start": "342800",
    "end": "347440"
  },
  {
    "text": "function and this api takes one argument",
    "start": "347440",
    "end": "351840"
  },
  {
    "text": "and",
    "start": "351840",
    "end": "352320"
  },
  {
    "text": "that is the constructor of the counter",
    "start": "352320",
    "end": "355199"
  },
  {
    "text": "class",
    "start": "355199",
    "end": "356560"
  },
  {
    "text": "and also this one this api will return",
    "start": "356560",
    "end": "360000"
  },
  {
    "text": "an x handle object",
    "start": "360000",
    "end": "364639"
  },
  {
    "text": "now we have this handle we want to call",
    "start": "364800",
    "end": "367840"
  },
  {
    "text": "the increment",
    "start": "367840",
    "end": "368880"
  },
  {
    "text": "increment methods uh on the counteractor",
    "start": "368880",
    "end": "372639"
  },
  {
    "text": "and then we just do contact.task story",
    "start": "372639",
    "end": "375280"
  },
  {
    "text": "notes",
    "start": "375280",
    "end": "376240"
  },
  {
    "text": "and still we pass into arguments",
    "start": "376240",
    "end": "379680"
  },
  {
    "text": "the method reference and to the",
    "start": "379680",
    "end": "382400"
  },
  {
    "text": "increment increment method and then the",
    "start": "382400",
    "end": "385199"
  },
  {
    "text": "original argument of the increment",
    "start": "385199",
    "end": "388000"
  },
  {
    "text": "increment methods",
    "start": "388000",
    "end": "390479"
  },
  {
    "text": "and then this method and this api",
    "start": "390479",
    "end": "394880"
  },
  {
    "text": "also returns an object left",
    "start": "394880",
    "end": "398160"
  },
  {
    "text": "as the as the written type and here",
    "start": "398160",
    "end": "401759"
  },
  {
    "text": "we can see from here we just use a few",
    "start": "401759",
    "end": "404880"
  },
  {
    "text": "lines of code to write a distributed",
    "start": "404880",
    "end": "408960"
  },
  {
    "text": "counter in in java with ray",
    "start": "408960",
    "end": "413840"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "and also we can set some options for a",
    "start": "414240",
    "end": "417280"
  },
  {
    "text": "task",
    "start": "417280",
    "end": "417759"
  },
  {
    "text": "or an actor for example here",
    "start": "417759",
    "end": "422000"
  },
  {
    "text": "we settle we set the resources",
    "start": "422000",
    "end": "425680"
  },
  {
    "text": "we set resources for this task",
    "start": "425680",
    "end": "428720"
  },
  {
    "text": "and here we set the name and other some",
    "start": "428720",
    "end": "431440"
  },
  {
    "text": "some other attributes",
    "start": "431440",
    "end": "433039"
  },
  {
    "text": "for this actor and we use fluid style",
    "start": "433039",
    "end": "435840"
  },
  {
    "text": "api",
    "start": "435840",
    "end": "436400"
  },
  {
    "text": "to do this",
    "start": "436400",
    "end": "439039"
  },
  {
    "start": "440000",
    "end": "440000"
  },
  {
    "text": "another unique feature about java is",
    "start": "440160",
    "end": "442479"
  },
  {
    "text": "typically",
    "start": "442479",
    "end": "443759"
  },
  {
    "text": "and we know unlike python java is a",
    "start": "443759",
    "end": "446960"
  },
  {
    "text": "strong type",
    "start": "446960",
    "end": "447599"
  },
  {
    "text": "language and this is this gives us the",
    "start": "447599",
    "end": "451360"
  },
  {
    "text": "benefit",
    "start": "451360",
    "end": "452000"
  },
  {
    "text": "of finding bugs before actually running",
    "start": "452000",
    "end": "454880"
  },
  {
    "text": "the code",
    "start": "454880",
    "end": "456080"
  },
  {
    "text": "so in rich java api we also wanted to",
    "start": "456080",
    "end": "459840"
  },
  {
    "text": "leverage this advantage",
    "start": "459840",
    "end": "463440"
  },
  {
    "text": "you might have already noticed from the",
    "start": "463599",
    "end": "465840"
  },
  {
    "text": "previous example that",
    "start": "465840",
    "end": "467440"
  },
  {
    "text": "um we have a few generic types here",
    "start": "467440",
    "end": "472639"
  },
  {
    "text": "and the act handle and the object of",
    "start": "472639",
    "end": "475520"
  },
  {
    "text": "types are all genetic types",
    "start": "475520",
    "end": "477599"
  },
  {
    "text": "and what does this mean for example if",
    "start": "477599",
    "end": "480639"
  },
  {
    "text": "we want to",
    "start": "480639",
    "end": "481759"
  },
  {
    "text": "invoke an actor task",
    "start": "481759",
    "end": "484879"
  },
  {
    "text": "with this api and the first argument",
    "start": "484879",
    "end": "487759"
  },
  {
    "text": "here",
    "start": "487759",
    "end": "488560"
  },
  {
    "text": "must be a method in the plantar",
    "start": "488560",
    "end": "491599"
  },
  {
    "text": "class because the genetic type of the",
    "start": "491599",
    "end": "495280"
  },
  {
    "text": "x handle is counter",
    "start": "495280",
    "end": "498639"
  },
  {
    "text": "and the second argument is more",
    "start": "498879",
    "end": "501440"
  },
  {
    "text": "interesting",
    "start": "501440",
    "end": "502319"
  },
  {
    "text": "and it can not only it can not only be",
    "start": "502319",
    "end": "505440"
  },
  {
    "text": "an integer",
    "start": "505440",
    "end": "506720"
  },
  {
    "text": "which is the original argument of the",
    "start": "506720",
    "end": "509599"
  },
  {
    "text": "increment",
    "start": "509599",
    "end": "510560"
  },
  {
    "text": "method and it can also be an object left",
    "start": "510560",
    "end": "513680"
  },
  {
    "text": "of integer",
    "start": "513680",
    "end": "515919"
  },
  {
    "text": "and if we pass in the object as the",
    "start": "515919",
    "end": "520080"
  },
  {
    "text": "parameter we actually pass a reference",
    "start": "520080",
    "end": "523120"
  },
  {
    "text": "of the first",
    "start": "523120",
    "end": "525279"
  },
  {
    "text": "task result to the second task and then",
    "start": "525279",
    "end": "528320"
  },
  {
    "text": "this will",
    "start": "528320",
    "end": "529040"
  },
  {
    "text": "change to tasks together and we will",
    "start": "529040",
    "end": "532160"
  },
  {
    "text": "only run the second",
    "start": "532160",
    "end": "533600"
  },
  {
    "text": "task when the first task finishes",
    "start": "533600",
    "end": "538399"
  },
  {
    "start": "539000",
    "end": "539000"
  },
  {
    "text": "and besides the the two basic concepts",
    "start": "539360",
    "end": "543519"
  },
  {
    "text": "the java api also supports many advanced",
    "start": "543519",
    "end": "546399"
  },
  {
    "text": "features",
    "start": "546399",
    "end": "547600"
  },
  {
    "text": "including active photons concurrent",
    "start": "547600",
    "end": "550160"
  },
  {
    "text": "active cores",
    "start": "550160",
    "end": "551360"
  },
  {
    "text": "and killing tasks and actors on",
    "start": "551360",
    "end": "555040"
  },
  {
    "text": "objective reference counting placement",
    "start": "555040",
    "end": "556720"
  },
  {
    "text": "group and there are many many other",
    "start": "556720",
    "end": "558880"
  },
  {
    "text": "examples here",
    "start": "558880",
    "end": "560480"
  },
  {
    "text": "basically everything in python is",
    "start": "560480",
    "end": "564160"
  },
  {
    "text": "supported in java as well",
    "start": "564160",
    "end": "567760"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "and lastly let's see how to use",
    "start": "567760",
    "end": "570880"
  },
  {
    "text": "ray in your java project it's very",
    "start": "570880",
    "end": "573920"
  },
  {
    "text": "simple",
    "start": "573920",
    "end": "574720"
  },
  {
    "text": "so first we add this maven dependency",
    "start": "574720",
    "end": "578560"
  },
  {
    "text": "in your pom.xml file and then",
    "start": "578560",
    "end": "581839"
  },
  {
    "text": "we use the write.init api",
    "start": "581839",
    "end": "585200"
  },
  {
    "text": "to initialize the reruntime in your",
    "start": "585200",
    "end": "587600"
  },
  {
    "text": "process",
    "start": "587600",
    "end": "588800"
  },
  {
    "text": "and after that you can start using ray",
    "start": "588800",
    "end": "592160"
  },
  {
    "text": "in your code",
    "start": "592160",
    "end": "594800"
  },
  {
    "text": "okay in the next section i'm going to",
    "start": "595440",
    "end": "598240"
  },
  {
    "text": "talk about",
    "start": "598240",
    "end": "599360"
  },
  {
    "text": "i'm going to dive a little bit deeper",
    "start": "599360",
    "end": "601360"
  },
  {
    "text": "into the",
    "start": "601360",
    "end": "603120"
  },
  {
    "text": "implementation of the java api i will",
    "start": "603120",
    "end": "606160"
  },
  {
    "text": "talk about",
    "start": "606160",
    "end": "606800"
  },
  {
    "text": "how we implemented the java api",
    "start": "606800",
    "end": "611040"
  },
  {
    "start": "611000",
    "end": "611000"
  },
  {
    "text": "so firstly when we",
    "start": "611040",
    "end": "614399"
  },
  {
    "text": "when we only supported python we had",
    "start": "614399",
    "end": "618160"
  },
  {
    "text": "the old architecture was very simple",
    "start": "618160",
    "end": "622319"
  },
  {
    "text": "on the front end we have a python worker",
    "start": "622800",
    "end": "625040"
  },
  {
    "text": "here who's code that is mostly written",
    "start": "625040",
    "end": "627519"
  },
  {
    "text": "in python",
    "start": "627519",
    "end": "629200"
  },
  {
    "text": "and on the backend we have we had a few",
    "start": "629200",
    "end": "631920"
  },
  {
    "text": "components",
    "start": "631920",
    "end": "633120"
  },
  {
    "text": "radius just as an object store and the",
    "start": "633120",
    "end": "635519"
  },
  {
    "text": "rear",
    "start": "635519",
    "end": "636720"
  },
  {
    "text": "and the code and all the code is written",
    "start": "636720",
    "end": "640000"
  },
  {
    "text": "in c-pass path",
    "start": "640000",
    "end": "642160"
  },
  {
    "text": "when we started writing the first",
    "start": "642160",
    "end": "644800"
  },
  {
    "text": "version of the java",
    "start": "644800",
    "end": "646000"
  },
  {
    "text": "front and what we did it's very simple",
    "start": "646000",
    "end": "648800"
  },
  {
    "text": "we just",
    "start": "648800",
    "end": "650480"
  },
  {
    "text": "reload everything in java",
    "start": "650480",
    "end": "654399"
  },
  {
    "text": "so apparently there are some problems",
    "start": "654399",
    "end": "657680"
  },
  {
    "text": "so first a lot of a lot of code and",
    "start": "657680",
    "end": "661519"
  },
  {
    "text": "it's duplicated here we can see from",
    "start": "661519",
    "end": "663600"
  },
  {
    "text": "this picture",
    "start": "663600",
    "end": "664959"
  },
  {
    "text": "and also as we continuously add more",
    "start": "664959",
    "end": "668399"
  },
  {
    "text": "features",
    "start": "668399",
    "end": "669440"
  },
  {
    "text": "to ray it's hard to maintain a",
    "start": "669440",
    "end": "672160"
  },
  {
    "text": "consistency between the",
    "start": "672160",
    "end": "674000"
  },
  {
    "text": "two languages and later",
    "start": "674000",
    "end": "677600"
  },
  {
    "start": "676000",
    "end": "676000"
  },
  {
    "text": "we made a re-architecture to fix these",
    "start": "677600",
    "end": "680720"
  },
  {
    "text": "problems",
    "start": "680720",
    "end": "682000"
  },
  {
    "text": "and on the back end everything is still",
    "start": "682000",
    "end": "684000"
  },
  {
    "text": "written in c fast class",
    "start": "684000",
    "end": "686160"
  },
  {
    "text": "and on the front end we introduced a new",
    "start": "686160",
    "end": "689519"
  },
  {
    "text": "layer",
    "start": "689519",
    "end": "690399"
  },
  {
    "text": "which is called the co-worker coworker",
    "start": "690399",
    "end": "693600"
  },
  {
    "text": "is written in c plus plus and it",
    "start": "693600",
    "end": "696480"
  },
  {
    "text": "contains",
    "start": "696480",
    "end": "697200"
  },
  {
    "text": "the majority of functionalities",
    "start": "697200",
    "end": "700399"
  },
  {
    "text": "in the workers on the worker side",
    "start": "700399",
    "end": "703839"
  },
  {
    "text": "and above of the co-worker we",
    "start": "704399",
    "end": "707440"
  },
  {
    "text": "implemented the two thing wrappers for",
    "start": "707440",
    "end": "711040"
  },
  {
    "text": "python and java to provide python and",
    "start": "711040",
    "end": "714240"
  },
  {
    "text": "java api for users",
    "start": "714240",
    "end": "716639"
  },
  {
    "text": "the wrappers are very thin they only",
    "start": "716639",
    "end": "719200"
  },
  {
    "text": "contain",
    "start": "719200",
    "end": "719839"
  },
  {
    "text": "some language specific logic",
    "start": "719839",
    "end": "723120"
  },
  {
    "text": "and the way you use python and the jni",
    "start": "723120",
    "end": "725760"
  },
  {
    "text": "funding",
    "start": "725760",
    "end": "726320"
  },
  {
    "text": "to connect them with the co-worker",
    "start": "726320",
    "end": "731120"
  },
  {
    "text": "and this new architecture has brought us",
    "start": "731120",
    "end": "734480"
  },
  {
    "start": "732000",
    "end": "732000"
  },
  {
    "text": "a number of benefits and for example it",
    "start": "734480",
    "end": "737680"
  },
  {
    "text": "helped improve the code quality for us",
    "start": "737680",
    "end": "740880"
  },
  {
    "text": "and it guarantees better consistency of",
    "start": "740880",
    "end": "744160"
  },
  {
    "text": "behavior",
    "start": "744160",
    "end": "744880"
  },
  {
    "text": "in python and java api and moreover",
    "start": "744880",
    "end": "748720"
  },
  {
    "text": "it makes it easier for us to implement",
    "start": "748720",
    "end": "752000"
  },
  {
    "text": "more advanced features on the worksite",
    "start": "752000",
    "end": "756240"
  },
  {
    "text": "if you take a look at the base code base",
    "start": "756240",
    "end": "758800"
  },
  {
    "text": "you will find a lot of",
    "start": "758800",
    "end": "761040"
  },
  {
    "text": "complex features are implemented",
    "start": "761040",
    "end": "764240"
  },
  {
    "text": "in the co-worker for example we",
    "start": "764240",
    "end": "766560"
  },
  {
    "text": "implemented uh",
    "start": "766560",
    "end": "768000"
  },
  {
    "text": "the worker-to-worker directions parts in",
    "start": "768000",
    "end": "770880"
  },
  {
    "text": "order to improve",
    "start": "770880",
    "end": "772240"
  },
  {
    "text": "the performance and we implemented an",
    "start": "772240",
    "end": "775040"
  },
  {
    "text": "in-memory object store",
    "start": "775040",
    "end": "777040"
  },
  {
    "text": "in order to reduce the overheads of the",
    "start": "777040",
    "end": "779760"
  },
  {
    "text": "distributed",
    "start": "779760",
    "end": "780720"
  },
  {
    "text": "object store and we've also implemented",
    "start": "780720",
    "end": "785040"
  },
  {
    "text": "uh reference counting for the",
    "start": "785040",
    "end": "786800"
  },
  {
    "text": "distributed and objects",
    "start": "786800",
    "end": "789200"
  },
  {
    "text": "and to improve uh race memory management",
    "start": "789200",
    "end": "794160"
  },
  {
    "text": "and last but not least and another",
    "start": "794160",
    "end": "797360"
  },
  {
    "text": "benefit is that",
    "start": "797360",
    "end": "798959"
  },
  {
    "text": "it makes it easier for us to support new",
    "start": "798959",
    "end": "801680"
  },
  {
    "text": "languages",
    "start": "801680",
    "end": "802959"
  },
  {
    "text": "in ray in the future",
    "start": "802959",
    "end": "806240"
  },
  {
    "text": "in the last section i'm going to talk",
    "start": "806560",
    "end": "810000"
  },
  {
    "text": "about another",
    "start": "810000",
    "end": "811519"
  },
  {
    "text": "feature that is coming in re 1.0",
    "start": "811519",
    "end": "814560"
  },
  {
    "text": "and that is the cross language",
    "start": "814560",
    "end": "816320"
  },
  {
    "text": "programming",
    "start": "816320",
    "end": "818240"
  },
  {
    "start": "818000",
    "end": "818000"
  },
  {
    "text": "first let me explain why we need this",
    "start": "818240",
    "end": "821839"
  },
  {
    "text": "feature",
    "start": "821839",
    "end": "823600"
  },
  {
    "text": "and as we know um the distributed",
    "start": "823600",
    "end": "826639"
  },
  {
    "text": "systems are getting more and more",
    "start": "826639",
    "end": "828480"
  },
  {
    "text": "complex today",
    "start": "828480",
    "end": "830000"
  },
  {
    "text": "and sometimes we need to write different",
    "start": "830000",
    "end": "832720"
  },
  {
    "text": "components",
    "start": "832720",
    "end": "833519"
  },
  {
    "text": "in one single system in many in",
    "start": "833519",
    "end": "836480"
  },
  {
    "text": "different languages",
    "start": "836480",
    "end": "838480"
  },
  {
    "text": "for example an online machine learning",
    "start": "838480",
    "end": "841040"
  },
  {
    "text": "system usually consists of",
    "start": "841040",
    "end": "842880"
  },
  {
    "text": "three parts the first one is a stream",
    "start": "842880",
    "end": "846000"
  },
  {
    "text": "data processing module which is written",
    "start": "846000",
    "end": "849760"
  },
  {
    "text": "in java and in the middle we have a",
    "start": "849760",
    "end": "852560"
  },
  {
    "text": "model training module",
    "start": "852560",
    "end": "854320"
  },
  {
    "text": "which is usually written in python and",
    "start": "854320",
    "end": "857519"
  },
  {
    "text": "at the end we have a model serving",
    "start": "857519",
    "end": "860079"
  },
  {
    "text": "module",
    "start": "860079",
    "end": "860959"
  },
  {
    "text": "which is usually which is sometimes",
    "start": "860959",
    "end": "863199"
  },
  {
    "text": "written in java sometimes written in",
    "start": "863199",
    "end": "864800"
  },
  {
    "text": "python",
    "start": "864800",
    "end": "865600"
  },
  {
    "text": "depending on the company's tech stack",
    "start": "865600",
    "end": "870399"
  },
  {
    "start": "870000",
    "end": "870000"
  },
  {
    "text": "and however here comes the problem",
    "start": "870399",
    "end": "873279"
  },
  {
    "text": "traditionally with your gc",
    "start": "873279",
    "end": "875199"
  },
  {
    "text": "grpc to do that but that's not easy",
    "start": "875199",
    "end": "879040"
  },
  {
    "text": "and let's see from this example and",
    "start": "879040",
    "end": "882560"
  },
  {
    "text": "what we need to do to develop the most",
    "start": "882560",
    "end": "885519"
  },
  {
    "text": "not in python to",
    "start": "885519",
    "end": "886880"
  },
  {
    "text": "java hollywood program with grpc and",
    "start": "886880",
    "end": "891760"
  },
  {
    "text": "first we need to define a proto file",
    "start": "891760",
    "end": "895519"
  },
  {
    "text": "here we have the definitions for the",
    "start": "895519",
    "end": "898959"
  },
  {
    "text": "service and the request and the reply",
    "start": "898959",
    "end": "902000"
  },
  {
    "text": "messages",
    "start": "902000",
    "end": "904079"
  },
  {
    "text": "and then we need to to implement the",
    "start": "904079",
    "end": "906480"
  },
  {
    "text": "code",
    "start": "906480",
    "end": "907440"
  },
  {
    "text": "for the python client and the job in the",
    "start": "907440",
    "end": "910800"
  },
  {
    "text": "java server",
    "start": "910800",
    "end": "912320"
  },
  {
    "text": "and due to learn",
    "start": "912320",
    "end": "915600"
  },
  {
    "text": "the size of the slide the java actor",
    "start": "915600",
    "end": "918720"
  },
  {
    "text": "and the java example is not complete but",
    "start": "918720",
    "end": "921120"
  },
  {
    "text": "we can see from the",
    "start": "921120",
    "end": "922639"
  },
  {
    "text": "example that how much code is needed and",
    "start": "922639",
    "end": "925519"
  },
  {
    "text": "after that",
    "start": "925519",
    "end": "926320"
  },
  {
    "text": "we still need to deploy the server",
    "start": "926320",
    "end": "929360"
  },
  {
    "text": "somewhere",
    "start": "929360",
    "end": "930079"
  },
  {
    "text": "and use a service discovery tool",
    "start": "930079",
    "end": "934160"
  },
  {
    "text": "to help the client find the service the",
    "start": "934160",
    "end": "936480"
  },
  {
    "text": "server",
    "start": "936480",
    "end": "937839"
  },
  {
    "text": "and also if we have complex data",
    "start": "937839",
    "end": "940720"
  },
  {
    "text": "structures",
    "start": "940720",
    "end": "942000"
  },
  {
    "text": "we need to convert the data into",
    "start": "942000",
    "end": "944800"
  },
  {
    "text": "protobuf",
    "start": "944800",
    "end": "945839"
  },
  {
    "text": "format when sending a request and then",
    "start": "945839",
    "end": "948480"
  },
  {
    "text": "when receiving a request we also need to",
    "start": "948480",
    "end": "950320"
  },
  {
    "text": "convert the data back",
    "start": "950320",
    "end": "952000"
  },
  {
    "text": "from the protobuf format to",
    "start": "952000",
    "end": "955120"
  },
  {
    "text": "uh to our own data structure",
    "start": "955120",
    "end": "958320"
  },
  {
    "text": "so we can see here even for the most",
    "start": "958320",
    "end": "960800"
  },
  {
    "text": "simple",
    "start": "960800",
    "end": "961519"
  },
  {
    "text": "the simplest hollywood program um",
    "start": "961519",
    "end": "964639"
  },
  {
    "text": "it's not easy the amount of work is",
    "start": "964639",
    "end": "967040"
  },
  {
    "text": "significant",
    "start": "967040",
    "end": "968480"
  },
  {
    "text": "and then let's see how we can solve",
    "start": "968480",
    "end": "971040"
  },
  {
    "start": "969000",
    "end": "969000"
  },
  {
    "text": "these problems",
    "start": "971040",
    "end": "973120"
  },
  {
    "text": "so first we have",
    "start": "973120",
    "end": "976560"
  },
  {
    "text": "let's say we want to implement the same",
    "start": "976560",
    "end": "979360"
  },
  {
    "text": "um",
    "start": "979360",
    "end": "980160"
  },
  {
    "text": "hollywood program with with ray uh",
    "start": "980160",
    "end": "983279"
  },
  {
    "text": "first on the java side we have a greater",
    "start": "983279",
    "end": "987920"
  },
  {
    "text": "uh class here um it's where it has only",
    "start": "987920",
    "end": "991279"
  },
  {
    "text": "one",
    "start": "991279",
    "end": "991680"
  },
  {
    "text": "uh method the card say hello and it's",
    "start": "991680",
    "end": "994560"
  },
  {
    "text": "very thin it's it's very simple it's",
    "start": "994560",
    "end": "996480"
  },
  {
    "text": "isn't it it's like an ordinary java",
    "start": "996480",
    "end": "1000240"
  },
  {
    "text": "class",
    "start": "1000240",
    "end": "1001120"
  },
  {
    "text": "and on the python side we we can create",
    "start": "1001120",
    "end": "1004959"
  },
  {
    "text": "an actor based on the greater class",
    "start": "1004959",
    "end": "1008720"
  },
  {
    "text": "by using the read.java actor class",
    "start": "1008720",
    "end": "1011920"
  },
  {
    "text": "dot remote function and we pass in the",
    "start": "1011920",
    "end": "1016160"
  },
  {
    "text": "patch name and the class name of the",
    "start": "1016160",
    "end": "1018639"
  },
  {
    "text": "greater class",
    "start": "1018639",
    "end": "1020079"
  },
  {
    "text": "and by doing this we will automatically",
    "start": "1020079",
    "end": "1022560"
  },
  {
    "text": "create",
    "start": "1022560",
    "end": "1023360"
  },
  {
    "text": "a java actor in a remote java process",
    "start": "1023360",
    "end": "1028160"
  },
  {
    "text": "and similar to the previous sample we",
    "start": "1028160",
    "end": "1031199"
  },
  {
    "text": "this api also returns an act handle",
    "start": "1031199",
    "end": "1036558"
  },
  {
    "text": "we name it greater actor here and",
    "start": "1037039",
    "end": "1040240"
  },
  {
    "text": "then we have this handle we can do great",
    "start": "1040240",
    "end": "1043038"
  },
  {
    "text": "act",
    "start": "1043039",
    "end": "1043438"
  },
  {
    "text": "dot say hello to dot remotes",
    "start": "1043439",
    "end": "1046558"
  },
  {
    "text": "and by doing this we will send a request",
    "start": "1046559",
    "end": "1049679"
  },
  {
    "text": "from python to java to remote java actor",
    "start": "1049679",
    "end": "1054160"
  },
  {
    "text": "and then invoke the say hello method",
    "start": "1054160",
    "end": "1057280"
  },
  {
    "text": "and return the results back to python",
    "start": "1057280",
    "end": "1059840"
  },
  {
    "text": "again",
    "start": "1059840",
    "end": "1060880"
  },
  {
    "text": "and finally we can use this great.get",
    "start": "1060880",
    "end": "1064480"
  },
  {
    "text": "api to get the extra data of this",
    "start": "1064480",
    "end": "1066880"
  },
  {
    "text": "message",
    "start": "1066880",
    "end": "1068000"
  },
  {
    "text": "so we can see compared with the previous",
    "start": "1068000",
    "end": "1071120"
  },
  {
    "text": "example",
    "start": "1071120",
    "end": "1072000"
  },
  {
    "text": "and this one is much simpler and more",
    "start": "1072000",
    "end": "1074720"
  },
  {
    "text": "natural",
    "start": "1074720",
    "end": "1077039"
  },
  {
    "start": "1077000",
    "end": "1077000"
  },
  {
    "text": "right now ray support calling actors",
    "start": "1077039",
    "end": "1080320"
  },
  {
    "text": "and calling tasks creating actors and",
    "start": "1080320",
    "end": "1083440"
  },
  {
    "text": "calling actors in any combination",
    "start": "1083440",
    "end": "1086480"
  },
  {
    "text": "of between java and the python",
    "start": "1086480",
    "end": "1090400"
  },
  {
    "start": "1090000",
    "end": "1090000"
  },
  {
    "text": "and another thing we implemented is",
    "start": "1090480",
    "end": "1094000"
  },
  {
    "text": "data serialization we want to make the",
    "start": "1094000",
    "end": "1097440"
  },
  {
    "text": "experience more natural so",
    "start": "1097440",
    "end": "1101360"
  },
  {
    "text": "right now you can pass sometimes",
    "start": "1101360",
    "end": "1104160"
  },
  {
    "text": "directly between",
    "start": "1104160",
    "end": "1105200"
  },
  {
    "text": "java and python without manually doing",
    "start": "1105200",
    "end": "1109760"
  },
  {
    "text": "data serialization for example we",
    "start": "1109760",
    "end": "1112720"
  },
  {
    "text": "support",
    "start": "1112720",
    "end": "1113440"
  },
  {
    "text": "pre primitive types including",
    "start": "1113440",
    "end": "1116559"
  },
  {
    "text": "integers doubles bytes strings and so on",
    "start": "1116559",
    "end": "1120240"
  },
  {
    "text": "we also support lists and maps of",
    "start": "1120240",
    "end": "1122880"
  },
  {
    "text": "primitive types",
    "start": "1122880",
    "end": "1125200"
  },
  {
    "text": "as well as actor handles",
    "start": "1125200",
    "end": "1128320"
  },
  {
    "text": "for example here we have a java java",
    "start": "1128320",
    "end": "1131840"
  },
  {
    "text": "method here and these methods have had",
    "start": "1131840",
    "end": "1134720"
  },
  {
    "text": "three arguments an",
    "start": "1134720",
    "end": "1136240"
  },
  {
    "text": "integer a string and a list and on the",
    "start": "1136240",
    "end": "1138880"
  },
  {
    "text": "python side",
    "start": "1138880",
    "end": "1139679"
  },
  {
    "text": "we also we want to call this java method",
    "start": "1139679",
    "end": "1143679"
  },
  {
    "text": "and we just need to simply pass the",
    "start": "1143679",
    "end": "1147440"
  },
  {
    "text": "past an integer a string and a list to",
    "start": "1147440",
    "end": "1150480"
  },
  {
    "text": "the",
    "start": "1150480",
    "end": "1150799"
  },
  {
    "text": "java to the java method",
    "start": "1150799",
    "end": "1155039"
  },
  {
    "text": "under the hood ray will automatically",
    "start": "1155039",
    "end": "1157440"
  },
  {
    "text": "handle the",
    "start": "1157440",
    "end": "1159000"
  },
  {
    "text": "serialization the digitalization stuff",
    "start": "1159000",
    "end": "1161200"
  },
  {
    "text": "for us",
    "start": "1161200",
    "end": "1164720"
  },
  {
    "start": "1164000",
    "end": "1164000"
  },
  {
    "text": "and another cool feature we have",
    "start": "1164720",
    "end": "1166480"
  },
  {
    "text": "implemented is called cross language",
    "start": "1166480",
    "end": "1168559"
  },
  {
    "text": "exceptions",
    "start": "1168559",
    "end": "1169919"
  },
  {
    "text": "and what does this mean so unless",
    "start": "1169919",
    "end": "1173200"
  },
  {
    "text": "for example if you call a task in a",
    "start": "1173200",
    "end": "1176400"
  },
  {
    "text": "different language",
    "start": "1176400",
    "end": "1177760"
  },
  {
    "text": "and an exception occurs we will chain",
    "start": "1177760",
    "end": "1181360"
  },
  {
    "text": "the exception stacks",
    "start": "1181360",
    "end": "1182880"
  },
  {
    "text": "together for you so for example let's",
    "start": "1182880",
    "end": "1186240"
  },
  {
    "text": "say we have a java task for calling a",
    "start": "1186240",
    "end": "1188480"
  },
  {
    "text": "present task",
    "start": "1188480",
    "end": "1189679"
  },
  {
    "text": "and the python task is calling another",
    "start": "1189679",
    "end": "1191840"
  },
  {
    "text": "java task",
    "start": "1191840",
    "end": "1193039"
  },
  {
    "text": "and something wrong happened happens in",
    "start": "1193039",
    "end": "1195840"
  },
  {
    "text": "the second",
    "start": "1195840",
    "end": "1196480"
  },
  {
    "text": "java task and the ray will show you",
    "start": "1196480",
    "end": "1200080"
  },
  {
    "text": "a exception stack like this and we can",
    "start": "1200080",
    "end": "1203520"
  },
  {
    "text": "see",
    "start": "1203520",
    "end": "1204240"
  },
  {
    "text": "at the top of the exception",
    "start": "1204240",
    "end": "1207440"
  },
  {
    "text": "that we can find the java exception",
    "start": "1207440",
    "end": "1209840"
  },
  {
    "text": "information",
    "start": "1209840",
    "end": "1210640"
  },
  {
    "text": "from the first java stack",
    "start": "1210640",
    "end": "1213679"
  },
  {
    "text": "and in the middle we can see the python",
    "start": "1213679",
    "end": "1216400"
  },
  {
    "text": "exception stack",
    "start": "1216400",
    "end": "1218320"
  },
  {
    "text": "from the python task and at the bottom",
    "start": "1218320",
    "end": "1221679"
  },
  {
    "text": "we can find the java exception stack",
    "start": "1221679",
    "end": "1224720"
  },
  {
    "text": "from the second java task and here we",
    "start": "1224720",
    "end": "1228000"
  },
  {
    "text": "can also find the",
    "start": "1228000",
    "end": "1229039"
  },
  {
    "text": "root cause of this exception chain",
    "start": "1229039",
    "end": "1232240"
  },
  {
    "text": "which is divided by zero and exception",
    "start": "1232240",
    "end": "1235679"
  },
  {
    "text": "in java so with listing with this",
    "start": "1235679",
    "end": "1238720"
  },
  {
    "text": "feature we can easily debug",
    "start": "1238720",
    "end": "1241360"
  },
  {
    "text": "a pro cross language program",
    "start": "1241360",
    "end": "1245520"
  },
  {
    "start": "1246000",
    "end": "1246000"
  },
  {
    "text": "okay and at the last and lastly let's",
    "start": "1246320",
    "end": "1249760"
  },
  {
    "text": "take a look at what we have uh talked",
    "start": "1249760",
    "end": "1252159"
  },
  {
    "text": "about today",
    "start": "1252159",
    "end": "1253280"
  },
  {
    "text": "so we introduced two new features",
    "start": "1253280",
    "end": "1256960"
  },
  {
    "text": "that discount that are coming in with",
    "start": "1256960",
    "end": "1259039"
  },
  {
    "text": "1.0",
    "start": "1259039",
    "end": "1260640"
  },
  {
    "text": "and first we we talked about the java",
    "start": "1260640",
    "end": "1263679"
  },
  {
    "text": "api",
    "start": "1263679",
    "end": "1264559"
  },
  {
    "text": "which allows you to build distributed",
    "start": "1264559",
    "end": "1268080"
  },
  {
    "text": "java systems easily with ray",
    "start": "1268080",
    "end": "1271200"
  },
  {
    "text": "and also we talked about the cross",
    "start": "1271200",
    "end": "1274080"
  },
  {
    "text": "language programming feature which",
    "start": "1274080",
    "end": "1276240"
  },
  {
    "text": "allows you to",
    "start": "1276240",
    "end": "1277200"
  },
  {
    "text": "seamlessly build cross-language",
    "start": "1277200",
    "end": "1279360"
  },
  {
    "text": "applications with",
    "start": "1279360",
    "end": "1280400"
  },
  {
    "text": "ray and also we and talk about",
    "start": "1280400",
    "end": "1284159"
  },
  {
    "text": "how we use the cpus co-worker",
    "start": "1284159",
    "end": "1287919"
  },
  {
    "text": "to to resolve the problems",
    "start": "1287919",
    "end": "1290960"
  },
  {
    "text": "and in increased worker architecture",
    "start": "1290960",
    "end": "1296480"
  },
  {
    "text": "if you want to know more about these two",
    "start": "1296880",
    "end": "1299600"
  },
  {
    "text": "features",
    "start": "1299600",
    "end": "1300559"
  },
  {
    "text": "and please visit the documentation",
    "start": "1300559",
    "end": "1302559"
  },
  {
    "text": "website",
    "start": "1302559",
    "end": "1303760"
  },
  {
    "text": "and if you have more feedbacks about",
    "start": "1303760",
    "end": "1306000"
  },
  {
    "text": "these features",
    "start": "1306000",
    "end": "1307200"
  },
  {
    "text": "um please join the java channel on slack",
    "start": "1307200",
    "end": "1310640"
  },
  {
    "text": "or find an issue on github that will be",
    "start": "1310640",
    "end": "1313840"
  },
  {
    "text": "very much appreciated",
    "start": "1313840",
    "end": "1316480"
  },
  {
    "text": "and okay all right thanks and that's",
    "start": "1316480",
    "end": "1318640"
  },
  {
    "text": "everything hope you enjoy this talk",
    "start": "1318640",
    "end": "1321120"
  },
  {
    "text": "thank you",
    "start": "1321120",
    "end": "1333840"
  },
  {
    "text": "you",
    "start": "1348320",
    "end": "1350399"
  }
]