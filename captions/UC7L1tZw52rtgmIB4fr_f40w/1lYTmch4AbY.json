[
  {
    "text": "thank you Sam hello everyone thanks for being here with me exploring this scalability",
    "start": "3480",
    "end": "10860"
  },
  {
    "text": "my name is I'm a software engineer from recall I focused on this scalability and",
    "start": "10860",
    "end": "16379"
  },
  {
    "text": "reliability today we are going to check this availability to review wisely scalable",
    "start": "16379",
    "end": "24300"
  },
  {
    "text": "and then we will try to identify the bottleneck which preventing us from scaling up further and in the end we",
    "start": "24300",
    "end": "31800"
  },
  {
    "text": "would like to learn a 4000 Note 3 cluster pass first thing first",
    "start": "31800",
    "end": "38160"
  },
  {
    "text": "why scalability is important nowadays the models becoming bigger and",
    "start": "38160",
    "end": "45300"
  },
  {
    "text": "bigger every year so the computation demands grows 10 times every 18 months",
    "start": "45300",
    "end": "52379"
  },
  {
    "text": "this requires to scale up to handle this large workload",
    "start": "52379",
    "end": "58020"
  },
  {
    "text": "for example open eyes right now use this way to change gbt which is one of the largest",
    "start": "58020",
    "end": "65338"
  },
  {
    "text": "language models in the world right now they have a very very big recluster and",
    "start": "65339",
    "end": "72119"
  },
  {
    "text": "in each other now there is actors just there these actors coordinates with each",
    "start": "72119",
    "end": "77400"
  },
  {
    "text": "other to finish the training besides this",
    "start": "77400",
    "end": "82860"
  },
  {
    "text": "the data generated every year increased explanation",
    "start": "82860",
    "end": "88080"
  },
  {
    "text": "so nowadays every year there are more than 100 databytes of data generated",
    "start": "88080",
    "end": "94860"
  },
  {
    "text": "and ready to scale up to follow this channel too actually",
    "start": "94860",
    "end": "100619"
  },
  {
    "text": "Amazon artists use this way to process terabytes of data every day",
    "start": "100619",
    "end": "106920"
  },
  {
    "text": "they have contributed an open source software called datacad merge the data offline for their data",
    "start": "106920",
    "end": "115680"
  },
  {
    "text": "catalog cool now we know this is important it's",
    "start": "115680",
    "end": "122220"
  },
  {
    "text": "because the model is becoming bigger and bigger and within more and more computation and",
    "start": "122220",
    "end": "128520"
  },
  {
    "text": "also the data generated every year grow exponentially but what does this mean",
    "start": "128520",
    "end": "134160"
  },
  {
    "text": "fully what does scalability mean for real and it means they need to be able to",
    "start": "134160",
    "end": "140640"
  },
  {
    "text": "manage large number of nodes because only when you have larger number of nodes you should be able to run a large",
    "start": "140640",
    "end": "147239"
  },
  {
    "text": "workloads and then the second to handle or to run",
    "start": "147239",
    "end": "153360"
  },
  {
    "text": "a large workloads inside the way it's about you need to have large number of actors or tasks which are doing the work",
    "start": "153360",
    "end": "163099"
  },
  {
    "text": "usually 2.0 we have we have already been able to run 20 000 actors on a 2000",
    "start": "163860",
    "end": "171420"
  },
  {
    "text": "cluster see we want to run 40 000 actors on a 4",
    "start": "171420",
    "end": "180720"
  },
  {
    "text": "000 Note 3 cluster cool in rest of this talk",
    "start": "180720",
    "end": "186959"
  },
  {
    "text": "Rivers reveal this design to see why this is scalable and when we are doing",
    "start": "186959",
    "end": "192060"
  },
  {
    "text": "this reviewing we will also identify what's the bottleneck which prevent us from reaching this code to 4000 nodes we",
    "start": "192060",
    "end": "199800"
  },
  {
    "text": "cluster and then after this once very low once the bottleneck will see what we have",
    "start": "199800",
    "end": "206340"
  },
  {
    "text": "done to improve it and make us able to run a 4000 request",
    "start": "206340",
    "end": "212099"
  },
  {
    "text": "then we will see the demo joining a 4000 notebook cluster with 40 000 actors as",
    "start": "212099",
    "end": "218400"
  },
  {
    "text": "it was the future work left not still The View first",
    "start": "218400",
    "end": "224879"
  },
  {
    "text": "this part is to refresh our knowledge about rate see what runs there then we",
    "start": "224879",
    "end": "230819"
  },
  {
    "text": "can understand the problem better firstly the components",
    "start": "230819",
    "end": "237360"
  },
  {
    "text": "suppose you have a request with three nodes you might want to know what's wrong on",
    "start": "237360",
    "end": "243720"
  },
  {
    "text": "each of the node there are two types of node welcome node and handle",
    "start": "243720",
    "end": "251220"
  },
  {
    "text": "on the handload that she says which is also known as Global control",
    "start": "251220",
    "end": "257519"
  },
  {
    "text": "service this is the controller inside it's a centralized controller it's very",
    "start": "257519",
    "end": "264300"
  },
  {
    "text": "important service doing all the coordination Works between the nodes and between the release on each of the nodes",
    "start": "264300",
    "end": "272759"
  },
  {
    "text": "we will come to this later on each of the nodes we also have a",
    "start": "272759",
    "end": "278160"
  },
  {
    "text": "reality launch layer which has schedulers inside this and Object Store and on handled you might have driver and",
    "start": "278160",
    "end": "285540"
  },
  {
    "text": "I don't know you might have the workers during the work yeah this is the high level review of",
    "start": "285540",
    "end": "292620"
  },
  {
    "text": "this architecture let's check Jesus in more detail here",
    "start": "292620",
    "end": "298320"
  },
  {
    "text": "she says the centralized controlling salary optionally you can have a dbx in the",
    "start": "298320",
    "end": "304199"
  },
  {
    "text": "back so that in case of GSS field or crash it can still recover from the data",
    "start": "304199",
    "end": "309960"
  },
  {
    "text": "in the database it's very important it covers the load",
    "start": "309960",
    "end": "315120"
  },
  {
    "text": "management basically it will monitor whether this node is unable lot and also maintains their membership",
    "start": "315120",
    "end": "321660"
  },
  {
    "text": "it also covers act management actual creation goes to the GSS destruction and",
    "start": "321660",
    "end": "328380"
  },
  {
    "text": "also recovery besides this",
    "start": "328380",
    "end": "333479"
  },
  {
    "text": "it also keep each of the Reddit have the latest resource view of each other",
    "start": "333479",
    "end": "339419"
  },
  {
    "text": "what does this mean inside delete it has a schedule as we just mentioned and this",
    "start": "339419",
    "end": "345419"
  },
  {
    "text": "schedule will use this View to see which node has the results to",
    "start": "345419",
    "end": "350699"
  },
  {
    "text": "longest task or actor whenever come to this part in more",
    "start": "350699",
    "end": "355800"
  },
  {
    "text": "detail later actually just ask you more sense but let's focus on this three because they",
    "start": "355800",
    "end": "363060"
  },
  {
    "text": "are more important for the skill Bridge next Village",
    "start": "363060",
    "end": "368220"
  },
  {
    "text": "there is wrong on each of the working nodes it manages other workers",
    "start": "368220",
    "end": "374340"
  },
  {
    "text": "recovering the worker preparation monitoring their libraries",
    "start": "374340",
    "end": "379820"
  },
  {
    "text": "it also has Object Store it store the data",
    "start": "379860",
    "end": "384680"
  },
  {
    "text": "when it has a test schedule inside it test schedule is what I just mentioned it's a disputed schedule for the tasks",
    "start": "386400",
    "end": "394259"
  },
  {
    "text": "it uses resource view to see which religion should schedule this task or act",
    "start": "394259",
    "end": "400800"
  },
  {
    "text": "okay now we have refreshed our knowledge about the cluster then let's see how the",
    "start": "400800",
    "end": "407280"
  },
  {
    "text": "node is managed because we want to run a 4 4000 nodes cluster understand this is",
    "start": "407280",
    "end": "413460"
  },
  {
    "text": "very important for us to see what's the bottleneck so preventing us to go to four thousand nodes",
    "start": "413460",
    "end": "421039"
  },
  {
    "text": "to add a node to the cluster you just call this command restart",
    "start": "422520",
    "end": "428520"
  },
  {
    "text": "and then the load will send the load registration request to Jesus which has latitude DB as I mentioned this is for",
    "start": "428520",
    "end": "435660"
  },
  {
    "text": "for tolerance after this request has been processed by",
    "start": "435660",
    "end": "441120"
  },
  {
    "text": "Jesus Jesus will just use health check and resourcing hydration health check is to ensure this node is",
    "start": "441120",
    "end": "448440"
  },
  {
    "text": "alive and in case of this node field Jesus will do the video recovery",
    "start": "448440",
    "end": "454620"
  },
  {
    "text": "and the result synchronization you should make sure it's valid has which load has delicious view of each other",
    "start": "454620",
    "end": "462419"
  },
  {
    "text": "it will do it for all the nodes summary",
    "start": "462419",
    "end": "467940"
  },
  {
    "text": "Jesus is responsible for load legislation and levels monitoring",
    "start": "467940",
    "end": "473160"
  },
  {
    "text": "and each note relies on Jesus to update their local View",
    "start": "473160",
    "end": "479000"
  },
  {
    "text": "but here we see Jesus might become the bottleneck why because the load management goes through",
    "start": "479639",
    "end": "486780"
  },
  {
    "text": "the Jesus and when the cluster size close she says have to manage more and more",
    "start": "486780",
    "end": "492900"
  },
  {
    "text": "loads this must be an issue and we will fix it later we'll go through this part in the next",
    "start": "492900",
    "end": "499740"
  },
  {
    "text": "session okay now you have already got a cluster with downloads joined into this cluster you",
    "start": "499740",
    "end": "507000"
  },
  {
    "text": "want to start actors remember we want to get 40 000 actors started then let's",
    "start": "507000",
    "end": "512760"
  },
  {
    "text": "check how this is done in salary to create an actor",
    "start": "512760",
    "end": "519120"
  },
  {
    "text": "on the driver you call this piece of code then you will have the actor created",
    "start": "519120",
    "end": "526200"
  },
  {
    "text": "how is this now driver will first send this request to Jesus to register this",
    "start": "526200",
    "end": "531660"
  },
  {
    "text": "act and act manager inside she says what do other things",
    "start": "531660",
    "end": "537060"
  },
  {
    "text": "it will look up the it will call the API from the resource manager to see what's",
    "start": "537060",
    "end": "542640"
  },
  {
    "text": "the node have the results creating this actor and then suppose here is load 2",
    "start": "542640",
    "end": "549720"
  },
  {
    "text": "and if you ask because let's read it on low 2 to create the reworker",
    "start": "549720",
    "end": "554880"
  },
  {
    "text": "so the resource manager make use of the resource view reported by each other to",
    "start": "554880",
    "end": "560760"
  },
  {
    "text": "see what's the place what's the best place to schedule this actor and here",
    "start": "560760",
    "end": "565800"
  },
  {
    "text": "once the rework has been created it will be alternative driver will send the",
    "start": "565800",
    "end": "571680"
  },
  {
    "text": "actor creation task to the worker after this reactor",
    "start": "571680",
    "end": "578459"
  },
  {
    "text": "and after the actor being created or the last course",
    "start": "578760",
    "end": "583860"
  },
  {
    "text": "is purely point to point so the driver will send the task to react directly low",
    "start": "583860",
    "end": "590100"
  },
  {
    "text": "involvement of other components summary Jesus plays an important role here",
    "start": "590100",
    "end": "597720"
  },
  {
    "text": "actual creation goes to Jesus scheduling also goes to Jesus",
    "start": "597720",
    "end": "603800"
  },
  {
    "text": "and after it's created all the test score is sent directly to the actor so",
    "start": "603959",
    "end": "609000"
  },
  {
    "text": "no involvement of other components and is scalable cool",
    "start": "609000",
    "end": "614820"
  },
  {
    "text": "now we have the view the workload end-to-end through adding a load to the",
    "start": "614820",
    "end": "620459"
  },
  {
    "text": "cluster to how to create an actor somewhere here",
    "start": "620459",
    "end": "625740"
  },
  {
    "text": "after actor has started communication is point to point is scalable this part",
    "start": "625740",
    "end": "632820"
  },
  {
    "text": "scheduler relies on the class resource view to make scheduling decisions",
    "start": "632820",
    "end": "638899"
  },
  {
    "text": "and for this part it might become ratio for example now we created the actor on the value 2",
    "start": "639420",
    "end": "648060"
  },
  {
    "text": "but sometimes if the view is not updated it's the actor creation the schedule might feel",
    "start": "648060",
    "end": "654120"
  },
  {
    "text": "and we will see one example about this later and Jesus is very critical in managing",
    "start": "654120",
    "end": "660660"
  },
  {
    "text": "the notes and actors and it is also the place responsible for",
    "start": "660660",
    "end": "666420"
  },
  {
    "text": "broadcasting the resource view across the cluster okay now we know everything",
    "start": "666420",
    "end": "673860"
  },
  {
    "text": "then what what kind goes wrong for example if we want to run 40 000 actors",
    "start": "673860",
    "end": "679680"
  },
  {
    "text": "on a four thousand node cluster what can go through which prevent us from doing this",
    "start": "679680",
    "end": "685680"
  },
  {
    "text": "it's easy to Logistics might be overloaded white might not be overloaded",
    "start": "685680",
    "end": "691980"
  },
  {
    "text": "now we run 40 000 actors that's a lot a lot of workloads this all goes to the",
    "start": "691980",
    "end": "698339"
  },
  {
    "text": "Jesus besides this 4",
    "start": "698339",
    "end": "703500"
  },
  {
    "text": "000 nodes Jesus need to manage this number of nodes which is also very big",
    "start": "703500",
    "end": "708839"
  },
  {
    "text": "it's a large cluster so Jesus will be overloaded but what will happen when Jesus",
    "start": "708839",
    "end": "714720"
  },
  {
    "text": "overloaded the first thing that might happen is that Jesus will fail to manage the nodes",
    "start": "714720",
    "end": "722339"
  },
  {
    "text": "what does this mean it means even the load is alive sometimes GCS will make mistake Jesus",
    "start": "722339",
    "end": "730380"
  },
  {
    "text": "will think this node is dead something goes wrong here and the components goes through is the",
    "start": "730380",
    "end": "736500"
  },
  {
    "text": "health check part we will come to this later",
    "start": "736500",
    "end": "741959"
  },
  {
    "text": "another part that Michael's doing is that the class resource View is not updated in time because of GCS is",
    "start": "741959",
    "end": "749339"
  },
  {
    "text": "overloaded and it doesn't have any resource to do this and when the view is not updated",
    "start": "749339",
    "end": "755160"
  },
  {
    "text": "remember the scheduling needs the resource view to schedule the task again",
    "start": "755160",
    "end": "760620"
  },
  {
    "text": "and if the view is not updated in time might not be good",
    "start": "760620",
    "end": "767660"
  },
  {
    "text": "and that's the components that can go wrong The Slap Shot based broadcasting and we",
    "start": "767700",
    "end": "773700"
  },
  {
    "text": "also need to fix this okay now we have understand what goes wrong",
    "start": "773700",
    "end": "782220"
  },
  {
    "text": "and we actually have done some work to improve this and enable us to run a 4000",
    "start": "782220",
    "end": "788579"
  },
  {
    "text": "nodes cluster let's see what's the Improvement here we do two improvements we change the",
    "start": "788579",
    "end": "795839"
  },
  {
    "text": "protocol of the health check from the push-based one to the previous one we also changed the protocol of resource",
    "start": "795839",
    "end": "802380"
  },
  {
    "text": "broadcasting from the snapshot based to the incremental one let's check the first one",
    "start": "802380",
    "end": "809519"
  },
  {
    "text": "two-based health check so before the change is push-based so",
    "start": "809519",
    "end": "815700"
  },
  {
    "text": "what could go wrong here the mechanism actually is very simple I mean this is before the change it's very simple",
    "start": "815700",
    "end": "823019"
  },
  {
    "text": "it's ready to just report oh I'm alive to Jesus",
    "start": "823019",
    "end": "828540"
  },
  {
    "text": "and once Jesus gets this information it will think this really is alive but if",
    "start": "828540",
    "end": "834600"
  },
  {
    "text": "someone will fail to do this reporting for for example for 30 seconds then this just as I think this really is",
    "start": "834600",
    "end": "841800"
  },
  {
    "text": "the light is that and it will remove this valid from the cluster and just let others really know",
    "start": "841800",
    "end": "848760"
  },
  {
    "text": "this one this is very simple but it can go slow",
    "start": "848760",
    "end": "856339"
  },
  {
    "text": "we observe when Jesus is overloaded fourth positive is very easy to have it",
    "start": "857160",
    "end": "863519"
  },
  {
    "text": "means even this Village is alive she says we still think this is bad",
    "start": "863519",
    "end": "869579"
  },
  {
    "text": "it's pretty bad but why this can happen when it is alive right you need to",
    "start": "869579",
    "end": "874860"
  },
  {
    "text": "reduce the reporting the false positive happens then because",
    "start": "874860",
    "end": "881100"
  },
  {
    "text": "the lead cannot report their libraries to Jesus but because Jesus just doesn't have",
    "start": "881100",
    "end": "888420"
  },
  {
    "text": "resource to process this message this message arrived to the Jesus but she says just don't have any resource to",
    "start": "888420",
    "end": "895620"
  },
  {
    "text": "process it for example we cannot process the message within 30 seconds and it will think oh this visit might not send",
    "start": "895620",
    "end": "902639"
  },
  {
    "text": "the request to me and they cannot process because he's overloaded",
    "start": "902639",
    "end": "908699"
  },
  {
    "text": "the cost is very high for this mistake it equals with a load video",
    "start": "908699",
    "end": "914760"
  },
  {
    "text": "it means all the things on that node will fail you lose the object you lose",
    "start": "914760",
    "end": "919980"
  },
  {
    "text": "Vector you also lose the task on that node and then the failure recovery inside",
    "start": "919980",
    "end": "926279"
  },
  {
    "text": "river starts but it will just run everything okay it's very bad",
    "start": "926279",
    "end": "931560"
  },
  {
    "text": "reading some improvements for this one we change it to the full Festival",
    "start": "931560",
    "end": "937320"
  },
  {
    "text": "so compared with before now Jesus will pull the healthiness from the release",
    "start": "937320",
    "end": "944120"
  },
  {
    "text": "let's check how this is work now it's just as well just ask each unit",
    "start": "944339",
    "end": "950699"
  },
  {
    "text": "whether you are alive or not and if sandwiched haven't replied for example for several times the G cells will think",
    "start": "950699",
    "end": "958079"
  },
  {
    "text": "this will do that this is just a challenge it's very simple",
    "start": "958079",
    "end": "963660"
  },
  {
    "text": "and then remove the widget from the cluster that are related to this one",
    "start": "963660",
    "end": "968940"
  },
  {
    "text": "but it's working why this one is working",
    "start": "968940",
    "end": "973980"
  },
  {
    "text": "it's because Jesus is easy to be overloaded in a larger cluster",
    "start": "973980",
    "end": "979680"
  },
  {
    "text": "and in this case what will happen when Jesus is overloaded",
    "start": "979680",
    "end": "985399"
  },
  {
    "text": "when it overloaded it will just send the live list check less frequently it's",
    "start": "986100",
    "end": "991440"
  },
  {
    "text": "still not that good but it's much better compared with marking this release date",
    "start": "991440",
    "end": "998300"
  },
  {
    "text": "and in this case for example sometimes valid might be overloaded right when you mix it really",
    "start": "998940",
    "end": "1005839"
  },
  {
    "text": "might not be able to send the request some first positive might happen but it's fine because when the reality is",
    "start": "1005839",
    "end": "1013040"
  },
  {
    "text": "not responsive we can think it's not functioning well and it's okay to kill it and I think that will it usually not",
    "start": "1013040",
    "end": "1021019"
  },
  {
    "text": "that easy to be overloaded in a larger cluster compared with Jesus because GSS is a centralized component",
    "start": "1021019",
    "end": "1029360"
  },
  {
    "text": "okay now we fix the knowledge we can draw a 4000 node cluster",
    "start": "1029360",
    "end": "1034880"
  },
  {
    "text": "but we want to run some actors on this one right and resource broadcasting is the",
    "start": "1034880",
    "end": "1040579"
  },
  {
    "text": "component of preventing us from doing this let's see what goes on here",
    "start": "1040579",
    "end": "1046400"
  },
  {
    "text": "before the Improvement we have a snapshot based resource broadcasting inside of it let's check how this goes",
    "start": "1046400",
    "end": "1054140"
  },
  {
    "text": "and then we will see what can go wrong suppose you have requested with two node",
    "start": "1054140",
    "end": "1059660"
  },
  {
    "text": "unit 1 and 32. after they just join the class they",
    "start": "1059660",
    "end": "1065059"
  },
  {
    "text": "don't know each other so will it content have any information about the YouTube which you don't have",
    "start": "1065059",
    "end": "1070760"
  },
  {
    "text": "any information about this one here the little one have one CPU ready to have no CPU results",
    "start": "1070760",
    "end": "1078020"
  },
  {
    "text": "after they join in the cluster they need to report their local snapshot",
    "start": "1078020",
    "end": "1083299"
  },
  {
    "text": "to register as first after the reporting Jesus will allow the",
    "start": "1083299",
    "end": "1088880"
  },
  {
    "text": "view of each other and then Jesus do the Broadcasting",
    "start": "1088880",
    "end": "1094880"
  },
  {
    "text": "Jesus will send a snapshot of the cluster back to each of the village",
    "start": "1094880",
    "end": "1100580"
  },
  {
    "text": "after this delete will know each other have their View looks pretty good",
    "start": "1100580",
    "end": "1108140"
  },
  {
    "text": "and then the classical goes idle another reporting and broadcasting happens every",
    "start": "1108140",
    "end": "1113419"
  },
  {
    "text": "100 million seconds by default so we report again broadcasting again",
    "start": "1113419",
    "end": "1120520"
  },
  {
    "text": "okay reporting again Broadcasting",
    "start": "1120520",
    "end": "1125539"
  },
  {
    "text": "the diamond looks good right because it happens every 100 million seconds",
    "start": "1125539",
    "end": "1131120"
  },
  {
    "text": "and even though there's no new information in the reporting on the broadcasting",
    "start": "1131120",
    "end": "1137419"
  },
  {
    "text": "so that's the problem that's the first problem we need to fix okay",
    "start": "1137419",
    "end": "1143720"
  },
  {
    "text": "now let's continue now it's really tomorrow want to start a real task",
    "start": "1143720",
    "end": "1148880"
  },
  {
    "text": "with one C2 here because it has resulted right",
    "start": "1148880",
    "end": "1155299"
  },
  {
    "text": "and then release One update is local view so no CPU left in the little one",
    "start": "1155299",
    "end": "1161660"
  },
  {
    "text": "later the little here it still think the lead one has one CPU because it haven't",
    "start": "1161660",
    "end": "1167720"
  },
  {
    "text": "received any updates that you also want to start early task with one CPU then this will fail",
    "start": "1167720",
    "end": "1176240"
  },
  {
    "text": "it failed because of the mass this resource view inside V2 is stale",
    "start": "1176240",
    "end": "1183200"
  },
  {
    "text": "and this is the best scheduling decisions later",
    "start": "1183200",
    "end": "1188480"
  },
  {
    "text": "reporting happens as before the broadcasting happens and 32 updates local View and then it notice their low",
    "start": "1188480",
    "end": "1195500"
  },
  {
    "text": "place to create one CPU tasks all the scalar comes in are located one node and",
    "start": "1195500",
    "end": "1201679"
  },
  {
    "text": "then we'll have the list three as a beginning radius 3 and release going to then know each other they don't really",
    "start": "1201679",
    "end": "1208460"
  },
  {
    "text": "see them have the view of Village one and two and we'll Define to then have the view of these three",
    "start": "1208460",
    "end": "1214160"
  },
  {
    "text": "reporting happens as before broadcasting happens we have their View",
    "start": "1214160",
    "end": "1219980"
  },
  {
    "text": "and then reality will be able to create a test on video three everything looks good",
    "start": "1219980",
    "end": "1226100"
  },
  {
    "text": "except this part we can see here now",
    "start": "1226100",
    "end": "1231260"
  },
  {
    "text": "during broadcasting there are nine messages being sent",
    "start": "1231260",
    "end": "1236840"
  },
  {
    "text": "before release rejoined the phone message being sent in a broadcasting so here the complexity is n Square where",
    "start": "1236840",
    "end": "1244700"
  },
  {
    "text": "n equals the number of nodes in this cluster",
    "start": "1244700",
    "end": "1249980"
  },
  {
    "text": "and what makes it worse is that it happens every 100 million seconds so",
    "start": "1249980",
    "end": "1256340"
  },
  {
    "text": "it's done scale summary here",
    "start": "1256340",
    "end": "1262179"
  },
  {
    "text": "broadcasting and Reporting happens every 100 million seconds",
    "start": "1262179",
    "end": "1267620"
  },
  {
    "text": "even though there is no change in the message you might want to know why we do this it's because doing this is very",
    "start": "1267620",
    "end": "1275900"
  },
  {
    "text": "simple for the female case for example if you lose some message or some message arrive out of order it's very simple to",
    "start": "1275900",
    "end": "1283039"
  },
  {
    "text": "fix you just use whatever arrived eventually it will be correct",
    "start": "1283039",
    "end": "1288440"
  },
  {
    "text": "but it's very bad it understeer besides this broadcasting always sends",
    "start": "1288440",
    "end": "1295640"
  },
  {
    "text": "the cluster resource snapshot it's very con it's very complicated it",
    "start": "1295640",
    "end": "1302360"
  },
  {
    "text": "uses a lot of resource then skill too we fix these issues in the new protocol",
    "start": "1302360",
    "end": "1311419"
  },
  {
    "text": "it's called incremental resource Broadcasting",
    "start": "1311419",
    "end": "1317600"
  },
  {
    "text": "problem 1 it happens every 100 milliseconds in the new protocol we change it",
    "start": "1317600",
    "end": "1325520"
  },
  {
    "text": "reporting and broadcasting only happens when there is a change",
    "start": "1325520",
    "end": "1331059"
  },
  {
    "text": "problem 2 classes left shoulder will be broadcasted",
    "start": "1331520",
    "end": "1336799"
  },
  {
    "text": "now in the new protocol only incremental data will be broadcasted",
    "start": "1336799",
    "end": "1343159"
  },
  {
    "text": "okay let's go to the previous example to see what goes wrong what was going here",
    "start": "1343159",
    "end": "1350720"
  },
  {
    "text": "suppose previous setup visit one two they don't know each other after joining the class",
    "start": "1350720",
    "end": "1356179"
  },
  {
    "text": "due to protein alternator broadcasting but notice here",
    "start": "1356179",
    "end": "1364179"
  },
  {
    "text": "she says only sends the incremental view back to the delete so it only sends",
    "start": "1364580",
    "end": "1369740"
  },
  {
    "text": "really choose view to register one and read once to daily 2.",
    "start": "1369740",
    "end": "1375200"
  },
  {
    "text": "so they save some messages and then they have each other's view",
    "start": "1375200",
    "end": "1381080"
  },
  {
    "text": "this is the cluster goes idle the number previously it happens every",
    "start": "1381080",
    "end": "1386600"
  },
  {
    "text": "100 million seconds the partner broadcasting but but now when the cluster is Idle it is nothing why do you",
    "start": "1386600",
    "end": "1394400"
  },
  {
    "text": "do nothing because no incremental view will be created",
    "start": "1394400",
    "end": "1399799"
  },
  {
    "text": "so no nothing needs to be done here this is much better compared with before",
    "start": "1399799",
    "end": "1406580"
  },
  {
    "text": "let's continue now ready to start a task",
    "start": "1406580",
    "end": "1411620"
  },
  {
    "text": "it updates local View now here visit one will use the",
    "start": "1411620",
    "end": "1416720"
  },
  {
    "text": "reporting notice here relatively because there is no change in really",
    "start": "1416720",
    "end": "1422360"
  },
  {
    "text": "cute local View only the incremental view will be reported",
    "start": "1422360",
    "end": "1428260"
  },
  {
    "text": "and then Jesus reduce the broadcasting and then send it back to the rate one",
    "start": "1428539",
    "end": "1434480"
  },
  {
    "text": "and it only sends the delete ones which is ready too so here only incremental view will be",
    "start": "1434480",
    "end": "1440179"
  },
  {
    "text": "broadcasted to release the native Village you want to start a once review test it doesn't have any",
    "start": "1440179",
    "end": "1446840"
  },
  {
    "text": "resourcing cluster or scalar to go in because it is three they don't know each other",
    "start": "1446840",
    "end": "1452600"
  },
  {
    "text": "and then really slow about the part is local view because that's the incremental thing for this cluster",
    "start": "1452600",
    "end": "1459860"
  },
  {
    "text": "she says get to the view during the broadcast notice here Jesus only sends religious recipe to",
    "start": "1459860",
    "end": "1467000"
  },
  {
    "text": "read it one too and some very Divine choose view to Value three so this is much better",
    "start": "1467000",
    "end": "1472580"
  },
  {
    "text": "compared with before you might think like okay what if there",
    "start": "1472580",
    "end": "1478159"
  },
  {
    "text": "are a lot of changes uh in the local Reddit it means there will be a lot of messages",
    "start": "1478159",
    "end": "1484039"
  },
  {
    "text": "like it might be even worse compared before so here in terms of implementation sound",
    "start": "1484039",
    "end": "1490159"
  },
  {
    "text": "optimization or patching has been done to read it then in this way rename to the number of",
    "start": "1490159",
    "end": "1496760"
  },
  {
    "text": "messages okay this is a benchmark result before and",
    "start": "1496760",
    "end": "1504320"
  },
  {
    "text": "after the Improvement we can see before the Improvement the network usage is",
    "start": "1504320",
    "end": "1509480"
  },
  {
    "text": "really high it's 3.5 gigabytes for a 2000 nodes cluster and return the skill",
    "start": "1509480",
    "end": "1516860"
  },
  {
    "text": "because in the handle it is 1.6 gigabytes per second but after the Improvement we can see",
    "start": "1516860",
    "end": "1523700"
  },
  {
    "text": "here the network usage has dropped by 10 times and because now after an improvement",
    "start": "1523700",
    "end": "1531980"
  },
  {
    "text": "the resource broadcasting happens in time and also it reduce a lot of work",
    "start": "1531980",
    "end": "1537260"
  },
  {
    "text": "from registers so the actor creation should increase by three times",
    "start": "1537260",
    "end": "1543100"
  },
  {
    "text": "okay now that's everything all the improvements we have done to scale up to",
    "start": "1543140",
    "end": "1549679"
  },
  {
    "text": "4000 nodes here's a summary health check",
    "start": "1549679",
    "end": "1554779"
  },
  {
    "text": "will change it from the push-based protocol to the pool based one",
    "start": "1554779",
    "end": "1560360"
  },
  {
    "text": "before the change GSS is easy to make false positive decision",
    "start": "1560360",
    "end": "1566419"
  },
  {
    "text": "but after a change in the worst case Jesus has just sent us less health check",
    "start": "1566419",
    "end": "1573559"
  },
  {
    "text": "another one is the resource Broadcasting before the change the whole snapshot will be reported",
    "start": "1573559",
    "end": "1579740"
  },
  {
    "text": "every 100 milliseconds but after the change only incremental view will be reported",
    "start": "1579740",
    "end": "1585559"
  },
  {
    "text": "cool now let's see the demo in this demo we will run a 40 000 actors with four",
    "start": "1585559",
    "end": "1593179"
  },
  {
    "text": "thousand nodes and 10 actors per node I want to do the knife down but this workload very known",
    "start": "1593179",
    "end": "1599900"
  },
  {
    "text": "so I have a recorded one hello everyone here I'm going to do a",
    "start": "1599900",
    "end": "1606200"
  },
  {
    "text": "demo to show the ability over it this demo is done on any skillful children",
    "start": "1606200",
    "end": "1611299"
  },
  {
    "text": "cluster in this demo I'm going to run a 4000 Note 3 cluster",
    "start": "1611299",
    "end": "1617299"
  },
  {
    "text": "let's check the setup first for the handout I will use m524x large",
    "start": "1617299",
    "end": "1624080"
  },
  {
    "text": "and for the workload I will use m5x large and I will have 4 000 working",
    "start": "1624080",
    "end": "1630620"
  },
  {
    "text": "nodes each work knows it will have two virtual CPU so in the end I will have",
    "start": "1630620",
    "end": "1636919"
  },
  {
    "text": "first 8 000 CPUs and for the handle I set the vcpu number",
    "start": "1636919",
    "end": "1642020"
  },
  {
    "text": "to be zero so that all the actors will be launched on the welcome node",
    "start": "1642020",
    "end": "1648559"
  },
  {
    "text": "okay cool let's start the cluster",
    "start": "1648559",
    "end": "1653260"
  },
  {
    "text": "now the cluster is launching let's check the event log for the progress",
    "start": "1656720",
    "end": "1663100"
  },
  {
    "text": "you can see the cluster started to launch at 9 49. let's wait a while until",
    "start": "1663740",
    "end": "1670400"
  },
  {
    "text": "the cluster is fully launched finally the cluster finished to launch",
    "start": "1670400",
    "end": "1677740"
  },
  {
    "text": "and it ends at 9 54. and we start at",
    "start": "1677740",
    "end": "1684620"
  },
  {
    "text": "9 49 so we only use five minutes to launch a 4000 Note 3 cluster this is",
    "start": "1684620",
    "end": "1691220"
  },
  {
    "text": "very fast and really impressive this is any scale proprietary feature and the",
    "start": "1691220",
    "end": "1697039"
  },
  {
    "text": "team has done a lot of work to optimize the cluster startup type",
    "start": "1697039",
    "end": "1702200"
  },
  {
    "text": "okay let's check the cluster status before we run the script",
    "start": "1702200",
    "end": "1707419"
  },
  {
    "text": "let's run this battles",
    "start": "1707419",
    "end": "1711158"
  },
  {
    "text": "and we can see we have a 4 000 loads with class launched with one handle here",
    "start": "1712580",
    "end": "1718400"
  },
  {
    "text": "will have 8 000 CPUs and all these CPUs come from the workers",
    "start": "1718400",
    "end": "1723860"
  },
  {
    "text": "in this test we will launch a lot of trivia actors and each will use 0.2 CPUs",
    "start": "1723860",
    "end": "1730940"
  },
  {
    "text": "and since we have 8 000 CPUs so we can launch 40 000 actors in total",
    "start": "1730940",
    "end": "1738260"
  },
  {
    "text": "we will do the launch with the read limit very large the",
    "start": "1738260",
    "end": "1743299"
  },
  {
    "text": "actors up to 2000 in parallel this is the full loop for Loop body",
    "start": "1743299",
    "end": "1750380"
  },
  {
    "text": "launching the actors this pattern is doing the rich limited and recent launching actors",
    "start": "1750380",
    "end": "1756440"
  },
  {
    "text": "this is calling the actor master and gets the object ref then in the end we wait for all the",
    "start": "1756440",
    "end": "1763220"
  },
  {
    "text": "actors to be ready and print the total time used to launch all these actors",
    "start": "1763220",
    "end": "1769640"
  },
  {
    "text": "okay let's give it a try",
    "start": "1769640",
    "end": "1773620"
  },
  {
    "text": "let's wait for a while until script finished",
    "start": "1780140",
    "end": "1784658"
  },
  {
    "text": "now everything finished now let's run this status to check the status of this new cluster",
    "start": "1786020",
    "end": "1795100"
  },
  {
    "text": "now we see all the CPUs has been used",
    "start": "1798500",
    "end": "1804100"
  },
  {
    "text": "okay yeah now we can run a 4000 nodes we",
    "start": "1804260",
    "end": "1811880"
  },
  {
    "text": "cluster with 40 000 axles but what if one we want to scale further there are",
    "start": "1811880",
    "end": "1817399"
  },
  {
    "text": "two directions because she says still the bottleneck the first direction is that we can",
    "start": "1817399",
    "end": "1822500"
  },
  {
    "text": "reduce Jesus responsibility for example just redesign the actual creation protocol",
    "start": "1822500",
    "end": "1828140"
  },
  {
    "text": "to avoid interacting with yourself or we can improve Jesus performance I've shot",
    "start": "1828140",
    "end": "1833480"
  },
  {
    "text": "it or make it status okay that's everything for today's talk",
    "start": "1833480",
    "end": "1839120"
  },
  {
    "text": "thank you",
    "start": "1839120",
    "end": "1841899"
  },
  {
    "text": "I thank you you unfortunately we're out of time so please just uh ask them for questions but thank you again please",
    "start": "1844940",
    "end": "1851179"
  },
  {
    "text": "submit any feedback to the race Summit app there's a feedback button thank you",
    "start": "1851179",
    "end": "1856460"
  },
  {
    "text": "thank you Sam",
    "start": "1856460",
    "end": "1859360"
  }
]