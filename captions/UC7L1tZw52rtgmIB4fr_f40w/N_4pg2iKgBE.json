[
  {
    "text": "hello everyone welcome we're going to start in about a couple of minutes we'll be letting some people in",
    "start": "1860",
    "end": "7799"
  },
  {
    "text": "uh as people are joining us from all over the place and we're going to give about a few minutes before we get started",
    "start": "7799",
    "end": "15080"
  },
  {
    "text": "and if you want to let us know we are joining us please feel free to put it in the chat you don't have to put your name",
    "start": "17039",
    "end": "22619"
  },
  {
    "text": "but it would be nice to see where you're joining us I know most of the people are joining us from around the place it",
    "start": "22619",
    "end": "28080"
  },
  {
    "text": "would be nice to see where you're heading from",
    "start": "28080",
    "end": "31460"
  },
  {
    "text": "you guys can see my slides right thank you we'll give for a couple of more minutes",
    "start": "40020",
    "end": "47280"
  },
  {
    "text": "um to give a good quorum and we'll get the ball rolling we got about 10 people on okay we're gonna get",
    "start": "47280",
    "end": "53940"
  },
  {
    "text": "started my name is Joel domji welcome really to the Bay Area meet monthly Meetup uh this is all about Community it",
    "start": "53940",
    "end": "61199"
  },
  {
    "text": "is all about about having monthly meetups that we can actually share the knowledge you guys are an important part",
    "start": "61199",
    "end": "66900"
  },
  {
    "text": "of the community so we really want to share how other users using Ray and how",
    "start": "66900",
    "end": "72299"
  },
  {
    "text": "great team is actually building some of the new features since since we announced 2.1 into and 2.0 so welcome to",
    "start": "72299",
    "end": "79680"
  },
  {
    "text": "our monthly Meetup and again um just some Logistics before we actually get started uh all your mics",
    "start": "79680",
    "end": "87000"
  },
  {
    "text": "are actually muted unfortunately so we can't hear you nor can we see you so I would advise you that if you're actually",
    "start": "87000",
    "end": "93060"
  },
  {
    "text": "having any Zoom difficulties please do put it in the chat so I'll try to attend",
    "start": "93060",
    "end": "98159"
  },
  {
    "text": "to that and please enter all your questions that you actually have uh throughout the throughout the Meetup uh",
    "start": "98159",
    "end": "104820"
  },
  {
    "text": "in the Q a section not in the chat section because sometimes it's very difficult for me to track down to put",
    "start": "104820",
    "end": "110759"
  },
  {
    "text": "your q a questions in the in the Q a sections and we'll try to answer those questions towards the end and then are",
    "start": "110759",
    "end": "117000"
  },
  {
    "text": "there any regulated questions I'll try to answer it asynchronously but we'll try to keep the Q a sections towards the",
    "start": "117000",
    "end": "122939"
  },
  {
    "text": "end of the particular talk um here's the agenda for today uh I'm obviously have some announcements",
    "start": "122939",
    "end": "129479"
  },
  {
    "text": "that I'm going to be sharing with you some upcoming events which are happening with respect to array and then we have",
    "start": "129479",
    "end": "135360"
  },
  {
    "text": "two really good talks one is it's one thing really to write distributed applications which has been the goal in",
    "start": "135360",
    "end": "142860"
  },
  {
    "text": "the vision of both red and scale as well to make sure that everybody out there who can actually write this just about applications the way they would like",
    "start": "142860",
    "end": "150239"
  },
  {
    "text": "their python code but it's a whole different ball game really it's a whole different Paradigm to figure out how to",
    "start": "150239",
    "end": "156300"
  },
  {
    "text": "actually debug the thing how to monitor those things what are some of the lenses that you actually look through what other ways you can actually somehow get",
    "start": "156300",
    "end": "163200"
  },
  {
    "text": "to the root of the problems and we have two uh software Engineers from um from the ray team uh sung bin and Ricky who",
    "start": "163200",
    "end": "170519"
  },
  {
    "text": "are going to share us what they have been working on in terms of the observability and the debuggability of",
    "start": "170519",
    "end": "176879"
  },
  {
    "text": "Ray applications so they're going to share that with us from the ray team they will have the Q enter sections and",
    "start": "176879",
    "end": "182099"
  },
  {
    "text": "I'm delighted really to welcome Frank and Philip uh from from zilis who have",
    "start": "182099",
    "end": "187260"
  },
  {
    "text": "who are going to share us how they're actually using Rey to use the open source distributed Vector database that",
    "start": "187260",
    "end": "194580"
  },
  {
    "text": "actually have called nilvus and Philip is both an engineer as well as as a contributor to both these open",
    "start": "194580",
    "end": "200760"
  },
  {
    "text": "source projects so he's going to share us how they're actually using the underlying Engine with Rey at scale and",
    "start": "200760",
    "end": "206400"
  },
  {
    "text": "then we'll get into q a so a couple of upcoming events I'm really really super excited uh to welcome those of you who",
    "start": "206400",
    "end": "213180"
  },
  {
    "text": "are interested in this race Saturday we are going to be hosting reset December the 10th uh unfortunately it's at the",
    "start": "213180",
    "end": "220500"
  },
  {
    "text": "time when the quarterfinals are on the World Cup so we'll be competing with with that but essentially it's a whole day training event starting from 9 30",
    "start": "220500",
    "end": "228060"
  },
  {
    "text": "all the way to to five first in-person event headquarters please go ahead and fill those fill up",
    "start": "228060",
    "end": "235379"
  },
  {
    "text": "that particular form if you actually want to register it's one of our first uh training event that we actually want to share we have built up a lot of",
    "start": "235379",
    "end": "241920"
  },
  {
    "text": "modules that we actually want to share with people who are either new to Ray or email practitioners and they want to see",
    "start": "241920",
    "end": "247019"
  },
  {
    "text": "how they can actually use the scale them this is free uh first in-house event",
    "start": "247019",
    "end": "252599"
  },
  {
    "text": "that we actually Community event they're actually doing so I'm super excited to do this along with my training along",
    "start": "252599",
    "end": "258120"
  },
  {
    "text": "with our training team so feel free to look at that particular URL and register yourself the the um",
    "start": "258120",
    "end": "266820"
  },
  {
    "text": "slots are limited we only have about 35 slots so whoever actually comes first gets gets the spot another exciting",
    "start": "266820",
    "end": "273780"
  },
  {
    "text": "thing which is really come I'm super excited we actually had a very good race on on on the success of that we're",
    "start": "273780",
    "end": "280560"
  },
  {
    "text": "actually planning another race Summit in a few months we'll have the next one in",
    "start": "280560",
    "end": "285800"
  },
  {
    "text": "September next year at Marriott but the cfp the the call for proposals are",
    "start": "285800",
    "end": "291660"
  },
  {
    "text": "opening up on on um second now third of January I think",
    "start": "291660",
    "end": "297000"
  },
  {
    "text": "there's a there's a date missing third of January next year is going to be open until about 17. so those of you are",
    "start": "297000",
    "end": "302639"
  },
  {
    "text": "interested to share with your journey about how they're actually using Rave uh please make sure you keep those dates in",
    "start": "302639",
    "end": "307979"
  },
  {
    "text": "mind uh Frank Aubrey I'll be reaching out to you and Philippa as well so keep those keep those due dates in mind so",
    "start": "307979",
    "end": "314040"
  },
  {
    "text": "stay tuned for the website for the CRA uh as I say this is all about community community is really a center and and and",
    "start": "314040",
    "end": "322100"
  },
  {
    "text": "in the center of success of how Ray actually goes out so if you actually want to join the community go comment",
    "start": "322100",
    "end": "328440"
  },
  {
    "text": "come and join us go to this particular URL join our slack Channel follow us on Twitter uh subscribe to our newsletter",
    "start": "328440",
    "end": "334500"
  },
  {
    "text": "you know we have commuters on both GitHub who are answering your issues as well as uh on forum and Slack",
    "start": "334500",
    "end": "342120"
  },
  {
    "text": "and given that this is an important part of our code of conduct I'm not expecting you to read all that but I'm just going",
    "start": "342120",
    "end": "348600"
  },
  {
    "text": "to live here for about 30 seconds so you can actually take a look at it that we are strictly about code of conduct let",
    "start": "348600",
    "end": "355259"
  },
  {
    "text": "me make sure that this is a safe environment for all of us both participants as well as as presenters so",
    "start": "355259",
    "end": "361740"
  },
  {
    "text": "I'll keep that here for about 30 seconds and then I'll stop sharing my slides and we'll have okay should I answer my",
    "start": "361740",
    "end": "366960"
  },
  {
    "text": "screen let me uh start sharing my screen interesting",
    "start": "366960",
    "end": "373900"
  },
  {
    "text": "[Music] foreign",
    "start": "373900",
    "end": "380539"
  },
  {
    "text": "how does that look yeah I can see it brilliant awesome",
    "start": "380840",
    "end": "387840"
  },
  {
    "text": "okay then I'll just get started then so hi everyone um I'm here to just present about the uh",
    "start": "387840",
    "end": "393960"
  },
  {
    "text": "one step to distributed embedding vectors generation with Ray so I'll start a little bit about myself",
    "start": "393960",
    "end": "400500"
  },
  {
    "text": "so my name is Philip hotmire I'm a software engineer here at zillas and I've been with this team for roughly two",
    "start": "400500",
    "end": "407039"
  },
  {
    "text": "years now and I've worked on both our Melvis intelli projects which I'll explain in a few seconds",
    "start": "407039",
    "end": "413400"
  },
  {
    "text": "um and those are my contact links if you ever want to connect with me so what this presentation is going to be",
    "start": "413400",
    "end": "419759"
  },
  {
    "text": "about is mainly our Vector database system and our pipeline solution that",
    "start": "419759",
    "end": "424979"
  },
  {
    "text": "fits in its ecosystem and how we incorporated Rey the kind of distribute our system in a one step one quick easy",
    "start": "424979",
    "end": "431100"
  },
  {
    "text": "step to get the whole thing working um so yeah let's first start about the",
    "start": "431100",
    "end": "436199"
  },
  {
    "text": "background of our Vector database this is where everything's sort of stems from um it was the first idea we had and our",
    "start": "436199",
    "end": "443639"
  },
  {
    "text": "first step into our ecosystem and to kind of go over this you first need to know what Vector embeddings are",
    "start": "443639",
    "end": "450479"
  },
  {
    "text": "and what we're trying to deal with um a lot of you guys might be uh guys and gals might be Engineers you might",
    "start": "450479",
    "end": "457860"
  },
  {
    "text": "have a good idea of how infected data processing works but I'll do a quick run through of what's going on and why it's",
    "start": "457860",
    "end": "464160"
  },
  {
    "text": "difficult to solve so let's begin with what unstructured data is data can usually be divided into",
    "start": "464160",
    "end": "470699"
  },
  {
    "text": "three categories usually being structured semi-structured and unstructured data structured data is",
    "start": "470699",
    "end": "477660"
  },
  {
    "text": "stuff that can be pretty much stored in a relational database data with defined",
    "start": "477660",
    "end": "482940"
  },
  {
    "text": "patterns and values which are easily grouped together the easiest way to think of this is uh",
    "start": "482940",
    "end": "489360"
  },
  {
    "text": "things that can be stored in Excel strings number States things like computers can easily process",
    "start": "489360",
    "end": "495599"
  },
  {
    "text": "then my structured data is something that's a little bit more confusing it's not a term used too much but it still",
    "start": "495599",
    "end": "502440"
  },
  {
    "text": "exists uh and this is data that is consistent",
    "start": "502440",
    "end": "508139"
  },
  {
    "text": "to some sort of characteristics but doesn't uh conform to a rigid structure so the best idea for this are jsons",
    "start": "508139",
    "end": "515339"
  },
  {
    "text": "jsons have consistent kind of Syntax for them but their structure isn't always",
    "start": "515339",
    "end": "520800"
  },
  {
    "text": "the same so when reading jsons you pretty much can't hard code how you're going to read it because there are",
    "start": "520800",
    "end": "526620"
  },
  {
    "text": "varying data values and every Json can be different and lastly is unstructured",
    "start": "526620",
    "end": "531779"
  },
  {
    "text": "data and unstructured data roughly accounts for 80 of all data that we have today",
    "start": "531779",
    "end": "537839"
  },
  {
    "text": "um with this data there is no structure within and no structures that computers can easily understand so for this think",
    "start": "537839",
    "end": "544200"
  },
  {
    "text": "of images videos audio anything like this and this is the one that we're",
    "start": "544200",
    "end": "549300"
  },
  {
    "text": "trying to deal with so why is it hard to deal with when we",
    "start": "549300",
    "end": "554339"
  },
  {
    "text": "look at structured data it's pretty easy to deal with because it has defined patterns and values and can be grouped",
    "start": "554339",
    "end": "560339"
  },
  {
    "text": "together pretty easily as we said before this is perfect for relational databases and that's pretty much the main Solution",
    "start": "560339",
    "end": "567420"
  },
  {
    "text": "that's used for those um unstructured data on the other hand hasn't really had any analytical methods",
    "start": "567420",
    "end": "574800"
  },
  {
    "text": "uh to kind of deal with this data and up until now so now in the past I would say",
    "start": "574800",
    "end": "580640"
  },
  {
    "text": "five five-ish years everyone knows about neural Nets and those have been blowing up and this is now a route that we can",
    "start": "580640",
    "end": "588180"
  },
  {
    "text": "deal with this unstructured data before we got nothing but now we have these neural Nets that can kind of understand",
    "start": "588180",
    "end": "593279"
  },
  {
    "text": "the data that we have it gives it our computers a way to process this data and kind of make use of it and kind of make",
    "start": "593279",
    "end": "600240"
  },
  {
    "text": "it comparable to other things um so with these neural Nets we can",
    "start": "600240",
    "end": "606839"
  },
  {
    "text": "throw them through throw our infrastructured data through and we can extract vectors with these vectors",
    "start": "606839",
    "end": "612680"
  },
  {
    "text": "unstructured data that goes through if it's images with the vectors that are resultant",
    "start": "612680",
    "end": "618360"
  },
  {
    "text": "two images that are roughly the same in our view will most likely have vectors that are very close together so an",
    "start": "618360",
    "end": "625320"
  },
  {
    "text": "images images of two cats will most likely have vectors that aren't too uh far away from each other",
    "start": "625320",
    "end": "630899"
  },
  {
    "text": "let's see if we have an image of a cat an image of a monkey those will be more distant and this is how we can start",
    "start": "630899",
    "end": "636959"
  },
  {
    "text": "comparing our data and processing our data and the ultimate problem now has become",
    "start": "636959",
    "end": "642060"
  },
  {
    "text": "Vector computation so why is Vector computation different difficult so once we have these vectors",
    "start": "642060",
    "end": "648959"
  },
  {
    "text": "you might think okay we can store these in relational database so we can do something like that well the difficulty",
    "start": "648959",
    "end": "654540"
  },
  {
    "text": "comes in in the form of how we compare these datas um",
    "start": "654540",
    "end": "659700"
  },
  {
    "text": "for example when we compare to regular numbers and the issue comes in is that",
    "start": "659700",
    "end": "667800"
  },
  {
    "text": "regular numbers you have your arithmetic operations um they're pretty easy you can do these",
    "start": "667800",
    "end": "673200"
  },
  {
    "text": "comparisons and you can work on your data with predefined set patterns and quick and easy",
    "start": "673200",
    "end": "680100"
  },
  {
    "text": "um executable pretty much operations um with numbers as well if you're going to",
    "start": "680100",
    "end": "685860"
  },
  {
    "text": "compare them together you have the simple um comparisons uh less than greater than",
    "start": "685860",
    "end": "692399"
  },
  {
    "text": "equal to and these are pretty well defined and they're easy to calculate and they're easy for computers to process and then when trying to index",
    "start": "692399",
    "end": "699420"
  },
  {
    "text": "these Opera uh these numbers you have pretty good methods of doing it because",
    "start": "699420",
    "end": "704579"
  },
  {
    "text": "they can be easily compared and a simple example this is Beatrice vectors on the other hand can't be compared that easily",
    "start": "704579",
    "end": "711180"
  },
  {
    "text": "this way because the only way that we can kind of compare between them is through similarity metrics",
    "start": "711180",
    "end": "718100"
  },
  {
    "text": "and the issue with this is similarity calculations are pretty difficult",
    "start": "718100",
    "end": "723480"
  },
  {
    "text": "um as you can see the equation they are not the easiest to compute and they're normally much slower than arithmetic",
    "start": "723480",
    "end": "730500"
  },
  {
    "text": "comparisons and number comparisons and because of this we can't have exact",
    "start": "730500",
    "end": "736200"
  },
  {
    "text": "greater than or lessons if we have two vectors some indices of that Vector might be greater so it might be less",
    "start": "736200",
    "end": "742079"
  },
  {
    "text": "than but there is no this one is a bigger Vector this one is a smaller vector and that's why with indexes with the",
    "start": "742079",
    "end": "749760"
  },
  {
    "text": "vectors we kind of moved to these approximate nearest neighbor algorithms and here we have two algorithms shown",
    "start": "749760",
    "end": "755760"
  },
  {
    "text": "which are graph based on the right and cluster based on the left",
    "start": "755760",
    "end": "761459"
  },
  {
    "text": "so those aren't the only two types um there's multiple different uh indexing algorithms that came out with vectors",
    "start": "761459",
    "end": "768540"
  },
  {
    "text": "and with this kind of new age of neural networks um the first one that is pretty popular",
    "start": "768540",
    "end": "775680"
  },
  {
    "text": "are hash based indexes and these are used",
    "start": "775680",
    "end": "780720"
  },
  {
    "text": "um hash algorithms uh that are a little bit uh different to normal hash",
    "start": "780720",
    "end": "786180"
  },
  {
    "text": "algorithms instead of avoiding collisions they want collisions between similar inputs because this is how you're going to get your similarity if",
    "start": "786180",
    "end": "793079"
  },
  {
    "text": "you get collisions that means those are most likely similar values um next comes the tree based route which",
    "start": "793079",
    "end": "800519"
  },
  {
    "text": "comes in the form of spotify's annoy algorithm um and annoy builds binary trees by",
    "start": "800519",
    "end": "806339"
  },
  {
    "text": "repeatedly repeatedly splitting the data by a hybrid plane constantly splitting it to as many hyper claims as you want",
    "start": "806339",
    "end": "811680"
  },
  {
    "text": "and then near the end you perform a search by going down the tree and choosing the side of the hyperplane that",
    "start": "811680",
    "end": "817380"
  },
  {
    "text": "the query Vector falls into um this is a pretty popular one that's used and it's used in",
    "start": "817380",
    "end": "824040"
  },
  {
    "text": "Spotify systems right now for let's say an example is your recommended music or something like that this is all based on",
    "start": "824040",
    "end": "830579"
  },
  {
    "text": "kind of encoding the music into vectors and then finding similar vectors in the database of their music",
    "start": "830579",
    "end": "838380"
  },
  {
    "text": "um the next one that comes after that is spotify's face uh Library which is",
    "start": "838380",
    "end": "843660"
  },
  {
    "text": "inverted into inverted file based this I would say is one of the most popular",
    "start": "843660",
    "end": "848760"
  },
  {
    "text": "um index types and it's probably one of the most used in a lot of systems",
    "start": "848760",
    "end": "854160"
  },
  {
    "text": "um the way that uh the inverted file base works is that it's built on",
    "start": "854160",
    "end": "860160"
  },
  {
    "text": "clustering so with this index you take all your values you throw your vectors in and you throw them in and then you",
    "start": "860160",
    "end": "866399"
  },
  {
    "text": "calculate centroids for all these values and by building up these clusters you then store the actual values below",
    "start": "866399",
    "end": "873720"
  },
  {
    "text": "the centroid so when you're performing a search you compare your search um Vector to all the centroids and you",
    "start": "873720",
    "end": "880560"
  },
  {
    "text": "match the closest centroids and then search Brute Force search through their inverted list and then lastly the one of",
    "start": "880560",
    "end": "887399"
  },
  {
    "text": "the more revolutionary ones is the hsw which isn't used the most and this is the graph based index and it's a",
    "start": "887399",
    "end": "893880"
  },
  {
    "text": "multi-layer graph where at the top you have a very sparse graph and for each",
    "start": "893880",
    "end": "900300"
  },
  {
    "text": "level you go down by comparing whatever values are closest and you go down a level and you keep going down levels",
    "start": "900300",
    "end": "906360"
  },
  {
    "text": "going to the most similar routes the closest graph notes and by the end you will find a little cluster that is based",
    "start": "906360",
    "end": "913139"
  },
  {
    "text": "on what's the closest uh result for your vector okay",
    "start": "913139",
    "end": "918720"
  },
  {
    "text": "um so with these uh algorithms and indexes and with these issues we decided",
    "start": "918720",
    "end": "923820"
  },
  {
    "text": "that our first project would be a vector database and this is important because a lot of these indexes don't really have a",
    "start": "923820",
    "end": "929760"
  },
  {
    "text": "way of managing your data um well they can build up these indexes and",
    "start": "929760",
    "end": "935279"
  },
  {
    "text": "can do all the searches on them you can't modify them you can't update them you can't delete values without",
    "start": "935279",
    "end": "940380"
  },
  {
    "text": "re-indexing all your data and this is a big issue because with so much data coming in you will constantly need to",
    "start": "940380",
    "end": "945420"
  },
  {
    "text": "rebuild your index and with our system you're able to search storing query vectors at the million trillion scale",
    "start": "945420",
    "end": "952320"
  },
  {
    "text": "and mere milliseconds um and with this with this Novus R Vector",
    "start": "952320",
    "end": "959160"
  },
  {
    "text": "database you take advantage of all those uh previous Vector indexes so you can choose whichever one of those you want",
    "start": "959160",
    "end": "964199"
  },
  {
    "text": "and you can run those so you can test out and you can find the best results for your use case and this system is",
    "start": "964199",
    "end": "969540"
  },
  {
    "text": "fully Cloud native and elastic and what we notice so we released this a few",
    "start": "969540",
    "end": "974639"
  },
  {
    "text": "years ago I believe 2017 and we built up a pretty large user base but we have one",
    "start": "974639",
    "end": "980100"
  },
  {
    "text": "main problem that we see with a lot of uh our users and this is that they really enjoy using",
    "start": "980100",
    "end": "987120"
  },
  {
    "text": "our Vector database but they need help with the steps before generating these",
    "start": "987120",
    "end": "992579"
  },
  {
    "text": "vectors um sometimes with some companies uh kind of use our Melvis",
    "start": "992579",
    "end": "999060"
  },
  {
    "text": "um they don't have their own ml teams and they don't really have the manpower to come create these complex models that",
    "start": "999060",
    "end": "1005779"
  },
  {
    "text": "they need um companies that are large usually have their own ml team stats teams and all",
    "start": "1005779",
    "end": "1012560"
  },
  {
    "text": "this and they build pretty much all these tools internally and they don't release them to anyone and we find that",
    "start": "1012560",
    "end": "1017839"
  },
  {
    "text": "to be a problem because we want to get as many people to be able to analyze their data and use that how they want",
    "start": "1017839",
    "end": "1023959"
  },
  {
    "text": "without having to build up this entire ml team so what's the best way to help these users and how do we fill in this",
    "start": "1023959",
    "end": "1030319"
  },
  {
    "text": "hole so this is where our pipeline solution came in and before going over uh",
    "start": "1030319",
    "end": "1039079"
  },
  {
    "text": "but it is I'll go over why it's really hard and why a lot of these companies need entire teams to deal with this so",
    "start": "1039079",
    "end": "1046280"
  },
  {
    "text": "one of the first things that happens um that users are having errors with is",
    "start": "1046280",
    "end": "1051980"
  },
  {
    "text": "that it's very hard um and it's very complex the data can",
    "start": "1051980",
    "end": "1057559"
  },
  {
    "text": "come in many different ways different many different modalities so images as before images audio video",
    "start": "1057559",
    "end": "1064059"
  },
  {
    "text": "medical charts um molecular structures a lot of different",
    "start": "1064059",
    "end": "1069620"
  },
  {
    "text": "data types and let's say if you have a pipeline that's for images it's really hard to adapt and modify for a pipeline",
    "start": "1069620",
    "end": "1076400"
  },
  {
    "text": "for videos there's a lot of mid-steps that you have to do and this requires a lot of work",
    "start": "1076400",
    "end": "1081500"
  },
  {
    "text": "um similar to this uh a lot of the tools that we currently have for this lack",
    "start": "1081500",
    "end": "1086539"
  },
  {
    "text": "standard so switching between these different data types might result in a new tool that you're using a new library",
    "start": "1086539",
    "end": "1091880"
  },
  {
    "text": "and they might not play together well one might be stream based one might be batch based one might be streamed in a",
    "start": "1091880",
    "end": "1097400"
  },
  {
    "text": "different way and it kind of breaks so you end up having to create a whole new solution for a data that's very similar",
    "start": "1097400",
    "end": "1105440"
  },
  {
    "text": "in the grand scheme of things an image in a video if you're only doing frame analysis pretty similar in the steps",
    "start": "1105440",
    "end": "1111679"
  },
  {
    "text": "after so this is also how Solutions there at one size doesn't fit all",
    "start": "1111679",
    "end": "1117320"
  },
  {
    "text": "um every solution will not really apply to different types of data and different inputs and as before as I stated a lot",
    "start": "1117320",
    "end": "1124940"
  },
  {
    "text": "of companies don't have these giant ml teams that can handle building up these tools internally",
    "start": "1124940",
    "end": "1130880"
  },
  {
    "text": "so this is where Toby comes in um so here's our second open source project",
    "start": "1130880",
    "end": "1137660"
  },
  {
    "text": "um and what it is it's a framework for unstructured data processing and it simplifies this pipeline creation for",
    "start": "1137660",
    "end": "1144500"
  },
  {
    "text": "compute and embedding generation so originally this project was made mainly for creating embeddings but we also",
    "start": "1144500",
    "end": "1150140"
  },
  {
    "text": "realized that it can pretty it's not limited to that with our kind of pipelining style you can pretty much",
    "start": "1150140",
    "end": "1156320"
  },
  {
    "text": "make it do whatever compute pipeline that you want and compute processing you want so Toby goes in this space between",
    "start": "1156320",
    "end": "1163940"
  },
  {
    "text": "uh before Melvis the space that users are having trouble generating their data and generating their embeddings",
    "start": "1163940",
    "end": "1171380"
  },
  {
    "text": "um sorry one sec um this Zoom thing moved",
    "start": "1171380",
    "end": "1177980"
  },
  {
    "text": "over my slides uh do you guys see that uh",
    "start": "1177980",
    "end": "1184460"
  },
  {
    "text": "I have the zoom bar on my slides I can see it but um okay so I can see it yeah",
    "start": "1184460",
    "end": "1190580"
  },
  {
    "text": "yeah I mean I can see I can see the code it's hard to read it's a small font but I can see the yeah yeah the text and all",
    "start": "1190580",
    "end": "1196700"
  },
  {
    "text": "that yeah okay I'll I'll ignore them um so what does Toby bring Satori brings a",
    "start": "1196700",
    "end": "1202220"
  },
  {
    "text": "modular pythonic API for chaining different types of operators into pipelines and what this means is as in",
    "start": "1202220",
    "end": "1207860"
  },
  {
    "text": "the image with the code it's a little bit small you can chain together many different function calls to create these pipelines and these function calls can",
    "start": "1207860",
    "end": "1214880"
  },
  {
    "text": "be separated so you can do tabular style data where you're specifying your insert",
    "start": "1214880",
    "end": "1220760"
  },
  {
    "text": "and out outputs and chaining those later on in the code or you could do chain like where every input is the output to",
    "start": "1220760",
    "end": "1227360"
  },
  {
    "text": "the every output is the input to the max function and would tell you we provide a hub of over 700 state-of-the-art models",
    "start": "1227360",
    "end": "1234799"
  },
  {
    "text": "and data processing functions so on our Hub you can pull up all of the new um computer vision models already",
    "start": "1234799",
    "end": "1241400"
  },
  {
    "text": "pre-trained and uh able to be trained on our platform and it also integrates",
    "start": "1241400",
    "end": "1247039"
  },
  {
    "text": "various tools and libraries so that if you want to use a new library let's say for your data input you're using spark",
    "start": "1247039",
    "end": "1254059"
  },
  {
    "text": "or if you need access to FFM peg you're able to kind of use these and kind of",
    "start": "1254059",
    "end": "1260419"
  },
  {
    "text": "Click them in easily without having to worry about the standardization of the inputs and outputs",
    "start": "1260419",
    "end": "1267080"
  },
  {
    "text": "so what's missing from uh Toby right now and what do we need",
    "start": "1267080",
    "end": "1272120"
  },
  {
    "text": "so I currently have no means of scaling out",
    "start": "1272120",
    "end": "1278720"
  },
  {
    "text": "the pipeline for production purposes uh we need to take advantage of multiple machines to speed up compute but we",
    "start": "1278720",
    "end": "1284539"
  },
  {
    "text": "don't really have the means for this Distributing compute and optimizing uh execution is a project of its own and",
    "start": "1284539",
    "end": "1292460"
  },
  {
    "text": "the team for this is not capable of doing all this there's a lot that goes behind Distributing so much work and",
    "start": "1292460",
    "end": "1299179"
  },
  {
    "text": "upkeeping of clusters and organizing execution where it should be sent to which machine and all of this and we",
    "start": "1299179",
    "end": "1306260"
  },
  {
    "text": "also need since Toby is designed as this simple tool we want the back end for",
    "start": "1306260",
    "end": "1312260"
  },
  {
    "text": "this parallel compute to be as easy to use as possible um if we end up bringing in some back",
    "start": "1312260",
    "end": "1318620"
  },
  {
    "text": "end which takes a day to learn how to even deploy it that will kind of be against the purpose",
    "start": "1318620",
    "end": "1324260"
  },
  {
    "text": "because towie is designed to be easy to run and very fast to run and you don't really need much knowledge about it to",
    "start": "1324260",
    "end": "1330200"
  },
  {
    "text": "get it working and we also hope for a back end that won't require too many changes to our framework",
    "start": "1330200",
    "end": "1335960"
  },
  {
    "text": "um the reason for this one is mainly we're trying to build this up as fast as possible for our users for a way to get",
    "start": "1335960",
    "end": "1342080"
  },
  {
    "text": "them to be able to use the data so we want to build fast and fail fast um and if we require a lot of changes",
    "start": "1342080",
    "end": "1347600"
  },
  {
    "text": "ultimately this tool will take too long to get to users and we might move to something else so they might abandon the",
    "start": "1347600",
    "end": "1353059"
  },
  {
    "text": "project and what this ultimately is looking like is we need a fast way to get onto the cloud to get this",
    "start": "1353059",
    "end": "1358460"
  },
  {
    "text": "pipelining solution onto the cloud so this is uh where we kind of use Ray",
    "start": "1358460",
    "end": "1363919"
  },
  {
    "text": "so why do we choose Rey um we chose Rey for the these main",
    "start": "1363919",
    "end": "1368960"
  },
  {
    "text": "reasons um first of all Rey is capable uh and to it is able to",
    "start": "1368960",
    "end": "1376100"
  },
  {
    "text": "um how to distribute our heavy compute operators to the external machines with ease",
    "start": "1376100",
    "end": "1381200"
  },
  {
    "text": "um this means that for these operators and when I say operators those are like units of work",
    "start": "1381200",
    "end": "1386480"
  },
  {
    "text": "in our pipeline let's say calling inference on a neural net so with these operators we require a lot of compute",
    "start": "1386480",
    "end": "1392780"
  },
  {
    "text": "sometimes uses machines or the local machines won't can't even fit a model so we need a way to run all this online",
    "start": "1392780",
    "end": "1399679"
  },
  {
    "text": "um another thing that we really needed was the ability to keep state for certain operators and this is where Ray comes in",
    "start": "1399679",
    "end": "1406039"
  },
  {
    "text": "Ray core comes in with her actors um it's very important to us because we",
    "start": "1406039",
    "end": "1411080"
  },
  {
    "text": "also offer the ability to train these models and you need to keep State particular processing on these inputs and training your model otherwise that",
    "start": "1411080",
    "end": "1417679"
  },
  {
    "text": "no training would occur um but the rate core also allows is for us to keep our current design pattern",
    "start": "1417679",
    "end": "1425000"
  },
  {
    "text": "um this one as I said before for kind of building this up fast and getting it to users was really nice because it plugs",
    "start": "1425000",
    "end": "1430700"
  },
  {
    "text": "in very quickly and easily and most importantly we want it to be raised very",
    "start": "1430700",
    "end": "1435740"
  },
  {
    "text": "developer friendly for usage and deployment which I'll go over a little bit later",
    "start": "1435740",
    "end": "1441440"
  },
  {
    "text": "so Distributing to the cluster is really easy with uh array so",
    "start": "1441440",
    "end": "1447440"
  },
  {
    "text": "because of Ray's deployment with the kubernetes um operator it's very simple to get it up",
    "start": "1447440",
    "end": "1453860"
  },
  {
    "text": "and running um and it's easy for our users to get up and running as well which is most",
    "start": "1453860",
    "end": "1459620"
  },
  {
    "text": "important and then for the API for us it's very easy to get going with because of the",
    "start": "1459620",
    "end": "1466460"
  },
  {
    "text": "simple uses of the deck creators that are supplied for pretty much any of our functions that we already had internally",
    "start": "1466460",
    "end": "1472159"
  },
  {
    "text": "could be converted to array function with a lot of without any hard um problems that we uh to face so this",
    "start": "1472159",
    "end": "1479480"
  },
  {
    "text": "simple decorator with Ray was really useful um and another big one which at the time uh",
    "start": "1479480",
    "end": "1487280"
  },
  {
    "text": "I know right now has been getting upgraded and kind of improving which is awesome is the uh Ray Klein so with the",
    "start": "1487280",
    "end": "1493520"
  },
  {
    "text": "right client for us it was great because When developing it would allow us to quickly test our",
    "start": "1493520",
    "end": "1499460"
  },
  {
    "text": "um operations on uh the cluster without having to constantly move files or",
    "start": "1499460",
    "end": "1505340"
  },
  {
    "text": "constantly use them and all these things and it allowed us a way to test if our serialization's working if everything's",
    "start": "1505340",
    "end": "1510620"
  },
  {
    "text": "working so this ability to remotely connect was great for us it's also great for our users",
    "start": "1510620",
    "end": "1516440"
  },
  {
    "text": "um for them it also allows them to quickly test if their pipeline works with Ray if it's going to be running",
    "start": "1516440",
    "end": "1521480"
  },
  {
    "text": "well and allows them to check kind of to see what kind of speed UPS they're getting with um",
    "start": "1521480",
    "end": "1527299"
  },
  {
    "text": "with Ray what we're trying to do is get our most compute heavy operations kind",
    "start": "1527299",
    "end": "1532460"
  },
  {
    "text": "of offloaded this the when you're connecting remotely sure the connection might be slower in the passage of",
    "start": "1532460",
    "end": "1539120"
  },
  {
    "text": "your data might be slower but this computation is the one that really counts and with the rare remote",
    "start": "1539120",
    "end": "1544640"
  },
  {
    "text": "client you can kind of see you can get a general idea of what kind of savings you're getting and what kind of compute",
    "start": "1544640",
    "end": "1551120"
  },
  {
    "text": "savings you're going to get in time and base and all these things and it lets you kind of optimize your pipeline",
    "start": "1551120",
    "end": "1556700"
  },
  {
    "text": "around that another thing that allows you to do is quickly test out and then optimize the",
    "start": "1556700",
    "end": "1561980"
  },
  {
    "text": "rest of your pipeline for or the operator itself to see where you can kind of get some Speedos before you end",
    "start": "1561980",
    "end": "1567860"
  },
  {
    "text": "up deploying to the the head node in the rate cluster which definitely had known",
    "start": "1567860",
    "end": "1573679"
  },
  {
    "text": "in the cluster for production it's good for production but when you're messing around playing around trying to get everything to work it gets pretty",
    "start": "1573679",
    "end": "1579980"
  },
  {
    "text": "difficult so we really like this feature for that and um I think a lot of users will also enjoy the ability to connect",
    "start": "1579980",
    "end": "1585260"
  },
  {
    "text": "without having to move files around and run on the ins within the docker container of the head",
    "start": "1585260",
    "end": "1591919"
  },
  {
    "text": "so I'll go a little bit over um sorry if the code is small but going",
    "start": "1591919",
    "end": "1597740"
  },
  {
    "text": "over a little bit of the stuff of how how we moved over um to Ray core for our parallel compute",
    "start": "1597740",
    "end": "1605840"
  },
  {
    "text": "so statefulness in our operators is required in many situations um as I said before some operators",
    "start": "1605840",
    "end": "1612320"
  },
  {
    "text": "require training where we need to keep state but there's other operators as well and these include metrics overall",
    "start": "1612320",
    "end": "1619220"
  },
  {
    "text": "so when you're going through your data calculating the metrics of everything that's incoming maybe calculating averages over the entire data or subsets",
    "start": "1619220",
    "end": "1626179"
  },
  {
    "text": "of data and things like this so we need to be able to keep state with these operators and when they're acting on",
    "start": "1626179",
    "end": "1633140"
  },
  {
    "text": "values going through the pipeline so the bus solution that we kind of came",
    "start": "1633140",
    "end": "1638600"
  },
  {
    "text": "up with was to wrap our operators with actors and um doesn't know the right",
    "start": "1638600",
    "end": "1644539"
  },
  {
    "text": "actors are pretty much a stateful task and allows you to kind of use Rey like",
    "start": "1644539",
    "end": "1650120"
  },
  {
    "text": "the task in task submission um but keeping State and allowing you to kind of do what we need uh what we need here",
    "start": "1650120",
    "end": "1658220"
  },
  {
    "text": "so by wrapping our Opera is with Ray uh we solve this issue",
    "start": "1658220",
    "end": "1665840"
  },
  {
    "text": "of State um one issue that we did come up with was uh or one issue that did come up was",
    "start": "1665840",
    "end": "1672620"
  },
  {
    "text": "that um that some serialization uh issues occur",
    "start": "1672620",
    "end": "1680419"
  },
  {
    "text": "with operators since we have this Hub The Hub ones are very easy to deal with because they are pretty much enclosed",
    "start": "1680419",
    "end": "1687020"
  },
  {
    "text": "completely they have their own requirements they have their own um all the data that they need with",
    "start": "1687020",
    "end": "1694279"
  },
  {
    "text": "user-defined local operators more issues come into play where some parts of the",
    "start": "1694279",
    "end": "1699679"
  },
  {
    "text": "operator might not be serializable the requirements for that operator are",
    "start": "1699679",
    "end": "1704779"
  },
  {
    "text": "unknown since it's during the runtime we don't know which requirements are being required in serializing this kind of",
    "start": "1704779",
    "end": "1710360"
  },
  {
    "text": "stuff is very difficult so for future work we'll probably have to",
    "start": "1710360",
    "end": "1715880"
  },
  {
    "text": "put in some more effort into the serialization of our operators but this is one little area that we had a bit of",
    "start": "1715880",
    "end": "1721700"
  },
  {
    "text": "trouble with um for now we kind of push users to only use our Hub operators so the ones that",
    "start": "1721700",
    "end": "1727580"
  },
  {
    "text": "we can download and find online um anyone can put their own operators up there as well and",
    "start": "1727580",
    "end": "1734659"
  },
  {
    "text": "with this solution it doesn't really require any changes uh by the user for",
    "start": "1734659",
    "end": "1739940"
  },
  {
    "text": "their pipeline um this is all done behind the scenes which is great because there's not a lot of settings that users",
    "start": "1739940",
    "end": "1744980"
  },
  {
    "text": "have to start messing around with to get this working in the distributed sense",
    "start": "1744980",
    "end": "1750380"
  },
  {
    "text": "um so as I said this whole package",
    "start": "1750380",
    "end": "1755840"
  },
  {
    "text": "requirement is a little bit of an issue even though for the Hub operators it's",
    "start": "1755840",
    "end": "1761059"
  },
  {
    "text": "much easier to deal with um being that we can now load these operators into actors the next step is",
    "start": "1761059",
    "end": "1766580"
  },
  {
    "text": "kind of determining how do we get their packages onto the machine that is",
    "start": "1766580",
    "end": "1772220"
  },
  {
    "text": "running the actor so each operator has its own requirements text file",
    "start": "1772220",
    "end": "1777980"
  },
  {
    "text": "um so the simple solution that we came up with is just to kind of reuse how we do it for our tohi pipelines",
    "start": "1777980",
    "end": "1784700"
  },
  {
    "text": "um within tohi we have a simple system of how we're downloading bird just called",
    "start": "1784700",
    "end": "1790580"
  },
  {
    "text": "we have the ability to kind of call uh pip and download or download",
    "start": "1790580",
    "end": "1795880"
  },
  {
    "text": "libraries from wherever it's specified in the requirements or some other areas as well",
    "start": "1795880",
    "end": "1802220"
  },
  {
    "text": "um and with this already pre-built what we ended up doing was within each actor we kind of set up a pipeline of just one",
    "start": "1802220",
    "end": "1809360"
  },
  {
    "text": "operator which allows us to let tophi deal with all the package requirements",
    "start": "1809360",
    "end": "1814640"
  },
  {
    "text": "um one other issue that we ran into was uh that these Opera tohi in General Uses",
    "start": "1814640",
    "end": "1821480"
  },
  {
    "text": "default cache locations um and since we can have multiple actors on the same machine if we have these",
    "start": "1821480",
    "end": "1828200"
  },
  {
    "text": "default locations then we will run into the Deadlocks and that's not good um so what",
    "start": "1828200",
    "end": "1836419"
  },
  {
    "text": "we did for this is we overrode the local default locations for every actor so",
    "start": "1836419",
    "end": "1842299"
  },
  {
    "text": "that they would have their own space to work with and then everything ran really smoothly um we got many speed UPS and",
    "start": "1842299",
    "end": "1849980"
  },
  {
    "text": "very easy to use kind of um execution on this uh raid back and",
    "start": "1849980",
    "end": "1856880"
  },
  {
    "text": "for our parallel compute um and within keeping our current design",
    "start": "1856880",
    "end": "1862039"
  },
  {
    "text": "pattern what we used previously was um red pool executors these were working",
    "start": "1862039",
    "end": "1869240"
  },
  {
    "text": "well for paralyzing locally even though yes it was thread based and the python",
    "start": "1869240",
    "end": "1874279"
  },
  {
    "text": "Gill for a lot of these things wouldn't would kind of not allow for too much improvement",
    "start": "1874279",
    "end": "1879559"
  },
  {
    "text": "um but with our actors and Ray we could use",
    "start": "1879559",
    "end": "1885080"
  },
  {
    "text": "uh Ray actor pools to kind of smooth out this transition to the",
    "start": "1885080",
    "end": "1891260"
  },
  {
    "text": "um kind of distributed execution engine um the reactor pools could easily fit in",
    "start": "1891260",
    "end": "1896960"
  },
  {
    "text": "um they pretty much function the same way as thread pool executors You by sending values and receiving values back",
    "start": "1896960",
    "end": "1903320"
  },
  {
    "text": "and this was easy to plug in into our co-routine based system um",
    "start": "1903320",
    "end": "1908779"
  },
  {
    "text": "and this was a great thing because it allowed us to speed up our development of this and get it up and running",
    "start": "1908779",
    "end": "1914960"
  },
  {
    "text": "so what the results look like is here hopefully people can see the code but",
    "start": "1914960",
    "end": "1920659"
  },
  {
    "text": "pretty much this is how our kind of pipeline looks like when I say chaining operators so in",
    "start": "1920659",
    "end": "1927860"
  },
  {
    "text": "these um in this chain you can see the different kind of calls that you're making the different operators and the",
    "start": "1927860",
    "end": "1934220"
  },
  {
    "text": "brackets are their inputs and outputs and then in the parentheses are the parameters and with this Ray core all",
    "start": "1934220",
    "end": "1941120"
  },
  {
    "text": "you end up having to do is call put a set parallel and before whichever",
    "start": "1941120",
    "end": "1946220"
  },
  {
    "text": "operation you want in Ray and onset parallel after for removing what uh for",
    "start": "1946220",
    "end": "1952580"
  },
  {
    "text": "kind of stopping the next few operations to the in-ray and what it ends up looking is we have our pipeline down",
    "start": "1952580",
    "end": "1958580"
  },
  {
    "text": "below and all our actions are sent to the ray actor pool which it then goes pulls the",
    "start": "1958580",
    "end": "1965419"
  },
  {
    "text": "operator from The Hub and performs everything within the ray actor and sends the data back to our Pipeline and",
    "start": "1965419",
    "end": "1972080"
  },
  {
    "text": "ultimately this is how we combined array or with tohi and what we're kind of",
    "start": "1972080",
    "end": "1977539"
  },
  {
    "text": "dealing with and how pretty much the future is going to look for toe",
    "start": "1977539",
    "end": "1983000"
  },
  {
    "text": "so we did face some issues that are one issue in general that uh I already",
    "start": "1983000",
    "end": "1988220"
  },
  {
    "text": "talked about a little before I know Rey has been updated a little bit since the last time we kind of updated the array",
    "start": "1988220",
    "end": "1994700"
  },
  {
    "text": "version that we're using in Towhee but the main one that we kind of dealt had issues with was the serialization of our",
    "start": "1994700",
    "end": "2001240"
  },
  {
    "text": "callables and our some of our user-defined operators um",
    "start": "2001240",
    "end": "2006340"
  },
  {
    "text": "the sterilization had difficulties uh because pickle that was used by Ray can't serialize too much and or can't",
    "start": "2006340",
    "end": "2013960"
  },
  {
    "text": "serialize the specific use cases we did try using Dill to kind of serialize before moving to Ray but again Dill also",
    "start": "2013960",
    "end": "2022240"
  },
  {
    "text": "ran into some issues so most likely what we need to do is work on custom serializers and kind of put that on our",
    "start": "2022240",
    "end": "2029080"
  },
  {
    "text": "end hopefully maybe there is some solution for this in the future but um",
    "start": "2029080",
    "end": "2034779"
  },
  {
    "text": "yeah we'll have to see for that and for future work the main things that",
    "start": "2034779",
    "end": "2040120"
  },
  {
    "text": "we really need to do are kind of move our system to a full async system um to kind of improve speed and kind of",
    "start": "2040120",
    "end": "2047080"
  },
  {
    "text": "not deal with the Gill uh as as much and we ultimately want to work with Ray",
    "start": "2047080",
    "end": "2052839"
  },
  {
    "text": "serve um so we want to convert our pipelines to dags and that are compatible with Ray serve and then end",
    "start": "2052839",
    "end": "2059320"
  },
  {
    "text": "up executing everything within it already serve to kind of take advantage of all the speed ups that we can get there",
    "start": "2059320",
    "end": "2065740"
  },
  {
    "text": "and that is pretty much what I have to say so if anybody has any questions",
    "start": "2065740",
    "end": "2072119"
  },
  {
    "text": "excellent um let me see I have a question from Rajiv Abraham um serializer I don't know if you tried",
    "start": "2072659",
    "end": "2080138"
  },
  {
    "text": "the cloud pickle one to actually use to serialize your your um",
    "start": "2080139",
    "end": "2085679"
  },
  {
    "text": "uh The Operators I think we did so I think we used Cloud pickle dill and the different versions",
    "start": "2085679",
    "end": "2092800"
  },
  {
    "text": "of pickle and I believe there's one where I cannot remember which one but we used all the different types of pickles",
    "start": "2092800",
    "end": "2098200"
  },
  {
    "text": "that um I could find but unfortunately I think the issue is",
    "start": "2098200",
    "end": "2103780"
  },
  {
    "text": "yeah go ahead yeah go ahead um I think the issues is more down to the core of the some of the things I",
    "start": "2103780",
    "end": "2110500"
  },
  {
    "text": "guess I think the big part of it is a lot of the serialization will have to be on your own um and with some of these like Dill it",
    "start": "2110500",
    "end": "2117400"
  },
  {
    "text": "ends up pickling too much and it could slow down the system quite a bit uh because it will start sending these huge",
    "start": "2117400",
    "end": "2123579"
  },
  {
    "text": "files uh between the um the storage and",
    "start": "2123579",
    "end": "2129160"
  },
  {
    "text": "or the pulse or not poster the problem with the storage that Ray uses but uh",
    "start": "2129160",
    "end": "2134380"
  },
  {
    "text": "yeah with some serializers it kind of gets too big and then it ends up being too slow so most likely the route",
    "start": "2134380",
    "end": "2140680"
  },
  {
    "text": "forward will be custom serializers on our end foreign [Music]",
    "start": "2140680",
    "end": "2147119"
  },
  {
    "text": "were actually showing about the different kind of types of indexes that that you have to deal with all these",
    "start": "2147119",
    "end": "2153160"
  },
  {
    "text": "different algorithms there are four types that you actually mentioned one of them was the the one on the far right and wide front was one that's more",
    "start": "2153160",
    "end": "2160180"
  },
  {
    "text": "popular which ones are the ones that you actually are using in Melbourne so you're supporting all the four one to do",
    "start": "2160180",
    "end": "2165400"
  },
  {
    "text": "all the uh similarities so we're supporting all of them okay we're supporting all of them and the new ones",
    "start": "2165400",
    "end": "2170680"
  },
  {
    "text": "like Google scan and a few other ones that are coming in um yeah there's a lot of work going on into",
    "start": "2170680",
    "end": "2176260"
  },
  {
    "text": "this and then there's combinations and quantization of these different algorithms kind of speed them up",
    "start": "2176260",
    "end": "2182980"
  },
  {
    "text": "unfortunately sometimes at the loss of accuracy and recall but there's a lot of mixing and matching",
    "start": "2182980",
    "end": "2188200"
  },
  {
    "text": "between the two and kind of getting it all working out but pretty much all of them um and there's a new one also disk and",
    "start": "2188200",
    "end": "2195520"
  },
  {
    "text": "which is like disk based big issues with these indexes is that they can get pretty big",
    "start": "2195520",
    "end": "2200740"
  },
  {
    "text": "um so for a lot of people like let's say you have 400 million vectors using H and SW I",
    "start": "2200740",
    "end": "2208119"
  },
  {
    "text": "think you're already going to be in the Thousand range gigabytes of RAM needed",
    "start": "2208119",
    "end": "2213460"
  },
  {
    "text": "um for kind of executing these queries so this game is a good one because we're",
    "start": "2213460",
    "end": "2218859"
  },
  {
    "text": "kind of throwing that all into the disk and keeping the memory usage as low as possible",
    "start": "2218859",
    "end": "2224200"
  },
  {
    "text": "so in in terms of um um the the operators which are wrapped",
    "start": "2224200",
    "end": "2229660"
  },
  {
    "text": "around the actors right so you have an actor which is actually sort of a wrapper around mule predator and once",
    "start": "2229660",
    "end": "2235300"
  },
  {
    "text": "once the query comes in can you can can you give an example of what what a two two operator would look like in other",
    "start": "2235300",
    "end": "2241780"
  },
  {
    "text": "words you know you have an operator but what does it do internally so an operator mainly internally it's",
    "start": "2241780",
    "end": "2248140"
  },
  {
    "text": "kind of a class it's a class pretty much exactly it's a class and the class has a",
    "start": "2248140",
    "end": "2253540"
  },
  {
    "text": "call function and then it function and pretty much what's going on is in the in",
    "start": "2253540",
    "end": "2258820"
  },
  {
    "text": "it you're putting all your stateful stuff that you need kind of stored and the call is what you're executing on and",
    "start": "2258820",
    "end": "2265300"
  },
  {
    "text": "the call has the inputs and outputs um our engine internally kind of takes over the inputs and outputs are",
    "start": "2265300",
    "end": "2271540"
  },
  {
    "text": "and kind of undefined its changes during runtime and our engine deals with grabbing the correct values from the dag",
    "start": "2271540",
    "end": "2277960"
  },
  {
    "text": "pretty much to input into the operator and pulling out the data um so that's",
    "start": "2277960",
    "end": "2283839"
  },
  {
    "text": "what's pretty much the the engine kind of stays local to the the script that's running the code but",
    "start": "2283839",
    "end": "2290560"
  },
  {
    "text": "this operator class gets sent over and we just sent over the input and grab the",
    "start": "2290560",
    "end": "2296320"
  },
  {
    "text": "output okay so the operator is like if I could call it's like an SQL",
    "start": "2296320",
    "end": "2301839"
  },
  {
    "text": "function that you're actually executing on the uh on the Midwest and then you're getting the output back yeah is that is",
    "start": "2301839",
    "end": "2308020"
  },
  {
    "text": "that fair to say okay so yeah you you did mention you alluded the fact that you decided to use actors",
    "start": "2308020",
    "end": "2313660"
  },
  {
    "text": "rather than tasks because actors are stateless and I mean tasks are stateless What actors are a stateful what sort of",
    "start": "2313660",
    "end": "2321160"
  },
  {
    "text": "State you're actually maintaining in each and every actor Sony reactor a lot of the ones is with",
    "start": "2321160",
    "end": "2327579"
  },
  {
    "text": "training of neural Nets so you keep your weights and your actual neural net on the when the state and metrics so let's",
    "start": "2327579",
    "end": "2334960"
  },
  {
    "text": "say uh you're logging how the accuracy you recall of everything that's",
    "start": "2334960",
    "end": "2341140"
  },
  {
    "text": "going on you kind of need to keep that there to calculate the final values there's also um",
    "start": "2341140",
    "end": "2347440"
  },
  {
    "text": "the big one was like let's say you're normalizing or averaging out over your data you're doing caramelizations you do",
    "start": "2347440",
    "end": "2352540"
  },
  {
    "text": "need to count and keep State um and being that this is kind of machine learning oriented a lot of those",
    "start": "2352540",
    "end": "2358599"
  },
  {
    "text": "uh operations that you're doing need to kind of keep State there are a few where you don't need to and I do believe we",
    "start": "2358599",
    "end": "2365020"
  },
  {
    "text": "also have tasks utilized for the ones that we don't need to like um kind of let's say you're doing like",
    "start": "2365020",
    "end": "2371140"
  },
  {
    "text": "maps of additions or subtractions or something like that where it's not really needed where you don't need like a full operator you just kind of have",
    "start": "2371140",
    "end": "2376540"
  },
  {
    "text": "this smaller subset but mainly it was a lot safer to go actor based even if some",
    "start": "2376540",
    "end": "2382839"
  },
  {
    "text": "don't require a state because it was so easy to implement it um and so quick with the reactors to do",
    "start": "2382839",
    "end": "2389380"
  },
  {
    "text": "it and this there wasn't no loss really in speed up so",
    "start": "2389380",
    "end": "2394619"
  },
  {
    "text": "right in terms of in terms of the the pool of actors",
    "start": "2396060",
    "end": "2401440"
  },
  {
    "text": "you're actually using uh how many actors do you actually have and do they actually each have a copy of the model or you actually use that particular",
    "start": "2401440",
    "end": "2408280"
  },
  {
    "text": "model and put it in the the object store and then let let it let it be sort of",
    "start": "2408280",
    "end": "2414400"
  },
  {
    "text": "distributed across all the actors so for now um the amount that we choose",
    "start": "2414400",
    "end": "2419920"
  },
  {
    "text": "is inside parallel you can kind of set how many workers you want um and that's pretty much how many actors get replicated and for now we are",
    "start": "2419920",
    "end": "2426760"
  },
  {
    "text": "kind of using every actor has its own model",
    "start": "2426760",
    "end": "2432040"
  },
  {
    "text": "um there is a slight move to kind of moving away from that because it ends up taking a lot of space",
    "start": "2432040",
    "end": "2437200"
  },
  {
    "text": "um and with training it kind of gets difficult but for now we decided to kind of keep it to kind of",
    "start": "2437200",
    "end": "2443260"
  },
  {
    "text": "keep it running well and kind of get it working um but in the future I think the move would",
    "start": "2443260",
    "end": "2449140"
  },
  {
    "text": "be to kind of store in the object store and then have each one kind of grab it but yeah",
    "start": "2449140",
    "end": "2455339"
  },
  {
    "text": "and last question um from from Rajiv I think he noticed",
    "start": "2455339",
    "end": "2462520"
  },
  {
    "text": "something in your code is that notice your Imports were within the methods is that a code style preference or is it a",
    "start": "2462520",
    "end": "2468700"
  },
  {
    "text": "technical necessity I believe it was a technical necessity in um",
    "start": "2468700",
    "end": "2475540"
  },
  {
    "text": "I believe it is it in yeah I'm assuming it's this one with the from tohi yeah",
    "start": "2475540",
    "end": "2482079"
  },
  {
    "text": "um yeah we did it here I think it's I believe it's necessary because um",
    "start": "2482079",
    "end": "2487420"
  },
  {
    "text": "we this is what's going to be run on the actor uh and on the separate machine so we're sending tohi over as a package",
    "start": "2487420",
    "end": "2494920"
  },
  {
    "text": "um in the rate in it to kind of have the cluster have access to that package so um I was importing within the class just",
    "start": "2494920",
    "end": "2502119"
  },
  {
    "text": "in case um I actually believe you do need to I'm not sure if it's just in case for this",
    "start": "2502119",
    "end": "2507220"
  },
  {
    "text": "one but importing it there to have what we need because we're treating every single",
    "start": "2507220",
    "end": "2513040"
  },
  {
    "text": "actress sort of its own little Towhee pipeline so we want to have that imported there and to have access to it",
    "start": "2513040",
    "end": "2520900"
  },
  {
    "text": "and we don't actually need these Imports in the rest of the code it's specifically within the actor",
    "start": "2520900",
    "end": "2528099"
  },
  {
    "text": "so I'm curious to know I mean are you what version of Ray are you currently using with uh with with Toby and with",
    "start": "2528099",
    "end": "2534880"
  },
  {
    "text": "with middle list is it 2.0 2.0 because you have upgraded 2.0 are you have you guys looked into",
    "start": "2534880",
    "end": "2541480"
  },
  {
    "text": "how how gray Air can actually help you with the um with the other aspects of some issues that you actually faced or",
    "start": "2541480",
    "end": "2548859"
  },
  {
    "text": "you're still it's still um still under investigation um I was just mainly looking there were",
    "start": "2548859",
    "end": "2554740"
  },
  {
    "text": "improvements with I know with the client and all that yeah um but still in our investigation for the rest okay",
    "start": "2554740",
    "end": "2560619"
  },
  {
    "text": "brilliant I think there was a final one question that somebody asked I think it's Ed and honest is this presentation",
    "start": "2560619",
    "end": "2566920"
  },
  {
    "text": "going to be available online and uh uh Philip if you don't mind just send me the PDF file and I'll just upload it",
    "start": "2566920",
    "end": "2574359"
  },
  {
    "text": "into over shareware and we can um uh we can we can share it with the audience is that okay",
    "start": "2574359",
    "end": "2580180"
  },
  {
    "text": "yep sounds good brilliant I think with that we can just move on then thanks a lot Phillip I appreciate that thanks a",
    "start": "2580180",
    "end": "2586540"
  },
  {
    "text": "lot for Frank joining us and we can just move on to our next presentation are you",
    "start": "2586540",
    "end": "2591880"
  },
  {
    "text": "guys ready",
    "start": "2591880",
    "end": "2594180"
  },
  {
    "text": "okay so then let me take it over okay brilliant hopefully this time it'll work well second time and third time is a",
    "start": "2601180",
    "end": "2608440"
  },
  {
    "text": "charm yeah I normally have my cell phone or my iPad because if I'm on on a single",
    "start": "2608440",
    "end": "2615160"
  },
  {
    "text": "machine and I can't share my speaker notes I normally do that I see can you guys say my screen no yeah",
    "start": "2615160",
    "end": "2623500"
  },
  {
    "text": "yeah I assume it's working now oh okay",
    "start": "2623500",
    "end": "2629920"
  },
  {
    "text": "yeah so um just in case anybody watched or came to Ray Summit last time this",
    "start": "2629920",
    "end": "2635260"
  },
  {
    "text": "talk is a pretty similar talk I think the first part will be the same but later part",
    "start": "2635260",
    "end": "2640660"
  },
  {
    "text": "um since since the race Summit in August we made a huge Improvement to the observability and dashboard in general",
    "start": "2640660",
    "end": "2646300"
  },
  {
    "text": "so in the later part of we're going to more focus on the new features we developed for array 2.1 and 2.2",
    "start": "2646300",
    "end": "2653740"
  },
  {
    "text": "um so I just uh let everybody know about it um yeah so let me start so I'm sang",
    "start": "2653740",
    "end": "2660160"
  },
  {
    "text": "bin or I'm a software engineer at any scale and I'm gonna have a presentation with Ricky who's also a software",
    "start": "2660160",
    "end": "2666099"
  },
  {
    "text": "engineer at any scale um so let me have a brief introduction of ourselves uh we are both software",
    "start": "2666099",
    "end": "2672819"
  },
  {
    "text": "engineers at any scale uh we are working at the ray core team also have been developing",
    "start": "2672819",
    "end": "2678280"
  },
  {
    "text": "um a lot of features in Array core like record distributed systems and currently uh we have a huge focus on improving the",
    "start": "2678280",
    "end": "2685660"
  },
  {
    "text": "observability and rate because oh this is something a lot of users actually complain and they have a hard time",
    "start": "2685660",
    "end": "2690940"
  },
  {
    "text": "um part-time when they're using Rey yeah and also we are from any scale um just",
    "start": "2690940",
    "end": "2696220"
  },
  {
    "text": "in case people don't know any skill or it is a Creator or Brave and we are building the scalable compute for AI and",
    "start": "2696220",
    "end": "2702160"
  },
  {
    "text": "python and if you're interested in how to debug Ray applications",
    "start": "2702160",
    "end": "2707560"
  },
  {
    "text": "and if what tools are available for debugging and also watch new observability features in recent array",
    "start": "2707560",
    "end": "2714339"
  },
  {
    "text": "releases including 2.0 2.1 or the 2.2 which is gonna release or in a few weeks",
    "start": "2714339",
    "end": "2719800"
  },
  {
    "text": "then this is the top you're looking for let me start from the outline so we're",
    "start": "2719800",
    "end": "2724839"
  },
  {
    "text": "going to start from the requirements in radio observability and what kind of tools we have before 2.0 and the new",
    "start": "2724839",
    "end": "2731440"
  },
  {
    "text": "feature at 2.0 and also we're gonna have a demo that actually includes features",
    "start": "2731440",
    "end": "2736480"
  },
  {
    "text": "um for 2.1 and 2.2 and we're gonna finish the presentation with the feature roadmap let's start from the first",
    "start": "2736480",
    "end": "2742839"
  },
  {
    "text": "section um Ray provides.apis to build distributed applications and this High",
    "start": "2742839",
    "end": "2749380"
  },
  {
    "text": "style implementation detail of implementation detail of distributed systems and help users to focus on",
    "start": "2749380",
    "end": "2755980"
  },
  {
    "text": "building applications running a scale uh but how does it look in the real",
    "start": "2755980",
    "end": "2761859"
  },
  {
    "text": "world um so firstly you're going to have a head node when you actually run array and you're going to have a lot of worker",
    "start": "2761859",
    "end": "2767980"
  },
  {
    "text": "nodes and actually in the real world when you have large scale workload you're going to have like hundreds",
    "start": "2767980",
    "end": "2773079"
  },
  {
    "text": "hundred hundred of notes and this is actual um Benchmark we've",
    "start": "2773079",
    "end": "2778359"
  },
  {
    "text": "done uh very actively in the nightly so we can have uh like 100 of nodes tens of",
    "start": "2778359",
    "end": "2784060"
  },
  {
    "text": "thousands of actors and tests and we can even have millions of objects in the object store and these are all running",
    "start": "2784060",
    "end": "2790000"
  },
  {
    "text": "and stored concurrently um across the cluster",
    "start": "2790000",
    "end": "2795480"
  },
  {
    "text": "then with all this in mind what if anything is going wrong so for example",
    "start": "2795760",
    "end": "2800800"
  },
  {
    "text": "you imagine just one of vector field or some manual Vector failed and debugging",
    "start": "2800800",
    "end": "2806260"
  },
  {
    "text": "this is not trivial because there are a lot of information a lot of data and you need to actually like get into the",
    "start": "2806260",
    "end": "2812740"
  },
  {
    "text": "machine figure out why each sectors failed or without the help from the systems this kind of debugging is way",
    "start": "2812740",
    "end": "2819040"
  },
  {
    "text": "more difficult then how can we still make debugging easy in Rey or with this environment",
    "start": "2819040",
    "end": "2826900"
  },
  {
    "text": "um I think there are two all main main thing we need to focus the first thing is we should understand the workflow",
    "start": "2826900",
    "end": "2831940"
  },
  {
    "text": "when people are debugging and we should provide the tools that help people um",
    "start": "2831940",
    "end": "2837400"
  },
  {
    "text": "following the workflow so just let me just quickly go through the workflow so when you actually debug",
    "start": "2837400",
    "end": "2843460"
  },
  {
    "text": "any problems if your application fails the most important thing is to have the",
    "start": "2843460",
    "end": "2848800"
  },
  {
    "text": "visibility into your applications the monitor monitoring is very important like what what kind of things are",
    "start": "2848800",
    "end": "2854200"
  },
  {
    "text": "actually happening in the uh from the cluster and application and now if anything goes wrong the problem has to",
    "start": "2854200",
    "end": "2861700"
  },
  {
    "text": "be surface to users very clearly and then when there's a error then there",
    "start": "2861700",
    "end": "2866920"
  },
  {
    "text": "must be proper tools and data to help users to figure out how to fix the issue and then of course you need to have some",
    "start": "2866920",
    "end": "2873520"
  },
  {
    "text": "mitigation strategy on based on all these tools and error messages",
    "start": "2873520",
    "end": "2879760"
  },
  {
    "text": "on to support such workflow there must be corresponding tools for each step like for example when you monitor your",
    "start": "2879760",
    "end": "2885760"
  },
  {
    "text": "applications you can have dashboard or logs or some sort of like built-in",
    "start": "2885760",
    "end": "2890800"
  },
  {
    "text": "progress report or from the system when you want to surface the error",
    "start": "2890800",
    "end": "2896220"
  },
  {
    "text": "the system should have a clear exception model as well as the good error message",
    "start": "2896220",
    "end": "2901660"
  },
  {
    "text": "that explains all sort of failures happening in the cluster and when actually things go wrong you should be",
    "start": "2901660",
    "end": "2907660"
  },
  {
    "text": "able to debug using tools like debugger or profiler and systems like Ray we need",
    "start": "2907660",
    "end": "2914260"
  },
  {
    "text": "a debuggling profiler that should work at scale or that should work or you know distributed systems",
    "start": "2914260",
    "end": "2920920"
  },
  {
    "text": "so let's see what sort of tools are available before way 2.0 what kind of observability was available",
    "start": "2920920",
    "end": "2927880"
  },
  {
    "text": "so we are going to start from the case studies so usually there are two typical failures when you use rate the first",
    "start": "2927880",
    "end": "2934240"
  },
  {
    "text": "thing is the application failures usually failures from user code and there are of course system failures like",
    "start": "2934240",
    "end": "2939940"
  },
  {
    "text": "your application hangs on some configuration has issues there's out of memory and things like that",
    "start": "2939940",
    "end": "2946720"
  },
  {
    "text": "um previously or before way 2.0 the first case was well supported and I'm gonna go through features that help",
    "start": "2946720",
    "end": "2952540"
  },
  {
    "text": "application fail a debugging application failures so this is a simple uh 20 array",
    "start": "2952540",
    "end": "2958119"
  },
  {
    "text": "application as you can see it creates the four actors and you call into all the vectors using print test method and",
    "start": "2958119",
    "end": "2964660"
  },
  {
    "text": "then you get the reference and this is how it looks uh you're going to have a four different actors",
    "start": "2964660",
    "end": "2971140"
  },
  {
    "text": "and then when you do the local development um usually the easiest way to uh do the",
    "start": "2971140",
    "end": "2977740"
  },
  {
    "text": "monitoring is to add a log so usually what people want instead or look like this you just want to print something",
    "start": "2977740",
    "end": "2983740"
  },
  {
    "text": "and you want to actually see this log from on your script or from whatever method you have and this is",
    "start": "2983740",
    "end": "2991480"
  },
  {
    "text": "unfortunately very well supported in Array so by default all of the logs from test connectors are printed to the drive",
    "start": "2991480",
    "end": "2998079"
  },
  {
    "text": "Ray driver program which is all just python script that runs all of the code",
    "start": "2998079",
    "end": "3003980"
  },
  {
    "text": "uh for example imagine this kind of um this kind of function you just have a",
    "start": "3004260",
    "end": "3009300"
  },
  {
    "text": "print statement within your task and in your main script you are able to see actual log messages with the clean",
    "start": "3009300",
    "end": "3015839"
  },
  {
    "text": "metadata and then Rey also has a very log API to actually help you to access",
    "start": "3015839",
    "end": "3020940"
  },
  {
    "text": "logs of actor tasks workers and other system nodes so this is a simple example",
    "start": "3020940",
    "end": "3026700"
  },
  {
    "text": "um simple examples as you can see um your able to access log through the",
    "start": "3026700",
    "end": "3032819"
  },
  {
    "text": "array log API you specify the PID which which is equivalent to this task and then you're able to see the log messages",
    "start": "3032819",
    "end": "3039119"
  },
  {
    "text": "from there and then now imagine you have the error",
    "start": "3039119",
    "end": "3045240"
  },
  {
    "text": "note code like like this code for example let's say your method now has a division by zero error",
    "start": "3045240",
    "end": "3051900"
  },
  {
    "text": "um in this case the error has to be surface to users so they or whenever anything",
    "start": "3051900",
    "end": "3057119"
  },
  {
    "text": "goes wrong you can actually uh see what goes wrong and start debugging immediately",
    "start": "3057119",
    "end": "3062940"
  },
  {
    "text": "and then this is also pretty well for protein right so all the way all The Primitives in Ray like task open check",
    "start": "3062940",
    "end": "3069540"
  },
  {
    "text": "actor generates the object reference like this and then if anything goes",
    "start": "3069540",
    "end": "3075240"
  },
  {
    "text": "wrong with the generator of the object reference so in this case the print task which has a division by zero error then",
    "start": "3075240",
    "end": "3082260"
  },
  {
    "text": "the references are going to contain the exceptions and when you actually call rate.get um the exception is going to be",
    "start": "3082260",
    "end": "3087720"
  },
  {
    "text": "propagated back to users this is a pretty similar um like exception model from other asynchronous programming",
    "start": "3087720",
    "end": "3095420"
  },
  {
    "text": "um and then this is the actual um error message so error message is going to show you the metadata of your task",
    "start": "3095520",
    "end": "3103200"
  },
  {
    "text": "actually has an exception so in this case the PID what's the IP or as well as the exact error messages and also",
    "start": "3103200",
    "end": "3111119"
  },
  {
    "text": "um whenever there's any sort of system failures we also figure out exactly what kind of uh while the root cause of the",
    "start": "3111119",
    "end": "3118619"
  },
  {
    "text": "failure and send the exception back to the user with the correct metadata like this so this is the typical error when",
    "start": "3118619",
    "end": "3125220"
  },
  {
    "text": "you have the out of memory um error because the operating system sends a three kill to the worker and the",
    "start": "3125220",
    "end": "3132540"
  },
  {
    "text": "workers unexpectedly killed and this kind of messages are um reported back to the users",
    "start": "3132540",
    "end": "3139260"
  },
  {
    "text": "so once you now now you can now you know what the error is the next thing usually",
    "start": "3139260",
    "end": "3144420"
  },
  {
    "text": "people need is to debugging and when you develop Python program the typical workflow is the user debugger for",
    "start": "3144420",
    "end": "3152099"
  },
  {
    "text": "example like this you can just simply add a breakpoint and you want to or you will never you want to run the debugger",
    "start": "3152099",
    "end": "3158940"
  },
  {
    "text": "like pdb or the vs code debugger or whatever debuffer you like",
    "start": "3158940",
    "end": "3165140"
  },
  {
    "text": "so Ray has its own distributed debugger to support this case so When developing",
    "start": "3165140",
    "end": "3170280"
  },
  {
    "text": "Ray or you know many users want to use familiar debugger such as pdb oh and Ray",
    "start": "3170280",
    "end": "3176339"
  },
  {
    "text": "currently has the pdb integration to support the distributed debugger unfortunately pdb is the only or",
    "start": "3176339",
    "end": "3182160"
  },
  {
    "text": "debugger we support on but uh it's going to look like this so you",
    "start": "3182160",
    "end": "3188760"
  },
  {
    "text": "can just add a breakpoint into your um task correctors and then you just call the CLI command Ray debug and this is",
    "start": "3188760",
    "end": "3195599"
  },
  {
    "text": "going to actually bring you to this output um which shows you all of the tasks that's running that has the breakpoint",
    "start": "3195599",
    "end": "3201660"
  },
  {
    "text": "or which line the breakpoint is and you're actually able to jump into its index and use pdb to develop the issues",
    "start": "3201660",
    "end": "3208619"
  },
  {
    "text": "with the debugger the last thing is let's say your",
    "start": "3208619",
    "end": "3213960"
  },
  {
    "text": "application is slower than you expected or for example let's imagine your actors doing some busy work and returning a big",
    "start": "3213960",
    "end": "3220020"
  },
  {
    "text": "object and you figure it out one of the record is actually slow you will not know exactly why these factors slower",
    "start": "3220020",
    "end": "3225240"
  },
  {
    "text": "than other actors then how would you um how would you figure out so sometimes users want to trace this",
    "start": "3225240",
    "end": "3233160"
  },
  {
    "text": "low-level power worker operation to found the exact bottlenecks and performance and Ray supports the timeline API uh to allow users to do",
    "start": "3233160",
    "end": "3240540"
  },
  {
    "text": "this um so for example um as you can see from the right screen you can see individual worker and you",
    "start": "3240540",
    "end": "3246359"
  },
  {
    "text": "can see what individual workers actually running um so in this case the worker is actually running",
    "start": "3246359",
    "end": "3252240"
  },
  {
    "text": "the task for 85 milliseconds and you can you can see um most of time was spent on creating or",
    "start": "3252240",
    "end": "3258480"
  },
  {
    "text": "storing the outputs meaning probably the output of this actor was really large and that takes really long time to um",
    "start": "3258480",
    "end": "3264839"
  },
  {
    "text": "store in the output maybe there was spilling happening or some other issues related to the size of the object",
    "start": "3264839",
    "end": "3272339"
  },
  {
    "text": "the last thing I'd like to introduce is the visualization so Ray has a native integration to metrics or Prometheus",
    "start": "3272339",
    "end": "3279599"
  },
  {
    "text": "metrics and and you can easily or export metrics and visualize through the graphana",
    "start": "3279599",
    "end": "3285720"
  },
  {
    "text": "um and also already has a built-in dashboard packaged with the array so you can actually um",
    "start": "3285720",
    "end": "3291240"
  },
  {
    "text": "see the cluster State uh what kind of things are happening in the cluster easily or in a glance and",
    "start": "3291240",
    "end": "3297000"
  },
  {
    "text": "um diagnose any problems happening and this is actually uh the part that we made a huge Improvement array 2.0 and",
    "start": "3297000",
    "end": "3303720"
  },
  {
    "text": "2.2 and we're going to have more detailed demo in the later part of this presentation",
    "start": "3303720",
    "end": "3309059"
  },
  {
    "text": "okay so I'm gonna pass the slide to Ricky um can you take it over Ricky",
    "start": "3309059",
    "end": "3316640"
  },
  {
    "text": "yep uh could you stop sharing okay cool awesome thanks",
    "start": "3317040",
    "end": "3322700"
  },
  {
    "text": "all right cool thanks uh Stan um could you all see my screen",
    "start": "3326819",
    "end": "3332220"
  },
  {
    "text": "yes we can okay cool um so I'm gonna talk about what's new in raid 2.0",
    "start": "3332220",
    "end": "3337800"
  },
  {
    "text": "um so really in read 2.0 there are two things that we focused on one is we introduced something called State API",
    "start": "3337800",
    "end": "3344339"
  },
  {
    "text": "which allows people to query high-level race dates uh things like actor task",
    "start": "3344339",
    "end": "3350760"
  },
  {
    "text": "um and just having better rate exceptions um so I would actually focus more on the",
    "start": "3350760",
    "end": "3356700"
  },
  {
    "text": "race data API today um so the state API is really a bunch of",
    "start": "3356700",
    "end": "3362280"
  },
  {
    "text": "apis that's both available in your clis and also in Python sdks where you could",
    "start": "3362280",
    "end": "3368819"
  },
  {
    "text": "get high level information of the tasks actors in your cluster or drilling down",
    "start": "3368819",
    "end": "3374880"
  },
  {
    "text": "into more details of individual tasks object or actor so let's go through each category of the",
    "start": "3374880",
    "end": "3382800"
  },
  {
    "text": "apis together um so the first group of apis is the summary API so you could do that from",
    "start": "3382800",
    "end": "3388500"
  },
  {
    "text": "the CLI by using array summary right so they're for now there are three different categories that we currently",
    "start": "3388500",
    "end": "3394200"
  },
  {
    "text": "support uh the tasks the actors and objects for example you could use Ray summary",
    "start": "3394200",
    "end": "3402059"
  },
  {
    "text": "task uh and with the optional address for the rate address uh if you are",
    "start": "3402059",
    "end": "3407400"
  },
  {
    "text": "connecting to a red cluster remotely um so this race summary task will give",
    "start": "3407400",
    "end": "3413220"
  },
  {
    "text": "you a summary report of the tasks that currently running or have been running",
    "start": "3413220",
    "end": "3418800"
  },
  {
    "text": "in your cluster right so you see there is the uh the identifier of the function",
    "start": "3418800",
    "end": "3424380"
  },
  {
    "text": "and the class name um and so this usually is the the function name that that in your script",
    "start": "3424380",
    "end": "3430619"
  },
  {
    "text": "um and there is the state count of different different tasks and different stages right so there there are ones",
    "start": "3430619",
    "end": "3436500"
  },
  {
    "text": "that are running there are ones that are finished there's ones that are currently waiting for dependencies or for example",
    "start": "3436500",
    "end": "3442020"
  },
  {
    "text": "for node assignment Etc and there's also also uh there's also the type for different tasks so this",
    "start": "3442020",
    "end": "3448500"
  },
  {
    "text": "gives you an overview of like what different tags are currently running or being blocked you know in your cluster",
    "start": "3448500",
    "end": "3454559"
  },
  {
    "text": "uh which is usually a pretty good first step um if you are debugging something",
    "start": "3454559",
    "end": "3460440"
  },
  {
    "text": "so besides task you could also query um the summary of your actors um so similarly the actor summary gives",
    "start": "3460440",
    "end": "3467700"
  },
  {
    "text": "you a a simple count of how many actors that are in different states they are um",
    "start": "3467700",
    "end": "3473760"
  },
  {
    "text": "so the actors are identified by the class name of the actor name and also",
    "start": "3473760",
    "end": "3479040"
  },
  {
    "text": "the the number of actors in different states so you can see actor might be pending",
    "start": "3479040",
    "end": "3484800"
  },
  {
    "text": "creation alive or that and there's also the race summary objects right so race summary objects",
    "start": "3484800",
    "end": "3491520"
  },
  {
    "text": "work uh similar to Ray memory uh if people are familiar with that you know more uh the Legacy apis um",
    "start": "3491520",
    "end": "3499559"
  },
  {
    "text": "so you can see that uh I have a script which you know has a bunch of rape hoods",
    "start": "3499559",
    "end": "3505319"
  },
  {
    "text": "and Hodes and references to those objects so re-summary objects give you an overview of like what a different",
    "start": "3505319",
    "end": "3511680"
  },
  {
    "text": "objects you put into the object store um and it has things like the reference",
    "start": "3511680",
    "end": "3517380"
  },
  {
    "text": "con type whether it's a local reference like how many they are and the tasks",
    "start": "3517380",
    "end": "3522480"
  },
  {
    "text": "that have been creating or owning the uh the owner task that created those objects and what the states they are and",
    "start": "3522480",
    "end": "3529980"
  },
  {
    "text": "the no number and also the uh the approximate size of those objects",
    "start": "3529980",
    "end": "3536240"
  },
  {
    "text": "um so it also gives you the call side information to let you know where these",
    "start": "3536579",
    "end": "3541740"
  },
  {
    "text": "objects are being created you know script um so these lets you trace down if you have any excess excessive memory usage",
    "start": "3541740",
    "end": "3548640"
  },
  {
    "text": "in the object store so um there is summary API is a a bunch",
    "start": "3548640",
    "end": "3555720"
  },
  {
    "text": "of apis are pretty good for high level overview um so you sometimes also want to drill",
    "start": "3555720",
    "end": "3560940"
  },
  {
    "text": "down into individual like individual resources such as like",
    "start": "3560940",
    "end": "3566880"
  },
  {
    "text": "individual tasks individual actor so the rate list and get supports more category",
    "start": "3566880",
    "end": "3572339"
  },
  {
    "text": "of the resources so other than object has an actors it also allows you to query States from workers runtime",
    "start": "3572339",
    "end": "3579599"
  },
  {
    "text": "relevant placement groups nodes and jobs um so for example you could do really as",
    "start": "3579599",
    "end": "3585180"
  },
  {
    "text": "tasks um so the default columns that return by the radius tags include",
    "start": "3585180",
    "end": "3590880"
  },
  {
    "text": "information such as the pass ID um the name of the test of course uh the scheduling States uh the job ID that",
    "start": "3590880",
    "end": "3598140"
  },
  {
    "text": "this task is running and the node ID associated with that task if the if the",
    "start": "3598140",
    "end": "3603660"
  },
  {
    "text": "task has already been assigned a node or an actor ID if it's an actor task",
    "start": "3603660",
    "end": "3610260"
  },
  {
    "text": "and um the the list API also supports simple query right so it does allow you",
    "start": "3610260",
    "end": "3616920"
  },
  {
    "text": "to query uh with equality or neck or",
    "start": "3616920",
    "end": "3622140"
  },
  {
    "text": "without with an activity here um so you could specify things like",
    "start": "3622140",
    "end": "3629160"
  },
  {
    "text": "um I want to query all the tasks which are not finished and they are the ppo.train some some arbitrary name of",
    "start": "3629160",
    "end": "3637799"
  },
  {
    "text": "those functions um so this will allow you to really drill down into a subset of tasks that",
    "start": "3637799",
    "end": "3643980"
  },
  {
    "text": "you're interested in depending on use cases and similarly for actors",
    "start": "3643980",
    "end": "3651540"
  },
  {
    "text": "um you could also do the Raiders actors with a fader um so for actors",
    "start": "3651540",
    "end": "3657420"
  },
  {
    "text": "um the Red List Returns the actor ID the state of the actor the job ID similarly",
    "start": "3657420",
    "end": "3663960"
  },
  {
    "text": "the name and node ID and the PID where the PID is the process that runs the",
    "start": "3663960",
    "end": "3669480"
  },
  {
    "text": "actor so sometimes you are only interested in",
    "start": "3669480",
    "end": "3676440"
  },
  {
    "text": "maybe one or two actors which are behaving abnormally um so in that case you could get the ACT",
    "start": "3676440",
    "end": "3683819"
  },
  {
    "text": "ID for example by a dead actor using very list actors and then you could grab",
    "start": "3683819",
    "end": "3690720"
  },
  {
    "text": "the ID and then drill down into more details with rate guide actors so the",
    "start": "3690720",
    "end": "3696000"
  },
  {
    "text": "gads actors will return information such as the death calls right so um if this",
    "start": "3696000",
    "end": "3702420"
  },
  {
    "text": "is a bad actor why it was was killed and it also gives you information about",
    "start": "3702420",
    "end": "3708319"
  },
  {
    "text": "where the actor was originally on like the node ID and IP the process the",
    "start": "3708319",
    "end": "3713760"
  },
  {
    "text": "process ID as well um and um you will also get information",
    "start": "3713760",
    "end": "3720420"
  },
  {
    "text": "such as whether this actor is a detached actor um the uh the rename space that actor",
    "start": "3720420",
    "end": "3726960"
  },
  {
    "text": "runs in which is essentially the session name and the required resources of the actor that needs it to run and also the",
    "start": "3726960",
    "end": "3734700"
  },
  {
    "text": "serialized runtime environment or basic runtime environment um which include things like environment",
    "start": "3734700",
    "end": "3740880"
  },
  {
    "text": "variables or independencies",
    "start": "3740880",
    "end": "3745019"
  },
  {
    "text": "so um once you know you know a certain group of resources let's say actor most",
    "start": "3746099",
    "end": "3753240"
  },
  {
    "text": "of the time people also want to grab like the the logs of those information or those states to see what exactly is",
    "start": "3753240",
    "end": "3759960"
  },
  {
    "text": "happening um so the race data API also introduces three category of logging cli's comments",
    "start": "3759960",
    "end": "3766740"
  },
  {
    "text": "or python SDK comments the cluster actors workers um",
    "start": "3766740",
    "end": "3772140"
  },
  {
    "text": "so Ray locks cluster gives you will return the uh all the uh the logs that",
    "start": "3772140",
    "end": "3778559"
  },
  {
    "text": "are generated by array sessions um into different categorizations so you can see there are system logs uh for",
    "start": "3778559",
    "end": "3785400"
  },
  {
    "text": "example the GCS server um there is uh the application log which",
    "start": "3785400",
    "end": "3790980"
  },
  {
    "text": "are the worker log the worker log out and workload error and um you could use Ray logs a glob",
    "start": "3790980",
    "end": "3799859"
  },
  {
    "text": "um basically to narrow down into a specific set of logs that you're interested in",
    "start": "3799859",
    "end": "3805740"
  },
  {
    "text": "and if you're featuring requirement only returns a single log file which is",
    "start": "3805740",
    "end": "3811200"
  },
  {
    "text": "usually when you do like exam mesh right you could actually pass in the name for example worker",
    "start": "3811200",
    "end": "3816599"
  },
  {
    "text": "um Dash the worker ID the PID the out which you could copy paste from the rate",
    "start": "3816599",
    "end": "3821819"
  },
  {
    "text": "from from your array logs um comment above and then when you do a follow this will basically follow the",
    "start": "3821819",
    "end": "3829079"
  },
  {
    "text": "specific log just like tailing so um this will be pretty easy if you",
    "start": "3829079",
    "end": "3835079"
  },
  {
    "text": "want to retrieve the logs when you know a specific log file handle name",
    "start": "3835079",
    "end": "3841460"
  },
  {
    "text": "um so for more details of the state apis um you know you could check out the",
    "start": "3842280",
    "end": "3847319"
  },
  {
    "text": "documentation here and we are also actively reaching out to people to test the state API",
    "start": "3847319",
    "end": "3853859"
  },
  {
    "text": "um um semantics and to get our feedbacks for potential Improvement in the usage",
    "start": "3853859",
    "end": "3860760"
  },
  {
    "text": "all right cool so uh back to you send on the raid 2.1 and 2.2 feature demo",
    "start": "3860760",
    "end": "3868400"
  },
  {
    "text": "okay um so let's actually let me actually go",
    "start": "3870420",
    "end": "3875940"
  },
  {
    "text": "through the demo so so the demo script that we're going to show today is or just very simple Ray",
    "start": "3875940",
    "end": "3883079"
  },
  {
    "text": "error example so you're mixing up multiple different distributed workloads for example you're going to read images",
    "start": "3883079",
    "end": "3889700"
  },
  {
    "text": "and the red image is going to be um loaded into the object store and you're going to pre-process them using the",
    "start": "3889700",
    "end": "3895859"
  },
  {
    "text": "array data set API and you're going to train using rate train API and all of them uses the ray air which is basically",
    "start": "3895859",
    "end": "3902220"
  },
  {
    "text": "help you to connect them together this is more detail of the low level operation here so you're going to read",
    "start": "3902220",
    "end": "3908579"
  },
  {
    "text": "from the S3 storage and then there's you're going to read the read the data split them and run the pre-processing in",
    "start": "3908579",
    "end": "3915540"
  },
  {
    "text": "100 of workers and you're going to um send the data into 16 different train",
    "start": "3915540",
    "end": "3920640"
  },
  {
    "text": "worker or send out like a batch of data and then they're going to train the models concurrently and all of directors",
    "start": "3920640",
    "end": "3926760"
  },
  {
    "text": "are going to be an actor all of the workload this job is going to be managed by um an actor called job supervisor which",
    "start": "3926760",
    "end": "3933900"
  },
  {
    "text": "is it's like technical implementation detail well we're gonna see this sector from our demo so I just added here this",
    "start": "3933900",
    "end": "3940740"
  },
  {
    "text": "is the actual script um as you can see this is a pretty simple error workload so you just have a",
    "start": "3940740",
    "end": "3947520"
  },
  {
    "text": "data URL to S3 here um and you are going to have about 100 gigabyte of data and then you're going",
    "start": "3947520",
    "end": "3954599"
  },
  {
    "text": "to read images using the ray data set API um and then we are going to run the",
    "start": "3954599",
    "end": "3960059"
  },
  {
    "text": "preprocessor or basically using the batch mapper we're gonna apply this processing image with label function and",
    "start": "3960059",
    "end": "3967559"
  },
  {
    "text": "then we're going to create a trainer that has a num or Perth number of workers and in this case we're gonna",
    "start": "3967559",
    "end": "3973619"
  },
  {
    "text": "have 16 of workers because each of worker is going to use GPU and we're gonna use the cluster with um six or 16",
    "start": "3973619",
    "end": "3980460"
  },
  {
    "text": "gpus so this is the actual cluster um just in case people don't know this install on",
    "start": "3980460",
    "end": "3986220"
  },
  {
    "text": "any scale or the managed or Management Service so everything's already configured here so for the convenience",
    "start": "3986220",
    "end": "3993359"
  },
  {
    "text": "we're gonna use this for demo um the first thing I'm gonna do is to actually run the script so I'm gonna run",
    "start": "3993359",
    "end": "4000140"
  },
  {
    "text": "the script with the 100 gigabyte of data size so we're gonna read about 100 gigabyte there's gonna be total 16",
    "start": "4000140",
    "end": "4005780"
  },
  {
    "text": "workers and ebooks for each worker is going to be 30. and we're gonna use the raid job submit API um it's not",
    "start": "4005780",
    "end": "4012619"
  },
  {
    "text": "necessary technically because if you just run this it can also execute it but we are using it to demonstrate some of",
    "start": "4012619",
    "end": "4018680"
  },
  {
    "text": "the features related to the job so let's actually start I'm gonna run the script",
    "start": "4018680",
    "end": "4025760"
  },
  {
    "text": "and then I'm going to run the dashboard",
    "start": "4025760",
    "end": "4031119"
  },
  {
    "text": "the so the first thing I'd like to introduce is the note page so if anybody or use Ray maybe this is the most",
    "start": "4032299",
    "end": "4038839"
  },
  {
    "text": "familiar view you have so we by default have all the um node view so every node",
    "start": "4038839",
    "end": "4044599"
  },
  {
    "text": "or existing in the cluster so as you can see there are four different nodes and we are showing more detailed information",
    "start": "4044599",
    "end": "4050480"
  },
  {
    "text": "like what's the actual IP which helps you to like SSH into machine within the worst case what's the state of the um",
    "start": "4050480",
    "end": "4057619"
  },
  {
    "text": "know then what's the actual node ID this also help you to see more details just by clicking it you can see more detailed",
    "start": "4057619",
    "end": "4063740"
  },
  {
    "text": "information and there is also action you can perform so for for worker you're",
    "start": "4063740",
    "end": "4068839"
  },
  {
    "text": "able to actually see the log they exist in the worker and also a lot of um Hardware",
    "start": "4068839",
    "end": "4073880"
  },
  {
    "text": "utilization the snapshot of Hardware utilization of each node so as you can see this uses like 25 gigabyte of memory",
    "start": "4073880",
    "end": "4081140"
  },
  {
    "text": "you see each of uh node has four GPU devices are currently now utilized I think because the training hasn't",
    "start": "4081140",
    "end": "4087680"
  },
  {
    "text": "started yet um so since we already have a look let me just actually uh jump into it so if",
    "start": "4087680",
    "end": "4093559"
  },
  {
    "text": "you're by clicking the log or going to the log page you're able to actually see all the logs on each node",
    "start": "4093559",
    "end": "4099980"
  },
  {
    "text": "um and you can navigate through the logs just by clicking the button and you can also search or whatever logo you're",
    "start": "4099980",
    "end": "4105440"
  },
  {
    "text": "interested so for example let's say oh this debugstate.txt help you to see an internal state of each raillet",
    "start": "4105440",
    "end": "4113179"
  },
  {
    "text": "um and you can actually search it and see the log and you can see what kind of task has been running or within uh it's",
    "start": "4113179",
    "end": "4119540"
  },
  {
    "text": "each node or like some other internal metadata so going back to the node we also",
    "start": "4119540",
    "end": "4125838"
  },
  {
    "text": "provide the information of each worker so you can see actually what kind of worker what kind of task processes are",
    "start": "4125839",
    "end": "4132920"
  },
  {
    "text": "running for each node and as you can see uh there are two actors and there are many idle I think I think this is",
    "start": "4132920",
    "end": "4138500"
  },
  {
    "text": "because it's running a test but it's like too sure if it's not dated um and it also provides the same sort of",
    "start": "4138500",
    "end": "4145219"
  },
  {
    "text": "information what's the GPU series Memories the CP usage as well as more actions so not just the log but we also",
    "start": "4145219",
    "end": "4152120"
  },
  {
    "text": "provide a stack trace and the flame graph so you can reach uses Pi spy under the hood so you can actually see the",
    "start": "4152120",
    "end": "4158060"
  },
  {
    "text": "live stack trace of each of um each of worker or you can see this worker is actually",
    "start": "4158060",
    "end": "4163400"
  },
  {
    "text": "doing nothing it's just idle to sector and also you can perform the flame graph which basically run the CPU profiling by",
    "start": "4163400",
    "end": "4171560"
  },
  {
    "text": "default for five seconds um I think there's some sort of issues now right now let's actually try a",
    "start": "4171560",
    "end": "4176838"
  },
  {
    "text": "different one but this helps you to run zip your",
    "start": "4176839",
    "end": "4182120"
  },
  {
    "text": "profiling by default for five seconds but you can also control the duration and actually see the flame graph",
    "start": "4182120",
    "end": "4187940"
  },
  {
    "text": "um flame graph or from the result it's still loading so it's actually I'll come",
    "start": "4187940",
    "end": "4194780"
  },
  {
    "text": "back a little later on the next page I'd like to introduce is the job page so as you remember we",
    "start": "4194780",
    "end": "4201860"
  },
  {
    "text": "run the job and all the job that you run is going to be available from the job page so I already ran multiple workloads",
    "start": "4201860",
    "end": "4208580"
  },
  {
    "text": "here like for example I run one eye pipeline shell or like other this workload twice before so you can see all",
    "start": "4208580",
    "end": "4215300"
  },
  {
    "text": "of them actually failed stop succeeded and this is the currently running or workload as you can see we are running",
    "start": "4215300",
    "end": "4222320"
  },
  {
    "text": "um the Piper's training and run forward three on three minutes and then the new feature is you're also",
    "start": "4222320",
    "end": "4229040"
  },
  {
    "text": "able to see the test breakdown so you can see how many tasks are actually running for this job on how many has",
    "start": "4229040",
    "end": "4235460"
  },
  {
    "text": "been um finished it and therefore the information and of course you're also able to see the log so in this case you",
    "start": "4235460",
    "end": "4241400"
  },
  {
    "text": "can see the logo of the job which is actually the same output as here but I think the flame graph is returned",
    "start": "4241400",
    "end": "4248000"
  },
  {
    "text": "I guess playing with there's nothing happening um but you can also control the duration",
    "start": "4248000",
    "end": "4253400"
  },
  {
    "text": "on an and there's also native which helps you to see the C plus plus or C stack price",
    "start": "4253400",
    "end": "4260540"
  },
  {
    "text": "if you're using like Library like tensorflow pythons this can also be very useful when you actually zip your",
    "start": "4260540",
    "end": "4266179"
  },
  {
    "text": "profile um yeah so for for the job by clicking the",
    "start": "4266179",
    "end": "4271580"
  },
  {
    "text": "top ID you can actually see even more details um even more details of your job so",
    "start": "4271580",
    "end": "4277040"
  },
  {
    "text": "along with this metadata you can actually see what kind of task actually is running or has been running so you",
    "start": "4277040",
    "end": "4282739"
  },
  {
    "text": "can see you had a lot of map block split to or split data um there are 500 of them and right now",
    "start": "4282739",
    "end": "4290000"
  },
  {
    "text": "uh you're actually running just one Ray train worker um and one is currently waiting for",
    "start": "4290000",
    "end": "4295940"
  },
  {
    "text": "scheduling and there is one train on this that's running um so the next feature I'd like",
    "start": "4295940",
    "end": "4303020"
  },
  {
    "text": "encourage is enter page so this is this already exists before but we made some all slight Improvement so you're also",
    "start": "4303020",
    "end": "4309980"
  },
  {
    "text": "able to perform actions um like the workers and we also added",
    "start": "4309980",
    "end": "4315199"
  },
  {
    "text": "more uh more useful information like what's the actual resource requirements uh why do actors why actors exactly uh",
    "start": "4315199",
    "end": "4323960"
  },
  {
    "text": "what's the debt like the exit detail of each sector so for example you can see this uh jobs supervisor actor which is",
    "start": "4323960",
    "end": "4330560"
  },
  {
    "text": "managing a great job it basically is dead because it's called ex detector",
    "start": "4330560",
    "end": "4335900"
  },
  {
    "text": "which basically means um it has the graceful exit so the last feature I'd like to",
    "start": "4335900",
    "end": "4341960"
  },
  {
    "text": "introduce is Ray metrics uh so this is the feature we spend or invested a lot of time on 2.1 rate 2.0 and rate 2.2 so",
    "start": "4341960",
    "end": "4349520"
  },
  {
    "text": "Ray has a native integration to Prometheus and all the metrics are automatically",
    "start": "4349520",
    "end": "4355820"
  },
  {
    "text": "um exported to The Primitives if you configure it in open source Ray you are",
    "start": "4355820",
    "end": "4360980"
  },
  {
    "text": "supposed to set up Primitives and grafana on any scale or this is managed service everything is",
    "start": "4360980",
    "end": "4367400"
  },
  {
    "text": "already there by default but when you actually all set up you should set it up on Primitives and graph under running",
    "start": "4367400",
    "end": "4372679"
  },
  {
    "text": "along with your very head note um and this has actually there's the",
    "start": "4372679",
    "end": "4378440"
  },
  {
    "text": "graph Anna backing behind but every information also available in on this metrics page and in the future we're",
    "start": "4378440",
    "end": "4384260"
  },
  {
    "text": "gonna also have this uh graph actually I'll spread out into like different tabs so you can actually see them with other",
    "start": "4384260",
    "end": "4390199"
  },
  {
    "text": "metadata um so let me actually go through some of metrics so for example you can actually",
    "start": "4390199",
    "end": "4396560"
  },
  {
    "text": "see the task State and you see there's 257 tests that are running or I think this is the um the mat block split and",
    "start": "4396560",
    "end": "4404120"
  },
  {
    "text": "then right now you can see there's only on small number of tests running I think we are running the training right now",
    "start": "4404120",
    "end": "4409640"
  },
  {
    "text": "and we also have a breakdown by name so you can actually see um this rate training worker that",
    "start": "4409640",
    "end": "4415460"
  },
  {
    "text": "execute which is running the train Loop basically is running or similar you know in the same way we also have this actor",
    "start": "4415460",
    "end": "4422179"
  },
  {
    "text": "state so you can see there are seven connectors uh currently running tasks and there's one actor that's doing",
    "start": "4422179",
    "end": "4427580"
  },
  {
    "text": "nothing and you can also see breakdown by name so I think the job supervisor",
    "start": "4427580",
    "end": "4432980"
  },
  {
    "text": "probably actually maybe stat sector or Trent or with parameter locals inner",
    "start": "4432980",
    "end": "4438620"
  },
  {
    "text": "maybe they're doing no job right now that's why um this stuff alive and not running a task",
    "start": "4438620",
    "end": "4444440"
  },
  {
    "text": "other than this logical information we also shows The Logical resource",
    "start": "4444440",
    "end": "4449480"
  },
  {
    "text": "allocation so if you use Ray you specify non-cp or num gpus or whenever you use",
    "start": "4449480",
    "end": "4455659"
  },
  {
    "text": "whenever you start a test correctors when you are specifying then you allocate The Logical CPU and The Logical",
    "start": "4455659",
    "end": "4462980"
  },
  {
    "text": "CPU and logical GPU you're able to see um directly running here so as when we are",
    "start": "4462980",
    "end": "4469400"
  },
  {
    "text": "doing data processing we all run a lot of map block split which uses one CPU and right now you can see all of um the",
    "start": "4469400",
    "end": "4476780"
  },
  {
    "text": "workers are currently running and using one GPU so you can see logical GPU allocation is like fully utilized and",
    "start": "4476780",
    "end": "4483199"
  },
  {
    "text": "there are other useful information like Object Store memory it shows um how many memory is actually in shared memory or",
    "start": "4483199",
    "end": "4489679"
  },
  {
    "text": "how many memories in worker Heap on how many memories has been spilled and also placement group information so all the",
    "start": "4489679",
    "end": "4496400"
  },
  {
    "text": "array training use placement groups so you can see there's one place number available here and of course you can get the same sort",
    "start": "4496400",
    "end": "4502400"
  },
  {
    "text": "of data through the state API as well so if you'd array list placement group",
    "start": "4502400",
    "end": "4509020"
  },
  {
    "text": "or you can say sorry my typo you can actually say placement group is running",
    "start": "4511460",
    "end": "4517219"
  },
  {
    "text": "on those personal groups running in this cluster right there are like one removed",
    "start": "4517219",
    "end": "4523159"
  },
  {
    "text": "one created so I think this is our equivalent Place one group as well on in this graph",
    "start": "4523159",
    "end": "4529340"
  },
  {
    "text": "um and other than that we also provide the hardware utilization so you can say",
    "start": "4529340",
    "end": "4534800"
  },
  {
    "text": "The Logical CPU but you can also see the physical Securities and from here you can actually see",
    "start": "4534800",
    "end": "4540620"
  },
  {
    "text": "um your CPL was not fully utilized maybe this means you can specify it on secure",
    "start": "4540620",
    "end": "4546020"
  },
  {
    "text": "like 0.5 instead of one and in the same way you can um see the GPU utilization and you can say GPU utilizer GPU",
    "start": "4546020",
    "end": "4553280"
  },
  {
    "text": "utilization is pretty accurate and it's fully utilized and we also provide information like disk usage which helps",
    "start": "4553280",
    "end": "4559699"
  },
  {
    "text": "you to um see the like spilling related information so if your data is really large and a lot of objectives built into",
    "start": "4559699",
    "end": "4565760"
  },
  {
    "text": "disk you can see um if they're slow or fast from these metrics and also the",
    "start": "4565760",
    "end": "4571040"
  },
  {
    "text": "memory usage which helps you to figure out whenever there's out of memory or you can see what node codes out of",
    "start": "4571040",
    "end": "4576440"
  },
  {
    "text": "memory and also our component calls the out of memory so in this case you see most of memory used by rayworkers",
    "start": "4576440",
    "end": "4583280"
  },
  {
    "text": "and also other important nice information like GPU memory usage or",
    "start": "4583280",
    "end": "4588739"
  },
  {
    "text": "network which is useful to figure out um the data transfer between objects",
    "start": "4588739",
    "end": "4595699"
  },
  {
    "text": "uh and also if you actually want to modify the graph or add more data you're",
    "start": "4595699",
    "end": "4602000"
  },
  {
    "text": "actually able to just jump to the grafana and you can just build your own dashboard here as well",
    "start": "4602000",
    "end": "4608000"
  },
  {
    "text": "um all the array metrics are available with array as a namespace and you can see not just the metrics that are",
    "start": "4608000",
    "end": "4614480"
  },
  {
    "text": "available from the dashboard but also other internal all metrics that are available uh in Ray",
    "start": "4614480",
    "end": "4620900"
  },
  {
    "text": "okay and this is all about the demo today and I'm gonna pass again to Ricky oh and he's going to talk about the road",
    "start": "4620900",
    "end": "4628100"
  },
  {
    "text": "map for 2.3 2.4 and maybe the uh more feature version probably",
    "start": "4628100",
    "end": "4634900"
  },
  {
    "text": "awesome thanks Dan um yeah so let's quickly go through what",
    "start": "4635020",
    "end": "4640640"
  },
  {
    "text": "other things that we're planning to work on um that we know for sure that we're gonna work we're going to be working on",
    "start": "4640640",
    "end": "4646580"
  },
  {
    "text": "um and but also at the same time we're getting user feedbacks um so this kind",
    "start": "4646580",
    "end": "4651739"
  },
  {
    "text": "of like a planned roadmap versus like a confirmative roadmap or it's usually",
    "start": "4651739",
    "end": "4657679"
  },
  {
    "text": "like a sub setup the things that we couldn't be doing so the first thing that we",
    "start": "4657679",
    "end": "4663260"
  },
  {
    "text": "um definitely going to be doing is the state API beta so current a state API is in Alpha stage so we will be working on",
    "start": "4663260",
    "end": "4671360"
  },
  {
    "text": "adding more information as we heard from the users um",
    "start": "4671360",
    "end": "4676760"
  },
  {
    "text": "so things like the metadata or historical States information resource usage exit code or other across",
    "start": "4676760",
    "end": "4685400"
  },
  {
    "text": "different resources like how many tasks have been run on a single actor things like that so we'll be adding all those",
    "start": "4685400",
    "end": "4691340"
  },
  {
    "text": "information that are important to users of Ray and then we will also be",
    "start": "4691340",
    "end": "4697040"
  },
  {
    "text": "stabilizing the API and meaning that it will be fixing the return on the schema",
    "start": "4697040",
    "end": "4702560"
  },
  {
    "text": "and also maybe the input and options so that people could actually feel comfortable and confident in using the",
    "start": "4702560",
    "end": "4708800"
  },
  {
    "text": "state API to build their own observability tooling and lastly um like formatting options or",
    "start": "4708800",
    "end": "4715940"
  },
  {
    "text": "just in general usability improvements uh to to the apis",
    "start": "4715940",
    "end": "4722120"
  },
  {
    "text": "and another thing is of course the dashboard um so as you see from Sans demo uh the",
    "start": "4722120",
    "end": "4728420"
  },
  {
    "text": "dashboard right now is consists of multiple page pages that or tabs that kind of independent from each other so",
    "start": "4728420",
    "end": "4735620"
  },
  {
    "text": "what we're going to do is we're gonna synthesize them into a more natural workflow for the user right so you will",
    "start": "4735620",
    "end": "4742760"
  },
  {
    "text": "group things together in a reasonable way so people could be doing people",
    "start": "4742760",
    "end": "4747860"
  },
  {
    "text": "don't have to like jump around between different pages and we're also doing like revamping of",
    "start": "4747860",
    "end": "4753500"
  },
  {
    "text": "the UI so that it makes more sense um for for most of the usages",
    "start": "4753500",
    "end": "4759860"
  },
  {
    "text": "um and um one particular things that we're gonna also be adding onto the",
    "start": "4759860",
    "end": "4765920"
  },
  {
    "text": "dashboard other than the the usability Improvement on High level is the the test drill down",
    "start": "4765920",
    "end": "4771800"
  },
  {
    "text": "um so we will be adding things like the timeline uh of or um timeline of the other tasks that you",
    "start": "4771800",
    "end": "4778159"
  },
  {
    "text": "could see similarly with all the trading stuff like what tasks you have been running at what certain time um so this",
    "start": "4778159",
    "end": "4784699"
  },
  {
    "text": "this kind of visualization um that you could get from the dashboard um like out of the box",
    "start": "4784699",
    "end": "4792080"
  },
  {
    "text": "um you could also drill down into a tree structure of the past um so if you your your tasks on a couple",
    "start": "4792080",
    "end": "4799340"
  },
  {
    "text": "of other tasks you can see like What's the progress so far in your job uh as as",
    "start": "4799340",
    "end": "4804739"
  },
  {
    "text": "it Branch out to the leave task so more fancy uh visualization",
    "start": "4804739",
    "end": "4811760"
  },
  {
    "text": "um into like things like attack Etc um for people to actually track the progression",
    "start": "4811760",
    "end": "4818679"
  },
  {
    "text": "um so other than a task um some other visualization that we plan to add are things like the object",
    "start": "4819020",
    "end": "4825679"
  },
  {
    "text": "transfer between different different nodes and also like the uh different size",
    "start": "4825679",
    "end": "4831440"
  },
  {
    "text": "buckets of different objects um so those are those are also useful high level information for users who",
    "start": "4831440",
    "end": "4838100"
  },
  {
    "text": "want to keep track of their Object Store usage yeah so this is definitely not the end",
    "start": "4838100",
    "end": "4844460"
  },
  {
    "text": "of uh or everything of the roadmap um we actively look for feedback from",
    "start": "4844460",
    "end": "4849980"
  },
  {
    "text": "the users because the success of this obvious ability project really depends on the user's input and feedbacks so if",
    "start": "4849980",
    "end": "4858020"
  },
  {
    "text": "you have not please join the slack Channel and also let us know what you think of that we should be working on",
    "start": "4858020",
    "end": "4865820"
  },
  {
    "text": "so this is the end of the talk um yeah we are happy to answer any questions",
    "start": "4865820",
    "end": "4871580"
  },
  {
    "text": "thank you Ricky and Sunbeam I think this was really an amazing amount of information that we actually have",
    "start": "4871580",
    "end": "4878260"
  },
  {
    "text": "Unleashed after 2.0 and 2.1 the amount of data the amount of information the amount of where you can actually Dice",
    "start": "4878260",
    "end": "4884960"
  },
  {
    "text": "and slice and look at the different lenses of what's actually happening behind you know behind the scenes is is",
    "start": "4884960",
    "end": "4890600"
  },
  {
    "text": "quite Illuminating in any envelopes engineer is actually working on distributed application would just love",
    "start": "4890600",
    "end": "4897080"
  },
  {
    "text": "this amount of visibility into the things happening behind the scenes so I think this is wonderful and we want you",
    "start": "4897080",
    "end": "4903620"
  },
  {
    "text": "to to have a look at it and give us feedback as Ricky mentioned a couple of things Ricky that that popped into my",
    "start": "4903620",
    "end": "4910280"
  },
  {
    "text": "mind when you were actually going through the state API I'm not sure if you had mentioned it or or was it something that I just uh took it for",
    "start": "4910280",
    "end": "4917300"
  },
  {
    "text": "granted what's the best practice when people are executing the state API would",
    "start": "4917300",
    "end": "4922520"
  },
  {
    "text": "you recommend they do it on the head node on the cluster or they do it on the",
    "start": "4922520",
    "end": "4928580"
  },
  {
    "text": "laptop and have have we connected to the Head note what do you what do you recommend what are the best practices",
    "start": "4928580",
    "end": "4935600"
  },
  {
    "text": "oh yeah um so I think I briefly mentioned it at the first use case where um you could probably provide flag where",
    "start": "4935600",
    "end": "4942140"
  },
  {
    "text": "you could connect to a remote raid cluster just like how you do it you know like uh by providing uh",
    "start": "4942140",
    "end": "4949100"
  },
  {
    "text": "um Ray cluster address or the auto address um yeah so",
    "start": "4949100",
    "end": "4954199"
  },
  {
    "text": "um either way if you're on the handouts you have SSH access that would be awesome you know just like running that",
    "start": "4954199",
    "end": "4960560"
  },
  {
    "text": "and it will result you to the right right cluster but for you",
    "start": "4960560",
    "end": "4965600"
  },
  {
    "text": "um but if you if you are remote um like we are local on a laptop but you have a real cluster running",
    "start": "4965600",
    "end": "4972080"
  },
  {
    "text": "if you have the correct like dashboard pod forwarding stuff set up correctly you should be able to query the remote",
    "start": "4972080",
    "end": "4978739"
  },
  {
    "text": "cluster just like you're on the handouts okay good thanks a lot uh what's what is",
    "start": "4978739",
    "end": "4983900"
  },
  {
    "text": "the what is the frequency of how how often the these stats or data is",
    "start": "4983900",
    "end": "4990380"
  },
  {
    "text": "actually collected from each and every worker node and do they get is it like a pool or push mechanism to to where the",
    "start": "4990380",
    "end": "4997460"
  },
  {
    "text": "dashboard is running how does that work right so um go ahead go ahead go ahead",
    "start": "4997460",
    "end": "5005080"
  },
  {
    "text": "although it's okay you can go ahead yeah okay um yeah so for now there is a mixture of",
    "start": "5005080",
    "end": "5010540"
  },
  {
    "text": "push and poor motto um so from the very so the data sources contain things like",
    "start": "5010540",
    "end": "5016719"
  },
  {
    "text": "the GCS or workers um so for different resources uh for",
    "start": "5016719",
    "end": "5022420"
  },
  {
    "text": "example for task information we currently pull from Individual worker",
    "start": "5022420",
    "end": "5027880"
  },
  {
    "text": "um and that's kind of query on demand um and for actual information because it",
    "start": "5027880",
    "end": "5034060"
  },
  {
    "text": "is already essentializing the GCS which is probably the GCS then for objects we",
    "start": "5034060",
    "end": "5039580"
  },
  {
    "text": "also do conduct distributed putting from the individual worker um yeah so the uh the underlying",
    "start": "5039580",
    "end": "5046540"
  },
  {
    "text": "backhand for example how the past information will be provocated to the users are we're actually working on that",
    "start": "5046540",
    "end": "5052900"
  },
  {
    "text": "for optimizations um so I think in the future it will more it would be more of like a pudding model",
    "start": "5052900",
    "end": "5060040"
  },
  {
    "text": "where um most of the information will be made available in GCS and then the city",
    "start": "5060040",
    "end": "5066340"
  },
  {
    "text": "API will query the GCS oh so it's a long-term plan is actually have a central repository with GCS where",
    "start": "5066340",
    "end": "5074080"
  },
  {
    "text": "where all the workers are just going to through grpc storing in GCS and then the dashboard just pulls uh everything from",
    "start": "5074080",
    "end": "5080739"
  },
  {
    "text": "their own periodic basis correct yeah that's that's right okay um another question that probably need",
    "start": "5080739",
    "end": "5086739"
  },
  {
    "text": "in my mind you know I I'm a data scientist now for example I think this will be something either Philip or Frank",
    "start": "5086739",
    "end": "5092860"
  },
  {
    "text": "might be interested in how the operator is actually working in terms of the data and if they wanted to collect this particular statistics in how long the",
    "start": "5092860",
    "end": "5100239"
  },
  {
    "text": "operator is taking or if they're collecting any any other metrics that they want to show how can they you know how how can they",
    "start": "5100239",
    "end": "5107860"
  },
  {
    "text": "integrate with uh with the ray dashboard can is there an API that they can actually use to export those metrics so",
    "start": "5107860",
    "end": "5115480"
  },
  {
    "text": "that they can actually show the the dashboard alongside with other stuff that we are showing is there is a way uh",
    "start": "5115480",
    "end": "5123340"
  },
  {
    "text": "people can extend it can you can you shed some light on that oh so for now I think we are not",
    "start": "5123340",
    "end": "5130840"
  },
  {
    "text": "supporting any API like that like you can modify the ray dashboard so I think the best best solution right now is to",
    "start": "5130840",
    "end": "5137140"
  },
  {
    "text": "um is to actually modify the grafana and build your own dashboard and Export it and uh start the graph on together with",
    "start": "5137140",
    "end": "5144880"
  },
  {
    "text": "your own dashboard but if this is something that when users want we can also um start looking at uh providing",
    "start": "5144880",
    "end": "5151120"
  },
  {
    "text": "apis and stuff like that yeah but if they if they store the data uh independent of of Matrix is in the",
    "start": "5151120",
    "end": "5158560"
  },
  {
    "text": "grafana can we actually also pull that from the grafana and show it alongside our dashboard is that possible well they",
    "start": "5158560",
    "end": "5163840"
  },
  {
    "text": "would have to have a different dashboard so right now the code is embedded like we hard code like what kind of okay okay",
    "start": "5163840",
    "end": "5170920"
  },
  {
    "text": "kind of crap we want to display yeah so that's not possible now yeah okay great uh I have a couple of questions from the",
    "start": "5170920",
    "end": "5177520"
  },
  {
    "text": "uh from the audience a good friend of mine all the good friend of mine Chris uh he's asking what is the relationship",
    "start": "5177520",
    "end": "5184120"
  },
  {
    "text": "if any between rape placement groups in AWS is see two placement groups are they",
    "start": "5184120",
    "end": "5190300"
  },
  {
    "text": "are the different um they're completely different different",
    "start": "5190300",
    "end": "5195940"
  },
  {
    "text": "thing I think we just happen to have the same name but Ray placement group is the API to reserve the logical resources in",
    "start": "5195940",
    "end": "5202960"
  },
  {
    "text": "Ray so you're able to um like for example like things like tune or train you want to make sure all the like",
    "start": "5202960",
    "end": "5209620"
  },
  {
    "text": "training actors are started at the same time oh and then they are um you know when you run multiple trials",
    "start": "5209620",
    "end": "5216100"
  },
  {
    "text": "like turn trial one and two you don't want each trial to have like a partial allocation so placement group is used to",
    "start": "5216100",
    "end": "5222580"
  },
  {
    "text": "just make sure you have all resources like you reserve resources atomically in the cluster oh I think AWS placement",
    "start": "5222580",
    "end": "5230199"
  },
  {
    "text": "group is completely different it's basically to decide where to place on your ec2 instances like if I understand",
    "start": "5230199",
    "end": "5237340"
  },
  {
    "text": "correctly okay so when is when is the atomic city of reserving the resources",
    "start": "5237340",
    "end": "5243460"
  },
  {
    "text": "guaranteed and the other one is a preference of where you actually want something to be placed yes that's",
    "start": "5243460",
    "end": "5249100"
  },
  {
    "text": "correct yeah okay I hope I hope Chris that answers your question but if not uh we can ping uh offline uh Rajiv asks",
    "start": "5249100",
    "end": "5256360"
  },
  {
    "text": "another question about uh one of the challenges that they actually face when",
    "start": "5256360",
    "end": "5261460"
  },
  {
    "text": "they click on the dashboard is through all the log files to find out if they",
    "start": "5261460",
    "end": "5266739"
  },
  {
    "text": "have any error uh is there an easy way to grab all the logs for example lines",
    "start": "5266739",
    "end": "5272320"
  },
  {
    "text": "with some error or some custom application yoyoid or just have a single",
    "start": "5272320",
    "end": "5277600"
  },
  {
    "text": "file with all the logs that have that they can actually grab easily um I think this is this is",
    "start": "5277600",
    "end": "5283120"
  },
  {
    "text": "probably a common problem that people actually face when they have plethora log files and they're looking for a",
    "start": "5283120",
    "end": "5288219"
  },
  {
    "text": "certain certain uh pattern in the log file how they actually go about doing that",
    "start": "5288219",
    "end": "5294159"
  },
  {
    "text": "this is actually a good question so I think um yeah right now it's not possible like",
    "start": "5294159",
    "end": "5300820"
  },
  {
    "text": "you do like throw the dashboard I think probably the best is you just download all the logs and crap it on your own",
    "start": "5300820",
    "end": "5307060"
  },
  {
    "text": "from your terminal or something um that's something how actually I need skill on solve this problem is allows",
    "start": "5307060",
    "end": "5313179"
  },
  {
    "text": "you to download the whole directory oh I think within the dashboard I I agree this can be a nice picture",
    "start": "5313179",
    "end": "5320080"
  },
  {
    "text": "something we are kind of not sure now is like if I had all these features it's",
    "start": "5320080",
    "end": "5325179"
  },
  {
    "text": "like we're building another logging step like um so yeah I think it's something we",
    "start": "5325179",
    "end": "5330460"
  },
  {
    "text": "should discuss further and need more user feedback yeah yeah so it's a good it's a good feature enhancement uh down",
    "start": "5330460",
    "end": "5336280"
  },
  {
    "text": "the road if actually people actually need that I think that the search capability that both you and Ricky",
    "start": "5336280",
    "end": "5341620"
  },
  {
    "text": "provided is the globe that you can actually search uh the blog types and then once you actually have the blog",
    "start": "5341620",
    "end": "5347199"
  },
  {
    "text": "flight maybe if the blog is small enough you can just do a control F and do a search string but other than that the",
    "start": "5347199",
    "end": "5352719"
  },
  {
    "text": "specific thing that rigid is asking is is a feature which could be you know desirable which could be uh something",
    "start": "5352719",
    "end": "5358960"
  },
  {
    "text": "that that we will definitely entertain um another question the same personality is would you have an option in the CLI",
    "start": "5358960",
    "end": "5366159"
  },
  {
    "text": "command show the logs between the start time and an end time so they want an interval of",
    "start": "5366159",
    "end": "5371380"
  },
  {
    "text": "some you know some period right right now",
    "start": "5371380",
    "end": "5376540"
  },
  {
    "text": "when when we click on the load file we actually see everything you know from from the descending order to ascending",
    "start": "5376540",
    "end": "5381580"
  },
  {
    "text": "order is there is anywhere they can actually look at the interval that makes sense yeah would you like to uh for the key",
    "start": "5381580",
    "end": "5389020"
  },
  {
    "text": "or yeah sure um yeah I think this is kind of similar to like the search engine",
    "start": "5389020",
    "end": "5395260"
  },
  {
    "text": "um so um yeah I think Sans concerned that he's raised just now like",
    "start": "5395260",
    "end": "5401739"
  },
  {
    "text": "um we couldn't make it really kind of like elaborate or adding more enhancement into it um but um I think",
    "start": "5401739",
    "end": "5408219"
  },
  {
    "text": "it's more like a trade out but I totally agree um that these will be really useful features um and maybe we could pick it",
    "start": "5408219",
    "end": "5415060"
  },
  {
    "text": "up um on the roadmap going forward and also I",
    "start": "5415060",
    "end": "5420580"
  },
  {
    "text": "feel like the search the the grab search uh capability is actually super important I think that's personally how",
    "start": "5420580",
    "end": "5426940"
  },
  {
    "text": "I did most of debugging where like I want to search for keywords um yeah so maybe something that we will",
    "start": "5426940",
    "end": "5433540"
  },
  {
    "text": "definitely consider for the Locking case so I mean should we should we ask uh Rajiv to go in and file an issue in that",
    "start": "5433540",
    "end": "5439659"
  },
  {
    "text": "that way we all can actually keep track of that okay I'll I'll ask him if you're online please do do file an issue uh say",
    "start": "5439659",
    "end": "5447820"
  },
  {
    "text": "that you know this was presented to the webinar and we I mean at the Meetup and we were nice to actually have that and",
    "start": "5447820",
    "end": "5453159"
  },
  {
    "text": "we'll definitely prioritize that as we are planning our roadmap ahead",
    "start": "5453159",
    "end": "5458260"
  },
  {
    "text": "absolutely yeah that would be great okay he said I'll file an issue thank you very much thanks thanks that'll be a",
    "start": "5458260",
    "end": "5465159"
  },
  {
    "text": "good Christmas good for us uh any other questions um um let me see I don't see anything but",
    "start": "5465159",
    "end": "5472780"
  },
  {
    "text": "my goodness I mean I'm quite impressed and this is not to ingratiate myself or to to evangelize it but this is these",
    "start": "5472780",
    "end": "5480340"
  },
  {
    "text": "are the lenses that people actually look for you know the the the granularity of the amount of data and what's what this",
    "start": "5480340",
    "end": "5486580"
  },
  {
    "text": "particular task is doing and what this actor is doing and where it is in its in its stage in the grand scheme of things",
    "start": "5486580",
    "end": "5492219"
  },
  {
    "text": "especially the granularity in which um you know especially when you're doing the training and you have gpus and you",
    "start": "5492219",
    "end": "5498100"
  },
  {
    "text": "have CPUs and you actually find out where things are just quite amazing and I do like the idea of how the the second",
    "start": "5498100",
    "end": "5505000"
  },
  {
    "text": "level of the roadmap where we are giving in hierarchical views so people can",
    "start": "5505000",
    "end": "5510340"
  },
  {
    "text": "actually go down right now you know we have data all over the place which is fine but it's nice to actually have the",
    "start": "5510340",
    "end": "5515620"
  },
  {
    "text": "the the the the hierarchical view that Ricky was talking about where you know you can see the the what they call the",
    "start": "5515620",
    "end": "5523000"
  },
  {
    "text": "CLI not the the executive summary of what things happening in the world and then you can drill down into things",
    "start": "5523000",
    "end": "5528159"
  },
  {
    "text": "that's great um I don't see any other questions coming up but I do want to thank Philip",
    "start": "5528159",
    "end": "5534219"
  },
  {
    "text": "and I do want to thank Frank for you for both of you to be taking time and sharing with the ray Community how",
    "start": "5534219",
    "end": "5540159"
  },
  {
    "text": "you're guys actually using Ray especially in the space that you are dealing with large uh",
    "start": "5540159",
    "end": "5546460"
  },
  {
    "text": "um record spaces and outrage doing and Philip I really encourage if you just filed some issues that you actually run",
    "start": "5546460",
    "end": "5552460"
  },
  {
    "text": "into I we definitely want to want to look into that because anything that we can actually help",
    "start": "5552460",
    "end": "5558159"
  },
  {
    "text": "to to unblock you to use Ray at the scale that you're actually using uh we definitely more than happy to do that so",
    "start": "5558159",
    "end": "5565239"
  },
  {
    "text": "please do follow those issues and thanks a lot um Enrique and Sunbeam I know you're",
    "start": "5565239",
    "end": "5571300"
  },
  {
    "text": "you're up in uh across the Pacific Ocean early in the morning but thanks a lot for for waking",
    "start": "5571300",
    "end": "5577780"
  },
  {
    "text": "up and and doing this this Meetup so thanks a lot for you guys and um don't",
    "start": "5577780",
    "end": "5583120"
  },
  {
    "text": "forget race edit is coming up keep your eyes open for the CFB and uh we'll we'll",
    "start": "5583120",
    "end": "5589000"
  },
  {
    "text": "share these slides and we'll share the the the video with the with the Meetup so thanks a lot",
    "start": "5589000",
    "end": "5596040"
  },
  {
    "text": "all right cheers have a good one",
    "start": "5597100",
    "end": "5601380"
  }
]