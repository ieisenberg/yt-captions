[
  {
    "text": "okay I still have my talk so how long welcome to resubmit uh today I'm going",
    "start": "3480",
    "end": "9240"
  },
  {
    "text": "to introduce River flow realflow is a new library in race that gives Ray tasks with durability with",
    "start": "9240",
    "end": "16379"
  },
  {
    "text": "River flow you can construct durable efficient and the festival data Pipelines",
    "start": "16379",
    "end": "22380"
  },
  {
    "text": "realflow World average ring 32.0",
    "start": "22380",
    "end": "27800"
  },
  {
    "text": "about myself I'm currently a usable kph student I intending any scale during",
    "start": "28320",
    "end": "34559"
  },
  {
    "text": "summer for the waffle project and the realflow actually is also related to one",
    "start": "34559",
    "end": "39840"
  },
  {
    "text": "of my research projects on Workforce systems so this is outline of my talk so first",
    "start": "39840",
    "end": "47219"
  },
  {
    "text": "thing why we need variable flow so remote flow is very possible for",
    "start": "47219",
    "end": "55140"
  },
  {
    "text": "system why we need it we first need to",
    "start": "55140",
    "end": "60180"
  },
  {
    "text": "understand the pain point from Ray and the typical word for system",
    "start": "60180",
    "end": "65518"
  },
  {
    "text": "for Ray let's just look at a single example here you define a simple rate task and",
    "start": "65519",
    "end": "73080"
  },
  {
    "text": "and execute it the output of this task is stored in",
    "start": "73080",
    "end": "78840"
  },
  {
    "text": "memory that's good because it's very efficient but also because memory is volatile so",
    "start": "78840",
    "end": "85439"
  },
  {
    "text": "you have durability issues and after it means that after completion of this",
    "start": "85439",
    "end": "91140"
  },
  {
    "text": "tasks you may notice the note this memory due to in the future due to sound system",
    "start": "91140",
    "end": "97259"
  },
  {
    "text": "failure another thing about an issue about Ray task API is that it is not deteriorative",
    "start": "97259",
    "end": "106439"
  },
  {
    "text": "uh for example when you when you try to execute a task it will excuse equally",
    "start": "106439",
    "end": "113399"
  },
  {
    "text": "this this is good for some applications which needs this kind of ego ego",
    "start": "113399",
    "end": "119159"
  },
  {
    "text": "execution but it's also results some problem for example you want to check like a instead the task or some",
    "start": "119159",
    "end": "126360"
  },
  {
    "text": "Properties or make a plot before excluding the tasks that's generally very hard to do because",
    "start": "126360",
    "end": "133440"
  },
  {
    "text": "the test will execute as you trigger it",
    "start": "133440",
    "end": "138739"
  },
  {
    "text": "um and there are also some pain points for Workforce systems and the first thing is",
    "start": "139080",
    "end": "146160"
  },
  {
    "text": "that these small four sections are not born for distributed tasks so they have so they naturally have some scalable and",
    "start": "146160",
    "end": "153239"
  },
  {
    "text": "they are trying for efficient issues for example for example a typical Workforce system",
    "start": "153239",
    "end": "159480"
  },
  {
    "text": "they cannot pass some large and not objects like not to have friend or some",
    "start": "159480",
    "end": "164700"
  },
  {
    "text": "very general person objects like a python Lambda function between different waffle tasks so what you're going to do",
    "start": "164700",
    "end": "171660"
  },
  {
    "text": "is like the they Define some stress and the wrongish waffle task inside the",
    "start": "171660",
    "end": "177180"
  },
  {
    "text": "script and it's great at the end of this screen it saves something in the first",
    "start": "177180",
    "end": "183120"
  },
  {
    "text": "season and in the beginning of the next grip you try to know something from from the fast system so that's clearly some",
    "start": "183120",
    "end": "189780"
  },
  {
    "text": "information issues in data transfer and the scalability and also",
    "start": "189780",
    "end": "195379"
  },
  {
    "text": "some existing typical Workforce systems are also limited by program program Beauty in general for example",
    "start": "195379",
    "end": "202560"
  },
  {
    "text": "uh sound in some Workforce season you can only Define your your offer for your",
    "start": "202560",
    "end": "208980"
  },
  {
    "text": "application as a as a yaml file basically everything is static and fixed so this makes a camera sound if you want",
    "start": "208980",
    "end": "216420"
  },
  {
    "text": "to build something more complex and dynamic so here are the pain points on both",
    "start": "216420",
    "end": "222420"
  },
  {
    "text": "sides so we go for combines both sides and how we start by combining both three",
    "start": "222420",
    "end": "228780"
  },
  {
    "text": "and the river flow and the waffle system we can we can combine the benefits and",
    "start": "228780",
    "end": "234420"
  },
  {
    "text": "addressing the pen points from both sides so let's look at the concrete sample",
    "start": "234420",
    "end": "239599"
  },
  {
    "text": "about how it works so this example is like an instrument will will build a end-to-end ml Pipeline",
    "start": "239599",
    "end": "247799"
  },
  {
    "text": "with a story the part of the story is very simple so",
    "start": "247799",
    "end": "253140"
  },
  {
    "text": "up on the time so Engineers try to build an end-to-end ml timeline as a hackson",
    "start": "253140",
    "end": "258299"
  },
  {
    "text": "project so they want to do that quick and it's a prototype so",
    "start": "258299",
    "end": "264479"
  },
  {
    "text": "and each of these Engineers trade would investigate a different framework for the pipeline and later they will pick up",
    "start": "264479",
    "end": "271620"
  },
  {
    "text": "a single framework to build the actual pipeline so here and let's start with with some",
    "start": "271620",
    "end": "278340"
  },
  {
    "text": "waffle systems like airflow metaphor Etc and both prototypes dirty with Ray and",
    "start": "278340",
    "end": "286139"
  },
  {
    "text": "the chest gives a remote for a try so the first step of building ml python",
    "start": "286139",
    "end": "293639"
  },
  {
    "text": "because we won't discuss from something very simple so we just start with a very simple pipeline this pipeline basically",
    "start": "293639",
    "end": "301040"
  },
  {
    "text": "ReSound data from from uh from a yeah from a storage and do some",
    "start": "301040",
    "end": "306860"
  },
  {
    "text": "pre-processing and the trend with the process data and finding solve the data so the trend model",
    "start": "306860",
    "end": "313500"
  },
  {
    "text": "and first thing guys notice that actually for each stage of the pipeline",
    "start": "313500",
    "end": "319860"
  },
  {
    "text": "it requires different uh have walls and for example training unit gpus pay",
    "start": "319860",
    "end": "325139"
  },
  {
    "text": "Processing Unit CPUs and deploying mainly both devices depending on latency and this report's choice so and this",
    "start": "325139",
    "end": "333120"
  },
  {
    "text": "device could paste in different places so it placed in different machines and locations so it's actually a distributed",
    "start": "333120",
    "end": "338880"
  },
  {
    "text": "Pipeline and the issue when I try to build this workflow to implement this",
    "start": "338880",
    "end": "345840"
  },
  {
    "text": "past simple pattern with the workforce system is that most workflow seasons are not inclusive with a",
    "start": "345840",
    "end": "351199"
  },
  {
    "text": "diffuse backhand so I had to set up by herself for example I may choose some",
    "start": "351199",
    "end": "357000"
  },
  {
    "text": "very popular combination this combination is contents like airflow and",
    "start": "357000",
    "end": "362639"
  },
  {
    "text": "and celery scooter where airflow is the workflow itself and the salary is for this execution and the orchestration and",
    "start": "362639",
    "end": "370199"
  },
  {
    "text": "she needs to configure a lot of stuff like scheduler the dashboard the worker nodes Etc",
    "start": "370199",
    "end": "376740"
  },
  {
    "text": "and I also encountered some changes when I try to stitching multiple pipelines my",
    "start": "376740",
    "end": "384780"
  },
  {
    "text": "photos in this pipeline because just in for example in airflow there's no",
    "start": "384780",
    "end": "391560"
  },
  {
    "text": "mechanism for like passing large or general outbreaks between tests for example like after pre-processing you",
    "start": "391560",
    "end": "398940"
  },
  {
    "text": "you generate a huge data frame and you cannot say that I just passed out with closed communication",
    "start": "398940",
    "end": "404580"
  },
  {
    "text": "if you're obviously actually in the dark effort let's say this is his distance is",
    "start": "404580",
    "end": "409620"
  },
  {
    "text": "not good well I'm still busy with the",
    "start": "409620",
    "end": "414720"
  },
  {
    "text": "configuration with the workflow system let's say what's both going on with rain",
    "start": "414720",
    "end": "421139"
  },
  {
    "text": "so Paul usage rate because race and open source unify differently framework for",
    "start": "421139",
    "end": "426240"
  },
  {
    "text": "scalable Computing and the real so it is also capable or very good at passing",
    "start": "426240",
    "end": "432780"
  },
  {
    "text": "large and general operations inside the defrostation and do scaling Etc so it's",
    "start": "432780",
    "end": "438419"
  },
  {
    "text": "not hard to actually provide this python with Ray",
    "start": "438419",
    "end": "442819"
  },
  {
    "text": "so for example you can all you can do is Define a retest",
    "start": "443580",
    "end": "450419"
  },
  {
    "text": "and the for him for for example here is a return for pre-processing and uh we we",
    "start": "450419",
    "end": "458340"
  },
  {
    "text": "invoke this uh process returns with input data and this return will return a",
    "start": "458340",
    "end": "464400"
  },
  {
    "text": "future of the object immediately and then we can pass like the return object",
    "start": "464400",
    "end": "469919"
  },
  {
    "text": "ref the future into another task and and so on and by Chinese together you get a",
    "start": "469919",
    "end": "475740"
  },
  {
    "text": "pipeline because uh also because like something",
    "start": "475740",
    "end": "481500"
  },
  {
    "text": "like a ray air like a long time content sound scalable Integrations with special brain libraries and mL of toys and so if",
    "start": "481500",
    "end": "490199"
  },
  {
    "text": "I want to scan later with this protein was very confident because for example",
    "start": "490199",
    "end": "495479"
  },
  {
    "text": "you can possibly like instead of using a simple retest you can pre-process the",
    "start": "495479",
    "end": "501240"
  },
  {
    "text": "data with data you can train you can do some training with return and yeah",
    "start": "501240",
    "end": "507360"
  },
  {
    "text": "serving with reserve and and you can extend this paper into your scalable pipeline",
    "start": "507360",
    "end": "513860"
  },
  {
    "text": "so so what's on the chat side so just",
    "start": "515039",
    "end": "521459"
  },
  {
    "text": "learns that when you use River flow actually you don't need to change your record so so so basically it just could",
    "start": "521459",
    "end": "529260"
  },
  {
    "text": "just bring like a postcode here and uh and if I still need to do something",
    "start": "529260",
    "end": "534540"
  },
  {
    "text": "different what you need to do is basically replace the remote here with something called find when called",
    "start": "534540",
    "end": "541920"
  },
  {
    "text": "retest so so ah so why are you spying it's because when you build a python with",
    "start": "541920",
    "end": "548640"
  },
  {
    "text": "those uh restore remote we test as we said before retest will be secured here",
    "start": "548640",
    "end": "553680"
  },
  {
    "text": "eagerly and Returns the future so so if I can for so here just just",
    "start": "553680",
    "end": "559260"
  },
  {
    "text": "want to have a pipeline and the first and maybe just want to do some checking",
    "start": "559260",
    "end": "564600"
  },
  {
    "text": "and validation and Imagination before release and and the yeah and the yeah",
    "start": "564600",
    "end": "570120"
  },
  {
    "text": "and if you just run with eagle task is very hard and but if you bind them first",
    "start": "570120",
    "end": "575279"
  },
  {
    "text": "and and the queues have later you know then they will wouldn't be an issue",
    "start": "575279",
    "end": "582360"
  },
  {
    "text": "so so here like by by replace don't remember spines basically this task will",
    "start": "582360",
    "end": "587519"
  },
  {
    "text": "not be execute immediately it will be an execution so so you can actually get a structure of the pipeline you can do",
    "start": "587519",
    "end": "594120"
  },
  {
    "text": "like a company with some visualization or or you can write data Python and then you",
    "start": "594120",
    "end": "600120"
  },
  {
    "text": "secure this pipeline so for some material for this this",
    "start": "600120",
    "end": "606540"
  },
  {
    "text": "simple initial task is that when you use workflow I have some difficulties feels",
    "start": "606540",
    "end": "613440"
  },
  {
    "text": "like when you use the water system to implement this diffuse your tasks waffle is not designed for different tasks and",
    "start": "613440",
    "end": "620940"
  },
  {
    "text": "there is no also not care to how to scale that and that python in the future",
    "start": "620940",
    "end": "626940"
  },
  {
    "text": "and if you will just build the description was ready yes you you are scalable and efficient and easy to build",
    "start": "626940",
    "end": "634080"
  },
  {
    "text": "but the really task API is not the character it will be executed eagerly and and yeah it's not good for something",
    "start": "634080",
    "end": "641880"
  },
  {
    "text": "like a validation and execution before it's migration and the resolution before",
    "start": "641880",
    "end": "648480"
  },
  {
    "text": "execution and the with reveal flow you can define a word for biodical API and",
    "start": "648480",
    "end": "654839"
  },
  {
    "text": "you can and the Liverpool will be running distributed in a Distributive way by the way",
    "start": "654839",
    "end": "661620"
  },
  {
    "text": "so the second step is to yeah we have single simple pipeline initially and",
    "start": "661620",
    "end": "667800"
  },
  {
    "text": "then we want to extend this pipeline so when is this extension we are done by",
    "start": "667800",
    "end": "674640"
  },
  {
    "text": "uh adding for example adding some validation step is not for the pipelines",
    "start": "674640",
    "end": "680160"
  },
  {
    "text": "for the trend model right you how could you deploy model without validation first right so that makes the pipeline",
    "start": "680160",
    "end": "686519"
  },
  {
    "text": "more compass and you can add in more steps more more forecast like this",
    "start": "686519",
    "end": "692160"
  },
  {
    "text": "and at this stage like basically honest and both they have some they argue for",
    "start": "692160",
    "end": "699420"
  },
  {
    "text": "different stuff so so I actually I actually argues for",
    "start": "699420",
    "end": "704940"
  },
  {
    "text": "durability and the boss argues for efficiency for this this thing for example I think like the ability will be",
    "start": "704940",
    "end": "711240"
  },
  {
    "text": "issue for this campus Pipeline and above things actually efficiency will be an issue for this conference campaign uh",
    "start": "711240",
    "end": "718620"
  },
  {
    "text": "and let's see why so in in ice point if like Pius X is using a waffle system",
    "start": "718620",
    "end": "725459"
  },
  {
    "text": "if a task failed in a workflow system you only need to rerun the failed task",
    "start": "725459",
    "end": "731100"
  },
  {
    "text": "and because the output of the previous task is already checkpointed in a waffle system so so the solar test of output is",
    "start": "731100",
    "end": "739320"
  },
  {
    "text": "durable but because Ray tasks are stored in",
    "start": "739320",
    "end": "744360"
  },
  {
    "text": "memory is not durable so you you by default you don't have these candle checkpoints so",
    "start": "744360",
    "end": "751500"
  },
  {
    "text": "during running or recovering recording a python the outputs in the membrane main",
    "start": "751500",
    "end": "758160"
  },
  {
    "text": "loss and the and the Ray has to really has to recover these pretty competitive",
    "start": "758160",
    "end": "763980"
  },
  {
    "text": "test if the if the output object is lost so what's worse because you cannot",
    "start": "763980",
    "end": "770339"
  },
  {
    "text": "produce that which parts of your memory will be lost right this is some these things could have happening in random so",
    "start": "770339",
    "end": "776339"
  },
  {
    "text": "the recovery will be in this Mythic you may for example maybe all outputs of all tasks are lost you you just start from",
    "start": "776339",
    "end": "782880"
  },
  {
    "text": "the beginning or or maybe like the uh the output of training training task is",
    "start": "782880",
    "end": "789240"
  },
  {
    "text": "lost you just need to really just need to recover and rerun the trend step so so that that makes another thing like in",
    "start": "789240",
    "end": "796740"
  },
  {
    "text": "this music and but this shouldn't be a problem for for work for citizen",
    "start": "796740",
    "end": "804019"
  },
  {
    "text": "so uh some results a PS4 since uh the",
    "start": "804019",
    "end": "809160"
  },
  {
    "text": "benefits of water station is that it supports something like a dismissive recovery by trip pointing with someone",
    "start": "809160",
    "end": "815639"
  },
  {
    "text": "for systems are what is that as a python gets more complicated you could have more frequent like in this recovery and",
    "start": "815639",
    "end": "824519"
  },
  {
    "text": "this will result some yeah some unexpected effects and the total execution duration will be highly",
    "start": "824519",
    "end": "831180"
  },
  {
    "text": "unstable and the ice is also voice that if some",
    "start": "831180",
    "end": "836880"
  },
  {
    "text": "composition rate fails like for example the ray hand note or like a Samsung key",
    "start": "836880",
    "end": "842220"
  },
  {
    "text": "commonly reading refills but basically basically like we cannot record by its own because everything is running in",
    "start": "842220",
    "end": "848940"
  },
  {
    "text": "like in memory and you need to report the whole pipeline which is not the case for also not a case for the 404 system",
    "start": "848940",
    "end": "856620"
  },
  {
    "text": "because you can just resolve over season and the knowledge points and start from the three points",
    "start": "856620",
    "end": "863420"
  },
  {
    "text": "however compared to build Bob is used in Ray and the ball is actually more",
    "start": "864740",
    "end": "870839"
  },
  {
    "text": "interesting efficiency what points out that there will be more data transfer happening in a more complex pipeline",
    "start": "870839",
    "end": "878160"
  },
  {
    "text": "and more compass and distributed pipeline rights scale Compass they are most more data passing between steps so",
    "start": "878160",
    "end": "884880"
  },
  {
    "text": "they have to transfer is actually forcing the data transfer actually is an important topic for density",
    "start": "884880",
    "end": "892199"
  },
  {
    "text": "compared to a waffle system we have any optimized for efficient data transfer",
    "start": "892199",
    "end": "897540"
  },
  {
    "text": "for example already has another mechanism like a shared membrane their copy declaration different scaling which",
    "start": "897540",
    "end": "903420"
  },
  {
    "text": "will make you like a data transfer and Skilling between this tasks very",
    "start": "903420",
    "end": "908459"
  },
  {
    "text": "efficient and fast when you Survival season they don't like like this inefficient they had to",
    "start": "908459",
    "end": "914880"
  },
  {
    "text": "transfer pointing along a different story you know would be a bottleneck",
    "start": "914880",
    "end": "920519"
  },
  {
    "text": "because you only like a checkpoint write something to this will be so then you schedule a task or like or passing your",
    "start": "920519",
    "end": "927300"
  },
  {
    "text": "desk test so Network and and uh yeah so so this will be a bottleneck for an",
    "start": "927300",
    "end": "933540"
  },
  {
    "text": "entrance season so while like ice and Bob are debating",
    "start": "933540",
    "end": "940100"
  },
  {
    "text": "uh how about workflow let's see yeah let's see how Char sings so when when",
    "start": "940100",
    "end": "947100"
  },
  {
    "text": "Charles do into rainbow flow yeah actually real folk could owe us",
    "start": "947100",
    "end": "953459"
  },
  {
    "text": "like scheduling they had transfer and the decoration which are pointing so yes",
    "start": "953459",
    "end": "959060"
  },
  {
    "text": "real flow checkpoints like a local system and we will do data transfer if",
    "start": "959060",
    "end": "964860"
  },
  {
    "text": "efficiently likely and we also actually were paralyzed and over this both trip",
    "start": "964860",
    "end": "970980"
  },
  {
    "text": "pointing and the data transfer so they are trying either their transfer or checkpoint will not be the bottoming of",
    "start": "970980",
    "end": "976680"
  },
  {
    "text": "each other you know between between this waffle tests and uh",
    "start": "976680",
    "end": "982339"
  },
  {
    "text": "besides this real Floyd could also enable something like optional pointing",
    "start": "982339",
    "end": "987779"
  },
  {
    "text": "like skating trip pointing if you find like a trip pointing is not necessary and there will be a bottom line in your system you can just skip it so so you",
    "start": "987779",
    "end": "995100"
  },
  {
    "text": "will you will run as efficient as Ray you just how you just have like a data transfer in power battery",
    "start": "995100",
    "end": "1003440"
  },
  {
    "text": "so we'll see why this will be very helpful in the next example",
    "start": "1003440",
    "end": "1008720"
  },
  {
    "text": "so this conclusion of this part we can see that by making the pipeline more more complex",
    "start": "1008720",
    "end": "1015579"
  },
  {
    "text": "typography system has some efficient data transform problems happening in the more content",
    "start": "1015579",
    "end": "1022279"
  },
  {
    "text": "pattern end to end and the uh the Obesity really become an issue in a very",
    "start": "1022279",
    "end": "1027438"
  },
  {
    "text": "controlled pattern if it gets more complicated then final could happen you",
    "start": "1027439",
    "end": "1032540"
  },
  {
    "text": "will get a higher chance of when you're having and the recovery will be very very random and which will follow with",
    "start": "1032540",
    "end": "1040819"
  },
  {
    "text": "variable you you have both your your you can be both durable make your python",
    "start": "1040819",
    "end": "1046160"
  },
  {
    "text": "both durable and efficient yeah and the the next they want to",
    "start": "1046160",
    "end": "1052580"
  },
  {
    "text": "extends for the extent they are they are like uh this their pipeline so",
    "start": "1052580",
    "end": "1058640"
  },
  {
    "text": "so well this is wherefore shows the true power so the perfect example all assumes",
    "start": "1058640",
    "end": "1063799"
  },
  {
    "text": "that data will not evolved so you have a set here they have they have they have uh they have base or storage and the",
    "start": "1063799",
    "end": "1070100"
  },
  {
    "text": "data you have a static like training pipeline however nowadays like they have situations are faster and faster it's",
    "start": "1070100",
    "end": "1077120"
  },
  {
    "text": "very safe to see that most data states in the future this makes like online",
    "start": "1077120",
    "end": "1082220"
  },
  {
    "text": "training unnecessary no not uh is that it will be just a difference the difference will be like how often you",
    "start": "1082220",
    "end": "1088520"
  },
  {
    "text": "would like to return your model with the new coming data so online training will",
    "start": "1088520",
    "end": "1093860"
  },
  {
    "text": "require both the coming new data and the song the old data so uh and retrieval",
    "start": "1093860",
    "end": "1100280"
  },
  {
    "text": "approach is to just add another data processing in this pipeline but there's one more efficient approach",
    "start": "1100280",
    "end": "1107600"
  },
  {
    "text": "here so so basically on the other side is like a pipeline rounding previously right bbs4 because it feels like because",
    "start": "1107600",
    "end": "1114740"
  },
  {
    "text": "you you may already excuse the pipeline on all data so why not just borrow some",
    "start": "1114740",
    "end": "1121940"
  },
  {
    "text": "things happen or pipeline instead of instead of running uh they are processing again",
    "start": "1121940",
    "end": "1127340"
  },
  {
    "text": "so uh this this person like us by by using",
    "start": "1127340",
    "end": "1133160"
  },
  {
    "text": "the data from the old python you skip data processing and you and you also training you are also training not from",
    "start": "1133160",
    "end": "1138860"
  },
  {
    "text": "scratch Performance training checkpoint that that's that also boasts around your training and we can actually repeat this",
    "start": "1138860",
    "end": "1146600"
  },
  {
    "text": "like for for all pythons yeah you can see your crazy like like basically this new",
    "start": "1146600",
    "end": "1153500"
  },
  {
    "text": "pattern with new data like both like those old pre-processed data and browse",
    "start": "1153500",
    "end": "1160280"
  },
  {
    "text": "the like the trend model from a previous Pipeline and the it further brought some the previous time for the purpose sound",
    "start": "1160280",
    "end": "1167360"
  },
  {
    "text": "like a trend and previous data and the model from the even older pipeline and so so this has some interesting",
    "start": "1167360",
    "end": "1173600"
  },
  {
    "text": "consequences first like durability become a must because you have now you have a very",
    "start": "1173600",
    "end": "1179419"
  },
  {
    "text": "long dependency chain and there is experience is extremely expensive to recover if something fails like",
    "start": "1179419",
    "end": "1185840"
  },
  {
    "text": "basically if something fail here and you try to recover this very long Channel you need to do a lot of runs or training",
    "start": "1185840",
    "end": "1192620"
  },
  {
    "text": "and the second sketch company become really helpful here because when we are trying to concur data from",
    "start": "1192620",
    "end": "1199520"
  },
  {
    "text": "previous data from the new common data and the old data it just can't have data",
    "start": "1199520",
    "end": "1204860"
  },
  {
    "text": "right you there's no need to checkpoint this concave data it's very simple and efficient to concise again if this death",
    "start": "1204860",
    "end": "1213020"
  },
  {
    "text": "failed and uh yeah what you can do is like a basically",
    "start": "1213020",
    "end": "1219320"
  },
  {
    "text": "specified option here like uh yeah for for detail you can look into our dock",
    "start": "1219320",
    "end": "1224539"
  },
  {
    "text": "yeah YouTube basically skills and pointing for this concave waffle task",
    "start": "1224539",
    "end": "1231320"
  },
  {
    "text": "and insults Michael assessing the test of the of the output or previous",
    "start": "1231320",
    "end": "1236780"
  },
  {
    "text": "workflow quiz actually creates a dynamic Dimension because this is because depending on how fast the node data",
    "start": "1236780",
    "end": "1244160"
  },
  {
    "text": "comes the person will fall could still be running right the new height comes very fast like like with all data at the",
    "start": "1244160",
    "end": "1250280"
  },
  {
    "text": "same time the old pipeline may still be running all the Opana already finishes or you just could add any like a status",
    "start": "1250280",
    "end": "1257720"
  },
  {
    "text": "or no status so so it's something like uh so basically you need to damage",
    "start": "1257720",
    "end": "1263120"
  },
  {
    "text": "create some sound like a demonstrate between the new pipeline for the community data and the old pipeline of",
    "start": "1263120",
    "end": "1269419"
  },
  {
    "text": "the old data so what you can do is like uh with in",
    "start": "1269419",
    "end": "1274700"
  },
  {
    "text": "our current workflow API you can you will have something like a get also async like basically you you can with",
    "start": "1274700",
    "end": "1283340"
  },
  {
    "text": "the previous waffle ID and the test name like for example uh here like uh you",
    "start": "1283340",
    "end": "1289340"
  },
  {
    "text": "want to get the training output within the model you can survive the waffle ID of a previous Pipeline and the task ID",
    "start": "1289340",
    "end": "1296360"
  },
  {
    "text": "is is the ID of the first training task and the this and if this is how you",
    "start": "1296360",
    "end": "1302299"
  },
  {
    "text": "could create a dimension between different different Workforce and",
    "start": "1302299",
    "end": "1307580"
  },
  {
    "text": "different Pipelines so here like uh we can say in this",
    "start": "1307580",
    "end": "1315020"
  },
  {
    "text": "online training task if you are working with typical of season the first thing that a lot of",
    "start": "1315020",
    "end": "1321140"
  },
  {
    "text": "them are they are not actually support something like skillshare pointing and also they cannot create something",
    "start": "1321140",
    "end": "1328880"
  },
  {
    "text": "like uh Stampy definitely say that I want to create something uh the",
    "start": "1328880",
    "end": "1334460"
  },
  {
    "text": "progressive pipeline waffle is still running or finished or this kind of stuff and the and the re that's",
    "start": "1334460",
    "end": "1341240"
  },
  {
    "text": "something The Duality is still issue for Ray and it's become more more serious here because you have even known girl",
    "start": "1341240",
    "end": "1347419"
  },
  {
    "text": "definition and not durable is around the downside and with real fast before you",
    "start": "1347419",
    "end": "1353960"
  },
  {
    "text": "can you can foreignty and",
    "start": "1353960",
    "end": "1359840"
  },
  {
    "text": "also you can build something like them you definitely between waffles and tasks",
    "start": "1359840",
    "end": "1364880"
  },
  {
    "text": "so the finally like the example is to uh if we want to explain Chinese for",
    "start": "1364880",
    "end": "1372440"
  },
  {
    "text": "real world production so in rural production it doesn't make sense to deploy your model directly after",
    "start": "1372440",
    "end": "1378919"
  },
  {
    "text": "validation for example even even you you say that white is the trend model but the the",
    "start": "1378919",
    "end": "1386780"
  },
  {
    "text": "duration of the real world a real world like a real world could be different from the hydration of the",
    "start": "1386780",
    "end": "1393380"
  },
  {
    "text": "model the data you're feeding right so so instead we can try to draw out the",
    "start": "1393380",
    "end": "1398659"
  },
  {
    "text": "model Sony to more and more users for example your your first ID was one percent as well to draw this model to",
    "start": "1398659",
    "end": "1405080"
  },
  {
    "text": "one percent users and ten percent and the 100 and during the route",
    "start": "1405080",
    "end": "1410380"
  },
  {
    "text": "if you find it has something that's wrong basically like this role model is very bad you can choose to draw back",
    "start": "1410380",
    "end": "1416600"
  },
  {
    "text": "your route and maybe using like the previous model",
    "start": "1416600",
    "end": "1422120"
  },
  {
    "text": "um so to support this kind of drawback you you need to support some kind of",
    "start": "1422120",
    "end": "1427640"
  },
  {
    "text": "diversity you just will not after the loss you will not know beforehand that",
    "start": "1427640",
    "end": "1433220"
  },
  {
    "text": "way or whether it will be success or not so you will also you also don't know whether you you will continue out or you",
    "start": "1433220",
    "end": "1440179"
  },
  {
    "text": "just will just look back after after this this like a raw process",
    "start": "1440179",
    "end": "1445820"
  },
  {
    "text": "um and uh could currently like due to some beautiful sound waffle systems like",
    "start": "1445820",
    "end": "1452419"
  },
  {
    "text": "could just Define like the waffle in your templates like yaml file and uh this kind of damage damage is limited",
    "start": "1452419",
    "end": "1460700"
  },
  {
    "text": "and so but unfortunately with but also with Ray Ray is very good actually very",
    "start": "1460700",
    "end": "1468200"
  },
  {
    "text": "good at like Implement something like this feels very very Dynamic and the face of work notes and so and and",
    "start": "1468200",
    "end": "1475820"
  },
  {
    "text": "unfortunately with River flow you can encourage this kind of dynamicity so reward flow does not only support this",
    "start": "1475820",
    "end": "1482600"
  },
  {
    "text": "damn people for tasks and even even for this and it also",
    "start": "1482600",
    "end": "1488120"
  },
  {
    "text": "guarantees the durability for this this manual programming is damage test",
    "start": "1488120",
    "end": "1493940"
  },
  {
    "text": "so here we can see the pseudo code for this throughout so what you do here is like you just",
    "start": "1493940",
    "end": "1500120"
  },
  {
    "text": "write a memory task and you tell you you have a percentage photo out you in this",
    "start": "1500120",
    "end": "1506000"
  },
  {
    "text": "test you call the polaro to yeah to make value out and uh you you then after loss",
    "start": "1506000",
    "end": "1512600"
  },
  {
    "text": "you will check like whether the whether whether Matrix is good is you say the",
    "start": "1512600",
    "end": "1518480"
  },
  {
    "text": "mesh is very bad language fair is prone to be final then you will call like a waffle you will just cycle return like a",
    "start": "1518480",
    "end": "1526100"
  },
  {
    "text": "real box basically a robot has stronger waffle this this makes this makes rainbow phone",
    "start": "1526100",
    "end": "1532340"
  },
  {
    "text": "know that okay you are done here round row back after this route and if the percentile percentage is like",
    "start": "1532340",
    "end": "1540500"
  },
  {
    "text": "over 100 it basically means that the model is pointed out then you just return this makes more phone Liverpool",
    "start": "1540500",
    "end": "1546500"
  },
  {
    "text": "know that okay you you just the workflow is terminated and else uh if you find",
    "start": "1546500",
    "end": "1552500"
  },
  {
    "text": "the rods are okay you want to further increase it out so you you uh you'll",
    "start": "1552500",
    "end": "1557960"
  },
  {
    "text": "like 10 times your throughout the percentage and uh and return that throughout your test this will tell",
    "start": "1557960",
    "end": "1564919"
  },
  {
    "text": "River flow to yeah to append a new route task after the previous text yeah",
    "start": "1564919",
    "end": "1570500"
  },
  {
    "text": "dynamically so this is kind of you how you how we are supporting damaging uh you know",
    "start": "1570500",
    "end": "1577279"
  },
  {
    "text": "Workforce season in our waffle season so here's the summary like with demo out",
    "start": "1577279",
    "end": "1584960"
  },
  {
    "text": "um if you are using a typical Workforce system it does not support something something like a damage test generation",
    "start": "1584960",
    "end": "1591140"
  },
  {
    "text": "and also it makes uh also even some I know some work for Citizens architecture",
    "start": "1591140",
    "end": "1596659"
  },
  {
    "text": "could generate somewhere with them tasks but it does not guarantee the durability of this damage you can generate your",
    "start": "1596659",
    "end": "1602539"
  },
  {
    "text": "test and the same here like a race not durable and uh that was very powerful",
    "start": "1602539",
    "end": "1608600"
  },
  {
    "text": "you can has both Dynamic and the durable workflow so here's the summary uh it's basically",
    "start": "1608600",
    "end": "1616340"
  },
  {
    "text": "the copy of the first table and then we can just arrange this a bit to say like",
    "start": "1616340",
    "end": "1622159"
  },
  {
    "text": "it actually faces basically these 10 points when it's before like for example for Waffle it's not bound for It's gotta",
    "start": "1622159",
    "end": "1629779"
  },
  {
    "text": "beated 43 tasks and uh and uh yeah and you also Limited in program BT and then",
    "start": "1629779",
    "end": "1635299"
  },
  {
    "text": "with Ray the task API is not decorative and they are not durable and this this",
    "start": "1635299",
    "end": "1640940"
  },
  {
    "text": "for this Force tasks actually this Force attempts to build this build the",
    "start": "1640940",
    "end": "1647120"
  },
  {
    "text": "pipeline and send it actually shows all yeah actually proves like this pen",
    "start": "1647120",
    "end": "1652220"
  },
  {
    "text": "points and also shows like reward for is capable of solving span points",
    "start": "1652220",
    "end": "1657980"
  },
  {
    "text": "foreign flow so",
    "start": "1657980",
    "end": "1664760"
  },
  {
    "text": "uh so wherefore is still in Alpha stage so you can try that it's very interesting and fun project I I however",
    "start": "1664760",
    "end": "1671900"
  },
  {
    "text": "I have ever done and uh yeah but but I still at a very early stage so for for",
    "start": "1671900",
    "end": "1678380"
  },
  {
    "text": "Next Step where I'm considering like trying to integrate this with real and Reserve because for example with real",
    "start": "1678380",
    "end": "1686840"
  },
  {
    "text": "you can you can guarantee some durable training like at scale and the result you can guarantee something like a high",
    "start": "1686840",
    "end": "1693380"
  },
  {
    "text": "high World Beauty serving and uh we we will try to continue trying",
    "start": "1693380",
    "end": "1699559"
  },
  {
    "text": "to integration integrate with third party libraries for example we will",
    "start": "1699559",
    "end": "1705039"
  },
  {
    "text": "integrate with tuition notebook by making like two books like like a",
    "start": "1705039",
    "end": "1710360"
  },
  {
    "text": "durable that's very interesting thinking like if maybe some people are playing with like a collab like Google collab",
    "start": "1710360",
    "end": "1716600"
  },
  {
    "text": "and uh yeah if your car is like it's turned off or something happens you can",
    "start": "1716600",
    "end": "1722600"
  },
  {
    "text": "still running from from your checkpoint and we we also uh try to combine",
    "start": "1722600",
    "end": "1728419"
  },
  {
    "text": "integrate with the salary and then we sound we sound new projects like uh Nina",
    "start": "1728419",
    "end": "1735500"
  },
  {
    "text": "Pi Etc and we will account for some future",
    "start": "1735500",
    "end": "1741679"
  },
  {
    "text": "requests and the collaboration in like Ricky hub so and lastly if you want to show some",
    "start": "1741679",
    "end": "1749779"
  },
  {
    "text": "real use cases because I just feel like uh basically something uh try to protect something right you",
    "start": "1749779",
    "end": "1757340"
  },
  {
    "text": "you can say there's a IBM Summit talk tomorrow it's Wednesday and at 2 45 pm",
    "start": "1757340",
    "end": "1765559"
  },
  {
    "text": "so you can also scan this like QR code this is you can say Highview Builder",
    "start": "1765559",
    "end": "1771140"
  },
  {
    "text": "unified pattern to invite micro multitask language models with River flow",
    "start": "1771140",
    "end": "1777320"
  },
  {
    "text": "uh so funny thank you for yeah finessing my talk and uh you can",
    "start": "1777320",
    "end": "1783860"
  },
  {
    "text": "contact me with my email and you can scan this QR code is point to the our little small for dogs",
    "start": "1783860",
    "end": "1790520"
  },
  {
    "text": "and welcome for trying realflow and the yeah maybe you can also have some some",
    "start": "1790520",
    "end": "1797059"
  },
  {
    "text": "questions it's q a [Applause]",
    "start": "1797059",
    "end": "1807299"
  },
  {
    "text": "yeah thank you great presentation and I have a question about you talk about efficiency and performance",
    "start": "1813559",
    "end": "1819620"
  },
  {
    "text": "so do you have done benchmarks against like other systems like airflow and so",
    "start": "1819620",
    "end": "1825980"
  },
  {
    "text": "on and my second question is about the collaboration so you talk about like linear Pi or what",
    "start": "1825980",
    "end": "1833000"
  },
  {
    "text": "kind of integration are you looking for oh yeah so the first thing that yeah I did already",
    "start": "1833000",
    "end": "1839659"
  },
  {
    "text": "down some Benchmark here like with some with some mL of cycle example for like",
    "start": "1839659",
    "end": "1846080"
  },
  {
    "text": "for example like from Azure like that's actually like MX mlc sample with some",
    "start": "1846080",
    "end": "1851779"
  },
  {
    "text": "waffle stations and here we did have the advantage because I could",
    "start": "1851779",
    "end": "1857600"
  },
  {
    "text": "I've already shown like uh on the hair Cycles will fall is based on Ray so",
    "start": "1857600",
    "end": "1863480"
  },
  {
    "text": "sorry already provides some like efficient data transfer that that's that's another variable for something",
    "start": "1863480",
    "end": "1868760"
  },
  {
    "text": "could have for example uh the using the Orange is a pipeline when they like",
    "start": "1868760",
    "end": "1874640"
  },
  {
    "text": "prefers the data set what they have to do is they basically how to dump like the output to S3 storage and something",
    "start": "1874640",
    "end": "1881840"
  },
  {
    "text": "because every every stage is running with the script and and you and basically without half of a different",
    "start": "1881840",
    "end": "1888559"
  },
  {
    "text": "system like Ray is not so simple to like passing data between different tasks",
    "start": "1888559",
    "end": "1895039"
  },
  {
    "text": "like in a seamless way uh so so like uh we haven't found it because of like more",
    "start": "1895039",
    "end": "1901580"
  },
  {
    "text": "efficient data transfer and and sometimes also because of like uh because of damage City because you can",
    "start": "1901580",
    "end": "1908120"
  },
  {
    "text": "see like the damage is actually integrated inside our uh our system",
    "start": "1908120",
    "end": "1913539"
  },
  {
    "text": "we have like something called photo confusion basically you can return like a waffle test inside of a test to",
    "start": "1913539",
    "end": "1921500"
  },
  {
    "text": "generate some generate um to append something available for that stamp unit",
    "start": "1921500",
    "end": "1926659"
  },
  {
    "text": "with some other workflow systems you know like for example statue you have to",
    "start": "1926659",
    "end": "1932419"
  },
  {
    "text": "basically generate like write a Python's scale file in in your in your file",
    "start": "1932419",
    "end": "1937460"
  },
  {
    "text": "system and and this this actually has also makes this sound test inefficient",
    "start": "1937460",
    "end": "1942980"
  },
  {
    "text": "yeah and by the intuition with Nina Pai um is trying to uh is is",
    "start": "1942980",
    "end": "1950200"
  },
  {
    "text": "great like a great project trying to bring like a princess there are",
    "start": "1950200",
    "end": "1955940"
  },
  {
    "text": "scientists when working with with uh with some children book making that you put in turning into a production Pipeline",
    "start": "1955940",
    "end": "1963559"
  },
  {
    "text": "and it was very workflow could have here is like a basically you can for example",
    "start": "1963559",
    "end": "1968779"
  },
  {
    "text": "nail pack could destroy this Pipeline with River flow so so this waffle can be",
    "start": "1968779",
    "end": "1973820"
  },
  {
    "text": "running like a distribution distribution and and with and the durable with River",
    "start": "1973820",
    "end": "1979760"
  },
  {
    "text": "flow and uh yeah that that's something that that's also also it can be enhanced",
    "start": "1979760",
    "end": "1986419"
  },
  {
    "text": "by something like later for example with 3L and the return and the Returns on this discount Library so that's what",
    "start": "1986419",
    "end": "1992539"
  },
  {
    "text": "makes like a you know pay both both more efficient and scalable",
    "start": "1992539",
    "end": "1998679"
  },
  {
    "text": "oh hey can you hear me okay is it possible",
    "start": "2000460",
    "end": "2005500"
  },
  {
    "text": "to register array workflows and then invoke them through an API call and",
    "start": "2005500",
    "end": "2011019"
  },
  {
    "text": "maybe something like an airflow task so I have like an airflow job it needs to run on all these different",
    "start": "2011019",
    "end": "2018159"
  },
  {
    "text": "computers and then the next step would be pass the results to array workflow",
    "start": "2018159",
    "end": "2023440"
  },
  {
    "text": "yeah so well something very good about real fully cycle basically like when you",
    "start": "2023440",
    "end": "2029679"
  },
  {
    "text": "will fall you just change something like from from like a return remote to binder if you build a Nissan deal maybe the",
    "start": "2029679",
    "end": "2036220"
  },
  {
    "text": "result is actually using the read IPI so it's basically everything you can do with with Ray is also you can also deal",
    "start": "2036220",
    "end": "2041919"
  },
  {
    "text": "with with realflow for example like in your case I can imagine that you can like with radio can just just uh",
    "start": "2041919",
    "end": "2048760"
  },
  {
    "text": "Corridor in this and maybe like earphone like a step you can effort",
    "start": "2048760",
    "end": "2054820"
  },
  {
    "text": "test you can like run a remote test so you can also do similar things with realflow and besides that you can just",
    "start": "2054820",
    "end": "2061658"
  },
  {
    "text": "also do something in Reverse I actually for you where you are able to run some great tasks like normal for Terry test",
    "start": "2061659",
    "end": "2068919"
  },
  {
    "text": "and the will automatically pointing this returns like when this we're returning this return over force a formula for",
    "start": "2068919",
    "end": "2076240"
  },
  {
    "text": "step or you are passing summary test Theory like a reward for step",
    "start": "2076240",
    "end": "2081580"
  },
  {
    "text": "so so we already have some integration with like yeah with x-ray yeah",
    "start": "2081580",
    "end": "2088060"
  },
  {
    "text": "we'll take one more question",
    "start": "2088060",
    "end": "2091740"
  },
  {
    "text": "um so one thing I was curious about So within each of these tasks in the workflow they have different resource",
    "start": "2094240",
    "end": "2099460"
  },
  {
    "text": "requirements yeah so is this assuming that we have like one Ray cluster at the minimum that's running for the length of",
    "start": "2099460",
    "end": "2106300"
  },
  {
    "text": "the pipeline like it seems to like I think this is really cool but I'm wondering like is that kind of become an",
    "start": "2106300",
    "end": "2113380"
  },
  {
    "text": "issue where you're not utilizing your resources efficiently because you have all these resources in the ray cluster but different tasks need different",
    "start": "2113380",
    "end": "2120000"
  },
  {
    "text": "resources whereas if you have like something like airflow each task could kind of like be requesting the resources",
    "start": "2120000",
    "end": "2126400"
  },
  {
    "text": "that it needs and maybe provisioning like a separate Ray cluster where you just have whatever you need so I don't know if you",
    "start": "2126400",
    "end": "2132220"
  },
  {
    "text": "have thoughts on that or if I'm understanding correctly yeah so actually that's a good question so",
    "start": "2132220",
    "end": "2139180"
  },
  {
    "text": "uh yes uh crunchy night removal could only work with the raycaster that's also that",
    "start": "2139180",
    "end": "2146020"
  },
  {
    "text": "that's also that's also also makes sense like it's black Candy by Ray and the race 350",
    "start": "2146020",
    "end": "2152380"
  },
  {
    "text": "framework and uh yeah the last thing from this for two things like first like because we have Auto scalar basically",
    "start": "2152380",
    "end": "2159339"
  },
  {
    "text": "Auto scanning so so actually with a single recaster you can do something similar like for example issue is this",
    "start": "2159339",
    "end": "2166180"
  },
  {
    "text": "very Casper doesn't have like a GPU workers but but with real also",
    "start": "2166180",
    "end": "2171839"
  },
  {
    "text": "when we will require some GPU resources we will like uh actually provision uh",
    "start": "2171839",
    "end": "2178420"
  },
  {
    "text": "like like a basic uh like a keep your node yeah and also like and what's an",
    "start": "2178420",
    "end": "2185500"
  },
  {
    "text": "interesting before there is 10 real phone that's also like some official plan and what I'm trying to do is like",
    "start": "2185500",
    "end": "2190540"
  },
  {
    "text": "send it to multiple classes and your module clouds because I say like a processing is most real running I feel",
    "start": "2190540",
    "end": "2197020"
  },
  {
    "text": "it's like it can real phone can have your like a migration like a different your test between classes and the",
    "start": "2197020",
    "end": "2202599"
  },
  {
    "text": "between class because everything is like basically like chip pointed you can you can just like for example you can run",
    "start": "2202599",
    "end": "2208300"
  },
  {
    "text": "something in another Castle another account and you can just like bring the 3.0 data from",
    "start": "2208300",
    "end": "2214180"
  },
  {
    "text": "from a place running running cluster",
    "start": "2214180",
    "end": "2218040"
  },
  {
    "text": "yeah if anyone else has that do you want to take it offline actually",
    "start": "2222220",
    "end": "2229300"
  },
  {
    "text": "we're at the end of time yeah oh yeah thank you everyone yeah",
    "start": "2229300",
    "end": "2235920"
  }
]