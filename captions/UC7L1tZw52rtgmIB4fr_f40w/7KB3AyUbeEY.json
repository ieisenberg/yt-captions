[
  {
    "text": "hi welcome my name is Stefan kraftchick and until recently I was the head of the",
    "start": "3899",
    "end": "9960"
  },
  {
    "text": "Modern Life Cycle team at Citrix and I'm excited today to talk to you about scalable feature engineering with",
    "start": "9960",
    "end": "15059"
  },
  {
    "text": "Hamilton on Ray now first up I just want to say Hamilton is open source and this is a short talk",
    "start": "15059",
    "end": "21300"
  },
  {
    "text": "so if I talk too fast and you miss something you'll find it in the documentation or examples",
    "start": "21300",
    "end": "28740"
  },
  {
    "text": "so for those who don't know like list that with what is Hamilton uh in one sentence it's a declarative",
    "start": "28740",
    "end": "36059"
  },
  {
    "text": "data flow Paradigm so it's a paradigm meaning you need to do things in a specific way it's a data flow Paradigm",
    "start": "36059",
    "end": "42360"
  },
  {
    "text": "so you're going to be expressing uh how data and compute kind of flow and then and then and then it's declarative in",
    "start": "42360",
    "end": "49379"
  },
  {
    "text": "that it gets you to kind of really specify what outputs uh your transform function is going to have and then also",
    "start": "49379",
    "end": "55020"
  },
  {
    "text": "which also declares uh the inputs required to perform that Transformer",
    "start": "55020",
    "end": "61199"
  },
  {
    "text": "uh so at a high level you're going to be writing code in Hamilton in this Paradigm it's then going to be creating",
    "start": "61199",
    "end": "66600"
  },
  {
    "text": "a directed acyclic graph and then from that you can uh it's going to compute some sort of object for you so as a user",
    "start": "66600",
    "end": "73500"
  },
  {
    "text": "you're going to write Hamilton functions in this kind of Hamilton Paradigm you're then going to provide it to the framework the framework is then going to",
    "start": "73500",
    "end": "79860"
  },
  {
    "text": "build a a dag from it and then you're going to ask okay compute something from the dag and for instance it can create a",
    "start": "79860",
    "end": "85979"
  },
  {
    "text": "pandas data frame for you uh in terms of the Paradigm just to give you a sense of that uh so I have two",
    "start": "85979",
    "end": "93840"
  },
  {
    "text": "examples here so at the top we have this old way where you're writing you know procedural style code say this would be",
    "start": "93840",
    "end": "99600"
  },
  {
    "text": "this is pandas code where we're creating two uh two different columns uh instead with Hamilton you would declare two",
    "start": "99600",
    "end": "106079"
  },
  {
    "text": "functions to create these two columns now these functions we haven't said how they're orchestrated or they're executed",
    "start": "106079",
    "end": "111659"
  },
  {
    "text": "that's where some driver code comes in so I haven't that's not shown here but I I'll show that uh shortly",
    "start": "111659",
    "end": "118140"
  },
  {
    "text": "um and so specifically the kind of the mental mapping that you need to think about when you're uh thinking in the",
    "start": "118140",
    "end": "124320"
  },
  {
    "text": "Hamilton Paradigm is anything that you are assigning to or creating some in",
    "start": "124320",
    "end": "129479"
  },
  {
    "text": "this case creating column C you're going to be declaring a function named C and then the the right hand side to compute",
    "start": "129479",
    "end": "136500"
  },
  {
    "text": "C uh the inputs you're going to be declaring them as a required function Arguments for the function name c then",
    "start": "136500",
    "end": "144120"
  },
  {
    "text": "the the logic is going to be within the function uh and then so so for uh for D",
    "start": "144120",
    "end": "150060"
  },
  {
    "text": "we can see in the original curve D depends on the C so in Hamilton you would write a function name d declare C",
    "start": "150060",
    "end": "157080"
  },
  {
    "text": "is an input uh specify the logic in the body uh and and that's really all there is to it",
    "start": "157080",
    "end": "164280"
  },
  {
    "text": "um so what what is this actually doing um so you can think of to create a dag",
    "start": "164280",
    "end": "169920"
  },
  {
    "text": "we're actually modeling each function as a node in that dag so in this case we have two nodes C and D because we have two functions uh the function input",
    "start": "169920",
    "end": "177300"
  },
  {
    "text": "arguments then specifying the dependencies so C uh requires a and b so those are two dependencies and then to",
    "start": "177300",
    "end": "183360"
  },
  {
    "text": "compute D we require C and then via the driver which uh I have code which I",
    "start": "183360",
    "end": "188580"
  },
  {
    "text": "haven't shown you yet it constructs the Stag and then uh it knows how to kind of compute uh whatever you ask of it",
    "start": "188580",
    "end": "195540"
  },
  {
    "text": "so a full hello world kind of looks like something the following you write your Hamilton functions in a specific python",
    "start": "195540",
    "end": "201300"
  },
  {
    "text": "module and then you're writing some driver code which will actually uh you know orchestrate things to kind of um",
    "start": "201300",
    "end": "206940"
  },
  {
    "text": "say what should be computed the driver code essentially all it's doing is importing you know the Hamilton kind of driver module and then uh",
    "start": "206940",
    "end": "214200"
  },
  {
    "text": "wherever uh whatever python modules your feature logic happens to live into so in this case I named the uh the uh the top",
    "start": "214200",
    "end": "221760"
  },
  {
    "text": "file uh feature underscore logic in which case we have to import it here we're then constructing a an object here",
    "start": "221760",
    "end": "227400"
  },
  {
    "text": "which we call a driver object which instantiates the dag maybe takes in some configuration or some initial initial",
    "start": "227400",
    "end": "233280"
  },
  {
    "text": "data and then we're asking the driver to compute okay c and d and",
    "start": "233280",
    "end": "238620"
  },
  {
    "text": "then because we've constructed this dag it knows how to go away and computer result",
    "start": "238620",
    "end": "243920"
  },
  {
    "text": "um so essentially you know uh if you were a translating code into Hamilton so anywhere that you essentially have an",
    "start": "245220",
    "end": "251939"
  },
  {
    "text": "assignment operator you're essentially going to be writing functions those functions are going to declare uh together those functions are going to",
    "start": "251939",
    "end": "259380"
  },
  {
    "text": "declare a directed by cyclic graph and then Hamilton's going to handle kind of executing and Computing things from it",
    "start": "259380",
    "end": "264840"
  },
  {
    "text": "for you so just to hammer home you're going to write some functions you're going to write some driver code that driver code",
    "start": "264840",
    "end": "270060"
  },
  {
    "text": "is going to create a dag and then it's going to know how to walk the dag and computer result",
    "start": "270060",
    "end": "275600"
  },
  {
    "text": "so that was that was Hamilton and yeah in a couple of minutes uh so you might be wondering why was Hamilton created in",
    "start": "275699",
    "end": "281160"
  },
  {
    "text": "the first place um so it's Citrix there was a team creating time series forecasts their",
    "start": "281160",
    "end": "286440"
  },
  {
    "text": "flow looks something like the following uh they created business actuals uh featurized the data uh they've got",
    "start": "286440",
    "end": "291960"
  },
  {
    "text": "business actuals created some features and fit a bunch of Time series models uh which predicted the future and then they",
    "start": "291960",
    "end": "297180"
  },
  {
    "text": "gave the business a bunch of forecasts uh the biggest problems happen to be with creating this featureized data",
    "start": "297180",
    "end": "302880"
  },
  {
    "text": "frame and this is why Hamilton was created uh to give a sense of why this was",
    "start": "302880",
    "end": "309419"
  },
  {
    "text": "causing them issues well with time series forecasting it's very easy to create very wide input data frames for",
    "start": "309419",
    "end": "314940"
  },
  {
    "text": "fitting a model on the order of you know thousands of columns and that's because to create more features and better features essentially columns functions",
    "start": "314940",
    "end": "321360"
  },
  {
    "text": "of other columns so you can over time over the course of years you know it's very easy to accumulate thousands of",
    "start": "321360",
    "end": "327660"
  },
  {
    "text": "these things and the code base for managing this was actually causing them a lot of trouble",
    "start": "327660",
    "end": "333660"
  },
  {
    "text": "so just to try to ground that essentially here's a caricature of the script that essentially was running the",
    "start": "333660",
    "end": "339600"
  },
  {
    "text": "featurization process so at the top we're actually loading some actual data so we're loading you know what was the marketing spend how many synapse do we",
    "start": "339600",
    "end": "345960"
  },
  {
    "text": "have and then after that is basically we're creating a bunch of columns that you know essentially creating our",
    "start": "345960",
    "end": "351300"
  },
  {
    "text": "features um you can say this this code looks pretty innocuous but I want to say if you scale this you know to thousands of",
    "start": "351300",
    "end": "357780"
  },
  {
    "text": "columns in a growing team over the course of you know four or five years you're going to be have a lot of spaghetti code and this actually impacts",
    "start": "357780",
    "end": "364979"
  },
  {
    "text": "the it was impacting the ability for that team to scale and deliver more for the business so for instance",
    "start": "364979",
    "end": "370740"
  },
  {
    "text": "um I'm not formatting uh you know testing and unit testing this kind of code is actually is really difficult if",
    "start": "370740",
    "end": "376740"
  },
  {
    "text": "you have inline data frame manipulations how do you unit test it right integration testing is",
    "start": "376740",
    "end": "383039"
  },
  {
    "text": "tough if you add something you have to run everything to get something and then this impacts code reviews because you really need to understand the order of",
    "start": "383039",
    "end": "389280"
  },
  {
    "text": "execution and what's happening and then onboarding and debugging are also so impacted and essentially you have to be",
    "start": "389280",
    "end": "395699"
  },
  {
    "text": "a super tenured member of the team to really understand the code base so that was Hamilton and why it was",
    "start": "395699",
    "end": "402539"
  },
  {
    "text": "created so what's it been like what's what's it been like to use at Stitch fix so it's been used at Citrix for two and",
    "start": "402539",
    "end": "408720"
  },
  {
    "text": "a half years um the Amanda's over 4 000 feature definitions for this one particular team and all featured definitions are unit",
    "start": "408720",
    "end": "415680"
  },
  {
    "text": "testable documentation friendly and you know centrally curated stored and",
    "start": "415680",
    "end": "420780"
  },
  {
    "text": "versioned and get the data science team that uses it loves it and so they had a",
    "start": "420780",
    "end": "426120"
  },
  {
    "text": "a monthly feature engineering and model fitting task that used to take them about on the order of a day with",
    "start": "426120",
    "end": "431580"
  },
  {
    "text": "Hamilton it takes them less than two hours so roughly you know 4X speed up they found it's easy on easy to onboard",
    "start": "431580",
    "end": "437460"
  },
  {
    "text": "new team members onto their code base so team rotations is is now a possibility for them and then they've also found",
    "start": "437460",
    "end": "443460"
  },
  {
    "text": "that code reviews are much simpler and easier to kind of get through",
    "start": "443460",
    "end": "448039"
  },
  {
    "text": "so that was kind of Hamilton so how do we think about it using Hamilton for feature engineering",
    "start": "450080",
    "end": "456060"
  },
  {
    "text": "uh so essentially the feature you know uh the the model fitting process is kind of looks like the following so we want",
    "start": "456060",
    "end": "463560"
  },
  {
    "text": "to The Click again okay uh so essentially we have we're",
    "start": "463560",
    "end": "470819"
  },
  {
    "text": "loading data and transforming into features and we're creating some features we then you know pass that",
    "start": "470819",
    "end": "478139"
  },
  {
    "text": "into fitting a model and then we're using that model for prediction um and so if essentially I just want to",
    "start": "478139",
    "end": "483720"
  },
  {
    "text": "say with Hamilton you could model this in typos end to end but for the purpose of this talk we're just going to focus on featureization",
    "start": "483720",
    "end": "490740"
  },
  {
    "text": "um and I have been using pandas here as an example um but just want to kind of say that you",
    "start": "490740",
    "end": "496620"
  },
  {
    "text": "know Hamilton works over any python object type so but for this talk I'm just going to all the examples are going",
    "start": "496620",
    "end": "501840"
  },
  {
    "text": "to be kind of pandas based um in terms of Hamilton itself you know it doesn't replace an orchestration",
    "start": "501840",
    "end": "507479"
  },
  {
    "text": "system so if you want to do you know batch feature engineering you would embed it within you know an orchestration system such as airflow",
    "start": "507479",
    "end": "513719"
  },
  {
    "text": "decks to prefect flight or you know Jupiter Hub notebook um and then you can also embed Hamilton",
    "start": "513719",
    "end": "520740"
  },
  {
    "text": "in a online web service since the dependency footprint is pretty small um and uh yeah",
    "start": "520740",
    "end": "528860"
  },
  {
    "text": "so um so modeling featurization with Hampton essentially to get started you need you need to create at least two",
    "start": "530339",
    "end": "535800"
  },
  {
    "text": "files in the first file we're essentially going to be defining some functions that load data and your feature transforms",
    "start": "535800",
    "end": "542399"
  },
  {
    "text": "and then you're going to be uh creating a ram dot Pi which essentially instantiates the driver which",
    "start": "542399",
    "end": "548519"
  },
  {
    "text": "instantiates a dag and then you're going to be asking hey compute something um from the dag for me",
    "start": "548519",
    "end": "555500"
  },
  {
    "text": "so uh so what's the code that actually needs to be written just to hammer that home so one functions to load data uh",
    "start": "555959",
    "end": "561120"
  },
  {
    "text": "this is important because um you need to kind of normalize uh the the say the column names that come",
    "start": "561120",
    "end": "566880"
  },
  {
    "text": "through since with Hamilton you need variable names to be valid python uh",
    "start": "566880",
    "end": "571920"
  },
  {
    "text": "variable names uh and then if you uh then you also need to create a common index for things to",
    "start": "571920",
    "end": "577500"
  },
  {
    "text": "kind of join on together at the end you need to write your feature functions and then optionally as I said before you",
    "start": "577500",
    "end": "583560"
  },
  {
    "text": "could model your entire featurization process with this uh model fitting process if you wanted to and then you're going to be writing",
    "start": "583560",
    "end": "589620"
  },
  {
    "text": "these drivers which will kind of tell Hammer to execute and actually materialize some data you can model the",
    "start": "589620",
    "end": "595260"
  },
  {
    "text": "superset of all possible features that you want and only request a subset and the dag will only walk and compute only",
    "start": "595260",
    "end": "601260"
  },
  {
    "text": "what's needed so graphically you're going to have some Source tables you can write some",
    "start": "601260",
    "end": "606899"
  },
  {
    "text": "functions that will load them in those functions they're not going to expose be exposed to some feature transform logic",
    "start": "606899",
    "end": "612839"
  },
  {
    "text": "functions that you're going to write you're going to write some driver drivers that will then uh you know",
    "start": "612839",
    "end": "619080"
  },
  {
    "text": "you'll specify what you want computed it will walk the dag and on your compute what's required and then you can use",
    "start": "619080",
    "end": "624420"
  },
  {
    "text": "that data frame for model fitting so scalable feature engineering so Hamilton",
    "start": "624420",
    "end": "631860"
  },
  {
    "text": "right um so to talk about I guess scaling we've got to first talk about some problems so",
    "start": "631860",
    "end": "638220"
  },
  {
    "text": "um at Stitch fix you know the human team aspect was actually you know a big pain Point specifically the team was writing",
    "start": "638220",
    "end": "644459"
  },
  {
    "text": "code that was a pretty highly coupled to the particular context so being able to reuse those feature transform functions",
    "start": "644459",
    "end": "650760"
  },
  {
    "text": "was actually kind of difficult uh similarly someone coming in to understand someone else's work was quite",
    "start": "650760",
    "end": "655800"
  },
  {
    "text": "difficult and then if you're spending all your time trying to fix production",
    "start": "655800",
    "end": "661079"
  },
  {
    "text": "and trying to make hits of tales of you know what what went wrong you know this also takes away from the time that your",
    "start": "661079",
    "end": "666959"
  },
  {
    "text": "team can be spending and scaling and better and building better things for the business from the machine side you know this is",
    "start": "666959",
    "end": "672779"
  },
  {
    "text": "this is probably the more more common thing that people think about that's what scaling is you know if your data is",
    "start": "672779",
    "end": "678060"
  },
  {
    "text": "too big to fit a memory you've got to figure out you know how you can scale that similarly uh with python you know everything is uh you know a single",
    "start": "678060",
    "end": "685079"
  },
  {
    "text": "process so if you want to scale throughput and essentially featurize things faster you need to figure out how",
    "start": "685079",
    "end": "690720"
  },
  {
    "text": "you can paralyze computation the good news here is that Hamilton helps you know with the human side of",
    "start": "690720",
    "end": "696899"
  },
  {
    "text": "things it really helps you structure and organize your feature engineering and then Ray is a great fit for enabling you",
    "start": "696899",
    "end": "702480"
  },
  {
    "text": "to um to scale to bigger data so in terms of you know how does",
    "start": "702480",
    "end": "707579"
  },
  {
    "text": "Hamilton help with you know like uh the you know reducing highly coupled code well essentially as I said before you're",
    "start": "707579",
    "end": "713880"
  },
  {
    "text": "running functions uh that are separate from driver code so your uh your feature transform logic is very decoupled from",
    "start": "713880",
    "end": "719940"
  },
  {
    "text": "where it's going to be executed so naturally your code ends up being quite decoupled",
    "start": "719940",
    "end": "725579"
  },
  {
    "text": "in terms of because you have to curate things into functions um you know it's much easier to reuse and understand people's work uh you have",
    "start": "725579",
    "end": "732540"
  },
  {
    "text": "to curate your functions into modules those functions can be unit testable document you can use the documentation",
    "start": "732540",
    "end": "738060"
  },
  {
    "text": "string for documentation and then because of the way that you the Hamilton works you actually have to align on naming and so naming always means",
    "start": "738060",
    "end": "744779"
  },
  {
    "text": "something useful with Hamilton and then from if you have to debug things in production since things do",
    "start": "744779",
    "end": "750839"
  },
  {
    "text": "invariably go wrong with Hamilton it's a very quick easy mapping of output defining where it's defined in the code",
    "start": "750839",
    "end": "757260"
  },
  {
    "text": "base since uh you just have to search for that particular function name and so therefore debugging is pretty",
    "start": "757260",
    "end": "762540"
  },
  {
    "text": "straightforward since you know what the dependencies are declared as input and so you can kind of methodically debug",
    "start": "762540",
    "end": "768120"
  },
  {
    "text": "your your uh your Dag then since everything is created into modules if you you know version things",
    "start": "768120",
    "end": "773940"
  },
  {
    "text": "with Git or create python packages it's very easy for you to then kind of take snapshots of the world and you know roll",
    "start": "773940",
    "end": "779579"
  },
  {
    "text": "back if needed to and then with Hamilton it's also very easy to add some runtime data quality checks to make sure that",
    "start": "779579",
    "end": "785820"
  },
  {
    "text": "your expectations in development are also being met in production",
    "start": "785820",
    "end": "791040"
  },
  {
    "text": "so uh so let's show you a Hamilton function um so this is essentially you know the",
    "start": "791040",
    "end": "797100"
  },
  {
    "text": "core uh abstraction that Hamilton's all built around so here's a function you haven't seen before I you know give you",
    "start": "797100",
    "end": "803760"
  },
  {
    "text": "a few seconds to kind of grok it but I want to say without having to tell you anything I'm pretty sure you pretty much",
    "start": "803760",
    "end": "809160"
  },
  {
    "text": "get the gist of it um and I will even go as far to say that you probably wouldn't be too scared to",
    "start": "809160",
    "end": "814260"
  },
  {
    "text": "inherit this if someone else wrote it so specifically just to hammer home a few points you know Hamilton is uh you",
    "start": "814260",
    "end": "820680"
  },
  {
    "text": "know functions are always unit testable here we haven't leaked how data gets to it we just declared what inputs were required so it's really easy to write a",
    "start": "820680",
    "end": "826560"
  },
  {
    "text": "unit test um documentation is pretty it's pretty good you can use the function doc string and then the you know the function name",
    "start": "826560",
    "end": "832980"
  },
  {
    "text": "and the function input arguments are also generally named something useful so it's very easy to kind of read what's going on uh and then because we we can",
    "start": "832980",
    "end": "840180"
  },
  {
    "text": "build a dag we can also then you know visualize it and we also have then this this app tag annotation where we can add",
    "start": "840180",
    "end": "846839"
  },
  {
    "text": "some extra metadata so it's pretty clear to see you know who owns this function",
    "start": "846839",
    "end": "852180"
  },
  {
    "text": "um and then because everything is in functions you know this this module can be reused in multiple different contexts",
    "start": "852180",
    "end": "857459"
  },
  {
    "text": "pretty easily um and therefore it's very easy to kind of you know reuse other people's work",
    "start": "857459",
    "end": "862860"
  },
  {
    "text": "and then unfortunately the the formatting is kind of not showing here but essentially uh as you can see here",
    "start": "862860",
    "end": "868740"
  },
  {
    "text": "you can also add a runtime data quality check so my uh you probably I didn't have to tell you but you could probably",
    "start": "868740",
    "end": "873899"
  },
  {
    "text": "guess from the AT check output annotation that what's what it's going to do is that when you know this",
    "start": "873899",
    "end": "879060"
  },
  {
    "text": "function runs it's going to check that the data type is a float the range is between -5 and 5 and that there",
    "start": "879060",
    "end": "884880"
  },
  {
    "text": "shouldn't be any none values",
    "start": "884880",
    "end": "888380"
  },
  {
    "text": "right uh so just to hammer home the kind of code based implications again so functions are always in modules and",
    "start": "889920",
    "end": "895320"
  },
  {
    "text": "you're going to be running these driver scripts that kind of uh map to the different context you want to reuse things reuse the your feature transforms",
    "start": "895320",
    "end": "901920"
  },
  {
    "text": "in so you're gonna I wouldn't end up happening at Stitch fix was that you ended up thematically kind of um uh",
    "start": "901920",
    "end": "908339"
  },
  {
    "text": "grouping your feature transform function so all the spend features we're on the spend features module or the marketing features run the marketing features",
    "start": "908339",
    "end": "914339"
  },
  {
    "text": "module and then you could have multiple different driver scripts that uh everyone for different contests could",
    "start": "914339",
    "end": "919560"
  },
  {
    "text": "easily kind of create um to reuse these functions so essentially with Hamilton uh you get",
    "start": "919560",
    "end": "926399"
  },
  {
    "text": "code readers from day one and I want to say it's uh it's pretty low maintenance to support many different javascripts",
    "start": "926399",
    "end": "931860"
  },
  {
    "text": "just because there isn't any feature transform logic in them so if there's something changes about how you load data you know there aren't that many",
    "start": "931860",
    "end": "938160"
  },
  {
    "text": "places of where you have to change things okay so on to like so how does it's",
    "start": "938160",
    "end": "945360"
  },
  {
    "text": "connecting with right and scaling um the compute and data side of things so uh as you know as you're here you know Ray",
    "start": "945360",
    "end": "951060"
  },
  {
    "text": "enables you to scale beyond your laptop right so it's very easy to go from a single process to multi-processing to",
    "start": "951060",
    "end": "956399"
  },
  {
    "text": "you know cluster scale type um at work uh in terms of uh Hamilton's integration with raids built on top of record and we",
    "start": "956399",
    "end": "963779"
  },
  {
    "text": "also have Ray workflows are also supported um in terms of you know you might be wondering okay what's required to switch",
    "start": "963779",
    "end": "969779"
  },
  {
    "text": "to to running Ray and the good news is you only have to add about five lines of code in your in your driver code none of",
    "start": "969779",
    "end": "974880"
  },
  {
    "text": "your feature transform logic needs to change or be touched at all from an architectural perspective just",
    "start": "974880",
    "end": "982019"
  },
  {
    "text": "to give you a sense of just how things integrate so again if you're running things on your laptop or you know a single machine you're going to be",
    "start": "982019",
    "end": "987540"
  },
  {
    "text": "writing some you know uh feature transform code and some driver code that will instantiate a driver as the dag has",
    "start": "987540",
    "end": "993660"
  },
  {
    "text": "walked it's going to delegate to terrain and Ray's going to handle parallelism so it's a great way to kind of not have to",
    "start": "993660",
    "end": "999899"
  },
  {
    "text": "implement your your own multi-processing if you want to make use of multiple cores on on your machine",
    "start": "999899",
    "end": "1005720"
  },
  {
    "text": "and then it's very easy to kind of scale to to Cluster size you just got to change your array in it to point to a",
    "start": "1005720",
    "end": "1011180"
  },
  {
    "text": "cluster and essentially each function that you kind of write essentially will be distributed and handle and Ray will",
    "start": "1011180",
    "end": "1017779"
  },
  {
    "text": "handle execution for you so in terms of",
    "start": "1017779",
    "end": "1024860"
  },
  {
    "text": "just to give you a sense of like what is the actual change required so here I have a vanilla kind of Hamilton uh",
    "start": "1024860",
    "end": "1029959"
  },
  {
    "text": "driver code the uh the top Parts basically is yeah we're importing a the driver module and then we're importing",
    "start": "1029959",
    "end": "1036319"
  },
  {
    "text": "our data loader functions and our feature transform functions we uh maybe",
    "start": "1036319",
    "end": "1041720"
  },
  {
    "text": "have some configuration and then we're essentially instantiating the driver with those modules which will then build",
    "start": "1041720",
    "end": "1046938"
  },
  {
    "text": "a dag we're then specifying what we want computed Hamilton will compute their",
    "start": "1046939",
    "end": "1052040"
  },
  {
    "text": "result and then we're saving that uh to to some table somewhere so to make this run on Ray we just got",
    "start": "1052040",
    "end": "1058580"
  },
  {
    "text": "to import a few more things and put the the ray module you're going to initialize Ray you've got to add what we",
    "start": "1058580",
    "end": "1065059"
  },
  {
    "text": "call array graph adapter this will tell Hamilton like hey as we're walking the dag we want to augment it and then um we",
    "start": "1065059",
    "end": "1071419"
  },
  {
    "text": "also then got to specify what type of return type we want so in this case we want a pandas data frame hence we're",
    "start": "1071419",
    "end": "1077120"
  },
  {
    "text": "providing telling the ray graph adapter this is what we want returned and then you're just passing that in as a keyword",
    "start": "1077120",
    "end": "1083600"
  },
  {
    "text": "argument to the driver nothing else needs needs to change and then once you're done you're just shutting down right pretty simple",
    "start": "1083600",
    "end": "1091600"
  },
  {
    "text": "um so in terms of you know how does this work again you're writing functions you're going to be running some driver",
    "start": "1093140",
    "end": "1098780"
  },
  {
    "text": "code the driver code essentially instantiates the dag as it walks the dag",
    "start": "1098780",
    "end": "1104179"
  },
  {
    "text": "it's then going to be you know delegating to essentially calling Ray remote uh Ray will then handle the actual",
    "start": "1104179",
    "end": "1110960"
  },
  {
    "text": "computation execution and then uh and so very easy to scale Hamilton without you",
    "start": "1110960",
    "end": "1117440"
  },
  {
    "text": "having to touch your feature transform logic",
    "start": "1117440",
    "end": "1121240"
  },
  {
    "text": "so in terms of caveats um so with Hamilton uh we the",
    "start": "1123080",
    "end": "1128900"
  },
  {
    "text": "integration with Ray essentially we take all raised defaults so if you're doing serialization uh we don't expose any",
    "start": "1128900",
    "end": "1135620"
  },
  {
    "text": "custom serialization functionality yet um so everything needs to be pickle protocol V5 compatible",
    "start": "1135620",
    "end": "1142520"
  },
  {
    "text": "memory we also uh just use the defaults so if you need memory aware scheduling we haven't exposed that yet uh we would",
    "start": "1142520",
    "end": "1149240"
  },
  {
    "text": "love to you know collaborate with a few people to figure out what is the correct user experience to kind of provide that uh so that you know we can tell Ray what",
    "start": "1149240",
    "end": "1156620"
  },
  {
    "text": "to do and then in terms of possum dependencies in terms of a materialization run with",
    "start": "1156620",
    "end": "1162320"
  },
  {
    "text": "Hamilton we kind of assume that all python dependencies are the same or that there aren't any conflicts so that's",
    "start": "1162320",
    "end": "1168320"
  },
  {
    "text": "something you need to manage and so with Ray uh you need to either you know have it on the cluster already or specify",
    "start": "1168320",
    "end": "1174200"
  },
  {
    "text": "those dependencies when you um uh start Ray in it",
    "start": "1174200",
    "end": "1179360"
  },
  {
    "text": "so Ray currently with with Hamilton is you know deemed an experimental status such that you know we can at least uh",
    "start": "1179360",
    "end": "1186679"
  },
  {
    "text": "you know change some of the apis if we wanted to so we're looking for people to kind of partner with and you know extend",
    "start": "1186679",
    "end": "1192860"
  },
  {
    "text": "and or give us the thumbs up that hey this API works for us and you know we want to use it",
    "start": "1192860",
    "end": "1200020"
  },
  {
    "text": "so with that I'm just going to uh go over to my laptop and show you just a quick demo as to uh you know just to get",
    "start": "1200299",
    "end": "1207080"
  },
  {
    "text": "a sense for what using Hamilton kind of looks like so I'm going to try to give you a sense of what code looks like I'm",
    "start": "1207080",
    "end": "1213140"
  },
  {
    "text": "going to prove to you that that the ray integration Works uh show you the visualization functionality and then just give you a brief idea of like",
    "start": "1213140",
    "end": "1219440"
  },
  {
    "text": "what's the iteration cycle to create a new feature with Hamilton",
    "start": "1219440",
    "end": "1224919"
  },
  {
    "text": "all right so I have a simple directory here with a bunch of files so I have a CSV file which has an absentee",
    "start": "1232940",
    "end": "1240280"
  },
  {
    "text": "absenteeism at work data set so the task is essentially trying to create a a data",
    "start": "1240280",
    "end": "1245660"
  },
  {
    "text": "frame for featurization that will uh that we can predict who's going to be absolutely work I then have a bunch of",
    "start": "1245660",
    "end": "1251240"
  },
  {
    "text": "files so I have a a data loaders module that will load the CSV or my feature transform logic is in my feature logic",
    "start": "1251240",
    "end": "1257900"
  },
  {
    "text": "file and then I have you know two run functions one for vanilla Hamilton the other one for Ray so just to give you a",
    "start": "1257900",
    "end": "1263720"
  },
  {
    "text": "sense of you know the CSV looks looks pretty standard nothing to unexpected",
    "start": "1263720",
    "end": "1269900"
  },
  {
    "text": "there in terms of the data the data loading function here I have one written called raw data",
    "start": "1269900",
    "end": "1276500"
  },
  {
    "text": "essentially it takes in a location string then yeah reads the CSV sanitizes",
    "start": "1276500",
    "end": "1282799"
  },
  {
    "text": "The Columns to make sure that the column names are a valid python variable names creates an index so that we can join",
    "start": "1282799",
    "end": "1288440"
  },
  {
    "text": "everything together on the end and returns a data frame we then have some syntactic sugar here that basically says",
    "start": "1288440",
    "end": "1294500"
  },
  {
    "text": "given this data frame I want to kind of Expose and extract some columns in which case we've specified here essentially",
    "start": "1294500",
    "end": "1300500"
  },
  {
    "text": "what what columns we want Downstream features to have access to",
    "start": "1300500",
    "end": "1306320"
  },
  {
    "text": "uh and so then moving to the feature logic file I have some uh you know feature functions defined as you can",
    "start": "1306320",
    "end": "1312620"
  },
  {
    "text": "kind of see here they all look pretty nice and and uniform and that's you know a result of everything being in",
    "start": "1312620",
    "end": "1317840"
  },
  {
    "text": "functions just to kind of dig into to one of them here I have uh defined a feature called has children",
    "start": "1317840",
    "end": "1323960"
  },
  {
    "text": "it takes in you know an input called sun which is one of the columns from the CSV I've inputted asleep here just to prove",
    "start": "1323960",
    "end": "1330620"
  },
  {
    "text": "that when I when we paralyze things with Ray things will be uh uh it will speed up uh it's returning essentially you",
    "start": "1330620",
    "end": "1337580"
  },
  {
    "text": "know ones and zeros and specifying that uh um yeah everything should be an integer I have added a check output",
    "start": "1337580",
    "end": "1343940"
  },
  {
    "text": "annotation and here I'm using a Pandera schema to kind of Define it and essentially the expectation is",
    "start": "1343940",
    "end": "1350000"
  },
  {
    "text": "everything should be an integer everything should be in the value between zero and one and there shouldn't be any any null values",
    "start": "1350000",
    "end": "1355940"
  },
  {
    "text": "and similarly there are uh other features defined so in terms of",
    "start": "1355940",
    "end": "1362120"
  },
  {
    "text": "just quickly running things",
    "start": "1362120",
    "end": "1366340"
  },
  {
    "text": "there we go so I'm going to run the vanilla Hamilton uh driver as well as the the ray one",
    "start": "1368179",
    "end": "1374659"
  },
  {
    "text": "um uh the the script as I'll show you in a second essentially is just you know",
    "start": "1374659",
    "end": "1379760"
  },
  {
    "text": "requesting six columns and then uh essentially printing the the head of the",
    "start": "1379760",
    "end": "1385159"
  },
  {
    "text": "data frame just to prove here that you know Ray integration works you can see that the execution time uh is faster",
    "start": "1385159",
    "end": "1391820"
  },
  {
    "text": "with Ray because it was actually paralyzed over the multiple cores of my CPU and you can kind of see here an",
    "start": "1391820",
    "end": "1396919"
  },
  {
    "text": "eyeballing that the the feature results are the same uh in terms of uh added functionality",
    "start": "1396919",
    "end": "1404000"
  },
  {
    "text": "here I've actually uh you yeah uh the the point is here it's very easy also to",
    "start": "1404000",
    "end": "1409520"
  },
  {
    "text": "visualize the execution path of computing these features with Hamilton you didn't have to do anything you just got to kind of specify it",
    "start": "1409520",
    "end": "1415220"
  },
  {
    "text": "as an option uh in terms of uh just to show you the difference between the two",
    "start": "1415220",
    "end": "1421039"
  },
  {
    "text": "driver files as I said before you only have to add a few lines of code so here I have a diff between them is just",
    "start": "1421039",
    "end": "1426500"
  },
  {
    "text": "showing the right hand side with Ray we just got to import a few more things initialize Ray and create array graph",
    "start": "1426500",
    "end": "1432020"
  },
  {
    "text": "adapter and then uh for Ray I'm also been visualizing uh output so we have a",
    "start": "1432020",
    "end": "1438140"
  },
  {
    "text": "function called visualize execution that does that uh and then and and so that's really the",
    "start": "1438140",
    "end": "1443780"
  },
  {
    "text": "difference so to give you an idea of okay I want to create a new feature what do I have to do uh well I have a you",
    "start": "1443780",
    "end": "1450140"
  },
  {
    "text": "know a feature pre-prepared here uh so essentially you would write your feature and if you want to be uh you know a",
    "start": "1450140",
    "end": "1455840"
  },
  {
    "text": "software uh development driven about it you could you could be test driven so you can it's very easy to kind of go in",
    "start": "1455840",
    "end": "1460940"
  },
  {
    "text": "and write a unit test so you could develop features in a test driven way if you wanted to but uh at Stitch fix what",
    "start": "1460940",
    "end": "1466640"
  },
  {
    "text": "generally happened was instead they would just go ahead and you know add this feature to uh their their driver",
    "start": "1466640",
    "end": "1472940"
  },
  {
    "text": "file and just to um you uh just to show you that the the",
    "start": "1472940",
    "end": "1479179"
  },
  {
    "text": "flexibility in terms of how you could test things with Hamilton if you if you don't want to compute something you just remove it from the output",
    "start": "1479179",
    "end": "1485480"
  },
  {
    "text": "so just to show you that this is gonna run",
    "start": "1485480",
    "end": "1491140"
  },
  {
    "text": "um it will show me only I only requested you know two outputs and I requested a",
    "start": "1492919",
    "end": "1497960"
  },
  {
    "text": "graph of the computation to be made so um uh and so it's really that easy to kind",
    "start": "1497960",
    "end": "1505039"
  },
  {
    "text": "of you know add a new feature and test it and ensure that it's working uh as you saw that was that was pretty quick",
    "start": "1505039",
    "end": "1512500"
  },
  {
    "text": "so and so that's all I have for the demo uh feel free to you know ask me questions afterwards but",
    "start": "1513200",
    "end": "1518659"
  },
  {
    "text": "um if we go back to the presentation",
    "start": "1518659",
    "end": "1522640"
  },
  {
    "text": "uh so I'm sure uh just to kind of you know finish up my talk uh so Hamilton",
    "start": "1524360",
    "end": "1529760"
  },
  {
    "text": "you know gets you to write these functions in this kind of decarative Paradigm that enables you to declare a",
    "start": "1529760",
    "end": "1535039"
  },
  {
    "text": "data flow um and it's it's a micro framework in that it's embeddable that uh you can put",
    "start": "1535039",
    "end": "1541520"
  },
  {
    "text": "it anywhere that runs python it grew out of the need to tame a feature code base and uh I you know I'm",
    "start": "1541520",
    "end": "1548539"
  },
  {
    "text": "excited about using it so you know please take a take it for a spin and let me know if it makes your code base better",
    "start": "1548539",
    "end": "1553760"
  },
  {
    "text": "uh and so uh you know Hamilton essentially helps The A Team scale their",
    "start": "1553760",
    "end": "1559039"
  },
  {
    "text": "feature Engineering Process through you know making software engineering best practices uh something that's really",
    "start": "1559039",
    "end": "1564380"
  },
  {
    "text": "comes easily and natural um and so Hamilton with Ray enables one",
    "start": "1564380",
    "end": "1570799"
  },
  {
    "text": "to not only you know scale the human and team side of future engineering but also scale uh the data and computer side",
    "start": "1570799",
    "end": "1577340"
  },
  {
    "text": "so at Hamilton's open source would love for you to give it a try if you like it give us a star on GitHub our vote and",
    "start": "1577340",
    "end": "1583820"
  },
  {
    "text": "create issues and then we have a fledgling community on slack that would like that would love for you to join",
    "start": "1583820",
    "end": "1589760"
  },
  {
    "text": "uh thank you and would love to take questions",
    "start": "1589760",
    "end": "1594950"
  },
  {
    "text": "[Applause]",
    "start": "1594950",
    "end": "1600209"
  },
  {
    "text": "Mike's coming oh yeah",
    "start": "1601880",
    "end": "1605200"
  },
  {
    "text": "okay thanks thanks for your talk uh maybe you can briefly describe how does it work under the hood uh like do you",
    "start": "1607820",
    "end": "1614480"
  },
  {
    "text": "materialize the intermediate results or is it like some iterator stitching or something like that uh so with the right",
    "start": "1614480",
    "end": "1621260"
  },
  {
    "text": "integration we just we delegated order right so it's really um you know Ray ends up scheduling it and figuring out but essentially or in",
    "start": "1621260",
    "end": "1628400"
  },
  {
    "text": "everything's materialized into memory at least um and so you if you if you're looking at the graph like so every node there",
    "start": "1628400",
    "end": "1635299"
  },
  {
    "text": "will be materializing its result yeah yeah um it's uh uh you could say with",
    "start": "1635299",
    "end": "1641179"
  },
  {
    "text": "Hamilton it's also it very easy to make sure that things are immutable since there's only one one way to",
    "start": "1641179",
    "end": "1647120"
  },
  {
    "text": "compute them and that but that results in um you know things being each function essentially results in something being",
    "start": "1647120",
    "end": "1652700"
  },
  {
    "text": "materialized into memory thank you",
    "start": "1652700",
    "end": "1657039"
  },
  {
    "text": "so when you build the dacs some of the operators could also run in parallel",
    "start": "1663679",
    "end": "1669679"
  },
  {
    "text": "right do you do like parallel compute uh so with vanilla Hamilton you know uh",
    "start": "1669679",
    "end": "1676580"
  },
  {
    "text": "there is uh uh it's not parallel but if you switch to using Ray then you know by means of",
    "start": "1676580",
    "end": "1682880"
  },
  {
    "text": "scheduling Ray will ensure that hey if there are uh as we walk the dag and we you know schedule things in a in a",
    "start": "1682880",
    "end": "1689299"
  },
  {
    "text": "parallel manner then things will actually uh happen in parallel",
    "start": "1689299",
    "end": "1694059"
  },
  {
    "text": "uh have you tried to uh use this in the online server inside for the Army Orton",
    "start": "1698480",
    "end": "1705020"
  },
  {
    "text": "Library so you can from a perspective of you know sharing feature definitions you",
    "start": "1705020",
    "end": "1710840"
  },
  {
    "text": "could use the same same definitions in batch and then put them into a serving with serving there is you know a couple",
    "start": "1710840",
    "end": "1717679"
  },
  {
    "text": "of uh you know caveats in terms of if you have aggregation features you probably need to provide them as uh",
    "start": "1717679",
    "end": "1723020"
  },
  {
    "text": "hard-coded as values to Hamilton so that uh they're already provided for execution but it's very you know it's",
    "start": "1723020",
    "end": "1729500"
  },
  {
    "text": "very possible to or at least easy to do to embed Hamilton within a a web service",
    "start": "1729500",
    "end": "1735140"
  },
  {
    "text": "framework yet yeah my second question my second question is about the Benchmark and the performance I have",
    "start": "1735140",
    "end": "1742520"
  },
  {
    "text": "your team like hit the performance problems and then you try to use a ray to scale it and have you done any",
    "start": "1742520",
    "end": "1748400"
  },
  {
    "text": "performance benchmarks between and after the migration a good question uh no but",
    "start": "1748400",
    "end": "1756679"
  },
  {
    "text": "uh and I mean anecdotally uh if you um because it's such like most of the data and you know fit some memories in",
    "start": "1756679",
    "end": "1762980"
  },
  {
    "text": "which case it's really multi-processing that we've you know tried to use and make use often so I want to say it",
    "start": "1762980",
    "end": "1769039"
  },
  {
    "text": "really depends on your on the dag that you build and so uh I mean I'd love someone to do the to do that Benchmark",
    "start": "1769039",
    "end": "1775100"
  },
  {
    "text": "and actually tell us because I think that's an interesting story um since you know Hamilton by itself is",
    "start": "1775100",
    "end": "1780620"
  },
  {
    "text": "not meant to like increase performance but you know since since it's essentially just trying to ensure that",
    "start": "1780620",
    "end": "1786260"
  },
  {
    "text": "uh you can maintain and Define your feature transforms that you know live beyond you when you leave your company",
    "start": "1786260",
    "end": "1794200"
  },
  {
    "text": "okay I think we're good all right thanks everyone for coming [Applause]",
    "start": "1810500",
    "end": "1818220"
  }
]