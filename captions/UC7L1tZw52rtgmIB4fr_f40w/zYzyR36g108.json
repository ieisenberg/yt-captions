[
  {
    "text": "well thanks hey everybody I'm Paul let's",
    "start": "4860",
    "end": "7080"
  },
  {
    "text": "talk a little about running uh",
    "start": "7080",
    "end": "8519"
  },
  {
    "text": "serverless workloads",
    "start": "8519",
    "end": "10260"
  },
  {
    "text": "um so I work for IBM I work in our open",
    "start": "10260",
    "end": "13139"
  },
  {
    "text": "technology division where we work in uh",
    "start": "13139",
    "end": "16500"
  },
  {
    "text": "open source I probably I specialize in",
    "start": "16500",
    "end": "19800"
  },
  {
    "text": "kind of two areas one is serverless so",
    "start": "19800",
    "end": "23039"
  },
  {
    "text": "things like k-native kubernetes",
    "start": "23039",
    "end": "25439"
  },
  {
    "text": "um",
    "start": "25439",
    "end": "26220"
  },
  {
    "text": "things like that different container",
    "start": "26220",
    "end": "27599"
  },
  {
    "text": "Technologies",
    "start": "27599",
    "end": "28920"
  },
  {
    "text": "and then the other area I specialize in",
    "start": "28920",
    "end": "30420"
  },
  {
    "text": "is quantum so we do a lot of work in",
    "start": "30420",
    "end": "33000"
  },
  {
    "text": "open Quantum around things like post",
    "start": "33000",
    "end": "35340"
  },
  {
    "text": "Quantum cryptography the kiss kit",
    "start": "35340",
    "end": "37920"
  },
  {
    "text": "software development kit and Quantum",
    "start": "37920",
    "end": "40320"
  },
  {
    "text": "middleware which is what I'll be",
    "start": "40320",
    "end": "41280"
  },
  {
    "text": "speaking a little bit about today my",
    "start": "41280",
    "end": "43800"
  },
  {
    "text": "co-presenter Dr Max I couldn't be here",
    "start": "43800",
    "end": "45600"
  },
  {
    "text": "he's on the board of the openjs",
    "start": "45600",
    "end": "47760"
  },
  {
    "text": "foundation and they're having governance",
    "start": "47760",
    "end": "49260"
  },
  {
    "text": "meetings this week so he couldn't make",
    "start": "49260",
    "end": "50820"
  },
  {
    "text": "it unfortunately but I'll carry the",
    "start": "50820",
    "end": "52680"
  },
  {
    "text": "torch all right",
    "start": "52680",
    "end": "54300"
  },
  {
    "text": "so what are we going to talk about today",
    "start": "54300",
    "end": "56219"
  },
  {
    "text": "um",
    "start": "56219",
    "end": "56820"
  },
  {
    "text": "essentially I want to kind of use this",
    "start": "56820",
    "end": "58860"
  },
  {
    "text": "as a chance to do a bit of a case study",
    "start": "58860",
    "end": "61199"
  },
  {
    "text": "of running serverless applications and",
    "start": "61199",
    "end": "63480"
  },
  {
    "text": "different ways to do so",
    "start": "63480",
    "end": "65180"
  },
  {
    "text": "so one of the things that we had to do",
    "start": "65180",
    "end": "67439"
  },
  {
    "text": "on my team is build an application that",
    "start": "67439",
    "end": "70560"
  },
  {
    "text": "we're calling quantum serverless",
    "start": "70560",
    "end": "72720"
  },
  {
    "text": "um so I'm going to use that as kind of",
    "start": "72720",
    "end": "73619"
  },
  {
    "text": "our case study to walk through the pros",
    "start": "73619",
    "end": "75299"
  },
  {
    "text": "and cons of different serverless",
    "start": "75299",
    "end": "77060"
  },
  {
    "text": "techniques today so the first thing",
    "start": "77060",
    "end": "79380"
  },
  {
    "text": "we'll do is we'll talk about kind of",
    "start": "79380",
    "end": "80220"
  },
  {
    "text": "what that Quantum serverless problem is",
    "start": "80220",
    "end": "81600"
  },
  {
    "text": "what's the thing we're trying to build",
    "start": "81600",
    "end": "83400"
  },
  {
    "text": "then we'll look at kind of two different",
    "start": "83400",
    "end": "84720"
  },
  {
    "text": "ways of building it one using k-native",
    "start": "84720",
    "end": "86759"
  },
  {
    "text": "one using Ray and then at the end uh",
    "start": "86759",
    "end": "89640"
  },
  {
    "text": "we'll look at some lessons learned and",
    "start": "89640",
    "end": "91560"
  },
  {
    "text": "some things for further discussion",
    "start": "91560",
    "end": "93960"
  },
  {
    "text": "right",
    "start": "93960",
    "end": "95220"
  },
  {
    "text": "so the quantum serverless problem",
    "start": "95220",
    "end": "97500"
  },
  {
    "text": "um I guess one of the first things to",
    "start": "97500",
    "end": "99060"
  },
  {
    "text": "kind of start with is you know what's",
    "start": "99060",
    "end": "101579"
  },
  {
    "text": "the big deal about Quantum Computing",
    "start": "101579",
    "end": "102960"
  },
  {
    "text": "like why do we care about that and the",
    "start": "102960",
    "end": "105540"
  },
  {
    "text": "short answer is it enables us to solve",
    "start": "105540",
    "end": "107400"
  },
  {
    "text": "some hard problems that we aren't able",
    "start": "107400",
    "end": "109200"
  },
  {
    "text": "to solve today",
    "start": "109200",
    "end": "110640"
  },
  {
    "text": "if any of you remember back to you know",
    "start": "110640",
    "end": "112439"
  },
  {
    "text": "algorithms class you know there's these",
    "start": "112439",
    "end": "114119"
  },
  {
    "text": "things we call NP hard problems that we",
    "start": "114119",
    "end": "115920"
  },
  {
    "text": "can't solve that are non-polynomial and",
    "start": "115920",
    "end": "118259"
  },
  {
    "text": "non-polynomial time",
    "start": "118259",
    "end": "119939"
  },
  {
    "text": "so they're really really hard problems",
    "start": "119939",
    "end": "121500"
  },
  {
    "text": "they take exponential amount of time to",
    "start": "121500",
    "end": "123780"
  },
  {
    "text": "solve and what whoops what Quantum",
    "start": "123780",
    "end": "126479"
  },
  {
    "text": "Computing does",
    "start": "126479",
    "end": "128220"
  },
  {
    "text": "um",
    "start": "128220",
    "end": "128880"
  },
  {
    "text": "is it enables us to solve",
    "start": "128880",
    "end": "131400"
  },
  {
    "text": "some of those hard problems",
    "start": "131400",
    "end": "134040"
  },
  {
    "text": "um",
    "start": "134040",
    "end": "134819"
  },
  {
    "text": "so things like the traveling sales",
    "start": "134819",
    "end": "137459"
  },
  {
    "text": "person for example factoring large",
    "start": "137459",
    "end": "139140"
  },
  {
    "text": "numbers those are things that with",
    "start": "139140",
    "end": "141000"
  },
  {
    "text": "quantum computers we can build efficient",
    "start": "141000",
    "end": "142680"
  },
  {
    "text": "solutions to things that don't run an",
    "start": "142680",
    "end": "144000"
  },
  {
    "text": "exponential time but can run in",
    "start": "144000",
    "end": "146099"
  },
  {
    "text": "polynomial time",
    "start": "146099",
    "end": "148500"
  },
  {
    "text": "um and the key piece this is to note is",
    "start": "148500",
    "end": "150239"
  },
  {
    "text": "that it's not that quantum computers are",
    "start": "150239",
    "end": "152160"
  },
  {
    "text": "going to like replace classical",
    "start": "152160",
    "end": "153540"
  },
  {
    "text": "computers we aren't going to you know",
    "start": "153540",
    "end": "154980"
  },
  {
    "text": "have quantum computers in our pockets or",
    "start": "154980",
    "end": "156540"
  },
  {
    "text": "in our laptops",
    "start": "156540",
    "end": "157920"
  },
  {
    "text": "um",
    "start": "157920",
    "end": "158520"
  },
  {
    "text": "at least not any time in the you know",
    "start": "158520",
    "end": "160260"
  },
  {
    "text": "foreseeable future",
    "start": "160260",
    "end": "162060"
  },
  {
    "text": "but it's classical in combination with",
    "start": "162060",
    "end": "164280"
  },
  {
    "text": "Quantum that is where we get these speed",
    "start": "164280",
    "end": "165900"
  },
  {
    "text": "ups and what do I mean by that",
    "start": "165900",
    "end": "168660"
  },
  {
    "text": "um",
    "start": "168660",
    "end": "170660"
  },
  {
    "text": "sorry",
    "start": "170819",
    "end": "171840"
  },
  {
    "text": "um these slides are a slight bit out of",
    "start": "171840",
    "end": "173519"
  },
  {
    "text": "order uh all right bear with me one",
    "start": "173519",
    "end": "176040"
  },
  {
    "text": "second",
    "start": "176040",
    "end": "178140"
  },
  {
    "text": "sorry",
    "start": "178140",
    "end": "180800"
  },
  {
    "text": "all right sorry about that okay where",
    "start": "202200",
    "end": "204780"
  },
  {
    "text": "were we",
    "start": "204780",
    "end": "206220"
  },
  {
    "text": "um",
    "start": "206220",
    "end": "207300"
  },
  {
    "text": "classical and Quantum combined and to",
    "start": "207300",
    "end": "210000"
  },
  {
    "text": "think about kind of what this would look",
    "start": "210000",
    "end": "211379"
  },
  {
    "text": "like is that when we're building any",
    "start": "211379",
    "end": "212879"
  },
  {
    "text": "type of",
    "start": "212879",
    "end": "214140"
  },
  {
    "text": "applications not just a single thing",
    "start": "214140",
    "end": "215879"
  },
  {
    "text": "that we're trying to solve there are",
    "start": "215879",
    "end": "216959"
  },
  {
    "text": "multiple pieces",
    "start": "216959",
    "end": "218519"
  },
  {
    "text": "um that we want to do in any particular",
    "start": "218519",
    "end": "220080"
  },
  {
    "text": "application it breaks down into a set of",
    "start": "220080",
    "end": "221819"
  },
  {
    "text": "different sub problems",
    "start": "221819",
    "end": "223980"
  },
  {
    "text": "and essentially what we're going to do",
    "start": "223980",
    "end": "225299"
  },
  {
    "text": "is we want to optimize each particular",
    "start": "225299",
    "end": "227040"
  },
  {
    "text": "sub problem so that it runs in the type",
    "start": "227040",
    "end": "229620"
  },
  {
    "text": "of Mr environment that provides the",
    "start": "229620",
    "end": "231180"
  },
  {
    "text": "optimal solution for it so it might be",
    "start": "231180",
    "end": "233519"
  },
  {
    "text": "that you know sub problem one runs Best",
    "start": "233519",
    "end": "235920"
  },
  {
    "text": "In classical compute so we'll run it in",
    "start": "235920",
    "end": "237540"
  },
  {
    "text": "classical compute it might be that sub",
    "start": "237540",
    "end": "239099"
  },
  {
    "text": "problem two runs better on as a Quantum",
    "start": "239099",
    "end": "241980"
  },
  {
    "text": "algorithm so we'll run it in Quantum but",
    "start": "241980",
    "end": "244260"
  },
  {
    "text": "the key is we want to optimize those",
    "start": "244260",
    "end": "246060"
  },
  {
    "text": "individual pieces so they run in the",
    "start": "246060",
    "end": "247620"
  },
  {
    "text": "best place possible",
    "start": "247620",
    "end": "249659"
  },
  {
    "text": "and kind of the marrying of these",
    "start": "249659",
    "end": "251159"
  },
  {
    "text": "classical and Quantum compute as we",
    "start": "251159",
    "end": "253560"
  },
  {
    "text": "orchestrate these workloads is kind of",
    "start": "253560",
    "end": "254939"
  },
  {
    "text": "what we're calling middleware for",
    "start": "254939",
    "end": "256139"
  },
  {
    "text": "Quantum Quantum serverless again the",
    "start": "256139",
    "end": "258660"
  },
  {
    "text": "combination of classical and quantum and",
    "start": "258660",
    "end": "261299"
  },
  {
    "text": "the point being that you know when a",
    "start": "261299",
    "end": "262560"
  },
  {
    "text": "user has an application they write it up",
    "start": "262560",
    "end": "264180"
  },
  {
    "text": "they send it out and middleware can",
    "start": "264180",
    "end": "266759"
  },
  {
    "text": "essentially form it out to the right",
    "start": "266759",
    "end": "267960"
  },
  {
    "text": "place for it to run whether it's Quantum",
    "start": "267960",
    "end": "269460"
  },
  {
    "text": "whether it's classical whether it's HPC",
    "start": "269460",
    "end": "271699"
  },
  {
    "text": "whatever it happens to be",
    "start": "271699",
    "end": "274440"
  },
  {
    "text": "so that's abstract let's look at this a",
    "start": "274440",
    "end": "277380"
  },
  {
    "text": "bit more specifically let's look at an",
    "start": "277380",
    "end": "279660"
  },
  {
    "text": "example something we call circuit",
    "start": "279660",
    "end": "280800"
  },
  {
    "text": "knitting so we have a Quantum circuit",
    "start": "280800",
    "end": "282840"
  },
  {
    "text": "here in the left and we're going to talk",
    "start": "282840",
    "end": "283979"
  },
  {
    "text": "a little high level here we got a",
    "start": "283979",
    "end": "285180"
  },
  {
    "text": "Quantum circle on the left",
    "start": "285180",
    "end": "286800"
  },
  {
    "text": "and essentially what circuit knitting is",
    "start": "286800",
    "end": "288479"
  },
  {
    "text": "is the ability to cut a circuit into two",
    "start": "288479",
    "end": "291180"
  },
  {
    "text": "smaller circuits that are mathematically",
    "start": "291180",
    "end": "294360"
  },
  {
    "text": "equivalent to the larger circuit so this",
    "start": "294360",
    "end": "296639"
  },
  {
    "text": "has applications in a number of places",
    "start": "296639",
    "end": "298580"
  },
  {
    "text": "one if you're trying to run a big",
    "start": "298580",
    "end": "301080"
  },
  {
    "text": "circuit on a small machine you can cut",
    "start": "301080",
    "end": "303660"
  },
  {
    "text": "it into smaller circuits that can fit",
    "start": "303660",
    "end": "305040"
  },
  {
    "text": "into that machine",
    "start": "305040",
    "end": "306960"
  },
  {
    "text": "um the other is that the two smaller",
    "start": "306960",
    "end": "308400"
  },
  {
    "text": "circuits might run faster than the one",
    "start": "308400",
    "end": "310860"
  },
  {
    "text": "larger circuit",
    "start": "310860",
    "end": "312300"
  },
  {
    "text": "um",
    "start": "312300",
    "end": "313139"
  },
  {
    "text": "so what would this workload look like",
    "start": "313139",
    "end": "314580"
  },
  {
    "text": "this would be you know this is just",
    "start": "314580",
    "end": "316740"
  },
  {
    "text": "again kind of a high level kind of what",
    "start": "316740",
    "end": "318000"
  },
  {
    "text": "this might look like but when we write",
    "start": "318000",
    "end": "319020"
  },
  {
    "text": "their program",
    "start": "319020",
    "end": "320220"
  },
  {
    "text": "to do some circuit knitting you would",
    "start": "320220",
    "end": "321660"
  },
  {
    "text": "send your program out to the cloud",
    "start": "321660",
    "end": "323820"
  },
  {
    "text": "you would run a cloud step that would",
    "start": "323820",
    "end": "325259"
  },
  {
    "text": "decompose do that circuit cutting aspect",
    "start": "325259",
    "end": "327840"
  },
  {
    "text": "where you would cut it into two smaller",
    "start": "327840",
    "end": "329280"
  },
  {
    "text": "circuits you would then Farm",
    "start": "329280",
    "end": "331560"
  },
  {
    "text": "the quantum circuits out to quantum",
    "start": "331560",
    "end": "334320"
  },
  {
    "text": "computers in parallel those results",
    "start": "334320",
    "end": "336419"
  },
  {
    "text": "would run you would pull them back to",
    "start": "336419",
    "end": "337919"
  },
  {
    "text": "classical reconstruct the results build",
    "start": "337919",
    "end": "340199"
  },
  {
    "text": "it and send it back to your program",
    "start": "340199",
    "end": "342419"
  },
  {
    "text": "and that's Quantum middleware in a very",
    "start": "342419",
    "end": "344039"
  },
  {
    "text": "very um",
    "start": "344039",
    "end": "345660"
  },
  {
    "text": "high level overview so how do we build",
    "start": "345660",
    "end": "348479"
  },
  {
    "text": "that",
    "start": "348479",
    "end": "349620"
  },
  {
    "text": "um",
    "start": "349620",
    "end": "350400"
  },
  {
    "text": "and essentially there are you know two",
    "start": "350400",
    "end": "352560"
  },
  {
    "text": "choices that seemed that we looked at we",
    "start": "352560",
    "end": "355740"
  },
  {
    "text": "looked at k-native which is what my team",
    "start": "355740",
    "end": "357419"
  },
  {
    "text": "is very familiar with we also looked at",
    "start": "357419",
    "end": "359039"
  },
  {
    "text": "Ray so",
    "start": "359039",
    "end": "361080"
  },
  {
    "text": "how do we compare these two the easy",
    "start": "361080",
    "end": "362520"
  },
  {
    "text": "thing to do is basically build the two",
    "start": "362520",
    "end": "364320"
  },
  {
    "text": "and see what happens so that's what",
    "start": "364320",
    "end": "366900"
  },
  {
    "text": "we're going to do now is look at how we",
    "start": "366900",
    "end": "368100"
  },
  {
    "text": "built each of these applications all",
    "start": "368100",
    "end": "370919"
  },
  {
    "text": "right",
    "start": "370919",
    "end": "372720"
  },
  {
    "text": "so just a little bit of background",
    "start": "372720",
    "end": "374419"
  },
  {
    "text": "Quantum programs are usually written in",
    "start": "374419",
    "end": "377340"
  },
  {
    "text": "Python using kind of the kiss kit SDK",
    "start": "377340",
    "end": "379860"
  },
  {
    "text": "and this is a very very high level",
    "start": "379860",
    "end": "381479"
  },
  {
    "text": "example of what something like that",
    "start": "381479",
    "end": "383220"
  },
  {
    "text": "might look like",
    "start": "383220",
    "end": "384900"
  },
  {
    "text": "you know it's python so it's nice and",
    "start": "384900",
    "end": "386340"
  },
  {
    "text": "simple you know we're doing some",
    "start": "386340",
    "end": "387539"
  },
  {
    "text": "pre-processing where we're building",
    "start": "387539",
    "end": "390300"
  },
  {
    "text": "um in lines like six through elevens",
    "start": "390300",
    "end": "391740"
  },
  {
    "text": "where we're building the circuit",
    "start": "391740",
    "end": "393660"
  },
  {
    "text": "then in like 13 15 is where we're",
    "start": "393660",
    "end": "395280"
  },
  {
    "text": "running the circuit and then 17 and 18",
    "start": "395280",
    "end": "397080"
  },
  {
    "text": "are kind of pulling the results back",
    "start": "397080",
    "end": "398819"
  },
  {
    "text": "from the Run circuit so classical",
    "start": "398819",
    "end": "401039"
  },
  {
    "text": "Quantum classical",
    "start": "401039",
    "end": "404060"
  },
  {
    "text": "so essentially our problems we have to",
    "start": "404639",
    "end": "405780"
  },
  {
    "text": "figure out how do we run this",
    "start": "405780",
    "end": "406560"
  },
  {
    "text": "application so if we're going to use",
    "start": "406560",
    "end": "408539"
  },
  {
    "text": "k-native",
    "start": "408539",
    "end": "409800"
  },
  {
    "text": "um let's talk a little bit about what K",
    "start": "409800",
    "end": "411300"
  },
  {
    "text": "native is",
    "start": "411300",
    "end": "412680"
  },
  {
    "text": "um",
    "start": "412680",
    "end": "413940"
  },
  {
    "text": "K native is",
    "start": "413940",
    "end": "416160"
  },
  {
    "text": "really a way to simplify running",
    "start": "416160",
    "end": "418080"
  },
  {
    "text": "applications on kubernetes",
    "start": "418080",
    "end": "420500"
  },
  {
    "text": "and it's composed of three Three core",
    "start": "420500",
    "end": "423360"
  },
  {
    "text": "parts and some other parts but each and",
    "start": "423360",
    "end": "425520"
  },
  {
    "text": "each of those parts can be used",
    "start": "425520",
    "end": "426479"
  },
  {
    "text": "independently or together",
    "start": "426479",
    "end": "428479"
  },
  {
    "text": "and they each aim to kind of simplify a",
    "start": "428479",
    "end": "431039"
  },
  {
    "text": "certain piece of the work in kubernetes",
    "start": "431039",
    "end": "432960"
  },
  {
    "text": "so functions are a very easy way to kind",
    "start": "432960",
    "end": "436080"
  },
  {
    "text": "of replicate the Lambda functionality",
    "start": "436080",
    "end": "438840"
  },
  {
    "text": "um",
    "start": "438840",
    "end": "439440"
  },
  {
    "text": "in kubernetes it's you have some code",
    "start": "439440",
    "end": "441300"
  },
  {
    "text": "and I want to run it I don't care how it",
    "start": "441300",
    "end": "443220"
  },
  {
    "text": "runs just run it for me you can use",
    "start": "443220",
    "end": "444599"
  },
  {
    "text": "functions to take that code and turn it",
    "start": "444599",
    "end": "446880"
  },
  {
    "text": "into a runnable container with just one",
    "start": "446880",
    "end": "449340"
  },
  {
    "text": "line so you don't have to worry about",
    "start": "449340",
    "end": "450360"
  },
  {
    "text": "any of the the build any of the",
    "start": "450360",
    "end": "452220"
  },
  {
    "text": "packaging anything of that functions",
    "start": "452220",
    "end": "453660"
  },
  {
    "text": "take care of that for you",
    "start": "453660",
    "end": "456740"
  },
  {
    "text": "um Eventing if you have event driven",
    "start": "456900",
    "end": "458340"
  },
  {
    "text": "workflows",
    "start": "458340",
    "end": "460139"
  },
  {
    "text": "Eventing gives you a single interface",
    "start": "460139",
    "end": "462660"
  },
  {
    "text": "for a variety of sources and syncs you",
    "start": "462660",
    "end": "464639"
  },
  {
    "text": "can chain those events together using a",
    "start": "464639",
    "end": "468240"
  },
  {
    "text": "single API in a declarative fashion",
    "start": "468240",
    "end": "471960"
  },
  {
    "text": "and then serving if you have a container",
    "start": "471960",
    "end": "473520"
  },
  {
    "text": "that speaks HTTP serving will allow you",
    "start": "473520",
    "end": "476039"
  },
  {
    "text": "to take that container and run it and do",
    "start": "476039",
    "end": "477720"
  },
  {
    "text": "all the background pieces that you might",
    "start": "477720",
    "end": "479220"
  },
  {
    "text": "not want to have to worry about things",
    "start": "479220",
    "end": "480720"
  },
  {
    "text": "like scaling requests managing rollbacks",
    "start": "480720",
    "end": "483840"
  },
  {
    "text": "and revisions or the the updates you",
    "start": "483840",
    "end": "486060"
  },
  {
    "text": "make to your application health checks",
    "start": "486060",
    "end": "489660"
  },
  {
    "text": "and all the security pieces that you",
    "start": "489660",
    "end": "491340"
  },
  {
    "text": "would want to do all right again high",
    "start": "491340",
    "end": "493560"
  },
  {
    "text": "level K native so what might this look",
    "start": "493560",
    "end": "495060"
  },
  {
    "text": "like if you're going to run this as a",
    "start": "495060",
    "end": "496080"
  },
  {
    "text": "demo on K native and bear with me as I",
    "start": "496080",
    "end": "498599"
  },
  {
    "text": "switch the displays around here",
    "start": "498599",
    "end": "502160"
  },
  {
    "text": "all right",
    "start": "505020",
    "end": "507539"
  },
  {
    "text": "so",
    "start": "507539",
    "end": "508860"
  },
  {
    "text": "on the left can we read this at all all",
    "start": "508860",
    "end": "511979"
  },
  {
    "text": "right",
    "start": "511979",
    "end": "513060"
  },
  {
    "text": "make it see if I can make it a little",
    "start": "513060",
    "end": "514740"
  },
  {
    "text": "bigger too",
    "start": "514740",
    "end": "516899"
  },
  {
    "text": "essentially what we have running we've",
    "start": "516899",
    "end": "518219"
  },
  {
    "text": "got a k service a k-native service it's",
    "start": "518219",
    "end": "520860"
  },
  {
    "text": "got that URL Point basically what we're",
    "start": "520860",
    "end": "523080"
  },
  {
    "text": "going to do is we're going to take our",
    "start": "523080",
    "end": "524219"
  },
  {
    "text": "application we're going to package that",
    "start": "524219",
    "end": "525720"
  },
  {
    "text": "code ship it off to k-native let",
    "start": "525720",
    "end": "527399"
  },
  {
    "text": "k-native run it and spit results back to",
    "start": "527399",
    "end": "529380"
  },
  {
    "text": "us now you'll notice in the second one",
    "start": "529380",
    "end": "531360"
  },
  {
    "text": "here we don't have any pods up here",
    "start": "531360",
    "end": "532740"
  },
  {
    "text": "currently okay native scales down to",
    "start": "532740",
    "end": "534660"
  },
  {
    "text": "zero when it's not running",
    "start": "534660",
    "end": "536279"
  },
  {
    "text": "so when we go through",
    "start": "536279",
    "end": "539660"
  },
  {
    "text": "and bear with me one second and we run",
    "start": "540180",
    "end": "541800"
  },
  {
    "text": "this which is this code right here is",
    "start": "541800",
    "end": "543000"
  },
  {
    "text": "just going to run this we Define a",
    "start": "543000",
    "end": "544200"
  },
  {
    "text": "function we give it a decorator like",
    "start": "544200",
    "end": "547019"
  },
  {
    "text": "we're familiar with to run it remotely",
    "start": "547019",
    "end": "548279"
  },
  {
    "text": "we run it and pull back results",
    "start": "548279",
    "end": "550860"
  },
  {
    "text": "what we're going to see happen is and I",
    "start": "550860",
    "end": "553140"
  },
  {
    "text": "should have been watching you'll see a",
    "start": "553140",
    "end": "554160"
  },
  {
    "text": "new pod that spins up to handle that",
    "start": "554160",
    "end": "556320"
  },
  {
    "text": "request",
    "start": "556320",
    "end": "558680"
  },
  {
    "text": "so if we watch these logs and we want to",
    "start": "560519",
    "end": "562200"
  },
  {
    "text": "run a bunch of these for example we can",
    "start": "562200",
    "end": "563940"
  },
  {
    "text": "run 10 of these we'll see kind of 10 new",
    "start": "563940",
    "end": "566339"
  },
  {
    "text": "results pop up",
    "start": "566339",
    "end": "569040"
  },
  {
    "text": "and that's k-native running Quantum",
    "start": "569040",
    "end": "571080"
  },
  {
    "text": "service we have a code we want to run we",
    "start": "571080",
    "end": "573000"
  },
  {
    "text": "send it out we let k-native run it spits",
    "start": "573000",
    "end": "575459"
  },
  {
    "text": "it back",
    "start": "575459",
    "end": "576360"
  },
  {
    "text": "it's nice",
    "start": "576360",
    "end": "578959"
  },
  {
    "text": "where were we we ran our demo okay now",
    "start": "591779",
    "end": "594959"
  },
  {
    "text": "there's a couple of pain points in",
    "start": "594959",
    "end": "596160"
  },
  {
    "text": "running this in k-native",
    "start": "596160",
    "end": "597779"
  },
  {
    "text": "um one is that everything's built you",
    "start": "597779",
    "end": "599640"
  },
  {
    "text": "know creative uses containers",
    "start": "599640",
    "end": "601440"
  },
  {
    "text": "so containers can sometimes take a while",
    "start": "601440",
    "end": "603480"
  },
  {
    "text": "to build they can sometimes take a while",
    "start": "603480",
    "end": "604860"
  },
  {
    "text": "to start",
    "start": "604860",
    "end": "606060"
  },
  {
    "text": "so kind of the startup time can be",
    "start": "606060",
    "end": "608580"
  },
  {
    "text": "problematic in k-native",
    "start": "608580",
    "end": "610500"
  },
  {
    "text": "uh but the second piece is really",
    "start": "610500",
    "end": "612120"
  },
  {
    "text": "problematic is if we want to you know",
    "start": "612120",
    "end": "613800"
  },
  {
    "text": "that was a very simple example we were",
    "start": "613800",
    "end": "615120"
  },
  {
    "text": "in one circuit and returned a result",
    "start": "615120",
    "end": "617160"
  },
  {
    "text": "but if I want to run multiple workloads",
    "start": "617160",
    "end": "619260"
  },
  {
    "text": "or multiple steps of a workflow we can't",
    "start": "619260",
    "end": "622019"
  },
  {
    "text": "really manage that in k-native we need",
    "start": "622019",
    "end": "623519"
  },
  {
    "text": "something else over top of it to do that",
    "start": "623519",
    "end": "625019"
  },
  {
    "text": "so that kind of becomes",
    "start": "625019",
    "end": "626700"
  },
  {
    "text": "a really big pain point because a lot of",
    "start": "626700",
    "end": "629220"
  },
  {
    "text": "our workloads are not just run it once",
    "start": "629220",
    "end": "630660"
  },
  {
    "text": "and forget about it it's their iterative",
    "start": "630660",
    "end": "632100"
  },
  {
    "text": "processes",
    "start": "632100",
    "end": "633420"
  },
  {
    "text": "that sounds familiar that sounds like",
    "start": "633420",
    "end": "635040"
  },
  {
    "text": "something Ray does fairly well",
    "start": "635040",
    "end": "637560"
  },
  {
    "text": "I'm not going to spend a lot of time",
    "start": "637560",
    "end": "638700"
  },
  {
    "text": "talking about Ray since it's Ray Summit",
    "start": "638700",
    "end": "640260"
  },
  {
    "text": "I assume we're all familiar with it but",
    "start": "640260",
    "end": "642300"
  },
  {
    "text": "we can you know chain these workloads",
    "start": "642300",
    "end": "643800"
  },
  {
    "text": "together really really well we can run",
    "start": "643800",
    "end": "645120"
  },
  {
    "text": "them in kubernetes using Cube Ray and in",
    "start": "645120",
    "end": "648480"
  },
  {
    "text": "fact the workflow I showed before very",
    "start": "648480",
    "end": "650880"
  },
  {
    "text": "very simple to do that in Rays just use",
    "start": "650880",
    "end": "652620"
  },
  {
    "text": "the ray decorator to run remote you can",
    "start": "652620",
    "end": "655740"
  },
  {
    "text": "run your jobs remotely it pulls it back",
    "start": "655740",
    "end": "657540"
  },
  {
    "text": "so essentially we had reinvented that in",
    "start": "657540",
    "end": "659700"
  },
  {
    "text": "k-native",
    "start": "659700",
    "end": "661140"
  },
  {
    "text": "now",
    "start": "661140",
    "end": "662579"
  },
  {
    "text": "with kind of the standard you know Ray",
    "start": "662579",
    "end": "665040"
  },
  {
    "text": "distributed task we did run into a",
    "start": "665040",
    "end": "666600"
  },
  {
    "text": "couple of pain points one's the issue of",
    "start": "666600",
    "end": "668760"
  },
  {
    "text": "ephemeral compute we don't want to leave",
    "start": "668760",
    "end": "670200"
  },
  {
    "text": "things running we don't need them and I",
    "start": "670200",
    "end": "672899"
  },
  {
    "text": "think the raid jobs API is still in",
    "start": "672899",
    "end": "675420"
  },
  {
    "text": "Alpha at this point or at least it was",
    "start": "675420",
    "end": "676620"
  },
  {
    "text": "when the last time I checked so not",
    "start": "676620",
    "end": "678420"
  },
  {
    "text": "quite ready for production yet so we had",
    "start": "678420",
    "end": "680399"
  },
  {
    "text": "to kind of come up with a solution for",
    "start": "680399",
    "end": "682019"
  },
  {
    "text": "ourselves there and the other piece kind",
    "start": "682019",
    "end": "684180"
  },
  {
    "text": "of if multi-tenancy if we you know",
    "start": "684180",
    "end": "685500"
  },
  {
    "text": "running one person in a cluster is great",
    "start": "685500",
    "end": "687360"
  },
  {
    "text": "but if you want to run multiple people",
    "start": "687360",
    "end": "688620"
  },
  {
    "text": "how do we manage those resources how do",
    "start": "688620",
    "end": "690660"
  },
  {
    "text": "we keep those secure",
    "start": "690660",
    "end": "692459"
  },
  {
    "text": "how do we keep those isolated",
    "start": "692459",
    "end": "694560"
  },
  {
    "text": "and so we did a little bit of tweaking",
    "start": "694560",
    "end": "697260"
  },
  {
    "text": "around to get there so let's see what",
    "start": "697260",
    "end": "699180"
  },
  {
    "text": "this might look like in Rey",
    "start": "699180",
    "end": "702560"
  },
  {
    "text": "all right",
    "start": "709320",
    "end": "711860"
  },
  {
    "text": "all right so they'll just switched to a",
    "start": "723180",
    "end": "724680"
  },
  {
    "text": "different cluster that has Ray running",
    "start": "724680",
    "end": "726240"
  },
  {
    "text": "on it so you can see we've got some pods",
    "start": "726240",
    "end": "727800"
  },
  {
    "text": "up here that are running to make that a",
    "start": "727800",
    "end": "728820"
  },
  {
    "text": "little bigger",
    "start": "728820",
    "end": "730440"
  },
  {
    "text": "so we can read that",
    "start": "730440",
    "end": "732000"
  },
  {
    "text": "um",
    "start": "732000",
    "end": "732600"
  },
  {
    "text": "so we've got a Gateway that handles the",
    "start": "732600",
    "end": "734100"
  },
  {
    "text": "the request I've got a Jupiter notebook",
    "start": "734100",
    "end": "735600"
  },
  {
    "text": "running which is where I'm going to run",
    "start": "735600",
    "end": "736800"
  },
  {
    "text": "this thing some background stuff to",
    "start": "736800",
    "end": "739860"
  },
  {
    "text": "manage State and a scheduler which is",
    "start": "739860",
    "end": "741779"
  },
  {
    "text": "what handles running",
    "start": "741779",
    "end": "745380"
  },
  {
    "text": "um the applications so I'm going to just",
    "start": "745920",
    "end": "748079"
  },
  {
    "text": "also though the scheduler logs over here",
    "start": "748079",
    "end": "750300"
  },
  {
    "text": "so we can kind of watch this go let's",
    "start": "750300",
    "end": "751920"
  },
  {
    "text": "make that a little bigger too",
    "start": "751920",
    "end": "754880"
  },
  {
    "text": "okay and now it's a runner program",
    "start": "754980",
    "end": "756600"
  },
  {
    "text": "essentially what we did to run our",
    "start": "756600",
    "end": "757740"
  },
  {
    "text": "program again can we read you know this",
    "start": "757740",
    "end": "760200"
  },
  {
    "text": "is",
    "start": "760200",
    "end": "761279"
  },
  {
    "text": "code that we're going to run instead of",
    "start": "761279",
    "end": "762360"
  },
  {
    "text": "running it in a Jupiter notebook we've",
    "start": "762360",
    "end": "764160"
  },
  {
    "text": "got it saved as a file we're going to",
    "start": "764160",
    "end": "765420"
  },
  {
    "text": "run that file so we'll ship that whole",
    "start": "765420",
    "end": "766680"
  },
  {
    "text": "file off to Ray to let it run for us",
    "start": "766680",
    "end": "770279"
  },
  {
    "text": "um so we'll do some",
    "start": "770279",
    "end": "771779"
  },
  {
    "text": "fun things like this we'll import it",
    "start": "771779",
    "end": "774120"
  },
  {
    "text": "we've got a provider which is just kind",
    "start": "774120",
    "end": "776040"
  },
  {
    "text": "of our wrapper that handles the",
    "start": "776040",
    "end": "777300"
  },
  {
    "text": "scheduling for us and then",
    "start": "777300",
    "end": "779760"
  },
  {
    "text": "let's run our program",
    "start": "779760",
    "end": "781560"
  },
  {
    "text": "what we'll see happen here in the top is",
    "start": "781560",
    "end": "783120"
  },
  {
    "text": "all of a sudden we're going to spin up",
    "start": "783120",
    "end": "784920"
  },
  {
    "text": "um",
    "start": "784920",
    "end": "785880"
  },
  {
    "text": "there we go at the very top we spun up a",
    "start": "785880",
    "end": "787680"
  },
  {
    "text": "ray head node and array worker node for",
    "start": "787680",
    "end": "789959"
  },
  {
    "text": "this specific application map to this",
    "start": "789959",
    "end": "792360"
  },
  {
    "text": "user name is a c user whatever that hash",
    "start": "792360",
    "end": "794459"
  },
  {
    "text": "is that's who I am right now",
    "start": "794459",
    "end": "797579"
  },
  {
    "text": "um it's always fun doing these things",
    "start": "797579",
    "end": "798779"
  },
  {
    "text": "live on Hotel Wi-Fi because you never",
    "start": "798779",
    "end": "800519"
  },
  {
    "text": "know if it's going to work or not",
    "start": "800519",
    "end": "802320"
  },
  {
    "text": "um it worked earlier so we'll keep our",
    "start": "802320",
    "end": "804180"
  },
  {
    "text": "fingers crossed but we're going to see",
    "start": "804180",
    "end": "805860"
  },
  {
    "text": "the Pod is going to but once the head",
    "start": "805860",
    "end": "807300"
  },
  {
    "text": "and the worker are running we'll see",
    "start": "807300",
    "end": "808740"
  },
  {
    "text": "down here that the head node you know",
    "start": "808740",
    "end": "810420"
  },
  {
    "text": "you see a lot in the logs it's not ready",
    "start": "810420",
    "end": "811740"
  },
  {
    "text": "yet if we wanted to we can take a look",
    "start": "811740",
    "end": "814500"
  },
  {
    "text": "and check the job status and it'll show",
    "start": "814500",
    "end": "816120"
  },
  {
    "text": "it's",
    "start": "816120",
    "end": "816899"
  },
  {
    "text": "queued",
    "start": "816899",
    "end": "819500"
  },
  {
    "text": "okay now we're both running we're going",
    "start": "822300",
    "end": "824279"
  },
  {
    "text": "to connect",
    "start": "824279",
    "end": "825480"
  },
  {
    "text": "the job's been accepted",
    "start": "825480",
    "end": "828680"
  },
  {
    "text": "I guess I could look down here and see",
    "start": "831240",
    "end": "832620"
  },
  {
    "text": "or hear and see what it's saying too",
    "start": "832620",
    "end": "835940"
  },
  {
    "text": "did it succeed did I miss it succeeding",
    "start": "837420",
    "end": "839519"
  },
  {
    "text": "I did miss exceeding the job succeeded",
    "start": "839519",
    "end": "842880"
  },
  {
    "text": "um and then what you're going to see",
    "start": "842880",
    "end": "843660"
  },
  {
    "text": "happen is the head and the worker nodes",
    "start": "843660",
    "end": "845100"
  },
  {
    "text": "will terminate and they'll spin down",
    "start": "845100",
    "end": "847920"
  },
  {
    "text": "um and any user that's logged in can you",
    "start": "847920",
    "end": "849839"
  },
  {
    "text": "know will spin up their own things in",
    "start": "849839",
    "end": "850980"
  },
  {
    "text": "their own kind of isolated pods",
    "start": "850980",
    "end": "853260"
  },
  {
    "text": "nice and fun",
    "start": "853260",
    "end": "856160"
  },
  {
    "text": "all right",
    "start": "856260",
    "end": "858920"
  },
  {
    "text": "okay",
    "start": "867120",
    "end": "869480"
  },
  {
    "text": "lessons learned it's went a lot quicker",
    "start": "870060",
    "end": "871740"
  },
  {
    "text": "than I thought",
    "start": "871740",
    "end": "872940"
  },
  {
    "text": "um",
    "start": "872940",
    "end": "874139"
  },
  {
    "text": "Lessons Learned so I guess one of the",
    "start": "874139",
    "end": "876899"
  },
  {
    "text": "first things that kind of we learned in",
    "start": "876899",
    "end": "878040"
  },
  {
    "text": "doing this exercise is that",
    "start": "878040",
    "end": "880740"
  },
  {
    "text": "you know k-native and Rey you know we",
    "start": "880740",
    "end": "883260"
  },
  {
    "text": "talk about running service applications",
    "start": "883260",
    "end": "884459"
  },
  {
    "text": "they operate in slightly different",
    "start": "884459",
    "end": "885899"
  },
  {
    "text": "spaces",
    "start": "885899",
    "end": "887060"
  },
  {
    "text": "there's a lot of overlap but there are",
    "start": "887060",
    "end": "889680"
  },
  {
    "text": "some differences amongst them as well",
    "start": "889680",
    "end": "891660"
  },
  {
    "text": "um",
    "start": "891660",
    "end": "892560"
  },
  {
    "text": "you know both allow you to run",
    "start": "892560",
    "end": "894480"
  },
  {
    "text": "distributed applications you can use Ray",
    "start": "894480",
    "end": "896100"
  },
  {
    "text": "core to do that if you're using Ray you",
    "start": "896100",
    "end": "898019"
  },
  {
    "text": "can use functions do that in k-native",
    "start": "898019",
    "end": "899779"
  },
  {
    "text": "you can run in kubernetes you know Ray",
    "start": "899779",
    "end": "902579"
  },
  {
    "text": "Ray cluster versus the kubernetes the",
    "start": "902579",
    "end": "905760"
  },
  {
    "text": "k-native K service",
    "start": "905760",
    "end": "907500"
  },
  {
    "text": "lets you run in kubernetes and serving",
    "start": "907500",
    "end": "911040"
  },
  {
    "text": "you know both the applications that are",
    "start": "911040",
    "end": "912600"
  },
  {
    "text": "called server serving handle that",
    "start": "912600",
    "end": "916220"
  },
  {
    "text": "because of Rey's focus on kind of mlai",
    "start": "916320",
    "end": "919139"
  },
  {
    "text": "and that type of workspace you know the",
    "start": "919139",
    "end": "921240"
  },
  {
    "text": "Train the tune the data those",
    "start": "921240",
    "end": "922920"
  },
  {
    "text": "applications there's not an equivalent",
    "start": "922920",
    "end": "924480"
  },
  {
    "text": "in k-native",
    "start": "924480",
    "end": "926399"
  },
  {
    "text": "um",
    "start": "926399",
    "end": "927240"
  },
  {
    "text": "so that's kind of a space where k-native",
    "start": "927240",
    "end": "928620"
  },
  {
    "text": "doesn't so particularly when you're",
    "start": "928620",
    "end": "929579"
  },
  {
    "text": "doing kind of iterative data type",
    "start": "929579",
    "end": "931320"
  },
  {
    "text": "workloads it's not a place where",
    "start": "931320",
    "end": "932579"
  },
  {
    "text": "k-native works very strongly",
    "start": "932579",
    "end": "935220"
  },
  {
    "text": "um at the same time Canadian has",
    "start": "935220",
    "end": "936779"
  },
  {
    "text": "Eventing uh Ray doesn't so again it's",
    "start": "936779",
    "end": "939000"
  },
  {
    "text": "just kind of outline that there are some",
    "start": "939000",
    "end": "940620"
  },
  {
    "text": "differences between the two different",
    "start": "940620",
    "end": "941760"
  },
  {
    "text": "types",
    "start": "941760",
    "end": "942899"
  },
  {
    "text": "of applications",
    "start": "942899",
    "end": "945240"
  },
  {
    "text": "all right so Lessons Learned",
    "start": "945240",
    "end": "947639"
  },
  {
    "text": "um or kind of uh more broadly speaking",
    "start": "947639",
    "end": "950399"
  },
  {
    "text": "some things you know for further",
    "start": "950399",
    "end": "952019"
  },
  {
    "text": "reflection",
    "start": "952019",
    "end": "953399"
  },
  {
    "text": "I think the biggest thing that we",
    "start": "953399",
    "end": "954899"
  },
  {
    "text": "learned that kind of missing parallelism",
    "start": "954899",
    "end": "957000"
  },
  {
    "text": "in k-native",
    "start": "957000",
    "end": "958380"
  },
  {
    "text": "um was really really made it hard to do",
    "start": "958380",
    "end": "960480"
  },
  {
    "text": "the type of work that we wanted to do in",
    "start": "960480",
    "end": "962459"
  },
  {
    "text": "k-native",
    "start": "962459",
    "end": "964220"
  },
  {
    "text": "because you're looking at a container",
    "start": "964220",
    "end": "966420"
  },
  {
    "text": "which is kind of its own isolated",
    "start": "966420",
    "end": "968699"
  },
  {
    "text": "thing if you want to send work out and",
    "start": "968699",
    "end": "971579"
  },
  {
    "text": "back it requires writing something on",
    "start": "971579",
    "end": "973260"
  },
  {
    "text": "top of it so if the container is not",
    "start": "973260",
    "end": "974699"
  },
  {
    "text": "necessarily the ideal",
    "start": "974699",
    "end": "977060"
  },
  {
    "text": "structure for running these types of",
    "start": "977060",
    "end": "979079"
  },
  {
    "text": "workloads",
    "start": "979079",
    "end": "980760"
  },
  {
    "text": "again a lot of the differences between",
    "start": "980760",
    "end": "982260"
  },
  {
    "text": "k-native and Ray comes down to you know",
    "start": "982260",
    "end": "984000"
  },
  {
    "text": "the question of you know what are we",
    "start": "984000",
    "end": "985139"
  },
  {
    "text": "talking about what's the object we're",
    "start": "985139",
    "end": "986339"
  },
  {
    "text": "working with",
    "start": "986339",
    "end": "987480"
  },
  {
    "text": "Ray works with distributed objects code",
    "start": "987480",
    "end": "989279"
  },
  {
    "text": "that we're sending around to run in",
    "start": "989279",
    "end": "990839"
  },
  {
    "text": "multiple different places",
    "start": "990839",
    "end": "992399"
  },
  {
    "text": "whereas k-native is working with",
    "start": "992399",
    "end": "993839"
  },
  {
    "text": "containers you know isolated autonomous",
    "start": "993839",
    "end": "996959"
  },
  {
    "text": "stateless",
    "start": "996959",
    "end": "998339"
  },
  {
    "text": "entities",
    "start": "998339",
    "end": "1001000"
  },
  {
    "text": "um",
    "start": "1003079",
    "end": "1004040"
  },
  {
    "text": "again",
    "start": "1004040",
    "end": "1005180"
  },
  {
    "text": "k-native is I mean this is in the name",
    "start": "1005180",
    "end": "1007420"
  },
  {
    "text": "kubernetes native so k-native runs kind",
    "start": "1007420",
    "end": "1010339"
  },
  {
    "text": "of as a you know first level",
    "start": "1010339",
    "end": "1013519"
  },
  {
    "text": "artifact in kubernetes right you kind of",
    "start": "1013519",
    "end": "1016100"
  },
  {
    "text": "have to pile a little bit abstractions",
    "start": "1016100",
    "end": "1017660"
  },
  {
    "text": "on top of to running kubernetes is that",
    "start": "1017660",
    "end": "1020060"
  },
  {
    "text": "an issue depends on your workload but",
    "start": "1020060",
    "end": "1022279"
  },
  {
    "text": "k-native is a little closer to the",
    "start": "1022279",
    "end": "1024500"
  },
  {
    "text": "ground",
    "start": "1024500",
    "end": "1025699"
  },
  {
    "text": "the question becomes is that important",
    "start": "1025699",
    "end": "1028520"
  },
  {
    "text": "do we always want to run things in",
    "start": "1028520",
    "end": "1030319"
  },
  {
    "text": "kubernetes is do we want is it better to",
    "start": "1030319",
    "end": "1032900"
  },
  {
    "text": "run some things in hpcs some things on",
    "start": "1032900",
    "end": "1035058"
  },
  {
    "text": "bare metal is cloud always the right",
    "start": "1035059",
    "end": "1036740"
  },
  {
    "text": "question",
    "start": "1036740",
    "end": "1038360"
  },
  {
    "text": "um again for I think for some AI",
    "start": "1038360",
    "end": "1039740"
  },
  {
    "text": "workloads the closer you can get down to",
    "start": "1039740",
    "end": "1041298"
  },
  {
    "text": "the hardware perhaps the better off you",
    "start": "1041299",
    "end": "1042918"
  },
  {
    "text": "are",
    "start": "1042919",
    "end": "1045100"
  },
  {
    "text": "um and then lastly kind of one thing",
    "start": "1045799",
    "end": "1047298"
  },
  {
    "text": "just worth mentioning is that you know",
    "start": "1047299",
    "end": "1048438"
  },
  {
    "text": "for open source projects you know",
    "start": "1048439",
    "end": "1050120"
  },
  {
    "text": "foundations do matter",
    "start": "1050120",
    "end": "1052040"
  },
  {
    "text": "um you know k-native is in the cncf it",
    "start": "1052040",
    "end": "1055039"
  },
  {
    "text": "wasn't initially which caused a bit of",
    "start": "1055039",
    "end": "1057860"
  },
  {
    "text": "her kerfuffle for lack of a better term",
    "start": "1057860",
    "end": "1061700"
  },
  {
    "text": "but you know foundations provide you",
    "start": "1061700",
    "end": "1064400"
  },
  {
    "text": "know vendor neutral uh governance",
    "start": "1064400",
    "end": "1067160"
  },
  {
    "text": "standards you know you know things won't",
    "start": "1067160",
    "end": "1069380"
  },
  {
    "text": "you know licenses won't change on you",
    "start": "1069380",
    "end": "1070700"
  },
  {
    "text": "out from underneath you things along",
    "start": "1070700",
    "end": "1071780"
  },
  {
    "text": "those lines",
    "start": "1071780",
    "end": "1073340"
  },
  {
    "text": "um so the importance of a foundation for",
    "start": "1073340",
    "end": "1075860"
  },
  {
    "text": "a good open source project",
    "start": "1075860",
    "end": "1077260"
  },
  {
    "text": "is key",
    "start": "1077260",
    "end": "1080059"
  },
  {
    "text": "so",
    "start": "1080059",
    "end": "1081320"
  },
  {
    "text": "wow all right so",
    "start": "1081320",
    "end": "1083240"
  },
  {
    "text": "that's pretty much all I had is went a",
    "start": "1083240",
    "end": "1084740"
  },
  {
    "text": "lot quicker than I thought it would I'll",
    "start": "1084740",
    "end": "1085760"
  },
  {
    "text": "leave these up here if you want to learn",
    "start": "1085760",
    "end": "1086900"
  },
  {
    "text": "more about Quantum Computing or kiss kit",
    "start": "1086900",
    "end": "1088640"
  },
  {
    "text": "or Quantum serverless you can you know",
    "start": "1088640",
    "end": "1089960"
  },
  {
    "text": "snap some pictures these are all links",
    "start": "1089960",
    "end": "1091820"
  },
  {
    "text": "are also in the slides",
    "start": "1091820",
    "end": "1093440"
  },
  {
    "text": "otherwise I guess we got time for",
    "start": "1093440",
    "end": "1095720"
  },
  {
    "text": "questions",
    "start": "1095720",
    "end": "1097900"
  },
  {
    "text": "sure",
    "start": "1100100",
    "end": "1102460"
  },
  {
    "text": "uh just referring to what you said about",
    "start": "1103400",
    "end": "1105679"
  },
  {
    "text": "containers versus objects so one",
    "start": "1105679",
    "end": "1108559"
  },
  {
    "text": "advantage of containers is that you can",
    "start": "1108559",
    "end": "1110660"
  },
  {
    "text": "put all your dependencies there and have",
    "start": "1110660",
    "end": "1113120"
  },
  {
    "text": "another container with completely",
    "start": "1113120",
    "end": "1114260"
  },
  {
    "text": "different environment running you know",
    "start": "1114260",
    "end": "1116299"
  },
  {
    "text": "in the same app and I just wonder if you",
    "start": "1116299",
    "end": "1118700"
  },
  {
    "text": "encountered that issue in Rey and how",
    "start": "1118700",
    "end": "1121340"
  },
  {
    "text": "did you deal with it like managing the",
    "start": "1121340",
    "end": "1123980"
  },
  {
    "text": "you know dependencies of your",
    "start": "1123980",
    "end": "1126820"
  },
  {
    "text": "workloads yeah so that's been",
    "start": "1126820",
    "end": "1130280"
  },
  {
    "text": "um a not fun problem",
    "start": "1130280",
    "end": "1133520"
  },
  {
    "text": "um yeah so we've we've essentially had",
    "start": "1133520",
    "end": "1134900"
  },
  {
    "text": "to package up you know when someone",
    "start": "1134900",
    "end": "1137600"
  },
  {
    "text": "uh birthday in one second let's see if I",
    "start": "1137600",
    "end": "1139820"
  },
  {
    "text": "can pull this um back up when we were",
    "start": "1139820",
    "end": "1141740"
  },
  {
    "text": "writing programs there's a way to pass",
    "start": "1141740",
    "end": "1143120"
  },
  {
    "text": "in dependencies which basically python",
    "start": "1143120",
    "end": "1144799"
  },
  {
    "text": "modules but yeah we basically have to",
    "start": "1144799",
    "end": "1146539"
  },
  {
    "text": "kind of",
    "start": "1146539",
    "end": "1147679"
  },
  {
    "text": "tar up all the dependencies that someone",
    "start": "1147679",
    "end": "1149660"
  },
  {
    "text": "wants to use any packages someone wants",
    "start": "1149660",
    "end": "1151160"
  },
  {
    "text": "to use and ship them along with it",
    "start": "1151160",
    "end": "1153620"
  },
  {
    "text": "um which is yeah not pleasant",
    "start": "1153620",
    "end": "1157460"
  },
  {
    "text": "um",
    "start": "1157460",
    "end": "1158539"
  },
  {
    "text": "is it less Pleasant than having to write",
    "start": "1158539",
    "end": "1161120"
  },
  {
    "text": "a distributed scheduler",
    "start": "1161120",
    "end": "1163760"
  },
  {
    "text": "so far yes",
    "start": "1163760",
    "end": "1166160"
  },
  {
    "text": "um so it was just kind of why we went",
    "start": "1166160",
    "end": "1167120"
  },
  {
    "text": "that way but you're right the containers",
    "start": "1167120",
    "end": "1168380"
  },
  {
    "text": "definitely allow you to kind of get out",
    "start": "1168380",
    "end": "1169760"
  },
  {
    "text": "of that dependency management piece of",
    "start": "1169760",
    "end": "1171380"
  },
  {
    "text": "it",
    "start": "1171380",
    "end": "1172340"
  },
  {
    "text": "um so yeah that's that's a good point",
    "start": "1172340",
    "end": "1173480"
  },
  {
    "text": "yes",
    "start": "1173480",
    "end": "1174860"
  },
  {
    "text": "yeah there was I think someone",
    "start": "1174860",
    "end": "1178299"
  },
  {
    "text": "yeah so I know Canada has the kubernetes",
    "start": "1182480",
    "end": "1185179"
  },
  {
    "text": "power scalar and it also has support for",
    "start": "1185179",
    "end": "1187580"
  },
  {
    "text": "the HPA horizontal Parts killer Reyes",
    "start": "1187580",
    "end": "1190700"
  },
  {
    "text": "killer so how do you reconcile which one",
    "start": "1190700",
    "end": "1193640"
  },
  {
    "text": "do you use what do you recommend",
    "start": "1193640",
    "end": "1195679"
  },
  {
    "text": "so it it depends on what you're trying",
    "start": "1195679",
    "end": "1198919"
  },
  {
    "text": "to scale so okay native scales based on",
    "start": "1198919",
    "end": "1201980"
  },
  {
    "text": "basically number of requests that are in",
    "start": "1201980",
    "end": "1203539"
  },
  {
    "text": "flight so if you're which is",
    "start": "1203539",
    "end": "1205580"
  },
  {
    "text": "particularly good if you're running like",
    "start": "1205580",
    "end": "1206539"
  },
  {
    "text": "an HTTP service where I've got you know",
    "start": "1206539",
    "end": "1208400"
  },
  {
    "text": "I'm processing requests as they come in",
    "start": "1208400",
    "end": "1210220"
  },
  {
    "text": "and the k-native auto scaler is really",
    "start": "1210220",
    "end": "1212660"
  },
  {
    "text": "based on like if you start to get a",
    "start": "1212660",
    "end": "1214100"
  },
  {
    "text": "backlog of requests coming in let's spin",
    "start": "1214100",
    "end": "1216440"
  },
  {
    "text": "up more instances so that we have you",
    "start": "1216440",
    "end": "1218360"
  },
  {
    "text": "know enough to handle all the requests",
    "start": "1218360",
    "end": "1219799"
  },
  {
    "text": "that are coming in",
    "start": "1219799",
    "end": "1221960"
  },
  {
    "text": "um you know the kubernetes auto scalar",
    "start": "1221960",
    "end": "1223820"
  },
  {
    "text": "is based more on like the compute levels",
    "start": "1223820",
    "end": "1226220"
  },
  {
    "text": "so like are you topped out on resource",
    "start": "1226220",
    "end": "1227840"
  },
  {
    "text": "uses and spin up that way",
    "start": "1227840",
    "end": "1229760"
  },
  {
    "text": "um they're really just it depends on the",
    "start": "1229760",
    "end": "1231559"
  },
  {
    "text": "application in terms of which one makes",
    "start": "1231559",
    "end": "1233059"
  },
  {
    "text": "the most sense uh how you want to you",
    "start": "1233059",
    "end": "1234980"
  },
  {
    "text": "know which metric are you tracking which",
    "start": "1234980",
    "end": "1236360"
  },
  {
    "text": "is the thing that matters is it number",
    "start": "1236360",
    "end": "1238160"
  },
  {
    "text": "of requests is it resource usage so it",
    "start": "1238160",
    "end": "1240140"
  },
  {
    "text": "just it kind of depends on the",
    "start": "1240140",
    "end": "1241580"
  },
  {
    "text": "application you're running in terms of",
    "start": "1241580",
    "end": "1242960"
  },
  {
    "text": "which one makes the most sense",
    "start": "1242960",
    "end": "1246100"
  },
  {
    "text": "cool if there are no other questions I",
    "start": "1250640",
    "end": "1252380"
  },
  {
    "text": "also have a question",
    "start": "1252380",
    "end": "1253780"
  },
  {
    "text": "okay so I'm curious about sort of you",
    "start": "1253780",
    "end": "1257360"
  },
  {
    "text": "said you're stitching together Quantum",
    "start": "1257360",
    "end": "1258799"
  },
  {
    "text": "Resources and I guess typically programs",
    "start": "1258799",
    "end": "1261679"
  },
  {
    "text": "that don't really need Quantum Resources",
    "start": "1261679",
    "end": "1264260"
  },
  {
    "text": "and I'm wondering what the criteria are",
    "start": "1264260",
    "end": "1265880"
  },
  {
    "text": "for that so I would kind of expect like",
    "start": "1265880",
    "end": "1268460"
  },
  {
    "text": "a pure deterministic function doesn't",
    "start": "1268460",
    "end": "1270860"
  },
  {
    "text": "need to use Quantum Resources but is",
    "start": "1270860",
    "end": "1273020"
  },
  {
    "text": "there something else that like are you",
    "start": "1273020",
    "end": "1275120"
  },
  {
    "text": "measuring based on runtime like Total",
    "start": "1275120",
    "end": "1277520"
  },
  {
    "text": "Resource usage how do you determine yeah",
    "start": "1277520",
    "end": "1279740"
  },
  {
    "text": "so it's it's gonna be application",
    "start": "1279740",
    "end": "1282559"
  },
  {
    "text": "specific but it's going to depend on the",
    "start": "1282559",
    "end": "1285440"
  },
  {
    "text": "real question is is there a Quantum",
    "start": "1285440",
    "end": "1286940"
  },
  {
    "text": "algorithm that runs faster than the",
    "start": "1286940",
    "end": "1288679"
  },
  {
    "text": "classical one the conical example is is",
    "start": "1288679",
    "end": "1291799"
  },
  {
    "text": "factoring like large numbers into you",
    "start": "1291799",
    "end": "1293720"
  },
  {
    "text": "know two prime numbers the other",
    "start": "1293720",
    "end": "1294919"
  },
  {
    "text": "classical algorithms exponential it",
    "start": "1294919",
    "end": "1296720"
  },
  {
    "text": "takes forever and a day to get an answer",
    "start": "1296720",
    "end": "1299780"
  },
  {
    "text": "but if you use like Peter Shore's",
    "start": "1299780",
    "end": "1301760"
  },
  {
    "text": "algorithm which was able to reduce that",
    "start": "1301760",
    "end": "1304340"
  },
  {
    "text": "by not to get into like not to get too",
    "start": "1304340",
    "end": "1306559"
  },
  {
    "text": "much into the math that is basically",
    "start": "1306559",
    "end": "1307520"
  },
  {
    "text": "able to you find patterns and you can",
    "start": "1307520",
    "end": "1309620"
  },
  {
    "text": "basically kind of do those over place",
    "start": "1309620",
    "end": "1310940"
  },
  {
    "text": "you can chop out parts of the the",
    "start": "1310940",
    "end": "1312980"
  },
  {
    "text": "application so you can run it you remove",
    "start": "1312980",
    "end": "1314780"
  },
  {
    "text": "steps basically to run it so it runs",
    "start": "1314780",
    "end": "1317679"
  },
  {
    "text": "essentially in I think it's almost it's",
    "start": "1317679",
    "end": "1320720"
  },
  {
    "text": "like basically almost linear time",
    "start": "1320720",
    "end": "1323000"
  },
  {
    "text": "so the the key question is is there a",
    "start": "1323000",
    "end": "1326059"
  },
  {
    "text": "Quantum algorithm you can use so the way",
    "start": "1326059",
    "end": "1328340"
  },
  {
    "text": "Quantum works is you you know you have",
    "start": "1328340",
    "end": "1329960"
  },
  {
    "text": "what they call qubits which are zeros or",
    "start": "1329960",
    "end": "1331820"
  },
  {
    "text": "you know it's an electron with a spin on",
    "start": "1331820",
    "end": "1333500"
  },
  {
    "text": "it that you use to represent zero or one",
    "start": "1333500",
    "end": "1335600"
  },
  {
    "text": "but in like a regular bit it's not just",
    "start": "1335600",
    "end": "1337700"
  },
  {
    "text": "zero or one it can be any and all",
    "start": "1337700",
    "end": "1340880"
  },
  {
    "text": "possible combinations of zero and one so",
    "start": "1340880",
    "end": "1342860"
  },
  {
    "text": "you exponentially increase the amount of",
    "start": "1342860",
    "end": "1345500"
  },
  {
    "text": "stage or the state you can represent at",
    "start": "1345500",
    "end": "1347900"
  },
  {
    "text": "the outset so if you if you can use that",
    "start": "1347900",
    "end": "1350240"
  },
  {
    "text": "efficiently you can process so many more",
    "start": "1350240",
    "end": "1352580"
  },
  {
    "text": "results at once because you're doing you",
    "start": "1352580",
    "end": "1354140"
  },
  {
    "text": "know",
    "start": "1354140",
    "end": "1354740"
  },
  {
    "text": "you know 30 or so at once instead of",
    "start": "1354740",
    "end": "1356780"
  },
  {
    "text": "just one at once okay so so the users",
    "start": "1356780",
    "end": "1359360"
  },
  {
    "text": "determine what resources they expect",
    "start": "1359360",
    "end": "1362000"
  },
  {
    "text": "like you're you're not automatically",
    "start": "1362000",
    "end": "1363559"
  },
  {
    "text": "reading no no not not at this point no I",
    "start": "1363559",
    "end": "1366740"
  },
  {
    "text": "mean long term that would be nice but",
    "start": "1366740",
    "end": "1368419"
  },
  {
    "text": "right now it's really like is there a",
    "start": "1368419",
    "end": "1370640"
  },
  {
    "text": "Quantum algorithm you can use so yes I",
    "start": "1370640",
    "end": "1372320"
  },
  {
    "text": "want to run this as Quantum so am I",
    "start": "1372320",
    "end": "1373700"
  },
  {
    "text": "going to run like you know Quantum Monte",
    "start": "1373700",
    "end": "1375260"
  },
  {
    "text": "Carlo simulation am I going to run you",
    "start": "1375260",
    "end": "1377000"
  },
  {
    "text": "know a Quantum representation of you",
    "start": "1377000",
    "end": "1378919"
  },
  {
    "text": "know chemistry molecules",
    "start": "1378919",
    "end": "1381320"
  },
  {
    "text": "makes sense",
    "start": "1381320",
    "end": "1383919"
  },
  {
    "text": "so when we talk about serverless or",
    "start": "1392480",
    "end": "1394940"
  },
  {
    "text": "functional as a service so I think the",
    "start": "1394940",
    "end": "1397220"
  },
  {
    "text": "function start time matters right do we",
    "start": "1397220",
    "end": "1400400"
  },
  {
    "text": "measure some performance between spree",
    "start": "1400400",
    "end": "1402380"
  },
  {
    "text": "and k-native I can't hear you can you",
    "start": "1402380",
    "end": "1405380"
  },
  {
    "text": "hear me no yeah okay so we when we talk",
    "start": "1405380",
    "end": "1407900"
  },
  {
    "text": "about serverless or functional as a",
    "start": "1407900",
    "end": "1409940"
  },
  {
    "text": "service and I think the functions that",
    "start": "1409940",
    "end": "1412760"
  },
  {
    "text": "matter",
    "start": "1412760",
    "end": "1414080"
  },
  {
    "text": "and do we measure the performance in",
    "start": "1414080",
    "end": "1416659"
  },
  {
    "text": "terms of the latency of the function",
    "start": "1416659",
    "end": "1418520"
  },
  {
    "text": "stop times between connective and and",
    "start": "1418520",
    "end": "1421640"
  },
  {
    "text": "Ray and what what's the pen point you",
    "start": "1421640",
    "end": "1424159"
  },
  {
    "text": "are seeing right now yeah so I didn't do",
    "start": "1424159",
    "end": "1426380"
  },
  {
    "text": "a measurement I know k-native roughly",
    "start": "1426380",
    "end": "1429559"
  },
  {
    "text": "can take up to two seconds to start from",
    "start": "1429559",
    "end": "1431600"
  },
  {
    "text": "your cold start I didn't measure Ray",
    "start": "1431600",
    "end": "1434299"
  },
  {
    "text": "um off top of my head but it you know it",
    "start": "1434299",
    "end": "1435559"
  },
  {
    "text": "seemed to be",
    "start": "1435559",
    "end": "1436700"
  },
  {
    "text": "a little quicker again there's obviously",
    "start": "1436700",
    "end": "1438200"
  },
  {
    "text": "like you know Network latencies and",
    "start": "1438200",
    "end": "1439580"
  },
  {
    "text": "things can matter in there but I didn't",
    "start": "1439580",
    "end": "1442159"
  },
  {
    "text": "do a direct one-to-one comparison",
    "start": "1442159",
    "end": "1444740"
  },
  {
    "text": "um in terms of trying to measure how",
    "start": "1444740",
    "end": "1446720"
  },
  {
    "text": "about",
    "start": "1446720",
    "end": "1448039"
  },
  {
    "text": "sorry that's throughput like for example",
    "start": "1448039",
    "end": "1450260"
  },
  {
    "text": "uh in a single let's say one second how",
    "start": "1450260",
    "end": "1453080"
  },
  {
    "text": "many functions you want to launch in",
    "start": "1453080",
    "end": "1455480"
  },
  {
    "text": "your application yeah I didn't do any",
    "start": "1455480",
    "end": "1457640"
  },
  {
    "text": "benchmarking of the two the only the",
    "start": "1457640",
    "end": "1459620"
  },
  {
    "text": "only piece I know is that you know",
    "start": "1459620",
    "end": "1460520"
  },
  {
    "text": "k-native can take a long time but I",
    "start": "1460520",
    "end": "1461960"
  },
  {
    "text": "didn't do a direct Benchmark basically",
    "start": "1461960",
    "end": "1463460"
  },
  {
    "text": "when we got to the point where we could",
    "start": "1463460",
    "end": "1465679"
  },
  {
    "text": "run one test but if we wanted to run",
    "start": "1465679",
    "end": "1467000"
  },
  {
    "text": "multiple it was kind of like well K9 is",
    "start": "1467000",
    "end": "1468860"
  },
  {
    "text": "not really the way to go on this so we",
    "start": "1468860",
    "end": "1470179"
  },
  {
    "text": "kind of left it aside got it thank you",
    "start": "1470179",
    "end": "1473600"
  },
  {
    "text": "yep",
    "start": "1473600",
    "end": "1476020"
  }
]