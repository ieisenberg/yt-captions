[
  {
    "text": "[Music]",
    "start": "170",
    "end": "14719"
  },
  {
    "text": "hi everybody welcome to my talk about",
    "start": "14719",
    "end": "17199"
  },
  {
    "text": "ray in any scale",
    "start": "17199",
    "end": "18800"
  },
  {
    "text": "we're going to be covering an",
    "start": "18800",
    "end": "19920"
  },
  {
    "text": "optimization journey",
    "start": "19920",
    "end": "22160"
  },
  {
    "text": "in how we were able to start with a",
    "start": "22160",
    "end": "24240"
  },
  {
    "text": "simple use case",
    "start": "24240",
    "end": "25840"
  },
  {
    "text": "using ray and power it using any scale",
    "start": "25840",
    "end": "31199"
  },
  {
    "text": "before we begin that i want to give a",
    "start": "31199",
    "end": "32880"
  },
  {
    "text": "quick outline of what i'm going to be",
    "start": "32880",
    "end": "34559"
  },
  {
    "text": "speaking about today",
    "start": "34559",
    "end": "36079"
  },
  {
    "text": "so just going to cover the people",
    "start": "36079",
    "end": "38160"
  },
  {
    "text": "involved in this",
    "start": "38160",
    "end": "39360"
  },
  {
    "text": "talk and the presentation the problem",
    "start": "39360",
    "end": "42399"
  },
  {
    "text": "statement that we were trying",
    "start": "42399",
    "end": "44000"
  },
  {
    "text": "to accomplish what we tried out first",
    "start": "44000",
    "end": "48879"
  },
  {
    "text": "fourthly how we improved that and then",
    "start": "48879",
    "end": "52239"
  },
  {
    "text": "a fifth uh step in what our final state",
    "start": "52239",
    "end": "55840"
  },
  {
    "text": "looked like",
    "start": "55840",
    "end": "56719"
  },
  {
    "text": "where we were able to achieve really",
    "start": "56719",
    "end": "59760"
  },
  {
    "text": "good",
    "start": "59760",
    "end": "60480"
  },
  {
    "text": "scaling so",
    "start": "60480",
    "end": "64080"
  },
  {
    "text": "to begin myself my name is nachi mehta",
    "start": "64080",
    "end": "67119"
  },
  {
    "text": "i'm a co-founder at oxdub.io",
    "start": "67119",
    "end": "70720"
  },
  {
    "text": "we're a consulting company that",
    "start": "70720",
    "end": "72799"
  },
  {
    "text": "primarily focuses on data engineering",
    "start": "72799",
    "end": "75360"
  },
  {
    "text": "analytics and data science",
    "start": "75360",
    "end": "78799"
  },
  {
    "text": "i was helped a lot in this journey by",
    "start": "78799",
    "end": "81759"
  },
  {
    "text": "charles greer he's a solutions architect",
    "start": "81759",
    "end": "83920"
  },
  {
    "text": "at any scale",
    "start": "83920",
    "end": "85759"
  },
  {
    "text": "he's been with me pretty much every step",
    "start": "85759",
    "end": "87439"
  },
  {
    "text": "of the way in this process",
    "start": "87439",
    "end": "90479"
  },
  {
    "text": "in addition i just want to give a couple",
    "start": "90479",
    "end": "92000"
  },
  {
    "text": "shout outs to some of the other people",
    "start": "92000",
    "end": "94400"
  },
  {
    "text": "at the team here at any scale",
    "start": "94400",
    "end": "96640"
  },
  {
    "text": "bill chambers had a product",
    "start": "96640",
    "end": "100000"
  },
  {
    "text": "he helped us as well and simon moe was",
    "start": "100640",
    "end": "104000"
  },
  {
    "text": "uh",
    "start": "104000",
    "end": "104720"
  },
  {
    "text": "really critical at certain phases in",
    "start": "104720",
    "end": "106720"
  },
  {
    "text": "addition",
    "start": "106720",
    "end": "109119"
  },
  {
    "text": "so to begin the problem that we were",
    "start": "109360",
    "end": "112000"
  },
  {
    "text": "trying to solve",
    "start": "112000",
    "end": "113439"
  },
  {
    "text": "was to deliver a scalable machine",
    "start": "113439",
    "end": "115680"
  },
  {
    "text": "learning application",
    "start": "115680",
    "end": "117280"
  },
  {
    "text": "that predicts product affinity based on",
    "start": "117280",
    "end": "119439"
  },
  {
    "text": "a user engagement history",
    "start": "119439",
    "end": "121759"
  },
  {
    "text": "and it had one non-functional",
    "start": "121759",
    "end": "125200"
  },
  {
    "text": "requirement was that",
    "start": "125200",
    "end": "126960"
  },
  {
    "text": "it had to be modular in design so that",
    "start": "126960",
    "end": "130399"
  },
  {
    "text": "it wouldn't conflict with the existing",
    "start": "130399",
    "end": "133280"
  },
  {
    "text": "code base",
    "start": "133280",
    "end": "134160"
  },
  {
    "text": "for our client and we wanted to",
    "start": "134160",
    "end": "137280"
  },
  {
    "text": "allow for future changes of the model",
    "start": "137280",
    "end": "139920"
  },
  {
    "text": "and the way",
    "start": "139920",
    "end": "140800"
  },
  {
    "text": "business logic handled the output of the",
    "start": "140800",
    "end": "144239"
  },
  {
    "text": "product uh the prediction of the model",
    "start": "144239",
    "end": "148239"
  },
  {
    "text": "so to give a very high level and i when",
    "start": "148879",
    "end": "151360"
  },
  {
    "text": "i say high level i mean very high level",
    "start": "151360",
    "end": "153280"
  },
  {
    "text": "overview of the architecture",
    "start": "153280",
    "end": "156319"
  },
  {
    "text": "imagine a user you get user data coming",
    "start": "156319",
    "end": "160000"
  },
  {
    "text": "in from a mobile sdk",
    "start": "160000",
    "end": "162319"
  },
  {
    "text": "and that is processed by",
    "start": "162319",
    "end": "165440"
  },
  {
    "text": "some business logic an application or",
    "start": "165440",
    "end": "168239"
  },
  {
    "text": "server",
    "start": "168239",
    "end": "169120"
  },
  {
    "text": "that the client possessed",
    "start": "169120",
    "end": "172239"
  },
  {
    "text": "and they will send that data to",
    "start": "172239",
    "end": "174480"
  },
  {
    "text": "elasticsearch where the data was",
    "start": "174480",
    "end": "176080"
  },
  {
    "text": "ultimately stored",
    "start": "176080",
    "end": "178879"
  },
  {
    "text": "after that we used our any scale cluster",
    "start": "178879",
    "end": "182480"
  },
  {
    "text": "to grab that data and we were able to",
    "start": "182480",
    "end": "185760"
  },
  {
    "text": "build a model",
    "start": "185760",
    "end": "186879"
  },
  {
    "text": "train it and then score",
    "start": "186879",
    "end": "189920"
  },
  {
    "text": "based on the data that was housed there",
    "start": "189920",
    "end": "192239"
  },
  {
    "text": "and send that score",
    "start": "192239",
    "end": "193519"
  },
  {
    "text": "back to the original service",
    "start": "193519",
    "end": "196800"
  },
  {
    "text": "so that it could decide what to do for",
    "start": "196800",
    "end": "198640"
  },
  {
    "text": "the user and eventually send that back",
    "start": "198640",
    "end": "202000"
  },
  {
    "text": "through some sort of user interface in a",
    "start": "202000",
    "end": "203840"
  },
  {
    "text": "mobile mobile",
    "start": "203840",
    "end": "205599"
  },
  {
    "text": "application so our first attempt at",
    "start": "205599",
    "end": "208720"
  },
  {
    "text": "solving this problem for our client",
    "start": "208720",
    "end": "211040"
  },
  {
    "text": "was to create a model in any scale",
    "start": "211040",
    "end": "215040"
  },
  {
    "text": "and ray such that it could set up an end",
    "start": "215040",
    "end": "218080"
  },
  {
    "text": "point for us",
    "start": "218080",
    "end": "218959"
  },
  {
    "text": "that the client could hit without as a",
    "start": "218959",
    "end": "222080"
  },
  {
    "text": "normal rest endpoint",
    "start": "222080",
    "end": "223280"
  },
  {
    "text": "and get back a prediction and the way",
    "start": "223280",
    "end": "225840"
  },
  {
    "text": "this works is fairly simple in ray",
    "start": "225840",
    "end": "228480"
  },
  {
    "text": "what we're able to do is use ray serve",
    "start": "228480",
    "end": "231599"
  },
  {
    "text": "that creates an endpoint for us by",
    "start": "231599",
    "end": "234239"
  },
  {
    "text": "plugging in",
    "start": "234239",
    "end": "235439"
  },
  {
    "text": "the python model you like and any",
    "start": "235439",
    "end": "239040"
  },
  {
    "text": "associated parameters the model class",
    "start": "239040",
    "end": "242319"
  },
  {
    "text": "itself",
    "start": "242319",
    "end": "243120"
  },
  {
    "text": "looks like this where it has a predict",
    "start": "243120",
    "end": "246400"
  },
  {
    "text": "method that's eventually called",
    "start": "246400",
    "end": "249599"
  },
  {
    "text": "by this magic method call",
    "start": "249599",
    "end": "253360"
  },
  {
    "text": "which is something that all race serve",
    "start": "253360",
    "end": "256160"
  },
  {
    "text": "endpoints are looking for",
    "start": "256160",
    "end": "259359"
  },
  {
    "text": "what it does here i'll walk you through",
    "start": "259359",
    "end": "261040"
  },
  {
    "text": "the code very briefly",
    "start": "261040",
    "end": "263040"
  },
  {
    "text": "is it gathers the data from",
    "start": "263040",
    "end": "266840"
  },
  {
    "text": "elasticsearch",
    "start": "266840",
    "end": "268160"
  },
  {
    "text": "and it sends that data into",
    "start": "268160",
    "end": "271840"
  },
  {
    "text": "our compute click frequencies and it",
    "start": "271840",
    "end": "275120"
  },
  {
    "text": "gets the user preferences",
    "start": "275120",
    "end": "277280"
  },
  {
    "text": "if everything checks out it returns the",
    "start": "277280",
    "end": "279600"
  },
  {
    "text": "response",
    "start": "279600",
    "end": "281759"
  },
  {
    "text": "so all we need to do",
    "start": "281759",
    "end": "284880"
  },
  {
    "text": "to start this is run",
    "start": "284880",
    "end": "288080"
  },
  {
    "text": "the endpoint class at which point",
    "start": "288080",
    "end": "291919"
  },
  {
    "text": "we'll be able to see",
    "start": "291919",
    "end": "294800"
  },
  {
    "text": "uh back end running",
    "start": "295600",
    "end": "299199"
  },
  {
    "text": "and you can see that here hotel",
    "start": "299199",
    "end": "300560"
  },
  {
    "text": "recommender model is now running",
    "start": "300560",
    "end": "303600"
  },
  {
    "text": "so if we want to test this",
    "start": "303600",
    "end": "307120"
  },
  {
    "text": "we're going to run a small load",
    "start": "307120",
    "end": "310160"
  },
  {
    "text": "using this local software that i have",
    "start": "310160",
    "end": "313759"
  },
  {
    "text": "installed named locust is the load",
    "start": "313759",
    "end": "315520"
  },
  {
    "text": "generation tool",
    "start": "315520",
    "end": "317280"
  },
  {
    "text": "and i can start swarming this here",
    "start": "317280",
    "end": "321120"
  },
  {
    "text": "now what we're going to see",
    "start": "321280",
    "end": "324320"
  },
  {
    "text": "is that the load is actually much higher",
    "start": "324320",
    "end": "327600"
  },
  {
    "text": "than what we're able to get back at",
    "start": "327600",
    "end": "329680"
  },
  {
    "text": "requests per second",
    "start": "329680",
    "end": "331759"
  },
  {
    "text": "and the reason for this is because the",
    "start": "331759",
    "end": "334479"
  },
  {
    "text": "way we've set up our class",
    "start": "334479",
    "end": "336840"
  },
  {
    "text": "initially is every single request coming",
    "start": "336840",
    "end": "340320"
  },
  {
    "text": "from this",
    "start": "340320",
    "end": "341440"
  },
  {
    "text": "endpoint is contacting",
    "start": "341440",
    "end": "344880"
  },
  {
    "text": "reaching out to elasticsearch grabbing",
    "start": "344880",
    "end": "347120"
  },
  {
    "text": "the data",
    "start": "347120",
    "end": "348000"
  },
  {
    "text": "doing a calculation and sending it back",
    "start": "348000",
    "end": "352000"
  },
  {
    "text": "this is inefficient so we need to figure",
    "start": "352000",
    "end": "354720"
  },
  {
    "text": "out a way",
    "start": "354720",
    "end": "356080"
  },
  {
    "text": "to cache that result",
    "start": "356080",
    "end": "359360"
  },
  {
    "text": "so our ultimate problem is how do we",
    "start": "359360",
    "end": "362400"
  },
  {
    "text": "separate the caching of",
    "start": "362400",
    "end": "365680"
  },
  {
    "text": "the search results from our",
    "start": "365680",
    "end": "367039"
  },
  {
    "text": "elasticsearch with",
    "start": "367039",
    "end": "368880"
  },
  {
    "text": "what the model needs in order to predict",
    "start": "368880",
    "end": "373120"
  },
  {
    "text": "so the way we do that is using the ray",
    "start": "373120",
    "end": "376240"
  },
  {
    "text": "object store which creates a shared",
    "start": "376240",
    "end": "379840"
  },
  {
    "text": "in-memory retrieval mechanism",
    "start": "379840",
    "end": "383600"
  },
  {
    "text": "so that we can distribute that across",
    "start": "383600",
    "end": "386240"
  },
  {
    "text": "our cluster",
    "start": "386240",
    "end": "387520"
  },
  {
    "text": "and be able to use the data whenever we",
    "start": "387520",
    "end": "390800"
  },
  {
    "text": "like without having to",
    "start": "390800",
    "end": "392479"
  },
  {
    "text": "reach out to elasticsearch every single",
    "start": "392479",
    "end": "395919"
  },
  {
    "text": "request",
    "start": "395919",
    "end": "398160"
  },
  {
    "text": "in order to make use of the ray object",
    "start": "398160",
    "end": "400400"
  },
  {
    "text": "store",
    "start": "400400",
    "end": "401680"
  },
  {
    "text": "we simply need to implement two methods",
    "start": "401680",
    "end": "404800"
  },
  {
    "text": "one is ray put which",
    "start": "404800",
    "end": "408319"
  },
  {
    "text": "puts the data into the ray object store",
    "start": "408319",
    "end": "411440"
  },
  {
    "text": "so in order to do that we have to",
    "start": "411440",
    "end": "413599"
  },
  {
    "text": "extract out",
    "start": "413599",
    "end": "414960"
  },
  {
    "text": "all of the elastic search code that was",
    "start": "414960",
    "end": "417120"
  },
  {
    "text": "originally",
    "start": "417120",
    "end": "418240"
  },
  {
    "text": "in the hotel recommender model and put",
    "start": "418240",
    "end": "420560"
  },
  {
    "text": "it into our serve script",
    "start": "420560",
    "end": "422960"
  },
  {
    "text": "that way we can inject the reference to",
    "start": "422960",
    "end": "426160"
  },
  {
    "text": "the",
    "start": "426160",
    "end": "426880"
  },
  {
    "text": "output of that data into our hotel",
    "start": "426880",
    "end": "429759"
  },
  {
    "text": "recommender model",
    "start": "429759",
    "end": "431680"
  },
  {
    "text": "and what this allows us to do is every",
    "start": "431680",
    "end": "434319"
  },
  {
    "text": "time the endpoint is called instead of",
    "start": "434319",
    "end": "436479"
  },
  {
    "text": "reaching out directly to elasticsearch",
    "start": "436479",
    "end": "438880"
  },
  {
    "text": "we're now reaching out to the object",
    "start": "438880",
    "end": "441120"
  },
  {
    "text": "store which makes things much more",
    "start": "441120",
    "end": "442800"
  },
  {
    "text": "efficient",
    "start": "442800",
    "end": "444400"
  },
  {
    "text": "if we take a look at the second method",
    "start": "444400",
    "end": "446800"
  },
  {
    "text": "we will need to implement ray.get",
    "start": "446800",
    "end": "449520"
  },
  {
    "text": "and here we've just instantiated the",
    "start": "449520",
    "end": "451840"
  },
  {
    "text": "model",
    "start": "451840",
    "end": "452800"
  },
  {
    "text": "with its own private member variable so",
    "start": "452800",
    "end": "455840"
  },
  {
    "text": "that it knows",
    "start": "455840",
    "end": "457440"
  },
  {
    "text": "how to get access to that elasticsearch",
    "start": "457440",
    "end": "460400"
  },
  {
    "text": "data reference",
    "start": "460400",
    "end": "462880"
  },
  {
    "text": "so now if we take a look at a new test",
    "start": "462880",
    "end": "465599"
  },
  {
    "text": "we can run",
    "start": "465599",
    "end": "466720"
  },
  {
    "text": "on this new um back end",
    "start": "466720",
    "end": "470639"
  },
  {
    "text": "we'll be able to see that our requests",
    "start": "470639",
    "end": "472879"
  },
  {
    "text": "per second",
    "start": "472879",
    "end": "473919"
  },
  {
    "text": "are going to be much higher than the 1.5",
    "start": "473919",
    "end": "476639"
  },
  {
    "text": "that we had before",
    "start": "476639",
    "end": "478960"
  },
  {
    "text": "so if we let it run for a minute we'll",
    "start": "478960",
    "end": "480560"
  },
  {
    "text": "see should go up to around",
    "start": "480560",
    "end": "483360"
  },
  {
    "text": "five or six requests per second on a",
    "start": "483360",
    "end": "485680"
  },
  {
    "text": "single instance",
    "start": "485680",
    "end": "487199"
  },
  {
    "text": "which admittedly is not as high as we'd",
    "start": "487199",
    "end": "489759"
  },
  {
    "text": "like",
    "start": "489759",
    "end": "490240"
  },
  {
    "text": "but it's a much larger improvement from",
    "start": "490240",
    "end": "492639"
  },
  {
    "text": "only one or two requests per second",
    "start": "492639",
    "end": "496560"
  },
  {
    "text": "so our next logical question was how do",
    "start": "496800",
    "end": "499759"
  },
  {
    "text": "we scale this",
    "start": "499759",
    "end": "501520"
  },
  {
    "text": "up from a very small few requests per",
    "start": "501520",
    "end": "504479"
  },
  {
    "text": "second",
    "start": "504479",
    "end": "505360"
  },
  {
    "text": "to much higher requests per second that",
    "start": "505360",
    "end": "507599"
  },
  {
    "text": "is realistic for production",
    "start": "507599",
    "end": "510400"
  },
  {
    "text": "so we had to implement something called",
    "start": "510400",
    "end": "512320"
  },
  {
    "text": "the reactor model",
    "start": "512320",
    "end": "514320"
  },
  {
    "text": "and what the reactor model enables us to",
    "start": "514320",
    "end": "516800"
  },
  {
    "text": "do",
    "start": "516800",
    "end": "517919"
  },
  {
    "text": "is abstract away and encapsulate the",
    "start": "517919",
    "end": "521200"
  },
  {
    "text": "call",
    "start": "521200",
    "end": "522000"
  },
  {
    "text": "that is made to elasticsearch so that",
    "start": "522000",
    "end": "524320"
  },
  {
    "text": "results can be updated",
    "start": "524320",
    "end": "525839"
  },
  {
    "text": "cached or retrieved within the",
    "start": "525839",
    "end": "527760"
  },
  {
    "text": "distributed computing engine",
    "start": "527760",
    "end": "530800"
  },
  {
    "text": "before just storing your results in the",
    "start": "530800",
    "end": "532959"
  },
  {
    "text": "array object store",
    "start": "532959",
    "end": "534959"
  },
  {
    "text": "there was no way to scale that across",
    "start": "534959",
    "end": "537680"
  },
  {
    "text": "nodes",
    "start": "537680",
    "end": "538320"
  },
  {
    "text": "and clusters because",
    "start": "538320",
    "end": "541440"
  },
  {
    "text": "the reference to that object would",
    "start": "541440",
    "end": "543200"
  },
  {
    "text": "eventually be garbage collected",
    "start": "543200",
    "end": "545120"
  },
  {
    "text": "but once it's kept inside of a actor",
    "start": "545120",
    "end": "548399"
  },
  {
    "text": "that won't happen and in addition we",
    "start": "548399",
    "end": "551519"
  },
  {
    "text": "would be able to add hooks",
    "start": "551519",
    "end": "553200"
  },
  {
    "text": "to update the reference whenever we like",
    "start": "553200",
    "end": "558560"
  },
  {
    "text": "so how does this happen well",
    "start": "558560",
    "end": "562399"
  },
  {
    "text": "we we create our infinite scaling hook",
    "start": "562399",
    "end": "565920"
  },
  {
    "text": "by uh creating a second back end",
    "start": "565920",
    "end": "569440"
  },
  {
    "text": "once the actor model has been",
    "start": "569440",
    "end": "571040"
  },
  {
    "text": "implemented inside of our",
    "start": "571040",
    "end": "573680"
  },
  {
    "text": "serve script which serves back the",
    "start": "573680",
    "end": "577120"
  },
  {
    "text": "recommendation api that we've been",
    "start": "577120",
    "end": "578640"
  },
  {
    "text": "working with in the beginning",
    "start": "578640",
    "end": "580800"
  },
  {
    "text": "now to implement the actor model we're",
    "start": "580800",
    "end": "583839"
  },
  {
    "text": "going to",
    "start": "583839",
    "end": "584320"
  },
  {
    "text": "go back to our serve script and create",
    "start": "584320",
    "end": "587360"
  },
  {
    "text": "another class",
    "start": "587360",
    "end": "588640"
  },
  {
    "text": "which we've called data holder here and",
    "start": "588640",
    "end": "591680"
  },
  {
    "text": "annotate it with the ray",
    "start": "591680",
    "end": "593120"
  },
  {
    "text": "remote annotation",
    "start": "593120",
    "end": "596399"
  },
  {
    "text": "and all we're doing is we're taking the",
    "start": "596399",
    "end": "597839"
  },
  {
    "text": "elastic search",
    "start": "597839",
    "end": "600399"
  },
  {
    "text": "piece of code and putting it inside of",
    "start": "600399",
    "end": "603200"
  },
  {
    "text": "the data holder",
    "start": "603200",
    "end": "604079"
  },
  {
    "text": "class that way it will be able to",
    "start": "604079",
    "end": "608320"
  },
  {
    "text": "preserve the response data that's coming",
    "start": "608320",
    "end": "612320"
  },
  {
    "text": "from elasticsearch we use the ray object",
    "start": "612320",
    "end": "616000"
  },
  {
    "text": "store",
    "start": "616000",
    "end": "616959"
  },
  {
    "text": "here to put it into the ray object store",
    "start": "616959",
    "end": "620480"
  },
  {
    "text": "that way when another class needs to re",
    "start": "620480",
    "end": "624800"
  },
  {
    "text": "access it specifically the hotel",
    "start": "624800",
    "end": "627040"
  },
  {
    "text": "recommender model",
    "start": "627040",
    "end": "629040"
  },
  {
    "text": "it will be kept alive across",
    "start": "629040",
    "end": "632480"
  },
  {
    "text": "different contexts within the cluster",
    "start": "632480",
    "end": "636880"
  },
  {
    "text": "so we're going to demo for you here how",
    "start": "637040",
    "end": "640160"
  },
  {
    "text": "we are able to scale this up and down",
    "start": "640160",
    "end": "643279"
  },
  {
    "text": "using another script with another",
    "start": "643279",
    "end": "646320"
  },
  {
    "text": "back end that's just as easy to deploy",
    "start": "646320",
    "end": "648959"
  },
  {
    "text": "in a few lines",
    "start": "648959",
    "end": "650560"
  },
  {
    "text": "that sets up a hook for us to scale up",
    "start": "650560",
    "end": "653519"
  },
  {
    "text": "and scale down",
    "start": "653519",
    "end": "655440"
  },
  {
    "text": "all you need to do is hit this end point",
    "start": "655440",
    "end": "659760"
  },
  {
    "text": "and it's giving us increasing the number",
    "start": "659760",
    "end": "662640"
  },
  {
    "text": "of replicas on our back end which was",
    "start": "662640",
    "end": "665040"
  },
  {
    "text": "described here as",
    "start": "665040",
    "end": "666440"
  },
  {
    "text": "hrv1 if you go back that has to match",
    "start": "666440",
    "end": "670240"
  },
  {
    "text": "here",
    "start": "670240",
    "end": "670640"
  },
  {
    "text": "the create backend hrv1 tag",
    "start": "670640",
    "end": "675279"
  },
  {
    "text": "so what we can do is launch",
    "start": "675279",
    "end": "678399"
  },
  {
    "text": "our locus cluster again",
    "start": "678399",
    "end": "682880"
  },
  {
    "text": "to start generating load and we'll see",
    "start": "682880",
    "end": "686560"
  },
  {
    "text": "a little bit of a few requests here",
    "start": "686560",
    "end": "690160"
  },
  {
    "text": "coming in",
    "start": "690160",
    "end": "692160"
  },
  {
    "text": "now what we can do",
    "start": "692160",
    "end": "695440"
  },
  {
    "text": "is we'll jump back and we're gonna scale",
    "start": "695440",
    "end": "698240"
  },
  {
    "text": "up",
    "start": "698240",
    "end": "700399"
  },
  {
    "text": "our cluster",
    "start": "700399",
    "end": "703839"
  },
  {
    "text": "and let's scale it up just a tiny bit",
    "start": "707440",
    "end": "709600"
  },
  {
    "text": "more",
    "start": "709600",
    "end": "711839"
  },
  {
    "text": "and if we jump back here we should see",
    "start": "712240",
    "end": "715200"
  },
  {
    "text": "these requests",
    "start": "715200",
    "end": "716000"
  },
  {
    "text": "go up",
    "start": "716000",
    "end": "718399"
  },
  {
    "text": "in time with the amount of scaling that",
    "start": "719920",
    "end": "722720"
  },
  {
    "text": "we did",
    "start": "722720",
    "end": "723680"
  },
  {
    "text": "so you see we started the beginning of",
    "start": "723680",
    "end": "725760"
  },
  {
    "text": "the demo at only one",
    "start": "725760",
    "end": "727600"
  },
  {
    "text": "we've achieved 17 times effectiveness",
    "start": "727600",
    "end": "731920"
  },
  {
    "text": "and you could potentially see this going",
    "start": "731920",
    "end": "734639"
  },
  {
    "text": "more and more",
    "start": "734639",
    "end": "736160"
  },
  {
    "text": "as you can see on the dashboard we have",
    "start": "736160",
    "end": "738639"
  },
  {
    "text": "four replicas going",
    "start": "738639",
    "end": "744000"
  },
  {
    "text": "if we scale it again",
    "start": "744000",
    "end": "747360"
  },
  {
    "text": "this will increase the number of workers",
    "start": "748720",
    "end": "750720"
  },
  {
    "text": "and we'll get even more",
    "start": "750720",
    "end": "754240"
  },
  {
    "text": "ability to scale out and with that we've",
    "start": "754720",
    "end": "758320"
  },
  {
    "text": "ended the presentation",
    "start": "758320",
    "end": "759600"
  },
  {
    "text": "i'd like to thank you all for watching",
    "start": "759600",
    "end": "761279"
  },
  {
    "text": "my talk again my name is notchy and i'm",
    "start": "761279",
    "end": "764000"
  },
  {
    "text": "a co-founder at ox dub dot io",
    "start": "764000",
    "end": "766959"
  },
  {
    "text": "feel free to reach out my email is not",
    "start": "766959",
    "end": "769200"
  },
  {
    "text": "cheadoxdub dot io",
    "start": "769200",
    "end": "772399"
  },
  {
    "text": "in addition if you'd like to learn more",
    "start": "772399",
    "end": "773839"
  },
  {
    "text": "about any scale",
    "start": "773839",
    "end": "775600"
  },
  {
    "text": "you can find them on the website there",
    "start": "775600",
    "end": "777440"
  },
  {
    "text": "at anyscale.com",
    "start": "777440",
    "end": "779440"
  },
  {
    "text": "or contact us on the ray slack",
    "start": "779440",
    "end": "782720"
  },
  {
    "text": "and you can also message charles",
    "start": "782720",
    "end": "784240"
  },
  {
    "text": "directly at cgreer",
    "start": "784240",
    "end": "786240"
  },
  {
    "text": "at anyscale.com thanks again",
    "start": "786240",
    "end": "793920"
  }
]