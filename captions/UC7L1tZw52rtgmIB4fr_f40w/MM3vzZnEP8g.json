[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "[Music]",
    "start": "150",
    "end": "14880"
  },
  {
    "text": "hello everybody my name is daniel",
    "start": "14880",
    "end": "16800"
  },
  {
    "text": "imberman",
    "start": "16800",
    "end": "17920"
  },
  {
    "text": "and i'm rob deeb and this is data",
    "start": "17920",
    "end": "21039"
  },
  {
    "text": "science at scale",
    "start": "21039",
    "end": "22080"
  },
  {
    "text": "from notebook to production with airflow",
    "start": "22080",
    "end": "24160"
  },
  {
    "text": "and ray",
    "start": "24160",
    "end": "26240"
  },
  {
    "text": "so a bit about who we are my name is",
    "start": "26240",
    "end": "28960"
  },
  {
    "text": "daniel imberman i am a",
    "start": "28960",
    "end": "30640"
  },
  {
    "text": "strategy engineer at astronomer.io which",
    "start": "30640",
    "end": "33680"
  },
  {
    "text": "is the company that offers a",
    "start": "33680",
    "end": "35200"
  },
  {
    "text": "managed apache airflow and i'm also a",
    "start": "35200",
    "end": "37840"
  },
  {
    "text": "pmc",
    "start": "37840",
    "end": "38480"
  },
  {
    "text": "on the airflow project and i'm a",
    "start": "38480",
    "end": "42160"
  },
  {
    "text": "all things data engineer at astronomer i",
    "start": "42160",
    "end": "45039"
  },
  {
    "text": "work with ml",
    "start": "45039",
    "end": "46079"
  },
  {
    "text": "analytics data pipelines using airflow",
    "start": "46079",
    "end": "49120"
  },
  {
    "text": "and just all around creating the data",
    "start": "49120",
    "end": "51840"
  },
  {
    "text": "culture in the company",
    "start": "51840",
    "end": "54000"
  },
  {
    "start": "53000",
    "end": "53000"
  },
  {
    "text": "so for those of you who haven't tried it",
    "start": "54000",
    "end": "55760"
  },
  {
    "text": "before i'd like to take a minute to just",
    "start": "55760",
    "end": "58000"
  },
  {
    "text": "describe what apache airflow is so",
    "start": "58000",
    "end": "60960"
  },
  {
    "text": "apache airflow was founded at airbnb",
    "start": "60960",
    "end": "63039"
  },
  {
    "text": "in 2015 and it's what's called a",
    "start": "63039",
    "end": "65439"
  },
  {
    "text": "workflow orchestrator",
    "start": "65439",
    "end": "66799"
  },
  {
    "text": "and the idea is that when you're",
    "start": "66799",
    "end": "68159"
  },
  {
    "text": "building a data pipeline",
    "start": "68159",
    "end": "69840"
  },
  {
    "text": "you have steps that have dependencies",
    "start": "69840",
    "end": "71840"
  },
  {
    "text": "you can't uh",
    "start": "71840",
    "end": "73600"
  },
  {
    "text": "load your data you can't process your",
    "start": "73600",
    "end": "75840"
  },
  {
    "text": "data before you load it",
    "start": "75840",
    "end": "77200"
  },
  {
    "text": "you can't put your cleaned data",
    "start": "77200",
    "end": "80560"
  },
  {
    "text": "into snowflake if you haven't cleaned it",
    "start": "80560",
    "end": "82400"
  },
  {
    "text": "yet and so with all of these different",
    "start": "82400",
    "end": "84560"
  },
  {
    "text": "steps",
    "start": "84560",
    "end": "85520"
  },
  {
    "text": "you want to be able to kind of create a",
    "start": "85520",
    "end": "87759"
  },
  {
    "text": "directed acyclic graph",
    "start": "87759",
    "end": "89280"
  },
  {
    "text": "or dag of uh of tasks",
    "start": "89280",
    "end": "92400"
  },
  {
    "text": "so what are b what uh airflow does is it",
    "start": "92400",
    "end": "94960"
  },
  {
    "text": "allows you to essentially",
    "start": "94960",
    "end": "96479"
  },
  {
    "text": "write python so you don't have to do",
    "start": "96479",
    "end": "98479"
  },
  {
    "text": "json or yaml you have",
    "start": "98479",
    "end": "100079"
  },
  {
    "text": "the full power of the python language to",
    "start": "100079",
    "end": "102399"
  },
  {
    "text": "create these directed acyclic graphs",
    "start": "102399",
    "end": "104640"
  },
  {
    "text": "that will then be processed and turned",
    "start": "104640",
    "end": "106720"
  },
  {
    "text": "into visual graphs that can then",
    "start": "106720",
    "end": "109920"
  },
  {
    "text": "be run at regular schedules airflow",
    "start": "109920",
    "end": "113680"
  },
  {
    "text": "has rich scheduling alerting a",
    "start": "113680",
    "end": "117119"
  },
  {
    "text": "a interactive ui and a really really",
    "start": "117119",
    "end": "120560"
  },
  {
    "text": "wide ecosystem",
    "start": "120560",
    "end": "121680"
  },
  {
    "text": "of connections and variables so you know",
    "start": "121680",
    "end": "124719"
  },
  {
    "text": "you there are great expectation",
    "start": "124719",
    "end": "127119"
  },
  {
    "text": "operators",
    "start": "127119",
    "end": "127759"
  },
  {
    "text": "there's hadoop operators there's uh",
    "start": "127759",
    "end": "131360"
  },
  {
    "text": "postgres operators all of these things",
    "start": "131360",
    "end": "133280"
  },
  {
    "text": "are basically there so that airflow can",
    "start": "133280",
    "end": "135280"
  },
  {
    "text": "kind of act as the conductor",
    "start": "135280",
    "end": "137040"
  },
  {
    "text": "conducting orchestrating all these",
    "start": "137040",
    "end": "138959"
  },
  {
    "text": "different tasks",
    "start": "138959",
    "end": "140160"
  },
  {
    "text": "uh the project is very popular it has",
    "start": "140160",
    "end": "142959"
  },
  {
    "text": "over 20 000 stars on github",
    "start": "142959",
    "end": "145200"
  },
  {
    "text": "and it's used at a wide variety of",
    "start": "145200",
    "end": "146800"
  },
  {
    "text": "fortune 500 companies",
    "start": "146800",
    "end": "148319"
  },
  {
    "text": "like airbnb lyft walmart and lots more",
    "start": "148319",
    "end": "151840"
  },
  {
    "text": "you can",
    "start": "151840",
    "end": "152560"
  },
  {
    "text": "see more on the in the wild of the",
    "start": "152560",
    "end": "154879"
  },
  {
    "text": "apache airflow project",
    "start": "154879",
    "end": "157599"
  },
  {
    "start": "156000",
    "end": "156000"
  },
  {
    "text": "and for those of you who have used",
    "start": "157599",
    "end": "159280"
  },
  {
    "text": "airflow before",
    "start": "159280",
    "end": "160720"
  },
  {
    "text": "we're excited to say that airflow 2.0",
    "start": "160720",
    "end": "162879"
  },
  {
    "text": "has been released as of december 20",
    "start": "162879",
    "end": "165440"
  },
  {
    "text": "in uh december 2020 and 2.1 was released",
    "start": "165440",
    "end": "169760"
  },
  {
    "text": "just in may 2021",
    "start": "169760",
    "end": "171920"
  },
  {
    "text": "and this was a very big uh improvement",
    "start": "171920",
    "end": "175440"
  },
  {
    "text": "on the",
    "start": "175440",
    "end": "175920"
  },
  {
    "text": "a lot of stuff in the back end a lot of",
    "start": "175920",
    "end": "178080"
  },
  {
    "text": "speed ups",
    "start": "178080",
    "end": "179120"
  },
  {
    "text": "most importantly the ability to have",
    "start": "179120",
    "end": "182159"
  },
  {
    "text": "multiple schedulers so now you can scale",
    "start": "182159",
    "end": "184560"
  },
  {
    "text": "out a single airflow deployment",
    "start": "184560",
    "end": "186159"
  },
  {
    "text": "horizontally",
    "start": "186159",
    "end": "187440"
  },
  {
    "text": "and you have scheduler ha which means",
    "start": "187440",
    "end": "189680"
  },
  {
    "text": "you can run multiple schedulers across",
    "start": "189680",
    "end": "191760"
  },
  {
    "text": "different regions or different data",
    "start": "191760",
    "end": "193360"
  },
  {
    "text": "centers and if one of them goes down",
    "start": "193360",
    "end": "195360"
  },
  {
    "text": "you will still meet your slash which",
    "start": "195360",
    "end": "198480"
  },
  {
    "text": "is really important for mission critical",
    "start": "198480",
    "end": "200800"
  },
  {
    "text": "dags",
    "start": "200800",
    "end": "201920"
  },
  {
    "text": "another thing that we have is called the",
    "start": "201920",
    "end": "203840"
  },
  {
    "text": "task flow api",
    "start": "203840",
    "end": "205280"
  },
  {
    "text": "uh there's a small sample of it in the",
    "start": "205280",
    "end": "207120"
  },
  {
    "text": "corner but we will go",
    "start": "207120",
    "end": "208319"
  },
  {
    "text": "more into detail about that later on in",
    "start": "208319",
    "end": "210400"
  },
  {
    "start": "210000",
    "end": "210000"
  },
  {
    "text": "the talk",
    "start": "210400",
    "end": "212640"
  },
  {
    "text": "uh airflow has been around for a while",
    "start": "212640",
    "end": "216000"
  },
  {
    "text": "and it's also been tested at really high",
    "start": "216000",
    "end": "218080"
  },
  {
    "text": "scale",
    "start": "218080",
    "end": "218799"
  },
  {
    "text": "we have seen uh single airflow",
    "start": "218799",
    "end": "220879"
  },
  {
    "text": "deployments running",
    "start": "220879",
    "end": "221840"
  },
  {
    "text": "thousands of dags thousands of tasks in",
    "start": "221840",
    "end": "224560"
  },
  {
    "text": "parallel",
    "start": "224560",
    "end": "225440"
  },
  {
    "text": "and this is really something that has",
    "start": "225440",
    "end": "227040"
  },
  {
    "text": "been proven at the",
    "start": "227040",
    "end": "228640"
  },
  {
    "text": "enterprise scale and we're really proud",
    "start": "228640",
    "end": "231680"
  },
  {
    "text": "of just",
    "start": "231680",
    "end": "232319"
  },
  {
    "text": "how much scale we've been able to get",
    "start": "232319",
    "end": "234000"
  },
  {
    "text": "out of this system",
    "start": "234000",
    "end": "236959"
  },
  {
    "text": "so let's talk a little bit about the",
    "start": "237599",
    "end": "238879"
  },
  {
    "text": "airflow data science story",
    "start": "238879",
    "end": "241439"
  },
  {
    "start": "241000",
    "end": "241000"
  },
  {
    "text": "so the way that we see airflow in the",
    "start": "241439",
    "end": "243680"
  },
  {
    "text": "data science ecosystem is airflow is the",
    "start": "243680",
    "end": "245840"
  },
  {
    "text": "tool that you can use to take your",
    "start": "245840",
    "end": "247519"
  },
  {
    "text": "experiments",
    "start": "247519",
    "end": "248319"
  },
  {
    "text": "and turn them into production grade",
    "start": "248319",
    "end": "250480"
  },
  {
    "text": "models and what that means",
    "start": "250480",
    "end": "252159"
  },
  {
    "text": "is you know once you have the actual",
    "start": "252159",
    "end": "254560"
  },
  {
    "text": "steps on how you want to run yours",
    "start": "254560",
    "end": "256959"
  },
  {
    "text": "on your stuff you're going to need",
    "start": "256959",
    "end": "258479"
  },
  {
    "text": "things like monitoring so that",
    "start": "258479",
    "end": "260639"
  },
  {
    "text": "you know if you're if you have a model",
    "start": "260639",
    "end": "262079"
  },
  {
    "text": "in production you're going to want to",
    "start": "262079",
    "end": "263520"
  },
  {
    "text": "know",
    "start": "263520",
    "end": "264000"
  },
  {
    "text": "if that model hasn't been updated in a",
    "start": "264000",
    "end": "266000"
  },
  {
    "text": "week and you're going to want to be able",
    "start": "266000",
    "end": "267440"
  },
  {
    "text": "to",
    "start": "267440",
    "end": "268000"
  },
  {
    "text": "uh get ensure that you get alerted if",
    "start": "268000",
    "end": "270320"
  },
  {
    "text": "your slas are missed",
    "start": "270320",
    "end": "271919"
  },
  {
    "text": "uh you're going to also want connection",
    "start": "271919",
    "end": "273919"
  },
  {
    "text": "handling so for example",
    "start": "273919",
    "end": "275360"
  },
  {
    "text": "you can write one dag and just by",
    "start": "275360",
    "end": "278320"
  },
  {
    "text": "switching airflow instances you can swap",
    "start": "278320",
    "end": "280639"
  },
  {
    "text": "out that like uh",
    "start": "280639",
    "end": "282240"
  },
  {
    "text": "instead of using the uh the dev",
    "start": "282240",
    "end": "285840"
  },
  {
    "text": "s3 buckets you're using the prod s3",
    "start": "285840",
    "end": "287919"
  },
  {
    "text": "buckets or instead of",
    "start": "287919",
    "end": "289040"
  },
  {
    "text": "using the dev database you're using the",
    "start": "289040",
    "end": "291520"
  },
  {
    "text": "prod database so",
    "start": "291520",
    "end": "292720"
  },
  {
    "text": "it makes it really easy to upgrade",
    "start": "292720",
    "end": "296080"
  },
  {
    "text": "from dev to prod on your data sources",
    "start": "296080",
    "end": "298800"
  },
  {
    "text": "and",
    "start": "298800",
    "end": "299120"
  },
  {
    "text": "it also has this ability to retry jobs",
    "start": "299120",
    "end": "302080"
  },
  {
    "text": "in cases of failure so",
    "start": "302080",
    "end": "303520"
  },
  {
    "text": "if you have a multi-stage pipeline you",
    "start": "303520",
    "end": "306080"
  },
  {
    "text": "might not want to start from the very",
    "start": "306080",
    "end": "307759"
  },
  {
    "text": "beginning",
    "start": "307759",
    "end": "308840"
  },
  {
    "text": "um because because that would be a lot",
    "start": "308840",
    "end": "312160"
  },
  {
    "text": "of wasted",
    "start": "312160",
    "end": "312880"
  },
  {
    "text": "time a lot of wasted computation so by",
    "start": "312880",
    "end": "315600"
  },
  {
    "text": "having each of these tasks being item",
    "start": "315600",
    "end": "317440"
  },
  {
    "text": "potent",
    "start": "317440",
    "end": "318000"
  },
  {
    "text": "you can say if task number five fails",
    "start": "318000",
    "end": "320880"
  },
  {
    "text": "restart at task number five",
    "start": "320880",
    "end": "322560"
  },
  {
    "text": "and you will have an assurance that the",
    "start": "322560",
    "end": "324880"
  },
  {
    "text": "pipeline can",
    "start": "324880",
    "end": "325680"
  },
  {
    "text": "the data pipeline can finish to the end",
    "start": "325680",
    "end": "327840"
  },
  {
    "text": "and you would get the exact same answer",
    "start": "327840",
    "end": "329840"
  },
  {
    "text": "as you would have before so",
    "start": "329840",
    "end": "333440"
  },
  {
    "text": "as far as specifically a data science",
    "start": "333440",
    "end": "335759"
  },
  {
    "text": "story we kind of make the assumption",
    "start": "335759",
    "end": "337680"
  },
  {
    "text": "that",
    "start": "337680",
    "end": "338000"
  },
  {
    "text": "any python machine learning story starts",
    "start": "338000",
    "end": "341199"
  },
  {
    "text": "with some form of a notebook this could",
    "start": "341199",
    "end": "343039"
  },
  {
    "text": "be",
    "start": "343039",
    "end": "343440"
  },
  {
    "text": "jupiter this could be zeppelin this",
    "start": "343440",
    "end": "345199"
  },
  {
    "text": "could be a whole range of notebooks",
    "start": "345199",
    "end": "347039"
  },
  {
    "text": "but in general data scientists like some",
    "start": "347039",
    "end": "349360"
  },
  {
    "text": "sort of an interactive environment",
    "start": "349360",
    "end": "351199"
  },
  {
    "text": "where they can write python like get",
    "start": "351199",
    "end": "353919"
  },
  {
    "text": "really fast feedback and",
    "start": "353919",
    "end": "355520"
  },
  {
    "text": "iterate really quickly while building",
    "start": "355520",
    "end": "357120"
  },
  {
    "start": "357000",
    "end": "357000"
  },
  {
    "text": "their pipelines",
    "start": "357120",
    "end": "358800"
  },
  {
    "text": "so traditionally what we recommended is",
    "start": "358800",
    "end": "361120"
  },
  {
    "text": "that you experiment on your jupiter",
    "start": "361120",
    "end": "362880"
  },
  {
    "text": "notebooks",
    "start": "362880",
    "end": "363600"
  },
  {
    "text": "or other notebooks you use paper mill to",
    "start": "363600",
    "end": "366400"
  },
  {
    "text": "parameterize",
    "start": "366400",
    "end": "367440"
  },
  {
    "text": "and we'll talk a bit about that and then",
    "start": "367440",
    "end": "369759"
  },
  {
    "text": "you can use the paper mill",
    "start": "369759",
    "end": "371440"
  },
  {
    "text": "operator to put your paper mill uh",
    "start": "371440",
    "end": "373919"
  },
  {
    "text": "notebooks",
    "start": "373919",
    "end": "374800"
  },
  {
    "text": "into uh production on your airflow",
    "start": "374800",
    "end": "377759"
  },
  {
    "text": "instance",
    "start": "377759",
    "end": "378720"
  },
  {
    "text": "and um what paper mill is",
    "start": "378720",
    "end": "381759"
  },
  {
    "start": "380000",
    "end": "380000"
  },
  {
    "text": "is essentially it's a way of",
    "start": "381759",
    "end": "383919"
  },
  {
    "text": "parameterizing your notebooks",
    "start": "383919",
    "end": "385440"
  },
  {
    "text": "through cell tagging so you can define",
    "start": "385440",
    "end": "388319"
  },
  {
    "text": "which cells you want to override values",
    "start": "388319",
    "end": "390400"
  },
  {
    "text": "for",
    "start": "390400",
    "end": "390960"
  },
  {
    "text": "and by putting in those values",
    "start": "390960",
    "end": "394160"
  },
  {
    "text": "and giving the notebook to paper mill",
    "start": "394160",
    "end": "396800"
  },
  {
    "text": "papermill will create",
    "start": "396800",
    "end": "398560"
  },
  {
    "text": "a uh a separate notebook that has those",
    "start": "398560",
    "end": "401840"
  },
  {
    "text": "values",
    "start": "401840",
    "end": "402479"
  },
  {
    "text": "injected um and so",
    "start": "402479",
    "end": "405840"
  },
  {
    "text": "and then run that notebook and so you",
    "start": "405840",
    "end": "408000"
  },
  {
    "text": "can store those",
    "start": "408000",
    "end": "409280"
  },
  {
    "text": "uh intermediate notebooks in s3 so you",
    "start": "409280",
    "end": "412000"
  },
  {
    "text": "can then see",
    "start": "412000",
    "end": "412880"
  },
  {
    "text": "what the actual code that was run is uh",
    "start": "412880",
    "end": "416240"
  },
  {
    "text": "so you know for a lot of cases that was",
    "start": "416240",
    "end": "418240"
  },
  {
    "text": "working pretty well",
    "start": "418240",
    "end": "419440"
  },
  {
    "text": "but it has its issues so for example",
    "start": "419440",
    "end": "422560"
  },
  {
    "start": "420000",
    "end": "420000"
  },
  {
    "text": "your entire notebook executes as a",
    "start": "422560",
    "end": "424639"
  },
  {
    "text": "single task",
    "start": "424639",
    "end": "425759"
  },
  {
    "text": "and what that means is you know if you",
    "start": "425759",
    "end": "427759"
  },
  {
    "text": "have all of your stuff in a jupiter",
    "start": "427759",
    "end": "429280"
  },
  {
    "text": "notebook you're not going to break it",
    "start": "429280",
    "end": "430880"
  },
  {
    "text": "into multiple notebooks",
    "start": "430880",
    "end": "432720"
  },
  {
    "text": "so you kind of lose this fault tolerance",
    "start": "432720",
    "end": "436080"
  },
  {
    "text": "of airflow because if something breaks",
    "start": "436080",
    "end": "438560"
  },
  {
    "text": "in the middle of your notebook",
    "start": "438560",
    "end": "440479"
  },
  {
    "text": "you're going to have to restart the",
    "start": "440479",
    "end": "441599"
  },
  {
    "text": "notebook from scratch and that also",
    "start": "441599",
    "end": "443520"
  },
  {
    "text": "means that there's a little bit of a",
    "start": "443520",
    "end": "445120"
  },
  {
    "text": "lack of visibility into",
    "start": "445120",
    "end": "446720"
  },
  {
    "text": "what stage of the pipeline you're in",
    "start": "446720",
    "end": "449280"
  },
  {
    "text": "this also means that your code is in",
    "start": "449280",
    "end": "450960"
  },
  {
    "text": "multiple locations",
    "start": "450960",
    "end": "452160"
  },
  {
    "text": "so let's say you find a bug uh you have",
    "start": "452160",
    "end": "455039"
  },
  {
    "text": "to",
    "start": "455039",
    "end": "455360"
  },
  {
    "text": "either create like create a new version",
    "start": "455360",
    "end": "458800"
  },
  {
    "text": "of that notebook",
    "start": "458800",
    "end": "459840"
  },
  {
    "text": "and then go back to your airflow dag and",
    "start": "459840",
    "end": "462000"
  },
  {
    "text": "change the version",
    "start": "462000",
    "end": "462960"
  },
  {
    "text": "there which means you're changing code",
    "start": "462960",
    "end": "464720"
  },
  {
    "text": "in two places every time you're making a",
    "start": "464720",
    "end": "466720"
  },
  {
    "text": "change",
    "start": "466720",
    "end": "467759"
  },
  {
    "text": "or you change the notebook don't change",
    "start": "467759",
    "end": "470960"
  },
  {
    "text": "the version",
    "start": "470960",
    "end": "472080"
  },
  {
    "text": "and now your airflow dag is going to",
    "start": "472080",
    "end": "474240"
  },
  {
    "text": "have different",
    "start": "474240",
    "end": "476319"
  },
  {
    "text": "interactions but you're not going to",
    "start": "476319",
    "end": "478240"
  },
  {
    "text": "know why from airflow because as far as",
    "start": "478240",
    "end": "480400"
  },
  {
    "text": "airflow is concerned it's running the",
    "start": "480400",
    "end": "481919"
  },
  {
    "text": "exact same dac",
    "start": "481919",
    "end": "483360"
  },
  {
    "text": "so this makes experimentation difficult",
    "start": "483360",
    "end": "485520"
  },
  {
    "text": "but also importantly",
    "start": "485520",
    "end": "487280"
  },
  {
    "text": "it makes repeatability quite messy",
    "start": "487280",
    "end": "491840"
  },
  {
    "start": "490000",
    "end": "490000"
  },
  {
    "text": "we kind of wanted to think about what",
    "start": "491840",
    "end": "493440"
  },
  {
    "text": "our next generation",
    "start": "493440",
    "end": "495039"
  },
  {
    "text": "of an airflow data science story would",
    "start": "495039",
    "end": "496800"
  },
  {
    "text": "look like how do we go",
    "start": "496800",
    "end": "498319"
  },
  {
    "text": "from this notebook based development to",
    "start": "498319",
    "end": "500960"
  },
  {
    "text": "a production pipeline",
    "start": "500960",
    "end": "503360"
  },
  {
    "start": "501000",
    "end": "501000"
  },
  {
    "text": "and so we went to the drawing board and",
    "start": "503360",
    "end": "505039"
  },
  {
    "text": "we said what is our ideal story",
    "start": "505039",
    "end": "507440"
  },
  {
    "text": "well of course we want minimal",
    "start": "507440",
    "end": "509360"
  },
  {
    "text": "conversion time from jupiter notebook to",
    "start": "509360",
    "end": "511360"
  },
  {
    "text": "airflow dag",
    "start": "511360",
    "end": "512320"
  },
  {
    "text": "how can we do as few steps as possible",
    "start": "512320",
    "end": "515200"
  },
  {
    "text": "and",
    "start": "515200",
    "end": "515760"
  },
  {
    "text": "get your get you running from your",
    "start": "515760",
    "end": "517360"
  },
  {
    "text": "experiments we wanted the ability to",
    "start": "517360",
    "end": "519599"
  },
  {
    "text": "move large data sets between different",
    "start": "519599",
    "end": "521599"
  },
  {
    "text": "tasks",
    "start": "521599",
    "end": "522399"
  },
  {
    "text": "uh without any consideration from the",
    "start": "522399",
    "end": "524800"
  },
  {
    "text": "data scientists so",
    "start": "524800",
    "end": "526160"
  },
  {
    "text": "if you have one task that returns a data",
    "start": "526160",
    "end": "529040"
  },
  {
    "text": "frame",
    "start": "529040",
    "end": "529600"
  },
  {
    "text": "and the next task takes a data frame we",
    "start": "529600",
    "end": "532160"
  },
  {
    "text": "don't want you to worry about how",
    "start": "532160",
    "end": "534000"
  },
  {
    "text": "that's being moved you we want you to",
    "start": "534000",
    "end": "536080"
  },
  {
    "text": "just focus on the actual logic of the",
    "start": "536080",
    "end": "538240"
  },
  {
    "text": "code",
    "start": "538240",
    "end": "539440"
  },
  {
    "text": "um the user should also be able to",
    "start": "539440",
    "end": "542800"
  },
  {
    "text": "request",
    "start": "542800",
    "end": "543440"
  },
  {
    "text": "dedicated resources for a specific task",
    "start": "543440",
    "end": "546160"
  },
  {
    "text": "or job",
    "start": "546160",
    "end": "546959"
  },
  {
    "text": "and what that means is you might have",
    "start": "546959",
    "end": "548720"
  },
  {
    "text": "one task that needs gpu",
    "start": "548720",
    "end": "550640"
  },
  {
    "text": "for pytorch or it needs ram for a data",
    "start": "550640",
    "end": "553760"
  },
  {
    "text": "frame or",
    "start": "553760",
    "end": "554560"
  },
  {
    "text": "cpu because you're doing something with",
    "start": "554560",
    "end": "556320"
  },
  {
    "text": "xg boost and those will be different",
    "start": "556320",
    "end": "558800"
  },
  {
    "text": "depending on the task you're trying to",
    "start": "558800",
    "end": "560839"
  },
  {
    "text": "run um",
    "start": "560839",
    "end": "563040"
  },
  {
    "text": "we also wanted the ability to register",
    "start": "563040",
    "end": "566000"
  },
  {
    "text": "and deploy your dags",
    "start": "566000",
    "end": "567680"
  },
  {
    "text": "from your airflow drive sorry register",
    "start": "567680",
    "end": "569920"
  },
  {
    "text": "and deploy your models",
    "start": "569920",
    "end": "571360"
  },
  {
    "text": "from your airflow dac so how great would",
    "start": "571360",
    "end": "573600"
  },
  {
    "text": "it be that the step",
    "start": "573600",
    "end": "574880"
  },
  {
    "text": "of model creation and model deployment",
    "start": "574880",
    "end": "578000"
  },
  {
    "text": "were all in the same place and you could",
    "start": "578000",
    "end": "580800"
  },
  {
    "text": "also tie into",
    "start": "580800",
    "end": "582000"
  },
  {
    "text": "existing model registries in a really",
    "start": "582000",
    "end": "584080"
  },
  {
    "text": "easy way",
    "start": "584080",
    "end": "585360"
  },
  {
    "text": "and to do all of this while maintaining",
    "start": "585360",
    "end": "587680"
  },
  {
    "text": "the orchestration",
    "start": "587680",
    "end": "588959"
  },
  {
    "text": "monitoring and scale of apache airflow",
    "start": "588959",
    "end": "592720"
  },
  {
    "start": "591000",
    "end": "591000"
  },
  {
    "text": "and this is where we see we found a",
    "start": "592720",
    "end": "595200"
  },
  {
    "text": "really awesome",
    "start": "595200",
    "end": "596480"
  },
  {
    "text": "collaboration point with ray ray",
    "start": "596480",
    "end": "599600"
  },
  {
    "text": "has native integrations with so much of",
    "start": "599600",
    "end": "602399"
  },
  {
    "text": "the ml ecosystem and",
    "start": "602399",
    "end": "604000"
  },
  {
    "text": "so many really cool ways of doing a lot",
    "start": "604000",
    "end": "606399"
  },
  {
    "text": "of common ml things like hyper parameter",
    "start": "606399",
    "end": "609200"
  },
  {
    "text": "tuning",
    "start": "609200",
    "end": "610480"
  },
  {
    "text": "the setup is extremely simple and",
    "start": "610480",
    "end": "613200"
  },
  {
    "text": "doesn't require anything like",
    "start": "613200",
    "end": "614720"
  },
  {
    "text": "installing java onto your airflow",
    "start": "614720",
    "end": "617040"
  },
  {
    "text": "cluster or",
    "start": "617040",
    "end": "618000"
  },
  {
    "text": "installing any system libraries it's",
    "start": "618000",
    "end": "619839"
  },
  {
    "text": "very straightforward",
    "start": "619839",
    "end": "622399"
  },
  {
    "text": "it also has a lot of options for",
    "start": "622399",
    "end": "624399"
  },
  {
    "text": "distributed computation",
    "start": "624399",
    "end": "626000"
  },
  {
    "text": "you can run dash on ray you can run",
    "start": "626000",
    "end": "628320"
  },
  {
    "text": "spark on ray you can run",
    "start": "628320",
    "end": "629680"
  },
  {
    "text": "you can use a modem and so that allows",
    "start": "629680",
    "end": "632160"
  },
  {
    "text": "for large-scale data processing",
    "start": "632160",
    "end": "634000"
  },
  {
    "text": "and it has race serve so that it has a",
    "start": "634000",
    "end": "636800"
  },
  {
    "text": "python library that makes it easy to",
    "start": "636800",
    "end": "639040"
  },
  {
    "text": "push your data push your model to uh",
    "start": "639040",
    "end": "642160"
  },
  {
    "text": "a endpoint that is reachable once you",
    "start": "642160",
    "end": "644720"
  },
  {
    "text": "have",
    "start": "644720",
    "end": "645200"
  },
  {
    "text": "completed your model creation so now we",
    "start": "645200",
    "end": "648480"
  },
  {
    "text": "want to ask like",
    "start": "648480",
    "end": "649440"
  },
  {
    "text": "okay we know we want airflow to work",
    "start": "649440",
    "end": "652160"
  },
  {
    "text": "well with",
    "start": "652160",
    "end": "652720"
  },
  {
    "text": "rey but what is the connection point how",
    "start": "652720",
    "end": "655839"
  },
  {
    "text": "do we make these two work in a way that",
    "start": "655839",
    "end": "657920"
  },
  {
    "text": "is clean and native",
    "start": "657920",
    "end": "660240"
  },
  {
    "start": "659000",
    "end": "659000"
  },
  {
    "text": "and that's actually where the task flow",
    "start": "660240",
    "end": "662000"
  },
  {
    "text": "api comes into play",
    "start": "662000",
    "end": "663600"
  },
  {
    "text": "so the task flow api was introduced in",
    "start": "663600",
    "end": "665920"
  },
  {
    "text": "airflow 2.0",
    "start": "665920",
    "end": "667519"
  },
  {
    "text": "and what it essentially allows you to do",
    "start": "667519",
    "end": "669680"
  },
  {
    "text": "is rather than needing to define a",
    "start": "669680",
    "end": "671680"
  },
  {
    "text": "python operator",
    "start": "671680",
    "end": "673120"
  },
  {
    "text": "you can just give any arbitrary python",
    "start": "673120",
    "end": "675600"
  },
  {
    "text": "function",
    "start": "675600",
    "end": "676560"
  },
  {
    "text": "add a task decorator and then just put",
    "start": "676560",
    "end": "679279"
  },
  {
    "text": "it into your dag object",
    "start": "679279",
    "end": "680880"
  },
  {
    "text": "and call that function you can even pass",
    "start": "680880",
    "end": "683360"
  },
  {
    "text": "data between tasks",
    "start": "683360",
    "end": "684800"
  },
  {
    "text": "using functional composition and this",
    "start": "684800",
    "end": "687600"
  },
  {
    "text": "has worked really well for a lot of",
    "start": "687600",
    "end": "689040"
  },
  {
    "text": "simple cases but",
    "start": "689040",
    "end": "690320"
  },
  {
    "text": "what do we do for how do we basically",
    "start": "690320",
    "end": "693600"
  },
  {
    "text": "merge this",
    "start": "693600",
    "end": "694240"
  },
  {
    "text": "with the power of ray how do we get all",
    "start": "694240",
    "end": "696399"
  },
  {
    "text": "the benefits of ray",
    "start": "696399",
    "end": "697760"
  },
  {
    "text": "into the task flow api and so",
    "start": "697760",
    "end": "701200"
  },
  {
    "text": "this is where the ray dot remote",
    "start": "701200",
    "end": "702959"
  },
  {
    "text": "function comes into play",
    "start": "702959",
    "end": "704560"
  },
  {
    "text": "you know the ray has this really cool",
    "start": "704560",
    "end": "706640"
  },
  {
    "text": "function where you can also",
    "start": "706640",
    "end": "708240"
  },
  {
    "text": "add a decorator to any uh python",
    "start": "708240",
    "end": "711440"
  },
  {
    "text": "function",
    "start": "711440",
    "end": "712000"
  },
  {
    "text": "and now that function is callable and if",
    "start": "712000",
    "end": "714240"
  },
  {
    "text": "you call that function",
    "start": "714240",
    "end": "715440"
  },
  {
    "text": "in a correct way you are able to push",
    "start": "715440",
    "end": "718079"
  },
  {
    "text": "that function to your array cluster",
    "start": "718079",
    "end": "720079"
  },
  {
    "text": "and have it run in ray so with that",
    "start": "720079",
    "end": "723440"
  },
  {
    "text": "and in partnership with our friends at",
    "start": "723440",
    "end": "725279"
  },
  {
    "start": "724000",
    "end": "724000"
  },
  {
    "text": "any scale we are",
    "start": "725279",
    "end": "726480"
  },
  {
    "text": "unbelievably excited to introduce the",
    "start": "726480",
    "end": "728720"
  },
  {
    "text": "ray decorator and the ray provider",
    "start": "728720",
    "end": "731440"
  },
  {
    "text": "for apache airflow and what this is is",
    "start": "731440",
    "end": "733920"
  },
  {
    "text": "you now have this",
    "start": "733920",
    "end": "735040"
  },
  {
    "text": "decorator called ray task and by using",
    "start": "735040",
    "end": "738320"
  },
  {
    "text": "this decorator",
    "start": "738320",
    "end": "740000"
  },
  {
    "text": "not only is any python function turned",
    "start": "740000",
    "end": "743040"
  },
  {
    "text": "into an airflow task",
    "start": "743040",
    "end": "744480"
  },
  {
    "text": "it is turned into an airflow task that",
    "start": "744480",
    "end": "746639"
  },
  {
    "text": "is run in red",
    "start": "746639",
    "end": "748480"
  },
  {
    "text": "so with a single line you can with a",
    "start": "748480",
    "end": "751360"
  },
  {
    "text": "couple of lines you can now run your uh",
    "start": "751360",
    "end": "753519"
  },
  {
    "text": "code in the array cluster and you can",
    "start": "753519",
    "end": "756320"
  },
  {
    "text": "take advantage of ray's dynamic sizing",
    "start": "756320",
    "end": "759440"
  },
  {
    "text": "and importantly you can actually now",
    "start": "759440",
    "end": "762480"
  },
  {
    "text": "we will automatically store your",
    "start": "762480",
    "end": "764480"
  },
  {
    "text": "intermediate values",
    "start": "764480",
    "end": "766000"
  },
  {
    "text": "in the plasma store of ray so not only",
    "start": "766000",
    "end": "768560"
  },
  {
    "text": "do you not need to worry",
    "start": "768560",
    "end": "770160"
  },
  {
    "text": "about moving your data between tests you",
    "start": "770160",
    "end": "772720"
  },
  {
    "text": "don't even need to worry about",
    "start": "772720",
    "end": "774240"
  },
  {
    "text": "reloading it because it will be stored",
    "start": "774240",
    "end": "776320"
  },
  {
    "text": "in memory between those tasks",
    "start": "776320",
    "end": "778399"
  },
  {
    "text": "and so you get data locality you move",
    "start": "778399",
    "end": "780880"
  },
  {
    "text": "the you move the task",
    "start": "780880",
    "end": "782560"
  },
  {
    "text": "to where the data is",
    "start": "782560",
    "end": "786160"
  },
  {
    "text": "ultimately uh what we're what we feel",
    "start": "786160",
    "end": "788560"
  },
  {
    "text": "we've built",
    "start": "788560",
    "end": "789200"
  },
  {
    "text": "with this partnership has been a",
    "start": "789200",
    "end": "791360"
  },
  {
    "text": "top-tier ml tool",
    "start": "791360",
    "end": "793279"
  },
  {
    "text": "a mix of the top-tier ml tooling of ray",
    "start": "793279",
    "end": "796000"
  },
  {
    "text": "with the stability and ecosystem of",
    "start": "796000",
    "end": "798839"
  },
  {
    "text": "airflow",
    "start": "798839",
    "end": "800720"
  },
  {
    "text": "that's great daniel thank you i'd love",
    "start": "800720",
    "end": "803360"
  },
  {
    "text": "to talk about how we get this into",
    "start": "803360",
    "end": "804639"
  },
  {
    "text": "production now",
    "start": "804639",
    "end": "806000"
  },
  {
    "text": "so let's go ahead and dive right in",
    "start": "806000",
    "end": "809120"
  },
  {
    "start": "807000",
    "end": "807000"
  },
  {
    "text": "so we discussed the concept of notebooks",
    "start": "809120",
    "end": "812560"
  },
  {
    "text": "and here you'll see a notebook we're all",
    "start": "812560",
    "end": "815360"
  },
  {
    "text": "familiar with",
    "start": "815360",
    "end": "817040"
  },
  {
    "text": "and when you're writing code in these",
    "start": "817040",
    "end": "818560"
  },
  {
    "text": "notebooks you might be used to",
    "start": "818560",
    "end": "821120"
  },
  {
    "text": "developing the code in cells in such a",
    "start": "821120",
    "end": "822880"
  },
  {
    "text": "way that you understand the notebook is",
    "start": "822880",
    "end": "824320"
  },
  {
    "text": "going to hold",
    "start": "824320",
    "end": "825360"
  },
  {
    "text": "the return values or the results from",
    "start": "825360",
    "end": "828000"
  },
  {
    "text": "each cell in memory",
    "start": "828000",
    "end": "829600"
  },
  {
    "text": "and so what we want to start doing right",
    "start": "829600",
    "end": "831360"
  },
  {
    "text": "now is encapsulate a little bit",
    "start": "831360",
    "end": "833519"
  },
  {
    "text": "we're going to take the code and add",
    "start": "833519",
    "end": "835360"
  },
  {
    "text": "return values build functions out of it",
    "start": "835360",
    "end": "837839"
  },
  {
    "text": "what that's going to allow us to do is",
    "start": "837839",
    "end": "840320"
  },
  {
    "text": "move to our experimentation stage",
    "start": "840320",
    "end": "842800"
  },
  {
    "start": "842000",
    "end": "842000"
  },
  {
    "text": "experimentation it's going to be the",
    "start": "842800",
    "end": "845040"
  },
  {
    "text": "very first step",
    "start": "845040",
    "end": "846160"
  },
  {
    "text": "of moving our code into airflow we're",
    "start": "846160",
    "end": "849199"
  },
  {
    "text": "copying and pasting",
    "start": "849199",
    "end": "850800"
  },
  {
    "text": "at that point almost directly so at that",
    "start": "850800",
    "end": "854160"
  },
  {
    "text": "point we're going to start thinking",
    "start": "854160",
    "end": "855440"
  },
  {
    "text": "about training our model",
    "start": "855440",
    "end": "856560"
  },
  {
    "text": "we're going to think about tuning it but",
    "start": "856560",
    "end": "859839"
  },
  {
    "text": "we can still take values hard code them",
    "start": "859839",
    "end": "862399"
  },
  {
    "text": "in",
    "start": "862399",
    "end": "863600"
  },
  {
    "text": "sort of mess around and see what goes",
    "start": "863600",
    "end": "865120"
  },
  {
    "text": "but now we have a control flow that's",
    "start": "865120",
    "end": "866880"
  },
  {
    "text": "going to exist in airflow",
    "start": "866880",
    "end": "868639"
  },
  {
    "text": "going forward we want to start creating",
    "start": "868639",
    "end": "870880"
  },
  {
    "text": "some dynamic values",
    "start": "870880",
    "end": "872320"
  },
  {
    "text": "and that's going to be the part where",
    "start": "872320",
    "end": "873760"
  },
  {
    "text": "we're parameterizing",
    "start": "873760",
    "end": "876000"
  },
  {
    "start": "874000",
    "end": "874000"
  },
  {
    "text": "in parameterization we're using",
    "start": "876000",
    "end": "878399"
  },
  {
    "text": "airflow's",
    "start": "878399",
    "end": "879279"
  },
  {
    "text": "macro concept what that does is allow us",
    "start": "879279",
    "end": "883440"
  },
  {
    "text": "to inject",
    "start": "883440",
    "end": "884160"
  },
  {
    "text": "values at runtime that we could change",
    "start": "884160",
    "end": "887920"
  },
  {
    "text": "dynamically through each task iteration",
    "start": "887920",
    "end": "890720"
  },
  {
    "text": "or through each dag",
    "start": "890720",
    "end": "891839"
  },
  {
    "text": "iteration so here on the screen you're",
    "start": "891839",
    "end": "894240"
  },
  {
    "text": "seeing the concept of",
    "start": "894240",
    "end": "895760"
  },
  {
    "text": "a data path so suppose we want to change",
    "start": "895760",
    "end": "898720"
  },
  {
    "text": "the location of where our data is stored",
    "start": "898720",
    "end": "900399"
  },
  {
    "text": "from",
    "start": "900399",
    "end": "900959"
  },
  {
    "text": "s3 or gcs or feature store or some",
    "start": "900959",
    "end": "903920"
  },
  {
    "text": "different model registry",
    "start": "903920",
    "end": "906480"
  },
  {
    "text": "it's really up to us at that point",
    "start": "906480",
    "end": "908079"
  },
  {
    "text": "because we can create a template",
    "start": "908079",
    "end": "910399"
  },
  {
    "text": "and then put into it put whatever we",
    "start": "910399",
    "end": "912560"
  },
  {
    "text": "wanted to it",
    "start": "912560",
    "end": "913920"
  },
  {
    "text": "another one of these structures that",
    "start": "913920",
    "end": "915279"
  },
  {
    "text": "works really well in airflow and super",
    "start": "915279",
    "end": "917040"
  },
  {
    "text": "powerful is the concept of an execution",
    "start": "917040",
    "end": "918959"
  },
  {
    "text": "date",
    "start": "918959",
    "end": "919680"
  },
  {
    "text": "which we're rapidly iterating on and",
    "start": "919680",
    "end": "921680"
  },
  {
    "text": "improving it's it's going to be really",
    "start": "921680",
    "end": "923360"
  },
  {
    "text": "great",
    "start": "923360",
    "end": "924320"
  },
  {
    "text": "but this concept in itself gives us a",
    "start": "924320",
    "end": "927360"
  },
  {
    "text": "time stamp",
    "start": "927360",
    "end": "928480"
  },
  {
    "text": "per run of that we can expect",
    "start": "928480",
    "end": "931839"
  },
  {
    "text": "on a schedule to be as per an interval",
    "start": "931839",
    "end": "935440"
  },
  {
    "text": "every time",
    "start": "935440",
    "end": "936079"
  },
  {
    "text": "so what that does is give us a really",
    "start": "936079",
    "end": "937680"
  },
  {
    "text": "powerful way to",
    "start": "937680",
    "end": "939360"
  },
  {
    "text": "benchmark and repeat values and",
    "start": "939360",
    "end": "942959"
  },
  {
    "text": "monitor our experiments and repeat and",
    "start": "942959",
    "end": "946480"
  },
  {
    "text": "rinse and repeat but after that we're",
    "start": "946480",
    "end": "949440"
  },
  {
    "text": "gonna",
    "start": "949440",
    "end": "950160"
  },
  {
    "start": "950000",
    "end": "950000"
  },
  {
    "text": "we're gonna want to go into production",
    "start": "950160",
    "end": "951680"
  },
  {
    "text": "we're gonna want to get everything set",
    "start": "951680",
    "end": "953680"
  },
  {
    "text": "up and ready to go",
    "start": "953680",
    "end": "955360"
  },
  {
    "text": "so at that point we're we're almost",
    "start": "955360",
    "end": "957759"
  },
  {
    "text": "there",
    "start": "957759",
    "end": "959040"
  },
  {
    "text": "we're in an airflow dag and now the only",
    "start": "959040",
    "end": "961759"
  },
  {
    "text": "thing we have to do is add the tasks",
    "start": "961759",
    "end": "963199"
  },
  {
    "text": "that are necessary",
    "start": "963199",
    "end": "964399"
  },
  {
    "text": "and at that point we can start adding",
    "start": "964399",
    "end": "966079"
  },
  {
    "text": "raised native libraries on top",
    "start": "966079",
    "end": "968399"
  },
  {
    "text": "so what does that mean we can",
    "start": "968399",
    "end": "970079"
  },
  {
    "text": "parallelize tasks",
    "start": "970079",
    "end": "971759"
  },
  {
    "text": "uh we can start tuning our models and",
    "start": "971759",
    "end": "974800"
  },
  {
    "text": "what this gives us the ability to do is",
    "start": "974800",
    "end": "976720"
  },
  {
    "text": "create a schedule of the entire process",
    "start": "976720",
    "end": "979040"
  },
  {
    "text": "the entire pipeline",
    "start": "979040",
    "end": "980240"
  },
  {
    "text": "of ml uh and give that",
    "start": "980240",
    "end": "983680"
  },
  {
    "text": "ability to monitor to",
    "start": "983680",
    "end": "987040"
  },
  {
    "text": "deploy or redeploy our best models uh",
    "start": "987040",
    "end": "990079"
  },
  {
    "text": "and that keeps everything fresh and we",
    "start": "990079",
    "end": "992399"
  },
  {
    "text": "can",
    "start": "992399",
    "end": "993360"
  },
  {
    "text": "set it and forget it let it know that",
    "start": "993360",
    "end": "994880"
  },
  {
    "text": "it's happening and everything is going",
    "start": "994880",
    "end": "996399"
  },
  {
    "text": "great",
    "start": "996399",
    "end": "997360"
  },
  {
    "text": "and then after that we have this entire",
    "start": "997360",
    "end": "1000399"
  },
  {
    "text": "ecosystem that airflow and ray combined",
    "start": "1000399",
    "end": "1003440"
  },
  {
    "text": "has now given us access to which is",
    "start": "1003440",
    "end": "1006720"
  },
  {
    "text": "the next generation airflow data science",
    "start": "1006720",
    "end": "1009519"
  },
  {
    "text": "story",
    "start": "1009519",
    "end": "1011279"
  },
  {
    "text": "so we have created this concept this new",
    "start": "1011279",
    "end": "1014639"
  },
  {
    "text": "concept of develop",
    "start": "1014639",
    "end": "1016160"
  },
  {
    "text": "experiment parameterize production eyes",
    "start": "1016160",
    "end": "1019199"
  },
  {
    "text": "now sitting on top of ray's native",
    "start": "1019199",
    "end": "1022320"
  },
  {
    "text": "libraries",
    "start": "1022320",
    "end": "1023360"
  },
  {
    "text": "and all these new third-party libraries",
    "start": "1023360",
    "end": "1025600"
  },
  {
    "text": "that are immediately plugable",
    "start": "1025600",
    "end": "1027520"
  },
  {
    "text": "so we got das we got moden uh xgboost",
    "start": "1027520",
    "end": "1031360"
  },
  {
    "text": "all these the whole ml ecosystem is now",
    "start": "1031360",
    "end": "1034640"
  },
  {
    "text": "at our disposal for it so",
    "start": "1034640",
    "end": "1037678"
  },
  {
    "text": "how does this work i mean classically",
    "start": "1037679",
    "end": "1041199"
  },
  {
    "text": "in airflow the only way to communicate",
    "start": "1041199",
    "end": "1044240"
  },
  {
    "start": "1044000",
    "end": "1044000"
  },
  {
    "text": "data between tasks is the concept of of",
    "start": "1044240",
    "end": "1047360"
  },
  {
    "text": "x-com",
    "start": "1047360",
    "end": "1048319"
  },
  {
    "text": "and what that does is it takes data",
    "start": "1048319",
    "end": "1050320"
  },
  {
    "text": "that's returned from a function and",
    "start": "1050320",
    "end": "1051919"
  },
  {
    "text": "stores it in",
    "start": "1051919",
    "end": "1053280"
  },
  {
    "text": "the airflow metadata base so postgres as",
    "start": "1053280",
    "end": "1056240"
  },
  {
    "text": "shown here",
    "start": "1056240",
    "end": "1057200"
  },
  {
    "text": "it's pluggable to change now what we",
    "start": "1057200",
    "end": "1059840"
  },
  {
    "text": "want to do",
    "start": "1059840",
    "end": "1060880"
  },
  {
    "text": "is take this concept and say well if",
    "start": "1060880",
    "end": "1063200"
  },
  {
    "text": "tasks are going to be communicating and",
    "start": "1063200",
    "end": "1065039"
  },
  {
    "text": "sending these large data",
    "start": "1065039",
    "end": "1066080"
  },
  {
    "text": "sets between each other why don't why",
    "start": "1066080",
    "end": "1068559"
  },
  {
    "text": "don't we submit",
    "start": "1068559",
    "end": "1069760"
  },
  {
    "text": "this function over to a different",
    "start": "1069760",
    "end": "1071440"
  },
  {
    "text": "cluster to ray",
    "start": "1071440",
    "end": "1073200"
  },
  {
    "text": "and then let's let rey deal with it all",
    "start": "1073200",
    "end": "1076240"
  },
  {
    "text": "so ray is going to take it and it's",
    "start": "1076240",
    "end": "1077760"
  },
  {
    "text": "going to store it in its own memory",
    "start": "1077760",
    "end": "1079039"
  },
  {
    "text": "store",
    "start": "1079039",
    "end": "1079760"
  },
  {
    "text": "and send us an object id back what that",
    "start": "1079760",
    "end": "1082559"
  },
  {
    "text": "does is it allows us to pass",
    "start": "1082559",
    "end": "1085120"
  },
  {
    "text": "uh our parameters by reference between",
    "start": "1085120",
    "end": "1088080"
  },
  {
    "text": "our",
    "start": "1088080",
    "end": "1088480"
  },
  {
    "text": "our python tasks so anyone who's done",
    "start": "1088480",
    "end": "1091200"
  },
  {
    "text": "any sort of uh",
    "start": "1091200",
    "end": "1092160"
  },
  {
    "text": "c plus we're basically now doing python",
    "start": "1092160",
    "end": "1096480"
  },
  {
    "text": "in a distributed environment sending",
    "start": "1096480",
    "end": "1098960"
  },
  {
    "text": "objects by reference",
    "start": "1098960",
    "end": "1100160"
  },
  {
    "text": "which is amazing and if you look into",
    "start": "1100160",
    "end": "1102480"
  },
  {
    "text": "the airflow metadata base you're going",
    "start": "1102480",
    "end": "1104080"
  },
  {
    "text": "to see object ids",
    "start": "1104080",
    "end": "1106000"
  },
  {
    "text": "and those are direct pointers to the",
    "start": "1106000",
    "end": "1107919"
  },
  {
    "text": "objects in rey",
    "start": "1107919",
    "end": "1109039"
  },
  {
    "text": "but meanwhile they live in ray the",
    "start": "1109039",
    "end": "1111440"
  },
  {
    "text": "entire time",
    "start": "1111440",
    "end": "1112960"
  },
  {
    "text": "so now what that gives us is this",
    "start": "1112960",
    "end": "1115840"
  },
  {
    "text": "amazing",
    "start": "1115840",
    "end": "1117039"
  },
  {
    "text": "huge architecture of these two systems",
    "start": "1117039",
    "end": "1120160"
  },
  {
    "text": "that were",
    "start": "1120160",
    "end": "1120880"
  },
  {
    "text": "growing up independently now working",
    "start": "1120880",
    "end": "1123280"
  },
  {
    "text": "perfectly with each other",
    "start": "1123280",
    "end": "1124720"
  },
  {
    "text": "or we have on one side this robust",
    "start": "1124720",
    "end": "1127600"
  },
  {
    "text": "orchestrator scheduler",
    "start": "1127600",
    "end": "1129600"
  },
  {
    "text": "that is able to queue tasks and",
    "start": "1129600",
    "end": "1132720"
  },
  {
    "text": "thousands at a time in parallel and then",
    "start": "1132720",
    "end": "1135200"
  },
  {
    "text": "this other system",
    "start": "1135200",
    "end": "1137039"
  },
  {
    "text": "that is amazing at distributed",
    "start": "1137039",
    "end": "1138880"
  },
  {
    "text": "computation",
    "start": "1138880",
    "end": "1140320"
  },
  {
    "text": "and storing objects in memory and now",
    "start": "1140320",
    "end": "1142880"
  },
  {
    "text": "they they work together perfectly",
    "start": "1142880",
    "end": "1146640"
  },
  {
    "text": "so what does that do that gives us some",
    "start": "1146799",
    "end": "1149280"
  },
  {
    "text": "next steps right",
    "start": "1149280",
    "end": "1152000"
  },
  {
    "start": "1150000",
    "end": "1150000"
  },
  {
    "text": "so one of the things that makes us",
    "start": "1152000",
    "end": "1155280"
  },
  {
    "text": "really powerful",
    "start": "1155280",
    "end": "1156160"
  },
  {
    "text": "on the concept of production is being",
    "start": "1156160",
    "end": "1158880"
  },
  {
    "text": "able to serve our model",
    "start": "1158880",
    "end": "1160960"
  },
  {
    "text": "but it's often that we might have",
    "start": "1160960",
    "end": "1164080"
  },
  {
    "text": "business logic that's involved with our",
    "start": "1164080",
    "end": "1165840"
  },
  {
    "text": "models so suppose",
    "start": "1165840",
    "end": "1167679"
  },
  {
    "text": "we might want to create a contingency",
    "start": "1167679",
    "end": "1169679"
  },
  {
    "text": "plan where",
    "start": "1169679",
    "end": "1171120"
  },
  {
    "text": "uh in one scenario we serve model one in",
    "start": "1171120",
    "end": "1173520"
  },
  {
    "text": "another scenario we certain model two",
    "start": "1173520",
    "end": "1175520"
  },
  {
    "text": "based on",
    "start": "1175520",
    "end": "1176640"
  },
  {
    "text": "the data that comes in through our api",
    "start": "1176640",
    "end": "1179440"
  },
  {
    "text": "so",
    "start": "1179440",
    "end": "1180160"
  },
  {
    "text": "let's do that we can build our models in",
    "start": "1180160",
    "end": "1182720"
  },
  {
    "text": "parallel",
    "start": "1182720",
    "end": "1183919"
  },
  {
    "text": "we can compose them in another task and",
    "start": "1183919",
    "end": "1187039"
  },
  {
    "text": "then we can deploy",
    "start": "1187039",
    "end": "1188240"
  },
  {
    "text": "that composed model all in the same dag",
    "start": "1188240",
    "end": "1191360"
  },
  {
    "text": "workflow and now the sudden we have this",
    "start": "1191360",
    "end": "1195200"
  },
  {
    "text": "dynamic dynamic variability uh",
    "start": "1195200",
    "end": "1198559"
  },
  {
    "text": "to our models that we created so let's",
    "start": "1198559",
    "end": "1201679"
  },
  {
    "text": "also talk about checkpointing",
    "start": "1201679",
    "end": "1207280"
  },
  {
    "start": "1204000",
    "end": "1204000"
  },
  {
    "text": "checkpointing has a couple different",
    "start": "1207280",
    "end": "1209200"
  },
  {
    "text": "connotations",
    "start": "1209200",
    "end": "1210400"
  },
  {
    "text": "uh in the tune library we see",
    "start": "1210400",
    "end": "1213520"
  },
  {
    "text": "ray tune create benchmarks or create",
    "start": "1213520",
    "end": "1216720"
  },
  {
    "text": "checkpoints for each iteration that it",
    "start": "1216720",
    "end": "1218880"
  },
  {
    "text": "goes through to",
    "start": "1218880",
    "end": "1220320"
  },
  {
    "text": "param the search space or to tune the",
    "start": "1220320",
    "end": "1223200"
  },
  {
    "text": "search base",
    "start": "1223200",
    "end": "1225120"
  },
  {
    "text": "another concept is in airflow",
    "start": "1225120",
    "end": "1228640"
  },
  {
    "text": "when we run tasks we look for",
    "start": "1228640",
    "end": "1230080"
  },
  {
    "text": "repeatability if the task fails",
    "start": "1230080",
    "end": "1232720"
  },
  {
    "text": "and we've built our dag in an item",
    "start": "1232720",
    "end": "1234559"
  },
  {
    "text": "potent way we want to be able to go back",
    "start": "1234559",
    "end": "1237039"
  },
  {
    "text": "clear the task and and let it pick up",
    "start": "1237039",
    "end": "1239039"
  },
  {
    "text": "where it left off",
    "start": "1239039",
    "end": "1240559"
  },
  {
    "text": "so in this workflow scenario we can",
    "start": "1240559",
    "end": "1243280"
  },
  {
    "text": "store these",
    "start": "1243280",
    "end": "1244559"
  },
  {
    "text": "uh intermediate values out of memory to",
    "start": "1244559",
    "end": "1247520"
  },
  {
    "text": "disk when something fails",
    "start": "1247520",
    "end": "1249520"
  },
  {
    "text": "that gives us the ability to rerun and",
    "start": "1249520",
    "end": "1251280"
  },
  {
    "text": "start from the middle",
    "start": "1251280",
    "end": "1253039"
  },
  {
    "text": "so we no longer have to run the entire",
    "start": "1253039",
    "end": "1254960"
  },
  {
    "text": "notebook going back to the old story",
    "start": "1254960",
    "end": "1256799"
  },
  {
    "text": "we can now pick up where it left off and",
    "start": "1256799",
    "end": "1259120"
  },
  {
    "text": "now with tune",
    "start": "1259120",
    "end": "1260240"
  },
  {
    "text": "if we're running experiments and we want",
    "start": "1260240",
    "end": "1262080"
  },
  {
    "text": "to tweak it suppose we want to",
    "start": "1262080",
    "end": "1264640"
  },
  {
    "text": "uh pull data from a feature store or",
    "start": "1264640",
    "end": "1267039"
  },
  {
    "text": "model registry",
    "start": "1267039",
    "end": "1268400"
  },
  {
    "text": "and uh start at a different checkpoint",
    "start": "1268400",
    "end": "1272240"
  },
  {
    "text": "we can now do that too that's going to",
    "start": "1272240",
    "end": "1274080"
  },
  {
    "text": "be one of the great things to look",
    "start": "1274080",
    "end": "1276000"
  },
  {
    "text": "forward to and uh",
    "start": "1276000",
    "end": "1279039"
  },
  {
    "text": "now we have a road map daniel if you",
    "start": "1279039",
    "end": "1280480"
  },
  {
    "text": "want to take this over",
    "start": "1280480",
    "end": "1282080"
  },
  {
    "start": "1281000",
    "end": "1281000"
  },
  {
    "text": "yeah absolutely so as of may 2021",
    "start": "1282080",
    "end": "1285840"
  },
  {
    "text": "we have released our alpha this supports",
    "start": "1285840",
    "end": "1288400"
  },
  {
    "text": "moden it supports custom resources",
    "start": "1288400",
    "end": "1290799"
  },
  {
    "text": "and it supports the uh ray decorator and",
    "start": "1290799",
    "end": "1294240"
  },
  {
    "text": "uh we will go over very soon about how",
    "start": "1294240",
    "end": "1297039"
  },
  {
    "text": "to actually get access to this",
    "start": "1297039",
    "end": "1298720"
  },
  {
    "text": "but we're really excited to start",
    "start": "1298720",
    "end": "1300400"
  },
  {
    "text": "getting feedback",
    "start": "1300400",
    "end": "1301760"
  },
  {
    "text": "uh as of june 2021 that's when we're",
    "start": "1301760",
    "end": "1305360"
  },
  {
    "text": "planning to release beta",
    "start": "1305360",
    "end": "1306799"
  },
  {
    "text": "which will include checkpointing and a",
    "start": "1306799",
    "end": "1308559"
  },
  {
    "text": "connector to any scale",
    "start": "1308559",
    "end": "1310159"
  },
  {
    "text": "so the alpha right now is built purely",
    "start": "1310159",
    "end": "1312720"
  },
  {
    "text": "for open source ray",
    "start": "1312720",
    "end": "1314159"
  },
  {
    "text": "but with the beta we plan to have uh any",
    "start": "1314159",
    "end": "1317039"
  },
  {
    "text": "scale connector",
    "start": "1317039",
    "end": "1318159"
  },
  {
    "text": "that you can just swap out in the back",
    "start": "1318159",
    "end": "1320240"
  },
  {
    "text": "end and",
    "start": "1320240",
    "end": "1321520"
  },
  {
    "text": "zero dac changes whatsoever now you'll",
    "start": "1321520",
    "end": "1323840"
  },
  {
    "text": "be able to use your any scale account",
    "start": "1323840",
    "end": "1325600"
  },
  {
    "text": "to uh run run stuff in the cloud",
    "start": "1325600",
    "end": "1328880"
  },
  {
    "text": "and then we're hoping to have a full ga",
    "start": "1328880",
    "end": "1330799"
  },
  {
    "text": "release q3",
    "start": "1330799",
    "end": "1332080"
  },
  {
    "text": "of 2021 that's full tested supported",
    "start": "1332080",
    "end": "1335280"
  },
  {
    "text": "benchmark just making sure that",
    "start": "1335280",
    "end": "1337120"
  },
  {
    "text": "everything will work and",
    "start": "1337120",
    "end": "1338480"
  },
  {
    "text": "knowing what the limitations are of the",
    "start": "1338480",
    "end": "1340720"
  },
  {
    "text": "system",
    "start": "1340720",
    "end": "1341679"
  },
  {
    "text": "and of course hopefully q4 2021",
    "start": "1341679",
    "end": "1345600"
  },
  {
    "text": "we will have a full integration with any",
    "start": "1345600",
    "end": "1347919"
  },
  {
    "text": "scale cloud",
    "start": "1347919",
    "end": "1349039"
  },
  {
    "text": "and there is so much opportunity to",
    "start": "1349039",
    "end": "1352559"
  },
  {
    "text": "just build an entire ecosystem around",
    "start": "1352559",
    "end": "1354480"
  },
  {
    "text": "this we're just",
    "start": "1354480",
    "end": "1355600"
  },
  {
    "text": "really excited to see what the future",
    "start": "1355600",
    "end": "1357760"
  },
  {
    "text": "brings for this project",
    "start": "1357760",
    "end": "1360480"
  },
  {
    "text": "so finally let's talk a little bit about",
    "start": "1360480",
    "end": "1362320"
  },
  {
    "text": "how to get the rate provider",
    "start": "1362320",
    "end": "1364400"
  },
  {
    "start": "1363000",
    "end": "1363000"
  },
  {
    "text": "and the way to get the rate provider is",
    "start": "1364400",
    "end": "1366880"
  },
  {
    "text": "to head over to registry.astronomer.io",
    "start": "1366880",
    "end": "1369919"
  },
  {
    "text": "uh we'd like to give a special a special",
    "start": "1369919",
    "end": "1372480"
  },
  {
    "text": "shout out to",
    "start": "1372480",
    "end": "1373280"
  },
  {
    "text": "pete dejoy from astronomer for putting",
    "start": "1373280",
    "end": "1375120"
  },
  {
    "text": "this together it's essential essentially",
    "start": "1375120",
    "end": "1377520"
  },
  {
    "text": "the registry is",
    "start": "1377520",
    "end": "1378640"
  },
  {
    "text": "airflow has this giant ecosystem and we",
    "start": "1378640",
    "end": "1381520"
  },
  {
    "text": "have built",
    "start": "1381520",
    "end": "1382240"
  },
  {
    "text": "a way to be able to see",
    "start": "1382240",
    "end": "1385280"
  },
  {
    "text": "everything in one place to have full",
    "start": "1385280",
    "end": "1387600"
  },
  {
    "text": "search capabilities",
    "start": "1387600",
    "end": "1388960"
  },
  {
    "text": "and to know how maintained each of these",
    "start": "1388960",
    "end": "1391600"
  },
  {
    "text": "operators are so",
    "start": "1391600",
    "end": "1392880"
  },
  {
    "text": "for example we've been working with",
    "start": "1392880",
    "end": "1394799"
  },
  {
    "text": "partners such as great expectations to",
    "start": "1394799",
    "end": "1397120"
  },
  {
    "text": "build",
    "start": "1397120",
    "end": "1397600"
  },
  {
    "text": "a great expectations provider and if you",
    "start": "1397600",
    "end": "1400720"
  },
  {
    "text": "use",
    "start": "1400720",
    "end": "1401120"
  },
  {
    "text": "like a a certified opera if you use a",
    "start": "1401120",
    "end": "1404080"
  },
  {
    "text": "certified provider",
    "start": "1404080",
    "end": "1405120"
  },
  {
    "text": "you have that assurance that the people",
    "start": "1405120",
    "end": "1407200"
  },
  {
    "text": "behind the",
    "start": "1407200",
    "end": "1408159"
  },
  {
    "text": "technology uh will be able to fix any",
    "start": "1408159",
    "end": "1411280"
  },
  {
    "text": "tickets or add features as needed keep",
    "start": "1411280",
    "end": "1413280"
  },
  {
    "text": "it up to date with recent versions",
    "start": "1413280",
    "end": "1415200"
  },
  {
    "text": "and that's one thing that what actually",
    "start": "1415200",
    "end": "1417280"
  },
  {
    "text": "led to this uh",
    "start": "1417280",
    "end": "1418559"
  },
  {
    "text": "collaboration with any scale is this",
    "start": "1418559",
    "end": "1421200"
  },
  {
    "text": "idea of like a certified provider",
    "start": "1421200",
    "end": "1423520"
  },
  {
    "text": "so if you head to the registry you type",
    "start": "1423520",
    "end": "1425520"
  },
  {
    "text": "in rey you'll be able to find",
    "start": "1425520",
    "end": "1427600"
  },
  {
    "text": "documentation example dags and",
    "start": "1427600",
    "end": "1430640"
  },
  {
    "text": "uh of course the ability to install is",
    "start": "1430640",
    "end": "1433200"
  },
  {
    "text": "just",
    "start": "1433200",
    "end": "1434080"
  },
  {
    "text": "pip install airflow provider ray onto",
    "start": "1434080",
    "end": "1436240"
  },
  {
    "text": "your airflow cluster",
    "start": "1436240",
    "end": "1437520"
  },
  {
    "text": "and you'll also see the steps to get",
    "start": "1437520",
    "end": "1440880"
  },
  {
    "text": "everything set up",
    "start": "1440880",
    "end": "1442000"
  },
  {
    "text": "uh on the on the registry site",
    "start": "1442000",
    "end": "1445679"
  },
  {
    "text": "so finally we'd like to thank uh thank",
    "start": "1445679",
    "end": "1448640"
  },
  {
    "text": "you for joining us for this talk",
    "start": "1448640",
    "end": "1450480"
  },
  {
    "text": "and to thank our uh friends at any skill",
    "start": "1450480",
    "end": "1453760"
  },
  {
    "text": "uh that would be uh richard will charles",
    "start": "1453760",
    "end": "1456559"
  },
  {
    "text": "and of course",
    "start": "1456559",
    "end": "1457279"
  },
  {
    "text": "thank you pete for your help on the",
    "start": "1457279",
    "end": "1459679"
  },
  {
    "text": "product side",
    "start": "1459679",
    "end": "1460880"
  },
  {
    "text": "and we're really excited to hear what",
    "start": "1460880",
    "end": "1463360"
  },
  {
    "text": "crazy experiments you all come up with",
    "start": "1463360",
    "end": "1465760"
  },
  {
    "text": "uh with this integration",
    "start": "1465760",
    "end": "1473360"
  }
]