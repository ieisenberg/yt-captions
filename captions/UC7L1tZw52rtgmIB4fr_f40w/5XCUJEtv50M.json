[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "[Music]",
    "start": "170",
    "end": "14480"
  },
  {
    "text": "uh",
    "start": "14480",
    "end": "15040"
  },
  {
    "text": "hello everyone uh i am wayton from",
    "start": "15040",
    "end": "17680"
  },
  {
    "text": "nvidia",
    "start": "17680",
    "end": "18720"
  },
  {
    "text": "uh today i'm going to present",
    "start": "18720",
    "end": "21439"
  },
  {
    "text": "large-scale data loading and data",
    "start": "21439",
    "end": "23320"
  },
  {
    "text": "pre-processing",
    "start": "23320",
    "end": "24720"
  },
  {
    "text": "with ray uh so uh i'm",
    "start": "24720",
    "end": "28000"
  },
  {
    "text": "way and right now i'm a deep learning",
    "start": "28000",
    "end": "30880"
  },
  {
    "text": "software engineer from nvidia",
    "start": "30880",
    "end": "33120"
  },
  {
    "text": "uh i'm working on building the ai",
    "start": "33120",
    "end": "35440"
  },
  {
    "text": "infrastructure for nvidia's",
    "start": "35440",
    "end": "37520"
  },
  {
    "text": "autonomous vehicles uh so",
    "start": "37520",
    "end": "40960"
  },
  {
    "start": "40000",
    "end": "95000"
  },
  {
    "text": "today's topic is about how to use raid",
    "start": "40960",
    "end": "44000"
  },
  {
    "text": "to build a",
    "start": "44000",
    "end": "44879"
  },
  {
    "text": "data loading and data processing",
    "start": "44879",
    "end": "47200"
  },
  {
    "text": "pipeline for deep learning application",
    "start": "47200",
    "end": "49680"
  },
  {
    "text": "uh so basically i will start with",
    "start": "49680",
    "end": "52000"
  },
  {
    "text": "introducing",
    "start": "52000",
    "end": "52800"
  },
  {
    "text": "uh what data loading is in deep learning",
    "start": "52800",
    "end": "56000"
  },
  {
    "text": "pipeline",
    "start": "56000",
    "end": "56800"
  },
  {
    "text": "and why it is important and i will also",
    "start": "56800",
    "end": "59520"
  },
  {
    "text": "introduce",
    "start": "59520",
    "end": "60239"
  },
  {
    "text": "uh how the data loading looks like in",
    "start": "60239",
    "end": "63120"
  },
  {
    "text": "python",
    "start": "63120",
    "end": "64158"
  },
  {
    "text": "and our experience with python-based",
    "start": "64159",
    "end": "66400"
  },
  {
    "text": "data loading",
    "start": "66400",
    "end": "68000"
  },
  {
    "text": "so i will further introduce like the",
    "start": "68000",
    "end": "70799"
  },
  {
    "text": "problem we have seen with python space",
    "start": "70799",
    "end": "72960"
  },
  {
    "text": "data loading and the reason why we want",
    "start": "72960",
    "end": "75840"
  },
  {
    "text": "to",
    "start": "75840",
    "end": "76159"
  },
  {
    "text": "re-implement the data loading use",
    "start": "76159",
    "end": "77680"
  },
  {
    "text": "read-based engine and",
    "start": "77680",
    "end": "79439"
  },
  {
    "text": "i will give some high-level ideas about",
    "start": "79439",
    "end": "82320"
  },
  {
    "text": "how to implement",
    "start": "82320",
    "end": "83360"
  },
  {
    "text": "the data loading u3 engine last i will",
    "start": "83360",
    "end": "86240"
  },
  {
    "text": "share some lessons we have learned",
    "start": "86240",
    "end": "88080"
  },
  {
    "text": "through the entire process like uh the",
    "start": "88080",
    "end": "90880"
  },
  {
    "text": "how to",
    "start": "90880",
    "end": "91600"
  },
  {
    "text": "uh through like every implementing data",
    "start": "91600",
    "end": "93600"
  },
  {
    "text": "loading using ray",
    "start": "93600",
    "end": "95600"
  },
  {
    "start": "95000",
    "end": "386000"
  },
  {
    "text": "uh so let's first start with uh data",
    "start": "95600",
    "end": "98479"
  },
  {
    "text": "loading in deep learning pipeline",
    "start": "98479",
    "end": "101119"
  },
  {
    "text": "uh so data loading is actually one of",
    "start": "101119",
    "end": "104240"
  },
  {
    "text": "the most",
    "start": "104240",
    "end": "104880"
  },
  {
    "text": "complex and one of the most important",
    "start": "104880",
    "end": "107920"
  },
  {
    "text": "components in our deep learning pipeline",
    "start": "107920",
    "end": "111040"
  },
  {
    "text": "so in order to train a model it",
    "start": "111040",
    "end": "114159"
  },
  {
    "text": "needs to it it needs to have features",
    "start": "114159",
    "end": "117600"
  },
  {
    "text": "and labels uh so that the features can",
    "start": "117600",
    "end": "121040"
  },
  {
    "text": "be used",
    "start": "121040",
    "end": "121759"
  },
  {
    "text": "to compute the prediction and the",
    "start": "121759",
    "end": "123840"
  },
  {
    "text": "prediction can be used to compile with",
    "start": "123840",
    "end": "125840"
  },
  {
    "text": "labels",
    "start": "125840",
    "end": "126880"
  },
  {
    "text": "to compute loss and in backward",
    "start": "126880",
    "end": "129759"
  },
  {
    "text": "propagation",
    "start": "129759",
    "end": "130479"
  },
  {
    "text": "laws can be used to update the gradients",
    "start": "130479",
    "end": "134319"
  },
  {
    "text": "so basically data loading is loading the",
    "start": "134319",
    "end": "136959"
  },
  {
    "text": "features",
    "start": "136959",
    "end": "137520"
  },
  {
    "text": "and labels depending on the applications",
    "start": "137520",
    "end": "141360"
  },
  {
    "text": "uh the features and labels can be very",
    "start": "141360",
    "end": "143360"
  },
  {
    "text": "different",
    "start": "143360",
    "end": "144400"
  },
  {
    "text": "uh however like the raw features",
    "start": "144400",
    "end": "147520"
  },
  {
    "text": "and row labels cannot be directly used",
    "start": "147520",
    "end": "150319"
  },
  {
    "text": "for",
    "start": "150319",
    "end": "151200"
  },
  {
    "text": "uh for model uh for for for forty",
    "start": "151200",
    "end": "154400"
  },
  {
    "text": "planning model uh",
    "start": "154400",
    "end": "156720"
  },
  {
    "text": "training the reason for that is that",
    "start": "156720",
    "end": "159920"
  },
  {
    "text": "the model expects the input to be the",
    "start": "159920",
    "end": "163360"
  },
  {
    "text": "multi-dimensional tensors uh well the",
    "start": "163360",
    "end": "166800"
  },
  {
    "text": "features labels is not that format",
    "start": "166800",
    "end": "169200"
  },
  {
    "text": "so it needs to be go through going",
    "start": "169200",
    "end": "171200"
  },
  {
    "text": "through the feature processing and label",
    "start": "171200",
    "end": "173200"
  },
  {
    "text": "processing",
    "start": "173200",
    "end": "174239"
  },
  {
    "text": "uh let's take the communication task as",
    "start": "174239",
    "end": "176879"
  },
  {
    "text": "an example for example for the most",
    "start": "176879",
    "end": "178959"
  },
  {
    "text": "basic uh classification test",
    "start": "178959",
    "end": "182640"
  },
  {
    "text": "the feature could be the images uh",
    "start": "182640",
    "end": "185360"
  },
  {
    "text": "labels could be the",
    "start": "185360",
    "end": "186959"
  },
  {
    "text": "uh class ids for for the images uh",
    "start": "186959",
    "end": "190319"
  },
  {
    "text": "so for feature processing it's it could",
    "start": "190319",
    "end": "192640"
  },
  {
    "text": "be like some",
    "start": "192640",
    "end": "193680"
  },
  {
    "text": "augmentation processes like rotate the",
    "start": "193680",
    "end": "196080"
  },
  {
    "text": "images",
    "start": "196080",
    "end": "197280"
  },
  {
    "text": "flip the images or or like crop the",
    "start": "197280",
    "end": "199840"
  },
  {
    "text": "images",
    "start": "199840",
    "end": "200800"
  },
  {
    "text": "so like the different images can be the",
    "start": "200800",
    "end": "202879"
  },
  {
    "text": "same size",
    "start": "202879",
    "end": "203840"
  },
  {
    "text": "so they can be making a badge uh for",
    "start": "203840",
    "end": "206640"
  },
  {
    "text": "labels",
    "start": "206640",
    "end": "207280"
  },
  {
    "text": "uh for labels like for classification",
    "start": "207280",
    "end": "210159"
  },
  {
    "text": "tasks",
    "start": "210159",
    "end": "211519"
  },
  {
    "text": "the label could be just a class id so",
    "start": "211519",
    "end": "214239"
  },
  {
    "text": "the label processing for for this kind",
    "start": "214239",
    "end": "216080"
  },
  {
    "text": "of test is quite simple",
    "start": "216080",
    "end": "217440"
  },
  {
    "text": "just convert the class id maybe an",
    "start": "217440",
    "end": "221440"
  },
  {
    "text": "integer",
    "start": "221440",
    "end": "222400"
  },
  {
    "text": "to a tensor finally all this process the",
    "start": "222400",
    "end": "225599"
  },
  {
    "text": "features and labels",
    "start": "225599",
    "end": "226959"
  },
  {
    "text": "needs to be bashed together into a",
    "start": "226959",
    "end": "229280"
  },
  {
    "text": "single batch",
    "start": "229280",
    "end": "230799"
  },
  {
    "text": "so the model can process the features",
    "start": "230799",
    "end": "234080"
  },
  {
    "text": "and labels",
    "start": "234080",
    "end": "235439"
  },
  {
    "text": "uh however for some tasks like",
    "start": "235439",
    "end": "238319"
  },
  {
    "text": "augmentation based",
    "start": "238319",
    "end": "240239"
  },
  {
    "text": "classification the label could be quite",
    "start": "240239",
    "end": "242799"
  },
  {
    "text": "complex",
    "start": "242799",
    "end": "243840"
  },
  {
    "text": "uh for example the label processing for",
    "start": "243840",
    "end": "246319"
  },
  {
    "text": "this kind of task",
    "start": "246319",
    "end": "247599"
  },
  {
    "text": "could be uh rasterizing the labels",
    "start": "247599",
    "end": "251280"
  },
  {
    "text": "into into a image shape for that kind of",
    "start": "251280",
    "end": "255040"
  },
  {
    "text": "tasks the label processing could be more",
    "start": "255040",
    "end": "258000"
  },
  {
    "text": "complex",
    "start": "258000",
    "end": "259359"
  },
  {
    "text": "so this is basic basically the ideas of",
    "start": "259359",
    "end": "262560"
  },
  {
    "text": "uh data loading pipeline interplanning",
    "start": "262560",
    "end": "264560"
  },
  {
    "text": "training",
    "start": "264560",
    "end": "266880"
  },
  {
    "text": "uh why data loading is indeed planning",
    "start": "266960",
    "end": "270479"
  },
  {
    "text": "pipeline is challenging uh because first",
    "start": "270479",
    "end": "273440"
  },
  {
    "text": "it",
    "start": "273440",
    "end": "273759"
  },
  {
    "text": "needs to be it needs to be fast uh",
    "start": "273759",
    "end": "277280"
  },
  {
    "text": "because uh training on gpu side is fast",
    "start": "277280",
    "end": "280880"
  },
  {
    "text": "in order to uh come in",
    "start": "280880",
    "end": "284080"
  },
  {
    "text": "in order to match the speed on gpu set",
    "start": "284080",
    "end": "286479"
  },
  {
    "text": "the track the data loading needs to be",
    "start": "286479",
    "end": "287840"
  },
  {
    "text": "fast",
    "start": "287840",
    "end": "288720"
  },
  {
    "text": "uh however making the data really fast",
    "start": "288720",
    "end": "290720"
  },
  {
    "text": "is a quite a challenging task",
    "start": "290720",
    "end": "292479"
  },
  {
    "text": "it involves a lot of system components",
    "start": "292479",
    "end": "295199"
  },
  {
    "text": "uh",
    "start": "295199",
    "end": "296479"
  },
  {
    "text": "like the phase change labels uh usually",
    "start": "296479",
    "end": "299120"
  },
  {
    "text": "are stored on a file system",
    "start": "299120",
    "end": "301039"
  },
  {
    "text": "like so it needs to be uh loaded off",
    "start": "301039",
    "end": "304240"
  },
  {
    "text": "uh from the storage uh and uh",
    "start": "304240",
    "end": "307600"
  },
  {
    "text": "and and and sent to the safe view the",
    "start": "307600",
    "end": "310000"
  },
  {
    "text": "cpu on cpu pro like data loading uh",
    "start": "310000",
    "end": "312720"
  },
  {
    "text": "for pre-processing uh for the processing",
    "start": "312720",
    "end": "315759"
  },
  {
    "text": "part",
    "start": "315759",
    "end": "316080"
  },
  {
    "text": "is is used to run on cpu like for label",
    "start": "316080",
    "end": "318639"
  },
  {
    "text": "processing",
    "start": "318639",
    "end": "319600"
  },
  {
    "text": "um it could be quite complex for",
    "start": "319600",
    "end": "322800"
  },
  {
    "text": "for for feature processing uh it could",
    "start": "322800",
    "end": "325199"
  },
  {
    "text": "be like uh",
    "start": "325199",
    "end": "326479"
  },
  {
    "text": "resizing images or like rotated images",
    "start": "326479",
    "end": "329919"
  },
  {
    "text": "those kind of operation is quite cpu",
    "start": "329919",
    "end": "331759"
  },
  {
    "text": "intensive and finally",
    "start": "331759",
    "end": "333840"
  },
  {
    "text": "the the result the output of the data",
    "start": "333840",
    "end": "336560"
  },
  {
    "text": "loader",
    "start": "336560",
    "end": "337280"
  },
  {
    "text": "needs to be sent over to the gpu",
    "start": "337280",
    "end": "340639"
  },
  {
    "text": "through the cpu to gpu copy",
    "start": "340639",
    "end": "344000"
  },
  {
    "text": "so it's quite challenging to make all",
    "start": "344000",
    "end": "345680"
  },
  {
    "text": "these components fast",
    "start": "345680",
    "end": "348000"
  },
  {
    "text": "and second is to it needs to be",
    "start": "348000",
    "end": "351360"
  },
  {
    "text": "stable uh because it",
    "start": "351360",
    "end": "354560"
  },
  {
    "text": "involves so many components uh if that's",
    "start": "354560",
    "end": "357039"
  },
  {
    "text": "one piece of the component",
    "start": "357039",
    "end": "358400"
  },
  {
    "text": "is broken the entire training is broken",
    "start": "358400",
    "end": "360960"
  },
  {
    "text": "so i",
    "start": "360960",
    "end": "361520"
  },
  {
    "text": "i think a lot of guys uh have",
    "start": "361520",
    "end": "363520"
  },
  {
    "text": "experiments like",
    "start": "363520",
    "end": "364720"
  },
  {
    "text": "some piece of data loading is broken and",
    "start": "364720",
    "end": "366800"
  },
  {
    "text": "training is crashed then you have to",
    "start": "366800",
    "end": "368240"
  },
  {
    "text": "restart your training from a checkpoint",
    "start": "368240",
    "end": "370160"
  },
  {
    "text": "and that is",
    "start": "370160",
    "end": "371360"
  },
  {
    "text": "quite annoying so we want to keep our",
    "start": "371360",
    "end": "374080"
  },
  {
    "text": "data loading as stable as possible so",
    "start": "374080",
    "end": "376080"
  },
  {
    "text": "that the the training",
    "start": "376080",
    "end": "377680"
  },
  {
    "text": "that could be running for days would be",
    "start": "377680",
    "end": "381360"
  },
  {
    "text": "smoothly like there's no crashing during",
    "start": "381360",
    "end": "383919"
  },
  {
    "text": "the training",
    "start": "383919",
    "end": "386479"
  },
  {
    "start": "386000",
    "end": "607000"
  },
  {
    "text": "so uh next i will introduce our data",
    "start": "387440",
    "end": "390160"
  },
  {
    "text": "loading experience with pythos",
    "start": "390160",
    "end": "392240"
  },
  {
    "text": "so basically uh this is how the python",
    "start": "392240",
    "end": "395680"
  },
  {
    "text": "data loader looks like",
    "start": "395680",
    "end": "397440"
  },
  {
    "text": "uh so in data load it has these",
    "start": "397440",
    "end": "399840"
  },
  {
    "text": "components",
    "start": "399840",
    "end": "400639"
  },
  {
    "text": "uh first we have the sampler uh sampler",
    "start": "400639",
    "end": "403520"
  },
  {
    "text": "is like basically shuffling the",
    "start": "403520",
    "end": "406240"
  },
  {
    "text": "indices of the of the training sample",
    "start": "406240",
    "end": "410080"
  },
  {
    "text": "uh and the return the index index for",
    "start": "410080",
    "end": "413680"
  },
  {
    "text": "this",
    "start": "413680",
    "end": "414160"
  },
  {
    "text": "uh for this for this item uh then",
    "start": "414160",
    "end": "417280"
  },
  {
    "text": "we have this data set uh data set is",
    "start": "417280",
    "end": "419800"
  },
  {
    "text": "basically uh",
    "start": "419800",
    "end": "422000"
  },
  {
    "text": "a interface that user can implement",
    "start": "422000",
    "end": "425199"
  },
  {
    "text": "implements for the i for the for the",
    "start": "425199",
    "end": "427360"
  },
  {
    "text": "application",
    "start": "427360",
    "end": "428400"
  },
  {
    "text": "so for this data set interface the most",
    "start": "428400",
    "end": "431039"
  },
  {
    "text": "important api is the get item",
    "start": "431039",
    "end": "433440"
  },
  {
    "text": "so this api takes a index um",
    "start": "433440",
    "end": "436800"
  },
  {
    "text": "and return a return training sample",
    "start": "436800",
    "end": "440080"
  },
  {
    "text": "at giving index uh then we have these",
    "start": "440080",
    "end": "443280"
  },
  {
    "text": "batches",
    "start": "443280",
    "end": "443919"
  },
  {
    "text": "we'll have this we have this component",
    "start": "443919",
    "end": "445919"
  },
  {
    "text": "called code badger",
    "start": "445919",
    "end": "447520"
  },
  {
    "text": "battery is used to batch a list of",
    "start": "447520",
    "end": "449759"
  },
  {
    "text": "features and a list of labels",
    "start": "449759",
    "end": "452160"
  },
  {
    "text": "uh so sorry it's a list of uh",
    "start": "452160",
    "end": "455360"
  },
  {
    "text": "labels after processing and at least",
    "start": "455360",
    "end": "457599"
  },
  {
    "text": "some features after processing so they",
    "start": "457599",
    "end": "459919"
  },
  {
    "text": "can can be measured to a single tensor",
    "start": "459919",
    "end": "463520"
  },
  {
    "text": "a batch of tensor so so finally the the",
    "start": "463520",
    "end": "466319"
  },
  {
    "text": "the single batch the samples could be",
    "start": "466319",
    "end": "468240"
  },
  {
    "text": "sent to trainer",
    "start": "468240",
    "end": "469680"
  },
  {
    "text": "uh usually the feature processor and",
    "start": "469680",
    "end": "472240"
  },
  {
    "text": "labor processor",
    "start": "472240",
    "end": "473360"
  },
  {
    "text": "are implemented in this dataset api uh",
    "start": "473360",
    "end": "476879"
  },
  {
    "text": "so from the user side of uh",
    "start": "476879",
    "end": "480000"
  },
  {
    "text": "of view uh basically data loader is",
    "start": "480000",
    "end": "482639"
  },
  {
    "text": "presented as a",
    "start": "482639",
    "end": "484479"
  },
  {
    "text": "python iterator uh so uh basically you",
    "start": "484479",
    "end": "488080"
  },
  {
    "text": "just",
    "start": "488080",
    "end": "488479"
  },
  {
    "text": "iterate over a data loader and read the",
    "start": "488479",
    "end": "490240"
  },
  {
    "text": "features and labels",
    "start": "490240",
    "end": "491840"
  },
  {
    "text": "features are sent to model so you can",
    "start": "491840",
    "end": "493759"
  },
  {
    "text": "compute prediction",
    "start": "493759",
    "end": "494960"
  },
  {
    "text": "and prediction labels can be used to",
    "start": "494960",
    "end": "496800"
  },
  {
    "text": "compute the loss",
    "start": "496800",
    "end": "498400"
  },
  {
    "text": "yeah this is how basically the idea of a",
    "start": "498400",
    "end": "501759"
  },
  {
    "text": "logic view of the python data loader",
    "start": "501759",
    "end": "506479"
  },
  {
    "text": "uh so basically under the hood pi switch",
    "start": "506479",
    "end": "509199"
  },
  {
    "text": "has this multi-process",
    "start": "509199",
    "end": "510800"
  },
  {
    "text": "engine uh",
    "start": "510800",
    "end": "514080"
  },
  {
    "text": "the the idea for that is we want to have",
    "start": "514080",
    "end": "518240"
  },
  {
    "text": "uh multiple multiple workers running",
    "start": "518240",
    "end": "521039"
  },
  {
    "text": "parallel",
    "start": "521039",
    "end": "522240"
  },
  {
    "text": "to make the data loading fast uh because",
    "start": "522240",
    "end": "525040"
  },
  {
    "text": "way",
    "start": "525040",
    "end": "525519"
  },
  {
    "text": "everyone knows that in python the",
    "start": "525519",
    "end": "528240"
  },
  {
    "text": "parallelism",
    "start": "528240",
    "end": "528959"
  },
  {
    "text": "is not easy to achieve like python has",
    "start": "528959",
    "end": "531040"
  },
  {
    "text": "this",
    "start": "531040",
    "end": "532320"
  },
  {
    "text": "global interpretation log issue so we",
    "start": "532320",
    "end": "534640"
  },
  {
    "text": "can not really do the multi-sliding",
    "start": "534640",
    "end": "536959"
  },
  {
    "text": "so in order to achieve the parallelism",
    "start": "536959",
    "end": "539680"
  },
  {
    "text": "we need to do multi-processing",
    "start": "539680",
    "end": "541760"
  },
  {
    "text": "however however doing multiprocessing is",
    "start": "541760",
    "end": "544800"
  },
  {
    "text": "not trivial basically",
    "start": "544800",
    "end": "548240"
  },
  {
    "text": "uh you have to fork spawn a lot of",
    "start": "548240",
    "end": "550560"
  },
  {
    "text": "workers",
    "start": "550560",
    "end": "551519"
  },
  {
    "text": "in in python data loader uh and",
    "start": "551519",
    "end": "554720"
  },
  {
    "text": "the each workers need to run the data",
    "start": "554720",
    "end": "556800"
  },
  {
    "text": "set and better",
    "start": "556800",
    "end": "558560"
  },
  {
    "text": "uh in the worker process and the batch",
    "start": "558560",
    "end": "562399"
  },
  {
    "text": "the",
    "start": "562399",
    "end": "562880"
  },
  {
    "text": "training sample needs to be returned",
    "start": "562880",
    "end": "565440"
  },
  {
    "text": "from the worker",
    "start": "565440",
    "end": "566640"
  },
  {
    "text": "to the main process uh in to to make",
    "start": "566640",
    "end": "569839"
  },
  {
    "text": "this uh data copy",
    "start": "569839",
    "end": "571600"
  },
  {
    "text": "fast uh that call to make this data copy",
    "start": "571600",
    "end": "575680"
  },
  {
    "text": "that across process boundary fast python",
    "start": "575680",
    "end": "579519"
  },
  {
    "text": "use the shared memory to do this so",
    "start": "579519",
    "end": "581519"
  },
  {
    "text": "basically it's on",
    "start": "581519",
    "end": "582720"
  },
  {
    "text": "zero copy it's just a copy the pointer",
    "start": "582720",
    "end": "585519"
  },
  {
    "text": "through the",
    "start": "585519",
    "end": "586080"
  },
  {
    "text": "uh through the shared memory but it has",
    "start": "586080",
    "end": "588959"
  },
  {
    "text": "some implementation here first",
    "start": "588959",
    "end": "591200"
  },
  {
    "text": "in order to leverage the the chain",
    "start": "591200",
    "end": "593760"
  },
  {
    "text": "memory the return",
    "start": "593760",
    "end": "595440"
  },
  {
    "text": "uh the return the tensor and the return",
    "start": "595440",
    "end": "598000"
  },
  {
    "text": "thing from the worker to main process",
    "start": "598000",
    "end": "600240"
  },
  {
    "text": "has to be a python tensor",
    "start": "600240",
    "end": "605839"
  },
  {
    "start": "607000",
    "end": "722000"
  },
  {
    "text": "uh in general like this python python uh",
    "start": "608240",
    "end": "611680"
  },
  {
    "text": "or python multi-process engine works",
    "start": "611680",
    "end": "613839"
  },
  {
    "text": "well",
    "start": "613839",
    "end": "614720"
  },
  {
    "text": "uh for us but we do have some issue with",
    "start": "614720",
    "end": "617920"
  },
  {
    "text": "this",
    "start": "617920",
    "end": "618480"
  },
  {
    "text": "engine uh the reason for that is that",
    "start": "618480",
    "end": "621839"
  },
  {
    "text": "uh pi touch uh high touch data loader",
    "start": "621839",
    "end": "624959"
  },
  {
    "text": "the multi process engine in python",
    "start": "624959",
    "end": "626959"
  },
  {
    "text": "loader use copy on write",
    "start": "626959",
    "end": "629440"
  },
  {
    "text": "uh like when the main process for a new",
    "start": "629440",
    "end": "632720"
  },
  {
    "text": "worker process basically it's copy every",
    "start": "632720",
    "end": "635600"
  },
  {
    "text": "it's",
    "start": "635600",
    "end": "636079"
  },
  {
    "text": "it copies everything from the uh",
    "start": "636079",
    "end": "639120"
  },
  {
    "text": "main process into the workflow process",
    "start": "639120",
    "end": "641680"
  },
  {
    "text": "uh",
    "start": "641680",
    "end": "642480"
  },
  {
    "text": "if if there's a the issue here is that",
    "start": "642480",
    "end": "644959"
  },
  {
    "text": "if there is a lock",
    "start": "644959",
    "end": "645920"
  },
  {
    "text": "in the in the is a in the",
    "start": "645920",
    "end": "648959"
  },
  {
    "text": "main process it it also has has to be",
    "start": "648959",
    "end": "651440"
  },
  {
    "text": "copied to the",
    "start": "651440",
    "end": "652640"
  },
  {
    "text": "to the worker process so this approach",
    "start": "652640",
    "end": "655519"
  },
  {
    "text": "introduced the risk condition",
    "start": "655519",
    "end": "657120"
  },
  {
    "text": "with any other code running much process",
    "start": "657120",
    "end": "659519"
  },
  {
    "text": "multiple threats",
    "start": "659519",
    "end": "661040"
  },
  {
    "text": "uh with this pros pro with this approach",
    "start": "661040",
    "end": "664000"
  },
  {
    "text": "we run",
    "start": "664000",
    "end": "664480"
  },
  {
    "text": "into a lot of uh issues like deadlock",
    "start": "664480",
    "end": "668079"
  },
  {
    "text": "issues",
    "start": "668079",
    "end": "668720"
  },
  {
    "text": "uh like i have listed the github issues",
    "start": "668720",
    "end": "671360"
  },
  {
    "text": "here like i think",
    "start": "671360",
    "end": "672399"
  },
  {
    "text": "if you guess every if you guys have ever",
    "start": "672399",
    "end": "675600"
  },
  {
    "text": "experienced experience the ways that",
    "start": "675600",
    "end": "677360"
  },
  {
    "text": "they",
    "start": "677360",
    "end": "678000"
  },
  {
    "text": "apply touch data you may have it you may",
    "start": "678000",
    "end": "680399"
  },
  {
    "text": "have",
    "start": "680399",
    "end": "681360"
  },
  {
    "text": "uh these kind of uh issues",
    "start": "681360",
    "end": "684560"
  },
  {
    "text": "uh the issue i have found is that the",
    "start": "684560",
    "end": "686480"
  },
  {
    "text": "training is totally",
    "start": "686480",
    "end": "688079"
  },
  {
    "text": "is stocked without any progress",
    "start": "688079",
    "end": "692160"
  },
  {
    "text": "uh running but the the job is now",
    "start": "692160",
    "end": "694720"
  },
  {
    "text": "crashed uh",
    "start": "694720",
    "end": "695680"
  },
  {
    "text": "uh we we spend a lot of efforts and time",
    "start": "695680",
    "end": "698480"
  },
  {
    "text": "debugging this issue but",
    "start": "698480",
    "end": "700320"
  },
  {
    "text": "it's it's it's it's really just uh",
    "start": "700320",
    "end": "703440"
  },
  {
    "text": "some dialogue that is not properly",
    "start": "703440",
    "end": "705360"
  },
  {
    "text": "released uh",
    "start": "705360",
    "end": "706720"
  },
  {
    "text": "and it's quite annoying issue like we",
    "start": "706720",
    "end": "709040"
  },
  {
    "text": "spend a lot of time trying to fix but",
    "start": "709040",
    "end": "710720"
  },
  {
    "text": "it's done work",
    "start": "710720",
    "end": "711680"
  },
  {
    "text": "it's done work well for us uh",
    "start": "711680",
    "end": "715440"
  },
  {
    "text": "because of this uh we started thinking",
    "start": "715440",
    "end": "718160"
  },
  {
    "text": "about other",
    "start": "718160",
    "end": "719440"
  },
  {
    "text": "approach like how about ray uh",
    "start": "719440",
    "end": "722880"
  },
  {
    "start": "722000",
    "end": "875000"
  },
  {
    "text": "the reason like uh why we want to use",
    "start": "722880",
    "end": "725760"
  },
  {
    "text": "ray",
    "start": "725760",
    "end": "726480"
  },
  {
    "text": "is like first it is fast because",
    "start": "726480",
    "end": "729680"
  },
  {
    "text": "the idea of ray and the python state of",
    "start": "729680",
    "end": "732959"
  },
  {
    "text": "the",
    "start": "732959",
    "end": "733760"
  },
  {
    "text": "multi-process engine is kind of similar",
    "start": "733760",
    "end": "735760"
  },
  {
    "text": "because this is basically",
    "start": "735760",
    "end": "737680"
  },
  {
    "text": "both both ray and the python standard a",
    "start": "737680",
    "end": "740480"
  },
  {
    "text": "multi-process",
    "start": "740480",
    "end": "742079"
  },
  {
    "text": "the difference is that we use actors and",
    "start": "742079",
    "end": "744639"
  },
  {
    "text": "it's",
    "start": "744639",
    "end": "745200"
  },
  {
    "text": "more manageable for us uh and it's",
    "start": "745200",
    "end": "748000"
  },
  {
    "text": "parallel actors",
    "start": "748000",
    "end": "749120"
  },
  {
    "text": "the second is like we also use shadow",
    "start": "749120",
    "end": "751200"
  },
  {
    "text": "memory",
    "start": "751200",
    "end": "752160"
  },
  {
    "text": "ray has this component called object",
    "start": "752160",
    "end": "753920"
  },
  {
    "text": "store so the",
    "start": "753920",
    "end": "755279"
  },
  {
    "text": "large object copy from the worker",
    "start": "755279",
    "end": "758880"
  },
  {
    "text": "from the actor to to the main process",
    "start": "758880",
    "end": "760800"
  },
  {
    "text": "from the driver process",
    "start": "760800",
    "end": "762079"
  },
  {
    "text": "actually uh goes through the shared",
    "start": "762079",
    "end": "764240"
  },
  {
    "text": "memory so it's fast",
    "start": "764240",
    "end": "766079"
  },
  {
    "text": "uh so based on our prototype piping uh",
    "start": "766079",
    "end": "768320"
  },
  {
    "text": "like one way start using the",
    "start": "768320",
    "end": "770480"
  },
  {
    "text": "ray-based data loading we can basically",
    "start": "770480",
    "end": "772560"
  },
  {
    "text": "achieve the same speed",
    "start": "772560",
    "end": "774000"
  },
  {
    "text": "as python space data load but without",
    "start": "774000",
    "end": "776800"
  },
  {
    "text": "worrying about any deadlock situation",
    "start": "776800",
    "end": "778800"
  },
  {
    "text": "like",
    "start": "778800",
    "end": "779440"
  },
  {
    "text": "training got a stock without knowing",
    "start": "779440",
    "end": "782880"
  },
  {
    "text": "the reason and and and it's quite easy",
    "start": "782880",
    "end": "785440"
  },
  {
    "text": "for us",
    "start": "785440",
    "end": "786399"
  },
  {
    "text": "uh and the second reason is action mode",
    "start": "786399",
    "end": "789760"
  },
  {
    "text": "makes program easier",
    "start": "789760",
    "end": "791360"
  },
  {
    "text": "like for a lot of uh deep learning",
    "start": "791360",
    "end": "793440"
  },
  {
    "text": "engineer whose background is",
    "start": "793440",
    "end": "796000"
  },
  {
    "text": "mostly like machine learning algorithm",
    "start": "796000",
    "end": "800000"
  },
  {
    "text": "if they don't have a lot of background",
    "start": "800000",
    "end": "802160"
  },
  {
    "text": "of like",
    "start": "802160",
    "end": "803200"
  },
  {
    "text": "distributed computing and much",
    "start": "803200",
    "end": "805279"
  },
  {
    "text": "processing what is threading",
    "start": "805279",
    "end": "806800"
  },
  {
    "text": "it's still quite easy for them to write",
    "start": "806800",
    "end": "808800"
  },
  {
    "text": "the code uh",
    "start": "808800",
    "end": "810079"
  },
  {
    "text": "they they can spend a few a few hours to",
    "start": "810079",
    "end": "813839"
  },
  {
    "text": "write",
    "start": "813839",
    "end": "814160"
  },
  {
    "text": "actors and running those actors in",
    "start": "814160",
    "end": "815920"
  },
  {
    "text": "parallel basically because launching",
    "start": "815920",
    "end": "817839"
  },
  {
    "text": "actor",
    "start": "817839",
    "end": "818320"
  },
  {
    "text": "equals uh core function from python side",
    "start": "818320",
    "end": "821120"
  },
  {
    "text": "so as long as you you can write python",
    "start": "821120",
    "end": "823120"
  },
  {
    "text": "code it shouldn't be hard for you to",
    "start": "823120",
    "end": "825680"
  },
  {
    "text": "wrap your python code in each actor and",
    "start": "825680",
    "end": "828399"
  },
  {
    "text": "running those actors in parallel",
    "start": "828399",
    "end": "830240"
  },
  {
    "text": "in a separate process the third reason",
    "start": "830240",
    "end": "832880"
  },
  {
    "text": "is that",
    "start": "832880",
    "end": "833600"
  },
  {
    "text": "it's transparent to upper layer like we",
    "start": "833600",
    "end": "836399"
  },
  {
    "text": "have our own data set we have our own",
    "start": "836399",
    "end": "838639"
  },
  {
    "text": "sampler",
    "start": "838639",
    "end": "840720"
  },
  {
    "text": "uh one-way one-way switching from the",
    "start": "840720",
    "end": "843600"
  },
  {
    "text": "python space the",
    "start": "843600",
    "end": "844800"
  },
  {
    "text": "data load engine to the ray-based setup",
    "start": "844800",
    "end": "847360"
  },
  {
    "text": "engine we don't need to change a lot of",
    "start": "847360",
    "end": "848959"
  },
  {
    "text": "code it it's quite easy to swap the",
    "start": "848959",
    "end": "851920"
  },
  {
    "text": "entire",
    "start": "851920",
    "end": "852639"
  },
  {
    "text": "multi-process engine and replace it with",
    "start": "852639",
    "end": "855199"
  },
  {
    "text": "real engine",
    "start": "855199",
    "end": "856320"
  },
  {
    "text": "um and user don't need like the upper",
    "start": "856320",
    "end": "859600"
  },
  {
    "text": "level",
    "start": "859600",
    "end": "860079"
  },
  {
    "text": "application developer uh developers",
    "start": "860079",
    "end": "862959"
  },
  {
    "text": "don't even",
    "start": "862959",
    "end": "863760"
  },
  {
    "text": "know uh and i don't need to know like",
    "start": "863760",
    "end": "866399"
  },
  {
    "text": "what's happened under the hood and they",
    "start": "866399",
    "end": "867920"
  },
  {
    "text": "can achieve the same functionality",
    "start": "867920",
    "end": "870320"
  },
  {
    "text": "and achieve the same speed that's the",
    "start": "870320",
    "end": "871920"
  },
  {
    "text": "reason why we want to choose 3.",
    "start": "871920",
    "end": "875519"
  },
  {
    "start": "875000",
    "end": "960000"
  },
  {
    "text": "uh like for the dataset reactors",
    "start": "875680",
    "end": "879839"
  },
  {
    "text": "so here's a idea like how we want to",
    "start": "879839",
    "end": "883360"
  },
  {
    "text": "how we can do this uh it's just a",
    "start": "883360",
    "end": "885760"
  },
  {
    "text": "sketching of some ideas",
    "start": "885760",
    "end": "887360"
  },
  {
    "text": "uh for example like uh if you imagine we",
    "start": "887360",
    "end": "890399"
  },
  {
    "text": "have this data set",
    "start": "890399",
    "end": "891440"
  },
  {
    "text": "uh our own implementation of data set",
    "start": "891440",
    "end": "893680"
  },
  {
    "text": "and it's it's could be",
    "start": "893680",
    "end": "895120"
  },
  {
    "text": "quite complex when converting this code",
    "start": "895120",
    "end": "898320"
  },
  {
    "text": "to to be compatible with running with",
    "start": "898320",
    "end": "900639"
  },
  {
    "text": "ray we basically just",
    "start": "900639",
    "end": "902399"
  },
  {
    "text": "need to add this radar remote decor",
    "start": "902399",
    "end": "904959"
  },
  {
    "text": "decorators",
    "start": "904959",
    "end": "906079"
  },
  {
    "text": "so it could be launched uh as a reactor",
    "start": "906079",
    "end": "909839"
  },
  {
    "text": "and the any other things like sampler",
    "start": "909839",
    "end": "912399"
  },
  {
    "text": "and datasets don't don't need to be",
    "start": "912399",
    "end": "914079"
  },
  {
    "text": "changed",
    "start": "914079",
    "end": "914800"
  },
  {
    "text": "so for example here like the code sleep",
    "start": "914800",
    "end": "917120"
  },
  {
    "text": "shows that",
    "start": "917120",
    "end": "918240"
  },
  {
    "text": "uh how we can load uh the sample from",
    "start": "918240",
    "end": "922079"
  },
  {
    "text": "this dataset api",
    "start": "922079",
    "end": "923920"
  },
  {
    "text": "uh basically we can still initialize our",
    "start": "923920",
    "end": "926480"
  },
  {
    "text": "sample in the driver process sampling",
    "start": "926480",
    "end": "928560"
  },
  {
    "text": "our driver process",
    "start": "928560",
    "end": "929759"
  },
  {
    "text": "and we can iterate the sampler to get",
    "start": "929759",
    "end": "931759"
  },
  {
    "text": "the index and then we can pass this",
    "start": "931759",
    "end": "933680"
  },
  {
    "text": "index to the",
    "start": "933680",
    "end": "934880"
  },
  {
    "text": "to the actual and return the return",
    "start": "934880",
    "end": "936959"
  },
  {
    "text": "results",
    "start": "936959",
    "end": "938079"
  },
  {
    "text": "uh like if the return results",
    "start": "938079",
    "end": "941120"
  },
  {
    "text": "is a non-pirate or it's a large object",
    "start": "941120",
    "end": "943199"
  },
  {
    "text": "it goes through the",
    "start": "943199",
    "end": "944320"
  },
  {
    "text": "shell memory so it's still fast and if",
    "start": "944320",
    "end": "946959"
  },
  {
    "text": "this object",
    "start": "946959",
    "end": "948000"
  },
  {
    "text": "uh it's not non-piracy as long as it can",
    "start": "948000",
    "end": "951360"
  },
  {
    "text": "be serialized or",
    "start": "951360",
    "end": "953839"
  },
  {
    "text": "uh it still goes through reactors so",
    "start": "953839",
    "end": "956480"
  },
  {
    "text": "it's quite convenient for us",
    "start": "956480",
    "end": "958480"
  },
  {
    "text": "uh to implement code like this uh yeah",
    "start": "958480",
    "end": "961759"
  },
  {
    "start": "960000",
    "end": "1146000"
  },
  {
    "text": "so",
    "start": "961759",
    "end": "962560"
  },
  {
    "text": "these dataset reactors give us a lot of",
    "start": "962560",
    "end": "965440"
  },
  {
    "text": "benefits",
    "start": "965440",
    "end": "966880"
  },
  {
    "text": "i think first of all the most important",
    "start": "966880",
    "end": "968880"
  },
  {
    "text": "part is that",
    "start": "968880",
    "end": "970160"
  },
  {
    "text": "uh we can keep the sampler and data sets",
    "start": "970160",
    "end": "973040"
  },
  {
    "text": "unchanged with solution to array",
    "start": "973040",
    "end": "975120"
  },
  {
    "text": "uh that's because we have our sampler",
    "start": "975120",
    "end": "978399"
  },
  {
    "text": "and datasets invitation and it includes",
    "start": "978399",
    "end": "980399"
  },
  {
    "text": "a lot of details and it has a lot of",
    "start": "980399",
    "end": "983120"
  },
  {
    "text": "uh um it has a lot of external",
    "start": "983120",
    "end": "987040"
  },
  {
    "text": "libraries and we don't want to uh we",
    "start": "987040",
    "end": "989759"
  },
  {
    "text": "don't need to deal with issue like",
    "start": "989759",
    "end": "992240"
  },
  {
    "text": "one of the libraries is not compatible",
    "start": "992240",
    "end": "994639"
  },
  {
    "text": "with three and turns out everything",
    "start": "994639",
    "end": "996000"
  },
  {
    "text": "works well",
    "start": "996000",
    "end": "997120"
  },
  {
    "text": "and the second we can control the",
    "start": "997120",
    "end": "998720"
  },
  {
    "text": "granularity of parallelism",
    "start": "998720",
    "end": "1000320"
  },
  {
    "text": "through actors right now we are doing",
    "start": "1000320",
    "end": "1002639"
  },
  {
    "text": "the parallelism",
    "start": "1002639",
    "end": "1003600"
  },
  {
    "text": "at dataset level but in the future if we",
    "start": "1003600",
    "end": "1006880"
  },
  {
    "text": "notice that for example if the storage",
    "start": "1006880",
    "end": "1009360"
  },
  {
    "text": "side the i o side is a bottleneck",
    "start": "1009360",
    "end": "1011600"
  },
  {
    "text": "uh like loading image or loading values",
    "start": "1011600",
    "end": "1014639"
  },
  {
    "text": "is bottleneck we can actually",
    "start": "1014639",
    "end": "1016639"
  },
  {
    "text": "like making the granularity of",
    "start": "1016639",
    "end": "1018320"
  },
  {
    "text": "parallelism happens at",
    "start": "1018320",
    "end": "1020079"
  },
  {
    "text": "like the loading function the image",
    "start": "1020079",
    "end": "1021920"
  },
  {
    "text": "loading function video loading function",
    "start": "1021920",
    "end": "1024319"
  },
  {
    "text": "or we can we can even like make the uh",
    "start": "1024319",
    "end": "1027360"
  },
  {
    "text": "image loading and video loading inside",
    "start": "1027360",
    "end": "1029678"
  },
  {
    "text": "the data set actor making them uh",
    "start": "1029679",
    "end": "1031520"
  },
  {
    "text": "actually in actor so so in this way like",
    "start": "1031520",
    "end": "1033760"
  },
  {
    "text": "we can improve the",
    "start": "1033760",
    "end": "1035280"
  },
  {
    "text": "our data link speed a bit a little bit",
    "start": "1035280",
    "end": "1037038"
  },
  {
    "text": "more and the",
    "start": "1037039",
    "end": "1039760"
  },
  {
    "text": "another nice part about this is that we",
    "start": "1039760",
    "end": "1042000"
  },
  {
    "text": "can further make this",
    "start": "1042000",
    "end": "1043520"
  },
  {
    "text": "uh data set reactors asynchronized by",
    "start": "1043520",
    "end": "1046959"
  },
  {
    "text": "calling this ray.weight api uh",
    "start": "1046959",
    "end": "1050400"
  },
  {
    "text": "so basically uh the idea of that is",
    "start": "1050400",
    "end": "1052960"
  },
  {
    "text": "basically that",
    "start": "1052960",
    "end": "1054240"
  },
  {
    "text": "uh we can have a lot of actors run in",
    "start": "1054240",
    "end": "1056480"
  },
  {
    "text": "parallel",
    "start": "1056480",
    "end": "1057360"
  },
  {
    "text": "and uh we don't we don't we don't need",
    "start": "1057360",
    "end": "1060320"
  },
  {
    "text": "to do this in a run the robbing way",
    "start": "1060320",
    "end": "1062559"
  },
  {
    "text": "instead of instead of that we can",
    "start": "1062559",
    "end": "1064960"
  },
  {
    "text": "actually checking",
    "start": "1064960",
    "end": "1067039"
  },
  {
    "text": "uh the status of each reactor function",
    "start": "1067039",
    "end": "1070160"
  },
  {
    "text": "call",
    "start": "1070160",
    "end": "1070880"
  },
  {
    "text": "if it is ready by just checking the rate",
    "start": "1070880",
    "end": "1073520"
  },
  {
    "text": "dot break api",
    "start": "1073520",
    "end": "1075039"
  },
  {
    "text": "uh in this way that the entire actress",
    "start": "1075039",
    "end": "1077840"
  },
  {
    "text": "can be running",
    "start": "1077840",
    "end": "1079039"
  },
  {
    "text": "synchronized manner so this give out",
    "start": "1079039",
    "end": "1081200"
  },
  {
    "text": "give us a little bit more performance",
    "start": "1081200",
    "end": "1082880"
  },
  {
    "text": "improvement",
    "start": "1082880",
    "end": "1083919"
  },
  {
    "text": "and the most important the most",
    "start": "1083919",
    "end": "1086000"
  },
  {
    "text": "important thing is that",
    "start": "1086000",
    "end": "1087679"
  },
  {
    "text": "we don't have any like um",
    "start": "1087679",
    "end": "1091120"
  },
  {
    "text": "training got stocked because of the",
    "start": "1091120",
    "end": "1093360"
  },
  {
    "text": "deadlock situation in python",
    "start": "1093360",
    "end": "1095280"
  },
  {
    "text": "anymore with this reactor mode",
    "start": "1095280",
    "end": "1099039"
  },
  {
    "text": "the reason for that is like is that uh",
    "start": "1099039",
    "end": "1102559"
  },
  {
    "text": "the the actual process and the main",
    "start": "1102559",
    "end": "1105440"
  },
  {
    "text": "process",
    "start": "1105440",
    "end": "1106000"
  },
  {
    "text": "is not sharing anything uh the",
    "start": "1106000",
    "end": "1109520"
  },
  {
    "text": "the python class from the driver process",
    "start": "1109520",
    "end": "1112400"
  },
  {
    "text": "is actually",
    "start": "1112400",
    "end": "1113280"
  },
  {
    "text": "serialized and then deserialized at",
    "start": "1113280",
    "end": "1116240"
  },
  {
    "text": "actor",
    "start": "1116240",
    "end": "1117200"
  },
  {
    "text": "uh it is it's not like it's not like the",
    "start": "1117200",
    "end": "1119919"
  },
  {
    "text": "multi-processing mode the",
    "start": "1119919",
    "end": "1121440"
  },
  {
    "text": "every the main process and the work",
    "start": "1121440",
    "end": "1124720"
  },
  {
    "text": "process uh is sharing everything but",
    "start": "1124720",
    "end": "1127360"
  },
  {
    "text": "actually it's just",
    "start": "1127360",
    "end": "1128240"
  },
  {
    "text": "it's not sharing everything and making",
    "start": "1128240",
    "end": "1130000"
  },
  {
    "text": "this quite safe for us",
    "start": "1130000",
    "end": "1131919"
  },
  {
    "text": "so we don't have any like the",
    "start": "1131919",
    "end": "1134960"
  },
  {
    "text": "training got hung or training gun stock",
    "start": "1134960",
    "end": "1137840"
  },
  {
    "text": "issues and",
    "start": "1137840",
    "end": "1139280"
  },
  {
    "text": "and that's the most important part like",
    "start": "1139280",
    "end": "1141039"
  },
  {
    "text": "that that we want to switch to right",
    "start": "1141039",
    "end": "1144720"
  },
  {
    "start": "1146000",
    "end": "1348000"
  },
  {
    "text": "uh yeah so next i want to share some",
    "start": "1147039",
    "end": "1150000"
  },
  {
    "text": "lessons we learned",
    "start": "1150000",
    "end": "1151039"
  },
  {
    "text": "uh like uh in the process of",
    "start": "1151039",
    "end": "1154559"
  },
  {
    "text": "uh developing ray-based setting order",
    "start": "1154559",
    "end": "1157120"
  },
  {
    "text": "and switching to ray-based cellular",
    "start": "1157120",
    "end": "1158880"
  },
  {
    "text": "engine",
    "start": "1158880",
    "end": "1159760"
  },
  {
    "text": "uh first of all like uh it is also",
    "start": "1159760",
    "end": "1163280"
  },
  {
    "text": "a very interesting topic is how to",
    "start": "1163280",
    "end": "1165039"
  },
  {
    "text": "handle a gpu training rate",
    "start": "1165039",
    "end": "1167440"
  },
  {
    "text": "uh i think i as at one point i actually",
    "start": "1167440",
    "end": "1170480"
  },
  {
    "text": "asked this question and ricky's love and",
    "start": "1170480",
    "end": "1173200"
  },
  {
    "text": "developers give us some very nice",
    "start": "1173200",
    "end": "1175600"
  },
  {
    "text": "answers for that question",
    "start": "1175600",
    "end": "1177200"
  },
  {
    "text": "uh so basically uh our training",
    "start": "1177200",
    "end": "1180880"
  },
  {
    "text": "jobs using multi-gpu and it's based on",
    "start": "1180880",
    "end": "1183840"
  },
  {
    "text": "mpi and however",
    "start": "1183840",
    "end": "1185679"
  },
  {
    "text": "uh so uh instead of in international in",
    "start": "1185679",
    "end": "1189120"
  },
  {
    "text": "statutory",
    "start": "1189120",
    "end": "1190640"
  },
  {
    "text": "uh in ray cluster and every jobs",
    "start": "1190640",
    "end": "1194160"
  },
  {
    "text": "share the same re-cluster in our setting",
    "start": "1194160",
    "end": "1197120"
  },
  {
    "text": "uh we instead",
    "start": "1197120",
    "end": "1198240"
  },
  {
    "text": "internationally in each of the training",
    "start": "1198240",
    "end": "1200320"
  },
  {
    "text": "jobs so it's a little bit different",
    "start": "1200320",
    "end": "1201840"
  },
  {
    "text": "settings in our environment",
    "start": "1201840",
    "end": "1204559"
  },
  {
    "text": "so in order to make re like",
    "start": "1204559",
    "end": "1207600"
  },
  {
    "text": "a shareable uh betrayal different",
    "start": "1207600",
    "end": "1210320"
  },
  {
    "text": "training process",
    "start": "1210320",
    "end": "1211520"
  },
  {
    "text": "uh we need to follow the order of uh",
    "start": "1211520",
    "end": "1213919"
  },
  {
    "text": "bring up ray and shaheen nunnery",
    "start": "1213919",
    "end": "1215919"
  },
  {
    "text": "uh for starting up the rate uh it has to",
    "start": "1215919",
    "end": "1218799"
  },
  {
    "text": "be first the rank zero",
    "start": "1218799",
    "end": "1220080"
  },
  {
    "text": "calls the radar you need to initialize",
    "start": "1220080",
    "end": "1222240"
  },
  {
    "text": "the recluster",
    "start": "1222240",
    "end": "1223600"
  },
  {
    "text": "and the uh the other rank uh needs to",
    "start": "1223600",
    "end": "1226880"
  },
  {
    "text": "call",
    "start": "1226880",
    "end": "1227440"
  },
  {
    "text": "is is to wait until the rack zero bring",
    "start": "1227440",
    "end": "1230640"
  },
  {
    "text": "up the request and instantly connects",
    "start": "1230640",
    "end": "1232799"
  },
  {
    "text": "to the raycluster one comes to one comes",
    "start": "1232799",
    "end": "1236159"
  },
  {
    "text": "to",
    "start": "1236159",
    "end": "1236720"
  },
  {
    "text": "one comes to shutting down uh it it",
    "start": "1236720",
    "end": "1239919"
  },
  {
    "text": "needs to be go a reverse order it needs",
    "start": "1239919",
    "end": "1242240"
  },
  {
    "text": "to be",
    "start": "1242240",
    "end": "1243120"
  },
  {
    "text": "like uh other ranks uh needs to exit",
    "start": "1243120",
    "end": "1246559"
  },
  {
    "text": "first",
    "start": "1246559",
    "end": "1247440"
  },
  {
    "text": "and the direct zero needs to wait uh uh",
    "start": "1247440",
    "end": "1250480"
  },
  {
    "text": "until like uh all the other rank the",
    "start": "1250480",
    "end": "1252960"
  },
  {
    "text": "exit",
    "start": "1252960",
    "end": "1253840"
  },
  {
    "text": "so rank zero can safely shutting down",
    "start": "1253840",
    "end": "1255840"
  },
  {
    "text": "the recluster",
    "start": "1255840",
    "end": "1256880"
  },
  {
    "text": "if the order is not it is not correct uh",
    "start": "1256880",
    "end": "1259440"
  },
  {
    "text": "your",
    "start": "1259440",
    "end": "1260000"
  },
  {
    "text": "rate your rate your rick your re-cluster",
    "start": "1260000",
    "end": "1262880"
  },
  {
    "text": "where got",
    "start": "1262880",
    "end": "1263760"
  },
  {
    "text": "got crashed and that's something you",
    "start": "1263760",
    "end": "1265679"
  },
  {
    "text": "don't want to have",
    "start": "1265679",
    "end": "1267679"
  },
  {
    "text": "and the second lesson we have learned is",
    "start": "1267679",
    "end": "1269760"
  },
  {
    "text": "that um",
    "start": "1269760",
    "end": "1271600"
  },
  {
    "text": "we need to have some customized config",
    "start": "1271600",
    "end": "1274080"
  },
  {
    "text": "to adapt to our cluster",
    "start": "1274080",
    "end": "1276480"
  },
  {
    "text": "so we have kubernetes clusters and",
    "start": "1276480",
    "end": "1281120"
  },
  {
    "text": "we are running docker containers in our",
    "start": "1281120",
    "end": "1282799"
  },
  {
    "text": "kubernetes clusters",
    "start": "1282799",
    "end": "1284400"
  },
  {
    "text": "so we noticed that some default config",
    "start": "1284400",
    "end": "1286720"
  },
  {
    "text": "is not",
    "start": "1286720",
    "end": "1288240"
  },
  {
    "text": "working our environment for example this",
    "start": "1288240",
    "end": "1290720"
  },
  {
    "text": "worker",
    "start": "1290720",
    "end": "1291440"
  },
  {
    "text": "this config called worker register time",
    "start": "1291440",
    "end": "1293600"
  },
  {
    "text": "on seconds",
    "start": "1293600",
    "end": "1294880"
  },
  {
    "text": "it's basically the timeout for array",
    "start": "1294880",
    "end": "1297520"
  },
  {
    "text": "let's",
    "start": "1297520",
    "end": "1298080"
  },
  {
    "text": "uh bring up actors uh",
    "start": "1298080",
    "end": "1302000"
  },
  {
    "text": "so you know in our container-based",
    "start": "1302000",
    "end": "1304559"
  },
  {
    "text": "environment",
    "start": "1304559",
    "end": "1305280"
  },
  {
    "text": "we noticed that this this timeout could",
    "start": "1305280",
    "end": "1307679"
  },
  {
    "text": "be needs to be said a little bit longer",
    "start": "1307679",
    "end": "1309679"
  },
  {
    "text": "than before 30 seconds otherwise",
    "start": "1309679",
    "end": "1311840"
  },
  {
    "text": "we see a lot of um a worker read",
    "start": "1311840",
    "end": "1315280"
  },
  {
    "text": "situation timeline issues",
    "start": "1315280",
    "end": "1317280"
  },
  {
    "text": "the the other one is that this uh",
    "start": "1317280",
    "end": "1320400"
  },
  {
    "text": "heartbeat timeouts so the heartbeat",
    "start": "1320400",
    "end": "1322559"
  },
  {
    "text": "between the actors",
    "start": "1322559",
    "end": "1324000"
  },
  {
    "text": "and the relat uh timeout is default",
    "start": "1324000",
    "end": "1327120"
  },
  {
    "text": "value is 30 seconds",
    "start": "1327120",
    "end": "1328640"
  },
  {
    "text": "uh but in our environment especially",
    "start": "1328640",
    "end": "1331039"
  },
  {
    "text": "when we are running some",
    "start": "1331039",
    "end": "1332240"
  },
  {
    "text": "ion intensive workflows like data",
    "start": "1332240",
    "end": "1334240"
  },
  {
    "text": "loading the default value",
    "start": "1334240",
    "end": "1336080"
  },
  {
    "text": "is not sufficient so basically we need",
    "start": "1336080",
    "end": "1338720"
  },
  {
    "text": "to",
    "start": "1338720",
    "end": "1339280"
  },
  {
    "text": "increase this this value a little bit",
    "start": "1339280",
    "end": "1342480"
  },
  {
    "text": "yeah that's all thanks for for for",
    "start": "1342480",
    "end": "1345039"
  },
  {
    "text": "attention",
    "start": "1345039",
    "end": "1347840"
  }
]