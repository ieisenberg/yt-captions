[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "[Music]",
    "start": "170",
    "end": "14719"
  },
  {
    "text": "hello",
    "start": "14719",
    "end": "15360"
  },
  {
    "text": "i'm marvin timer and i'm a distinguished",
    "start": "15360",
    "end": "17359"
  },
  {
    "text": "engineer at amazon web services",
    "start": "17359",
    "end": "19840"
  },
  {
    "text": "and today i want to talk about a paper",
    "start": "19840",
    "end": "22000"
  },
  {
    "text": "that berkeley wrote a couple of years",
    "start": "22000",
    "end": "24000"
  },
  {
    "text": "ago",
    "start": "24000",
    "end": "24400"
  },
  {
    "text": "entitled cloud computing simplified a",
    "start": "24400",
    "end": "26640"
  },
  {
    "text": "viewf a berkeley view on serverless",
    "start": "26640",
    "end": "28960"
  },
  {
    "text": "computing",
    "start": "28960",
    "end": "30000"
  },
  {
    "text": "and i want to examine that paper's",
    "start": "30000",
    "end": "31760"
  },
  {
    "text": "predictions and characterization of",
    "start": "31760",
    "end": "33920"
  },
  {
    "text": "things from the perspective of two years",
    "start": "33920",
    "end": "35760"
  },
  {
    "text": "hence",
    "start": "35760",
    "end": "37680"
  },
  {
    "start": "37000",
    "end": "476000"
  },
  {
    "text": "so the berkeley paper or the berkeley",
    "start": "37680",
    "end": "39680"
  },
  {
    "text": "folks in several papers",
    "start": "39680",
    "end": "41760"
  },
  {
    "text": "basically i think tried to say the",
    "start": "41760",
    "end": "43840"
  },
  {
    "text": "following they argued",
    "start": "43840",
    "end": "45200"
  },
  {
    "text": "that simplifying a simplified",
    "start": "45200",
    "end": "47039"
  },
  {
    "text": "programming environment which is the",
    "start": "47039",
    "end": "48480"
  },
  {
    "text": "promise of serverless will make cloud",
    "start": "48480",
    "end": "50719"
  },
  {
    "text": "will make the cloud much easier to use",
    "start": "50719",
    "end": "53360"
  },
  {
    "text": "they characterized serverless",
    "start": "53360",
    "end": "55199"
  },
  {
    "text": "computing as being a combination of",
    "start": "55199",
    "end": "57280"
  },
  {
    "text": "functions as a service",
    "start": "57280",
    "end": "58800"
  },
  {
    "text": "combined with back ends as a service and",
    "start": "58800",
    "end": "61520"
  },
  {
    "text": "they predicted that this combination",
    "start": "61520",
    "end": "63520"
  },
  {
    "text": "would make serverless use skyrocket",
    "start": "63520",
    "end": "65920"
  },
  {
    "text": "because it would be so much better than",
    "start": "65920",
    "end": "67840"
  },
  {
    "text": "what we've had before",
    "start": "67840",
    "end": "69680"
  },
  {
    "text": "but they did point out there would be",
    "start": "69680",
    "end": "71200"
  },
  {
    "text": "some challenges",
    "start": "71200",
    "end": "73280"
  },
  {
    "text": "at the time they observed that there",
    "start": "73280",
    "end": "75600"
  },
  {
    "text": "were inadequate storage options",
    "start": "75600",
    "end": "77360"
  },
  {
    "text": "especially on the ephemeral side but",
    "start": "77360",
    "end": "79119"
  },
  {
    "text": "also on the persistent side for dealing",
    "start": "79119",
    "end": "81119"
  },
  {
    "text": "with",
    "start": "81119",
    "end": "81840"
  },
  {
    "text": "serverless computing functions they",
    "start": "81840",
    "end": "84240"
  },
  {
    "text": "observed that the serverless model",
    "start": "84240",
    "end": "86320"
  },
  {
    "text": "provided inappropriate and unpredictable",
    "start": "86320",
    "end": "88400"
  },
  {
    "text": "communication and coordination",
    "start": "88400",
    "end": "89840"
  },
  {
    "text": "functionality",
    "start": "89840",
    "end": "92240"
  },
  {
    "text": "they also observed a number of",
    "start": "92240",
    "end": "93840"
  },
  {
    "text": "limitations on the compute capabilities",
    "start": "93840",
    "end": "96960"
  },
  {
    "text": "lambda functions had a limited time that",
    "start": "96960",
    "end": "99759"
  },
  {
    "text": "you could run them",
    "start": "99759",
    "end": "100799"
  },
  {
    "text": "startup times could be very slow",
    "start": "100799",
    "end": "102560"
  },
  {
    "text": "depending on what code you had and so",
    "start": "102560",
    "end": "104240"
  },
  {
    "text": "forth",
    "start": "104240",
    "end": "104960"
  },
  {
    "text": "and they also voiced security concerns",
    "start": "104960",
    "end": "106880"
  },
  {
    "text": "about the multi-tenant nature",
    "start": "106880",
    "end": "108560"
  },
  {
    "text": "of serverless computing",
    "start": "108560",
    "end": "111600"
  },
  {
    "text": "so let's look at their core pro",
    "start": "111600",
    "end": "113759"
  },
  {
    "text": "prediction which was",
    "start": "113759",
    "end": "114960"
  },
  {
    "text": "that serverless computing would become",
    "start": "114960",
    "end": "117040"
  },
  {
    "text": "popular and that has proved to be very",
    "start": "117040",
    "end": "119040"
  },
  {
    "text": "much true it has become immensely",
    "start": "119040",
    "end": "120960"
  },
  {
    "text": "popular",
    "start": "120960",
    "end": "121920"
  },
  {
    "text": "at least as we see it in on aws when we",
    "start": "121920",
    "end": "124479"
  },
  {
    "text": "look at lambda which is what aws's",
    "start": "124479",
    "end": "127280"
  },
  {
    "text": "premier serverless computing services we",
    "start": "127280",
    "end": "130479"
  },
  {
    "text": "see that over half of the new",
    "start": "130479",
    "end": "131840"
  },
  {
    "text": "applications built inside amazon are now",
    "start": "131840",
    "end": "134160"
  },
  {
    "text": "built with aws lambda",
    "start": "134160",
    "end": "136400"
  },
  {
    "text": "so it's very popular we're seeing that",
    "start": "136400",
    "end": "139440"
  },
  {
    "text": "customers of aws are making trillions of",
    "start": "139440",
    "end": "141920"
  },
  {
    "text": "invocations per month so it's definitely",
    "start": "141920",
    "end": "143840"
  },
  {
    "text": "something that's in heavy use",
    "start": "143840",
    "end": "145920"
  },
  {
    "text": "and we're seeing that customers some",
    "start": "145920",
    "end": "147920"
  },
  {
    "text": "customers are making",
    "start": "147920",
    "end": "149200"
  },
  {
    "text": "tens of thousands of concurrent",
    "start": "149200",
    "end": "150800"
  },
  {
    "text": "invocations with lambdas",
    "start": "150800",
    "end": "152480"
  },
  {
    "text": "so it's promise of seamless scaling to",
    "start": "152480",
    "end": "155360"
  },
  {
    "text": "huge volumes has also proven to be true",
    "start": "155360",
    "end": "158720"
  },
  {
    "text": "so that part has been absolutely",
    "start": "158720",
    "end": "160879"
  },
  {
    "text": "accurate",
    "start": "160879",
    "end": "162720"
  },
  {
    "text": "but one thing that i think is a little",
    "start": "162720",
    "end": "164160"
  },
  {
    "text": "more complicated than what the berkeley",
    "start": "164160",
    "end": "165840"
  },
  {
    "text": "folks put",
    "start": "165840",
    "end": "167120"
  },
  {
    "text": "originally characterized is this",
    "start": "167120",
    "end": "168800"
  },
  {
    "text": "question of whether serverless equals",
    "start": "168800",
    "end": "171120"
  },
  {
    "text": "function as a service combined with back",
    "start": "171120",
    "end": "173519"
  },
  {
    "text": "ends as a service",
    "start": "173519",
    "end": "175440"
  },
  {
    "text": "and what i want to argue is that life's",
    "start": "175440",
    "end": "177280"
  },
  {
    "text": "a little more complicated and not quite",
    "start": "177280",
    "end": "179200"
  },
  {
    "text": "as",
    "start": "179200",
    "end": "179920"
  },
  {
    "text": "crisply clean as that to begin with",
    "start": "179920",
    "end": "182720"
  },
  {
    "text": "let's think about what is a function",
    "start": "182720",
    "end": "184560"
  },
  {
    "text": "if we think of function as a service as",
    "start": "184560",
    "end": "186879"
  },
  {
    "text": "meaning a lambda function",
    "start": "186879",
    "end": "188560"
  },
  {
    "text": "in the sense of a function that has no",
    "start": "188560",
    "end": "191200"
  },
  {
    "text": "name so that you can't",
    "start": "191200",
    "end": "192319"
  },
  {
    "text": "reach it uh that runs for a little while",
    "start": "192319",
    "end": "194879"
  },
  {
    "text": "and ends",
    "start": "194879",
    "end": "196239"
  },
  {
    "text": "you can ask well how does that map onto",
    "start": "196239",
    "end": "198400"
  },
  {
    "text": "the various things",
    "start": "198400",
    "end": "199280"
  },
  {
    "text": "that people have called serverless and",
    "start": "199280",
    "end": "201680"
  },
  {
    "text": "that offer something similar",
    "start": "201680",
    "end": "203200"
  },
  {
    "text": "for example you might compare lambda",
    "start": "203200",
    "end": "205280"
  },
  {
    "text": "functions to fargate containers",
    "start": "205280",
    "end": "207680"
  },
  {
    "text": "both lambda and fargate can",
    "start": "207680",
    "end": "210720"
  },
  {
    "text": "say that they are serverless but one is",
    "start": "210720",
    "end": "213920"
  },
  {
    "text": "very much aimed at a function and",
    "start": "213920",
    "end": "215519"
  },
  {
    "text": "another one is aimed at running a full",
    "start": "215519",
    "end": "217280"
  },
  {
    "text": "container",
    "start": "217280",
    "end": "218159"
  },
  {
    "text": "that typically runs for a very long time",
    "start": "218159",
    "end": "220799"
  },
  {
    "text": "now lambda now",
    "start": "220799",
    "end": "222000"
  },
  {
    "text": "offers the ability to define functions",
    "start": "222000",
    "end": "224080"
  },
  {
    "text": "as containers so in that sense lambda",
    "start": "224080",
    "end": "226560"
  },
  {
    "text": "has gotten similar to fargate on the",
    "start": "226560",
    "end": "228879"
  },
  {
    "text": "other hand fargate you gets used for",
    "start": "228879",
    "end": "230799"
  },
  {
    "text": "very different things",
    "start": "230799",
    "end": "232159"
  },
  {
    "text": "for one thing most fargate containers",
    "start": "232159",
    "end": "234159"
  },
  {
    "text": "run for",
    "start": "234159",
    "end": "235280"
  },
  {
    "text": "uh can run for an arbitrarily long point",
    "start": "235280",
    "end": "237840"
  },
  {
    "text": "uh period of time and are often used to",
    "start": "237840",
    "end": "239840"
  },
  {
    "text": "implement long-running web services",
    "start": "239840",
    "end": "241840"
  },
  {
    "text": "that's not what the intent of lambda was",
    "start": "241840",
    "end": "244239"
  },
  {
    "text": "but this question of what's a function",
    "start": "244239",
    "end": "245920"
  },
  {
    "text": "becomes fuzzy here",
    "start": "245920",
    "end": "247439"
  },
  {
    "text": "the same thing applies when we think of",
    "start": "247439",
    "end": "249120"
  },
  {
    "text": "things like step functions or mapreduce",
    "start": "249120",
    "end": "251200"
  },
  {
    "text": "functions or api gateway functions each",
    "start": "251200",
    "end": "254159"
  },
  {
    "text": "of these offer a model where you can",
    "start": "254159",
    "end": "256000"
  },
  {
    "text": "define a function",
    "start": "256000",
    "end": "257120"
  },
  {
    "text": "much in the way that you can define a",
    "start": "257120",
    "end": "258400"
  },
  {
    "text": "lambda function but it's embedded in a",
    "start": "258400",
    "end": "260639"
  },
  {
    "text": "much",
    "start": "260639",
    "end": "261040"
  },
  {
    "text": "larger framework or ecosystem",
    "start": "261040",
    "end": "264639"
  },
  {
    "text": "in order to enable its use so are these",
    "start": "264639",
    "end": "267840"
  },
  {
    "text": "functions",
    "start": "267840",
    "end": "268639"
  },
  {
    "text": "functions is this a function as a",
    "start": "268639",
    "end": "270320"
  },
  {
    "text": "service or is something like step",
    "start": "270320",
    "end": "272240"
  },
  {
    "text": "functions or an emr cluster is that",
    "start": "272240",
    "end": "274560"
  },
  {
    "text": "something different",
    "start": "274560",
    "end": "276320"
  },
  {
    "text": "you could ask the same question about",
    "start": "276320",
    "end": "277759"
  },
  {
    "text": "sql queries these are functions on the",
    "start": "277759",
    "end": "280400"
  },
  {
    "text": "other hand",
    "start": "280400",
    "end": "281280"
  },
  {
    "text": "they only have meaning inside of a",
    "start": "281280",
    "end": "283120"
  },
  {
    "text": "relational database",
    "start": "283120",
    "end": "284400"
  },
  {
    "text": "or in some kind of a relational model",
    "start": "284400",
    "end": "287360"
  },
  {
    "text": "and of course once you have",
    "start": "287360",
    "end": "288479"
  },
  {
    "text": "infrastructure as code",
    "start": "288479",
    "end": "290479"
  },
  {
    "text": "is a function that creates something as",
    "start": "290479",
    "end": "293520"
  },
  {
    "text": "a",
    "start": "293520",
    "end": "293840"
  },
  {
    "text": "as a as a function call is that a",
    "start": "293840",
    "end": "295919"
  },
  {
    "text": "function or is that resource management",
    "start": "295919",
    "end": "297919"
  },
  {
    "text": "these things become fuzzy",
    "start": "297919",
    "end": "299759"
  },
  {
    "text": "the same thing applies to backend",
    "start": "299759",
    "end": "301360"
  },
  {
    "text": "services s3 is a great example",
    "start": "301360",
    "end": "304000"
  },
  {
    "text": "of what people commonly think of as a",
    "start": "304000",
    "end": "305919"
  },
  {
    "text": "serverless backend",
    "start": "305919",
    "end": "307840"
  },
  {
    "text": "service a simple api with a huge amount",
    "start": "307840",
    "end": "310560"
  },
  {
    "text": "of complexity",
    "start": "310560",
    "end": "311440"
  },
  {
    "text": "deals with things like state but",
    "start": "311440",
    "end": "313440"
  },
  {
    "text": "dynamodb and kinesis are also example",
    "start": "313440",
    "end": "315919"
  },
  {
    "text": "of services that we characterize as",
    "start": "315919",
    "end": "318240"
  },
  {
    "text": "serverless",
    "start": "318240",
    "end": "319360"
  },
  {
    "text": "and yet there are modes they offer which",
    "start": "319360",
    "end": "321440"
  },
  {
    "text": "very much involve",
    "start": "321440",
    "end": "322400"
  },
  {
    "text": "some form of resource management at",
    "start": "322400",
    "end": "324960"
  },
  {
    "text": "least until recently if you use dynamodb",
    "start": "324960",
    "end": "327360"
  },
  {
    "text": "you had to manually manage the",
    "start": "327360",
    "end": "328880"
  },
  {
    "text": "provisioned iops that it depends on",
    "start": "328880",
    "end": "331280"
  },
  {
    "text": "you could create an auto scaling",
    "start": "331280",
    "end": "332880"
  },
  {
    "text": "functionality on top of it that would",
    "start": "332880",
    "end": "334639"
  },
  {
    "text": "run it but still",
    "start": "334639",
    "end": "335680"
  },
  {
    "text": "somebody was doing this manual",
    "start": "335680",
    "end": "337280"
  },
  {
    "text": "management of that only recently has",
    "start": "337280",
    "end": "339440"
  },
  {
    "text": "dynamodb offered an on-demand option",
    "start": "339440",
    "end": "341520"
  },
  {
    "text": "where everything is managed inside of",
    "start": "341520",
    "end": "343520"
  },
  {
    "text": "dynamodb",
    "start": "343520",
    "end": "344320"
  },
  {
    "text": "itself so is dynamo serverless or",
    "start": "344320",
    "end": "347520"
  },
  {
    "text": "is it partly serverless it becomes fuzzy",
    "start": "347520",
    "end": "350560"
  },
  {
    "text": "same thing with athena versus redshift",
    "start": "350560",
    "end": "352479"
  },
  {
    "text": "spectrum both of these characterize",
    "start": "352479",
    "end": "354639"
  },
  {
    "text": "themselves as serverless",
    "start": "354639",
    "end": "356240"
  },
  {
    "text": "and yet at least for redshift you have",
    "start": "356240",
    "end": "358000"
  },
  {
    "text": "to worry about cluster size",
    "start": "358000",
    "end": "359840"
  },
  {
    "text": "in fact in practice there's always some",
    "start": "359840",
    "end": "361919"
  },
  {
    "text": "kind of resource management with all of",
    "start": "361919",
    "end": "363840"
  },
  {
    "text": "these systems",
    "start": "363840",
    "end": "365039"
  },
  {
    "text": "that you worry about at least if you",
    "start": "365039",
    "end": "366479"
  },
  {
    "text": "think about things like slas and so",
    "start": "366479",
    "end": "368319"
  },
  {
    "text": "forth",
    "start": "368319",
    "end": "370639"
  },
  {
    "text": "so the premise i'd like to put out is",
    "start": "371199",
    "end": "373919"
  },
  {
    "text": "that",
    "start": "373919",
    "end": "374400"
  },
  {
    "text": "really when people use the term",
    "start": "374400",
    "end": "376160"
  },
  {
    "text": "serverless what they're often thinking",
    "start": "376160",
    "end": "377919"
  },
  {
    "text": "of",
    "start": "377919",
    "end": "378639"
  },
  {
    "text": "is the idea of a simple uniform",
    "start": "378639",
    "end": "380639"
  },
  {
    "text": "environment",
    "start": "380639",
    "end": "382080"
  },
  {
    "text": "basically i think the power and the",
    "start": "382080",
    "end": "383600"
  },
  {
    "text": "attraction of serverless is that it",
    "start": "383600",
    "end": "385120"
  },
  {
    "text": "presumes a world that is essentially",
    "start": "385120",
    "end": "386960"
  },
  {
    "text": "flat",
    "start": "386960",
    "end": "387919"
  },
  {
    "text": "everything is distance one away so you",
    "start": "387919",
    "end": "389759"
  },
  {
    "text": "don't worry about whether you're on the",
    "start": "389759",
    "end": "390960"
  },
  {
    "text": "same machine the same rack or in the",
    "start": "390960",
    "end": "392639"
  },
  {
    "text": "same data center",
    "start": "392639",
    "end": "394160"
  },
  {
    "text": "everything is infinite there are no",
    "start": "394160",
    "end": "395680"
  },
  {
    "text": "limits there's no",
    "start": "395680",
    "end": "397199"
  },
  {
    "text": "scale up there is no scale out concerns",
    "start": "397199",
    "end": "399919"
  },
  {
    "text": "everything",
    "start": "399919",
    "end": "400800"
  },
  {
    "text": "basically is is infinite and they in",
    "start": "400800",
    "end": "403520"
  },
  {
    "text": "practice also assume that things are",
    "start": "403520",
    "end": "405199"
  },
  {
    "text": "immortal that nothing",
    "start": "405199",
    "end": "406240"
  },
  {
    "text": "fails if i get rid of the notion of",
    "start": "406240",
    "end": "408720"
  },
  {
    "text": "immortality then all of a sudden i deal",
    "start": "408720",
    "end": "410800"
  },
  {
    "text": "with a lot of complexity that i think",
    "start": "410800",
    "end": "412639"
  },
  {
    "text": "most people don't associate with",
    "start": "412639",
    "end": "414000"
  },
  {
    "text": "serverless",
    "start": "414000",
    "end": "414720"
  },
  {
    "text": "which is the question of what do you",
    "start": "414720",
    "end": "416479"
  },
  {
    "text": "retry how do you deal with partial runs",
    "start": "416479",
    "end": "418880"
  },
  {
    "text": "of things and so forth",
    "start": "418880",
    "end": "421039"
  },
  {
    "text": "so the challenge i would argue is",
    "start": "421039",
    "end": "424080"
  },
  {
    "text": "if serverless is really about simplified",
    "start": "424080",
    "end": "426720"
  },
  {
    "text": "uniform environments how do we make the",
    "start": "426720",
    "end": "428400"
  },
  {
    "text": "real world appear",
    "start": "428400",
    "end": "429599"
  },
  {
    "text": "as if it obeyed this ideal now the good",
    "start": "429599",
    "end": "432080"
  },
  {
    "text": "news is",
    "start": "432080",
    "end": "432720"
  },
  {
    "text": "oftentimes you don't care the world is",
    "start": "432720",
    "end": "434800"
  },
  {
    "text": "flat enough big enough",
    "start": "434800",
    "end": "436319"
  },
  {
    "text": "and robust enough for your needs and so",
    "start": "436319",
    "end": "438720"
  },
  {
    "text": "you can simply run",
    "start": "438720",
    "end": "440000"
  },
  {
    "text": "a serverless model and it just works and",
    "start": "440000",
    "end": "442720"
  },
  {
    "text": "the cost and the performance is good",
    "start": "442720",
    "end": "444400"
  },
  {
    "text": "enough",
    "start": "444400",
    "end": "445039"
  },
  {
    "text": "and so everything is fine the other bit",
    "start": "445039",
    "end": "447280"
  },
  {
    "text": "of good news is the world is getting",
    "start": "447280",
    "end": "448800"
  },
  {
    "text": "better",
    "start": "448800",
    "end": "449440"
  },
  {
    "text": "if you look at a modern cloud it is far",
    "start": "449440",
    "end": "451599"
  },
  {
    "text": "more flat",
    "start": "451599",
    "end": "452479"
  },
  {
    "text": "far more elastic and far more robust",
    "start": "452479",
    "end": "454560"
  },
  {
    "text": "than what we used to have",
    "start": "454560",
    "end": "456080"
  },
  {
    "text": "and so the class of applications for",
    "start": "456080",
    "end": "457919"
  },
  {
    "text": "which you don't care",
    "start": "457919",
    "end": "459919"
  },
  {
    "text": "about the fact that the world is not",
    "start": "459919",
    "end": "461759"
  },
  {
    "text": "truly flat",
    "start": "461759",
    "end": "462960"
  },
  {
    "text": "and infinite and immortal has gotten",
    "start": "462960",
    "end": "465120"
  },
  {
    "text": "much larger",
    "start": "465120",
    "end": "466560"
  },
  {
    "text": "and of course when you have back end",
    "start": "466560",
    "end": "468479"
  },
  {
    "text": "services you can hide a lot of",
    "start": "468479",
    "end": "470240"
  },
  {
    "text": "complexity behind those but what i want",
    "start": "470240",
    "end": "472000"
  },
  {
    "text": "to argue is you can't hide all of the",
    "start": "472000",
    "end": "473919"
  },
  {
    "text": "complexity",
    "start": "473919",
    "end": "476560"
  },
  {
    "start": "476000",
    "end": "770000"
  },
  {
    "text": "so i want to now switch to the question",
    "start": "477280",
    "end": "478800"
  },
  {
    "text": "of what's fundamental and what's",
    "start": "478800",
    "end": "480080"
  },
  {
    "text": "incidental",
    "start": "480080",
    "end": "481759"
  },
  {
    "text": "what i want to argue is the fundamental",
    "start": "481759",
    "end": "483599"
  },
  {
    "text": "question here is that there actually is",
    "start": "483599",
    "end": "485039"
  },
  {
    "text": "no free lunch the world is not flat",
    "start": "485039",
    "end": "487039"
  },
  {
    "text": "it's not infinite and it's not immortal",
    "start": "487039",
    "end": "490000"
  },
  {
    "text": "and so what we have to think about is",
    "start": "490000",
    "end": "492000"
  },
  {
    "text": "the question of what can we achieve and",
    "start": "492000",
    "end": "494080"
  },
  {
    "text": "for this i want to introduce the notion",
    "start": "494080",
    "end": "495599"
  },
  {
    "text": "of an entitlement",
    "start": "495599",
    "end": "496800"
  },
  {
    "text": "you can imagine that for a given problem",
    "start": "496800",
    "end": "498720"
  },
  {
    "text": "or in a given compute environment like a",
    "start": "498720",
    "end": "501199"
  },
  {
    "text": "cloud",
    "start": "501199",
    "end": "502080"
  },
  {
    "text": "there's a notion of what's the cheapest",
    "start": "502080",
    "end": "504240"
  },
  {
    "text": "possible solution i could implement in a",
    "start": "504240",
    "end": "506080"
  },
  {
    "text": "perfect in a perfect if i were perfect",
    "start": "506080",
    "end": "508800"
  },
  {
    "text": "at doing this",
    "start": "508800",
    "end": "510319"
  },
  {
    "text": "what is the cheapest i could do",
    "start": "510319",
    "end": "511759"
  },
  {
    "text": "similarly i could ask what is the most",
    "start": "511759",
    "end": "513839"
  },
  {
    "text": "performant solution i could come up with",
    "start": "513839",
    "end": "516560"
  },
  {
    "text": "and then finally you could ask well how",
    "start": "516560",
    "end": "518719"
  },
  {
    "text": "simple is it to do this",
    "start": "518719",
    "end": "520640"
  },
  {
    "text": "because the challenge is is in order to",
    "start": "520640",
    "end": "522560"
  },
  {
    "text": "truly optimize cost and performance i",
    "start": "522560",
    "end": "524560"
  },
  {
    "text": "need to take advantage of the non-flat",
    "start": "524560",
    "end": "526959"
  },
  {
    "text": "not infinite and non-immortal parts of",
    "start": "526959",
    "end": "529920"
  },
  {
    "text": "the environment i'm computing in",
    "start": "529920",
    "end": "532240"
  },
  {
    "text": "and so the challenge is it may seem is",
    "start": "532240",
    "end": "534880"
  },
  {
    "text": "that in order to optimize",
    "start": "534880",
    "end": "536720"
  },
  {
    "text": "cost and performance in a complicated",
    "start": "536720",
    "end": "539120"
  },
  {
    "text": "world",
    "start": "539120",
    "end": "539920"
  },
  {
    "text": "i have to give up simplicity or at any",
    "start": "539920",
    "end": "542320"
  },
  {
    "text": "rate i have to pick any two of the three",
    "start": "542320",
    "end": "544320"
  },
  {
    "text": "i could have cost and simplicity but",
    "start": "544320",
    "end": "546160"
  },
  {
    "text": "then i wouldn't have performance because",
    "start": "546160",
    "end": "548080"
  },
  {
    "text": "i'm simply not telling you enough in",
    "start": "548080",
    "end": "549680"
  },
  {
    "text": "order to achieve the performance",
    "start": "549680",
    "end": "551440"
  },
  {
    "text": "or i could have cost and or i could have",
    "start": "551440",
    "end": "553360"
  },
  {
    "text": "performance and simplicity by simply",
    "start": "553360",
    "end": "555279"
  },
  {
    "text": "buying lots of hardware",
    "start": "555279",
    "end": "557200"
  },
  {
    "text": "but i'm going to argue this is a false",
    "start": "557200",
    "end": "558800"
  },
  {
    "text": "trade-off the real question",
    "start": "558800",
    "end": "560240"
  },
  {
    "text": "is who has to deal with the complexity",
    "start": "560240",
    "end": "563600"
  },
  {
    "text": "if i as a customer want to have",
    "start": "563600",
    "end": "566399"
  },
  {
    "text": "optimized cost and performance and i can",
    "start": "566399",
    "end": "568560"
  },
  {
    "text": "figure out somebody else to deal with",
    "start": "568560",
    "end": "570160"
  },
  {
    "text": "the complexity then it would seem as if",
    "start": "570160",
    "end": "571839"
  },
  {
    "text": "i get all three",
    "start": "571839",
    "end": "573519"
  },
  {
    "text": "and i'm going to argue that if you",
    "start": "573519",
    "end": "574959"
  },
  {
    "text": "figure out the right way to",
    "start": "574959",
    "end": "577040"
  },
  {
    "text": "delegate complexity all the other",
    "start": "577040",
    "end": "579200"
  },
  {
    "text": "problems get solved from that",
    "start": "579200",
    "end": "582880"
  },
  {
    "text": "so delegating complexity we tend to use",
    "start": "583440",
    "end": "585920"
  },
  {
    "text": "two different approaches",
    "start": "585920",
    "end": "587279"
  },
  {
    "text": "one we've already talked about which is",
    "start": "587279",
    "end": "589279"
  },
  {
    "text": "back ends as a service this is basically",
    "start": "589279",
    "end": "591200"
  },
  {
    "text": "delegating to other human beings",
    "start": "591200",
    "end": "593360"
  },
  {
    "text": "a service with a simple api that hides",
    "start": "593360",
    "end": "595519"
  },
  {
    "text": "an enormous amount of complexity is",
    "start": "595519",
    "end": "597120"
  },
  {
    "text": "designed",
    "start": "597120",
    "end": "597680"
  },
  {
    "text": "implemented and operated by human beings",
    "start": "597680",
    "end": "600399"
  },
  {
    "text": "and this works awfully well",
    "start": "600399",
    "end": "602160"
  },
  {
    "text": "and then we use things like compilers or",
    "start": "602160",
    "end": "604480"
  },
  {
    "text": "query and workflow planners in order to",
    "start": "604480",
    "end": "606399"
  },
  {
    "text": "enable you to write your business logic",
    "start": "606399",
    "end": "608320"
  },
  {
    "text": "your functions in something like java or",
    "start": "608320",
    "end": "610800"
  },
  {
    "text": "step functions or sql",
    "start": "610800",
    "end": "612640"
  },
  {
    "text": "and that gets com translated down to",
    "start": "612640",
    "end": "615440"
  },
  {
    "text": "enormously complicated low-level",
    "start": "615440",
    "end": "617120"
  },
  {
    "text": "programs",
    "start": "617120",
    "end": "618480"
  },
  {
    "text": "so would seem we're done with that right",
    "start": "618480",
    "end": "620800"
  },
  {
    "text": "but not really",
    "start": "620800",
    "end": "622480"
  },
  {
    "text": "because the challenge is is that simple",
    "start": "622480",
    "end": "624560"
  },
  {
    "text": "interfaces have their limits",
    "start": "624560",
    "end": "626560"
  },
  {
    "text": "if i'm not willing to tell you very much",
    "start": "626560",
    "end": "628800"
  },
  {
    "text": "consider garbage collection for example",
    "start": "628800",
    "end": "630640"
  },
  {
    "text": "it's very easy to write a functionally",
    "start": "630640",
    "end": "632079"
  },
  {
    "text": "correct program with a garbage collector",
    "start": "632079",
    "end": "634240"
  },
  {
    "text": "but if i don't tell you anything more",
    "start": "634240",
    "end": "636079"
  },
  {
    "text": "than simply the functional operation of",
    "start": "636079",
    "end": "637839"
  },
  {
    "text": "the program",
    "start": "637839",
    "end": "638800"
  },
  {
    "text": "and i want cost and performance it's",
    "start": "638800",
    "end": "641279"
  },
  {
    "text": "going to become challenging",
    "start": "641279",
    "end": "642880"
  },
  {
    "text": "if i want cost i may give it only enough",
    "start": "642880",
    "end": "645680"
  },
  {
    "text": "memory",
    "start": "645680",
    "end": "646240"
  },
  {
    "text": "in order to run but now i'm constantly",
    "start": "646240",
    "end": "648240"
  },
  {
    "text": "risking out of memory errors similarly",
    "start": "648240",
    "end": "650079"
  },
  {
    "text": "if i want",
    "start": "650079",
    "end": "650640"
  },
  {
    "text": "ultimate performance i may need to",
    "start": "650640",
    "end": "652560"
  },
  {
    "text": "rewrite parts of the program in order to",
    "start": "652560",
    "end": "654320"
  },
  {
    "text": "do",
    "start": "654320",
    "end": "654640"
  },
  {
    "text": "manual memory management because garbage",
    "start": "654640",
    "end": "656959"
  },
  {
    "text": "collectors have a cost",
    "start": "656959",
    "end": "658720"
  },
  {
    "text": "there's a similar kind of a problem with",
    "start": "658720",
    "end": "660320"
  },
  {
    "text": "web services it's very easy to write a",
    "start": "660320",
    "end": "662240"
  },
  {
    "text": "web service it's very hard",
    "start": "662240",
    "end": "664160"
  },
  {
    "text": "to specify and deal with all the",
    "start": "664160",
    "end": "666560"
  },
  {
    "text": "exception cases that can",
    "start": "666560",
    "end": "668000"
  },
  {
    "text": "occur in a distributed system dynamodb",
    "start": "668000",
    "end": "671040"
  },
  {
    "text": "is simple",
    "start": "671040",
    "end": "671519"
  },
  {
    "text": "a similar thing you can write a",
    "start": "671519",
    "end": "672959"
  },
  {
    "text": "functional",
    "start": "672959",
    "end": "674640"
  },
  {
    "text": "program that uses the dynamo functional",
    "start": "674640",
    "end": "676560"
  },
  {
    "text": "api very quickly",
    "start": "676560",
    "end": "678240"
  },
  {
    "text": "but if you manage the iops yourself that",
    "start": "678240",
    "end": "680640"
  },
  {
    "text": "becomes quite complex quite quickly",
    "start": "680640",
    "end": "683120"
  },
  {
    "text": "luckily the on-demand feature can handle",
    "start": "683120",
    "end": "685200"
  },
  {
    "text": "this but it isn't free",
    "start": "685200",
    "end": "687040"
  },
  {
    "text": "they'll observe that it's often cheaper",
    "start": "687040",
    "end": "688720"
  },
  {
    "text": "to use that than to have a human attempt",
    "start": "688720",
    "end": "690480"
  },
  {
    "text": "to do this",
    "start": "690480",
    "end": "692480"
  },
  {
    "text": "but the even bigger challenge is that",
    "start": "692480",
    "end": "694399"
  },
  {
    "text": "all of these services on the back end",
    "start": "694399",
    "end": "696240"
  },
  {
    "text": "have to play well with each other",
    "start": "696240",
    "end": "697760"
  },
  {
    "text": "you have impedance matching problems for",
    "start": "697760",
    "end": "699680"
  },
  {
    "text": "example consider when you asynchronously",
    "start": "699680",
    "end": "702160"
  },
  {
    "text": "submit lambdas",
    "start": "702160",
    "end": "703839"
  },
  {
    "text": "these get queued up in sql in an sqs",
    "start": "703839",
    "end": "706560"
  },
  {
    "text": "queue and then submitted to the lambda",
    "start": "706560",
    "end": "708399"
  },
  {
    "text": "invoker",
    "start": "708399",
    "end": "709680"
  },
  {
    "text": "if sqs can't auto scale at the same rate",
    "start": "709680",
    "end": "712880"
  },
  {
    "text": "as the lambda invoker",
    "start": "712880",
    "end": "714160"
  },
  {
    "text": "now i have an impedance mismatch indeed",
    "start": "714160",
    "end": "716880"
  },
  {
    "text": "anything that is not as elastic as all",
    "start": "716880",
    "end": "719200"
  },
  {
    "text": "the other parts of the system",
    "start": "719200",
    "end": "720720"
  },
  {
    "text": "risks becoming a bottleneck and if you",
    "start": "720720",
    "end": "723680"
  },
  {
    "text": "think of retries and all of the things",
    "start": "723680",
    "end": "725680"
  },
  {
    "text": "required for distributed systems like",
    "start": "725680",
    "end": "727600"
  },
  {
    "text": "dealing with poison pill requests",
    "start": "727600",
    "end": "729760"
  },
  {
    "text": "delegated access controls and so forth",
    "start": "729760",
    "end": "732079"
  },
  {
    "text": "what you end up reasonably",
    "start": "732079",
    "end": "733440"
  },
  {
    "text": "realizing is that instead of needing",
    "start": "733440",
    "end": "735279"
  },
  {
    "text": "just back-end services",
    "start": "735279",
    "end": "736880"
  },
  {
    "text": "what you need is back-end services plus",
    "start": "736880",
    "end": "738880"
  },
  {
    "text": "some way of coordinating things between",
    "start": "738880",
    "end": "741120"
  },
  {
    "text": "them you need",
    "start": "741120",
    "end": "741760"
  },
  {
    "text": "tools and frameworks that allow you to",
    "start": "741760",
    "end": "744560"
  },
  {
    "text": "manage the system as a whole",
    "start": "744560",
    "end": "747200"
  },
  {
    "text": "now the problem is is the tools that we",
    "start": "747200",
    "end": "749040"
  },
  {
    "text": "use for that ladder kind of a thing work",
    "start": "749040",
    "end": "750959"
  },
  {
    "text": "best in well-defined environments",
    "start": "750959",
    "end": "754000"
  },
  {
    "text": "and unfortunately the cloud is fairly",
    "start": "754000",
    "end": "756160"
  },
  {
    "text": "messy",
    "start": "756160",
    "end": "757440"
  },
  {
    "text": "it has a much larger functional",
    "start": "757440",
    "end": "759360"
  },
  {
    "text": "interface than the kind of thing that a",
    "start": "759360",
    "end": "761040"
  },
  {
    "text": "compiler usually targets",
    "start": "761040",
    "end": "762800"
  },
  {
    "text": "and the non-functional aspects of a",
    "start": "762800",
    "end": "764399"
  },
  {
    "text": "cloud are not that well defined",
    "start": "764399",
    "end": "766320"
  },
  {
    "text": "things like for example how it auto",
    "start": "766320",
    "end": "768079"
  },
  {
    "text": "scales under various circumstances",
    "start": "768079",
    "end": "770800"
  },
  {
    "start": "770000",
    "end": "1008000"
  },
  {
    "text": "so clouds have messy complexity what's",
    "start": "770800",
    "end": "773839"
  },
  {
    "text": "worse is",
    "start": "773839",
    "end": "774959"
  },
  {
    "text": "in order to get cost optimization you",
    "start": "774959",
    "end": "777200"
  },
  {
    "text": "need multi-tenancy and this",
    "start": "777200",
    "end": "779519"
  },
  {
    "text": "introduces an aspect that is even worse",
    "start": "779519",
    "end": "781760"
  },
  {
    "text": "it introduces the unpredictability of",
    "start": "781760",
    "end": "783600"
  },
  {
    "text": "noisy neighbors",
    "start": "783600",
    "end": "785519"
  },
  {
    "text": "and what it implies is that in order to",
    "start": "785519",
    "end": "787680"
  },
  {
    "text": "make things work well what you basically",
    "start": "787680",
    "end": "789839"
  },
  {
    "text": "need is a system where",
    "start": "789839",
    "end": "791839"
  },
  {
    "text": "all of the tenants basically tell the",
    "start": "791839",
    "end": "793839"
  },
  {
    "text": "system enough about their applications",
    "start": "793839",
    "end": "796000"
  },
  {
    "text": "and their workloads",
    "start": "796000",
    "end": "797120"
  },
  {
    "text": "so that the system can figure out how to",
    "start": "797120",
    "end": "798959"
  },
  {
    "text": "deal with them how to",
    "start": "798959",
    "end": "800160"
  },
  {
    "text": "manage them so that they don't get into",
    "start": "800160",
    "end": "802320"
  },
  {
    "text": "each other's ways",
    "start": "802320",
    "end": "803600"
  },
  {
    "text": "and this requires that information",
    "start": "803600",
    "end": "805120"
  },
  {
    "text": "propagate to all the relevant parts of a",
    "start": "805120",
    "end": "806959"
  },
  {
    "text": "system",
    "start": "806959",
    "end": "807839"
  },
  {
    "text": "so the challenge here is how much",
    "start": "807839",
    "end": "809600"
  },
  {
    "text": "information should",
    "start": "809600",
    "end": "811279"
  },
  {
    "text": "a user have to specify in order to get",
    "start": "811279",
    "end": "814639"
  },
  {
    "text": "the",
    "start": "814639",
    "end": "815200"
  },
  {
    "text": "their job done the way they want it and",
    "start": "815200",
    "end": "816880"
  },
  {
    "text": "who needs to know about it",
    "start": "816880",
    "end": "819040"
  },
  {
    "text": "now there's an intriguing possibility",
    "start": "819040",
    "end": "820880"
  },
  {
    "text": "that i'm only going to allude to because",
    "start": "820880",
    "end": "822480"
  },
  {
    "text": "i don't have enough time which is that",
    "start": "822480",
    "end": "824240"
  },
  {
    "text": "ml based approaches",
    "start": "824240",
    "end": "825920"
  },
  {
    "text": "offer one possible way of dealing with",
    "start": "825920",
    "end": "827680"
  },
  {
    "text": "this messy complexity by allowing the",
    "start": "827680",
    "end": "829519"
  },
  {
    "text": "system to observe",
    "start": "829519",
    "end": "830639"
  },
  {
    "text": "what is happening and learn from it",
    "start": "830639",
    "end": "833680"
  },
  {
    "text": "without requiring that somebody",
    "start": "833680",
    "end": "835040"
  },
  {
    "text": "explicitly tell it all about it",
    "start": "835040",
    "end": "837279"
  },
  {
    "text": "this is intriguing but this represents",
    "start": "837279",
    "end": "839120"
  },
  {
    "text": "something that is a future hope rather",
    "start": "839120",
    "end": "841600"
  },
  {
    "text": "than something",
    "start": "841600",
    "end": "842720"
  },
  {
    "text": "that we know how to do uh completely",
    "start": "842720",
    "end": "845440"
  },
  {
    "text": "successfully right now though it's",
    "start": "845440",
    "end": "846959"
  },
  {
    "text": "getting better",
    "start": "846959",
    "end": "848079"
  },
  {
    "text": "so let's look at all the incidental",
    "start": "848079",
    "end": "849760"
  },
  {
    "text": "challenges that were listed before",
    "start": "849760",
    "end": "852160"
  },
  {
    "text": "inadequate storage options what we're",
    "start": "852160",
    "end": "854079"
  },
  {
    "text": "already seeing more back end services",
    "start": "854079",
    "end": "856000"
  },
  {
    "text": "that are that are starting to deal with",
    "start": "856000",
    "end": "858000"
  },
  {
    "text": "this inappropriate and unpredictable",
    "start": "858000",
    "end": "860240"
  },
  {
    "text": "communications and coordination",
    "start": "860240",
    "end": "861760"
  },
  {
    "text": "functionality",
    "start": "861760",
    "end": "862639"
  },
  {
    "text": "well if you look at the higher level",
    "start": "862639",
    "end": "864160"
  },
  {
    "text": "frameworks like mapreduce and so forth",
    "start": "864160",
    "end": "866320"
  },
  {
    "text": "i would argue that these combined with",
    "start": "866320",
    "end": "868639"
  },
  {
    "text": "the idea that you specified the business",
    "start": "868639",
    "end": "870560"
  },
  {
    "text": "logic as embedded functions in those",
    "start": "870560",
    "end": "872959"
  },
  {
    "text": "are addressing this kind of an issue as",
    "start": "872959",
    "end": "875519"
  },
  {
    "text": "far as limitations on compute capability",
    "start": "875519",
    "end": "877839"
  },
  {
    "text": "we're seeing that micro vms and the",
    "start": "877839",
    "end": "879839"
  },
  {
    "text": "ability to snapshot those",
    "start": "879839",
    "end": "882320"
  },
  {
    "text": "access to specialized hardware all these",
    "start": "882320",
    "end": "884320"
  },
  {
    "text": "things are problems that are being",
    "start": "884320",
    "end": "885680"
  },
  {
    "text": "addressed",
    "start": "885680",
    "end": "886480"
  },
  {
    "text": "and are getting better and i don't see",
    "start": "886480",
    "end": "887920"
  },
  {
    "text": "any inherent reason why we can't address",
    "start": "887920",
    "end": "890079"
  },
  {
    "text": "all of them",
    "start": "890079",
    "end": "891040"
  },
  {
    "text": "as far as security concerns i actually",
    "start": "891040",
    "end": "892959"
  },
  {
    "text": "believe that things have gotten better",
    "start": "892959",
    "end": "894480"
  },
  {
    "text": "than before because",
    "start": "894480",
    "end": "896480"
  },
  {
    "text": "we're moving from a world where",
    "start": "896480",
    "end": "898000"
  },
  {
    "text": "developers write security-based code to",
    "start": "898000",
    "end": "900079"
  },
  {
    "text": "one where",
    "start": "900079",
    "end": "900639"
  },
  {
    "text": "operators and security engineers provide",
    "start": "900639",
    "end": "902560"
  },
  {
    "text": "declarative configurations",
    "start": "902560",
    "end": "905120"
  },
  {
    "text": "now there's one additional challenge i",
    "start": "905120",
    "end": "906800"
  },
  {
    "text": "want to mention which is",
    "start": "906800",
    "end": "908240"
  },
  {
    "text": "that in an elastic world you can you",
    "start": "908240",
    "end": "911440"
  },
  {
    "text": "have to deal with potentially unbounded",
    "start": "911440",
    "end": "913519"
  },
  {
    "text": "unintended behavior high elasticity",
    "start": "913519",
    "end": "915600"
  },
  {
    "text": "means you can consume a lot of resources",
    "start": "915600",
    "end": "917600"
  },
  {
    "text": "very quickly",
    "start": "917600",
    "end": "918560"
  },
  {
    "text": "and if you can invoke them",
    "start": "918560",
    "end": "919600"
  },
  {
    "text": "asynchronously you may not notice the",
    "start": "919600",
    "end": "921360"
  },
  {
    "text": "problem until much later",
    "start": "921360",
    "end": "922959"
  },
  {
    "text": "this requires appropriate budgets and",
    "start": "922959",
    "end": "925040"
  },
  {
    "text": "guard rails which is another example of",
    "start": "925040",
    "end": "927040"
  },
  {
    "text": "additional information that has to be",
    "start": "927040",
    "end": "928720"
  },
  {
    "text": "provided by",
    "start": "928720",
    "end": "929759"
  },
  {
    "text": "the user so when we put it all together",
    "start": "929759",
    "end": "932639"
  },
  {
    "text": "i would argue that really instead of",
    "start": "932639",
    "end": "934399"
  },
  {
    "text": "fast plus bas",
    "start": "934399",
    "end": "935519"
  },
  {
    "text": "what we need is a more heterogeneous and",
    "start": "935519",
    "end": "937759"
  },
  {
    "text": "rich system where there's function as a",
    "start": "937759",
    "end": "939600"
  },
  {
    "text": "service",
    "start": "939600",
    "end": "940320"
  },
  {
    "text": "plus things like managed containers that",
    "start": "940320",
    "end": "942079"
  },
  {
    "text": "you might be able to call to",
    "start": "942079",
    "end": "943600"
  },
  {
    "text": "plus managed pods of microservices plus",
    "start": "943600",
    "end": "946560"
  },
  {
    "text": "a variety of bass building blocks",
    "start": "946560",
    "end": "948560"
  },
  {
    "text": "plus higher level constructs that allow",
    "start": "948560",
    "end": "950240"
  },
  {
    "text": "you to put all this stuff together end",
    "start": "950240",
    "end": "951920"
  },
  {
    "text": "to end",
    "start": "951920",
    "end": "952800"
  },
  {
    "text": "and of course the big challenge going",
    "start": "952800",
    "end": "954560"
  },
  {
    "text": "forward is can we have the system figure",
    "start": "954560",
    "end": "956720"
  },
  {
    "text": "this out without our having to tell them",
    "start": "956720",
    "end": "958639"
  },
  {
    "text": "everything so in conclusion i think the",
    "start": "958639",
    "end": "961120"
  },
  {
    "text": "berkeley paper was right serverless has",
    "start": "961120",
    "end": "963040"
  },
  {
    "text": "been a success and its use is",
    "start": "963040",
    "end": "964560"
  },
  {
    "text": "skyrocketing",
    "start": "964560",
    "end": "965680"
  },
  {
    "text": "life is indeed simpler but i would argue",
    "start": "965680",
    "end": "968160"
  },
  {
    "text": "it's gotten better but it's not nearly",
    "start": "968160",
    "end": "969920"
  },
  {
    "text": "as simple as it could be",
    "start": "969920",
    "end": "971519"
  },
  {
    "text": "and the reason why is because we have to",
    "start": "971519",
    "end": "973360"
  },
  {
    "text": "figure out how to specify a variety of",
    "start": "973360",
    "end": "975759"
  },
  {
    "text": "information beyond just a function",
    "start": "975759",
    "end": "977920"
  },
  {
    "text": "that calls a bunch of backend services",
    "start": "977920",
    "end": "980240"
  },
  {
    "text": "indeed the complexity is a question",
    "start": "980240",
    "end": "982079"
  },
  {
    "text": "of all the complexity across things like",
    "start": "982079",
    "end": "984079"
  },
  {
    "text": "access controls",
    "start": "984079",
    "end": "985519"
  },
  {
    "text": "and slas and so forth and so really the",
    "start": "985519",
    "end": "988079"
  },
  {
    "text": "challenge is how do you express",
    "start": "988079",
    "end": "989920"
  },
  {
    "text": "all of this information in the most",
    "start": "989920",
    "end": "991440"
  },
  {
    "text": "concise simple form",
    "start": "991440",
    "end": "993199"
  },
  {
    "text": "so i would argue that instead of talking",
    "start": "993199",
    "end": "994880"
  },
  {
    "text": "about serverless computing what we",
    "start": "994880",
    "end": "996399"
  },
  {
    "text": "really need to talk about is something",
    "start": "996399",
    "end": "997839"
  },
  {
    "text": "like",
    "start": "997839",
    "end": "998240"
  },
  {
    "text": "expressive computing because it's about",
    "start": "998240",
    "end": "1000000"
  },
  {
    "text": "more than just servers",
    "start": "1000000",
    "end": "1002320"
  },
  {
    "text": "that concludes my talk and i thank you",
    "start": "1002320",
    "end": "1004320"
  },
  {
    "text": "for listening",
    "start": "1004320",
    "end": "1010079"
  }
]