[
  {
    "text": "thank you Kelvin So today we're going to",
    "start": "2840",
    "end": "5160"
  },
  {
    "text": "talk about a topic that's not very",
    "start": "5160",
    "end": "7480"
  },
  {
    "text": "discussed usually which is securing",
    "start": "7480",
    "end": "9840"
  },
  {
    "text": "cubay and running multi-tenancy within a",
    "start": "9840",
    "end": "12880"
  },
  {
    "text": "cubay clusters so if you're already",
    "start": "12880",
    "end": "15759"
  },
  {
    "text": "using cubra and this is an actual demo",
    "start": "15759",
    "end": "19240"
  },
  {
    "text": "here for running executing a CU cluster",
    "start": "19240",
    "end": "21960"
  },
  {
    "text": "on kubernetes and this is how long it",
    "start": "21960",
    "end": "24080"
  },
  {
    "text": "takes it takes roughly 12 seconds I know",
    "start": "24080",
    "end": "26359"
  },
  {
    "text": "it's not very readable but you can see",
    "start": "26359",
    "end": "28039"
  },
  {
    "text": "on the right hand side you will have a",
    "start": "28039",
    "end": "30199"
  },
  {
    "text": "bunch of containers that are created",
    "start": "30199",
    "end": "32160"
  },
  {
    "text": "started and it all happens within 10 12",
    "start": "32160",
    "end": "34920"
  },
  {
    "text": "seconds you would have a ray cluster",
    "start": "34920",
    "end": "36480"
  },
  {
    "text": "that's ready to support and handle",
    "start": "36480",
    "end": "38399"
  },
  {
    "text": "workloads and if you're wondering how",
    "start": "38399",
    "end": "40480"
  },
  {
    "text": "this is happening under the hood this is",
    "start": "40480",
    "end": "42800"
  },
  {
    "text": "using the ray operator which a cube Ray",
    "start": "42800",
    "end": "45840"
  },
  {
    "text": "operator which is just a piece of",
    "start": "45840",
    "end": "47480"
  },
  {
    "text": "software that's used to manage other",
    "start": "47480",
    "end": "49800"
  },
  {
    "text": "pieces of software so Cube Ray manages",
    "start": "49800",
    "end": "52600"
  },
  {
    "text": "the life cycle of array cluster it",
    "start": "52600",
    "end": "55039"
  },
  {
    "text": "creates the head node the worker nodes",
    "start": "55039",
    "end": "57280"
  },
  {
    "text": "it creates a service between them it",
    "start": "57280",
    "end": "59160"
  },
  {
    "text": "injects a proper service name into the",
    "start": "59160",
    "end": "60879"
  },
  {
    "text": "worker nodes to find the head node and",
    "start": "60879",
    "end": "62600"
  },
  {
    "text": "so on so it does all this goodness for",
    "start": "62600",
    "end": "64559"
  },
  {
    "text": "you and it's very simple uh in order to",
    "start": "64559",
    "end": "67960"
  },
  {
    "text": "create a new cluster now the question is",
    "start": "67960",
    "end": "70240"
  },
  {
    "text": "if you're creating now multiple Ray",
    "start": "70240",
    "end": "72640"
  },
  {
    "text": "clusters and if those Ray clusters are",
    "start": "72640",
    "end": "75320"
  },
  {
    "text": "serving multiple tenants then how do you",
    "start": "75320",
    "end": "78119"
  },
  {
    "text": "start reasoning about securing those",
    "start": "78119",
    "end": "80600"
  },
  {
    "text": "aray clusters now when talking about",
    "start": "80600",
    "end": "83680"
  },
  {
    "text": "multi tency there's always the",
    "start": "83680",
    "end": "85360"
  },
  {
    "text": "discussion that's going to come about",
    "start": "85360",
    "end": "87079"
  },
  {
    "text": "whether this is a friendly or hostile",
    "start": "87079",
    "end": "89920"
  },
  {
    "text": "multi",
    "start": "89920",
    "end": "90840"
  },
  {
    "text": "tency now friendly means it could be in",
    "start": "90840",
    "end": "93680"
  },
  {
    "text": "the same company it's different",
    "start": "93680",
    "end": "95200"
  },
  {
    "text": "departments different organizations so",
    "start": "95200",
    "end": "97880"
  },
  {
    "text": "you're not worried that they will attack",
    "start": "97880",
    "end": "99360"
  },
  {
    "text": "you when you're talking about hostile",
    "start": "99360",
    "end": "101240"
  },
  {
    "text": "multitenancy this is for example if",
    "start": "101240",
    "end": "102880"
  },
  {
    "text": "you're a cloud provider and you don't",
    "start": "102880",
    "end": "104840"
  },
  {
    "text": "know who your tenants are anyone can be",
    "start": "104840",
    "end": "106520"
  },
  {
    "text": "a tenant and you might have hostile",
    "start": "106520",
    "end": "108719"
  },
  {
    "text": "multi-tenancy there the second question",
    "start": "108719",
    "end": "111159"
  },
  {
    "text": "to ask is whether I'm serving my code or",
    "start": "111159",
    "end": "114439"
  },
  {
    "text": "whether I'm serving a customer code so",
    "start": "114439",
    "end": "117240"
  },
  {
    "text": "if for example you're serving inference",
    "start": "117240",
    "end": "119520"
  },
  {
    "text": "that's your code that's your model you",
    "start": "119520",
    "end": "121600"
  },
  {
    "text": "just take an input and return an output",
    "start": "121600",
    "end": "123719"
  },
  {
    "text": "you're not really executing customer",
    "start": "123719",
    "end": "125799"
  },
  {
    "text": "code but if you're executing customer",
    "start": "125799",
    "end": "128160"
  },
  {
    "text": "code and it's hostile multi-tenancy now",
    "start": "128160",
    "end": "131520"
  },
  {
    "text": "you need to have a real hard isolation",
    "start": "131520",
    "end": "134319"
  },
  {
    "text": "between the different tenants so this uh",
    "start": "134319",
    "end": "136879"
  },
  {
    "text": "circles here is just to show the level",
    "start": "136879",
    "end": "138720"
  },
  {
    "text": "of complexity obviously if it's friendly",
    "start": "138720",
    "end": "141040"
  },
  {
    "text": "and you're serving your code it's much",
    "start": "141040",
    "end": "143400"
  },
  {
    "text": "more simple than if it's a hostile and",
    "start": "143400",
    "end": "145560"
  },
  {
    "text": "you're serving customer code there so",
    "start": "145560",
    "end": "147720"
  },
  {
    "text": "you can think about it as at the lowest",
    "start": "147720",
    "end": "150400"
  },
  {
    "text": "level if you have friendly multi",
    "start": "150400",
    "end": "152280"
  },
  {
    "text": "tennessy you can get away with just",
    "start": "152280",
    "end": "153720"
  },
  {
    "text": "defining certain boundaries so the",
    "start": "153720",
    "end": "156120"
  },
  {
    "text": "boundaries are clear but the isolation",
    "start": "156120",
    "end": "157959"
  },
  {
    "text": "is not that strong you can even have",
    "start": "157959",
    "end": "160560"
  },
  {
    "text": "stronger boundaries but it's still",
    "start": "160560",
    "end": "162200"
  },
  {
    "text": "considered friendly multi-tenancy there",
    "start": "162200",
    "end": "165080"
  },
  {
    "text": "now once you get to hostile multi",
    "start": "165080",
    "end": "166680"
  },
  {
    "text": "tendency this is where you need to set",
    "start": "166680",
    "end": "168239"
  },
  {
    "text": "up real barriers in place and make sure",
    "start": "168239",
    "end": "171120"
  },
  {
    "text": "that you have no breach to your walls",
    "start": "171120",
    "end": "173319"
  },
  {
    "text": "today we're going to discuss more of the",
    "start": "173319",
    "end": "175840"
  },
  {
    "text": "all three different levels because it's",
    "start": "175840",
    "end": "177640"
  },
  {
    "text": "incremental but we're working gradually",
    "start": "177640",
    "end": "180280"
  },
  {
    "text": "towards the Hostile multi tendency there",
    "start": "180280",
    "end": "182959"
  },
  {
    "text": "so when thinking about security where's",
    "start": "182959",
    "end": "185640"
  },
  {
    "text": "a good place to start and I think the",
    "start": "185640",
    "end": "187920"
  },
  {
    "text": "good place to start is go as low as",
    "start": "187920",
    "end": "189840"
  },
  {
    "text": "possible in the stack so if you start at",
    "start": "189840",
    "end": "191760"
  },
  {
    "text": "the process level process is just an",
    "start": "191760",
    "end": "194040"
  },
  {
    "text": "executing program it takes input as data",
    "start": "194040",
    "end": "196840"
  },
  {
    "text": "produces output which is",
    "start": "196840",
    "end": "198959"
  },
  {
    "text": "information obviously you can pipe",
    "start": "198959",
    "end": "200920"
  },
  {
    "text": "multiple processes together one",
    "start": "200920",
    "end": "203040"
  },
  {
    "text": "processes output which is information",
    "start": "203040",
    "end": "205200"
  },
  {
    "text": "can become data for another process but",
    "start": "205200",
    "end": "208040"
  },
  {
    "text": "if you thinking about it from an",
    "start": "208040",
    "end": "209239"
  },
  {
    "text": "operating System point of view a process",
    "start": "209239",
    "end": "211760"
  },
  {
    "text": "is using Computing resources it's going",
    "start": "211760",
    "end": "213920"
  },
  {
    "text": "to use CPU memory uh disk networking and",
    "start": "213920",
    "end": "217280"
  },
  {
    "text": "so on and it's going to have privileges",
    "start": "217280",
    "end": "220239"
  },
  {
    "text": "so it's going to make system calls it's",
    "start": "220239",
    "end": "222000"
  },
  {
    "text": "going to access the file system the",
    "start": "222000",
    "end": "223640"
  },
  {
    "text": "network and so on and your job is really",
    "start": "223640",
    "end": "226360"
  },
  {
    "text": "to know how to set the proper boundaries",
    "start": "226360",
    "end": "228799"
  },
  {
    "text": "there now you put another process on the",
    "start": "228799",
    "end": "231239"
  },
  {
    "text": "same machine and if this other process",
    "start": "231239",
    "end": "233079"
  },
  {
    "text": "belongs to a hostile tenant or another",
    "start": "233079",
    "end": "236120"
  },
  {
    "text": "tenant then you need to make sure that",
    "start": "236120",
    "end": "238040"
  },
  {
    "text": "you have the proper isolation in place",
    "start": "238040",
    "end": "240720"
  },
  {
    "text": "and you would have to work at multiple",
    "start": "240720",
    "end": "242400"
  },
  {
    "text": "boundaries there and they could be",
    "start": "242400",
    "end": "244280"
  },
  {
    "text": "incremental and each one would be just",
    "start": "244280",
    "end": "246400"
  },
  {
    "text": "another layer in the defense that you're",
    "start": "246400",
    "end": "248120"
  },
  {
    "text": "putting there so a good place to do the",
    "start": "248120",
    "end": "252000"
  },
  {
    "text": "process isolation is to use containers",
    "start": "252000",
    "end": "254200"
  },
  {
    "text": "and this comes for us for free with Cube",
    "start": "254200",
    "end": "256359"
  },
  {
    "text": "Ray and kubernetes and uh uh the way",
    "start": "256359",
    "end": "259680"
  },
  {
    "text": "we're deploying today Ray on kubernetes",
    "start": "259680",
    "end": "262400"
  },
  {
    "text": "you would have the process you could",
    "start": "262400",
    "end": "264360"
  },
  {
    "text": "limit the process privileges with setcom",
    "start": "264360",
    "end": "267400"
  },
  {
    "text": "SE Linux app armor there's a bunch of",
    "start": "267400",
    "end": "269720"
  },
  {
    "text": "tools that will help you there you can",
    "start": "269720",
    "end": "271840"
  },
  {
    "text": "do the limiting of uh Computing",
    "start": "271840",
    "end": "273880"
  },
  {
    "text": "Resources with cgroups you can also",
    "start": "273880",
    "end": "276080"
  },
  {
    "text": "limit the visibility by using Linux",
    "start": "276080",
    "end": "278560"
  },
  {
    "text": "namespaces so all of that you don't need",
    "start": "278560",
    "end": "281120"
  },
  {
    "text": "to really worry about it because today",
    "start": "281120",
    "end": "282960"
  },
  {
    "text": "when you're using cubra cubr uses the",
    "start": "282960",
    "end": "286919"
  },
  {
    "text": "Pod template in kubernetes and that by",
    "start": "286919",
    "end": "289479"
  },
  {
    "text": "default allows you to leverage all those",
    "start": "289479",
    "end": "292160"
  },
  {
    "text": "constructs you can see here I'm just",
    "start": "292160",
    "end": "294039"
  },
  {
    "text": "showing a snippet of how you're",
    "start": "294039",
    "end": "295840"
  },
  {
    "text": "specifying c groups you don't know your",
    "start": "295840",
    "end": "297960"
  },
  {
    "text": "specifying c groups but you are",
    "start": "297960",
    "end": "300080"
  },
  {
    "text": "implicitly there so first level we're",
    "start": "300080",
    "end": "302880"
  },
  {
    "text": "using containers that we're off to a",
    "start": "302880",
    "end": "304840"
  },
  {
    "text": "good start but the thing is we're not",
    "start": "304840",
    "end": "307120"
  },
  {
    "text": "using individual containers if you think",
    "start": "307120",
    "end": "309600"
  },
  {
    "text": "about how you create a cluster with Cube",
    "start": "309600",
    "end": "311639"
  },
  {
    "text": "Ray as a tenant you're really creating a",
    "start": "311639",
    "end": "314800"
  },
  {
    "text": "cluster using either Cube CTL or Helm",
    "start": "314800",
    "end": "317960"
  },
  {
    "text": "and either way you're interacting with",
    "start": "317960",
    "end": "319639"
  },
  {
    "text": "the kubernetes control plane you're not",
    "start": "319639",
    "end": "321479"
  },
  {
    "text": "interacting with Cube Ray directly so",
    "start": "321479",
    "end": "324160"
  },
  {
    "text": "now you have multiple tenants",
    "start": "324160",
    "end": "325560"
  },
  {
    "text": "interacting with the same control plane",
    "start": "325560",
    "end": "327800"
  },
  {
    "text": "you have a shared operator which is",
    "start": "327800",
    "end": "330479"
  },
  {
    "text": "cubay that's talking to the same control",
    "start": "330479",
    "end": "332880"
  },
  {
    "text": "plane and creating clusters so if you",
    "start": "332880",
    "end": "335800"
  },
  {
    "text": "think about it from if you put the Hat",
    "start": "335800",
    "end": "337360"
  },
  {
    "text": "of a security expert now you have to",
    "start": "337360",
    "end": "339400"
  },
  {
    "text": "worry about the shared control plane the",
    "start": "339400",
    "end": "341759"
  },
  {
    "text": "shared Cube Ray and those pods that",
    "start": "341759",
    "end": "344400"
  },
  {
    "text": "could belong to different tenants that",
    "start": "344400",
    "end": "345680"
  },
  {
    "text": "are running on the same machines and",
    "start": "345680",
    "end": "348000"
  },
  {
    "text": "this is what we're going to tackle today",
    "start": "348000",
    "end": "350160"
  },
  {
    "text": "so we defined three different levels uh",
    "start": "350160",
    "end": "352919"
  },
  {
    "text": "we're going to go through each level",
    "start": "352919",
    "end": "354240"
  },
  {
    "text": "we're going to start with securing our",
    "start": "354240",
    "end": "355759"
  },
  {
    "text": "name spaces and a namespace is just a",
    "start": "355759",
    "end": "358440"
  },
  {
    "text": "construct a boundary in kubernetes that",
    "start": "358440",
    "end": "360360"
  },
  {
    "text": "comes out of the box it's a built-in",
    "start": "360360",
    "end": "362360"
  },
  {
    "text": "constructing kubernetes and what we're",
    "start": "362360",
    "end": "364759"
  },
  {
    "text": "trying to build uh protect against here",
    "start": "364759",
    "end": "367360"
  },
  {
    "text": "is basically we're trying to protect",
    "start": "367360",
    "end": "369199"
  },
  {
    "text": "spots or workloads from each other we're",
    "start": "369199",
    "end": "371919"
  },
  {
    "text": "trying to protect the worker node or the",
    "start": "371919",
    "end": "373720"
  },
  {
    "text": "operating system from the workloads",
    "start": "373720",
    "end": "375960"
  },
  {
    "text": "themselves we're trying to protect our",
    "start": "375960",
    "end": "378039"
  },
  {
    "text": "control plane from the workloads and to",
    "start": "378039",
    "end": "380400"
  },
  {
    "text": "limit the communication between",
    "start": "380400",
    "end": "382240"
  },
  {
    "text": "different workloads one aspect here is",
    "start": "382240",
    "end": "384520"
  },
  {
    "text": "that we're not protecting the workload",
    "start": "384520",
    "end": "386280"
  },
  {
    "text": "from us so as a cloud provider for",
    "start": "386280",
    "end": "388880"
  },
  {
    "text": "example we're not protecting the",
    "start": "388880",
    "end": "390440"
  },
  {
    "text": "workload from the cloud itself and this",
    "start": "390440",
    "end": "393120"
  },
  {
    "text": "would bring us into confidential",
    "start": "393120",
    "end": "394680"
  },
  {
    "text": "Computing but this is outside the scope",
    "start": "394680",
    "end": "396840"
  },
  {
    "text": "of The Stoke so we assume that you trust",
    "start": "396840",
    "end": "399199"
  },
  {
    "text": "the platform you're just securing the",
    "start": "399199",
    "end": "401039"
  },
  {
    "text": "multi- tency of the workloads in the",
    "start": "401039",
    "end": "403720"
  },
  {
    "text": "stock so the first level as I mentioned",
    "start": "403720",
    "end": "406319"
  },
  {
    "text": "we just go into the kubernetes namespace",
    "start": "406319",
    "end": "409639"
  },
  {
    "text": "and we do a policy based namespace",
    "start": "409639",
    "end": "411560"
  },
  {
    "text": "creation so by default you make sure",
    "start": "411560",
    "end": "413639"
  },
  {
    "text": "that your name spaces are secure you can",
    "start": "413639",
    "end": "416120"
  },
  {
    "text": "inject a bunch of policies built-in",
    "start": "416120",
    "end": "418360"
  },
  {
    "text": "policies in kubernetes today in those",
    "start": "418360",
    "end": "420479"
  },
  {
    "text": "name spaces you secure that Nam space",
    "start": "420479",
    "end": "424400"
  },
  {
    "text": "and then anything else that's running",
    "start": "424400",
    "end": "426039"
  },
  {
    "text": "within that Nam space is going to be",
    "start": "426039",
    "end": "427800"
  },
  {
    "text": "subject or governed by those policies so",
    "start": "427800",
    "end": "429879"
  },
  {
    "text": "if you put cub in that namespace and",
    "start": "429879",
    "end": "432720"
  },
  {
    "text": "it's creating other pods it is governed",
    "start": "432720",
    "end": "435360"
  },
  {
    "text": "by those policies now a good way to do",
    "start": "435360",
    "end": "437840"
  },
  {
    "text": "that is to use a policy engine now kerno",
    "start": "437840",
    "end": "440120"
  },
  {
    "text": "is a good open source project for that",
    "start": "440120",
    "end": "442160"
  },
  {
    "text": "you can Define the policy every time you",
    "start": "442160",
    "end": "444280"
  },
  {
    "text": "create a namespace it automatically",
    "start": "444280",
    "end": "446280"
  },
  {
    "text": "injects those constructs into the name",
    "start": "446280",
    "end": "448199"
  },
  {
    "text": "space GateKeeper is another one all you",
    "start": "448199",
    "end": "451080"
  },
  {
    "text": "need to do is have a good story of",
    "start": "451080",
    "end": "453160"
  },
  {
    "text": "tenant onboarding what does it mean to",
    "start": "453160",
    "end": "455800"
  },
  {
    "text": "onboard a new tenant and where do you",
    "start": "455800",
    "end": "458039"
  },
  {
    "text": "place a new tenant you can start by",
    "start": "458039",
    "end": "460240"
  },
  {
    "text": "choosing that a nam space is a good",
    "start": "460240",
    "end": "462240"
  },
  {
    "text": "boundary for between tenants and you can",
    "start": "462240",
    "end": "464400"
  },
  {
    "text": "start by securing the name space so this",
    "start": "464400",
    "end": "466720"
  },
  {
    "text": "is level one isolation make sure you",
    "start": "466720",
    "end": "468479"
  },
  {
    "text": "inject policies into the name space and",
    "start": "468479",
    "end": "470919"
  },
  {
    "text": "use a policy engine for that the second",
    "start": "470919",
    "end": "474039"
  },
  {
    "text": "level is to isolate the kubernetes",
    "start": "474039",
    "end": "475800"
  },
  {
    "text": "control",
    "start": "475800",
    "end": "476720"
  },
  {
    "text": "plane what we discussed so far we could",
    "start": "476720",
    "end": "479639"
  },
  {
    "text": "have multiple tenants interacting with a",
    "start": "479639",
    "end": "481479"
  },
  {
    "text": "control plane to create Ray clusters",
    "start": "481479",
    "end": "484639"
  },
  {
    "text": "however you could easily Envision",
    "start": "484639",
    "end": "486080"
  },
  {
    "text": "another scenario where you want to make",
    "start": "486080",
    "end": "488080"
  },
  {
    "text": "sure that the cube Ray itself is not",
    "start": "488080",
    "end": "489960"
  },
  {
    "text": "shared and you create a different Cube",
    "start": "489960",
    "end": "492280"
  },
  {
    "text": "Ray per class per tenant you still have",
    "start": "492280",
    "end": "495199"
  },
  {
    "text": "the control plane that's shared among",
    "start": "495199",
    "end": "497080"
  },
  {
    "text": "the different tenants but at least now",
    "start": "497080",
    "end": "499039"
  },
  {
    "text": "you have different Cube Ray per tenant",
    "start": "499039",
    "end": "501639"
  },
  {
    "text": "and finally you can think of a more",
    "start": "501639",
    "end": "503120"
  },
  {
    "text": "stringent requirement where for each",
    "start": "503120",
    "end": "505560"
  },
  {
    "text": "tenant you give them their own version",
    "start": "505560",
    "end": "507479"
  },
  {
    "text": "of a control plane their own conf",
    "start": "507479",
    "end": "509479"
  },
  {
    "text": "configuration and tokens to connect and",
    "start": "509479",
    "end": "512240"
  },
  {
    "text": "authenticate with that control plane and",
    "start": "512240",
    "end": "514560"
  },
  {
    "text": "their own cuay implementation and it's",
    "start": "514560",
    "end": "517279"
  },
  {
    "text": "simpler than it seems actually there are",
    "start": "517279",
    "end": "519360"
  },
  {
    "text": "already open source project that can",
    "start": "519360",
    "end": "521120"
  },
  {
    "text": "help with that so one of those projects",
    "start": "521120",
    "end": "523479"
  },
  {
    "text": "would be V cluster so with v cluster",
    "start": "523479",
    "end": "526279"
  },
  {
    "text": "what you can do is every time you on",
    "start": "526279",
    "end": "528360"
  },
  {
    "text": "board a new tenant you have already",
    "start": "528360",
    "end": "530560"
  },
  {
    "text": "secured the name spaces with kerno",
    "start": "530560",
    "end": "533080"
  },
  {
    "text": "instead of having cubra talk to the",
    "start": "533080",
    "end": "535000"
  },
  {
    "text": "kubernetes API server what V cluster can",
    "start": "535000",
    "end": "538200"
  },
  {
    "text": "do is simp simply inject a new pod",
    "start": "538200",
    "end": "542079"
  },
  {
    "text": "inside your namespace and that becomes",
    "start": "542079",
    "end": "544560"
  },
  {
    "text": "your V cluster and as a tenant you can",
    "start": "544560",
    "end": "548680"
  },
  {
    "text": "simply now interact with that control",
    "start": "548680",
    "end": "550880"
  },
  {
    "text": "plane to create other pods and you will",
    "start": "550880",
    "end": "554120"
  },
  {
    "text": "get your own Cube config for that",
    "start": "554120",
    "end": "556519"
  },
  {
    "text": "particular instance of a control plane",
    "start": "556519",
    "end": "558640"
  },
  {
    "text": "and you will never be interacting with",
    "start": "558640",
    "end": "560360"
  },
  {
    "text": "the",
    "start": "560360",
    "end": "561120"
  },
  {
    "text": "host control plane here you will always",
    "start": "561120",
    "end": "563600"
  },
  {
    "text": "be interacting with a bounded uh control",
    "start": "563600",
    "end": "566519"
  },
  {
    "text": "plane that's inside a bounded namespace",
    "start": "566519",
    "end": "569079"
  },
  {
    "text": "that's creating pods even cubay if you",
    "start": "569079",
    "end": "571760"
  },
  {
    "text": "put an instance per Nam space it will",
    "start": "571760",
    "end": "573680"
  },
  {
    "text": "not be interacting with the kubernetes",
    "start": "573680",
    "end": "576360"
  },
  {
    "text": "control",
    "start": "576360",
    "end": "577760"
  },
  {
    "text": "plane and uh if we go through a quick",
    "start": "577760",
    "end": "580279"
  },
  {
    "text": "demo here I just have a video demo it's",
    "start": "580279",
    "end": "582480"
  },
  {
    "text": "a scripted environment all I'm doing",
    "start": "582480",
    "end": "585079"
  },
  {
    "text": "here is I'm going",
    "start": "585079",
    "end": "587120"
  },
  {
    "text": "to on board the tenant I'm going to call",
    "start": "587120",
    "end": "589640"
  },
  {
    "text": "the tenant array automatically I get a",
    "start": "589640",
    "end": "592600"
  },
  {
    "text": "namespace created called tenant Ray you",
    "start": "592600",
    "end": "596120"
  },
  {
    "text": "can see it on the right hand side soon",
    "start": "596120",
    "end": "598079"
  },
  {
    "text": "enough it's going to appear",
    "start": "598079",
    "end": "600160"
  },
  {
    "text": "and inside that namespace they're going",
    "start": "600160",
    "end": "602000"
  },
  {
    "text": "to be already a policy you can see I",
    "start": "602000",
    "end": "603800"
  },
  {
    "text": "already have a Kota in that Nam space I",
    "start": "603800",
    "end": "606959"
  },
  {
    "text": "already have the policies in place what",
    "start": "606959",
    "end": "608680"
  },
  {
    "text": "happened is kerno woke up injected those",
    "start": "608680",
    "end": "611560"
  },
  {
    "text": "policy in the namespace v cluster is now",
    "start": "611560",
    "end": "614920"
  },
  {
    "text": "injecting a pod that acts as a",
    "start": "614920",
    "end": "616880"
  },
  {
    "text": "kubernetes control plane in that",
    "start": "616880",
    "end": "618560"
  },
  {
    "text": "namespace and we can see that reflected",
    "start": "618560",
    "end": "621120"
  },
  {
    "text": "into all those objects and pods created",
    "start": "621120",
    "end": "623399"
  },
  {
    "text": "in that namespace although all I did is",
    "start": "623399",
    "end": "626160"
  },
  {
    "text": "just add a new",
    "start": "626160",
    "end": "628000"
  },
  {
    "text": "tenant so this summarizes the first two",
    "start": "628000",
    "end": "630720"
  },
  {
    "text": "aspects have a policy governed name",
    "start": "630720",
    "end": "632959"
  },
  {
    "text": "spaces and give each tenant their own",
    "start": "632959",
    "end": "635959"
  },
  {
    "text": "version of the kubernetes control",
    "start": "635959",
    "end": "638200"
  },
  {
    "text": "plane now going to the more stringent",
    "start": "638200",
    "end": "640680"
  },
  {
    "text": "requirement of isolating the pods",
    "start": "640680",
    "end": "642839"
  },
  {
    "text": "themselves from each other here we have",
    "start": "642839",
    "end": "645360"
  },
  {
    "text": "to think about what type of isolation we",
    "start": "645360",
    "end": "647680"
  },
  {
    "text": "want everything we talked about so far",
    "start": "647680",
    "end": "651120"
  },
  {
    "text": "has been although we're using containers",
    "start": "651120",
    "end": "653680"
  },
  {
    "text": "it's called process level isolation",
    "start": "653680",
    "end": "656399"
  },
  {
    "text": "they're all still sharing the same",
    "start": "656399",
    "end": "658560"
  },
  {
    "text": "operating system kernel even if we have",
    "start": "658560",
    "end": "661399"
  },
  {
    "text": "multiple containers here they all share",
    "start": "661399",
    "end": "664040"
  },
  {
    "text": "the same kernel and they would still be",
    "start": "664040",
    "end": "665959"
  },
  {
    "text": "deployed on the same VM now there's no",
    "start": "665959",
    "end": "669120"
  },
  {
    "text": "Chief security officer that's ever going",
    "start": "669120",
    "end": "670920"
  },
  {
    "text": "to approve this solution for hostile",
    "start": "670920",
    "end": "672880"
  },
  {
    "text": "multitenancy it's simply not a strong",
    "start": "672880",
    "end": "675440"
  },
  {
    "text": "enough boundary between different",
    "start": "675440",
    "end": "677120"
  },
  {
    "text": "tenants and this is where you go to a",
    "start": "677120",
    "end": "679120"
  },
  {
    "text": "more stringent requirements and with",
    "start": "679120",
    "end": "681440"
  },
  {
    "text": "those",
    "start": "681440",
    "end": "682279"
  },
  {
    "text": "requirements you want to go into full",
    "start": "682279",
    "end": "684839"
  },
  {
    "text": "isolation having Virtual Machine level",
    "start": "684839",
    "end": "687639"
  },
  {
    "text": "isolation or hyp or hypervisor level",
    "start": "687639",
    "end": "690360"
  },
  {
    "text": "isolation instead of a process level",
    "start": "690360",
    "end": "692720"
  },
  {
    "text": "isolation there are multiple solutions",
    "start": "692720",
    "end": "694880"
  },
  {
    "text": "for that uh starting with Kata",
    "start": "694880",
    "end": "697720"
  },
  {
    "text": "containers which a good place to start",
    "start": "697720",
    "end": "699639"
  },
  {
    "text": "although it does make some assumptions",
    "start": "699639",
    "end": "701240"
  },
  {
    "text": "about the infrastructure or you can go",
    "start": "701240",
    "end": "703360"
  },
  {
    "text": "all the way into fully fledged VMS for",
    "start": "703360",
    "end": "705560"
  },
  {
    "text": "isolating your pods and today I'm going",
    "start": "705560",
    "end": "707959"
  },
  {
    "text": "to talk about a open source project that",
    "start": "707959",
    "end": "711279"
  },
  {
    "text": "would help you do that and it's virtual",
    "start": "711279",
    "end": "715000"
  },
  {
    "text": "cuet uh virtual cuet is simply a cuet",
    "start": "715000",
    "end": "719240"
  },
  {
    "text": "implementation that masquerades itself",
    "start": "719240",
    "end": "722000"
  },
  {
    "text": "as another Noe to the kubernetes control",
    "start": "722000",
    "end": "724399"
  },
  {
    "text": "plane but in fact it's not under the",
    "start": "724399",
    "end": "727399"
  },
  {
    "text": "hood it's really two interfaces one",
    "start": "727399",
    "end": "729399"
  },
  {
    "text": "interface making the control plane",
    "start": "729399",
    "end": "731519"
  },
  {
    "text": "thinks it's an actual node and the other",
    "start": "731519",
    "end": "734040"
  },
  {
    "text": "interface is one that can talk to any",
    "start": "734040",
    "end": "736279"
  },
  {
    "text": "cloud provider and provision those",
    "start": "736279",
    "end": "739880"
  },
  {
    "text": "resour those containers for you under",
    "start": "739880",
    "end": "741800"
  },
  {
    "text": "the hood so that you wouldn't even know",
    "start": "741800",
    "end": "744320"
  },
  {
    "text": "that you're working with a non",
    "start": "744320",
    "end": "746320"
  },
  {
    "text": "kubernetes pods there",
    "start": "746320",
    "end": "749480"
  },
  {
    "text": "so if we now want to piece the entire",
    "start": "749480",
    "end": "751720"
  },
  {
    "text": "solution together we already established",
    "start": "751720",
    "end": "753920"
  },
  {
    "text": "that we can place each tenant in their",
    "start": "753920",
    "end": "755800"
  },
  {
    "text": "own Nam space we injected the policies",
    "start": "755800",
    "end": "757839"
  },
  {
    "text": "we have qra per name space the cubr is",
    "start": "757839",
    "end": "760120"
  },
  {
    "text": "talking to the virtual control plane and",
    "start": "760120",
    "end": "763199"
  },
  {
    "text": "what we can do now is add a different",
    "start": "763199",
    "end": "765160"
  },
  {
    "text": "virtual node per per namespace and that",
    "start": "765160",
    "end": "768440"
  },
  {
    "text": "way even the API server here would talk",
    "start": "768440",
    "end": "770959"
  },
  {
    "text": "and schedule things on the virtual node",
    "start": "770959",
    "end": "773279"
  },
  {
    "text": "itself in our demo today what we used we",
    "start": "773279",
    "end": "776959"
  },
  {
    "text": "used Azure container instance",
    "start": "776959",
    "end": "780040"
  },
  {
    "text": "every Crow provider have their own",
    "start": "780040",
    "end": "781920"
  },
  {
    "text": "implementation but what happens here is",
    "start": "781920",
    "end": "784079"
  },
  {
    "text": "that when you create a pod within this",
    "start": "784079",
    "end": "787040"
  },
  {
    "text": "name space on this virtual node which is",
    "start": "787040",
    "end": "789160"
  },
  {
    "text": "an implementation of the virtual cuet",
    "start": "789160",
    "end": "792040"
  },
  {
    "text": "the call goes to Azure control different",
    "start": "792040",
    "end": "794839"
  },
  {
    "text": "Azure control plane called Azure",
    "start": "794839",
    "end": "796480"
  },
  {
    "text": "container instances it creates for you a",
    "start": "796480",
    "end": "799199"
  },
  {
    "text": "virtual machine inside the virtual",
    "start": "799199",
    "end": "801079"
  },
  {
    "text": "machine it will create a construct",
    "start": "801079",
    "end": "803600"
  },
  {
    "text": "called container group and inside the",
    "start": "803600",
    "end": "806320"
  },
  {
    "text": "container group you will have your pod",
    "start": "806320",
    "end": "808600"
  },
  {
    "text": "now your pod can talk to the control",
    "start": "808600",
    "end": "811040"
  },
  {
    "text": "plane that's a virtual instance just for",
    "start": "811040",
    "end": "813079"
  },
  {
    "text": "you and then it can go ahead and create",
    "start": "813079",
    "end": "815480"
  },
  {
    "text": "other pods uh all of this is going to",
    "start": "815480",
    "end": "818399"
  },
  {
    "text": "happen under the hoods it would be in a",
    "start": "818399",
    "end": "820440"
  },
  {
    "text": "seamless environment where you wouldn't",
    "start": "820440",
    "end": "822279"
  },
  {
    "text": "even see it happening so if I actually",
    "start": "822279",
    "end": "826519"
  },
  {
    "text": "we can we might try to do here a live",
    "start": "826519",
    "end": "830440"
  },
  {
    "text": "demo so right",
    "start": "830440",
    "end": "832680"
  },
  {
    "text": "now what I'm showing is simply that I",
    "start": "832680",
    "end": "835240"
  },
  {
    "text": "have a kubernetes cluster I have a",
    "start": "835240",
    "end": "837480"
  },
  {
    "text": "virtual node already installed",
    "start": "837480",
    "end": "839959"
  },
  {
    "text": "and if I just now create",
    "start": "839959",
    "end": "844519"
  },
  {
    "text": "oops I can create a pod that's supposed",
    "start": "844720",
    "end": "847399"
  },
  {
    "text": "to go on that virtual node I can see",
    "start": "847399",
    "end": "850279"
  },
  {
    "text": "that the Pod is in a creating",
    "start": "850279",
    "end": "854079"
  },
  {
    "text": "State and now if I go to a Azure portal",
    "start": "857600",
    "end": "861399"
  },
  {
    "text": "and I do a refresh uh let me",
    "start": "861399",
    "end": "864639"
  },
  {
    "text": "see now I see I have the pod that's",
    "start": "864639",
    "end": "867959"
  },
  {
    "text": "creating now if I go wide I can see that",
    "start": "867959",
    "end": "871320"
  },
  {
    "text": "it's created on a virtual node again if",
    "start": "871320",
    "end": "874639"
  },
  {
    "text": "I go to my",
    "start": "874639",
    "end": "875920"
  },
  {
    "text": "portal and I refresh I see",
    "start": "875920",
    "end": "879160"
  },
  {
    "text": "that I do have a container group and",
    "start": "879160",
    "end": "882639"
  },
  {
    "text": "this container group will be running in",
    "start": "882639",
    "end": "884279"
  },
  {
    "text": "its own VM and this is the pause on vn2",
    "start": "884279",
    "end": "887199"
  },
  {
    "text": "container I created but the interesting",
    "start": "887199",
    "end": "889000"
  },
  {
    "text": "part if I go to my cluster and I refresh",
    "start": "889000",
    "end": "892120"
  },
  {
    "text": "I see it running just as any other pod",
    "start": "892120",
    "end": "894320"
  },
  {
    "text": "in kubernetes so I wouldn't even know",
    "start": "894320",
    "end": "896519"
  },
  {
    "text": "that this is not uh kubernetes pod it's",
    "start": "896519",
    "end": "900120"
  },
  {
    "text": "actually running somewhere else so in",
    "start": "900120",
    "end": "902480"
  },
  {
    "text": "order to",
    "start": "902480",
    "end": "904079"
  },
  {
    "text": "summarize what we showed today is that",
    "start": "904079",
    "end": "906360"
  },
  {
    "text": "Ray and kubernetes are really a great",
    "start": "906360",
    "end": "908199"
  },
  {
    "text": "fit regardless where you want to Branch",
    "start": "908199",
    "end": "910440"
  },
  {
    "text": "out of it you will find good Solutions",
    "start": "910440",
    "end": "912639"
  },
  {
    "text": "good support so when you thinking about",
    "start": "912639",
    "end": "915040"
  },
  {
    "text": "security and enhancing your security",
    "start": "915040",
    "end": "917480"
  },
  {
    "text": "because you're running on kubernetes",
    "start": "917480",
    "end": "919759"
  },
  {
    "text": "every tool we talked about today is an",
    "start": "919759",
    "end": "921759"
  },
  {
    "text": "open- source project it's working",
    "start": "921759",
    "end": "923920"
  },
  {
    "text": "seamlessly with kubernetes it can help",
    "start": "923920",
    "end": "926160"
  },
  {
    "text": "you with multi-tenancy and we",
    "start": "926160",
    "end": "928959"
  },
  {
    "text": "demonstrated how you can have",
    "start": "928959",
    "end": "930160"
  },
  {
    "text": "differentiated secure environment",
    "start": "930160",
    "end": "932040"
  },
  {
    "text": "depending whether you're working with",
    "start": "932040",
    "end": "933480"
  },
  {
    "text": "friendly multi tenants or hostile",
    "start": "933480",
    "end": "936040"
  },
  {
    "text": "multitenant uh acknowledgement to the",
    "start": "936040",
    "end": "938560"
  },
  {
    "text": "ray team and any scale and uh everyone",
    "start": "938560",
    "end": "941319"
  },
  {
    "text": "that contributes to this and if you have",
    "start": "941319",
    "end": "944120"
  },
  {
    "text": "any questions I'm going to be around so",
    "start": "944120",
    "end": "946199"
  },
  {
    "text": "feel free to come talk to me and thank",
    "start": "946199",
    "end": "948519"
  },
  {
    "text": "you thanks everyone",
    "start": "948519",
    "end": "952319"
  }
]