[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "[Music]",
    "start": "170",
    "end": "14719"
  },
  {
    "text": "alright so today let us talk a little",
    "start": "14719",
    "end": "17039"
  },
  {
    "text": "bit about",
    "start": "17039",
    "end": "17920"
  },
  {
    "text": "how do we use ray as a platform and",
    "start": "17920",
    "end": "20480"
  },
  {
    "text": "scale out",
    "start": "20480",
    "end": "21279"
  },
  {
    "text": "existing machine learning pipelines",
    "start": "21279",
    "end": "23359"
  },
  {
    "text": "specifically",
    "start": "23359",
    "end": "24320"
  },
  {
    "text": "on scikit-learn and spark pipelines and",
    "start": "24320",
    "end": "27359"
  },
  {
    "text": "we also look at these combination",
    "start": "27359",
    "end": "29119"
  },
  {
    "text": "because it's a",
    "start": "29119",
    "end": "30400"
  },
  {
    "text": "very well adapted data science community",
    "start": "30400",
    "end": "33360"
  },
  {
    "text": "you know things out there",
    "start": "33360",
    "end": "34960"
  },
  {
    "text": "my name is raghu gandhi i'm a principal",
    "start": "34960",
    "end": "36960"
  },
  {
    "text": "research staff member",
    "start": "36960",
    "end": "38160"
  },
  {
    "text": "at ibm's tj watson research center and",
    "start": "38160",
    "end": "40960"
  },
  {
    "text": "the work that we are doing today",
    "start": "40960",
    "end": "42559"
  },
  {
    "text": "is still in its initial stages and",
    "start": "42559",
    "end": "45760"
  },
  {
    "text": "it is being done as a collaboration",
    "start": "45760",
    "end": "47920"
  },
  {
    "text": "joint effort between ibm and red hat",
    "start": "47920",
    "end": "50480"
  },
  {
    "text": "and the team of course that is working",
    "start": "50480",
    "end": "52559"
  },
  {
    "text": "primarily is listed below there",
    "start": "52559",
    "end": "59199"
  },
  {
    "start": "56000",
    "end": "116000"
  },
  {
    "text": "so why pipelines i mean there are just",
    "start": "59199",
    "end": "61039"
  },
  {
    "text": "so many pipelines out there right if you",
    "start": "61039",
    "end": "62960"
  },
  {
    "text": "think about",
    "start": "62960",
    "end": "63600"
  },
  {
    "text": "uh air flow as one of the pioneers and",
    "start": "63600",
    "end": "66560"
  },
  {
    "text": "the whole pipelines there is",
    "start": "66560",
    "end": "68240"
  },
  {
    "text": "escalant of course which every data",
    "start": "68240",
    "end": "70320"
  },
  {
    "text": "scientist is is aware of",
    "start": "70320",
    "end": "72479"
  },
  {
    "text": "there are other pipelines like kubeflow",
    "start": "72479",
    "end": "74479"
  },
  {
    "text": "which is quite popular",
    "start": "74479",
    "end": "76080"
  },
  {
    "text": "uh luigi you know spark has its own",
    "start": "76080",
    "end": "78479"
  },
  {
    "text": "pipelines which borrows concepts from",
    "start": "78479",
    "end": "80400"
  },
  {
    "text": "scikit-learn",
    "start": "80400",
    "end": "81680"
  },
  {
    "text": "but why do we want to think about",
    "start": "81680",
    "end": "83840"
  },
  {
    "text": "pipelines in this context and what is it",
    "start": "83840",
    "end": "86159"
  },
  {
    "text": "that you know attracts us",
    "start": "86159",
    "end": "88159"
  },
  {
    "text": "in terms of thinking about it and there",
    "start": "88159",
    "end": "90320"
  },
  {
    "text": "are so many other pipelines that we are",
    "start": "90320",
    "end": "92159"
  },
  {
    "text": "not talking about right now",
    "start": "92159",
    "end": "93759"
  },
  {
    "text": "and uh you know i'm only showing a few",
    "start": "93759",
    "end": "95840"
  },
  {
    "text": "of them here",
    "start": "95840",
    "end": "96880"
  },
  {
    "text": "but uh you name it there are just so",
    "start": "96880",
    "end": "99280"
  },
  {
    "text": "many different variations of these",
    "start": "99280",
    "end": "100560"
  },
  {
    "text": "pipelines whether it is for ml",
    "start": "100560",
    "end": "102799"
  },
  {
    "text": "or more general purpose things and",
    "start": "102799",
    "end": "105040"
  },
  {
    "text": "speaking of that in fact two days ago",
    "start": "105040",
    "end": "107280"
  },
  {
    "text": "you know i did come across a blog on any",
    "start": "107280",
    "end": "109280"
  },
  {
    "text": "scale which talks about",
    "start": "109280",
    "end": "111280"
  },
  {
    "text": "air flow integration with ray as a",
    "start": "111280",
    "end": "113439"
  },
  {
    "text": "back-end which is kind of a really cool",
    "start": "113439",
    "end": "115040"
  },
  {
    "text": "thing to see there",
    "start": "115040",
    "end": "117040"
  },
  {
    "start": "116000",
    "end": "163000"
  },
  {
    "text": "so what we wanted to do what we set out",
    "start": "117040",
    "end": "119280"
  },
  {
    "text": "to do was to ask the question",
    "start": "119280",
    "end": "121600"
  },
  {
    "text": "can we take ray as a platform which is a",
    "start": "121600",
    "end": "125040"
  },
  {
    "text": "fantastic distributed platform and then",
    "start": "125040",
    "end": "127600"
  },
  {
    "text": "build",
    "start": "127600",
    "end": "128399"
  },
  {
    "text": "these ml pipelines and workflows on top",
    "start": "128399",
    "end": "131039"
  },
  {
    "text": "of gray",
    "start": "131039",
    "end": "131599"
  },
  {
    "text": "in a native manner so the question is",
    "start": "131599",
    "end": "133599"
  },
  {
    "text": "not around hey can i take an existing",
    "start": "133599",
    "end": "136080"
  },
  {
    "text": "you know pipeline mechanism and then try",
    "start": "136080",
    "end": "138560"
  },
  {
    "text": "to use ray as a backhand but",
    "start": "138560",
    "end": "140319"
  },
  {
    "text": "literally use ray as the basic you know",
    "start": "140319",
    "end": "143200"
  },
  {
    "text": "native platform and then",
    "start": "143200",
    "end": "144800"
  },
  {
    "text": "use ray primitives to be able to build",
    "start": "144800",
    "end": "147040"
  },
  {
    "text": "pipelines",
    "start": "147040",
    "end": "148160"
  },
  {
    "text": "and the other question is can i take a",
    "start": "148160",
    "end": "150400"
  },
  {
    "text": "popular pipeline out there like a",
    "start": "150400",
    "end": "152319"
  },
  {
    "text": "sklearn pipeline just import it into ray",
    "start": "152319",
    "end": "155440"
  },
  {
    "text": "and achieve data parallelism and compute",
    "start": "155440",
    "end": "157840"
  },
  {
    "text": "parallelism",
    "start": "157840",
    "end": "158640"
  },
  {
    "text": "so these are some of the questions that",
    "start": "158640",
    "end": "160160"
  },
  {
    "text": "we started you know setting out to do",
    "start": "160160",
    "end": "162000"
  },
  {
    "text": "there",
    "start": "162000",
    "end": "162720"
  },
  {
    "text": "so in order to do that sort of examine",
    "start": "162720",
    "end": "165840"
  },
  {
    "start": "163000",
    "end": "231000"
  },
  {
    "text": "let's take a step back and look at",
    "start": "165840",
    "end": "167760"
  },
  {
    "text": "what is the focus of sk learn pipelines",
    "start": "167760",
    "end": "170800"
  },
  {
    "text": "if you look at sk1",
    "start": "170800",
    "end": "172319"
  },
  {
    "text": "it typically has this transform and fit",
    "start": "172319",
    "end": "175120"
  },
  {
    "text": "where a transform is you take an array",
    "start": "175120",
    "end": "177680"
  },
  {
    "text": "array like pattern like an x and then",
    "start": "177680",
    "end": "179440"
  },
  {
    "text": "you know give out x prime right",
    "start": "179440",
    "end": "181120"
  },
  {
    "text": "and the fit is more about taking the x",
    "start": "181120",
    "end": "183840"
  },
  {
    "text": "and the labels the features and the",
    "start": "183840",
    "end": "185120"
  },
  {
    "text": "labels and create a fitted model",
    "start": "185120",
    "end": "187680"
  },
  {
    "text": "of course spark took the same idea and",
    "start": "187680",
    "end": "189760"
  },
  {
    "text": "then said like",
    "start": "189760",
    "end": "190720"
  },
  {
    "text": "x can be very large it's a distributed",
    "start": "190720",
    "end": "192560"
  },
  {
    "text": "data set and then i will use sparks data",
    "start": "192560",
    "end": "194800"
  },
  {
    "text": "parallel scaling",
    "start": "194800",
    "end": "196000"
  },
  {
    "text": "and be able to do these pipelines using",
    "start": "196000",
    "end": "198800"
  },
  {
    "text": "sparks data parallelism",
    "start": "198800",
    "end": "201040"
  },
  {
    "text": "what is really missing and what we felt",
    "start": "201040",
    "end": "203360"
  },
  {
    "text": "was key",
    "start": "203360",
    "end": "204400"
  },
  {
    "text": "is to sort of combine some of these",
    "start": "204400",
    "end": "206239"
  },
  {
    "text": "learnings and then use",
    "start": "206239",
    "end": "208080"
  },
  {
    "text": "ray as the native platform for scaling",
    "start": "208080",
    "end": "210319"
  },
  {
    "text": "these pipelines so how do we do that",
    "start": "210319",
    "end": "212799"
  },
  {
    "text": "right i think",
    "start": "212799",
    "end": "213519"
  },
  {
    "text": "the core idea lies in this fact that",
    "start": "213519",
    "end": "217200"
  },
  {
    "text": "ray provides not just a computational",
    "start": "217200",
    "end": "219840"
  },
  {
    "text": "scale out",
    "start": "219840",
    "end": "220879"
  },
  {
    "text": "but also a distributed object store so",
    "start": "220879",
    "end": "223599"
  },
  {
    "text": "think about those two primitives",
    "start": "223599",
    "end": "225440"
  },
  {
    "text": "and then we start mapping into how do we",
    "start": "225440",
    "end": "227599"
  },
  {
    "text": "take these pipelines and then really",
    "start": "227599",
    "end": "229280"
  },
  {
    "text": "scale them up",
    "start": "229280",
    "end": "231760"
  },
  {
    "text": "so if you think about those primitives",
    "start": "231760",
    "end": "233920"
  },
  {
    "text": "the key",
    "start": "233920",
    "end": "235360"
  },
  {
    "text": "component is how do i scale at a data",
    "start": "235360",
    "end": "237760"
  },
  {
    "text": "parallel level how do i take a single",
    "start": "237760",
    "end": "239760"
  },
  {
    "text": "data item",
    "start": "239760",
    "end": "240879"
  },
  {
    "text": "and then break it up into multiple data",
    "start": "240879",
    "end": "242959"
  },
  {
    "text": "items in this case i'm talking about",
    "start": "242959",
    "end": "245280"
  },
  {
    "text": "providing a list of objects and to a",
    "start": "245280",
    "end": "248319"
  },
  {
    "text": "transform",
    "start": "248319",
    "end": "249040"
  },
  {
    "text": "and each object you are applying the",
    "start": "249040",
    "end": "250720"
  },
  {
    "text": "same transform so you literally",
    "start": "250720",
    "end": "252400"
  },
  {
    "text": "can scale out at each object level",
    "start": "252400",
    "end": "254879"
  },
  {
    "text": "applying the same transform",
    "start": "254879",
    "end": "257040"
  },
  {
    "text": "for multiple objects and the key here is",
    "start": "257040",
    "end": "260799"
  },
  {
    "text": "not a list of objects but a list of",
    "start": "260799",
    "end": "262479"
  },
  {
    "text": "object references",
    "start": "262479",
    "end": "263759"
  },
  {
    "text": "because each object can potentially take",
    "start": "263759",
    "end": "266960"
  },
  {
    "text": "its own time for transformation its own",
    "start": "266960",
    "end": "269040"
  },
  {
    "text": "task that is happening or its own actor",
    "start": "269040",
    "end": "271120"
  },
  {
    "text": "parallelism that is happening",
    "start": "271120",
    "end": "272639"
  },
  {
    "text": "and the same thing goes with fit as well",
    "start": "272639",
    "end": "274800"
  },
  {
    "text": "especially when you start thinking about",
    "start": "274800",
    "end": "276720"
  },
  {
    "text": "you know",
    "start": "276720",
    "end": "277199"
  },
  {
    "text": "the pipelines that are exploring in an",
    "start": "277199",
    "end": "279759"
  },
  {
    "text": "automated fashion what is the right",
    "start": "279759",
    "end": "281440"
  },
  {
    "text": "model to",
    "start": "281440",
    "end": "282000"
  },
  {
    "text": "fit or it's not just",
    "start": "282000",
    "end": "285120"
  },
  {
    "text": "you know trying to do hyper parameter",
    "start": "285120",
    "end": "286720"
  },
  {
    "text": "tuning but i'm picking",
    "start": "286720",
    "end": "288240"
  },
  {
    "text": "10 different models 10 different you",
    "start": "288240",
    "end": "290160"
  },
  {
    "text": "know types of trees which is the best",
    "start": "290160",
    "end": "292160"
  },
  {
    "text": "tree that would fit in",
    "start": "292160",
    "end": "293520"
  },
  {
    "text": "or i want to explore a million",
    "start": "293520",
    "end": "295919"
  },
  {
    "text": "combinations of different kinds of",
    "start": "295919",
    "end": "297759"
  },
  {
    "text": "functions that apply",
    "start": "297759",
    "end": "298880"
  },
  {
    "text": "on the data as it is flowing and find",
    "start": "298880",
    "end": "301360"
  },
  {
    "text": "the right pipeline that could fit for my",
    "start": "301360",
    "end": "303680"
  },
  {
    "text": "specific model",
    "start": "303680",
    "end": "305440"
  },
  {
    "text": "so that's where thinking about a list of",
    "start": "305440",
    "end": "308400"
  },
  {
    "text": "object references starts becoming the",
    "start": "308400",
    "end": "310800"
  },
  {
    "text": "key",
    "start": "310800",
    "end": "311199"
  },
  {
    "text": "and that's when we can start thinking",
    "start": "311199",
    "end": "312800"
  },
  {
    "text": "about hey how do i scale it out this is",
    "start": "312800",
    "end": "314800"
  },
  {
    "text": "one of the key",
    "start": "314800",
    "end": "315600"
  },
  {
    "text": "additions that we do in terms of",
    "start": "315600",
    "end": "317199"
  },
  {
    "text": "pipelines that would enable",
    "start": "317199",
    "end": "319360"
  },
  {
    "text": "ray to scale out at the level in a",
    "start": "319360",
    "end": "321840"
  },
  {
    "text": "native manner",
    "start": "321840",
    "end": "323039"
  },
  {
    "text": "you know use all these list of objects",
    "start": "323039",
    "end": "325600"
  },
  {
    "text": "and object references in fact to be able",
    "start": "325600",
    "end": "327840"
  },
  {
    "text": "to",
    "start": "327840",
    "end": "328160"
  },
  {
    "text": "do the computation in addition to that",
    "start": "328160",
    "end": "332000"
  },
  {
    "text": "we also introduced this concept of an",
    "start": "332000",
    "end": "334000"
  },
  {
    "text": "and or graph when",
    "start": "334000",
    "end": "335199"
  },
  {
    "text": "under graphs have been there in uh you",
    "start": "335199",
    "end": "338000"
  },
  {
    "text": "know in the literature for a very long",
    "start": "338000",
    "end": "339919"
  },
  {
    "text": "time i'm sure there are several pipeline",
    "start": "339919",
    "end": "341919"
  },
  {
    "text": "constructs which implicitly use this",
    "start": "341919",
    "end": "343919"
  },
  {
    "text": "notion",
    "start": "343919",
    "end": "344639"
  },
  {
    "text": "but specifically if i look at sk learn",
    "start": "344639",
    "end": "347440"
  },
  {
    "text": "you can think of an and node",
    "start": "347440",
    "end": "349600"
  },
  {
    "text": "like a feature union but it is a lot",
    "start": "349600",
    "end": "352160"
  },
  {
    "text": "more than feature union that can do",
    "start": "352160",
    "end": "354560"
  },
  {
    "text": "not just you know simple combination of",
    "start": "354560",
    "end": "357600"
  },
  {
    "text": "features but be able to do",
    "start": "357600",
    "end": "359199"
  },
  {
    "text": "implement your own concept of a feature",
    "start": "359199",
    "end": "361199"
  },
  {
    "text": "union",
    "start": "361199",
    "end": "362319"
  },
  {
    "text": "the whole concept of an and node is it's",
    "start": "362319",
    "end": "364800"
  },
  {
    "text": "taking",
    "start": "364800",
    "end": "365440"
  },
  {
    "text": "input from various nodes",
    "start": "365440",
    "end": "368639"
  },
  {
    "text": "and then trying to do a combination of",
    "start": "368639",
    "end": "371120"
  },
  {
    "text": "that and then outputting to",
    "start": "371120",
    "end": "372880"
  },
  {
    "text": "multiple nodes so you can think of it",
    "start": "372880",
    "end": "375520"
  },
  {
    "text": "somewhat like",
    "start": "375520",
    "end": "377120"
  },
  {
    "text": "a barrier primitive where data is coming",
    "start": "377120",
    "end": "380160"
  },
  {
    "text": "in you wait for some of the data items",
    "start": "380160",
    "end": "382160"
  },
  {
    "text": "to be ready",
    "start": "382160",
    "end": "382880"
  },
  {
    "text": "and then you're trying to you know",
    "start": "382880",
    "end": "384720"
  },
  {
    "text": "combine those data items to create your",
    "start": "384720",
    "end": "386880"
  },
  {
    "text": "new uh output whereas the or node",
    "start": "386880",
    "end": "390160"
  },
  {
    "text": "is think of it like a for loop i'm",
    "start": "390160",
    "end": "392080"
  },
  {
    "text": "exploring multiple models",
    "start": "392080",
    "end": "394160"
  },
  {
    "text": "but the input to each of this model is",
    "start": "394160",
    "end": "396800"
  },
  {
    "text": "exactly the same",
    "start": "396800",
    "end": "398080"
  },
  {
    "text": "so i take x that comes in and the or",
    "start": "398080",
    "end": "401360"
  },
  {
    "text": "node is trying to fan it out",
    "start": "401360",
    "end": "403360"
  },
  {
    "text": "into multiple different steps so i can",
    "start": "403360",
    "end": "406319"
  },
  {
    "text": "say hey i want to explore an xg bose",
    "start": "406319",
    "end": "408639"
  },
  {
    "text": "classifier",
    "start": "408639",
    "end": "409360"
  },
  {
    "text": "i want to explore a random forest",
    "start": "409360",
    "end": "410960"
  },
  {
    "text": "classifier and i want to explore",
    "start": "410960",
    "end": "412560"
  },
  {
    "text": "you know some other classifier now the",
    "start": "412560",
    "end": "415680"
  },
  {
    "text": "input to each of these classifiers might",
    "start": "415680",
    "end": "417599"
  },
  {
    "text": "be exactly the same",
    "start": "417599",
    "end": "419280"
  },
  {
    "text": "so how do we reuse that same input",
    "start": "419280",
    "end": "422400"
  },
  {
    "text": "again goes back to i think we raise",
    "start": "422400",
    "end": "424800"
  },
  {
    "text": "primitives",
    "start": "424800",
    "end": "425759"
  },
  {
    "text": "of having a single object reference and",
    "start": "425759",
    "end": "428240"
  },
  {
    "text": "that gets reused across all of them",
    "start": "428240",
    "end": "430639"
  },
  {
    "text": "and that's the key for an order",
    "start": "430639",
    "end": "434000"
  },
  {
    "text": "now we start getting into a lot of more",
    "start": "434000",
    "end": "435759"
  },
  {
    "text": "details you know since the",
    "start": "435759",
    "end": "437599"
  },
  {
    "text": "uh inception of this project and some of",
    "start": "437599",
    "end": "439599"
  },
  {
    "text": "it has been uh we have we already have",
    "start": "439599",
    "end": "441520"
  },
  {
    "text": "initial implementations and trials and",
    "start": "441520",
    "end": "443759"
  },
  {
    "text": "so on",
    "start": "443759",
    "end": "444479"
  },
  {
    "text": "uh what we started realizing is it",
    "start": "444479",
    "end": "446319"
  },
  {
    "text": "starts getting very interesting when we",
    "start": "446319",
    "end": "448240"
  },
  {
    "text": "think about",
    "start": "448240",
    "end": "449280"
  },
  {
    "text": "when do these r nodes and and nodes",
    "start": "449280",
    "end": "451520"
  },
  {
    "text": "start firing you know",
    "start": "451520",
    "end": "452800"
  },
  {
    "text": "how can you combine these inputs from",
    "start": "452800",
    "end": "454960"
  },
  {
    "text": "various different nodes and how do you",
    "start": "454960",
    "end": "456720"
  },
  {
    "text": "start thinking about",
    "start": "456720",
    "end": "458479"
  },
  {
    "text": "uh you know how do i come what what kind",
    "start": "458479",
    "end": "460560"
  },
  {
    "text": "of barrier primitives that you start",
    "start": "460560",
    "end": "462240"
  },
  {
    "text": "thinking about",
    "start": "462240",
    "end": "462960"
  },
  {
    "text": "and so on so if i want to sort of",
    "start": "462960",
    "end": "466479"
  },
  {
    "start": "464000",
    "end": "630000"
  },
  {
    "text": "take a step back and say what are the",
    "start": "466479",
    "end": "468560"
  },
  {
    "text": "key things that we",
    "start": "468560",
    "end": "469680"
  },
  {
    "text": "we think from an idea perspective and",
    "start": "469680",
    "end": "472000"
  },
  {
    "text": "from what we want",
    "start": "472000",
    "end": "473520"
  },
  {
    "text": "from this particular pipelines is the",
    "start": "473520",
    "end": "476479"
  },
  {
    "text": "function",
    "start": "476479",
    "end": "477039"
  },
  {
    "text": "is a unit of compute so unlike if you",
    "start": "477039",
    "end": "479199"
  },
  {
    "text": "think about cube flow",
    "start": "479199",
    "end": "480639"
  },
  {
    "text": "where functions are are at the level of",
    "start": "480639",
    "end": "483520"
  },
  {
    "text": "containers",
    "start": "483520",
    "end": "484400"
  },
  {
    "text": "we are taking the approach that python",
    "start": "484400",
    "end": "486560"
  },
  {
    "text": "functions unit of compute here",
    "start": "486560",
    "end": "488560"
  },
  {
    "text": "which makes it very intuitive for the",
    "start": "488560",
    "end": "490000"
  },
  {
    "text": "data scientist i mean and especially",
    "start": "490000",
    "end": "491759"
  },
  {
    "text": "when you start thinking about the",
    "start": "491759",
    "end": "492960"
  },
  {
    "text": "transformer apis right not the deep",
    "start": "492960",
    "end": "495120"
  },
  {
    "text": "learning transformers but the transform",
    "start": "495120",
    "end": "497039"
  },
  {
    "text": "and the fit apis they are fairly",
    "start": "497039",
    "end": "500000"
  },
  {
    "text": "intuitive fairly well adopted",
    "start": "500000",
    "end": "501919"
  },
  {
    "text": "so we want to use that as our basis and",
    "start": "501919",
    "end": "504800"
  },
  {
    "text": "make python functions unit of compute",
    "start": "504800",
    "end": "506960"
  },
  {
    "text": "and that python function gets scaled out",
    "start": "506960",
    "end": "509120"
  },
  {
    "text": "using it",
    "start": "509120",
    "end": "510560"
  },
  {
    "text": "then of course the key is this list of",
    "start": "510560",
    "end": "512479"
  },
  {
    "text": "objects or object references to be more",
    "start": "512479",
    "end": "514640"
  },
  {
    "text": "precise",
    "start": "514640",
    "end": "515200"
  },
  {
    "text": "as an io so we are referring to each",
    "start": "515200",
    "end": "517839"
  },
  {
    "text": "object",
    "start": "517839",
    "end": "518399"
  },
  {
    "text": "in the computation output of a task",
    "start": "518399",
    "end": "522320"
  },
  {
    "text": "is a reference as a pointer that this",
    "start": "522320",
    "end": "524399"
  },
  {
    "text": "computation will be you know",
    "start": "524399",
    "end": "525680"
  },
  {
    "text": "output will be available sometime in the",
    "start": "525680",
    "end": "527279"
  },
  {
    "text": "future so that's the",
    "start": "527279",
    "end": "529120"
  },
  {
    "text": "io that is happening between the",
    "start": "529120",
    "end": "530720"
  },
  {
    "text": "pipeline stages which enables us to you",
    "start": "530720",
    "end": "532800"
  },
  {
    "text": "know scale it out and make multiple",
    "start": "532800",
    "end": "534399"
  },
  {
    "text": "copies and process the whole thing",
    "start": "534399",
    "end": "536720"
  },
  {
    "text": "and of course the sharing of objects is",
    "start": "536720",
    "end": "538480"
  },
  {
    "text": "using the plasma store",
    "start": "538480",
    "end": "540240"
  },
  {
    "text": "and of course you do have your you know",
    "start": "540240",
    "end": "542560"
  },
  {
    "text": "zero copy object sharing as well",
    "start": "542560",
    "end": "545200"
  },
  {
    "text": "now given that ray",
    "start": "545200",
    "end": "548320"
  },
  {
    "text": "is allowing you to do both python and",
    "start": "548320",
    "end": "551120"
  },
  {
    "text": "java",
    "start": "551120",
    "end": "552080"
  },
  {
    "text": "computations we do uh you know plan on",
    "start": "552080",
    "end": "554880"
  },
  {
    "text": "leveraging the ecosystem like ray db for",
    "start": "554880",
    "end": "557440"
  },
  {
    "text": "example",
    "start": "557440",
    "end": "558160"
  },
  {
    "text": "and to enable efficient data exchange",
    "start": "558160",
    "end": "560560"
  },
  {
    "text": "across environment so when i'm using",
    "start": "560560",
    "end": "562240"
  },
  {
    "text": "spark",
    "start": "562240",
    "end": "563120"
  },
  {
    "text": "which is a jvm based backend primarily",
    "start": "563120",
    "end": "565600"
  },
  {
    "text": "even though you might be able to write",
    "start": "565600",
    "end": "567040"
  },
  {
    "text": "things in python and use python heavy",
    "start": "567040",
    "end": "569519"
  },
  {
    "text": "there but it's a jvm based pattern",
    "start": "569519",
    "end": "571519"
  },
  {
    "text": "so how can i exchange data efficiently",
    "start": "571519",
    "end": "574000"
  },
  {
    "text": "with something like radb",
    "start": "574000",
    "end": "575680"
  },
  {
    "text": "in the in in the mix and then get ready",
    "start": "575680",
    "end": "578880"
  },
  {
    "text": "to form a unifying platform in a cross",
    "start": "578880",
    "end": "581279"
  },
  {
    "text": "environment",
    "start": "581279",
    "end": "582880"
  },
  {
    "text": "then finally of course enriched dags",
    "start": "582880",
    "end": "585360"
  },
  {
    "text": "which add on top of what scikit learn",
    "start": "585360",
    "end": "587440"
  },
  {
    "text": "already provides using the or nodes and",
    "start": "587440",
    "end": "589519"
  },
  {
    "text": "and nodes",
    "start": "589519",
    "end": "590720"
  },
  {
    "text": "which where and nodes can provide you",
    "start": "590720",
    "end": "592720"
  },
  {
    "text": "know arbitrary lambdas",
    "start": "592720",
    "end": "594399"
  },
  {
    "text": "and or nodes are providing your fan out",
    "start": "594399",
    "end": "596640"
  },
  {
    "text": "expressions",
    "start": "596640",
    "end": "597440"
  },
  {
    "text": "so we start thinking about this whole",
    "start": "597440",
    "end": "599519"
  },
  {
    "text": "thing as a way",
    "start": "599519",
    "end": "601120"
  },
  {
    "text": "to bring in some of the richness that",
    "start": "601120",
    "end": "604160"
  },
  {
    "text": "says park has in terms of its map flat",
    "start": "604160",
    "end": "607040"
  },
  {
    "text": "map and distributed data sets",
    "start": "607040",
    "end": "608959"
  },
  {
    "text": "which is a far richer data primitives",
    "start": "608959",
    "end": "612320"
  },
  {
    "text": "that smart is providing",
    "start": "612320",
    "end": "613839"
  },
  {
    "text": "whereas there is a lot of object level",
    "start": "613839",
    "end": "616480"
  },
  {
    "text": "primitives and sharing of objects that",
    "start": "616480",
    "end": "618320"
  },
  {
    "text": "is being provided by",
    "start": "618320",
    "end": "619839"
  },
  {
    "text": "so how do we sort of combine these two",
    "start": "619839",
    "end": "621680"
  },
  {
    "text": "primitives and",
    "start": "621680",
    "end": "622959"
  },
  {
    "text": "enable the scaling of these data",
    "start": "622959",
    "end": "625519"
  },
  {
    "text": "processing workflows",
    "start": "625519",
    "end": "626720"
  },
  {
    "text": "or these pipelines for ml tasks",
    "start": "626720",
    "end": "631120"
  },
  {
    "start": "630000",
    "end": "718000"
  },
  {
    "text": "so just to give a teaser when we",
    "start": "631360",
    "end": "633760"
  },
  {
    "text": "implemented",
    "start": "633760",
    "end": "635360"
  },
  {
    "text": "a very simple pipeline in this case we",
    "start": "635360",
    "end": "637920"
  },
  {
    "text": "took a you know simple pre-processing",
    "start": "637920",
    "end": "639519"
  },
  {
    "text": "step it was in fact a kaggle competition",
    "start": "639519",
    "end": "642000"
  },
  {
    "text": "that we",
    "start": "642000",
    "end": "642480"
  },
  {
    "text": "you know took this particular",
    "start": "642480",
    "end": "644480"
  },
  {
    "text": "implementation that won this tackle",
    "start": "644480",
    "end": "646079"
  },
  {
    "text": "competition",
    "start": "646079",
    "end": "647360"
  },
  {
    "text": "it was an exploration that was being",
    "start": "647360",
    "end": "649040"
  },
  {
    "text": "done across multiple",
    "start": "649040",
    "end": "650480"
  },
  {
    "text": "different models and in this case it was",
    "start": "650480",
    "end": "653279"
  },
  {
    "text": "between random forest gradient boost and",
    "start": "653279",
    "end": "655360"
  },
  {
    "text": "decision tree",
    "start": "655360",
    "end": "656560"
  },
  {
    "text": "we took that pipeline and a scalar",
    "start": "656560",
    "end": "658640"
  },
  {
    "text": "pipeline",
    "start": "658640",
    "end": "659600"
  },
  {
    "text": "and we basically implemented the same",
    "start": "659600",
    "end": "662079"
  },
  {
    "text": "sql and pipeline",
    "start": "662079",
    "end": "663360"
  },
  {
    "text": "using our primitives and and that's what",
    "start": "663360",
    "end": "665760"
  },
  {
    "text": "you see below here",
    "start": "665760",
    "end": "666959"
  },
  {
    "text": "so the top is your sklearn pipeline and",
    "start": "666959",
    "end": "669120"
  },
  {
    "text": "the bottom is using",
    "start": "669120",
    "end": "670480"
  },
  {
    "text": "our pipeline approach with the ray as a",
    "start": "670480",
    "end": "672320"
  },
  {
    "text": "batten what we observed was",
    "start": "672320",
    "end": "674959"
  },
  {
    "text": "a simple preliminary analysis showed us",
    "start": "674959",
    "end": "677120"
  },
  {
    "text": "2x3 up",
    "start": "677120",
    "end": "678240"
  },
  {
    "text": "and that's right out of the box and",
    "start": "678240",
    "end": "679600"
  },
  {
    "text": "we've tried it out multiple different",
    "start": "679600",
    "end": "681040"
  },
  {
    "text": "data sets and",
    "start": "681040",
    "end": "682399"
  },
  {
    "text": "of course the larger the amount of fan",
    "start": "682399",
    "end": "684560"
  },
  {
    "text": "out the more scaling that we do get",
    "start": "684560",
    "end": "686959"
  },
  {
    "text": "but the point here is 2x is a",
    "start": "686959",
    "end": "689839"
  },
  {
    "text": "significant speed up",
    "start": "689839",
    "end": "691120"
  },
  {
    "text": "if ideally you would like to expect a 3x",
    "start": "691120",
    "end": "693120"
  },
  {
    "text": "speed up but i think",
    "start": "693120",
    "end": "694160"
  },
  {
    "text": "given this data set size and",
    "start": "694160",
    "end": "696079"
  },
  {
    "text": "amortization and sharing",
    "start": "696079",
    "end": "698079"
  },
  {
    "text": "it does reduce the amount of speed up so",
    "start": "698079",
    "end": "701200"
  },
  {
    "text": "we have",
    "start": "701200",
    "end": "701760"
  },
  {
    "text": "sort of looking at you know looking at",
    "start": "701760",
    "end": "703600"
  },
  {
    "text": "other kinds of pipelines as well we have",
    "start": "703600",
    "end": "705519"
  },
  {
    "text": "seen",
    "start": "705519",
    "end": "706079"
  },
  {
    "text": "speed ups of as much as atex in certain",
    "start": "706079",
    "end": "708800"
  },
  {
    "text": "you know cross validation tasks which",
    "start": "708800",
    "end": "711920"
  },
  {
    "text": "i don't have an example right now but",
    "start": "711920",
    "end": "713600"
  },
  {
    "text": "those are some things that we have",
    "start": "713600",
    "end": "715360"
  },
  {
    "text": "been looking at further",
    "start": "715360",
    "end": "718560"
  },
  {
    "text": "so what where are we right now i mean if",
    "start": "719519",
    "end": "721600"
  },
  {
    "text": "you look at think about that if i want",
    "start": "721600",
    "end": "723200"
  },
  {
    "text": "to take",
    "start": "723200",
    "end": "723600"
  },
  {
    "text": "you know our pipeline implementation",
    "start": "723600",
    "end": "725839"
  },
  {
    "text": "that we have currently",
    "start": "725839",
    "end": "727040"
  },
  {
    "text": "sitting on top of native spark and look",
    "start": "727040",
    "end": "729279"
  },
  {
    "text": "at the comparison with some of the key",
    "start": "729279",
    "end": "731920"
  },
  {
    "text": "pipelines out there so if you look at",
    "start": "731920",
    "end": "734079"
  },
  {
    "text": "something like air flow",
    "start": "734079",
    "end": "735760"
  },
  {
    "text": "and you know and queue flow and apache",
    "start": "735760",
    "end": "738480"
  },
  {
    "text": "spark they do provide of course task",
    "start": "738480",
    "end": "740320"
  },
  {
    "text": "level parallelism",
    "start": "740320",
    "end": "741680"
  },
  {
    "text": "which sk-learn is missing",
    "start": "741680",
    "end": "745200"
  },
  {
    "text": "i say sk learn is missing even though",
    "start": "745200",
    "end": "747360"
  },
  {
    "text": "you know there is some",
    "start": "747360",
    "end": "748399"
  },
  {
    "text": "some components of sk learn which does",
    "start": "748399",
    "end": "750320"
  },
  {
    "text": "provide a parallel back end",
    "start": "750320",
    "end": "751920"
  },
  {
    "text": "where you can provide it using job lib",
    "start": "751920",
    "end": "754399"
  },
  {
    "text": "but",
    "start": "754399",
    "end": "754959"
  },
  {
    "text": "it still does take a lot of effort for",
    "start": "754959",
    "end": "757680"
  },
  {
    "text": "somebody to use it so",
    "start": "757680",
    "end": "759120"
  },
  {
    "text": "here we're talking about you know hey",
    "start": "759120",
    "end": "760720"
  },
  {
    "text": "how can i do parallelism",
    "start": "760720",
    "end": "762880"
  },
  {
    "text": "in a very simple fashion leveraging the",
    "start": "762880",
    "end": "765120"
  },
  {
    "text": "task and actor",
    "start": "765120",
    "end": "767440"
  },
  {
    "text": "you know components that ray provides",
    "start": "767440",
    "end": "770639"
  },
  {
    "text": "then there's a whole data parallelism",
    "start": "770639",
    "end": "772480"
  },
  {
    "text": "which is very similar to what spark does",
    "start": "772480",
    "end": "774959"
  },
  {
    "text": "so because we are using this whole",
    "start": "774959",
    "end": "776720"
  },
  {
    "text": "notion of this list of objects and",
    "start": "776720",
    "end": "778560"
  },
  {
    "text": "object references",
    "start": "778560",
    "end": "779760"
  },
  {
    "text": "we are able to provide a certain amount",
    "start": "779760",
    "end": "781360"
  },
  {
    "text": "of data parallelism",
    "start": "781360",
    "end": "782959"
  },
  {
    "text": "which is not as rich as what spark is",
    "start": "782959",
    "end": "786160"
  },
  {
    "text": "providing but still",
    "start": "786160",
    "end": "787200"
  },
  {
    "text": "allows us to do a lot of the ml tasks in",
    "start": "787200",
    "end": "790160"
  },
  {
    "text": "a very clean manner",
    "start": "790160",
    "end": "792000"
  },
  {
    "text": "and then the other interesting aspect is",
    "start": "792000",
    "end": "793760"
  },
  {
    "text": "of course the and or graphs",
    "start": "793760",
    "end": "795600"
  },
  {
    "text": "which enable you to introduce some of",
    "start": "795600",
    "end": "798079"
  },
  {
    "text": "these nodes in between",
    "start": "798079",
    "end": "799440"
  },
  {
    "text": "where i can say hey you know what i want",
    "start": "799440",
    "end": "801040"
  },
  {
    "text": "to take inputs from these p4 different",
    "start": "801040",
    "end": "803120"
  },
  {
    "text": "nodes combine them up",
    "start": "803120",
    "end": "804399"
  },
  {
    "text": "match them up using something like a",
    "start": "804399",
    "end": "805920"
  },
  {
    "text": "feature union and then send it every",
    "start": "805920",
    "end": "807920"
  },
  {
    "text": "time",
    "start": "807920",
    "end": "808320"
  },
  {
    "text": "and all of these feature unions can be",
    "start": "808320",
    "end": "810079"
  },
  {
    "text": "scaled because ultimately the",
    "start": "810079",
    "end": "812079"
  },
  {
    "text": "invariant that we keep is these list of",
    "start": "812079",
    "end": "814959"
  },
  {
    "text": "object references as input output",
    "start": "814959",
    "end": "817600"
  },
  {
    "text": "then of course the computational unit is",
    "start": "817600",
    "end": "819440"
  },
  {
    "text": "very critical if you start thinking",
    "start": "819440",
    "end": "821279"
  },
  {
    "text": "about you know where are we operating",
    "start": "821279",
    "end": "823040"
  },
  {
    "text": "and this is why i go back to the",
    "start": "823040",
    "end": "824720"
  },
  {
    "text": "original point of saying that",
    "start": "824720",
    "end": "826160"
  },
  {
    "text": "we need to think about pipelines from",
    "start": "826160",
    "end": "828800"
  },
  {
    "text": "being natively on top of freight",
    "start": "828800",
    "end": "830800"
  },
  {
    "text": "so how can i take razor platform use the",
    "start": "830800",
    "end": "833199"
  },
  {
    "text": "very native primitives",
    "start": "833199",
    "end": "834639"
  },
  {
    "text": "which is your you know actors tasks and",
    "start": "834639",
    "end": "837519"
  },
  {
    "text": "then",
    "start": "837519",
    "end": "837920"
  },
  {
    "text": "also the distributed object storage and",
    "start": "837920",
    "end": "839839"
  },
  {
    "text": "then be able to use that platform",
    "start": "839839",
    "end": "842000"
  },
  {
    "text": "for scaling that so the computational",
    "start": "842000",
    "end": "844240"
  },
  {
    "text": "unit becomes a python or a java function",
    "start": "844240",
    "end": "846959"
  },
  {
    "text": "and unlike say things like tube flow",
    "start": "846959",
    "end": "849279"
  },
  {
    "text": "where container is a computational unit",
    "start": "849279",
    "end": "852000"
  },
  {
    "text": "then the other aspect that we have been",
    "start": "852000",
    "end": "853600"
  },
  {
    "text": "sort of thinking about and which is",
    "start": "853600",
    "end": "854959"
  },
  {
    "text": "realizable again",
    "start": "854959",
    "end": "856079"
  },
  {
    "text": "in in the in a real-life platform is",
    "start": "856079",
    "end": "858160"
  },
  {
    "text": "immutability of that",
    "start": "858160",
    "end": "859839"
  },
  {
    "text": "so you could potentially think about",
    "start": "859839",
    "end": "863360"
  },
  {
    "text": "an auto ml kind of a scenario where you",
    "start": "863360",
    "end": "866399"
  },
  {
    "text": "have explored a bunch of pipelines to a",
    "start": "866399",
    "end": "867920"
  },
  {
    "text": "certain stage and then suddenly the data",
    "start": "867920",
    "end": "869839"
  },
  {
    "text": "scientist realizes that aha you know",
    "start": "869839",
    "end": "871839"
  },
  {
    "text": "what i need to add a new",
    "start": "871839",
    "end": "873600"
  },
  {
    "text": "between a classifier or a new node in",
    "start": "873600",
    "end": "877120"
  },
  {
    "text": "there",
    "start": "877120",
    "end": "877760"
  },
  {
    "text": "so that it can be explored further we",
    "start": "877760",
    "end": "880320"
  },
  {
    "text": "would",
    "start": "880320",
    "end": "881199"
  },
  {
    "text": "by design enable the addition of new",
    "start": "881199",
    "end": "884079"
  },
  {
    "text": "nodes to the unexecuted portions of the",
    "start": "884079",
    "end": "886399"
  },
  {
    "text": "pipelines that makes immutability of the",
    "start": "886399",
    "end": "888399"
  },
  {
    "text": "data",
    "start": "888399",
    "end": "888880"
  },
  {
    "text": "possible so with that sort of you know",
    "start": "888880",
    "end": "891920"
  },
  {
    "start": "890000",
    "end": "1018000"
  },
  {
    "text": "where are we today",
    "start": "891920",
    "end": "893279"
  },
  {
    "text": "we are at a place where you know we are",
    "start": "893279",
    "end": "896160"
  },
  {
    "text": "basically having initial implementation",
    "start": "896160",
    "end": "898160"
  },
  {
    "text": "that we're working on uh we do have a",
    "start": "898160",
    "end": "900720"
  },
  {
    "text": "proposal that is",
    "start": "900720",
    "end": "902079"
  },
  {
    "text": "out there with uh the ray and the oss",
    "start": "902079",
    "end": "904320"
  },
  {
    "text": "community",
    "start": "904320",
    "end": "905199"
  },
  {
    "text": "uh that we are discussing on how we can",
    "start": "905199",
    "end": "906959"
  },
  {
    "text": "contribute some of this code",
    "start": "906959",
    "end": "908480"
  },
  {
    "text": "into the open source uh we're also",
    "start": "908480",
    "end": "910639"
  },
  {
    "text": "thinking about other kinds of strategies",
    "start": "910639",
    "end": "912720"
  },
  {
    "text": "things like you know different kinds of",
    "start": "912720",
    "end": "914160"
  },
  {
    "text": "graph traversals and pipeline traversals",
    "start": "914160",
    "end": "916880"
  },
  {
    "text": "so that you can explore pipelines in",
    "start": "916880",
    "end": "919199"
  },
  {
    "text": "different ways",
    "start": "919199",
    "end": "920399"
  },
  {
    "text": "uh we're looking at early stopping",
    "start": "920399",
    "end": "921839"
  },
  {
    "text": "criteria maybe you want to say that this",
    "start": "921839",
    "end": "923760"
  },
  {
    "text": "pipeline has you know executed for",
    "start": "923760",
    "end": "926160"
  },
  {
    "text": "a certain amount of time or other",
    "start": "926160",
    "end": "928160"
  },
  {
    "text": "criteria that you might say hey you know",
    "start": "928160",
    "end": "930079"
  },
  {
    "text": "what i got 90",
    "start": "930079",
    "end": "931360"
  },
  {
    "text": "accuracy i don't need to go any further",
    "start": "931360",
    "end": "933040"
  },
  {
    "text": "than that because that's all i need for",
    "start": "933040",
    "end": "934800"
  },
  {
    "text": "my business problem",
    "start": "934800",
    "end": "936480"
  },
  {
    "text": "and of course as i talked about",
    "start": "936480",
    "end": "938079"
  },
  {
    "text": "mutability of execution pipelines",
    "start": "938079",
    "end": "941759"
  },
  {
    "text": "and with that i'll just end with a short",
    "start": "941759",
    "end": "944880"
  },
  {
    "text": "blurb on saying that there are two other",
    "start": "944880",
    "end": "947279"
  },
  {
    "text": "talks which are",
    "start": "947279",
    "end": "948320"
  },
  {
    "text": "very much related to the pipelines",
    "start": "948320",
    "end": "949839"
  },
  {
    "text": "concept one is of course",
    "start": "949839",
    "end": "951920"
  },
  {
    "text": "taking these pipelines being able to run",
    "start": "951920",
    "end": "954560"
  },
  {
    "text": "on top of ray",
    "start": "954560",
    "end": "955680"
  },
  {
    "text": "in open data hub which is basically red",
    "start": "955680",
    "end": "958240"
  },
  {
    "text": "hat's open shift based platform",
    "start": "958240",
    "end": "960160"
  },
  {
    "text": "for ai and the other is an application",
    "start": "960160",
    "end": "963519"
  },
  {
    "text": "level which is",
    "start": "963519",
    "end": "965279"
  },
  {
    "text": "coming from again another team member",
    "start": "965279",
    "end": "967279"
  },
  {
    "text": "the first one is coming from eric at",
    "start": "967279",
    "end": "968880"
  },
  {
    "text": "lanson in",
    "start": "968880",
    "end": "969839"
  },
  {
    "text": "red hat and the second one is coming",
    "start": "969839",
    "end": "971279"
  },
  {
    "text": "from lim song 2. looking at",
    "start": "971279",
    "end": "974000"
  },
  {
    "text": "processing very large volumes of data in",
    "start": "974000",
    "end": "976160"
  },
  {
    "text": "this context we are looking at earth",
    "start": "976160",
    "end": "977839"
  },
  {
    "text": "science data",
    "start": "977839",
    "end": "979040"
  },
  {
    "text": "specifically satellite imagery how do we",
    "start": "979040",
    "end": "981440"
  },
  {
    "text": "leverage",
    "start": "981440",
    "end": "982079"
  },
  {
    "text": "unsupervised deep learning and combined",
    "start": "982079",
    "end": "984480"
  },
  {
    "text": "with of course ray and core award",
    "start": "984480",
    "end": "986399"
  },
  {
    "text": "and use the pipeline concept to be able",
    "start": "986399",
    "end": "988800"
  },
  {
    "text": "to",
    "start": "988800",
    "end": "989680"
  },
  {
    "text": "clean up the data to be able to create",
    "start": "989680",
    "end": "991440"
  },
  {
    "text": "feature vectors and then",
    "start": "991440",
    "end": "993600"
  },
  {
    "text": "go down the pipeline in understanding",
    "start": "993600",
    "end": "995839"
  },
  {
    "text": "you know what is uh",
    "start": "995839",
    "end": "996800"
  },
  {
    "text": "what can we identify what was",
    "start": "996800",
    "end": "998240"
  },
  {
    "text": "interesting about um",
    "start": "998240",
    "end": "1000720"
  },
  {
    "text": "about these different kinds of images",
    "start": "1000720",
    "end": "1002720"
  },
  {
    "text": "and of course i'll",
    "start": "1002720",
    "end": "1003920"
  },
  {
    "text": "you know leave it here because there's a",
    "start": "1003920",
    "end": "1005519"
  },
  {
    "text": "lot more depth that the people",
    "start": "1005519",
    "end": "1007680"
  },
  {
    "text": "the team will go into more detail in",
    "start": "1007680",
    "end": "1009600"
  },
  {
    "text": "other parts",
    "start": "1009600",
    "end": "1011199"
  },
  {
    "text": "and with that i think i'm open for q and",
    "start": "1011199",
    "end": "1013600"
  },
  {
    "text": "a at this point",
    "start": "1013600",
    "end": "1020160"
  }
]