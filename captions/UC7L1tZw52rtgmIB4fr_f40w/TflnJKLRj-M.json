[
  {
    "text": "thank you so much to the ray community",
    "start": "3520",
    "end": "5520"
  },
  {
    "text": "the linux foundation and any scale for",
    "start": "5520",
    "end": "7359"
  },
  {
    "text": "giving me the opportunity to speak to",
    "start": "7359",
    "end": "8960"
  },
  {
    "text": "you today",
    "start": "8960",
    "end": "11280"
  },
  {
    "text": "it has been almost 13 years since i took",
    "start": "11280",
    "end": "13679"
  },
  {
    "text": "my first steps as a python programmer",
    "start": "13679",
    "end": "15679"
  },
  {
    "text": "and started building a personal data",
    "start": "15679",
    "end": "17199"
  },
  {
    "text": "analysis toolkit",
    "start": "17199",
    "end": "18560"
  },
  {
    "text": "that would evolve into the python pandas",
    "start": "18560",
    "end": "20800"
  },
  {
    "text": "project",
    "start": "20800",
    "end": "22160"
  },
  {
    "text": "since then i've been involved in a",
    "start": "22160",
    "end": "23600"
  },
  {
    "text": "number of other projects which",
    "start": "23600",
    "end": "25439"
  },
  {
    "text": "superficially",
    "start": "25439",
    "end": "26400"
  },
  {
    "text": "may seem loosely related to each other",
    "start": "26400",
    "end": "29199"
  },
  {
    "text": "but which are",
    "start": "29199",
    "end": "30320"
  },
  {
    "text": "all part of a larger technology vision",
    "start": "30320",
    "end": "32320"
  },
  {
    "text": "about empowering data science",
    "start": "32320",
    "end": "34000"
  },
  {
    "text": "practitioners",
    "start": "34000",
    "end": "35120"
  },
  {
    "text": "which i plan to continue to pursue well",
    "start": "35120",
    "end": "37440"
  },
  {
    "text": "into the future",
    "start": "37440",
    "end": "39520"
  },
  {
    "text": "over the last decade with the help of an",
    "start": "39520",
    "end": "41440"
  },
  {
    "text": "amazing group of maintainers and",
    "start": "41440",
    "end": "42879"
  },
  {
    "text": "contributors pandas has become one of",
    "start": "42879",
    "end": "44960"
  },
  {
    "text": "the world's most widely used data tools",
    "start": "44960",
    "end": "47920"
  },
  {
    "text": "i never could have imagined that such a",
    "start": "47920",
    "end": "49360"
  },
  {
    "text": "thing was possible when i was 22 years",
    "start": "49360",
    "end": "51199"
  },
  {
    "text": "old and fresh out of college",
    "start": "51199",
    "end": "53199"
  },
  {
    "text": "but it has instilled in me a passion for",
    "start": "53199",
    "end": "55440"
  },
  {
    "text": "creating open source software",
    "start": "55440",
    "end": "57280"
  },
  {
    "text": "to empower people to work better more",
    "start": "57280",
    "end": "59520"
  },
  {
    "text": "effectively with data",
    "start": "59520",
    "end": "62719"
  },
  {
    "text": "one of the reasons that i fell in love",
    "start": "63920",
    "end": "65518"
  },
  {
    "text": "with python is the feeling of",
    "start": "65519",
    "end": "67040"
  },
  {
    "text": "productivity that it gave me",
    "start": "67040",
    "end": "69360"
  },
  {
    "text": "the python blogger john d cook put it",
    "start": "69360",
    "end": "71360"
  },
  {
    "text": "this way python just gets out of my way",
    "start": "71360",
    "end": "73760"
  },
  {
    "text": "and lets me get my work done and that's",
    "start": "73760",
    "end": "76159"
  },
  {
    "text": "that's how i've always felt about",
    "start": "76159",
    "end": "77759"
  },
  {
    "text": "about the language",
    "start": "77759",
    "end": "80640"
  },
  {
    "text": "the first few years of pandas",
    "start": "81280",
    "end": "83200"
  },
  {
    "text": "development for me",
    "start": "83200",
    "end": "84479"
  },
  {
    "text": "were really about going from zero to one",
    "start": "84479",
    "end": "87280"
  },
  {
    "text": "that is",
    "start": "87280",
    "end": "88320"
  },
  {
    "text": "can we make python a viable general",
    "start": "88320",
    "end": "90320"
  },
  {
    "text": "purpose data analysis language",
    "start": "90320",
    "end": "92799"
  },
  {
    "text": "and so i was willing to write slow",
    "start": "92799",
    "end": "95040"
  },
  {
    "text": "inefficient code if it meant getting",
    "start": "95040",
    "end": "96799"
  },
  {
    "text": "something usable out the door",
    "start": "96799",
    "end": "98640"
  },
  {
    "text": "that unblocked people's use cases so",
    "start": "98640",
    "end": "101280"
  },
  {
    "text": "here you see",
    "start": "101280",
    "end": "102000"
  },
  {
    "text": "a picture of me giving the very first",
    "start": "102000",
    "end": "103759"
  },
  {
    "text": "public demo of pandas",
    "start": "103759",
    "end": "105759"
  },
  {
    "text": "in 2010 at pycon in atlanta",
    "start": "105759",
    "end": "111200"
  },
  {
    "text": "ten years ago in my uh my scipy",
    "start": "113200",
    "end": "115520"
  },
  {
    "text": "conference paper about pandas i wrote",
    "start": "115520",
    "end": "118240"
  },
  {
    "text": "we believe that in the coming years",
    "start": "118240",
    "end": "120159"
  },
  {
    "text": "there will be a great opportunity to",
    "start": "120159",
    "end": "121920"
  },
  {
    "text": "attract users in need of statistical",
    "start": "121920",
    "end": "123840"
  },
  {
    "text": "data analysis tools to python",
    "start": "123840",
    "end": "126079"
  },
  {
    "text": "who might have previously chosen r",
    "start": "126079",
    "end": "128160"
  },
  {
    "text": "matlab",
    "start": "128160",
    "end": "129200"
  },
  {
    "text": "or another research environment by",
    "start": "129200",
    "end": "131520"
  },
  {
    "text": "designing robust",
    "start": "131520",
    "end": "132640"
  },
  {
    "text": "easy-to-use data structures that cohere",
    "start": "132640",
    "end": "134959"
  },
  {
    "text": "with the rest of the scientific python",
    "start": "134959",
    "end": "136720"
  },
  {
    "text": "stack",
    "start": "136720",
    "end": "137440"
  },
  {
    "text": "we can make python a compelling choice",
    "start": "137440",
    "end": "139599"
  },
  {
    "text": "for data analysis applications",
    "start": "139599",
    "end": "142160"
  },
  {
    "text": "it might seem seem obvious to everyone",
    "start": "142160",
    "end": "144239"
  },
  {
    "text": "in retrospect",
    "start": "144239",
    "end": "145440"
  },
  {
    "text": "but it was an enormous community effort",
    "start": "145440",
    "end": "147440"
  },
  {
    "text": "to get to where we are today",
    "start": "147440",
    "end": "149120"
  },
  {
    "text": "and our work is not yet done",
    "start": "149120",
    "end": "152480"
  },
  {
    "text": "pandas of course was designed first and",
    "start": "154400",
    "end": "156720"
  },
  {
    "text": "foremost as a small data tool which is",
    "start": "156720",
    "end": "158800"
  },
  {
    "text": "to say",
    "start": "158800",
    "end": "159440"
  },
  {
    "text": "data that fits on your laptop while i",
    "start": "159440",
    "end": "162080"
  },
  {
    "text": "spent a lot of time",
    "start": "162080",
    "end": "163120"
  },
  {
    "text": "optimizing code in the early days pandas",
    "start": "163120",
    "end": "165760"
  },
  {
    "text": "only needed to be",
    "start": "165760",
    "end": "166800"
  },
  {
    "text": "fast enough or handle big enough data",
    "start": "166800",
    "end": "171840"
  },
  {
    "text": "after the scramble to make python usable",
    "start": "172400",
    "end": "174480"
  },
  {
    "text": "for data science we were left with",
    "start": "174480",
    "end": "176640"
  },
  {
    "text": "let's call it a healthy accumulation of",
    "start": "176640",
    "end": "178560"
  },
  {
    "text": "technical debt",
    "start": "178560",
    "end": "180319"
  },
  {
    "text": "as a result pandas has some well-known",
    "start": "180319",
    "end": "182159"
  },
  {
    "text": "and well-advertised performance and",
    "start": "182159",
    "end": "183760"
  },
  {
    "text": "memory use problems",
    "start": "183760",
    "end": "185760"
  },
  {
    "text": "for example i often recommend to people",
    "start": "185760",
    "end": "187760"
  },
  {
    "text": "that they have 10 times as much ram as",
    "start": "187760",
    "end": "189840"
  },
  {
    "text": "they have data to avoid",
    "start": "189840",
    "end": "191680"
  },
  {
    "text": "running out of memory which often",
    "start": "191680",
    "end": "193200"
  },
  {
    "text": "surprises people but if you've ever",
    "start": "193200",
    "end": "195280"
  },
  {
    "text": "read a 10 gigabyte csv file on your",
    "start": "195280",
    "end": "198319"
  },
  {
    "text": "laptop",
    "start": "198319",
    "end": "198879"
  },
  {
    "text": "and manage to get it to load into memory",
    "start": "198879",
    "end": "200560"
  },
  {
    "text": "you know exactly what i'm talking about",
    "start": "200560",
    "end": "203360"
  },
  {
    "text": "but the project has become wildly",
    "start": "203360",
    "end": "205360"
  },
  {
    "text": "successful anyway",
    "start": "205360",
    "end": "206480"
  },
  {
    "text": "perhaps in part because most of its",
    "start": "206480",
    "end": "208080"
  },
  {
    "text": "users data isn't all that big",
    "start": "208080",
    "end": "211040"
  },
  {
    "text": "about seven years ago at pi data nyc",
    "start": "211040",
    "end": "215200"
  },
  {
    "text": "uh which i think was in just about just",
    "start": "215200",
    "end": "217840"
  },
  {
    "text": "about seven years ago",
    "start": "217840",
    "end": "219599"
  },
  {
    "text": "i gave a talk provocatively titled 10",
    "start": "219599",
    "end": "221920"
  },
  {
    "text": "things i hate about pandas",
    "start": "221920",
    "end": "224080"
  },
  {
    "text": "it was a partial explanation of some of",
    "start": "224080",
    "end": "226000"
  },
  {
    "text": "the social and technical reasons",
    "start": "226000",
    "end": "228080"
  },
  {
    "text": "why pandas is not as fast or as",
    "start": "228080",
    "end": "230080"
  },
  {
    "text": "efficient as it could be",
    "start": "230080",
    "end": "233200"
  },
  {
    "text": "the talk could be summarized uh",
    "start": "233439",
    "end": "235439"
  },
  {
    "text": "essentially",
    "start": "235439",
    "end": "236560"
  },
  {
    "text": "that pandas was not designed like a",
    "start": "236560",
    "end": "239120"
  },
  {
    "text": "database and was",
    "start": "239120",
    "end": "240000"
  },
  {
    "text": "not built by individuals namely people",
    "start": "240000",
    "end": "243040"
  },
  {
    "text": "like myself",
    "start": "243040",
    "end": "244560"
  },
  {
    "text": "with a background in database systems",
    "start": "244560",
    "end": "248239"
  },
  {
    "text": "there are various shortcomings in pandas",
    "start": "248239",
    "end": "251040"
  },
  {
    "text": "that you may be aware of",
    "start": "251040",
    "end": "252239"
  },
  {
    "text": "for example most of its algorithms are",
    "start": "252239",
    "end": "254720"
  },
  {
    "text": "single threaded",
    "start": "254720",
    "end": "255920"
  },
  {
    "text": "and do and don't make extensive use of",
    "start": "255920",
    "end": "258079"
  },
  {
    "text": "modern cpu features like",
    "start": "258079",
    "end": "259840"
  },
  {
    "text": "like cmd another problem is that pandas",
    "start": "259840",
    "end": "262960"
  },
  {
    "text": "requires all of its",
    "start": "262960",
    "end": "264240"
  },
  {
    "text": "all of its data to be ram resident so",
    "start": "264240",
    "end": "266800"
  },
  {
    "text": "that means that when you want to process",
    "start": "266800",
    "end": "269040"
  },
  {
    "text": "a data set you have to load the entire",
    "start": "269040",
    "end": "271600"
  },
  {
    "text": "the entire data set into your computer's",
    "start": "271600",
    "end": "273440"
  },
  {
    "text": "ram before it can be processed",
    "start": "273440",
    "end": "275280"
  },
  {
    "text": "and so if your data doesn't fit into",
    "start": "275280",
    "end": "276720"
  },
  {
    "text": "memory you can't you can't do the work",
    "start": "276720",
    "end": "280160"
  },
  {
    "text": "another issue is the way that pandas",
    "start": "280160",
    "end": "281840"
  },
  {
    "text": "represents non-numeric data",
    "start": "281840",
    "end": "283520"
  },
  {
    "text": "especially strings is not very efficient",
    "start": "283520",
    "end": "286160"
  },
  {
    "text": "though some work is currently underway",
    "start": "286160",
    "end": "287759"
  },
  {
    "text": "to fix that",
    "start": "287759",
    "end": "288880"
  },
  {
    "text": "and one of the reasons it's been",
    "start": "288880",
    "end": "290000"
  },
  {
    "text": "difficult to fix some of the issues with",
    "start": "290000",
    "end": "292479"
  },
  {
    "text": "non-numeric data is because pandas",
    "start": "292479",
    "end": "294479"
  },
  {
    "text": "was designed on purpose with tight",
    "start": "294479",
    "end": "297440"
  },
  {
    "text": "coupling",
    "start": "297440",
    "end": "298479"
  },
  {
    "text": "to numpy which is very focused on on",
    "start": "298479",
    "end": "301039"
  },
  {
    "text": "numeric data",
    "start": "301039",
    "end": "303840"
  },
  {
    "text": "with this said something that has been",
    "start": "304479",
    "end": "306479"
  },
  {
    "text": "concerning to me in recent years",
    "start": "306479",
    "end": "308720"
  },
  {
    "text": "is is the or the approaches that are",
    "start": "308720",
    "end": "311600"
  },
  {
    "text": "being taken to scale pandas or to make",
    "start": "311600",
    "end": "313680"
  },
  {
    "text": "pandas work",
    "start": "313680",
    "end": "314880"
  },
  {
    "text": "on big data and so i'm going to be",
    "start": "314880",
    "end": "316400"
  },
  {
    "text": "talking about about this for for much of",
    "start": "316400",
    "end": "318960"
  },
  {
    "text": "the rest of the talk",
    "start": "318960",
    "end": "321680"
  },
  {
    "text": "indeed there have been great advances in",
    "start": "322320",
    "end": "324080"
  },
  {
    "text": "making distributed computing easier in",
    "start": "324080",
    "end": "326080"
  },
  {
    "text": "python",
    "start": "326080",
    "end": "327120"
  },
  {
    "text": "we've made just about everything else",
    "start": "327120",
    "end": "328479"
  },
  {
    "text": "easy in python so why should programming",
    "start": "328479",
    "end": "330320"
  },
  {
    "text": "a cluster be any different",
    "start": "330320",
    "end": "333600"
  },
  {
    "text": "it's important to note that imperfect",
    "start": "333680",
    "end": "335440"
  },
  {
    "text": "scalability is better than no",
    "start": "335440",
    "end": "337199"
  },
  {
    "text": "scalability",
    "start": "337199",
    "end": "338000"
  },
  {
    "text": "so if we can scale canvas with the tools",
    "start": "338000",
    "end": "340320"
  },
  {
    "text": "than we have",
    "start": "340320",
    "end": "341280"
  },
  {
    "text": "then we absolutely should",
    "start": "341280",
    "end": "344560"
  },
  {
    "text": "before getting into into the specifics",
    "start": "345919",
    "end": "348880"
  },
  {
    "text": "of the concerns that i have",
    "start": "348880",
    "end": "350320"
  },
  {
    "text": "i want to take a step back and emphasize",
    "start": "350320",
    "end": "352400"
  },
  {
    "text": "how big data systems work",
    "start": "352400",
    "end": "354320"
  },
  {
    "text": "since only so much data can be processed",
    "start": "354320",
    "end": "356560"
  },
  {
    "text": "on a single machine",
    "start": "356560",
    "end": "357600"
  },
  {
    "text": "or a single node in a reasonable amount",
    "start": "357600",
    "end": "359919"
  },
  {
    "text": "of time",
    "start": "359919",
    "end": "360800"
  },
  {
    "text": "we have to break up large tasks into",
    "start": "360800",
    "end": "362639"
  },
  {
    "text": "smaller tasks that can be performed in",
    "start": "362639",
    "end": "364639"
  },
  {
    "text": "parallel across a cluster of machines",
    "start": "364639",
    "end": "367600"
  },
  {
    "text": "when we turn a single node problem into",
    "start": "367600",
    "end": "369520"
  },
  {
    "text": "a multi-node problem",
    "start": "369520",
    "end": "371039"
  },
  {
    "text": "we don't necessarily obtain one-to-one",
    "start": "371039",
    "end": "373759"
  },
  {
    "text": "or linear scalability",
    "start": "373759",
    "end": "376160"
  },
  {
    "text": "in other words 100 machines won't be",
    "start": "376160",
    "end": "378240"
  },
  {
    "text": "able to process 100 units of data",
    "start": "378240",
    "end": "380720"
  },
  {
    "text": "in the same amount of time that a single",
    "start": "380720",
    "end": "382560"
  },
  {
    "text": "machine can process one unit of data",
    "start": "382560",
    "end": "385280"
  },
  {
    "text": "so if you have 100 machines you might",
    "start": "385280",
    "end": "386960"
  },
  {
    "text": "only be able to process",
    "start": "386960",
    "end": "388400"
  },
  {
    "text": "5 or 10 or 20 times as much data",
    "start": "388400",
    "end": "392240"
  },
  {
    "text": "in the same amount of time",
    "start": "392240",
    "end": "395360"
  },
  {
    "text": "since more computing time usually means",
    "start": "395360",
    "end": "397680"
  },
  {
    "text": "more money nowadays",
    "start": "397680",
    "end": "399600"
  },
  {
    "text": "um we need to do what we can to reduce",
    "start": "399600",
    "end": "403039"
  },
  {
    "text": "the cost in the amount of money we have",
    "start": "403039",
    "end": "404800"
  },
  {
    "text": "to spend for each gigabyte each terabyte",
    "start": "404800",
    "end": "407520"
  },
  {
    "text": "each petabyte",
    "start": "407520",
    "end": "408639"
  },
  {
    "text": "that we process",
    "start": "408639",
    "end": "411759"
  },
  {
    "text": "so perfect or one-to-one scalability of",
    "start": "414080",
    "end": "416800"
  },
  {
    "text": "course",
    "start": "416800",
    "end": "417360"
  },
  {
    "text": "is impossible because distributed",
    "start": "417360",
    "end": "419680"
  },
  {
    "text": "computing introduces overhead that isn't",
    "start": "419680",
    "end": "421919"
  },
  {
    "text": "present when you're working on a single",
    "start": "421919",
    "end": "423599"
  },
  {
    "text": "node",
    "start": "423599",
    "end": "424400"
  },
  {
    "text": "for example the distributed versions of",
    "start": "424400",
    "end": "426400"
  },
  {
    "text": "many algorithms like joins or sorts need",
    "start": "426400",
    "end": "428960"
  },
  {
    "text": "to shuffle data between nodes",
    "start": "428960",
    "end": "430800"
  },
  {
    "text": "which has a cost both in data",
    "start": "430800",
    "end": "432560"
  },
  {
    "text": "serialization",
    "start": "432560",
    "end": "433840"
  },
  {
    "text": "and network transfer and there's many",
    "start": "433840",
    "end": "436319"
  },
  {
    "text": "other sources",
    "start": "436319",
    "end": "437280"
  },
  {
    "text": "sources of overhead in distributed",
    "start": "437280",
    "end": "439280"
  },
  {
    "text": "systems",
    "start": "439280",
    "end": "441759"
  },
  {
    "text": "i'm far from the first person to express",
    "start": "442319",
    "end": "444800"
  },
  {
    "text": "concern about this",
    "start": "444800",
    "end": "446319"
  },
  {
    "text": "in 2015 a group of distributed systems",
    "start": "446319",
    "end": "449280"
  },
  {
    "text": "researchers",
    "start": "449280",
    "end": "450479"
  },
  {
    "text": "which have been at microsoft research",
    "start": "450479",
    "end": "452560"
  },
  {
    "text": "published a somewhat incendiary paper",
    "start": "452560",
    "end": "454800"
  },
  {
    "text": "called scalability",
    "start": "454800",
    "end": "456400"
  },
  {
    "text": "but at what cost the way that they",
    "start": "456400",
    "end": "459440"
  },
  {
    "text": "introduce the paper they say",
    "start": "459440",
    "end": "463280"
  },
  {
    "text": "that the published work on big data",
    "start": "463280",
    "end": "465039"
  },
  {
    "text": "system details their system's impressive",
    "start": "465039",
    "end": "467199"
  },
  {
    "text": "scalability",
    "start": "467199",
    "end": "468400"
  },
  {
    "text": "but few directly evaluate their absolute",
    "start": "468400",
    "end": "470879"
  },
  {
    "text": "performance against reasonable",
    "start": "470879",
    "end": "472400"
  },
  {
    "text": "benchmarks",
    "start": "472400",
    "end": "473680"
  },
  {
    "text": "to what degree are these systems truly",
    "start": "473680",
    "end": "475520"
  },
  {
    "text": "improving performance as opposed to",
    "start": "475520",
    "end": "477520"
  },
  {
    "text": "parallelizing",
    "start": "477520",
    "end": "478560"
  },
  {
    "text": "overheads that they themselves introduce",
    "start": "478560",
    "end": "482560"
  },
  {
    "text": "one of the things that they introduce in",
    "start": "482560",
    "end": "484400"
  },
  {
    "text": "the pet in the paper",
    "start": "484400",
    "end": "485599"
  },
  {
    "text": "is an attempt to measure the overhead",
    "start": "485599",
    "end": "488720"
  },
  {
    "text": "that a distributed system introduces in",
    "start": "488720",
    "end": "490960"
  },
  {
    "text": "order to obtain",
    "start": "490960",
    "end": "492479"
  },
  {
    "text": "a scalability so they call this cost",
    "start": "492479",
    "end": "494800"
  },
  {
    "text": "which is",
    "start": "494800",
    "end": "495680"
  },
  {
    "text": "the configuration that outperforms a",
    "start": "495680",
    "end": "497840"
  },
  {
    "text": "single thread",
    "start": "497840",
    "end": "499039"
  },
  {
    "text": "they then proceeded to attempt to",
    "start": "499039",
    "end": "500560"
  },
  {
    "text": "measure the the price of scalability the",
    "start": "500560",
    "end": "503199"
  },
  {
    "text": "scalability cost",
    "start": "503199",
    "end": "504960"
  },
  {
    "text": "in a number of different big data",
    "start": "504960",
    "end": "506720"
  },
  {
    "text": "systems and what they found is that in",
    "start": "506720",
    "end": "508960"
  },
  {
    "text": "many cases it takes quite",
    "start": "508960",
    "end": "510879"
  },
  {
    "text": "quite impressive configurations to",
    "start": "510879",
    "end": "513760"
  },
  {
    "text": "outperform",
    "start": "513760",
    "end": "515039"
  },
  {
    "text": "a well-implemented single-threaded",
    "start": "515039",
    "end": "517120"
  },
  {
    "text": "implementation of many algorithms",
    "start": "517120",
    "end": "521839"
  },
  {
    "text": "so paul baron who used to be at",
    "start": "521839",
    "end": "523360"
  },
  {
    "text": "microsoft research is now at google",
    "start": "523360",
    "end": "525519"
  },
  {
    "text": "um said this quote which is which is in",
    "start": "525519",
    "end": "528160"
  },
  {
    "text": "the uh",
    "start": "528160",
    "end": "529040"
  },
  {
    "text": "which is in this paper you can have a",
    "start": "529040",
    "end": "531040"
  },
  {
    "text": "second computer once you've shown you",
    "start": "531040",
    "end": "532640"
  },
  {
    "text": "know how to use the first one",
    "start": "532640",
    "end": "535839"
  },
  {
    "text": "if we want to reduce the cost of",
    "start": "537920",
    "end": "539440"
  },
  {
    "text": "scalability we have to work on a few",
    "start": "539440",
    "end": "541519"
  },
  {
    "text": "different fronts",
    "start": "541519",
    "end": "543519"
  },
  {
    "text": "first of all maybe this is obvious but",
    "start": "543519",
    "end": "546640"
  },
  {
    "text": "we have to reduce the cost of accessing",
    "start": "546640",
    "end": "549279"
  },
  {
    "text": "data",
    "start": "549279",
    "end": "550000"
  },
  {
    "text": "if you can load data into your process",
    "start": "550000",
    "end": "552720"
  },
  {
    "text": "faster then you can process it faster",
    "start": "552720",
    "end": "554800"
  },
  {
    "text": "so your whole application becomes",
    "start": "554800",
    "end": "556959"
  },
  {
    "text": "becomes faster",
    "start": "556959",
    "end": "558080"
  },
  {
    "text": "and more efficient another thing we have",
    "start": "558080",
    "end": "560480"
  },
  {
    "text": "to do because big data problems are",
    "start": "560480",
    "end": "562560"
  },
  {
    "text": "composed of many small data problems",
    "start": "562560",
    "end": "565120"
  },
  {
    "text": "we have to improve single node",
    "start": "565120",
    "end": "566959"
  },
  {
    "text": "performance so if we have algorithms",
    "start": "566959",
    "end": "569279"
  },
  {
    "text": "that are not as efficient",
    "start": "569279",
    "end": "570640"
  },
  {
    "text": "as they could be or are not taking",
    "start": "570640",
    "end": "572399"
  },
  {
    "text": "advantage as well as they could be of",
    "start": "572399",
    "end": "574240"
  },
  {
    "text": "our hardware",
    "start": "574240",
    "end": "575519"
  },
  {
    "text": "we need to do to do work to get the most",
    "start": "575519",
    "end": "577839"
  },
  {
    "text": "out of the hardware",
    "start": "577839",
    "end": "579120"
  },
  {
    "text": "that we have another thing we need to do",
    "start": "579120",
    "end": "582480"
  },
  {
    "text": "is reducing communication overhead and",
    "start": "582480",
    "end": "584880"
  },
  {
    "text": "so in particular that means",
    "start": "584880",
    "end": "586640"
  },
  {
    "text": "data serialization and network transfer",
    "start": "586640",
    "end": "590800"
  },
  {
    "text": "related issues so if we can spend less",
    "start": "590800",
    "end": "593920"
  },
  {
    "text": "fewer cpu cycles converting between data",
    "start": "593920",
    "end": "596399"
  },
  {
    "text": "formats and a distributed system that",
    "start": "596399",
    "end": "598160"
  },
  {
    "text": "makes the system",
    "start": "598160",
    "end": "599760"
  },
  {
    "text": "run faster i bring this up because",
    "start": "599760",
    "end": "604160"
  },
  {
    "text": "data science tools like pandas from a",
    "start": "604160",
    "end": "606079"
  },
  {
    "text": "purely computational perspective have",
    "start": "606079",
    "end": "608160"
  },
  {
    "text": "lagged pretty far behind",
    "start": "608160",
    "end": "610000"
  },
  {
    "text": "advances in computing hardware in the",
    "start": "610000",
    "end": "611600"
  },
  {
    "text": "last decade",
    "start": "611600",
    "end": "613120"
  },
  {
    "text": "along with making it easier to do",
    "start": "613120",
    "end": "614560"
  },
  {
    "text": "distributed computing in python we must",
    "start": "614560",
    "end": "616480"
  },
  {
    "text": "also",
    "start": "616480",
    "end": "617600"
  },
  {
    "text": "improve the single node computational",
    "start": "617600",
    "end": "619519"
  },
  {
    "text": "foundation that projects like dasc and",
    "start": "619519",
    "end": "621279"
  },
  {
    "text": "ray are built on",
    "start": "621279",
    "end": "622720"
  },
  {
    "text": "it is not enough to simply use these",
    "start": "622720",
    "end": "624480"
  },
  {
    "text": "tools to run pandas on a cluster of",
    "start": "624480",
    "end": "626480"
  },
  {
    "text": "machines",
    "start": "626480",
    "end": "628959"
  },
  {
    "text": "another problem we face is that it isn't",
    "start": "629680",
    "end": "631600"
  },
  {
    "text": "always practical to write everything in",
    "start": "631600",
    "end": "633360"
  },
  {
    "text": "python",
    "start": "633360",
    "end": "634560"
  },
  {
    "text": "many of what we think of as today's big",
    "start": "634560",
    "end": "636560"
  },
  {
    "text": "data systems weren't really designed",
    "start": "636560",
    "end": "638240"
  },
  {
    "text": "with python in mind where python support",
    "start": "638240",
    "end": "640320"
  },
  {
    "text": "was bolted on later in life",
    "start": "640320",
    "end": "642079"
  },
  {
    "text": "due to popular demand going back in time",
    "start": "642079",
    "end": "646880"
  },
  {
    "text": "to the early days of hadoop",
    "start": "646880",
    "end": "648720"
  },
  {
    "text": "the native way the native way to write",
    "start": "648720",
    "end": "651279"
  },
  {
    "text": "mapreduce jobs",
    "start": "651279",
    "end": "652640"
  },
  {
    "text": "was to write them in java but you could",
    "start": "652640",
    "end": "655120"
  },
  {
    "text": "use the hadoop streaming interface",
    "start": "655120",
    "end": "657120"
  },
  {
    "text": "to write jobs in python ruby or just",
    "start": "657120",
    "end": "659519"
  },
  {
    "text": "about any programming language",
    "start": "659519",
    "end": "662000"
  },
  {
    "text": "this interface didn't even allow you to",
    "start": "662000",
    "end": "663680"
  },
  {
    "text": "use python's vectorized scientific",
    "start": "663680",
    "end": "665680"
  },
  {
    "text": "computing libraries like numpy and scipy",
    "start": "665680",
    "end": "668320"
  },
  {
    "text": "but people used it anyway even though it",
    "start": "668320",
    "end": "670480"
  },
  {
    "text": "was much slower than java because they",
    "start": "670480",
    "end": "672399"
  },
  {
    "text": "preferred the productivity benefits that",
    "start": "672399",
    "end": "674320"
  },
  {
    "text": "you get",
    "start": "674320",
    "end": "675040"
  },
  {
    "text": "by being able to program in a dynamic",
    "start": "675040",
    "end": "676800"
  },
  {
    "text": "language like python or ruby",
    "start": "676800",
    "end": "680399"
  },
  {
    "text": "this raises the question why should",
    "start": "680399",
    "end": "682399"
  },
  {
    "text": "choosing python",
    "start": "682399",
    "end": "684000"
  },
  {
    "text": "be a trade-off that that doesn't seem",
    "start": "684000",
    "end": "686160"
  },
  {
    "text": "that doesn't seem right to me we might",
    "start": "686160",
    "end": "688240"
  },
  {
    "text": "be willing to pay",
    "start": "688240",
    "end": "689600"
  },
  {
    "text": "a little bit of extra computing cost uh",
    "start": "689600",
    "end": "692160"
  },
  {
    "text": "to use python",
    "start": "692160",
    "end": "693519"
  },
  {
    "text": "but it shouldn't be an unacceptable",
    "start": "693519",
    "end": "694959"
  },
  {
    "text": "trade-off that causes",
    "start": "694959",
    "end": "697040"
  },
  {
    "text": "the price of using python to be",
    "start": "697040",
    "end": "699600"
  },
  {
    "text": "extremely high",
    "start": "699600",
    "end": "703200"
  },
  {
    "text": "by 2014 i had come to believe that the",
    "start": "703200",
    "end": "705519"
  },
  {
    "text": "python ecosystem would get",
    "start": "705519",
    "end": "707120"
  },
  {
    "text": "effectively stuck without a coordinated",
    "start": "707120",
    "end": "709120"
  },
  {
    "text": "effort to build a more modern computing",
    "start": "709120",
    "end": "711200"
  },
  {
    "text": "foundation",
    "start": "711200",
    "end": "711920"
  },
  {
    "text": "for data frame type processing and in",
    "start": "711920",
    "end": "714639"
  },
  {
    "text": "order to solve the language",
    "start": "714639",
    "end": "715839"
  },
  {
    "text": "interoperability problem we would have",
    "start": "715839",
    "end": "717600"
  },
  {
    "text": "to build alliances outside of the python",
    "start": "717600",
    "end": "719680"
  },
  {
    "text": "community",
    "start": "719680",
    "end": "720880"
  },
  {
    "text": "luckily for me there were a lot of open",
    "start": "720880",
    "end": "722560"
  },
  {
    "text": "source developers who had faced",
    "start": "722560",
    "end": "724160"
  },
  {
    "text": "similar computational problems so we",
    "start": "724160",
    "end": "726000"
  },
  {
    "text": "decided to join forces and do something",
    "start": "726000",
    "end": "728560"
  },
  {
    "text": "about it together we formed the apache",
    "start": "728560",
    "end": "731360"
  },
  {
    "text": "aero project in early 2016 with the",
    "start": "731360",
    "end": "733760"
  },
  {
    "text": "mission",
    "start": "733760",
    "end": "734240"
  },
  {
    "text": "of creating language independent",
    "start": "734240",
    "end": "736240"
  },
  {
    "text": "standards and computing tools",
    "start": "736240",
    "end": "738240"
  },
  {
    "text": "for high performance in-memory analytics",
    "start": "738240",
    "end": "740399"
  },
  {
    "text": "and data transport",
    "start": "740399",
    "end": "742160"
  },
  {
    "text": "now five years later aero has become the",
    "start": "742160",
    "end": "744560"
  },
  {
    "text": "new gold standard for columnar data",
    "start": "744560",
    "end": "746399"
  },
  {
    "text": "transport",
    "start": "746399",
    "end": "747200"
  },
  {
    "text": "data access and in-memory query",
    "start": "747200",
    "end": "749200"
  },
  {
    "text": "processing",
    "start": "749200",
    "end": "750240"
  },
  {
    "text": "with massive adoption across the data",
    "start": "750240",
    "end": "752320"
  },
  {
    "text": "systems community",
    "start": "752320",
    "end": "754720"
  },
  {
    "text": "as one example of the successes we've",
    "start": "754720",
    "end": "756480"
  },
  {
    "text": "seen nvidia has used arrow as the",
    "start": "756480",
    "end": "758880"
  },
  {
    "text": "foundation for the rapids gpu analytics",
    "start": "758880",
    "end": "761279"
  },
  {
    "text": "platform",
    "start": "761279",
    "end": "762079"
  },
  {
    "text": "and we're able to improve on industry",
    "start": "762079",
    "end": "763839"
  },
  {
    "text": "standard big data analytics benchmark",
    "start": "763839",
    "end": "765760"
  },
  {
    "text": "benchmarks by nearly 20 times measured",
    "start": "765760",
    "end": "768000"
  },
  {
    "text": "in time",
    "start": "768000",
    "end": "768959"
  },
  {
    "text": "but with one-third the amount of power",
    "start": "768959",
    "end": "770880"
  },
  {
    "text": "consumption that's on the order of a 60",
    "start": "770880",
    "end": "773279"
  },
  {
    "text": "times improvement",
    "start": "773279",
    "end": "774399"
  },
  {
    "text": "in compute efficiency",
    "start": "774399",
    "end": "777519"
  },
  {
    "text": "for me one of the things that's so",
    "start": "777839",
    "end": "779279"
  },
  {
    "text": "exciting about arrow is that our",
    "start": "779279",
    "end": "780560"
  },
  {
    "text": "computational systems can become less",
    "start": "780560",
    "end": "782560"
  },
  {
    "text": "coupled to the programming language",
    "start": "782560",
    "end": "784800"
  },
  {
    "text": "that we are using so arrow is aero",
    "start": "784800",
    "end": "787600"
  },
  {
    "text": "whether you're using python",
    "start": "787600",
    "end": "789040"
  },
  {
    "text": "java javascript rust or any other",
    "start": "789040",
    "end": "791519"
  },
  {
    "text": "programming language as long as you have",
    "start": "791519",
    "end": "793200"
  },
  {
    "text": "a library that supports",
    "start": "793200",
    "end": "795200"
  },
  {
    "text": "the aero data format paul dicks who",
    "start": "795200",
    "end": "798399"
  },
  {
    "text": "who is one of the founders of influx",
    "start": "798399",
    "end": "800000"
  },
  {
    "text": "data put it simply",
    "start": "800000",
    "end": "801760"
  },
  {
    "text": "when you use arrow your data is your api",
    "start": "801760",
    "end": "804639"
  },
  {
    "text": "and i find this concept to be really",
    "start": "804639",
    "end": "806399"
  },
  {
    "text": "compelling",
    "start": "806399",
    "end": "808000"
  },
  {
    "text": "with arrow now in context we have an",
    "start": "808000",
    "end": "810160"
  },
  {
    "text": "amazing opportunity",
    "start": "810160",
    "end": "811360"
  },
  {
    "text": "right now to work together even across",
    "start": "811360",
    "end": "813920"
  },
  {
    "text": "language borders to build a modern",
    "start": "813920",
    "end": "815440"
  },
  {
    "text": "computing foundation to power our data",
    "start": "815440",
    "end": "817360"
  },
  {
    "text": "science tools that can even be used from",
    "start": "817360",
    "end": "819199"
  },
  {
    "text": "any programming language",
    "start": "819199",
    "end": "820880"
  },
  {
    "text": "in doing so we will provide vastly more",
    "start": "820880",
    "end": "822959"
  },
  {
    "text": "efficient computational building blocks",
    "start": "822959",
    "end": "825120"
  },
  {
    "text": "to distribute computing libraries like",
    "start": "825120",
    "end": "827120"
  },
  {
    "text": "rey and das can use",
    "start": "827120",
    "end": "830000"
  },
  {
    "text": "as part of this effort we can also end",
    "start": "830000",
    "end": "831920"
  },
  {
    "text": "the pointless language wars",
    "start": "831920",
    "end": "833839"
  },
  {
    "text": "why should reading a csv file or",
    "start": "833839",
    "end": "835680"
  },
  {
    "text": "crunching a directory of parquet files",
    "start": "835680",
    "end": "837519"
  },
  {
    "text": "perform any differently",
    "start": "837519",
    "end": "838720"
  },
  {
    "text": "in python versus r it doesn't have to be",
    "start": "838720",
    "end": "841440"
  },
  {
    "text": "like that",
    "start": "841440",
    "end": "842639"
  },
  {
    "text": "we can all work together to create high",
    "start": "842639",
    "end": "844560"
  },
  {
    "text": "quality open source",
    "start": "844560",
    "end": "846240"
  },
  {
    "text": "aero based computing libraries that we",
    "start": "846240",
    "end": "848560"
  },
  {
    "text": "can all use",
    "start": "848560",
    "end": "850399"
  },
  {
    "text": "i for one am optimistic about the future",
    "start": "850399",
    "end": "852320"
  },
  {
    "text": "of data science tools",
    "start": "852320",
    "end": "853920"
  },
  {
    "text": "and hope to work with you all to make",
    "start": "853920",
    "end": "855519"
  },
  {
    "text": "this vision a reality as soon as we can",
    "start": "855519",
    "end": "858320"
  },
  {
    "text": "thanks again",
    "start": "858320",
    "end": "861360"
  }
]