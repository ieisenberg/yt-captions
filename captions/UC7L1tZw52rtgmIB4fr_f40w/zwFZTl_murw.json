[
  {
    "text": "uh thanks for attending our session",
    "start": "3799",
    "end": "6000"
  },
  {
    "text": "today uh my name is harvish Sita Raman",
    "start": "6000",
    "end": "9480"
  },
  {
    "text": "I'm an engineering manager at AWS and",
    "start": "9480",
    "end": "12480"
  },
  {
    "text": "along with me I have Jackson Jai sacran",
    "start": "12480",
    "end": "14460"
  },
  {
    "text": "who's a principal engineer with AWS blue",
    "start": "14460",
    "end": "16859"
  },
  {
    "text": "uh today we'll be talking about building",
    "start": "16859",
    "end": "19800"
  },
  {
    "text": "an instant on serverless platform for",
    "start": "19800",
    "end": "22560"
  },
  {
    "text": "large-scale data processing using Ray",
    "start": "22560",
    "end": "26359"
  },
  {
    "text": "um on the agenda I'll be going through a",
    "start": "27060",
    "end": "29160"
  },
  {
    "text": "serverless data integration which is a",
    "start": "29160",
    "end": "31019"
  },
  {
    "text": "service that AWS glue to give you a very",
    "start": "31019",
    "end": "33480"
  },
  {
    "text": "quick primer on that we'll get into",
    "start": "33480",
    "end": "35820"
  },
  {
    "text": "python shell which is a product that's",
    "start": "35820",
    "end": "37800"
  },
  {
    "text": "there in AWS glue how it's used a bit of",
    "start": "37800",
    "end": "40320"
  },
  {
    "text": "the challenges that we have how we",
    "start": "40320",
    "end": "42180"
  },
  {
    "text": "adopted Ray and the distributed python",
    "start": "42180",
    "end": "45200"
  },
  {
    "text": "user for large scale data processing and",
    "start": "45200",
    "end": "48480"
  },
  {
    "text": "then we'll get into a bit of the",
    "start": "48480",
    "end": "49620"
  },
  {
    "text": "architecture of what the product that we",
    "start": "49620",
    "end": "51300"
  },
  {
    "text": "built and then we'll end with how we are",
    "start": "51300",
    "end": "53940"
  },
  {
    "text": "contributing back to the open source",
    "start": "53940",
    "end": "55320"
  },
  {
    "text": "community in Rey",
    "start": "55320",
    "end": "57420"
  },
  {
    "text": "so",
    "start": "57420",
    "end": "58620"
  },
  {
    "text": "a quick primer on glue so glue is a",
    "start": "58620",
    "end": "61739"
  },
  {
    "text": "serverless data integration service that",
    "start": "61739",
    "end": "64080"
  },
  {
    "text": "offers customers everything they need to",
    "start": "64080",
    "end": "66060"
  },
  {
    "text": "build a scalable and robust data",
    "start": "66060",
    "end": "67979"
  },
  {
    "text": "analytics pipeline",
    "start": "67979",
    "end": "69420"
  },
  {
    "text": "it makes it simple for customers to",
    "start": "69420",
    "end": "71460"
  },
  {
    "text": "discover prepare move and integrate data",
    "start": "71460",
    "end": "74340"
  },
  {
    "text": "from multiple sources for analytics",
    "start": "74340",
    "end": "76860"
  },
  {
    "text": "machine sir machine learning and",
    "start": "76860",
    "end": "79140"
  },
  {
    "text": "application development",
    "start": "79140",
    "end": "80759"
  },
  {
    "text": "comes with built-in connectors for",
    "start": "80759",
    "end": "82680"
  },
  {
    "text": "popular data sources",
    "start": "82680",
    "end": "84420"
  },
  {
    "text": "supports a variety of personas from",
    "start": "84420",
    "end": "87060"
  },
  {
    "text": "customers who do business users low code",
    "start": "87060",
    "end": "89759"
  },
  {
    "text": "users to Developers",
    "start": "89759",
    "end": "91380"
  },
  {
    "text": "customers can author jobs using visual",
    "start": "91380",
    "end": "94020"
  },
  {
    "text": "tools such as Blue Studio they can also",
    "start": "94020",
    "end": "98100"
  },
  {
    "text": "use interactive applications via Jupiter",
    "start": "98100",
    "end": "100200"
  },
  {
    "text": "notebooks and",
    "start": "100200",
    "end": "102720"
  },
  {
    "text": "no matter how we author your jobs Glo",
    "start": "102720",
    "end": "104939"
  },
  {
    "text": "allows you to orchestrate the system",
    "start": "104939",
    "end": "106799"
  },
  {
    "text": "provides you tools to monitor your jobs",
    "start": "106799",
    "end": "109799"
  },
  {
    "text": "and at the bottom line it gives you",
    "start": "109799",
    "end": "112680"
  },
  {
    "text": "three fundamental data processing",
    "start": "112680",
    "end": "114360"
  },
  {
    "text": "engines Apache Spark",
    "start": "114360",
    "end": "116100"
  },
  {
    "text": "python",
    "start": "116100",
    "end": "117479"
  },
  {
    "text": "and Ray",
    "start": "117479",
    "end": "118740"
  },
  {
    "text": "so for the purpose of this talk we'll be",
    "start": "118740",
    "end": "120479"
  },
  {
    "text": "going through how we went through the",
    "start": "120479",
    "end": "122280"
  },
  {
    "text": "building of the Blu-ray product and what",
    "start": "122280",
    "end": "124500"
  },
  {
    "text": "it actually offers",
    "start": "124500",
    "end": "127020"
  },
  {
    "text": "so a quick intro into python shell so",
    "start": "127020",
    "end": "130020"
  },
  {
    "text": "customers love python it's easy to get",
    "start": "130020",
    "end": "133020"
  },
  {
    "text": "started easy to use has a very rich",
    "start": "133020",
    "end": "135420"
  },
  {
    "text": "collection of data processing libraries",
    "start": "135420",
    "end": "137160"
  },
  {
    "text": "it's used across various market segments",
    "start": "137160",
    "end": "140480"
  },
  {
    "text": "the glue python shell runs jobs designed",
    "start": "140480",
    "end": "144900"
  },
  {
    "text": "for small and medium-sized ETL jobs",
    "start": "144900",
    "end": "147500"
  },
  {
    "text": "it includes built-in libraries for",
    "start": "147500",
    "end": "151920"
  },
  {
    "text": "customers so like you know query SQL",
    "start": "151920",
    "end": "154020"
  },
  {
    "text": "engines connect to data warehouses all",
    "start": "154020",
    "end": "156660"
  },
  {
    "text": "within the AWS ecosystem we bundle in",
    "start": "156660",
    "end": "159480"
  },
  {
    "text": "all of these libraries inside the",
    "start": "159480",
    "end": "160800"
  },
  {
    "text": "product",
    "start": "160800",
    "end": "162300"
  },
  {
    "text": "popularity of python continues to grow",
    "start": "162300",
    "end": "165260"
  },
  {
    "text": "but customers find it difficult",
    "start": "165260",
    "end": "167580"
  },
  {
    "text": "obviously to scale python natively",
    "start": "167580",
    "end": "169920"
  },
  {
    "text": "Beyond a single compute node",
    "start": "169920",
    "end": "172260"
  },
  {
    "text": "and this limitation makes it difficult",
    "start": "172260",
    "end": "174120"
  },
  {
    "text": "for customers to process large data sets",
    "start": "174120",
    "end": "177540"
  },
  {
    "text": "the data sets need to be split of course",
    "start": "177540",
    "end": "179879"
  },
  {
    "text": "you can use methods such as splitting",
    "start": "179879",
    "end": "181680"
  },
  {
    "text": "your large data set into smaller chunks",
    "start": "181680",
    "end": "183780"
  },
  {
    "text": "and process them using multiple jobs but",
    "start": "183780",
    "end": "186780"
  },
  {
    "text": "it obviously increases the amount of",
    "start": "186780",
    "end": "188580"
  },
  {
    "text": "operational complexity that one has to",
    "start": "188580",
    "end": "190980"
  },
  {
    "text": "manage and also it incurs slow",
    "start": "190980",
    "end": "193379"
  },
  {
    "text": "processing it's also error prone because",
    "start": "193379",
    "end": "195659"
  },
  {
    "text": "in your data pipeline if you enter",
    "start": "195659",
    "end": "197220"
  },
  {
    "text": "errors you will have to roll everything",
    "start": "197220",
    "end": "198480"
  },
  {
    "text": "back and start all over again so overall",
    "start": "198480",
    "end": "201060"
  },
  {
    "text": "complexity goes higher",
    "start": "201060",
    "end": "203400"
  },
  {
    "text": "so this is where we found Ray to be very",
    "start": "203400",
    "end": "205560"
  },
  {
    "text": "powerful with",
    "start": "205560",
    "end": "207540"
  },
  {
    "text": "I don't have to introduce Ray here to",
    "start": "207540",
    "end": "209459"
  },
  {
    "text": "this audience but with Ray you can now",
    "start": "209459",
    "end": "212099"
  },
  {
    "text": "scale your NATO python applications more",
    "start": "212099",
    "end": "214800"
  },
  {
    "text": "natively you can bring in your existing",
    "start": "214800",
    "end": "216599"
  },
  {
    "text": "NATO python code bring in your existing",
    "start": "216599",
    "end": "219659"
  },
  {
    "text": "Network python libraries and just allow",
    "start": "219659",
    "end": "222720"
  },
  {
    "text": "uh and just build a distributed cluster",
    "start": "222720",
    "end": "225420"
  },
  {
    "text": "in a multi-node environment",
    "start": "225420",
    "end": "227879"
  },
  {
    "text": "allows you to speed up your python",
    "start": "227879",
    "end": "229680"
  },
  {
    "text": "workloads to using parallel processing",
    "start": "229680",
    "end": "231780"
  },
  {
    "text": "scale your work notes to hundreds of",
    "start": "231780",
    "end": "233900"
  },
  {
    "text": "nodes and you can use all the native",
    "start": "233900",
    "end": "236819"
  },
  {
    "text": "libraries that you have in your",
    "start": "236819",
    "end": "238019"
  },
  {
    "text": "environment so it's very powerful for",
    "start": "238019",
    "end": "241280"
  },
  {
    "text": "scaling out python workloads",
    "start": "241280",
    "end": "245819"
  },
  {
    "text": "so with us with with with Blu-ray",
    "start": "245819",
    "end": "249019"
  },
  {
    "text": "uh we provide the ability to use all the",
    "start": "249019",
    "end": "252659"
  },
  {
    "text": "goodness of glue so for example you can",
    "start": "252659",
    "end": "254519"
  },
  {
    "text": "use glue studio notebooks you can use",
    "start": "254519",
    "end": "256799"
  },
  {
    "text": "sagemaker notebooks you can use a local",
    "start": "256799",
    "end": "259380"
  },
  {
    "text": "notebook you can use an idea of ID of",
    "start": "259380",
    "end": "261660"
  },
  {
    "text": "your choice",
    "start": "261660",
    "end": "263340"
  },
  {
    "text": "um and using Blue Jobs which has a fire",
    "start": "263340",
    "end": "265860"
  },
  {
    "text": "and forget jobs as subsystem customers",
    "start": "265860",
    "end": "268320"
  },
  {
    "text": "can just submit their Ray code to the",
    "start": "268320",
    "end": "270780"
  },
  {
    "text": "Blue Jobs API and the glue automatically",
    "start": "270780",
    "end": "273780"
  },
  {
    "text": "Provisions required compute resources to",
    "start": "273780",
    "end": "276180"
  },
  {
    "text": "run the job",
    "start": "276180",
    "end": "277500"
  },
  {
    "text": "it pro it Provisions the ray cluster for",
    "start": "277500",
    "end": "280259"
  },
  {
    "text": "you runs the distributed python jobs in",
    "start": "280259",
    "end": "282840"
  },
  {
    "text": "a serverless auto scaling infrastructure",
    "start": "282840",
    "end": "285620"
  },
  {
    "text": "it's not fun necessarily to go wait for",
    "start": "285620",
    "end": "288540"
  },
  {
    "text": "infrastructure to come up",
    "start": "288540",
    "end": "290040"
  },
  {
    "text": "and be ready to perform your business",
    "start": "290040",
    "end": "292080"
  },
  {
    "text": "functions and keeping infrastructure up",
    "start": "292080",
    "end": "294419"
  },
  {
    "text": "all the time is also prohibitively",
    "start": "294419",
    "end": "295979"
  },
  {
    "text": "expensive",
    "start": "295979",
    "end": "297120"
  },
  {
    "text": "so at AWS you know we're always looking",
    "start": "297120",
    "end": "298979"
  },
  {
    "text": "where to make things cheaper faster and",
    "start": "298979",
    "end": "300840"
  },
  {
    "text": "better for customers and",
    "start": "300840",
    "end": "303600"
  },
  {
    "text": "our latest Innovation is the instant on",
    "start": "303600",
    "end": "306419"
  },
  {
    "text": "analytics platform that we use for the",
    "start": "306419",
    "end": "308460"
  },
  {
    "text": "Gloria job",
    "start": "308460",
    "end": "309660"
  },
  {
    "text": "and it allows you to bring up the",
    "start": "309660",
    "end": "311280"
  },
  {
    "text": "Clusters in a matter of seconds in fact",
    "start": "311280",
    "end": "313080"
  },
  {
    "text": "for blu-ray we an entire cluster and",
    "start": "313080",
    "end": "315479"
  },
  {
    "text": "your job actually starts and a cluster",
    "start": "315479",
    "end": "317100"
  },
  {
    "text": "comes up in less than 10 seconds",
    "start": "317100",
    "end": "319139"
  },
  {
    "text": "uh",
    "start": "319139",
    "end": "320460"
  },
  {
    "text": "and given its instant on the auto",
    "start": "320460",
    "end": "322620"
  },
  {
    "text": "scaling nature of the glue job actually",
    "start": "322620",
    "end": "324720"
  },
  {
    "text": "is almost instantaneous",
    "start": "324720",
    "end": "326460"
  },
  {
    "text": "uh the analytics applications can",
    "start": "326460",
    "end": "328440"
  },
  {
    "text": "aggressively bring up and tear down",
    "start": "328440",
    "end": "330539"
  },
  {
    "text": "hundreds of workers uh based on how many",
    "start": "330539",
    "end": "333240"
  },
  {
    "text": "it needs at any given point in time",
    "start": "333240",
    "end": "335699"
  },
  {
    "text": "uh your only use you only use the",
    "start": "335699",
    "end": "338759"
  },
  {
    "text": "compute that your application needs and",
    "start": "338759",
    "end": "340740"
  },
  {
    "text": "you pay for whatever you use",
    "start": "340740",
    "end": "343440"
  },
  {
    "text": "uh",
    "start": "343440",
    "end": "345660"
  },
  {
    "text": "sorry",
    "start": "345660",
    "end": "348180"
  },
  {
    "text": "now we've also ensured you know that you",
    "start": "348180",
    "end": "349979"
  },
  {
    "text": "can use the AWS glue job and interactive",
    "start": "349979",
    "end": "352500"
  },
  {
    "text": "session Primitives as it is uh the",
    "start": "352500",
    "end": "355919"
  },
  {
    "text": "interactive session apis allows for",
    "start": "355919",
    "end": "357780"
  },
  {
    "text": "interactive exploration of the data for",
    "start": "357780",
    "end": "359699"
  },
  {
    "text": "the purpose of job development",
    "start": "359699",
    "end": "361380"
  },
  {
    "text": "and regardless of the option you use",
    "start": "361380",
    "end": "363120"
  },
  {
    "text": "your only build for the duration of the",
    "start": "363120",
    "end": "365220"
  },
  {
    "text": "compute that you use",
    "start": "365220",
    "end": "367680"
  },
  {
    "text": "and to be future ready we actually",
    "start": "367680",
    "end": "370380"
  },
  {
    "text": "launched this on AWS graviton instances",
    "start": "370380",
    "end": "373199"
  },
  {
    "text": "which are Arm based which offer a better",
    "start": "373199",
    "end": "376139"
  },
  {
    "text": "price for performance impact",
    "start": "376139",
    "end": "378960"
  },
  {
    "text": "we also wanted this to be future proof",
    "start": "378960",
    "end": "381780"
  },
  {
    "text": "in terms of we use IPv6 in the data",
    "start": "381780",
    "end": "384539"
  },
  {
    "text": "plane which allows for better scaling",
    "start": "384539",
    "end": "386280"
  },
  {
    "text": "with IP addresses so um I'll hand it",
    "start": "386280",
    "end": "388860"
  },
  {
    "text": "over to jabson now who will be going",
    "start": "388860",
    "end": "390660"
  },
  {
    "text": "through some of the architectural",
    "start": "390660",
    "end": "391620"
  },
  {
    "text": "details of the product",
    "start": "391620",
    "end": "394520"
  },
  {
    "text": "hello everyone",
    "start": "399860",
    "end": "402240"
  },
  {
    "text": "um so fundamentally glue AWS glue for",
    "start": "402240",
    "end": "404639"
  },
  {
    "text": "Ray is actually a serverless compute",
    "start": "404639",
    "end": "406560"
  },
  {
    "text": "platform",
    "start": "406560",
    "end": "407460"
  },
  {
    "text": "that provides customers the ability to",
    "start": "407460",
    "end": "410160"
  },
  {
    "text": "run python workloads without any",
    "start": "410160",
    "end": "412500"
  },
  {
    "text": "infrastructure configuration for example",
    "start": "412500",
    "end": "414660"
  },
  {
    "text": "as a customer you don't have to choose",
    "start": "414660",
    "end": "416340"
  },
  {
    "text": "the easy to flee or you basically don't",
    "start": "416340",
    "end": "418199"
  },
  {
    "text": "want to have you know an auto scaling",
    "start": "418199",
    "end": "419699"
  },
  {
    "text": "configuration right so in this",
    "start": "419699",
    "end": "422100"
  },
  {
    "text": "architecture",
    "start": "422100",
    "end": "423300"
  },
  {
    "text": "the center point is our apis right AWS",
    "start": "423300",
    "end": "426000"
  },
  {
    "text": "blue API provides the bifurcation",
    "start": "426000",
    "end": "427740"
  },
  {
    "text": "between a customer and our backup the",
    "start": "427740",
    "end": "431520"
  },
  {
    "text": "integration points that we offer to",
    "start": "431520",
    "end": "433139"
  },
  {
    "text": "customer which is on the left hand side",
    "start": "433139",
    "end": "435000"
  },
  {
    "text": "starts with a CLI a GUI for visual code",
    "start": "435000",
    "end": "438960"
  },
  {
    "text": "authoring and also integration with a",
    "start": "438960",
    "end": "441300"
  },
  {
    "text": "lot of orchestration engines like",
    "start": "441300",
    "end": "442979"
  },
  {
    "text": "airflow step functions and ending up",
    "start": "442979",
    "end": "446039"
  },
  {
    "text": "with interactive sessions like jupyter",
    "start": "446039",
    "end": "448380"
  },
  {
    "text": "notebook sessions or even you know",
    "start": "448380",
    "end": "449880"
  },
  {
    "text": "bringing your own IDE",
    "start": "449880",
    "end": "451319"
  },
  {
    "text": "now",
    "start": "451319",
    "end": "452460"
  },
  {
    "text": "when customer comes to our API and then",
    "start": "452460",
    "end": "455099"
  },
  {
    "text": "launch a workload what we give to",
    "start": "455099",
    "end": "457919"
  },
  {
    "text": "customers is basically a dedicated",
    "start": "457919",
    "end": "459680"
  },
  {
    "text": "runtime the runtime is abstracted as",
    "start": "459680",
    "end": "462900"
  },
  {
    "text": "either a job or a session jobs are",
    "start": "462900",
    "end": "465660"
  },
  {
    "text": "fundamentally for asynchronous",
    "start": "465660",
    "end": "467220"
  },
  {
    "text": "long-running workloads which are mostly",
    "start": "467220",
    "end": "470039"
  },
  {
    "text": "triggered through events or you know",
    "start": "470039",
    "end": "471660"
  },
  {
    "text": "some kind of a batch execution",
    "start": "471660",
    "end": "474060"
  },
  {
    "text": "the sessions are more towards you know",
    "start": "474060",
    "end": "476099"
  },
  {
    "text": "the interactive experience now walking",
    "start": "476099",
    "end": "478740"
  },
  {
    "text": "from the bottom in the rightmost side of",
    "start": "478740",
    "end": "481199"
  },
  {
    "text": "the picture we start off with our",
    "start": "481199",
    "end": "483120"
  },
  {
    "text": "orchestration engine the auto station",
    "start": "483120",
    "end": "485280"
  },
  {
    "text": "engine is basically the entry point",
    "start": "485280",
    "end": "487740"
  },
  {
    "text": "which takes care of a state management",
    "start": "487740",
    "end": "490080"
  },
  {
    "text": "for execution of your jobs and sessions",
    "start": "490080",
    "end": "492539"
  },
  {
    "text": "and it also takes care of any quota",
    "start": "492539",
    "end": "494819"
  },
  {
    "text": "management or you know billing and",
    "start": "494819",
    "end": "496440"
  },
  {
    "text": "metering based on the usage the",
    "start": "496440",
    "end": "498720"
  },
  {
    "text": "infrastructure at a very high level is",
    "start": "498720",
    "end": "500580"
  },
  {
    "text": "broken down into control plane and data",
    "start": "500580",
    "end": "502139"
  },
  {
    "text": "plane the control plane is responsible",
    "start": "502139",
    "end": "504120"
  },
  {
    "text": "for mainly capacity management resource",
    "start": "504120",
    "end": "506340"
  },
  {
    "text": "management",
    "start": "506340",
    "end": "507060"
  },
  {
    "text": "and the data plane is responsible for",
    "start": "507060",
    "end": "509759"
  },
  {
    "text": "security isolation and also Auto scale",
    "start": "509759",
    "end": "512120"
  },
  {
    "text": "now the auto scaling that we have",
    "start": "512120",
    "end": "514740"
  },
  {
    "text": "implemented is actually very tightly",
    "start": "514740",
    "end": "516539"
  },
  {
    "text": "integrated with the ray open source node",
    "start": "516539",
    "end": "519659"
  },
  {
    "text": "provider interface where we could drop",
    "start": "519659",
    "end": "521399"
  },
  {
    "text": "in you know our Custom Auto scaling um",
    "start": "521399",
    "end": "524700"
  },
  {
    "text": "interface in terms of the compute that",
    "start": "524700",
    "end": "527040"
  },
  {
    "text": "we provide it's arm-based IPv6 and the",
    "start": "527040",
    "end": "530580"
  },
  {
    "text": "ability that we provide is actually your",
    "start": "530580",
    "end": "532920"
  },
  {
    "text": "ability to scale your workers almost in",
    "start": "532920",
    "end": "535500"
  },
  {
    "text": "a fraction of seconds which we'll",
    "start": "535500",
    "end": "536640"
  },
  {
    "text": "actually see in the next couple of",
    "start": "536640",
    "end": "538440"
  },
  {
    "text": "slides",
    "start": "538440",
    "end": "539399"
  },
  {
    "text": "so quickly looking at okay what happens",
    "start": "539399",
    "end": "541440"
  },
  {
    "text": "actually when customer has a rage off",
    "start": "541440",
    "end": "543180"
  },
  {
    "text": "right so customer has a race script he",
    "start": "543180",
    "end": "545580"
  },
  {
    "text": "converts that into a S3 Ura comes to our",
    "start": "545580",
    "end": "548220"
  },
  {
    "text": "API and then creates a job and then runs",
    "start": "548220",
    "end": "550560"
  },
  {
    "text": "the job the Run job lands on a job",
    "start": "550560",
    "end": "553680"
  },
  {
    "text": "manager which is Parker the",
    "start": "553680",
    "end": "555360"
  },
  {
    "text": "orchestration engine works with the",
    "start": "555360",
    "end": "557459"
  },
  {
    "text": "infrastructure elements to provide a",
    "start": "557459",
    "end": "559440"
  },
  {
    "text": "compute and launches the rear driver",
    "start": "559440",
    "end": "561480"
  },
  {
    "text": "node the rear driver node gets the code",
    "start": "561480",
    "end": "564080"
  },
  {
    "text": "then starts executing we delegate that",
    "start": "564080",
    "end": "566880"
  },
  {
    "text": "work to the ray cluster and auto scaling",
    "start": "566880",
    "end": "569279"
  },
  {
    "text": "and then scheduling the task across",
    "start": "569279",
    "end": "571200"
  },
  {
    "text": "these workers",
    "start": "571200",
    "end": "572459"
  },
  {
    "text": "now the rate jobs runs are mutually",
    "start": "572459",
    "end": "575519"
  },
  {
    "text": "exclusive which means the cluster that",
    "start": "575519",
    "end": "577200"
  },
  {
    "text": "we provide for a single Java is not used",
    "start": "577200",
    "end": "579480"
  },
  {
    "text": "reused",
    "start": "579480",
    "end": "581160"
  },
  {
    "text": "in practice session is an another",
    "start": "581160",
    "end": "582779"
  },
  {
    "text": "Persona that we provide where customers",
    "start": "582779",
    "end": "584820"
  },
  {
    "text": "come for more a developer oriented",
    "start": "584820",
    "end": "586860"
  },
  {
    "text": "experience where they create a session",
    "start": "586860",
    "end": "588839"
  },
  {
    "text": "session goes and gives them arrayhead",
    "start": "588839",
    "end": "590760"
  },
  {
    "text": "node then they start shipping commands",
    "start": "590760",
    "end": "592800"
  },
  {
    "text": "to the particular cluster and again we",
    "start": "592800",
    "end": "595500"
  },
  {
    "text": "rely on the ray autoscaler to execute",
    "start": "595500",
    "end": "598019"
  },
  {
    "text": "the worker across a cluster and then",
    "start": "598019",
    "end": "600180"
  },
  {
    "text": "give the feedback to the customer",
    "start": "600180",
    "end": "602040"
  },
  {
    "text": "through our APS so you basically get you",
    "start": "602040",
    "end": "604200"
  },
  {
    "text": "know an interactive experience",
    "start": "604200",
    "end": "607140"
  },
  {
    "text": "so this is a quick preview of our",
    "start": "607140",
    "end": "611279"
  },
  {
    "text": "scaling performance where we took this",
    "start": "611279",
    "end": "613620"
  },
  {
    "text": "metric from one of our customers batch",
    "start": "613620",
    "end": "615720"
  },
  {
    "text": "inference workflow where they wanted to",
    "start": "615720",
    "end": "618000"
  },
  {
    "text": "scale up the cluster to up to you know",
    "start": "618000",
    "end": "619500"
  },
  {
    "text": "200 odd workers for a batch increase",
    "start": "619500",
    "end": "622380"
  },
  {
    "text": "now here you could see like within",
    "start": "622380",
    "end": "624779"
  },
  {
    "text": "less than a minute customer had to run",
    "start": "624779",
    "end": "627240"
  },
  {
    "text": "250k hard inference tasks and then we",
    "start": "627240",
    "end": "630420"
  },
  {
    "text": "were able to provide them an auto",
    "start": "630420",
    "end": "632100"
  },
  {
    "text": "scaling capability of around 240 workers",
    "start": "632100",
    "end": "634740"
  },
  {
    "text": "within a minute so that's kind of the um",
    "start": "634740",
    "end": "637740"
  },
  {
    "text": "the single value add that you get with",
    "start": "637740",
    "end": "639660"
  },
  {
    "text": "glue4 rate with very minimal uh Auto",
    "start": "639660",
    "end": "642420"
  },
  {
    "text": "scaling or you know configuration that",
    "start": "642420",
    "end": "644279"
  },
  {
    "text": "we'll actually see later in the slides",
    "start": "644279",
    "end": "646800"
  },
  {
    "text": "and the other important thing is you pay",
    "start": "646800",
    "end": "648540"
  },
  {
    "text": "as you grow so as the demand gets",
    "start": "648540",
    "end": "651120"
  },
  {
    "text": "reduced you can see the cluster scaling",
    "start": "651120",
    "end": "652680"
  },
  {
    "text": "down as the number of tasks that needs",
    "start": "652680",
    "end": "654240"
  },
  {
    "text": "to be executed without the customer had",
    "start": "654240",
    "end": "655740"
  },
  {
    "text": "to do anything extra",
    "start": "655740",
    "end": "657660"
  },
  {
    "text": "so here is a quick example that I take",
    "start": "657660",
    "end": "659519"
  },
  {
    "text": "as a script where it's a batch and run",
    "start": "659519",
    "end": "661500"
  },
  {
    "text": "script where customers leveraging",
    "start": "661500",
    "end": "664560"
  },
  {
    "text": "resonate 50 as the model for prediction",
    "start": "664560",
    "end": "667320"
  },
  {
    "text": "so he brings in his model and a custom",
    "start": "667320",
    "end": "670320"
  },
  {
    "text": "preprocessor followed buying a batch",
    "start": "670320",
    "end": "672180"
  },
  {
    "text": "inference callback and then he reads the",
    "start": "672180",
    "end": "674640"
  },
  {
    "text": "data from S3 into array data set and",
    "start": "674640",
    "end": "677160"
  },
  {
    "text": "then uses a map batch API to actually",
    "start": "677160",
    "end": "679800"
  },
  {
    "text": "perform the prediction now once customer",
    "start": "679800",
    "end": "682680"
  },
  {
    "text": "has this grip",
    "start": "682680",
    "end": "684240"
  },
  {
    "text": "here we take our UI which is basically",
    "start": "684240",
    "end": "686279"
  },
  {
    "text": "the glue Studio",
    "start": "686279",
    "end": "687560"
  },
  {
    "text": "where he has an option to author the",
    "start": "687560",
    "end": "690300"
  },
  {
    "text": "script through a script editor or you",
    "start": "690300",
    "end": "692160"
  },
  {
    "text": "know an interactive session but once the",
    "start": "692160",
    "end": "694560"
  },
  {
    "text": "job authoring is done he had to do very",
    "start": "694560",
    "end": "696660"
  },
  {
    "text": "little steps like one is choose the ray",
    "start": "696660",
    "end": "699360"
  },
  {
    "text": "as a job type",
    "start": "699360",
    "end": "700980"
  },
  {
    "text": "and then the auto scaling configuration",
    "start": "700980",
    "end": "702720"
  },
  {
    "text": "right it's just modeled as a worker type",
    "start": "702720",
    "end": "704820"
  },
  {
    "text": "and you know the number of workers that",
    "start": "704820",
    "end": "706560"
  },
  {
    "text": "customer has to provide",
    "start": "706560",
    "end": "708120"
  },
  {
    "text": "now in case customer brings in let's say",
    "start": "708120",
    "end": "710279"
  },
  {
    "text": "dependencies that are needed for his",
    "start": "710279",
    "end": "712320"
  },
  {
    "text": "workload execution they are modeled as a",
    "start": "712320",
    "end": "715019"
  },
  {
    "text": "strip install so in this particular case",
    "start": "715019",
    "end": "716880"
  },
  {
    "text": "customer I had to drop in",
    "start": "716880",
    "end": "718920"
  },
  {
    "text": "attached vision and a torch as you know",
    "start": "718920",
    "end": "721260"
  },
  {
    "text": "the people stopped so we make sure that",
    "start": "721260",
    "end": "723180"
  },
  {
    "text": "before executing the customer script",
    "start": "723180",
    "end": "724920"
  },
  {
    "text": "these dependencies are installed on the",
    "start": "724920",
    "end": "727019"
  },
  {
    "text": "workload right",
    "start": "727019",
    "end": "728279"
  },
  {
    "text": "once a job is authored customer safe and",
    "start": "728279",
    "end": "730800"
  },
  {
    "text": "then performs a run",
    "start": "730800",
    "end": "732300"
  },
  {
    "text": "then we get into the job monitoring",
    "start": "732300",
    "end": "734220"
  },
  {
    "text": "which is basically a page where customer",
    "start": "734220",
    "end": "736019"
  },
  {
    "text": "has access to currently running jobs and",
    "start": "736019",
    "end": "738899"
  },
  {
    "text": "also a historical view of you know all",
    "start": "738899",
    "end": "740700"
  },
  {
    "text": "the job runs that have happened for the",
    "start": "740700",
    "end": "742260"
  },
  {
    "text": "job this include details like the",
    "start": "742260",
    "end": "744420"
  },
  {
    "text": "execution time so you have an idea of",
    "start": "744420",
    "end": "746100"
  },
  {
    "text": "how much you have Bill for and then you",
    "start": "746100",
    "end": "748200"
  },
  {
    "text": "know the worker type just you choose",
    "start": "748200",
    "end": "750300"
  },
  {
    "text": "we also have flexibility to integrate",
    "start": "750300",
    "end": "753180"
  },
  {
    "text": "metrics with Cloud watch so you have",
    "start": "753180",
    "end": "755519"
  },
  {
    "text": "access to how your cluster is performing",
    "start": "755519",
    "end": "757500"
  },
  {
    "text": "as part of your Cloud watch metric so",
    "start": "757500",
    "end": "759600"
  },
  {
    "text": "customer has flexibility to have Cloud",
    "start": "759600",
    "end": "761519"
  },
  {
    "text": "watch alarms cloudwise dashboards on top",
    "start": "761519",
    "end": "763800"
  },
  {
    "text": "of that right so that gives a better",
    "start": "763800",
    "end": "766079"
  },
  {
    "text": "visibility to customer on how his job or",
    "start": "766079",
    "end": "768360"
  },
  {
    "text": "is actually performing over time",
    "start": "768360",
    "end": "771360"
  },
  {
    "text": "so after GA last but not the least the",
    "start": "771360",
    "end": "775200"
  },
  {
    "text": "team in AWS spend a good amount of time",
    "start": "775200",
    "end": "777480"
  },
  {
    "text": "working with the array open source and",
    "start": "777480",
    "end": "780300"
  },
  {
    "text": "we started contributing back mainly in",
    "start": "780300",
    "end": "781980"
  },
  {
    "text": "the realm of you know Ray data set so we",
    "start": "781980",
    "end": "784500"
  },
  {
    "text": "started looking at enriching the ray",
    "start": "784500",
    "end": "786000"
  },
  {
    "text": "data set for getting it Enterprise ready",
    "start": "786000",
    "end": "787980"
  },
  {
    "text": "mainly for the data integration so in",
    "start": "787980",
    "end": "789959"
  },
  {
    "text": "that realm we started working on",
    "start": "789959",
    "end": "792180"
  },
  {
    "text": "supporting multiple sort and group by in",
    "start": "792180",
    "end": "794820"
  },
  {
    "text": "the community followed by adding custom",
    "start": "794820",
    "end": "797760"
  },
  {
    "text": "column partition where you could write",
    "start": "797760",
    "end": "799740"
  },
  {
    "text": "to a custom partition in S3",
    "start": "799740",
    "end": "801959"
  },
  {
    "text": "and then we also added recently or",
    "start": "801959",
    "end": "803760"
  },
  {
    "text": "working towards adding support for IPv6",
    "start": "803760",
    "end": "806339"
  },
  {
    "text": "as part of the auto scaling",
    "start": "806339",
    "end": "808200"
  },
  {
    "text": "more recently we did acceleration work",
    "start": "808200",
    "end": "810779"
  },
  {
    "text": "where accelerator work where we started",
    "start": "810779",
    "end": "813000"
  },
  {
    "text": "supporting trinium and inferentia as you",
    "start": "813000",
    "end": "816600"
  },
  {
    "text": "know another variant for",
    "start": "816600",
    "end": "818660"
  },
  {
    "text": "the mainly model serving and inference",
    "start": "818660",
    "end": "822480"
  },
  {
    "text": "we are currently in progress of working",
    "start": "822480",
    "end": "824519"
  },
  {
    "text": "with a Delta CAD project to add support",
    "start": "824519",
    "end": "827579"
  },
  {
    "text": "for Iceberg so we have a way to",
    "start": "827579",
    "end": "829620"
  },
  {
    "text": "materialize in our data Lakes when we",
    "start": "829620",
    "end": "832019"
  },
  {
    "text": "use actually air Village blue fourway",
    "start": "832019",
    "end": "834500"
  },
  {
    "text": "that's about it thank you for your time",
    "start": "834500",
    "end": "837180"
  },
  {
    "text": "and then please we just stop by at the",
    "start": "837180",
    "end": "839760"
  },
  {
    "text": "AWS booth for the demo of the product",
    "start": "839760",
    "end": "841800"
  },
  {
    "text": "thank you",
    "start": "841800",
    "end": "844279"
  }
]