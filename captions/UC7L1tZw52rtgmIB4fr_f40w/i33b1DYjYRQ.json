[
  {
    "text": "Hi there, my name is Emmy, and in this \nvideo, we're going to be taking a closer  ",
    "start": "180",
    "end": "4500"
  },
  {
    "text": "look at the Ray Dashboard as a powerful \ntool for understanding your Ray cluster.  ",
    "start": "4500",
    "end": "8520"
  },
  {
    "text": "Observability tools like the Ray Dashboard are \ncritical for monitoring the internal state of  ",
    "start": "8520",
    "end": "13440"
  },
  {
    "text": "your system so that you can effectively \ndebug and optimize your applications. ",
    "start": "13440",
    "end": "17400"
  },
  {
    "text": "So let's get started! Here's what the \nRay Dashboard looks like. As you can see,  ",
    "start": "17400",
    "end": "22680"
  },
  {
    "text": "it's a web-based interface that gives \nyou a real-time view of your Ray cluster. ",
    "start": "22680",
    "end": "26880"
  },
  {
    "text": "You can access the dashboard in a few \nways. If you’re an open source user,  ",
    "start": "27480",
    "end": "31560"
  },
  {
    "text": "each time you initialize a new Ray cluster with \n`ray.init()`, you'll have your dashboard hosted  ",
    "start": "31560",
    "end": "36540"
  },
  {
    "text": "by default at localhost:8265. In order to \nsee these updating time-series metrics,  ",
    "start": "36540",
    "end": "42360"
  },
  {
    "text": "you're going to need to configure Prometheus \nand Grafana, and we have instructions for  ",
    "start": "42360",
    "end": "46200"
  },
  {
    "text": "doing so in our Ray documentation.\nIf you’re using an Anyscale user,  ",
    "start": "46200",
    "end": "49860"
  },
  {
    "text": "these time-series metrics will be \nbuilt-in for you, and you can access  ",
    "start": "49860",
    "end": "53340"
  },
  {
    "text": "the dashboard underneath the “Tools” tab.\nFirst, let's talk about navigation. The Ray  ",
    "start": "53340",
    "end": "59340"
  },
  {
    "text": "Dashboard is split into several different tabs \nthat you can switch between to get different  ",
    "start": "59340",
    "end": "63180"
  },
  {
    "text": "views of your Ray cluster. And we’ll be \nwalking through each of these in turn.",
    "start": "63180",
    "end": "67140"
  },
  {
    "text": "Here I am on my main Overview page, and we can \nsee quick links to common views. For example,  ",
    "start": "67140",
    "end": "72720"
  },
  {
    "text": "I can see my current cluster utilization \nby each physical resource, my active nodes,  ",
    "start": "72720",
    "end": "77760"
  },
  {
    "text": "my recent jobs, as well as any \nevents such as autoscaling activity. ",
    "start": "77760",
    "end": "81600"
  },
  {
    "text": "Now, let’s take a look at the \n“Jobs” tab in further detail. Here,  ",
    "start": "82200",
    "end": "85799"
  },
  {
    "text": "I can see the jobs I have run. I can click \ninto any given job to access more information  ",
    "start": "85800",
    "end": "90420"
  },
  {
    "text": "about my tasks, resources, nodes and more.\nI'll leave a more thorough walkthrough of  ",
    "start": "90420",
    "end": "96420"
  },
  {
    "text": "each of these features for another video in \nthis series, but generally, this view offers  ",
    "start": "96420",
    "end": "101220"
  },
  {
    "text": "rich insight into your Ray cluster with popular \nfeatures like a task progression breakdown bar,  ",
    "start": "101220",
    "end": "106260"
  },
  {
    "text": "so I can ahead and expand and see the status of my \nactive tasks, task timeline support with Perfetto,  ",
    "start": "106920",
    "end": "113880"
  },
  {
    "text": "as well as summary tables by each resource.\nUnder Serve, you’ll see dedicated information  ",
    "start": "113880",
    "end": "121079"
  },
  {
    "text": "specifically for designed for monitoring \nonline inference with useful metrics such  ",
    "start": "121080",
    "end": "126120"
  },
  {
    "text": "as queries per second and information about \nlatency. You’ll also be able to probe deeper  ",
    "start": "126120",
    "end": "131400"
  },
  {
    "text": "into your applications by looking at deployments \nas well as the individual replicas within them. ",
    "start": "131400",
    "end": "137220"
  },
  {
    "text": "Moving on to the “Cluster” tab, here I can view \nmy active and inactive nodes, and I can use this  ",
    "start": "137220",
    "end": "143040"
  },
  {
    "text": "tab to make sure that the cluster is running \nsmoothly. So for instance, I might be able to  ",
    "start": "143040",
    "end": "148200"
  },
  {
    "text": "diagnose an issue where a particular node is using \na lot of CPU or a lot of memory. I might need to  ",
    "start": "148200",
    "end": "154980"
  },
  {
    "text": "take steps to optimize performance by taking a \nlook at the logs, stack traces, or flame graphs. ",
    "start": "154980",
    "end": "161220"
  },
  {
    "text": "Next, let's take a look at my \"Actors\" tab. \nThis tab shows you the actors that have existed,  ",
    "start": "161220",
    "end": "166680"
  },
  {
    "text": "and if you inspect each, you can find \nmore metadata as well as a history of  ",
    "start": "166680",
    "end": "171000"
  },
  {
    "text": "tasks that are associated with each actor.\nOne of the most useful tabs for monitoring is  ",
    "start": "171000",
    "end": "176220"
  },
  {
    "text": "the “Metrics” tab which integrates with Grafana \nto provide several visualizations that can help  ",
    "start": "176220",
    "end": "181020"
  },
  {
    "text": "you understand what's happening in your cluster. \nI can take a look at real-time data on “Tasks and  ",
    "start": "181020",
    "end": "185880"
  },
  {
    "text": "Actors” to view their status, scrolling down, \nI can look at “Ray Resource Usage” to see how  ",
    "start": "185880",
    "end": "191880"
  },
  {
    "text": "Ray is using my available resources, and finally \n“Hardware Utilization” to see activity by node. ",
    "start": "191880",
    "end": "197820"
  },
  {
    "text": "Finally, the Dashboard also includes access \nto “Logs” which are filterable and searchable,  ",
    "start": "198540",
    "end": "204659"
  },
  {
    "text": "so I can always find what I need in \norder to debug and diagnose my problem. ",
    "start": "204660",
    "end": "209520"
  },
  {
    "text": "So that wraps up our quick tour of the Ray \nDashboard! I’ve shown you how to navigate  ",
    "start": "209520",
    "end": "213960"
  },
  {
    "text": "the different views of the dashboard as well as \ngiven you an overview of some of the most useful  ",
    "start": "213960",
    "end": "218400"
  },
  {
    "text": "features. If you’re using Ray, I highly recommend \nthat you develop the habit of having the dashboard  ",
    "start": "218400",
    "end": "223379"
  },
  {
    "text": "visible as you work so that you can understand \nyour cluster’s performance in real time.",
    "start": "223380",
    "end": "227580"
  },
  {
    "text": "If you’re interested in learning more \nabout how to debug or optimize your  ",
    "start": "227580",
    "end": "231780"
  },
  {
    "text": "applications further, keep reading for \nmore resources, and thanks for watching!",
    "start": "231780",
    "end": "235740"
  }
]