[
  {
    "text": "so here is the agenda so first uh we'll",
    "start": "2600",
    "end": "4640"
  },
  {
    "text": "just like uh give you a brief overview",
    "start": "4640",
    "end": "6520"
  },
  {
    "text": "of our snowflake container run times uh",
    "start": "6520",
    "end": "8760"
  },
  {
    "text": "and then we'll get into a bit of details",
    "start": "8760",
    "end": "11280"
  },
  {
    "text": "on how we use Ray behind the scenes to",
    "start": "11280",
    "end": "13799"
  },
  {
    "text": "optimize the data injection and like can",
    "start": "13799",
    "end": "15599"
  },
  {
    "text": "Implement distributor tring apis and",
    "start": "15599",
    "end": "17480"
  },
  {
    "text": "then probably we'll end with a small",
    "start": "17480",
    "end": "19199"
  },
  {
    "text": "demo so let's just get started uh so",
    "start": "19199",
    "end": "22160"
  },
  {
    "text": "snowflake container run times what is it",
    "start": "22160",
    "end": "24680"
  },
  {
    "text": "and then why is it right like so before",
    "start": "24680",
    "end": "27080"
  },
  {
    "text": "I answer that question so let me just",
    "start": "27080",
    "end": "29039"
  },
  {
    "text": "like uh uh refresh your uh refresh you",
    "start": "29039",
    "end": "31720"
  },
  {
    "text": "with like some of the key challenges uh",
    "start": "31720",
    "end": "33559"
  },
  {
    "text": "many organizations have to deal with uh",
    "start": "33559",
    "end": "35719"
  },
  {
    "text": "when they have to do large scale",
    "start": "35719",
    "end": "36920"
  },
  {
    "text": "distributor training the first problem",
    "start": "36920",
    "end": "38559"
  },
  {
    "text": "is Resource Management organizations",
    "start": "38559",
    "end": "40760"
  },
  {
    "text": "will have to find a way to provision and",
    "start": "40760",
    "end": "42960"
  },
  {
    "text": "then manage their gpus and then like",
    "start": "42960",
    "end": "44680"
  },
  {
    "text": "ensure the efficient utilization of that",
    "start": "44680",
    "end": "46680"
  },
  {
    "text": "while keeping the cost in check uh and",
    "start": "46680",
    "end": "49800"
  },
  {
    "text": "then setup part right like so it's it's",
    "start": "49800",
    "end": "52120"
  },
  {
    "text": "very it's a big hazle to figure out",
    "start": "52120",
    "end": "54520"
  },
  {
    "text": "right set of packages for the kind of",
    "start": "54520",
    "end": "56600"
  },
  {
    "text": "Hardware that you have and then the",
    "start": "56600",
    "end": "57719"
  },
  {
    "text": "Frameworks that you're using and then",
    "start": "57719",
    "end": "59600"
  },
  {
    "text": "keep maintaining those packages like by",
    "start": "59600",
    "end": "61879"
  },
  {
    "text": "upgrading them and like then uh uh and",
    "start": "61879",
    "end": "64000"
  },
  {
    "text": "then doing security patches uh and then",
    "start": "64000",
    "end": "66000"
  },
  {
    "text": "after all that like then you need to go",
    "start": "66000",
    "end": "67560"
  },
  {
    "text": "and then like deploy and then manage",
    "start": "67560",
    "end": "69200"
  },
  {
    "text": "services to orchestrate your compute uh",
    "start": "69200",
    "end": "72119"
  },
  {
    "text": "distributor training compute uh so",
    "start": "72119",
    "end": "74080"
  },
  {
    "text": "that's that's all big hazle and then",
    "start": "74080",
    "end": "76280"
  },
  {
    "text": "data handling is another key piece uh",
    "start": "76280",
    "end": "78479"
  },
  {
    "text": "you need a way to efficiently ingest the",
    "start": "78479",
    "end": "80759"
  },
  {
    "text": "data so that like you keep your gpus",
    "start": "80759",
    "end": "83320"
  },
  {
    "text": "busy uh you don't have your gpus like",
    "start": "83320",
    "end": "85640"
  },
  {
    "text": "waiting for your data uh and then like",
    "start": "85640",
    "end": "87720"
  },
  {
    "text": "you also need to figure out a way to",
    "start": "87720",
    "end": "89119"
  },
  {
    "text": "Shard your data perfectly so that like",
    "start": "89119",
    "end": "91119"
  },
  {
    "text": "you can do distributor training uh on",
    "start": "91119",
    "end": "93119"
  },
  {
    "text": "that and then finally fall tolerance",
    "start": "93119",
    "end": "95320"
  },
  {
    "text": "like I don't have to talk much about it",
    "start": "95320",
    "end": "96560"
  },
  {
    "text": "it's non-trivial like it's uh the users",
    "start": "96560",
    "end": "98680"
  },
  {
    "text": "will have to figure out a way to detect",
    "start": "98680",
    "end": "99960"
  },
  {
    "text": "and then like recover from those",
    "start": "99960",
    "end": "101000"
  },
  {
    "text": "failures these are all the challenges",
    "start": "101000",
    "end": "103399"
  },
  {
    "text": "and then snowflake container runtime is",
    "start": "103399",
    "end": "105479"
  },
  {
    "text": "a solution that is just like going to",
    "start": "105479",
    "end": "107960"
  },
  {
    "text": "take care of all of those problems for",
    "start": "107960",
    "end": "109600"
  },
  {
    "text": "you and then give you a production ready",
    "start": "109600",
    "end": "112840"
  },
  {
    "text": "data science environment just within few",
    "start": "112840",
    "end": "115399"
  },
  {
    "text": "clicks so snowflake container times take",
    "start": "115399",
    "end": "118200"
  },
  {
    "text": "takes off all the heavy lifting of of",
    "start": "118200",
    "end": "120000"
  },
  {
    "text": "your shoulders and then let you focus on",
    "start": "120000",
    "end": "122320"
  },
  {
    "text": "the key part that is building and then",
    "start": "122320",
    "end": "124439"
  },
  {
    "text": "training your models uh so snowflake",
    "start": "124439",
    "end": "126799"
  },
  {
    "text": "container and time it is fully managed",
    "start": "126799",
    "end": "128160"
  },
  {
    "text": "so you don't have to worry about",
    "start": "128160",
    "end": "129319"
  },
  {
    "text": "infrastructure uh and then it is",
    "start": "129319",
    "end": "131000"
  },
  {
    "text": "pre-configured so you can get right into",
    "start": "131000",
    "end": "133760"
  },
  {
    "text": "your workload uh without any hles of",
    "start": "133760",
    "end": "136480"
  },
  {
    "text": "setting up and then maintenance and then",
    "start": "136480",
    "end": "138879"
  },
  {
    "text": "obviously it has efficient",
    "start": "138879",
    "end": "140480"
  },
  {
    "text": "implementations to ingest your snowflake",
    "start": "140480",
    "end": "142840"
  },
  {
    "text": "data for training and then it also has",
    "start": "142840",
    "end": "144879"
  },
  {
    "text": "like uh TR distributor training apis",
    "start": "144879",
    "end": "146760"
  },
  {
    "text": "which will just like make it very easy",
    "start": "146760",
    "end": "148200"
  },
  {
    "text": "for you to scale out your training jobs",
    "start": "148200",
    "end": "149959"
  },
  {
    "text": "from single node to multi GPU multi noes",
    "start": "149959",
    "end": "153400"
  },
  {
    "text": "so here is the architecture of a high",
    "start": "153400",
    "end": "156280"
  },
  {
    "text": "level overview of the archit of",
    "start": "156280",
    "end": "157360"
  },
  {
    "text": "snowflake container run times uh so we",
    "start": "157360",
    "end": "159640"
  },
  {
    "text": "use something called like a snowflake",
    "start": "159640",
    "end": "162159"
  },
  {
    "text": "container services so snowflake",
    "start": "162159",
    "end": "163920"
  },
  {
    "text": "container services is is a provides a",
    "start": "163920",
    "end": "167080"
  },
  {
    "text": "snowflake product that provides",
    "start": "167080",
    "end": "168319"
  },
  {
    "text": "abstractions to uh uh provision hardware",
    "start": "168319",
    "end": "171680"
  },
  {
    "text": "and then deploy and manage your",
    "start": "171680",
    "end": "173720"
  },
  {
    "text": "containerized applications so the",
    "start": "173720",
    "end": "175800"
  },
  {
    "text": "snowflake container services internally",
    "start": "175800",
    "end": "177440"
  },
  {
    "text": "works with like multiple clouds to",
    "start": "177440",
    "end": "178840"
  },
  {
    "text": "provision hardware and then like and",
    "start": "178840",
    "end": "179879"
  },
  {
    "text": "then they have APS to deploy and then",
    "start": "179879",
    "end": "181159"
  },
  {
    "text": "manage uh services so using that product",
    "start": "181159",
    "end": "183840"
  },
  {
    "text": "like so we deploy Ray uh Ray uh and then",
    "start": "183840",
    "end": "187440"
  },
  {
    "text": "that's our setup so once we have this",
    "start": "187440",
    "end": "189519"
  },
  {
    "text": "all the setup ready so we have snowflake",
    "start": "189519",
    "end": "191480"
  },
  {
    "text": "ml modeling apis so these apis uh",
    "start": "191480",
    "end": "194440"
  },
  {
    "text": "provide uh capabilities to build and",
    "start": "194440",
    "end": "196920"
  },
  {
    "text": "then try uh classical ML and then like",
    "start": "196920",
    "end": "199080"
  },
  {
    "text": "deep neural network models so these apis",
    "start": "199080",
    "end": "201519"
  },
  {
    "text": "are implemented using native libraries",
    "start": "201519",
    "end": "203400"
  },
  {
    "text": "like uh skarn XG boost uh and then py",
    "start": "203400",
    "end": "206760"
  },
  {
    "text": "torch uh distributed using Ray core apis",
    "start": "206760",
    "end": "209519"
  },
  {
    "text": "and then like in some use cases like we",
    "start": "209519",
    "end": "211040"
  },
  {
    "text": "use rate train and then rate tune APS",
    "start": "211040",
    "end": "212760"
  },
  {
    "text": "directly behind the scenes but like most",
    "start": "212760",
    "end": "214599"
  },
  {
    "text": "of our APS are implemented using native",
    "start": "214599",
    "end": "216360"
  },
  {
    "text": "libraries and then distributed using",
    "start": "216360",
    "end": "217799"
  },
  {
    "text": "rord apis on our service uh and then at",
    "start": "217799",
    "end": "220799"
  },
  {
    "text": "the very top layer like we have",
    "start": "220799",
    "end": "221840"
  },
  {
    "text": "snowflake notebooks uh that provides a",
    "start": "221840",
    "end": "224480"
  },
  {
    "text": "interactive uh environment uh to run and",
    "start": "224480",
    "end": "227239"
  },
  {
    "text": "then monitor your data science workloads",
    "start": "227239",
    "end": "229599"
  },
  {
    "text": "here is another view of that system uh",
    "start": "229599",
    "end": "231879"
  },
  {
    "text": "so which shows the data flow diagram uh",
    "start": "231879",
    "end": "234599"
  },
  {
    "text": "uh at the top you can see the users",
    "start": "234599",
    "end": "236400"
  },
  {
    "text": "interacting with our uh the notebook's",
    "start": "236400",
    "end": "238040"
  },
  {
    "text": "UI and again that's going to push on the",
    "start": "238040",
    "end": "240040"
  },
  {
    "text": "execution of those notebooks and then",
    "start": "240040",
    "end": "241480"
  },
  {
    "text": "then any further compute into the the",
    "start": "241480",
    "end": "244079"
  },
  {
    "text": "our Hardware uh and then software uh uh",
    "start": "244079",
    "end": "247439"
  },
  {
    "text": "uh stack so yeah I'll stop there and",
    "start": "247439",
    "end": "250200"
  },
  {
    "text": "then I'll uh my colleague Ali will walk",
    "start": "250200",
    "end": "252840"
  },
  {
    "text": "you through the rest of the",
    "start": "252840",
    "end": "255560"
  },
  {
    "text": "presentation great thank you so much",
    "start": "256440",
    "end": "258440"
  },
  {
    "text": "shavin for that intro to The Container",
    "start": "258440",
    "end": "260799"
  },
  {
    "text": "runtime and now I'm going to go a little",
    "start": "260799",
    "end": "262479"
  },
  {
    "text": "deeper into some of the features that we",
    "start": "262479",
    "end": "264320"
  },
  {
    "text": "support and how Rey is backing",
    "start": "264320",
    "end": "268720"
  },
  {
    "text": "those so there's a few things I'm going",
    "start": "268720",
    "end": "270759"
  },
  {
    "text": "to talk about right now the first is",
    "start": "270759",
    "end": "272960"
  },
  {
    "text": "we're going to go a little bit deeper",
    "start": "272960",
    "end": "274160"
  },
  {
    "text": "into the optimized data ingestion that",
    "start": "274160",
    "end": "276520"
  },
  {
    "text": "Trin was mentioning and then we're going",
    "start": "276520",
    "end": "278240"
  },
  {
    "text": "to talk about our distributed training",
    "start": "278240",
    "end": "280120"
  },
  {
    "text": "apis that allow for more seamless scale",
    "start": "280120",
    "end": "282039"
  },
  {
    "text": "out across devices and nodes and then",
    "start": "282039",
    "end": "284560"
  },
  {
    "text": "we'll do a quick demo to show you uh",
    "start": "284560",
    "end": "287120"
  },
  {
    "text": "examples of those things and also that",
    "start": "287120",
    "end": "288600"
  },
  {
    "text": "we're running in a more flexible compute",
    "start": "288600",
    "end": "290400"
  },
  {
    "text": "environment where you can bring really",
    "start": "290400",
    "end": "291720"
  },
  {
    "text": "any open source workloads as",
    "start": "291720",
    "end": "294280"
  },
  {
    "text": "well so first let's talk about data",
    "start": "294280",
    "end": "296479"
  },
  {
    "text": "ingestion obviously snowflake is",
    "start": "296479",
    "end": "298320"
  },
  {
    "text": "primarily where a lot of people keep",
    "start": "298320",
    "end": "299919"
  },
  {
    "text": "their data so it makes sense that we'd",
    "start": "299919",
    "end": "301479"
  },
  {
    "text": "want to make sure that we're going to",
    "start": "301479",
    "end": "302560"
  },
  {
    "text": "have the most efficient possible",
    "start": "302560",
    "end": "304120"
  },
  {
    "text": "retrieval of that data into your machine",
    "start": "304120",
    "end": "306160"
  },
  {
    "text": "learning workloads so we've just",
    "start": "306160",
    "end": "307960"
  },
  {
    "text": "recently introduced A New Concept called",
    "start": "307960",
    "end": "309720"
  },
  {
    "text": "a data connector and then this",
    "start": "309720",
    "end": "312039"
  },
  {
    "text": "integrates with snowflake data tables",
    "start": "312039",
    "end": "314520"
  },
  {
    "text": "via snow park data frames it also",
    "start": "314520",
    "end": "316639"
  },
  {
    "text": "integrates with snowflake data sets",
    "start": "316639",
    "end": "318560"
  },
  {
    "text": "which is a relatively new data object um",
    "start": "318560",
    "end": "321199"
  },
  {
    "text": "an immutable version data object that's",
    "start": "321199",
    "end": "323960"
  },
  {
    "text": "perfect for production machine learning",
    "start": "323960",
    "end": "325600"
  },
  {
    "text": "workloads and then you can convert your",
    "start": "325600",
    "end": "327639"
  },
  {
    "text": "snowflake data into open source data",
    "start": "327639",
    "end": "329400"
  },
  {
    "text": "form so that might be a panda data frame",
    "start": "329400",
    "end": "331759"
  },
  {
    "text": "that might be um a pi torch data set for",
    "start": "331759",
    "end": "335360"
  },
  {
    "text": "example and the way that we've",
    "start": "335360",
    "end": "337280"
  },
  {
    "text": "implemented this behind the scenes on",
    "start": "337280",
    "end": "339120"
  },
  {
    "text": "our container runtime is that we're",
    "start": "339120",
    "end": "341080"
  },
  {
    "text": "using Ray data behind the scenes to make",
    "start": "341080",
    "end": "343199"
  },
  {
    "text": "sure that you're getting really",
    "start": "343199",
    "end": "344680"
  },
  {
    "text": "efficient throughput as using as many of",
    "start": "344680",
    "end": "347800"
  },
  {
    "text": "your compute resources as possible so",
    "start": "347800",
    "end": "350199"
  },
  {
    "text": "we've used um Native Ray data sources to",
    "start": "350199",
    "end": "353880"
  },
  {
    "text": "do that from paret files we've also",
    "start": "353880",
    "end": "356039"
  },
  {
    "text": "implemented custom Ray data sources uh",
    "start": "356039",
    "end": "358120"
  },
  {
    "text": "to integrate snowflake tables",
    "start": "358120",
    "end": "361400"
  },
  {
    "text": "directly so you might be thinking okay",
    "start": "361400",
    "end": "363520"
  },
  {
    "text": "well I could just do that why shouldn't",
    "start": "363520",
    "end": "365360"
  },
  {
    "text": "I just use Ray directly and you're",
    "start": "365360",
    "end": "368080"
  },
  {
    "text": "certainly able to do that um but the",
    "start": "368080",
    "end": "370319"
  },
  {
    "text": "reason you might want to leverage our",
    "start": "370319",
    "end": "371599"
  },
  {
    "text": "data connector API is because you don't",
    "start": "371599",
    "end": "374520"
  },
  {
    "text": "have to worry about the implementation",
    "start": "374520",
    "end": "376039"
  },
  {
    "text": "defining your own custom data sources",
    "start": "376039",
    "end": "377919"
  },
  {
    "text": "that kind of thing you can just take",
    "start": "377919",
    "end": "379919"
  },
  {
    "text": "your snowflake data turn it into a",
    "start": "379919",
    "end": "381599"
  },
  {
    "text": "pandas data frame or a p torch data set",
    "start": "381599",
    "end": "384280"
  },
  {
    "text": "without having to think about it at all",
    "start": "384280",
    "end": "385680"
  },
  {
    "text": "so it's easy to use it's also unified we",
    "start": "385680",
    "end": "388599"
  },
  {
    "text": "have multiple implement ations so this",
    "start": "388599",
    "end": "391360"
  },
  {
    "text": "API is going to work inside the runtime",
    "start": "391360",
    "end": "393360"
  },
  {
    "text": "it'll use Ray it'll be super efficient",
    "start": "393360",
    "end": "395080"
  },
  {
    "text": "you can also Take It Outside the runtime",
    "start": "395080",
    "end": "396840"
  },
  {
    "text": "it'll just use native python libraries",
    "start": "396840",
    "end": "399960"
  },
  {
    "text": "uh you don't have to have AR Ray cluster",
    "start": "399960",
    "end": "401280"
  },
  {
    "text": "running so you can bring your work",
    "start": "401280",
    "end": "402520"
  },
  {
    "text": "inside and outside of snowflake and then",
    "start": "402520",
    "end": "405120"
  },
  {
    "text": "of course you know we got a team of",
    "start": "405120",
    "end": "407160"
  },
  {
    "text": "Engineers working on this so we're",
    "start": "407160",
    "end": "408639"
  },
  {
    "text": "always also creating performance",
    "start": "408639",
    "end": "410880"
  },
  {
    "text": "improvements so we have some of our own",
    "start": "410880",
    "end": "412599"
  },
  {
    "text": "performance improvements that we are",
    "start": "412599",
    "end": "413960"
  },
  {
    "text": "doing on top of Ray data to make sure",
    "start": "413960",
    "end": "416240"
  },
  {
    "text": "that we're operating as fast as possible",
    "start": "416240",
    "end": "418520"
  },
  {
    "text": "for many many use cas since we have such",
    "start": "418520",
    "end": "420520"
  },
  {
    "text": "a diverse customer",
    "start": "420520",
    "end": "423319"
  },
  {
    "text": "base so this just highlights a couple",
    "start": "423319",
    "end": "425680"
  },
  {
    "text": "different things um the first thing I",
    "start": "425680",
    "end": "427759"
  },
  {
    "text": "want to point out is that it's going to",
    "start": "427759",
    "end": "430879"
  },
  {
    "text": "be fast to use your snowflake data from",
    "start": "430879",
    "end": "433960"
  },
  {
    "text": "within snowflake so if you look at this",
    "start": "433960",
    "end": "437319"
  },
  {
    "text": "chart we have compute pool type on the",
    "start": "437319",
    "end": "439720"
  },
  {
    "text": "bottom you know the fastest way to",
    "start": "439720",
    "end": "441319"
  },
  {
    "text": "ingest your data is with a high memory",
    "start": "441319",
    "end": "443960"
  },
  {
    "text": "medium machine type it took 19 seconds",
    "start": "443960",
    "end": "447080"
  },
  {
    "text": "in a single node case the ex exact same",
    "start": "447080",
    "end": "450560"
  },
  {
    "text": "specs on a ec2 instance took 50 seconds",
    "start": "450560",
    "end": "453840"
  },
  {
    "text": "so you know you're getting like a two",
    "start": "453840",
    "end": "454919"
  },
  {
    "text": "and a half times speed up just for using",
    "start": "454919",
    "end": "457639"
  },
  {
    "text": "one node no scale out just same machine",
    "start": "457639",
    "end": "460560"
  },
  {
    "text": "type but inside snowflake instead of",
    "start": "460560",
    "end": "462039"
  },
  {
    "text": "outside of snowflake and then of course",
    "start": "462039",
    "end": "464520"
  },
  {
    "text": "if you want if you don't want to scale",
    "start": "464520",
    "end": "466039"
  },
  {
    "text": "up you can always scale out maybe you",
    "start": "466039",
    "end": "467759"
  },
  {
    "text": "just want to like ingest your data",
    "start": "467759",
    "end": "469159"
  },
  {
    "text": "efficiently but then you don't need a",
    "start": "469159",
    "end": "470560"
  },
  {
    "text": "lot of CPUs you can instead scale out to",
    "start": "470560",
    "end": "472680"
  },
  {
    "text": "a few different instances for ingestion",
    "start": "472680",
    "end": "474759"
  },
  {
    "text": "scale back down um and you don't incur",
    "start": "474759",
    "end": "477639"
  },
  {
    "text": "any additional cost because you're",
    "start": "477639",
    "end": "478840"
  },
  {
    "text": "getting that",
    "start": "478840",
    "end": "480360"
  },
  {
    "text": "you know 2x speed",
    "start": "480360",
    "end": "483319"
  },
  {
    "text": "up so what might you want to do with",
    "start": "483520",
    "end": "485639"
  },
  {
    "text": "that data well that brings us to our",
    "start": "485639",
    "end": "487879"
  },
  {
    "text": "distributed training functionality sort",
    "start": "487879",
    "end": "489599"
  },
  {
    "text": "of the core of this talk um so like",
    "start": "489599",
    "end": "493319"
  },
  {
    "text": "Robin said we are going to be",
    "start": "493319",
    "end": "495479"
  },
  {
    "text": "introducing more and more distributed",
    "start": "495479",
    "end": "497039"
  },
  {
    "text": "training apis and this will allow you to",
    "start": "497039",
    "end": "501599"
  },
  {
    "text": "take your training jobs bring them to",
    "start": "501599",
    "end": "504759"
  },
  {
    "text": "snowflake keep them as close to open",
    "start": "504759",
    "end": "507199"
  },
  {
    "text": "source as possible and then we're really",
    "start": "507199",
    "end": "508639"
  },
  {
    "text": "just managing the scale out for you and",
    "start": "508639",
    "end": "511240"
  },
  {
    "text": "the reason why it's useful to do this in",
    "start": "511240",
    "end": "513560"
  },
  {
    "text": "Snowflake instead of on your own outside",
    "start": "513560",
    "end": "515360"
  },
  {
    "text": "of snowflake is where backing all of the",
    "start": "515360",
    "end": "518518"
  },
  {
    "text": "sort of things that like they were",
    "start": "518519",
    "end": "520320"
  },
  {
    "text": "saying in the talk this morning that Ray",
    "start": "520320",
    "end": "522240"
  },
  {
    "text": "framework by itself is missing so you're",
    "start": "522240",
    "end": "525279"
  },
  {
    "text": "operating in a secure ecosystem you",
    "start": "525279",
    "end": "527680"
  },
  {
    "text": "don't have to manage your own like Port",
    "start": "527680",
    "end": "529800"
  },
  {
    "text": "authorization you don't have to manage",
    "start": "529800",
    "end": "531320"
  },
  {
    "text": "your own Ingress or egress we're doing",
    "start": "531320",
    "end": "532760"
  },
  {
    "text": "all that for you we're provisioning the",
    "start": "532760",
    "end": "535000"
  },
  {
    "text": "resources for you we're making sure",
    "start": "535000",
    "end": "536519"
  },
  {
    "text": "there's no compute contention and that",
    "start": "536519",
    "end": "538200"
  },
  {
    "text": "you have access to your entire uh",
    "start": "538200",
    "end": "540600"
  },
  {
    "text": "compute pool and then of course we've",
    "start": "540600",
    "end": "543279"
  },
  {
    "text": "implemented it using Raye so it's going",
    "start": "543279",
    "end": "545279"
  },
  {
    "text": "to be very efficient if you're running",
    "start": "545279",
    "end": "546800"
  },
  {
    "text": "on the run time uh to access all of your",
    "start": "546800",
    "end": "549680"
  },
  {
    "text": "devices and all of your nodes resources",
    "start": "549680",
    "end": "552240"
  },
  {
    "text": "and then you're part of the snowflake",
    "start": "552240",
    "end": "553480"
  },
  {
    "text": "ecosystem so you're going to get your",
    "start": "553480",
    "end": "554920"
  },
  {
    "text": "native Integrations also with the rest",
    "start": "554920",
    "end": "556920"
  },
  {
    "text": "of our machine learning uh tooling like",
    "start": "556920",
    "end": "559279"
  },
  {
    "text": "the model registry and we're building a",
    "start": "559279",
    "end": "561640"
  },
  {
    "text": "lot of stuff so more and more stuff can",
    "start": "561640",
    "end": "563959"
  },
  {
    "text": "be integrated uh as time goes",
    "start": "563959",
    "end": "567240"
  },
  {
    "text": "forward so what this looks like is",
    "start": "567240",
    "end": "569880"
  },
  {
    "text": "a pretty straightforward API",
    "start": "569880",
    "end": "571959"
  },
  {
    "text": "where're adding the ability for you to",
    "start": "571959",
    "end": "574440"
  },
  {
    "text": "provide a scaling config for you to",
    "start": "574440",
    "end": "576680"
  },
  {
    "text": "specify how you want your training jobs",
    "start": "576680",
    "end": "578519"
  },
  {
    "text": "to be distributed but then you just pass",
    "start": "578519",
    "end": "580800"
  },
  {
    "text": "in a training function so that's just",
    "start": "580800",
    "end": "583399"
  },
  {
    "text": "going to be whatever code you want to",
    "start": "583399",
    "end": "585160"
  },
  {
    "text": "run um from within your trainer and this",
    "start": "585160",
    "end": "588760"
  },
  {
    "text": "is leveraging the ray core Library",
    "start": "588760",
    "end": "590399"
  },
  {
    "text": "behind the scenes to do that",
    "start": "590399",
    "end": "591560"
  },
  {
    "text": "distribution of work across your cluster",
    "start": "591560",
    "end": "594560"
  },
  {
    "text": "um you know we're also using some higher",
    "start": "594560",
    "end": "596640"
  },
  {
    "text": "level apis too like whatever is",
    "start": "596640",
    "end": "598600"
  },
  {
    "text": "appropriate we're about to uh introduce",
    "start": "598600",
    "end": "601200"
  },
  {
    "text": "tuning and we're going to use Ray tune",
    "start": "601200",
    "end": "602720"
  },
  {
    "text": "behind the scenes for that um yeah so",
    "start": "602720",
    "end": "606040"
  },
  {
    "text": "we're just managing all of that",
    "start": "606040",
    "end": "607640"
  },
  {
    "text": "infrastructure for",
    "start": "607640",
    "end": "609560"
  },
  {
    "text": "you so I wanted to show a quick",
    "start": "609560",
    "end": "614440"
  },
  {
    "text": "demo so this is the container runtime",
    "start": "618760",
    "end": "622120"
  },
  {
    "text": "notebook",
    "start": "622120",
    "end": "625000"
  },
  {
    "text": "um so some of you may have already used",
    "start": "625000",
    "end": "627800"
  },
  {
    "text": "snowflake notebooks they've been",
    "start": "627800",
    "end": "629440"
  },
  {
    "text": "available for the public to use for a",
    "start": "629440",
    "end": "631839"
  },
  {
    "text": "while now um but this is new that you",
    "start": "631839",
    "end": "634640"
  },
  {
    "text": "can run this on a spcs compute snow park",
    "start": "634640",
    "end": "637000"
  },
  {
    "text": "container services compute pool and",
    "start": "637000",
    "end": "638560"
  },
  {
    "text": "that's how you get access to the more",
    "start": "638560",
    "end": "639920"
  },
  {
    "text": "flexible Computing environment basically",
    "start": "639920",
    "end": "642000"
  },
  {
    "text": "just a container image and then you can",
    "start": "642000",
    "end": "644279"
  },
  {
    "text": "choose if you want to run it on a GPU",
    "start": "644279",
    "end": "646399"
  },
  {
    "text": "image or a CPU image and then choose the",
    "start": "646399",
    "end": "648440"
  },
  {
    "text": "compute pool so you know we're here now",
    "start": "648440",
    "end": "652040"
  },
  {
    "text": "in The Notebook on container space um",
    "start": "652040",
    "end": "656240"
  },
  {
    "text": "we've arrived and so this allows you to",
    "start": "656240",
    "end": "658639"
  },
  {
    "text": "do just normal flexible computer",
    "start": "658639",
    "end": "660760"
  },
  {
    "text": "operations you can pip install whatever",
    "start": "660760",
    "end": "662480"
  },
  {
    "text": "packages that you need to run your job",
    "start": "662480",
    "end": "664680"
  },
  {
    "text": "of course since it's snowflake it's",
    "start": "664680",
    "end": "666000"
  },
  {
    "text": "extremely easy for you to grab your",
    "start": "666000",
    "end": "667399"
  },
  {
    "text": "snowflake session so you have access to",
    "start": "667399",
    "end": "669160"
  },
  {
    "text": "your snowflake data so you can just",
    "start": "669160",
    "end": "672959"
  },
  {
    "text": "Define your snowflake table name this",
    "start": "672959",
    "end": "676519"
  },
  {
    "text": "shows uh that new data connector API so",
    "start": "676519",
    "end": "679800"
  },
  {
    "text": "you just easily say okay take my",
    "start": "679800",
    "end": "682040"
  },
  {
    "text": "snowflake data turn it into a pandas",
    "start": "682040",
    "end": "684519"
  },
  {
    "text": "data frame here we're going to",
    "start": "684519",
    "end": "686240"
  },
  {
    "text": "materialize 12 gigs of data um and",
    "start": "686240",
    "end": "689399"
  },
  {
    "text": "should take about 10 seconds so yeah",
    "start": "689399",
    "end": "691200"
  },
  {
    "text": "it's done here in 11",
    "start": "691200",
    "end": "692920"
  },
  {
    "text": "seconds um these are some warnings that",
    "start": "692920",
    "end": "695760"
  },
  {
    "text": "you can silence if you want to you can",
    "start": "695760",
    "end": "697160"
  },
  {
    "text": "actually see that it's letting you know",
    "start": "697160",
    "end": "699160"
  },
  {
    "text": "that you've connected to a ray cluster",
    "start": "699160",
    "end": "700560"
  },
  {
    "text": "behind the",
    "start": "700560",
    "end": "702200"
  },
  {
    "text": "scenes and then using your snowflake",
    "start": "702200",
    "end": "705160"
  },
  {
    "text": "data once again you can train open",
    "start": "705160",
    "end": "707440"
  },
  {
    "text": "source models you can you know bring",
    "start": "707440",
    "end": "709519"
  },
  {
    "text": "your own code whatever you've been",
    "start": "709519",
    "end": "711440"
  },
  {
    "text": "running outside of snowflake and you can",
    "start": "711440",
    "end": "712920"
  },
  {
    "text": "run it here in Snowflake now",
    "start": "712920",
    "end": "716320"
  },
  {
    "text": "directly as many of you know XG boost",
    "start": "716320",
    "end": "718800"
  },
  {
    "text": "for example will only use one device if",
    "start": "718800",
    "end": "720560"
  },
  {
    "text": "you're on a GPU enabled compute pool so",
    "start": "720560",
    "end": "724040"
  },
  {
    "text": "you can also use uh our apis if you want",
    "start": "724040",
    "end": "727680"
  },
  {
    "text": "to make sure that you're leveraging all",
    "start": "727680",
    "end": "729240"
  },
  {
    "text": "of the compute available to you in your",
    "start": "729240",
    "end": "731240"
  },
  {
    "text": "cluster so this is uh oops I just ran",
    "start": "731240",
    "end": "734199"
  },
  {
    "text": "the XG boost one",
    "start": "734199",
    "end": "736920"
  },
  {
    "text": "again here we're importing our XG boost",
    "start": "737040",
    "end": "740279"
  },
  {
    "text": "estimator it has almost the exact same",
    "start": "740279",
    "end": "742519"
  },
  {
    "text": "API you put in all of the XG boost",
    "start": "742519",
    "end": "744680"
  },
  {
    "text": "configs but then you also just add this",
    "start": "744680",
    "end": "746440"
  },
  {
    "text": "additional scaling config to you you",
    "start": "746440",
    "end": "749240"
  },
  {
    "text": "know tell us how you want to distribute",
    "start": "749240",
    "end": "750560"
  },
  {
    "text": "your job I think this one's actually",
    "start": "750560",
    "end": "752480"
  },
  {
    "text": "going to load all the",
    "start": "752480",
    "end": "754000"
  },
  {
    "text": "data and run a little slower because",
    "start": "754000",
    "end": "756600"
  },
  {
    "text": "it's such a small pint size example uh",
    "start": "756600",
    "end": "759639"
  },
  {
    "text": "that we don't really need to do the",
    "start": "759639",
    "end": "761480"
  },
  {
    "text": "distributed API but this should finish",
    "start": "761480",
    "end": "764480"
  },
  {
    "text": "up here in a",
    "start": "764480",
    "end": "766760"
  },
  {
    "text": "sec and then for other um like for",
    "start": "766760",
    "end": "770079"
  },
  {
    "text": "pytorch for example it's the exact same",
    "start": "770079",
    "end": "771760"
  },
  {
    "text": "story you can load your",
    "start": "771760",
    "end": "773560"
  },
  {
    "text": "data and then you can Define your own",
    "start": "773560",
    "end": "776040"
  },
  {
    "text": "model and run your pytorch open source",
    "start": "776040",
    "end": "779199"
  },
  {
    "text": "workloads directly from within the",
    "start": "779199",
    "end": "781680"
  },
  {
    "text": "notebook um this won't use Ray obviously",
    "start": "781680",
    "end": "785440"
  },
  {
    "text": "except to load the data because you're",
    "start": "785440",
    "end": "786760"
  },
  {
    "text": "running your own model that you've",
    "start": "786760",
    "end": "787959"
  },
  {
    "text": "written",
    "start": "787959",
    "end": "788920"
  },
  {
    "text": "yourself but then here if you take that",
    "start": "788920",
    "end": "791199"
  },
  {
    "text": "same exact training function and then",
    "start": "791199",
    "end": "792839"
  },
  {
    "text": "you pass it",
    "start": "792839",
    "end": "794240"
  },
  {
    "text": "into a snowflake specific API this",
    "start": "794240",
    "end": "797079"
  },
  {
    "text": "pytorch distributor API you can tell us",
    "start": "797079",
    "end": "800560"
  },
  {
    "text": "how you want to scale out and we will",
    "start": "800560",
    "end": "803279"
  },
  {
    "text": "make sure that we use all of the devices",
    "start": "803279",
    "end": "805240"
  },
  {
    "text": "that you're interested in using on your",
    "start": "805240",
    "end": "806800"
  },
  {
    "text": "behalf so same training function the",
    "start": "806800",
    "end": "809560"
  },
  {
    "text": "only additional parameters are this",
    "start": "809560",
    "end": "811480"
  },
  {
    "text": "scaling config and then we you modify",
    "start": "811480",
    "end": "814760"
  },
  {
    "text": "just a little bit to say things like uh",
    "start": "814760",
    "end": "817360"
  },
  {
    "text": "you know get the data that you're",
    "start": "817360",
    "end": "818480"
  },
  {
    "text": "interested get the rank of your device",
    "start": "818480",
    "end": "820279"
  },
  {
    "text": "like we we passed all these convenient",
    "start": "820279",
    "end": "822000"
  },
  {
    "text": "functions to you so that you can operate",
    "start": "822000",
    "end": "823680"
  },
  {
    "text": "from within a distributed training",
    "start": "823680",
    "end": "825760"
  },
  {
    "text": "context and that's it thank you guys so",
    "start": "825760",
    "end": "827959"
  },
  {
    "text": "much",
    "start": "827959",
    "end": "830959"
  }
]