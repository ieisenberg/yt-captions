[
  {
    "text": "well hello everybody my name is signar",
    "start": "3300",
    "end": "5700"
  },
  {
    "text": "Baez I want to talk to you about the",
    "start": "5700",
    "end": "7859"
  },
  {
    "text": "latest Innovations we have in mongodb",
    "start": "7859",
    "end": "9720"
  },
  {
    "text": "which is our new Vector search",
    "start": "9720",
    "end": "11460"
  },
  {
    "text": "capability which is uh in beta hopefully",
    "start": "11460",
    "end": "14340"
  },
  {
    "text": "to be released fully J by next year",
    "start": "14340",
    "end": "17760"
  },
  {
    "text": "so what is a transactional workload you",
    "start": "17760",
    "end": "20640"
  },
  {
    "text": "know by definition it's obviously one",
    "start": "20640",
    "end": "22140"
  },
  {
    "text": "that supports changes to the data but we",
    "start": "22140",
    "end": "25140"
  },
  {
    "text": "need to think about at scale and with",
    "start": "25140",
    "end": "27420"
  },
  {
    "text": "strong consistency right uh two actions",
    "start": "27420",
    "end": "30240"
  },
  {
    "text": "from humans you know devices putting",
    "start": "30240",
    "end": "32279"
  },
  {
    "text": "financial and gaming Etc and that's what",
    "start": "32279",
    "end": "34320"
  },
  {
    "text": "really differentiates what mongodb can",
    "start": "34320",
    "end": "36300"
  },
  {
    "text": "do for developers right it's about",
    "start": "36300",
    "end": "38280"
  },
  {
    "text": "building applications that are for your",
    "start": "38280",
    "end": "40500"
  },
  {
    "text": "end customers but but respect the value",
    "start": "40500",
    "end": "43500"
  },
  {
    "text": "of your data with strong consistency",
    "start": "43500",
    "end": "46140"
  },
  {
    "text": "so mongodb is used in a variety of use",
    "start": "46140",
    "end": "48780"
  },
  {
    "text": "cases okay from payments to mobile to",
    "start": "48780",
    "end": "51719"
  },
  {
    "text": "gaming and much more",
    "start": "51719",
    "end": "53940"
  },
  {
    "text": "uh for example a company called temenos",
    "start": "53940",
    "end": "57120"
  },
  {
    "text": "which runs a banking Cloud recently did",
    "start": "57120",
    "end": "59879"
  },
  {
    "text": "a a very heavy performances a routing",
    "start": "59879",
    "end": "63359"
  },
  {
    "text": "process 200 million finance loans and",
    "start": "63359",
    "end": "65939"
  },
  {
    "text": "100 million retail accounts picking at",
    "start": "65939",
    "end": "68400"
  },
  {
    "text": "about 150 000 transactions per second",
    "start": "68400",
    "end": "70260"
  },
  {
    "text": "now these are strongly consistent",
    "start": "70260",
    "end": "72360"
  },
  {
    "text": "Financial transactions right they were",
    "start": "72360",
    "end": "74280"
  },
  {
    "text": "able to do this before with traditional",
    "start": "74280",
    "end": "75720"
  },
  {
    "text": "databases",
    "start": "75720",
    "end": "76920"
  },
  {
    "text": "gaming something more fun right that",
    "start": "76920",
    "end": "79860"
  },
  {
    "text": "game company that's literally the name",
    "start": "79860",
    "end": "81240"
  },
  {
    "text": "of the company there's a very beautiful",
    "start": "81240",
    "end": "82860"
  },
  {
    "text": "game called a sky they were able to",
    "start": "82860",
    "end": "85320"
  },
  {
    "text": "scale to 1 million concurrent Gamers one",
    "start": "85320",
    "end": "87780"
  },
  {
    "text": "million CCU after they move from MySQL",
    "start": "87780",
    "end": "90420"
  },
  {
    "text": "to mongodb right and they also",
    "start": "90420",
    "end": "92280"
  },
  {
    "text": "implemented the ctrs pattern and they",
    "start": "92280",
    "end": "94439"
  },
  {
    "text": "run on a large started cluster",
    "start": "94439",
    "end": "97500"
  },
  {
    "text": "so mongodb Atlas for those that may know",
    "start": "97500",
    "end": "99900"
  },
  {
    "text": "us from the past you know your classic",
    "start": "99900",
    "end": "101159"
  },
  {
    "text": "mongodb Json document store in Atlas we",
    "start": "101159",
    "end": "104460"
  },
  {
    "text": "become a data platform and we run an",
    "start": "104460",
    "end": "106799"
  },
  {
    "text": "author Cloud providers we can we support",
    "start": "106799",
    "end": "109200"
  },
  {
    "text": "about 120 or more Cloud regions across",
    "start": "109200",
    "end": "111659"
  },
  {
    "text": "all three of them so we are truly the",
    "start": "111659",
    "end": "113460"
  },
  {
    "text": "only Cloud agnostic multi-cloud",
    "start": "113460",
    "end": "115320"
  },
  {
    "text": "cross-cloud database out there",
    "start": "115320",
    "end": "118619"
  },
  {
    "text": "so what does an architecture look like",
    "start": "118619",
    "end": "121259"
  },
  {
    "text": "with mongodb Atlas for for AI obviously",
    "start": "121259",
    "end": "125579"
  },
  {
    "text": "your main you know data store will be",
    "start": "125579",
    "end": "128280"
  },
  {
    "text": "the atlas database where you have",
    "start": "128280",
    "end": "130140"
  },
  {
    "text": "transactions you have the security uh a",
    "start": "130140",
    "end": "133680"
  },
  {
    "text": "really cool feature by the way is",
    "start": "133680",
    "end": "135120"
  },
  {
    "text": "curable encryption we are the only",
    "start": "135120",
    "end": "137099"
  },
  {
    "text": "database where you can actually encrypt",
    "start": "137099",
    "end": "139260"
  },
  {
    "text": "the data in in a you know in the",
    "start": "139260",
    "end": "142020"
  },
  {
    "text": "database but you can still query with",
    "start": "142020",
    "end": "144000"
  },
  {
    "text": "the original values",
    "start": "144000",
    "end": "145560"
  },
  {
    "text": "and now we've extended it with Vector",
    "start": "145560",
    "end": "147840"
  },
  {
    "text": "search okay so now any data you have in",
    "start": "147840",
    "end": "151200"
  },
  {
    "text": "an atlas cluster can also be vectorized",
    "start": "151200",
    "end": "154080"
  },
  {
    "text": "can be index for Vector search and",
    "start": "154080",
    "end": "156300"
  },
  {
    "text": "combined with traditional queries",
    "start": "156300",
    "end": "158760"
  },
  {
    "text": "let's see what that looks like",
    "start": "158760",
    "end": "161400"
  },
  {
    "text": "so if you know you know we've been",
    "start": "161400",
    "end": "163800"
  },
  {
    "text": "able to store an array of numbers since",
    "start": "163800",
    "end": "166920"
  },
  {
    "text": "the beginning right since 10 plus years",
    "start": "166920",
    "end": "168660"
  },
  {
    "text": "because it's essentially an array or a",
    "start": "168660",
    "end": "170819"
  },
  {
    "text": "vector is an array of floats right",
    "start": "170819",
    "end": "174540"
  },
  {
    "text": "but we've added the vector search uh",
    "start": "174540",
    "end": "176879"
  },
  {
    "text": "Index definition now where you can uh",
    "start": "176879",
    "end": "180120"
  },
  {
    "text": "essentially Define which fields in a",
    "start": "180120",
    "end": "182160"
  },
  {
    "text": "document will be will be indexed for",
    "start": "182160",
    "end": "185040"
  },
  {
    "text": "vectors you define your Dimensions you",
    "start": "185040",
    "end": "187620"
  },
  {
    "text": "define the similarity function but you",
    "start": "187620",
    "end": "189660"
  },
  {
    "text": "can also optionally index other fields",
    "start": "189660",
    "end": "192360"
  },
  {
    "text": "in your documents right and that's where",
    "start": "192360",
    "end": "194099"
  },
  {
    "text": "you can now combine Vector with rational",
    "start": "194099",
    "end": "196200"
  },
  {
    "text": "point and range queries so here you go",
    "start": "196200",
    "end": "198720"
  },
  {
    "text": "in this example I'm going to go and",
    "start": "198720",
    "end": "201120"
  },
  {
    "text": "query for this particular Vector but as",
    "start": "201120",
    "end": "203580"
  },
  {
    "text": "well filter based on some additional",
    "start": "203580",
    "end": "205140"
  },
  {
    "text": "fields and find my nearest Neighbors",
    "start": "205140",
    "end": "208680"
  },
  {
    "text": "okay so here's a demo if anybody wants",
    "start": "208680",
    "end": "211080"
  },
  {
    "text": "to scan that QR code all the code that",
    "start": "211080",
    "end": "213060"
  },
  {
    "text": "I'm showing is available on GitHub",
    "start": "213060",
    "end": "215159"
  },
  {
    "text": "okay where we've already taken a a",
    "start": "215159",
    "end": "217500"
  },
  {
    "text": "traditional mySQL database",
    "start": "217500",
    "end": "220080"
  },
  {
    "text": "we've migrated using our migrator",
    "start": "220080",
    "end": "221819"
  },
  {
    "text": "product",
    "start": "221819",
    "end": "224099"
  },
  {
    "text": "and once in Atlas we have a mobile app",
    "start": "224099",
    "end": "226500"
  },
  {
    "text": "and we also have a graphql using Postman",
    "start": "226500",
    "end": "229200"
  },
  {
    "text": "to modify data back and forth but you",
    "start": "229200",
    "end": "232860"
  },
  {
    "text": "know the newest functionality is Vector",
    "start": "232860",
    "end": "235440"
  },
  {
    "text": "search right so we're actually going to",
    "start": "235440",
    "end": "237180"
  },
  {
    "text": "modify data in real time we're going to",
    "start": "237180",
    "end": "239459"
  },
  {
    "text": "call out to any scale endpoints and",
    "start": "239459",
    "end": "242420"
  },
  {
    "text": "describe my data and embed an index",
    "start": "242420",
    "end": "245819"
  },
  {
    "text": "Community for vector and and you'll see",
    "start": "245819",
    "end": "247980"
  },
  {
    "text": "in real time how we can execute these",
    "start": "247980",
    "end": "250019"
  },
  {
    "text": "queries",
    "start": "250019",
    "end": "251280"
  },
  {
    "text": "so let's get actually into a live demo",
    "start": "251280",
    "end": "252959"
  },
  {
    "text": "and make sure I have connectivity first",
    "start": "252959",
    "end": "255180"
  },
  {
    "text": "of all",
    "start": "255180",
    "end": "256440"
  },
  {
    "text": "so hotspot don't fail me now",
    "start": "256440",
    "end": "260419"
  },
  {
    "text": "Perfect all right",
    "start": "260579",
    "end": "263040"
  },
  {
    "text": "so here is a migrator that I already",
    "start": "263040",
    "end": "265199"
  },
  {
    "text": "talked about it's already been done by",
    "start": "265199",
    "end": "266520"
  },
  {
    "text": "someone to show you the actual tool",
    "start": "266520",
    "end": "267900"
  },
  {
    "text": "where you can remap the schema and bring",
    "start": "267900",
    "end": "270060"
  },
  {
    "text": "data from a traditional database into",
    "start": "270060",
    "end": "271979"
  },
  {
    "text": "Json documents right so that's already",
    "start": "271979",
    "end": "273720"
  },
  {
    "text": "been done",
    "start": "273720",
    "end": "275280"
  },
  {
    "text": "here's my cluster classic you know",
    "start": "275280",
    "end": "277440"
  },
  {
    "text": "mongodb Atlas cluster on us West 2 three",
    "start": "277440",
    "end": "280979"
  },
  {
    "text": "nodes Etc",
    "start": "280979",
    "end": "283759"
  },
  {
    "text": "I'm not lying here's my any scale",
    "start": "283919",
    "end": "286500"
  },
  {
    "text": "credentials obviously I'm not going to",
    "start": "286500",
    "end": "288000"
  },
  {
    "text": "show you my full credentials but yes",
    "start": "288000",
    "end": "289919"
  },
  {
    "text": "this is using any scale endpoints okay",
    "start": "289919",
    "end": "293580"
  },
  {
    "text": "and so the first thing we'll do is that",
    "start": "293580",
    "end": "295259"
  },
  {
    "text": "as we modify data we're going to fire a",
    "start": "295259",
    "end": "297720"
  },
  {
    "text": "trigger this is an atlas trigger fully",
    "start": "297720",
    "end": "300000"
  },
  {
    "text": "function fully fully hosted okay and any",
    "start": "300000",
    "end": "302880"
  },
  {
    "text": "any insert update or replace that I do",
    "start": "302880",
    "end": "305880"
  },
  {
    "text": "in the database will fire a particular",
    "start": "305880",
    "end": "308280"
  },
  {
    "text": "function called func embed Northwind",
    "start": "308280",
    "end": "310620"
  },
  {
    "text": "orders right so what does functions look",
    "start": "310620",
    "end": "313620"
  },
  {
    "text": "like",
    "start": "313620",
    "end": "314880"
  },
  {
    "text": "uh that function is right here",
    "start": "314880",
    "end": "318979"
  },
  {
    "text": "and essentially it's going to go and",
    "start": "319139",
    "end": "322199"
  },
  {
    "text": "fire off a prompt against any scale",
    "start": "322199",
    "end": "325259"
  },
  {
    "text": "endpoints and do a prompt to ask you to",
    "start": "325259",
    "end": "327840"
  },
  {
    "text": "describe in in natural language what",
    "start": "327840",
    "end": "330479"
  },
  {
    "text": "that sales order is about is a Json",
    "start": "330479",
    "end": "332940"
  },
  {
    "text": "document that looks like this exactly",
    "start": "332940",
    "end": "335820"
  },
  {
    "text": "okay",
    "start": "335820",
    "end": "338300"
  },
  {
    "text": "let me maximize that a little bit",
    "start": "339300",
    "end": "342539"
  },
  {
    "text": "you can see how we have details about my",
    "start": "342539",
    "end": "345180"
  },
  {
    "text": "customer my employee the other details",
    "start": "345180",
    "end": "348720"
  },
  {
    "text": "and much more right so in one single",
    "start": "348720",
    "end": "351120"
  },
  {
    "text": "Json document I can have everything",
    "start": "351120",
    "end": "352560"
  },
  {
    "text": "about let's say a sales order that I",
    "start": "352560",
    "end": "355020"
  },
  {
    "text": "brought over from a relational database",
    "start": "355020",
    "end": "357180"
  },
  {
    "text": "right so now you can ask ask",
    "start": "357180",
    "end": "360380"
  },
  {
    "text": "any scale endpoints to describe that in",
    "start": "360380",
    "end": "363780"
  },
  {
    "text": "five or more sentences that you do a",
    "start": "363780",
    "end": "365400"
  },
  {
    "text": "prompt right using llama and obtain that",
    "start": "365400",
    "end": "368580"
  },
  {
    "text": "textual description and we're going to",
    "start": "368580",
    "end": "370560"
  },
  {
    "text": "do that against this particular endpoint",
    "start": "370560",
    "end": "371940"
  },
  {
    "text": "right here so you can see that truly I",
    "start": "371940",
    "end": "373919"
  },
  {
    "text": "am using any scale endpoint right",
    "start": "373919",
    "end": "376740"
  },
  {
    "text": "great so once I have that then I can go",
    "start": "376740",
    "end": "380100"
  },
  {
    "text": "and embed it using another endpoint this",
    "start": "380100",
    "end": "382560"
  },
  {
    "text": "was a custom endpoint we developed in",
    "start": "382560",
    "end": "384660"
  },
  {
    "text": "any scale as well and that is running an",
    "start": "384660",
    "end": "387060"
  },
  {
    "text": "embedding model",
    "start": "387060",
    "end": "388560"
  },
  {
    "text": "right and that we simply do another call",
    "start": "388560",
    "end": "391699"
  },
  {
    "text": "to our API get the URL with the",
    "start": "391699",
    "end": "395520"
  },
  {
    "text": "authentication Etc and uh and embed that",
    "start": "395520",
    "end": "398880"
  },
  {
    "text": "that or rather obtain the embedding",
    "start": "398880",
    "end": "401220"
  },
  {
    "text": "right and once we have that embedding",
    "start": "401220",
    "end": "404520"
  },
  {
    "text": "then it's super easy to just go and",
    "start": "404520",
    "end": "407900"
  },
  {
    "text": "update I should not have that open okay",
    "start": "407900",
    "end": "410220"
  },
  {
    "text": "I'm gonna have to open it",
    "start": "410220",
    "end": "412800"
  },
  {
    "text": "go to function there you go",
    "start": "412800",
    "end": "416000"
  },
  {
    "text": "so you see see how I obtain my",
    "start": "421259",
    "end": "423960"
  },
  {
    "text": "description",
    "start": "423960",
    "end": "426319"
  },
  {
    "text": "my embedding and after that all I really",
    "start": "426840",
    "end": "429720"
  },
  {
    "text": "do is a simple update into my collection",
    "start": "429720",
    "end": "432660"
  },
  {
    "text": "for that particular document and add two",
    "start": "432660",
    "end": "435000"
  },
  {
    "text": "new fields on the fly right I'm adding",
    "start": "435000",
    "end": "437100"
  },
  {
    "text": "the actual description",
    "start": "437100",
    "end": "438360"
  },
  {
    "text": "and the embedding",
    "start": "438360",
    "end": "440220"
  },
  {
    "text": "so let's go now to the data and we see",
    "start": "440220",
    "end": "442860"
  },
  {
    "text": "here",
    "start": "442860",
    "end": "444300"
  },
  {
    "text": "that let me close that out a little bit",
    "start": "444300",
    "end": "446160"
  },
  {
    "text": "Hold On by going too fast",
    "start": "446160",
    "end": "449099"
  },
  {
    "text": "there you go",
    "start": "449099",
    "end": "450660"
  },
  {
    "text": "so there you see the actual two fields",
    "start": "450660",
    "end": "453539"
  },
  {
    "text": "this is the actual description we got",
    "start": "453539",
    "end": "455160"
  },
  {
    "text": "from llama",
    "start": "455160",
    "end": "457740"
  },
  {
    "text": "okay and the actual embedding",
    "start": "457740",
    "end": "460800"
  },
  {
    "text": "right",
    "start": "460800",
    "end": "462720"
  },
  {
    "text": "there's my that's my array",
    "start": "462720",
    "end": "464699"
  },
  {
    "text": "now now that we have that in my database",
    "start": "464699",
    "end": "469400"
  },
  {
    "text": "we can then Define a an index",
    "start": "469620",
    "end": "473880"
  },
  {
    "text": "that looks like this",
    "start": "473880",
    "end": "477300"
  },
  {
    "text": "right so this is my actual Vector search",
    "start": "477300",
    "end": "479280"
  },
  {
    "text": "index in Atlas where my embedding field",
    "start": "479280",
    "end": "483680"
  },
  {
    "text": "is set for Vector right using the cosine",
    "start": "483680",
    "end": "487259"
  },
  {
    "text": "function with 768 dimensions",
    "start": "487259",
    "end": "490500"
  },
  {
    "text": "but I also have traditional Fields so",
    "start": "490500",
    "end": "493319"
  },
  {
    "text": "I'm afraid my required date my chip via",
    "start": "493319",
    "end": "495539"
  },
  {
    "text": "numbers and dates right so I can combine",
    "start": "495539",
    "end": "497940"
  },
  {
    "text": "Vector data against and and point and",
    "start": "497940",
    "end": "500039"
  },
  {
    "text": "range",
    "start": "500039",
    "end": "500879"
  },
  {
    "text": "right and so now let's actually go and",
    "start": "500879",
    "end": "502979"
  },
  {
    "text": "execute a query using graphql",
    "start": "502979",
    "end": "507419"
  },
  {
    "text": "this is our hosted graphql provider",
    "start": "507419",
    "end": "510479"
  },
  {
    "text": "okay first thing I'll do is get my uh my",
    "start": "510479",
    "end": "514380"
  },
  {
    "text": "tokens so I can call the endpoints great",
    "start": "514380",
    "end": "517620"
  },
  {
    "text": "now I'm just going to go straight into",
    "start": "517620",
    "end": "520020"
  },
  {
    "text": "my Vector search",
    "start": "520020",
    "end": "522000"
  },
  {
    "text": "so we're going to do is going to in real",
    "start": "522000",
    "end": "523919"
  },
  {
    "text": "time we're gonna vectorize this string",
    "start": "523919",
    "end": "526980"
  },
  {
    "text": "so I'm going to try to find customers",
    "start": "526980",
    "end": "529260"
  },
  {
    "text": "who ordered seafood and alcoholic drinks",
    "start": "529260",
    "end": "531420"
  },
  {
    "text": "with this kind of 10 or more okay I'm",
    "start": "531420",
    "end": "534600"
  },
  {
    "text": "gonna vectorize that in real time and",
    "start": "534600",
    "end": "536519"
  },
  {
    "text": "run a vector search query that came back",
    "start": "536519",
    "end": "538920"
  },
  {
    "text": "into 44 milliseconds that's actually",
    "start": "538920",
    "end": "540540"
  },
  {
    "text": "showing from my laptop and you can see",
    "start": "540540",
    "end": "542580"
  },
  {
    "text": "that let's see the sales orders indeed",
    "start": "542580",
    "end": "544740"
  },
  {
    "text": "you know it found I guess that that is",
    "start": "544740",
    "end": "547200"
  },
  {
    "text": "definitely an alcoholic drink still",
    "start": "547200",
    "end": "548459"
  },
  {
    "text": "lifestyle",
    "start": "548459",
    "end": "550640"
  },
  {
    "text": "that's Seafood so it is it is",
    "start": "550640",
    "end": "553680"
  },
  {
    "text": "essentially doing a semantic search",
    "start": "553680",
    "end": "555240"
  },
  {
    "text": "right against my data",
    "start": "555240",
    "end": "557339"
  },
  {
    "text": "now this is something more interesting",
    "start": "557339",
    "end": "558899"
  },
  {
    "text": "what about point and range okay",
    "start": "558899",
    "end": "562380"
  },
  {
    "text": "well I'm going to take the same exact uh",
    "start": "562380",
    "end": "564959"
  },
  {
    "text": "query right semantic search but I'm also",
    "start": "564959",
    "end": "567600"
  },
  {
    "text": "going to query on traditional Fields so",
    "start": "567600",
    "end": "569640"
  },
  {
    "text": "well the freight is around 10 where the",
    "start": "569640",
    "end": "571380"
  },
  {
    "text": "required days are on this date and the",
    "start": "571380",
    "end": "573180"
  },
  {
    "text": "CPI is that",
    "start": "573180",
    "end": "574500"
  },
  {
    "text": "let's see what we get",
    "start": "574500",
    "end": "576420"
  },
  {
    "text": "all right so it's definitely a different",
    "start": "576420",
    "end": "578399"
  },
  {
    "text": "order right from 1997 with a freight of",
    "start": "578399",
    "end": "581519"
  },
  {
    "text": "this much and so on",
    "start": "581519",
    "end": "583860"
  },
  {
    "text": "and again Boston crab meat seafood Etc",
    "start": "583860",
    "end": "586380"
  },
  {
    "text": "right all good",
    "start": "586380",
    "end": "588779"
  },
  {
    "text": "now for the last part",
    "start": "588779",
    "end": "591300"
  },
  {
    "text": "let's do one where we don't have data",
    "start": "591300",
    "end": "595740"
  },
  {
    "text": "so",
    "start": "595740",
    "end": "597480"
  },
  {
    "text": "I've changed the prompt now whenever you",
    "start": "597480",
    "end": "599580"
  },
  {
    "text": "can read this",
    "start": "599580",
    "end": "600720"
  },
  {
    "text": "but it says I want to find customers who",
    "start": "600720",
    "end": "602700"
  },
  {
    "text": "ordered midnight Crusader accessories",
    "start": "602700",
    "end": "605279"
  },
  {
    "text": "huh so we don't have anything any like",
    "start": "605279",
    "end": "608160"
  },
  {
    "text": "that",
    "start": "608160",
    "end": "609480"
  },
  {
    "text": "so let's go in and insert this new new",
    "start": "609480",
    "end": "611820"
  },
  {
    "text": "order into the database",
    "start": "611820",
    "end": "614220"
  },
  {
    "text": "so to show you what it is it's a Batman",
    "start": "614220",
    "end": "617220"
  },
  {
    "text": "cape for Halloween",
    "start": "617220",
    "end": "619399"
  },
  {
    "text": "costumes in bright green with superhero",
    "start": "619399",
    "end": "623220"
  },
  {
    "text": "bad logo in Black so that's a pretty",
    "start": "623220",
    "end": "625680"
  },
  {
    "text": "particular item",
    "start": "625680",
    "end": "628260"
  },
  {
    "text": "we're gonna go and add it into my",
    "start": "628260",
    "end": "630300"
  },
  {
    "text": "database",
    "start": "630300",
    "end": "632720"
  },
  {
    "text": "okay",
    "start": "632820",
    "end": "635300"
  },
  {
    "text": "all right and now let's run the postman",
    "start": "637019",
    "end": "643140"
  },
  {
    "text": "and obviously it doesn't find it because",
    "start": "643140",
    "end": "645480"
  },
  {
    "text": "right now we're calling out to any scale",
    "start": "645480",
    "end": "647220"
  },
  {
    "text": "endpoints getting that completion and",
    "start": "647220",
    "end": "649440"
  },
  {
    "text": "then getting the embedding so we should",
    "start": "649440",
    "end": "651420"
  },
  {
    "text": "see it pretty soon here",
    "start": "651420",
    "end": "654500"
  },
  {
    "text": "and there it is",
    "start": "655980",
    "end": "657420"
  },
  {
    "text": "that was instantly described and",
    "start": "657420",
    "end": "659700"
  },
  {
    "text": "vectorized and index for Vector search",
    "start": "659700",
    "end": "662040"
  },
  {
    "text": "with mongodb Atlas",
    "start": "662040",
    "end": "664500"
  },
  {
    "text": "and with that",
    "start": "664500",
    "end": "666300"
  },
  {
    "text": "let me go back to my",
    "start": "666300",
    "end": "669180"
  },
  {
    "text": "slides",
    "start": "669180",
    "end": "672019"
  },
  {
    "text": "and now obviously you know we you can",
    "start": "672300",
    "end": "675000"
  },
  {
    "text": "always embed one at a time but that can",
    "start": "675000",
    "end": "677579"
  },
  {
    "text": "still take a lot of time so we also",
    "start": "677579",
    "end": "679860"
  },
  {
    "text": "built on our demo I want you to run this",
    "start": "679860",
    "end": "681420"
  },
  {
    "text": "because catalog runs from my Hotspot but",
    "start": "681420",
    "end": "683820"
  },
  {
    "text": "we did build a demo to show you how you",
    "start": "683820",
    "end": "686880"
  },
  {
    "text": "can use any scale endpoints and array to",
    "start": "686880",
    "end": "690000"
  },
  {
    "text": "vectorize in parallel right so here's",
    "start": "690000",
    "end": "692519"
  },
  {
    "text": "actually python running this particular",
    "start": "692519",
    "end": "695040"
  },
  {
    "text": "code",
    "start": "695040",
    "end": "696120"
  },
  {
    "text": "and I am going to give a lot of credit",
    "start": "696120",
    "end": "697980"
  },
  {
    "text": "to Kyle Huang who was not able to attend",
    "start": "697980",
    "end": "700079"
  },
  {
    "text": "today from any skill uh who uh we",
    "start": "700079",
    "end": "704399"
  },
  {
    "text": "collaborated on building this demo so",
    "start": "704399",
    "end": "706380"
  },
  {
    "text": "you can see here how we were able to",
    "start": "706380",
    "end": "707640"
  },
  {
    "text": "vectorize in parallel and describe uh",
    "start": "707640",
    "end": "711420"
  },
  {
    "text": "the data right so for example we were",
    "start": "711420",
    "end": "713339"
  },
  {
    "text": "able to embed 150 orders in only 4.4",
    "start": "713339",
    "end": "715920"
  },
  {
    "text": "seconds uh this uh describe them in 2007",
    "start": "715920",
    "end": "719940"
  },
  {
    "text": "in seconds and more",
    "start": "719940",
    "end": "722279"
  },
  {
    "text": "and to give to kind of get a sense of",
    "start": "722279",
    "end": "725220"
  },
  {
    "text": "what that means from a performance",
    "start": "725220",
    "end": "726540"
  },
  {
    "text": "perspective",
    "start": "726540",
    "end": "727740"
  },
  {
    "text": "you know if we do one you know sales",
    "start": "727740",
    "end": "730320"
  },
  {
    "text": "order at a time ad hoc via open AI that",
    "start": "730320",
    "end": "733320"
  },
  {
    "text": "is we took several hours I just left it",
    "start": "733320",
    "end": "735000"
  },
  {
    "text": "running and obviously went into",
    "start": "735000",
    "end": "736140"
  },
  {
    "text": "something else by using",
    "start": "736140",
    "end": "738620"
  },
  {
    "text": "Rey python any scale endpoints and also",
    "start": "738620",
    "end": "741839"
  },
  {
    "text": "the mongodb bulk operations",
    "start": "741839",
    "end": "744240"
  },
  {
    "text": "if you know everything's out we can",
    "start": "744240",
    "end": "745980"
  },
  {
    "text": "actually you know do SUB second chat",
    "start": "745980",
    "end": "748320"
  },
  {
    "text": "completions and definitely even sub uh",
    "start": "748320",
    "end": "751380"
  },
  {
    "text": "fractional second for embedding writing",
    "start": "751380",
    "end": "753540"
  },
  {
    "text": "batches of 150. so it really it really",
    "start": "753540",
    "end": "755880"
  },
  {
    "text": "makes a difference when you use Ray to",
    "start": "755880",
    "end": "758279"
  },
  {
    "text": "paralyze things",
    "start": "758279",
    "end": "760019"
  },
  {
    "text": "and so with that we were just named the",
    "start": "760019",
    "end": "762120"
  },
  {
    "text": "number one vector dbms by DB engines",
    "start": "762120",
    "end": "765360"
  },
  {
    "text": "this I think this was just came out to",
    "start": "765360",
    "end": "766680"
  },
  {
    "text": "there maybe yesterday",
    "start": "766680",
    "end": "767899"
  },
  {
    "text": "uh others are already trying to drop in",
    "start": "767899",
    "end": "771420"
  },
  {
    "text": "ranking",
    "start": "771420",
    "end": "773040"
  },
  {
    "text": "and that's all I have",
    "start": "773040",
    "end": "775139"
  },
  {
    "text": "thank you so much",
    "start": "775139",
    "end": "777000"
  },
  {
    "text": "one minute left if anybody wants your q",
    "start": "777000",
    "end": "779100"
  },
  {
    "text": "a",
    "start": "779100",
    "end": "781279"
  }
]