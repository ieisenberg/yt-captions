[
  {
    "text": "[Music]",
    "start": "150",
    "end": "14559"
  },
  {
    "text": "hi everyone and thank you for joining my",
    "start": "14559",
    "end": "16880"
  },
  {
    "text": "talk about how and why we use race surf",
    "start": "16880",
    "end": "20000"
  },
  {
    "text": "for implementing our fully automated",
    "start": "20000",
    "end": "22760"
  },
  {
    "text": "digital authentication Service called",
    "start": "22760",
    "end": "26000"
  },
  {
    "text": "validator my name is Tanya Baya and I",
    "start": "26000",
    "end": "30199"
  },
  {
    "text": "graduated from kre Institute of",
    "start": "30199",
    "end": "32439"
  },
  {
    "text": "Technology in",
    "start": "32440",
    "end": "34879"
  },
  {
    "text": "2018 afterwards I started working as a",
    "start": "34879",
    "end": "37719"
  },
  {
    "text": "machine learning engineer and right now",
    "start": "37719",
    "end": "40200"
  },
  {
    "text": "I'm working for vdas technology services",
    "start": "40200",
    "end": "42640"
  },
  {
    "text": "in Germany and my focus is on developing",
    "start": "42640",
    "end": "46320"
  },
  {
    "text": "and deploying computer vision and",
    "start": "46320",
    "end": "48559"
  },
  {
    "text": "machine learning services for our",
    "start": "48559",
    "end": "50800"
  },
  {
    "text": "product called",
    "start": "50800",
    "end": "52680"
  },
  {
    "text": "SAS before I start right into my topic",
    "start": "52680",
    "end": "56239"
  },
  {
    "text": "um let's have a quick look on what you",
    "start": "56239",
    "end": "58160"
  },
  {
    "text": "can expect from this talk",
    "start": "58160",
    "end": "60559"
  },
  {
    "text": "first I'd like to talk about what a",
    "start": "60559",
    "end": "62800"
  },
  {
    "text": "fully automated digital authentication",
    "start": "62800",
    "end": "64878"
  },
  {
    "text": "Service is and then I will go into a",
    "start": "64879",
    "end": "67960"
  },
  {
    "text": "detail why we use Ray and rayer for",
    "start": "67960",
    "end": "70799"
  },
  {
    "text": "implementing it afterwards I will tell",
    "start": "70799",
    "end": "74280"
  },
  {
    "text": "you why we U how we moved from our first",
    "start": "74280",
    "end": "77680"
  },
  {
    "text": "proof of concept to our current scalable",
    "start": "77680",
    "end": "80600"
  },
  {
    "text": "and stable",
    "start": "80600",
    "end": "82479"
  },
  {
    "text": "architecture and afterwards I will um go",
    "start": "82479",
    "end": "85960"
  },
  {
    "text": "and address some challenges we were",
    "start": "85960",
    "end": "87920"
  },
  {
    "text": "facing and how we solved them by using",
    "start": "87920",
    "end": "90880"
  },
  {
    "text": "race specific",
    "start": "90880",
    "end": "93798"
  },
  {
    "text": "implementations so let's start what's a",
    "start": "95079",
    "end": "97320"
  },
  {
    "text": "fully automated digital authentication",
    "start": "97320",
    "end": "100799"
  },
  {
    "text": "Service this is a service which you",
    "start": "100799",
    "end": "103040"
  },
  {
    "text": "require when you for example want to",
    "start": "103040",
    "end": "105000"
  },
  {
    "text": "sign an on online contract and you need",
    "start": "105000",
    "end": "107399"
  },
  {
    "text": "to identify them so for example if you",
    "start": "107399",
    "end": "110280"
  },
  {
    "text": "want to create a bank account you need",
    "start": "110280",
    "end": "112399"
  },
  {
    "text": "to identify yourself with a valid",
    "start": "112399",
    "end": "114920"
  },
  {
    "text": "identity card right now something like",
    "start": "114920",
    "end": "118240"
  },
  {
    "text": "that happens by making a call with a",
    "start": "118240",
    "end": "120920"
  },
  {
    "text": "customer service um member where you",
    "start": "120920",
    "end": "124360"
  },
  {
    "text": "need to um enable your camera and you",
    "start": "124360",
    "end": "127240"
  },
  {
    "text": "need to present your identity card to",
    "start": "127240",
    "end": "129280"
  },
  {
    "text": "this person and the person validates",
    "start": "129280",
    "end": "132000"
  },
  {
    "text": "your identity card our system is",
    "start": "132000",
    "end": "135080"
  },
  {
    "text": "differently however because it doesn't",
    "start": "135080",
    "end": "138560"
  },
  {
    "text": "require another person on the other end",
    "start": "138560",
    "end": "141400"
  },
  {
    "text": "of the um of the video recording",
    "start": "141400",
    "end": "144840"
  },
  {
    "text": "everything is done automatically and",
    "start": "144840",
    "end": "147000"
  },
  {
    "text": "processed by Machine learning and",
    "start": "147000",
    "end": "148640"
  },
  {
    "text": "computer vision ARG",
    "start": "148640",
    "end": "151840"
  },
  {
    "text": "so how does the process look like when",
    "start": "152720",
    "end": "155200"
  },
  {
    "text": "you want to register for your online",
    "start": "155200",
    "end": "157440"
  },
  {
    "text": "bank account um you get redirected to",
    "start": "157440",
    "end": "160879"
  },
  {
    "text": "our system and the system asks you to",
    "start": "160879",
    "end": "163519"
  },
  {
    "text": "show the front side of your identity",
    "start": "163519",
    "end": "165879"
  },
  {
    "text": "card to um to the camera you need to",
    "start": "165879",
    "end": "169720"
  },
  {
    "text": "tilt your um identity card so that",
    "start": "169720",
    "end": "172599"
  },
  {
    "text": "Optical variable security features",
    "start": "172599",
    "end": "175280"
  },
  {
    "text": "become visible afterwards you're asked",
    "start": "175280",
    "end": "178239"
  },
  {
    "text": "to rotate a card and show the backside",
    "start": "178239",
    "end": "181319"
  },
  {
    "text": "of the ID card and in the last step you",
    "start": "181319",
    "end": "185040"
  },
  {
    "text": "need to interact with the system while",
    "start": "185040",
    "end": "187000"
  },
  {
    "text": "your face is being reported to make sure",
    "start": "187000",
    "end": "189720"
  },
  {
    "text": "that really a human being and a live",
    "start": "189720",
    "end": "192400"
  },
  {
    "text": "human being is interacting with the",
    "start": "192400",
    "end": "196239"
  },
  {
    "text": "system um so what happens um during this",
    "start": "198040",
    "end": "203680"
  },
  {
    "text": "process um the data we we are getting is",
    "start": "203680",
    "end": "207519"
  },
  {
    "text": "visual data from the front side video",
    "start": "207519",
    "end": "210480"
  },
  {
    "text": "data from the backside and video of the",
    "start": "210480",
    "end": "212560"
  },
  {
    "text": "face of the person this data needs to be",
    "start": "212560",
    "end": "215480"
  },
  {
    "text": "processed and several things need to be",
    "start": "215480",
    "end": "217560"
  },
  {
    "text": "taken into consideration so for example",
    "start": "217560",
    "end": "220640"
  },
  {
    "text": "you need to check if the person who is",
    "start": "220640",
    "end": "223400"
  },
  {
    "text": "interacting with the system is actually",
    "start": "223400",
    "end": "225879"
  },
  {
    "text": "live person um we need to make sure that",
    "start": "225879",
    "end": "229319"
  },
  {
    "text": "the doc the data on the identity",
    "start": "229319",
    "end": "233400"
  },
  {
    "text": "document matches the data um the person",
    "start": "233400",
    "end": "236680"
  },
  {
    "text": "registered with we need to make sure",
    "start": "236680",
    "end": "239840"
  },
  {
    "text": "that the identity document is actually a",
    "start": "239840",
    "end": "241959"
  },
  {
    "text": "valid",
    "start": "241959",
    "end": "243040"
  },
  {
    "text": "document and we also need to ensure that",
    "start": "243040",
    "end": "245599"
  },
  {
    "text": "the person is matching um from a",
    "start": "245599",
    "end": "249120"
  },
  {
    "text": "biometric perspective the person on the",
    "start": "249120",
    "end": "251439"
  },
  {
    "text": "identity document and last but not least",
    "start": "251439",
    "end": "254640"
  },
  {
    "text": "we also need to make sure that the",
    "start": "254640",
    "end": "256199"
  },
  {
    "text": "identity card which is being used is a",
    "start": "256199",
    "end": "259000"
  },
  {
    "text": "valid document and is not manipulated",
    "start": "259000",
    "end": "262520"
  },
  {
    "text": "and contains all Optical security",
    "start": "262520",
    "end": "265120"
  },
  {
    "text": "features all of those um checks need to",
    "start": "265120",
    "end": "268600"
  },
  {
    "text": "be performed and and integrated into one",
    "start": "268600",
    "end": "271320"
  },
  {
    "text": "final",
    "start": "271320",
    "end": "272840"
  },
  {
    "text": "output if the validation then is",
    "start": "272840",
    "end": "275560"
  },
  {
    "text": "correctly the customer is able to",
    "start": "275560",
    "end": "278280"
  },
  {
    "text": "continue um his making his online",
    "start": "278280",
    "end": "283360"
  },
  {
    "text": "account so let's have a look on how we",
    "start": "284680",
    "end": "287360"
  },
  {
    "text": "did get started our first proof of",
    "start": "287360",
    "end": "290120"
  },
  {
    "text": "concept was not about having a scalable",
    "start": "290120",
    "end": "293400"
  },
  {
    "text": "architecture but about proving that we",
    "start": "293400",
    "end": "296199"
  },
  {
    "text": "are able to develop models and",
    "start": "296199",
    "end": "298199"
  },
  {
    "text": "algorithms for verifying and extracting",
    "start": "298199",
    "end": "301240"
  },
  {
    "text": "the data so we started with a two",
    "start": "301240",
    "end": "305080"
  },
  {
    "text": "splited back end um where one part was",
    "start": "305080",
    "end": "308479"
  },
  {
    "text": "um using a state machine approach a",
    "start": "308479",
    "end": "311440"
  },
  {
    "text": "simple State machine approach which was",
    "start": "311440",
    "end": "313680"
  },
  {
    "text": "going through several steps for checking",
    "start": "313680",
    "end": "316199"
  },
  {
    "text": "the validity of the um data presented",
    "start": "316199",
    "end": "320479"
  },
  {
    "text": "and the other part was a web server",
    "start": "320479",
    "end": "323319"
  },
  {
    "text": "which accepted the user requests from",
    "start": "323319",
    "end": "325600"
  },
  {
    "text": "the web app um and sent them via US in",
    "start": "325600",
    "end": "330160"
  },
  {
    "text": "communication to our worker back end",
    "start": "330160",
    "end": "333360"
  },
  {
    "text": "this asynchronous communication was done",
    "start": "333360",
    "end": "335759"
  },
  {
    "text": "via Kafka streams um and the data was um",
    "start": "335759",
    "end": "340280"
  },
  {
    "text": "shared via R so once we had a first um",
    "start": "340280",
    "end": "345199"
  },
  {
    "text": "working proof of concept we needed to",
    "start": "345199",
    "end": "347960"
  },
  {
    "text": "make sure we're able to scale up the",
    "start": "347960",
    "end": "350319"
  },
  {
    "text": "architecture for that we splited up our",
    "start": "350319",
    "end": "353160"
  },
  {
    "text": "whole process in small tasks and came up",
    "start": "353160",
    "end": "357240"
  },
  {
    "text": "with a graph similar to the one you see",
    "start": "357240",
    "end": "359400"
  },
  {
    "text": "on the",
    "start": "359400",
    "end": "360880"
  },
  {
    "text": "slide um splitting up all of that",
    "start": "360880",
    "end": "364560"
  },
  {
    "text": "resulted in different requirements for a",
    "start": "364560",
    "end": "367520"
  },
  {
    "text": "different tasks so like you can see",
    "start": "367520",
    "end": "370199"
  },
  {
    "text": "there were some tasks which can be",
    "start": "370199",
    "end": "372280"
  },
  {
    "text": "performed in parallel um others required",
    "start": "372280",
    "end": "375800"
  },
  {
    "text": "the input from from one or even more",
    "start": "375800",
    "end": "378840"
  },
  {
    "text": "other tasks to start processing some of",
    "start": "378840",
    "end": "382840"
  },
  {
    "text": "the task were really fast in computation",
    "start": "382840",
    "end": "385919"
  },
  {
    "text": "and others were a bit more time",
    "start": "385919",
    "end": "388039"
  },
  {
    "text": "consuming",
    "start": "388039",
    "end": "389720"
  },
  {
    "text": "um additionally we also needed to run",
    "start": "389720",
    "end": "392000"
  },
  {
    "text": "some of the task on gpus because we have",
    "start": "392000",
    "end": "395400"
  },
  {
    "text": "machine learning models which should run",
    "start": "395400",
    "end": "398160"
  },
  {
    "text": "in at least near real",
    "start": "398160",
    "end": "400680"
  },
  {
    "text": "time um looking at the craft one",
    "start": "400680",
    "end": "404440"
  },
  {
    "text": "important thing also here is that we are",
    "start": "404440",
    "end": "407080"
  },
  {
    "text": "not getting the data at once but we get",
    "start": "407080",
    "end": "409280"
  },
  {
    "text": "it in three different steps so first we",
    "start": "409280",
    "end": "412319"
  },
  {
    "text": "get the data for the front side of the",
    "start": "412319",
    "end": "414160"
  },
  {
    "text": "card afterwards um after some delay we",
    "start": "414160",
    "end": "417160"
  },
  {
    "text": "get the back side of the data and then",
    "start": "417160",
    "end": "418840"
  },
  {
    "text": "we get the face data but in the end we",
    "start": "418840",
    "end": "421440"
  },
  {
    "text": "still need to make sure that this data",
    "start": "421440",
    "end": "424000"
  },
  {
    "text": "is considered into one final output so",
    "start": "424000",
    "end": "427400"
  },
  {
    "text": "we need to make sure that all the task",
    "start": "427400",
    "end": "429400"
  },
  {
    "text": "are synchronized to each",
    "start": "429400",
    "end": "432680"
  },
  {
    "text": "other um after we came up with this um",
    "start": "435840",
    "end": "441639"
  },
  {
    "text": "architecture uh with this with this",
    "start": "441639",
    "end": "443599"
  },
  {
    "text": "graph the question was what are the",
    "start": "443599",
    "end": "446879"
  },
  {
    "text": "correct Frameworks to use um for this",
    "start": "446879",
    "end": "450319"
  },
  {
    "text": "this deploying this",
    "start": "450319",
    "end": "452759"
  },
  {
    "text": "craft and we had a look on several",
    "start": "452759",
    "end": "456080"
  },
  {
    "text": "different Frameworks but we made a um",
    "start": "456080",
    "end": "459360"
  },
  {
    "text": "first selection um based on their",
    "start": "459360",
    "end": "462879"
  },
  {
    "text": "performance in dis reputed and parallel",
    "start": "462879",
    "end": "465280"
  },
  {
    "text": "processing as well as scalability and",
    "start": "465280",
    "end": "468400"
  },
  {
    "text": "the four Frameworks which we came up",
    "start": "468400",
    "end": "471120"
  },
  {
    "text": "with were Ray which we didn't use so far",
    "start": "471120",
    "end": "474639"
  },
  {
    "text": "but we already read about it um Kasa",
    "start": "474639",
    "end": "478800"
  },
  {
    "text": "which we already had in place in some of",
    "start": "478800",
    "end": "481400"
  },
  {
    "text": "the projects before ppar which we also",
    "start": "481400",
    "end": "485280"
  },
  {
    "text": "didn't use so far and a classical",
    "start": "485280",
    "end": "487879"
  },
  {
    "text": "microservice architecture where we",
    "start": "487879",
    "end": "490400"
  },
  {
    "text": "already have some experience with um and",
    "start": "490400",
    "end": "493879"
  },
  {
    "text": "where we have a lot of different",
    "start": "493879",
    "end": "495720"
  },
  {
    "text": "Frameworks um which can be used in",
    "start": "495720",
    "end": "498199"
  },
  {
    "text": "Python for example IP or fast",
    "start": "498199",
    "end": "503080"
  },
  {
    "text": "API so after um having a look on those",
    "start": "503080",
    "end": "507759"
  },
  {
    "text": "Frameworks um we needed to consider them",
    "start": "507759",
    "end": "511159"
  },
  {
    "text": "um for some more requirements one of the",
    "start": "511159",
    "end": "514680"
  },
  {
    "text": "requirements was the support of python",
    "start": "514680",
    "end": "517518"
  },
  {
    "text": "as a programming language because it is",
    "start": "517519",
    "end": "520640"
  },
  {
    "text": "the most common language right now for",
    "start": "520640",
    "end": "522760"
  },
  {
    "text": "machine learning and D data scientists",
    "start": "522760",
    "end": "525080"
  },
  {
    "text": "and hence enables us to",
    "start": "525080",
    "end": "528279"
  },
  {
    "text": "um fast um progress in developing in",
    "start": "528279",
    "end": "532279"
  },
  {
    "text": "this in this language and additionally",
    "start": "532279",
    "end": "535040"
  },
  {
    "text": "we also needed to make sure we were able",
    "start": "535040",
    "end": "537480"
  },
  {
    "text": "to transport",
    "start": "537480",
    "end": "539600"
  },
  {
    "text": "um our already implemented model into",
    "start": "539600",
    "end": "542079"
  },
  {
    "text": "the framework and without any additional",
    "start": "542079",
    "end": "546079"
  },
  {
    "text": "effort like I already said um we also um",
    "start": "546079",
    "end": "551279"
  },
  {
    "text": "required to handle video data if you",
    "start": "551279",
    "end": "555040"
  },
  {
    "text": "store them in",
    "start": "555040",
    "end": "558440"
  },
  {
    "text": "the in numpy arrays they become quite",
    "start": "558440",
    "end": "561399"
  },
  {
    "text": "large in the memory and when sending",
    "start": "561399",
    "end": "564399"
  },
  {
    "text": "them them in between the different task",
    "start": "564399",
    "end": "566680"
  },
  {
    "text": "we need to make sure we don't lose any",
    "start": "566680",
    "end": "568920"
  },
  {
    "text": "performance here so this was also",
    "start": "568920",
    "end": "571560"
  },
  {
    "text": "something we we definitely needed to",
    "start": "571560",
    "end": "573240"
  },
  {
    "text": "consider When selecting a",
    "start": "573240",
    "end": "575560"
  },
  {
    "text": "framework and um additionally we also",
    "start": "575560",
    "end": "579320"
  },
  {
    "text": "had a look into the community behinds",
    "start": "579320",
    "end": "581560"
  },
  {
    "text": "the Frameworks and the adoption of the",
    "start": "581560",
    "end": "584040"
  },
  {
    "text": "Frameworks because that makes sense um",
    "start": "584040",
    "end": "587240"
  },
  {
    "text": "in our opinion because if the community",
    "start": "587240",
    "end": "590040"
  },
  {
    "text": "is big and the adaption is Big you have",
    "start": "590040",
    "end": "592000"
  },
  {
    "text": "a lot of possibilities to exchange with",
    "start": "592000",
    "end": "595040"
  },
  {
    "text": "other developers how they solve problems",
    "start": "595040",
    "end": "598480"
  },
  {
    "text": "and your faster um in adapting the",
    "start": "598480",
    "end": "601399"
  },
  {
    "text": "framewor",
    "start": "601399",
    "end": "603880"
  },
  {
    "text": "yourself considering all of those um",
    "start": "603880",
    "end": "607000"
  },
  {
    "text": "things we um made a decision to continue",
    "start": "607000",
    "end": "610880"
  },
  {
    "text": "with Ray because in our opinion it was",
    "start": "610880",
    "end": "613279"
  },
  {
    "text": "the best solution addressing all those",
    "start": "613279",
    "end": "618320"
  },
  {
    "text": "requirements so then we started um",
    "start": "620279",
    "end": "622959"
  },
  {
    "text": "implementing a first skeleton of our",
    "start": "622959",
    "end": "625320"
  },
  {
    "text": "process in race",
    "start": "625320",
    "end": "627279"
  },
  {
    "text": "surf um and and we had also some",
    "start": "627279",
    "end": "631640"
  },
  {
    "text": "discussions with members of the ray",
    "start": "631640",
    "end": "633640"
  },
  {
    "text": "development team and we click quickly",
    "start": "633640",
    "end": "637360"
  },
  {
    "text": "came to your um decision instead of",
    "start": "637360",
    "end": "639880"
  },
  {
    "text": "using plain Ray core to use Ray serve um",
    "start": "639880",
    "end": "644720"
  },
  {
    "text": "for implementing our architecture there",
    "start": "644720",
    "end": "647680"
  },
  {
    "text": "were several reasons for that one of the",
    "start": "647680",
    "end": "650120"
  },
  {
    "text": "reasons was um that we could use one",
    "start": "650120",
    "end": "652680"
  },
  {
    "text": "framework for everything with using way",
    "start": "652680",
    "end": "655320"
  },
  {
    "text": "core we would have needed an additional",
    "start": "655320",
    "end": "657320"
  },
  {
    "text": "HTP server and rayor serve already",
    "start": "657320",
    "end": "661240"
  },
  {
    "text": "provides the HTP server for",
    "start": "661240",
    "end": "664440"
  },
  {
    "text": "us another benefit with race serve is",
    "start": "664440",
    "end": "667120"
  },
  {
    "text": "also the native support um of Co",
    "start": "667120",
    "end": "669440"
  },
  {
    "text": "composing machine learning models um and",
    "start": "669440",
    "end": "673320"
  },
  {
    "text": "the possibility to design a craft like",
    "start": "673320",
    "end": "676320"
  },
  {
    "text": "the one we saw before um by passing",
    "start": "676320",
    "end": "679600"
  },
  {
    "text": "rayer handels into other",
    "start": "679600",
    "end": "684639"
  },
  {
    "text": "models and finally the possibility of",
    "start": "684639",
    "end": "688160"
  },
  {
    "text": "Shadow testing the easy possibility of",
    "start": "688160",
    "end": "690880"
  },
  {
    "text": "doing Shadow testing with race serve is",
    "start": "690880",
    "end": "693079"
  },
  {
    "text": "also a benefit because it enables us to",
    "start": "693079",
    "end": "696200"
  },
  {
    "text": "test um models before really deploying",
    "start": "696200",
    "end": "700000"
  },
  {
    "text": "them into production and getting the",
    "start": "700000",
    "end": "702360"
  },
  {
    "text": "results from",
    "start": "702360",
    "end": "705079"
  },
  {
    "text": "them so after we decided to switch um to",
    "start": "706760",
    "end": "711399"
  },
  {
    "text": "race serve and we came up with this um",
    "start": "711399",
    "end": "714600"
  },
  {
    "text": "idea of how we can Implement our",
    "start": "714600",
    "end": "717279"
  },
  {
    "text": "architecture um we had a closer look and",
    "start": "717279",
    "end": "721160"
  },
  {
    "text": "how on how we can design our cluster and",
    "start": "721160",
    "end": "723880"
  },
  {
    "text": "we came up with the idea to split up our",
    "start": "723880",
    "end": "727200"
  },
  {
    "text": "cluster into three different smaller",
    "start": "727200",
    "end": "730720"
  },
  {
    "text": "clusters um one was the CPU cluster",
    "start": "730720",
    "end": "734600"
  },
  {
    "text": "another was the GPU cluster and the last",
    "start": "734600",
    "end": "737120"
  },
  {
    "text": "one was a res API cluster all of those",
    "start": "737120",
    "end": "740839"
  },
  {
    "text": "clusters can be scaled up independently",
    "start": "740839",
    "end": "744079"
  },
  {
    "text": "or together based on the process",
    "start": "744079",
    "end": "746040"
  },
  {
    "text": "requirements we have and all of those",
    "start": "746040",
    "end": "749199"
  },
  {
    "text": "clusters were running on our on preme",
    "start": "749199",
    "end": "751519"
  },
  {
    "text": "cluster and uh deployment was handled by",
    "start": "751519",
    "end": "755320"
  },
  {
    "text": "some of our other architecture",
    "start": "755320",
    "end": "759000"
  },
  {
    "text": "Services let's have a closer look on the",
    "start": "759000",
    "end": "761519"
  },
  {
    "text": "different parts of our cluster the CPU",
    "start": "761519",
    "end": "765399"
  },
  {
    "text": "cluster runs mainly computer vision",
    "start": "765399",
    "end": "768720"
  },
  {
    "text": "algorithms um and also does some",
    "start": "768720",
    "end": "771680"
  },
  {
    "text": "pre-processing for our um for the data",
    "start": "771680",
    "end": "774680"
  },
  {
    "text": "which we require um for our machine",
    "start": "774680",
    "end": "776720"
  },
  {
    "text": "learning mods",
    "start": "776720",
    "end": "779279"
  },
  {
    "text": "one thing when implementing algorithms",
    "start": "779279",
    "end": "781720"
  },
  {
    "text": "for our CPU cluster was the multicore",
    "start": "781720",
    "end": "786720"
  },
  {
    "text": "processing possibility of some of the",
    "start": "786720",
    "end": "789560"
  },
  {
    "text": "Frameworks which we use so for example",
    "start": "789560",
    "end": "792360"
  },
  {
    "text": "numai tensor Flow by default all of them",
    "start": "792360",
    "end": "796320"
  },
  {
    "text": "are able to do",
    "start": "796320",
    "end": "798639"
  },
  {
    "text": "multiprocessing which normally is really",
    "start": "798639",
    "end": "801120"
  },
  {
    "text": "good because it speeds up your",
    "start": "801120",
    "end": "802959"
  },
  {
    "text": "algorithms and they are able to run",
    "start": "802959",
    "end": "805320"
  },
  {
    "text": "faster because they can use um more",
    "start": "805320",
    "end": "808160"
  },
  {
    "text": "cores than only",
    "start": "808160",
    "end": "809760"
  },
  {
    "text": "one um but when running the algorithms",
    "start": "809760",
    "end": "813079"
  },
  {
    "text": "in Ray this makes the cluster the CPU",
    "start": "813079",
    "end": "816199"
  },
  {
    "text": "cluster consumption a bit un predictable",
    "start": "816199",
    "end": "819519"
  },
  {
    "text": "and that's why we didn't want to have it",
    "start": "819519",
    "end": "821320"
  },
  {
    "text": "in our",
    "start": "821320",
    "end": "822519"
  },
  {
    "text": "cluster the good thing with Ray is also",
    "start": "822519",
    "end": "825199"
  },
  {
    "text": "that it disables this behavior for most",
    "start": "825199",
    "end": "827639"
  },
  {
    "text": "of the libraries already so it sets the",
    "start": "827639",
    "end": "831480"
  },
  {
    "text": "variable om num threats to one which",
    "start": "831480",
    "end": "834360"
  },
  {
    "text": "means it disables the multicore",
    "start": "834360",
    "end": "836399"
  },
  {
    "text": "processing functionality for NP or 10",
    "start": "836399",
    "end": "840560"
  },
  {
    "text": "however we found that still quite some",
    "start": "840560",
    "end": "843959"
  },
  {
    "text": "of our algorithms were not sticking to",
    "start": "843959",
    "end": "846480"
  },
  {
    "text": "the One Core requirement which we set",
    "start": "846480",
    "end": "849399"
  },
  {
    "text": "for the back end um they still Ed More",
    "start": "849399",
    "end": "853560"
  },
  {
    "text": "Than This One Core and after some",
    "start": "853560",
    "end": "856639"
  },
  {
    "text": "research we found out open CV doesn't",
    "start": "856639",
    "end": "859440"
  },
  {
    "text": "consider the OM num thread variable but",
    "start": "859440",
    "end": "861959"
  },
  {
    "text": "it has its own way of implementing and",
    "start": "861959",
    "end": "864360"
  },
  {
    "text": "disabling this multiprocessing",
    "start": "864360",
    "end": "867600"
  },
  {
    "text": "functionality um",
    "start": "867600",
    "end": "869880"
  },
  {
    "text": "so you just need to call the function",
    "start": "869880",
    "end": "871959"
  },
  {
    "text": "set num threads variable and input um",
    "start": "871959",
    "end": "875040"
  },
  {
    "text": "zero and then the multithreading is also",
    "start": "875040",
    "end": "877800"
  },
  {
    "text": "disabled for open",
    "start": "877800",
    "end": "880279"
  },
  {
    "text": "CD another thing which we came across",
    "start": "880279",
    "end": "882959"
  },
  {
    "text": "when implementing our CPU cluster was",
    "start": "882959",
    "end": "886160"
  },
  {
    "text": "the um static nature of the ray surf",
    "start": "886160",
    "end": "891199"
  },
  {
    "text": "backends um when designing the craft you",
    "start": "891199",
    "end": "894240"
  },
  {
    "text": "always need to provide the number of CPU",
    "start": "894240",
    "end": "896920"
  },
  {
    "text": "cores which are required for each back",
    "start": "896920",
    "end": "899880"
  },
  {
    "text": "end um when the back end is then scaled",
    "start": "899880",
    "end": "903920"
  },
  {
    "text": "up it already reserves those",
    "start": "903920",
    "end": "906440"
  },
  {
    "text": "requirements although they're not being",
    "start": "906440",
    "end": "908680"
  },
  {
    "text": "used unless um the backend is really",
    "start": "908680",
    "end": "912279"
  },
  {
    "text": "executed the task which is meant for if",
    "start": "912279",
    "end": "915720"
  },
  {
    "text": "you remember the craft that we had",
    "start": "915720",
    "end": "917800"
  },
  {
    "text": "before um not all of the processes",
    "start": "917800",
    "end": "921199"
  },
  {
    "text": "really run in parallel many of them also",
    "start": "921199",
    "end": "924240"
  },
  {
    "text": "run in",
    "start": "924240",
    "end": "925320"
  },
  {
    "text": "sequence and thereby this static nature",
    "start": "925320",
    "end": "930800"
  },
  {
    "text": "would mean that we would need to block",
    "start": "930800",
    "end": "932839"
  },
  {
    "text": "more resources than the ones which would",
    "start": "932839",
    "end": "935120"
  },
  {
    "text": "be actually um used by one process and",
    "start": "935120",
    "end": "938680"
  },
  {
    "text": "that would mean we would need to um have",
    "start": "938680",
    "end": "942079"
  },
  {
    "text": "more CPUs in our cluster than really",
    "start": "942079",
    "end": "945360"
  },
  {
    "text": "required so for overcoming this issue",
    "start": "945360",
    "end": "948279"
  },
  {
    "text": "there were two",
    "start": "948279",
    "end": "949720"
  },
  {
    "text": "possibilities um one was either to",
    "start": "949720",
    "end": "952120"
  },
  {
    "text": "assign less resources per backend so",
    "start": "952120",
    "end": "955199"
  },
  {
    "text": "pretending um one back end uses for",
    "start": "955199",
    "end": "958480"
  },
  {
    "text": "example only 50% of its resources while",
    "start": "958480",
    "end": "961319"
  },
  {
    "text": "it uses one one complete core um and the",
    "start": "961319",
    "end": "965000"
  },
  {
    "text": "other one was starting the whole rate",
    "start": "965000",
    "end": "968120"
  },
  {
    "text": "cluster by pretending we have more noes",
    "start": "968120",
    "end": "970959"
  },
  {
    "text": "than actually",
    "start": "970959",
    "end": "972839"
  },
  {
    "text": "available we decided to go with a letter",
    "start": "972839",
    "end": "975560"
  },
  {
    "text": "approach um because that enables us to",
    "start": "975560",
    "end": "978959"
  },
  {
    "text": "always know how many resources are",
    "start": "978959",
    "end": "981360"
  },
  {
    "text": "actually required by a backend and",
    "start": "981360",
    "end": "983759"
  },
  {
    "text": "that's better for um scaling up further",
    "start": "983759",
    "end": "987680"
  },
  {
    "text": "backends when required",
    "start": "987680",
    "end": "990519"
  },
  {
    "text": "so when starting our array cluster we",
    "start": "990519",
    "end": "993000"
  },
  {
    "text": "just passed in um the num CPU variable",
    "start": "993000",
    "end": "997199"
  },
  {
    "text": "and we added",
    "start": "997199",
    "end": "999720"
  },
  {
    "text": "um the original number of cost and added",
    "start": "999720",
    "end": "1004079"
  },
  {
    "text": "some more um to overcome the issue with",
    "start": "1004079",
    "end": "1008759"
  },
  {
    "text": "the um too many",
    "start": "1008759",
    "end": "1011720"
  },
  {
    "text": "resources additionally um for the CPU",
    "start": "1011720",
    "end": "1014720"
  },
  {
    "text": "cluster we also provided custom",
    "start": "1014720",
    "end": "1017199"
  },
  {
    "text": "resources because those custom resources",
    "start": "1017199",
    "end": "1020560"
  },
  {
    "text": "helped us to make sure that each backend",
    "start": "1020560",
    "end": "1024160"
  },
  {
    "text": "which should come up on a CPU cluster is",
    "start": "1024160",
    "end": "1026280"
  },
  {
    "text": "really assigned to the CPU cluster and",
    "start": "1026280",
    "end": "1028319"
  },
  {
    "text": "not to some other cluster which also has",
    "start": "1028319",
    "end": "1030959"
  },
  {
    "text": "CPU cores",
    "start": "1030959",
    "end": "1034000"
  },
  {
    "text": "available the GPU cluster is mainly",
    "start": "1035959",
    "end": "1039000"
  },
  {
    "text": "there for running machine learning",
    "start": "1039000",
    "end": "1041240"
  },
  {
    "text": "models and all of those machine learning",
    "start": "1041240",
    "end": "1044918"
  },
  {
    "text": "backends always only run one tasks in",
    "start": "1044919",
    "end": "1049039"
  },
  {
    "text": "sequence so they're not um doing",
    "start": "1049039",
    "end": "1052360"
  },
  {
    "text": "asynchronous processing of the input",
    "start": "1052360",
    "end": "1054840"
  },
  {
    "text": "values they're um doing one task after",
    "start": "1054840",
    "end": "1059120"
  },
  {
    "text": "each other this behavior um is really",
    "start": "1059120",
    "end": "1062960"
  },
  {
    "text": "good in in this case um because we",
    "start": "1062960",
    "end": "1065799"
  },
  {
    "text": "always know how many CPU cores are",
    "start": "1065799",
    "end": "1068160"
  },
  {
    "text": "actually being",
    "start": "1068160",
    "end": "1069559"
  },
  {
    "text": "used um and by that we can make sure",
    "start": "1069559",
    "end": "1072960"
  },
  {
    "text": "that not all 100% of CPUs cores are used",
    "start": "1072960",
    "end": "1077919"
  },
  {
    "text": "and that's also the reason why we",
    "start": "1077919",
    "end": "1079640"
  },
  {
    "text": "decided to put our um Ray head note on",
    "start": "1079640",
    "end": "1082520"
  },
  {
    "text": "this cluster because in that way um we",
    "start": "1082520",
    "end": "1086200"
  },
  {
    "text": "can ensure it doesn't lose performance",
    "start": "1086200",
    "end": "1088400"
  },
  {
    "text": "because of too many CPU CES being",
    "start": "1088400",
    "end": "1091039"
  },
  {
    "text": "occupied by other",
    "start": "1091039",
    "end": "1093880"
  },
  {
    "text": "tasks and we also decided to starting",
    "start": "1093880",
    "end": "1096720"
  },
  {
    "text": "our race surf back ends from here um",
    "start": "1096720",
    "end": "1099799"
  },
  {
    "text": "just out of convenience because that way",
    "start": "1099799",
    "end": "1103200"
  },
  {
    "text": "we don't need to um check if a head",
    "start": "1103200",
    "end": "1106080"
  },
  {
    "text": "cluster is up and running before serice",
    "start": "1106080",
    "end": "1108960"
  },
  {
    "text": "our",
    "start": "1108960",
    "end": "1110200"
  },
  {
    "text": "backs and the head node was started with",
    "start": "1110200",
    "end": "1114600"
  },
  {
    "text": "the normal um startup commands um and",
    "start": "1114600",
    "end": "1118760"
  },
  {
    "text": "passing in the number of gpus we have",
    "start": "1118760",
    "end": "1122799"
  },
  {
    "text": "there the last cluster the API cluster",
    "start": "1122799",
    "end": "1126880"
  },
  {
    "text": "um has the main focus on high",
    "start": "1126880",
    "end": "1129600"
  },
  {
    "text": "availability because we always need to",
    "start": "1129600",
    "end": "1131799"
  },
  {
    "text": "make sure that when a user request is",
    "start": "1131799",
    "end": "1134360"
  },
  {
    "text": "incoming um is handled instantly so even",
    "start": "1134360",
    "end": "1138360"
  },
  {
    "text": "if we have some processes being queued",
    "start": "1138360",
    "end": "1140919"
  },
  {
    "text": "up for processing in our CPU cluster the",
    "start": "1140919",
    "end": "1144640"
  },
  {
    "text": "API cluster is always able to instantly",
    "start": "1144640",
    "end": "1148480"
  },
  {
    "text": "communicate back to the",
    "start": "1148480",
    "end": "1151600"
  },
  {
    "text": "user um also on this API clusters we",
    "start": "1151600",
    "end": "1155760"
  },
  {
    "text": "have some data actors which I will go",
    "start": "1155760",
    "end": "1158039"
  },
  {
    "text": "into detail in the next slide they're",
    "start": "1158039",
    "end": "1160360"
  },
  {
    "text": "actually there for um synchronizing",
    "start": "1160360",
    "end": "1164559"
  },
  {
    "text": "tasks between all the the Clusters and",
    "start": "1164559",
    "end": "1168520"
  },
  {
    "text": "um for sharing some",
    "start": "1168520",
    "end": "1171280"
  },
  {
    "text": "data they also need to be highly",
    "start": "1171280",
    "end": "1173640"
  },
  {
    "text": "available and that's why we also put",
    "start": "1173640",
    "end": "1175720"
  },
  {
    "text": "them on this",
    "start": "1175720",
    "end": "1178360"
  },
  {
    "text": "cluster and this cluster similar to the",
    "start": "1178360",
    "end": "1181400"
  },
  {
    "text": "CPU cluster also gets started with",
    "start": "1181400",
    "end": "1183720"
  },
  {
    "text": "custom resources because we also want to",
    "start": "1183720",
    "end": "1186159"
  },
  {
    "text": "make sure that all API backends are only",
    "start": "1186159",
    "end": "1189320"
  },
  {
    "text": "spawn on this on this cluster and all",
    "start": "1189320",
    "end": "1193200"
  },
  {
    "text": "actors are also only spawn in this",
    "start": "1193200",
    "end": "1195559"
  },
  {
    "text": "cluster",
    "start": "1195559",
    "end": "1198559"
  },
  {
    "text": "so now that we have the the overall",
    "start": "1200400",
    "end": "1202760"
  },
  {
    "text": "architecture the only question which was",
    "start": "1202760",
    "end": "1205120"
  },
  {
    "text": "missing was how are we able to",
    "start": "1205120",
    "end": "1208200"
  },
  {
    "text": "synchronize um the tasks and so that one",
    "start": "1208200",
    "end": "1211799"
  },
  {
    "text": "task only starts executing when the data",
    "start": "1211799",
    "end": "1214440"
  },
  {
    "text": "of the task for is there and especially",
    "start": "1214440",
    "end": "1217720"
  },
  {
    "text": "the main problem here was how are we",
    "start": "1217720",
    "end": "1220559"
  },
  {
    "text": "able to make sure the data which is",
    "start": "1220559",
    "end": "1222960"
  },
  {
    "text": "required so the data either from front",
    "start": "1222960",
    "end": "1225000"
  },
  {
    "text": "back or face is already there when the",
    "start": "1225000",
    "end": "1227159"
  },
  {
    "text": "task starts",
    "start": "1227159",
    "end": "1229159"
  },
  {
    "text": "we decided to go here with a ray actor",
    "start": "1229159",
    "end": "1232400"
  },
  {
    "text": "approach and with asychronous",
    "start": "1232400",
    "end": "1236000"
  },
  {
    "text": "events our Ray actor um is only there",
    "start": "1236000",
    "end": "1240760"
  },
  {
    "text": "for",
    "start": "1240760",
    "end": "1242039"
  },
  {
    "text": "communicating um and triggering events",
    "start": "1242039",
    "end": "1245440"
  },
  {
    "text": "and also slightly for syncing data in",
    "start": "1245440",
    "end": "1248240"
  },
  {
    "text": "between different tasks so it is not",
    "start": "1248240",
    "end": "1250760"
  },
  {
    "text": "really CPU heav heavy and that's why we",
    "start": "1250760",
    "end": "1254280"
  },
  {
    "text": "um assigned zero. one number of",
    "start": "1254280",
    "end": "1257360"
  },
  {
    "text": "resources to it",
    "start": "1257360",
    "end": "1260600"
  },
  {
    "text": "um when initializing the case actor we",
    "start": "1260720",
    "end": "1263400"
  },
  {
    "text": "need to make sure that we um we are um",
    "start": "1263400",
    "end": "1267520"
  },
  {
    "text": "making the asynchronous events we're",
    "start": "1267520",
    "end": "1269760"
  },
  {
    "text": "providing asynchronous events um so we",
    "start": "1269760",
    "end": "1272440"
  },
  {
    "text": "have one event for the phase one event",
    "start": "1272440",
    "end": "1274600"
  },
  {
    "text": "from the front and one event for the",
    "start": "1274600",
    "end": "1276799"
  },
  {
    "text": "back",
    "start": "1276799",
    "end": "1277919"
  },
  {
    "text": "side to enable other processes now to a",
    "start": "1277919",
    "end": "1282159"
  },
  {
    "text": "await those events we need to provide a",
    "start": "1282159",
    "end": "1285080"
  },
  {
    "text": "function which we called weight and",
    "start": "1285080",
    "end": "1287080"
  },
  {
    "text": "which needs to be asynchronous",
    "start": "1287080",
    "end": "1289039"
  },
  {
    "text": "because it has the weight in in",
    "start": "1289039",
    "end": "1291880"
  },
  {
    "text": "there and depending on the input we get",
    "start": "1291880",
    "end": "1296320"
  },
  {
    "text": "um it it decides which event need to be",
    "start": "1296320",
    "end": "1301320"
  },
  {
    "text": "awaited once we have that one the",
    "start": "1302799",
    "end": "1305760"
  },
  {
    "text": "missing part um is how are we able to",
    "start": "1305760",
    "end": "1309200"
  },
  {
    "text": "trigger um the events or to start the",
    "start": "1309200",
    "end": "1312240"
  },
  {
    "text": "events or to release the events when new",
    "start": "1312240",
    "end": "1314720"
  },
  {
    "text": "data is in coming and this is also Pro",
    "start": "1314720",
    "end": "1317520"
  },
  {
    "text": "by providing a function which we call",
    "start": "1317520",
    "end": "1320039"
  },
  {
    "text": "trigger and which has a parameter for",
    "start": "1320039",
    "end": "1322799"
  },
  {
    "text": "the different steps and based on the",
    "start": "1322799",
    "end": "1324640"
  },
  {
    "text": "steps it sets the um event and and",
    "start": "1324640",
    "end": "1329520"
  },
  {
    "text": "enables our functions to continue where",
    "start": "1329520",
    "end": "1332679"
  },
  {
    "text": "they have been stopped by the await",
    "start": "1332679",
    "end": "1336399"
  },
  {
    "text": "function and the last function which our",
    "start": "1336760",
    "end": "1339320"
  },
  {
    "text": "case actor has is an initialized",
    "start": "1339320",
    "end": "1341799"
  },
  {
    "text": "function which we use to make sure that",
    "start": "1341799",
    "end": "1344360"
  },
  {
    "text": "the case actor has actually been",
    "start": "1344360",
    "end": "1346480"
  },
  {
    "text": "initialized before using it",
    "start": "1346480",
    "end": "1350520"
  },
  {
    "text": "so for writing the main",
    "start": "1351640",
    "end": "1353720"
  },
  {
    "text": "logic",
    "start": "1353720",
    "end": "1355760"
  },
  {
    "text": "um",
    "start": "1355760",
    "end": "1357279"
  },
  {
    "text": "let's imagine we have only two",
    "start": "1357279",
    "end": "1360279"
  },
  {
    "text": "algorithms two models which need to run",
    "start": "1360279",
    "end": "1362799"
  },
  {
    "text": "one of them takes the trigger of the",
    "start": "1362799",
    "end": "1365360"
  },
  {
    "text": "phase as an input and the other one",
    "start": "1365360",
    "end": "1367919"
  },
  {
    "text": "requires both the front part and the",
    "start": "1367919",
    "end": "1370360"
  },
  {
    "text": "phase trigger to start working both of",
    "start": "1370360",
    "end": "1373640"
  },
  {
    "text": "those tasks can run in parallel um as",
    "start": "1373640",
    "end": "1377919"
  },
  {
    "text": "soon as that all the data they require",
    "start": "1377919",
    "end": "1379919"
  },
  {
    "text": "is",
    "start": "1379919",
    "end": "1380919"
  },
  {
    "text": "available and finally we need to make",
    "start": "1380919",
    "end": "1383279"
  },
  {
    "text": "sure to gather all the data",
    "start": "1383279",
    "end": "1385960"
  },
  {
    "text": "together and for implementing this we",
    "start": "1385960",
    "end": "1388799"
  },
  {
    "text": "use a state fall",
    "start": "1388799",
    "end": "1390360"
  },
  {
    "text": "backend um which gets handles for all of",
    "start": "1390360",
    "end": "1394600"
  },
  {
    "text": "the models um when is initializing",
    "start": "1394600",
    "end": "1398320"
  },
  {
    "text": "it and later when this backend is",
    "start": "1398320",
    "end": "1402400"
  },
  {
    "text": "called um you first need to create a",
    "start": "1402400",
    "end": "1405799"
  },
  {
    "text": "case actor array actor um which we then",
    "start": "1405799",
    "end": "1410320"
  },
  {
    "text": "can use to um call the weight function",
    "start": "1410320",
    "end": "1414159"
  },
  {
    "text": "and pass and and store the object",
    "start": "1414159",
    "end": "1416320"
  },
  {
    "text": "reference for this weight function in",
    "start": "1416320",
    "end": "1418600"
  },
  {
    "text": "our trigger",
    "start": "1418600",
    "end": "1421039"
  },
  {
    "text": "variables those trigger variables we",
    "start": "1421039",
    "end": "1423480"
  },
  {
    "text": "then pass to the serf back ends and",
    "start": "1423480",
    "end": "1426360"
  },
  {
    "text": "again we just store the handles to those",
    "start": "1426360",
    "end": "1429360"
  },
  {
    "text": "functions in a variable and don't await",
    "start": "1429360",
    "end": "1432760"
  },
  {
    "text": "them because if we would await the model",
    "start": "1432760",
    "end": "1435320"
  },
  {
    "text": "one in this case um with an await",
    "start": "1435320",
    "end": "1439919"
  },
  {
    "text": "keyword we will not be able to run the",
    "start": "1439919",
    "end": "1443559"
  },
  {
    "text": "model two before model one is finished",
    "start": "1443559",
    "end": "1446840"
  },
  {
    "text": "and we don't want this because we want",
    "start": "1446840",
    "end": "1448400"
  },
  {
    "text": "them to run as soon as all the data is",
    "start": "1448400",
    "end": "1451640"
  },
  {
    "text": "available so for finally getting all the",
    "start": "1451640",
    "end": "1454559"
  },
  {
    "text": "output together um we in the end need to",
    "start": "1454559",
    "end": "1458320"
  },
  {
    "text": "call the asynchronous weight function",
    "start": "1458320",
    "end": "1460840"
  },
  {
    "text": "and need to make sure that all um the",
    "start": "1460840",
    "end": "1463799"
  },
  {
    "text": "functions are have been finished before",
    "start": "1463799",
    "end": "1467039"
  },
  {
    "text": "processing the data f",
    "start": "1467039",
    "end": "1470360"
  },
  {
    "text": "now that we have the",
    "start": "1470880",
    "end": "1472720"
  },
  {
    "text": "implementation um of the actor and also",
    "start": "1472720",
    "end": "1476159"
  },
  {
    "text": "of the main logic what we we're still",
    "start": "1476159",
    "end": "1479760"
  },
  {
    "text": "requiring is how are we able to set up",
    "start": "1479760",
    "end": "1484360"
  },
  {
    "text": "um to start this process um let's",
    "start": "1484360",
    "end": "1489159"
  },
  {
    "text": "pretend we have one back end um which is",
    "start": "1489159",
    "end": "1492000"
  },
  {
    "text": "called setup and which can be called",
    "start": "1492000",
    "end": "1494320"
  },
  {
    "text": "directly from the user API from the user",
    "start": "1494320",
    "end": "1498000"
  },
  {
    "text": "web",
    "start": "1498000",
    "end": "1498880"
  },
  {
    "text": "page and when it is getting called when",
    "start": "1498880",
    "end": "1501679"
  },
  {
    "text": "a user starts this process we need to",
    "start": "1501679",
    "end": "1504840"
  },
  {
    "text": "create um one actor instance with a",
    "start": "1504840",
    "end": "1508760"
  },
  {
    "text": "unique ID and we need to make sure that",
    "start": "1508760",
    "end": "1512000"
  },
  {
    "text": "it has a like a detached lifetime",
    "start": "1512000",
    "end": "1514799"
  },
  {
    "text": "because if it doesn't have a detached",
    "start": "1514799",
    "end": "1516919"
  },
  {
    "text": "lifetime it would be it would go out of",
    "start": "1516919",
    "end": "1519679"
  },
  {
    "text": "scope and and when the the back end",
    "start": "1519679",
    "end": "1522760"
  },
  {
    "text": "completes the process and we would not",
    "start": "1522760",
    "end": "1526080"
  },
  {
    "text": "be able to use it in other tasks",
    "start": "1526080",
    "end": "1530000"
  },
  {
    "text": "after creating um the actor which is",
    "start": "1530000",
    "end": "1533120"
  },
  {
    "text": "actually done asynchronously in the back",
    "start": "1533120",
    "end": "1535120"
  },
  {
    "text": "end we need to make sure that the exra",
    "start": "1535120",
    "end": "1537360"
  },
  {
    "text": "is really initialized and that's why we",
    "start": "1537360",
    "end": "1539840"
  },
  {
    "text": "call this initialized function because",
    "start": "1539840",
    "end": "1542279"
  },
  {
    "text": "it only returns after the exure has been",
    "start": "1542279",
    "end": "1545279"
  },
  {
    "text": "created and then we can start the main",
    "start": "1545279",
    "end": "1547760"
  },
  {
    "text": "thread afterwards um it it requires our",
    "start": "1547760",
    "end": "1553279"
  },
  {
    "text": "acture it requires to access our acture",
    "start": "1553279",
    "end": "1558720"
  },
  {
    "text": "so the last thing which is now missing",
    "start": "1558799",
    "end": "1560880"
  },
  {
    "text": "is triggering the events because now we",
    "start": "1560880",
    "end": "1563520"
  },
  {
    "text": "started our main spread and it's waiting",
    "start": "1563520",
    "end": "1565200"
  },
  {
    "text": "for the data so each time now we get the",
    "start": "1565200",
    "end": "1568799"
  },
  {
    "text": "the videos so when we get the face video",
    "start": "1568799",
    "end": "1571159"
  },
  {
    "text": "for example um we also create an actor",
    "start": "1571159",
    "end": "1575120"
  },
  {
    "text": "again and we trigger the we call the",
    "start": "1575120",
    "end": "1579080"
  },
  {
    "text": "trigger function to start the",
    "start": "1579080",
    "end": "1583039"
  },
  {
    "text": "process so this enables us now to have",
    "start": "1583039",
    "end": "1587159"
  },
  {
    "text": "one um working craft which is executed",
    "start": "1587159",
    "end": "1591440"
  },
  {
    "text": "once all data is there and the final",
    "start": "1591440",
    "end": "1593760"
  },
  {
    "text": "output in the end can be gathered",
    "start": "1593760",
    "end": "1598120"
  },
  {
    "text": "together so now um let me have a quick",
    "start": "1600039",
    "end": "1603600"
  },
  {
    "text": "sum up of",
    "start": "1603600",
    "end": "1605120"
  },
  {
    "text": "everything um by using Ray serve instead",
    "start": "1605120",
    "end": "1609120"
  },
  {
    "text": "of um our initial um proof of concept we",
    "start": "1609120",
    "end": "1613320"
  },
  {
    "text": "were able to speed up the processing",
    "start": "1613320",
    "end": "1615679"
  },
  {
    "text": "time",
    "start": "1615679",
    "end": "1618360"
  },
  {
    "text": "about sector four",
    "start": "1618360",
    "end": "1621279"
  },
  {
    "text": "um compared to how we in initially",
    "start": "1621279",
    "end": "1624799"
  },
  {
    "text": "implemented it um Race using race surf",
    "start": "1624799",
    "end": "1628840"
  },
  {
    "text": "also helped us to reduce the number of",
    "start": "1628840",
    "end": "1631919"
  },
  {
    "text": "used Frameworks which also has the side",
    "start": "1631919",
    "end": "1634880"
  },
  {
    "text": "effect that it reduce um maintenance",
    "start": "1634880",
    "end": "1637880"
  },
  {
    "text": "effort for um maintaining all those",
    "start": "1637880",
    "end": "1640520"
  },
  {
    "text": "different",
    "start": "1640520",
    "end": "1641720"
  },
  {
    "text": "Frameworks and additionally um rerf also",
    "start": "1641720",
    "end": "1646039"
  },
  {
    "text": "provided us the easy scalability",
    "start": "1646039",
    "end": "1648960"
  },
  {
    "text": "um possibilities for our our service and",
    "start": "1648960",
    "end": "1652799"
  },
  {
    "text": "it also provides us the",
    "start": "1652799",
    "end": "1654919"
  },
  {
    "text": "possibilities um to deploy different",
    "start": "1654919",
    "end": "1659399"
  },
  {
    "text": "services and with different",
    "start": "1659399",
    "end": "1663279"
  },
  {
    "text": "configurations and for the future we are",
    "start": "1663480",
    "end": "1666480"
  },
  {
    "text": "really excited to see how um new",
    "start": "1666480",
    "end": "1669279"
  },
  {
    "text": "features um are implemented in Ray and",
    "start": "1669279",
    "end": "1672480"
  },
  {
    "text": "racer and one thing which we're",
    "start": "1672480",
    "end": "1675000"
  },
  {
    "text": "especially um eager to see is the the",
    "start": "1675000",
    "end": "1679159"
  },
  {
    "text": "load based Auto scaling feature which is",
    "start": "1679159",
    "end": "1682320"
  },
  {
    "text": "right now already in in the backlog of",
    "start": "1682320",
    "end": "1686279"
  },
  {
    "text": "Ray and we hope it will be implemented",
    "start": "1686279",
    "end": "1689080"
  },
  {
    "text": "soon because that also would help us s",
    "start": "1689080",
    "end": "1692480"
  },
  {
    "text": "um solve some of the scaling problems we",
    "start": "1692480",
    "end": "1696360"
  },
  {
    "text": "have at the moment um which needs to be",
    "start": "1696360",
    "end": "1699000"
  },
  {
    "text": "done right now",
    "start": "1699000",
    "end": "1701919"
  },
  {
    "text": "manually so now I'm at the end and I I'd",
    "start": "1702080",
    "end": "1705200"
  },
  {
    "text": "like to thank you for listening and also",
    "start": "1705200",
    "end": "1707799"
  },
  {
    "text": "espe special thank to any scale and the",
    "start": "1707799",
    "end": "1710320"
  },
  {
    "text": "whole R team for hosting this Summit",
    "start": "1710320",
    "end": "1715480"
  }
]