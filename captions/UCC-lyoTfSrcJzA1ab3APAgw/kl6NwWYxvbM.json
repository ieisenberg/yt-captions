[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "hi this is Lance from Lang chain this is",
    "start": "1719",
    "end": "3679"
  },
  {
    "text": "the 11th part of our rag from scratch",
    "start": "3679",
    "end": "5480"
  },
  {
    "text": "video series focused on query",
    "start": "5480",
    "end": "8280"
  },
  {
    "text": "construction so we've previously talked",
    "start": "8280",
    "end": "10559"
  },
  {
    "text": "through uh query translation which is",
    "start": "10559",
    "end": "12880"
  },
  {
    "text": "the process of taking a question and",
    "start": "12880",
    "end": "14920"
  },
  {
    "text": "converting it or translating it into a",
    "start": "14920",
    "end": "17320"
  },
  {
    "text": "question that's better optimized for",
    "start": "17320",
    "end": "18480"
  },
  {
    "text": "retrieval then we talked about routing",
    "start": "18480",
    "end": "20519"
  },
  {
    "text": "which is the process of going taking",
    "start": "20519",
    "end": "22400"
  },
  {
    "text": "that question routing it to the right",
    "start": "22400",
    "end": "23800"
  },
  {
    "text": "Source be it a given Vector store graph",
    "start": "23800",
    "end": "26720"
  },
  {
    "text": "DB um or SQL DB for example now we're",
    "start": "26720",
    "end": "30199"
  },
  {
    "text": "going to talk about the process of query",
    "start": "30199",
    "end": "31599"
  },
  {
    "text": "construction which is basically taking",
    "start": "31599",
    "end": "33559"
  },
  {
    "text": "natural language and converting it into",
    "start": "33559",
    "end": "35719"
  },
  {
    "text": "particular domain specific language uh",
    "start": "35719",
    "end": "38280"
  },
  {
    "text": "for one of these sources now we're going",
    "start": "38280",
    "end": "40559"
  },
  {
    "text": "to talk specifically about the process",
    "start": "40559",
    "end": "42440"
  },
  {
    "text": "of going from natural language to uh",
    "start": "42440",
    "end": "45200"
  },
  {
    "text": "meditated filters for Vector",
    "start": "45200",
    "end": "47640"
  },
  {
    "text": "Stores um the problem statement is",
    "start": "47640",
    "end": "49960"
  },
  {
    "start": "48000",
    "end": "130000"
  },
  {
    "text": "basically this let's imagine we had an",
    "start": "49960",
    "end": "51760"
  },
  {
    "text": "index of Lang Chain video transcripts um",
    "start": "51760",
    "end": "55000"
  },
  {
    "text": "you might want to ask a question give me",
    "start": "55000",
    "end": "57320"
  },
  {
    "text": "you know or find find me videos on chat",
    "start": "57320",
    "end": "59480"
  },
  {
    "text": "Lang ch published after 2024 for example",
    "start": "59480",
    "end": "63399"
  },
  {
    "text": "um the the process of query structuring",
    "start": "63399",
    "end": "67040"
  },
  {
    "text": "basically converts this natural language",
    "start": "67040",
    "end": "69040"
  },
  {
    "text": "question into a structured query that",
    "start": "69040",
    "end": "71479"
  },
  {
    "text": "can be applied to the metadata uh",
    "start": "71479",
    "end": "73560"
  },
  {
    "text": "filters on your vector store so most",
    "start": "73560",
    "end": "76320"
  },
  {
    "text": "Vector sour will have some kind of",
    "start": "76320",
    "end": "77880"
  },
  {
    "text": "meditative filters that can do kind of",
    "start": "77880",
    "end": "80360"
  },
  {
    "text": "structure querying on top of uh the",
    "start": "80360",
    "end": "83000"
  },
  {
    "text": "chunks that are indexed um so for",
    "start": "83000",
    "end": "85159"
  },
  {
    "text": "example this type of query will retrieve",
    "start": "85159",
    "end": "87200"
  },
  {
    "text": "all chunks uh that talk about the topic",
    "start": "87200",
    "end": "89759"
  },
  {
    "text": "of chat Lang chain uh published after",
    "start": "89759",
    "end": "92520"
  },
  {
    "text": "the date 2024 that's kind of the problem",
    "start": "92520",
    "end": "95000"
  },
  {
    "text": "statement and to do this we're going to",
    "start": "95000",
    "end": "96840"
  },
  {
    "text": "use function calling um in this case you",
    "start": "96840",
    "end": "99320"
  },
  {
    "text": "can use for example open AI or other",
    "start": "99320",
    "end": "101119"
  },
  {
    "text": "providers to do that and what we're",
    "start": "101119",
    "end": "103119"
  },
  {
    "text": "going to do is at a high level take the",
    "start": "103119",
    "end": "105880"
  },
  {
    "text": "metadata fields that are present in our",
    "start": "105880",
    "end": "107840"
  },
  {
    "text": "Vector store and provide them to the",
    "start": "107840",
    "end": "109920"
  },
  {
    "text": "model as kind of information and the",
    "start": "109920",
    "end": "113399"
  },
  {
    "text": "model then can take those and produce",
    "start": "113399",
    "end": "115640"
  },
  {
    "text": "queries that adhere to the schema",
    "start": "115640",
    "end": "117799"
  },
  {
    "text": "provided um and then we can pars those",
    "start": "117799",
    "end": "120439"
  },
  {
    "text": "out to a structured object like a",
    "start": "120439",
    "end": "122000"
  },
  {
    "text": "identic object which again which can",
    "start": "122000",
    "end": "124200"
  },
  {
    "text": "then be used in search so that's kind of",
    "start": "124200",
    "end": "127079"
  },
  {
    "text": "the problem statement and let's actually",
    "start": "127079",
    "end": "128440"
  },
  {
    "text": "walk through",
    "start": "128440",
    "end": "130319"
  },
  {
    "start": "130000",
    "end": "358000"
  },
  {
    "text": "code um so here's our notebook which",
    "start": "130319",
    "end": "133599"
  },
  {
    "text": "we've kind of gone through previously",
    "start": "133599",
    "end": "135480"
  },
  {
    "text": "and I'll just show you as an example",
    "start": "135480",
    "end": "137280"
  },
  {
    "text": "let's take a example YouTube video and",
    "start": "137280",
    "end": "139200"
  },
  {
    "text": "let's look at the metadata that you get",
    "start": "139200",
    "end": "141120"
  },
  {
    "text": "with the transcript so you can see you",
    "start": "141120",
    "end": "143280"
  },
  {
    "text": "get stuff like description uh URL um",
    "start": "143280",
    "end": "147400"
  },
  {
    "text": "yeah publish date length things like",
    "start": "147400",
    "end": "149640"
  },
  {
    "text": "that",
    "start": "149640",
    "end": "150680"
  },
  {
    "text": "now let's say we had an index that had",
    "start": "150680",
    "end": "153120"
  },
  {
    "text": "um basically a had a number of different",
    "start": "153120",
    "end": "156280"
  },
  {
    "text": "metadata fields and filters uh that",
    "start": "156280",
    "end": "159280"
  },
  {
    "text": "allowed us to do range filtering on like",
    "start": "159280",
    "end": "161040"
  },
  {
    "text": "view count publication date the video",
    "start": "161040",
    "end": "163239"
  },
  {
    "text": "length um or unstructured search on",
    "start": "163239",
    "end": "165640"
  },
  {
    "text": "contents and title so those are kind of",
    "start": "165640",
    "end": "167920"
  },
  {
    "text": "like the imagine we had an index that",
    "start": "167920",
    "end": "169920"
  },
  {
    "text": "had uh those kind of filters available",
    "start": "169920",
    "end": "173200"
  },
  {
    "text": "to us what we can do is capture that",
    "start": "173200",
    "end": "176159"
  },
  {
    "text": "information about the available filters",
    "start": "176159",
    "end": "178040"
  },
  {
    "text": "in an object so we're calling that a",
    "start": "178040",
    "end": "179879"
  },
  {
    "text": "this tutorial search object kind of",
    "start": "179879",
    "end": "181720"
  },
  {
    "text": "encapsulates that information about the",
    "start": "181720",
    "end": "183519"
  },
  {
    "text": "available searches that we can do and so",
    "start": "183519",
    "end": "185720"
  },
  {
    "text": "we basically enumerate it here content",
    "start": "185720",
    "end": "187519"
  },
  {
    "text": "search and title search are semantic",
    "start": "187519",
    "end": "189000"
  },
  {
    "text": "searches that can be done over those",
    "start": "189000",
    "end": "192120"
  },
  {
    "text": "fields um and then these filters then",
    "start": "192120",
    "end": "195840"
  },
  {
    "text": "are various types of structure searches",
    "start": "195840",
    "end": "197480"
  },
  {
    "text": "we can do on like the length um The View",
    "start": "197480",
    "end": "201040"
  },
  {
    "text": "count and so forth and so we can just",
    "start": "201040",
    "end": "203120"
  },
  {
    "text": "kind of build that object now we can set",
    "start": "203120",
    "end": "206200"
  },
  {
    "text": "this up really easily with a basic",
    "start": "206200",
    "end": "208040"
  },
  {
    "text": "simple prompt that says you know you're",
    "start": "208040",
    "end": "209840"
  },
  {
    "text": "expert can bring natural language into",
    "start": "209840",
    "end": "211400"
  },
  {
    "text": "database queries you have access to the",
    "start": "211400",
    "end": "213319"
  },
  {
    "text": "database tutorial videos um given a",
    "start": "213319",
    "end": "216000"
  },
  {
    "text": "question return a database query",
    "start": "216000",
    "end": "217519"
  },
  {
    "text": "optimize retrieval so that's kind of it",
    "start": "217519",
    "end": "220319"
  },
  {
    "text": "now here's the key point though when you",
    "start": "220319",
    "end": "222400"
  },
  {
    "text": "call this llm with structured output",
    "start": "222400",
    "end": "224680"
  },
  {
    "text": "you're binding this pantic object which",
    "start": "224680",
    "end": "226680"
  },
  {
    "text": "contains all the information about our",
    "start": "226680",
    "end": "228400"
  },
  {
    "text": "index to the llm which is exactly what",
    "start": "228400",
    "end": "231480"
  },
  {
    "text": "we talked about previously it's really",
    "start": "231480",
    "end": "233319"
  },
  {
    "text": "this process right here you're taking",
    "start": "233319",
    "end": "235040"
  },
  {
    "text": "this object you're converting it to a",
    "start": "235040",
    "end": "237040"
  },
  {
    "text": "function schema for example open AI",
    "start": "237040",
    "end": "238720"
  },
  {
    "text": "you're binding that to your model and",
    "start": "238720",
    "end": "240519"
  },
  {
    "text": "then you're going to be able to get um",
    "start": "240519",
    "end": "243519"
  },
  {
    "text": "structured object out versus Json string",
    "start": "243519",
    "end": "246840"
  },
  {
    "text": "from a natural language question which",
    "start": "246840",
    "end": "248720"
  },
  {
    "text": "can then be parsed into a pantic object",
    "start": "248720",
    "end": "251560"
  },
  {
    "text": "which you get out so that's really the",
    "start": "251560",
    "end": "253239"
  },
  {
    "text": "flow it's taking advantage of function",
    "start": "253239",
    "end": "255079"
  },
  {
    "text": "calling as we said so if we go back down",
    "start": "255079",
    "end": "258680"
  },
  {
    "text": "we set up our query analyzer chain right",
    "start": "258680",
    "end": "261040"
  },
  {
    "text": "here now let's try to run that just on a",
    "start": "261040",
    "end": "263199"
  },
  {
    "text": "on a purely semantic input so rag from",
    "start": "263199",
    "end": "265680"
  },
  {
    "text": "scratch let's run that and you can see",
    "start": "265680",
    "end": "268280"
  },
  {
    "text": "this just does like a Content search",
    "start": "268280",
    "end": "269680"
  },
  {
    "text": "sech and a title search that's exactly",
    "start": "269680",
    "end": "271280"
  },
  {
    "text": "what you would expect now if we pass a",
    "start": "271280",
    "end": "273880"
  },
  {
    "text": "question that includes like a date",
    "start": "273880",
    "end": "275280"
  },
  {
    "text": "filter let's just see if that would work",
    "start": "275280",
    "end": "278880"
  },
  {
    "text": "and there we go so you kind of still get",
    "start": "278880",
    "end": "281560"
  },
  {
    "text": "that semantic search um but you also get",
    "start": "281560",
    "end": "285080"
  },
  {
    "text": "um search over for example publish date",
    "start": "285080",
    "end": "287680"
  },
  {
    "text": "earliest and latest publish date kind of",
    "start": "287680",
    "end": "289400"
  },
  {
    "text": "as as you would expect let's try another",
    "start": "289400",
    "end": "291639"
  },
  {
    "text": "one here so videos focus on the topic of",
    "start": "291639",
    "end": "294039"
  },
  {
    "text": "chat Lang chain they're published before",
    "start": "294039",
    "end": "295280"
  },
  {
    "text": "2024 this is just kind of a rewrite of",
    "start": "295280",
    "end": "297759"
  },
  {
    "text": "this question in slightly different way",
    "start": "297759",
    "end": "299840"
  },
  {
    "text": "using a different date filter and then",
    "start": "299840",
    "end": "301840"
  },
  {
    "text": "you can see we can get we get content",
    "start": "301840",
    "end": "303360"
  },
  {
    "text": "search title search and then we can get",
    "start": "303360",
    "end": "305360"
  },
  {
    "text": "kind of a date search so this is a very",
    "start": "305360",
    "end": "307800"
  },
  {
    "text": "general strategy that can be applied",
    "start": "307800",
    "end": "309360"
  },
  {
    "text": "kind of broadly to um different kinds of",
    "start": "309360",
    "end": "312680"
  },
  {
    "text": "querying you want to do it's really the",
    "start": "312680",
    "end": "314360"
  },
  {
    "text": "process of going from an unstructured",
    "start": "314360",
    "end": "316800"
  },
  {
    "text": "input to a structured query object out",
    "start": "316800",
    "end": "319960"
  },
  {
    "text": "following an arbitrary schema that you",
    "start": "319960",
    "end": "322360"
  },
  {
    "text": "provide and so as noted really this",
    "start": "322360",
    "end": "325160"
  },
  {
    "text": "whole thing we created here this",
    "start": "325160",
    "end": "326680"
  },
  {
    "text": "tutorial search is based upon the",
    "start": "326680",
    "end": "328919"
  },
  {
    "text": "specifics of our Vector store of",
    "start": "328919",
    "end": "330560"
  },
  {
    "text": "interest and if you want to learn more",
    "start": "330560",
    "end": "332479"
  },
  {
    "text": "about this I link to some documentation",
    "start": "332479",
    "end": "334400"
  },
  {
    "text": "here that talks a lot about different uh",
    "start": "334400",
    "end": "337039"
  },
  {
    "text": "types of of Integrations we have with",
    "start": "337039",
    "end": "339120"
  },
  {
    "text": "different Vector store providers to do",
    "start": "339120",
    "end": "340840"
  },
  {
    "text": "exactly this so it's a very useful trick",
    "start": "340840",
    "end": "344000"
  },
  {
    "text": "um it allows you to do kind of query uh",
    "start": "344000",
    "end": "347120"
  },
  {
    "text": "uh say metadata filter filtering on the",
    "start": "347120",
    "end": "349560"
  },
  {
    "text": "fly from a natural language question",
    "start": "349560",
    "end": "351880"
  },
  {
    "text": "it's a very convenient trick uh that",
    "start": "351880",
    "end": "354199"
  },
  {
    "text": "works with many different Vector DBS so",
    "start": "354199",
    "end": "356240"
  },
  {
    "text": "encourage you to play with it thanks",
    "start": "356240",
    "end": "360479"
  }
]