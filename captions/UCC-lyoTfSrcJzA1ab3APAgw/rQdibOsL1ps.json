[
  {
    "text": "hey everyone thanks for joining um today I'm going to be doing a long form YouTube video on creating a full stack",
    "start": "799",
    "end": "8000"
  },
  {
    "text": "web app which uses Lang chain um and an xgs front end for indexing performing QA",
    "start": "8000",
    "end": "15160"
  },
  {
    "text": "taking notes um and overall just an easier interface for understanding papers from archive uh if you're not",
    "start": "15160",
    "end": "22760"
  },
  {
    "text": "already familiar with archive it's a website by Cornell uh essentially it's a place where researchers um Can publish their",
    "start": "22760",
    "end": "30279"
  },
  {
    "text": "papers um and if you go to for example this archive URL you can click download",
    "start": "30279",
    "end": "36640"
  },
  {
    "text": "PDF and then you can easily get access to their paper in a PDF format um so",
    "start": "36640",
    "end": "43239"
  },
  {
    "text": "this app is what at a high level what it's going to do is you're going to have a front end you can submit a paper URL",
    "start": "43239",
    "end": "50039"
  },
  {
    "text": "and then the back end is going to parse that paper it's going to split up into chunks it's going to hit GPD 4 um thanks",
    "start": "50039",
    "end": "56399"
  },
  {
    "text": "to their new 128k context window we can comp confidently fit the entire paper um",
    "start": "56399",
    "end": "62559"
  },
  {
    "text": "no matter what paper it is um into that context window we're going to have gp4 take notes on that paper then we're",
    "start": "62559",
    "end": "68360"
  },
  {
    "text": "going to then return those notes along with a set of questions which um is essentially prompting our user to say",
    "start": "68360",
    "end": "74840"
  },
  {
    "text": "you know hey you can also ask questions about these different parts of the paper um and then from there the user is going to be able to say you know what is XYZ",
    "start": "74840",
    "end": "83360"
  },
  {
    "text": "talking about in this paper um and it'll go back to our server our server will then um uh using are we're going to",
    "start": "83360",
    "end": "90880"
  },
  {
    "text": "embed the paper you know split up into chunks um using that it'll be able to look up context um and answer your",
    "start": "90880",
    "end": "96799"
  },
  {
    "text": "questions based on the context in that paper so you can you know chat with your paper and understand it a little bit",
    "start": "96799",
    "end": "103079"
  },
  {
    "text": "easier than having to go through and read the entire paper you know maybe instead of having to read all 18 Pages",
    "start": "103079",
    "end": "108960"
  },
  {
    "text": "like in this paper um you might only end up reading four or five pages total and you get a pretty good understanding the",
    "start": "108960",
    "end": "115240"
  },
  {
    "text": "paper so to start we're going to have a um typescript monor repo",
    "start": "115240",
    "end": "120399"
  },
  {
    "text": "I've already created the spoiler plate essentially what it has is a a web directory and an API directory um and",
    "start": "120399",
    "end": "127079"
  },
  {
    "text": "the web is going to be a nextjs app we will get to that later and the API is just a simple typescript app we're going",
    "start": "127079",
    "end": "132360"
  },
  {
    "text": "to use expressjs to make it uh to be able to turn into an API um you can",
    "start": "132360",
    "end": "138120"
  },
  {
    "text": "clone this from my GitHub I'll have this this template set up so you can you know clone there and start from where I'm",
    "start": "138120",
    "end": "143480"
  },
  {
    "text": "starting at uh yeah so API Source directory we're going to have an index file and to start off we're going to",
    "start": "143480",
    "end": "149319"
  },
  {
    "text": "create um uh our main function this function is going to take in three things uh the",
    "start": "149319",
    "end": "155319"
  },
  {
    "text": "paper URL the name of the paper um and that's just for like UI so you can on",
    "start": "155319",
    "end": "161480"
  },
  {
    "text": "the website you can see what the name of this paper is you're you're doing QA over and then a third optional aru argument pages to delete uh this is",
    "start": "161480",
    "end": "168319"
  },
  {
    "text": "important because if we go back to this paper we see it's 18 Pages however as we",
    "start": "168319",
    "end": "175159"
  },
  {
    "text": "scroll down on page 10 through",
    "start": "175159",
    "end": "180800"
  },
  {
    "text": "10 through 12 so three pages um there are you know references citations and",
    "start": "180800",
    "end": "186400"
  },
  {
    "text": "these are um full of texts we don't really care about and often times they have lots of keywords which can um",
    "start": "186400",
    "end": "193200"
  },
  {
    "text": "hinder our our semantic search capabilities when we then go and try and perform Rack in this paper so this pages",
    "start": "193200",
    "end": "199239"
  },
  {
    "text": "to delete um optional argument is going to be uh the user can specify which",
    "start": "199239",
    "end": "204680"
  },
  {
    "text": "Pages they want to remove and then we won't you know take notes on that paper we won't send his GPT we want embed that",
    "start": "204680",
    "end": "210640"
  },
  {
    "text": "or or touch them at all so that um we can have a cleaner um embedding so let's",
    "start": "210640",
    "end": "216159"
  },
  {
    "text": "start by making an async name we're going to take in three",
    "start": "216159",
    "end": "221599"
  },
  {
    "text": "ARG so paper URL name and pages to",
    "start": "221599",
    "end": "229159"
  },
  {
    "text": "delete so this is going to be a paper URL that's a string thank you co-pilot",
    "start": "229159",
    "end": "235840"
  },
  {
    "text": "name String page it to delete as number but we want the number array who wants to be",
    "start": "235840",
    "end": "241360"
  },
  {
    "text": "optional um and then the first step for this function is actually loading the",
    "start": "241360",
    "end": "246599"
  },
  {
    "text": "paper from the URL so we're going to use axios um it's going to be we're going to load it as a buffer and return it um and",
    "start": "246599",
    "end": "254480"
  },
  {
    "text": "that way um you know it's an easy way to actually load this PDF and then be able to interact with it so let's go ahead",
    "start": "254480",
    "end": "260400"
  },
  {
    "text": "and create helper function we'll call it um function load",
    "start": "260400",
    "end": "267840"
  },
  {
    "text": "PDF from URL so URL string and then we",
    "start": "267840",
    "end": "272960"
  },
  {
    "text": "actually don't want that co-pilot uh let's type the response promise of",
    "start": "272960",
    "end": "279240"
  },
  {
    "text": "buffer nice um and here we're going to have to import axios so import axios",
    "start": "279240",
    "end": "287400"
  },
  {
    "text": "from axios and declare our um that",
    "start": "287400",
    "end": "294120"
  },
  {
    "text": "is what we want thanks co-pilot uh yes what the",
    "start": "294120",
    "end": "299639"
  },
  {
    "text": "this what this is doing is it's making an HTTP request to the URL we specified and it's definining the return type as",
    "start": "299639",
    "end": "305080"
  },
  {
    "text": "an array buffer um this is we're going to want to wrap this in a buffer. from",
    "start": "305080",
    "end": "313720"
  },
  {
    "text": "though just to make sure we actually do get our buffer return um and then inside",
    "start": "313720",
    "end": "319759"
  },
  {
    "text": "of our main function we can do a quick check if paper do url. ends with bangs",
    "start": "319759",
    "end": "328759"
  },
  {
    "text": "false um PDF we're going to want to throw because that will not be the valid type",
    "start": "328759",
    "end": "334039"
  },
  {
    "text": "so throw a new error not a valid PDF all right and then we can call our function so it's going to be const",
    "start": "334039",
    "end": "341800"
  },
  {
    "text": "PDF as buffer equals weight BF URL paper URL so what this going to do is we're",
    "start": "341800",
    "end": "348280"
  },
  {
    "text": "going to be able to pass in our paper URL um and it's going to load that as a buffer um and the next step is we're",
    "start": "348280",
    "end": "354759"
  },
  {
    "text": "going to want to pass that through to unstructured which is a tool with l um",
    "start": "354759",
    "end": "359800"
  },
  {
    "text": "or it's it's a component that Lang chain offers uh which will allow us to break",
    "start": "359800",
    "end": "365240"
  },
  {
    "text": "this paper down into smaller chunks more manageable chunks that we can embed um we can then convert that back to a",
    "start": "365240",
    "end": "370560"
  },
  {
    "text": "string to send a GPT um and it's overall just a really great way of dealing with unstructured data they support you know",
    "start": "370560",
    "end": "377680"
  },
  {
    "text": "every most data types PDF you know HTML Pages they kind of do it all um and",
    "start": "377680",
    "end": "383479"
  },
  {
    "text": "they've got some some magic that happens in the background which is able to parse his PDF and break it down into pieces",
    "start": "383479",
    "end": "388919"
  },
  {
    "text": "like you know head or a body description or you know an image or a table whatnot",
    "start": "388919",
    "end": "394240"
  },
  {
    "text": "um and it makes it really easy to deal with these unstructured data formats uh actually for this I made a",
    "start": "394240",
    "end": "401240"
  },
  {
    "text": "mistake since we're uh specifying the return type as a ray buffer we don't need to wrap in a buffer it up from and",
    "start": "401240",
    "end": "406800"
  },
  {
    "text": "instead we can just do return response.data as you can see our",
    "start": "406800",
    "end": "413599"
  },
  {
    "text": "typescript is not complaining about that um and that's because it's any typed uh but we know know that since we're using",
    "start": "413599",
    "end": "420720"
  },
  {
    "text": "this response type it will be the right um response type um so after we've done",
    "start": "420720",
    "end": "425840"
  },
  {
    "text": "this we're going to want to go through and delete the pages first if a user has specified pages to delete um and we want",
    "start": "425840",
    "end": "432360"
  },
  {
    "text": "to do this before we actually use instructure to parse the PDF because we don't want to be parsing Pages we don't",
    "start": "432360",
    "end": "437879"
  },
  {
    "text": "care about uh so let's do a quick check to see if pages to delete is true and",
    "start": "437879",
    "end": "445960"
  },
  {
    "text": "pages to delete length is greater than zero um and if this is the case we're going",
    "start": "445960",
    "end": "451280"
  },
  {
    "text": "to want to call our pages to delete function so let's go specify that up",
    "start": "451280",
    "end": "456400"
  },
  {
    "text": "here step one we're going to be using a library called PDF lib um and their PDF",
    "start": "456400",
    "end": "461759"
  },
  {
    "text": "document class to actually load um and handle deleting the pages so let's",
    "start": "461759",
    "end": "467440"
  },
  {
    "text": "define a new function async function delete pages and this is going",
    "start": "467440",
    "end": "474560"
  },
  {
    "text": "to take in the PDF as a buffer and the page is to",
    "start": "474560",
    "end": "480639"
  },
  {
    "text": "delete as an array of numbers um let's use this so what they're doing here they are loading the",
    "start": "480639",
    "end": "486680"
  },
  {
    "text": "PDF and awaiting that which is what we want um but this is not going to work",
    "start": "486680",
    "end": "491720"
  },
  {
    "text": "what we want to do instead is iterate over each page to delete so we need a",
    "start": "491720",
    "end": "497560"
  },
  {
    "text": "counter um for the number of pages to offset by and this is because once we remove a page the total number of pages",
    "start": "497560",
    "end": "504840"
  },
  {
    "text": "in that PDF is going to change so we need to add one to that number offset by so let num",
    "start": "504840",
    "end": "512479"
  },
  {
    "text": "to offset by and we'll start that as one um and then four cons page number of",
    "start": "512479",
    "end": "520039"
  },
  {
    "text": "pages to delete pdf doc. remove page page number minus number offset by and",
    "start": "520039",
    "end": "525680"
  },
  {
    "text": "then Plus+ and that looks right and then what we're doing here is we're saving the new",
    "start": "525680",
    "end": "531560"
  },
  {
    "text": "PDF and returning it it's going to be our unit 8 array um but we want to",
    "start": "531560",
    "end": "536640"
  },
  {
    "text": "return it as a buffer again to to match our previous type so we are going to",
    "start": "536640",
    "end": "542160"
  },
  {
    "text": "have to match wrap this in a buffer. from to convert this back to a",
    "start": "542160",
    "end": "548160"
  },
  {
    "text": "buffer um so now we can go down here and if a user is specified they want to",
    "start": "548160",
    "end": "553279"
  },
  {
    "text": "delete some pages then we can delete them here so um we're going to do wait Pages",
    "start": "553279",
    "end": "561000"
  },
  {
    "text": "delete delete pages PDF as a buffer and pages to delete and then we're also",
    "start": "561000",
    "end": "566360"
  },
  {
    "text": "going to change this to not be a constant um so we can reassign the PDF",
    "start": "566360",
    "end": "572959"
  },
  {
    "text": "value there okay so the next step is actually using unstructured to um chunk and pars",
    "start": "572959",
    "end": "580240"
  },
  {
    "text": "our PDF so we're going to define a new function call it async um uh let's see convert PDF",
    "start": "580240",
    "end": "589320"
  },
  {
    "text": "to documents um and the documents is referring to Lang chain document type um",
    "start": "589320",
    "end": "594800"
  },
  {
    "text": "it's the the type we use for specifying documents that we then embed um and that",
    "start": "594800",
    "end": "600600"
  },
  {
    "text": "type is used broadly across the lane chain Library so we want everything to be in that type so we're going to specify you know one argument PDF buffer",
    "start": "600600",
    "end": "608360"
  },
  {
    "text": "um but our return type is going to be a little bit different we're going to want to return an array",
    "start": "608360",
    "end": "615440"
  },
  {
    "text": "of documents um and this usually does not recognize that documents needs to be a",
    "start": "615440",
    "end": "622519"
  },
  {
    "text": "type so let's go ahead and import it from link chain so",
    "start": "622519",
    "end": "628040"
  },
  {
    "text": "import document that's not right from Lang",
    "start": "628040",
    "end": "634079"
  },
  {
    "text": "chain SL document and then we have the proper document type and our typescript will be",
    "start": "634079",
    "end": "640800"
  },
  {
    "text": "happy with this and that is obviously not right so a sync function convert PDF",
    "start": "640800",
    "end": "646519"
  },
  {
    "text": "to documents um the first step uh unstructured requires an API key so we'll have a check for that if process.",
    "start": "646519",
    "end": "654399"
  },
  {
    "text": "in do un",
    "start": "654399",
    "end": "661040"
  },
  {
    "text": "unstructured API key is",
    "start": "665279",
    "end": "670399"
  },
  {
    "text": "false not at we want to do is false and we want to throw a new error um no API",
    "start": "670399",
    "end": "679880"
  },
  {
    "text": "key set and we'll change that to missing un structured API key uh make it a",
    "start": "679880",
    "end": "686399"
  },
  {
    "text": "little bit more specific um and then the one one thing with unstructured um this is also why we had to do it um in the",
    "start": "686399",
    "end": "692800"
  },
  {
    "text": "back end and we couldn't or as like a know separate API service running on node and not um not in the edge is that",
    "start": "692800",
    "end": "700959"
  },
  {
    "text": "unstructured with L chain requires a a a um file path to read from um and if",
    "start": "700959",
    "end": "706600"
  },
  {
    "text": "we're doing that in the edge then we can't actually use you know the node file system to write files so the first",
    "start": "706600",
    "end": "711680"
  },
  {
    "text": "step is we're going to get a random name um to make set our file name as and",
    "start": "711680",
    "end": "717079"
  },
  {
    "text": "that's to avoid you know file name collisions so const random name",
    "start": "717079",
    "end": "723800"
  },
  {
    "text": "equals yep that looks pretty good um and the next step is to actually write a file with this random name and our PDF",
    "start": "723800",
    "end": "731680"
  },
  {
    "text": "so let's go ahead and import we're going to have to add two Imports so",
    "start": "731680",
    "end": "737079"
  },
  {
    "text": "import write file and then also unlink from FS promises which is going to be",
    "start": "737079",
    "end": "743680"
  },
  {
    "text": "able allow us to delete our file when we're finished so unlink from um FS promises and we want",
    "start": "743680",
    "end": "750800"
  },
  {
    "text": "to use the um you know the promises library because we're using you know nodes",
    "start": "750800",
    "end": "756399"
  },
  {
    "text": "async uh yeah so once we've imported these we can go back down to our function and we can call await write",
    "start": "756399",
    "end": "762480"
  },
  {
    "text": "file and then the PDF path which is going to be let's set that as PDFs SL",
    "start": "762480",
    "end": "770680"
  },
  {
    "text": "random name. PDF um and then we can actually pass in our PDF and we could",
    "start": "770680",
    "end": "776920"
  },
  {
    "text": "measure let's set binary as a type once that's set we can call our",
    "start": "776920",
    "end": "782040"
  },
  {
    "text": "unstructured loader so we're going to step one we're going to be importing unstructured",
    "start": "782040",
    "end": "789839"
  },
  {
    "text": "import unstructured loader from laying chain document",
    "start": "789880",
    "end": "795320"
  },
  {
    "text": "loaders uh so down here we can call we can Define our loader function so const",
    "start": "795320",
    "end": "801680"
  },
  {
    "text": "loader equals new unstructured loader and we're going to want to pass in our path to the file which is going",
    "start": "801680",
    "end": "809600"
  },
  {
    "text": "to be the same as this so PDF path and then also some options so our API key",
    "start": "809600",
    "end": "816079"
  },
  {
    "text": "which is that and then also we want our strategy to be highres",
    "start": "816079",
    "end": "821600"
  },
  {
    "text": "strategy is not that want to be highres all right so once we've",
    "start": "821600",
    "end": "828760"
  },
  {
    "text": "defined our or we've instantiated our unstructured loader class um we can actually go and load these documents and",
    "start": "828760",
    "end": "834560"
  },
  {
    "text": "what that's going to do is it's going to look at our PDF it's going to chunk it um I think I mentioned this earlier unstructured they do some cool things",
    "start": "834560",
    "end": "840480"
  },
  {
    "text": "around you know identifying what parts of a PDF is are the uh you know the title or like a b paragraph body um and",
    "start": "840480",
    "end": "847639"
  },
  {
    "text": "it and it chunks it into these nice parts and also adds metadata um you know identifying which paragraph relates to",
    "start": "847639",
    "end": "854720"
  },
  {
    "text": "which title so we're going to load these documents we'll Define a documents loader and uh thank you co-pilot that's",
    "start": "854720",
    "end": "862000"
  },
  {
    "text": "how we do it so we call the load method um and this is going to take a second and it's going to load all of our documents and return it to this um",
    "start": "862000",
    "end": "869000"
  },
  {
    "text": "variable and as we can see it's the nice Lang chain um document type and then",
    "start": "869000",
    "end": "874079"
  },
  {
    "text": "that is you know what goes inside um and then once we load our documents we can",
    "start": "874079",
    "end": "879199"
  },
  {
    "text": "do exactly what copal suggested which is unlink um or delete the file and return",
    "start": "879199",
    "end": "885360"
  },
  {
    "text": "documents um so let's go over this one more time what we're doing is we're passing in the PDF as a buffer and we're",
    "start": "885360",
    "end": "891360"
  },
  {
    "text": "verifying our unstructured API key is there uh we're creating random name to prevent you know file conflicts if you",
    "start": "891360",
    "end": "897560"
  },
  {
    "text": "are you know running this simultan ously you don't want to um just have like a static name because two files could try and write the same place and that would",
    "start": "897560",
    "end": "903440"
  },
  {
    "text": "you mess everything up uh then we write the file with our random name as a PDF",
    "start": "903440",
    "end": "908680"
  },
  {
    "text": "passing it our PDF buffer and uh defining it as binary type um and then we instance get our new unstructured",
    "start": "908680",
    "end": "914160"
  },
  {
    "text": "loaded class give it the name um we want to give it the API key and our strategy",
    "start": "914160",
    "end": "919440"
  },
  {
    "text": "and that gets returned to this this uh this loader variable and then we can load our documents delete the file and",
    "start": "919440",
    "end": "925440"
  },
  {
    "text": "return our documents so if we go back down to our main function we can do con documents",
    "start": "925440",
    "end": "932040"
  },
  {
    "text": "equals weight convert PDF to documents PDF as a buffer all right so once we've got to",
    "start": "932040",
    "end": "938880"
  },
  {
    "text": "this point um we've done a few things we've loaded our PDF as a buffer uh We've deleted Pages if we you know",
    "start": "938880",
    "end": "944399"
  },
  {
    "text": "specify that and then we've converted our our our PDF to L chain document type",
    "start": "944399",
    "end": "950319"
  },
  {
    "text": "um and the next step here we're going to want to actually verify this all works so let's you know console log our",
    "start": "950319",
    "end": "956319"
  },
  {
    "text": "documents and then this is probably going to be a pretty large log so at the end we're going to log length um so we",
    "start": "956319",
    "end": "964120"
  },
  {
    "text": "can see how many documents were loaded and that'll give us a rough idea as to um you know if our thing worked or not",
    "start": "964120",
    "end": "970600"
  },
  {
    "text": "so we'll call this main function um and we'll go back to Chrome and use this PDF",
    "start": "970600",
    "end": "976399"
  },
  {
    "text": "that I specified here uh so PDF URL we'll set that to this um or paper URL",
    "start": "976399",
    "end": "986199"
  },
  {
    "text": "rather and then we'll make the name we're not doing anything that right now so name can be test and then we'll go to",
    "start": "986199",
    "end": "991680"
  },
  {
    "text": "our terminal um if we bring over our",
    "start": "991680",
    "end": "997800"
  },
  {
    "text": "terminal uh and then we are in our you know YouTube videos archive paper rag um",
    "start": "997800",
    "end": "1003160"
  },
  {
    "text": "and we can call in in this this boiler plate um repo that you can clone for my",
    "start": "1003160",
    "end": "1009319"
  },
  {
    "text": "GitHub I find a few scripts in the root um which use turbo repo and allows us to",
    "start": "1009319",
    "end": "1014800"
  },
  {
    "text": "um I'll just show you it allows to start our API start command from Route so",
    "start": "1014800",
    "end": "1020560"
  },
  {
    "text": "start API is use yarn turbo Run start and then filter by our API project so we",
    "start": "1020560",
    "end": "1026640"
  },
  {
    "text": "can just run yarn start whoops yarn start",
    "start": "1026640",
    "end": "1033839"
  },
  {
    "text": "API um and that's actually going to start our API so while this",
    "start": "1033839",
    "end": "1042360"
  },
  {
    "text": "loads okay so we got an error what is this saying no such file",
    "start": "1044720",
    "end": "1050080"
  },
  {
    "text": "or directory open PDF slash theame of our",
    "start": "1050080",
    "end": "1055280"
  },
  {
    "text": "PDF um let's go and let's see if it created our PDF it does not look like it",
    "start": "1055280",
    "end": "1062000"
  },
  {
    "text": "um so what we'll do here instead is we'll go into our probably couldn't there was no directory which makes sense",
    "start": "1062000",
    "end": "1068480"
  },
  {
    "text": "so it could actually write the file so let's navigate API make directory uh what do we name it",
    "start": "1068480",
    "end": "1075559"
  },
  {
    "text": "PDFs PDFs and then I bet but we just run your and start since we're an API if we",
    "start": "1075559",
    "end": "1081559"
  },
  {
    "text": "do this now it will",
    "start": "1081559",
    "end": "1085679"
  },
  {
    "text": "work um an un structure does take a second since it's performing a lot of um",
    "start": "1086720",
    "end": "1092320"
  },
  {
    "text": "you know computations so I'm going to pause this and come back when the start command is finished all right so it's",
    "start": "1092320",
    "end": "1098200"
  },
  {
    "text": "been a little while and as you can see nothing's happened um so I'm going to cancel this and we're going to perform a little bit of",
    "start": "1098200",
    "end": "1103760"
  },
  {
    "text": "debugging um so to start this should work uh let's just add some console logs",
    "start": "1103760",
    "end": "1109039"
  },
  {
    "text": "to see how far we get after you know first if and then we can",
    "start": "1109039",
    "end": "1117080"
  },
  {
    "text": "do after",
    "start": "1117080",
    "end": "1123200"
  },
  {
    "text": "loader and then that shouldn't get called because we're not passing it an array so we'll call",
    "start": "1123200",
    "end": "1130720"
  },
  {
    "text": "after docs um and I'm guessing that the problem is going to be in here so let's",
    "start": "1130720",
    "end": "1137159"
  },
  {
    "text": "add some more functions um we know yeah so we know we were able to get to write file last time because",
    "start": "1137159",
    "end": "1143039"
  },
  {
    "text": "we got the error that the PDF's directory didn't exist um and if we look in here it did write a PDF and it is",
    "start": "1143039",
    "end": "1150480"
  },
  {
    "text": "what we want so we can actually go down and delete these two because we know it made it there um but it's not making it",
    "start": "1150480",
    "end": "1156840"
  },
  {
    "text": "to after documents um so let's make sure we're able to actually instan get our class",
    "start": "1156840",
    "end": "1162600"
  },
  {
    "text": "properly so before load um and the file wasn't deleted so",
    "start": "1162600",
    "end": "1167840"
  },
  {
    "text": "it's probably happening here after load and I bet if we go and we",
    "start": "1167840",
    "end": "1176320"
  },
  {
    "text": "rerun we rerun we're going to see before load and not after",
    "start": "1176320",
    "end": "1183080"
  },
  {
    "text": "load um and if we look quickly as we can see it's created a new",
    "start": "1183080",
    "end": "1188159"
  },
  {
    "text": "PDF um but no logs yet which is",
    "start": "1188159",
    "end": "1194720"
  },
  {
    "text": "interesting I'm going to pause this and if we do get to some logs then I will resume all right quick resume I realized",
    "start": "1194720",
    "end": "1202120"
  },
  {
    "text": "we didn't add a log before here because we're know we're writing but we're not sure if we're able to get best here so",
    "start": "1202120",
    "end": "1208840"
  },
  {
    "text": "if we add that log go back to our terminal we see nothing's logged yet um and we",
    "start": "1208840",
    "end": "1215200"
  },
  {
    "text": "rerun then let's verify yep it's written the third one um but it's here we go",
    "start": "1215200",
    "end": "1223200"
  },
  {
    "text": "after write and before load so after write it's able to",
    "start": "1223200",
    "end": "1228960"
  },
  {
    "text": "instantiate the class and before load which means that this is taking a very",
    "start": "1228960",
    "end": "1235080"
  },
  {
    "text": "long time for some reason um let's",
    "start": "1235080",
    "end": "1240559"
  },
  {
    "text": "see what I would do now is I would go to the unstructured site or I go to the",
    "start": "1240559",
    "end": "1246039"
  },
  {
    "text": "I'll go to the Lang chain um site and look up",
    "start": "1246039",
    "end": "1251120"
  },
  {
    "text": "unstructured and see if they say we're missing anything okay so looks like we",
    "start": "1251120",
    "end": "1256880"
  },
  {
    "text": "need to actually add this Docker container um let's see if that works let's create a new terminal window",
    "start": "1256880",
    "end": "1264039"
  },
  {
    "text": "and just paste in what they gave us uh that makes sense don't have the image",
    "start": "1264039",
    "end": "1270200"
  },
  {
    "text": "locally so it's going to pull it in um and after this is done downloading we can resume and see if that fixed our",
    "start": "1270200",
    "end": "1275840"
  },
  {
    "text": "issue all righty we're back uh so the docker container finished pulling and if we open up orb stack which is my like",
    "start": "1275840",
    "end": "1282240"
  },
  {
    "text": "Docker desktop UI um we can see that unstructured is running so now now if we",
    "start": "1282240",
    "end": "1288720"
  },
  {
    "text": "rerun this um and we hope and pray um okay after right before",
    "start": "1288720",
    "end": "1297520"
  },
  {
    "text": "load this should take a second just because I know that this is an",
    "start": "1297520",
    "end": "1303279"
  },
  {
    "text": "instant um and I will we will come back uh when this completes all right and",
    "start": "1303279",
    "end": "1308520"
  },
  {
    "text": "we're back that did take a while um but we can see that after3 seconds um it",
    "start": "1308520",
    "end": "1313679"
  },
  {
    "text": "generated a bunch of documents um and we got 199 of them which seems about right",
    "start": "1313679",
    "end": "1319200"
  },
  {
    "text": "for this size and um for 18 pages so if we quickly look through here we can see",
    "start": "1319200",
    "end": "1325120"
  },
  {
    "text": "that um for example this one uh it's the page content is this snippet and the",
    "start": "1325120",
    "end": "1331240"
  },
  {
    "text": "categories narrative text this is kind of what we care about um the category parent ID is a title acknowledgements",
    "start": "1331240",
    "end": "1338440"
  },
  {
    "text": "which makes sense um so you can see that unstructured is you know going in looking this PDF and they're not just splitting it by text size or you know by",
    "start": "1338440",
    "end": "1345600"
  },
  {
    "text": "page but they're actually looking at the elements of the PDF and chunking it that way um this will be helpful when we actually embed our documents uh the next",
    "start": "1345600",
    "end": "1353159"
  },
  {
    "text": "step is going to be actually generating the notes based on this text um so let's",
    "start": "1353159",
    "end": "1359520"
  },
  {
    "text": "create a new function we'll call it generate notes async function generate",
    "start": "1359520",
    "end": "1366200"
  },
  {
    "text": "notes and this is going to take in that PDF buffer or sorry it's going to take in",
    "start": "1366200",
    "end": "1371760"
  },
  {
    "text": "our documents documents array of documents and the",
    "start": "1371760",
    "end": "1378919"
  },
  {
    "text": "response is going to be a string um actually no uh we'll probably",
    "start": "1378919",
    "end": "1384080"
  },
  {
    "text": "want to have this be an open ey function call uh which means we're going to have a a structure response and we'll write",
    "start": "1384080",
    "end": "1390880"
  },
  {
    "text": "that type a little later um so the first step these documents we can't actually pass them to open AI so we got to",
    "start": "1390880",
    "end": "1396960"
  },
  {
    "text": "convert them to a string but luckily open AI has or it's not open AI Lang",
    "start": "1396960",
    "end": "1402240"
  },
  {
    "text": "chain has a nice helper function it's called format documents as string um and a essentially that is not",
    "start": "1402240",
    "end": "1409720"
  },
  {
    "text": "the right path uh it's from utils documents",
    "start": "1409720",
    "end": "1416600"
  },
  {
    "text": "util document um and essentially what this does is it allows us to be able to",
    "start": "1418200",
    "end": "1425840"
  },
  {
    "text": "okay so cons documents as string equals this and then we can just",
    "start": "1425840",
    "end": "1432440"
  },
  {
    "text": "pass in our array of documents um and this document type contains this field called page content um if we look at our",
    "start": "1432440",
    "end": "1438720"
  },
  {
    "text": "log we can see that page content contains the content that we want so this format as documents format",
    "start": "1438720",
    "end": "1444840"
  },
  {
    "text": "documents as string function essentially just Maps over documents and it joins them all and um joins them with a new",
    "start": "1444840",
    "end": "1451240"
  },
  {
    "text": "line and returns a string um and the next step so once we do this we're going to have all of our you know full PDF as",
    "start": "1451240",
    "end": "1457880"
  },
  {
    "text": "a text um and then we're going to want to Define our model so cons model equals",
    "start": "1457880",
    "end": "1462960"
  },
  {
    "text": "new chat open AI open AI",
    "start": "1462960",
    "end": "1468640"
  },
  {
    "text": "okay um and let's import that from Lang chain okay and we can't use the default",
    "start": "1468640",
    "end": "1475320"
  },
  {
    "text": "openi model from Lang chain because model name because we want to make sure we're getting that that new 120k context",
    "start": "1475320",
    "end": "1483440"
  },
  {
    "text": "so it's going to be gp4 preview 1106 or gp4 1106 preview",
    "start": "1483440",
    "end": "1489120"
  },
  {
    "text": "gp4 1106 D preview um and this is not going to be the vision model that would uh we",
    "start": "1489120",
    "end": "1496520"
  },
  {
    "text": "need to specify vision but it is going to be gbd4 turbo it's going to have a big context and it's going to be their",
    "start": "1496520",
    "end": "1502279"
  },
  {
    "text": "quickest and smartest model um and then we're going to want the temperature to be",
    "start": "1502279",
    "end": "1507880"
  },
  {
    "text": "0.0 we don't really want gbt you know being creative we want it to like look",
    "start": "1507880",
    "end": "1513360"
  },
  {
    "text": "at the documents that we gave it and uh take notes on that um and then next",
    "start": "1513360",
    "end": "1519360"
  },
  {
    "text": "we're going to want to Define um we're going to want to attach our function to it so we'll make a new function called",
    "start": "1519360",
    "end": "1524600"
  },
  {
    "text": "const model with tool equals model. bind um and this",
    "start": "1524600",
    "end": "1532080"
  },
  {
    "text": "is a method that uh that our our you know add link chain we have this concept called runnables um and you can bind",
    "start": "1532080",
    "end": "1539559"
  },
  {
    "text": "certain things runnables so here we can bind a list of tools right now we",
    "start": "1539559",
    "end": "1544799"
  },
  {
    "text": "haven't defined our tools we'll give it an empty array um but once we Define our tools we'll pass in our tool there with the opening ey spec um and that uh you",
    "start": "1544799",
    "end": "1553080"
  },
  {
    "text": "know gives our model access to use or to respond in a way which which we can then use that tool",
    "start": "1553080",
    "end": "1558919"
  },
  {
    "text": "um and for this tool it's you know kind of a complex schema so I'm not going to",
    "start": "1558919",
    "end": "1564240"
  },
  {
    "text": "type it all out I have it here I can copy paste uh but we're going to want to put this into an extra and we'll call it a prompts",
    "start": "1564240",
    "end": "1570720"
  },
  {
    "text": "file so we create a new prompts file and then we copy and paste this in and",
    "start": "1570720",
    "end": "1576039"
  },
  {
    "text": "to go over what this is doing let's import this type okay so essentially what this is",
    "start": "1576039",
    "end": "1582320"
  },
  {
    "text": "doing is is defining a new client or chat completion tool as the type it's G to be a function and then the function",
    "start": "1582320",
    "end": "1588279"
  },
  {
    "text": "is going to have a name of format notes small description format the notes response object and the different",
    "start": "1588279",
    "end": "1594279"
  },
  {
    "text": "properties are going to be one array um with the with the key notes and then inside that array we're going to have",
    "start": "1594279",
    "end": "1601520"
  },
  {
    "text": "properties of note which is the actual note that it took and the page number Um",
    "start": "1601520",
    "end": "1606679"
  },
  {
    "text": "this can be the page number that uh the note came from um and this is going to be you know required uh because they're",
    "start": "1606679",
    "end": "1614240"
  },
  {
    "text": "both inside of notes which we defined as being required um so using this we can",
    "start": "1614240",
    "end": "1619399"
  },
  {
    "text": "then import it and pass it through so now we have our model with a tool bound to it and as",
    "start": "1619399",
    "end": "1625919"
  },
  {
    "text": "we can see it's also a runnable now um and because it's a runnable we can define a chain uh using the runnable",
    "start": "1625919",
    "end": "1632640"
  },
  {
    "text": "pipe method so const chain equals um oh",
    "start": "1632640",
    "end": "1639399"
  },
  {
    "text": "first we need to actually Define our prompt um and this is also going to be kind of long so I'm going to copy and paste it but we can go over what it's",
    "start": "1639399",
    "end": "1646320"
  },
  {
    "text": "doing uh so it's our not prompt we're going to wrap it in a chat prompt",
    "start": "1646320",
    "end": "1651440"
  },
  {
    "text": "template which is going to give it that chat prompt template type um which will allow us to pipe it through so our note",
    "start": "1651440",
    "end": "1657000"
  },
  {
    "text": "prompt let's import it import it and then we're going to",
    "start": "1657000",
    "end": "1662640"
  },
  {
    "text": "pipe that to our model um and then after this you will pipe in an output parser but that's not defined yet uh so",
    "start": "1662640",
    "end": "1669120"
  },
  {
    "text": "essentially what this is doing is they taking our prompt um when we call invoke on our chain so const response equals",
    "start": "1669120",
    "end": "1676159"
  },
  {
    "text": "weight chain. invoke um and then we're going to pass",
    "start": "1676159",
    "end": "1681279"
  },
  {
    "text": "in arguments here um and invoke is essentially going to pass these arguments to our prompt in our prompt",
    "start": "1681279",
    "end": "1688000"
  },
  {
    "text": "we've defined one input argument as the paper um and that's going to format this",
    "start": "1688000",
    "end": "1694360"
  },
  {
    "text": "prompt by actually putting the contents of what we pass in through to invoke in here and then it's going to pipe that",
    "start": "1694360",
    "end": "1701120"
  },
  {
    "text": "stringified string formatted prompt to our model model will call we'll have a",
    "start": "1701120",
    "end": "1707240"
  },
  {
    "text": "vote called on as well because model is also runnable um and then the response from",
    "start": "1707240",
    "end": "1713600"
  },
  {
    "text": "our model will eventually get piped to our output parser when we Define that and then after all that it'll get",
    "start": "1713600",
    "end": "1719559"
  },
  {
    "text": "returned to our response variable uh let's quickly go over what our prompt is",
    "start": "1719559",
    "end": "1724919"
  },
  {
    "text": "um and this took me a while to kind of get perfect so there are a few important steps or pieces uh I originally started",
    "start": "1724919",
    "end": "1731880"
  },
  {
    "text": "and I was you know saying what what most people say when they try and summarize something which is you know saying write a summary on of this",
    "start": "1731880",
    "end": "1737919"
  },
  {
    "text": "um but I found that it it didn't give great outputs if you say write a summary because a summary you know like you",
    "start": "1737919",
    "end": "1745720"
  },
  {
    "text": "wouldn't you wouldn't be reading a paper and you want to summarize it you want to get key details from that paper so if",
    "start": "1745720",
    "end": "1750840"
  },
  {
    "text": "you summarize and then it says you know the paper did this but it wouldn't give me details so when I changed it to say",
    "start": "1750840",
    "end": "1756240"
  },
  {
    "text": "take notes then it you know it's replicating what it sees on the internet more which is you know notes on papers",
    "start": "1756240",
    "end": "1762320"
  },
  {
    "text": "or notes on XYZ and and they're they're more detailed and they contain more you know from that uh paper so take notes of",
    "start": "1762320",
    "end": "1771000"
  },
  {
    "text": "fall scientific paper this is a technical paper uh outlin a computer science technique if you want to use",
    "start": "1771000",
    "end": "1776799"
  },
  {
    "text": "this uh chain for something else you know you obviously got to go refactor this prompt and then we say the goal is",
    "start": "1776799",
    "end": "1782640"
  },
  {
    "text": "to be able to create a complete understanding of this paper without reading or after reading all the notes um and then we give it some rules so",
    "start": "1782640",
    "end": "1788279"
  },
  {
    "text": "include specific quotes and details inside your notes respond with as many notes as it might take to cover the entire paper go into as much detail as",
    "start": "1788279",
    "end": "1794960"
  },
  {
    "text": "you can while keeping each note on a very specific part of the paper um these are all important you know we don't want",
    "start": "1794960",
    "end": "1800519"
  },
  {
    "text": "it to take like two notes on you know the first part in the end of the paper we want it to you know take notes on the",
    "start": "1800519",
    "end": "1806480"
  },
  {
    "text": "entire paper and we want it to go into detail um we don't really care if these notes are long because they'll still",
    "start": "1806480",
    "end": "1814320"
  },
  {
    "text": "most of the time unless you give it a really short paper then it might give you more notes than the actual length of the paper but if it's a long paper like",
    "start": "1814320",
    "end": "1820039"
  },
  {
    "text": "the one we're demoing which is 18 Pages we want to go into detail because you know it's might only give us five pages",
    "start": "1820039",
    "end": "1825399"
  },
  {
    "text": "total and that's a lot better than reading 18 pages um include notes about the results of any experiments excuse me that the paper",
    "start": "1825399",
    "end": "1832360"
  },
  {
    "text": "describes now this is important because before I had this I you know I tried getting to take notes and it wouldn't",
    "start": "1832360",
    "end": "1838799"
  },
  {
    "text": "always include what the paper's findings were you know it would say okay this is what they're talking about they're",
    "start": "1838799",
    "end": "1843960"
  },
  {
    "text": "referencing these techniques and that's it and you know if you're reading a paper you want to know what what their",
    "start": "1843960",
    "end": "1849760"
  },
  {
    "text": "outcome was um so this very important uh include notes by any steps to reproduce the results of the experiments um I",
    "start": "1849760",
    "end": "1856880"
  },
  {
    "text": "tested on on one paper it was the violation of expectations um with cognitive meta",
    "start": "1856880",
    "end": "1862039"
  },
  {
    "text": "prompting um and essentially that was a a a prompting technique a series of LM",
    "start": "1862039",
    "end": "1867279"
  },
  {
    "text": "calls that um is a you know you're able to use that and get uh better details",
    "start": "1867279",
    "end": "1872880"
  },
  {
    "text": "and notes about um you know certain conversation or or history um and using",
    "start": "1872880",
    "end": "1879880"
  },
  {
    "text": "this line it would actually give you know gbt's notes it would take would be more details and it would be easier to",
    "start": "1879880",
    "end": "1886320"
  },
  {
    "text": "replicate the paper without just having an idea of what they did you know with this we can actually see how to you know",
    "start": "1886320",
    "end": "1891760"
  },
  {
    "text": "reproduce What the paper outlined um and then do not respond with notes like the author discuss how well XYZ Works uh",
    "start": "1891760",
    "end": "1899279"
  },
  {
    "text": "gbd4 and I'm sure many other llms have a tendency to um not really give you",
    "start": "1899279",
    "end": "1904440"
  },
  {
    "text": "details it's kind of what we touched on up here um but instead say this is what they were talking you not say this is",
    "start": "1904440",
    "end": "1910919"
  },
  {
    "text": "what they were talking about but say they spoke about this so we we don't want it to be General we want it to be more fine grain so in instead explain",
    "start": "1910919",
    "end": "1917279"
  },
  {
    "text": "what x Iz is and how it works um respond with the Json array and then we kind of give some hints about",
    "start": "1917279",
    "end": "1923000"
  },
  {
    "text": "the schema we defined up here so Json array two keys um note page numbers",
    "start": "1923000",
    "end": "1929240"
  },
  {
    "text": "that's our note and page numbers um and then you know give it little better",
    "start": "1929240",
    "end": "1935399"
  },
  {
    "text": "description about what each key should be um and then I had this line at the end you can use different you know",
    "start": "1935399",
    "end": "1942240"
  },
  {
    "text": "ending sentences this is just one I read in the paper a while ago which said you know if you if you speak to GPT like a",
    "start": "1942240",
    "end": "1947279"
  },
  {
    "text": "human you tell it doesn't work step by step take a deep breath really slow down and think about it then it does get",
    "start": "1947279",
    "end": "1952519"
  },
  {
    "text": "better results because you know it's mimicking what it's seen online and there's I'm sure there's lots of content online where it's you know humans",
    "start": "1952519",
    "end": "1958960"
  },
  {
    "text": "talking to other humans and they say slow down you really think about this before you finish it so it tends to get better results if you include stuff like",
    "start": "1958960",
    "end": "1965519"
  },
  {
    "text": "that all right so once we Define our notes we've um piped our notes through to our model the last step for the LM",
    "start": "1965519",
    "end": "1972799"
  },
  {
    "text": "call is to Define an output parser um so since we're using Lang chain it's going to return the output from open AI um in",
    "start": "1972799",
    "end": "1980440"
  },
  {
    "text": "a type called a base message chunk and inside of there there are going to be some arguments and from there we can",
    "start": "1980440",
    "end": "1985960"
  },
  {
    "text": "extract our um function call arguments which is essentially what this is it's reading the paper and it's you know",
    "start": "1985960",
    "end": "1991600"
  },
  {
    "text": "saying here's a function I can call by passing in these notes um but they're going to get returned to Strings we got",
    "start": "1991600",
    "end": "1996880"
  },
  {
    "text": "to do a little bit of parsing so let's say const um it's called output parser",
    "start": "1996880",
    "end": "2004039"
  },
  {
    "text": "equals and then output is base message chunk and then from",
    "start": "2004039",
    "end": "2011519"
  },
  {
    "text": "there we're going to Define our schema after this um and yeah we can go and it",
    "start": "2011519",
    "end": "2019320"
  },
  {
    "text": "so uh first we're going to want to make sure that they're actually the you know the model did call tools so const tool",
    "start": "2019320",
    "end": "2026880"
  },
  {
    "text": "calls equals output dot um additional",
    "start": "2026880",
    "end": "2033360"
  },
  {
    "text": "quars do tool calls um and then if this is UN so this",
    "start": "2033360",
    "end": "2039840"
  },
  {
    "text": "can be undefined so if tool calls is false or tool calls. length equal zero",
    "start": "2039840",
    "end": "2048720"
  },
  {
    "text": "we're going to throw because then the model didn't actually work so throw new error no tool calls um but if it did",
    "start": "2048720",
    "end": "2054720"
  },
  {
    "text": "work we can extract everything so we can do const const notes equals and then we can",
    "start": "2054720",
    "end": "2062079"
  },
  {
    "text": "map over our tool calls so map tool call or always called a call call um and then",
    "start": "2062079",
    "end": "2068919"
  },
  {
    "text": "from here we can say const note equals call. function. arguments um and this",
    "start": "2068919",
    "end": "2078560"
  },
  {
    "text": "these are the arguments that this tool called and these will conform to this",
    "start": "2078560",
    "end": "2084280"
  },
  {
    "text": "spec that we listed here so it's going to have a notes object with a note and a page numbers um but this is type string",
    "start": "2084280",
    "end": "2091520"
  },
  {
    "text": "because it's going to return from open AI so we're going to have to parse it with a Jon json.parse",
    "start": "2091520",
    "end": "2098960"
  },
  {
    "text": "um and then we'll actually be able to do that because it's going to be an object",
    "start": "2098960",
    "end": "2105280"
  },
  {
    "text": "with Note nested so then we can just return note um and let's actually go and Define",
    "start": "2105280",
    "end": "2113079"
  },
  {
    "text": "our type so it's going to be type archive paper",
    "start": "2113079",
    "end": "2119599"
  },
  {
    "text": "note and that's going to be node string P page numbers is an array of",
    "start": "2119599",
    "end": "2125200"
  },
  {
    "text": "numbers this looks right right and it's going to be returning an",
    "start": "2125200",
    "end": "2131280"
  },
  {
    "text": "array um so now that we have this it's going to be type any so we can quickly",
    "start": "2132280",
    "end": "2137359"
  },
  {
    "text": "just Define it there and then typescript will agree because it was typed any before then we can return",
    "start": "2137359",
    "end": "2145640"
  },
  {
    "text": "it and once that's done we can export this to use it inside of our",
    "start": "2145640",
    "end": "2153160"
  },
  {
    "text": "main function um and then we can pipe a response from our mod model through to",
    "start": "2153160",
    "end": "2158240"
  },
  {
    "text": "our output parser um and now you can see that our",
    "start": "2158240",
    "end": "2164000"
  },
  {
    "text": "chain is a runnable which takes in any and the response type is an array of our notes so when we actually call invoke",
    "start": "2164000",
    "end": "2171560"
  },
  {
    "text": "and we pass in the paper as documents as string our response is going to be an array of these",
    "start": "2171560",
    "end": "2177960"
  },
  {
    "text": "notes um and for this we can just return our response uh let's also go and Export",
    "start": "2177960",
    "end": "2185160"
  },
  {
    "text": "our type so we can make sure this never changes so it's going to be a promise of an",
    "start": "2185160",
    "end": "2193319"
  },
  {
    "text": "array come on array of archive notes um",
    "start": "2193319",
    "end": "2200079"
  },
  {
    "text": "and let's import this and finally right beneath here we",
    "start": "2200079",
    "end": "2205359"
  },
  {
    "text": "can remove these say const no or actually we'll use those and we'll just say const notes equals weight",
    "start": "2205359",
    "end": "2214920"
  },
  {
    "text": "generate notes pass in our documents um and then we'll just replace this so we",
    "start": "2214920",
    "end": "2220359"
  },
  {
    "text": "can see the notes it took and how many notes it generated and now we can go back to our",
    "start": "2220359",
    "end": "2227319"
  },
  {
    "text": "terminal and if we rerun it'll take a second you know take 130 seconds to",
    "start": "2227319",
    "end": "2232960"
  },
  {
    "text": "generate that and it's actually going to generate the notes and it should log them and the amount of notes it",
    "start": "2232960",
    "end": "2238079"
  },
  {
    "text": "generated all right so our chain finished running um and as we can see it looks like it did not work like the one",
    "start": "2238079",
    "end": "2244599"
  },
  {
    "text": "undefined uh so now we're going to go into Lang Smith and see what actually went",
    "start": "2244599",
    "end": "2251839"
  },
  {
    "text": "wrong um so I have the run here and we can see it was passed",
    "start": "2251839",
    "end": "2257760"
  },
  {
    "text": "in the whole paper went to our prompt",
    "start": "2257760",
    "end": "2263200"
  },
  {
    "text": "template um and this output looks to be about right passed",
    "start": "2263200",
    "end": "2269680"
  },
  {
    "text": "into open AI tool calls function arguments notes is an array and each",
    "start": "2269680",
    "end": "2279400"
  },
  {
    "text": "element has a note so where did this go wrong this gets pass to",
    "start": "2279400",
    "end": "2286200"
  },
  {
    "text": "our this runnable Lambda is our um output parser so we can see we got tool",
    "start": "2286200",
    "end": "2292119"
  },
  {
    "text": "calls function arguments parse that",
    "start": "2292119",
    "end": "2297400"
  },
  {
    "text": "notes and then each note is an element so if we go back to the",
    "start": "2297400",
    "end": "2303000"
  },
  {
    "text": "code um let's go to our function output parser we have the",
    "start": "2303440",
    "end": "2309800"
  },
  {
    "text": "output um looks like it went right to Tool",
    "start": "2309800",
    "end": "2315520"
  },
  {
    "text": "calls so what we should have done I guess is cons tool calls equals output",
    "start": "2315520",
    "end": "2327520"
  },
  {
    "text": "dot that doesn't exist okay so definitely should be this and we",
    "start": "2327680",
    "end": "2335880"
  },
  {
    "text": "called tool calls um and the input was tool calls so I guess let's just try it",
    "start": "2335880",
    "end": "2342000"
  },
  {
    "text": "again but um console log exactly what we're getting past in so",
    "start": "2342000",
    "end": "2347319"
  },
  {
    "text": "console.log output um and to make this development a little bit easier off camera I'm going",
    "start": "2347319",
    "end": "2354359"
  },
  {
    "text": "to stop reading it and parsing it each time because that takes as we saw before about two minutes I'm just going to have",
    "start": "2354359",
    "end": "2360079"
  },
  {
    "text": "it read from an existing PDF we have so I will resume once I've done that all",
    "start": "2360079",
    "end": "2366920"
  },
  {
    "text": "right so came back uh essentially what I did is you know I took all of this stuff",
    "start": "2366920",
    "end": "2372760"
  },
  {
    "text": "we read the documents I then uh wrote a file here um and then when I need it I",
    "start": "2372760",
    "end": "2378839"
  },
  {
    "text": "would read the file uh and send in generate notes and that way we didn't have to worry about actually you know",
    "start": "2378839",
    "end": "2385560"
  },
  {
    "text": "using unstructured every single time that would take a while um and while I did that I called generate notes I then log the output and log tool calls and if",
    "start": "2385560",
    "end": "2393880"
  },
  {
    "text": "we look at the output we see output has additional quars tool calls with an",
    "start": "2393880",
    "end": "2399040"
  },
  {
    "text": "object so we know that that is right output additional quars tool calls and",
    "start": "2399040",
    "end": "2404319"
  },
  {
    "text": "then here we're calling tool calls. map so we get to this first object and then we parse call. function.",
    "start": "2404319",
    "end": "2412880"
  },
  {
    "text": "arguments so call which is this first object. function. arguments um but we're",
    "start": "2412880",
    "end": "2419640"
  },
  {
    "text": "trying to do object destructuring for a note key um as we can see here it's",
    "start": "2419640",
    "end": "2425079"
  },
  {
    "text": "notes so if we swap this out then it actually does work let's rerun it and",
    "start": "2425079",
    "end": "2431920"
  },
  {
    "text": "see what the output is all right so when we change it to notes we can see that it clearly worked so we got our after notes",
    "start": "2431920",
    "end": "2437640"
  },
  {
    "text": "log and we have our array um and it's a 2d array which means that we forgot to",
    "start": "2437640",
    "end": "2444599"
  },
  {
    "text": "call flat on this but we know that'll fix it so we don't need to run it again um in a length of one but it's because",
    "start": "2444599",
    "end": "2451119"
  },
  {
    "text": "you know the array with all the elements are nested um if we look at this the notes are actually pretty high high",
    "start": "2451119",
    "end": "2456440"
  },
  {
    "text": "quality so introduces paper called gorilla um fine-tuning LL based model",
    "start": "2456440",
    "end": "2461599"
  },
  {
    "text": "designed to surpass gbd4 and writing API calls combine with do retriever it adapts to test time um and yeah so we",
    "start": "2461599",
    "end": "2469000"
  },
  {
    "text": "will actually to read these notes um in more detail when we write the front end but now that we know that this is finished and working uh we can go and",
    "start": "2469000",
    "end": "2477319"
  },
  {
    "text": "you know bring this all back we don't really care about this read file anymore",
    "start": "2477319",
    "end": "2482560"
  },
  {
    "text": "swap that out um we can get rid of this Json parse",
    "start": "2482560",
    "end": "2488040"
  },
  {
    "text": "um and then we're done so we're done with this The Next Step we're going to want to save this all to a database",
    "start": "2488040",
    "end": "2494440"
  },
  {
    "text": "we're going to want to save the generated notes and we're also going to want to save um the documents we we wrote for our you know retrieval at the",
    "start": "2494440",
    "end": "2501480"
  },
  {
    "text": "next step um for that we're going to use superbase um so when we come back uh you can you'll be able to find a uh you know",
    "start": "2501480",
    "end": "2508560"
  },
  {
    "text": "a SQL command to run which will write uh two tables it's going to be one for our",
    "start": "2508560",
    "end": "2514599"
  },
  {
    "text": "documents and then one for our notes um and from there we're going to save those notes and documents send them back",
    "start": "2514599",
    "end": "2520280"
  },
  {
    "text": "to the front end uh after we do the super based database we're going to write a small Express API server um and",
    "start": "2520280",
    "end": "2526000"
  },
  {
    "text": "then that way these notes will persist so if you know you're hosting the site and you refresh the page it won't just",
    "start": "2526000",
    "end": "2531880"
  },
  {
    "text": "be in state you can actually go and refetch those notes um also because these API calls are you know they're not",
    "start": "2531880",
    "end": "2538000"
  },
  {
    "text": "expensive but they're not cheap you don't want to be doing them every time you reload the page so it's going to be nice to persist them um and then you can",
    "start": "2538000",
    "end": "2543559"
  },
  {
    "text": "you know reference your your notes of these papers later all right so to set up our database",
    "start": "2543559",
    "end": "2549160"
  },
  {
    "text": "you're going want to go to superbase you can create a project um it's fairly simple they got great instructions on",
    "start": "2549160",
    "end": "2554760"
  },
  {
    "text": "that um and once you've created your project it'll take a few minutes to initialize and when it's done you you'll see this it's been deployed in your own",
    "start": "2554760",
    "end": "2561000"
  },
  {
    "text": "instance um you're going to want to go to the SQL editor tab from here you can go back to the repos readme inside the",
    "start": "2561000",
    "end": "2567599"
  },
  {
    "text": "readme there is um a set of SQL commands which you can copy and paste in um and",
    "start": "2567599",
    "end": "2573960"
  },
  {
    "text": "what these commands are doing is they're creating three database tables and a function uh to start it from the top we",
    "start": "2573960",
    "end": "2580440"
  },
  {
    "text": "see we're creating an extension Vector this Vector allows us to store embeddings in the vector embedding",
    "start": "2580440",
    "end": "2586680"
  },
  {
    "text": "column type um instead of just putting it in like a 2d number array or something else uh it's using PG Vector",
    "start": "2586680",
    "end": "2592880"
  },
  {
    "text": "which is a postgress vector extension uh and then it creates the first paper or the first table archive papers it's got",
    "start": "2592880",
    "end": "2599800"
  },
  {
    "text": "an ID created at with time stamp um and then a column for paper which is the full stringified",
    "start": "2599800",
    "end": "2606960"
  },
  {
    "text": "PDF uh archive URL which is the URL to the paper notes which are the notes we've generated in our archive notes",
    "start": "2606960",
    "end": "2613599"
  },
  {
    "text": "papers type and the name which is the name of the paper that the User submitted the second table is archive",
    "start": "2613599",
    "end": "2619680"
  },
  {
    "text": "embeddings these are actually going to store our paper chunks our embeddings",
    "start": "2619680",
    "end": "2626119"
  },
  {
    "text": "um and allow us any optional metadata which we will use later um and it'll",
    "start": "2626119",
    "end": "2631200"
  },
  {
    "text": "allow us to query this more efficiently so ID created at content this is very",
    "start": "2631200",
    "end": "2636680"
  },
  {
    "text": "important that you keep these uh column names the same content and embedding",
    "start": "2636680",
    "end": "2641800"
  },
  {
    "text": "because um The Lang chain um C based Spectre store class requires this if we",
    "start": "2641800",
    "end": "2648280"
  },
  {
    "text": "don't want to override it uh so make sure you have content embedding and metadata and the third table is archive",
    "start": "2648280",
    "end": "2654160"
  },
  {
    "text": "question answering these are going to store our questions our answers our context and our follow-up questions for",
    "start": "2654160",
    "end": "2659960"
  },
  {
    "text": "when we eventually do implement the web UI uh and users can ask questions we don't want to just lose those so we'll",
    "start": "2659960",
    "end": "2666000"
  },
  {
    "text": "storm in the database and finally we create this function called match documents this function is what um The",
    "start": "2666000",
    "end": "2672920"
  },
  {
    "text": "Lang chain super base embeddings Vector store class we use to actually perform",
    "start": "2672920",
    "end": "2678400"
  },
  {
    "text": "semantic search on our database it's going to call this match documents function uh and it'll search up um any",
    "start": "2678400",
    "end": "2684880"
  },
  {
    "text": "columns or any rows in our uh archive embeddings table that match um and as",
    "start": "2684880",
    "end": "2690960"
  },
  {
    "text": "you can see we out we are um saving on there here's our",
    "start": "2690960",
    "end": "2696359"
  },
  {
    "text": "embeddings function so if you copy and paste this and you run it you'll see success no rows returned and if you go",
    "start": "2696359",
    "end": "2702400"
  },
  {
    "text": "to our table editor you'll see we have three database tables um you're going to get this warning you're viewing um",
    "start": "2702400",
    "end": "2708880"
  },
  {
    "text": "you're allowing Anonymous access to your table if it's a private app that you're only going to run locally and you're not",
    "start": "2708880",
    "end": "2714440"
  },
  {
    "text": "going to post this anywhere then this is probably fine if you are to go to production or publish your app um to",
    "start": "2714440",
    "end": "2720720"
  },
  {
    "text": "anyone online you're going to want to add rules for this video that's add of the Scopes we're not going to do that we're going to anyone to access um but",
    "start": "2720720",
    "end": "2727839"
  },
  {
    "text": "these definitely are a must if you're going into production once you've generated your",
    "start": "2727839",
    "end": "2732880"
  },
  {
    "text": "super based tables and your project has initialized you're going to want to go into the API package Json and you can",
    "start": "2732880",
    "end": "2739359"
  },
  {
    "text": "see if you're using the template um for my GitHub I have a gen superbase type script and essentially what this is",
    "start": "2739359",
    "end": "2745400"
  },
  {
    "text": "doing is it's creating a file called db. TS inside of a generated directory and",
    "start": "2745400",
    "end": "2751200"
  },
  {
    "text": "then it's running the subbase CLI command subbase gen types typescript schema public pointing it to the file we",
    "start": "2751200",
    "end": "2758119"
  },
  {
    "text": "want to generate in and project ID you're going to replace this with your project ID um this is very simple to",
    "start": "2758119",
    "end": "2764920"
  },
  {
    "text": "access it's in uh the URL of your project so paste that in um and then if",
    "start": "2764920",
    "end": "2771040"
  },
  {
    "text": "we go back to our um terminal we can run yarn build this is going to build the API and the web and in doing so we see",
    "start": "2771040",
    "end": "2778960"
  },
  {
    "text": "that our build Commander API generates our types and this is important because",
    "start": "2778960",
    "end": "2784000"
  },
  {
    "text": "the types it generates um we're going to be able to reference those later when we actually write our",
    "start": "2784000",
    "end": "2789079"
  },
  {
    "text": "database class so we can have typed inputs and outputs um and without this then everything everything would be any",
    "start": "2789079",
    "end": "2795280"
  },
  {
    "text": "typed and we don't really want that so we run yarn build we can see it's building and it built and then if we go",
    "start": "2795280",
    "end": "2802839"
  },
  {
    "text": "and navigate to this file we see it generated all of these nice this nice",
    "start": "2802839",
    "end": "2808559"
  },
  {
    "text": "schema um and later we can go and import database we can pass that in when we're initializing our client and that way",
    "start": "2808559",
    "end": "2814880"
  },
  {
    "text": "superbase has everything nice and typed and we're going to want to export a new class from here essentially what",
    "start": "2814880",
    "end": "2821000"
  },
  {
    "text": "this class is going to handle it's going to handle writing to our database it's going to call handle embedding and writing our embeddings um any you know",
    "start": "2821000",
    "end": "2828079"
  },
  {
    "text": "get requests we want to make um and really everything that involves our database so",
    "start": "2828079",
    "end": "2833599"
  },
  {
    "text": "export class let's call it superbase database um and then we're going to want",
    "start": "2833599",
    "end": "2840720"
  },
  {
    "text": "to have um an initial static method called from we'll call it static from",
    "start": "2840720",
    "end": "2849040"
  },
  {
    "text": "documents so static async from documents um and this will take in",
    "start": "2849040",
    "end": "2856760"
  },
  {
    "text": "an array of documents and it's going to return an instance of our class all right so inside this static um",
    "start": "2856760",
    "end": "2863520"
  },
  {
    "text": "class method we're going to want to perform two checks first um which is getting our environment variables so",
    "start": "2863520",
    "end": "2869599"
  },
  {
    "text": "const uh private key equals process. in do",
    "start": "2869599",
    "end": "2878960"
  },
  {
    "text": "superbase private or you know whatever you defined it as and then we also need the",
    "start": "2879079",
    "end": "2884520"
  },
  {
    "text": "superbase URL or database url const superbase url and I got that right and",
    "start": "2884520",
    "end": "2890200"
  },
  {
    "text": "then we're going to have two checks if they're not there then we're going to want to throw because those are",
    "start": "2890200",
    "end": "2895559"
  },
  {
    "text": "obviously required um in the next step we're going to create a super based client so thank you co-pilot we can",
    "start": "2895559",
    "end": "2902240"
  },
  {
    "text": "import this um and then uh what we did before was when we actually generated",
    "start": "2902240",
    "end": "2907440"
  },
  {
    "text": "this database type it created this called database and we can pass this in as a generic um and that's going to let",
    "start": "2907440",
    "end": "2914640"
  },
  {
    "text": "our client know uh you know what return types uh our you know get requests are",
    "start": "2914640",
    "end": "2920040"
  },
  {
    "text": "going to return um and some other goodies like that and from here we're going to want to in instantiate a vector",
    "start": "2920040",
    "end": "2926559"
  },
  {
    "text": "store and with that we're going to use a l chain so we're do const",
    "start": "2926559",
    "end": "2933920"
  },
  {
    "text": "Vector store equals and then we're going to use this superbase Vector store from Lang chain so",
    "start": "2933920",
    "end": "2940599"
  },
  {
    "text": "await await superbase Vector store um we're",
    "start": "2940599",
    "end": "2945720"
  },
  {
    "text": "going to follow the same you know I guess I copied Lane chains API schema so",
    "start": "2945720",
    "end": "2950760"
  },
  {
    "text": "you know from documents let's make sure this is imported um and this takes in a few arguments so the first step is going",
    "start": "2950760",
    "end": "2957319"
  },
  {
    "text": "to be documents next step is not going to be super base it's going to be our open AI embeddings so new open a I",
    "start": "2957319",
    "end": "2968359"
  },
  {
    "text": "embeddings that's wrong um spelled that wrong open AI",
    "start": "2968359",
    "end": "2975000"
  },
  {
    "text": "embeddings there we go and the final step is going to be our database config so we can pass in our superbase client",
    "start": "2975000",
    "end": "2982079"
  },
  {
    "text": "um it's called client and we'll sign that to superbase and then our table name that we want to actually store the",
    "start": "2982079",
    "end": "2989160"
  },
  {
    "text": "embeddings on which luckily we generated that here so our archive embeddings",
    "start": "2989160",
    "end": "2994760"
  },
  {
    "text": "table and we can import this and then the final step is going to be that function uh we named it match",
    "start": "2994760",
    "end": "3002000"
  },
  {
    "text": "documents and we ran our SQL command and that's how we're actually going to match the documents using this semantic search",
    "start": "3002000",
    "end": "3007440"
  },
  {
    "text": "so query query name",
    "start": "3007440",
    "end": "3013400"
  },
  {
    "text": "match documents uh you could you know Define this as a constant but this is",
    "start": "3013400",
    "end": "3018480"
  },
  {
    "text": "the only place we're going to use it so I don't think it's really necessary um ah this so this is saying",
    "start": "3018480",
    "end": "3025760"
  },
  {
    "text": "um it's not assignable document is not assignable to document and that's because this I guess is an actual you",
    "start": "3025760",
    "end": "3032119"
  },
  {
    "text": "know node type or I guess that's a react type but what we want",
    "start": "3032119",
    "end": "3038319"
  },
  {
    "text": "is the Lang chain type so from",
    "start": "3038319",
    "end": "3044760"
  },
  {
    "text": "Lang chain doent um and then this is no longer going to throw um and in order to",
    "start": "3044760",
    "end": "3052720"
  },
  {
    "text": "this is also wrong because we wanted to do uh we want to be able to have access to our super based client and our Vector",
    "start": "3052720",
    "end": "3058799"
  },
  {
    "text": "store and other methods so we're going to Define our Vector store it's going to be an instance of super based Vector",
    "start": "3058799",
    "end": "3065200"
  },
  {
    "text": "store and then our super based client we will just name it client um it's going",
    "start": "3065200",
    "end": "3072079"
  },
  {
    "text": "to be an instance of or we'll just copy The Source superbase",
    "start": "3072079",
    "end": "3077520"
  },
  {
    "text": "client um which we can import and then we're defining our database type our you know database",
    "start": "3077520",
    "end": "3084160"
  },
  {
    "text": "schema public um I even really care about that so then we need our",
    "start": "3084160",
    "end": "3089480"
  },
  {
    "text": "Constructor to actually assign these class properties so Constructor",
    "start": "3089480",
    "end": "3095720"
  },
  {
    "text": "um uh we need to take in two inputs which is going to be client and that's the same type as that",
    "start": "3095720",
    "end": "3103480"
  },
  {
    "text": "and Vector store um and then there you go thank you copilot it's going to assign our class",
    "start": "3103480",
    "end": "3109480"
  },
  {
    "text": "properties from the inputs and finally we can return a new this",
    "start": "3109480",
    "end": "3116680"
  },
  {
    "text": "um and pass those in and now this is all happy so now when we actually want to instan a new Vector store uh we'll call",
    "start": "3116680",
    "end": "3124119"
  },
  {
    "text": "Bas Vector store. from documents we'll pass in our documents and it'll return a new instance of the class and later on",
    "start": "3124119",
    "end": "3130119"
  },
  {
    "text": "we will write some methods for you know reading um from our table writing to our table adding embeddings retrieving",
    "start": "3130119",
    "end": "3136400"
  },
  {
    "text": "embeddings and so forth all right so the first method we want to add um is for",
    "start": "3136400",
    "end": "3141559"
  },
  {
    "text": "adding our paper to the database so we'll Define a new async method we'll call it",
    "start": "3141559",
    "end": "3146760"
  },
  {
    "text": "add paper um and this is going to take a few arguments it's going to take the paper URL it's going to take the name of",
    "start": "3146760",
    "end": "3153440"
  },
  {
    "text": "the paper it's going to take the full paper text it's going to take our notes and that's it so let's add these types",
    "start": "3153440",
    "end": "3161200"
  },
  {
    "text": "May copile will get it for us let's see what it recommended okay so it's recommended paper URL string name string",
    "start": "3161200",
    "end": "3167319"
  },
  {
    "text": "paper string and notes is string that's almost right we're going to have to replace that with our archive notes uh",
    "start": "3167319",
    "end": "3172839"
  },
  {
    "text": "data type and then it's going to try and call this. client from archive papers",
    "start": "3172839",
    "end": "3178079"
  },
  {
    "text": "guess that correctly but we're going to have to or we will reassign that to um use our constant and then it's going to",
    "start": "3178079",
    "end": "3184160"
  },
  {
    "text": "call insert um we're not going to use this array we're just going to pass we're going to pass in this object uh we",
    "start": "3184160",
    "end": "3190559"
  },
  {
    "text": "don't need to sign an array or an ID um yeah so this is mostly right we got to do a little bit of clean up so this is",
    "start": "3190559",
    "end": "3196319"
  },
  {
    "text": "going to be archive paper notes uh we only need error or I guess we'll get",
    "start": "3196319",
    "end": "3202319"
  },
  {
    "text": "data for now just to make sure our insertion actually worked um let's reassign this to",
    "start": "3202319",
    "end": "3208559"
  },
  {
    "text": "be archive papers table thank you uh we",
    "start": "3208559",
    "end": "3213760"
  },
  {
    "text": "don't need to pass it in as an array uh we don't want to be assigning our ID because that was autogenerated as",
    "start": "3213760",
    "end": "3220280"
  },
  {
    "text": "we saw in the SQL command so paper URL name paper notes um and then we're going",
    "start": "3220280",
    "end": "3225960"
  },
  {
    "text": "to call Select which will actually populate this um this this uh this data",
    "start": "3225960",
    "end": "3232440"
  },
  {
    "text": "object and that way we can you know verify that our data was generated so if we go",
    "start": "3232440",
    "end": "3238880"
  },
  {
    "text": "back to our index file and at the very bottom here we",
    "start": "3238880",
    "end": "3245480"
  },
  {
    "text": "instantiate our database so let's say const database equals weight let's",
    "start": "3245480",
    "end": "3252400"
  },
  {
    "text": "import this and then from documents uh one thing which you'll probably want to",
    "start": "3252400",
    "end": "3257640"
  },
  {
    "text": "do later is add a check which says which which looks up this paper URL in the database and it finds it um you know",
    "start": "3257640",
    "end": "3264480"
  },
  {
    "text": "it's or you're going to we'll add another method that will allow you to um instantiate your database from an",
    "start": "3264480",
    "end": "3270520"
  },
  {
    "text": "existing index you don't have to you know do all this every time um but for this first time it's got to be from",
    "start": "3270520",
    "end": "3276240"
  },
  {
    "text": "documents um and you you know you're probably going to want to add a check saying if this paper exists don't perform all these computations that's",
    "start": "3276240",
    "end": "3282200"
  },
  {
    "text": "going be too expensive but for now it obviously doesn't exist yet nothing's a database um and we can",
    "start": "3282200",
    "end": "3288440"
  },
  {
    "text": "call um await database. addp paper got that right um and then we can pass in",
    "start": "3288440",
    "end": "3295119"
  },
  {
    "text": "our paper URL our name our paper and our documents um let's format this format",
    "start": "3295119",
    "end": "3302920"
  },
  {
    "text": "documents as string just to satisfy these types and then we're done so we",
    "start": "3302920",
    "end": "3310319"
  },
  {
    "text": "should be able to run this um and then let's not return it we don't need to do",
    "start": "3310319",
    "end": "3315559"
  },
  {
    "text": "that we can just console log data and that should allow us to",
    "start": "3315559",
    "end": "3322319"
  },
  {
    "text": "verify that our paper was saved um so we're going to want to get rid of this just for this test case we don't need to",
    "start": "3322319",
    "end": "3330079"
  },
  {
    "text": "convert uh we are going to want to generate notes but for that we will just read this same document file so we're",
    "start": "3330079",
    "end": "3337760"
  },
  {
    "text": "going to say const docs equals weight read",
    "start": "3337760",
    "end": "3343039"
  },
  {
    "text": "file close PDF document.",
    "start": "3343039",
    "end": "3348520"
  },
  {
    "text": "Json let's add that type df8 and then we're going to want to parse these so documents Json parse generate our notes",
    "start": "3348520",
    "end": "3357079"
  },
  {
    "text": "um and then we're going to instantiate our database and add our paper with um all of this so if we go back to our",
    "start": "3357079",
    "end": "3365760"
  },
  {
    "text": "command line let's make sure we're not missing anything first looks good and we run",
    "start": "3365760",
    "end": "3373760"
  },
  {
    "text": "this then by the time this finishes we should have all of our or our first",
    "start": "3373760",
    "end": "3379640"
  },
  {
    "text": "table row inserted um and from there we'll be able to retrieve you return and",
    "start": "3379640",
    "end": "3385000"
  },
  {
    "text": "assist our generated data okay so while that ran I realized I made one mistake um and I tried to",
    "start": "3385000",
    "end": "3391799"
  },
  {
    "text": "assign paper URL when that was not a column and it needs to be archived paper URL so I swapped that um it worked saved",
    "start": "3391799",
    "end": "3399319"
  },
  {
    "text": "and we can see we've saved all these notes notes saved beautifully um and",
    "start": "3399319",
    "end": "3404400"
  },
  {
    "text": "then the next step we're going to actually want to add our embeddings so let's go back here um we can copy this",
    "start": "3404400",
    "end": "3411559"
  },
  {
    "text": "because we're going to want to wrap into promise.all as they don't rely each each other so we'll say",
    "start": "3411559",
    "end": "3417000"
  },
  {
    "text": "await um promise all do an array we'll do this",
    "start": "3417000",
    "end": "3422440"
  },
  {
    "text": "first one and then we can call await database. Vector store. add",
    "start": "3422440",
    "end": "3430760"
  },
  {
    "text": "documents um and this is a method provided by langing Chain where we can pass our documents some options if we",
    "start": "3430760",
    "end": "3436880"
  },
  {
    "text": "want to do that and it will embed using the opening I embeddings we passed in",
    "start": "3436880",
    "end": "3441920"
  },
  {
    "text": "here and then it'll actually insert these table these these um uh these uh",
    "start": "3441920",
    "end": "3447839"
  },
  {
    "text": "the the the embeddings and the the content into our database uh so once we call that we promise. allet we don't",
    "start": "3447839",
    "end": "3455559"
  },
  {
    "text": "need these awaits um and then this method will be finished and we can",
    "start": "3455559",
    "end": "3461680"
  },
  {
    "text": "return the notes that we've generated um and when we set up our Express server we",
    "start": "3461680",
    "end": "3466960"
  },
  {
    "text": "will be able to call all of this it'll you know read our paper paret our notes or our documents",
    "start": "3466960",
    "end": "3474280"
  },
  {
    "text": "uh generate notes save everything to the database and send back our notes that we can then go using the",
    "start": "3474280",
    "end": "3479720"
  },
  {
    "text": "client all right sorry about that my recording was just interrupted so it's a few hours later um but now that we've um",
    "start": "3479720",
    "end": "3488200"
  },
  {
    "text": "implemented our our main function um we can go ahead and write",
    "start": "3488200",
    "end": "3494559"
  },
  {
    "text": "our server. TS file for our Express server so create a new file server. TS",
    "start": "3494559",
    "end": "3500400"
  },
  {
    "text": "and we're going to create a function we'll call it main so function Main takes no arguments um and we're going to",
    "start": "3500400",
    "end": "3508039"
  },
  {
    "text": "also import Express from Express um and do a couple things so first we're going to",
    "start": "3508039",
    "end": "3514400"
  },
  {
    "text": "get our app variable so const app equals Express uh this sounds good um we also",
    "start": "3514400",
    "end": "3521880"
  },
  {
    "text": "want to Define our Port so const Port equals",
    "start": "3521880",
    "end": "3527240"
  },
  {
    "text": "process. port or 3,000 um actually we're going to make this 8,000 because 3,000",
    "start": "3527240",
    "end": "3533680"
  },
  {
    "text": "will conflict with our our front end um for this index route we're going to",
    "start": "3533680",
    "end": "3541000"
  },
  {
    "text": "make this a health check so add a comment we'll say health check with a space um and",
    "start": "3541000",
    "end": "3548640"
  },
  {
    "text": "this is just going to response. send 200 or response. status 200 send",
    "start": "3548640",
    "end": "3558319"
  },
  {
    "text": "Okay um and then app. listen at our port we should get listing on Port",
    "start": "3558319",
    "end": "3566119"
  },
  {
    "text": "3000 when we start so let's go to our package Json and we're going to update our start um script to start server. TS",
    "start": "3566119",
    "end": "3577319"
  },
  {
    "text": "now if we run yarn start uh it did not work which is not",
    "start": "3577319",
    "end": "3582400"
  },
  {
    "text": "what we want and that is that makes sense it's because forgot to run our",
    "start": "3582400",
    "end": "3588200"
  },
  {
    "text": "function so if we started now we see listening on Port 3,000 um which also",
    "start": "3588200",
    "end": "3593720"
  },
  {
    "text": "should be port so Port um and let's start change this to",
    "start": "3593720",
    "end": "3601400"
  },
  {
    "text": "template string boom perfect uh now we can define a route uh we're going to make it a post",
    "start": "3601400",
    "end": "3608920"
  },
  {
    "text": "endpoint post and it's going to be we'll just call it",
    "start": "3608920",
    "end": "3615680"
  },
  {
    "text": "take take notes U this is not going to be health check we're going to want to extract",
    "start": "3615680",
    "end": "3622400"
  },
  {
    "text": "some data from the request so",
    "start": "3622400",
    "end": "3626558"
  },
  {
    "text": "const um what do we want we want the paper URL so paper URL name and pages to",
    "start": "3628200",
    "end": "3633680"
  },
  {
    "text": "delete from request body that looks like exactly what we want make sure this is exported um we'll rename this to take",
    "start": "3633680",
    "end": "3642720"
  },
  {
    "text": "notes uh so now we can import our take notes we'll call it we'll say const",
    "start": "3642720",
    "end": "3648440"
  },
  {
    "text": "notes equals a wait take notes um and we can import this we also",
    "start": "3648440",
    "end": "3655119"
  },
  {
    "text": "need to make this async and then once this function runs we'll just",
    "start": "3655119",
    "end": "3660720"
  },
  {
    "text": "say return or response. status 200. send notes and return so that this doesn't do",
    "start": "3660720",
    "end": "3668039"
  },
  {
    "text": "anything after that um and now we can open up insomnia or Postman um and you can actually check",
    "start": "3668039",
    "end": "3675400"
  },
  {
    "text": "and validate that your endpoint works all right so open up insomnia or Postman",
    "start": "3675400",
    "end": "3681079"
  },
  {
    "text": "or whatever you use uh we're going to add Local Host 8,000 and then our URL is take notes um and we need to add a Json",
    "start": "3681079",
    "end": "3688400"
  },
  {
    "text": "body that's going to contain a paper URL and we'll add this later it's going to",
    "start": "3688400",
    "end": "3694640"
  },
  {
    "text": "contain a name add this later and uh we are not",
    "start": "3694640",
    "end": "3700240"
  },
  {
    "text": "going to specify uh pages to delete right now um so let's go back and get",
    "start": "3700240",
    "end": "3706839"
  },
  {
    "text": "our paper URL so archive.org um and we're going to want to put that",
    "start": "3706839",
    "end": "3713640"
  },
  {
    "text": "in there put that in it put the name in run it and make sure it everything works end to end all right so now that we have",
    "start": "3713640",
    "end": "3719640"
  },
  {
    "text": "our paper url url in our uh copy paste we paste it in um I'm just going to go",
    "start": "3719640",
    "end": "3725000"
  },
  {
    "text": "and copy the name of the paper from archive not going to do anything special and we'll send that in there um and when",
    "start": "3725000",
    "end": "3732079"
  },
  {
    "text": "we send this in or when we start our server and then send it",
    "start": "3732079",
    "end": "3738440"
  },
  {
    "text": "in uh it should take us it should air out okay cannot destructure property pay",
    "start": "3738440",
    "end": "3743799"
  },
  {
    "text": "request. body as it is undefined um interesting okay so let's debug this",
    "start": "3743799",
    "end": "3750799"
  },
  {
    "text": "request. body is undefined if we console log",
    "start": "3750799",
    "end": "3755798"
  },
  {
    "text": "request request um we got to restart our",
    "start": "3756839",
    "end": "3761880"
  },
  {
    "text": "server and we send it in then we're going to see did we",
    "start": "3761880",
    "end": "3768640"
  },
  {
    "text": "find archive see if that was found anywhere",
    "start": "3768640",
    "end": "3775160"
  },
  {
    "text": "doesn't look like it nowhere okay so we're not actually",
    "start": "3775160",
    "end": "3781279"
  },
  {
    "text": "passing this in properly which is interesting so all right so we're back um I",
    "start": "3781279",
    "end": "3787920"
  },
  {
    "text": "investigated the error turns out it was um I must have been something with my",
    "start": "3787920",
    "end": "3794160"
  },
  {
    "text": "Postman request because I just created a new request through take notes at it um and it worked did present another error",
    "start": "3794160",
    "end": "3801119"
  },
  {
    "text": "though I had forgotten to pass in the actual PDF URL um so it was trying to",
    "start": "3801119",
    "end": "3806720"
  },
  {
    "text": "save a PDF which was not valid and read it from unstructured um but here you",
    "start": "3806720",
    "end": "3812559"
  },
  {
    "text": "go uh now that we fixed all of that we pass in the proper URL um and make this",
    "start": "3812559",
    "end": "3819520"
  },
  {
    "text": "request we can see we're at PDF um we're going to send it and it's loading and",
    "start": "3819520",
    "end": "3825520"
  },
  {
    "text": "this looks good because it's going to take a while um so yeah I'm going to pause this and when",
    "start": "3825520",
    "end": "3833000"
  },
  {
    "text": "this finishes running we will resume all righty so this took a second but we can",
    "start": "3833000",
    "end": "3838559"
  },
  {
    "text": "see it worked gave us our notes um and I returned them in the format we asked for",
    "start": "3838559",
    "end": "3844039"
  },
  {
    "text": "uh so the next step we're going to want to actually create our question answering um directory and to do that",
    "start": "3844039",
    "end": "3849079"
  },
  {
    "text": "we're going to refact this a little bit so we're going to make a new folder we'll call QA and another folder and we'll call it",
    "start": "3849079",
    "end": "3855920"
  },
  {
    "text": "notes um and then we're going to inside of here make an index.ts and copy over all the contents",
    "start": "3855920",
    "end": "3862720"
  },
  {
    "text": "from here um and then we're going to just drag and",
    "start": "3862720",
    "end": "3868640"
  },
  {
    "text": "drop that in there and this is going to take a second",
    "start": "3868640",
    "end": "3874240"
  },
  {
    "text": "okay um and it should have fixed all of our Imports looks like so uh we can delete",
    "start": "3874240",
    "end": "3882119"
  },
  {
    "text": "all of that too and we got to refactor where that gets that from um and then",
    "start": "3882119",
    "end": "3889359"
  },
  {
    "text": "inside QA we can also create an index.ts file and we're also going to need need",
    "start": "3889359",
    "end": "3896440"
  },
  {
    "text": "a prompt. TS file um so we'll name we we're going to create a function and",
    "start": "3896440",
    "end": "3902039"
  },
  {
    "text": "it's going to have to take in a couple things um the question as a string uh",
    "start": "3902039",
    "end": "3907119"
  },
  {
    "text": "the name of the paper um we're going to use that as metadata when we filter in our database for the",
    "start": "3907119",
    "end": "3913799"
  },
  {
    "text": "embeddings um and yeah I think that should be good for now so",
    "start": "3913799",
    "end": "3921160"
  },
  {
    "text": "async so QA on paper and we're going to take in that question string and name String",
    "start": "3923079",
    "end": "3932920"
  },
  {
    "text": "um and this is going to yeah okay so now we need to make an update to our database right now",
    "start": "3932920",
    "end": "3939520"
  },
  {
    "text": "we only have a from documents method but obviously for um QA we are not going to",
    "start": "3939520",
    "end": "3946520"
  },
  {
    "text": "need to add documents so we're going to want to add a from existing index uh method so",
    "start": "3946520",
    "end": "3953079"
  },
  {
    "text": "from index it's going to take in no arguments",
    "start": "3953079",
    "end": "3958799"
  },
  {
    "text": "perform essentially all the same checks as here but it's going to call the from",
    "start": "3958799",
    "end": "3964799"
  },
  {
    "text": "existing index method here as well and this is only going to take in the embeddings and the DB config so we can",
    "start": "3964799",
    "end": "3972520"
  },
  {
    "text": "swap that out for that and boom now we have our prexisting index now that we have this we can also go and",
    "start": "3972520",
    "end": "3979000"
  },
  {
    "text": "refactor this method um and bump this up",
    "start": "3979000",
    "end": "3985880"
  },
  {
    "text": "here and say from existing index and boom now we aren't embedding",
    "start": "3985880",
    "end": "3993680"
  },
  {
    "text": "our documents and doing the from documents every single time um so we're going to want to copy",
    "start": "3993680",
    "end": "3999160"
  },
  {
    "text": "that over here because we're also going to need this database all right so the first step",
    "start": "3999160",
    "end": "4005839"
  },
  {
    "text": "here obviously we got to import that um and then we're going to want to retrieve our documents so we're going to say",
    "start": "4005839",
    "end": "4011000"
  },
  {
    "text": "const Doc documents equals oh wait database. Vector",
    "start": "4011000",
    "end": "4018160"
  },
  {
    "text": "store. similarity search oops that's not right but similarity",
    "start": "4018160",
    "end": "4025359"
  },
  {
    "text": "search and this is going to take in three arguments so the query K which is the number of documents we want returned",
    "start": "4025359",
    "end": "4032079"
  },
  {
    "text": "and any metadata filtering so obviously question um and then we're going to get",
    "start": "4032079",
    "end": "4038200"
  },
  {
    "text": "five documents uh we'll do more we'll do uh eight documents and this is something where you probably going to want to play",
    "start": "4038200",
    "end": "4044160"
  },
  {
    "text": "around with it um 8 5 to 10 has worked well for me in the past but really really depends on on you know what kind",
    "start": "4044160",
    "end": "4050160"
  },
  {
    "text": "of papers you're you're analyzing and your chunk size and whatnot um and then our metadata is going to be",
    "start": "4050160",
    "end": "4057720"
  },
  {
    "text": "name should just match the name um and this is something we can verify by actually looking at our super base in",
    "start": "4057720",
    "end": "4066119"
  },
  {
    "text": "beddings um and inspecting one of the rows I'm looking at the metadata",
    "start": "4066119",
    "end": "4071359"
  },
  {
    "text": "so if I copy over all of",
    "start": "4071359",
    "end": "4077640"
  },
  {
    "text": "this uh so it actually looks like I made a mistake in the last um the other",
    "start": "4077640",
    "end": "4083960"
  },
  {
    "text": "database step where we're actually inserting these edings we want to add metadata where the name where we're",
    "start": "4083960",
    "end": "4089520"
  },
  {
    "text": "adding the meditated name uh should include the name of the paper that these are submitted um or the paper URL you",
    "start": "4089520",
    "end": "4096560"
  },
  {
    "text": "know it's some sort of identifier so you can reference it later so if we go back",
    "start": "4096560",
    "end": "4102600"
  },
  {
    "text": "here we're want to add documents these already contain our um other metadata so",
    "start": "4102600",
    "end": "4108159"
  },
  {
    "text": "we're going to want to add a loop which is going to say um const new docs equals",
    "start": "4108159",
    "end": "4114679"
  },
  {
    "text": "documents. map doc um and then we're going to just want",
    "start": "4114679",
    "end": "4120359"
  },
  {
    "text": "to return pretty much the entire doc um and",
    "start": "4120359",
    "end": "4126359"
  },
  {
    "text": "then metadata um and we'll use the URL that's probably a little bit more fullprof so doc. metadata um and then",
    "start": "4126359",
    "end": "4135318"
  },
  {
    "text": "URL is going to be paper URL um and this is going to",
    "start": "4135319",
    "end": "4141960"
  },
  {
    "text": "be um let's see uh document but it's an",
    "start": "4141960",
    "end": "4148679"
  },
  {
    "text": "array um and it should be happy with that and then we're going to save these",
    "start": "4148679",
    "end": "4154838"
  },
  {
    "text": "documents um this shouldn't change it's just the page content but this is actually what we care about because now",
    "start": "4154839",
    "end": "4160600"
  },
  {
    "text": "when we go and query it we can use we s that out for the URL so paper URL um and",
    "start": "4160600",
    "end": "4167400"
  },
  {
    "text": "then we can query by that so then this similarity search is only going to perform that",
    "start": "4167400",
    "end": "4173080"
  },
  {
    "text": "search over documents where the metadata has this field and that way we can have",
    "start": "4173080",
    "end": "4178359"
  },
  {
    "text": "tons of different papers indexed um but our similarity search will only be on the relevant documents that we care",
    "start": "4178359",
    "end": "4185359"
  },
  {
    "text": "about all right so the next step we're going to want to actually include all of the notes that GPT took originally in",
    "start": "4185359",
    "end": "4191199"
  },
  {
    "text": "this um API call we're go back to our database and we'll add a new method and we'll call it",
    "start": "4191199",
    "end": "4198159"
  },
  {
    "text": "async get um get",
    "start": "4199679",
    "end": "4204960"
  },
  {
    "text": "paper uh we'll take in the URL that'll be our identifier and it's not going to",
    "start": "4205400",
    "end": "4210679"
  },
  {
    "text": "that we're going to want to return uh database and we can get the type from",
    "start": "4210679",
    "end": "4217239"
  },
  {
    "text": "here so database public tables archive papers row so database",
    "start": "4217239",
    "end": "4225640"
  },
  {
    "text": "was this lower case yes so database",
    "start": "4227199",
    "end": "4233679"
  },
  {
    "text": "public and then tables archive",
    "start": "4233679",
    "end": "4240679"
  },
  {
    "text": "papers finally row and that's going to be our response type so now const data",
    "start": "4240679",
    "end": "4248960"
  },
  {
    "text": "or error equals wait this. client. from archive papers table select",
    "start": "4248960",
    "end": "4256360"
  },
  {
    "text": "equals the archive URL that's exactly what we want we want to check it says if",
    "start": "4256360",
    "end": "4261440"
  },
  {
    "text": "error is true and we'll add a console. error just letting us know this is where it happened so error getting paper from",
    "start": "4261440",
    "end": "4270520"
  },
  {
    "text": "database and then we'll rethrow that error if it's not then we only want one",
    "start": "4270520",
    "end": "4276719"
  },
  {
    "text": "of one of uh the papers in database so if this is true or",
    "start": "4276719",
    "end": "4284440"
  },
  {
    "text": "data is false if it's not then we're going to return data bracket zero um and",
    "start": "4284440",
    "end": "4290760"
  },
  {
    "text": "then we should be able to call this in here and say",
    "start": "4290760",
    "end": "4295880"
  },
  {
    "text": "const notes equals 8 database. getet paper and",
    "start": "4295880",
    "end": "4304280"
  },
  {
    "text": "then paper URL um in these notes as we can see it's at Json schima um but we",
    "start": "4304280",
    "end": "4311159"
  },
  {
    "text": "know that it's going to be our archive notes um and then the next step we're going to want to actually construct our we're",
    "start": "4311159",
    "end": "4318840"
  },
  {
    "text": "going to want to construct our prompt construct our our output parser our tool types and make those requests all right",
    "start": "4318840",
    "end": "4325719"
  },
  {
    "text": "so for our uh tool schema and prompt it's going to be the same deal as before I'm not going want to type this all out we can copy and paste it in but we're",
    "start": "4325719",
    "end": "4331760"
  },
  {
    "text": "going to go over everything uh so we have a chat prompt template like we had before and we have this from opening I",
    "start": "4331760",
    "end": "4337639"
  },
  {
    "text": "to find the type so import that um open a as that from open",
    "start": "4337639",
    "end": "4345840"
  },
  {
    "text": "AI um so what this prompt is doing is we're telling it you know here are the notes you've taken here the relevant",
    "start": "4345840",
    "end": "4352080"
  },
  {
    "text": "documents from marantic search and here's human's question um and we're trying to you know tell this GPT to act",
    "start": "4352080",
    "end": "4357159"
  },
  {
    "text": "like a professor um who knows it stuff and you know can give us better notes because as we know GPD is trained on",
    "start": "4357159",
    "end": "4363760"
  },
  {
    "text": "data it's seen online um and it's likely seen better uh data you know better",
    "start": "4363760",
    "end": "4369120"
  },
  {
    "text": "question answering from these academic settings um and then our tool schema it's going to be an object with",
    "start": "4369120",
    "end": "4376560"
  },
  {
    "text": "the answer and then follow-up questions um and we're also asking gbt to suest followup questions based on the question",
    "start": "4376560",
    "end": "4382760"
  },
  {
    "text": "and answer uh so now if we go back here we're going to want to define a new function",
    "start": "4382760",
    "end": "4389000"
  },
  {
    "text": "async function QA on paper and we'll take the",
    "start": "4389000",
    "end": "4396560"
  },
  {
    "text": "question that's good string uh but we also want the documents",
    "start": "4396560",
    "end": "4404239"
  },
  {
    "text": "array of documents nope we're going to have to add this",
    "start": "4404239",
    "end": "4409639"
  },
  {
    "text": "type from Lang chain as well so import",
    "start": "4409639",
    "end": "4415920"
  },
  {
    "text": "document and that's spelled wrong but we can do this document and then finally we want",
    "start": "4415920",
    "end": "4424040"
  },
  {
    "text": "the notes so it's going to be notes um and we'll type that as the",
    "start": "4424040",
    "end": "4431320"
  },
  {
    "text": "array of archive paper note um and then too Implement for now",
    "start": "4431320",
    "end": "4442080"
  },
  {
    "text": "um and even though this is type Json this should hopefully work and we hopefully don't have to cast it ah we",
    "start": "4442080",
    "end": "4448159"
  },
  {
    "text": "don't okay we know it's archive paper URL so we can just cast it as um unknown",
    "start": "4448159",
    "end": "4453800"
  },
  {
    "text": "as that um and then it's happy with all this so QA and paper uh that's the same",
    "start": "4453800",
    "end": "4459520"
  },
  {
    "text": "name so we will rename this to let's say QA model question answer on",
    "start": "4459520",
    "end": "4466920"
  },
  {
    "text": "model um so now that we have this we need to do a few things we need to convert our documents um into a string",
    "start": "4466920",
    "end": "4475280"
  },
  {
    "text": "we using the same method as we that we used before we need to convert our notes into a string and then pipe through our",
    "start": "4475280",
    "end": "4482600"
  },
  {
    "text": "prompt our chat model and our output parser um which we should do the app",
    "start": "4482600",
    "end": "4487960"
  },
  {
    "text": "parser now um it's pretty much the exact same deal as our um as our parser for",
    "start": "4487960",
    "end": "4493960"
  },
  {
    "text": "taking notes but instead of going in and extracting one more level um for notes",
    "start": "4493960",
    "end": "4502159"
  },
  {
    "text": "we can just return args right away so it's answer followup questions answer",
    "start": "4502159",
    "end": "4507880"
  },
  {
    "text": "followup questions get the tool call error if it's missing map over the tool",
    "start": "4507880",
    "end": "4513199"
  },
  {
    "text": "tool calls parse the arguments because they're string return it flat in case it tried to return multiple arrays um and",
    "start": "4513199",
    "end": "4520719"
  },
  {
    "text": "then return that um and then back here we can say const model equals new chat",
    "start": "4520719",
    "end": "4528800"
  },
  {
    "text": "open AI uh this will be the exact same as before so model name equals GPT for 1106",
    "start": "4528800",
    "end": "4537639"
  },
  {
    "text": "preview and temperature should be set to zero and now if we what is going on now",
    "start": "4537639",
    "end": "4545159"
  },
  {
    "text": "we want to Define our model with chain so con model with tools model. Bine um",
    "start": "4545159",
    "end": "4550800"
  },
  {
    "text": "this is exactly what we want is that the right name",
    "start": "4550800",
    "end": "4555198"
  },
  {
    "text": "almost the right name so we import this and now we can construct our chain so const chain",
    "start": "4557480",
    "end": "4564840"
  },
  {
    "text": "equals um our prompt prompt import",
    "start": "4564840",
    "end": "4571280"
  },
  {
    "text": "that. pipe model with tools. pipe to our output parser which was",
    "start": "4571280",
    "end": "4579199"
  },
  {
    "text": "named answer output parser um and then we can invoke this oh we got to import that um before we",
    "start": "4579199",
    "end": "4587080"
  },
  {
    "text": "invoke that we have to convert our documents to string so const documents as string",
    "start": "4587080",
    "end": "4594080"
  },
  {
    "text": "equals format documents as string from Lan",
    "start": "4594080",
    "end": "4599239"
  },
  {
    "text": "chain pass our documents um notes we const notes as",
    "start": "4599239",
    "end": "4605800"
  },
  {
    "text": "string and we're just going to map over these notes so notes. map note",
    "start": "4605800",
    "end": "4613880"
  },
  {
    "text": "and then note. note and join them with a new line and now we can say cons",
    "start": "4613880",
    "end": "4619679"
  },
  {
    "text": "response equals chain. invoke here's the paper um which is the documents as",
    "start": "4619679",
    "end": "4624920"
  },
  {
    "text": "string here are the notes and here's our question let's verify that's going to work so we want question we want",
    "start": "4624920",
    "end": "4631480"
  },
  {
    "text": "relevant documents not paper and notes so notes notes relevant documents and",
    "start": "4631480",
    "end": "4638199"
  },
  {
    "text": "question um and then we can see this is the right type and we're going to want to go ahead and return",
    "start": "4638199",
    "end": "4644520"
  },
  {
    "text": "this so return response uh now down here why does it",
    "start": "4644520",
    "end": "4650280"
  },
  {
    "text": "not like",
    "start": "4650280",
    "end": "4652719"
  },
  {
    "text": "that Let's ignore that for oh it's because we we renamed the function so QA",
    "start": "4655760",
    "end": "4660960"
  },
  {
    "text": "model um and",
    "start": "4660960",
    "end": "4666080"
  },
  {
    "text": "now return QA model and yeah this is exactly what we want so we can see this return type is that um and now we we can",
    "start": "4666080",
    "end": "4673199"
  },
  {
    "text": "export this to our server and create a new route for it so import QA and paper",
    "start": "4673199",
    "end": "4679080"
  },
  {
    "text": "from QA index.ts",
    "start": "4679080",
    "end": "4684679"
  },
  {
    "text": "um go back here could actually export this and now this is happy and we can",
    "start": "4684679",
    "end": "4691960"
  },
  {
    "text": "create a new post route we'll just name it QA um and then we're going to use",
    "start": "4691960",
    "end": "4698920"
  },
  {
    "text": "this function but we only need the question and the paper URL so keep",
    "start": "4698920",
    "end": "4704639"
  },
  {
    "text": "question Ur paper URL and then question um and remove the",
    "start": "4704639",
    "end": "4712719"
  },
  {
    "text": "others we'll rename this to QA and return that and now if we go back",
    "start": "4712840",
    "end": "4720239"
  },
  {
    "text": "to our server and we restart it and go to insomnia got our paper URL",
    "start": "4720239",
    "end": "4728800"
  },
  {
    "text": "um oh we actually since we changed how we do our metadata we have to go and and",
    "start": "4728800",
    "end": "4734320"
  },
  {
    "text": "reload this so that the metadata is is is what we want and we can actually search for for the semantic",
    "start": "4734320",
    "end": "4740360"
  },
  {
    "text": "search okay so before we actually go and create our express route I realized we forgot one thing const answer and",
    "start": "4740360",
    "end": "4749080"
  },
  {
    "text": "questions equals waight um and then we want to actually save this to our database so we don't lose them uh if the",
    "start": "4749080",
    "end": "4755040"
  },
  {
    "text": "user reloads the page or you know if you lose that state so go back to database and we'll create a new method called",
    "start": "4755040",
    "end": "4760639"
  },
  {
    "text": "async save QA um this going to take in a few things it's going to take in the original question",
    "start": "4760639",
    "end": "4767120"
  },
  {
    "text": "string it's going to take in the answer string going to take in the",
    "start": "4767120",
    "end": "4772760"
  },
  {
    "text": "context used string and it's going to take in the followup",
    "start": "4772760",
    "end": "4777880"
  },
  {
    "text": "questions followup questions which is an array of strings um and this is going to",
    "start": "4777880",
    "end": "4784239"
  },
  {
    "text": "act very simil similar to our ad paper so we can this. client.",
    "start": "4784239",
    "end": "4791840"
  },
  {
    "text": "from archive QA table um and then it's gonna",
    "start": "4791840",
    "end": "4797960"
  },
  {
    "text": "insert not that so our archive QA",
    "start": "4797960",
    "end": "4804159"
  },
  {
    "text": "table has let's make sure we're adding the right types okay so",
    "start": "4804159",
    "end": "4811679"
  },
  {
    "text": "question question answer um context and follow-up",
    "start": "4811679",
    "end": "4819080"
  },
  {
    "text": "questions beautiful um and if this works then it should save our database and we should be able to retrieve it in the",
    "start": "4819080",
    "end": "4824840"
  },
  {
    "text": "future so we go back here and then we say await um",
    "start": "4824840",
    "end": "4830880"
  },
  {
    "text": "[Music] data database. saave QA um and then since",
    "start": "4830880",
    "end": "4838760"
  },
  {
    "text": "this can technically be an array uh we're allowing GPD to return multiple we have to map over it",
    "start": "4838760",
    "end": "4844000"
  },
  {
    "text": "so um map and we can promise. all this as well",
    "start": "4844000",
    "end": "4851719"
  },
  {
    "text": "QA and then await database. saave QA we don't need that await though we can make",
    "start": "4851719",
    "end": "4857639"
  },
  {
    "text": "it in line just like that um and this takes in question answer context",
    "start": "4857639",
    "end": "4863920"
  },
  {
    "text": "followup so question answer is going to be",
    "start": "4863920",
    "end": "4869679"
  },
  {
    "text": "qa. answer um context is going to be our",
    "start": "4869679",
    "end": "4876400"
  },
  {
    "text": "documents so we will do the same documents format as documents of string",
    "start": "4876400",
    "end": "4881880"
  },
  {
    "text": "for the context because that requires documents to be a string and then the final followup questions are qa. followup questions",
    "start": "4881880",
    "end": "4890400"
  },
  {
    "text": "should be happy with that we got to wrap this in a promise.all a wait",
    "start": "4890400",
    "end": "4897440"
  },
  {
    "text": "promise.all and make this a sync um and then our notes are actually get saved",
    "start": "4897440",
    "end": "4904040"
  },
  {
    "text": "and finally we can return them here um and while you're",
    "start": "4904040",
    "end": "4909120"
  },
  {
    "text": "were gone I also cleared out my database to make sure there were no conflicts so let's restart our",
    "start": "4909120",
    "end": "4915400"
  },
  {
    "text": "server let's go back here we're going to want to take notes on this paper send it off when this is done we can then go",
    "start": "4915400",
    "end": "4921920"
  },
  {
    "text": "back and perform QA and we'll ask a good question and see if it's able to give us a uh an interesting response all right",
    "start": "4921920",
    "end": "4928920"
  },
  {
    "text": "so that took a long while but if we go into our embeddings and we inspect one we can see",
    "start": "4928920",
    "end": "4935679"
  },
  {
    "text": "that the URL now contains our archive URL so we can swap that to be QA keep",
    "start": "4935679",
    "end": "4942840"
  },
  {
    "text": "the paper Euro and swap the question to be um how",
    "start": "4942840",
    "end": "4950280"
  },
  {
    "text": "does how does how does",
    "start": "4950280",
    "end": "4956080"
  },
  {
    "text": "the paper manage the as pretty general question um not really",
    "start": "4956080",
    "end": "4963360"
  },
  {
    "text": "expecting something too technical back from this but it's overall it's related to the paper I it should give us",
    "start": "4963360",
    "end": "4968480"
  },
  {
    "text": "something that's okay so if we send that request this will will probably also take many seconds um when he gets back",
    "start": "4968480",
    "end": "4975239"
  },
  {
    "text": "with the answer and the follow questions we'll resume we can we can read over those all right so that was much quicker",
    "start": "4975239",
    "end": "4981280"
  },
  {
    "text": "than the other ones because it's not actually indexing a full you know 18 page paper um so we see the answer is to",
    "start": "4981280",
    "end": "4987159"
  },
  {
    "text": "paper introduces an abex tree sub tree matching technique to manage functional correctness of generated API calls this",
    "start": "4987159",
    "end": "4993920"
  },
  {
    "text": "method involves parceling the generated code into an A and then finding a subre within the as that matches the API call",
    "start": "4993920",
    "end": "4999800"
  },
  {
    "text": "of Interest by doing this the paper can verify the function um equivalence of the API calls ensuring",
    "start": "4999800",
    "end": "5004920"
  },
  {
    "text": "that the generated code is not only syntact syntactically correct but also functionally appropriate for the task at hand and if you've read this paper you",
    "start": "5004920",
    "end": "5011159"
  },
  {
    "text": "do know that that is overall um you know related to what the paper is talking about they're essentially you know how to use llms um to mock API calls and how",
    "start": "5011159",
    "end": "5018880"
  },
  {
    "text": "do you tell that those those are good uh so the followup questions are can you explain more detail how the as sub tree",
    "start": "5018880",
    "end": "5024000"
  },
  {
    "text": "matching technique Works how does the as sub tree matching contribute to reducing hallucinations in language models and",
    "start": "5024000",
    "end": "5030120"
  },
  {
    "text": "what are the limitations of any of using as sub tree matching uh for the evaluate for for evaluating API call correctness um these are all",
    "start": "5030120",
    "end": "5037520"
  },
  {
    "text": "pretty good followup questions that I would be interested to hear the answer from a few of them but in the interest of time um I think we're going to cut it",
    "start": "5037520",
    "end": "5044360"
  },
  {
    "text": "there all right for the client portion of this we're going to use shadon they provide some nice pre-built components",
    "start": "5044360",
    "end": "5049520"
  },
  {
    "text": "for you know our form our button our inputs the other components we'll need to use um you're going to want to find",
    "start": "5049520",
    "end": "5055440"
  },
  {
    "text": "the nextjs section under installation we're going to set this up you don't need to run this command",
    "start": "5055440",
    "end": "5061400"
  },
  {
    "text": "because the monor repo um structure I've provided already did this for the web directory so we can",
    "start": "5061400",
    "end": "5067199"
  },
  {
    "text": "skip right to step two run the CLI want to make sure you're in the web directory",
    "start": "5067199",
    "end": "5072480"
  },
  {
    "text": "and then you can run this command we're going to say yes to typescript default style default our Global CSS file is",
    "start": "5072480",
    "end": "5081600"
  },
  {
    "text": "located in Source SL Styles plural SL",
    "start": "5081600",
    "end": "5088480"
  },
  {
    "text": "globals plural. CSS I we'll use use CSS",
    "start": "5088480",
    "end": "5093560"
  },
  {
    "text": "variables that's good too that's good that's good and we're not using react",
    "start": "5093560",
    "end": "5099800"
  },
  {
    "text": "server components yes and we let install dependencies once",
    "start": "5099800",
    "end": "5105199"
  },
  {
    "text": "we've done that we can go back we've see you can see it installed a few things um",
    "start": "5105199",
    "end": "5110320"
  },
  {
    "text": "it added this utils file components. Json this when we actually install",
    "start": "5110320",
    "end": "5116360"
  },
  {
    "text": "components they'll go here um or the config and the actual components will live here I'm just start we're going to",
    "start": "5116360",
    "end": "5123560"
  },
  {
    "text": "install the form component so find form scroll down and",
    "start": "5123560",
    "end": "5130159"
  },
  {
    "text": "copy this command for the installation go back to your terminal paste that",
    "start": "5130159",
    "end": "5135880"
  },
  {
    "text": "in let it load and what this is going to do it's going to install some dependencies it's going to actually pull",
    "start": "5135880",
    "end": "5141320"
  },
  {
    "text": "in some code that's that will live in here we can see it's already done that and it pulled in the button and label",
    "start": "5141320",
    "end": "5146639"
  },
  {
    "text": "for us as well which is nice cuz we were going to need those um and next we're going to want the collapse",
    "start": "5146639",
    "end": "5153199"
  },
  {
    "text": "component so we can run this command and while we're at it we also know we're going to need the text area component so",
    "start": "5153199",
    "end": "5159239"
  },
  {
    "text": "we'll copy this as well and we can all we can run it in one line so installing",
    "start": "5159239",
    "end": "5164800"
  },
  {
    "text": "collapsable done and text area is done as well if we go back we can see we've",
    "start": "5164800",
    "end": "5170159"
  },
  {
    "text": "collapsible and text area all right so to start developing",
    "start": "5170159",
    "end": "5175960"
  },
  {
    "text": "our web app we're going to want to run yarn Dev just so we can see our changes um as as we update you can navigate to",
    "start": "5175960",
    "end": "5183560"
  },
  {
    "text": "Local Host 3000 and we can see that our page says",
    "start": "5183560",
    "end": "5189440"
  },
  {
    "text": "not implemented which makes sense that's what we have and we're going to start the overall structure of our front end",
    "start": "5189440",
    "end": "5196040"
  },
  {
    "text": "we're going to have two forms one for submitting new papers to get notes taken",
    "start": "5196040",
    "end": "5201679"
  },
  {
    "text": "um to have all their content embedded and a second for asking asking questions and answers over that paper so we're",
    "start": "5201679",
    "end": "5207520"
  },
  {
    "text": "going to want to have two divs um we're going to have them in a row and we're only going to do just desktop styling",
    "start": "5207520",
    "end": "5213239"
  },
  {
    "text": "right now if you want you can update it for mobile later but for now desktop will work and we're going to use tail",
    "start": "5213239",
    "end": "5218480"
  },
  {
    "text": "one so class name equals Flex Flex row",
    "start": "5218480",
    "end": "5224040"
  },
  {
    "text": "and we'll add a gap of five should be good and then inside of here we're going",
    "start": "5224040",
    "end": "5230560"
  },
  {
    "text": "to create two more divs div and this will be",
    "start": "5230560",
    "end": "5239000"
  },
  {
    "text": "our come on this will be our add",
    "start": "5239000",
    "end": "5248000"
  },
  {
    "text": "paper and this will be our QA on paper inside here we're going",
    "start": "5248159",
    "end": "5256280"
  },
  {
    "text": "to have want to have another Flex box but we're going to put everything in the column because it's going to be a form so class name equals Flex Flex call uh",
    "start": "5256280",
    "end": "5265560"
  },
  {
    "text": "and we'll add another gap of two then we also want to have a border on this so",
    "start": "5265560",
    "end": "5271119"
  },
  {
    "text": "border one pixel and we'll give it a background of let's say gray 400 so BG or",
    "start": "5271119",
    "end": "5280440"
  },
  {
    "text": "border Dash gray 400 and we'll give it a slight rounding",
    "start": "5280440",
    "end": "5288199"
  },
  {
    "text": "we'll do medium um and then for our form it would",
    "start": "5288199",
    "end": "5293880"
  },
  {
    "text": "actually be easier if we just go to Shad CN go to their components find the",
    "start": "5293880",
    "end": "5301040"
  },
  {
    "text": "form Comm form and we can just copy what they have in here for the example so",
    "start": "5301040",
    "end": "5308960"
  },
  {
    "text": "form field the form item um or actually we can go down here",
    "start": "5308960",
    "end": "5314960"
  },
  {
    "text": "for a more complete form so let's copy all of",
    "start": "5314960",
    "end": "5320840"
  },
  {
    "text": "this bring it back and we'll paste that inside here can need to add these",
    "start": "5320840",
    "end": "5326840"
  },
  {
    "text": "Imports so add all missing Imports means we have the button from our components",
    "start": "5326840",
    "end": "5332000"
  },
  {
    "text": "all of our forms from our components input do not want it from",
    "start": "5332000",
    "end": "5337400"
  },
  {
    "text": "Post CSS and form from react hook",
    "start": "5337400",
    "end": "5342800"
  },
  {
    "text": "form don't want that from there either so we can swap that out delete these two",
    "start": "5342800",
    "end": "5349400"
  },
  {
    "text": "and then for our input we where is our input oh we never added",
    "start": "5349400",
    "end": "5356040"
  },
  {
    "text": "input all right so we need to install input",
    "start": "5356040",
    "end": "5362440"
  },
  {
    "text": "uh by finding in J CN going back to our terminal let's open up a new window",
    "start": "5362440",
    "end": "5367560"
  },
  {
    "text": "paste it in done um and now if we go and reload our page get vs code's cache",
    "start": "5367560",
    "end": "5373639"
  },
  {
    "text": "updated and try and input this we'll see we have from components next we got to",
    "start": "5373639",
    "end": "5378760"
  },
  {
    "text": "go back to our form and we have need some extra logic around the",
    "start": "5378760",
    "end": "5384960"
  },
  {
    "text": "form so did they install Zod for",
    "start": "5384960",
    "end": "5390040"
  },
  {
    "text": "us Zod Zod yep they did so we need to create a form scha so",
    "start": "5390679",
    "end": "5396679"
  },
  {
    "text": "install star at Zod from Zod we can do",
    "start": "5396679",
    "end": "5402960"
  },
  {
    "text": "that um that'll work and then we need our form schema we will call",
    "start": "5402960",
    "end": "5410199"
  },
  {
    "text": "this submit paper form schema and this is going to have a paper URL which is a",
    "start": "5410199",
    "end": "5420119"
  },
  {
    "text": "string don't need any of that we need a name which is also going to be a string",
    "start": "5420119",
    "end": "5425239"
  },
  {
    "text": "and what's the last one pages to",
    "start": "5425239",
    "end": "5431560"
  },
  {
    "text": "delete um and is this right an array of numbers that's correct and we also need",
    "start": "5431560",
    "end": "5437719"
  },
  {
    "text": "to make this. optional so once we have our schema we",
    "start": "5437719",
    "end": "5442800"
  },
  {
    "text": "go back what's next um we need to Define our form using the use form Hook from",
    "start": "5442800",
    "end": "5448520"
  },
  {
    "text": "react hook form so we can import that come back Define our",
    "start": "5448520",
    "end": "5456440"
  },
  {
    "text": "form go up and we can also call this submit paper",
    "start": "5456440",
    "end": "5462600"
  },
  {
    "text": "form uh and if we swap out our form schema got to add Zod resolver as well",
    "start": "5462600",
    "end": "5469000"
  },
  {
    "text": "is that the right import yes replace our form schema there as",
    "start": "5469000",
    "end": "5474320"
  },
  {
    "text": "well and we're not going to have any default values all right so now we have our form",
    "start": "5474320",
    "end": "5480440"
  },
  {
    "text": "let's swap that out there swap that out swap that out uh we are going to update",
    "start": "5480440",
    "end": "5485920"
  },
  {
    "text": "this to have different form Fields so we're going to have two main form Fields one for the",
    "start": "5485920",
    "end": "5495239"
  },
  {
    "text": "paper URL and we're going to call this paper Ur",
    "start": "5495239",
    "end": "5501520"
  },
  {
    "text": "URL placeholder we can go and actually use the placeholder from the original",
    "start": "5501520",
    "end": "5507360"
  },
  {
    "text": "paper we Ed so archive uh this is it so we'll get the",
    "start": "5507360",
    "end": "5515040"
  },
  {
    "text": "PDF URL and this can be our placeholder and then form",
    "start": "5515040",
    "end": "5521760"
  },
  {
    "text": "description the URL to the PDF paper you",
    "start": "5521760",
    "end": "5527520"
  },
  {
    "text": "want to submit paper URL placeholder description next we're going to do name",
    "start": "5527520",
    "end": "5534560"
  },
  {
    "text": "so we got to make that name change that to name give it a capital and we can",
    "start": "5534560",
    "end": "5541040"
  },
  {
    "text": "also use this as the default name",
    "start": "5541040",
    "end": "5547000"
  },
  {
    "text": "gorilla and description the name of the",
    "start": "5547920",
    "end": "5554000"
  },
  {
    "text": "paper and now if we go back to our server see onmi is not defined that",
    "start": "5554000",
    "end": "5559440"
  },
  {
    "text": "makes sense we need an onmi Handler so we'll just copy this without any functionality yet go up here paste it in",
    "start": "5559440",
    "end": "5568159"
  },
  {
    "text": "and we're going to actually change the name so as we can flip with our other on on submit to",
    "start": "5568159",
    "end": "5574080"
  },
  {
    "text": "on paper submit add in the right form schema and this is going to infer the",
    "start": "5574080",
    "end": "5580400"
  },
  {
    "text": "right type so on paper submit paste that there we can delete though that for now",
    "start": "5580400",
    "end": "5587159"
  },
  {
    "text": "and we'll prefix this with an underscore so we can delete that and now if we go to our page it should have loaded yes um",
    "start": "5587159",
    "end": "5595040"
  },
  {
    "text": "but we don't want this to be all the way to the left and we don't we want some padding around the edges so we'll go",
    "start": "5595040",
    "end": "5600760"
  },
  {
    "text": "back here um let's indent this a little bit I got",
    "start": "5600760",
    "end": "5606480"
  },
  {
    "text": "to do that beautiful one more and we'll add a",
    "start": "5606480",
    "end": "5613119"
  },
  {
    "text": "padding of let's say two how does that look",
    "start": "5613119",
    "end": "5618400"
  },
  {
    "text": "that's pretty good and then here we should do mx- auto and hopefully this",
    "start": "5618400",
    "end": "5623719"
  },
  {
    "text": "brings it to the middle no it didn't um all right we will touch that later for now we're going to",
    "start": "5623719",
    "end": "5631119"
  },
  {
    "text": "want to get the last form field in and the submit and the last is going to be our pages to delete since this is",
    "start": "5631119",
    "end": "5636920"
  },
  {
    "text": "optional we're going to wrap it in a collapsible so we can find collapsable code it out of their",
    "start": "5636920",
    "end": "5644320"
  },
  {
    "text": "example copy that we'll put it beneath our last form field but above the submit",
    "start": "5644320",
    "end": "5652480"
  },
  {
    "text": "fix that to add in our",
    "start": "5652480",
    "end": "5657920"
  },
  {
    "text": "Imports be beautiful collapsible trigger so now if we look here say can I use",
    "start": "5658119",
    "end": "5663560"
  },
  {
    "text": "this in my project um we also want to have here they had this nice little icon",
    "start": "5663560",
    "end": "5671199"
  },
  {
    "text": "so where is their icon we want Chevron up down let's see did they install this for us if we go to package",
    "start": "5671199",
    "end": "5679320"
  },
  {
    "text": "Json search for that yes they did so we can do chevron Chevrons up down plus",
    "start": "5679320",
    "end": "5686159"
  },
  {
    "text": "where is the plus being used looks like",
    "start": "5686159",
    "end": "5692119"
  },
  {
    "text": "all right we'll ignore that um let's import this icon so if we go back up",
    "start": "5692119",
    "end": "5699560"
  },
  {
    "text": "here let's put it there and we can remove them when we don't need them anymore collapsible",
    "start": "5699560",
    "end": "5706719"
  },
  {
    "text": "div they had it saying start three repositories",
    "start": "5706719",
    "end": "5712239"
  },
  {
    "text": "um and then trigger as child a button with this icon so we can paste this in",
    "start": "5712239",
    "end": "5721920"
  },
  {
    "text": "as the trigger like so fix the",
    "start": "5721920",
    "end": "5727520"
  },
  {
    "text": "Imports um we'll call this to span toggle so if we go back here we see now",
    "start": "5727520",
    "end": "5734520"
  },
  {
    "text": "there's just this we want to add some text as well so we'll go P tag and we'll",
    "start": "5734520",
    "end": "5742760"
  },
  {
    "text": "say delete pages question mark all right this formatting is a",
    "start": "5742760",
    "end": "5749560"
  },
  {
    "text": "little bit off so varant ghost width n we don't need that um let's just delete",
    "start": "5749560",
    "end": "5756000"
  },
  {
    "text": "this styling and there we go delete pages and we want to make one change",
    "start": "5756000",
    "end": "5763840"
  },
  {
    "text": "this font light that's better we'll make it normal yeah before was Bold And now when",
    "start": "5764880",
    "end": "5772679"
  },
  {
    "text": "you click this it opens this drop down and instead of having this content right here we can add another form",
    "start": "5772679",
    "end": "5780320"
  },
  {
    "text": "field um and this time it'll be for the pages",
    "start": "5780320",
    "end": "5786360"
  },
  {
    "text": "to delete so pages to",
    "start": "5786360",
    "end": "5792360"
  },
  {
    "text": "delete and then we'll add 10 comma 11",
    "start": "5792360",
    "end": "5797960"
  },
  {
    "text": "comma 12 as the placeholder and then the pages to delete from the paper and",
    "start": "5797960",
    "end": "5807119"
  },
  {
    "text": "if we go back see delete pages open it up and here's our input",
    "start": "5807119",
    "end": "5812600"
  },
  {
    "text": "um and then submit we can go back and read this",
    "start": "5812600",
    "end": "5818599"
  },
  {
    "text": "console.log submit paper U we can remove this underscore as well since we're actually going to be",
    "start": "5819040",
    "end": "5824960"
  },
  {
    "text": "using it now and let's test to make sure this actually",
    "start": "5824960",
    "end": "5831040"
  },
  {
    "text": "works um give this a full width and if we say",
    "start": "5831040",
    "end": "5837000"
  },
  {
    "text": "that that and pages to delete we shouldn't need to have like",
    "start": "5837000",
    "end": "5843960"
  },
  {
    "text": "that so let's see test one we don't need that either why did that delete okay so",
    "start": "5843960",
    "end": "5851360"
  },
  {
    "text": "that deleted because we forgot to change the control update this to be pages to",
    "start": "5851360",
    "end": "5857639"
  },
  {
    "text": "delete and now we can add that and doesn't add anything there and if we hit",
    "start": "5857639",
    "end": "5863080"
  },
  {
    "text": "submit we see it expected it an array and we received a string okay so input",
    "start": "5863080",
    "end": "5870599"
  },
  {
    "text": "placeholder ER onchange event blur number undefined",
    "start": "5870599",
    "end": "5876199"
  },
  {
    "text": "is not assignable to string number okay so what we're going to do instead is change this to be string array um and",
    "start": "5876199",
    "end": "5883920"
  },
  {
    "text": "then inside of our onsubmit we can convert it back to being a number so that array that error went away pages to",
    "start": "5883920",
    "end": "5890800"
  },
  {
    "text": "delete submit come on let the same",
    "start": "5890800",
    "end": "5896599"
  },
  {
    "text": "error submit there we go no more error after I Rel load and we can see it",
    "start": "5896599",
    "end": "5902239"
  },
  {
    "text": "logged our values and then if we want to submit some pages as well expected array receive string",
    "start": "5902239",
    "end": "5909679"
  },
  {
    "text": "um definitely don't want to make our users have to punch in an array so we'll",
    "start": "5909679",
    "end": "5915119"
  },
  {
    "text": "just do some parsing after the fact and if we reload here add in our values",
    "start": "5915119",
    "end": "5920560"
  },
  {
    "text": "again and add in our page to delete and submit we can see we got our paper URL",
    "start": "5920560",
    "end": "5925679"
  },
  {
    "text": "page to delete and it's all nice there all righty so next next what we need to",
    "start": "5925679",
    "end": "5931719"
  },
  {
    "text": "do is add some regex after the fact that will actually verify this is a list of",
    "start": "5931719",
    "end": "5938760"
  },
  {
    "text": "numbers that's comma separated um and it'll convert it into an array of numbers okay so for converting our pages",
    "start": "5938760",
    "end": "5946280"
  },
  {
    "text": "to delete to an array of strings we'll create a little util function we'll name it function process pages to delete give",
    "start": "5946280",
    "end": "5956639"
  },
  {
    "text": "me a string and then con num array equals page is to",
    "start": "5956639",
    "end": "5963400"
  },
  {
    "text": "delete. split map parse in Num that looks",
    "start": "5963400",
    "end": "5968840"
  },
  {
    "text": "beautiful um and this should throw if one of these are not a number we're",
    "start": "5968840",
    "end": "5974800"
  },
  {
    "text": "going to want to trim this as well in CL in case the user submits some extra spaces and then we",
    "start": "5974800",
    "end": "5982920"
  },
  {
    "text": "can return this and if we verify the type signature nice and a number array",
    "start": "5982920",
    "end": "5988520"
  },
  {
    "text": "and let's type this just because we don't want anybody changes after the fact in returning the wrong",
    "start": "5988520",
    "end": "5994320"
  },
  {
    "text": "type so now we can get all of our values in the proper",
    "start": "5994320",
    "end": "5999719"
  },
  {
    "text": "formats and we're also going to want to save the paper and the name or I guess just the paper URL in",
    "start": "5999719",
    "end": "6006679"
  },
  {
    "text": "state um and the name just to display to the user and for when they ask questions we'll actually know what paper they're",
    "start": "6006679",
    "end": "6013360"
  },
  {
    "text": "referencing so const let's see paper data or we'll",
    "start": "6013360",
    "end": "6019719"
  },
  {
    "text": "call it submitted paper data submitted paper",
    "start": "6019719",
    "end": "6024920"
  },
  {
    "text": "data and then change that to be set submit submitted paper data equals State",
    "start": "6024920",
    "end": "6033440"
  },
  {
    "text": "um and we'll type out our archive paper notes or well we'll type out this type",
    "start": "6033440",
    "end": "6039239"
  },
  {
    "text": "and we can make it that type or undefined so type submitted oh actually we can just",
    "start": "6039239",
    "end": "6046639"
  },
  {
    "text": "use this well no that won't work because that's the wrong type so yeah we just make a type so so",
    "start": "6046639",
    "end": "6052040"
  },
  {
    "text": "type submitted paper data equals beautiful exactly what we want",
    "start": "6052040",
    "end": "6059159"
  },
  {
    "text": "and then we can type this to be either this or undefined and we got",
    "start": "6059159",
    "end": "6066400"
  },
  {
    "text": "to add this import as well nice so now once we've submitted we can set our data",
    "start": "6066400",
    "end": "6073880"
  },
  {
    "text": "dot dot dot values and pages to delete can use",
    "start": "6073880",
    "end": "6079400"
  },
  {
    "text": "our function nice so Pages delete is true we're going to process and if not undefined and this will work with our",
    "start": "6079400",
    "end": "6086920"
  },
  {
    "text": "type all right Next Step we're going to want to fetch our data from our API so for now we can write out our fetch",
    "start": "6086920",
    "end": "6093679"
  },
  {
    "text": "request um and our processing and then we want to test it we have to actually to start our API so",
    "start": "6093679",
    "end": "6098760"
  },
  {
    "text": "const response equals fetch API papers um and we're going to rename this",
    "start": "6098760",
    "end": "6105920"
  },
  {
    "text": "to take notes which will match our backend and then method post body",
    "start": "6105920",
    "end": "6112840"
  },
  {
    "text": "stringify our values nice and then we can turn this",
    "start": "6112840",
    "end": "6118639"
  },
  {
    "text": "into async um we're going to want to do a do then rest and if rest. okay is true we",
    "start": "6118639",
    "end": "6130719"
  },
  {
    "text": "can return that and else no we don't need an else just return n so this is",
    "start": "6130719",
    "end": "6138760"
  },
  {
    "text": "either going to be the type or any um and then inside of our API",
    "start": "6138760",
    "end": "6145960"
  },
  {
    "text": "directory we create a new file called take notes. TS um and we can just copy",
    "start": "6145960",
    "end": "6152639"
  },
  {
    "text": "what they have there paste it in uh and change this to make a fetch",
    "start": "6152639",
    "end": "6159199"
  },
  {
    "text": "request to our actual backend so const data equals wait",
    "start": "6159199",
    "end": "6166480"
  },
  {
    "text": "fetch um and then for now we can use Local Host but but if you're in production you're going to want to",
    "start": "6166480",
    "end": "6172159"
  },
  {
    "text": "change this to probably an environment variable which can change between you your local your staging or your",
    "start": "6172159",
    "end": "6177320"
  },
  {
    "text": "production URL so for now we just do const API URL equals HTTP con Local Host",
    "start": "6177320",
    "end": "6188280"
  },
  {
    "text": "ad8 um and it's just slake notes and I want to make sure that's actually what",
    "start": "6188280",
    "end": "6194400"
  },
  {
    "text": "we yes take notes so API URL await fetch the URL",
    "start": "6194400",
    "end": "6201679"
  },
  {
    "text": "and then method post header updation Json body we can use the",
    "start": "6201679",
    "end": "6208080"
  },
  {
    "text": "request do body and we don't need to stringify it again",
    "start": "6208080",
    "end": "6214880"
  },
  {
    "text": "because export default async function we don't need to stringify it again because we are already stringifying it",
    "start": "6214880",
    "end": "6222480"
  },
  {
    "text": "here so data and then we'll do the exact same you know if it's okay null if not",
    "start": "6222480",
    "end": "6230000"
  },
  {
    "text": "um return null and then we can say if data is true return response. status",
    "start": "6230000",
    "end": "6239080"
  },
  {
    "text": "200. Json data and this 200 is what's going to set our okay to be null or",
    "start": "6239080",
    "end": "6244400"
  },
  {
    "text": "sorry our our okay to be truthy or not and then else 400 and we'll just say",
    "start": "6244400",
    "end": "6249800"
  },
  {
    "text": "error for now all right so let's go back to here we can go out we can do yarn start",
    "start": "6249800",
    "end": "6259080"
  },
  {
    "text": "API now our API is started listening on port 8080 and one more thing we can do here",
    "start": "6259599",
    "end": "6265920"
  },
  {
    "text": "we can actually type out the data in our response so we",
    "start": "6265920",
    "end": "6271199"
  },
  {
    "text": "know that this is going to have that response type and we want to",
    "start": "6271199",
    "end": "6277719"
  },
  {
    "text": "just copy and paste that wherever it is delete that if it's not being used",
    "start": "6277719",
    "end": "6285440"
  },
  {
    "text": "here we go archive paper note so we'll just copy this exact same type go here",
    "start": "6285440",
    "end": "6291320"
  },
  {
    "text": "replace that it'll also export from here as well um and now here or we have to",
    "start": "6291320",
    "end": "6296960"
  },
  {
    "text": "count for our error so name and then we'll actually explicitly",
    "start": "6296960",
    "end": "6302639"
  },
  {
    "text": "say it's Error and why don't you like that type error is not assignable to",
    "start": "6302639",
    "end": "6309800"
  },
  {
    "text": "error okay so that's not going to work",
    "start": "6309800",
    "end": "6315870"
  },
  {
    "text": "[Music] um we'll just say or undefined if we get",
    "start": "6315870",
    "end": "6322040"
  },
  {
    "text": "a response status 400 we know that's okay or we know that's an error so now that this is all working like",
    "start": "6322040",
    "end": "6330199"
  },
  {
    "text": "that we can set our response type um to",
    "start": "6330199",
    "end": "6335760"
  },
  {
    "text": "State as well so const we'll call it notes and set notes",
    "start": "6335760",
    "end": "6342040"
  },
  {
    "text": "and then we can use this type as well it's actually not going to be singular",
    "start": "6342040",
    "end": "6347360"
  },
  {
    "text": "instead it's going to be an array as we we can see here so we need to update",
    "start": "6347360",
    "end": "6352880"
  },
  {
    "text": "this to be an array of notes so array archive paper notes or",
    "start": "6352880",
    "end": "6358360"
  },
  {
    "text": "undefined uh go back here we can say an array of archive paper note import it or",
    "start": "6358360",
    "end": "6364960"
  },
  {
    "text": "undefined response and then if response is true",
    "start": "6364960",
    "end": "6371360"
  },
  {
    "text": "con data equals a wait response we don't we need that here so await this response",
    "start": "6371360",
    "end": "6379320"
  },
  {
    "text": "any if response resp is true then set notes response.",
    "start": "6379320",
    "end": "6386199"
  },
  {
    "text": "data and one more time double check beautiful and then else let's just",
    "start": "6386199",
    "end": "6394119"
  },
  {
    "text": "throw so we can see the error throw new error something went wrong taking",
    "start": "6394119",
    "end": "6402199"
  },
  {
    "text": "notes boom uh we should also probably console",
    "start": "6402199",
    "end": "6407520"
  },
  {
    "text": "log this so console.log response.data just cuz we're not actually doing anything with this right now so that's",
    "start": "6407520",
    "end": "6414679"
  },
  {
    "text": "going to make it easier to see if our um API worked so we can go back to",
    "start": "6414679",
    "end": "6421280"
  },
  {
    "text": "here let's copy this paste it in we can copy the name as",
    "start": "6421280",
    "end": "6428880"
  },
  {
    "text": "well paste that in and delete pages we need 10 11 12 is that",
    "start": "6429480",
    "end": "6435280"
  },
  {
    "text": "correct let's see 10 11 12 nice 10 11 12",
    "start": "6435280",
    "end": "6443360"
  },
  {
    "text": "and now if this all works we know that it should take about two to three minutes and that's accounting for",
    "start": "6443360",
    "end": "6450000"
  },
  {
    "text": "unstructured and the open AI response and then we should get a console log with our notes so",
    "start": "6450000",
    "end": "6457560"
  },
  {
    "text": "submit um and boom we already got an air so",
    "start": "6457560",
    "end": "6462599"
  },
  {
    "text": "that does make sense probably was not awaiting uh because that came back so",
    "start": "6462599",
    "end": "6468440"
  },
  {
    "text": "quickly but just to be sure okay so here's a problem in our",
    "start": "6468440",
    "end": "6473679"
  },
  {
    "text": "API uh throw new error exports back to name",
    "start": "6473679",
    "end": "6480119"
  },
  {
    "text": "index okay where is this coming from",
    "start": "6480639",
    "end": "6487599"
  },
  {
    "text": "valid ah so it's in our PDF document parsing um let's verify that our types",
    "start": "6488440",
    "end": "6494400"
  },
  {
    "text": "are all getting set properly so if we go back here and we console log all of",
    "start": "6494400",
    "end": "6502800"
  },
  {
    "text": "this and we got to restart our API for this as",
    "start": "6505080",
    "end": "6510079"
  },
  {
    "text": "well yeah that gave us a nice error okay let's go back we can just",
    "start": "6510239",
    "end": "6518480"
  },
  {
    "text": "reload copy the name we know we're going to have to do 10 11",
    "start": "6518480",
    "end": "6525280"
  },
  {
    "text": "12 and we can copy this name",
    "start": "6525280",
    "end": "6530800"
  },
  {
    "text": "all right and if we submit then we go back here and we see paper URL all",
    "start": "6530800",
    "end": "6537239"
  },
  {
    "text": "righty and this was getting passed in as a string so what we're going to want to do",
    "start": "6537239",
    "end": "6544239"
  },
  {
    "text": "is see is our data actually getting formatted properly this is definitely",
    "start": "6544239",
    "end": "6551480"
  },
  {
    "text": "going to be a number array or undefined uh so we should do here instead is I guess UNP parse our notes",
    "start": "6551480",
    "end": "6562119"
  },
  {
    "text": "so convert pages to delete back to array numbers so",
    "start": "6562840",
    "end": "6572880"
  },
  {
    "text": "cons pages to delete array equals pages to delete and",
    "start": "6572880",
    "end": "6579199"
  },
  {
    "text": "then we can just copy over this exact same code um because we can see from the type",
    "start": "6579199",
    "end": "6585159"
  },
  {
    "text": "that it logged it was just a string as comma separated so if we go back back here and",
    "start": "6585159",
    "end": "6591639"
  },
  {
    "text": "we'll just put this right there whoops copy paste so it's going to be a string",
    "start": "6591639",
    "end": "6599080"
  },
  {
    "text": "we want to return an array of numbers and we'll just wrap this uh we need to do the check so dot or we'll just say if",
    "start": "6599080",
    "end": "6607760"
  },
  {
    "text": "it's truthy then process it and else just do an array uh we can actually just do undefined because it is",
    "start": "6607760",
    "end": "6615119"
  },
  {
    "text": "optional undefined put that in put that through",
    "start": "6615119",
    "end": "6621679"
  },
  {
    "text": "and if we copy this one more time console.log just to verify it's all",
    "start": "6621679",
    "end": "6628239"
  },
  {
    "text": "working restart our API go back to our web reload let's copy",
    "start": "6628239",
    "end": "6635199"
  },
  {
    "text": "the name paste it in do 11 or sorry we can just 10 11 12 copy the URL paste",
    "start": "6635199",
    "end": "6646400"
  },
  {
    "text": "submit and we can see that it logged in Array so while the this loads I'm going to pause the video and when it finish",
    "start": "6646400",
    "end": "6652960"
  },
  {
    "text": "loading and hopefully logs our notes I we'll come back and we'll see what it what it logged all right so we're back",
    "start": "6652960",
    "end": "6659400"
  },
  {
    "text": "our response turned undefined but if we go to the network Tab and inspect it then we can see that our payload was",
    "start": "6659400",
    "end": "6668199"
  },
  {
    "text": "right and our preview was this which means we were trying to parse response.data when data did not in fact",
    "start": "6668199",
    "end": "6674599"
  },
  {
    "text": "exist and response would have done the trick um so if we go and we update our",
    "start": "6674599",
    "end": "6680679"
  },
  {
    "text": "index TSX and just do date response we know",
    "start": "6680679",
    "end": "6686000"
  },
  {
    "text": "that'll work and it will actually solve or save our notes all right so before",
    "start": "6686000",
    "end": "6693880"
  },
  {
    "text": "our notes actually return we can go and we can add a section beneath our two forms or where our two forms will be for",
    "start": "6693880",
    "end": "6700079"
  },
  {
    "text": "displaying our notes so we can say if notes. length or if notes is true",
    "start": "6700079",
    "end": "6708760"
  },
  {
    "text": "notes is true and and notes do length is greater than",
    "start": "6708760",
    "end": "6714199"
  },
  {
    "text": "zero we want to log a div class name Flex call Cap 2 border one pixels that",
    "start": "6714199",
    "end": "6720960"
  },
  {
    "text": "looks good uh we don't need a border for this though um there we go and we'll say h",
    "start": "6720960",
    "end": "6729320"
  },
  {
    "text": "you know H2 notes",
    "start": "6729320",
    "end": "6734440"
  },
  {
    "text": "and div Flex call Gap 2 notes. map see note",
    "start": "6734440",
    "end": "6742760"
  },
  {
    "text": "dot note and to prefix we'll makes this a paragraph paragraph tag",
    "start": "6742760",
    "end": "6750119"
  },
  {
    "text": "instead um and we let's see we'll make this class name",
    "start": "6750119",
    "end": "6756040"
  },
  {
    "text": "equals we default text party medium and yeah actually we don't need any styling for this um but what we are going to",
    "start": "6756040",
    "end": "6762440"
  },
  {
    "text": "want is update this Flex call nope want",
    "start": "6762440",
    "end": "6767639"
  },
  {
    "text": "this to be a row with one",
    "start": "6767639",
    "end": "6772800"
  },
  {
    "text": "Gap and we'll keep the padding um and then here we're going to want to have",
    "start": "6772800",
    "end": "6779320"
  },
  {
    "text": "another paragraph tag but class name text-",
    "start": "6779320",
    "end": "6785440"
  },
  {
    "text": "small and text- gray and let's make it",
    "start": "6785440",
    "end": "6790520"
  },
  {
    "text": "600 to be a little bit in the background and this is going to contain our",
    "start": "6790520",
    "end": "6796960"
  },
  {
    "text": "note. page numbers join comma and we'll wrap this all in an",
    "start": "6796960",
    "end": "6806360"
  },
  {
    "text": "array so people know that there's page numbers um you know what actually I think T was",
    "start": "6806360",
    "end": "6813599"
  },
  {
    "text": "right we do want to have this in a column we'll have this beneath Gap two",
    "start": "6813599",
    "end": "6818719"
  },
  {
    "text": "is probably right as well but what we can do here is actually number our notes",
    "start": "6818719",
    "end": "6824360"
  },
  {
    "text": "so let's do get the index of the array and we'll do index so it'll be you know",
    "start": "6824360",
    "end": "6830719"
  },
  {
    "text": "one it's going to start at zero we got to add one so it'll be you know one then the note two the note and what is it",
    "start": "6830719",
    "end": "6837199"
  },
  {
    "text": "complaining about here we have our opening closing opening",
    "start": "6837199",
    "end": "6843840"
  },
  {
    "text": "closing why aren't you happy div div ah we're missing a closing div okay",
    "start": "6843840",
    "end": "6852000"
  },
  {
    "text": "and that's going to be for this one so div uh and that makes sense we also need",
    "start": "6852000",
    "end": "6858800"
  },
  {
    "text": "a key um and ideally you don't want to be using index as your keys for um arrays",
    "start": "6858800",
    "end": "6867440"
  },
  {
    "text": "or mapping of an arrays and and react you probably want something like an ID so if we what what we should be doing",
    "start": "6867440",
    "end": "6874239"
  },
  {
    "text": "and if you're going to put this in production you should be returning the generated database rows um after you",
    "start": "6874239",
    "end": "6880560"
  },
  {
    "text": "write it so when you when you all right I'll just show you so you take notes you add papers to the database and you",
    "start": "6880560",
    "end": "6886800"
  },
  {
    "text": "should be instead of just returning an error you you should also select them and return the data and return that so",
    "start": "6886800",
    "end": "6893800"
  },
  {
    "text": "then you can return your ID you're created at and the notes and that way",
    "start": "6893800",
    "end": "6899639"
  },
  {
    "text": "you don't have to use an index as a key and you can use the actual ID and if you want to do other things with that data you'll have the ID in the database or",
    "start": "6899639",
    "end": "6907000"
  },
  {
    "text": "you'll have the ID that matches the ID in the database on your client um and it's easier to manipulate and request that data there but for now this will",
    "start": "6907000",
    "end": "6913840"
  },
  {
    "text": "work you know we're only using this locally um and we can save this go back",
    "start": "6913840",
    "end": "6918920"
  },
  {
    "text": "to our front end we there's nothing there cuz we don't have any notes and if we go and do this",
    "start": "6918920",
    "end": "6924159"
  },
  {
    "text": "again and we copy the name done this a million times and 10 11",
    "start": "6924159",
    "end": "6932480"
  },
  {
    "text": "12 make sure our API is running yes submit and in a couple minutes we'll",
    "start": "6932480",
    "end": "6939639"
  },
  {
    "text": "come back we'll see our data get logged and our notes logged out there all right",
    "start": "6939639",
    "end": "6945320"
  },
  {
    "text": "so we're back we see logged all our notes and our notes got logged here this is not really what we want so we should",
    "start": "6945320",
    "end": "6950960"
  },
  {
    "text": "clean up our styling we can see it's inside this div and we defined it as a row when it",
    "start": "6950960",
    "end": "6958040"
  },
  {
    "text": "should be another div here where we can copy that and then add another closing",
    "start": "6958040",
    "end": "6965639"
  },
  {
    "text": "div there and that will wrap our forms in a row but we want our notes to be in",
    "start": "6965639",
    "end": "6973800"
  },
  {
    "text": "a column and if we go back we'll see there we go I notes in a column and and",
    "start": "6973800",
    "end": "6979719"
  },
  {
    "text": "that's a little make it a little bit nicer we'll set a Max Max width to let's",
    "start": "6979719",
    "end": "6985199"
  },
  {
    "text": "say 600 pixels how does that look much",
    "start": "6985199",
    "end": "6990320"
  },
  {
    "text": "better uh next we need add the second form for question answering um we need to add a check in our back end which",
    "start": "6990320",
    "end": "6996679"
  },
  {
    "text": "will verify that our database does not already include a paper with this URL",
    "start": "6996679",
    "end": "7001800"
  },
  {
    "text": "and if it does we can just return it right away so we don't have to be um embedding and taking notes on multiple",
    "start": "7001800",
    "end": "7007159"
  },
  {
    "text": "papers um and instead of so add that set up a form for our question answering and",
    "start": "7007159",
    "end": "7014280"
  },
  {
    "text": "um add a component for actually logging um our questions and answers and the",
    "start": "7014280",
    "end": "7020079"
  },
  {
    "text": "followup questions and add a way to easily click on the followup question button and have that followup question",
    "start": "7020079",
    "end": "7026760"
  },
  {
    "text": "be sent to our API all right so now that we have our uh paper URL and submitting a paper hooked",
    "start": "7026760",
    "end": "7033320"
  },
  {
    "text": "up we're going to want to set up our second form for actually asking questions and answers so if we go here",
    "start": "7033320",
    "end": "7041440"
  },
  {
    "text": "um we can pretty much just copy this whole div and then remove what we don't want so copy that in um and then we know",
    "start": "7041440",
    "end": "7049400"
  },
  {
    "text": "we're not going to need this collapsible so we can drop this uh we know we are only going to",
    "start": "7049400",
    "end": "7057079"
  },
  {
    "text": "need one form field for the um question",
    "start": "7057079",
    "end": "7062639"
  },
  {
    "text": "the user wants to ask uh so we're going to swap this to be question",
    "start": "7062639",
    "end": "7070599"
  },
  {
    "text": "and the question placeholder or description will be",
    "start": "7070599",
    "end": "7076840"
  },
  {
    "text": "the question to ask about the paper and the placeholder will",
    "start": "7076840",
    "end": "7084000"
  },
  {
    "text": "be why is the sky blue that's good um",
    "start": "7084000",
    "end": "7090000"
  },
  {
    "text": "and then we're also going to need to create a new form schema so we can just",
    "start": "7090000",
    "end": "7096159"
  },
  {
    "text": "copy what we had before and we will rename it to be question form",
    "start": "7096159",
    "end": "7103639"
  },
  {
    "text": "schema and swap out this key to only be",
    "start": "7103639",
    "end": "7109079"
  },
  {
    "text": "question next we can go and put it in",
    "start": "7109079",
    "end": "7114199"
  },
  {
    "text": "here that's not right we need to go and create a new form first actually so copy",
    "start": "7114360",
    "end": "7120960"
  },
  {
    "text": "paste that rename it question [Music]",
    "start": "7120960",
    "end": "7127639"
  },
  {
    "text": "form swap out the schema type copy that and now we can go and",
    "start": "7127639",
    "end": "7136800"
  },
  {
    "text": "swap these out this name will obviously have to be question and we need a new",
    "start": "7136800",
    "end": "7143480"
  },
  {
    "text": "onsubmit so on question",
    "start": "7143480",
    "end": "7148040"
  },
  {
    "text": "submit and then once again swap out the form schema I'm in for now now we will just",
    "start": "7153719",
    "end": "7161199"
  },
  {
    "text": "comment this all out and console log what the values are",
    "start": "7161199",
    "end": "7166800"
  },
  {
    "text": "that get submitted okay uh let's take our form",
    "start": "7166800",
    "end": "7173639"
  },
  {
    "text": "schema pass it in there and if we go back to our UI we should see it looks like that um let's do a little bit of",
    "start": "7173639",
    "end": "7181239"
  },
  {
    "text": "housekeeping to make this prettier um by going to this Di and",
    "start": "7181239",
    "end": "7186760"
  },
  {
    "text": "we'll say margin X Auto and that moves it over and let's move it down from the top a little bit so margin",
    "start": "7186760",
    "end": "7193360"
  },
  {
    "text": "top three there we go that looks better um yeah and now we can test this",
    "start": "7193360",
    "end": "7200679"
  },
  {
    "text": "out hello world submit and we see we get an object with",
    "start": "7200679",
    "end": "7207320"
  },
  {
    "text": "a question of hello world that looks pretty good um and the next what we need to do is connect this to the API so we",
    "start": "7207320",
    "end": "7216880"
  },
  {
    "text": "can copy what we had here or just uncopy uncomment this Swap this to be QA it's",
    "start": "7216880",
    "end": "7224880"
  },
  {
    "text": "going to be a post request our values will not just be this because if we go to our",
    "start": "7224880",
    "end": "7230840"
  },
  {
    "text": "server. TS we see that QA requires the paper URL as well so index.",
    "start": "7230840",
    "end": "7239560"
  },
  {
    "text": "TSX luckily here we're storing um the submitted paper data in",
    "start": "7239560",
    "end": "7246560"
  },
  {
    "text": "this object so this contains the paper URL so what we need to do is create a",
    "start": "7246560",
    "end": "7251880"
  },
  {
    "text": "new values object and we'll name it data so con data",
    "start": "7251880",
    "end": "7258400"
  },
  {
    "text": "equals values and paper URL subit paper to paper URL um but we should also add a",
    "start": "7258400",
    "end": "7263639"
  },
  {
    "text": "check and say if this is false um throw new error no paper",
    "start": "7263639",
    "end": "7271880"
  },
  {
    "text": "submitted so we know that this will be truthy and we can swap out our",
    "start": "7271880",
    "end": "7277320"
  },
  {
    "text": "stringified body to contain this data object um and then once that's done",
    "start": "7277320",
    "end": "7282679"
  },
  {
    "text": "we're going to want to make a new state variable called we'll call it answers and",
    "start": "7282679",
    "end": "7291079"
  },
  {
    "text": "set answers for now we will not type",
    "start": "7291079",
    "end": "7296360"
  },
  {
    "text": "this we'll set our answers just like we set our notes",
    "start": "7296360",
    "end": "7303000"
  },
  {
    "text": "and last step we need to duplicate this take notes inside of our client API I",
    "start": "7303000",
    "end": "7309639"
  },
  {
    "text": "we'll rename it to QA to match our backend and we swap that to be QA post",
    "start": "7309639",
    "end": "7316480"
  },
  {
    "text": "API URL this all looks right except it's not going to be this type as we saw before so if we look at QA QA returns",
    "start": "7316480",
    "end": "7325719"
  },
  {
    "text": "answer and followup questions as an array so we can go and add this type so",
    "start": "7325719",
    "end": "7332040"
  },
  {
    "text": "we'll name it QA response and it will be answer is a",
    "start": "7332040",
    "end": "7340960"
  },
  {
    "text": "string and followup questions as string of arrays",
    "start": "7340960",
    "end": "7348280"
  },
  {
    "text": "as well or an array string that's going to be an array of this or or",
    "start": "7348280",
    "end": "7353520"
  },
  {
    "text": "undefined this all looks good let's go and import this into our TSX",
    "start": "7353520",
    "end": "7361480"
  },
  {
    "text": "file so answer set answers can either be basically the same as this or",
    "start": "7361480",
    "end": "7369480"
  },
  {
    "text": "or not or we can just swap out archive papers for sponse Q&A and import",
    "start": "7369480",
    "end": "7375280"
  },
  {
    "text": "it um and that should all be good so let's quickly add a jsx for our answers",
    "start": "7375280",
    "end": "7383760"
  },
  {
    "text": "just so when this works we'll be able to see them so we'll say answers is true and answers. length is greater than",
    "start": "7383760",
    "end": "7389599"
  },
  {
    "text": "zero um and then we can do copal will probably suggest what we have before so let's see what they",
    "start": "7389599",
    "end": "7396599"
  },
  {
    "text": "suggested so a div that's in a column Max withth of 600 just we wanted answers",
    "start": "7396599",
    "end": "7402960"
  },
  {
    "text": "instead of notes map it over and it'll be answer dot",
    "start": "7402960",
    "end": "7410960"
  },
  {
    "text": "answer um so this is saying the answer and then the content we're not going to want that we're going to want the we're",
    "start": "7411880",
    "end": "7418000"
  },
  {
    "text": "going to want this to be our our instead of our um page numbers we want to be our",
    "start": "7418000",
    "end": "7425239"
  },
  {
    "text": "follow-up questions so we will do answer. followup",
    "start": "7425239",
    "end": "7432000"
  },
  {
    "text": "questions uh. map",
    "start": "7432000",
    "end": "7438320"
  },
  {
    "text": "followup and then we can just copy this and we need to give it a key we'll",
    "start": "7439239",
    "end": "7445119"
  },
  {
    "text": "just give it key equals the index as well so",
    "start": "7445119",
    "end": "7451639"
  },
  {
    "text": "index key equals the index beautiful and then instead of that",
    "start": "7451639",
    "end": "7456920"
  },
  {
    "text": "we need to put the follow-up and let's wrap this all into div which is a columns div last name Flex Flex call Gap",
    "start": "7456920",
    "end": "7466920"
  },
  {
    "text": "two two padding that looks good but we're not going to do follow-up",
    "start": "7466920",
    "end": "7472400"
  },
  {
    "text": "questions there instead we will put that",
    "start": "7472400",
    "end": "7477520"
  },
  {
    "text": "let's format this right above so we will have another just plain P tag followup",
    "start": "7477520",
    "end": "7486599"
  },
  {
    "text": "questions boom and now if we hit this API after we load a paper we ask",
    "start": "7486599",
    "end": "7494320"
  },
  {
    "text": "question then it should all work I'm going to pause this video because this will take a minute and when it comes back we'll hopefully see our notes and",
    "start": "7494320",
    "end": "7500520"
  },
  {
    "text": "our questions and answers all in the same spot one quick thing we can do before we",
    "start": "7500520",
    "end": "7506840"
  },
  {
    "text": "submit that again is go back to our notes section and instead of uh always",
    "start": "7506840",
    "end": "7513280"
  },
  {
    "text": "adding it to the database we can first do a check and we can say or we can add a new um method to our database saying",
    "start": "7513280",
    "end": "7521280"
  },
  {
    "text": "find paper by URL so async or get paper",
    "start": "7521280",
    "end": "7526719"
  },
  {
    "text": "paper by URL and we're just going to take in the paper URL string and we're",
    "start": "7526719",
    "end": "7532559"
  },
  {
    "text": "essentially just going to query the papers table we're going to select one by the URL if it's false we're not going",
    "start": "7532559",
    "end": "7538880"
  },
  {
    "text": "to want to throw error we're just going to want to return no or we will return the actual",
    "start": "7538880",
    "end": "7547280"
  },
  {
    "text": "um data actually we already had a method so that's nice we don't need to redo it we can just do get paper and we're going",
    "start": "7547280",
    "end": "7553520"
  },
  {
    "text": "to swap this to return n instead instead of",
    "start": "7553520",
    "end": "7559678"
  },
  {
    "text": "throwing nice and let's swap out this response type to be or",
    "start": "7559760",
    "end": "7565679"
  },
  {
    "text": "no so now we can call get paper inside of our notes we can say",
    "start": "7565679",
    "end": "7572320"
  },
  {
    "text": "cons existing paper equals a weight database. get paper paper URL and then",
    "start": "7572320",
    "end": "7578880"
  },
  {
    "text": "we can say if this is true return existing paper.",
    "start": "7578880",
    "end": "7587320"
  },
  {
    "text": "notes and we can we'll cast this as array of",
    "start": "7587320",
    "end": "7594280"
  },
  {
    "text": "archive paper notes and then our response type will be the same and for good measure let's type this response",
    "start": "7594280",
    "end": "7600400"
  },
  {
    "text": "type just so we never accidentally return a type we don't",
    "start": "7600400",
    "end": "7606159"
  },
  {
    "text": "want there we go so now if the paper exists we don't have to recompute um our",
    "start": "7606159",
    "end": "7611760"
  },
  {
    "text": "notes and and our PDFs and we can just return it and it can be pretty quick so",
    "start": "7611760",
    "end": "7617199"
  },
  {
    "text": "if we go back here our paper should already be in the database so we can copy this all in uh just for good",
    "start": "7617199",
    "end": "7627520"
  },
  {
    "text": "measure 10 1112 let's go to",
    "start": "7627520",
    "end": "7633159"
  },
  {
    "text": "our terminal which I accidentally just killed the web for hopefully it comes back um we can go up one level and do",
    "start": "7635360",
    "end": "7642599"
  },
  {
    "text": "yarn start API that should start our API",
    "start": "7642599",
    "end": "7649719"
  },
  {
    "text": "beautiful let's bring this away and okay it did reload our page not the end of",
    "start": "7649719",
    "end": "7655440"
  },
  {
    "text": "the world paste that in paste in our",
    "start": "7655440",
    "end": "7661159"
  },
  {
    "text": "name and one two three submit and boom",
    "start": "7661159",
    "end": "7666440"
  },
  {
    "text": "we can see it returned instantly because if P from the database um and now we can ask a question and we will",
    "start": "7666440",
    "end": "7673920"
  },
  {
    "text": "say what are the results or we'll say how",
    "start": "7673920",
    "end": "7680119"
  },
  {
    "text": "does gorilla manage the As and if we",
    "start": "7680119",
    "end": "7685719"
  },
  {
    "text": "submit this it should take a second and when this comes back I will respond with",
    "start": "7685719",
    "end": "7692360"
  },
  {
    "text": "um or I I will resume this video with the different answers I gave us all right it's back took a lot quicker than",
    "start": "7692360",
    "end": "7698639"
  },
  {
    "text": "I thought it was going to be and it says kill manages abstract syntax treat methodology blah and there we go so",
    "start": "7698639",
    "end": "7706239"
  },
  {
    "text": "answer looks good only problem is our follow-up questions let's see what what went wrong there it just logged",
    "start": "7706239",
    "end": "7712320"
  },
  {
    "text": "follow-up and that makes sense because then it wrap this in a bracket so this obviously won't reload um oh it did okay",
    "start": "7712320",
    "end": "7720159"
  },
  {
    "text": "there you go so you see our followup questions can you explain more detail and whatnot um and the last thing we",
    "start": "7720159",
    "end": "7726119"
  },
  {
    "text": "should do is make this a little bit prettier so let's wrap our the this in a div we'll name it Flex call Gap five",
    "start": "7726119",
    "end": "7734719"
  },
  {
    "text": "margin X Auto that's good but let's do this in a row instead just so we have",
    "start": "7734719",
    "end": "7740880"
  },
  {
    "text": "our answers and our notes side by side so then if we copy and paste these",
    "start": "7740880",
    "end": "7746480"
  },
  {
    "text": "inside this div go back and there you go looks a lot",
    "start": "7746480",
    "end": "7752480"
  },
  {
    "text": "better we've got our answers and our notes um let's have it match up with the",
    "start": "7752480",
    "end": "7757599"
  },
  {
    "text": "columns though just one little net boom notes on one side answers on",
    "start": "7757599",
    "end": "7764480"
  },
  {
    "text": "the other side questions and adding a paper up here and it all works pretty",
    "start": "7764480",
    "end": "7770280"
  },
  {
    "text": "well so yeah if you want to finish code for this it'll be in the GitHub linked uh below once again the mon repo",
    "start": "7770280",
    "end": "7776679"
  },
  {
    "text": "template which you can clone to follow along for this tutorial will also be down below um and I appreciate everybody",
    "start": "7776679",
    "end": "7782920"
  },
  {
    "text": "for sticking around this long I hope you learned something um and I hope this site is useful for you",
    "start": "7782920",
    "end": "7789360"
  },
  {
    "text": "um for future papers and other content you want to read from archive",
    "start": "7789360",
    "end": "7797040"
  }
]