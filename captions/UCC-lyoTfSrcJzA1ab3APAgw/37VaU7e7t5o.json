[
  {
    "text": "hey everyone I'm Jake from the lsmith",
    "start": "719",
    "end": "2480"
  },
  {
    "text": "engineering team and I'm here to tell",
    "start": "2480",
    "end": "4000"
  },
  {
    "text": "you about our newest beta feature around",
    "start": "4000",
    "end": "5680"
  },
  {
    "text": "fuse shot prompting for those of you who",
    "start": "5680",
    "end": "7839"
  },
  {
    "text": "don't know fuse shot prompting is a",
    "start": "7839",
    "end": "9719"
  },
  {
    "text": "technique where you show examples of the",
    "start": "9719",
    "end": "13360"
  },
  {
    "text": "how the llm should respond to similar",
    "start": "13360",
    "end": "16480"
  },
  {
    "text": "types of questions in your prompt before",
    "start": "16480",
    "end": "18840"
  },
  {
    "text": "you ask the llm your question uh this is",
    "start": "18840",
    "end": "22840"
  },
  {
    "text": "great because it lets you improve the",
    "start": "22840",
    "end": "24800"
  },
  {
    "text": "performance of your application without",
    "start": "24800",
    "end": "26760"
  },
  {
    "text": "any sort of magical um prompt",
    "start": "26760",
    "end": "29519"
  },
  {
    "text": "engineering",
    "start": "29519",
    "end": "30880"
  },
  {
    "text": "uh one of the hardest parts of this",
    "start": "30880",
    "end": "32279"
  },
  {
    "text": "normally is setting up a vector database",
    "start": "32279",
    "end": "33960"
  },
  {
    "text": "or search database to store your past",
    "start": "33960",
    "end": "36079"
  },
  {
    "text": "examples but we're going to make this",
    "start": "36079",
    "end": "37600"
  },
  {
    "text": "really easy to do with Lang Smith data",
    "start": "37600",
    "end": "39640"
  },
  {
    "text": "sets so let's go through this sample",
    "start": "39640",
    "end": "41760"
  },
  {
    "text": "notebook um in order to show you how the",
    "start": "41760",
    "end": "44879"
  },
  {
    "text": "feature Works um so for the problem",
    "start": "44879",
    "end": "48239"
  },
  {
    "text": "setup we're going to assume we have a",
    "start": "48239",
    "end": "49840"
  },
  {
    "text": "data set which is just a series of",
    "start": "49840",
    "end": "51559"
  },
  {
    "text": "questions and answers um and we're going",
    "start": "51559",
    "end": "55039"
  },
  {
    "text": "to model this after our application",
    "start": "55039",
    "end": "56680"
  },
  {
    "text": "called chat linkchain which is a real",
    "start": "56680",
    "end": "58680"
  },
  {
    "text": "application we run in production where",
    "start": "58680",
    "end": "60760"
  },
  {
    "text": "you can ask uh about Lane chains",
    "start": "60760",
    "end": "63359"
  },
  {
    "text": "documents to an llm so you can ask a",
    "start": "63359",
    "end": "65360"
  },
  {
    "text": "question like how does this recursive",
    "start": "65360",
    "end": "67119"
  },
  {
    "text": "URL loader work and it will give you",
    "start": "67119",
    "end": "69560"
  },
  {
    "text": "good answers about how it",
    "start": "69560",
    "end": "71520"
  },
  {
    "text": "works um and so before we do fop",
    "start": "71520",
    "end": "74720"
  },
  {
    "text": "prompting we're just asking vanilla chat",
    "start": "74720",
    "end": "77040"
  },
  {
    "text": "GPT how this works uh so we're going to",
    "start": "77040",
    "end": "79560"
  },
  {
    "text": "ask about something called a runnable",
    "start": "79560",
    "end": "80600"
  },
  {
    "text": "Lambda which lets you run an arbitrary",
    "start": "80600",
    "end": "82240"
  },
  {
    "text": "function in the link chain expression",
    "start": "82240",
    "end": "84079"
  },
  {
    "text": "language um and chat gbt is not going to",
    "start": "84079",
    "end": "86720"
  },
  {
    "text": "give a great response because it",
    "start": "86720",
    "end": "89280"
  },
  {
    "text": "probably was pre-trained before runnable",
    "start": "89280",
    "end": "91079"
  },
  {
    "text": "lambdas existed um so it sort of",
    "start": "91079",
    "end": "93680"
  },
  {
    "text": "hallucinates something here um okay so",
    "start": "93680",
    "end": "97119"
  },
  {
    "text": "what we're going to do now is we're",
    "start": "97119",
    "end": "98000"
  },
  {
    "text": "going to actually create the data set",
    "start": "98000",
    "end": "99640"
  },
  {
    "text": "that uh in lsmith that has all of the",
    "start": "99640",
    "end": "102880"
  },
  {
    "text": "examples that we discussed earlier and",
    "start": "102880",
    "end": "105159"
  },
  {
    "text": "we're going to index it uh so that we",
    "start": "105159",
    "end": "107520"
  },
  {
    "text": "can search it for f shot examples so",
    "start": "107520",
    "end": "109840"
  },
  {
    "text": "let's find this here uh this is our Lang",
    "start": "109840",
    "end": "112320"
  },
  {
    "text": "Smith F shot data sets notebook and you",
    "start": "112320",
    "end": "114759"
  },
  {
    "text": "can see you know it has similar",
    "start": "114759",
    "end": "116799"
  },
  {
    "text": "questions from the past like what is a",
    "start": "116799",
    "end": "118360"
  },
  {
    "text": "runnable Lambda um which will be useful",
    "start": "118360",
    "end": "120640"
  },
  {
    "text": "to feed into our",
    "start": "120640",
    "end": "122000"
  },
  {
    "text": "PRP um cool so we can click fot index",
    "start": "122000",
    "end": "125439"
  },
  {
    "text": "and we can start a sync and this will",
    "start": "125439",
    "end": "127439"
  },
  {
    "text": "sync all the stuff to um an internal you",
    "start": "127439",
    "end": "130360"
  },
  {
    "text": "know searchable database so we can query",
    "start": "130360",
    "end": "132040"
  },
  {
    "text": "it at low latency um for Relevant",
    "start": "132040",
    "end": "135200"
  },
  {
    "text": "examples so let's go back here and we're",
    "start": "135200",
    "end": "137920"
  },
  {
    "text": "going to run some helper code that's",
    "start": "137920",
    "end": "139519"
  },
  {
    "text": "going to set up an API client that lets",
    "start": "139519",
    "end": "142400"
  },
  {
    "text": "us you know search examples on our data",
    "start": "142400",
    "end": "144400"
  },
  {
    "text": "set um so all we do is pass in a data",
    "start": "144400",
    "end": "146640"
  },
  {
    "text": "set ID and the input that's coming into",
    "start": "146640",
    "end": "149239"
  },
  {
    "text": "our llm and we'll find relevant examples",
    "start": "149239",
    "end": "152519"
  },
  {
    "text": "and then we create some syntactic sugar",
    "start": "152519",
    "end": "154239"
  },
  {
    "text": "and Lang chain called an example",
    "start": "154239",
    "end": "155760"
  },
  {
    "text": "selector um that's just a nice Raptor to",
    "start": "155760",
    "end": "158160"
  },
  {
    "text": "do exactly this uh and we're going to",
    "start": "158160",
    "end": "160120"
  },
  {
    "text": "trace it using the traceable decorator",
    "start": "160120",
    "end": "161959"
  },
  {
    "text": "in Lang Smith so we can inspect how this",
    "start": "161959",
    "end": "164000"
  },
  {
    "text": "is actually working under the hood cool",
    "start": "164000",
    "end": "166680"
  },
  {
    "text": "so there's one hyper parameter which is",
    "start": "166680",
    "end": "168000"
  },
  {
    "text": "a number of examples we want want to um",
    "start": "168000",
    "end": "169959"
  },
  {
    "text": "pull to put into our prompt and now",
    "start": "169959",
    "end": "171800"
  },
  {
    "text": "let's run this with link chain uh so",
    "start": "171800",
    "end": "173959"
  },
  {
    "text": "what we're going to do is in we're going",
    "start": "173959",
    "end": "176599"
  },
  {
    "text": "to use this example selector on our data",
    "start": "176599",
    "end": "178239"
  },
  {
    "text": "set ID uh and then we're going to for",
    "start": "178239",
    "end": "180840"
  },
  {
    "text": "every example um basically pipe this in",
    "start": "180840",
    "end": "184239"
  },
  {
    "text": "um with its question and answer shown uh",
    "start": "184239",
    "end": "186760"
  },
  {
    "text": "and then we're going to use the same",
    "start": "186760",
    "end": "188239"
  },
  {
    "text": "base prompt um for asking the question",
    "start": "188239",
    "end": "190760"
  },
  {
    "text": "from chat GPT so let's do that and we're",
    "start": "190760",
    "end": "194159"
  },
  {
    "text": "going to stream out the answer and you",
    "start": "194159",
    "end": "195799"
  },
  {
    "text": "can see that the streaming starts",
    "start": "195799",
    "end": "197239"
  },
  {
    "text": "responding almost immediately so this is",
    "start": "197239",
    "end": "198720"
  },
  {
    "text": "a very low latency search and this",
    "start": "198720",
    "end": "200599"
  },
  {
    "text": "answer is much higher quality um than",
    "start": "200599",
    "end": "203120"
  },
  {
    "text": "the one we got earlier so let's go into",
    "start": "203120",
    "end": "205200"
  },
  {
    "text": "lsmith and see what's actually happening",
    "start": "205200",
    "end": "207080"
  },
  {
    "text": "under the hood so if we go to lsmith and",
    "start": "207080",
    "end": "211080"
  },
  {
    "text": "look at the trace um for my llm run we",
    "start": "211080",
    "end": "214799"
  },
  {
    "text": "can look at this select examples call",
    "start": "214799",
    "end": "216920"
  },
  {
    "text": "and we see that for this input asking",
    "start": "216920",
    "end": "219840"
  },
  {
    "text": "about what a runable Lambda is the um",
    "start": "219840",
    "end": "222640"
  },
  {
    "text": "search API um effectively chooses three",
    "start": "222640",
    "end": "226439"
  },
  {
    "text": "inputs um or three uh examples so one is",
    "start": "226439",
    "end": "230519"
  },
  {
    "text": "a question of what is a runnable Lambda",
    "start": "230519",
    "end": "232640"
  },
  {
    "text": "another is a question asking about why",
    "start": "232640",
    "end": "234159"
  },
  {
    "text": "something else is useful for Lang chain",
    "start": "234159",
    "end": "236159"
  },
  {
    "text": "and the third is uh something asking how",
    "start": "236159",
    "end": "239000"
  },
  {
    "text": "a runable LDA works and so it will take",
    "start": "239000",
    "end": "241439"
  },
  {
    "text": "this output and combine it um into our",
    "start": "241439",
    "end": "245680"
  },
  {
    "text": "system prompt here and then we'll ask",
    "start": "245680",
    "end": "248439"
  },
  {
    "text": "the question why would I use a renable",
    "start": "248439",
    "end": "249799"
  },
  {
    "text": "Lambda in link chain how does it what",
    "start": "249799",
    "end": "251519"
  },
  {
    "text": "does it do and it will give a much",
    "start": "251519",
    "end": "253439"
  },
  {
    "text": "improved response because it's seen in",
    "start": "253439",
    "end": "255760"
  },
  {
    "text": "the past what what good examples uh look",
    "start": "255760",
    "end": "258639"
  },
  {
    "text": "like cool and so we can run the same",
    "start": "258639",
    "end": "261840"
  },
  {
    "text": "thing with or without L chain so this is",
    "start": "261840",
    "end": "263919"
  },
  {
    "text": "an example of just using the open AI API",
    "start": "263919",
    "end": "267000"
  },
  {
    "text": "directly um to call in and and run the",
    "start": "267000",
    "end": "270199"
  },
  {
    "text": "same p-shot example selection uh so",
    "start": "270199",
    "end": "273479"
  },
  {
    "text": "anyways we're we're super excited um",
    "start": "273479",
    "end": "275759"
  },
  {
    "text": "about this feature we think this is a",
    "start": "275759",
    "end": "277840"
  },
  {
    "text": "great way to improve your guys'",
    "start": "277840",
    "end": "279520"
  },
  {
    "text": "applications um you can sign up for the",
    "start": "279520",
    "end": "281479"
  },
  {
    "text": "beta on your data sets page just click",
    "start": "281479",
    "end": "284120"
  },
  {
    "text": "the button that says request access and",
    "start": "284120",
    "end": "286080"
  },
  {
    "text": "we'll let you on um we're really excited",
    "start": "286080",
    "end": "288039"
  },
  {
    "text": "to get feedback um and we hope that this",
    "start": "288039",
    "end": "290320"
  },
  {
    "text": "helps improve your guys' applications",
    "start": "290320",
    "end": "292400"
  },
  {
    "text": "have a good day",
    "start": "292400",
    "end": "295600"
  }
]