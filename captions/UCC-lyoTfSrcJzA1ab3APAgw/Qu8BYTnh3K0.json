[
  {
    "text": "what's going on everyone it's brace from",
    "start": "880",
    "end": "2280"
  },
  {
    "text": "Lang chain and in this video we're going",
    "start": "2280",
    "end": "3800"
  },
  {
    "text": "to be reintroducing langra JS including",
    "start": "3800",
    "end": "6680"
  },
  {
    "text": "all the new additions and improvements",
    "start": "6680",
    "end": "8880"
  },
  {
    "text": "we made to the API next we're going to",
    "start": "8880",
    "end": "11040"
  },
  {
    "text": "be covering langra Studio which is what",
    "start": "11040",
    "end": "12759"
  },
  {
    "text": "you're looking at here this is an",
    "start": "12759",
    "end": "13960"
  },
  {
    "text": "application we built for debugging",
    "start": "13960",
    "end": "16440"
  },
  {
    "text": "iterating and developing your lra",
    "start": "16440",
    "end": "18600"
  },
  {
    "text": "applications and then finally at the end",
    "start": "18600",
    "end": "20480"
  },
  {
    "text": "of the video we're going to be covering",
    "start": "20480",
    "end": "21960"
  },
  {
    "text": "deploying your application to the cloud",
    "start": "21960",
    "end": "24080"
  },
  {
    "text": "using lingraph Cloud which is our hosted",
    "start": "24080",
    "end": "26039"
  },
  {
    "text": "platform where you can quickly and",
    "start": "26039",
    "end": "28119"
  },
  {
    "text": "easily deploy your lingraph applic",
    "start": "28119",
    "end": "30119"
  },
  {
    "text": "ations to be used in production so to",
    "start": "30119",
    "end": "32880"
  },
  {
    "text": "start we're going to look at lra Studio",
    "start": "32880",
    "end": "34600"
  },
  {
    "text": "which is what you see right here I've",
    "start": "34600",
    "end": "36280"
  },
  {
    "text": "loaded in a simple graph which has two",
    "start": "36280",
    "end": "38800"
  },
  {
    "text": "nodes agent and tools um as we can see",
    "start": "38800",
    "end": "41920"
  },
  {
    "text": "it starts will always get routed to the",
    "start": "41920",
    "end": "43840"
  },
  {
    "text": "agent node this agent node can then",
    "start": "43840",
    "end": "45520"
  },
  {
    "text": "route to either the tools or it can end",
    "start": "45520",
    "end": "48360"
  },
  {
    "text": "if it selects the tools node it will",
    "start": "48360",
    "end": "50079"
  },
  {
    "text": "then invoke that and this will always",
    "start": "50079",
    "end": "51640"
  },
  {
    "text": "get passed back to the agent we can see",
    "start": "51640",
    "end": "53640"
  },
  {
    "text": "that's represented by the solid Arrow um",
    "start": "53640",
    "end": "56000"
  },
  {
    "text": "and then agent can also can can",
    "start": "56000",
    "end": "57760"
  },
  {
    "text": "conditionally route to tools or end so",
    "start": "57760",
    "end": "60000"
  },
  {
    "text": "it can route back to the agent and then",
    "start": "60000",
    "end": "61399"
  },
  {
    "text": "it can end uh what is a node a node is",
    "start": "61399",
    "end": "64439"
  },
  {
    "text": "essentially a function which we've added",
    "start": "64439",
    "end": "66119"
  },
  {
    "text": "to our graph this function gets will",
    "start": "66119",
    "end": "68119"
  },
  {
    "text": "always be past the state of our graph so",
    "start": "68119",
    "end": "70439"
  },
  {
    "text": "we can see here we've defined our state",
    "start": "70439",
    "end": "72119"
  },
  {
    "text": "as just a list of messages each node",
    "start": "72119",
    "end": "74920"
  },
  {
    "text": "will always accept the state and then it",
    "start": "74920",
    "end": "76759"
  },
  {
    "text": "will return either one field or all the",
    "start": "76759",
    "end": "79479"
  },
  {
    "text": "state fields which will then get updated",
    "start": "79479",
    "end": "81640"
  },
  {
    "text": "or appended to the state depending on",
    "start": "81640",
    "end": "83560"
  },
  {
    "text": "how you've implemented your state",
    "start": "83560",
    "end": "85079"
  },
  {
    "text": "annotation which we'll cover in a second",
    "start": "85079",
    "end": "86680"
  },
  {
    "text": "when we inspect the code so to start",
    "start": "86680",
    "end": "89000"
  },
  {
    "text": "let's add an simple query saying who won",
    "start": "89000",
    "end": "92280"
  },
  {
    "text": "the US Open in 2023 uh when we submit",
    "start": "92280",
    "end": "95119"
  },
  {
    "text": "this it will get passed to our agent",
    "start": "95119",
    "end": "97000"
  },
  {
    "text": "node which is an LM that has a tool",
    "start": "97000",
    "end": "99399"
  },
  {
    "text": "bound to it this tool is the TV search",
    "start": "99399",
    "end": "101560"
  },
  {
    "text": "API results tool um and then it can use",
    "start": "101560",
    "end": "103960"
  },
  {
    "text": "the query we submitted to search the web",
    "start": "103960",
    "end": "105880"
  },
  {
    "text": "for who won the US Open um after it",
    "start": "105880",
    "end": "108680"
  },
  {
    "text": "searches the web using the tools node",
    "start": "108680",
    "end": "110200"
  },
  {
    "text": "that'll go routed back to the agent and",
    "start": "110200",
    "end": "111960"
  },
  {
    "text": "then the agent will be able to generate",
    "start": "111960",
    "end": "113320"
  },
  {
    "text": "a final answer and finish it here uh",
    "start": "113320",
    "end": "115960"
  },
  {
    "text": "when I invoke it we'll be able to see on",
    "start": "115960",
    "end": "117479"
  },
  {
    "text": "the right all the different messages",
    "start": "117479",
    "end": "119320"
  },
  {
    "text": "streaming in from our graph as they're",
    "start": "119320",
    "end": "121600"
  },
  {
    "text": "being executed in real time so we can",
    "start": "121600",
    "end": "123560"
  },
  {
    "text": "see It'll stream in the input I",
    "start": "123560",
    "end": "125479"
  },
  {
    "text": "submitted the result from the agent",
    "start": "125479",
    "end": "128000"
  },
  {
    "text": "which should be a tool call the result",
    "start": "128000",
    "end": "129920"
  },
  {
    "text": "of the tool call which should be the",
    "start": "129920",
    "end": "131120"
  },
  {
    "text": "results from the Tob search API and then",
    "start": "131120",
    "end": "133319"
  },
  {
    "text": "finally a final generation from our",
    "start": "133319",
    "end": "135160"
  },
  {
    "text": "agent so let's add that input and then",
    "start": "135160",
    "end": "137640"
  },
  {
    "text": "execute the graph and see it run so when",
    "start": "137640",
    "end": "140319"
  },
  {
    "text": "I hit submit we can see it streamed in",
    "start": "140319",
    "end": "142239"
  },
  {
    "text": "the input then our tool call from the AI",
    "start": "142239",
    "end": "144760"
  },
  {
    "text": "message finally the results of the tool",
    "start": "144760",
    "end": "147239"
  },
  {
    "text": "and then at the bottom our final",
    "start": "147239",
    "end": "148400"
  },
  {
    "text": "generation now let's go back to the top",
    "start": "148400",
    "end": "150280"
  },
  {
    "text": "and cover this in detail so we see we",
    "start": "150280",
    "end": "153080"
  },
  {
    "text": "have our input which is from the start",
    "start": "153080",
    "end": "154840"
  },
  {
    "text": "node when I hover over it in the studio",
    "start": "154840",
    "end": "156800"
  },
  {
    "text": "you can see it highlights it on the UI",
    "start": "156800",
    "end": "158599"
  },
  {
    "text": "on the left that was then passed to our",
    "start": "158599",
    "end": "161200"
  },
  {
    "text": "llm which called the to search results",
    "start": "161200",
    "end": "163680"
  },
  {
    "text": "Json tool since we called a tool it got",
    "start": "163680",
    "end": "166360"
  },
  {
    "text": "routed to the tools node which invoked",
    "start": "166360",
    "end": "168680"
  },
  {
    "text": "the D search results API as you can see",
    "start": "168680",
    "end": "171920"
  },
  {
    "text": "we got a few different fields back from",
    "start": "171920",
    "end": "174200"
  },
  {
    "text": "this including the winner um which is",
    "start": "174200",
    "end": "176920"
  },
  {
    "text": "what we've requested finally the results",
    "start": "176920",
    "end": "179159"
  },
  {
    "text": "of this tool got got passed back to the",
    "start": "179159",
    "end": "180840"
  },
  {
    "text": "agent where it generated a plain text",
    "start": "180840",
    "end": "182879"
  },
  {
    "text": "response and because it was a plain text",
    "start": "182879",
    "end": "184400"
  },
  {
    "text": "response it got routed to the end now we",
    "start": "184400",
    "end": "186840"
  },
  {
    "text": "can go in and look at the code and see",
    "start": "186840",
    "end": "188400"
  },
  {
    "text": "exactly how and why our graph took this",
    "start": "188400",
    "end": "191360"
  },
  {
    "text": "path um and exactly how we would build",
    "start": "191360",
    "end": "193640"
  },
  {
    "text": "this first if you'd like to follow along",
    "start": "193640",
    "end": "195879"
  },
  {
    "text": "you should clone the langra JS examples",
    "start": "195879",
    "end": "198120"
  },
  {
    "text": "repository I'm going to add a link to it",
    "start": "198120",
    "end": "199560"
  },
  {
    "text": "in the description and then you're going",
    "start": "199560",
    "end": "200920"
  },
  {
    "text": "to navigate into the intro directory",
    "start": "200920",
    "end": "203280"
  },
  {
    "text": "once you're there you're going to want",
    "start": "203280",
    "end": "205000"
  },
  {
    "text": "to open up the index.ts file inside the",
    "start": "205000",
    "end": "207480"
  },
  {
    "text": "intro directory and then you can see our",
    "start": "207480",
    "end": "209879"
  },
  {
    "text": "simple graph we've defined at the top",
    "start": "209879",
    "end": "212040"
  },
  {
    "text": "you can see we have an LM chat open AI",
    "start": "212040",
    "end": "214519"
  },
  {
    "text": "we've also imported our TV search",
    "start": "214519",
    "end": "216120"
  },
  {
    "text": "results tool and defined the web search",
    "start": "216120",
    "end": "217959"
  },
  {
    "text": "tool here in order to run this graph",
    "start": "217959",
    "end": "220239"
  },
  {
    "text": "you're going to want to populate the in.",
    "start": "220239",
    "end": "221959"
  },
  {
    "text": "example file I've added here including",
    "start": "221959",
    "end": "223959"
  },
  {
    "text": "your T API key and open AI API key if",
    "start": "223959",
    "end": "227400"
  },
  {
    "text": "you're running this graph",
    "start": "227400",
    "end": "228400"
  },
  {
    "text": "programmatically or not in the studio or",
    "start": "228400",
    "end": "230239"
  },
  {
    "text": "Cloud you should also add your Lang",
    "start": "230239",
    "end": "231920"
  },
  {
    "text": "chain API key for Lang Smith tracing if",
    "start": "231920",
    "end": "234480"
  },
  {
    "text": "you're running it in the studio or the",
    "start": "234480",
    "end": "236000"
  },
  {
    "text": "cloud you do not need to add that",
    "start": "236000",
    "end": "237319"
  },
  {
    "text": "because they're automatically injected",
    "start": "237319",
    "end": "238959"
  },
  {
    "text": "for you now if we go back to the graph",
    "start": "238959",
    "end": "241760"
  },
  {
    "text": "we can see we defined our tools here we",
    "start": "241760",
    "end": "244519"
  },
  {
    "text": "defined our tool node which is a special",
    "start": "244519",
    "end": "246400"
  },
  {
    "text": "pre-built class from Lang graph which",
    "start": "246400",
    "end": "249280"
  },
  {
    "text": "accepts a list of tools and then we add",
    "start": "249280",
    "end": "251720"
  },
  {
    "text": "it as a node in our graph and when that",
    "start": "251720",
    "end": "253560"
  },
  {
    "text": "node is invoked and it's passed a tool",
    "start": "253560",
    "end": "256759"
  },
  {
    "text": "call from an LM it's able to map that to",
    "start": "256759",
    "end": "259280"
  },
  {
    "text": "the tools which we inputed and then",
    "start": "259280",
    "end": "261199"
  },
  {
    "text": "invoke the function on those tools so",
    "start": "261199",
    "end": "263520"
  },
  {
    "text": "once we defined our tools we can see we",
    "start": "263520",
    "end": "265199"
  },
  {
    "text": "defined our call model function here and",
    "start": "265199",
    "end": "267560"
  },
  {
    "text": "it takes in an argument of state which",
    "start": "267560",
    "end": "269600"
  },
  {
    "text": "is is the type of messages annotation",
    "start": "269600",
    "end": "272199"
  },
  {
    "text": "what is messages annotation this is a",
    "start": "272199",
    "end": "274400"
  },
  {
    "text": "pre-built State I've imported from L",
    "start": "274400",
    "end": "276560"
  },
  {
    "text": "graph and essentially what it is is the",
    "start": "276560",
    "end": "278639"
  },
  {
    "text": "way you define state in your graph and",
    "start": "278639",
    "end": "280840"
  },
  {
    "text": "how that state should be mapped and",
    "start": "280840",
    "end": "283360"
  },
  {
    "text": "populated when it's returned and updated",
    "start": "283360",
    "end": "285720"
  },
  {
    "text": "so if we scroll to the bottom we can see",
    "start": "285720",
    "end": "287160"
  },
  {
    "text": "I've commented it out since I'm using",
    "start": "287160",
    "end": "288600"
  },
  {
    "text": "the imported version but if I were to",
    "start": "288600",
    "end": "290639"
  },
  {
    "text": "Define this programmatically I would say",
    "start": "290639",
    "end": "292600"
  },
  {
    "text": "cons message annotation equals",
    "start": "292600",
    "end": "294320"
  },
  {
    "text": "annotation. root you'll import",
    "start": "294320",
    "end": "296039"
  },
  {
    "text": "annotation from Lang graph and then",
    "start": "296039",
    "end": "297720"
  },
  {
    "text": "annotation. root accepts an object and",
    "start": "297720",
    "end": "300080"
  },
  {
    "text": "in this object you'll Define the",
    "start": "300080",
    "end": "301360"
  },
  {
    "text": "different fields in your state so for us",
    "start": "301360",
    "end": "303560"
  },
  {
    "text": "we just want to have the messages field",
    "start": "303560",
    "end": "305960"
  },
  {
    "text": "so I will only Define one key messages",
    "start": "305960",
    "end": "308039"
  },
  {
    "text": "and the result of this or the value of",
    "start": "308039",
    "end": "309560"
  },
  {
    "text": "this is another annotation function",
    "start": "309560",
    "end": "312080"
  },
  {
    "text": "passing in a generic so that our graph",
    "start": "312080",
    "end": "314240"
  },
  {
    "text": "has the proper types throughout it and",
    "start": "314240",
    "end": "316479"
  },
  {
    "text": "then inside of this annotation function",
    "start": "316479",
    "end": "318280"
  },
  {
    "text": "I Define a reducer and a default this",
    "start": "318280",
    "end": "320560"
  },
  {
    "text": "reducer is a factory function that's",
    "start": "320560",
    "end": "322600"
  },
  {
    "text": "called every time I update or append to",
    "start": "322600",
    "end": "325400"
  },
  {
    "text": "my state so in this case it's a",
    "start": "325400",
    "end": "326960"
  },
  {
    "text": "pre-built function which you can also",
    "start": "326960",
    "end": "328360"
  },
  {
    "text": "import from Lang graph which takes in",
    "start": "328360",
    "end": "331160"
  },
  {
    "text": "two uh arguments the current state and",
    "start": "331160",
    "end": "334160"
  },
  {
    "text": "the update value then it essentially",
    "start": "334160",
    "end": "336280"
  },
  {
    "text": "just concatenates those with a little",
    "start": "336280",
    "end": "337840"
  },
  {
    "text": "extra logic around removing or appending",
    "start": "337840",
    "end": "340840"
  },
  {
    "text": "messages then I've also added a default",
    "start": "340840",
    "end": "343080"
  },
  {
    "text": "function in this example I added a",
    "start": "343080",
    "end": "345280"
  },
  {
    "text": "default system message however that is",
    "start": "345280",
    "end": "346960"
  },
  {
    "text": "not required your default um Factory can",
    "start": "346960",
    "end": "349600"
  },
  {
    "text": "return any type of array that matches",
    "start": "349600",
    "end": "351720"
  },
  {
    "text": "the type you defined up here so we can",
    "start": "351720",
    "end": "354520"
  },
  {
    "text": "see I passed that message annotation to",
    "start": "354520",
    "end": "356800"
  },
  {
    "text": "my state graph and then I Define my",
    "start": "356800",
    "end": "358880"
  },
  {
    "text": "nodes uh I only have two nodes defined",
    "start": "358880",
    "end": "361600"
  },
  {
    "text": "here the call model and the tool node",
    "start": "361600",
    "end": "363759"
  },
  {
    "text": "node and if we go back to the studio you",
    "start": "363759",
    "end": "366400"
  },
  {
    "text": "can see that matches up here with these",
    "start": "366400",
    "end": "367960"
  },
  {
    "text": "two nodes I've",
    "start": "367960",
    "end": "369360"
  },
  {
    "text": "defined we Define our edges which are",
    "start": "369360",
    "end": "372080"
  },
  {
    "text": "how the node gets mapped so we want to",
    "start": "372080",
    "end": "374720"
  },
  {
    "text": "always start and then invoke the agent",
    "start": "374720",
    "end": "377120"
  },
  {
    "text": "node once the tools node is invoked that",
    "start": "377120",
    "end": "379560"
  },
  {
    "text": "should always map back to the agent and",
    "start": "379560",
    "end": "382319"
  },
  {
    "text": "then for the agent we defined a",
    "start": "382319",
    "end": "384280"
  },
  {
    "text": "conditional Edge for this um and if we",
    "start": "384280",
    "end": "386280"
  },
  {
    "text": "inspect the conditional Edge should",
    "start": "386280",
    "end": "387960"
  },
  {
    "text": "continue function you can see it all Al",
    "start": "387960",
    "end": "389759"
  },
  {
    "text": "takes in the state it extracts the",
    "start": "389759",
    "end": "391599"
  },
  {
    "text": "messages and then the most recent",
    "start": "391599",
    "end": "393280"
  },
  {
    "text": "message from that list and it says if",
    "start": "393280",
    "end": "395800"
  },
  {
    "text": "this is not an AI message or if it is an",
    "start": "395800",
    "end": "398080"
  },
  {
    "text": "AI message and does not have tool calls",
    "start": "398080",
    "end": "400120"
  },
  {
    "text": "we want to end if it does have tool",
    "start": "400120",
    "end": "402360"
  },
  {
    "text": "calls we want to map to the tools node",
    "start": "402360",
    "end": "404720"
  },
  {
    "text": "as the third argument in the conditional",
    "start": "404720",
    "end": "406520"
  },
  {
    "text": "Edge function you can see we Define the",
    "start": "406520",
    "end": "408759"
  },
  {
    "text": "fields which our conditional node can",
    "start": "408759",
    "end": "411039"
  },
  {
    "text": "map to so it's either the tools node or",
    "start": "411039",
    "end": "413440"
  },
  {
    "text": "this is a special uh variable from L",
    "start": "413440",
    "end": "416000"
  },
  {
    "text": "graph we've imported and when this node",
    "start": "416000",
    "end": "418039"
  },
  {
    "text": "is passed to our graph it will a",
    "start": "418039",
    "end": "419560"
  },
  {
    "text": "autoally end finally we can pile our",
    "start": "419560",
    "end": "422639"
  },
  {
    "text": "graph and Export a function graph here",
    "start": "422639",
    "end": "425919"
  },
  {
    "text": "if you are not running this in the",
    "start": "425919",
    "end": "427199"
  },
  {
    "text": "studio or the cloud as this comment says",
    "start": "427199",
    "end": "429400"
  },
  {
    "text": "you want to un uncomment this line here",
    "start": "429400",
    "end": "432039"
  },
  {
    "text": "defining your checkpoint a checkpoint is",
    "start": "432039",
    "end": "434039"
  },
  {
    "text": "essentially a database which can store",
    "start": "434039",
    "end": "437000"
  },
  {
    "text": "and persist the state and your threads",
    "start": "437000",
    "end": "439680"
  },
  {
    "text": "uh in your graph so that you can do",
    "start": "439680",
    "end": "441479"
  },
  {
    "text": "things like interrupt the graph and exit",
    "start": "441479",
    "end": "443759"
  },
  {
    "text": "them in order to perform some sort of",
    "start": "443759",
    "end": "445639"
  },
  {
    "text": "say human loop operation or update the",
    "start": "445639",
    "end": "447759"
  },
  {
    "text": "state and then you can continue on from",
    "start": "447759",
    "end": "450120"
  },
  {
    "text": "where you left off and since you have",
    "start": "450120",
    "end": "451479"
  },
  {
    "text": "this checkpoint or database passed to",
    "start": "451479",
    "end": "453360"
  },
  {
    "text": "your graph it'll be able to use the",
    "start": "453360",
    "end": "454960"
  },
  {
    "text": "state from where it left off if you're",
    "start": "454960",
    "end": "456720"
  },
  {
    "text": "using it in the studio the cloud you do",
    "start": "456720",
    "end": "458240"
  },
  {
    "text": "not need to Define this because we will",
    "start": "458240",
    "end": "459680"
  },
  {
    "text": "automatically inject one for you so that",
    "start": "459680",
    "end": "461599"
  },
  {
    "text": "we can persist your threads finally you",
    "start": "461599",
    "end": "464039"
  },
  {
    "text": "see I'm exporting this variable and",
    "start": "464039",
    "end": "466280"
  },
  {
    "text": "that's so I can Define it in my Lang",
    "start": "466280",
    "end": "468280"
  },
  {
    "text": "graph. Json file which is the",
    "start": "468280",
    "end": "470080"
  },
  {
    "text": "configuration file I need to Define for",
    "start": "470080",
    "end": "472240"
  },
  {
    "text": "using the studio or the cloud here I can",
    "start": "472240",
    "end": "474720"
  },
  {
    "text": "Define things like my node version I can",
    "start": "474720",
    "end": "476479"
  },
  {
    "text": "customize my Docker file and I also",
    "start": "476479",
    "end": "478240"
  },
  {
    "text": "Define all my graphs so in this case I",
    "start": "478240",
    "end": "480479"
  },
  {
    "text": "only have one graph simple agent and I",
    "start": "480479",
    "end": "482879"
  },
  {
    "text": "pass in a path to the file which that",
    "start": "482879",
    "end": "485199"
  },
  {
    "text": "graph lives in and then the name of the",
    "start": "485199",
    "end": "486879"
  },
  {
    "text": "variable of which that compiled graph is",
    "start": "486879",
    "end": "490240"
  },
  {
    "text": "found this is how Ling graph studio and",
    "start": "490240",
    "end": "492680"
  },
  {
    "text": "the cloud is able to find the graphs and",
    "start": "492680",
    "end": "494560"
  },
  {
    "text": "invoke them inside my code base um for",
    "start": "494560",
    "end": "496919"
  },
  {
    "text": "running it in the studio locally I also",
    "start": "496919",
    "end": "498919"
  },
  {
    "text": "Define exactly how where and how I can",
    "start": "498919",
    "end": "501199"
  },
  {
    "text": "find my environment variable file and",
    "start": "501199",
    "end": "503159"
  },
  {
    "text": "that's so when I run it in the studio",
    "start": "503159",
    "end": "504680"
  },
  {
    "text": "application it's able to find my secrets",
    "start": "504680",
    "end": "507720"
  },
  {
    "text": "and call the API that require secrets",
    "start": "507720",
    "end": "510240"
  },
  {
    "text": "next let's go and deploy this to",
    "start": "510240",
    "end": "511840"
  },
  {
    "text": "production using Lang graph cloud and",
    "start": "511840",
    "end": "514120"
  },
  {
    "text": "then we can run the studio in the",
    "start": "514120",
    "end": "515719"
  },
  {
    "text": "production version so to deploy your",
    "start": "515719",
    "end": "518039"
  },
  {
    "text": "graph to production using Lang graph",
    "start": "518039",
    "end": "519560"
  },
  {
    "text": "Cloud you're going to want to navigate",
    "start": "519560",
    "end": "520599"
  },
  {
    "text": "to lsmith and then to the deployments",
    "start": "520599",
    "end": "522839"
  },
  {
    "text": "tab inside of lsmith here you're going",
    "start": "522839",
    "end": "524959"
  },
  {
    "text": "to click on new deployment and if you",
    "start": "524959",
    "end": "527360"
  },
  {
    "text": "have not already done this you want to",
    "start": "527360",
    "end": "528680"
  },
  {
    "text": "link your GitHub account so that you can",
    "start": "528680",
    "end": "530600"
  },
  {
    "text": "import a repository in my case I've",
    "start": "530600",
    "end": "532680"
  },
  {
    "text": "already done it so then I can select the",
    "start": "532680",
    "end": "535440"
  },
  {
    "text": "Lang graph. JS examples Repository next",
    "start": "535440",
    "end": "539680"
  },
  {
    "text": "I give it a name I'll just name it intro",
    "start": "539680",
    "end": "542279"
  },
  {
    "text": "and I want to pass then the path to the",
    "start": "542279",
    "end": "544360"
  },
  {
    "text": "L graph config file if it's not in the",
    "start": "544360",
    "end": "547000"
  },
  {
    "text": "root when it's in our case it's not so",
    "start": "547000",
    "end": "549240"
  },
  {
    "text": "it's inside intro L graph. Json next I",
    "start": "549240",
    "end": "553279"
  },
  {
    "text": "can define a git branch and my case main",
    "start": "553279",
    "end": "556560"
  },
  {
    "text": "I don't need to Define it different",
    "start": "556560",
    "end": "557760"
  },
  {
    "text": "branch and then I can define a",
    "start": "557760",
    "end": "559839"
  },
  {
    "text": "deployment type either development or",
    "start": "559839",
    "end": "561720"
  },
  {
    "text": "production in our case we want",
    "start": "561720",
    "end": "563160"
  },
  {
    "text": "development and finally you can add in",
    "start": "563160",
    "end": "565120"
  },
  {
    "text": "your environment variables I'm not going",
    "start": "565120",
    "end": "566760"
  },
  {
    "text": "to add those in here but that's what you",
    "start": "566760",
    "end": "568040"
  },
  {
    "text": "would do if you're Dey into Cloud lastly",
    "start": "568040",
    "end": "571240"
  },
  {
    "text": "it's going to automatically create a",
    "start": "571240",
    "end": "572720"
  },
  {
    "text": "tracing project for you and then every",
    "start": "572720",
    "end": "574720"
  },
  {
    "text": "single run and event that occurs inside",
    "start": "574720",
    "end": "577200"
  },
  {
    "text": "this production deployment will",
    "start": "577200",
    "end": "578920"
  },
  {
    "text": "automatically get logged to this project",
    "start": "578920",
    "end": "580959"
  },
  {
    "text": "and not any of the other projects you'll",
    "start": "580959",
    "end": "582880"
  },
  {
    "text": "hit submit and then it will load up your",
    "start": "582880",
    "end": "585440"
  },
  {
    "text": "new deployment so I've already deployed",
    "start": "585440",
    "end": "587760"
  },
  {
    "text": "this so I'm going to look at my current",
    "start": "587760",
    "end": "589760"
  },
  {
    "text": "deployment and then we can click langra",
    "start": "589760",
    "end": "592000"
  },
  {
    "text": "Studio here and this is going to open up",
    "start": "592000",
    "end": "593440"
  },
  {
    "text": "the studio which looks just the same as",
    "start": "593440",
    "end": "595760"
  },
  {
    "text": "our local version however this is using",
    "start": "595760",
    "end": "598040"
  },
  {
    "text": "the actual production API so we can once",
    "start": "598040",
    "end": "601440"
  },
  {
    "text": "again ask it who is the US Open winner",
    "start": "601440",
    "end": "603360"
  },
  {
    "text": "and then it should be able to search",
    "start": "603360",
    "end": "604880"
  },
  {
    "text": "that up the exact same way it did",
    "start": "604880",
    "end": "607079"
  },
  {
    "text": "locally so I add a new message I say who",
    "start": "607079",
    "end": "610200"
  },
  {
    "text": "won the US Open in 2023 when I hit",
    "start": "610200",
    "end": "612320"
  },
  {
    "text": "submit we're going to see everything",
    "start": "612320",
    "end": "613519"
  },
  {
    "text": "stream in on the right like we did in",
    "start": "613519",
    "end": "615399"
  },
  {
    "text": "the local version so submit we see our",
    "start": "615399",
    "end": "618360"
  },
  {
    "text": "input our tool call was called the",
    "start": "618360",
    "end": "621920"
  },
  {
    "text": "results of our tool call were passed",
    "start": "621920",
    "end": "623360"
  },
  {
    "text": "back to the agent and finally we got the",
    "start": "623360",
    "end": "625920"
  },
  {
    "text": "same result that we did when we were",
    "start": "625920",
    "end": "627160"
  },
  {
    "text": "running it locally now you should be",
    "start": "627160",
    "end": "629680"
  },
  {
    "text": "familiar with how to develop and iterate",
    "start": "629680",
    "end": "632200"
  },
  {
    "text": "on your graph using the apis we saw in",
    "start": "632200",
    "end": "634440"
  },
  {
    "text": "the code earlier as well as L graph",
    "start": "634440",
    "end": "636800"
  },
  {
    "text": "studio for local development and what we",
    "start": "636800",
    "end": "639959"
  },
  {
    "text": "just saw here you should be familiar",
    "start": "639959",
    "end": "641600"
  },
  {
    "text": "with how to deploy your graph to Cloud",
    "start": "641600",
    "end": "643240"
  },
  {
    "text": "using the L graph cloud and then hit the",
    "start": "643240",
    "end": "646000"
  },
  {
    "text": "API using the Lang graph studio uh",
    "start": "646000",
    "end": "648200"
  },
  {
    "text": "calling the production deployment in the",
    "start": "648200",
    "end": "651200"
  },
  {
    "text": "upcoming videos we're going to cover",
    "start": "651200",
    "end": "652639"
  },
  {
    "text": "some Concepts like human in the loop uh",
    "start": "652639",
    "end": "654760"
  },
  {
    "text": "the next video is going to be an intro",
    "start": "654760",
    "end": "656360"
  },
  {
    "text": "and highle overview as to what is human",
    "start": "656360",
    "end": "658680"
  },
  {
    "text": "the loop and how L graph can solve that",
    "start": "658680",
    "end": "662200"
  },
  {
    "text": "as well as we're going to build some",
    "start": "662200",
    "end": "663959"
  },
  {
    "text": "somewhat more advanced applications",
    "start": "663959",
    "end": "665519"
  },
  {
    "text": "including a stock broker agent which can",
    "start": "665519",
    "end": "667639"
  },
  {
    "text": "purchase shares uh granted the human",
    "start": "667639",
    "end": "670240"
  },
  {
    "text": "provides permission as well as some",
    "start": "670240",
    "end": "672200"
  },
  {
    "text": "applications showing all the different",
    "start": "672200",
    "end": "673519"
  },
  {
    "text": "ways you can stream messages and events",
    "start": "673519",
    "end": "675600"
  },
  {
    "text": "back from your production graph I'll see",
    "start": "675600",
    "end": "678000"
  },
  {
    "text": "you guys in those videos",
    "start": "678000",
    "end": "681560"
  }
]