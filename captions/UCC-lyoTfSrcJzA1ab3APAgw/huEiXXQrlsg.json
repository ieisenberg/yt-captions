[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "hi this is Catherine from Langchain",
    "start": "719",
    "end": "3520"
  },
  {
    "text": "retrieval augmented generation is a",
    "start": "3520",
    "end": "5600"
  },
  {
    "text": "powerful technique that supplies your",
    "start": "5600",
    "end": "7040"
  },
  {
    "text": "agent with external information and can",
    "start": "7040",
    "end": "9120"
  },
  {
    "text": "improve agent",
    "start": "9120",
    "end": "10360"
  },
  {
    "text": "performance however relying on rag alone",
    "start": "10360",
    "end": "13360"
  },
  {
    "text": "agents can often pull in irrelevant",
    "start": "13360",
    "end": "15360"
  },
  {
    "text": "documents their user question what if",
    "start": "15360",
    "end": "17840"
  },
  {
    "text": "you could cache and fix that before",
    "start": "17840",
    "end": "19279"
  },
  {
    "text": "generating an answer in this video we'll",
    "start": "19279",
    "end": "21840"
  },
  {
    "text": "show how to use in the loop evaluations",
    "start": "21840",
    "end": "24080"
  },
  {
    "text": "to filter our noisy results and boost",
    "start": "24080",
    "end": "26320"
  },
  {
    "text": "answer quality",
    "start": "26320",
    "end": "28960"
  },
  {
    "start": "28000",
    "end": "105000"
  },
  {
    "text": "if you're not familiar with Rack Rack",
    "start": "28960",
    "end": "31199"
  },
  {
    "text": "essentially retrieve facts from an",
    "start": "31199",
    "end": "32480"
  },
  {
    "text": "external knowledge base to ground LM on",
    "start": "32480",
    "end": "34719"
  },
  {
    "text": "accurate up-to-date information rack",
    "start": "34719",
    "end": "37200"
  },
  {
    "text": "applications in their most basic form",
    "start": "37200",
    "end": "38960"
  },
  {
    "text": "consists of two steps first in a",
    "start": "38960",
    "end": "41760"
  },
  {
    "text": "retrieval step context is retrieved to",
    "start": "41760",
    "end": "43920"
  },
  {
    "text": "provide the LM with the information it",
    "start": "43920",
    "end": "45680"
  },
  {
    "text": "needs to respond to the user common",
    "start": "45680",
    "end": "47680"
  },
  {
    "text": "sources include vector database or web",
    "start": "47680",
    "end": "50280"
  },
  {
    "text": "retrieval second in the generation step",
    "start": "50280",
    "end": "53120"
  },
  {
    "text": "the LM uses the retrieve context to then",
    "start": "53120",
    "end": "55600"
  },
  {
    "text": "formulate an answer now for the",
    "start": "55600",
    "end": "58320"
  },
  {
    "text": "retrieval step semantic search returns",
    "start": "58320",
    "end": "60640"
  },
  {
    "text": "results with the highest semantic",
    "start": "60640",
    "end": "62440"
  },
  {
    "text": "similarity while the top results do",
    "start": "62440",
    "end": "64878"
  },
  {
    "text": "reflect general similarity in topic",
    "start": "64879",
    "end": "66880"
  },
  {
    "text": "based on ranking but they don't",
    "start": "66880",
    "end": "68799"
  },
  {
    "text": "necessarily suggest direct answer or",
    "start": "68799",
    "end": "70880"
  },
  {
    "text": "relevancy to the user specific inquiry",
    "start": "70880",
    "end": "74400"
  },
  {
    "text": "one fix for this is to add in the loop",
    "start": "74400",
    "end": "76880"
  },
  {
    "text": "evaluation steps to your rack pipeline",
    "start": "76880",
    "end": "79360"
  },
  {
    "text": "adding a relevance check to ensure the",
    "start": "79360",
    "end": "81360"
  },
  {
    "text": "retrieved information actually supports",
    "start": "81360",
    "end": "83200"
  },
  {
    "text": "the user's intent filter poor results",
    "start": "83200",
    "end": "86000"
  },
  {
    "text": "and course correct before a response",
    "start": "86000",
    "end": "88720"
  },
  {
    "text": "we'll show you an example of how you can",
    "start": "88720",
    "end": "90640"
  },
  {
    "text": "create such a reflection step in your",
    "start": "90640",
    "end": "92400"
  },
  {
    "text": "architecture and instead of building the",
    "start": "92400",
    "end": "94400"
  },
  {
    "text": "evaluation logic from scratch we'll show",
    "start": "94400",
    "end": "96400"
  },
  {
    "text": "you how you can leverage open evals an",
    "start": "96400",
    "end": "98720"
  },
  {
    "text": "open- source package that contains out",
    "start": "98720",
    "end": "100560"
  },
  {
    "text": "ofthe-box tools for rack related",
    "start": "100560",
    "end": "104040"
  },
  {
    "text": "evaluations open evals includes a number",
    "start": "104040",
    "end": "106960"
  },
  {
    "start": "105000",
    "end": "155000"
  },
  {
    "text": "of helpful out ofthe-box evaluators",
    "start": "106960",
    "end": "110159"
  },
  {
    "text": "this includes ones for LM is the judge",
    "start": "110159",
    "end": "113360"
  },
  {
    "text": "rag and code evaluation today we're",
    "start": "113360",
    "end": "116479"
  },
  {
    "text": "going to focus specifically on the rag",
    "start": "116479",
    "end": "118799"
  },
  {
    "text": "evaluator section open eval provides",
    "start": "118799",
    "end": "121439"
  },
  {
    "text": "pre-built evaluators to assess key parts",
    "start": "121439",
    "end": "123520"
  },
  {
    "text": "of your rag pipeline this includes first",
    "start": "123520",
    "end": "126759"
  },
  {
    "text": "correctness which measures how similar",
    "start": "126759",
    "end": "129440"
  },
  {
    "text": "or correct is a generated answer to a",
    "start": "129440",
    "end": "131920"
  },
  {
    "text": "ground truth",
    "start": "131920",
    "end": "133319"
  },
  {
    "text": "answer second is helpfulness this",
    "start": "133319",
    "end": "136239"
  },
  {
    "text": "evaluates whether the answer actually",
    "start": "136239",
    "end": "138000"
  },
  {
    "text": "addresses the user's question third is",
    "start": "138000",
    "end": "140440"
  },
  {
    "text": "groundedness this checks if the final",
    "start": "140440",
    "end": "142720"
  },
  {
    "text": "answer aligns with retrieved context and",
    "start": "142720",
    "end": "145599"
  },
  {
    "text": "finally is retrieval relevance this",
    "start": "145599",
    "end": "148400"
  },
  {
    "text": "scores how relevant each retrieve doc is",
    "start": "148400",
    "end": "151200"
  },
  {
    "text": "to the original question let's see how",
    "start": "151200",
    "end": "153440"
  },
  {
    "text": "this can be applied in",
    "start": "153440",
    "end": "155560"
  },
  {
    "start": "155000",
    "end": "206000"
  },
  {
    "text": "action first let's see a base example to",
    "start": "155560",
    "end": "158480"
  },
  {
    "text": "see how our base agent performs without",
    "start": "158480",
    "end": "160480"
  },
  {
    "text": "the reflection steps so this is a simple",
    "start": "160480",
    "end": "163519"
  },
  {
    "text": "react agent architecture that uses a",
    "start": "163519",
    "end": "165840"
  },
  {
    "text": "small fast local lm through a llama and",
    "start": "165840",
    "end": "168560"
  },
  {
    "text": "obtains web search results through tile",
    "start": "168560",
    "end": "171120"
  },
  {
    "text": "search",
    "start": "171120",
    "end": "172120"
  },
  {
    "text": "engine i can feed an example input to",
    "start": "172120",
    "end": "174959"
  },
  {
    "text": "our agent asking about the warrior's",
    "start": "174959",
    "end": "177120"
  },
  {
    "text": "records last year",
    "start": "177120",
    "end": "179280"
  },
  {
    "text": "the query is routed to our agent node",
    "start": "179280",
    "end": "181200"
  },
  {
    "text": "which generates its response through",
    "start": "181200",
    "end": "183040"
  },
  {
    "text": "calling the web search",
    "start": "183040",
    "end": "186159"
  },
  {
    "text": "tools and from here it generates a long",
    "start": "186840",
    "end": "189760"
  },
  {
    "text": "answer about the warrior's historical",
    "start": "189760",
    "end": "191599"
  },
  {
    "text": "records but if we examine closely it",
    "start": "191599",
    "end": "194480"
  },
  {
    "text": "dances around our original question a",
    "start": "194480",
    "end": "196239"
  },
  {
    "text": "bit and is not necessarily catered",
    "start": "196239",
    "end": "198080"
  },
  {
    "text": "towards the warrior specific record last",
    "start": "198080",
    "end": "200159"
  },
  {
    "text": "year and this is where the reflection",
    "start": "200159",
    "end": "202239"
  },
  {
    "text": "step architecture can come in and",
    "start": "202239",
    "end": "204239"
  },
  {
    "text": "improve the quality of our agent",
    "start": "204239",
    "end": "206360"
  },
  {
    "start": "206000",
    "end": "249000"
  },
  {
    "text": "response to improve the correctness of",
    "start": "206360",
    "end": "208560"
  },
  {
    "text": "our web search rack we added two",
    "start": "208560",
    "end": "210959"
  },
  {
    "text": "reflection steps in the architecture",
    "start": "210959",
    "end": "213440"
  },
  {
    "text": "first a corrected RAD inspired approach",
    "start": "213440",
    "end": "216239"
  },
  {
    "text": "of grading and filtering retrieves",
    "start": "216239",
    "end": "218080"
  },
  {
    "text": "search results for relevancy this",
    "start": "218080",
    "end": "220400"
  },
  {
    "text": "reduces the amount of distracting",
    "start": "220400",
    "end": "222239"
  },
  {
    "text": "information the small LM has to deal",
    "start": "222239",
    "end": "224000"
  },
  {
    "text": "with when generating a final response",
    "start": "224000",
    "end": "226480"
  },
  {
    "text": "second a helpfulness evaluator that run",
    "start": "226480",
    "end": "229200"
  },
  {
    "text": "as a reflection step over generated",
    "start": "229200",
    "end": "231319"
  },
  {
    "text": "answer if an answer is not considered",
    "start": "231319",
    "end": "233840"
  },
  {
    "text": "helpful in answering the original",
    "start": "233840",
    "end": "235280"
  },
  {
    "text": "question the LM is reprompted through a",
    "start": "235280",
    "end": "237760"
  },
  {
    "text": "retrieded workflow this ensures that",
    "start": "237760",
    "end": "239920"
  },
  {
    "text": "hasn't lost track of its original goal",
    "start": "239920",
    "end": "242080"
  },
  {
    "text": "which can happen if retrieval returns",
    "start": "242080",
    "end": "244159"
  },
  {
    "text": "many relevant results let's take a look",
    "start": "244159",
    "end": "246640"
  },
  {
    "text": "at how these two steps are constructed",
    "start": "246640",
    "end": "248640"
  },
  {
    "text": "in code first let's walk through the",
    "start": "248640",
    "end": "251760"
  },
  {
    "start": "249000",
    "end": "378000"
  },
  {
    "text": "logic behind the relevance filtering",
    "start": "251760",
    "end": "253840"
  },
  {
    "text": "step this graes the relevancy of each",
    "start": "253840",
    "end": "256400"
  },
  {
    "text": "web search result from tubi first it",
    "start": "256400",
    "end": "259600"
  },
  {
    "text": "extracts the last message from the state",
    "start": "259600",
    "end": "261759"
  },
  {
    "text": "which should be the result from the web",
    "start": "261759",
    "end": "263199"
  },
  {
    "text": "search tool it then confirms that this",
    "start": "263199",
    "end": "265840"
  },
  {
    "text": "message came from the search tool",
    "start": "265840",
    "end": "267600"
  },
  {
    "text": "extracts the raw search results and",
    "start": "267600",
    "end": "270160"
  },
  {
    "text": "prepped an empty list to store docs that",
    "start": "270160",
    "end": "272080"
  },
  {
    "text": "pass our relevance test we then define",
    "start": "272080",
    "end": "275120"
  },
  {
    "text": "an inner evaluate function that creates",
    "start": "275120",
    "end": "277440"
  },
  {
    "text": "a relevance evaluator the relevance",
    "start": "277440",
    "end": "279840"
  },
  {
    "text": "evaluator passes on the attempted search",
    "start": "279840",
    "end": "282240"
  },
  {
    "text": "query by fetching from the state as well",
    "start": "282240",
    "end": "284479"
  },
  {
    "text": "as the search result as the",
    "start": "284479",
    "end": "286520"
  },
  {
    "text": "context it then returns both the search",
    "start": "286520",
    "end": "289120"
  },
  {
    "text": "result and evaluation output we then",
    "start": "289120",
    "end": "292000"
  },
  {
    "text": "build a list of async tasks one for each",
    "start": "292000",
    "end": "294800"
  },
  {
    "text": "retrieved document to run the evaluator",
    "start": "294800",
    "end": "297520"
  },
  {
    "text": "then going through each task as it",
    "start": "297520",
    "end": "299919"
  },
  {
    "text": "finishes if the score from the evaluator",
    "start": "299919",
    "end": "302479"
  },
  {
    "text": "result is true meaning that the search",
    "start": "302479",
    "end": "304639"
  },
  {
    "text": "is relevant we keep the result by",
    "start": "304639",
    "end": "306960"
  },
  {
    "text": "appending it to the filtered result list",
    "start": "306960",
    "end": "309919"
  },
  {
    "text": "and finally we return the filter results",
    "start": "309919",
    "end": "312479"
  },
  {
    "text": "list as part of the",
    "start": "312479",
    "end": "314199"
  },
  {
    "text": "message and for our second in the loop",
    "start": "314199",
    "end": "316680"
  },
  {
    "text": "evaluator reflect similarly this pulls",
    "start": "316680",
    "end": "320400"
  },
  {
    "text": "from the most recent message from the",
    "start": "320400",
    "end": "322199"
  },
  {
    "text": "conversation which is the final answer",
    "start": "322199",
    "end": "324400"
  },
  {
    "text": "that Ellen generated based on the",
    "start": "324400",
    "end": "326240"
  },
  {
    "text": "retrieve context we then create the",
    "start": "326240",
    "end": "329039"
  },
  {
    "text": "helpfulness evaluator from open evals to",
    "start": "329039",
    "end": "331919"
  },
  {
    "text": "check if this output actually answers",
    "start": "331919",
    "end": "333919"
  },
  {
    "text": "the original question it does so by",
    "start": "333919",
    "end": "336960"
  },
  {
    "text": "comparing the answer to the original",
    "start": "336960",
    "end": "338639"
  },
  {
    "text": "question stored in state evaluating the",
    "start": "338639",
    "end": "341039"
  },
  {
    "text": "alignment with the user's intent if the",
    "start": "341039",
    "end": "343840"
  },
  {
    "text": "answer is deemed to be not helpful by",
    "start": "343840",
    "end": "345600"
  },
  {
    "text": "our evaluator instead of continuing we",
    "start": "345600",
    "end": "348479"
  },
  {
    "text": "insert a reflection message from the",
    "start": "348479",
    "end": "350560"
  },
  {
    "text": "user back to the agent loop the message",
    "start": "350560",
    "end": "353440"
  },
  {
    "text": "reminds the agent what the original",
    "start": "353440",
    "end": "355120"
  },
  {
    "text": "question was explains the reason why the",
    "start": "355120",
    "end": "357840"
  },
  {
    "text": "previous answer wasn't successful using",
    "start": "357840",
    "end": "360000"
  },
  {
    "text": "the evaluator's feedback suggests",
    "start": "360000",
    "end": "361919"
  },
  {
    "text": "rechecking the conversation history or",
    "start": "361919",
    "end": "363840"
  },
  {
    "text": "context and list the search queries",
    "start": "363840",
    "end": "366560"
  },
  {
    "text": "already attempted and ask the agent to",
    "start": "366560",
    "end": "368960"
  },
  {
    "text": "rephrase if it wants to search again",
    "start": "368960",
    "end": "371280"
  },
  {
    "text": "this provides the agent with context to",
    "start": "371280",
    "end": "373240"
  },
  {
    "text": "retry now that we've seen how this is",
    "start": "373240",
    "end": "375600"
  },
  {
    "text": "constructed in code let's try it out",
    "start": "375600",
    "end": "378080"
  },
  {
    "start": "378000",
    "end": "483000"
  },
  {
    "text": "let's feed into the studio with the same",
    "start": "378080",
    "end": "380479"
  },
  {
    "text": "example input asking about the where is",
    "start": "380479",
    "end": "383039"
  },
  {
    "text": "record last",
    "start": "383039",
    "end": "385319"
  },
  {
    "text": "year the query is routed to our agent",
    "start": "385319",
    "end": "388120"
  },
  {
    "text": "node which generates this response",
    "start": "388120",
    "end": "390720"
  },
  {
    "text": "through calling the web search",
    "start": "390720",
    "end": "392919"
  },
  {
    "text": "tools each result is then passed to the",
    "start": "392919",
    "end": "396160"
  },
  {
    "text": "relevance filter node to grade the",
    "start": "396160",
    "end": "397840"
  },
  {
    "text": "results then from the relevant documents",
    "start": "397840",
    "end": "400639"
  },
  {
    "text": "our agent generates the respond which",
    "start": "400639",
    "end": "402639"
  },
  {
    "text": "passes to the final helpfulness",
    "start": "402639",
    "end": "404319"
  },
  {
    "text": "evaluation node and there's our final",
    "start": "404319",
    "end": "406919"
  },
  {
    "text": "answer we can also inspect the trace and",
    "start": "406919",
    "end": "409440"
  },
  {
    "text": "links method to take a detailed look at",
    "start": "409440",
    "end": "411440"
  },
  {
    "text": "the behavior the query is first passed",
    "start": "411440",
    "end": "413840"
  },
  {
    "text": "to the first node which stores the",
    "start": "413840",
    "end": "416080"
  },
  {
    "text": "original user query in the state the",
    "start": "416080",
    "end": "418800"
  },
  {
    "text": "agent then generates a query of golden",
    "start": "418800",
    "end": "421199"
  },
  {
    "text": "state warriors record last year which is",
    "start": "421199",
    "end": "423520"
  },
  {
    "text": "then passed on to a web search node",
    "start": "423520",
    "end": "425680"
  },
  {
    "text": "taking a detailed look at the tability",
    "start": "425680",
    "end": "427360"
  },
  {
    "text": "tool we can see that 10 results have",
    "start": "427360",
    "end": "429599"
  },
  {
    "text": "been retrieved",
    "start": "429599",
    "end": "431599"
  },
  {
    "text": "as a next step alternate results are",
    "start": "431599",
    "end": "433680"
  },
  {
    "text": "separately passed through the LM as",
    "start": "433680",
    "end": "435680"
  },
  {
    "text": "retrieval relevance judge taking a look",
    "start": "435680",
    "end": "438720"
  },
  {
    "text": "at the first result for example this",
    "start": "438720",
    "end": "440960"
  },
  {
    "text": "contains the Golden State Warrior scores",
    "start": "440960",
    "end": "443280"
  },
  {
    "text": "stats and highlights our evaluators",
    "start": "443280",
    "end": "445840"
  },
  {
    "text": "graded that it does not explicitly state",
    "start": "445840",
    "end": "447919"
  },
  {
    "text": "the record from the previous season so",
    "start": "447919",
    "end": "450000"
  },
  {
    "text": "it wasn't included in the final",
    "start": "450000",
    "end": "452520"
  },
  {
    "text": "result at the end of the query we're",
    "start": "452520",
    "end": "455199"
  },
  {
    "text": "left with one result that our agent then",
    "start": "455199",
    "end": "457599"
  },
  {
    "text": "uses to produce an answer from there the",
    "start": "457599",
    "end": "460400"
  },
  {
    "text": "answer is passed to the reflect step",
    "start": "460400",
    "end": "462560"
  },
  {
    "text": "where the LM as helpful as judged",
    "start": "462560",
    "end": "464720"
  },
  {
    "text": "evaluator has deemed the response to be",
    "start": "464720",
    "end": "466960"
  },
  {
    "text": "helpful to the original query then",
    "start": "466960",
    "end": "469280"
  },
  {
    "text": "outputting the final response to end",
    "start": "469280",
    "end": "471479"
  },
  {
    "text": "user now that we have added these out of",
    "start": "471479",
    "end": "474080"
  },
  {
    "text": "the box reflection steps within our",
    "start": "474080",
    "end": "475800"
  },
  {
    "text": "architecture this helps filter for",
    "start": "475800",
    "end": "477919"
  },
  {
    "text": "relevancy and can ensure better answer",
    "start": "477919",
    "end": "480000"
  },
  {
    "text": "quality from our agent thank you for",
    "start": "480000",
    "end": "482000"
  },
  {
    "text": "watching",
    "start": "482000",
    "end": "484560"
  }
]