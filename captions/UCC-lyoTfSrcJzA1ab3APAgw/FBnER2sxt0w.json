[
  {
    "text": "a really popular use case for LLMs is",
    "start": "320",
    "end": "2639"
  },
  {
    "text": "writing code and a lot of times they're",
    "start": "2639",
    "end": "4560"
  },
  {
    "text": "also going to execute that code But this",
    "start": "4560",
    "end": "6960"
  },
  {
    "text": "can be really dangerous What if the LLM",
    "start": "6960",
    "end": "9120"
  },
  {
    "text": "writes code that's not safe or is",
    "start": "9120",
    "end": "10719"
  },
  {
    "text": "potentially harmful in order to get",
    "start": "10719",
    "end": "12719"
  },
  {
    "text": "around that you should use a code",
    "start": "12719",
    "end": "14400"
  },
  {
    "text": "sandbox and we built one for you My name",
    "start": "14400",
    "end": "17119"
  },
  {
    "text": "is Nick and today we're going to walk",
    "start": "17119",
    "end": "18880"
  },
  {
    "text": "through the Langchain sandbox a tool",
    "start": "18880",
    "end": "20720"
  },
  {
    "text": "that we built to help with",
    "start": "20720",
    "end": "23160"
  },
  {
    "text": "this So what is Langchain Sandbox",
    "start": "23160",
    "end": "26320"
  },
  {
    "text": "langchain sandbox is a secure",
    "start": "26320",
    "end": "27920"
  },
  {
    "text": "environment for executing arbitrary",
    "start": "27920",
    "end": "29920"
  },
  {
    "text": "untrusted Python code Langchain sandbox",
    "start": "29920",
    "end": "32960"
  },
  {
    "text": "leverages piide to run that Python code",
    "start": "32960",
    "end": "35520"
  },
  {
    "text": "in a sandbox web assembly environment",
    "start": "35520",
    "end": "38000"
  },
  {
    "text": "and it also leverages dino which",
    "start": "38000",
    "end": "39920"
  },
  {
    "text": "isolates the code",
    "start": "39920",
    "end": "41480"
  },
  {
    "text": "execution When you execute code in the",
    "start": "41480",
    "end": "43760"
  },
  {
    "text": "lenchain sandbox you get useful",
    "start": "43760",
    "end": "45840"
  },
  {
    "text": "information back from the standard",
    "start": "45840",
    "end": "47280"
  },
  {
    "text": "output and standard error amongst other",
    "start": "47280",
    "end": "49520"
  },
  {
    "text": "values as well Let's take a look at a",
    "start": "49520",
    "end": "52000"
  },
  {
    "text": "quick example First we need to make sure",
    "start": "52000",
    "end": "54960"
  },
  {
    "text": "that the Langchain sandbox package has",
    "start": "54960",
    "end": "57039"
  },
  {
    "text": "been",
    "start": "57039",
    "end": "57879"
  },
  {
    "text": "installed The first thing that we're",
    "start": "57879",
    "end": "59760"
  },
  {
    "text": "going to do is import the Piodide",
    "start": "59760",
    "end": "61600"
  },
  {
    "text": "sandbox from the Langchain sandbox",
    "start": "61600",
    "end": "63359"
  },
  {
    "text": "package And we're going to instantiate",
    "start": "63359",
    "end": "64878"
  },
  {
    "text": "it here Notice that we instantiate it",
    "start": "64879",
    "end": "67439"
  },
  {
    "text": "with allow net equals true We'll go into",
    "start": "67439",
    "end": "69920"
  },
  {
    "text": "this a little bit more in a moment but",
    "start": "69920",
    "end": "71520"
  },
  {
    "text": "essentially this allows Piodide to",
    "start": "71520",
    "end": "73520"
  },
  {
    "text": "install the Python packages that are",
    "start": "73520",
    "end": "75360"
  },
  {
    "text": "going to be required without you having",
    "start": "75360",
    "end": "77600"
  },
  {
    "text": "to define them up front",
    "start": "77600",
    "end": "81479"
  },
  {
    "text": "Next we'll define a small code snippet",
    "start": "83439",
    "end": "85680"
  },
  {
    "text": "All this is going to do is import numpy",
    "start": "85680",
    "end": "87680"
  },
  {
    "text": "and create a numpy array We'll pass this",
    "start": "87680",
    "end": "90240"
  },
  {
    "text": "code snippet into the sandbox execute",
    "start": "90240",
    "end": "92479"
  },
  {
    "text": "function here and await the response",
    "start": "92479",
    "end": "94880"
  },
  {
    "text": "Let's see what we",
    "start": "94880",
    "end": "96520"
  },
  {
    "text": "get This prints out the code execution",
    "start": "96520",
    "end": "99119"
  },
  {
    "text": "result and we have it in the comments",
    "start": "99119",
    "end": "100960"
  },
  {
    "text": "here We didn't return anything so the",
    "start": "100960",
    "end": "103280"
  },
  {
    "text": "result for this is none But we can see",
    "start": "103280",
    "end": "105200"
  },
  {
    "text": "that in our standard output we printed",
    "start": "105200",
    "end": "107280"
  },
  {
    "text": "out the full array",
    "start": "107280",
    "end": "110159"
  },
  {
    "text": "There were no errors and there's some",
    "start": "110159",
    "end": "111759"
  },
  {
    "text": "other metadata as well like the",
    "start": "111759",
    "end": "113360"
  },
  {
    "text": "execution time and when the session was",
    "start": "113360",
    "end": "117240"
  },
  {
    "text": "created Now let's run through a few",
    "start": "117240",
    "end": "119439"
  },
  {
    "text": "specific features that make lang chain",
    "start": "119439",
    "end": "121360"
  },
  {
    "text": "sandbox particularly powerful For one",
    "start": "121360",
    "end": "124640"
  },
  {
    "text": "everything in lang chain sandbox is",
    "start": "124640",
    "end": "126240"
  },
  {
    "text": "executed locally which means your data",
    "start": "126240",
    "end": "128160"
  },
  {
    "text": "and your information stays under your",
    "start": "128160",
    "end": "130599"
  },
  {
    "text": "control Langchain sandbox also sets up",
    "start": "130599",
    "end": "133280"
  },
  {
    "text": "your Python environment dynamically by",
    "start": "133280",
    "end": "135360"
  },
  {
    "text": "detecting and installing the required",
    "start": "135360",
    "end": "136959"
  },
  {
    "text": "dependencies like we just saw This means",
    "start": "136959",
    "end": "139520"
  },
  {
    "text": "that you don't need to worry about",
    "start": "139520",
    "end": "140720"
  },
  {
    "text": "declaring which Python libraries are",
    "start": "140720",
    "end": "142400"
  },
  {
    "text": "needed ahead of",
    "start": "142400",
    "end": "143879"
  },
  {
    "text": "time Langchain sandbox can also be used",
    "start": "143879",
    "end": "146560"
  },
  {
    "text": "in a stateful manner This allows you to",
    "start": "146560",
    "end": "148640"
  },
  {
    "text": "retain variable assignments across",
    "start": "148640",
    "end": "150560"
  },
  {
    "text": "multiple code executions Let's go ahead",
    "start": "150560",
    "end": "152959"
  },
  {
    "text": "and take a quick look at an example of",
    "start": "152959",
    "end": "154720"
  },
  {
    "text": "that",
    "start": "154720",
    "end": "156440"
  },
  {
    "text": "here Our code looks pretty similar The",
    "start": "156440",
    "end": "159280"
  },
  {
    "text": "only difference is that we now have the",
    "start": "159280",
    "end": "161120"
  },
  {
    "text": "stateful argument set as true when we",
    "start": "161120",
    "end": "163200"
  },
  {
    "text": "instantiate the piodide sandbox Just",
    "start": "163200",
    "end": "165680"
  },
  {
    "text": "like before we're going to pass in the",
    "start": "165680",
    "end": "167200"
  },
  {
    "text": "simple code string that creates a numpy",
    "start": "167200",
    "end": "169040"
  },
  {
    "text": "array When we execute it the result is",
    "start": "169040",
    "end": "171680"
  },
  {
    "text": "going to look largely the same as before",
    "start": "171680",
    "end": "174160"
  },
  {
    "text": "The main difference is that we now have",
    "start": "174160",
    "end": "176480"
  },
  {
    "text": "this field called session bytes Session",
    "start": "176480",
    "end": "179920"
  },
  {
    "text": "bytes aren't meant to be human readable",
    "start": "179920",
    "end": "181920"
  },
  {
    "text": "but it's how we can retain information",
    "start": "181920",
    "end": "183840"
  },
  {
    "text": "about our variable assignments And so if",
    "start": "183840",
    "end": "186480"
  },
  {
    "text": "we then execute our sandbox again with",
    "start": "186480",
    "end": "188800"
  },
  {
    "text": "these session bytes passed in from our",
    "start": "188800",
    "end": "190640"
  },
  {
    "text": "last result we're going to be able to",
    "start": "190640",
    "end": "192640"
  },
  {
    "text": "continue And in this case we just want",
    "start": "192640",
    "end": "195519"
  },
  {
    "text": "to print out the first value of our",
    "start": "195519",
    "end": "197040"
  },
  {
    "text": "numpy array And as you can see we're",
    "start": "197040",
    "end": "200159"
  },
  {
    "text": "able to print out that value even though",
    "start": "200159",
    "end": "202000"
  },
  {
    "text": "we didn't define the variable code",
    "start": "202000",
    "end": "203680"
  },
  {
    "text": "snippet that we just passed",
    "start": "203680",
    "end": "205640"
  },
  {
    "text": "in But now we've taken a look at both",
    "start": "205640",
    "end": "208080"
  },
  {
    "text": "stateless and stateful execution in the",
    "start": "208080",
    "end": "210239"
  },
  {
    "text": "lang chain sandbox There are a few",
    "start": "210239",
    "end": "212640"
  },
  {
    "text": "common patterns to utilize arbitrary",
    "start": "212640",
    "end": "214720"
  },
  {
    "text": "code execution in an LLM agent And the",
    "start": "214720",
    "end": "217280"
  },
  {
    "text": "two use cases we'll be showing off today",
    "start": "217280",
    "end": "219440"
  },
  {
    "text": "are first as a code execution tool in a",
    "start": "219440",
    "end": "222799"
  },
  {
    "text": "React style tool calling agent and",
    "start": "222799",
    "end": "225200"
  },
  {
    "text": "second as the main execution environment",
    "start": "225200",
    "end": "227519"
  },
  {
    "text": "in a code act style",
    "start": "227519",
    "end": "230599"
  },
  {
    "text": "agent To give a bit of background the",
    "start": "230599",
    "end": "233040"
  },
  {
    "text": "React tool calling agent is a pretty",
    "start": "233040",
    "end": "235120"
  },
  {
    "text": "popular architecture An LM is provided",
    "start": "235120",
    "end": "238000"
  },
  {
    "text": "with a list of tools that it can make",
    "start": "238000",
    "end": "239760"
  },
  {
    "text": "use of The LM then makes use of its",
    "start": "239760",
    "end": "242239"
  },
  {
    "text": "function calling capabilities and",
    "start": "242239",
    "end": "244000"
  },
  {
    "text": "decides which tools to call in series or",
    "start": "244000",
    "end": "246799"
  },
  {
    "text": "in parallel one turn at a time When a",
    "start": "246799",
    "end": "249840"
  },
  {
    "text": "tool is called successfully the tool",
    "start": "249840",
    "end": "251680"
  },
  {
    "text": "then gets executed and the response is",
    "start": "251680",
    "end": "254000"
  },
  {
    "text": "provided back to the LLM The LM then",
    "start": "254000",
    "end": "256880"
  },
  {
    "text": "decides to call another tool in its",
    "start": "256880",
    "end": "258320"
  },
  {
    "text": "arsenal or decides to eventually finish",
    "start": "258320",
    "end": "260560"
  },
  {
    "text": "by not making any more dual calls Here",
    "start": "260560",
    "end": "263520"
  },
  {
    "text": "we can provide our lane chain sandbox as",
    "start": "263520",
    "end": "266240"
  },
  {
    "text": "a single execution environment for the",
    "start": "266240",
    "end": "268560"
  },
  {
    "text": "LLM to run arbitrary code as a tool",
    "start": "268560",
    "end": "271840"
  },
  {
    "text": "Let's take a closer",
    "start": "271840",
    "end": "273800"
  },
  {
    "text": "look First thing that we're going to do",
    "start": "273800",
    "end": "275840"
  },
  {
    "text": "here is define our tool here We'll",
    "start": "275840",
    "end": "278160"
  },
  {
    "text": "import our Piide sandbox tool from the",
    "start": "278160",
    "end": "280639"
  },
  {
    "text": "lang chain sandbox",
    "start": "280639",
    "end": "282120"
  },
  {
    "text": "package Now we're going to instantiate",
    "start": "282120",
    "end": "284720"
  },
  {
    "text": "the tool and we're just going to run it",
    "start": "284720",
    "end": "286080"
  },
  {
    "text": "with a simple code string that prints",
    "start": "286080",
    "end": "288080"
  },
  {
    "text": "hello",
    "start": "288080",
    "end": "289080"
  },
  {
    "text": "world Cool We can see that we printed",
    "start": "289080",
    "end": "291440"
  },
  {
    "text": "hello world Now let's actually pass this",
    "start": "291440",
    "end": "294000"
  },
  {
    "text": "tool into our React agent Just like",
    "start": "294000",
    "end": "296560"
  },
  {
    "text": "before we're going to instantiate this",
    "start": "296560",
    "end": "298160"
  },
  {
    "text": "tool and we're going to pass in allow",
    "start": "298160",
    "end": "299919"
  },
  {
    "text": "net equals true again to allow piodide",
    "start": "299919",
    "end": "302720"
  },
  {
    "text": "to install any packages that it might",
    "start": "302720",
    "end": "304600"
  },
  {
    "text": "need We're then going to pass this tool",
    "start": "304600",
    "end": "306960"
  },
  {
    "text": "into our create react agent pre-built",
    "start": "306960",
    "end": "308720"
  },
  {
    "text": "component And we're going to use cloud",
    "start": "308720",
    "end": "310400"
  },
  {
    "text": "37 sonnet for our agent",
    "start": "310400",
    "end": "313320"
  },
  {
    "text": "here With the simple react style agent",
    "start": "313320",
    "end": "316080"
  },
  {
    "text": "we're going to invoke it on a simple",
    "start": "316080",
    "end": "317600"
  },
  {
    "text": "message that asks a math This isn't",
    "start": "317600",
    "end": "320080"
  },
  {
    "text": "trivial This is matrix multiplication So",
    "start": "320080",
    "end": "322160"
  },
  {
    "text": "let's see if our agent chooses to make",
    "start": "322160",
    "end": "323840"
  },
  {
    "text": "use of its code execution tool Once it's",
    "start": "323840",
    "end": "326639"
  },
  {
    "text": "done executing we're going to print out",
    "start": "326639",
    "end": "328240"
  },
  {
    "text": "all of our messages And we'll also take",
    "start": "328240",
    "end": "330080"
  },
  {
    "text": "a closer look in Langmith to see exactly",
    "start": "330080",
    "end": "332320"
  },
  {
    "text": "what happened under the hood Let's see",
    "start": "332320",
    "end": "334880"
  },
  {
    "text": "how all of this worked by clicking into",
    "start": "334880",
    "end": "336400"
  },
  {
    "text": "the trace in Langmith Clicking into our",
    "start": "336400",
    "end": "339039"
  },
  {
    "text": "first chatthropic invocation I can see",
    "start": "339039",
    "end": "341600"
  },
  {
    "text": "that given this question we're able to",
    "start": "341600",
    "end": "343919"
  },
  {
    "text": "get this tool call output And we",
    "start": "343919",
    "end": "346160"
  },
  {
    "text": "actually only provided the single tool",
    "start": "346160",
    "end": "348400"
  },
  {
    "text": "this Python code sandbox tool to our LLM",
    "start": "348400",
    "end": "351120"
  },
  {
    "text": "In this",
    "start": "351120",
    "end": "352039"
  },
  {
    "text": "case this tool has a description that's",
    "start": "352039",
    "end": "354400"
  },
  {
    "text": "pretty helpful and interesting We asked",
    "start": "354400",
    "end": "356400"
  },
  {
    "text": "that to return output we always write",
    "start": "356400",
    "end": "358800"
  },
  {
    "text": "code with print And this is powerful",
    "start": "358800",
    "end": "360960"
  },
  {
    "text": "because what we printed out is what the",
    "start": "360960",
    "end": "362479"
  },
  {
    "text": "LM is actually going to be able to see",
    "start": "362479",
    "end": "365440"
  },
  {
    "text": "And so here we call this print with our",
    "start": "365440",
    "end": "368080"
  },
  {
    "text": "matrix multiplication Just like we",
    "start": "368080",
    "end": "370759"
  },
  {
    "text": "saw our tool node is then in charge of",
    "start": "370759",
    "end": "373280"
  },
  {
    "text": "actually executing the sandbox which",
    "start": "373280",
    "end": "375440"
  },
  {
    "text": "gives this back the value And finally we",
    "start": "375440",
    "end": "378479"
  },
  {
    "text": "call the chatanthropic model one more",
    "start": "378479",
    "end": "380319"
  },
  {
    "text": "time to package the answer nicely and",
    "start": "380319",
    "end": "382880"
  },
  {
    "text": "give the final response to the user And",
    "start": "382880",
    "end": "385840"
  },
  {
    "text": "so like we just saw LLMs are phenomenal",
    "start": "385840",
    "end": "388240"
  },
  {
    "text": "at writing code And code often involves",
    "start": "388240",
    "end": "390720"
  },
  {
    "text": "stringing together multiple steps or",
    "start": "390720",
    "end": "392800"
  },
  {
    "text": "function calls in a series for a single",
    "start": "392800",
    "end": "395199"
  },
  {
    "text": "cohesive solution",
    "start": "395199",
    "end": "397120"
  },
  {
    "text": "Codeact can be a really great technique",
    "start": "397120",
    "end": "399360"
  },
  {
    "text": "if the model that you're using doesn't",
    "start": "399360",
    "end": "401120"
  },
  {
    "text": "support tool calling or is better at",
    "start": "401120",
    "end": "403199"
  },
  {
    "text": "writing code If the tasks that your",
    "start": "403199",
    "end": "405759"
  },
  {
    "text": "agent are working on are typically",
    "start": "405759",
    "end": "407360"
  },
  {
    "text": "multi-turn or require several steps",
    "start": "407360",
    "end": "410240"
  },
  {
    "text": "codeact can be a powerful architecture",
    "start": "410240",
    "end": "412479"
  },
  {
    "text": "because it allows your agent to write",
    "start": "412479",
    "end": "414240"
  },
  {
    "text": "out the whole plan in a single response",
    "start": "414240",
    "end": "417280"
  },
  {
    "text": "This can be especially useful when the",
    "start": "417280",
    "end": "419440"
  },
  {
    "text": "output of the first function call might",
    "start": "419440",
    "end": "421440"
  },
  {
    "text": "be part of the input for a later",
    "start": "421440",
    "end": "423120"
  },
  {
    "text": "function call since you can just save",
    "start": "423120",
    "end": "424800"
  },
  {
    "text": "that variable We'll see that whole value",
    "start": "424800",
    "end": "427599"
  },
  {
    "text": "in our execution environment and then",
    "start": "427599",
    "end": "429440"
  },
  {
    "text": "reuse it Let's go ahead and build a",
    "start": "429440",
    "end": "431520"
  },
  {
    "text": "codeax agent that leverages our",
    "start": "431520",
    "end": "433960"
  },
  {
    "text": "sandbox So the first thing that we're",
    "start": "433960",
    "end": "435919"
  },
  {
    "text": "going to do here is we're going to",
    "start": "435919",
    "end": "436800"
  },
  {
    "text": "define some tools And in this case these",
    "start": "436800",
    "end": "438960"
  },
  {
    "text": "are just a bunch of math functions that",
    "start": "438960",
    "end": "440639"
  },
  {
    "text": "our agent is going to have access to We",
    "start": "440639",
    "end": "443360"
  },
  {
    "text": "then add these tools to a list which",
    "start": "443360",
    "end": "445039"
  },
  {
    "text": "we'll later provide to the",
    "start": "445039",
    "end": "447880"
  },
  {
    "text": "agent Now this is the interesting piece",
    "start": "447880",
    "end": "450880"
  },
  {
    "text": "creating the actual evaluation sandbox",
    "start": "450880",
    "end": "453120"
  },
  {
    "text": "with our Piodide",
    "start": "453120",
    "end": "454599"
  },
  {
    "text": "sandbox So what we do here is we build",
    "start": "454599",
    "end": "457199"
  },
  {
    "text": "an evaluation function and this",
    "start": "457199",
    "end": "459039"
  },
  {
    "text": "evaluation function is actually going to",
    "start": "459039",
    "end": "460479"
  },
  {
    "text": "take two things It's going to take in",
    "start": "460479",
    "end": "462240"
  },
  {
    "text": "the code to execute but it's also going",
    "start": "462240",
    "end": "464479"
  },
  {
    "text": "to take in this dictionary of local",
    "start": "464479",
    "end": "466240"
  },
  {
    "text": "variables",
    "start": "466240",
    "end": "468160"
  },
  {
    "text": "And these variables are going to be",
    "start": "468160",
    "end": "470000"
  },
  {
    "text": "those that our code is going to assume",
    "start": "470000",
    "end": "471680"
  },
  {
    "text": "that it has access to And what we can",
    "start": "471680",
    "end": "474000"
  },
  {
    "text": "see here in the wrapper code function is",
    "start": "474000",
    "end": "476319"
  },
  {
    "text": "that after we actually execute the code",
    "start": "476319",
    "end": "478800"
  },
  {
    "text": "we're going to return this locals",
    "start": "478800",
    "end": "481400"
  },
  {
    "text": "dictionary Later on we're going to save",
    "start": "481400",
    "end": "483840"
  },
  {
    "text": "that value in our code agent so that the",
    "start": "483840",
    "end": "486080"
  },
  {
    "text": "next time it runs it has access to the",
    "start": "486080",
    "end": "488400"
  },
  {
    "text": "same local variables",
    "start": "488400",
    "end": "491120"
  },
  {
    "text": "How we do this is by converting those",
    "start": "491120",
    "end": "492879"
  },
  {
    "text": "items in the locals dictionary into key",
    "start": "492879",
    "end": "495120"
  },
  {
    "text": "value pairs and essentially setting all",
    "start": "495120",
    "end": "497199"
  },
  {
    "text": "of those values in the code as part of",
    "start": "497199",
    "end": "499039"
  },
  {
    "text": "this context",
    "start": "499039",
    "end": "500360"
  },
  {
    "text": "setup This way when we actually execute",
    "start": "500360",
    "end": "503520"
  },
  {
    "text": "our sandbox we're passing in both that",
    "start": "503520",
    "end": "506000"
  },
  {
    "text": "context setup and the new code to be",
    "start": "506000",
    "end": "509000"
  },
  {
    "text": "executed Finally we're going to take the",
    "start": "509000",
    "end": "511440"
  },
  {
    "text": "output results which again was that",
    "start": "511440",
    "end": "513518"
  },
  {
    "text": "locals dictionary and we're going to",
    "start": "513519",
    "end": "515599"
  },
  {
    "text": "update our new variables which is saved",
    "start": "515599",
    "end": "517760"
  },
  {
    "text": "in our agent state for future use",
    "start": "517760",
    "end": "520640"
  },
  {
    "text": "Let's go ahead and try this with",
    "start": "520640",
    "end": "523919"
  },
  {
    "text": "Cloud37 We have a separate video on our",
    "start": "526200",
    "end": "528560"
  },
  {
    "text": "codeact agent which is really great and",
    "start": "528560",
    "end": "530320"
  },
  {
    "text": "you should check that out to learn more",
    "start": "530320",
    "end": "531680"
  },
  {
    "text": "about how codeact works But here it's",
    "start": "531680",
    "end": "533839"
  },
  {
    "text": "going to be pretty simple We're going to",
    "start": "533839",
    "end": "535839"
  },
  {
    "text": "instantiate our pi sandbox just like",
    "start": "535839",
    "end": "537920"
  },
  {
    "text": "before and we're going to pass this safe",
    "start": "537920",
    "end": "540000"
  },
  {
    "text": "execution environment into our create pi",
    "start": "540000",
    "end": "543600"
  },
  {
    "text": "eval function This then gives us that",
    "start": "543600",
    "end": "546080"
  },
  {
    "text": "eval function which we'll pass into the",
    "start": "546080",
    "end": "548480"
  },
  {
    "text": "create",
    "start": "548480",
    "end": "549480"
  },
  {
    "text": "codeact Once we compile the agent with",
    "start": "549480",
    "end": "551839"
  },
  {
    "text": "our check pointer we can then run",
    "start": "551839",
    "end": "555519"
  },
  {
    "text": "it Let's go ahead and run this agent on",
    "start": "556200",
    "end": "558640"
  },
  {
    "text": "a pretty hard physics problem We're",
    "start": "558640",
    "end": "560320"
  },
  {
    "text": "going to hit a baseball at a specific",
    "start": "560320",
    "end": "561760"
  },
  {
    "text": "angle and we're going to see how far",
    "start": "561760",
    "end": "563200"
  },
  {
    "text": "that baseball is going to travel from",
    "start": "563200",
    "end": "565040"
  },
  {
    "text": "where the batter originally hits",
    "start": "565040",
    "end": "567320"
  },
  {
    "text": "it Let's go ahead and take a look at",
    "start": "567320",
    "end": "569680"
  },
  {
    "text": "this output in Linksmith to see the full",
    "start": "569680",
    "end": "571600"
  },
  {
    "text": "stack trace Just like",
    "start": "571600",
    "end": "573880"
  },
  {
    "text": "before So now that we're in our",
    "start": "573880",
    "end": "575760"
  },
  {
    "text": "linksmith trace let's take a look at the",
    "start": "575760",
    "end": "577519"
  },
  {
    "text": "first model call to",
    "start": "577519",
    "end": "579240"
  },
  {
    "text": "chatthropic This is a system prompt that",
    "start": "579240",
    "end": "581839"
  },
  {
    "text": "essentially gives our agent the full",
    "start": "581839",
    "end": "583360"
  },
  {
    "text": "list of tools that it has at its",
    "start": "583360",
    "end": "585120"
  },
  {
    "text": "disposal So all of these math functions",
    "start": "585120",
    "end": "587839"
  },
  {
    "text": "It also gives a reminder to use Python",
    "start": "587839",
    "end": "589920"
  },
  {
    "text": "code to call all of these",
    "start": "589920",
    "end": "591480"
  },
  {
    "text": "tools We then get the human question",
    "start": "591480",
    "end": "594399"
  },
  {
    "text": "which is our physics problem about how",
    "start": "594399",
    "end": "596160"
  },
  {
    "text": "far the baseball will go And so the",
    "start": "596160",
    "end": "598720"
  },
  {
    "text": "first output from the first step is our",
    "start": "598720",
    "end": "600959"
  },
  {
    "text": "AI writing some Python code to help it",
    "start": "600959",
    "end": "603519"
  },
  {
    "text": "calculate the answer We set the",
    "start": "603519",
    "end": "605920"
  },
  {
    "text": "gravitational constant We use some other",
    "start": "605920",
    "end": "607839"
  },
  {
    "text": "equations to calculate how far the ball",
    "start": "607839",
    "end": "609600"
  },
  {
    "text": "travels and we iterate on this",
    "start": "609600",
    "end": "611279"
  },
  {
    "text": "calculation a few times What actually",
    "start": "611279",
    "end": "613279"
  },
  {
    "text": "happens in the sandbox is it takes in",
    "start": "613279",
    "end": "615200"
  },
  {
    "text": "the script as the input and then",
    "start": "615200",
    "end": "616720"
  },
  {
    "text": "actually runs the code and it makes use",
    "start": "616720",
    "end": "618800"
  },
  {
    "text": "of a lot of those math functions that we",
    "start": "618800",
    "end": "620560"
  },
  {
    "text": "had defined as tools",
    "start": "620560",
    "end": "622760"
  },
  {
    "text": "above Again there are two things",
    "start": "622760",
    "end": "624959"
  },
  {
    "text": "outputed here we get anything printed",
    "start": "624959",
    "end": "627279"
  },
  {
    "text": "out which is all of these calculations",
    "start": "627279",
    "end": "629200"
  },
  {
    "text": "and values but we also get that full",
    "start": "629200",
    "end": "631680"
  },
  {
    "text": "locals",
    "start": "631680",
    "end": "632600"
  },
  {
    "text": "dictionary This is helpful because if we",
    "start": "632600",
    "end": "634800"
  },
  {
    "text": "want to iterate again we'll have access",
    "start": "634800",
    "end": "636480"
  },
  {
    "text": "to all of these variables as a starting",
    "start": "636480",
    "end": "638839"
  },
  {
    "text": "point Finally we have a final chat and",
    "start": "638839",
    "end": "642560"
  },
  {
    "text": "we make this call to access the full",
    "start": "642560",
    "end": "644959"
  },
  {
    "text": "message history and formulate our final",
    "start": "644959",
    "end": "647279"
  },
  {
    "text": "output to the user",
    "start": "647279",
    "end": "651000"
  },
  {
    "text": "So in this video we talked about how you",
    "start": "651040",
    "end": "652959"
  },
  {
    "text": "can leverage the lang chain sandbox for",
    "start": "652959",
    "end": "655279"
  },
  {
    "text": "arbitrary code execution in a secure",
    "start": "655279",
    "end": "658040"
  },
  {
    "text": "environment One of the benefits is that",
    "start": "658040",
    "end": "660399"
  },
  {
    "text": "everything is executed locally Another",
    "start": "660399",
    "end": "662800"
  },
  {
    "text": "benefit is that the sandbox takes care",
    "start": "662800",
    "end": "664959"
  },
  {
    "text": "of the environment setup for you and",
    "start": "664959",
    "end": "667120"
  },
  {
    "text": "installs all of the required packages",
    "start": "667120",
    "end": "669519"
  },
  {
    "text": "And then finally you have options for",
    "start": "669519",
    "end": "671600"
  },
  {
    "text": "both stateless and stateful execution",
    "start": "671600",
    "end": "674720"
  },
  {
    "text": "We saw how you could use the sandbox as",
    "start": "674720",
    "end": "676959"
  },
  {
    "text": "a code as a tool for a react agent And",
    "start": "676959",
    "end": "680800"
  },
  {
    "text": "we also saw how you can use the sandbox",
    "start": "680800",
    "end": "682959"
  },
  {
    "text": "as the main execution environment for a",
    "start": "682959",
    "end": "685360"
  },
  {
    "text": "codeact style agent Thanks for watching",
    "start": "685360",
    "end": "690480"
  }
]