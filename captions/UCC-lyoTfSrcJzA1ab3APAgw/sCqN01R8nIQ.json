[
  {
    "text": "what's up everyone it's brace from Lang",
    "start": "359",
    "end": "1680"
  },
  {
    "text": "chain and I'm super excited to show off",
    "start": "1680",
    "end": "3480"
  },
  {
    "text": "our new native support for generative UI",
    "start": "3480",
    "end": "5680"
  },
  {
    "text": "in langra this is essentially an API",
    "start": "5680",
    "end": "7919"
  },
  {
    "text": "we've added which allows you to directly",
    "start": "7919",
    "end": "9920"
  },
  {
    "text": "register UI components with your langra",
    "start": "9920",
    "end": "12200"
  },
  {
    "text": "server and then inside of nodes uh yield",
    "start": "12200",
    "end": "14920"
  },
  {
    "text": "these components or push them to State",
    "start": "14920",
    "end": "16880"
  },
  {
    "text": "and then on the client right here you",
    "start": "16880",
    "end": "18880"
  },
  {
    "text": "can access those components which have",
    "start": "18880",
    "end": "20519"
  },
  {
    "text": "pushed which have been pushed to to the",
    "start": "20519",
    "end": "22160"
  },
  {
    "text": "state by your agent and render them",
    "start": "22160",
    "end": "24000"
  },
  {
    "text": "directly to the user so we see I sent",
    "start": "24000",
    "end": "25800"
  },
  {
    "text": "this query show me places to stay in New",
    "start": "25800",
    "end": "27519"
  },
  {
    "text": "York for eight people that called a",
    "start": "27519",
    "end": "29519"
  },
  {
    "text": "travel agent which extracted some",
    "start": "29519",
    "end": "31359"
  },
  {
    "text": "details from my query like the location",
    "start": "31359",
    "end": "33200"
  },
  {
    "text": "New York the number of guests8 it then",
    "start": "33200",
    "end": "35800"
  },
  {
    "text": "called the list accommodations tool and",
    "start": "35800",
    "end": "38360"
  },
  {
    "text": "with calling this tool um it triggered",
    "start": "38360",
    "end": "40440"
  },
  {
    "text": "the uh ui. push method which is going to",
    "start": "40440",
    "end": "42879"
  },
  {
    "text": "push this component to state where it",
    "start": "42879",
    "end": "44920"
  },
  {
    "text": "was then rendered for us right here we",
    "start": "44920",
    "end": "47120"
  },
  {
    "text": "can see this uh accommodations list",
    "start": "47120",
    "end": "49079"
  },
  {
    "text": "component is fully interactable um I can",
    "start": "49079",
    "end": "51160"
  },
  {
    "text": "click on them I can go out I can refresh",
    "start": "51160",
    "end": "53399"
  },
  {
    "text": "the page and they will persist all with",
    "start": "53399",
    "end": "55160"
  },
  {
    "text": "the same data and images and that's",
    "start": "55160",
    "end": "56760"
  },
  {
    "text": "because they work like any other react",
    "start": "56760",
    "end": "59039"
  },
  {
    "text": "component I def this the same way I",
    "start": "59039",
    "end": "60920"
  },
  {
    "text": "would Define it with um any other react",
    "start": "60920",
    "end": "62719"
  },
  {
    "text": "component I used the same reusable",
    "start": "62719",
    "end": "64878"
  },
  {
    "text": "components I used in the rest of this",
    "start": "64879",
    "end": "66200"
  },
  {
    "text": "app right I use the Shad CN Library this",
    "start": "66200",
    "end": "68240"
  },
  {
    "text": "is their Carousel component we recognize",
    "start": "68240",
    "end": "70280"
  },
  {
    "text": "the buttons um so you just Define this",
    "start": "70280",
    "end": "72240"
  },
  {
    "text": "like any other react component but the",
    "start": "72240",
    "end": "74200"
  },
  {
    "text": "only difference is you are registering",
    "start": "74200",
    "end": "76040"
  },
  {
    "text": "it with your Lang graph config and then",
    "start": "76040",
    "end": "77720"
  },
  {
    "text": "yielding it on the server another cool",
    "start": "77720",
    "end": "79759"
  },
  {
    "text": "thing about these components is I can",
    "start": "79759",
    "end": "80840"
  },
  {
    "text": "click on them right and we see this book",
    "start": "80840",
    "end": "82400"
  },
  {
    "text": "button if I click on this it's going to",
    "start": "82400",
    "end": "84200"
  },
  {
    "text": "send an API request to the langra server",
    "start": "84200",
    "end": "86720"
  },
  {
    "text": "because we give it a hook which allows",
    "start": "86720",
    "end": "88200"
  },
  {
    "text": "it to talk to the same server and and",
    "start": "88200",
    "end": "90000"
  },
  {
    "text": "it's going to send a new tool response",
    "start": "90000",
    "end": "92360"
  },
  {
    "text": "message which is going to be the booked",
    "start": "92360",
    "end": "94119"
  },
  {
    "text": "accommodation tool response a human",
    "start": "94119",
    "end": "96040"
  },
  {
    "text": "message and it's going to force the",
    "start": "96040",
    "end": "97240"
  },
  {
    "text": "graph to respond with some text once",
    "start": "97240",
    "end": "99960"
  },
  {
    "text": "again if I refresh the page it's going",
    "start": "99960",
    "end": "101640"
  },
  {
    "text": "to persist with this new state because",
    "start": "101640",
    "end": "103560"
  },
  {
    "text": "of the tool message that was added and",
    "start": "103560",
    "end": "105240"
  },
  {
    "text": "not the original um list ACC combination",
    "start": "105240",
    "end": "107920"
  },
  {
    "text": "State now before we jump into the code",
    "start": "107920",
    "end": "110079"
  },
  {
    "text": "let's take a quick look at a highle",
    "start": "110079",
    "end": "111960"
  },
  {
    "text": "diagram to see how this works so",
    "start": "111960",
    "end": "114079"
  },
  {
    "text": "essentially uh we have our list of",
    "start": "114079",
    "end": "115840"
  },
  {
    "text": "components right component one component",
    "start": "115840",
    "end": "117280"
  },
  {
    "text": "two and so on and then our graphs we're",
    "start": "117280",
    "end": "119360"
  },
  {
    "text": "already familiar with with graphs and",
    "start": "119360",
    "end": "120600"
  },
  {
    "text": "registering them in our Lang graph. Json",
    "start": "120600",
    "end": "122360"
  },
  {
    "text": "file and we just have to add a new",
    "start": "122360",
    "end": "124320"
  },
  {
    "text": "component registry in our Lang graph.",
    "start": "124320",
    "end": "125759"
  },
  {
    "text": "Json file to register all the different",
    "start": "125759",
    "end": "127640"
  },
  {
    "text": "components uh this component registry",
    "start": "127640",
    "end": "129640"
  },
  {
    "text": "will essentially be a map right where",
    "start": "129640",
    "end": "131599"
  },
  {
    "text": "you have keys and values the keys are",
    "start": "131599",
    "end": "133200"
  },
  {
    "text": "going to be names of the components the",
    "start": "133200",
    "end": "134879"
  },
  {
    "text": "values are going to be the components",
    "start": "134879",
    "end": "136800"
  },
  {
    "text": "themselves and then inside of your Lang",
    "start": "136800",
    "end": "139040"
  },
  {
    "text": "graph node you can use this ui. push",
    "start": "139040",
    "end": "141239"
  },
  {
    "text": "method which you can import from the",
    "start": "141239",
    "end": "142640"
  },
  {
    "text": "Lang graph Library passing in the name",
    "start": "142640",
    "end": "144760"
  },
  {
    "text": "of the component right component one",
    "start": "144760",
    "end": "146120"
  },
  {
    "text": "component one the props and then you",
    "start": "146120",
    "end": "148400"
  },
  {
    "text": "just need to return the UI items to",
    "start": "148400",
    "end": "150000"
  },
  {
    "text": "State you would need to add a new uh",
    "start": "150000",
    "end": "151640"
  },
  {
    "text": "State variable to your graph and the",
    "start": "151640",
    "end": "153879"
  },
  {
    "text": "nice thing about this is it has full",
    "start": "153879",
    "end": "155280"
  },
  {
    "text": "type safety so if I pass in the name",
    "start": "155280",
    "end": "156840"
  },
  {
    "text": "component one it's going to require me",
    "start": "156840",
    "end": "158840"
  },
  {
    "text": "to pass in whatever props I defined via",
    "start": "158840",
    "end": "161680"
  },
  {
    "text": "this props field and that way I don't",
    "start": "161680",
    "end": "163159"
  },
  {
    "text": "need to worry about you know defining a",
    "start": "163159",
    "end": "165360"
  },
  {
    "text": "random component name or or let's say I",
    "start": "165360",
    "end": "167319"
  },
  {
    "text": "misspell the component name it'll yell",
    "start": "167319",
    "end": "168640"
  },
  {
    "text": "at me because it knows exactly what",
    "start": "168640",
    "end": "169840"
  },
  {
    "text": "components are registered so you get",
    "start": "169840",
    "end": "171239"
  },
  {
    "text": "full typescript safety with pushing your",
    "start": "171239",
    "end": "173080"
  },
  {
    "text": "UI components you can also remove them",
    "start": "173080",
    "end": "175560"
  },
  {
    "text": "later on or right after this you can",
    "start": "175560",
    "end": "177519"
  },
  {
    "text": "stream them back and much more then once",
    "start": "177519",
    "end": "180159"
  },
  {
    "text": "I pushed this and add it to my state",
    "start": "180159",
    "end": "182200"
  },
  {
    "text": "inside my client I simply use the",
    "start": "182200",
    "end": "183799"
  },
  {
    "text": "Ustream Hook and the load external",
    "start": "183799",
    "end": "185519"
  },
  {
    "text": "component jsx components I then iterate",
    "start": "185519",
    "end": "187799"
  },
  {
    "text": "over all the messages in my stream ESS",
    "start": "187799",
    "end": "190040"
  },
  {
    "text": "since I tie each component that I render",
    "start": "190040",
    "end": "192200"
  },
  {
    "text": "to a message right we have this um UI",
    "start": "192200",
    "end": "195360"
  },
  {
    "text": "component is tied to the list",
    "start": "195360",
    "end": "196519"
  },
  {
    "text": "accommodations tool call message so I",
    "start": "196519",
    "end": "199239"
  },
  {
    "text": "iterate over the messages I then iterate",
    "start": "199239",
    "end": "200760"
  },
  {
    "text": "over the UI items in my state right the",
    "start": "200760",
    "end": "203000"
  },
  {
    "text": "same value here and then I just return",
    "start": "203000",
    "end": "205239"
  },
  {
    "text": "the load external component this is just",
    "start": "205239",
    "end": "207159"
  },
  {
    "text": "a jsx component I pass it in the IDS of",
    "start": "207159",
    "end": "209920"
  },
  {
    "text": "the messages and what this does is it",
    "start": "209920",
    "end": "211760"
  },
  {
    "text": "goes and makes a request to the langra",
    "start": "211760",
    "end": "213400"
  },
  {
    "text": "server uh and it says okay I need this",
    "start": "213400",
    "end": "216239"
  },
  {
    "text": "UI or react component here's the ID the",
    "start": "216239",
    "end": "218840"
  },
  {
    "text": "lra server can say okay I have that in",
    "start": "218840",
    "end": "220400"
  },
  {
    "text": "my registry it's then going to respond",
    "start": "220400",
    "end": "222000"
  },
  {
    "text": "with the Javascript file and the CSS so",
    "start": "222000",
    "end": "224640"
  },
  {
    "text": "that it can be rendered in your browser",
    "start": "224640",
    "end": "226840"
  },
  {
    "text": "um inside of a shadow Dom so doesn't",
    "start": "226840",
    "end": "228200"
  },
  {
    "text": "affect the other styling but still has",
    "start": "228200",
    "end": "229799"
  },
  {
    "text": "full support for styling and everything",
    "start": "229799",
    "end": "231599"
  },
  {
    "text": "else you can do with react so to start",
    "start": "231599",
    "end": "234799"
  },
  {
    "text": "you're going to want to clone the langra",
    "start": "234799",
    "end": "236480"
  },
  {
    "text": "JS genui examples repository I'll of",
    "start": "236480",
    "end": "238959"
  },
  {
    "text": "course have a link to this in the",
    "start": "238959",
    "end": "239959"
  },
  {
    "text": "description so we're going to copy the G",
    "start": "239959",
    "end": "241680"
  },
  {
    "text": "URL and then navigate to my terminal to",
    "start": "241680",
    "end": "243799"
  },
  {
    "text": "clone that and jump into the code and",
    "start": "243799",
    "end": "245319"
  },
  {
    "text": "see how this actually works under the",
    "start": "245319",
    "end": "246680"
  },
  {
    "text": "hood so remember my terminal I'm going",
    "start": "246680",
    "end": "248599"
  },
  {
    "text": "to run git clone and then the git URL I",
    "start": "248599",
    "end": "252720"
  },
  {
    "text": "hit enter we can see it clones and then",
    "start": "252720",
    "end": "254400"
  },
  {
    "text": "I can navigate into that directory once",
    "start": "254400",
    "end": "256600"
  },
  {
    "text": "I'm in here I'm going to run pnpm",
    "start": "256600",
    "end": "258079"
  },
  {
    "text": "install this uh project uses pnpm and I",
    "start": "258079",
    "end": "260160"
  },
  {
    "text": "want to install my depths and while this",
    "start": "260160",
    "end": "262199"
  },
  {
    "text": "is installing I can open it up in my IDE",
    "start": "262199",
    "end": "264680"
  },
  {
    "text": "and we can look at the different",
    "start": "264680",
    "end": "265759"
  },
  {
    "text": "environment variables that are required",
    "start": "265759",
    "end": "267000"
  },
  {
    "text": "and set those so if we open up the m.",
    "start": "267000",
    "end": "270080"
  },
  {
    "text": "example file we can see that the only",
    "start": "270080",
    "end": "271960"
  },
  {
    "text": "keys that are required are open aai and",
    "start": "271960",
    "end": "273880"
  },
  {
    "text": "Google uh we use Google as a routing",
    "start": "273880",
    "end": "276240"
  },
  {
    "text": "node and the supervisor agent in this",
    "start": "276240",
    "end": "277919"
  },
  {
    "text": "example just because Gemini 2.0 flash is",
    "start": "277919",
    "end": "280560"
  },
  {
    "text": "very quick uh and then open AI just for",
    "start": "280560",
    "end": "283000"
  },
  {
    "text": "general purpose um tool calling you can",
    "start": "283000",
    "end": "285520"
  },
  {
    "text": "also set your lsmith API keys if you",
    "start": "285520",
    "end": "288400"
  },
  {
    "text": "want for best-in-class tracing",
    "start": "288400",
    "end": "290039"
  },
  {
    "text": "durability however this is optional um",
    "start": "290039",
    "end": "292199"
  },
  {
    "text": "and then this repo has a few different",
    "start": "292199",
    "end": "293960"
  },
  {
    "text": "agents in it so you can see if we open",
    "start": "293960",
    "end": "296160"
  },
  {
    "text": "up the agent directory we have a chat",
    "start": "296160",
    "end": "297840"
  },
  {
    "text": "email uh code pizza order and so on just",
    "start": "297840",
    "end": "300520"
  },
  {
    "text": "different agents to demonstrate um the",
    "start": "300520",
    "end": "303000"
  },
  {
    "text": "different types of generative UI and",
    "start": "303000",
    "end": "304600"
  },
  {
    "text": "then also just tool calling and chat",
    "start": "304600",
    "end": "306400"
  },
  {
    "text": "interactions with the agent chat UI",
    "start": "306400",
    "end": "308479"
  },
  {
    "text": "which we saw in the beginning of the",
    "start": "308479",
    "end": "309360"
  },
  {
    "text": "video so if you want to be able to use",
    "start": "309360",
    "end": "310720"
  },
  {
    "text": "all those agents you'll need an",
    "start": "310720",
    "end": "311759"
  },
  {
    "text": "anthropic API key and a financial data",
    "start": "311759",
    "end": "314360"
  },
  {
    "text": "sets API key uh in the readme all of",
    "start": "314360",
    "end": "317560"
  },
  {
    "text": "these API keys and links to get them are",
    "start": "317560",
    "end": "320160"
  },
  {
    "text": "outlined um so of course you can go and",
    "start": "320160",
    "end": "321880"
  },
  {
    "text": "set those later if you don't want to",
    "start": "321880",
    "end": "323440"
  },
  {
    "text": "right now uh so I'm going to copy this",
    "start": "323440",
    "end": "325479"
  },
  {
    "text": "file paste it and then rename it to be",
    "start": "325479",
    "end": "327759"
  },
  {
    "text": "just. IM and then I'm going to set my",
    "start": "327759",
    "end": "330600"
  },
  {
    "text": "open Ai and Google API key great so I've",
    "start": "330600",
    "end": "334240"
  },
  {
    "text": "set my environment variables and the",
    "start": "334240",
    "end": "335560"
  },
  {
    "text": "first directory we're going to look in",
    "start": "335560",
    "end": "337000"
  },
  {
    "text": "is the agent uis you can see we have an",
    "start": "337000",
    "end": "338800"
  },
  {
    "text": "agents and agent UI directory this",
    "start": "338800",
    "end": "341400"
  },
  {
    "text": "contains the Lang graph agents and this",
    "start": "341400",
    "end": "343880"
  },
  {
    "text": "contains the UI components uh which my",
    "start": "343880",
    "end": "346199"
  },
  {
    "text": "agents will yield so we're going to be",
    "start": "346199",
    "end": "348360"
  },
  {
    "text": "looking at the trip planner agent and UI",
    "start": "348360",
    "end": "350520"
  },
  {
    "text": "components in this uh video so we're",
    "start": "350520",
    "end": "352240"
  },
  {
    "text": "going to open up the trip plan planner",
    "start": "352240",
    "end": "353720"
  },
  {
    "text": "directory and inside here you can see we",
    "start": "353720",
    "end": "355520"
  },
  {
    "text": "have two subdirectories accommodations",
    "start": "355520",
    "end": "357600"
  },
  {
    "text": "list which is the UI component we just",
    "start": "357600",
    "end": "359039"
  },
  {
    "text": "saw list the different accommodations um",
    "start": "359039",
    "end": "361440"
  },
  {
    "text": "or hotels places to stay and then",
    "start": "361440",
    "end": "363800"
  },
  {
    "text": "restaurants list which is another UI",
    "start": "363800",
    "end": "365600"
  },
  {
    "text": "component that can be yielded if you ask",
    "start": "365600",
    "end": "367039"
  },
  {
    "text": "it to recommend you uh",
    "start": "367039",
    "end": "368919"
  },
  {
    "text": "restaurants let's open up the",
    "start": "368919",
    "end": "370520"
  },
  {
    "text": "accommodations list file or folder and",
    "start": "370520",
    "end": "372680"
  },
  {
    "text": "you can see we have an index.css and an",
    "start": "372680",
    "end": "374919"
  },
  {
    "text": "index. TSX file inside the index.css if",
    "start": "374919",
    "end": "378240"
  },
  {
    "text": "we want to use Tailwind or add any",
    "start": "378240",
    "end": "379599"
  },
  {
    "text": "custom Styles we can Define them here",
    "start": "379599",
    "end": "381800"
  },
  {
    "text": "however this is not required if you",
    "start": "381800",
    "end": "383199"
  },
  {
    "text": "don't want to do any custom CSS like",
    "start": "383199",
    "end": "385039"
  },
  {
    "text": "this um and then inside my index. TSX",
    "start": "385039",
    "end": "388000"
  },
  {
    "text": "you can see we're importing my CSS file",
    "start": "388000",
    "end": "390039"
  },
  {
    "text": "and then I have a lot of react um this",
    "start": "390039",
    "end": "392560"
  },
  {
    "text": "is just general react code um if you've",
    "start": "392560",
    "end": "395400"
  },
  {
    "text": "ever written react code you should",
    "start": "395400",
    "end": "396599"
  },
  {
    "text": "recognize this um there's nothing",
    "start": "396599",
    "end": "398120"
  },
  {
    "text": "different you're literally just writing",
    "start": "398120",
    "end": "399759"
  },
  {
    "text": "react components and then you're able to",
    "start": "399759",
    "end": "401520"
  },
  {
    "text": "yield them inside of your L graph nodes",
    "start": "401520",
    "end": "404759"
  },
  {
    "text": "so as you can see I have a bunch of",
    "start": "404759",
    "end": "406199"
  },
  {
    "text": "different components I'm going to",
    "start": "406199",
    "end": "407280"
  },
  {
    "text": "collapse them all and we're going to",
    "start": "407280",
    "end": "408800"
  },
  {
    "text": "scroll down to the accommodations list",
    "start": "408800",
    "end": "410479"
  },
  {
    "text": "component this is the main component uh",
    "start": "410479",
    "end": "413319"
  },
  {
    "text": "which is yielded um every time you",
    "start": "413319",
    "end": "415199"
  },
  {
    "text": "called originally and we'll start from",
    "start": "415199",
    "end": "416759"
  },
  {
    "text": "the top so you can see I def find some",
    "start": "416759",
    "end": "418000"
  },
  {
    "text": "props uh this is because inside my",
    "start": "418000",
    "end": "420400"
  },
  {
    "text": "lingraph nodes I can pass it props",
    "start": "420400",
    "end": "422280"
  },
  {
    "text": "because these components are a dynamic",
    "start": "422280",
    "end": "423919"
  },
  {
    "text": "so I require a tool call ID trip details",
    "start": "423919",
    "end": "427639"
  },
  {
    "text": "and accommodations the trip details um",
    "start": "427639",
    "end": "429879"
  },
  {
    "text": "are the trip details that we got from",
    "start": "429879",
    "end": "431319"
  },
  {
    "text": "the extract tool call that we saw in the",
    "start": "431319",
    "end": "432800"
  },
  {
    "text": "beginning of the video and",
    "start": "432800",
    "end": "433879"
  },
  {
    "text": "accommodations are just a static list of",
    "start": "433879",
    "end": "436800"
  },
  {
    "text": "um different places to stay which I've",
    "start": "436800",
    "end": "438400"
  },
  {
    "text": "predefined because we're not actually",
    "start": "438400",
    "end": "439520"
  },
  {
    "text": "calling a travel",
    "start": "439520",
    "end": "440879"
  },
  {
    "text": "API now the very first line uh we Define",
    "start": "440879",
    "end": "444240"
  },
  {
    "text": "This Thread variable which is the result",
    "start": "444240",
    "end": "445759"
  },
  {
    "text": "of the Ustream context hook if we scroll",
    "start": "445759",
    "end": "448440"
  },
  {
    "text": "up we can see that that I'm importing",
    "start": "448440",
    "end": "450319"
  },
  {
    "text": "this from the langra SDK react UI uh",
    "start": "450319",
    "end": "454680"
  },
  {
    "text": "package and this is a special context um",
    "start": "454680",
    "end": "457800"
  },
  {
    "text": "hook that we provide to all the",
    "start": "457800",
    "end": "459599"
  },
  {
    "text": "different custom UI components if you",
    "start": "459599",
    "end": "461560"
  },
  {
    "text": "yield them so uh you can only access",
    "start": "461560",
    "end": "463919"
  },
  {
    "text": "this inside of a UI component um which",
    "start": "463919",
    "end": "466560"
  },
  {
    "text": "is being yielded by a graph if you not",
    "start": "466560",
    "end": "469080"
  },
  {
    "text": "inside of a one of these custom",
    "start": "469080",
    "end": "470639"
  },
  {
    "text": "generative UI UI components you would",
    "start": "470639",
    "end": "472039"
  },
  {
    "text": "just use the plain us Stream hook um but",
    "start": "472039",
    "end": "474560"
  },
  {
    "text": "inside of these components we want to be",
    "start": "474560",
    "end": "475879"
  },
  {
    "text": "able to give them access to all the same",
    "start": "475879",
    "end": "478080"
  },
  {
    "text": "API requests and State values that we do",
    "start": "478080",
    "end": "480599"
  },
  {
    "text": "in the used Stream hook so we have this",
    "start": "480599",
    "end": "483000"
  },
  {
    "text": "custom Ustream context hook which is",
    "start": "483000",
    "end": "485000"
  },
  {
    "text": "provided to it you can see we passed in",
    "start": "485000",
    "end": "487319"
  },
  {
    "text": "a generics for the state of our graph",
    "start": "487319",
    "end": "489800"
  },
  {
    "text": "which is a messages key and then a UI",
    "start": "489800",
    "end": "492639"
  },
  {
    "text": "key with a list of UI messages below",
    "start": "492639",
    "end": "495599"
  },
  {
    "text": "that we Define two State variables one",
    "start": "495599",
    "end": "497599"
  },
  {
    "text": "for the selected accommodation uh",
    "start": "497599",
    "end": "499479"
  },
  {
    "text": "whenever you select an accommodation to",
    "start": "499479",
    "end": "501199"
  },
  {
    "text": "show more details it gets set right here",
    "start": "501199",
    "end": "503800"
  },
  {
    "text": "and then whether or not an accommodation",
    "start": "503800",
    "end": "505280"
  },
  {
    "text": "is book so true or false after that we",
    "start": "505280",
    "end": "508360"
  },
  {
    "text": "run this use effect on the very first",
    "start": "508360",
    "end": "510520"
  },
  {
    "text": "load every time and essentially what it",
    "start": "510520",
    "end": "512479"
  },
  {
    "text": "does is it goes to check to see if",
    "start": "512479",
    "end": "514320"
  },
  {
    "text": "you've already taken the action inside",
    "start": "514320",
    "end": "516800"
  },
  {
    "text": "of this component so this action is",
    "start": "516800",
    "end": "518000"
  },
  {
    "text": "booking the accommodation so we say if",
    "start": "518000",
    "end": "519919"
  },
  {
    "text": "accommodation booked is true or the type",
    "start": "519919",
    "end": "522080"
  },
  {
    "text": "of Windows undefined so um we haven't",
    "start": "522080",
    "end": "523959"
  },
  {
    "text": "loaded around the client yet then return",
    "start": "523959",
    "end": "525800"
  },
  {
    "text": "all right so if a combination book is",
    "start": "525800",
    "end": "527000"
  },
  {
    "text": "true don't load this if this is false it",
    "start": "527000",
    "end": "529640"
  },
  {
    "text": "likely means that it's the first page",
    "start": "529640",
    "end": "531160"
  },
  {
    "text": "load and we're going to call this get",
    "start": "531160",
    "end": "532760"
  },
  {
    "text": "tool response function passing in the",
    "start": "532760",
    "end": "534839"
  },
  {
    "text": "tool call ID and the result of the",
    "start": "534839",
    "end": "536640"
  },
  {
    "text": "Ustream context this is just a UIL",
    "start": "536640",
    "end": "539000"
  },
  {
    "text": "function which which takes in the tool",
    "start": "539000",
    "end": "540120"
  },
  {
    "text": "call ID the thread and then iterates",
    "start": "540120",
    "end": "542600"
  },
  {
    "text": "over all the messages in the thread uh",
    "start": "542600",
    "end": "545000"
  },
  {
    "text": "and it attempts to find a tool call",
    "start": "545000",
    "end": "547240"
  },
  {
    "text": "response so message type equals tool",
    "start": "547240",
    "end": "549200"
  },
  {
    "text": "this is a tool response message um which",
    "start": "549200",
    "end": "551320"
  },
  {
    "text": "has the same tool call ID that I passed",
    "start": "551320",
    "end": "552880"
  },
  {
    "text": "in we do this because in order to",
    "start": "552880",
    "end": "555120"
  },
  {
    "text": "trigger this accommodations list",
    "start": "555120",
    "end": "556880"
  },
  {
    "text": "component uh inside my L graph graph I",
    "start": "556880",
    "end": "559600"
  },
  {
    "text": "call a tool so we have an AI message",
    "start": "559600",
    "end": "561320"
  },
  {
    "text": "with a tool call that is the list",
    "start": "561320",
    "end": "563399"
  },
  {
    "text": "accommodations tool that we saw in the",
    "start": "563399",
    "end": "564880"
  },
  {
    "text": "chat agent UI and then once that's",
    "start": "564880",
    "end": "567320"
  },
  {
    "text": "called we render this UI component now",
    "start": "567320",
    "end": "569040"
  },
  {
    "text": "if a user is going to book an",
    "start": "569040",
    "end": "570360"
  },
  {
    "text": "accommodation the way we ass set that in",
    "start": "570360",
    "end": "572600"
  },
  {
    "text": "our graph state is by sending in a tool",
    "start": "572600",
    "end": "574600"
  },
  {
    "text": "response saying booked accommodation and",
    "start": "574600",
    "end": "576880"
  },
  {
    "text": "that's the and we do that because on new",
    "start": "576880",
    "end": "579160"
  },
  {
    "text": "page loads we want to be able to check",
    "start": "579160",
    "end": "580839"
  },
  {
    "text": "um and see if the user has booked an",
    "start": "580839",
    "end": "582079"
  },
  {
    "text": "accommodation so if we pass in that tool",
    "start": "582079",
    "end": "584000"
  },
  {
    "text": "response with the corresponding tool ID",
    "start": "584000",
    "end": "585839"
  },
  {
    "text": "and that's then in the state we know",
    "start": "585839",
    "end": "587720"
  },
  {
    "text": "that the um user has already taken the",
    "start": "587720",
    "end": "590240"
  },
  {
    "text": "booked action and we should show that",
    "start": "590240",
    "end": "591760"
  },
  {
    "text": "this is booked if there is no tool",
    "start": "591760",
    "end": "593560"
  },
  {
    "text": "response with that tool call ID we know",
    "start": "593560",
    "end": "595320"
  },
  {
    "text": "that no action has been taken and we",
    "start": "595320",
    "end": "596600"
  },
  {
    "text": "don't need to do anything um but if this",
    "start": "596600",
    "end": "598360"
  },
  {
    "text": "is true we then set accommodation book",
    "start": "598360",
    "end": "600279"
  },
  {
    "text": "to true and then we parse the Json of",
    "start": "600279",
    "end": "602880"
  },
  {
    "text": "the content field um when we look inside",
    "start": "602880",
    "end": "605279"
  },
  {
    "text": "the handle book accommodation function",
    "start": "605279",
    "end": "606600"
  },
  {
    "text": "you'll see that we're actually setting",
    "start": "606600",
    "end": "607800"
  },
  {
    "text": "these two details inside of the tool",
    "start": "607800",
    "end": "610000"
  },
  {
    "text": "message when we submit it so we extract",
    "start": "610000",
    "end": "612240"
  },
  {
    "text": "that content and then set the selected",
    "start": "612240",
    "end": "614240"
  },
  {
    "text": "accommodation field just so the booked",
    "start": "614240",
    "end": "616600"
  },
  {
    "text": "accommodation um component is able to",
    "start": "616600",
    "end": "618760"
  },
  {
    "text": "render with the proper details that the",
    "start": "618760",
    "end": "620600"
  },
  {
    "text": "user",
    "start": "620600",
    "end": "621440"
  },
  {
    "text": "booked now let's look at the handle book",
    "start": "621440",
    "end": "623800"
  },
  {
    "text": "accommodation function if we expand this",
    "start": "623800",
    "end": "625720"
  },
  {
    "text": "we can see it takes in an accommodation",
    "start": "625720",
    "end": "627519"
  },
  {
    "text": "and then creates this order details",
    "start": "627519",
    "end": "628959"
  },
  {
    "text": "object with accommodation and trip",
    "start": "628959",
    "end": "630560"
  },
  {
    "text": "details you can see these are the same",
    "start": "630560",
    "end": "632360"
  },
  {
    "text": "that we that we extracted from the tool",
    "start": "632360",
    "end": "634800"
  },
  {
    "text": "result context or content and that's",
    "start": "634800",
    "end": "637600"
  },
  {
    "text": "because when we submit a new run in our",
    "start": "637600",
    "end": "639680"
  },
  {
    "text": "thread we pass in a list of messages and",
    "start": "639680",
    "end": "642760"
  },
  {
    "text": "this contains the tool call right this",
    "start": "642760",
    "end": "644959"
  },
  {
    "text": "is the tool call that our get tool",
    "start": "644959",
    "end": "646240"
  },
  {
    "text": "response function was able to extract",
    "start": "646240",
    "end": "648000"
  },
  {
    "text": "with the tool call ID this special do",
    "start": "648000",
    "end": "650440"
  },
  {
    "text": "not render ID pref prefix which",
    "start": "650440",
    "end": "652720"
  },
  {
    "text": "basically tells the agent chat UI don't",
    "start": "652720",
    "end": "655120"
  },
  {
    "text": "render this tool response in the UI uh",
    "start": "655120",
    "end": "657560"
  },
  {
    "text": "the user does not need to see this and",
    "start": "657560",
    "end": "659120"
  },
  {
    "text": "then the stringified order details so",
    "start": "659120",
    "end": "660760"
  },
  {
    "text": "you see right here with the order",
    "start": "660760",
    "end": "661639"
  },
  {
    "text": "details we stringified to put into",
    "start": "661639",
    "end": "663360"
  },
  {
    "text": "content and then we're able to parse",
    "start": "663360",
    "end": "664720"
  },
  {
    "text": "that um on every page load we also add",
    "start": "664720",
    "end": "667399"
  },
  {
    "text": "this human message just uh for some",
    "start": "667399",
    "end": "669560"
  },
  {
    "text": "added user experience so that the user",
    "start": "669560",
    "end": "671200"
  },
  {
    "text": "can see that they booked this com",
    "start": "671200",
    "end": "673160"
  },
  {
    "text": "combination name for this many guests um",
    "start": "673160",
    "end": "675720"
  },
  {
    "text": "one other thing we're not just passing",
    "start": "675720",
    "end": "677680"
  },
  {
    "text": "this new request in via the first",
    "start": "677680",
    "end": "679600"
  },
  {
    "text": "argument which would be just updating",
    "start": "679600",
    "end": "680800"
  },
  {
    "text": "the state and triggering new run because",
    "start": "680800",
    "end": "683000"
  },
  {
    "text": "our agent uh which calls the travel",
    "start": "683000",
    "end": "685320"
  },
  {
    "text": "planning agent is a supervisor uh the",
    "start": "685320",
    "end": "687320"
  },
  {
    "text": "way it works is it first calls a router",
    "start": "687320",
    "end": "689320"
  },
  {
    "text": "node that then determines based on your",
    "start": "689320",
    "end": "691360"
  },
  {
    "text": "uh chat context which agent it should",
    "start": "691360",
    "end": "693760"
  },
  {
    "text": "route to um if it does decide that it",
    "start": "693760",
    "end": "696120"
  },
  {
    "text": "got wants to go to the trip planner",
    "start": "696120",
    "end": "697120"
  },
  {
    "text": "it'll route there however in this case",
    "start": "697120",
    "end": "699720"
  },
  {
    "text": "we know that if you book an",
    "start": "699720",
    "end": "701480"
  },
  {
    "text": "accommodation we don't want to go to the",
    "start": "701480",
    "end": "703360"
  },
  {
    "text": "router we know exactly where we want to",
    "start": "703360",
    "end": "704839"
  },
  {
    "text": "go it should be the general input",
    "start": "704839",
    "end": "706120"
  },
  {
    "text": "response uh because this uh typically",
    "start": "706120",
    "end": "708760"
  },
  {
    "text": "can trip up the router because it sees",
    "start": "708760",
    "end": "711040"
  },
  {
    "text": "that there's a book accommodation tool",
    "start": "711040",
    "end": "712560"
  },
  {
    "text": "call and it thinks needs to call the",
    "start": "712560",
    "end": "713920"
  },
  {
    "text": "trip planning agent so we use the",
    "start": "713920",
    "end": "716079"
  },
  {
    "text": "command uh API to just update the state",
    "start": "716079",
    "end": "718480"
  },
  {
    "text": "with this new tool me message human",
    "start": "718480",
    "end": "720079"
  },
  {
    "text": "message and then tell it go directly to",
    "start": "720079",
    "end": "721600"
  },
  {
    "text": "the general input node which is the last",
    "start": "721600",
    "end": "723480"
  },
  {
    "text": "node in the supervisor agent which just",
    "start": "723480",
    "end": "725079"
  },
  {
    "text": "sends a plain text response um and if we",
    "start": "725079",
    "end": "727279"
  },
  {
    "text": "go back to the chat interface we can see",
    "start": "727279",
    "end": "730200"
  },
  {
    "text": "that is the result of this so we booked",
    "start": "730200",
    "end": "732279"
  },
  {
    "text": "accommodations to a human message and",
    "start": "732279",
    "end": "733480"
  },
  {
    "text": "then we had the command API called the",
    "start": "733480",
    "end": "735519"
  },
  {
    "text": "uh General input node directly and that",
    "start": "735519",
    "end": "738040"
  },
  {
    "text": "sends in this text message so we then",
    "start": "738040",
    "end": "740480"
  },
  {
    "text": "Set uh set accommodation book to true",
    "start": "740480",
    "end": "742959"
  },
  {
    "text": "because the user just booked the",
    "start": "742959",
    "end": "744560"
  },
  {
    "text": "accommodation um and then we have a",
    "start": "744560",
    "end": "746560"
  },
  {
    "text": "check right here uh which we don't need",
    "start": "746560",
    "end": "748320"
  },
  {
    "text": "to worry about now we have these right",
    "start": "748320",
    "end": "750760"
  },
  {
    "text": "here for on every page load so on the",
    "start": "750760",
    "end": "753120"
  },
  {
    "text": "page load if accommodation booked is",
    "start": "753120",
    "end": "754639"
  },
  {
    "text": "true and selected accommodation is true",
    "start": "754639",
    "end": "756279"
  },
  {
    "text": "we return this book accommodation",
    "start": "756279",
    "end": "758240"
  },
  {
    "text": "component which is this component right",
    "start": "758240",
    "end": "759920"
  },
  {
    "text": "here right so we have our use effect it",
    "start": "759920",
    "end": "761959"
  },
  {
    "text": "runs if it finds a book accommodation it",
    "start": "761959",
    "end": "763720"
  },
  {
    "text": "sets these State variables and then",
    "start": "763720",
    "end": "765600"
  },
  {
    "text": "we're able to return that UI component",
    "start": "765600",
    "end": "768760"
  },
  {
    "text": "um if just accommodation booked is true",
    "start": "768760",
    "end": "771399"
  },
  {
    "text": "like if we weren't able to parse the",
    "start": "771399",
    "end": "772399"
  },
  {
    "text": "Json we still want to say successfully",
    "start": "772399",
    "end": "774399"
  },
  {
    "text": "booked",
    "start": "774399",
    "end": "775560"
  },
  {
    "text": "accommodation next if just selected",
    "start": "775560",
    "end": "777800"
  },
  {
    "text": "accommodation is true we want to return",
    "start": "777800",
    "end": "779440"
  },
  {
    "text": "the selected accommodation function or",
    "start": "779440",
    "end": "781519"
  },
  {
    "text": "uh react component and this happens when",
    "start": "781519",
    "end": "784000"
  },
  {
    "text": "a user selects an accommodation inside",
    "start": "784000",
    "end": "786000"
  },
  {
    "text": "of that Carousel list um we want to then",
    "start": "786000",
    "end": "788320"
  },
  {
    "text": "render just the selected accommodation",
    "start": "788320",
    "end": "790320"
  },
  {
    "text": "View and then finally we have the main",
    "start": "790320",
    "end": "793040"
  },
  {
    "text": "uh Carousel component which renders all",
    "start": "793040",
    "end": "795600"
  },
  {
    "text": "of the different um accommodations via",
    "start": "795600",
    "end": "798839"
  },
  {
    "text": "this accommodation card so as you can",
    "start": "798839",
    "end": "800639"
  },
  {
    "text": "see it works just like any normal react",
    "start": "800639",
    "end": "803000"
  },
  {
    "text": "component we can call apis we have",
    "start": "803000",
    "end": "804959"
  },
  {
    "text": "access to that Ustream context hook um",
    "start": "804959",
    "end": "806920"
  },
  {
    "text": "we have the use effect hook um and we're",
    "start": "806920",
    "end": "808519"
  },
  {
    "text": "just rendering react components like you",
    "start": "808519",
    "end": "809920"
  },
  {
    "text": "would with any other component so that",
    "start": "809920",
    "end": "812920"
  },
  {
    "text": "is how you would Implement a gener UI",
    "start": "812920",
    "end": "815120"
  },
  {
    "text": "component now that we've seen that we",
    "start": "815120",
    "end": "816880"
  },
  {
    "text": "can go into the index. TSX file inside",
    "start": "816880",
    "end": "819199"
  },
  {
    "text": "of our agent uis and you see here we're",
    "start": "819199",
    "end": "821120"
  },
  {
    "text": "defining a component map we need to do",
    "start": "821120",
    "end": "823040"
  },
  {
    "text": "this because we need to register all the",
    "start": "823040",
    "end": "824639"
  },
  {
    "text": "components we have defined for our agent",
    "start": "824639",
    "end": "827680"
  },
  {
    "text": "um inside this component map function",
    "start": "827680",
    "end": "829720"
  },
  {
    "text": "and then if we open up our Lang graph.",
    "start": "829720",
    "end": "831360"
  },
  {
    "text": "Json you can see we have this new UI",
    "start": "831360",
    "end": "834120"
  },
  {
    "text": "object where we pass in a key agent and",
    "start": "834120",
    "end": "837320"
  },
  {
    "text": "this is which agent in our graphs should",
    "start": "837320",
    "end": "839160"
  },
  {
    "text": "have a should have access to these UI",
    "start": "839160",
    "end": "841360"
  },
  {
    "text": "components so we see the uh main",
    "start": "841360",
    "end": "843360"
  },
  {
    "text": "supervisor agent should have access to",
    "start": "843360",
    "end": "845519"
  },
  {
    "text": "all of the UI components inside this",
    "start": "845519",
    "end": "848000"
  },
  {
    "text": "component map um and that's how we",
    "start": "848000",
    "end": "850279"
  },
  {
    "text": "register our UI components with our",
    "start": "850279",
    "end": "851680"
  },
  {
    "text": "graph and it's how we're able to map",
    "start": "851680",
    "end": "853480"
  },
  {
    "text": "back to them inside of the um L graph",
    "start": "853480",
    "end": "855880"
  },
  {
    "text": "nodes and then also on the front end in",
    "start": "855880",
    "end": "857639"
  },
  {
    "text": "our web app to actually show them to the",
    "start": "857639",
    "end": "859880"
  },
  {
    "text": "user so that is how you will manage and",
    "start": "859880",
    "end": "862720"
  },
  {
    "text": "register all your your UI components now",
    "start": "862720",
    "end": "865160"
  },
  {
    "text": "let's jump into the agent code and see",
    "start": "865160",
    "end": "867480"
  },
  {
    "text": "exactly how we're yielding these UI",
    "start": "867480",
    "end": "869880"
  },
  {
    "text": "components inside of our nodes based on",
    "start": "869880",
    "end": "872079"
  },
  {
    "text": "tool calls or any other logic okay so",
    "start": "872079",
    "end": "874839"
  },
  {
    "text": "I'm inside of the tools. TS file which",
    "start": "874839",
    "end": "877199"
  },
  {
    "text": "is just a simple call tools node if we",
    "start": "877199",
    "end": "879720"
  },
  {
    "text": "quickly go and look at the trip planner",
    "start": "879720",
    "end": "881959"
  },
  {
    "text": "agent we can see there's a few nodes",
    "start": "881959",
    "end": "884240"
  },
  {
    "text": "before this uh to make sure we have the",
    "start": "884240",
    "end": "886120"
  },
  {
    "text": "proper trip details and then eventually",
    "start": "886120",
    "end": "888279"
  },
  {
    "text": "it'll call the tool nodes no tool call",
    "start": "888279",
    "end": "890959"
  },
  {
    "text": "tools node inside of here very simple we",
    "start": "890959",
    "end": "894480"
  },
  {
    "text": "first Define this typed UI function",
    "start": "894480",
    "end": "896399"
  },
  {
    "text": "which we import from the Lang graph SDK",
    "start": "896399",
    "end": "898480"
  },
  {
    "text": "react UI by a server passing in the",
    "start": "898480",
    "end": "900839"
  },
  {
    "text": "generic of the component map so that",
    "start": "900839",
    "end": "902360"
  },
  {
    "text": "this UI value knows exactly which",
    "start": "902360",
    "end": "904519"
  },
  {
    "text": "components have access to it um and it",
    "start": "904519",
    "end": "907120"
  },
  {
    "text": "needs this so that it knows which names",
    "start": "907120",
    "end": "910240"
  },
  {
    "text": "of the components and then also the",
    "start": "910240",
    "end": "911800"
  },
  {
    "text": "types for the props so we pass that in",
    "start": "911800",
    "end": "914000"
  },
  {
    "text": "and then also the config and that's how",
    "start": "914000",
    "end": "915360"
  },
  {
    "text": "it's able to map it back um with our L",
    "start": "915360",
    "end": "917279"
  },
  {
    "text": "graph server so now we have our UI value",
    "start": "917279",
    "end": "920120"
  },
  {
    "text": "here and this is how we're going to be",
    "start": "920120",
    "end": "921720"
  },
  {
    "text": "uh creating removing and editing UI",
    "start": "921720",
    "end": "924040"
  },
  {
    "text": "components and then we just have a super",
    "start": "924040",
    "end": "925759"
  },
  {
    "text": "simple llm call to chat open AI we bind",
    "start": "925759",
    "end": "928440"
  },
  {
    "text": "a list of tools you can see it's list",
    "start": "928440",
    "end": "930319"
  },
  {
    "text": "accommodations and list restaurants we",
    "start": "930319",
    "end": "932639"
  },
  {
    "text": "saw the list accommodations tool call",
    "start": "932639",
    "end": "935040"
  },
  {
    "text": "right here um and they are empty objects",
    "start": "935040",
    "end": "937759"
  },
  {
    "text": "just because we want the LM to say okay",
    "start": "937759",
    "end": "939240"
  },
  {
    "text": "if the user wants to uh list or see",
    "start": "939240",
    "end": "941920"
  },
  {
    "text": "accommodations or see restaurants call",
    "start": "941920",
    "end": "944279"
  },
  {
    "text": "this tool or call this tool um and then",
    "start": "944279",
    "end": "946800"
  },
  {
    "text": "after we call the response we find the",
    "start": "946800",
    "end": "948920"
  },
  {
    "text": "tool call using another util which just",
    "start": "948920",
    "end": "951199"
  },
  {
    "text": "Returns the name args and Tool call ID",
    "start": "951199",
    "end": "954519"
  },
  {
    "text": "based on the name of a tool call from",
    "start": "954519",
    "end": "955880"
  },
  {
    "text": "the response so we say if list",
    "start": "955880",
    "end": "958240"
  },
  {
    "text": "accommodations tool call is true then",
    "start": "958240",
    "end": "960279"
  },
  {
    "text": "we're going to use this UI value which",
    "start": "960279",
    "end": "961839"
  },
  {
    "text": "we got from the typed UI function and",
    "start": "961839",
    "end": "963720"
  },
  {
    "text": "we're going to push a new component uh",
    "start": "963720",
    "end": "966040"
  },
  {
    "text": "there's a few different methods you can",
    "start": "966040",
    "end": "967160"
  },
  {
    "text": "call on this so if we look at the return",
    "start": "967160",
    "end": "968920"
  },
  {
    "text": "type we can see that it gives us access",
    "start": "968920",
    "end": "971360"
  },
  {
    "text": "to push delete and items so push of",
    "start": "971360",
    "end": "975319"
  },
  {
    "text": "course is how you create a new component",
    "start": "975319",
    "end": "977279"
  },
  {
    "text": "so whenever we have this tool call we",
    "start": "977279",
    "end": "979160"
  },
  {
    "text": "want to render this component on the",
    "start": "979160",
    "end": "981399"
  },
  {
    "text": "client so we push a new component",
    "start": "981399",
    "end": "983440"
  },
  {
    "text": "passing in the name and if we go back to",
    "start": "983440",
    "end": "985759"
  },
  {
    "text": "our component map file we can see that",
    "start": "985759",
    "end": "989040"
  },
  {
    "text": "the accommodations list key maps to our",
    "start": "989040",
    "end": "992040"
  },
  {
    "text": "accommodations list component we just",
    "start": "992040",
    "end": "993560"
  },
  {
    "text": "looked at so we're passing in a name of",
    "start": "993560",
    "end": "995560"
  },
  {
    "text": "accommodations list so it knows which",
    "start": "995560",
    "end": "996880"
  },
  {
    "text": "component to access and then a series of",
    "start": "996880",
    "end": "999000"
  },
  {
    "text": "props this is the tool call ID and then",
    "start": "999000",
    "end": "1001319"
  },
  {
    "text": "the trip details and accommodations so",
    "start": "1001319",
    "end": "1003639"
  },
  {
    "text": "we pass in that name and props and then",
    "start": "1003639",
    "end": "1005480"
  },
  {
    "text": "also a corresponding AI message um and",
    "start": "1005480",
    "end": "1007839"
  },
  {
    "text": "this is how we'll know uh where in the",
    "start": "1007839",
    "end": "1010680"
  },
  {
    "text": "uh list of messages on the client to",
    "start": "1010680",
    "end": "1012279"
  },
  {
    "text": "render this UI component so that we",
    "start": "1012279",
    "end": "1014079"
  },
  {
    "text": "don't you know render this at the top or",
    "start": "1014079",
    "end": "1016319"
  },
  {
    "text": "way down below how it's able to know",
    "start": "1016319",
    "end": "1018319"
  },
  {
    "text": "even after oh my graph is not running um",
    "start": "1018319",
    "end": "1021399"
  },
  {
    "text": "but that that's how it's able to know",
    "start": "1021399",
    "end": "1022639"
  },
  {
    "text": "after each refresh where in the state to",
    "start": "1022639",
    "end": "1025798"
  },
  {
    "text": "show this UI component so once again we",
    "start": "1025799",
    "end": "1027720"
  },
  {
    "text": "have our name which is the name of the",
    "start": "1027720",
    "end": "1029000"
  },
  {
    "text": "component from our component map passing",
    "start": "1029000",
    "end": "1030678"
  },
  {
    "text": "any props and then the corresponding AI",
    "start": "1030679",
    "end": "1033038"
  },
  {
    "text": "message that we just called we do the",
    "start": "1033039",
    "end": "1035839"
  },
  {
    "text": "same for restaurants and then we return",
    "start": "1035839",
    "end": "1038000"
  },
  {
    "text": "our AI message and ui. items uh we",
    "start": "1038000",
    "end": "1040918"
  },
  {
    "text": "return this into our state so that our L",
    "start": "1040919",
    "end": "1042720"
  },
  {
    "text": "graph state knows which items were set",
    "start": "1042720",
    "end": "1045160"
  },
  {
    "text": "in the UI um and it saves that in a",
    "start": "1045160",
    "end": "1047199"
  },
  {
    "text": "check pointer once again so that after",
    "start": "1047199",
    "end": "1048960"
  },
  {
    "text": "every page refresh or if we want to say",
    "start": "1048960",
    "end": "1050520"
  },
  {
    "text": "go back in time to some specific",
    "start": "1050520",
    "end": "1052240"
  },
  {
    "text": "checkpoint in our uh thread State we can",
    "start": "1052240",
    "end": "1055160"
  },
  {
    "text": "do that you can also call ui. delete uh",
    "start": "1055160",
    "end": "1059120"
  },
  {
    "text": "passing in an let's look at the return",
    "start": "1059120",
    "end": "1062039"
  },
  {
    "text": "type so ui. delete passing in an ID",
    "start": "1062039",
    "end": "1065039"
  },
  {
    "text": "which returns a remove ID message if we",
    "start": "1065039",
    "end": "1067679"
  },
  {
    "text": "were to do that we would of course need",
    "start": "1067679",
    "end": "1069160"
  },
  {
    "text": "to return ui. items as well so it has",
    "start": "1069160",
    "end": "1071400"
  },
  {
    "text": "that remove message um and that's how",
    "start": "1071400",
    "end": "1073559"
  },
  {
    "text": "our Lan graph state knows how to or",
    "start": "1073559",
    "end": "1075679"
  },
  {
    "text": "sorry which UI components to remove and",
    "start": "1075679",
    "end": "1077960"
  },
  {
    "text": "you would get this ID from the UI",
    "start": "1077960",
    "end": "1080120"
  },
  {
    "text": "message we can see that push returns a",
    "start": "1080120",
    "end": "1082480"
  },
  {
    "text": "UI message and inside the UI message",
    "start": "1082480",
    "end": "1084520"
  },
  {
    "text": "there is an ID field so you just pass",
    "start": "1084520",
    "end": "1086440"
  },
  {
    "text": "that ID to delete and that's how you can",
    "start": "1086440",
    "end": "1088000"
  },
  {
    "text": "remove components uh from the thread",
    "start": "1088000",
    "end": "1091080"
  },
  {
    "text": "State and then once again from your",
    "start": "1091080",
    "end": "1093200"
  },
  {
    "text": "UI so as you can see it's fairly",
    "start": "1093200",
    "end": "1095280"
  },
  {
    "text": "straightforward and simple we just have",
    "start": "1095280",
    "end": "1097039"
  },
  {
    "text": "this UI field in our state right UI uh",
    "start": "1097039",
    "end": "1099840"
  },
  {
    "text": "which is just a list of UI message or",
    "start": "1099840",
    "end": "1102039"
  },
  {
    "text": "you you remove UI messages uh we call",
    "start": "1102039",
    "end": "1104559"
  },
  {
    "text": "push or delete to add those to our state",
    "start": "1104559",
    "end": "1107440"
  },
  {
    "text": "and then to have them rended on our",
    "start": "1107440",
    "end": "1108440"
  },
  {
    "text": "client and then we return ui. items at",
    "start": "1108440",
    "end": "1110840"
  },
  {
    "text": "the end of our node so that is how you",
    "start": "1110840",
    "end": "1113840"
  },
  {
    "text": "define and build UI components in Lang",
    "start": "1113840",
    "end": "1115880"
  },
  {
    "text": "graph um and then call them and yield",
    "start": "1115880",
    "end": "1117880"
  },
  {
    "text": "them in your node let's quickly look",
    "start": "1117880",
    "end": "1119720"
  },
  {
    "text": "inside of the chat agent UI um codebase",
    "start": "1119720",
    "end": "1122640"
  },
  {
    "text": "to see exactly how we're able to find",
    "start": "1122640",
    "end": "1124760"
  },
  {
    "text": "these components and then render them in",
    "start": "1124760",
    "end": "1126280"
  },
  {
    "text": "the UI like we saw in the demo before um",
    "start": "1126280",
    "end": "1128840"
  },
  {
    "text": "before we do that we're going to want to",
    "start": "1128840",
    "end": "1129919"
  },
  {
    "text": "go to our terminal and we're going to",
    "start": "1129919",
    "end": "1131640"
  },
  {
    "text": "want to start the server so we just saw",
    "start": "1131640",
    "end": "1134360"
  },
  {
    "text": "how this all worked we went to run to",
    "start": "1134360",
    "end": "1135760"
  },
  {
    "text": "run pnpm uh agent which is going to",
    "start": "1135760",
    "end": "1139200"
  },
  {
    "text": "start the langra server running at uh",
    "start": "1139200",
    "end": "1141520"
  },
  {
    "text": "HTTP localhost 2024 now if I go back",
    "start": "1141520",
    "end": "1144200"
  },
  {
    "text": "here I can refresh um or I might need to",
    "start": "1144200",
    "end": "1147039"
  },
  {
    "text": "create a new message and go back to it",
    "start": "1147039",
    "end": "1151840"
  },
  {
    "text": "great so we can see uh this is a",
    "start": "1151840",
    "end": "1153480"
  },
  {
    "text": "previous thread but we have it running",
    "start": "1153480",
    "end": "1155120"
  },
  {
    "text": "at Port 2024 um we're able to access",
    "start": "1155120",
    "end": "1157960"
  },
  {
    "text": "these it can refresh and all of that now",
    "start": "1157960",
    "end": "1160039"
  },
  {
    "text": "let's actually jump into the agent chat",
    "start": "1160039",
    "end": "1161919"
  },
  {
    "text": "UI code um which you can access yourself",
    "start": "1161919",
    "end": "1164360"
  },
  {
    "text": "via two ways one is the npx create agent",
    "start": "1164360",
    "end": "1167520"
  },
  {
    "text": "chat app command which which will just",
    "start": "1167520",
    "end": "1169039"
  },
  {
    "text": "clone all the code for this web app onto",
    "start": "1169039",
    "end": "1170840"
  },
  {
    "text": "your local machine or of course um you",
    "start": "1170840",
    "end": "1173480"
  },
  {
    "text": "can just clone the repository directly",
    "start": "1173480",
    "end": "1177080"
  },
  {
    "text": "um I already have it on on my machine so",
    "start": "1177080",
    "end": "1178760"
  },
  {
    "text": "I'm going to open it up and we'll look",
    "start": "1178760",
    "end": "1180520"
  },
  {
    "text": "at exactly how this is working so I'm",
    "start": "1180520",
    "end": "1183919"
  },
  {
    "text": "going to open it up in my",
    "start": "1183919",
    "end": "1185400"
  },
  {
    "text": "IDE and then we're going to want to",
    "start": "1185400",
    "end": "1187200"
  },
  {
    "text": "navigate to the ai. TSX file inside here",
    "start": "1187200",
    "end": "1190840"
  },
  {
    "text": "is uh the component we use to render all",
    "start": "1190840",
    "end": "1193960"
  },
  {
    "text": "of the AI messages right so all the",
    "start": "1193960",
    "end": "1195919"
  },
  {
    "text": "messages on the left and if we look we",
    "start": "1195919",
    "end": "1198799"
  },
  {
    "text": "can see that there's some Logic for",
    "start": "1198799",
    "end": "1199840"
  },
  {
    "text": "rendering tool calls and then we have",
    "start": "1199840",
    "end": "1201280"
  },
  {
    "text": "this custom component um jsx component",
    "start": "1201280",
    "end": "1204159"
  },
  {
    "text": "right here we pass in a message which is",
    "start": "1204159",
    "end": "1206080"
  },
  {
    "text": "the current message uh in the list of",
    "start": "1206080",
    "end": "1208360"
  },
  {
    "text": "messages we're trying to iterate over or",
    "start": "1208360",
    "end": "1210799"
  },
  {
    "text": "sorry which was passed to this assistant",
    "start": "1210799",
    "end": "1212240"
  },
  {
    "text": "message and then the thread the thread",
    "start": "1212240",
    "end": "1215080"
  },
  {
    "text": "is once again the return the result of",
    "start": "1215080",
    "end": "1217360"
  },
  {
    "text": "uh Ustream Ive wrapped Ustream inside of",
    "start": "1217360",
    "end": "1219880"
  },
  {
    "text": "a context hook um but we can see uh",
    "start": "1219880",
    "end": "1223280"
  },
  {
    "text": "where is it right here I'm just using",
    "start": "1223280",
    "end": "1225559"
  },
  {
    "text": "the plain Ustream Hook from the langra",
    "start": "1225559",
    "end": "1227840"
  },
  {
    "text": "SDK uh this is different from the",
    "start": "1227840",
    "end": "1229679"
  },
  {
    "text": "Ustream context that's imported uh from",
    "start": "1229679",
    "end": "1232400"
  },
  {
    "text": "the Lang graph SDK inside of our genui",
    "start": "1232400",
    "end": "1235120"
  },
  {
    "text": "components this is just the Ustream hook",
    "start": "1235120",
    "end": "1236679"
  },
  {
    "text": "basically and now if we look inside the",
    "start": "1236679",
    "end": "1238720"
  },
  {
    "text": "custom component we can see it accepts",
    "start": "1238720",
    "end": "1240120"
  },
  {
    "text": "the message and then the result of the",
    "start": "1240120",
    "end": "1242000"
  },
  {
    "text": "Ustream hook we extract all the values",
    "start": "1242000",
    "end": "1245440"
  },
  {
    "text": "from the state from our current um",
    "start": "1245440",
    "end": "1247760"
  },
  {
    "text": "thread via the Ustream hook and then we",
    "start": "1247760",
    "end": "1250120"
  },
  {
    "text": "iterate over the UI field right we saw",
    "start": "1250120",
    "end": "1252679"
  },
  {
    "text": "if we look inside of uh the state in our",
    "start": "1252679",
    "end": "1256120"
  },
  {
    "text": "Lan graph graph we have this UI Field in",
    "start": "1256120",
    "end": "1258640"
  },
  {
    "text": "the state so we're iterating over all of",
    "start": "1258640",
    "end": "1261320"
  },
  {
    "text": "the UI messages here and we're filtering",
    "start": "1261320",
    "end": "1264080"
  },
  {
    "text": "to only return UI messages where the",
    "start": "1264080",
    "end": "1267159"
  },
  {
    "text": "message ID equals the assistant ID um",
    "start": "1267159",
    "end": "1270240"
  },
  {
    "text": "and we're able to do that because we",
    "start": "1270240",
    "end": "1272039"
  },
  {
    "text": "specified this AI message right here",
    "start": "1272039",
    "end": "1274200"
  },
  {
    "text": "right and we return both the AI message",
    "start": "1274200",
    "end": "1277159"
  },
  {
    "text": "and the UI messages and this is show so",
    "start": "1277159",
    "end": "1279679"
  },
  {
    "text": "we can uh say yield multiple components",
    "start": "1279679",
    "end": "1282320"
  },
  {
    "text": "inside of a single run um where we have",
    "start": "1282320",
    "end": "1284840"
  },
  {
    "text": "you know one component which is tied to",
    "start": "1284840",
    "end": "1286919"
  },
  {
    "text": "an assistant message here the user send",
    "start": "1286919",
    "end": "1288600"
  },
  {
    "text": "the followup and then you have another",
    "start": "1288600",
    "end": "1290120"
  },
  {
    "text": "assistant message with a different",
    "start": "1290120",
    "end": "1291200"
  },
  {
    "text": "different component we need to do this",
    "start": "1291200",
    "end": "1292720"
  },
  {
    "text": "so that we're able to render them in the",
    "start": "1292720",
    "end": "1294039"
  },
  {
    "text": "proper locations so after we get back",
    "start": "1294039",
    "end": "1296320"
  },
  {
    "text": "all the custom components from that",
    "start": "1296320",
    "end": "1298440"
  },
  {
    "text": "message ID if there's nothing we return",
    "start": "1298440",
    "end": "1300440"
  },
  {
    "text": "null um but if there are components",
    "start": "1300440",
    "end": "1302520"
  },
  {
    "text": "defined then we just iterate over all",
    "start": "1302520",
    "end": "1304400"
  },
  {
    "text": "the components and then return this load",
    "start": "1304400",
    "end": "1306760"
  },
  {
    "text": "external component function we import",
    "start": "1306760",
    "end": "1309400"
  },
  {
    "text": "this from Lang graph SDK react UI and",
    "start": "1309400",
    "end": "1311960"
  },
  {
    "text": "this is a jsx component which is",
    "start": "1311960",
    "end": "1314799"
  },
  {
    "text": "basically going to be able to take this",
    "start": "1314799",
    "end": "1316400"
  },
  {
    "text": "uh UI component ID and make a request to",
    "start": "1316400",
    "end": "1319279"
  },
  {
    "text": "fetch that JS um and the Styles and",
    "start": "1319279",
    "end": "1322559"
  },
  {
    "text": "render them in a shadow Dom so they",
    "start": "1322559",
    "end": "1324159"
  },
  {
    "text": "don't affect any of your other styles",
    "start": "1324159",
    "end": "1325679"
  },
  {
    "text": "inside the browser and we can see that",
    "start": "1325679",
    "end": "1327960"
  },
  {
    "text": "if I open up my network tab right and",
    "start": "1327960",
    "end": "1330720"
  },
  {
    "text": "I'm going to uh filter for all and",
    "start": "1330720",
    "end": "1333679"
  },
  {
    "text": "refresh or let me make it little easier",
    "start": "1333679",
    "end": "1335520"
  },
  {
    "text": "we'll go to Just JS if we look in here",
    "start": "1335520",
    "end": "1338360"
  },
  {
    "text": "we can see there's an entrypoint.sh",
    "start": "1338360",
    "end": "1340279"
  },
  {
    "text": "request this contains all of the",
    "start": "1340279",
    "end": "1343200"
  },
  {
    "text": "JavaScript it's of course going to be",
    "start": "1343200",
    "end": "1344799"
  },
  {
    "text": "bundled um but this is the JS file which",
    "start": "1344799",
    "end": "1347960"
  },
  {
    "text": "renders this component right here and if",
    "start": "1347960",
    "end": "1350679"
  },
  {
    "text": "I look again and I filter by just CSS we",
    "start": "1350679",
    "end": "1353320"
  },
  {
    "text": "can see there's a Styles or sorry",
    "start": "1353320",
    "end": "1354720"
  },
  {
    "text": "entrypoint CSS which is the",
    "start": "1354720",
    "end": "1356520"
  },
  {
    "text": "corresponding uh CSS styles for um that",
    "start": "1356520",
    "end": "1360080"
  },
  {
    "text": "component I wanted to yield and that's",
    "start": "1360080",
    "end": "1361880"
  },
  {
    "text": "what this load external component uh jsx",
    "start": "1361880",
    "end": "1365480"
  },
  {
    "text": "component is doing it's taking in the",
    "start": "1365480",
    "end": "1366600"
  },
  {
    "text": "component ID the thread the message and",
    "start": "1366600",
    "end": "1369039"
  },
  {
    "text": "some metadata and it's just making a",
    "start": "1369039",
    "end": "1370640"
  },
  {
    "text": "request to the lra server and saying hey",
    "start": "1370640",
    "end": "1372559"
  },
  {
    "text": "for this component ID give me back the",
    "start": "1372559",
    "end": "1375039"
  },
  {
    "text": "JS file and the CSS so that I can then",
    "start": "1375039",
    "end": "1378039"
  },
  {
    "text": "render it in the",
    "start": "1378039",
    "end": "1380360"
  },
  {
    "text": "UI so as one final wrap-up we can look",
    "start": "1380360",
    "end": "1383520"
  },
  {
    "text": "at this graph as you can see we have our",
    "start": "1383520",
    "end": "1385679"
  },
  {
    "text": "components and our graphs we then",
    "start": "1385679",
    "end": "1387520"
  },
  {
    "text": "register that in our L graph. Json right",
    "start": "1387520",
    "end": "1389799"
  },
  {
    "text": "so component one component two component",
    "start": "1389799",
    "end": "1391799"
  },
  {
    "text": "three component four and then our graph",
    "start": "1391799",
    "end": "1393440"
  },
  {
    "text": "agent one and then inside of our L graph",
    "start": "1393440",
    "end": "1396039"
  },
  {
    "text": "node we push components using the name",
    "start": "1396039",
    "end": "1398600"
  },
  {
    "text": "so component one component one any props",
    "start": "1398600",
    "end": "1401480"
  },
  {
    "text": "we then return the UI items and then",
    "start": "1401480",
    "end": "1403400"
  },
  {
    "text": "inside of our client we use the Ustream",
    "start": "1403400",
    "end": "1405640"
  },
  {
    "text": "hook to get back all the values we",
    "start": "1405640",
    "end": "1407559"
  },
  {
    "text": "iterate over those UI messages and then",
    "start": "1407559",
    "end": "1410679"
  },
  {
    "text": "return them inside of a load external",
    "start": "1410679",
    "end": "1412679"
  },
  {
    "text": "component uh jsx component which we also",
    "start": "1412679",
    "end": "1414640"
  },
  {
    "text": "imported from Lang graph SDK so that is",
    "start": "1414640",
    "end": "1417279"
  },
  {
    "text": "how you use the native support for",
    "start": "1417279",
    "end": "1418919"
  },
  {
    "text": "generative UI in Lan graph where you can",
    "start": "1418919",
    "end": "1421039"
  },
  {
    "text": "register UI components um um with your",
    "start": "1421039",
    "end": "1423840"
  },
  {
    "text": "graph and then yield them directly",
    "start": "1423840",
    "end": "1425559"
  },
  {
    "text": "within nodes and load them on a react",
    "start": "1425559",
    "end": "1428679"
  },
  {
    "text": "site or um you any other website you",
    "start": "1428679",
    "end": "1430919"
  },
  {
    "text": "want to load your gener UI components on",
    "start": "1430919",
    "end": "1433360"
  },
  {
    "text": "I hope you all enjoyed this video of",
    "start": "1433360",
    "end": "1435000"
  },
  {
    "text": "course I'll leave links in the",
    "start": "1435000",
    "end": "1436080"
  },
  {
    "text": "description to all the different repos",
    "start": "1436080",
    "end": "1438039"
  },
  {
    "text": "and uh sources I use as well as the",
    "start": "1438039",
    "end": "1439760"
  },
  {
    "text": "documentation for G UI on UST stream and",
    "start": "1439760",
    "end": "1442279"
  },
  {
    "text": "I hope I see some really cool g UI bu",
    "start": "1442279",
    "end": "1444919"
  },
  {
    "text": "apps built with lingraph soon",
    "start": "1444919",
    "end": "1448720"
  }
]