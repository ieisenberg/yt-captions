[
  {
    "text": "hi I'm David from Lang chain today I'll be walking through how you can both build and evaluate a customer support",
    "start": "680",
    "end": "6160"
  },
  {
    "text": "agent before filming this video I built a customer support agent using langra",
    "start": "6160",
    "end": "11360"
  },
  {
    "text": "and ported it over to langra Studio which is where we are now langra studio is a specialized I where you can",
    "start": "11360",
    "end": "17880"
  },
  {
    "text": "interact with debug and visualize your agent the customer support agent I buil is designed to assist customers of a",
    "start": "17880",
    "end": "25080"
  },
  {
    "text": "digital music store this customer support agent has access to a SQL",
    "start": "25080",
    "end": "30119"
  },
  {
    "text": "database that not only has information on the products and the offerings of the digital music store but also information",
    "start": "30119",
    "end": "36840"
  },
  {
    "text": "on customers who have shopped at the store in the past and details on their past purchases this customer support agent",
    "start": "36840",
    "end": "43079"
  },
  {
    "text": "has two core functionalities the first is the ability to answer questions about the products and offerings of the store",
    "start": "43079",
    "end": "49600"
  },
  {
    "text": "this is questions like do you have any songs by Amy win housee do you have any album by Pink",
    "start": "49600",
    "end": "55079"
  },
  {
    "text": "Floyd the second functionality is the ability to handle and process customer",
    "start": "55079",
    "end": "60239"
  },
  {
    "text": "refunds each of these functionalities is handled by a separate subgraph in our architecture and we can see here we have",
    "start": "60239",
    "end": "66920"
  },
  {
    "text": "this question and answering subgraph that handles the queries related to the products and offerings of the music",
    "start": "66920",
    "end": "72280"
  },
  {
    "text": "store we have the refund subgraph that handles and processes customer refund",
    "start": "72280",
    "end": "77400"
  },
  {
    "text": "requests and we're routed to each of these subgraphs by our supervisor or",
    "start": "77400",
    "end": "82960"
  },
  {
    "text": "intent classifier node so when a query comes into our graph the intent classifier or supervisor node the",
    "start": "82960",
    "end": "89920"
  },
  {
    "text": "determines whether it should be routed to the refund subgraph or the question answering subgraph the last node we have here in",
    "start": "89920",
    "end": "97240"
  },
  {
    "text": "architecture is called compile followup all it does is clean up the state of our agent and return a nice final output to",
    "start": "97240",
    "end": "104600"
  },
  {
    "text": "the user let's actually ask our agent two questions and and see an action here so",
    "start": "104600",
    "end": "110399"
  },
  {
    "text": "I'm going to go ahead and copy and paste a predefined message I have here the message is my name is Mark Phillips",
    "start": "110399",
    "end": "116520"
  },
  {
    "text": "here's my phone number so you can identify me in the SQL database I want to refund on a past purchase when we",
    "start": "116520",
    "end": "123960"
  },
  {
    "text": "click submit our intent classifier node will correctly route it to the refund",
    "start": "123960",
    "end": "129560"
  },
  {
    "text": "agent and if we scroll the way down we'll see that our customer support agent correctly responded and said all",
    "start": "129560",
    "end": "136120"
  },
  {
    "text": "right Mark which of the following purchases would you like to be refunded for and we return a list of invoice IDs",
    "start": "136120",
    "end": "142000"
  },
  {
    "text": "in the database that are associated with his his his name first name last name and phone number and now Mark can follow",
    "start": "142000",
    "end": "148720"
  },
  {
    "text": "up with the invoice or IDs that he would like a refund for and walks you right to the SQL database and execute that refund",
    "start": "148720",
    "end": "156120"
  },
  {
    "text": "for him for the sake of time I'm not going to ask that followup I'm actually going to ask another question that will be",
    "start": "156120",
    "end": "162879"
  },
  {
    "text": "handled by our question answer subgraph so here I'll say never mind do you have",
    "start": "162879",
    "end": "168800"
  },
  {
    "text": "any songs for sale by in me Wine",
    "start": "168800",
    "end": "174879"
  },
  {
    "text": "House great now when I hit submit you'll see that my agent correctly routed the",
    "start": "174879",
    "end": "180560"
  },
  {
    "text": "question over to the question answering subgraph and when I scroll the way",
    "start": "180560",
    "end": "187040"
  },
  {
    "text": "down we can see that my assistant returned the following answer yes we have several Amy wi housee songs",
    "start": "187040",
    "end": "193239"
  },
  {
    "text": "available from our albums Back to Black and Frank and it returns 12 songs from the album back to black and 11 from the",
    "start": "193239",
    "end": "200200"
  },
  {
    "text": "album Frank great so that's a really quick overview of what our agent looks like",
    "start": "200200",
    "end": "205640"
  },
  {
    "text": "and does now let's dive into both building and evaluating it before I hop into a notebook and show",
    "start": "205640",
    "end": "212040"
  },
  {
    "text": "off how to evaluate this customer support agent in code I'm first going to touch on at a high level why evaluating",
    "start": "212040",
    "end": "217959"
  },
  {
    "text": "an agent is difficult and why it's important it's difficult to evaluate an agent because today agents take a large",
    "start": "217959",
    "end": "224400"
  },
  {
    "text": "number of steps before turning an output and these steps are not explicitly defined beforehand by a developer",
    "start": "224400",
    "end": "231200"
  },
  {
    "text": "they're instead determined dynamically by an llm or multiple LMS as a result when you're evaluating",
    "start": "231200",
    "end": "238159"
  },
  {
    "text": "an agent you not only want to make sure it's producing a high quality output but also that the path or the trajectory",
    "start": "238159",
    "end": "245079"
  },
  {
    "text": "that it followed when constructing that final output is optimal and we can use our customer",
    "start": "245079",
    "end": "250720"
  },
  {
    "text": "support agent here as an example so if I were to be evaluating this customer support agent and it were to receive a",
    "start": "250720",
    "end": "257639"
  },
  {
    "text": "query from a user and let's say the question is what songs do you have by Amy win housee I'd want to make sure",
    "start": "257639",
    "end": "264720"
  },
  {
    "text": "that my customer support agent not only produces a high quality accurate output",
    "start": "264720",
    "end": "270120"
  },
  {
    "text": "but also that it routes the query to the correct subgraph in this case the question answering subgraph and within",
    "start": "270120",
    "end": "277479"
  },
  {
    "text": "this subgraph we call the right tools and we call them in the right order now it's important to evaluate",
    "start": "277479",
    "end": "283919"
  },
  {
    "text": "both the final output and the trajectory or the steps that the agent takes because you can have a world in which",
    "start": "283919",
    "end": "289800"
  },
  {
    "text": "the output is high quality and the trajectory was very unoptimal and",
    "start": "289800",
    "end": "295160"
  },
  {
    "text": "inefficient for example you can imagine a world in which we receive a query about Amy wiin",
    "start": "295160",
    "end": "300759"
  },
  {
    "text": "houseee our supervisor node or our intent classification step correctly routes the question to the question",
    "start": "300759",
    "end": "306759"
  },
  {
    "text": "answering subgraph but within the question answering subgraph we call one",
    "start": "306759",
    "end": "312320"
  },
  {
    "text": "tool an unnecessary number of times and we actually call some incorrect tools we will still likely return an",
    "start": "312320",
    "end": "320000"
  },
  {
    "text": "output that's accurate in quality but the inefficiency that took place within the question answering",
    "start": "320000",
    "end": "325919"
  },
  {
    "text": "subgraph led to a lot of unnecessary latency and and a lot of unnecessary number of tokens",
    "start": "325919",
    "end": "333360"
  },
  {
    "text": "generated and this is also a really really good illustration of why evaluating an agent in general is so",
    "start": "333360",
    "end": "339759"
  },
  {
    "text": "important because let's say you make a change to your agent it can be a small change like switching to a new model",
    "start": "339759",
    "end": "345199"
  },
  {
    "text": "provider or iterating some prompts in the application or more substantial change such as one that fundamentally",
    "start": "345199",
    "end": "352240"
  },
  {
    "text": "changes the Cog of architecture of the agent you want to make sure that this change would not degrade some part of",
    "start": "352240",
    "end": "359479"
  },
  {
    "text": "your your applications performance whether that's latency whether that's tokens or the quality of the final",
    "start": "359479",
    "end": "366720"
  },
  {
    "text": "output and you want to make sure you catch this potential regression before you push to change production and make",
    "start": "366720",
    "end": "372960"
  },
  {
    "text": "it live for all your users great so let's actually evaluate this customer support agent and to evaluate",
    "start": "372960",
    "end": "380319"
  },
  {
    "text": "this customer support agent let's use three strategies the first strategy is going to evaluate whether it's producing",
    "start": "380319",
    "end": "387319"
  },
  {
    "text": "quality accurate final outputs the second strategy we're going to utilize is actually going to make sure",
    "start": "387319",
    "end": "393960"
  },
  {
    "text": "that a single step in our agent is behaving correctly in this case the evaluation is",
    "start": "393960",
    "end": "400199"
  },
  {
    "text": "going to make sure that our supervisor node or our intent classification step",
    "start": "400199",
    "end": "405360"
  },
  {
    "text": "is correctly routing to the appropriate subgraph so for example when the",
    "start": "405360",
    "end": "410639"
  },
  {
    "text": "supervisor node receives a query about a a customer refund we'd want to make sure this this node correctly routes to the",
    "start": "410639",
    "end": "417240"
  },
  {
    "text": "process refund subgraph and if it to receive a question about the products or the offerings of the music store we want",
    "start": "417240",
    "end": "423919"
  },
  {
    "text": "to make sure this intent classification step or supervisor node is correctly passing it on to the question answering",
    "start": "423919",
    "end": "430800"
  },
  {
    "text": "subgraph and the final strategy we're going to use is going to actually look at the entire trajectory or path that",
    "start": "430800",
    "end": "436840"
  },
  {
    "text": "the agent follows when answering some query um and ensure that it matches the optimal or ideal trajectory we'd like it",
    "start": "436840",
    "end": "443639"
  },
  {
    "text": "to follow so we're going to run these these",
    "start": "443639",
    "end": "448919"
  },
  {
    "text": "three Valu strategies using the lsmith SDK and before we're able to run these",
    "start": "448919",
    "end": "455120"
  },
  {
    "text": "evaluations we need to Define three things the first is a golden data set",
    "start": "455120",
    "end": "461000"
  },
  {
    "text": "and this golden data set is going to vary based on the strategy of evolation we're using for example if we're putting",
    "start": "461000",
    "end": "468360"
  },
  {
    "text": "together golden data set for the final output accuracy evaluation strategy",
    "start": "468360",
    "end": "474159"
  },
  {
    "text": "we're going to want to make sure our golden data set has some number of inputs and outputs the input are going",
    "start": "474159",
    "end": "479879"
  },
  {
    "text": "to be example queries or questions that a customer will ask our customer support",
    "start": "479879",
    "end": "485039"
  },
  {
    "text": "agent and our outputs will be really high quality accurate responses that",
    "start": "485039",
    "end": "490280"
  },
  {
    "text": "we'd love to see our agent make in production now if we were instead conducting that single step evaluation",
    "start": "490280",
    "end": "497479"
  },
  {
    "text": "strategy we'd want our golden data set to still have inputs that are questions or queries that could come from a",
    "start": "497479",
    "end": "502800"
  },
  {
    "text": "customer to the agent but now we want our outputs to be the expected subgraph",
    "start": "502800",
    "end": "509800"
  },
  {
    "text": "that the intent classification or supervisor node would route to when it receives that",
    "start": "509800",
    "end": "515159"
  },
  {
    "text": "query right so this golden data set will vary based on the evaluation strategy but at a high level the inputs will be",
    "start": "515159",
    "end": "521800"
  },
  {
    "text": "questions from customers to the agent and the outputs will be the expected Behavior or response from the",
    "start": "521800",
    "end": "528040"
  },
  {
    "text": "agent the second thing we're going to Define is our application lric so for the sake of this",
    "start": "528040",
    "end": "533480"
  },
  {
    "text": "demonstration the application logic we evaluating is just the customer support agent I've built with Lang graph",
    "start": "533480",
    "end": "539959"
  },
  {
    "text": "and the last thing we're going to find here is our evaluators our evaluators are also going to vary based on the",
    "start": "539959",
    "end": "545720"
  },
  {
    "text": "evalu based on the evaluation strategy we're employing if we're conducting an evaluation on the accuracy of the final",
    "start": "545720",
    "end": "552920"
  },
  {
    "text": "output we'd likely want our evaluator to be some Allen judge that can assess the",
    "start": "552920",
    "end": "558079"
  },
  {
    "text": "accuracy of our agent's output relative to some reference some reference or ground truth",
    "start": "558079",
    "end": "564600"
  },
  {
    "text": "output if the evaluation strategy we're employing is single step right to",
    "start": "564600",
    "end": "569839"
  },
  {
    "text": "assessing whether our supervisor node is routing queries to the correct subgraph we'd want to maybe bring in some htic",
    "start": "569839",
    "end": "576040"
  },
  {
    "text": "code and make sure that whichever subgraph our agent routed a specific",
    "start": "576040",
    "end": "581240"
  },
  {
    "text": "query to matches the ideal or accurate",
    "start": "581240",
    "end": "587000"
  },
  {
    "text": "subgraph awesome and all three of these components are going to tie together",
    "start": "587000",
    "end": "593440"
  },
  {
    "text": "when we actually run our experiment or evaluation with the lsmith SDK when we run our",
    "start": "593440",
    "end": "599839"
  },
  {
    "text": "evaluation blanks Smith SDK will take our application logic and run it with the inputs from",
    "start": "599839",
    "end": "606040"
  },
  {
    "text": "our golden data set this will generate some new outputs that will then get scored",
    "start": "606040",
    "end": "612959"
  },
  {
    "text": "relative to the outputs in our ground truth or golden data set by some",
    "start": "612959",
    "end": "618800"
  },
  {
    "text": "evaluators and so let's actually walk through some spe some specific examples so if we were to be evaluating",
    "start": "618800",
    "end": "626360"
  },
  {
    "text": "the final response of our agent for accuracy what will happen when we run our",
    "start": "626360",
    "end": "632000"
  },
  {
    "text": "experiment is we'll take the application logic or our customer support agent run",
    "start": "632000",
    "end": "637639"
  },
  {
    "text": "it over the inputs of our golden data set which are just queries um that we defined earlier queries or questions",
    "start": "637639",
    "end": "643639"
  },
  {
    "text": "from customers these new outputs will be scored by an Alum judge this Alum judge",
    "start": "643639",
    "end": "650040"
  },
  {
    "text": "will basically assess how accurate these new outputs generated by our agent are",
    "start": "650040",
    "end": "655079"
  },
  {
    "text": "relative to the reference outputs in our golden data set",
    "start": "655079",
    "end": "660680"
  },
  {
    "text": "the next evaluation strategy is the single step eval evaluation strategy so",
    "start": "661079",
    "end": "666360"
  },
  {
    "text": "when we run this experiment with length of SDK again we'll be running the customer support agent over the inputs",
    "start": "666360",
    "end": "673480"
  },
  {
    "text": "in our golden data set and instead this time our evaluator will be some ver to",
    "start": "673480",
    "end": "678639"
  },
  {
    "text": "code that just makes that makes sure that in our our runs the runs that were",
    "start": "678639",
    "end": "684040"
  },
  {
    "text": "made by our customer support agent that we routed to the corre",
    "start": "684040",
    "end": "689760"
  },
  {
    "text": "subgraph and what we'll basically do is we'll just double check that whichever subgraph we routed to In Those runs by",
    "start": "689760",
    "end": "695920"
  },
  {
    "text": "our customer for agent uh matches the the name of the subgraph in our reference output inside of our golden",
    "start": "695920",
    "end": "702360"
  },
  {
    "text": "data set and our third and last evaluation",
    "start": "702360",
    "end": "707480"
  },
  {
    "text": "strategy is trajectory again we'll be running our customer support agent over the impet of",
    "start": "707480",
    "end": "713839"
  },
  {
    "text": "golden data set and within these runs we'll make sure that the trajectory the",
    "start": "713839",
    "end": "718959"
  },
  {
    "text": "agent it followed or the path it followed matches the path we defined our",
    "start": "718959",
    "end": "724320"
  },
  {
    "text": "reference output which is optimal um and something we'd love to see in in",
    "start": "724320",
    "end": "729519"
  },
  {
    "text": "production great now let's actually hop in the code and show off how you can implement this evaluation with the",
    "start": "729519",
    "end": "735000"
  },
  {
    "text": "length with SDK great we're in the notebook before I",
    "start": "735000",
    "end": "740519"
  },
  {
    "text": "go into the evaluation code I'm first going to go over very briefly the code that underpins the customer support",
    "start": "740519",
    "end": "747360"
  },
  {
    "text": "agent now this video is primarily focused on evaluating the agent instead of building the agent so I'm not going",
    "start": "747360",
    "end": "753680"
  },
  {
    "text": "to walk through this code line by line but I'll attach this notebook to the description of the video so you all can",
    "start": "753680",
    "end": "759600"
  },
  {
    "text": "go deep into it on your own time as you probably already saw from the architecture and Lang graph Studio this",
    "start": "759600",
    "end": "766000"
  },
  {
    "text": "agent has three main components this agent has a refund",
    "start": "766000",
    "end": "771320"
  },
  {
    "text": "subgraph this subgraph handles queries related to customer refunds and inside",
    "start": "771320",
    "end": "776399"
  },
  {
    "text": "of this refund subgraph there's three notes the first node gather info prompts",
    "start": "776399",
    "end": "781760"
  },
  {
    "text": "the customer for additional information if we don't have enough context on the customer to execute and process a",
    "start": "781760",
    "end": "788880"
  },
  {
    "text": "refund the second node lookup is executed when we have enough information",
    "start": "788880",
    "end": "794279"
  },
  {
    "text": "to identify the customer in the database but not enough information to actually process process a specific refund so",
    "start": "794279",
    "end": "801760"
  },
  {
    "text": "what the lookup node will do is take the customer's identify information this is the customer's first name last name and",
    "start": "801760",
    "end": "807920"
  },
  {
    "text": "phone number and read from the database using some SQL all of their Associated invoices or",
    "start": "807920",
    "end": "814440"
  },
  {
    "text": "purchases with the music store in the past and return a message to the user that says hey so and so we were able to",
    "start": "814440",
    "end": "821639"
  },
  {
    "text": "find your records in the database here are the invoices and past purchases we've seen you've had with the",
    "start": "821639",
    "end": "828279"
  },
  {
    "text": "store which ones would you like a refund for and once this refund subgraph gets",
    "start": "828279",
    "end": "834199"
  },
  {
    "text": "that context we're able to use the last node which is the refund node and this node writes to the database using SQL to",
    "start": "834199",
    "end": "841759"
  },
  {
    "text": "process a customer refund once we're able to both identify the customer um and have a specified invoice ID that",
    "start": "841759",
    "end": "848880"
  },
  {
    "text": "they would like a refund for so that's the refund subgraph again not going to go through",
    "start": "848880",
    "end": "855360"
  },
  {
    "text": "the code so just going to scroll straight through here feel free to look at on your own",
    "start": "855360",
    "end": "860560"
  },
  {
    "text": "time the second component is the question answering subgraph the subgraph is meant to handle queries related to",
    "start": "860560",
    "end": "866720"
  },
  {
    "text": "the products and offerings of a store and this subgraph follows the react agent architecture if you aren't",
    "start": "866720",
    "end": "873000"
  },
  {
    "text": "familiar with what the react agent architecture is view the link I'm attaching to the description of this",
    "start": "873000",
    "end": "879519"
  },
  {
    "text": "video but all the subgraph is is an llm with access to certain tools these tools",
    "start": "879519",
    "end": "885959"
  },
  {
    "text": "allow it to read from the database using SQL and thus answer questions such as",
    "start": "885959",
    "end": "891120"
  },
  {
    "text": "hey what songs does the store have what albums are you selling I'm looking for a",
    "start": "891120",
    "end": "896800"
  },
  {
    "text": "song by this artist what which songs by them are you selling at the",
    "start": "896800",
    "end": "902160"
  },
  {
    "text": "store and these two subgraphs are pulled in to another",
    "start": "902160",
    "end": "909839"
  },
  {
    "text": "graph and the way that we actually end up invoking either of these these",
    "start": "909839",
    "end": "915120"
  },
  {
    "text": "subgraphs is through this intent classifier or supervisor node that we have at the at the top of our",
    "start": "915120",
    "end": "922519"
  },
  {
    "text": "architecture and so this intent classifier supervisor node basically looks at the query that the customer asked determines what whether it's about",
    "start": "922519",
    "end": "929959"
  },
  {
    "text": "a customer refund or the products and offerings of the store and routes the query there and we already covered this",
    "start": "929959",
    "end": "936399"
  },
  {
    "text": "but the last node just cleans up our state and returns a final message to the user great so that's the that's the",
    "start": "936399",
    "end": "944880"
  },
  {
    "text": "general gist of our customer support agent feel free to hop in the code in the description uh linked below and now",
    "start": "944880",
    "end": "952360"
  },
  {
    "text": "I'm actually going to dive into evaluating this agent with lsmith SDK let's evaluate our agent with lsmith",
    "start": "952360",
    "end": "958720"
  },
  {
    "text": "SD K if you're not familiar with lsmith it's a platform that helps you build production ready LM applications",
    "start": "958720",
    "end": "965079"
  },
  {
    "text": "discussing lsmith in detail is a bit out of scope for this video instead I'll just link some docs and resources below",
    "start": "965079",
    "end": "971600"
  },
  {
    "text": "so if you want to learn about link Smith you can the first evaluation we're going to run will assess how accurate the answer",
    "start": "971600",
    "end": "979600"
  },
  {
    "text": "generated by my customer support agent when it receives some query from a customer is and to run this evaluation we're",
    "start": "979600",
    "end": "986800"
  },
  {
    "text": "first going to need to create a golden data set set and as you can see from my code we're manually creating this golden",
    "start": "986800",
    "end": "992600"
  },
  {
    "text": "data set here and I've already defined five input output pairs that this data",
    "start": "992600",
    "end": "997639"
  },
  {
    "text": "set will be composed of in each input out a pair the input will be an example question that a customer would pose our",
    "start": "997639",
    "end": "1004160"
  },
  {
    "text": "customer support agent and the output is going to be a high quality accurate response that we'd love to see our agent",
    "start": "1004160",
    "end": "1010319"
  },
  {
    "text": "produce in production so in this first input output pair we can see the input is a question",
    "start": "1010319",
    "end": "1016199"
  },
  {
    "text": "so how many songs do you have by James Brown in the output is an accurate uh",
    "start": "1016199",
    "end": "1021680"
  },
  {
    "text": "response to that question from our customer support agent so here the response is we have 20 songs by James",
    "start": "1021680",
    "end": "1027558"
  },
  {
    "text": "Brown all right we'll be sending this to lsmith as a data set under the name",
    "start": "1027559",
    "end": "1032720"
  },
  {
    "text": "chinuk customer service Bo final response chinuk is the name of the database that our customer support agent",
    "start": "1032720",
    "end": "1038798"
  },
  {
    "text": "is hooked up to we'll be sending this data set to lsmith because s Lang Smith where we'll be able to view and interact",
    "start": "1038799",
    "end": "1045839"
  },
  {
    "text": "with the results from our evaluation all right great so that's our buen data set and we've sent it off to",
    "start": "1045839",
    "end": "1052280"
  },
  {
    "text": "lsmith now let's move on to step two which is defining the application logic that we want to evaluate so because",
    "start": "1052280",
    "end": "1059120"
  },
  {
    "text": "we're just evaluating our customer support agent in this evaluation what we need to do is Define",
    "start": "1059120",
    "end": "1065799"
  },
  {
    "text": "a Target function called runor graph runor graph will receive the inputs from",
    "start": "1065799",
    "end": "1071840"
  },
  {
    "text": "our golden data set when we kick off our experiment using L spit SDK and what this target function will",
    "start": "1071840",
    "end": "1078159"
  },
  {
    "text": "do is just pass pass in the inputs for the example customer questions from our building data set to our customer",
    "start": "1078159",
    "end": "1085720"
  },
  {
    "text": "support agent to noted by graph here our customer for agent will take this query",
    "start": "1085720",
    "end": "1090960"
  },
  {
    "text": "or question generate a response and all we'll do is return the response and",
    "start": "1090960",
    "end": "1096480"
  },
  {
    "text": "we'll basically be plucking the state value that we have for our agent called follow-up because it's side of follow-up",
    "start": "1096480",
    "end": "1102440"
  },
  {
    "text": "that will actually should be storing that response that we that we would return to a user great so that's the",
    "start": "1102440",
    "end": "1107720"
  },
  {
    "text": "application logic we're about Vala and now let's define our evaluator so it's similar to how the",
    "start": "1107720",
    "end": "1114520"
  },
  {
    "text": "target function that houses our application logic automatically receives the inputs from the golden data set when",
    "start": "1114520",
    "end": "1120159"
  },
  {
    "text": "the experiment is kicked off using links since SDK our evaluator will automatically receive the inputs from",
    "start": "1120159",
    "end": "1126640"
  },
  {
    "text": "the golden data set the outputs generated by the Target function or my customer support",
    "start": "1126640",
    "end": "1132400"
  },
  {
    "text": "agent and the reference output fromal data set and our evaluator which is",
    "start": "1132400",
    "end": "1137600"
  },
  {
    "text": "defined inside of this function Final Answer correct we'll take all three of these pieces of data and give them to an",
    "start": "1137600",
    "end": "1145200"
  },
  {
    "text": "allen judge and this Alm judge has a system prompt which instructs it to act",
    "start": "1145200",
    "end": "1150520"
  },
  {
    "text": "as a teacher grading a quiz we inform this Alm judge that it will be given it a",
    "start": "1150520",
    "end": "1155799"
  },
  {
    "text": "question in this case the question is just the input from our golden data set the ground truth or correct response",
    "start": "1155799",
    "end": "1163559"
  },
  {
    "text": "which is just the output from our golden data set and the Student Response which is just the answer generated by my",
    "start": "1163559",
    "end": "1170360"
  },
  {
    "text": "customer support agent inside of the target function we'll give this LM judge some",
    "start": "1170360",
    "end": "1175640"
  },
  {
    "text": "more granular details on what denotes a correct Student Response and what denotes inaccurate Student Response and",
    "start": "1175640",
    "end": "1183080"
  },
  {
    "text": "then we'll actually invoke this Len judge using structured output and we'll be using structured output to ensure",
    "start": "1183080",
    "end": "1189280"
  },
  {
    "text": "that our Len judge returns two things the first is a Boolean value this",
    "start": "1189280",
    "end": "1194600"
  },
  {
    "text": "Boolean value will be true if the Allen judge decides that the Student Response is mostly or exactly correct compared to",
    "start": "1194600",
    "end": "1202520"
  },
  {
    "text": "the reference output or the output formable in data set and false if it decides that that response generated by",
    "start": "1202520",
    "end": "1209080"
  },
  {
    "text": "a customer support agent is not accurate or not correct relative to the output our golden data set and our LM judge",
    "start": "1209080",
    "end": "1215880"
  },
  {
    "text": "will also return another field that's a string the string will just explain the LM judge's reasoning or rationale for",
    "start": "1215880",
    "end": "1222400"
  },
  {
    "text": "why it decided that our customer support agent answer was correct or not and so we're just going to be we're",
    "start": "1222400",
    "end": "1230080"
  },
  {
    "text": "just going to be returning that Boolean is correct value to lsmith and we'll be able to see it on the UI after we kick",
    "start": "1230080",
    "end": "1236240"
  },
  {
    "text": "off this experiment so the last step is to actually run the evaluation and we'll",
    "start": "1236240",
    "end": "1241280"
  },
  {
    "text": "run the evaluation using langens Smith's uh evaluate function and inside of this evalate",
    "start": "1241280",
    "end": "1247240"
  },
  {
    "text": "function all we need to do is specify our Target function oneor graph which houses our application logic or our",
    "start": "1247240",
    "end": "1253840"
  },
  {
    "text": "customer support agent we'll need to specify the name of our golden data set",
    "start": "1253840",
    "end": "1258919"
  },
  {
    "text": "a list of the evaluators that will be used to score the new outputs generated by our customer support agent in this",
    "start": "1258919",
    "end": "1265120"
  },
  {
    "text": "case it's just the final answer correct evaluator we defined up here and the name of the experiment and",
    "start": "1265120",
    "end": "1272080"
  },
  {
    "text": "this will be present on linki UI as well which is where we're actually going to jump to now all right we're in Langs",
    "start": "1272080",
    "end": "1278200"
  },
  {
    "text": "Smith's UI the first thing we can note is that our golden data set was successfully created so if I click into",
    "start": "1278200",
    "end": "1284559"
  },
  {
    "text": "this data set in lsmith and toggle over to examples we can see that the and the outputs that we defined in code or",
    "start": "1284559",
    "end": "1290960"
  },
  {
    "text": "successfully send over to Langs Smith so let's click into an example inut an",
    "start": "1290960",
    "end": "1296679"
  },
  {
    "text": "output so the input is just one of the questions we defined in code how many songs you have by James",
    "start": "1296679",
    "end": "1302960"
  },
  {
    "text": "Brown and the output is that high quality accurate answer we would like our agent to return when given this",
    "start": "1302960",
    "end": "1309640"
  },
  {
    "text": "question and so here we have the response we have 20 songs by James Brown so great our golden data set was created",
    "start": "1309640",
    "end": "1317520"
  },
  {
    "text": "and now let's go take a look at the experiment that we ran so if I click in I can view this",
    "start": "1317520",
    "end": "1323840"
  },
  {
    "text": "experiment in pretty rler detail I'll see the inputs and the outputs for my golden data set I'll see the output that",
    "start": "1323840",
    "end": "1331000"
  },
  {
    "text": "was generated by my target function or by my customer sport agent when it received the input for my golden data",
    "start": "1331000",
    "end": "1337440"
  },
  {
    "text": "set and I'll see the score that my LM judge gave this new output by my",
    "start": "1337440",
    "end": "1343320"
  },
  {
    "text": "customer support agent for accuracy now if you remember in code we were having our Allen judge return a bullying value",
    "start": "1343320",
    "end": "1350559"
  },
  {
    "text": "true or false for whether this new output was accurate or inaccurate so here the true or false",
    "start": "1350559",
    "end": "1357799"
  },
  {
    "text": "bulling value is just showing up as Z or one one is true zero is",
    "start": "1357799",
    "end": "1362840"
  },
  {
    "text": "false so here we can see that when our customer support agent was given this input from Golden data set in the Target",
    "start": "1362840",
    "end": "1369320"
  },
  {
    "text": "function it did a really good job at producing accurate response and thus our Len judge gave it uh one or true for",
    "start": "1369320",
    "end": "1377400"
  },
  {
    "text": "being correct we can see down here our customer support agent struggled when",
    "start": "1377400",
    "end": "1382919"
  },
  {
    "text": "given this this question about who Rec who recorded wish you were here again",
    "start": "1382919",
    "end": "1388320"
  },
  {
    "text": "and thus our judge returned false or that it its response was not accurate we",
    "start": "1388320",
    "end": "1394159"
  },
  {
    "text": "can scroll through and see what our Allen judge scored everywhere they output here as well one thing that's",
    "start": "1394159",
    "end": "1399880"
  },
  {
    "text": "really nice about this experiment view is we can actually click in and look at an individual evaluator run so when I",
    "start": "1399880",
    "end": "1406880"
  },
  {
    "text": "click into an evaluator run I can see what our valuator looks like under the hood so just like how was defined in",
    "start": "1406880",
    "end": "1412799"
  },
  {
    "text": "code we can see that we Ed an LM judge in this case chap ke4 mini with a",
    "start": "1412799",
    "end": "1418279"
  },
  {
    "text": "special system prompt and the system prompt instructs it to act as a teacher grading a",
    "start": "1418279",
    "end": "1423480"
  },
  {
    "text": "quiz and we can see that we give this Len judge a human message that has context on the input from our golden",
    "start": "1423480",
    "end": "1429640"
  },
  {
    "text": "data set the output from our golden data set which is referenced as a ground truth response and a student response",
    "start": "1429640",
    "end": "1437279"
  },
  {
    "text": "which is just the answer that our customer support agent generated in the taret function and then at the very",
    "start": "1437279",
    "end": "1443159"
  },
  {
    "text": "bottom we'll see that response from our L judge which includes both the reasoning or the rationale for why it",
    "start": "1443159",
    "end": "1450919"
  },
  {
    "text": "either judg our response as accurate or inaccurate in the Boolean value for",
    "start": "1450919",
    "end": "1457600"
  },
  {
    "text": "whether it decided our our output was was was correct or not great so talking",
    "start": "1457600",
    "end": "1463960"
  },
  {
    "text": "back over to the data set one other thing that I think is is super helpful is viewing our experiment at sort of a",
    "start": "1463960",
    "end": "1469919"
  },
  {
    "text": "high level so here I can see that across all my runs the average correctness",
    "start": "1469919",
    "end": "1475320"
  },
  {
    "text": "score was 6 so ideally we'd like this this to be one meaning all of our all of",
    "start": "1475320",
    "end": "1481960"
  },
  {
    "text": "our runs received uh correctness equal to True by our all judge we can see",
    "start": "1481960",
    "end": "1487760"
  },
  {
    "text": "that's not the case and thus we have a good bit of work to do before we release this customer support agent to all of",
    "start": "1487760",
    "end": "1493399"
  },
  {
    "text": "our users and light spits will also provide us some pretty nice information on the p",
    "start": "1493399",
    "end": "1498520"
  },
  {
    "text": "latency P99 latency in aor rate cross the runs uh in the experiment let's move",
    "start": "1498520",
    "end": "1504960"
  },
  {
    "text": "on to our second evaluation strategy single step in the single step evaluation we're going to be assessing",
    "start": "1504960",
    "end": "1511240"
  },
  {
    "text": "how well my supervisor node or my intent classification step performs when given",
    "start": "1511240",
    "end": "1517600"
  },
  {
    "text": "a question from a customer ideally when we receive a question from a customer we'd like our supervisor node to always",
    "start": "1517600",
    "end": "1524360"
  },
  {
    "text": "correctly route it to either the question answering subgraph or the process refund subgraph based on the",
    "start": "1524360",
    "end": "1530399"
  },
  {
    "text": "content of the question to run this evaluation the first step is going to be again Define a",
    "start": "1530399",
    "end": "1536720"
  },
  {
    "text": "golden data set i'm defining this golden data set manually in code and I have five inputs and outputs already defined",
    "start": "1536720",
    "end": "1544480"
  },
  {
    "text": "here the inputs in my golden data set are just going to be a list of messages sometimes this list of messages",
    "start": "1544480",
    "end": "1551360"
  },
  {
    "text": "is just going to have a single message from a customer this message from a customer will have a question so in this",
    "start": "1551360",
    "end": "1557919"
  },
  {
    "text": "example in the input it's just going to be a question from a customer that's asking hey I",
    "start": "1557919",
    "end": "1563600"
  },
  {
    "text": "bought some tracks recently and I don't like them the outputs in my golden data set are just going to be the names of",
    "start": "1563600",
    "end": "1570080"
  },
  {
    "text": "the subgraphs or the agents that we would like our intent classifier or supervisor node to route to when it",
    "start": "1570080",
    "end": "1577120"
  },
  {
    "text": "receives this list of messages as context so again sometimes the infs are just going to be a single single ask",
    "start": "1577120",
    "end": "1584279"
  },
  {
    "text": "from a customer and sometimes it's going to be a list of mult full messages so in",
    "start": "1584279",
    "end": "1590159"
  },
  {
    "text": "this example here the most recent message is still going to be an ask from a customer so here the customer is",
    "start": "1590159",
    "end": "1597159"
  },
  {
    "text": "asking did Prince release any albums in two in 2000 but the list of messages also has",
    "start": "1597159",
    "end": "1604320"
  },
  {
    "text": "two previous two previous messages that were exchanged back and forth between the customer and the customer for agent",
    "start": "1604320",
    "end": "1611120"
  },
  {
    "text": "so the first message is the customer asking I want to refund on purchase 237 and the second message is the",
    "start": "1611120",
    "end": "1618919"
  },
  {
    "text": "customer support agents reply which said I've refunded you for that purchase it",
    "start": "1618919",
    "end": "1624200"
  },
  {
    "text": "was a total of $1.98 how else can I help you today and again the output is going to",
    "start": "1624200",
    "end": "1632039"
  },
  {
    "text": "be the name of the subgraph or the agent that we'd like our impant classifier or supervisor node to route to when it",
    "start": "1632039",
    "end": "1639200"
  },
  {
    "text": "receives this ask in these two previous messages as context for what already",
    "start": "1639200",
    "end": "1645039"
  },
  {
    "text": "took place in the conversation so we're going to create a data set with these inputs and outputs",
    "start": "1645039",
    "end": "1651000"
  },
  {
    "text": "and send them off to lsmith the second step to running this evaluation is going to be defining the",
    "start": "1651000",
    "end": "1657520"
  },
  {
    "text": "application logic we want evaluated and so for this evaluation because I'm actually not I'm actually",
    "start": "1657520",
    "end": "1663960"
  },
  {
    "text": "not evaluating my entire agent I'm just evaluating the performance of a specific",
    "start": "1663960",
    "end": "1669320"
  },
  {
    "text": "step I don't need to run the inputs for my golden data set which get P to my",
    "start": "1669320",
    "end": "1674720"
  },
  {
    "text": "target function When We Run The Experiment I don't need to run these inputs from my golden data set on the",
    "start": "1674720",
    "end": "1680080"
  },
  {
    "text": "entire graph I can actually take the inputs from my golden data set which",
    "start": "1680080",
    "end": "1685200"
  },
  {
    "text": "gets sent to my target function when the experiment runs to just the intent classifier",
    "start": "1685200",
    "end": "1691440"
  },
  {
    "text": "node and when I get a response back from the intent classifier node I can use the",
    "start": "1691440",
    "end": "1696679"
  },
  {
    "text": "goto property to get back the name of the subgraph or the agent that it wants",
    "start": "1696679",
    "end": "1702559"
  },
  {
    "text": "to Route the query to next so that's what my target function is actually going to to do in in this in this single",
    "start": "1702559",
    "end": "1709159"
  },
  {
    "text": "step evaluation next I'm going to Define my",
    "start": "1709159",
    "end": "1714279"
  },
  {
    "text": "evaluator so my evaluator is going to receive the outputs or whatever my",
    "start": "1714279",
    "end": "1719919"
  },
  {
    "text": "target function uh returns when given the inputs from the gold data set and the reference outputs which are the",
    "start": "1719919",
    "end": "1726240"
  },
  {
    "text": "outputs from our golden data set and my evaluator here is much simpler than the one in the final response evaluator all",
    "start": "1726240",
    "end": "1732399"
  },
  {
    "text": "it does is a is a simple check is the is the subgraph that my for support agent",
    "start": "1732399",
    "end": "1738720"
  },
  {
    "text": "want and to route to when it received that list of of messages equivalent to",
    "start": "1738720",
    "end": "1743760"
  },
  {
    "text": "the name of the the subgraph or the agent that we have in our golden data set we're making this check because the",
    "start": "1743760",
    "end": "1749600"
  },
  {
    "text": "name of the subgraph or the agent in our golden data set is the correct is the",
    "start": "1749600",
    "end": "1755120"
  },
  {
    "text": "correct one so we want to basically gauge that our that our agent picked the right subgraph to route",
    "start": "1755120",
    "end": "1760440"
  },
  {
    "text": "to Great so now we to find all of these the last step is to actually run the",
    "start": "1760440",
    "end": "1765600"
  },
  {
    "text": "evaluation with the evaluate function again we're going to specify the name of our Target function which houses our",
    "start": "1765600",
    "end": "1771039"
  },
  {
    "text": "application logic again here we're not actually going to be running the entire",
    "start": "1771039",
    "end": "1776519"
  },
  {
    "text": "graph we're just going to be picking out that intent classifier node giving that the inputs from our golden data",
    "start": "1776519",
    "end": "1782000"
  },
  {
    "text": "set we're going to define the name of our golden data set the list of evaluators and the experiment prefix",
    "start": "1782000",
    "end": "1789440"
  },
  {
    "text": "which will show up in the lens withi UI all right we're back in the LSI UI",
    "start": "1789440",
    "end": "1796279"
  },
  {
    "text": "the first thing to not is we successfully created our golden data set we can click into any input output pair",
    "start": "1796279",
    "end": "1802840"
  },
  {
    "text": "and see that the input is is as expected it's uh a message or a list of messages",
    "start": "1802840",
    "end": "1808320"
  },
  {
    "text": "that includes questions from customers here we just have one question from a customer and the outputs in the Glen",
    "start": "1808320",
    "end": "1814320"
  },
  {
    "text": "data set instead of it being a high quality accurate output this time it's just the name of the subgraph or agent",
    "start": "1814320",
    "end": "1821240"
  },
  {
    "text": "that we wanted our intent classifier to route to when it receive that message or list of messages as context",
    "start": "1821240",
    "end": "1829000"
  },
  {
    "text": "let's toggle over to experiments and look at the experiment we just ran under the hood so in this view we'll see the",
    "start": "1829000",
    "end": "1835320"
  },
  {
    "text": "inputs and outputs from our golden data set and then we'll see the name of the subgraph or the agent that our intent",
    "start": "1835320",
    "end": "1842880"
  },
  {
    "text": "classifier node inside of the customer sport agent wanted to route to when it received these messages as context from",
    "start": "1842880",
    "end": "1851000"
  },
  {
    "text": "our golden data set so he's done a really great job um for each input from",
    "start": "1851000",
    "end": "1856399"
  },
  {
    "text": "the golden data set it routed to the correct subgraph or agent we see across the board that our evaluator gave it the",
    "start": "1856399",
    "end": "1863679"
  },
  {
    "text": "uh the score of one which means it picks the right subgraph to wrap to",
    "start": "1863679",
    "end": "1870398"
  },
  {
    "text": "awesome let's dive into our third and final evaluation strategy in this evaluation we'll be assessing whether",
    "start": "1870840",
    "end": "1877320"
  },
  {
    "text": "our customer support agent is following an optimal path or trajectory when it's answering question from a",
    "start": "1877320",
    "end": "1883600"
  },
  {
    "text": "customer the first step we're going to take when conducting this valuation is is creating a golden data set as you can",
    "start": "1883600",
    "end": "1890840"
  },
  {
    "text": "see from my code I'm manually creating a golden data set here and I already have Define five inputs and outputs that this",
    "start": "1890840",
    "end": "1897760"
  },
  {
    "text": "data set will be composed of in each of these input output pairs the input is going to be an example question that a",
    "start": "1897760",
    "end": "1904320"
  },
  {
    "text": "customer would pose our customer support agent and the output is a list of steps",
    "start": "1904320",
    "end": "1909399"
  },
  {
    "text": "that we want our customer support agent to follow in order when answering the question in the",
    "start": "1909399",
    "end": "1914639"
  },
  {
    "text": "input let's use this first input output pair as an example so in this input output pair the input",
    "start": "1914639",
    "end": "1921000"
  },
  {
    "text": "is a question that says how many songs do you have by James Brown and the output is the trajectory that we'd want",
    "start": "1921000",
    "end": "1927039"
  },
  {
    "text": "our customer support agent to follow when it's answering this question so when this customer support agent receives the question how many songs do",
    "start": "1927039",
    "end": "1933559"
  },
  {
    "text": "you have by James Brown we'd ideally like it to route to the to the question answering subgraph from the intent",
    "start": "1933559",
    "end": "1940120"
  },
  {
    "text": "classifier node and then within the question answering subgraph we'd like it to use",
    "start": "1940120",
    "end": "1946159"
  },
  {
    "text": "the lookup track tool before routing to the compile follow-up node which just cleans up the state and returns a nice",
    "start": "1946159",
    "end": "1952360"
  },
  {
    "text": "answer to the user we're good to send this golden data set to Langs Smith under the name chinuk",
    "start": "1952360",
    "end": "1958519"
  },
  {
    "text": "customer service boot trajectory great so now that we have a",
    "start": "1958519",
    "end": "1964039"
  },
  {
    "text": "golden data set let's move on to step two which is defining the application logic that we want to evaluate to do so",
    "start": "1964039",
    "end": "1970159"
  },
  {
    "text": "we're going to need to create another Target function called runor graph when",
    "start": "1970159",
    "end": "1975480"
  },
  {
    "text": "this evaluation is kicked off langi SD K will automatically send the inputs from our golden data set to this target",
    "start": "1975480",
    "end": "1981720"
  },
  {
    "text": "function which we're then going to pass to our customer support agent which is Den noted by",
    "start": "1981720",
    "end": "1987639"
  },
  {
    "text": "graph and what we're going to do is as this customer support agent is answering this question from the inputs varable",
    "start": "1987639",
    "end": "1993639"
  },
  {
    "text": "and data set is stream back the events and we're even going to be able to stream back the events from our",
    "start": "1993639",
    "end": "2000200"
  },
  {
    "text": "subgraphs because here we're setting subgraphs equal to true in stream mode equal to",
    "start": "2000200",
    "end": "2005679"
  },
  {
    "text": "bug and as these events are streaming back we're going to do is append the names of all the nodes and tools that we",
    "start": "2005679",
    "end": "2014360"
  },
  {
    "text": "utilize to an array called trajectory and so at the very end when we return this trajectory array we'll have the",
    "start": "2014360",
    "end": "2020960"
  },
  {
    "text": "names of all the nodes and the tools that we routed to and used when responding to that question from the",
    "start": "2020960",
    "end": "2027760"
  },
  {
    "text": "customer great so now we have our golden data set in the application logic we want to evaluate let's move on to step",
    "start": "2027880",
    "end": "2033840"
  },
  {
    "text": "three which is defining our evaluators up until this point each of the two evaluation strategies has just used a",
    "start": "2033840",
    "end": "2040360"
  },
  {
    "text": "single evaluator in this trajectory evaluation I'm actually going to use two evaluators and the first evaluator is",
    "start": "2040360",
    "end": "2047399"
  },
  {
    "text": "called evaluate extra steps what it'll do is it'll fetch the outputs or the",
    "start": "2047399",
    "end": "2053878"
  },
  {
    "text": "trory array that gets returned from my target function and the reference outputs from my golden data set both of",
    "start": "2053879",
    "end": "2061040"
  },
  {
    "text": "these are automatically passed to it by Langs Smith's SDK when we kick off the experiment and it'll just check if the",
    "start": "2061040",
    "end": "2067919"
  },
  {
    "text": "that my customer support agent took in the Target function has additional steps compared to the trajectory we defined in",
    "start": "2067919",
    "end": "2074240"
  },
  {
    "text": "our reference output and if it did take some extra steps we'll return it here",
    "start": "2074240",
    "end": "2080358"
  },
  {
    "text": "and the reason we're checking for extra steps is if you remember from earlier this video we want to make sure our customer support agent doesn't take an",
    "start": "2080359",
    "end": "2086760"
  },
  {
    "text": "inefficient trajectory so we want to make sure for example when we get routed to the question answering subgraph we",
    "start": "2086760",
    "end": "2093480"
  },
  {
    "text": "don't call one tool an unnecessary unnecessary number of times and we don't call a wrong",
    "start": "2093480",
    "end": "2099599"
  },
  {
    "text": "tool our second evaluator is going to be called evalate unmatch steps it's also",
    "start": "2099599",
    "end": "2104880"
  },
  {
    "text": "going to automatically receive the outputs or the trajectory arrays that were returned by my target function and",
    "start": "2104880",
    "end": "2111240"
  },
  {
    "text": "the reference outputs for my golden data set and this eval on my steps function",
    "start": "2111240",
    "end": "2116320"
  },
  {
    "text": "is going to check if our customer support agent called some tools or took some steps that are not in the directory",
    "start": "2116320",
    "end": "2122480"
  },
  {
    "text": "we defined in our reference output and this check is going to be order sensitive so if our customer sport agent",
    "start": "2122480",
    "end": "2128240"
  },
  {
    "text": "followed the trajectory step one step two step three but the ideal trajectory that we defined in our golden data set",
    "start": "2128240",
    "end": "2134760"
  },
  {
    "text": "is step three step two step one we're actually going to say that our customer support agent had unmatched steps",
    "start": "2134760",
    "end": "2142200"
  },
  {
    "text": "because even though the names of the steps are correct and match the ones in our reference output the order is",
    "start": "2142200",
    "end": "2149359"
  },
  {
    "text": "incorrect and so we're just going to return the number of unmatched steps here under the key unmatched steps and",
    "start": "2149359",
    "end": "2155560"
  },
  {
    "text": "we're returning the extra steps under the key extra steps and you'll see both these these keys and their Associated",
    "start": "2155560",
    "end": "2161599"
  },
  {
    "text": "value in length bit CI our last step is to run the evaluation using the evaluate function",
    "start": "2161599",
    "end": "2167920"
  },
  {
    "text": "we're going to specify the target function here the name of the golden data set the list of evaluators that",
    "start": "2167920",
    "end": "2173040"
  },
  {
    "text": "we're using and the name of the experiment which which will show up on lenss withth UI and we're going to hop",
    "start": "2173040",
    "end": "2178359"
  },
  {
    "text": "there now all right we're in the lenss withth UI the first thing to note is that we successfully created our gold to",
    "start": "2178359",
    "end": "2184160"
  },
  {
    "text": "data set so here I'm in our data set Chu C for Server spot directory and we can",
    "start": "2184160",
    "end": "2189640"
  },
  {
    "text": "see that the inputs and the outputs that we defined in our code were successfully sent over to lsmith so I'll click into",
    "start": "2189640",
    "end": "2195880"
  },
  {
    "text": "this example input output pair from our golden data set we can see the input is just that question we had to finded in",
    "start": "2195880",
    "end": "2201800"
  },
  {
    "text": "code the question is my name is Aaron Mitchell and i' like a refund on my lead Zeppelin purchases Aaron also provides",
    "start": "2201800",
    "end": "2208240"
  },
  {
    "text": "his phone number so we can identify him in the database and we can see in the reference output the ideal trory that we",
    "start": "2208240",
    "end": "2215079"
  },
  {
    "text": "defined in code was also sent over successfully so the ideal directory we'd want our agent to follow when it",
    "start": "2215079",
    "end": "2220480"
  },
  {
    "text": "receives a query like this is to first get routed to the refund subgraph then get routed to The Gather info node then",
    "start": "2220480",
    "end": "2227599"
  },
  {
    "text": "get routed to the lookup lookup node and then ultimately that that last compile followup node great so our golden data",
    "start": "2227599",
    "end": "2235000"
  },
  {
    "text": "set looks looks good and it got successfully sent over to lsmith Let's click in and look at our experiment in a",
    "start": "2235000",
    "end": "2241240"
  },
  {
    "text": "bit deeper detail so in this view as usual we can see the inputs in the outputs from our golden data set",
    "start": "2241240",
    "end": "2248079"
  },
  {
    "text": "and then we can see the trajectory that our customer support agent followed when it was given the input from the golden data set in that Target function and so",
    "start": "2248079",
    "end": "2255640"
  },
  {
    "text": "we can see for this input from the golden data set our customer support agent followed this trajectory when constructing its final",
    "start": "2255640",
    "end": "2262359"
  },
  {
    "text": "answer and then we can see the two evaluators that were attached to this new output by the extra steps evaluator",
    "start": "2262359",
    "end": "2268640"
  },
  {
    "text": "function and the unmatched steps evaluator function so for this input from the golden data set or this",
    "start": "2268640",
    "end": "2274520"
  },
  {
    "text": "question our customer support agent did phenomenal you can see that it didn't take any extra steps and it didn't have",
    "start": "2274520",
    "end": "2281079"
  },
  {
    "text": "any unmatched steps in fact the trajectory that it followed is an exact one: one or perfect match with the",
    "start": "2281079",
    "end": "2288400"
  },
  {
    "text": "trajectory that we defined in our reference output great and our agent did perfect",
    "start": "2288400",
    "end": "2294880"
  },
  {
    "text": "on these other three inputs as well from our golden data set so here no extra steps no unmatched steps one input where",
    "start": "2294880",
    "end": "2302720"
  },
  {
    "text": "our customer support agent struggled a little bit is this input where the customer asked who recorded wish you",
    "start": "2302720",
    "end": "2308599"
  },
  {
    "text": "were here again what other albums by them do you have so when our customer support agent was given this question it",
    "start": "2308599",
    "end": "2315119"
  },
  {
    "text": "not only took some extra steps it actually took some unnotched steps and",
    "start": "2315119",
    "end": "2320200"
  },
  {
    "text": "let's look at what what took place so ideally when our customer support agent receives a query like this we would like",
    "start": "2320200",
    "end": "2326440"
  },
  {
    "text": "to Route it to the question answering subgraph because this question is about the products and offerings of the music store we'd like it to First Call the",
    "start": "2326440",
    "end": "2333760"
  },
  {
    "text": "lookup track tool so in this case it look up the information on the track wish you were here",
    "start": "2333760",
    "end": "2339680"
  },
  {
    "text": "again and then to answer this second part of the question what other albums by them do you have we'd want our agent",
    "start": "2339680",
    "end": "2345680"
  },
  {
    "text": "to then use the lookup album tool so take the information it got from the lookup track tool look up all the albums",
    "start": "2345680",
    "end": "2352560"
  },
  {
    "text": "Associated uh with the artist who created wish you were here again and",
    "start": "2352560",
    "end": "2357800"
  },
  {
    "text": "then return it to the user our agent didn't follow this optimal trajectory it",
    "start": "2357800",
    "end": "2363319"
  },
  {
    "text": "got tripped up and instead first called the lookup album tool when should have first called the lookup track tool and",
    "start": "2363319",
    "end": "2370119"
  },
  {
    "text": "as a result it realized it needed to course correct and it needed to First Call the lookup track tool to get the",
    "start": "2370119",
    "end": "2376040"
  },
  {
    "text": "information on who recorded this song and then call the lookup album tool and be able to answer that second part of",
    "start": "2376040",
    "end": "2382160"
  },
  {
    "text": "the query which is what other albums by that artist do you have and so as a result it had it took three extra steps",
    "start": "2382160",
    "end": "2388720"
  },
  {
    "text": "and had three unmatched steps great but other than that right the agent performed pretty well on this",
    "start": "2388720",
    "end": "2395079"
  },
  {
    "text": "directory evaluation we'll just have to make sure going forward we keep an eye on inputs like this and tweak some part",
    "start": "2395079",
    "end": "2400599"
  },
  {
    "text": "of our agent so it does better going forward awesome so those are the three valuation strategies I wanted to show",
    "start": "2400599",
    "end": "2406599"
  },
  {
    "text": "off in this video and this will be the end of the video if you want to keep learning about building agents or",
    "start": "2406599",
    "end": "2412720"
  },
  {
    "text": "evaluating agents or anything beyond um I'd really encourage you to take the",
    "start": "2412720",
    "end": "2418119"
  },
  {
    "text": "introduction to lsmith course we've put together and the introduction to L graph course put together you can access both",
    "start": "2418119",
    "end": "2424440"
  },
  {
    "text": "at the URL academy. Len chain.com collections this will give you a deep",
    "start": "2424440",
    "end": "2429520"
  },
  {
    "text": "dive into lsmith we've touched a little bit on it in this video just from the standpoint of experiments and data setes",
    "start": "2429520",
    "end": "2435800"
  },
  {
    "text": "and this will be a deep dive into Lang graph our open source framework which helps you build a gentic applications so",
    "start": "2435800",
    "end": "2441760"
  },
  {
    "text": "I hope this is helpful and and I'll see you in the next one",
    "start": "2441760",
    "end": "2446559"
  }
]