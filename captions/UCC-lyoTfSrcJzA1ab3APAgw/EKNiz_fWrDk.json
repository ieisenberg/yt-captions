[
  {
    "text": "what's up everyone it's brace and this",
    "start": "680",
    "end": "2200"
  },
  {
    "text": "video is a continuation in our",
    "start": "2200",
    "end": "3520"
  },
  {
    "text": "generative UI Series in this video we're",
    "start": "3520",
    "end": "5799"
  },
  {
    "text": "going to be building a whole new",
    "start": "5799",
    "end": "7399"
  },
  {
    "text": "generative UI app which is going to be",
    "start": "7399",
    "end": "9320"
  },
  {
    "text": "deployed on lra cloud which is our new",
    "start": "9320",
    "end": "11599"
  },
  {
    "text": "Cloud offering for hosting lra",
    "start": "11599",
    "end": "14240"
  },
  {
    "text": "applications um and because we're using",
    "start": "14240",
    "end": "16000"
  },
  {
    "text": "lra Cloud we're going to build the back",
    "start": "16000",
    "end": "17560"
  },
  {
    "text": "end which Powers this generative UI app",
    "start": "17560",
    "end": "19760"
  },
  {
    "text": "in langra Python um and then this front",
    "start": "19760",
    "end": "21960"
  },
  {
    "text": "end is as the same as other videos it's",
    "start": "21960",
    "end": "24279"
  },
  {
    "text": "written in xjs with typescript so the",
    "start": "24279",
    "end": "27199"
  },
  {
    "text": "reason this video is different from",
    "start": "27199",
    "end": "28480"
  },
  {
    "text": "other videos and the way it's more",
    "start": "28480",
    "end": "30160"
  },
  {
    "text": "customizable is because here we're going",
    "start": "30160",
    "end": "32200"
  },
  {
    "text": "to be using this entire page as our",
    "start": "32200",
    "end": "34680"
  },
  {
    "text": "canvas for generating and placing the UI",
    "start": "34680",
    "end": "36600"
  },
  {
    "text": "components in the previous videos they",
    "start": "36600",
    "end": "38760"
  },
  {
    "text": "were all chat bots so it's pretty",
    "start": "38760",
    "end": "40160"
  },
  {
    "text": "predictable where the next UI component",
    "start": "40160",
    "end": "41480"
  },
  {
    "text": "was going to have to get placed and they",
    "start": "41480",
    "end": "42960"
  },
  {
    "text": "weren't very Dynamic it was usually you",
    "start": "42960",
    "end": "44760"
  },
  {
    "text": "know some preset component that would",
    "start": "44760",
    "end": "46360"
  },
  {
    "text": "then just get some simple props passed",
    "start": "46360",
    "end": "47920"
  },
  {
    "text": "to it and stuck right in as the last",
    "start": "47920",
    "end": "49719"
  },
  {
    "text": "message here we're using pretty much",
    "start": "49719",
    "end": "52440"
  },
  {
    "text": "this entire UI to generate and place",
    "start": "52440",
    "end": "54960"
  },
  {
    "text": "components on um and the back end is",
    "start": "54960",
    "end": "56719"
  },
  {
    "text": "also a little bit more complex so as you",
    "start": "56719",
    "end": "58239"
  },
  {
    "text": "see right here we have this magic filter",
    "start": "58239",
    "end": "59600"
  },
  {
    "text": "input this is going to take a user's",
    "start": "59600",
    "end": "61879"
  },
  {
    "text": "input which is just natural language",
    "start": "61879",
    "end": "63760"
  },
  {
    "text": "describing the filter and maybe the way",
    "start": "63760",
    "end": "66840"
  },
  {
    "text": "they want the data visualized our LM is",
    "start": "66840",
    "end": "69240"
  },
  {
    "text": "going to take that perform some query",
    "start": "69240",
    "end": "70680"
  },
  {
    "text": "analysis on that and extract different",
    "start": "70680",
    "end": "72640"
  },
  {
    "text": "things like the filters that should",
    "start": "72640",
    "end": "74080"
  },
  {
    "text": "apply to our orders um the chart type",
    "start": "74080",
    "end": "76720"
  },
  {
    "text": "the way it should render the data on",
    "start": "76720",
    "end": "78600"
  },
  {
    "text": "this chart type and then it's going to",
    "start": "78600",
    "end": "80479"
  },
  {
    "text": "actually perform those filters send it",
    "start": "80479",
    "end": "82000"
  },
  {
    "text": "all back to the client and we're going",
    "start": "82000",
    "end": "83320"
  },
  {
    "text": "to render it in real time as each node",
    "start": "83320",
    "end": "85280"
  },
  {
    "text": "is completed so if we see up here we",
    "start": "85280",
    "end": "87840"
  },
  {
    "text": "have this filters and display types pop",
    "start": "87840",
    "end": "90159"
  },
  {
    "text": "up if we click on the filters we can see",
    "start": "90159",
    "end": "91840"
  },
  {
    "text": "all of the different filters that the LM",
    "start": "91840",
    "end": "93560"
  },
  {
    "text": "can select from so when you're",
    "start": "93560",
    "end": "94759"
  },
  {
    "text": "performing your magic filter input uh",
    "start": "94759",
    "end": "97880"
  },
  {
    "text": "you can use this to kind of reference",
    "start": "97880",
    "end": "100000"
  },
  {
    "text": "different filters you want to apply so",
    "start": "100000",
    "end": "101600"
  },
  {
    "text": "let's say we want a filter by state we",
    "start": "101600",
    "end": "102880"
  },
  {
    "text": "could say like filter by California or",
    "start": "102880",
    "end": "105240"
  },
  {
    "text": "we could say filter by orders in",
    "start": "105240",
    "end": "107159"
  },
  {
    "text": "California that have a discount um we",
    "start": "107159",
    "end": "109479"
  },
  {
    "text": "can use really any combination of these",
    "start": "109479",
    "end": "111079"
  },
  {
    "text": "filters we want and our llm is going to",
    "start": "111079",
    "end": "112920"
  },
  {
    "text": "perform some query analysis and extract",
    "start": "112920",
    "end": "114479"
  },
  {
    "text": "these",
    "start": "114479",
    "end": "115360"
  },
  {
    "text": "filters we also have some preset display",
    "start": "115360",
    "end": "118000"
  },
  {
    "text": "types these will map to",
    "start": "118000",
    "end": "120680"
  },
  {
    "text": "what you're seeing right here so it's",
    "start": "120680",
    "end": "122039"
  },
  {
    "text": "they all link to either a bar chart a",
    "start": "122039",
    "end": "123759"
  },
  {
    "text": "line chart or a pie chart um and it's",
    "start": "123759",
    "end": "125479"
  },
  {
    "text": "the preset way that the data is going to",
    "start": "125479",
    "end": "127520"
  },
  {
    "text": "be displayed in that chart so it's",
    "start": "127520",
    "end": "128679"
  },
  {
    "text": "either um some unique data point for the",
    "start": "128679",
    "end": "131599"
  },
  {
    "text": "y- AIS and or the the Y AIS and the xais",
    "start": "131599",
    "end": "135319"
  },
  {
    "text": "so you can also use these when you're",
    "start": "135319",
    "end": "136519"
  },
  {
    "text": "referencing to reference when you're",
    "start": "136519",
    "end": "138400"
  },
  {
    "text": "performing your magic filter um the LM",
    "start": "138400",
    "end": "140599"
  },
  {
    "text": "should be able to take what you",
    "start": "140599",
    "end": "142000"
  },
  {
    "text": "described in your filter and map that to",
    "start": "142000",
    "end": "143879"
  },
  {
    "text": "the proper display type to then render",
    "start": "143879",
    "end": "145879"
  },
  {
    "text": "your data so we can do something like",
    "start": "145879",
    "end": "149239"
  },
  {
    "text": "orders",
    "start": "149239",
    "end": "150959"
  },
  {
    "text": "by",
    "start": "150959",
    "end": "152640"
  },
  {
    "text": "status here we see our input and after",
    "start": "152640",
    "end": "156280"
  },
  {
    "text": "it loads we should hopefully get a pi",
    "start": "156280",
    "end": "158040"
  },
  {
    "text": "chart yep and it describes us the uh the",
    "start": "158040",
    "end": "161440"
  },
  {
    "text": "name of display type that it's rendering",
    "start": "161440",
    "end": "163040"
  },
  {
    "text": "and gives us a short little description",
    "start": "163040",
    "end": "164560"
  },
  {
    "text": "of what this is showing us we can see we",
    "start": "164560",
    "end": "167159"
  },
  {
    "text": "have 51 orders in processing 37 that are",
    "start": "167159",
    "end": "169879"
  },
  {
    "text": "pending 43 that are shipped and so on uh",
    "start": "169879",
    "end": "173120"
  },
  {
    "text": "we don't have any filters here and",
    "start": "173120",
    "end": "174560"
  },
  {
    "text": "that's because this input doesn't really",
    "start": "174560",
    "end": "176760"
  },
  {
    "text": "need any filters applied based on the",
    "start": "176760",
    "end": "178920"
  },
  {
    "text": "filters that is available to it it right",
    "start": "178920",
    "end": "180239"
  },
  {
    "text": "it's just saying give me all the orders",
    "start": "180239",
    "end": "182640"
  },
  {
    "text": "and show them in a stat in a by status",
    "start": "182640",
    "end": "185480"
  },
  {
    "text": "so it's going to in this case it skipped",
    "start": "185480",
    "end": "187000"
  },
  {
    "text": "over the filters didn't apply any",
    "start": "187000",
    "end": "188080"
  },
  {
    "text": "filters because we want all the orders",
    "start": "188080",
    "end": "190360"
  },
  {
    "text": "and instead it looked at the pie charts",
    "start": "190360",
    "end": "192159"
  },
  {
    "text": "and chose the proper pie chart or it",
    "start": "192159",
    "end": "194200"
  },
  {
    "text": "chose the proper chart to then render",
    "start": "194200",
    "end": "195920"
  },
  {
    "text": "the database in our request we can also",
    "start": "195920",
    "end": "198000"
  },
  {
    "text": "say something like orders after 2023 101",
    "start": "198000",
    "end": "202840"
  },
  {
    "text": "so this should use the after date filter",
    "start": "202840",
    "end": "205400"
  },
  {
    "text": "there we go after date 2023 101 and it",
    "start": "205400",
    "end": "208680"
  },
  {
    "text": "decided to give us a line chart showing",
    "start": "208680",
    "end": "210519"
  },
  {
    "text": "each day and the total dollar amount of",
    "start": "210519",
    "end": "212400"
  },
  {
    "text": "orders from that day we get the",
    "start": "212400",
    "end": "214680"
  },
  {
    "text": "description um and we get our chart so",
    "start": "214680",
    "end": "218000"
  },
  {
    "text": "now let's quickly look at langra deploy",
    "start": "218000",
    "end": "219959"
  },
  {
    "text": "to see what this Trace looks like in the",
    "start": "219959",
    "end": "221959"
  },
  {
    "text": "back end and then we can jump into the",
    "start": "221959",
    "end": "223319"
  },
  {
    "text": "code and see how this is",
    "start": "223319",
    "end": "224799"
  },
  {
    "text": "written so if we go over to our lra",
    "start": "224799",
    "end": "226840"
  },
  {
    "text": "deploy app we see this name is genui",
    "start": "226840",
    "end": "229439"
  },
  {
    "text": "video um in a little bit after we finish",
    "start": "229439",
    "end": "231560"
  },
  {
    "text": "walking through the code I'm going to",
    "start": "231560",
    "end": "232560"
  },
  {
    "text": "walk you through exactly how you can",
    "start": "232560",
    "end": "233760"
  },
  {
    "text": "deploy this yourself and it connect it",
    "start": "233760",
    "end": "235079"
  },
  {
    "text": "to the front end and get running uh but",
    "start": "235079",
    "end": "236760"
  },
  {
    "text": "let's quickly take a look at just what",
    "start": "236760",
    "end": "238120"
  },
  {
    "text": "this dashboard looks like so we see here",
    "start": "238120",
    "end": "240040"
  },
  {
    "text": "we have all of our revisions these are",
    "start": "240040",
    "end": "241360"
  },
  {
    "text": "like a deployment um when I make a",
    "start": "241360",
    "end": "243239"
  },
  {
    "text": "commit I can add a new re revision and",
    "start": "243239",
    "end": "245079"
  },
  {
    "text": "it'll redeploy my server with that",
    "start": "245079",
    "end": "246280"
  },
  {
    "text": "latest code we can see some charts and",
    "start": "246280",
    "end": "248720"
  },
  {
    "text": "we have a lot more charts we can access",
    "start": "248720",
    "end": "250560"
  },
  {
    "text": "and then we see all of our runs so if I",
    "start": "250560",
    "end": "252200"
  },
  {
    "text": "open this up if if you're familiar with",
    "start": "252200",
    "end": "253720"
  },
  {
    "text": "lsmith this should look pretty familiar",
    "start": "253720",
    "end": "256040"
  },
  {
    "text": "to you because it's just a lsmith run",
    "start": "256040",
    "end": "258079"
  },
  {
    "text": "and it shows all the",
    "start": "258079",
    "end": "260160"
  },
  {
    "text": "nodes so we have our generate filters",
    "start": "260160",
    "end": "262520"
  },
  {
    "text": "generate chart type generate display",
    "start": "262520",
    "end": "263960"
  },
  {
    "text": "format and filter data node um and then",
    "start": "263960",
    "end": "266199"
  },
  {
    "text": "we can inspect each of these runs and",
    "start": "266199",
    "end": "268360"
  },
  {
    "text": "look at the actual you know API call or",
    "start": "268360",
    "end": "270880"
  },
  {
    "text": "prompt template call that",
    "start": "270880",
    "end": "272759"
  },
  {
    "text": "happened okay so now that we have a high",
    "start": "272759",
    "end": "275639"
  },
  {
    "text": "level idea as to what lra deploy is and",
    "start": "275639",
    "end": "277800"
  },
  {
    "text": "what the UI looks like let's jump into",
    "start": "277800",
    "end": "279160"
  },
  {
    "text": "the code and Implement our Lang graph",
    "start": "279160",
    "end": "281000"
  },
  {
    "text": "python backend so if you want to follow",
    "start": "281000",
    "end": "283600"
  },
  {
    "text": "along in the code I'm going to add a",
    "start": "283600",
    "end": "284960"
  },
  {
    "text": "link to this GAA repo in the description",
    "start": "284960",
    "end": "286960"
  },
  {
    "text": "if you've already watched our other",
    "start": "286960",
    "end": "288479"
  },
  {
    "text": "gener UI videos it's the same repo um",
    "start": "288479",
    "end": "291240"
  },
  {
    "text": "but we have a new directory charts so",
    "start": "291240",
    "end": "293960"
  },
  {
    "text": "this should all look pretty familiar to",
    "start": "293960",
    "end": "295240"
  },
  {
    "text": "you and the new directory is charts just",
    "start": "295240",
    "end": "297080"
  },
  {
    "text": "pull fresh from Main you should get that",
    "start": "297080",
    "end": "299080"
  },
  {
    "text": "code speaking of the other videos if you",
    "start": "299080",
    "end": "301360"
  },
  {
    "text": "haven't seen them you should definitely",
    "start": "301360",
    "end": "302919"
  },
  {
    "text": "go watch at least the intro video as to",
    "start": "302919",
    "end": "304960"
  },
  {
    "text": "what is generative UI talks about some",
    "start": "304960",
    "end": "306880"
  },
  {
    "text": "use cases where it performs better than",
    "start": "306880",
    "end": "308800"
  },
  {
    "text": "other traditional methods um and some",
    "start": "308800",
    "end": "310639"
  },
  {
    "text": "other high level things and if you want",
    "start": "310639",
    "end": "312600"
  },
  {
    "text": "to watch the chatbot video where I",
    "start": "312600",
    "end": "314639"
  },
  {
    "text": "Implement that I go into a lot more",
    "start": "314639",
    "end": "315960"
  },
  {
    "text": "detail in the code AS to exactly how",
    "start": "315960",
    "end": "317800"
  },
  {
    "text": "we're rendering these components on the",
    "start": "317800",
    "end": "319759"
  },
  {
    "text": "UI uh generating these UI components and",
    "start": "319759",
    "end": "322360"
  },
  {
    "text": "just lot more detail into the actual",
    "start": "322360",
    "end": "324680"
  },
  {
    "text": "code whereas in this video we're going",
    "start": "324680",
    "end": "326039"
  },
  {
    "text": "to be going over the code um but mainly",
    "start": "326039",
    "end": "328360"
  },
  {
    "text": "focusing on the L graph employ aspect of",
    "start": "328360",
    "end": "330759"
  },
  {
    "text": "it so if you're following along you",
    "start": "330759",
    "end": "332840"
  },
  {
    "text": "should go to backend geni backend charts",
    "start": "332840",
    "end": "335600"
  },
  {
    "text": "chain.",
    "start": "335600",
    "end": "336960"
  },
  {
    "text": "piy and as you can see here this is",
    "start": "336960",
    "end": "339199"
  },
  {
    "text": "where our entire Lane graph chain lives",
    "start": "339199",
    "end": "342400"
  },
  {
    "text": "right here we have a diagram which shows",
    "start": "342400",
    "end": "343720"
  },
  {
    "text": "our application um kind of a high level",
    "start": "343720",
    "end": "345720"
  },
  {
    "text": "architecture look at our application you",
    "start": "345720",
    "end": "347440"
  },
  {
    "text": "see we have two distinct charts or uh",
    "start": "347440",
    "end": "350400"
  },
  {
    "text": "sections sorry the python back end which",
    "start": "350400",
    "end": "352560"
  },
  {
    "text": "is hosted on Lang graph cloud and then",
    "start": "352560",
    "end": "354160"
  },
  {
    "text": "the front end which is running on the",
    "start": "354160",
    "end": "355840"
  },
  {
    "text": "edge or the client and that's in",
    "start": "355840",
    "end": "357800"
  },
  {
    "text": "nextjs so before we get into the code",
    "start": "357800",
    "end": "360000"
  },
  {
    "text": "take a quick look at this we can see",
    "start": "360000",
    "end": "361759"
  },
  {
    "text": "that our backend takes in a user input",
    "start": "361759",
    "end": "363600"
  },
  {
    "text": "which is that magic filter input we saw",
    "start": "363600",
    "end": "365199"
  },
  {
    "text": "in the demo and then it passes that",
    "start": "365199",
    "end": "367160"
  },
  {
    "text": "through to some nodes the first node is",
    "start": "367160",
    "end": "368520"
  },
  {
    "text": "generate filters this node has an llm",
    "start": "368520",
    "end": "371080"
  },
  {
    "text": "this llm has a tool bound to it and that",
    "start": "371080",
    "end": "372960"
  },
  {
    "text": "tool has all the filters which we also",
    "start": "372960",
    "end": "375000"
  },
  {
    "text": "saw in the demo that it can apply to it",
    "start": "375000",
    "end": "377560"
  },
  {
    "text": "uh based on your user input and some",
    "start": "377560",
    "end": "379199"
  },
  {
    "text": "other prompting it then selects some",
    "start": "379199",
    "end": "381120"
  },
  {
    "text": "filters to apply to the order um",
    "start": "381120",
    "end": "384360"
  },
  {
    "text": "generates those pass that to to a tool",
    "start": "384360",
    "end": "386479"
  },
  {
    "text": "Alpa parser and then we have our final",
    "start": "386479",
    "end": "388960"
  },
  {
    "text": "generated filter fil's object that is",
    "start": "388960",
    "end": "391599"
  },
  {
    "text": "then stream back to the client this",
    "start": "391599",
    "end": "393319"
  },
  {
    "text": "dotted line Arrow represents a streaming",
    "start": "393319",
    "end": "396039"
  },
  {
    "text": "event um and we're able to extract all",
    "start": "396039",
    "end": "398240"
  },
  {
    "text": "these events because langra deploy and",
    "start": "398240",
    "end": "400319"
  },
  {
    "text": "Lang chain is able to do this we we have",
    "start": "400319",
    "end": "402919"
  },
  {
    "text": "this endpoint callede stream events",
    "start": "402919",
    "end": "404240"
  },
  {
    "text": "which essentially takes every single",
    "start": "404240",
    "end": "405560"
  },
  {
    "text": "event in your app so in this case it",
    "start": "405560",
    "end": "407639"
  },
  {
    "text": "would be like an onchain start when we",
    "start": "407639",
    "end": "409720"
  },
  {
    "text": "start this node uh anything that happens",
    "start": "409720",
    "end": "411800"
  },
  {
    "text": "in here like an llm call that would be",
    "start": "411800",
    "end": "413199"
  },
  {
    "text": "streamed back and then onchain end which",
    "start": "413199",
    "end": "415160"
  },
  {
    "text": "is when the node ends um that's what we",
    "start": "415160",
    "end": "417039"
  },
  {
    "text": "care about so when the node ends we",
    "start": "417039",
    "end": "418400"
  },
  {
    "text": "stream the result of that node back to",
    "start": "418400",
    "end": "420720"
  },
  {
    "text": "the client and then from there we're",
    "start": "420720",
    "end": "422039"
  },
  {
    "text": "able to map that to different components",
    "start": "422039",
    "end": "423639"
  },
  {
    "text": "like we saw if we look at the demo again",
    "start": "423639",
    "end": "427080"
  },
  {
    "text": "this would be one of those filter",
    "start": "427080",
    "end": "428199"
  },
  {
    "text": "components that we got from the first",
    "start": "428199",
    "end": "429360"
  },
  {
    "text": "step and then it renders that in the UI",
    "start": "429360",
    "end": "431960"
  },
  {
    "text": "um we stream these events back to the",
    "start": "431960",
    "end": "433319"
  },
  {
    "text": "client in order to get a much quicker",
    "start": "433319",
    "end": "435199"
  },
  {
    "text": "time to First interaction and",
    "start": "435199",
    "end": "436879"
  },
  {
    "text": "continuously update the UI while our",
    "start": "436879",
    "end": "439080"
  },
  {
    "text": "backend is working on it so the user",
    "start": "439080",
    "end": "440479"
  },
  {
    "text": "knows that something's going on um and",
    "start": "440479",
    "end": "443199"
  },
  {
    "text": "if we weren't to do that it might take 3",
    "start": "443199",
    "end": "445160"
  },
  {
    "text": "or four or 5 Seconds to render the final",
    "start": "445160",
    "end": "447759"
  },
  {
    "text": "node and render the data so this way we",
    "start": "447759",
    "end": "449759"
  },
  {
    "text": "just let the user know something's",
    "start": "449759",
    "end": "451039"
  },
  {
    "text": "happening um it keeps them engaged while",
    "start": "451039",
    "end": "453080"
  },
  {
    "text": "our backend is working on it that then",
    "start": "453080",
    "end": "455160"
  },
  {
    "text": "gets passed to the next node as you can",
    "start": "455160",
    "end": "457039"
  },
  {
    "text": "see most of these nodes or three out of",
    "start": "457039",
    "end": "458759"
  },
  {
    "text": "four are pretty similar they have an llm",
    "start": "458759",
    "end": "460759"
  },
  {
    "text": "with a tool tool output parser and then",
    "start": "460759",
    "end": "463000"
  },
  {
    "text": "we get some sort of result which we",
    "start": "463000",
    "end": "464199"
  },
  {
    "text": "uping the state with uh so this next",
    "start": "464199",
    "end": "466120"
  },
  {
    "text": "node generate chart type we bind a tool",
    "start": "466120",
    "end": "468680"
  },
  {
    "text": "to it with all the different charts it",
    "start": "468680",
    "end": "470360"
  },
  {
    "text": "can select so in our case it's bar chart",
    "start": "470360",
    "end": "472720"
  },
  {
    "text": "line chart or pie chart um it uses some",
    "start": "472720",
    "end": "475120"
  },
  {
    "text": "context like the user's input the",
    "start": "475120",
    "end": "476720"
  },
  {
    "text": "filters generated um the different ways",
    "start": "476720",
    "end": "479000"
  },
  {
    "text": "it can display play data on those charts",
    "start": "479000",
    "end": "481000"
  },
  {
    "text": "and it uses all that to make a decision",
    "start": "481000",
    "end": "483360"
  },
  {
    "text": "on what chart to then render we get the",
    "start": "483360",
    "end": "485960"
  },
  {
    "text": "result of that stream that back to the",
    "start": "485960",
    "end": "487800"
  },
  {
    "text": "client and we render a loading component",
    "start": "487800",
    "end": "490280"
  },
  {
    "text": "on the client once we know exactly what",
    "start": "490280",
    "end": "491840"
  },
  {
    "text": "chart it is so if it's a line chart we",
    "start": "491840",
    "end": "493400"
  },
  {
    "text": "might have this loading line chart",
    "start": "493400",
    "end": "494800"
  },
  {
    "text": "component render that in the UI um and",
    "start": "494800",
    "end": "497240"
  },
  {
    "text": "then before we've even performed the",
    "start": "497240",
    "end": "498520"
  },
  {
    "text": "filters or show or or we have access to",
    "start": "498520",
    "end": "501080"
  },
  {
    "text": "the final data we can show the user hey",
    "start": "501080",
    "end": "503159"
  },
  {
    "text": "we have these filters and we're going to",
    "start": "503159",
    "end": "504919"
  },
  {
    "text": "use this chart and we're working on it",
    "start": "504919",
    "end": "507280"
  },
  {
    "text": "then we go to the next node generate",
    "start": "507280",
    "end": "508960"
  },
  {
    "text": "data display format and that selects one",
    "start": "508960",
    "end": "511840"
  },
  {
    "text": "of these formats to best render your",
    "start": "511840",
    "end": "514599"
  },
  {
    "text": "data based on the filters and the chart",
    "start": "514599",
    "end": "516518"
  },
  {
    "text": "type and your input we update the state",
    "start": "516519",
    "end": "518800"
  },
  {
    "text": "and then pass that to the final node",
    "start": "518800",
    "end": "520120"
  },
  {
    "text": "which actually performs the filters on",
    "start": "520120",
    "end": "521518"
  },
  {
    "text": "the data using your generated filters",
    "start": "521519",
    "end": "523919"
  },
  {
    "text": "and the orders which we passed from the",
    "start": "523919",
    "end": "525600"
  },
  {
    "text": "client when this uh backend was first",
    "start": "525600",
    "end": "527560"
  },
  {
    "text": "invoked that just contains some if else",
    "start": "527560",
    "end": "530240"
  },
  {
    "text": "statements um and then updates our order",
    "start": "530240",
    "end": "532519"
  },
  {
    "text": "state with the filtered orders streams",
    "start": "532519",
    "end": "534360"
  },
  {
    "text": "that back to client and we render the",
    "start": "534360",
    "end": "535839"
  },
  {
    "text": "final chart on the client",
    "start": "535839",
    "end": "539680"
  },
  {
    "text": "now let's jump into the code so we can",
    "start": "539680",
    "end": "540959"
  },
  {
    "text": "see at the top of this file we have our",
    "start": "540959",
    "end": "542519"
  },
  {
    "text": "agent executor State this contains the",
    "start": "542519",
    "end": "544720"
  },
  {
    "text": "state that is act that is that we're",
    "start": "544720",
    "end": "546240"
  },
  {
    "text": "going to be have available to all of our",
    "start": "546240",
    "end": "547760"
  },
  {
    "text": "nodes um you can see these first three",
    "start": "547760",
    "end": "550079"
  },
  {
    "text": "are not optional they're required and",
    "start": "550079",
    "end": "551720"
  },
  {
    "text": "that's because these are the fields",
    "start": "551720",
    "end": "553079"
  },
  {
    "text": "which we're going to pass in to our back",
    "start": "553079",
    "end": "554760"
  },
  {
    "text": "end right when we invoke it so we have",
    "start": "554760",
    "end": "556120"
  },
  {
    "text": "the user input which is that magic",
    "start": "556120",
    "end": "557360"
  },
  {
    "text": "filter input display formats which were",
    "start": "557360",
    "end": "559959"
  },
  {
    "text": "all the ways it can display data and",
    "start": "559959",
    "end": "561760"
  },
  {
    "text": "then orders which are all of our fake",
    "start": "561760",
    "end": "563480"
  },
  {
    "text": "generated orders um that we generated on",
    "start": "563480",
    "end": "565680"
  },
  {
    "text": "the front end and we send it to the back",
    "start": "565680",
    "end": "567600"
  },
  {
    "text": "end these are all optional and these are",
    "start": "567600",
    "end": "570440"
  },
  {
    "text": "that's because these will be generated",
    "start": "570440",
    "end": "572079"
  },
  {
    "text": "in a node so selected filters will only",
    "start": "572079",
    "end": "574320"
  },
  {
    "text": "be generated in the first node so",
    "start": "574320",
    "end": "575760"
  },
  {
    "text": "technically it's optional because the um",
    "start": "575760",
    "end": "578959"
  },
  {
    "text": "graph won't have access to this field",
    "start": "578959",
    "end": "581440"
  },
  {
    "text": "until it's generated in the first node",
    "start": "581440",
    "end": "583560"
  },
  {
    "text": "chart type generated in the in the",
    "start": "583560",
    "end": "585160"
  },
  {
    "text": "second node display format generated in",
    "start": "585160",
    "end": "587240"
  },
  {
    "text": "the third node and this fourth node",
    "start": "587240",
    "end": "589160"
  },
  {
    "text": "we're just going to be updating this",
    "start": "589160",
    "end": "590519"
  },
  {
    "text": "original filters Fuel and replacing it",
    "start": "590519",
    "end": "592800"
  },
  {
    "text": "with our generated",
    "start": "592800",
    "end": "594560"
  },
  {
    "text": "filters if we scroll down we see this",
    "start": "594560",
    "end": "596720"
  },
  {
    "text": "create graph function this create graph",
    "start": "596720",
    "end": "598959"
  },
  {
    "text": "function returns a compiled graph which",
    "start": "598959",
    "end": "601120"
  },
  {
    "text": "which is the type of GRA of this when we",
    "start": "601120",
    "end": "603519"
  },
  {
    "text": "compile it um and then we have our nodes",
    "start": "603519",
    "end": "605440"
  },
  {
    "text": "so we have our generate filters generate",
    "start": "605440",
    "end": "607240"
  },
  {
    "text": "chart type data display format and",
    "start": "607240",
    "end": "609000"
  },
  {
    "text": "filter data node those all match up here",
    "start": "609000",
    "end": "611959"
  },
  {
    "text": "um and then we're not doing anything",
    "start": "611959",
    "end": "612920"
  },
  {
    "text": "complex with this Lane graph graph we're",
    "start": "612920",
    "end": "614640"
  },
  {
    "text": "just passing each node to the next so",
    "start": "614640",
    "end": "616600"
  },
  {
    "text": "we'll always start at generate filters",
    "start": "616600",
    "end": "618399"
  },
  {
    "text": "we'll always finish at filter data",
    "start": "618399",
    "end": "620519"
  },
  {
    "text": "filters will will get passed to chart",
    "start": "620519",
    "end": "622480"
  },
  {
    "text": "type chart type will get passed to data",
    "start": "622480",
    "end": "624480"
  },
  {
    "text": "format and display data format will get",
    "start": "624480",
    "end": "626640"
  },
  {
    "text": "passed to filter data um and then once",
    "start": "626640",
    "end": "629160"
  },
  {
    "text": "this Sol finish we compile our graph and",
    "start": "629160",
    "end": "631600"
  },
  {
    "text": "assign to this graph variable this is",
    "start": "631600",
    "end": "633920"
  },
  {
    "text": "because we're using Lang graph deploy",
    "start": "633920",
    "end": "635480"
  },
  {
    "text": "and langra deploy needs to know exactly",
    "start": "635480",
    "end": "637680"
  },
  {
    "text": "where to find the uh compiled graph",
    "start": "637680",
    "end": "640639"
  },
  {
    "text": "which you can then use on the cloud so",
    "start": "640639",
    "end": "643519"
  },
  {
    "text": "we have this Lang graph. Json file and",
    "start": "643519",
    "end": "646680"
  },
  {
    "text": "this is where we Define our L graph",
    "start": "646680",
    "end": "648560"
  },
  {
    "text": "configuration so we list our",
    "start": "648560",
    "end": "650399"
  },
  {
    "text": "dependencies in our case it's our geni",
    "start": "650399",
    "end": "652839"
  },
  {
    "text": "backend directory and we have a",
    "start": "652839",
    "end": "654440"
  },
  {
    "text": "requirements.txt file here which lets L",
    "start": "654440",
    "end": "657120"
  },
  {
    "text": "graph know what requirements to or what",
    "start": "657120",
    "end": "658839"
  },
  {
    "text": "dependenc to install on the server um",
    "start": "658839",
    "end": "662240"
  },
  {
    "text": "and then we have this graph dictionary",
    "start": "662240",
    "end": "663800"
  },
  {
    "text": "and this graph dictionary contains all",
    "start": "663800",
    "end": "665440"
  },
  {
    "text": "of the graphs we want on our server so",
    "start": "665440",
    "end": "667440"
  },
  {
    "text": "in our case we only have one but you",
    "start": "667440",
    "end": "669000"
  },
  {
    "text": "could have as many as you would like",
    "start": "669000",
    "end": "670560"
  },
  {
    "text": "here and they just need to map to a",
    "start": "670560",
    "end": "672560"
  },
  {
    "text": "compiled graph um so ours his name genui",
    "start": "672560",
    "end": "675399"
  },
  {
    "text": "graph and that contains a file path",
    "start": "675399",
    "end": "677959"
  },
  {
    "text": "genui backend charts chain and then the",
    "start": "677959",
    "end": "680480"
  },
  {
    "text": "name of the variable which this compile",
    "start": "680480",
    "end": "682120"
  },
  {
    "text": "graph is assigned to and then for local",
    "start": "682120",
    "end": "684440"
  },
  {
    "text": "testing and development we specify where",
    "start": "684440",
    "end": "686279"
  },
  {
    "text": "our environment variable folder is or",
    "start": "686279",
    "end": "687920"
  },
  {
    "text": "file is but we're not going to be doing",
    "start": "687920",
    "end": "689440"
  },
  {
    "text": "local here so we don't need to worry",
    "start": "689440",
    "end": "690639"
  },
  {
    "text": "about",
    "start": "690639",
    "end": "692440"
  },
  {
    "text": "that okay so now that we've done that we",
    "start": "692440",
    "end": "694639"
  },
  {
    "text": "can get into the actual code behind the",
    "start": "694639",
    "end": "696320"
  },
  {
    "text": "nodes so let's take a look at our first",
    "start": "696320",
    "end": "697880"
  },
  {
    "text": "node generate filters here we see it",
    "start": "697880",
    "end": "700880"
  },
  {
    "text": "takes in the agent State and returns",
    "start": "700880",
    "end": "702639"
  },
  {
    "text": "agent executor State um here we're only",
    "start": "702639",
    "end": "704880"
  },
  {
    "text": "returning one field and that's because",
    "start": "704880",
    "end": "706480"
  },
  {
    "text": "Lan graph allows us to return a single",
    "start": "706480",
    "end": "708600"
  },
  {
    "text": "field to the state and it will either",
    "start": "708600",
    "end": "710639"
  },
  {
    "text": "append or update that field to the full",
    "start": "710639",
    "end": "712760"
  },
  {
    "text": "State and then pass the full state with",
    "start": "712760",
    "end": "714880"
  },
  {
    "text": "that um addition or update to the next",
    "start": "714880",
    "end": "717360"
  },
  {
    "text": "node so here we get our state we Define",
    "start": "717360",
    "end": "720000"
  },
  {
    "text": "our prompt our prompt is pretty simple",
    "start": "720000",
    "end": "723079"
  },
  {
    "text": "you're a helpful assistant your task is",
    "start": "723079",
    "end": "724600"
  },
  {
    "text": "to determine the proper filters to apply",
    "start": "724600",
    "end": "726279"
  },
  {
    "text": "given a user input the user input is in",
    "start": "726279",
    "end": "728760"
  },
  {
    "text": "response to a magic filter prompt they",
    "start": "728760",
    "end": "730360"
  },
  {
    "text": "expect their natural language",
    "start": "730360",
    "end": "731560"
  },
  {
    "text": "description of the filters to be",
    "start": "731560",
    "end": "732680"
  },
  {
    "text": "converted to a structured query we then",
    "start": "732680",
    "end": "735320"
  },
  {
    "text": "get all of our product names so using",
    "start": "735320",
    "end": "737839"
  },
  {
    "text": "our state. orders field we extract all",
    "start": "737839",
    "end": "740360"
  },
  {
    "text": "the product names convert them to",
    "start": "740360",
    "end": "741480"
  },
  {
    "text": "lowercase and then pass that to our",
    "start": "741480",
    "end": "743000"
  },
  {
    "text": "filter schema function this function",
    "start": "743000",
    "end": "745839"
  },
  {
    "text": "takes in our product names and then",
    "start": "745839",
    "end": "747480"
  },
  {
    "text": "returns a new pented class fil schema",
    "start": "747480",
    "end": "750320"
  },
  {
    "text": "and you'll recognize these filters all",
    "start": "750320",
    "end": "752600"
  },
  {
    "text": "correspond to the filters we saw on our",
    "start": "752600",
    "end": "754279"
  },
  {
    "text": "front end dialogue and that's because",
    "start": "754279",
    "end": "757000"
  },
  {
    "text": "these are the filters the LM can select",
    "start": "757000",
    "end": "758920"
  },
  {
    "text": "they're all optional because the LM does",
    "start": "758920",
    "end": "760440"
  },
  {
    "text": "not necessarily need to select a filter",
    "start": "760440",
    "end": "762680"
  },
  {
    "text": "um but if wants to it can select",
    "start": "762680",
    "end": "764000"
  },
  {
    "text": "something like the product names to",
    "start": "764000",
    "end": "765160"
  },
  {
    "text": "filter by specific products uh statuses",
    "start": "765160",
    "end": "767800"
  },
  {
    "text": "to filter by one or multiple statuses",
    "start": "767800",
    "end": "770399"
  },
  {
    "text": "minimum discount percentage and so on so",
    "start": "770399",
    "end": "773360"
  },
  {
    "text": "we get our schema and then we",
    "start": "773360",
    "end": "775000"
  },
  {
    "text": "instantiate a new chat openai class uh",
    "start": "775000",
    "end": "778320"
  },
  {
    "text": "you can use any chat model which",
    "start": "778320",
    "end": "780160"
  },
  {
    "text": "supports tool calling in our case we're",
    "start": "780160",
    "end": "782000"
  },
  {
    "text": "going to be using open AI turbo because",
    "start": "782000",
    "end": "783279"
  },
  {
    "text": "it's quick and then we we pass with",
    "start": "783279",
    "end": "785680"
  },
  {
    "text": "structured output our schema and that",
    "start": "785680",
    "end": "787519"
  },
  {
    "text": "binds this tool to our model and forces",
    "start": "787519",
    "end": "789519"
  },
  {
    "text": "our model to invoke that tool using the",
    "start": "789519",
    "end": "792079"
  },
  {
    "text": "Lang and expression language we pipe our",
    "start": "792079",
    "end": "793920"
  },
  {
    "text": "prompt to our model and then we invoke",
    "start": "793920",
    "end": "795880"
  },
  {
    "text": "our chain this invoke call um if you're",
    "start": "795880",
    "end": "798040"
  },
  {
    "text": "not familiar with linkcn chain",
    "start": "798040",
    "end": "799160"
  },
  {
    "text": "expression language real quick it just",
    "start": "799160",
    "end": "800760"
  },
  {
    "text": "invokes our prompt to pass in this input",
    "start": "800760",
    "end": "803480"
  },
  {
    "text": "field which is what we're passing as our",
    "start": "803480",
    "end": "804920"
  },
  {
    "text": "human input and that's going to put",
    "start": "804920",
    "end": "806800"
  },
  {
    "text": "whatever content um which in our case is",
    "start": "806800",
    "end": "808920"
  },
  {
    "text": "the magic filter input it's going to",
    "start": "808920",
    "end": "810560"
  },
  {
    "text": "pass it to this field convert this to an",
    "start": "810560",
    "end": "812560"
  },
  {
    "text": "open AI uh compatible format and then",
    "start": "812560",
    "end": "814880"
  },
  {
    "text": "pass that to our model where we it's",
    "start": "814880",
    "end": "816839"
  },
  {
    "text": "going to hit the open II and give us",
    "start": "816839",
    "end": "819000"
  },
  {
    "text": "response since we're using with",
    "start": "819000",
    "end": "820720"
  },
  {
    "text": "structured output that already contains",
    "start": "820720",
    "end": "822279"
  },
  {
    "text": "a tool parser so the result is going to",
    "start": "822279",
    "end": "825240"
  },
  {
    "text": "be already parsed into just the tool",
    "start": "825240",
    "end": "827880"
  },
  {
    "text": "call um we can update our selected",
    "start": "827880",
    "end": "829560"
  },
  {
    "text": "filters State field with the selected",
    "start": "829560",
    "end": "831800"
  },
  {
    "text": "filters if any were",
    "start": "831800",
    "end": "833720"
  },
  {
    "text": "pasted the next two or three nodes we're",
    "start": "833720",
    "end": "836519"
  },
  {
    "text": "going to kind of blow through them",
    "start": "836519",
    "end": "837800"
  },
  {
    "text": "because they're all as we saw in our",
    "start": "837800",
    "end": "839240"
  },
  {
    "text": "diagram pretty similar to the first just",
    "start": "839240",
    "end": "840720"
  },
  {
    "text": "an llm call with a unique prompt output",
    "start": "840720",
    "end": "843399"
  },
  {
    "text": "parser um M schema and then we return",
    "start": "843399",
    "end": "845680"
  },
  {
    "text": "the type so generate chart type takes in",
    "start": "845680",
    "end": "848399"
  },
  {
    "text": "our state this prompt is a little bit",
    "start": "848399",
    "end": "850560"
  },
  {
    "text": "more complex so we say you're an expert",
    "start": "850560",
    "end": "852199"
  },
  {
    "text": "data analyst your task is to determine",
    "start": "852199",
    "end": "853920"
  },
  {
    "text": "the type the best type of chart to",
    "start": "853920",
    "end": "855600"
  },
  {
    "text": "display the data based on the filters",
    "start": "855600",
    "end": "857279"
  },
  {
    "text": "and user input you're provided with",
    "start": "857279",
    "end": "858920"
  },
  {
    "text": "three chart types bar line and Pi the",
    "start": "858920",
    "end": "861360"
  },
  {
    "text": "data which is being filtered is a set of",
    "start": "861360",
    "end": "862920"
  },
  {
    "text": "orders from an online store the user has",
    "start": "862920",
    "end": "865160"
  },
  {
    "text": "submitted an input that describes the",
    "start": "865160",
    "end": "866680"
  },
  {
    "text": "buils they'd like to apply to the data",
    "start": "866680",
    "end": "868519"
  },
  {
    "text": "keep in mind each chart type has set",
    "start": "868519",
    "end": "870320"
  },
  {
    "text": "formats to display the data we saw this",
    "start": "870320",
    "end": "872440"
  },
  {
    "text": "earlier with our display data formats so",
    "start": "872440",
    "end": "875959"
  },
  {
    "text": "we tell the LM you should consider the",
    "start": "875959",
    "end": "877839"
  },
  {
    "text": "best display format with selecting your",
    "start": "877839",
    "end": "879680"
  },
  {
    "text": "chart type then we pass it those data",
    "start": "879680",
    "end": "882360"
  },
  {
    "text": "display formats this contains the key",
    "start": "882360",
    "end": "884839"
  },
  {
    "text": "which it can use later to reference the",
    "start": "884839",
    "end": "886720"
  },
  {
    "text": "data uh the title of the format and the",
    "start": "886720",
    "end": "889880"
  },
  {
    "text": "description the LM then uses this and",
    "start": "889880",
    "end": "893320"
  },
  {
    "text": "the bar lineer pie chart to select the",
    "start": "893320",
    "end": "895920"
  },
  {
    "text": "best chart um based on whatever the LM",
    "start": "895920",
    "end": "899800"
  },
  {
    "text": "format it wants to then render the data",
    "start": "899800",
    "end": "901800"
  },
  {
    "text": "we also passed the selected filters",
    "start": "901800",
    "end": "903399"
  },
  {
    "text": "which have been generated and the magic",
    "start": "903399",
    "end": "905440"
  },
  {
    "text": "filter input from the user as extra",
    "start": "905440",
    "end": "907360"
  },
  {
    "text": "context we then have our schema which",
    "start": "907360",
    "end": "909880"
  },
  {
    "text": "contains the chart type just one of",
    "start": "909880",
    "end": "911279"
  },
  {
    "text": "these three um and the LM is going to",
    "start": "911279",
    "end": "913680"
  },
  {
    "text": "then pick one of these to render the",
    "start": "913680",
    "end": "915279"
  },
  {
    "text": "data on pass it to our model invoke our",
    "start": "915279",
    "end": "918000"
  },
  {
    "text": "prompt and then update the chart type",
    "start": "918000",
    "end": "920360"
  },
  {
    "text": "State field next our generate data",
    "start": "920360",
    "end": "923160"
  },
  {
    "text": "display format uh we know what the chart",
    "start": "923160",
    "end": "925519"
  },
  {
    "text": "type is so we say you're an exper data",
    "start": "925519",
    "end": "927519"
  },
  {
    "text": "analyst um and we basically tell it you",
    "start": "927519",
    "end": "930120"
  },
  {
    "text": "need to pick the proper data display",
    "start": "930120",
    "end": "932160"
  },
  {
    "text": "format based on the chart type we pass",
    "start": "932160",
    "end": "934680"
  },
  {
    "text": "in the extra context and then we",
    "start": "934680",
    "end": "938360"
  },
  {
    "text": "Define then we Define our display key",
    "start": "938480",
    "end": "941920"
  },
  {
    "text": "which contains a description saying the",
    "start": "941920",
    "end": "943279"
  },
  {
    "text": "key of the format to display the data in",
    "start": "943279",
    "end": "944959"
  },
  {
    "text": "must be one of and then we just join all",
    "start": "944959",
    "end": "947800"
  },
  {
    "text": "the different keys from the display",
    "start": "947800",
    "end": "949600"
  },
  {
    "text": "formats which match the chart type so",
    "start": "949600",
    "end": "952399"
  },
  {
    "text": "these this display format schema",
    "start": "952399",
    "end": "955440"
  },
  {
    "text": "contains the title which is",
    "start": "955440",
    "end": "959040"
  },
  {
    "text": "for example this the chart type bar line",
    "start": "959040",
    "end": "963600"
  },
  {
    "text": "or pie chart the description which would",
    "start": "963600",
    "end": "966199"
  },
  {
    "text": "be one of these and then also a key",
    "start": "966199",
    "end": "968600"
  },
  {
    "text": "which is say some unique key we can use",
    "start": "968600",
    "end": "970079"
  },
  {
    "text": "later on to identify which data display",
    "start": "970079",
    "end": "972560"
  },
  {
    "text": "format was",
    "start": "972560",
    "end": "974040"
  },
  {
    "text": "selected so getting back to our node we",
    "start": "974040",
    "end": "977519"
  },
  {
    "text": "pass all that through and then the LM",
    "start": "977519",
    "end": "979880"
  },
  {
    "text": "will select the best data display format",
    "start": "979880",
    "end": "982560"
  },
  {
    "text": "which it deems is the best way to render",
    "start": "982560",
    "end": "984720"
  },
  {
    "text": "the data for the user uh we invoke our",
    "start": "984720",
    "end": "986639"
  },
  {
    "text": "model and then update this data display",
    "start": "986639",
    "end": "988360"
  },
  {
    "text": "format State field and our graph with",
    "start": "988360",
    "end": "991319"
  },
  {
    "text": "whatever the LM selected finally we have",
    "start": "991319",
    "end": "993759"
  },
  {
    "text": "our filter data node which just takes in",
    "start": "993759",
    "end": "995920"
  },
  {
    "text": "the selected filters from the",
    "start": "995920",
    "end": "998120"
  },
  {
    "text": "state um any orders which we passed in",
    "start": "998120",
    "end": "1000399"
  },
  {
    "text": "originally and then we just have some if",
    "start": "1000399",
    "end": "1002199"
  },
  {
    "text": "else statements which filter out the",
    "start": "1002199",
    "end": "1003759"
  },
  {
    "text": "data um and if it managed to get past",
    "start": "1003759",
    "end": "1005839"
  },
  {
    "text": "all the filters we append it to this",
    "start": "1005839",
    "end": "1007560"
  },
  {
    "text": "filtered orders list and then finally",
    "start": "1007560",
    "end": "1010680"
  },
  {
    "text": "return via the orders field and that's",
    "start": "1010680",
    "end": "1012360"
  },
  {
    "text": "just going to overwrite the orders field",
    "start": "1012360",
    "end": "1014199"
  },
  {
    "text": "where originally it was all of the",
    "start": "1014199",
    "end": "1015600"
  },
  {
    "text": "orders but here it's going to overwrite",
    "start": "1015600",
    "end": "1017560"
  },
  {
    "text": "that to only the filtered order",
    "start": "1017560",
    "end": "1020839"
  },
  {
    "text": "that's it for our backend now we can",
    "start": "1020839",
    "end": "1022600"
  },
  {
    "text": "look at exactly how we would deploy this",
    "start": "1022600",
    "end": "1024280"
  },
  {
    "text": "to a fresh langra Cloud app um and then",
    "start": "1024280",
    "end": "1027120"
  },
  {
    "text": "connect that to the front end run it and",
    "start": "1027120",
    "end": "1028798"
  },
  {
    "text": "look at some more",
    "start": "1028799",
    "end": "1029918"
  },
  {
    "text": "demos so you're going to want to find",
    "start": "1029919",
    "end": "1032079"
  },
  {
    "text": "your Lang Smith app if you're not",
    "start": "1032079",
    "end": "1034079"
  },
  {
    "text": "already on langth I'll include some",
    "start": "1034079",
    "end": "1035678"
  },
  {
    "text": "links down below where you can sign up",
    "start": "1035679",
    "end": "1037798"
  },
  {
    "text": "um and then you want to click new",
    "start": "1037799",
    "end": "1039000"
  },
  {
    "text": "deployment your screen will probably",
    "start": "1039000",
    "end": "1040720"
  },
  {
    "text": "look a little bit different than mine if",
    "start": "1040720",
    "end": "1042079"
  },
  {
    "text": "you don't have any deployments already",
    "start": "1042079",
    "end": "1044120"
  },
  {
    "text": "um but this new deployment app should be",
    "start": "1044120",
    "end": "1045558"
  },
  {
    "text": "pretty much in the same place so you",
    "start": "1045559",
    "end": "1047079"
  },
  {
    "text": "click new deployment and then you're",
    "start": "1047079",
    "end": "1048640"
  },
  {
    "text": "going to want to connect your GitHub",
    "start": "1048640",
    "end": "1049880"
  },
  {
    "text": "account I've already connected mine and",
    "start": "1049880",
    "end": "1051720"
  },
  {
    "text": "then you just select the repo so I'm",
    "start": "1051720",
    "end": "1053679"
  },
  {
    "text": "going to want to deploy our genui python",
    "start": "1053679",
    "end": "1055480"
  },
  {
    "text": "app I do that and then I add a name um",
    "start": "1055480",
    "end": "1060720"
  },
  {
    "text": "test test deployment this is a path to",
    "start": "1060720",
    "end": "1063919"
  },
  {
    "text": "our Lang graph. Json file lives in this",
    "start": "1063919",
    "end": "1066919"
  },
  {
    "text": "repo it lives inside the backend",
    "start": "1066919",
    "end": "1070120"
  },
  {
    "text": "so",
    "start": "1070120",
    "end": "1071720"
  },
  {
    "text": "backend and then a get reference I am",
    "start": "1071720",
    "end": "1074520"
  },
  {
    "text": "going to be specifying a custom uh",
    "start": "1074520",
    "end": "1077080"
  },
  {
    "text": "Branch because I have some changes which",
    "start": "1077080",
    "end": "1078600"
  },
  {
    "text": "aren't merge domain but this could be",
    "start": "1078600",
    "end": "1080400"
  },
  {
    "text": "any git branch that you have so add your",
    "start": "1080400",
    "end": "1084039"
  },
  {
    "text": "git reference in my case it's brace SL",
    "start": "1084039",
    "end": "1086120"
  },
  {
    "text": "improved VI Biz and then this is the",
    "start": "1086120",
    "end": "1088960"
  },
  {
    "text": "deployment type I'm just using",
    "start": "1088960",
    "end": "1090159"
  },
  {
    "text": "development so I select development but",
    "start": "1090159",
    "end": "1091799"
  },
  {
    "text": "if you're going to production you're",
    "start": "1091799",
    "end": "1092840"
  },
  {
    "text": "going to want to select production oh I",
    "start": "1092840",
    "end": "1095240"
  },
  {
    "text": "got rid of it open it back up it's all",
    "start": "1095240",
    "end": "1097760"
  },
  {
    "text": "pretty much saved uh test deployment got",
    "start": "1097760",
    "end": "1100200"
  },
  {
    "text": "to add that back in there and then",
    "start": "1100200",
    "end": "1101520"
  },
  {
    "text": "environment variables this is where you",
    "start": "1101520",
    "end": "1103039"
  },
  {
    "text": "add any environment variables you might",
    "start": "1103039",
    "end": "1104320"
  },
  {
    "text": "need for your app so I'm going to add my",
    "start": "1104320",
    "end": "1107000"
  },
  {
    "text": "open AI secrets and some other things um",
    "start": "1107000",
    "end": "1109120"
  },
  {
    "text": "and then we'll come back so I've added",
    "start": "1109120",
    "end": "1111559"
  },
  {
    "text": "my open API key and then I add a tracing",
    "start": "1111559",
    "end": "1114679"
  },
  {
    "text": "project and this is where all the runs",
    "start": "1114679",
    "end": "1116480"
  },
  {
    "text": "from this app will get sent so I don't",
    "start": "1116480",
    "end": "1118440"
  },
  {
    "text": "have a test deployment tracing project",
    "start": "1118440",
    "end": "1120960"
  },
  {
    "text": "yet so we're just going to use the",
    "start": "1120960",
    "end": "1122400"
  },
  {
    "text": "default name at select um and hit submit",
    "start": "1122400",
    "end": "1125159"
  },
  {
    "text": "and now I've submitted my deployment",
    "start": "1125159",
    "end": "1127120"
  },
  {
    "text": "it's going to load and then try and",
    "start": "1127120",
    "end": "1129280"
  },
  {
    "text": "deploy or not try it's going to deploy",
    "start": "1129280",
    "end": "1131360"
  },
  {
    "text": "my app this is going to take a few",
    "start": "1131360",
    "end": "1133080"
  },
  {
    "text": "minutes so I'm just going to use the",
    "start": "1133080",
    "end": "1134039"
  },
  {
    "text": "deployment that I already have and we",
    "start": "1134039",
    "end": "1135720"
  },
  {
    "text": "can see how you would connect that to",
    "start": "1135720",
    "end": "1137600"
  },
  {
    "text": "your front end um and then actually make",
    "start": "1137600",
    "end": "1139480"
  },
  {
    "text": "API request to it okay so now we're at",
    "start": "1139480",
    "end": "1142240"
  },
  {
    "text": "my deployment we can see my deployment",
    "start": "1142240",
    "end": "1144120"
  },
  {
    "text": "is currently deployed and we have this",
    "start": "1144120",
    "end": "1146039"
  },
  {
    "text": "API docs link right here we can click on",
    "start": "1146039",
    "end": "1148120"
  },
  {
    "text": "that um while you're here you can look",
    "start": "1148120",
    "end": "1149919"
  },
  {
    "text": "at any API and points you might want to",
    "start": "1149919",
    "end": "1151679"
  },
  {
    "text": "hit but in our case we want this base",
    "start": "1151679",
    "end": "1153919"
  },
  {
    "text": "URL and this is the URL which we're",
    "start": "1153919",
    "end": "1155919"
  },
  {
    "text": "going to use to connect to it um below",
    "start": "1155919",
    "end": "1157480"
  },
  {
    "text": "it we see this API key this is a normal",
    "start": "1157480",
    "end": "1160320"
  },
  {
    "text": "lsmith API key you can generate those in",
    "start": "1160320",
    "end": "1162360"
  },
  {
    "text": "your settings of lsmith and we're going",
    "start": "1162360",
    "end": "1164200"
  },
  {
    "text": "to want to pass that under a custom",
    "start": "1164200",
    "end": "1165520"
  },
  {
    "text": "header via X API key so once you have",
    "start": "1165520",
    "end": "1168559"
  },
  {
    "text": "your your API key and your url um in my",
    "start": "1168559",
    "end": "1171840"
  },
  {
    "text": "case I wanted to set them as an",
    "start": "1171840",
    "end": "1173320"
  },
  {
    "text": "environment variable so I've set my API",
    "start": "1173320",
    "end": "1175039"
  },
  {
    "text": "URL under the langra cloud API URL and",
    "start": "1175039",
    "end": "1178320"
  },
  {
    "text": "then my API key under lra Cloud API key",
    "start": "1178320",
    "end": "1181039"
  },
  {
    "text": "you're going to want to instantiate a",
    "start": "1181039",
    "end": "1182240"
  },
  {
    "text": "new instance of the client from the Lang",
    "start": "1182240",
    "end": "1185280"
  },
  {
    "text": "Smith or Lang graph SDK see I've",
    "start": "1185280",
    "end": "1187799"
  },
  {
    "text": "imported client from Lang chain L graph",
    "start": "1187799",
    "end": "1190080"
  },
  {
    "text": "SDK and then I passed in my API URL and",
    "start": "1190080",
    "end": "1192880"
  },
  {
    "text": "my default headers containing my API key",
    "start": "1192880",
    "end": "1195159"
  },
  {
    "text": "this is going to be the SDK we're going",
    "start": "1195159",
    "end": "1197039"
  },
  {
    "text": "to use to connect to our backend and",
    "start": "1197039",
    "end": "1198440"
  },
  {
    "text": "make API requests so you can see the",
    "start": "1198440",
    "end": "1200200"
  },
  {
    "text": "first thing I do is I search for my",
    "start": "1200200",
    "end": "1201880"
  },
  {
    "text": "assistant um lra deploy offers a whole",
    "start": "1201880",
    "end": "1204480"
  },
  {
    "text": "lot of features around you know stateful",
    "start": "1204480",
    "end": "1206880"
  },
  {
    "text": "uh threads where you can revisit certain",
    "start": "1206880",
    "end": "1209120"
  },
  {
    "text": "steps and persist the data that were in",
    "start": "1209120",
    "end": "1210880"
  },
  {
    "text": "them in this case we don't really need",
    "start": "1210880",
    "end": "1213280"
  },
  {
    "text": "any of our previous threads are run so I",
    "start": "1213280",
    "end": "1215400"
  },
  {
    "text": "just grab the first assistant um and",
    "start": "1215400",
    "end": "1217720"
  },
  {
    "text": "then I have this runnable Lambda the",
    "start": "1217720",
    "end": "1219919"
  },
  {
    "text": "reason I have this runnable Lambda is",
    "start": "1219919",
    "end": "1221600"
  },
  {
    "text": "because the stream runnable UI function",
    "start": "1221600",
    "end": "1223840"
  },
  {
    "text": "we use to stream the UI components to",
    "start": "1223840",
    "end": "1226159"
  },
  {
    "text": "the client requires a lang chain",
    "start": "1226159",
    "end": "1228840"
  },
  {
    "text": "runnable to invoke as the API the Lang",
    "start": "1228840",
    "end": "1232120"
  },
  {
    "text": "Smith SDK does not contain a stream",
    "start": "1232120",
    "end": "1234240"
  },
  {
    "text": "events endpoint so I wrap it in runnable",
    "start": "1234240",
    "end": "1236720"
  },
  {
    "text": "Lambda called client. runs. stream which",
    "start": "1236720",
    "end": "1239600"
  },
  {
    "text": "is going to hit my Lang graph API and",
    "start": "1239600",
    "end": "1242000"
  },
  {
    "text": "stream back events the same way um and",
    "start": "1242000",
    "end": "1244480"
  },
  {
    "text": "then I just yield each of those events",
    "start": "1244480",
    "end": "1246159"
  },
  {
    "text": "as they come in and I'm yielding that",
    "start": "1246159",
    "end": "1247480"
  },
  {
    "text": "inside of a runnable so I can pass it to",
    "start": "1247480",
    "end": "1249600"
  },
  {
    "text": "my stream runnable UI call stream events",
    "start": "1249600",
    "end": "1251960"
  },
  {
    "text": "on this runnable and extract all of",
    "start": "1251960",
    "end": "1254039"
  },
  {
    "text": "these events in the same way I would if",
    "start": "1254039",
    "end": "1256039"
  },
  {
    "text": "I were just calling stream events",
    "start": "1256039",
    "end": "1259840"
  },
  {
    "text": "important to also apply this run name",
    "start": "1259840",
    "end": "1262200"
  },
  {
    "text": "and that's because there is one small",
    "start": "1262200",
    "end": "1264039"
  },
  {
    "text": "little implementation detail we don't",
    "start": "1264039",
    "end": "1265559"
  },
  {
    "text": "need to worry about inside stream",
    "start": "1265559",
    "end": "1266679"
  },
  {
    "text": "runnable UI and the name needs to line",
    "start": "1266679",
    "end": "1268880"
  },
  {
    "text": "up with whatever name you've assigned to",
    "start": "1268880",
    "end": "1270679"
  },
  {
    "text": "your runnable that's wrapping your uh L",
    "start": "1270679",
    "end": "1273159"
  },
  {
    "text": "graph SDK stream",
    "start": "1273159",
    "end": "1275320"
  },
  {
    "text": "call then as you can see right here we",
    "start": "1275320",
    "end": "1277279"
  },
  {
    "text": "have the stream runable UI um if you",
    "start": "1277279",
    "end": "1279360"
  },
  {
    "text": "watched our previous videos you're",
    "start": "1279360",
    "end": "1280840"
  },
  {
    "text": "familiar with this function we went into",
    "start": "1280840",
    "end": "1282159"
  },
  {
    "text": "detail and exactly how it all works here",
    "start": "1282159",
    "end": "1285039"
  },
  {
    "text": "we're not going to do that but you",
    "start": "1285039",
    "end": "1285880"
  },
  {
    "text": "should go check out those videos um",
    "start": "1285880",
    "end": "1287600"
  },
  {
    "text": "we're passing in our runnable",
    "start": "1287600",
    "end": "1289039"
  },
  {
    "text": "the inputs which we got from our front",
    "start": "1289039",
    "end": "1290640"
  },
  {
    "text": "end which contain the content and then",
    "start": "1290640",
    "end": "1293679"
  },
  {
    "text": "orders in display format and then our",
    "start": "1293679",
    "end": "1295520"
  },
  {
    "text": "event handlers these event handlers are",
    "start": "1295520",
    "end": "1297240"
  },
  {
    "text": "what's going to be called each time an",
    "start": "1297240",
    "end": "1299559"
  },
  {
    "text": "event is yielded in our stream events",
    "start": "1299559",
    "end": "1301480"
  },
  {
    "text": "call so in our case we just have one",
    "start": "1301480",
    "end": "1303480"
  },
  {
    "text": "event handler one in here we get our",
    "start": "1303480",
    "end": "1305600"
  },
  {
    "text": "stream event which is each event that's",
    "start": "1305600",
    "end": "1307080"
  },
  {
    "text": "yielded and then Fields these fields",
    "start": "1307080",
    "end": "1309159"
  },
  {
    "text": "contain this UI field and callbacks we",
    "start": "1309159",
    "end": "1312080"
  },
  {
    "text": "only care about UI here this UI field is",
    "start": "1312080",
    "end": "1315360"
  },
  {
    "text": "from the aisk and it's what allows us to",
    "start": "1315360",
    "end": "1318640"
  },
  {
    "text": "update the UI um using react and they do",
    "start": "1318640",
    "end": "1322200"
  },
  {
    "text": "some heavy lifting in the hood we don't",
    "start": "1322200",
    "end": "1323400"
  },
  {
    "text": "need to worry about um so then we",
    "start": "1323400",
    "end": "1325520"
  },
  {
    "text": "iterate over all of the events we only",
    "start": "1325520",
    "end": "1328400"
  },
  {
    "text": "care about the event if it's on chain",
    "start": "1328400",
    "end": "1330320"
  },
  {
    "text": "end and that's because Lang graph or",
    "start": "1330320",
    "end": "1332760"
  },
  {
    "text": "sorry L graph and uh Lane chain stream",
    "start": "1332760",
    "end": "1335320"
  },
  {
    "text": "events are going to stream events for",
    "start": "1335320",
    "end": "1336600"
  },
  {
    "text": "everything that happens in this graph so",
    "start": "1336600",
    "end": "1338080"
  },
  {
    "text": "we can get an onchain start some events",
    "start": "1338080",
    "end": "1340279"
  },
  {
    "text": "inside the chain and then onchain end in",
    "start": "1340279",
    "end": "1342360"
  },
  {
    "text": "our case we only care about onchain n",
    "start": "1342360",
    "end": "1344480"
  },
  {
    "text": "because we only want the results of each",
    "start": "1344480",
    "end": "1346000"
  },
  {
    "text": "node so if the if the event does not",
    "start": "1346000",
    "end": "1349159"
  },
  {
    "text": "equal on chain end then we",
    "start": "1349159",
    "end": "1351840"
  },
  {
    "text": "return next we say if the name is",
    "start": "1351840",
    "end": "1354400"
  },
  {
    "text": "generate filters and these names are all",
    "start": "1354400",
    "end": "1356360"
  },
  {
    "text": "going to correspond to whatever names we",
    "start": "1356360",
    "end": "1358880"
  },
  {
    "text": "gave our nodes in the back end so if the",
    "start": "1358880",
    "end": "1361720"
  },
  {
    "text": "name is generate filters we're going to",
    "start": "1361720",
    "end": "1363240"
  },
  {
    "text": "get the filters that we're applied and",
    "start": "1363240",
    "end": "1365840"
  },
  {
    "text": "call this handle select filters function",
    "start": "1365840",
    "end": "1368320"
  },
  {
    "text": "this handle select filters function is",
    "start": "1368320",
    "end": "1370240"
  },
  {
    "text": "going to map over all of our filters um",
    "start": "1370240",
    "end": "1373520"
  },
  {
    "text": "and assign the value of that filter to",
    "start": "1373520",
    "end": "1376120"
  },
  {
    "text": "this filter button which is what we see",
    "start": "1376120",
    "end": "1378120"
  },
  {
    "text": "on the front",
    "start": "1378120",
    "end": "1379320"
  },
  {
    "text": "end right there Then when it's done it",
    "start": "1379320",
    "end": "1382840"
  },
  {
    "text": "calls ui. update and this is going to",
    "start": "1382840",
    "end": "1384679"
  },
  {
    "text": "actually update the UI with these",
    "start": "1384679",
    "end": "1386120"
  },
  {
    "text": "filters so that the user can see them",
    "start": "1386120",
    "end": "1387960"
  },
  {
    "text": "right away as soon as the filters come",
    "start": "1387960",
    "end": "1389440"
  },
  {
    "text": "in all these functions do something",
    "start": "1389440",
    "end": "1391840"
  },
  {
    "text": "pretty similar to that where they take",
    "start": "1391840",
    "end": "1393200"
  },
  {
    "text": "the result of a chain um output and then",
    "start": "1393200",
    "end": "1396400"
  },
  {
    "text": "they update the UI with some data we can",
    "start": "1396400",
    "end": "1398480"
  },
  {
    "text": "jump right to the last one",
    "start": "1398480",
    "end": "1400840"
  },
  {
    "text": "where we iterate over our bar chart type",
    "start": "1400840",
    "end": "1404520"
  },
  {
    "text": "um this display data object contains a",
    "start": "1404520",
    "end": "1406679"
  },
  {
    "text": "props function where we pass in our",
    "start": "1406679",
    "end": "1408720"
  },
  {
    "text": "filtered orders and that formats these",
    "start": "1408720",
    "end": "1410480"
  },
  {
    "text": "orders in a way which can be passed to",
    "start": "1410480",
    "end": "1412000"
  },
  {
    "text": "bar chart pie chart or line chart we",
    "start": "1412000",
    "end": "1414320"
  },
  {
    "text": "then assign our bar chart variable",
    "start": "1414320",
    "end": "1416159"
  },
  {
    "text": "either bar chart pie chart or line chart",
    "start": "1416159",
    "end": "1418279"
  },
  {
    "text": "and then we update our UI with as we saw",
    "start": "1418279",
    "end": "1421480"
  },
  {
    "text": "the title of the display format the",
    "start": "1421480",
    "end": "1423600"
  },
  {
    "text": "description and then the bar chart uh",
    "start": "1423600",
    "end": "1426679"
  },
  {
    "text": "this is already there and we don't need",
    "start": "1426679",
    "end": "1428520"
  },
  {
    "text": "to update or append this again because",
    "start": "1428520",
    "end": "1430799"
  },
  {
    "text": "when you call ui. update all it does is",
    "start": "1430799",
    "end": "1433520"
  },
  {
    "text": "replace the last jsx element which upd",
    "start": "1433520",
    "end": "1435760"
  },
  {
    "text": "in the UI or you can call ui. append",
    "start": "1435760",
    "end": "1438640"
  },
  {
    "text": "which will add a new jsx element to the",
    "start": "1438640",
    "end": "1440559"
  },
  {
    "text": "UI that we're updating and we can no",
    "start": "1440559",
    "end": "1442600"
  },
  {
    "text": "longer update the first element so when",
    "start": "1442600",
    "end": "1444679"
  },
  {
    "text": "we added our um our first buttons right",
    "start": "1444679",
    "end": "1448000"
  },
  {
    "text": "here we called ui. update and the next",
    "start": "1448000",
    "end": "1450120"
  },
  {
    "text": "time we added some UI element we called",
    "start": "1450120",
    "end": "1451600"
  },
  {
    "text": "ui. append and that will set this in",
    "start": "1451600",
    "end": "1453880"
  },
  {
    "text": "stone and we can't touch that again so",
    "start": "1453880",
    "end": "1456039"
  },
  {
    "text": "we call ui. update and that adds our bar",
    "start": "1456039",
    "end": "1458799"
  },
  {
    "text": "chart um and it replaces whatever was",
    "start": "1458799",
    "end": "1460960"
  },
  {
    "text": "there before in our case it's going to",
    "start": "1460960",
    "end": "1462679"
  },
  {
    "text": "be that loading component which is going",
    "start": "1462679",
    "end": "1464039"
  },
  {
    "text": "to get replaced by this update call and",
    "start": "1464039",
    "end": "1466240"
  },
  {
    "text": "then finally it finishes and gets",
    "start": "1466240",
    "end": "1468080"
  },
  {
    "text": "rendered to the client so if we go back",
    "start": "1468080",
    "end": "1470600"
  },
  {
    "text": "we can look at a couple more examples",
    "start": "1470600",
    "end": "1472440"
  },
  {
    "text": "and then we can look at the Lang graph",
    "start": "1472440",
    "end": "1474320"
  },
  {
    "text": "Cloud playground which is how you can",
    "start": "1474320",
    "end": "1475960"
  },
  {
    "text": "test this and iterate on things in",
    "start": "1475960",
    "end": "1478720"
  },
  {
    "text": "development okay so we're back in the UI",
    "start": "1478720",
    "end": "1480880"
  },
  {
    "text": "and we can look at our display types",
    "start": "1480880",
    "end": "1482480"
  },
  {
    "text": "model which will show us all the",
    "start": "1482480",
    "end": "1483600"
  },
  {
    "text": "different ways we can render this data",
    "start": "1483600",
    "end": "1485520"
  },
  {
    "text": "um and let's say we want to see our",
    "start": "1485520",
    "end": "1487159"
  },
  {
    "text": "weekly order volume the xais is the date",
    "start": "1487159",
    "end": "1490200"
  },
  {
    "text": "and the Y AIS is the number of orders",
    "start": "1490200",
    "end": "1492480"
  },
  {
    "text": "this chart will show you the trend of",
    "start": "1492480",
    "end": "1493760"
  },
  {
    "text": "order volume over time and allow you to",
    "start": "1493760",
    "end": "1495320"
  },
  {
    "text": "identify Peak ordering weeks that seems",
    "start": "1495320",
    "end": "1497480"
  },
  {
    "text": "interesting so let's say say orders by",
    "start": "1497480",
    "end": "1501320"
  },
  {
    "text": "week after 2023",
    "start": "1501320",
    "end": "1504840"
  },
  {
    "text": "101 and with an",
    "start": "1504840",
    "end": "1510000"
  },
  {
    "text": "order price of more",
    "start": "1510000",
    "end": "1514480"
  },
  {
    "text": "than $200 we'll hit",
    "start": "1514480",
    "end": "1517960"
  },
  {
    "text": "submit we'll wait for it to load we see",
    "start": "1517960",
    "end": "1520120"
  },
  {
    "text": "our after date",
    "start": "1520120",
    "end": "1521679"
  },
  {
    "text": "2023 101 and then our minimum amount to",
    "start": "1521679",
    "end": "1524840"
  },
  {
    "text": "filter by is 200",
    "start": "1524840",
    "end": "1529158"
  },
  {
    "text": "and there we go we have our bar chart as",
    "start": "1529520",
    "end": "1531600"
  },
  {
    "text": "we saw here we wanted a bar chart and",
    "start": "1531600",
    "end": "1533919"
  },
  {
    "text": "the the xais are the dates let's see if",
    "start": "1533919",
    "end": "1537640"
  },
  {
    "text": "that lines up yep dates and the y- AIS",
    "start": "1537640",
    "end": "1539640"
  },
  {
    "text": "is the number of orders and that makes",
    "start": "1539640",
    "end": "1541520"
  },
  {
    "text": "sense we can see each week this day is",
    "start": "1541520",
    "end": "1543440"
  },
  {
    "text": "going be start week and the number of",
    "start": "1543440",
    "end": "1544559"
  },
  {
    "text": "orders now let's go take a look at",
    "start": "1544559",
    "end": "1546600"
  },
  {
    "text": "another type of chart we can request and",
    "start": "1546600",
    "end": "1548320"
  },
  {
    "text": "see if we can get it so we open up our",
    "start": "1548320",
    "end": "1550679"
  },
  {
    "text": "display types model let's scroll down",
    "start": "1550679",
    "end": "1552520"
  },
  {
    "text": "let's say we want a p pie chart how",
    "start": "1552520",
    "end": "1554720"
  },
  {
    "text": "about quarterly order distribution",
    "start": "1554720",
    "end": "1556600"
  },
  {
    "text": "groups orders by quarter using the",
    "start": "1556600",
    "end": "1558559"
  },
  {
    "text": "ordered at field so let's say show me",
    "start": "1558559",
    "end": "1563000"
  },
  {
    "text": "orders by yearly quarter hit submit wait",
    "start": "1563000",
    "end": "1569000"
  },
  {
    "text": "for it to load I don't think we should",
    "start": "1569000",
    "end": "1571240"
  },
  {
    "text": "have any filters so yeah we have no",
    "start": "1571240",
    "end": "1572600"
  },
  {
    "text": "filters right here and it selected our",
    "start": "1572600",
    "end": "1574840"
  },
  {
    "text": "pie chart just like we wanted and it",
    "start": "1574840",
    "end": "1576360"
  },
  {
    "text": "shows us all the orders in a specific",
    "start": "1576360",
    "end": "1578360"
  },
  {
    "text": "quarter so now that you can see how that",
    "start": "1578360",
    "end": "1580679"
  },
  {
    "text": "works we can go take a look at the",
    "start": "1580679",
    "end": "1582279"
  },
  {
    "text": "langra cloud playground and see how you",
    "start": "1582279",
    "end": "1584080"
  },
  {
    "text": "can vot this in sort of a development",
    "start": "1584080",
    "end": "1585880"
  },
  {
    "text": "mode and um iterate on your or uh Lang",
    "start": "1585880",
    "end": "1589720"
  },
  {
    "text": "graph graph a little bit more so we go",
    "start": "1589720",
    "end": "1592039"
  },
  {
    "text": "to Lang Smith go to our deployment page",
    "start": "1592039",
    "end": "1594279"
  },
  {
    "text": "and then we click Playground open this",
    "start": "1594279",
    "end": "1596640"
  },
  {
    "text": "up in a new tab and here we see we have",
    "start": "1596640",
    "end": "1599399"
  },
  {
    "text": "all the different nodes these nodes are",
    "start": "1599399",
    "end": "1602720"
  },
  {
    "text": "drag and droppable we can hit this to",
    "start": "1602720",
    "end": "1604720"
  },
  {
    "text": "add interrupts um marking so that when",
    "start": "1604720",
    "end": "1607080"
  },
  {
    "text": "it reaches this node it'll pause um we",
    "start": "1607080",
    "end": "1609480"
  },
  {
    "text": "can look at all of our previous threads",
    "start": "1609480",
    "end": "1611120"
  },
  {
    "text": "we can create new threads and we can",
    "start": "1611120",
    "end": "1612600"
  },
  {
    "text": "actually invoke our chain so I'm going",
    "start": "1612600",
    "end": "1615039"
  },
  {
    "text": "to paste these inputs in because they're",
    "start": "1615039",
    "end": "1616399"
  },
  {
    "text": "kind of long and we'll come back once",
    "start": "1616399",
    "end": "1617640"
  },
  {
    "text": "they're in and we can submit it okay so",
    "start": "1617640",
    "end": "1620080"
  },
  {
    "text": "we're going to place an input which says",
    "start": "1620080",
    "end": "1622159"
  },
  {
    "text": "orders by week after this date with a",
    "start": "1622159",
    "end": "1625159"
  },
  {
    "text": "price of More Than This price I've added",
    "start": "1625159",
    "end": "1627240"
  },
  {
    "text": "my display formats because these are",
    "start": "1627240",
    "end": "1628720"
  },
  {
    "text": "also what is passed to the chain we",
    "start": "1628720",
    "end": "1630840"
  },
  {
    "text": "first invoked in the client and also our",
    "start": "1630840",
    "end": "1632640"
  },
  {
    "text": "orders these all I just copy pasted them",
    "start": "1632640",
    "end": "1635559"
  },
  {
    "text": "um once those are all in we can hit",
    "start": "1635559",
    "end": "1636880"
  },
  {
    "text": "submit and we should see our graph",
    "start": "1636880",
    "end": "1639279"
  },
  {
    "text": "executing in real time right here so",
    "start": "1639279",
    "end": "1642200"
  },
  {
    "text": "submit it loads and then boom it's",
    "start": "1642200",
    "end": "1644480"
  },
  {
    "text": "flying through everything we can see",
    "start": "1644480",
    "end": "1645760"
  },
  {
    "text": "over here as well exactly what nodes",
    "start": "1645760",
    "end": "1647159"
  },
  {
    "text": "it's hitting and when it's done it exits",
    "start": "1647159",
    "end": "1649039"
  },
  {
    "text": "out there and we can actually go and",
    "start": "1649039",
    "end": "1652039"
  },
  {
    "text": "look at all the different nodes and the",
    "start": "1652039",
    "end": "1653880"
  },
  {
    "text": "outputs from each node so a filter data",
    "start": "1653880",
    "end": "1655880"
  },
  {
    "text": "returned orders um generate dat display",
    "start": "1655880",
    "end": "1658360"
  },
  {
    "text": "format return the display format chart",
    "start": "1658360",
    "end": "1660399"
  },
  {
    "text": "type return the chart type um and so on",
    "start": "1660399",
    "end": "1662960"
  },
  {
    "text": "so we can see exactly all the filters",
    "start": "1662960",
    "end": "1665399"
  },
  {
    "text": "which were applied to these and it just",
    "start": "1665399",
    "end": "1667720"
  },
  {
    "text": "gives us a much better idea as to what's",
    "start": "1667720",
    "end": "1669640"
  },
  {
    "text": "going on inside our chain we can do",
    "start": "1669640",
    "end": "1671200"
  },
  {
    "text": "certain things like edit those fields um",
    "start": "1671200",
    "end": "1674679"
  },
  {
    "text": "we can run from specific nodes with",
    "start": "1674679",
    "end": "1676960"
  },
  {
    "text": "different results and we can see how our",
    "start": "1676960",
    "end": "1678960"
  },
  {
    "text": "graph reacts and acts based on different",
    "start": "1678960",
    "end": "1681760"
  },
  {
    "text": "inputs and it can give us a much quicker",
    "start": "1681760",
    "end": "1684159"
  },
  {
    "text": "iteration cycle because we don't need to",
    "start": "1684159",
    "end": "1686480"
  },
  {
    "text": "hit the entire API at once um or go and",
    "start": "1686480",
    "end": "1688880"
  },
  {
    "text": "modify the code like that because we can",
    "start": "1688880",
    "end": "1690240"
  },
  {
    "text": "just edit the inputs and outputs and",
    "start": "1690240",
    "end": "1691960"
  },
  {
    "text": "rerun from right there that's the end of",
    "start": "1691960",
    "end": "1694799"
  },
  {
    "text": "this video I hope you guys all have a",
    "start": "1694799",
    "end": "1696760"
  },
  {
    "text": "much better idea as to how to build a",
    "start": "1696760",
    "end": "1698760"
  },
  {
    "text": "general VII application like we saw here",
    "start": "1698760",
    "end": "1701840"
  },
  {
    "text": "I hope you a good idea is to Lang graph",
    "start": "1701840",
    "end": "1703440"
  },
  {
    "text": "cloud and go try it out on your own it's",
    "start": "1703440",
    "end": "1705480"
  },
  {
    "text": "a lot of fun to build with Lang graph",
    "start": "1705480",
    "end": "1706880"
  },
  {
    "text": "and now L graph cloud makes it so much",
    "start": "1706880",
    "end": "1708559"
  },
  {
    "text": "easier to deploy to production um and I",
    "start": "1708559",
    "end": "1710840"
  },
  {
    "text": "hope to see lots of interesting and fun",
    "start": "1710840",
    "end": "1713080"
  },
  {
    "text": "G VII apps running on lra cloud in the",
    "start": "1713080",
    "end": "1715000"
  },
  {
    "text": "future see you on the next one",
    "start": "1715000",
    "end": "1718640"
  }
]