[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "today we're excited to launch custom",
    "start": "120",
    "end": "1920"
  },
  {
    "text": "authentication and access control",
    "start": "1920",
    "end": "3679"
  },
  {
    "text": "support in langra platform this is",
    "start": "3679",
    "end": "6080"
  },
  {
    "text": "available both in langra cloud and",
    "start": "6080",
    "end": "8000"
  },
  {
    "text": "self-hosted setups this lets you",
    "start": "8000",
    "end": "9679"
  },
  {
    "text": "directly integrate with your own",
    "start": "9679",
    "end": "11240"
  },
  {
    "text": "authentication Service and Implement",
    "start": "11240",
    "end": "13559"
  },
  {
    "text": "custom permissioning models using other",
    "start": "13559",
    "end": "15320"
  },
  {
    "text": "security schemes directly in your L",
    "start": "15320",
    "end": "17279"
  },
  {
    "text": "graph application without relying on a",
    "start": "17279",
    "end": "19560"
  },
  {
    "text": "separate backend server as a part of",
    "start": "19560",
    "end": "21320"
  },
  {
    "start": "21000",
    "end": "102000"
  },
  {
    "text": "this release I'm going to show you how",
    "start": "21320",
    "end": "22920"
  },
  {
    "text": "to add o off to an existing L graph",
    "start": "22920",
    "end": "25119"
  },
  {
    "text": "application using our new off tutorial",
    "start": "25119",
    "end": "27880"
  },
  {
    "text": "we will do so in three parts in part one",
    "start": "27880",
    "end": "30039"
  },
  {
    "text": "one we will add user authentication to",
    "start": "30039",
    "end": "32439"
  },
  {
    "text": "ensure that only users who have valid",
    "start": "32439",
    "end": "34399"
  },
  {
    "text": "credentials are able to access your",
    "start": "34399",
    "end": "36480"
  },
  {
    "text": "application in part two we will go a",
    "start": "36480",
    "end": "38600"
  },
  {
    "text": "step further adding custom authorization",
    "start": "38600",
    "end": "41280"
  },
  {
    "text": "to our individual resources ensuring",
    "start": "41280",
    "end": "43800"
  },
  {
    "text": "that authenticated users despite having",
    "start": "43800",
    "end": "46520"
  },
  {
    "text": "access to the service are not able to",
    "start": "46520",
    "end": "48800"
  },
  {
    "text": "access each other's data in part three",
    "start": "48800",
    "end": "51480"
  },
  {
    "text": "we will take these learnings and put",
    "start": "51480",
    "end": "52840"
  },
  {
    "text": "them together by integrating with the",
    "start": "52840",
    "end": "54640"
  },
  {
    "text": "real production authentication server to",
    "start": "54640",
    "end": "56680"
  },
  {
    "text": "show you how to put these together in a",
    "start": "56680",
    "end": "58239"
  },
  {
    "text": "trustworthy way with those preliminaries",
    "start": "58239",
    "end": "60480"
  },
  {
    "text": "out of the way let's get started for our",
    "start": "60480",
    "end": "63000"
  },
  {
    "text": "first Milestone we're going to implement",
    "start": "63000",
    "end": "65239"
  },
  {
    "text": "authentication this checks every request",
    "start": "65240",
    "end": "67560"
  },
  {
    "text": "to make sure it has the required",
    "start": "67560",
    "end": "68920"
  },
  {
    "text": "credentials to access the service it",
    "start": "68920",
    "end": "71240"
  },
  {
    "text": "then returns a user object that we'll",
    "start": "71240",
    "end": "72960"
  },
  {
    "text": "use later for find and grain control",
    "start": "72960",
    "end": "75000"
  },
  {
    "text": "let's start by installing the langra",
    "start": "75000",
    "end": "76439"
  },
  {
    "text": "command line interface and then cloning",
    "start": "76439",
    "end": "78880"
  },
  {
    "text": "this new Lang graph project once we've",
    "start": "78880",
    "end": "80840"
  },
  {
    "text": "cloned the project we can spin up the",
    "start": "80840",
    "end": "82439"
  },
  {
    "text": "server just to see what it looks like",
    "start": "82439",
    "end": "84280"
  },
  {
    "text": "install the package as an editable",
    "start": "84280",
    "end": "85720"
  },
  {
    "text": "requirement then spin up the server you",
    "start": "85720",
    "end": "88479"
  },
  {
    "text": "can play around with it to see it",
    "start": "88479",
    "end": "90240"
  },
  {
    "text": "doesn't do much it echoes the response",
    "start": "90240",
    "end": "92119"
  },
  {
    "text": "the content of the graph is not",
    "start": "92119",
    "end": "93240"
  },
  {
    "text": "important what is important is the",
    "start": "93240",
    "end": "95200"
  },
  {
    "text": "skills we use today can be applied to",
    "start": "95200",
    "end": "97119"
  },
  {
    "text": "any Lane graph platform application no",
    "start": "97119",
    "end": "99360"
  },
  {
    "text": "matter how big or small for custom a",
    "start": "99360",
    "end": "101479"
  },
  {
    "text": "lang graph needs to know which function",
    "start": "101479",
    "end": "103520"
  },
  {
    "start": "102000",
    "end": "204000"
  },
  {
    "text": "to call to validate every request we do",
    "start": "103520",
    "end": "106479"
  },
  {
    "text": "this using the off object exported from",
    "start": "106479",
    "end": "108680"
  },
  {
    "text": "Lang graph SDK we'll initialize this",
    "start": "108680",
    "end": "110840"
  },
  {
    "text": "object and then decorate a custom",
    "start": "110840",
    "end": "113119"
  },
  {
    "text": "function telling Lang graph this",
    "start": "113119",
    "end": "115520"
  },
  {
    "text": "function should be used for",
    "start": "115520",
    "end": "116719"
  },
  {
    "text": "authentication our function will accept",
    "start": "116719",
    "end": "118520"
  },
  {
    "text": "an authorization header this is a common",
    "start": "118520",
    "end": "120840"
  },
  {
    "text": "header that's provided for many",
    "start": "120840",
    "end": "122399"
  },
  {
    "text": "different validation schemes we'll",
    "start": "122399",
    "end": "124000"
  },
  {
    "text": "assert that it's provided and then we'll",
    "start": "124000",
    "end": "126280"
  },
  {
    "text": "check that the token is present in our",
    "start": "126280",
    "end": "129360"
  },
  {
    "text": "toy database we have the super secret",
    "start": "129360",
    "end": "131840"
  },
  {
    "text": "user one and user two tokens here to",
    "start": "131840",
    "end": "134200"
  },
  {
    "text": "demonstrate how it works finally we'll",
    "start": "134200",
    "end": "136280"
  },
  {
    "text": "fetch the user information and return",
    "start": "136280",
    "end": "138640"
  },
  {
    "text": "that this information will be useful in",
    "start": "138640",
    "end": "141160"
  },
  {
    "text": "later parts of this tutorial let's add",
    "start": "141160",
    "end": "142959"
  },
  {
    "text": "this code to our deployment we'll create",
    "start": "142959",
    "end": "144680"
  },
  {
    "text": "a new folder called security and add a",
    "start": "144680",
    "end": "146959"
  },
  {
    "text": "file for authentication now our server",
    "start": "146959",
    "end": "149120"
  },
  {
    "text": "needs to know",
    "start": "149120",
    "end": "150400"
  },
  {
    "text": "where this o object lives we will do",
    "start": "150400",
    "end": "153160"
  },
  {
    "text": "that by modifying the Lang graph. Json",
    "start": "153160",
    "end": "155440"
  },
  {
    "text": "we will add an O entry with a path to",
    "start": "155440",
    "end": "158280"
  },
  {
    "text": "the file we just created and then a",
    "start": "158280",
    "end": "160720"
  },
  {
    "text": "variable name that is the O object and",
    "start": "160720",
    "end": "163080"
  },
  {
    "text": "here it is here now let's test out our",
    "start": "163080",
    "end": "165040"
  },
  {
    "text": "implementation we will create client",
    "start": "165040",
    "end": "167159"
  },
  {
    "text": "code to connect to the server our first",
    "start": "167159",
    "end": "169400"
  },
  {
    "text": "test will create a client without valid",
    "start": "169400",
    "end": "171400"
  },
  {
    "text": "credentials this client will be unable",
    "start": "171400",
    "end": "173560"
  },
  {
    "text": "to access the service as demonstrated by",
    "start": "173560",
    "end": "175599"
  },
  {
    "text": "this attempt to create threads if we",
    "start": "175599",
    "end": "177400"
  },
  {
    "text": "recreate the client with the appropriate",
    "start": "177400",
    "end": "179239"
  },
  {
    "text": "headers",
    "start": "179239",
    "end": "180400"
  },
  {
    "text": "and then try the operation again it",
    "start": "180400",
    "end": "182519"
  },
  {
    "text": "should successfully create this that",
    "start": "182519",
    "end": "184640"
  },
  {
    "text": "same client should be able to create",
    "start": "184640",
    "end": "186159"
  },
  {
    "text": "runs and interact with the server in",
    "start": "186159",
    "end": "187840"
  },
  {
    "text": "general let's try it out I'm going to",
    "start": "187840",
    "end": "190120"
  },
  {
    "text": "restart the surf and then copy that test",
    "start": "190120",
    "end": "191920"
  },
  {
    "text": "code into a notebook since our",
    "start": "191920",
    "end": "194200"
  },
  {
    "text": "implementation was correct we get all",
    "start": "194200",
    "end": "196080"
  },
  {
    "text": "greent check marks our unauthenticated",
    "start": "196080",
    "end": "198720"
  },
  {
    "text": "client was blocked by the server but",
    "start": "198720",
    "end": "201200"
  },
  {
    "text": "then successfully was able to create",
    "start": "201200",
    "end": "202640"
  },
  {
    "text": "threads and runs and that concludes part",
    "start": "202640",
    "end": "204200"
  },
  {
    "start": "204000",
    "end": "369000"
  },
  {
    "text": "one we've learned to reject",
    "start": "204200",
    "end": "205440"
  },
  {
    "text": "unauthenticated requests using Lang",
    "start": "205440",
    "end": "207480"
  },
  {
    "text": "graph's off object by putting this into",
    "start": "207480",
    "end": "210040"
  },
  {
    "text": "a python file and in pointing the server",
    "start": "210040",
    "end": "212319"
  },
  {
    "text": "at the file in the l. Json file however",
    "start": "212319",
    "end": "215360"
  },
  {
    "text": "any authenticated user can access any",
    "start": "215360",
    "end": "217360"
  },
  {
    "text": "resource now in the next section we will",
    "start": "217360",
    "end": "219760"
  },
  {
    "text": "learn how to make authorization handlers",
    "start": "219760",
    "end": "222159"
  },
  {
    "text": "to filter resources and make",
    "start": "222159",
    "end": "223799"
  },
  {
    "text": "conversations private let's add an",
    "start": "223799",
    "end": "225519"
  },
  {
    "text": "authorization Handler to prevent",
    "start": "225519",
    "end": "227599"
  },
  {
    "text": "authenticated users from accessing each",
    "start": "227599",
    "end": "229879"
  },
  {
    "text": "other's data if you recall from part one",
    "start": "229879",
    "end": "232439"
  },
  {
    "text": "we added authentication by using this Au",
    "start": "232439",
    "end": "235040"
  },
  {
    "text": "object and decorating a function with",
    "start": "235040",
    "end": "237120"
  },
  {
    "text": "this authenticate method to add",
    "start": "237120",
    "end": "238720"
  },
  {
    "text": "authorization we use event handlers",
    "start": "238720",
    "end": "241239"
  },
  {
    "text": "using",
    "start": "241239",
    "end": "242319"
  },
  {
    "text": "off.on this means that on each create",
    "start": "242319",
    "end": "244959"
  },
  {
    "text": "read or other event to any resource this",
    "start": "244959",
    "end": "248200"
  },
  {
    "text": "function will be called to check whether",
    "start": "248200",
    "end": "250079"
  },
  {
    "text": "that user has access to the resource",
    "start": "250079",
    "end": "252439"
  },
  {
    "text": "these functions take two arguments the",
    "start": "252439",
    "end": "254599"
  },
  {
    "text": "authentication context which has",
    "start": "254599",
    "end": "256560"
  },
  {
    "text": "information about the user as well as",
    "start": "256560",
    "end": "258400"
  },
  {
    "text": "the action being performed and the value",
    "start": "258400",
    "end": "261160"
  },
  {
    "text": "which is the actual data that's being",
    "start": "261160",
    "end": "262680"
  },
  {
    "text": "sent to this action for creation events",
    "start": "262680",
    "end": "265680"
  },
  {
    "text": "it could contain the actual data that's",
    "start": "265680",
    "end": "267360"
  },
  {
    "text": "going to be saved to the database for",
    "start": "267360",
    "end": "269800"
  },
  {
    "text": "read and search events this would",
    "start": "269800",
    "end": "271320"
  },
  {
    "text": "include only the parameters needed to be",
    "start": "271320",
    "end": "273400"
  },
  {
    "text": "searching or retrieving that information",
    "start": "273400",
    "end": "275280"
  },
  {
    "text": "each authorization Handler has up to",
    "start": "275280",
    "end": "277320"
  },
  {
    "text": "three tasks the first task is to create",
    "start": "277320",
    "end": "279960"
  },
  {
    "text": "filters returning filters lets the",
    "start": "279960",
    "end": "282360"
  },
  {
    "text": "system know to only return Resources",
    "start": "282360",
    "end": "284840"
  },
  {
    "text": "with metadata that matches them in this",
    "start": "284840",
    "end": "287360"
  },
  {
    "text": "case they will only return data who has",
    "start": "287360",
    "end": "289720"
  },
  {
    "text": "an owner key in the metadata matching",
    "start": "289720",
    "end": "291960"
  },
  {
    "text": "this user's identity the second job with",
    "start": "291960",
    "end": "293960"
  },
  {
    "text": "these handlers pertains to create and",
    "start": "293960",
    "end": "295919"
  },
  {
    "text": "update events we can add metadata",
    "start": "295919",
    "end": "299000"
  },
  {
    "text": "containing the Us's identity so that",
    "start": "299000",
    "end": "301240"
  },
  {
    "text": "that will be saved to the database if we",
    "start": "301240",
    "end": "303560"
  },
  {
    "text": "didn't do this these filters would never",
    "start": "303560",
    "end": "305400"
  },
  {
    "text": "match anything the third job of an",
    "start": "305400",
    "end": "306919"
  },
  {
    "text": "authorization Handler is to reject",
    "start": "306919",
    "end": "308880"
  },
  {
    "text": "requests outright before discussing this",
    "start": "308880",
    "end": "311600"
  },
  {
    "text": "let's add this to our service I'm going",
    "start": "311600",
    "end": "313840"
  },
  {
    "text": "to copy this Handler and add it to our",
    "start": "313840",
    "end": "316000"
  },
  {
    "text": "existing authorization file here we've",
    "start": "316000",
    "end": "317840"
  },
  {
    "text": "added this Handler and left the rest of",
    "start": "317840",
    "end": "319600"
  },
  {
    "text": "the file as is I will restart the",
    "start": "319600",
    "end": "321360"
  },
  {
    "text": "service and then we can go over the",
    "start": "321360",
    "end": "322919"
  },
  {
    "text": "tests for these tests we'll create two",
    "start": "322919",
    "end": "324840"
  },
  {
    "text": "different clients one for Alice and one",
    "start": "324840",
    "end": "326440"
  },
  {
    "text": "for Bob we will first check that Alice",
    "start": "326440",
    "end": "328360"
  },
  {
    "text": "can create assistants RS and runs she",
    "start": "328360",
    "end": "331319"
  },
  {
    "text": "can interact with the service great next",
    "start": "331319",
    "end": "334120"
  },
  {
    "text": "we're going to check that Bob cannot try",
    "start": "334120",
    "end": "336000"
  },
  {
    "text": "to fetch information from the thread",
    "start": "336000",
    "end": "338000"
  },
  {
    "text": "that Alis just created if we've",
    "start": "338000",
    "end": "339960"
  },
  {
    "text": "implemented the authorization correctly",
    "start": "339960",
    "end": "341759"
  },
  {
    "text": "he will not have access to this thread",
    "start": "341759",
    "end": "343400"
  },
  {
    "text": "finally we'll show that Bob still can't",
    "start": "343400",
    "end": "345440"
  },
  {
    "text": "access the service just so long as he",
    "start": "345440",
    "end": "347520"
  },
  {
    "text": "uses his own information to cap it off",
    "start": "347520",
    "end": "349479"
  },
  {
    "text": "we'll list over the threads to show that",
    "start": "349479",
    "end": "351319"
  },
  {
    "text": "each user can only see the data that",
    "start": "351319",
    "end": "353039"
  },
  {
    "text": "they own I'll copy the code to a",
    "start": "353039",
    "end": "354479"
  },
  {
    "text": "notebook and then run it we'll see all",
    "start": "354479",
    "end": "356759"
  },
  {
    "text": "green check marks again Alice was able",
    "start": "356759",
    "end": "358840"
  },
  {
    "text": "to create an assess in a thread Bob was",
    "start": "358840",
    "end": "361319"
  },
  {
    "text": "unable to access Al's thread Bob created",
    "start": "361319",
    "end": "363800"
  },
  {
    "text": "his own thread and they both see one",
    "start": "363800",
    "end": "365800"
  },
  {
    "text": "thread if you want you can double check",
    "start": "365800",
    "end": "367280"
  },
  {
    "text": "that each thread is distinct creating",
    "start": "367280",
    "end": "368759"
  },
  {
    "text": "this authorization handler was concise",
    "start": "368759",
    "end": "370880"
  },
  {
    "start": "369000",
    "end": "507000"
  },
  {
    "text": "but what if you want to have different",
    "start": "370880",
    "end": "372199"
  },
  {
    "text": "Behavior depending on the resource or",
    "start": "372199",
    "end": "374360"
  },
  {
    "text": "what if you want a little bit more",
    "start": "374360",
    "end": "375319"
  },
  {
    "text": "visibility into what the heck this value",
    "start": "375319",
    "end": "377080"
  },
  {
    "text": "dictionary is for more control you can",
    "start": "377080",
    "end": "379240"
  },
  {
    "text": "Define handlers scoped to individual",
    "start": "379240",
    "end": "381080"
  },
  {
    "text": "resources or even to specific actions on",
    "start": "381080",
    "end": "383800"
  },
  {
    "text": "that resource the type of the value has",
    "start": "383800",
    "end": "385560"
  },
  {
    "text": "an analogous path so you know which keys",
    "start": "385560",
    "end": "387639"
  },
  {
    "text": "to expect to illustrate scope",
    "start": "387639",
    "end": "389639"
  },
  {
    "text": "authorization handlers we will create",
    "start": "389639",
    "end": "391680"
  },
  {
    "text": "three new functions this first one will",
    "start": "391680",
    "end": "393680"
  },
  {
    "text": "match on any assistance operation and",
    "start": "393680",
    "end": "396560"
  },
  {
    "text": "we'll decide to reject all requests this",
    "start": "396560",
    "end": "399039"
  },
  {
    "text": "will apply to every create read search",
    "start": "399039",
    "end": "401639"
  },
  {
    "text": "and update event the second one we'll",
    "start": "401639",
    "end": "403360"
  },
  {
    "text": "create is will apply to any read event",
    "start": "403360",
    "end": "406360"
  },
  {
    "text": "of the threads since we're only reading",
    "start": "406360",
    "end": "408960"
  },
  {
    "text": "and not writing we can just return this",
    "start": "408960",
    "end": "411120"
  },
  {
    "text": "filter without trying to modify any",
    "start": "411120",
    "end": "412800"
  },
  {
    "text": "metadata that would be ignored anyways",
    "start": "412800",
    "end": "415039"
  },
  {
    "text": "the third Handler will match on any",
    "start": "415039",
    "end": "416680"
  },
  {
    "text": "create event to the threads resource",
    "start": "416680",
    "end": "418960"
  },
  {
    "text": "this code will be functionally the same",
    "start": "418960",
    "end": "420560"
  },
  {
    "text": "as our Handler before by creating more",
    "start": "420560",
    "end": "422680"
  },
  {
    "text": "scoped authorization handlers you can",
    "start": "422680",
    "end": "424960"
  },
  {
    "text": "exercise more fine grained control over",
    "start": "424960",
    "end": "427199"
  },
  {
    "text": "the access policies that you enforce",
    "start": "427199",
    "end": "428879"
  },
  {
    "text": "over your deployment you may wonder what",
    "start": "428879",
    "end": "431000"
  },
  {
    "text": "happens if you have two handlers that",
    "start": "431000",
    "end": "432759"
  },
  {
    "text": "both match an operation in this case",
    "start": "432759",
    "end": "435000"
  },
  {
    "text": "langra will only call the most specific",
    "start": "435000",
    "end": "437720"
  },
  {
    "text": "Handler for a given operation this means",
    "start": "437720",
    "end": "440879"
  },
  {
    "text": "that on threads creation events our",
    "start": "440879",
    "end": "443400"
  },
  {
    "text": "specific Handler will be called rather",
    "start": "443400",
    "end": "445440"
  },
  {
    "text": "than the global Handler same goes for",
    "start": "445440",
    "end": "447879"
  },
  {
    "text": "both of these two if we were to define a",
    "start": "447879",
    "end": "449599"
  },
  {
    "text": "function that was only up to the threads",
    "start": "449599",
    "end": "451639"
  },
  {
    "text": "level that would only be called for",
    "start": "451639",
    "end": "454240"
  },
  {
    "text": "search and update events not for read",
    "start": "454240",
    "end": "456639"
  },
  {
    "text": "and create events since these are more",
    "start": "456639",
    "end": "458160"
  },
  {
    "text": "specific L graph does not allow you to",
    "start": "458160",
    "end": "459960"
  },
  {
    "text": "register two functions that have the",
    "start": "459960",
    "end": "461720"
  },
  {
    "text": "exact same scope to finish off part two",
    "start": "461720",
    "end": "464000"
  },
  {
    "text": "I'm going to add these scoped handlers",
    "start": "464000",
    "end": "465560"
  },
  {
    "text": "to our off file and then run the",
    "start": "465560",
    "end": "467080"
  },
  {
    "text": "corresponding attests here I've copied",
    "start": "467080",
    "end": "469599"
  },
  {
    "text": "the code below leaving the rest as is",
    "start": "469599",
    "end": "472240"
  },
  {
    "text": "I'll restart our server and then review",
    "start": "472240",
    "end": "473800"
  },
  {
    "text": "the new tests really all we're good to",
    "start": "473800",
    "end": "475879"
  },
  {
    "text": "test now is that no one can be creating",
    "start": "475879",
    "end": "478159"
  },
  {
    "text": "or searching assistance since we have",
    "start": "478159",
    "end": "479879"
  },
  {
    "text": "added that specific scope handl finally",
    "start": "479879",
    "end": "482479"
  },
  {
    "text": "we will confirm that users are still",
    "start": "482479",
    "end": "484120"
  },
  {
    "text": "able to access threads resources we'll",
    "start": "484120",
    "end": "485919"
  },
  {
    "text": "run in our notebook and see all green",
    "start": "485919",
    "end": "487560"
  },
  {
    "text": "once more Alice cannot access assistance",
    "start": "487560",
    "end": "490440"
  },
  {
    "text": "but she can still access threads and",
    "start": "490440",
    "end": "491840"
  },
  {
    "text": "runs and that's all for part two in this",
    "start": "491840",
    "end": "494199"
  },
  {
    "text": "example we added authorization handlers",
    "start": "494199",
    "end": "496240"
  },
  {
    "text": "to make sure users only have access to",
    "start": "496240",
    "end": "498440"
  },
  {
    "text": "the resources that they own we also",
    "start": "498440",
    "end": "500319"
  },
  {
    "text": "implemented more scoped handlers to",
    "start": "500319",
    "end": "502039"
  },
  {
    "text": "implement a more custom and restrictive",
    "start": "502039",
    "end": "503919"
  },
  {
    "text": "policy on different resources and now",
    "start": "503919",
    "end": "505879"
  },
  {
    "text": "you have all the skills you need to",
    "start": "505879",
    "end": "507400"
  },
  {
    "start": "507000",
    "end": "699000"
  },
  {
    "text": "implement off in your service in part",
    "start": "507400",
    "end": "509840"
  },
  {
    "text": "three of this tutorial we will replace",
    "start": "509840",
    "end": "511520"
  },
  {
    "text": "our toy user database with a real",
    "start": "511520",
    "end": "513399"
  },
  {
    "text": "production off service to show how you",
    "start": "513399",
    "end": "515599"
  },
  {
    "text": "can manage your users for a production",
    "start": "515599",
    "end": "517399"
  },
  {
    "text": "application let's connect our app to a",
    "start": "517399",
    "end": "518959"
  },
  {
    "text": "real off service superbase makes it easy",
    "start": "518959",
    "end": "521200"
  },
  {
    "text": "to get started if you're following along",
    "start": "521200",
    "end": "522919"
  },
  {
    "text": "make sure you have an active superbase",
    "start": "522919",
    "end": "524360"
  },
  {
    "text": "account and created a new project if you",
    "start": "524360",
    "end": "526200"
  },
  {
    "text": "recall from the beginning of this video",
    "start": "526200",
    "end": "527880"
  },
  {
    "text": "our off service has three main",
    "start": "527880",
    "end": "529680"
  },
  {
    "text": "components part one is the authorization",
    "start": "529680",
    "end": "531959"
  },
  {
    "text": "server in our case it's going to be",
    "start": "531959",
    "end": "533760"
  },
  {
    "text": "super BS this is responsible with",
    "start": "533760",
    "end": "535760"
  },
  {
    "text": "generating user tokens to the client",
    "start": "535760",
    "end": "537880"
  },
  {
    "text": "that will be validated by our backend",
    "start": "537880",
    "end": "539440"
  },
  {
    "text": "server the second is the application",
    "start": "539440",
    "end": "541399"
  },
  {
    "text": "back end in our case we just have the",
    "start": "541399",
    "end": "543079"
  },
  {
    "text": "lra application this is all you need for",
    "start": "543079",
    "end": "544920"
  },
  {
    "text": "your AI business Logic the third",
    "start": "544920",
    "end": "546440"
  },
  {
    "text": "component is the client application this",
    "start": "546440",
    "end": "548360"
  },
  {
    "text": "is typically the web or mobile app that",
    "start": "548360",
    "end": "550720"
  },
  {
    "text": "lets the user access your services the",
    "start": "550720",
    "end": "552880"
  },
  {
    "text": "flow we will be implementing looks",
    "start": "552880",
    "end": "554480"
  },
  {
    "text": "something like this the user client will",
    "start": "554480",
    "end": "556680"
  },
  {
    "text": "initiate a login they will send valid",
    "start": "556680",
    "end": "558560"
  },
  {
    "text": "credentials to the off server which will",
    "start": "558560",
    "end": "560480"
  },
  {
    "text": "respond with the signed token the client",
    "start": "560480",
    "end": "563279"
  },
  {
    "text": "then will include this token in the",
    "start": "563279",
    "end": "564800"
  },
  {
    "text": "headers of every request it makes to our",
    "start": "564800",
    "end": "566839"
  },
  {
    "text": "application backend our backend will",
    "start": "566839",
    "end": "568480"
  },
  {
    "text": "look at the token and validated against",
    "start": "568480",
    "end": "570399"
  },
  {
    "text": "the off server and if it's valid we'll",
    "start": "570399",
    "end": "572320"
  },
  {
    "text": "can continue processing it can then",
    "start": "572320",
    "end": "573959"
  },
  {
    "text": "return conversation data or invoke your",
    "start": "573959",
    "end": "576079"
  },
  {
    "text": "application logic if the token isn't",
    "start": "576079",
    "end": "578000"
  },
  {
    "text": "valid our authentication Handler will",
    "start": "578000",
    "end": "579800"
  },
  {
    "text": "reject the request before updating our",
    "start": "579800",
    "end": "581800"
  },
  {
    "text": "handlers let's make sure we have the",
    "start": "581800",
    "end": "583880"
  },
  {
    "text": "required information to connect the",
    "start": "583880",
    "end": "585600"
  },
  {
    "text": "service our server needs two pieces of",
    "start": "585600",
    "end": "587600"
  },
  {
    "text": "information the URL of your project and",
    "start": "587600",
    "end": "590600"
  },
  {
    "text": "the secret key that it will'll use to",
    "start": "590600",
    "end": "592120"
  },
  {
    "text": "connect to it our client then needs",
    "start": "592120",
    "end": "593760"
  },
  {
    "text": "access both to this URL and a public key",
    "start": "593760",
    "end": "596160"
  },
  {
    "text": "this public key lets the client safely",
    "start": "596160",
    "end": "597880"
  },
  {
    "text": "generate credentials to access your",
    "start": "597880",
    "end": "599480"
  },
  {
    "text": "service you can find this information in",
    "start": "599480",
    "end": "601360"
  },
  {
    "text": "your super based project by going to",
    "start": "601360",
    "end": "602920"
  },
  {
    "text": "your project settings and clicking on",
    "start": "602920",
    "end": "605600"
  },
  {
    "text": "API these settings contain your public",
    "start": "605600",
    "end": "607920"
  },
  {
    "text": "URL your public key and the private",
    "start": "607920",
    "end": "610320"
  },
  {
    "text": "service role in jot Secrets copy that",
    "start": "610320",
    "end": "612720"
  },
  {
    "text": "information from your dashboard to your",
    "start": "612720",
    "end": "614320"
  },
  {
    "text": "localin file now it's time to integrate",
    "start": "614320",
    "end": "616240"
  },
  {
    "text": "the off server if you recall from Parts",
    "start": "616240",
    "end": "618160"
  },
  {
    "text": "one and two we used Lang grath's o",
    "start": "618160",
    "end": "620040"
  },
  {
    "text": "object to decorate an authentication",
    "start": "620040",
    "end": "621959"
  },
  {
    "text": "function that would validate user claims",
    "start": "621959",
    "end": "625079"
  },
  {
    "text": "we then used it to add individual",
    "start": "625079",
    "end": "626680"
  },
  {
    "text": "resource ownership using authorization",
    "start": "626680",
    "end": "628560"
  },
  {
    "text": "handlers to integrate the off server we",
    "start": "628560",
    "end": "630680"
  },
  {
    "text": "only need to modify this authenticate",
    "start": "630680",
    "end": "632519"
  },
  {
    "text": "function we will do so by connecting to",
    "start": "632519",
    "end": "634600"
  },
  {
    "text": "the superbase backend and fetching the",
    "start": "634600",
    "end": "637079"
  },
  {
    "text": "user's information if the request",
    "start": "637079",
    "end": "638760"
  },
  {
    "text": "succeeds we can return that information",
    "start": "638760",
    "end": "641519"
  },
  {
    "text": "otherwise we know the server has",
    "start": "641519",
    "end": "643000"
  },
  {
    "text": "rejected the request to avoid making API",
    "start": "643000",
    "end": "645560"
  },
  {
    "text": "requests here you could instead use the",
    "start": "645560",
    "end": "647279"
  },
  {
    "text": "jot secret from the project settings to",
    "start": "647279",
    "end": "649519"
  },
  {
    "text": "validate the user's barrier token or you",
    "start": "649519",
    "end": "651680"
  },
  {
    "text": "could at least cash the request to avoid",
    "start": "651680",
    "end": "653800"
  },
  {
    "text": "duplicate calls let's copy this new",
    "start": "653800",
    "end": "655680"
  },
  {
    "text": "authentication Handler and add it to our",
    "start": "655680",
    "end": "657680"
  },
  {
    "text": "application all of our authorization",
    "start": "657680",
    "end": "659360"
  },
  {
    "text": "handls can remain as they are we can",
    "start": "659360",
    "end": "661000"
  },
  {
    "text": "restart the server to try it out our",
    "start": "661000",
    "end": "662440"
  },
  {
    "text": "client code here is a bit more involved",
    "start": "662440",
    "end": "664120"
  },
  {
    "text": "than in Parts one and two since we need",
    "start": "664120",
    "end": "665720"
  },
  {
    "text": "to connect to a real authentication",
    "start": "665720",
    "end": "667639"
  },
  {
    "text": "server first let's create two users you",
    "start": "667639",
    "end": "670000"
  },
  {
    "text": "can run the code in your notebook and",
    "start": "670000",
    "end": "672040"
  },
  {
    "text": "provide a valid email you have access to",
    "start": "672040",
    "end": "674079"
  },
  {
    "text": "then include your superbase project URL",
    "start": "674079",
    "end": "675959"
  },
  {
    "text": "from before as well as your public Anon",
    "start": "675959",
    "end": "678040"
  },
  {
    "text": "key remember you can get your Anon key",
    "start": "678040",
    "end": "680399"
  },
  {
    "text": "from your API settings in the project",
    "start": "680399",
    "end": "682320"
  },
  {
    "text": "settings of your superbase dashboard",
    "start": "682320",
    "end": "683920"
  },
  {
    "text": "before proceeding you'll have to check",
    "start": "683920",
    "end": "685320"
  },
  {
    "text": "your email and confirm the accounts",
    "start": "685320",
    "end": "687519"
  },
  {
    "text": "otherwise superbase will reject further",
    "start": "687519",
    "end": "689360"
  },
  {
    "text": "attempts to log in when you click",
    "start": "689360",
    "end": "690720"
  },
  {
    "text": "confirm it will redirect you to a local",
    "start": "690720",
    "end": "692399"
  },
  {
    "text": "host address because we haven't set up",
    "start": "692399",
    "end": "694079"
  },
  {
    "text": "our project to point to a real front end",
    "start": "694079",
    "end": "696399"
  },
  {
    "text": "that's okay your user is still confirmed",
    "start": "696399",
    "end": "698079"
  },
  {
    "text": "to authenticate into our langra app our",
    "start": "698079",
    "end": "700320"
  },
  {
    "start": "699000",
    "end": "756000"
  },
  {
    "text": "users need to get a valid signed token",
    "start": "700320",
    "end": "702839"
  },
  {
    "text": "from the off server to do that we'll run",
    "start": "702839",
    "end": "704680"
  },
  {
    "text": "this login code we're going to request a",
    "start": "704680",
    "end": "707200"
  },
  {
    "text": "token using the password Grant type from",
    "start": "707200",
    "end": "709600"
  },
  {
    "text": "before and using our Anonymous key here",
    "start": "709600",
    "end": "712079"
  },
  {
    "text": "again once we log in we'll use that",
    "start": "712079",
    "end": "714079"
  },
  {
    "text": "token in the same authorization header",
    "start": "714079",
    "end": "715920"
  },
  {
    "text": "as before then we'll test that our user",
    "start": "715920",
    "end": "717560"
  },
  {
    "text": "is able to create a thread we'll check",
    "start": "717560",
    "end": "719040"
  },
  {
    "text": "to to make sure an unauthenticated user",
    "start": "719040",
    "end": "720880"
  },
  {
    "text": "also cannot access the thread and will",
    "start": "720880",
    "end": "722800"
  },
  {
    "text": "confirm that user 2 still doesn't have",
    "start": "722800",
    "end": "725279"
  },
  {
    "text": "access to the data that user one is",
    "start": "725279",
    "end": "727200"
  },
  {
    "text": "created Run the code to confirm if",
    "start": "727200",
    "end": "728680"
  },
  {
    "text": "everything was implemented correctly you",
    "start": "728680",
    "end": "730360"
  },
  {
    "text": "should see three green checks each to",
    "start": "730360",
    "end": "732399"
  },
  {
    "text": "confirm that our authentication Service",
    "start": "732399",
    "end": "734360"
  },
  {
    "text": "is working as intended congratulations",
    "start": "734360",
    "end": "736360"
  },
  {
    "text": "you've completed the tutorial in this",
    "start": "736360",
    "end": "738399"
  },
  {
    "text": "section you successfully set up your",
    "start": "738399",
    "end": "740120"
  },
  {
    "text": "authentication provider you added real",
    "start": "740120",
    "end": "742199"
  },
  {
    "text": "user accounts with email and password",
    "start": "742199",
    "end": "743959"
  },
  {
    "text": "authentication you integrated jot token",
    "start": "743959",
    "end": "746320"
  },
  {
    "text": "validation into your L graph server and",
    "start": "746320",
    "end": "748519"
  },
  {
    "text": "you implemented prop authorization to",
    "start": "748519",
    "end": "750079"
  },
  {
    "text": "ensure users can only access their own",
    "start": "750079",
    "end": "751839"
  },
  {
    "text": "data these are all the requisite skills",
    "start": "751839",
    "end": "753560"
  },
  {
    "text": "you need to create a full stack",
    "start": "753560",
    "end": "755360"
  },
  {
    "text": "application based on Lang graph and",
    "start": "755360",
    "end": "757040"
  },
  {
    "start": "756000",
    "end": "786000"
  },
  {
    "text": "that's all we have for today to learn",
    "start": "757040",
    "end": "759079"
  },
  {
    "text": "more you can try doing all this yourself",
    "start": "759079",
    "end": "761279"
  },
  {
    "text": "using the langra platform tutorials you",
    "start": "761279",
    "end": "763639"
  },
  {
    "text": "can also check out our conceptual guide",
    "start": "763639",
    "end": "765440"
  },
  {
    "text": "on implementing authentication and",
    "start": "765440",
    "end": "767199"
  },
  {
    "text": "access control in langra and check out",
    "start": "767199",
    "end": "769199"
  },
  {
    "text": "the langra SDK reference to get all the",
    "start": "769199",
    "end": "771360"
  },
  {
    "text": "details on what you can do with the Au",
    "start": "771360",
    "end": "773360"
  },
  {
    "text": "object and related methods finally keep",
    "start": "773360",
    "end": "776000"
  },
  {
    "text": "your eyes peeled for more guides on how",
    "start": "776000",
    "end": "778240"
  },
  {
    "text": "to implement common authentication and",
    "start": "778240",
    "end": "780160"
  },
  {
    "text": "access control patterns in lra",
    "start": "780160",
    "end": "782800"
  },
  {
    "text": "platform see you next time",
    "start": "782800",
    "end": "787240"
  }
]