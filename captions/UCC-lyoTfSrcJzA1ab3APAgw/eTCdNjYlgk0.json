[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "hi everyone today we are going to be looking at a quick example application",
    "start": "1040",
    "end": "6279"
  },
  {
    "text": "that was built using Lang graph and hosted on Lang graph Cloud the example application we're going to be talking",
    "start": "6279",
    "end": "12120"
  },
  {
    "text": "about today is a Choose Your Own Adventure style of story writing um the",
    "start": "12120",
    "end": "17600"
  },
  {
    "text": "graph that you see in front of you is a graph of chapter nodes so each one of these nodes represents a different",
    "start": "17600",
    "end": "24320"
  },
  {
    "text": "version of a chapter um and they are chronologically sorted from left to right so nodes 1 and three were present",
    "start": "24320",
    "end": "30240"
  },
  {
    "text": "versions of chapter 1 uh the green nodes are versions of chapter 2 the yellow nodes are versions of chapter 3 and node",
    "start": "30240",
    "end": "37200"
  },
  {
    "text": "8 the blue node is a version of chapter 4 and so in our uh application the user",
    "start": "37200",
    "end": "44600"
  },
  {
    "text": "gets to uh write the story alongside the llm so the llm is going to do the writing for us um but the user going to",
    "start": "44600",
    "end": "52440"
  },
  {
    "text": "be able to choose to edit chapters continue chapters and build out this complex story graph so that they can um",
    "start": "52440",
    "end": "59640"
  },
  {
    "text": "write the best version of each chapter that they wish and so today we'll dive into how we generate the graph that",
    "start": "59640",
    "end": "67360"
  },
  {
    "text": "allows the user to have this interaction we'll show how you can host that graph on L graph cloud and then lastly we will",
    "start": "67360",
    "end": "75080"
  },
  {
    "text": "look at the frontend implementation and interact with the app a little bit",
    "start": "75080",
    "end": "80200"
  },
  {
    "start": "80000",
    "end": "145000"
  },
  {
    "text": "ourselves okay so now let's walk through building the graph and we're going to start off by setting up our Imports and",
    "start": "80200",
    "end": "87960"
  },
  {
    "text": "as a reminder if you want to see all of the source code you can check out the GitHub repository in the description um",
    "start": "87960",
    "end": "94799"
  },
  {
    "text": "because we're going to go through the code slightly quickly here so if you want a detailed look be sure to check out the repository okay now that we have",
    "start": "94799",
    "end": "102640"
  },
  {
    "text": "declared our Imports we can declare our llms and in this case we're going to define a a bunch of different llms for",
    "start": "102640",
    "end": "110360"
  },
  {
    "text": "different stages of our graph and you can see our llms are labeled aptly we've",
    "start": "110360",
    "end": "116479"
  },
  {
    "text": "chosen a mixture of anthropic and open AI models for this use case but feel free to use whatever models you want",
    "start": "116479",
    "end": "123280"
  },
  {
    "text": "when building uh your Lang graph graphs um that is one of the many benefits of",
    "start": "123280",
    "end": "129200"
  },
  {
    "text": "using L graph is that you have the freedom to choose whatever llms you want so now that we've defined the llms for",
    "start": "129200",
    "end": "135319"
  },
  {
    "text": "the different parts of our writing process which we'll dive into a little bit later let's look at the prompts that",
    "start": "135319",
    "end": "141280"
  },
  {
    "text": "we're going to use to uh invoke these llms okay we have a variety of different",
    "start": "141280",
    "end": "147680"
  },
  {
    "start": "145000",
    "end": "370000"
  },
  {
    "text": "prompts that we are going to use to uh invoke our llms and we'll just walk",
    "start": "147680",
    "end": "153599"
  },
  {
    "text": "through them briefly so our summary uh messages which we're going to use for our summary llm is going to tell our llm",
    "start": "153599",
    "end": "159480"
  },
  {
    "text": "that it's focused on summarizing books um we're going to have a brainstorm uh llm which is going to",
    "start": "159480",
    "end": "165920"
  },
  {
    "text": "brainstorm uh ideas for our chapter and as you can see we're going to pass in a couple of different pieces of",
    "start": "165920",
    "end": "171879"
  },
  {
    "text": "information to this llm um such as the summary request the style request and",
    "start": "171879",
    "end": "177599"
  },
  {
    "text": "The Story summary um and we'll go into all of this in a uh when we discuss how",
    "start": "177599",
    "end": "183120"
  },
  {
    "text": "we Define our nodes and then we have our outline messages and our write messages which look fairly similar to the",
    "start": "183120",
    "end": "189000"
  },
  {
    "text": "brainstorm messages these are uh the three parts of the writing process that are going to occur every time we're",
    "start": "189000",
    "end": "194920"
  },
  {
    "text": "going to brainstorm outline and then actually write our chapter okay so now that we've defined our uh prompts let's",
    "start": "194920",
    "end": "204040"
  },
  {
    "text": "finalize our chains and then we can move on to defining the graph nodes okay so our chains are going to be defined very",
    "start": "204040",
    "end": "211360"
  },
  {
    "text": "simply we're just going to be using the L Lang chain expression language which if you're not familiar with uh be sure",
    "start": "211360",
    "end": "217560"
  },
  {
    "text": "to read up on the Lang chain docs and we're going to chain together our prompts our llms and then a simple uh",
    "start": "217560",
    "end": "223480"
  },
  {
    "text": "output parser and so now that we have four our four chains ready to go um and",
    "start": "223480",
    "end": "229640"
  },
  {
    "text": "we also have our two title llms from the top which we are not going to use prompt engineering with because they have",
    "start": "229640",
    "end": "235239"
  },
  {
    "text": "simpler tasks we are ready to start defining our graph nodes okay so first let's take a look at the",
    "start": "235239",
    "end": "241760"
  },
  {
    "text": "helper functions that we're going to use for our graph so we have three helper functions one of them is going to be",
    "start": "241760",
    "end": "247480"
  },
  {
    "text": "called summarize current story which is going to summarize the story up to this point and the reason we do this is",
    "start": "247480",
    "end": "253599"
  },
  {
    "text": "because we want the llm to be aware of what has gone on previously in the story",
    "start": "253599",
    "end": "259680"
  },
  {
    "text": "and so to do that we're going to start from some chapter ID we are going to",
    "start": "259680",
    "end": "264800"
  },
  {
    "text": "recursively find its parent which means traveling backwards in the graph if you remember remember that diagram we first",
    "start": "264800",
    "end": "270720"
  },
  {
    "text": "saw we'll dive a little deeper into what parent means but basically it's just the chapter that precedes it and then once",
    "start": "270720",
    "end": "276639"
  },
  {
    "text": "we've gone all the way back to the first chapter once the uh chapter parent is equal to negative 1 that means we've",
    "start": "276639",
    "end": "281759"
  },
  {
    "text": "reached the first chapter um we're going to stop we're going to join all those together in a string and then we'll use",
    "start": "281759",
    "end": "288000"
  },
  {
    "text": "the summary chain to find the summary of the story up to that point and then we're going to have our actual right",
    "start": "288000",
    "end": "293479"
  },
  {
    "text": "chapter function and like I mentioned this is going to brainstorm ideas outline the chapter and then write a",
    "start": "293479",
    "end": "299120"
  },
  {
    "text": "response um and that's going to use all of those chains that we described above as you",
    "start": "299120",
    "end": "305919"
  },
  {
    "text": "can see we have some user message that we're going to pass in depending on the users's uh input whether they want to um",
    "start": "305919",
    "end": "313039"
  },
  {
    "text": "edit a chapter continue the story or whether we're at the first chapter and then we're going to pass all of that uh",
    "start": "313039",
    "end": "318280"
  },
  {
    "text": "through these chains and you can notice we're also going to take these brainstorm ideas and pass it to the outline chain right here and similarly",
    "start": "318280",
    "end": "326160"
  },
  {
    "text": "we're going to take the outline and we're going to pass that to the writing chain so these steps follow each other sequentially and hopefully help the llms",
    "start": "326160",
    "end": "333680"
  },
  {
    "text": "write a more convincing and logical story and then at the very end we're going to use the chapter title llm to",
    "start": "333680",
    "end": "341039"
  },
  {
    "text": "come up with the title for the chapter and then we'll return those two things and then the last helper function which",
    "start": "341039",
    "end": "346479"
  },
  {
    "text": "we're only going to use once is the get title uh helper function which just",
    "start": "346479",
    "end": "351800"
  },
  {
    "text": "comes up with a title for the entire story so we only call this once at the beginning um and we are going to keep",
    "start": "351800",
    "end": "358120"
  },
  {
    "text": "the same title throughout the entire story so now that we've defined our helper functions let's look at the definition of our three nodes uh write",
    "start": "358120",
    "end": "365400"
  },
  {
    "text": "first chapter edit chapter and write next chapter so let's start with WR first chapter so write first chapter is",
    "start": "365400",
    "end": "372440"
  },
  {
    "start": "370000",
    "end": "460000"
  },
  {
    "text": "a fairly simple uh function what it's going to do is take in these three user",
    "start": "372440",
    "end": "379120"
  },
  {
    "text": "requests summary detail and style and it's going to turn those into prompts if they exist so the user doesn't need to",
    "start": "379120",
    "end": "385759"
  },
  {
    "text": "input all three of these um but at the beginning when deciding to write a story we're going to let the user enter an",
    "start": "385759",
    "end": "391599"
  },
  {
    "text": "overall summary any details they want to be included in the story and then a writing style that they would like for",
    "start": "391599",
    "end": "396639"
  },
  {
    "text": "the story so you can see we turn these into prompts if they exist and then we're going to write a a chapter using",
    "start": "396639",
    "end": "403840"
  },
  {
    "text": "that write chapter function and so uh in the summary parameter for the right",
    "start": "403840",
    "end": "409720"
  },
  {
    "text": "chapter uh function we're going to manually pass it in this time because we have there's no summary this is the first chapter and then our request is",
    "start": "409720",
    "end": "416360"
  },
  {
    "text": "going to be to please write the first chapter of the story and then we're going to update some of our state variables we'll go into exactly what all",
    "start": "416360",
    "end": "423520"
  },
  {
    "text": "of these mean but basically we're just creating our initial chapter graph so that diagram we showed at the beginning",
    "start": "423520",
    "end": "429000"
  },
  {
    "text": "is the main part of our state that chapter graph um and then we are also",
    "start": "429000",
    "end": "434520"
  },
  {
    "text": "going to um call the get title function uh this is the first the only time we're going to call the get title function to",
    "start": "434520",
    "end": "440479"
  },
  {
    "text": "generate a title for our overall story and then we'll set the chapter ID that we're viewing and the current chapter ID",
    "start": "440479",
    "end": "446479"
  },
  {
    "text": "both to this first node that we've created um we will explain the difference between chapter ID viewing",
    "start": "446479",
    "end": "452720"
  },
  {
    "text": "and current chapter ID in one second when we go over the graph state but for now let's look at how we Define the edit",
    "start": "452720",
    "end": "459919"
  },
  {
    "text": "node okay so the edit node is fairly simple first we're just going to define a edit prompt which uh tells the llm the",
    "start": "459919",
    "end": "468000"
  },
  {
    "start": "460000",
    "end": "552000"
  },
  {
    "text": "current state of the chapter and then the edits that the user wants to make to that chapter and so we take that prompt",
    "start": "468000",
    "end": "474879"
  },
  {
    "text": "we format it into this variable called user message and then we're going to pass that to the right chapter function",
    "start": "474879",
    "end": "480159"
  },
  {
    "text": "along with the chapter summary that we generated by calling summarize current story which was that helper function",
    "start": "480159",
    "end": "485400"
  },
  {
    "text": "that we defined earlier and then we're going to have our content in our title and then we're going to update our",
    "start": "485400",
    "end": "491440"
  },
  {
    "text": "chapter graph so we have to do a few things in there so the first thing we're going to have to do is we're going to have to create our new chapter which we",
    "start": "491440",
    "end": "497800"
  },
  {
    "text": "do here with this new chapter object and we have a variety of uh parameters for",
    "start": "497800",
    "end": "503240"
  },
  {
    "text": "our chapter object uh the important ones are these children sibling cousins and parent uh variables which are the",
    "start": "503240",
    "end": "511120"
  },
  {
    "text": "relationships that this chapter node will have with the other nodes on the graph um we're going to dive into",
    "start": "511120",
    "end": "516479"
  },
  {
    "text": "explaining all four of those in a second when we go to the chapter uh the graph",
    "start": "516479",
    "end": "521800"
  },
  {
    "text": "State sorry and then we're going to have to uh do some more updates to the graph",
    "start": "521800",
    "end": "527000"
  },
  {
    "text": "and then at the end we will just update the current chapter ID and the chapter ID viewing whenever we write a new",
    "start": "527000",
    "end": "532240"
  },
  {
    "text": "chapter we're going to set this chapter ID viewing to the current chapter ID because we're going to change the users",
    "start": "532240",
    "end": "539200"
  },
  {
    "text": "uh viewing to the C to the chapter they just wrote so when you write a chapter the UI is going to automatically update",
    "start": "539200",
    "end": "544600"
  },
  {
    "text": "that you're going to be viewing that chapter um and now let's look at how we write the uh next chapter node so this",
    "start": "544600",
    "end": "553000"
  },
  {
    "start": "552000",
    "end": "605000"
  },
  {
    "text": "is the next chapter node it's fairly similar to the edit node again we're going to have a prompt uh and then we",
    "start": "553000",
    "end": "559920"
  },
  {
    "text": "are going to summarize the story format The Prompt and then write the chapter using that formatted prompt and The",
    "start": "559920",
    "end": "566079"
  },
  {
    "text": "Story summary up to now and then again we're going to update the state uh mainly we're going to be updating the",
    "start": "566079",
    "end": "571120"
  },
  {
    "text": "chapter graph by adding this new chapter to the chapter graph adding the chapter we just wrote and then we're going to",
    "start": "571120",
    "end": "576440"
  },
  {
    "text": "update the relationships of the uh chapters that the relationships need to be updated so now that we've written",
    "start": "576440",
    "end": "582279"
  },
  {
    "text": "this new chapter there are some chapters uh some of the old chapters from the graph need to add this chapter as a",
    "start": "582279",
    "end": "588760"
  },
  {
    "text": "cousin um and we'll explain what that means in one second and then at the end again we'll change the chapter ID and",
    "start": "588760",
    "end": "594959"
  },
  {
    "text": "the chapter ID viewing to match this current chapter um um all right now that",
    "start": "594959",
    "end": "600640"
  },
  {
    "text": "we have finished defining our nodes we can Define our graph State and then actually compile the graph okay so we",
    "start": "600640",
    "end": "607760"
  },
  {
    "start": "605000",
    "end": "747000"
  },
  {
    "text": "have two classes in our state the first one is just the class the chapter class",
    "start": "607760",
    "end": "613560"
  },
  {
    "text": "which is just represents a single chapter um and it's fairly straightforward what these are and then",
    "start": "613560",
    "end": "621040"
  },
  {
    "text": "um we have our overall State um which contains a little bit more information",
    "start": "621040",
    "end": "626160"
  },
  {
    "text": "so these style summary and detail attributes as we saw are uh used in the",
    "start": "626160",
    "end": "631440"
  },
  {
    "text": "right first chapter node and then we don't um uh edit or change these after",
    "start": "631440",
    "end": "637079"
  },
  {
    "text": "that so these are just uh requests that the user can make when they initially click on uh writing the story and then",
    "start": "637079",
    "end": "643839"
  },
  {
    "text": "we have this chapter graph which is the uh graph that actually contains all of",
    "start": "643839",
    "end": "649399"
  },
  {
    "text": "the information so chapter uh graph basically just means a a dictionary with",
    "start": "649399",
    "end": "656360"
  },
  {
    "text": "all of the chapters that we've written so far and then it contains information about the relationship between those",
    "start": "656360",
    "end": "662839"
  },
  {
    "text": "different chapters so we are going to dive into that in just one second after we explain these last few parameters so",
    "start": "662839",
    "end": "668800"
  },
  {
    "text": "we have these current this chapter ID viewing and this current chapter ID so chapter ID viewing is pretty",
    "start": "668800",
    "end": "674880"
  },
  {
    "text": "straightforward it's what node in the graph the user is currently viewing so when we see our front end you'll see",
    "start": "674880",
    "end": "680079"
  },
  {
    "text": "that the user has the ability uh to move around the graph really easily and view",
    "start": "680079",
    "end": "686680"
  },
  {
    "text": "different chapters and read whatever chapters they want so we need to make sure we know um where the user is at any",
    "start": "686680",
    "end": "692959"
  },
  {
    "text": "point in time so that when they click edit or when they click continue we are actually editing the right chapter or we're actually continuing from the right",
    "start": "692959",
    "end": "698959"
  },
  {
    "text": "chapter and then the current chapter ID is just means what is the how many nodes do we have up to this point basically so",
    "start": "698959",
    "end": "706040"
  },
  {
    "text": "um the node number for each chapter increases uh monotonically we just start counting up 1 2 3 etc etc and so we need",
    "start": "706040",
    "end": "713760"
  },
  {
    "text": "to make sure that we keep track of what's the next node that we are going to write and then we have our rewrite and continue continue instructions which",
    "start": "713760",
    "end": "720279"
  },
  {
    "text": "are passed in by the user um when they uh give the graph instructions on what",
    "start": "720279",
    "end": "728519"
  },
  {
    "text": "to do whether they want to rewrite or continue and then we also have our overall story title so this is the state",
    "start": "728519",
    "end": "734880"
  },
  {
    "text": "for our story um and this is our overall graph state so now let's look a little bit at what this chapter graph actually",
    "start": "734880",
    "end": "741720"
  },
  {
    "text": "means and what these children sibling and cousin and parent attributes",
    "start": "741720",
    "end": "747760"
  },
  {
    "start": "747000",
    "end": "1004000"
  },
  {
    "text": "represent Okay so this is the same graph that we saw at the beginning except this time we're going to pretend that the",
    "start": "747760",
    "end": "753440"
  },
  {
    "text": "user is currently viewing node 5 so um node 5 is highlighted in red and when a",
    "start": "753440",
    "end": "759920"
  },
  {
    "text": "user is at a node we're going to give them some options we're going to give them the option to go back a chapter to",
    "start": "759920",
    "end": "765639"
  },
  {
    "text": "go forward a chapter or to stay at their current chapter um for each of those choices there's going to be different",
    "start": "765639",
    "end": "771800"
  },
  {
    "text": "chapters they can select so let's start with the going back a chapter which is the simplest case in going back a",
    "start": "771800",
    "end": "777519"
  },
  {
    "text": "chapter they're only going to be able to select the chapter that was their direct descendant so in this case node four is",
    "start": "777519",
    "end": "783519"
  },
  {
    "text": "a direct descendant of node 5 it's the one that immediately precedes it and so",
    "start": "783519",
    "end": "789079"
  },
  {
    "text": "each node has one parent and that's the only thing they can go back to now you'll notice for some nodes like for",
    "start": "789079",
    "end": "794519"
  },
  {
    "text": "instance node 7 the parent node is doesn't appear immediately obvious the",
    "start": "794519",
    "end": "799880"
  },
  {
    "text": "way you find the parent node for something like node 7 is we're just going to Traverse backwards on these black lines until we reach uh a prior",
    "start": "799880",
    "end": "807040"
  },
  {
    "text": "chapter so in this case we'll go from node 7 to node 5 and then from node 5 to node four so node four will be the parent for node 7 as well okay so",
    "start": "807040",
    "end": "816279"
  },
  {
    "text": "there's only one option if you want to go back a chapter what if you want to stay at the same chapter so if we want to choose a different version of the",
    "start": "816279",
    "end": "822320"
  },
  {
    "text": "current chapter so you can always choose yourself you can always stay at node 5 and then you can also choose something",
    "start": "822320",
    "end": "828240"
  },
  {
    "text": "we call siblings siblings are chapters that are created by clicking the edit button so in this case the only sibling",
    "start": "828240",
    "end": "834320"
  },
  {
    "text": "is node 7 but you could imagine clicking the edit button two times three times 20 times however many times you want and",
    "start": "834320",
    "end": "841000"
  },
  {
    "text": "all of those nodes that you generate by clicking the edit button and the edit button only would be siblings of node 5",
    "start": "841000",
    "end": "846759"
  },
  {
    "text": "so if node 7 if you clicked edit again you'd or edit again and edit again you'd create all these yellow nodes and they",
    "start": "846759",
    "end": "853880"
  },
  {
    "text": "would all be directly related to node five as siblings because you could just you clicked the edit button to get to",
    "start": "853880",
    "end": "859000"
  },
  {
    "text": "them and then we have something called cousins again I'm I'm going to apologize for the terminology it's not super clear",
    "start": "859000",
    "end": "865000"
  },
  {
    "text": "and this decision was completely arbitrary I encourage you to design the the uh graph as As You Wish and design",
    "start": "865000",
    "end": "872360"
  },
  {
    "text": "it to uh the specifications that you want um but in our example we Define",
    "start": "872360",
    "end": "877440"
  },
  {
    "text": "cousins to be continuations uh from the parent so they're different continuations from its parent so node",
    "start": "877440",
    "end": "883759"
  },
  {
    "text": "5's parent is node four and we can see that node six is a different continuation of the story from that",
    "start": "883759",
    "end": "889920"
  },
  {
    "text": "point so we were at node 4 and we created a new version of uh chap of the",
    "start": "889920",
    "end": "895920"
  },
  {
    "text": "next chapter which in this case is chapter 3 so we clicked continue continue and we created node 6 which is",
    "start": "895920",
    "end": "901120"
  },
  {
    "text": "a different version than node 5 if we had clicked continue again and we created another yellow node and another",
    "start": "901120",
    "end": "906399"
  },
  {
    "text": "yellow node however many we want those would all be cousins to node 5 because they all originated from the same place",
    "start": "906399",
    "end": "911959"
  },
  {
    "text": "even though they're not directly related on this chapter graph so if you're at node 5 you can select either node 6 or",
    "start": "911959",
    "end": "918959"
  },
  {
    "text": "seven to switch to as the current chapter um and now that we've discussed",
    "start": "918959",
    "end": "924199"
  },
  {
    "text": "the previous and current chapter options let's move on to the next chapter options which are actually fa fairly straightforward for the next chapter you",
    "start": "924199",
    "end": "931519"
  },
  {
    "text": "can select any of your children so this is really simple any of the nodes that you clicked continue to generate are",
    "start": "931519",
    "end": "937600"
  },
  {
    "text": "your children so in this case there's only one node uh that was generated but you can generate a lot of different",
    "start": "937600",
    "end": "943440"
  },
  {
    "text": "nodes by clicking continue if you don't like the route that the uh the llm uh graph took you can just click continue",
    "start": "943440",
    "end": "950240"
  },
  {
    "text": "again and provide it with different instructions uh in your continue instructions box and that will uh create",
    "start": "950240",
    "end": "957279"
  },
  {
    "text": "more children and you can select any of the children to move to is the next chapter so this is the basic definition",
    "start": "957279",
    "end": "964519"
  },
  {
    "text": "of how we allow the user to Traverse our chapter graph again these definitions",
    "start": "964519",
    "end": "970759"
  },
  {
    "text": "are arbitrary you could let the user see any and all of the chapters to moveed to",
    "start": "970759",
    "end": "975880"
  },
  {
    "text": "you could let the user only see the parent and children um you could Define",
    "start": "975880",
    "end": "981600"
  },
  {
    "text": "different relationships you can do whatever you want this was just the way that we traversed and um if you want",
    "start": "981600",
    "end": "989240"
  },
  {
    "text": "this to be very clear make sure you read over the source code and understand everything as well as you can but now",
    "start": "989240",
    "end": "996319"
  },
  {
    "text": "that we've finish describing the state of the graph let's go compile it and then we'll look into how we can host it",
    "start": "996319",
    "end": "1002480"
  },
  {
    "text": "using Lang graph Cloud okay this last cell is the finalization of our graph",
    "start": "1002480",
    "end": "1009199"
  },
  {
    "start": "1004000",
    "end": "1053000"
  },
  {
    "text": "and it defines all of our nodes and edges which are really straightforward",
    "start": "1009199",
    "end": "1014560"
  },
  {
    "text": "we just have a conditional entry point called router which decides which node we are going to use um and so it's a",
    "start": "1014560",
    "end": "1022440"
  },
  {
    "text": "very simple logic we check if there are any chapters written if there are no chapters written we're going to write",
    "start": "1022440",
    "end": "1027880"
  },
  {
    "text": "the first one if there are rewrite instructions we're going to edit and otherwise we're going to continue um and each of these nodes lead",
    "start": "1027880",
    "end": "1035880"
  },
  {
    "text": "directly to the end so the only logic that is being done is in this router function um and then at the end we are",
    "start": "1035880",
    "end": "1042280"
  },
  {
    "text": "going to uh compile our graph into a variable called graph so that is it for",
    "start": "1042280",
    "end": "1047720"
  },
  {
    "text": "the definition uh of our graph now let's look into how we can host this using Lang graph",
    "start": "1047720",
    "end": "1053720"
  },
  {
    "start": "1053000",
    "end": "1184000"
  },
  {
    "text": "Cloud Okay so we've put all of the code that we just wrote into a file called",
    "start": "1053720",
    "end": "1059200"
  },
  {
    "text": "agent. py and we've put everything under this story writing folder you can see here on the left hand side um and the",
    "start": "1059200",
    "end": "1067559"
  },
  {
    "text": "important thing that we've defined in the storywriting fer folder is this Lang graph. Json file which tells Lang graph",
    "start": "1067559",
    "end": "1074840"
  },
  {
    "text": "how to compile our graph so there are a few few things that we have to uh put in",
    "start": "1074840",
    "end": "1080960"
  },
  {
    "text": "here first we have to put the dependencies so it's going to look for a requirements.txt file in the directory",
    "start": "1080960",
    "end": "1086559"
  },
  {
    "text": "that we pass in this case we only have one directory with requirements and we",
    "start": "1086559",
    "end": "1091799"
  },
  {
    "text": "have the requirements from our Imports at the top of our file then we have to pass the actual",
    "start": "1091799",
    "end": "1098360"
  },
  {
    "text": "graphs that we want to be hosted so this is a dictionary with the name of the graph and then the location of the graph",
    "start": "1098360",
    "end": "1104799"
  },
  {
    "text": "so in this case we're only hosting one graph but you can host as many graphs as you wish all you have to do is make sure",
    "start": "1104799",
    "end": "1111520"
  },
  {
    "text": "you have unique names and that you actually point the names to a compiled graph so in our case we are in the file",
    "start": "1111520",
    "end": "1117960"
  },
  {
    "text": "agent. py and we're looking for the variable graph and if you go to our file at the bottom you can see we have this",
    "start": "1117960",
    "end": "1123840"
  },
  {
    "text": "variable graph that is equal to a compiled graph so just make sure that any of the graphs you wish to host are",
    "start": "1123840",
    "end": "1130520"
  },
  {
    "text": "pointed to uh with compiled graphs and then um at this is for local development",
    "start": "1130520",
    "end": "1136240"
  },
  {
    "text": "you can pass an environment um but when we host on L graph Cloud as you'll see in one second uh we can actually add our",
    "start": "1136240",
    "end": "1143919"
  },
  {
    "text": "environment variables in ourselves um one last thing before we go to L graph",
    "start": "1143919",
    "end": "1149039"
  },
  {
    "text": "cloud is that make sure to check out the Lang graph docs we have Cloud docs",
    "start": "1149039",
    "end": "1154799"
  },
  {
    "text": "they're in beta but they provide information on how you can test your graph locally using a few of our CLI",
    "start": "1154799",
    "end": "1161120"
  },
  {
    "text": "commands just to ensure that your graph is running properly before you go host it on langra cloud um we've already done",
    "start": "1161120",
    "end": "1167880"
  },
  {
    "text": "that testing here locally so we're going to move straight on to hosting it on Lang graph Cloud but make sure that you",
    "start": "1167880",
    "end": "1173679"
  },
  {
    "text": "test before uh you go to hosting it because you don't want there to be issues uh once it's deployed in the",
    "start": "1173679",
    "end": "1179720"
  },
  {
    "text": "cloud all right let's head over to langra cloud and see how we can deploy this okay now we are on lsmith and let's",
    "start": "1179720",
    "end": "1188240"
  },
  {
    "start": "1184000",
    "end": "1361000"
  },
  {
    "text": "see how we can deploy our project so we're going to want to go to the left hand side navigation and click on this",
    "start": "1188240",
    "end": "1193600"
  },
  {
    "text": "rocket ship called deployments and then we're going to go to the right hand side and click this button called new",
    "start": "1193600",
    "end": "1199600"
  },
  {
    "text": "deployment um so the first thing you're going to want to do is collect connect your GitHub account right here in the left you can see it's already connected",
    "start": "1199600",
    "end": "1206799"
  },
  {
    "text": "to mine but if you haven't make sure you follow the instructions to do that then we're going to select a repo so in this",
    "start": "1206799",
    "end": "1212840"
  },
  {
    "text": "case we're going to select the storywriting repo and we are going to also specify where our Lang graph. Json",
    "start": "1212840",
    "end": "1219400"
  },
  {
    "text": "file is in our case it's in the root directory we don't need to change this but if your uh file is named something",
    "start": "1219400",
    "end": "1225960"
  },
  {
    "text": "different or is located somewhere different make sure you specify that here and then you can also select the branch that you want to use uh since",
    "start": "1225960",
    "end": "1232960"
  },
  {
    "text": "this is an example we'll just keep it at Main but if you have uh different development branches that you want to",
    "start": "1232960",
    "end": "1238000"
  },
  {
    "text": "deploy make sure you specify the right thing here um and then we can select whether we want to have a development or",
    "start": "1238000",
    "end": "1243480"
  },
  {
    "text": "production deployment um in this case we're going to do development because we don't need a lot of servers and then we",
    "start": "1243480",
    "end": "1248960"
  },
  {
    "text": "can add any of our uh API keys so in our case we're going to need uh an open AI",
    "start": "1248960",
    "end": "1255120"
  },
  {
    "text": "API key um and then we're also going to to need an anthropic uh API key of course uh make",
    "start": "1255120",
    "end": "1263919"
  },
  {
    "text": "sure to fill these values in with whatever the actual values of your API keys are um and then once you've set all",
    "start": "1263919",
    "end": "1271360"
  },
  {
    "text": "of this up if you want to edit the name you can do that as well once you've set all of this up click the submit button",
    "start": "1271360",
    "end": "1278120"
  },
  {
    "text": "and then uh we are going to end up with a deployment okay wonderful if I had",
    "start": "1278120",
    "end": "1284559"
  },
  {
    "text": "clicked submit I would have a deployment right here this revision history this we",
    "start": "1284559",
    "end": "1290120"
  },
  {
    "text": "would only have one revision since the initial uh submit it would be here um",
    "start": "1290120",
    "end": "1295520"
  },
  {
    "text": "you can look at this deployment to inspect the build and the deploy logs um you can see that this one deployed",
    "start": "1295520",
    "end": "1301159"
  },
  {
    "text": "successfully if you have issues with deployment uh make sure to check out the docs and check out your graph definition",
    "start": "1301159",
    "end": "1306840"
  },
  {
    "text": "to ensure that there are no errors and then we're going to get this nice dashboard so we are going to have",
    "start": "1306840",
    "end": "1312559"
  },
  {
    "text": "information on all of our traces there are more charts that we can access if we click this all charts button and then",
    "start": "1312559",
    "end": "1318240"
  },
  {
    "text": "down here we're going to see our specific uh traces so I've already run a few uh traces on this storywriting",
    "start": "1318240",
    "end": "1325320"
  },
  {
    "text": "example um but once we use the front end we'll see a few more traces show up there and then um you can also uh click",
    "start": "1325320",
    "end": "1333520"
  },
  {
    "text": "on the API docs here to uh look at all of the different API calls that you can",
    "start": "1333520",
    "end": "1340000"
  },
  {
    "text": "make um and please check out the Lang graph docs uh if you want to see more",
    "start": "1340000",
    "end": "1345159"
  },
  {
    "text": "detailed explanations and also if you want to see how the SD DK uh correlates",
    "start": "1345159",
    "end": "1350360"
  },
  {
    "text": "to all of these API calls because using the SDK is really nice and we'll show how to do that uh when we walk through",
    "start": "1350360",
    "end": "1356679"
  },
  {
    "text": "the front end really quickly and then the last thing you can do is use the playground okay and then",
    "start": "1356679",
    "end": "1363000"
  },
  {
    "start": "1361000",
    "end": "1454000"
  },
  {
    "text": "when you get to the playground you're going to see this nice interactive graph which you can move around um we can also",
    "start": "1363000",
    "end": "1369200"
  },
  {
    "text": "put in input here so we can run threads and while this is running you'll see on",
    "start": "1369200",
    "end": "1374880"
  },
  {
    "text": "the left hand side the graph actually highlights what nodes are currently running run and then I'll walk through a",
    "start": "1374880",
    "end": "1380720"
  },
  {
    "text": "couple more of the nice things of the playground on this left hand side right here this drop down you can select the graph you want to use so in our case we",
    "start": "1380720",
    "end": "1387880"
  },
  {
    "text": "only hosted one graph uh remember in the L graph. Json file you can declare as many graphs that you want to host As You",
    "start": "1387880",
    "end": "1394240"
  },
  {
    "text": "Wish on this interrupts drop down we can select nodes to stop execution after so",
    "start": "1394240",
    "end": "1399600"
  },
  {
    "text": "we can dive deeper into the outputs uh the intermediary outputs of our graph and we can locate where errors are",
    "start": "1399600",
    "end": "1405400"
  },
  {
    "text": "occurring we can also toggle between the different threads that we have and go look at all of those here on the on the",
    "start": "1405400",
    "end": "1411679"
  },
  {
    "text": "right hand side and then the last cool thing is we can actually make edits to",
    "start": "1411679",
    "end": "1417520"
  },
  {
    "text": "our previous prompts we can put in new information and then we can Fork the",
    "start": "1417520",
    "end": "1424159"
  },
  {
    "text": "graph to run the story in a different way so now we can see the graph is",
    "start": "1424159",
    "end": "1429440"
  },
  {
    "text": "writing a serious story um so we're not going to wait for this to run but this",
    "start": "1429440",
    "end": "1435480"
  },
  {
    "text": "is a just a quick walkthrough of how you can use the pl playground and why the Lang graph Cloud UI is so valuable for",
    "start": "1435480",
    "end": "1442279"
  },
  {
    "text": "developers looking to debug and figure out what's going on with their graph so now that we've ran through this let's go",
    "start": "1442279",
    "end": "1448640"
  },
  {
    "text": "look at creating the front end and we will see how we can actually utilize our",
    "start": "1448640",
    "end": "1453720"
  },
  {
    "text": "app all right let's look a little bit at our front end now we're not going to dive into all of the streamlet um code",
    "start": "1453720",
    "end": "1461000"
  },
  {
    "start": "1454000",
    "end": "1572000"
  },
  {
    "text": "that we've written here if you want to you can look at the repo and follow along yourself but for now we're just",
    "start": "1461000",
    "end": "1467159"
  },
  {
    "text": "going to look at some of the utility of the langra cloud SDK and how it makes writing our front end easier so the",
    "start": "1467159",
    "end": "1473679"
  },
  {
    "text": "first thing we're going to do is we're going to create our agent um and so we're going to do that by getting our client setting an assistant and a thread",
    "start": "1473679",
    "end": "1480919"
  },
  {
    "text": "and for getting our client we just need to pass the URL of our deployment you can also pass in the API key if you want",
    "start": "1480919",
    "end": "1487120"
  },
  {
    "text": "uh in our case I have the API key saved in my environment and so I know it will find it and I'm not going to pass it in",
    "start": "1487120",
    "end": "1493840"
  },
  {
    "text": "as a parameter but you can do whatever is easiest for you and then one other thing to notice is we're going to pass metadata to our threads because all of",
    "start": "1493840",
    "end": "1500919"
  },
  {
    "text": "the people who use this website are going to be accessing the same client but we want to make sure that they each",
    "start": "1500919",
    "end": "1506520"
  },
  {
    "text": "creating threads that are unique to them so in this case we're going to pass some metadata with a session ID in our uh",
    "start": "1506520",
    "end": "1512320"
  },
  {
    "text": "example we just create a random string for the session ID but you could create some login information or get an IP",
    "start": "1512320",
    "end": "1518120"
  },
  {
    "text": "address or something so that this information persists across several browser sessions now let's look at how",
    "start": "1518120",
    "end": "1526399"
  },
  {
    "text": "the load stories works so when a user clicks on load stories we're going to call this function called get user",
    "start": "1526399",
    "end": "1531880"
  },
  {
    "text": "threads which searches all of the threads uh using the same metadata so we're only going to find threads uh and",
    "start": "1531880",
    "end": "1538080"
  },
  {
    "text": "remember threads correspond to stories we're only going to find threads that uh this user uh wrote themselves if we",
    "start": "1538080",
    "end": "1545279"
  },
  {
    "text": "didn't filter on this metadata we would return all of the threads that were in this client and so if you know you have",
    "start": "1545279",
    "end": "1552679"
  },
  {
    "text": "10 people using the app you would be able to see stories from all 10 of those people and so that's obviously not something we want and then for each of",
    "start": "1552679",
    "end": "1559240"
  },
  {
    "text": "those threads we're going to get that thread state so we're going to actually get the state for each of those threads to find the story title and then we will",
    "start": "1559240",
    "end": "1566679"
  },
  {
    "text": "return those story titles to the user so that they can select a story to switch",
    "start": "1566679",
    "end": "1571919"
  },
  {
    "text": "to now let's look at the most important function in our front end which is the generate answer function and so this",
    "start": "1571919",
    "end": "1578559"
  },
  {
    "start": "1572000",
    "end": "1808000"
  },
  {
    "text": "function is the function that streams back the response to the user and it works fairly simply uh all we have to do",
    "start": "1578559",
    "end": "1586080"
  },
  {
    "text": "is call client. runs. stream and we are going to pass in our thread ID our assistant ID the input that we want um",
    "start": "1586080",
    "end": "1593600"
  },
  {
    "text": "any metadata that we pass to the um config and then we're going to also set",
    "start": "1593600",
    "end": "1599200"
  },
  {
    "text": "the stream mode to be messages if you want to learn more about the different stream modes uh make sure to check out",
    "start": "1599200",
    "end": "1604760"
  },
  {
    "text": "the docs I'm not going to dive into that now and then we're going to also set our multitask strategy to roll back um to",
    "start": "1604760",
    "end": "1610159"
  },
  {
    "text": "deal with double texting which is when a user enters an input before the first uh input has finished running through the",
    "start": "1610159",
    "end": "1616520"
  },
  {
    "text": "graph again check out the land graph uh docs to learn more and then what we're going to do is we are going to use a",
    "start": "1616520",
    "end": "1622679"
  },
  {
    "text": "little bit of logic um to select whether we're streaming back the data or not so if the",
    "start": "1622679",
    "end": "1628760"
  },
  {
    "text": "llm is the right llm and that's again if you remember our walk through of the backend code that's the llm that's",
    "start": "1628760",
    "end": "1635159"
  },
  {
    "text": "actually writing the text for the chapter what we're going to do is call this placeholder doino function and this is a streamlet function that's going to",
    "start": "1635159",
    "end": "1641520"
  },
  {
    "text": "allow us to stream text as it arrives and so that's uh if you remember when we",
    "start": "1641520",
    "end": "1647240"
  },
  {
    "text": "looked at the I we could see that blue box filling in as the chapter was written um if the llm is not the right",
    "start": "1647240",
    "end": "1655760"
  },
  {
    "text": "llm though we still uh do something which is this placeholder title uh code and that's that little blue box that",
    "start": "1655760",
    "end": "1662000"
  },
  {
    "text": "tells us whether we're in the brainstorming phase whether we're in the planning phase or whether we're in the writing phase and that's going to use",
    "start": "1662000",
    "end": "1668480"
  },
  {
    "text": "this llm to title dictionary to provide the title that we should put in that little uh blue text box and that's going",
    "start": "1668480",
    "end": "1675919"
  },
  {
    "text": "to provide our user with some information and again if we didn't do any of this streaming the user would have around 30",
    "start": "1675919",
    "end": "1682720"
  },
  {
    "text": "to 35 seconds before they would see any output and so that can be really frustrating so uh utilizing this",
    "start": "1682720",
    "end": "1688760"
  },
  {
    "text": "streaming and utilizing different styles of streaming again we don't need to stream the text from all of the llms we",
    "start": "1688760",
    "end": "1694240"
  },
  {
    "text": "can select which llms to stream from is really powerful and gives this a much snappier user",
    "start": "1694240",
    "end": "1699720"
  },
  {
    "text": "experience all right now let's just check out one last thing which is how our Langs Smith traces get sent um and",
    "start": "1699720",
    "end": "1706600"
  },
  {
    "text": "it's really simple all we're going to do is create a feedback client um and we're going to pass our Lang Smith uh URL here",
    "start": "1706600",
    "end": "1713600"
  },
  {
    "text": "in this case I'm just using the development uh URL but in your case you'd most likely be using the normal",
    "start": "1713600",
    "end": "1719640"
  },
  {
    "text": "Lang Smith URL and then um when somebody press is uh one of these bad writing or",
    "start": "1719640",
    "end": "1727600"
  },
  {
    "text": "good writing buttons uh you can see we they these are pretty much identical code what we're going to do is we're",
    "start": "1727600",
    "end": "1733120"
  },
  {
    "text": "going to find the Run ID that's corresponding to the current node ID so",
    "start": "1733120",
    "end": "1738399"
  },
  {
    "text": "that's the Run ID um of the current node that we are viewing so again the user",
    "start": "1738399",
    "end": "1744039"
  },
  {
    "text": "can be changing between a bunch of different chapters and we want to make sure we send feedback to the right run",
    "start": "1744039",
    "end": "1750279"
  },
  {
    "text": "so we're going to get call this function called get run ID corresponding to node and up here this is again going to be",
    "start": "1750279",
    "end": "1755919"
  },
  {
    "text": "utilizing the Lang graph Cloud SDK and it's really great we can list all of our runs um with the correct thread ID and",
    "start": "1755919",
    "end": "1765440"
  },
  {
    "text": "then um we can find um the run that corresponds to our note",
    "start": "1765440",
    "end": "1771240"
  },
  {
    "text": "ID we'll return that run ID and then back here once we've found that run ID",
    "start": "1771240",
    "end": "1777519"
  },
  {
    "text": "we are we can create feedback on our feedback client and we will give it a score of zero if they press the bad",
    "start": "1777519",
    "end": "1782799"
  },
  {
    "text": "button and a score of one if they press the good button so this is a super easy way of sending feedback automatically to",
    "start": "1782799",
    "end": "1790159"
  },
  {
    "text": "lsmith and this is a really simple example but you can imagine sending more detailed uh feedback such as text",
    "start": "1790159",
    "end": "1795640"
  },
  {
    "text": "feedback uh different scores for for different parts of the writing etc etc",
    "start": "1795640",
    "end": "1801240"
  },
  {
    "text": "if you want to learn more about all of the front end code be sure to check out the repo and look at it in",
    "start": "1801240",
    "end": "1807600"
  },
  {
    "text": "depth okay now we're just going to do a very brief walkthrough of our front end I'll let you interact with the front end",
    "start": "1807600",
    "end": "1813200"
  },
  {
    "start": "1808000",
    "end": "2002000"
  },
  {
    "text": "on your own if you wish by using the website link in the description but right here we can see um we're in the",
    "start": "1813200",
    "end": "1818679"
  },
  {
    "text": "middle of a story called Mas creative Intrigue but we're going to start a new story and we're going to provide some",
    "start": "1818679",
    "end": "1824559"
  },
  {
    "text": "very basic details um and we are then going to click submit and we're going to",
    "start": "1824559",
    "end": "1830640"
  },
  {
    "text": "start seeing our responses streamed back to us so currently the L the graph is brainstorming ideas for the chapter um",
    "start": "1830640",
    "end": "1837919"
  },
  {
    "text": "and after it brainstorms as you can recall it's going to start planning the outline and then once it's finished planning the outline we're going to see",
    "start": "1837919",
    "end": "1845159"
  },
  {
    "text": "the story actually get streamed back to us and once the story is done getting",
    "start": "1845159",
    "end": "1850200"
  },
  {
    "text": "streamed back to us it's going to generate a title for the overall story as well as a title for this first",
    "start": "1850200",
    "end": "1856039"
  },
  {
    "text": "chapter so we have a new story called mule Mayhem and the first chapter is called Betsy's Gambit Hanks wild ride",
    "start": "1856039",
    "end": "1862360"
  },
  {
    "text": "and we can scroll through to read the chapter um and then if we wanted to edit this chapter or continue the story we",
    "start": "1862360",
    "end": "1868880"
  },
  {
    "text": "could click on this edit or continue buttons I'm not going to uh walk through those right now because it's a very",
    "start": "1868880",
    "end": "1875200"
  },
  {
    "text": "similar writing process to the new story button but uh please go use the app",
    "start": "1875200",
    "end": "1880600"
  },
  {
    "text": "yourself and interact and test out those functionalities I am going to show how we can propagate feedback to Langs Smith",
    "start": "1880600",
    "end": "1887679"
  },
  {
    "text": "so I'm I'm going to click on the good writing button here and then in one second we'll go over to lsmith and see how that shows up as feedback on our",
    "start": "1887679",
    "end": "1894120"
  },
  {
    "text": "trace and then I'll also show this load story functionality which let us load stories that we'd written previously so",
    "start": "1894120",
    "end": "1900799"
  },
  {
    "text": "we can see we've switched from mule Mayhem to masquerade of intrigue and we can switch back if we like so this is a",
    "start": "1900799",
    "end": "1908399"
  },
  {
    "text": "really cool thing about Lang graph is that it keeps our threads so we can always go back to previous threads and",
    "start": "1908399",
    "end": "1915639"
  },
  {
    "text": "load the state from those threads just as it was so now let's head over to lsmith to see how that writing feedback",
    "start": "1915639",
    "end": "1921760"
  },
  {
    "text": "got propagated okay now I'm on lsmith and I'm going to look at that Trace I just sent we can see that funny story",
    "start": "1921760",
    "end": "1927200"
  },
  {
    "text": "based in California with a writing style of Mark Twain which is what I just inputed we can see on the left hand side",
    "start": "1927200",
    "end": "1932720"
  },
  {
    "text": "the typical lsmith Trace layout so if you're familiar with lsmith it should look look really similar and then let's",
    "start": "1932720",
    "end": "1938639"
  },
  {
    "text": "look at the feedback tag and we can see that we've created this feedback with a score of one by clicking the good",
    "start": "1938639",
    "end": "1943760"
  },
  {
    "text": "writing button so the bad writing represents a score of zero and the good writing represents a score of one this",
    "start": "1943760",
    "end": "1948960"
  },
  {
    "text": "is a really simple feedback key but uh you can generate whatever feedback you want you could have text feedback you",
    "start": "1948960",
    "end": "1955600"
  },
  {
    "text": "can have numerical feedback you can do whatever you like and this allows you to sort through your traces find traces",
    "start": "1955600",
    "end": "1961120"
  },
  {
    "text": "with bad feedback and you could use those as few shot examples to improve the performance of your model um or you",
    "start": "1961120",
    "end": "1967799"
  },
  {
    "text": "can go into the playground and dive deeper into those threads and see exactly what was going on under the hood",
    "start": "1967799",
    "end": "1973799"
  },
  {
    "text": "but just a super uh nice thing about langra cloud is that it lets us us send",
    "start": "1973799",
    "end": "1979200"
  },
  {
    "text": "feedback automatically from the user to our backend in Lang Smith so I hope you've enjoyed this quick walkthrough of",
    "start": "1979200",
    "end": "1986000"
  },
  {
    "text": "the story writing app and I hope you have been uh inspired to write your own langra cloud applications and I can't",
    "start": "1986000",
    "end": "1992880"
  },
  {
    "text": "wait to see what everyone builds have fun using langra and the new langra",
    "start": "1992880",
    "end": "1998039"
  },
  {
    "text": "Cloud I hope you have a great rest of your day",
    "start": "1998039",
    "end": "2002840"
  }
]