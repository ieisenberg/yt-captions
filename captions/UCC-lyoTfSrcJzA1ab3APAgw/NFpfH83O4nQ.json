[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "going from unstructured text to a",
    "start": "40",
    "end": "1800"
  },
  {
    "text": "structured output is one of the most",
    "start": "1800",
    "end": "3600"
  },
  {
    "text": "popular use cases for llms and often",
    "start": "3600",
    "end": "5680"
  },
  {
    "text": "times we want to use llms to generate",
    "start": "5680",
    "end": "7680"
  },
  {
    "text": "complex schemas so here's just a toy",
    "start": "7680",
    "end": "10080"
  },
  {
    "text": "example of a semi- complicated ptic",
    "start": "10080",
    "end": "12599"
  },
  {
    "text": "model that we want to extract from some",
    "start": "12599",
    "end": "16118"
  },
  {
    "text": "unstructured conversation now if we can",
    "start": "16119",
    "end": "18560"
  },
  {
    "text": "take an llm and bind that schema as a",
    "start": "18560",
    "end": "20880"
  },
  {
    "text": "tool so this is a technique for",
    "start": "20880",
    "end": "22720"
  },
  {
    "text": "extraction using tool calling and what's",
    "start": "22720",
    "end": "25160"
  },
  {
    "start": "24000",
    "end": "45000"
  },
  {
    "text": "nice is it can be used with any model",
    "start": "25160",
    "end": "26599"
  },
  {
    "text": "provider that supports tool calling and",
    "start": "26599",
    "end": "28199"
  },
  {
    "text": "let's test this out by passing in this",
    "start": "28199",
    "end": "29640"
  },
  {
    "text": "convers ation and ask the model to",
    "start": "29640",
    "end": "31599"
  },
  {
    "text": "extract the conversation into the schema",
    "start": "31599",
    "end": "34239"
  },
  {
    "text": "that we Define that finishes quickly we",
    "start": "34239",
    "end": "37320"
  },
  {
    "text": "can very simply extract the tool call",
    "start": "37320",
    "end": "39320"
  },
  {
    "text": "and test it to see if there's any",
    "start": "39320",
    "end": "40640"
  },
  {
    "text": "validation errors and we do see a",
    "start": "40640",
    "end": "42440"
  },
  {
    "text": "validation error here now the problem is",
    "start": "42440",
    "end": "44399"
  },
  {
    "text": "that complex nested schemas are often",
    "start": "44399",
    "end": "46760"
  },
  {
    "start": "45000",
    "end": "66000"
  },
  {
    "text": "difficult for models to extract directly",
    "start": "46760",
    "end": "49199"
  },
  {
    "text": "via tool calling so that's the",
    "start": "49199",
    "end": "51000"
  },
  {
    "text": "motivation for this Library called trust",
    "start": "51000",
    "end": "52600"
  },
  {
    "text": "call which was developed by Will here at",
    "start": "52600",
    "end": "54399"
  },
  {
    "text": "Lang chain so you basically can import",
    "start": "54399",
    "end": "56199"
  },
  {
    "text": "an extractor from trust call pass in an",
    "start": "56199",
    "end": "58160"
  },
  {
    "text": "LM just like we did before as well as",
    "start": "58160",
    "end": "59600"
  },
  {
    "text": "the same name tools and Tool choice to",
    "start": "59600",
    "end": "62000"
  },
  {
    "text": "enforce the tool call run it we can",
    "start": "62000",
    "end": "64320"
  },
  {
    "text": "rerun validation we can see validation",
    "start": "64320",
    "end": "65840"
  },
  {
    "text": "is now successful so I'll talk a little",
    "start": "65840",
    "end": "67360"
  },
  {
    "start": "66000",
    "end": "90000"
  },
  {
    "text": "bit about this Library why it works and",
    "start": "67360",
    "end": "69520"
  },
  {
    "text": "some of the clever things you can do",
    "start": "69520",
    "end": "70720"
  },
  {
    "text": "with it so producing structured output",
    "start": "70720",
    "end": "72680"
  },
  {
    "text": "is a very common and popular use case as",
    "start": "72680",
    "end": "74479"
  },
  {
    "text": "mentioned but it has at least two",
    "start": "74479",
    "end": "76360"
  },
  {
    "text": "problems populating complex or nested",
    "start": "76360",
    "end": "78320"
  },
  {
    "text": "schemas as we just showed but also",
    "start": "78320",
    "end": "80960"
  },
  {
    "text": "updating existing schemas without",
    "start": "80960",
    "end": "82400"
  },
  {
    "text": "information loss turns out to be quite a",
    "start": "82400",
    "end": "84000"
  },
  {
    "text": "challenge so you think about three",
    "start": "84000",
    "end": "85520"
  },
  {
    "text": "separate problems that you want to solve",
    "start": "85520",
    "end": "87240"
  },
  {
    "text": "with respect to structured outputs one",
    "start": "87240",
    "end": "88720"
  },
  {
    "text": "is schema Generations so going from",
    "start": "88720",
    "end": "90360"
  },
  {
    "start": "90000",
    "end": "128000"
  },
  {
    "text": "unstructured text to a structured schema",
    "start": "90360",
    "end": "92439"
  },
  {
    "text": "another is schema updating so having",
    "start": "92439",
    "end": "94200"
  },
  {
    "text": "existing schema adding information via",
    "start": "94200",
    "end": "96399"
  },
  {
    "text": "unstructured text and updating it and",
    "start": "96399",
    "end": "98759"
  },
  {
    "text": "the third is a combination of the two so",
    "start": "98759",
    "end": "100479"
  },
  {
    "text": "generation and updating so imagine we",
    "start": "100479",
    "end": "102280"
  },
  {
    "text": "have an existing schema unstructured",
    "start": "102280",
    "end": "104040"
  },
  {
    "text": "text we can update that schema and also",
    "start": "104040",
    "end": "106439"
  },
  {
    "text": "generate a new one now part of the",
    "start": "106439",
    "end": "108280"
  },
  {
    "text": "motivation for this and where we've seen",
    "start": "108280",
    "end": "110079"
  },
  {
    "text": "this play out quite a bit is in memory",
    "start": "110079",
    "end": "112719"
  },
  {
    "text": "so if you use open AI for example you",
    "start": "112719",
    "end": "114520"
  },
  {
    "text": "notice that it'll save memories",
    "start": "114520",
    "end": "116200"
  },
  {
    "text": "sometimes it'll update existing memories",
    "start": "116200",
    "end": "117680"
  },
  {
    "text": "some sometimes it'll create new memories",
    "start": "117680",
    "end": "119680"
  },
  {
    "text": "and that's exactly this third scenario",
    "start": "119680",
    "end": "121439"
  },
  {
    "text": "we're talking about here the ability to",
    "start": "121439",
    "end": "123479"
  },
  {
    "text": "have a collection of things could be",
    "start": "123479",
    "end": "125399"
  },
  {
    "text": "memories and given new information make",
    "start": "125399",
    "end": "128520"
  },
  {
    "start": "128000",
    "end": "150000"
  },
  {
    "text": "targeted updates to existing items as",
    "start": "128520",
    "end": "130399"
  },
  {
    "text": "well as create new ones if appropriate",
    "start": "130399",
    "end": "132959"
  },
  {
    "text": "but in the context of maintaining",
    "start": "132959",
    "end": "135640"
  },
  {
    "text": "memories it's also the case that we",
    "start": "135640",
    "end": "137680"
  },
  {
    "text": "often want to just simply update schemas",
    "start": "137680",
    "end": "139760"
  },
  {
    "text": "and occasionally we want to generate",
    "start": "139760",
    "end": "141080"
  },
  {
    "text": "entirely new schema in isolation so all",
    "start": "141080",
    "end": "143560"
  },
  {
    "text": "three of these scenarios are fairly",
    "start": "143560",
    "end": "145599"
  },
  {
    "text": "common when working with llms so the",
    "start": "145599",
    "end": "147480"
  },
  {
    "text": "central intuition behind this trust call",
    "start": "147480",
    "end": "149239"
  },
  {
    "text": "library is of a Json patch so that's",
    "start": "149239",
    "end": "151480"
  },
  {
    "start": "150000",
    "end": "213000"
  },
  {
    "text": "just a very simple way to update add and",
    "start": "151480",
    "end": "153360"
  },
  {
    "text": "delete items within a Json structure but",
    "start": "153360",
    "end": "155879"
  },
  {
    "text": "importantly without replacing the entire",
    "start": "155879",
    "end": "157959"
  },
  {
    "text": "document that makes it cheaper also",
    "start": "157959",
    "end": "160080"
  },
  {
    "text": "makes it less likely to have undesired",
    "start": "160080",
    "end": "163200"
  },
  {
    "text": "deletions now let's see how this works",
    "start": "163200",
    "end": "165680"
  },
  {
    "text": "in a few specific instances by walking",
    "start": "165680",
    "end": "167519"
  },
  {
    "text": "through the code and looking at traces",
    "start": "167519",
    "end": "169599"
  },
  {
    "text": "we previously looked at this first",
    "start": "169599",
    "end": "170800"
  },
  {
    "text": "example of schema generation we showed",
    "start": "170800",
    "end": "173319"
  },
  {
    "text": "that raw tool calling failed validation",
    "start": "173319",
    "end": "175400"
  },
  {
    "text": "we showed that trust call was able to",
    "start": "175400",
    "end": "178040"
  },
  {
    "text": "successfully generate this scheme",
    "start": "178040",
    "end": "180720"
  },
  {
    "text": "but I want to show it happened a little",
    "start": "180720",
    "end": "181800"
  },
  {
    "text": "bit under the hood so right now I'm",
    "start": "181800",
    "end": "183440"
  },
  {
    "text": "looking at the trace for trust call",
    "start": "183440",
    "end": "185239"
  },
  {
    "text": "which we ran now you can see initially",
    "start": "185239",
    "end": "187640"
  },
  {
    "text": "we only have our schema bound this is",
    "start": "187640",
    "end": "190000"
  },
  {
    "text": "the bound tool it's called as we expect",
    "start": "190000",
    "end": "192360"
  },
  {
    "text": "here is the input conversation here is",
    "start": "192360",
    "end": "194080"
  },
  {
    "text": "the attempted extraction into the schema",
    "start": "194080",
    "end": "197400"
  },
  {
    "text": "now what's neat about trust call is",
    "start": "197400",
    "end": "199040"
  },
  {
    "text": "it'll internally attempt a validation of",
    "start": "199040",
    "end": "201120"
  },
  {
    "text": "our schema so you can see this",
    "start": "201120",
    "end": "203239"
  },
  {
    "text": "validation is attempted and there are",
    "start": "203239",
    "end": "205159"
  },
  {
    "text": "some errors we can look at the full",
    "start": "205159",
    "end": "207000"
  },
  {
    "text": "Trace here and this is where the magic",
    "start": "207000",
    "end": "209439"
  },
  {
    "text": "comes in so trust CLA and built-in tools",
    "start": "209439",
    "end": "211879"
  },
  {
    "text": "that allow for Json patching you can see",
    "start": "211879",
    "end": "213720"
  },
  {
    "start": "213000",
    "end": "245000"
  },
  {
    "text": "right here this patch function errors is",
    "start": "213720",
    "end": "215720"
  },
  {
    "text": "called respond with all Json patch",
    "start": "215720",
    "end": "217920"
  },
  {
    "text": "operations required to update previous",
    "start": "217920",
    "end": "219519"
  },
  {
    "text": "invalid function call so you can see",
    "start": "219519",
    "end": "221640"
  },
  {
    "text": "exactly what's happening right here so",
    "start": "221640",
    "end": "223200"
  },
  {
    "text": "basically it's looking at that trace and",
    "start": "223200",
    "end": "225400"
  },
  {
    "text": "attempting to produce a Json patch to",
    "start": "225400",
    "end": "227159"
  },
  {
    "text": "resolve it so very intuitive attempt a",
    "start": "227159",
    "end": "229599"
  },
  {
    "text": "validation and then perform Json",
    "start": "229599",
    "end": "231480"
  },
  {
    "text": "patching to fix the validation errors so",
    "start": "231480",
    "end": "234040"
  },
  {
    "text": "performs the update and then performs",
    "start": "234040",
    "end": "236159"
  },
  {
    "text": "additional validation validations pass",
    "start": "236159",
    "end": "238200"
  },
  {
    "text": "and we finish well that's why",
    "start": "238200",
    "end": "240239"
  },
  {
    "text": "with the raw tool call we saw validation",
    "start": "240239",
    "end": "242079"
  },
  {
    "text": "fa as shown here with trust call we very",
    "start": "242079",
    "end": "244760"
  },
  {
    "text": "simply wrap a few useful things into",
    "start": "244760",
    "end": "247400"
  },
  {
    "start": "245000",
    "end": "345000"
  },
  {
    "text": "this extractor initially we attempt to",
    "start": "247400",
    "end": "249439"
  },
  {
    "text": "perform the extraction with our schema",
    "start": "249439",
    "end": "250920"
  },
  {
    "text": "but we check for validation errors just",
    "start": "250920",
    "end": "252519"
  },
  {
    "text": "like we do here we then look at the",
    "start": "252519",
    "end": "254599"
  },
  {
    "text": "validation errors and use that to",
    "start": "254599",
    "end": "255799"
  },
  {
    "text": "perform Json patching to fix them that",
    "start": "255799",
    "end": "257720"
  },
  {
    "text": "process occurs iteratively within trust",
    "start": "257720",
    "end": "259600"
  },
  {
    "text": "call and we get a successful output so",
    "start": "259600",
    "end": "262600"
  },
  {
    "text": "let's talk about updating schemas here's",
    "start": "262600",
    "end": "264440"
  },
  {
    "text": "an initial schema for a user profile and",
    "start": "264440",
    "end": "266880"
  },
  {
    "text": "here is our initial user named Alex with",
    "start": "266880",
    "end": "269720"
  },
  {
    "text": "some favorite shows movies books and a",
    "start": "269720",
    "end": "272320"
  },
  {
    "text": "bunch of hobbies and so forth there's",
    "start": "272320",
    "end": "273759"
  },
  {
    "text": "our schema we want to update the schema",
    "start": "273759",
    "end": "275400"
  },
  {
    "text": "with information from a conversation",
    "start": "275400",
    "end": "277000"
  },
  {
    "text": "between Alex and a friend so here's our",
    "start": "277000",
    "end": "278840"
  },
  {
    "text": "conversation and the naive approach of",
    "start": "278840",
    "end": "281160"
  },
  {
    "text": "course is just tool calling so we're",
    "start": "281160",
    "end": "282400"
  },
  {
    "text": "going to go ahead and bind our schema to",
    "start": "282400",
    "end": "284560"
  },
  {
    "text": "an llm and we'll pass in that initial",
    "start": "284560",
    "end": "286440"
  },
  {
    "text": "schema as user info pass in the",
    "start": "286440",
    "end": "288600"
  },
  {
    "text": "conversation and just say update the",
    "start": "288600",
    "end": "290880"
  },
  {
    "text": "schema based on the conversation using",
    "start": "290880",
    "end": "292880"
  },
  {
    "text": "tool calling that's it so here's the",
    "start": "292880",
    "end": "295160"
  },
  {
    "text": "result now we can very simply compare",
    "start": "295160",
    "end": "297280"
  },
  {
    "text": "those two just pass them into our chat",
    "start": "297280",
    "end": "300000"
  },
  {
    "text": "here let CLA analyze them you'll see",
    "start": "300000",
    "end": "301919"
  },
  {
    "text": "something kind of interesting the show",
    "start": "301919",
    "end": "303199"
  },
  {
    "text": "Mandalorian was included in our",
    "start": "303199",
    "end": "305039"
  },
  {
    "text": "conversation but it was not actually",
    "start": "305039",
    "end": "307000"
  },
  {
    "text": "updated in the schema we can confirm",
    "start": "307000",
    "end": "310160"
  },
  {
    "text": "that quickly by looking at the schema",
    "start": "310160",
    "end": "312440"
  },
  {
    "text": "and look at shows and again we don't see",
    "start": "312440",
    "end": "314960"
  },
  {
    "text": "the Mandalorian added we can look at the",
    "start": "314960",
    "end": "317080"
  },
  {
    "text": "trace here and just dig into a little",
    "start": "317080",
    "end": "318680"
  },
  {
    "text": "bit more what's happening so again we're",
    "start": "318680",
    "end": "320319"
  },
  {
    "text": "just basically calling this user tool",
    "start": "320319",
    "end": "322639"
  },
  {
    "text": "with this big prompt which has the",
    "start": "322639",
    "end": "324680"
  },
  {
    "text": "existing schema as well as the",
    "start": "324680",
    "end": "326319"
  },
  {
    "text": "conversation and we'll let the model",
    "start": "326319",
    "end": "327960"
  },
  {
    "text": "attempt to one shot generate",
    "start": "327960",
    "end": "330479"
  },
  {
    "text": "this new schema and as mentioned",
    "start": "330479",
    "end": "332720"
  },
  {
    "text": "sometimes things can be missed like for",
    "start": "332720",
    "end": "334160"
  },
  {
    "text": "example we missed the show the",
    "start": "334160",
    "end": "336120"
  },
  {
    "text": "Mandalorian mentioned here I'm into this",
    "start": "336120",
    "end": "338160"
  },
  {
    "text": "new series but it is not reflected",
    "start": "338160",
    "end": "340840"
  },
  {
    "text": "anywhere else in the update now let's",
    "start": "340840",
    "end": "343440"
  },
  {
    "text": "try trust call again we're creating",
    "start": "343440",
    "end": "345199"
  },
  {
    "start": "345000",
    "end": "379000"
  },
  {
    "text": "extractors like before pass in our tool",
    "start": "345199",
    "end": "347880"
  },
  {
    "text": "and Trustco allows for passing messages",
    "start": "347880",
    "end": "350039"
  },
  {
    "text": "just like we saw before but also we can",
    "start": "350039",
    "end": "351639"
  },
  {
    "text": "explicitly pass the existing schema with",
    "start": "351639",
    "end": "353280"
  },
  {
    "text": "this existing keyword right here in that",
    "start": "353280",
    "end": "355400"
  },
  {
    "text": "case we just pass in the user schema we",
    "start": "355400",
    "end": "357560"
  },
  {
    "text": "can run that we can very quickly look at",
    "start": "357560",
    "end": "360120"
  },
  {
    "text": "shows and there we see the Mandalorian",
    "start": "360120",
    "end": "362360"
  },
  {
    "text": "which is the show that was missing",
    "start": "362360",
    "end": "363720"
  },
  {
    "text": "previously and again we can do an",
    "start": "363720",
    "end": "365639"
  },
  {
    "text": "analysis of this we can see that we",
    "start": "365639",
    "end": "367120"
  },
  {
    "text": "indeed remove stranger things just as",
    "start": "367120",
    "end": "369240"
  },
  {
    "text": "expected and we added the Mandalorian",
    "start": "369240",
    "end": "371080"
  },
  {
    "text": "because in conversation Alex mentions",
    "start": "371080",
    "end": "373400"
  },
  {
    "text": "lots of interest in stranger things and",
    "start": "373400",
    "end": "375240"
  },
  {
    "text": "really enjoys the Mandalorian so it's",
    "start": "375240",
    "end": "377720"
  },
  {
    "text": "kind of cool we can see here's the trust",
    "start": "377720",
    "end": "379520"
  },
  {
    "start": "379000",
    "end": "427000"
  },
  {
    "text": "call Trace we can look what happens it",
    "start": "379520",
    "end": "382039"
  },
  {
    "text": "actually calls this patch do tool now",
    "start": "382039",
    "end": "384280"
  },
  {
    "text": "before we were actually calling the user",
    "start": "384280",
    "end": "385919"
  },
  {
    "text": "schema tool and trying to update the",
    "start": "385919",
    "end": "387400"
  },
  {
    "text": "schema in one shot with Pat talk we're",
    "start": "387400",
    "end": "390240"
  },
  {
    "text": "actually selectively applying patches to",
    "start": "390240",
    "end": "392360"
  },
  {
    "text": "the existing schema to update new",
    "start": "392360",
    "end": "394400"
  },
  {
    "text": "information so you can see here's our",
    "start": "394400",
    "end": "396400"
  },
  {
    "text": "conversation past explicitly and here is",
    "start": "396400",
    "end": "399319"
  },
  {
    "text": "the prompt that trust call uses to",
    "start": "399319",
    "end": "402000"
  },
  {
    "text": "generate patches generate Json patches",
    "start": "402000",
    "end": "403639"
  },
  {
    "text": "to update existing schema and what's",
    "start": "403639",
    "end": "405240"
  },
  {
    "text": "pretty neat is it generates these",
    "start": "405240",
    "end": "406800"
  },
  {
    "text": "patches to update very specific things",
    "start": "406800",
    "end": "409240"
  },
  {
    "text": "in the schema like remove certain",
    "start": "409240",
    "end": "410639"
  },
  {
    "text": "Hobbies replace pets look at this that",
    "start": "410639",
    "end": "413120"
  },
  {
    "text": "is our update on the show Mandalorian",
    "start": "413120",
    "end": "415639"
  },
  {
    "text": "very cool and so forth so that's really",
    "start": "415639",
    "end": "418840"
  },
  {
    "text": "the difference it's pretty intuitive",
    "start": "418840",
    "end": "420240"
  },
  {
    "text": "what's happening is instead of trying to",
    "start": "420240",
    "end": "421919"
  },
  {
    "text": "one shot regenerate the entire schema",
    "start": "421919",
    "end": "424160"
  },
  {
    "text": "based on the conversation we actually",
    "start": "424160",
    "end": "426120"
  },
  {
    "text": "use this patching tool to selectively",
    "start": "426120",
    "end": "428319"
  },
  {
    "start": "427000",
    "end": "478000"
  },
  {
    "text": "update very specific parts of the schema",
    "start": "428319",
    "end": "430440"
  },
  {
    "text": "that need to be changed now what's also",
    "start": "430440",
    "end": "432479"
  },
  {
    "text": "kind of neat is these two ideas can be",
    "start": "432479",
    "end": "434000"
  },
  {
    "text": "combined together so both generation and",
    "start": "434000",
    "end": "436280"
  },
  {
    "text": "updating so here's an example of a",
    "start": "436280",
    "end": "438240"
  },
  {
    "text": "schema person where we actually have a",
    "start": "438240",
    "end": "440840"
  },
  {
    "text": "list so here's a list of people that",
    "start": "440840",
    "end": "443319"
  },
  {
    "text": "were tracking here's a conversation now",
    "start": "443319",
    "end": "446120"
  },
  {
    "text": "the only difference is we create our",
    "start": "446120",
    "end": "447599"
  },
  {
    "text": "extractor but we allow for for this",
    "start": "447599",
    "end": "449879"
  },
  {
    "text": "enable insert true and just like before",
    "start": "449879",
    "end": "452440"
  },
  {
    "text": "we pass in our existing data this is our",
    "start": "452440",
    "end": "454520"
  },
  {
    "text": "existing schema and the conversation and",
    "start": "454520",
    "end": "458160"
  },
  {
    "text": "what's pretty neat is previously we had",
    "start": "458160",
    "end": "459840"
  },
  {
    "text": "three people Emma Michael and Sarah and",
    "start": "459840",
    "end": "463160"
  },
  {
    "text": "now based on conversation we add a new",
    "start": "463160",
    "end": "464840"
  },
  {
    "text": "profile Livia with some information so",
    "start": "464840",
    "end": "467240"
  },
  {
    "text": "we've basically created a new entry in",
    "start": "467240",
    "end": "469280"
  },
  {
    "text": "our collection of schemas and we've also",
    "start": "469280",
    "end": "471520"
  },
  {
    "text": "updated the existing ones and we can",
    "start": "471520",
    "end": "473520"
  },
  {
    "text": "walk through all the various updates to",
    "start": "473520",
    "end": "475120"
  },
  {
    "text": "each one we can see a number of things",
    "start": "475120",
    "end": "476560"
  },
  {
    "text": "have been unchanged as expected added a",
    "start": "476560",
    "end": "478400"
  },
  {
    "start": "478000",
    "end": "503000"
  },
  {
    "text": "few new points",
    "start": "478400",
    "end": "480039"
  },
  {
    "text": "and importantly we added a new profile",
    "start": "480039",
    "end": "481919"
  },
  {
    "text": "for Olivia now if we roll back through",
    "start": "481919",
    "end": "483560"
  },
  {
    "text": "all I had to do for this particular case",
    "start": "483560",
    "end": "485080"
  },
  {
    "text": "is just enable inserts that allows us to",
    "start": "485080",
    "end": "487319"
  },
  {
    "text": "create a trust call extractor where we",
    "start": "487319",
    "end": "488879"
  },
  {
    "text": "can actually add new elements to our",
    "start": "488879",
    "end": "492000"
  },
  {
    "text": "existing schema as well as update",
    "start": "492000",
    "end": "493840"
  },
  {
    "text": "existing entries alternative like we saw",
    "start": "493840",
    "end": "496759"
  },
  {
    "text": "before with the user profile we don't",
    "start": "496759",
    "end": "498479"
  },
  {
    "text": "pass that enable inserts in that case we",
    "start": "498479",
    "end": "501080"
  },
  {
    "text": "just update the provided existing schema",
    "start": "501080",
    "end": "504440"
  },
  {
    "start": "503000",
    "end": "531000"
  },
  {
    "text": "in place based on any new information",
    "start": "504440",
    "end": "507159"
  },
  {
    "text": "and in the first example we again create",
    "start": "507159",
    "end": "508639"
  },
  {
    "text": "a trust call extract just like the other",
    "start": "508639",
    "end": "510240"
  },
  {
    "text": "cases but we didn't provide any existing",
    "start": "510240",
    "end": "512880"
  },
  {
    "text": "schema in this case it will generate us",
    "start": "512880",
    "end": "514800"
  },
  {
    "text": "a schema from scratch so we just covered",
    "start": "514800",
    "end": "517240"
  },
  {
    "text": "really the three main use cases for",
    "start": "517240",
    "end": "519518"
  },
  {
    "text": "trust call which is quite useful so",
    "start": "519519",
    "end": "521560"
  },
  {
    "text": "schema generation particularly for cases",
    "start": "521560",
    "end": "523560"
  },
  {
    "text": "of complex schemas using built-in",
    "start": "523560",
    "end": "526000"
  },
  {
    "text": "validation and patching scheme updating",
    "start": "526000",
    "end": "528720"
  },
  {
    "text": "again using patching as well as",
    "start": "528720",
    "end": "530760"
  },
  {
    "text": "validation and combining the two",
    "start": "530760",
    "end": "532600"
  },
  {
    "start": "531000",
    "end": "562000"
  },
  {
    "text": "together as we saw in that third case so",
    "start": "532600",
    "end": "535240"
  },
  {
    "text": "we found this to be very useful",
    "start": "535240",
    "end": "536440"
  },
  {
    "text": "particularly for things like memory",
    "start": "536440",
    "end": "537959"
  },
  {
    "text": "where you want to maintain both things",
    "start": "537959",
    "end": "539279"
  },
  {
    "text": "like like a fixed user profile as well",
    "start": "539279",
    "end": "541120"
  },
  {
    "text": "as a collection of memories you can both",
    "start": "541120",
    "end": "543240"
  },
  {
    "text": "update in place and add to over time so",
    "start": "543240",
    "end": "546079"
  },
  {
    "text": "trust call is a very useful library and",
    "start": "546079",
    "end": "548680"
  },
  {
    "text": "it's actually been pretty popular lately",
    "start": "548680",
    "end": "550320"
  },
  {
    "text": "so we wanted to talk about a little bit",
    "start": "550320",
    "end": "552519"
  },
  {
    "text": "more depth and encourage you to try it",
    "start": "552519",
    "end": "555839"
  },
  {
    "text": "out if you're working at all on",
    "start": "555839",
    "end": "557959"
  },
  {
    "text": "structured outputs so feel free to leave",
    "start": "557959",
    "end": "560040"
  },
  {
    "text": "any questions below thanks",
    "start": "560040",
    "end": "563480"
  }
]