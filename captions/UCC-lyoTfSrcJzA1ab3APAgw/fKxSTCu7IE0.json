[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hi this is Katherine from Lang one of",
    "start": "480",
    "end": "3360"
  },
  {
    "text": "the most common use cases we see with",
    "start": "3360",
    "end": "5200"
  },
  {
    "text": "LMS is code generation but here's the",
    "start": "5200",
    "end": "8400"
  },
  {
    "text": "question how do you improve the accuracy",
    "start": "8400",
    "end": "10800"
  },
  {
    "text": "and performance of the code generated by",
    "start": "10800",
    "end": "12960"
  },
  {
    "text": "your code agent one answer is static",
    "start": "12960",
    "end": "15839"
  },
  {
    "text": "analysis checking the code for errors or",
    "start": "15839",
    "end": "18320"
  },
  {
    "text": "for inconsistencies without executing it",
    "start": "18320",
    "end": "21199"
  },
  {
    "text": "this is where tools like Pyate or My Pi",
    "start": "21199",
    "end": "23439"
  },
  {
    "text": "comes in so now you could actually build",
    "start": "23439",
    "end": "25840"
  },
  {
    "text": "that kind of check into your agent loop",
    "start": "25840",
    "end": "28560"
  },
  {
    "text": "this is what we call a reflection step a",
    "start": "28560",
    "end": "31039"
  },
  {
    "text": "point in the loop where the agent looks",
    "start": "31039",
    "end": "33040"
  },
  {
    "text": "back at what it just generated and",
    "start": "33040",
    "end": "35280"
  },
  {
    "text": "validates or improves it before",
    "start": "35280",
    "end": "37239"
  },
  {
    "text": "continuing we'll show you an example of",
    "start": "37239",
    "end": "39520"
  },
  {
    "text": "how you can create such a reflection",
    "start": "39520",
    "end": "41200"
  },
  {
    "text": "step in your architecture evaluating its",
    "start": "41200",
    "end": "43760"
  },
  {
    "text": "own output before returning a result",
    "start": "43760",
    "end": "46160"
  },
  {
    "text": "instead of building evaluation logic",
    "start": "46160",
    "end": "47920"
  },
  {
    "text": "from scratch we'll show you how you can",
    "start": "47920",
    "end": "50000"
  },
  {
    "text": "leverage open evals an open- source",
    "start": "50000",
    "end": "52320"
  },
  {
    "text": "package that provides you with out-",
    "start": "52320",
    "end": "53920"
  },
  {
    "text": "of-the-box tools for things like type",
    "start": "53920",
    "end": "56160"
  },
  {
    "text": "checking and sandbox",
    "start": "56160",
    "end": "58359"
  },
  {
    "text": "evaluation open evals includes a number",
    "start": "58359",
    "end": "60960"
  },
  {
    "start": "60000",
    "end": "212000"
  },
  {
    "text": "of helpful out ofthe-box evaluators this",
    "start": "60960",
    "end": "63600"
  },
  {
    "text": "includes ones form as a judge rack and",
    "start": "63600",
    "end": "68080"
  },
  {
    "text": "code",
    "start": "68080",
    "end": "68840"
  },
  {
    "text": "evaluation today we're going to focus",
    "start": "68840",
    "end": "71200"
  },
  {
    "text": "specifically on the code evaluator",
    "start": "71200",
    "end": "73479"
  },
  {
    "text": "section open evals gives you several",
    "start": "73479",
    "end": "76159"
  },
  {
    "text": "pre-built evaluators for generated code",
    "start": "76159",
    "end": "78799"
  },
  {
    "text": "such as type-checking generated code",
    "start": "78799",
    "end": "81920"
  },
  {
    "text": "sandbox type checking and execution",
    "start": "81920",
    "end": "84200"
  },
  {
    "text": "evaluators and finally using Elm as a",
    "start": "84200",
    "end": "87119"
  },
  {
    "text": "judge to evaluate code",
    "start": "87119",
    "end": "89159"
  },
  {
    "text": "quality since LM outputs often contain",
    "start": "89159",
    "end": "92159"
  },
  {
    "text": "both code and non-code text open",
    "start": "92159",
    "end": "95640"
  },
  {
    "text": "evaluators also include flexible code",
    "start": "95640",
    "end": "98240"
  },
  {
    "text": "extraction utilities you can either use",
    "start": "98240",
    "end": "101119"
  },
  {
    "text": "an LLM to extract relevant snippets or",
    "start": "101119",
    "end": "104240"
  },
  {
    "text": "simply extract markdown code blocks",
    "start": "104240",
    "end": "106439"
  },
  {
    "text": "directly now let's deep dive into the",
    "start": "106439",
    "end": "108720"
  },
  {
    "text": "several techniques that we can take to",
    "start": "108720",
    "end": "110399"
  },
  {
    "text": "validate code first you can type check",
    "start": "110399",
    "end": "113119"
  },
  {
    "text": "generated code with Pyite and my PI",
    "start": "113119",
    "end": "115759"
  },
  {
    "text": "these are lightweight approaches to type",
    "start": "115759",
    "end": "117600"
  },
  {
    "text": "check Python code but they won't install",
    "start": "117600",
    "end": "120079"
  },
  {
    "text": "or check for missing dependencies for",
    "start": "120079",
    "end": "122560"
  },
  {
    "text": "TypeScript there's a similar evaluator",
    "start": "122560",
    "end": "124560"
  },
  {
    "text": "for type checking second you can use LM",
    "start": "124560",
    "end": "127920"
  },
  {
    "text": "as a judge to prompt LM to provide",
    "start": "127920",
    "end": "129920"
  },
  {
    "text": "feedback on your code lm as a judge",
    "start": "129920",
    "end": "132319"
  },
  {
    "text": "evaluator here defaults to no code",
    "start": "132319",
    "end": "134640"
  },
  {
    "text": "extraction strategy but it gives the",
    "start": "134640",
    "end": "136800"
  },
  {
    "text": "option to enable extracting code which",
    "start": "136800",
    "end": "139120"
  },
  {
    "text": "could be helpful to reduce noise or",
    "start": "139120",
    "end": "141200"
  },
  {
    "text": "distraction especially when using",
    "start": "141200",
    "end": "142800"
  },
  {
    "text": "smaller models finally open evals",
    "start": "142800",
    "end": "146400"
  },
  {
    "text": "integrates with E2B to run some code",
    "start": "146400",
    "end": "148640"
  },
  {
    "text": "evaluators in isolated sandboxes",
    "start": "148640",
    "end": "151680"
  },
  {
    "text": "static analysis is a useful tool for",
    "start": "151680",
    "end": "154160"
  },
  {
    "text": "caching mistakes in generated code open",
    "start": "154160",
    "end": "156720"
  },
  {
    "text": "evals lets you perform this fully",
    "start": "156720",
    "end": "158480"
  },
  {
    "text": "locally sometimes generated code can",
    "start": "158480",
    "end": "161040"
  },
  {
    "text": "contain and misuse third party libraries",
    "start": "161040",
    "end": "163840"
  },
  {
    "text": "so rather than installing or executing",
    "start": "163840",
    "end": "166000"
  },
  {
    "text": "these arbitrary dependencies locally you",
    "start": "166000",
    "end": "168319"
  },
  {
    "text": "can use the sandbox environment to",
    "start": "168319",
    "end": "170080"
  },
  {
    "text": "effectively perform type checking there",
    "start": "170080",
    "end": "172160"
  },
  {
    "text": "are two key sandbox evaluators first is",
    "start": "172160",
    "end": "174879"
  },
  {
    "text": "the sandbox typeing evaluators one",
    "start": "174879",
    "end": "177360"
  },
  {
    "text": "example is the sandbox pyate this",
    "start": "177360",
    "end": "179599"
  },
  {
    "text": "evaluator parses out the required",
    "start": "179599",
    "end": "181800"
  },
  {
    "text": "dependencies installs them in a sandbox",
    "start": "181800",
    "end": "184400"
  },
  {
    "text": "and runs pyate it returns any",
    "start": "184400",
    "end": "186640"
  },
  {
    "text": "type-checking errors found for",
    "start": "186640",
    "end": "188959"
  },
  {
    "text": "TypeScript similarly there's a",
    "start": "188959",
    "end": "191120"
  },
  {
    "text": "type-checking sandbox",
    "start": "191120",
    "end": "192760"
  },
  {
    "text": "evaluator the second type of sandbox",
    "start": "192760",
    "end": "195200"
  },
  {
    "text": "evaluator is the sandbox execution",
    "start": "195200",
    "end": "198120"
  },
  {
    "text": "evaluator this evaluator goes a step",
    "start": "198120",
    "end": "200560"
  },
  {
    "text": "beyond installing dependencies actually",
    "start": "200560",
    "end": "203440"
  },
  {
    "text": "running the code inside the sandbox and",
    "start": "203440",
    "end": "205360"
  },
  {
    "text": "checking for runtime errors now let's",
    "start": "205360",
    "end": "207760"
  },
  {
    "text": "take a look at the example we saw",
    "start": "207760",
    "end": "209440"
  },
  {
    "text": "earlier to see how it's applied in",
    "start": "209440",
    "end": "211280"
  },
  {
    "text": "action now back to the example we saw in",
    "start": "211280",
    "end": "213840"
  },
  {
    "start": "212000",
    "end": "442000"
  },
  {
    "text": "the beginning the base agent has a",
    "start": "213840",
    "end": "216400"
  },
  {
    "text": "simple React architecture implementation",
    "start": "216400",
    "end": "219200"
  },
  {
    "text": "where it works off of a text file",
    "start": "219200",
    "end": "220959"
  },
  {
    "text": "embedded in the system prompt and it has",
    "start": "220959",
    "end": "223360"
  },
  {
    "text": "tools to fetch further",
    "start": "223360",
    "end": "225080"
  },
  {
    "text": "information to improve the correctness",
    "start": "225080",
    "end": "227360"
  },
  {
    "text": "of generated code mini chat link chain",
    "start": "227360",
    "end": "229920"
  },
  {
    "text": "includes a reflection set which verifies",
    "start": "229920",
    "end": "232080"
  },
  {
    "text": "the generated code through the sandbox",
    "start": "232080",
    "end": "234080"
  },
  {
    "text": "typeing evaluator in the loop let's take",
    "start": "234080",
    "end": "236799"
  },
  {
    "text": "a look at how it's",
    "start": "236799",
    "end": "239080"
  },
  {
    "text": "constructed so this is our reflection",
    "start": "239080",
    "end": "241519"
  },
  {
    "text": "node in our reflection step we first",
    "start": "241519",
    "end": "244319"
  },
  {
    "text": "create a sandbox pyite co-evaluator",
    "start": "244319",
    "end": "247040"
  },
  {
    "text": "where the evaluator extracts generated",
    "start": "247040",
    "end": "249280"
  },
  {
    "text": "code from the agent's output through",
    "start": "249280",
    "end": "250959"
  },
  {
    "text": "markdown and pushes it up to an E2B",
    "start": "250959",
    "end": "253439"
  },
  {
    "text": "sandbox to run Pyrite over it we",
    "start": "253439",
    "end": "256320"
  },
  {
    "text": "obtained a result from running the",
    "start": "256320",
    "end": "257919"
  },
  {
    "text": "evaluator and now there are two",
    "start": "257919",
    "end": "259919"
  },
  {
    "text": "situations where we will want to",
    "start": "259919",
    "end": "261680"
  },
  {
    "text": "directly output the response to the end",
    "start": "261680",
    "end": "263840"
  },
  {
    "text": "user the first scenario is if the code",
    "start": "263840",
    "end": "266960"
  },
  {
    "text": "generated does not have any",
    "start": "266960",
    "end": "268479"
  },
  {
    "text": "type-checking issues that is within the",
    "start": "268479",
    "end": "271120"
  },
  {
    "text": "result score field it outputs true so it",
    "start": "271120",
    "end": "273919"
  },
  {
    "text": "wouldn't need any code regeneration the",
    "start": "273919",
    "end": "276639"
  },
  {
    "text": "second scenario is if the original agent",
    "start": "276639",
    "end": "278880"
  },
  {
    "text": "response did not include any code at all",
    "start": "278880",
    "end": "281440"
  },
  {
    "text": "we can check for this by checking the",
    "start": "281440",
    "end": "283040"
  },
  {
    "text": "result metadata to see if code",
    "start": "283040",
    "end": "284720"
  },
  {
    "text": "extraction step in the evaluator field",
    "start": "284720",
    "end": "287360"
  },
  {
    "text": "in this case we also want to directly",
    "start": "287360",
    "end": "289680"
  },
  {
    "text": "output our agents response",
    "start": "289680",
    "end": "292400"
  },
  {
    "text": "so now transitioning that logic into",
    "start": "292400",
    "end": "294479"
  },
  {
    "text": "code in the case that our agent's",
    "start": "294479",
    "end": "296479"
  },
  {
    "text": "response contains code and finds false",
    "start": "296479",
    "end": "299280"
  },
  {
    "text": "evaluator results we want to feed the",
    "start": "299280",
    "end": "302000"
  },
  {
    "text": "error message back to the agent to",
    "start": "302000",
    "end": "304080"
  },
  {
    "text": "regenerate code we do so by attaching a",
    "start": "304080",
    "end": "307120"
  },
  {
    "text": "user message to the LM giving context on",
    "start": "307120",
    "end": "310000"
  },
  {
    "text": "the errors found and directions to",
    "start": "310000",
    "end": "312000"
  },
  {
    "text": "regenerate code with this information in",
    "start": "312000",
    "end": "314320"
  },
  {
    "text": "the prompt the agent then has to inform",
    "start": "314320",
    "end": "316720"
  },
  {
    "text": "context to regenerate and modify based",
    "start": "316720",
    "end": "319039"
  },
  {
    "text": "on the error",
    "start": "319039",
    "end": "320800"
  },
  {
    "text": "let's try this",
    "start": "320800",
    "end": "322919"
  },
  {
    "text": "out i can feed an example input to our",
    "start": "322919",
    "end": "325919"
  },
  {
    "text": "agent asking to create a swarm style",
    "start": "325919",
    "end": "329720"
  },
  {
    "text": "agent the query is routed to our agent",
    "start": "329720",
    "end": "332479"
  },
  {
    "text": "node which generates its respond while",
    "start": "332479",
    "end": "335360"
  },
  {
    "text": "calling a set of tools once the response",
    "start": "335360",
    "end": "338000"
  },
  {
    "text": "is finished generating this is passed to",
    "start": "338000",
    "end": "340160"
  },
  {
    "text": "a reflection node to create the results",
    "start": "340160",
    "end": "344080"
  },
  {
    "text": "looks like the reflection node has",
    "start": "344080",
    "end": "345680"
  },
  {
    "text": "caught some errors which is now",
    "start": "345680",
    "end": "347600"
  },
  {
    "text": "prompting the agent to regenerate the",
    "start": "347600",
    "end": "350039"
  },
  {
    "text": "code now our agent regenerates the",
    "start": "350039",
    "end": "352639"
  },
  {
    "text": "response which now passes the evaluator",
    "start": "352639",
    "end": "355160"
  },
  {
    "text": "test and their outputs our final answer",
    "start": "355160",
    "end": "359120"
  },
  {
    "text": "we can also inspect the trace and lang",
    "start": "359120",
    "end": "361840"
  },
  {
    "text": "to take a detailed look at the run",
    "start": "361840",
    "end": "364280"
  },
  {
    "text": "behavior so first we can see that the",
    "start": "364280",
    "end": "366560"
  },
  {
    "text": "base agent called a get langraph docs",
    "start": "366560",
    "end": "369680"
  },
  {
    "text": "content tool this fetches relevant",
    "start": "369680",
    "end": "372080"
  },
  {
    "text": "content from relevant",
    "start": "372080",
    "end": "374199"
  },
  {
    "text": "documents and then it calls the LLM to",
    "start": "374199",
    "end": "378080"
  },
  {
    "text": "generate a response the response is then",
    "start": "378080",
    "end": "381199"
  },
  {
    "text": "passed to the reflection step where the",
    "start": "381199",
    "end": "383520"
  },
  {
    "text": "evaluator is run taking a closer look at",
    "start": "383520",
    "end": "386800"
  },
  {
    "text": "the evaluator results it passed through",
    "start": "386800",
    "end": "389759"
  },
  {
    "text": "a score of false and based on the error",
    "start": "389759",
    "end": "393039"
  },
  {
    "text": "message several required arguments seems",
    "start": "393039",
    "end": "395280"
  },
  {
    "text": "to be missing so this includes model",
    "start": "395280",
    "end": "397440"
  },
  {
    "text": "name timeout and stop so this is then",
    "start": "397440",
    "end": "400960"
  },
  {
    "text": "passed on as a part of the human message",
    "start": "400960",
    "end": "404080"
  },
  {
    "text": "if we scroll down where we included the",
    "start": "404080",
    "end": "406479"
  },
  {
    "text": "error found and asking the agent to try",
    "start": "406479",
    "end": "408479"
  },
  {
    "text": "to fix it so now having the context of",
    "start": "408479",
    "end": "411600"
  },
  {
    "text": "the error message the agent generates",
    "start": "411600",
    "end": "414160"
  },
  {
    "text": "another round of outputs the generated",
    "start": "414160",
    "end": "416880"
  },
  {
    "text": "output is then passed to the reflection",
    "start": "416880",
    "end": "419039"
  },
  {
    "text": "step and during the second time of",
    "start": "419039",
    "end": "420960"
  },
  {
    "text": "running the evaluator we can see that no",
    "start": "420960",
    "end": "423120"
  },
  {
    "text": "errors were found returning true and",
    "start": "423120",
    "end": "425840"
  },
  {
    "text": "from there the final response is passed",
    "start": "425840",
    "end": "427680"
  },
  {
    "text": "on to the customer",
    "start": "427680",
    "end": "429680"
  },
  {
    "text": "adding this reflection step within our",
    "start": "429680",
    "end": "431639"
  },
  {
    "text": "architecture this helps catch some of",
    "start": "431639",
    "end": "433759"
  },
  {
    "text": "the type checking mistakes that are",
    "start": "433759",
    "end": "435520"
  },
  {
    "text": "being made by the LM and this can ensure",
    "start": "435520",
    "end": "438080"
  },
  {
    "text": "better code quality for our agent thank",
    "start": "438080",
    "end": "440240"
  },
  {
    "text": "you for watching",
    "start": "440240",
    "end": "443199"
  }
]