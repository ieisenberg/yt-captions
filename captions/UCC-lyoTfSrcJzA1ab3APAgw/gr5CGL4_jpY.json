[
  {
    "text": "one of the most common and most",
    "start": "1360",
    "end": "3520"
  },
  {
    "text": "important ux paradigms that we see with",
    "start": "3520",
    "end": "5759"
  },
  {
    "text": "generative AI applications is streaming",
    "start": "5759",
    "end": "9160"
  },
  {
    "text": "often times the calls to the language",
    "start": "9160",
    "end": "10920"
  },
  {
    "text": "models can take a while and so having",
    "start": "10920",
    "end": "13599"
  },
  {
    "text": "some response to the user that streams",
    "start": "13599",
    "end": "16480"
  },
  {
    "text": "as it's coming out is really really",
    "start": "16480",
    "end": "18160"
  },
  {
    "text": "important to let them know that stuff is",
    "start": "18160",
    "end": "20119"
  },
  {
    "text": "actually happening this becomes even",
    "start": "20119",
    "end": "22039"
  },
  {
    "text": "more important when you have chains and",
    "start": "22039",
    "end": "23840"
  },
  {
    "text": "sequences and agents that that take a a",
    "start": "23840",
    "end": "27039"
  },
  {
    "text": "bunch of calls um some of them to a I",
    "start": "27039",
    "end": "30400"
  },
  {
    "text": "some of them to language models and so",
    "start": "30400",
    "end": "32000"
  },
  {
    "text": "being able to show that intermediate",
    "start": "32000",
    "end": "34079"
  },
  {
    "text": "work again in a streaming manner is",
    "start": "34079",
    "end": "37040"
  },
  {
    "text": "really really important so as we've",
    "start": "37040",
    "end": "40480"
  },
  {
    "text": "built Lang chain 0.1 um we've really",
    "start": "40480",
    "end": "43600"
  },
  {
    "text": "really focused on making streaming a big",
    "start": "43600",
    "end": "46320"
  },
  {
    "text": "component of it a lot of that comes from",
    "start": "46320",
    "end": "49120"
  },
  {
    "text": "Lang chain expression language which we",
    "start": "49120",
    "end": "50800"
  },
  {
    "text": "covered in an earlier video so Lang",
    "start": "50800",
    "end": "53800"
  },
  {
    "text": "chain expression language when you",
    "start": "53800",
    "end": "55120"
  },
  {
    "text": "create objects with it it exposes a",
    "start": "55120",
    "end": "57160"
  },
  {
    "text": "common interface that interface has a",
    "start": "57160",
    "end": "59120"
  },
  {
    "text": "few methods that that are really really",
    "start": "59120",
    "end": "60760"
  },
  {
    "text": "important for streaming so one is the",
    "start": "60760",
    "end": "62800"
  },
  {
    "text": "stream method this streams back tokens",
    "start": "62800",
    "end": "66080"
  },
  {
    "text": "um another is the async stream method so",
    "start": "66080",
    "end": "68200"
  },
  {
    "text": "if you want to use it in an async",
    "start": "68200",
    "end": "69479"
  },
  {
    "text": "setting and then a third is the async",
    "start": "69479",
    "end": "72320"
  },
  {
    "text": "streaming of intermediate steps so this",
    "start": "72320",
    "end": "74439"
  },
  {
    "text": "is really useful for complex chains",
    "start": "74439",
    "end": "77040"
  },
  {
    "text": "agents and and bigger things that you",
    "start": "77040",
    "end": "79920"
  },
  {
    "text": "guys are",
    "start": "79920",
    "end": "80960"
  },
  {
    "text": "building we've really focused on making",
    "start": "80960",
    "end": "83439"
  },
  {
    "text": "sure that whatever chain whatever dag",
    "start": "83439",
    "end": "87880"
  },
  {
    "text": "you create with Lang train expression",
    "start": "87880",
    "end": "89479"
  },
  {
    "text": "language will have streaming at the end",
    "start": "89479",
    "end": "91840"
  },
  {
    "text": "including if you're doing things like",
    "start": "91840",
    "end": "93360"
  },
  {
    "text": "parsing outputs into a specific format",
    "start": "93360",
    "end": "95520"
  },
  {
    "text": "which can be a little bit tricky so",
    "start": "95520",
    "end": "97880"
  },
  {
    "text": "there are a few different things that I",
    "start": "97880",
    "end": "99320"
  },
  {
    "text": "want to show off and so I've created a a",
    "start": "99320",
    "end": "101479"
  },
  {
    "text": "notebook to kind of walk through a few",
    "start": "101479",
    "end": "103159"
  },
  {
    "text": "of",
    "start": "103159",
    "end": "103799"
  },
  {
    "text": "them so here's just basic streaming so",
    "start": "103799",
    "end": "106360"
  },
  {
    "text": "if we create a really simple chain",
    "start": "106360",
    "end": "107960"
  },
  {
    "text": "that's just a prompt um into a model",
    "start": "107960",
    "end": "110320"
  },
  {
    "text": "into an output",
    "start": "110320",
    "end": "111520"
  },
  {
    "text": "parser we can stream back responses um",
    "start": "111520",
    "end": "114880"
  },
  {
    "text": "using the stream method um and we can",
    "start": "114880",
    "end": "117000"
  },
  {
    "text": "see that it gets printed",
    "start": "117000",
    "end": "118520"
  },
  {
    "text": "out another thing that we've focused on",
    "start": "118520",
    "end": "121360"
  },
  {
    "text": "is streaming when you're doing things in",
    "start": "121360",
    "end": "123520"
  },
  {
    "text": "parallel um so here uh we can run two",
    "start": "123520",
    "end": "127360"
  },
  {
    "text": "chains in parallel one is telling a joke",
    "start": "127360",
    "end": "130200"
  },
  {
    "text": "one is writing a poem it's about the",
    "start": "130200",
    "end": "132000"
  },
  {
    "text": "same topic so we'll create those",
    "start": "132000",
    "end": "133480"
  },
  {
    "text": "individual chains and then we'll create",
    "start": "133480",
    "end": "135640"
  },
  {
    "text": "this parallel chain that runs those in",
    "start": "135640",
    "end": "137680"
  },
  {
    "text": "parallel and we can stream back the",
    "start": "137680",
    "end": "139480"
  },
  {
    "text": "response and we can see that we've got",
    "start": "139480",
    "end": "141680"
  },
  {
    "text": "some tokens from poem some tokens from",
    "start": "141680",
    "end": "144280"
  },
  {
    "text": "joke they're intermingled um and so we",
    "start": "144280",
    "end": "147800"
  },
  {
    "text": "again the the parallelism happen happens",
    "start": "147800",
    "end": "150680"
  },
  {
    "text": "uh through Lang chain expression",
    "start": "150680",
    "end": "152200"
  },
  {
    "text": "language naturally but then we're",
    "start": "152200",
    "end": "153760"
  },
  {
    "text": "focused on making sure that the",
    "start": "153760",
    "end": "154840"
  },
  {
    "text": "streaming experience you can get back",
    "start": "154840",
    "end": "156560"
  },
  {
    "text": "those results and do things with them so",
    "start": "156560",
    "end": "159000"
  },
  {
    "text": "here I have just a really simple um",
    "start": "159000",
    "end": "161440"
  },
  {
    "text": "logic that basically looks at what key",
    "start": "161440",
    "end": "163760"
  },
  {
    "text": "getting returned and builds up a",
    "start": "163760",
    "end": "165200"
  },
  {
    "text": "dictionary um so we can see that over",
    "start": "165200",
    "end": "168239"
  },
  {
    "text": "time um we start to build up this",
    "start": "168239",
    "end": "170159"
  },
  {
    "text": "dictionary of different uh uh of poem",
    "start": "170159",
    "end": "173800"
  },
  {
    "text": "and joke and the different responses",
    "start": "173800",
    "end": "175519"
  },
  {
    "text": "that it has and so if we wanted to",
    "start": "175519",
    "end": "176840"
  },
  {
    "text": "display this in a UI somewhere um that",
    "start": "176840",
    "end": "178920"
  },
  {
    "text": "would be really easy to to",
    "start": "178920",
    "end": "181480"
  },
  {
    "text": "do the next thing that I want to",
    "start": "181480",
    "end": "183760"
  },
  {
    "text": "highlight is the stream log method so",
    "start": "183760",
    "end": "186599"
  },
  {
    "text": "the stream log method is really useful",
    "start": "186599",
    "end": "189200"
  },
  {
    "text": "when you want to return some of the",
    "start": "189200",
    "end": "190720"
  },
  {
    "text": "intermediate steps and this is really",
    "start": "190720",
    "end": "192680"
  },
  {
    "text": "useful when you have intermediate steps",
    "start": "192680",
    "end": "195480"
  },
  {
    "text": "that are interesting and potentially",
    "start": "195480",
    "end": "198560"
  },
  {
    "text": "take uh a while or cause the chain to",
    "start": "198560",
    "end": "201360"
  },
  {
    "text": "take a while so an example of this is",
    "start": "201360",
    "end": "202840"
  },
  {
    "text": "with rag so with rag or retrieval",
    "start": "202840",
    "end": "205280"
  },
  {
    "text": "augment in generation you have a",
    "start": "205280",
    "end": "207000"
  },
  {
    "text": "question you then look up relevant",
    "start": "207000",
    "end": "208519"
  },
  {
    "text": "documents and then you pass those",
    "start": "208519",
    "end": "210239"
  },
  {
    "text": "documents and the question into an llm",
    "start": "210239",
    "end": "213360"
  },
  {
    "text": "and get back a final response and so",
    "start": "213360",
    "end": "216200"
  },
  {
    "text": "here it's often useful to stream the or",
    "start": "216200",
    "end": "218799"
  },
  {
    "text": "or return the intermediate steps namely",
    "start": "218799",
    "end": "221840"
  },
  {
    "text": "the uh documents that you fetch so that",
    "start": "221840",
    "end": "223840"
  },
  {
    "text": "you can show them to the user so that",
    "start": "223840",
    "end": "225239"
  },
  {
    "text": "you can show the user that some work is",
    "start": "225239",
    "end": "227120"
  },
  {
    "text": "being done all of that so here we can",
    "start": "227120",
    "end": "230640"
  },
  {
    "text": "create a really simple rag method and",
    "start": "230640",
    "end": "232439"
  },
  {
    "text": "we'll cover we'll cover uh retrieval",
    "start": "232439",
    "end": "234239"
  },
  {
    "text": "augmented generation in another video",
    "start": "234239",
    "end": "236000"
  },
  {
    "text": "but here we'll create a really simple",
    "start": "236000",
    "end": "237400"
  },
  {
    "text": "rag where we have a retriever we have a",
    "start": "237400",
    "end": "239680"
  },
  {
    "text": "prompt we then have this chain and this",
    "start": "239680",
    "end": "241720"
  },
  {
    "text": "chain requires context and question and",
    "start": "241720",
    "end": "244239"
  },
  {
    "text": "then we create this other chain that",
    "start": "244239",
    "end": "245720"
  },
  {
    "text": "that wraps this chain and it just adds",
    "start": "245720",
    "end": "247319"
  },
  {
    "text": "in this",
    "start": "247319",
    "end": "248799"
  },
  {
    "text": "context so we'll create this uh rag",
    "start": "248799",
    "end": "251680"
  },
  {
    "text": "example and first let's take a look at",
    "start": "251680",
    "end": "253959"
  },
  {
    "text": "what streaming looks like um so here we",
    "start": "253959",
    "end": "256239"
  },
  {
    "text": "can do what is lsmith and we can stream",
    "start": "256239",
    "end": "259120"
  },
  {
    "text": "back a result it takes a little bit um",
    "start": "259120",
    "end": "262199"
  },
  {
    "text": "and again it takes a while to even get",
    "start": "262199",
    "end": "263759"
  },
  {
    "text": "started that's because there's the",
    "start": "263759",
    "end": "264880"
  },
  {
    "text": "search call to the retriever that's",
    "start": "264880",
    "end": "266800"
  },
  {
    "text": "happening so if we want to see more of",
    "start": "266800",
    "end": "269039"
  },
  {
    "text": "the information as it gets streamed back",
    "start": "269039",
    "end": "270919"
  },
  {
    "text": "we can use a stream log so if we do this",
    "start": "270919",
    "end": "274680"
  },
  {
    "text": "we start getting back a lot of",
    "start": "274680",
    "end": "278000"
  },
  {
    "text": "information and so and that's because",
    "start": "278000",
    "end": "279960"
  },
  {
    "text": "it's logging all the steps that happen",
    "start": "279960",
    "end": "283160"
  },
  {
    "text": "and so some of these steps provide",
    "start": "283160",
    "end": "284479"
  },
  {
    "text": "really valuable information so here we",
    "start": "284479",
    "end": "286759"
  },
  {
    "text": "have this uh uh docs so here we call we",
    "start": "286759",
    "end": "290560"
  },
  {
    "text": "named this retriever doc so we gave it a",
    "start": "290560",
    "end": "292479"
  },
  {
    "text": "run name docs that we easily identify it",
    "start": "292479",
    "end": "294840"
  },
  {
    "text": "so we have this output and this is the",
    "start": "294840",
    "end": "296680"
  },
  {
    "text": "documents that it's fetching um from the",
    "start": "296680",
    "end": "298800"
  },
  {
    "text": "search engine that we're we're",
    "start": "298800",
    "end": "300800"
  },
  {
    "text": "using so that's really handy but there's",
    "start": "300800",
    "end": "303199"
  },
  {
    "text": "also this other information that's not",
    "start": "303199",
    "end": "304680"
  },
  {
    "text": "as handy and so one thing that we can do",
    "start": "304680",
    "end": "306840"
  },
  {
    "text": "is basically uh use include names to",
    "start": "306840",
    "end": "309440"
  },
  {
    "text": "filter Things based on their name so",
    "start": "309440",
    "end": "312560"
  },
  {
    "text": "here we only stream things back from",
    "start": "312560",
    "end": "314960"
  },
  {
    "text": "docs or from final output so docs will",
    "start": "314960",
    "end": "317639"
  },
  {
    "text": "give us the immediate results um and and",
    "start": "317639",
    "end": "320840"
  },
  {
    "text": "and we get those because we specified it",
    "start": "320840",
    "end": "322759"
  },
  {
    "text": "with included names and we want those",
    "start": "322759",
    "end": "324880"
  },
  {
    "text": "because those are the documents that we",
    "start": "324880",
    "end": "326080"
  },
  {
    "text": "fetched we always get the final output",
    "start": "326080",
    "end": "328639"
  },
  {
    "text": "results um and those we want because",
    "start": "328639",
    "end": "331120"
  },
  {
    "text": "those are the tokens from the language",
    "start": "331120",
    "end": "332840"
  },
  {
    "text": "model um and and we'll always get those",
    "start": "332840",
    "end": "335840"
  },
  {
    "text": "with the path final",
    "start": "335840",
    "end": "338000"
  },
  {
    "text": "output there is a lot more resources on",
    "start": "338000",
    "end": "341080"
  },
  {
    "text": "streaming with rag in particular under",
    "start": "341080",
    "end": "343600"
  },
  {
    "text": "the use case section so if you go to QA",
    "start": "343600",
    "end": "345440"
  },
  {
    "text": "with rag you'll notice uh that we have a",
    "start": "345440",
    "end": "349000"
  },
  {
    "text": "a few different um a a few different",
    "start": "349000",
    "end": "352120"
  },
  {
    "text": "sources for doing things like streaming",
    "start": "352120",
    "end": "355759"
  },
  {
    "text": "sources um uh adding chat history which",
    "start": "355759",
    "end": "358800"
  },
  {
    "text": "also involves some streaming B um and",
    "start": "358800",
    "end": "361479"
  },
  {
    "text": "other things like",
    "start": "361479",
    "end": "363160"
  },
  {
    "text": "that the last thing I want to highlight",
    "start": "363160",
    "end": "365120"
  },
  {
    "text": "with streaming is around agents so with",
    "start": "365120",
    "end": "368160"
  },
  {
    "text": "agents um there's a few complicating",
    "start": "368160",
    "end": "371319"
  },
  {
    "text": "factors first agents they call actions",
    "start": "371319",
    "end": "374800"
  },
  {
    "text": "and it's unknown how many actions they",
    "start": "374800",
    "end": "376599"
  },
  {
    "text": "will call they could call one they could",
    "start": "376599",
    "end": "378360"
  },
  {
    "text": "call zero maybe they'll call five um and",
    "start": "378360",
    "end": "381440"
  },
  {
    "text": "and so that that uh places a lot more",
    "start": "381440",
    "end": "384440"
  },
  {
    "text": "emphasis on the importance of knowing",
    "start": "384440",
    "end": "387280"
  },
  {
    "text": "what those actions are and often times",
    "start": "387280",
    "end": "389120"
  },
  {
    "text": "agent to take a while as well so one",
    "start": "389120",
    "end": "392360"
  },
  {
    "text": "thing that we've done is we've made it",
    "start": "392360",
    "end": "394479"
  },
  {
    "text": "so that the thing that's returned by the",
    "start": "394479",
    "end": "397560"
  },
  {
    "text": "agent executor and we'll cover agents in",
    "start": "397560",
    "end": "399919"
  },
  {
    "text": "a separate video so if you don't",
    "start": "399919",
    "end": "401560"
  },
  {
    "text": "understand the exact specifics of what",
    "start": "401560",
    "end": "403240"
  },
  {
    "text": "I'm talking about there'll be a separate",
    "start": "403240",
    "end": "404400"
  },
  {
    "text": "video going into what an agent executed",
    "start": "404400",
    "end": "405960"
  },
  {
    "text": "is but basically we've made it so that",
    "start": "405960",
    "end": "408039"
  },
  {
    "text": "the agent executor when you stream that",
    "start": "408039",
    "end": "410319"
  },
  {
    "text": "it Returns the actions that are taken",
    "start": "410319",
    "end": "412560"
  },
  {
    "text": "not the tokens and so let's take a look",
    "start": "412560",
    "end": "414240"
  },
  {
    "text": "at what that looks like so we can create",
    "start": "414240",
    "end": "416280"
  },
  {
    "text": "a simple agent here and then if we",
    "start": "416280",
    "end": "418680"
  },
  {
    "text": "stream it",
    "start": "418680",
    "end": "420240"
  },
  {
    "text": "um you can see that we get back first uh",
    "start": "420240",
    "end": "423120"
  },
  {
    "text": "this action which is saying uh call to",
    "start": "423120",
    "end": "426680"
  },
  {
    "text": "villy search results Json what's the",
    "start": "426680",
    "end": "429000"
  },
  {
    "text": "weather in San Francisco um we then get",
    "start": "429000",
    "end": "431720"
  },
  {
    "text": "back this result from the the agent that",
    "start": "431720",
    "end": "435520"
  },
  {
    "text": "has this step this is the result from",
    "start": "435520",
    "end": "437199"
  },
  {
    "text": "tavil we then call what's the weather in",
    "start": "437199",
    "end": "440000"
  },
  {
    "text": "Los Angeles we then get back the result",
    "start": "440000",
    "end": "442440"
  },
  {
    "text": "of what's the weather in Los Angeles and",
    "start": "442440",
    "end": "444039"
  },
  {
    "text": "then we get back the final output by the",
    "start": "444039",
    "end": "445919"
  },
  {
    "text": "way if we wanted to see what this looks",
    "start": "445919",
    "end": "447319"
  },
  {
    "text": "like in Lang Smith we easily",
    "start": "447319",
    "end": "450720"
  },
  {
    "text": "could this is what it would look like um",
    "start": "450720",
    "end": "453319"
  },
  {
    "text": "you've got the call to the language",
    "start": "453319",
    "end": "454560"
  },
  {
    "text": "model first you can click on it you can",
    "start": "454560",
    "end": "456120"
  },
  {
    "text": "see that you get back this function call",
    "start": "456120",
    "end": "458639"
  },
  {
    "text": "um whether in San Francisco you can then",
    "start": "458639",
    "end": "460479"
  },
  {
    "text": "see the result of this function call you",
    "start": "460479",
    "end": "462800"
  },
  {
    "text": "can then see the call to the llm it has",
    "start": "462800",
    "end": "465560"
  },
  {
    "text": "this function call in it but it realizes",
    "start": "465560",
    "end": "467199"
  },
  {
    "text": "it needs to make another one what's the",
    "start": "467199",
    "end": "468840"
  },
  {
    "text": "weather in La so it calls that um and",
    "start": "468840",
    "end": "472039"
  },
  {
    "text": "then you can see the call to the",
    "start": "472039",
    "end": "473199"
  },
  {
    "text": "language model at the end um and it",
    "start": "473199",
    "end": "475560"
  },
  {
    "text": "generates a output um down here",
    "start": "475560",
    "end": "480039"
  },
  {
    "text": "so that's how you can stream back the",
    "start": "480039",
    "end": "483039"
  },
  {
    "text": "intermediate results of an agent which",
    "start": "483039",
    "end": "484800"
  },
  {
    "text": "is really important so that you can show",
    "start": "484800",
    "end": "486199"
  },
  {
    "text": "the user what steps are being taken um",
    "start": "486199",
    "end": "488360"
  },
  {
    "text": "you can also stream the tokens um so",
    "start": "488360",
    "end": "491039"
  },
  {
    "text": "here um what we can do is we can set",
    "start": "491039",
    "end": "493720"
  },
  {
    "text": "streaming equals to true in the llm and",
    "start": "493720",
    "end": "497720"
  },
  {
    "text": "so this is important we have to do this",
    "start": "497720",
    "end": "499639"
  },
  {
    "text": "and then we can call a stream log in the",
    "start": "499639",
    "end": "502520"
  },
  {
    "text": "agent executor we can then filter to",
    "start": "502520",
    "end": "504919"
  },
  {
    "text": "things that are open Ai and that's",
    "start": "504919",
    "end": "507800"
  },
  {
    "text": "because this LM is named open AI",
    "start": "507800",
    "end": "510319"
  },
  {
    "text": "and then we can start printing out the",
    "start": "510319",
    "end": "512399"
  },
  {
    "text": "thing so here we have the streamed",
    "start": "512399",
    "end": "513919"
  },
  {
    "text": "output um when it's first occurring um",
    "start": "513919",
    "end": "517399"
  },
  {
    "text": "and so here we can start to see that",
    "start": "517399",
    "end": "519039"
  },
  {
    "text": "it's building up this function call um",
    "start": "519039",
    "end": "521719"
  },
  {
    "text": "thing um so we can start to see that",
    "start": "521719",
    "end": "524159"
  },
  {
    "text": "it's slowly building up the function",
    "start": "524159",
    "end": "526360"
  },
  {
    "text": "call where we get to San",
    "start": "526360",
    "end": "530200"
  },
  {
    "text": "Francisco weather in San Francisco it's",
    "start": "530200",
    "end": "534399"
  },
  {
    "text": "this is the query so it's so it's",
    "start": "534399",
    "end": "535959"
  },
  {
    "text": "building up um this function call and",
    "start": "535959",
    "end": "538040"
  },
  {
    "text": "then if we scroll to the end and um we",
    "start": "538040",
    "end": "541000"
  },
  {
    "text": "can see that it's streaming out the the",
    "start": "541000",
    "end": "544519"
  },
  {
    "text": "um the final response that it gives so",
    "start": "544519",
    "end": "548279"
  },
  {
    "text": "um we can see here it starts here I'm",
    "start": "548279",
    "end": "550880"
  },
  {
    "text": "sorry but I couldn't find the current",
    "start": "550880",
    "end": "554600"
  },
  {
    "text": "weather in San Francisco so by using",
    "start": "554600",
    "end": "558160"
  },
  {
    "text": "this aam log method um we can get back",
    "start": "558160",
    "end": "563839"
  },
  {
    "text": "the results of the to at a at a token",
    "start": "563839",
    "end": "566480"
  },
  {
    "text": "level for agents um and so you'll Noti",
    "start": "566480",
    "end": "569440"
  },
  {
    "text": "that it also combines again uh the uh",
    "start": "569440",
    "end": "573120"
  },
  {
    "text": "the the search results as well so we get",
    "start": "573120",
    "end": "575680"
  },
  {
    "text": "back both and so we have more",
    "start": "575680",
    "end": "577160"
  },
  {
    "text": "information on this as well so if you go",
    "start": "577160",
    "end": "579120"
  },
  {
    "text": "to agents um and uh then in the howto",
    "start": "579120",
    "end": "584000"
  },
  {
    "text": "guides we have streaming um and so we",
    "start": "584000",
    "end": "586440"
  },
  {
    "text": "cover this more heavily here streaming",
    "start": "586440",
    "end": "589320"
  },
  {
    "text": "is a really important ux for a lot of",
    "start": "589320",
    "end": "591120"
  },
  {
    "text": "llm applications we've put a lot of",
    "start": "591120",
    "end": "592880"
  },
  {
    "text": "emphasis on making sure that Lang chain",
    "start": "592880",
    "end": "595640"
  },
  {
    "text": "is really really good at streaming let",
    "start": "595640",
    "end": "598600"
  },
  {
    "text": "us know if you run into any issues",
    "start": "598600",
    "end": "602959"
  }
]