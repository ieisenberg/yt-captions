[
  {
    "text": "hey everyone I'm David from linkchain",
    "start": "80",
    "end": "1599"
  },
  {
    "text": "and today I'm excited to share some nice",
    "start": "1599",
    "end": "3800"
  },
  {
    "text": "developer experience improvements that",
    "start": "3800",
    "end": "5480"
  },
  {
    "text": "make working with lra JS and lra even",
    "start": "5480",
    "end": "8040"
  },
  {
    "text": "better first off starting a new lra Js",
    "start": "8040",
    "end": "11160"
  },
  {
    "text": "project is now super simple just run npm",
    "start": "11160",
    "end": "13719"
  },
  {
    "text": "create lra and an interactive guide with",
    "start": "13719",
    "end": "16000"
  },
  {
    "text": "work you through chring one of our pre-u",
    "start": "16000",
    "end": "17920"
  },
  {
    "text": "templates so you can get up and running",
    "start": "17920",
    "end": "20000"
  },
  {
    "text": "in no time second we've shipped a brand",
    "start": "20000",
    "end": "23000"
  },
  {
    "text": "new command line app just for lra JS it",
    "start": "23000",
    "end": "26320"
  },
  {
    "text": "spins up a development server and Open",
    "start": "26320",
    "end": "28320"
  },
  {
    "text": "lra studio instantly the docker",
    "start": "28320",
    "end": "30560"
  },
  {
    "text": "requirement for development is now gone",
    "start": "30560",
    "end": "32520"
  },
  {
    "text": "and the version of studio will work on",
    "start": "32520",
    "end": "34360"
  },
  {
    "text": "Mac windows and Linux as well and third",
    "start": "34360",
    "end": "38440"
  },
  {
    "text": "we made it much easier to integrate both",
    "start": "38440",
    "end": "40440"
  },
  {
    "text": "lra and lra JZ into your react app we",
    "start": "40440",
    "end": "43920"
  },
  {
    "text": "took everything we learned from building",
    "start": "43920",
    "end": "45960"
  },
  {
    "text": "lra studio and wrap it into a one",
    "start": "45960",
    "end": "48280"
  },
  {
    "text": "powerful hook use stream with just one",
    "start": "48280",
    "end": "50960"
  },
  {
    "text": "hook you get features such as stret and",
    "start": "50960",
    "end": "52840"
  },
  {
    "text": "State Management messages streaming",
    "start": "52840",
    "end": "55039"
  },
  {
    "text": "interrupt handling and even branching so",
    "start": "55039",
    "end": "57520"
  },
  {
    "text": "you can focus on building great agents",
    "start": "57520",
    "end": "59440"
  },
  {
    "text": "while not compromising on the user",
    "start": "59440",
    "end": "62320"
  },
  {
    "text": "experience now let's walk through a",
    "start": "62320",
    "end": "64239"
  },
  {
    "text": "simple example on how to build a simple",
    "start": "64239",
    "end": "66439"
  },
  {
    "text": "chatbot with L graph and the new Ustream",
    "start": "66439",
    "end": "69159"
  },
  {
    "text": "hook for this demo we'll be using nextjs",
    "start": "69159",
    "end": "72560"
  },
  {
    "text": "and app router but Ustream works great",
    "start": "72560",
    "end": "75000"
  },
  {
    "text": "with v or any other react stack first",
    "start": "75000",
    "end": "79000"
  },
  {
    "text": "add to use client directive as we are",
    "start": "79000",
    "end": "81439"
  },
  {
    "text": "using Hooks and client interactivity",
    "start": "81439",
    "end": "84600"
  },
  {
    "text": "then import the use Stream hook and use",
    "start": "84600",
    "end": "87439"
  },
  {
    "text": "it in your react component here here I'm",
    "start": "87439",
    "end": "90759"
  },
  {
    "text": "passing the API URL which in this case",
    "start": "90759",
    "end": "94079"
  },
  {
    "text": "is the address of my local inmemory",
    "start": "94079",
    "end": "96640"
  },
  {
    "text": "server running at Port 2024 and the ID",
    "start": "96640",
    "end": "100200"
  },
  {
    "text": "of the assistant which in this case is",
    "start": "100200",
    "end": "102799"
  },
  {
    "text": "the",
    "start": "102799",
    "end": "104439"
  },
  {
    "text": "agent then we access the thread messages",
    "start": "104439",
    "end": "107680"
  },
  {
    "text": "property we Loop through all of the",
    "start": "107680",
    "end": "109920"
  },
  {
    "text": "messages and render them",
    "start": "109920",
    "end": "112799"
  },
  {
    "text": "accordingly we create a new form with",
    "start": "112799",
    "end": "115600"
  },
  {
    "text": "the input",
    "start": "115600",
    "end": "117880"
  },
  {
    "text": "field and we add a Cod back to handle",
    "start": "117880",
    "end": "121360"
  },
  {
    "text": "the",
    "start": "121360",
    "end": "122000"
  },
  {
    "text": "submission here I using on control",
    "start": "122000",
    "end": "124479"
  },
  {
    "text": "inputs but feel free to use you state as",
    "start": "124479",
    "end": "126719"
  },
  {
    "text": "well if you need to finally call thread.",
    "start": "126719",
    "end": "130280"
  },
  {
    "text": "submit to create a new run and start",
    "start": "130280",
    "end": "132440"
  },
  {
    "text": "streaming responses from your lra",
    "start": "132440",
    "end": "134920"
  },
  {
    "text": "agent and here can see a demo so let's",
    "start": "134920",
    "end": "137680"
  },
  {
    "text": "say",
    "start": "137680",
    "end": "140000"
  },
  {
    "text": "hey and tell me a",
    "start": "140120",
    "end": "144080"
  },
  {
    "text": "joke all right and that's all it takes",
    "start": "145200",
    "end": "148599"
  },
  {
    "text": "to hook lra into your react app you can",
    "start": "148599",
    "end": "151760"
  },
  {
    "text": "easily extend this sample to support",
    "start": "151760",
    "end": "153840"
  },
  {
    "text": "cancellation human in the loop",
    "start": "153840",
    "end": "155720"
  },
  {
    "text": "interrupts as well as branching here's",
    "start": "155720",
    "end": "158400"
  },
  {
    "text": "how you can Implement branching from",
    "start": "158400",
    "end": "159760"
  },
  {
    "text": "this sample let's say the user wants to",
    "start": "159760",
    "end": "162800"
  },
  {
    "text": "change their input",
    "start": "162800",
    "end": "164239"
  },
  {
    "text": "message maybe they have made a",
    "start": "164239",
    "end": "167680"
  },
  {
    "text": "typo L crafts built-in persistence layer",
    "start": "167680",
    "end": "170640"
  },
  {
    "text": "tracks threet State across time",
    "start": "170640",
    "end": "172440"
  },
  {
    "text": "automatically and stores them as",
    "start": "172440",
    "end": "174200"
  },
  {
    "text": "checkpoints so we can easily get the",
    "start": "174200",
    "end": "175959"
  },
  {
    "text": "whole history of threat State and render",
    "start": "175959",
    "end": "177879"
  },
  {
    "text": "branches whenever needed the use Stream",
    "start": "177879",
    "end": "181040"
  },
  {
    "text": "hook does have nice utilities for",
    "start": "181040",
    "end": "182800"
  },
  {
    "text": "dealing with history and messages we",
    "start": "182800",
    "end": "185480"
  },
  {
    "text": "first use threat get message",
    "start": "185480",
    "end": "188400"
  },
  {
    "text": "metata to find the first checkpoint",
    "start": "188400",
    "end": "191000"
  },
  {
    "text": "where the message first appeared then we",
    "start": "191000",
    "end": "193879"
  },
  {
    "text": "create a new Run formost State before",
    "start": "193879",
    "end": "196000"
  },
  {
    "text": "that message happened thus creating a",
    "start": "196000",
    "end": "198000"
  },
  {
    "text": "new branch and replacing the old message",
    "start": "198000",
    "end": "200360"
  },
  {
    "text": "with a new",
    "start": "200360",
    "end": "201440"
  },
  {
    "text": "message this starts a new branch of",
    "start": "201440",
    "end": "204200"
  },
  {
    "text": "conversation just passing the starting",
    "start": "204200",
    "end": "206879"
  },
  {
    "text": "checkpoint where you want the new run to",
    "start": "206879",
    "end": "209000"
  },
  {
    "text": "begin using the checkpoint",
    "start": "209000",
    "end": "211920"
  },
  {
    "text": "property get messages metadata also",
    "start": "211920",
    "end": "214239"
  },
  {
    "text": "includes information about the branches",
    "start": "214239",
    "end": "215760"
  },
  {
    "text": "alone so you can easily create your own",
    "start": "215760",
    "end": "217920"
  },
  {
    "text": "UI for the brand",
    "start": "217920",
    "end": "220200"
  },
  {
    "text": "feature the UI can be anything you want",
    "start": "220200",
    "end": "223280"
  },
  {
    "text": "the entire Hook is headless so you can",
    "start": "223280",
    "end": "225560"
  },
  {
    "text": "provide your own UI and we just provide",
    "start": "225560",
    "end": "227720"
  },
  {
    "text": "the functionality for your",
    "start": "227720",
    "end": "230040"
  },
  {
    "text": "UI so let's say let me figure out the",
    "start": "230040",
    "end": "233519"
  },
  {
    "text": "way how I fix this",
    "start": "233519",
    "end": "236560"
  },
  {
    "text": "typo and I got the job and here are my",
    "start": "236799",
    "end": "241120"
  },
  {
    "text": "controls check out the documentation for",
    "start": "241120",
    "end": "243400"
  },
  {
    "text": "us Stream hook in the description below",
    "start": "243400",
    "end": "245319"
  },
  {
    "text": "and let us know what you think happy",
    "start": "245319",
    "end": "247400"
  },
  {
    "text": "building",
    "start": "247400",
    "end": "250400"
  }
]