[
  {
    "text": "hey this is Lance from Lang chain so",
    "start": "840",
    "end": "3040"
  },
  {
    "text": "mraw released code STW today which is a",
    "start": "3040",
    "end": "5640"
  },
  {
    "text": "code generation model um which I'm",
    "start": "5640",
    "end": "7720"
  },
  {
    "text": "actually really excited about so it's",
    "start": "7720",
    "end": "10120"
  },
  {
    "text": "really good at code generation tasks",
    "start": "10120",
    "end": "11480"
  },
  {
    "text": "like fill INE middle or code completion",
    "start": "11480",
    "end": "13160"
  },
  {
    "text": "it's trained on a programming language",
    "start": "13160",
    "end": "15200"
  },
  {
    "text": "it has an instruct version that supports",
    "start": "15200",
    "end": "16920"
  },
  {
    "text": "tool use but one of the reasons why I",
    "start": "16920",
    "end": "19400"
  },
  {
    "text": "really like code generation models and",
    "start": "19400",
    "end": "20920"
  },
  {
    "text": "I've actually done quite a bit of work",
    "start": "20920",
    "end": "22279"
  },
  {
    "text": "with them is that they're just very",
    "start": "22279",
    "end": "23359"
  },
  {
    "text": "generally useful so lots of companies",
    "start": "23359",
    "end": "25560"
  },
  {
    "text": "for example want C custom code",
    "start": "25560",
    "end": "27119"
  },
  {
    "text": "assistance that might combine like some",
    "start": "27119",
    "end": "28720"
  },
  {
    "text": "documentation Plus Code gener ation um",
    "start": "28720",
    "end": "31720"
  },
  {
    "text": "at Lang chain for example we have",
    "start": "31720",
    "end": "33000"
  },
  {
    "text": "something called chat Lang chain it's",
    "start": "33000",
    "end": "34480"
  },
  {
    "text": "basically QA over our docs it can",
    "start": "34480",
    "end": "36399"
  },
  {
    "text": "produce functioning code blocks for",
    "start": "36399",
    "end": "38800"
  },
  {
    "text": "users based on questions um and one of",
    "start": "38800",
    "end": "42399"
  },
  {
    "text": "the other things is cool about code is",
    "start": "42399",
    "end": "43640"
  },
  {
    "text": "really easy to evaluate it's really easy",
    "start": "43640",
    "end": "45079"
  },
  {
    "text": "to test does this code actually execute",
    "start": "45079",
    "end": "46520"
  },
  {
    "text": "or not um and so a really powerful idea",
    "start": "46520",
    "end": "50320"
  },
  {
    "text": "related to code generation was put out a",
    "start": "50320",
    "end": "52600"
  },
  {
    "text": "few months ago um from the folks at",
    "start": "52600",
    "end": "54960"
  },
  {
    "text": "codium Ai and carboi summarized it",
    "start": "54960",
    "end": "57600"
  },
  {
    "text": "really nicely here in that this idea of",
    "start": "57600",
    "end": "60280"
  },
  {
    "text": "flow engineering for code for code",
    "start": "60280",
    "end": "63000"
  },
  {
    "text": "generation is really powerful and the",
    "start": "63000",
    "end": "65760"
  },
  {
    "text": "idea shown in the paper the alpha codium",
    "start": "65760",
    "end": "67880"
  },
  {
    "text": "work and kind of highlighted here in",
    "start": "67880",
    "end": "69759"
  },
  {
    "text": "this tweet from karpathy is simply that",
    "start": "69759",
    "end": "72560"
  },
  {
    "text": "if you produce a code solution you can",
    "start": "72560",
    "end": "75159"
  },
  {
    "text": "really easily check it in line kind of",
    "start": "75159",
    "end": "78080"
  },
  {
    "text": "as mentioned here it's pretty easy to",
    "start": "78080",
    "end": "79360"
  },
  {
    "text": "evaluate code at the minimum does it",
    "start": "79360",
    "end": "81600"
  },
  {
    "text": "execute do the Imports work um in the",
    "start": "81600",
    "end": "84079"
  },
  {
    "text": "maximum case do you have like a an",
    "start": "84079",
    "end": "86159"
  },
  {
    "text": "actual solution do unit test but in any",
    "start": "86159",
    "end": "88479"
  },
  {
    "text": "case the point is code is very easy to",
    "start": "88479",
    "end": "90320"
  },
  {
    "text": "test and you can actually test it in",
    "start": "90320",
    "end": "92799"
  },
  {
    "text": "your inference flow so you produce a",
    "start": "92799",
    "end": "95439"
  },
  {
    "text": "generation you then test the code if it",
    "start": "95439",
    "end": "98360"
  },
  {
    "text": "fails you can loop back and try again",
    "start": "98360",
    "end": "100600"
  },
  {
    "text": "and this idea of kind of a a code",
    "start": "100600",
    "end": "102200"
  },
  {
    "text": "generation flow was shown in the paper",
    "start": "102200",
    "end": "104399"
  },
  {
    "text": "to produce much better results and it's",
    "start": "104399",
    "end": "106360"
  },
  {
    "text": "something that I want to show today uh",
    "start": "106360",
    "end": "108159"
  },
  {
    "text": "using Cod strw uh in a really simple",
    "start": "108159",
    "end": "110600"
  },
  {
    "text": "test case so this is something I've done",
    "start": "110600",
    "end": "113040"
  },
  {
    "text": "a little bit in the past and I found to",
    "start": "113040",
    "end": "114399"
  },
  {
    "text": "be extremely effective it's a very",
    "start": "114399",
    "end": "115920"
  },
  {
    "text": "simple idea but here's the basic flow",
    "start": "115920",
    "end": "118520"
  },
  {
    "text": "that we will kind of highlight",
    "start": "118520",
    "end": "120840"
  },
  {
    "text": "so I want to be able to take a question",
    "start": "120840",
    "end": "123240"
  },
  {
    "text": "related to code generation pass it to",
    "start": "123240",
    "end": "125439"
  },
  {
    "text": "the model so pass it to coal and have",
    "start": "125439",
    "end": "127680"
  },
  {
    "text": "cool produce a",
    "start": "127680",
    "end": "129200"
  },
  {
    "text": "solution um now what I'm going to do is",
    "start": "129200",
    "end": "131480"
  },
  {
    "text": "I'm going to use a function calling or",
    "start": "131480",
    "end": "133520"
  },
  {
    "text": "tool use with codol to produce an output",
    "start": "133520",
    "end": "135680"
  },
  {
    "text": "object that has three things a preamble",
    "start": "135680",
    "end": "138280"
  },
  {
    "text": "stating like here is the problem I'm",
    "start": "138280",
    "end": "139840"
  },
  {
    "text": "trying to solve the Imports and the code",
    "start": "139840",
    "end": "143200"
  },
  {
    "text": "itself and what I'm going to do is I'm",
    "start": "143200",
    "end": "144560"
  },
  {
    "text": "going to show how it's really easy to",
    "start": "144560",
    "end": "146200"
  },
  {
    "text": "incorporate some simple code checks like",
    "start": "146200",
    "end": "148560"
  },
  {
    "text": "do the Imports work the code execute if",
    "start": "148560",
    "end": "150959"
  },
  {
    "text": "either fail like there's a bug in the",
    "start": "150959",
    "end": "152760"
  },
  {
    "text": "code then I'm going to show how to loot",
    "start": "152760",
    "end": "155040"
  },
  {
    "text": "back and retry and this simple kind of",
    "start": "155040",
    "end": "157879"
  },
  {
    "text": "like check retry Loop is a way to",
    "start": "157879",
    "end": "160480"
  },
  {
    "text": "significantly improve the the accuracy",
    "start": "160480",
    "end": "162760"
  },
  {
    "text": "and and kind of usability of code",
    "start": "162760",
    "end": "165000"
  },
  {
    "text": "generation models I'm going to show how",
    "start": "165000",
    "end": "166280"
  },
  {
    "text": "to do that right now so to kick this off",
    "start": "166280",
    "end": "170040"
  },
  {
    "text": "I have a notebook here I've done a few",
    "start": "170040",
    "end": "172400"
  },
  {
    "text": "pip installs I've just set my mistol API",
    "start": "172400",
    "end": "175239"
  },
  {
    "text": "key that's really it and I'm also going",
    "start": "175239",
    "end": "176599"
  },
  {
    "text": "to use Lang Smith or tracing of course",
    "start": "176599",
    "end": "178120"
  },
  {
    "text": "this is optional I'm going to set envir",
    "start": "178120",
    "end": "179800"
  },
  {
    "text": "IR ment variable for my line chain",
    "start": "179800",
    "end": "181239"
  },
  {
    "text": "project which will basically will",
    "start": "181239",
    "end": "183360"
  },
  {
    "text": "indicate where all my traces will go and",
    "start": "183360",
    "end": "186120"
  },
  {
    "text": "this is just like the the kind of flow",
    "start": "186120",
    "end": "187920"
  },
  {
    "text": "we want to lay out so we basically want",
    "start": "187920",
    "end": "189400"
  },
  {
    "text": "to use cod strol to take a user question",
    "start": "189400",
    "end": "192280"
  },
  {
    "text": "produce a solution and we want to test",
    "start": "192280",
    "end": "193840"
  },
  {
    "text": "that solution if it passes our test",
    "start": "193840",
    "end": "196040"
  },
  {
    "text": "return to the user if it doesn't try",
    "start": "196040",
    "end": "197840"
  },
  {
    "text": "again that's all we want to do so what",
    "start": "197840",
    "end": "200440"
  },
  {
    "text": "I'm going to do here is first let me",
    "start": "200440",
    "end": "202239"
  },
  {
    "text": "just show some very basic components so",
    "start": "202239",
    "end": "205159"
  },
  {
    "text": "first let's just talk about how to",
    "start": "205159",
    "end": "206319"
  },
  {
    "text": "actually use code here's my general",
    "start": "206319",
    "end": "208200"
  },
  {
    "text": "prompt I basically just I'm going to",
    "start": "208200",
    "end": "209760"
  },
  {
    "text": "tell the model your code assistant",
    "start": "209760",
    "end": "211439"
  },
  {
    "text": "ensure that all the code can be executed",
    "start": "211439",
    "end": "213560"
  },
  {
    "text": "with all the Imports and variables",
    "start": "213560",
    "end": "214799"
  },
  {
    "text": "defined structure your answer in three",
    "start": "214799",
    "end": "216799"
  },
  {
    "text": "ways give me a preamble or a prefix",
    "start": "216799",
    "end": "218959"
  },
  {
    "text": "describing the code solution give me the",
    "start": "218959",
    "end": "220840"
  },
  {
    "text": "Imports give me a function and code",
    "start": "220840",
    "end": "222560"
  },
  {
    "text": "block so I'm going to ask for those",
    "start": "222560",
    "end": "224040"
  },
  {
    "text": "three things now here's where tool use",
    "start": "224040",
    "end": "226239"
  },
  {
    "text": "comes in I can actually Define the",
    "start": "226239",
    "end": "227680"
  },
  {
    "text": "schema of the output that I actually",
    "start": "227680",
    "end": "229360"
  },
  {
    "text": "want and what I can do is I can bind",
    "start": "229360",
    "end": "231959"
  },
  {
    "text": "that using a lang chain very convenient",
    "start": "231959",
    "end": "234360"
  },
  {
    "text": "with structured output I can basically",
    "start": "234360",
    "end": "236200"
  },
  {
    "text": "bind that to the llm and then this chain",
    "start": "236200",
    "end": "239159"
  },
  {
    "text": "will invoke the LM using the structured",
    "start": "239159",
    "end": "241280"
  },
  {
    "text": "output now here's how that actually",
    "start": "241280",
    "end": "243159"
  },
  {
    "text": "works under the",
    "start": "243159",
    "end": "244439"
  },
  {
    "text": "hood basically this object that passes a",
    "start": "244439",
    "end": "247599"
  },
  {
    "text": "pantic object is converted into function",
    "start": "247599",
    "end": "250079"
  },
  {
    "text": "schema form a STW and it's then passed",
    "start": "250079",
    "end": "253439"
  },
  {
    "text": "or bound to the llm so the llm has",
    "start": "253439",
    "end": "256120"
  },
  {
    "text": "access to this function and it knows the",
    "start": "256120",
    "end": "258359"
  },
  {
    "text": "schema that it should return when that",
    "start": "258359",
    "end": "260799"
  },
  {
    "text": "function call or tool is invoked so",
    "start": "260799",
    "end": "263800"
  },
  {
    "text": "basically what happens is I can take a",
    "start": "263800",
    "end": "265080"
  },
  {
    "text": "user question the function is invoked",
    "start": "265080",
    "end": "268280"
  },
  {
    "text": "and then the llm knows to produce an",
    "start": "268280",
    "end": "270039"
  },
  {
    "text": "output that adheres to my schema and",
    "start": "270039",
    "end": "273199"
  },
  {
    "text": "this will basically be a Json string",
    "start": "273199",
    "end": "275120"
  },
  {
    "text": "again remember llm is just string to",
    "start": "275120",
    "end": "276880"
  },
  {
    "text": "string so it's going to be a Json string",
    "start": "276880",
    "end": "279160"
  },
  {
    "text": "and then under the hood with this with",
    "start": "279160",
    "end": "281120"
  },
  {
    "text": "structured output thing that I'm using",
    "start": "281120",
    "end": "282440"
  },
  {
    "text": "from Lang chain we apply an output",
    "start": "282440",
    "end": "284639"
  },
  {
    "text": "parser that basically pantic parti",
    "start": "284639",
    "end": "286520"
  },
  {
    "text": "should take a Json string convert it",
    "start": "286520",
    "end": "288039"
  },
  {
    "text": "back to pantic object so that's it",
    "start": "288039",
    "end": "289759"
  },
  {
    "text": "that's all that's going on um but I'll",
    "start": "289759",
    "end": "291919"
  },
  {
    "text": "show you how this is really cool so I'm",
    "start": "291919",
    "end": "294000"
  },
  {
    "text": "defining this object this is what I want",
    "start": "294000",
    "end": "295320"
  },
  {
    "text": "to get out here's my chain now let's",
    "start": "295320",
    "end": "297639"
  },
  {
    "text": "test this out write a function for",
    "start": "297639",
    "end": "298960"
  },
  {
    "text": "Fibonacci",
    "start": "298960",
    "end": "300160"
  },
  {
    "text": "um I passed it in as a user question um",
    "start": "300160",
    "end": "303720"
  },
  {
    "text": "so that's",
    "start": "303720",
    "end": "305840"
  },
  {
    "text": "it now this is",
    "start": "305840",
    "end": "308080"
  },
  {
    "text": "running great and we see a result now",
    "start": "308080",
    "end": "310840"
  },
  {
    "text": "here's what's cool if you look at this",
    "start": "310840",
    "end": "312039"
  },
  {
    "text": "result object it actually is a code",
    "start": "312039",
    "end": "315000"
  },
  {
    "text": "object so it basically it's pantic",
    "start": "315000",
    "end": "317120"
  },
  {
    "text": "object following the scheme we specify",
    "start": "317120",
    "end": "319120"
  },
  {
    "text": "here it has a prefix boom it has some",
    "start": "319120",
    "end": "322680"
  },
  {
    "text": "imports actually in this case none and",
    "start": "322680",
    "end": "324720"
  },
  {
    "text": "then it has the code block that's it so",
    "start": "324720",
    "end": "327800"
  },
  {
    "text": "we'll see why this is really useful in a",
    "start": "327800",
    "end": "329160"
  },
  {
    "text": "little bit but want to introduce that",
    "start": "329160",
    "end": "330759"
  },
  {
    "text": "idea of basically we can use cod strol",
    "start": "330759",
    "end": "333720"
  },
  {
    "text": "with tool use to produce structured",
    "start": "333720",
    "end": "335560"
  },
  {
    "text": "outputs which is generally very useful",
    "start": "335560",
    "end": "337280"
  },
  {
    "text": "and in the particular for this notion of",
    "start": "337280",
    "end": "340280"
  },
  {
    "text": "kind of like inline self-correction is",
    "start": "340280",
    "end": "342199"
  },
  {
    "text": "extremely useful cool so that's that",
    "start": "342199",
    "end": "344840"
  },
  {
    "text": "first piece now what I'm going to",
    "start": "344840",
    "end": "347360"
  },
  {
    "text": "introduce here is Lang graph so Lang",
    "start": "347360",
    "end": "350319"
  },
  {
    "text": "graph is a library from the Lang chain",
    "start": "350319",
    "end": "351880"
  },
  {
    "text": "team and we've used this a number of",
    "start": "351880",
    "end": "354199"
  },
  {
    "text": "other videos um and I've used this kind",
    "start": "354199",
    "end": "356120"
  },
  {
    "text": "of extensively in general uh to build",
    "start": "356120",
    "end": "359240"
  },
  {
    "text": "flow flows and this is an example of a",
    "start": "359240",
    "end": "361360"
  },
  {
    "text": "flow the main characteristic of the flow",
    "start": "361360",
    "end": "363520"
  },
  {
    "text": "that I highlight here that Lang graph is",
    "start": "363520",
    "end": "365319"
  },
  {
    "text": "really well suited for is anything with",
    "start": "365319",
    "end": "366919"
  },
  {
    "text": "a cycle so anything with feedback",
    "start": "366919",
    "end": "369520"
  },
  {
    "text": "basically what it's saying is I want",
    "start": "369520",
    "end": "372360"
  },
  {
    "text": "every time I run my app I want to do",
    "start": "372360",
    "end": "375240"
  },
  {
    "text": "this code generation produce a",
    "start": "375240",
    "end": "377039"
  },
  {
    "text": "structured output do some kind of code",
    "start": "377039",
    "end": "379199"
  },
  {
    "text": "checks make a decision based on the",
    "start": "379199",
    "end": "381360"
  },
  {
    "text": "outcome of those code checks feedback if",
    "start": "381360",
    "end": "383639"
  },
  {
    "text": "they fail finish if they pass that you",
    "start": "383639",
    "end": "386240"
  },
  {
    "text": "can think of as like a very simple kind",
    "start": "386240",
    "end": "387800"
  },
  {
    "text": "of like workflow um and L graph is a",
    "start": "387800",
    "end": "390479"
  },
  {
    "text": "great way to build these kinds of",
    "start": "390479",
    "end": "391440"
  },
  {
    "text": "workflows and we'll see why so the first",
    "start": "391440",
    "end": "393919"
  },
  {
    "text": "thing I need to specify with L graph is",
    "start": "393919",
    "end": "395400"
  },
  {
    "text": "just simply the graph State now this is",
    "start": "395400",
    "end": "397160"
  },
  {
    "text": "just a thing that lives throughout the",
    "start": "397160",
    "end": "398440"
  },
  {
    "text": "lifetime of My Graph it basically",
    "start": "398440",
    "end": "400280"
  },
  {
    "text": "represents all information that's shared",
    "start": "400280",
    "end": "402080"
  },
  {
    "text": "across what you might call these nodes",
    "start": "402080",
    "end": "404400"
  },
  {
    "text": "so in this case I have two particular",
    "start": "404400",
    "end": "405840"
  },
  {
    "text": "nodes and you might call this an edge so",
    "start": "405840",
    "end": "408000"
  },
  {
    "text": "this is kind of where I'm making a",
    "start": "408000",
    "end": "409160"
  },
  {
    "text": "decision um so State lives across these",
    "start": "409160",
    "end": "412199"
  },
  {
    "text": "nodes and edges so that's really it so",
    "start": "412199",
    "end": "414000"
  },
  {
    "text": "I'm going to Define my state it's going",
    "start": "414000",
    "end": "415560"
  },
  {
    "text": "to attain some information that's",
    "start": "415560",
    "end": "417039"
  },
  {
    "text": "relevant to the flow I just talked about",
    "start": "417039",
    "end": "419280"
  },
  {
    "text": "so it's contain an error message it's",
    "start": "419280",
    "end": "421120"
  },
  {
    "text": "going to contain my final generation",
    "start": "421120",
    "end": "423080"
  },
  {
    "text": "it's going to contain the messages that",
    "start": "423080",
    "end": "424360"
  },
  {
    "text": "are being passed to my",
    "start": "424360",
    "end": "425720"
  },
  {
    "text": "llm and this will all become a little",
    "start": "425720",
    "end": "427759"
  },
  {
    "text": "bit more clear as we go forward so here",
    "start": "427759",
    "end": "431000"
  },
  {
    "text": "I'm going to lay out this is basically",
    "start": "431000",
    "end": "433280"
  },
  {
    "text": "the nodes and the edges of My",
    "start": "433280",
    "end": "435639"
  },
  {
    "text": "Graph now what you'll see is for every",
    "start": "435639",
    "end": "439160"
  },
  {
    "text": "node here's my generate node and that's",
    "start": "439160",
    "end": "441639"
  },
  {
    "text": "what we laid out here",
    "start": "441639",
    "end": "443479"
  },
  {
    "text": "generate um it's going to take in the",
    "start": "443479",
    "end": "446120"
  },
  {
    "text": "state and the nodes just modify the",
    "start": "446120",
    "end": "448720"
  },
  {
    "text": "state in some way so that's how to think",
    "start": "448720",
    "end": "450199"
  },
  {
    "text": "about the nodes so in this case I take",
    "start": "450199",
    "end": "451800"
  },
  {
    "text": "in the state I unpack the state into",
    "start": "451800",
    "end": "454560"
  },
  {
    "text": "like some messages uh some of iterations",
    "start": "454560",
    "end": "457720"
  },
  {
    "text": "an error message these are things we're",
    "start": "457720",
    "end": "459400"
  },
  {
    "text": "going to use throughout our graph um so",
    "start": "459400",
    "end": "462520"
  },
  {
    "text": "then what I'm going to Simply do is",
    "start": "462520",
    "end": "465159"
  },
  {
    "text": "compute a code solution so I'm going to",
    "start": "465159",
    "end": "466599"
  },
  {
    "text": "look at my messages in and I'm going to",
    "start": "466599",
    "end": "468800"
  },
  {
    "text": "generate a solution now remember that's",
    "start": "468800",
    "end": "471319"
  },
  {
    "text": "exactly what we did up here so this is",
    "start": "471319",
    "end": "472800"
  },
  {
    "text": "actually nothing new remember look at",
    "start": "472800",
    "end": "474879"
  },
  {
    "text": "this this is just we Define a set of",
    "start": "474879",
    "end": "476680"
  },
  {
    "text": "messages invoke our code gen chain get",
    "start": "476680",
    "end": "478960"
  },
  {
    "text": "an output",
    "start": "478960",
    "end": "479960"
  },
  {
    "text": "same thing we're going to be doing in",
    "start": "479960",
    "end": "480879"
  },
  {
    "text": "our graph so this is nothing exotic",
    "start": "480879",
    "end": "482960"
  },
  {
    "text": "we've actually already tested this and",
    "start": "482960",
    "end": "485560"
  },
  {
    "text": "once that runs I'm just going to pend",
    "start": "485560",
    "end": "488120"
  },
  {
    "text": "that output of code solution to my",
    "start": "488120",
    "end": "490360"
  },
  {
    "text": "messages okay so you know again here's",
    "start": "490360",
    "end": "494280"
  },
  {
    "text": "my attempt to solve the problem I'm just",
    "start": "494280",
    "end": "495639"
  },
  {
    "text": "going to take the codes the prefix the",
    "start": "495639",
    "end": "497360"
  },
  {
    "text": "Imports and the code I'm just going to",
    "start": "497360",
    "end": "499240"
  },
  {
    "text": "add that as a new message I'm going to",
    "start": "499240",
    "end": "500960"
  },
  {
    "text": "increment my iterations we'll use as",
    "start": "500960",
    "end": "502479"
  },
  {
    "text": "iterations to determine when to stop um",
    "start": "502479",
    "end": "505680"
  },
  {
    "text": "and I'm just going to return then my",
    "start": "505680",
    "end": "507879"
  },
  {
    "text": "state with a few things here first is",
    "start": "507879",
    "end": "510759"
  },
  {
    "text": "going to be my code solution My",
    "start": "510759",
    "end": "513200"
  },
  {
    "text": "Generation that's it then it's going to",
    "start": "513200",
    "end": "515479"
  },
  {
    "text": "be my my stack of messages which is",
    "start": "515479",
    "end": "517719"
  },
  {
    "text": "basically just pended to and then the",
    "start": "517719",
    "end": "519599"
  },
  {
    "text": "number of iterations that's really it",
    "start": "519599",
    "end": "521719"
  },
  {
    "text": "that's it so nice and easy there now the",
    "start": "521719",
    "end": "523959"
  },
  {
    "text": "code check is the second kind of big",
    "start": "523959",
    "end": "525519"
  },
  {
    "text": "node that we're going to be working with",
    "start": "525519",
    "end": "526839"
  },
  {
    "text": "so our first node is Generation the",
    "start": "526839",
    "end": "528680"
  },
  {
    "text": "second node is our code checks we just",
    "start": "528680",
    "end": "530080"
  },
  {
    "text": "saw Generation generation can return the",
    "start": "530080",
    "end": "532839"
  },
  {
    "text": "the generation with the three pieces the",
    "start": "532839",
    "end": "535200"
  },
  {
    "text": "Preamble The Imports and the code block",
    "start": "535200",
    "end": "537399"
  },
  {
    "text": "now it's going to be passed to code",
    "start": "537399",
    "end": "538680"
  },
  {
    "text": "check",
    "start": "538680",
    "end": "540760"
  },
  {
    "text": "so code check is really anything we want",
    "start": "540760",
    "end": "543680"
  },
  {
    "text": "to be we can do any kind of checks on",
    "start": "543680",
    "end": "545839"
  },
  {
    "text": "this code now maybe in the best case",
    "start": "545839",
    "end": "547519"
  },
  {
    "text": "with some kind of unit test we could run",
    "start": "547519",
    "end": "549279"
  },
  {
    "text": "I'm going to show you the simplest",
    "start": "549279",
    "end": "550800"
  },
  {
    "text": "possible code check that we might want",
    "start": "550800",
    "end": "552079"
  },
  {
    "text": "to do so in this particular particular",
    "start": "552079",
    "end": "554600"
  },
  {
    "text": "case what I'm going to do is I'm I'm",
    "start": "554600",
    "end": "556640"
  },
  {
    "text": "going to get the code solution from our",
    "start": "556640",
    "end": "558279"
  },
  {
    "text": "state remember we wrote that out to",
    "start": "558279",
    "end": "560120"
  },
  {
    "text": "state so the generation contains our",
    "start": "560120",
    "end": "562079"
  },
  {
    "text": "code solution and in this node I just",
    "start": "562079",
    "end": "564200"
  },
  {
    "text": "pick it back up from State you know",
    "start": "564200",
    "end": "565720"
  },
  {
    "text": "State's pass every node I get the code",
    "start": "565720",
    "end": "568079"
  },
  {
    "text": "solution I EX exract the three pieces",
    "start": "568079",
    "end": "570240"
  },
  {
    "text": "and we just showed that above so I get",
    "start": "570240",
    "end": "571880"
  },
  {
    "text": "the prefix the Imports and the code and",
    "start": "571880",
    "end": "573800"
  },
  {
    "text": "now all I'm going to do is simply just",
    "start": "573800",
    "end": "575680"
  },
  {
    "text": "test",
    "start": "575680",
    "end": "576560"
  },
  {
    "text": "execution do does Imports execute if not",
    "start": "576560",
    "end": "580079"
  },
  {
    "text": "I'm going to throw a flag or I'm going",
    "start": "580079",
    "end": "581519"
  },
  {
    "text": "to kind of flow throw a message here",
    "start": "581519",
    "end": "583120"
  },
  {
    "text": "code import failed I'm going to take an",
    "start": "583120",
    "end": "585160"
  },
  {
    "text": "error message I'm going to pen that",
    "start": "585160",
    "end": "586920"
  },
  {
    "text": "error message to our messages object and",
    "start": "586920",
    "end": "588839"
  },
  {
    "text": "I'm going to return that that's it and",
    "start": "588839",
    "end": "592959"
  },
  {
    "text": "alternatively if that passes I'm going",
    "start": "592959",
    "end": "595279"
  },
  {
    "text": "to go ahead and try the whole thing so",
    "start": "595279",
    "end": "596760"
  },
  {
    "text": "I'm going to combine the Imports and the",
    "start": "596760",
    "end": "598079"
  },
  {
    "text": "code um I'm going to go ahead and",
    "start": "598079",
    "end": "599839"
  },
  {
    "text": "execute the the code and again if that",
    "start": "599839",
    "end": "603519"
  },
  {
    "text": "fails I'm going to basically return",
    "start": "603519",
    "end": "604839"
  },
  {
    "text": "another error message um and now if",
    "start": "604839",
    "end": "607399"
  },
  {
    "text": "there's no errors then that's great I",
    "start": "607399",
    "end": "609680"
  },
  {
    "text": "confirm that you know there's no test",
    "start": "609680",
    "end": "611440"
  },
  {
    "text": "failures I've set this error flag to no",
    "start": "611440",
    "end": "614160"
  },
  {
    "text": "and everything else the same as before I",
    "start": "614160",
    "end": "615600"
  },
  {
    "text": "return the messages I return iterations",
    "start": "615600",
    "end": "617160"
  },
  {
    "text": "I return code Solution that's it now",
    "start": "617160",
    "end": "619680"
  },
  {
    "text": "this is the final bit all we're going to",
    "start": "619680",
    "end": "622320"
  },
  {
    "text": "do here is decide whether or not to",
    "start": "622320",
    "end": "624160"
  },
  {
    "text": "finish this is basically our little",
    "start": "624160",
    "end": "625680"
  },
  {
    "text": "conditional Edge which we talked about",
    "start": "625680",
    "end": "627519"
  },
  {
    "text": "here and all this needs to to do because",
    "start": "627519",
    "end": "630480"
  },
  {
    "text": "we wrote that error flag to state so",
    "start": "630480",
    "end": "633279"
  },
  {
    "text": "again remember we wrote error no if none",
    "start": "633279",
    "end": "635240"
  },
  {
    "text": "of these tests passed we wrote error yes",
    "start": "635240",
    "end": "637040"
  },
  {
    "text": "if either one does right there and if",
    "start": "637040",
    "end": "639880"
  },
  {
    "text": "that's the case all we need to do then",
    "start": "639880",
    "end": "642120"
  },
  {
    "text": "is get our get our error from the state",
    "start": "642120",
    "end": "645120"
  },
  {
    "text": "um if it's no or we've exceed the Max",
    "start": "645120",
    "end": "647560"
  },
  {
    "text": "iterations uh then we just go ahead and",
    "start": "647560",
    "end": "649760"
  },
  {
    "text": "finish um and if yes then we go back to",
    "start": "649760",
    "end": "654360"
  },
  {
    "text": "generate that's",
    "start": "654360",
    "end": "656200"
  },
  {
    "text": "it and that's really it so we're just",
    "start": "656200",
    "end": "659560"
  },
  {
    "text": "going to find all of those",
    "start": "659560",
    "end": "662320"
  },
  {
    "text": "pieces and we're basically almost done",
    "start": "662320",
    "end": "664639"
  },
  {
    "text": "here let's just build this graph now",
    "start": "664639",
    "end": "666600"
  },
  {
    "text": "this is how in L graph you can actually",
    "start": "666600",
    "end": "668279"
  },
  {
    "text": "assemble your workflow all I need to do",
    "start": "668279",
    "end": "670279"
  },
  {
    "text": "is take that function I defined generate",
    "start": "670279",
    "end": "672320"
  },
  {
    "text": "add it as a node take the function we",
    "start": "672320",
    "end": "674000"
  },
  {
    "text": "defined code check add it as a node",
    "start": "674000",
    "end": "676880"
  },
  {
    "text": "again this is my like this is the state",
    "start": "676880",
    "end": "678560"
  },
  {
    "text": "graph um and I just build the graph here",
    "start": "678560",
    "end": "681079"
  },
  {
    "text": "set my entry point as generate um add an",
    "start": "681079",
    "end": "683920"
  },
  {
    "text": "edge and then uh so basically I go from",
    "start": "683920",
    "end": "687240"
  },
  {
    "text": "generate to check code and I go from",
    "start": "687240",
    "end": "689800"
  },
  {
    "text": "check code to basically I decide to",
    "start": "689800",
    "end": "692600"
  },
  {
    "text": "finish based",
    "start": "692600",
    "end": "694000"
  },
  {
    "text": "upon this logic right here and basically",
    "start": "694000",
    "end": "699360"
  },
  {
    "text": "if if it returns end then I end if it",
    "start": "699360",
    "end": "703000"
  },
  {
    "text": "returns generate I go back to generate",
    "start": "703000",
    "end": "705399"
  },
  {
    "text": "okay um so that's really the Crux of all",
    "start": "705399",
    "end": "708680"
  },
  {
    "text": "you need to do and I can go ahead and",
    "start": "708680",
    "end": "710200"
  },
  {
    "text": "run that and actually this will draw my",
    "start": "710200",
    "end": "711680"
  },
  {
    "text": "graph for me using this little display",
    "start": "711680",
    "end": "713279"
  },
  {
    "text": "feature right here so we can see we",
    "start": "713279",
    "end": "715000"
  },
  {
    "text": "start we go to generate we go to code",
    "start": "715000",
    "end": "717440"
  },
  {
    "text": "check optionally depending on what",
    "start": "717440",
    "end": "720120"
  },
  {
    "text": "happens from the code check based onal",
    "start": "720120",
    "end": "722440"
  },
  {
    "text": "Edge will'll go back to try to",
    "start": "722440",
    "end": "724600"
  },
  {
    "text": "regenerate um or if there's no errors we",
    "start": "724600",
    "end": "728279"
  },
  {
    "text": "go to end so that's really it it's",
    "start": "728279",
    "end": "730519"
  },
  {
    "text": "pretty",
    "start": "730519",
    "end": "731440"
  },
  {
    "text": "nice um and the one thing I'll just make",
    "start": "731440",
    "end": "735000"
  },
  {
    "text": "a note of is as we're going through this",
    "start": "735000",
    "end": "737120"
  },
  {
    "text": "flow we're actually appending to our",
    "start": "737120",
    "end": "738920"
  },
  {
    "text": "messages and so basically if the if",
    "start": "738920",
    "end": "741760"
  },
  {
    "text": "there's an error we're appending that",
    "start": "741760",
    "end": "744320"
  },
  {
    "text": "failure to our messages and we're",
    "start": "744320",
    "end": "746959"
  },
  {
    "text": "basically telling llm here is the",
    "start": "746959",
    "end": "749440"
  },
  {
    "text": "failure reflect on this error um State",
    "start": "749440",
    "end": "752800"
  },
  {
    "text": "what you think went wrong and try again",
    "start": "752800",
    "end": "755880"
  },
  {
    "text": "so that's really",
    "start": "755880",
    "end": "757399"
  },
  {
    "text": "it nice and easy and there's our",
    "start": "757399",
    "end": "760600"
  },
  {
    "text": "flow cool now let's try this out here's",
    "start": "760600",
    "end": "764440"
  },
  {
    "text": "like the simplest possible um you know",
    "start": "764440",
    "end": "767000"
  },
  {
    "text": "kind of problem write a Python program",
    "start": "767000",
    "end": "768800"
  },
  {
    "text": "that prints hello world right so let's",
    "start": "768800",
    "end": "770560"
  },
  {
    "text": "try this out I'm going to run this and",
    "start": "770560",
    "end": "773320"
  },
  {
    "text": "what's kind of nice is I have this kind",
    "start": "773320",
    "end": "775160"
  },
  {
    "text": "of this this nice kind of formatting",
    "start": "775160",
    "end": "777000"
  },
  {
    "text": "stuff you can kind of see the input um",
    "start": "777000",
    "end": "780160"
  },
  {
    "text": "yeah okay so R program that prints hello",
    "start": "780160",
    "end": "782160"
  },
  {
    "text": "world generating code solution and then",
    "start": "782160",
    "end": "784800"
  },
  {
    "text": "here's here's kind of my attempt to",
    "start": "784800",
    "end": "786079"
  },
  {
    "text": "solve it um here's actually the the",
    "start": "786079",
    "end": "789079"
  },
  {
    "text": "Imports none the code here's the code it",
    "start": "789079",
    "end": "792040"
  },
  {
    "text": "goes through the checks no test failures",
    "start": "792040",
    "end": "793959"
  },
  {
    "text": "and it ends cool now what it's nice is I",
    "start": "793959",
    "end": "797680"
  },
  {
    "text": "can go over to lsmith and I have this",
    "start": "797680",
    "end": "801040"
  },
  {
    "text": "project right here now this project",
    "start": "801040",
    "end": "804079"
  },
  {
    "text": "actually lays out exactly what we just",
    "start": "804079",
    "end": "806199"
  },
  {
    "text": "did but we can actually dig into each",
    "start": "806199",
    "end": "807600"
  },
  {
    "text": "piece so here we went we start our graph",
    "start": "807600",
    "end": "810160"
  },
  {
    "text": "we went to generate I go to again this",
    "start": "810160",
    "end": "812760"
  },
  {
    "text": "is using Cod strol model so here's here",
    "start": "812760",
    "end": "815560"
  },
  {
    "text": "is my U you know human message or my",
    "start": "815560",
    "end": "817519"
  },
  {
    "text": "question in um this is showing that it",
    "start": "817519",
    "end": "820279"
  },
  {
    "text": "does indeed invoke my function so that's",
    "start": "820279",
    "end": "822360"
  },
  {
    "text": "great um here's the prefix here's the",
    "start": "822360",
    "end": "824720"
  },
  {
    "text": "Imports here's the code block um it uses",
    "start": "824720",
    "end": "827440"
  },
  {
    "text": "a pantic tools parser to basically write",
    "start": "827440",
    "end": "830000"
  },
  {
    "text": "that out as a pantic object we talked",
    "start": "830000",
    "end": "831680"
  },
  {
    "text": "about that",
    "start": "831680",
    "end": "832600"
  },
  {
    "text": "previously um and then here's the code",
    "start": "832600",
    "end": "835199"
  },
  {
    "text": "check so basically it goes through the",
    "start": "835199",
    "end": "838360"
  },
  {
    "text": "the various code checks and you can kind",
    "start": "838360",
    "end": "840199"
  },
  {
    "text": "of check all these here um and then it",
    "start": "840199",
    "end": "843480"
  },
  {
    "text": "goes through the decision to finish um",
    "start": "843480",
    "end": "846160"
  },
  {
    "text": "and in this particular case because none",
    "start": "846160",
    "end": "847560"
  },
  {
    "text": "of the code checks failed and finished",
    "start": "847560",
    "end": "849160"
  },
  {
    "text": "so that's great so this is a good",
    "start": "849160",
    "end": "851360"
  },
  {
    "text": "example of like of kind of how the flow",
    "start": "851360",
    "end": "853800"
  },
  {
    "text": "Works in a very simple test case now",
    "start": "853800",
    "end": "855680"
  },
  {
    "text": "let's try something this a little more",
    "start": "855680",
    "end": "858199"
  },
  {
    "text": "sophisticated cool so in this case I'm",
    "start": "858199",
    "end": "861320"
  },
  {
    "text": "basically asked to vectorize a function",
    "start": "861320",
    "end": "863079"
  },
  {
    "text": "I give it a function um I show me ask it",
    "start": "863079",
    "end": "865600"
  },
  {
    "text": "to show me a test case with this with",
    "start": "865600",
    "end": "867120"
  },
  {
    "text": "this actually working okay so we can see",
    "start": "867120",
    "end": "869279"
  },
  {
    "text": "that it kicks off the flow here I want",
    "start": "869279",
    "end": "870839"
  },
  {
    "text": "to vectorize a function um here's the",
    "start": "870839",
    "end": "873720"
  },
  {
    "text": "inmt to solve the problem uh so here's",
    "start": "873720",
    "end": "876160"
  },
  {
    "text": "kind of the initial solution now what we",
    "start": "876160",
    "end": "878199"
  },
  {
    "text": "see here is your solution failed the",
    "start": "878199",
    "end": "879759"
  },
  {
    "text": "code execution test it did not Define",
    "start": "879759",
    "end": "881720"
  },
  {
    "text": "image reflect on the error attempt to",
    "start": "881720",
    "end": "883560"
  },
  {
    "text": "solve it here's my attempt to solve a",
    "start": "883560",
    "end": "885079"
  },
  {
    "text": "problem the error C because variable the",
    "start": "885079",
    "end": "887360"
  },
  {
    "text": "the variable image is not defined to",
    "start": "887360",
    "end": "888839"
  },
  {
    "text": "solve this problem so you make it kind",
    "start": "888839",
    "end": "890759"
  },
  {
    "text": "of reflect on its error and try again so",
    "start": "890759",
    "end": "893360"
  },
  {
    "text": "it goes and tries again we see it fails",
    "start": "893360",
    "end": "895480"
  },
  {
    "text": "again for a different reason isolution",
    "start": "895480",
    "end": "897279"
  },
  {
    "text": "failed the C secution test it could not",
    "start": "897279",
    "end": "898680"
  },
  {
    "text": "broadcast cast um uh 505050 into a shape",
    "start": "898680",
    "end": "903199"
  },
  {
    "text": "50-50 53 okay um so here's my here's the",
    "start": "903199",
    "end": "908360"
  },
  {
    "text": "attempt to solve the problem it kind of",
    "start": "908360",
    "end": "910320"
  },
  {
    "text": "explains itself it goes back through and",
    "start": "910320",
    "end": "913399"
  },
  {
    "text": "then all the code tests now pass um so",
    "start": "913399",
    "end": "916720"
  },
  {
    "text": "that's basically it and then",
    "start": "916720",
    "end": "918920"
  },
  {
    "text": "finish so this showcases how you can use",
    "start": "918920",
    "end": "921360"
  },
  {
    "text": "code generation using new code STW model",
    "start": "921360",
    "end": "923880"
  },
  {
    "text": "stol with self correction using Lang",
    "start": "923880",
    "end": "927160"
  },
  {
    "text": "graph and what we showed in in general",
    "start": "927160",
    "end": "930279"
  },
  {
    "text": "is the ability to to perform code",
    "start": "930279",
    "end": "932800"
  },
  {
    "text": "generation and perform arbitrary checks",
    "start": "932800",
    "end": "935319"
  },
  {
    "text": "on the output of the generation itself",
    "start": "935319",
    "end": "937240"
  },
  {
    "text": "if any checks fail Loop them back use a",
    "start": "937240",
    "end": "939839"
  },
  {
    "text": "message cue to accumulate over time uh",
    "start": "939839",
    "end": "942839"
  },
  {
    "text": "or over iterations in this flow the",
    "start": "942839",
    "end": "945199"
  },
  {
    "text": "various errors and then pass them back",
    "start": "945199",
    "end": "947160"
  },
  {
    "text": "to the LM to attempt to self-correct and",
    "start": "947160",
    "end": "950199"
  },
  {
    "text": "we seen we've seen this work pretty",
    "start": "950199",
    "end": "951600"
  },
  {
    "text": "effectively in a very simple test case",
    "start": "951600",
    "end": "953720"
  },
  {
    "text": "but I've actually seen this work really",
    "start": "953720",
    "end": "955360"
  },
  {
    "text": "well in the case of uh code generation",
    "start": "955360",
    "end": "957720"
  },
  {
    "text": "with Rag and and uh we have some other",
    "start": "957720",
    "end": "960240"
  },
  {
    "text": "uh resources on that which I'll share",
    "start": "960240",
    "end": "961639"
  },
  {
    "text": "later thanks",
    "start": "961639",
    "end": "965160"
  }
]