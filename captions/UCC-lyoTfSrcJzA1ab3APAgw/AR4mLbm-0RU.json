[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "what if you could run your AI agent as a",
    "start": "80",
    "end": "2320"
  },
  {
    "text": "tool in any client that supports",
    "start": "2320",
    "end": "4480"
  },
  {
    "text": "streamable HTTP through",
    "start": "4480",
    "end": "7800"
  },
  {
    "text": "MCP well Claude just ran our finance",
    "start": "7800",
    "end": "11200"
  },
  {
    "text": "agent a few lines in Claude desktop's",
    "start": "11200",
    "end": "14160"
  },
  {
    "text": "config zero extra code and we configured",
    "start": "14160",
    "end": "17440"
  },
  {
    "text": "our Langraph agent as a live",
    "start": "17440",
    "end": "20199"
  },
  {
    "start": "20000",
    "end": "62000"
  },
  {
    "text": "tool first what exactly is MCP it stands",
    "start": "20199",
    "end": "23600"
  },
  {
    "text": "for model context protocol and it's an",
    "start": "23600",
    "end": "25600"
  },
  {
    "text": "open standard for directly connecting",
    "start": "25600",
    "end": "27359"
  },
  {
    "text": "large language models with external data",
    "start": "27359",
    "end": "29519"
  },
  {
    "text": "sources and tools think about the",
    "start": "29519",
    "end": "31760"
  },
  {
    "text": "current pain of integrations every LLM",
    "start": "31760",
    "end": "34320"
  },
  {
    "text": "needing custom code to connect with",
    "start": "34320",
    "end": "36160"
  },
  {
    "text": "every new data source mcp solves this MM",
    "start": "36160",
    "end": "39600"
  },
  {
    "text": "integration problem with one simple",
    "start": "39600",
    "end": "41600"
  },
  {
    "text": "standard interface and adoption is",
    "start": "41600",
    "end": "43520"
  },
  {
    "text": "already strong the MCP ecosystem",
    "start": "43520",
    "end": "45680"
  },
  {
    "text": "encompasses thousands of tools and",
    "start": "45680",
    "end": "47760"
  },
  {
    "text": "continues to expand as more",
    "start": "47760",
    "end": "49600"
  },
  {
    "text": "organizations integrate it into their AI",
    "start": "49600",
    "end": "52280"
  },
  {
    "text": "workflows plus MCP provides secure",
    "start": "52280",
    "end": "55760"
  },
  {
    "text": "two-way connection meaning tools and",
    "start": "55760",
    "end": "57680"
  },
  {
    "text": "models communicate safely in real time",
    "start": "57680",
    "end": "60480"
  },
  {
    "text": "no headaches at Langchain we recognize",
    "start": "60480",
    "end": "62879"
  },
  {
    "start": "62000",
    "end": "81000"
  },
  {
    "text": "the potential of MCP to enhance AI agent",
    "start": "62879",
    "end": "65518"
  },
  {
    "text": "capabilities that's why we've integrated",
    "start": "65519",
    "end": "67680"
  },
  {
    "text": "MCP support directly into the Langraph",
    "start": "67680",
    "end": "69920"
  },
  {
    "text": "platform this integration allows",
    "start": "69920",
    "end": "72000"
  },
  {
    "text": "developers to deploy agents that are",
    "start": "72000",
    "end": "73760"
  },
  {
    "text": "immediately accessible via an MCP",
    "start": "73760",
    "end": "75600"
  },
  {
    "text": "endpoint facilitating easier connections",
    "start": "75600",
    "end": "77680"
  },
  {
    "text": "with other systems and tools now let's",
    "start": "77680",
    "end": "79920"
  },
  {
    "text": "see how you can do this yourself the",
    "start": "79920",
    "end": "81680"
  },
  {
    "start": "81000",
    "end": "157000"
  },
  {
    "text": "first step in leveraging our agents",
    "start": "81680",
    "end": "83200"
  },
  {
    "text": "deployed on Langraph platform as",
    "start": "83200",
    "end": "84960"
  },
  {
    "text": "callable MCP tools is creating a new",
    "start": "84960",
    "end": "87520"
  },
  {
    "text": "deployment so we'll navigate to the",
    "start": "87520",
    "end": "89280"
  },
  {
    "text": "deployments tab and click new deployment",
    "start": "89280",
    "end": "91840"
  },
  {
    "text": "i have already authenticated my GitHub",
    "start": "91840",
    "end": "93360"
  },
  {
    "text": "here but if you haven't this is where",
    "start": "93360",
    "end": "94560"
  },
  {
    "text": "you would do it so I'll navigate to",
    "start": "94560",
    "end": "96720"
  },
  {
    "text": "finance agent we'll give this a better",
    "start": "96720",
    "end": "98720"
  },
  {
    "text": "name called",
    "start": "98720",
    "end": "100520"
  },
  {
    "text": "my finance",
    "start": "100520",
    "end": "102759"
  },
  {
    "text": "agent we specify the git branch to look",
    "start": "102759",
    "end": "105119"
  },
  {
    "text": "in and this langraph JSON is",
    "start": "105119",
    "end": "106720"
  },
  {
    "text": "automatically populated for us",
    "start": "106720",
    "end": "108240"
  },
  {
    "text": "optionally we have the choice of",
    "start": "108240",
    "end": "109520"
  },
  {
    "text": "including any resource tags i won't for",
    "start": "109520",
    "end": "111600"
  },
  {
    "text": "the time being next we choose our",
    "start": "111600",
    "end": "113920"
  },
  {
    "text": "deployment type mcp is natively",
    "start": "113920",
    "end": "117040"
  },
  {
    "text": "supported for all deployment types so we",
    "start": "117040",
    "end": "119200"
  },
  {
    "text": "will stay with development for the time",
    "start": "119200",
    "end": "121640"
  },
  {
    "text": "being next we'll add our environment",
    "start": "121640",
    "end": "123840"
  },
  {
    "text": "variables what's really nice is if you",
    "start": "123840",
    "end": "125680"
  },
  {
    "text": "have those copied on your clipboard you",
    "start": "125680",
    "end": "127680"
  },
  {
    "text": "can paste them here and we will do the",
    "start": "127680",
    "end": "129119"
  },
  {
    "text": "formatting for you and we can see that a",
    "start": "129119",
    "end": "131520"
  },
  {
    "text": "tracing project has been created for",
    "start": "131520",
    "end": "133599"
  },
  {
    "text": "this deployment awesome let's go ahead",
    "start": "133599",
    "end": "136480"
  },
  {
    "text": "and",
    "start": "136480",
    "end": "138720"
  },
  {
    "text": "deploy here in the deployment screen we",
    "start": "139879",
    "end": "142160"
  },
  {
    "text": "can see that we are waiting for our",
    "start": "142160",
    "end": "143920"
  },
  {
    "text": "deployment to be active i'll check back",
    "start": "143920",
    "end": "145440"
  },
  {
    "text": "in when it's finished all right our",
    "start": "145440",
    "end": "148160"
  },
  {
    "text": "finance agent is deployed we're on the",
    "start": "148160",
    "end": "150239"
  },
  {
    "text": "Langraph platform deployments dashboard",
    "start": "150239",
    "end": "152879"
  },
  {
    "text": "see that green tick that means our",
    "start": "152879",
    "end": "154800"
  },
  {
    "text": "revision is deployed and healthy on the",
    "start": "154800",
    "end": "157440"
  },
  {
    "start": "157000",
    "end": "219000"
  },
  {
    "text": "right we've got our API URL for My",
    "start": "157440",
    "end": "160000"
  },
  {
    "text": "Finance Agent one click to spin it up",
    "start": "160000",
    "end": "162800"
  },
  {
    "text": "zero infrastructure",
    "start": "162800",
    "end": "164680"
  },
  {
    "text": "headaches let's click API docs this is",
    "start": "164680",
    "end": "167680"
  },
  {
    "text": "your one-stop shop for everything your",
    "start": "167680",
    "end": "169599"
  },
  {
    "text": "client needs if we scroll down and see",
    "start": "169599",
    "end": "171840"
  },
  {
    "text": "here there it is our MCP endpoint",
    "start": "171840",
    "end": "174400"
  },
  {
    "text": "implemented exactly to the streamable",
    "start": "174400",
    "end": "176239"
  },
  {
    "text": "HTTP spec that means live chunk",
    "start": "176239",
    "end": "179200"
  },
  {
    "text": "streaming of your agents responses right",
    "start": "179200",
    "end": "181120"
  },
  {
    "text": "out of the box no reverse proxies no",
    "start": "181120",
    "end": "184159"
  },
  {
    "text": "custom adapters langraph platform auto",
    "start": "184159",
    "end": "186959"
  },
  {
    "text": "exposes every deployed agent as an MCP",
    "start": "186959",
    "end": "189920"
  },
  {
    "text": "server and look at that built-in",
    "start": "189920",
    "end": "191840"
  },
  {
    "text": "security you just provide the API key",
    "start": "191840",
    "end": "194159"
  },
  {
    "text": "header and you're good to go plus every",
    "start": "194159",
    "end": "196959"
  },
  {
    "text": "request and response is captured in",
    "start": "196959",
    "end": "198400"
  },
  {
    "text": "Langmith Traces for end-to-end",
    "start": "198400",
    "end": "200920"
  },
  {
    "text": "observability in under 30 seconds we've",
    "start": "200920",
    "end": "203599"
  },
  {
    "text": "deployed an agent opened its docs and",
    "start": "203599",
    "end": "205920"
  },
  {
    "text": "discovered a standards compliant MCP",
    "start": "205920",
    "end": "208080"
  },
  {
    "text": "endpoint ready for any client that's the",
    "start": "208080",
    "end": "210640"
  },
  {
    "text": "power of Langraph platform's managed MCP",
    "start": "210640",
    "end": "213040"
  },
  {
    "text": "support deploy once connect anywhere",
    "start": "213040",
    "end": "216560"
  },
  {
    "text": "scale instantly awesome now that I have",
    "start": "216560",
    "end": "219920"
  },
  {
    "start": "219000",
    "end": "242000"
  },
  {
    "text": "my finance agent deployed I'm going to",
    "start": "219920",
    "end": "221680"
  },
  {
    "text": "go ahead and copy the URL that we want",
    "start": "221680",
    "end": "224239"
  },
  {
    "text": "to use to configure our agent as an MCP",
    "start": "224239",
    "end": "227319"
  },
  {
    "text": "tool i'm then going to open up Claude's",
    "start": "227319",
    "end": "229840"
  },
  {
    "text": "desktop config file we've configured a",
    "start": "229840",
    "end": "232159"
  },
  {
    "text": "single finance agent as our MCP server",
    "start": "232159",
    "end": "234799"
  },
  {
    "text": "and I can just paste in the API URL and",
    "start": "234799",
    "end": "237200"
  },
  {
    "text": "add the MCP suffix that's all I",
    "start": "237200",
    "end": "240519"
  },
  {
    "text": "need now that we've got our agent",
    "start": "240519",
    "end": "242640"
  },
  {
    "start": "242000",
    "end": "278000"
  },
  {
    "text": "configured as an MCP tool let's check it",
    "start": "242640",
    "end": "244720"
  },
  {
    "text": "out in action and visualize the tracing",
    "start": "244720",
    "end": "247040"
  },
  {
    "text": "support that is natively built in to",
    "start": "247040",
    "end": "248799"
  },
  {
    "text": "Langraph platform with",
    "start": "248799",
    "end": "251480"
  },
  {
    "text": "Langsmith as I submit my question we can",
    "start": "251480",
    "end": "254480"
  },
  {
    "text": "see in this window on the right the",
    "start": "254480",
    "end": "256400"
  },
  {
    "text": "Langraph platform deployment",
    "start": "256400",
    "end": "258680"
  },
  {
    "text": "page we can see the recent traces",
    "start": "258680",
    "end": "261040"
  },
  {
    "text": "populate live as we ask a question in",
    "start": "261040",
    "end": "263440"
  },
  {
    "text": "our call client opening that up will",
    "start": "263440",
    "end": "265919"
  },
  {
    "text": "show us the run tree where we can",
    "start": "265919",
    "end": "267600"
  },
  {
    "text": "visualize our trace end to end",
    "start": "267600",
    "end": "270000"
  },
  {
    "text": "understanding how our agent performed",
    "start": "270000",
    "end": "272800"
  },
  {
    "text": "and it's that easy tracing is natively",
    "start": "272800",
    "end": "274880"
  },
  {
    "text": "built in to your Langraph agents with",
    "start": "274880",
    "end": "276479"
  },
  {
    "text": "Langmith now just as we did with the",
    "start": "276479",
    "end": "278560"
  },
  {
    "start": "278000",
    "end": "340000"
  },
  {
    "text": "finance agent I've gone ahead and",
    "start": "278560",
    "end": "280160"
  },
  {
    "text": "deployed a sales agent and a marketing",
    "start": "280160",
    "end": "282160"
  },
  {
    "text": "agent i want to use these agents as",
    "start": "282160",
    "end": "284400"
  },
  {
    "text": "tools in my MCP client as well i just",
    "start": "284400",
    "end": "287840"
  },
  {
    "text": "went ahead and updated Claude's desktop",
    "start": "287840",
    "end": "289759"
  },
  {
    "text": "config with the API URLs of my two new",
    "start": "289759",
    "end": "292560"
  },
  {
    "text": "agents so if we click on the search and",
    "start": "292560",
    "end": "295280"
  },
  {
    "text": "tools button we can now see our sales",
    "start": "295280",
    "end": "298000"
  },
  {
    "text": "agent and our marketing agent registered",
    "start": "298000",
    "end": "300080"
  },
  {
    "text": "as tools let's just make sure they're",
    "start": "300080",
    "end": "302080"
  },
  {
    "text": "turned on so that we're ready to",
    "start": "302080",
    "end": "305360"
  },
  {
    "text": "go great let's now ask a question that",
    "start": "305400",
    "end": "308639"
  },
  {
    "text": "will engage multiple of our AI agents",
    "start": "308639",
    "end": "310560"
  },
  {
    "text": "that we have configured as tools",
    "start": "310560",
    "end": "314759"
  },
  {
    "text": "we can see that both the sales agent and",
    "start": "322560",
    "end": "324560"
  },
  {
    "text": "the marketing agent were called giving",
    "start": "324560",
    "end": "326560"
  },
  {
    "text": "Claude the context it needed to answer",
    "start": "326560",
    "end": "328960"
  },
  {
    "text": "our",
    "start": "328960",
    "end": "329880"
  },
  {
    "text": "question and it's as easy as that we've",
    "start": "329880",
    "end": "332400"
  },
  {
    "text": "just shown how separate agents can work",
    "start": "332400",
    "end": "334479"
  },
  {
    "text": "together as tools in any client that",
    "start": "334479",
    "end": "336800"
  },
  {
    "text": "implements streamable HTTP for custom",
    "start": "336800",
    "end": "339280"
  },
  {
    "text": "MCP tools with just one click every",
    "start": "339280",
    "end": "342240"
  },
  {
    "start": "340000",
    "end": "374000"
  },
  {
    "text": "Langraph deployment immediately becomes",
    "start": "342240",
    "end": "344160"
  },
  {
    "text": "an MCP endpoint no custom service no",
    "start": "344160",
    "end": "347600"
  },
  {
    "text": "glue code langraph platform handles the",
    "start": "347600",
    "end": "350000"
  },
  {
    "text": "heavy lifting while Langmith provides",
    "start": "350000",
    "end": "352000"
  },
  {
    "text": "full observability capturing every call",
    "start": "352000",
    "end": "354240"
  },
  {
    "text": "and response and when you're ready to",
    "start": "354240",
    "end": "356000"
  },
  {
    "text": "scale you can compose multiple agents",
    "start": "356000",
    "end": "358479"
  },
  {
    "text": "like building blocks enabling",
    "start": "358479",
    "end": "360639"
  },
  {
    "text": "sophisticated multi-step workflows ready",
    "start": "360639",
    "end": "363199"
  },
  {
    "text": "to get started deploy an agent on",
    "start": "363199",
    "end": "365199"
  },
  {
    "text": "Langraph platform and plug the MCP URL",
    "start": "365199",
    "end": "367840"
  },
  {
    "text": "into a client like Claude it takes just",
    "start": "367840",
    "end": "370240"
  },
  {
    "text": "5 minutes no glue required happy",
    "start": "370240",
    "end": "372960"
  },
  {
    "text": "building",
    "start": "372960",
    "end": "375520"
  }
]