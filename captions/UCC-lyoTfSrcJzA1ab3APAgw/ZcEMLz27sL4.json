[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "streaming is uh an incredibly important",
    "start": "1079",
    "end": "4279"
  },
  {
    "text": "ux consideration for building L Ms in a",
    "start": "4279",
    "end": "7720"
  },
  {
    "text": "few ways first of all even if you're",
    "start": "7720",
    "end": "10040"
  },
  {
    "text": "just working with a single llm call it",
    "start": "10040",
    "end": "12320"
  },
  {
    "text": "can often take a while and you might",
    "start": "12320",
    "end": "14200"
  },
  {
    "text": "want to stream individual tokens to the",
    "start": "14200",
    "end": "16358"
  },
  {
    "text": "user so they can see what's happening as",
    "start": "16359",
    "end": "18560"
  },
  {
    "text": "the llm responds second of all a lot of",
    "start": "18560",
    "end": "21519"
  },
  {
    "text": "the things that we build in the laying",
    "start": "21519",
    "end": "23080"
  },
  {
    "text": "chain are more complicated chains or",
    "start": "23080",
    "end": "25519"
  },
  {
    "text": "agents and so being able to stream the",
    "start": "25519",
    "end": "27800"
  },
  {
    "text": "intermediate steps what tool are being",
    "start": "27800",
    "end": "30439"
  },
  {
    "text": "called what the input to those tools are",
    "start": "30439",
    "end": "32279"
  },
  {
    "text": "what the output to those tools are um",
    "start": "32279",
    "end": "35239"
  },
  {
    "text": "streaming those things is really",
    "start": "35239",
    "end": "37079"
  },
  {
    "text": "important for a nice ux as well so we've",
    "start": "37079",
    "end": "40480"
  },
  {
    "text": "recently added a new method in Lang",
    "start": "40480",
    "end": "43280"
  },
  {
    "text": "chain to help with this called stream",
    "start": "43280",
    "end": "45640"
  },
  {
    "text": "events um which hooks into the Callback",
    "start": "45640",
    "end": "47960"
  },
  {
    "text": "handlers we have so it's very easily",
    "start": "47960",
    "end": "50760"
  },
  {
    "text": "modifiable and what it will do is it",
    "start": "50760",
    "end": "53520"
  },
  {
    "text": "makes it easy to stream everything",
    "start": "53520",
    "end": "56480"
  },
  {
    "text": "basically and so this video will cover",
    "start": "56480",
    "end": "59239"
  },
  {
    "text": "uh stream events so we'll also cover the",
    "start": "59239",
    "end": "61039"
  },
  {
    "text": "basic stream and a stream methods that",
    "start": "61039",
    "end": "63239"
  },
  {
    "text": "we have so these are simpler methods for",
    "start": "63239",
    "end": "65640"
  },
  {
    "text": "dealing with the end responses of of",
    "start": "65640",
    "end": "67920"
  },
  {
    "text": "chains or of models and it will take a",
    "start": "67920",
    "end": "70960"
  },
  {
    "text": "look at doing this for generic rentables",
    "start": "70960",
    "end": "73840"
  },
  {
    "text": "and then for uh link chain agents as",
    "start": "73840",
    "end": "77280"
  },
  {
    "text": "well so let's jump into it this is the",
    "start": "77280",
    "end": "81360"
  },
  {
    "text": "docs right here little known fact all of",
    "start": "81360",
    "end": "83320"
  },
  {
    "start": "83000",
    "end": "405000"
  },
  {
    "text": "these docs are also notebooks so I'm",
    "start": "83320",
    "end": "84759"
  },
  {
    "text": "going to open up the notebooks version",
    "start": "84759",
    "end": "86240"
  },
  {
    "text": "of this um let's restart my kernel um",
    "start": "86240",
    "end": "89360"
  },
  {
    "text": "just so I can do it with a clean end um",
    "start": "89360",
    "end": "92960"
  },
  {
    "text": "and yeah we're going to cover two main",
    "start": "92960",
    "end": "94119"
  },
  {
    "text": "things here we're going to cover the",
    "start": "94119",
    "end": "95159"
  },
  {
    "text": "stream and then a stream methods and",
    "start": "95159",
    "end": "98000"
  },
  {
    "text": "these are methods for streaming the",
    "start": "98000",
    "end": "99240"
  },
  {
    "text": "final outputs of chains and then we're",
    "start": "99240",
    "end": "101520"
  },
  {
    "text": "going to cover the stream events um",
    "start": "101520",
    "end": "104200"
  },
  {
    "text": "method we're going to cover the stream",
    "start": "104200",
    "end": "106079"
  },
  {
    "text": "events method and this is a way to",
    "start": "106079",
    "end": "107360"
  },
  {
    "text": "stream all the events that happen within",
    "start": "107360",
    "end": "109079"
  },
  {
    "text": "a",
    "start": "109079",
    "end": "110200"
  },
  {
    "text": "chain so um all runnable objects in link",
    "start": "110200",
    "end": "114079"
  },
  {
    "text": "chain and so these are every these are",
    "start": "114079",
    "end": "115479"
  },
  {
    "text": "all chains these are all models these",
    "start": "115479",
    "end": "117520"
  },
  {
    "text": "are basically all objects in link chain",
    "start": "117520",
    "end": "119600"
  },
  {
    "text": "EX Expos a sync method called stream and",
    "start": "119600",
    "end": "122640"
  },
  {
    "text": "an async variant called a stream and so",
    "start": "122640",
    "end": "125640"
  },
  {
    "text": "these methods will stream the final",
    "start": "125640",
    "end": "127280"
  },
  {
    "text": "output in chunks yielding each chunk as",
    "start": "127280",
    "end": "129640"
  },
  {
    "text": "soon as it's",
    "start": "129640",
    "end": "131800"
  },
  {
    "text": "available and so as we see as we'll go",
    "start": "131800",
    "end": "134800"
  },
  {
    "text": "along streaming is only available if for",
    "start": "134800",
    "end": "138879"
  },
  {
    "text": "if every step in the program kind of",
    "start": "138879",
    "end": "140480"
  },
  {
    "text": "like knows how to stream things along so",
    "start": "140480",
    "end": "142519"
  },
  {
    "text": "if you're working with one step in the",
    "start": "142519",
    "end": "144239"
  },
  {
    "text": "program like an llm if it knows how to",
    "start": "144239",
    "end": "146280"
  },
  {
    "text": "stream then you can use stream if you're",
    "start": "146280",
    "end": "148640"
  },
  {
    "text": "working with multiple maybe one of them",
    "start": "148640",
    "end": "150640"
  },
  {
    "text": "doesn't know how to stream and we'll see",
    "start": "150640",
    "end": "152160"
  },
  {
    "text": "an example of this later on then it",
    "start": "152160",
    "end": "154040"
  },
  {
    "text": "might not",
    "start": "154040",
    "end": "155599"
  },
  {
    "text": "stream so let's start by looking at the",
    "start": "155599",
    "end": "158599"
  },
  {
    "text": "llms themselves so we'll use an",
    "start": "158599",
    "end": "160519"
  },
  {
    "text": "anthropic model here and basically what",
    "start": "160519",
    "end": "162920"
  },
  {
    "text": "we'll do is we'll iterate over the",
    "start": "162920",
    "end": "164319"
  },
  {
    "text": "chunks in uh model.am things that come",
    "start": "164319",
    "end": "167800"
  },
  {
    "text": "out of these are going to be AI messages",
    "start": "167800",
    "end": "170319"
  },
  {
    "text": "um and so uh what we're going to do is",
    "start": "170319",
    "end": "173319"
  },
  {
    "text": "we're going to append them to a list and",
    "start": "173319",
    "end": "175360"
  },
  {
    "text": "then we're going to print um chunk got",
    "start": "175360",
    "end": "177920"
  },
  {
    "text": "do content um and so this is just a",
    "start": "177920",
    "end": "180159"
  },
  {
    "text": "Content field on the aage and we're",
    "start": "180159",
    "end": "181800"
  },
  {
    "text": "going to print this little operator to",
    "start": "181800",
    "end": "183319"
  },
  {
    "text": "to show this the spaces between the",
    "start": "183319",
    "end": "186080"
  },
  {
    "text": "streams so we can see that it starts to",
    "start": "186080",
    "end": "188400"
  },
  {
    "text": "stream as it responds if we look at one",
    "start": "188400",
    "end": "190720"
  },
  {
    "text": "of these chunks we can see as AI message",
    "start": "190720",
    "end": "193120"
  },
  {
    "text": "these AI messages we've we've made kind",
    "start": "193120",
    "end": "195159"
  },
  {
    "text": "of like addable under the hood so you",
    "start": "195159",
    "end": "197000"
  },
  {
    "text": "can add them up and you can get the",
    "start": "197000",
    "end": "198200"
  },
  {
    "text": "final",
    "start": "198200",
    "end": "200560"
  },
  {
    "text": "response okay so that's a simple llm now",
    "start": "200840",
    "end": "204200"
  },
  {
    "text": "we're going to look at chains and so in",
    "start": "204200",
    "end": "206640"
  },
  {
    "text": "this chain and so chain is kind of like",
    "start": "206640",
    "end": "208879"
  },
  {
    "text": "anything constructed in L chain",
    "start": "208879",
    "end": "210439"
  },
  {
    "text": "expression language this chain will just",
    "start": "210439",
    "end": "212360"
  },
  {
    "text": "be a really simple one where we have a",
    "start": "212360",
    "end": "214599"
  },
  {
    "text": "prompt a parser um and then the chain is",
    "start": "214599",
    "end": "217760"
  },
  {
    "text": "prompt model parser um we will invoke it",
    "start": "217760",
    "end": "222040"
  },
  {
    "text": "uh with a stream so we'll use async here",
    "start": "222040",
    "end": "224519"
  },
  {
    "text": "and we'll stream over things and we can",
    "start": "224519",
    "end": "226120"
  },
  {
    "text": "see what happens as it goes through and",
    "start": "226120",
    "end": "228400"
  },
  {
    "text": "so basically we're asking we have a",
    "start": "228400",
    "end": "230120"
  },
  {
    "text": "prompt that's formatting it with uh uh",
    "start": "230120",
    "end": "232599"
  },
  {
    "text": "it's tell me a joke about blah um we",
    "start": "232599",
    "end": "235400"
  },
  {
    "text": "have this model and then we have this",
    "start": "235400",
    "end": "236720"
  },
  {
    "text": "parser and this parser is just",
    "start": "236720",
    "end": "237879"
  },
  {
    "text": "responsible for taking the cont content",
    "start": "237879",
    "end": "240079"
  },
  {
    "text": "property off of the message and so it",
    "start": "240079",
    "end": "241840"
  },
  {
    "text": "just return to string instead of this AI",
    "start": "241840",
    "end": "244879"
  },
  {
    "text": "message the model and the pars Expos",
    "start": "244879",
    "end": "247200"
  },
  {
    "text": "stream method so we'll see that it will",
    "start": "247200",
    "end": "248640"
  },
  {
    "text": "stream out as it",
    "start": "248640",
    "end": "251560"
  },
  {
    "text": "completes there we",
    "start": "252640",
    "end": "255120"
  },
  {
    "text": "go all right so we can also see an",
    "start": "255120",
    "end": "257959"
  },
  {
    "text": "example of other things um so uh a more",
    "start": "257959",
    "end": "261880"
  },
  {
    "text": "complicated parer that we have um is the",
    "start": "261880",
    "end": "264520"
  },
  {
    "text": "Json output parser which takes in a",
    "start": "264520",
    "end": "267280"
  },
  {
    "text": "response from a language model that is",
    "start": "267280",
    "end": "269240"
  },
  {
    "text": "supposed to be Json um but it might be",
    "start": "269240",
    "end": "271479"
  },
  {
    "text": "like half completed Json right so this",
    "start": "271479",
    "end": "273320"
  },
  {
    "text": "happens when you're streaming the the",
    "start": "273320",
    "end": "275440"
  },
  {
    "text": "like when you when you're halfway",
    "start": "275440",
    "end": "276680"
  },
  {
    "text": "through the stream of a Json blob it's",
    "start": "276680",
    "end": "278600"
  },
  {
    "text": "not valid Json and so this parser deals",
    "start": "278600",
    "end": "281080"
  },
  {
    "text": "with a lot of those peculiarities and",
    "start": "281080",
    "end": "282560"
  },
  {
    "text": "parses it accordingly and so we can see",
    "start": "282560",
    "end": "284680"
  },
  {
    "text": "here that it will start to stream out",
    "start": "284680",
    "end": "287280"
  },
  {
    "text": "the more completed kind of like Json",
    "start": "287280",
    "end": "289080"
  },
  {
    "text": "blob as we create",
    "start": "289080",
    "end": "292120"
  },
  {
    "text": "it here we'll see an example um where",
    "start": "293039",
    "end": "296520"
  },
  {
    "text": "this doesn't stream um so this is a",
    "start": "296520",
    "end": "300080"
  },
  {
    "text": "method that just returns all the country",
    "start": "300080",
    "end": "302360"
  },
  {
    "text": "names um and so here if we add this on",
    "start": "302360",
    "end": "305000"
  },
  {
    "text": "the end of The Blob we can see that",
    "start": "305000",
    "end": "307240"
  },
  {
    "text": "there's actually no streaming that will",
    "start": "307240",
    "end": "308759"
  },
  {
    "text": "happen because this final thing does it",
    "start": "308759",
    "end": "312000"
  },
  {
    "text": "it doesn't have it doesn't yield things",
    "start": "312000",
    "end": "313560"
  },
  {
    "text": "it doesn't stream it doesn't take in it",
    "start": "313560",
    "end": "315160"
  },
  {
    "text": "doesn't take in a a generator and it",
    "start": "315160",
    "end": "317080"
  },
  {
    "text": "doesn't return a generator and so it",
    "start": "317080",
    "end": "318479"
  },
  {
    "text": "kind of blocks",
    "start": "318479",
    "end": "321120"
  },
  {
    "text": "everything so it just returns it once at",
    "start": "321120",
    "end": "323440"
  },
  {
    "text": "the end if we want to change that um we",
    "start": "323440",
    "end": "327280"
  },
  {
    "text": "can change this and this will start to",
    "start": "327280",
    "end": "329520"
  },
  {
    "text": "yield",
    "start": "329520",
    "end": "331879"
  },
  {
    "text": "things and so why is this happening um I",
    "start": "333600",
    "end": "338000"
  },
  {
    "text": "think this is happening because I have a",
    "start": "338000",
    "end": "340720"
  },
  {
    "text": "uh I have some flush issues here",
    "start": "340720",
    "end": "345840"
  },
  {
    "text": "um let's do this see if this changes",
    "start": "345840",
    "end": "349840"
  },
  {
    "text": "things yeah so we can see here once I",
    "start": "349840",
    "end": "352400"
  },
  {
    "text": "add in this so there's some flush issues",
    "start": "352400",
    "end": "354160"
  },
  {
    "text": "going on but basically we can see that",
    "start": "354160",
    "end": "355479"
  },
  {
    "text": "it streams back um tokens and again",
    "start": "355479",
    "end": "358600"
  },
  {
    "text": "that's because this yields",
    "start": "358600",
    "end": "362120"
  },
  {
    "text": "things com some built-in components like",
    "start": "363120",
    "end": "365639"
  },
  {
    "text": "retrievers these don't stream anything",
    "start": "365639",
    "end": "368479"
  },
  {
    "text": "so if I call uh the um if I call this it",
    "start": "368479",
    "end": "372680"
  },
  {
    "text": "just returns a list of documents we",
    "start": "372680",
    "end": "374479"
  },
  {
    "text": "haven't really seen a need for",
    "start": "374479",
    "end": "376479"
  },
  {
    "text": "retrievers to be streaming so that's why",
    "start": "376479",
    "end": "378120"
  },
  {
    "text": "we kind of haven't implemented a version",
    "start": "378120",
    "end": "379919"
  },
  {
    "text": "of that but you can still use these",
    "start": "379919",
    "end": "381960"
  },
  {
    "text": "within chains um that uh uh you can",
    "start": "381960",
    "end": "385400"
  },
  {
    "text": "still use retrievers within chains and",
    "start": "385400",
    "end": "386919"
  },
  {
    "text": "still stream the final results so here's",
    "start": "386919",
    "end": "388639"
  },
  {
    "text": "like a really simple rag chain that gets",
    "start": "388639",
    "end": "391160"
  },
  {
    "text": "the context back um so basically calls a",
    "start": "391160",
    "end": "393720"
  },
  {
    "text": "retriever gets some documents passes it",
    "start": "393720",
    "end": "395919"
  },
  {
    "text": "to a prompt passes it to a model passes",
    "start": "395919",
    "end": "397479"
  },
  {
    "text": "it to an output pars here these still",
    "start": "397479",
    "end": "399319"
  },
  {
    "text": "stream so we'll see that the final",
    "start": "399319",
    "end": "401240"
  },
  {
    "text": "response we can",
    "start": "401240",
    "end": "404319"
  },
  {
    "text": "stream all right so those are covering",
    "start": "404840",
    "end": "406960"
  },
  {
    "start": "405000",
    "end": "615000"
  },
  {
    "text": "kind of like the basics of stream and",
    "start": "406960",
    "end": "409360"
  },
  {
    "text": "aam the the big uh kind of like",
    "start": "409360",
    "end": "413080"
  },
  {
    "text": "limitation of these is that it only",
    "start": "413080",
    "end": "415120"
  },
  {
    "text": "streams the final kind of like output of",
    "start": "415120",
    "end": "417560"
  },
  {
    "text": "a of a chain often times we might want",
    "start": "417560",
    "end": "419919"
  },
  {
    "text": "to stream the the intermediate steps or",
    "start": "419919",
    "end": "422360"
  },
  {
    "text": "the events that happen within the chain",
    "start": "422360",
    "end": "424560"
  },
  {
    "text": "along the way so we'll walk through this",
    "start": "424560",
    "end": "427400"
  },
  {
    "text": "new method um stream events um and the",
    "start": "427400",
    "end": "431639"
  },
  {
    "text": "events that it produces are aligned with",
    "start": "431639",
    "end": "434039"
  },
  {
    "text": "the Callback handlers that we have and",
    "start": "434039",
    "end": "435639"
  },
  {
    "text": "so we have a bunch of different types",
    "start": "435639",
    "end": "437879"
  },
  {
    "text": "here that we've listed here um so we",
    "start": "437879",
    "end": "440479"
  },
  {
    "text": "kind of like have uh uh so this is for",
    "start": "440479",
    "end": "442800"
  },
  {
    "text": "chat models and llms very similar we we",
    "start": "442800",
    "end": "445800"
  },
  {
    "text": "yield something on the start we we yield",
    "start": "445800",
    "end": "449599"
  },
  {
    "text": "something on the end and then on stream",
    "start": "449599",
    "end": "452440"
  },
  {
    "text": "we also yield each token if the model",
    "start": "452440",
    "end": "454479"
  },
  {
    "text": "support streaming same for llms um same",
    "start": "454479",
    "end": "457759"
  },
  {
    "text": "for chains same for tools same for",
    "start": "457759",
    "end": "460520"
  },
  {
    "text": "retrievers and then same for prompts",
    "start": "460520",
    "end": "462639"
  },
  {
    "text": "prompts just has start and",
    "start": "462639",
    "end": "464560"
  },
  {
    "text": "end um one thing to note is that this is",
    "start": "464560",
    "end": "467520"
  },
  {
    "text": "a beta API um and would love to hear any",
    "start": "467520",
    "end": "470599"
  },
  {
    "text": "feedback about it so please let us know",
    "start": "470599",
    "end": "473639"
  },
  {
    "text": "so here we can start we can use the the",
    "start": "473639",
    "end": "476960"
  },
  {
    "text": "we can just use the um model mod and we",
    "start": "476960",
    "end": "479720"
  },
  {
    "text": "can we can call a simple model and we",
    "start": "479720",
    "end": "481440"
  },
  {
    "text": "can take a look at the stream events",
    "start": "481440",
    "end": "483080"
  },
  {
    "text": "that are associated with this model one",
    "start": "483080",
    "end": "485080"
  },
  {
    "text": "thing that you may notice is this",
    "start": "485080",
    "end": "486319"
  },
  {
    "text": "version thing in a stream events so what",
    "start": "486319",
    "end": "489599"
  },
  {
    "text": "is this uh basically we're documenting",
    "start": "489599",
    "end": "491639"
  },
  {
    "text": "kind of like the API for this a stream",
    "start": "491639",
    "end": "493599"
  },
  {
    "text": "events um interface as mentioned it's a",
    "start": "493599",
    "end": "496919"
  },
  {
    "text": "beta interface it may change so we want",
    "start": "496919",
    "end": "499199"
  },
  {
    "text": "to uh make it make it easier to do that",
    "start": "499199",
    "end": "502680"
  },
  {
    "text": "in the",
    "start": "502680",
    "end": "503639"
  },
  {
    "text": "future let's take a look at what some of",
    "start": "503639",
    "end": "505599"
  },
  {
    "text": "these events are so we can see that the",
    "start": "505599",
    "end": "507400"
  },
  {
    "text": "first one is on chat Model start so it",
    "start": "507400",
    "end": "509960"
  },
  {
    "text": "starts kind of like the the streaming",
    "start": "509960",
    "end": "512200"
  },
  {
    "text": "the first event it hits the chat Model",
    "start": "512200",
    "end": "513919"
  },
  {
    "text": "start and then it's chat model stream",
    "start": "513919",
    "end": "517000"
  },
  {
    "text": "chat model Stream So basically what's",
    "start": "517000",
    "end": "518599"
  },
  {
    "text": "happening is the input's going in it's",
    "start": "518599",
    "end": "520640"
  },
  {
    "text": "starting the chat model and then after",
    "start": "520640",
    "end": "522200"
  },
  {
    "text": "that it's getting token by token if we",
    "start": "522200",
    "end": "524039"
  },
  {
    "text": "look at the last results we can see that",
    "start": "524039",
    "end": "526320"
  },
  {
    "text": "it's on chat model stream and then on",
    "start": "526320",
    "end": "528519"
  },
  {
    "text": "chat model end so this is a very simple",
    "start": "528519",
    "end": "530959"
  },
  {
    "text": "single call to a chat model that first",
    "start": "530959",
    "end": "534000"
  },
  {
    "text": "calls the event on chat Model start then",
    "start": "534000",
    "end": "536399"
  },
  {
    "text": "calls stream on each token and then",
    "start": "536399",
    "end": "538240"
  },
  {
    "text": "calls on chat model at the",
    "start": "538240",
    "end": "540600"
  },
  {
    "text": "end let's take a look at the chain that",
    "start": "540600",
    "end": "543000"
  },
  {
    "text": "we have so now we have this model and we",
    "start": "543000",
    "end": "545200"
  },
  {
    "text": "have this Json output puror let's gather",
    "start": "545200",
    "end": "547440"
  },
  {
    "text": "the list of events and we can explore",
    "start": "547440",
    "end": "548800"
  },
  {
    "text": "them this",
    "start": "548800",
    "end": "551160"
  },
  {
    "text": "way so the first three events that we",
    "start": "552360",
    "end": "554959"
  },
  {
    "text": "see are actually all on blank start so",
    "start": "554959",
    "end": "558160"
  },
  {
    "text": "first we have on chain start because we",
    "start": "558160",
    "end": "560279"
  },
  {
    "text": "enter the overall chain here then we",
    "start": "560279",
    "end": "562720"
  },
  {
    "text": "have on chat Model start because that's",
    "start": "562720",
    "end": "564640"
  },
  {
    "text": "the first one but then the model streams",
    "start": "564640",
    "end": "566880"
  },
  {
    "text": "things through so it passes a generator",
    "start": "566880",
    "end": "568519"
  },
  {
    "text": "through it passes that generator through",
    "start": "568519",
    "end": "570279"
  },
  {
    "text": "right away to the output parser and so",
    "start": "570279",
    "end": "571959"
  },
  {
    "text": "we immediately hit kind of like on",
    "start": "571959",
    "end": "573519"
  },
  {
    "text": "parser",
    "start": "573519",
    "end": "575920"
  },
  {
    "text": "start we can explore this a little bit",
    "start": "575920",
    "end": "578399"
  },
  {
    "text": "more by looking at the by looking at",
    "start": "578399",
    "end": "581920"
  },
  {
    "text": "some different events so let's look at",
    "start": "581920",
    "end": "583640"
  },
  {
    "text": "maybe like the last three",
    "start": "583640",
    "end": "586320"
  },
  {
    "text": "events in here we can see that we have",
    "start": "586320",
    "end": "588560"
  },
  {
    "text": "on chat model end on parser end and then",
    "start": "588560",
    "end": "591760"
  },
  {
    "text": "on chain end um so this is this this",
    "start": "591760",
    "end": "594839"
  },
  {
    "text": "makes sense it's uh you know if we",
    "start": "594839",
    "end": "597200"
  },
  {
    "text": "imagine kind of like the the SE quence",
    "start": "597200",
    "end": "600160"
  },
  {
    "text": "of of chain encapsulating a model and",
    "start": "600160",
    "end": "603079"
  },
  {
    "text": "then a parser basically the model will",
    "start": "603079",
    "end": "605320"
  },
  {
    "text": "kind of like finish then the parser will",
    "start": "605320",
    "end": "607399"
  },
  {
    "text": "finish and then the chain will finish",
    "start": "607399",
    "end": "609920"
  },
  {
    "text": "let's look at maybe some of the middle",
    "start": "609920",
    "end": "611480"
  },
  {
    "text": "ones so if we look at like 3 to",
    "start": "611480",
    "end": "614839"
  },
  {
    "text": "six we can see that what happens maybe",
    "start": "614839",
    "end": "617640"
  },
  {
    "text": "let's do 3 to seven for just a slightly",
    "start": "617640",
    "end": "619640"
  },
  {
    "text": "nicer thing um we can see that it's a",
    "start": "619640",
    "end": "622200"
  },
  {
    "text": "mingling of of on chat model stream on",
    "start": "622200",
    "end": "624800"
  },
  {
    "text": "Pur stream on chat model stream um sorry",
    "start": "624800",
    "end": "628079"
  },
  {
    "text": "on chat model stream on par of stream on",
    "start": "628079",
    "end": "630320"
  },
  {
    "text": "chain stream so what's happening is as",
    "start": "630320",
    "end": "632600"
  },
  {
    "text": "the chunks occur because we stream them",
    "start": "632600",
    "end": "634279"
  },
  {
    "text": "all the way through we first see one",
    "start": "634279",
    "end": "636600"
  },
  {
    "text": "token come out of the chat model that",
    "start": "636600",
    "end": "638000"
  },
  {
    "text": "gets passed through to the parser that",
    "start": "638000",
    "end": "639320"
  },
  {
    "text": "gets passed through to the end of the",
    "start": "639320",
    "end": "640560"
  },
  {
    "text": "chain and so it's the sequence of",
    "start": "640560",
    "end": "644000"
  },
  {
    "text": "events so now we can take a look at uh",
    "start": "644000",
    "end": "647200"
  },
  {
    "text": "using these real time to do some",
    "start": "647200",
    "end": "649519"
  },
  {
    "text": "streaming so we will do this by parsing",
    "start": "649519",
    "end": "652639"
  },
  {
    "text": "the revent the the the events that get",
    "start": "652639",
    "end": "654920"
  },
  {
    "text": "emitted by the stream events so first",
    "start": "654920",
    "end": "657880"
  },
  {
    "text": "we'll take a look at each event and",
    "start": "657880",
    "end": "659240"
  },
  {
    "text": "we'll take a look at what the kind of",
    "start": "659240",
    "end": "660600"
  },
  {
    "text": "the event is then we can basically do",
    "start": "660600",
    "end": "662880"
  },
  {
    "text": "things depending on what the kind is and",
    "start": "662880",
    "end": "664720"
  },
  {
    "text": "we'll just do some simple string",
    "start": "664720",
    "end": "666279"
  },
  {
    "text": "matching based on the",
    "start": "666279",
    "end": "667760"
  },
  {
    "text": "name so if the chat if it's on chat",
    "start": "667760",
    "end": "670240"
  },
  {
    "text": "model stream this is when it's printing",
    "start": "670240",
    "end": "671839"
  },
  {
    "text": "out a token we'll P we'll print this",
    "start": "671839",
    "end": "674240"
  },
  {
    "text": "chat model chunk and then if it's on",
    "start": "674240",
    "end": "677000"
  },
  {
    "text": "parser stream this is when it's uh going",
    "start": "677000",
    "end": "679839"
  },
  {
    "text": "through the output parser we will pass",
    "start": "679839",
    "end": "681959"
  },
  {
    "text": "that and we'll set flush equals true",
    "start": "681959",
    "end": "684560"
  },
  {
    "text": "this will get rid of some of the",
    "start": "684560",
    "end": "685440"
  },
  {
    "text": "flushing issues that I had above and",
    "start": "685440",
    "end": "688600"
  },
  {
    "text": "yeah we'll we'll just only do this for",
    "start": "688600",
    "end": "689839"
  },
  {
    "text": "the first",
    "start": "689839",
    "end": "691000"
  },
  {
    "text": "30 so we can see now that we start",
    "start": "691000",
    "end": "693440"
  },
  {
    "text": "printing things out and it's",
    "start": "693440",
    "end": "694519"
  },
  {
    "text": "intermingled with chap model and parser",
    "start": "694519",
    "end": "697200"
  },
  {
    "text": "because basically the chat model starts",
    "start": "697200",
    "end": "699440"
  },
  {
    "text": "accumulating tokens and at some point",
    "start": "699440",
    "end": "701680"
  },
  {
    "text": "then the parser emits something um but",
    "start": "701680",
    "end": "704160"
  },
  {
    "text": "but they start streaming kind of like at",
    "start": "704160",
    "end": "705959"
  },
  {
    "text": "the same",
    "start": "705959",
    "end": "708399"
  },
  {
    "text": "time there might often be a lot of",
    "start": "710880",
    "end": "713360"
  },
  {
    "text": "different events coming out from your",
    "start": "713360",
    "end": "714839"
  },
  {
    "text": "chains when you have complicated ones",
    "start": "714839",
    "end": "716680"
  },
  {
    "text": "with more types of models um um",
    "start": "716680",
    "end": "719360"
  },
  {
    "text": "different types of tools subchains",
    "start": "719360",
    "end": "721120"
  },
  {
    "text": "things like that and so we want to make",
    "start": "721120",
    "end": "722399"
  },
  {
    "text": "it really easy to basically um filter",
    "start": "722399",
    "end": "726639"
  },
  {
    "text": "these events we have a few ways of doing",
    "start": "726639",
    "end": "728600"
  },
  {
    "text": "that one is by name so you can assign",
    "start": "728600",
    "end": "731240"
  },
  {
    "text": "any runnable so again a runnable is just",
    "start": "731240",
    "end": "733639"
  },
  {
    "text": "a model or a prompt or a chain or an",
    "start": "733639",
    "end": "735680"
  },
  {
    "text": "output parser you can assign it with a",
    "start": "735680",
    "end": "738079"
  },
  {
    "text": "run name and then you can filter um the",
    "start": "738079",
    "end": "740519"
  },
  {
    "text": "events by include names so here we give",
    "start": "740519",
    "end": "743639"
  },
  {
    "text": "uh the model the Run name model the",
    "start": "743639",
    "end": "746399"
  },
  {
    "text": "output parser the Run name my parser we",
    "start": "746399",
    "end": "748320"
  },
  {
    "text": "have include names only my parser and",
    "start": "748320",
    "end": "750240"
  },
  {
    "text": "then if we print out events we will only",
    "start": "750240",
    "end": "752000"
  },
  {
    "text": "get events related to the output parser",
    "start": "752000",
    "end": "754160"
  },
  {
    "text": "because we're filtering out the ones",
    "start": "754160",
    "end": "755720"
  },
  {
    "text": "with the Run name model if we switch it",
    "start": "755720",
    "end": "757600"
  },
  {
    "text": "up and we go model then we only get ones",
    "start": "757600",
    "end": "760560"
  },
  {
    "text": "associated with the",
    "start": "760560",
    "end": "762639"
  },
  {
    "text": "model another way to filter is by type",
    "start": "762639",
    "end": "764880"
  },
  {
    "text": "so we have the same chain here um but",
    "start": "764880",
    "end": "766839"
  },
  {
    "text": "we're just going to uh change include",
    "start": "766839",
    "end": "769079"
  },
  {
    "text": "types and so now include types we're",
    "start": "769079",
    "end": "770839"
  },
  {
    "text": "going to set next to chat model this",
    "start": "770839",
    "end": "772600"
  },
  {
    "text": "will get all chat models so if you want",
    "start": "772600",
    "end": "774880"
  },
  {
    "text": "to get all chat models regardless of the",
    "start": "774880",
    "end": "776519"
  },
  {
    "text": "name that you give them um you can you",
    "start": "776519",
    "end": "778399"
  },
  {
    "text": "can get them this",
    "start": "778399",
    "end": "780199"
  },
  {
    "text": "way tags are another way to do it tags",
    "start": "780199",
    "end": "783160"
  },
  {
    "text": "are basically inherited from any child",
    "start": "783160",
    "end": "785560"
  },
  {
    "text": "component so here we're going to give",
    "start": "785560",
    "end": "787839"
  },
  {
    "text": "this whole chain the tags my chain and",
    "start": "787839",
    "end": "790880"
  },
  {
    "text": "then we're going to stream all events",
    "start": "790880",
    "end": "792720"
  },
  {
    "text": "and include tags my chain my chain with",
    "start": "792720",
    "end": "796040"
  },
  {
    "text": "so the way that tags work it's not just",
    "start": "796040",
    "end": "798040"
  },
  {
    "text": "events associated with this chain it's",
    "start": "798040",
    "end": "799480"
  },
  {
    "text": "with any sub child components as well so",
    "start": "799480",
    "end": "802399"
  },
  {
    "text": "if we stream it out we see that we start",
    "start": "802399",
    "end": "804160"
  },
  {
    "text": "to get everything we get chain um we get",
    "start": "804160",
    "end": "807320"
  },
  {
    "text": "onchain start on chat model on parser",
    "start": "807320",
    "end": "809480"
  },
  {
    "text": "start in this case because we taged the",
    "start": "809480",
    "end": "811720"
  },
  {
    "text": "whole chain with my chain this is",
    "start": "811720",
    "end": "814879"
  },
  {
    "text": "everything if we take a look at",
    "start": "816440",
    "end": "818120"
  },
  {
    "text": "non-streaming components again we can",
    "start": "818120",
    "end": "820360"
  },
  {
    "text": "see that so this is the this is the one",
    "start": "820360",
    "end": "822920"
  },
  {
    "text": "that blocks the final result um doesn't",
    "start": "822920",
    "end": "826199"
  },
  {
    "text": "stream if we look at a stream again we",
    "start": "826199",
    "end": "828560"
  },
  {
    "text": "this is the same example as above it",
    "start": "828560",
    "end": "829800"
  },
  {
    "text": "doesn't stream but if we do stream",
    "start": "829800",
    "end": "831240"
  },
  {
    "text": "events it does and because that's get",
    "start": "831240",
    "end": "833320"
  },
  {
    "text": "they get passed through up until that",
    "start": "833320",
    "end": "834839"
  },
  {
    "text": "point so we can see kind of like",
    "start": "834839",
    "end": "836320"
  },
  {
    "text": "everything going",
    "start": "836320",
    "end": "837759"
  },
  {
    "text": "on",
    "start": "837759",
    "end": "840240"
  },
  {
    "start": "840000",
    "end": "1271000"
  },
  {
    "text": "another thing this is a slightly more",
    "start": "840240",
    "end": "841720"
  },
  {
    "text": "advanced one is basically if you have um",
    "start": "841720",
    "end": "845839"
  },
  {
    "text": "if you have basically custom tools and",
    "start": "845839",
    "end": "848160"
  },
  {
    "text": "they have inside them a runnable um then",
    "start": "848160",
    "end": "850880"
  },
  {
    "text": "what you want to do is you want to",
    "start": "850880",
    "end": "851959"
  },
  {
    "text": "propagate the call back so that",
    "start": "851959",
    "end": "853839"
  },
  {
    "text": "otherwise no stream events will be",
    "start": "853839",
    "end": "855360"
  },
  {
    "text": "generated a common example of this is if",
    "start": "855360",
    "end": "857279"
  },
  {
    "text": "you have a tool for an agent and that",
    "start": "857279",
    "end": "859519"
  },
  {
    "text": "tool calls an llm you need to make sure",
    "start": "859519",
    "end": "861839"
  },
  {
    "text": "to propagate the the callbacks correctly",
    "start": "861839",
    "end": "865240"
  },
  {
    "text": "um so here is an example of it not",
    "start": "865240",
    "end": "868800"
  },
  {
    "text": "propagating",
    "start": "868800",
    "end": "869839"
  },
  {
    "text": "correctly um and so you can see that",
    "start": "869839",
    "end": "873079"
  },
  {
    "text": "there is basically just the stuff for",
    "start": "873079",
    "end": "875519"
  },
  {
    "text": "tools because even though it calls this",
    "start": "875519",
    "end": "877920"
  },
  {
    "text": "runnable inside of the tool the",
    "start": "877920",
    "end": "879959"
  },
  {
    "text": "callbacks aren't propagated so it",
    "start": "879959",
    "end": "881320"
  },
  {
    "text": "doesn't actually know that exists if we",
    "start": "881320",
    "end": "883120"
  },
  {
    "text": "now propagate them and you can do that",
    "start": "883120",
    "end": "884880"
  },
  {
    "text": "by just adding in callbacks as an",
    "start": "884880",
    "end": "886759"
  },
  {
    "text": "argument to this tool function um and",
    "start": "886759",
    "end": "889199"
  },
  {
    "text": "then passing it in through callbacks",
    "start": "889199",
    "end": "891680"
  },
  {
    "text": "here um you can see now that we get this",
    "start": "891680",
    "end": "894279"
  },
  {
    "text": "onchain start and onchain end event and",
    "start": "894279",
    "end": "896560"
  },
  {
    "text": "these occur in the middle",
    "start": "896560",
    "end": "900680"
  },
  {
    "text": "and so these are I think more examples",
    "start": "901560",
    "end": "903079"
  },
  {
    "text": "of just the",
    "start": "903079",
    "end": "905639"
  },
  {
    "text": "same all right so that covers basic",
    "start": "907519",
    "end": "910360"
  },
  {
    "text": "streaming stuff we get most of the",
    "start": "910360",
    "end": "913320"
  },
  {
    "text": "questions around streaming around agents",
    "start": "913320",
    "end": "915560"
  },
  {
    "text": "and so I want to show two examples of",
    "start": "915560",
    "end": "917720"
  },
  {
    "text": "doing",
    "start": "917720",
    "end": "919399"
  },
  {
    "text": "that so this is the streaming page in",
    "start": "919399",
    "end": "922639"
  },
  {
    "text": "the Lang chain documentation that shows",
    "start": "922639",
    "end": "925000"
  },
  {
    "text": "how to stream with the agent executor so",
    "start": "925000",
    "end": "927959"
  },
  {
    "text": "let's restart the kernel so we can see",
    "start": "927959",
    "end": "929720"
  },
  {
    "text": "what's going on here if you haven't if",
    "start": "929720",
    "end": "932120"
  },
  {
    "text": "you don't know what agents are check",
    "start": "932120",
    "end": "933959"
  },
  {
    "text": "them out in a separate video I'll link",
    "start": "933959",
    "end": "935240"
  },
  {
    "text": "to one in the",
    "start": "935240",
    "end": "937040"
  },
  {
    "text": "description basically with agents the",
    "start": "937040",
    "end": "939040"
  },
  {
    "text": "first thing we're going to do is we're",
    "start": "939040",
    "end": "940839"
  },
  {
    "text": "going to define a model and we're going",
    "start": "940839",
    "end": "942319"
  },
  {
    "text": "to make sure that streaming set equal to",
    "start": "942319",
    "end": "943880"
  },
  {
    "text": "true this is so that it's this is",
    "start": "943880",
    "end": "946079"
  },
  {
    "text": "necessary so that it it streams no",
    "start": "946079",
    "end": "948000"
  },
  {
    "text": "matter where it's called from so in an",
    "start": "948000",
    "end": "949959"
  },
  {
    "text": "agent it will be called within the agent",
    "start": "949959",
    "end": "951519"
  },
  {
    "text": "many times so we set streaming equals to",
    "start": "951519",
    "end": "953680"
  },
  {
    "text": "True um and then we Define our tools um",
    "start": "953680",
    "end": "957079"
  },
  {
    "text": "and so these are just two example tools",
    "start": "957079",
    "end": "958639"
  },
  {
    "text": "tools um we can play around with them",
    "start": "958639",
    "end": "961360"
  },
  {
    "text": "and then we initialize the agent and so",
    "start": "961360",
    "end": "963880"
  },
  {
    "text": "here we can see that we are going to",
    "start": "963880",
    "end": "966040"
  },
  {
    "text": "first pull a prompt and we're going to",
    "start": "966040",
    "end": "967880"
  },
  {
    "text": "use this prompt for agent we're then",
    "start": "967880",
    "end": "969959"
  },
  {
    "text": "going to list out the tools we're then",
    "start": "969959",
    "end": "971880"
  },
  {
    "text": "going to create the open AA tools agent",
    "start": "971880",
    "end": "974560"
  },
  {
    "text": "and we're going to give the model here a",
    "start": "974560",
    "end": "976680"
  },
  {
    "text": "tag agent llm and then we're going to",
    "start": "976680",
    "end": "979519"
  },
  {
    "text": "create the agent executor this is the",
    "start": "979519",
    "end": "981120"
  },
  {
    "text": "runtime for the agent um and we're going",
    "start": "981120",
    "end": "983240"
  },
  {
    "text": "to give it run name",
    "start": "983240",
    "end": "986040"
  },
  {
    "text": "agent this covers streaming so this is",
    "start": "986120",
    "end": "988759"
  },
  {
    "text": "the streaming of the agent the streaming",
    "start": "988759",
    "end": "990079"
  },
  {
    "text": "of the agent does the individual steps",
    "start": "990079",
    "end": "992519"
  },
  {
    "text": "so that's nice but often times we want",
    "start": "992519",
    "end": "993800"
  },
  {
    "text": "to get the individual tokens as",
    "start": "993800",
    "end": "996639"
  },
  {
    "text": "well so let's stream let's go down to",
    "start": "996639",
    "end": "999160"
  },
  {
    "text": "custom streaming with events so here we",
    "start": "999160",
    "end": "1001759"
  },
  {
    "text": "can do the same thing that we had before",
    "start": "1001759",
    "end": "1004079"
  },
  {
    "text": "so we have the input we'll use version",
    "start": "1004079",
    "end": "1006079"
  },
  {
    "text": "one we're using a stream events and now",
    "start": "1006079",
    "end": "1008199"
  },
  {
    "text": "we can start doing stuff with the uh the",
    "start": "1008199",
    "end": "1011920"
  },
  {
    "text": "events that are",
    "start": "1011920",
    "end": "1013199"
  },
  {
    "text": "emitted so if onchain start and if the",
    "start": "1013199",
    "end": "1016560"
  },
  {
    "text": "event name was agent so this is",
    "start": "1016560",
    "end": "1019319"
  },
  {
    "text": "basically this is if you remember back",
    "start": "1019319",
    "end": "1021440"
  },
  {
    "text": "up",
    "start": "1021440",
    "end": "1022560"
  },
  {
    "text": "here we tagged the agent executor with",
    "start": "1022560",
    "end": "1027000"
  },
  {
    "text": "the Run name agent so this is basically",
    "start": "1027000",
    "end": "1028640"
  },
  {
    "text": "saying whenever on on the start and end",
    "start": "1028640",
    "end": "1030798"
  },
  {
    "text": "of",
    "start": "1030799",
    "end": "1032360"
  },
  {
    "text": "this we are going to print out this and",
    "start": "1032360",
    "end": "1037160"
  },
  {
    "text": "then same thing on the end of this we're",
    "start": "1037160",
    "end": "1038400"
  },
  {
    "text": "going to print out this and this is",
    "start": "1038400",
    "end": "1039959"
  },
  {
    "text": "needed because there's a lot of",
    "start": "1039959",
    "end": "1041160"
  },
  {
    "text": "subchains within this agent um there's",
    "start": "1041160",
    "end": "1043918"
  },
  {
    "text": "places where we kind of like do the",
    "start": "1043919",
    "end": "1045319"
  },
  {
    "text": "prompt into the model um those are",
    "start": "1045319",
    "end": "1047319"
  },
  {
    "text": "subchains we really care about this",
    "start": "1047319",
    "end": "1048640"
  },
  {
    "text": "overall agent and then we care about the",
    "start": "1048640",
    "end": "1051440"
  },
  {
    "text": "streaming of the tokens from the chat",
    "start": "1051440",
    "end": "1054400"
  },
  {
    "text": "model so we are going to uh basically if",
    "start": "1054400",
    "end": "1057360"
  },
  {
    "text": "it's on chat model stream and if the",
    "start": "1057360",
    "end": "1060080"
  },
  {
    "text": "content is exists and so there's",
    "start": "1060080",
    "end": "1063039"
  },
  {
    "text": "actually cases where the content doesn't",
    "start": "1063039",
    "end": "1064520"
  },
  {
    "text": "exist and this is when tools may be",
    "start": "1064520",
    "end": "1065960"
  },
  {
    "text": "called we can we can play around with",
    "start": "1065960",
    "end": "1067240"
  },
  {
    "text": "this and see what that looks like after",
    "start": "1067240",
    "end": "1068440"
  },
  {
    "text": "but for now only if there's content",
    "start": "1068440",
    "end": "1070480"
  },
  {
    "text": "we're going to stream that and then",
    "start": "1070480",
    "end": "1071480"
  },
  {
    "text": "we'll also stream the tool start and",
    "start": "1071480",
    "end": "1073120"
  },
  {
    "text": "Tool end so if we do this we can see",
    "start": "1073120",
    "end": "1075880"
  },
  {
    "text": "that it starts printing things out you",
    "start": "1075880",
    "end": "1077120"
  },
  {
    "text": "can see that it really quickly streamed",
    "start": "1077120",
    "end": "1078919"
  },
  {
    "text": "that um and then gets that so if we take",
    "start": "1078919",
    "end": "1080600"
  },
  {
    "text": "a closer look we can see that it prints",
    "start": "1080600",
    "end": "1082159"
  },
  {
    "text": "out starting agent we then get a bunch",
    "start": "1082159",
    "end": "1083799"
  },
  {
    "text": "of information about the tool um tool",
    "start": "1083799",
    "end": "1087159"
  },
  {
    "text": "one tool two and then it starts uh",
    "start": "1087159",
    "end": "1090280"
  },
  {
    "text": "streaming the final response we can also",
    "start": "1090280",
    "end": "1092799"
  },
  {
    "text": "change this so that it always prints out",
    "start": "1092799",
    "end": "1096559"
  },
  {
    "text": "the content and so now what we'll",
    "start": "1096559",
    "end": "1098960"
  },
  {
    "text": "see yeah so we'll see here so these",
    "start": "1098960",
    "end": "1102000"
  },
  {
    "text": "things are when it actually so okay so",
    "start": "1102000",
    "end": "1105120"
  },
  {
    "text": "this is when the content didn't exist we",
    "start": "1105120",
    "end": "1107200"
  },
  {
    "text": "can maybe even just print out what",
    "start": "1107200",
    "end": "1109200"
  },
  {
    "text": "exactly it",
    "start": "1109200",
    "end": "1112080"
  },
  {
    "text": "was yeah here we can see that it prints",
    "start": "1112240",
    "end": "1114400"
  },
  {
    "text": "out the whole chunk and so we can see",
    "start": "1114400",
    "end": "1116120"
  },
  {
    "text": "that the tool calls um and it's still",
    "start": "1116120",
    "end": "1118480"
  },
  {
    "text": "streaming kind of like stuff um which is",
    "start": "1118480",
    "end": "1121320"
  },
  {
    "text": "why it looks incomplete but basically",
    "start": "1121320",
    "end": "1123360"
  },
  {
    "text": "this is printing out the um individual",
    "start": "1123360",
    "end": "1126120"
  },
  {
    "text": "chunks which have the chunks of the tool",
    "start": "1126120",
    "end": "1128240"
  },
  {
    "text": "call in it so there's no content but",
    "start": "1128240",
    "end": "1130880"
  },
  {
    "text": "there's the chunks of the tool call and",
    "start": "1130880",
    "end": "1132400"
  },
  {
    "text": "that's what we're printing out here that",
    "start": "1132400",
    "end": "1134559"
  },
  {
    "text": "covers streaming with agent executor",
    "start": "1134559",
    "end": "1136720"
  },
  {
    "text": "there's one more thing I want to go over",
    "start": "1136720",
    "end": "1138440"
  },
  {
    "text": "which is streaming with L graph L graph",
    "start": "1138440",
    "end": "1140880"
  },
  {
    "text": "is a package that we introduced that",
    "start": "1140880",
    "end": "1142600"
  },
  {
    "text": "makes it really easy to create uh agent",
    "start": "1142600",
    "end": "1145360"
  },
  {
    "text": "run times as graphs and or state",
    "start": "1145360",
    "end": "1148039"
  },
  {
    "text": "machines essentially the same thing and",
    "start": "1148039",
    "end": "1150799"
  },
  {
    "text": "so because Lan graph is built on top of",
    "start": "1150799",
    "end": "1153320"
  },
  {
    "text": "Lane chain and is uh runnable at the end",
    "start": "1153320",
    "end": "1156280"
  },
  {
    "text": "of the day it has this exact same",
    "start": "1156280",
    "end": "1158440"
  },
  {
    "text": "interface so if we go over to L graph we",
    "start": "1158440",
    "end": "1161559"
  },
  {
    "text": "can see in example of",
    "start": "1161559",
    "end": "1164039"
  },
  {
    "text": "this um let's also restart the kernel",
    "start": "1164039",
    "end": "1167600"
  },
  {
    "text": "here",
    "start": "1167600",
    "end": "1169559"
  },
  {
    "text": "we can create our tools we can create",
    "start": "1169559",
    "end": "1171400"
  },
  {
    "text": "our tool executor which just runs tools",
    "start": "1171400",
    "end": "1174240"
  },
  {
    "text": "we can create the model again we set",
    "start": "1174240",
    "end": "1176280"
  },
  {
    "text": "streaming equals to True um for for chat",
    "start": "1176280",
    "end": "1179280"
  },
  {
    "text": "open",
    "start": "1179280",
    "end": "1180120"
  },
  {
    "text": "AI um we bind the functions to the model",
    "start": "1180120",
    "end": "1183679"
  },
  {
    "text": "so it knows which tool it has available",
    "start": "1183679",
    "end": "1185760"
  },
  {
    "text": "we're now creating the nodes in lingraph",
    "start": "1185760",
    "end": "1187720"
  },
  {
    "text": "if you aren't familiar with this I'll",
    "start": "1187720",
    "end": "1189000"
  },
  {
    "text": "also link to a video for lra so you",
    "start": "1189000",
    "end": "1190760"
  },
  {
    "text": "should check that out we just did a",
    "start": "1190760",
    "end": "1192039"
  },
  {
    "text": "whole series of them on on YouTube We",
    "start": "1192039",
    "end": "1195120"
  },
  {
    "text": "Define a bunch of our nodes here uh um",
    "start": "1195120",
    "end": "1199039"
  },
  {
    "text": "again we'll cover this in a video",
    "start": "1199039",
    "end": "1200520"
  },
  {
    "text": "separately or it's already been covered",
    "start": "1200520",
    "end": "1201960"
  },
  {
    "text": "in a separate video we Define our graph",
    "start": "1201960",
    "end": "1205480"
  },
  {
    "text": "here um and then this app that we get",
    "start": "1205480",
    "end": "1208360"
  },
  {
    "text": "back this is a runnable like any other",
    "start": "1208360",
    "end": "1210159"
  },
  {
    "text": "thing that's constructed with Lang chain",
    "start": "1210159",
    "end": "1211600"
  },
  {
    "text": "expression language so we can start",
    "start": "1211600",
    "end": "1213159"
  },
  {
    "text": "taking a look at it and uh uh using it",
    "start": "1213159",
    "end": "1216440"
  },
  {
    "text": "in the same way so we'll use a stream",
    "start": "1216440",
    "end": "1219360"
  },
  {
    "text": "events we'll we'll look at the type of",
    "start": "1219360",
    "end": "1221679"
  },
  {
    "text": "the event if it's a chat model Stream So",
    "start": "1221679",
    "end": "1224000"
  },
  {
    "text": "if it is a uh token basically we'll do",
    "start": "1224000",
    "end": "1226799"
  },
  {
    "text": "the same thing where we print it out if",
    "start": "1226799",
    "end": "1228280"
  },
  {
    "text": "it's not empty um and then we also print",
    "start": "1228280",
    "end": "1230520"
  },
  {
    "text": "out the on tool start and the on tool",
    "start": "1230520",
    "end": "1232159"
  },
  {
    "text": "end so we'll we'll run this with the",
    "start": "1232159",
    "end": "1234559"
  },
  {
    "text": "inputs what is the weather and",
    "start": "1234559",
    "end": "1237360"
  },
  {
    "text": "SF we can see that we get back or it's",
    "start": "1237360",
    "end": "1240280"
  },
  {
    "text": "logged the the starting input for the",
    "start": "1240280",
    "end": "1242760"
  },
  {
    "text": "tool we get the output and it start",
    "start": "1242760",
    "end": "1244600"
  },
  {
    "text": "streaming back the response um of the",
    "start": "1244600",
    "end": "1246840"
  },
  {
    "text": "tokens there that's basically all I",
    "start": "1246840",
    "end": "1249559"
  },
  {
    "text": "wanted to cover in this video streaming",
    "start": "1249559",
    "end": "1251840"
  },
  {
    "text": "is super important to llm applications",
    "start": "1251840",
    "end": "1255280"
  },
  {
    "text": "and so hopefully this new stream event",
    "start": "1255280",
    "end": "1258280"
  },
  {
    "text": "method will make it really easy to",
    "start": "1258280",
    "end": "1261320"
  },
  {
    "text": "stream back what is going on inside your",
    "start": "1261320",
    "end": "1263360"
  },
  {
    "text": "applications to the end user again this",
    "start": "1263360",
    "end": "1265840"
  },
  {
    "text": "is in beta so please let us know if you",
    "start": "1265840",
    "end": "1267919"
  },
  {
    "text": "have any feedback or questions thank",
    "start": "1267919",
    "end": "1270919"
  },
  {
    "text": "you",
    "start": "1270919",
    "end": "1273919"
  }
]