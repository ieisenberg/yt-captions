[
  {
    "text": "left pad an 11 line piece of code broke",
    "start": "0",
    "end": "3600"
  },
  {
    "text": "the internet and just recently had a",
    "start": "3600",
    "end": "5880"
  },
  {
    "text": "second incident that involves me so I",
    "start": "5880",
    "end": "9240"
  },
  {
    "text": "might have made a mistake where I",
    "start": "9240",
    "end": "10679"
  },
  {
    "text": "thought I could program a faster version",
    "start": "10679",
    "end": "12780"
  },
  {
    "text": "of left pad live and the results uh were",
    "start": "12780",
    "end": "16560"
  },
  {
    "text": "not faster it goes to here left pad with",
    "start": "16560",
    "end": "19020"
  },
  {
    "text": "this one okay so it looks like it's",
    "start": "19020",
    "end": "20820"
  },
  {
    "text": "looked like mine is slower",
    "start": "20820",
    "end": "23600"
  },
  {
    "text": "you hate to see it at first it inspired",
    "start": "23600",
    "end": "26519"
  },
  {
    "text": "a meme then Ember hex made an actually",
    "start": "26519",
    "end": "28800"
  },
  {
    "text": "fast version then the creator of crab",
    "start": "28800",
    "end": "30779"
  },
  {
    "text": "laying through his hat in the ring even",
    "start": "30779",
    "end": "32520"
  },
  {
    "text": "faster than Embers it might is still so",
    "start": "32520",
    "end": "35820"
  },
  {
    "text": "slow a Renaissance of left pad happened",
    "start": "35820",
    "end": "39540"
  },
  {
    "text": "and other people were joining in and",
    "start": "39540",
    "end": "42000"
  },
  {
    "text": "then a competition was born who had the",
    "start": "42000",
    "end": "45180"
  },
  {
    "text": "fastest left pad submissions were made",
    "start": "45180",
    "end": "47820"
  },
  {
    "text": "more submissions were made then",
    "start": "47820",
    "end": "49860"
  },
  {
    "text": "corrected and meanwhile I was hating",
    "start": "49860",
    "end": "52260"
  },
  {
    "text": "life on YouTube",
    "start": "52260",
    "end": "54719"
  },
  {
    "text": "I've officially cured of imposter",
    "start": "54719",
    "end": "56760"
  },
  {
    "text": "syndrome",
    "start": "56760",
    "end": "57840"
  },
  {
    "text": "too spicy it even stack Overflow had",
    "start": "57840",
    "end": "61379"
  },
  {
    "text": "their own bespoke solution and it was",
    "start": "61379",
    "end": "63840"
  },
  {
    "text": "recursive not only that but there's also",
    "start": "63840",
    "end": "66180"
  },
  {
    "text": "a native left pad solution provided in",
    "start": "66180",
    "end": "69060"
  },
  {
    "text": "modern JavaScript and we need to figure",
    "start": "69060",
    "end": "70979"
  },
  {
    "text": "out which left pad is the fastest and",
    "start": "70979",
    "end": "73799"
  },
  {
    "text": "find out do micro benchmarks lie yes",
    "start": "73799",
    "end": "76500"
  },
  {
    "text": "they do so this competition has been",
    "start": "76500",
    "end": "78360"
  },
  {
    "text": "about micro benchmarks but here's the",
    "start": "78360",
    "end": "80340"
  },
  {
    "text": "thing is that some of you might not even",
    "start": "80340",
    "end": "81659"
  },
  {
    "text": "know what micro benchmarks are well",
    "start": "81659",
    "end": "84240"
  },
  {
    "text": "they're as simple as this you write a",
    "start": "84240",
    "end": "85740"
  },
  {
    "text": "function you wish to test you've run it",
    "start": "85740",
    "end": "87240"
  },
  {
    "text": "a bunch of times taking a bunch of time",
    "start": "87240",
    "end": "88799"
  },
  {
    "text": "differentials and you see which function",
    "start": "88799",
    "end": "91080"
  },
  {
    "text": "performs better than the other you have",
    "start": "91080",
    "end": "92759"
  },
  {
    "text": "different implementations and you hope",
    "start": "92759",
    "end": "94619"
  },
  {
    "text": "one of them is going to perform way",
    "start": "94619",
    "end": "96600"
  },
  {
    "text": "faster then you've run it a whole bunch",
    "start": "96600",
    "end": "98280"
  },
  {
    "text": "and you see that some of them are much",
    "start": "98280",
    "end": "99840"
  },
  {
    "text": "slower say mine or the stack Overflow",
    "start": "99840",
    "end": "102119"
  },
  {
    "text": "one and some of them are way faster like",
    "start": "102119",
    "end": "104100"
  },
  {
    "text": "Embers or the native one or the special",
    "start": "104100",
    "end": "106680"
  },
  {
    "text": "case one that I also have in a right",
    "start": "106680",
    "end": "109439"
  },
  {
    "text": "and then you call that a day right you",
    "start": "109439",
    "end": "111240"
  },
  {
    "text": "say hey my code is fast well here's the",
    "start": "111240",
    "end": "114360"
  },
  {
    "text": "deal it's actually not fast you actually",
    "start": "114360",
    "end": "116040"
  },
  {
    "text": "don't even know if they're fast in fact",
    "start": "116040",
    "end": "117540"
  },
  {
    "text": "you just might be lied to but why well",
    "start": "117540",
    "end": "120060"
  },
  {
    "text": "first off you're probably running them",
    "start": "120060",
    "end": "121259"
  },
  {
    "text": "on your computer which if I just go P",
    "start": "121259",
    "end": "123180"
  },
  {
    "text": "grep node I don't even know",
    "start": "123180",
    "end": "125100"
  },
  {
    "text": "dude I must have a Bitcoin miner on my",
    "start": "125100",
    "end": "127380"
  },
  {
    "text": "machine I do have Zig running hey calm",
    "start": "127380",
    "end": "129720"
  },
  {
    "text": "down ladies and our choosers okay I'm",
    "start": "129720",
    "end": "132060"
  },
  {
    "text": "taken tests also often hide",
    "start": "132060",
    "end": "133920"
  },
  {
    "text": "implementation details such as garbage",
    "start": "133920",
    "end": "135840"
  },
  {
    "text": "collection when you run these micro",
    "start": "135840",
    "end": "136980"
  },
  {
    "text": "benchmarks they don't necessarily",
    "start": "136980",
    "end": "138720"
  },
  {
    "text": "trigger all the things that could happen",
    "start": "138720",
    "end": "140520"
  },
  {
    "text": "when you're running in production and",
    "start": "140520",
    "end": "142680"
  },
  {
    "text": "finally it depends on what you're",
    "start": "142680",
    "end": "143819"
  },
  {
    "text": "actually doing in your function the",
    "start": "143819",
    "end": "145560"
  },
  {
    "text": "thing about JavaScript is that strings",
    "start": "145560",
    "end": "147180"
  },
  {
    "text": "aren't strings they're actually rope",
    "start": "147180",
    "end": "148800"
  },
  {
    "text": "data structures and there's a lot of",
    "start": "148800",
    "end": "150480"
  },
  {
    "text": "optimizations around concatenation and",
    "start": "150480",
    "end": "152640"
  },
  {
    "text": "depending with a heavier penalization of",
    "start": "152640",
    "end": "154920"
  },
  {
    "text": "iterating over each character so that",
    "start": "154920",
    "end": "156900"
  },
  {
    "text": "means if we're just appending a bunch of",
    "start": "156900",
    "end": "158520"
  },
  {
    "text": "strings together it may look good on",
    "start": "158520",
    "end": "160680"
  },
  {
    "text": "paper but when you actually use the",
    "start": "160680",
    "end": "162300"
  },
  {
    "text": "string to do something say send it",
    "start": "162300",
    "end": "164099"
  },
  {
    "text": "across the internet or print it out it",
    "start": "164099",
    "end": "166440"
  },
  {
    "text": "has to iterate over a more complicated",
    "start": "166440",
    "end": "168420"
  },
  {
    "text": "structure to get that string back out so",
    "start": "168420",
    "end": "170519"
  },
  {
    "text": "you pay none of the cost of using your",
    "start": "170519",
    "end": "172920"
  },
  {
    "text": "string you only pay the cost of",
    "start": "172920",
    "end": "174840"
  },
  {
    "text": "producing it which could be cheaper thus",
    "start": "174840",
    "end": "176879"
  },
  {
    "text": "giving you misleading results so how do",
    "start": "176879",
    "end": "179700"
  },
  {
    "text": "we determine which left pad is actually",
    "start": "179700",
    "end": "181620"
  },
  {
    "text": "faster well first I created a server set",
    "start": "181620",
    "end": "184260"
  },
  {
    "text": "up Apache benchmark script and ensure",
    "start": "184260",
    "end": "186360"
  },
  {
    "text": "proper sleep between each and manually",
    "start": "186360",
    "end": "188160"
  },
  {
    "text": "execute garbage collection on the server",
    "start": "188160",
    "end": "190560"
  },
  {
    "text": "if no requests have happened within one",
    "start": "190560",
    "end": "192300"
  },
  {
    "text": "second send 50 million requests that",
    "start": "192300",
    "end": "194519"
  },
  {
    "text": "took about 36 hours to complete I'd",
    "start": "194519",
    "end": "196680"
  },
  {
    "text": "personally like to thank lenode for",
    "start": "196680",
    "end": "198300"
  },
  {
    "text": "giving me an instance to run this on and",
    "start": "198300",
    "end": "200340"
  },
  {
    "text": "not shutting me down after 50 million",
    "start": "200340",
    "end": "202260"
  },
  {
    "text": "requests",
    "start": "202260",
    "end": "203400"
  },
  {
    "text": "thanks Andrew create a parser to parse",
    "start": "203400",
    "end": "205680"
  },
  {
    "text": "the Apache Benchmark results and",
    "start": "205680",
    "end": "207480"
  },
  {
    "text": "calculate the average of medians import",
    "start": "207480",
    "end": "209280"
  },
  {
    "text": "results into Google spreadsheets charts",
    "start": "209280",
    "end": "212040"
  },
  {
    "text": "before we dive into the charts let me",
    "start": "212040",
    "end": "213840"
  },
  {
    "text": "kind of explain what the data is you're",
    "start": "213840",
    "end": "215580"
  },
  {
    "text": "looking at so each one of these points",
    "start": "215580",
    "end": "217860"
  },
  {
    "text": "is the average of the median so what I",
    "start": "217860",
    "end": "220200"
  },
  {
    "text": "did is I do like twelve and a half",
    "start": "220200",
    "end": "221459"
  },
  {
    "text": "thousand requests and I'd take the",
    "start": "221459",
    "end": "223019"
  },
  {
    "text": "median time of that and then I do it",
    "start": "223019",
    "end": "224700"
  },
  {
    "text": "again and I do it again and I do it",
    "start": "224700",
    "end": "226140"
  },
  {
    "text": "again and after a bunch of those",
    "start": "226140",
    "end": "227340"
  },
  {
    "text": "requests I'd have a several amount of",
    "start": "227340",
    "end": "229019"
  },
  {
    "text": "medians and then I take the average of",
    "start": "229019",
    "end": "230879"
  },
  {
    "text": "those so each one of these represents",
    "start": "230879",
    "end": "232440"
  },
  {
    "text": "somewhere between 50 to 100 000 requests",
    "start": "232440",
    "end": "235799"
  },
  {
    "text": "each and then of course down here I just",
    "start": "235799",
    "end": "237780"
  },
  {
    "text": "simply summed all those numbers across",
    "start": "237780",
    "end": "239879"
  },
  {
    "text": "every size of requests and then I",
    "start": "239879",
    "end": "241860"
  },
  {
    "text": "ordered these columns according to who",
    "start": "241860",
    "end": "243360"
  },
  {
    "text": "had the largest sum all right so this",
    "start": "243360",
    "end": "245040"
  },
  {
    "text": "chart is probably the most important",
    "start": "245040",
    "end": "246659"
  },
  {
    "text": "chart to look at is the summed of the",
    "start": "246659",
    "end": "248760"
  },
  {
    "text": "median averages on the y-axis we have",
    "start": "248760",
    "end": "251159"
  },
  {
    "text": "milliseconds and on the x-axis we have",
    "start": "251159",
    "end": "253200"
  },
  {
    "text": "the different left pads summed averages",
    "start": "253200",
    "end": "255420"
  },
  {
    "text": "of the medians so worst place came in as",
    "start": "255420",
    "end": "258180"
  },
  {
    "text": "the stack Overflow tail recursive",
    "start": "258180",
    "end": "260459"
  },
  {
    "text": "version which I'm a bit surprised by",
    "start": "260459",
    "end": "262380"
  },
  {
    "text": "then came left pad commanding a strong",
    "start": "262380",
    "end": "266280"
  },
  {
    "text": "second worst place then look at this",
    "start": "266280",
    "end": "270919"
  },
  {
    "text": "I'm talking about you Tom it hurt but",
    "start": "275220",
    "end": "278040"
  },
  {
    "text": "the fastest really came down to left pad",
    "start": "278040",
    "end": "280440"
  },
  {
    "text": "Travi and Native they're really within a",
    "start": "280440",
    "end": "283020"
  },
  {
    "text": "margin of error of each other so what is",
    "start": "283020",
    "end": "284940"
  },
  {
    "text": "the takeaway of this the takeaway is use",
    "start": "284940",
    "end": "287100"
  },
  {
    "text": "native methods they're way better you",
    "start": "287100",
    "end": "289380"
  },
  {
    "text": "don't have to be clever you don't have",
    "start": "289380",
    "end": "291240"
  },
  {
    "text": "the right code that looks like that",
    "start": "291240",
    "end": "293160"
  },
  {
    "text": "whatever what is this and the best part",
    "start": "293160",
    "end": "295800"
  },
  {
    "text": "is is that as new techniques come out as",
    "start": "295800",
    "end": "298020"
  },
  {
    "text": "things happen over time you don't have",
    "start": "298020",
    "end": "299820"
  },
  {
    "text": "to make these weird changes to your code",
    "start": "299820",
    "end": "301860"
  },
  {
    "text": "where you did these weird incantations",
    "start": "301860",
    "end": "303540"
  },
  {
    "text": "to figure out what codes actually faster",
    "start": "303540",
    "end": "306120"
  },
  {
    "text": "than the other code instead you know the",
    "start": "306120",
    "end": "308040"
  },
  {
    "text": "platform is motivated to make a fast",
    "start": "308040",
    "end": "309840"
  },
  {
    "text": "product so stick with syntax or vendor",
    "start": "309840",
    "end": "312419"
  },
  {
    "text": "implemented options where possible and",
    "start": "312419",
    "end": "314759"
  },
  {
    "text": "you will mostly get the best performance",
    "start": "314759",
    "end": "316560"
  },
  {
    "text": "but if you ever feel spicy and you want",
    "start": "316560",
    "end": "318660"
  },
  {
    "text": "to do power of two string concatenation",
    "start": "318660",
    "end": "321180"
  },
  {
    "text": "and bit shifting well go ahead give it a",
    "start": "321180",
    "end": "324000"
  },
  {
    "text": "try which is funny because that's",
    "start": "324000",
    "end": "325380"
  },
  {
    "text": "actually how string dot repeat works is",
    "start": "325380",
    "end": "328320"
  },
  {
    "text": "power of two string concatenation and",
    "start": "328320",
    "end": "330180"
  },
  {
    "text": "bit shifting in V8 I don't I have no",
    "start": "330180",
    "end": "332820"
  },
  {
    "text": "idea why that's fast I literally have no",
    "start": "332820",
    "end": "334800"
  },
  {
    "text": "idea hey if you like this press the like",
    "start": "334800",
    "end": "336780"
  },
  {
    "text": "button press subscribe come on give me",
    "start": "336780",
    "end": "338699"
  },
  {
    "text": "some signals okay if you want more of",
    "start": "338699",
    "end": "340560"
  },
  {
    "text": "this send me the signals make comments",
    "start": "340560",
    "end": "342600"
  },
  {
    "text": "do all the stupid things you know you're",
    "start": "342600",
    "end": "344220"
  },
  {
    "text": "supposed to do already okay because",
    "start": "344220",
    "end": "345660"
  },
  {
    "text": "YouTube highly favors that so if you",
    "start": "345660",
    "end": "347880"
  },
  {
    "text": "don't do it it makes me feel like this",
    "start": "347880",
    "end": "349620"
  },
  {
    "text": "is a failure and then I feel like a",
    "start": "349620",
    "end": "351720"
  },
  {
    "text": "failure and then my wife thinks I'm a",
    "start": "351720",
    "end": "353880"
  },
  {
    "text": "failure don't do it to the wife of Jen",
    "start": "353880",
    "end": "355800"
  },
  {
    "text": "this is for you Travi",
    "start": "355800",
    "end": "359060"
  }
]