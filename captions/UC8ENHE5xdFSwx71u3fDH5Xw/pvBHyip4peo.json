[
  {
    "text": "oh yeah my last point there is i i trust the history of what my developers did more than the history of what they think",
    "start": "80",
    "end": "7200"
  },
  {
    "text": "they did and merge is what happened rebase is what they think happened and what they want to pretend happened if",
    "start": "7200",
    "end": "12639"
  },
  {
    "text": "you're exclusively working with developers whose imagination is better than their commits rebase away but i",
    "start": "12639",
    "end": "18320"
  },
  {
    "text": "want to make sure that our history is true is the true history so i think this is where this is this bleeds right into the",
    "start": "18320",
    "end": "24240"
  },
  {
    "text": "next topic which is i don't believe my imagination plays a single role because i am an aggressive unit tester",
    "start": "24240",
    "end": "30480"
  },
  {
    "text": "and i have all my code unit tested and perfectly working so when i make a refactor i'm confident in this moment",
    "start": "30480",
    "end": "36480"
  },
  {
    "text": "that i have not changed anything or the behavior without having to go through integration now we may be",
    "start": "36480",
    "end": "41920"
  },
  {
    "text": "using the term integration or end-to-end tests uh slightly different right people tend to use these phrases in all sorts of ways i don't think i've ever heard",
    "start": "41920",
    "end": "48559"
  },
  {
    "text": "someone use the term functional test in the correct way ever it's i i don't think anyone has any",
    "start": "48559",
    "end": "54640"
  },
  {
    "text": "idea what that actually means uh but all right so this this might be part of the problem which is you",
    "start": "54640",
    "end": "61199"
  },
  {
    "text": "don't think unit tests should be done in fact i believe you",
    "start": "61199",
    "end": "66560"
  },
  {
    "text": "said something along the lines of someone being a delusional if they do unit tests probably not that intense but it was pretty intense",
    "start": "66560",
    "end": "73119"
  },
  {
    "text": "i thought i was vehemently anti-unit test oh you kept going i believe you even tossed some shade my way at one",
    "start": "73119",
    "end": "78720"
  },
  {
    "text": "point you probably even said like my hair wasn't as good as yours or something like that the tick tock came out great though",
    "start": "78720",
    "end": "84799"
  },
  {
    "text": "thank you for that it's one of the best ones i've done so far don't don't compliment this take talk this is not the time for tick tock it's it's your",
    "start": "84799",
    "end": "92079"
  },
  {
    "text": "tick tock to be fair i just stole your content oh that's great i didn't put my message in there oh really just you but yeah it",
    "start": "92079",
    "end": "99040"
  },
  {
    "text": "was wonderful oh that's awesome oh yeah i got like that that was fantastic i'm always fine i'm always",
    "start": "99040",
    "end": "104079"
  },
  {
    "text": "fine being a vic a collateral victim of tick-tock damage i'll i'll accept it in fact you know i was the only victim",
    "start": "104079",
    "end": "110079"
  },
  {
    "text": "there you call me an ignorant [ __ ] i'm not saying it's inaccurate i'm just saying that i'm the victim i know you were you were the victim in the moment",
    "start": "110079",
    "end": "116079"
  },
  {
    "text": "okay but uh you know what i deserved one that was the nicest thing someone has posted about me in a while right usually",
    "start": "116079",
    "end": "122079"
  },
  {
    "text": "when people take something it is in a negative fashion i felt like at least there was some love there maybe",
    "start": "122079",
    "end": "127439"
  },
  {
    "text": "some some anger yeah i mostly love you there's my community has a lot of love for you i was surprised because i've",
    "start": "127439",
    "end": "134080"
  },
  {
    "text": "definitely seen you catch some heat but i think we're on like the same wavelength and a lot of ways there where it's like we're not we're not here to",
    "start": "134080",
    "end": "141680"
  },
  {
    "text": "make people happy we're here to talk about how [ __ ] gets done yeah and it gets spicy if it has to yeah all",
    "start": "141680",
    "end": "147760"
  },
  {
    "text": "right all right just for the unit tests though i i i want again i'm gonna preface this",
    "start": "147760",
    "end": "154560"
  },
  {
    "text": "with something oh wait can i do can i do one quick thing sorry i'm sorry that i just interrupted you right there i'm",
    "start": "154560",
    "end": "160080"
  },
  {
    "text": "gonna do a quick poll in chat that says who likes unit tests or uh do you",
    "start": "160080",
    "end": "165840"
  },
  {
    "text": "think unit tests are good yes and no so answer truthfully because",
    "start": "165840",
    "end": "171040"
  },
  {
    "text": "afterwards i would like to see the outcome to this if anybody was swayed obviously",
    "start": "171040",
    "end": "176480"
  },
  {
    "text": "this is a bias test in the sense that new people are going to join towards the end they'll vote on it like oh yeah of course they're great right and so we",
    "start": "176480",
    "end": "182720"
  },
  {
    "text": "won't get accurate results but it'll be interesting to see if uh you know if you've changed",
    "start": "182720",
    "end": "188319"
  },
  {
    "text": "people's minds if things have if things have changed so go on",
    "start": "188319",
    "end": "193840"
  },
  {
    "text": "start start your unit test test these so the [Music]",
    "start": "193840",
    "end": "199120"
  },
  {
    "text": "issue i i have a handful that you need to test but i want to give like one important addendum at the beginning here",
    "start": "199120",
    "end": "204400"
  },
  {
    "text": "which is a lot of my stance here is trying to be the opposite extreme from what i",
    "start": "204400",
    "end": "210879"
  },
  {
    "text": "consider the problem which is the everything should be unit test people i think that no unit tests is",
    "start": "210879",
    "end": "216720"
  },
  {
    "text": "significantly better than 100 code coverage in the sense that where i am the",
    "start": "216720",
    "end": "222879"
  },
  {
    "text": "wrong extreme you might believe i am at prevents my engineers from being hampered by [ __ ] and i am always",
    "start": "222879",
    "end": "228879"
  },
  {
    "text": "looking for [ __ ] to trim i want my engineers working on things and i want the teams i'm in working on things that",
    "start": "228879",
    "end": "234879"
  },
  {
    "text": "make them more productive effective and confident as they solve problems for our",
    "start": "234879",
    "end": "240080"
  },
  {
    "text": "users and where most of the code i see shipping goes",
    "start": "240080",
    "end": "245760"
  },
  {
    "text": "unit tests are slowing them down more than helping and they're often reached for due to other problems my concern is",
    "start": "245760",
    "end": "253760"
  },
  {
    "text": "there are tests being written to create contracts and expectations where",
    "start": "253760",
    "end": "260160"
  },
  {
    "text": "the codes architecture itself should be enforcing them okay so i think we do fall on the same page that i think we",
    "start": "260160",
    "end": "266160"
  },
  {
    "text": "both would universally agree that 100 coverage is just terrible right it's easy to have a bug and have 100 coverage",
    "start": "266160",
    "end": "272720"
  },
  {
    "text": "just do a list and access a list and have the second thing be undefined right you can just bam you know hit it",
    "start": "272720",
    "end": "278160"
  },
  {
    "text": "undefined right very very easy and number two i have up",
    "start": "278160",
    "end": "283120"
  },
  {
    "text": "okay so i want to go off on this one for a little bit because i totally agree like the undefined in a list problem is",
    "start": "283280",
    "end": "288639"
  },
  {
    "text": "so real and we hit it in production and it turns out and this is really fun learning there's actually a typescript",
    "start": "288639",
    "end": "295840"
  },
  {
    "text": "rule for accessing an index and not checking if it's defined or not because when you're grabbing from an array you",
    "start": "295840",
    "end": "301039"
  },
  {
    "text": "can't know yeah and we turn that on we found like three other places that that bug could have happened in the code base",
    "start": "301039",
    "end": "306880"
  },
  {
    "text": "as a result and once again my stance of good tools are better than okay tests",
    "start": "306880",
    "end": "312080"
  },
  {
    "text": "was proven out because we could have written 100 unit tests and not caught that but we turned on one typescript",
    "start": "312080",
    "end": "318080"
  },
  {
    "text": "rule and caught three okay so i do i do think that good tools help prevent a class of bugs or",
    "start": "318080",
    "end": "324720"
  },
  {
    "text": "something along those lines so i i'm gonna agree with you on that one but okay tests i mean it sounds like you",
    "start": "324720",
    "end": "330880"
  },
  {
    "text": "have poor test writers so we'll just we'll ignore that for a second uh the second thing is that i think we both agree i try to find the common ground",
    "start": "330880",
    "end": "337520"
  },
  {
    "text": "before we get on the argument here is that we both agree that tdd defining the test first and then building your",
    "start": "337520",
    "end": "342639"
  },
  {
    "text": "architecture around the test is the devil's tool and should be thrown away immediately i personally will never",
    "start": "342639",
    "end": "348320"
  },
  {
    "text": "define my architecture based on how i'm going to write my tests i usually do it a little bit you know the other way around",
    "start": "348320",
    "end": "353919"
  },
  {
    "text": "uh are you you must not be on the td d yeah no i",
    "start": "353919",
    "end": "359199"
  },
  {
    "text": "can't i i'm a big udd fan user driven development we do things because our users need them and tests are not the",
    "start": "359199",
    "end": "366479"
  },
  {
    "text": "best way to define those things like the problems we're solving exist much more in user land than they do in",
    "start": "366479",
    "end": "373680"
  },
  {
    "text": "like if i was a back-end developer building long-running systems and i needed to",
    "start": "373680",
    "end": "380080"
  },
  {
    "text": "make sure things were staying super stable and never leaking probably a little cooler with test driven development and unit tests but",
    "start": "380080",
    "end": "386960"
  },
  {
    "text": "building product for users tdd pulls you far enough away from the user",
    "start": "386960",
    "end": "392240"
  },
  {
    "text": "that you lose track of what you're building pretty regularly and that's been the experience with every tdd team building user first software that i've",
    "start": "392240",
    "end": "398160"
  },
  {
    "text": "ever worked in okay uh so i mean i i think you might be drawing like a some sort of like false",
    "start": "398160",
    "end": "404880"
  },
  {
    "text": "dichotomy here that somehow udd is opposed well tdd let's just put that in the trash okay nobody likes tdd we all",
    "start": "404880",
    "end": "411520"
  },
  {
    "text": "agree that tdd sucks but tests incorporated along with writing code",
    "start": "411520",
    "end": "416560"
  },
  {
    "text": "somehow takes you away from the user so good example i'll throw out an example here uh one of my jobs was we",
    "start": "416560",
    "end": "424479"
  },
  {
    "text": "had an ipad in which we were one of the first people to kind of do like a google docs like presentation where you could",
    "start": "424479",
    "end": "430960"
  },
  {
    "text": "view you know a document on several different platforms including one that's written in the old uh action script way",
    "start": "430960",
    "end": "437280"
  },
  {
    "text": "back in the day and also in html5 when html5 was hot and or html4 maybe it was",
    "start": "437280",
    "end": "442560"
  },
  {
    "text": "at that point i can't even remember what it was at but either way we did this and if you touched the ipad and drug your",
    "start": "442560",
    "end": "447919"
  },
  {
    "text": "finger dragged drugged drug edited your finger across it you would highlight some text and that text would be in the",
    "start": "447919",
    "end": "454160"
  },
  {
    "text": "exact same pixel position as it would be in action script on say a computer or using the app versus on the ipad you",
    "start": "454160",
    "end": "460479"
  },
  {
    "text": "could make comments and all that now touching the screen obviously involves a couple points coming in which then takes",
    "start": "460479",
    "end": "466560"
  },
  {
    "text": "this huge block of text and now we have to find exactly the point translation to",
    "start": "466560",
    "end": "472240"
  },
  {
    "text": "text position now i could have just whipped out that feature in a day but instead i took two three days and made a",
    "start": "472240",
    "end": "478000"
  },
  {
    "text": "very comprehensive set of tests and that feature still actually is running untouched and used by a lot of people",
    "start": "478000",
    "end": "484160"
  },
  {
    "text": "and no one's had to touch or change that code and it's been a decade simply because it is well thought through and",
    "start": "484160",
    "end": "490319"
  },
  {
    "text": "well tested so everyone knows the exact ins and outs of the whole nine yards so is udd so it's actually never been",
    "start": "490319",
    "end": "496879"
  },
  {
    "text": "changed or when it or was it never changed or easy to fix when things broke because those are different both easy to",
    "start": "496879",
    "end": "503039"
  },
  {
    "text": "fix because there was a couple bugs because i had a very comprehensive set of tests so they knew where the bug was and how to fix that right and second uh",
    "start": "503039",
    "end": "510160"
  },
  {
    "text": "in a sense having a set of kind of tests especially when it comes to complicated data structures and how you use them uh",
    "start": "510160",
    "end": "516560"
  },
  {
    "text": "you have to uh need a way to kind of like describe that to the developer i'm not convinced",
    "start": "516560",
    "end": "521919"
  },
  {
    "text": "writing a description of how to search through a document is the best versus an example that actually is a test right to",
    "start": "521919",
    "end": "528160"
  },
  {
    "text": "me that is a much better developer experience in my personal book to actually see the thing get used exactly how to pinpoint it and understand it and",
    "start": "528160",
    "end": "534720"
  },
  {
    "text": "so i both lean on tests as a way to prove correctness and as a way for someone to get effectively tech",
    "start": "534720",
    "end": "540399"
  },
  {
    "text": "documentation for free yeah i use typescript for the latter and i use",
    "start": "540399",
    "end": "546839"
  },
  {
    "text": "documents plus explain the latter loom to do quick recordings uh typescript definitions give you 90",
    "start": "546839",
    "end": "553440"
  },
  {
    "text": "plus of what you need when you're consuming something like you can hover over you see what it takes and then it tells you what it returns as long as",
    "start": "553440",
    "end": "559040"
  },
  {
    "text": "they're named okay and i would say like the big thing we lean on hardest is code reviews and like pushing for us to be",
    "start": "559040",
    "end": "566160"
  },
  {
    "text": "like raising the bar constantly i obviously cannot say that that scales forever but if you build a culture",
    "start": "566160",
    "end": "572720"
  },
  {
    "text": "around it it keeps you from running into a lot of the problems that like unit tests solve in those ways i i don't like",
    "start": "572720",
    "end": "580320"
  },
  {
    "text": "unit tests as a demonstration of how code works and should be used because",
    "start": "580320",
    "end": "585680"
  },
  {
    "text": "more often than not unit tests are breaking those assumptions with the weird ways they mock [ __ ] and that's the problem with unit tests is to test an",
    "start": "585680",
    "end": "591680"
  },
  {
    "text": "individual unit you're definitely mocking something and you're probably mocking it poorly because every mock i've ever seen was bad every single",
    "start": "591680",
    "end": "597760"
  },
  {
    "text": "phone okay so that might be how your you might be running into people writing it poorly so i do have a rule when writing tests which is anything that interacts",
    "start": "597760",
    "end": "604959"
  },
  {
    "text": "with the environment is usually behind an interface so there is no mocking for me i actually provide an object in which",
    "start": "604959",
    "end": "610720"
  },
  {
    "text": "abstracts it out right so it's just simple calls in and out whereas i don't actually have to worry about a lot of the mocking type at least any sort of",
    "start": "610720",
    "end": "617360"
  },
  {
    "text": "like uh dependency injection style ones which i find to be where all the confusion happens when you have these weird just import mocks and you're",
    "start": "617360",
    "end": "624320"
  },
  {
    "text": "taking all the imports and you're rewriting the imports and then you're hoping it goes all the way through i find that to be where a lot of the",
    "start": "624320",
    "end": "630160"
  },
  {
    "text": "confusion is versus like hey when i'm gonna do some sort of like say i'm setting the audio render rate on a",
    "start": "630160",
    "end": "636160"
  },
  {
    "text": "television i'm gonna have this as part of the config and that way i can provide the render rate to my player and not",
    "start": "636160",
    "end": "642959"
  },
  {
    "text": "actually have it query some sort of outside item and so kind of inverting the control if you will i think they",
    "start": "642959",
    "end": "648079"
  },
  {
    "text": "have a name for that specifically yeah the amount of thought that has to go into these things and developing these",
    "start": "648079",
    "end": "654399"
  },
  {
    "text": "patterns and onboarding people to use them properly and maintaining them and then realizing they're bad and gutting them and figuring out which tests",
    "start": "654399",
    "end": "660399"
  },
  {
    "text": "actually bring value and not and it becomes a whole additional thing to maintain that is",
    "start": "660399",
    "end": "666480"
  },
  {
    "text": "relatively big i actually keep a list i don't think i have it here uh so i guess the invert of this would be integration",
    "start": "666480",
    "end": "672320"
  },
  {
    "text": "right i mean integration tests themselves are extremely complicated to set up they break all the time data is",
    "start": "672320",
    "end": "678000"
  },
  {
    "text": "unreliable you have to do this whole data mocking layer which is always out of date it's like never end date i've",
    "start": "678000",
    "end": "683760"
  },
  {
    "text": "never seen someone data mock successful ever we've done it a lot of times at netflix it is just one of the worst",
    "start": "683760",
    "end": "689600"
  },
  {
    "text": "things services are going down you have to have an entire staging environment then the staging environment has to be",
    "start": "689600",
    "end": "694720"
  },
  {
    "text": "scaled because if your tests all run at once or a bunch of developers come in at once you have horizontal scaling issues",
    "start": "694720",
    "end": "700079"
  },
  {
    "text": "you're doing you're solving production in not production at all points so i'm",
    "start": "700079",
    "end": "705279"
  },
  {
    "text": "not convinced that the other way is even remotely easier in any sense and creating tests that",
    "start": "705279",
    "end": "710639"
  },
  {
    "text": "often especially with webrtc you're in webrtc world like how do you do uh sequence out of order in rtp you know",
    "start": "710639",
    "end": "716639"
  },
  {
    "text": "how do you do uh forward air correction uh read solomon how do you take care of all these really complicated things if",
    "start": "716639",
    "end": "721920"
  },
  {
    "text": "you were to own it without something that more defines or controls the network and puts it in in a very",
    "start": "721920",
    "end": "727600"
  },
  {
    "text": "systematic way i wouldn't i would outsource with somebody who does and i'm almost positive everybody will ever outsource",
    "start": "727600",
    "end": "733600"
  },
  {
    "text": "our webrtc info to or if we start hiring enough people doing that ourselves they will probably be much more pro unit",
    "start": "733600",
    "end": "738959"
  },
  {
    "text": "tests than me and they will probably ignore my stance here and go and do those things i think that unit tests are",
    "start": "738959",
    "end": "745440"
  },
  {
    "text": "reached to way too often for software that the majority of is not things that have sequence out of or order errors",
    "start": "745440",
    "end": "752480"
  },
  {
    "text": "they have the items in my cart aren't going into the order errors the vast majority of the web is e-commerce and",
    "start": "752480",
    "end": "758639"
  },
  {
    "text": "mostly static sites the vast majority of servers are just hosting wordpress and postgres the vast majority of the things",
    "start": "758639",
    "end": "765279"
  },
  {
    "text": "that we do are slowed down by unit tests and that's why i take the extreme stance i do i",
    "start": "765279",
    "end": "771120"
  },
  {
    "text": "think you need a good reason to have unit tests rather than a good reason to not and i think you're describing things that are good reasons to have unit tests",
    "start": "771120",
    "end": "778000"
  },
  {
    "text": "i think that your job and your role that makes sense a lot of the time i think the majority of people even in your chat",
    "start": "778000",
    "end": "783920"
  },
  {
    "text": "here are probably writing too many unit tests at their job so how do you know so so we'll go we'll",
    "start": "783920",
    "end": "789680"
  },
  {
    "text": "go with your theory here how do you know when you've written too many unit tests if you say none we're fist fighting",
    "start": "789680",
    "end": "796639"
  },
  {
    "text": "i i really don't think this is it",
    "start": "796639",
    "end": "801680"
  },
  {
    "text": "because because i almost feel like it's harder yours than mine mine is just simply i'm gonna think of a few edge",
    "start": "801680",
    "end": "807839"
  },
  {
    "text": "conditions that i know will exist say i have a bunch of items that could be added in various orders and put into a cart i expect if i handed this list it",
    "start": "807839",
    "end": "814639"
  },
  {
    "text": "just produces me the list in the same order right that's a pretty happy case very simple if someone decides i want to",
    "start": "814639",
    "end": "820000"
  },
  {
    "text": "add a new filtering mechanism it's going to break and they go oh crap we broke the default user experience either i have to change the test",
    "start": "820000",
    "end": "826399"
  },
  {
    "text": "or make mine right as some sort of option right it's like a catch because they don't know the history",
    "start": "826399",
    "end": "831600"
  },
  {
    "text": "so how would you how would you know when that's too much that already sounds like too much to me",
    "start": "831600",
    "end": "837519"
  },
  {
    "text": "like you have a list you use the list the list is the same i don't i wouldn't test that i i trust react to do i this",
    "start": "837519",
    "end": "844240"
  },
  {
    "text": "is the thing i see the most of that i saw a ton of a twitch basically testing if you pass a component props it gets",
    "start": "844240",
    "end": "849279"
  },
  {
    "text": "the props well yeah the act works what yeah no no i agree that that is not a very good problem but i'm just saying",
    "start": "849279",
    "end": "855360"
  },
  {
    "text": "like specific you know because there's always filtering and all that like say you want to do something smart some sort of logic on top of it to make this list",
    "start": "855360",
    "end": "862079"
  },
  {
    "text": "into something else at some point how do you know somebody's not breaking that because it may not show up in user",
    "start": "862079",
    "end": "867600"
  },
  {
    "text": "metrics right it doesn't always just because you make something doesn't mean people quit using the product they'll find a way around it you'll often see",
    "start": "867600",
    "end": "874079"
  },
  {
    "text": "this where people just do the just dumbest things you're like why are you doing that they're like well actually it's quit working and then this is how",
    "start": "874079",
    "end": "879360"
  },
  {
    "text": "we solve it you're like oh yeah you just worked around it i think this is where like for",
    "start": "879360",
    "end": "884399"
  },
  {
    "text": "us user obsession is super important we are constantly hopping into users rooms",
    "start": "884399",
    "end": "889839"
  },
  {
    "text": "seeing how they use the product see what's going right and wrong and we've already had times where feedback didn't get to us here that we had to like find",
    "start": "889839",
    "end": "897519"
  },
  {
    "text": "ourselves by digging in really hard and i",
    "start": "897519",
    "end": "902639"
  },
  {
    "text": "i i have we've had one bug so far total since we started shipping in august that",
    "start": "902800",
    "end": "908240"
  },
  {
    "text": "a unit test reasonably could have caught and the amount of inertia we would have",
    "start": "908240",
    "end": "913360"
  },
  {
    "text": "had to just eat to start integrating tests into our workflows like our time",
    "start": "913360",
    "end": "920959"
  },
  {
    "text": "to like our timed response for a production issue that a user reports to us is under seven minutes for a",
    "start": "920959",
    "end": "926000"
  },
  {
    "text": "production fix from when it's reported and i'm aiming to get that lower right now i want us on top of our [ __ ] and",
    "start": "926000",
    "end": "933199"
  },
  {
    "text": "unit tests don't help there my general philosophy is build safety nets not guard rails and test unit tests are the",
    "start": "933199",
    "end": "938880"
  },
  {
    "text": "most guard raily of like it feels like bumpers being put on like bowling alleys",
    "start": "938880",
    "end": "944720"
  },
  {
    "text": "except half the time you hit them they're just blocking you from doing the thing you intend to do and you have to",
    "start": "944720",
    "end": "949920"
  },
  {
    "text": "remove the bumper yourself and now you don't trust bumpers at all anymore and the experience especially for newer devs",
    "start": "949920",
    "end": "955440"
  },
  {
    "text": "sucks i want to build the best safety nets possible so when things do go wrong we",
    "start": "955440",
    "end": "960480"
  },
  {
    "text": "can revert the thing that caused it to go wrong quick and we can address the problem as fast as possible and if we",
    "start": "960480",
    "end": "966320"
  },
  {
    "text": "cause another problem in doing that we can address that as well obviously as systems get bigger this gets harder but",
    "start": "966320",
    "end": "972160"
  },
  {
    "text": "i have seen time and time again especially at companies like twitch that you can do this if you put your time and",
    "start": "972160",
    "end": "977680"
  },
  {
    "text": "energy into the right places you can build in a way that is focused on fixing problems when they come up rather than",
    "start": "977680",
    "end": "984720"
  },
  {
    "text": "guiding people to solutions and solving problems with guardrails that you don't know about yet i don't trust",
    "start": "984720",
    "end": "991360"
  },
  {
    "text": "my developers to guess the edge cases better than i trust my users to run into them",
    "start": "991360",
    "end": "996720"
  },
  {
    "text": "okay so then i i do so how do you test right so how do you have confidence that when someone makes",
    "start": "996720",
    "end": "1001759"
  },
  {
    "text": "a change it doesn't blow up so you know obviously there's the integration there's literal manual qa",
    "start": "1001759",
    "end": "1008480"
  },
  {
    "text": "what is your what and if you do integration what's your integration story look like we don't we open up the pr build and hop",
    "start": "1008480",
    "end": "1015759"
  },
  {
    "text": "in a call if it's something that touches any of the scary parts the vast majority of the code we're shipping nowadays is",
    "start": "1015759",
    "end": "1021279"
  },
  {
    "text": "css changes and feature flags being turned like on and off and moved from place to place",
    "start": "1021279",
    "end": "1026319"
  },
  {
    "text": "we like here's a fun example of a production issue we had we added this",
    "start": "1026319",
    "end": "1031600"
  },
  {
    "text": "one just happened uh yesterday actually i'm sure you might have noticed in ping right now i'm flashing and yesterday when we talked i wasn't we had added a",
    "start": "1031600",
    "end": "1038959"
  },
  {
    "text": "network test in the preview before you joined the call that instantiated the webrtc client and then killed it and",
    "start": "1038959",
    "end": "1045839"
  },
  {
    "text": "instantiated a new one when you joined the call that broke the signaling process that",
    "start": "1045839",
    "end": "1051360"
  },
  {
    "text": "passes us the volume indication levels there is literally no way in hell we",
    "start": "1051360",
    "end": "1057120"
  },
  {
    "text": "could have tested that because it was an external sdk with a memory error inside of it that",
    "start": "1057120",
    "end": "1063440"
  },
  {
    "text": "when killed and reinstantiated breaks this one pipe inside of it and those are the things that we tend to run into in",
    "start": "1063440",
    "end": "1069760"
  },
  {
    "text": "production those are the bugs we have and being able to get bisect find the",
    "start": "1069760",
    "end": "1075440"
  },
  {
    "text": "last time it worked quickly comment out that hook and have everything working in production",
    "start": "1075440",
    "end": "1080480"
  },
  {
    "text": "it's pretty good so then i guess the follow-up question was you don't you don't do any integration",
    "start": "1080480",
    "end": "1085679"
  },
  {
    "text": "testing would have an integration test simply caught this like a puppeteer a puppeteer would not",
    "start": "1085679",
    "end": "1091440"
  },
  {
    "text": "have been able to start two streams and no a puppeteer would not at least not trivially be able to spin up an audio",
    "start": "1091440",
    "end": "1097840"
  },
  {
    "text": "and video device and then send down arbitrary audio and detect that the levels are being picked up on the other",
    "start": "1097840",
    "end": "1103520"
  },
  {
    "text": "side that would be i would have lost two of my engineers for three months trying to do that but we fixed every five minutes instead and",
    "start": "1103520",
    "end": "1110000"
  },
  {
    "text": "that's just not a worthwhile trade and i would be hard to convince that there's a scale where that makes sense other than",
    "start": "1110000",
    "end": "1116640"
  },
  {
    "text": "you are selling these services to other companies i don't believe the amount of effort it",
    "start": "1116640",
    "end": "1122880"
  },
  {
    "text": "would take to properly mock and rebuild those things would be worthwhile almost ever when we",
    "start": "1122880",
    "end": "1129840"
  },
  {
    "text": "could build our own sdk for our webrtc stuff instead when we run into problems like that where it feels like a test",
    "start": "1129840",
    "end": "1136640"
  },
  {
    "text": "would bring value fixing the thing that makes us so uncomfortable we want to test is better every single time but how do you know",
    "start": "1136640",
    "end": "1142880"
  },
  {
    "text": "you even got it right besides for just manual testing it sounds like you're annual testing so you instead of so if",
    "start": "1142880",
    "end": "1149039"
  },
  {
    "text": "you had to fix one place a hundred times you would have to manually test that one place 100 times",
    "start": "1149039",
    "end": "1154320"
  },
  {
    "text": "yeah and i probably tested our call logic over 100 times at this point would that not slow you down in the greater",
    "start": "1154320",
    "end": "1160240"
  },
  {
    "text": "end i mean i guess that some parts are just you can't you can't lock out right like i do understand that some things are",
    "start": "1160240",
    "end": "1165760"
  },
  {
    "text": "just they're just too hard and webrtc i can kind of buy that obviously there's g stream",
    "start": "1165760",
    "end": "1171440"
  },
  {
    "text": "right well how do you know you get it right when you rewrite it like how do you know any part of the things you do that you haven't introduced small bugs",
    "start": "1171440",
    "end": "1177200"
  },
  {
    "text": "that aren't causing customer friction which ultimately like personally uh every time i've entered used a",
    "start": "1177200",
    "end": "1182960"
  },
  {
    "text": "product that has a series of small bugs over and over again i find that more frustrating than a place that has one",
    "start": "1182960",
    "end": "1188799"
  },
  {
    "text": "big bug every now and then right like small things drive me way more nuts when i just use it on my crap",
    "start": "1188799",
    "end": "1194400"
  },
  {
    "text": "this thing's broken oh okay today this thing's broken like how do you prevent that as your team grows to say 20 50 100",
    "start": "1194400",
    "end": "1199919"
  },
  {
    "text": "engineers by overhauling the places that are like fertile ground for those small problems",
    "start": "1199919",
    "end": "1206400"
  },
  {
    "text": "i don't believe those small problems occur because the tests aren't good enough i believe those small problems occur because the structure and the",
    "start": "1206400",
    "end": "1213039"
  },
  {
    "text": "place that they are occurring in is fragile or not like clear enough to",
    "start": "1213039",
    "end": "1218880"
  },
  {
    "text": "work in can unit tests be a tool that guides people down the right paths in those like",
    "start": "1218880",
    "end": "1224799"
  },
  {
    "text": "[ __ ] up grounds sure i would rather every single time",
    "start": "1224799",
    "end": "1230320"
  },
  {
    "text": "dig it up and rebuild it because it takes about the same if not less effort a lot",
    "start": "1230320",
    "end": "1235440"
  },
  {
    "text": "of the time it's a better experience for the developers it's a huge way especially as like a leader when i'm",
    "start": "1235440",
    "end": "1240559"
  },
  {
    "text": "running teams for somebody to say hey this thing broke should we add a bunch of tests to say no",
    "start": "1240559",
    "end": "1245919"
  },
  {
    "text": "all right we can or if you think this is fragile enough that we need something more right out of spec we can overhaul this",
    "start": "1245919",
    "end": "1252480"
  },
  {
    "text": "so i think it's time in fact my cto is doing that right now for our call logic because it is too fragile and nigh",
    "start": "1252480",
    "end": "1258159"
  },
  {
    "text": "impossible to test so we're building a new state machine with x-state it's going to be way more complex we're going",
    "start": "1258159",
    "end": "1263280"
  },
  {
    "text": "to have like charts diagrams and all that [ __ ] and probably maybe introduce some tests for it but that's a very very",
    "start": "1263280",
    "end": "1270080"
  },
  {
    "text": "specific thing that is business critical that we think we've ironed down enough to start testing but if we had started",
    "start": "1270080",
    "end": "1276640"
  },
  {
    "text": "testing before getting here it would have slowed down the process in which we got here in the first place and i guess",
    "start": "1276640",
    "end": "1283679"
  },
  {
    "text": "my take is letting the developers and i guess down the line some of the users feel a bit of pain to build more trust",
    "start": "1283679",
    "end": "1291760"
  },
  {
    "text": "with your team is huge and doing that for the team and giving them the trust to own and",
    "start": "1291760",
    "end": "1299440"
  },
  {
    "text": "replace fragile things is almost always worth it okay so so somebody i see somebody in",
    "start": "1299440",
    "end": "1305200"
  },
  {
    "text": "chat say or uh asking like how big of like teams and companies i've been on like yeah my current company i have a",
    "start": "1305200",
    "end": "1310400"
  },
  {
    "text": "six person team okay i was right on that one okay yeah but i helped a lot at twitch on",
    "start": "1310400",
    "end": "1315600"
  },
  {
    "text": "like the team that ran the core website which had over like 400 plus contributors i've run and helped lead",
    "start": "1315600",
    "end": "1321840"
  },
  {
    "text": "teams with like 50 plus engineers and that's where a lot of my philosophy came from it's how do we get to that point as",
    "start": "1321840",
    "end": "1328400"
  },
  {
    "text": "fast as possible without stepping on too many toes and breaking too much [ __ ] and i i've seen teams scale from two to two",
    "start": "1328400",
    "end": "1334000"
  },
  {
    "text": "hundred many times now i think i know how to do this right and the way to do it right is to do it wrong",
    "start": "1334000",
    "end": "1339600"
  },
  {
    "text": "but fast for long enough to get there in the first place so i definitely don't disagree with that that i am i am fully",
    "start": "1339600",
    "end": "1345919"
  },
  {
    "text": "in the camp that you always should build something once to throw it away right like it just it just simply almost",
    "start": "1345919",
    "end": "1352400"
  },
  {
    "text": "universally works better that the first one you build you throw away and i can even buy the fact that you say hey i'm gonna unit test uh this first one",
    "start": "1352400",
    "end": "1359120"
  },
  {
    "text": "because i'm just building it to really understand the problem because you know the people that go on the whiteboard and spend a week purely whiteboarding a",
    "start": "1359120",
    "end": "1365360"
  },
  {
    "text": "problem and all the right boxes and arrows and all those things i have never actually had that work out in in real life because real life does not look",
    "start": "1365360",
    "end": "1371760"
  },
  {
    "text": "like boxes and arrows it's just completely and it's always wrong and so",
    "start": "1371760",
    "end": "1377520"
  },
  {
    "text": "i have just never had it work correct and so i'm i'm a huge proponent of the build it twice kind of thing and so it",
    "start": "1377520",
    "end": "1383039"
  },
  {
    "text": "kind of sounds like you're you're you almost are mimicking it in a different kind of fashion that okay we're going to rebuild it but i do worry that you're",
    "start": "1383039",
    "end": "1389919"
  },
  {
    "text": "almost no true scot spending this one meaning that every time something is problematic you're like well it wasn't",
    "start": "1389919",
    "end": "1395600"
  },
  {
    "text": "quite where it should have been right like won't that always be all code at all time it's always never quite should",
    "start": "1395600",
    "end": "1401840"
  },
  {
    "text": "always be leveling it up i feel like tests discourage you from taking level up opportunities yeah they",
    "start": "1401840",
    "end": "1407039"
  },
  {
    "text": "are patch jobs where you should be overhauling why do they prevent you because if you're going to rewrite it",
    "start": "1407039",
    "end": "1412960"
  },
  {
    "text": "you could either a you're rewriting the interfaces or b you're writing the insights right so if you're rewriting the intersect",
    "start": "1412960",
    "end": "1418159"
  },
  {
    "text": "interfaces it's like everything's gone anyways and so then the test would be there and be like oh why did this happen oh look this thing",
    "start": "1418159",
    "end": "1424640"
  },
  {
    "text": "actually gets called twice for this really weird reason or this happens twice for some really weird reason i should remember that the next time right",
    "start": "1424640",
    "end": "1430559"
  },
  {
    "text": "you do lose some oddity knowledge without it in the unit test so whenever i rewrite and burn",
    "start": "1430559",
    "end": "1435600"
  },
  {
    "text": "down the whole city i look at the unit tests as like an example of all the things i need to remember but if i'm",
    "start": "1435600",
    "end": "1441360"
  },
  {
    "text": "rewriting just simply the insides the unit tests just make me go okay i still have everything correct i have not changed it fundamentally i've only",
    "start": "1441360",
    "end": "1448000"
  },
  {
    "text": "changed how it works on the inside you know what i'll take a light l on",
    "start": "1448000",
    "end": "1453279"
  },
  {
    "text": "this one this is something that i have not been good about in the parts of the codebase that you could argue need unit",
    "start": "1453279",
    "end": "1458960"
  },
  {
    "text": "tests i should have done a better job of documenting the weird behaviors there so that my when my poor cto",
    "start": "1458960",
    "end": "1464960"
  },
  {
    "text": "goes halfway through rewriting it it's clear and he has to ask me less questions but generally i i have relied",
    "start": "1464960",
    "end": "1471039"
  },
  {
    "text": "on communication as the solution there where i'm the one who built this v0 this",
    "start": "1471039",
    "end": "1476320"
  },
  {
    "text": "like broken first version and i trust my team and",
    "start": "1476320",
    "end": "1481360"
  },
  {
    "text": "our engineering culture to get us there and to get us over those gaps and i'm",
    "start": "1481360",
    "end": "1487520"
  },
  {
    "text": "focused way more on that part than i am any technical path there yeah",
    "start": "1487520",
    "end": "1492880"
  },
  {
    "text": "i i do i i will also be glad to take the light l of that i do think favoring your",
    "start": "1492880",
    "end": "1498080"
  },
  {
    "text": "first time through is a very good thing rather than being so focused on tests make sure you have the right behavior",
    "start": "1498080",
    "end": "1503279"
  },
  {
    "text": "the right things i do think that that does make it a bit easier to move a bit faster but i think where we come into",
    "start": "1503279",
    "end": "1509120"
  },
  {
    "text": "contention is once i think i know what i want i tend to do the refactor there in place and then throw on the test to make sure",
    "start": "1509120",
    "end": "1514880"
  },
  {
    "text": "that i never forget the things that i shall never forget such as my comments on node uh nodes github and so it's just",
    "start": "1514880",
    "end": "1521279"
  },
  {
    "text": "like i always put those things around for me to just i i forget and the funny thing is what you're describing is",
    "start": "1521279",
    "end": "1527440"
  },
  {
    "text": "netflix in a nutshell or old netflix shall i say old netflix was exactly this",
    "start": "1527440",
    "end": "1532480"
  },
  {
    "text": "um you actually probably would have loved working on netflix five six seven eight years ago it was a pure it's a tribal",
    "start": "1532480",
    "end": "1539360"
  },
  {
    "text": "knowledge is what you're describing right where people all know the areas really it's just really up to each individual to make sure that that area",
    "start": "1539360",
    "end": "1545360"
  },
  {
    "text": "is good and we had virtually no unit test no anything and it did scale for actually quite some time we made it for",
    "start": "1545360",
    "end": "1551760"
  },
  {
    "text": "about uh from zero customers to about a hundred million customers but there just",
    "start": "1551760",
    "end": "1557919"
  },
  {
    "text": "came a point where all of a sudden all these decisions start gaining enough momentum that it no longer worked and so",
    "start": "1557919",
    "end": "1564480"
  },
  {
    "text": "when we burnt down the ship we replaced it with a bunch of unit tests and we've actually you know life has been a",
    "start": "1564480",
    "end": "1569600"
  },
  {
    "text": "significantly different now there are some really shitty interfaces right or really shitty unit tests where they you know",
    "start": "1569600",
    "end": "1575840"
  },
  {
    "text": "does this thing construct you're like yes new always has been new for like all of eternity if that does not work then",
    "start": "1575840",
    "end": "1581760"
  },
  {
    "text": "your language is broken like the thing itself is broken and it will never work don't do that",
    "start": "1581760",
    "end": "1587760"
  },
  {
    "text": "and so i i mean i i get i get where you're going with it i just am not convinced it works uh forever it works small and fast",
    "start": "1587760",
    "end": "1596159"
  },
  {
    "text": "it does not work when you start getting out of small and fast yeah it it works until it doesn't and i",
    "start": "1596159",
    "end": "1603279"
  },
  {
    "text": "guess my hot take is you'll know when it doesn't and people are pretending they need these things way before they do i",
    "start": "1603279",
    "end": "1609039"
  },
  {
    "text": "think you need to get to that 100 millionth user before hiring a primogen to go build this new",
    "start": "1609039",
    "end": "1615120"
  },
  {
    "text": "structure that's test first check everything always like there is a future like if i do",
    "start": "1615120",
    "end": "1620159"
  },
  {
    "text": "everything right at ping in five years all of my stances here are going to be wrong and i have to hire you to fix the mistakes i've made like that",
    "start": "1620159",
    "end": "1626559"
  },
  {
    "text": "that is my ideal situation here is i by doing things this way and breaking [ __ ]",
    "start": "1626559",
    "end": "1631840"
  },
  {
    "text": "and moving as fast as possible i can survive long enough to get to that 100 millionth customer and then have enough",
    "start": "1631840",
    "end": "1637600"
  },
  {
    "text": "money and revenue to pay you to go fix that but i don't think almost anybody in chat here is at that point and to go",
    "start": "1637600",
    "end": "1644399"
  },
  {
    "text": "back to your earlier thing of like building the first version then the second i think what you're describing here is the first and second version of",
    "start": "1644399",
    "end": "1650240"
  },
  {
    "text": "the company's structure for building to an extent and people over optimize",
    "start": "1650240",
    "end": "1656240"
  },
  {
    "text": "to make the first one last forever rather than make the first one last at all and be as productive as possible so",
    "start": "1656240",
    "end": "1663120"
  },
  {
    "text": "you can get to that second step and to go even further back to when you use this to describe like building the first version of the second version of tech",
    "start": "1663120",
    "end": "1670080"
  },
  {
    "text": "i think a lot of people are still in that first version and don't realize it and they're foot gunning themselves",
    "start": "1670080",
    "end": "1676480"
  },
  {
    "text": "because they're shipping the v0 somebody hacked together and unit tests are part of the nails",
    "start": "1676480",
    "end": "1681919"
  },
  {
    "text": "holding that down if it wasn't tested and was quick it's a lot easier to rip up than if it was tested it was quick",
    "start": "1681919",
    "end": "1688240"
  },
  {
    "text": "not because you have to read like delete the interface as a rewrite or it's any different in that way but yeah the",
    "start": "1688240",
    "end": "1694159"
  },
  {
    "text": "the role of unit tests does give an amount of inertia an amount of like weight that can hold down bad",
    "start": "1694159",
    "end": "1701760"
  },
  {
    "text": "code and mislead people into maintaining bad code that probably should have been deleted i almost like",
    "start": "1701760",
    "end": "1708080"
  },
  {
    "text": "why consciously isn't that just bad engineers at that point why would you let a unit test hold",
    "start": "1708080",
    "end": "1714399"
  },
  {
    "text": "you down because you're a new dev and i don't think new devs are bad devs i think new",
    "start": "1714399",
    "end": "1720240"
  },
  {
    "text": "devs need to [Music] be able to make mistakes and also make",
    "start": "1720240",
    "end": "1725360"
  },
  {
    "text": "changes quickly and that's a process that involves like mentorship and communication much more so than unit",
    "start": "1725360",
    "end": "1731440"
  },
  {
    "text": "tests unit tests are another scary thing that i don't think bring value very",
    "start": "1731440",
    "end": "1737360"
  },
  {
    "text": "often i think that type to go another like whole step back i think the era of typescript has changed",
    "start": "1737360",
    "end": "1744799"
  },
  {
    "text": "where unit tests are necessary and bring value types and type systems can define",
    "start": "1744799",
    "end": "1749840"
  },
  {
    "text": "a lot of the things i used to use unit tests for like given this function this thing does it return this thing and i",
    "start": "1749840",
    "end": "1756240"
  },
  {
    "text": "would use unit test almost as a way to enable refactoring ability i guess that gave that to me in a much better fashion",
    "start": "1756240",
    "end": "1763120"
  },
  {
    "text": "yeah yeah no no the web's lack of types have always been a historic tragedy right i mean i think anyone that's used",
    "start": "1763120",
    "end": "1770559"
  },
  {
    "text": "non-type for a while to a type it is definitely a tragedy just realizing how",
    "start": "1770559",
    "end": "1776080"
  },
  {
    "text": "much pain you went through before you're like oh look types are really great yeah i know they were really great i know at",
    "start": "1776080",
    "end": "1781279"
  },
  {
    "text": "one point computers just needed types because they didn't have the memory or the speed to have an interpreter but",
    "start": "1781279",
    "end": "1786559"
  },
  {
    "text": "then that left and then you're like oh yeah it's perfectly fine but i do want to i do want to touch on something with netflix people i stopped i get roasted",
    "start": "1786559",
    "end": "1792480"
  },
  {
    "text": "in the chat about like oh now we have 100 million users now we test well you got to remember that netflix hired only the most senior engineers at that point",
    "start": "1792480",
    "end": "1800080"
  },
  {
    "text": "and so we had arguably you know one of the bad most badass teams ever put together",
    "start": "1800080",
    "end": "1806159"
  },
  {
    "text": "uh doing television and we made it far enough to the point where netflix didn't",
    "start": "1806159",
    "end": "1811440"
  },
  {
    "text": "ship a feature for over a year and a half because of all the decisions we made right like that it was really bad",
    "start": "1811440",
    "end": "1816720"
  },
  {
    "text": "like they're i mean heads rolled things were not good like it was a but it took enough inertia until we got to that",
    "start": "1816720",
    "end": "1822799"
  },
  {
    "text": "point because the problem is what you're saying is like oh just rip it out there eventually comes a time rip out",
    "start": "1822799",
    "end": "1828159"
  },
  {
    "text": "problem right which is you can only rip out so much code and some code infects",
    "start": "1828159",
    "end": "1833440"
  },
  {
    "text": "others at a very fast and vicious rate like rxjs someone puts in one observable the next thing you know half your code",
    "start": "1833440",
    "end": "1839520"
  },
  {
    "text": "base is emitting observables and you're like how the hell do i refactor this thing out right like it's impossible you can no longer pull it out without like",
    "start": "1839520",
    "end": "1846640"
  },
  {
    "text": "such a good use case for rxjs at ping right now for like tracking the state of the call against the webrtc client and i",
    "start": "1846640",
    "end": "1853120"
  },
  {
    "text": "am so scared to even consider it because it will infect our code base and ruin everything around us and i just i will i",
    "start": "1853120",
    "end": "1859519"
  },
  {
    "text": "will make an async state into a synchronous state machine by brute [ __ ] force if it's what i have to do",
    "start": "1859519",
    "end": "1864799"
  },
  {
    "text": "to keep observables in like bad fashion away i think solid.js is a cool contender for like doing observable",
    "start": "1864799",
    "end": "1870399"
  },
  {
    "text": "right in user interface libraries rxjs exists because the primitive doesn't exist in the browser and that's not a",
    "start": "1870399",
    "end": "1876960"
  },
  {
    "text": "good primitive to diy yeah i don't i don't think well even if it did exist in the browser i don't know",
    "start": "1876960",
    "end": "1883120"
  },
  {
    "text": "if it's a good idea still right like i'm still not buying it that just because something exists does it doesn't make it",
    "start": "1883120",
    "end": "1888399"
  },
  {
    "text": "a good idea plenty of people went back and go ah this thing sucked why did we do that right channels fantastic well i",
    "start": "1888399",
    "end": "1893679"
  },
  {
    "text": "think channels are a much better version of what people are trying to get out of rxjs and so uh but either way",
    "start": "1893679",
    "end": "1900640"
  },
  {
    "text": "going back to this um and so i've seen this at netflix right i've seen it a lot of times for all sudden your your resources for change",
    "start": "1900640",
    "end": "1907120"
  },
  {
    "text": "become constrained under the weight of feature velocity and at some point bad ideas spread in fact for whatever",
    "start": "1907120",
    "end": "1914320"
  },
  {
    "text": "reason they feel like they spread faster than good ideas i don't know how that works i don't know why that works and maybe god when he cursed the ground he",
    "start": "1914320",
    "end": "1920240"
  },
  {
    "text": "also cursed code i don't exactly know how it happened but it just never quite works the way you want it to and so i",
    "start": "1920240",
    "end": "1925919"
  },
  {
    "text": "find that like bad things just keep on happening and then also it's just like this myriad of",
    "start": "1925919",
    "end": "1932559"
  },
  {
    "text": "bugs that are just super hard to track down and it doesn't show itself right away but every year you find yourself",
    "start": "1932559",
    "end": "1938799"
  },
  {
    "text": "having a few more production bugs okay this year we're up 50 this year we're up 50 this year we're up 50 all sudden",
    "start": "1938799",
    "end": "1944640"
  },
  {
    "text": "you're like wow we're 5x from where we were even though if you 50 a bunch of times you will not get 5x wait somebody",
    "start": "1944640",
    "end": "1949919"
  },
  {
    "text": "just coughed elixir wet slugs please elaborate no you don't need the you do not need the",
    "start": "1949919",
    "end": "1955200"
  },
  {
    "text": "their name is probably ryan as the only person who uses elixir i don't even believe in it it's a fake language i",
    "start": "1955200",
    "end": "1960240"
  },
  {
    "text": "shipped elixir for a year at twitch it was great it doesn't even have types it does",
    "start": "1960240",
    "end": "1965360"
  },
  {
    "text": "simply it has two plus signs for concatenate language is crazy okay",
    "start": "1965360",
    "end": "1970640"
  },
  {
    "text": "oh trust it it's fun i i had so much fun with elixir i would never recommend anybody ship it",
    "start": "1970640",
    "end": "1975919"
  },
  {
    "text": "at this point but man it was so fun and we got a lot done with it okay i want to actually hear more production because i used a lowercase p",
    "start": "1975919",
    "end": "1981840"
  },
  {
    "text": "you broke production because you used a lowercase p go go please go on that go go on because i have power rangers is",
    "start": "1981840",
    "end": "1988159"
  },
  {
    "text": "spelled with an uppercase p for the class that was defined for it or it wasn't class it was uh for whatever our bucket was for it and the",
    "start": "1988159",
    "end": "1995760"
  },
  {
    "text": "type definitions because they don't exist didn't catch that in a pattern match and uh yeah everything broke live",
    "start": "1995760",
    "end": "2002320"
  },
  {
    "text": "there's some other very fun production errors there though that was the closest one thing to one that like a unit test",
    "start": "2002320",
    "end": "2007360"
  },
  {
    "text": "could have caught my favorite though was that in the power rangers episodes that we got to air almost all of them had the",
    "start": "2007360",
    "end": "2014000"
  },
  {
    "text": "audio on channels one and two we were pretty confident all of them did like left is one right is two even though there was nine channels",
    "start": "2014000",
    "end": "2020240"
  },
  {
    "text": "one episode like episode five i think had channels one and two were just sound effects so we aired a whole episode of",
    "start": "2020240",
    "end": "2026960"
  },
  {
    "text": "power rangers with just the sound effects oh that sounds beautiful",
    "start": "2026960",
    "end": "2032320"
  },
  {
    "text": "just the whole time that's it that's actually it was phenomenal we heard the whole thing too we didn't cut it didn't have a way to yet we just",
    "start": "2032320",
    "end": "2038000"
  },
  {
    "text": "built the code base like three days before so like it we let the whole episode air there's like a fight in like a popcorn bag because they got like",
    "start": "2038000",
    "end": "2045039"
  },
  {
    "text": "shrunk to like mini versions and they had like a fight if god it was so the funniest thing ever the clips are still",
    "start": "2045039",
    "end": "2050480"
  },
  {
    "text": "around twitch randomly so i'd say that we both agree on this point that elixir is not a good choice so i am happy about",
    "start": "2050480",
    "end": "2056800"
  },
  {
    "text": "that um so i'm gonna throw something out there and it's gonna be super contentious for you you know your little",
    "start": "2056800",
    "end": "2062158"
  },
  {
    "text": "state problem that you're having so you know i i hope that you are prepared for this but i do believe that",
    "start": "2062159",
    "end": "2068560"
  },
  {
    "text": "often when you have super problematic problematic async state containers one of the best and most wholesome way to",
    "start": "2068560",
    "end": "2075200"
  },
  {
    "text": "solve them would be a delicious class put it in a nice stay container have all the callbacks contained and then it just",
    "start": "2075200",
    "end": "2080800"
  },
  {
    "text": "only emits the things it needs to emit so you create like an observable light if you will on a very small thin layer",
    "start": "2080800",
    "end": "2086158"
  },
  {
    "text": "now i know you hate classes to the point where you even yes linted them out of your product which",
    "start": "2086159",
    "end": "2093040"
  },
  {
    "text": "you know i mean i'm not gonna say we're gonna fist fight but we're probably gonna fist fight over this but either way so",
    "start": "2093040",
    "end": "2098240"
  },
  {
    "text": "would this be a place you would consider a class",
    "start": "2098240",
    "end": "2102838"
  },
  {
    "text": "if the async was the only problem yes but we have a few more interesting issues here primarily around like",
    "start": "2105040",
    "end": "2111920"
  },
  {
    "text": "boundaries between different state machines that have different different sources of truth so we have your audio",
    "start": "2111920",
    "end": "2117200"
  },
  {
    "text": "and video device which are synchronous by which you pick and then asynchronous by if the tracks exist with an",
    "start": "2117200",
    "end": "2123200"
  },
  {
    "text": "additional set of state on top for audio levels like resolution selected stuff like that battle has to communicate with",
    "start": "2123200",
    "end": "2129599"
  },
  {
    "text": "an additional state machine from the server of what's permitted in this room what are you allowed to do which of these settings can be selected or not",
    "start": "2129599",
    "end": "2136480"
  },
  {
    "text": "selected so there's like a second state machine that is interacting with that one we can probably merge those two together but",
    "start": "2136480",
    "end": "2143040"
  },
  {
    "text": "it's going to be rough because we have to persist some things locally and persist some things server side then there's the third part which is the",
    "start": "2143040",
    "end": "2148320"
  },
  {
    "text": "actual webrtc connection layer and that is uh a lot and making all three of these",
    "start": "2148320",
    "end": "2154720"
  },
  {
    "text": "parts interact tends to be the most painful point of this could we throw all of this together into",
    "start": "2154720",
    "end": "2160960"
  },
  {
    "text": "one class maybe but then the parts that we need to consume in isolation are no longer consumable in isolation like",
    "start": "2160960",
    "end": "2166400"
  },
  {
    "text": "right now you're an embed inside of my stream i don't want anything to do with devices or audio or av management or",
    "start": "2166400",
    "end": "2172720"
  },
  {
    "text": "even like the server expectations around those things here so i need to be able to take that part and reuse it and",
    "start": "2172720",
    "end": "2178400"
  },
  {
    "text": "classes encourage you to throw everything in one place and now you can't break those parts out anymore and",
    "start": "2178400",
    "end": "2183599"
  },
  {
    "text": "that's why we really go deep on the functional aspect we try to make reusable parts because we get random",
    "start": "2183599",
    "end": "2189680"
  },
  {
    "text": "requests and crazy ideas from our users all the time we want to be able to explore it and classes make that harder",
    "start": "2189680",
    "end": "2195359"
  },
  {
    "text": "okay okay i think you're using classes wrong but i do i do i do understand this i'm i'm a very strict class user in the",
    "start": "2195359",
    "end": "2202640"
  },
  {
    "text": "sense that i will never go beyond one deep uh i think inheritance was a mistake but",
    "start": "2202640",
    "end": "2208240"
  },
  {
    "text": "i do know one case where i think inheritance was the right call which of course is event emitters right when you just want something that says like i",
    "start": "2208240",
    "end": "2214320"
  },
  {
    "text": "will now emit events for you and you can call a function uh i think that that was the right abstraction though i can't figure out a",
    "start": "2214320",
    "end": "2219680"
  },
  {
    "text": "way around it to not be a class that inherits i don't know what else to do with that one it's a little painful for",
    "start": "2219680",
    "end": "2225359"
  },
  {
    "text": "me on that but uh i made a custom hook it's really nice hooks don't no let's not let's not get",
    "start": "2225359",
    "end": "2230960"
  },
  {
    "text": "started in garbage factories okay i have i i emotionally hurt on the inside every single time v8 goes into garbage",
    "start": "2230960",
    "end": "2236400"
  },
  {
    "text": "collection i just i feel like i go on a non-technical defense rant on hooks",
    "start": "2236400",
    "end": "2241680"
  },
  {
    "text": "quick yeah sure sure for those that don't know we're talking now about i believe hook started in react 16 if i'm",
    "start": "2241680",
    "end": "2247680"
  },
  {
    "text": "if i'm not mistaken 17. oh yeah 16.62 nine ten i think eight eight or nine",
    "start": "2247680",
    "end": "2254400"
  },
  {
    "text": "definitely nine okay cool six nine is in there for sure yeah it was early 2018 they were announced if i",
    "start": "2254400",
    "end": "2260640"
  },
  {
    "text": "recall i remember like i used to hitting the twitch code base super hard so yes",
    "start": "2260640",
    "end": "2265680"
  },
  {
    "text": "it did hit a lot of code bases super hard it was great i was one of the big advocates at twitch i got us entirely",
    "start": "2265680",
    "end": "2270800"
  },
  {
    "text": "moved over to hooks pretty much in like a year i got us updated all the core packages like our graphql and stuff like",
    "start": "2270800",
    "end": "2275839"
  },
  {
    "text": "that so you consume hooks and i also ship modview as the first feature at twitch that didn't use any classes and",
    "start": "2275839",
    "end": "2280960"
  },
  {
    "text": "it's the entirety of its like development it was a fully functional feature branch using hooks exclusively for state it was great but yeah the as",
    "start": "2280960",
    "end": "2288160"
  },
  {
    "text": "for the important part of hooks outside of the tech i could totally agree that some of the ergonomics and some of the like",
    "start": "2288160",
    "end": "2294000"
  },
  {
    "text": "things they do can lead developers down bad pipes absolutely we'll take the l there but the the beauty of what hooks",
    "start": "2294000",
    "end": "2300400"
  },
  {
    "text": "enabled was a third-party community of developers to build awesome things into react it was",
    "start": "2300400",
    "end": "2307839"
  },
  {
    "text": "like use effect for example is the hook that exists inside of every other framework that they don't expose",
    "start": "2307839",
    "end": "2314640"
  },
  {
    "text": "because they wrap that with 15 different things that you might want to use instead so like how do i put it",
    "start": "2314640",
    "end": "2322160"
  },
  {
    "text": "yeah like like on mount for example is a thing that almost every framework exposes when this",
    "start": "2322160",
    "end": "2328320"
  },
  {
    "text": "thing mounts you have a function you can run in react you build that yourself with",
    "start": "2328320",
    "end": "2333760"
  },
  {
    "text": "use effect now because if you have a use effect with an empty dependency array that runs on mount but what if the",
    "start": "2333760",
    "end": "2339680"
  },
  {
    "text": "function you pass that changes now there's a lit rule that tells you hey this thing needs to be here and it",
    "start": "2339680",
    "end": "2345680"
  },
  {
    "text": "encourages good behaviors in some ways but it does that by giving you a very",
    "start": "2345680",
    "end": "2351359"
  },
  {
    "text": "very raw primitive it's almost the first instance of go-to in state management",
    "start": "2351359",
    "end": "2356640"
  },
  {
    "text": "which is why it's so scary and why it's able to be used in such bad ways but the power it introduces is community",
    "start": "2356640",
    "end": "2363359"
  },
  {
    "text": "development of things that hook in there i think react enabled this before with",
    "start": "2363359",
    "end": "2369280"
  },
  {
    "text": "components the idea of like the material ui component library coming out and giving you this thing you install and it",
    "start": "2369280",
    "end": "2375440"
  },
  {
    "text": "has a button built in a drop down built in all these things hooks gave that to us for state and life cycles where you",
    "start": "2375440",
    "end": "2380720"
  },
  {
    "text": "can install react query which manages like server state and async functions locally and caches them and like persist",
    "start": "2380720",
    "end": "2386880"
  },
  {
    "text": "them around your app things like jodi and zus stand and obviously redux but other new state management libraries as",
    "start": "2386880",
    "end": "2393119"
  },
  {
    "text": "well how they allow you to react doesn't solve a lot of problems",
    "start": "2393119",
    "end": "2398560"
  },
  {
    "text": "and i have so much respect for that team that when they have the option to solve this problem their way or abstract the",
    "start": "2398560",
    "end": "2404400"
  },
  {
    "text": "piece to allow the community to solve it themselves they always pick the ladder and that's why i like react more than a",
    "start": "2404400",
    "end": "2410240"
  },
  {
    "text": "lot of other solutions they let the community do the things that they're not doing yep so so here here so my my argument",
    "start": "2410240",
    "end": "2417760"
  },
  {
    "text": "against hooks uh is a purely technical argument uh and it",
    "start": "2417760",
    "end": "2422960"
  },
  {
    "text": "has nothing to do with the word dx right i don't i i still not sure if dx is a real thing um but",
    "start": "2422960",
    "end": "2429359"
  },
  {
    "text": "here i'll just throw this out there that uh every single time a hook is executed right it's it's executed in code so you",
    "start": "2429359",
    "end": "2436000"
  },
  {
    "text": "use effect has a function that has to be thrown in plus some sort of array of arguments that show that it has or has",
    "start": "2436000",
    "end": "2441839"
  },
  {
    "text": "not changed correct that's a fairly primitive way of saying it yeah and so one of my big problems with",
    "start": "2441839",
    "end": "2447839"
  },
  {
    "text": "that is a it generates a closure b generates a function c generates an array right every single render and as these",
    "start": "2447839",
    "end": "2454480"
  },
  {
    "text": "things get larger and larger and larger you find yourself generating upon every render a thousand just throwaway objects",
    "start": "2454480",
    "end": "2460640"
  },
  {
    "text": "every single time which means you're spending 20 30 50 100 milliseconds in garbage collection every single render",
    "start": "2460640",
    "end": "2466960"
  },
  {
    "text": "and it just becomes this progressive hole which ultimately in the end hooks and classes share a lot in common",
    "start": "2466960",
    "end": "2474640"
  },
  {
    "text": "they share a way for you to identify a piece of like code or value that you can call",
    "start": "2474640",
    "end": "2480240"
  },
  {
    "text": "into now you may not be using this dot foo to grab foo but you're using use effect foo to get foo out right so they",
    "start": "2480240",
    "end": "2487200"
  },
  {
    "text": "actually are representatively almost one-to-one translation of each other but classes aren't as easily transferable",
    "start": "2487200",
    "end": "2493119"
  },
  {
    "text": "and i get that so i'm not arguing or advocating for classes in this thing but it does prevent a huge amount of garbage",
    "start": "2493119",
    "end": "2499839"
  },
  {
    "text": "and thinking through what you're producing it doesn't really matter to you and me i'm on a threadripper with 64",
    "start": "2499839",
    "end": "2505280"
  },
  {
    "text": "threads you're probably on some on my guess is a macbook m1 drinking phil's coffee high fiving with sweet and creamy",
    "start": "2505280",
    "end": "2511599"
  },
  {
    "text": "or whatever it is uh ambrosia of the goddess i believe but yes i love my macbook air okay so there you go and so",
    "start": "2511599",
    "end": "2517440"
  },
  {
    "text": "like your value and speed does not look anything like the world right like nothing like the world the world doesn't",
    "start": "2517440",
    "end": "2523760"
  },
  {
    "text": "even use mac products right it's like 80 plus percent android there's entire you know india is a",
    "start": "2523760",
    "end": "2529680"
  },
  {
    "text": "heavily phone used place and so making these decisions though very small for us",
    "start": "2529680",
    "end": "2534960"
  },
  {
    "text": "disproportionately affect a large people around the world and so that was my big argument i keep my trusty s5 and i have",
    "start": "2534960",
    "end": "2540800"
  },
  {
    "text": "a broken ass moto x moto g actually from like 2003 here as well that's good",
    "start": "2540800",
    "end": "2548079"
  },
  {
    "text": "those are good very important devices in my testing arsenal i think this is very important and i totally agree if i was",
    "start": "2548079",
    "end": "2553920"
  },
  {
    "text": "shipping mobile clients i probably wouldn't be using react for the like web interface right now i'd probably do as",
    "start": "2553920",
    "end": "2560560"
  },
  {
    "text": "much server jam as i could and then pop into stuff like solid.js when i can't but i'm not building or recommending",
    "start": "2560560",
    "end": "2566960"
  },
  {
    "text": "people build those things in particular very client-heavy stuff that needs to run on low-powered devices with react",
    "start": "2566960",
    "end": "2574560"
  },
  {
    "text": "and i think that react ships to users more often than it probably should and we're starting to see that change with things like remix blowing up things like",
    "start": "2574560",
    "end": "2581440"
  },
  {
    "text": "astro proving out ssr technologies even next.js becoming the recommended like go-to to emit a new project by the react",
    "start": "2581440",
    "end": "2587760"
  },
  {
    "text": "team themselves i think that we're moving away from react on the client but to go back to the point about like hooks",
    "start": "2587760",
    "end": "2594079"
  },
  {
    "text": "are classes and classes problems in a different coat i honestly kind of agree but i think the",
    "start": "2594079",
    "end": "2599839"
  },
  {
    "text": "new coat is much rawer and more composable which is a huge step forward",
    "start": "2599839",
    "end": "2605280"
  },
  {
    "text": "the pa like in classes in react you had on component mount on component mount on",
    "start": "2605280",
    "end": "2610480"
  },
  {
    "text": "props will change on props did change and if there was a case never worked",
    "start": "2610480",
    "end": "2616160"
  },
  {
    "text": "you were [ __ ] the cool thing that's changed now is since they didn't",
    "start": "2616160",
    "end": "2621520"
  },
  {
    "text": "put in four specific cases that you have to build into that you have to build your component",
    "start": "2621520",
    "end": "2627119"
  },
  {
    "text": "around as well you could instead take part of that which is if you had like if i had a",
    "start": "2627119",
    "end": "2632560"
  },
  {
    "text": "component that on mount i wanted to connect to a call and on mount i wanted to disconnect to a call i have to build",
    "start": "2632560",
    "end": "2637599"
  },
  {
    "text": "a component around those needs into the component itself hooks let me abstract that into a single thing use agora call",
    "start": "2637599",
    "end": "2644880"
  },
  {
    "text": "under the hood it's doing effectively the same thing as you said it's basically just classes unbundled but",
    "start": "2644880",
    "end": "2650160"
  },
  {
    "text": "instead of five things i have to hook into at the component level i have one hook that is abstracted that owns and",
    "start": "2650160",
    "end": "2657119"
  },
  {
    "text": "does all of that and i know you said that dx isn't real i think that's the core thing that leads to almost all of our disagreements here i think dx is the",
    "start": "2657119",
    "end": "2663839"
  },
  {
    "text": "only thing that's real other than ux everything else is made up okay okay",
    "start": "2663839",
    "end": "2668880"
  },
  {
    "text": "see i think ux is the only thing that exists dx is the fake thing that we complain about",
    "start": "2668880",
    "end": "2674079"
  },
  {
    "text": "ux is number one dx is number two tests aren't on the list damn",
    "start": "2674079",
    "end": "2679599"
  },
  {
    "text": "that's i don't we're just never gonna find or i don't think we're gonna find common ground here but this was good nonetheless",
    "start": "2679599",
    "end": "2685839"
  },
  {
    "text": "all right theo so a lot of people i don't know if everyone around here knows you can you like how do we find you where do we find you at",
    "start": "2685839",
    "end": "2692640"
  },
  {
    "text": "yeah of course uh the place that i am posting the most is definitely twitter at t3.gg spelled out d-o-t-g-g i post a",
    "start": "2692640",
    "end": "2700880"
  },
  {
    "text": "lot i mostly talk about end stuff and content creator media stuff i'm really into the content creation world after",
    "start": "2700880",
    "end": "2706720"
  },
  {
    "text": "working at twitch and whatnot currently working really hard on my startup ping labs ping.gg is the domain for that it's",
    "start": "2706720",
    "end": "2713280"
  },
  {
    "text": "the wonderful tool bringing me into this stream in hd and bringing prime into mine in the same yeah we are used by a",
    "start": "2713280",
    "end": "2719440"
  },
  {
    "text": "lot of awesome content creators and streamers really excited about the cool stuff we're building there and yeah if you ever want to talk crap about all",
    "start": "2719440",
    "end": "2726240"
  },
  {
    "text": "things full stack type safety and webdev especially let me know",
    "start": "2726240",
    "end": "2732520"
  },
  {
    "text": "you",
    "start": "2736560",
    "end": "2738640"
  }
]