[
  {
    "text": "so if you've been on Twitter at any",
    "start": "40",
    "end": "1800"
  },
  {
    "text": "point you would think that JavaScript is",
    "start": "1800",
    "end": "3600"
  },
  {
    "text": "the greatest language ever and that",
    "start": "3600",
    "end": "5120"
  },
  {
    "text": "everybody uses it everybody except for",
    "start": "5120",
    "end": "7759"
  },
  {
    "text": "this guy thank you Andy Wong why though",
    "start": "7759",
    "end": "10080"
  },
  {
    "text": "backing has proven to be good with",
    "start": "10080",
    "end": "11480"
  },
  {
    "text": "JavaScript well sery I don't know if I",
    "start": "11480",
    "end": "13759"
  },
  {
    "text": "believe you let's find out okay because",
    "start": "13759",
    "end": "15759"
  },
  {
    "text": "as far as I can tell every JavaScript",
    "start": "15759",
    "end": "18039"
  },
  {
    "text": "library claims that it's blazingly fast",
    "start": "18039",
    "end": "20920"
  },
  {
    "text": "blazingly fast testing blazingly fast",
    "start": "20920",
    "end": "23119"
  },
  {
    "text": "spreadsheets blazing fast websockets but",
    "start": "23119",
    "end": "26080"
  },
  {
    "text": "is it though is it actually blazing fast",
    "start": "26080",
    "end": "29160"
  },
  {
    "text": "or even fast well the only reasonable",
    "start": "29160",
    "end": "31039"
  },
  {
    "text": "way to do this is to use another popular",
    "start": "31039",
    "end": "33120"
  },
  {
    "text": "backend language seg go that has similar",
    "start": "33120",
    "end": "35520"
  },
  {
    "text": "characteristics garbage collection and",
    "start": "35520",
    "end": "37640"
  },
  {
    "text": "let's just see which one's faster",
    "start": "37640",
    "end": "39680"
  },
  {
    "text": "blazingly faster well what about rust I",
    "start": "39680",
    "end": "42440"
  },
  {
    "text": "thought you loved rust I do maybe not as",
    "start": "42440",
    "end": "45000"
  },
  {
    "text": "much for the back end though it's kind",
    "start": "45000",
    "end": "46840"
  },
  {
    "text": "of",
    "start": "46840",
    "end": "49280"
  },
  {
    "text": "uh not fun all right so let's go over",
    "start": "49280",
    "end": "52079"
  },
  {
    "text": "the experiment there are several web",
    "start": "52079",
    "end": "54480"
  },
  {
    "text": "sockets that will all be connected to a",
    "start": "54480",
    "end": "56800"
  },
  {
    "text": "singular server the sockets will inherit",
    "start": "56800",
    "end": "58920"
  },
  {
    "text": "the event emitter interace face and with",
    "start": "58920",
    "end": "60760"
  },
  {
    "text": "that a function called push sockets will",
    "start": "60760",
    "end": "62840"
  },
  {
    "text": "emit out a single message and can be",
    "start": "62840",
    "end": "65158"
  },
  {
    "text": "pushed a single message with go I use",
    "start": "65159",
    "end": "67400"
  },
  {
    "text": "channels every message that the server",
    "start": "67400",
    "end": "69200"
  },
  {
    "text": "gets it will then emit out what is",
    "start": "69200",
    "end": "71439"
  },
  {
    "text": "listening is a chat program if a user",
    "start": "71439",
    "end": "74240"
  },
  {
    "text": "sends a message bang join in a room name",
    "start": "74240",
    "end": "76320"
  },
  {
    "text": "it will be added to that room this",
    "start": "76320",
    "end": "77799"
  },
  {
    "text": "experiment involved 20 rooms that would",
    "start": "77799",
    "end": "79880"
  },
  {
    "text": "be distributed among the spawned sockets",
    "start": "79880",
    "end": "82720"
  },
  {
    "text": "It produced the same order every single",
    "start": "82720",
    "end": "84360"
  },
  {
    "text": "time the message is sent will be an",
    "start": "84360",
    "end": "86159"
  },
  {
    "text": "object that contains some information",
    "start": "86159",
    "end": "88040"
  },
  {
    "text": "that should be Json parsed manipulated",
    "start": "88040",
    "end": "90119"
  },
  {
    "text": "and by manipulated I mean I just add one",
    "start": "90119",
    "end": "91960"
  },
  {
    "text": "to a property which is always 68 nice",
    "start": "91960",
    "end": "95280"
  },
  {
    "text": "and yes the test client is written in",
    "start": "95280",
    "end": "97200"
  },
  {
    "text": "Rust the message then will be",
    "start": "97200",
    "end": "98799"
  },
  {
    "text": "stringified and handed back to each",
    "start": "98799",
    "end": "101000"
  },
  {
    "text": "client the interface on the way back is",
    "start": "101000",
    "end": "103200"
  },
  {
    "text": "of course going to be an array of",
    "start": "103200",
    "end": "104520"
  },
  {
    "text": "messages that will go to each client one",
    "start": "104520",
    "end": "106360"
  },
  {
    "text": "at a time now I've written the program",
    "start": "106360",
    "end": "107799"
  },
  {
    "text": "so that they are effectively identical",
    "start": "107799",
    "end": "109920"
  },
  {
    "text": "since there are no channels in node I",
    "start": "109920",
    "end": "111360"
  },
  {
    "text": "just simply used event emitters and then",
    "start": "111360",
    "end": "112840"
  },
  {
    "text": "ad just a function to push it back",
    "start": "112840",
    "end": "114240"
  },
  {
    "text": "through now would it have been more",
    "start": "114240",
    "end": "116000"
  },
  {
    "text": "efficient for me to have the same",
    "start": "116000",
    "end": "117640"
  },
  {
    "text": "function in go that I can just push one",
    "start": "117640",
    "end": "119640"
  },
  {
    "text": "mage Mage through it could have been but",
    "start": "119640",
    "end": "121240"
  },
  {
    "text": "I felt like it was kind of moot for this",
    "start": "121240",
    "end": "122920"
  },
  {
    "text": "server but each server will stringify",
    "start": "122920",
    "end": "124960"
  },
  {
    "text": "the message and then divy it up among",
    "start": "124960",
    "end": "126840"
  },
  {
    "text": "the sockets as opposed to Json",
    "start": "126840",
    "end": "128440"
  },
  {
    "text": "stringifying per socket so I really did",
    "start": "128440",
    "end": "130560"
  },
  {
    "text": "try to make this as Fair as possible and",
    "start": "130560",
    "end": "133239"
  },
  {
    "text": "of course you can go check out the code",
    "start": "133239",
    "end": "135080"
  },
  {
    "text": "chat again from twitch decided on the",
    "start": "135080",
    "end": "137920"
  },
  {
    "text": "name which I did vote for saketumi baby",
    "start": "137920",
    "end": "141319"
  },
  {
    "text": "sakumi baby instead you guys chose",
    "start": "141319",
    "end": "143440"
  },
  {
    "text": "Tyrone Biggins Dave Chappelle's lovely",
    "start": "143440",
    "end": "145239"
  },
  {
    "text": "character this this a 5:00 free crack",
    "start": "145239",
    "end": "147840"
  },
  {
    "text": "giveaway you degenerates either way",
    "start": "147840",
    "end": "150480"
  },
  {
    "text": "links in the description you can go",
    "start": "150480",
    "end": "151760"
  },
  {
    "text": "check out the code validate that I",
    "start": "151760",
    "end": "153360"
  },
  {
    "text": "didn't you know make anything unfair so",
    "start": "153360",
    "end": "156280"
  },
  {
    "text": "let's briefly go over the test client",
    "start": "156280",
    "end": "157920"
  },
  {
    "text": "cuz I want to make sure that you",
    "start": "157920",
    "end": "159400"
  },
  {
    "text": "understand the experiment that way the",
    "start": "159400",
    "end": "160959"
  },
  {
    "text": "numbers make more sense effectively",
    "start": "160959",
    "end": "163080"
  },
  {
    "text": "every 100 milliseconds I will emit a",
    "start": "163080",
    "end": "165640"
  },
  {
    "text": "batch of messages the batch of messages",
    "start": "165640",
    "end": "167720"
  },
  {
    "text": "will be in the following format it'll",
    "start": "167720",
    "end": "169200"
  },
  {
    "text": "have a timestamp which is the current",
    "start": "169200",
    "end": "170640"
  },
  {
    "text": "one we grabbed a small stringified",
    "start": "170640",
    "end": "172519"
  },
  {
    "text": "string message and of course that number",
    "start": "172519",
    "end": "174440"
  },
  {
    "text": "in which we increment by one on the",
    "start": "174440",
    "end": "176200"
  },
  {
    "text": "server nice that way every socket has a",
    "start": "176200",
    "end": "179319"
  },
  {
    "text": "small amount of time it's actually",
    "start": "179319",
    "end": "180640"
  },
  {
    "text": "sending messages in a large amount of",
    "start": "180640",
    "end": "182319"
  },
  {
    "text": "time it's actually waiting to receive",
    "start": "182319",
    "end": "183680"
  },
  {
    "text": "messages this also allows for a very",
    "start": "183680",
    "end": "185640"
  },
  {
    "text": "even pace of messages coming through",
    "start": "185640",
    "end": "187519"
  },
  {
    "text": "that is because I always make sure that",
    "start": "187519",
    "end": "188840"
  },
  {
    "text": "I'm sleeping only 100 milliseconds Max",
    "start": "188840",
    "end": "191239"
  },
  {
    "text": "between each set of messages being sent",
    "start": "191239",
    "end": "193319"
  },
  {
    "text": "and if at any point I have exceeded the",
    "start": "193319",
    "end": "195280"
  },
  {
    "text": "amount of time it takes for me to send",
    "start": "195280",
    "end": "197200"
  },
  {
    "text": "those messages vers my sleep cycle I",
    "start": "197200",
    "end": "199480"
  },
  {
    "text": "will let myself know and guess what it",
    "start": "199480",
    "end": "201280"
  },
  {
    "text": "never happened once so we're good to go",
    "start": "201280",
    "end": "202959"
  },
  {
    "text": "then of course each socket will wait for",
    "start": "202959",
    "end": "204799"
  },
  {
    "text": "its message that it sent to come back to",
    "start": "204799",
    "end": "207280"
  },
  {
    "text": "itself and then measure the difference",
    "start": "207280",
    "end": "208879"
  },
  {
    "text": "in time and print out in a nice CSV",
    "start": "208879",
    "end": "211040"
  },
  {
    "text": "friendly format in which I can use",
    "start": "211040",
    "end": "212439"
  },
  {
    "text": "python or Google Sheets to do a little",
    "start": "212439",
    "end": "214159"
  },
  {
    "text": "bit of analysis using of course python",
    "start": "214159",
    "end": "216120"
  },
  {
    "text": "we can do a basic breakdown of the",
    "start": "216120",
    "end": "217879"
  },
  {
    "text": "statistics you'll see that this is 500",
    "start": "217879",
    "end": "220120"
  },
  {
    "text": "connections made to the server for both",
    "start": "220120",
    "end": "221840"
  },
  {
    "text": "typescript and go the top numbers of a",
    "start": "221840",
    "end": "224040"
  },
  {
    "text": "course are typescript the bottom numbers",
    "start": "224040",
    "end": "225400"
  },
  {
    "text": "are go you'll see that the mean is",
    "start": "225400",
    "end": "227000"
  },
  {
    "text": "significantly different and in favor of",
    "start": "227000",
    "end": "229080"
  },
  {
    "text": "go I did not run any man Whitney test to",
    "start": "229080",
    "end": "231000"
  },
  {
    "text": "tell you if this is actually technically",
    "start": "231000",
    "end": "232599"
  },
  {
    "text": "different but a simple looking at the",
    "start": "232599",
    "end": "234319"
  },
  {
    "text": "numbers should make it fairly obvious",
    "start": "234319",
    "end": "236000"
  },
  {
    "text": "even in the 75th percentile that there's",
    "start": "236000",
    "end": "237760"
  },
  {
    "text": "a large difference between the two this",
    "start": "237760",
    "end": "239840"
  },
  {
    "text": "20 millisecond response time difference",
    "start": "239840",
    "end": "242040"
  },
  {
    "text": "doing the exact same thing except a",
    "start": "242040",
    "end": "243720"
  },
  {
    "text": "th000 clients on typescript and a th000",
    "start": "243720",
    "end": "246239"
  },
  {
    "text": "clients on go you'll see that the mean",
    "start": "246239",
    "end": "247959"
  },
  {
    "text": "is vastly different the mean did shift",
    "start": "247959",
    "end": "249959"
  },
  {
    "text": "upwards by 10 milliseconds on go about",
    "start": "249959",
    "end": "252519"
  },
  {
    "text": "10x on typescript the standard deviation",
    "start": "252519",
    "end": "255480"
  },
  {
    "text": "is huge the mean is about 2 seconds",
    "start": "255480",
    "end": "258799"
  },
  {
    "text": "required response time versus Go's 66",
    "start": "258799",
    "end": "262360"
  },
  {
    "text": "milliseconds that means the median",
    "start": "262360",
    "end": "264320"
  },
  {
    "text": "message weight period on a typescript",
    "start": "264320",
    "end": "266280"
  },
  {
    "text": "server was 1.65 seconds versus on go",
    "start": "266280",
    "end": "270400"
  },
  {
    "text": "67 milliseconds now remember this was",
    "start": "270400",
    "end": "273320"
  },
  {
    "text": "the same server in Len node I didn't",
    "start": "273320",
    "end": "275680"
  },
  {
    "text": "even have two different servers running",
    "start": "275680",
    "end": "277280"
  },
  {
    "text": "I would actually take one up run the",
    "start": "277280",
    "end": "279400"
  },
  {
    "text": "test take it down take the next one up",
    "start": "279400",
    "end": "281199"
  },
  {
    "text": "run the test is a huge difference and it",
    "start": "281199",
    "end": "284120"
  },
  {
    "text": "only gets significantly worse but I feel",
    "start": "284120",
    "end": "286280"
  },
  {
    "text": "like looking at this data doesn't quite",
    "start": "286280",
    "end": "287840"
  },
  {
    "text": "do it justice let's look at it with some",
    "start": "287840",
    "end": "289680"
  },
  {
    "text": "graphs so I took all the timings from",
    "start": "289680",
    "end": "291520"
  },
  {
    "text": "each one of the servers and I actually",
    "start": "291520",
    "end": "293440"
  },
  {
    "text": "reduced down the set taking like the",
    "start": "293440",
    "end": "295160"
  },
  {
    "text": "first 100 averaging it taking the second",
    "start": "295160",
    "end": "297080"
  },
  {
    "text": "100 averaging it so I could just look at",
    "start": "297080",
    "end": "298560"
  },
  {
    "text": "a smaller set and plus it causes the",
    "start": "298560",
    "end": "300720"
  },
  {
    "text": "noise to be just less right it just is a",
    "start": "300720",
    "end": "302800"
  },
  {
    "text": "little bit smoother of a graph so here's",
    "start": "302800",
    "end": "304440"
  },
  {
    "text": "that exact same data that we are looking",
    "start": "304440",
    "end": "306000"
  },
  {
    "text": "at with only 500 connections except",
    "start": "306000",
    "end": "308199"
  },
  {
    "text": "using Google Sheets you can just see",
    "start": "308199",
    "end": "310199"
  },
  {
    "text": "with your eyeballs that the red line",
    "start": "310199",
    "end": "311800"
  },
  {
    "text": "being go is significantly lower than the",
    "start": "311800",
    "end": "314039"
  },
  {
    "text": "Blue Line being typescript the Y AIS",
    "start": "314039",
    "end": "316840"
  },
  {
    "text": "represents microseconds taken and of",
    "start": "316840",
    "end": "319000"
  },
  {
    "text": "course the x-axis is just simply the",
    "start": "319000",
    "end": "321360"
  },
  {
    "text": "samples in other words they represent an",
    "start": "321360",
    "end": "323360"
  },
  {
    "text": "average over say 100 messages each data",
    "start": "323360",
    "end": "325720"
  },
  {
    "text": "point so here's the Thousand connections",
    "start": "325720",
    "end": "327680"
  },
  {
    "text": "and as you can see it's just like it's a",
    "start": "327680",
    "end": "329160"
  },
  {
    "text": "blowout go is just flatlined at the",
    "start": "329160",
    "end": "331560"
  },
  {
    "text": "bottom whereas typescript goes way up to",
    "start": "331560",
    "end": "335000"
  },
  {
    "text": "the tippity top almost 6 seconds at one",
    "start": "335000",
    "end": "337600"
  },
  {
    "text": "point to dive all the way back down then",
    "start": "337600",
    "end": "339720"
  },
  {
    "text": "back up so variability just huge and it",
    "start": "339720",
    "end": "342880"
  },
  {
    "text": "gets even worse above a th all right so",
    "start": "342880",
    "end": "346120"
  },
  {
    "text": "here is 1,500 clients connected to that",
    "start": "346120",
    "end": "348800"
  },
  {
    "text": "same server at this point you can see it",
    "start": "348800",
    "end": "350800"
  },
  {
    "text": "is just a disaster this means that",
    "start": "350800",
    "end": "353280"
  },
  {
    "text": "typescript is going to die I had",
    "start": "353280",
    "end": "355120"
  },
  {
    "text": "troubles running the server longer than",
    "start": "355120",
    "end": "356800"
  },
  {
    "text": "about 3 minutes cuz it kept exploding",
    "start": "356800",
    "end": "359639"
  },
  {
    "text": "where is go just Pur along a slight",
    "start": "359639",
    "end": "362199"
  },
  {
    "text": "increase in roundtrip time but you know",
    "start": "362199",
    "end": "364880"
  },
  {
    "text": "nothing much to bat an eye at and look",
    "start": "364880",
    "end": "366919"
  },
  {
    "text": "at how efficient it is typescript at",
    "start": "366919",
    "end": "368880"
  },
  {
    "text": "this point was also consuming about",
    "start": "368880",
    "end": "370080"
  },
  {
    "text": "double its memory and it was growing",
    "start": "370080",
    "end": "371680"
  },
  {
    "text": "quickly and of course every time we",
    "start": "371680",
    "end": "373199"
  },
  {
    "text": "added more clients the typescript line",
    "start": "373199",
    "end": "375520"
  },
  {
    "text": "just got steeper and it would live less",
    "start": "375520",
    "end": "377360"
  },
  {
    "text": "Long go just didn't really change that",
    "start": "377360",
    "end": "379800"
  },
  {
    "text": "much so you're probably saying well",
    "start": "379800",
    "end": "381319"
  },
  {
    "text": "Prime you probably were on like some",
    "start": "381319",
    "end": "382840"
  },
  {
    "text": "multicore server that really just",
    "start": "382840",
    "end": "385039"
  },
  {
    "text": "disadvantaged typescript and made it so",
    "start": "385039",
    "end": "387120"
  },
  {
    "text": "that go because it can be used on",
    "start": "387120",
    "end": "389599"
  },
  {
    "text": "multiple cores just it gave it such a",
    "start": "389599",
    "end": "391240"
  },
  {
    "text": "significant Advantage false it was on",
    "start": "391240",
    "end": "393440"
  },
  {
    "text": "Len no's smallest instance which is a",
    "start": "393440",
    "end": "395360"
  },
  {
    "text": "single Core 1 GB of RAM $5 a month wow",
    "start": "395360",
    "end": "400160"
  },
  {
    "text": "so that means there was no Advantage if",
    "start": "400160",
    "end": "402639"
  },
  {
    "text": "anything it meant there's probably a",
    "start": "402639",
    "end": "404560"
  },
  {
    "text": "slight disadvantage for go not being",
    "start": "404560",
    "end": "407000"
  },
  {
    "text": "able to spread all of its green threads",
    "start": "407000",
    "end": "408400"
  },
  {
    "text": "across multiple cores instead having all",
    "start": "408400",
    "end": "410599"
  },
  {
    "text": "of those different gof funks running on",
    "start": "410599",
    "end": "412599"
  },
  {
    "text": "a single core yet it just crushed so",
    "start": "412599",
    "end": "415400"
  },
  {
    "text": "you're probably ask me is it actually",
    "start": "415400",
    "end": "417039"
  },
  {
    "text": "better to write go though I would",
    "start": "417039",
    "end": "418560"
  },
  {
    "text": "personally say that go is actually a",
    "start": "418560",
    "end": "420039"
  },
  {
    "text": "nicer experience than typescript one big",
    "start": "420039",
    "end": "422280"
  },
  {
    "text": "reason is that go controls and runs its",
    "start": "422280",
    "end": "424560"
  },
  {
    "text": "own tools there's an expected format of",
    "start": "424560",
    "end": "426639"
  },
  {
    "text": "code which some of the formats I dislike",
    "start": "426639",
    "end": "429080"
  },
  {
    "text": "some I like but I'm okay with that all",
    "start": "429080",
    "end": "431000"
  },
  {
    "text": "projects universally look the same",
    "start": "431000",
    "end": "432759"
  },
  {
    "text": "second they have their own tools their",
    "start": "432759",
    "end": "434400"
  },
  {
    "text": "own build system their own way they get",
    "start": "434400",
    "end": "436440"
  },
  {
    "text": "modules there's not yarn versus npm",
    "start": "436440",
    "end": "438800"
  },
  {
    "text": "versus this that and the other and it",
    "start": "438800",
    "end": "440280"
  },
  {
    "text": "can be executed effectively on any",
    "start": "440280",
    "end": "441919"
  },
  {
    "text": "platform so it has a lot of the",
    "start": "441919",
    "end": "443319"
  },
  {
    "text": "similarities as node just what I would",
    "start": "443319",
    "end": "445879"
  },
  {
    "text": "consider a better ecosystem the code",
    "start": "445879",
    "end": "448360"
  },
  {
    "text": "itself I feel feel is better channels",
    "start": "448360",
    "end": "450879"
  },
  {
    "text": "are definitely Superior to anything that",
    "start": "450879",
    "end": "453919"
  },
  {
    "text": "JavaScript has now goes also",
    "start": "453919",
    "end": "455800"
  },
  {
    "text": "increasingly growing with the Preferred",
    "start": "455800",
    "end": "458639"
  },
  {
    "text": "Choice a lot of that's because it's",
    "start": "458639",
    "end": "460560"
  },
  {
    "text": "really fast not as fast as rust but it",
    "start": "460560",
    "end": "463400"
  },
  {
    "text": "is really easy to write like typescript",
    "start": "463400",
    "end": "466720"
  },
  {
    "text": "easy to write so you kind of really get",
    "start": "466720",
    "end": "468479"
  },
  {
    "text": "the best of all worlds when using go now",
    "start": "468479",
    "end": "471000"
  },
  {
    "text": "another critique you could say is that",
    "start": "471000",
    "end": "472159"
  },
  {
    "text": "my server was too simple that I was",
    "start": "472159",
    "end": "474360"
  },
  {
    "text": "spending most of my time just making CIS",
    "start": "474360",
    "end": "476800"
  },
  {
    "text": "calls sending messages out across the",
    "start": "476800",
    "end": "478800"
  },
  {
    "text": "wire and you're absolutely right I do",
    "start": "478800",
    "end": "480720"
  },
  {
    "text": "think it was too simple that is why this",
    "start": "480720",
    "end": "482599"
  },
  {
    "text": "video is a part one okay we're going to",
    "start": "482599",
    "end": "484879"
  },
  {
    "text": "do multiple parts to this you know what",
    "start": "484879",
    "end": "486840"
  },
  {
    "text": "I didn't use in JavaScript I did not use",
    "start": "486840",
    "end": "488520"
  },
  {
    "text": "async A8 I didn't want to disadvantage",
    "start": "488520",
    "end": "490800"
  },
  {
    "text": "it at all hopefully you're pretty",
    "start": "490800",
    "end": "492599"
  },
  {
    "text": "excited about this I love comparing",
    "start": "492599",
    "end": "495000"
  },
  {
    "text": "languages and seeing similar features",
    "start": "495000",
    "end": "497199"
  },
  {
    "text": "and ultimately I think go is an",
    "start": "497199",
    "end": "499199"
  },
  {
    "text": "incredible choice I think it's too often",
    "start": "499199",
    "end": "501479"
  },
  {
    "text": "that people just reach for typescript",
    "start": "501479",
    "end": "503120"
  },
  {
    "text": "because it's easy it's what they're",
    "start": "503120",
    "end": "504199"
  },
  {
    "text": "familiar with but if you just take a",
    "start": "504199",
    "end": "506039"
  },
  {
    "text": "little bit of time I would even venture",
    "start": "506039",
    "end": "508039"
  },
  {
    "text": "to say that go is simp simpler and",
    "start": "508039",
    "end": "510159"
  },
  {
    "text": "quicker to learn than typescript and if",
    "start": "510159",
    "end": "512240"
  },
  {
    "text": "you take that small amount of time you",
    "start": "512240",
    "end": "513719"
  },
  {
    "text": "can write efficient servers that are",
    "start": "513719",
    "end": "515839"
  },
  {
    "text": "really easy to scale with a team even a",
    "start": "515839",
    "end": "518000"
  },
  {
    "text": "team that's dominantly comprised of",
    "start": "518000",
    "end": "519880"
  },
  {
    "text": "Juniors so if you like this kind of",
    "start": "519880",
    "end": "521360"
  },
  {
    "text": "format if you want to see more of this",
    "start": "521360",
    "end": "523719"
  },
  {
    "text": "okay hey I just like to let you know",
    "start": "523719",
    "end": "525040"
  },
  {
    "text": "that you can make some very beautiful",
    "start": "525040",
    "end": "527040"
  },
  {
    "text": "uis you know hey you know compliment to",
    "start": "527040",
    "end": "529680"
  },
  {
    "text": "you okay but you're a disaster on the",
    "start": "529680",
    "end": "531519"
  },
  {
    "text": "server so get up and get the hell out of",
    "start": "531519",
    "end": "533399"
  },
  {
    "text": "here man you're walking slow oh that's",
    "start": "533399",
    "end": "535760"
  },
  {
    "text": "your speed okay standard speed yeah",
    "start": "535760",
    "end": "538880"
  },
  {
    "text": "trust me I can can see it I can see it",
    "start": "538880",
    "end": "540320"
  },
  {
    "text": "from here tell me what you think I",
    "start": "540320",
    "end": "542000"
  },
  {
    "text": "should test and compare I personally",
    "start": "542000",
    "end": "544120"
  },
  {
    "text": "think we should probably throw in a",
    "start": "544120",
    "end": "545560"
  },
  {
    "text": "database and use a little async handling",
    "start": "545560",
    "end": "547880"
  },
  {
    "text": "with rxjs and just see the difference",
    "start": "547880",
    "end": "550480"
  },
  {
    "text": "let me know if you think typescript will",
    "start": "550480",
    "end": "551839"
  },
  {
    "text": "actually perform better once the server",
    "start": "551839",
    "end": "553399"
  },
  {
    "text": "gets more complicated or do you think go",
    "start": "553399",
    "end": "555760"
  },
  {
    "text": "is just going to win of course all of",
    "start": "555760",
    "end": "557399"
  },
  {
    "text": "this is built live on Twitch and",
    "start": "557399",
    "end": "559079"
  },
  {
    "text": "discussed in the DJ Army's Discord okay",
    "start": "559079",
    "end": "561959"
  },
  {
    "text": "so I hope you look forward to part two",
    "start": "561959",
    "end": "563200"
  },
  {
    "text": "and please say something down below tell",
    "start": "563200",
    "end": "565399"
  },
  {
    "text": "me you're excited tell me you want to",
    "start": "565399",
    "end": "566920"
  },
  {
    "text": "see cuz if you don't tell me I don't",
    "start": "566920",
    "end": "569000"
  },
  {
    "text": "know I sto doing things because people",
    "start": "569000",
    "end": "571240"
  },
  {
    "text": "are just like mm-m so if you don't hit",
    "start": "571240",
    "end": "573079"
  },
  {
    "text": "the like button or you don't say",
    "start": "573079",
    "end": "574240"
  },
  {
    "text": "something down below if you don't give",
    "start": "574240",
    "end": "575600"
  },
  {
    "text": "me the signals back I assume you don't",
    "start": "575600",
    "end": "577839"
  },
  {
    "text": "want to watch this so talk to me tell me",
    "start": "577839",
    "end": "580120"
  },
  {
    "text": "you like me tell me you want my",
    "start": "580120",
    "end": "582650"
  },
  {
    "text": "[Music]",
    "start": "582650",
    "end": "586250"
  },
  {
    "text": "[Applause]",
    "start": "586250",
    "end": "589419"
  },
  {
    "text": "body is this 5:00 free crack giveaway",
    "start": "590519",
    "end": "595600"
  }
]