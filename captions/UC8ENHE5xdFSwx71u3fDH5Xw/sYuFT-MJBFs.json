[
  {
    "text": "on the rust side we have actix a rust \nweb framework that is extremely fast  ",
    "start": "80",
    "end": "6880"
  },
  {
    "text": "actually blazingly fast yew rs rust framework \nfor creating front-end web applications using  ",
    "start": "6880",
    "end": "13520"
  },
  {
    "text": "webassembly and it uses rust which is blazingly \nfast and was everybody's favorite in 2016 17  ",
    "start": "13520",
    "end": "19760"
  },
  {
    "text": "18 19 20 and 21. on the node.js side we have \nexpress js yeah it's fast and react efficient  ",
    "start": "19760",
    "end": "28480"
  },
  {
    "text": "at least they say yes we're doing it type \nscript versus rust server side rendering  ",
    "start": "28480",
    "end": "34160"
  },
  {
    "text": "front end frameworks wait wait a second \ni'm not in my front end attire much better",
    "start": "34160",
    "end": "40640"
  },
  {
    "text": "yes we're doing another performance video it's \nactually based on a video i did right here  ",
    "start": "42960",
    "end": "47280"
  },
  {
    "text": "in which i talked about how i would love to see \nfull stack frameworks only in rust and not using  ",
    "start": "47280",
    "end": "53760"
  },
  {
    "text": "javascript all the time i personally do not like \njavascript i think i have javascript fatigue i  ",
    "start": "53760",
    "end": "59199"
  },
  {
    "text": "think i've seen enough javascript for everybody \nand so i would love to do something different i  ",
    "start": "59200",
    "end": "64559"
  },
  {
    "text": "would love to be able to write my front ends \nand my back ends in a single language and the  ",
    "start": "64560",
    "end": "69119"
  },
  {
    "text": "one that seems to have the most opportunity \nto do this is rust now the results of this may  ",
    "start": "69120",
    "end": "74160"
  },
  {
    "text": "actually surprise you and there are two parts \nto this results so it's gonna get a little bit  ",
    "start": "74160",
    "end": "79120"
  },
  {
    "text": "even more surprising towards the end we built \na pretty simple front end in both react and yew",
    "start": "79120",
    "end": "84480"
  },
  {
    "text": "that can scale based on the url so as you can \nsee i have a five here if i turn it to a one  ",
    "start": "84480",
    "end": "89760"
  },
  {
    "text": "you can see there's only two elements per block if \ni put this into say 30 you'll see that it does a  ",
    "start": "89760",
    "end": "95840"
  },
  {
    "text": "ton of elements per block and the reason why i \ndid this is i wanted to really be able to test  ",
    "start": "95840",
    "end": "101200"
  },
  {
    "text": "how much workload based on a url can the server do \nand so this gave me a really easy way to control  ",
    "start": "101200",
    "end": "106960"
  },
  {
    "text": "that so that way i could do say a hundred \nconcurrent requests with a depth of three  ",
    "start": "106960",
    "end": "110240"
  },
  {
    "text": "with a depth of five with a depth of ten and \nlike i said i'm gonna be testing the server i  ",
    "start": "110240",
    "end": "114560"
  },
  {
    "text": "do find that to be the more interesting of the \ntwo things to test we all know that the client  ",
    "start": "114560",
    "end": "119200"
  },
  {
    "text": "is gonna be slower in wasm versus javascript right \nnow there just hasn't been the invested amount of  ",
    "start": "119200",
    "end": "124079"
  },
  {
    "text": "energy in it and there's some limitations that \nmake wasm a bit slow when say communicating with  ",
    "start": "124080",
    "end": "128960"
  },
  {
    "text": "external apis but i do believe a lot of that \nwill simply go away as more of the community  ",
    "start": "128960",
    "end": "134320"
  },
  {
    "text": "adopts wasm and more of the focus becomes on the \nperformance and integration the same thing was  ",
    "start": "134320",
    "end": "139120"
  },
  {
    "text": "said about javascript not too long ago so things \ncan change even if they don't seem possible in  ",
    "start": "139120",
    "end": "145120"
  },
  {
    "text": "this moment so the experiment is actually pretty \nsimple first we just create a server it's going  ",
    "start": "145120",
    "end": "149599"
  },
  {
    "text": "to be either node.js or rust runtime and of course \ni call into it with a render depth and girth girth  ",
    "start": "149600",
    "end": "156240"
  },
  {
    "text": "[weird grunting...] girth is my favorite unit now obviously \nwhat i can do is i can make parallel amounts  ",
    "start": "156240",
    "end": "162240"
  },
  {
    "text": "of requests 25 out at any one time up to 100. \nit's actually pretty incredible to do this  ",
    "start": "162240",
    "end": "167280"
  },
  {
    "text": "with rust i was pretty shocked i had benny yes \nthis benny who's terrible at chess what writes  ",
    "start": "167280",
    "end": "174880"
  },
  {
    "text": "fantastic rust helped make this test client so \nthat way we're really optimizing and making as  ",
    "start": "174880",
    "end": "180160"
  },
  {
    "text": "many requests as possible and truly load testing \nthis server now every single request to node.js or  ",
    "start": "180160",
    "end": "185680"
  },
  {
    "text": "rust will actually measure the amount of time it \nwas ssr rendering plus we'll keep track of how  ",
    "start": "185680",
    "end": "190959"
  },
  {
    "text": "long did it take us to say request 25 000 renders \nof this page and then with that information  ",
    "start": "190960",
    "end": "196960"
  },
  {
    "text": "measure how many requests per second we were \nable to achieve with 25 parallel 50 parallel  ",
    "start": "196960",
    "end": "202480"
  },
  {
    "text": "100 parallel 500 parallel record connections \nconnections yeah now you're probably saying just  ",
    "start": "202480",
    "end": "209920"
  },
  {
    "text": "give me the data i want to see how much better \nis rust how much better is typescript what if  ",
    "start": "209920",
    "end": "214720"
  },
  {
    "text": "typescript is better you don't even know yet i'll \ngive you a little hint the data's gonna be like oh  ",
    "start": "214720",
    "end": "220080"
  },
  {
    "text": "that's interesting and then i'm gonna follow it up \nwith a little bit of something extra but before we  ",
    "start": "220080",
    "end": "225280"
  },
  {
    "text": "keep on going i do want to say something really \nreally quickly our boy shy ryan wrote an elixir  ",
    "start": "225280",
    "end": "232080"
  },
  {
    "text": "version and if you want to see that elixir version \ni need this video to reach 5000 likes that's the  ",
    "start": "232080",
    "end": "236880"
  },
  {
    "text": "only way i'm doing it if you guys are engaged \nand you want to see an elixir against node or  ",
    "start": "236880",
    "end": "242560"
  },
  {
    "text": "rust version of the exact same application you \nbetter be slapping and tickling that like button  ",
    "start": "242560",
    "end": "248480"
  },
  {
    "text": "all right let me expose to you my data basically \nfast so i broke the data into two major categories  ",
    "start": "248480",
    "end": "255120"
  },
  {
    "text": "one the ssr time and two the rps time of course \nwe have yew versus node i probably should have said  ",
    "start": "255120",
    "end": "262320"
  },
  {
    "text": "react instead of node but you know just deal with \nit all the timings right here are in microseconds  ",
    "start": "262320",
    "end": "268000"
  },
  {
    "text": "of course obviously this is request per second \nover here on this side and the one the three at  ",
    "start": "268000",
    "end": "273040"
  },
  {
    "text": "five and ten represent the depth now remember if \nyou forgot already because you have a bird brain  ",
    "start": "273040",
    "end": "278720"
  },
  {
    "text": "now if you forgot already the depth means how \nmany elements per each one of those squares will  ",
    "start": "278720",
    "end": "283520"
  },
  {
    "text": "be rendered so at a depth of 10 approximately \n320 elements will be rendered whereas the depth  ",
    "start": "283520",
    "end": "289039"
  },
  {
    "text": "of one about 32 elements will be rendered as you \ncan see u is faster but it's not a lot faster it's  ",
    "start": "289040",
    "end": "295280"
  },
  {
    "text": "somewhere between 240 to about 174 and it seems \nto kind of start approaching a number right here  ",
    "start": "295280",
    "end": "302160"
  },
  {
    "text": "right in this category so not even 2x as fast \nbut that number is a bit deceiving the reason  ",
    "start": "302160",
    "end": "308080"
  },
  {
    "text": "why is that 6.6 milliseconds right here for node \nis 6.6 contiguous milliseconds running the node  ",
    "start": "308080",
    "end": "316400"
  },
  {
    "text": "runtime right that means no other javascript can \nbe executing at the same time whereas with rust  ",
    "start": "316400",
    "end": "322800"
  },
  {
    "text": "the 3.8 milliseconds is actually interleaving many \nrequests at the same time so it disproportionately  ",
    "start": "322800",
    "end": "329199"
  },
  {
    "text": "affects rps so the 174% faster does not mean the \nrps is 174% faster looking at the rps you  ",
    "start": "329200",
    "end": "337920"
  },
  {
    "text": "can see that it's not the same so for a depth of \none it wasn't a huge win so if you're just doing  ",
    "start": "337920",
    "end": "342800"
  },
  {
    "text": "32 elements which i don't know of any site that's \njust doing a very few amount of div tags right  ",
    "start": "342800",
    "end": "347919"
  },
  {
    "text": "uh it's it's it's not incredibly faster but it \nit did keep rising and being faster as we created  ",
    "start": "347920",
    "end": "354880"
  },
  {
    "text": "more and more elements the winds were actually \nrather large all right hey that's pretty fast  ",
    "start": "354880",
    "end": "360080"
  },
  {
    "text": "and for those of you who like graphs here \nyou go it's not a great graph like i said  ",
    "start": "360080",
    "end": "364000"
  },
  {
    "text": "it's kind of disinteresting right but like i said \nthere's actually a second part that i find to be  ",
    "start": "364000",
    "end": "368240"
  },
  {
    "text": "way more interesting about this whole yew versus \nreact thing going on here so right now i'm running  ",
    "start": "368240",
    "end": "374240"
  },
  {
    "text": "my local host with the react server i'm gonna do \na render depth of three and i'm going to count how  ",
    "start": "374240",
    "end": "379680"
  },
  {
    "text": "many bytes come back from that payload it's about \n12 000. doing the exact same thing except for  ",
    "start": "379680",
    "end": "384560"
  },
  {
    "text": "i'm running the rust server you'll see that the \npayload is 15,600. so i think this final chart's  ",
    "start": "384560",
    "end": "391440"
  },
  {
    "text": "actually what is really interesting now what \nthis is is in kilobits per second transferred  ",
    "start": "391440",
    "end": "397760"
  },
  {
    "text": "you'll notice that yew does a significantly higher \namount of bits transferred per second based on  ",
    "start": "397760",
    "end": "404880"
  },
  {
    "text": "depth whereas node doesn't really increase that \nmuch beginning with a depth of 1 up to a depth  ",
    "start": "404880",
    "end": "410720"
  },
  {
    "text": "of 10. to me what this says is that yew has a huge \namount of capability to make this a lot faster  ",
    "start": "410720",
    "end": "416880"
  },
  {
    "text": "first off talking with some of the team there's \nstill some optimizations that they can make that's  ",
    "start": "416880",
    "end": "421520"
  },
  {
    "text": "gonna make this a bit speedier and then on top \nof that they could improve the packet size or the  ",
    "start": "421520",
    "end": "427440"
  },
  {
    "text": "the payload size i think with those two things \ncombined we could see yew performing 5x better  ",
    "start": "427440",
    "end": "433120"
  },
  {
    "text": "than node and for me that would be pretty \ndang exciting that's actually starting to get  ",
    "start": "433120",
    "end": "437120"
  },
  {
    "text": "into the realm of wow that's pretty awesome \nnode could you come on in yeah yeah i would  ",
    "start": "437120",
    "end": "443360"
  },
  {
    "text": "just like to let you know that i'm sorry that \nyou're slower not as athletic and honestly not  ",
    "start": "443360",
    "end": "448080"
  },
  {
    "text": "that good looking i'm sorry could you gently get \nthe hell out of the startup sure the win is not  ",
    "start": "448080",
    "end": "452879"
  },
  {
    "text": "as big as i wanted it to be but i'm still pretty \nexcited about that i think from here on out i'll  ",
    "start": "452880",
    "end": "457520"
  },
  {
    "text": "probably be building most my front ends using \nyou know wasm and probably exploring it around  ",
    "start": "457520",
    "end": "462639"
  },
  {
    "text": "with yew or some of the other front-end frameworks \nthat are available now i hope that you guys like  ",
    "start": "462640",
    "end": "466880"
  },
  {
    "text": "this if you do like this and you want to see some \nmore kind of front-end focus items i would love to  ",
    "start": "466880",
    "end": "471040"
  },
  {
    "text": "think more about the client garbage collection \ntimes and things like that if you would like  ",
    "start": "471040",
    "end": "475280"
  },
  {
    "text": "to see a breakdown of say react versus svelte \nversus solid js you need to leave a comment  ",
    "start": "475280",
    "end": "480639"
  },
  {
    "text": "you gotta like the video you gotta let me know \nokay and don't forget shy ryan is really hoping  ",
    "start": "480640",
    "end": "487120"
  },
  {
    "text": "that you like this video enough because he wants \nto see that elixir comparison baby of course all  ",
    "start": "487120",
    "end": "492320"
  },
  {
    "text": "this was developed again on twitch so get in \nget in and discord is where we tend to discuss  ",
    "start": "492320",
    "end": "498720"
  },
  {
    "text": "the finer details and the degen army has kind of been \na bit degen lately i don't know what you guys been  ",
    "start": "498720",
    "end": "504400"
  },
  {
    "text": "bringing in okay but it's a it's a little bit \nfilthy and of course i'd like to thank linode  ",
    "start": "504400",
    "end": "508880"
  },
  {
    "text": "for always sponsoring these types of videos always \ngiving me the servers to be able to just do this  ",
    "start": "508880",
    "end": "514159"
  },
  {
    "text": "stuff for free if you want to check out linode \nlinks down below i would appreciate it and you  ",
    "start": "514160",
    "end": "519199"
  },
  {
    "text": "get a hundred dollars of hosting think about that \nthank you for watching my name is theprimeagen",
    "start": "519200",
    "end": "533840"
  },
  {
    "text": "you",
    "start": "537840",
    "end": "538340"
  }
]