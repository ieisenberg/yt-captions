[
  {
    "text": "Zig a general purpose programming",
    "start": "80",
    "end": "1920"
  },
  {
    "text": "language recently made Popular by bun is",
    "start": "1920",
    "end": "4720"
  },
  {
    "text": "a blazingly fast programming language go",
    "start": "4720",
    "end": "8280"
  },
  {
    "text": "it's pretty easy and it's fast",
    "start": "8280",
    "end": "12879"
  },
  {
    "text": "node all right so yes we are going to do",
    "start": "13240",
    "end": "15559"
  },
  {
    "text": "this a Manaj Tua of languages Zig go",
    "start": "15559",
    "end": "19800"
  },
  {
    "text": "node head to head to head and we're",
    "start": "19800",
    "end": "22560"
  },
  {
    "text": "going to see which one really and truly",
    "start": "22560",
    "end": "25080"
  },
  {
    "text": "is blazingly fast if you have a guess",
    "start": "25080",
    "end": "27599"
  },
  {
    "text": "why don't you guess it right now in the",
    "start": "27599",
    "end": "28840"
  },
  {
    "text": "comments okay put it out there in the",
    "start": "28840",
    "end": "30759"
  },
  {
    "text": "universe and let's see if you're right",
    "start": "30759",
    "end": "33000"
  },
  {
    "text": "or you're wrong and we're going to have",
    "start": "33000",
    "end": "34760"
  },
  {
    "text": "a guest appearance by bun the most",
    "start": "34760",
    "end": "37239"
  },
  {
    "text": "blazingly fast JavaScript environment of",
    "start": "37239",
    "end": "39640"
  },
  {
    "text": "all time so for those that haven't seen",
    "start": "39640",
    "end": "41440"
  },
  {
    "text": "my previous video I made a fairly simple",
    "start": "41440",
    "end": "43680"
  },
  {
    "text": "experiment in which every request comes",
    "start": "43680",
    "end": "45680"
  },
  {
    "text": "with a Json payload I store that in a",
    "start": "45680",
    "end": "47879"
  },
  {
    "text": "queue in order of the request that I",
    "start": "47879",
    "end": "49960"
  },
  {
    "text": "received and the head of the queue",
    "start": "49960",
    "end": "51199"
  },
  {
    "text": "represents the oldest item in the queue",
    "start": "51199",
    "end": "53079"
  },
  {
    "text": "no item in the que would exceed 10",
    "start": "53079",
    "end": "55199"
  },
  {
    "text": "seconds that means that the length of",
    "start": "55199",
    "end": "56879"
  },
  {
    "text": "the queue represents how many requests",
    "start": "56879",
    "end": "59559"
  },
  {
    "text": "have been made over the last 10 seconds",
    "start": "59559",
    "end": "61680"
  },
  {
    "text": "it it's a nice way to be able to have",
    "start": "61680",
    "end": "63160"
  },
  {
    "text": "like a nice moving average and it also",
    "start": "63160",
    "end": "65560"
  },
  {
    "text": "makes it so that garbage collection is",
    "start": "65560",
    "end": "67320"
  },
  {
    "text": "like a real problem or can be",
    "start": "67320",
    "end": "69479"
  },
  {
    "text": "problematic so I felt like this was a",
    "start": "69479",
    "end": "70920"
  },
  {
    "text": "fairly nice test to really accent a the",
    "start": "70920",
    "end": "73680"
  },
  {
    "text": "difference between go and node but also",
    "start": "73680",
    "end": "75720"
  },
  {
    "text": "B the difference between Zig and go and",
    "start": "75720",
    "end": "78400"
  },
  {
    "text": "of course we're going to have to have",
    "start": "78400",
    "end": "79640"
  },
  {
    "text": "the guest star bun the hottest the",
    "start": "79640",
    "end": "81840"
  },
  {
    "text": "greatest JavaScript environment ever",
    "start": "81840",
    "end": "84280"
  },
  {
    "text": "make a guest appearance and I do have",
    "start": "84280",
    "end": "85920"
  },
  {
    "text": "two observations I'd like to make about",
    "start": "85920",
    "end": "87920"
  },
  {
    "text": "it and I think it'll be quite surprising",
    "start": "87920",
    "end": "89640"
  },
  {
    "text": "when you you see the results but before",
    "start": "89640",
    "end": "91200"
  },
  {
    "text": "I show you the results I did want to",
    "start": "91200",
    "end": "92600"
  },
  {
    "text": "discuss a little bit about just the",
    "start": "92600",
    "end": "94079"
  },
  {
    "text": "development of it all I find that Zig is",
    "start": "94079",
    "end": "96759"
  },
  {
    "text": "actually a pretty fun language to work",
    "start": "96759",
    "end": "98960"
  },
  {
    "text": "with but man I was encumbered by some",
    "start": "98960",
    "end": "101200"
  },
  {
    "text": "seg faults that can be a bit of a drag",
    "start": "101200",
    "end": "103399"
  },
  {
    "text": "kind of dealing with but it has a decent",
    "start": "103399",
    "end": "105360"
  },
  {
    "text": "set of Primitives that were available",
    "start": "105360",
    "end": "106920"
  },
  {
    "text": "including a queue that was already",
    "start": "106920",
    "end": "108320"
  },
  {
    "text": "created and mutexes and all the things",
    "start": "108320",
    "end": "110119"
  },
  {
    "text": "you kind of need did I say mutex muty",
    "start": "110119",
    "end": "113200"
  },
  {
    "text": "that you kind of need to be able to",
    "start": "113200",
    "end": "114560"
  },
  {
    "text": "create these programs now obviously with",
    "start": "114560",
    "end": "116320"
  },
  {
    "text": "no package manager meant I had to like",
    "start": "116320",
    "end": "118360"
  },
  {
    "text": "copy and paste Apple the HTTP server",
    "start": "118360",
    "end": "121640"
  },
  {
    "text": "from GitHub onto my system and kind of",
    "start": "121640",
    "end": "123840"
  },
  {
    "text": "make it all work together so just using",
    "start": "123840",
    "end": "127159"
  },
  {
    "text": "go obviously much better experience just",
    "start": "127159",
    "end": "129599"
  },
  {
    "text": "due to its maturity and not only that",
    "start": "129599",
    "end": "131560"
  },
  {
    "text": "but goes also just again such a dang",
    "start": "131560",
    "end": "134440"
  },
  {
    "text": "simple language it took me an hour to",
    "start": "134440",
    "end": "137000"
  },
  {
    "text": "get everything up and running built the",
    "start": "137000",
    "end": "138560"
  },
  {
    "text": "linked list did all of that made sure",
    "start": "138560",
    "end": "140319"
  },
  {
    "text": "it's all working even built the entire",
    "start": "140319",
    "end": "142440"
  },
  {
    "text": "server first try and it actually ran and",
    "start": "142440",
    "end": "145519"
  },
  {
    "text": "worked first try I get it you didn't",
    "start": "145519",
    "end": "148000"
  },
  {
    "text": "come here to you know hear my thoughts",
    "start": "148000",
    "end": "149920"
  },
  {
    "text": "on a programming language you came here",
    "start": "149920",
    "end": "151720"
  },
  {
    "text": "for the Deets so let's do this okay so I",
    "start": "151720",
    "end": "155680"
  },
  {
    "text": "did just spend what feels like an hour",
    "start": "155680",
    "end": "158360"
  },
  {
    "text": "actually collecting the data that is",
    "start": "158360",
    "end": "160599"
  },
  {
    "text": "required for this experiment I did",
    "start": "160599",
    "end": "162680"
  },
  {
    "text": "exactly kind of what I talked about I",
    "start": "162680",
    "end": "164400"
  },
  {
    "text": "made three machines request a 100",
    "start": "164400",
    "end": "166840"
  },
  {
    "text": "connections at once and sustain it for",
    "start": "166840",
    "end": "169400"
  },
  {
    "text": "as long as they can seeing how big the",
    "start": "169400",
    "end": "171560"
  },
  {
    "text": "queue can get in actually four different",
    "start": "171560",
    "end": "173879"
  },
  {
    "text": "languages yeah we do have a guest",
    "start": "173879",
    "end": "175879"
  },
  {
    "text": "appearance coming up and you might be a",
    "start": "175879",
    "end": "178040"
  },
  {
    "text": "bit surprised at this guest and its",
    "start": "178040",
    "end": "180480"
  },
  {
    "text": "performance and so yes I also did that",
    "start": "180480",
    "end": "182400"
  },
  {
    "text": "with 200 concurrent connections and 300",
    "start": "182400",
    "end": "184879"
  },
  {
    "text": "concurrent connections and then just",
    "start": "184879",
    "end": "186360"
  },
  {
    "text": "measured how much was in the queue over",
    "start": "186360",
    "end": "188200"
  },
  {
    "text": "the course of 100 seconds and then",
    "start": "188200",
    "end": "190040"
  },
  {
    "text": "lastly I will go over what bun did cuz",
    "start": "190040",
    "end": "192920"
  },
  {
    "text": "it was incredible all right so the first",
    "start": "192920",
    "end": "195200"
  },
  {
    "text": "graph is a 100 concurrent Connections in",
    "start": "195200",
    "end": "197560"
  },
  {
    "text": "Zig go node and the green line in Rust",
    "start": "197560",
    "end": "201799"
  },
  {
    "text": "now what you'll notice of course is node",
    "start": "201799",
    "end": "204000"
  },
  {
    "text": "trailing up the back end okay so if",
    "start": "204000",
    "end": "206080"
  },
  {
    "text": "anyone says well I don't know if no's",
    "start": "206080",
    "end": "207959"
  },
  {
    "text": "not that performant it will never be",
    "start": "207959",
    "end": "210000"
  },
  {
    "text": "able to compete with these other",
    "start": "210000",
    "end": "211200"
  },
  {
    "text": "Frameworks okay just stop stop with this",
    "start": "211200",
    "end": "213280"
  },
  {
    "text": "just nonsense okay it's just never quite",
    "start": "213280",
    "end": "215720"
  },
  {
    "text": "there go obviously did better and Zig",
    "start": "215720",
    "end": "218200"
  },
  {
    "text": "and rust seem to always be tied neck and",
    "start": "218200",
    "end": "220799"
  },
  {
    "text": "neck now I do not know if these",
    "start": "220799",
    "end": "222239"
  },
  {
    "text": "differences are statistically valid I'd",
    "start": "222239",
    "end": "224319"
  },
  {
    "text": "have to do a lot larger test and I might",
    "start": "224319",
    "end": "226319"
  },
  {
    "text": "want to try some different powered",
    "start": "226319",
    "end": "227879"
  },
  {
    "text": "machines and kind of really come up and",
    "start": "227879",
    "end": "229959"
  },
  {
    "text": "make sure I understand which one is",
    "start": "229959",
    "end": "231599"
  },
  {
    "text": "better but I would say overall they're",
    "start": "231599",
    "end": "233480"
  },
  {
    "text": "both really fast so you're probably",
    "start": "233480",
    "end": "235680"
  },
  {
    "text": "asking yourself what what what is this",
    "start": "235680",
    "end": "237480"
  },
  {
    "text": "axis I don't what are these axes don't",
    "start": "237480",
    "end": "239959"
  },
  {
    "text": "get it I What's Happening Here well the",
    "start": "239959",
    "end": "241959"
  },
  {
    "text": "x-axis is just samples remember I took",
    "start": "241959",
    "end": "244200"
  },
  {
    "text": "100 samples over 100 seconds from the",
    "start": "244200",
    "end": "246439"
  },
  {
    "text": "machine the Y AIS of course is how many",
    "start": "246439",
    "end": "249079"
  },
  {
    "text": "items were in the queue at that moment",
    "start": "249079",
    "end": "251319"
  },
  {
    "text": "so the Brown Line the turd line the node",
    "start": "251319",
    "end": "254000"
  },
  {
    "text": "line didn't okay and the blue/ the green",
    "start": "254000",
    "end": "257840"
  },
  {
    "text": "did which means impressively that uh",
    "start": "257840",
    "end": "260079"
  },
  {
    "text": "zigg and rust were able to sustain",
    "start": "260079",
    "end": "262000"
  },
  {
    "text": "effectively 78,000 requests per second",
    "start": "262000",
    "end": "265759"
  },
  {
    "text": "from three machines that were requesting",
    "start": "265759",
    "end": "267800"
  },
  {
    "text": "at 100 concurrent connections that's",
    "start": "267800",
    "end": "269720"
  },
  {
    "text": "pretty impressive of course at 200",
    "start": "269720",
    "end": "271720"
  },
  {
    "text": "concurrent connections you can see that",
    "start": "271720",
    "end": "273280"
  },
  {
    "text": "node actually started doing worse yeah",
    "start": "273280",
    "end": "276960"
  },
  {
    "text": "like not not great actually it's about",
    "start": "276960",
    "end": "279400"
  },
  {
    "text": "the same but nonetheless you'll notice",
    "start": "279400",
    "end": "281280"
  },
  {
    "text": "that go actually started performing",
    "start": "281280",
    "end": "283400"
  },
  {
    "text": "better but Zig and rust of course shined",
    "start": "283400",
    "end": "286120"
  },
  {
    "text": "quite a bit the ability to be able to",
    "start": "286120",
    "end": "288440"
  },
  {
    "text": "handle these level of connections",
    "start": "288440",
    "end": "290400"
  },
  {
    "text": "they're just able to do it remember they",
    "start": "290400",
    "end": "292400"
  },
  {
    "text": "are sustaining over a, requests per",
    "start": "292400",
    "end": "294639"
  },
  {
    "text": "second and there is this kind of central",
    "start": "294639",
    "end": "296720"
  },
  {
    "text": "mutex that I couldn't get rid of either",
    "start": "296720",
    "end": "298800"
  },
  {
    "text": "I did try a lot Lock Free q but these",
    "start": "298800",
    "end": "300720"
  },
  {
    "text": "were single core machines so I don't",
    "start": "300720",
    "end": "302840"
  },
  {
    "text": "know if there's any benefit to the lock",
    "start": "302840",
    "end": "304560"
  },
  {
    "text": "free Q they both performed worse when",
    "start": "304560",
    "end": "306919"
  },
  {
    "text": "using it I do think there's some pretty",
    "start": "306919",
    "end": "308800"
  },
  {
    "text": "neat exploration that could be done in",
    "start": "308800",
    "end": "310680"
  },
  {
    "text": "the lock free queue and scaling out to",
    "start": "310680",
    "end": "312560"
  },
  {
    "text": "CPUs and really just seeing which one's",
    "start": "312560",
    "end": "314800"
  },
  {
    "text": "better but I think at this point it's",
    "start": "314800",
    "end": "316120"
  },
  {
    "text": "really just about which implementation's",
    "start": "316120",
    "end": "318759"
  },
  {
    "text": "better not necessarily which language is",
    "start": "318759",
    "end": "320800"
  },
  {
    "text": "better I think we can we can really say",
    "start": "320800",
    "end": "322440"
  },
  {
    "text": "they're both great as far as performance",
    "start": "322440",
    "end": "324880"
  },
  {
    "text": "goes lastly of course we do have the 300",
    "start": "324880",
    "end": "327520"
  },
  {
    "text": "connections you'll notice that pretty",
    "start": "327520",
    "end": "328840"
  },
  {
    "text": "much everything starts to actually get a",
    "start": "328840",
    "end": "330600"
  },
  {
    "text": "little bit worse they're not quite able",
    "start": "330600",
    "end": "332919"
  },
  {
    "text": "to hold as many items in the queue or",
    "start": "332919",
    "end": "334800"
  },
  {
    "text": "sustain as many requests per second uh",
    "start": "334800",
    "end": "337240"
  },
  {
    "text": "they're just simply kind of reaching",
    "start": "337240",
    "end": "338880"
  },
  {
    "text": "their Max on this single core slow CPU",
    "start": "338880",
    "end": "342400"
  },
  {
    "text": "but it's still quite impressive they're",
    "start": "342400",
    "end": "344039"
  },
  {
    "text": "actually zigg and rust are really neck",
    "start": "344039",
    "end": "346560"
  },
  {
    "text": "and neck sustaining that right around",
    "start": "346560",
    "end": "348520"
  },
  {
    "text": "1,000 requests per second and of course",
    "start": "348520",
    "end": "350759"
  },
  {
    "text": "node just doing great you know some",
    "start": "350759",
    "end": "353919"
  },
  {
    "text": "amount of requests below 500 again this",
    "start": "353919",
    "end": "357919"
  },
  {
    "text": "this this idea that no is fast it's just",
    "start": "357919",
    "end": "360160"
  },
  {
    "text": "not it's not it's not going to be fast",
    "start": "360160",
    "end": "362199"
  },
  {
    "text": "and I think we should all just be okay",
    "start": "362199",
    "end": "364160"
  },
  {
    "text": "with that just be okay it's you know I'm",
    "start": "364160",
    "end": "365600"
  },
  {
    "text": "not trying to be mean to you node people",
    "start": "365600",
    "end": "367639"
  },
  {
    "text": "just keep saying that about you and I",
    "start": "367639",
    "end": "369720"
  },
  {
    "text": "tell them to stop it but where is bun",
    "start": "369720",
    "end": "371919"
  },
  {
    "text": "you say well let me show you a little",
    "start": "371919",
    "end": "374280"
  },
  {
    "text": "action with bun right here nice it's",
    "start": "374280",
    "end": "377240"
  },
  {
    "text": "it's working there we go it's look at",
    "start": "377240",
    "end": "379560"
  },
  {
    "text": "that Bun's maintaining it oh shoot now",
    "start": "379560",
    "end": "382479"
  },
  {
    "text": "if you do look at that you'll see that",
    "start": "382479",
    "end": "383960"
  },
  {
    "text": "there are",
    "start": "383960",
    "end": "385080"
  },
  {
    "text": "78,000 items in the queue which is quite",
    "start": "385080",
    "end": "388360"
  },
  {
    "text": "impressive but what you probably didn't",
    "start": "388360",
    "end": "390759"
  },
  {
    "text": "catch from that clip is that there were",
    "start": "390759",
    "end": "392680"
  },
  {
    "text": "200 concurrent requests so if I look at",
    "start": "392680",
    "end": "394720"
  },
  {
    "text": "my data over here you will see that I",
    "start": "394720",
    "end": "397240"
  },
  {
    "text": "have at 200 concurrent request only",
    "start": "397240",
    "end": "399479"
  },
  {
    "text": "69,000 it does appear that bun was",
    "start": "399479",
    "end": "401720"
  },
  {
    "text": "actually doing better on Twitch before",
    "start": "401720",
    "end": "403240"
  },
  {
    "text": "it seg faed but if you didn't catch it",
    "start": "403240",
    "end": "405960"
  },
  {
    "text": "that was when I was having 15 seconds",
    "start": "405960",
    "end": "408520"
  },
  {
    "text": "per item in the queue and this is",
    "start": "408520",
    "end": "410240"
  },
  {
    "text": "measured off of 10 seconds so it",
    "start": "410240",
    "end": "412280"
  },
  {
    "text": "actually is a lot closer to Noe in",
    "start": "412280",
    "end": "415199"
  },
  {
    "text": "general performance for this specific",
    "start": "415199",
    "end": "417319"
  },
  {
    "text": "case now of course I wasn't able to",
    "start": "417319",
    "end": "419639"
  },
  {
    "text": "sustain it I cannot actually say it did",
    "start": "419639",
    "end": "421840"
  },
  {
    "text": "appear to be slightly faster now whether",
    "start": "421840",
    "end": "423800"
  },
  {
    "text": "it was statistically faster I couldn't",
    "start": "423800",
    "end": "426000"
  },
  {
    "text": "even get the data for a t test but again",
    "start": "426000",
    "end": "428240"
  },
  {
    "text": "in general I'm going to keep saying the",
    "start": "428240",
    "end": "430120"
  },
  {
    "text": "same things if you're using JavaScript",
    "start": "430120",
    "end": "432160"
  },
  {
    "text": "you're not using it for performance and",
    "start": "432160",
    "end": "435319"
  },
  {
    "text": "people just just not say that anymore",
    "start": "435319",
    "end": "438680"
  },
  {
    "text": "right if you're using go you're trying",
    "start": "438680",
    "end": "440440"
  },
  {
    "text": "to balance developer ergonomics and",
    "start": "440440",
    "end": "442919"
  },
  {
    "text": "performance if you're using rust or seg",
    "start": "442919",
    "end": "446240"
  },
  {
    "text": "faulty language Zig which I I like zig",
    "start": "446240",
    "end": "449599"
  },
  {
    "text": "I'm just saying it's very it's very easy",
    "start": "449599",
    "end": "451680"
  },
  {
    "text": "to shoot yourself in the foot you're",
    "start": "451680",
    "end": "453199"
  },
  {
    "text": "using it because you need speed and",
    "start": "453199",
    "end": "455080"
  },
  {
    "text": "people need to quantify these values and",
    "start": "455080",
    "end": "457639"
  },
  {
    "text": "really qualify their team for what is",
    "start": "457639",
    "end": "460240"
  },
  {
    "text": "the best fit now me personally I do",
    "start": "460240",
    "end": "462639"
  },
  {
    "text": "think go again still contains some of",
    "start": "462639",
    "end": "465240"
  },
  {
    "text": "the best of both worlds you're going to",
    "start": "465240",
    "end": "466720"
  },
  {
    "text": "get that better performance but you're",
    "start": "466720",
    "end": "468720"
  },
  {
    "text": "going to get a little bit better de",
    "start": "468720",
    "end": "470800"
  },
  {
    "text": "developer ergonomics but I think the",
    "start": "470800",
    "end": "472919"
  },
  {
    "text": "Dark Horse ultimately is rust rust",
    "start": "472919",
    "end": "476400"
  },
  {
    "text": "really and truly does become easier the",
    "start": "476400",
    "end": "479560"
  },
  {
    "text": "more you use it like any language you",
    "start": "479560",
    "end": "481720"
  },
  {
    "text": "become an expert but it will never be as",
    "start": "481720",
    "end": "484199"
  },
  {
    "text": "fast to develop as it is for something",
    "start": "484199",
    "end": "486199"
  },
  {
    "text": "like go or Javas script but you can just",
    "start": "486199",
    "end": "488400"
  },
  {
    "text": "achieve insane speeds so it does turn",
    "start": "488400",
    "end": "491599"
  },
  {
    "text": "out that rust is blazingly fast and you",
    "start": "491599",
    "end": "494680"
  },
  {
    "text": "should press that sub button blazingly",
    "start": "494680",
    "end": "496919"
  },
  {
    "text": "fast because we're not stopping here",
    "start": "496919",
    "end": "500000"
  },
  {
    "text": "okay I still need to make an Elixir",
    "start": "500000",
    "end": "502199"
  },
  {
    "text": "video for you I will I'm sorry forgive",
    "start": "502199",
    "end": "505240"
  },
  {
    "text": "me and yes I do want to do some more",
    "start": "505240",
    "end": "507599"
  },
  {
    "text": "front-end things because it kind of",
    "start": "507599",
    "end": "509120"
  },
  {
    "text": "seems like there's a lot of script",
    "start": "509120",
    "end": "510800"
  },
  {
    "text": "kitties on this channel that want me to",
    "start": "510800",
    "end": "512360"
  },
  {
    "text": "do react want me to do spelt want me to",
    "start": "512360",
    "end": "515200"
  },
  {
    "text": "do solid J please no but yes I'll do it",
    "start": "515200",
    "end": "519000"
  },
  {
    "text": "for you because I um I love you yeah",
    "start": "519000",
    "end": "525240"
  }
]