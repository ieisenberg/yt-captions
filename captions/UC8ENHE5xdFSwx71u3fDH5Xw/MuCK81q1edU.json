[
  {
    "text": "Json JavaScript objects notation",
    "start": "0",
    "end": "3000"
  },
  {
    "text": "properly pronounced",
    "start": "3000",
    "end": "5420"
  },
  {
    "text": "and was almost called the Gizmo Gizmo",
    "start": "5420",
    "end": "10820"
  },
  {
    "text": "dismal am I like four years old it's",
    "start": "10820",
    "end": "13559"
  },
  {
    "text": "funny it's the canonical information",
    "start": "13559",
    "end": "15420"
  },
  {
    "text": "interchange that we use on the internet",
    "start": "15420",
    "end": "17580"
  },
  {
    "text": "today it's used in Twitter it's used on",
    "start": "17580",
    "end": "20160"
  },
  {
    "text": "Facebook it's used on YouTube it's used",
    "start": "20160",
    "end": "21779"
  },
  {
    "text": "on Netflix it's used on Twitch it's used",
    "start": "21779",
    "end": "24300"
  },
  {
    "text": "everywhere see if I were to subscribe to",
    "start": "24300",
    "end": "26939"
  },
  {
    "text": "say the primagen and I press subscribe",
    "start": "26939",
    "end": "29160"
  },
  {
    "text": "you'll see right here that we did send",
    "start": "29160",
    "end": "30599"
  },
  {
    "text": "off and boom Jason is used as the",
    "start": "30599",
    "end": "33840"
  },
  {
    "text": "response to update the UI why don't you",
    "start": "33840",
    "end": "36059"
  },
  {
    "text": "give it a try",
    "start": "36059",
    "end": "37320"
  },
  {
    "text": "see if your network tab shows that is",
    "start": "37320",
    "end": "39960"
  },
  {
    "text": "just on when you subscribe to me",
    "start": "39960",
    "end": "43700"
  },
  {
    "text": "but here's the thing about Gizmo sorry",
    "start": "44840",
    "end": "47219"
  },
  {
    "text": "Jason is that it is slow it is",
    "start": "47219",
    "end": "49920"
  },
  {
    "text": "incredibly slow it is outlandishly slow",
    "start": "49920",
    "end": "52980"
  },
  {
    "text": "and yes no I get it XML is worse but not",
    "start": "52980",
    "end": "57360"
  },
  {
    "text": "by that much so today I am gonna show",
    "start": "57360",
    "end": "60059"
  },
  {
    "text": "you how Jason works and even more",
    "start": "60059",
    "end": "62399"
  },
  {
    "text": "importantly why it's slow so what is",
    "start": "62399",
    "end": "65100"
  },
  {
    "text": "Json well imagine this guy right here",
    "start": "65100",
    "end": "67200"
  },
  {
    "text": "wants to communicate to Twitch full via",
    "start": "67200",
    "end": "69720"
  },
  {
    "text": "the cloud the thing about the cloud is",
    "start": "69720",
    "end": "71220"
  },
  {
    "text": "that it can only take in zeros or ones",
    "start": "71220",
    "end": "73260"
  },
  {
    "text": "you know that's why you have this rating",
    "start": "73260",
    "end": "74760"
  },
  {
    "text": "like mega bits or gigabits per second",
    "start": "74760",
    "end": "76500"
  },
  {
    "text": "that effectively means how many zeros",
    "start": "76500",
    "end": "78420"
  },
  {
    "text": "and ones it can send per second a",
    "start": "78420",
    "end": "80759"
  },
  {
    "text": "million zeros and ones per second would",
    "start": "80759",
    "end": "82200"
  },
  {
    "text": "be one megabit per second so if we look",
    "start": "82200",
    "end": "84000"
  },
  {
    "text": "at this object right here we can't just",
    "start": "84000",
    "end": "85619"
  },
  {
    "text": "send this across the wire right the wire",
    "start": "85619",
    "end": "87659"
  },
  {
    "text": "does not understand an object it",
    "start": "87659",
    "end": "89580"
  },
  {
    "text": "understands zeros and ones that is why",
    "start": "89580",
    "end": "91380"
  },
  {
    "text": "we would take something like this and",
    "start": "91380",
    "end": "93240"
  },
  {
    "text": "turn it into a string because a string",
    "start": "93240",
    "end": "94979"
  },
  {
    "text": "is really just a series of bytes and",
    "start": "94979",
    "end": "96720"
  },
  {
    "text": "bytes are eight bits we can send those",
    "start": "96720",
    "end": "99060"
  },
  {
    "text": "across the wire of course when you Json",
    "start": "99060",
    "end": "101400"
  },
  {
    "text": "stringify him it actually looks a lot",
    "start": "101400",
    "end": "103259"
  },
  {
    "text": "like that JavaScript above that is why",
    "start": "103259",
    "end": "105540"
  },
  {
    "text": "it's called JavaScript object notation",
    "start": "105540",
    "end": "107100"
  },
  {
    "text": "because it literally is Javascript we",
    "start": "107100",
    "end": "109740"
  },
  {
    "text": "can actually just simply jump up here",
    "start": "109740",
    "end": "111180"
  },
  {
    "text": "and go const b equals this and it's just",
    "start": "111180",
    "end": "113700"
  },
  {
    "text": "valid JavaScript but the thing that is",
    "start": "113700",
    "end": "115860"
  },
  {
    "text": "kind of interesting about JavaScript",
    "start": "115860",
    "end": "117899"
  },
  {
    "text": "object notation are Json or Gizmo it was",
    "start": "117899",
    "end": "120659"
  },
  {
    "text": "almost Gizmo is that every time it has",
    "start": "120659",
    "end": "123000"
  },
  {
    "text": "to specify the key and the value it is",
    "start": "123000",
    "end": "125399"
  },
  {
    "text": "in the most verbose way possible because",
    "start": "125399",
    "end": "128039"
  },
  {
    "text": "it the schema is contained within the",
    "start": "128039",
    "end": "130920"
  },
  {
    "text": "data that means to represent this single",
    "start": "130920",
    "end": "133200"
  },
  {
    "text": "byte object right here this kind of this",
    "start": "133200",
    "end": "135720"
  },
  {
    "text": "type discriminator you actually need to",
    "start": "135720",
    "end": "137819"
  },
  {
    "text": "have about nine bytes to represent that",
    "start": "137819",
    "end": "139980"
  },
  {
    "text": "one byte which of course is four for the",
    "start": "139980",
    "end": "141959"
  },
  {
    "text": "word type two for the quotes one for the",
    "start": "141959",
    "end": "144540"
  },
  {
    "text": "colon and of course one for the comma",
    "start": "144540",
    "end": "146400"
  },
  {
    "text": "time stamps are equally terrible a",
    "start": "146400",
    "end": "148319"
  },
  {
    "text": "timestamp can be represented with eight",
    "start": "148319",
    "end": "149879"
  },
  {
    "text": "bytes but this right here actually is",
    "start": "149879",
    "end": "151980"
  },
  {
    "text": "represented with 27 bytes because every",
    "start": "151980",
    "end": "155340"
  },
  {
    "text": "single number takes a byte so this right",
    "start": "155340",
    "end": "158160"
  },
  {
    "text": "here these last ones right here is how",
    "start": "158160",
    "end": "161099"
  },
  {
    "text": "much it should take overall but instead",
    "start": "161099",
    "end": "163140"
  },
  {
    "text": "you have all that extra fluff on the end",
    "start": "163140",
    "end": "165300"
  },
  {
    "text": "it's also not that great when it comes",
    "start": "165300",
    "end": "167340"
  },
  {
    "text": "to complex types like this one you have",
    "start": "167340",
    "end": "169080"
  },
  {
    "text": "extra two bytes for you know the",
    "start": "169080",
    "end": "170879"
  },
  {
    "text": "brackets on the end and then each number",
    "start": "170879",
    "end": "172440"
  },
  {
    "text": "has to be represented by its length in",
    "start": "172440",
    "end": "174720"
  },
  {
    "text": "bytes so let's just say these were each",
    "start": "174720",
    "end": "176580"
  },
  {
    "text": "one byte you could tightly pack this as",
    "start": "176580",
    "end": "178800"
  },
  {
    "text": "two bytes and it would be a two byte",
    "start": "178800",
    "end": "181080"
  },
  {
    "text": "array but instead it's going to take",
    "start": "181080",
    "end": "183000"
  },
  {
    "text": "eight bytes to represent the exact same",
    "start": "183000",
    "end": "185040"
  },
  {
    "text": "piece of information not to mention the",
    "start": "185040",
    "end": "187140"
  },
  {
    "text": "key and the quotes and the colon on this",
    "start": "187140",
    "end": "188819"
  },
  {
    "text": "side and if there was more data there",
    "start": "188819",
    "end": "190379"
  },
  {
    "text": "would be an extra comma I know you're",
    "start": "190379",
    "end": "191819"
  },
  {
    "text": "sitting there thinking ads just bytes",
    "start": "191819",
    "end": "193560"
  },
  {
    "text": "this can't be that big of a deal I'm in",
    "start": "193560",
    "end": "195599"
  },
  {
    "text": "megabytes I'm in gigabytes there's a lot",
    "start": "195599",
    "end": "198480"
  },
  {
    "text": "more that happens with Json than just",
    "start": "198480",
    "end": "201000"
  },
  {
    "text": "simply how many bytes are transferred",
    "start": "201000",
    "end": "202800"
  },
  {
    "text": "across the wire remember when you Json",
    "start": "202800",
    "end": "204780"
  },
  {
    "text": "parse something it needs to take this",
    "start": "204780",
    "end": "207060"
  },
  {
    "text": "create the key create the value put that",
    "start": "207060",
    "end": "210720"
  },
  {
    "text": "in a newly constructed object go to the",
    "start": "210720",
    "end": "212700"
  },
  {
    "text": "next one parse out the key parse out the",
    "start": "212700",
    "end": "215099"
  },
  {
    "text": "value put that into an object or create",
    "start": "215099",
    "end": "217080"
  },
  {
    "text": "intermediate objects if needed it has to",
    "start": "217080",
    "end": "219120"
  },
  {
    "text": "do this one at a time as it goes through",
    "start": "219120",
    "end": "221099"
  },
  {
    "text": "your Json type and if you're ever",
    "start": "221099",
    "end": "222720"
  },
  {
    "text": "curious about how this works you here",
    "start": "222720",
    "end": "224879"
  },
  {
    "text": "you go on json.org you can actually see",
    "start": "224879",
    "end": "227280"
  },
  {
    "text": "all the flow diagrams that do happen to",
    "start": "227280",
    "end": "229680"
  },
  {
    "text": "be able to parse out every single value",
    "start": "229680",
    "end": "231360"
  },
  {
    "text": "and as you can see it's a it's quite a",
    "start": "231360",
    "end": "233519"
  },
  {
    "text": "bit of work right here it has to read it",
    "start": "233519",
    "end": "235080"
  },
  {
    "text": "one byte at a time also if you look at",
    "start": "235080",
    "end": "237420"
  },
  {
    "text": "this thing right here this is the reason",
    "start": "237420",
    "end": "239159"
  },
  {
    "text": "right here why a trailing comma breaks",
    "start": "239159",
    "end": "242220"
  },
  {
    "text": "your package Json every time if they",
    "start": "242220",
    "end": "243780"
  },
  {
    "text": "would have just put an extra one right",
    "start": "243780",
    "end": "245220"
  },
  {
    "text": "here we would have been so good but no",
    "start": "245220",
    "end": "247920"
  },
  {
    "text": "no no no no no Json does not like those",
    "start": "247920",
    "end": "250019"
  },
  {
    "text": "trailer commas all right so let's talk",
    "start": "250019",
    "end": "251819"
  },
  {
    "text": "about an alternative encoding so I just",
    "start": "251819",
    "end": "254760"
  },
  {
    "text": "moved this over to rust so you can kind",
    "start": "254760",
    "end": "256680"
  },
  {
    "text": "of see this right here this is called an",
    "start": "256680",
    "end": "258359"
  },
  {
    "text": "enum this is technically a some type I",
    "start": "258359",
    "end": "260280"
  },
  {
    "text": "have a rating which has an inner object",
    "start": "260280",
    "end": "262380"
  },
  {
    "text": "or the type inside of it is a eight byte",
    "start": "262380",
    "end": "265199"
  },
  {
    "text": "for a timestamp plus one byte for the",
    "start": "265199",
    "end": "267479"
  },
  {
    "text": "data so you could imagine that I would",
    "start": "267479",
    "end": "269280"
  },
  {
    "text": "need one byte for the type of enum that",
    "start": "269280",
    "end": "272639"
  },
  {
    "text": "I'm going to have plus I'm going to need",
    "start": "272639",
    "end": "274500"
  },
  {
    "text": "eight bytes to represent the timestamp",
    "start": "274500",
    "end": "276419"
  },
  {
    "text": "plus I'm going to need another one byte",
    "start": "276419",
    "end": "278340"
  },
  {
    "text": "to represent that piece of data right",
    "start": "278340",
    "end": "280139"
  },
  {
    "text": "here and of course the coordinate is",
    "start": "280139",
    "end": "281820"
  },
  {
    "text": "going to be the exact same thing except",
    "start": "281820",
    "end": "283259"
  },
  {
    "text": "for I'm going to need two by lights at",
    "start": "283259",
    "end": "285120"
  },
  {
    "text": "the end to represent these two bytes in",
    "start": "285120",
    "end": "286800"
  },
  {
    "text": "an array and so to be able to represent",
    "start": "286800",
    "end": "288780"
  },
  {
    "text": "the exact same information I only need",
    "start": "288780",
    "end": "291780"
  },
  {
    "text": "about 10 or 11 bytes whereas on the",
    "start": "291780",
    "end": "294360"
  },
  {
    "text": "other side it's around 50 bytes to",
    "start": "294360",
    "end": "296580"
  },
  {
    "text": "represent the same thing so about a 5x",
    "start": "296580",
    "end": "298979"
  },
  {
    "text": "saving in size so that's kind of like",
    "start": "298979",
    "end": "301380"
  },
  {
    "text": "the overall reason why Json is used and",
    "start": "301380",
    "end": "304740"
  },
  {
    "text": "of course why it is not that great right",
    "start": "304740",
    "end": "307259"
  },
  {
    "text": "but there's actually more to it and so I",
    "start": "307259",
    "end": "309840"
  },
  {
    "text": "want to show you a little experiment I",
    "start": "309840",
    "end": "311520"
  },
  {
    "text": "made just to really test how fast or how",
    "start": "311520",
    "end": "314820"
  },
  {
    "text": "slow Json is and of course you know what",
    "start": "314820",
    "end": "317400"
  },
  {
    "text": "that means if we're doing experiments",
    "start": "317400",
    "end": "318840"
  },
  {
    "text": "and we're going blazingly fast we need",
    "start": "318840",
    "end": "321840"
  },
  {
    "text": "to do something we need to change this",
    "start": "321840",
    "end": "323940"
  },
  {
    "text": "attire oh it's science time",
    "start": "323940",
    "end": "328620"
  },
  {
    "text": "foreign",
    "start": "328620",
    "end": "329890"
  },
  {
    "text": "[Music]",
    "start": "329890",
    "end": "332060"
  },
  {
    "text": "all right so this is the simple test so",
    "start": "332060",
    "end": "334440"
  },
  {
    "text": "first this is the server this is a very",
    "start": "334440",
    "end": "336240"
  },
  {
    "text": "important part I'm just creating a raw",
    "start": "336240",
    "end": "338160"
  },
  {
    "text": "TCP server in which people can make TCP",
    "start": "338160",
    "end": "340800"
  },
  {
    "text": "connections to with that the message is",
    "start": "340800",
    "end": "342840"
  },
  {
    "text": "going to look a little something like",
    "start": "342840",
    "end": "344100"
  },
  {
    "text": "this the first byte of the message will",
    "start": "344100",
    "end": "346320"
  },
  {
    "text": "be the length of what is going to be in",
    "start": "346320",
    "end": "348600"
  },
  {
    "text": "the message the next will be the",
    "start": "348600",
    "end": "350160"
  },
  {
    "text": "stringified say representation of the",
    "start": "350160",
    "end": "352020"
  },
  {
    "text": "object using Json or the Deku encoding",
    "start": "352020",
    "end": "355080"
  },
  {
    "text": "of course Deku encoding is named after",
    "start": "355080",
    "end": "357120"
  },
  {
    "text": "Zelda Ocarina of Time and it is",
    "start": "357120",
    "end": "360060"
  },
  {
    "text": "effectively just that simple binary",
    "start": "360060",
    "end": "362520"
  },
  {
    "text": "representation that we talked about I",
    "start": "362520",
    "end": "364259"
  },
  {
    "text": "have to do a bit of annotation blah blah",
    "start": "364259",
    "end": "365940"
  },
  {
    "text": "blah and on the rest side I can create",
    "start": "365940",
    "end": "367800"
  },
  {
    "text": "these really small objects instead of",
    "start": "367800",
    "end": "369780"
  },
  {
    "text": "the Json encoding so that means in",
    "start": "369780",
    "end": "371639"
  },
  {
    "text": "JavaScript either write a Deku",
    "start": "371639",
    "end": "373259"
  },
  {
    "text": "deserializer so you can see right here I",
    "start": "373259",
    "end": "375180"
  },
  {
    "text": "actually only read out one byte because",
    "start": "375180",
    "end": "376740"
  },
  {
    "text": "the data in my messages is effectively a",
    "start": "376740",
    "end": "379020"
  },
  {
    "text": "type and byte I use the type as the",
    "start": "379020",
    "end": "381120"
  },
  {
    "text": "function to call right here so that who",
    "start": "381120",
    "end": "382979"
  },
  {
    "text": "am I function is called right here if",
    "start": "382979",
    "end": "385199"
  },
  {
    "text": "the first byte is a who am I bite and of",
    "start": "385199",
    "end": "388080"
  },
  {
    "text": "course I have to be able to read all",
    "start": "388080",
    "end": "389280"
  },
  {
    "text": "this data out of the stream of data",
    "start": "389280",
    "end": "391139"
  },
  {
    "text": "coming in from the TCP socket so I just",
    "start": "391139",
    "end": "393419"
  },
  {
    "text": "simply get the parse call and then after",
    "start": "393419",
    "end": "395819"
  },
  {
    "text": "that I actually parse out the message",
    "start": "395819",
    "end": "397860"
  },
  {
    "text": "and then send it on to the program if",
    "start": "397860",
    "end": "400500"
  },
  {
    "text": "it's just just on I do the exact same",
    "start": "400500",
    "end": "402240"
  },
  {
    "text": "thing I read out the length of this",
    "start": "402240",
    "end": "403979"
  },
  {
    "text": "message right here and then I simply do",
    "start": "403979",
    "end": "406199"
  },
  {
    "text": "a simple sub array into this buffer and",
    "start": "406199",
    "end": "409380"
  },
  {
    "text": "then to string it and then parse it and",
    "start": "409380",
    "end": "411240"
  },
  {
    "text": "as you can see here I don't do anything",
    "start": "411240",
    "end": "412199"
  },
  {
    "text": "with the object I just simply let go of",
    "start": "412199",
    "end": "413940"
  },
  {
    "text": "it right away I don't even try to hold",
    "start": "413940",
    "end": "415919"
  },
  {
    "text": "on to these newly parsed items I'm just",
    "start": "415919",
    "end": "418020"
  },
  {
    "text": "saying how fast can the server handle",
    "start": "418020",
    "end": "420060"
  },
  {
    "text": "parse and of course I took the time to",
    "start": "420060",
    "end": "421979"
  },
  {
    "text": "write a client in Rust I spawn about a",
    "start": "421979",
    "end": "423840"
  },
  {
    "text": "hundred threads sending things as fast",
    "start": "423840",
    "end": "425520"
  },
  {
    "text": "as possible and I send them in chunks of",
    "start": "425520",
    "end": "427620"
  },
  {
    "text": "a thousand I think at a time and I",
    "start": "427620",
    "end": "429960"
  },
  {
    "text": "either serialize them in Json or I",
    "start": "429960",
    "end": "432240"
  },
  {
    "text": "serialize them using Deku and of course",
    "start": "432240",
    "end": "434100"
  },
  {
    "text": "I only do the serialization once of",
    "start": "434100",
    "end": "436139"
  },
  {
    "text": "course at the top of the program the",
    "start": "436139",
    "end": "437639"
  },
  {
    "text": "rest of the time I'm just sending copies",
    "start": "437639",
    "end": "438960"
  },
  {
    "text": "of that data over and over again so",
    "start": "438960",
    "end": "440520"
  },
  {
    "text": "maximum blazingly fast all right so",
    "start": "440520",
    "end": "442740"
  },
  {
    "text": "let's just try the experiment out so I",
    "start": "442740",
    "end": "444599"
  },
  {
    "text": "have the Json server running right here",
    "start": "444599",
    "end": "446819"
  },
  {
    "text": "the server is bound it's ready to rock",
    "start": "446819",
    "end": "448919"
  },
  {
    "text": "I'm gonna jump over and do I the the",
    "start": "448919",
    "end": "451740"
  },
  {
    "text": "rust client saying hey encode your",
    "start": "451740",
    "end": "454740"
  },
  {
    "text": "things via Jason and I'm going to send",
    "start": "454740",
    "end": "456780"
  },
  {
    "text": "it as fast as possible and the server is",
    "start": "456780",
    "end": "459120"
  },
  {
    "text": "going to run for 10 seconds of received",
    "start": "459120",
    "end": "461160"
  },
  {
    "text": "messages and then stop and tell me how",
    "start": "461160",
    "end": "463380"
  },
  {
    "text": "many objects per millisecond can be",
    "start": "463380",
    "end": "465419"
  },
  {
    "text": "created all right give it a second I did",
    "start": "465419",
    "end": "467400"
  },
  {
    "text": "say 10 seconds you know it has to run",
    "start": "467400",
    "end": "469440"
  },
  {
    "text": "for a little bit",
    "start": "469440",
    "end": "472099"
  },
  {
    "text": "and there you go it ran for 10 seconds",
    "start": "472680",
    "end": "474660"
  },
  {
    "text": "it created a lot of objects and so",
    "start": "474660",
    "end": "476699"
  },
  {
    "text": "that's about",
    "start": "476699",
    "end": "478220"
  },
  {
    "text": "1665 objects per millisecond Json can",
    "start": "478220",
    "end": "483180"
  },
  {
    "text": "create now remember we don't hold on to",
    "start": "483180",
    "end": "484979"
  },
  {
    "text": "anything we don't do anything special we",
    "start": "484979",
    "end": "486660"
  },
  {
    "text": "just let it run all right so let's run",
    "start": "486660",
    "end": "488220"
  },
  {
    "text": "the Deku server let's jump over here and",
    "start": "488220",
    "end": "490680"
  },
  {
    "text": "run the Deku client now remember the",
    "start": "490680",
    "end": "492960"
  },
  {
    "text": "Json server did about",
    "start": "492960",
    "end": "495440"
  },
  {
    "text": "1665 objects per millisecond where's the",
    "start": "495440",
    "end": "498599"
  },
  {
    "text": "Deku one did about 24",
    "start": "498599",
    "end": "501360"
  },
  {
    "text": "000 objects per second so over 10x",
    "start": "501360",
    "end": "504000"
  },
  {
    "text": "Improvement that is significantly faster",
    "start": "504000",
    "end": "507360"
  },
  {
    "text": "so what I don't want you to do is just",
    "start": "507360",
    "end": "509280"
  },
  {
    "text": "go out there and just convert right away",
    "start": "509280",
    "end": "510539"
  },
  {
    "text": "to Binary do some research see how much",
    "start": "510539",
    "end": "513240"
  },
  {
    "text": "requests are going on make sure you kind",
    "start": "513240",
    "end": "515219"
  },
  {
    "text": "of you know profile your server do an",
    "start": "515219",
    "end": "517320"
  },
  {
    "text": "experiment see what happens to your",
    "start": "517320",
    "end": "519360"
  },
  {
    "text": "server because remember Json is easy",
    "start": "519360",
    "end": "521580"
  },
  {
    "text": "Jason is a very simple you know",
    "start": "521580",
    "end": "524520"
  },
  {
    "text": "algorithm it's very simple to see the",
    "start": "524520",
    "end": "526800"
  },
  {
    "text": "output it's very simple to inspect",
    "start": "526800",
    "end": "528420"
  },
  {
    "text": "where's these binary encodings can be",
    "start": "528420",
    "end": "530459"
  },
  {
    "text": "quite difficult to work with and version",
    "start": "530459",
    "end": "532620"
  },
  {
    "text": "ending is not that easy just like",
    "start": "532620",
    "end": "534120"
  },
  {
    "text": "versioning is just on it also is not",
    "start": "534120",
    "end": "536279"
  },
  {
    "text": "easy your client just gets data that it",
    "start": "536279",
    "end": "538380"
  },
  {
    "text": "can't understand that's the only",
    "start": "538380",
    "end": "539519"
  },
  {
    "text": "difference is that the schema is within",
    "start": "539519",
    "end": "541260"
  },
  {
    "text": "the Json whereas you're assumed to know",
    "start": "541260",
    "end": "543720"
  },
  {
    "text": "the schema when it comes to these binary",
    "start": "543720",
    "end": "545459"
  },
  {
    "text": "protocols it's not a protocol it's",
    "start": "545459",
    "end": "547260"
  },
  {
    "text": "really an encoding if you think about",
    "start": "547260",
    "end": "548399"
  },
  {
    "text": "it's a serialization and deserialization",
    "start": "548399",
    "end": "550200"
  },
  {
    "text": "and so it just on slow slow absolutely",
    "start": "550200",
    "end": "552600"
  },
  {
    "text": "it's just horrifyingly slow would the",
    "start": "552600",
    "end": "555480"
  },
  {
    "text": "world be a better place if we never use",
    "start": "555480",
    "end": "557279"
  },
  {
    "text": "Json probably I mean we'd probably be",
    "start": "557279",
    "end": "559380"
  },
  {
    "text": "using half the servers that we're using",
    "start": "559380",
    "end": "561180"
  },
  {
    "text": "today on Earth if we just got rid of all",
    "start": "561180",
    "end": "563339"
  },
  {
    "text": "that crappy is just on encoding again",
    "start": "563339",
    "end": "565080"
  },
  {
    "text": "this is the second kind of Deep dive",
    "start": "565080",
    "end": "567060"
  },
  {
    "text": "more intense video on something if you",
    "start": "567060",
    "end": "569640"
  },
  {
    "text": "like this let me know down below show me",
    "start": "569640",
    "end": "572040"
  },
  {
    "text": "those algorithmic signals of course",
    "start": "572040",
    "end": "573839"
  },
  {
    "text": "subscribe to the channel blah blah blah",
    "start": "573839",
    "end": "575459"
  },
  {
    "text": "blah you get the idea because if you",
    "start": "575459",
    "end": "577140"
  },
  {
    "text": "don't do it I don't know that you like",
    "start": "577140",
    "end": "579120"
  },
  {
    "text": "this I think that you hate it and I",
    "start": "579120",
    "end": "580680"
  },
  {
    "text": "won't do it even though I like it and of",
    "start": "580680",
    "end": "582480"
  },
  {
    "text": "course everything that we developed",
    "start": "582480",
    "end": "583740"
  },
  {
    "text": "today even the results and everything",
    "start": "583740",
    "end": "585120"
  },
  {
    "text": "we're all done live on Twitch so if you",
    "start": "585120",
    "end": "586680"
  },
  {
    "text": "want to come check it out come check it",
    "start": "586680",
    "end": "587760"
  },
  {
    "text": "out the name is the scienceogen Jizzle I",
    "start": "587760",
    "end": "590880"
  },
  {
    "text": "can't believe I can't believe it was",
    "start": "590880",
    "end": "592380"
  },
  {
    "text": "almost called Jizzle like how much",
    "start": "592380",
    "end": "594300"
  },
  {
    "text": "better would life have been if it was",
    "start": "594300",
    "end": "595800"
  },
  {
    "text": "called Jizzle",
    "start": "595800",
    "end": "598279"
  }
]