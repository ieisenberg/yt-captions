[
  {
    "text": "Hi everyone, my name is Sai Vennam, and I'm a developer advocate with IBM.",
    "start": "640",
    "end": "4300"
  },
  {
    "text": "Today, I want to talk about security with hybrid cloud architectures.",
    "start": "4300",
    "end": "7660"
  },
  {
    "text": "This is going to be Part 3 of the hybrid cloud architecture series.",
    "start": "7660",
    "end": "11280"
  },
  {
    "text": "Security is a nuanced topic, but to kind of help me explain,",
    "start": "11280",
    "end": "16480"
  },
  {
    "text": "I'm going to start with two major concepts:",
    "start": "16480",
    "end": "18900"
  },
  {
    "text": "north-south network traffic vs. east-west network traffic.",
    "start": "18900",
    "end": "23180"
  },
  {
    "text": "When I walked into the office today, I had to pull out my badge",
    "start": "23180",
    "end": "26320"
  },
  {
    "text": "and scan to get into the building.",
    "start": "26320",
    "end": "28400"
  },
  {
    "text": "This is something called perimeter security,",
    "start": "28400",
    "end": "30980"
  },
  {
    "text": "and it's a core part of north-south network traffic.",
    "start": "30980",
    "end": "35020"
  },
  {
    "text": "Essentially, what that refers to is any traffic that's traveling from end-user applications",
    "start": "35020",
    "end": "39900"
  },
  {
    "text": "to your data centers or public or private cloud environments.",
    "start": "39900",
    "end": "44120"
  },
  {
    "text": "Let's take a step back and kind of explain  these pieces here.",
    "start": "44120",
    "end": "47360"
  },
  {
    "text": "So, we talked about this in the previous videos, but what we've got here",
    "start": "47360",
    "end": "51220"
  },
  {
    "text": "is the Stock Trader monolith,",
    "start": "51220",
    "end": "53520"
  },
  {
    "text": "which is going to be on an on-premises data center.",
    "start": "53520",
    "end": "58260"
  },
  {
    "text": "We've got a couple of services here -",
    "start": "58260",
    "end": "60500"
  },
  {
    "text": "maybe something to help us talk to the cloud",
    "start": "60500",
    "end": "63440"
  },
  {
    "text": "and maybe a data store as well.",
    "start": "63440",
    "end": "65460"
  },
  {
    "text": "So, we mentioned perimeter security,",
    "start": "65460",
    "end": "67761"
  },
  {
    "text": "and that's something you, honestly, take as a given with data centers",
    "start": "67761",
    "end": "71560"
  },
  {
    "text": "- that you have that firewall",
    "start": "71560",
    "end": "73688"
  },
  {
    "text": "sitting in front of that data center giving\nyou a private network",
    "start": "73689",
    "end": "77560"
  },
  {
    "text": "for your actual data center and the applications and workloads running within it.",
    "start": "77560",
    "end": "81780"
  },
  {
    "text": "This made security a lot easier to tackle when working with monolithic applications,",
    "start": "81780",
    "end": "86920"
  },
  {
    "text": "but it did put the onus of security",
    "start": "86920",
    "end": "89340"
  },
  {
    "text": "on the application - the enterprise application developer.",
    "start": "89340",
    "end": "93780"
  },
  {
    "text": "The main thing here to actually secure these endpoints was to make sure that all the capabilities",
    "start": "93780",
    "end": "101020"
  },
  {
    "text": "that this monolith exposes (those API endpoints) were secured. And to do that, we could take",
    "start": "101020",
    "end": "106240"
  },
  {
    "text": "advantage of something like an API gateway.\nSo, traditionally what we would see is a gateway",
    "start": "106240",
    "end": "111610"
  },
  {
    "text": "that's set up in front of that on-prem application with key capabilities exposed that may be",
    "start": "111610",
    "end": "123789"
  },
  {
    "text": "required by that frontend to render the application.\nAnd potentially the same for a mobile app",
    "start": "123789",
    "end": "128840"
  },
  {
    "text": "as well. That, I think, helps tackle security with north-south network traffic on the on-premises side.",
    "start": "128840",
    "end": "136860"
  },
  {
    "text": "Let's shift gears here for a second and talk",
    "start": "136860",
    "end": "139840"
  },
  {
    "text": "about the public cloud side or even potentially a private cloud.",
    "start": "139840",
    "end": "144260"
  },
  {
    "text": "I'll talk about the different components here later in the video but let's start with this",
    "start": "144260",
    "end": "148540"
  },
  {
    "text": "piece right here, which is the Kubernetes worker. Within the Kubernetes worker, we can",
    "start": "148540",
    "end": "155030"
  },
  {
    "text": "assume that we have a couple of services that we need to actually render the Stock Trader",
    "start": "155030",
    "end": "160010"
  },
  {
    "text": "application, whether it's mobile or in a web app. We have a couple of services and can",
    "start": "160010",
    "end": "165730"
  },
  {
    "text": "assume they talk to one another.\nSo, what happens when an end user actually",
    "start": "165730",
    "end": "169319"
  },
  {
    "text": "accesses the application? Well, one, they'll actually have to hit that endpoint that becomes",
    "start": "169319",
    "end": "174430"
  },
  {
    "text": "available, at which point they will enter\nthe public cloud. At that layer, we get things",
    "start": "174430",
    "end": "181209"
  },
  {
    "text": "like denial of service protection and other\nthings that the cloud provider offers you",
    "start": "181209",
    "end": "187739"
  },
  {
    "text": "to make sure that those requests are maybe authenticated or, you know, they're they're",
    "start": "187739",
    "end": "191940"
  },
  {
    "text": "coming in in a safe manner.\nThe next thing that happens, that request",
    "start": "191940",
    "end": "196080"
  },
  {
    "text": "will get forwarded to your actual Kubernetes worker node with the capabilities that it",
    "start": "196080",
    "end": "201519"
  },
  {
    "text": "exposes. So, at that level, we have a couple of options for securing those endpoints.",
    "start": "201519",
    "end": "208549"
  },
  {
    "text": "Let's say, you know, we want to hit this first microservice running in a Kubernetes worker",
    "start": "208549",
    "end": "213079"
  },
  {
    "text": "- there's two ways that we can kind of configure security policies. The first is going to be",
    "start": "213079",
    "end": "219290"
  },
  {
    "text": "at Layer 3, which is, if you're familiar,\nit's things like IPs and ports - basically,",
    "start": "219290",
    "end": "226129"
  },
  {
    "text": "it allows you to configure policies for any\nnetwork interface. That's gonna be done with",
    "start": "226130",
    "end": "231319"
  },
  {
    "text": "things like Calico or the native Kubernetes\nAPI policies. So, that handles the Layer 3",
    "start": "231319",
    "end": "240230"
  },
  {
    "text": "security level.\nThe other option we have here is to use something",
    "start": "240230",
    "end": "243379"
  },
  {
    "text": "like Istio for Layer 7 network policies and\nrouting for security. Together, with those",
    "start": "243379",
    "end": "252799"
  },
  {
    "text": "two capabilities, we can cover everywhere\nfrom Layer 3 to Layer 7 network security policies.",
    "start": "252799",
    "end": "258840"
  },
  {
    "text": "So, the request comes in and, you know, granted that it passes those policies, it gets forwarded",
    "start": "258840",
    "end": "264500"
  },
  {
    "text": "to your worker and whatever services it might hit. So, this is the ingress application flow.",
    "start": "264500",
    "end": "270200"
  },
  {
    "text": "And then, for external requests that a service might make (for egress calls), the same can",
    "start": "270200",
    "end": "276780"
  },
  {
    "text": "be configured in Istio or Calico, going everywhere from Layer 3 to Layer 7.",
    "start": "276780",
    "end": "283639"
  },
  {
    "text": "So that kind of talks about north-south traffic - ingress and egress - communication with",
    "start": "283640",
    "end": "289070"
  },
  {
    "text": "the clients as well as a data center or a\npublic/private cloud environment. So, that",
    "start": "289070",
    "end": "294380"
  },
  {
    "text": "tackles north-south network flows.\nNext, let's talk about east-west. So these",
    "start": "294380",
    "end": "302360"
  },
  {
    "text": "are going to be, essentially, communication happening between services running on-premises",
    "start": "302360",
    "end": "309319"
  },
  {
    "text": "or in your public/private cloud environments.",
    "start": "309320",
    "end": "312640"
  },
  {
    "text": "So, for east-west, going back to my analogy",
    "start": "312640",
    "end": "316260"
  },
  {
    "text": "- I badged into my building, they let me into the perimeter, but to actually get to my floor",
    "start": "316260",
    "end": "321660"
  },
  {
    "text": "where I work every day, I have to badge again.\nThat's going to be on the third floor of the",
    "start": "321660",
    "end": "327640"
  },
  {
    "text": "building, right? So, I go up to the third\nfloor, and I'm forced to actually scan my",
    "start": "327640",
    "end": "331180"
  },
  {
    "text": "badge again. If I try to enter the fourth\nfloor, I actually wouldn't be allowed to enter",
    "start": "331180",
    "end": "335729"
  },
  {
    "text": "as I'm not on the design team.\nSo, essentially, what that refers to is a",
    "start": "335730",
    "end": "341050"
  },
  {
    "text": "concept called segmentation. So, within the actual building or an application infrastructure",
    "start": "341050",
    "end": "347840"
  },
  {
    "text": "- maybe a public cloud environment",
    "start": "347840",
    "end": "349639"
  },
  {
    "text": "- we want to create segments of what users are allowed to access,",
    "start": "349640",
    "end": "353360"
  },
  {
    "text": "what admins allowed access, what processes are allowed to access",
    "start": "353360",
    "end": "357139"
  },
  {
    "text": "when talking to one another.",
    "start": "357140",
    "end": "360060"
  },
  {
    "text": "So, at that level, we actually call this in",
    "start": "360060",
    "end": "365500"
  },
  {
    "text": "Kubernetes environments, we call that micro-segmentation.",
    "start": "365500",
    "end": "369165"
  },
  {
    "text": "In the customer-managed environment, what",
    "start": "369165",
    "end": "371801"
  },
  {
    "text": "that would look like is, essentially, setting\nup - using something like Istio",
    "start": "371801",
    "end": "375960"
  },
  {
    "text": "- TLS between all requests going between microservices.",
    "start": "375960",
    "end": "381759"
  },
  {
    "text": "The thing about encryption - it's one of those things that",
    "start": "381760",
    "end": "384560"
  },
  {
    "text": "you want to encrypt any requests as early as possible",
    "start": "384560",
    "end": "387480"
  },
  {
    "text": "and decrypt as late as possible.",
    "start": "387480",
    "end": "389520"
  },
  {
    "text": "So, with traditional Kubernetes microservices architectures,",
    "start": "389520",
    "end": "393240"
  },
  {
    "text": "you want to make sure that all of those requests are being encrypted at the earliest level possible.",
    "start": "393240",
    "end": "399460"
  },
  {
    "text": "That kind of handles microservice-to-microservice architecture, but we didn't really need to",
    "start": "399470",
    "end": "404560"
  },
  {
    "text": "consider that with the monolith because, again, as we mentioned, monoliths would be using",
    "start": "404560",
    "end": "409050"
  },
  {
    "text": "RPC or remote procedure calls, software-based calls, which remove the requirement of talking",
    "start": "409050",
    "end": "416190"
  },
  {
    "text": "over a network so we wouldn't actually have to take advantage of TLS.",
    "start": "416190",
    "end": "419560"
  },
  {
    "text": "But, you can imagine that you do want to make sure",
    "start": "419560",
    "end": "422120"
  },
  {
    "text": "that the network calls made to the database would be secured TLS.",
    "start": "422120",
    "end": "428780"
  },
  {
    "text": "The next concept I want introduce is what",
    "start": "428780",
    "end": "430900"
  },
  {
    "text": "we have sketched out here on the cloud-managed side of our cloud.",
    "start": "430900",
    "end": "436419"
  },
  {
    "text": "So, what we've got here is the Kubernetes master node.",
    "start": "436420",
    "end": "442520"
  },
  {
    "text": "And one thing to remember here is that when you're working",
    "start": "442520",
    "end": "446840"
  },
  {
    "text": "with a managed Kubernetes service,",
    "start": "446840",
    "end": "448760"
  },
  {
    "text": "the master node is actually going to be managed by the cloud provider.",
    "start": "448760",
    "end": "453920"
  },
  {
    "text": "So, whereas you control the worker nodes, the master is completely managed",
    "start": "453920",
    "end": "459160"
  },
  {
    "text": "and houses a very important piece of the architecture - the etcd data store.",
    "start": "459160",
    "end": "465910"
  },
  {
    "text": "So, in the Kubernetes world, the etcd data\nstore is something that you want to be really",
    "start": "465910",
    "end": "472460"
  },
  {
    "text": "careful about protecting because that has\nall the information about your services, your",
    "start": "472460",
    "end": "477270"
  },
  {
    "text": "deployments, and all of the Kubernetes API resources. So, securing the etcd is going",
    "start": "477270",
    "end": "483110"
  },
  {
    "text": "to be very important; it's paramount to your security architecture.",
    "start": "483110",
    "end": "487830"
  },
  {
    "text": "And to secure that, the cloud provider, traditionally, will have a kind of a three-phase process.",
    "start": "487830",
    "end": "494150"
  },
  {
    "text": "So what we'll have is everything from - we'll start with step one, which is authentication,",
    "start": "494150",
    "end": "503580"
  },
  {
    "text": "so TLS. Next, we've got RBAC, which is Kubernetes role-based access control for authorization.",
    "start": "503580",
    "end": "515880"
  },
  {
    "text": "And then, finally, over here, the last piece\nof the puzzle is gonna be the admission controller,",
    "start": "515880",
    "end": "521280"
  },
  {
    "text": "which is a Kubernetes concept that, you know, once you've made it through the authentication",
    "start": "521280",
    "end": "525310"
  },
  {
    "text": "and authorization, there's another level of\nsecurity to make sure that those API requests",
    "start": "525310",
    "end": "531279"
  },
  {
    "text": "are mutated or, you know, massaged and made sure that they're in the right format to access that data.",
    "start": "531280",
    "end": "537820"
  },
  {
    "text": "So, they'll access that etcd data, and to",
    "start": "537820",
    "end": "540870"
  },
  {
    "text": "send that back to your worker node, where your application pods need to request that",
    "start": "540870",
    "end": "545170"
  },
  {
    "text": "information or, you know, pass information to it, there's an open VPN server. And there's",
    "start": "545170",
    "end": "555550"
  },
  {
    "text": "also going to be a client, as well. But, that's going out enable you to basically access that",
    "start": "555550",
    "end": "562089"
  },
  {
    "text": "etcd data store and return data back into\nthe Kubernetes worker.",
    "start": "562090",
    "end": "567900"
  },
  {
    "text": "So that kind of covers the pattern of how\nKubernetes is set up in a cloud provider service,",
    "start": "567900",
    "end": "576930"
  },
  {
    "text": "with the master node being managed and the worker node being able to, kind of work, with",
    "start": "576930",
    "end": "581300"
  },
  {
    "text": "that master node in a secure fashion to make sure your assets are protected at all times.",
    "start": "581300",
    "end": "586399"
  },
  {
    "text": "The other thing I want to mention here - that etcd data store is going to be backed up in",
    "start": "586400",
    "end": "596280"
  },
  {
    "text": "a cloud object storage capability to make\nsure that, you know, worst case scenario,",
    "start": "596280",
    "end": "601860"
  },
  {
    "text": "you do have those assets in a secure place.",
    "start": "601860",
    "end": "606700"
  },
  {
    "text": "So, I think that covers north-south network traffic as well as east-west,",
    "start": "606700",
    "end": "611520"
  },
  {
    "text": "where we talked about network traffic coming in from clients",
    "start": "611520",
    "end": "614740"
  },
  {
    "text": "or, at least, network traffic going between\nservices",
    "start": "614740",
    "end": "617980"
  },
  {
    "text": "in your data center and in your private or public cloud environments.",
    "start": "617980",
    "end": "622240"
  },
  {
    "text": "The last thing I want to talk about is a concept called DevSecOps.",
    "start": "622240",
    "end": "630860"
  },
  {
    "text": "You'll notice here that it's DevOps with the word \"security\" right in the middle,",
    "start": "630860",
    "end": "636600"
  },
  {
    "text": "and, essentially, it's a way to ensure that security is something that you think about from the ground up",
    "start": "636600",
    "end": "644060"
  },
  {
    "text": "when you start architecting the application",
    "start": "644060",
    "end": "646300"
  },
  {
    "text": "all the way until  you move into production.",
    "start": "646300",
    "end": "648560"
  },
  {
    "text": "And that's something you want to take advantage of",
    "start": "648560",
    "end": "650820"
  },
  {
    "text": "to make sure that you don't have any issues when moving to production.",
    "start": "650820",
    "end": "656000"
  },
  {
    "text": "You don't want to architect an application the incorrect way",
    "start": "656000",
    "end": "658980"
  },
  {
    "text": "and then realize you have to go back and rework all of that.",
    "start": "658980",
    "end": "662240"
  },
  {
    "text": "So, thinking about security from the beginning is going to be an important thing.",
    "start": "662240",
    "end": "667459"
  },
  {
    "text": "When working with a cloud-provided Kubernetes service",
    "start": "667460",
    "end": "670660"
  },
  {
    "text": "there's something that makes it a little bit easier",
    "start": "670660",
    "end": "673319"
  },
  {
    "text": "to make sure your flows are secure.",
    "start": "673320",
    "end": "676120"
  },
  {
    "text": "One consideration you want to have here is to make sure that your CI workflow",
    "start": "676120",
    "end": "681140"
  },
  {
    "text": "- that DevOps flow -",
    "start": "681140",
    "end": "682360"
  },
  {
    "text": "has security embedded within it and is automated.",
    "start": "682360",
    "end": "685360"
  },
  {
    "text": "So, you can imagine, maybe you have your favorite",
    "start": "685360",
    "end": "688480"
  },
  {
    "text": "code repository holding your application code",
    "start": "688480",
    "end": "691680"
  },
  {
    "text": "- your Docker files, whatever they might be.",
    "start": "691680",
    "end": "694520"
  },
  {
    "text": "We're going to automate that process",
    "start": "694520",
    "end": "697240"
  },
  {
    "text": "and make sure that only the developers who building that could have access to that Git repo.",
    "start": "697240",
    "end": "703060"
  },
  {
    "text": "Next, you want to make sure you have a trusted",
    "start": "703060",
    "end": "706250"
  },
  {
    "text": "signer to make sure that that code, when it\ngets pushed into a registry, will go ahead",
    "start": "706250",
    "end": "711950"
  },
  {
    "text": "and sign it as a trusted image to something\nthat's available with the cloud manage registry.",
    "start": "711950",
    "end": "717480"
  },
  {
    "text": "So, we'll push that image into the registry.",
    "start": "717480",
    "end": "720240"
  },
  {
    "text": "Once there, there's a capability called Vulnerability Advisor",
    "start": "720240",
    "end": "724080"
  },
  {
    "text": "that's going to scan that image and make sure that if there's any issues or any vulnerabilities  that are detected",
    "start": "724080",
    "end": "729960"
  },
  {
    "text": "- everywhere from the base operating system",
    "start": "729960",
    "end": "732440"
  },
  {
    "text": "to the runtime that you're using",
    "start": "732440",
    "end": "734360"
  },
  {
    "text": "- that if a vulnerability is detected, you'll be made aware of it.",
    "start": "734360",
    "end": "737540"
  },
  {
    "text": "Once it passes that vulnerability assessment,",
    "start": "737540",
    "end": "740199"
  },
  {
    "text": "you can tie that in to build that image and push it directly into Kubernetes.",
    "start": "740200",
    "end": "745920"
  },
  {
    "text": "At that stage, you can use something like an admission controller",
    "start": "745920",
    "end": "750360"
  },
  {
    "text": "(which we talked about in the Kubernetes\nmaster)",
    "start": "750360",
    "end": "752579"
  },
  {
    "text": "to make sure that that image is, again,",
    "start": "752580",
    "end": "756060"
  },
  {
    "text": "secure and without vulnerabilities.\nFinally, there's a live-scanning capability",
    "start": "756060",
    "end": "761590"
  },
  {
    "text": "to allow you to scan your images running in production to make sure that there are no vulnerabilities in there.",
    "start": "761590",
    "end": "768180"
  },
  {
    "text": "So, DevSecOps is a very important concept",
    "start": "768180",
    "end": "772700"
  },
  {
    "text": "that ensures that, from the ground up, you're managing security when doing DevOps.",
    "start": "772700",
    "end": "778300"
  },
  {
    "text": "Thanks for tuning into part 3 of the Hybrid Cloud Architecture series on security.",
    "start": "778300",
    "end": "783360"
  },
  {
    "text": "If you haven't already,",
    "start": "783360",
    "end": "784500"
  },
  {
    "text": "be sure to check out the introduction, part 1, and part2 - the links will be below.",
    "start": "784500",
    "end": "788740"
  },
  {
    "text": "As always, feel free to subscribe if you want to see more of these videos in the future.",
    "start": "788740",
    "end": "792959"
  },
  {
    "text": "Thank you.",
    "start": "792960",
    "end": "793460"
  }
]