[
  {
    "text": "Today, I'm going to talk \nto you about quantum computing applications and  ",
    "start": "0",
    "end": "4620"
  },
  {
    "text": "machine learning. This is a very exciting area of \nquantum computing research and lots of classical  ",
    "start": "4620",
    "end": "11040"
  },
  {
    "text": "machine learning developers are understandably \nexcited about the potential applications within  ",
    "start": "11040",
    "end": "17040"
  },
  {
    "text": "their own field. So to get started, let's talk \nabout a classical machine learning problem that  ",
    "start": "17040",
    "end": "23460"
  },
  {
    "text": "is one this very common linear classification. So \nif we start with two sets of data that we want to  ",
    "start": "23460",
    "end": "31140"
  },
  {
    "text": "classify into two separate categories, let's draw \nthem here. We're just going to have three dots  ",
    "start": "31140",
    "end": "38760"
  },
  {
    "text": "and three crosses, all on a single linear plane \nhere. If the data is arranged like this, it can  ",
    "start": "38760",
    "end": "48360"
  },
  {
    "text": "be pretty easy to classify this into two discrete \ngroups. We can draw a single line in the middle  ",
    "start": "48360",
    "end": "53100"
  },
  {
    "text": "here and now we've classified them, but this \ncan be a lot harder if our data is more complex.  ",
    "start": "53100",
    "end": "60839"
  },
  {
    "text": "For example, if our data is arranged like this, \nperhaps with the crosses in the middle. Now, there  ",
    "start": "61620",
    "end": "68820"
  },
  {
    "text": "isn't a single line that we can draw on this plane \nto classify the data into two discrete groups.  ",
    "start": "68820",
    "end": "76680"
  },
  {
    "text": "So in order to solve this problem and classify \nthis data, what we need to do is we need to map  ",
    "start": "78120",
    "end": "83520"
  },
  {
    "text": "this data into a higher dimensional space, \nwhich we're going to call a feature space.  ",
    "start": "83520",
    "end": "90780"
  },
  {
    "text": "Then if we've mapped the \ndata, for example, like this.  ",
    "start": "96240",
    "end": "100259"
  },
  {
    "text": "We can now see because we've mapped this data \ninto a high dimensional space. There is now a  ",
    "start": "103440",
    "end": "109500"
  },
  {
    "text": "much easier way to classify this. So how do \nwe do this step of transferring our data,  ",
    "start": "109500",
    "end": "117240"
  },
  {
    "text": "mapping it into a high dimensional feature \nspace? To do this, we can use kernel functions.  ",
    "start": "117240",
    "end": "123540"
  },
  {
    "text": "Kernel functions work by taking some underlying \nfeatures of the original dataset and using that to  ",
    "start": "128280",
    "end": "135660"
  },
  {
    "text": "map those data points into this high dimensional \nfeature space. Kernel functions are incredibly  ",
    "start": "135660",
    "end": "141480"
  },
  {
    "text": "powerful and incredibly versatile, but they \ndo face problems. Sometimes they just get poor  ",
    "start": "141480",
    "end": "147480"
  },
  {
    "text": "results, and also the compute runtime can explode \nas the complexity of the data sets increase.  ",
    "start": "147480",
    "end": "154920"
  },
  {
    "text": "If you're an experienced machine learning \ndeveloper, perhaps you've seen this already.  ",
    "start": "156480",
    "end": "161519"
  },
  {
    "text": "If you're dealing with data that has very \nstrong correlations, or perhaps if you're  ",
    "start": "161520",
    "end": "165840"
  },
  {
    "text": "dealing with time series forecasting where the \ndata is very complex and at a high frequency,  ",
    "start": "165840",
    "end": "171840"
  },
  {
    "text": "but quantum computers have the potential \nto provide an advantage in this space.  ",
    "start": "173340",
    "end": "180480"
  },
  {
    "text": "They can be useful because quantum \ncomputers can access much more complex  ",
    "start": "181140",
    "end": "188040"
  },
  {
    "text": "and higher dimensional feature spaces \nthan their classical counterparts can.  ",
    "start": "188040",
    "end": "192000"
  },
  {
    "text": "And they can do this because quantum computers \ncan we can encode our data into quantum circuits,  ",
    "start": "194100",
    "end": "200520"
  },
  {
    "text": "and the resulting kernel functions could be very \ndifficult or even impossible to replicate on a  ",
    "start": "200520",
    "end": "207300"
  },
  {
    "text": "classical machine, as well as this, those \nkind of functions also can perform better.  ",
    "start": "207300",
    "end": "211800"
  },
  {
    "text": "In 2021, IBM researchers actually proved that \nquantum kernels can provide an exponential  ",
    "start": "213480",
    "end": "222540"
  },
  {
    "text": "speed up over their classical counterparts for \ncertain classes of classification problems.  ",
    "start": "222540",
    "end": "230219"
  },
  {
    "text": "As well as this. There is a lot of research going \ninto improving Quantum kernel with structure,  ",
    "start": "235680",
    "end": "241920"
  },
  {
    "text": "data and kernel alignment. So as you \ncan see, this field is incredibly  ",
    "start": "241920",
    "end": "247740"
  },
  {
    "text": "exciting. There's a lot of research going on \nin this space. And you can use Qiskit Runtime  ",
    "start": "247740",
    "end": "255540"
  },
  {
    "text": "to easily build a quantum machine learning \nalgorithms with built in tools such as the  ",
    "start": "265200",
    "end": "271800"
  },
  {
    "text": "sampler primitive, which primitives are unique to \nthe IBM's Qiskit Runtime. These are essentially  ",
    "start": "271800",
    "end": "280319"
  },
  {
    "text": "predefined programs that help us to optimize \nworkflows and execute them efficiently on  ",
    "start": "280320",
    "end": "287640"
  },
  {
    "text": "quantum systems. Let's take, for example, our \nlinear classification problem. Let's say we  ",
    "start": "287640",
    "end": "294120"
  },
  {
    "text": "have our data and we've encoded it into a quantum \ncircuit. We can then use the sampler primitive.  ",
    "start": "294120",
    "end": "302699"
  },
  {
    "text": "To obtain quasi-probabilities indicating \nthe relationships between the the different  ",
    "start": "308280",
    "end": "316440"
  },
  {
    "text": "data points and these relationships \ncan constitute our kernel matrix.  ",
    "start": "316440",
    "end": "322560"
  },
  {
    "text": "And that kernel matrix can then be evaluated and \nused in even a classical support vector machine  ",
    "start": "324780",
    "end": "332040"
  },
  {
    "text": "to predict new classification labels. So if you're \nready to get started learning more about quantum  ",
    "start": "332820",
    "end": "340080"
  },
  {
    "text": "machine learning, you can check out the links in \nthe description for more information about Kiska  ",
    "start": "340080",
    "end": "345659"
  },
  {
    "text": "runtime as well as the quantum machine learning \ncourse that's available on the Qiskit textbook.  ",
    "start": "345660",
    "end": "351360"
  },
  {
    "text": "I hope you've enjoyed this content. Thank \nyou very much for watching. [00:00:00][0.0]",
    "start": "351360",
    "end": "355910"
  }
]