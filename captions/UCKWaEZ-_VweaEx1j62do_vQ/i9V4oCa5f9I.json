[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "Hi everyone, my name is Sai Vennam",
    "start": "30",
    "end": "2060"
  },
  {
    "text": "and I'm with the IBM Cloud team.",
    "start": "2060",
    "end": "3600"
  },
  {
    "text": "Today we want to talk about operators,",
    "start": "3600",
    "end": "5740"
  },
  {
    "text": "and no, I'm not actually talking about operations teams,",
    "start": "5740",
    "end": "8460"
  },
  {
    "text": "but instead the operators framework",
    "start": "8460",
    "end": "10580"
  },
  {
    "text": "which can be used on Kubernetes or OpenShift.",
    "start": "10580",
    "end": "13660"
  },
  {
    "text": "CoreOS actually introduced the operator framework back in 2016.",
    "start": "13660",
    "end": "17740"
  },
  {
    "text": "CoreOS is now a part of Red Hat and IBM.",
    "start": "17740",
    "end": "20760"
  },
  {
    "text": "Operator framework is quickly picking up traction",
    "start": "20760",
    "end": "24100"
  },
  {
    "text": "as it's a great way of managing complex Kubernetes applications.",
    "start": "24100",
    "end": "28400"
  },
  {
    "text": "Now, before I jump into this,",
    "start": "28400",
    "end": "30520"
  },
  {
    "text": "we want to actually introduce what the Kubernetes control loop is",
    "start": "30520",
    "end": "34120"
  },
  {
    "text": "because it's a core part of the operators framework.",
    "start": "34120",
    "end": "36800"
  },
  {
    "text": "In this video, we're going to be talking about things like deployments and pods,",
    "start": "36800",
    "end": "40379"
  },
  {
    "text": "so if you're not familiar with those",
    "start": "40380",
    "end": "42000"
  },
  {
    "text": "be sure to check out the\"Kubernetes Explained\" video",
    "start": "42000",
    "end": "44440"
  },
  {
    "text": "that I've done on those topics.",
    "start": "44440",
    "end": "46120"
  },
  {
    "start": "46000",
    "end": "200000"
  },
  {
    "text": "But let's get started with exactly what the control loop is",
    "start": "46120",
    "end": "50180"
  },
  {
    "text": "in Kubernetes.",
    "start": "50180",
    "end": "54040"
  },
  {
    "text": "Now, essentially the way it starts,",
    "start": "54040",
    "end": "56220"
  },
  {
    "text": "the control loop is the core part of Kubernetes,",
    "start": "56220",
    "end": "58220"
  },
  {
    "text": "it observes the state of what's in your actual cluster.",
    "start": "58220",
    "end": "62060"
  },
  {
    "text": "So, that's the first step: \"observe\".",
    "start": "62060",
    "end": "66580"
  },
  {
    "text": "Next, what it's going to do,",
    "start": "66580",
    "end": "68740"
  },
  {
    "text": "Kubernetes is going to double-check",
    "start": "68740",
    "end": "70540"
  },
  {
    "text": "that the state in the actual cluster",
    "start": "70540",
    "end": "73360"
  },
  {
    "text": "versus the state that you want it to be.",
    "start": "73360",
    "end": "75100"
  },
  {
    "text": "So it's going to do a diff.",
    "start": "75100",
    "end": "79540"
  },
  {
    "text": "And finally, it wants to resolve that diff by acting on it.",
    "start": "79540",
    "end": "84620"
  },
  {
    "text": "So, the last phase of the control loop is\n\"act\".",
    "start": "84620",
    "end": "89000"
  },
  {
    "text": "Now, the control loop is core to how Kubernetes works",
    "start": "89000",
    "end": "91780"
  },
  {
    "text": "and there's a controller that basically acts on that",
    "start": "91780",
    "end": "94760"
  },
  {
    "text": "for every default resource.",
    "start": "94760",
    "end": "96720"
  },
  {
    "text": "Kubernetes comes with a number of default resources.",
    "start": "96720",
    "end": "99200"
  },
  {
    "text": "Let's see an example of deploying an application without operators",
    "start": "99200",
    "end": "103159"
  },
  {
    "text": "using these default resources.",
    "start": "103160",
    "end": "106140"
  },
  {
    "text": "So, as an end user,",
    "start": "106140",
    "end": "107979"
  },
  {
    "text": "essentially the first thing you're going to want to do",
    "start": "107980",
    "end": "110640"
  },
  {
    "text": "is write up some YAML,",
    "start": "110640",
    "end": "112159"
  },
  {
    "text": "the specification for that actual application.",
    "start": "112160",
    "end": "114600"
  },
  {
    "text": "And, for our particular example, let's say that",
    "start": "114600",
    "end": "117280"
  },
  {
    "text": "we're doing a deployment.",
    "start": "117280",
    "end": "122299"
  },
  {
    "text": "And in this deployment, we'll have to define some configuration.",
    "start": "122300",
    "end": "126280"
  },
  {
    "text": "Things like, \"What's the image?\", and maybe",
    "start": "126280",
    "end": "129679"
  },
  {
    "text": "the replicas, and maybe some other configuration.",
    "start": "129680",
    "end": "136420"
  },
  {
    "text": "So, that's one Kubernetes resource.",
    "start": "136420",
    "end": "139099"
  },
  {
    "text": "And, essentially what you would do, is take that",
    "start": "139100",
    "end": "142180"
  },
  {
    "text": "and deploy it into your Kubernetes cluster",
    "start": "142180",
    "end": "145780"
  },
  {
    "text": "at which point a deployment is made.",
    "start": "145780",
    "end": "149480"
  },
  {
    "text": "Here's where the control loop kicks in:",
    "start": "149480",
    "end": "151519"
  },
  {
    "text": "so Kubernetes observes the state of your cluster,",
    "start": "151520",
    "end": "154160"
  },
  {
    "text": "so we've got a Kubernetes cluster here,",
    "start": "154160",
    "end": "155920"
  },
  {
    "text": "and checks for the difference between what you want versus what's there.",
    "start": "155920",
    "end": "159980"
  },
  {
    "text": "First thing it notices: there's no pods.",
    "start": "159980",
    "end": "162400"
  },
  {
    "text": "So, it's gonna act on that difference,",
    "start": "162400",
    "end": "165360"
  },
  {
    "text": "and it's gonna create some pods.",
    "start": "165360",
    "end": "168580"
  },
  {
    "text": "Now, let's say for a fairly complex application",
    "start": "168580",
    "end": "171840"
  },
  {
    "text": "we don't just have  one YAML",
    "start": "171840",
    "end": "173540"
  },
  {
    "text": "but we have a second YAML, maybe it's for the backend,",
    "start": "173540",
    "end": "176299"
  },
  {
    "text": "and so that deploys in the second deployment,",
    "start": "176300",
    "end": "179520"
  },
  {
    "text": "and that in turn deploys a pod",
    "start": "179520",
    "end": "182780"
  },
  {
    "text": "using the controllers in the control loop.",
    "start": "182780",
    "end": "185819"
  },
  {
    "text": "Now, it's a simple example, but say you want to go through here,",
    "start": "185820",
    "end": "189380"
  },
  {
    "text": "scale up the application, make some changes,",
    "start": "189380",
    "end": "191720"
  },
  {
    "text": "set up some secrets, environment variables,",
    "start": "191720",
    "end": "194220"
  },
  {
    "text": "- every single time you have to either create new Kubernetes resources,",
    "start": "194220",
    "end": "197560"
  },
  {
    "text": "or go in here and edit the existing ones.",
    "start": "197560",
    "end": "200380"
  },
  {
    "start": "200000",
    "end": "280000"
  },
  {
    "text": "That can start to get fairly difficult.",
    "start": "200380",
    "end": "203000"
  },
  {
    "text": "Now, let's see how that's done in a world where we're using operators.",
    "start": "203000",
    "end": "206320"
  },
  {
    "text": "Now, the first thing you would need to do",
    "start": "206320",
    "end": "208600"
  },
  {
    "text": "is install the operator itself.",
    "start": "208600",
    "end": "210700"
  },
  {
    "text": "So, someone on your team has to create the operator,",
    "start": "210700",
    "end": "213440"
  },
  {
    "text": "or maybe you can use one of the many that are out there on OperatorHub,",
    "start": "213440",
    "end": "216790"
  },
  {
    "text": "or the community is building on the operators that are available.",
    "start": "216790",
    "end": "220180"
  },
  {
    "text": "So, the first thing you need in your Kubernetes cluster",
    "start": "220180",
    "end": "223060"
  },
  {
    "text": "is the OLM,  which is the \"Operator Lifecycle Manager\",",
    "start": "223060",
    "end": "226690"
  },
  {
    "text": "which basically manages operators that you have installed.",
    "start": "226690",
    "end": "229560"
  },
  {
    "text": "Next, you deploy your actual operator into the cluster.",
    "start": "229560",
    "end": "236640"
  },
  {
    "text": "The operator is made up of two major components.",
    "start": "236640",
    "end": "240860"
  },
  {
    "text": "The first component in an operator is going to be the CRD.",
    "start": "240860",
    "end": "247000"
  },
  {
    "text": "The other one is going to be the controller.",
    "start": "247000",
    "end": "251240"
  },
  {
    "text": "Now, the CRD is basically a \"Custom Resource Definition\".",
    "start": "251240",
    "end": "254820"
  },
  {
    "text": "So, we've talked about default resources -  things like deployments and pods.",
    "start": "254820",
    "end": "258600"
  },
  {
    "text": "A custom resource is something that you define as a user in Kubernetes,",
    "start": "258600",
    "end": "263040"
  },
  {
    "text": "or maybe an operator defines, it so that you can create YAML",
    "start": "263040",
    "end": "266520"
  },
  {
    "text": "to work against that custom config.",
    "start": "266520",
    "end": "269840"
  },
  {
    "text": "The controller is basically a custom control loop",
    "start": "269840",
    "end": "272919"
  },
  {
    "text": "which runs as a pod in your cluster",
    "start": "272920",
    "end": "275300"
  },
  {
    "text": "and runs this control loop against your custom resource definition.",
    "start": "275300",
    "end": "279539"
  },
  {
    "text": "So, let's say that an operator is created for our custom application deployment here,",
    "start": "279540",
    "end": "285740"
  },
  {
    "text": "so instead  of having to write multiple deployments",
    "start": "285740",
    "end": "288319"
  },
  {
    "text": "and setting up config maps and secrets for whatever our cluster needs,",
    "start": "288320",
    "end": "291560"
  },
  {
    "text": "we instead, as an end user, we'll just deploy one YAML.",
    "start": "291560",
    "end": "299669"
  },
  {
    "text": "Maybe we called this operator MyApp.",
    "start": "299670",
    "end": "303660"
  },
  {
    "text": "It could be a little bit more meaningful  - we can call it \"stateful app\", \"front-end app\",",
    "start": "303660",
    "end": "307800"
  },
  {
    "text": "whatever we want it to be.",
    "start": "307800",
    "end": "309159"
  },
  {
    "text": "And then, we could define some config here,",
    "start": "309160",
    "end": "314220"
  },
  {
    "text": "or we can use the defaults that are set.",
    "start": "314220",
    "end": "316920"
  },
  {
    "text": "We of have a choice of options here.",
    "start": "316920",
    "end": "319180"
  },
  {
    "text": "Then we take this operator",
    "start": "319180",
    "end": "322220"
  },
  {
    "text": "and we deploy it directly into the cluster.",
    "start": "322220",
    "end": "325060"
  },
  {
    "text": "At this point the operator takes over,",
    "start": "325060",
    "end": "327480"
  },
  {
    "text": "and this is actually responsible for running that control loop,",
    "start": "327480",
    "end": "330877"
  },
  {
    "text": "and figuring out exactly what needs to be running.",
    "start": "330877",
    "end": "333520"
  },
  {
    "text": "So, it's going to realize that",
    "start": "333520",
    "end": "335220"
  },
  {
    "text": "we need a couple of deployments and the pods.",
    "start": "335220",
    "end": "343520"
  },
  {
    "text": "Now, this is a kind of a format, or an approach",
    "start": "343520",
    "end": "348379"
  },
  {
    "text": "to managing applications",
    "start": "348380",
    "end": "349700"
  },
  {
    "text": "that's inherently easier - and scales better - than this approach,",
    "start": "349700",
    "end": "353600"
  },
  {
    "text": "because, as an end-user, you really only have to worry about",
    "start": "353600",
    "end": "357060"
  },
  {
    "text": "the config that's been exposed to you,",
    "start": "357070",
    "end": "359280"
  },
  {
    "text": "and the operator itself manages the control  loop",
    "start": "359280",
    "end": "361860"
  },
  {
    "text": "and the state of the application - how it needs to look.",
    "start": "361860",
    "end": "364419"
  },
  {
    "text": "Now, there are great operators out there already,",
    "start": "364420",
    "end": "367560"
  },
  {
    "text": "things like managing etcd, or various databases,",
    "start": "367560",
    "end": "371220"
  },
  {
    "text": "or even IBM Cloud Services.",
    "start": "371220",
    "end": "373040"
  },
  {
    "text": "So, all of those operators currently exist on OperatorHub.",
    "start": "373040",
    "end": "376320"
  },
  {
    "text": "But say you want to develop your own, maybe a custom operator for",
    "start": "376320",
    "end": "380280"
  },
  {
    "text": "for something that is native to your application architecture,",
    "start": "380280",
    "end": "384240"
  },
  {
    "text": "kind of like what we sketched out here.",
    "start": "384240",
    "end": "386919"
  },
  {
    "text": "Well, there's a number of ways you can do that.",
    "start": "386920",
    "end": "388780"
  },
  {
    "text": "And there's something called Operator SDK that allows you",
    "start": "388780",
    "end": "391860"
  },
  {
    "text": "to start building out operators yourself.",
    "start": "391860",
    "end": "394240"
  },
  {
    "text": "Now, I'd say the easiest way to get started with an operator,",
    "start": "394240",
    "end": "397199"
  },
  {
    "text": "is to use the Helm operator.",
    "start": "397200",
    "end": "399080"
  },
  {
    "text": "So, Helm.",
    "start": "399080",
    "end": "401840"
  },
  {
    "text": "As you may already know,",
    "start": "401840",
    "end": "403280"
  },
  {
    "text": "there is a video that where David Okun goes over exactly how Helm works.",
    "start": "403280",
    "end": "407480"
  },
  {
    "text": "Be sure to check that one out.",
    "start": "407480",
    "end": "408880"
  },
  {
    "text": "The Helm approach allows you to take a Helm chart",
    "start": "408880",
    "end": "412200"
  },
  {
    "text": "and apply that towards an operator, expose config -",
    "start": "412200",
    "end": "415440"
  },
  {
    "text": "so, it allows you to get to a fairly mature level of an operator.",
    "start": "415440",
    "end": "419860"
  },
  {
    "text": "Kind of something like this for a chart that's already there.",
    "start": "419860",
    "end": "423479"
  },
  {
    "start": "423000",
    "end": "574000"
  },
  {
    "text": "Now the maturity of operators, what I've sketched out down here,",
    "start": "423480",
    "end": "427180"
  },
  {
    "text": "falls into 5 different levels.",
    "start": "427180",
    "end": "428979"
  },
  {
    "text": "Now, Helm actually hits the first 2 levels of maturity.",
    "start": "428980",
    "end": "434060"
  },
  {
    "text": "Let's talk about what  those levels are.",
    "start": "434060",
    "end": "436080"
  },
  {
    "text": "The first one is a basic install.",
    "start": "436080",
    "end": "441699"
  },
  {
    "text": "Essentially, the first level is basically going to allow you to do",
    "start": "441700",
    "end": "445020"
  },
  {
    "text": "just provisioning of the resources  required.",
    "start": "445020",
    "end": "447819"
  },
  {
    "text": "Now, the second phase goes a little bit further",
    "start": "447820",
    "end": "451900"
  },
  {
    "text": "it's gonna allow you to do upgrades.",
    "start": "451900",
    "end": "454520"
  },
  {
    "text": "So, this supports minor and patch version upgrades",
    "start": "454520",
    "end": "457680"
  },
  {
    "text": "to whatever is defined in your operator.",
    "start": "457680",
    "end": "459919"
  },
  {
    "text": "Now Helm gets you that far,",
    "start": "459920",
    "end": "461640"
  },
  {
    "text": "what about for the next 3 levels of maturity?",
    "start": "461640",
    "end": "464980"
  },
  {
    "text": "For these, you're going want to use either Go,",
    "start": "464980",
    "end": "469180"
  },
  {
    "text": "or, you can also use Ansible.",
    "start": "469180",
    "end": "473580"
  },
  {
    "text": "Now, these will allow you to actually get to",
    "start": "473580",
    "end": "477680"
  },
  {
    "text": "all 5 levels of maturity with operators.",
    "start": "477680",
    "end": "482320"
  },
  {
    "text": "Let's quickly talk about what those are.",
    "start": "482320",
    "end": "485120"
  },
  {
    "text": "At the third level, we've got full lifecycle support.",
    "start": "485120",
    "end": "489688"
  },
  {
    "text": "So, this is storage lifecycle, app lifecycle.",
    "start": "489688",
    "end": "493220"
  },
  {
    "text": "It's also going to allow you to do things like backup and failure recovery.",
    "start": "493220",
    "end": "496540"
  },
  {
    "text": "So, that's something that would be configured",
    "start": "496540",
    "end": "499160"
  },
  {
    "text": "and developed into the operator,",
    "start": "499160",
    "end": "501340"
  },
  {
    "text": "who ever developed that one.",
    "start": "501340",
    "end": "504860"
  },
  {
    "text": "Fourth, what we've got here is insights.",
    "start": "504860",
    "end": "511280"
  },
  {
    "text": "This is going to allow you to get deep metrics, and analysis,",
    "start": "511280",
    "end": "514140"
  },
  {
    "text": "logging, that kind of thing, from your actual operator.",
    "start": "514140",
    "end": "517640"
  },
  {
    "text": "And finally, what we have is something called \"autopilot\".",
    "start": "517640",
    "end": "521620"
  },
  {
    "text": "And just as the name implies,",
    "start": "521620",
    "end": "524039"
  },
  {
    "text": "this is going to have a lot more functionality built into operator itself.",
    "start": "524040",
    "end": "528459"
  },
  {
    "text": "Basically it's going to allow you to do automatic scaling,",
    "start": "528460",
    "end": "530900"
  },
  {
    "text": "- horizontal and vertically.",
    "start": "530900",
    "end": "532450"
  },
  {
    "text": "It's going to do automatic config tuning.",
    "start": "532450",
    "end": "534200"
  },
  {
    "text": "If your operator-based app gets into a bad state,",
    "start": "534200",
    "end": "537880"
  },
  {
    "text": "it's gonna identify that automatically.",
    "start": "537880",
    "end": "540820"
  },
  {
    "text": "So, these are the 5 levels of maturity that operators can have.",
    "start": "540820",
    "end": "544600"
  },
  {
    "text": "By looking on OperatorHub, you can see",
    "start": "544600",
    "end": "546959"
  },
  {
    "text": "the ones that the community has developed",
    "start": "546960",
    "end": "548740"
  },
  {
    "text": "and see what level of maturity that they hit,",
    "start": "548740",
    "end": "550880"
  },
  {
    "text": "and then, again, by using operator SDK,",
    "start": "550880",
    "end": "553760"
  },
  {
    "text": "you can build your own operators using either Helm, Go, or Ansible.",
    "start": "553760",
    "end": "559260"
  },
  {
    "text": "Thanks for joining me for this  video on operators.",
    "start": "559260",
    "end": "561920"
  },
  {
    "text": "If you have any questions be sure to drop us a line  below.",
    "start": "561920",
    "end": "564839"
  },
  {
    "text": "If you want to see more videos like this in the future,",
    "start": "564840",
    "end": "567020"
  },
  {
    "text": "please \"like' and subscribe.",
    "start": "567020",
    "end": "568340"
  },
  {
    "text": "And don't forget, you can always get started on the cloud at no cost",
    "start": "568340",
    "end": "572020"
  },
  {
    "text": "by signing up for a free IBM Cloud account.",
    "start": "572020",
    "end": "576240"
  }
]