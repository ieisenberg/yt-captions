[
  {
    "text": "Welcome to \"Lessons Learned,\" a series where we share our  ",
    "start": "0",
    "end": "3540"
  },
  {
    "text": "biggest mistakes so you don't make the same ones. Today's lessons come from my days as a  ",
    "start": "3540",
    "end": "8219"
  },
  {
    "text": "developer on operating systems. A test team had reported a problem where one of the views that  ",
    "start": "8220",
    "end": "17580"
  },
  {
    "text": "would show a consolidated view of different resources was inconsistent. For example,  ",
    "start": "17580",
    "end": "24000"
  },
  {
    "text": "the network drive would say there are three items. A file system driver say there's six and  ",
    "start": "24000",
    "end": "29580"
  },
  {
    "text": "a CD would say there's one. But the consolidated view of that would say there was only eight.  ",
    "start": "29580",
    "end": "34620"
  },
  {
    "text": "But no one could reproduce this on demand; it was semi-random. And so I decided to first try  ",
    "start": "35520",
    "end": "43980"
  },
  {
    "text": "finding the problem via code inspection. So I looked at the code that was related to this,  ",
    "start": "43980",
    "end": "47880"
  },
  {
    "text": "looking for logic flaws. And I'd submit a fix, but invariably a day or two later that would  ",
    "start": "47880",
    "end": "54420"
  },
  {
    "text": "be rejected. And this pattern repeated literally for three weeks-- of apply a fix, get it rejected,  ",
    "start": "54420",
    "end": "60000"
  },
  {
    "text": "apply a fix, get it rejected. Finally, a tester contacted me and says \"Dan, I've got in the lab right  ",
    "start": "60000",
    "end": "66660"
  },
  {
    "text": "now a system which is in the state that we've been trying to isolate. You should come take a look.\" ",
    "start": "66660",
    "end": "71820"
  },
  {
    "text": "And so I come there and I'm using a kernel level debugger to look at the state of  ",
    "start": "71820",
    "end": "76200"
  },
  {
    "text": "the machine because I found that regular debuggers would actually perturb the result.  ",
    "start": "76200",
    "end": "80159"
  },
  {
    "text": "And finally, after hours of debugging, I found the problem was as simple as this: ",
    "start": "81060",
    "end": "87003"
  },
  {
    "text": "while (x < n)",
    "start": "87003",
    "end": "91020"
  },
  {
    "text": "A statement like this should have been less than or equal.  ",
    "start": "91020",
    "end": "93899"
  },
  {
    "text": "So that one character cost me essentially three weeks of debugging.  ",
    "start": "94620",
    "end": "99420"
  },
  {
    "text": "So what lessons did I learned from that? The first one I learned is that code inspections  ",
    "start": "100080",
    "end": "107880"
  },
  {
    "text": "have their limits. It's a really good approach initially when you're just trying to look at the  ",
    "start": "109380",
    "end": "115259"
  },
  {
    "text": "initial problem and maybe you're not familiar with the code. But the juice from that is not  ",
    "start": "115260",
    "end": "120420"
  },
  {
    "text": "worth the squeeze very quickly. The second is bounds. And this might seem like a \"programmer  101\"",
    "start": "120420",
    "end": "130584"
  },
  {
    "text": "sort of issue, but you should have better bounds testing, especially around the beginning  ",
    "start": "130585",
    "end": "137700"
  },
  {
    "text": "and end of a limit. So test here, here, here and here. Of course you need test elsewhere, but those  ",
    "start": "137700",
    "end": "144420"
  },
  {
    "text": "boundary conditions are the ones that invariably cause problems. The other lesson I learned is, is  ",
    "start": "144420",
    "end": "150959"
  },
  {
    "text": "that the expectation that you can have a problem on demand simply is just not very realistic.  ",
    "start": "150960",
    "end": "158700"
  },
  {
    "text": "It starts because people want to use debug tools that are most effective for solving problems.  ",
    "start": "159240",
    "end": "166080"
  },
  {
    "text": "But in a production environment, the debug tools that you use during your initial unit  ",
    "start": "166740",
    "end": "171300"
  },
  {
    "text": "testing don't really carry over well. On the other hand, logs, whether you're use it during  ",
    "start": "171300",
    "end": "180600"
  },
  {
    "text": "development time or production time, provide you key information that can help you solve a problem.  ",
    "start": "180600",
    "end": "187140"
  },
  {
    "text": "Another thing that I learned is that when you're doing debugging that involves  ",
    "start": "188460",
    "end": "193920"
  },
  {
    "text": "asynchronous processes, you really need to focus on your load testing. Because it's asynchronous,  ",
    "start": "193920",
    "end": "202680"
  },
  {
    "text": "that means that the load is going to affect what you're seeing as a result, which makes it more  ",
    "start": "202680",
    "end": "208799"
  },
  {
    "text": "likely that you're going to have problems. So you should do load testing not just by people using  ",
    "start": "208800",
    "end": "213600"
  },
  {
    "text": "the system, but creating test cases that drive the system at different load levels at different times.  ",
    "start": "213600",
    "end": "218820"
  },
  {
    "text": "And finally, and probably one of the most important lessons I learned,  ",
    "start": "219540",
    "end": "222840"
  },
  {
    "text": "is that the test and the developer team need to work closely. In fact, what I recommend is, is  ",
    "start": "223500",
    "end": "230580"
  },
  {
    "text": "that they be on the same team or at a minimum that you do a tour of duty in each other's role. So  ",
    "start": "230580",
    "end": "236760"
  },
  {
    "text": "that way you can learn from one of these lessons and not have to suffer like I did.",
    "start": "236760",
    "end": "242433"
  }
]