[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "Hi everyone, my name is Sai Vennam,",
    "start": "520",
    "end": "2120"
  },
  {
    "text": "and I'm a Developer Advocate with IBM.",
    "start": "2120",
    "end": "4740"
  },
  {
    "text": "Here at IBM, we're always enabling developers",
    "start": "4740",
    "end": "7380"
  },
  {
    "text": "to be able to use the latest and greatest technologies",
    "start": "7380",
    "end": "9880"
  },
  {
    "text": "when developing their applications.",
    "start": "9880",
    "end": "12140"
  },
  {
    "start": "12000",
    "end": "70000"
  },
  {
    "text": "But a question I almost always seem to be running into",
    "start": "12140",
    "end": "15000"
  },
  {
    "text": "is whether or not you should use Docker vs. Kubernetes.",
    "start": "15000",
    "end": "19619"
  },
  {
    "text": "I think there's a small misconception out there",
    "start": "19620",
    "end": "21880"
  },
  {
    "text": "that you have to be using one or the other.",
    "start": "21880",
    "end": "24060"
  },
  {
    "text": "But the fact is that",
    "start": "24060",
    "end": "25217"
  },
  {
    "text": "Kubernetes allows you to use your existing Docker containers and workloads",
    "start": "25217",
    "end": "29500"
  },
  {
    "text": "but allows you to tackle some of the complexity issues you run into",
    "start": "29500",
    "end": "32880"
  },
  {
    "text": "when moving to scale.",
    "start": "32880",
    "end": "34840"
  },
  {
    "text": "To better answer this question,",
    "start": "34840",
    "end": "36720"
  },
  {
    "text": "let's start with a simple cloud native-application",
    "start": "36720",
    "end": "40080"
  },
  {
    "text": "sketched out up here",
    "start": "40080",
    "end": "42060"
  },
  {
    "text": "and let's just say that the front end",
    "start": "42060",
    "end": "45080"
  },
  {
    "text": "of this application is something that we wrote with React,",
    "start": "45080",
    "end": "50360"
  },
  {
    "text": "backed by Node.js.",
    "start": "50360",
    "end": "53440"
  },
  {
    "text": "We'll say that this database access application",
    "start": "53440",
    "end": "56399"
  },
  {
    "text": "- I'm a fan of using Java for database access - so, we'll say",
    "start": "56400",
    "end": "59900"
  },
  {
    "text": "Java up here.",
    "start": "59900",
    "end": "61240"
  },
  {
    "text": "And for accessing external APIs, maybe we use Python,",
    "start": "61240",
    "end": "64860"
  },
  {
    "text": "on maybe a Flask application",
    "start": "64860",
    "end": "67520"
  },
  {
    "text": "that allows us to serve REST endpoints.",
    "start": "67520",
    "end": "70420"
  },
  {
    "start": "70000",
    "end": "154000"
  },
  {
    "text": "Now, putting on my hat as a Docker operations engineer",
    "start": "70420",
    "end": "73868"
  },
  {
    "text": "using a purely Docker approach to deploying an application,",
    "start": "73869",
    "end": "77940"
  },
  {
    "text": "let's take this application",
    "start": "77940",
    "end": "79580"
  },
  {
    "text": "and move over to a sample server stack",
    "start": "79580",
    "end": "81840"
  },
  {
    "text": "that we have sketched out over here.",
    "start": "81840",
    "end": "84280"
  },
  {
    "text": "On every server stack, you're going have the basics, right?",
    "start": "84280",
    "end": "87080"
  },
  {
    "text": "So, we'll have the hardware.",
    "start": "87080",
    "end": "91080"
  },
  {
    "text": "We'll have the OS,",
    "start": "91080",
    "end": "92980"
  },
  {
    "text": "which is generally going to be Ubuntu when you're working with Docker.",
    "start": "92980",
    "end": "96920"
  },
  {
    "text": "And we'll have the Docker daemon installed on top of that OS",
    "start": "96920",
    "end": "100460"
  },
  {
    "text": "- that's what allows us to spin up containers.",
    "start": "100460",
    "end": "103040"
  },
  {
    "text": "So, Docker actually provides us with a number of great tools",
    "start": "103040",
    "end": "106000"
  },
  {
    "text": "for working with our containerized applications.",
    "start": "106000",
    "end": "109140"
  },
  {
    "text": "Once we take these applications,",
    "start": "109140",
    "end": "110840"
  },
  {
    "text": "create new Docker containers out of them",
    "start": "110840",
    "end": "112840"
  },
  {
    "text": "- we'll do Docker build, Docker push up to a registry",
    "start": "112840",
    "end": "116219"
  },
  {
    "text": "- and then SSH into our stack",
    "start": "116220",
    "end": "118180"
  },
  {
    "text": "and do Docker \"run\" commands or even use Docker Compose",
    "start": "118180",
    "end": "121440"
  },
  {
    "text": "to spin up our containers.",
    "start": "121440",
    "end": "123480"
  },
  {
    "text": "So, let's take a look at what that would look like.",
    "start": "123480",
    "end": "126060"
  },
  {
    "text": "We've got our .js application,",
    "start": "126060",
    "end": "128599"
  },
  {
    "text": "we've got our Java application,",
    "start": "128600",
    "end": "131800"
  },
  {
    "text": "as well as the Python application.",
    "start": "131800",
    "end": "135440"
  },
  {
    "text": "And let's go ahead and scale out these individual pieces as well",
    "start": "135440",
    "end": "139240"
  },
  {
    "text": "to take advantage of all the resources we have.",
    "start": "139240",
    "end": "142820"
  },
  {
    "text": "So, we'll scale them out.",
    "start": "142820",
    "end": "145560"
  },
  {
    "text": "And we can do this as many times as we want,",
    "start": "145560",
    "end": "147640"
  },
  {
    "text": "but let's assume that we scale them out twice for now",
    "start": "147640",
    "end": "150180"
  },
  {
    "text": "to make effective use of all the resources that we have available.",
    "start": "150180",
    "end": "154280"
  },
  {
    "start": "154000",
    "end": "218000"
  },
  {
    "text": "So, using Docker and the tools that Docker makes available,",
    "start": "154280",
    "end": "157480"
  },
  {
    "text": "a simple deployment is very easy.",
    "start": "157480",
    "end": "160300"
  },
  {
    "text": "But, let's imagine that our application starts to get a lot more load",
    "start": "160300",
    "end": "163420"
  },
  {
    "text": "- a lot more people are hitting it, and we realize we need to scale out",
    "start": "163420",
    "end": "166640"
  },
  {
    "text": "to be able to provide a better user experience.",
    "start": "166640",
    "end": "169460"
  },
  {
    "text": "So, as an Operations engineer, my first instinct might be:",
    "start": "169460",
    "end": "171640"
  },
  {
    "text": "\"Hey, I've already got scripts to make this stack,",
    "start": "171640",
    "end": "174140"
  },
  {
    "text": "let's just simply get new hardware",
    "start": "174140",
    "end": "178420"
  },
  {
    "text": "and do that exact same deployment multiple times.\"",
    "start": "178420",
    "end": "182599"
  },
  {
    "text": "This can fall apart for many reasons",
    "start": "182600",
    "end": "184860"
  },
  {
    "text": "when you start moving to scale.",
    "start": "184860",
    "end": "186640"
  },
  {
    "text": "For example, what if your Development team",
    "start": "186640",
    "end": "188340"
  },
  {
    "text": "has to create a new microservice to support a new requirement.",
    "start": "188340",
    "end": "191920"
  },
  {
    "text": "Where do we piece those in,",
    "start": "191920",
    "end": "193340"
  },
  {
    "text": "especially if you already have effective use of the hardware?",
    "start": "193340",
    "end": "196879"
  },
  {
    "text": "The Operations engineer would have to find that out.",
    "start": "196880",
    "end": "199380"
  },
  {
    "text": "And, in addition,",
    "start": "199380",
    "end": "200860"
  },
  {
    "text": "a big advantage of microservice-based applications",
    "start": "200860",
    "end": "203120"
  },
  {
    "text": "is being able to scale out individual components individually,",
    "start": "203120",
    "end": "206159"
  },
  {
    "text": "so that's another thing that the Operations engineer",
    "start": "206160",
    "end": "208800"
  },
  {
    "text": "would have to write scripts for",
    "start": "208800",
    "end": "210260"
  },
  {
    "text": "and find the most effective way to scale things out in response to load",
    "start": "210260",
    "end": "214019"
  },
  {
    "text": "to identify and address",
    "start": "214020",
    "end": "215680"
  },
  {
    "text": "user experience issues when moving to scale.",
    "start": "215680",
    "end": "218700"
  },
  {
    "start": "218000",
    "end": "265000"
  },
  {
    "text": "So, this is where an orchestration tool comes in.",
    "start": "218700",
    "end": "221120"
  },
  {
    "text": "Something like Kubernetes,",
    "start": "221120",
    "end": "222940"
  },
  {
    "text": "which is going to allow you to use your existing Dockerized applications",
    "start": "222940",
    "end": "226940"
  },
  {
    "text": "but orchestrate them",
    "start": "226940",
    "end": "228340"
  },
  {
    "text": "and make more effective use of your servers and space.",
    "start": "228340",
    "end": "232080"
  },
  {
    "text": "So, what we have sketched out down here",
    "start": "232080",
    "end": "233840"
  },
  {
    "text": "is a number of boxes",
    "start": "233840",
    "end": "235300"
  },
  {
    "text": "which represent a server stack;",
    "start": "235300",
    "end": "237860"
  },
  {
    "text": "but in the Kubernetes land, we call them worker nodes.",
    "start": "237860",
    "end": "241340"
  },
  {
    "text": "So, we're going to have Kubernetes installed",
    "start": "241340",
    "end": "243480"
  },
  {
    "text": "on every single one of these worker nodes,",
    "start": "243480",
    "end": "247080"
  },
  {
    "text": "and the main one is going to be the master node",
    "start": "247080",
    "end": "249640"
  },
  {
    "text": "(whereas the other ones are workers).",
    "start": "249640",
    "end": "251480"
  },
  {
    "text": "This master node is actually connected to all the worker nodes and decides",
    "start": "251480",
    "end": "255180"
  },
  {
    "text": "where to host our applications (our Docker containers),",
    "start": "255180",
    "end": "259000"
  },
  {
    "text": "how to piece them together,",
    "start": "259000",
    "end": "260299"
  },
  {
    "text": "and even manages orchestrating them",
    "start": "260300",
    "end": "262379"
  },
  {
    "text": "- starting, stopping, updates, that kind of thing.",
    "start": "262380",
    "end": "265280"
  },
  {
    "start": "265000",
    "end": "407000"
  },
  {
    "text": "I'd say there are 3 major advantages that Kubernetes provides",
    "start": "265280",
    "end": "268400"
  },
  {
    "text": "that I want to walk through:",
    "start": "268400",
    "end": "269639"
  },
  {
    "text": "deployment, making development easier,",
    "start": "269640",
    "end": "272260"
  },
  {
    "text": "and providing monitoring tools.",
    "start": "272260",
    "end": "274100"
  },
  {
    "text": "The first step, as expected, is going to be deployment.",
    "start": "274100",
    "end": "276920"
  },
  {
    "text": "So, coming back to our application architecture",
    "start": "276920",
    "end": "279940"
  },
  {
    "text": "- let's say we want to deploy that React application about 8 times.",
    "start": "279940",
    "end": "283360"
  },
  {
    "text": "So, we'll say we want 8 instances.",
    "start": "283360",
    "end": "286159"
  },
  {
    "text": "Each of them, let's say, we expect to consume about 128 MB,",
    "start": "286160",
    "end": "290520"
  },
  {
    "text": "and then we can actually specify some other parameters in there as well;",
    "start": "290520",
    "end": "293960"
  },
  {
    "text": "policies like: when to restart, that kind of thing.",
    "start": "293960",
    "end": "297060"
  },
  {
    "text": "And when we box that up,",
    "start": "297060",
    "end": "299000"
  },
  {
    "text": "what we get is a Kubernetes deployment.",
    "start": "299000",
    "end": "308580"
  },
  {
    "text": "A Kubernetes deployment is not a one-time thing,",
    "start": "308580",
    "end": "311720"
  },
  {
    "text": "but it's something that grows and lives and breathes",
    "start": "311720",
    "end": "314220"
  },
  {
    "text": "with the application and our full stack.",
    "start": "314220",
    "end": "317080"
  },
  {
    "text": "So, for example, if the React application happens to crash,",
    "start": "317080",
    "end": "320199"
  },
  {
    "text": "Kubernetes will automatically restart it",
    "start": "320200",
    "end": "322440"
  },
  {
    "text": "to get back to that state that we've identified",
    "start": "322440",
    "end": "325140"
  },
  {
    "text": "when we first created that deployment.",
    "start": "325140",
    "end": "327180"
  },
  {
    "text": "A deployment is always growing and always living with our application.",
    "start": "327180",
    "end": "331740"
  },
  {
    "text": "So, I think we can effectively say that",
    "start": "331740",
    "end": "334319"
  },
  {
    "text": "it's made deployment - in addition to scaling - easier.",
    "start": "334320",
    "end": "337600"
  },
  {
    "text": "Let's talk about development.",
    "start": "337600",
    "end": "339420"
  },
  {
    "text": "You might be wondering,",
    "start": "339420",
    "end": "340669"
  },
  {
    "text": "once we've created the deployments for each of these individual services",
    "start": "340669",
    "end": "344580"
  },
  {
    "text": "and scaled all of them out,",
    "start": "344580",
    "end": "347000"
  },
  {
    "text": "we have lots of different microservices out there with different endpoints.",
    "start": "347000",
    "end": "351080"
  },
  {
    "text": "For example, if our frontend needs to access the database,",
    "start": "351080",
    "end": "354060"
  },
  {
    "text": "there might be 8 different versions of that Java application",
    "start": "354060",
    "end": "358480"
  },
  {
    "text": "that talk to that database,",
    "start": "358480",
    "end": "360640"
  },
  {
    "text": "we have to talk to one of them to get our request fulfilled, right?",
    "start": "360640",
    "end": "364600"
  },
  {
    "text": "So, what Kubernetes does is",
    "start": "364600",
    "end": "366460"
  },
  {
    "text": "deploy load balancers",
    "start": "366460",
    "end": "368080"
  },
  {
    "text": "for all of our microservices that we scaled out,",
    "start": "368080",
    "end": "370800"
  },
  {
    "text": "and in addition, takes advantage of",
    "start": "370800",
    "end": "373479"
  },
  {
    "text": "service registry and discovery capabilities",
    "start": "373480",
    "end": "375960"
  },
  {
    "text": "to allow our applications talk to each other",
    "start": "375960",
    "end": "378520"
  },
  {
    "text": "using something called a Kubernetes service.",
    "start": "378520",
    "end": "381500"
  },
  {
    "text": "So, for each of these, Kubernetes will also create a service,",
    "start": "381500",
    "end": "385360"
  },
  {
    "text": "which we can simply label \"Service A\", \"B\", and \"C\".",
    "start": "385360",
    "end": "392560"
  },
  {
    "text": "Obviously, you can have more meaningful names for those as well,",
    "start": "392560",
    "end": "395560"
  },
  {
    "text": "but very simply, these applications can now speak to each other",
    "start": "395560",
    "end": "399820"
  },
  {
    "text": "just by using the service names that are laid out in Kubernetes.",
    "start": "399820",
    "end": "403740"
  },
  {
    "text": "So, essentially, I can say that Kubernetes has made development easier.",
    "start": "403740",
    "end": "407680"
  },
  {
    "start": "407000",
    "end": "483000"
  },
  {
    "text": "And the last thing I want to touch on is monitoring.",
    "start": "407680",
    "end": "410380"
  },
  {
    "text": "Kubernetes has a lot of built-in capabilities",
    "start": "410380",
    "end": "412820"
  },
  {
    "text": "to allow you to see logs,",
    "start": "412830",
    "end": "415259"
  },
  {
    "text": "see CPU load, all in their neat UI.",
    "start": "415260",
    "end": "418380"
  },
  {
    "text": "But the fact is that",
    "start": "418380",
    "end": "420080"
  },
  {
    "text": "there is sometimes more that you want to see with your application,",
    "start": "420080",
    "end": "423639"
  },
  {
    "text": "and the open source community out there",
    "start": "423640",
    "end": "425100"
  },
  {
    "text": "has developed a number of amazing tools",
    "start": "425100",
    "end": "427380"
  },
  {
    "text": "to give you introspection into your running application.",
    "start": "427380",
    "end": "430380"
  },
  {
    "text": "The main one I'm thinking about right now is Istio",
    "start": "430380",
    "end": "433960"
  },
  {
    "text": "- and although that's a little bit more of an advanced topic,",
    "start": "433960",
    "end": "436060"
  },
  {
    "text": "we will likely hit that in a future whiteboarding session.",
    "start": "436060",
    "end": "440080"
  },
  {
    "text": "So, back to our main topic:",
    "start": "440080",
    "end": "442720"
  },
  {
    "text": "using Kubernetes vs. Docker.",
    "start": "442720",
    "end": "445260"
  },
  {
    "text": "It's definitely not a choice of using one or the other.",
    "start": "445260",
    "end": "447758"
  },
  {
    "text": "It's one of those things where Kubernetes",
    "start": "447758",
    "end": "449620"
  },
  {
    "text": "allows you to take advantage",
    "start": "449620",
    "end": "451438"
  },
  {
    "text": "of your existing Docker workloads",
    "start": "451438",
    "end": "453580"
  },
  {
    "text": "and run them at scale - tackle real complexities.",
    "start": "453580",
    "end": "456520"
  },
  {
    "text": "Kubernetes is great to get started with,",
    "start": "456520",
    "end": "458819"
  },
  {
    "text": "even if you're making a small application,",
    "start": "458820",
    "end": "460260"
  },
  {
    "text": "if you anticipate that one day you'll have to move to scale.",
    "start": "460260",
    "end": "463000"
  },
  {
    "text": "If you're already taking advantage of Docker",
    "start": "463000",
    "end": "465000"
  },
  {
    "text": "and containers with your applications,",
    "start": "465000",
    "end": "467120"
  },
  {
    "text": "moving them onto Kubernetes",
    "start": "467120",
    "end": "468740"
  },
  {
    "text": "can really help you tackle some of the operations overhead",
    "start": "468740",
    "end": "472220"
  },
  {
    "text": "that almost every application is going to run into",
    "start": "472220",
    "end": "475300"
  },
  {
    "text": "when moving to scale.",
    "start": "475300",
    "end": "476590"
  },
  {
    "text": "Thank you for joining me today.",
    "start": "476590",
    "end": "477460"
  },
  {
    "text": "I hope you find this useful,",
    "start": "477460",
    "end": "478860"
  },
  {
    "text": "and stay tuned for additional whiteboarding sessions in the future.",
    "start": "478860",
    "end": "482639"
  }
]