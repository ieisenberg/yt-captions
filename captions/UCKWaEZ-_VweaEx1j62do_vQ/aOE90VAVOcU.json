[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "Hi, my name's Adam Kocoloski with IBM Cloud",
    "start": "300",
    "end": "2780"
  },
  {
    "text": "and I'm here to talk to you today about Apache  CouchDB,",
    "start": "2780",
    "end": "5279"
  },
  {
    "text": "a database we depend on extensively within the IBM Cloud,",
    "start": "5280",
    "end": "8080"
  },
  {
    "text": "and one powers a lot of innovative, modern cloud-native applications.",
    "start": "8080",
    "end": "11900"
  },
  {
    "text": "The first thing you'll notice about CouchDB is the way it is built of the web.",
    "start": "11900",
    "end": "16139"
  },
  {
    "text": "Users make HTTP requests to the database",
    "start": "16140",
    "end": "19439"
  },
  {
    "text": "and the database responds with JSON payloads.",
    "start": "19440",
    "end": "22840"
  },
  {
    "text": "And developers tend to find this to be a really natural fit",
    "start": "22840",
    "end": "25560"
  },
  {
    "text": "in this era of microservices applications",
    "start": "25560",
    "end": "27420"
  },
  {
    "text": "where all of your apps functionality is itself being decomposed",
    "start": "27430",
    "end": "30200"
  },
  {
    "text": "into these different web services.",
    "start": "30200",
    "end": "32720"
  },
  {
    "start": "32000",
    "end": "61000"
  },
  {
    "text": "The other critical features about the database though",
    "start": "32720",
    "end": "35060"
  },
  {
    "text": "are under the covers, so to speak.",
    "start": "35060",
    "end": "37740"
  },
  {
    "text": "The database has a very durable storage engine,",
    "start": "37740",
    "end": "40540"
  },
  {
    "text": "something that was built from the ground up",
    "start": "40540",
    "end": "42380"
  },
  {
    "text": "for this kind of modern world of variable cloud infrastructure,",
    "start": "42380",
    "end": "46360"
  },
  {
    "text": "it's a crash-friendly design that always knows how to pick itself up back up and keep on moving.",
    "start": "46360",
    "end": "50460"
  },
  {
    "text": "It's also very reliable system.",
    "start": "50460",
    "end": "52140"
  },
  {
    "text": "CouchDB was developed in a programming language called  Erlang",
    "start": "52140",
    "end": "55800"
  },
  {
    "text": "that hails from the telecommunications industry",
    "start": "55800",
    "end": "57480"
  },
  {
    "text": "and benefits from its decades of  experience",
    "start": "57480",
    "end": "59540"
  },
  {
    "text": "running production telephony switches.",
    "start": "59540",
    "end": "62220"
  },
  {
    "start": "61000",
    "end": "94000"
  },
  {
    "text": "And finally, couch is a noSQL database,",
    "start": "62220",
    "end": "65260"
  },
  {
    "text": "it's a non-relational database and",
    "start": "65260",
    "end": "67760"
  },
  {
    "text": "that means that it makes some trade-offs.",
    "start": "67760",
    "end": "70120"
  },
  {
    "text": "You have to think about how to model your data",
    "start": "70120",
    "end": "72600"
  },
  {
    "text": "in JSON document form",
    "start": "72600",
    "end": "75520"
  },
  {
    "text": "and you have to have a pretty good understanding of the kind of queries",
    "start": "75520",
    "end": "77659"
  },
  {
    "text": "you want to make of the database",
    "start": "77660",
    "end": "79020"
  },
  {
    "text": "so that you can design the right you know views and indexes",
    "start": "79020",
    "end": "81329"
  },
  {
    "text": "to support those queries.",
    "start": "81330",
    "end": "82620"
  },
  {
    "text": "But if you do, in exchange for that",
    "start": "82620",
    "end": "84700"
  },
  {
    "text": "you get scalability.",
    "start": "84700",
    "end": "85840"
  },
  {
    "text": "You get predictable, reliable performance of the application",
    "start": "85840",
    "end": "89380"
  },
  {
    "text": "as the data volume grows",
    "start": "89380",
    "end": "90756"
  },
  {
    "text": "and as the number of users of your application increase.",
    "start": "90760",
    "end": "94300"
  },
  {
    "start": "94000",
    "end": "117000"
  },
  {
    "text": "But really the killer feature about CouchDB",
    "start": "94300",
    "end": "96840"
  },
  {
    "text": "is its synchronization capabilities.",
    "start": "96840",
    "end": "98719"
  },
  {
    "text": "Let's say you started building your cloud application over here in U.S. West,",
    "start": "98720",
    "end": "102200"
  },
  {
    "text": "and you have decided that you need to add a disaster recovery site.",
    "start": "102200",
    "end": "106409"
  },
  {
    "text": "So, you can, at any point in time,",
    "start": "106410",
    "end": "108620"
  },
  {
    "text": "replicate the data from U.S. West over here to U.S. East.",
    "start": "108620",
    "end": "112720"
  },
  {
    "text": "And now you've got an always up-to-date copy of the data over here in this other cloud region.",
    "start": "112720",
    "end": "117420"
  },
  {
    "start": "117000",
    "end": "176000"
  },
  {
    "text": "But it doesn't stop there,",
    "start": "117420",
    "end": "118320"
  },
  {
    "text": "you can also choose to set up that replication in an active-active,",
    "start": "118320",
    "end": "122000"
  },
  {
    "text": "bidirectional fashion.",
    "start": "122000",
    "end": "123560"
  },
  {
    "text": "Now not only do you have another site for fault tolerance and high availability,",
    "start": "123560",
    "end": "127280"
  },
  {
    "text": "but you also have the ability to direct your users over on the East Coast",
    "start": "127280",
    "end": "130399"
  },
  {
    "text": "to the U. S. East region for lower latency.",
    "start": "130400",
    "end": "133040"
  },
  {
    "text": "But CouchDB doesn't stop there.",
    "start": "133040",
    "end": "135459"
  },
  {
    "text": "In fact, you can include any number of different other",
    "start": "135460",
    "end": "137960"
  },
  {
    "text": "databases in different locations",
    "start": "137960",
    "end": "139560"
  },
  {
    "text": "into a single replication mesh.",
    "start": "139560",
    "end": "141560"
  },
  {
    "text": "You could have on-premises systems,",
    "start": "141560",
    "end": "143760"
  },
  {
    "text": "you could have edge locations,",
    "start": "143760",
    "end": "146599"
  },
  {
    "text": "you could have databases running in other cloud providers.",
    "start": "146600",
    "end": "149520"
  },
  {
    "text": "And each of those is able to take",
    "start": "149520",
    "end": "151500"
  },
  {
    "text": "possibly a filtered subset of the data down from one of these regions,",
    "start": "151500",
    "end": "154760"
  },
  {
    "text": "make changes to it and push it back up.",
    "start": "154760",
    "end": "157299"
  },
  {
    "text": "That kind of flexibility is really without peer",
    "start": "157300",
    "end": "161460"
  },
  {
    "text": "in this world of cloud databases",
    "start": "161460",
    "end": "163640"
  },
  {
    "text": "and I think it's something that is particularly valuable in this hybrid cloud,",
    "start": "163640",
    "end": "166980"
  },
  {
    "text": "multicloud world in which we live today.",
    "start": "166980",
    "end": "169220"
  },
  {
    "text": "Thanks for watching this video.",
    "start": "169220",
    "end": "170620"
  },
  {
    "text": "If you have any questions, or comments please drop us a line.",
    "start": "170620",
    "end": "173180"
  },
  {
    "text": "If you enjoyed this content please \"like\" and subscribe.",
    "start": "173180",
    "end": "176939"
  }
]