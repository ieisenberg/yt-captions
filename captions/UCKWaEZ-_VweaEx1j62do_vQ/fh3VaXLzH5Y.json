[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "How can enterprises ensure",
    "start": "480",
    "end": "2628"
  },
  {
    "text": "that their APIs are consumable, secure, and managed?",
    "start": "2628",
    "end": "8197"
  },
  {
    "text": "My name is Whitney Lee.",
    "start": "8197",
    "end": "9561"
  },
  {
    "text": "I'm a cloud developer here at IBM.",
    "start": "9562",
    "end": "12320"
  },
  {
    "text": "Before I answer that question,",
    "start": "12320",
    "end": "14368"
  },
  {
    "text": "please go ahead and hit that subscribe button.",
    "start": "14369",
    "end": "18109"
  },
  {
    "text": "API management is the process of building,",
    "start": "18109",
    "end": "22327"
  },
  {
    "text": "publishing, and managing APIs",
    "start": "22327",
    "end": "24890"
  },
  {
    "text": "across an enterprise and multi-cloud setting.",
    "start": "24890",
    "end": "28261"
  },
  {
    "text": "More than just a place for these APIs to\nlive,",
    "start": "28261",
    "end": "31171"
  },
  {
    "text": "API management offers a centrally visible, scalable platform,",
    "start": "31172",
    "end": "35959"
  },
  {
    "text": "where enterprises can share and socialize their APIs",
    "start": "35959",
    "end": "39322"
  },
  {
    "text": "while ensuring controlling access,",
    "start": "39322",
    "end": "42906"
  },
  {
    "text": "collecting usage statistics,",
    "start": "42907",
    "end": "45151"
  },
  {
    "text": "and enforcing associated security policies.",
    "start": "45151",
    "end": "49670"
  },
  {
    "text": "So, what is an API?",
    "start": "49670",
    "end": "52271"
  },
  {
    "start": "50000",
    "end": "125000"
  },
  {
    "text": "A popular way to talk about what an API is is by using a restaurant metaphor.",
    "start": "52271",
    "end": "57179"
  },
  {
    "text": "So, let's think of a kitchen at a restaurant.",
    "start": "57179",
    "end": "60449"
  },
  {
    "text": "Now, there's a lot of complexity here.",
    "start": "60449",
    "end": "62786"
  },
  {
    "text": "There's what ingredients the kitchen uses?",
    "start": "62786",
    "end": "65117"
  },
  {
    "text": "Where\nthey source those ingredients?",
    "start": "65118",
    "end": "66754"
  },
  {
    "text": "The personnel? The equipment?",
    "start": "66754",
    "end": "69345"
  },
  {
    "text": "But as a diner, all you need to know is what is on the menu. ",
    "start": "69345",
    "end": "74312"
  },
  {
    "text": "So, in this analogy the kitchen would be an application or service,",
    "start": "74312",
    "end": "79265"
  },
  {
    "text": "and the menu would be an API definition.",
    "start": "79265",
    "end": "82558"
  },
  {
    "text": "And, once the diner knows what they want,",
    "start": "82807",
    "end": "85531"
  },
  {
    "text": "how do they communicate that?",
    "start": "85531",
    "end": "87456"
  },
  {
    "text": "Well, they do that through their waiter.",
    "start": "87456",
    "end": "89614"
  },
  {
    "text": "So, an API is like a waiter,",
    "start": "89614",
    "end": "91846"
  },
  {
    "text": "it's a way to interface with the application,",
    "start": "91846",
    "end": "94426"
  },
  {
    "text": "without understanding the complexity.",
    "start": "94426",
    "end": "96499"
  },
  {
    "text": "So, the user would make a request to the API,",
    "start": "96499",
    "end": "99780"
  },
  {
    "text": "some time would pass, and they would get what they asked for back.",
    "start": "99780",
    "end": "104612"
  },
  {
    "text": "Now where this analogy falls short",
    "start": "104612",
    "end": "106925"
  },
  {
    "text": "is that it is possible to supply information to an API.",
    "start": "106925",
    "end": "111023"
  },
  {
    "text": "So, imagine a restaurant where,",
    "start": "111023",
    "end": "113373"
  },
  {
    "text": "as a diner, you could supply some raw ingredients to your server,",
    "start": "113373",
    "end": "117357"
  },
  {
    "text": "and the server could use that in the kitchen",
    "start": "117357",
    "end": "119781"
  },
  {
    "text": "to affect what dish is coming back out to you.",
    "start": "119781",
    "end": "125794"
  },
  {
    "start": "125000",
    "end": "601000"
  },
  {
    "text": "So, let's talk about a retail application where APIs are used",
    "start": "125794",
    "end": "129243"
  },
  {
    "text": "to kind of give a sense of how they're used in microservices.",
    "start": "129243",
    "end": "134000"
  },
  {
    "text": "So, let's consider a contact information database,",
    "start": "134000",
    "end": "140314"
  },
  {
    "text": "and then that is going to expose information through an API,",
    "start": "140314",
    "end": "145280"
  },
  {
    "text": "and maybe there's an inventory database,",
    "start": "145280",
    "end": "148934"
  },
  {
    "text": "and these are backend services,",
    "start": "148934",
    "end": "153411"
  },
  {
    "text": "and then for front end, let's say we have a shopping cart,",
    "start": "153411",
    "end": "158677"
  },
  {
    "text": "and that will use our inventory, but not necessarily a contact information API.",
    "start": "158677",
    "end": "164658"
  },
  {
    "text": "Let's have a check out which will need both,",
    "start": "164658",
    "end": "170328"
  },
  {
    "text": "and then finally let's do reviews,",
    "start": "170328",
    "end": "174399"
  },
  {
    "text": "which might only need contact information,",
    "start": "174399",
    "end": "177432"
  },
  {
    "text": "not necessarily inventory.",
    "start": "177432",
    "end": "180540"
  },
  {
    "text": "So, these are consuming information from our backend services,",
    "start": "180540",
    "end": "185138"
  },
  {
    "text": "transforming it, and then exposing those results through their own APIs,",
    "start": "185138",
    "end": "190652"
  },
  {
    "text": "and these APIs up top are exposed to the public.",
    "start": "190652",
    "end": "196079"
  },
  {
    "text": "So, it's possible, too, to expose your backend service to the public",
    "start": "196080",
    "end": "203864"
  },
  {
    "text": "if you want with its own API.",
    "start": "203864",
    "end": "205964"
  },
  {
    "text": "So, if you wanted to create an API that lets your",
    "start": "205964",
    "end": "211332"
  },
  {
    "text": "users change their contact information directly, you can definitely do that.",
    "start": "211332",
    "end": "217465"
  },
  {
    "text": "So, an API management system,",
    "start": "217465",
    "end": "220953"
  },
  {
    "text": "how is that going to improve upon what's already happening here?",
    "start": "220953",
    "end": "225488"
  },
  {
    "text": "So, there are 4 core elements of an API management system.",
    "start": "225488",
    "end": "228855"
  },
  {
    "text": "So, the first one is going to be the gateway.",
    "start": "228855",
    "end": "233297"
  },
  {
    "text": "So, the gateway sits between the web client",
    "start": "233862",
    "end": "240050"
  },
  {
    "text": "and the systems and services that it's connected to.",
    "start": "240133",
    "end": "244793"
  },
  {
    "text": "So, the gateway is going to handle all routing requests.",
    "start": "244992",
    "end": "250000"
  },
  {
    "text": "It handles a data composition and protocol transformations.",
    "start": "250000",
    "end": "256155"
  },
  {
    "text": "In addition to that, the gateway handles security authentication and authorization,",
    "start": "256155",
    "end": "261245"
  },
  {
    "text": "and it can use state-of-the-art security like OAuth, OpenID, JWT.",
    "start": "261245",
    "end": "266810"
  },
  {
    "text": "The gateway also handles data aggregation,",
    "start": "266810",
    "end": "270087"
  },
  {
    "text": "so it receives one request from the web client",
    "start": "270087",
    "end": "272496"
  },
  {
    "text": "that may involve multiple services,",
    "start": "272496",
    "end": "274721"
  },
  {
    "text": "but then it will aggregate that and send it back as one response.",
    "start": "274721",
    "end": "279722"
  },
  {
    "text": "The next part of an API management system is a developer portal.",
    "start": "279722",
    "end": "286707"
  },
  {
    "text": "So, the developer portal is a self-service hub",
    "start": "287090",
    "end": "292733"
  },
  {
    "text": "where developers can go to browse access and share",
    "start": "292733",
    "end": "297677"
  },
  {
    "text": "API documentation.",
    "start": "297677",
    "end": "300493"
  },
  {
    "text": "So, if an API definition is like our menu,",
    "start": "300704",
    "end": "304720"
  },
  {
    "text": "this is like a menu of menus,",
    "start": "304720",
    "end": "307876"
  },
  {
    "text": "and this is going to really streamline communication between teams in an enterprise,",
    "start": "307876",
    "end": "313120"
  },
  {
    "text": "which results in faster time to market",
    "start": "313120",
    "end": "315991"
  },
  {
    "text": "and lower development costs.",
    "start": "315991",
    "end": "318493"
  },
  {
    "text": "This example has six APIs,",
    "start": "318493",
    "end": "321430"
  },
  {
    "text": "so you can imagine across an enterprise there could be hundreds or even thousands of APIs.",
    "start": "321430",
    "end": "325826"
  },
  {
    "text": "So, being able to centralize access to that is invaluable.",
    "start": "325826",
    "end": "330297"
  },
  {
    "text": "Next up, we have a lifecycle manager.",
    "start": "330297",
    "end": "334479"
  },
  {
    "text": "So, we can think of an API as a building block.",
    "start": "336631",
    "end": "340133"
  },
  {
    "text": "If you make an API and expose that for other people to use,",
    "start": "340133",
    "end": "344160"
  },
  {
    "text": "and they incorporate your API into their system,",
    "start": "344160",
    "end": "348000"
  },
  {
    "text": "they're trusting you to keep your part of their system healthy.",
    "start": "348000",
    "end": "352882"
  },
  {
    "text": "So, the life cycle manager will help you build, test,",
    "start": "352882",
    "end": "358805"
  },
  {
    "text": "on board, manage, and eventually retire your APIs.",
    "start": "358805",
    "end": "363129"
  },
  {
    "text": "You can manage your APIs every step of the way,",
    "start": "363129",
    "end": "365833"
  },
  {
    "text": " \nwhile ensuring adequate version control.",
    "start": "365833",
    "end": "369575"
  },
  {
    "text": "Last up is reporting and analytics.",
    "start": "369575",
    "end": "374319"
  },
  {
    "text": "API management solutions use synthetic monitoring",
    "start": "377299",
    "end": "381840"
  },
  {
    "text": "to watch each API's availability, response time, and overall health.",
    "start": "381840",
    "end": "388503"
  },
  {
    "text": "You can also incorporate analytics solutions",
    "start": "388503",
    "end": "391737"
  },
  {
    "text": "for automated recording over time.",
    "start": "391737",
    "end": "395165"
  },
  {
    "text": "So, these can be used to",
    "start": "395165",
    "end": "398574"
  },
  {
    "text": "diagnose and troubleshoot integration issues as they arise",
    "start": "398574",
    "end": "402583"
  },
  {
    "text": "and they can also help enterprises make better informed decisions",
    "start": "402583",
    "end": "407356"
  },
  {
    "text": "about their applications and services.",
    "start": "407356",
    "end": "412319"
  },
  {
    "text": "So, how how does this affect some real life scenarios?",
    "start": "412400",
    "end": "418033"
  },
  {
    "text": "So, let's consider banks and now they offer login through a mobile app.",
    "start": "418033",
    "end": "425000"
  },
  {
    "text": "That mobile app login requires two-factor authentication.",
    "start": "425000",
    "end": "428400"
  },
  {
    "text": "So, regular login plus a phone number verification.",
    "start": "428400",
    "end": "433383"
  },
  {
    "text": "So, a telecommunications company might build an API, build a service,",
    "start": "433383",
    "end": "439523"
  },
  {
    "text": "that verifies phone numbers and expose that service via an API,",
    "start": "439523",
    "end": "443553"
  },
  {
    "text": "and in that way they're able to monetize their existing data",
    "start": "443553",
    "end": "447209"
  },
  {
    "text": "and create an entirely new source of revenue.",
    "start": "447209",
    "end": "451840"
  },
  {
    "text": "So, they're going to use the reporting part of the API management",
    "start": "452590",
    "end": "457199"
  },
  {
    "text": "to be able to see who's using their new API, how it's being used,",
    "start": "457199",
    "end": "461199"
  },
  {
    "text": "and to set their prices and eventually collect money.",
    "start": "461199",
    "end": "466720"
  },
  {
    "text": "Or, let's consider a rideshare app.",
    "start": "466720",
    "end": "469086"
  },
  {
    "text": "That rideshare app,",
    "start": "469086",
    "end": "470526"
  },
  {
    "text": "let's say they decided to use a non-relational database for their back end.",
    "start": "470526",
    "end": "475122"
  },
  {
    "text": "They want to do this for scalability and flexibility,",
    "start": "475122",
    "end": "478438"
  },
  {
    "text": "but in practice communicating between teams can result in really messy data.",
    "start": "478438",
    "end": "484255"
  },
  {
    "text": "So, the the rideshare company can use the developer portal",
    "start": "484256",
    "end": "490423"
  },
  {
    "text": "to define objects like a car, a journey, a time slot,",
    "start": "490423",
    "end": "496139"
  },
  {
    "text": "and it can formalize the relationships between those objects,",
    "start": "496139",
    "end": "502639"
  },
  {
    "text": "and then communicate all of that with the developer portal,",
    "start": "503634",
    "end": "507120"
  },
  {
    "text": "and that's going to result in much more powerful data queries.",
    "start": "507120",
    "end": "510560"
  },
  {
    "text": "So, they can harness the flexibility and the scalability of a non-relational database,",
    "start": "510560",
    "end": "516039"
  },
  {
    "text": "while using the control of a more traditional relational database.",
    "start": "516039",
    "end": "521344"
  },
  {
    "text": "And, finally, let's consider a bank",
    "start": "521344",
    "end": "524299"
  },
  {
    "text": "that wants to offer third-party products and services to their clients.",
    "start": "524299",
    "end": "529946"
  },
  {
    "text": "They can do this by using the API gateway.",
    "start": "529946",
    "end": "535588"
  },
  {
    "text": "So, the API gateway is going to centralize access and security.",
    "start": "535588",
    "end": "540880"
  },
  {
    "text": "So, the user has a unified login experience",
    "start": "542113",
    "end": "546084"
  },
  {
    "text": "and then the bank can use internal APIS",
    "start": "546084",
    "end": "549026"
  },
  {
    "text": "to expose their customers to third-party products and services,",
    "start": "549026",
    "end": "554374"
  },
  {
    "text": "and then only share that information with the third parties if the customer agrees.",
    "start": "554374",
    "end": "559091"
  },
  {
    "text": "So, they're using the gateway to centralize access,",
    "start": "559091",
    "end": "562854"
  },
  {
    "text": "to aggregate data, so it presents a unified experience,",
    "start": "562854",
    "end": "567223"
  },
  {
    "text": "and they're also using the gateway to ensure their high security standards.",
    "start": "567223",
    "end": "571845"
  },
  {
    "text": "So, API management can be used by enterprises",
    "start": "571845",
    "end": "575670"
  },
  {
    "text": "to make sure their APIs are secure, consumable, and managed.",
    "start": "575671",
    "end": "581177"
  },
  {
    "text": "Thank you. If you have questions please drop us a line below.",
    "start": "581177",
    "end": "586182"
  },
  {
    "text": "If you want to see more videos like this in the future please like and subscribe,",
    "start": "586182",
    "end": "591183"
  },
  {
    "text": "and don't forget:",
    "start": "591183",
    "end": "592422"
  },
  {
    "text": "you can grow your skills and earn a badge with IBM Cloud  Labs,",
    "start": "592422",
    "end": "596648"
  },
  {
    "text": "which are free browser-based interactive Kubernetes labs.",
    "start": "596648",
    "end": "602959"
  }
]