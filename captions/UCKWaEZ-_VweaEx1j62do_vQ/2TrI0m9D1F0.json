[
  {
    "text": "in this video I will demonstrate how to create new custom standard drivers with it NCM IBM tiv network configuration",
    "start": "1800",
    "end": "10480"
  },
  {
    "text": "manager before starting the demonstration I will provide some background on it NCM drivers and I will",
    "start": "10480",
    "end": "17240"
  },
  {
    "text": "briefly discuss the information that should be collected in advance prior to creating a new",
    "start": "17240",
    "end": "23279"
  },
  {
    "text": "driver it NCM ships with drivers for a large number of network devices for",
    "start": "23279",
    "end": "28960"
  },
  {
    "text": "devices that are not covered out of the box itcm provides a wizard to create new custom standard type drivers standard",
    "start": "28960",
    "end": "37000"
  },
  {
    "text": "drivers are Ci or command line interface drivers that provide basic configuration",
    "start": "37000",
    "end": "42640"
  },
  {
    "text": "backup and configuration change functionality new smart model type",
    "start": "42640",
    "end": "47760"
  },
  {
    "text": "drivers cannot be created using the driver creation wizard it is usually possible to create",
    "start": "47760",
    "end": "54719"
  },
  {
    "text": "a new custom standard driver for devices that have a CLI interface that is directly access accessible via telnet or",
    "start": "54719",
    "end": "61640"
  },
  {
    "text": "SSH it may be difficult or not possible to create new custom standard drivers",
    "start": "61640",
    "end": "67040"
  },
  {
    "text": "for devices that require navigating a menu to reach the CLI interface or they make significant use of special",
    "start": "67040",
    "end": "73479"
  },
  {
    "text": "characters in their interface it is not possible to create new standard drivers for devices that only have GUI or API",
    "start": "73479",
    "end": "81280"
  },
  {
    "text": "interfaces for configuration management it NCM is intended to manage",
    "start": "81280",
    "end": "86479"
  },
  {
    "text": "network devices such as rers and switches but depending on your requirements it may be possible to",
    "start": "86479",
    "end": "91960"
  },
  {
    "text": "manage specific aspects of other devices such as Linux servers in this video we",
    "start": "91960",
    "end": "97399"
  },
  {
    "text": "will create a driver that can collect the output of a set of commands for a Linux server and that can execute simple",
    "start": "97399",
    "end": "103360"
  },
  {
    "text": "CLI commands on a Linux server the basic steps to create a new standard driver are the same for all device types with a",
    "start": "103360",
    "end": "110040"
  },
  {
    "text": "CLI interface keep in mind that if you need comprehensive server management IBM has",
    "start": "110040",
    "end": "116159"
  },
  {
    "text": "products that are better suited for that task in order to work if efficiently when using the driver creation wizard it",
    "start": "116159",
    "end": "122640"
  },
  {
    "text": "is important to do some planning for your new driver I will review the decisions you need to make and the data",
    "start": "122640",
    "end": "128039"
  },
  {
    "text": "you need to collect before starting work on your new driver first what values will you use for the vtos the vendor the",
    "start": "128039",
    "end": "136160"
  },
  {
    "text": "type the model and the OS version you cannot use a vtm OS that is an exact match for a vtm OS that already exists",
    "start": "136160",
    "end": "143800"
  },
  {
    "text": "in itcm you should also consider how your choice of vtos will affect selecting",
    "start": "143800",
    "end": "150440"
  },
  {
    "text": "devices and other itcm resources when using vtos filters in this example we",
    "start": "150440",
    "end": "156480"
  },
  {
    "text": "will use a vtos of Linux server Cent OS",
    "start": "156480",
    "end": "161560"
  },
  {
    "text": "6X it is possible for drivers to support multiple models and Os versions if the",
    "start": "161560",
    "end": "167040"
  },
  {
    "text": "behavior and CLI commands for those models and Os versions are very similar in this example we will support one",
    "start": "167040",
    "end": "173280"
  },
  {
    "text": "model Cent OS and two OS versions five-star and six-star next decide how",
    "start": "173280",
    "end": "180440"
  },
  {
    "text": "your new driver will verify the model and OS version information when communicating with the device typically",
    "start": "180440",
    "end": "187560"
  },
  {
    "text": "you need to identify CLI command output that contains exact or Wild Card matches for the model and OS version strings",
    "start": "187560",
    "end": "194760"
  },
  {
    "text": "there are ways to map or replace strings found in the command output but we will not cover that topic in this example in",
    "start": "194760",
    "end": "200959"
  },
  {
    "text": "this example we will use the output of the command catc",
    "start": "200959",
    "end": "206879"
  },
  {
    "text": "r-ras since that output contains matches for both the model and the OS version strings you must know the sequence of",
    "start": "206879",
    "end": "214040"
  },
  {
    "text": "prompts and responses used when logging onto the device you will need to edit part of the driver to match some or all",
    "start": "214040",
    "end": "220120"
  },
  {
    "text": "of that sequence and finally you need to decide what you consider the devices",
    "start": "220120",
    "end": "225720"
  },
  {
    "text": "configuration to be we need to be able to collect this data from the device and",
    "start": "225720",
    "end": "230799"
  },
  {
    "text": "store it in itcm in this example we will capture the output of the commands",
    "start": "230799",
    "end": "237720"
  },
  {
    "text": "catc hosts and netstat DNR this slide provides the output of",
    "start": "237720",
    "end": "245079"
  },
  {
    "text": "the commands used in this example for determining the devices vtos and for",
    "start": "245079",
    "end": "250120"
  },
  {
    "text": "collecting the device's configuration data you may find this data useful to refer to during the demonstration of",
    "start": "250120",
    "end": "256479"
  },
  {
    "text": "creating a new custom standard driver we'll launch the new driver",
    "start": "256479",
    "end": "261919"
  },
  {
    "text": "creation wizard by navigating to the system manager tab the driers section",
    "start": "261919",
    "end": "268919"
  },
  {
    "text": "and then from the tool tools menu we'll select new",
    "start": "268919",
    "end": "273759"
  },
  {
    "text": "driver when the new driver window opens select IBM templates then select CLI",
    "start": "274520",
    "end": "280960"
  },
  {
    "text": "based via telet or SSH we are not going to demonstrate creating tl1 based drivers in this",
    "start": "280960",
    "end": "287680"
  },
  {
    "text": "example then click next and in the driver details panel we",
    "start": "287680",
    "end": "293800"
  },
  {
    "text": "enter the data that we decided upon earlier so our vendor was going to be",
    "start": "293800",
    "end": "299120"
  },
  {
    "text": "Linux the type was going to be",
    "start": "299120",
    "end": "305479"
  },
  {
    "text": "server the model was going to be Cent",
    "start": "305479",
    "end": "310240"
  },
  {
    "text": "OS and the OS was going to be",
    "start": "311199",
    "end": "316360"
  },
  {
    "text": "6X the supported model would be sent",
    "start": "317000",
    "end": "322680"
  },
  {
    "text": "OS and the supported os's were going to be fstar and",
    "start": "323560",
    "end": "331160"
  },
  {
    "text": "six-star both the supported models and the supported OS values are comedy",
    "start": "331160",
    "end": "336840"
  },
  {
    "text": "limited lists we'll click next to move to the",
    "start": "336840",
    "end": "343759"
  },
  {
    "text": "device script section device scripts control the configurable details of the handshake",
    "start": "343759",
    "end": "350039"
  },
  {
    "text": "between itcm communication handlers and the device for functionality such as logging on executing commands and",
    "start": "350039",
    "end": "356919"
  },
  {
    "text": "transferring data we're going to addit SSH section of the device script since our Linux server only allows SSH",
    "start": "356919",
    "end": "364280"
  },
  {
    "text": "connections we will select an existing device script template by using the",
    "start": "364280",
    "end": "369880"
  },
  {
    "text": "selection box is near the bottom of the screen in this case we'll pick a",
    "start": "369880",
    "end": "375638"
  },
  {
    "text": "Cisco router",
    "start": "378039",
    "end": "381880"
  },
  {
    "text": "7200 and a version 12.3 we're using a Cisco router template because there are",
    "start": "386759",
    "end": "392720"
  },
  {
    "text": "no vtm os's in it NCM that have Behavior really similar to a Linux server and a",
    "start": "392720",
    "end": "398919"
  },
  {
    "text": "Cisco router 7200 family of drivers has an SSH connection section that will work",
    "start": "398919",
    "end": "404199"
  },
  {
    "text": "pretty well with that extensive modification note that if you have a custom device script that is closer to",
    "start": "404199",
    "end": "410120"
  },
  {
    "text": "the behavior of your new vtos you can always paste in that script uh from the",
    "start": "410120",
    "end": "416280"
  },
  {
    "text": "text mode of the editor",
    "start": "416280",
    "end": "421400"
  },
  {
    "text": "we'll click open to load the device script and once it loads we'll make sure",
    "start": "421479",
    "end": "427199"
  },
  {
    "text": "that we have the SSH tab selected and that we have the",
    "start": "427199",
    "end": "433000"
  },
  {
    "text": "form editing mode selected Advanced users may prefer to use the text mode of",
    "start": "433000",
    "end": "439759"
  },
  {
    "text": "the editor however you must navigate the device script manually and be sure that you're editing the correct section when",
    "start": "439759",
    "end": "445840"
  },
  {
    "text": "you use this mode in this example we're going to use the form mode the first section we will edit will be the connect",
    "start": "445840",
    "end": "451960"
  },
  {
    "text": "section this is the section that handles logging on to the device we will use information from the",
    "start": "451960",
    "end": "458199"
  },
  {
    "text": "device log on sequence to edit the section since we are using SSH programmatically it's likely that we",
    "start": "458199",
    "end": "464360"
  },
  {
    "text": "will only need to know the prompt that indicates that we've successfully logged on even though this section is designed",
    "start": "464360",
    "end": "469680"
  },
  {
    "text": "to handle telnet as well as SSH we will also need to remove any extra lines that",
    "start": "469680",
    "end": "475000"
  },
  {
    "text": "are specific to the template vtm OS to avoid executing commands that do not",
    "start": "475000",
    "end": "480039"
  },
  {
    "text": "apply to our Target device we'll first edit the script content to remove the if",
    "start": "480039",
    "end": "485960"
  },
  {
    "text": "and if block that handles the enable command for routers since this does not apply to uh Linux",
    "start": "485960",
    "end": "494440"
  },
  {
    "text": "servers next we'll remove the lines that control setting the terminal width and length on a Cisco rouer since these also",
    "start": "500440",
    "end": "507360"
  },
  {
    "text": "don't apply to a Linux server finally we'll change our prompt from a",
    "start": "507360",
    "end": "514039"
  },
  {
    "text": "pound sign to a dollar sign since in this case we're logged in as a non-root user and we'll be seeing the dollar",
    "start": "514039",
    "end": "521000"
  },
  {
    "text": "character as the last character in our prompt next we'll edit the section of the script that parses the model",
    "start": "521000",
    "end": "527120"
  },
  {
    "text": "information from the device output we've already decided that we will use the output of the cat Etc Red",
    "start": "527120",
    "end": "534680"
  },
  {
    "text": "Hat release command to provide the vtos data that will parse in this section",
    "start": "534680",
    "end": "540320"
  },
  {
    "text": "we'll edit this section to reflect the information from the output of that",
    "start": "540320",
    "end": "547040"
  },
  {
    "text": "command note that in order to have a good match in this case we've included a",
    "start": "561120",
    "end": "566720"
  },
  {
    "text": "carriage return line feed character after the Red Hat release line that comes right before the",
    "start": "566720",
    "end": "573600"
  },
  {
    "text": "Centos string which is our model and we've also included a leading and trailing space after the word release",
    "start": "573600",
    "end": "581360"
  },
  {
    "text": "next we'll edit the section that determines the OS version we'll click on the config do version Tab and edit that",
    "start": "581360",
    "end": "588839"
  },
  {
    "text": "information also using the output of the command catet Red Hat",
    "start": "588839",
    "end": "596079"
  },
  {
    "text": "release the concept cep of feature sets doesn't apply to the OS versions of Linux servers so we'll delete those",
    "start": "597640",
    "end": "604839"
  },
  {
    "text": "lines we'll change the rest of the lines to match what we see in the output of",
    "start": "604839",
    "end": "609880"
  },
  {
    "text": "etsy Red Hat",
    "start": "609880",
    "end": "612720"
  },
  {
    "text": "release in this case we want to identify or parse out the string 6.7 as the OS",
    "start": "615839",
    "end": "622399"
  },
  {
    "text": "version so our F began string will be Cent OS release with a trailing space",
    "start": "622399",
    "end": "631040"
  },
  {
    "text": "and our find end string will be a leading space followed by opening",
    "start": "631959",
    "end": "638519"
  },
  {
    "text": "parentheses next we'll edit the section that pulls what we consider to be our running configuration data from the",
    "start": "639000",
    "end": "645560"
  },
  {
    "text": "device we'll click on config do running we want to send the command cat Etsy",
    "start": "645560",
    "end": "652839"
  },
  {
    "text": "host and netstat DNR to the device we need to edit the commands that we want to send in this section and the prompt",
    "start": "652839",
    "end": "659800"
  },
  {
    "text": "that lets us know when we've received each command response we also need to add information strings to parse for",
    "start": "659800",
    "end": "666240"
  },
  {
    "text": "that indicate the start and the end of the configuration data so we will paste",
    "start": "666240",
    "end": "671320"
  },
  {
    "text": "in the commands we want to send first note that we are sending an echo",
    "start": "671320",
    "end": "676440"
  },
  {
    "text": "command to Output as a start marker we'll use the echoed string as the find",
    "start": "676440",
    "end": "682240"
  },
  {
    "text": "begin value in the upper",
    "start": "682240",
    "end": "686200"
  },
  {
    "text": "panel note that we're also proceeding this with a line feed character so that we",
    "start": "687959",
    "end": "693639"
  },
  {
    "text": "can avoid including the actual Echo command itself in our configuration output data this is not required having",
    "start": "693639",
    "end": "701920"
  },
  {
    "text": "a start marker and we're simply doing this to show an example of how this can be done also note that we don't put a",
    "start": "701920",
    "end": "709839"
  },
  {
    "text": "final weight equals dollar sign remember the dollar sign is the prompt we're looking for we do not put an a final",
    "start": "709839",
    "end": "717639"
  },
  {
    "text": "weight equals dollar sign line at the end of this set of commands because we",
    "start": "717639",
    "end": "723480"
  },
  {
    "text": "want to catch the final dollar prompt as our config running. end marker both to",
    "start": "723480",
    "end": "730639"
  },
  {
    "text": "tell us that we've received all the data and when we're parsing for the end of",
    "start": "730639",
    "end": "736199"
  },
  {
    "text": "the configuration data next we'll edit the information or diag section we'll",
    "start": "736199",
    "end": "741760"
  },
  {
    "text": "click on the diag tab this section allows us to collect additional information from the device",
    "start": "741760",
    "end": "747959"
  },
  {
    "text": "in addition to what we considered to be our configuration data unlike configuration data historical versions",
    "start": "747959",
    "end": "755079"
  },
  {
    "text": "of this data are not kept only one copy of this data per device is kept the",
    "start": "755079",
    "end": "760320"
  },
  {
    "text": "database field that stores this data is fairly large but if the collect the data is too large for the field it will cause",
    "start": "760320",
    "end": "767079"
  },
  {
    "text": "a driver error and the entire unit of work for the device will fail we need to edit the commands that we going to send",
    "start": "767079",
    "end": "773519"
  },
  {
    "text": "in this section and the prompt that lets us know we've received each command response we also have have to add a",
    "start": "773519",
    "end": "779399"
  },
  {
    "text": "string to parse for that indicate that we've received all the informational data in this example we'll send a single",
    "start": "779399",
    "end": "785199"
  },
  {
    "text": "command slin if",
    "start": "785199",
    "end": "789720"
  },
  {
    "text": "config we'll also change our prompt that indicates the end of data to the dollar",
    "start": "791760",
    "end": "798240"
  },
  {
    "text": "sign character note that we don't have a weight equals dollar sign uh because we",
    "start": "798240",
    "end": "805079"
  },
  {
    "text": "want to in intercept the uh the final dollar sign character as the end of our",
    "start": "805079",
    "end": "810199"
  },
  {
    "text": "data however if we had multiple commands as we saw before we edited uh after each command except for",
    "start": "810199",
    "end": "817360"
  },
  {
    "text": "the final command we would have a weight equals dollar sign line to make sure that we'd received all data from the",
    "start": "817360",
    "end": "824839"
  },
  {
    "text": "First Command before we started a second command next we'll edit the device script section that controls sending CLI",
    "start": "824839",
    "end": "832440"
  },
  {
    "text": "commands to the device using native CLI command sets these commands can either either",
    "start": "832440",
    "end": "838920"
  },
  {
    "text": "make changes to the device or return data from the device or possibly",
    "start": "838920",
    "end": "844320"
  },
  {
    "text": "both in this example we are going to send commands to the device in line in the SSH session with the device the",
    "start": "844320",
    "end": "852079"
  },
  {
    "text": "section of the device script used for this purpose is the stream file section CLI commands resulting from processing a",
    "start": "852079",
    "end": "859160"
  },
  {
    "text": "native CLI command set are stored in a temporary file and this section handles streaming the lines from the temporary",
    "start": "859160",
    "end": "866320"
  },
  {
    "text": "file to the device we will remove the existing commands that are intended for a Cisco router and replace those or",
    "start": "866320",
    "end": "873240"
  },
  {
    "text": "leave only the commands that are needed for a Linux",
    "start": "873240",
    "end": "877519"
  },
  {
    "text": "server we'll also change the prompt we're waiting for to our dollar prompt",
    "start": "890120",
    "end": "895240"
  },
  {
    "text": "next we'll edit global settings for the device script we'll select cect the miscellaneous tab we'll change the",
    "start": "895240",
    "end": "901839"
  },
  {
    "text": "prompts to match our dollar sign",
    "start": "901839",
    "end": "906399"
  },
  {
    "text": "prompt and we'll add a line that strips the final line off the configuration",
    "start": "910360",
    "end": "916160"
  },
  {
    "text": "data this is an optional line this line may or may not be useful to you",
    "start": "916160",
    "end": "921279"
  },
  {
    "text": "depending on your data and whether or not a trailing line is a problem for your use of the configuration data next",
    "start": "921279",
    "end": "926639"
  },
  {
    "text": "we'll edit the config tag again global data or global settings we'll change the",
    "start": "926639",
    "end": "932279"
  },
  {
    "text": "configuration type to single config since we don't have the concept",
    "start": "932279",
    "end": "937399"
  },
  {
    "text": "of a startup and running configuration on a Linux server and we'll change the prompts to",
    "start": "937399",
    "end": "944959"
  },
  {
    "text": "our dollar prompt even though these values are probably overridden by specific script",
    "start": "944959",
    "end": "954079"
  },
  {
    "text": "sections this completes editing the device script so we'll click next to move on to the resource access or rad",
    "start": "954800",
    "end": "962279"
  },
  {
    "text": "section since we plan to use SSH to communicate with our Linux server we'll select the SSH Tab and make sure it's",
    "start": "962279",
    "end": "971360"
  },
  {
    "text": "enabled in the transport section we'll make sure that our streaming put and get",
    "start": "971360",
    "end": "977759"
  },
  {
    "text": "checkboxes are checked this is because we want to send and receive data over our SSH connection stream rather than",
    "start": "977759",
    "end": "986079"
  },
  {
    "text": "creating an FTP server to send data back and forth to the device in the SSH option section we'll select ssh2 because",
    "start": "986079",
    "end": "994319"
  },
  {
    "text": "our Linux version uses ssh2 instead of ssh1 there are no changes we'll make in",
    "start": "994319",
    "end": "1000199"
  },
  {
    "text": "the authentication section in the command line we simply make sure that we",
    "start": "1000199",
    "end": "1005399"
  },
  {
    "text": "are using the SSH script",
    "start": "1005399",
    "end": "1009279"
  },
  {
    "text": "type in the configuration section we'll leave native compare selected we're",
    "start": "1011560",
    "end": "1016680"
  },
  {
    "text": "going to turn off reboot on config list load this probably doesn't make sense for a Linux server and we don't want to",
    "start": "1016680",
    "end": "1022199"
  },
  {
    "text": "reboot our server unnecessarily anyway we'll allow line by line for Native command sets this allows all commands to",
    "start": "1022199",
    "end": "1029918"
  },
  {
    "text": "be executed in the command set even if some of them error out which may be useful when we try to collect",
    "start": "1029919",
    "end": "1035558"
  },
  {
    "text": "information from the Linux server later we're going to leave the compare device and itcm checkbox checks for network",
    "start": "1035559",
    "end": "1043558"
  },
  {
    "text": "devices this box should always be checked for normal use but if your Linux server responses are not consistent this",
    "start": "1043559",
    "end": "1050000"
  },
  {
    "text": "may cause itcm to incorrectly think that it NCM and the Linux server are out of",
    "start": "1050000",
    "end": "1055960"
  },
  {
    "text": "sync in that case we can edit the driver and change the setting we only have a single configuration since we don't have",
    "start": "1055960",
    "end": "1063160"
  },
  {
    "text": "the concept of a startup command with Linux so we'll leave the multiple config compare checkbox unchecked and we'll",
    "start": "1063160",
    "end": "1070160"
  },
  {
    "text": "also leave the disable config checks on changes unchecked this way it NCM will",
    "start": "1070160",
    "end": "1076320"
  },
  {
    "text": "check to see if someone has changed the the Linux server configuration outside of itcm before it makes a change we're",
    "start": "1076320",
    "end": "1083080"
  },
  {
    "text": "going to turn off pre writes for imports and syns this is the equivalent of the",
    "start": "1083080",
    "end": "1088880"
  },
  {
    "text": "copy running to start command for a Cisco router and it really doesn't apply to a Linux server we'll leave the report",
    "start": "1088880",
    "end": "1096200"
  },
  {
    "text": "diffs checkbox unchecked uh for import we'll still see any differences when we",
    "start": "1096200",
    "end": "1101400"
  },
  {
    "text": "do a configuration synchronization and we're going to leave the update on change check for our info which was our",
    "start": "1101400",
    "end": "1107760"
  },
  {
    "text": "diag section from the device script and for configuration so when we actually make changes we'll get our configuration",
    "start": "1107760",
    "end": "1114640"
  },
  {
    "text": "and our information updated we'll leave the data type as CLI since we're just",
    "start": "1114640",
    "end": "1120000"
  },
  {
    "text": "getting the output of CLI commands since we're not going to use the tnet and ALT T telnet access",
    "start": "1120000",
    "end": "1127400"
  },
  {
    "text": "types we'll disable telnet since we may use it later and since we have no",
    "start": "1127400",
    "end": "1133039"
  },
  {
    "text": "intention of having another access type we'll simply remove the alt tnet type",
    "start": "1133039",
    "end": "1138919"
  },
  {
    "text": "this concludes the changes we need to make to the resource access document so we'll click next we'll enter a",
    "start": "1138919",
    "end": "1146120"
  },
  {
    "text": "description for the new custom driver you should enter a description that's going to make sense to you a week a",
    "start": "1146120",
    "end": "1152120"
  },
  {
    "text": "month or a year later when you come back to try to figure out what you created this driver",
    "start": "1152120",
    "end": "1158559"
  },
  {
    "text": "for the last screen simply shows us the details of the driver we just created",
    "start": "1159440",
    "end": "1164760"
  },
  {
    "text": "and we can always find this information later in the itcm driver management",
    "start": "1164760",
    "end": "1171280"
  },
  {
    "text": "guey now that we finished creating our driver if we refresh our driver's panel",
    "start": "1172760",
    "end": "1178880"
  },
  {
    "text": "by toggling back and forth between screens we'll be able to see our new driver in our top row with our Linux",
    "start": "1178880",
    "end": "1186039"
  },
  {
    "text": "server Centos 6X and we'll notice that this starts with CST indicating it's a",
    "start": "1186039",
    "end": "1191720"
  },
  {
    "text": "custom standard driver U now it's time for us to test",
    "start": "1191720",
    "end": "1197320"
  },
  {
    "text": "our driver at try to actually import a device of this vendor type model in OS",
    "start": "1197320",
    "end": "1202440"
  },
  {
    "text": "before we can do that we need to add credentials for the Target device into",
    "start": "1202440",
    "end": "1207520"
  },
  {
    "text": "an authentication resource we've created a custom driver test realm just to keep",
    "start": "1207520",
    "end": "1213679"
  },
  {
    "text": "things organized in this example and we've already created a authentication",
    "start": "1213679",
    "end": "1219520"
  },
  {
    "text": "for our Centos Target device you'll notice that we set the filter on this to",
    "start": "1219520",
    "end": "1226320"
  },
  {
    "text": "Linux as the vendor server as the type and sent OS as the model and we've left",
    "start": "1226320",
    "end": "1232000"
  },
  {
    "text": "the OS version wild card if we look at this we can see that we just have one",
    "start": "1232000",
    "end": "1239320"
  },
  {
    "text": "entry with our username our password and we've also set that password as the enabled password although for a Linux",
    "start": "1239320",
    "end": "1246200"
  },
  {
    "text": "server we shouldn't need an enable password we're just doing this to avoid a possible null po or exception at",
    "start": "1246200",
    "end": "1252640"
  },
  {
    "text": "execution time in case some routine is called that looks for an enabled password value now now we need to create",
    "start": "1252640",
    "end": "1259080"
  },
  {
    "text": "a device of that type uh we're just going to use the Linux server that itcm",
    "start": "1259080",
    "end": "1266200"
  },
  {
    "text": "is running on and we're just going to name it by its host name so we won't have to worry about name",
    "start": "1266200",
    "end": "1273520"
  },
  {
    "text": "resolution so we'll create a new network",
    "start": "1274120",
    "end": "1278440"
  },
  {
    "text": "resource we'll put in the IP address of our itcm server and we'll select our new vendor",
    "start": "1279200",
    "end": "1286360"
  },
  {
    "text": "type model in OS",
    "start": "1286360",
    "end": "1290039"
  },
  {
    "text": "we happen to know from looking at our red hat-- release file that this is a",
    "start": "1295480",
    "end": "1301159"
  },
  {
    "text": "6.x OS version but even if we picked the 5.x at runtime the parsing logic in the",
    "start": "1301159",
    "end": "1308679"
  },
  {
    "text": "device script that we edited would find the right version and substitute",
    "start": "1308679",
    "end": "1314320"
  },
  {
    "text": "that now that we've created the device we'll import it to see if our driver",
    "start": "1314320",
    "end": "1319840"
  },
  {
    "text": "Works clicking on Import in the context menu opens our import network resources",
    "start": "1319840",
    "end": "1326480"
  },
  {
    "text": "wizard we can see that our device is already selected so we'll just step through the",
    "start": "1326480",
    "end": "1331760"
  },
  {
    "text": "wizard we're going to ignore errors we've got an authentication resource so there's no need to override the",
    "start": "1331760",
    "end": "1337360"
  },
  {
    "text": "passwords the priority really doesn't matter for the unit of work we're going to create since it'll be the only unit",
    "start": "1337360",
    "end": "1342960"
  },
  {
    "text": "of work running on our example system and we'll schedule this for",
    "start": "1342960",
    "end": "1348039"
  },
  {
    "text": "immediate execution it'll just give it a",
    "start": "1348039",
    "end": "1353400"
  },
  {
    "text": "description we can look for our unit of work in Q manager and track its",
    "start": "1354400",
    "end": "1360919"
  },
  {
    "text": "status in this case we can see that our U aired out we'll take a look at the U",
    "start": "1364039",
    "end": "1370240"
  },
  {
    "text": "log and get an idea what the problem is in this case it looks like there's a problem with our Command uh to get the",
    "start": "1370240",
    "end": "1377159"
  },
  {
    "text": "model section we did something wrong sending the ETC Red Hat Das release command so we'll",
    "start": "1377159",
    "end": "1384360"
  },
  {
    "text": "have to go back and add it the driver uh and correct that",
    "start": "1384360",
    "end": "1389760"
  },
  {
    "text": "error we'll navigate back to the driver's panel and from the tools menu we'll",
    "start": "1393880",
    "end": "1400799"
  },
  {
    "text": "select edit driver this brings up our driver wizard",
    "start": "1400799",
    "end": "1408840"
  },
  {
    "text": "again and there's one driver we can edit which is our new one we'll navigate back to the device",
    "start": "1408840",
    "end": "1415919"
  },
  {
    "text": "script panel and we'll select the SSH Tab and we'll go down to our model",
    "start": "1415919",
    "end": "1424120"
  },
  {
    "text": "section we can see that we left the equals out between the model. send and",
    "start": "1424120",
    "end": "1429600"
  },
  {
    "text": "the command cat Etsy SL Red Hat D relase",
    "start": "1429600",
    "end": "1435880"
  },
  {
    "text": "so we'll correct that we'll check config version uh to make",
    "start": "1435880",
    "end": "1441159"
  },
  {
    "text": "sure we didn't make the same error which we didn't then we can click finish close",
    "start": "1441159",
    "end": "1448440"
  },
  {
    "text": "our Editor to save our changes to our uh new driver and after saving our driver we'll",
    "start": "1448440",
    "end": "1454840"
  },
  {
    "text": "go back and we'll try our import",
    "start": "1454840",
    "end": "1458760"
  },
  {
    "text": "again",
    "start": "1466799",
    "end": "1469799"
  },
  {
    "text": "and we'll check the status of our currently executing uh unit of",
    "start": "1484760",
    "end": "1490919"
  },
  {
    "text": "work and we can see that this",
    "start": "1496760",
    "end": "1502720"
  },
  {
    "text": "time we were able to successfully import our device now we'll go and check the uh",
    "start": "1502720",
    "end": "1509120"
  },
  {
    "text": "configuration data and the info data for that",
    "start": "1509120",
    "end": "1513639"
  },
  {
    "text": "device we'll have to use view native commands to see the configuration data since this is a standard driver and",
    "start": "1518559",
    "end": "1525399"
  },
  {
    "text": "there is not a guey editor for the configuration",
    "start": "1525399",
    "end": "1529679"
  },
  {
    "text": "as we expected we have our config start marker line we've got the output of",
    "start": "1531279",
    "end": "1537360"
  },
  {
    "text": "catc hosts and the output of netstat",
    "start": "1537360",
    "end": "1542520"
  },
  {
    "text": "DNR if we look at our information data that's under the hardware tab for",
    "start": "1542520",
    "end": "1547960"
  },
  {
    "text": "historical reasons itcm used to model hardware and there was a gooey layout",
    "start": "1547960",
    "end": "1554320"
  },
  {
    "text": "for the chassis however that work has now been deferred ref to it&m however",
    "start": "1554320",
    "end": "1560240"
  },
  {
    "text": "itcm still collects the text data in this section and we can see the output",
    "start": "1560240",
    "end": "1567159"
  },
  {
    "text": "of oursin if config command here if the new driver fails when",
    "start": "1567159",
    "end": "1573880"
  },
  {
    "text": "importing the device and a basic check of device connectivity device log on credentials and the accuracy of your",
    "start": "1573880",
    "end": "1580240"
  },
  {
    "text": "device script editing in the new driver don't solve the problem you can set the driver logging level to debug to get",
    "start": "1580240",
    "end": "1586600"
  },
  {
    "text": "additional troubleshooting information to do this edit the driver log.",
    "start": "1586600",
    "end": "1591919"
  },
  {
    "text": "properties file in the config /properties directory under the itcm base install",
    "start": "1591919",
    "end": "1600240"
  },
  {
    "text": "location near the top of the file change the line log for j. root log or equals",
    "start": "1600240",
    "end": "1605960"
  },
  {
    "text": "error comma driver log to log for j. root log or equals debug driver log save",
    "start": "1605960",
    "end": "1612720"
  },
  {
    "text": "the file and restart itcm when it NCM restarts",
    "start": "1612720",
    "end": "1619120"
  },
  {
    "text": "test your work against the device again after that review the data in the",
    "start": "1619120",
    "end": "1625000"
  },
  {
    "text": "drivers. log file under the logs directory of the itcm base install",
    "start": "1625000",
    "end": "1630559"
  },
  {
    "text": "location once you're done troubleshooting remember to set driver logging back to error level to avoid",
    "start": "1630559",
    "end": "1637480"
  },
  {
    "text": "degrading itcm performance now that our new driver is",
    "start": "1637480",
    "end": "1643600"
  },
  {
    "text": "working correctly to import devices into itnc we need to test to be sure that it will",
    "start": "1643600",
    "end": "1650559"
  },
  {
    "text": "correctly execute CLI commands from a native CLI command set in order to do",
    "start": "1650559",
    "end": "1656600"
  },
  {
    "text": "that we need to create a native CLI command set of the same",
    "start": "1656600",
    "end": "1661840"
  },
  {
    "text": "vtos as the new driver for our example we've created a",
    "start": "1661840",
    "end": "1667720"
  },
  {
    "text": "simple native CLI command set called get you limit data the vendor filter is set to Linux",
    "start": "1667720",
    "end": "1675480"
  },
  {
    "text": "the type filter is set to server and we've left the model and Os filters wild carded since the command we're going to",
    "start": "1675480",
    "end": "1681640"
  },
  {
    "text": "use will work on probably any Linux",
    "start": "1681640",
    "end": "1687120"
  },
  {
    "text": "server we can see that we're just going to send the command UL limit d",
    "start": "1688760",
    "end": "1694600"
  },
  {
    "text": "a the driver framework takes care of connecting to the device sending this",
    "start": "1694600",
    "end": "1699880"
  },
  {
    "text": "command and detecting that the command is completed successfully in this case",
    "start": "1699880",
    "end": "1705880"
  },
  {
    "text": "we're going to select a type interrogation native command set because we want to return results and be able to",
    "start": "1705880",
    "end": "1712440"
  },
  {
    "text": "view those results so our next step is to apply that command set to the device we could",
    "start": "1712440",
    "end": "1718960"
  },
  {
    "text": "apply the command set from the device or from the command set itself using the context menu apply native command set",
    "start": "1718960",
    "end": "1727480"
  },
  {
    "text": "this opens a wizard we can see that the command set is already selected and we'll just walk through the",
    "start": "1727480",
    "end": "1734519"
  },
  {
    "text": "wizard and select the device",
    "start": "1734519",
    "end": "1739399"
  },
  {
    "text": "we don't need to supply credentials since we already have an authentication resource and we don't really care about",
    "start": "1742799",
    "end": "1748360"
  },
  {
    "text": "the priority in this case since our system is not very busy and we'll schedule this uh command set unit of",
    "start": "1748360",
    "end": "1754919"
  },
  {
    "text": "work for immediate",
    "start": "1754919",
    "end": "1757720"
  },
  {
    "text": "execution and we check the progress of our Command set and our Q manager look at the work currently",
    "start": "1760519",
    "end": "1768000"
  },
  {
    "text": "executing and bore into our Command set and take a look at the resulting",
    "start": "1768000",
    "end": "1774200"
  },
  {
    "text": "unit of work log we can see that our Command set has",
    "start": "1774200",
    "end": "1780799"
  },
  {
    "text": "completed successfully it sent our Command ulimit d",
    "start": "1780799",
    "end": "1786880"
  },
  {
    "text": "a and it got back the response we expected uh for a nonroot",
    "start": "1786880",
    "end": "1793559"
  },
  {
    "text": "user this concludes our example of creating and testing a custom standard driver with basic capabilities to backup",
    "start": "1793559",
    "end": "1801000"
  },
  {
    "text": "configuration data and to execute CLI commands although examples for a Linux",
    "start": "1801000",
    "end": "1807039"
  },
  {
    "text": "server creating drivers for network devices requires the same basic steps",
    "start": "1807039",
    "end": "1814679"
  }
]