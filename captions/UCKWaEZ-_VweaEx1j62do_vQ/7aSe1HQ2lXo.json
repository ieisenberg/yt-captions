[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "Have you ever wondered the differences between\nJenkins and Tekton?",
    "start": "859",
    "end": "4020"
  },
  {
    "text": "Hi, I’m Christine, and today I’m going\nto talk to you all about the differences between",
    "start": "4020",
    "end": "8570"
  },
  {
    "text": "the two CI/CD tools that have the same goal,\njust achieve them in different ways.",
    "start": "8570",
    "end": "14459"
  },
  {
    "text": "Let's start with the basics. To understand\nJenkins and Tekton we first need to understand",
    "start": "14459",
    "end": "19119"
  },
  {
    "text": "Continuous Integration and Continuous Delivery,\nor CI/CD for short.",
    "start": "19120",
    "end": "24490"
  },
  {
    "text": "CI/CD is the process of automating software\ndevelopment through testing, building, and deploying",
    "start": "24490",
    "end": "30510"
  },
  {
    "text": "applications. Jenkins and Tekton are two CI/CD\ntools designed to create what is called CI/CD",
    "start": "30510",
    "end": "38660"
  },
  {
    "text": "pipelines. To learn more about continuous integration\nand delivery check out the videos linked below",
    "start": "38660",
    "end": "43680"
  },
  {
    "text": "in our description, but for today I’m going\nto talk to you guys just about the similarities",
    "start": "43680",
    "end": "47899"
  },
  {
    "text": "and the differences between the two. Let's\nstart with Tekton. To understand Tekton we",
    "start": "47899",
    "end": "54089"
  },
  {
    "start": "49000",
    "end": "100000"
  },
  {
    "text": "first need to understand Kubernetes. Kubernetes\nis a container orchestration platform designed",
    "start": "54090",
    "end": "62280"
  },
  {
    "text": "for automating application deployment management\nand scaling. Tekton runs on Kubernetes allowing",
    "start": "62280",
    "end": "70470"
  },
  {
    "text": "you to work with your CI/CD processes on the\nsame cluster as your applications. This allows",
    "start": "70470",
    "end": "76610"
  },
  {
    "text": "you to easily scale your workloads simply\nby adding nodes to your cluster. Tekton comes",
    "start": "76610",
    "end": "83130"
  },
  {
    "text": "with a set of Kubernetes custom resources\ngiving you the building blocks to easily configure",
    "start": "83130",
    "end": "88509"
  },
  {
    "text": "and manage your pipelines. You can automate\nTekton either through the command line or",
    "start": "88510",
    "end": "94159"
  },
  {
    "text": "through the Tekton UI in the browser. All right.\nNow let's get into the architecture. So I’m",
    "start": "94159",
    "end": "101159"
  },
  {
    "start": "100000",
    "end": "149000"
  },
  {
    "text": "going to start by giving a simple example\nto explain CI/CD pipelines, better let's say",
    "start": "101159",
    "end": "106969"
  },
  {
    "text": "you have an application that you want to deploy\ninto production, and you want to automate this",
    "start": "106970",
    "end": "112250"
  },
  {
    "text": "process by using Tekton. To keep it even simpler\nyou're going to run the following procedures",
    "start": "112250",
    "end": "117740"
  },
  {
    "text": "on it. You're going to want to test your application,\nbuild it,",
    "start": "117740",
    "end": "126258"
  },
  {
    "text": "and then deploy it.",
    "start": "126259",
    "end": "130860"
  },
  {
    "text": "Each one of these operations becomes a step\nwhich is the smallest building block of Tekton.",
    "start": "130860",
    "end": "140140"
  },
  {
    "text": "Steps are where you can specify your commands,\nyour arguments, your images to execute your",
    "start": "140140",
    "end": "146240"
  },
  {
    "text": "processes.",
    "start": "146240",
    "end": "149530"
  },
  {
    "start": "149000",
    "end": "218000"
  },
  {
    "text": "Once you've created your steps you can organize\nthem into what is called tasks. And a single",
    "start": "149530",
    "end": "157020"
  },
  {
    "text": "task, you can have one step, or multiple steps,\ndepending on the order and sequence you put",
    "start": "157020",
    "end": "163640"
  },
  {
    "text": "them in your",
    "start": "163640",
    "end": "164640"
  },
  {
    "text": "files. So a task runs on basically a pod, and\na pod is a single instance of a running process",
    "start": "164640",
    "end": "181300"
  },
  {
    "text": "on your Kubernetes cluster, but we're not going\nto get into pods or clusters today if you",
    "start": "181300",
    "end": "186070"
  },
  {
    "text": "want to take a deeper dive again check out\nthe videos linked below in our description.",
    "start": "186070",
    "end": "191560"
  },
  {
    "text": "So the great thing about tasks is that once\ndefined you can reuse them in any pipeline",
    "start": "191560",
    "end": "197170"
  },
  {
    "text": "you want. So say I have another pipeline that\nI’m working on that's dedicated solely to",
    "start": "197170",
    "end": "202640"
  },
  {
    "text": "testing applications, and I want to use this\ntest task because it has exactly what I’m",
    "start": "202640",
    "end": "207630"
  },
  {
    "text": "trying to do. All I would have to do is reference\nthe task name in my other pipeline, no need",
    "start": "207630",
    "end": "214150"
  },
  {
    "text": "to rewrite anything or duplicate it. All right.\nSo that brings me to the next topic which",
    "start": "214150",
    "end": "220819"
  },
  {
    "start": "218000",
    "end": "267000"
  },
  {
    "text": "is pipelines, and pipelines are a way of further\norganizing your tasks by controlling the execution",
    "start": "220820",
    "end": "233590"
  },
  {
    "text": "of them. Pipelines allow you to organize tasks\nconcurrently or sequentially depending on",
    "start": "233590",
    "end": "242670"
  },
  {
    "text": "the order they're placed. And pipelines and\ntasks are Tekton custom resources that allow",
    "start": "242670",
    "end": "251120"
  },
  {
    "text": "you to control what gets inputted and what\ngets outputted from the tasks. For example,",
    "start": "251120",
    "end": "256430"
  },
  {
    "text": "an input would be the source code of your\napplication that you're running through the",
    "start": "256430",
    "end": "261018"
  },
  {
    "text": "pipeline and an example of an output would\nbe the image produced from your build task.",
    "start": "261019",
    "end": "267330"
  },
  {
    "start": "267000",
    "end": "294000"
  },
  {
    "text": "Okay. So inputs and outputs these are called\npipeline resources and you can define them",
    "start": "267330",
    "end": "272869"
  },
  {
    "text": "in your tasks or your pipelines or you can\nput them in their own file depending how organized",
    "start": "272869",
    "end": "278240"
  },
  {
    "text": "you want to get.",
    "start": "278240",
    "end": "280599"
  },
  {
    "text": "Okay. So pipelines organize the execution of tasks,\ntasks organize the execution of steps, and",
    "start": "280599",
    "end": "288600"
  },
  {
    "text": "steps execute what you're trying to do. How\ncan we automate this process even further?",
    "start": "288600",
    "end": "294869"
  },
  {
    "start": "294000",
    "end": "344000"
  },
  {
    "text": "What fires off our pipeline? So a concept called\na PipelineRun, run triggers our pipeline and",
    "start": "294869",
    "end": "304159"
  },
  {
    "text": "you can declare that in the TriggerTemplate.\nAnd Tekton triggers",
    "start": "304159",
    "end": "314889"
  },
  {
    "text": "allow you to detect and extract information\nfrom events from various sources that allow",
    "start": "314889",
    "end": "322550"
  },
  {
    "text": "you to execute your tasks and pipelines. So\nwhat exactly does that mean? An event, an example",
    "start": "322550",
    "end": "330680"
  },
  {
    "text": "of an event would be let's say we want to\nfire off this pipeline every time one of our",
    "start": "330680",
    "end": "338189"
  },
  {
    "text": "developers",
    "start": "338189",
    "end": "339664"
  },
  {
    "text": "commits changes to the code.",
    "start": "341354",
    "end": "343406"
  },
  {
    "start": "344000",
    "end": "409000"
  },
  {
    "text": "There's a concept called the EventListener",
    "start": "344879",
    "end": "350550"
  },
  {
    "text": "which listens to specific events in this case\nit will be listening to our developer committing",
    "start": "350550",
    "end": "355809"
  },
  {
    "text": "code. Once that happens it will pick it up\nand it'll fire off our pipeline.",
    "start": "355809",
    "end": "361847"
  },
  {
    "text": "All right.",
    "start": "365999",
    "end": "366807"
  },
  {
    "text": "So, as you can see, Tekton, its process is very structured.\nTo put it even more visually each one of these",
    "start": "368570",
    "end": "378798"
  },
  {
    "text": "concepts is just a file. The EventListener,\nthe TriggerTemplate, the pipeline in each",
    "start": "378798",
    "end": "383159"
  },
  {
    "text": "individual task is its own file, a YAML file\nto be exact. And that's one of the biggest",
    "start": "383159",
    "end": "389750"
  },
  {
    "text": "features of Tekton is that it's object oriented,\nit's modular, it makes it very easy to reuse",
    "start": "389750",
    "end": "397169"
  },
  {
    "text": "and customize and organize, and it's super\nflexible. Okay. So I’m going to touch on one",
    "start": "397169",
    "end": "406029"
  },
  {
    "text": "more thing before we get into Jenkins and\nthat is storage. How or where does Tekton store",
    "start": "406029",
    "end": "412879"
  },
  {
    "start": "409000",
    "end": "447000"
  },
  {
    "text": "its CI/CD data? The answer to that is workspaces.\nAll right. So workspaces, or let me back up,",
    "start": "412879",
    "end": "423499"
  },
  {
    "text": "when we think of storage for Tekton think\nof basically a very large file system. Okay.",
    "start": "423499",
    "end": "432039"
  },
  {
    "text": "And workspaces allow tasks to declare part\nof that file system to use for storage. What",
    "start": "432039",
    "end": "439300"
  },
  {
    "text": "are we storing? The inputs and the outputs\nthroughout this whole process. To take it a",
    "start": "439300",
    "end": "444550"
  },
  {
    "text": "step further there's a concept called a Persistent\nVolume Claim, or PVC, which lets you specifically",
    "start": "444550",
    "end": "452710"
  },
  {
    "start": "447000",
    "end": "495000"
  },
  {
    "text": "define the location of that storage volume,\nand it lets tasks share them amongst the process.",
    "start": "452710",
    "end": "459409"
  },
  {
    "text": "And you can typically define these in the\ntrigger template. One more thing that you can",
    "start": "459409",
    "end": "467119"
  },
  {
    "text": "also define in our trigger template is service\naccounts. And service accounts basically handle",
    "start": "467119",
    "end": "472249"
  },
  {
    "text": "secrets, or authentication with Tekton. So you've\ngot passwords, you've got tokens, you've got",
    "start": "472249",
    "end": "479139"
  },
  {
    "text": "SSH keys, and you want to make sure everything\nis secure before you run your steps. ",
    "start": "479139",
    "end": "484124"
  },
  {
    "text": "Tekton runs this credential initialization on each\npod before it executes steps keeping your",
    "start": "484124",
    "end": "490369"
  },
  {
    "text": "whole process secure which is very important.\nAll right. So let's get into Jenkins now that",
    "start": "490369",
    "end": "497649"
  },
  {
    "start": "495000",
    "end": "532000"
  },
  {
    "text": "we've got a good understanding of Tekton.",
    "start": "497649",
    "end": "501899"
  },
  {
    "text": "The biggest difference between the two is\nthat while Tekton runs on Kubernetes, Jenkins",
    "start": "501899",
    "end": "507930"
  },
  {
    "text": "runs on its own servers or VMs,",
    "start": "507930",
    "end": "512607"
  },
  {
    "text": "virtual machines.",
    "start": "514634",
    "end": "516050"
  },
  {
    "text": "So,",
    "start": "520105",
    "end": "521315"
  },
  {
    "text": "a part of Tekton running on Kubernetes means\nthat it's made up of many different languages",
    "start": "522811",
    "end": "529690"
  },
  {
    "text": "like Node, Python, Ruby, Java. Jenkins however,\nis based solely on Java. You might be wondering",
    "start": "529690",
    "end": "538310"
  },
  {
    "start": "532000",
    "end": "562000"
  },
  {
    "text": "how can Jenkins even stand up to Tekton if\nit only supports features written in Java?",
    "start": "538310",
    "end": "543339"
  },
  {
    "text": "The answer to that is plugins. Jenkins plugins\nextend the capability of projects written",
    "start": "543339",
    "end": "550180"
  },
  {
    "text": "in languages other than Java. So say for example,\nyou want to use a version control system like",
    "start": "550180",
    "end": "556680"
  },
  {
    "text": "Github you would need to install the Github\nplugin on your Jenkins machine to work with",
    "start": "556680",
    "end": "562370"
  },
  {
    "start": "562000",
    "end": "595000"
  },
  {
    "text": "it. Super easy to install, there's over a thousand\ndifferent Jenkins plugins and you manage them",
    "start": "562370",
    "end": "568670"
  },
  {
    "text": "and install them through what's called the\nJenkins UI. Similar to Tekton you can work",
    "start": "568670",
    "end": "574410"
  },
  {
    "text": "with Jenkins through the UI or the command\nline, but mostly people use the UI. ",
    "start": "574410",
    "end": "579529"
  },
  {
    "text": "And on the UI is where you can manage your pipelines.",
    "start": "580097",
    "end": "584898"
  },
  {
    "text": "Okay.",
    "start": "586339",
    "end": "587263"
  },
  {
    "text": "So, in that sense it's very similar, but\nwhen it comes to the file structure that's where they differ.",
    "start": "587914",
    "end": "595111"
  },
  {
    "start": "595000",
    "end": "718000"
  },
  {
    "text": "Jenkins stores its configurations\nin what's called a Jenkins file which is one",
    "start": "595772",
    "end": "602298"
  },
  {
    "text": "large file",
    "start": "602999",
    "end": "605508"
  },
  {
    "text": "like so.",
    "start": "607825",
    "end": "608995"
  },
  {
    "text": "So,",
    "start": "610001",
    "end": "611229"
  },
  {
    "text": "going off the same example I used over here,\nyou've got an application that you want to",
    "start": "612229",
    "end": "619250"
  },
  {
    "text": "deploy to production and you want to automate\nthis process, but this time using Jenkins. What",
    "start": "619250",
    "end": "625420"
  },
  {
    "text": "you would do is you'd create a Jenkins file\nand you'd come in here and uh,",
    "start": "625420",
    "end": "629691"
  },
  {
    "text": "I’m going to use this,",
    "start": "629692",
    "end": "631937"
  },
  {
    "text": "you'd come in here and you declare\nyour Jenkins pipeline.",
    "start": "631937",
    "end": "637531"
  },
  {
    "text": "You want to test, make sure there's no errors\nor bugs. You'll want to build it.",
    "start": "638883",
    "end": "644234"
  },
  {
    "text": "And then you'll deploy it. ",
    "start": "645127",
    "end": "646405"
  },
  {
    "text": "And over here in Jenkins they're\nreferred to as stages, ",
    "start": "648168",
    "end": "651777"
  },
  {
    "text": "whereas in Tekton they're tasks.",
    "start": "653249",
    "end": "655649"
  },
  {
    "text": "And within each of these stages you'll have\nyour steps which is really the meat of what ",
    "start": "658594",
    "end": "664630"
  },
  {
    "text": "you're trying to do. It's where you have your\nscripts, your commands, your arguments parameters,",
    "start": "664630",
    "end": "670165"
  },
  {
    "text": "it's held in the steps. So as you can see, looking\nat the structure it's already a little different.",
    "start": "670623",
    "end": "677890"
  },
  {
    "text": "We've got a three-part pipeline defined in\none file while over here we've got about six",
    "start": "677890",
    "end": "683600"
  },
  {
    "text": "different files. So the Jenkins file lets you\nconfigure not only your pipelines but you",
    "start": "683600",
    "end": "690060"
  },
  {
    "text": "can do a lot more other things in here. For\nexample, you can define functions like exporting",
    "start": "690060",
    "end": "696439"
  },
  {
    "text": "archives, or security functions that you want\nto run throughout your process. There is methods,",
    "start": "696439",
    "end": "703860"
  },
  {
    "text": "for example, for authentication there's a method\ncalled credentials where you would",
    "start": "703860",
    "end": "709518"
  },
  {
    "text": "define in here.",
    "start": "709518",
    "end": "711084"
  },
  {
    "text": "And this deals with secrets and authentication.\nFor firing off the pipeline similar to the",
    "start": "713497",
    "end": "722249"
  },
  {
    "start": "718000",
    "end": "748000"
  },
  {
    "text": "event listener and Tekton there's a concept\nin here called webhooks, which is very similar",
    "start": "722249",
    "end": "727930"
  },
  {
    "text": "you would program it to listen to specific\nevents. For example, your developer committing",
    "start": "727930",
    "end": "733010"
  },
  {
    "text": "code changes or creating a pull request, you'd\nyou define it like so,",
    "start": "733010",
    "end": "740220"
  },
  {
    "text": "and once that event happens your webhook\nwould fire off your pipeline.",
    "start": "740220",
    "end": "745277"
  },
  {
    "text": "Okay. ",
    "start": "747208",
    "end": "748243"
  },
  {
    "start": "748000",
    "end": "760000"
  },
  {
    "text": "So storage, conceptually Jenkins and Tekton\nare pretty similar. Jenkins uses file",
    "start": "748801",
    "end": "756689"
  },
  {
    "text": "systems just like Tekton, but when we think\nof storage with Jenkins they organize their",
    "start": "756689",
    "end": "762920"
  },
  {
    "start": "760000",
    "end": "855000"
  },
  {
    "text": "directories a little different. So Jenkins\nhas this home directory called the Jenkins home.",
    "start": "762920",
    "end": "769107"
  },
  {
    "text": "and inside this directory",
    "start": "771072",
    "end": "773042"
  },
  {
    "text": "you'd have a lot of other directories where\nyou'd store your build logs, your configurations,",
    "start": "775939",
    "end": "782209"
  },
  {
    "text": "your artifacts. For example, there's a plugin\ndirectory where you'd store your plugins, or",
    "start": "782209",
    "end": "788850"
  },
  {
    "text": "you'd have a secrets directory where you'd\nstore your secrets, but most importantly I",
    "start": "788850",
    "end": "794509"
  },
  {
    "text": "think the workspace directory is where",
    "start": "794509",
    "end": "799748"
  },
  {
    "text": "you'd work with the most. And the workspace\ndirectory is your working directory wherever",
    "start": "799749",
    "end": "804040"
  },
  {
    "text": "you run your pipelines. So every time you run\na pipeline, it's build generates some artifacts,",
    "start": "804040",
    "end": "812259"
  },
  {
    "text": "which think of it as files or images. It's\nkind of like outputs in Tekton, and you have",
    "start": "812259",
    "end": "818740"
  },
  {
    "text": "these artifacts and you want to use them in\nyour next run or your next stage, and so you've",
    "start": "818740",
    "end": "824290"
  },
  {
    "text": "got to save them in your workspace so that\nthey're not wiped out completely with the",
    "start": "824290",
    "end": "827730"
  },
  {
    "text": "next build. You would do so by storing it in\nyour workspace or archiving it elsewhere. Okay.",
    "start": "827730",
    "end": "837199"
  },
  {
    "text": "So now that we've got a good understanding\nof the two you can kind of see how conceptually",
    "start": "837199",
    "end": "842699"
  },
  {
    "text": "Jenkins and Tekton are very similar. At the\nend of the day they're just trying to automate",
    "start": "842699",
    "end": "847670"
  },
  {
    "text": "the software development life cycle. They're\njust trying to make a developer's life easier",
    "start": "847670",
    "end": "852579"
  },
  {
    "text": "by getting rid of all the manual steps as\nmuch as possible. Let's review a little bit",
    "start": "852579",
    "end": "858959"
  },
  {
    "start": "855000",
    "end": "959000"
  },
  {
    "text": "about what I just went through the biggest\ndifferences. So, the biggest difference is one",
    "start": "858959",
    "end": "865438"
  },
  {
    "text": "Tekton runs on Kubernetes allowing you to\neasily scale your workloads to enterprise",
    "start": "865439",
    "end": "870170"
  },
  {
    "text": "levels. While Jenkins runs on its own servers\nor VMs, it's Java based and it uses plugins",
    "start": "870170",
    "end": "876889"
  },
  {
    "text": "to extend its capability. Number two, Jenkins,\nor sorry Tekton, it organizes each component",
    "start": "876889",
    "end": "885089"
  },
  {
    "text": "of its pipeline into its own file making it\nvery organized and easy to, easy to pinpoint.",
    "start": "885089",
    "end": "893949"
  },
  {
    "text": "While Jenkins uses one large Jenkins file\nto store its configurations and and configure",
    "start": "893949",
    "end": "899970"
  },
  {
    "text": "its pipeline. And then lastly, going off of\nthis file structure the fact that Tekton divides",
    "start": "899970",
    "end": "907188"
  },
  {
    "text": "or organizes each file into its own entity\nit allows it it to be fully portable. So once",
    "start": "907189",
    "end": "913899"
  },
  {
    "text": "defined anybody in your organization can come\nin and reference your pipeline, resource",
    "start": "913899",
    "end": "920319"
  },
  {
    "text": "it, resource and use it in in their own pipeline\nmaking it very efficient for them and not",
    "start": "920319",
    "end": "926149"
  },
  {
    "text": "having them reinvent the wheel every time.\nWhereas Jenkins it's a little less organized",
    "start": "926149",
    "end": "932180"
  },
  {
    "text": "and it's not as easy to pinpoint exactly what\nyou're trying to reuse.",
    "start": "932180",
    "end": "936830"
  },
  {
    "text": "So, I hope that helped.",
    "start": "938279",
    "end": "940000"
  },
  {
    "text": "Thank you so much.",
    "start": "940560",
    "end": "942029"
  },
  {
    "text": "If you have any questions, please drop us a line below.",
    "start": "942353",
    "end": "945198"
  },
  {
    "text": "If you want to see more videos like this in the future, please like and subscribe.",
    "start": "945560",
    "end": "949612"
  },
  {
    "text": "And don't forget, you can grow your skills and earn a badge with IBM CloudLabs, ",
    "start": "949899",
    "end": "954312"
  },
  {
    "text": "which are free browser based interactive Kubernetes labs.",
    "start": "954312",
    "end": "958324"
  }
]