[
  {
    "text": "How do you modernize legacy enterprise applications without breaking anything?",
    "start": "180",
    "end": "4589"
  },
  {
    "text": "Moving to microservices-based architectures may be easier than you think, or at least easier than it was a few years ago.",
    "start": "5340",
    "end": "11670"
  },
  {
    "text": "My name is Maja VukoviÄ‡ and today I will share with you how to use AI to automate application refactoring.",
    "start": "12700",
    "end": "18520"
  },
  {
    "text": "In 2021, we have launched Project CodeNet,",
    "start": "19630",
    "end": "23254"
  },
  {
    "text": "a dataset consisting of over 14 million code samples derived from half a billion lines of code in over 55 languages.",
    "start": "23254",
    "end": "32258"
  },
  {
    "text": "As the community of developers, engineers and researchers grew, there were new additions to the Project CodeNet.",
    "start": "32890",
    "end": "39303"
  },
  {
    "text": "One such advancement is Project Minerva for Modernization.",
    "start": "40240",
    "end": "44767"
  },
  {
    "text": "Project Minerva for Modernization tackles the challenges in automated application refactoring.",
    "start": "53080",
    "end": "58090"
  },
  {
    "text": "So let's take a look.",
    "start": "58510",
    "end": "59559"
  },
  {
    "text": "Typically, enterprise legacy systems have followed a three-tier application architecture,",
    "start": "59950",
    "end": "68290"
  },
  {
    "text": "starting with the top layer being UI, followed by business logic, which talks and interacts with one or more databases.",
    "start": "68290",
    "end": "76630"
  },
  {
    "text": "Within the business logic layer, there are multiple programs and classes",
    "start": "77650",
    "end": "81031"
  },
  {
    "text": " talking and depending on each other, and some of them may no longer be used.",
    "start": "81031",
    "end": "86102"
  },
  {
    "text": "Most of the traditional approaches to application refactoring aim to derive the more microservices architecture.",
    "start": "86980",
    "end": "94579"
  },
  {
    "text": "What does that mean, is that the business logic gets partitioned into multiple microservices,",
    "start": "94600",
    "end": "99909"
  },
  {
    "text": "each of which is meant to be more individual-- stand on its own --so that you can easier detect faults.",
    "start": "99910",
    "end": "105220"
  },
  {
    "text": "It's easier to have individual teams looking after them and it's more easier to manage them once deployed.",
    "start": "105520",
    "end": "111310"
  },
  {
    "text": "Each of them also talks to a separate database.",
    "start": "111610",
    "end": "114069"
  },
  {
    "text": "However, with existing algorithms, what sometimes might happen is that the classes that form these microservices,",
    "start": "115380",
    "end": "124034"
  },
  {
    "text": "they actually might be more tightly coupled, which results in a distributed monolith,",
    "start": "124035",
    "end": "128362"
  },
  {
    "text": "or requires additional rewrite to handle and orchestrate these dependencies.",
    "start": "128363",
    "end": "132690"
  },
  {
    "text": "Similar problems might arise from distributed transactions that get essentially broken as part of the modernization journey.",
    "start": "133170",
    "end": "141749"
  },
  {
    "text": "So with Project Minerva for Modernization, we tackle these challenges.",
    "start": "142590",
    "end": "146399"
  },
  {
    "text": "How does this work in practice?",
    "start": "147300",
    "end": "148979"
  },
  {
    "text": "We bring together innovation from program analysis,",
    "start": "149010",
    "end": "152086"
  },
  {
    "text": "coupled with advances in AI and machine learning to improve the partition quality of microservices.",
    "start": "152087",
    "end": "158310"
  },
  {
    "text": "We all know the complexities of the airline travel and booking the trips.",
    "start": "158850",
    "end": "163259"
  },
  {
    "text": "Let's step step back and look how typically an application would work.",
    "start": "166150",
    "end": "171058"
  },
  {
    "text": "Let's zoom into a couple of classes, such as classes A, B, and C.",
    "start": "171070",
    "end": "175899"
  },
  {
    "text": "Class A is order, Class B is buy ticket action, which calls and relies on the config ticket class.",
    "start": "176590",
    "end": "192300"
  },
  {
    "text": "Now, most of the algorithm, we just observe the call flows between the classes.",
    "start": "193380",
    "end": "198659"
  },
  {
    "text": "It would recommend that order ticket A could be made for microservice one",
    "start": "198860",
    "end": "204642"
  },
  {
    "text": "and that B and C are bundled together in microservice two.",
    "start": "204642",
    "end": "208847"
  },
  {
    "text": "However, as you dig deeper, there's actually a dependency and tight coupling between the two classes.",
    "start": "209700",
    "end": "216801"
  },
  {
    "text": "In the within the heap, they share a couple of objects, such as SQL handler and ticket order.",
    "start": "216801",
    "end": "226099"
  },
  {
    "text": "Moreover, they both write to the same database.",
    "start": "227930",
    "end": "230778"
  },
  {
    "text": "So with the following recommendation, you would actually have to do some work",
    "start": "233410",
    "end": "237029"
  },
  {
    "text": "to remediate that high coupling between--the tight coupling between classes A and B.",
    "start": "237029",
    "end": "242803"
  },
  {
    "text": "And this is where the algorithm Cargo steps in, which is part of the Project Minerva for Modernization.",
    "start": "242836",
    "end": "249459"
  },
  {
    "text": "It actually observes the code and data entanglement and resolves-- remediates --distributed actions.",
    "start": "250020",
    "end": "255909"
  },
  {
    "text": "So based on these observations, Cargo would actually recommend",
    "start": "256149",
    "end": "259703"
  },
  {
    "text": "the classes A and B form one microservice and Class C is separated in another.",
    "start": "259704",
    "end": "265428"
  },
  {
    "text": "It essentially improves the quality of the partition.",
    "start": "265600",
    "end": "268089"
  },
  {
    "text": "Now it might look too simple--there are three classes.",
    "start": "268900",
    "end": "271018"
  },
  {
    "text": "But we all know the complexities of the airline systems.",
    "start": "271018",
    "end": "274660"
  },
  {
    "text": "You have multiple databases, points, users, flights and so on.",
    "start": "274990",
    "end": "279488"
  },
  {
    "text": "You have thousands-- tens of thousands --of classes and multiple interactions.",
    "start": "279700",
    "end": "283810"
  },
  {
    "text": "So you really need a lot of effort to carve out ideal partitions.",
    "start": "284200",
    "end": "289330"
  },
  {
    "text": "We have applied Cargo algorithm on a number of sample applications.And in addition to remediating ",
    "start": "289870",
    "end": "296941"
  },
  {
    "text": "distributed transactions, it also helps lower the latency and increase the throughput.",
    "start": "296941",
    "end": "310199"
  },
  {
    "text": "Moreover, it also improves the quality of the partitions.",
    "start": "314240",
    "end": "317328"
  },
  {
    "text": "What it means, it reduces the coupling and increases the cohesion of microservice partitions.",
    "start": "317600",
    "end": "323299"
  },
  {
    "text": "Cargo need not only be applied to the modernization scenarios.",
    "start": "323750",
    "end": "327649"
  },
  {
    "text": "In fact, Cargo can also help you analyze net-new developed microservices and improve their quality.",
    "start": "327950",
    "end": "333949"
  },
  {
    "text": "With this, I would like to invite you to join Project Minerva for Modernization,",
    "start": "334900",
    "end": "339923"
  },
  {
    "text": "as we soon are going to be launching challenges.",
    "start": "339924",
    "end": "343900"
  },
  {
    "text": "Please join us on this mission on improving and advancing the state of the art in application of refactoring.",
    "start": "344290",
    "end": "350170"
  },
  {
    "text": "Thank you.",
    "start": "350950",
    "end": "351950"
  }
]