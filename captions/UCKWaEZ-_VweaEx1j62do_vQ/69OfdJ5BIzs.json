[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "Hi everyone, my name is Sai Vennam,",
    "start": "510",
    "end": "2020"
  },
  {
    "text": "and I'm a developer advocate with IBM.",
    "start": "2020",
    "end": "4440"
  },
  {
    "text": "Today, I want to talk about Knative,",
    "start": "4440",
    "end": "6600"
  },
  {
    "text": "one of the fastest-growing open source projects",
    "start": "6600",
    "end": "8800"
  },
  {
    "text": "in the cloud-native landscape today.",
    "start": "8800",
    "end": "10920"
  },
  {
    "text": "Knative was recently announced",
    "start": "10920",
    "end": "12520"
  },
  {
    "text": "and was developed by engineers from IBM, Google, and a number of other industry leaders.",
    "start": "12520",
    "end": "17980"
  },
  {
    "text": "Essentially, Knative is a platform installed on top of Kubernetes,",
    "start": "17980",
    "end": "22680"
  },
  {
    "text": "and it essentially brings the capabilities of serverless,",
    "start": "22680",
    "end": "26180"
  },
  {
    "text": "and running serverless workloads, to Kubernetes.",
    "start": "26180",
    "end": "28720"
  },
  {
    "text": "In addition, it provides a number of utilities",
    "start": "28720",
    "end": "31660"
  },
  {
    "text": "that make working with your cloud-native apps on Kubernetes",
    "start": "31660",
    "end": "34760"
  },
  {
    "text": "feel truly native.",
    "start": "34760",
    "end": "37329"
  },
  {
    "start": "37000",
    "end": "76000"
  },
  {
    "text": "I'd say there are three major components",
    "start": "37329",
    "end": "39320"
  },
  {
    "text": "that make up Knative on top of Kubernetes.",
    "start": "39320",
    "end": "43000"
  },
  {
    "text": "So, the first is going to be Build.",
    "start": "43000",
    "end": "47380"
  },
  {
    "text": "Next, we've got Serve.",
    "start": "47380",
    "end": "51740"
  },
  {
    "text": "And finally, we have Event.",
    "start": "51740",
    "end": "56800"
  },
  {
    "text": "These three components are actually called primitives,",
    "start": "56800",
    "end": "60079"
  },
  {
    "text": "and the reason is because they are the building blocks",
    "start": "60080",
    "end": "62720"
  },
  {
    "text": "that make up Knative.",
    "start": "62720",
    "end": "64760"
  },
  {
    "text": "They essentially are what allow it to run serverless workloads",
    "start": "64760",
    "end": "67740"
  },
  {
    "text": "within Kubernetes,",
    "start": "67740",
    "end": "69119"
  },
  {
    "text": "but, in addition, also provide endpoints and tools",
    "start": "69120",
    "end": "72520"
  },
  {
    "text": "to make working with Knative feel more natural, and easy.",
    "start": "72520",
    "end": "76539"
  },
  {
    "start": "76000",
    "end": "166000"
  },
  {
    "text": "So, let's get started with Build.",
    "start": "76550",
    "end": "79620"
  },
  {
    "text": "I like to start with an example.",
    "start": "79620",
    "end": "81760"
  },
  {
    "text": "So, what does every developer need to do",
    "start": "81760",
    "end": "84220"
  },
  {
    "text": "when pushing their application to Kubernetes?",
    "start": "84220",
    "end": "87680"
  },
  {
    "text": "Well, first, they need to start with code, right?",
    "start": "87680",
    "end": "91080"
  },
  {
    "text": "So, every developer has code",
    "start": "91080",
    "end": "93000"
  },
  {
    "text": "- you can imagine it's probably hosted  up on GitHub.",
    "start": "93000",
    "end": "95420"
  },
  {
    "text": "So, we've got that,",
    "start": "95420",
    "end": "97180"
  },
  {
    "text": "and the next thing we want to do",
    "start": "97180",
    "end": "99440"
  },
  {
    "text": "is take that code and turn it into a container.",
    "start": "99440",
    "end": "102100"
  },
  {
    "text": "Because the first step is code,",
    "start": "102100",
    "end": "103659"
  },
  {
    "text": "the second step is always going to be turning it into a container",
    "start": "103660",
    "end": "106320"
  },
  {
    "text": "- something that Kubernetes and Docker,",
    "start": "106320",
    "end": "108100"
  },
  {
    "text": "or whatever container technology you might be using, can understand.",
    "start": "108100",
    "end": "111700"
  },
  {
    "text": "So, to do that,",
    "start": "111700",
    "end": "112960"
  },
  {
    "text": "it might be something really simple like a Docker build.",
    "start": "112960",
    "end": "116600"
  },
  {
    "text": "Or, depending on how complex your build is,",
    "start": "116600",
    "end": "119000"
  },
  {
    "text": "it could be a set of steps to end up with that last,",
    "start": "119000",
    "end": "122740"
  },
  {
    "text": "that final container image.",
    "start": "122740",
    "end": "125400"
  },
  {
    "text": "Once that image is developed",
    "start": "125400",
    "end": "127100"
  },
  {
    "text": "- and, by the way, to actually make that process happen,",
    "start": "127100",
    "end": "130039"
  },
  {
    "text": "you'll need to pull the call down to a local machine",
    "start": "130040",
    "end": "132420"
  },
  {
    "text": "or have something like Travis or Jenkins",
    "start": "132420",
    "end": "135099"
  },
  {
    "text": "make that container build for you.",
    "start": "135100",
    "end": "137659"
  },
  {
    "text": "So, once that's created,",
    "start": "137659",
    "end": "139220"
  },
  {
    "text": "you want to push that to a cloud registry.",
    "start": "139220",
    "end": "144060"
  },
  {
    "text": "Something like Docker Hub or maybe a private image registry.",
    "start": "144060",
    "end": "147720"
  },
  {
    "text": "But, essentially, once it's up there,",
    "start": "147720",
    "end": "149920"
  },
  {
    "text": "Kubernetes is now able to actually find it and deploy it,",
    "start": "149920",
    "end": "153180"
  },
  {
    "text": "and to do that, you'll probably want to create some",
    "start": "153180",
    "end": "156379"
  },
  {
    "text": "much-loved manifest YAML files.",
    "start": "156380",
    "end": "159000"
  },
  {
    "text": "And depending on how complex your deployment is,",
    "start": "159000",
    "end": "162020"
  },
  {
    "text": "you might have multiple YAML files to make that deployment happen.",
    "start": "162020",
    "end": "166200"
  },
  {
    "start": "166000",
    "end": "205000"
  },
  {
    "text": "You can imagine that for a developer who is iteratively developing",
    "start": "166200",
    "end": "169940"
  },
  {
    "text": "on top of Kubernetes,",
    "start": "169940",
    "end": "171600"
  },
  {
    "text": "this is a lot of steps, and it can be quite tedious.",
    "start": "171600",
    "end": "174700"
  },
  {
    "text": "With Knative, we can bring this entire process",
    "start": "174700",
    "end": "180000"
  },
  {
    "text": "onto your Kubernetes cluster.",
    "start": "180000",
    "end": "182380"
  },
  {
    "text": "So, everything from source code management,",
    "start": "182380",
    "end": "187620"
  },
  {
    "text": "complex or custom builds,",
    "start": "187620",
    "end": "191120"
  },
  {
    "text": "or even, if you wanted to,",
    "start": "191120",
    "end": "192860"
  },
  {
    "text": "there's a number of templates out there.",
    "start": "192860",
    "end": "194640"
  },
  {
    "text": "So, for example, if you like Cloud Foundry build packs,",
    "start": "194640",
    "end": "197540"
  },
  {
    "text": "there's a template for that to build your application.",
    "start": "197540",
    "end": "200260"
  },
  {
    "text": "So, with Knative Build, you can do all of that",
    "start": "200260",
    "end": "203400"
  },
  {
    "text": "within your cluster itself.",
    "start": "203400",
    "end": "206019"
  },
  {
    "start": "205000",
    "end": "263000"
  },
  {
    "text": "It makes  it a lot easier for developers doing kind of iterative development,",
    "start": "206020",
    "end": "209900"
  },
  {
    "text": "and especially because all these steps",
    "start": "209900",
    "end": "212659"
  },
  {
    "text": "can be simplified into just a single manifest deployment",
    "start": "212660",
    "end": "215700"
  },
  {
    "text": "- it just becomes faster and becomes more agile to develop applications.",
    "start": "215700",
    "end": "220940"
  },
  {
    "text": "So, we've talked about Build.",
    "start": "220940",
    "end": "222980"
  },
  {
    "text": "The next thing I want to talk about is Serve.",
    "start": "222980",
    "end": "226640"
  },
  {
    "text": "Serve has a very important role here",
    "start": "226640",
    "end": "228740"
  },
  {
    "text": "and I think it's one of the more exciting parts of Knative.",
    "start": "228740",
    "end": "231080"
  },
  {
    "text": "It actually comes with Istio components kind of built-in.",
    "start": "231080",
    "end": "235500"
  },
  {
    "text": "And if you're not familiar with Istio,",
    "start": "235500",
    "end": "237180"
  },
  {
    "text": "check out the link in the description below for more information.",
    "start": "237180",
    "end": "240280"
  },
  {
    "text": "But, to summarize,",
    "start": "240280",
    "end": "242300"
  },
  {
    "text": "Istio comes with a number of capabilities",
    "start": "242300",
    "end": "244880"
  },
  {
    "text": "- things like traffic management, intelligent routing,",
    "start": "244880",
    "end": "247960"
  },
  {
    "text": "automatic scaling, and scale to zero,",
    "start": "247960",
    "end": "251460"
  },
  {
    "text": "which is a pretty cool concept, but, essentially,",
    "start": "251460",
    "end": "254160"
  },
  {
    "text": "with serverless applications, you want to be able to scale up to say maybe 1,000 pods",
    "start": "254160",
    "end": "258760"
  },
  {
    "text": "and then bring it all the way back down to 0 if no one is accessing that service.",
    "start": "258760",
    "end": "263480"
  },
  {
    "start": "263000",
    "end": "318000"
  },
  {
    "text": "So, let's take a look at what a sample service",
    "start": "263480",
    "end": "270180"
  },
  {
    "text": "that's managed by Knative Serve would look like.",
    "start": "270180",
    "end": "273240"
  },
  {
    "text": "So, at the top, we'll start with a service.",
    "start": "273240",
    "end": "277419"
  },
  {
    "text": "And this can be, you know, your traditional kind of microservice,",
    "start": "277420",
    "end": "280920"
  },
  {
    "text": "or it can be a function as well.",
    "start": "280920",
    "end": "284230"
  },
  {
    "text": "So, that service is pointing and managing 2 different things.",
    "start": "284230",
    "end": "287860"
  },
  {
    "text": "It's going to be 1) a Route, and 2) a Config.",
    "start": "287860",
    "end": "294400"
  },
  {
    "text": "There's one really cool thing about Knative Serve that I haven't mentioned yet,",
    "start": "294400",
    "end": "297880"
  },
  {
    "text": "and it's the fact that every time you do a push,",
    "start": "297880",
    "end": "300700"
  },
  {
    "text": "it'll actually keep that revision  stored.",
    "start": "300700",
    "end": "303440"
  },
  {
    "text": "So, let's say we've done a couple pushes to the service.",
    "start": "303440",
    "end": "306940"
  },
  {
    "text": "So, we've got Revision 1 as well as Revision 2.",
    "start": "306940",
    "end": "311460"
  },
  {
    "text": "But Revision 2 is the newer version of the app,",
    "start": "311460",
    "end": "314280"
  },
  {
    "text": "and Config is actually going to  manage both of those.",
    "start": "314280",
    "end": "318660"
  },
  {
    "text": "The Route, essentially, is managing all the traffic,",
    "start": "318660",
    "end": "321620"
  },
  {
    "text": "and it routes them to one, or actually more, of those revisions.",
    "start": "321620",
    "end": "325760"
  },
  {
    "text": "So, using Istio traffic management capabilities,",
    "start": "325760",
    "end": "329240"
  },
  {
    "text": "we could say, let's say, 10% of all traffic gets routed to Revision 2,",
    "start": "329240",
    "end": "334360"
  },
  {
    "text": "and 90% stays on Revision 1.",
    "start": "334360",
    "end": "337719"
  },
  {
    "text": "That way, we can start planning to do a staged rollout",
    "start": "337720",
    "end": "340640"
  },
  {
    "text": "or even do some A/B testing.",
    "start": "340640",
    "end": "343010"
  },
  {
    "text": "So, again, Knative Serve just to kind of summarize,",
    "start": "343010",
    "end": "347400"
  },
  {
    "text": "provides us with snapshots,",
    "start": "347400",
    "end": "351500"
  },
  {
    "text": "it gives us intelligent routing,",
    "start": "351500",
    "end": "356980"
  },
  {
    "text": "as well as scaling.",
    "start": "356980",
    "end": "361840"
  },
  {
    "text": "All really cool features.",
    "start": "361840",
    "end": "363800"
  },
  {
    "text": "I think Build and Serve together are going to be solving a lot of problems",
    "start": "363800",
    "end": "367580"
  },
  {
    "text": "that people might be having when doing CI/CD,",
    "start": "367580",
    "end": "370720"
  },
  {
    "text": "and doing microservice deployment to Kubernetes.",
    "start": "370720",
    "end": "374000"
  },
  {
    "start": "373000",
    "end": "456000"
  },
  {
    "text": "The last thing I want to talk about is Eventing.",
    "start": "374000",
    "end": "376980"
  },
  {
    "text": "This is one of those things that's still work in progress in Knative.",
    "start": "376980",
    "end": "380300"
  },
  {
    "text": "It's one of those projects been released recently",
    "start": "380300",
    "end": "382460"
  },
  {
    "text": "- at the time that we're creating this video it's still a work in progress,",
    "start": "382460",
    "end": "385780"
  },
  {
    "text": "but there are number capabilities that are available.",
    "start": "385780",
    "end": "388760"
  },
  {
    "text": "So, with Eventing,",
    "start": "388760",
    "end": "390080"
  },
  {
    "text": "it's kind of like an integral part of any serverless platform.",
    "start": "390080",
    "end": "393639"
  },
  {
    "text": "You need the ability to create triggers, some sort of event,",
    "start": "393640",
    "end": "396860"
  },
  {
    "text": "that gets responded to by the platform  itself.",
    "start": "396860",
    "end": "399860"
  },
  {
    "text": "Let's say, for example, that you have",
    "start": "399860",
    "end": "402659"
  },
  {
    "text": "a delivery re-routing algorithm",
    "start": "402660",
    "end": "405280"
  },
  {
    "text": "that, anytime inclement weather is detected, you want to trigger that algorithm,",
    "start": "405280",
    "end": "409040"
  },
  {
    "text": "that serverless action.",
    "start": "409040",
    "end": "411040"
  },
  {
    "text": "That's something that Eventing would allow you to set up:  triggers.",
    "start": "411040",
    "end": "417480"
  },
  {
    "text": "Another thing you can do with Eventing",
    "start": "417480",
    "end": "419860"
  },
  {
    "text": "- it's a different use case - but you can kind of hook it into your CI/CD pipeline.",
    "start": "419860",
    "end": "424280"
  },
  {
    "text": "Let's say that once you have this whole flow created,",
    "start": "424280",
    "end": "426860"
  },
  {
    "text": "you want to kick that off automatically anytime there's a new push to master.",
    "start": "426860",
    "end": "430860"
  },
  {
    "text": "Or, maybe anytime there's a new push to master you say 10% of traffic",
    "start": "430860",
    "end": "434460"
  },
  {
    "text": "gets pushed that version of the app.",
    "start": "434460",
    "end": "436539"
  },
  {
    "text": "So, with Eventing, you can make that a reality.",
    "start": "436540",
    "end": "440980"
  },
  {
    "text": "So, creating pipelines with Eventing is also an option.",
    "start": "440980",
    "end": "446040"
  },
  {
    "text": "And as this feature gets kind of more developed, becomes more of robust,",
    "start": "446040",
    "end": "450380"
  },
  {
    "text": "we'll see a number of options and opportunities for taking advantage of Knative Eventing.",
    "start": "450380",
    "end": "456160"
  },
  {
    "start": "456000",
    "end": "478000"
  },
  {
    "text": "So, these three components together are what make Knative so powerful.",
    "start": "456170",
    "end": "461620"
  },
  {
    "text": "Knative is definitely shaping up to be one of the biggest players",
    "start": "461620",
    "end": "464660"
  },
  {
    "text": "in the cloud-native and Kubernetes landscape.",
    "start": "464660",
    "end": "467440"
  },
  {
    "text": "I hope you enjoyed my explanation of Knative today.",
    "start": "467440",
    "end": "470520"
  },
  {
    "text": "Definitely stay tuned for more lightboarding  sessions in the future,",
    "start": "470520",
    "end": "473259"
  },
  {
    "text": "and, again, if you want to learn more,",
    "start": "473260",
    "end": "475120"
  },
  {
    "text": "check out the IBM Cloud  Blog.",
    "start": "475120",
    "end": "477000"
  }
]