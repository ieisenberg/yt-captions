[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "One of my favorite machine learning algorithms is",
    "start": "1430",
    "end": "4828"
  },
  {
    "text": "Generative Adversarial Networks, or GAN.",
    "start": "4829",
    "end": "8227"
  },
  {
    "text": "It pits two AI models off against each other,",
    "start": "9050",
    "end": "12515"
  },
  {
    "text": "hence the \"adversarial\" part.",
    "start": "12515",
    "end": "15980"
  },
  {
    "start": "16000",
    "end": "65000"
  },
  {
    "text": "Now, most machine learning models",
    "start": "16820",
    "end": "19369"
  },
  {
    "text": "are used to generate a prediction.",
    "start": "19370",
    "end": "21920"
  },
  {
    "text": "So we start with some input training data.",
    "start": "22340",
    "end": "25520"
  },
  {
    "text": "And we feed that into our model.",
    "start": "27070",
    "end": "30508"
  },
  {
    "text": "A model then makes a prediction",
    "start": "31430",
    "end": "34250"
  },
  {
    "text": "in the form of output.",
    "start": "34250",
    "end": "37070"
  },
  {
    "text": "And we can compare the predicted output",
    "start": "39020",
    "end": "41994"
  },
  {
    "text": "with the expected output",
    "start": "42046",
    "end": "44274"
  },
  {
    "text": "from the training data set.",
    "start": "44325",
    "end": "46836"
  },
  {
    "text": "And then based upon that expected output",
    "start": "47960",
    "end": "50670"
  },
  {
    "text": "and the actual predicted output,",
    "start": "50721",
    "end": "52805"
  },
  {
    "text": "we can figure out how we should update our model",
    "start": "52806",
    "end": "55826"
  },
  {
    "text": "to create better outputs.",
    "start": "55877",
    "end": "58869"
  },
  {
    "text": "That is an example of supervised learning.",
    "start": "65410",
    "end": "69454"
  },
  {
    "text": "A GAN is an example of unsupervised learning,",
    "start": "70360",
    "end": "74221"
  },
  {
    "text": "it effectively supervises itself,",
    "start": "74271",
    "end": "76596"
  },
  {
    "text": "and it consists of two submodels.",
    "start": "76596",
    "end": "79377"
  },
  {
    "text": "So we have a generator submodel.",
    "start": "80291",
    "end": "86120"
  },
  {
    "text": "And we have a discriminator submodel.",
    "start": "89220",
    "end": "94796"
  },
  {
    "text": "Now, the generator's job is to create",
    "start": "99210",
    "end": "103032"
  },
  {
    "text": "fake input or fake samples.",
    "start": "103033",
    "end": "108629"
  },
  {
    "text": "And the discriminator's job is to take a given sample",
    "start": "113520",
    "end": "120189"
  },
  {
    "text": "and figure out if it is a fake sample",
    "start": "120190",
    "end": "123525"
  },
  {
    "text": "or if it's a real sample from the domain.",
    "start": "123525",
    "end": "126860"
  },
  {
    "text": "And therein lies the adversarial nature of this.",
    "start": "132600",
    "end": "137099"
  },
  {
    "text": "We have a generator creating fake samples",
    "start": "137100",
    "end": "139905"
  },
  {
    "text": "and sending them to a discriminator.",
    "start": "139905",
    "end": "142709"
  },
  {
    "text": "The discriminator is taking a look at a given sample and figuring out,",
    "start": "143100",
    "end": "145829"
  },
  {
    "text": "\"Is this a fake sample from the generator?",
    "start": "145830",
    "end": "148559"
  },
  {
    "text": "Or is this a real sample from the domain set?\"",
    "start": "149220",
    "end": "155129"
  },
  {
    "text": "Now, this sort of scenario is often applied in image generation.",
    "start": "155130",
    "end": "161039"
  },
  {
    "text": "There are images all over the internet of generators",
    "start": "161880",
    "end": "166092"
  },
  {
    "text": "that have been used to create fake 3D models,",
    "start": "166092",
    "end": "168769"
  },
  {
    "text": "fake faces, fake cats and so forth.",
    "start": "168820",
    "end": "172236"
  },
  {
    "text": "So this really works by the generator iterating through",
    "start": "173341",
    "end": "177248"
  },
  {
    "text": "a number of different cycles of creating samples,",
    "start": "177298",
    "end": "180619"
  },
  {
    "text": "updating its model and so forth",
    "start": "180719",
    "end": "182999"
  },
  {
    "text": "until it can create a sample that is so convincing",
    "start": "183099",
    "end": "186122"
  },
  {
    "text": "that it can fool a discriminator and also fool us humans as well.",
    "start": "186272",
    "end": "193016"
  },
  {
    "start": "193000",
    "end": "298000"
  },
  {
    "text": "So let's let's take an example",
    "start": "194330",
    "end": "197720"
  },
  {
    "text": "of how this works with, let's say, a flower.",
    "start": "197720",
    "end": "201110"
  },
  {
    "text": "So we are going to train a generator to create really convincing fake flowers,",
    "start": "201621",
    "end": "208533"
  },
  {
    "text": "and the way that we start by doing this is we need to, first of all,",
    "start": "208633",
    "end": "212400"
  },
  {
    "text": "train our discriminator model to recognize what a picture of a flower looks like.",
    "start": "212507",
    "end": "217060"
  },
  {
    "text": "So our domain is lots of pictures of flowers,",
    "start": "217460",
    "end": "220283"
  },
  {
    "text": "and we will be feeding this into the discriminator model",
    "start": "220334",
    "end": "223754"
  },
  {
    "text": "and telling it to look at all of the attributes",
    "start": "223840",
    "end": "225786"
  },
  {
    "text": "that make up those flower images.",
    "start": "225887",
    "end": "227879"
  },
  {
    "text": "Take a look at the colors, the shading,",
    "start": "228500",
    "end": "230359"
  },
  {
    "text": "the shapes and so forth.",
    "start": "230360",
    "end": "232219"
  },
  {
    "text": "And when our discriminator gets good at recognizing real flowers,",
    "start": "233000",
    "end": "236495"
  },
  {
    "text": "then we'll feed in some shapes that are not flowers at all.",
    "start": "236495",
    "end": "239989"
  },
  {
    "text": "And make sure that it can discriminate those as being not-flowers.",
    "start": "240380",
    "end": "244137"
  },
  {
    "text": "Now, this whole time our generator here was frozen,",
    "start": "245511",
    "end": "248891"
  },
  {
    "text": "it wasn't doing anything.",
    "start": "248991",
    "end": "250071"
  },
  {
    "text": "But we're our discriminator gets good enough at recognizing things from our domain,",
    "start": "250220",
    "end": "254840"
  },
  {
    "text": "then we apply our generator to start creating fake versions of those things.",
    "start": "254891",
    "end": "260951"
  },
  {
    "text": "So a generator is going to take a random input vector",
    "start": "261320",
    "end": "266045"
  },
  {
    "text": "and it is going to use that to create its own fake flower.",
    "start": "266096",
    "end": "273121"
  },
  {
    "text": "Now, this fake flower image is sent to the discriminator,",
    "start": "274080",
    "end": "277051"
  },
  {
    "text": "and now the discriminator has a decision to make:",
    "start": "277205",
    "end": "280175"
  },
  {
    "text": "is that image of a flower the real thing from the domain,",
    "start": "280176",
    "end": "284688"
  },
  {
    "text": "or is it a fake from the generator?",
    "start": "284837",
    "end": "289149"
  },
  {
    "text": "Now, the answer is revealed to both the generator and the discriminator.",
    "start": "290580",
    "end": "296729"
  },
  {
    "text": "The flower was fake and based upon that,",
    "start": "296970",
    "end": "301445"
  },
  {
    "start": "298000",
    "end": "368000"
  },
  {
    "text": "the generator and discriminator will change their behavior.",
    "start": "301496",
    "end": "305459"
  },
  {
    "text": "This is a zero sum game, there's always a winner and a loser.",
    "start": "306120",
    "end": "309899"
  },
  {
    "text": "The winner gets to remain blissfully unchanged.",
    "start": "310260",
    "end": "313649"
  },
  {
    "text": "Their model doesn't change at all,",
    "start": "313650",
    "end": "315128"
  },
  {
    "text": "whereas the loser has to update their model.",
    "start": "315180",
    "end": "317496"
  },
  {
    "text": "So if the discriminator successfully spotted that this flower was a fake image,",
    "start": "317520",
    "end": "322565"
  },
  {
    "text": "then lead discriminator remains unchanged.",
    "start": "322666",
    "end": "326642"
  },
  {
    "text": "But the generator will need to change its model to generate better fakes.",
    "start": "326700",
    "end": "330359"
  },
  {
    "text": "Whereas if the reverse is true",
    "start": "331110",
    "end": "332879"
  },
  {
    "text": "and the generator is creating something that fools the discriminator,",
    "start": "332880",
    "end": "336350"
  },
  {
    "text": "the discriminator model will need to be updated itself",
    "start": "336403",
    "end": "339523"
  },
  {
    "text": "in order to better be able to tell where we have a fake sample coming in,",
    "start": "339524",
    "end": "346831"
  },
  {
    "text": "so it's fooled less easily.",
    "start": "346861",
    "end": "348736"
  },
  {
    "text": "And that's basically how these things work,",
    "start": "349640",
    "end": "352513"
  },
  {
    "text": "and we go through many, many iterations of this",
    "start": "352613",
    "end": "355289"
  },
  {
    "text": "until the generator gets so good that the discriminator can no longer pick out its fakes.",
    "start": "355290",
    "end": "362056"
  },
  {
    "text": "And there we have built a very successful generator to do whatever it is we wanted it to do.",
    "start": "362480",
    "end": "367310"
  },
  {
    "start": "368000",
    "end": "502000"
  },
  {
    "text": "Now, often in terms of images, the generator and the discriminator implemented as CNNs.",
    "start": "369080",
    "end": "378383"
  },
  {
    "text": "These are Convolutional Neural Networks.",
    "start": "378830",
    "end": "381406"
  },
  {
    "text": "CNN's are a great way of recognizing patterns in image data",
    "start": "381860",
    "end": "386970"
  },
  {
    "text": "and entering into sort of the area of object identification.",
    "start": "387021",
    "end": "391281"
  },
  {
    "text": "We have a whole separate video on CNNs, but they're a great way",
    "start": "391700",
    "end": "394556"
  },
  {
    "text": "to really implement the generator and discriminator in this scenario.",
    "start": "394656",
    "end": "399279"
  },
  {
    "text": "But the  whole process of a GAN, isn't just to create really good fake flowers",
    "start": "400011",
    "end": "406977"
  },
  {
    "text": "or fake cat images for the internet.",
    "start": "406977",
    "end": "409128"
  },
  {
    "text": "You can apply it to all sorts of use cases.",
    "start": "409631",
    "end": "411587"
  },
  {
    "text": "So take, for example, video frame prediction.",
    "start": "411920",
    "end": "415579"
  },
  {
    "text": "If we fit in a particular frame of video from a camera,",
    "start": "417190",
    "end": "421726"
  },
  {
    "text": "we can use a GAN to predict what the next frame in this sequence will look like.",
    "start": "421728",
    "end": "426982"
  },
  {
    "text": "This is a great way to be able to predict what's going to happen in the immediate future",
    "start": "427570",
    "end": "431641"
  },
  {
    "text": "and might be used, for example, in a surveillance system.",
    "start": "431792",
    "end": "435194"
  },
  {
    "text": "If we can figure out what is likely to happen next,",
    "start": "435940",
    "end": "438609"
  },
  {
    "text": "we can take some action based upon that.",
    "start": "438610",
    "end": "441279"
  },
  {
    "text": "There's also other things you can do, like image enhancement.",
    "start": "441730",
    "end": "445410"
  },
  {
    "text": "So if we have a kind of a low resolution image,",
    "start": "445422",
    "end": "448350"
  },
  {
    "text": "we can use a GAN to create a much higher resolution version of the image",
    "start": "448451",
    "end": "452912"
  },
  {
    "text": "by figuring out what each individual pixel is",
    "start": "453012",
    "end": "455815"
  },
  {
    "text": "and then creating a higher resolution version of that.",
    "start": "455816",
    "end": "458619"
  },
  {
    "text": "And we can even go as far as using this for things that are not related",
    "start": "459340",
    "end": "462729"
  },
  {
    "text": "to images at all, like encryption.",
    "start": "462730",
    "end": "465344"
  },
  {
    "text": "But we can create a secure encryption algorithm that can be decrypted and encrypted",
    "start": "465522",
    "end": "469422"
  },
  {
    "text": "by the sender and receiver, but cannot be easily intercepted,",
    "start": "469423",
    "end": "473190"
  },
  {
    "text": "again by going through these GAN iterations to create a really good generator.",
    "start": "473241",
    "end": "478154"
  },
  {
    "text": "So that's GAN.",
    "start": "479290",
    "end": "480450"
  },
  {
    "text": "It's the battle of the bots",
    "start": "480791",
    "end": "482560"
  },
  {
    "text": "where you can take your young, impressionable and unchanged generator",
    "start": "482561",
    "end": "486687"
  },
  {
    "text": "and turn it into a master of forgery.",
    "start": "486687",
    "end": "490813"
  },
  {
    "text": "If you have any questions, please drop us a line below.",
    "start": "491380",
    "end": "493870"
  },
  {
    "text": "And if you want to see more videos like this in the future, please like and subscribe.",
    "start": "493870",
    "end": "498550"
  }
]