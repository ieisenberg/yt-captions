[
  {
    "text": "Now stop me if you've heard this one before,",
    "start": "0",
    "end": "1868"
  },
  {
    "text": "but there are a lot of large language models available today,",
    "start": "1868",
    "end": "5371"
  },
  {
    "text": "and they have their own capabilities and specialties.",
    "start": "5372",
    "end": "8708"
  },
  {
    "text": "What if I prefer to use one LLM to interpret some user queries in my business application,",
    "start": "8775",
    "end": "14447"
  },
  {
    "text": "but a whole other LLM to author a response to those queries?",
    "start": "14447",
    "end": "18852"
  },
  {
    "text": "Well, that scenario is exactly what the LangChain caters to.",
    "start": "18952",
    "end": "23957"
  },
  {
    "text": "Langchain as an open source orchestration framework",
    "start": "24057",
    "end": "27192"
  },
  {
    "text": "for the development of applications that use large language models.",
    "start": "27193",
    "end": "31231"
  },
  {
    "text": "And it comes in both Python and JavaScript libraries.",
    "start": "31231",
    "end": "34667"
  },
  {
    "text": "It's it's essentially a generic interface for nearly any LLM.",
    "start": "34667",
    "end": "38972"
  },
  {
    "text": "So you have a centralized development environment ",
    "start": "38972",
    "end": "41074"
  },
  {
    "text": "to build your large language model applications",
    "start": "41074",
    "end": "43827"
  },
  {
    "text": "and then integrate them with stuff",
    "start": "43827",
    "end": "45532"
  },
  {
    "text": "like data sources and software workflows.",
    "start": "45532",
    "end": "48982"
  },
  {
    "text": "Now, when it was launched by Harrison Chase in October 2022,",
    "start": "49082",
    "end": "52619"
  },
  {
    "text": "LangChain enjoyed a meteoric rise,",
    "start": "52652",
    "end": "55043"
  },
  {
    "text": "and by June of the following year,",
    "start": "55043",
    "end": "56687"
  },
  {
    "text": "it was the single fastest growing open source project on GitHub.",
    "start": "56687",
    "end": "60259"
  },
  {
    "text": "And while the LangChain hype train",
    "start": "60393",
    "end": "64226"
  },
  {
    "text": "has slightly cooled a little bit, there's plenty of utility here.",
    "start": "64227",
    "end": "68688"
  },
  {
    "text": "So let's take a look at its components.",
    "start": "68806",
    "end": "72672"
  },
  {
    "text": "So what makes up long chain?",
    "start": "72739",
    "end": "78945"
  },
  {
    "text": "Well, LangChain streamlines the programing of LLM applications",
    "start": "79045",
    "end": "83100"
  },
  {
    "text": "through something called abstractions.",
    "start": "83100",
    "end": "84984"
  },
  {
    "text": "Now, what do I mean by that?",
    "start": "85051",
    "end": "86186"
  },
  {
    "text": "Well, your thermostat that allows you to control the temperature in your home",
    "start": "86186",
    "end": "89788"
  },
  {
    "text": "without needing to understand all the complex circuitry that this entails.",
    "start": "89789",
    "end": "94094"
  },
  {
    "text": "We just set the temperature. That's an abstraction.",
    "start": "94194",
    "end": "96496"
  },
  {
    "text": "So LangChain's abstractions represent common steps",
    "start": "96496",
    "end": "100329"
  },
  {
    "text": "and concepts necessary to work with language models,",
    "start": "100329",
    "end": "103838"
  },
  {
    "text": "and they can be chained together to create applications,",
    "start": "103838",
    "end": "108000"
  },
  {
    "text": "minimizing the amount of code required to execute complex NLP tasks.",
    "start": "108000",
    "end": "112345"
  },
  {
    "text": "So let's start with the LLM module.",
    "start": "112412",
    "end": "118451"
  },
  {
    "text": "Now, nearly any LLM can be used in LangChain.",
    "start": "118518",
    "end": "122187"
  },
  {
    "text": "You just need an API key.",
    "start": "122188",
    "end": "124424"
  },
  {
    "text": "The LLM class is designed to provide a standard interface for all models,",
    "start": "124424",
    "end": "128427"
  },
  {
    "text": "so pick an LLM of your choice.",
    "start": "128428",
    "end": "130662"
  },
  {
    "text": "Be that a closed source one like GPT-4 or an open source one like Llama 2,",
    "start": "130763",
    "end": "136870"
  },
  {
    "text": "or, this being LangChain, pick both.",
    "start": "136870",
    "end": "140440"
  },
  {
    "text": "Okay, what else we got?",
    "start": "140540",
    "end": "142441"
  },
  {
    "text": "We have prompts.",
    "start": "142442",
    "end": "145845"
  },
  {
    "text": "Now prompts are the instructions given to a large language model",
    "start": "145945",
    "end": "149415"
  },
  {
    "text": "and the prompt template class in LangChain",
    "start": "149415",
    "end": "152269"
  },
  {
    "text": "formalizes the composition of prompts",
    "start": "152269",
    "end": "154163"
  },
  {
    "text": "without the need to manually hard code context and queries.",
    "start": "154163",
    "end": "158390"
  },
  {
    "text": "A prompt template can contain instructions like,",
    "start": "158560",
    "end": "161747"
  },
  {
    "text": "\"Do not use technical terms in your response\".",
    "start": "161747",
    "end": "163913"
  },
  {
    "text": "That would be a good one.",
    "start": "163913",
    "end": "165176"
  },
  {
    "text": "Or it could be a set of examples to guide its responses.",
    "start": "165176",
    "end": "168135"
  },
  {
    "text": "That's called few-shot prompting.",
    "start": "168135",
    "end": "169877"
  },
  {
    "text": "Or it could specify an output format.",
    "start": "169877",
    "end": "172169"
  },
  {
    "text": "Now, chains, as the name implies,",
    "start": "172939",
    "end": "177976"
  },
  {
    "text": "are the core of the LangChain's workflows.",
    "start": "178077",
    "end": "180612"
  },
  {
    "text": "They combine LLMs with other components,",
    "start": "180613",
    "end": "183298"
  },
  {
    "text": "creating applications by executing a sequence of functions.",
    "start": "183298",
    "end": "186352"
  },
  {
    "text": "So let's say a application that needs to, first of all, retrieve data from a website,",
    "start": "186386",
    "end": "191457"
  },
  {
    "text": "then it needs to summarize the text it gets back,",
    "start": "191457",
    "end": "194546"
  },
  {
    "text": "and then finally it needs to use that summary to answer user submitted questions.",
    "start": "194546",
    "end": "199166"
  },
  {
    "text": "That's a sequential chain where the output of one function",
    "start": "199199",
    "end": "203279"
  },
  {
    "text": "acts as the input to the next, and",
    "start": "203279",
    "end": "205278"
  },
  {
    "text": "each function in the chain could use different prompts,",
    "start": "205278",
    "end": "208274"
  },
  {
    "text": "different parameters, and even different models.",
    "start": "208274",
    "end": "211884"
  },
  {
    "text": "Now, to achieve certain tasks,",
    "start": "212378",
    "end": "214017"
  },
  {
    "text": "LLMs might need to access specific external data sources",
    "start": "214017",
    "end": "218137"
  },
  {
    "text": "that are not included in the training data set of the LLM itself.",
    "start": "218137",
    "end": "223122"
  },
  {
    "text": "So things like internal documents or emails that sort of thing.",
    "start": "223223",
    "end": "227060"
  },
  {
    "text": "Now, LangChain collectively refers to this sort of documentation as indexes,",
    "start": "227160",
    "end": "233568"
  },
  {
    "text": "and there are a number of them.",
    "start": "233568",
    "end": "236036"
  },
  {
    "text": "So let's take a look at a few.",
    "start": "236102",
    "end": "238504"
  },
  {
    "text": "Now, one of them is called a document loader,",
    "start": "238504",
    "end": "244493"
  },
  {
    "text": "and the document loaders, they work with third party applications",
    "start": "245878",
    "end": "248700"
  },
  {
    "text": "for importing data sources from sources like file storage services.",
    "start": "248700",
    "end": "252690"
  },
  {
    "text": "So think Dropbox or Google Drive,",
    "start": "252690",
    "end": "256122"
  },
  {
    "text": "or web content, from like YouTube transcripts,",
    "start": "256222",
    "end": "259691"
  },
  {
    "text": "or collaboration tools like Airtable, or databases like Pandas and MongoDB.",
    "start": "259792",
    "end": "265134"
  },
  {
    "text": "There's also support for vector databases as well.",
    "start": "265665",
    "end": "272138"
  },
  {
    "text": "Now, unlike traditional structured databases,",
    "start": "272205",
    "end": "275621"
  },
  {
    "text": "vector databases represent data points by converting them into something called vector embeddings,",
    "start": "275622",
    "end": "280424"
  },
  {
    "text": " which are numerical representations in the form of vectors with a fixed number of dimensions.",
    "start": "280424",
    "end": "284817"
  },
  {
    "text": "And you can store a lot of information in this format",
    "start": "284817",
    "end": "287986"
  },
  {
    "text": "as it's a very efficient means of retrieval.",
    "start": "287986",
    "end": "291624"
  },
  {
    "text": "There are also something called text splitters,",
    "start": "291691",
    "end": "296396"
  },
  {
    "text": "which can be very useful as well",
    "start": "296396",
    "end": "298916"
  },
  {
    "text": "because they can split text up into small, semantically meaningful chunks",
    "start": "298916",
    "end": "303000"
  },
  {
    "text": "that can then be combined using the methods and parameters of your choosing.",
    "start": "303000",
    "end": "306593"
  },
  {
    "text": "Now, LLMs, by default, don't really have any long term memory of prior conversations,",
    "start": "307206",
    "end": "312512"
  },
  {
    "text": "and unless you happen to pass the chat history in as an input to your query.",
    "start": "312512",
    "end": "317116"
  },
  {
    "text": "But LangChain solves this problem",
    "start": "317216",
    "end": "319519"
  },
  {
    "text": "with simple utilities for adding in memory into your application,",
    "start": "319519",
    "end": "326359"
  },
  {
    "text": "and you have options for retaining like the entire conversations,",
    "start": "326459",
    "end": "330617"
  },
  {
    "text": "through to options to just retain a summarization that the conversation that we've had so far.",
    "start": "330617",
    "end": "336502"
  },
  {
    "text": "And then finally the last one will look at are agents.",
    "start": "336736",
    "end": "341574"
  },
  {
    "text": "Now, agents can use a given language model as a reasoning engine",
    "start": "341641",
    "end": "345762"
  },
  {
    "text": "to determine which actions to take.",
    "start": "345762",
    "end": "348414"
  },
  {
    "text": "And when building a chain for an agent,",
    "start": "348481",
    "end": "350267"
  },
  {
    "text": "you'll want to include inputs like a list of the available tools that you should use,",
    "start": "350267",
    "end": "354820"
  },
  {
    "text": "the user input like the prompts and the queries,",
    "start": "354887",
    "end": "357341"
  },
  {
    "text": "and then any other relevant previously executed steps.",
    "start": "357341",
    "end": "360760"
  },
  {
    "text": "So how can we put all of this to work for our applications?",
    "start": "360860",
    "end": "366698"
  },
  {
    "text": "Well, let's talk about a few LangChain use cases.",
    "start": "366699",
    "end": "369854"
  },
  {
    "text": "Now, obviously we have chatbots.",
    "start": "369854",
    "end": "373339"
  },
  {
    "text": "LangChain can be used to provide proper context for the specific use of a chatbot",
    "start": "373439",
    "end": "379572"
  },
  {
    "text": "and to integrate chat bots into existing communication channels and workflows with their own APIs.",
    "start": "379572",
    "end": "385820"
  },
  {
    "text": "We also have summarization.",
    "start": "386452",
    "end": "388788"
  },
  {
    "text": "Language models can be tasked with summarizing many types of text",
    "start": "388788",
    "end": "392742"
  },
  {
    "text": "from breaking down complex academic papers and transcripts,",
    "start": "392742",
    "end": "396505"
  },
  {
    "text": "to providing just a digest of incoming emails.",
    "start": "396505",
    "end": "400491"
  },
  {
    "text": "Processing lots of examples where this is used for question answering.",
    "start": "400867",
    "end": "404696"
  },
  {
    "text": "So using specific documents or specialized knowledge bases,",
    "start": "404696",
    "end": "408307"
  },
  {
    "text": "LLMs can retrieve the relevant information from the storage and then articulate",
    "start": "408374",
    "end": "412111"
  },
  {
    "text": "helpful answers using the information that would otherwise not have been in their training dataset.",
    "start": "412111",
    "end": "418084"
  },
  {
    "text": "And, yeah, this is a good one, data augmentation.",
    "start": "418151",
    "end": "421753"
  },
  {
    "text": "LLMs can be used to generate synthetic data for use in machine learning.",
    "start": "421753",
    "end": "426146"
  },
  {
    "text": "So, for example, a LLM can be trained to generate additional samples",
    "start": "426146",
    "end": "430222"
  },
  {
    "text": "that closely resemble the real data points in a training dataset.",
    "start": "430222",
    "end": "434457"
  },
  {
    "text": "And there are, of course, virtual agents, as we already started to discuss.",
    "start": "434901",
    "end": "440055"
  },
  {
    "text": "Integrating with the right workflows,",
    "start": "440055",
    "end": "442535"
  },
  {
    "text": "LangChain's agent modules can use an LLM to autonomously determine the next steps,",
    "start": "442535",
    "end": "446979"
  },
  {
    "text": "and then take the action that it needs to complete that step",
    "start": "447046",
    "end": "450139"
  },
  {
    "text": "using something called RPA, or robotic process automation.",
    "start": "450140",
    "end": "454527"
  },
  {
    "text": "LangChain is open source and free to use.",
    "start": "454954",
    "end": "457523"
  },
  {
    "text": "There are also related frameworks like LangServe for creating chains as REST APIs",
    "start": "457523",
    "end": "462128"
  },
  {
    "text": "and then LangSmith, which provides tools to monitor, evaluate and debug applications.",
    "start": "462128",
    "end": "466931"
  },
  {
    "text": "Essentially LangChain's tools and APIs",
    "start": "466931",
    "end": "470493"
  },
  {
    "text": "simplify the process of building applications",
    "start": "470493",
    "end": "473579"
  },
  {
    "text": "that make use of large language models.",
    "start": "473579",
    "end": "476830"
  },
  {
    "text": "If you have any questions, please drop us a line below",
    "start": "477410",
    "end": "480016"
  },
  {
    "text": "and if you want to see more videos like this in the future,",
    "start": "480016",
    "end": "483031"
  },
  {
    "text": "please like and subscribe.",
    "start": "483032",
    "end": "485125"
  },
  {
    "text": "Thanks for watching.",
    "start": "485314",
    "end": "486207"
  }
]