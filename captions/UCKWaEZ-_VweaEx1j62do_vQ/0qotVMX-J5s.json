[
  {
    "text": "Hi everyone, my name is Sai Vennam,",
    "start": "200",
    "end": "1780"
  },
  {
    "text": "and I'm a developer advocate with IBM.",
    "start": "1780",
    "end": "4000"
  },
  {
    "text": "Today, I want to talk about containerization.",
    "start": "4000",
    "end": "6420"
  },
  {
    "text": "Whenever I mention containers,",
    "start": "6420",
    "end": "7780"
  },
  {
    "text": "most people tend to default to something like Docker",
    "start": "7780",
    "end": "10280"
  },
  {
    "text": "- or even Kubernetes these days,",
    "start": "10280",
    "end": "12040"
  },
  {
    "text": "but container technology has actually been around for quite some time.",
    "start": "12040",
    "end": "15260"
  },
  {
    "text": "It was actually back in 2008",
    "start": "15260",
    "end": "16780"
  },
  {
    "text": "that the Linux kernel introduced C-groups, or \"control groups\",",
    "start": "16780",
    "end": "20560"
  },
  {
    "text": "which paved the way for all the different container technologies we see today.",
    "start": "20560",
    "end": "24779"
  },
  {
    "text": "So, that includes Docker, but also things like Cloud Foundry,",
    "start": "24780",
    "end": "28199"
  },
  {
    "text": "as well as Rocket and other container runtimes out there.",
    "start": "28199",
    "end": "31560"
  },
  {
    "text": "Let's get started with an example.",
    "start": "31560",
    "end": "33340"
  },
  {
    "text": "We'll say that I'm a developer,",
    "start": "33340",
    "end": "35380"
  },
  {
    "text": "and I've created a Node.js application,",
    "start": "35380",
    "end": "40360"
  },
  {
    "text": "and I want to push it into production.",
    "start": "40360",
    "end": "43200"
  },
  {
    "text": "We'll take 2 different form factors to kind of explain",
    "start": "43200",
    "end": "45240"
  },
  {
    "text": "the advantages of containerization.",
    "start": "45240",
    "end": "47580"
  },
  {
    "text": "First, we'll talk about VMs",
    "start": "47580",
    "end": "50400"
  },
  {
    "text": "and then we'll talk about containers.",
    "start": "50400",
    "end": "56640"
  },
  {
    "text": "So, first things first,",
    "start": "56640",
    "end": "58239"
  },
  {
    "text": "let's introduce some of the things that we've got here.",
    "start": "58240",
    "end": "60240"
  },
  {
    "text": "So, we've got the hardware itself,",
    "start": "60240",
    "end": "62500"
  },
  {
    "text": "which is the big box.",
    "start": "62500",
    "end": "64239"
  },
  {
    "text": "We've got the host operating system,",
    "start": "64240",
    "end": "69860"
  },
  {
    "text": "as well as a hypervisor.",
    "start": "69860",
    "end": "71660"
  },
  {
    "text": "The hypervisor is actually what allows us to spin up VMs.",
    "start": "71660",
    "end": "75820"
  },
  {
    "text": "Let's take a look at the shared pool of resources",
    "start": "75820",
    "end": "79380"
  },
  {
    "text": "with the host OS and hypervisor.",
    "start": "79380",
    "end": "81219"
  },
  {
    "text": "We can assume that some of these resources have already been consumed.",
    "start": "81220",
    "end": "86140"
  },
  {
    "text": "Next, let's go ahead and take this .js application and push it in.",
    "start": "86140",
    "end": "90060"
  },
  {
    "text": "And to do that, I need a Linux VM.",
    "start": "90060",
    "end": "93112"
  },
  {
    "text": "So, let's go ahead and sketch out that Linux VM.",
    "start": "93112",
    "end": "98340"
  },
  {
    "text": "And in this VM, there's a few things to note here.",
    "start": "98340",
    "end": "101380"
  },
  {
    "text": "So, we've got another operating system in addition to the host OS",
    "start": "101380",
    "end": "104920"
  },
  {
    "text": "it's going to be the guest OS.",
    "start": "104920",
    "end": "106720"
  },
  {
    "text": "As well as some binaries and libraries.",
    "start": "106720",
    "end": "109820"
  },
  {
    "text": "So, that's one of the things about Linux VMs:",
    "start": "109820",
    "end": "111940"
  },
  {
    "text": "even though we're working with the really lightweight application,",
    "start": "111940",
    "end": "114800"
  },
  {
    "text": "to create that Linux VM,",
    "start": "114800",
    "end": "116780"
  },
  {
    "text": "we have to put that guest OS in there and a set of binaries and libraries.",
    "start": "116780",
    "end": "120619"
  },
  {
    "text": "And so, that really bloats it out.",
    "start": "120620",
    "end": "122300"
  },
  {
    "text": "In fact, I think the smallest Node.js VM that I've seen out there is over 400 MB.",
    "start": "122300",
    "end": "127960"
  },
  {
    "text": "Whereas the Node.js runtime app itself would be under 15.",
    "start": "127960",
    "end": "132620"
  },
  {
    "text": "So, we've got that,",
    "start": "132620",
    "end": "135140"
  },
  {
    "text": "and we go ahead and let's push that .js application into it,",
    "start": "135140",
    "end": "138819"
  },
  {
    "text": "and just by doing that alone,",
    "start": "138820",
    "end": "140700"
  },
  {
    "text": "we're going to consume a set of resources.",
    "start": "140700",
    "end": "145020"
  },
  {
    "text": "Next, let's think about scaling this out.",
    "start": "145020",
    "end": "149020"
  },
  {
    "text": "So, we'll create 2 additional copies of it.",
    "start": "149020",
    "end": "152740"
  },
  {
    "text": "And you'll notice that even though it's the exact same application,",
    "start": "152740",
    "end": "156320"
  },
  {
    "text": "we have to use and deploy that separate guest OS and libraries every time.",
    "start": "156320",
    "end": "161760"
  },
  {
    "text": "And so, we'll do that 3 times.",
    "start": "161760",
    "end": "164540"
  },
  {
    "text": "By doing that,",
    "start": "164540",
    "end": "166239"
  },
  {
    "text": "essentially, we can assume that for this particular hardware,",
    "start": "166240",
    "end": "170240"
  },
  {
    "text": "we've consumed all of the resources.",
    "start": "170240",
    "end": "174160"
  },
  {
    "text": "There's another thing that I haven't mentioned here:",
    "start": "174160",
    "end": "176380"
  },
  {
    "text": "this .js application, I developed on my MacBook.",
    "start": "176380",
    "end": "180060"
  },
  {
    "text": "So, when I pushed it into production to get it going in the VM,",
    "start": "180060",
    "end": "183260"
  },
  {
    "text": "I noticed that there were some issues and incompatibilities.",
    "start": "183260",
    "end": "185959"
  },
  {
    "text": "This is the kind of foundation for a big \"he said, she said\" issue,",
    "start": "185960",
    "end": "190180"
  },
  {
    "text": "where things might be working on your local machine",
    "start": "190180",
    "end": "192859"
  },
  {
    "text": "and work great, but when you try to push it into production,",
    "start": "192860",
    "end": "195220"
  },
  {
    "text": "things start to break.",
    "start": "195220",
    "end": "196280"
  },
  {
    "text": "This really gets in the way of doing Agile DevOps and continuous integration and delivery.",
    "start": "196280",
    "end": "201860"
  },
  {
    "text": "That's solved when you use something like containers.",
    "start": "201860",
    "end": "205220"
  },
  {
    "text": "There's a 3-step process when doing anything container-related",
    "start": "205220",
    "end": "209160"
  },
  {
    "text": "and pushing or creating containers.",
    "start": "209160",
    "end": "211740"
  },
  {
    "text": "And, it almost always starts with, first, some sort of a manifest.",
    "start": "211740",
    "end": "216180"
  },
  {
    "text": "So, something that describes the container itself.",
    "start": "216180",
    "end": "219920"
  },
  {
    "text": "So, in the Docker world, this would be something like a Dockerfile,",
    "start": "219920",
    "end": "222739"
  },
  {
    "text": "and in Cloud Foundry, this would be a manifest YAML.",
    "start": "222739",
    "end": "225700"
  },
  {
    "text": "Next, what you'll do is create the actual image itself.",
    "start": "225700",
    "end": "229140"
  },
  {
    "text": "So, for the image,",
    "start": "229140",
    "end": "230680"
  },
  {
    "text": "if you're working with something like Docker,",
    "start": "230680",
    "end": "234099"
  },
  {
    "text": "that would be a Docker image.",
    "start": "234100",
    "end": "237100"
  },
  {
    "text": "If you're working with Rocket, it would be an ACI (or, \"Application Container Image\").",
    "start": "237100",
    "end": "240840"
  },
  {
    "text": "So, regardless of the different containerization technologies,",
    "start": "240840",
    "end": "244620"
  },
  {
    "text": "this process stays the same.",
    "start": "244620",
    "end": "246360"
  },
  {
    "text": "The last thing you end up with is an actual container itself,",
    "start": "246360",
    "end": "250080"
  },
  {
    "text": "which contains all of the runtimes and libraries and binaries needed",
    "start": "250080",
    "end": "253800"
  },
  {
    "text": "to run an application.",
    "start": "253800",
    "end": "255760"
  },
  {
    "text": "That application runs on a very similar setup to the VMs,",
    "start": "255760",
    "end": "260040"
  },
  {
    "text": "but what  we've got on this side is,",
    "start": "260040",
    "end": "261739"
  },
  {
    "text": "again, a host operating system.",
    "start": "261740",
    "end": "264919"
  },
  {
    "text": "The difference here is, instead of a hypervisor,",
    "start": "264920",
    "end": "266780"
  },
  {
    "text": "we're going to have something like a runtime engine.",
    "start": "266780",
    "end": "269520"
  },
  {
    "text": "So, if you're using Docker, this would be the Docker Engine,",
    "start": "269520",
    "end": "276220"
  },
  {
    "text": "and, you know, different containerization  technologies would have a different engine.",
    "start": "276220",
    "end": "280100"
  },
  {
    "text": "Regardless, it's something that runs those containers.",
    "start": "280100",
    "end": "283040"
  },
  {
    "text": "Again, we've got this shared pool of resources;",
    "start": "283040",
    "end": "285640"
  },
  {
    "text": "so we can assume that that alone consumes some set of resources.",
    "start": "285640",
    "end": "291660"
  },
  {
    "text": "Next, let's think about actually containerizing this technology.",
    "start": "291660",
    "end": "294660"
  },
  {
    "text": "So, we talked about the 3-step process:",
    "start": "294660",
    "end": "296340"
  },
  {
    "text": "we create a Dockerfile,",
    "start": "296340",
    "end": "298080"
  },
  {
    "text": "we build out the image,",
    "start": "298080",
    "end": "299500"
  },
  {
    "text": "we push it to a registry, and we have our container,",
    "start": "299500",
    "end": "301640"
  },
  {
    "text": "and we can start pushing this out as containers.",
    "start": "301640",
    "end": "304380"
  },
  {
    "text": "The great thing is, these going to be much more lightweight.",
    "start": "304380",
    "end": "307740"
  },
  {
    "text": "So, deploying out multiple containers",
    "start": "307740",
    "end": "313139"
  },
  {
    "text": "- since you don't have to worry about a guest OS this time,",
    "start": "313140",
    "end": "317680"
  },
  {
    "text": "you really just have the libraries as well as the application itself.",
    "start": "317680",
    "end": "322680"
  },
  {
    "text": "So, we scale that out 3 times,",
    "start": "322680",
    "end": "324780"
  },
  {
    "text": "and because we don't have to duplicate all of those",
    "start": "324780",
    "end": "327840"
  },
  {
    "text": "operating system dependencies and create bloated VMs,",
    "start": "327840",
    "end": "331160"
  },
  {
    "text": "we actually will use less resources.",
    "start": "331160",
    "end": "333680"
  },
  {
    "text": "So, let's use a different color here.",
    "start": "333680",
    "end": "337900"
  },
  {
    "text": "And, scaling that out 3 times,",
    "start": "337900",
    "end": "341840"
  },
  {
    "text": "we still have a good amount of resources left.",
    "start": "341840",
    "end": "344840"
  },
  {
    "text": "Next, let's say that my coworker decides,",
    "start": "344840",
    "end": "347100"
  },
  {
    "text": "\"Hey for this .js application, let's take advantage of a third-party,",
    "start": "347100",
    "end": "351500"
  },
  {
    "text": "let's say, a cognitive API to do something",
    "start": "351500",
    "end": "354040"
  },
  {
    "text": "like image recognition.\"",
    "start": "354040",
    "end": "355300"
  },
  {
    "text": "So, let's say that we've got our third-party service,",
    "start": "355300",
    "end": "361240"
  },
  {
    "text": "and we want to access that using maybe a Python application.",
    "start": "361240",
    "end": "366000"
  },
  {
    "text": "So, he's created that service that accesses the third-party APIs,",
    "start": "366000",
    "end": "370940"
  },
  {
    "text": "and with our Node.js application, we want to access that Python application",
    "start": "370940",
    "end": "375820"
  },
  {
    "text": "to then access that service.",
    "start": "375820",
    "end": "378700"
  },
  {
    "text": "If we wanted to do this in VMs, I'm really tempted to basically create a VM",
    "start": "378700",
    "end": "383900"
  },
  {
    "text": "out of both the .js application",
    "start": "383900",
    "end": "385960"
  },
  {
    "text": "and the Python application",
    "start": "385960",
    "end": "387639"
  },
  {
    "text": "because that would allow me to continue to use the VMs that I have.",
    "start": "387640",
    "end": "391880"
  },
  {
    "text": "But that's not truly cloud-native, right?",
    "start": "391880",
    "end": "393680"
  },
  {
    "text": "Because if I wanted to scale out the .js but not the Python app,",
    "start": "393680",
    "end": "397400"
  },
  {
    "text": "I wouldn't be able to if they're running in the same VM.",
    "start": "397400",
    "end": "400220"
  },
  {
    "text": "So, to do it in a truly cloud-native way,",
    "start": "400220",
    "end": "402760"
  },
  {
    "text": "I would have to free up some of these resources",
    "start": "402760",
    "end": "405740"
  },
  {
    "text": "- basically, get rid of one of these VMs,",
    "start": "405740",
    "end": "407819"
  },
  {
    "text": "and then deploy the Python application in it instead.",
    "start": "407820",
    "end": "410860"
  },
  {
    "text": "And, that's not ideal.",
    "start": "410860",
    "end": "413860"
  },
  {
    "text": "But with the container-based approach, what we can do is simply say,",
    "start": "413860",
    "end": "417979"
  },
  {
    "text": "since we're modular, we can say,",
    "start": "417980",
    "end": "419800"
  },
  {
    "text": "\"OK, just deploy one copy of the Python application\".",
    "start": "419800",
    "end": "426580"
  },
  {
    "text": "So, we'll go ahead and do that in a different color here.",
    "start": "426580",
    "end": "431240"
  },
  {
    "text": "And that consumes a little bit more resources.",
    "start": "431240",
    "end": "434180"
  },
  {
    "text": "Then, with those remaining resources,",
    "start": "434180",
    "end": "437460"
  },
  {
    "text": "the great thing about container technology,",
    "start": "437460",
    "end": "439280"
  },
  {
    "text": "that actually becomes shared between all the processes running.",
    "start": "439280",
    "end": "442600"
  },
  {
    "text": "In fact, another advantage:",
    "start": "442600",
    "end": "443960"
  },
  {
    "text": "if these container processes aren't actually utilizing the CPU or memory,",
    "start": "443960",
    "end": "449979"
  },
  {
    "text": "all of those shared resources become accessible",
    "start": "449980",
    "end": "453080"
  },
  {
    "text": "for the other containers running within that hardware.",
    "start": "453080",
    "end": "458060"
  },
  {
    "text": "So, with container-based technology,",
    "start": "458060",
    "end": "460380"
  },
  {
    "text": "we can truly take advantage of cloud-native-based architectures.",
    "start": "460380",
    "end": "463640"
  },
  {
    "text": "So, we talked about things like portability of the containers;",
    "start": "463640",
    "end": "466640"
  },
  {
    "text": "talked about how it's easier to scale them out;",
    "start": "466640",
    "end": "468840"
  },
  {
    "text": "and then, overall, with this three-step process and the way we push containers,",
    "start": "468840",
    "end": "472860"
  },
  {
    "text": "it allows for more Agile DevOps and continuous integration and delivery.",
    "start": "472860",
    "end": "477159"
  },
  {
    "text": "Thanks for tuning in for this broad overview of container-based technology.",
    "start": "477160",
    "end": "480840"
  },
  {
    "text": "As always, we're looking for feedback so definitely drop a comment below,",
    "start": "480840",
    "end": "484360"
  },
  {
    "text": "and be sure to subscribe to stay tuned for more videos in the future.",
    "start": "484360",
    "end": "487560"
  },
  {
    "text": "Thank you.",
    "start": "487560",
    "end": "488240"
  }
]