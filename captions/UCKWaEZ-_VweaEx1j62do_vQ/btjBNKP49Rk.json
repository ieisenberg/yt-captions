[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "When it comes to picking a relational database, you might find yourself comparing two options  ",
    "start": "240",
    "end": "6120"
  },
  {
    "text": "PostgreSQL and MySQL. And this isn't an easy decision as there are many similarities between  ",
    "start": "6120",
    "end": "13139"
  },
  {
    "text": "them, but give me a couple of minutes and I think I can guide you in the right direction. Oh, and I  ",
    "start": "13140",
    "end": "20640"
  },
  {
    "text": "have a joke to share about PostgreSQL and MySQL written by Artificial Intelligence. You won't  ",
    "start": "20640",
    "end": "28619"
  },
  {
    "text": "want to miss it. So before we explore how they are different, let's briefly ask how PostgreSQL,  ",
    "start": "28620",
    "end": "34020"
  },
  {
    "start": "29000",
    "end": "90000"
  },
  {
    "text": "also known as PostgreSQL and MySQL, are similar because they do share a number of similarities.  ",
    "start": "34620",
    "end": "43920"
  },
  {
    "text": "For example, both are relational database management systems. Relational database management  ",
    "start": "44640",
    "end": "52920"
  },
  {
    "text": "systems RDBMS, which means they organize data into tables. Both rely on sequel or structured  ",
    "start": "53700",
    "end": "62760"
  },
  {
    "text": "query language, which is the standard language for interaction with management systems. With sequel,  ",
    "start": "62760",
    "end": "69240"
  },
  {
    "text": "analysts don't need to know where a given table is, like, for example, and order table. We don't  ",
    "start": "69240",
    "end": "74460"
  },
  {
    "text": "need to know where it resides on disk or how to perform a look up to find a specific order in  ",
    "start": "74460",
    "end": "79140"
  },
  {
    "text": "that table, or how to connect that order table to another table like a customer table together  ",
    "start": "79140",
    "end": "84120"
  },
  {
    "text": "because the database compiles the query and figures out all of the correct data points  ",
    "start": "84120",
    "end": "89640"
  },
  {
    "start": "90000",
    "end": "197000"
  },
  {
    "text": "and both also support JSON. So that's the JavaScript object notation to store and  ",
    "start": "90240",
    "end": "97259"
  },
  {
    "text": "transport data. But PostgreSQL and MySQL offer fundamentally different value propositions.  ",
    "start": "97260",
    "end": "105960"
  },
  {
    "text": "So PostgreSQL is one of the most compliant, stable and mature relational databases available today,  ",
    "start": "106680",
    "end": "113340"
  },
  {
    "text": "and it's very good with complex queries. PostgreSQL is object relational and it  ",
    "start": "113340",
    "end": "119820"
  },
  {
    "text": "appeals to enterprise database administrators responsible for managing online transaction  ",
    "start": "119820",
    "end": "124860"
  },
  {
    "text": "processing that is O, L, T, P and OLTP firmly goes under the PostgreSQL column,  ",
    "start": "124860",
    "end": "133980"
  },
  {
    "text": "and it provides those protocols for business activities like e-commerce,  ",
    "start": "134580",
    "end": "139020"
  },
  {
    "text": "like customer relationship management and like financial ledgers. It's also ideal for  ",
    "start": "139020",
    "end": "144600"
  },
  {
    "text": "managing the analytics of the data received, created and generated. Now, why is that? Well,  ",
    "start": "144600",
    "end": "150000"
  },
  {
    "text": "some of the benefits of PostgreSQL are, first of all, related to performance and to scalability.  ",
    "start": "150000",
    "end": "158220"
  },
  {
    "text": "So PostgreSQL has a number of performance and scalability features, including extensive data  ",
    "start": "160020",
    "end": "166620"
  },
  {
    "text": "analysis across multiple data types. There's also MVCC, that's multi version concurrency control and  ",
    "start": "166620",
    "end": "177840"
  },
  {
    "text": "that enables the simultaneous occurrence of right operations and reads. And there's also business  ",
    "start": "177840",
    "end": "183720"
  },
  {
    "text": "continuity support with PostgreSQL and that's provided with high availability of services  ",
    "start": "183720",
    "end": "191760"
  },
  {
    "text": "through asynchronous or synchronous replication methods across servers. If you need to process  ",
    "start": "191760",
    "end": "199080"
  },
  {
    "start": "197000",
    "end": "287000"
  },
  {
    "text": "complex queries with multiple data types support and if you're looking for a database with great  ",
    "start": "199080",
    "end": "204300"
  },
  {
    "text": "concurrency control, PostgreSQL should be a go to option. Now MySQL, on the other hand,  ",
    "start": "204300",
    "end": "211740"
  },
  {
    "text": "is an open source relational database management system that's been around for a long time. It's  ",
    "start": "211740",
    "end": "218820"
  },
  {
    "text": "very well established and is known for being easy to use and being very fast, making it a  ",
    "start": "218820",
    "end": "224280"
  },
  {
    "text": "popular choice for web applications in particular. MySQL is typically used for smaller scale web apps  ",
    "start": "224280",
    "end": "234660"
  },
  {
    "text": "that don't need the same level of performance and complexity as enterprise applications, although it  ",
    "start": "234660",
    "end": "240000"
  },
  {
    "text": "is used sometimes as well as some of the other benefits of my sequel are just the ease of use.  ",
    "start": "240000",
    "end": "245580"
  },
  {
    "text": "It's a very easy to use database system and it's also been very, very optimized fast to get it up  ",
    "start": "246540",
    "end": "256259"
  },
  {
    "text": "and running and get started. And that really goes to my next point, which is speed. So far,  ",
    "start": "256260",
    "end": "261900"
  },
  {
    "text": "the support for high speed partial index is this full text indexes and has unique memory caches  ",
    "start": "261900",
    "end": "267600"
  },
  {
    "text": "that can result in superior database performance. And there is also support for scalability  ",
    "start": "267600",
    "end": "274200"
  },
  {
    "text": "with MySQL, with support for unlimited storage growth and a small footprint.",
    "start": "274920",
    "end": "280260"
  },
  {
    "text": "If you're looking for a fast, easy to use database for small to medium sized web applications, MySQL  ",
    "start": "280260",
    "end": "286620"
  },
  {
    "text": "is a great option. Oh, and I don't want to forget my A.I. generated joke created by a generative  ",
    "start": "286620",
    "end": "294720"
  },
  {
    "start": "287000",
    "end": "392000"
  },
  {
    "text": "pre-trained transformer. It basically goes something like this. There's a mythical database  ",
    "start": "294720",
    "end": "300360"
  },
  {
    "text": "administrator and they were showing a PostgreSQL data admin around his office. So the MySQL admin  ",
    "start": "300360",
    "end": "307860"
  },
  {
    "text": "showed her the server room is stacked full of servers and the PostgreSQL admin was impressed.  ",
    "start": "307860",
    "end": "315360"
  },
  {
    "text": "Then the MySQL clapping showed her the room where the backups were stored. Racks and racks  ",
    "start": "315360",
    "end": "321180"
  },
  {
    "text": "of storage. Very impressive, the PostgreSQL admin said. And then finally, the MySQL administrator  ",
    "start": "321180",
    "end": "327840"
  },
  {
    "text": "took her to the room where the developers worked. The PostgreSQL administrator was shocked to see  ",
    "start": "327840",
    "end": "332940"
  },
  {
    "text": "that there was only one developer working there. \"Why do you only have one developer?\" She asked.  ",
    "start": "332940",
    "end": "338220"
  },
  {
    "text": "\"Because the MySQL administrator replied with MySQL, we don't need any more.\"  ",
    "start": "338220",
    "end": "343560"
  },
  {
    "text": "Maybe it's just me, but I actually do see the humor in that because my sequel is powerful,  ",
    "start": "345180",
    "end": "351240"
  },
  {
    "text": "yet easy to use. It doesn't need a lot development of resources. So look, broadly speaking here,  ",
    "start": "351240",
    "end": "357300"
  },
  {
    "text": "if you need a database for an enterprise application that can handle complex queries  ",
    "start": "357300",
    "end": "361860"
  },
  {
    "text": "and multiple data types, you might want to go with PostgreSQL. If you need a fast,  ",
    "start": "361860",
    "end": "367379"
  },
  {
    "text": "easy to use database for small to medium sized web applications, you might choose to go with  ",
    "start": "367380",
    "end": "372720"
  },
  {
    "text": "MySQL. And if you want to write database jokes, well well, that's a problem for another day.",
    "start": "372720",
    "end": "378000"
  }
]