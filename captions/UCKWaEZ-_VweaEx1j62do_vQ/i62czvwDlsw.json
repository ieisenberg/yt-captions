[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "Gradient descent is like.",
    "start": "390",
    "end": "1740"
  },
  {
    "text": "It's like trying to find your way down a dark mountain.",
    "start": "1920",
    "end": "4650"
  },
  {
    "text": "You can't see where you're going.",
    "start": "4650",
    "end": "5700"
  },
  {
    "text": "So you have to feel your way around.",
    "start": "5940",
    "end": "7889"
  },
  {
    "text": "You take small steps in the direction that feels the most downhill.",
    "start": "7890",
    "end": "12299"
  },
  {
    "text": "Eventually, if you keep going, you'll find your way to the bottom.",
    "start": "12930",
    "end": "15899"
  },
  {
    "text": "That's gradient descent.",
    "start": "16170",
    "end": "17369"
  },
  {
    "text": "Let's get into it.",
    "start": "18090",
    "end": "19090"
  },
  {
    "start": "20000",
    "end": "92000"
  },
  {
    "text": "So Gradient Descent is a common optimization algorithm used to train machine learning models in neural networks by training on data that these models can learn over time, and because they're learning over time, they can improve their accuracy.",
    "start": "20250",
    "end": "33090"
  },
  {
    "text": "Now you see a neural network consists of connected neurons like this, and those neurons are in layers.",
    "start": "33720",
    "end": "41939"
  },
  {
    "text": "And those layers have weights and biases describe how we navigate through this network.",
    "start": "42150",
    "end": "48899"
  },
  {
    "text": "We provide the neural network with labeled training data to determine what we should set these weights and biases to, to figure something out.",
    "start": "49860",
    "end": "57180"
  },
  {
    "text": "So like, for example, I could input a shape, let's say, like that, and then we could use the neural network to learn that squiggle as our input represents the output.",
    "start": "57570",
    "end": "70140"
  },
  {
    "text": "The number three.",
    "start": "71370",
    "end": "72370"
  },
  {
    "text": "After we train the neural network, we can provide it with more label data like this squiggle, and then we can see if it could also correctly resolve that squiggle to.",
    "start": "72900",
    "end": "83280"
  },
  {
    "text": "The number six.",
    "start": "84530",
    "end": "85700"
  },
  {
    "text": "If we get some of these squiggles wrong, the weights and biases here can be adjusted and then we just try again.",
    "start": "86150",
    "end": "92150"
  },
  {
    "start": "92000",
    "end": "165000"
  },
  {
    "text": "Now, how can gradient descent help us here?",
    "start": "92840",
    "end": "95479"
  },
  {
    "text": "Well, gradient descent is used to find the minimum of something called a cost function.",
    "start": "95750",
    "end": "103641"
  },
  {
    "text": "So what is?",
    "start": "103810",
    "end": "104810"
  },
  {
    "text": "A cost function?",
    "start": "105580",
    "end": "106819"
  },
  {
    "text": "Well, it's a function that tells us how far off predictions are from the actual values.",
    "start": "107240",
    "end": "113029"
  },
  {
    "text": "So the idea is that we want to minimize this cost function to get the best predictions.",
    "start": "113330",
    "end": "118400"
  },
  {
    "text": "Now, to do this, we take small steps in the direction that reduces the cost function the most.",
    "start": "118880",
    "end": "125090"
  },
  {
    "text": "We think about this on a graph.",
    "start": "125660",
    "end": "127370"
  },
  {
    "text": "We start here and we keep going downhill, reducing our cost function as we go.",
    "start": "127880",
    "end": "134780"
  },
  {
    "text": "The size of the steps that we take.",
    "start": "135590",
    "end": "137749"
  },
  {
    "text": "So the size of the steps from here to here and to here, that's called the learning rate.",
    "start": "138200",
    "end": "143270"
  },
  {
    "text": "Let's think about another example.",
    "start": "144140",
    "end": "145729"
  },
  {
    "text": "Let's consider a neural network, but instead of dealing with squiggles, predicts how much a house will sell for.",
    "start": "145730",
    "end": "152599"
  },
  {
    "text": "So first we train the network on a labeled dataset.",
    "start": "153230",
    "end": "156259"
  },
  {
    "text": "Let's say that data has some information like.",
    "start": "156800",
    "end": "159199"
  },
  {
    "text": "Like the location of the house, let's say the size of the house, and then how much it sold for.",
    "start": "159830",
    "end": "164750"
  },
  {
    "start": "165000",
    "end": "225000"
  },
  {
    "text": "So with that, we can then use our model to train new labeled data.",
    "start": "165650",
    "end": "171258"
  },
  {
    "text": "So here's, here's another example.",
    "start": "171920",
    "end": "173360"
  },
  {
    "text": "We've got a house.",
    "start": "173360",
    "end": "174360"
  },
  {
    "text": "It's location.",
    "start": "174710",
    "end": "175710"
  },
  {
    "text": "Let's do it by zipcode.",
    "start": "175760",
    "end": "176899"
  },
  {
    "text": "27513.",
    "start": "177470",
    "end": "178740"
  },
  {
    "text": "How big is it?",
    "start": "178760",
    "end": "179760"
  },
  {
    "text": "Uh, 3000 square feet and put that into a neural network.",
    "start": "180610",
    "end": "186039"
  },
  {
    "text": "So how much does this house sell for?",
    "start": "186490",
    "end": "189250"
  },
  {
    "text": "Well, now, on your network, we'll make a forecast.",
    "start": "189520",
    "end": "192060"
  },
  {
    "text": "It says, we think.",
    "start": "192070",
    "end": "193900"
  },
  {
    "text": "This sold for $300,000.",
    "start": "195070",
    "end": "198280"
  },
  {
    "text": "And we compare that to the forecast of the actual sale price, which was.",
    "start": "199150",
    "end": "204909"
  },
  {
    "text": "$450,000.",
    "start": "206170",
    "end": "209590"
  },
  {
    "text": "Not a good guess.",
    "start": "210490",
    "end": "211490"
  },
  {
    "text": "We have a large cost function.",
    "start": "211930",
    "end": "214299"
  },
  {
    "text": "Weights and biases now need to be adjusted and then the model can try again.",
    "start": "214570",
    "end": "217960"
  },
  {
    "text": "And did it do any better over the entire label dataset or did it do worse?",
    "start": "218440",
    "end": "222139"
  },
  {
    "text": "That's what Gradient Descent can help us with.",
    "start": "222160",
    "end": "224440"
  },
  {
    "start": "225000",
    "end": "424000"
  },
  {
    "text": "Now, there are three types of gradient descent learning algorithms, and let's take a look at some of those.",
    "start": "225280",
    "end": "231759"
  },
  {
    "text": "So first of all.",
    "start": "233160",
    "end": "234360"
  },
  {
    "text": "We've got a gradient descent code.",
    "start": "235320",
    "end": "237479"
  },
  {
    "text": "Batch.",
    "start": "238670",
    "end": "239670"
  },
  {
    "text": "This sums the entries for each point in the training set updating the model only after all the training examples have been evaluated, hence the term batch.",
    "start": "240500",
    "end": "249800"
  },
  {
    "text": "Now, in terms of how well does this do well computationally it is computationally effective.",
    "start": "250280",
    "end": "256549"
  },
  {
    "text": "You can give this a high rating because we are doing things in one big batch.",
    "start": "257510",
    "end": "261979"
  },
  {
    "text": "But what about processing time?",
    "start": "262190",
    "end": "264049"
  },
  {
    "text": "Well with processing time, we can end up with long processing times using batch gradient descent because well, we've got large training datasets and it needs to store all of that data in memory and process it.",
    "start": "265350",
    "end": "277710"
  },
  {
    "text": "So that's batch.",
    "start": "278550",
    "end": "279449"
  },
  {
    "text": "Another option is stochastic gradient descent",
    "start": "279450",
    "end": "283429"
  },
  {
    "text": "and this evaluates each training example but one at a time instead of in a batch.",
    "start": "283639",
    "end": "288630"
  },
  {
    "text": "Since you only need to hold one training example, they're easy to store in memory and get individual responses much faster.",
    "start": "289050",
    "end": "296749"
  },
  {
    "text": "So in terms of speed.",
    "start": "296760",
    "end": "298529"
  },
  {
    "text": "That's fast.",
    "start": "299460",
    "end": "301108"
  },
  {
    "text": "But terms of computational efficiency, that's lower.",
    "start": "301470",
    "end": "304560"
  },
  {
    "text": "Now there is a happy medium and that is called mini batch - and mini batch",
    "start": "307250",
    "end": "315800"
  },
  {
    "text": "Gradient descent splits the training dataset into small batch sizes and performs updates on each of those batches.",
    "start": "315830",
    "end": "323448"
  },
  {
    "text": "That is a nice balance of computational efficiency and of speed.",
    "start": "323480",
    "end": "327589"
  },
  {
    "text": "Now, gradient descent does come with its own challenges.",
    "start": "327920",
    "end": "330930"
  },
  {
    "text": "So for example, it can struggle to find the global minimum in non-convex problems.",
    "start": "330930",
    "end": "335830"
  },
  {
    "text": "This was a nice convex problem with a clearly defined bottom. So one of the slope of the cost function is close to zero or it's at zero.",
    "start": "335870",
    "end": "345380"
  },
  {
    "text": "The model stops learning, but if we don't have this convex model here, we have something like this shape that's known as a saddle point, and it can mislead the gradient descent because it thinks it's at the bottom.",
    "start": "345410",
    "end": "360139"
  },
  {
    "text": "Before it really is.",
    "start": "361470",
    "end": "362649"
  },
  {
    "text": "This is going to keep going down further.",
    "start": "362670",
    "end": "364260"
  },
  {
    "text": "Called a subtle shape because it kind of looks like a horse saddle.",
    "start": "365230",
    "end": "369910"
  },
  {
    "text": "I guess another challenge is that in deeper neural learning networks, gradient descent can suffer from vanishing gradients or exploding gradients.",
    "start": "369940",
    "end": "379690"
  },
  {
    "text": "So vanishing gradients that when the gradient is too small and the earlier layers in the network learn more slowly than the later layers as we go through this network here.",
    "start": "379840",
    "end": "388029"
  },
  {
    "text": "Exploding gradients, on the other hand, are when the gradient is too large and that can create an unstable model.",
    "start": "389430",
    "end": "394199"
  },
  {
    "text": "But look, despite those challenges.",
    "start": "394210",
    "end": "396539"
  },
  {
    "text": "Gradient descent is a powerful optimization algorithm, and it is commonly used to train machine learning models and neural networks today.",
    "start": "397050",
    "end": "405276"
  },
  {
    "text": "It's a clever way to get you back down that mountain safely.",
    "start": "405388",
    "end": "410188"
  },
  {
    "text": "If you have any questions, please drop us a line below.",
    "start": "411310",
    "end": "413939"
  },
  {
    "text": "And if you want to see more videos like this in the future, please like and subscribe.",
    "start": "413950",
    "end": "418569"
  },
  {
    "text": "Thanks for watching.",
    "start": "419140",
    "end": "420140"
  }
]