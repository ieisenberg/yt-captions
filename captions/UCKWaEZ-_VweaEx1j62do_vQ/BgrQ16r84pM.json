[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "When you make a pod in Kubernetes, what \nhappens behind the scenes?",
    "start": "1040",
    "end": "5132"
  },
  {
    "text": "How do those Kubernetes components work together to bring that pod into fruition? \n ",
    "start": "5132",
    "end": "9802"
  },
  {
    "text": "My name is Whitney Lee, I'm on \nthe cloud team here at IBM. \n ",
    "start": "10000",
    "end": "13932"
  },
  {
    "text": "So, this is a cool exercise.",
    "start": "14582",
    "end": "16998"
  },
  {
    "text": "It kind of goes over all the basics of Kubernetes,",
    "start": "16998",
    "end": "20000"
  },
  {
    "text": "but with the perspective of a pod being made.",
    "start": "20000",
    "end": "22584"
  },
  {
    "text": "So, at the basis of our system we have our nodes.",
    "start": "22584",
    "end": "27060"
  },
  {
    "text": "The nodes are the worker machines \nthat that back up the Kubernetes cluster.",
    "start": "27060",
    "end": "32882"
  },
  {
    "start": "33000",
    "end": "64000"
  },
  {
    "text": "So, in Kubernetes there are two types of \nnodes:",
    "start": "33311",
    "end": "36661"
  },
  {
    "text": "we have the control nodes",
    "start": "36661",
    "end": "40485"
  },
  {
    "text": "- and in our case we're going to do just one control node \nfor simplicity's sake,",
    "start": "40485",
    "end": "45233"
  },
  {
    "text": "but you in a production level cluster you'd want at least 3 control nodes",
    "start": "45233",
    "end": "49303"
  },
  {
    "text": "- and then we have the compute nodes.",
    "start": "49303",
    "end": "51731"
  },
  {
    "text": "So, in our exercise here, we'll do two \ncompute nodes,",
    "start": "54240",
    "end": "58710"
  },
  {
    "text": "but you could have many many compute nodes in a Kubernetes cluster.",
    "start": "58710",
    "end": "63814"
  },
  {
    "text": "So, let's talk about a use case where we want to make a pod.",
    "start": "63814",
    "end": "68688"
  },
  {
    "start": "64000",
    "end": "106000"
  },
  {
    "text": "Let's say I'm the one making a pod.",
    "start": "68689",
    "end": "70646"
  },
  {
    "text": "So, here's me - my smile, long hair,",
    "start": "70646",
    "end": "76099"
  },
  {
    "text": "ha ha, my bangs ... okay.",
    "start": "76367",
    "end": "78396"
  },
  {
    "text": "So, I’m going to make a pod in Kubernetes,",
    "start": "78397",
    "end": "81523"
  },
  {
    "text": "and when I make that call with a kubectl command.\n ",
    "start": "82319",
    "end": "86560"
  },
  {
    "text": "That's going to go into the Kubernetes \ncluster and hit the Kube-API server. ",
    "start": "89440",
    "end": "94160"
  },
  {
    "text": "So, the Kube-API server is the main \nmanagement component of a Kubernetes cluster.\n ",
    "start": "97280",
    "end": "103760"
  },
  {
    "start": "106000",
    "end": "146000"
  },
  {
    "text": "Now, the first thing that the Kube-API server \nis going to do with my request to make a pod,  ",
    "start": "106960",
    "end": "113920"
  },
  {
    "text": "is it is going to authenticate it and \nvalidate it.",
    "start": "113920",
    "end": "117918"
  },
  {
    "text": "So, it's going to say, “Who are you? Do you have \naccess to this cluster?”   ",
    "start": "117918",
    "end": "122159"
  },
  {
    "text": "Like, “Oh, you're Whitney! Cool, we \nknow you. Come on in, make a pod!”  ",
    "start": "122160",
    "end": "128160"
  },
  {
    "text": "So, the next thing that happens is the Kube \nAPI server is going to write that pod to etcd.\n ",
    "start": "128160",
    "end": "134000"
  },
  {
    "text": "etcd is a key value data store \nthat's distributed across the cluster  ",
    "start": "137200",
    "end": "141840"
  },
  {
    "text": "and it is the source of truth \nfor the Kubernetes cluster.   ",
    "start": "142560",
    "end": "145200"
  },
  {
    "start": "146000",
    "end": "170000"
  },
  {
    "text": "(Word on the street is we have a \nreally good IBM Cloud video about it) \n ",
    "start": "146960",
    "end": "150000"
  },
  {
    "text": "So, Kube API server writes that request to etcd, \nand then etcd will return when  ",
    "start": "151840",
    "end": "160160"
  },
  {
    "text": "it has made a successful write,",
    "start": "160160",
    "end": "162013"
  },
  {
    "text": "and then, at that point, the Kube-API server already is going to return to me that it's created",
    "start": "162013",
    "end": "169638"
  },
  {
    "start": "170000",
    "end": "205000"
  },
  {
    "text": "- even though not a lot has happened in our system yet.",
    "start": "170312",
    "end": "176114"
  },
  {
    "text": "That's because, at its core, Kubernetes",
    "start": "176559",
    "end": "180091"
  },
  {
    "text": "and etcd has defined a desired state of what the system looks like,",
    "start": "180091",
    "end": "184459"
  },
  {
    "text": "and then all the Kubernetes components \nthat we're going to talk about today",
    "start": "184459",
    "end": "187591"
  },
  {
    "text": "work together to make that desired state equal \nto the actual state.",
    "start": "187591",
    "end": "191626"
  },
  {
    "text": "So, now that we have the pod recorded in the desired state, ",
    "start": "191626",
    "end": "194219"
  },
  {
    "text": "it is as good as created, as far as Kubernetes is concerned.",
    "start": "194219",
    "end": "198457"
  },
  {
    "text": "The next component I want to \ntalk about is the scheduler.",
    "start": "198724",
    "end": "202191"
  },
  {
    "start": "205000",
    "end": "228000"
  },
  {
    "text": "The scheduler is keeping an eye out for \nworkloads that need to be created,",
    "start": "206217",
    "end": "215459"
  },
  {
    "text": "and what it's going to do is determine which \nnode it goes on.",
    "start": "215460",
    "end": "218953"
  },
  {
    "text": "But what it's doing in the short term is, it's pinging our Kube-API server at regular intervals",
    "start": "218953",
    "end": "227979"
  },
  {
    "start": "228000",
    "end": "275000"
  },
  {
    "text": "to get a status of whether there are any workloads that need to be scheduled.",
    "start": "228314",
    "end": "232181"
  },
  {
    "text": "So, usually like five seconds.",
    "start": "232182",
    "end": "233753"
  },
  {
    "text": "So, the Kube scheduler is ... the scheduler, \nexcuse me, it's going to ping the Kube API server,",
    "start": "233753",
    "end": "239306"
  },
  {
    "text": "“Hey, do we have any workloads \nthat need to be created? No? OK.”",
    "start": "239306",
    "end": "243651"
  },
  {
    "text": "“How about now? Are there any workloads now? \nNo? All right.”",
    "start": "244585",
    "end": "249451"
  },
  {
    "text": "“How about now?” ",
    "start": "250502",
    "end": "251840"
  },
  {
    "text": "“Oh, Whitney has a pod that needs \nto get created. Let's do that.\"\n ",
    "start": "251840",
    "end": "255900"
  },
  {
    "text": "So, now that the scheduler knows that pod needs \nto get created on one of our compute nodes,  ",
    "start": "256320",
    "end": "262400"
  },
  {
    "text": "let's take a pause from this and talk \nabout our compute nodes for a moment. ",
    "start": "262400",
    "end": "267223"
  },
  {
    "text": "Our compute nodes have three major \ncomponents: one is a Kubelet.\n ",
    "start": "267223",
    "end": "273824"
  },
  {
    "start": "275000",
    "end": "348000"
  },
  {
    "text": "The Kubelet is how the compute node \ncommunicates with the control plane,  ",
    "start": "275825",
    "end": "282880"
  },
  {
    "text": "or with specifically the Kube-API server.",
    "start": "282880",
    "end": "286037"
  },
  {
    "text": "So, each each compute node has a Kubelet.",
    "start": "286037",
    "end": "289912"
  },
  {
    "text": "So, the Kubelet is going to register the node with \nthe cluster.",
    "start": "289912",
    "end": "294548"
  },
  {
    "text": "It will send periodic health check so that the Kube-API server knows that our compute nodes are healthy,",
    "start": "294549",
    "end": "300473"
  },
  {
    "text": "and it will also create and destroy workloads as directed by the Kube-API server.",
    "start": "300473",
    "end": "306557"
  },
  {
    "text": "Each of our compute nodes is also going to have",
    "start": "306558",
    "end": "310285"
  },
  {
    "text": "a container runtime engine that's \ncompliant with container runtime initiative,",
    "start": "310285",
    "end": "316076"
  },
  {
    "text": "and so, in the past, it's been Docker but it could \nreally be anything that's compliant -",
    "start": "316438",
    "end": "322857"
  },
  {
    "text": "and then, finally, it has a Kube proxy which \nisn't needed to create our pod today,  ",
    "start": "323492",
    "end": "330555"
  },
  {
    "text": "but I would be remiss if I didn't mention it",
    "start": "330800",
    "end": "334043"
  },
  {
    "text": "- and the Kube proxy is going to help the compute nodes communicate with one another",
    "start": "334044",
    "end": "339250"
  },
  {
    "text": "if there are any workloads that span across more than one node.",
    "start": "339250",
    "end": "343186"
  },
  {
    "text": "Just generally it helps them communicate.\n ",
    "start": "343948",
    "end": "346157"
  },
  {
    "start": "348000",
    "end": "380000"
  },
  {
    "text": "Okay, that said, now we have our scheduler.  ",
    "start": "348690",
    "end": "353600"
  },
  {
    "text": "A scheduler is aware that we \nneed to schedule Whitney's pod.  ",
    "start": "353600",
    "end": "357790"
  },
  {
    "text": "What our scheduler is going to do is look at the \navailable compute nodes.",
    "start": "358320",
    "end": "362954"
  },
  {
    "text": "It's going to rule out any that are unsatisfactory either because of limitations",
    "start": "362954",
    "end": "368197"
  },
  {
    "text": "that maybe the cluster administrator set up,",
    "start": "368197",
    "end": "370444"
  },
  {
    "text": "or maybe it just doesn't have enough space for my pod,",
    "start": "370444",
    "end": "373153"
  },
  {
    "text": "and then of the ones that are left it'll choose the best one to run the workload on,",
    "start": "373153",
    "end": "377636"
  },
  {
    "text": "taking all the factors into account.",
    "start": "377636",
    "end": "379840"
  },
  {
    "start": "380000",
    "end": "468000"
  },
  {
    "text": "Once it has made that choice, \ndoes it schedule the workload?  ",
    "start": "381040",
    "end": "384080"
  },
  {
    "text": "No, all it does is tell the Kube-API \nserver where it should go. \n ",
    "start": "384960",
    "end": "388880"
  },
  {
    "text": "Once the Kube-API server knows where it \nshould go, does it schedule the workload? ",
    "start": "389760",
    "end": "394160"
  },
  {
    "text": "No, what it does is it writes it to etcd,",
    "start": "394160",
    "end": "397654"
  },
  {
    "text": "and then after the successful writes, then we have the desired state versus the actual states and \nthe Kube-API server knows what it needs to do  ",
    "start": "397654",
    "end": "404720"
  },
  {
    "text": "to make that desired state ... the actual state \nmeet the desired state",
    "start": "404720",
    "end": "409372"
  },
  {
    "text": "and what that is, is that's when the Kube-API server is going to let the Kubelet know let's say the scheduler said we  ",
    "start": "409372",
    "end": "416640"
  },
  {
    "text": "should run the pod on node 2.",
    "start": "416640",
    "end": "419144"
  },
  {
    "text": "So, that's when it's going to let the Kubelet know, “On node 2 we need to spin up a pod on this cluster.”",
    "start": "419144",
    "end": "425065"
  },
  {
    "text": "The Kubelet is going to work together with the container runtime engine",
    "start": "425065",
    "end": "429273"
  },
  {
    "text": "and make a pod that has the appropriate container running inside.",
    "start": "429273",
    "end": "433735"
  },
  {
    "text": "So, we have made a pod on a Kubernetes cluster,  ",
    "start": "434183",
    "end": "438400"
  },
  {
    "text": "but there's one more management \npiece I want to talk about.\n ",
    "start": "439040",
    "end": "441520"
  },
  {
    "text": "Let's consider a case where, when I made the \npod, I set the restart policy to “always”,  ",
    "start": "443040",
    "end": "450080"
  },
  {
    "text": "and then let's say my pod - something happens and it goes down.",
    "start": "450080",
    "end": "455331"
  },
  {
    "text": "How will the system know that I want a new pod to be created in its place?",
    "start": "455331",
    "end": "460966"
  },
  {
    "text": "That is where the controller manager comes in.",
    "start": "460966",
    "end": "464467"
  },
  {
    "text": "This is the last important component of Kubernetes.",
    "start": "464467",
    "end": "468565"
  },
  {
    "start": "468000",
    "end": "541000"
  },
  {
    "text": "So, the controller manager ...",
    "start": "468565",
    "end": "472093"
  },
  {
    "text": "... it is made up of all of the controllers.",
    "start": "473760",
    "end": "477190"
  },
  {
    "text": "So, there are many controllers that are controlled by the controller manager.",
    "start": "477190",
    "end": "481869"
  },
  {
    "text": "And, in particular, the one that's going to help me make a new pod.",
    "start": "481869",
    "end": "488250"
  },
  {
    "text": "For me. I'm not doing anything at \nthis point, my job is done up there,",
    "start": "488250",
    "end": "492140"
  },
  {
    "text": "but the controller manager, it's the replication \ncontroller within the controller manager",
    "start": "492140",
    "end": "498068"
  },
  {
    "text": "that's going to help with this task.",
    "start": "498400",
    "end": "499912"
  },
  {
    "text": "So, the controller manager - all the different \ncontrollers are watching different pieces of the   Kubernetes system:",
    "start": "500000",
    "end": "505419"
  },
  {
    "text": "the replication controller, just like the scheduler -",
    "start": "505419",
    "end": "509548"
  },
  {
    "text": "these controllers are pinging the Kube-API server at a regular basis",
    "start": "509548",
    "end": "513793"
  },
  {
    "text": "to get an update on the actual state of the cluster",
    "start": "513793",
    "end": "517008"
  },
  {
    "text": "to make sure the desired state and the \nactual states are the same as one another.",
    "start": "517009",
    "end": "521267"
  },
  {
    "text": "So, the replication controller sees, \nfrom contacting the Kube-API server,  ",
    "start": "521520",
    "end": "527200"
  },
  {
    "text": "sees that my pod is gone,",
    "start": "527200",
    "end": "529337"
  },
  {
    "text": "and it will take the necessary steps to spin that pod back up,",
    "start": "529337",
    "end": "533839"
  },
  {
    "text": "- or create a new pod, honestly, \nbecause pods are ephemeral.\n ",
    "start": "534480",
    "end": "540000"
  },
  {
    "start": "541000",
    "end": "594000"
  },
  {
    "text": "So, in conclusion, all these components \nare working together just to make my pod -  ",
    "start": "541294",
    "end": "549160"
  },
  {
    "text": "and especially we have the Kube-API server, the \nmain management component of the cluster,",
    "start": "549680",
    "end": "554805"
  },
  {
    "text": "we have etcd, our data store and our source of truth for the cluster,",
    "start": "554805",
    "end": "559040"
  },
  {
    "text": "the scheduler that helps determine which of the compute nodes the workload should go \non to,",
    "start": "559040",
    "end": "563878"
  },
  {
    "text": "and the controller manager that is watching the desired state - the actual state - and making sure it's the same as the desired state.",
    "start": "563878",
    "end": "570742"
  },
  {
    "text": "Thank you. If you have any questions \nplease drop us a line below.  ",
    "start": "571691",
    "end": "576316"
  },
  {
    "text": "If you want to see more videos like this in \nthe future,",
    "start": "576560",
    "end": "579468"
  },
  {
    "text": "please like and subscribe.",
    "start": "579468",
    "end": "581396"
  },
  {
    "text": "And don't forget: you can grow your skills and earn a badge with IBM CloudLabs,",
    "start": "581396",
    "end": "587000"
  },
  {
    "text": "which are free browser-based interactive Kubernetes labs.",
    "start": "587000",
    "end": "592295"
  }
]