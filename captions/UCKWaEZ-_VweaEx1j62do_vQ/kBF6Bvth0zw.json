[
  {
    "text": "Hi everyone, my name is Sai Vennam,",
    "start": "520",
    "end": "2020"
  },
  {
    "text": "and I'm with the IBM Cloud team.",
    "start": "2020",
    "end": "3699"
  },
  {
    "text": "Today, we want to talk about container orchestration.",
    "start": "3699",
    "end": "5759"
  },
  {
    "text": "I know that in the past, we've talked about containerization technology",
    "start": "5759",
    "end": "10240"
  },
  {
    "text": "- as well as dived into Kubernetes as an orchestration platform.",
    "start": "10240",
    "end": "14459"
  },
  {
    "text": "But, let's take a step back,",
    "start": "14460",
    "end": "16180"
  },
  {
    "text": "and talk about why container orchestration was necessary in the first place.",
    "start": "16180",
    "end": "21100"
  },
  {
    "text": "We'll start with an example.",
    "start": "21100",
    "end": "22760"
  },
  {
    "text": "Let's say that we've got 3 different microservices",
    "start": "22760",
    "end": "25460"
  },
  {
    "text": "that have already been containerized.",
    "start": "25460",
    "end": "27439"
  },
  {
    "text": "We've got the frontend,",
    "start": "27440",
    "end": "30060"
  },
  {
    "text": "we'll have the backend,",
    "start": "30060",
    "end": "32680"
  },
  {
    "text": "as well as a database access service.",
    "start": "32680",
    "end": "36660"
  },
  {
    "text": "These 3 services will be working together,",
    "start": "36660",
    "end": "39180"
  },
  {
    "text": "and are also exposed to end users,",
    "start": "39180",
    "end": "41420"
  },
  {
    "text": "so they can access that application.",
    "start": "41420",
    "end": "44219"
  },
  {
    "text": "The developer has a very focused look at this layout.",
    "start": "44220",
    "end": "48820"
  },
  {
    "text": "So, they're thinking about the end user,",
    "start": "48820",
    "end": "51840"
  },
  {
    "text": "the end user accessing that frontend application,",
    "start": "51840",
    "end": "55120"
  },
  {
    "text": "that frontend, which relies on the backend,",
    "start": "55120",
    "end": "58540"
  },
  {
    "text": "which may, in turn, store things using the  database service.",
    "start": "58540",
    "end": "62700"
  },
  {
    "text": "The developer is focused entirely on this layer.",
    "start": "62700",
    "end": "66580"
  },
  {
    "text": "Underneath it, we've got an orchestration layer.",
    "start": "66580",
    "end": "70140"
  },
  {
    "text": "So, we can call that a master,",
    "start": "70140",
    "end": "72720"
  },
  {
    "text": "and I'm thinking about Kubernetes right now,",
    "start": "72720",
    "end": "75800"
  },
  {
    "text": "where you would have something like a master node",
    "start": "75800",
    "end": "78220"
  },
  {
    "text": "that manages the various applications",
    "start": "78220",
    "end": "80940"
  },
  {
    "text": "running on your computer  resources.",
    "start": "80940",
    "end": "83300"
  },
  {
    "text": "But, again, a developer has a very singular focused look at this layout",
    "start": "83300",
    "end": "88100"
  },
  {
    "text": "and they're really only looking at this stack right here.",
    "start": "88100",
    "end": "91140"
  },
  {
    "text": "They're thinking about the specific containers",
    "start": "91140",
    "end": "93340"
  },
  {
    "text": "and what's happening within them.",
    "start": "93340",
    "end": "95299"
  },
  {
    "text": "Within those containers, there are a few key things.",
    "start": "95300",
    "end": "98160"
  },
  {
    "text": "So, there's going to be the application itself,",
    "start": "98160",
    "end": "100880"
  },
  {
    "text": "there's also going to be things like the operating system,",
    "start": "100880",
    "end": "104119"
  },
  {
    "text": "as well as dependencies.",
    "start": "104120",
    "end": "106660"
  },
  {
    "text": "And there are going to be a number of other things that you define,",
    "start": "106660",
    "end": "110280"
  },
  {
    "text": "but all of those things are contained within those containers themselves.",
    "start": "110280",
    "end": "115740"
  },
  {
    "text": "An operations team has a much larger view of the world.",
    "start": "115740",
    "end": "120460"
  },
  {
    "text": "They're looking at the entire stack.",
    "start": "120460",
    "end": "123500"
  },
  {
    "text": "So, an operations team:",
    "start": "123500",
    "end": "125940"
  },
  {
    "text": "there's a number of things that they need to focus on,",
    "start": "125940",
    "end": "128640"
  },
  {
    "text": "but we'll use this side to kind of explain how they work with",
    "start": "128640",
    "end": "132700"
  },
  {
    "text": "deploying an application that is made up of multiple services.",
    "start": "132700",
    "end": "135870"
  },
  {
    "text": "So, first, we'll talk about deploying.",
    "start": "135870",
    "end": "141760"
  },
  {
    "text": "So, taking a look here,",
    "start": "141760",
    "end": "143620"
  },
  {
    "text": "it's very similar to over here, but the key difference is",
    "start": "143620",
    "end": "146060"
  },
  {
    "text": "these are no longer containers,",
    "start": "146060",
    "end": "147599"
  },
  {
    "text": "but the actual computing resources.",
    "start": "147600",
    "end": "149500"
  },
  {
    "text": "This can be things like VMs (Virtual Machines)",
    "start": "149500",
    "end": "151660"
  },
  {
    "text": "or, in the Kubernetes world, we call these \"worker nodes\".",
    "start": "151660",
    "end": "155480"
  },
  {
    "text": "So, each one of these would be an actual",
    "start": "155480",
    "end": "159220"
  },
  {
    "text": "computing worker node.",
    "start": "159220",
    "end": "161240"
  },
  {
    "text": "So, you know, it could be something like",
    "start": "161250",
    "end": "163000"
  },
  {
    "text": "4 vCPUs (virtual CPUs) with 8 GB of RAM",
    "start": "163000",
    "end": "165980"
  },
  {
    "text": "per each one of these different boxes that we have laid out here.",
    "start": "165980",
    "end": "170480"
  },
  {
    "text": "The first thing you would use an orchestration platform to do",
    "start": "170480",
    "end": "173800"
  },
  {
    "text": "is something simple - just deploying an application.",
    "start": "173800",
    "end": "177240"
  },
  {
    "text": "Let's say that we start with a single node.",
    "start": "177240",
    "end": "179900"
  },
  {
    "text": "And, again, here we've got the master.",
    "start": "179900",
    "end": "184819"
  },
  {
    "text": "On that single node, we'll deploy 3 different microservices",
    "start": "184820",
    "end": "189500"
  },
  {
    "text": "- one instance each.",
    "start": "189500",
    "end": "190720"
  },
  {
    "text": "So, we'll start with the front end,",
    "start": "190730",
    "end": "195860"
  },
  {
    "text": "we'll have the backend,",
    "start": "195860",
    "end": "200020"
  },
  {
    "text": "as well as the database access service.",
    "start": "200020",
    "end": "204160"
  },
  {
    "text": "Already, let's assume that",
    "start": "204160",
    "end": "206060"
  },
  {
    "text": "we've consumed a good bit of the compute resources",
    "start": "206060",
    "end": "209430"
  },
  {
    "text": "that are available on that worker node.",
    "start": "209430",
    "end": "212120"
  },
  {
    "text": "So, we realize - let's add additional worker nodes to our master",
    "start": "212120",
    "end": "216000"
  },
  {
    "text": "and start scheduling out and scaling our application.",
    "start": "216000",
    "end": "220410"
  },
  {
    "text": "So, that's the next piece of the puzzle.",
    "start": "220410",
    "end": "226520"
  },
  {
    "text": "The next thing an orchestration platform cares about",
    "start": "226520",
    "end": "228860"
  },
  {
    "text": "is scaling an application out.",
    "start": "228860",
    "end": "230720"
  },
  {
    "text": "So, let's say that we want to scale out the frontend twice.",
    "start": "230720",
    "end": "236080"
  },
  {
    "text": "The backend, we'll scale it out 3 times.",
    "start": "236080",
    "end": "241840"
  },
  {
    "text": "And the database access service,",
    "start": "241840",
    "end": "244400"
  },
  {
    "text": "let's say we scale this one out 3 times as well.",
    "start": "244400",
    "end": "249060"
  },
  {
    "text": "An orchestration platform will schedule out our different",
    "start": "249070",
    "end": "253800"
  },
  {
    "text": "microservices and containers to make sure that",
    "start": "253800",
    "end": "257620"
  },
  {
    "text": "we utilize the computer resource in the best possible way.",
    "start": "257620",
    "end": "261639"
  },
  {
    "text": "One of the key things that an orchestration platform does is scheduling.",
    "start": "261639",
    "end": "265919"
  },
  {
    "text": "Next, we need to talk about",
    "start": "265919",
    "end": "267900"
  },
  {
    "text": "networking and how we enable",
    "start": "267900",
    "end": "270440"
  },
  {
    "text": "other people to access those  services.",
    "start": "270440",
    "end": "273289"
  },
  {
    "text": "That's the third thing that we can do with an orchestration platform.",
    "start": "273289",
    "end": "279800"
  },
  {
    "text": "So, that includes creating things",
    "start": "279800",
    "end": "282900"
  },
  {
    "text": "like services that represent each of our individual containers.",
    "start": "282900",
    "end": "287360"
  },
  {
    "text": "The problem is:  without having",
    "start": "287360",
    "end": "289900"
  },
  {
    "text": "something like an orchestration platform take care of this for you",
    "start": "289900",
    "end": "292800"
  },
  {
    "text": "- you would have to create your own load balancers.",
    "start": "292800",
    "end": "296319"
  },
  {
    "text": "In addition, you would have to manage your own services",
    "start": "296320",
    "end": "299360"
  },
  {
    "text": "and service discovery, as well.",
    "start": "299360",
    "end": "302379"
  },
  {
    "text": "So, by that, basically I mean",
    "start": "302389",
    "end": "304820"
  },
  {
    "text": "that if these services need to talk to one another,",
    "start": "304820",
    "end": "307300"
  },
  {
    "text": "they're not going to try to find the IP addresses of each different container",
    "start": "307300",
    "end": "310580"
  },
  {
    "text": "and resolve those and see if they're running.",
    "start": "310580",
    "end": "312659"
  },
  {
    "text": "That's something the orchestration platform needs to do",
    "start": "312660",
    "end": "315060"
  },
  {
    "text": "- is handle that system around it.",
    "start": "315060",
    "end": "317319"
  },
  {
    "text": "So, with this, we have the ability",
    "start": "317319",
    "end": "319600"
  },
  {
    "text": "to expose singular points of access",
    "start": "319600",
    "end": "323140"
  },
  {
    "text": "for each of those services.",
    "start": "323140",
    "end": "325940"
  },
  {
    "text": "And again, very similarly, an end user",
    "start": "325940",
    "end": "330720"
  },
  {
    "text": "might access that frontend application",
    "start": "330720",
    "end": "333080"
  },
  {
    "text": "- so the orchestration platform would expose that service to the world,",
    "start": "333080",
    "end": "336819"
  },
  {
    "text": "while keeping these services internal",
    "start": "336820",
    "end": "339160"
  },
  {
    "text": "- where the frontend can access the backend,",
    "start": "339160",
    "end": "341200"
  },
  {
    "text": "and the backend can access that database.",
    "start": "341200",
    "end": "344300"
  },
  {
    "text": "Let's say that that's the third thing",
    "start": "344300",
    "end": "346039"
  },
  {
    "text": "that an orchestration platform will do for you.",
    "start": "346040",
    "end": "349560"
  },
  {
    "text": "The last thing I want to highlight here is insight.",
    "start": "349560",
    "end": "356720"
  },
  {
    "text": "Insight is very important",
    "start": "356720",
    "end": "358580"
  },
  {
    "text": "when working with an application in production.",
    "start": "358580",
    "end": "361460"
  },
  {
    "text": "So, developers are focused on the applications themselves,",
    "start": "361460",
    "end": "365220"
  },
  {
    "text": "but let's say that one of these pods accidentally goes down.",
    "start": "365220",
    "end": "369520"
  },
  {
    "text": "What the orchestration platform will do",
    "start": "369520",
    "end": "372180"
  },
  {
    "text": "is it will rapidly bring up another one,",
    "start": "372180",
    "end": "374539"
  },
  {
    "text": "and bring it within the purview of that service.",
    "start": "374540",
    "end": "377740"
  },
  {
    "text": "It will do that for you automatically.",
    "start": "377740",
    "end": "379800"
  },
  {
    "text": "In addition, an orchestration platform has a number of pluggable points",
    "start": "379800",
    "end": "383500"
  },
  {
    "text": "where you can use key open source technologies",
    "start": "383500",
    "end": "385780"
  },
  {
    "text": "- things like Prometheus and Istio",
    "start": "385780",
    "end": "388120"
  },
  {
    "text": "- to plug in directly into the platform",
    "start": "388120",
    "end": "390360"
  },
  {
    "text": "and expose capabilities that let you do things like a logging,",
    "start": "390360",
    "end": "393180"
  },
  {
    "text": "analytics, and there's even a cool one,",
    "start": "393180",
    "end": "395919"
  },
  {
    "text": "something that I want to sketch out here,",
    "start": "395920",
    "end": "397520"
  },
  {
    "text": "- the ability to see the entire service mesh.",
    "start": "397520",
    "end": "401199"
  },
  {
    "text": "Many times, you might want to",
    "start": "401200",
    "end": "403400"
  },
  {
    "text": "lay out all of the different microservices that you have",
    "start": "403400",
    "end": "406060"
  },
  {
    "text": "and see how they communicate with one another.",
    "start": "406060",
    "end": "407820"
  },
  {
    "text": "In this example, it's fairly straightforward,",
    "start": "407820",
    "end": "410080"
  },
  {
    "text": "but let's go through the exercise anyway.",
    "start": "410080",
    "end": "412759"
  },
  {
    "text": "So, we've got our end user;",
    "start": "412760",
    "end": "414860"
  },
  {
    "text": "and the end user would likely be accessing the frontend application.",
    "start": "414860",
    "end": "420680"
  },
  {
    "text": "And, we've got the two other services as well:",
    "start": "420680",
    "end": "423300"
  },
  {
    "text": "the database, as well as the backend.",
    "start": "423300",
    "end": "429039"
  },
  {
    "text": "In this particular example, I'll admit,",
    "start": "429040",
    "end": "431260"
  },
  {
    "text": "we have a very simple service mesh",
    "start": "431260",
    "end": "432940"
  },
  {
    "text": "- we've only got three services.",
    "start": "432940",
    "end": "434760"
  },
  {
    "text": "But seeing at how they communicate with one another",
    "start": "434760",
    "end": "438260"
  },
  {
    "text": "can still be very valuable.",
    "start": "438260",
    "end": "440000"
  },
  {
    "text": "So, the user accesses the frontend,",
    "start": "440000",
    "end": "441960"
  },
  {
    "text": "the frontend accesses the backend,",
    "start": "441960",
    "end": "443639"
  },
  {
    "text": "and we expect the backend to access the database.",
    "start": "443640",
    "end": "446100"
  },
  {
    "text": "But, let's say the operations team finds that,",
    "start": "446100",
    "end": "448200"
  },
  {
    "text": "oh actually, sometimes the frontend",
    "start": "448200",
    "end": "451000"
  },
  {
    "text": "is directly accessing the database service.",
    "start": "451000",
    "end": "453560"
  },
  {
    "text": "They can see how often, as well.",
    "start": "453560",
    "end": "455840"
  },
  {
    "text": "With things like a service mesh,",
    "start": "455849",
    "end": "457080"
  },
  {
    "text": "you get insight into things like the operations per second.",
    "start": "457080",
    "end": "460159"
  },
  {
    "text": "Let's say that every time",
    "start": "460160",
    "end": "461920"
  },
  {
    "text": "- or let's say there are 5 operations per second hitting the frontend,",
    "start": "461920",
    "end": "465200"
  },
  {
    "text": "maybe 8 that go to the backend,",
    "start": "465200",
    "end": "467980"
  },
  {
    "text": "maybe 3 that go per second to the database service,",
    "start": "467980",
    "end": "471800"
  },
  {
    "text": "but then .5 requests per second",
    "start": "471800",
    "end": "474340"
  },
  {
    "text": "going from the frontend to the database service.",
    "start": "474340",
    "end": "476820"
  },
  {
    "text": "The operations team has identified,",
    "start": "476820",
    "end": "480720"
  },
  {
    "text": "by taking a look at the requests",
    "start": "480720",
    "end": "482880"
  },
  {
    "text": "and tracing them through the different services,",
    "start": "482880",
    "end": "485760"
  },
  {
    "text": "that here's where the issue is.",
    "start": "485760",
    "end": "487900"
  },
  {
    "text": "This is a simple example",
    "start": "487900",
    "end": "489500"
  },
  {
    "text": "about how you can use something out like Istio and Kiali",
    "start": "489500",
    "end": "493720"
  },
  {
    "text": "(which is a key service-meshing capability)",
    "start": "493720",
    "end": "496140"
  },
  {
    "text": "to gain insight into running services.",
    "start": "496140",
    "end": "499680"
  },
  {
    "text": "Orchestration platforms have a number of capabilities",
    "start": "499680",
    "end": "503380"
  },
  {
    "text": "that they need to support,",
    "start": "503380",
    "end": "504720"
  },
  {
    "text": "and this why operations teams",
    "start": "504720",
    "end": "506860"
  },
  {
    "text": "and these roles that we're seeing pop up",
    "start": "506860",
    "end": "508819"
  },
  {
    "text": "- things like SREs (Site Reliability Engineers)",
    "start": "508820",
    "end": "511620"
  },
  {
    "text": "- and we're seeing the growth of those roles because",
    "start": "511620",
    "end": "514060"
  },
  {
    "text": "there are a lot of things that they need to concern themselves with",
    "start": "514060",
    "end": "518860"
  },
  {
    "text": "when running an application in production.",
    "start": "518860",
    "end": "520820"
  },
  {
    "text": "Developers see a very singular view of the world,",
    "start": "520820",
    "end": "523320"
  },
  {
    "text": "where they're focusing on the things within the containers themselves.",
    "start": "523320",
    "end": "526180"
  },
  {
    "text": "Thanks for joining me for this quick overview",
    "start": "526180",
    "end": "528060"
  },
  {
    "text": "of container orchestration technology.",
    "start": "528060",
    "end": "530040"
  },
  {
    "text": "If you like this video please be sure to drop a comment below",
    "start": "530040",
    "end": "533139"
  },
  {
    "text": "or leave us any feedback and we'll get back to you.",
    "start": "533140",
    "end": "535460"
  },
  {
    "text": "Be sure to subscribe,",
    "start": "535460",
    "end": "536840"
  },
  {
    "text": "and stay tuned for more videos in the future.",
    "start": "536840",
    "end": "539080"
  },
  {
    "text": "Thank you.",
    "start": "539080",
    "end": "543220"
  },
  {
    "text": " ",
    "start": "543220",
    "end": "545220"
  }
]