[
  {
    "text": "Hmm, let's see, let me make some first name",
    "start": "800",
    "end": "4960"
  },
  {
    "text": "Let's see, maybe last name",
    "start": "8800",
    "end": "15920"
  },
  {
    "text": "Oh just .. oh, oh, hello! I'm just making some \nJSON here! Now I've made this JSON object,  ",
    "start": "20560",
    "end": "26640"
  },
  {
    "text": "question comes to mind: if that's the format I \nlove to work in, what is the best data store to  ",
    "start": "26640",
    "end": "32800"
  },
  {
    "text": "handle JSON objects? Hello, my name is Jamil \nSpain, Brand Technical Specialist with the  ",
    "start": "32800",
    "end": "38800"
  },
  {
    "text": "US Financial Services Market. Today I want \nto talk through when making that decision,  ",
    "start": "38800",
    "end": "44879"
  },
  {
    "text": "not the front-end, not the back-end, but for the \ndatabase layer in your application architecture.  ",
    "start": "44880",
    "end": "50160"
  },
  {
    "text": "If you love working with JSON which database of \nchoice should you use? Today's topic is MongoDB  ",
    "start": "50160",
    "end": "57840"
  },
  {
    "text": "being that choice. Now as a technologist often when \nwe evaluate technology we ought to have some type  ",
    "start": "58640",
    "end": "65199"
  },
  {
    "text": "of criteria to make our decisions against. Here \nI have my chosen 3 that I like to do when  ",
    "start": "65200",
    "end": "71439"
  },
  {
    "text": "it comes to evaluating technology - the flexibility, \nhow easy easy is it to implement, and also at some  ",
    "start": "71440",
    "end": "79360"
  },
  {
    "text": "point once we start having fun behind the keyboard \nwe got to consider the deployment aspect here. I've  ",
    "start": "79360",
    "end": "85840"
  },
  {
    "text": "already started here with the JSON object. So as \nyou can see and guess, MongoDB is great for storing  ",
    "start": "85840",
    "end": "93600"
  },
  {
    "text": "NoSQL data structures. Meaning it's not, you \nknow, built to be, I don't have to define the  ",
    "start": "94240",
    "end": "99520"
  },
  {
    "text": "structure up front, I can take a JSON object, \na document, that really has no structure  ",
    "start": "99520",
    "end": "104399"
  },
  {
    "text": "any number of fields, and it's great to \nstore that. Then it also is an in memory",
    "start": "105120",
    "end": "114320"
  },
  {
    "text": "data store.",
    "start": "114320",
    "end": "115040"
  },
  {
    "text": "So all the objects that I store are located \nin memory processed there which means I have  ",
    "start": "117360",
    "end": "123120"
  },
  {
    "text": "relatively easy access to get to those as \nwell. These JSON documents can be any kind  ",
    "start": "123120",
    "end": "129039"
  },
  {
    "text": "of size here. One caveat that I have learned from \nworking with this and leveraging Mongo to store  ",
    "start": "129040",
    "end": "136000"
  },
  {
    "text": "my documents here is be conscious of sometimes \nwe have a tendency with JSON to not have a set  ",
    "start": "136000",
    "end": "142480"
  },
  {
    "text": "number of fields. And that can become a problem, \nyou may want to make placeholders for null values,  ",
    "start": "142480",
    "end": "148159"
  },
  {
    "text": "or define some type of consistency here as well. \nOne other great feature that I've noticed is if I  ",
    "start": "148160",
    "end": "156080"
  },
  {
    "text": "were to add a longitude, latitude to my JSON object, \nMongo is great for querying, doing geospatial  ",
    "start": "156080",
    "end": "163360"
  },
  {
    "text": "queries against these data sets as well. So, if I wanted to make my own type of let's say a food  ",
    "start": "163360",
    "end": "170080"
  },
  {
    "text": "delivery service and I wanted to determine which \nlocations were closest to you. If I have the users,  ",
    "start": "170080",
    "end": "176160"
  },
  {
    "text": "me Spain here, actual longitude latitude \ncoordinates I could compare that against  ",
    "start": "176880",
    "end": "183040"
  },
  {
    "text": "the other JSON documents that may also include \nthe same type of information here as well.  ",
    "start": "183040",
    "end": "188560"
  },
  {
    "text": "All right, I think we've covered this. Let's put \na check mark next to flexibility here as well.  ",
    "start": "188560",
    "end": "194640"
  },
  {
    "text": "Now when it comes to implementation, yes, you got \nto make sure that all the SDKs are available, are  ",
    "start": "194640",
    "end": "200080"
  },
  {
    "text": "are there any limitations that you have to account for. \nSo of course, there is JavaScript, there's Java,  ",
    "start": "200080",
    "end": "207280"
  },
  {
    "text": "Golang, there's pretty much all the the value \npairs are there. Theres the popular languages are  ",
    "start": "208880",
    "end": "215360"
  },
  {
    "text": "are there for you to use, and easy examples \nclient libraries to actually access this as  ",
    "start": "215360",
    "end": "221440"
  },
  {
    "text": "well. So not a consideration from there. Let's \ntalk about deployment for a second after I do  ",
    "start": "221440",
    "end": "227040"
  },
  {
    "text": "that check mark on implementation here. Therefore \ndeployment, you can set up MongoDB relatively, I  ",
    "start": "227040",
    "end": "235120"
  },
  {
    "text": "want to say easily, but it does, there are easy \nways to facilitate, whether it's on containers or  ",
    "start": "235120",
    "end": "241519"
  },
  {
    "text": "maybe on your own Linux servers. You can set up an \neasy instance without security, very easy to play  ",
    "start": "242080",
    "end": "247920"
  },
  {
    "text": "with. So for development, I would say yes it's very \neasy to set up a single instance and prove out how  ",
    "start": "247920",
    "end": "258000"
  },
  {
    "text": "easy it is to implement into your architecture \nwhether you're architecting for web or mobile  ",
    "start": "258000",
    "end": "263600"
  },
  {
    "text": "and what you're working with. And for production \npurposes, once you get that exciting architecture  ",
    "start": "263600",
    "end": "270240"
  },
  {
    "text": "set up here, you will have the ability, it works off \nthe same what I like to call \"main and secondary  ",
    "start": "270240",
    "end": "276319"
  },
  {
    "text": "models\". So you have a main node that you publish \nto or interact with and it can do the replication",
    "start": "276320",
    "end": "284000"
  },
  {
    "text": "to those secondaries.",
    "start": "286720",
    "end": "288000"
  },
  {
    "text": "So scaling that way on more of a horizontal scale \nto meet the demand of your actual architecture  ",
    "start": "291520",
    "end": "298720"
  },
  {
    "text": "there. So that can really be useful if \nyou want it to be your primary database  ",
    "start": "298720",
    "end": "303360"
  },
  {
    "text": "to function with, and as we know JSON is becoming \na pretty popular standard to to work with your  ",
    "start": "303920",
    "end": "310960"
  },
  {
    "text": "data structures there. So, we'll do the check mark \nthere. So, hopefully it's been useful. There's much,  ",
    "start": "310960",
    "end": "318000"
  },
  {
    "text": "much more, we're just touching the surface here, but \nI want you to definitely go out to mongodb.org and  ",
    "start": "318000",
    "end": "324400"
  },
  {
    "text": "look out for more information. Thank you for your \ntime. If you have questions, please drop us a line  ",
    "start": "324400",
    "end": "330800"
  },
  {
    "text": "below. And if you want to see more videos like \nthis in the future, please like and subscribe.",
    "start": "330800",
    "end": "337840"
  }
]