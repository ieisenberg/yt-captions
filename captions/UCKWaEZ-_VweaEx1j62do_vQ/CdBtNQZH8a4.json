[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "Hi, I'm Dan Bettinger with the IBM Cloud team,\nand I'm here today to answer the question",
    "start": "340",
    "end": "4550"
  },
  {
    "text": "\"What are microservices?\"",
    "start": "4550",
    "end": "6460"
  },
  {
    "text": "For those who don't know, a microservice is\nan architectural pattern where every application",
    "start": "6460",
    "end": "12380"
  },
  {
    "text": "function is its own service, and these services\nare deployed in containers, and these containers",
    "start": "12380",
    "end": "18180"
  },
  {
    "text": "speak with each other via APIs.",
    "start": "18180",
    "end": "20619"
  },
  {
    "text": "To better understand what a microservice is,\nlet's compare it to a monolith. A monolith",
    "start": "20619",
    "end": "26980"
  },
  {
    "text": "is a server-side system based on a single\napplication. In Java, for example, the application",
    "start": "26980",
    "end": "33890"
  },
  {
    "text": "will be deployed in WAR or JAR files, and\nthat's how it gets put into production.",
    "start": "33890",
    "end": "39550"
  },
  {
    "text": "The thing about a monolith is, initially it's\neasy to develop, deploy, and manage. So let's",
    "start": "39550",
    "end": "45520"
  },
  {
    "text": "get a better understanding through an example.\nIn this case, let's pretend we're a ticketing",
    "start": "45520",
    "end": "51789"
  },
  {
    "text": "platform and we sell tickets to sporting events\nand concerts.",
    "start": "51789",
    "end": "58079"
  },
  {
    "text": "In a monolithic world, that application might\nlook like this. We'd have a user interface.",
    "start": "58079",
    "end": "64628"
  },
  {
    "start": "60000",
    "end": "137000"
  },
  {
    "text": "Another component would be the inventory system.\nWe'd have a component that generates recommendations",
    "start": "64629",
    "end": "74060"
  },
  {
    "text": "based on user inputs. We'd have a cart. Some\nsort of a payment and ordering component.",
    "start": "74060",
    "end": "82950"
  },
  {
    "text": "And then we also have a reporting engine as\nwell.",
    "start": "82950",
    "end": "88569"
  },
  {
    "text": "The thing to understand about monoliths is\nthat, traditionally, they have a lot of shared",
    "start": "88569",
    "end": "93529"
  },
  {
    "text": "libraries, so they're highly dependent on\neach other. If you change a library you need",
    "start": "93529",
    "end": "102780"
  },
  {
    "text": "to understand the ramifications of these changes.\nYou could effectively take a whole application",
    "start": "102780",
    "end": "108320"
  },
  {
    "text": "down to your change.",
    "start": "108320",
    "end": "109969"
  },
  {
    "text": "Another challenge around a monolith is that\nyou're locked into the framework and the language",
    "start": "109969",
    "end": "117239"
  },
  {
    "text": "that the team picked when they built it. So\nadditional componentry, as it gets added,",
    "start": "117239",
    "end": "121990"
  },
  {
    "text": "needs to be written in those frameworks and\nlanguages, even if better ones are out there.",
    "start": "121990",
    "end": "126099"
  },
  {
    "text": "So that can be a problem as well.",
    "start": "126099",
    "end": "127889"
  },
  {
    "text": "Another challenge is the growth. So, this\nmight be great initially, but what happens",
    "start": "127889",
    "end": "132459"
  },
  {
    "text": "is, user feedback comes in and the development\nteam adds additional capability - additional",
    "start": "132459",
    "end": "136640"
  },
  {
    "text": "functionality. In this case, we'll add in\ncomponent A, and we'll add in component B,",
    "start": "136640",
    "end": "143319"
  },
  {
    "start": "137000",
    "end": "202000"
  },
  {
    "text": "and even component C.",
    "start": "143319",
    "end": "148430"
  },
  {
    "text": "So what happens is as the application gets\nlarger, it's it's less and less likely that",
    "start": "148430",
    "end": "153609"
  },
  {
    "text": "people on the team can understand the whole\nthing unto itself. They might know little",
    "start": "153610",
    "end": "157430"
  },
  {
    "text": "sections about what the application does and\nhow it operates, but, holistically, that's",
    "start": "157430",
    "end": "160519"
  },
  {
    "text": "a challenge. And that could lead to a lot\nof trouble in trying to deploy it as well",
    "start": "160519",
    "end": "163290"
  },
  {
    "text": "as maintain the application.",
    "start": "163290",
    "end": "164290"
  },
  {
    "text": "Speaking of deployments, deploying a monolith\nas it gets larger becomes more of a heroic",
    "start": "164290",
    "end": "167129"
  },
  {
    "text": "task, where a change window needs to be implemented\n- usually on a Friday night - and the ops",
    "start": "167129",
    "end": "173670"
  },
  {
    "text": "team would have to go wrestle with this monolith\nin trying to get it deployed to production",
    "start": "173670",
    "end": "177099"
  },
  {
    "text": "and have it stabilized and ready for Monday\nmorning when the load comes back on top of",
    "start": "177099",
    "end": "181280"
  },
  {
    "text": "it. So that's a challenge there unto itself.",
    "start": "181280",
    "end": "183079"
  },
  {
    "text": "Another challenge with the monolith is the\nability for it to scale. In this example with",
    "start": "183079",
    "end": "192840"
  },
  {
    "text": "the ticketing company, if there's a high demand\nfor tickets and there is lots of users, maybe",
    "start": "192840",
    "end": "199409"
  },
  {
    "text": "the payment system becomes under duress and\nit has some contention - it needs some help.",
    "start": "199409",
    "end": "203690"
  },
  {
    "start": "202000",
    "end": "242000"
  },
  {
    "text": "In that situation though, the way to fix that\nwould be to deploy the whole application again",
    "start": "203690",
    "end": "209689"
  },
  {
    "text": "and that could be interesting.",
    "start": "209689",
    "end": "211120"
  },
  {
    "text": "In this case, we have one version the application\nrunning right now. When the load comes up,",
    "start": "211120",
    "end": "216069"
  },
  {
    "text": "we need to deploy the second version of the\nwhole thing. That can take time, and by the",
    "start": "216069",
    "end": "228329"
  },
  {
    "text": "time it gets deployed and stabilized, that\npeak might have subsided. And in that case,",
    "start": "228329",
    "end": "232629"
  },
  {
    "text": "you've done nothing for your users because\nyou've missed it - they're already gone. So",
    "start": "232629",
    "end": "234540"
  },
  {
    "text": "that's one way to look at it. That's a monolith.",
    "start": "234540",
    "end": "237139"
  },
  {
    "text": "Let's take a look at the same application\ndeployed as microservices. So, in a microservices-based",
    "start": "237139",
    "end": "240680"
  },
  {
    "text": "deployment, we'd still have our user interface\n- that's a service inside of its own container.",
    "start": "240680",
    "end": "249709"
  },
  {
    "start": "242000",
    "end": "397000"
  },
  {
    "text": "We'd have the inventory service. We'd have\nthe recommendation engine deployed in its",
    "start": "249709",
    "end": "256320"
  },
  {
    "text": "own container as a service - the cart, for\nexample. We'd have some type of a payment",
    "start": "256320",
    "end": "265180"
  },
  {
    "text": "capability as well as the reporting. Now,\neach one of these talks to each other, where",
    "start": "265180",
    "end": "270660"
  },
  {
    "text": "needed, via APIs.",
    "start": "270660",
    "end": "271660"
  },
  {
    "text": "There are benefits you'll see right off the\nbat. Right off the bat, we'll understand that",
    "start": "271660",
    "end": "276610"
  },
  {
    "text": "the team responsible for the reporting engine\ncan use the language and framework that they",
    "start": "276610",
    "end": "281449"
  },
  {
    "text": "want to use. The team that runs the cart,\nfor example, can use their own language and",
    "start": "281450",
    "end": "288870"
  },
  {
    "text": "their own framework that best fits their requirements.\nSo that's a really interesting benefit right",
    "start": "288870",
    "end": "294280"
  },
  {
    "text": "off the bat.\nNumber two, you're able to actually iterate",
    "start": "294280",
    "end": "296919"
  },
  {
    "text": "at will. These containers and these services\nare front-ended by a DevOps pipeline. As a",
    "start": "296919",
    "end": "301650"
  },
  {
    "text": "developer builds code or checks in code into\nthe pipeline, it goes to the automated testing,",
    "start": "301650",
    "end": "308220"
  },
  {
    "text": "once all that passes, that code can be deployed\ninto production immediately. You're no longer",
    "start": "308220",
    "end": "312349"
  },
  {
    "text": "beholden to the speed by which the other teams\ncan operate. So, you're able to iterate faster,",
    "start": "312349",
    "end": "317300"
  },
  {
    "text": "bringing value to your customers at a faster\npace, which is wonderful.",
    "start": "317300",
    "end": "322720"
  },
  {
    "text": "Additionally, if there is a change that breaks\npart of that service or breaks, in this case,",
    "start": "322720",
    "end": "327340"
  },
  {
    "text": "the reporting engine, the whole application\ndoesn't fall over. It still works. So, effectively,",
    "start": "327340",
    "end": "329030"
  },
  {
    "text": "by using this model, you're reducing your\nrisk, you're implementing smaller changes,",
    "start": "329030",
    "end": "331610"
  },
  {
    "text": "and you're increasing value over time.",
    "start": "331610",
    "end": "332900"
  },
  {
    "text": "Another really cool part is that you can actually\nadd in new components over time, just like",
    "start": "332900",
    "end": "337210"
  },
  {
    "text": "we did on the monolith. So we can add in component\nA, component B, and component C. And they",
    "start": "337210",
    "end": "343729"
  },
  {
    "text": "can all be in different languages and frameworks,\nwhich is wonderful. And they just communicate,",
    "start": "343729",
    "end": "350780"
  },
  {
    "text": "again, over APIs.",
    "start": "350780",
    "end": "351780"
  },
  {
    "text": "Another benefit of the microservice-based\narchitecture is its ability to independently",
    "start": "351780",
    "end": "354980"
  },
  {
    "text": "scale. If there are a lot of people trying\nto purchase tickets at the same time, and",
    "start": "354980",
    "end": "359920"
  },
  {
    "text": "the purchasing or that payment system is under\nduress or is under some contention, the platform",
    "start": "359920",
    "end": "362069"
  },
  {
    "text": "can spin up additional containers to help\nwith the load. And when the load subsides,",
    "start": "362069",
    "end": "364550"
  },
  {
    "text": "those containers can go away. So that's a\nwonderful way for the application to naturally",
    "start": "364550",
    "end": "367190"
  },
  {
    "text": "breathe.",
    "start": "367190",
    "end": "368190"
  },
  {
    "text": "So, let's review real quick: A microservices\narchitecture is one where every application",
    "start": "368190",
    "end": "370870"
  },
  {
    "text": "function is its own service deployed in a\ncontainer and they communicate over APIs.",
    "start": "370870",
    "end": "374919"
  },
  {
    "text": "You're given the ability to have independence\nwith respect to the language and framework",
    "start": "374919",
    "end": "378490"
  },
  {
    "text": "that you choose. You're able to iterate fast\nand when needed, and you're able to scale",
    "start": "378490",
    "end": "386940"
  },
  {
    "text": "independently. So that's what makes microservices\nreally interesting.",
    "start": "386940",
    "end": "390650"
  },
  {
    "text": "Thank you for your time today. If you'd like\nto learn more and see more lightboarding videos,",
    "start": "390650",
    "end": "395330"
  },
  {
    "text": "check us out on the IBM Cloud Blog.",
    "start": "395330",
    "end": "397210"
  }
]