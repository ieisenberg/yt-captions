[
  {
    "text": "What if you could simplify how you use a quantum computer so  ",
    "start": "0",
    "end": "2940"
  },
  {
    "text": "you can concentrate on higher level applications that you actually care about? In this video, we're  ",
    "start": "2940",
    "end": "8760"
  },
  {
    "text": "going to be talking about quantum primitives, which will hopefully help you accomplish this.  ",
    "start": "8760",
    "end": "12780"
  },
  {
    "text": "Earlier videos, we looked at how to program a quantum computer.  ",
    "start": "13920",
    "end": "17660"
  },
  {
    "text": "The basic building block for this is a quantum circuit which looks something like this.  ",
    "start": "17660",
    "end": "21360"
  },
  {
    "text": "The quantum circuit is basically at the same level as assembly language for a classical computer.  ",
    "start": "24600",
    "end": "30540"
  },
  {
    "text": "In fact, the open chasm language is just that. It is an assembly language that lets you write  ",
    "start": "30540",
    "end": "37080"
  },
  {
    "text": "a quantum circuit in code. Similarly, when you run your quantum program on a quantum computer,  ",
    "start": "37080",
    "end": "46260"
  },
  {
    "text": "you get a low level result out. Something that looks like this.  ",
    "start": "48180",
    "end": "52860"
  },
  {
    "text": "One key area that makes quantum computing different than classical computing is that  ",
    "start": "57780",
    "end": "62100"
  },
  {
    "text": "it's probabilistic, or when you have a fixed input, you can get different outputs. So we  ",
    "start": "62100",
    "end": "67320"
  },
  {
    "text": "run the circuit or program multiple times, and the output is the number of times you got each result.  ",
    "start": "67320",
    "end": "73320"
  },
  {
    "text": "However, when you're writing higher level applications,  ",
    "start": "73920",
    "end": "76920"
  },
  {
    "text": "this is too low level to typically work with and you want to deal with higher level constructs  ",
    "start": "76920",
    "end": "81600"
  },
  {
    "text": "such as probability distributions or expectation values which are estimates of observables.  ",
    "start": "82380",
    "end": "87960"
  },
  {
    "text": "This is where quantum primitives come \ninto play. Quantum primitive is basically  ",
    "start": "90120",
    "end": "96060"
  },
  {
    "text": "just a black box abstraction where \nyou give it your quantum circuit input  ",
    "start": "96720",
    "end": "102960"
  },
  {
    "text": "and you get the output at the higher level that you actually care about inside the primitive,  ",
    "start": "105840",
    "end": "111659"
  },
  {
    "text": "all the details on how you compute this \nhigher level output and all of the pre and  ",
    "start": "113640",
    "end": "120120"
  },
  {
    "text": "post processing that are necessary to compute it are abstracted away from you. You previously and  ",
    "start": "120120",
    "end": "126240"
  },
  {
    "text": "still can do this manually if you so desire, but the primitive greatly simplifies how you do this.  ",
    "start": "126240",
    "end": "131819"
  },
  {
    "text": "Then vendors of quantum computers, like IBM, provide implementations of these primitives which  ",
    "start": "132780",
    "end": "141300"
  },
  {
    "text": "provide the most efficient software and hardware techniques to leverage  ",
    "start": "141840",
    "end": "146700"
  },
  {
    "text": "the primitive to get the the best result that you want.  ",
    "start": "147300",
    "end": "149940"
  },
  {
    "text": "If you're writing a higher level application where you have.  ",
    "start": "152820",
    "end": "156360"
  },
  {
    "text": "A classical optimizer that works with these higher level results. This greatly simplifies how you  ",
    "start": "157440",
    "end": "165540"
  },
  {
    "text": "write the application because you don't have to worry about the intermediate computation.  ",
    "start": "165540",
    "end": "170519"
  },
  {
    "text": "You just have to deal with how you build this higher level application. Hopefully this  ",
    "start": "170520",
    "end": "175680"
  },
  {
    "text": "shows you how you can use quantum primitives to accelerate developing higher level applications.  ",
    "start": "175680",
    "end": "180540"
  },
  {
    "text": "There are more details and links for this in the description below. Please don't forget to like and  ",
    "start": "181740",
    "end": "186540"
  },
  {
    "text": "subscribe and if you have any questions, please leave a comment below. Thank you.",
    "start": "186540",
    "end": "191094"
  }
]