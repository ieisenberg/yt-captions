[
  {
    "text": "Hi everyone, my name is Sai Vennam",
    "start": "220",
    "end": "2120"
  },
  {
    "text": "and I'm with the IBM Cloud team.",
    "start": "2120",
    "end": "3820"
  },
  {
    "text": "Today, let's talk about Infrastructure as Code.",
    "start": "3820",
    "end": "6560"
  },
  {
    "text": "These days it's increasingly crucial to automate your infrastructure",
    "start": "6560",
    "end": "10160"
  },
  {
    "text": "as applications can be deployed into production up to hundreds of times per day.",
    "start": "10160",
    "end": "14100"
  },
  {
    "text": "In addition, infrastructure is fleeting",
    "start": "14100",
    "end": "16340"
  },
  {
    "text": "and can be provisioned or deprovisioned in response to load.",
    "start": "16340",
    "end": "19880"
  },
  {
    "text": "Let's start with an example.",
    "start": "19880",
    "end": "21939"
  },
  {
    "text": "Let's say you're building out an application",
    "start": "21940",
    "end": "24100"
  },
  {
    "text": "and you've chosen a public cloud.",
    "start": "24100",
    "end": "26039"
  },
  {
    "text": "Now, the first thing you've decided to do is",
    "start": "26039",
    "end": "28360"
  },
  {
    "text": "build your application on Kubernetes.",
    "start": "28360",
    "end": "30600"
  },
  {
    "text": "So, we'll have a Kubernetes application stack.",
    "start": "30600",
    "end": "35120"
  },
  {
    "text": "Now we don't actually have to dive deeper into Kubernetes",
    "start": "35120",
    "end": "38120"
  },
  {
    "text": "because it isolates the hardware from the application layer.",
    "start": "38120",
    "end": "42520"
  },
  {
    "text": "So, we don't actually have to go in deeper,",
    "start": "42530",
    "end": "44559"
  },
  {
    "text": "it will manage that for us.",
    "start": "44560",
    "end": "46440"
  },
  {
    "text": "Next, let's say that after a week of development",
    "start": "46440",
    "end": "49160"
  },
  {
    "text": "we've decided to bring in a VM",
    "start": "49160",
    "end": "51560"
  },
  {
    "text": "that holds a legacy application that we have not modernized just yet.",
    "start": "51560",
    "end": "55620"
  },
  {
    "text": "So, we'll bring on a VM",
    "start": "55620",
    "end": "59219"
  },
  {
    "text": "and now to actually connect up those dots",
    "start": "59220",
    "end": "62300"
  },
  {
    "text": "we'll need a VPC (Virtual Private Cloud).",
    "start": "62300",
    "end": "69600"
  },
  {
    "text": "So, there we go, we have a basic infrastructure in place.",
    "start": "69600",
    "end": "74100"
  },
  {
    "text": "Now, let's say that I've developed this, it's great,",
    "start": "74120",
    "end": "76600"
  },
  {
    "text": "all the infrastructure details are documented.",
    "start": "76600",
    "end": "79040"
  },
  {
    "text": "Now I'm ready to move it into a test phase.",
    "start": "79040",
    "end": "81940"
  },
  {
    "text": "Now, I know that for best practice what I should do is create a whole new environment",
    "start": "81940",
    "end": "89000"
  },
  {
    "text": "that mimics my development environment.",
    "start": "89000",
    "end": "93880"
  },
  {
    "text": "To do so, I'll go back to my documentation",
    "start": "93880",
    "end": "96659"
  },
  {
    "text": "and start following the steps to spin up that infrastructure.",
    "start": "96660",
    "end": "100360"
  },
  {
    "text": "But let's say that maybe I forgot to document one of the config switches that I've changed,",
    "start": "100360",
    "end": "105600"
  },
  {
    "text": "or maybe the platform is different in how it handles provisioning infrastructure.",
    "start": "105600",
    "end": "110100"
  },
  {
    "text": "Regardless, the application and test don't work the same way in the new environment.",
    "start": "110100",
    "end": "115640"
  },
  {
    "text": "I decide, \"OK, we need to fix this problem\"",
    "start": "115640",
    "end": "118640"
  },
  {
    "text": "- and to never have this problem in the future again,",
    "start": "118640",
    "end": "121020"
  },
  {
    "text": "we need to take advantage of infrastructure as code.",
    "start": "121020",
    "end": "124140"
  },
  {
    "text": "Let's talk about the first approach to infrastructure automation,",
    "start": "124140",
    "end": "127880"
  },
  {
    "text": "it's going to be imperative.",
    "start": "127880",
    "end": "131440"
  },
  {
    "text": "Now, this is kind of intuitive for most people",
    "start": "131440",
    "end": "135340"
  },
  {
    "text": "because an imperative approach allows you to define step-by-step",
    "start": "135340",
    "end": "139040"
  },
  {
    "text": "how to get your infrastructure into a certain state.",
    "start": "139040",
    "end": "141639"
  },
  {
    "text": "So, in general an imperative approach would use something like",
    "start": "141639",
    "end": "145040"
  },
  {
    "text": "a CLI along with maybe a bash script.",
    "start": "145040",
    "end": "148519"
  },
  {
    "text": "So, for example, in this case",
    "start": "148519",
    "end": "151340"
  },
  {
    "text": "we could do something like, \"cli create k8s\",",
    "start": "151340",
    "end": "157200"
  },
  {
    "text": "and then we would define some additional commands to",
    "start": "157200",
    "end": "160300"
  },
  {
    "text": "customize that Kubernetes deployment.",
    "start": "160300",
    "end": "162740"
  },
  {
    "text": "We'll do the same thing for the VM, as well as the VPC.",
    "start": "162740",
    "end": "171600"
  },
  {
    "text": "So, an imperative approach has an advantage.",
    "start": "171600",
    "end": "175560"
  },
  {
    "text": "It allows you to really define step-by-step of how your infrastructure is provisioned",
    "start": "175560",
    "end": "180420"
  },
  {
    "text": "and that generally comes with more power as well",
    "start": "180420",
    "end": "183380"
  },
  {
    "text": "because you're using the cloud tools",
    "start": "183380",
    "end": "185959"
  },
  {
    "text": "and doing it in a step-by-step process.",
    "start": "185960",
    "end": "189480"
  },
  {
    "text": "But at the same time, this can come with complexity.",
    "start": "189480",
    "end": "192900"
  },
  {
    "text": "For example, if you wanted to tear down your VMs,",
    "start": "192900",
    "end": "195959"
  },
  {
    "text": "or your environments rather,",
    "start": "195960",
    "end": "197800"
  },
  {
    "text": "or let's say you wanted to scale it up or down,",
    "start": "197800",
    "end": "200140"
  },
  {
    "text": "you'd have to write custom scripts.",
    "start": "200140",
    "end": "202180"
  },
  {
    "text": "It's not handled for you in an imperative approach,",
    "start": "202180",
    "end": "204920"
  },
  {
    "text": "so this generally doesn't scale well.",
    "start": "204920",
    "end": "208020"
  },
  {
    "text": "Another approach to Infrastructure Automation is going to be Declarative,",
    "start": "208020",
    "end": "213280"
  },
  {
    "text": "and this is actually my favorite approach.",
    "start": "213280",
    "end": "216819"
  },
  {
    "text": "Now, a declarative approach would be something like Terraform",
    "start": "216829",
    "end": "221720"
  },
  {
    "text": "and what it basically allows you to do is to define the final state of your infrastructure",
    "start": "221720",
    "end": "226740"
  },
  {
    "text": "and then it lets the provider handle the rest.",
    "start": "226740",
    "end": "229199"
  },
  {
    "text": "So, instead of defining every step,",
    "start": "229199",
    "end": "231440"
  },
  {
    "text": "you just define the final state.",
    "start": "231440",
    "end": "233400"
  },
  {
    "text": "So, in this example maybe you would do something like",
    "start": "233400",
    "end": "236480"
  },
  {
    "text": "define a Kubernetes resource",
    "start": "236480",
    "end": "241580"
  },
  {
    "text": "and a VM resource, as well as a VPC resource.",
    "start": "241580",
    "end": "249880"
  },
  {
    "text": "Another great thing about this",
    "start": "249880",
    "end": "252140"
  },
  {
    "text": "is it's generally managed through just simple config maps.",
    "start": "252140",
    "end": "255200"
  },
  {
    "text": "So, if you wanted to do something like",
    "start": "255200",
    "end": "257200"
  },
  {
    "text": "define a host you could do that,",
    "start": "257200",
    "end": "260120"
  },
  {
    "text": "maybe a domain, or maybe even the subnets.",
    "start": "260120",
    "end": "268960"
  },
  {
    "text": "So, in general a declarative approach",
    "start": "268960",
    "end": "271900"
  },
  {
    "text": "allows you to more easily manage the configuration",
    "start": "271900",
    "end": "274979"
  },
  {
    "text": "and is my preferred approach for automating\ninfrastructure.",
    "start": "274980",
    "end": "278240"
  },
  {
    "text": "Let's take this simple example,",
    "start": "278240",
    "end": "280080"
  },
  {
    "text": "if you ran the imperative script multiple times",
    "start": "280080",
    "end": "283020"
  },
  {
    "text": "you would actually end up with a multiple environments",
    "start": "283020",
    "end": "286819"
  },
  {
    "text": "and, in addition, let's say one of the steps halfway through failed",
    "start": "286820",
    "end": "290360"
  },
  {
    "text": "then you would have to add error handling",
    "start": "290360",
    "end": "293460"
  },
  {
    "text": "to tear down the steps that did succeed.",
    "start": "293460",
    "end": "296180"
  },
  {
    "text": "Now with the declarative approach, no matter how many times you run the script,",
    "start": "296180",
    "end": "299720"
  },
  {
    "text": "you end up with the exact same infrastructure.",
    "start": "299720",
    "end": "302380"
  },
  {
    "text": "So, you could do it the first time,",
    "start": "302380",
    "end": "304460"
  },
  {
    "text": "provision your environment,",
    "start": "304460",
    "end": "306020"
  },
  {
    "text": "and then maybe run it again",
    "start": "306020",
    "end": "307500"
  },
  {
    "text": "later on to ensure that your environment hasn't changed.",
    "start": "307500",
    "end": "311040"
  },
  {
    "text": "So, I'd say this is very important to can understand the different approaches infrastructure as code,",
    "start": "311040",
    "end": "316620"
  },
  {
    "text": "but, in general, I do prefer a declarative approach.",
    "start": "316620",
    "end": "320360"
  },
  {
    "text": "Next let's talk about DevOps.",
    "start": "320360",
    "end": "323099"
  },
  {
    "text": "Now we all understand how important about DevOps is.",
    "start": "323100",
    "end": "326100"
  },
  {
    "text": "When developing an application, you'll first write some code,",
    "start": "326100",
    "end": "330060"
  },
  {
    "text": "you'll want test that it actually works,",
    "start": "330060",
    "end": "334400"
  },
  {
    "text": "and then you want to push it into production.",
    "start": "334400",
    "end": "340020"
  },
  {
    "text": "And then you want to make sure that all of that is",
    "start": "340020",
    "end": "344039"
  },
  {
    "text": "always working and you can repeat those processes.",
    "start": "344040",
    "end": "346920"
  },
  {
    "text": "Now, I know there are teams out there that have a perfect agile DevOps flow,",
    "start": "346920",
    "end": "351280"
  },
  {
    "text": "but because they're working with legacy infrastructure",
    "start": "351280",
    "end": "353860"
  },
  {
    "text": "they have to open a ticket every time they want to get  a new VM,",
    "start": "353860",
    "end": "356819"
  },
  {
    "text": "and that's just due to the infrastructure that they're running on.",
    "start": "356820",
    "end": "360360"
  },
  {
    "text": "Now, that really holds them back.",
    "start": "360360",
    "end": "363219"
  },
  {
    "text": "Now, with Infrastructure as Code, when it's supported,",
    "start": "363220",
    "end": "365960"
  },
  {
    "text": "it allows you to treat your infrastructure",
    "start": "365960",
    "end": "368139"
  },
  {
    "text": "with the same level of quality that you treat your code.",
    "start": "368140",
    "end": "370820"
  },
  {
    "text": "So, this includes things like versioning.",
    "start": "370820",
    "end": "372980"
  },
  {
    "text": "So, essentially, you want to make sure that any time infrastructure changes,",
    "start": "372980",
    "end": "376420"
  },
  {
    "text": "you're tracking that,",
    "start": "376420",
    "end": "377720"
  },
  {
    "text": "and is generally a best approach for automation.",
    "start": "377720",
    "end": "382380"
  },
  {
    "text": "The last thing I want to talk about",
    "start": "382380",
    "end": "384300"
  },
  {
    "text": "is immutable vs mutable infrastructure.",
    "start": "384300",
    "end": "387800"
  },
  {
    "text": "Now, breaking that down:",
    "start": "387800",
    "end": "389979"
  },
  {
    "text": "an immutable infrastructure is one that can't be changed,",
    "start": "389980",
    "end": "394460"
  },
  {
    "text": "it can't be mutated.",
    "start": "394460",
    "end": "396160"
  },
  {
    "text": "Now, at first impression, that might sound like a bad thing,",
    "start": "396160",
    "end": "399160"
  },
  {
    "text": "but let's break this down by seeing an example",
    "start": "399160",
    "end": "402320"
  },
  {
    "text": "with a mutable approach to infrastructure architecture.",
    "start": "402320",
    "end": "406310"
  },
  {
    "text": "So, we have our example here,",
    "start": "406310",
    "end": "408740"
  },
  {
    "text": "and let's say that we're building out the app and we decide",
    "start": "408740",
    "end": "412099"
  },
  {
    "text": "we need a database.",
    "start": "412100",
    "end": "413700"
  },
  {
    "text": "So, to do so, we'll run a script",
    "start": "413700",
    "end": "417520"
  },
  {
    "text": "in our development environment.",
    "start": "417520",
    "end": "419039"
  },
  {
    "text": "This brings up that database within our VPC.",
    "start": "419040",
    "end": "422880"
  },
  {
    "text": "Now all of this is working great,",
    "start": "422880",
    "end": "424980"
  },
  {
    "text": "so we say, \"Hey, let's just run that script across all of the environments that we have.\"",
    "start": "424980",
    "end": "430360"
  },
  {
    "text": "Now, let's say that 99% of the time that\nworks fine,",
    "start": "430360",
    "end": "433560"
  },
  {
    "text": "but some of the times it fails,",
    "start": "433560",
    "end": "435800"
  },
  {
    "text": "and you're in a weird limbo state.",
    "start": "435800",
    "end": "437460"
  },
  {
    "text": "So, let's break that down.",
    "start": "437460",
    "end": "439120"
  },
  {
    "text": "So, we're going from version one to version two.",
    "start": "439120",
    "end": "447800"
  },
  {
    "text": "Now, we have infrastructure code",
    "start": "447800",
    "end": "450120"
  },
  {
    "text": "in place to bring up version one,",
    "start": "450120",
    "end": "452199"
  },
  {
    "text": "but now we ran this custom script",
    "start": "452200",
    "end": "454540"
  },
  {
    "text": "to move it from version one to version two.",
    "start": "454540",
    "end": "459260"
  },
  {
    "text": "What we essentially have right now is something called \"configuration drift\",",
    "start": "459260",
    "end": "463620"
  },
  {
    "text": "or \"environment drift\".",
    "start": "463620",
    "end": "465080"
  },
  {
    "text": "Our existing environment is no longer matching what we have in our automation.",
    "start": "465080",
    "end": "471240"
  },
  {
    "text": "Now, the problem is:",
    "start": "471240",
    "end": "472740"
  },
  {
    "text": "to help debug those problem situations",
    "start": "472740",
    "end": "475880"
  },
  {
    "text": "you would have to wipe out the entire environment",
    "start": "475880",
    "end": "479500"
  },
  {
    "text": "and then redeploy version one and then run those scripts.",
    "start": "479500",
    "end": "482780"
  },
  {
    "text": "Now, that might seem OK the first couple of times you do it,",
    "start": "482780",
    "end": "485540"
  },
  {
    "text": "but when moving to scale it becomes incredibly hard to maintain.",
    "start": "485540",
    "end": "489440"
  },
  {
    "text": "So, with an immutable approach",
    "start": "489440",
    "end": "491760"
  },
  {
    "text": "to infrastructure and infrastructure automation,",
    "start": "491760",
    "end": "494520"
  },
  {
    "text": "every time you want to make a change to the infrastructure",
    "start": "494520",
    "end": "497099"
  },
  {
    "text": "you bring up a brand new environment alongside the old one",
    "start": "497100",
    "end": "501160"
  },
  {
    "text": "and then, once you verify that they're both working,",
    "start": "501160",
    "end": "503920"
  },
  {
    "text": "you can bring down the older version.",
    "start": "503920",
    "end": "506700"
  },
  {
    "text": "Now, it's a little expensive because",
    "start": "506700",
    "end": "508920"
  },
  {
    "text": "you can imagine that you're running both environments at the same time,",
    "start": "508920",
    "end": "512719"
  },
  {
    "text": "but, in general, it's the best practice",
    "start": "512720",
    "end": "515860"
  },
  {
    "text": "to ensure that your infrastructure  can move to scale.",
    "start": "515860",
    "end": "518839"
  },
  {
    "text": "Thanks for joining me for this quick overview of infrastructure as code.",
    "start": "518840",
    "end": "521919"
  },
  {
    "text": "If you want to learn more about this, or DevOps\ncheck out the link below.",
    "start": "521920",
    "end": "525639"
  },
  {
    "text": "Remember you can always get started with a free account on IBM Cloud.",
    "start": "525640",
    "end": "529780"
  },
  {
    "text": "Thank you.",
    "start": "529780",
    "end": "530660"
  }
]