[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "Observability? Monitoring? Aren't they the same \nthing? That's what a lot of people think. But  ",
    "start": "440",
    "end": "6640"
  },
  {
    "text": "we're going to debunk that myth and five \nothers today in this video. Let's get to it. ",
    "start": "6640",
    "end": "11440"
  },
  {
    "text": "Myth number one: Just a name. What do I mean \nby that? I'm actually talking about how a lot of  ",
    "start": "11440",
    "end": "19919"
  },
  {
    "start": "12000",
    "end": "105000"
  },
  {
    "text": "people think that there's not much difference \nbetween application performance monitoring and  ",
    "start": "19920",
    "end": "25760"
  },
  {
    "text": "observability. But the truth is, it's they're \nbuilt for two completely different problem  ",
    "start": "25760",
    "end": "30200"
  },
  {
    "text": "sets. Application performance monitoring or APM \nwas built around the concept of seeing inside  ",
    "start": "30200",
    "end": "37760"
  },
  {
    "text": "runtimes. Now things like Java or .Net. But the \nreason it works for APM is because in the world of  ",
    "start": "37760",
    "end": "48640"
  },
  {
    "text": "runtimes, especially monolithic runtimes, all your \nbackend systems are tied to that same runtime.  ",
    "start": "48640",
    "end": "56360"
  },
  {
    "text": "And all your front end requests are coming in to \nthat same runtime. So if you have visibility here,  ",
    "start": "56360",
    "end": "66400"
  },
  {
    "text": "then you can see everything that's going on \nin your system. But observability is built  ",
    "start": "66400",
    "end": "70560"
  },
  {
    "text": "for modern applications that are built on top \nof microservices environments with much more  ",
    "start": "70560",
    "end": "76880"
  },
  {
    "text": "complex systems. And while there are some \nruntimes that might be in those systems,  ",
    "start": "76880",
    "end": "82399"
  },
  {
    "text": "that's not enough for you to understand \nexactly what's going on throughout the  ",
    "start": "82400",
    "end": "85760"
  },
  {
    "text": "entire microservice application. So the only \nway to really do that is with observability,  ",
    "start": "85760",
    "end": "91600"
  },
  {
    "text": "which has the ability to monitor all parts of the \nsystem--even going back to your backend systems  ",
    "start": "91600",
    "end": "98479"
  },
  {
    "text": "like your mainframe, so that you see a full \npicture of everything that's going on in the world  ",
    "start": "98480",
    "end": "103920"
  },
  {
    "text": "of your applications. Well, that was myth number \none. Now, let's take a look at myth number two: ",
    "start": "103920",
    "end": "111080"
  },
  {
    "start": "105000",
    "end": "230000"
  },
  {
    "text": "Log love. What's log love? Log love is actually \nreferring to something I found out a few years  ",
    "start": "111080",
    "end": "118360"
  },
  {
    "text": "ago from an analyst who I was talking to, and he \nasked me if I had heard about this situation where  ",
    "start": "118360",
    "end": "124080"
  },
  {
    "text": "people were taking their metrics, traces and logs, \nwhich everyone thinks of as observability and not  ",
    "start": "124080",
    "end": "132080"
  },
  {
    "text": "doing any monitoring, but rather just writing \nall that information into log files. And when  ",
    "start": "132080",
    "end": "137320"
  },
  {
    "text": "a problem occurred, going to the logs to solve the \nproblem. This isn't just a myth, this is an actual  ",
    "start": "137320",
    "end": "144560"
  },
  {
    "text": "anti-pattern. And anti-pattern is something that \nseems like it's a good idea, but it's actually  ",
    "start": "144560",
    "end": "150239"
  },
  {
    "text": "the exact opposite result. And in this case, the \nexact opposite result can be destructive to your  ",
    "start": "150240",
    "end": "155880"
  },
  {
    "text": "environment, to your applications, to your \nbusiness. Let me explain why. If you're not  ",
    "start": "155880",
    "end": "162040"
  },
  {
    "text": "monitoring, that is, looking at all the different \npieces of your environment, plus seeing how your  ",
    "start": "162040",
    "end": "172840"
  },
  {
    "text": "end users are being affected by monitoring their \nperformance as well, and doing this in real time as  ",
    "start": "172840",
    "end": "181560"
  },
  {
    "text": "it's happening. Then when you find out there's \na problem, say, through a trouble ticket,  ",
    "start": "181560",
    "end": "187720"
  },
  {
    "text": "that means that you're already too late to help \nyourself. But by monitoring, you have the ability  ",
    "start": "187720",
    "end": "193960"
  },
  {
    "text": "to catch things before they happen. And the other \nnice thing is by tying all the monitoring pieces  ",
    "start": "193960",
    "end": "200520"
  },
  {
    "text": "together with your log information that you do \nhave, you actually speed up your troubleshooting.  ",
    "start": "200520",
    "end": "209120"
  },
  {
    "text": "So not only do you have the chance to get in front \nof incidents before they impact your users, but  ",
    "start": "209120",
    "end": "214680"
  },
  {
    "text": "when an incident does occur, you have the ability \nto solve it much faster. So when I think of M/T/L  ",
    "start": "214680",
    "end": "221040"
  },
  {
    "text": "in the world of monitoring versus logging, I just \nlike to put a little \"2\" on the M for metrics,  ",
    "start": "221040",
    "end": "227360"
  },
  {
    "text": "monitoring, traces and logs. Now that we've looked \nat two myths, let's look at myth number three:  ",
    "start": "227360",
    "end": "235480"
  },
  {
    "start": "230000",
    "end": "345000"
  },
  {
    "text": "Sticker shock. What are we talking about? You \nprobably want to hear about pricing and cost  ",
    "start": "235480",
    "end": "242400"
  },
  {
    "text": "for observability tools. And it's something that \nwe should look at because the reality is that  ",
    "start": "242400",
    "end": "248599"
  },
  {
    "text": "observability tools can be expensive, but they \ndon't have to be expensive. Let me explain why.  ",
    "start": "248600",
    "end": "255200"
  },
  {
    "text": "There is one way of pricing where everything, all \nthe features that you get and all the things that  ",
    "start": "255200",
    "end": "259799"
  },
  {
    "text": "you do are inclusive and forecastable and known, \nsuch as charging per host in your environment.  ",
    "start": "259800",
    "end": "267800"
  },
  {
    "text": "This allows you to have a very steady price \nquarter by quarter, year by year, based on the  ",
    "start": "267800",
    "end": "274560"
  },
  {
    "text": "number of things that you're actually monitoring. \nBut there is another way that some observability  ",
    "start": "274560",
    "end": "279440"
  },
  {
    "text": "solutions and monitoring solutions charge, and \nthat is to charge you for other things around the  ",
    "start": "279440",
    "end": "285000"
  },
  {
    "text": "system, such as the number of applications that \nyou're running or maybe the number of users that  ",
    "start": "285000",
    "end": "292040"
  },
  {
    "text": "you have using your product, that's actually \nusing the observability tool itself. Maybe  ",
    "start": "292040",
    "end": "298280"
  },
  {
    "text": "they're just looking at the amount of data that \nyou're sending through the system. They might even  ",
    "start": "298280",
    "end": "303720"
  },
  {
    "text": "charge you just for debugging. And what happens \nwhen this comes in is you don't know what's going  ",
    "start": "303720",
    "end": "311240"
  },
  {
    "text": "to happen ahead of time. So you're going along at \na fair clip. And then one or more of these things  ",
    "start": "311240",
    "end": "317479"
  },
  {
    "text": "happen and you end up with a quarterly surprise \ncharge. How big is that surprise charge going to  ",
    "start": "317480",
    "end": "323720"
  },
  {
    "text": "be? There's evidence out in the marketplace that \nit could be $50 million or more. So when you're  ",
    "start": "323720",
    "end": "329880"
  },
  {
    "text": "looking at your observability solutions, you \nhave to keep this myth in mind, not because it's  ",
    "start": "329880",
    "end": "335160"
  },
  {
    "text": "definitely going to be there, but because there's \nways around it. But you want to be looking for  ",
    "start": "335160",
    "end": "339080"
  },
  {
    "text": "solutions that have all inclusive pricing and have \na fair and forecastable way of giving you that  ",
    "start": "339080",
    "end": "344759"
  },
  {
    "text": "price. Okay. We're halfway through the myths. Now \nwe're about to talk about myth number four: Who, me?  ",
    "start": "344760",
    "end": "353660"
  },
  {
    "start": "345000",
    "end": "432000"
  },
  {
    "text": "That sounds really weird. Let's talk about \nit. A lot of people think that observability  ",
    "start": "353660",
    "end": "359120"
  },
  {
    "text": "is built to be used only by site reliability \nengineers or SREs. But the situation with modern  ",
    "start": "359120",
    "end": "366280"
  },
  {
    "text": "applications-- and this is actually something that \ngoes beyond traditional monitoring capabilities  ",
    "start": "366280",
    "end": "372040"
  },
  {
    "text": "--is that observability allows us to give the \ninformation from the systems to the individual  ",
    "start": "372040",
    "end": "379720"
  },
  {
    "text": "people and organizations that need it. So, for \nexample, you could get end user information to  ",
    "start": "379720",
    "end": "387600"
  },
  {
    "text": "your marketing team. You can get performance \nof different runtimes to your development  ",
    "start": "387600",
    "end": "394760"
  },
  {
    "text": "organization. You can look at the system as a \nwhole sent to your DevOps team. Or, of course,  ",
    "start": "394760",
    "end": "403560"
  },
  {
    "text": "your SRE team and other IT personnel that need \nto see what's going on. You can even include  ",
    "start": "403560",
    "end": "411800"
  },
  {
    "text": "your business users and give them the information \nthey need. The fact is that observability takes  ",
    "start": "411800",
    "end": "417680"
  },
  {
    "text": "all the data that in traditional monitoring \nis put just through your Ops power users and  ",
    "start": "417680",
    "end": "425240"
  },
  {
    "text": "makes it democratized, giving everyone a view \nof the data that they need so that they can do  ",
    "start": "425240",
    "end": "429960"
  },
  {
    "text": "their job as an application stakeholder. \nNow, we've made it to myth number five:  ",
    "start": "429960",
    "end": "437639"
  },
  {
    "start": "432000",
    "end": "518000"
  },
  {
    "text": "Pick favorites. Pick favorites? What do you mean \nby that, Chris? Well, we've talked about the fact  ",
    "start": "437640",
    "end": "443640"
  },
  {
    "text": "that we have all kinds of ways of pricing things \nand observability tools. But one of the things  ",
    "start": "443640",
    "end": "450040"
  },
  {
    "text": "that happens is that it takes a lot of effort \nto get traditional monitoring tools working. So  ",
    "start": "450040",
    "end": "456680"
  },
  {
    "text": "while a lot of organizations have anywhere from 8 \nto maybe 20 or even hundreds of applications, the  ",
    "start": "456680",
    "end": "467400"
  },
  {
    "text": "truth is that traditional monitoring tools require \nway too much effort and work and cost to give you  ",
    "start": "467400",
    "end": "474520"
  },
  {
    "text": "all this information. So you usually have to draw \na line and pick your favorite applications that  ",
    "start": "474520",
    "end": "480319"
  },
  {
    "text": "you're going to monitor and the rest don't get any \nmonitoring at all. Why do I not like this? I don't  ",
    "start": "480320",
    "end": "489040"
  },
  {
    "text": "like this because if you have an application, \nit's important to somebody. Or as I like to say,  ",
    "start": "489040",
    "end": "493880"
  },
  {
    "text": "every application is important to somebody. And \nthat means that there are stakeholders of those  ",
    "start": "493880",
    "end": "498280"
  },
  {
    "text": "applications, including business owners \nand application owners and developers,  ",
    "start": "498280",
    "end": "503639"
  },
  {
    "text": "that need the information that comes from \nobservability. You shouldn't have to pick. And  ",
    "start": "503640",
    "end": "508000"
  },
  {
    "text": "that's why observability gives you this broader, \nbetter view of the entire system, as opposed to  ",
    "start": "508000",
    "end": "514880"
  },
  {
    "text": "making you pick just a few applications \"just in \ncase\". Okay, we're at the last myth. Myth number six: ",
    "start": "514880",
    "end": "522120"
  },
  {
    "start": "518000",
    "end": "633000"
  },
  {
    "text": "DIY. The truth of the matter is you can \nbuild monitoring yourself, but you shouldn't  ",
    "start": "522120",
    "end": "531880"
  },
  {
    "text": "build monitoring yourself. Let me explain why. \nWhen you add monitoring to all the pieces you  ",
    "start": "531880",
    "end": "538880"
  },
  {
    "text": "have to do. Plus, when you add the idea of being \nable to measure everything to the front end. Oh,  ",
    "start": "538880",
    "end": "548520"
  },
  {
    "text": "and don't forget, you need to detect changes like \nwhen a service disappears. Or maybe when a new  ",
    "start": "548520",
    "end": "555400"
  },
  {
    "text": "service appears within the system. Doing all that \nmanually requires you to slow things down. And as  ",
    "start": "555400",
    "end": "562880"
  },
  {
    "text": "you're trying to accelerate your development, as \nyou're trying to get better as an IT organization,  ",
    "start": "562880",
    "end": "567720"
  },
  {
    "text": "have better performing applications-- slowing \nthings down is a bad idea. In fact, it leads  ",
    "start": "567720",
    "end": "572879"
  },
  {
    "text": "to lower quality applications. You want to speed \nthings up, and the only way to speed things up is  ",
    "start": "572880",
    "end": "577880"
  },
  {
    "text": "to automate. And that's why you want to look for \nan observability solution that automates things,  ",
    "start": "577880",
    "end": "584040"
  },
  {
    "text": "that automates discovery, that automates mapping \nthe system, that automates monitoring end users,  ",
    "start": "584040",
    "end": "591680"
  },
  {
    "text": "and does that for all of the different users \nthat you're going to bring into place across  ",
    "start": "591680",
    "end": "597880"
  },
  {
    "text": "all the different applications that you have \nto monitor and can see fully across the entire  ",
    "start": "597880",
    "end": "603880"
  },
  {
    "text": "system and trace everything it needs to trace. \nIt needs to do this automatically, or else you're  ",
    "start": "603880",
    "end": "608480"
  },
  {
    "text": "going to slow down your development systems and \nultimately result in lower quality applications  ",
    "start": "608480",
    "end": "614240"
  },
  {
    "text": "and unhappy customers. And that's not what we \nwant. So look for automation and stay away from  ",
    "start": "614240",
    "end": "620959"
  },
  {
    "text": "manual observability. Thanks for watching. Before \nyou leave, make sure you hit like and subscribe.",
    "start": "620960",
    "end": "629040"
  }
]