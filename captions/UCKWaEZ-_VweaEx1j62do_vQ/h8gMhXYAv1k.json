[
  {
    "start": "0",
    "end": "141000"
  },
  {
    "text": "So what is tool calling?",
    "start": "240",
    "end": "1412"
  },
  {
    "text": "Tool calling is a powerful technique where you make the and context aware of real time data",
    "start": "1412",
    "end": "6116"
  },
  {
    "text": "such as databases or APIs. Typically used to call in via a chat interface.",
    "start": "6116",
    "end": "12059"
  },
  {
    "text": "So you would have your client application in one hand,",
    "start": "12360",
    "end": "16018"
  },
  {
    "text": "And an LLM team on the other side.",
    "start": "17660",
    "end": "19339"
  },
  {
    "text": "For your client application, you would send a set of messages",
    "start": "23030",
    "end": "26165"
  },
  {
    "text": "together with a tool definition to the LLM so you would have your messages here.",
    "start": "26165",
    "end": "30859"
  },
  {
    "text": "Together with your list of tools.",
    "start": "34160",
    "end": "36049"
  },
  {
    "text": "The LLM then look at both your message and the list of tools as going through recommends a tool you should call.",
    "start": "37110",
    "end": "42840"
  },
  {
    "text": "From your client application, you should call this tool and then supply the answer back to the  LLM",
    "start": "46740",
    "end": "51719"
  },
  {
    "text": "So it is still response will be interpreted by the LLM.",
    "start": "53190",
    "end": "56460"
  },
  {
    "text": "And this will either tell you the next tool to call or it will give you any final answer.",
    "start": "56940",
    "end": "61170"
  },
  {
    "text": "In your application, you're responsible for creating the tool definition.",
    "start": "63480",
    "end": "66870"
  },
  {
    "text": "So this tool definition includes a couple of things, such as the name of every tool.",
    "start": "68250",
    "end": "73439"
  },
  {
    "text": "It also includes a description for the tool.",
    "start": "73860",
    "end": "76019"
  },
  {
    "text": "So this is where you can give additional information about how to use the tool or when to use it",
    "start": "76170",
    "end": "80548"
  },
  {
    "text": "And it also includes the input parameters needed to make a tool call.",
    "start": "81090",
    "end": "84718"
  },
  {
    "text": "And the tools can be anything.",
    "start": "85290",
    "end": "86779"
  },
  {
    "text": "So the tools could be APIs or databases,",
    "start": "86790",
    "end": "89700"
  },
  {
    "text": "but it could also be code that you interpret via code interpreter.",
    "start": "91540",
    "end": "95859"
  },
  {
    "text": "So let's look at an example.",
    "start": "98470",
    "end": "99760"
  },
  {
    "text": "Assume you want to find the weather in Miami.",
    "start": "101010",
    "end": "103350"
  },
  {
    "text": "You might ask the LLM about the temperature in Miami.",
    "start": "103390",
    "end": "107080"
  },
  {
    "text": "You also provide a list of tools.",
    "start": "109170",
    "end": "111030"
  },
  {
    "text": "And one of these tools is the weather API.",
    "start": "111030",
    "end": "113159"
  },
  {
    "text": "The LLM will look at both your question, which is what is the temperature in Miami?",
    "start": "116290",
    "end": "120280"
  },
  {
    "text": "And we'll also look at the weather API.",
    "start": "120580",
    "end": "122470"
  },
  {
    "text": "And then based on the tool definition for the weather API, it's going to tell you how to call the weather tool.",
    "start": "122740",
    "end": "128138"
  },
  {
    "text": "So in here it's going to create a tool that you can use",
    "start": "128620",
    "end": "131902"
  },
  {
    "text": "right here on this side where you call the API to collect the weather information.",
    "start": "131902",
    "end": "136088"
  },
  {
    "text": "You would then supply the weather information back to the LLM.",
    "start": "136570",
    "end": "139330"
  },
  {
    "text": "So let's say it would be 71 degrees.",
    "start": "139420",
    "end": "142224"
  },
  {
    "start": "141000",
    "end": "172000"
  },
  {
    "text": "The LLM then we'll look at the tool response and then give the final answer, which might be",
    "start": "142225",
    "end": "147677"
  },
  {
    "text": "something in the trends of the weather in Miami is pretty nice. It's 71 degrees.",
    "start": "147677",
    "end": "152619"
  },
  {
    "text": "This has some downsides.",
    "start": "153770",
    "end": "154879"
  },
  {
    "text": "So when you do traditional tool calling, where you have an LLM and a client application, you could see the LLM hallucinate.",
    "start": "154890",
    "end": "161719"
  },
  {
    "text": "Sometimes the LLM can also make up incorrect tool calls.",
    "start": "164360",
    "end": "167389"
  },
  {
    "text": "That's why I also want to look at embedded tool calling.",
    "start": "169340",
    "end": "171800"
  },
  {
    "start": "172000",
    "end": "296000"
  },
  {
    "text": "We just looked at traditional tool calling.",
    "start": "172610",
    "end": "174530"
  },
  {
    "text": "A traditional tool calling has its flaws.",
    "start": "174590",
    "end": "176539"
  },
  {
    "text": "As I mentioned, The LLM could hallucinate or create incorrect tool calls.",
    "start": "176840",
    "end": "180558"
  },
  {
    "text": "That's why I also want to take a embedded tool calling into account.",
    "start": "180710",
    "end": "184219"
  },
  {
    "text": "With a medical calling, you use a library or framework to interact with the LLM and your tool definitions.",
    "start": "184580",
    "end": "190579"
  },
  {
    "text": "The library would be somewhere between your application and the large language model.",
    "start": "191210",
    "end": "195529"
  },
  {
    "text": "In the library, you would do the dual definition, which you would also execute at all goals.",
    "start": "200910",
    "end": "205740"
  },
  {
    "text": "Let's draw a line between these sections here.",
    "start": "206040",
    "end": "208799"
  },
  {
    "text": "So the library will contain your tool definition.",
    "start": "208920",
    "end": "211949"
  },
  {
    "text": "It would also contain the tool execution.",
    "start": "213500",
    "end": "215629"
  },
  {
    "text": "So when you send the message from your application to the large language model, it will go through the library.",
    "start": "218380",
    "end": "223210"
  },
  {
    "text": "So your message could still be what is the temperature in Miami?",
    "start": "223390",
    "end": "228339"
  },
  {
    "text": "The library will then append the tool definition and send your message together with the tools to the LLM",
    "start": "231100",
    "end": "236709"
  },
  {
    "text": "So this will be your message.",
    "start": "236920",
    "end": "238330"
  },
  {
    "text": "Plus your list of tools.",
    "start": "240060",
    "end": "241319"
  },
  {
    "text": "Instead of sending the tool to call to the application or the user, it will be sent to the library, which will then delete all execution.",
    "start": "242720",
    "end": "250279"
  },
  {
    "text": "And this way the library will provide you with the final answer, which could be at 71 degrees in Miami.",
    "start": "251020",
    "end": "257720"
  },
  {
    "text": "When you use embedded tool calling,",
    "start": "258290",
    "end": "259734"
  },
  {
    "text": "the LLM will no longer hallucinate as the library",
    "start": "259735",
    "end": "263255"
  },
  {
    "text": "to help you with it's tool calling or the embedded tool calling is going to take care of the total execution.",
    "start": "263256",
    "end": "268160"
  },
  {
    "text": "And we'll retry the two calls in case it's needed.",
    "start": "268310",
    "end": "270589"
  },
  {
    "text": "So in this video, we looked at both traditional tool calling and also embedded tool calling,",
    "start": "271400",
    "end": "275862"
  },
  {
    "text": "where a specially embedded tool calling will help you to prevent hallucination",
    "start": "275862",
    "end": "279730"
  },
  {
    "text": "or help you with the execution of tools, which could be APIs, databases or code.",
    "start": "279730",
    "end": "284420"
  }
]