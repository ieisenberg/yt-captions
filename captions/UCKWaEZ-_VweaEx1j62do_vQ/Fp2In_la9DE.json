[
  {
    "text": "Hi everyone, my name is Sai Vennam, and I'm a developer advocate with IBM.",
    "start": "489",
    "end": "4259"
  },
  {
    "text": "Today, I want to start the first part of the Hybrid Cloud Architecture series",
    "start": "4260",
    "end": "9060"
  },
  {
    "text": "with a deep dive into Connectivity.",
    "start": "9060",
    "end": "11480"
  },
  {
    "text": "Connectivity is an important concern when you're starting with your hybrid cloud strategy,",
    "start": "11480",
    "end": "16279"
  },
  {
    "text": "and that's why I want to start with it first.",
    "start": "16280",
    "end": "18420"
  },
  {
    "text": "By establishing connectivity, we can then start thinking about",
    "start": "18420",
    "end": "22040"
  },
  {
    "text": "other requirements and then move on to the other parts of the series.",
    "start": "22040",
    "end": "25520"
  },
  {
    "text": "There are 3 major parts about connectivity that I want to hit with this video",
    "start": "25520",
    "end": "29760"
  },
  {
    "text": "- starting with, very simply,",
    "start": "29760",
    "end": "31720"
  },
  {
    "text": "how do you actually connect private and public cloud environments?",
    "start": "31720",
    "end": "35020"
  },
  {
    "text": "Next, I'll be moving on to the service mesh",
    "start": "35020",
    "end": "37690"
  },
  {
    "text": "- essentially enabling your applications and microservices",
    "start": "37690",
    "end": "41579"
  },
  {
    "text": "to work with one another as one singular mesh.",
    "start": "41580",
    "end": "44420"
  },
  {
    "text": "And, we'll close it off by talking about some integration tools",
    "start": "44420",
    "end": "47539"
  },
  {
    "text": "that we have available to make it easier",
    "start": "47540",
    "end": "49800"
  },
  {
    "text": "to connect up your services and third-party services and that kind of thing.",
    "start": "49800",
    "end": "54280"
  },
  {
    "text": "To better explain and set the stage for the\nrest of the topics,",
    "start": "54280",
    "end": "59399"
  },
  {
    "text": "I want to introduce a Stock Trader sample application",
    "start": "59400",
    "end": "63800"
  },
  {
    "text": "that we'll be kind of revisiting with this architecture.",
    "start": "63800",
    "end": "66930"
  },
  {
    "text": "So, let's get started.",
    "start": "66930",
    "end": "68400"
  },
  {
    "text": "Over here, we have a consumer application - whether it's a mobile app,",
    "start": "68400",
    "end": "72680"
  },
  {
    "text": "a web browser, whatever it might be",
    "start": "72680",
    "end": "74780"
  },
  {
    "text": "- and whenever a user accesses the Stock Trader application,",
    "start": "74780",
    "end": "78460"
  },
  {
    "text": "they'll be hitting the private cloud endpoint.",
    "start": "78460",
    "end": "82020"
  },
  {
    "text": "At this point, they'll be fed into the Kubernetes cluster that we have\nhere.",
    "start": "82020",
    "end": "87799"
  },
  {
    "text": "And within this Kubernetes cluster,",
    "start": "87800",
    "end": "90369"
  },
  {
    "text": "we have a number of services.\nThe first service that they're going to hit",
    "start": "90369",
    "end": "93850"
  },
  {
    "text": "is the Trader. So this will be the front end\nof the application. So there will be kind",
    "start": "93850",
    "end": "103460"
  },
  {
    "text": "of an exposure from the Trader to the outside of that cluster.",
    "start": "103460",
    "end": "108618"
  },
  {
    "text": "The Trader, in turn, goes and creates Portfolios.\nSo this, essentially, is the reason why people",
    "start": "108619",
    "end": "116450"
  },
  {
    "text": "use Stock Trader - to create these portfolios to manage their investments and their trades",
    "start": "116450",
    "end": "121530"
  },
  {
    "text": "and that kind of thing.\nThis Portfolios app then, in turn, has a couple",
    "start": "121530",
    "end": "126789"
  },
  {
    "text": "of services that it takes advantage of which it actually pulls from the public cloud. One",
    "start": "126789",
    "end": "131971"
  },
  {
    "text": "- it actually needs to get the price of a\nstock, and to do that, we have a service in",
    "start": "131971",
    "end": "136989"
  },
  {
    "text": "the public cloud which we'll call Get, which actually goes off to the Investors Exchange",
    "start": "136990",
    "end": "146170"
  },
  {
    "text": "API (IEX) to access the current stock price.\nSo, it'll take advantage of that, and then",
    "start": "146170",
    "end": "152860"
  },
  {
    "text": "to kind of feed that data back, we have an\negress set up - external API request - that",
    "start": "152860",
    "end": "160310"
  },
  {
    "text": "allows the Portfolio app to work directly\nwith the service that we have in the public",
    "start": "160310",
    "end": "165920"
  },
  {
    "text": "cloud.\nAnother service that we have that backs this",
    "start": "165920",
    "end": "169980"
  },
  {
    "text": "Stock Trader application is the MQ service, which is, essentially, a message queuing capability.",
    "start": "169980",
    "end": "177030"
  },
  {
    "text": "And we're going to be using that to keep track of the loyalty levels that a user has when",
    "start": "177030",
    "end": "182170"
  },
  {
    "text": "working with their portfolios. So, various\ncommissions would be changed based on how",
    "start": "182170",
    "end": "186660"
  },
  {
    "text": "long that they've kept a particular stock\nwithin their portfolio.",
    "start": "186660",
    "end": "191280"
  },
  {
    "text": "And the same thing here; so, in addition to\nPortfolios working with the public cloud,",
    "start": "191280",
    "end": "195080"
  },
  {
    "text": "the MQ service is also going to be accessing the public cloud. However, the MQ service",
    "start": "195080",
    "end": "201580"
  },
  {
    "text": "isn't concerned with getting stock prices;\ninstead, it wants to notify users whenever",
    "start": "201580",
    "end": "206460"
  },
  {
    "text": "there is a change in their loyalty or in their\nportfolio. And to do that, we're actually",
    "start": "206460",
    "end": "213540"
  },
  {
    "text": "going to take advantage of serverless capabilities using Cloud Functions, which, in turn, will",
    "start": "213540",
    "end": "219439"
  },
  {
    "text": "go and send a message to the user using a Slack integration.",
    "start": "219440",
    "end": "224230"
  },
  {
    "text": "So, this kind of sets the stage for the various parts that we have within the Stock Trader",
    "start": "224230",
    "end": "230349"
  },
  {
    "text": "application. And actually, before I forget,\nthere's one more piece - to actually persist",
    "start": "230350",
    "end": "234900"
  },
  {
    "text": "the data for the Portfolios, we have a dedicated database service that's hosted in the private",
    "start": "234900",
    "end": "241319"
  },
  {
    "text": "cloud outside of the cluster that the Portfolios application will be using to persist the data.",
    "start": "241320",
    "end": "248290"
  },
  {
    "text": "This kind of sets the stage for us to jump\ninto the very first piece that I want to talk",
    "start": "248290",
    "end": "252340"
  },
  {
    "text": "about, which is Connect. So, although we've laid out the architecture here, we haven't",
    "start": "252340",
    "end": "257379"
  },
  {
    "text": "really talked about how these applications\nare able to work with the public cloud services,",
    "start": "257379",
    "end": "264039"
  },
  {
    "text": "although you know that, generally, a private cloud is going to be behind a firewall - it's",
    "start": "264039",
    "end": "267620"
  },
  {
    "text": "going to be in a restricted network.\nThere's one very easy way to expose services",
    "start": "267620",
    "end": "272180"
  },
  {
    "text": "from a private cloud to a public cloud and\nthat is by taking advantage of a VPN tunnel",
    "start": "272180",
    "end": "277979"
  },
  {
    "text": "- that's one of the easiest ways to get started.\nAn IPsec VPN tunnel essentially exposes a",
    "start": "277980",
    "end": "285039"
  },
  {
    "text": "subnet of IPs that can be exposed from the private cloud and public cloud, enabling those",
    "start": "285039",
    "end": "290060"
  },
  {
    "text": "connections to happen. So, we'll create that VPN tunnel between the two environments.",
    "start": "290060",
    "end": "298490"
  },
  {
    "text": "And one key thing to note here is that this\nis all happening over public internet. So",
    "start": "298490",
    "end": "305729"
  },
  {
    "text": "this has some caveats; although it was very easy to set up, the problem is that when you're",
    "start": "305729",
    "end": "310430"
  },
  {
    "text": "working over the public internet, you can\nbe affected by variability in the amount of",
    "start": "310430",
    "end": "317569"
  },
  {
    "text": "time the request takes to travel between the private and public cloud. In addition, with",
    "start": "317569",
    "end": "322879"
  },
  {
    "text": "VPN, you know you're not going to get the\nbest bandwidth capabilities out there because",
    "start": "322879",
    "end": "327810"
  },
  {
    "text": "you're going over the public internet flows.\nSo there's an alternative to VPNs, and that's",
    "start": "327810",
    "end": "332999"
  },
  {
    "text": "taking advantage of Direct Link capabilities to create entirely private connections between",
    "start": "332999",
    "end": "338210"
  },
  {
    "text": "the private and public cloud. This is made\npossible by taking advantage of a PoP - which",
    "start": "338210",
    "end": "344169"
  },
  {
    "text": "is a point of presence - generally provided\nby a public cloud and enables completely private",
    "start": "344169",
    "end": "350889"
  },
  {
    "text": "connections to that private cloud. And this kind of always exists.",
    "start": "350889",
    "end": "357960"
  },
  {
    "text": "To enable your existing architecture to fit\ninto this, you'll need to work with your network",
    "start": "357960",
    "end": "364419"
  },
  {
    "text": "service provider and create a direct connection for all connections coming out of your private",
    "start": "364419",
    "end": "370069"
  },
  {
    "text": "cloud - maybe you have a WAN (wide area network) - to make sure that all of these connections",
    "start": "370069",
    "end": "375099"
  },
  {
    "text": "flow privately. And this way, you never have to actually take advantage of and you're never",
    "start": "375099",
    "end": "383669"
  },
  {
    "text": "actually using the internet for this connection.\nIt's all private and, in addition, the big",
    "start": "383669",
    "end": "388290"
  },
  {
    "text": "advantage of that is you get much higher bandwidth capabilities.",
    "start": "388290",
    "end": "392629"
  },
  {
    "text": "There is one thing though I want to mention - once you have a Direct Link like this setup,",
    "start": "392629",
    "end": "397190"
  },
  {
    "text": "it's also possible to have a failover, which\nin case this doesn't work, it'll kind of fall",
    "start": "397190",
    "end": "401819"
  },
  {
    "text": "back and use the VPN over internet. By using those two in conjunction, I'd say that's probably",
    "start": "401819",
    "end": "407610"
  },
  {
    "text": "the best way to connect up your networks from a private and public cloud environment.",
    "start": "407610",
    "end": "412080"
  },
  {
    "text": "Next, I want to talk about the service mesh.\nThere's a great project out there that you",
    "start": "412080",
    "end": "418448"
  },
  {
    "text": "might be familiar with - it's completely open source, it's called Istio, and it was created",
    "start": "418449",
    "end": "422889"
  },
  {
    "text": "by a number of industry leaders like Google, IBM, Lyft, and a number of other leaders out",
    "start": "422889",
    "end": "429580"
  },
  {
    "text": "there. And, you know, what we've noticed here - we are taking advantage of Kubernetes on",
    "start": "429580",
    "end": "434758"
  },
  {
    "text": "our on a private cloud, and let's say that\nwe're also using Kubernetes on the public",
    "start": "434759",
    "end": "440130"
  },
  {
    "text": "cloud, although we only have one service in there so far, we'll get around to creating",
    "start": "440130",
    "end": "444250"
  },
  {
    "text": "some additional ones later on.\nSo, what we have is two different clusters",
    "start": "444250",
    "end": "449589"
  },
  {
    "text": "in different environments - we want to make sure that they get managed in an easy way",
    "start": "449589",
    "end": "455339"
  },
  {
    "text": "so that your operations teams don't have to concern themselves with working with multiple",
    "start": "455339",
    "end": "459400"
  },
  {
    "text": "environments, multiple clusters, which can lead to an increased kind of load and can",
    "start": "459400",
    "end": "465509"
  },
  {
    "text": "be quite difficult to manage.\nSo, a service mesh - generally, in the context",
    "start": "465509",
    "end": "471309"
  },
  {
    "text": "of Istio, you manage the services within a\nsingle cluster. But there's been new developments",
    "start": "471309",
    "end": "476229"
  },
  {
    "text": "in Istio that allow you to connect up multiple clusters together and have the services behave",
    "start": "476229",
    "end": "481189"
  },
  {
    "text": "as one singular cluster - one mesh across\nmultiple environments.",
    "start": "481189",
    "end": "486689"
  },
  {
    "text": "To better explain this, let's say that Stock\nTrader wants to create a new version of Trader",
    "start": "486689",
    "end": "494009"
  },
  {
    "text": "- so we've got v1 here and we want to make v2. And this time, we want to host it on the",
    "start": "494009",
    "end": "499559"
  },
  {
    "text": "public cloud - let's say because we want to have the front end of the application geographically",
    "start": "499559",
    "end": "504830"
  },
  {
    "text": "closer to where most of our customers are.\nSo we'll create another Trader application,",
    "start": "504830",
    "end": "513709"
  },
  {
    "text": "and this one is going to be v2.\nLet's say that all this traffic coming right",
    "start": "513709",
    "end": "519469"
  },
  {
    "text": "now - so, 100% of traffic flowing into the\napplications - with Istio, what we're going",
    "start": "519469",
    "end": "525990"
  },
  {
    "text": "to essentially set up is a gateway right here.\nAnd this gateway has a number of policies",
    "start": "525990",
    "end": "534300"
  },
  {
    "text": "that are kind of enabled and set up by a control plane - so we'll make an Istio control plane.",
    "start": "534300",
    "end": "550800"
  },
  {
    "text": "So we've got Istio here, and that's essentially enabling us to create policies for this ingress",
    "start": "550800",
    "end": "555230"
  },
  {
    "text": "gateway - so all requests that are flowing\nin.",
    "start": "555230",
    "end": "558529"
  },
  {
    "text": "And now, let's say that we want 50% of traffic to flow through to v1. And then we want 50%",
    "start": "558529",
    "end": "567190"
  },
  {
    "text": "traffic to flow to v2. Very simply, once we\nhave the service mesh set up, all we have",
    "start": "567190",
    "end": "571960"
  },
  {
    "text": "to do is create a policy in Istio that tells\nthe gateway to route the other traffic, and",
    "start": "571960",
    "end": "576589"
  },
  {
    "text": "that will actually go ahead and take advantage of the VPN or the Direct Link connection we",
    "start": "576589",
    "end": "582649"
  },
  {
    "text": "have to move 50% of all traffic to this version of the Trader application.",
    "start": "582649",
    "end": "589250"
  },
  {
    "text": "So, very simply, taking advantage of Istio,\nour existing connection policies, as well",
    "start": "589250",
    "end": "594670"
  },
  {
    "text": "as the control plane, we were able to create a policy that allows us to route a certain",
    "start": "594670",
    "end": "598700"
  },
  {
    "text": "percentage of traffic to the new version of\nthe application. This is very useful when",
    "start": "598700",
    "end": "603110"
  },
  {
    "text": "you start thinking about creating new versions of your app and rolling them out to your users.",
    "start": "603110",
    "end": "610120"
  },
  {
    "text": "The last thing I want to mention - along with Istio, you also get a number of awesome analytics",
    "start": "610120",
    "end": "614600"
  },
  {
    "text": "and metrics (tracing, management capabilities), so all of those health management capabilities",
    "start": "614600",
    "end": "619980"
  },
  {
    "text": "that Istio offers, they're not limited to\nthe cluster itself. They will actually manage",
    "start": "619980",
    "end": "624870"
  },
  {
    "text": "request the flow between all of your services that your Istio mesh is connected to. Essentially,",
    "start": "624870",
    "end": "631320"
  },
  {
    "text": "this gives your operations team a single point of management for all of your services across",
    "start": "631320",
    "end": "637959"
  },
  {
    "text": "your environments.\nAnd the last thing I want to touch on is Integration.",
    "start": "637959",
    "end": "641810"
  },
  {
    "text": "So, there's a lot of things out there that\nare repeated quite often. That means that",
    "start": "641810",
    "end": "647301"
  },
  {
    "text": "customers are kind of constantly doing these things, so IBM has created a suite of tools",
    "start": "647301",
    "end": "652290"
  },
  {
    "text": "to make integration with the services easier.\nFor example, let's imagine that you have a",
    "start": "652290",
    "end": "657790"
  },
  {
    "text": "set of user data that's stored in Salesforce.\nYou've already taken advantage of this data",
    "start": "657790",
    "end": "663889"
  },
  {
    "text": "- this account data - in your on-prem, private cloud application, but you want to start reusing",
    "start": "663890",
    "end": "669970"
  },
  {
    "text": "those capabilities in the public cloud.\nSo, in the public cloud, maybe there's certain",
    "start": "669970",
    "end": "675050"
  },
  {
    "text": "network or network challenges that change how it's implemented; you can take advantage",
    "start": "675050",
    "end": "680529"
  },
  {
    "text": "of these integration tools to very quickly\nmove that data between Salesforce and your",
    "start": "680529",
    "end": "685380"
  },
  {
    "text": "public cloud microservice applications, taking advantage of some of these tools. This is",
    "start": "685380",
    "end": "690769"
  },
  {
    "text": "made possible through connectors that, you know, not only connect up Salesforce but a",
    "start": "690769",
    "end": "694790"
  },
  {
    "text": "lot of other services out there - things that\nwe notice that our customers are doing a quite",
    "start": "694790",
    "end": "700089"
  },
  {
    "text": "often.\nAnother integration tool I want to talk about",
    "start": "700089",
    "end": "703300"
  },
  {
    "text": "is an API gateway. We're noticing more and more that this is something that's really",
    "start": "703300",
    "end": "710160"
  },
  {
    "text": "important to the overall hybrid cloud architecture, especially when you're working with third-party",
    "start": "710160",
    "end": "714930"
  },
  {
    "text": "services.\nSo here, we actually have a number of them",
    "start": "714930",
    "end": "718199"
  },
  {
    "text": "with Salesforce, Slack, and the Investor's\nExchange. Let's say that one of our engineers",
    "start": "718199",
    "end": "723529"
  },
  {
    "text": "has a bug that accidentally hits the Investor's Exchange way too many times and they're throttling",
    "start": "723529",
    "end": "729980"
  },
  {
    "text": "us, which ends up bogging down the whole system.\nTo prevent that from happening, or just to",
    "start": "729980",
    "end": "735810"
  },
  {
    "text": "be more secure about how we're accessing third-party services, what we can do is create a gateway",
    "start": "735810",
    "end": "741160"
  },
  {
    "text": "that essentially sits in between the public\ncloud and those third-party services and allows",
    "start": "741160",
    "end": "746019"
  },
  {
    "text": "you to do things like manage rate limits,\ncreate authentications - things like OAuth",
    "start": "746020",
    "end": "753470"
  },
  {
    "text": "or maybe even basic keys - to really restrict how your public cloud services as well as",
    "start": "753470",
    "end": "760378"
  },
  {
    "text": "users are accessing those third-party services.\nSo, notice that API gateways, in addition",
    "start": "760379",
    "end": "766040"
  },
  {
    "text": "to that suite of tools that I mentioned, are\na core part of connecting up your cloud services",
    "start": "766040",
    "end": "771990"
  },
  {
    "text": "to third-party services as well as some of\nthe things that you have going in your private cloud.",
    "start": "771990",
    "end": "778420"
  },
  {
    "text": "I'd say that these 3 topics are the main things you want to think about",
    "start": "778420",
    "end": "782480"
  },
  {
    "text": "when figuring out connectivity with your hybrid cloud architecture.",
    "start": "782500",
    "end": "785660"
  },
  {
    "text": "As always, we're checking comments for feedback or ideas for new videos,",
    "start": "785660",
    "end": "789600"
  },
  {
    "text": "so feel free to drop a comment below",
    "start": "789600",
    "end": "791600"
  },
  {
    "text": "- and definitely subscribe, because the next part of this series",
    "start": "791600",
    "end": "794420"
  },
  {
    "text": "we'll be talking about strategies to to modernize legacy applications.",
    "start": "794420",
    "end": "797720"
  },
  {
    "text": "Thank you.",
    "start": "797720",
    "end": "800319"
  }
]