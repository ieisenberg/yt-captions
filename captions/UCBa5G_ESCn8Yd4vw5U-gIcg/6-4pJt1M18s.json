[
  {
    "start": "0",
    "end": "107000"
  },
  {
    "text": "I want to do a couple of announcements and then uh have a quick guest lecture from Moritz Sudhof.",
    "start": "5180",
    "end": "13620"
  },
  {
    "text": "Just because it was irresistible in terms of Moritz just having done a project that kind of bridges us",
    "start": "13620",
    "end": "18960"
  },
  {
    "text": "from the VSM unit into the big themes that I tried to introduce last time around sentiment analysis",
    "start": "18960",
    "end": "25850"
  },
  {
    "text": "and why you would want to do it and tasks that are adjacent to it. But first, just a couple of quick announcements.",
    "start": "25850",
    "end": "31260"
  },
  {
    "text": "First, uh, it's really exciting to see the bake-off submissions coming in, I've been checking them periodically throughout the day.",
    "start": "31260",
    "end": "39130"
  },
  {
    "text": "Uh, I'm not going to reveal anything about the scores because we want to reproduce everything, but I will say that I myself I was pretty proud of my system,",
    "start": "39130",
    "end": "47210"
  },
  {
    "text": "I thought I was doing pretty well, and it's pretty clear actually that I would have gotten about 30th place.",
    "start": "47210",
    "end": "52340"
  },
  {
    "text": "Uh, some people have really done better than I did. Uh, but anyway we will have a fuller report after we've done some reproductions next week.",
    "start": "52340",
    "end": "60800"
  },
  {
    "text": "Uh, the other announcements I wanted to make is like my bias for this course is definitely that you all come up with your own projects,",
    "start": "60800",
    "end": "69140"
  },
  {
    "text": "I think that's more exciting. But when people write in with project ideas that you might, you know,",
    "start": "69140",
    "end": "74600"
  },
  {
    "text": "for ongoing things that you might want to join, I can't say no because some of those things are really exciting as well. And I wanted to just mention two today.",
    "start": "74600",
    "end": "81410"
  },
  {
    "text": "So this first one, this is from the people at Gridspace which is an area startup that does a lot of um, speech-to-text work,",
    "start": "81410",
    "end": "88680"
  },
  {
    "text": "they have lots of Stanford connections as well, some of you might have encountered them. They're developing some new datasets that are gonna",
    "start": "88680",
    "end": "95000"
  },
  {
    "text": "be kind of quasi-public not protected data, so it's pretty free use and they're around um, dialogues.",
    "start": "95000",
    "end": "102545"
  },
  {
    "text": "Um, and at least part of those are people interacting with artificial agents. So if you're interested in that project they",
    "start": "102545",
    "end": "109550"
  },
  {
    "start": "107000",
    "end": "179000"
  },
  {
    "text": "have this Google form that you could fill out. And then I think they'll get in touch with you about sharing the data and so forth.",
    "start": "109550",
    "end": "115340"
  },
  {
    "text": "Um, and actually this is exciting because they're still in the process of getting feedback from people,",
    "start": "115340",
    "end": "121425"
  },
  {
    "text": "potentially you, about what kind of labels they should get and how how they should design the data-set,",
    "start": "121425",
    "end": "126750"
  },
  {
    "text": "so this is a chance to kinda get in early. The other thing I would say is that I attached a bunch of sample files which they sent me.",
    "start": "126750",
    "end": "133365"
  },
  {
    "text": "And the automated_dialog MP4 is hilarious as advertised here,",
    "start": "133365",
    "end": "140735"
  },
  {
    "text": "so check that out. And then the other one is from Vinay Chaudhri who has done this in the past.",
    "start": "140735",
    "end": "146735"
  },
  {
    "text": "He's got a project ongoing that some students worked with successfully in the winter for the CS224N.",
    "start": "146735",
    "end": "153470"
  },
  {
    "text": "Uh, and this is nicely timed because the centerpiece of this is relation extraction using distant supervision,",
    "start": "153470",
    "end": "159650"
  },
  {
    "text": "which is our topic for next week. So you potentially get a nice confluence of the work",
    "start": "159650",
    "end": "164810"
  },
  {
    "text": "we'll be doing and a project that you might develop with Vinay. So, uh, again I've provided",
    "start": "164810",
    "end": "170269"
  },
  {
    "text": "his contact info and I think you should feel free to write to him. Okay. And then before we dive back into the SST,",
    "start": "170270",
    "end": "179450"
  },
  {
    "text": "let me invite Moritz to come up. Um, as I said this was just a great opportunity because, you know,",
    "start": "179450",
    "end": "184835"
  },
  {
    "text": "Moritz is doing work kind of in industry right now, and the topics are nicely aligned with both things that we've done so far.",
    "start": "184835",
    "end": "191689"
  },
  {
    "text": "Thank you. Right. So as we're diving into the next unit, many- many of you are already starting on your projects or at least thinking about it.",
    "start": "191690",
    "end": "200765"
  },
  {
    "text": "I wanna take five minutes to just do a digression into",
    "start": "200765",
    "end": "206780"
  },
  {
    "text": "politics and also make make my case that you should not",
    "start": "206780",
    "end": "212480"
  },
  {
    "start": "210000",
    "end": "228000"
  },
  {
    "text": "forget about anything that we've learned in the last two weeks, because it's extraordinarily useful for whatever you're going to be doing moving forward.",
    "start": "212480",
    "end": "218765"
  },
  {
    "text": "And to prove that point, um, let's talk about politics. So five-minute digression, politics specifically, um, political polling.",
    "start": "218765",
    "end": "227504"
  },
  {
    "text": "Um, so I do some work with a Democratic political polling company.",
    "start": "227505",
    "end": "232645"
  },
  {
    "start": "228000",
    "end": "353000"
  },
  {
    "text": "And uh what I learned about the space, which is kind of interesting, um, is they, political polling is actually really bad right now.",
    "start": "232645",
    "end": "241629"
  },
  {
    "text": "Most of it still happens on the phone. And you get these like really kind of structured questions like,",
    "start": "241630",
    "end": "246640"
  },
  {
    "text": "do you care more about balancing the budget or income tax? Choose A or B. And so the, the,",
    "start": "246640",
    "end": "252670"
  },
  {
    "text": "the actual like information that politicians politicians get back is very sterile and it's like highly issues-based.",
    "start": "252670",
    "end": "259604"
  },
  {
    "text": "Um, but what they really wanna know is they really wanna know like as a voter, who are you voting for and why?",
    "start": "259605",
    "end": "266360"
  },
  {
    "text": "What's driving your decision? How are you thinking about candidates? How are you thinking about the election? Like what messages are resonating with you.",
    "start": "266360",
    "end": "272690"
  },
  {
    "text": "Um, what's top of mind for you. They wanna get into this a lot more about attitudes, perceptions, opinions.",
    "start": "272690",
    "end": "279785"
  },
  {
    "text": "And so, the parallels of sentiment are clear where if we know that Beto O'Rourke is you know has 32% of the vote and Elizabeth Warren has 18,",
    "start": "279785",
    "end": "289760"
  },
  {
    "text": "is the same as knowing that one product has a five-point, you know, a five-star rating, the other has a 4.5. The question is why?",
    "start": "289760",
    "end": "295824"
  },
  {
    "text": "What's the difference between those two? Why- why do some experiences resonate more than others?",
    "start": "295825",
    "end": "301490"
  },
  {
    "text": "Why are some, why do some things receive more support than others? Um, and so imagine",
    "start": "301490",
    "end": "308570"
  },
  {
    "text": "that you are building an NLU system and it needs to answer these questions. What are voters looking for in a candidate?",
    "start": "308570",
    "end": "314044"
  },
  {
    "text": "Why are they- why are they supporting their stated choice for the election. Um, and for this dataset, we're going to be looking",
    "start": "314045",
    "end": "320570"
  },
  {
    "text": "at three quick questions from a survey. They were asked what qualities do you look for in a president,",
    "start": "320570",
    "end": "325800"
  },
  {
    "text": "in a candidate for US Congress or Senate or for somebody for a state or local government.",
    "start": "325800",
    "end": "331625"
  },
  {
    "text": "And we also have for each respondent the party identification. So baseline you have a few thousand responses of people basically talking about what is,",
    "start": "331625",
    "end": "340925"
  },
  {
    "text": "how are they framing this election? Who are they supporting and why? And we want to start to understand, okay,",
    "start": "340925",
    "end": "346129"
  },
  {
    "text": "how can we give politicians real kind of richer feedback on what's driving these decisions?",
    "start": "346130",
    "end": "353090"
  },
  {
    "start": "353000",
    "end": "380000"
  },
  {
    "text": "Um, and so I wanted to show you a notebook but I couldn't get my own computer connected. But the only reason I wanted to show you a notebook is",
    "start": "353090",
    "end": "358430"
  },
  {
    "text": "because this is literally the only code in that notebook because using our wonderful VSM code,",
    "start": "358430",
    "end": "364505"
  },
  {
    "text": "I took a, I built my own like word-by-word matrix but that's everybody knows how to do that. You call these two lines and suddenly all the rest of",
    "start": "364505",
    "end": "370520"
  },
  {
    "text": "the exploration basically is just based off of these two lines of code, so I think it does a nice job of showing that how",
    "start": "370520",
    "end": "376100"
  },
  {
    "text": "quickly you can get started with a totally new and unknown dataset. Um, so what I wanted to just do very quickly is look at some of these TCGA plots.",
    "start": "376100",
    "end": "385055"
  },
  {
    "start": "380000",
    "end": "528000"
  },
  {
    "text": "So let's say that we're interested in understanding, okay do Democrats and Republicans make decisions differently based off of,",
    "start": "385055",
    "end": "393185"
  },
  {
    "text": "um, uh, for, for the election? Um, so this is obviously you can kinda just see there are some colors here.",
    "start": "393185",
    "end": "398885"
  },
  {
    "text": "So I've we- I've colored the terms based off of whether they are more associated with Democrats or Republicans.",
    "start": "398885",
    "end": "404780"
  },
  {
    "text": "So, um, green is independent, red is Republican that's kind of up here. How do I- I'm not Chris, I'm Moritz.",
    "start": "404780",
    "end": "411840"
  },
  {
    "text": "Red is up here, blue is more down here. And if you actually zoom into it, there's a- there's a couple of nice things that happen,",
    "start": "411840",
    "end": "417979"
  },
  {
    "text": "I've already annotated it just for clarity here. You can see that on the Republican side,",
    "start": "417980",
    "end": "423020"
  },
  {
    "text": "people are talking a lot about issues. So um the words that you can't really read up there are words like defense,",
    "start": "423020",
    "end": "430445"
  },
  {
    "text": "fiscal, um, you know, words like Constitution. Um, these are all about conservative values,",
    "start": "430445",
    "end": "436580"
  },
  {
    "text": "immigration, policies and values. But if you look at to where the clusters are more dominated by blue,",
    "start": "436580",
    "end": "442025"
  },
  {
    "text": "here you get things like collaborative, co-operative, composed, articulate, charismatic, well-spoken.",
    "start": "442025",
    "end": "448880"
  },
  {
    "text": "These are all descriptions of personal characteristics. These are descriptions of somebody that probably doesn't match how these people are thinking about Trump.",
    "start": "448880",
    "end": "456935"
  },
  {
    "text": "Um, and so you can see already kind of a clear split between how,",
    "start": "456935",
    "end": "462159"
  },
  {
    "text": "uh, the Democrats are thinking about candidates in the election and how Republicans are. We can also look at this again taking advantage of that structure we had in the dataset,",
    "start": "462159",
    "end": "469830"
  },
  {
    "text": "which was, we also know what office they're talking about. We can look at the same thing, this time we're coloring the colors, the words,",
    "start": "469830",
    "end": "476990"
  },
  {
    "text": "based on whether it's more likely to be in a review or in a comment about presidential,",
    "start": "476990",
    "end": "482419"
  },
  {
    "text": "local, or congressional elections. And as you would expect, there's a ton here,",
    "start": "482420",
    "end": "487760"
  },
  {
    "text": "of the personal qualities this blue, this dark blue, that's all uh, presidential. So personal qualities like temperament, being quick,",
    "start": "487760",
    "end": "494615"
  },
  {
    "text": "being unifying, being a negotiator, being classy, those are all super important for president. But if you look more at the area over",
    "start": "494615",
    "end": "502430"
  },
  {
    "text": "here where it's the other colors for local elections, whoops, sorry Chris, um,",
    "start": "502430",
    "end": "507945"
  },
  {
    "text": "you can see that it's a lot more about issues. We have advocates accessible, there's health care, affordable housing,",
    "start": "507945",
    "end": "513550"
  },
  {
    "text": "these are much more the bread and butter of like I have local policies that I care about, uh, that need to get done.",
    "start": "513550",
    "end": "518945"
  },
  {
    "text": "I'm gonna comment here, great work Moritz. Oh, wow, thanks Chris.",
    "start": "518945",
    "end": "524695"
  },
  {
    "text": "Um, and then the final thing I wanna show, so okay, so this has been- this was like how long did it take, uh, me to do this?",
    "start": "524695",
    "end": "532649"
  },
  {
    "start": "528000",
    "end": "640000"
  },
  {
    "text": "All I needed was to take the original data and then call two lines of this code and another visualization line.",
    "start": "532650",
    "end": "538430"
  },
  {
    "text": "And I feel like we're already starting to get a sense for how we would tackle this problem. So we're building an NLU system to answer the question; what are candidates?",
    "start": "538430",
    "end": "547519"
  },
  {
    "text": "What are voters looking for and why are they supporting candidate X over Y? So I think one thing we know is we would have to be sensitive",
    "start": "547520",
    "end": "553880"
  },
  {
    "text": "to whether they're talking about issues or personal characteristics, that seems to be kind of a cleavage in our data.",
    "start": "553880",
    "end": "559040"
  },
  {
    "text": "And then the other thing that we might want to understand is like, okay, uh we wanna understand personal qualities more and how those,",
    "start": "559040",
    "end": "565730"
  },
  {
    "text": "um, which qualities are resonating more with other people. So maybe we dig deeper and try to find sub-clusters of, you know,",
    "start": "565730",
    "end": "572060"
  },
  {
    "text": "this is about decency and humanity and fairness but this is about being well spoken. Um, and so this is- this would be a first step.",
    "start": "572060",
    "end": "579950"
  },
  {
    "text": "You're diving into a new unknown dataset. You wanna know what is in it, how do I actually solve those higher-level NLU problems I wanna solve?",
    "start": "579950",
    "end": "588230"
  },
  {
    "text": "The code that we've all explored so far in the first unit is your best first stop.",
    "start": "588230",
    "end": "593350"
  },
  {
    "text": "Um, and even for- I got paid to do this by the way. Um, even for like an industry,",
    "start": "593350",
    "end": "599120"
  },
  {
    "text": "this sort of code is it's not just starter code. It can give you a great um handle on- uh, on a dataset on a problem.",
    "start": "599120",
    "end": "605805"
  },
  {
    "text": "Um, and so as you embark on this next unit and your projects uh I encourage you never to forget the humble vector space models, um,",
    "start": "605805",
    "end": "615845"
  },
  {
    "text": "and know also that domains like politics, like customer, um,",
    "start": "615845",
    "end": "621139"
  },
  {
    "text": "understanding and experience, like employee and their experience, all of these domains need NLU people.",
    "start": "621140",
    "end": "627650"
  },
  {
    "text": "Um, they do not have it figured out. Um, so it's up to all of us to help them and do exciting new things for our projects.",
    "start": "627650",
    "end": "633904"
  },
  {
    "text": "Thanks. [APPLAUSE]",
    "start": "633905",
    "end": "640020"
  },
  {
    "start": "640000",
    "end": "777000"
  },
  {
    "text": "Oh yeah any questions? You guys are convinced, oh there we go. Yeah. Why are you assuming that [inaudible] [BACKGROUND].",
    "start": "640020",
    "end": "650190"
  },
  {
    "text": "Yes, so the question here is somebody answered a survey, do we even care about the data that comes back?",
    "start": "650190",
    "end": "655680"
  },
  {
    "text": "Do we- do we trust it? Does it- do we think it means anything to us? So the deeper question there is we actually have, you know,",
    "start": "655680",
    "end": "663269"
  },
  {
    "text": "if- in the actual application of this analysis we have data on turnout and previous supportive candidates and so",
    "start": "663270",
    "end": "670530"
  },
  {
    "text": "there are things that we can verify about like, yeah, these people vote. But I think the broader question is,",
    "start": "670530",
    "end": "675735"
  },
  {
    "text": "when people are telling you about their experience, should you care? Does it matter? And I'm gonna say- I'm gonna make the claim that whenever people are being emotional,",
    "start": "675735",
    "end": "684285"
  },
  {
    "text": "uh, and expressing opinions, you should care because they have taken, like they did not need to fill out these surveys or offer these reviews.",
    "start": "684285",
    "end": "692415"
  },
  {
    "text": "Uh, and so there's- my first bias is always there's something of value here. They had some reason for telling us this and",
    "start": "692415",
    "end": "699209"
  },
  {
    "text": "an aggregate if a million people tell you something you can learn something from it. Um, so I'm always optimistic I guess to answer that question.",
    "start": "699210",
    "end": "705570"
  },
  {
    "text": "Another question.",
    "start": "705570",
    "end": "710610"
  },
  {
    "text": "[NOISE]",
    "start": "710610",
    "end": "722850"
  },
  {
    "text": "[inaudible]. Absolutely. I think uh- I mean I think one thing that is true overall is in politics,",
    "start": "722850",
    "end": "728220"
  },
  {
    "text": "if for presidential elections in America, style matters. So there's always going to be some of that entering,",
    "start": "728220",
    "end": "733470"
  },
  {
    "text": "but I think definitely like it also speaks to kind of in the age of Trump things are things are different and like the word,",
    "start": "733470",
    "end": "741600"
  },
  {
    "text": "orange showed a lot, showed up a lot in this dataset. So you would not expect that to ever be a relevant thing to say in a presidential survey otherwise.",
    "start": "741600",
    "end": "749384"
  },
  {
    "text": "Um, so I think like, but that also speaks to how, like when I applied GloVe to the same data it failed,",
    "start": "749385",
    "end": "756180"
  },
  {
    "text": "like it didn't because the- this- the length- the words people were using in this context just means something a lot more",
    "start": "756180",
    "end": "762030"
  },
  {
    "text": "specific than in all of the English language, um, so there's also kind of PMI coming back to the rescue when GloVe failed.",
    "start": "762030",
    "end": "770260"
  },
  {
    "text": "Okay, um, let's dive back into the sentiment stuff.",
    "start": "772520",
    "end": "778240"
  },
  {
    "start": "777000",
    "end": "797000"
  },
  {
    "text": "And just to recap, what we did last time was, I set the stage.",
    "start": "779510",
    "end": "785205"
  },
  {
    "text": "I talked about sentiment as a general problem in NLU and I tried to make the case that it's a very interesting problem even if at first blush it might look kind of simple.",
    "start": "785205",
    "end": "795444"
  },
  {
    "text": "And then I gave you some general tips, showed you some evidence that it's worth thinking about preprocessing your data,",
    "start": "795445",
    "end": "803180"
  },
  {
    "text": "how you do that thoughtfully and so forth. I introduced the Stanford Sentiment Treebank that's up here and",
    "start": "803180",
    "end": "809280"
  },
  {
    "text": "highlighted some of its unique properties as a dataset in general and certainly for sentiment. Then we spent a bunch of time walking through the basics of sst.py.",
    "start": "809280",
    "end": "819750"
  },
  {
    "text": "And I'm gonna show you one screen from that- that kind of summarizes that whole unit. The reason that's important is that's what you want to work with",
    "start": "819750",
    "end": "826709"
  },
  {
    "text": "productively as you're doing your Homework 2 and Bake-off 2. And in fact, I'm going to try to get through this material at a leisurely pace,",
    "start": "826710",
    "end": "835455"
  },
  {
    "text": "but we'll keep uh, keep moving forward so that we can have some class time today to make sure that you guys are all set up and working",
    "start": "835455",
    "end": "842700"
  },
  {
    "text": "productively with it and a bunch of the team is available in the classroom and then did a post on Piazza in case you're",
    "start": "842700",
    "end": "849120"
  },
  {
    "start": "849000",
    "end": "971000"
  },
  {
    "text": "remote and wanted to just log in and chat with someone about how things are working or maybe take a step back from where we have and think about regular supervised learning,",
    "start": "849120",
    "end": "859455"
  },
  {
    "text": "the kind of stuff that I'm sort of taking for granted in this course, but I think the team is happy to fill in any gaps that you might have.",
    "start": "859455",
    "end": "865785"
  },
  {
    "text": "But the point is, since the time window is tight, we want you to get good with the code by",
    "start": "865785",
    "end": "871080"
  },
  {
    "text": "the end of the day today and we're available for that.",
    "start": "871080",
    "end": "874570"
  },
  {
    "text": "This slide here kind of summarizes the entire framework and in fact,",
    "start": "880520",
    "end": "885705"
  },
  {
    "text": "what I'm showing here is kind of for simple linear methods which we're going to explore first,",
    "start": "885705",
    "end": "891225"
  },
  {
    "text": "but exactly this same framework works for all the deep learning models that we'll discuss and it's meant to be flexible and",
    "start": "891225",
    "end": "898110"
  },
  {
    "text": "modular in a way that will let you run a lot of experiments without making a lot of mistakes and the long and short of it is,",
    "start": "898110",
    "end": "905730"
  },
  {
    "text": "you know, set yourself up to point to the data distribution. Your feature functions here I've called it phi should",
    "start": "905730",
    "end": "913110"
  },
  {
    "text": "always operate on trees and return dictionaries. Let's assume they're all count dictionaries.",
    "start": "913110",
    "end": "918884"
  },
  {
    "text": "You should also have these model wrappers which take in a supervised dataset, an X, y pair fitted model and return that fitted model.",
    "start": "918885",
    "end": "927165"
  },
  {
    "text": "And then all you have to do to run an experiment is call sst_experiment pointing at",
    "start": "927165",
    "end": "932610"
  },
  {
    "text": "your data distribution with that feature function and that model wrapper. And that's it and already from here,",
    "start": "932610",
    "end": "940230"
  },
  {
    "text": "you can see that there's lots of space to explore. If I wanted to try Naive Bayes or a support vector machine I would just write a different model wrapper.",
    "start": "940230",
    "end": "948540"
  },
  {
    "text": "If I wanted to explore different feature functions, I would just write new functions of trees and that would be very quick in terms of evaluating and by default,",
    "start": "948540",
    "end": "957885"
  },
  {
    "text": "this is gonna evaluate on random train test splits that are drawn from the training data, um, and you could periodically test against",
    "start": "957885",
    "end": "965070"
  },
  {
    "text": "the devset to see how well you're doing in reality. That's the rhythm that I'm imagining,",
    "start": "965070",
    "end": "970785"
  },
  {
    "text": "and I give you a quick peek under the hood at how this code is designed. I would encourage you to look",
    "start": "970785",
    "end": "976514"
  },
  {
    "text": "yourselves and find out even more about how this is working, but it's kind of all based around these dict-vectorizors,",
    "start": "976515",
    "end": "982140"
  },
  {
    "text": "which I think help us avoid a lot of common coding mistakes when building feature representations of data.",
    "start": "982140",
    "end": "990510"
  },
  {
    "start": "990000",
    "end": "1035000"
  },
  {
    "text": "That's the quick recap. Are there any questions or comments about it before I dive into this new stuff?",
    "start": "990510",
    "end": "996660"
  },
  {
    "text": "Any concerns that might have emerged over the last couple of days?",
    "start": "996660",
    "end": "1001110"
  },
  {
    "text": "All right, let's dive in. We have budgeted some time later in the term when you guys are in the thick",
    "start": "1004630",
    "end": "1011300"
  },
  {
    "text": "of your projects to talk a lot about methods and metrics. And we're going to return to the two themes that",
    "start": "1011300",
    "end": "1017300"
  },
  {
    "text": "I'm going to introduce now in that context and kind of talk about them even with a little bit of philosophy behind them.",
    "start": "1017300",
    "end": "1023495"
  },
  {
    "text": "But I want to introduce them now because I think that both of these can make you a better experimenter right from the start.",
    "start": "1023495",
    "end": "1030064"
  },
  {
    "text": "Those two things are kind of hyper-parameter exploration and classifier comparison.",
    "start": "1030065",
    "end": "1036154"
  },
  {
    "start": "1035000",
    "end": "1385000"
  },
  {
    "text": "So let's start first hyperparameter, here I've called it hyperparameter search and I want to give you the rationale for it.",
    "start": "1036155",
    "end": "1041495"
  },
  {
    "text": "So I'll just walk through this argument. First, some terminology. The parameters of a model are those",
    "start": "1041495",
    "end": "1047839"
  },
  {
    "text": "whose values are learned as part of optimizing the model itself, those are sometimes called weights, right?",
    "start": "1047840",
    "end": "1053720"
  },
  {
    "text": "And that's mainly what we think of when we think of machine learning is that like from data our model has a capacity to set",
    "start": "1053720",
    "end": "1059900"
  },
  {
    "text": "all these parameters in a way that's effective for new data. I'd say equally important are what are called the hyperparameters of the model.",
    "start": "1059900",
    "end": "1068450"
  },
  {
    "text": "These are any settings of the model that are outside of the core optimization process.",
    "start": "1068450",
    "end": "1075049"
  },
  {
    "text": "And some examples are like in GloVe or LSA, you have the dimensionality of the representations that you're going to learn.",
    "start": "1075050",
    "end": "1082115"
  },
  {
    "text": "Um, for- for GloVe you have the learning rate, for GloVe you have Xmax as part of the weighting function and alpha,",
    "start": "1082115",
    "end": "1088535"
  },
  {
    "text": "which is also a preprocessing step essentially that does something to your count matrix.",
    "start": "1088535",
    "end": "1093935"
  },
  {
    "text": "Neither of those values is learned as part of GloVe, but they're super important in terms of what you learned.",
    "start": "1093935",
    "end": "1099710"
  },
  {
    "text": "Also, regularization terms, hidden dimensionalities, learning rates, activation functions.",
    "start": "1099710",
    "end": "1105184"
  },
  {
    "text": "You can even go so far as to say like the optimization method itself, the algorithm that you use is the hyperparameter to your model.",
    "start": "1105185",
    "end": "1112505"
  },
  {
    "text": "There's no end of these things essentially, if you go on to scikit-learn and just look like in the linear model package,",
    "start": "1112505",
    "end": "1118700"
  },
  {
    "text": "that thing's like logistic regression or if you look at the support vector machines in there or the Naive Bayes models,",
    "start": "1118700",
    "end": "1124429"
  },
  {
    "text": "they have dozens of things that are hyperparameters and you can see them codified in code because it says like,",
    "start": "1124430",
    "end": "1130325"
  },
  {
    "text": "here are the keyword arguments. They have some defaults, but that's just one of the many values that",
    "start": "1130325",
    "end": "1135710"
  },
  {
    "text": "you could explore for each one of those things. This is crucial because to build a persuasive argument,",
    "start": "1135710",
    "end": "1144530"
  },
  {
    "text": "you need to be thoughtful about your hyperparameters. And the rationale there is what I've said here,",
    "start": "1144530",
    "end": "1151340"
  },
  {
    "text": "every model that you evaluate really needs to be put in the best possible light.",
    "start": "1151340",
    "end": "1158370"
  },
  {
    "text": "The- to round that out otherwise, right? In a kind of antagonistic situation,",
    "start": "1158650",
    "end": "1164885"
  },
  {
    "text": "you could appear to have evidence that your model, your favorite model is better than some other one just by",
    "start": "1164885",
    "end": "1171080"
  },
  {
    "text": "strategically picking hyperparameters that favored yours over another one, right? Pick really good settings for your model and ones that you",
    "start": "1171080",
    "end": "1178190"
  },
  {
    "text": "know are kind of degenerate for the other one and then you say look, \"My model is better.\" That's a problem.",
    "start": "1178190",
    "end": "1184970"
  },
  {
    "text": "Hyperparameter search is all about kind of making sure that you don't have the opportunity to do that opportunistic selection.",
    "start": "1184970",
    "end": "1192635"
  },
  {
    "text": "And the other way to think about this is that, in science, there is a kind of antagonistic dynamic that happens,",
    "start": "1192635",
    "end": "1200390"
  },
  {
    "text": "and I think it happens primarily in the service of making sure we make progress, which is that you submit your work somewhere and some referee is now evaluating it.",
    "start": "1200390",
    "end": "1209435"
  },
  {
    "text": "And the default mode for that referee is to think, \"Does this person really have results, right?",
    "start": "1209435",
    "end": "1214879"
  },
  {
    "text": "Can I trust what this person is saying?\" And from their perspective, they might think, \"Well,",
    "start": "1214880",
    "end": "1220039"
  },
  {
    "text": "they've only shown me two settings, how do I know that they didn't pick those settings",
    "start": "1220040",
    "end": "1225080"
  },
  {
    "text": "in a way that would rig the game in their favor?\" And what that referee is really looking for is evidence from",
    "start": "1225080",
    "end": "1230650"
  },
  {
    "text": "you that you have done what I have described in three here, which is put every model that you evaluate",
    "start": "1230650",
    "end": "1235825"
  },
  {
    "text": "in the best possible light given the data that you have. And what that really implies then is that when you evaluate these two models,",
    "start": "1235825",
    "end": "1244085"
  },
  {
    "text": "you do quite extensive hyperparameter search and you describe not only the- the space that you explored and that- but",
    "start": "1244085",
    "end": "1251570"
  },
  {
    "text": "then also report some statistics about how those models performed. Certainly, the best-performing model,",
    "start": "1251570",
    "end": "1256924"
  },
  {
    "text": "but maybe other information about average performance and so forth. Once you've done that,",
    "start": "1256925",
    "end": "1262355"
  },
  {
    "text": "if your model wins, we have a lot more confidence and your referee is gonna feel less antagonistic because they can feel like really both of these models were given a chance.",
    "start": "1262355",
    "end": "1272940"
  },
  {
    "text": "And it doesn't need to be antagonistic, you yourself could be that critic, right? You're evaluating a bunch of models,",
    "start": "1273610",
    "end": "1279155"
  },
  {
    "text": "you want to enter the bake-off. You have every incentive to really and truly pick the best model. In that case, you should explore wide ranges of",
    "start": "1279155",
    "end": "1286429"
  },
  {
    "text": "hyper-parameters so that you can give the best entry given the things you're exploring.",
    "start": "1286430",
    "end": "1291780"
  },
  {
    "text": "So, I'm encouraging you to do this. Another nice thing I'll say about this is if you use the code to do this search,",
    "start": "1292700",
    "end": "1301335"
  },
  {
    "text": "then you can set up a grid of hyperparameters that you wanna explore, Click Run and then go to the movies or take",
    "start": "1301335",
    "end": "1308910"
  },
  {
    "text": "a hike and know that that entire time you are working hard exploring, finding the best possible model.",
    "start": "1308910",
    "end": "1315165"
  },
  {
    "text": "That's the reason for automating this stuff. Um, what I want to talk with you about later",
    "start": "1315165",
    "end": "1321210"
  },
  {
    "text": "especially in the context of your projects is bringing some perspective to this.",
    "start": "1321210",
    "end": "1326895"
  },
  {
    "text": "Really, we're talking about infinite spaces of hyper-parameters and you could spend infinite dollars doing these explorations.",
    "start": "1326895",
    "end": "1334890"
  },
  {
    "text": "Someone has to impose a budget on you and I think we can have a discussion about how best to think about those budgetary constraints for,",
    "start": "1334890",
    "end": "1342150"
  },
  {
    "text": "you know, a priori constraining your search space and convincing reviewers that you haven't done anything harmful.",
    "start": "1342150",
    "end": "1348195"
  },
  {
    "text": "But for now, I think it's okay. I think what we just wanna enable you to do is some exploration of",
    "start": "1348195",
    "end": "1355260"
  },
  {
    "text": "pretty reasonable spaces of parameters for your models and that's what this is all about.",
    "start": "1355260",
    "end": "1360600"
  },
  {
    "text": "So again, this is a complete experimental setup. What I've done is leave phi alone,",
    "start": "1360600",
    "end": "1366210"
  },
  {
    "text": "it's just a bag of words classifier representation but fit soft-max with cross-validation.",
    "start": "1366210",
    "end": "1373019"
  },
  {
    "text": "Here you start to see the value of having put wrappers around all these models as opposed to just calling fit,",
    "start": "1373020",
    "end": "1378690"
  },
  {
    "text": "because what I do in this case is first setup a logistic regression model.",
    "start": "1378690",
    "end": "1384345"
  },
  {
    "text": "I decide that I wanna cross-validate over five-folds, that's cv = 5,",
    "start": "1384345",
    "end": "1389820"
  },
  {
    "start": "1385000",
    "end": "1564000"
  },
  {
    "text": "and then the really interesting thing is this what in scikit-learn is called this param grid. So it's saying for the intercept bias,",
    "start": "1389820",
    "end": "1397500"
  },
  {
    "text": "I'm gonna try the model with and without for this value c which is the inverse regularization strength for the- oh yeah,",
    "start": "1397500",
    "end": "1405990"
  },
  {
    "text": "the inverse regularization strength. I'm gonna explore this range of values from 0.4-3 and I'm also gonna explore which kind of regularization I do.",
    "start": "1405990",
    "end": "1416115"
  },
  {
    "text": "If I pick L1, I'm probably gonna get a model that favors really sparse feature representations.",
    "start": "1416115",
    "end": "1421860"
  },
  {
    "text": "A lot of the values for the weights will go to zero whereas L2 will give me more non-zero weights kinda evened out.",
    "start": "1421860",
    "end": "1429975"
  },
  {
    "text": "So I'll explore that as well and then I've included in the software for the course in utils,",
    "start": "1429975",
    "end": "1437640"
  },
  {
    "text": "fit classifier with cross-validation. You give it your data-set XY, your base mod and your param grid and the CV",
    "start": "1437640",
    "end": "1445590"
  },
  {
    "text": "value and it will find for you via cross-validation. So it should be pretty responsible,",
    "start": "1445590",
    "end": "1451815"
  },
  {
    "text": "the best model and then you return that and that's so by default,",
    "start": "1451815",
    "end": "1458549"
  },
  {
    "text": "here it's exploring the full grid of values. So these spaces grow very quickly, that's why you might wanna pick a long movie or",
    "start": "1458550",
    "end": "1465330"
  },
  {
    "text": "a long hike if you've picked a large param grid. But the point is that your model will churn away at this and it will",
    "start": "1465330",
    "end": "1472410"
  },
  {
    "text": "return what in a data-driven way it has decided is the best model, and then you could enter that into the bake-off or into a subsequent evaluation. Yeah?",
    "start": "1472410",
    "end": "1481650"
  },
  {
    "text": "[inaudible].",
    "start": "1481650",
    "end": "1489450"
  },
  {
    "text": "It checks every setting, every combination so it does true 0.4 L1,",
    "start": "1489450",
    "end": "1495374"
  },
  {
    "text": "true 0.6 L1 like that for all of the values. That's what it's doing, it's called grid search.",
    "start": "1495374",
    "end": "1502080"
  },
  {
    "text": "I've hardwired grid search in, it's perfectly reasonable to think about things like random sampling from the space.",
    "start": "1502080",
    "end": "1509385"
  },
  {
    "text": "I think that typically performs basically as well and then there are more sophisticated packages like Scikit optimize that will try to do more data-driven,",
    "start": "1509385",
    "end": "1519720"
  },
  {
    "text": "model-based exploration of the parameter space. But all these things come down to the same intuition which is",
    "start": "1519720",
    "end": "1525495"
  },
  {
    "text": "explore wide under some budgetary constraints.",
    "start": "1525495",
    "end": "1529780"
  },
  {
    "text": "And this function here best_mod, I think it actually prints out, sorry yeah, when you call that it prints out the best parameters.",
    "start": "1531800",
    "end": "1539144"
  },
  {
    "text": "You'll get some feedback but you also get the model itself which you can use subsequently. In terms of SST experiment,",
    "start": "1539145",
    "end": "1546450"
  },
  {
    "text": "nothing changes and the reason nothing changes is because all of that cross-validation stuff was packed into this model wrapper.",
    "start": "1546450",
    "end": "1553390"
  },
  {
    "text": "Makes sense? All right. So go forth and explore widely.",
    "start": "1554420",
    "end": "1560510"
  },
  {
    "text": "Let your computer run overnight or something like that. Second methodological thing that I thought I would introduce now is",
    "start": "1560510",
    "end": "1568955"
  },
  {
    "start": "1564000",
    "end": "1792000"
  },
  {
    "text": "classifier comparison and let me set this up again thinking about interacting in the community.",
    "start": "1568955",
    "end": "1577050"
  },
  {
    "text": "So suppose you've assessed a baseline model B and your favorite model M and your chosen assessment metric favors M. So good news, right?",
    "start": "1577050",
    "end": "1585914"
  },
  {
    "text": "Looks like you won, but is your model M really better?",
    "start": "1585915",
    "end": "1591060"
  },
  {
    "text": "That's a deep question. So first of all, if the difference between B and M is clearly of",
    "start": "1591060",
    "end": "1597179"
  },
  {
    "text": "practical significance like your model is gonna save lives and you can show it's gonna save 1000 lives.",
    "start": "1597180",
    "end": "1603420"
  },
  {
    "text": "Then maybe you don't need to do a subsequent round of like statistical comparison or anything.",
    "start": "1603420",
    "end": "1608850"
  },
  {
    "text": "Right? Because maybe it's just clear that we should pick your model. Um, but still especially in this age of deep learning,",
    "start": "1608850",
    "end": "1616155"
  },
  {
    "text": "you have to ask the subsequent question of whether or not there's variation in how either of those two models performs.",
    "start": "1616155",
    "end": "1621390"
  },
  {
    "text": "Because maybe on one run, you saved 1000 lives and then another actually your baseline model was was saving more.",
    "start": "1621390",
    "end": "1627735"
  },
  {
    "text": "Um, so even in the case of practical significance, you wanna do- might wanna do something further.",
    "start": "1627735",
    "end": "1634169"
  },
  {
    "text": "Now I've offered two methods for doing something further. The first, is to run a Wilcoxon signed-rank test.",
    "start": "1634170",
    "end": "1642150"
  },
  {
    "text": "This is just wisdom that I got from the literature. That's a kind of non-parametric version of",
    "start": "1642150",
    "end": "1647160"
  },
  {
    "text": "the t-test that's not assuming anything about the distribution of your scores and is allowing you to assess based",
    "start": "1647160",
    "end": "1654000"
  },
  {
    "text": "on repeated runs of a model which one is likely to be better,",
    "start": "1654000",
    "end": "1658720"
  },
  {
    "text": "and we can talk later about the rationale precisely for choosing that test but I guess the bottom line for here is that it's gonna be a pretty conservative,",
    "start": "1659060",
    "end": "1667725"
  },
  {
    "text": "statistical test that will probably especially if you can afford to run the model a lot give you a pretty robust picture of",
    "start": "1667725",
    "end": "1675030"
  },
  {
    "text": "whether or not your model is truly better than another one. That's really good. The only downside there is you have to",
    "start": "1675030",
    "end": "1683520"
  },
  {
    "text": "be in a situation in which you can repeatedly assess your two models B and M. So your dataset has to support that like",
    "start": "1683520",
    "end": "1691230"
  },
  {
    "text": "a lot of random training test splits and also your budget has to support that, right? If it takes you, uh,",
    "start": "1691230",
    "end": "1697230"
  },
  {
    "text": "a month to optimize B and M, then you're probably not gonna be able to do this kind of testing.",
    "start": "1697230",
    "end": "1703575"
  },
  {
    "text": "Because you maybe can only afford to do one or two runs and really what you wanna have done is like 10 to 20 runs.",
    "start": "1703575",
    "end": "1710355"
  },
  {
    "text": "In those situations, my, uh, offer to you is McNemar's test.",
    "start": "1710355",
    "end": "1716580"
  },
  {
    "text": "So this is applicable in a situation in which you can just run the models once, you get a single confusion matrix from",
    "start": "1716580",
    "end": "1723885"
  },
  {
    "text": "the models and it's essentially operating just on that fixed set of values, and the null hypothesis that you're testing there is",
    "start": "1723885",
    "end": "1731040"
  },
  {
    "text": "basically do the two have the same error rate? So this is noisier and you might have less confidence in it but I",
    "start": "1731040",
    "end": "1739140"
  },
  {
    "text": "think it's better than nothing when it comes to comparing classifiers. It's certainly better than just looking at the raw",
    "start": "1739140",
    "end": "1745260"
  },
  {
    "text": "numerical values and deciding that the larger one is clearly superior.",
    "start": "1745260",
    "end": "1750160"
  },
  {
    "text": "That makes sense. And again if you think about reviewers, reviewers when they see just two numbers,",
    "start": "1752200",
    "end": "1757955"
  },
  {
    "text": "they want context, they want to know, well, how big is that difference really, right?",
    "start": "1757955",
    "end": "1764030"
  },
  {
    "text": "And, you know, practical significance is the best answer to give, but then these things will further substantiate.",
    "start": "1764030",
    "end": "1770360"
  },
  {
    "text": "And in situations in which the values look small, you might still have a good argument in favor of",
    "start": "1770360",
    "end": "1776570"
  },
  {
    "text": "your model if the two models are very consistent in their behavior, and then you could use these tests to substantiate that",
    "start": "1776570",
    "end": "1782480"
  },
  {
    "text": "even in this face of what might look like a small difference.",
    "start": "1782480",
    "end": "1786450"
  },
  {
    "text": "And I hope I've made that easy. So just to set that up, here what I've done is,",
    "start": "1788230",
    "end": "1794765"
  },
  {
    "start": "1792000",
    "end": "1816000"
  },
  {
    "text": "you know, fixed bag-of-words feature representation phi like before. But now I have two model wrappers.",
    "start": "1794765",
    "end": "1800570"
  },
  {
    "text": "One I've called fit_softmax, you might call it fit logistic regression, and the other is fit_naivebayes.",
    "start": "1800570",
    "end": "1806420"
  },
  {
    "text": "This is a classic kind of comparison especially for sentiment, like let's see which is better, logistic regression or naivebayes.",
    "start": "1806420",
    "end": "1814205"
  },
  {
    "text": "So you set up those two model wrappers, and then the two ways you can do this are first again, this is a kind of Swiss army knife, sst.compare_models.",
    "start": "1814205",
    "end": "1822470"
  },
  {
    "start": "1816000",
    "end": "1925000"
  },
  {
    "text": "You give it at least one feature function, and if you give only one, it will assume that it should use both for",
    "start": "1822470",
    "end": "1829010"
  },
  {
    "text": "both experiments and at least one train function. Here you can see fit- filled that out with fit.softmax and fit.naivebayes.",
    "start": "1829010",
    "end": "1836810"
  },
  {
    "text": "The rest of the things are just default values that you can probably leave alone, and it will run all the comparisons that it needs to to run the signed rank test,",
    "start": "1836810",
    "end": "1847745"
  },
  {
    "text": "which is given here as stats_test. And what you get out is the two means for the models,",
    "start": "1847745",
    "end": "1853085"
  },
  {
    "text": "this is just printed, and the p-value. And up here you can see I'm also",
    "start": "1853085",
    "end": "1858200"
  },
  {
    "text": "returning the full vector of scores in case you want to like plot them to get further information beyond just the means about how these two systems compare.",
    "start": "1858200",
    "end": "1865910"
  },
  {
    "text": "One might, you know, have chaotic performance that you see when you look at the scores and another might be more rational.",
    "start": "1865910",
    "end": "1871850"
  },
  {
    "text": "[NOISE] And then the other test kind of simpler to run,",
    "start": "1871850",
    "end": "1878285"
  },
  {
    "text": "here I've just run two fixed experiments, softmax and naivebayes, and then you can run the McNemar's test.",
    "start": "1878285",
    "end": "1885680"
  },
  {
    "text": "And here you just have to make sure that you've run them on the same data. And this is the interface here.",
    "start": "1885680",
    "end": "1893000"
  },
  {
    "text": "I just get the actual values from one, one or the other of these because they're meant to be the same and then look at the predictions.",
    "start": "1893000",
    "end": "1900450"
  },
  {
    "text": "And so again, this will take a while to run, because you have to run a lot of experiments, and this requires running just one experiment.",
    "start": "1900940",
    "end": "1908820"
  },
  {
    "text": "Questions about that? All right.",
    "start": "1911440",
    "end": "1918934"
  },
  {
    "text": "Those are the two methods things that I wanted to do. Let's dive into this feature representations stuff then.",
    "start": "1918935",
    "end": "1924485"
  },
  {
    "text": "I'm just doing this by way of example, and the idea is that you see having seen",
    "start": "1924485",
    "end": "1930320"
  },
  {
    "start": "1925000",
    "end": "2022000"
  },
  {
    "text": "a few examples the ways that you can start to get creative about how you represent features.",
    "start": "1930320",
    "end": "1935330"
  },
  {
    "text": "So so far what we've done is bag of words. It's kind of small but what I've done here is just do bag of bigrams,",
    "start": "1935330",
    "end": "1943940"
  },
  {
    "text": "and you could do trigrams and so forth. That's pretty standard. It's worth trying out.",
    "start": "1943940",
    "end": "1950510"
  },
  {
    "text": "An interesting thing that you can do because we have tree structures is actually use that structure.",
    "start": "1950510",
    "end": "1955910"
  },
  {
    "text": "And so what I've called that down here is five phrases, and what it does is represent the data as",
    "start": "1955910",
    "end": "1962809"
  },
  {
    "text": "all the words that occur in isolation and all the pairs of words that occur as siblings of the same parent on",
    "start": "1962810",
    "end": "1972350"
  },
  {
    "text": "the assumption that it's interesting that is amazing, form a phrase linguistically,",
    "start": "1972350",
    "end": "1977585"
  },
  {
    "text": "but NLU and is do not. And you can see the differences here. So NLU and is for example is part of the bigrams,",
    "start": "1977585",
    "end": "1985580"
  },
  {
    "text": "but it is not part of this phrasal representation because there's no single parent that dominates NLU and is.",
    "start": "1985580",
    "end": "1993065"
  },
  {
    "text": "And if you play that out over the very rich tree structures that are in the SST,",
    "start": "1993065",
    "end": "1998750"
  },
  {
    "text": "you find that you're getting very different representations than you get from a simple linear pass like bigrams is doing.",
    "start": "1998750",
    "end": "2005230"
  },
  {
    "text": "And you can see down here I've just said the height is less than 3 to get just these local trees,",
    "start": "2005230",
    "end": "2010524"
  },
  {
    "text": "but you could set it higher, right? And that would be a version of like getting higher level n grams because you'd be finding larger and larger chunks of these trees.",
    "start": "2010525",
    "end": "2020420"
  },
  {
    "text": "The other class that I want to highlight here is negation. So last class, I highlighted a heuristic method that I",
    "start": "2021900",
    "end": "2030280"
  },
  {
    "start": "2022000",
    "end": "2103000"
  },
  {
    "text": "think is very powerful of just finding negation words that are in a lexicon, and then marking them although following tokens with _neg to kind of",
    "start": "2030280",
    "end": "2039990"
  },
  {
    "text": "indicate that they are in the scope in some sense of that negation word.",
    "start": "2039990",
    "end": "2045350"
  },
  {
    "text": "The problem with that is that that can be pretty imprecise. You end up depending on things like punctuation,",
    "start": "2045350",
    "end": "2050889"
  },
  {
    "text": "and if the punctuation isn't there, then this _neg marking just runs on and on way past",
    "start": "2050890",
    "end": "2055929"
  },
  {
    "text": "what you would think of as any kind of semantic scope for the negation. Because we have tree structures,",
    "start": "2055930",
    "end": "2061720"
  },
  {
    "text": "we can be much more precise about this. So like in this example, the dialogue wasn't very good but the acting was amazing.",
    "start": "2061720",
    "end": "2068845"
  },
  {
    "text": "It seems clear that the negation is meant to target only very good. That's hard for us to keep track of in the linear method,",
    "start": "2068845",
    "end": "2076435"
  },
  {
    "text": "but it's easy with the tree structure, because basically what you want to do is write a feature function that when it finds a negation,",
    "start": "2076435",
    "end": "2083845"
  },
  {
    "text": "goes to the parent, and then marks everything that's, that's below that parent.",
    "start": "2083845",
    "end": "2088929"
  },
  {
    "text": "And that's very close to what linguists think of as the scope of the operator.",
    "start": "2088930",
    "end": "2095389"
  },
  {
    "text": "And that's nice because then all this clearly unnegated stuff is left alone.",
    "start": "2095610",
    "end": "2101290"
  },
  {
    "text": "And that's a very general idea. There are lots of things in language that take scope in this way that have",
    "start": "2101290",
    "end": "2106870"
  },
  {
    "start": "2103000",
    "end": "2160000"
  },
  {
    "text": "semantic influences over the things that are next to them in the tree. So we actually, we touched on this last time.",
    "start": "2106870",
    "end": "2114130"
  },
  {
    "text": "They said it was great. It's not a speaker commitment to it being great, whatever it is, because of this verb of saying.",
    "start": "2114130",
    "end": "2121765"
  },
  {
    "text": "And so you can imagine writing feature functions that are also marking things that are in the scope of verbs like say and claim,",
    "start": "2121765",
    "end": "2129700"
  },
  {
    "text": "and maybe doubt, and deny marking them in some special way so that they can get treated differently by your model.",
    "start": "2129700",
    "end": "2137365"
  },
  {
    "text": "Here I did it another one. It might be successful, right? That's a kind of hedge, very different from it is successful,",
    "start": "2137365",
    "end": "2144565"
  },
  {
    "text": "and you could capture that by doing some of this scope marking from might down into the thing that's next to it.",
    "start": "2144565",
    "end": "2151820"
  },
  {
    "text": "And this is something that's really possible only because we have these trees. [NOISE] And here are a few other ideas.",
    "start": "2151860",
    "end": "2161500"
  },
  {
    "start": "2160000",
    "end": "2291000"
  },
  {
    "text": "So obviously, lexicon derived features, you're gonna do some of those for Homework 1.",
    "start": "2161500",
    "end": "2166690"
  },
  {
    "text": "You could also think about modal adverbs marking their scope like it- it is quite possibly a masterpiece or it is totally amazing.",
    "start": "2166690",
    "end": "2173620"
  },
  {
    "text": "Those adverbs are doing something special to commitment. Another idea is what in the literature is called thwarted expectations.",
    "start": "2173620",
    "end": "2182755"
  },
  {
    "text": "This is the case where I build up what seems to be one kind of evaluation only to offer really another one, right?",
    "start": "2182755",
    "end": "2190660"
  },
  {
    "text": "Many consider the movie bewildering, boring, slow-moving, or annoying. That speaker might be building up to",
    "start": "2190660",
    "end": "2196795"
  },
  {
    "text": "a positive endorsement because of this shift in perspective they're performing. And one signal of that is that they're kind of laying it",
    "start": "2196795",
    "end": "2203470"
  },
  {
    "text": "on thick with all of this negative language. It could happen in both directions.",
    "start": "2203470",
    "end": "2208539"
  },
  {
    "text": "It was hailed as a brilliant unprecedented artistic achievement worthy of multiple Oscars,",
    "start": "2208540",
    "end": "2214644"
  },
  {
    "text": "but it was terrible, right? That kind of review is one that your model is going to struggle with because of",
    "start": "2214644",
    "end": "2222280"
  },
  {
    "text": "all the indicators of positivity balanced by that one word that was negative.",
    "start": "2222280",
    "end": "2227440"
  },
  {
    "text": "But the imbalance actually might be a signal to your model that somebody is keying into this thwarted expectations thing.",
    "start": "2227440",
    "end": "2234415"
  },
  {
    "text": "So you could just count all these words essentially and look at their ratios. And then even harder of course kind of like the Holy Grail for work in",
    "start": "2234415",
    "end": "2242320"
  },
  {
    "text": "sentiment analysis is getting a really good grip on non-literal language use, like if someone says it's not exactly a masterpiece, it's probably terrible.",
    "start": "2242320",
    "end": "2251665"
  },
  {
    "text": "If they say it's 50 hours long for a movie, that's hyperbole. They probably don't literally mean it,",
    "start": "2251665",
    "end": "2256990"
  },
  {
    "text": "and they're doing something special socially or emotionally when they pick that hyper- hyperbolic expression,",
    "start": "2256990",
    "end": "2263050"
  },
  {
    "text": "right, or the best movie in the history of the universe. That one is hyperbole and you feel like it could go either",
    "start": "2263050",
    "end": "2269440"
  },
  {
    "text": "way in terms of whether it's positive or sarcastic.",
    "start": "2269440",
    "end": "2274130"
  },
  {
    "text": "And there are lots of other ideas. Uh, this is just a sample of them. And that lexicon idea I showed you some lexicons before,",
    "start": "2275340",
    "end": "2283150"
  },
  {
    "text": "that's a pretty rich set of resources to mine for doing sentiment analysis.",
    "start": "2283150",
    "end": "2288250"
  },
  {
    "text": "Oh, I had one other methodological note that I thought I would. I had one other methodological note that I thought I would insert here.",
    "start": "2288250",
    "end": "2296730"
  },
  {
    "start": "2291000",
    "end": "2588000"
  },
  {
    "text": "Because, it might be that for the bake-off for example, you end up writing a lot of feature functions.",
    "start": "2296730",
    "end": "2302560"
  },
  {
    "text": "A bet that you could make early on. For example in this bake-off, is that you should be using linear models not deep learning models because you",
    "start": "2302560",
    "end": "2309160"
  },
  {
    "text": "only have till Monday and it can take a long time for deep learning models to work. And so that might set you on the path of writing a lot of",
    "start": "2309160",
    "end": "2315590"
  },
  {
    "text": "interesting feature functions of the sort I've just been describing to you. And I thought I would insert here just a methodological note",
    "start": "2315590",
    "end": "2322010"
  },
  {
    "text": "about assessing those feature functions. So suppose you've written a lot of them,",
    "start": "2322010",
    "end": "2327665"
  },
  {
    "text": "and you might want to be combining them into a single model, which I'd also encourage.",
    "start": "2327665",
    "end": "2332965"
  },
  {
    "text": "Scikit-learn offers in its feature selection package, a bunch of methods for doing,",
    "start": "2332965",
    "end": "2339025"
  },
  {
    "text": "for assessing feature functions individually. And you can sort of what you're doing with those tools",
    "start": "2339025",
    "end": "2344555"
  },
  {
    "text": "is assessing essentially in isolation, how much information they tell you about the class label.",
    "start": "2344555",
    "end": "2350855"
  },
  {
    "text": "And that can give you a picture of how much predictive value they have. What I've done here with this little dataset which I constructed artificially,",
    "start": "2350855",
    "end": "2360440"
  },
  {
    "text": "is just try to send you a warning that assessing these feature functions in isolation,",
    "start": "2360440",
    "end": "2366290"
  },
  {
    "text": "might be a kind of good first pass heuristic, but it can be very dangerous because what you end up doing in the presence of",
    "start": "2366290",
    "end": "2374030"
  },
  {
    "text": "correlated features is often overstating the value of those features. Because what you're really doing when you run your model,",
    "start": "2374030",
    "end": "2382070"
  },
  {
    "text": "is assessing them all in the context of that unified model. And that's doing something very different than you're doing with this individual testing.",
    "start": "2382070",
    "end": "2390455"
  },
  {
    "text": "And I'll let you think about this example here. But the point is, if I use this chi-squared test in isolation,",
    "start": "2390455",
    "end": "2397130"
  },
  {
    "text": "it looks like at least these two features, X_1 and X_2 are really good to include.",
    "start": "2397130",
    "end": "2403160"
  },
  {
    "text": "And maybe you decide to drop X_3. But the truth of the matter is, if you fit an integrated model,",
    "start": "2403160",
    "end": "2409370"
  },
  {
    "text": "then X_1 alone is the best model. And including X_2 actually degrades the performance of the model.",
    "start": "2409370",
    "end": "2416599"
  },
  {
    "text": "And so that argues I think for something more like a holistic assessment, where you are maybe dropping or adding individual features,",
    "start": "2416600",
    "end": "2424805"
  },
  {
    "text": "but always in the context of the full system that you're evaluating and not so much in isolation the way I've done here. Uh, yeah?",
    "start": "2424805",
    "end": "2434475"
  },
  {
    "text": "For like, related features. Is there something like simple you can do like maybe some PCA thing to understand how your features um,",
    "start": "2434475",
    "end": "2443055"
  },
  {
    "text": "maybe are like [inaudible] before you like actually like choose which ones to use there?",
    "start": "2443055",
    "end": "2448675"
  },
  {
    "text": "I think it's a reasonable response. It's certainly a way, uh, of removing those correlations.",
    "start": "2448675",
    "end": "2454555"
  },
  {
    "text": "Um, it can cause some problems at test time.",
    "start": "2454555",
    "end": "2460184"
  },
  {
    "text": "If you pick one of those matrix factorization methods and do that to your trained features,",
    "start": "2460185",
    "end": "2465635"
  },
  {
    "text": "if I give you new examples, you have to be able to do that reliably on those new examples as well.",
    "start": "2465635",
    "end": "2472099"
  },
  {
    "text": "Um, and that can be problematic because the characteristics of those new test examples might",
    "start": "2472100",
    "end": "2478490"
  },
  {
    "text": "be very different from the training examples. So it's just something to think about in terms of a real deployment.",
    "start": "2478490",
    "end": "2484220"
  },
  {
    "text": "You mean the data distributions are different, or? Yeah, because if you do that reduction on your training set let's say, you've done that.",
    "start": "2484220",
    "end": "2491000"
  },
  {
    "text": "And I give you a single test example, it might be not so clear what you're supposed to do with that test example in terms of reweighting it,",
    "start": "2491000",
    "end": "2499310"
  },
  {
    "text": "reweighting its feature values. There are some like Scikit actually tries to manage this.",
    "start": "2499310",
    "end": "2504710"
  },
  {
    "text": "So for example, I'm not sure what it does for PCA. But if you run TFIDF,",
    "start": "2504710",
    "end": "2509945"
  },
  {
    "text": "then if you call fit.transform, it will do this to your feature matrix or reweight it.",
    "start": "2509945",
    "end": "2516635"
  },
  {
    "text": "And then if you run that with just transform, I think it uses its IDF values",
    "start": "2516635",
    "end": "2522680"
  },
  {
    "text": "that it has stored from training and it applies those to the new test cases. Oh wait, I meant, like sorry, um,",
    "start": "2522680",
    "end": "2530780"
  },
  {
    "text": "I don't know if I'm communicating what I meant, but like, for example construct like a correlation matrix of agreements between",
    "start": "2530780",
    "end": "2537500"
  },
  {
    "text": "like your features and how you label the class, to like, use that as a way to select which ones stay?",
    "start": "2537500",
    "end": "2543785"
  },
  {
    "text": "Oh, so not as a way to change the representations [OVERLAPPING] Yeah. But rather just to do the selection.",
    "start": "2543785",
    "end": "2549065"
  },
  {
    "text": "Um, I think it could be a good heuristic. Yeah. It's certainly telling you something about the entire matrix which was what I'm pushing here.",
    "start": "2549065",
    "end": "2556255"
  },
  {
    "text": "Yeah. Yeah. Pretty much the same question. I was going to ask about PCU. That's pretty much answered.",
    "start": "2556255",
    "end": "2562970"
  },
  {
    "text": "I think you'll get finer grain inflow- information if you can afford it by just using, actually,",
    "start": "2562970",
    "end": "2568640"
  },
  {
    "text": "Scikit has these functions like ablation things that will repeatedly run your model having added or removed some of the features.",
    "start": "2568640",
    "end": "2575750"
  },
  {
    "text": "And then you can kind of see their practical significance in the context of the full model, with exactly the scaling that you're going to be using for your task.",
    "start": "2575750",
    "end": "2584550"
  },
  {
    "text": "Final thing about feature representation, that's a kind of transition into the world of deep learning.",
    "start": "2587440",
    "end": "2593434"
  },
  {
    "start": "2588000",
    "end": "2863000"
  },
  {
    "text": "What I'm pitching here is, using distributed representations as features. So imagine my simple example from the SST is The Rock rules.",
    "start": "2593435",
    "end": "2602360"
  },
  {
    "text": "Uh, you know, The Rock is an actor. What I can do in this case,",
    "start": "2602360",
    "end": "2608150"
  },
  {
    "text": "is just look up all of these words in an embedding space. Maybe GloVe, maybe it's one you built yourself,",
    "start": "2608150",
    "end": "2613535"
  },
  {
    "text": "right from the first unit. So look them all up. What I need to do in this space is,",
    "start": "2613535",
    "end": "2620720"
  },
  {
    "text": "find a way to combine them into a single fixed dimensional representation, because all these methods presuppose that",
    "start": "2620720",
    "end": "2626570"
  },
  {
    "text": "all the examples are coming from the same embedding space essentially. So in this simple mode,",
    "start": "2626570",
    "end": "2632119"
  },
  {
    "text": "what you would do is combine them. You could use for example, the sum of the values component-wise, or the mean,",
    "start": "2632120",
    "end": "2638630"
  },
  {
    "text": "or the product, or whatever some function that will take them together into a single representation.",
    "start": "2638630",
    "end": "2644795"
  },
  {
    "text": "And then that function X here, is just the input to your classifier. Whereas, before if we built a bunch of feature functions like the bag of words one,",
    "start": "2644795",
    "end": "2654859"
  },
  {
    "text": "your feature representations will have you know, like 20,000 dimensions and will be very sparse.",
    "start": "2654860",
    "end": "2662494"
  },
  {
    "text": "These distributed representations of your data will have 50 to 300 dimensions depending on what vectors you downloaded or built.",
    "start": "2662495",
    "end": "2671315"
  },
  {
    "text": "And they will be very dense, of course, right? All the vectors will be active. So it's a very different perspective on your data.",
    "start": "2671315",
    "end": "2679400"
  },
  {
    "text": "But it's amazing how much- how well these classifiers can perform, given how little information you seem to be feeding them.",
    "start": "2679400",
    "end": "2687410"
  },
  {
    "text": "And also how hard this combination step typically is, because of course, this is a hyperparameter tier model.",
    "start": "2687410",
    "end": "2693260"
  },
  {
    "text": "It's not something that your model is learning. Yeah? If you had um, multiple sentences,",
    "start": "2693260",
    "end": "2698645"
  },
  {
    "text": "so let's say paragraphs, uh, what would be your limit for how many uh,",
    "start": "2698645",
    "end": "2704390"
  },
  {
    "text": "pre-trained vectors you would add together before uh, you couldn't really get a signal out of that data?",
    "start": "2704390",
    "end": "2711710"
  },
  {
    "text": "I'd say not pre-rated limit. I think it's actually striking how you could do this with fairly long documents.",
    "start": "2711710",
    "end": "2718250"
  },
  {
    "text": "Just sum them up and get a pretty good representation of what's in there. In that, in that situation,",
    "start": "2718250",
    "end": "2723740"
  },
  {
    "text": "my intuition is that you would not want the mean. Um, but rather, something the sum that was encoding a lot of information about the length of",
    "start": "2723740",
    "end": "2730579"
  },
  {
    "text": "the text which you'd essentially get from the magnitude of the dimensions as you added them together.",
    "start": "2730580",
    "end": "2735650"
  },
  {
    "text": "But it's kind of amazing how well that can work, as a kind of all-purpose rough look at the full text.",
    "start": "2735650",
    "end": "2744930"
  },
  {
    "text": "In terms of running experiments for this again, I claim it's really easy. Oh, a question in the back here. Go ahead.",
    "start": "2746740",
    "end": "2752390"
  },
  {
    "text": "[inaudible].",
    "start": "2752390",
    "end": "2757670"
  },
  {
    "text": "Um, I think that this is a nice baseline for a sequential model. If I wanted to argue for an RNN that used GloVe inputs,",
    "start": "2757670",
    "end": "2766385"
  },
  {
    "text": "I might use this as my baseline because what I would be doing there is saying, keeping constant the amount of lexical information that I'm introducing,",
    "start": "2766385",
    "end": "2775265"
  },
  {
    "text": "what precisely is the value of modeling the full sequence? And then you'd be assessing your RNN about how well it did",
    "start": "2775265",
    "end": "2782839"
  },
  {
    "text": "over and above this simple combination function, because it's kind of like the simplest version is sum, uh,",
    "start": "2782840",
    "end": "2789950"
  },
  {
    "text": "to combine these vectors and the complicated version is your fancy LSTM. Um, the framework can accommodate these representations.",
    "start": "2789950",
    "end": "2802160"
  },
  {
    "text": "I've given you the full recipe here, and most of this is just building up the embedding space, GloVe lookup, have a general purpose feature function",
    "start": "2802160",
    "end": "2810440"
  },
  {
    "text": "that has too many arguments for the framework. So then I define the special purpose one that builds my GloVe representations.",
    "start": "2810440",
    "end": "2818045"
  },
  {
    "text": "Softmax is as before, no change there. And then you call the experiment, and the only thing you have to remember,",
    "start": "2818045",
    "end": "2824779"
  },
  {
    "text": "if you have this kind of data coming in, that is vectors and not dictionaries, is to say vectorize equals false.",
    "start": "2824780",
    "end": "2831680"
  },
  {
    "text": "Otherwise, it's going to assume that those vectors coming in are actually dictionaries and it will do,",
    "start": "2831680",
    "end": "2837119"
  },
  {
    "text": "if it does anything at all, it will be something quite crazy. What you're essentially doing here is saying,",
    "start": "2837120",
    "end": "2843100"
  },
  {
    "text": "\"Hey sst.experiment, don't featurize my data form using a dict vectorizer,",
    "start": "2843100",
    "end": "2849385"
  },
  {
    "text": "just take it as it comes.\" And then it all works out.",
    "start": "2849385",
    "end": "2854220"
  },
  {
    "text": "Other questions about that approach? Great, let's do two more things.",
    "start": "2856720",
    "end": "2864035"
  },
  {
    "start": "2863000",
    "end": "2956000"
  },
  {
    "text": "And this is a foray into deep learning. So the first one will be, uh, RNN classifiers.",
    "start": "2864035",
    "end": "2870065"
  },
  {
    "text": "This is implemented in a few ways in the package. If you want all the details, go to np_rnn_classifier, it gives you",
    "start": "2870065",
    "end": "2877130"
  },
  {
    "text": "the forward algorithm and also the back prop for learning. But I'd actually recommend that you use what's called Torch, a classifier RNN,",
    "start": "2877130",
    "end": "2886280"
  },
  {
    "text": "or the TensorFlow version, because they're faster and more robust. But all of them are drawing on the same basic structure which I've depicted here.",
    "start": "2886280",
    "end": "2894755"
  },
  {
    "text": "So The Rock rules is my example. I look them up in some embedding space which could",
    "start": "2894755",
    "end": "2901069"
  },
  {
    "text": "be pre-trained when you built yourself for GloVe, or it could be a random embedding.",
    "start": "2901070",
    "end": "2906770"
  },
  {
    "text": "And then the crucial thing is the action of this RNN. So it has this hidden layer here, and you do combinations to get hidden states at each time step.",
    "start": "2906770",
    "end": "2915225"
  },
  {
    "text": "And then in the simplest version, the final time step is the basis for your classification decision.",
    "start": "2915225",
    "end": "2922015"
  },
  {
    "text": "So imagine that by the time I've gotten to h_3, I'm looking at some fixed dimensional dense representation,",
    "start": "2922015",
    "end": "2929105"
  },
  {
    "text": "and that's the input to a classifier. This little part here is essentially this,",
    "start": "2929105",
    "end": "2935195"
  },
  {
    "text": "where x is the final hidden representation from the RNN, and that's why I think these are kind of a natural pair if you think about assessment.",
    "start": "2935195",
    "end": "2945330"
  },
  {
    "text": "And so this is just the label for the SST sequence, and these are the leaves.",
    "start": "2945970",
    "end": "2951930"
  },
  {
    "text": "People might have seen these models before. It's worth noting, uh, one thing about how you do preprocessing,",
    "start": "2952570",
    "end": "2961415"
  },
  {
    "start": "2956000",
    "end": "3035000"
  },
  {
    "text": "that makes these a little bit fiddly. So your examples here are presumably lists of strings.",
    "start": "2961415",
    "end": "2967805"
  },
  {
    "text": "Here I've got this tiny vocabulary, so imagine these are all just different words, two examples.",
    "start": "2967805",
    "end": "2973010"
  },
  {
    "text": "In the standard preprocessing flow, you map those into indices, and those indices are into an embedding space that you've built.",
    "start": "2973010",
    "end": "2982790"
  },
  {
    "text": "By default, the code will randomly initialize one of these embedding spaces. But if you feed in your own space,",
    "start": "2982790",
    "end": "2990289"
  },
  {
    "text": "it will use that as the embedding. And so from these indices, you do all the look-ups,",
    "start": "2990290",
    "end": "2995540"
  },
  {
    "text": "and what the model actually processes of course, is essentially a list of vectors,",
    "start": "2995540",
    "end": "3001225"
  },
  {
    "text": "and so the final version of these examples is this list of vectors down here.",
    "start": "3001225",
    "end": "3006620"
  },
  {
    "text": "That's the way, this is a kind of standard setup for these problems, it's not obligatory of course.",
    "start": "3007020",
    "end": "3014140"
  },
  {
    "text": "And when we look later in the course at contextual word representations, we will skip all these things and just directly look up entire sequences,",
    "start": "3014140",
    "end": "3022359"
  },
  {
    "text": "because the point there is that words could have different initial representations, depending on the context they're in,",
    "start": "3022359",
    "end": "3028734"
  },
  {
    "text": "which is something that this embedding look-up thing of course can capture.",
    "start": "3028735",
    "end": "3032990"
  },
  {
    "text": "But the RNN itself is an exciting development to my mind, because even if I have fixed representations down here,",
    "start": "3034250",
    "end": "3042705"
  },
  {
    "text": "because I'm modeling the full sequence like this, I'm modeling all of these words in the context that they occur in.",
    "start": "3042705",
    "end": "3048770"
  },
  {
    "text": "So for example, one thing I really like about this as a linguist is, I have an intuition that negation is important for sentiment.",
    "start": "3048770",
    "end": "3056799"
  },
  {
    "text": "I showed you a messy heuristic method based on the tokens, and then I showed you a very precise version that depended on trees.",
    "start": "3056800",
    "end": "3065695"
  },
  {
    "text": "But, you know, the trees might be wrong or my, I might just be confused about how scope works in my dataset.",
    "start": "3065695",
    "end": "3071650"
  },
  {
    "text": "So both of those have drawbacks because neither of them is really responding to information from my labeled dataset.",
    "start": "3071650",
    "end": "3079660"
  },
  {
    "text": "This RNN here of course, this sequence of hidden representations, you know,",
    "start": "3079660",
    "end": "3084850"
  },
  {
    "text": "one in the same token at point h_2 could be different depending on whether or not h_1 is the origin for a negation,",
    "start": "3084850",
    "end": "3094089"
  },
  {
    "text": "and that's the sense in which these models just out of the box are allowing you to",
    "start": "3094090",
    "end": "3099280"
  },
  {
    "text": "have the power to see those semantic influences play out at the level of the sequence. And the same thing for might, and for say,",
    "start": "3099280",
    "end": "3106630"
  },
  {
    "text": "and for claim, and for no one, and for everyone, all these things are affecting the semantic context,",
    "start": "3106630",
    "end": "3112824"
  },
  {
    "text": "and therefore affecting the hidden representations associated with the words in the sequence.",
    "start": "3112824",
    "end": "3118195"
  },
  {
    "text": "So it's a lovely holistic analysis of your example, with clearly the potential to capture lots of interesting semantic influences.",
    "start": "3118195",
    "end": "3128065"
  },
  {
    "text": "And I think that's born out, these are, are very successful and powerful models for lots of different tasks.",
    "start": "3128065",
    "end": "3135500"
  },
  {
    "start": "3137000",
    "end": "3293000"
  },
  {
    "text": "I have a note here on LSTMs, I'm not going to dive into this too much. Suffice it to say that,",
    "start": "3137490",
    "end": "3144085"
  },
  {
    "text": "regular RNNs like that NP one down here, they struggle with long sequences,",
    "start": "3144085",
    "end": "3149680"
  },
  {
    "text": "and it's not a surprise that they do because the signal they get from the training label up here becomes very diffuse and problematic as these sequences get longer.",
    "start": "3149680",
    "end": "3158800"
  },
  {
    "text": "So LSTMs and other mechanisms like them, are ways of managing that flow of information in a way that leads to better results.",
    "start": "3158800",
    "end": "3167260"
  },
  {
    "text": "And so the Torch and TensorFlow RNNs both have LSTM cells by default.",
    "start": "3167260",
    "end": "3174415"
  },
  {
    "text": "And I'm not going to give you an explanation of them here, we don't have that much time, and also frankly, I feel like I just can't improve on these two blog posts,",
    "start": "3174415",
    "end": "3183280"
  },
  {
    "text": "especially this first one. If you want an intro to LSTMs, I highly recommend it.",
    "start": "3183280",
    "end": "3188830"
  },
  {
    "text": "It uses a lovely kind of visual language for helping you think about what's happening inside these cells,",
    "start": "3188830",
    "end": "3194859"
  },
  {
    "text": "and why they work so well, um, yeah, very helpful.",
    "start": "3194860",
    "end": "3200960"
  },
  {
    "text": "And then finally, here's a code snippet to round this out again. I'm, here I'm building a GloVe space for my embedding.",
    "start": "3201420",
    "end": "3210055"
  },
  {
    "text": "For the feature functions of course, they get kind of trivialized, because what I wanna do is just return",
    "start": "3210055",
    "end": "3216400"
  },
  {
    "text": "the sequence of words that are the leaves, so I just do that. No featurization at that point because the real action is inside fit_rnn.",
    "start": "3216400",
    "end": "3225550"
  },
  {
    "text": "I decide on the train vocabulary, and I've decided that I'm gonna keep just the top 10,000 words by frequency,",
    "start": "3225550",
    "end": "3233065"
  },
  {
    "text": "and all other words will be mapped to UNK, and you can set that parameter however you want up here.",
    "start": "3233065",
    "end": "3239425"
  },
  {
    "text": "And then I create a little embedding space and feed that in here, and there's lots of other parameters that you can fiddle around with.",
    "start": "3239425",
    "end": "3247240"
  },
  {
    "text": "Fit that model to the x, y pair that come in. And from there, it's just SST experiment as usual, and again,",
    "start": "3247240",
    "end": "3254650"
  },
  {
    "text": "remember to say vectorize equals false for these models, so that it doesn't assume its a bunch of count dictionaries.",
    "start": "3254650",
    "end": "3262435"
  },
  {
    "text": "I'm not sure that would even work in this context.",
    "start": "3262435",
    "end": "3265820"
  },
  {
    "text": "And in terms of hyperparameter exploration, you're seeing a glimpse of it here,",
    "start": "3269190",
    "end": "3274329"
  },
  {
    "text": "there's a lot of values that you could explore, and maybe the dark side of deep learning is",
    "start": "3274330",
    "end": "3280900"
  },
  {
    "text": "that these things will matter a lot to the final performance of your model.",
    "start": "3280900",
    "end": "3285559"
  },
  {
    "text": "Let me do one more thing, and then why don't we just do some coding here in the room?",
    "start": "3287130",
    "end": "3292885"
  },
  {
    "text": "And that's these tree structured networks. So it's, it's a very similar idea to the RNN,",
    "start": "3292885",
    "end": "3300385"
  },
  {
    "start": "3293000",
    "end": "3486000"
  },
  {
    "text": "except instead of having simple sequences, we're going to process the SST trees as they come.",
    "start": "3300385",
    "end": "3306790"
  },
  {
    "text": "So I have that same example, The Rock rules, and you have some hidden parameters in here that are",
    "start": "3306790",
    "end": "3313119"
  },
  {
    "text": "forming hidden representations here in orange. It's just that instead of processing them input to hidden and then hidden to hidden,",
    "start": "3313120",
    "end": "3321985"
  },
  {
    "text": "you take the child nodes and process them together to form the hidden representation,",
    "start": "3321985",
    "end": "3327430"
  },
  {
    "text": "and you do that part recursively until you reach the root of the tree, which has a hidden representation,",
    "start": "3327430",
    "end": "3333535"
  },
  {
    "text": "and that's the basis for your classifier. And from there, it's kind of,",
    "start": "3333535",
    "end": "3339550"
  },
  {
    "text": "in my code Softmax classifier as usual. And then the back-prop is a process of taking the errors and feeding them down,",
    "start": "3339550",
    "end": "3348745"
  },
  {
    "text": "and splitting the gradients apart, and then feeding them down like that, and you can see tree- np_tree_nn exactly how that process works.",
    "start": "3348745",
    "end": "3357920"
  },
  {
    "text": "Combinations is like how to mark products summations, how do you get two and then put them together?",
    "start": "3357930",
    "end": "3366160"
  },
  {
    "text": "There's lots of options here. [LAUGHTER] So my code, is a great question, my code is just concatenating the two, uh,",
    "start": "3366160",
    "end": "3374349"
  },
  {
    "text": "child nodes and feeding them through this kind of simple classifier here, where you have learned weights and a bias.",
    "start": "3374350",
    "end": "3380710"
  },
  {
    "text": "I think that's a good baseline for the space. It's the first one that was explored, and the first one that everyone kind of sets up,",
    "start": "3380710",
    "end": "3387145"
  },
  {
    "text": "and I've mapped out three alternatives. All of these were explored by Richard Socher, Matrix-vector,",
    "start": "3387145",
    "end": "3392695"
  },
  {
    "text": "where you represent each word as both a vector and a matrix. And when you do that combination to form the parent,",
    "start": "3392695",
    "end": "3399325"
  },
  {
    "text": "you kind of cross the matrix and the vector so that you get lots of multiplicative interactions, so very powerful.",
    "start": "3399325",
    "end": "3406990"
  },
  {
    "text": "I think it was too powerful in the sense that it had too many parameters relative to the data,",
    "start": "3406990",
    "end": "3412285"
  },
  {
    "text": "and that's how Socher et al. motivated this tensor combination here, which takes this combination function and extends it",
    "start": "3412285",
    "end": "3420715"
  },
  {
    "text": "with essentially a method for combining in every conceivable way,",
    "start": "3420715",
    "end": "3425965"
  },
  {
    "text": "the concatenation of the two child nodes with a higher order tensor kind of sandwiched in the middle allowing for all those interactions,",
    "start": "3425965",
    "end": "3433735"
  },
  {
    "text": "and then you essentially add that to a function that looks like this. So that's very powerful and successful,",
    "start": "3433735",
    "end": "3439600"
  },
  {
    "text": "and like when I was showing you examples from the SST project before, that was a model that was using this combination function,",
    "start": "3439600",
    "end": "3447714"
  },
  {
    "text": "and then just to round it out as a more recent development in Tai et al, they have the feature that so the nodes that are",
    "start": "3447715",
    "end": "3456010"
  },
  {
    "text": "doing the combination functions at the nodes are LSTMs, and the innovation there is that they're kind of gathering state and other kind",
    "start": "3456010",
    "end": "3466089"
  },
  {
    "text": "of gaining information from the child- the two child nodes separately so that they can be gated separately,",
    "start": "3466090",
    "end": "3472690"
  },
  {
    "text": "and then combining them into a single representation. And I highly recommend all these papers if you're interested in this space.",
    "start": "3472690",
    "end": "3480234"
  },
  {
    "text": "This is a nice progression of ideas.",
    "start": "3480235",
    "end": "3482870"
  },
  {
    "start": "3486000",
    "end": "3600000"
  },
  {
    "text": "And then the final thing that you could say that unfortunately we don't get to explore too much in here is that recall of course that in the SST,",
    "start": "3486750",
    "end": "3494769"
  },
  {
    "text": "you actually get supervision not just at the tree node the way this model is implying, but also at all of the sub nodes,",
    "start": "3494769",
    "end": "3501700"
  },
  {
    "text": "and I have included model implementation in our class repo that will do that,",
    "start": "3501700",
    "end": "3507820"
  },
  {
    "text": "and I think the guiding intuition here is that I have all these points of supervision on shared parameters for this classifier.",
    "start": "3507820",
    "end": "3516145"
  },
  {
    "text": "So I can gather them all together and get lots information for all of them, and then pass that down at each one of the sub trees.",
    "start": "3516145",
    "end": "3524095"
  },
  {
    "text": "So in terms of implementation, once you get your head around how all this information needs to be",
    "start": "3524095",
    "end": "3529150"
  },
  {
    "text": "passed around in the tree, it's pretty straightforward, and then of course you can get really powerful models coming from the fact that you're getting",
    "start": "3529150",
    "end": "3536829"
  },
  {
    "text": "so much more information about what all the subconstituents mean in terms of sentiment.",
    "start": "3536830",
    "end": "3542365"
  },
  {
    "text": "And then just to round this out, this is a full picture of how you use SST experiment with these tree models.",
    "start": "3542365",
    "end": "3549115"
  },
  {
    "text": "Uh, and I think the only special thing about this is that the tree models are",
    "start": "3549115",
    "end": "3554590"
  },
  {
    "text": "unusual in assuming that their label is part of the training instance itself.",
    "start": "3554590",
    "end": "3560575"
  },
  {
    "text": "So in the default, the regular tree_nn, it looks to the root node to find its label as opposed to having it in a separate vector.",
    "start": "3560575",
    "end": "3568704"
  },
  {
    "text": "And so that's a little bit funny down here that mod.fit takes only X and not Y. Y is just there for assessment.",
    "start": "3568705",
    "end": "3575620"
  },
  {
    "text": "It's operating on X, and the reason for that is that then in the context of sub-tree supervision,",
    "start": "3575620",
    "end": "3581165"
  },
  {
    "text": "I can just gather all of those points of supervision from my training instance, and not worry about how they align with some other vector.",
    "start": "3581165",
    "end": "3588375"
  },
  {
    "text": "But I think that's the only gotcha. Other than that, you can use this framework for the full set of models that I've introduced here.",
    "start": "3588375",
    "end": "3596320"
  },
  {
    "text": "Are there questions? This is good,",
    "start": "3597480",
    "end": "3603970"
  },
  {
    "text": "it gives us some time. What we're imagining for the homework of course, let me just run through it quickly to get you oriented,",
    "start": "3603970",
    "end": "3611320"
  },
  {
    "text": "and then you can start coding on your own. So sentiment words alone is just asking you to use",
    "start": "3611320",
    "end": "3616660"
  },
  {
    "text": "a lexicon to create a filtered bag-of-words feature function, just to see how much information about",
    "start": "3616660",
    "end": "3623530"
  },
  {
    "text": "the class label is encoded in this off-the-shelf lexicon. And so what I'm asking you to do is design that feature function,",
    "start": "3623530",
    "end": "3631480"
  },
  {
    "text": "and then use the McNemar test to compare them, just to expose you to that interface and get you thinking about classifier comparison.",
    "start": "3631480",
    "end": "3640450"
  },
  {
    "text": "So I think that's pretty straightforward. A more powerful vector summing baseline is asking you",
    "start": "3640450",
    "end": "3646000"
  },
  {
    "text": "to explore in a little bit more detail that distributed representation approach that I showed you as",
    "start": "3646000",
    "end": "3652210"
  },
  {
    "text": "the final phase of thinking about like linear classifiers, and you're just sort of seeing whether with",
    "start": "3652210",
    "end": "3659290"
  },
  {
    "text": "a more powerful model than just a linear classifier one that might uncover lots of interactions among",
    "start": "3659290",
    "end": "3664539"
  },
  {
    "text": "the feature dimensions seem whether you could do better at the problem. And then the final one is your custom system,",
    "start": "3664540",
    "end": "3673000"
  },
  {
    "text": "and custom here just means basically anything goes. It's okay to download other people's code.",
    "start": "3673000",
    "end": "3680140"
  },
  {
    "text": "Of course, I have a huge bias for you taking code that we've provided and doing cool modifications to it to see whether they pay off.",
    "start": "3680140",
    "end": "3687460"
  },
  {
    "text": "Uh, but we don't have to place too many rules here for designing your original system,",
    "start": "3687460",
    "end": "3692830"
  },
  {
    "text": "and that's what you'll enter into the bake-off. We're evaluating on the ternary class problem for all of this stuff.",
    "start": "3692830",
    "end": "3701470"
  },
  {
    "text": "So you should kind of hill climb on that. What you should do is probably do a lot of testing just within your training data and",
    "start": "3701470",
    "end": "3709570"
  },
  {
    "text": "periodically test against your dev set to get a more honest look at how you're actually generalizing to new data,",
    "start": "3709570",
    "end": "3716215"
  },
  {
    "text": "uh, and never look at the test set of course. The test set although it's distributed is completely out of bounds until the bake-off starts,",
    "start": "3716215",
    "end": "3724405"
  },
  {
    "text": "and then we'll actually run the evaluation and I'll give you some code to guide you on exactly how to do that,",
    "start": "3724405",
    "end": "3730090"
  },
  {
    "text": "but have in mind that you want a system that does well on the ternary class problem on the test set.",
    "start": "3730090",
    "end": "3736045"
  },
  {
    "text": "And the only other thing that I wanted to note is that I added, um, maybe it hasn't reloaded here.",
    "start": "3736045",
    "end": "3743109"
  },
  {
    "text": "I just added a note at the bottom here asking you to give an informal description of your system,",
    "start": "3743110",
    "end": "3748555"
  },
  {
    "text": "just to help the teaching team kind of get oriented on what your code actually does and what your solution is like, uh,",
    "start": "3748555",
    "end": "3754825"
  },
  {
    "text": "so that we can classify the solutions and come to some kind of understanding of what worked and what didn't. Yeah?",
    "start": "3754825",
    "end": "3764125"
  },
  {
    "text": "For these bake-offs will we go over in class like the best one, and why we think that's the best one, or are we going to dissect them?",
    "start": "3764125",
    "end": "3771220"
  },
  {
    "text": "That's the plan. I mean, we hope to give you really rich reports on this. Um, we're aiming to have the first one on Monday,",
    "start": "3771220",
    "end": "3778375"
  },
  {
    "text": "and I can tell from the submissions that have come in that there will be interesting lessons that we can reflect back to you about what worked and what didn't,",
    "start": "3778375",
    "end": "3785695"
  },
  {
    "text": "and I'm hoping that continues. Yeah. Okay. I'm gonna stop talking and let",
    "start": "3785695",
    "end": "3794920"
  },
  {
    "text": "you all just get coding, and we're here to help.",
    "start": "3794920",
    "end": "3798290"
  }
]