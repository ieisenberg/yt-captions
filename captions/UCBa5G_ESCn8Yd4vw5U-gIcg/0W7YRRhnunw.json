[
  {
    "start": "0",
    "end": "10860"
  },
  {
    "text": "Let's get started. So I'm going to talk about\nRowHammer, RowPress and beyond. And I have this title over\nhere that probably everybody",
    "start": "10860",
    "end": "18480"
  },
  {
    "text": "knows the answer to. But maybe we can\ndiscuss that at the end. How many people\nknow this bridge?",
    "start": "18480",
    "end": "26430"
  },
  {
    "text": "OK. Where's-- what is it? [INAUDIBLE] Tacoma Narrows. How many people\nhave been over it?",
    "start": "26430",
    "end": "32863"
  },
  {
    "text": "Probably zero because this is\nwhat happened to that bridge in 1940. It's a bitflip. And this is a\nbitflip that clearly",
    "start": "32863",
    "end": "39870"
  },
  {
    "text": "in important infrastructure\nlike bridges. And it's taught in civil\nengineering classes",
    "start": "39870",
    "end": "45270"
  },
  {
    "text": "as a classic example of how not\nto build bridges, let's say. But we're going to\nget back to bridges",
    "start": "45270",
    "end": "50520"
  },
  {
    "text": "at the end of this\ntalk in a little bit. But this is also an example of\na reliability issue that caused",
    "start": "50520",
    "end": "56280"
  },
  {
    "text": "a safety and security problem. And in this talk, I'm going to\ncover a reliability issue that's",
    "start": "56280",
    "end": "62070"
  },
  {
    "text": "caused the safety and\nsecurity problem as well. I'll also ask you this question. How secure do you\nthink these people are?",
    "start": "62070",
    "end": "67290"
  },
  {
    "text": "They look quite happy. You don't need to answer. If they get a bitflip they\nwill not be happy soon.",
    "start": "67290",
    "end": "72299"
  },
  {
    "text": "So think of security\nas preventing unforeseen consequences. You can replace that security\nwith safety over here",
    "start": "72300",
    "end": "78300"
  },
  {
    "text": "as well, probably. Now, this is miss--\na robustness. Yes, exactly. I had that in my abstract.",
    "start": "78300",
    "end": "84990"
  },
  {
    "text": "I'm going to get\nback to robustness. Essentially, robustness\nis safety, security, reliability combined together.",
    "start": "84990",
    "end": "90540"
  },
  {
    "text": "This is Mr. Bean. You may have seen this. And clearly, he is\nforeshadowing the future.",
    "start": "90540",
    "end": "95890"
  },
  {
    "text": "And if we have\ninfrastructure that looks like this, which\nis going to be much more common than bridges, of course,\ndriven by somebody else other",
    "start": "95890",
    "end": "103060"
  },
  {
    "text": "than Mr. Bean pulling strings. And if we get\nbitflips in this, we may not be very happy\ngoing into the future.",
    "start": "103060",
    "end": "108580"
  },
  {
    "text": "And this infrastructure\nwill be all over the place. There are billions of devices\nthat are going to be around us.",
    "start": "108580",
    "end": "114920"
  },
  {
    "text": "OK. So what is RowHammer? Why am I showing you\nall these pictures? Essentially,\nRowHammer is the fact that you can predictably\ninduce bitflips",
    "start": "114920",
    "end": "120820"
  },
  {
    "text": "in commodity DRAM chips. The first time we\ntested this problem, we saw that more than 80% of the\ntested chips were vulnerable.",
    "start": "120820",
    "end": "127870"
  },
  {
    "text": "Today, it's 400%. But I'm going to give\nyou the story of it also. And interestingly,\nthis is, as far",
    "start": "127870",
    "end": "133570"
  },
  {
    "text": "as we know, the first example\nof how a simple hardware failure mechanism can create a\nwidespread system security vulnerability.",
    "start": "133570",
    "end": "139090"
  },
  {
    "text": "If you know of something\nelse, please let me know. I'll correct my slide. And people are writing\ninteresting articles like this,",
    "start": "139090",
    "end": "145750"
  },
  {
    "text": "\"forget software, now hackers\nare exploiting physics\". I like this because this kind of\ngets to the core of the problem,",
    "start": "145750",
    "end": "151120"
  },
  {
    "text": "if you will. So I'm going to give\nyou a bit of story of how we stumbled on\nthis, and what we've done,",
    "start": "151120",
    "end": "156550"
  },
  {
    "text": "and what people have done. And hopefully, we can\nhave a good discussion. Feel free to interrupt\nme with any question that you may have at any point.",
    "start": "156550",
    "end": "163340"
  },
  {
    "text": "So we've been working\non memory reliability problems for a while. I was invited to give this talk\nat the International Memory",
    "start": "163340",
    "end": "169068"
  },
  {
    "text": "Workshop in 2013, where we\nargued that these problems are going to get much worse. And we will need\nto take a systems",
    "start": "169068",
    "end": "174230"
  },
  {
    "text": "and architectural perspective\nto solve these problems. So what is the\nproblem that we're going to look at, specifically,\nin the memory side?",
    "start": "174230",
    "end": "181530"
  },
  {
    "text": "There are a lot of issues\nin other memory technologies as well. But we're going\nto focus on DRAM. And if you look at DRAM, DRAM\nstores charge in capacitor.",
    "start": "181530",
    "end": "188880"
  },
  {
    "text": "Let me see. Yeah, this is not\nworking very well. So I'm going to use\nmy pointer over here. You have-- you need to\nhave a storage device.",
    "start": "188880",
    "end": "194400"
  },
  {
    "text": "And you need to have\nan access device. And both of these need to\nwork very well, essentially, reliably. And as you reduce the\nsize of the circuit,",
    "start": "194400",
    "end": "201720"
  },
  {
    "text": "the reliability--\nmaintaining that reliability becomes a challenge. And you get noise,\na lot of noise.",
    "start": "201720",
    "end": "207360"
  },
  {
    "text": "And as a result,\ncapacity, cost, and energy were hard to scale in DRAM. And this is a virtual\npicture, if you will.",
    "start": "207360",
    "end": "213840"
  },
  {
    "text": "The physical DRAM\nlooks like this. It's like a honeycomb structure,\nwhich is very interesting also. So there are a lot of\ninteresting effects",
    "start": "213840",
    "end": "219629"
  },
  {
    "text": "that we're not going to go into. I'm not going to go into\nthe device level over here. But I'd be happy\nto talk about that. Basically, DRAM is\nused in all memories",
    "start": "219630",
    "end": "226379"
  },
  {
    "text": "today that we build,\nall main memories. And we wanted to understand\nthe reliability issues. This is one of the\nlarge scale studies",
    "start": "226380",
    "end": "231870"
  },
  {
    "text": "that we did with\nFacebook in 2015, that was published in 2015. What we did was we analyzed\nall of the memory areas",
    "start": "231870",
    "end": "237512"
  },
  {
    "text": "in all of their data centers. This is actually a lot of\nmemory, a lot of servers. They didn't allow us to\npublish how much memory, how",
    "start": "237512",
    "end": "243550"
  },
  {
    "text": "many servers, because they were\nworried that this would affect-- this would give out\nthe size of their fleet and affect their stock\nprice, et cetera.",
    "start": "243550",
    "end": "249730"
  },
  {
    "text": "But imagine that there's a\nnice correlational study. So what we found out is that\nDRAM chip density that's",
    "start": "249730",
    "end": "257342"
  },
  {
    "text": "employed in the\nserver is strongly correlated with the\nserver failure rate that you're getting\nat the system level, at the application level.",
    "start": "257343",
    "end": "263142"
  },
  {
    "text": "We can go into a lot\nof detail over here. I'm not going to do that. But basically, the denser the\nDRAM chip, you get more errors.",
    "start": "263142",
    "end": "269740"
  },
  {
    "text": "And these errors happens\nbecause the cells are smaller, and cells are closer\nto each other. So there are a lot more\nreliability and noise issues.",
    "start": "269740",
    "end": "276169"
  },
  {
    "text": "And you can read the paper\nif you're interested. People have written papers\nthat build on this paper also from AMD, Microsoft, et\ncetera that are interesting.",
    "start": "276170",
    "end": "284420"
  },
  {
    "text": "So, of course, with\na large scale study, you cannot really pinpoint\nsome of the issues. So we also wanted to build\nan FPGA-based infrastructure",
    "start": "284420",
    "end": "290770"
  },
  {
    "text": "to understand some of the\nlow-level issues that we can--",
    "start": "290770",
    "end": "296229"
  },
  {
    "text": "that happen with DRAM. And we're going to look at\nretention failures and latency and RowHammer in this.",
    "start": "296230",
    "end": "302547"
  },
  {
    "text": "So basically, these are\nFPGA-based infrastructure, where you can modify\nthe memory controller. And the memory controller\ncan change the commands",
    "start": "302547",
    "end": "308380"
  },
  {
    "text": "that you can issue to DRAM so\nthat we can test essentially anything that the interface\nallows by violating the timing",
    "start": "308380",
    "end": "315510"
  },
  {
    "text": "parameters, for example. By not refreshing DRAM, we can\nfigure out different things. And this is the\ninfrastructure that we",
    "start": "315510",
    "end": "320770"
  },
  {
    "text": "use to do a lot of\nthe RowHammer studies. We open sourced it in 2017. And more recently, we\nactually open sourced",
    "start": "320770",
    "end": "326650"
  },
  {
    "text": "a newer version of it in 2022\nthat can test DDR4 chips. If people are interested in\nactually doing studies on DRAM,",
    "start": "326650",
    "end": "334058"
  },
  {
    "text": "we'd be happy to support it. We've been supporting\npeople to do that. So why did we build\nthis infrastructure? We actually wanted to test\nthese reliability issues.",
    "start": "334058",
    "end": "339940"
  },
  {
    "text": "And one of the major reliability\nissue that we wanted to test was data retention. DRAM is dynamic\nrandom access memory.",
    "start": "339940",
    "end": "345970"
  },
  {
    "text": "It needs to refresh frequently. And we said basically, if\nyou refresh frequently, if you actually reduce\nthe size of the cell,",
    "start": "345970",
    "end": "351670"
  },
  {
    "text": "and the cells get\ncloser to each other, you need to refresh things\nmuch more frequently. And we wanted to avoid that. And we wanted to understand\nhow the retention time",
    "start": "351670",
    "end": "359350"
  },
  {
    "text": "profile of DRAM looks\nlike and exploit that. And this is actually\nvery well known. But we validated it.",
    "start": "359350",
    "end": "364870"
  },
  {
    "text": "Most of the DRAM cells don't\n[INAUDIBLE] refresh frequently. And we wanted to understand,\ncan we actually enable real mechanisms that\navoid refreshes in DRAM so",
    "start": "364870",
    "end": "372430"
  },
  {
    "text": "that your power doesn't\nexplode, and your battery doesn't die, for example,\nbecause of the refreshes.",
    "start": "372430",
    "end": "378460"
  },
  {
    "text": "My cell phone, for example, is\nrefreshing its DRAM in my pocket right now, unnecessarily,\nI would say.",
    "start": "378460",
    "end": "384380"
  },
  {
    "text": "OK. I'm not going to tell you\nthe story about refreshes. There's actually a very,\nvery interesting story in retention over\nhere, because this",
    "start": "384380",
    "end": "389590"
  },
  {
    "text": "is a very much tougher problem\nthan this picture shows. It's very difficult to identify\nthese cells that can be",
    "start": "389590",
    "end": "394930"
  },
  {
    "text": "refreshed at different rates. But we've written papers about\nit that I'm going to skip. So while we were\ndoing these studies,",
    "start": "394930",
    "end": "400930"
  },
  {
    "text": "we were actually doing a lot\nof studies with flash memory as well. I'm going to show you a\npicture of infrastructure with flash memory.",
    "start": "400930",
    "end": "406479"
  },
  {
    "text": "And in flash memory,\nthere are a lot of errors. And one of the issues about\nread disturbance errors. And together with\nIntel, we wanted",
    "start": "406480",
    "end": "411910"
  },
  {
    "text": "to actually analyze the read\ndisturbance errors in DRAM as well. So what is RowHammer? Essentially, RowHammer is a\nread disturbance mechanism.",
    "start": "411910",
    "end": "418930"
  },
  {
    "text": "This is an array in DRAM\nyou have rows of cells. Each cell stores\none bit of value.",
    "start": "418930",
    "end": "424780"
  },
  {
    "text": "If you want to read a value\nin one row, you need to open or activate that row,\nmeaning apply high voltage",
    "start": "424780",
    "end": "430300"
  },
  {
    "text": "to that wordline. Now if you want to\nread some other row, you need to close this row. It's called precharging DRAM,\napply low voltage to that word",
    "start": "430300",
    "end": "436400"
  },
  {
    "text": "length. Now, if you keep doing this\nrepeatedly, open, close, open, close, activate, precharge,\nactivate, , activate, precharge,",
    "start": "436400",
    "end": "441939"
  },
  {
    "text": "essentially, we found out that\nphysically adjacent rows get bitflips in vulnerable cells.",
    "start": "441940",
    "end": "447348"
  },
  {
    "text": "And clearly, this should\nnot be happening, right? Because nothing should\nbe changing in memory. We're just activating a row.",
    "start": "447348",
    "end": "452720"
  },
  {
    "text": "But now you're actually\ncorrupting data in nearby cells. This data can be belonging\nto your own application",
    "start": "452720",
    "end": "459560"
  },
  {
    "text": "or some other application,\nthe operating system. As a result, this is a\ndata corruption problem",
    "start": "459560",
    "end": "464900"
  },
  {
    "text": "that could affect your\nsafety, clearly, reliability also, but security also,\nbecause these bitflips can be taken advantage of, as I\nwill describe in a little bit.",
    "start": "464900",
    "end": "472430"
  },
  {
    "text": "So we call this\nthe hammered row. We call these the victim rows. And we show that\nessentially, more than 80% of the chips that\nare manufactured",
    "start": "472430",
    "end": "478820"
  },
  {
    "text": "by three major manufacturers\nare vulnerable to this problem. There are only three major DRAM\nmanufacturers in the world.",
    "start": "478820",
    "end": "484378"
  },
  {
    "text": "There are some others\nthat are interesting. But they're also\nvulnerable, by the way. It's interesting. OK.",
    "start": "484378",
    "end": "489470"
  },
  {
    "text": "Yes. [INAUDIBLE] Yeah. So-- Sorry. What do you mean by\n10 million errors?",
    "start": "489470",
    "end": "495470"
  },
  {
    "text": "Is it over time? It's-- --you know, like number of bits? Over a certain number of bits.",
    "start": "495470",
    "end": "501210"
  },
  {
    "text": "I believe a bank, in this case. Yeah, don't take these\nnumbers so literally. It's based on some experiments,\nbut a certain hammering pattern,",
    "start": "501210",
    "end": "508320"
  },
  {
    "text": "and certain number of bits. Yes. I don't know the exact\nlike bank size, et cetera.",
    "start": "508320",
    "end": "514374"
  },
  {
    "text": "--spatial. Exactly. It's spatial, certainly. Yeah. Yes. So here, for example,\nit's errors per 10",
    "start": "514374",
    "end": "520892"
  },
  {
    "text": "to the ninth cells over here. It's kind of that metric. Yeah. So this is also a\nscaling problem. Because the chips that we\ntested that were manufactured",
    "start": "520892",
    "end": "527451"
  },
  {
    "text": "before 2010 were\nnot-- at least we were not able to\ninduce bitflips, RowHammer read disturbance\nbitflips like this.",
    "start": "527452",
    "end": "534250"
  },
  {
    "text": "But the chips that were\nmanufactured in 2010, where we showed the-- we showed the first\nappearance of these bitflips.",
    "start": "534250",
    "end": "539649"
  },
  {
    "text": "And all of the chips that\nwere manufactured between 2012 and 2013 were vulnerable. I should also say that\nthis is not the best",
    "start": "539650",
    "end": "546130"
  },
  {
    "text": "way of inducing bitflips. I'm going to talk\na little bit more about a better way\nof inducing bitflips. So there might be bitflips\nin later generations",
    "start": "546130",
    "end": "554607"
  },
  {
    "text": "that we weren't able to\ndiscover over here, for example. So you may actually\nfind that anomaly. So why is this happening?",
    "start": "554607",
    "end": "559810"
  },
  {
    "text": "In this talk, I'm not going to\ngo into the silicon level device failure mechanisms. But cross-talk is one\nreason why this happening.",
    "start": "559810",
    "end": "566570"
  },
  {
    "text": "Electromigration and\ninjection is another reason why this is happening. These are being studied also. But basically, the\nissue is DRAM cells",
    "start": "566570",
    "end": "572842"
  },
  {
    "text": "are too close to each other. They're not electrically\nisolated from each other. Access to one cell affects\nthe values in nearby cells",
    "start": "572843",
    "end": "578569"
  },
  {
    "text": "due to this electrical\ninterference between the cells, as well as the wires used\nfor accessing the cells. It's essentially a cell-to-cell\ncoupling interference.",
    "start": "578570",
    "end": "585710"
  },
  {
    "text": "I like this high-level\nabstract picture. I use this actually for freshmen\nwhen I teach this to freshmen.",
    "start": "585710",
    "end": "591680"
  },
  {
    "text": "For example, when you activate,\napply high voltage to a row. An adjacent row gets\nslightly activated as well. Clearly, I'm violating some\nlow-level abstraction here.",
    "start": "591680",
    "end": "599480"
  },
  {
    "text": "But vulnerable cells in\nthat slightly activated row lose a little bit of charge. And if RowHammer happens enough\ntimes, charge and such cells",
    "start": "599480",
    "end": "606380"
  },
  {
    "text": "get drained. And as a result, you\nget data corruption. And this actually has enormous\nimplications on the software",
    "start": "606380",
    "end": "613520"
  },
  {
    "text": "hierarchy, because these\nbits, these bitflips actually get directly exposed to the\nprogramming language, operating",
    "start": "613520",
    "end": "619760"
  },
  {
    "text": "system, and essentially, memory. It's very different\nfrom flash where storage, the bitflips\ninside the storage",
    "start": "619760",
    "end": "626720"
  },
  {
    "text": "don't get directly\nexposed to anything that's running immediately. So what's worse about this is\nthat when we wrote the paper,",
    "start": "626720",
    "end": "634370"
  },
  {
    "text": "we also released this code\nthat showed that with this six lines of code, x86 code, you can\nactually induce these bitflips.",
    "start": "634370",
    "end": "640550"
  },
  {
    "text": "What this code does is it\nselects addresses X and Y such that they map to the same bank. And it basically avoids\ncaches, caches from the CPU,",
    "start": "640550",
    "end": "649790"
  },
  {
    "text": "and avoids row buffer\nhits in the DRAM, and ping pong activates\nthe X and Y, rows X and Y.",
    "start": "649790",
    "end": "655520"
  },
  {
    "text": "And if the chip is vulnerable,\nyou'll get bitflips. In this paper, we also show that\nif X and Y are selected such",
    "start": "655520",
    "end": "660950"
  },
  {
    "text": "that there is only one row half\nsandwiched between X and Y, you get a lot more bitwidths. That's called\ndouble-sided hammering.",
    "start": "660950",
    "end": "666692"
  },
  {
    "text": "But in most of the\nexperiments in our paper was single-sided hammering. Double-sided hammering\nis actually much worse because you increase the\nelectrical interference that",
    "start": "666692",
    "end": "673208"
  },
  {
    "text": "happens, coupling, essentially. And we observed errors in\nreal systems with that code.",
    "start": "673208",
    "end": "678230"
  },
  {
    "text": "I'm not going to harp\nupon these real systems. All of the real systems that\nemploy a good enough memory",
    "start": "678230",
    "end": "684140"
  },
  {
    "text": "controller and this sort\nof memory gets bitflips. So it's a real reliability,\nsecurity, and safety issue.",
    "start": "684140",
    "end": "689750"
  },
  {
    "text": "So in the paper, we said that\nbasically the first sentence, as you can see is,\nmemory isolation is a key property of a reliable\nand secure computing system.",
    "start": "689750",
    "end": "696570"
  },
  {
    "text": "And access to one memory\naddress should not have unintended side effects on\ndata stored in other addresses. I strongly believe that.",
    "start": "696570",
    "end": "702990"
  },
  {
    "text": "And we basically said that if\nthis does not get controlled, someone can hijack\nyour computer.",
    "start": "702990",
    "end": "708540"
  },
  {
    "text": "And the good folks from Google\nProject Zero read our paper. They basically said,\nOK, we can do this.",
    "start": "708540",
    "end": "714029"
  },
  {
    "text": "And they actually created\na beautiful attack. I'm not going to go\nover this in detail. And this is actually copy paste\ndirectly from their blog post.",
    "start": "714030",
    "end": "720620"
  },
  {
    "text": "They have a beautiful blackhat\npresentation about this also. They basically said they\nreplicated the problem",
    "start": "720620",
    "end": "725700"
  },
  {
    "text": "on a selection of laptops. And they wrote a-- they\nwrote two programs. One is more interesting\nthan the other.",
    "start": "725700",
    "end": "731400"
  },
  {
    "text": "One was able to induce\nbitflips and essentially escape the sandbox of the Google\nnative client, virtual machine,",
    "start": "731400",
    "end": "738630"
  },
  {
    "text": "essentially. But the other one is\na user level process. It was able to gain kernel\nprivileges in x86-64 Linux.",
    "start": "738630",
    "end": "745140"
  },
  {
    "text": "So the way they\nachieved this was they were able to hammer a page table\nentries that pointed to the page",
    "start": "745140",
    "end": "750870"
  },
  {
    "text": "table of the program. And they induced bitflips on the\npage table entries that point to the page table\nof the program.",
    "start": "750870",
    "end": "756330"
  },
  {
    "text": "And by flipping the\nright bits, they would gain write access to the\npage table, which is essentially the protection mechanism that\nwe have in virtual memory today.",
    "start": "756330",
    "end": "763320"
  },
  {
    "text": "And once you gain write\naccess to your on page table, essentially, all bets are off. You can do anything\nto that computer.",
    "start": "763320",
    "end": "770085"
  },
  {
    "text": "And it's a beautiful paper. I recommend people to look at\nthat Google Project Zero work. Later, this became famous as the\nDRAM RowHammer vulnerability.",
    "start": "770085",
    "end": "776550"
  },
  {
    "text": "I like this written by a\nfamous hacker on Twitter. \"It's like RowHammer is like\nbreaking into an apartment",
    "start": "776550",
    "end": "782100"
  },
  {
    "text": "by repeatedly\nslamming a neighbor's door until the vibrations\nopen the door you were after\". So if you're kind of magically\nstuck in this room, don't worry.",
    "start": "782100",
    "end": "789300"
  },
  {
    "text": "Start banging on the walls. And hopefully,\nmagically, the door will open, if\nRowHammer is in effect. Was there a question, the back?",
    "start": "789300",
    "end": "795070"
  },
  {
    "text": "Yes. Excuse me, I'm Sean. If I go to my neighbor, and\nstart hammering the door,",
    "start": "795070",
    "end": "800113"
  },
  {
    "text": "they're going to come and say,\nhey, what's wrong with you? So isn't there an\neasy fix for this? I mean, there's no application\nthat's requires this.",
    "start": "800113",
    "end": "807029"
  },
  {
    "text": "So can't you just [INAUDIBLE]. Yeah. So we're going to\ntalk about solutions. Yes, we're going to\nget to the fixes.",
    "start": "807030",
    "end": "813900"
  },
  {
    "text": "It looks easy. But there's a story\nbehind this also.",
    "start": "813900",
    "end": "819130"
  },
  {
    "text": "Very good. Any other questions? OK, yes.  For-- Were they able to\ntarget specific bits,",
    "start": "819130",
    "end": "825480"
  },
  {
    "text": "like using certain patterns? Or was it [INAUDIBLE]\nuntil they got it? Well, they crafted\na special attack,",
    "start": "825480",
    "end": "831087"
  },
  {
    "text": "because this is not easy to do. So they sprayed the\nmemory with page tables so that they increase the\nprobability of the attack.",
    "start": "831088",
    "end": "836338"
  },
  {
    "text": "So in the end, it's a\nprobabilistic attack, yes. But if you attack,\nfor example, just the write enable bit in\nyour page table entry",
    "start": "836338",
    "end": "843329"
  },
  {
    "text": "that points to your on page\ntable, that's 1 out of 64 bits. The probability is very low. But if you spray the page--\nspray the memory with many page",
    "start": "843330",
    "end": "850260"
  },
  {
    "text": "tables, now you change the\npointer to a page table entry. And you actually increase\nthe probability of the attack",
    "start": "850260",
    "end": "856050"
  },
  {
    "text": "significantly. Yeah. Yeah. And then later, a lot of clever\nworks in security and suit. So these folks from\n[INAUDIBLE],, for example,",
    "start": "856050",
    "end": "862889"
  },
  {
    "text": "showed that they could gain\nunrestricted access to systems of website visitors by\ndoing this on JavaScript, which is interesting.",
    "start": "862890",
    "end": "868800"
  },
  {
    "text": "This is actually a nice\nwork from [INAUDIBLE] group, who's at ETH right now. Basically, they showed that--",
    "start": "868800",
    "end": "875370"
  },
  {
    "text": "they basically created an app. And this app was able\nto hammer your memory and take control of\nyour phone by exploiting",
    "start": "875370",
    "end": "882370"
  },
  {
    "text": "some deterministic memory\nallocation patterns. I'm not going to go through\nthese all in detail. People exploit this using GPUs.",
    "start": "882370",
    "end": "889150"
  },
  {
    "text": "People were able to do this\nusing the remote direct memory access interface\nacross the network.",
    "start": "889150",
    "end": "895310"
  },
  {
    "text": "And this is another paper\nthat talks about that. Even if you cannot take\nover another system, this paper showed that you\ncould break confidentiality.",
    "start": "895310",
    "end": "901540"
  },
  {
    "text": "By using RowHammer\nbitflips, they could read someone else's\nmemory, private memory that they should\nnot be able to read.",
    "start": "901540",
    "end": "907480"
  },
  {
    "text": "And more recently, people\nhave been also looking at bitflip attacks using\nRowHammer on neural networks.",
    "start": "907480",
    "end": "912970"
  },
  {
    "text": "In other ways otherwise nice\nneural network inference engine accelerator or CPU that's\nreasonably accurate",
    "start": "912970",
    "end": "919960"
  },
  {
    "text": "may become actually\ncompletely inaccurate, if you actually induce\nthese RowHammer bitflips. And there are a lot\nof works in this area.",
    "start": "919960",
    "end": "925930"
  },
  {
    "text": "These are some examples. And I could go on and on\nin security community. But maybe there's another\nattack to your computer.",
    "start": "925930",
    "end": "931563"
  },
  {
    "text": "Or maybe there's\nanother solution. Of course, that's a joke. So we've been writing a\nlot of papers on this.",
    "start": "931563",
    "end": "937690"
  },
  {
    "text": "I'm first going to talk about\nsome initial understanding that we've developed. And then we're going to talk\nabout what happened afterwards.",
    "start": "937690",
    "end": "943810"
  },
  {
    "text": "But feel free to ask questions. This is-- we can make\nthis more interactive. So this was the first\nRowHammer analysis.",
    "start": "943810",
    "end": "949470"
  },
  {
    "text": "And this is the\ninfrastructure that we use to actually analyze RowHammer. We tested 129 modules\nthat were manufactured",
    "start": "949470",
    "end": "955950"
  },
  {
    "text": "between those years,\nas you can see. And I'm not going to go\nthrough all of the results. I'm going to pick and\nchoose some of them.",
    "start": "955950",
    "end": "961480"
  },
  {
    "text": "This is an interesting\none, because this-- we're going to look at\nthe logical adjacency",
    "start": "961480",
    "end": "966782"
  },
  {
    "text": "of the aggressor\nand victim roles, not the physical adjacency. Logical adjacency means from the\nmemory controller's perspective,",
    "start": "966783",
    "end": "973240"
  },
  {
    "text": "where are the addresses? Is the aggressor\nadjacent to the victim? In most cases, they're one\napart, meaning they're adjacent.",
    "start": "973240",
    "end": "979990"
  },
  {
    "text": "But there are some cases\nwhere they are not adjacent. Now this means-- we\nhypothesize that this",
    "start": "979990",
    "end": "986079"
  },
  {
    "text": "is because there are some\ninternal remapping of row addresses that's going on\nin DRAM for fault tolerance reasons, for other reasons, et\ncetera, that's logically your",
    "start": "986080",
    "end": "995410"
  },
  {
    "text": "[INAUDIBLE]. Now what's the\nsignificance of this? The significance is\nthat if you actually want to implement a defense\nin the memory controller,",
    "start": "995410",
    "end": "1000918"
  },
  {
    "text": "you don't know\nwhere the rows are. You need to figure\nthis out first. So you need to reverse engineer.",
    "start": "1000918",
    "end": "1006163"
  },
  {
    "text": "Or you need to come\nup with an interface where the memory exposes the\nadjacency of the rows, which",
    "start": "1006163",
    "end": "1011295"
  },
  {
    "text": "DRAM manufacturers are, in\ngeneral, very against doing, let's say. And We can talk about that also.",
    "start": "1011295",
    "end": "1017370"
  },
  {
    "text": "So another characteristic,\nthis is actually visual chips based\non-- these are all data from real chips\nfrom our 2014 paper.",
    "start": "1017370",
    "end": "1024119"
  },
  {
    "text": "So you can say, OK, I can reduce\nthe frequency of activations to the DRAM. And I can get rid\nof this problem.",
    "start": "1024119",
    "end": "1029939"
  },
  {
    "text": "And you're absolutely right. And we wanted to test this. Basically, the way you\nactivate DRAM at the time",
    "start": "1029940",
    "end": "1035490"
  },
  {
    "text": "was every 52.5 nanoseconds,\nyou can issue an activate. If you reduce that to every\n500 nanoseconds, in the chips",
    "start": "1035490",
    "end": "1042660"
  },
  {
    "text": "we tested, you could actually\nget rid of this problem. So this is called throttling\nof the applications. This is a bad idea, if you\napply it across the board,",
    "start": "1042660",
    "end": "1049907"
  },
  {
    "text": "because this will reduce\nyour performance greatly, as you can see. And basically, these are the\nworst chips that we tested.",
    "start": "1049907",
    "end": "1057090"
  },
  {
    "text": "And these are the worst-- basically, you can actually\nget rid of all of the errors that we've seen. But remember that\nour patterns may not",
    "start": "1057090",
    "end": "1062880"
  },
  {
    "text": "be the worst at the time. So this is actually much worse. So this is not a great solution. But we're going to\nget back to this.",
    "start": "1062880",
    "end": "1068490"
  },
  {
    "text": "You can say, oh, I\ncan actually increase the refresh rate of DRAM. And this way, if I increase\nthe refresh rate to a level,",
    "start": "1068490",
    "end": "1076889"
  },
  {
    "text": "hopefully, someone will\nnot be able to activate a row enough times before the\ncells get refreshed, right.",
    "start": "1076890",
    "end": "1082830"
  },
  {
    "text": "And if you do that, yes, you\nactually get rid of the errors, as you can see. But you need to increase your\nrefresh interval-- refresh",
    "start": "1082830",
    "end": "1088860"
  },
  {
    "text": "rate by 7X. And nobody wants that,\nbecause, remember, the reason why we\nactually wanted to build our infrastructure\nwas to get rid of refreshes.",
    "start": "1088860",
    "end": "1095802"
  },
  {
    "text": "We don't want to\nadd more refreshes to actually solve this problem. But we're going to get back to\nthese refreshes, because this",
    "start": "1095802",
    "end": "1101400"
  },
  {
    "text": "is the only lever that the\nindustry had at the time to fix this problem. Data pattern is interesting\nbecause different data patterns,",
    "start": "1101400",
    "end": "1107730"
  },
  {
    "text": "because of the\ndifferent charge levels they have across the cells,\ncause different coupling capacitance across the cells.",
    "start": "1107730",
    "end": "1114000"
  },
  {
    "text": "As a result, different\ndata patterns have different implications. You can see that you get\n10X errors with the data",
    "start": "1114000",
    "end": "1120180"
  },
  {
    "text": "pattern on the right. There are other\nobservations here. I think errors are\nrepeatable is interesting",
    "start": "1120180",
    "end": "1125763"
  },
  {
    "text": "because if an error\nis repeatable, that means that you can figure\nout which bits are vulnerable. And you can create\na security attack",
    "start": "1125763",
    "end": "1132179"
  },
  {
    "text": "based on which bits\nare vulnerable. ECC is not a good\nsolution to this problem. We can get back to this.",
    "start": "1132180",
    "end": "1137880"
  },
  {
    "text": "And as I said,\ndouble-sided hammering is much worse than\nsingle-sided hammering. So I'm going to tell you\na little bit more story.",
    "start": "1137880",
    "end": "1144780"
  },
  {
    "text": "Basically, this was 2014. And as the gentleman\nover there mentioned that we thought this\nproblem would be fixed.",
    "start": "1144780",
    "end": "1151110"
  },
  {
    "text": "But it didn't get fixed. And we're going\nto talk about why. So we actually analyzed\nthis, again, in 2020.",
    "start": "1151110",
    "end": "1156572"
  },
  {
    "text": "And we show that it's\ngetting much worse. I'm going to talk about that. It has many dimensions. And there are a lot\nof interesting studies",
    "start": "1156572",
    "end": "1162510"
  },
  {
    "text": "that you can do. It affects the HBM chips as\nwell, and perhaps more so, as we-- I'm not going to\ndiscuss that in detail.",
    "start": "1162510",
    "end": "1168467"
  },
  {
    "text": "But let me jump into the\nsolutions at the time. And then we're going to talk\nabout some of these things. Any questions?",
    "start": "1168467",
    "end": "1174990"
  },
  {
    "text": "OK. So let's talk about solutions. So clearly, if you\nhave such a problem, you need to have an\nimmediate fix to the problem,",
    "start": "1174990",
    "end": "1180510"
  },
  {
    "text": "because there are all of\nthese DRAMs out there. And you need to fix them. So clearly, we have\nlimited possibilities,",
    "start": "1180510",
    "end": "1185730"
  },
  {
    "text": "because our memory controllers\nare not intelligent, let's say. But longer term, you can\nactually do a lot of things. You can change the DRAM.",
    "start": "1185730",
    "end": "1191190"
  },
  {
    "text": "You can change the\nmemory controller. You can change the software. You can change everything. We're going to talk about that. So in our paper, we\npropose both types",
    "start": "1191190",
    "end": "1197670"
  },
  {
    "text": "of solutions,\nwhich are currently implemented in many things\nin different variants.",
    "start": "1197670",
    "end": "1202770"
  },
  {
    "text": "We propose one\nsolution as the best. But it's not working today. I'm going to discuss that also. So these are some\nsolution approaches.",
    "start": "1202770",
    "end": "1208320"
  },
  {
    "text": "I'm going to say that\nrobust DRAM chips-- this is in research.",
    "start": "1208320",
    "end": "1213360"
  },
  {
    "text": "But it's very difficult\nto do this at low cost. Error correcting codes are a bad\nidea because error correcting codes are good for random errors\nwhose causes you don't know.",
    "start": "1213360",
    "end": "1222000"
  },
  {
    "text": "Here, you know\nthe cause exactly. So you can actually build a\ncircuitry to fix the problem and save your expensive error\ncorrecting codes for things",
    "start": "1222000",
    "end": "1228570"
  },
  {
    "text": "that you don't know. Increasing the refresh rate\nand also error correcting codes are difficult to do, because\nyou get actually a lot of errors",
    "start": "1228570",
    "end": "1235330"
  },
  {
    "text": "within a code word. Increasing the refresh rate\nis a bad solution today. But we're going to\ntalk about that. Physical isolation\nis interesting.",
    "start": "1235330",
    "end": "1242440"
  },
  {
    "text": "But a lot of the solutions\nactually are not secure. So the two solutions,\ntwo major solutions",
    "start": "1242440",
    "end": "1247690"
  },
  {
    "text": "that we are left\nwith today, mostly are reactive\nrefresh, meaning, you count how many activations\nyou get for a particular row,",
    "start": "1247690",
    "end": "1255970"
  },
  {
    "text": "and refresh the adjacent\nrows in some way, either probabilistically\nor deterministically, or proactively\nthrottle, meaning,",
    "start": "1255970",
    "end": "1262540"
  },
  {
    "text": "figure out which rows are\nlikely to be hammered, and proactively\nthrottle accesses so that you don't hammer\nthem more such that you",
    "start": "1262540",
    "end": "1268570"
  },
  {
    "text": "don't get a bitflip. Hopefully that makes sense. So there's a huge space in terms\nof cost, power, performance,",
    "start": "1268570",
    "end": "1274350"
  },
  {
    "text": "complexity. You can add security\nover there also, and safety in terms of\nthe trade-off space. And people have been developing\na lot of interesting solutions",
    "start": "1274350",
    "end": "1280769"
  },
  {
    "text": "in this space. I'm going to show\nyou some examples. So what did industry\ndo initially? Essentially, they increased\nthe refresh rates,",
    "start": "1280770",
    "end": "1286890"
  },
  {
    "text": "because this is\nwhat they can do. There is no other\noption, if you will. They cannot change the DRAM\nchips out in the field.",
    "start": "1286890",
    "end": "1293220"
  },
  {
    "text": "Apple is nice\nbecause they actually credit our paper over here. And they don't say how much\nthey increase the refresh rates,",
    "start": "1293220",
    "end": "1298600"
  },
  {
    "text": "probably by 2x. So you can see that they\nclose the vulnerability. But probably, they\ndidn't completely",
    "start": "1298600",
    "end": "1303960"
  },
  {
    "text": "fix the vulnerability. And it's Apple. But everybody has to\nrelease similar patches. So what was our\nsolution at the time?",
    "start": "1303960",
    "end": "1310340"
  },
  {
    "text": "The solution doesn't\nwork today, as I will show you in a little bit. But our solution was\nprobabilistic adjacent row activation.",
    "start": "1310340",
    "end": "1315740"
  },
  {
    "text": "Essentially, we change the\nmemory controller or the DRAM chip. And when the memory\ncontroller closes a row,",
    "start": "1315740",
    "end": "1321500"
  },
  {
    "text": "it activates its neighbors\nwith a very low probability. So this is a\nprobabilistic solution. And we show that you get a\nreasonably good reliability",
    "start": "1321500",
    "end": "1327530"
  },
  {
    "text": "guarantee. If you're not happy with\nthat reliability guarantee, increase the value of p. And with a reasonable\nreliability guarantee,",
    "start": "1327530",
    "end": "1334190"
  },
  {
    "text": "we show that this is\nlow power, low energy. It's stateless also. So there's a lot of advantages. I like the solution still.",
    "start": "1334190",
    "end": "1340160"
  },
  {
    "text": "But unfortunately today, it\ndoesn't work, as we will see, because the RowHammer\nthreshold has gone down",
    "start": "1340160",
    "end": "1345410"
  },
  {
    "text": "to a very low amount. So the number of activates that\nyou need to induce bitflips has gone down to levels of\n1,000 or so today, 1,000,",
    "start": "1345410",
    "end": "1353450"
  },
  {
    "text": "2,000, as I will show you. At the time we test our\nchips, it was 139,000. So this problem is\nbecoming much worse.",
    "start": "1353450",
    "end": "1359870"
  },
  {
    "text": "So this could be--\nthis sort of solution can be implemented\nin the DRAM chip or in the memory controller. I will not go into\nthe details of this.",
    "start": "1359870",
    "end": "1366510"
  },
  {
    "text": "Intel actually implemented\na version of the solution in their memory controller. This is not exactly\nhow we envisioned it.",
    "start": "1366510",
    "end": "1372034"
  },
  {
    "text": "But in the BIOS,\nfor example, you can pick your\nRowHammer solution. You can either pick hardware\nRowHammer protection or 2x refresh.",
    "start": "1372035",
    "end": "1377553"
  },
  {
    "text": "And if you have hardware\nRowHammer protection, you have another\nscreen over here where you can choose\nthe RowHammer activation",
    "start": "1377553",
    "end": "1382665"
  },
  {
    "text": "probability. Hopefully, you're not going\nto choose 1 over 2 memory activation. You're going to get a refresh,\nwhich is probably not good.",
    "start": "1382665",
    "end": "1388606"
  },
  {
    "text": "But they actually-- this\nperson actually set that to 1 over 2 the 11, that was our kind\nof recommendation in the paper.",
    "start": "1388607",
    "end": "1397090"
  },
  {
    "text": "So this is an example of\nan intelligent control. This is a slightly\nintelligent controller. As you can see, that can do\nprobabilistic activation.",
    "start": "1397090",
    "end": "1402480"
  },
  {
    "text": "I think we need a lot more\nintelligent controllers to solve the sort of issues. And here, I will mention that\nwe've been doing a lot of work",
    "start": "1402480",
    "end": "1410002"
  },
  {
    "text": "on flash memory. This is an FPGA-based\ninfrastructure, where we actually built\na lot of SSD controllers to understand the issues\nwith flash memory.",
    "start": "1410003",
    "end": "1416159"
  },
  {
    "text": "And we have these intelligent\ncontrollers in flash memory. The flash translation\nlayer in flash memory has a lot of intelligence.",
    "start": "1416160",
    "end": "1421951"
  },
  {
    "text": "It has a lot of understanding\nof the device characteristics to fix many different\ntypes of errors that are going on in flash memory.",
    "start": "1421952",
    "end": "1427710"
  },
  {
    "text": "And if you're interested,\nwe've written a paper on it some time ago. We need something like that\nin the DRAM I will argue.",
    "start": "1427710",
    "end": "1435250"
  },
  {
    "text": "So going forward, I think we\nneed to understand RowHammer. This is a research slide.",
    "start": "1435250",
    "end": "1440799"
  },
  {
    "text": "I'm going to get back\nto what has happened. But there are many\neffects that still need to be rigorously\nexamined, like aging, environmental conditions, memory\naccess patterns, the system",
    "start": "1440800",
    "end": "1448160"
  },
  {
    "text": "design [INAUDIBLE]. Without understanding, I\ndon't think we can easily solve this problem. Solving RowHammer is also\nimportant than the question",
    "start": "1448160",
    "end": "1455780"
  },
  {
    "text": "how do we solve it. I think we need flexible\nand efficient solutions, and also in field\nprogrammable solutions, because you may actually find an\neffect that you don't know of,",
    "start": "1455780",
    "end": "1463285"
  },
  {
    "text": "as we will discuss. I think Co-architecting\nSystem and Memory is important to\navoid performance and denial of service problems.",
    "start": "1463285",
    "end": "1468542"
  },
  {
    "text": "If this is too high level,\nI'd be happy to talk about in more detail. Any questions?",
    "start": "1468542",
    "end": "1473900"
  },
  {
    "text": "[INAUDIBLE] Yes, please. So, you know, of course,\nyou could go and hammer. And then you can use bitflip.",
    "start": "1473900",
    "end": "1480780"
  },
  {
    "text": "But if you just run your\nnormal applications you know, and you're not trying to\ndo anything adversarial,",
    "start": "1480780",
    "end": "1488450"
  },
  {
    "text": "then do you see\nRowHammer problems? So that's an excellent question.",
    "start": "1488450",
    "end": "1493550"
  },
  {
    "text": "So we did not try to do that. Actually, we looking\nat that right now. I think currently, it's\na lot easier to do that.",
    "start": "1493550",
    "end": "1500900"
  },
  {
    "text": "But one of the industry actually\ndiscovered this problem,",
    "start": "1500900",
    "end": "1508390"
  },
  {
    "text": "because it happened\nin a real application. And there's a nice talk from\nan Intel principal engineer",
    "start": "1508390",
    "end": "1514419"
  },
  {
    "text": "that was delivered at the\n[INAUDIBLE] this year, I don't know if it's on YouTube. I didn't put it\nonline, that basically",
    "start": "1514420",
    "end": "1521470"
  },
  {
    "text": "describes how they\ndiscovered it. So it happens in\nreal applications. For example, I'll give\nyou the basic idea",
    "start": "1521470",
    "end": "1526840"
  },
  {
    "text": "of how a real application\nmay look like. There's actually\nin this 2022 paper",
    "start": "1526840",
    "end": "1531880"
  },
  {
    "text": "from Microsoft that\nshows that there's a coherence-induced hammering. Essentially, if you\nhave a cache block",
    "start": "1531880",
    "end": "1538240"
  },
  {
    "text": "that many processes\nare trying to access, and that's non-cacheable,\nthat's in memory, you cause a lot of\nrow buffer conflicts",
    "start": "1538240",
    "end": "1544690"
  },
  {
    "text": "in that particular cache block,\nbecause there's some contention, memory contention. And as a result,\nyou may actually",
    "start": "1544690",
    "end": "1550720"
  },
  {
    "text": "get a bitflip in\na real application without someone trying to\ndo this maliciously, which",
    "start": "1550720",
    "end": "1558309"
  },
  {
    "text": "is scary, I think, because as\nRowHammer threshold goes down, the probability of that\nincreases in existing systems.",
    "start": "1558310",
    "end": "1564220"
  },
  {
    "text": "Yes. So setting aside like the other\nchallenges and complications with memories that are not\ncharged with [INAUDIBLE] you",
    "start": "1564220",
    "end": "1572595"
  },
  {
    "text": "know, if you were\nto just use those, does that automatically\nsolve every problem? Or are still things that come up\n[INAUDIBLE] like are you getting",
    "start": "1572595",
    "end": "1579662"
  },
  {
    "text": "interfered with-- Yeah, I mean, so, any\nscaled memory will",
    "start": "1579662",
    "end": "1585200"
  },
  {
    "text": "have some sort of\nreliability issue, and will have some sort\nof disturbance issue. And it will get to some level.",
    "start": "1585200",
    "end": "1591440"
  },
  {
    "text": "For example, flash memory. Well, flash memory\nis charge-based. OK, maybe it doesn't\nanswer your question. But flash memory has\nactually even worse read",
    "start": "1591440",
    "end": "1597005"
  },
  {
    "text": "disturbance issues. But people have shown that\nin STT-MRAM, for example, you have RowHammer. There are papers that\nare written on that.",
    "start": "1597005",
    "end": "1603090"
  },
  {
    "text": "They call it RowHammer. But it's a some sort of\nread disturbance issue. So I don't believe\nthat any memory is immune to this\nproblem at this point.",
    "start": "1603090",
    "end": "1612060"
  },
  {
    "text": "Yeah, these are great questions. So what happened basically? So Intel actually\nhad this solution.",
    "start": "1612060",
    "end": "1620490"
  },
  {
    "text": "But Intel turned\noff the solution because DRAM manufacturers in\naround 2018, '17 through '19",
    "start": "1620490",
    "end": "1626910"
  },
  {
    "text": "claimed that they\nactually solved RowHammer. They basically said, OK, our\nDDR4 chips are RowHammer free. You don't need to have these\nsolutions in your memory",
    "start": "1626910",
    "end": "1633690"
  },
  {
    "text": "controller. And that's essentially\nwhat happened. And we questioned that. So we actually did\nmultiple works that",
    "start": "1633690",
    "end": "1639750"
  },
  {
    "text": "tried to understand RowHammer. One of them is\nmore device level. We're trying to understand\nRowHammer by turning off all of the solutions.",
    "start": "1639750",
    "end": "1645552"
  },
  {
    "text": "I'm going to give\nyou the key idea. Basically, we tested a lot\nmore chips than we did in 2014. We found out that newer\nDRAM chips are much more",
    "start": "1645552",
    "end": "1652490"
  },
  {
    "text": "vulnerable to RowHammer. We get more bitflips that\nare happening earlier. And there are new chips\nwhose weaker cells",
    "start": "1652490",
    "end": "1657870"
  },
  {
    "text": "fail after only 4800 hammers. So this number was 139,000\nearlier, as I mentioned.",
    "start": "1657870",
    "end": "1663900"
  },
  {
    "text": "And essentially, existing\nmitigation mechanisms are not effective. Let me give you-- basically,\nwe test a lot of chips from a lot of\ndifferent generations,",
    "start": "1663900",
    "end": "1669780"
  },
  {
    "text": "building a lot\nmore infrastructure than I mentioned earlier. Let me give you one\nexample over here.",
    "start": "1669780",
    "end": "1674860"
  },
  {
    "text": "This picture shows hammer\ncount, which is the number of-- sorry, number of\nactivations or hammers",
    "start": "1674860",
    "end": "1680590"
  },
  {
    "text": "that you need to do to\ninduce the first bitflip. And on the y-axis, you have\nthe RowHammer bitflip rate.",
    "start": "1680590",
    "end": "1686559"
  },
  {
    "text": "And these are data\ngenerated from DDR4-old. As you can see, when\nyou go to the new chips,",
    "start": "1686560",
    "end": "1692740"
  },
  {
    "text": "this curve shifts to\nthe left and goes up, meaning that you can\ninduce a bitflips earlier, and you can induce\nmore bitflips.",
    "start": "1692740",
    "end": "1698822"
  },
  {
    "text": "And that's consistent\nacross all manufacturers, as you can see over here,\nand many technologies also.",
    "start": "1698822",
    "end": "1704440"
  },
  {
    "text": "How do the mitigation\nmechanisms fare? These are simulation results. And again, we see the\nsame on the x-axis.",
    "start": "1704440",
    "end": "1711059"
  },
  {
    "text": "This is the number of hammers\nrequired in just the first row bitflip. We're marching from left\nto right, as you can see.",
    "start": "1711060",
    "end": "1716409"
  },
  {
    "text": "This is 100 right here. And this is what we tested\nas the lowest, about 4800, I believe.",
    "start": "1716410",
    "end": "1722020"
  },
  {
    "text": "But as you can see, we're\nmarching from left to right. So increasing the refresh\nrate is a terrible solution. On the y-axis, you see\nnormalized system performance.",
    "start": "1722020",
    "end": "1728770"
  },
  {
    "text": "Your system performance\ntanks, as you can see. Probabilistic adjacent\nrow activation, if you want to get rid of every\nsingle bitflip, at some point,",
    "start": "1728770",
    "end": "1735790"
  },
  {
    "text": "it becomes a terrible solution,\nas you can see over here. So ideal mechanism is not bad.",
    "start": "1735790",
    "end": "1741170"
  },
  {
    "text": "And this is by some\ndefinition of ideal. Actually, a really ideal\nmechanism would be even better. But we are far from ideal\nover here, as you can see.",
    "start": "1741170",
    "end": "1748970"
  },
  {
    "text": "So this paper show that there's\na lot more to do essentially. We also studied new\nRowHammer characteristics.",
    "start": "1748970",
    "end": "1754929"
  },
  {
    "text": "There are many\ndimensions over here. Understanding this problem is\nactually quite fascinating, I think. We wanted to understand the\nrelationship with temperature,",
    "start": "1754930",
    "end": "1761247"
  },
  {
    "text": "and aggressive proactive\ntime, and spatial locality of the errors like\nvictim cells physical location.",
    "start": "1761247",
    "end": "1766720"
  },
  {
    "text": "And we found out some\ninteresting things with our study. We found out that there\nis no easy relationship",
    "start": "1766720",
    "end": "1772670"
  },
  {
    "text": "between RowHammer\nvulnerability and temperature. Different cells have\ndifferent vulnerabilities. This is very different\nfrom retention.",
    "start": "1772670",
    "end": "1777760"
  },
  {
    "text": "This very different\nfrom what I'm going to show you later, also. If the aggressor was\nactive for a longer time, you get actually more bitflips.",
    "start": "1777760",
    "end": "1783850"
  },
  {
    "text": "We're going to delve\ninto that more. And there's a lot of\nspatial variance, variation in terms of errors. In certain physical\nregions of the DRAM,",
    "start": "1783850",
    "end": "1790570"
  },
  {
    "text": "you actually get\na lot more errors. So all of these\nobservations actually can be used to build better\ndefenses and better attacks.",
    "start": "1790570",
    "end": "1797560"
  },
  {
    "text": "I'll give you one example. I'm going to talk about this\nlater on a little bit more. Yes, please. ",
    "start": "1797560",
    "end": "1806860"
  },
  {
    "text": "Yeah.  We're going to get to that. We're going to get to that.",
    "start": "1806860",
    "end": "1813190"
  },
  {
    "text": "I'm keeping the suspense here. ",
    "start": "1813190",
    "end": "1818410"
  },
  {
    "text": "Sure.  No, none of them was\nprovided to the public.",
    "start": "1818410",
    "end": "1824160"
  },
  {
    "text": "Yeah, basically. But we know what they did,\nbecause we can reverse engineer DRAM chips. And that's essentially what\nwe did in the next work",
    "start": "1824160",
    "end": "1830605"
  },
  {
    "text": "that I'm going to discuss. So basically, this\nis an example. If you actually keep the row\nactive for a longer time,",
    "start": "1830605",
    "end": "1836700"
  },
  {
    "text": "you can reduce the activation\ncount to induce bitflips. And if your RowHammer defense\nis configured in such a way",
    "start": "1836700",
    "end": "1843140"
  },
  {
    "text": "to not take into\naccount this one, you can actually get bitflips\nin a chip with a defense.",
    "start": "1843140",
    "end": "1849620"
  },
  {
    "text": "Spatial variation\nis interesting. We have a paper coming\nup that takes advantage of the spatial variation. So you can see that\n10% of the DRAM chips",
    "start": "1849620",
    "end": "1856580"
  },
  {
    "text": "are a lot more vulnerable than\nthe rest of the 90% of the DRAM chips in general. It's a ballpark. And you can take\nadvantage of that",
    "start": "1856580",
    "end": "1862250"
  },
  {
    "text": "to build a defense improvement. And I'm not going to\ntalk about temperature. If you're interested, you\ncan take a look at it. So we did a lot more analysis.",
    "start": "1862250",
    "end": "1868310"
  },
  {
    "text": "I'm not going to bore you\nwith wordline voltage. This is actually\nfascinating to me, because it's a voltage issue. And we actually built a lot more\ninfrastructure to test voltage,",
    "start": "1868310",
    "end": "1875870"
  },
  {
    "text": "change the wordline voltage. And you can say that-- you can intuitively say that if\nyou reduce the wordline voltage,",
    "start": "1875870",
    "end": "1881960"
  },
  {
    "text": "you would reduce the\nvulnerability because you're not causing a lot more disturbance--\nyou're causing less disturbance. And that's true.",
    "start": "1881960",
    "end": "1887330"
  },
  {
    "text": "But unfortunately, reducing\nthe wordline voltage is not great for\ndata retention time and also activation latency.",
    "start": "1887330",
    "end": "1892410"
  },
  {
    "text": "So you're in a tough\ntrade-off space over here. So there are no easy,\nlet's say, fixes",
    "start": "1892410",
    "end": "1897450"
  },
  {
    "text": "that you can do by playing\nwith voltage, for example. And HBM chips, talk\nto me about it.",
    "start": "1897450",
    "end": "1902610"
  },
  {
    "text": "I'd be happy to talk about it. This actually-- the\nHBM chips are just as vulnerable as any\nother chip essentially.",
    "start": "1902610",
    "end": "1909947"
  },
  {
    "text": "Now let me talk about\nwhat the industry did. Industry basically\nintroduced this TRR solution. It's called target row refresh.",
    "start": "1909947",
    "end": "1916220"
  },
  {
    "text": "It's documented in\nthe DDR4 standard. But it doesn't say what is done. Basically, memory controller\nsomehow or the chip",
    "start": "1916220",
    "end": "1923630"
  },
  {
    "text": "itself does some\ntarget row refresh. It's very nebulous. We wanted to understand\nwhat this is, essentially.",
    "start": "1923630",
    "end": "1929690"
  },
  {
    "text": "Basically, we want-- we\nessentially refuted this claim that TRR-protected DRAM chips\nare vulnerable to RowHammer.",
    "start": "1929690",
    "end": "1936710"
  },
  {
    "text": "And to be able to do\nthat, we introduced a new type of attack that's\ncalled many-sided RowHammer",
    "start": "1936710",
    "end": "1941850"
  },
  {
    "text": "attack. Remember that actually\nwithout any solution, double-sided RowHammer\nshould be one of the worst",
    "start": "1941850",
    "end": "1949429"
  },
  {
    "text": "type of RowHammer attacks. But if there's a solution\ninside the DRAM chip that keeps track of how many\ntimes you activate the row,",
    "start": "1949430",
    "end": "1956570"
  },
  {
    "text": "and refreshes adjacent rows,\nthat was our hypothesis, you can overflow those\ntables that are inside",
    "start": "1956570",
    "end": "1962409"
  },
  {
    "text": "the DRAM chip that\nkeeps track of the rows by actually hammering many\nrows, instead of just hammering one or two rows.",
    "start": "1962410",
    "end": "1967665"
  },
  {
    "text": "And we were able to\ndo that, basically. We were able to bypass those\nTRR mitigations by overflowing those tables internally.",
    "start": "1967665",
    "end": "1973483"
  },
  {
    "text": "Essentially to be\nable to do that, we need to use our\nFPGA-based infrastructure to reverse engineer what was\nhappening inside the DRAM chips",
    "start": "1973483",
    "end": "1979790"
  },
  {
    "text": "and also the memory controllers. And we provide an automatic\ntool that actually created",
    "start": "1979790",
    "end": "1985750"
  },
  {
    "text": "these many-sided RowHammer\nattacks in DDR4 and pTRR chips that were thought to\nbe not vulnerable. So this is an example\nof a many-sided attack.",
    "start": "1985750",
    "end": "1992530"
  },
  {
    "text": "Red arrows are the\naggressors rows. Blue rows are the victim\nrows, as you can see. So this is a double-sided,\nthree-sided attack,",
    "start": "1992530",
    "end": "2001020"
  },
  {
    "text": "four-side attack. And you can see that even\nthough we don't get bitflips with one or two\nside attacks, we can",
    "start": "2001020",
    "end": "2006810"
  },
  {
    "text": "get bitflips in this particular\nmodule after five-sided attacks, in this particular case,\nnine-sided attacks, et cetera.",
    "start": "2006810",
    "end": "2014770"
  },
  {
    "text": "And we were able to induce\nbitflips in 30% of the modules from all three major\nmanufacturers, as you can see. In some cases, the most\neffective attacks were 19 sided.",
    "start": "2014770",
    "end": "2022163"
  },
  {
    "text": "Clearly, there is a\ntrade off over here. If you increase the number of\nrows that you're hammering, you have fewer\nnumber of activations",
    "start": "2022163",
    "end": "2028510"
  },
  {
    "text": "that you can do in all of those\nrows within a refresh interval. So it's not-- you won't get\nan easy curve over here.",
    "start": "2028510",
    "end": "2033970"
  },
  {
    "text": "So I did see that. So what percentage of\nbits have a [INAUDIBLE]??",
    "start": "2033970",
    "end": "2040660"
  },
  {
    "text": "A lot, actually. It's actually-- like we\nwere able to induce bitflips",
    "start": "2040660",
    "end": "2049090"
  },
  {
    "text": "in 99% of the bits after you\nbypass all these mitigations.",
    "start": "2049090",
    "end": "2055888"
  },
  {
    "text": "This is not the latest work. No, I understand. Yeah. Sure. [INAUDIBLE] eventually know\nlike whatever reasonable refresh",
    "start": "2055889",
    "end": "2068219"
  },
  {
    "text": "and stuff like that, and you\nknow what person [INAUDIBLE].. I mean, I don't know\nthe exact percentage. It depends on the manufacturer.",
    "start": "2068219",
    "end": "2074461"
  },
  {
    "text": "But I believe, OK, 99% of\nthe rows, you can induce.",
    "start": "2074462",
    "end": "2079530"
  },
  {
    "text": "I don't know the\nexact bit count. [INAUDIBLE] Sure. [INAUDIBLE] that they're\nnot testing [INAUDIBLE] very",
    "start": "2079530",
    "end": "2091260"
  },
  {
    "text": "expensive, of\ncourse, is variable like depending on like\nuplink and stuff like that.",
    "start": "2091260",
    "end": "2099225"
  },
  {
    "text": "So that's why I was asking. It's a very costly test. I agree. Yeah, extremely costly. Not everybody does it.",
    "start": "2099225",
    "end": "2104440"
  },
  {
    "text": "Yeah. Yeah, especially if you\ninclude all of those dimensions that we talked about, yeah. Yeah, I agree with you.",
    "start": "2104440",
    "end": "2111752"
  },
  {
    "text": "So we showed that this attack\nworks on mobile phones. And different types\nof attacks can be actually induced\nin chips that are",
    "start": "2111752",
    "end": "2118369"
  },
  {
    "text": "claimed to be not vulnerable. So this is the\nsummary basically. I already mentioned\nall of these, I think.",
    "start": "2118370",
    "end": "2123790"
  },
  {
    "text": "So these results were actually\njust scratching the surface. Our tool was not exhaustive. And we basically\nsaid that there's a lot more room for uncovering\nmore vulnerable chips in phones.",
    "start": "2123790",
    "end": "2131440"
  },
  {
    "text": "And we did that next. I will describe. But what did the\nindustry do as a result? Basically, our key\ntakeaways was RowHammer",
    "start": "2131440",
    "end": "2137560"
  },
  {
    "text": "is still an open problem. And we argued that\nsecurity by obscurity is likely not a good solution. I still believe that.",
    "start": "2137560",
    "end": "2142780"
  },
  {
    "text": "And industry is still\ngoing through the security by obscurity path. And we're going to talk about\nthe state of the art solutions",
    "start": "2142780",
    "end": "2148130"
  },
  {
    "text": "that are being implemented. So based on these\ntwo works mainly, JEDEC actually\nfinally commit based",
    "start": "2148130",
    "end": "2155320"
  },
  {
    "text": "on also the push from Microsoft,\nGoogle, these hyperscalers, they basically convened\nthe RowHammer group again,",
    "start": "2155320",
    "end": "2161260"
  },
  {
    "text": "let's say. And they basically pushed\nout these two white papers. If you're interested, you\ncan take a look at them. Some of them are hard to read.",
    "start": "2161260",
    "end": "2167160"
  },
  {
    "text": "But they at least start\nworking on the problem more seriously than before. What we did later was actually\nuncovered essentially what",
    "start": "2167160",
    "end": "2174609"
  },
  {
    "text": "was going on in the DRAM chip. I will not go into\nthe details of this. This is actually\nvery interesting. We were able to use the data\nretention failures as a side",
    "start": "2174610",
    "end": "2182090"
  },
  {
    "text": "channel to detect when a row\nwas refreshed by a DRAM chip internally. If you can actually profile\nthe retention times of the DRAM",
    "start": "2182090",
    "end": "2187668"
  },
  {
    "text": "rows, you know exactly when a\nDRAM row should lose its value. But if it doesn't\nlose its value,",
    "start": "2187668",
    "end": "2193212"
  },
  {
    "text": "then somebody must be\nrefreshing it internally. And by using the\nside channel, we figured out exactly how these\ninternal DRAM mitigation",
    "start": "2193212",
    "end": "2199340"
  },
  {
    "text": "mechanisms were working. This is the beauty of\nretention and refresh. And you can see there's a--",
    "start": "2199340",
    "end": "2204830"
  },
  {
    "text": "[INAUDIBLE] table over here. But different manufacturers\nuse different mechanisms. Like in Samsung, they use\ncounter-based mechanisms.",
    "start": "2204830",
    "end": "2211970"
  },
  {
    "text": "Their capacity\ndifference is per bank. And they do a lot of\ninteresting things. But we were able to bypass\nall of the mitigation in all",
    "start": "2211970",
    "end": "2217940"
  },
  {
    "text": "of the chip that we tested. And we showed that\nyou could actually get up to seven\nRowHammer bitflips in an eight-bit data word.",
    "start": "2217940",
    "end": "2223880"
  },
  {
    "text": "And this was the number\nthat was quoting. 99.9% of rows in a DRAM bank\nexperienced at least one",
    "start": "2223880",
    "end": "2229940"
  },
  {
    "text": "RowHammer bitflip. But I have to get you\nthe number of percentage across the entire DRAM chip. [INAUDIBLE] it would\nhave [INAUDIBLE]..",
    "start": "2229940",
    "end": "2237578"
  },
  {
    "text": " That's true. We have-- actually, I\nhave this over here.",
    "start": "2237578",
    "end": "2244140"
  },
  {
    "text": "This is the\ndistribution over here. Yeah. But a large percentage may\nstill have a reasonable number.",
    "start": "2244140",
    "end": "2250140"
  },
  {
    "text": "So ECC is at least not a\ncost-effective solution. Of course, you can make\nyour ECC very strong. But that's very expensive also.",
    "start": "2250140",
    "end": "2255962"
  },
  {
    "text": "Or checksum [INAUDIBLE] That's true, checksum. But that could also be-- yeah. [INAUDIBLE]",
    "start": "2255962",
    "end": "2261660"
  },
  {
    "text": "Yeah, yes. It won't correct. It won't correct. But it can detect. [INAUDIBLE] I agree.",
    "start": "2261660",
    "end": "2266970"
  },
  {
    "text": "I agree. But we want to-- I think-- maybe we'll\nget-- yeah, sure. We want to get rid of all\nof these bitflips, right?",
    "start": "2266970",
    "end": "2273120"
  },
  {
    "text": "We don't want to\nhave any corruption. So industry was also working\non it, which is interesting.",
    "start": "2273120",
    "end": "2280180"
  },
  {
    "text": "Microsoft did a lot\nof work on this topic. But Google introduced a\nvery interesting attack. They call this the health devil. There are a lot of interesting\ninternal mechanisms.",
    "start": "2280180",
    "end": "2287300"
  },
  {
    "text": "But they basically showed that\nyou can have a far aggressor, this is a far aggressor,\nthis bold, red one.",
    "start": "2287300",
    "end": "2295940"
  },
  {
    "text": "And if you hammer\nthat many times, and if you hammer a near\naggressor very little times, you get errors in this victim.",
    "start": "2295940",
    "end": "2302330"
  },
  {
    "text": "Now this may not sound\nthat interesting. But it's actually\nvery interesting, because this makes the defense\nmechanism an attack itself.",
    "start": "2302330",
    "end": "2310119"
  },
  {
    "text": "Why? Because if you're hammering\nthe far aggressor, the defense mechanism would be\nrefreshing the near aggressor.",
    "start": "2310120",
    "end": "2315570"
  },
  {
    "text": "And the defense mechanism itself\nwould be working as an attack. So that's the\nproblem, basically. That's why this is so\nfascinating, I think.",
    "start": "2315570",
    "end": "2322838"
  },
  {
    "text": "So your defense mechanism needs\nto take into account this one also going into the future. So I'm going to talk about\ndefense mechanisms a little bit,",
    "start": "2322838",
    "end": "2329490"
  },
  {
    "text": "a little bit more about\nintelligent memory controller. I'm going to give\nyou another idea that doesn't scale very well, even\nthough we came up with it.",
    "start": "2329490",
    "end": "2335640"
  },
  {
    "text": "Our goal was to actually\nscale with worsening RowHammer vulnerability, and be compatible\nwith existing commodity DRAM",
    "start": "2335640",
    "end": "2341010"
  },
  {
    "text": "chips without changing any of\nthe interface or the chips. And the idea over here, I\nthink it has merit still.",
    "start": "2341010",
    "end": "2346349"
  },
  {
    "text": "But it needs to work. It needs to be\nmade more scalable. Essentially, we use\narea-efficient bloom filters",
    "start": "2346350",
    "end": "2352559"
  },
  {
    "text": "in the memory controller to\ndetect potential aggressor rows. And we selectively throttle\naccesses to those rows",
    "start": "2352560",
    "end": "2361127"
  },
  {
    "text": "such that bitflips do not occur. You can prove the security\nproperties of this. And one of the benefits\nof this sort of detection",
    "start": "2361127",
    "end": "2367042"
  },
  {
    "text": "is you can optionally inform the\nsystem software about the attack also. So this works if your RowHammer\nthreshold goes down to 1,000,",
    "start": "2367042",
    "end": "2375640"
  },
  {
    "text": "meaning 1,000 activations\ncan go a bitflip. But if it goes below,\nwhich is the regime we're going towards\ntoday, the solution",
    "start": "2375640",
    "end": "2382060"
  },
  {
    "text": "actually has higher overheads. So this is another example\nof an intelligent memory controller, I believe, that\nwe need to be building.",
    "start": "2382060",
    "end": "2389910"
  },
  {
    "text": "So we're going we go\nback to these solutions. What did the\nindustry do finally? So this is from February 2023.",
    "start": "2389910",
    "end": "2396450"
  },
  {
    "text": "Finally, a major\nDRAM manufacturer had acknowledged the\nproblem by writing a paper about it, the ISSCC.",
    "start": "2396450",
    "end": "2401549"
  },
  {
    "text": "And they talk about their\nsolutions as SK Hynix. And they essentially\nimplemented a lot of the variants of\nthe ideas that were",
    "start": "2401550",
    "end": "2407760"
  },
  {
    "text": "disclosed in prior research. What they did was they actually\nmodified the DRAM chip. This was something that nobody\nthought people would do.",
    "start": "2407760",
    "end": "2415200"
  },
  {
    "text": "But they actually\nadded counting cells. Essentially, for every\nrow, they added a cell to count how many\nactivations there was.",
    "start": "2415200",
    "end": "2421337"
  },
  {
    "text": "And there's a small memory\ncontroller inside there that refreshes adjacent rows. They don't talk about the\ndetails of their mechanism.",
    "start": "2421337",
    "end": "2427680"
  },
  {
    "text": "But they say that they reduced\nthe RowHammer vulnerability to 7%, whatever that means. We don't know if that's true.",
    "start": "2427680",
    "end": "2433920"
  },
  {
    "text": "That remains to be\nof course examined. But this is a step in the\nright direction, in my opinion.",
    "start": "2433920",
    "end": "2439290"
  },
  {
    "text": "But I believe that current\nDRAM interfaces do not allow this to be nice, let's say. We're going to talk about that.",
    "start": "2439290",
    "end": "2445230"
  },
  {
    "text": "Of course, Samsung after they\nsaw SK Hynix's paper, and ISSCC, they had to put a\npaper on Archive that",
    "start": "2445230",
    "end": "2450272"
  },
  {
    "text": "talks about their mechanisms. Their mechanisms are also an\napproximate counting-based mechanism, which is\nalso interesting.",
    "start": "2450272",
    "end": "2455587"
  },
  {
    "text": "This is very hard to read. But you can take a look at it. So the question is, of course,\nare we now RowHammer free?",
    "start": "2455587",
    "end": "2460917"
  },
  {
    "text": "I'm not going to\nanswer that question. But I'm going to answer\nsomething that says maybe we have other things to worry about\nalso, in addition to RowHammer.",
    "start": "2460917",
    "end": "2469190"
  },
  {
    "text": "Any questions so far? So I'm going to\ntalk about RowPress. This is something that we\ndemonstrated at this ISCA.",
    "start": "2469190",
    "end": "2476060"
  },
  {
    "text": "This is another read disturbance\nphenomenon that caused bitflips in real DRAM chips. And it's actually different from\nthe RowHammer vulnerability.",
    "start": "2476060",
    "end": "2482562"
  },
  {
    "text": "But it amplifies\nRowHammer vulnerability. And we demonstrate\non real DRAM chips, and also using a\nuser-level program,",
    "start": "2482562",
    "end": "2488390"
  },
  {
    "text": "we demonstrate the proof\nof concept, let's say. We provide some solutions also. So what's the problem?",
    "start": "2488390",
    "end": "2493519"
  },
  {
    "text": "Basically, I mentioned\nto you earlier that keeping a DRAM row\nopen for a long time cause bitflips in adjacent rows.",
    "start": "2493520",
    "end": "2498800"
  },
  {
    "text": "But in this particular\ncase, we kept the DRAM row open for much longer. And we saw actually\nvery few activations",
    "start": "2498800",
    "end": "2506610"
  },
  {
    "text": "are needed to cause bitflips. In some extreme cases where you\nviolate the timing parameters,",
    "start": "2506610",
    "end": "2511750"
  },
  {
    "text": "only one activation is enough. This is fascinating to me,\nbecause you essentially activate one row, and you\nwait for 30 milliseconds,",
    "start": "2511750",
    "end": "2517740"
  },
  {
    "text": "charge gets depleted in\nanother row, adjacent row. Clearly, this is\nviolating parameters.",
    "start": "2517740",
    "end": "2523590"
  },
  {
    "text": "But it's still interesting\nfrom a device perspective. So basically, why did\nwe want to look at this?",
    "start": "2523590",
    "end": "2529650"
  },
  {
    "text": "Essentially, if you\nhave a solution that looks like this, that doesn't\nrely on a high activation count,",
    "start": "2529650",
    "end": "2537030"
  },
  {
    "text": "you can bypass it with\nthis sort of mechanism. This is my student's drawing. I like that one.",
    "start": "2537030",
    "end": "2542400"
  },
  {
    "text": "But basically instead of relying\non a high activation count, like RowHammer\nattacks used to do,",
    "start": "2542400",
    "end": "2547620"
  },
  {
    "text": "this is the minimum row open\ntime that you can have in DRAM,",
    "start": "2547620",
    "end": "2553230"
  },
  {
    "text": "just keep the row open\nfor a longer time, which increases the disturbance that\nhappens to the adjacent row.",
    "start": "2553230",
    "end": "2558240"
  },
  {
    "text": "Then you need very few\nactivations, essentially. That's the idea. And these are real numbers\nfrom one particular chip.",
    "start": "2558240",
    "end": "2564849"
  },
  {
    "text": "And we, of course, amplified\nour infrastructure to test this. And at this point,\nwe're actually releasing the names\nof the manufacturers.",
    "start": "2564850",
    "end": "2571220"
  },
  {
    "text": "At some point, we were not. But I think people can replicate\nour results much better.",
    "start": "2571220",
    "end": "2576700"
  },
  {
    "text": "So essentially, there are two\nkey conclusions that we have. RowPress significantly\namplifies vulnerability to read disturbance.",
    "start": "2576700",
    "end": "2582460"
  },
  {
    "text": "And it has a different\nunderlying mechanism than RowHammer. So these are results\nfrom real chips.",
    "start": "2582460",
    "end": "2588780"
  },
  {
    "text": "This is the RowHammer\ndomain, let's say. You keep the row open\nonly for 36 nanoseconds.",
    "start": "2588780",
    "end": "2594330"
  },
  {
    "text": "This is where you keep the row\nopen for 7.8 microseconds, which is allowed by the standard. You keep the row open by 70.2\nmicroseconds, which is also",
    "start": "2594330",
    "end": "2601772"
  },
  {
    "text": "allowed by the standard, if\nyou actually push the refreshes or pull the refreshes early. You can see that there\nis a clear reduction",
    "start": "2601772",
    "end": "2607650"
  },
  {
    "text": "in the number of activations\nthat you need to do to induce the first bitflip. At 30 milliseconds,\nall of the chips, well, yeah, essentially, all of\nthe chips from all manufacturers",
    "start": "2607650",
    "end": "2616019"
  },
  {
    "text": "get bitflips. So this is the number basically. You reduce your activation count\nby 1 to 2 orders of magnitude.",
    "start": "2616020",
    "end": "2622040"
  },
  {
    "text": "Interestingly, this\nphenomenon gets much worse as temperature increases. This also indicates that this\nis different from RowHammer,",
    "start": "2622040",
    "end": "2628207"
  },
  {
    "text": "the underlying\ndisturbance mechanism. And a different set\nof cells actually get corrupt compared\nto RowHammer.",
    "start": "2628207",
    "end": "2634820"
  },
  {
    "text": "And there are\ndifferences in terms of access patterns and\ntemperature changes, as our paper discussed. I'm not going to go into\nall of these details",
    "start": "2634820",
    "end": "2641585"
  },
  {
    "text": "since we don't have time. So we also developed\na proof of concept using an Intel Comet Lake\nprocessor and a real module that",
    "start": "2641585",
    "end": "2647530"
  },
  {
    "text": "has RowHammer protection. And basically,\nour hypothesis was we could keep the row open\nby accessing the cache",
    "start": "2647530",
    "end": "2655300"
  },
  {
    "text": "blocks in the same\nrow using a program. And the memory controller would\nhopefully keep the row open.",
    "start": "2655300",
    "end": "2661420"
  },
  {
    "text": "Existing memory\ncontrollers, most of them have adaptive row open policies. If you keep accessing the\ncache blocks in the same row,",
    "start": "2661420",
    "end": "2667150"
  },
  {
    "text": "they keep the row\nopen, because they want to improve row buffer locality. And that's what we\ndid essentially.",
    "start": "2667150",
    "end": "2672280"
  },
  {
    "text": "Of course, you need\nto-- this program is a bit more\ncomplicated than this, because you need to synchronize\nwith refreshes, et cetera.",
    "start": "2672280",
    "end": "2677337"
  },
  {
    "text": "But we varied this\nparameter number of bits that essentially changes\nthe number of cache blocks that you access in a row.",
    "start": "2677337",
    "end": "2683320"
  },
  {
    "text": "And with the RowHammer,\nclassic RowHammer, we don't see bitflips. But as you increase the\nnumber of cache block reads,",
    "start": "2683320",
    "end": "2690547"
  },
  {
    "text": "you start seeing bitflips.  And there's clearly,\na trade off.",
    "start": "2690547",
    "end": "2695550"
  },
  {
    "text": "After at some point, if you\nactually read too many cache blocks, you cannot hammer\nthe rows enough times. That's why those bitflips\ngo to zero after some point.",
    "start": "2695550",
    "end": "2703658"
  },
  {
    "text": "So how do you fix this problem? So clearly, you can fix it\nby adapting the RowHammer mitigations. And that was our proposal.",
    "start": "2703658",
    "end": "2709420"
  },
  {
    "text": "There are other fixes\nthat you can discuss, like changing the DRAM,\net-cetera, that we also discuss in the paper. But I'm not going\nto discuss here.",
    "start": "2709420",
    "end": "2715480"
  },
  {
    "text": "But if you already have a\nRowHammer mitigation in place, the key idea here is to limit\nthe maximum row open time first.",
    "start": "2715480",
    "end": "2721540"
  },
  {
    "text": "Don't make it infinite\nor 70.2 microseconds. Make it something\nsmall so that you can exploit some row\nbuffer locality, at least,",
    "start": "2721540",
    "end": "2727750"
  },
  {
    "text": "for performance. But configure the\nRowHammer mitigation, basically, RowHammer\nmitigation kicks in",
    "start": "2727750",
    "end": "2733660"
  },
  {
    "text": "based on some\nRowHammer threshold, so that you can actually account\nfor the reduction in activation",
    "start": "2733660",
    "end": "2739510"
  },
  {
    "text": "count that leads\nto a bitflip such that RowHammer mitigation\nkicks in earlier, if you",
    "start": "2739510",
    "end": "2744790"
  },
  {
    "text": "keep the row open longer. That's the idea over here. And that picture kind\nof summarized it. Of course, with\nthis one, you get",
    "start": "2744790",
    "end": "2751660"
  },
  {
    "text": "a little bit lower robust\nfor locality exploitation. But hopefully, you're secure. Well, you can prove that\nyou're secure actually,",
    "start": "2751660",
    "end": "2757930"
  },
  {
    "text": "if you set your\nparameters right. But setting those\nparameters right, actually, is a\ndifficult part, as we will discuss a little bit more.",
    "start": "2757930",
    "end": "2764240"
  },
  {
    "text": "So we show that you can actually\ndo this with low performance overhead. But in extreme case, you can\nactually get high performance",
    "start": "2764240",
    "end": "2769820"
  },
  {
    "text": "overheads also. There's a lot more in the paper\nthat I will not talk about. But I'm happy to discuss more.",
    "start": "2769820",
    "end": "2777450"
  },
  {
    "text": "Any questions on this? Yes, please. [INAUDIBLE] I might have missed\nhow do you keep",
    "start": "2777450",
    "end": "2783150"
  },
  {
    "text": "the row open for longer from\nlike, software perspective? Or is that something you\ndid it in a control setting?",
    "start": "2783150",
    "end": "2789825"
  },
  {
    "text": "[INAUDIBLE] like\nthere are some parts of data, which would get access\nvery often, like [INAUDIBLE]..",
    "start": "2789825",
    "end": "2797790"
  },
  {
    "text": "There are other parts\ndata which are just going to take control and\nbreak out, for example. Can there be a system\nto do [INAUDIBLE]..",
    "start": "2797790",
    "end": "2805810"
  },
  {
    "text": "So yeah, people have developed\nsystem-level solutions like protecting the page\ntables, for example, or adding",
    "start": "2805810",
    "end": "2811890"
  },
  {
    "text": "more isolation. There's a paper in\n[INAUDIBLE] that's happening right now actually\nthat shows that you can partition the applications\nacross different subareas",
    "start": "2811890",
    "end": "2819213"
  },
  {
    "text": "such that they don't\ninteract with each other. Certainly, those are viable. They don't solve the, let's say,\nall of the robustness issues.",
    "start": "2819213",
    "end": "2827130"
  },
  {
    "text": "They may solve the\nsecurity issues that happen across\napplications, for example. But they may not solve the\nsafety issues, for example,",
    "start": "2827130",
    "end": "2833580"
  },
  {
    "text": "right? Yeah. Yes, please. ",
    "start": "2833580",
    "end": "2840470"
  },
  {
    "text": "So open, OK. So there's-- we can\ngo into more detail. But there's a passing\ngate effect that happens.",
    "start": "2840470",
    "end": "2846680"
  },
  {
    "text": "Essentially, it's,\nyeah, electrons get injected through\na passing gate.",
    "start": "2846680",
    "end": "2852110"
  },
  {
    "text": "Hopefully that gives\nyou at least a keyword. Yes. [INAUDIBLE] question. Every time you [INAUDIBLE] now\nwe have some magnetic effects",
    "start": "2852110",
    "end": "2860540"
  },
  {
    "text": "some conductive it must be some\ninductive effect [INAUDIBLE]..",
    "start": "2860540",
    "end": "2866280"
  },
  {
    "text": "So you're suggesting\nyou can detect this. And maybe that could\nbe a solution, or? [INAUDIBLE]",
    "start": "2866280",
    "end": "2872910"
  },
  {
    "text": "OK. So maybe we can talk about the\ndevice-level issues later on. I wanted to keep the\nabstraction level higher.",
    "start": "2872910",
    "end": "2881130"
  },
  {
    "text": "But there are a lot\nof interesting things. And people are also\nexamining this. People are trying\nto model this using TCAD simulations, et cetera.",
    "start": "2881130",
    "end": "2886797"
  },
  {
    "text": "It's not easy, essentially. But those two things\nthat I mentioned earlier,",
    "start": "2886797",
    "end": "2892640"
  },
  {
    "text": "like crosstalk and\nelectromigration, is the-- electromigration and injection\nare the two major mechanisms",
    "start": "2892640",
    "end": "2898460"
  },
  {
    "text": "that we know of that\nleads to RowHammer. RowPress is the passing\ngate effect, essentially.",
    "start": "2898460",
    "end": "2904190"
  },
  {
    "text": "[INAUDIBLE] Yes, please. I'm scratching my\nhead [INAUDIBLE]",
    "start": "2904190",
    "end": "2916010"
  },
  {
    "text": "I mean-- [INAUDIBLE] It depends on your\nperspective, right? I believe it's a huge problem.",
    "start": "2916010",
    "end": "2921040"
  },
  {
    "text": "I don't think we should have\nany bitflips in our systems. But this is also a very\ncost-sensitive part.",
    "start": "2921040",
    "end": "2928380"
  },
  {
    "text": "So anything that you do is\nincreasing your cost in the end. From the DRAM\nmanufacturer's perspective,",
    "start": "2928380",
    "end": "2933540"
  },
  {
    "text": "it's not like they're\ncompletely dragging their feet. They're trying to\nsolve the problem. But I believe they\ndon't know exactly how.",
    "start": "2933540",
    "end": "2940290"
  },
  {
    "text": "And I think all of\nthese issues that we have discussed affect them\ndirectly, for example, aging of DRAM chips, right?",
    "start": "2940290",
    "end": "2946859"
  },
  {
    "text": "I'm actually very worried\nin that DRAM chip, this could actually\nbecome much worse. That's something\nwe're working on.",
    "start": "2946860",
    "end": "2952196"
  },
  {
    "text": "So I don't think-- there are so\nmany dimensions to the problem that it's not easy to\nsolve, in my opinion.",
    "start": "2952197",
    "end": "2958163"
  },
  {
    "text": "But they did drag their\nfeet initially, I would say. Right now, I don't think\nthey're dragging their feet. But they just don't\nknow easily how.",
    "start": "2958163",
    "end": "2966100"
  },
  {
    "text": "OK. I believe there's more\nto come, by the way. So hopefully,\nwe'll discuss that. So I think these are\nthe two major directions",
    "start": "2966100",
    "end": "2972060"
  },
  {
    "text": "that I would like to bring up. I think we need to understand\nthese bitflips a lot more, and also hardware\nerrors in general. I generalize things\na little bit, aging,",
    "start": "2972060",
    "end": "2979150"
  },
  {
    "text": "environmental conditions,\nmemory access patterns, system design decisions that we\nmake, all of these are actually, I think, quite difficult. And\nwe need to understand them.",
    "start": "2979150",
    "end": "2985859"
  },
  {
    "text": "We don't understand\nsome of these. And solving is also\nimportant, I think. Flexible and efficient\nsolutions are necessary.",
    "start": "2985860",
    "end": "2991470"
  },
  {
    "text": "And I believe some\nof these solutions need to be patchable,\nreconfigurable, programmable. And I go into co-architecting\nacross the system and stack",
    "start": "2991470",
    "end": "2997830"
  },
  {
    "text": "and components. We have some minutes, I think. Feel free to think\nabout questions.",
    "start": "2997830",
    "end": "3004200"
  },
  {
    "text": "But I'm going to\nmention something. I think one of the things that\nlimits innovation in this area, and that make solutions\nharder, this also goes back",
    "start": "3004200",
    "end": "3011460"
  },
  {
    "text": "to your point, I\nthink, is the interface between DRAM and the\nmemory controller. This is a very rigid interface.",
    "start": "3011460",
    "end": "3017040"
  },
  {
    "text": "Memory controller right now\ndoes all kinds of maintenance that, I believe,\nDRAM should be doing. That's one of the reasons I\nthink the DRAM manufacturers are",
    "start": "3017040",
    "end": "3023850"
  },
  {
    "text": "not able to do a lot of\nthings, because they have very little time budget to\ndo some sort of RowHammer",
    "start": "3023850",
    "end": "3028980"
  },
  {
    "text": "mitigation, for example. So this is a paper that\nkeeps getting rejected. But I believe this\nis a good idea.",
    "start": "3028980",
    "end": "3034450"
  },
  {
    "text": "So the idea is\nbasically very simple. Give some autonomy\nto the DRAM chip",
    "start": "3034450",
    "end": "3039610"
  },
  {
    "text": "such that the DRAM chip can\ndo some things internally. We call the self-managing DRAM. And the DRAM chip at\nsome point can say,",
    "start": "3039610",
    "end": "3046210"
  },
  {
    "text": "I'm not going to\nserve as your activate because I have some much\nmore important things to do. And that's the idea. This is very little\nchange to the interface.",
    "start": "3046210",
    "end": "3053500"
  },
  {
    "text": "We have an ACT_NACK\npin essentially. Leveraging the ability\nto reject and activate, a maintenance operation\nlike RowHammer mitigation",
    "start": "3053500",
    "end": "3059619"
  },
  {
    "text": "can be implemented completely\nwithin the DRAM chip. And I believe this is a good\npartitioning of the duties,",
    "start": "3059620",
    "end": "3066100"
  },
  {
    "text": "let's say. It's not just\nRowHammer protection. You can actually do a\nDRAM refresh mitigation, a lot of the things\nthat we have discussed.",
    "start": "3066100",
    "end": "3071642"
  },
  {
    "text": "The DRAM manufacturer\ncan figure that out. And it can do variable\nrate refresh, et cetera, without modifying the\nmemory controller.",
    "start": "3071642",
    "end": "3077205"
  },
  {
    "text": "I mean, they have a memory\ncontroller internally, of course, now, memory\nscrubbing, et cetera. I'm not going to\nthe details of this.",
    "start": "3077205",
    "end": "3082930"
  },
  {
    "text": "But I believe this sort\nof interface changes are going to be important\ngoing into the future, except it's a tough area. I think those people don't want\nto spend any money on logic",
    "start": "3082930",
    "end": "3090370"
  },
  {
    "text": "gates, right? that [INAUDIBLE]? Well, I think that\nmentality is changing. It's a mindset issue. But I absolutely agree.",
    "start": "3090370",
    "end": "3096010"
  },
  {
    "text": "That mentality was\nchanging because like, they clearly introduced these\nRowHammer counting cells. So they're adding logic gates.",
    "start": "3096010",
    "end": "3101393"
  },
  {
    "text": "They're actually\nexperimenting with processing in memory mechanisms. So I believe that\nmentality will change.",
    "start": "3101393",
    "end": "3106790"
  },
  {
    "text": "I believe they need to change\nthe business model slightly. We need to get out of this\nmemory being commodity.",
    "start": "3106790",
    "end": "3112940"
  },
  {
    "text": "And once they change\nthat business model, then I think they can justify a\nlot more of those logic gates.",
    "start": "3112940",
    "end": "3118099"
  },
  {
    "text": "And maybe we'll have a\nmuch better, let's say, system going into the future. Yes, please. [INAUDIBLE] proposal\nfor between that",
    "start": "3118100",
    "end": "3124040"
  },
  {
    "text": "and that is there a possibility\nof denial of service attacks, because if someone exploits\nthe DRAM or whatever that kind",
    "start": "3124040",
    "end": "3132430"
  },
  {
    "text": "[INAUDIBLE]. You mean for this? So absolutely. But that's true for any\nRowHammer solution, meaning,",
    "start": "3132430",
    "end": "3137660"
  },
  {
    "text": "if you actually have a\nRowHammer solution that's perfectly secure, you can\nactually cause denial of service",
    "start": "3137660",
    "end": "3142850"
  },
  {
    "text": "by actually attacking a row,\nbecause internally, there will be a lot of\nrefreshes that's going on. But that's true for\nthis interface also.",
    "start": "3142850",
    "end": "3148700"
  },
  {
    "text": "And that needs to be examined. So a denial of service, I think\nyou need to be careful about. But at least you're not\ndoing data corruption.",
    "start": "3148700",
    "end": "3154430"
  },
  {
    "text": "Denial of service, hopefully, a\nlittle bit easier to deal with.",
    "start": "3154430",
    "end": "3159608"
  },
  {
    "text": "And in the end, I think it'll\nbe degradation of service, and not complete denial also. Yeah.",
    "start": "3159608",
    "end": "3166329"
  },
  {
    "text": "So since we don't\nhave a lot of time, I will go through this\nrelatively quickly. I think future is\nmore bleak, basically.",
    "start": "3166330",
    "end": "3172690"
  },
  {
    "text": "Due to difficulties\nin technology scaling, we're going to see\nmore of these errors. And some of them\nmay be happening, and we don't see them.",
    "start": "3172690",
    "end": "3178930"
  },
  {
    "text": "They may be going unnoticed. And I believe we need\nto examine these. These errors can cause safety,\nsecurity, vulnerabilities",
    "start": "3178930",
    "end": "3184983"
  },
  {
    "text": "clearly. And this is true for\nall technologies. There was a question earlier\non different technologies. I don't believe any\ntechnology is immune.",
    "start": "3184983",
    "end": "3191157"
  },
  {
    "text": "We have not come up with\na magic memory technology yet, even though some\npeople in the past have claimed that some\ntechnologies over here",
    "start": "3191157",
    "end": "3196690"
  },
  {
    "text": "on this list were\nmagic, let's say. So how do we deal with it? I think we need to\nunderstand more. I'm not saying\nanything different.",
    "start": "3196690",
    "end": "3202870"
  },
  {
    "text": "We need to have more real device\ndata and analysis, modeling, better understanding, developing\nreliable metrics, models.",
    "start": "3202870",
    "end": "3210819"
  },
  {
    "text": "We need to architect better. We need to have\nbetter partitioning of duties across the stack. I think one of the reasons\nwe are suffering today is because of that bad\npartitioning of duties",
    "start": "3210820",
    "end": "3217720"
  },
  {
    "text": "across the stack that we have\nbetween memory and processor. We clearly cannot give up\nperformance and efficiency.",
    "start": "3217720",
    "end": "3223160"
  },
  {
    "text": "But patch-ability in\nthe field is important. And I think design and test,\nas Sebastian mentioned earlier, is going to be a lot more\nimportant going into the future.",
    "start": "3223160",
    "end": "3230200"
  },
  {
    "text": "Maybe it's going to be a lot\nmore online testing to actually figure this out, because\noffline testing is, I think, in my opinion\ninsurmountable in terms of cost.",
    "start": "3230200",
    "end": "3237560"
  },
  {
    "text": "[INAUDIBLE] Yeah. Yeah, it's all online, I think. That's why we've been\nbuilding this infrastructure.",
    "start": "3237560",
    "end": "3244670"
  },
  {
    "text": "And I think we\nneed to build more. So let's get back to bridges. Bridges have bitflips,\nas you can see.",
    "start": "3244670",
    "end": "3250558"
  },
  {
    "text": "And human beings have\nbeen building bridges for thousands of years. And this is critical\ninfrastructure. And we still haven't\ngotten it right.",
    "start": "3250558",
    "end": "3256940"
  },
  {
    "text": "This is Seoul. This is Minneapolis, Genoa,\nand more recently, Pittsburgh, where I used to live in.",
    "start": "3256940",
    "end": "3262820"
  },
  {
    "text": "I used to go over that\nbridge many times. Yeah, this the Forbes Avenue\nbridge, if you know Pittsburgh.",
    "start": "3262820",
    "end": "3268519"
  },
  {
    "text": "Yeah. I think we're\nbetter than bridges. I mean, here, we're at a scale\nthat's much larger than bridges.",
    "start": "3268520",
    "end": "3274100"
  },
  {
    "text": "We have billions of\ndevices, clearly. But at least we have\nsome better hope. And bridges are very hard to,\nlet's say, patch, if you will,",
    "start": "3274100",
    "end": "3281730"
  },
  {
    "text": "right? But intelligent memory can\nactually patch those failures. Let me give you\nsome final thoughts.",
    "start": "3281730",
    "end": "3287650"
  },
  {
    "text": "I like this paper. This was published in IEEE\nSecurity & Privacy in 2003.",
    "start": "3287650",
    "end": "3292720"
  },
  {
    "text": "Actually took advantage\nof bitflips in memory to take over virtual machine. It's essentially a very\nsimilar attack to what Google",
    "start": "3292720",
    "end": "3299380"
  },
  {
    "text": "developed using RowHammer. And the way they\nactually induced memory errors was actually put\na lamp on the system over here.",
    "start": "3299380",
    "end": "3306607"
  },
  {
    "text": "So you get a lot of\nmemory errors literally. It's a probabilistic\nattack, et cetera. So what RowHammer did was\nessentially replaced that lamp",
    "start": "3306607",
    "end": "3313720"
  },
  {
    "text": "with software. We have a simple exploitable\nmemory error that can be induced by software. And that's why people\nare writing articles",
    "start": "3313720",
    "end": "3319790"
  },
  {
    "text": "that look like this now. And there's more coming. I'm going to skip some of these\nover here to get to the end,",
    "start": "3319790",
    "end": "3327850"
  },
  {
    "text": "to conclude, since\nwe don't have time. So to conclude, memory\nreliability is reducing.",
    "start": "3327850",
    "end": "3333400"
  },
  {
    "text": "These reliability issues\nopen up security and safety vulnerabilities. These are very hard\nto defend against.",
    "start": "3333400",
    "end": "3338950"
  },
  {
    "text": "Some people say that these\nare byzantine failures. Do all you can to avoid them. And that's, I believe, true.",
    "start": "3338950",
    "end": "3344020"
  },
  {
    "text": "RowHammer is a prime\nexample of this. As far as we know,\nit's the first example of how a simple hardware\nfailure mechanism can",
    "start": "3344020",
    "end": "3350198"
  },
  {
    "text": "cause a widespread system\nsecurity vulnerability. And I find the implications\non system security and safety research tremendous\nand exciting.",
    "start": "3350198",
    "end": "3356740"
  },
  {
    "text": "The bad news is this\nis getting worse. And there are other\neffects that are coming up that we need to understand.",
    "start": "3356740",
    "end": "3362230"
  },
  {
    "text": "The good news is we\nhave a lot more to do. At least, hopefully, we are\nnow fully aware that hardware is easily fallible.",
    "start": "3362230",
    "end": "3369130"
  },
  {
    "text": "There's a lot of\nissues in hardware. And I think we need to really\nbe solving all of those. We're developing both\nattacks and defenses at least",
    "start": "3369130",
    "end": "3375009"
  },
  {
    "text": "from a security perspective. And we're hopefully developing\nmore principled models, methodologies, and solutions.",
    "start": "3375010",
    "end": "3380178"
  },
  {
    "text": "I think we need to do a lot\nmore on this last one over here, because I think understanding\nis lacking in this area that",
    "start": "3380178",
    "end": "3386050"
  },
  {
    "text": "leads to holes that are open. So I'll acknowledge\nmy group over here. You can take a look at\nsome of these faces.",
    "start": "3386050",
    "end": "3392119"
  },
  {
    "text": "And everything I've\ndiscussed is online. You can take some of the source\ncode around on your laptop, see if it causes bitflips.",
    "start": "3392120",
    "end": "3399490"
  },
  {
    "text": "And it's on our GitHub. I'm happy to take\nmore questions. Thank you. ",
    "start": "3399490",
    "end": "3410250"
  },
  {
    "text": "Questions? Yes. So you mentioned\nthat [INAUDIBLE]..",
    "start": "3410250",
    "end": "3415549"
  },
  {
    "text": " So yeah, that's a good question.",
    "start": "3415550",
    "end": "3422880"
  },
  {
    "text": "So we've tested\nHBM2 chips, which is not the latest and\ngreatest HBM3, clearly.",
    "start": "3422880",
    "end": "3428250"
  },
  {
    "text": "But that's what\nwe had access to. I think there are effects in\nHBM that is one of the issues.",
    "start": "3428250",
    "end": "3435307"
  },
  {
    "text": "Like temperature is\none of the issues. And we see a clear\nproblem with RowPress especially in HBM because of\nthe 3D stacking and temperature.",
    "start": "3435307",
    "end": "3443340"
  },
  {
    "text": "And also, we're\ninvestigating some 3D stacking related issues that may\nnot exactly be like RowHammer.",
    "start": "3443340",
    "end": "3450359"
  },
  {
    "text": "But there are some\nother bitflips that you can get in HBM, I believe.",
    "start": "3450360",
    "end": "3455369"
  },
  {
    "text": "We have a paper\nthat's on Archive, if you're interested in\ntaking a look at HBM2 results. ",
    "start": "3455370",
    "end": "3464050"
  },
  {
    "text": "Yes. So I guess this is more\nof a question [INAUDIBLE] memory is all interconnected\n[INAUDIBLE] right, very",
    "start": "3464050",
    "end": "3470700"
  },
  {
    "text": "dense [INAUDIBLE] it\nseems like every like there's no hope, right?",
    "start": "3470700",
    "end": "3476460"
  },
  {
    "text": "Like every dense\narchitecture [INAUDIBLE] have some level of\nthese [INAUDIBLE]..",
    "start": "3476460",
    "end": "3484190"
  },
  {
    "text": "Is that your\nthought as well, or? I mean, I don't think\nit's a fundamental issue",
    "start": "3484190",
    "end": "3490710"
  },
  {
    "text": "with the\ninterconnectedness, right? I would say it's more of\na hierarchical structure.",
    "start": "3490710",
    "end": "3496109"
  },
  {
    "text": " But density, certainly, yes. I would say, yeah, because\nof the density and closeness",
    "start": "3496110",
    "end": "3502619"
  },
  {
    "text": "of these structures\nto each other, you will have some noise\nbetween those structures.",
    "start": "3502620",
    "end": "3507878"
  },
  {
    "text": "And that's what we're\nseeing with RowHammer and, certainly, RowPress. And that's why we're not seeing\nit in older technologies that",
    "start": "3507878",
    "end": "3514350"
  },
  {
    "text": "are not as dense. Does that answer your question? Yeah. I don't think it's a\nfundamentally an issue of things",
    "start": "3514350",
    "end": "3521250"
  },
  {
    "text": "being interconnected. It's just how closely they are-- how close they\nare to each other.",
    "start": "3521250",
    "end": "3526620"
  },
  {
    "text": "I think the bigger issue\nis that, as I said that in memory-only\nchips, especially,",
    "start": "3526620",
    "end": "3533640"
  },
  {
    "text": "nobody wants to expand logic\ngates to do anything you know. And if you have just\nmemory and nothing else",
    "start": "3533640",
    "end": "3542270"
  },
  {
    "text": "to get around\nanything, you know, like what are you\ngoing to do, you know, which is kind of like\nwhatever Hynix did,",
    "start": "3542270",
    "end": "3549530"
  },
  {
    "text": "they had to put\nin some gates to-- Yeah, yeah, Samsung\nalso, actually. [INAUDIBLE] intelligence\nin the memory chips,",
    "start": "3549530",
    "end": "3557300"
  },
  {
    "text": "otherwise, you know. And the further away you\ngo from memory chips, and you try to solve the\nproblem somewhere else,",
    "start": "3557300",
    "end": "3563870"
  },
  {
    "text": "your visibility\nand diagnosability into the whole thing is\njust not going to be there. And then you just guess\nand do guesswork, you know.",
    "start": "3563870",
    "end": "3572830"
  },
  {
    "text": "Kind of a similar thing is\nhappening in logic chips now, right? You know, like,\nthere was there's",
    "start": "3572830",
    "end": "3578360"
  },
  {
    "text": "a paper SOSP from\nAlibaba following up on the Google paper. The logic chips-- like\na significant percentage",
    "start": "3578360",
    "end": "3585529"
  },
  {
    "text": "of logic chips are\ndefective in the cloud. People expect 100 defective\nchips per million.",
    "start": "3585530",
    "end": "3592160"
  },
  {
    "text": "The number is at least\nan order of magnitude more, if not much\nmore than that.",
    "start": "3592160",
    "end": "3597350"
  },
  {
    "text": "And it's going to get worse. It's not going to get better. [INAUDIBLE],, you know,\nlike if something fails,",
    "start": "3597350",
    "end": "3602840"
  },
  {
    "text": "people are just like\nthrowing darts in the dark. And they're hoping that\nsomething good will happen.",
    "start": "3602840",
    "end": "3608510"
  },
  {
    "text": "And they cannot diagnose what\nthe source of the problem is. Yeah, you mentioned\nthe tax on [INAUDIBLE]",
    "start": "3608510",
    "end": "3617180"
  },
  {
    "text": "getting worse or worse. Like have you seen\nthe real examples? Or is this more something you've\nseen in the lab possibility.",
    "start": "3617180",
    "end": "3626030"
  },
  {
    "text": "Or you think about\nsince they say such a big deal is that\nis this a big risk or just",
    "start": "3626030",
    "end": "3633770"
  },
  {
    "text": "a hypothetical [INAUDIBLE]? Well, I don't know if there are\nreal examples out in the field. But people have shown\nthat using these bitflips,",
    "start": "3633770",
    "end": "3640190"
  },
  {
    "text": "you can actually destroy the\naccuracy of real inference engines. There are a lot of\nworks on this topic.",
    "start": "3640190",
    "end": "3646369"
  },
  {
    "text": "I believe it's a critical\nsafety issue, yes. I mean also, like\nrelated to RowHammer,",
    "start": "3646370",
    "end": "3652290"
  },
  {
    "text": "we don't know if there's an\nattack that's out there that affects everyone. But if you don't\nexpose these things,",
    "start": "3652290",
    "end": "3659000"
  },
  {
    "text": "probably those attacks\nmay be happening also. I think that's always the\nthing in the security research.",
    "start": "3659000",
    "end": "3665030"
  },
  {
    "text": "Yes. I feel like, especially\nin the DRAM market, which is commodity market, like\neverything is spec-driven right?",
    "start": "3665030",
    "end": "3671180"
  },
  {
    "text": "How much can you\nput in [INAUDIBLE] Have you ever thought about\nor has the industry thought",
    "start": "3671180",
    "end": "3676970"
  },
  {
    "text": "about solutions where they\nhave some sort of benchmarking, or some sort of testing\nenvironment, which",
    "start": "3676970",
    "end": "3683240"
  },
  {
    "text": "would like at least help,\nyou know, standardize this across [INAUDIBLE]? Right now, I don't see this\nas part of my DRAM spec list",
    "start": "3683240",
    "end": "3691460"
  },
  {
    "text": "when I'm trying to\nbuy something, right I mean, yeah, this is something\nthat DRAM manufacturers don't want to expose\nbasically, because they",
    "start": "3691460",
    "end": "3698390"
  },
  {
    "text": "don't want you to know the\n[INAUDIBLE] characteristics. So this is something that\nwe've been arguing also, more transparency in the\nreliability characteristics,",
    "start": "3698390",
    "end": "3705620"
  },
  {
    "text": "a better interface,\nbetter partitioning of duties, all of these actually\ngo toward that direction. That's why in one paper,\nwe have in Archive",
    "start": "3705620",
    "end": "3713210"
  },
  {
    "text": "we argue something like that. DRAM manufacturers expose\nsome characteristics such that the memory controllers\ncan be built on top of them",
    "start": "3713210",
    "end": "3719360"
  },
  {
    "text": "to achieve system-level\nreliability and robustness guarantees. So I agree with you.",
    "start": "3719360",
    "end": "3724520"
  },
  {
    "text": "But it's not easy to\nmove in that direction. But there is another\nissue, right? So to be able to even figure out\nwhat those characteristics are,",
    "start": "3724520",
    "end": "3731670"
  },
  {
    "text": "that means they have\nto characterize them. And it's highly unlikely that\nthey characterize it one time,",
    "start": "3731670",
    "end": "3737460"
  },
  {
    "text": "and it will hold\nfor the whole batch. So you know pretty\nmuch have to do it chip by chip, which means you know\nnow it's more testing cost,",
    "start": "3737460",
    "end": "3744090"
  },
  {
    "text": "and this, and that. Exactly, yeah. I mean, there's\ncertainly, to answer some other part\nof your question, there are certainly\ntesting programs",
    "start": "3744090",
    "end": "3750060"
  },
  {
    "text": "that you can download and\nuse, Memtest86, for example. In fact, those were\nthe first folks that picked up on\nour original paper",
    "start": "3750060",
    "end": "3755460"
  },
  {
    "text": "and added a RowHammer test. And then everybody was\ngoing to them and saying, no, we have these bitflips\nin this RowHammer test.",
    "start": "3755460",
    "end": "3761760"
  },
  {
    "text": "So basically, certainly\nyou can do testing after you assemble your system.",
    "start": "3761760",
    "end": "3767760"
  },
  {
    "text": "And people try to do testing. But testing is a\nvery tough thing, as Sebastian also mentioned.",
    "start": "3767760",
    "end": "3772970"
  },
  {
    "text": "Thank you. Yes, who wants to go first? There's three [INAUDIBLE].",
    "start": "3772970",
    "end": "3779370"
  },
  {
    "text": "[INAUDIBLE] so on\nthe sensitivity of the [INAUDIBLE]\ndifferent combinations",
    "start": "3779370",
    "end": "3787470"
  },
  {
    "text": "sometimes you said that you\nare just accessing your goal line for a long time to\n[INAUDIBLE] you have not",
    "start": "3787470",
    "end": "3797010"
  },
  {
    "text": "have an effect. So to say that\n[INAUDIBLE] is mainly",
    "start": "3797010",
    "end": "3802840"
  },
  {
    "text": "the access transistor, or\nwith the dimensionality of the capacitance,\nor just [INAUDIBLE]",
    "start": "3802840",
    "end": "3809319"
  },
  {
    "text": "the density of the [INAUDIBLE]",
    "start": "3809320",
    "end": "3814700"
  },
  {
    "text": "I think it's-- It's all of the\nabove, probably, yes. I mean, we can go into the\nsilicon-level mechanism,",
    "start": "3814700",
    "end": "3820140"
  },
  {
    "text": "if you want. But it's all of the\nabove in the end. It involves all of them. ",
    "start": "3820140",
    "end": "3826410"
  },
  {
    "text": "Yes. So [INAUDIBLE] So\none of the things",
    "start": "3826410",
    "end": "3838840"
  },
  {
    "text": "is that sometimes, like\nCaroline talked about, is having security\nbe a first step.",
    "start": "3838840",
    "end": "3844310"
  },
  {
    "text": "So how do you think we can\nteach students, and researchers, and people in the workforce when\ndesigning devices, designing",
    "start": "3844310",
    "end": "3852880"
  },
  {
    "text": "architecture, and designing\nthe system to think about that in a\nsystematic [INAUDIBLE],, like this trade-off space.",
    "start": "3852880",
    "end": "3859360"
  },
  {
    "text": "And then instead of just\ndoing the best performance but blindly ignoring security\nuntil someone comes up",
    "start": "3859360",
    "end": "3865420"
  },
  {
    "text": "with [INAUDIBLE] like\nconsidering white space and then maybe knowing, OK, I\nknow that I'm not the super,",
    "start": "3865420",
    "end": "3872060"
  },
  {
    "text": "but at least I know it. And I know where I\nstand on [INAUDIBLE].. Do you have any ideas on\nlike this [INAUDIBLE]??",
    "start": "3872060",
    "end": "3878750"
  },
  {
    "text": "Well, yeah. I mean, that's why I\npropose this understanding. I don't think we're\neven at the point where we have understood\nthat curve, for example.",
    "start": "3878750",
    "end": "3886849"
  },
  {
    "text": "But I mean, it's a\ntough thing, right? It's not just\nperformance, I think.",
    "start": "3886850",
    "end": "3892370"
  },
  {
    "text": "So in the end, if you\nwant to get lower costs, if you want to get larger\nmemories, and that's what we want, that's\nwhat everybody wants,",
    "start": "3892370",
    "end": "3898790"
  },
  {
    "text": "you will have scaled\nthe memory technology to some smaller dimensions. And you will run into\nthese reliability problems.",
    "start": "3898790",
    "end": "3904130"
  },
  {
    "text": "I think it's more\nof a mindset issue that these reliable\nproblems are also important. And people need to\nbe educated on that.",
    "start": "3904130",
    "end": "3910310"
  },
  {
    "text": "And there's a solution space. There's a variety of\nsolutions that you can employ. But I think you're [INAUDIBLE].",
    "start": "3910310",
    "end": "3916622"
  },
  {
    "start": "3916622",
    "end": "3924950"
  },
  {
    "text": "Yeah. So that's an excellent question. If you want to\ndesign something that",
    "start": "3924950",
    "end": "3930099"
  },
  {
    "text": "is like highly\nreliable, et cetera, cost is always\ngoing to be higher. You could do it. Like people are trying to do\nthat for space applications,",
    "start": "3930100",
    "end": "3937540"
  },
  {
    "text": "for example, like things that\nare going to go out space, hardening many modular\nredundancy, et cetera.",
    "start": "3937540",
    "end": "3944740"
  },
  {
    "text": "We know the design\nprinciples over here. And we send these things\ninto the space also. But cost is very high.",
    "start": "3944740",
    "end": "3951970"
  },
  {
    "text": "But I think there is another\nissue, which is given what we have done in the--",
    "start": "3951970",
    "end": "3957535"
  },
  {
    "text": "I actually jokingly say the\n19th century approaches, but I mean the 20th\ncentury approaches,",
    "start": "3957535",
    "end": "3962680"
  },
  {
    "text": "it had been a very\nmanufacturing-driven industry. And, you know, that's\nwhy I think we don't even",
    "start": "3962680",
    "end": "3970240"
  },
  {
    "text": "know what we don't know. I mean, you know, like to be\nable to solve this problems, we have to know.",
    "start": "3970240",
    "end": "3975670"
  },
  {
    "text": "And I think that's a huge issue. Yeah, that's why my first\npoint was understanding. I think I agree with that.",
    "start": "3975670",
    "end": "3982060"
  },
  {
    "text": "We need to know more about\nwhat they manufacture, I think. Any other question?",
    "start": "3982060",
    "end": "3988080"
  },
  {
    "text": "Really with respect to\nsecurity, is there anything that operating\nsystem can be applied",
    "start": "3988080",
    "end": "3994019"
  },
  {
    "text": "how to position an aggressor\nand things like that. Yeah. I mean, there are\npapers on that topic.",
    "start": "3994020",
    "end": "4000680"
  },
  {
    "text": "One of the ideas is\nphysical isolation, meaning, waste some of your\nmemory such that the rows",
    "start": "4000680",
    "end": "4006319"
  },
  {
    "text": "that you are accessing,\nthere's no data that are next to those rows.",
    "start": "4006320",
    "end": "4011390"
  },
  {
    "text": "But this wastes a lot\nof memory, clearly. And people have tried to\novercome the memory overheads.",
    "start": "4011390",
    "end": "4016460"
  },
  {
    "text": "So you can isolate the\ndifferent applications to different\nsub-arrays where you don't have RowHammer\n[INAUDIBLE] sub-arrays.",
    "start": "4016460",
    "end": "4023150"
  },
  {
    "text": "So there are some\nthings that you can do. --you need to know\nthe layouts of the-- That's right. A lot of these can be\nreverse engineered.",
    "start": "4023150",
    "end": "4029508"
  },
  {
    "text": "Yes, that's what they-- sure. Yeah, that's the\ndownside you need to know the layout of DRAMs. You may not be\nperfectly correct.",
    "start": "4029508",
    "end": "4035720"
  },
  {
    "text": "But yes, people have proposed\na lot of those solutions. [INAUDIBLE]",
    "start": "4035720",
    "end": "4040819"
  },
  {
    "text": "This is the last question. Then we're done. [INAUDIBLE] you have\ntwo adjacent rows,",
    "start": "4040820",
    "end": "4048910"
  },
  {
    "text": "and place those two capacitors\nin a different layer so that we have more distance\nbetween the neighboring",
    "start": "4048910",
    "end": "4055960"
  },
  {
    "text": "capacitors. And it's very deep. But this type of solution has\nbeen discussing in logic device",
    "start": "4055960",
    "end": "4063010"
  },
  {
    "text": "to avoid cross couple,\nor coupling [INAUDIBLE] very low layers [INAUDIBLE].",
    "start": "4063010",
    "end": "4069970"
  },
  {
    "text": "So what would-- but\nthen you always face-- [INTERPOSING VOICES] --face, or you have some\nsomething else come next to it.",
    "start": "4069970",
    "end": "4076330"
  },
  {
    "text": "And then that will become the-- [INAUDIBLE] we still have the\nsame number of parameters.",
    "start": "4076330",
    "end": "4081730"
  },
  {
    "text": "But you will waste space\nin one of the layers in each individual layer. Yes. Yeah. So I think that's-- absolutely,\nI think the solutions can waste",
    "start": "4081730",
    "end": "4089950"
  },
  {
    "text": "space. So for example,\nDRAM manufacturers can insert additional\ndistance, et cetera. It's not easy in\ntoday's technology.",
    "start": "4089950",
    "end": "4096220"
  },
  {
    "text": "But you can reduce the\ndistance-- increase the distance, et cetera. And you can reduce this problem. No question about that.",
    "start": "4096220",
    "end": "4101918"
  },
  {
    "text": "But all of those solutions come\nat cost, price, basically, yeah. OK.",
    "start": "4101918",
    "end": "4107020"
  },
  {
    "text": "Thank you very much, Onur. Sure, thanks. Thank you for the questions. ",
    "start": "4107020",
    "end": "4117000"
  }
]