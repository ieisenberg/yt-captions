[
  {
    "start": "0",
    "end": "170000"
  },
  {
    "text": "so it's exciting to be here this is actually both the first computer science colloquium I've ever spoken at and the",
    "start": "11759",
    "end": "17939"
  },
  {
    "text": "first one I've ever attended my background is actually not in computer science II I know that Mohawk and the tattoos give it away but I'm a",
    "start": "17939",
    "end": "23610"
  },
  {
    "text": "credentialed actuary but at any rate I've been working my excel for the last year and I want to tell you guys about",
    "start": "23610",
    "end": "30240"
  },
  {
    "text": "what we do at Mac seller and as andy pointed out what the paradigm is in computing that we're trying to introduce",
    "start": "30240",
    "end": "36089"
  },
  {
    "text": "and essentially trying to overthrow so I'll start off by answering that",
    "start": "36089",
    "end": "41610"
  },
  {
    "text": "question of you know what is it that makes processors inefficient or what makes computers as we know them",
    "start": "41610",
    "end": "47699"
  },
  {
    "text": "inefficient because almost all computers that we know are based on processors of some form CPUs GPUs micro processors",
    "start": "47699",
    "end": "54210"
  },
  {
    "text": "that sort of thing so the way I explain this at a cocktail party when I'm trying to give somebody who doesn't have a background you know the five minute",
    "start": "54210",
    "end": "60390"
  },
  {
    "text": "answer is imagine the city of Chicago one day passes a really bad ordinance and they say that all of the",
    "start": "60390",
    "end": "67380"
  },
  {
    "text": "white-collar office work all the lawyers and dentists and doctors and all the people who work indoors in Chicago all",
    "start": "67380",
    "end": "73229"
  },
  {
    "text": "have to get their work done in the Willis Tower in one central location it's very much like the way we build",
    "start": "73229",
    "end": "78569"
  },
  {
    "text": "processors now we have a little tiny bit of silicon that's dedicated to compute and everything has to go through there",
    "start": "78569",
    "end": "85619"
  },
  {
    "text": "but we have this problem that Chicago still has the same number of white-collar workers right there's still",
    "start": "85619",
    "end": "91289"
  },
  {
    "text": "all these people living all the way out in the suburbs and in order for them to get any work done they have to get all the way to the Willis Tower and back",
    "start": "91289",
    "end": "97289"
  },
  {
    "text": "so being engineering creatures and human beings we figure this out we say okay",
    "start": "97289",
    "end": "102360"
  },
  {
    "text": "well what we're gonna do is we're gonna bring all the lawyers in for 10 minutes they're gonna get all their wool your ring done right and then they're gonna have to go and the accountants are gonna",
    "start": "102360",
    "end": "108209"
  },
  {
    "text": "have to come in for 10 minutes and then what do we have we have a traffic problem right so now we need to start building triple decker highways and",
    "start": "108209",
    "end": "115110"
  },
  {
    "text": "thinking of all these different ways of getting all of those people to and from the center without colliding with each other right and at some point some",
    "start": "115110",
    "end": "121679"
  },
  {
    "text": "enterprising developer thing so well I know how to solve that problem I'll put in some temporary corporate housing that's really close to the Willis Tower",
    "start": "121679",
    "end": "127800"
  },
  {
    "text": "and people will sort of swap into it if they know they're gonna need to be at work the next day they can stay in one",
    "start": "127800",
    "end": "132840"
  },
  {
    "text": "of these high priced apartments and get there more quickly and that's basically right so and then in my metaphor is like",
    "start": "132840",
    "end": "139680"
  },
  {
    "text": "the l1 and l2 cache that sort of thing if I go and expand this city I don't",
    "start": "139680",
    "end": "144930"
  },
  {
    "text": "really get any work done right if I go add more houses to the edge of it it doesn't really get more done because it all has to go",
    "start": "144930",
    "end": "150670"
  },
  {
    "text": "through that central point and the only real idea we have for getting more work out of this kind of a system at this",
    "start": "150670",
    "end": "156250"
  },
  {
    "text": "point in computing is just a copy and paste right so we put multiple ALUs multiple cores on a chip and by doing",
    "start": "156250",
    "end": "162700"
  },
  {
    "text": "that sometimes we make them smaller and weaker like we do in the GPU but the basic idea is we just can't squeeze any",
    "start": "162700",
    "end": "168370"
  },
  {
    "text": "more power out of one processor so we start adding coarse so what's happening now in computer science is that Moore's",
    "start": "168370",
    "end": "175270"
  },
  {
    "start": "170000",
    "end": "213000"
  },
  {
    "text": "Law is still with us we're still packing transistors on a chip exponentially we're still doing what's failing now is",
    "start": "175270",
    "end": "182070"
  },
  {
    "text": "frequency scaling right those individual cores that we're building are no longer",
    "start": "182070",
    "end": "187210"
  },
  {
    "text": "getting that much more powerful with each generation the way they used to so instead the only way we can get more",
    "start": "187210",
    "end": "192490"
  },
  {
    "text": "performance is by putting more of them on a chip and the problem with that is that performance doesn't come free right it used to be that if you wrote code and",
    "start": "192490",
    "end": "199870"
  },
  {
    "text": "a processor came out that had doubled the clock frequency of the last processor you could compile that same",
    "start": "199870",
    "end": "205060"
  },
  {
    "text": "code for that processor and run twice as fast we don't get that kind of free performance anymore now you have to",
    "start": "205060",
    "end": "210100"
  },
  {
    "text": "expose that parallelism in your code now the reason we do all of this is in",
    "start": "210100",
    "end": "215890"
  },
  {
    "start": "213000",
    "end": "289000"
  },
  {
    "text": "service to one of the oldest ideas in computing right the control flow model and in the control flow model which is by the way every kind of programming",
    "start": "215890",
    "end": "222520"
  },
  {
    "text": "pretty much I'm sure all of you have ever done have you ever done Python or C E or it doesn't matter whatever language",
    "start": "222520",
    "end": "227620"
  },
  {
    "text": "you worked and you were doing the control flow paradigm and and in the control flow paradigm we treat data like",
    "start": "227620",
    "end": "232750"
  },
  {
    "text": "it's static it lives out in the suburbs it has a picket fence and an address and when I want to go get it I go get it I",
    "start": "232750",
    "end": "237850"
  },
  {
    "text": "pick it up I do work with it and I put it back where I found it we treat instructions like a kind of data right",
    "start": "237850",
    "end": "243730"
  },
  {
    "text": "so instructions are just a sequence of data that we go through in time to actually do our computing with all that",
    "start": "243730",
    "end": "249220"
  },
  {
    "text": "computing and time and Excel or is that the actual silicon on the chip there's a lot of stuff that has nothing",
    "start": "249220",
    "end": "255400"
  },
  {
    "text": "to do with compute instruction decoding caching fetching all of that machinery",
    "start": "255400",
    "end": "261430"
  },
  {
    "text": "has to be there and it doesn't actually do any real work it just moves data around so it's an inefficient way to",
    "start": "261430",
    "end": "267370"
  },
  {
    "text": "solve any problem but it is a great sales pitch it's an inefficient way to solve any problem right it's really easy to take I can take a 10 year old kid and",
    "start": "267370",
    "end": "273970"
  },
  {
    "text": "teach him to write Python and do stuff in Minecraft they're doing that now right I certainly can't take a tenure",
    "start": "273970",
    "end": "279190"
  },
  {
    "text": "kid and teach him how to build a flip-flop right so hardware design is hard software design is easy this model has",
    "start": "279190",
    "end": "285670"
  },
  {
    "text": "worked up until this point but we're running into fundamental limitations of the hardware at max eller we promote a",
    "start": "285670",
    "end": "291340"
  },
  {
    "start": "289000",
    "end": "365000"
  },
  {
    "text": "different model of computing what we call the data flow model this is also a very old idea in computer science it was",
    "start": "291340",
    "end": "296740"
  },
  {
    "text": "just never really realizable in a real way until until more recently in the",
    "start": "296740",
    "end": "302830"
  },
  {
    "text": "data flow model instead of treating data like it's static we treat data like it's moving constantly and that means all of",
    "start": "302830",
    "end": "308170"
  },
  {
    "text": "that machinery do that is to go fetch data and bring it back that goes away we don't need that anymore and instead of",
    "start": "308170",
    "end": "313420"
  },
  {
    "text": "computing in time by running through a list of instructions what we do is compute in space we take the actual physical surface of our silicon we",
    "start": "313420",
    "end": "320230"
  },
  {
    "text": "arrange the compute we want to do in space across it and we flow the data through it to actually do the",
    "start": "320230",
    "end": "325390"
  },
  {
    "text": "computation the advantage of the this is we're not wasting silicon and machinery that doesn't actually do work right so",
    "start": "325390",
    "end": "331720"
  },
  {
    "text": "we can squeeze a lot more compute into a little tiny chip and we're also not wasting clock cycles right so when",
    "start": "331720",
    "end": "337390"
  },
  {
    "text": "you're when a if I write a piece of code and I want to know how fast it runs in a control flow system there's only one way to know that's actually run it because",
    "start": "337390",
    "end": "343780"
  },
  {
    "text": "there's all kinds of variables I don't know about the operating system to caching I go get something from data maybe that takes ten cycles if it's",
    "start": "343780",
    "end": "349840"
  },
  {
    "text": "right there in a cache maybe it takes thousands if I have to go and get it from Ram or even from a disk right so in",
    "start": "349840",
    "end": "355960"
  },
  {
    "text": "a data flow model the very next piece of data is going to arrive with the very next clock cycle so every single clock",
    "start": "355960",
    "end": "362020"
  },
  {
    "text": "cycle gets used to compute so tell you a little bit about max seller is a company",
    "start": "362020",
    "end": "367750"
  },
  {
    "start": "365000",
    "end": "411000"
  },
  {
    "text": "right max seller began here at Stanford with our founders research in the late to late 90s completers PhD in 2000 was",
    "start": "367750",
    "end": "376510"
  },
  {
    "text": "that under you or was that just you were Mike Flynn okay it's under Mike Flynn who is now one of our chair our chairman",
    "start": "376510",
    "end": "382570"
  },
  {
    "text": "of our board you take the credit but not the blame okay so it started here at",
    "start": "382570",
    "end": "387880"
  },
  {
    "text": "Stanford I took it to Bell Labs for a couple years and then bought out his research project and started a company Mac seller",
    "start": "387880",
    "end": "393880"
  },
  {
    "text": "in 2003 we have had clients in oil and gas Chevron II and I Schlumberger we've had",
    "start": "393880",
    "end": "399400"
  },
  {
    "text": "clients in finance JP Morgan CME Group Citigroup we also have clients and",
    "start": "399400",
    "end": "404590"
  },
  {
    "text": "defense and cybersecurity and we have a number of strategic technology partnerships with companies like Juniper Hitachi and AWS",
    "start": "404590",
    "end": "410880"
  },
  {
    "text": "so tell you that a couple of our success stories real quick with this technology before we dive into how it",
    "start": "410880",
    "end": "415960"
  },
  {
    "start": "411000",
    "end": "526000"
  },
  {
    "text": "works so one of our earliest ones was a chevron chevron takes these big boats out and if you see this boat it's",
    "start": "415960",
    "end": "422289"
  },
  {
    "text": "trailing thousands of seismic sensors and they take it out they shoot an air gun into the water they get feeds back on all those sensors and then they have",
    "start": "422289",
    "end": "428860"
  },
  {
    "text": "to run a really big 3d finite-difference model to basically piece out from that data where the oil is what they were",
    "start": "428860",
    "end": "436000"
  },
  {
    "text": "doing was taking this boat out shooting things collecting a whole bunch of data sending it back to a data center processing it getting it back and of",
    "start": "436000",
    "end": "443080"
  },
  {
    "text": "course the boat by that point is no longer over where it was and if you want to turn it around and go survey the same area that's a big overhead to do that so",
    "start": "443080",
    "end": "450340"
  },
  {
    "text": "we actually worked with them to develop data flow as a way to address that performance density problem to bring more compute as close as possible to",
    "start": "450340",
    "end": "457330"
  },
  {
    "text": "where those data is being actually collected another client of ours JP Morgan and the financial crisis you know",
    "start": "457330",
    "end": "463599"
  },
  {
    "text": "as you as I'm sure many of you know at complex credit derivatives were very hard to compute during the financial crisis people didn't care before the",
    "start": "463599",
    "end": "469840"
  },
  {
    "text": "financial crisis because they were seen as having no risk but afterwards it was a big deal we stepped in with JP Morgan and took",
    "start": "469840",
    "end": "475629"
  },
  {
    "text": "one of their risk calculations from eight hours to two minutes on our boxes so they were also very happy with us",
    "start": "475629",
    "end": "480940"
  },
  {
    "text": "and then finally Juniper Networks is one of our technology partnerships we've actually released a commercial product with them the qfx 5100 this is a",
    "start": "480940",
    "end": "488469"
  },
  {
    "text": "top-of-rack switch so in a in a data center you've got a rack of servers and at the top generally speaking all your",
    "start": "488469",
    "end": "494110"
  },
  {
    "text": "connections go through a top of rack switch that then goes out to the rest of the network we have a top rack switch",
    "start": "494110",
    "end": "499479"
  },
  {
    "text": "with one of our data flow chips in it that can be programmed using our software and basically what that does is",
    "start": "499479",
    "end": "505659"
  },
  {
    "text": "if you're a data center you have data coming in and you need to do some kind of compute if maybe you're a bank you need to do risk metrics maybe you're",
    "start": "505659",
    "end": "511829"
  },
  {
    "text": "some kind of institution as regulatory requirements where you need to stamp time stamp packets things like that we can capture that",
    "start": "511829",
    "end": "518800"
  },
  {
    "text": "data and process on it at line rate as fat at 40 gig e hundred GigE whatever's coming in we can process so how do we",
    "start": "518800",
    "end": "527529"
  },
  {
    "start": "526000",
    "end": "710000"
  },
  {
    "text": "build this how do we actually build a data flow computer and so the next section I'll kind of talk you through the process and then I'm going to go",
    "start": "527529",
    "end": "533470"
  },
  {
    "text": "through a specific example that I've actually worked on so it starts by understanding our algorithm this is",
    "start": "533470",
    "end": "539140"
  },
  {
    "text": "really the biggest thing at max eller right control flow is how 99% of all programming works it's how 99% of all",
    "start": "539140",
    "end": "545470"
  },
  {
    "text": "programmers thing and in order for me to take my problem and build the data flow computer around it the first thing I have to do is",
    "start": "545470",
    "end": "551730"
  },
  {
    "text": "rethink the problem in terms of data flow that's really where most of the work goes in it's where the thought work right there after the technology takes",
    "start": "551730",
    "end": "558839"
  },
  {
    "text": "over so this is really the tricky part once I understand my algorithm the next",
    "start": "558839",
    "end": "564360"
  },
  {
    "text": "thing I'm going to do is I'm gonna start writing in our java base language max J so whenever I tell people to say look I",
    "start": "564360",
    "end": "569970"
  },
  {
    "text": "mean go you do high-performance computing in Java are you nuts well no we don't actually",
    "start": "569970",
    "end": "575130"
  },
  {
    "text": "run the Java right what the Java does is it describes the calculation we want to",
    "start": "575130",
    "end": "580800"
  },
  {
    "text": "run and then when we run that Java it builds the computer that does that calculation so the Java itself is not",
    "start": "580800",
    "end": "586890"
  },
  {
    "text": "actually what we run at runtime it's just a design language that's all it is once we've designed the the written the",
    "start": "586890",
    "end": "593459"
  },
  {
    "text": "Java we can put that into our Max compiler which runs that Java and assembles the graph and what we get is a",
    "start": "593459",
    "end": "599399"
  },
  {
    "text": "data flow graph so this image over here on the right and I'll go into this in a little bit more detail in a moment but this what we call a data flow graph",
    "start": "599399",
    "end": "605580"
  },
  {
    "text": "right as inputs at the top operations and then it filters down to an output at the bottom what I can do with that data",
    "start": "605580",
    "end": "612600"
  },
  {
    "text": "flow graph once I've assembled it is I can run it as though it were an actual computer now I'm only simulating but if",
    "start": "612600",
    "end": "618180"
  },
  {
    "text": "you've ever played with a hardware simulator you simulate a lot of things right you simulate bit by bit signal by signal clock switch by clocks which I",
    "start": "618180",
    "end": "624600"
  },
  {
    "text": "don't have to do nearly as much to simulate a graph right it I have a graph that says add two things together all I",
    "start": "624600",
    "end": "630270"
  },
  {
    "text": "have to do is loop through two arrays and add them together it's much easier to simulate so I write my max J I build",
    "start": "630270",
    "end": "636180"
  },
  {
    "text": "my graph I test my graph and then I have all the standard software development tools I can do debugging I can do unit",
    "start": "636180",
    "end": "641910"
  },
  {
    "text": "testing if I don't like what it does I go back and write some more max J and I keep doing that until I'm happy with the",
    "start": "641910",
    "end": "647520"
  },
  {
    "text": "code that it's running in simulation once I'm happy with the code it's",
    "start": "647520",
    "end": "653370"
  },
  {
    "text": "running in simulation then I'm gonna take it and run the hardware build and the hardware builds intensive at the",
    "start": "653370",
    "end": "663029"
  },
  {
    "text": "moment I don't know if we have full support for any language but the plan is to skin whatever language people want",
    "start": "663029",
    "end": "668070"
  },
  {
    "text": "right I mean we can do it in Python week and it's easy to put skin layers on top of that no we're just building an object",
    "start": "668070",
    "end": "677760"
  },
  {
    "text": "model so I'm building a graph I don't care fish it the memory model is or knew that because it's not what I actually run I",
    "start": "677760",
    "end": "682890"
  },
  {
    "text": "just need to be able to build a model of objects and the connections between them",
    "start": "682890",
    "end": "688910"
  },
  {
    "text": "well there's static cuz they get burned into the chat basically right so the data moves dynamically through them but",
    "start": "690180",
    "end": "695190"
  },
  {
    "text": "I can't take my graph and the chip that I've already burned basically a chip that I've already laid it on to and then",
    "start": "695190",
    "end": "700500"
  },
  {
    "text": "say yeah I want a MUX there right I mean it I can do that in code but it's a lot you know I have to go through the",
    "start": "700500",
    "end": "706140"
  },
  {
    "text": "hardware build process again to actually get it out so I take a little bit more",
    "start": "706140",
    "end": "712320"
  },
  {
    "start": "710000",
    "end": "795000"
  },
  {
    "text": "of a close look at what that actual coding language looks like right so this is a very simple example what I have is",
    "start": "712320",
    "end": "717810"
  },
  {
    "text": "a very simple calculation where I'm taking a stream of data in at the top and I want to do a moving average right",
    "start": "717810",
    "end": "724290"
  },
  {
    "text": "so I have a stream of data and I want to take three adjacent elements add them together and divide by three really",
    "start": "724290",
    "end": "729330"
  },
  {
    "text": "really really basic so the way I need to do that in code is I start by defining an input so I have this first line up",
    "start": "729330",
    "end": "735630"
  },
  {
    "text": "here x equals i/o dot input and that creates that little house at the top of",
    "start": "735630",
    "end": "741240"
  },
  {
    "text": "my data flow graph it's just saying I have an employed and thereafter I just have lines where I create new variables",
    "start": "741240",
    "end": "746910"
  },
  {
    "text": "from the old variables with formulas equations multiplications additions all the standard you know things that I",
    "start": "746910",
    "end": "752850"
  },
  {
    "text": "would have in the scientific code or the engineer ago or whatever I was copying over right any kind of formula I could",
    "start": "752850",
    "end": "758430"
  },
  {
    "text": "pretty much copy and paste it into Java right but what I'm doing with those calculations is when I run this it's not",
    "start": "758430",
    "end": "764700"
  },
  {
    "text": "actually there's no number there for pre even X and next and things like that it's building this graph it's saying",
    "start": "764700",
    "end": "769980"
  },
  {
    "text": "that these things saying pre plus X plus next equals some means that those three lines have to be connected by addition",
    "start": "769980",
    "end": "776700"
  },
  {
    "text": "operators to come out with a new line that sort of thing very much like tensor flow very similar concept right so if",
    "start": "776700",
    "end": "783270"
  },
  {
    "text": "you've ever worked in tensor flow you start with this sort of tensor object and then you do operations on it you get",
    "start": "783270",
    "end": "789600"
  },
  {
    "text": "other tensor objects that's effectively what this is so very very similar kind of concept and what's nice about this is",
    "start": "789600",
    "end": "796770"
  },
  {
    "start": "795000",
    "end": "833000"
  },
  {
    "text": "because it's code and because it's object-oriented code so I also have the advantage of polymorphism and whatever",
    "start": "796770",
    "end": "802200"
  },
  {
    "text": "other kind of sort of tricks I want to play I can build really complex graphs with relatively simple code so this is a",
    "start": "802200",
    "end": "809160"
  },
  {
    "text": "graph this is 4,600 nodes in a graph of a 3d finite difference",
    "start": "809160",
    "end": "814220"
  },
  {
    "text": "time step now if I showed you the code that generates this you'd be able to read it it'd be you know this element plus that times this it's a formula",
    "start": "814220",
    "end": "820160"
  },
  {
    "text": "right but when you actually expand out all the different data dependencies and connections in that graph it's a very",
    "start": "820160",
    "end": "825500"
  },
  {
    "text": "big complicated graph and we can build that with very simple code that's really the the benefit of Max J and the Max",
    "start": "825500",
    "end": "831439"
  },
  {
    "text": "compiler so okay now we've got our graph we know the calculation we want to do",
    "start": "831439",
    "end": "837680"
  },
  {
    "start": "833000",
    "end": "855000"
  },
  {
    "text": "now I need to actually physically build a machine to do it right up to this point all I have done is abstractly",
    "start": "837680",
    "end": "844069"
  },
  {
    "text": "defined a machine right and that's important that's really where the most of the effort goes into is abstractly defining my dataflow computer but how do",
    "start": "844069",
    "end": "851269"
  },
  {
    "text": "I actually get performance out I don't actually build it so the first thing I need is an actual physical representation of the data flow graph so",
    "start": "851269",
    "end": "857870"
  },
  {
    "start": "855000",
    "end": "888000"
  },
  {
    "text": "I need a chip and on that chip I'm gonna have the silicon actually arranged into",
    "start": "857870",
    "end": "863949"
  },
  {
    "text": "so for example the individual compute nodes will be pieces of logic right and then the lines connecting those nodes",
    "start": "863949",
    "end": "870290"
  },
  {
    "text": "are actual wires that flow the data from one of those Centers of the silicon to others so I have an actual physical",
    "start": "870290",
    "end": "876529"
  },
  {
    "text": "representation of my data flow graph on my data flow chip and that's what my data is going to flow through the rest",
    "start": "876529",
    "end": "882529"
  },
  {
    "text": "of the data flow engine is places for the data to flow to and for the data to flow from so for example one place I",
    "start": "882529",
    "end": "889189"
  },
  {
    "start": "888000",
    "end": "925000"
  },
  {
    "text": "might want to flow data to and from is from PCIe right so I want to be able to talk to a CPU that's running basically",
    "start": "889189",
    "end": "897199"
  },
  {
    "text": "like a C you know just basic C code and I wanna be able to send data to the card",
    "start": "897199",
    "end": "902509"
  },
  {
    "text": "and get data back from the card just like I would with any kind of accelerator right so I have pcie express I want to talk to it and we have a an",
    "start": "902509",
    "end": "909680"
  },
  {
    "text": "API called Mac cell or OS that handles all of the low-level details all the driver and the you know the individual",
    "start": "909680",
    "end": "915769"
  },
  {
    "text": "running of pins and all that so you literally say here's my data in CPU memory run this calculation on it very",
    "start": "915769",
    "end": "922309"
  },
  {
    "text": "very basic another place I might want to have data flow to and from is memory on",
    "start": "922309",
    "end": "928309"
  },
  {
    "start": "925000",
    "end": "964000"
  },
  {
    "text": "the actual board so I'll talk a little bit about our memory hierarchy in a minute we call this L mem right large",
    "start": "928309",
    "end": "934430"
  },
  {
    "text": "these are usually ddr4 dims we can fit so like the latest generation we fit three of them on a board we could do 32",
    "start": "934430",
    "end": "942019"
  },
  {
    "text": "gigs so that's like 96 games for example of potentially Ram and again that goes directly into the",
    "start": "942019",
    "end": "947509"
  },
  {
    "text": "chip so there's a little different than other accelerators right the the the CPU does not talk to that memory it talks to",
    "start": "947509",
    "end": "954050"
  },
  {
    "text": "the chip right and the chip talks to that memory and I can implement the memory controller on the chip and that's",
    "start": "954050",
    "end": "959569"
  },
  {
    "text": "how I can get data to and from memory but it all goes through the chip another",
    "start": "959569",
    "end": "964819"
  },
  {
    "start": "964000",
    "end": "995000"
  },
  {
    "text": "thing I might want to do is talk to other DFAS all right if I can't get all the work done in one data flow engine then I want to communicate with other",
    "start": "964819",
    "end": "971540"
  },
  {
    "text": "ones I need an interconnect the latest generation that's an optical interconnect it's a bi-directional interconnect to two other cards so I can",
    "start": "971540",
    "end": "977480"
  },
  {
    "text": "do it like a ring topology for example where I could put four cards in a ring and each one can communicate out and",
    "start": "977480",
    "end": "984620"
  },
  {
    "text": "back to its two neighbours nearest to it in the ring and again that goes straight",
    "start": "984620",
    "end": "990259"
  },
  {
    "text": "into the chip that's not mediated by an OS or a CPU or anything like that and then the last thing I might want to do",
    "start": "990259",
    "end": "996170"
  },
  {
    "start": "995000",
    "end": "1028000"
  },
  {
    "text": "is talk to a network so I can actually put an external QF SP on the board and I can put ten Giggy hundred Giggy",
    "start": "996170",
    "end": "1002550"
  },
  {
    "text": "basically whatever I can by the IP core four or Aang because they cost more money for you know 100 Giggy but then I",
    "start": "1002550",
    "end": "1010029"
  },
  {
    "text": "can take network traffic either I can take just I can capture like TCP IP traffic or I can talk to network storage",
    "start": "1010029",
    "end": "1015930"
  },
  {
    "text": "all of that at a much higher rate than I get from the PCIe so generally when people come to us and they say I've got",
    "start": "1015930",
    "end": "1021130"
  },
  {
    "text": "data and I want to get to it faster than I can get through PCIe network is usually the next place we'll go for that",
    "start": "1021130",
    "end": "1027510"
  },
  {
    "text": "so this is what one looks like in real life right this is a box that we have this a 1u blade so if you've been in a",
    "start": "1027510",
    "end": "1034418"
  },
  {
    "start": "1028000",
    "end": "1115000"
  },
  {
    "text": "data center so 19 inch some-odd wide blade it's about an inch and a half high eight of those cards will fit in it so",
    "start": "1034419",
    "end": "1042038"
  },
  {
    "text": "why eight I mean you certainly can't fit like eight GPUs and one you blade and the reason for that is these things operate at very low frequencies hundred",
    "start": "1042039",
    "end": "1048339"
  },
  {
    "text": "two hundred megahertz they generate very little heat the cooling system is literally it's just a block of copper that we blow air over there's no water",
    "start": "1048339",
    "end": "1054700"
  },
  {
    "text": "none of that fancy stuff right so we can stack a lot of them in a very small space that one you blade will hold eight",
    "start": "1054700",
    "end": "1061210"
  },
  {
    "text": "data flow engines up to a terabyte of RAM split out among those data flow engines all of them of course",
    "start": "1061210",
    "end": "1066669"
  },
  {
    "text": "interconnected to each other with that max ring interconnect and then we also have what's essentially a virtualized",
    "start": "1066669",
    "end": "1072280"
  },
  {
    "text": "PCIe connection right so I take this thing I put it in a big rack I connect it to an InfiniBand switch",
    "start": "1072280",
    "end": "1078640"
  },
  {
    "text": "and then if I have a CPU node connected to InfiniBand switch I say to that on the CPU note I say here's an IP address",
    "start": "1078640",
    "end": "1083860"
  },
  {
    "text": "give me for da face and this thing will allocate me the DfE s and then map them as though they're just available via",
    "start": "1083860",
    "end": "1090610"
  },
  {
    "text": "PCIe so in these generally we say like",
    "start": "1090610",
    "end": "1096070"
  },
  {
    "text": "in the equivalent performance to 2250 x86 servers it's hard to gauge",
    "start": "1096070",
    "end": "1101110"
  },
  {
    "text": "performance and we'll talk about this as we get into later because it just depends on the problem right for some problems it's gonna be a massive",
    "start": "1101110",
    "end": "1106480"
  },
  {
    "text": "improvement some it's it's you know gonna be more moderate so it really just comes down to what the problem is that",
    "start": "1106480",
    "end": "1112540"
  },
  {
    "text": "we're trying to port that's why there's a wide range on that number so I'll go through a specific example right this is",
    "start": "1112540",
    "end": "1118840"
  },
  {
    "start": "1115000",
    "end": "1205000"
  },
  {
    "text": "one I've been working on for the last year or so quantum espresso this is part of a larger project for price the",
    "start": "1118840",
    "end": "1125230"
  },
  {
    "text": "partnership for Advanced Computing in Europe and they've asked us to port for applications this is the one that was",
    "start": "1125230",
    "end": "1130480"
  },
  {
    "text": "assigned to me basically what this is is it's a Fortran it's an old Fortran software package or a series of Fortran",
    "start": "1130480",
    "end": "1137590"
  },
  {
    "text": "software packages yes I had to learn Fortran for this exercise that was fun I actually don't I don't complain about it",
    "start": "1137590",
    "end": "1144490"
  },
  {
    "text": "too much what it is I won't go through all the physics and the details of the calculation but basically it's an",
    "start": "1144490",
    "end": "1149530"
  },
  {
    "text": "iterative solve I have this really large system I need to do a whole bunch of linear algebra and FFTs and and I'm going to start with a guess and I'm",
    "start": "1149530",
    "end": "1155560"
  },
  {
    "text": "going to iterate until that guessed converges to some you know fixed point basically the reference that they gave",
    "start": "1155560",
    "end": "1162340"
  },
  {
    "text": "us was eight system tantalum oxide and it took two full racks of blue-jean q so",
    "start": "1162340",
    "end": "1167350"
  },
  {
    "text": "if you've ever seen Blue Gene command these things are the size of a refrigerator - two of those six point seven cubic meters of space and I looked",
    "start": "1167350",
    "end": "1174250"
  },
  {
    "text": "this up by the way a typical domestic refrigerators about a cubic meter so that's six or seven refrigerators worth",
    "start": "1174250",
    "end": "1181050"
  },
  {
    "text": "32,000 cores 53 minutes of wall time and it used 384 kilowatts of power and by",
    "start": "1181050",
    "end": "1187660"
  },
  {
    "text": "comparison like a typical house is a couple of kilowatts so that's you know the size of a couple refrigerators uses",
    "start": "1187660",
    "end": "1192700"
  },
  {
    "text": "a couple kilowatts can we beat that so the first thing we do right we unpack our Fortran software package and we",
    "start": "1192700",
    "end": "1199780"
  },
  {
    "text": "start doing what you do with any kind of software you trying to prove we profile it right so for data flow we're looking",
    "start": "1199780",
    "end": "1206920"
  },
  {
    "text": "for something a little bit different most profiling tools focus on function calls right function calls are akin",
    "start": "1206920",
    "end": "1212519"
  },
  {
    "text": "trol flow concept I have a sequence of instructions and what a function call basically is is a jump to kind of",
    "start": "1212519",
    "end": "1218099"
  },
  {
    "text": "instruction right you're at this point go to that point so that means I can have reusable logic I can have some",
    "start": "1218099",
    "end": "1223379"
  },
  {
    "text": "section of code that I can run over and over and over again and it runs essentially independent of the context it's called in I could run",
    "start": "1223379",
    "end": "1229889"
  },
  {
    "text": "it a thousand times I could run it one time it doesn't know it's just an independent piece of logic that's",
    "start": "1229889",
    "end": "1234899"
  },
  {
    "text": "control flow we don't have that advantage and data flow or data flow we think about loops we think about the",
    "start": "1234899",
    "end": "1241320"
  },
  {
    "text": "major loops the order that those functions get called in and we think about the amount of data that flows into",
    "start": "1241320",
    "end": "1247379"
  },
  {
    "text": "and out of those loops so we generally build something like this this is a loop flow diagram for quantum espresso again",
    "start": "1247379",
    "end": "1252539"
  },
  {
    "text": "I won't go through the physics but the basic idea is there's really three major loops in this program and if you go",
    "start": "1252539",
    "end": "1259469"
  },
  {
    "text": "through the functions you'll find them eventually right there there's one loop and then okay the other loop is in the function that it calls and that kind of",
    "start": "1259469",
    "end": "1266070"
  },
  {
    "text": "thing but once you've mapped out the logic it's really easy to see how the program itself actually works right so",
    "start": "1266070",
    "end": "1272519"
  },
  {
    "text": "in this case for corner expresso we focused on that innermost loop that FFT loop right so this outermost loop runs a",
    "start": "1272519",
    "end": "1279299"
  },
  {
    "text": "couple dozen times the middle loop runs a couple hundred times the inner loop runs a couple thousand times and one of",
    "start": "1279299",
    "end": "1285359"
  },
  {
    "text": "the things we notice about the inner loop says two inputs has this I input the vrs input and it turns out the",
    "start": "1285359",
    "end": "1290759"
  },
  {
    "text": "tsiyon put is pretty big the vrs inputs pretty small and it doesn't change very much so those are just you know really",
    "start": "1290759",
    "end": "1297929"
  },
  {
    "text": "big ok positive things for acceleration the other thing is that if you think about the amount of internal memory it",
    "start": "1297929",
    "end": "1303869"
  },
  {
    "text": "would have to generate to run through that whole five gigabytes it'd be something more like 250 gigabytes now in",
    "start": "1303869",
    "end": "1309690"
  },
  {
    "text": "real life you wouldn't really allocate that you break into little pieces but if you think about that is like a total memory requirement it's a lot more",
    "start": "1309690",
    "end": "1315899"
  },
  {
    "text": "memory in the loop than going into and out of the loop that's a prime indicator that's a key target for acceleration so",
    "start": "1315899",
    "end": "1323489"
  },
  {
    "text": "again on a control flow system we break that into batches we'd say all right here's my five gigabyte problem break that into a bunch of hundred megabyte",
    "start": "1323489",
    "end": "1329249"
  },
  {
    "text": "problems move 100 megabyte problem into memory do everything I need to do grab the result back then move the next",
    "start": "1329249",
    "end": "1334709"
  },
  {
    "text": "one it's a shift kind of thing for data flow I run all of them at once right I",
    "start": "1334709",
    "end": "1339959"
  },
  {
    "text": "just run the first one and I just keep going so once I've done my loop flow graph the",
    "start": "1339959",
    "end": "1347549"
  },
  {
    "start": "1345000",
    "end": "1525000"
  },
  {
    "text": "next thing I need to think about is where I want to actually put things in memory so I talked a little bit earlier we have a two-tier memory hierarchy",
    "start": "1347549",
    "end": "1354090"
  },
  {
    "text": "right we have fmm which is memory that's on the chip the fast memory so I tell",
    "start": "1354090",
    "end": "1360570"
  },
  {
    "text": "people this is kind of like l1 cache I mean that only in terms of speed it has the speed of l1 cache it's not a cache",
    "start": "1360570",
    "end": "1366540"
  },
  {
    "text": "in any kind of sense what it is is allocatable memory units on the chip that I can grab that I can put an",
    "start": "1366540",
    "end": "1373380"
  },
  {
    "text": "address on them and then I can pull data out of them every clock cycle so every single clock cycle input can pull memory",
    "start": "1373380",
    "end": "1378510"
  },
  {
    "text": "from a different address in my F mem so there's no like okay dive send out the",
    "start": "1378510",
    "end": "1384630"
  },
  {
    "text": "request and then I wait a couple hundred cycles and then it comes back it's literally just this cycle that data the",
    "start": "1384630",
    "end": "1389820"
  },
  {
    "text": "next cycle that there's also Elm ml mem is those on board dims and for those",
    "start": "1389820",
    "end": "1395490"
  },
  {
    "text": "obviously I have communication I have to go through a memory controller I have to talk to the the dims I have to get the",
    "start": "1395490",
    "end": "1401010"
  },
  {
    "text": "data out and so for that obviously it's slower but it's much larger I can fit up",
    "start": "1401010",
    "end": "1406230"
  },
  {
    "text": "to 96 gigs and that's it it's it's a much simpler memory hierarchy than say a GPU so in quantum espresso for example",
    "start": "1406230",
    "end": "1413429"
  },
  {
    "text": "this cube that I need to do 3d FFT over there's that there's a cube and I'm basically going to do 3d FFT do a",
    "start": "1413429",
    "end": "1419820"
  },
  {
    "text": "multiplication do 3d FFT back and if I look at it from a data flow perspective I'm going to need to do two things I'm",
    "start": "1419820",
    "end": "1426809"
  },
  {
    "text": "going to need to do all the multiplications and additions everything that goes in the FFT that part is easy really really easy",
    "start": "1426809",
    "end": "1432419"
  },
  {
    "text": "it's multiplications and additions right the other thing is reordering the data I have to reorder the data within the FFT",
    "start": "1432419",
    "end": "1438510"
  },
  {
    "text": "and then I have to reorder the data when I'm doing transposes so for example if I have a plane and I'm reading across it",
    "start": "1438510",
    "end": "1444690"
  },
  {
    "text": "one way I have to store that in memory and then read it out the other way so",
    "start": "1444690",
    "end": "1449850"
  },
  {
    "text": "where I do those transposes depends upon the size of my memory the plane that I would need to do the 2d transposon is",
    "start": "1449850",
    "end": "1455970"
  },
  {
    "text": "about half a megabyte I've got 40 megabytes available on the chip so obviously I'm going to do all those transposes in fmm on the chip the whole",
    "start": "1455970",
    "end": "1464250"
  },
  {
    "text": "cube itself is too big to do that the whole cube 128 Meg's so when I want to do 3d transposes which is where I've",
    "start": "1464250",
    "end": "1470880"
  },
  {
    "text": "basically reading the cube like this and then I have to read the whole thing in before I can start to read across it in",
    "start": "1470880",
    "end": "1477390"
  },
  {
    "text": "the slow dimension right so for those I have to actually send it out to Elm em and then get it back I can't fit it on the chat another",
    "start": "1477390",
    "end": "1484740"
  },
  {
    "text": "thing that I noticed this is a really really just fun problem for this particular type of thing because I'm not",
    "start": "1484740",
    "end": "1490620"
  },
  {
    "text": "starting with the entire cube filled in I only start with a little sphere that's actually only about five six percent of",
    "start": "1490620",
    "end": "1496980"
  },
  {
    "text": "the total area of the cube I mean an fft across the whole domain but i'm only care about putting that sphere in and i",
    "start": "1496980",
    "end": "1502530"
  },
  {
    "text": "only care about the values that end up in that sphere on the way out so that makes it a lot easier it means that the amount of data that needs to move to and",
    "start": "1502530",
    "end": "1509100"
  },
  {
    "text": "from the board is just about 6% of the cube the amount of data that has to move",
    "start": "1509100",
    "end": "1514410"
  },
  {
    "text": "to and from those large dims is about 50% of the cube so there's about ten times more data that has to move to mmm",
    "start": "1514410",
    "end": "1521630"
  },
  {
    "text": "that works out pretty nicely because the bandwidth between the DfE and el mem is",
    "start": "1521630",
    "end": "1527550"
  },
  {
    "text": "about ten times higher than the bandwidth between the DfE and PCIe right so I have a sort of natural fit once",
    "start": "1527550",
    "end": "1533940"
  },
  {
    "text": "I've identified where I want to put my memory in my data flow then I start laying out my actual flow my",
    "start": "1533940",
    "end": "1539610"
  },
  {
    "text": "architecture so in this case for example I'm going to start with my input data on the CPU I'm gonna feed it into the FFT",
    "start": "1539610",
    "end": "1547380"
  },
  {
    "text": "in the first dimension I'm gonna do a transpose and you see that's talking to F mem on the chip then I'm gonna go to",
    "start": "1547380",
    "end": "1553320"
  },
  {
    "text": "the F of T in the second dimension then I have to go out to memory get it back do the FFT in the third dimension",
    "start": "1553320",
    "end": "1559940"
  },
  {
    "text": "multiplication and then undo the whole process right now the thing you notice about this is that it's one continuous",
    "start": "1559940",
    "end": "1567210"
  },
  {
    "text": "pipeline from beginning to end right so I have side goes all the way out to H",
    "start": "1567210",
    "end": "1573540"
  },
  {
    "text": "side so if you think about this like a pipeline think about it like an oil pipeline right if I want to send a",
    "start": "1573540",
    "end": "1579060"
  },
  {
    "text": "barrel of oil on an oil pipeline I don't put one barrel in it send it all the way to the end and then once it gets out put",
    "start": "1579060",
    "end": "1584160"
  },
  {
    "text": "the second barrel in alright I can feed data in as soon as the pipe is empty even if data hasn't started coming out",
    "start": "1584160",
    "end": "1590160"
  },
  {
    "text": "the other end of the pipe so I could have the first cube go in and be working",
    "start": "1590160",
    "end": "1595620"
  },
  {
    "text": "its way through down here somewhere and already be feeding the second cubes worth of data in alright so that's a",
    "start": "1595620",
    "end": "1601140"
  },
  {
    "text": "huge advantage over control flow architectures where what I'm gonna have to do is move the first cubes data out",
    "start": "1601140",
    "end": "1606450"
  },
  {
    "text": "into memory do everything I need to do and only when everything is done all my threads are synchronized and all that",
    "start": "1606450",
    "end": "1611549"
  },
  {
    "text": "but then I can move it back and start the second one here it's a pipeline as soon as the first one goes in the second",
    "start": "1611549",
    "end": "1616739"
  },
  {
    "text": "one starts going even if the first one hasn't come out the other thing that's nice again as I pointed out the widths",
    "start": "1616739",
    "end": "1622950"
  },
  {
    "text": "of these arrows indicate roughly how much data is flowing in and out and you can see that there's a lot more data",
    "start": "1622950",
    "end": "1628649"
  },
  {
    "text": "moving between the DfE in the memory than there is between the DfE and the CPU and it matches the bandwidth which",
    "start": "1628649",
    "end": "1634799"
  },
  {
    "text": "is very nice now you get if you think about this more control flow architecture I don't really control this at all this is going to be dependent on",
    "start": "1634799",
    "end": "1641369"
  },
  {
    "text": "what my cache can do right so I might have the same kind of bandwidth limitation but I don't have the ability",
    "start": "1641369",
    "end": "1647039"
  },
  {
    "text": "to use it in an extremely optimal way so what does this look like in real life",
    "start": "1647039",
    "end": "1653330"
  },
  {
    "start": "1650000",
    "end": "1690000"
  },
  {
    "text": "that's what the chip actually looks like when I take that data flow graph and I build it out this is a tool we have",
    "start": "1653330",
    "end": "1659369"
  },
  {
    "text": "called aerial view and what this does is it takes every individual little logic cell on that chip and highlights it to",
    "start": "1659369",
    "end": "1666269"
  },
  {
    "text": "indicate what part of the calculation it got put in so if you go back to this architecture diagram there's really five",
    "start": "1666269",
    "end": "1674700"
  },
  {
    "text": "compute kernels right those light blue circles one two three four five compute",
    "start": "1674700",
    "end": "1680039"
  },
  {
    "text": "kernels I have a look at this picture there's five shaded regions one two three four five those are those five",
    "start": "1680039",
    "end": "1685529"
  },
  {
    "text": "compute currents right just in that eight thing on the left and I'll show you what the other two are in a moment so if I actually overlay the data flow",
    "start": "1685529",
    "end": "1692580"
  },
  {
    "start": "1690000",
    "end": "1779000"
  },
  {
    "text": "on top of this it makes a little bit more sense right so this shaded region up here in the top right that's my first",
    "start": "1692580",
    "end": "1697619"
  },
  {
    "text": "FFT the data comes in from PCIe the PCI he's not like literally on top of the chip there's pins and things like that",
    "start": "1697619",
    "end": "1704249"
  },
  {
    "text": "but it's just for a diagram right data comes in and goes around goes the memory controller back out goes to this kernel",
    "start": "1704249",
    "end": "1711210"
  },
  {
    "text": "guy and works its way back up and all that happens literally physically in space so all five of these regions are",
    "start": "1711210",
    "end": "1716730"
  },
  {
    "text": "running all the time and the only difference between what they're computing is what stage they're at the",
    "start": "1716730",
    "end": "1721950"
  },
  {
    "text": "ones that are later in the pipeline are doing later data than the ones that are before but they're all working on data all the time every clock cycle now the",
    "start": "1721950",
    "end": "1729480"
  },
  {
    "text": "other two sections of the chip they're just more silicon right this particular chip comes in three pieces they",
    "start": "1729480",
    "end": "1734700"
  },
  {
    "text": "basically the way they're building these now is they make up die and then they just kind of copy it three times right they're called SLRs is something single",
    "start": "1734700",
    "end": "1742230"
  },
  {
    "text": "logic regions or something like there's three of them on the chip and it turns out that when I do this whole",
    "start": "1742230",
    "end": "1748620"
  },
  {
    "text": "pipeline it fits in one of them pretty well which means what do i do I just copy and paste try to go back to that old trick",
    "start": "1748620",
    "end": "1754590"
  },
  {
    "text": "so this now actually has three copies of that and then you can't really see it",
    "start": "1754590",
    "end": "1759779"
  },
  {
    "text": "from these diagrams but the individual kernels themselves are actually double width as well they handle two input streams and two output streams so all",
    "start": "1759779",
    "end": "1766169"
  },
  {
    "text": "told this is actually six pipes so not only am i doing every stage of the pipe simultaneously but if I have six pipes",
    "start": "1766169",
    "end": "1772409"
  },
  {
    "text": "all six pipes and all stages in those pipes are running simultaneously so what",
    "start": "1772409",
    "end": "1779940"
  },
  {
    "start": "1779000",
    "end": "1898000"
  },
  {
    "text": "is actually translate to in terms of performance how does this actually perform so first of all we have to kind",
    "start": "1779940",
    "end": "1785820"
  },
  {
    "text": "of caveat things right which is the way you think about performance and data flow is going to be very very different than the way you think about it in",
    "start": "1785820",
    "end": "1791370"
  },
  {
    "text": "control flow and control flow we think about performance in terms of runtime right I hit the button I run it I get",
    "start": "1791370",
    "end": "1797760"
  },
  {
    "text": "any answer out at the end right the reason that works for control flow is were reusing the hardware all right so",
    "start": "1797760",
    "end": "1802770"
  },
  {
    "text": "if I have one core I run something it takes 10 seconds running it ten times takes a hundred seconds because I can't reuse that hardware while the first",
    "start": "1802770",
    "end": "1809730"
  },
  {
    "text": "one's running right so we think in terms of runtime for data flow we think more",
    "start": "1809730",
    "end": "1814980"
  },
  {
    "text": "in terms of throughput we think in terms of the rate at which it's processing the data I think of this as let you think of",
    "start": "1814980",
    "end": "1820260"
  },
  {
    "text": "the analogy is like at your water faucet at home right when you open your water faucet at home you don't care how long",
    "start": "1820260",
    "end": "1825960"
  },
  {
    "text": "an individual molecule of water took to get from the water tower to your faucet that's completely irrelevant information to you what matters is the flow of the",
    "start": "1825960",
    "end": "1832799"
  },
  {
    "text": "water how much water is actually coming out when you pull it out so we have to think about it in terms of flow and when",
    "start": "1832799",
    "end": "1839070"
  },
  {
    "text": "we try to figure out the performance of one of these systems we have to break out a very sophisticated technical tool called a pocket calculator right that's",
    "start": "1839070",
    "end": "1845340"
  },
  {
    "text": "one of the one of the weird things about this technology is actually realizing the data flow Computers a lot of work",
    "start": "1845340",
    "end": "1850500"
  },
  {
    "text": "but estimating how it's going to perform is really trivially easy and that's because I don't have any of the cash or",
    "start": "1850500",
    "end": "1856710"
  },
  {
    "text": "operating system kind of overhead and mechanics and pieces that I don't understand and 15 different architectures I'm trying to support and",
    "start": "1856710",
    "end": "1862440"
  },
  {
    "text": "different compilers do different things I don't have to worry about any of that I know exactly how it works I know exactly what the throughput is so in",
    "start": "1862440",
    "end": "1869010"
  },
  {
    "text": "this case we think about that in terms of three potential choke points right we think about that in terms of first of all PCIe right I have to be able to move",
    "start": "1869010",
    "end": "1875549"
  },
  {
    "text": "the data from the chip to the D hey and that's a simple calculation I sit down and I say alright every cube",
    "start": "1875549",
    "end": "1881100"
  },
  {
    "text": "needs to move seven megabytes of data I can get three gigabytes a second I do a simple division 433 cubes a second",
    "start": "1881100",
    "end": "1888210"
  },
  {
    "text": "really really really basic just I mean literally it's an Excel spreadsheet did we do this then it's okay that's so that",
    "start": "1888210",
    "end": "1895590"
  },
  {
    "text": "PCIe will move 433 cubes a second I can do the same kind of calculation with the Elm em right the mm I have to move a lot",
    "start": "1895590",
    "end": "1901950"
  },
  {
    "start": "1898000",
    "end": "1988000"
  },
  {
    "text": "more data but I have a lot higher bandwidth and I work out the calculation and okay that one moves 250 the last",
    "start": "1901950",
    "end": "1908130"
  },
  {
    "text": "piece is compute right I have to know how fast I can actually compute the data in between those two places and so for",
    "start": "1908130",
    "end": "1913890"
  },
  {
    "text": "that I need to think about clock cycles and clock frequency I need to know how fat basically how many clock cycles it",
    "start": "1913890",
    "end": "1920010"
  },
  {
    "text": "takes to do a cube and how many clock cycles I get a second so it's easy to work that out the the FFTs consume four",
    "start": "1920010",
    "end": "1926370"
  },
  {
    "text": "elements every clock cycle there's 16 million elements into cube therefore four million clock cycles per",
    "start": "1926370",
    "end": "1931800"
  },
  {
    "text": "cube 150 million clock cycles a second and then you multiply everything by 6 because there's those six pipes right so",
    "start": "1931800",
    "end": "1938280"
  },
  {
    "text": "all the throughput is just multiplied by 6 and that comes to 215 cubes a second so obviously it's easy enough to look at",
    "start": "1938280",
    "end": "1944490"
  },
  {
    "text": "this and see where the bottleneck is meant the minimum of these three things is 215 therefore my data flow computer",
    "start": "1944490",
    "end": "1950310"
  },
  {
    "text": "will do 215 cubes a second now I don't know how long one cube takes all right I don't know how long it takes to put in",
    "start": "1950310",
    "end": "1955710"
  },
  {
    "text": "one cube and wait for it to come out but I know if I have to run 200 or so it's going to take about a second now by",
    "start": "1955710",
    "end": "1962190"
  },
  {
    "text": "comparison how does a reference system handle well that big refrigerator the six refrigerators or whatever put together one rack of blue-jean",
    "start": "1962190",
    "end": "1968550"
  },
  {
    "text": "so half that system that's about three hundred and thirty cubes a second so this is one board one PCIe backplane",
    "start": "1968550",
    "end": "1975510"
  },
  {
    "text": "that does basically half of what a Blue Gene a full Blue Gene rack does so if",
    "start": "1975510",
    "end": "1980850"
  },
  {
    "text": "you if you kind of think about that performance scaled up to a full size system right so this is a picture of the",
    "start": "1980850",
    "end": "1985950"
  },
  {
    "text": "Blue Gene itself one rack three some odd cubic meters of three refrigerators",
    "start": "1985950",
    "end": "1990990"
  },
  {
    "start": "1988000",
    "end": "2323000"
  },
  {
    "text": "roughly speaking powers 192 is half that 384 and that only does 338 cubes a",
    "start": "1990990",
    "end": "1998100"
  },
  {
    "text": "second for that 1u rack remember I can fit eight dia fees in it so if one DfE",
    "start": "1998100",
    "end": "2003740"
  },
  {
    "text": "does 215 eight of them do 1700 right so it's quite a lot of quite a lot in that",
    "start": "2003740",
    "end": "2009890"
  },
  {
    "text": "1u rack but each board only uses about a hundred to two hundred watts mate at most so",
    "start": "2009890",
    "end": "2015480"
  },
  {
    "text": "it's much lower power remember what is most of the volume of that blue-jean it's not silicon well not most of it",
    "start": "2015480",
    "end": "2022530"
  },
  {
    "text": "probably is silicon but there's also a lot of it that's just literally water there's a tank of water in this thing that circulates through as no doesn't do",
    "start": "2022530",
    "end": "2029220"
  },
  {
    "text": "any computing at all it just is water right everything in that 1u box is compute every last little bit of it so",
    "start": "2029220",
    "end": "2037290"
  },
  {
    "text": "what you see over that is there's no we don't need all the water cooling we don't need all the communication that's the other thing is if you look inside",
    "start": "2037290",
    "end": "2042570"
  },
  {
    "text": "this blue gene it's a ton of communication because that FFT is split out into 256 pieces and gets done on 256",
    "start": "2042570",
    "end": "2048780"
  },
  {
    "text": "separate cores we don't have any of that communication we they're optically",
    "start": "2048780",
    "end": "2053908"
  },
  {
    "text": "connected but I'm actually using that for this it's air cooled it's literally like a block a copper on top of a board",
    "start": "2053909",
    "end": "2059690"
  },
  {
    "text": "and it's just way more power efficient so if you work it all out it comes out to 700 times more efficient at this one",
    "start": "2059690",
    "end": "2066600"
  },
  {
    "text": "task in terms of the amount of compute I can do per say cubic meter and a",
    "start": "2066600",
    "end": "2071730"
  },
  {
    "text": "thousand times more efficient in terms the amount of compute I can do per watt right now the big caveat there is this",
    "start": "2071730",
    "end": "2076740"
  },
  {
    "text": "is just one part of the computing task right just that FFT but it's still not the same as like if you took a GPU",
    "start": "2076740",
    "end": "2082320"
  },
  {
    "text": "saying oh oh well I can do the compute at five teraflops but the PCIe slows me down no that's",
    "start": "2082320",
    "end": "2088230"
  },
  {
    "text": "literally how fast it'll go right at that task so that's basically that the",
    "start": "2088230",
    "end": "2094679"
  },
  {
    "text": "box itself is 135 times smaller but it does five times as much so if you take five times huh yeah basically five times",
    "start": "2094679",
    "end": "2103710"
  },
  {
    "text": "135 is 700 I do what so so a big part of",
    "start": "2103710",
    "end": "2112020"
  },
  {
    "text": "this is we've got to get people to invest the time and energy into converting things to data flow right and",
    "start": "2112020",
    "end": "2118260"
  },
  {
    "text": "to do that we have to express what they're gonna get out of it in some kind of real terms so we usually do that in",
    "start": "2118260",
    "end": "2123720"
  },
  {
    "text": "terms of compute in space you know if you think about it I've limited space the data center I've limited amount of power I've limited amount of cooling",
    "start": "2123720",
    "end": "2129930"
  },
  {
    "text": "capacity and what I rather get you know one of those or maybe say 20 of those",
    "start": "2129930",
    "end": "2135570"
  },
  {
    "text": "and stick them in a rack and have the equivalent of 20 racks of blue-jean all right if I can do that",
    "start": "2135570",
    "end": "2140609"
  },
  {
    "text": "it's a lot more power in space efficient yeah so we usually think of these things",
    "start": "2140609",
    "end": "2145710"
  },
  {
    "text": "in terms of compute per space and compute per power because again it's a different paradigm if we think if we'd say in terms of runtime right it's the",
    "start": "2145710",
    "end": "2152250"
  },
  {
    "text": "least meaning meaningful metric it's really more about throughput space and",
    "start": "2152250",
    "end": "2160320"
  },
  {
    "text": "power some customers want to reduce space yes I'll tell you in this case why",
    "start": "2160320",
    "end": "2174990"
  },
  {
    "text": "time is not one of them right and that's because I've got a nom de long problem with my with this algorithm there's a",
    "start": "2174990",
    "end": "2180750"
  },
  {
    "text": "good fifth of it that's just not parallelized at all so even if I make the rest of it run a hundred times faster I only get 5x so from the",
    "start": "2180750",
    "end": "2187200"
  },
  {
    "text": "beginning I've said let's think about this less in terms of okay I'm gonna get you one X and run time it's gonna run just as fast it's just not going to be",
    "start": "2187200",
    "end": "2193410"
  },
  {
    "text": "the size of six refrigerators it's gonna be the size of you know something you can put on a desk so that's why in this case space and power but for other",
    "start": "2193410",
    "end": "2199590"
  },
  {
    "text": "clumps of customers absolutely so for JP Morgan for example they didn't care about space and power they cared about runtime they cared about okay I've got",
    "start": "2199590",
    "end": "2205410"
  },
  {
    "text": "this thing runs in eight hours and that's just long enough to be useless from a business perspective that means I can find out tomorrow how much money I",
    "start": "2205410",
    "end": "2211110"
  },
  {
    "text": "lost today whereas two minutes is just enough for me to actually manage a business to it so some customers do care",
    "start": "2211110",
    "end": "2216810"
  },
  {
    "text": "about more about runtime in this particular instance for quantum espresso I've been focused this project is also focused on energy efficiency that's",
    "start": "2216810",
    "end": "2223500"
  },
  {
    "text": "really what the the price pre procurement process what they're looking at is building exascale sort of scale",
    "start": "2223500",
    "end": "2230580"
  },
  {
    "text": "computers that are energy efficient so they're looking at 50x look for better",
    "start": "2230580",
    "end": "2237840"
  },
  {
    "text": "well good tonight you've made too many iterations to do your eigen decomposition so try analyze first and",
    "start": "2237840",
    "end": "2247410"
  },
  {
    "text": "then the iterations are much less so I think in a lot of cases obviously we do",
    "start": "2247410",
    "end": "2253560"
  },
  {
    "text": "look for changes in the algorithm I mean that's one of the things that's very different from from ICANN decomposition",
    "start": "2253560",
    "end": "2261390"
  },
  {
    "text": "yes so I did decomposition so pick an opening the fits your occupation so in",
    "start": "2261390",
    "end": "2266940"
  },
  {
    "text": "this case we're doing things in a way lower level in the actual eigen problem because for this particular one",
    "start": "2266940",
    "end": "2275600"
  },
  {
    "text": "that's more than nine to five in them oh yeah there's the second level which is I",
    "start": "2277180",
    "end": "2283599"
  },
  {
    "text": "just I haven't gonna do it we'll talk afterwards I'll show you there's a second level but basically there's two sides of this there's linear algebra and",
    "start": "2283599",
    "end": "2289450"
  },
  {
    "text": "there's FFT if we make the FFT run really fast but not the linear algebra we get nothing out of it in large-scale",
    "start": "2289450",
    "end": "2296040"
  },
  {
    "text": "T's more about actually computing the matrix product itself it's not about the actual okay yes we've looked at a lot of",
    "start": "2306660",
    "end": "2316690"
  },
  {
    "text": "algorithmic ways to change this okay so okay so the final thing is right now",
    "start": "2316690",
    "end": "2322599"
  },
  {
    "text": "I've got my actual data flow computer built how do I actually deliver it how do I get it in the hands of the people",
    "start": "2322599",
    "end": "2327819"
  },
  {
    "start": "2323000",
    "end": "2466000"
  },
  {
    "text": "that want to use it how do i integrate it with the Fortran how do I get it to be a working piece of software so what",
    "start": "2327819",
    "end": "2333970"
  },
  {
    "text": "the max compiler does after you write your max J and you run it through you do your hardware build what it's going to",
    "start": "2333970",
    "end": "2339369"
  },
  {
    "text": "give you is a binary file that contains the actual structure of the chip right the binary that's actually going to get",
    "start": "2339369",
    "end": "2344530"
  },
  {
    "text": "loaded onto the chip itself and it wraps that in an API it's the C API and it",
    "start": "2344530",
    "end": "2350140"
  },
  {
    "text": "handles all the low-level details all of the you know the driver in P you know talking by PCI and all that so what you",
    "start": "2350140",
    "end": "2356349"
  },
  {
    "text": "end up with is basically a shared object file it's very big because it has all that binary data in it and you have a",
    "start": "2356349",
    "end": "2361900"
  },
  {
    "text": "header and the header has just C functions right so I can integrate that into anything I can integrate C into and",
    "start": "2361900",
    "end": "2368200"
  },
  {
    "text": "the function calls are very simple it's they doesn't have that need to copy things from host memory to device memory",
    "start": "2368200",
    "end": "2373420"
  },
  {
    "text": "it's like literally I just give it a host memory pointer and off it goes and I've actually structured this so that I",
    "start": "2373420",
    "end": "2378549"
  },
  {
    "text": "will be able to point it at the memory natively allocated by Fortran I've literally just there's where Fortran",
    "start": "2378549",
    "end": "2383980"
  },
  {
    "text": "keeps its memory the data is already in the order that you want it in its padded the way you want it and it'll go grab it straight from that address in memory and",
    "start": "2383980",
    "end": "2390400"
  },
  {
    "text": "send it over the PCIe so we call that the simple live CPU the slick interface",
    "start": "2390400",
    "end": "2396210"
  },
  {
    "text": "so it's really a much easier interface to use I think even than other accelerators we also call that this the",
    "start": "2396210",
    "end": "2402579"
  },
  {
    "text": "S API the single device API we generally have multiple layers of those API so",
    "start": "2402579",
    "end": "2408849"
  },
  {
    "text": "we'll generally have like a middleware type err that divides up the problem handles inter communication between the devices",
    "start": "2408849",
    "end": "2415290"
  },
  {
    "text": "we call that the multiple device API or the EM API and basically the idea there",
    "start": "2415290",
    "end": "2420660"
  },
  {
    "text": "is it just like allocates the problem splits it into pieces and then the final kind of API that's gonna be very unique",
    "start": "2420660",
    "end": "2426060"
  },
  {
    "text": "to us is what we call the device API so this is okay now I've solved one problem with max J and I have an existing",
    "start": "2426060",
    "end": "2432750"
  },
  {
    "text": "working data flow computer and now I want to solve a very similar problem with a little tiny tweak and like I said",
    "start": "2432750",
    "end": "2439230"
  },
  {
    "text": "it's not a dynamic graph so if I make that tweak I'm gonna have to go through the build process again but because",
    "start": "2439230",
    "end": "2444930"
  },
  {
    "text": "everything is built in these in this Max J's Java like language it's all object oriented it's in a jar somewhere I can",
    "start": "2444930",
    "end": "2451260"
  },
  {
    "text": "basically go grab that jar pick a couple pieces out of it assemble them and get a working data flow computer that's what",
    "start": "2451260",
    "end": "2456390"
  },
  {
    "text": "we call the dapi right is is where you're working with pre-built Max J components at a much higher level",
    "start": "2456390",
    "end": "2465110"
  },
  {
    "text": "so now I'll kind of move into this portion of the talk I want to talk about a broader spectrum of the things that we",
    "start": "2465110",
    "end": "2471480"
  },
  {
    "start": "2466000",
    "end": "2521000"
  },
  {
    "text": "have done outside just a specific quantum espresso project so the best way to see that is that this address app",
    "start": "2471480",
    "end": "2477690"
  },
  {
    "text": "gallery dot max seller comm slash hashtag for some reason this is our App",
    "start": "2477690",
    "end": "2484140"
  },
  {
    "text": "Gallery this is the world's largest collection of data flow applications which is it may also be the world's only",
    "start": "2484140",
    "end": "2490920"
  },
  {
    "text": "collection of data flow applications I'm not sure but but there's a lot there and it covers a lot of our science use cases",
    "start": "2490920",
    "end": "2496820"
  },
  {
    "text": "so you can see like just from this screenshot right I mean there's things like the brain Network there's there's",
    "start": "2496820",
    "end": "2502980"
  },
  {
    "text": "physics there's just straight computer science packet capture imaging there's lots of different examples a lot of",
    "start": "2502980",
    "end": "2508560"
  },
  {
    "text": "where this comes from is we have interns that come in to work with us for summer and they'll put together a project and put something in the app gallery I think",
    "start": "2508560",
    "end": "2515250"
  },
  {
    "text": "there's something like 40 some-odd applications and a lot of them have source code that you can look at as well",
    "start": "2515250",
    "end": "2521180"
  },
  {
    "start": "2521000",
    "end": "2660000"
  },
  {
    "text": "here's an example of that sort of next level right which is all right data flow",
    "start": "2521330",
    "end": "2526680"
  },
  {
    "text": "computing is awesome for computer science people but we want to put data flow computing in the hands of regular science people right that have a problem",
    "start": "2526680",
    "end": "2533820"
  },
  {
    "text": "they want to solve but they don't want to spend time learning how computers actually work right so so a good example",
    "start": "2533820",
    "end": "2540000"
  },
  {
    "text": "of this finite difference right we do a lot of finite difference work one of the reasons finite difference worked really well for our technology is",
    "start": "2540000",
    "end": "2546430"
  },
  {
    "text": "because of that mmm if you think about finite difference way it usually works is I have an element and to update that",
    "start": "2546430",
    "end": "2551680"
  },
  {
    "text": "element I need to look at elements around me and that doesn't work really well when you have a strictly data parallel architecture right so if I have",
    "start": "2551680",
    "end": "2559030"
  },
  {
    "text": "an architecture where I have okay this node right here or this CPU or core whatever is doing a calculation on this",
    "start": "2559030",
    "end": "2565270"
  },
  {
    "text": "element and it needs to get data from a nearby element a lot of times there's a hierarchy right like sometimes if it's",
    "start": "2565270",
    "end": "2570460"
  },
  {
    "text": "if it's just the nearest thread I can grab it from a register but maybe if it's in a different part of the chip I",
    "start": "2570460",
    "end": "2575680"
  },
  {
    "text": "need to go through shared memory or you know there's hierarchies and there's halos and all this kind of stuff right for us what's nice is we can keep a",
    "start": "2575680",
    "end": "2582310"
  },
  {
    "text": "really big window right there in memory on the chip and that window is really just represented as different points in",
    "start": "2582310",
    "end": "2587440"
  },
  {
    "text": "that stream of data right so if I think about my window the element to my right is just the next element in my stream of",
    "start": "2587440",
    "end": "2592990"
  },
  {
    "text": "data the element to my left is the previous element the element above me is maybe you know five hundred elements previous that kind of thing so finite",
    "start": "2592990",
    "end": "2601480"
  },
  {
    "text": "difference translates really well and this was one of the first problems that we worked on for the oil and gas industry they had to run these really big 3d finite difference models at some",
    "start": "2601480",
    "end": "2609730"
  },
  {
    "text": "point we said all right there's a lot of these geosciences have these equations they want to test they don't want to learn max J they just want to write equations so what we built was max",
    "start": "2609730",
    "end": "2616270"
  },
  {
    "text": "jennife D max jennife T takes Java where the science user literally just writes",
    "start": "2616270",
    "end": "2621609"
  },
  {
    "text": "their equations they define what their stencil is and then they say my update equation is update at time T is this",
    "start": "2621609",
    "end": "2626830"
  },
  {
    "text": "element at time T minus 1 times this factor plus whatever right they write their equation for the finite difference",
    "start": "2626830",
    "end": "2632589"
  },
  {
    "text": "and our layer on top of that does all of the generates the max J it does all of",
    "start": "2632589",
    "end": "2638560"
  },
  {
    "text": "the Halo figures out all the sharing when I do need to split this in two separate DF es it does all that mechanically it figures out how to",
    "start": "2638560",
    "end": "2645250"
  },
  {
    "text": "decompose based on how many deities there are all that all those details get handled by the the max gen of D so the",
    "start": "2645250",
    "end": "2651580"
  },
  {
    "text": "science teacher puts in the equations and gets out the results really really basic stuff so this was was very popular",
    "start": "2651580",
    "end": "2657369"
  },
  {
    "text": "with the oil and gas industry in particular this is one of my favorites",
    "start": "2657369",
    "end": "2662440"
  },
  {
    "text": "this is an actual academic peer-reviewed publication where they measured our speed-up over a similar sized box right",
    "start": "2662440",
    "end": "2669670"
  },
  {
    "text": "so these numbers these 19 X 14 X are comparisons on a 1u to 1/u basis and",
    "start": "2669670",
    "end": "2675790"
  },
  {
    "text": "what I like about these numbers is this is a real straight so this is not a theoretical model this is not a you know an Excel",
    "start": "2675790",
    "end": "2680859"
  },
  {
    "text": "model or whatever this is literally you know timed from beginning to end and the same kind of setup running the same kind",
    "start": "2680859",
    "end": "2686859"
  },
  {
    "text": "of algorithm that kind of thing and you see just this massive speed-up over both the CPU and the GPU versions of this",
    "start": "2686859",
    "end": "2693880"
  },
  {
    "text": "right so even if I take that one you know and I start sticking a Fermi or a Kepler GPU in it I get okay it's one and",
    "start": "2693880",
    "end": "2699700"
  },
  {
    "text": "a half is two three X better right because I still have to deal with that issue of sharing memory and all of these things getting that strict data",
    "start": "2699700",
    "end": "2706270"
  },
  {
    "text": "parallelism just doesn't completely magically change my world there but when I go to the MPC X Box again same size",
    "start": "2706270",
    "end": "2713200"
  },
  {
    "text": "box same physical space in the data center it's 19 X faster than that CPU",
    "start": "2713200",
    "end": "2719530"
  },
  {
    "text": "bases instead of just three and the last one machine learning because everybody",
    "start": "2719530",
    "end": "2726460"
  },
  {
    "start": "2723000",
    "end": "2882000"
  },
  {
    "text": "has to do machine right we this has really been a push in the last year or so for us one of the there's a couple of",
    "start": "2726460",
    "end": "2733600"
  },
  {
    "text": "advantages to this hardware for machine learning right one of them is just generally speaking any kind of algorithm",
    "start": "2733600",
    "end": "2739930"
  },
  {
    "text": "where I'm doing a lot of very simple computation in bulk is great for data flow right the more branching the more",
    "start": "2739930",
    "end": "2747280"
  },
  {
    "text": "divergence the more I sort of do some calculations sometimes some calculation other times that kind of stuff gets less",
    "start": "2747280",
    "end": "2752500"
  },
  {
    "text": "efficient for data flow because what I end up doing is essentially building two data flow computers side by side and",
    "start": "2752500",
    "end": "2757630"
  },
  {
    "text": "then muxing their outputs together right so basically they're both running all the time but one of them the data is",
    "start": "2757630",
    "end": "2762910"
  },
  {
    "text": "just getting thrown away all right it's not very efficient but if I just know I'm gonna go through this kind of multiplication just a gajillion times",
    "start": "2762910",
    "end": "2769450"
  },
  {
    "text": "you know billion times over this multiplication in some orderly fashion that's perfect for us right because we",
    "start": "2769450",
    "end": "2774550"
  },
  {
    "text": "just flow right over it but the other advantage is that because we're designing the hardware we're not limited",
    "start": "2774550",
    "end": "2780280"
  },
  {
    "text": "to the specific types are not limited to integer types floating-point types I can do fixed point types I can do two bits",
    "start": "2780280",
    "end": "2786220"
  },
  {
    "text": "if I want to do right so I can change the precision of my machine learning",
    "start": "2786220",
    "end": "2792340"
  },
  {
    "text": "sort of calculation to whatever is you know sort of the lowest precision I can get that's still reasonable and get the",
    "start": "2792340",
    "end": "2798550"
  },
  {
    "text": "maximum amount of performance out of it and the other advantage is just we have a huge amount of memory right it's very hard now to buy a GPU they're starting",
    "start": "2798550",
    "end": "2805480"
  },
  {
    "text": "to make them now that have more of you know that 1030 whatever gigs but but for the most part you do ones Uganda",
    "start": "2805480",
    "end": "2811900"
  },
  {
    "text": "is about twelve right you usually get about twelve and that limits your model right I can only put so many weights I",
    "start": "2811900",
    "end": "2817900"
  },
  {
    "text": "can only do so much training data because I'm limited in what I can put in that memory we have more memory but we",
    "start": "2817900",
    "end": "2824230"
  },
  {
    "text": "also again have that ability to process massive amounts of data by just flowing it through in time right so I can do",
    "start": "2824230",
    "end": "2831040"
  },
  {
    "text": "essentially my flow my data in do my training in my inference all",
    "start": "2831040",
    "end": "2836320"
  },
  {
    "text": "continuously so I'm actually updating the weights while I'm using the weights continuously and and have it flow out",
    "start": "2836320",
    "end": "2843330"
  },
  {
    "text": "and you can see here this is some some misses a fairly old when we need to update this but you can see that there's",
    "start": "2843330",
    "end": "2849430"
  },
  {
    "text": "performance comparison this is eight of our last generation that's six pipes at 16-bit and comparing that to two GPUs",
    "start": "2849430",
    "end": "2857070"
  },
  {
    "text": "eyes let me see what is that about 10x performance in terms of training time",
    "start": "2857070",
    "end": "2863560"
  },
  {
    "text": "and in terms of energy as well and then obviously training energy is a big thing now right I mean if I'm you",
    "start": "2863560",
    "end": "2869620"
  },
  {
    "text": "know trying to do machine learning on a very very large data set and I'm gonna run a very large data center over it for",
    "start": "2869620",
    "end": "2875050"
  },
  {
    "text": "a long time then I really do start to care about things like compute per space and compute for power that's it for me",
    "start": "2875050",
    "end": "2883270"
  },
  {
    "start": "2882000",
    "end": "3163000"
  },
  {
    "text": "um so what open it up for do we open it up for Q&A now or do we do that afterwards okay yeah absolutely so I'll",
    "start": "2883270",
    "end": "2889600"
  },
  {
    "text": "open up for questions because we're",
    "start": "2889600",
    "end": "2904900"
  },
  {
    "text": "using XA we're upgrading to X 16 now so that yeah that's just a hardware and that's true for a lot of this really is",
    "start": "2904900",
    "end": "2910750"
  },
  {
    "text": "that it's just kind of up to what generation hardware same thing with the Ethernet port where we've never actually",
    "start": "2910750",
    "end": "2916540"
  },
  {
    "text": "done 100 GigE it's not because we can't it's because to do it somebody would have to be willing to pay for the IP core and would actually need it we just",
    "start": "2916540",
    "end": "2922870"
  },
  {
    "text": "haven't had the need for it yet so same thing with PCI you like that we when we",
    "start": "2922870",
    "end": "2928240"
  },
  {
    "text": "move to x16 will get the same PCI bandwidth that you get for x16 it's just we're using x8 now",
    "start": "2928240",
    "end": "2934830"
  },
  {
    "text": "yes what can you tell us about the part where the the chip on to which these",
    "start": "2936099",
    "end": "2942219"
  },
  {
    "text": "things map how is how are these developed what are you using",
    "start": "2942219",
    "end": "2947410"
  },
  {
    "text": "what's the programming technique to what extent is very actually burning silicon as opposed to downloading the way you",
    "start": "2947410",
    "end": "2954459"
  },
  {
    "text": "would for an FPGA or something well it's an FPGA emulator basically so what it is",
    "start": "2954459",
    "end": "2959680"
  },
  {
    "text": "it's an FPGA chip and we convert our data flow graph into VHDL and then we",
    "start": "2959680",
    "end": "2965890"
  },
  {
    "text": "pass that over to the vendor design tools so you'll notice by the way I managed to make it what do we now info",
    "start": "2965890",
    "end": "2972729"
  },
  {
    "text": "almost to the full hour right and I have not said the word FPGA yet that so but you notice that yes there's a reason for",
    "start": "2972729",
    "end": "2979509"
  },
  {
    "text": "that I'm not supposed to say well you know I and I'll explain why right first what we're not an FPGA computing company",
    "start": "2979509",
    "end": "2984940"
  },
  {
    "text": "we're dataflow computing company part of that's obviously a marketing thing but really what really what it comes down to",
    "start": "2984940",
    "end": "2990609"
  },
  {
    "text": "is dataflow an FPGA are two different concepts right FPGA is reconfigurable Hardware a lot of people use FPGAs for",
    "start": "2990609",
    "end": "2997359"
  },
  {
    "text": "control flow right they basically build smaller cores or things but they're still running instructions and stuff",
    "start": "2997359",
    "end": "3003209"
  },
  {
    "text": "like that so FPGA is not the same concept as dataflow and vice-versa dataflow doesn't technically require",
    "start": "3003209",
    "end": "3009359"
  },
  {
    "text": "FPGAs it's not the only kind of hardware that theoretically could represent our",
    "start": "3009359",
    "end": "3014489"
  },
  {
    "text": "data photograph it's just right now it's the most accessible one so yeah so the way it works at the low level is we take",
    "start": "3014489",
    "end": "3020099"
  },
  {
    "text": "that graph we convert it to VHDL and there you're thinking through all of the pipelining all of the timing all of the",
    "start": "3020099",
    "end": "3025979"
  },
  {
    "text": "scheduling all of those details get handled by the compiler it takes the VHDL and generates it and then we pass",
    "start": "3025979",
    "end": "3032190"
  },
  {
    "text": "that the vendor tools the vendor tools are what actually give us the binaries that we can then load onto the chip and",
    "start": "3032190",
    "end": "3037410"
  },
  {
    "text": "then when we go to load them that's all loaded in software so I have that I have the chip sitting on the board it takes",
    "start": "3037410",
    "end": "3042900"
  },
  {
    "text": "about a tenth of a second to load them so for example it's possible to do",
    "start": "3042900",
    "end": "3048269"
  },
  {
    "text": "things like design a processor and okay maybe at the beginning of my calculation I don't need 64-bit accuracy I can do 32",
    "start": "3048269",
    "end": "3055319"
  },
  {
    "text": "bed and then oh I reach a point where 32-bit is just not converging anymore I'm down to that 32nd bit in terms of",
    "start": "3055319",
    "end": "3061289"
  },
  {
    "text": "accuracy and I say okay I want to do better I just switch it out with a 64-bit processor like that take the old",
    "start": "3061289",
    "end": "3066779"
  },
  {
    "text": "one off drop the new one on in software and it's all that's all handled with those c.a.p my calls so the latest generation of our",
    "start": "3066779",
    "end": "3078960"
  },
  {
    "text": "boards is the vertex ultra scale 9 plus from sitelinks but we've actually",
    "start": "3078960",
    "end": "3084150"
  },
  {
    "text": "alternated we've used eye links and we've used Altera again that's the benefit right is that we want people",
    "start": "3084150",
    "end": "3091050"
  },
  {
    "text": "thinking about their problem in an abstract way in terms of data flow we don't want people thinking about Hardware implementation details we do",
    "start": "3091050",
    "end": "3097110"
  },
  {
    "text": "all that so if you've written your application and data flow for our Altera boards and you say ok well I want to do",
    "start": "3097110",
    "end": "3104400"
  },
  {
    "text": "that on as I links board you can go ahead and do that it's it you take the same high level code and just compile it",
    "start": "3104400",
    "end": "3111360"
  },
  {
    "text": "basically for a different Orca texture but we've extracted all those details way and we use just basically whatever",
    "start": "3111360",
    "end": "3117180"
  },
  {
    "text": "is the best chip on the market so I mean",
    "start": "3117180",
    "end": "3139050"
  },
  {
    "text": "we're gonna have the same kind of congestion problems that you're gonna have generally routing the hardware right so a lot of it comes down to the",
    "start": "3139050",
    "end": "3144930"
  },
  {
    "text": "vendor tools you know how good they are at handling the congestion and sometimes the problem is not solvable and you have to lower the frequency and things like",
    "start": "3144930",
    "end": "3150930"
  },
  {
    "text": "that but the advantage there I think if you look at a graph like this right so",
    "start": "3150930",
    "end": "3159090"
  },
  {
    "text": "you're talking about there was I it's this one right yeah and you can see like",
    "start": "3159090",
    "end": "3165300"
  },
  {
    "start": "3163000",
    "end": "3599000"
  },
  {
    "text": "there are a lot of places where I have these thick bands right and these are all strictly parallel right these are operations where they're this is",
    "start": "3165300",
    "end": "3172020"
  },
  {
    "text": "basically graph is right and it's putting them all at the same level because they don't have any dependencies on each other and these are things I can",
    "start": "3172020",
    "end": "3177360"
  },
  {
    "text": "physically layout you know side by side and have them operating in the same clock cycle but yeah I mean granted a",
    "start": "3177360",
    "end": "3183240"
  },
  {
    "text": "lot of these crossings are just artifacts of the way graph is draws the graph that's a big part of it but yeah I mean generally speaking if I have these",
    "start": "3183240",
    "end": "3190470"
  },
  {
    "text": "two kind of wide bands and then there's a lot of back-and-forth between different layers that's a congestion",
    "start": "3190470",
    "end": "3195870"
  },
  {
    "text": "problem it's a routing problem that that yeah it just comes down to how good the vendor tools are at solving",
    "start": "3195870",
    "end": "3200930"
  },
  {
    "text": "so traditional FPGA is like the signings for Altair whatever that you guys are using bit level configurable and they've",
    "start": "3200930",
    "end": "3207900"
  },
  {
    "text": "been that way for a while because they started out its prototyping tools um but",
    "start": "3207900",
    "end": "3213059"
  },
  {
    "text": "if you have something like 128 bit bus that you want you you know around somewhere in your design which is pretty",
    "start": "3213059",
    "end": "3219390"
  },
  {
    "text": "common hmm you lose there's a lot of efficiency that you can just by routing",
    "start": "3219390",
    "end": "3224819"
  },
  {
    "text": "all those signals individually are you aware of any vendors they're moving to",
    "start": "3224819",
    "end": "3229950"
  },
  {
    "text": "sort of a more coarse-grained fpga architecture or you know I mean I personally know hey I can't fake an",
    "start": "3229950",
    "end": "3237359"
  },
  {
    "text": "answer to your questions I know yeah I mean that's yeah it is fairly coming so",
    "start": "3237359",
    "end": "3242759"
  },
  {
    "text": "for example in the quantum espresso the the buses that come out of the memory controller 512 bit so yeah I mean they",
    "start": "3242759",
    "end": "3249809"
  },
  {
    "text": "get big and they get congested a big part of that is one of the things that",
    "start": "3249809",
    "end": "3255180"
  },
  {
    "text": "we obviously have the advantage to do is be its bit configurable to the point if I can literally say I don't want 32-bit you know I want 31 29 I want 15 you know",
    "start": "3255180",
    "end": "3263759"
  },
  {
    "text": "whatever is the level that you set and what's nice when we have this really high level abstraction is it's easy to",
    "start": "3263759",
    "end": "3269039"
  },
  {
    "text": "test that mathematically without having to simulate and build Hardware so I can say all right I wrote a lot of times",
    "start": "3269039",
    "end": "3274829"
  },
  {
    "text": "I'll make it a sort of configurable parameter so I'll say ok the number of bits that are gonna be used to represent",
    "start": "3274829",
    "end": "3280049"
  },
  {
    "text": "my data as an input and I can go and build this whole thing and say that inputs 32 and I can build the whole thing and say it's 30 and then I can go",
    "start": "3280049",
    "end": "3286499"
  },
  {
    "text": "simulate them I can get the answer I don't have to build any kind of complicated machinery to figure out where the 30 or 32 bit will actually",
    "start": "3286499",
    "end": "3292349"
  },
  {
    "text": "give me the answer with the precision I want I can go test it but then when I go to build it in hardware yeah I mean I",
    "start": "3292349",
    "end": "3297390"
  },
  {
    "text": "have the same kind of hardware challenges this is more about rethinking the algorithm and the way that you do",
    "start": "3297390",
    "end": "3302729"
  },
  {
    "text": "the computation than it is about some sort of novel solution to the hardware yes",
    "start": "3302729",
    "end": "3308838"
  },
  {
    "text": "is like Vegas design without it kind of thoroughly dropping off so this one is I",
    "start": "3310420",
    "end": "3318819"
  },
  {
    "text": "think 95 but at the same time it also doesn't mean yeah no I mean it varies",
    "start": "3318819",
    "end": "3327130"
  },
  {
    "text": "but again it's the same proper I mean we're not we don't have our own sort of hardware tool set or whatever so we're",
    "start": "3327130",
    "end": "3332140"
  },
  {
    "text": "limited in the same way that the vendor tools are limited and we're limited to whatever the hardware they're producing is but it's so generally speaking 95%",
    "start": "3332140",
    "end": "3341200"
  },
  {
    "text": "you're pushing it right because you're using a lot of the logic slices for",
    "start": "3341200",
    "end": "3347109"
  },
  {
    "text": "routing as well I had that problem with this and with the way I fixed it right as I took this and I changed the bit",
    "start": "3347109",
    "end": "3352720"
  },
  {
    "text": "width so they were more optimized for the DSPs and when I did that I got a lot more logic and so it looks like my",
    "start": "3352720",
    "end": "3359559"
  },
  {
    "text": "utilization is really low but it's using a lot of the logic for routing and that's how I'm able to sort of meet timing but this is a much better picture",
    "start": "3359559",
    "end": "3366819"
  },
  {
    "text": "to show it cuz the kernels are fatter so it's just easier to see it's generally",
    "start": "3366819",
    "end": "3378640"
  },
  {
    "text": "20 gigs a second per dim because it's ddr4 and and I came over what clock frequency we run it out is 1200",
    "start": "3378640",
    "end": "3384549"
  },
  {
    "text": "megahertz and called clock frequency",
    "start": "3384549",
    "end": "3388230"
  },
  {
    "text": "whatever architecture you've chosen well",
    "start": "3397710",
    "end": "3404770"
  },
  {
    "text": "so the first thing is if I'm getting memory if I'm getting data from the host to the device it doesn't have to go",
    "start": "3404770",
    "end": "3410530"
  },
  {
    "text": "through memory at all okay but you're talking about from the from the the chip",
    "start": "3410530",
    "end": "3416200"
  },
  {
    "text": "to the onboard memory that's generally 20 gigs a second for demo so if I have three dims I can either chain them",
    "start": "3416200",
    "end": "3422619"
  },
  {
    "text": "together and basically use that in like a three channel mode or whatever something and get 60 each or in this",
    "start": "3422619",
    "end": "3428589"
  },
  {
    "text": "case I actually have three separate memory controllers and each one is getting the full 20 now how fast you",
    "start": "3428589",
    "end": "3435339"
  },
  {
    "text": "actually get comes down to the the basically efficiency of your memory",
    "start": "3435339",
    "end": "3441670"
  },
  {
    "text": "access pattern right so for example in in this case I've explicitly structured the memory access so it doesn't write",
    "start": "3441670",
    "end": "3447890"
  },
  {
    "text": "it's not it's not the way we think of a transpose right where it writes out all thing in a big long chunk and then reads",
    "start": "3447890",
    "end": "3454710"
  },
  {
    "text": "strided where the stride is really large because that's inefficient so I actually have it right out in smaller pieces so",
    "start": "3454710",
    "end": "3460800"
  },
  {
    "text": "the next one is not as big of a stride I can control that all manually I have actual command kernels that send 64-bit",
    "start": "3460800",
    "end": "3468630"
  },
  {
    "text": "commands directly to my memory controller and I can explicitly control every part of the process how fast I",
    "start": "3468630",
    "end": "3474270"
  },
  {
    "text": "actually get comes down to how random that access is how batched it is am i opening up you know eight blocks at a",
    "start": "3474270",
    "end": "3480450"
  },
  {
    "text": "time and getting all the data out or am i opening up a block here block there",
    "start": "3480450",
    "end": "3485300"
  },
  {
    "text": "milk if you want to continuously transfer data how fast could you continuously do it because again you had",
    "start": "3485990",
    "end": "3501780"
  },
  {
    "text": "the advantage of you're not batching or caching or any of that kind of stuff so if you can move it 20 gigs as long as you have a 20 gig hole for it to go into",
    "start": "3501780",
    "end": "3508440"
  },
  {
    "text": "and a 20 gig source for it to come from you're fine now you know if you have some bottleneck somewhere else obviously not gonna achieve that but but yeah you",
    "start": "3508440",
    "end": "3515250"
  },
  {
    "text": "could run at that full twenty it's the same thing so for example this this will do 200 cubes a second if I wanted to do",
    "start": "3515250",
    "end": "3520320"
  },
  {
    "text": "200 million cubes in a million seconds I would just run it for a million times longer you know it would but it wouldn't",
    "start": "3520320",
    "end": "3526950"
  },
  {
    "text": "at no point what I need to batch the data because the data flows continuously so I can I can theoretically process you",
    "start": "3526950",
    "end": "3532770"
  },
  {
    "text": "know hundreds of terabytes of data because the amount of data I process is just a matter of time it's not a matter",
    "start": "3532770",
    "end": "3537780"
  },
  {
    "text": "of actual storage for that hundreds of terabytes of data other questions",
    "start": "3537780",
    "end": "3545810"
  },
  {
    "text": "[Music]",
    "start": "3547850",
    "end": "3550900"
  },
  {
    "text": "you will be going into incoming revenue stream whatever you can I don't know I",
    "start": "3554289",
    "end": "3561849"
  },
  {
    "text": "don't know how many of those I really can or should answer I mean I can give you a little bit of the history that we are we've been around for 13 years we",
    "start": "3561849",
    "end": "3569529"
  },
  {
    "text": "have generally been invested in by our clients so that that sort of frees us from we don't have massive amounts of",
    "start": "3569529",
    "end": "3575439"
  },
  {
    "text": "data or anything like that you know basically people work with us and they realize this is a technology that needs investment and development and they",
    "start": "3575439",
    "end": "3581769"
  },
  {
    "text": "invest in us because they know it has a future and for a lot of these people that we're working with you know the",
    "start": "3581769",
    "end": "3587319"
  },
  {
    "text": "amount of money involved is not great for them but it has the potential to really you know produces sort of",
    "start": "3587319",
    "end": "3592929"
  },
  {
    "text": "longer-term benefits down the road so they that's why they invest I'm not really sure what more details I could",
    "start": "3592929",
    "end": "3597939"
  },
  {
    "text": "give you in a public setting I mean we",
    "start": "3597939",
    "end": "3606999"
  },
  {
    "text": "really do kind of look all across the board we very rarely do just like a pure hardware sale or a pure software sale",
    "start": "3606999",
    "end": "3612309"
  },
  {
    "text": "there's usually consulting services kind of bundled with it so a lot of our clients because they're tiptoeing into the water on a new thing",
    "start": "3612309",
    "end": "3617979"
  },
  {
    "text": "right so it's not something where I can just drop a box off at your door and let you work with it so generally speaking",
    "start": "3617979",
    "end": "3624309"
  },
  {
    "text": "it's kind of a three-prong we sell the hardware we sell the software we sell the service of porting things into the",
    "start": "3624309",
    "end": "3632109"
  },
  {
    "text": "software what we're finding is that's becoming less a part of the business because we're now getting to a critical",
    "start": "3632109",
    "end": "3637869"
  },
  {
    "text": "mass where more people are wanting to do it themselves we now have a lot of clients there saying no teach us how to do it give us the box but our",
    "start": "3637869",
    "end": "3644439"
  },
  {
    "text": "proprietary business logic we don't want to give you we want to do that on our own and own it and have the knowledge developed in-house to maintain it that's",
    "start": "3644439",
    "end": "3651459"
  },
  {
    "text": "something that's happened more recently so the business has always been kind of a mix of hardware software and consulting services really really all",
    "start": "3651459",
    "end": "3658749"
  },
  {
    "text": "three and it's very rare that we sell one without the other two far cry from",
    "start": "3658749",
    "end": "3668109"
  },
  {
    "text": "the ordinary actuary I work with a lot",
    "start": "3668109",
    "end": "3675880"
  },
  {
    "text": "of really smart people it's best to make me look good no I got into this because",
    "start": "3675880",
    "end": "3682469"
  },
  {
    "text": "'men working in finance I had started GPUs that started to get very popular in finance it's becoming kind of a there's a lot of",
    "start": "3682469",
    "end": "3693210"
  },
  {
    "text": "sort of technically unsophisticated people trying to do sophisticated things that can get it can be frustrating so I looked at it and I said I want to get on",
    "start": "3693210",
    "end": "3699750"
  },
  {
    "text": "the next technology that's not crowded and that's right oh is this I said I want to find a company that is using a",
    "start": "3699750",
    "end": "3705510"
  },
  {
    "text": "technology that nobody else is using in a really experimental cutting-edge way in finance and we do have a very",
    "start": "3705510",
    "end": "3712050"
  },
  {
    "text": "substantial finance business so that's really how I got eaten to into the organization but I've always been a kind",
    "start": "3712050",
    "end": "3718200"
  },
  {
    "text": "of amateur hacker in one way or another and I've carried that in every professional languages since the early",
    "start": "3718200",
    "end": "3727230"
  },
  {
    "text": "eighties I'm sort of curious for instance if you guys have like used I up",
    "start": "3727230",
    "end": "3733080"
  },
  {
    "text": "one and I f2 is intermediate forms I'm not yeah Livermore this little company",
    "start": "3733080",
    "end": "3741060"
  },
  {
    "text": "called digital equipment at one point in time in Colorado State they heard that need a disciple programming language",
    "start": "3741060",
    "end": "3748050"
  },
  {
    "text": "which was a very interesting language in many respects but the problem was it just it simply could not compete with",
    "start": "3748050",
    "end": "3755130"
  },
  {
    "text": "the mass of existing code yeah and that's independent of this two",
    "start": "3755130",
    "end": "3762000"
  },
  {
    "text": "different lines of work done at MIT before and one of whom I was trying to get to come here because it's not",
    "start": "3762000",
    "end": "3768000"
  },
  {
    "text": "Carnegie Mellon or Carnegie photography Belt independent the data flows so",
    "start": "3768000",
    "end": "3775220"
  },
  {
    "text": "there's all kinds of interesting things that you know people did build data flowing hardware and friends as mine",
    "start": "3775220",
    "end": "3783000"
  },
  {
    "text": "locally have run on data flow machines and they ran into all kinds of interesting questions that were not",
    "start": "3783000",
    "end": "3788090"
  },
  {
    "text": "really resolved I'm like you know structures and all kinds of other stuff",
    "start": "3788090",
    "end": "3793710"
  },
  {
    "text": "like that like if you want to find really one element of a same array as",
    "start": "3793710",
    "end": "3800010"
  },
  {
    "text": "example does that then invalidate the whole array they have not thought about",
    "start": "3800010",
    "end": "3805710"
  },
  {
    "text": "that clients like sort of we've tried it",
    "start": "3805710",
    "end": "3812880"
  },
  {
    "text": "right but we've never actually gotten it to produce a number that works and a lot of times that's to convey that we bring",
    "start": "3812880",
    "end": "3817980"
  },
  {
    "text": "in is that you know because we've just really gone do after doing this for 13 years and started knocking around all",
    "start": "3817980",
    "end": "3824220"
  },
  {
    "text": "the things that do and don't work there's a lot of just really practical knowledge built into the compiler so",
    "start": "3824220",
    "end": "3830460"
  },
  {
    "text": "that you know we make it to the point where yes people can actually get numbers at work out of simple code you",
    "start": "3830460",
    "end": "3838710"
  },
  {
    "text": "realize that one of the major benchmarks was named simple and in fact it was my",
    "start": "3838710",
    "end": "3849450"
  },
  {
    "text": "understanding which is in the problem",
    "start": "3849450",
    "end": "3872610"
  },
  {
    "text": "spaces using up cycles that would actually be interesting to compile it",
    "start": "3872610",
    "end": "3882150"
  },
  {
    "text": "into raw hardware and I think that would be interesting on everything it's more a",
    "start": "3882150",
    "end": "3887580"
  },
  {
    "text": "matter of money right like that's it's yeah you're talking about like building an ASIC from it right there's nothing",
    "start": "3887580",
    "end": "3898710"
  },
  {
    "text": "about you know the hardware necessarily I think it'd be interesting to that in every case but most people are not looking to spend tens of millions of",
    "start": "3898710",
    "end": "3905250"
  },
  {
    "text": "dollars to put out a chip and the advantage really is is is you know the",
    "start": "3905250",
    "end": "3910710"
  },
  {
    "text": "way I always sell this to people is its speed the speed of hardware not not as good as an ASIC obviously because",
    "start": "3910710",
    "end": "3916890"
  },
  {
    "text": "nothing's gonna beat an ASIC but it's very close in some ways the speed of hardware at the design speed of software",
    "start": "3916890",
    "end": "3923100"
  },
  {
    "text": "and most people still need that design speed they still need that ability to especially like I should say a finance client they introduce a new product or",
    "start": "3923100",
    "end": "3929910"
  },
  {
    "text": "there's a new twist on some derivative and they need to change one little thing in a model I can't do that if I already",
    "start": "3929910",
    "end": "3936480"
  },
  {
    "text": "have the gem right but I can do that really easily if I'm doing everything in software and the only real time",
    "start": "3936480",
    "end": "3941850"
  },
  {
    "text": "intensive part is the place in round you know that which I if I have a good simulator I shouldn't only be doing once",
    "start": "3941850",
    "end": "3948240"
  },
  {
    "text": "right I basically do that when I know it's going to work and then it's more a matter of just figuring out all the issues in place and route like what",
    "start": "3948240",
    "end": "3954109"
  },
  {
    "text": "frequency and how to optimize the resources and things like that yes I'm kind of curious so my understanding is",
    "start": "3954109",
    "end": "3960349"
  },
  {
    "text": "everybody who's coming to you that's something that they're already doing and they now want to do you in your",
    "start": "3960349",
    "end": "3967999"
  },
  {
    "text": "experience of the people coming to you been coming to you with mostly CPU code",
    "start": "3967999",
    "end": "3973670"
  },
  {
    "text": "or um we see a mix of both I mean",
    "start": "3973670",
    "end": "3980210"
  },
  {
    "text": "obviously my preferred starting point is going to be CPU code because I'm not going to keep most of it anyway right I",
    "start": "3980210",
    "end": "3985309"
  },
  {
    "text": "mean I'm gonna need to really understand what it's doing to map it into a different paradigm and I'd rather do",
    "start": "3985309",
    "end": "3991670"
  },
  {
    "text": "that without the overhead of figuring out the just multi-core and the way the parallelization works among the threads",
    "start": "3991670",
    "end": "3997130"
  },
  {
    "text": "and all that it's just easier to figure it out but so for example there is a GPU version of core espresso there's a CUDA",
    "start": "3997130",
    "end": "4004539"
  },
  {
    "text": "accelerated version and I haven't really looked at it right because the way that",
    "start": "4004539",
    "end": "4010239"
  },
  {
    "text": "you would structure it's completely different first of all you'd use a library which I didn't use but you know",
    "start": "4010239",
    "end": "4015519"
  },
  {
    "text": "like I said you'd start by moving everything into memory and working on it in pieces and batches and it's a completely different paradigm the way",
    "start": "4015519",
    "end": "4020589"
  },
  {
    "text": "we're doing it actually what's interesting is the vast majority of my code if you look at the code the FFT is a tiny little part because I pulled that",
    "start": "4020589",
    "end": "4026680"
  },
  {
    "text": "out of a library we already had FFT built I had FFT done all six of the FFT is done the very first day it's one line",
    "start": "4026680",
    "end": "4032559"
  },
  {
    "text": "of code each very simple the tricky part is the sphere in the circle that's the tricky part right because you're moving",
    "start": "4032559",
    "end": "4038529"
  },
  {
    "text": "through that cube you hit the sphere and you get entered at different points and you come out of it at different points",
    "start": "4038529",
    "end": "4045069"
  },
  {
    "text": "and you have to keep all that in memory",
    "start": "4045069",
    "end": "4048059"
  },
  {
    "text": "[Music]",
    "start": "4050120",
    "end": "4053210"
  },
  {
    "text": "right and so for example with some of these the GPU accelerated that's that's a problem because GPUs like their memory",
    "start": "4056789",
    "end": "4062440"
  },
  {
    "text": "to be nice and rectangular right they like it to be nice big blocks so yeah so it for us",
    "start": "4062440",
    "end": "4068499"
  },
  {
    "text": "we think of it more as you know imagine I've got a cube and I got a sphere in the cube and I'm moving through it like an ant crawling through it cell by cell",
    "start": "4068499",
    "end": "4074200"
  },
  {
    "text": "when do I pop in and out of the sphere and I have to know all of the different dimensions of all the different points",
    "start": "4074200",
    "end": "4079210"
  },
  {
    "text": "of the sphere to be able to do that that's really where all of the real work was and none of that has any analog in",
    "start": "4079210",
    "end": "4085690"
  },
  {
    "text": "CPU or GPU or anything else and I'm starting with code it's easier for me to look at code that's really basic and says this does an FFT and",
    "start": "4085690",
    "end": "4091920"
  },
  {
    "text": "start from that but yeah we have clients that come to us generally speaking I",
    "start": "4091920",
    "end": "4100318"
  },
  {
    "text": "mean they're more likely to come with CPU code because they're more likely than to need performance right they're",
    "start": "4100319",
    "end": "4105480"
  },
  {
    "text": "more likely to have a problem that whereas you know if they've invested the money in a GPU project okay maybe I don't have the performance I want but I",
    "start": "4105480",
    "end": "4111420"
  },
  {
    "text": "put a lot of money in it it's already better and maybe I don't want to do any better than that but it's easier if you're starting from",
    "start": "4111420",
    "end": "4116940"
  },
  {
    "text": "far behind it's also easier if you come in with few assumptions the best things are the clients that come in and say I know what I want in a quant qualitative",
    "start": "4116940",
    "end": "4124318"
  },
  {
    "text": "sense right I need a picture that makes sense so for our seismic modeling people for example I need a picture of the oil",
    "start": "4124319",
    "end": "4130980"
  },
  {
    "text": "field that physically makes sense right I don't need 64-bit precision I don't",
    "start": "4130980",
    "end": "4136350"
  },
  {
    "text": "actually need to know that that'll that read is read you know 100 point oh woah oh 1 instead of 100 point oh oh - you",
    "start": "4136350",
    "end": "4143338"
  },
  {
    "text": "know it's red right it's it's I'm going to make a quantitative qualitative decision those are the best coins right",
    "start": "4143339",
    "end": "4149730"
  },
  {
    "text": "because those are people we can come in and say let's open up your algorithm open up your thinking talk about precision talk about maximizing your",
    "start": "4149730",
    "end": "4155639"
  },
  {
    "text": "qualitative result for the minimum amount of compute time and energy in space so so what's nice about anybody",
    "start": "4155639",
    "end": "4172440"
  },
  {
    "text": "else we actually partnered with them on that we had sort of they've been talking to us long before that was announced so",
    "start": "4172440",
    "end": "4178170"
  },
  {
    "text": "AWS has released an f1 instance I think right now it's only available in the US",
    "start": "4178170",
    "end": "4183508"
  },
  {
    "text": "region I'm not sure that that instance is the same chip as what we were using",
    "start": "4183509",
    "end": "4189500"
  },
  {
    "text": "it is not exactly the same the whole board because Amazon likes to do things",
    "start": "4189500",
    "end": "4194909"
  },
  {
    "text": "like protect their PCIe pins you don't want you don't want to give someone raw access to PCIe pins in a data center",
    "start": "4194909",
    "end": "4201210"
  },
  {
    "text": "that's a really bad idea but the idea is the same so we're not quite there yet",
    "start": "4201210",
    "end": "4206820"
  },
  {
    "text": "but it should be happening in the next month or two where we'll have now a version of the compiler that would compile for f1 so you'll take that data",
    "start": "4206820",
    "end": "4213330"
  },
  {
    "text": "flow it's the same max J it's just you'll flip a switch here and there to say I'm compiling for a different",
    "start": "4213330",
    "end": "4218850"
  },
  {
    "text": "architecture I believe Amazon's as you send them the VHDL and they build the the FPGA image off it but we will",
    "start": "4218850",
    "end": "4226980"
  },
  {
    "text": "have the the ability to run pretty much anything that's run on the latest generation of hardware should be pretty",
    "start": "4226980",
    "end": "4232110"
  },
  {
    "text": "easily portable into AWS and that's coming probably in the next month or so",
    "start": "4232110",
    "end": "4237980"
  },
  {
    "text": "if you're a student or if you're not a student we usually go to dinner afterwards and I'm hungry so as am I",
    "start": "4240110",
    "end": "4250308"
  },
  {
    "text": "you",
    "start": "4259030",
    "end": "4261090"
  }
]