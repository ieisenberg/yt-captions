[
  {
    "text": "right now what yeah okay ah you can tell",
    "start": "2280",
    "end": "7680"
  },
  {
    "text": "Mike sign when you hear the feedback uh welcome to uh the 10th Annual Christmas",
    "start": "7680",
    "end": "12840"
  },
  {
    "text": "tree lecture I I just decided to start because uh 10 seconds had gone by and",
    "start": "12840",
    "end": "18539"
  },
  {
    "text": "nobody coming through the door but now all of a sudden more people are coming through the door well that's okay I'll but um I'll just talk about about silly",
    "start": "18539",
    "end": "25619"
  },
  {
    "text": "things at the beginning um this is the you know today we have uh",
    "start": "25619",
    "end": "30960"
  },
  {
    "text": "co-sponsors not only as computer musings but it's also it's also sponsored by Stanford's um",
    "start": "30960",
    "end": "37500"
  },
  {
    "text": "uh computer Forum um America's lecture Series so we're killing two birds of one stone actually",
    "start": "37500",
    "end": "43379"
  },
  {
    "text": "actually three or four birds with with one stone because I'm also celebrating today the the 35th anniversary of the",
    "start": "43379",
    "end": "50280"
  },
  {
    "text": "art of computer programming the uh which started to come out in 1968 and and uh",
    "start": "50280",
    "end": "57620"
  },
  {
    "text": "you know I'm the 30th the 30th anniversary of volume three which was the last one I got finished we just came",
    "start": "57620",
    "end": "63420"
  },
  {
    "text": "out in 1973 so anyway it um uh so in the Christmas spirit uh I decided",
    "start": "63420",
    "end": "71520"
  },
  {
    "text": "uh to bring a couple of spare copies of volumes one two and three and uh and those will go to the the people who ask",
    "start": "71520",
    "end": "77760"
  },
  {
    "text": "the best three questions uh right so so but not just random questions like yeah",
    "start": "77760",
    "end": "84000"
  },
  {
    "text": "but anyway uh I don't mind people asking questions um this is uh they said this was the",
    "start": "84000",
    "end": "90540"
  },
  {
    "text": "annual Christmas tree lecture it's uh something we started a while ago and the idea is that every year about this time",
    "start": "90540",
    "end": "97740"
  },
  {
    "text": "I I um I've been talking about uh the most cool thing I learned about trees",
    "start": "97740",
    "end": "102780"
  },
  {
    "text": "during the year and so today I'm going to be talking about uh something that that I learned in July",
    "start": "102780",
    "end": "109979"
  },
  {
    "text": "and played around with a little bit at the beginning of August um and uh it's it goes back really to",
    "start": "109979",
    "end": "116159"
  },
  {
    "text": "things that I learned as undergraduate in my circuits lab uh the the basic idea",
    "start": "116159",
    "end": "121740"
  },
  {
    "text": "of of spanning trees and it in fact the the first uh on the very first if not the first",
    "start": "121740",
    "end": "128520"
  },
  {
    "text": "appearance of trees in the mathematical literature was the famous paper like by",
    "start": "128520",
    "end": "133739"
  },
  {
    "text": "kirchhoff uh I think 1840s uh where he uh where he based a lot of theory about",
    "start": "133739",
    "end": "140940"
  },
  {
    "text": "about circuits um uh on the idea of spanning trees and",
    "start": "140940",
    "end": "146520"
  },
  {
    "text": "people you know electrical engineers have had to learn kirkoff's laws ever since so um uh I guess I start out by",
    "start": "146520",
    "end": "154140"
  },
  {
    "text": "telling you what oh this is the first time though since I have so many sponsors the first time I've ever had a lecture with three different posters",
    "start": "154140",
    "end": "159300"
  },
  {
    "text": "announcing it so so so um anyway um",
    "start": "159300",
    "end": "165319"
  },
  {
    "text": "there'll be lots of souvenirs at the end okay um spanning tree is",
    "start": "165319",
    "end": "171780"
  },
  {
    "text": "uh is this we start with a graph and we and and a graphic I think we have you",
    "start": "171780",
    "end": "179340"
  },
  {
    "text": "have to know what a graph is but uh it's a bunch of it's a bunch of points called vertices and a bunch of uh of connections between",
    "start": "179340",
    "end": "187800"
  },
  {
    "text": "those called edges or arcs and in the announcement of of today's lecture uh I",
    "start": "187800",
    "end": "195840"
  },
  {
    "text": "have just one example graph here with with six vertices and I might as well",
    "start": "195840",
    "end": "202319"
  },
  {
    "text": "make those red huh since actually it's orange there so and and uh and I",
    "start": "202319",
    "end": "209220"
  },
  {
    "text": "connected them up very simply with uh uh making it into triangles",
    "start": "209220",
    "end": "218239"
  },
  {
    "text": "and then uh but now in order to have a spanning tree you have to have a subset of those edges",
    "start": "218700",
    "end": "225000"
  },
  {
    "text": "uh I have to have a subset of the edges that connects up all the points so if I",
    "start": "225000",
    "end": "231420"
  },
  {
    "text": "got six points I'm going to need to choose five edges in order in order to connect them all up and one way to do",
    "start": "231420",
    "end": "236940"
  },
  {
    "text": "that of course is um well I got to connect this to one of the two so I can go there",
    "start": "236940",
    "end": "243420"
  },
  {
    "text": "uh well I could also actually connect it to that one and then from there I could",
    "start": "243420",
    "end": "248459"
  },
  {
    "text": "connect say to there and uh maybe over here and then I to get this guy come",
    "start": "248459",
    "end": "254580"
  },
  {
    "text": "come either way so let's say I went there so that's a spanning tree um and all the spanning trees on a graph",
    "start": "254580",
    "end": "262440"
  },
  {
    "text": "were important when kickoff wanted to study electrical circuits that were hooked together in this way now uh on",
    "start": "262440",
    "end": "268320"
  },
  {
    "text": "this poster that announced a lecture it turns out that as you've seen many",
    "start": "268320",
    "end": "273900"
  },
  {
    "text": "different spanning trees of this of this uh same six point graph",
    "start": "273900",
    "end": "280500"
  },
  {
    "text": "um in fact uh well this one Auto appears somewhere it sort of wraps around there so so where do I find that one",
    "start": "280500",
    "end": "286979"
  },
  {
    "text": "hope it's on here",
    "start": "286979",
    "end": "290120"
  },
  {
    "text": "here it is good okay we got it so there's it turns out there's there's 54",
    "start": "294660",
    "end": "299820"
  },
  {
    "text": "spanning cues of this graph and uh uh and that's not a triangular number so I added a star at the top uh and so we got",
    "start": "299820",
    "end": "307740"
  },
  {
    "text": "uh but there are but they all they all appear here but there's more to it than that because if you look there's a",
    "start": "307740",
    "end": "314400"
  },
  {
    "text": "little there's a little thread connecting these guys uh going like this and each one if you",
    "start": "314400",
    "end": "321720"
  },
  {
    "text": "go from one scanning tree to the next it it's as close as possible to the previous one in the sense that only one",
    "start": "321720",
    "end": "327780"
  },
  {
    "text": "of the links has changed so so in order to get from here to here I I deleted",
    "start": "327780",
    "end": "333180"
  },
  {
    "text": "you know I deleted this guy and added the one at the bottom to go from here to here I deleted one more and added another one and so all you know all 54",
    "start": "333180",
    "end": "340080"
  },
  {
    "text": "are connected by this by this thread in this way so okay",
    "start": "340080",
    "end": "345360"
  },
  {
    "text": "um I I had this on my computer a month ago and and my wife walked in and said hey let's use this on our Christmas card",
    "start": "345360",
    "end": "352080"
  },
  {
    "text": "this year so so there we are um now uh",
    "start": "352080",
    "end": "357780"
  },
  {
    "text": "I put on the web a bunch of computer programs so that you can play with the ideas that I'm going to be discussing",
    "start": "357780",
    "end": "363720"
  },
  {
    "text": "today so I'm going to talk about a couple of algorithms that will that are nice ways",
    "start": "363720",
    "end": "369960"
  },
  {
    "text": "I think beautiful ways to go through and find all the spanning trees and it also",
    "start": "369960",
    "end": "375180"
  },
  {
    "text": "in this way that that there's a there's a small change from one to the other because if you ever have a problem where you want to look at all spanning trees",
    "start": "375180",
    "end": "381539"
  },
  {
    "text": "it's usually you can save time if you if you uh uh whatever you're doing on the",
    "start": "381539",
    "end": "387900"
  },
  {
    "text": "whole set of spank trees you're probably uh it doesn't have to change much between one and the other if only one of",
    "start": "387900",
    "end": "393060"
  },
  {
    "text": "the edges of the Spanish trees is changing at a time um so uh um so so I've got these uh like",
    "start": "393060",
    "end": "401460"
  },
  {
    "text": "you know I've got these methods I'm going to explain and also the computer programs are on the web if you just go",
    "start": "401460",
    "end": "406919"
  },
  {
    "text": "to my home page I'm very lucky that I uh on most days this year I I have a three",
    "start": "406919",
    "end": "412919"
  },
  {
    "text": "a three letter Google you just go to Google and say Don and and and you get",
    "start": "412919",
    "end": "418319"
  },
  {
    "text": "my homepage so that's so I don't have to tell you that so I don't have to tell anybody my URL now and uh and uh and",
    "start": "418319",
    "end": "425460"
  },
  {
    "text": "then you and then you you click under downloadable programs and you find programs about Spanish trees that I'm",
    "start": "425460",
    "end": "430680"
  },
  {
    "text": "talking about and so if you want to play with any of this stuff it's it's it's going to be easy to do and let me show",
    "start": "430680",
    "end": "436979"
  },
  {
    "text": "you first um one of the programs oh okay yeah I put",
    "start": "436979",
    "end": "443759"
  },
  {
    "text": "it here um uh so what is called SP span so if I type SP span then you get a usage",
    "start": "443759",
    "end": "449759"
  },
  {
    "text": "message that says what you should do is is uh",
    "start": "449759",
    "end": "455360"
  },
  {
    "text": "uh oh oh I'm getting ahead of my story uh you're supposed to give a formula and then you have some other some other",
    "start": "455360",
    "end": "461580"
  },
  {
    "text": "products let me talk first let me talk about about um uh special kind of graphs for which the",
    "start": "461580",
    "end": "468780"
  },
  {
    "text": "algorithm is particularly pretty and that is called the series parallel",
    "start": "468780",
    "end": "473940"
  },
  {
    "text": "Network in fact uh I guess if black shows up better although it is green is",
    "start": "473940",
    "end": "479759"
  },
  {
    "text": "a good very Christmas color so serious parallel networks and that's what SP stands for",
    "start": "479759",
    "end": "485880"
  },
  {
    "text": "and uh again is something I had to learn when I was when I was a",
    "start": "485880",
    "end": "493500"
  },
  {
    "text": "sophomore so uh the uh the idea of a serious parallel",
    "start": "493500",
    "end": "500819"
  },
  {
    "text": "network is very simple we um uh it's a way to to connect a source",
    "start": "500819",
    "end": "506639"
  },
  {
    "text": "to it uh you know a source to a a terminal to a destination terminal or",
    "start": "506639",
    "end": "512459"
  },
  {
    "text": "just uh let's say two terminals u and v and one of the simplest simple series parallel network is just the one that",
    "start": "512459",
    "end": "519539"
  },
  {
    "text": "connects U to V it has only one Edge in it so that there's a serious curl network uh",
    "start": "519539",
    "end": "525980"
  },
  {
    "text": "or if you have uh several uh series",
    "start": "525980",
    "end": "531120"
  },
  {
    "text": "parallel networks uh say somehow between U1 and V1 U2 and V2",
    "start": "531120",
    "end": "538320"
  },
  {
    "text": "uh use UK and VK then you can",
    "start": "538320",
    "end": "544680"
  },
  {
    "text": "you you can connect them in series uh and so that means that you that you say V1 and",
    "start": "544680",
    "end": "552120"
  },
  {
    "text": "U2 are the same vertex V2 and u3 and you join them up like this so so the series",
    "start": "552120",
    "end": "557640"
  },
  {
    "text": "connection is to you know U1 V1",
    "start": "557640",
    "end": "562800"
  },
  {
    "text": "um uh well let's well let's see uh V2",
    "start": "562800",
    "end": "568140"
  },
  {
    "text": "if this is equals U2 and V2 equals u3 and so on and and",
    "start": "568140",
    "end": "575459"
  },
  {
    "text": "finally we get to the N at V K and here we had a UK and K minus one uh",
    "start": "575459",
    "end": "582959"
  },
  {
    "text": "so now these these aren't but between U and V1 it isn't just just an edge it's",
    "start": "582959",
    "end": "588959"
  },
  {
    "text": "any series parallel Network between you you want a V1 so it could it could be an edge but it but it also could be a super",
    "start": "588959",
    "end": "595620"
  },
  {
    "text": "Edge a super Edge being anything I've already",
    "start": "595620",
    "end": "601140"
  },
  {
    "text": "defined as a serious control Network and the other thing of course is the parallel connection where where we see",
    "start": "601140",
    "end": "607260"
  },
  {
    "text": "that U1 equal U2 all the U's are equal and all of these are equal",
    "start": "607260",
    "end": "613500"
  },
  {
    "text": "and we just uh and we just you know hook hook them all",
    "start": "613500",
    "end": "620640"
  },
  {
    "text": "up like that so um",
    "start": "620640",
    "end": "625339"
  },
  {
    "text": "this this guy I showed here is actually a special case of a serious parallel",
    "start": "625680",
    "end": "631740"
  },
  {
    "text": "Network um in in many ways but um let's see if",
    "start": "631740",
    "end": "638040"
  },
  {
    "text": "we can if we can find at least one of them of all the empty set images what",
    "start": "638040",
    "end": "643560"
  },
  {
    "text": "you disallow the empty set of engines the empty set of edges is not a serious parallel Network yeah",
    "start": "643560",
    "end": "650040"
  },
  {
    "text": "sorry this is this was it though much much better so so you have a you you have a grammar uh that",
    "start": "650040",
    "end": "657959"
  },
  {
    "text": "um in fact you can you can reduce it to the case where you're combining only two things in series or two things in",
    "start": "657959",
    "end": "663360"
  },
  {
    "text": "parallel uh and and we'll see a grammar for it but in a minute but uh uh so",
    "start": "663360",
    "end": "670380"
  },
  {
    "text": "let's let's see if I can get at least one triangle out of this you see a theater triangle",
    "start": "670380",
    "end": "676920"
  },
  {
    "text": "um that's that's simply a series this is a series Network here and then and",
    "start": "676920",
    "end": "682920"
  },
  {
    "text": "here's here's another one and so putting those two in parallel I get this triangle okay call this u in this V",
    "start": "682920",
    "end": "690180"
  },
  {
    "text": "um and um and uh since Bond asked his question he's just trying to get one of these",
    "start": "690180",
    "end": "695880"
  },
  {
    "text": "books I know um actually uh the limit of five questions",
    "start": "695880",
    "end": "702779"
  },
  {
    "text": "per person okay okay all right but",
    "start": "702779",
    "end": "709920"
  },
  {
    "text": "um uh so uh in fact Let me let me uh",
    "start": "709920",
    "end": "715160"
  },
  {
    "text": "sort of say that Dash is is a serious problem let me give a grammar for a",
    "start": "715160",
    "end": "720779"
  },
  {
    "text": "series called networks because that's what what's used as the input to the SG span program so a series parallel",
    "start": "720779",
    "end": "726120"
  },
  {
    "text": "Network which I might call n um uh is it is he is he either equal to",
    "start": "726120",
    "end": "736079"
  },
  {
    "text": "um a minus sign or a or or or or two ends followed by",
    "start": "736079",
    "end": "743100"
  },
  {
    "text": "the letter s or two ends followed by the letter p or where",
    "start": "743100",
    "end": "748620"
  },
  {
    "text": "so in other words uh minus minus s represents a network which means two",
    "start": "748620",
    "end": "754680"
  },
  {
    "text": "guys in in series minus minus P represents a network which",
    "start": "754680",
    "end": "760380"
  },
  {
    "text": "is two guys in parallel and then if I say minus minus s minus P that would be this guy in",
    "start": "760380",
    "end": "769980"
  },
  {
    "text": "parallel with one more okay and if or if I said minus minus minus SP",
    "start": "769980",
    "end": "776700"
  },
  {
    "text": "that would mean that that this that we take this one and we hook uh and we hook it we hook another one in parallel on",
    "start": "776700",
    "end": "783300"
  },
  {
    "text": "top of it okay so if uh if I if I drew this one upside down I",
    "start": "783300",
    "end": "790139"
  },
  {
    "text": "would call it minus muscle anyway that's the formula for the triangle and now if I want to add another triangle to that",
    "start": "790139",
    "end": "797279"
  },
  {
    "text": "um uh that's easy that's just another another thing in series so I have minus",
    "start": "797279",
    "end": "803339"
  },
  {
    "text": "minus well minus minus s minus P for example and then minus minus s minus P",
    "start": "803339",
    "end": "808680"
  },
  {
    "text": "for this triangle um and then hook them in series so that means putting this after that",
    "start": "808680",
    "end": "815339"
  },
  {
    "text": "and then uh uh okay but now I want that to be let's call this u and v now and then I want",
    "start": "815339",
    "end": "822300"
  },
  {
    "text": "you know to put in parallel another guy here so let's uh let's put a minus minus",
    "start": "822300",
    "end": "827880"
  },
  {
    "text": "s minus p and another p and that and that would hook them together so uh so anyway there's a",
    "start": "827880",
    "end": "833519"
  },
  {
    "text": "uh a lot of networks can be uh can be",
    "start": "833519",
    "end": "838620"
  },
  {
    "text": "regarded as as serious parallel Network um and uh enough of them to be",
    "start": "838620",
    "end": "845519"
  },
  {
    "text": "interesting and uh so uh so I got this program SP span where I give a formula",
    "start": "845519",
    "end": "850620"
  },
  {
    "text": "and the formula that another formula for the same three the one that I actually used",
    "start": "850620",
    "end": "855959"
  },
  {
    "text": "is it here and the computer was uh it was this uh three minuses SP 3 minus",
    "start": "855959",
    "end": "863579"
  },
  {
    "text": "s p minus SP and another SP to hook everything together now um uh and so what my computer replied",
    "start": "863579",
    "end": "871200"
  },
  {
    "text": "was it said it it said there were 54 spanning trees and it also told how long",
    "start": "871200",
    "end": "877440"
  },
  {
    "text": "it took to do the calculation uh now uh a lot of times when I'm instrumenting my",
    "start": "877440",
    "end": "884100"
  },
  {
    "text": "programs now to find out how good the algorithm is I count memory references because the way computers are going uh",
    "start": "884100",
    "end": "890579"
  },
  {
    "text": "the memory references are the things that are much more important than anything else and and if I just count microseconds it means nothing uh next",
    "start": "890579",
    "end": "897839"
  },
  {
    "text": "year so so but mems are something that are going to stay the same uh while I continue writing my books so uh so uh",
    "start": "897839",
    "end": "905880"
  },
  {
    "text": "the the experiments that I make now I I you know so I got algorithms and I rate",
    "start": "905880",
    "end": "910980"
  },
  {
    "text": "them by by memory references and uh and this particular one took 117 uh mems to",
    "start": "910980",
    "end": "919199"
  },
  {
    "text": "get get you know to get going and then uh 879 more uh and it found 54 spanning",
    "start": "919199",
    "end": "926940"
  },
  {
    "text": "trees good that's the that's the right number okay now uh if I add another",
    "start": "926940",
    "end": "933139"
  },
  {
    "text": "another uh thing to my command line uh so I said verbose then it it tells me",
    "start": "933380",
    "end": "941399"
  },
  {
    "text": "you know what what this what what the trees are this first Spanish tree is acfgi well you have to know what that what acfgi means",
    "start": "941399",
    "end": "949860"
  },
  {
    "text": "um and the convention is that SP",
    "start": "949860",
    "end": "954839"
  },
  {
    "text": "minus SP minus minus minus spsb the convention is that the letters a b c d",
    "start": "954959",
    "end": "961380"
  },
  {
    "text": "are are in order are used to denote the the",
    "start": "961380",
    "end": "966839"
  },
  {
    "text": "edges that we're starting with uh I mean the the basic edges and then uh uh so",
    "start": "966839",
    "end": "974880"
  },
  {
    "text": "actually you know this note this notation allows us to build a tree get that trees uh where we have a and b",
    "start": "974880",
    "end": "983399"
  },
  {
    "text": "and c and and this s joins B and C and",
    "start": "983399",
    "end": "988500"
  },
  {
    "text": "and then uh actually I call that capital a uh the first all these all the s PS",
    "start": "988500",
    "end": "995820"
  },
  {
    "text": "are gonna are going to uh uh be um",
    "start": "995820",
    "end": "1002300"
  },
  {
    "text": "given capital letter and then and then in parallel we we connect these so that's B",
    "start": "1002300",
    "end": "1009740"
  },
  {
    "text": "and then I form d e f the same way so that'll be C and D",
    "start": "1009740",
    "end": "1015920"
  },
  {
    "text": "coming here and uh ghi the same way not e f",
    "start": "1015920",
    "end": "1023980"
  },
  {
    "text": "uh and then connect in series uh the first two well the last two sorry and so",
    "start": "1024140",
    "end": "1031819"
  },
  {
    "text": "this is G and then finally h so so this is a you know this big tree",
    "start": "1031819",
    "end": "1037938"
  },
  {
    "text": "represents a series parallelogram a series parallel Network there's plenty of good seats on the uh",
    "start": "1037939",
    "end": "1044178"
  },
  {
    "text": "on the edges and in the front uh guys so",
    "start": "1044179",
    "end": "1050740"
  },
  {
    "text": "um and uh so AC fgi",
    "start": "1051380",
    "end": "1058760"
  },
  {
    "text": "um it turns out is going to be one of these um you know you know the the first one at",
    "start": "1059120",
    "end": "1066200"
  },
  {
    "text": "the top at the top of my top of my page there and then um and then uh it tells",
    "start": "1066200",
    "end": "1072080"
  },
  {
    "text": "me oh in my computer output um tells me then uh to get the next one",
    "start": "1072080",
    "end": "1077660"
  },
  {
    "text": "you you add H and delete I and then you you take away G and put I back in and",
    "start": "1077660",
    "end": "1083059"
  },
  {
    "text": "and so on if they keep flashing back and forth and so so so these instructions are the what what I used to generate the",
    "start": "1083059",
    "end": "1088820"
  },
  {
    "text": "the pictures that were on the announcement of the Page by the way uh",
    "start": "1088820",
    "end": "1093880"
  },
  {
    "text": "uh Julian from the computer Forum made me this this great this great poster so",
    "start": "1093880",
    "end": "1100760"
  },
  {
    "text": "that you can see them all in large size and so",
    "start": "1100760",
    "end": "1107539"
  },
  {
    "text": "uh so here they are okay so um in the uh and in fact what is the",
    "start": "1107539",
    "end": "1114220"
  },
  {
    "text": "what is the code uh the code is a b c",
    "start": "1114220",
    "end": "1122299"
  },
  {
    "text": "the the way I actually did it was D E F this way and then ghi like that",
    "start": "1122299",
    "end": "1131020"
  },
  {
    "text": "um you can't see yeah oh okay so this is the",
    "start": "1131660",
    "end": "1136940"
  },
  {
    "text": "this is the way that this is the correlation between you know between the",
    "start": "1136940",
    "end": "1142039"
  },
  {
    "text": "trees that you see and the and the computer output that I had telling about the tree Yeah question",
    "start": "1142039",
    "end": "1149980"
  },
  {
    "text": "guaranteed request on the graphic presentation always one to one uh",
    "start": "1150500",
    "end": "1156340"
  },
  {
    "text": "there's there's some um ambiguity if I have uh like minus minus",
    "start": "1156340",
    "end": "1163520"
  },
  {
    "text": "minus SS because the because two things in series The the S operator is is associative and",
    "start": "1163520",
    "end": "1171020"
  },
  {
    "text": "and so you could write you know uh you you could have grouped it in different ways minus minus s minus s is the same",
    "start": "1171020",
    "end": "1177380"
  },
  {
    "text": "as minus minus minus um but in this particular case since I always have series alternating with",
    "start": "1177380",
    "end": "1183020"
  },
  {
    "text": "parallel I believe this write it this is a parallel no uh wait a minute I'm sorry",
    "start": "1183020",
    "end": "1190340"
  },
  {
    "text": "um uh this this was a series this was a",
    "start": "1190340",
    "end": "1195919"
  },
  {
    "text": "pair these were series these are all parallel and so this was series but this was parallel so the H and B I should",
    "start": "1195919",
    "end": "1201320"
  },
  {
    "text": "have really put together and I should have made that one glorious",
    "start": "1201320",
    "end": "1206840"
  },
  {
    "text": "one glorious note here uh on top I mean I actually I would I",
    "start": "1206840",
    "end": "1213260"
  },
  {
    "text": "would have combined it into a three oh wait wait H's now this is us",
    "start": "1213260",
    "end": "1218480"
  },
  {
    "text": "this is a series node this is a parallel sorry uh it's getting pretty messy",
    "start": "1218480",
    "end": "1225820"
  },
  {
    "text": "this guy this guy and that guy are all are all really uh let's call it oh I",
    "start": "1225820",
    "end": "1233720"
  },
  {
    "text": "don't know B so we draw it I have I have three guys in parallel at the top",
    "start": "1233720",
    "end": "1239900"
  },
  {
    "text": "and then you know and and then I have B and C here and then I've got um uh under this one I",
    "start": "1239900",
    "end": "1248000"
  },
  {
    "text": "have under yeah",
    "start": "1248000",
    "end": "1253120"
  },
  {
    "text": "okay so d e f g h i",
    "start": "1254840",
    "end": "1260539"
  },
  {
    "text": "and then uh now I think my program actually assigns the capital letters from the top probably instead of from",
    "start": "1260539",
    "end": "1266840"
  },
  {
    "text": "the bottom um but the like the main thing is you can get a tree and and in this form if I",
    "start": "1266840",
    "end": "1274520"
  },
  {
    "text": "if I allow myself to have three-way branching four-way branching um uh the representation is unique uh",
    "start": "1274520",
    "end": "1281660"
  },
  {
    "text": "but I insist now that that I I alternate uh like if I have a parallel at the top",
    "start": "1281660",
    "end": "1287539"
  },
  {
    "text": "then everything on the second level is serious and everything on the third level is parallel again it's strictly alternating",
    "start": "1287539",
    "end": "1295520"
  },
  {
    "text": "um and that turns out to be uh helpful for the speed of the algorithm the algorithm would work if I kept binary",
    "start": "1295520",
    "end": "1301880"
  },
  {
    "text": "structure and didn't didn't suck these two parallels together but it's actually much faster uh to to realize this this",
    "start": "1301880",
    "end": "1308659"
  },
  {
    "text": "this way this branching structure now the um",
    "start": "1308659",
    "end": "1314179"
  },
  {
    "text": "uh so remember we're trying to find all spanning trees and so what does a spanning tree look like on a on a a",
    "start": "1314179",
    "end": "1321380"
  },
  {
    "text": "serious parallel graph well uh it's pretty easy to see what a spanning tree is on the simplest",
    "start": "1321380",
    "end": "1327500"
  },
  {
    "text": "serious parallel graph right it's got one Edge that's the spanning tree you've got to hook those together",
    "start": "1327500",
    "end": "1332600"
  },
  {
    "text": "but now what if we have several things in series you know so we call it these we got these super edges",
    "start": "1332600",
    "end": "1339200"
  },
  {
    "text": "um between certain vertices and uh and there and they're connected in",
    "start": "1339200",
    "end": "1345620"
  },
  {
    "text": "series um uh what does a spanning tree look like",
    "start": "1345620",
    "end": "1352700"
  },
  {
    "text": "in this way well uh I think it's obvious that the only way we're going to get a",
    "start": "1352700",
    "end": "1357799"
  },
  {
    "text": "spanning tree on this is to have a spanning tree in each part in each of the parts that we that we hooked in",
    "start": "1357799",
    "end": "1363799"
  },
  {
    "text": "series because we have to be able to connect everything everything together so that's the way so so recursively if",
    "start": "1363799",
    "end": "1369919"
  },
  {
    "text": "you know how to find a you know a span tree for any serious parallel Network or if you find know how to find all",
    "start": "1369919",
    "end": "1375380"
  },
  {
    "text": "spanning trees of the series crail Network then things are hooked in in series all you have to do is find all",
    "start": "1375380",
    "end": "1381380"
  },
  {
    "text": "spanning trees of each of the guys in series no-brainer now",
    "start": "1381380",
    "end": "1387559"
  },
  {
    "text": "how about if we if we hook them in parallel this gets a little more interesting what are the",
    "start": "1387559",
    "end": "1394520"
  },
  {
    "text": "um uh what did hispanically look like by the way your question count is pretty",
    "start": "1394520",
    "end": "1400100"
  },
  {
    "text": "good so come see me after uh so uh so now what do this pantries look like in",
    "start": "1400100",
    "end": "1405500"
  },
  {
    "text": "this case I I'm gonna have to have a connection from one to the other yeah you've gotta",
    "start": "1405500",
    "end": "1412880"
  },
  {
    "text": "spanning paper the other one is Hispanic tree yeah so so I have to choose one of these four guys and and",
    "start": "1412880",
    "end": "1419120"
  },
  {
    "text": "put a Spanish Tree on in but on the other ones I I've gotta I have to have something",
    "start": "1419120",
    "end": "1425059"
  },
  {
    "text": "that's a little different and I'm going to call it a near spanning tree a near spanning tree is something that's",
    "start": "1425059",
    "end": "1430640"
  },
  {
    "text": "that instead of having instead of connecting everything together it almost",
    "start": "1430640",
    "end": "1437000"
  },
  {
    "text": "connects everything together in the sense that if I added one more Edge between the it it puts everything",
    "start": "1437000",
    "end": "1442460"
  },
  {
    "text": "together everything in the two in the two parts but not three",
    "start": "1442460",
    "end": "1447679"
  },
  {
    "text": "so if you have n n vertices you need n minus two edges uh and no Cycles to make",
    "start": "1447679",
    "end": "1453799"
  },
  {
    "text": "a near spanning tree uh so so uh but I do need the nearest spanning tree on all the other",
    "start": "1453799",
    "end": "1459980"
  },
  {
    "text": "so so um uh to get a near spanning tree then uh okay so to get all the spanning trees",
    "start": "1459980",
    "end": "1466880"
  },
  {
    "text": "of this network what I have to do is run is is run through first of all four possibilities choosing the guy who's",
    "start": "1466880",
    "end": "1472820"
  },
  {
    "text": "going to have the spanning tree and then once I made that choice then I find all new spanning trees on the",
    "start": "1472820",
    "end": "1479120"
  },
  {
    "text": "others and all spanning trees on the one that I've chosen okay but now that's a new Pro that's a new",
    "start": "1479120",
    "end": "1485419"
  },
  {
    "text": "problem I got to figure out how to find new spanning trees of of all these guys okay a new spanning tree of the simplest",
    "start": "1485419",
    "end": "1491600"
  },
  {
    "text": "case is easy no Edge the nearest bank tree of a series is",
    "start": "1491600",
    "end": "1496640"
  },
  {
    "text": "what one you pick one guy and find all near",
    "start": "1496640",
    "end": "1503179"
  },
  {
    "text": "spinning trees of that one and all Spanish trees or the other it's very it's you know so serious is is dual to",
    "start": "1503179",
    "end": "1509419"
  },
  {
    "text": "parallel uh all the things that that you say uh uh about serious and apparently",
    "start": "1509419",
    "end": "1515179"
  },
  {
    "text": "you just turn them upside down you change near spanning to spanning and and and and you got it so because for",
    "start": "1515179",
    "end": "1521000"
  },
  {
    "text": "parallel what are the nearest spanning ones look like they're near spending on all four",
    "start": "1521000",
    "end": "1526279"
  },
  {
    "text": "so to run through all this near spanning of a parallel connection uh you want to run through all new spangs of the of the",
    "start": "1526279",
    "end": "1533059"
  },
  {
    "text": "two things so so once I got this uh this tree structure like this",
    "start": "1533059",
    "end": "1538340"
  },
  {
    "text": "um uh I can actually uh you know sort of say what all the",
    "start": "1538340",
    "end": "1545840"
  },
  {
    "text": "Spanish use are going to look like and and here's what here's what it is I I",
    "start": "1545840",
    "end": "1550880"
  },
  {
    "text": "uh uh I uh let me remind you this is a",
    "start": "1550880",
    "end": "1557240"
  },
  {
    "text": "parallel node at the top level here and a series level and and then parallel in",
    "start": "1557240",
    "end": "1562880"
  },
  {
    "text": "series alternating and let's suppose I want to get um",
    "start": "1562880",
    "end": "1568760"
  },
  {
    "text": "uh I'll put a one up here which means I want a spanning tree um and then I then a zero will mean that",
    "start": "1568760",
    "end": "1577100"
  },
  {
    "text": "I want a a near spanning tree now I'm going to designate",
    "start": "1577100",
    "end": "1583100"
  },
  {
    "text": "um uh one one child of each note in the tree so uh so let me",
    "start": "1583100",
    "end": "1591440"
  },
  {
    "text": "let me for example designate the leftmost child that's the way I get started in this process",
    "start": "1591440",
    "end": "1598279"
  },
  {
    "text": "um and and the idea is that the designated child uh always gets the same value as",
    "start": "1598279",
    "end": "1604580"
  },
  {
    "text": "as the as the parent so a is it gets a value of one",
    "start": "1604580",
    "end": "1611840"
  },
  {
    "text": "um and uh now the other children uh always get the type of the parent",
    "start": "1611840",
    "end": "1620480"
  },
  {
    "text": "um the type of of p is zero and the type of s is one so",
    "start": "1620480",
    "end": "1625760"
  },
  {
    "text": "um uh so I'm so the other children are going to be zero",
    "start": "1625760",
    "end": "1631480"
  },
  {
    "text": "um that's that's my rule for propagating value stop from the top of the tree so",
    "start": "1631580",
    "end": "1637159"
  },
  {
    "text": "how do I get a uh I have this tree and I and at every at",
    "start": "1637159",
    "end": "1643760"
  },
  {
    "text": "every node I designate one of the children uh and and for example I've designated",
    "start": "1643760",
    "end": "1648919"
  },
  {
    "text": "all the left children and now my rule is uh",
    "start": "1648919",
    "end": "1654380"
  },
  {
    "text": "uh copy the value to your designated child and then copy your type to your to",
    "start": "1654380",
    "end": "1660440"
  },
  {
    "text": "your undesignated children so p is of type zero s's of type one so so the the",
    "start": "1660440",
    "end": "1666740"
  },
  {
    "text": "zero is going to go to the designated child here but the type one is is C",
    "start": "1666740",
    "end": "1673220"
  },
  {
    "text": "uh the zero is going to be it's going to go down here to the zero at this node",
    "start": "1673220",
    "end": "1678260"
  },
  {
    "text": "and the type is going to go here one now these are parallel nodes so so uh zero uh is going to pass to the D",
    "start": "1678260",
    "end": "1686539"
  },
  {
    "text": "but the type is going to stay here and then this serial is going to going to be",
    "start": "1686539",
    "end": "1691760"
  },
  {
    "text": "like this if I did it right um the one is a parallel node so it but",
    "start": "1691760",
    "end": "1697940"
  },
  {
    "text": "the G is one but the H is a zero I mean this node is zero and then the H gets a um zero and the I gets uh the type is s",
    "start": "1697940",
    "end": "1705620"
  },
  {
    "text": "is a one so now now the the values at the leaves here are whether or not we",
    "start": "1705620",
    "end": "1710960"
  },
  {
    "text": "include the thing in the spanning tree or not so it's according to this if I did it right a c f g i is supposed to be",
    "start": "1710960",
    "end": "1718640"
  },
  {
    "text": "a spanning tree and in fact it's supposed to be the one that aha look at that acfgi",
    "start": "1718640",
    "end": "1725000"
  },
  {
    "text": "makes me feel good okay so so now um uh this is the the basic idea of that",
    "start": "1725000",
    "end": "1733940"
  },
  {
    "text": "zero always means of make a non a near spanning tree one always means make a pantry and you can see from the rules",
    "start": "1733940",
    "end": "1739400"
  },
  {
    "text": "that we gave that this is actually a faithful way now in order to get all the spanning trees then what we have to do",
    "start": "1739400",
    "end": "1745940"
  },
  {
    "text": "is just play this game with all the different designations of the children uh with one exception if a guy if a",
    "start": "1745940",
    "end": "1754340"
  },
  {
    "text": "parallel node has a zero on it or or if a Serial node has a one on it it doesn't matter what the designated child is",
    "start": "1754340",
    "end": "1761059"
  },
  {
    "text": "because a parallel with a zero on it uh all his children are are zero and a",
    "start": "1761059",
    "end": "1767480"
  },
  {
    "text": "serial number with a one on it all his children are one so in that case it doesn't make you know so so what we really want to do is if",
    "start": "1767480",
    "end": "1775039"
  },
  {
    "text": "the uh I call it an easy an easy note in the tree it's an easy node if the value",
    "start": "1775039",
    "end": "1781220"
  },
  {
    "text": "equals the type of the node a parallel node is zero or the serial node is one that's an easy node that means that uh",
    "start": "1781220",
    "end": "1788000"
  },
  {
    "text": "the the whichever child is designated now is irrelevant you don't have to vary the thing so the the recursive rule for",
    "start": "1788000",
    "end": "1795860"
  },
  {
    "text": "getting all the spanning trees is go to you know if you're an easy node uh just",
    "start": "1795860",
    "end": "1800960"
  },
  {
    "text": "take all of the all of the um uh uh you",
    "start": "1800960",
    "end": "1806000"
  },
  {
    "text": "know sort of bump all of your all of your children to go through all of all of their configurations but if you're",
    "start": "1806000",
    "end": "1812000"
  },
  {
    "text": "not an easy node then for each each of your children in turn uh make those the",
    "start": "1812000",
    "end": "1819799"
  },
  {
    "text": "designated child and and and and do everything and then then go to the next",
    "start": "1819799",
    "end": "1825080"
  },
  {
    "text": "child and go to the next job and uh all right now I don't have time to go into into further details because",
    "start": "1825080",
    "end": "1831740"
  },
  {
    "text": "I got a lot of other stuff I want to talk about but but it's but there's uh",
    "start": "1831740",
    "end": "1837740"
  },
  {
    "text": "they're they're a nice methods then uh once we've got this this beautiful recursive pattern uh to",
    "start": "1837740",
    "end": "1846020"
  },
  {
    "text": "um to to have all the kids doing their thing uh one at a time for example if",
    "start": "1846020",
    "end": "1851240"
  },
  {
    "text": "you want to get the Cartesian product of a 3D if you if you want to get if you have two children and each one knows how",
    "start": "1851240",
    "end": "1857720"
  },
  {
    "text": "to generate all of its uh uh spanning trees uh then uh you can ask ask ask say",
    "start": "1857720",
    "end": "1864860"
  },
  {
    "text": "the first child uh to uh uh to to go through and and and and do all of it and",
    "start": "1864860",
    "end": "1871820"
  },
  {
    "text": "then you make one change in the you know and then it finishes and then you make one change to the next child and then",
    "start": "1871820",
    "end": "1878720"
  },
  {
    "text": "say the first child go through again and continue on until until both uh you know",
    "start": "1878720",
    "end": "1884539"
  },
  {
    "text": "but the first one you know uh it's crazy to see how you can make it so that only one chain one change is made at a time",
    "start": "1884539",
    "end": "1890840"
  },
  {
    "text": "provided I tell you one more thing and that is if I once I once I move my",
    "start": "1890840",
    "end": "1895940"
  },
  {
    "text": "designated child from one place to the other there I'm only changing one I'm only changing one value and the",
    "start": "1895940",
    "end": "1903320"
  },
  {
    "text": "reason is",
    "start": "1903320",
    "end": "1905860"
  },
  {
    "text": "so I will rotate my body yeah very good um so what I'm saying is uh when you when I",
    "start": "1909440",
    "end": "1917419"
  },
  {
    "text": "switch I suppose I had decided instead of designated this guy to designate this guy well what actually happens is that",
    "start": "1917419",
    "end": "1925159"
  },
  {
    "text": "only two are going to have to change because uh there's a path through",
    "start": "1925159",
    "end": "1930620"
  },
  {
    "text": "designated children all the way down to a leaf which has which has the same value as U and there's a path from from",
    "start": "1930620",
    "end": "1936740"
  },
  {
    "text": "the from the newly the from the new guy all the way down through his designated",
    "start": "1936740",
    "end": "1941960"
  },
  {
    "text": "uh kids down to that leaf and so it's so there's going to be always a zero at the",
    "start": "1941960",
    "end": "1948620"
  },
  {
    "text": "bottom when I'm changing from I mean if I if I move this pointer from from this",
    "start": "1948620",
    "end": "1954559"
  },
  {
    "text": "Branch to this Branch it's always going to mean that some below a parallel it's always going to mean that that the one",
    "start": "1954559",
    "end": "1960260"
  },
  {
    "text": "that used to be designated is going to go from one to zero gone to the leaf and the other one goes",
    "start": "1960260",
    "end": "1965600"
  },
  {
    "text": "from zero to one and those changes are only affect two two things so all the",
    "start": "1965600",
    "end": "1971000"
  },
  {
    "text": "operations that we're doing are simple changes to the final to the final tree any questions on this",
    "start": "1971000",
    "end": "1977960"
  },
  {
    "text": "yeah the notes that you",
    "start": "1977960",
    "end": "1984039"
  },
  {
    "text": "said pretty arbitrary that's true you know if I I can have a graph with one",
    "start": "1984679",
    "end": "1990020"
  },
  {
    "text": "choice it doesn't have not series and parallel but if you change the password that's a good point that sometimes",
    "start": "1990020",
    "end": "1997600"
  },
  {
    "text": "the vertices that you designate uh no wait that actually is not true though",
    "start": "1997600",
    "end": "2002860"
  },
  {
    "text": "um and and I'll explain why before we go but but the but the actual designation",
    "start": "2002860",
    "end": "2008440"
  },
  {
    "text": "that you do uh will happen well I might as well give you the answer right now let me get it off the stack so suppose",
    "start": "2008440",
    "end": "2014919"
  },
  {
    "text": "you have a graph that has that's a serious parallel graph then there has to be some uh",
    "start": "2014919",
    "end": "2021659"
  },
  {
    "text": "uh you know it could be the base graph but but if it's not the base graph then",
    "start": "2021659",
    "end": "2027399"
  },
  {
    "text": "there has to be uh something that was combined at the last step like us like it was two things put together in series",
    "start": "2027399",
    "end": "2033700"
  },
  {
    "text": "so that means there's a vertex of degree two a Vertex that has exactly two",
    "start": "2033700",
    "end": "2039159"
  },
  {
    "text": "uh two neighbors because that was the last you know some some serious",
    "start": "2039159",
    "end": "2044440"
  },
  {
    "text": "connection at the bottom means that there's a Vertex or degree too so every time you have a Vertex or degree two uh",
    "start": "2044440",
    "end": "2050560"
  },
  {
    "text": "you just replace it you you delete that vertex and replace that by one Edge",
    "start": "2050560",
    "end": "2055658"
  },
  {
    "text": "yep oh okay and you keep doing that until there are no vertices of degree two now you look for for two vertices that",
    "start": "2055659",
    "end": "2063099"
  },
  {
    "text": "have multiple edges between them that would be a parallel connection and every time you have a multiple uh",
    "start": "2063099",
    "end": "2069878"
  },
  {
    "text": "you you you you change that to a single connection and because you say that was that was",
    "start": "2069879",
    "end": "2075398"
  },
  {
    "text": "done by a parallel step and and and so then you've got a graph uh you know and and then maybe now",
    "start": "2075399",
    "end": "2082419"
  },
  {
    "text": "you've got a vertex of degree two and so you keep on doing this until there's no multiple edges no vertices of degree two",
    "start": "2082419",
    "end": "2088300"
  },
  {
    "text": "so so you're left with a graph has only one Edge between at most between any two",
    "start": "2088300",
    "end": "2093760"
  },
  {
    "text": "vertices and every vertex of degree three or or or more and uh no matter what you know so so if",
    "start": "2093760",
    "end": "2101380"
  },
  {
    "text": "you start out with a serious parallel Network you would reduce it just to a",
    "start": "2101380",
    "end": "2107380"
  },
  {
    "text": "single point but otherwise you haven't so it doesn't so so from this point of view it's a mistake",
    "start": "2107380",
    "end": "2113200"
  },
  {
    "text": "to try to to tell what the u and v are I guess you're right that certainly certain you and V's you're never gonna",
    "start": "2113200",
    "end": "2118900"
  },
  {
    "text": "you're never gonna do it but I I guess you go yeah yeah you could do you you could",
    "start": "2118900",
    "end": "2125619"
  },
  {
    "text": "choose unb's uh uh stupidly that's true you could like like two things that are hooked in series and then yeah like you",
    "start": "2125619",
    "end": "2132640"
  },
  {
    "text": "said A diamond uh then you you could say oh I wanted to get from there to there and I think I can yeah but no um uh uh",
    "start": "2132640",
    "end": "2139839"
  },
  {
    "text": "in general though I'm not really although you know people who write",
    "start": "2139839",
    "end": "2145060"
  },
  {
    "text": "actually do try to communicate with with circuits uh do care what you and V are uh for spanning trees it doesn't matter",
    "start": "2145060",
    "end": "2151599"
  },
  {
    "text": "so so it's a it's a mistake to to insist on your u and v but but I like to think of of of the unv just because uh uh each",
    "start": "2151599",
    "end": "2161200"
  },
  {
    "text": "each basic unit is it is actually this super Edge idea instead of I mean that",
    "start": "2161200",
    "end": "2168180"
  },
  {
    "text": "the basic recursive structure is much nicer to think of it that as the way it presented yeah one more question then I",
    "start": "2168180",
    "end": "2174460"
  },
  {
    "text": "want to move on seems to me that the fact you're using Uh u and v and that whole development",
    "start": "2174460",
    "end": "2182020"
  },
  {
    "text": "with scanning fees and near spanning fees because you always want near spending fees that separate you from the",
    "start": "2182020",
    "end": "2188560"
  },
  {
    "text": "that's exactly right yeah not only not any old old old nearest bank tree it has",
    "start": "2188560",
    "end": "2195700"
  },
  {
    "text": "to be a near spanning tree that breaks the connection that you and V are uh that the connection from U to V is the connection yeah okay",
    "start": "2195700",
    "end": "2202720"
  },
  {
    "text": "um yeah come up well you're gonna have to have a tiebreaker maybe at the end",
    "start": "2202720",
    "end": "2208780"
  },
  {
    "text": "um no no okay but anyway you can play with this program and also uh uh this",
    "start": "2208780",
    "end": "2215200"
  },
  {
    "text": "the specification here gory do you tell you if you if if you give the um if you",
    "start": "2215200",
    "end": "2220720"
  },
  {
    "text": "know if you give another thing on the command line say extremely verbose then you you know then you then",
    "start": "2220720",
    "end": "2226060"
  },
  {
    "text": "it tells you what's in the data structures and and and it tells you what the you know what what what the leaves",
    "start": "2226060",
    "end": "2231700"
  },
  {
    "text": "are do are are are doing what as they're swapping all this stuff up and uh these",
    "start": "2231700",
    "end": "2237280"
  },
  {
    "text": "the program if you download is um uh well I I did it with really large fonts",
    "start": "2237280",
    "end": "2245200"
  },
  {
    "text": "here um uh so that you could you could read it today but uh you know you usually don't",
    "start": "2245200",
    "end": "2250900"
  },
  {
    "text": "get it in this in this size and and actually the program is is quite sure at the actual algorithm that generates all",
    "start": "2250900",
    "end": "2256900"
  },
  {
    "text": "the all the spanning trees uh fits on a page rather nicely",
    "start": "2256900",
    "end": "2262180"
  },
  {
    "text": "um but here's a here's an example that I that I work through in the in the notes",
    "start": "2262180",
    "end": "2268300"
  },
  {
    "text": "of the program themselves you see here's the uh uh um",
    "start": "2268300",
    "end": "2274020"
  },
  {
    "text": "uh the syntax that I gave which is actually",
    "start": "2274020",
    "end": "2281800"
  },
  {
    "text": "oh no and uh and if you read through here you",
    "start": "2281800",
    "end": "2287320"
  },
  {
    "text": "see the you know the way the program runs um um and uh that all the different error",
    "start": "2287320",
    "end": "2295839"
  },
  {
    "text": "messages that you can get if you you know if you if you break out and there's",
    "start": "2295839",
    "end": "2301060"
  },
  {
    "text": "a you know the theory is described in there as well so so anything that you that I said today don't understand you",
    "start": "2301060",
    "end": "2307119"
  },
  {
    "text": "can find the you can find the theory uh uh given here",
    "start": "2307119",
    "end": "2313260"
  },
  {
    "text": "um uh of course there's lots of graphs in the world that that aren't um serious",
    "start": "2315160",
    "end": "2321880"
  },
  {
    "text": "parallel in fact if all graphs were serious parallel uh we would uh that we'd be able to sell the traveling",
    "start": "2321880",
    "end": "2327820"
  },
  {
    "text": "salesman problems and many other problems because serious parallel graphs are known to be the graphs whose tree width is too and uh and a lot of people",
    "start": "2327820",
    "end": "2335980"
  },
  {
    "text": "have studied algorithms that work on graphs on graphs that have bounded tree width and if the tree width is three is",
    "start": "2335980",
    "end": "2342880"
  },
  {
    "text": "much better computationally than if it's four and so on but serious parallel the simplest case where",
    "start": "2342880",
    "end": "2348820"
  },
  {
    "text": "the tree width is only two um but so let's take now uh the the thing that started me on is this whole",
    "start": "2348820",
    "end": "2355420"
  },
  {
    "text": "thing was the idea that I learned from this summer uh and a thesis uh Master's",
    "start": "2355420",
    "end": "2362079"
  },
  {
    "text": "thesis actually uh that came out uh 1997 I Believe by Malcolm Smith at the",
    "start": "2362079",
    "end": "2368980"
  },
  {
    "text": "University of Victoria um",
    "start": "2368980",
    "end": "2374040"
  },
  {
    "text": "and and uh he had a really nice way to solve the spanning tree problem for an",
    "start": "2374040",
    "end": "2380140"
  },
  {
    "text": "arbitrary graph and so that's his program which is in his method is",
    "start": "2380140",
    "end": "2389020"
  },
  {
    "text": "illustrated by another program that you can download called grayspan",
    "start": "2389020",
    "end": "2394480"
  },
  {
    "text": "um so yeah Malcolm Smith uh 1997 University",
    "start": "2394480",
    "end": "2401099"
  },
  {
    "text": "and uh all right um and so I'm you know again",
    "start": "2401099",
    "end": "2408720"
  },
  {
    "text": "I've instrumented the program so if you look at the at the code and conning memory references if you look at a you",
    "start": "2408720",
    "end": "2414820"
  },
  {
    "text": "know typical place in the program here um uh I put in front of every statement",
    "start": "2414820",
    "end": "2421720"
  },
  {
    "text": "you know double O comma that just means I made two memory references in this line and you know obviously do this all",
    "start": "2421720",
    "end": "2428260"
  },
  {
    "text": "by hand because I consider some things are are known to be in registers and not",
    "start": "2428260",
    "end": "2433359"
  },
  {
    "text": "not really references to memory I I'm not going to trust a compiler to optimize things the right way",
    "start": "2433359",
    "end": "2439680"
  },
  {
    "text": "in all cases so I so I instrumented myself by hand it doesn't take long and",
    "start": "2439680",
    "end": "2445540"
  },
  {
    "text": "um um uh his idea is again",
    "start": "2445540",
    "end": "2452579"
  },
  {
    "text": "is this you you you have a graph and and you you say find all the recursive",
    "start": "2452579",
    "end": "2459880"
  },
  {
    "text": "problem that you're doing is find all spanning trees um uh",
    "start": "2459880",
    "end": "2466900"
  },
  {
    "text": "uh where the first one uh the first starts with",
    "start": "2466900",
    "end": "2475420"
  },
  {
    "text": "a given near spanning tree",
    "start": "2475420",
    "end": "2482460"
  },
  {
    "text": "okay but um a new spanning tree um so uh again I choose n minus two",
    "start": "2483960",
    "end": "2493300"
  },
  {
    "text": "edges that that are enough to hook the thing into two different compounds so",
    "start": "2493300",
    "end": "2498579"
  },
  {
    "text": "the first bank and I and and so it's one of the things given to me is is uh that",
    "start": "2498579",
    "end": "2503920"
  },
  {
    "text": "I want um whatever my first pantry is it it should",
    "start": "2503920",
    "end": "2509859"
  },
  {
    "text": "it no I I I know n minus two of the edges in it only one more to find",
    "start": "2509859",
    "end": "2516579"
  },
  {
    "text": "um uh and uh here's the idea",
    "start": "2516579",
    "end": "2522640"
  },
  {
    "text": "um you see if you have a graph and it and then there's there's an edge in it some here some somewhere here",
    "start": "2522640",
    "end": "2528760"
  },
  {
    "text": "let's say from U to V and then there's also lots of other stuff in the graph",
    "start": "2528760",
    "end": "2533859"
  },
  {
    "text": "um uh uh call this Edge e",
    "start": "2533859",
    "end": "2542619"
  },
  {
    "text": "H then there are two kinds of spanning trees the the ones that use e and the",
    "start": "2542619",
    "end": "2549460"
  },
  {
    "text": "ones that don't use e so now let's take a look at those two cases what are this what do the spanning",
    "start": "2549460",
    "end": "2555940"
  },
  {
    "text": "trees look like that that that use Edge e um and it turns out that what we do is",
    "start": "2555940",
    "end": "2562900"
  },
  {
    "text": "we've conformed the grav g dot e which means contract this Edge into a single",
    "start": "2562900",
    "end": "2569200"
  },
  {
    "text": "into a single vertex so shrink the you know imagine that u and v are the same and get rid of edge e",
    "start": "2569200",
    "end": "2576640"
  },
  {
    "text": "uh and now we got a graph with with one less vertex and one less Edge",
    "start": "2576640",
    "end": "2583060"
  },
  {
    "text": "um and uh uh and we we find all of its spanning trees",
    "start": "2583060",
    "end": "2588940"
  },
  {
    "text": "and then we uh and then we add e to those and those are spanning trees of",
    "start": "2588940",
    "end": "2594819"
  },
  {
    "text": "the whole so so all spanning trees of you know so spanning trees of G",
    "start": "2594819",
    "end": "2602859"
  },
  {
    "text": "equal spanning trees of G contracted with e Union the ones that don't use e",
    "start": "2602859",
    "end": "2611260"
  },
  {
    "text": "and these are the spanning trees of G minus E which was this is one",
    "start": "2611260",
    "end": "2616839"
  },
  {
    "text": "notation used for G minus E so this is a recursive structure saying",
    "start": "2616839",
    "end": "2622359"
  },
  {
    "text": "you know if we if we note that each of these are smaller graphs so so we can so so uh so we do it but we also said that",
    "start": "2622359",
    "end": "2629680"
  },
  {
    "text": "the the all the spanning trees we were going to be given a certain a certain",
    "start": "2629680",
    "end": "2636339"
  },
  {
    "text": "near tree where we started so what happens is that at the end",
    "start": "2636339",
    "end": "2641380"
  },
  {
    "text": "after we so so we start out and we generate all Spanish you know we we're given a near tree",
    "start": "2641380",
    "end": "2647560"
  },
  {
    "text": "um and uh uh so the near tree is say E1 E2 edges e to e n minus two",
    "start": "2647560",
    "end": "2656319"
  },
  {
    "text": "so I contract E1 and now I find all Hispanic trees uh",
    "start": "2656319",
    "end": "2663900"
  },
  {
    "text": "on on G contracted with E1 and um",
    "start": "2663900",
    "end": "2669700"
  },
  {
    "text": "and then I add E1 to those so so the first one that I actually get it's going to turn out recursively the",
    "start": "2669700",
    "end": "2676000"
  },
  {
    "text": "E2 will be included and and I mean you see a near spanning",
    "start": "2676000",
    "end": "2681160"
  },
  {
    "text": "Tree on the reduced graph will be we'll use edges E2 through e n minus two so so",
    "start": "2681160",
    "end": "2688780"
  },
  {
    "text": "I'll find some spanning tree e n minus two and E and again the",
    "start": "2688780",
    "end": "2694900"
  },
  {
    "text": "algorithm will find some some en minus one that that does it and then uh it",
    "start": "2694900",
    "end": "2701079"
  },
  {
    "text": "will go through and do its faces and and it'll end up with some random um thing to f f two f n minus one some",
    "start": "2701079",
    "end": "2710200"
  },
  {
    "text": "other Spanish tree when it's all done so whatever whatever it finishes with",
    "start": "2710200",
    "end": "2715359"
  },
  {
    "text": "is the nearest is the nearest spanning tree of the whole graph and so uh so so at this point I delete",
    "start": "2715359",
    "end": "2723700"
  },
  {
    "text": "that and I ask for all Spanish of G minus E one uh that um that include which the first",
    "start": "2723700",
    "end": "2732700"
  },
  {
    "text": "one includes F2 through FN minus one so the next thing the algorithm is going to do is then figure out some new",
    "start": "2732700",
    "end": "2740040"
  },
  {
    "text": "F1 and and it'll run through all of those that's the idea of the recursion",
    "start": "2740040",
    "end": "2745660"
  },
  {
    "text": "and there's a really cute way to uh to spec to put these all all in in memory",
    "start": "2745660",
    "end": "2751359"
  },
  {
    "text": "so so that you can instead of using a stack for the recursion you actually have a linear list where all the things",
    "start": "2751359",
    "end": "2757000"
  },
  {
    "text": "you're supposed to use are are sitting there on the list with a little hole a little hole in the middle of it uh I can",
    "start": "2757000",
    "end": "2763060"
  },
  {
    "text": "I don't have time to go through the details but I can show you how to how the program works when you play with it",
    "start": "2763060",
    "end": "2769119"
  },
  {
    "text": "um so um uh it's it runs exactly",
    "start": "2769119",
    "end": "2774400"
  },
  {
    "text": "the same as as",
    "start": "2774400",
    "end": "2780040"
  },
  {
    "text": "a great oh yeah I got another program to play that's called SP graph and what you",
    "start": "2780040",
    "end": "2785500"
  },
  {
    "text": "do so if I run here I I kept forgetting how to use it so I I run SP graph",
    "start": "2785500",
    "end": "2792700"
  },
  {
    "text": "program and I give a formula if I happen to have a simple graph which is uh a",
    "start": "2792700",
    "end": "2798040"
  },
  {
    "text": "series parallel graph I can give the formula and and it'll it'll create a file that represents that graph in the",
    "start": "2798040",
    "end": "2805420"
  },
  {
    "text": "in the format used by Stanford Stanford graph based a whole bunch of programs",
    "start": "2805420",
    "end": "2810940"
  },
  {
    "text": "that I have for for dealing with with graphs and and other common to our algorithms and and so it makes the graph",
    "start": "2810940",
    "end": "2817180"
  },
  {
    "text": "based graph demo.gb and and then I then I I run my program gray span on on demo",
    "start": "2817180",
    "end": "2824619"
  },
  {
    "text": "GB and says oh okay I found 54 spanning trees six thousand and some mems",
    "start": "2824619",
    "end": "2831940"
  },
  {
    "text": "uh uh as you would expect since this gray span program is more General",
    "start": "2831940",
    "end": "2838359"
  },
  {
    "text": "um it's it's not going to work as efficiently on a spanning on a on a serious parallel graph the series",
    "start": "2838359",
    "end": "2844480"
  },
  {
    "text": "paragraph it it only took less than a thousand uh all together but uh uh so it",
    "start": "2844480",
    "end": "2850960"
  },
  {
    "text": "took about six times as long but it's a much more general program um and I did find the 54 Spang trees and",
    "start": "2850960",
    "end": "2857079"
  },
  {
    "text": "again we can ask for you you know it doesn't matter what what what you put on the command line as long as you have",
    "start": "2857079",
    "end": "2862720"
  },
  {
    "text": "another another uh argument on the command line like I put a plus sign here that just that gives you the verbose information",
    "start": "2862720",
    "end": "2870000"
  },
  {
    "text": "and told how long it took to you know to get going and then uh and it also tells",
    "start": "2870000",
    "end": "2875140"
  },
  {
    "text": "you uh it the numbers that it has assigned to all the uh all the edges of the graph and so here's your first your",
    "start": "2875140",
    "end": "2882099"
  },
  {
    "text": "Sprint First Bank trading the second one and again if you ask for um after the 54 then if you ask for extra",
    "start": "2882099",
    "end": "2891160"
  },
  {
    "text": "verbose then you get a lot of gory details about exactly",
    "start": "2891160",
    "end": "2896579"
  },
  {
    "text": "exactly how it goes about it and um the program is is actually much",
    "start": "2896579",
    "end": "2902380"
  },
  {
    "text": "shorter than the program for the serious parallel graph case um uh this this program",
    "start": "2902380",
    "end": "2908560"
  },
  {
    "text": "um uh you have to prepare the graph and it has",
    "start": "2908560",
    "end": "2915220"
  },
  {
    "text": "a fairly simple uh but has had lots and lots of printouts uh just to do this",
    "start": "2915220",
    "end": "2921520"
  },
  {
    "text": "verbose printing um uh so you describe the method here that",
    "start": "2921520",
    "end": "2928000"
  },
  {
    "text": "I just described to you and uh I'm going to actually get to the code it's it's it's quite it's quite",
    "start": "2928000",
    "end": "2934720"
  },
  {
    "text": "simple and uh and what what the only complication is that as that we're shrinking the graph and then we have to",
    "start": "2934720",
    "end": "2941619"
  },
  {
    "text": "backtrack uh and unshrink it again uh well I I I left that one little",
    "start": "2941619",
    "end": "2947020"
  },
  {
    "text": "complication we don't want to look at if if G my if G if taking out E1",
    "start": "2947020",
    "end": "2952680"
  },
  {
    "text": "disconnects the graph then then I don't want to do that step because it's it's called a bridge I I have to have a",
    "start": "2952680",
    "end": "2959980"
  },
  {
    "text": "connected graph so so I have to make a test after I finished after I finished uh looking at this one I have to test",
    "start": "2959980",
    "end": "2966520"
  },
  {
    "text": "what it is whether I'm done um uh at all because uh uh so so so I",
    "start": "2966520",
    "end": "2972460"
  },
  {
    "text": "make it uh you know so so I delete this Edge and then and I I make sure there's",
    "start": "2972460",
    "end": "2978400"
  },
  {
    "text": "still a way to get from U to V if not then I just don't then I don't have to worry about this guy at all it's not",
    "start": "2978400",
    "end": "2985240"
  },
  {
    "text": "connected okay so I have to do that um but um so that's the the point here it",
    "start": "2985240",
    "end": "2992740"
  },
  {
    "text": "says uh you know so you know I I shrink it but then I have to unshrink uh and if",
    "start": "2992740",
    "end": "2997960"
  },
  {
    "text": "it's not a bridge delete it and uh remember the edge that you've changed",
    "start": "2997960",
    "end": "3003660"
  },
  {
    "text": "and and uh I would go through statements in this program don't be shocked um",
    "start": "3003660",
    "end": "3009300"
  },
  {
    "text": "uh and uh the the beauty is actually that the unshrinking method uh uh we",
    "start": "3009300",
    "end": "3016140"
  },
  {
    "text": "keep the keep the representation of the graph in as a doubly linked list um uh and this means that undoing is",
    "start": "3016140",
    "end": "3024660"
  },
  {
    "text": "extremely simple a couple years ago I gave elect one of my lectures was about what I call dancing links which is which",
    "start": "3024660",
    "end": "3030599"
  },
  {
    "text": "is a technique for undoing that requires only very small changes to a data structure so so we can shrink the graph",
    "start": "3030599",
    "end": "3036720"
  },
  {
    "text": "uh by removing edges and and a couple and changing a couple links so we can unshrink the graph uh with without much",
    "start": "3036720",
    "end": "3044339"
  },
  {
    "text": "much extra work and a much better way to do lots of commodore programs that that",
    "start": "3044339",
    "end": "3050520"
  },
  {
    "text": "require uh require backtracking undoing",
    "start": "3050520",
    "end": "3055680"
  },
  {
    "text": "um so the dancing links method uh which I presented um in connection with a",
    "start": "3055680",
    "end": "3061559"
  },
  {
    "text": "completely different problem turns out Works in many many different many many different methods and then Bridge",
    "start": "3061559",
    "end": "3067500"
  },
  {
    "text": "detection is just are we just doing a prep first search so the whole uh the uh",
    "start": "3067500",
    "end": "3073700"
  },
  {
    "text": "the whole code turns out uh to be to be quite sure is it when I when I put it",
    "start": "3073700",
    "end": "3079140"
  },
  {
    "text": "into art of computer programming it's gonna it's gonna be an algorithm only about nine or ten steps long",
    "start": "3079140",
    "end": "3085619"
  },
  {
    "text": "um so that's the experience that we have with that and uh uh I can show you the",
    "start": "3085619",
    "end": "3094380"
  },
  {
    "text": "one other program that I have oh God there's lots and lots of output though if it does all this work no wonder it",
    "start": "3094380",
    "end": "3099480"
  },
  {
    "text": "took six thousand minutes okay it has to you everything you do you have",
    "start": "3099480",
    "end": "3105540"
  },
  {
    "text": "to be able to undo um and you have to check for Bridges okay so but this was the extra verbose",
    "start": "3105540",
    "end": "3113160"
  },
  {
    "text": "output telling is very handy when I was debugging um",
    "start": "3113160",
    "end": "3119040"
  },
  {
    "text": "and uh what the program was so simple it really didn't take much time to debug",
    "start": "3119040",
    "end": "3124140"
  },
  {
    "text": "since there was almost nothing get wrong uh however then I wrote a program called gray span and this is",
    "start": "3124140",
    "end": "3131940"
  },
  {
    "text": "the one that is guaranteed to be um efficient",
    "start": "3131940",
    "end": "3137880"
  },
  {
    "text": "uh and here's the idea of look at the program gray span",
    "start": "3137880",
    "end": "3145380"
  },
  {
    "text": "um activated to this program combines the idea of a gray span and SP span resulting in a glorious routine that",
    "start": "3146940",
    "end": "3153540"
  },
  {
    "text": "generates all spanning trees changing only one Edge at a time with guaranteed efficiency in the sense that the total",
    "start": "3153540",
    "end": "3158700"
  },
  {
    "text": "running time it is a constant times M plus n plus T if there are M edges n vertices and two spanning trees that's",
    "start": "3158700",
    "end": "3166500"
  },
  {
    "text": "that's as good as you could expect to have it oh if you're going to generate all the spanning trees",
    "start": "3166500",
    "end": "3171780"
  },
  {
    "text": "you can count all the spanning trees by evaluating and determine but this saying we want to generate them and uh so uh",
    "start": "3171780",
    "end": "3179339"
  },
  {
    "text": "now this program again has the same conventions as the",
    "start": "3179339",
    "end": "3184440"
  },
  {
    "text": "other programs but it uses the idea I mentioned a little while ago that first",
    "start": "3184440",
    "end": "3189480"
  },
  {
    "text": "it uh if you've got a graph and and has a it has uh",
    "start": "3189480",
    "end": "3194839"
  },
  {
    "text": "several edges between the same two vertices these are called parallel edges",
    "start": "3194839",
    "end": "3200280"
  },
  {
    "text": "so if we say okay let's combine those two in into one um and uh and uh if we if we have a",
    "start": "3200280",
    "end": "3208740"
  },
  {
    "text": "Vertex that that has degree two that one vertex only has uh two neighbors we can",
    "start": "3208740",
    "end": "3215400"
  },
  {
    "text": "eliminate that vertex and and uh consider the two edges that we used to",
    "start": "3215400",
    "end": "3220740"
  },
  {
    "text": "join that vertex to be a super Edge between them again uh in fact uh the",
    "start": "3220740",
    "end": "3225839"
  },
  {
    "text": "word super Edge turn out to be to be fairly long so I decided instead to to call it a bond and that turned out to be",
    "start": "3225839",
    "end": "3232380"
  },
  {
    "text": "a nice a nice four-letter word it worked you know so so let's say that a bond is a is uh you know something that happens",
    "start": "3232380",
    "end": "3239220"
  },
  {
    "text": "in this recursive process I start out with the graph and I and I",
    "start": "3239220",
    "end": "3244319"
  },
  {
    "text": "consider that as edges or bonds and then if then but then if I have two parallel bonds I combine them into one Bond if I",
    "start": "3244319",
    "end": "3250260"
  },
  {
    "text": "have if I have two bonds of series I combine them into one Bond until finally I have a graph left where where it's",
    "start": "3250260",
    "end": "3255900"
  },
  {
    "text": "it's either a trivial graph only one point or it's got",
    "start": "3255900",
    "end": "3261420"
  },
  {
    "text": "um uh it's got at least three bonds coming into every every vertex",
    "start": "3261420",
    "end": "3268220"
  },
  {
    "text": "um okay and um uh now uh the uh now in this in this",
    "start": "3268260",
    "end": "3277800"
  },
  {
    "text": "graph I can use um Smith's algorithm uh uh the the idea is",
    "start": "3277800",
    "end": "3285480"
  },
  {
    "text": "um uh that I suppose I run through um",
    "start": "3285480",
    "end": "3290579"
  },
  {
    "text": "um and find all spanning trees of the graph with the bonds with me so I have a great let's suppose",
    "start": "3290579",
    "end": "3297420"
  },
  {
    "text": "that I suppose for example that my graph has reduced to the the smallest",
    "start": "3297420",
    "end": "3304020"
  },
  {
    "text": "the smallest non-trivial graph that does that that doesn't has",
    "start": "3304020",
    "end": "3309900"
  },
  {
    "text": "four vertices in every and they're all connected to each other so you know so this this uh complete graph on four",
    "start": "3309900",
    "end": "3317099"
  },
  {
    "text": "things is this is the simplest way to have every vertex of degree three or more and",
    "start": "3317099",
    "end": "3322619"
  },
  {
    "text": "and uh uh uh and and so uh suppose that uh My Graph",
    "start": "3322619",
    "end": "3330540"
  },
  {
    "text": "but each of these are not really edges but they're their bonds that means that they could",
    "start": "3330540",
    "end": "3336180"
  },
  {
    "text": "be any serious parallel Network between between the two edges",
    "start": "3336180",
    "end": "3341520"
  },
  {
    "text": "okay now suppose then that I find one spanning tree of this guy maybe maybe this one",
    "start": "3341520",
    "end": "3348359"
  },
  {
    "text": "then then what that really means is I want to find all",
    "start": "3348359",
    "end": "3354180"
  },
  {
    "text": "I I I want to to find all spanning trees of these of these series parallel",
    "start": "3354180",
    "end": "3360599"
  },
  {
    "text": "networks and all near spanning trees of the of the ones that I haven't used",
    "start": "3360599",
    "end": "3367200"
  },
  {
    "text": "so so in other words I play Malcolm Smith's algorithm to this big guy uh uh uh",
    "start": "3367200",
    "end": "3375020"
  },
  {
    "text": "and and for every Spanish tree it outputs um I run through all the spanning trees",
    "start": "3375020",
    "end": "3381480"
  },
  {
    "text": "of the bonds and all that are included in all all the near spanning trees of all the Buns that aren't included",
    "start": "3381480",
    "end": "3387359"
  },
  {
    "text": "and I can do that just changing one one branch at a time um not only that but as you look at",
    "start": "3387359",
    "end": "3394440"
  },
  {
    "text": "Smith's algorithm you know you delete a bond and then all of a sudden you've got a",
    "start": "3394440",
    "end": "3400500"
  },
  {
    "text": "you've got vertices of degree two and and the graph contracts again so all the time you're replying this idea you're",
    "start": "3400500",
    "end": "3407099"
  },
  {
    "text": "you're you're you're you're you're when you reduce the graph by by",
    "start": "3407099",
    "end": "3412200"
  },
  {
    "text": "shrinking together uh by shrinking one of the edges uh and bringing the points",
    "start": "3412200",
    "end": "3417660"
  },
  {
    "text": "together or by deleting one of the edges uh again you have a chance to build further bonds",
    "start": "3417660",
    "end": "3423420"
  },
  {
    "text": "this leads to a really interesting data structure and and doing an undoing situation uh where the uh this these",
    "start": "3423420",
    "end": "3431280"
  },
  {
    "text": "serious parallel graphs that uh that that are coming up uh keep changing uh all the time",
    "start": "3431280",
    "end": "3437640"
  },
  {
    "text": "um and uh it turned out to be one of the most interesting programs I ever uh you",
    "start": "3437640",
    "end": "3443160"
  },
  {
    "text": "know or certainly the most interesting one I did this summer and uh and here it's a fairly chunky",
    "start": "3443160",
    "end": "3448740"
  },
  {
    "text": "piece of code I mean uh well 50 50 parts to the to the to the program each",
    "start": "3448740",
    "end": "3455940"
  },
  {
    "text": "each part is well in fact uh let me talk a little bit about debugging",
    "start": "3455940",
    "end": "3463140"
  },
  {
    "text": "it because um uh I have here's the here's the data",
    "start": "3463140",
    "end": "3469559"
  },
  {
    "text": "structure wait a minute where's the data structure for the bond",
    "start": "3469559",
    "end": "3474319"
  },
  {
    "text": "let's see",
    "start": "3475020",
    "end": "3477619"
  },
  {
    "text": "okay here's the data structure so so a bond you have a type and a value that we",
    "start": "3481200",
    "end": "3487020"
  },
  {
    "text": "that we had in our in our series parallel algorithm we had the left child the left sibling of uh in in a family a",
    "start": "3487020",
    "end": "3494400"
  },
  {
    "text": "right sibling uh the designated child uh the final designated child as we're",
    "start": "3494400",
    "end": "3499859"
  },
  {
    "text": "going around the circle we have then I uh things I needed for uh to control uh",
    "start": "3499859",
    "end": "3506520"
  },
  {
    "text": "my my algorithm that goes through in Gray code order and I have left and right in in a list of that's also",
    "start": "3506520",
    "end": "3512880"
  },
  {
    "text": "implementing the gray court order up and down and then I have uh uh in order to undo",
    "start": "3512880",
    "end": "3520619"
  },
  {
    "text": "uh there wasn't enough enough information to data structure unless I introduce two more fields",
    "start": "3520619",
    "end": "3526859"
  },
  {
    "text": "um and I took two additional history uh values so it's a it's a huge uh data",
    "start": "3526859",
    "end": "3533880"
  },
  {
    "text": "structure with a lot of redundancy so when I have to debug it when I had to debug it um",
    "start": "3533880",
    "end": "3539280"
  },
  {
    "text": "uh I find it very important to have sanity check routines",
    "start": "3539280",
    "end": "3544799"
  },
  {
    "text": "uh so the sanity check um and then I can uh then I put Flags in",
    "start": "3544799",
    "end": "3549900"
  },
  {
    "text": "there to to say what kind of Sanity I want to check at a particular time as I'm debug I got to find because I the",
    "start": "3549900",
    "end": "3555359"
  },
  {
    "text": "the other is going to run and for a long time and it's going to um uh and",
    "start": "3555359",
    "end": "3562619"
  },
  {
    "text": "um really uh if if a program runs for 10",
    "start": "3562619",
    "end": "3568140"
  },
  {
    "text": "minutes and then all of a sudden it hangs you want to know uh when the data structure first got uh got out of order",
    "start": "3568140",
    "end": "3575339"
  },
  {
    "text": "instead of instead of a few minutes after the you know after you had a",
    "start": "3575339",
    "end": "3580380"
  },
  {
    "text": "Missing Link in it and it started to screw up so um uh you know so then I had all these",
    "start": "3580380",
    "end": "3587280"
  },
  {
    "text": "checks on the redundancy going in that's that makes the program longer for sure but when you look at the um at what",
    "start": "3587280",
    "end": "3594000"
  },
  {
    "text": "happens to do when you're when you're shrinking nodes and um uh let's see where are we here make",
    "start": "3594000",
    "end": "3600960"
  },
  {
    "text": "queries make uh uh there's lots and lots of of data",
    "start": "3600960",
    "end": "3607920"
  },
  {
    "text": "structure manipulations you know doing undoing deleting unbelieving and um so what happened was I I tried this",
    "start": "3607920",
    "end": "3613859"
  },
  {
    "text": "algorithm out on the complete graph first with uh you know with four nodes this this the simple case where there's",
    "start": "3613859",
    "end": "3620819"
  },
  {
    "text": "four vertices and everything checked out and uh to make sure first of that would work and then I tried it on the complete",
    "start": "3620819",
    "end": "3627059"
  },
  {
    "text": "graph of five notes now while you're working on a complete graph of five notes it it deletes edges and so you get",
    "start": "3627059",
    "end": "3633420"
  },
  {
    "text": "every other graph somehow in in the process um and uh and so uh any bugs you know I",
    "start": "3633420",
    "end": "3640020"
  },
  {
    "text": "I I just I was just testing it on complete graph instead of on on other graphs because it because uh as as you",
    "start": "3640020",
    "end": "3646980"
  },
  {
    "text": "start with the complete graphene delete edges you run into uh you know lots and lots of other graphs anyway uh and so it",
    "start": "3646980",
    "end": "3653160"
  },
  {
    "text": "worked on uh you know after the other five bugs uh and it worked on the complete graph of of six vertices ah and",
    "start": "3653160",
    "end": "3661440"
  },
  {
    "text": "then I tried it on the complete graph of seven vertices uh the number of Spanish trees is going going up open up it's the",
    "start": "3661440",
    "end": "3667619"
  },
  {
    "text": "end of the N minus two um but still not too bad and so uh sure",
    "start": "3667619",
    "end": "3672720"
  },
  {
    "text": "enough a few more bugs showed up in seven vertices but then I did eight",
    "start": "3672720",
    "end": "3678000"
  },
  {
    "text": "worked fine and I did nine I worked fine and I did 10. again it crashed and I and",
    "start": "3678000",
    "end": "3685980"
  },
  {
    "text": "I found four more bugs uh it's uh uh and but now I'm sure it's it's correct",
    "start": "3685980",
    "end": "3692400"
  },
  {
    "text": "although I haven't really gone but um and uh incidentally the running time uh",
    "start": "3692400",
    "end": "3699000"
  },
  {
    "text": "for generating up in the complete graph of 10 things that uh the the number of",
    "start": "3699000",
    "end": "3705000"
  },
  {
    "text": "men's was uh was was three point that was 1.9 billion only so it wouldn't have",
    "start": "3705000",
    "end": "3712260"
  },
  {
    "text": "been bad to to go uh you know to go up to the to the to the next case although",
    "start": "3712260",
    "end": "3717420"
  },
  {
    "text": "that's uh it's going from 10 to the eighth Hispanic trees 2 11 to the ninth",
    "start": "3717420",
    "end": "3724619"
  },
  {
    "text": "um but um uh it's still I could you know I could go up a little a little further",
    "start": "3724619",
    "end": "3729720"
  },
  {
    "text": "but I'm convinced that it's working now um but you might find it not if you if",
    "start": "3729720",
    "end": "3735299"
  },
  {
    "text": "you download it from the web and try it um but these these Saturday check routines were extremely important",
    "start": "3735299",
    "end": "3740940"
  },
  {
    "text": "because because I I could have every time I did anything to the graph I would then do a sanity check and I would find",
    "start": "3740940",
    "end": "3746339"
  },
  {
    "text": "out oh yeah that's where the bug is because there's so many cases that arise in in it in these changes to a a data",
    "start": "3746339",
    "end": "3753180"
  },
  {
    "text": "structure that has lots and lots of redundancy and I believe that whenever you're you're running a program",
    "start": "3753180",
    "end": "3759119"
  },
  {
    "text": "um that has such data structures uh that that's a very valuable uh debugging Aid",
    "start": "3759119",
    "end": "3766260"
  },
  {
    "text": "and so I couldn't we didn't take really too long uh like I said here program test still",
    "start": "3766260",
    "end": "3771480"
  },
  {
    "text": "is to use an error on the um uh okay so",
    "start": "3771480",
    "end": "3777720"
  },
  {
    "text": "his comments as well now um the uh the other thing I wanted to tell you",
    "start": "3777720",
    "end": "3784619"
  },
  {
    "text": "is why I can it's why this how I can guarantee that this program is efficient",
    "start": "3784619",
    "end": "3790799"
  },
  {
    "text": "um and um the the uh because if you look at at the",
    "start": "3790799",
    "end": "3798480"
  },
  {
    "text": "recursive method you see that uh you know I I really in order in order to",
    "start": "3798480",
    "end": "3804240"
  },
  {
    "text": "change what I'm going to need to change to get from one thing to to another um I'm not allowed to do much",
    "start": "3804240",
    "end": "3809819"
  },
  {
    "text": "calculation if I'm only allowed a constant amount of operation per per output um uh amortized over the whole thing and",
    "start": "3809819",
    "end": "3817440"
  },
  {
    "text": "the reason is that um that I that I was able to prove that there are lots and lots of spanning trees uh if the graph",
    "start": "3817440",
    "end": "3824940"
  },
  {
    "text": "is reduced and so here's a here's a result that um that I wanna that I want",
    "start": "3824940",
    "end": "3830460"
  },
  {
    "text": "to explain to you the next few minutes it's a theorem that that I asked to the",
    "start": "3830460",
    "end": "3837240"
  },
  {
    "text": "people who who ought to know if it had been proved before and it seems to be new because if G is any",
    "start": "3837240",
    "end": "3843180"
  },
  {
    "text": "connected multi-graph without Loops you have to have all these",
    "start": "3843180",
    "end": "3850980"
  },
  {
    "text": "hypothesis so connected means that you can it does",
    "start": "3850980",
    "end": "3857579"
  },
  {
    "text": "have at least one spanning tree multigraph means that it that you're allowed to have parallel edges",
    "start": "3857579",
    "end": "3863160"
  },
  {
    "text": "um between two vertices but Loops means you can't have any edges from a Vertex",
    "start": "3863160",
    "end": "3868740"
  },
  {
    "text": "to itself okay um then it has",
    "start": "3868740",
    "end": "3875838"
  },
  {
    "text": "a total number of Spanish trees is is traditionally called Kappa of G the",
    "start": "3875940",
    "end": "3882180"
  },
  {
    "text": "number of spanning trees so the number of Banshee that has is greater than",
    "start": "3882180",
    "end": "3887819"
  },
  {
    "text": "the product D1 minus one D two minus 1 to d n minus one",
    "start": "3887819",
    "end": "3894480"
  },
  {
    "text": "um expanding trees um",
    "start": "3894480",
    "end": "3899640"
  },
  {
    "text": "where DJ is the valence or the degree of",
    "start": "3899640",
    "end": "3907140"
  },
  {
    "text": "vertex J so the number of neighbors of of the",
    "start": "3907140",
    "end": "3913380"
  },
  {
    "text": "vertex including multiple neighbors if there's a multiple so so this is the theorem um and in particular if you have a graph",
    "start": "3913380",
    "end": "3920040"
  },
  {
    "text": "that doesn't reduce anymore all these D's are at least three there's no vertices of degree of degree",
    "start": "3920040",
    "end": "3927180"
  },
  {
    "text": "2 or 1. okay a vertex of degree one is an endpoint uh that that you know really",
    "start": "3927180",
    "end": "3933660"
  },
  {
    "text": "trivial um so uh so that means then that I have at",
    "start": "3933660",
    "end": "3939359"
  },
  {
    "text": "least two to the n you know the square root of 2 to the N uh spanning trees this is this goes",
    "start": "3939359",
    "end": "3946140"
  },
  {
    "text": "exponentially within that gives me plenty of time to uh to do the other calculations that I need uh to to figure",
    "start": "3946140",
    "end": "3953880"
  },
  {
    "text": "to to now to to figure out the series parallel working on the bonds and and that's the that's the reason so",
    "start": "3953880",
    "end": "3960780"
  },
  {
    "text": "it's because of this theorem that I can guarantee the efficiency of the of of of that of that super method",
    "start": "3960780",
    "end": "3967559"
  },
  {
    "text": "um you you can you can show that without the without the super method uh it's",
    "start": "3967559",
    "end": "3973140"
  },
  {
    "text": "it's kind of embarrassing you start with a cycle and you try to find all the Spanish words of a cycle and there's only n of them but it takes you N",
    "start": "3973140",
    "end": "3978900"
  },
  {
    "text": "squared time to do this um so so you need a theorem like this in order to do it okay now the proof is uh",
    "start": "3978900",
    "end": "3985319"
  },
  {
    "text": "is uh I'll I'll just sketch it for you um",
    "start": "3985319",
    "end": "3990660"
  },
  {
    "text": "um and I suppose you could reduce this proof to a to a proof using determinants uh uh if you were really good at Matrix",
    "start": "3990660",
    "end": "3998160"
  },
  {
    "text": "Theory and so those of you who want to check it you could but anyway the case one is that g is connected it is um",
    "start": "3998160",
    "end": "4003799"
  },
  {
    "text": "sorry I okay let's see let's uh let's suppose",
    "start": "4003799",
    "end": "4010339"
  },
  {
    "text": "you and V are vertices that are connected by K edges",
    "start": "4010339",
    "end": "4015920"
  },
  {
    "text": "to each other and then there's other vertices or other edges going out to other places to",
    "start": "4015920",
    "end": "4023180"
  },
  {
    "text": "others to the rest of the graph let's say a on this side and B on this side um and uh and I take G uh it's my",
    "start": "4023180",
    "end": "4032000"
  },
  {
    "text": "original graph and G2 and G1 is is G uh",
    "start": "4032000",
    "end": "4037240"
  },
  {
    "text": "uh with uh u and v",
    "start": "4037240",
    "end": "4042740"
  },
  {
    "text": "I identified and I was collapse all these shrink all care of these edges together",
    "start": "4042740",
    "end": "4049039"
  },
  {
    "text": "into a point and G2 is g with",
    "start": "4049039",
    "end": "4055039"
  },
  {
    "text": "those K edges uh removed",
    "start": "4055039",
    "end": "4060680"
  },
  {
    "text": "so then then the number of pantries of G is equal to K times the number of",
    "start": "4060680",
    "end": "4067280"
  },
  {
    "text": "spanning trees of G1 plus the number of spank trees of G2 that's easy to see you",
    "start": "4067280",
    "end": "4074119"
  },
  {
    "text": "have to choose one of these edges um and and do it on the others or you",
    "start": "4074119",
    "end": "4079760"
  },
  {
    "text": "can do this way okay so now um I use induction and I want to prove it so so",
    "start": "4079760",
    "end": "4087220"
  },
  {
    "text": "these are smaller graphs and they're um",
    "start": "4087220",
    "end": "4092299"
  },
  {
    "text": "and so uh case one is that G2 is connected",
    "start": "4092299",
    "end": "4098179"
  },
  {
    "text": "then I can if G2 isn't connected then I couldn't use the induction hypothesis",
    "start": "4098179",
    "end": "4103460"
  },
  {
    "text": "because I I need to be connected multi-grid so in that case",
    "start": "4103460",
    "end": "4108980"
  },
  {
    "text": "um then what am I saying well K cap of G1 is is greater than or equal square root",
    "start": "4108980",
    "end": "4115880"
  },
  {
    "text": "of a plus B minus 1 times Alpha and Kappa G of G2",
    "start": "4115880",
    "end": "4121040"
  },
  {
    "text": "is greater than or equal to a minus 1 B minus one alpha where Alpha represents",
    "start": "4121040",
    "end": "4127758"
  },
  {
    "text": "product of the degrees of all the other vertices besides u and v now you see what's what's happening is G1 I I I've",
    "start": "4127759",
    "end": "4133940"
  },
  {
    "text": "combined these these vertices together so so the new vert the new the new thing has",
    "start": "4133940",
    "end": "4140120"
  },
  {
    "text": "um uh has a plus b",
    "start": "4140120",
    "end": "4145179"
  },
  {
    "text": "um neighbors and that and so so the degree minus one in my formula is a plus B minus one",
    "start": "4145279",
    "end": "4151460"
  },
  {
    "text": "Alpha represents the product over all the other vertices while in G2 I've deleted these two guys",
    "start": "4151460",
    "end": "4157758"
  },
  {
    "text": "and so now I have eight since now you has has degree A and B has degree B and so and so I have this one so all I have",
    "start": "4157759",
    "end": "4164238"
  },
  {
    "text": "to show is is um the um so I just have to prove then that K",
    "start": "4164239",
    "end": "4170120"
  },
  {
    "text": "times square root of a plus b plus 1 plus the square root of a minus one B",
    "start": "4170120",
    "end": "4175160"
  },
  {
    "text": "minus one is greater than a plus b",
    "start": "4175160",
    "end": "4181338"
  },
  {
    "text": "greater than or equal to a plus B minus 1 times",
    "start": "4181339",
    "end": "4186580"
  },
  {
    "text": "um a plus K minus 1 and B plus K minus one",
    "start": "4187400",
    "end": "4194660"
  },
  {
    "text": "yeah I just have to prove this what if a if a b is greater than zero",
    "start": "4194660",
    "end": "4200360"
  },
  {
    "text": "so if if if a and b are both greater than or equal one then um then you just have to prove this in a",
    "start": "4200360",
    "end": "4206600"
  },
  {
    "text": "simple calculus to do it so um second case",
    "start": "4206600",
    "end": "4213080"
  },
  {
    "text": "is um there are no such u and v",
    "start": "4213080",
    "end": "4218620"
  },
  {
    "text": "u and v where thank you with with G2 connected",
    "start": "4221840",
    "end": "4229900"
  },
  {
    "text": "in other words it's always a bridge whenever you have whenever all the parallel edges have our",
    "start": "4231080",
    "end": "4239060"
  },
  {
    "text": "bridges here uh okay so every multiple edge of G is a",
    "start": "4239060",
    "end": "4244159"
  },
  {
    "text": "bridge and that means it's a tree a free tree except for parallel edges",
    "start": "4244159",
    "end": "4249560"
  },
  {
    "text": "and uh so um uh if there's a vertex of degree one uh the",
    "start": "4249560",
    "end": "4257719"
  },
  {
    "text": "the result is obvious because if any of the degrees is one you get zero here and and uh the the statement is is obvious",
    "start": "4257719",
    "end": "4265640"
  },
  {
    "text": "and if you don't have a vertex of degree one then you've got um some endpoint though in every in",
    "start": "4265640",
    "end": "4272360"
  },
  {
    "text": "every tree so so there's an end point where where it's not connected to anything except except V",
    "start": "4272360",
    "end": "4279500"
  },
  {
    "text": "and there's K vertices here okay and so um so the degree of U is K the degree of",
    "start": "4279500",
    "end": "4286640"
  },
  {
    "text": "V is K plus 1 plus X",
    "start": "4286640",
    "end": "4291679"
  },
  {
    "text": "um uh because um it's obvious if if there's you know",
    "start": "4291679",
    "end": "4298820"
  },
  {
    "text": "there's there's some other guys here um and uh okay so then uh uh there's a",
    "start": "4298820",
    "end": "4307280"
  },
  {
    "text": "simple case analysis of talk depending on depending on what x is if x is is",
    "start": "4307280",
    "end": "4312679"
  },
  {
    "text": "positive it's it's easy if x is zero it's easy and um uh and so that that you",
    "start": "4312679",
    "end": "4319159"
  },
  {
    "text": "know the proof near the end of time so uh so again we",
    "start": "4319159",
    "end": "4324980"
  },
  {
    "text": "just have to verify a few like in the case where uh I'm sorry if if you and V were here my theorem would be that K is",
    "start": "4324980",
    "end": "4332300"
  },
  {
    "text": "greater than the square root of K minus one k minus one which happens to be a tight inequality",
    "start": "4332300",
    "end": "4339560"
  },
  {
    "text": "um so you know if if there weren't anything if there weren't anything on the other side of me what what",
    "start": "4339560",
    "end": "4345980"
  },
  {
    "text": "oh sorry if if there wasn't anything on the side of me that my theorem would certainly be true so so",
    "start": "4345980",
    "end": "4351860"
  },
  {
    "text": "um so so then I put here and and uh you know so I have to have to consider this case but it does work out very nicely so",
    "start": "4351860",
    "end": "4358640"
  },
  {
    "text": "that's that's a theorem says that that there's lots and lots of spanning trees if you don't if you don't have the",
    "start": "4358640",
    "end": "4364280"
  },
  {
    "text": "collapsing net uh there and that's uh uh that's that's friends so uh then then",
    "start": "4364280",
    "end": "4371780"
  },
  {
    "text": "it's easy to make a proof that the total total running time is linear as we said well um so does it really save a lot of",
    "start": "4371780",
    "end": "4379100"
  },
  {
    "text": "time uh compared to the simple algorithm that has a bad uh that you know it doesn't do too well on cycles and the",
    "start": "4379100",
    "end": "4386000"
  },
  {
    "text": "answer was on the complete graph the simple algorithm took 3.8 billion",
    "start": "4386000",
    "end": "4391520"
  },
  {
    "text": "mems and and the complicated algorithm took 1.9 billion so like a factor two",
    "start": "4391520",
    "end": "4396920"
  },
  {
    "text": "for all my programming but I learned a lot while I was programming and it's always nice to have a a",
    "start": "4396920",
    "end": "4404260"
  },
  {
    "text": "theoretical guarantee makes it looks like you like you know like you've done your homework",
    "start": "4404260",
    "end": "4411020"
  },
  {
    "text": "more questions foreign",
    "start": "4411020",
    "end": "4415360"
  },
  {
    "text": "this is actually um there's there are upper bounds but",
    "start": "4421179",
    "end": "4426739"
  },
  {
    "text": "they're like we take out the square root here I mean I can't remember what it is I I'll have it in my book but but there",
    "start": "4426739",
    "end": "4433760"
  },
  {
    "text": "is a up or down based on degrees um uh but certainly uh for for example the",
    "start": "4433760",
    "end": "4440540"
  },
  {
    "text": "uh the product of the degrees is an upper bound but that's maybe two trivia but yeah",
    "start": "4440540",
    "end": "4445940"
  },
  {
    "text": "well I I I I don't remember that yeah",
    "start": "4445940",
    "end": "4451159"
  },
  {
    "text": "not a bad question though",
    "start": "4451159",
    "end": "4454540"
  },
  {
    "text": "it's pretty hard for me to keep score on the best questions in this yeah so G1 and G2 correspond to the units of your",
    "start": "4457760",
    "end": "4464239"
  },
  {
    "text": "two operations with this one is the unit of this if he",
    "start": "4464239",
    "end": "4469880"
  },
  {
    "text": "uh middle grass is the unit it's identified with the uh",
    "start": "4469880",
    "end": "4478658"
  },
  {
    "text": "include single pointers empty disconnected is another one and",
    "start": "4479560",
    "end": "4486080"
  },
  {
    "text": "they're the respective units are you saying in a special case of",
    "start": "4486080",
    "end": "4492080"
  },
  {
    "text": "trees with multiple edges yeah then then uh yeah um and this this uh this problem is",
    "start": "4492080",
    "end": "4500120"
  },
  {
    "text": "seems to be tight really tight only in the case of a path that has",
    "start": "4500120",
    "end": "4506600"
  },
  {
    "text": "that um that has made like like it seems to it seems to be where you have a we",
    "start": "4506600",
    "end": "4513320"
  },
  {
    "text": "have something like this um lots and lots of edges and then one and then lots and lots of edges and then",
    "start": "4513320",
    "end": "4519140"
  },
  {
    "text": "one that's enough and you let these these numbers go to",
    "start": "4519140",
    "end": "4524239"
  },
  {
    "text": "Infinity then then it shows that that my theorem is the best possible in the sense that you you can't I can't put a",
    "start": "4524239",
    "end": "4530480"
  },
  {
    "text": "one plus Epsilon here for any positive effects",
    "start": "4530480",
    "end": "4536260"
  },
  {
    "text": "is up and it's two notes that are disconnected",
    "start": "4536920",
    "end": "4541780"
  },
  {
    "text": "the if you if I multiply by all the K's then some of the DC that's and that's a",
    "start": "4542360",
    "end": "4547520"
  },
  {
    "text": "that's a good a good idea to think about that leave out the word multi-grass the",
    "start": "4547520",
    "end": "4555080"
  },
  {
    "text": "reason I wanted it to be multigraph though is because uh uh of the induction you see because as soon as you as soon",
    "start": "4555080",
    "end": "4561080"
  },
  {
    "text": "as you collapse these two together all of a sudden um uh you you you're getting parallel",
    "start": "4561080",
    "end": "4566360"
  },
  {
    "text": "edges because some of these some of these things you as connected to is already and he was already connected to",
    "start": "4566360",
    "end": "4571940"
  },
  {
    "text": "them too so those become parallel edges and you can't use the induction easily",
    "start": "4571940",
    "end": "4578199"
  },
  {
    "text": "yes can we generate uh spanning trees using both television rather than Expedition",
    "start": "4578900",
    "end": "4584840"
  },
  {
    "text": "that increase using what most conditions vertex deletions vertex collection is",
    "start": "4584840",
    "end": "4590719"
  },
  {
    "text": "really an edge property um and it seems and finds all the",
    "start": "4590719",
    "end": "4596840"
  },
  {
    "text": "spanning trees yeah that's what that's a delete one note and everything touching it and then yeah okay well that's a good",
    "start": "4596840",
    "end": "4604760"
  },
  {
    "text": "research problem maybe you'll come up with a faster algorithm yeah ah but at",
    "start": "4604760",
    "end": "4609800"
  },
  {
    "text": "the moment uh this is what this is what I know when did it take you to write this",
    "start": "4609800",
    "end": "4617020"
  },
  {
    "text": "the code well let me take the actually what I I spent I spent four days trying",
    "start": "4617020",
    "end": "4622460"
  },
  {
    "text": "to to do the following which is totally academic the Spanish the SP span program the the group for series parallel",
    "start": "4622460",
    "end": "4630320"
  },
  {
    "text": "um uh since it had this beautiful algebra and all this Duality and things going in here",
    "start": "4630320",
    "end": "4635840"
  },
  {
    "text": "um I said okay now I'm going to go further and I'm not am I I'm going to write a loopless algorithm a loopless",
    "start": "4635840",
    "end": "4641600"
  },
  {
    "text": "algorithm means that that not only is the total running time linear in the amount of output but but I I don't allow",
    "start": "4641600",
    "end": "4648860"
  },
  {
    "text": "myself to to to ever do an unbounded amount of computational unit",
    "start": "4648860",
    "end": "4654580"
  },
  {
    "text": "the the running time of this program is the total running time is proportional",
    "start": "4654580",
    "end": "4661280"
  },
  {
    "text": "to the to the to the number of spanning trees but between the the 10th and 11th spanning",
    "start": "4661280",
    "end": "4667820"
  },
  {
    "text": "tree it might take a while and then it'll start generating lots and all the Spanish trees again fast so so being all",
    "start": "4667820",
    "end": "4673219"
  },
  {
    "text": "the amortized running time is linear anything but but what if you say that no you're not you you put an absolute bound",
    "start": "4673219",
    "end": "4680120"
  },
  {
    "text": "on the amount of time between spanning trees fan trees have to come out at a constant pulse rate and I was I was",
    "start": "4680120",
    "end": "4688100"
  },
  {
    "text": "almost there to having a loopless algorithm for the the series parallel spank trees uh and then and then it",
    "start": "4688100",
    "end": "4695179"
  },
  {
    "text": "would it would break down and so then I had to then another two hours would go by I thought of another way and then I",
    "start": "4695179",
    "end": "4700520"
  },
  {
    "text": "would then that would fail too and and for for three four days I was I finally decided okay I've used up my budget on",
    "start": "4700520",
    "end": "4707179"
  },
  {
    "text": "this you know if I don't get it now I mean I tried all kinds of of things about uh instead of changing the uh you",
    "start": "4707179",
    "end": "4715400"
  },
  {
    "text": "know one of the thing things was uh well the the problem is you see that we have we have easy no easy nodes and not easy",
    "start": "4715400",
    "end": "4722960"
  },
  {
    "text": "nodes in that algorithm the easy ones remember we were the ones that the type was equal to the value that meant that a",
    "start": "4722960",
    "end": "4728300"
  },
  {
    "text": "series a series node of value one or parallel with value zero was too easy and in that and",
    "start": "4728300",
    "end": "4734540"
  },
  {
    "text": "and when you when you make the change um to designate another child uh all the",
    "start": "4734540",
    "end": "4741500"
  },
  {
    "text": "easy all of your easy descendants be changed they're no longer easy and all the and all the uh uh all the uneasy",
    "start": "4741500",
    "end": "4748940"
  },
  {
    "text": "ones have become easy so so you're complementing the easy uneasy thing and that was and and I had to be able to do",
    "start": "4748940",
    "end": "4754940"
  },
  {
    "text": "that in my data structure sort of in a lazy way instead of instead of simultaneously and so I kept going",
    "start": "4754940",
    "end": "4761239"
  },
  {
    "text": "around and around and around until finally I I I you know after four days I I solved that problem and I got it out",
    "start": "4761239",
    "end": "4767480"
  },
  {
    "text": "of my system but that but that was the longest the longest part the rest of it was was uh I would say about",
    "start": "4767480",
    "end": "4774800"
  },
  {
    "text": "I mean certainly the first program was it was was was the day in the and this",
    "start": "4774800",
    "end": "4780560"
  },
  {
    "text": "gray SP span I think was three days uh uh including two days of debugging I",
    "start": "4780560",
    "end": "4785900"
  },
  {
    "text": "mean you know because the debugging was a was the major thing and I didn't have the phone ringing either you know I'm",
    "start": "4785900",
    "end": "4791780"
  },
  {
    "text": "retired now so I don't have to answer email so so so so I can work a lot faster than most of you guys",
    "start": "4791780",
    "end": "4798699"
  },
  {
    "text": "um I'm retired from email that's what I meant",
    "start": "4801920",
    "end": "4806739"
  },
  {
    "text": "yeah but the uh but the code uh I find that",
    "start": "4807679",
    "end": "4813140"
  },
  {
    "text": "you know I'm writing this code and I'm and I'm putting the English explanations in the code and that actually saves me",
    "start": "4813140",
    "end": "4819860"
  },
  {
    "text": "time uh I I find if I if I'm trying to write the program and explaining it as I go",
    "start": "4819860",
    "end": "4825620"
  },
  {
    "text": "assuming that somebody's going to read it even though it's usually just you know for my own benefit to read I when I",
    "start": "4825620",
    "end": "4831739"
  },
  {
    "text": "wrote the program I didn't know that I was going to be putting it on the web um uh I I write it so I try to explain",
    "start": "4831739",
    "end": "4838040"
  },
  {
    "text": "it to myself as I'm writing it and I find that that it that does speed up the total amount of time because I get my",
    "start": "4838040",
    "end": "4843560"
  },
  {
    "text": "thoughts in order much better that way",
    "start": "4843560",
    "end": "4847000"
  },
  {
    "text": "I had a somebody caught the little little joke I had in there but Bond well uh also there was another one you know",
    "start": "4849440",
    "end": "4856219"
  },
  {
    "text": "in the if you compare the programs one of them says this is the current edge of interest and when you and when you go to",
    "start": "4856219",
    "end": "4862159"
  },
  {
    "text": "the corresponding comment in this one it's the current interest-bearing Bond",
    "start": "4862159",
    "end": "4867940"
  },
  {
    "text": "so I have fun while I'm doing this too yeah huh any other questions",
    "start": "4871400",
    "end": "4879140"
  },
  {
    "text": "okay well now I have to choose the people who has the best questions I guess and uh",
    "start": "4879140",
    "end": "4884600"
  },
  {
    "text": "I don't know how to do the darn thing okay but I guess the ones who asked the first to you you two guys are are in on",
    "start": "4884600",
    "end": "4891920"
  },
  {
    "text": "it and I guess uh I think you two also uh I mean Vaughn already has the book he",
    "start": "4891920",
    "end": "4898040"
  },
  {
    "text": "doesn't need it right so so yeah okay so thanks very much",
    "start": "4898040",
    "end": "4906100"
  }
]