[
  {
    "text": "Now we gonna look at a very famous algorithm called the Gram-Schmidt algorithm.",
    "start": "4130",
    "end": "8820"
  },
  {
    "text": "Uh, the name stands for two mathematicians, Gram and Schmidt.",
    "start": "8820",
    "end": "12195"
  },
  {
    "text": "Um, so we'll- we'll take a look at it, um,",
    "start": "12195",
    "end": "15629"
  },
  {
    "text": "and it's- it has to do with linear independence and in fact it is an algorithm.",
    "start": "15630",
    "end": "20925"
  },
  {
    "text": "I mean, for- for- for right now its main purpose is to detect whether a set",
    "start": "20925",
    "end": "25144"
  },
  {
    "text": "of vectors is linearly dependent or linearly independent.",
    "start": "25145",
    "end": "29790"
  },
  {
    "text": "We're actually gonna see later that it is",
    "start": "29790",
    "end": "31460"
  },
  {
    "text": "enormously useful in a lot of practical applications,",
    "start": "31460",
    "end": "34399"
  },
  {
    "text": "but that's not gonna come up for a while.",
    "start": "34400",
    "end": "36395"
  },
  {
    "text": "So right now it is again,",
    "start": "36395",
    "end": "38345"
  },
  {
    "text": "I'm sorry, just kind of weird and abstract.",
    "start": "38345",
    "end": "40760"
  },
  {
    "text": "Um, I should also say another thing about it.",
    "start": "40760",
    "end": "42920"
  },
  {
    "text": "Um, you know, we described one algorithm already,",
    "start": "42920",
    "end": "46129"
  },
  {
    "text": "that's the K-means algorithm and- and now we're gonna describe Gram-Schmidt.",
    "start": "46130",
    "end": "50630"
  },
  {
    "text": "I guess, I'm not one who thinks that",
    "start": "50630",
    "end": "53705"
  },
  {
    "text": "students should be forced to implement these things by themselves.",
    "start": "53705",
    "end": "57545"
  },
  {
    "text": "I mean, I don't know.",
    "start": "57545",
    "end": "59054"
  },
  {
    "text": "I mean, I suppose there is a point to it.",
    "start": "59055",
    "end": "60980"
  },
  {
    "text": "Um, I don't, b- but it- I will describe it.",
    "start": "60980",
    "end": "64400"
  },
  {
    "text": "And of course, you know, when you're doing this in practice, um,",
    "start": "64400",
    "end": "67870"
  },
  {
    "text": "you're gonna rely on,",
    "start": "67870",
    "end": "70320"
  },
  {
    "text": "ah, on- on- on implementations written by others.",
    "start": "70320",
    "end": "74280"
  },
  {
    "text": "Um, so- so the point of it is not that you're gonna go out and code this yourself,",
    "start": "74280",
    "end": "78610"
  },
  {
    "text": "but the point is you should understand what it is, and how it works, and what it does.",
    "start": "78610",
    "end": "82150"
  },
  {
    "text": "But when you actually use it,",
    "start": "82150",
    "end": "83360"
  },
  {
    "text": "you're gonna call, uh, you know,",
    "start": "83360",
    "end": "85040"
  },
  {
    "text": "some routine written by someone else.",
    "start": "85040",
    "end": "87380"
  },
  {
    "text": "[NOISE] Okay. So here's what it is.",
    "start": "87380",
    "end": "91185"
  },
  {
    "text": "Um, for now we'll see that it's a lot more than this,",
    "start": "91185",
    "end": "94310"
  },
  {
    "text": "but for now, here's what it is.",
    "start": "94310",
    "end": "95689"
  },
  {
    "text": "It is simply an algorithm that checks that a set of",
    "start": "95690",
    "end": "97820"
  },
  {
    "text": "vectors is linearly independent. That's it.",
    "start": "97820",
    "end": "100900"
  },
  {
    "text": "Um, we're gonna see it has a lot of other uses later.",
    "start": "100900",
    "end": "104330"
  },
  {
    "text": "In fact, you know,",
    "start": "104330",
    "end": "106070"
  },
  {
    "text": "when the whole class is about 2 or 3 algorithms",
    "start": "106070",
    "end": "108320"
  },
  {
    "text": "and this is- they're basically all related to that.",
    "start": "108320",
    "end": "111230"
  },
  {
    "text": "That's all- it's all this- this one. This is Gram-Schmidt.",
    "start": "111230",
    "end": "114505"
  },
  {
    "text": "Okay. So here it is.",
    "start": "114505",
    "end": "116299"
  },
  {
    "text": "We're just going to jump right in.",
    "start": "116300",
    "end": "117350"
  },
  {
    "text": "[NOISE] Um, and like I said right now it's kind of abstract,",
    "start": "117350",
    "end": "120140"
  },
  {
    "text": "but that it'll- you know,",
    "start": "120140",
    "end": "121820"
  },
  {
    "text": "it'll emerge later in the book,",
    "start": "121820",
    "end": "123890"
  },
  {
    "text": "uh, that it has a lot of uses.",
    "start": "123890",
    "end": "125555"
  },
  {
    "text": "Okay. So we're given a set of vectors,",
    "start": "125555",
    "end": "128660"
  },
  {
    "text": "uh, and there are n vectors and we have k of them.",
    "start": "128660",
    "end": "131165"
  },
  {
    "text": "And what's gonna do is it's gonna process them,",
    "start": "131165",
    "end": "133909"
  },
  {
    "text": "the vectors one at a time,",
    "start": "133910",
    "end": "135715"
  },
  {
    "text": "um, and in the end it is going to, uh,",
    "start": "135715",
    "end": "140310"
  },
  {
    "text": "will be- will be able to use this to determine if those vectors",
    "start": "140310",
    "end": "143345"
  },
  {
    "text": "are linearly independent or linearly dependent, right?",
    "start": "143345",
    "end": "147560"
  },
  {
    "text": "To remind you, linearly dependent means that there's",
    "start": "147560",
    "end": "150380"
  },
  {
    "text": "a linear combination of them at 0  with the coefficients not all being 0.",
    "start": "150380",
    "end": "154745"
  },
  {
    "text": "Linear independent means that's not the case.",
    "start": "154745",
    "end": "157114"
  },
  {
    "text": "Okay, so here's what it does.",
    "start": "157115",
    "end": "159035"
  },
  {
    "text": "Um, the first step is it takes the a_i th vector a_i and it subtracts from a_i, um,",
    "start": "159035",
    "end": "168735"
  },
  {
    "text": "a it main- maintains,",
    "start": "168735",
    "end": "170610"
  },
  {
    "text": "I should say it maintains a set of vectors,",
    "start": "170610",
    "end": "173025"
  },
  {
    "text": "q_1, q_2, q_3, up to q_k unless the algorithm terminates early.",
    "start": "173025",
    "end": "178769"
  },
  {
    "text": "It generates a set of q's which are orthonormal.",
    "start": "178770",
    "end": "182460"
  },
  {
    "text": "Oh, I should mention,",
    "start": "182460",
    "end": "184215"
  },
  {
    "text": "uh, that the, uh,",
    "start": "184215",
    "end": "185790"
  },
  {
    "text": "the notation q, uh,",
    "start": "185790",
    "end": "189180"
  },
  {
    "text": "is- it is just a convention.",
    "start": "189180",
    "end": "191579"
  },
  {
    "text": "Typically, a set of q's are orthonormal vectors, right?",
    "start": "191580",
    "end": "196170"
  },
  {
    "text": "By the way, same- same for Us and Vs. And this- this is just convention, so, okay.",
    "start": "196170",
    "end": "201795"
  },
  {
    "text": "But in this case it- it's following the convention.",
    "start": "201795",
    "end": "204944"
  },
  {
    "text": "So the vectors, ah,",
    "start": "204945",
    "end": "206835"
  },
  {
    "text": "it's gonna generate a set of vectors q_1,",
    "start": "206835",
    "end": "208790"
  },
  {
    "text": "q_2 which are orthonormal.",
    "start": "208790",
    "end": "209985"
  },
  {
    "text": "So here's what's going to happen.",
    "start": "209985",
    "end": "211275"
  },
  {
    "text": "Um, you're going to take a_i and you are gonna subtract from it the- this,",
    "start": "211275",
    "end": "219659"
  },
  {
    "text": "uh- this, um, the inner part of q_1 and a_i.",
    "start": "219660",
    "end": "224820"
  },
  {
    "text": "Look that's a number times q_1 and so on.",
    "start": "224820",
    "end": "227445"
  },
  {
    "text": "Now, what you'll recognize,",
    "start": "227445",
    "end": "228600"
  },
  {
    "text": "you may remember this from last time in fact,",
    "start": "228600",
    "end": "230895"
  },
  {
    "text": "is that if- if a_i is a linear combination of q_1 up to q_i minus 1,",
    "start": "230895",
    "end": "240260"
  },
  {
    "text": "then in fact, all of this is equal to a_ i and q_1 tilde is 0.",
    "start": "240260",
    "end": "245420"
  },
  {
    "text": "So if q_1 tilde turns out to be 0,",
    "start": "245420",
    "end": "248090"
  },
  {
    "text": "that mean- that means that a_i is a linear combination of q_1 up to q_a minus 1,",
    "start": "248090",
    "end": "253489"
  },
  {
    "text": "uh- uh, are q_i minus 1, sorry.",
    "start": "253490",
    "end": "256150"
  },
  {
    "text": "Now what we do is again,",
    "start": "256150",
    "end": "258090"
  },
  {
    "text": "we- we check if q_i tilde is 0, if it is we quit.",
    "start": "258090",
    "end": "261660"
  },
  {
    "text": "Uh, and because in that case it'll turn out that these vectors are linearly dependent.",
    "start": "261660",
    "end": "267365"
  },
  {
    "text": "Um, If not- if non-zero,",
    "start": "267365",
    "end": "269824"
  },
  {
    "text": "we simply divide by the norm and we normalize and we get q_i from q_i tilde.",
    "start": "269825",
    "end": "274355"
  },
  {
    "text": "Okay. So if this algorithm runs all the way to the end and does not quit,",
    "start": "274355",
    "end": "279905"
  },
  {
    "text": "as in step two here of the algorithm,",
    "start": "279905",
    "end": "283175"
  },
  {
    "text": "then that's gonna be,",
    "start": "283175",
    "end": "284935"
  },
  {
    "text": "that's gonna tell us that those vectors are linearly independent.",
    "start": "284935",
    "end": "289120"
  },
  {
    "text": "If it stops here,",
    "start": "289120",
    "end": "291135"
  },
  {
    "text": "if it stops in algorithm in- in step j,",
    "start": "291135",
    "end": "293835"
  },
  {
    "text": "then it's gonna tell us that- that",
    "start": "293835",
    "end": "295425"
  },
  {
    "text": "vector a_j is actually a linear combination of the previous ones,",
    "start": "295425",
    "end": "300125"
  },
  {
    "text": "a_1 up to a_j minus 1.",
    "start": "300125",
    "end": "302230"
  },
  {
    "text": "And that means that our set of vectors is linearly dependent, okay?",
    "start": "302230",
    "end": "306290"
  },
  {
    "text": "So that's the algorithm, um,",
    "start": "306290",
    "end": "308630"
  },
  {
    "text": "now the one that's actually used numerically in practice,",
    "start": "308630",
    "end": "311824"
  },
  {
    "text": "is mathematically equivalent, but it's not quite the same as this.",
    "start": "311824",
    "end": "315390"
  },
  {
    "text": "I mean, it generates exactly the same vectors and things like that,",
    "start": "315390",
    "end": "318290"
  },
  {
    "text": "but it's- its slightly different.",
    "start": "318290",
    "end": "320255"
  },
  {
    "text": "Okay. Now let's walk through an example, um.",
    "start": "320255",
    "end": "323530"
  },
  {
    "text": "Here's two vectors which are 2, 2 vectors.",
    "start": "323530",
    "end": "326264"
  },
  {
    "text": "Um, they are a_1 and a_2.",
    "start": "326265",
    "end": "328080"
  },
  {
    "text": "Um, this gray circle is showing you all points of norm 1.",
    "start": "328080",
    "end": "333095"
  },
  {
    "text": "So its a circle basically of- of radius 1.",
    "start": "333095",
    "end": "336415"
  },
  {
    "text": "Um, okay, and so let's see.",
    "start": "336415",
    "end": "337950"
  },
  {
    "text": "So that would tell us, for example,",
    "start": "337950",
    "end": "339260"
  },
  {
    "text": "the norm of a_1 is about 1 point whatever, 3,",
    "start": "339260",
    "end": "342185"
  },
  {
    "text": "I'm making that up, but that's about it.",
    "start": "342185",
    "end": "343775"
  },
  {
    "text": "Okay. So let's run Gram-Schmidt.",
    "start": "343775",
    "end": "346495"
  },
  {
    "text": "Well, we grab a_1 and the first thing we do is we subtract off from a_1,",
    "start": "346495",
    "end": "351710"
  },
  {
    "text": "uh, some linear combination of the previous q's.",
    "start": "351710",
    "end": "354860"
  },
  {
    "text": "But we have no previous q's,",
    "start": "354860",
    "end": "356030"
  },
  {
    "text": "so we subtract nothing.",
    "start": "356030",
    "end": "357185"
  },
  {
    "text": "And so that tells us that q_1,",
    "start": "357185",
    "end": "359165"
  },
  {
    "text": "this is the first step, right?",
    "start": "359165",
    "end": "361480"
  },
  {
    "text": "q_1, there we go, sorry about that.",
    "start": "361480",
    "end": "366465"
  },
  {
    "text": "So q_1 tilde is in fact just nothing but a_1.",
    "start": "366465",
    "end": "370470"
  },
  {
    "text": "Okay. So now that's the first step.",
    "start": "370470",
    "end": "373350"
  },
  {
    "text": "We check if it's 0, and it's definitely not 0.",
    "start": "373350",
    "end": "375705"
  },
  {
    "text": "And so we normalize it,",
    "start": "375705",
    "end": "376889"
  },
  {
    "text": "and that means we shrink it to get q_1,",
    "start": "376890",
    "end": "379410"
  },
  {
    "text": "and you see now it's green.",
    "start": "379410",
    "end": "381180"
  },
  {
    "text": "Um, and you can see that it's- it's arrow,",
    "start": "381180",
    "end": "383715"
  },
  {
    "text": "the tip of the arrow,",
    "start": "383715",
    "end": "384960"
  },
  {
    "text": "you know, shows, it's on that unit circle.",
    "start": "384960",
    "end": "387330"
  },
  {
    "text": "That's what it's called. And that means that now has norm 1 so that's q_1.",
    "start": "387330",
    "end": "391349"
  },
  {
    "text": "Okay. Next step.",
    "start": "391350",
    "end": "393030"
  },
  {
    "text": "Now it gets interesting, right?",
    "start": "393030",
    "end": "394650"
  },
  {
    "text": "Because now we go over to here.",
    "start": "394650",
    "end": "396104"
  },
  {
    "text": "And what happens is we take a_2 and we subtract off from a_2,",
    "start": "396105",
    "end": "401535"
  },
  {
    "text": "a multiple of q_1 to make a result orthogonal to q_1.",
    "start": "401535",
    "end": "405905"
  },
  {
    "text": "And so the correct thing to s- to subtract is minus q_1 transpose a_2, q_1.",
    "start": "405905",
    "end": "412785"
  },
  {
    "text": "And that's this vector here,",
    "start": "412785",
    "end": "414540"
  },
  {
    "text": "and we end up with this red vector here, which is q_2 tilde.",
    "start": "414540",
    "end": "417110"
  },
  {
    "text": "Now notice that q_2 tilde is orthogonal to q_1.",
    "start": "417110",
    "end": "420455"
  },
  {
    "text": "Because that's actually what we're doing is we're- we're- we're slowly",
    "start": "420455",
    "end": "423539"
  },
  {
    "text": "producing and we're- we're generating a set of orthonormal vectors.",
    "start": "423539",
    "end": "427400"
  },
  {
    "text": "Okay. Now, at this point is,",
    "start": "427400",
    "end": "431220"
  },
  {
    "text": "they're just ortho, they're not normal yet.",
    "start": "431220",
    "end": "433490"
  },
  {
    "text": "And so what we do here is we check if q_2_2 tilde is 0, it is not 0.",
    "start": "433490",
    "end": "437675"
  },
  {
    "text": "And therefore we- we scale it to make it have length 1 and we end up with,",
    "start": "437675",
    "end": "442254"
  },
  {
    "text": "there we go, there's q_1 and q_2.",
    "start": "442255",
    "end": "444120"
  },
  {
    "text": "And so this is extremely boring.",
    "start": "444120",
    "end": "447005"
  },
  {
    "text": "There's no reason to- to have any interest in because",
    "start": "447005",
    "end": "450155"
  },
  {
    "text": "there's nothing we- just to be completely open about it.",
    "start": "450155",
    "end": "453835"
  },
  {
    "text": "There's nothing practical we can do with this, yes. So yeah.",
    "start": "453835",
    "end": "457115"
  },
  {
    "text": "So I'm just- I'm admitting, that's all.",
    "start": "457115",
    "end": "458675"
  },
  {
    "text": "I'm admitting it. Okay, so.",
    "start": "458675",
    "end": "460190"
  },
  {
    "text": "Uh, so the point is if you run the- the,",
    "start": "460190",
    "end": "462865"
  },
  {
    "text": "if you run Gram-Schmidt on these two vectors,",
    "start": "462865",
    "end": "465539"
  },
  {
    "text": "a_1 and a_2, that's what comes out, q_1 and q_2.",
    "start": "465540",
    "end": "469320"
  },
  {
    "text": "And you could well ask, who cares?",
    "start": "469320",
    "end": "472910"
  },
  {
    "text": "And I would say, you don't know.",
    "start": "472910",
    "end": "475895"
  },
  {
    "text": "The answer is, you don't know yet.",
    "start": "475895",
    "end": "477455"
  },
  {
    "text": "You'll know later that this actually can do all sorts of supercool practical stuff.",
    "start": "477455",
    "end": "481220"
  },
  {
    "text": "But for the moment,",
    "start": "481220",
    "end": "482675"
  },
  {
    "text": "this is all just weird and abstracting, whatever.",
    "start": "482675",
    "end": "485014"
  },
  {
    "text": "So just trust me. All right.",
    "start": "485015",
    "end": "487145"
  },
  {
    "text": "So we can analyze this a bit.",
    "start": "487145",
    "end": "490310"
  },
  {
    "text": "I'm not gonna go into it in too much detail, um,",
    "start": "490310",
    "end": "493355"
  },
  {
    "text": "because this is the kind of thing that's best done by you kinda,",
    "start": "493355",
    "end": "495965"
  },
  {
    "text": "you know, reading through the book carefully and stuff like that.",
    "start": "495965",
    "end": "498360"
  },
  {
    "text": "But I will say just a few things about how the algorithm,",
    "start": "498360",
    "end": "500944"
  },
  {
    "text": "what it does. Um.",
    "start": "500945",
    "end": "502760"
  },
  {
    "text": "So the first thing, and I think our example already kind of gave us a hint,",
    "start": "502760",
    "end": "506450"
  },
  {
    "text": "is the q's that come out of the Gram-Schmidt algorithm are orthonormal, okay?",
    "start": "506450",
    "end": "511475"
  },
  {
    "text": "And the- the reason- we can check, um,",
    "start": "511475",
    "end": "514400"
  },
  {
    "text": "suppose it's true for i minus 1,",
    "start": "514400",
    "end": "516919"
  },
  {
    "text": "and we'll show this by, uh, recursion, okay?",
    "start": "516920",
    "end": "519680"
  },
  {
    "text": "Um, in that orthogonalization step,",
    "start": "519680",
    "end": "521945"
  },
  {
    "text": "you are actually subtracting",
    "start": "521945",
    "end": "523820"
  },
  {
    "text": "exactly the coefficient you need to of the previous q's to make it orthogonal,",
    "start": "523820",
    "end": "529040"
  },
  {
    "text": "uh, to all of them, okay?",
    "start": "529040",
    "end": "531709"
  },
  {
    "text": "So when you finish q_i tilde is orthogonal to all the previous ones.",
    "start": "531710",
    "end": "535325"
  },
  {
    "text": "That- that's how that works.",
    "start": "535325",
    "end": "536630"
  },
  {
    "text": "Um, now to see that,",
    "start": "536630",
    "end": "538205"
  },
  {
    "text": "all we do is we take an inner product, uh,",
    "start": "538205",
    "end": "540485"
  },
  {
    "text": "with q_j so q_j transpose q_i tilde is equal to,",
    "start": "540485",
    "end": "545570"
  },
  {
    "text": "and this is q_i tilde here and I'm just gonna simply work it out and see what we get.",
    "start": "545570",
    "end": "550505"
  },
  {
    "text": "Um, but over here we get things like,",
    "start": "550505",
    "end": "553400"
  },
  {
    "text": "uh, q_j tilde q_1,",
    "start": "553400",
    "end": "555935"
  },
  {
    "text": "well, uh, that is gonna be,",
    "start": "555935",
    "end": "558890"
  },
  {
    "text": "uh, that's gonna be 0, right?",
    "start": "558890",
    "end": "561800"
  },
  {
    "text": "So the only one that comes out is we end up with q_j transpose, uh, sorry,",
    "start": "561800",
    "end": "565894"
  },
  {
    "text": "the inner product of q_j and a_i and then again q_j and a_i,",
    "start": "565895",
    "end": "569570"
  },
  {
    "text": "and you subtract them, you get 0, so it's orthogonal,",
    "start": "569570",
    "end": "572300"
  },
  {
    "text": "um, and what that says is that the new- it says q_i tilde",
    "start": "572300",
    "end": "577730"
  },
  {
    "text": "is orthogonal to all the previous ones but",
    "start": "577730",
    "end": "580490"
  },
  {
    "text": "if I scale it by a number because to make its norm 1,",
    "start": "580490",
    "end": "583250"
  },
  {
    "text": "it's still orthogonal, so- so the- so the q's are orthogonal and of course,",
    "start": "583250",
    "end": "587735"
  },
  {
    "text": "the normalization step guarantees that the norm is 1, okay,",
    "start": "587735",
    "end": "590990"
  },
  {
    "text": "so- so it says that the q_i's that come out of",
    "start": "590990",
    "end": "593120"
  },
  {
    "text": "the back end of the Gram-Schmidt algorithm are orthonormal.",
    "start": "593120",
    "end": "597695"
  },
  {
    "text": "Okay. Um, now, if it hasn't- if the algorithm has not terminated before iteration i,",
    "start": "597695",
    "end": "605240"
  },
  {
    "text": "then it turns out i- a_i is a linear combination of q_1 through q_y,",
    "start": "605240",
    "end": "610205"
  },
  {
    "text": "um, and we can even see that because we",
    "start": "610205",
    "end": "613430"
  },
  {
    "text": "can actually very explicitly write down what the linear combination is.",
    "start": "613430",
    "end": "616505"
  },
  {
    "text": "It is literally the norm of q_y tilde times q_i plus,",
    "start": "616505",
    "end": "621455"
  },
  {
    "text": "and then again, this inner product,",
    "start": "621455",
    "end": "623360"
  },
  {
    "text": "uh, this- these are inner product coefficients.",
    "start": "623360",
    "end": "625820"
  },
  {
    "text": "It's the one you've already seen before in an orthonormal, uh, basis expansion.",
    "start": "625820",
    "end": "629600"
  },
  {
    "text": "Um, so what we do is we- we get that, that's very explicit,",
    "start": "629600",
    "end": "634430"
  },
  {
    "text": "so a_i is literally a linear combination of q_1 up to q_i, okay?",
    "start": "634430",
    "end": "640475"
  },
  {
    "text": "In fact, no, that's one of the ways we can say this is that each,",
    "start": "640475",
    "end": "644134"
  },
  {
    "text": "each a_i is a linear combination of q_1 up to q_i, okay?",
    "start": "644135",
    "end": "651530"
  },
  {
    "text": "Um, and it turns out the reverse is true too,",
    "start": "651530",
    "end": "655265"
  },
  {
    "text": "each q_i is a linear combination of a_1 through a_i and again, you can see that, uh,",
    "start": "655265",
    "end": "659615"
  },
  {
    "text": "by induction, I'm not gonna go into the details there,",
    "start": "659615",
    "end": "662285"
  },
  {
    "text": "but that's- that's how the- that's the case.",
    "start": "662285",
    "end": "665285"
  },
  {
    "text": "Okay, we get to, uh, early termination.",
    "start": "665285",
    "end": "668779"
  },
  {
    "text": "Um, if it terminates in step j,",
    "start": "668780",
    "end": "671660"
  },
  {
    "text": "what that says is that q_j tilde is equal to 0.",
    "start": "671660",
    "end": "677254"
  },
  {
    "text": "That means that when you took a_i and you- a_j and when you subtracted",
    "start": "677255",
    "end": "681470"
  },
  {
    "text": "the appropriate linear combination of q_1 up to q_j minus 1 from it, you got 0.",
    "start": "681470",
    "end": "687545"
  },
  {
    "text": "Uh, and that tells you actually that equality holds um,",
    "start": "687545",
    "end": "691685"
  },
  {
    "text": "now- now will meet- now we'll notice that each of these",
    "start": "691685",
    "end": "695570"
  },
  {
    "text": "q_i's here is a linear combination of the a_i's,",
    "start": "695570",
    "end": "700220"
  },
  {
    "text": "uh, a_1 up to a_j minus 1 so this is a linear combination of linear combinations.",
    "start": "700220",
    "end": "705694"
  },
  {
    "text": "Linear combination of linear combination is a- is again",
    "start": "705695",
    "end": "708080"
  },
  {
    "text": "a linear combination and that says that when it stops,",
    "start": "708080",
    "end": "711395"
  },
  {
    "text": "it says if a_j is a linear combination of a_1 up to a_j minus 1,",
    "start": "711395",
    "end": "716345"
  },
  {
    "text": "that's- that is one of the definitions of being dependent.",
    "start": "716345",
    "end": "719839"
  },
  {
    "text": "So what that says is that the- the Gram-Schmidt algorithm,",
    "start": "719840",
    "end": "723905"
  },
  {
    "text": "if it terminates early,",
    "start": "723905",
    "end": "725330"
  },
  {
    "text": "then it- it term- it terminates because the a's you started with were linearly dependent.",
    "start": "725330",
    "end": "731850"
  },
  {
    "text": "I want to say a little bit about the complexity of the Gram-Schmidt algorithm,",
    "start": "732760",
    "end": "736775"
  },
  {
    "text": "about how long does it take to, you know,",
    "start": "736775",
    "end": "738665"
  },
  {
    "text": "basically how many flops does it take to actually carry this out?",
    "start": "738665",
    "end": "741904"
  },
  {
    "text": "Um, well, let's figure it out in iteration i,",
    "start": "741905",
    "end": "745325"
  },
  {
    "text": "uh, you have- you have to evaluate i minus 1 inner products, right?",
    "start": "745325",
    "end": "749090"
  },
  {
    "text": "Um, and that costs- each inner product costs 2n minus 1 flops,",
    "start": "749090",
    "end": "754145"
  },
  {
    "text": "uh, and there's i minus 1 so that's that, okay?",
    "start": "754145",
    "end": "757910"
  },
  {
    "text": "So that's the total number of flops.",
    "start": "757910",
    "end": "759514"
  },
  {
    "text": "Um, to compute q_i tilde,",
    "start": "759515",
    "end": "761695"
  },
  {
    "text": "you have to, uh, subtract, uh,",
    "start": "761695",
    "end": "764830"
  },
  {
    "text": "subtract off various things and that costs you 2n i minus 1 flops, okay?",
    "start": "764830",
    "end": "770995"
  },
  {
    "text": "Um, then it costs you 3n flops, uh,",
    "start": "770995",
    "end": "776945"
  },
  {
    "text": "to calculate the norm and then divide q_i tilde by that norm to get q_i,",
    "start": "776945",
    "end": "782660"
  },
  {
    "text": "so that's 3n flops.",
    "start": "782660",
    "end": "784305"
  },
  {
    "text": "And the total is now uh,",
    "start": "784305",
    "end": "786325"
  },
  {
    "text": "we add this plus this,",
    "start": "786325",
    "end": "790030"
  },
  {
    "text": "plus that, and we have to now sum that from i",
    "start": "790030",
    "end": "793390"
  },
  {
    "text": "equals 1 to k and you get something horrible that looks like that.",
    "start": "793390",
    "end": "797080"
  },
  {
    "text": "Now, you could work out what that is.",
    "start": "797080",
    "end": "799090"
  },
  {
    "text": "In fact, it's exactly this and I- I'll- I'll tell you why.",
    "start": "799090",
    "end": "802210"
  },
  {
    "text": "It's- I'm going to use a formula which you can just remember or",
    "start": "802210",
    "end": "805600"
  },
  {
    "text": "lookup or go to Wikipedia to find out or something like that.",
    "start": "805600",
    "end": "809675"
  },
  {
    "text": "And it's this, it's the sum from i equals 1 to k of i",
    "start": "809675",
    "end": "812779"
  },
  {
    "text": "minus 1 is actually k times k minus 1 over 2.",
    "start": "812780",
    "end": "816095"
  },
  {
    "text": "In other words, uh,",
    "start": "816095",
    "end": "817295"
  },
  {
    "text": "the following sum, you know,",
    "start": "817295",
    "end": "819470"
  },
  {
    "text": "if- if- you can check it,if k equals 5 and says you should add up 0 plus 1 plus",
    "start": "819470",
    "end": "825470"
  },
  {
    "text": "2 plus 3 plus 4 and you will find out that that is 5 times 4 divided by 2, which is 10.",
    "start": "825470",
    "end": "830420"
  },
  {
    "text": "And it's correct, I mean,",
    "start": "830420",
    "end": "832295"
  },
  {
    "text": "maybe I misspoke it,",
    "start": "832295",
    "end": "833660"
  },
  {
    "text": "but it's correct, um, so.",
    "start": "833660",
    "end": "836420"
  },
  {
    "text": "Anyway, so you get some horrible thing like this,",
    "start": "836420",
    "end": "838519"
  },
  {
    "text": "now what you have to remember about flop counts is it's extremely crude.",
    "start": "838520",
    "end": "843005"
  },
  {
    "text": "So we're gonna drop what are- what we call a non-dominant terms, right?",
    "start": "843005",
    "end": "848075"
  },
  {
    "text": "So for example, ah, you know,",
    "start": "848075",
    "end": "850715"
  },
  {
    "text": "when you work this out,",
    "start": "850715",
    "end": "852095"
  },
  {
    "text": "the biggest term you're possibly going to get is going to be",
    "start": "852095",
    "end": "855079"
  },
  {
    "text": "this 4n times k squared divided by 2, that's 2nk squared.",
    "start": "855080",
    "end": "860435"
  },
  {
    "text": "All the other terms have a coefficient of either n or k which is",
    "start": "860435",
    "end": "863870"
  },
  {
    "text": "smaller and we're interested in the case where n and k are reasonably large,",
    "start": "863870",
    "end": "868010"
  },
  {
    "text": "so we just drop them.",
    "start": "868010",
    "end": "869825"
  },
  {
    "text": "And so this is completely standard in- in a flop count and you would say that",
    "start": "869825",
    "end": "873440"
  },
  {
    "text": "Gram-Schmidt has a complexity of 2nk squared flops.",
    "start": "873440",
    "end": "879065"
  },
  {
    "text": "Um, and the truth is- is that it's not quite right um,",
    "start": "879065",
    "end": "882500"
  },
  {
    "text": "but the whole flop count model is so approximate that this is just fine, right?",
    "start": "882500",
    "end": "888050"
  },
  {
    "text": "Because we're, you know,",
    "start": "888050",
    "end": "889475"
  },
  {
    "text": "we're pretending that multiplies and adds and divisions and things like that,",
    "start": "889475",
    "end": "894334"
  },
  {
    "text": "even a square root because we have to calculate a norm,",
    "start": "894335",
    "end": "896705"
  },
  {
    "text": "and we're kinda pretending that these all cost the same, which they don't.",
    "start": "896705",
    "end": "899960"
  },
  {
    "text": "Okay, so you get 2nk squared.",
    "start": "899960",
    "end": "902150"
  },
  {
    "text": "Uh, that's interesting, right?",
    "start": "902150",
    "end": "903440"
  },
  {
    "text": "Because it tells you that it is, um,",
    "start": "903440",
    "end": "906380"
  },
  {
    "text": "it is- it is quadratic in the number of vectors,",
    "start": "906380",
    "end": "911930"
  },
  {
    "text": "uh, that you apply it to, um,",
    "start": "911930",
    "end": "914120"
  },
  {
    "text": "and it's linear, you would say in the dimension n.",
    "start": "914120",
    "end": "919140"
  }
]