[
  {
    "text": "So we are going to talk about random walk with restarts and personalized PageRank.",
    "start": "4460",
    "end": "10740"
  },
  {
    "text": "And this will be extensions of our initial,",
    "start": "10740",
    "end": "13650"
  },
  {
    "text": "uh, PageRank idea that we have just discussed.",
    "start": "13650",
    "end": "16710"
  },
  {
    "text": "So let me give you an example how this would be very useful.",
    "start": "16710",
    "end": "21509"
  },
  {
    "text": "So we are going to talk about a problem of recommendations.",
    "start": "21510",
    "end": "25980"
  },
  {
    "text": "Imagine you- you have a set of users, customers,",
    "start": "25980",
    "end": "29670"
  },
  {
    "text": "uh, and a set of items,",
    "start": "29670",
    "end": "31860"
  },
  {
    "text": "uh, perhaps products, movies.",
    "start": "31860",
    "end": "34215"
  },
  {
    "text": "And then you create interactions between users and items by",
    "start": "34215",
    "end": "37880"
  },
  {
    "text": "basically saying a given user perhaps purchased a given item,",
    "start": "37880",
    "end": "41600"
  },
  {
    "text": "or a given user watched a given movie, right?",
    "start": "41600",
    "end": "44940"
  },
  {
    "text": "So this is now our bipartite graph representation,",
    "start": "44940",
    "end": "49010"
  },
  {
    "text": "uh, here of this user to item relation.",
    "start": "49010",
    "end": "52180"
  },
  {
    "text": "And then what we want to do is somehow measure similarity or proximity on graphs.",
    "start": "52180",
    "end": "58295"
  },
  {
    "text": "Why is this useful?",
    "start": "58295",
    "end": "60679"
  },
  {
    "text": "This is useful because if you are a online store or if you are Netflix,",
    "start": "60680",
    "end": "66305"
  },
  {
    "text": "you want to ask yourself,",
    "start": "66305",
    "end": "67505"
  },
  {
    "text": "what items should I recommend to a user who,",
    "start": "67505",
    "end": "70850"
  },
  {
    "text": "you know, purchased an item Q.",
    "start": "70850",
    "end": "73580"
  },
  {
    "text": "And the idea would be that if you know two items, P and Q,",
    "start": "73580",
    "end": "77915"
  },
  {
    "text": "are purchased by a lot of, uh, similar users,",
    "start": "77915",
    "end": "82805"
  },
  {
    "text": "a lot of other users have, let say,",
    "start": "82805",
    "end": "84530"
  },
  {
    "text": "bought or enjoyed the same- the same item,",
    "start": "84530",
    "end": "87350"
  },
  {
    "text": "the same movie, then- then whenever a user is looking at item Q,",
    "start": "87350",
    "end": "91509"
  },
  {
    "text": "we should also recommend, uh,",
    "start": "91510",
    "end": "93225"
  },
  {
    "text": "item P. So now,",
    "start": "93225",
    "end": "96075"
  },
  {
    "text": "how are we going to quantify this notion of proximity or",
    "start": "96075",
    "end": "98930"
  },
  {
    "text": "relatedness of different items in this graph.",
    "start": "98930",
    "end": "102620"
  },
  {
    "text": "So the question is, for example,",
    "start": "102620",
    "end": "105080"
  },
  {
    "text": "if I have this graph as I show here,",
    "start": "105080",
    "end": "106670"
  },
  {
    "text": "and I have items, you know,",
    "start": "106670",
    "end": "107825"
  },
  {
    "text": "A and A prime and B and B prime.",
    "start": "107825",
    "end": "109774"
  },
  {
    "text": "The question is which two are more related?",
    "start": "109775",
    "end": "112930"
  },
  {
    "text": "So you could do- one thing to do would be to say,",
    "start": "112930",
    "end": "115940"
  },
  {
    "text": "you know, let's measure shortest path.",
    "start": "115940",
    "end": "117800"
  },
  {
    "text": "So A has a shorter path than B to B-prime,",
    "start": "117800",
    "end": "121890"
  },
  {
    "text": "so, you know, A and A prime are more related.",
    "start": "121890",
    "end": "125965"
  },
  {
    "text": "However, the issue becomes,",
    "start": "125965",
    "end": "128610"
  },
  {
    "text": "is that- that you could then say, oh,",
    "start": "128610",
    "end": "130130"
  },
  {
    "text": "but if I have another example,",
    "start": "130130",
    "end": "131510"
  },
  {
    "text": "let's say this one where I have C and C prime.",
    "start": "131510",
    "end": "134000"
  },
  {
    "text": "And now C and C prime have to users that",
    "start": "134000",
    "end": "136940"
  },
  {
    "text": "bo- that both of let say purchased these two items,",
    "start": "136940",
    "end": "140345"
  },
  {
    "text": "then C and C prime intuitively are more related,",
    "start": "140345",
    "end": "144200"
  },
  {
    "text": "are at closer proximity than A and A prime, right?",
    "start": "144200",
    "end": "147800"
  },
  {
    "text": "So now, the question is,",
    "start": "147800",
    "end": "149135"
  },
  {
    "text": "how would I develop a metric that would allow me to kind of say,",
    "start": "149135",
    "end": "152974"
  },
  {
    "text": "hi, it's kind of the shortest path,",
    "start": "152975",
    "end": "154850"
  },
  {
    "text": "but it's also about how many different, uh,",
    "start": "154850",
    "end": "157790"
  },
  {
    "text": "neighbors you have in",
    "start": "157790",
    "end": "158870"
  },
  {
    "text": "common and how many different paths allow you to go from one, uh, to another.",
    "start": "158870",
    "end": "163995"
  },
  {
    "text": "And they- the idea here is that, er,",
    "start": "163995",
    "end": "167220"
  },
  {
    "text": "PageRank is going to solve this because",
    "start": "167220",
    "end": "169955"
  },
  {
    "text": "in this third example, you know, if you would just say,",
    "start": "169955",
    "end": "172850"
  },
  {
    "text": "let's count common neighbors, then let say, uh,",
    "start": "172850",
    "end": "174940"
  },
  {
    "text": "C and C prime are related as D and D prime.",
    "start": "174940",
    "end": "178820"
  },
  {
    "text": "And again, this is- um,",
    "start": "178820",
    "end": "181420"
  },
  {
    "text": "this is perhaps intuitively not what we want because, er,",
    "start": "181420",
    "end": "185150"
  },
  {
    "text": "you know item D,",
    "start": "185150",
    "end": "186724"
  },
  {
    "text": "this user has enjoyed a lot of different items as well.",
    "start": "186725",
    "end": "189530"
  },
  {
    "text": "This other user has enjoyed a lot of different items there.",
    "start": "189530",
    "end": "192845"
  },
  {
    "text": "So this relationship is less strong than the relationship here because here,",
    "start": "192845",
    "end": "197840"
  },
  {
    "text": "it's really two items,",
    "start": "197840",
    "end": "199160"
  },
  {
    "text": "two items that- that's all- that's all there is.",
    "start": "199160",
    "end": "201590"
  },
  {
    "text": "So, you know, how could we capture this",
    "start": "201590",
    "end": "204245"
  },
  {
    "text": "mathematically algorithmically to be able to run it on networks?",
    "start": "204245",
    "end": "208284"
  },
  {
    "text": "And, uh, this is where the notion of extension of PageRank happens.",
    "start": "208285",
    "end": "213830"
  },
  {
    "text": "Um, so PageRank tells me",
    "start": "213830",
    "end": "217295"
  },
  {
    "text": "the importance of a node on the graph and ranks nodes by importance.",
    "start": "217295",
    "end": "221780"
  },
  {
    "text": "And it has this notion of a teleport where we discuss that- that,",
    "start": "221780",
    "end": "226310"
  },
  {
    "text": "um, a random surfer teleports uniformly over any node in the graph.",
    "start": "226310",
    "end": "232135"
  },
  {
    "text": "So now, we will have- we will first define a notion of what is",
    "start": "232135",
    "end": "235760"
  },
  {
    "text": "called personalized PageRank, where basically,",
    "start": "235760",
    "end": "239120"
  },
  {
    "text": "the only difference with the original PageRank is that whenever we",
    "start": "239120",
    "end": "241879"
  },
  {
    "text": "teleport or whenever the random walker teleports,",
    "start": "241880",
    "end": "244760"
  },
  {
    "text": "it doesn't teleport anywhere in the graph,",
    "start": "244760",
    "end": "247189"
  },
  {
    "text": "but it only teleports,",
    "start": "247190",
    "end": "248825"
  },
  {
    "text": "jumps back to a subset of nodes S. Okay?",
    "start": "248825",
    "end": "253550"
  },
  {
    "text": "So basically, we say, you know,",
    "start": "253550",
    "end": "255020"
  },
  {
    "text": "there is a set of nodes S that are interesting to the user.",
    "start": "255020",
    "end": "259090"
  },
  {
    "text": "So whenever the random walker teleports,",
    "start": "259090",
    "end": "261230"
  },
  {
    "text": "it teleports back to that subset S and not to,",
    "start": "261230",
    "end": "264895"
  },
  {
    "text": "uh, every node in the graph.",
    "start": "264895",
    "end": "266525"
  },
  {
    "text": "And then in terms of, uh,",
    "start": "266525",
    "end": "268850"
  },
  {
    "text": "you know, er, proximity in graphs,",
    "start": "268850",
    "end": "270980"
  },
  {
    "text": "you can now take this notion of",
    "start": "270980",
    "end": "272300"
  },
  {
    "text": "a teleport set S and you can shrink it even further and say,",
    "start": "272300",
    "end": "276409"
  },
  {
    "text": "what if S is a single node?",
    "start": "276410",
    "end": "278675"
  },
  {
    "text": "So it means that the random walker can walk,",
    "start": "278675",
    "end": "281375"
  },
  {
    "text": "but whenever it decides to teleport,",
    "start": "281375",
    "end": "283325"
  },
  {
    "text": "it always jumps back to the starting point",
    "start": "283325",
    "end": "286290"
  },
  {
    "text": "S. And this is what is called a random walk with restart, where basically,",
    "start": "286290",
    "end": "291560"
  },
  {
    "text": "you always teleport back to the starting node S.",
    "start": "291560",
    "end": "294710"
  },
  {
    "text": "So essentially, PageRank, personalized PageRank,",
    "start": "294710",
    "end": "298500"
  },
  {
    "text": "and random walk with restarts are the same algorithm with one important difference,",
    "start": "298500",
    "end": "304710"
  },
  {
    "text": "that in PageRank, teleport set S is all of the nodes of the network,",
    "start": "304710",
    "end": "309800"
  },
  {
    "text": "all having equal probability.",
    "start": "309800",
    "end": "311860"
  },
  {
    "text": "In personalized PageRank, the teleport set S is a subset of nodes,",
    "start": "311860",
    "end": "317000"
  },
  {
    "text": "so you only can jump to the subset.",
    "start": "317000",
    "end": "319130"
  },
  {
    "text": "And in a random walker with restart,",
    "start": "319130",
    "end": "321035"
  },
  {
    "text": "the teleportation set S is",
    "start": "321035",
    "end": "323240"
  },
  {
    "text": "a simple node- is simply one node and that's the starting node,",
    "start": "323240",
    "end": "327065"
  },
  {
    "text": "our, you know, query node item,",
    "start": "327065",
    "end": "329660"
  },
  {
    "text": "uh, Q, uh, from the previous slide.",
    "start": "329660",
    "end": "332890"
  },
  {
    "text": "So let me now talk more about random walks with restarts.",
    "start": "332890",
    "end": "337415"
  },
  {
    "text": "So the idea here is that every node has some importance,",
    "start": "337415",
    "end": "340805"
  },
  {
    "text": "and the importance gets evenly split among all edges,",
    "start": "340805",
    "end": "344120"
  },
  {
    "text": "uh, and pushed to the neighbors.",
    "start": "344120",
    "end": "346324"
  },
  {
    "text": "And this is essentially the same as what we were discussing in,",
    "start": "346325",
    "end": "350465"
  },
  {
    "text": "uh, page- in the original PageRank formulation.",
    "start": "350465",
    "end": "353139"
  },
  {
    "text": "So in our case, we are going to say let's have a set of query nodes.",
    "start": "353140",
    "end": "357370"
  },
  {
    "text": "Um, uh, this is basically the set S. And let's",
    "start": "357370",
    "end": "360440"
  },
  {
    "text": "now physically simulate the random walk over this graph, right?",
    "start": "360440",
    "end": "364070"
  },
  {
    "text": "We will make a step at random neighbor,",
    "start": "364070",
    "end": "366455"
  },
  {
    "text": "um, and record the visit to that neighbor.",
    "start": "366455",
    "end": "368720"
  },
  {
    "text": "So we are going to increase the visit count of that neighbor.",
    "start": "368720",
    "end": "371405"
  },
  {
    "text": "And with some probability alpha,",
    "start": "371405",
    "end": "373100"
  },
  {
    "text": "we are going to restart the walk,",
    "start": "373100",
    "end": "374840"
  },
  {
    "text": "which basically means we are going to jump back to",
    "start": "374840",
    "end": "377615"
  },
  {
    "text": "any of the query nodes and restart the walk.",
    "start": "377615",
    "end": "381940"
  },
  {
    "text": "And then the nodes with the highest query- highest visit count",
    "start": "381940",
    "end": "386060"
  },
  {
    "text": "will have the highest proximity to the- uh,",
    "start": "386060",
    "end": "389050"
  },
  {
    "text": "to the query- to the nodes in the query nodes, uh, set.",
    "start": "389050",
    "end": "393039"
  },
  {
    "text": "So this is essentially the idea.",
    "start": "393040",
    "end": "395265"
  },
  {
    "text": "So let me now show you graphically, right?",
    "start": "395265",
    "end": "397595"
  },
  {
    "text": "So we have this bipartite graph.",
    "start": "397595",
    "end": "400130"
  },
  {
    "text": "Imagine my query nodes set Q is simply one node here.",
    "start": "400130",
    "end": "405000"
  },
  {
    "text": "Then we are going to simulate,",
    "start": "405000",
    "end": "406739"
  },
  {
    "text": "really, like a random walk that basically says,",
    "start": "406739",
    "end": "409325"
  },
  {
    "text": "I'm at Q. I pick one of its,",
    "start": "409325",
    "end": "411230"
  },
  {
    "text": "uh, links at random,",
    "start": "411230",
    "end": "412655"
  },
  {
    "text": "and I move to the user.",
    "start": "412655",
    "end": "413780"
  },
  {
    "text": "Now, I am at the user.",
    "start": "413780",
    "end": "415325"
  },
  {
    "text": "I pick one of the links at random, uh, move to,",
    "start": "415325",
    "end": "418700"
  },
  {
    "text": "uh- to the- to the other side and I increase the visit count, uh, one here.",
    "start": "418700",
    "end": "424365"
  },
  {
    "text": "And now I get to decide do I restart,",
    "start": "424365",
    "end": "426419"
  },
  {
    "text": "meaning go back to Q,",
    "start": "426420",
    "end": "427710"
  },
  {
    "text": "or do I continue walking by picking one of- one link,",
    "start": "427710",
    "end": "431514"
  },
  {
    "text": "um, to go to the user,",
    "start": "431515",
    "end": "433190"
  },
  {
    "text": "pick another link to go back,",
    "start": "433190",
    "end": "434585"
  },
  {
    "text": "and increase the visit count?",
    "start": "434585",
    "end": "435830"
  },
  {
    "text": "And again, ask myself do I want to restart or do want to continue walking?",
    "start": "435830",
    "end": "440465"
  },
  {
    "text": "So the pseudocode is written here and it's really what I just say.",
    "start": "440465",
    "end": "444949"
  },
  {
    "text": "It's basically, you know, pick a random neighbor for- for- for,",
    "start": "444950",
    "end": "449160"
  },
  {
    "text": "uh, start at a- at a query,",
    "start": "449160",
    "end": "451440"
  },
  {
    "text": "pick a random user,",
    "start": "451440",
    "end": "452910"
  },
  {
    "text": "uh, pick a random item,",
    "start": "452910",
    "end": "454680"
  },
  {
    "text": "increase the revisit count of the item,",
    "start": "454680",
    "end": "457305"
  },
  {
    "text": "uh, pick a biased coin.",
    "start": "457305",
    "end": "459555"
  },
  {
    "text": "If the coin says, uh, let restart,",
    "start": "459555",
    "end": "462330"
  },
  {
    "text": "you'll simply, uh, jump back to the query nodes.",
    "start": "462330",
    "end": "466485"
  },
  {
    "text": "You can jump, uh, uniformly at random to any of them,",
    "start": "466485",
    "end": "470120"
  },
  {
    "text": "or if they have different weights,",
    "start": "470120",
    "end": "471695"
  },
  {
    "text": "you can sample them, uh, by weight.",
    "start": "471695",
    "end": "473990"
  },
  {
    "text": "And that is- that is this notion of a random walk, uh, with, uh, restart.",
    "start": "473990",
    "end": "479090"
  },
  {
    "text": "And if you do this, then you will have the query item and then you will also get",
    "start": "479090",
    "end": "483949"
  },
  {
    "text": "this visit counts and- and the idea is that items that are more, uh,",
    "start": "483950",
    "end": "488870"
  },
  {
    "text": "related, that are closer in the graphs,",
    "start": "488870",
    "end": "491090"
  },
  {
    "text": "will have higher visit counts because it means",
    "start": "491090",
    "end": "493460"
  },
  {
    "text": "that the random walker will visit them more often,",
    "start": "493460",
    "end": "495889"
  },
  {
    "text": "which means you have more common neighbor,",
    "start": "495890",
    "end": "497975"
  },
  {
    "text": "more paths lead from one to the other,",
    "start": "497975",
    "end": "501080"
  },
  {
    "text": "these paths are short so that, uh,",
    "start": "501080",
    "end": "503525"
  },
  {
    "text": "the random walker does not decide to restart,",
    "start": "503525",
    "end": "505669"
  },
  {
    "text": "uh, and so on and so forth.",
    "start": "505670",
    "end": "507295"
  },
  {
    "text": "And this allows us to measure proximity in graphs very efficiently.",
    "start": "507295",
    "end": "512169"
  },
  {
    "text": "And here, we are measuring it by actually, uh,",
    "start": "512170",
    "end": "514904"
  },
  {
    "text": "un- kind of simulating this random walk physically.",
    "start": "514905",
    "end": "518435"
  },
  {
    "text": "But you could also compute this using",
    "start": "518435",
    "end": "521360"
  },
  {
    "text": "the power iteration where you would represent this bipartite graph with a matrix, uh,",
    "start": "521360",
    "end": "526285"
  },
  {
    "text": "M, you would then start with, uh, um,",
    "start": "526285",
    "end": "529495"
  },
  {
    "text": "rank vector, um, uh,",
    "start": "529495",
    "end": "532630"
  },
  {
    "text": "to be- to have a given value.",
    "start": "532630",
    "end": "534535"
  },
  {
    "text": "You would then, uh,",
    "start": "534535",
    "end": "535644"
  },
  {
    "text": "transfer them to the stochastic adjacency matrix with teleportation,",
    "start": "535645",
    "end": "539745"
  },
  {
    "text": "uh, matrix, and then round power iteration on top of it.",
    "start": "539745",
    "end": "543275"
  },
  {
    "text": "And it would, um, converge to the same- uh,",
    "start": "543275",
    "end": "546590"
  },
  {
    "text": "to the same set of, uh,",
    "start": "546590",
    "end": "549270"
  },
  {
    "text": "uh, node importance as we- as we show",
    "start": "549270",
    "end": "552180"
  },
  {
    "text": "here by basically running this quick, uh, simulation.",
    "start": "552180",
    "end": "555915"
  },
  {
    "text": "Um, so what are the benefits of this approach?",
    "start": "555915",
    "end": "559475"
  },
  {
    "text": "Um, this is a good solution because it",
    "start": "559475",
    "end": "563000"
  },
  {
    "text": "measures similarity by considering a lot of different,",
    "start": "563000",
    "end": "566750"
  },
  {
    "text": "um, things that are important, right?",
    "start": "566750",
    "end": "569450"
  },
  {
    "text": "It considers how many connections or how many paths are between a pair of nodes.",
    "start": "569450",
    "end": "574525"
  },
  {
    "text": "Um, what is the strength of those connections?",
    "start": "574525",
    "end": "577155"
  },
  {
    "text": "Are these connections direct or are they indirect?",
    "start": "577155",
    "end": "580545"
  },
  {
    "text": "They also- it also considers the- the degree of the nodes on the path.",
    "start": "580545",
    "end": "584260"
  },
  {
    "text": "Because, uh, the more edges it has,",
    "start": "584260",
    "end": "586770"
  },
  {
    "text": "the more- the more likely we- for the random walker,",
    "start": "586770",
    "end": "589880"
  },
  {
    "text": "is to kind of walk away and don't go to the node.",
    "start": "589880",
    "end": "593230"
  },
  {
    "text": "Let's say that- that we are interested in.",
    "start": "593230",
    "end": "595565"
  },
  {
    "text": "So in all these cases, um,",
    "start": "595565",
    "end": "598185"
  },
  {
    "text": "this is a very- uh,",
    "start": "598185",
    "end": "600350"
  },
  {
    "text": "has a lot of properties that we want.",
    "start": "600350",
    "end": "602660"
  },
  {
    "text": "It's very simple to implement,",
    "start": "602660",
    "end": "604220"
  },
  {
    "text": "it's very scalable, and,",
    "start": "604220",
    "end": "605779"
  },
  {
    "text": "uh, works, uh, really well.",
    "start": "605780",
    "end": "607810"
  },
  {
    "text": "So let me summarize this part of the lecture.",
    "start": "607810",
    "end": "611460"
  },
  {
    "text": "So basically, here, we talked about extensions of PageRank.",
    "start": "611460",
    "end": "615620"
  },
  {
    "text": "We talked about classical PageRank where the random walker teleports to any node.",
    "start": "615620",
    "end": "621500"
  },
  {
    "text": "So, you know, if I have a graph with 10 nodes,",
    "start": "621500",
    "end": "623930"
  },
  {
    "text": "then its teleport set S. You can think",
    "start": "623930",
    "end": "626880"
  },
  {
    "text": "of it is- it includes all the nodes and each node has,",
    "start": "626880",
    "end": "629940"
  },
  {
    "text": "uh, equal probability of the random walker landing there.",
    "start": "629940",
    "end": "633560"
  },
  {
    "text": "This is called PageRank.",
    "start": "633560",
    "end": "635315"
  },
  {
    "text": "Then the personalized PageRank,",
    "start": "635315",
    "end": "637700"
  },
  {
    "text": "sometimes also called topic-specific PageRank,",
    "start": "637700",
    "end": "640400"
  },
  {
    "text": "is basically, the only difference is that now",
    "start": "640400",
    "end": "643100"
  },
  {
    "text": "the teleport vector only has a couple of- of non-zero elements.",
    "start": "643100",
    "end": "648095"
  },
  {
    "text": "And this now means that whenever a random walker decides to jump,",
    "start": "648095",
    "end": "651214"
  },
  {
    "text": "you know, 50 percent of the times,",
    "start": "651215",
    "end": "652970"
  },
  {
    "text": "it will jump to this node,",
    "start": "652970",
    "end": "654350"
  },
  {
    "text": "10 percent to this node,",
    "start": "654350",
    "end": "656014"
  },
  {
    "text": "20 percent to this one and that one.",
    "start": "656015",
    "end": "657875"
  },
  {
    "text": "So that's, uh, what is called personalized PageRank.",
    "start": "657875",
    "end": "661810"
  },
  {
    "text": "And then random walk with restarts is again PageRank.",
    "start": "661810",
    "end": "666180"
  },
  {
    "text": "But here, the teleportation vector is a single node.",
    "start": "666180",
    "end": "671120"
  },
  {
    "text": "So whenever the-the surfer decides to",
    "start": "671120",
    "end": "674510"
  },
  {
    "text": "teleport it always teleports to the- to one, uh, single node.",
    "start": "674510",
    "end": "679595"
  },
  {
    "text": "But mathematically, all these formulations are the same,",
    "start": "679595",
    "end": "683254"
  },
  {
    "text": "the same power iteration can solve them.",
    "start": "683255",
    "end": "685610"
  },
  {
    "text": "Uh, we can also solve, for example,",
    "start": "685610",
    "end": "687829"
  },
  {
    "text": "especially the random walk with restarts by actually simulating the random walk,",
    "start": "687830",
    "end": "691360"
  },
  {
    "text": "which in some cases, might be- might be,",
    "start": "691360",
    "end": "693810"
  },
  {
    "text": "um, faster, but it is approximate.",
    "start": "693810",
    "end": "696840"
  },
  {
    "text": "Um, and the same algorithm works,",
    "start": "696840",
    "end": "699075"
  },
  {
    "text": "only thing is how do we define the set S,",
    "start": "699075",
    "end": "702125"
  },
  {
    "text": "the teleportation, uh, set.",
    "start": "702125",
    "end": "705180"
  },
  {
    "text": "So to summarize, uh,",
    "start": "705490",
    "end": "708570"
  },
  {
    "text": "a graph can naturally be represented as a matrix.",
    "start": "708570",
    "end": "711695"
  },
  {
    "text": "We then define the random walk process over, er, the graph.",
    "start": "711695",
    "end": "715675"
  },
  {
    "text": "We have this notion of a random surfer moving across links,",
    "start": "715675",
    "end": "719839"
  },
  {
    "text": "uh, with- er, together with having a-a way to teleport,",
    "start": "719840",
    "end": "723439"
  },
  {
    "text": "uh, out of every node.",
    "start": "723439",
    "end": "725740"
  },
  {
    "text": "This defined- allowed us to define this stochastic adjacency matrix M that",
    "start": "725740",
    "end": "731000"
  },
  {
    "text": "essentially tells us with what probability",
    "start": "731000",
    "end": "732860"
  },
  {
    "text": "the random surfer is going to navigate to each edge.",
    "start": "732860",
    "end": "736519"
  },
  {
    "text": "And then we define the notion of PageRank,",
    "start": "736520",
    "end": "738950"
  },
  {
    "text": "which is a limiting distribution of a- of the surfer location.",
    "start": "738950",
    "end": "742940"
  },
  {
    "text": "Um, and this limiting distribution of the surfer location represents node importance.",
    "start": "742940",
    "end": "749380"
  },
  {
    "text": "And then another beautiful thing happened is that we showed that this",
    "start": "749380",
    "end": "753650"
  },
  {
    "text": "limiting distributions- distribution can be computed or",
    "start": "753650",
    "end": "757670"
  },
  {
    "text": "corresponds to the leading eigenvector of",
    "start": "757670",
    "end": "760370"
  },
  {
    "text": "the transform adjacency matrix M. So it",
    "start": "760370",
    "end": "763220"
  },
  {
    "text": "basically means that by computing the eigenvector of M,",
    "start": "763220",
    "end": "766925"
  },
  {
    "text": "we are computing the limiting distribution of this, uh,",
    "start": "766925",
    "end": "769880"
  },
  {
    "text": "random surfer, and we are also computing this solution to the system of equations,",
    "start": "769880",
    "end": "775025"
  },
  {
    "text": "of, uh, flow equations where the importance of a node is,",
    "start": "775025",
    "end": "779060"
  },
  {
    "text": "you know, some of the importances of the other nodes that point to it.",
    "start": "779060",
    "end": "783400"
  },
  {
    "text": "So all these three different, uh, intuitions.",
    "start": "783400",
    "end": "786750"
  },
  {
    "text": "So the linear algebra, eigenvector eigenvalue,",
    "start": "786750",
    "end": "789424"
  },
  {
    "text": "the Random Walk intuition,",
    "start": "789424",
    "end": "791635"
  },
  {
    "text": "and these links as votes intuition are of the same thing.",
    "start": "791635",
    "end": "795095"
  },
  {
    "text": "They all boil down to the same optimization problem,",
    "start": "795095",
    "end": "797975"
  },
  {
    "text": "to the same algorithm,",
    "start": "797975",
    "end": "799519"
  },
  {
    "text": "to the same formulation that is solved with",
    "start": "799520",
    "end": "801980"
  },
  {
    "text": "this iterative approach called power iteration.",
    "start": "801980",
    "end": "806040"
  }
]