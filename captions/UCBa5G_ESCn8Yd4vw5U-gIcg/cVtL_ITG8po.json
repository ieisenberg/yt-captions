[
  {
    "text": "Now we're going\nto the big daddy,",
    "start": "0",
    "end": "1940"
  },
  {
    "text": "convolutional neural\nnetworks, where",
    "start": "1940",
    "end": "4825"
  },
  {
    "text": "we're going to work with the\nCIFAR data, the image data set.",
    "start": "4825",
    "end": "8889"
  },
  {
    "text": "And CIFAR100, there's\n100 image classes.",
    "start": "8890",
    "end": "12820"
  },
  {
    "text": "And again, this data\nsets available in Keras.",
    "start": "12820",
    "end": "16149"
  },
  {
    "text": "So we read it in\nand we extract just",
    "start": "16149",
    "end": "20440"
  },
  {
    "text": "like before the training\nand test data set and look",
    "start": "20440",
    "end": "27010"
  },
  {
    "text": "at a summary of what we get.",
    "start": "27010",
    "end": "31340"
  },
  {
    "text": "And as described in the\ntext, there's 50,000 training",
    "start": "31340",
    "end": "36280"
  },
  {
    "text": "observations.",
    "start": "36280",
    "end": "37600"
  },
  {
    "text": "These are color images\nand they're 32 by 32,",
    "start": "37600",
    "end": "41230"
  },
  {
    "text": "but they've got three color\nchannels red, green, and blue.",
    "start": "41230",
    "end": "44590"
  },
  {
    "text": "So this is a four\ndimensional array, this x.",
    "start": "44590",
    "end": "48535"
  },
  {
    "start": "48535",
    "end": "51160"
  },
  {
    "text": "And we see the range of one of\nthese channels is again 8-bit,",
    "start": "51160",
    "end": "59640"
  },
  {
    "text": "one of them is 13 to 255.",
    "start": "59640",
    "end": "67370"
  },
  {
    "text": "So the response is a\ncategorical variable.",
    "start": "67370",
    "end": "70760"
  },
  {
    "text": "We're going to\none-hot encode that",
    "start": "70760",
    "end": "72820"
  },
  {
    "text": "to 100 column binary matrix.",
    "start": "72820",
    "end": "75360"
  },
  {
    "text": "So in the digit data, we had\na 10-column binary matrix,",
    "start": "75360",
    "end": "79700"
  },
  {
    "text": "here we go to 100\ncolumn binary matrix.",
    "start": "79700",
    "end": "82789"
  },
  {
    "text": "We love that term one-hot, which\nwe learned from our engineering",
    "start": "82790",
    "end": "85810"
  },
  {
    "text": "friends.",
    "start": "85810",
    "end": "86799"
  },
  {
    "text": "Statistics we call it\ncategorical or dummy variables,",
    "start": "86800",
    "end": "90400"
  },
  {
    "text": "which is so boring.",
    "start": "90400",
    "end": "92170"
  },
  {
    "text": "But one-hot is great name",
    "start": "92170",
    "end": "95119"
  },
  {
    "text": "You got to love it.",
    "start": "95120",
    "end": "96090"
  },
  {
    "text": "So now we're using\none-hot from now on.",
    "start": "96090",
    "end": "98950"
  },
  {
    "text": "The machine learning\ncommunity has a genius",
    "start": "98950",
    "end": "102549"
  },
  {
    "text": "for picking clever\nwords like deep learning",
    "start": "102550",
    "end": "105490"
  },
  {
    "text": "itself is a brilliant word.",
    "start": "105490",
    "end": "109540"
  },
  {
    "text": "So we do that and now we see\nthat the response matrix is",
    "start": "109540",
    "end": "116290"
  },
  {
    "text": "50,000 by 100.",
    "start": "116290",
    "end": "118900"
  },
  {
    "text": "Of course, it's very sparse.",
    "start": "118900",
    "end": "120730"
  },
  {
    "text": "So let's look at some\nof the training images",
    "start": "120730",
    "end": "124120"
  },
  {
    "text": "using the JPEG package, which\nis a package for looking",
    "start": "124120",
    "end": "128060"
  },
  {
    "text": "at and manipulating images.",
    "start": "128060",
    "end": "130729"
  },
  {
    "text": "So we just set up\na little framework",
    "start": "130729",
    "end": "134420"
  },
  {
    "text": "for doing a little\nplotting window, 5 by 5,",
    "start": "134420",
    "end": "137240"
  },
  {
    "text": "we're going to\nlook at 25 images.",
    "start": "137240",
    "end": "139340"
  },
  {
    "text": "We're going to just sample\nat random 25 of the images",
    "start": "139340",
    "end": "143120"
  },
  {
    "text": "and then plot them and we\nuse plot as raster command.",
    "start": "143120",
    "end": "147849"
  },
  {
    "text": "And there we get them.",
    "start": "147850",
    "end": "149580"
  },
  {
    "start": "149580",
    "end": "152350"
  },
  {
    "text": "They're small images.",
    "start": "152350",
    "end": "155860"
  },
  {
    "text": "What was the dimension?",
    "start": "155860",
    "end": "157990"
  },
  {
    "text": "32 by 32 color images.",
    "start": "157990",
    "end": "161000"
  },
  {
    "text": "So the resolution is not that\ngreat, but 100 different classes",
    "start": "161000",
    "end": "166750"
  },
  {
    "text": "natural images, they're plants,\nthere's animals, fish, trees,",
    "start": "166750",
    "end": "172000"
  },
  {
    "text": "and various things.",
    "start": "172000",
    "end": "172890"
  },
  {
    "start": "172890",
    "end": "175490"
  },
  {
    "text": "So now we set up\nthe model, again,",
    "start": "175490",
    "end": "178990"
  },
  {
    "text": "using Keras model sequential.",
    "start": "178990",
    "end": "181550"
  },
  {
    "text": "And now you see the\npipe operator really",
    "start": "181550",
    "end": "184420"
  },
  {
    "text": "makes things much clearer here\nbecause there's many layers",
    "start": "184420",
    "end": "188560"
  },
  {
    "text": "and we specify each of\nthe layers separately.",
    "start": "188560",
    "end": "192760"
  },
  {
    "text": "And now we're asking for two\ndimensional convolutional",
    "start": "192760",
    "end": "198250"
  },
  {
    "text": "filters.",
    "start": "198250",
    "end": "201190"
  },
  {
    "text": "Remember, each filter was a\nlittle two dimensional image.",
    "start": "201190",
    "end": "207990"
  },
  {
    "text": "In this case, they're going to\nbe 3 by 3 images, little patches",
    "start": "207990",
    "end": "211430"
  },
  {
    "text": "that we slide along\nthe target image",
    "start": "211430",
    "end": "216019"
  },
  {
    "text": "and do dot products\nas we going across.",
    "start": "216020",
    "end": "220160"
  },
  {
    "text": "And the first one, we say\nwhat the filters look like",
    "start": "220160",
    "end": "225620"
  },
  {
    "text": "and we tell it what the\ninput shape looks like,",
    "start": "225620",
    "end": "227750"
  },
  {
    "text": "which was 32 by 32 by 3.",
    "start": "227750",
    "end": "231491"
  },
  {
    "text": "And then we have a\nmax pooling layer,",
    "start": "231491",
    "end": "233790"
  },
  {
    "text": "which reduces each dimension\nof the filtered image",
    "start": "233790",
    "end": "238069"
  },
  {
    "text": "by a factor of 2 in each case.",
    "start": "238070",
    "end": "240670"
  },
  {
    "text": "So recall that what that does is\nit takes each nonoverlapping 2",
    "start": "240670",
    "end": "246230"
  },
  {
    "text": "by 2 block and takes the max.",
    "start": "246230",
    "end": "249580"
  },
  {
    "text": "Because this filter\nis trying to find",
    "start": "249580",
    "end": "251560"
  },
  {
    "text": "hotspots for certain\nfeatures that it actually",
    "start": "251560",
    "end": "254920"
  },
  {
    "text": "learns in the filter.",
    "start": "254920",
    "end": "256690"
  },
  {
    "text": "And then we repeat this.",
    "start": "256690",
    "end": "260480"
  },
  {
    "text": "So we take the output\nof the pooling layer",
    "start": "260480",
    "end": "263300"
  },
  {
    "text": "and we apply another filter.",
    "start": "263300",
    "end": "265940"
  },
  {
    "text": "And you notice as the\nsize of these layers,",
    "start": "265940",
    "end": "273590"
  },
  {
    "text": "as the size of the\nimages gets smaller,",
    "start": "273590",
    "end": "276919"
  },
  {
    "text": "the number of hidden\nunits gets larger.",
    "start": "276920",
    "end": "279120"
  },
  {
    "text": "This is all described\nin the text,",
    "start": "279120",
    "end": "280790"
  },
  {
    "text": "so we won't go over\nit in detail here.",
    "start": "280790",
    "end": "283250"
  },
  {
    "text": "But we just run this\ncode and again, it's",
    "start": "283250",
    "end": "287600"
  },
  {
    "text": "just specifying the model.",
    "start": "287600",
    "end": "289580"
  },
  {
    "text": "And now we can do\na summary and you",
    "start": "289580",
    "end": "292250"
  },
  {
    "text": "can see the details of\neach of these layers.",
    "start": "292250",
    "end": "296210"
  },
  {
    "text": "And we get close to a\nmillion parameters here.",
    "start": "296210",
    "end": "300490"
  },
  {
    "text": "Again, astounding with\n50,000 training images.",
    "start": "300490",
    "end": "305785"
  },
  {
    "text": "But if you look here,\nyou'll see there's",
    "start": "305785",
    "end": "308650"
  },
  {
    "text": "layers of dropout throughout\nand so that adds regularization.",
    "start": "308650",
    "end": "318139"
  },
  {
    "start": "318140",
    "end": "321110"
  },
  {
    "text": "So at the end, we have a\ndense layer of size 1,024,",
    "start": "321110",
    "end": "328169"
  },
  {
    "text": "do we see that?",
    "start": "328170",
    "end": "328940"
  },
  {
    "text": "Yes, and then that\ngets compressed",
    "start": "328940",
    "end": "331660"
  },
  {
    "text": "into another dense layer of\n512 and finally to the output",
    "start": "331660",
    "end": "335530"
  },
  {
    "text": "layer of size 100, because\nthere's 100 classes,",
    "start": "335530",
    "end": "340960"
  },
  {
    "text": "and that goes through a\nsoftmax layer for fitting.",
    "start": "340960",
    "end": "347770"
  },
  {
    "text": "We'll do 10 epochs here\nand not even because this",
    "start": "347770",
    "end": "352509"
  },
  {
    "text": "takes quite a bit longer to run\nbecause there's a lot of layers,",
    "start": "352510",
    "end": "355750"
  },
  {
    "text": "lots of parameters.",
    "start": "355750",
    "end": "357580"
  },
  {
    "text": "And you see the wheel\nspinning, this progress",
    "start": "357580",
    "end": "364960"
  },
  {
    "text": "bar you can see in gray, it's\nworking on the first epoch.",
    "start": "364960",
    "end": "373069"
  },
  {
    "text": "And when it's finished, you see\none set of dots on the figure.",
    "start": "373070",
    "end": "379690"
  },
  {
    "text": "On it goes, we're not\ngoing to wait for this guy,",
    "start": "379690",
    "end": "382760"
  },
  {
    "text": "so I'll just stop it\nusing that box here.",
    "start": "382760",
    "end": "387680"
  },
  {
    "text": "Came up with an\nerror, we don't care.",
    "start": "387680",
    "end": "390500"
  },
  {
    "text": "If you've got time, run the\nwhole model and you'll see.",
    "start": "390500",
    "end": "394160"
  },
  {
    "text": "It gets an accuracy of\nabout 46% if you trained it",
    "start": "394160",
    "end": "398120"
  },
  {
    "text": "to all the 30 epochs that\nwe intended originally,",
    "start": "398120",
    "end": "403310"
  },
  {
    "text": "we'd get 46%.",
    "start": "403310",
    "end": "405410"
  },
  {
    "text": "This is not too bad\nfor 100 class data,",
    "start": "405410",
    "end": "408230"
  },
  {
    "text": "but if you search\nthe web currently,",
    "start": "408230",
    "end": "410630"
  },
  {
    "text": "you'll find that there\nare instances of CNNs that",
    "start": "410630",
    "end": "414410"
  },
  {
    "text": "can get 75% on these data,\nand it slowly increases all",
    "start": "414410",
    "end": "420170"
  },
  {
    "text": "along as people introduce\ndifferent clever tricks",
    "start": "420170",
    "end": "423050"
  },
  {
    "text": "and other bells and whistles.",
    "start": "423050",
    "end": "424340"
  },
  {
    "text": "Which means we might believe\nit's 75% because if we",
    "start": "424340",
    "end": "429169"
  },
  {
    "text": "fit over the tests--",
    "start": "429170",
    "end": "430130"
  },
  {
    "text": "If I fit over the test set.",
    "start": "430130",
    "end": "431490"
  },
  {
    "start": "431490",
    "end": "437669"
  },
  {
    "text": "There a lot of tricks\nand I think that happens.",
    "start": "437670",
    "end": "441010"
  },
  {
    "text": "You see these competitions and\nyou see the leaderboard inches",
    "start": "441010",
    "end": "446700"
  },
  {
    "text": "up slowly in tiny amounts as\npeople come up with new tricks.",
    "start": "446700",
    "end": "451078"
  },
  {
    "text": "So is that around the state of\nthe art for this data set, 75?",
    "start": "451078",
    "end": "453620"
  },
  {
    "text": "I believe so, 75%.",
    "start": "453620",
    "end": "456210"
  },
  {
    "text": "So of course, Rob, when you've\ngot the more images you have,",
    "start": "456210",
    "end": "461039"
  },
  {
    "text": "sorry, the more\nclasses you have,",
    "start": "461040",
    "end": "462810"
  },
  {
    "text": "the harder it is to classify\nbecause the flip a coin",
    "start": "462810",
    "end": "467460"
  },
  {
    "text": "classifier on 100 classes only\ngets 1% correct classification.",
    "start": "467460",
    "end": "472639"
  },
  {
    "text": "So 40 is actually quite good.",
    "start": "472640",
    "end": "474190"
  },
  {
    "text": "So 40 is not bad.",
    "start": "474190",
    "end": "476070"
  },
  {
    "text": "So one nice thing is that some\nof these deep learning networks",
    "start": "476070",
    "end": "481200"
  },
  {
    "text": "have been pretrained and\nare publicly available",
    "start": "481200",
    "end": "485560"
  },
  {
    "text": "and you can use them.",
    "start": "485560",
    "end": "487560"
  },
  {
    "text": "There's a bigger image\ndata set called ImageNet,",
    "start": "487560",
    "end": "491550"
  },
  {
    "text": "which has got millions of\nimages and has 1,000 classes",
    "start": "491550",
    "end": "496060"
  },
  {
    "text": "for natural images, and it's\nbeen trained with a very",
    "start": "496060",
    "end": "499630"
  },
  {
    "text": "sophisticated network, and the\none we're going to use is called",
    "start": "499630",
    "end": "503920"
  },
  {
    "text": "ResNet.",
    "start": "503920",
    "end": "505030"
  },
  {
    "text": "And one can actually use\nit in classifying images.",
    "start": "505030",
    "end": "510639"
  },
  {
    "text": "You can actually use it as is\nout of the box for classifying",
    "start": "510640",
    "end": "514030"
  },
  {
    "text": "images, or you can use\nmany of the trained",
    "start": "514030",
    "end": "519219"
  },
  {
    "text": "layers as a pretrained\npart of your network",
    "start": "519220",
    "end": "523149"
  },
  {
    "text": "and just add layers\non top of it.",
    "start": "523150",
    "end": "525970"
  },
  {
    "text": "So this is really handy.",
    "start": "525970",
    "end": "528250"
  },
  {
    "text": "So what we're going\nto do is we've",
    "start": "528250",
    "end": "531940"
  },
  {
    "text": "got a collection of\nimages of our own,",
    "start": "531940",
    "end": "536590"
  },
  {
    "text": "from our photograph\nalbum, and we're",
    "start": "536590",
    "end": "539350"
  },
  {
    "text": "going to use the\npretrained network",
    "start": "539350",
    "end": "541509"
  },
  {
    "text": "to classify these images.",
    "start": "541510",
    "end": "543550"
  },
  {
    "text": "So let me just show\nyou the images.",
    "start": "543550",
    "end": "545519"
  },
  {
    "start": "545520",
    "end": "548480"
  },
  {
    "text": "I've got behind the screen here.",
    "start": "548480",
    "end": "552560"
  },
  {
    "text": "So here we go.",
    "start": "552560",
    "end": "554550"
  },
  {
    "text": "This is an image from\na photograph album.",
    "start": "554550",
    "end": "559450"
  },
  {
    "text": "So here's the image of a little\nLhasa Apso dog, there's a cat,",
    "start": "559450",
    "end": "566510"
  },
  {
    "text": "there's a weaver\nbird, and there's",
    "start": "566510",
    "end": "571040"
  },
  {
    "text": "a hawk sitting on a fountain.",
    "start": "571040",
    "end": "573139"
  },
  {
    "text": "There's a zoomed in version\nof the hawk on the fountain,",
    "start": "573140",
    "end": "576330"
  },
  {
    "text": "and here's some flamingos.",
    "start": "576330",
    "end": "578900"
  },
  {
    "text": "So there's six images,\nand we're going",
    "start": "578900",
    "end": "581900"
  },
  {
    "text": "to see if the pretrained\nnetwork can actually",
    "start": "581900",
    "end": "587210"
  },
  {
    "text": "classify these images.",
    "start": "587210",
    "end": "588655"
  },
  {
    "start": "588655",
    "end": "592040"
  },
  {
    "text": "So rereading the images,\nhere's some code to do that.",
    "start": "592040",
    "end": "598230"
  },
  {
    "text": "Nothing too complicated.",
    "start": "598230",
    "end": "600510"
  },
  {
    "text": "We need to turn the\nimages into a form",
    "start": "600510",
    "end": "603630"
  },
  {
    "text": "that this pretrained\nnetwork can understand.",
    "start": "603630",
    "end": "606610"
  },
  {
    "text": "So the pretrained networks\nexpecting 224 by 224 images.",
    "start": "606610",
    "end": "612640"
  },
  {
    "text": "These are high resolution or\nfairly high resolution images",
    "start": "612640",
    "end": "615870"
  },
  {
    "text": "with three color channels.",
    "start": "615870",
    "end": "617279"
  },
  {
    "text": "And then we turn\nthem into a form",
    "start": "617280",
    "end": "619290"
  },
  {
    "text": "that this network\ncan understand.",
    "start": "619290",
    "end": "622540"
  },
  {
    "text": "And so there's a few commands\nhere that are needed to do that.",
    "start": "622540",
    "end": "627029"
  },
  {
    "text": "So we just run that.",
    "start": "627030",
    "end": "629310"
  },
  {
    "text": "So we've got the images\nin the same directory",
    "start": "629310",
    "end": "634650"
  },
  {
    "text": "we work in so we can\njust read in the images.",
    "start": "634650",
    "end": "638040"
  },
  {
    "text": "And so now we read in\nthe pretrained model,",
    "start": "638040",
    "end": "642639"
  },
  {
    "text": "which is called ResNet 50.",
    "start": "642640",
    "end": "644960"
  },
  {
    "text": "It's a 50 layer\nconvolutional network.",
    "start": "644960",
    "end": "649650"
  },
  {
    "text": "How many classes does it,\nmaybe that's not relevant,",
    "start": "649650",
    "end": "654270"
  },
  {
    "text": "are there a number of classes\nin the pretrained network?",
    "start": "654270",
    "end": "657190"
  },
  {
    "text": "Yes, 1,000 classes.",
    "start": "657190",
    "end": "659660"
  },
  {
    "text": "I see.",
    "start": "659660",
    "end": "660160"
  },
  {
    "text": "So this is a data set.",
    "start": "660160",
    "end": "661629"
  },
  {
    "text": "The ImageNet data set\nhas 1,000 classes.",
    "start": "661630",
    "end": "664908"
  },
  {
    "text": "In which we've have included\nthings like dogs and birds",
    "start": "664908",
    "end": "667200"
  },
  {
    "text": "and lots of other things?",
    "start": "667200",
    "end": "668460"
  },
  {
    "text": "Not just dogs, but\nspecies of dogs.",
    "start": "668460",
    "end": "671310"
  },
  {
    "text": "So it's quite an extensive\ncomprehensive network.",
    "start": "671310",
    "end": "676600"
  },
  {
    "text": "So you can see it's read\nit in, we've done a summary",
    "start": "676600",
    "end": "680459"
  },
  {
    "text": "and the summary goes on and on.",
    "start": "680460",
    "end": "682600"
  },
  {
    "text": "In fact, 50 rows\ndescribing all the layers.",
    "start": "682600",
    "end": "686190"
  },
  {
    "text": "It's really complex.",
    "start": "686190",
    "end": "688620"
  },
  {
    "text": "And this would have been\ntrained on a massive computers,",
    "start": "688620",
    "end": "692400"
  },
  {
    "text": "I believe at Google and\ntaken a long time to train,",
    "start": "692400",
    "end": "697530"
  },
  {
    "text": "but we just make use of it.",
    "start": "697530",
    "end": "699510"
  },
  {
    "text": "So we've got our x matrix\nnow, which we preprocessed",
    "start": "699510",
    "end": "704040"
  },
  {
    "text": "and then we decode\nthe predictions",
    "start": "704040",
    "end": "706019"
  },
  {
    "text": "and we ask for the top three.",
    "start": "706020",
    "end": "707930"
  },
  {
    "text": "So it's going to produce\na probability for each",
    "start": "707930",
    "end": "709990"
  },
  {
    "text": "of the predictions and\nwe ask for the top three",
    "start": "709990",
    "end": "713589"
  },
  {
    "text": "and have it print them out.",
    "start": "713590",
    "end": "715450"
  },
  {
    "text": "So bingo, it got the\nflamingo exactly right.",
    "start": "715450",
    "end": "721470"
  },
  {
    "text": "The hook it called it a\nkite, but that's not bad.",
    "start": "721470",
    "end": "727100"
  },
  {
    "text": "And the other two guesses\nwere birds as well.",
    "start": "727100",
    "end": "730699"
  },
  {
    "text": "House Finch seems\na bit of a stretch.",
    "start": "730700",
    "end": "733300"
  },
  {
    "text": "Can we see the picture,\nwhy did it call it a kite?",
    "start": "733300",
    "end": "736060"
  },
  {
    "text": "A kite is a type of bird.",
    "start": "736060",
    "end": "737485"
  },
  {
    "text": "Oh, I see.",
    "start": "737485",
    "end": "738079"
  },
  {
    "text": "I thought it was a kite fly.",
    "start": "738080",
    "end": "740590"
  },
  {
    "text": "But in the picture\nwhere we zoomed out,",
    "start": "740590",
    "end": "744580"
  },
  {
    "text": "it focused on the fountain\nrather than the hawk.",
    "start": "744580",
    "end": "747075"
  },
  {
    "text": "I see.",
    "start": "747075",
    "end": "748600"
  },
  {
    "text": "In fact, it didn't see any\nbird there and so classified",
    "start": "748600",
    "end": "752680"
  },
  {
    "text": "that as a fountain.",
    "start": "752680",
    "end": "754300"
  },
  {
    "text": "The Lhasa Apso,\nit came in second.",
    "start": "754300",
    "end": "758899"
  },
  {
    "text": "It said Tibetan\nTerrier, which looks",
    "start": "758900",
    "end": "761140"
  },
  {
    "text": "somewhat similar to the Lhasa\nApso, is a Tibetan dog species.",
    "start": "761140",
    "end": "768635"
  },
  {
    "text": "And so it got mixed\nup with the Tibetan",
    "start": "768635",
    "end": "770590"
  },
  {
    "text": "Terrier, which is pretty good.",
    "start": "770590",
    "end": "773830"
  },
  {
    "text": "The cat to her horror was\nclassified as an Old English",
    "start": "773830",
    "end": "778830"
  },
  {
    "text": "Sheepdog.",
    "start": "778830",
    "end": "780090"
  },
  {
    "text": "Next guess was a Shih Tzu dog,\nand the third was a doormat.",
    "start": "780090",
    "end": "784440"
  },
  {
    "text": "Luckily, the cat can't\nunderstand what we're saying.",
    "start": "784440",
    "end": "787680"
  },
  {
    "text": "And the final one\nwas the weaver bird",
    "start": "787680",
    "end": "790320"
  },
  {
    "text": "was classified as\na jacamar, which",
    "start": "790320",
    "end": "792660"
  },
  {
    "text": "does look somewhat similar.",
    "start": "792660",
    "end": "794310"
  },
  {
    "text": "Anyway, I think that's\nsomewhat of a success",
    "start": "794310",
    "end": "796800"
  },
  {
    "text": "for the pretrained network.",
    "start": "796800",
    "end": "799500"
  },
  {
    "start": "799500",
    "end": "800000"
  }
]