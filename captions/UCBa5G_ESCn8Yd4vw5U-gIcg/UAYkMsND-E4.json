[
  {
    "text": "so my name is tom gingold and i want to talk about a compilable markdown for linear algebra that we call i heart la i",
    "start": "10960",
    "end": "19199"
  },
  {
    "text": "have the heart up there although the text is small because some people say i love la",
    "start": "19199",
    "end": "24880"
  },
  {
    "text": "some people think that la is los angeles but it's it's linear algebra it's i heart la is how we pronounce it but i",
    "start": "24880",
    "end": "31599"
  },
  {
    "text": "guess i shouldn't impose that on you i'm rebranding my lab a little bit i added",
    "start": "31599",
    "end": "37760"
  },
  {
    "text": "another two words computational reality creativity and graphics lab the cr it",
    "start": "37760",
    "end": "42960"
  },
  {
    "text": "was hiding in there the whole time and",
    "start": "42960",
    "end": "47920"
  },
  {
    "text": "i am interested in all kinds of creative problems typically involving design sculpting",
    "start": "48719",
    "end": "53760"
  },
  {
    "text": "drawing painting geometry images occasionally singing",
    "start": "53760",
    "end": "59199"
  },
  {
    "text": "color motion and today i want to talk about scientific expression",
    "start": "59199",
    "end": "65360"
  },
  {
    "text": "so sharing scientific ideas often relies on written communication this could be in",
    "start": "65360",
    "end": "70640"
  },
  {
    "text": "the form of an email that we write to each other with an idea we could write on a chalkboard or a whiteboard uh we",
    "start": "70640",
    "end": "77040"
  },
  {
    "text": "could write and publish an article a blog or a scientific paper",
    "start": "77040",
    "end": "82560"
  },
  {
    "text": "and uh just to to to look at this uh let's look at how we consume this kind of thing in",
    "start": "82560",
    "end": "88960"
  },
  {
    "text": "computer graphics that's an area that i work in often and so let's say you're a student you",
    "start": "88960",
    "end": "94640"
  },
  {
    "text": "want to evaluate an idea you find a paper you read this paper over and you look for the formula and you're going to",
    "start": "94640",
    "end": "100560"
  },
  {
    "text": "implement this formula so here we find this formula and we want to implement it in c plus plus",
    "start": "100560",
    "end": "106000"
  },
  {
    "text": "so we read the math we have enough experience to know how this math should be translated into code",
    "start": "106000",
    "end": "111280"
  },
  {
    "text": "we write the code and uh when we do this it's easy to introduce a bug that we might not notice",
    "start": "111280",
    "end": "117439"
  },
  {
    "text": "right i got the index wrong that i should be a j and that's going to be a subtle bug to",
    "start": "117439",
    "end": "122640"
  },
  {
    "text": "um to find later we might work with somebody else or we",
    "start": "122640",
    "end": "127920"
  },
  {
    "text": "want to do an implementation in a different language like python so then we rewrite the same thing in python",
    "start": "127920",
    "end": "133040"
  },
  {
    "text": "and this translation between the math and the code and the code somewhere else it's tedious it's error-prone it's also",
    "start": "133040",
    "end": "140160"
  },
  {
    "text": "redundant because people all over the world may be doing the same work they may be implementing it and repeating the",
    "start": "140160",
    "end": "146239"
  },
  {
    "text": "same work and it's you know introducing different bugs they think your technique doesn't work they haven't even implemented it right",
    "start": "146239",
    "end": "153440"
  },
  {
    "text": "and then this is also tragic because math with the right context always has an",
    "start": "153440",
    "end": "160160"
  },
  {
    "text": "unambiguous interpretation at least according to mathematical philosophers and linguists",
    "start": "160160",
    "end": "167200"
  },
  {
    "text": "and even worse the formula in the paper sometimes have has a typo so here's an example where",
    "start": "167200",
    "end": "173920"
  },
  {
    "text": "this is a typo that was published right because the math is uh",
    "start": "173920",
    "end": "179680"
  },
  {
    "text": "is not executable so let's look at the flip side how do we how do we write math how do we",
    "start": "179680",
    "end": "185760"
  },
  {
    "text": "how do we write these scientific articles so mathematical notation has evolved over the centuries this is an",
    "start": "185760",
    "end": "191200"
  },
  {
    "text": "excerpt from a table on wikipedia it's a really awesome table you can see some you know there's some nice texts and",
    "start": "191200",
    "end": "196959"
  },
  {
    "text": "talks about uh mathematical notation but we can see like the plus sign uh dates to the you know 13",
    "start": "196959",
    "end": "203519"
  },
  {
    "text": "uh 1360 approximately um we're considered to be in the symbolic stage of math we're out of the",
    "start": "203519",
    "end": "209840"
  },
  {
    "text": "rhetorical and syncopated stages of math where a lot of math was conducted with just rhetorical arguments",
    "start": "209840",
    "end": "216000"
  },
  {
    "text": "we have a lot of symbols and we we use these symbols",
    "start": "216000",
    "end": "220400"
  },
  {
    "text": "and you know a lot of the ones we recognize plus minus parentheses you know equal sign multiplication you know",
    "start": "221200",
    "end": "227680"
  },
  {
    "text": "they get worked out from 1300s to the 1600s and then you know summation and",
    "start": "227680",
    "end": "233200"
  },
  {
    "text": "and uh and then the linear algebra stuff actually a lot of it comes and sets come a little bit later in the 18 and early",
    "start": "233200",
    "end": "239360"
  },
  {
    "text": "1900s so it's it's not really it's not correct to say that this this notation has been",
    "start": "239360",
    "end": "244720"
  },
  {
    "text": "fixed for centuries it actually you know a lot of it's fairly recent but it is well established at this point",
    "start": "244720",
    "end": "253360"
  },
  {
    "text": "uh now if we want to write this math digitally you know we have to uh get this into a computer so to do that we",
    "start": "253360",
    "end": "260720"
  },
  {
    "text": "rely on markup right so here's here's latak right here's la tech or tech",
    "start": "260720",
    "end": "266080"
  },
  {
    "text": "for those symbols and some of them right the ascii symbols the ones that are on your keyboard easy to type uh they're",
    "start": "266080",
    "end": "271520"
  },
  {
    "text": "they're you know they're they're there um but a lot of those other symbols have this markup and",
    "start": "271520",
    "end": "276800"
  },
  {
    "text": "the output is what we just saw but the input is obfuscates those symbols",
    "start": "276800",
    "end": "282800"
  },
  {
    "text": "um we saw a trend in the mid-2000s of lightweight markup languages like markdown which codified these like",
    "start": "282800",
    "end": "288960"
  },
  {
    "text": "pre-existing conventions people did when writing like text like not math but text like if i'm writing an email to you and",
    "start": "288960",
    "end": "294639"
  },
  {
    "text": "i want to bold and i want to emphasize something maybe i'd put some asterisks around the word right and so that like",
    "start": "294639",
    "end": "300400"
  },
  {
    "text": "that was uh that's what you know that's what they looked at and marked out and said what are these conventions why don't we just promote these conventions into",
    "start": "300400",
    "end": "307759"
  },
  {
    "text": "you know into proper html tags and so you're getting mark up out of uh existing conventions",
    "start": "307759",
    "end": "314639"
  },
  {
    "text": "what i'm showing here somewhere around that same time um ascii math by peter gibson",
    "start": "314639",
    "end": "321440"
  },
  {
    "text": "had a sort of similar idea let's do math without as much markdown",
    "start": "321440",
    "end": "326720"
  },
  {
    "text": "just find something that we can parse but some of the choices are a little bit you know unusual i don't know anyone that",
    "start": "326720",
    "end": "332080"
  },
  {
    "text": "would write xx to get a proper multiplication sign",
    "start": "332080",
    "end": "337360"
  },
  {
    "text": "not too around that same time right unicode's been invented and so we can just lean on unicode and we can write a",
    "start": "337360",
    "end": "342720"
  },
  {
    "text": "lot of math in plain text uh and the someone actually proposed a",
    "start": "342720",
    "end": "348000"
  },
  {
    "text": "unicode based lightweight markup language in 2006 um",
    "start": "348000",
    "end": "353280"
  },
  {
    "text": "which is kind of interesting you you write what you see there what we see here is what you do so long as you can",
    "start": "353280",
    "end": "358400"
  },
  {
    "text": "input the unicode unicode entry is actually not that hard anymore um in emacs there's tech mode and vim there's",
    "start": "358400",
    "end": "364560"
  },
  {
    "text": "digraphs on on my mac i just go into system preferences and set up a bunch of text replacements so you know unicode's",
    "start": "364560",
    "end": "371039"
  },
  {
    "text": "out there and unicode can give us nice looking math but this math is is dead math we haven't solved our executability",
    "start": "371039",
    "end": "377840"
  },
  {
    "text": "problem we can type math but we can't it's not doing anything for us",
    "start": "377840",
    "end": "383680"
  },
  {
    "text": "so that's that's what we uh we set out to to look at here um we",
    "start": "383680",
    "end": "389120"
  },
  {
    "text": "so that's that's the that's this iheartla project and this is joint work with yong li i was a phd student of mine",
    "start": "389120",
    "end": "395120"
  },
  {
    "text": "shui kamil and alex jacobson and i really want to make yong's picture big here for a",
    "start": "395120",
    "end": "400720"
  },
  {
    "text": "moment because yong is my phd student who's done like all of the work that i'm showing you",
    "start": "400720",
    "end": "405840"
  },
  {
    "text": "today i'm really just up here talking about yong's work so i'm deeply indebted to",
    "start": "405840",
    "end": "411120"
  },
  {
    "text": "yang and want to credit him appropriately",
    "start": "411120",
    "end": "418240"
  },
  {
    "text": "so let's look at let's look at what i heard what i heard looks like so here's i heard la",
    "start": "418240",
    "end": "423599"
  },
  {
    "text": "and it's a language with syntax that's designed to closely mimic conventionally written linear algebra while still",
    "start": "423599",
    "end": "429039"
  },
  {
    "text": "ensuring an unambiguous compilable interpretation so you write a linear",
    "start": "429039",
    "end": "434400"
  },
  {
    "text": "algebra in text form in plain text and then we compile this we take this and we compile",
    "start": "434400",
    "end": "441360"
  },
  {
    "text": "it uh into tech so it can you know look more presentable",
    "start": "441360",
    "end": "447680"
  },
  {
    "text": "but we also take the same text and compile it into c plus plus or python or matlab and potentially other backends in",
    "start": "447680",
    "end": "454160"
  },
  {
    "text": "the future so to kind of put the space of different",
    "start": "454160",
    "end": "459680"
  },
  {
    "text": "languages out here so we were irlay combines this conventional syntax with unambiguous execution so those are two",
    "start": "459680",
    "end": "466080"
  },
  {
    "text": "axes and we can you know draw a diagram and plot things right and you know all programming languages they have",
    "start": "466080",
    "end": "472080"
  },
  {
    "text": "unambiguous execution so they really just stick there up at the top right but uh you know you look at the math written in",
    "start": "472080",
    "end": "478720"
  },
  {
    "text": "in c plus you know and it's does not look like conventional linear algebra",
    "start": "478720",
    "end": "484720"
  },
  {
    "text": "right you go farther to the right with like matlab and julia they look a lot more like uh conventional math syntax",
    "start": "484720",
    "end": "490879"
  },
  {
    "text": "and fortress and mathematica but we're trying to be as far to the right as we can so it really just looks like what",
    "start": "490879",
    "end": "496000"
  },
  {
    "text": "you would type if you weren't thinking about you know compilability if you were just trying to communicate the math",
    "start": "496000",
    "end": "503360"
  },
  {
    "text": "um you know latte tech and ascii math are don't have unambiguous execution so they're you know they they look like",
    "start": "503360",
    "end": "510319"
  },
  {
    "text": "they could they may they may look a lot like conventional syntax but they're they're just not compilable",
    "start": "510319",
    "end": "518399"
  },
  {
    "text": "um yeah i'm not plotting up here some languages which aren't about linear algebra like",
    "start": "518399",
    "end": "523919"
  },
  {
    "text": "agda lean and they're like uh uh about derivations but a lot of them lean",
    "start": "523919",
    "end": "529120"
  },
  {
    "text": "into this unicode and math looking syntax so that's not we're not the only ones to do that but uh but we're doing",
    "start": "529120",
    "end": "534480"
  },
  {
    "text": "it in this this executable math space okay so to set about you know trying to",
    "start": "534480",
    "end": "541279"
  },
  {
    "text": "compile and execute math uh you know we have to decide like what we have to understand what are people doing like",
    "start": "541279",
    "end": "546959"
  },
  {
    "text": "what are the conventions in mathematics because although any mathematical formula has an unambiguous",
    "start": "546959",
    "end": "553120"
  },
  {
    "text": "interpretation there a lot of context is needed to understand what the authors were",
    "start": "553120",
    "end": "558959"
  },
  {
    "text": "you know were intending right so once you once you know what the what the what the conventions of their symbols are you",
    "start": "558959",
    "end": "564640"
  },
  {
    "text": "can interpret their symbols and ambiguously but you need to know what the conventions of their symbols are and that does differ in different subfields",
    "start": "564640",
    "end": "570320"
  },
  {
    "text": "of math there's um there's a very nice math overflow post by uh terence tao who",
    "start": "570320",
    "end": "577600"
  },
  {
    "text": "goes into 10 or 15 different notations for just writing you know a dot product right and",
    "start": "577600",
    "end": "583920"
  },
  {
    "text": "they're using different subfields of math so the the the um so we picked the subfield and it's",
    "start": "583920",
    "end": "589040"
  },
  {
    "text": "the subfield that that we often work in which is computer graphics and so we looked at",
    "start": "589040",
    "end": "594640"
  },
  {
    "text": "all the numbered equations in siggraph 2019 and some of the unnumbered equations so",
    "start": "594640",
    "end": "600320"
  },
  {
    "text": "it's you know we generated this big body of about 2 000 equations uh and then analyze them we categorize",
    "start": "600320",
    "end": "606800"
  },
  {
    "text": "the things we're seeing in these equations to know what you know what what what's important and what what shows up all the time so",
    "start": "606800",
    "end": "613760"
  },
  {
    "text": "here's you know here's some uh here's a breakdown but i'll go into this",
    "start": "613760",
    "end": "619519"
  },
  {
    "text": "so the the first one to look at is single letter variables so 98 of the equations are using single letter",
    "start": "619519",
    "end": "625279"
  },
  {
    "text": "variables which is like when programming you know i often got that uh",
    "start": "625279",
    "end": "630399"
  },
  {
    "text": "hammered into me that we should not use single letter variables right we're encouraging long and descriptive",
    "start": "630399",
    "end": "635760"
  },
  {
    "text": "variable names but that's almost unheard of in conventionally written math",
    "start": "635760",
    "end": "641279"
  },
  {
    "text": "and you know we can discuss the reasons why this is",
    "start": "641279",
    "end": "646880"
  },
  {
    "text": "uh we may not know the reasons why this is i mean this is up to the authors authors are making this choice but this",
    "start": "646880",
    "end": "651920"
  },
  {
    "text": "you know this is like a clearly established convention it probably has to do with you know the fact that there is prose around the math",
    "start": "651920",
    "end": "658800"
  },
  {
    "text": "which is explaining the symbols and that once it's time to look at the symbolic formulas uh the what we're trying to you",
    "start": "658800",
    "end": "665440"
  },
  {
    "text": "know what the what the authors are trying to convey with these symbolic formulas is you know conveyed",
    "start": "665440",
    "end": "671200"
  },
  {
    "text": "by what's happening with those symbols and so the symbols themselves are just you know hopefully you can keep them in",
    "start": "671200",
    "end": "676320"
  },
  {
    "text": "your head and then make sense of what the operations are so here are some examples of that",
    "start": "676320",
    "end": "682000"
  },
  {
    "text": "but one thing that that lets you do with single letter variables is uh prevents ambiguity during multiplication which is",
    "start": "682000",
    "end": "687839"
  },
  {
    "text": "done typically without any operation between them you just put two letters next to each other so that would be confusing if your variables had multiple",
    "start": "687839",
    "end": "696800"
  },
  {
    "text": "had were made up of multiple letters so that's that's one thing that you avoid but it's something else that we",
    "start": "696800",
    "end": "702959"
  },
  {
    "text": "see uh yes yes did you track how many uh use these",
    "start": "702959",
    "end": "708079"
  },
  {
    "text": "descriptive subscripts like the task in isp in the top left that's something i've used before but i don't know how",
    "start": "708079",
    "end": "713200"
  },
  {
    "text": "common it is right i don't think we have data uh on on that specifically yeah not specifically yeah yeah that's but but we",
    "start": "713200",
    "end": "720079"
  },
  {
    "text": "do notice that like these you know decorations are very common right so not just the subscripts but also you know",
    "start": "720079",
    "end": "725360"
  },
  {
    "text": "over bars and um uh you know arrows and hats and you know",
    "start": "725360",
    "end": "731440"
  },
  {
    "text": "all these kinds of things so people are decorating these things uh although these hats and these you know the subscripts and these arrows those are",
    "start": "731440",
    "end": "738000"
  },
  {
    "text": "those are you know those are different role than than if you make a subscript which is text which make a subject which is text you're basically you know",
    "start": "738000",
    "end": "744000"
  },
  {
    "text": "inserting a long variable name and that's true and that's true yep",
    "start": "744000",
    "end": "749360"
  },
  {
    "text": "uh but so okay so let's let's look at you know the rules we we just we know we chose",
    "start": "749360",
    "end": "754959"
  },
  {
    "text": "for variables in iheartla so here's uh here's some you know here's a little bit of i heard la",
    "start": "754959",
    "end": "760959"
  },
  {
    "text": "and um uh we encourage single letter identifiers right we we also encourage",
    "start": "760959",
    "end": "766959"
  },
  {
    "text": "um you know unicode decorations um",
    "start": "766959",
    "end": "772480"
  },
  {
    "text": "this actually has uh implic so just we get justification as multiplication we we do that we really want this to look",
    "start": "772480",
    "end": "779279"
  },
  {
    "text": "like math um this is implications implications for the compiler design um and i'll talk about that a little bit",
    "start": "779279",
    "end": "785600"
  },
  {
    "text": "later um but the you know with unicode leaning into unicode we can get you know lots of expressive variable names with you know",
    "start": "785600",
    "end": "792240"
  },
  {
    "text": "these text decorations and uh you know as i'll argue we shouldn't be so scared of typing unicode on our",
    "start": "792240",
    "end": "798480"
  },
  {
    "text": "computers you know we're typing emojis a lot now uh so you know we should also be",
    "start": "798480",
    "end": "803839"
  },
  {
    "text": "typing unicode um for you know long and ambiguous names",
    "start": "803839",
    "end": "809200"
  },
  {
    "text": "we we also have you know a mechanism where if it would be ambiguous you know we we went with uh backticks like",
    "start": "809200",
    "end": "816079"
  },
  {
    "text": "markdown did but uh they actually don't need to be used all that often in iheartla",
    "start": "816079",
    "end": "823040"
  },
  {
    "text": "um something else that that we you know a choice that we made that variables can't be redefined this is you know in",
    "start": "823040",
    "end": "829600"
  },
  {
    "text": "mathematics in programming people science have this like what does the equal sign mean in programming are we assigning or are we you know doing",
    "start": "829600",
    "end": "836240"
  },
  {
    "text": "equality and you know if if we're doing a qual if you don't if you can't redefine a variable this distinction",
    "start": "836240",
    "end": "841440"
  },
  {
    "text": "sort of evaporates right it's like the the your your def you know you're defining x is equal to",
    "start": "841440",
    "end": "848079"
  },
  {
    "text": "this thing and we don't x can never be equal to something else so that distinction goes away it's just we can't",
    "start": "848079",
    "end": "853760"
  },
  {
    "text": "redefine variables and and and so we don't need to you know we don't need a different symbol for",
    "start": "853760",
    "end": "858800"
  },
  {
    "text": "assignment versus equality",
    "start": "858800",
    "end": "862079"
  },
  {
    "text": "uh and something else you'll see here is that we you know we have to have a type system since we're going to be compiling this we have to have types and",
    "start": "864320",
    "end": "871120"
  },
  {
    "text": "so we have this type system and then you know we we can the compiler can do a lot of checking of what you're doing and",
    "start": "871120",
    "end": "877519"
  },
  {
    "text": "tell you if there are dimension mismatches and and we can do this at compile time just statically check is this can you",
    "start": "877519",
    "end": "883680"
  },
  {
    "text": "multiply these matrices or not so let's look at matrices a little bit",
    "start": "883680",
    "end": "889040"
  },
  {
    "text": "more this is uh this is this is like a syntax we have for matrices so you don't need commas",
    "start": "889040",
    "end": "894800"
  },
  {
    "text": "you know you you just put what you want in the space that you want it so that's it on the top left let's look",
    "start": "894800",
    "end": "901680"
  },
  {
    "text": "at this example in the top left so we have in the in the diagonal we have a and k in this case are scalars so this",
    "start": "901680",
    "end": "907839"
  },
  {
    "text": "is a two by two matrix uh l is just a normal two by two matrix uh on the right we see in the um counter",
    "start": "907839",
    "end": "915199"
  },
  {
    "text": "diagonal we see you know m is being used in x and y and those are you know matrices and vectors so this is a block",
    "start": "915199",
    "end": "920720"
  },
  {
    "text": "matrix and uh uh the identity matrix",
    "start": "920720",
    "end": "926320"
  },
  {
    "text": "and the zero matrix are getting automatically you know lifted to be the right dimension because there's only",
    "start": "926320",
    "end": "931440"
  },
  {
    "text": "there's only one correct answer that can actually make a matrix for this you know using these blocks the identity matrix",
    "start": "931440",
    "end": "937440"
  },
  {
    "text": "has to have you know the same number of rows as m uh and has to have the dimensions as the",
    "start": "937440",
    "end": "942560"
  },
  {
    "text": "number of rows is m and the zero also has to have this you know the same number of dimensions as uh",
    "start": "942560",
    "end": "947839"
  },
  {
    "text": "the rows and columns of those blocks that it's adjacent to so uh the same syntax gives us you know a",
    "start": "947839",
    "end": "954639"
  },
  {
    "text": "nice way to input these matrices",
    "start": "954639",
    "end": "958079"
  },
  {
    "text": "uh and we can you know we also have uh notations for sparse matrices so you see you know mathematics you can write these",
    "start": "960639",
    "end": "966880"
  },
  {
    "text": "underscore and l underscore i j and we're defining the entries of i and j and again with single",
    "start": "966880",
    "end": "972079"
  },
  {
    "text": "letter variable names we don't even need a comma you know between the i and the j so we get this you know syntax which you",
    "start": "972079",
    "end": "978720"
  },
  {
    "text": "know is uh that we're pretty happy with",
    "start": "978720",
    "end": "984880"
  },
  {
    "text": "um so over here you know the dimensions of l is determined by the dimensions of m and on the right we're defining a sparse",
    "start": "984880",
    "end": "991600"
  },
  {
    "text": "matrix uh and it's you know got a conditional and we don't know how big l is we don't we don't know how many zeros",
    "start": "991600",
    "end": "998160"
  },
  {
    "text": "it might have you know on the right or on the bottom so we you know the author does need to say what the total size of",
    "start": "998160",
    "end": "1004720"
  },
  {
    "text": "l is",
    "start": "1004720",
    "end": "1007959"
  },
  {
    "text": "okay um something else that a lot of equations use is you know functions that are not defined in the paper so we have",
    "start": "1011120",
    "end": "1017759"
  },
  {
    "text": "to have a way to talk about externally defined functions um here you know here's some formulas that show up and you know here's like",
    "start": "1017759",
    "end": "1026558"
  },
  {
    "text": "examples of these functions which you know show up everywhere right these expressions don't exist in",
    "start": "1026559",
    "end": "1031600"
  },
  {
    "text": "isolation so some of these functions are just well known",
    "start": "1031600",
    "end": "1036959"
  },
  {
    "text": "like trigonometric functions so sine cosine and other trigonometric functions",
    "start": "1036959",
    "end": "1044000"
  },
  {
    "text": "those are just like you know you expect them to be there so we allow people to just pass in",
    "start": "1044000",
    "end": "1050960"
  },
  {
    "text": "functions and all the languages we support you can pass in these functions and you have to you know provide a mathematical type annotation for them",
    "start": "1050960",
    "end": "1057919"
  },
  {
    "text": "but then you can use them and we also have some built-in linear algebra and trigonometric functions that",
    "start": "1057919",
    "end": "1064240"
  },
  {
    "text": "you can make use of",
    "start": "1064240",
    "end": "1067840"
  },
  {
    "text": "summation summation is uh is kind of an interesting case of a mathematical operation so in papers we often see",
    "start": "1071760",
    "end": "1078960"
  },
  {
    "text": "summations that have you know implicit range you know ranges so there's there's nothing saying where to start and stop",
    "start": "1078960",
    "end": "1085520"
  },
  {
    "text": "iteration um summations can be nested right so double summation summation inside of a",
    "start": "1085520",
    "end": "1090720"
  },
  {
    "text": "summation um and they can be part of larger expressions um and",
    "start": "1090720",
    "end": "1097039"
  },
  {
    "text": "summation doesn't enclose the thing it's summing over with a parenthesis or with a bracket or with anything right so we",
    "start": "1097039",
    "end": "1102720"
  },
  {
    "text": "have a choice to make here it's kind of ambiguous when should you stop summing",
    "start": "1102720",
    "end": "1107919"
  },
  {
    "text": "um so you know to to make this really clear here's you know it's",
    "start": "1107919",
    "end": "1112960"
  },
  {
    "text": "what seems to be a simple summation but there's two interpretations are you summing just the uh ai and the bi or are",
    "start": "1112960",
    "end": "1119360"
  },
  {
    "text": "you also summing up a bunch of copies of c and this could be arbitrarily complex",
    "start": "1119360",
    "end": "1124640"
  },
  {
    "text": "you could have a second summation to the right uh so you know to to make a decision on",
    "start": "1124640",
    "end": "1131760"
  },
  {
    "text": "what to do we looked at what are people doing right so we want to be compatible with what people are doing so we looked",
    "start": "1131760",
    "end": "1137280"
  },
  {
    "text": "at um examples you know in wikipedia and again in siggraph and",
    "start": "1137280",
    "end": "1142640"
  },
  {
    "text": "here's a bunch of formulas you know from sugar 2019 and when you when we look at these formulas we see most of them are",
    "start": "1142640",
    "end": "1148640"
  },
  {
    "text": "taking the the conservative summation uh choice so they're they're",
    "start": "1148640",
    "end": "1153760"
  },
  {
    "text": "they are putting parentheses if they're summing over more than just one parameter um other than these two",
    "start": "1153760",
    "end": "1159520"
  },
  {
    "text": "so uh with this conservative summation we seem to match what most people are doing and that seems to be like the",
    "start": "1159520",
    "end": "1165760"
  },
  {
    "text": "reasonable trade-off space that with the trade-off space that we're happy to happy to exist in",
    "start": "1165760",
    "end": "1171200"
  },
  {
    "text": "so which is to say we take this upper path and you know infer bounds from use so",
    "start": "1171200",
    "end": "1176880"
  },
  {
    "text": "you get to write your summation and uh because w i and and ti uh appear",
    "start": "1176880",
    "end": "1182240"
  },
  {
    "text": "here then the summation is going to iterate over all the elements in in that thing",
    "start": "1182240",
    "end": "1188160"
  },
  {
    "text": "and hopefully eliminate some mistakes in papers where people got the summation bounds wrong in their summations",
    "start": "1188160",
    "end": "1195760"
  },
  {
    "text": "okay so norms also show up a lot in fourteen percent of the equations and this is a",
    "start": "1198000",
    "end": "1203840"
  },
  {
    "text": "bunch of different kinds of norms l2 norms so squaring things l1 norms",
    "start": "1203840",
    "end": "1210080"
  },
  {
    "text": "frobenius norms of matrices nuclear norm occasionally shows up vector norms with matrix subscripts",
    "start": "1210080",
    "end": "1217360"
  },
  {
    "text": "so we can you know we can support all of these put all these in uh and just support",
    "start": "1217360",
    "end": "1223440"
  },
  {
    "text": "all the norms we can find",
    "start": "1223440",
    "end": "1226559"
  },
  {
    "text": "so let's look at the the compiler right so that's that's like that's like an overview of most of the the pieces that",
    "start": "1228480",
    "end": "1233679"
  },
  {
    "text": "we support and uh the compiler you know starts with some iheartla source but in",
    "start": "1233679",
    "end": "1238720"
  },
  {
    "text": "this example right here if we you know we do our first pass on this compiler and we can you know look",
    "start": "1238720",
    "end": "1243760"
  },
  {
    "text": "at all the terms and the symbols but we need a second pass and the reason we need a second pass is we need to know",
    "start": "1243760",
    "end": "1250000"
  },
  {
    "text": "what the types of things are in this case this f of x squared if f is a function then we should be squaring",
    "start": "1250000",
    "end": "1256880"
  },
  {
    "text": "the result of the function so the square should happen after we put f of x together in a node but if",
    "start": "1256880",
    "end": "1264400"
  },
  {
    "text": "f is not a function if it's a like a scalar then we should square x first and then multiply it by f and this you know",
    "start": "1264400",
    "end": "1271679"
  },
  {
    "text": "we'd have to have a too fast design to do this we also need this you know when we take",
    "start": "1271679",
    "end": "1277039"
  },
  {
    "text": "in external functions like sine and cosine those aren't single letters if the",
    "start": "1277039",
    "end": "1282480"
  },
  {
    "text": "anytime the user does define a multi-letter symbol we also",
    "start": "1282480",
    "end": "1289280"
  },
  {
    "text": "detect all of that in the first pass the first pass is just parsing out all the symbols and what their types are and then the second pass can correctly um",
    "start": "1289600",
    "end": "1296720"
  },
  {
    "text": "build a correct abstract syntax tree and then you know we do code generation",
    "start": "1296720",
    "end": "1302400"
  },
  {
    "text": "right so we've written the c plus which is a static language we've done python which is a dynamic language those are",
    "start": "1302400",
    "end": "1308880"
  },
  {
    "text": "both the zero indexed we've done matlab which is a one indexed language uh you know we've done latex because we",
    "start": "1308880",
    "end": "1315360"
  },
  {
    "text": "want the same i heard la to be used authoritatively to generate the equations that you put in your paper and",
    "start": "1315360",
    "end": "1321840"
  },
  {
    "text": "then also you know the the code that you can that you can distribute that everyone can run and try",
    "start": "1321840",
    "end": "1329120"
  },
  {
    "text": "uh and you know we want to extend this to other languages in the future so let me do a live demo",
    "start": "1329679",
    "end": "1337360"
  },
  {
    "text": "let's see how big that is that that's that is probably not readable",
    "start": "1344000",
    "end": "1348960"
  },
  {
    "text": "that's readable but is that readable",
    "start": "1351280",
    "end": "1354880"
  },
  {
    "text": "either we go with this or we go with this but then we you know we lose that we have to scroll to see the uh you know",
    "start": "1356320",
    "end": "1362960"
  },
  {
    "text": "the beautiful version of it um yeah so this is an example here's a you know here's a matrix right this is a",
    "start": "1362960",
    "end": "1369120"
  },
  {
    "text": "column vector and you can see you know we're using um uh you know the this the unicode",
    "start": "1369120",
    "end": "1375679"
  },
  {
    "text": "superscript seven you know which we can type uh you know",
    "start": "1375679",
    "end": "1381600"
  },
  {
    "text": "you know any superscript we want it's you know do text replacement uh i really i really am passionate about the point",
    "start": "1381760",
    "end": "1387520"
  },
  {
    "text": "that it's not so hard to type uh to type unicode into a computer",
    "start": "1387520",
    "end": "1392960"
  },
  {
    "text": "um and you know you can use this symbol for multiplication of two you know two numbers um so this is a uh you know we",
    "start": "1392960",
    "end": "1400880"
  },
  {
    "text": "compile this and we get you know compile succeeded you can copy any code you've got as a url send it to a friend they",
    "start": "1400880",
    "end": "1407520"
  },
  {
    "text": "can paste it in and you know they get back exactly the example that you had just typed so it's you know pretty easy",
    "start": "1407520",
    "end": "1412720"
  },
  {
    "text": "to share and you know you can just scroll down here and just copy and paste out you know the output from any language that",
    "start": "1412720",
    "end": "1419440"
  },
  {
    "text": "uh that we support um let me type let me type in some more",
    "start": "1419440",
    "end": "1426159"
  },
  {
    "text": "examples all right let me do uh let's let's implement let's implement dot product right so",
    "start": "1426159",
    "end": "1432480"
  },
  {
    "text": "let's do a summation over i of two vectors a i and bi",
    "start": "1432480",
    "end": "1438960"
  },
  {
    "text": "so let's say a i is real num is a real let's see how long is",
    "start": "1438960",
    "end": "1444880"
  },
  {
    "text": "this vector let's say it's an n vector and let's say b i",
    "start": "1444880",
    "end": "1450320"
  },
  {
    "text": "is let's say it's an m vector so this shouldn't compile right because we have different different dimensions i really",
    "start": "1450320",
    "end": "1456400"
  },
  {
    "text": "hope this doesn't compile right and we get an error the dimension mismatch right can multiply an n and m",
    "start": "1456400",
    "end": "1463919"
  },
  {
    "text": "vector together uh but if we correct the type we say they're both dimension n and we compile",
    "start": "1463919",
    "end": "1470640"
  },
  {
    "text": "it and we get no that's oh right i'm sorry okay",
    "start": "1470640",
    "end": "1478480"
  },
  {
    "text": "uh each element of a and b is a real number so",
    "start": "1478480",
    "end": "1485200"
  },
  {
    "text": "that works this is awkward",
    "start": "1485520",
    "end": "1491440"
  },
  {
    "text": "uh yes this is i'm defining uh the",
    "start": "1491440",
    "end": "1496720"
  },
  {
    "text": "syntax i'm defining the elements of a sequence if i wanted to say that a is an uh n vector i would have said i should",
    "start": "1496720",
    "end": "1502640"
  },
  {
    "text": "have said that and b is an n vector and then this should compile as well",
    "start": "1502640",
    "end": "1508240"
  },
  {
    "text": "okay so we have sequences it's not always easy to write math folks sometimes we make mistakes when we write",
    "start": "1508240",
    "end": "1513360"
  },
  {
    "text": "math you know but at least we have a compiler now that's going to be catching our mistakes and telling us when we're",
    "start": "1513360",
    "end": "1518400"
  },
  {
    "text": "doing something that we didn't expect to do this is a teachable moment right i",
    "start": "1518400",
    "end": "1523440"
  },
  {
    "text": "just tried to multiply like scalar multiplication two vectors right and",
    "start": "1523440",
    "end": "1528880"
  },
  {
    "text": "and you know if i really wanted to multiply two vectors i should have put in like a dot product right and said okay each element of a i and bi",
    "start": "1528880",
    "end": "1536480"
  },
  {
    "text": "is an n vector and then this should compile as the sum of the dot products",
    "start": "1536480",
    "end": "1541919"
  },
  {
    "text": "yes i saw some hands yes in this case so it's going so in uh it is defined by",
    "start": "1541919",
    "end": "1549760"
  },
  {
    "text": "the input by the input length so if we scroll down to the code um let's look at the python code so we can",
    "start": "1549760",
    "end": "1556640"
  },
  {
    "text": "see that it's um it's summing over the length of b whatever that is",
    "start": "1556640",
    "end": "1561760"
  },
  {
    "text": "right like we we have not defined the length of the sequence it's like it's a it's a dynamically these are dynamically",
    "start": "1561760",
    "end": "1567840"
  },
  {
    "text": "sized sequences",
    "start": "1567840",
    "end": "1571240"
  },
  {
    "text": "is that the well i guess like it makes sense that if a and b were vectors and you did a sum over i of a sub i then it",
    "start": "1573279",
    "end": "1579440"
  },
  {
    "text": "understands that i is indexing over n yes yes it doesn't it doesn't make i guess it's not obvious",
    "start": "1579440",
    "end": "1585840"
  },
  {
    "text": "to me how you would pick some sensible value of i here",
    "start": "1585840",
    "end": "1590960"
  },
  {
    "text": "right so you know at some point this has you know this gets converted to you know to code right so in let's say in and you",
    "start": "1590960",
    "end": "1596240"
  },
  {
    "text": "know c plus plus you're passing in a vector right so at that point right the code can",
    "start": "1596240",
    "end": "1601440"
  },
  {
    "text": "uh get the size of the vector and iterate over that size it's you know it's it's a it's it's just",
    "start": "1601440",
    "end": "1607840"
  },
  {
    "text": "it's a sequence of you know some indeterminate but you know indeterminate like of an arbitrary size that",
    "start": "1607840",
    "end": "1614080"
  },
  {
    "text": "is general to the length of that sequence if so if a ibi were just reals and then",
    "start": "1614080",
    "end": "1620640"
  },
  {
    "text": "you were just doing multiplication of them it still picked a value of i what was that so yeah that's right in this case yeah",
    "start": "1620640",
    "end": "1627360"
  },
  {
    "text": "and then a i and bi are both reals it's still pick a value of i right",
    "start": "1627360",
    "end": "1632880"
  },
  {
    "text": "right right this is yeah so let's start with this one this one you know this one if we look into c plus plus right we've got a vector uh of doubles for a and b",
    "start": "1632880",
    "end": "1641120"
  },
  {
    "text": "right we they they must be the same size because",
    "start": "1641120",
    "end": "1646399"
  },
  {
    "text": "uh the elements are real the elements of the vector are",
    "start": "1647919",
    "end": "1652960"
  },
  {
    "text": "it's not it's reals still it's changing the interpretation of them like these are still elements okay right right",
    "start": "1652960",
    "end": "1658720"
  },
  {
    "text": "because of the subscript on the left hand side right right",
    "start": "1658720",
    "end": "1664559"
  },
  {
    "text": "yes we would love to do that the inverse",
    "start": "1665520",
    "end": "1670799"
  },
  {
    "text": "problem right go over all the all these code implementations and factor it into linear algebra and then yeah that's i",
    "start": "1670799",
    "end": "1677679"
  },
  {
    "text": "mean that we would love to do that um we can't do that i don't know how to do that and that's not unannounced future work uh work that we've already",
    "start": "1677679",
    "end": "1684159"
  },
  {
    "text": "done yeah yeah your initial assumption was we used to write maths for the",
    "start": "1684159",
    "end": "1690799"
  },
  {
    "text": "but now it's like i have to write mods on a computer again so maybe on your first point that you're",
    "start": "1690799",
    "end": "1696320"
  },
  {
    "text": "not an expert in computer vision maybe that part could help you know you write the math you convert from that language",
    "start": "1696320",
    "end": "1703679"
  },
  {
    "text": "to maybe this can be the translation model yeah i think you know i think something that's uh that's uh you know",
    "start": "1703679",
    "end": "1711440"
  },
  {
    "text": "a little a little more doable so there's like programs like math picks right and they they'll you know you can take a picture of math and they will give you",
    "start": "1711440",
    "end": "1718240"
  },
  {
    "text": "lot tech for it right and uh so that's going from math to a lot representation",
    "start": "1718240",
    "end": "1723360"
  },
  {
    "text": "of math which is ambiguous right but if if it's like a subset of latex that's you know we can convert to i heard la",
    "start": "1723360",
    "end": "1730320"
  },
  {
    "text": "right that would be a pathway that i think would be you know famous last words not too hard",
    "start": "1730320",
    "end": "1736880"
  },
  {
    "text": "right but that i think that would be you know a pathway to do that but going from like code right which is you know",
    "start": "1736880",
    "end": "1743520"
  },
  {
    "text": "where the the semantics you know of the data you know the types the high level types the linear algebra types have been",
    "start": "1743520",
    "end": "1749440"
  },
  {
    "text": "lost and you're just taking in you know vectors of doubles um that's you know that would that would be great",
    "start": "1749440",
    "end": "1754880"
  },
  {
    "text": "that would be great i mean there was a you know i think the halide folks did it recently and they have this like metal",
    "start": "1754880",
    "end": "1760080"
  },
  {
    "text": "lift system which they've used to you know take like adobe's code base of c plus plus and like turn it into halide",
    "start": "1760080",
    "end": "1767200"
  },
  {
    "text": "and they can recompile you know for new uh architectures and you know that's like production strength so it seems",
    "start": "1767200",
    "end": "1773919"
  },
  {
    "text": "like the you know the technology is uh uh it seems like it's worth you know i'd",
    "start": "1773919",
    "end": "1780320"
  },
  {
    "text": "love to do it yeah is there another question before i go on",
    "start": "1780320",
    "end": "1785919"
  },
  {
    "text": "okay okay um let's see another",
    "start": "1785919",
    "end": "1792480"
  },
  {
    "text": "demo i should give you well this is you know maybe this is this will some of you will enjoy this uh so this is a case",
    "start": "1792480",
    "end": "1797840"
  },
  {
    "text": "where you know we have three different matrices and again we're going to check the types of these matrices are compatible you know for multiplication",
    "start": "1797840",
    "end": "1804720"
  },
  {
    "text": "um you know if i make this 5 by 5 right we're going to get an error that the dimensions mismatch um but one thing",
    "start": "1804720",
    "end": "1811200"
  },
  {
    "text": "that's you know that i'll point out is in a static language like c plus plus you know i",
    "start": "1811200",
    "end": "1816720"
  },
  {
    "text": "don't know if any of you have used you know eigen but in eigen it's it's very easy to make an arbitrary dimensional",
    "start": "1816720",
    "end": "1822720"
  },
  {
    "text": "matrix and then the memory is you know dynamically allocated and iterated over you know with dynamic loops",
    "start": "1822720",
    "end": "1829360"
  },
  {
    "text": "but if you give it proper static matrix dimensions i think it can do stack allocation and",
    "start": "1829360",
    "end": "1835360"
  },
  {
    "text": "it can you know generate a compile time it knows you know the loops it should do and so the code would be more efficient",
    "start": "1835360",
    "end": "1841679"
  },
  {
    "text": "and it's very tedious to do as a human right but you know this we have um",
    "start": "1841679",
    "end": "1846960"
  },
  {
    "text": "a compiler here that can do all this for us right and so it can you know put in the exact type uh dimensions and also",
    "start": "1846960",
    "end": "1852559"
  },
  {
    "text": "the output dimension so um we i should say we we really are not",
    "start": "1852559",
    "end": "1858640"
  },
  {
    "text": "interested in uh high performance high efficiency code here i mean that's been a non-goal i",
    "start": "1858640",
    "end": "1864000"
  },
  {
    "text": "wouldn't say we're not interested in it we would love it but it's it's you know our goal is is not to say this is the",
    "start": "1864000",
    "end": "1869919"
  },
  {
    "text": "code which uh which you know is production is production ready it's as optimized as you know we hope to to be",
    "start": "1869919",
    "end": "1876399"
  },
  {
    "text": "able to do there's a lot of work out there on highly optimized linear algebra and",
    "start": "1876399",
    "end": "1881600"
  },
  {
    "text": "tensor math and you know people doing a lot of work in that space you know we want to generate something which is like",
    "start": "1881600",
    "end": "1887919"
  },
  {
    "text": "you can evaluate the idea and decide whether it's worth putting additional resources you know into",
    "start": "1887919",
    "end": "1893360"
  },
  {
    "text": "into doing like a faster you know uh implementation",
    "start": "1893360",
    "end": "1899120"
  },
  {
    "text": "but you know there's potentially a nice",
    "start": "1899120",
    "end": "1903840"
  },
  {
    "text": "inter interaction there where you know we can output this linear this linear algebra uh intermediate representation and",
    "start": "1904960",
    "end": "1912320"
  },
  {
    "text": "interface it with these other systems which are doing high performance stuff and you know and get and get i don't know maybe the best of all worlds",
    "start": "1912320",
    "end": "1920919"
  },
  {
    "text": "right i want to show another example here i've shown some sparse matrix things but",
    "start": "1924240",
    "end": "1930000"
  },
  {
    "text": "i want to show this example this one points to something which",
    "start": "1930000",
    "end": "1936398"
  },
  {
    "text": "so this is uh the matrix form of evaluating a bezier curve let's pretty these up let's do let's get more unicode",
    "start": "1936720",
    "end": "1945039"
  },
  {
    "text": "right so this is the matrix form of uh of evaluating a bezier curve at an arbitrary point along the curve t for in",
    "start": "1946559",
    "end": "1953360"
  },
  {
    "text": "any dimension right so this is this is uh it's a cubic bezier curve so we have",
    "start": "1953360",
    "end": "1958720"
  },
  {
    "text": "our t cubed t squared t and one here's the matrix of coefficients every different cubic",
    "start": "1958720",
    "end": "1965840"
  },
  {
    "text": "spline or every different cubic curve has a different matrix like this so you change these numbers around you",
    "start": "1965840",
    "end": "1972000"
  },
  {
    "text": "change the meaning of what the control points are giving you um i'm bringing this up because this you",
    "start": "1972000",
    "end": "1977760"
  },
  {
    "text": "know shows that uh we have this 2d you can make 2d matrices but we don't",
    "start": "1977760",
    "end": "1983360"
  },
  {
    "text": "have a solution for where the line i mean the line continues at the end of the matrix right it'll be really nice if",
    "start": "1983360",
    "end": "1988799"
  },
  {
    "text": "like p could be up here you know so if you had like another big matrix",
    "start": "1988799",
    "end": "1994880"
  },
  {
    "text": "right if you wanted to put another matrix uh this is no longer doing what i said but you know put another matrix here",
    "start": "1994880",
    "end": "2002320"
  },
  {
    "text": "right like this the the the math really starts to bleed out bleed onto onto multiple lines and we don't have a good",
    "start": "2002320",
    "end": "2008159"
  },
  {
    "text": "solution for this this is just you know we consider this the the i don't know this was the trade-off we",
    "start": "2008159",
    "end": "2013919"
  },
  {
    "text": "came up with for plain text math you know in a linearly encoded text file like non-linearly encoded you know math",
    "start": "2013919",
    "end": "2021360"
  },
  {
    "text": "is very interesting and if you have ideas about that you know i'd be happy to talk to you about that",
    "start": "2021360",
    "end": "2026480"
  },
  {
    "text": "um yeah couldn't you define each of the matrices as a variable and then just oh",
    "start": "2026480",
    "end": "2032640"
  },
  {
    "text": "yes absolutely right right we could just say you know um i could just say m equals you know this",
    "start": "2032640",
    "end": "2040240"
  },
  {
    "text": "right and then",
    "start": "2040240",
    "end": "2043720"
  },
  {
    "text": "right right and then this is just now you know mmm right",
    "start": "2048240",
    "end": "2054398"
  },
  {
    "text": "here let's just make this like that right and whoops symbol",
    "start": "2054399",
    "end": "2059760"
  },
  {
    "text": "all right that's out of order",
    "start": "2059760",
    "end": "2062960"
  },
  {
    "text": "which we now we it's not in this online version but we do because we have us because we have the",
    "start": "2065599",
    "end": "2072480"
  },
  {
    "text": "single static assignment where you in our current in the non-web version that",
    "start": "2072480",
    "end": "2077679"
  },
  {
    "text": "we've done you can actually put things in an annual order and it just figures out the right order but that's not in this demo right so",
    "start": "2077679",
    "end": "2083839"
  },
  {
    "text": "yeah so this this this compiles right and this is you know this is nice on the same line we could square this",
    "start": "2083839",
    "end": "2091359"
  },
  {
    "text": "um right right but you know it's uh i'll let me switch back to the the slides and",
    "start": "2092480",
    "end": "2097760"
  },
  {
    "text": "i'll show you some other examples and we can we'll see how this comes up sometimes when converting formulas that are out",
    "start": "2097760",
    "end": "2103920"
  },
  {
    "text": "there so you know we want to evaluate this right we we came in saying okay we've",
    "start": "2103920",
    "end": "2109280"
  },
  {
    "text": "got this we looked at math we can compile math uh and you know we wanted to know what",
    "start": "2109280",
    "end": "2114800"
  },
  {
    "text": "conventions people were doing and we want to know if we've succeeded right so to know if we've succeeded we don't know if it's if it's you know if it's useful",
    "start": "2114800",
    "end": "2121440"
  },
  {
    "text": "right and so one of the ways to know if it's useful is to collect a you know a variety of examples from in the wild",
    "start": "2121440",
    "end": "2126720"
  },
  {
    "text": "right so just collect a bunch of examples which show the breadth of the kinds of things we can do and so you",
    "start": "2126720",
    "end": "2132400"
  },
  {
    "text": "know for each of these examples you know we can we can we have a gallery right and and you can compare the math this is",
    "start": "2132400",
    "end": "2139680"
  },
  {
    "text": "a screenshot from the paper this is the the math that you know we write in iheartla sometimes there are some small",
    "start": "2139680",
    "end": "2145280"
  },
  {
    "text": "differences um but we try to minimize those if we've succeeded we've minimized those i would",
    "start": "2145280",
    "end": "2150960"
  },
  {
    "text": "argue um and then you know for each of these examples we can you know you can go",
    "start": "2150960",
    "end": "2156320"
  },
  {
    "text": "browse around in our pages and see you know the c plus plus and the python and the matlab code and all of this",
    "start": "2156320",
    "end": "2164240"
  },
  {
    "text": "and let me zoom in on a different example this is unplanned",
    "start": "2164240",
    "end": "2171880"
  },
  {
    "text": "where is it right this example down here at the bot oh you're not saying this because this is unplanned",
    "start": "2175440",
    "end": "2182880"
  },
  {
    "text": "right so this is an example where somebody wrote a very long uh a very very long equation right and then",
    "start": "2185680",
    "end": "2191760"
  },
  {
    "text": "you know and i heard a lay it ends up kind of spanning three lines right i would argue this is fine um",
    "start": "2191760",
    "end": "2198720"
  },
  {
    "text": "i think one of our uh reviewers thought this was uh that the",
    "start": "2198720",
    "end": "2204079"
  },
  {
    "text": "input equation was like the problem you know this was a sort of pedagogical punishment because this comes from a",
    "start": "2204079",
    "end": "2210079"
  },
  {
    "text": "course for students to make students have to read something so long but that's that's an example where that comes up you know",
    "start": "2210079",
    "end": "2216480"
  },
  {
    "text": "is just having to just end up spreading across multiple vertical lines",
    "start": "2216480",
    "end": "2222720"
  },
  {
    "text": "so another way to evaluate whether we've whether we've succeeded right is to uh um to take the output code that we",
    "start": "2225200",
    "end": "2231280"
  },
  {
    "text": "generate yes it's interesting so have you thought about line breaking",
    "start": "2231280",
    "end": "2238640"
  },
  {
    "text": "in appropriate places like it's probably worse to line break",
    "start": "2238640",
    "end": "2244240"
  },
  {
    "text": "between two variables that are being multiplied rather than",
    "start": "2244240",
    "end": "2250240"
  },
  {
    "text": "you know other places yeah so the only line breaks we had there were in 2d matrix definitions",
    "start": "2250240",
    "end": "2256640"
  },
  {
    "text": "right so if you put a line break anywhere else you're you know you're exiting you're ending the the statement",
    "start": "2256640",
    "end": "2262079"
  },
  {
    "text": "right that's that's so it's these 2d matrices where we want to have a nice you know beautiful 2d arrangement no you",
    "start": "2262079",
    "end": "2268160"
  },
  {
    "text": "know no commas no semicolons you know we do actually support um like semicolons",
    "start": "2268160",
    "end": "2273440"
  },
  {
    "text": "if you want to put it on one line that's a choice that matlab does but i mean i don't even like that we support it you",
    "start": "2273440",
    "end": "2279359"
  },
  {
    "text": "know because it you know i don't want things to look like weird matlab you know",
    "start": "2279359",
    "end": "2284640"
  },
  {
    "text": "programmy math i want things to look like you know like math like you would like you would like like",
    "start": "2284640",
    "end": "2290079"
  },
  {
    "text": "like you would want to write it with without constraints you know given like a chalkboard or a 2d you know 2d writing",
    "start": "2290079",
    "end": "2295520"
  },
  {
    "text": "surface but you know with the just parsing two we thought about like okay you could put",
    "start": "2295520",
    "end": "2300880"
  },
  {
    "text": "closing bra you know closing breaks you know closing brackets on each one there actually are unicode symbols for the",
    "start": "2300880",
    "end": "2306240"
  },
  {
    "text": "like all sides of a matrix so you know upper upper left bottom right you know upper right bottom left and then like",
    "start": "2306240",
    "end": "2312640"
  },
  {
    "text": "vertical bars so uh you could potentially do something there where you go okay well that's that's a top right",
    "start": "2312640",
    "end": "2318640"
  },
  {
    "text": "that an unclosed you know matrix so it must continue down um but it just starts to get messy",
    "start": "2318640",
    "end": "2324880"
  },
  {
    "text": "in it it's you know the trade-off feels like um uh",
    "start": "2324880",
    "end": "2330240"
  },
  {
    "text": "yeah i we didn't pursue that far enough to know whether it's like there's like an",
    "start": "2330240",
    "end": "2335680"
  },
  {
    "text": "you end up with something that works nicely and you know uh so another way you know we want to",
    "start": "2335680",
    "end": "2340800"
  },
  {
    "text": "evaluate this is to see if we can integrate with with existing code take our code see if it's useful you know so",
    "start": "2340800",
    "end": "2345920"
  },
  {
    "text": "so we went to you know found a bunch of papers uh and that had code online right and these papers you know produce",
    "start": "2345920",
    "end": "2351760"
  },
  {
    "text": "these pretty pictures and then we went to we want to simulate using i heard la in the real world so so",
    "start": "2351760",
    "end": "2358960"
  },
  {
    "text": "uh open the paper find a formula",
    "start": "2358960",
    "end": "2364079"
  },
  {
    "text": "take that formula write it in iheartla take the output code replace code in this example you know find the find",
    "start": "2364079",
    "end": "2370880"
  },
  {
    "text": "the find the paper find the formula replace the find the code in their code base find the replace write the formula",
    "start": "2370880",
    "end": "2377839"
  },
  {
    "text": "and i heard la take our output code and put it in the formula so let me like simulate that right so here is somebody",
    "start": "2377839",
    "end": "2383520"
  },
  {
    "text": "who wants to implement this paper right so they you know they're reading this paper they say okay there's this formula",
    "start": "2383520",
    "end": "2389200"
  },
  {
    "text": "in the appendix and i want to take this formula and you know i want to try it out so they find the formula",
    "start": "2389200",
    "end": "2395280"
  },
  {
    "text": "which is a simple solution for this constrained squares problem and they go and they open the you know",
    "start": "2395280",
    "end": "2400560"
  },
  {
    "text": "here's the formula they open the iheartla you know editor and they uh they start you know they",
    "start": "2400560",
    "end": "2407680"
  },
  {
    "text": "they have their code base they have a space for it but they need something to put in to fill in here",
    "start": "2407680",
    "end": "2413040"
  },
  {
    "text": "and they have you know the input parameters are all prepared we just need you know an implementation of this formula",
    "start": "2413040",
    "end": "2420000"
  },
  {
    "text": "so in this case these those subscripts are like not actually subscripts they're like decorative subscripts so that's one",
    "start": "2420640",
    "end": "2427599"
  },
  {
    "text": "place where the backticks uh end up getting used to just not telling her delay that we're defining",
    "start": "2427599",
    "end": "2433839"
  },
  {
    "text": "sequences to just tell these are just like parameters with weird names or with subscript names",
    "start": "2433839",
    "end": "2441200"
  },
  {
    "text": "and you know you get the code you find the code you go and you you know paste it into the right place",
    "start": "2442400",
    "end": "2448720"
  },
  {
    "text": "compile it you know launch the program",
    "start": "2450960",
    "end": "2455440"
  },
  {
    "text": "you know open the mesh and then you know solve the solve the",
    "start": "2457839",
    "end": "2464720"
  },
  {
    "text": "equations and get your instant field aligned mesh using code generated from iheartla",
    "start": "2464720",
    "end": "2471520"
  },
  {
    "text": "and we verify that we get the same thing that the paper the implementation the paper authors did got",
    "start": "2471520",
    "end": "2478720"
  },
  {
    "text": "so uh you know what can we say about this process so one thing we notice is the line you know it's less lines of",
    "start": "2478800",
    "end": "2484000"
  },
  {
    "text": "code typically the line the i heard la is actually you know pretty terse um",
    "start": "2484000",
    "end": "2490240"
  },
  {
    "text": "but also importantly is it's no longer just c plus you know or python it's it's any of these languages",
    "start": "2490240",
    "end": "2497040"
  },
  {
    "text": "um and something else we wanted to do is understand statistically you know because you know",
    "start": "2497040",
    "end": "2502319"
  },
  {
    "text": "we can be accused of cherry picking and it's essentially you know we are cherry picking right like we're finding examples with code that we can you know",
    "start": "2502319",
    "end": "2508480"
  },
  {
    "text": "that we can implement right there's like an aspect where it's like it's hard to separate as a scientist what's like you",
    "start": "2508480",
    "end": "2514000"
  },
  {
    "text": "you know this is not um you know double anonymous like this is like we're we're picking examples that",
    "start": "2514000",
    "end": "2519040"
  },
  {
    "text": "we think will show our work right but now we want to do something that's that's you know",
    "start": "2519040",
    "end": "2524560"
  },
  {
    "text": "uh that we can't control right so we roll the dice once right we take all our 1987 equations and",
    "start": "2524560",
    "end": "2530800"
  },
  {
    "text": "we we shuffle them and we take the first hundred and we don't get to do this again we don't get to keep doing this until we get numbers that we like we do",
    "start": "2530800",
    "end": "2536880"
  },
  {
    "text": "this once and we take these 100 equations and then we categorize them right so looking at them 53 are just plainly",
    "start": "2536880",
    "end": "2543839"
  },
  {
    "text": "implementable right another big chunk are derivations that aren't meant to be",
    "start": "2543839",
    "end": "2549359"
  },
  {
    "text": "implemented right then some of them use you know partial derivatives and gradients and some kind of unsupported integration",
    "start": "2549359",
    "end": "2555839"
  },
  {
    "text": "um some of them have complicated optimization some control flow and some other kind of strange operators now",
    "start": "2555839",
    "end": "2561839"
  },
  {
    "text": "really the derivations are not meant to be implemented so we should just exclude those no one's implementing those in any language",
    "start": "2561839",
    "end": "2568079"
  },
  {
    "text": "so now maybe we can implement 62 percent of what we see and then okay we don't support automatic",
    "start": "2568079",
    "end": "2573920"
  },
  {
    "text": "differentiation or taking gradients but you know sometimes those are passed in as parameters and in optimum you know in",
    "start": "2573920",
    "end": "2580160"
  },
  {
    "text": "optimization packages they expect you to you're passing an f so give us also the gradient of f so we can also do you know",
    "start": "2580160",
    "end": "2587040"
  },
  {
    "text": "have authors do the same thing with i heart la or give us the gradient of f is a parameter so in some sense we can also",
    "start": "2587040",
    "end": "2593760"
  },
  {
    "text": "you know we could also support that uh so you know maybe that's how maybe",
    "start": "2593760",
    "end": "2598960"
  },
  {
    "text": "that's the the unbiased you know non-cherry-picked applicability of iheartla",
    "start": "2598960",
    "end": "2605280"
  },
  {
    "text": "um we also you know did a user study so we want to know how people use this uh so we took eight cs phd students who",
    "start": "2605280",
    "end": "2612319"
  },
  {
    "text": "had you know over six months of experience implementing linear algebra and um we gave them three formula and we",
    "start": "2612319",
    "end": "2618560"
  },
  {
    "text": "said okay you have a preferred programming environment the one you you like to use okay you're going to use that and you're also going to use you",
    "start": "2618560",
    "end": "2624560"
  },
  {
    "text": "know i heard la and we counter balanced it so it's like two in each to two in each condition and",
    "start": "2624560",
    "end": "2630000"
  },
  {
    "text": "then we gave them you know sequence of uh of problems simple one just do some matrix vector multiplication",
    "start": "2630000",
    "end": "2637200"
  },
  {
    "text": "more complex one you know use summation and then you know most complex one we gave them was to build a sparse matrix",
    "start": "2637200",
    "end": "2644000"
  },
  {
    "text": "um and you know we got some qualitative data out of this",
    "start": "2644000",
    "end": "2649359"
  },
  {
    "text": "um [Music] so one thing we got uh you know",
    "start": "2649359",
    "end": "2655440"
  },
  {
    "text": "liquor five-point liquor scale so you know people want to please us sure but you know they they say it's easy to",
    "start": "2655440",
    "end": "2662480"
  },
  {
    "text": "learn to use i heard la and a lot of them you know preferred it to their programming language um and",
    "start": "2662480",
    "end": "2668319"
  },
  {
    "text": "maybe you know the most the nicest thing out of this is that you know people agree that the linear",
    "start": "2668319",
    "end": "2674720"
  },
  {
    "text": "that really looks like linear algebra in the papers they see so you know this is a small study",
    "start": "2674720",
    "end": "2679839"
  },
  {
    "text": "they're trying to please us sure so maybe we don't get strong conclusions out of this um but you know at least",
    "start": "2679839",
    "end": "2686400"
  },
  {
    "text": "uh when we look at you know some of the quantitative data we can we can we can make you know some statements right so",
    "start": "2686400",
    "end": "2692640"
  },
  {
    "text": "average completion time they're faster in their language for the simple problem they're and that you know is",
    "start": "2692640",
    "end": "2698880"
  },
  {
    "text": "statistically significant even though everything's a small number of people um for the medium case things were",
    "start": "2698880",
    "end": "2705520"
  },
  {
    "text": "closer and and for the complex case you know there wasn't one language wasn't fashion the other that's we take that as",
    "start": "2705520",
    "end": "2711839"
  },
  {
    "text": "encouraging right there's the first exposure to this language and they can already you know implement things at",
    "start": "2711839",
    "end": "2717920"
  },
  {
    "text": "approximately the same speed as their language um and so that's you know i think that's that's",
    "start": "2717920",
    "end": "2724480"
  },
  {
    "text": "encouraging that they can accomplish a range of tasks in 15 minutes and they think it looks like conventional math",
    "start": "2724480",
    "end": "2731440"
  },
  {
    "text": "um yeah so some limitations so uh i talked about some the case the kinds of things",
    "start": "2731440",
    "end": "2737119"
  },
  {
    "text": "that we we don't support right so there's i don't know mathematical operators right we don't support",
    "start": "2737119",
    "end": "2742880"
  },
  {
    "text": "um uh multiple conditions we actually now do support this but that's that's you",
    "start": "2742880",
    "end": "2748960"
  },
  {
    "text": "know that's that's new this is like go file a github issue if you have something you you know that's not supported you want to support you know",
    "start": "2748960",
    "end": "2756800"
  },
  {
    "text": "derivations right will never support well i shouldn't say never",
    "start": "2756800",
    "end": "2762319"
  },
  {
    "text": "it would be nice to not have to switch languages when writing you know to switch from i heard late to tech uh you",
    "start": "2762319",
    "end": "2769520"
  },
  {
    "text": "know maybe we could have a non-compiled version of i heard la that doesn't doesn't compile the code but just like",
    "start": "2769520",
    "end": "2776560"
  },
  {
    "text": "gives you text so you don't have to keep switching um you know the the your your mental mode for",
    "start": "2776560",
    "end": "2784160"
  },
  {
    "text": "inputting math um derivatives we don't we don't support yet um optimization i'll talk about in a",
    "start": "2784160",
    "end": "2790960"
  },
  {
    "text": "moment and uh and integrals um we don't support really uh we support some uh not",
    "start": "2790960",
    "end": "2797760"
  },
  {
    "text": "with implied domains i'll talk about that right now so we'd like to support more things you know tensors automatic",
    "start": "2797760",
    "end": "2803599"
  },
  {
    "text": "differentiation integration optimization and you know there's a lot of work out there right on on",
    "start": "2803599",
    "end": "2808640"
  },
  {
    "text": "automatic differentiation and some recent work on integration with you know integrals with",
    "start": "2808640",
    "end": "2814839"
  },
  {
    "text": "discontinuities um so that's that's just like file the github issues we'll see what what people want you know we want",
    "start": "2814839",
    "end": "2820720"
  },
  {
    "text": "to we want people to adopt our la minimization shows up in 10 of the",
    "start": "2820720",
    "end": "2826240"
  },
  {
    "text": "papers so we wanted to make sure we weren't going to um make a grammar that wasn't like",
    "start": "2826240",
    "end": "2833200"
  },
  {
    "text": "future proof in some sense because we do want to support more minimization so we already support a kind of minimization",
    "start": "2833200",
    "end": "2839359"
  },
  {
    "text": "so we can minimize do some constrained minimization and uh",
    "start": "2839359",
    "end": "2844880"
  },
  {
    "text": "uh we rely on the like in python we rely on scipy's optimize you know to do this",
    "start": "2844880",
    "end": "2849920"
  },
  {
    "text": "so in c plus plus we you know we need something because we don't want to start implementing a whole bunch of numerical",
    "start": "2849920",
    "end": "2855680"
  },
  {
    "text": "routines we want to you know just compile these output environments so we have some some minimization",
    "start": "2855680",
    "end": "2860960"
  },
  {
    "text": "support we also have some uh integration support for simple integration with",
    "start": "2860960",
    "end": "2867359"
  },
  {
    "text": "upper and lower bounds two two styles right some you see you see people are math rated in both styles",
    "start": "2867359",
    "end": "2873280"
  },
  {
    "text": "so we support both styles we want to do more advanced versions of this and again we just rely on like",
    "start": "2873280",
    "end": "2879119"
  },
  {
    "text": "what's there in the language now you know i want to",
    "start": "2879119",
    "end": "2885760"
  },
  {
    "text": "increased adoption of rla right so more output languages that's kind of like a uh you know straightforward um it would",
    "start": "2885760",
    "end": "2892800"
  },
  {
    "text": "be interesting to embed it into your tooling so if you're in c plus and you just want like a bit of i heart la you",
    "start": "2892800",
    "end": "2898559"
  },
  {
    "text": "know to kind of make it so that you can do that julia has a nice macro system so maybe you could do that there you know",
    "start": "2898559",
    "end": "2904720"
  },
  {
    "text": "supporting more fields looking at what they're doing in their equations large-scale user studies get people to",
    "start": "2904720",
    "end": "2910160"
  },
  {
    "text": "use this over long periods of time you know does it make people more productive uh can we give can we you know can we",
    "start": "2910160",
    "end": "2916240"
  },
  {
    "text": "give a set of students or practitioners like an unsolved research problem with like a measurable",
    "start": "2916240",
    "end": "2921920"
  },
  {
    "text": "outcome and have some of them use i heard la and some of them not and see if they you know improve the state of the art faster with i heard la",
    "start": "2921920",
    "end": "2929040"
  },
  {
    "text": "um automating you know tech di hurley would let us do the the kind of math picks you know to tech to to i heard la",
    "start": "2929040",
    "end": "2937680"
  },
  {
    "text": "also you know papers of the future right if you imagine a paper of the future that's using iheartla instead of you",
    "start": "2938960",
    "end": "2944000"
  },
  {
    "text": "know tech for math then this paper could compile to a library for improved you know replicability but also improved",
    "start": "2944000",
    "end": "2950000"
  },
  {
    "text": "interactivity right like a like a notebook environment where you can interact with the equations that are in there",
    "start": "2950000",
    "end": "2955440"
  },
  {
    "text": "but also the the the type information that we have like we know what all the symbols are and whether you know the",
    "start": "2955440",
    "end": "2961440"
  },
  {
    "text": "same symbols use in multiple places so we can do something for readability right there's some",
    "start": "2961440",
    "end": "2966480"
  },
  {
    "text": "uh recent work like the scholar five project where they",
    "start": "2966480",
    "end": "2971920"
  },
  {
    "text": "they didn't have i heard la but they kind of went through with natural language processing and kind of heuristics to",
    "start": "2971920",
    "end": "2978480"
  },
  {
    "text": "to do things like give you a glossary of symbols and break down you know all of the uh terms that are used in an",
    "start": "2978480",
    "end": "2984480"
  },
  {
    "text": "equation right and um so it'll be really nice to to to make a writing environment that uses iheartla",
    "start": "2984480",
    "end": "2990880"
  },
  {
    "text": "that gives that gives people like them the information they need to make the system work you know correctly and on",
    "start": "2990880",
    "end": "2997839"
  },
  {
    "text": "you know in all ways but you know just",
    "start": "2997839",
    "end": "3003119"
  },
  {
    "text": "from our point of view of uh trying to take existing conventions and meet people where they are",
    "start": "3003119",
    "end": "3008400"
  },
  {
    "text": "we'd like to have minimal impact on the way people write papers right so something plain text right",
    "start": "3008400",
    "end": "3014079"
  },
  {
    "text": "uh again you know the derivations like here's a bunch of derivations in orange and then you get to the you know the",
    "start": "3014079",
    "end": "3019680"
  },
  {
    "text": "formula right so having to handle that that the out of order symbols",
    "start": "3019680",
    "end": "3026319"
  },
  {
    "text": "you know this is showing like a symbol that appears early in the paper depends on the later symbol which itself depends on a later symbol and you know we do",
    "start": "3026319",
    "end": "3032880"
  },
  {
    "text": "this because i guess as authors we we want to explain the high level thing first and you know i'll tell you the",
    "start": "3032880",
    "end": "3038319"
  },
  {
    "text": "details later you'll need to know them but not yet and then like i talked about a library",
    "start": "3038319",
    "end": "3043839"
  },
  {
    "text": "but like what what would a library be you know like when people write functions in papers there's often like a",
    "start": "3043839",
    "end": "3049359"
  },
  {
    "text": "lot of implied parameters when they're defining functions so the symbols may appear in different",
    "start": "3049359",
    "end": "3054400"
  },
  {
    "text": "contexts but that context may be clear to the reader that the x here the x y here is a different from an x y there",
    "start": "3054400",
    "end": "3061280"
  },
  {
    "text": "and finally you know like papers may be you know multiple sections uh subsections",
    "start": "3061280",
    "end": "3067599"
  },
  {
    "text": "which are largely independent um right so to conclude all of this",
    "start": "3067599",
    "end": "3074720"
  },
  {
    "text": "uh i i believe that ireland has the potential to greatly benefit the scientific",
    "start": "3074720",
    "end": "3080319"
  },
  {
    "text": "ecosystem right the way people write papers no one wants a replicability crisis in their field and i think this",
    "start": "3080319",
    "end": "3085839"
  },
  {
    "text": "can you know this this has a role to play there um i think ireland makes it easy to try new",
    "start": "3085839",
    "end": "3091599"
  },
  {
    "text": "ideas uh just write that email and then execute that email rather than spending",
    "start": "3091599",
    "end": "3096720"
  },
  {
    "text": "time implementing it um it's pretty easy to learn because we're just trying to take what people are already doing",
    "start": "3096720",
    "end": "3103040"
  },
  {
    "text": "and then finally we want to reduce the translation loss uh as ideas move from researchers to",
    "start": "3103040",
    "end": "3108160"
  },
  {
    "text": "writers to readers to so to implement her so a graduate student you know describes their implementation to a",
    "start": "3108160",
    "end": "3113520"
  },
  {
    "text": "co-author who writes it in latex uh introduces an error but then someone else reads the paper and implements it",
    "start": "3113520",
    "end": "3120720"
  },
  {
    "text": "incorrectly and that's something that we we don't wanna that we hope we think we can reduce",
    "start": "3120720",
    "end": "3126559"
  },
  {
    "text": "so thank you uh for listening and please try out i heard la and let us know what you think",
    "start": "3126559",
    "end": "3131980"
  },
  {
    "text": "[Applause]",
    "start": "3131980",
    "end": "3137200"
  },
  {
    "text": "great we have time for questions",
    "start": "3137200",
    "end": "3140960"
  },
  {
    "text": "yeah um i wonder if you have explored um",
    "start": "3143280",
    "end": "3148480"
  },
  {
    "text": "uh maybe a simplification of like equations or uh maybe breaking down a very long",
    "start": "3148480",
    "end": "3155200"
  },
  {
    "text": "equation into the multiple sections for readability yeah that's a that's a that's an",
    "start": "3155200",
    "end": "3160480"
  },
  {
    "text": "interesting idea right um uh we we have thought that sometimes like an equation is in a paper and it's",
    "start": "3160480",
    "end": "3165920"
  },
  {
    "text": "like it's like not exactly a formula where there's you know something on the left-hand side equal to something else",
    "start": "3165920",
    "end": "3171280"
  },
  {
    "text": "but it's close enough you know that maybe like a reader makes these steps you know um and",
    "start": "3171280",
    "end": "3177599"
  },
  {
    "text": "and like there's you know symbolic algebra packages you know that may be able to help right like like factor it uh to",
    "start": "3177599",
    "end": "3183920"
  },
  {
    "text": "simplify it or solving for in simple cases i think there's a you know there's a there's",
    "start": "3183920",
    "end": "3189359"
  },
  {
    "text": "there's something we could do to leverage you know work on this you know some on symbolic algebra and you know symbolic manipulations to to",
    "start": "3189359",
    "end": "3196480"
  },
  {
    "text": "um but we haven't thought you know a lot about that the that case of like breaking it down to make it easier to",
    "start": "3196480",
    "end": "3201839"
  },
  {
    "text": "read yeah yeah thank you yeah",
    "start": "3201839",
    "end": "3207680"
  },
  {
    "text": "so someone also interested in the human factors of scientific communication i found your formative study really",
    "start": "3207680",
    "end": "3213040"
  },
  {
    "text": "interesting because it's this form of notational survey essentially and it's about and i'm curious just to hear a",
    "start": "3213040",
    "end": "3219359"
  },
  {
    "text": "little bit more about your methodology like you're presented with 1986 equations and you need to",
    "start": "3219359",
    "end": "3225520"
  },
  {
    "text": "do some kind of semi-structured look through these things to find out interesting stuff but how did you structure that process like there are",
    "start": "3225520",
    "end": "3232000"
  },
  {
    "text": "lots of aspects of these equations you could consider summarizing or annotating um and but but what guided you to decide",
    "start": "3232000",
    "end": "3239839"
  },
  {
    "text": "that this was an important factor to look for and therefore would ultimately inform the design of iheartla yeah yeah",
    "start": "3239839",
    "end": "3245760"
  },
  {
    "text": "so there are other there are other attributes that we uh you know categorized that that didn't even come",
    "start": "3245760",
    "end": "3250800"
  },
  {
    "text": "up here right like um you know looking at like who's using superscript and who's using you know macs and who's",
    "start": "3250800",
    "end": "3256559"
  },
  {
    "text": "using um i don't know i i i don't remember them off the top of my head but it was basically like a brainstorming process",
    "start": "3256559",
    "end": "3262079"
  },
  {
    "text": "you know looking at equations and brainstorming and and saying like what are all the weird things that show up right so i think um i think is you know",
    "start": "3262079",
    "end": "3268640"
  },
  {
    "text": "i think you know young again did a lot of the hard work here right so he's the one who went through you know every siggraph paper and like took screenshots",
    "start": "3268640",
    "end": "3275440"
  },
  {
    "text": "of every equation and put them in a giant table you know and uh you know i think i think it was just it's it's it's",
    "start": "3275440",
    "end": "3281760"
  },
  {
    "text": "just like did something weird come up you know like let's make a new category for it right and then just just try to",
    "start": "3281760",
    "end": "3286960"
  },
  {
    "text": "enumerate all of you know all the math that's used um it's it's it's you know it's error prone potentially right like",
    "start": "3286960",
    "end": "3293599"
  },
  {
    "text": "if you miscategorize something or maybe you misunderstand something this actually came up uh in one iteration where",
    "start": "3293599",
    "end": "3299280"
  },
  {
    "text": "like we had examples and then um a reviewer would say you know i went to look in that paper and you got the type",
    "start": "3299280",
    "end": "3305520"
  },
  {
    "text": "wrong you know and and so and so you're making mistakes you know and so how can i trust like what",
    "start": "3305520",
    "end": "3311440"
  },
  {
    "text": "you're doing or something like that right but it's like to actually implement these correctly like without",
    "start": "3311440",
    "end": "3316480"
  },
  {
    "text": "you know this is like almost a chicken and egg thing like if the paper had been written and i heard away from the you know in the first place the types would",
    "start": "3316480",
    "end": "3321760"
  },
  {
    "text": "have been really apparent you know of every formula but like skimming a paper reading a paper it's easy to make you know to get that wrong right and then",
    "start": "3321760",
    "end": "3328000"
  },
  {
    "text": "potentially to implement it wrong yeah so um it seems like you have sort of two",
    "start": "3328000",
    "end": "3336160"
  },
  {
    "text": "different use cases here one is um helping authors",
    "start": "3336160",
    "end": "3342559"
  },
  {
    "text": "by using the type checking of the of the generated code to find bugs",
    "start": "3342559",
    "end": "3348480"
  },
  {
    "text": "in their writing and i'm curious if you did any checking",
    "start": "3348480",
    "end": "3354319"
  },
  {
    "text": "of the equations and all those papers to find how many of them have bugs in there",
    "start": "3354319",
    "end": "3362079"
  },
  {
    "text": "yeah right there's the example you know early on where it's like a clear typo yeah right um yeah um",
    "start": "3362079",
    "end": "3369440"
  },
  {
    "text": "right it you know some of the questions we'd like to answer are almost equivalent to like",
    "start": "3369440",
    "end": "3374880"
  },
  {
    "text": "implementing every siggraph paper you know from 2019 like well could we have this data set like let's just like go",
    "start": "3374880",
    "end": "3380160"
  },
  {
    "text": "and try to implement it you know and it's like you know it's",
    "start": "3380160",
    "end": "3385440"
  },
  {
    "text": "at some point it's like you know there that's like too much work you know that's like that's like too much work to go through and implement everyone's",
    "start": "3385440",
    "end": "3391359"
  },
  {
    "text": "thing but some of them we have to like chase we actually did like have to chase chase down for quite a while there were like some papers there's one paper where",
    "start": "3391359",
    "end": "3397680"
  },
  {
    "text": "we end up finding you know three different versions of it because it was really confusing you know to to to",
    "start": "3397680",
    "end": "3402799"
  },
  {
    "text": "understand like they're reusing um the the same index you know in a few summations but the but the length of the",
    "start": "3402799",
    "end": "3410240"
  },
  {
    "text": "the the the vector was different it was a different dimension and then like the description of what that dimension was",
    "start": "3410240",
    "end": "3416160"
  },
  {
    "text": "supposed to be because it didn't have a you know upper bound was like in different places in the paper and was written out in prose and in a way that",
    "start": "3416160",
    "end": "3422559"
  },
  {
    "text": "was like you know um uh kind of a summary right and it it's it's",
    "start": "3422559",
    "end": "3429680"
  },
  {
    "text": "like took a took a lot of tries to to make sense of it you know and i hope we got it right you know but it's",
    "start": "3429680",
    "end": "3435200"
  },
  {
    "text": "yeah it's it's like i don't know basically i don't know how many of these papers you know have",
    "start": "3435200",
    "end": "3440640"
  },
  {
    "text": "have mistakes yeah but it's sort of embedded in that answer there's this interesting question",
    "start": "3440640",
    "end": "3447040"
  },
  {
    "text": "about why it takes so long to implement it in in i heart la right",
    "start": "3447040",
    "end": "3453200"
  },
  {
    "text": "yeah yeah because you know the equation is written you just start translating it into your",
    "start": "3453200",
    "end": "3459200"
  },
  {
    "text": "right syntax right right it's it's it's the types it's like saying like how many dimensions is this thing right so going",
    "start": "3459200",
    "end": "3464400"
  },
  {
    "text": "and finding that thing going and finding that okay and getting it right it's like okay this is this is this a scalar is this a vector and if this is a vector is",
    "start": "3464400",
    "end": "3470319"
  },
  {
    "text": "it is it the same length as this other vector is it a different length so it's like that information ends up being actually scattered you know pretty you",
    "start": "3470319",
    "end": "3476799"
  },
  {
    "text": "know pretty far apart in the papers or right the paper in question was like it was like it ended up being like a 23",
    "start": "3476799",
    "end": "3482160"
  },
  {
    "text": "dimensional vector where it had like camera parameters as six of the dimensions and it's like well how many",
    "start": "3482160",
    "end": "3487200"
  },
  {
    "text": "dimensions are in the camera parameters right so you have to go through like multiple levels of indirection in the pros to you know to to finally nail down",
    "start": "3487200",
    "end": "3494160"
  },
  {
    "text": "what the dimensions of this thing really is you know right so so it is saying before that you know",
    "start": "3494160",
    "end": "3500319"
  },
  {
    "text": "there are two use cases here one is for authors and this type checking it seems like and the other one is",
    "start": "3500319",
    "end": "3506640"
  },
  {
    "text": "implementing the code and they have slightly different goals or",
    "start": "3506640",
    "end": "3512559"
  },
  {
    "text": "maybe you know fairly different goals and uh so i was wondering if you are thinking",
    "start": "3512559",
    "end": "3519520"
  },
  {
    "text": "about how those goals differ and what you might do to address them separately",
    "start": "3519520",
    "end": "3525119"
  },
  {
    "text": "right right um yeah so some of this is like you know sometimes when you write a paper uh i don't know if i'm revealing",
    "start": "3525119",
    "end": "3532000"
  },
  {
    "text": "like a secret you know how the sausage is made right but sometimes like you've done all this like you you you know",
    "start": "3532000",
    "end": "3538079"
  },
  {
    "text": "you've coded something and then you've made changes to it and you've made changes to it you've made change to it and then it's time to write the paper and you want to write something that",
    "start": "3538079",
    "end": "3544000"
  },
  {
    "text": "like maybe seems elegant like it's reasonably elegant and maybe not like the spaghetti of code",
    "start": "3544000",
    "end": "3550240"
  },
  {
    "text": "that's like eventually resulted and so you're trying to like you know come up with an elegant way to to to phrase what you've written you",
    "start": "3550240",
    "end": "3557040"
  },
  {
    "text": "know that still matches what you've written right and that's like that's sort of the translation loss you know thing that i'm getting out there right",
    "start": "3557040",
    "end": "3562799"
  },
  {
    "text": "but but like implicit in that is the fact that like you're not working with a nice clean mathematical you know you're",
    "start": "3562799",
    "end": "3568559"
  },
  {
    "text": "not like updating your mathematical formula the whole time and then trying it you're you're actually in this other like coding space you know programming",
    "start": "3568559",
    "end": "3575119"
  },
  {
    "text": "language space where you're making changes and and then uh if you know if if",
    "start": "3575119",
    "end": "3581760"
  },
  {
    "text": "if you then like write it in you know an iheartla and compile it and run it and then you know i guess you could check if",
    "start": "3581760",
    "end": "3587040"
  },
  {
    "text": "you got the same thing as as you know what you would written or not uh in you know your spaghetti code version of it",
    "start": "3587040",
    "end": "3593440"
  },
  {
    "text": "but like there's a there's another you know world i guess in which you did i heard late played a role in",
    "start": "3593440",
    "end": "3600799"
  },
  {
    "text": "the in all of the experiments right and that's like if that's like that's like a different thing right that's like",
    "start": "3600799",
    "end": "3607040"
  },
  {
    "text": "oh if if if we could make it so the you know the the email or the the blackboards you",
    "start": "3607040",
    "end": "3612640"
  },
  {
    "text": "know were were like authoritative you know the whole time that would like that is a change to how people work right so",
    "start": "3612640",
    "end": "3619359"
  },
  {
    "text": "i guess i'm trying to have my cake and eat it too i'm trying to say we don't want to change how you work we just want to like make things work better but like",
    "start": "3619359",
    "end": "3625359"
  },
  {
    "text": "i really do want to change how you work you know yeah all right i think we're out of time",
    "start": "3625359",
    "end": "3632160"
  },
  {
    "text": "but thank you so much thank you for having me",
    "start": "3632160",
    "end": "3637960"
  }
]