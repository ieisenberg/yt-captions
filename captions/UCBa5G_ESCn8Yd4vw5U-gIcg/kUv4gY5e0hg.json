[
  {
    "start": "0",
    "end": "4950"
  },
  {
    "text": "So far, we have been\ntalking about the problem",
    "start": "4950",
    "end": "8790"
  },
  {
    "text": "where we are given\na query graph and we",
    "start": "8790",
    "end": "11790"
  },
  {
    "text": "want to predict\nor identify a way",
    "start": "11790",
    "end": "14250"
  },
  {
    "text": "that a given query graph is\na subgraph in a larger target",
    "start": "14250",
    "end": "18900"
  },
  {
    "text": "graph.",
    "start": "18900",
    "end": "20220"
  },
  {
    "text": "Now, we are going to generalize\nthis approach we just",
    "start": "20220",
    "end": "23550"
  },
  {
    "text": "talked about to the problem\nof finding frequent subgraphs.",
    "start": "23550",
    "end": "27689"
  },
  {
    "text": "So let me tell you\nwhat this problem is.",
    "start": "27690",
    "end": "32540"
  },
  {
    "text": "What we would like to do is to\ntalk about frequent subgraph",
    "start": "32540",
    "end": "36030"
  },
  {
    "text": "mining.",
    "start": "36030",
    "end": "36530"
  },
  {
    "text": "So first, we discussed\nin the previous lecture",
    "start": "36530",
    "end": "39860"
  },
  {
    "text": "about subgraphs and motifs\nand we defined them.",
    "start": "39860",
    "end": "42530"
  },
  {
    "text": "And then we talked about the\nproblem of a neural subgraph",
    "start": "42530",
    "end": "47030"
  },
  {
    "text": "representation and be\nable to quickly say",
    "start": "47030",
    "end": "50360"
  },
  {
    "text": "whether a given query graph is\na subgraph in a bigger target",
    "start": "50360",
    "end": "54860"
  },
  {
    "text": "graph.",
    "start": "54860",
    "end": "55550"
  },
  {
    "text": "Now, we are going to\nfurther expand this",
    "start": "55550",
    "end": "57590"
  },
  {
    "text": "to frequent subgraph mining.",
    "start": "57590",
    "end": "60260"
  },
  {
    "text": "So here is the problem, the\nidea is that given a large graph",
    "start": "60260",
    "end": "65209"
  },
  {
    "text": "we would like to identify\nwhat are the building blocks?",
    "start": "65209",
    "end": "69180"
  },
  {
    "text": "What are the\nfrequently occurring",
    "start": "69180",
    "end": "71840"
  },
  {
    "text": "subgraphs that are part of\nthis bigger target graph?",
    "start": "71840",
    "end": "77030"
  },
  {
    "text": "And this is called the\nfrequent subgraph mining",
    "start": "77030",
    "end": "79850"
  },
  {
    "text": "where basically we\nwant to identify",
    "start": "79850",
    "end": "81320"
  },
  {
    "text": "these frequently occurring\nbuilding blocks of a big graph.",
    "start": "81320",
    "end": "85159"
  },
  {
    "text": "And generally, using\ncombinatorial approaches",
    "start": "85160",
    "end": "89030"
  },
  {
    "text": "the way you would approach this\nproblem is that, by the finding",
    "start": "89030",
    "end": "93110"
  },
  {
    "text": "most frequent size-k\nsubgraphs requires",
    "start": "93110",
    "end": "97640"
  },
  {
    "text": "solving two challenges.",
    "start": "97640",
    "end": "99350"
  },
  {
    "text": "First is that, we want\nto enumerate or consider",
    "start": "99350",
    "end": "102439"
  },
  {
    "text": "all size-k connected\nsubgraphs, right, and then",
    "start": "102440",
    "end": "105950"
  },
  {
    "text": "each of these connected\nsubgraphs of size-k acts",
    "start": "105950",
    "end": "109610"
  },
  {
    "text": "like a query which we then want\nto identify in the target graph",
    "start": "109610",
    "end": "115340"
  },
  {
    "text": "to count its occurrence.",
    "start": "115340",
    "end": "117119"
  },
  {
    "text": "So basically this\nmeans that, in order",
    "start": "117120",
    "end": "119060"
  },
  {
    "text": "to identify frequent subgraphs\nof a given size we first",
    "start": "119060",
    "end": "123049"
  },
  {
    "text": "have to identify what is\nthe universe of subgraphs",
    "start": "123050",
    "end": "126290"
  },
  {
    "text": "of a given size.",
    "start": "126290",
    "end": "127430"
  },
  {
    "text": "And then for each\nof these subgraphs",
    "start": "127430",
    "end": "129440"
  },
  {
    "text": "find its frequency in\nthe given target graph.",
    "start": "129440",
    "end": "132650"
  },
  {
    "text": "So this is how traditional\napproaches to this would work.",
    "start": "132650",
    "end": "136140"
  },
  {
    "text": "So for example,\nif I'm interested",
    "start": "136140",
    "end": "138319"
  },
  {
    "text": "in connected subgraphs\nundirected of size-3",
    "start": "138320",
    "end": "143150"
  },
  {
    "text": "then there are two possible such\nsubgraphs that are shown here.",
    "start": "143150",
    "end": "148349"
  },
  {
    "text": "I generated them so this is step\n1, and then for each of them",
    "start": "148350",
    "end": "152180"
  },
  {
    "text": "I would want to ask, what is the\nfrequency of them in the larger",
    "start": "152180",
    "end": "156079"
  },
  {
    "text": "target graph?",
    "start": "156080",
    "end": "157550"
  },
  {
    "text": "And here basically I\nwould need to count them.",
    "start": "157550",
    "end": "159880"
  },
  {
    "text": "So for example, for this let's\nsay motif subgraphs of size-3",
    "start": "159880",
    "end": "164480"
  },
  {
    "text": "here these different\ngreen polygons",
    "start": "164480",
    "end": "167900"
  },
  {
    "text": "show the instances\nof this given motif,",
    "start": "167900",
    "end": "170220"
  },
  {
    "text": "so its frequency equals to 3.",
    "start": "170220",
    "end": "172910"
  },
  {
    "text": "So this is a hard\ncombinatorial problem",
    "start": "172910",
    "end": "176630"
  },
  {
    "text": "because just knowing if\na certain subgraph exists",
    "start": "176630",
    "end": "180410"
  },
  {
    "text": "in a given larger graph is a\nhard computational problem,",
    "start": "180410",
    "end": "183820"
  },
  {
    "text": "right?",
    "start": "183820",
    "end": "184320"
  },
  {
    "text": "This is essentially a\nsubgraph isomorphism problem.",
    "start": "184320",
    "end": "187970"
  },
  {
    "text": "The frequent subgraph\ncounting is even bigger,",
    "start": "187970",
    "end": "191240"
  },
  {
    "text": "it's kind of even a harder\nproblem because first we",
    "start": "191240",
    "end": "194090"
  },
  {
    "text": "want to know the frequency\nof a given subgraph",
    "start": "194090",
    "end": "197599"
  },
  {
    "text": "and then we want to\nfind the subgraphs that",
    "start": "197600",
    "end": "200030"
  },
  {
    "text": "are the most frequent out of all\npossible subgraphs of a given",
    "start": "200030",
    "end": "204230"
  },
  {
    "text": "size.",
    "start": "204230",
    "end": "205110"
  },
  {
    "text": "So because the number of\nsubgraphs of a given size",
    "start": "205110",
    "end": "208040"
  },
  {
    "text": "increases\nsuper-exponentially, you",
    "start": "208040",
    "end": "210120"
  },
  {
    "text": "are basically battling two\nexponential algorithms.",
    "start": "210120",
    "end": "215750"
  },
  {
    "text": "First is the counting\nand the second one",
    "start": "215750",
    "end": "218270"
  },
  {
    "text": "is the number of possible\nthings you have to count, right?",
    "start": "218270",
    "end": "221820"
  },
  {
    "text": "We saw how the number of motifs\nor how the number of subgraphs",
    "start": "221820",
    "end": "226130"
  },
  {
    "text": "increases super-exponentially\nwith their size.",
    "start": "226130",
    "end": "230090"
  },
  {
    "text": "So traditional\ncombinatorial approaches",
    "start": "230090",
    "end": "232970"
  },
  {
    "text": "can only handle subgraphs\nbetween size, let's say 3,",
    "start": "232970",
    "end": "237320"
  },
  {
    "text": "to 5, 6, maybe 7.",
    "start": "237320",
    "end": "239810"
  },
  {
    "text": "Because the number of them\nincreases so drastically",
    "start": "239810",
    "end": "242630"
  },
  {
    "text": "and then just counting\neach one of them",
    "start": "242630",
    "end": "245390"
  },
  {
    "text": "to determine their\nfrequency is computationally",
    "start": "245390",
    "end": "248450"
  },
  {
    "text": "expensive as well.",
    "start": "248450",
    "end": "250410"
  },
  {
    "text": "So what we are going to\ndo in this lecture is",
    "start": "250410",
    "end": "253820"
  },
  {
    "text": "we are going to talk about\nhow can we use representation",
    "start": "253820",
    "end": "256850"
  },
  {
    "text": "learning and graph\nneural networks to solve",
    "start": "256850",
    "end": "259609"
  },
  {
    "text": "this hard combinatorial problem?",
    "start": "259610",
    "end": "262669"
  },
  {
    "text": "As I said finding\nfrequent subgraphs",
    "start": "262670",
    "end": "265400"
  },
  {
    "text": "is computationally hard because\nthere are two problems that",
    "start": "265400",
    "end": "269060"
  },
  {
    "text": "are both exponential.",
    "start": "269060",
    "end": "270410"
  },
  {
    "text": "First is you get a\ncombinatorial explosion",
    "start": "270410",
    "end": "273530"
  },
  {
    "text": "in the number of\npossible patterns,",
    "start": "273530",
    "end": "275660"
  },
  {
    "text": "possible subgraphs\nof a given size.",
    "start": "275660",
    "end": "278150"
  },
  {
    "text": "And then given one of\nthese possible subgraphs",
    "start": "278150",
    "end": "282050"
  },
  {
    "text": "you have to count it, you\nhave to find its frequency",
    "start": "282050",
    "end": "284870"
  },
  {
    "text": "in the big target graph\nso that then you can say,",
    "start": "284870",
    "end": "287699"
  },
  {
    "text": "here are the let's say\n10 most frequent when",
    "start": "287700",
    "end": "290143"
  },
  {
    "text": "you kind of sort them by\ntheir decreasing frequency.",
    "start": "290143",
    "end": "292310"
  },
  {
    "text": "So both of these by\nthemselves are hard.",
    "start": "292310",
    "end": "296120"
  },
  {
    "text": "So we are going to\nelegantly sidestep",
    "start": "296120",
    "end": "300310"
  },
  {
    "text": "these hard\ncombinatorial problems",
    "start": "300310",
    "end": "302540"
  },
  {
    "text": "by using representation\nlearning and show how",
    "start": "302540",
    "end": "305240"
  },
  {
    "text": "we can tackle these challenges.",
    "start": "305240",
    "end": "307130"
  },
  {
    "text": "The combinatorial explosion\nwill be of possible subgraphs",
    "start": "307130",
    "end": "311780"
  },
  {
    "text": "will be attained by organizing\nthe search space cleverly.",
    "start": "311780",
    "end": "316639"
  },
  {
    "text": "And then the problem of subgraph\nisomorphism and subgraph",
    "start": "316640",
    "end": "320420"
  },
  {
    "text": "counting will be tackled\nby graph neural networks.",
    "start": "320420",
    "end": "324280"
  },
  {
    "text": "So let me give you a bit\nmore details about how",
    "start": "324280",
    "end": "327139"
  },
  {
    "text": "we are going to do this.",
    "start": "327140",
    "end": "329730"
  },
  {
    "text": "So for counting, we are actually\nusing the graph neural network",
    "start": "329730",
    "end": "334370"
  },
  {
    "text": "to predict a frequency\nof a given subgraph.",
    "start": "334370",
    "end": "337220"
  },
  {
    "text": "So basically what\nwe are going to do",
    "start": "337220",
    "end": "339230"
  },
  {
    "text": "is we are going to take a big\ntarget graph and embed it.",
    "start": "339230",
    "end": "342740"
  },
  {
    "text": "And then when a small\nquery graph comes",
    "start": "342740",
    "end": "346039"
  },
  {
    "text": "we are going to\npredict its frequency.",
    "start": "346040",
    "end": "348660"
  },
  {
    "text": "So that rather than\ndirectly counting it",
    "start": "348660",
    "end": "351410"
  },
  {
    "text": "we are just going to\npredict its frequency.",
    "start": "351410",
    "end": "353550"
  },
  {
    "text": "So that will be the\nfirst innovation.",
    "start": "353550",
    "end": "355310"
  },
  {
    "text": "And then the second\ninnovation, now,",
    "start": "355310",
    "end": "357530"
  },
  {
    "text": "rather than predicting the\nfrequency of all size scale",
    "start": "357530",
    "end": "361340"
  },
  {
    "text": "let's say k's 5, 10,\n20, connected subgraphs",
    "start": "361340",
    "end": "365930"
  },
  {
    "text": "because there is super\nexponentially many of them,",
    "start": "365930",
    "end": "368810"
  },
  {
    "text": "we are actually going to\ndevelop a search procedure that",
    "start": "368810",
    "end": "372080"
  },
  {
    "text": "will start with a\nsmall subgraph and grow",
    "start": "372080",
    "end": "375860"
  },
  {
    "text": "it node by node until it\nreaches a desirable size,",
    "start": "375860",
    "end": "380960"
  },
  {
    "text": "and this way we will also\ntry to grow it in such a way",
    "start": "380960",
    "end": "385160"
  },
  {
    "text": "that its frequency\nwill be higher.",
    "start": "385160",
    "end": "387930"
  },
  {
    "text": "The important point\nhere is because we",
    "start": "387930",
    "end": "389539"
  },
  {
    "text": "are talking about\nfrequency subgraph mining,",
    "start": "389540",
    "end": "391760"
  },
  {
    "text": "we are only interested in\nthe most frequent subgraphs",
    "start": "391760",
    "end": "394610"
  },
  {
    "text": "and the most frequent\nmotifs and not",
    "start": "394610",
    "end": "396710"
  },
  {
    "text": "the frequency of all the motifs.",
    "start": "396710",
    "end": "399060"
  },
  {
    "text": "So that's why the search\nprocedure will be useful.",
    "start": "399060",
    "end": "402900"
  },
  {
    "text": "So let's look into\nthis problem more,",
    "start": "402900",
    "end": "406139"
  },
  {
    "text": "let's try to\nunderstand it better.",
    "start": "406140",
    "end": "408390"
  },
  {
    "text": "So the problem set up for\nthe frequent motif mining",
    "start": "408390",
    "end": "411950"
  },
  {
    "text": "is the following.",
    "start": "411950",
    "end": "413280"
  },
  {
    "text": "We are given a\nlarge target graph",
    "start": "413280",
    "end": "415535"
  },
  {
    "text": "G sub T and a subgraph\nsize parameter k,",
    "start": "415535",
    "end": "421010"
  },
  {
    "text": "as well as the number\nof desired results r.",
    "start": "421010",
    "end": "425480"
  },
  {
    "text": "And the goal is to identify\namong all possible graphs",
    "start": "425480",
    "end": "430160"
  },
  {
    "text": "on k node out of them that have\nthe highest frequency in G sub",
    "start": "430160",
    "end": "434980"
  },
  {
    "text": "T, right?",
    "start": "434980",
    "end": "435780"
  },
  {
    "text": "So I want to find r most\nfrequent subgraphs on k nodes",
    "start": "435780",
    "end": "442730"
  },
  {
    "text": "in a given target graph G sub T.",
    "start": "442730",
    "end": "447020"
  },
  {
    "text": "And here for the\nfrequency definition",
    "start": "447020",
    "end": "449930"
  },
  {
    "text": "we are going to use what we\ncall the node level frequency",
    "start": "449930",
    "end": "453590"
  },
  {
    "text": "definition, where this is the\nnumber of nodes u in target",
    "start": "453590",
    "end": "459350"
  },
  {
    "text": "graph T, G sub T for which\nsome subgraph of G sub T",
    "start": "459350",
    "end": "464660"
  },
  {
    "text": "is isomorphic to our query and\nthe isomorphism maps node u",
    "start": "464660",
    "end": "469400"
  },
  {
    "text": "to node v.",
    "start": "469400",
    "end": "470570"
  },
  {
    "text": "And perhaps the best way\nto understand this is,",
    "start": "470570",
    "end": "473630"
  },
  {
    "text": "imagine I have my\ntarget graph, it's",
    "start": "473630",
    "end": "476970"
  },
  {
    "text": "a kind of a star with\n100 spokes and imagine",
    "start": "476970",
    "end": "480710"
  },
  {
    "text": "I have a query graph that\nis a star on 6 spokes.",
    "start": "480710",
    "end": "485460"
  },
  {
    "text": "And imagine that I say this\nis the anchor I care about,",
    "start": "485460",
    "end": "489500"
  },
  {
    "text": "then the frequency of this\ngiven query in the target graph",
    "start": "489500",
    "end": "494420"
  },
  {
    "text": "will be exactly 1 because\nthe anchor is going",
    "start": "494420",
    "end": "497720"
  },
  {
    "text": "to map to the center node\nand that's the only way how",
    "start": "497720",
    "end": "500780"
  },
  {
    "text": "to map this query graph\nto the target graph",
    "start": "500780",
    "end": "505160"
  },
  {
    "text": "while also mapping\nthe anchor node to one",
    "start": "505160",
    "end": "508293"
  },
  {
    "text": "of the nodes in the\ntarget graph, right?",
    "start": "508293",
    "end": "509960"
  },
  {
    "text": "So rather here having G\nsub Q frequency of 100 to 6",
    "start": "509960",
    "end": "518630"
  },
  {
    "text": "it will have just frequency\nof 1 because there",
    "start": "518630",
    "end": "520820"
  },
  {
    "text": "is only one way to map this\nanchor node to the underlying G",
    "start": "520820",
    "end": "526340"
  },
  {
    "text": "sub T. So this\nfrequency definition",
    "start": "526340",
    "end": "528500"
  },
  {
    "text": "is more robust to this\ncombinatorial explosion",
    "start": "528500",
    "end": "532310"
  },
  {
    "text": "when like I try to\nillustrate here.",
    "start": "532310",
    "end": "535130"
  },
  {
    "text": "So that's the frequency\ndefinition we care about.",
    "start": "535130",
    "end": "538470"
  },
  {
    "text": "So now the method that\nwe talk about is SPMiner",
    "start": "538470",
    "end": "542779"
  },
  {
    "text": "and it's a neural network model\nto identify frequent motifs.",
    "start": "542780",
    "end": "547100"
  },
  {
    "text": "And the way this is going\nto work is the following.",
    "start": "547100",
    "end": "549990"
  },
  {
    "text": "We are going to give\nan input graph G sub T",
    "start": "549990",
    "end": "553010"
  },
  {
    "text": "and we are going to\ndecompose it into",
    "start": "553010",
    "end": "555110"
  },
  {
    "text": "node anchored neighborhoods.",
    "start": "555110",
    "end": "557540"
  },
  {
    "text": "And then we are going to use a\ngraph neural network to embed",
    "start": "557540",
    "end": "560449"
  },
  {
    "text": "each of these neighborhoods.",
    "start": "560450",
    "end": "562440"
  },
  {
    "text": "And this is exactly what we have\nbeen talking in lecture 12.2,",
    "start": "562440",
    "end": "568860"
  },
  {
    "text": "right, where we talked\nabout how do you basically",
    "start": "568860",
    "end": "571250"
  },
  {
    "text": "take the graph, decompose\nit into node overlapping",
    "start": "571250",
    "end": "575450"
  },
  {
    "text": "node anchored neighborhoods--\nand then use the encoder,",
    "start": "575450",
    "end": "578630"
  },
  {
    "text": "use the graph neural network to\nbasically embed every dot here",
    "start": "578630",
    "end": "582500"
  },
  {
    "text": "as a different neighborhood\nand you embed it",
    "start": "582500",
    "end": "585020"
  },
  {
    "text": "in the embedding space.",
    "start": "585020",
    "end": "588290"
  },
  {
    "text": "So this will be\nthe encoder part.",
    "start": "588290",
    "end": "590660"
  },
  {
    "text": "What is new in this\npart of the lecture",
    "start": "590660",
    "end": "592579"
  },
  {
    "text": "is the last part\nwhere we will have",
    "start": "592580",
    "end": "594320"
  },
  {
    "text": "what we call a search procedure\nto find frequent subgraphs",
    "start": "594320",
    "end": "597950"
  },
  {
    "text": "by growing our motif.",
    "start": "597950",
    "end": "600860"
  },
  {
    "text": "So we are going to start\nwith a trivial motif of two",
    "start": "600860",
    "end": "604459"
  },
  {
    "text": "nodes and an edge\nand then we are",
    "start": "604460",
    "end": "606230"
  },
  {
    "text": "going to iteratively\ngrow it while trying",
    "start": "606230",
    "end": "609019"
  },
  {
    "text": "to preserve its frequency.",
    "start": "609020",
    "end": "611210"
  },
  {
    "text": "We are going to say, how\ndo I grow this motif so",
    "start": "611210",
    "end": "614360"
  },
  {
    "text": "that its frequency remains high?",
    "start": "614360",
    "end": "616670"
  },
  {
    "text": "And when I reach the\ndesired size of the motif,",
    "start": "616670",
    "end": "620180"
  },
  {
    "text": "the size-k I'm going to stop\nand say, here is the motif,",
    "start": "620180",
    "end": "624320"
  },
  {
    "text": "this is its predicted frequency.",
    "start": "624320",
    "end": "626750"
  },
  {
    "text": "So the point is that,\nrather than trying out",
    "start": "626750",
    "end": "629330"
  },
  {
    "text": "let's say all possible\ngraphs on 10 nodes,",
    "start": "629330",
    "end": "632810"
  },
  {
    "text": "we are going to grow\na graph on 10 nodes",
    "start": "632810",
    "end": "635600"
  },
  {
    "text": "iteratively while trying\nto maximize its frequency.",
    "start": "635600",
    "end": "640040"
  },
  {
    "text": "That is the idea,\nthis is the overview.",
    "start": "640040",
    "end": "643230"
  },
  {
    "text": "So now let's dive deeper\ninto this lecture.",
    "start": "643230",
    "end": "648370"
  },
  {
    "text": "So the key idea of SPMiner is\nto decompose the input graft",
    "start": "648370",
    "end": "652830"
  },
  {
    "text": "Gt into a lot of\nsmall neighborhoods.",
    "start": "652830",
    "end": "655740"
  },
  {
    "text": "And we are going to embed these\nneighborhoods into an order",
    "start": "655740",
    "end": "659820"
  },
  {
    "text": "embedding space.",
    "start": "659820",
    "end": "661440"
  },
  {
    "text": "And the key benefit of\norder embedding space",
    "start": "661440",
    "end": "664110"
  },
  {
    "text": "will be that we'll be\nable to quickly predict",
    "start": "664110",
    "end": "666570"
  },
  {
    "text": "the frequency of a\ngiven subgraph G sub Q.",
    "start": "666570",
    "end": "670920"
  },
  {
    "text": "So essentially rather\nthan taking G sub Q",
    "start": "670920",
    "end": "673380"
  },
  {
    "text": "and trying to match it in many\ndifferent places in the G sub",
    "start": "673380",
    "end": "677477"
  },
  {
    "text": "T, we are just going\nto encode G sub Q",
    "start": "677477",
    "end": "680850"
  },
  {
    "text": "and then predict its\nfrequency in the G sub T.",
    "start": "680850",
    "end": "683910"
  },
  {
    "text": "That's the kind of\nthe idea is that we",
    "start": "683910",
    "end": "685889"
  },
  {
    "text": "have a very fast\nfrequency predictor that",
    "start": "685890",
    "end": "689580"
  },
  {
    "text": "will use graph neural networks.",
    "start": "689580",
    "end": "691600"
  },
  {
    "text": "So here is how we are\ngoing to do this frequency",
    "start": "691600",
    "end": "694769"
  },
  {
    "text": "prediction, right?",
    "start": "694770",
    "end": "695910"
  },
  {
    "text": "So the idea is that we take\na set of subgraphs, these",
    "start": "695910",
    "end": "700379"
  },
  {
    "text": "are our node anchored\nneighborhoods G sub",
    "start": "700380",
    "end": "703830"
  },
  {
    "text": "N of big target graph G sub T.",
    "start": "703830",
    "end": "708800"
  },
  {
    "text": "And the idea will be that\nwe are going to estimate now",
    "start": "708800",
    "end": "711230"
  },
  {
    "text": "the frequency of our given\nsubgraph of a given target",
    "start": "711230",
    "end": "715380"
  },
  {
    "text": "graph G sub Q by counting\nthe number of neighborhoods",
    "start": "715380",
    "end": "720020"
  },
  {
    "text": "such that their embedding\nsatisfies the order embedding",
    "start": "720020",
    "end": "724190"
  },
  {
    "text": "property.",
    "start": "724190",
    "end": "725300"
  },
  {
    "text": "So basically we are going to\nsay, for a given graph G sub Q",
    "start": "725300",
    "end": "729800"
  },
  {
    "text": "we are going to embed it into\nsome point in the embedding",
    "start": "729800",
    "end": "732709"
  },
  {
    "text": "space, and we are going to ask\nhow many neighborhoods of G sub",
    "start": "732710",
    "end": "737572"
  },
  {
    "text": "T are to the upper\nright of it, right?",
    "start": "737572",
    "end": "741680"
  },
  {
    "text": "Basically with\nthis notation I try",
    "start": "741680",
    "end": "743450"
  },
  {
    "text": "to say how many\nneighborhoods N sub",
    "start": "743450",
    "end": "747830"
  },
  {
    "text": "I are there whose\nindividual coordinates are",
    "start": "747830",
    "end": "751100"
  },
  {
    "text": "all greater than the embedding\ncoordinates of my query graph",
    "start": "751100",
    "end": "757399"
  },
  {
    "text": "Q.",
    "start": "757400",
    "end": "758490"
  },
  {
    "text": "And this is exactly\na consequence",
    "start": "758490",
    "end": "760279"
  },
  {
    "text": "of order embedding\nspace property",
    "start": "760280",
    "end": "763040"
  },
  {
    "text": "that we have discussed, right?",
    "start": "763040",
    "end": "764690"
  },
  {
    "text": "So intuitively when my G sub Q\narrives, I'm going to embed it",
    "start": "764690",
    "end": "770390"
  },
  {
    "text": "and I'm going to say\nits frequency is simply",
    "start": "770390",
    "end": "773720"
  },
  {
    "text": "the number of node\nanchored neighborhoods",
    "start": "773720",
    "end": "776089"
  },
  {
    "text": "that are embedded into the\ntop right of it, right?",
    "start": "776090",
    "end": "779990"
  },
  {
    "text": "So number of node anchor\nneighborhoods whose embedding",
    "start": "779990",
    "end": "785540"
  },
  {
    "text": "coordinates are greater\nthan the embedding",
    "start": "785540",
    "end": "789320"
  },
  {
    "text": "coordinates of my query point.",
    "start": "789320",
    "end": "792920"
  },
  {
    "text": "So basically there is this\nwhat we call a super graph",
    "start": "792920",
    "end": "796279"
  },
  {
    "text": "region, where basically all the\npoints, all the neighborhoods",
    "start": "796280",
    "end": "800030"
  },
  {
    "text": "in the red shaded region\ncorresponds to neighborhoods",
    "start": "800030",
    "end": "803120"
  },
  {
    "text": "in G sub T that contain G\nsub Q as a subgraph, right?",
    "start": "803120",
    "end": "807980"
  },
  {
    "text": "So basically this will be\nnow our frequency estimation",
    "start": "807980",
    "end": "811970"
  },
  {
    "text": "and the benefit\nwill be that now we",
    "start": "811970",
    "end": "813560"
  },
  {
    "text": "have a super fast subgraph\ncounting frequency estimation",
    "start": "813560",
    "end": "818090"
  },
  {
    "text": "method because when a new\nmotif arrives we just embed",
    "start": "818090",
    "end": "822770"
  },
  {
    "text": "it and then determine\nhow many points",
    "start": "822770",
    "end": "825110"
  },
  {
    "text": "fall to the top right of it and\nthis can be done super fast.",
    "start": "825110",
    "end": "830220"
  },
  {
    "text": "So now that we know how\nto estimate the frequency,",
    "start": "830220",
    "end": "834649"
  },
  {
    "text": "now let's talk about\nthe search procedure",
    "start": "834650",
    "end": "837260"
  },
  {
    "text": "that is actually going\nto find the motif.",
    "start": "837260",
    "end": "840290"
  },
  {
    "text": "So the way we are going to\ndo this is the following.",
    "start": "840290",
    "end": "844800"
  },
  {
    "text": "We are going to randomly pick\na starting node u in the target",
    "start": "844800",
    "end": "849170"
  },
  {
    "text": "graph G sub T and then we\nare going to basically expand",
    "start": "849170",
    "end": "853399"
  },
  {
    "text": "the neighborhood around this\ntarget node u in the G sub T",
    "start": "853400",
    "end": "857030"
  },
  {
    "text": "to get the query\ngraph, and we are",
    "start": "857030",
    "end": "859688"
  },
  {
    "text": "going to use the\ngraph neural network",
    "start": "859688",
    "end": "861230"
  },
  {
    "text": "to estimate its frequency.",
    "start": "861230",
    "end": "862760"
  },
  {
    "text": "And we are going to\ngrow it in G sub T",
    "start": "862760",
    "end": "866030"
  },
  {
    "text": "while trying to keep the\nfrequency as high as possible.",
    "start": "866030",
    "end": "869800"
  },
  {
    "text": "And the way you can\nthink of this as that,",
    "start": "869800",
    "end": "871550"
  },
  {
    "text": "we are going to start\nwith an individual node u",
    "start": "871550",
    "end": "874010"
  },
  {
    "text": "and its embedding will\nbe somewhere all the way",
    "start": "874010",
    "end": "878000"
  },
  {
    "text": "to the lower level because an\nindividual node is a subgraph",
    "start": "878000",
    "end": "881570"
  },
  {
    "text": "of all neighborhoods, right?",
    "start": "881570",
    "end": "884540"
  },
  {
    "text": "Because the neighborhoods\nare composed of nodes",
    "start": "884540",
    "end": "887180"
  },
  {
    "text": "so this individual node is a\nsubgraph in all neighborhoods,",
    "start": "887180",
    "end": "890075"
  },
  {
    "text": "right?",
    "start": "890075",
    "end": "890990"
  },
  {
    "text": "So here the point is\nthat each dot here",
    "start": "890990",
    "end": "894800"
  },
  {
    "text": "represents a neighborhood\nin the target graph",
    "start": "894800",
    "end": "897890"
  },
  {
    "text": "that contains the\nmotif pattern, right?",
    "start": "897890",
    "end": "901250"
  },
  {
    "text": "And whatever is in the\nred shaded three regions.",
    "start": "901250",
    "end": "904050"
  },
  {
    "text": "These are the neighborhoods\nthat contain that motif.",
    "start": "904050",
    "end": "907519"
  },
  {
    "text": "And of course, initially\nall neighborhoods",
    "start": "907520",
    "end": "910310"
  },
  {
    "text": "contain the motif because\nthe motif is a single node.",
    "start": "910310",
    "end": "915450"
  },
  {
    "text": "So now that we have a\npartially built motif S",
    "start": "915450",
    "end": "920480"
  },
  {
    "text": "we want to grow it\nuntil it reaches",
    "start": "920480",
    "end": "922880"
  },
  {
    "text": "size-k such that its\nfrequency of this size-k motif",
    "start": "922880",
    "end": "927530"
  },
  {
    "text": "will be as large as possible.",
    "start": "927530",
    "end": "929640"
  },
  {
    "text": "So the way we are\ngoing to do this is we",
    "start": "929640",
    "end": "931550"
  },
  {
    "text": "are going to do it through\nan iterative procedure that",
    "start": "931550",
    "end": "936050"
  },
  {
    "text": "is going to grow the motif\niteratively meaning node",
    "start": "936050",
    "end": "938810"
  },
  {
    "text": "by node and edge by edge,\nby basically traversing",
    "start": "938810",
    "end": "943160"
  },
  {
    "text": "the neighborhood of this\nchosen node u in G sub T",
    "start": "943160",
    "end": "946399"
  },
  {
    "text": "and adding neighbors\nof that node.",
    "start": "946400",
    "end": "950030"
  },
  {
    "text": "The neighbors of neighbors\nto S and at the same time",
    "start": "950030",
    "end": "953690"
  },
  {
    "text": "we are going to use the order\nembedding space to now take",
    "start": "953690",
    "end": "956720"
  },
  {
    "text": "S, embed it, and ask what is\nthe frequency of that bigger",
    "start": "956720",
    "end": "962810"
  },
  {
    "text": "subgraph, right?",
    "start": "962810",
    "end": "963660"
  },
  {
    "text": "So the way you\ncan think of it is",
    "start": "963660",
    "end": "965149"
  },
  {
    "text": "we are going to start\nwith the individual node",
    "start": "965150",
    "end": "968460"
  },
  {
    "text": "and we are going now to say,\nan individual node and that's",
    "start": "968460",
    "end": "971690"
  },
  {
    "text": "our S, and then we are going\nto add one neighbor of it to S,",
    "start": "971690",
    "end": "975650"
  },
  {
    "text": "so now S will be bigger.",
    "start": "975650",
    "end": "977180"
  },
  {
    "text": "And for every possible way\nto add this new node or this",
    "start": "977180",
    "end": "981260"
  },
  {
    "text": "to the S we are going to ask,\nwhat is the best node to add",
    "start": "981260",
    "end": "986870"
  },
  {
    "text": "to the S so that the frequency\nremains as high as possible?",
    "start": "986870",
    "end": "991070"
  },
  {
    "text": "And we can use this kind of\ngritty search procedure that",
    "start": "991070",
    "end": "994400"
  },
  {
    "text": "is going to grow our motif\nnode by node until it",
    "start": "994400",
    "end": "998540"
  },
  {
    "text": "reaches the desirable size.",
    "start": "998540",
    "end": "1001720"
  },
  {
    "text": "And now of course,\nwhat we need to decide",
    "start": "1001720",
    "end": "1004000"
  },
  {
    "text": "is how do we decide what\nnode to include next, right?",
    "start": "1004000",
    "end": "1009090"
  },
  {
    "text": "How precisely do we grow this\nunderlying motif, node by node?",
    "start": "1009090",
    "end": "1016350"
  },
  {
    "text": "And the way we are\ngoing to do this",
    "start": "1016350",
    "end": "1018180"
  },
  {
    "text": "is that, we are going\nto grow it with the goal",
    "start": "1018180",
    "end": "1020460"
  },
  {
    "text": "to maximize the number\nof neighborhoods",
    "start": "1020460",
    "end": "1023610"
  },
  {
    "text": "that are in the red shaded\nregion after the k steps,",
    "start": "1023610",
    "end": "1027390"
  },
  {
    "text": "right?",
    "start": "1027390",
    "end": "1028060"
  },
  {
    "text": "So basically in the end,\nwe want to reach out",
    "start": "1028060",
    "end": "1030750"
  },
  {
    "text": "some point which that\ndescribes a graph of a given",
    "start": "1030750",
    "end": "1036750"
  },
  {
    "text": "size-k such that the\nnumber of neighborhoods",
    "start": "1036750",
    "end": "1039540"
  },
  {
    "text": "that are to the top\nright of it, meaning",
    "start": "1039540",
    "end": "1041369"
  },
  {
    "text": "that are in these red-shaded\nregions is as high as possible.",
    "start": "1041369",
    "end": "1044819"
  },
  {
    "text": "Because whatever are\nthe neighborhoods",
    "start": "1044819",
    "end": "1046619"
  },
  {
    "text": "to the top right of it,\nthese are the neighborhoods",
    "start": "1046619",
    "end": "1048900"
  },
  {
    "text": "that our red dot\nis a subgraph of,",
    "start": "1048900",
    "end": "1051930"
  },
  {
    "text": "that's the order\nembedding property that we",
    "start": "1051930",
    "end": "1055710"
  },
  {
    "text": "have worked so hard to establish\nin the previous lecture.",
    "start": "1055710",
    "end": "1060779"
  },
  {
    "text": "So that's the idea.",
    "start": "1060780",
    "end": "1062970"
  },
  {
    "text": "So right then we'll be growing\nthis motif node by node",
    "start": "1062970",
    "end": "1066630"
  },
  {
    "text": "until it reaches the\ndesired motif size,",
    "start": "1066630",
    "end": "1069690"
  },
  {
    "text": "until it reaches size-k.",
    "start": "1069690",
    "end": "1071549"
  },
  {
    "text": "And then we are\ngoing to terminate,",
    "start": "1071550",
    "end": "1074610"
  },
  {
    "text": "and what we are\ngoing to return, we",
    "start": "1074610",
    "end": "1078510"
  },
  {
    "text": "are going to return whatever is\nthe motif we terminated and we",
    "start": "1078510",
    "end": "1082080"
  },
  {
    "text": "are going to return its\npredicted frequency, which",
    "start": "1082080",
    "end": "1084690"
  },
  {
    "text": "is the number of neighborhoods\nin this red shaded region.",
    "start": "1084690",
    "end": "1089259"
  },
  {
    "text": "The reason why we are--",
    "start": "1089260",
    "end": "1091500"
  },
  {
    "text": "just kind of\nnoticed that, we are",
    "start": "1091500",
    "end": "1094650"
  },
  {
    "text": "only interested in\nthe subgraph's motifs",
    "start": "1094650",
    "end": "1097320"
  },
  {
    "text": "that have high frequency.",
    "start": "1097320",
    "end": "1098669"
  },
  {
    "text": "So as we are building it we\nare kind of greedily deciding",
    "start": "1098670",
    "end": "1102570"
  },
  {
    "text": "how to grow that motif so that\nits frequency will remain high.",
    "start": "1102570",
    "end": "1108450"
  },
  {
    "text": "So to now answer the most\nimportant question, which",
    "start": "1108450",
    "end": "1112080"
  },
  {
    "text": "is how do I decide which\nnode to pick and add",
    "start": "1112080",
    "end": "1116760"
  },
  {
    "text": "to my current subgraph motif S?",
    "start": "1116760",
    "end": "1121992"
  },
  {
    "text": "And the way we are\ngoing to do this",
    "start": "1121992",
    "end": "1123450"
  },
  {
    "text": "is, we are going to define\nthe notion of total violation",
    "start": "1123450",
    "end": "1126990"
  },
  {
    "text": "of a subgraph, let's\ncall it G which",
    "start": "1126990",
    "end": "1129840"
  },
  {
    "text": "is the number of\nneighborhoods that",
    "start": "1129840",
    "end": "1131820"
  },
  {
    "text": "do not contain this subgraph G.",
    "start": "1131820",
    "end": "1136049"
  },
  {
    "text": "So this is the number\nof neighborhoods",
    "start": "1136050",
    "end": "1138630"
  },
  {
    "text": "that do not satisfy my\norder embedding property.",
    "start": "1138630",
    "end": "1144120"
  },
  {
    "text": "Which basically it would be the\nnumber of neighborhoods where",
    "start": "1144120",
    "end": "1146790"
  },
  {
    "text": "at least one of the\ncoordinates in the embedding",
    "start": "1146790",
    "end": "1149460"
  },
  {
    "text": "space of the neighborhood\nis less than the embedding",
    "start": "1149460",
    "end": "1153360"
  },
  {
    "text": "coordinate of my graph G.\nSo this is the same thing,",
    "start": "1153360",
    "end": "1159179"
  },
  {
    "text": "this G is this cubed.",
    "start": "1159180",
    "end": "1161290"
  },
  {
    "text": "And this means that basically\nminimizing the total violation,",
    "start": "1161290",
    "end": "1163890"
  },
  {
    "text": "means maximizing the frequency.",
    "start": "1163890",
    "end": "1166500"
  },
  {
    "text": "And you can then use many\ndifferent search heuristics",
    "start": "1166500",
    "end": "1169800"
  },
  {
    "text": "but one possible such\nheuristic is greedy, right?",
    "start": "1169800",
    "end": "1173320"
  },
  {
    "text": "Basically, at\nevery step you want",
    "start": "1173320",
    "end": "1175080"
  },
  {
    "text": "to add a node to the subgraph\nS that results in the smallest",
    "start": "1175080",
    "end": "1180120"
  },
  {
    "text": "total violation.",
    "start": "1180120",
    "end": "1181000"
  },
  {
    "text": "Basically, you want\nto add a node that",
    "start": "1181000",
    "end": "1183240"
  },
  {
    "text": "will keep the number\nof neighborhoods",
    "start": "1183240",
    "end": "1186809"
  },
  {
    "text": "to the top right\nof that subgraph S",
    "start": "1186810",
    "end": "1190170"
  },
  {
    "text": "to be as high as possible.",
    "start": "1190170",
    "end": "1191725"
  },
  {
    "text": "And you can think of this,\nright, we start with one node,",
    "start": "1191725",
    "end": "1194100"
  },
  {
    "text": "we add the second node,\nwe add the third one,",
    "start": "1194100",
    "end": "1196230"
  },
  {
    "text": "we add the fourth one, and\nyou are kind of dancing,",
    "start": "1196230",
    "end": "1199919"
  },
  {
    "text": "as you are building the motif\nyou are kind of moving up.",
    "start": "1199920",
    "end": "1202830"
  },
  {
    "text": "And the goal is to reach a\nmotif of a given size that",
    "start": "1202830",
    "end": "1208559"
  },
  {
    "text": "has the largest number\nof neighborhoods",
    "start": "1208560",
    "end": "1211230"
  },
  {
    "text": "in the red shaded region,\nso in the region that",
    "start": "1211230",
    "end": "1214020"
  },
  {
    "text": "is up and above from it.",
    "start": "1214020",
    "end": "1216360"
  },
  {
    "text": "And that's essentially the idea.",
    "start": "1216360",
    "end": "1220260"
  },
  {
    "text": "I can show you some\nexperimental results",
    "start": "1220260",
    "end": "1223260"
  },
  {
    "text": "to show that this really\nworks quite remarkably well.",
    "start": "1223260",
    "end": "1227640"
  },
  {
    "text": "Where for example, we can\nsay let the ground truth",
    "start": "1227640",
    "end": "1230790"
  },
  {
    "text": "be the most frequent top\n10 most frequent motifs",
    "start": "1230790",
    "end": "1235710"
  },
  {
    "text": "in a given target graph.",
    "start": "1235710",
    "end": "1238049"
  },
  {
    "text": "And we are going to do these\nfour motifs of size 5 and 6",
    "start": "1238050",
    "end": "1242550"
  },
  {
    "text": "because this is what\nkind of this brute force",
    "start": "1242550",
    "end": "1244710"
  },
  {
    "text": "exact enumeration counting is\nable to do in a couple of days,",
    "start": "1244710",
    "end": "1248784"
  },
  {
    "text": "right?",
    "start": "1248785",
    "end": "1250260"
  },
  {
    "text": "So then we can ask is, what\nare the frequency of the top 10",
    "start": "1250260",
    "end": "1256020"
  },
  {
    "text": "most frequent motifs\nthat this search",
    "start": "1256020",
    "end": "1258210"
  },
  {
    "text": "procedure is able to identify?",
    "start": "1258210",
    "end": "1259840"
  },
  {
    "text": "Where basically we pick a random\nnode u in the target graph G,",
    "start": "1259840",
    "end": "1265919"
  },
  {
    "text": "we kind of grow the motif\naround it and at the same time",
    "start": "1265920",
    "end": "1269520"
  },
  {
    "text": "as we are of growing\nthat motif we",
    "start": "1269520",
    "end": "1271260"
  },
  {
    "text": "ask what its frequency as\npredicted with the order",
    "start": "1271260",
    "end": "1275190"
  },
  {
    "text": "embedding space?",
    "start": "1275190",
    "end": "1276870"
  },
  {
    "text": "And then this graph\ntries to illustrate this,",
    "start": "1276870",
    "end": "1279240"
  },
  {
    "text": "these are the top 10\nmost frequent motifs",
    "start": "1279240",
    "end": "1282630"
  },
  {
    "text": "just rank ordered, and the\ny-axis is their frequency.",
    "start": "1282630",
    "end": "1287460"
  },
  {
    "text": "And exact is the\nground truth, right,",
    "start": "1287460",
    "end": "1289980"
  },
  {
    "text": "so this would be the frequency\nof the most frequent motif,",
    "start": "1289980",
    "end": "1292770"
  },
  {
    "text": "the second most frequent, third\nmost frequent, fourth, fifth,",
    "start": "1292770",
    "end": "1295980"
  },
  {
    "text": "all the way down to tenth.",
    "start": "1295980",
    "end": "1297860"
  },
  {
    "text": "Now, what we also\ndid in our case,",
    "start": "1297860",
    "end": "1301350"
  },
  {
    "text": "is we use this neural\nnetwork order embedding",
    "start": "1301350",
    "end": "1304890"
  },
  {
    "text": "space based method to identify\ntop 10 most frequent motifs",
    "start": "1304890",
    "end": "1310600"
  },
  {
    "text": "that it finds.",
    "start": "1310600",
    "end": "1312910"
  },
  {
    "text": "And let's compare\ntheir frequency",
    "start": "1312910",
    "end": "1316950"
  },
  {
    "text": "to what the exact\ncounting finds.",
    "start": "1316950",
    "end": "1319320"
  },
  {
    "text": "And of course, the frequencies\ndrop as the rank of the motif",
    "start": "1319320",
    "end": "1326070"
  },
  {
    "text": "gets higher, that's okay.",
    "start": "1326070",
    "end": "1327840"
  },
  {
    "text": "But you notice, for example\nthat SPMiner is basically able",
    "start": "1327840",
    "end": "1331470"
  },
  {
    "text": "to identify the top in this\ncase, top eight motifs perfect",
    "start": "1331470",
    "end": "1336330"
  },
  {
    "text": "out of the top ten.",
    "start": "1336330",
    "end": "1337559"
  },
  {
    "text": "And then the other two\nare their frequency",
    "start": "1337560",
    "end": "1340590"
  },
  {
    "text": "are just a bit lower so these\ntwo were not exactly identified",
    "start": "1340590",
    "end": "1344877"
  },
  {
    "text": "so their frequencies are lower.",
    "start": "1344878",
    "end": "1346170"
  },
  {
    "text": "Here is top eight are\nperfectly identified here,",
    "start": "1346170",
    "end": "1350760"
  },
  {
    "text": "for size 6 it's\nactually top nine that",
    "start": "1350760",
    "end": "1352650"
  },
  {
    "text": "are perfectly identified.",
    "start": "1352650",
    "end": "1354090"
  },
  {
    "text": "And these are some traditional\napproximate searching methods.",
    "start": "1354090",
    "end": "1359250"
  },
  {
    "text": "You see that they fail\nmuch, much, much worse.",
    "start": "1359250",
    "end": "1362440"
  },
  {
    "text": "And perhaps, if\nthe mfinder method",
    "start": "1362440",
    "end": "1367799"
  },
  {
    "text": "finds the top 10th,\nthe motif at rank 10,",
    "start": "1367800",
    "end": "1372390"
  },
  {
    "text": "its frequency is only 5,\nraised to the times 1,000.",
    "start": "1372390",
    "end": "1380490"
  },
  {
    "text": "Our SPMiner is able to\nfind the tenth motif that",
    "start": "1380490",
    "end": "1384150"
  },
  {
    "text": "has the frequency of around\nlet's say, 15,000, right?",
    "start": "1384150",
    "end": "1387030"
  },
  {
    "text": "So much, much more accurate.",
    "start": "1387030",
    "end": "1389260"
  },
  {
    "text": "So this is for small\nmotifs, you can also",
    "start": "1389260",
    "end": "1391770"
  },
  {
    "text": "do this for very large motifs\nbecause the search procedure",
    "start": "1391770",
    "end": "1394530"
  },
  {
    "text": "is very cheap.",
    "start": "1394530",
    "end": "1395680"
  },
  {
    "text": "So you can identify large motifs\nfor example, motifs of size 14,",
    "start": "1395680",
    "end": "1402750"
  },
  {
    "text": "17, 20, that still have\nvery high frequencies.",
    "start": "1402750",
    "end": "1407920"
  },
  {
    "text": "And you can do this in two\ndifferent real world networks",
    "start": "1407920",
    "end": "1411390"
  },
  {
    "text": "and really find large\nmotifs with high frequencies",
    "start": "1411390",
    "end": "1416250"
  },
  {
    "text": "computationally\nvery, very cheaply.",
    "start": "1416250",
    "end": "1419610"
  },
  {
    "text": "And the motifs you find\ntend to be much, much",
    "start": "1419610",
    "end": "1421920"
  },
  {
    "text": "more frequent than what\nkind of random search",
    "start": "1421920",
    "end": "1425160"
  },
  {
    "text": "traditional kind of\nheuristic-based baselines",
    "start": "1425160",
    "end": "1428370"
  },
  {
    "text": "can do.",
    "start": "1428370",
    "end": "1429970"
  },
  {
    "text": "So to summarize this\nlecture, here we",
    "start": "1429970",
    "end": "1433809"
  },
  {
    "text": "talked about\nsubgraphs and motifs",
    "start": "1433810",
    "end": "1437260"
  },
  {
    "text": "that are important concepts\nthat provide insights",
    "start": "1437260",
    "end": "1440710"
  },
  {
    "text": "into the structure of\nlarge graphs, right?",
    "start": "1440710",
    "end": "1443649"
  },
  {
    "text": "And the frequency of\nthese subgraphs or motifs",
    "start": "1443650",
    "end": "1446770"
  },
  {
    "text": "can be used as features\nof nodes or graphs.",
    "start": "1446770",
    "end": "1451150"
  },
  {
    "text": "And they can kind\nof also tell us",
    "start": "1451150",
    "end": "1452890"
  },
  {
    "text": "what is the organization of\nnetworks, what are the building",
    "start": "1452890",
    "end": "1455950"
  },
  {
    "text": "blocks of a given graph?",
    "start": "1455950",
    "end": "1459139"
  },
  {
    "text": "And I talked to you about how\nit is computationally hard",
    "start": "1459140",
    "end": "1464080"
  },
  {
    "text": "combinatorially to\nidentify frequently",
    "start": "1464080",
    "end": "1467590"
  },
  {
    "text": "occurring subgraphs of a given\nsize in a big target graph.",
    "start": "1467590",
    "end": "1471580"
  },
  {
    "text": "And we covered neural\napproaches for prediction",
    "start": "1471580",
    "end": "1474700"
  },
  {
    "text": "of subgraph isomorphism\nrelationship.",
    "start": "1474700",
    "end": "1478059"
  },
  {
    "text": "We developed this notion\nof an order embedding space",
    "start": "1478060",
    "end": "1481900"
  },
  {
    "text": "that has a desirable property\nand allows us to quickly say",
    "start": "1481900",
    "end": "1485980"
  },
  {
    "text": "whether a given graph is a\nsubgraph of a bigger graph,",
    "start": "1485980",
    "end": "1489370"
  },
  {
    "text": "or it allows us to\nquickly say, what",
    "start": "1489370",
    "end": "1492700"
  },
  {
    "text": "is the frequency of a given\nsubgraph in a bigger target",
    "start": "1492700",
    "end": "1496820"
  },
  {
    "text": "graph.",
    "start": "1496820",
    "end": "1497320"
  },
  {
    "text": "So that prediction happens\nsuper quickly and is accurate.",
    "start": "1497320",
    "end": "1502950"
  },
  {
    "text": "And then the last\nthing we did was",
    "start": "1502950",
    "end": "1505289"
  },
  {
    "text": "we talked about this neural\nembedding guided search that",
    "start": "1505290",
    "end": "1509490"
  },
  {
    "text": "starts with a small\nmotif, iteratively",
    "start": "1509490",
    "end": "1512100"
  },
  {
    "text": "grows it n node by\nnode such that it",
    "start": "1512100",
    "end": "1515490"
  },
  {
    "text": "allows us to identify\na large motif that",
    "start": "1515490",
    "end": "1519750"
  },
  {
    "text": "also has a high frequency.",
    "start": "1519750",
    "end": "1522150"
  },
  {
    "text": "And we saw that these methods\nare extremely practical,",
    "start": "1522150",
    "end": "1526650"
  },
  {
    "text": "they are extremely fast\nand lead to high accuracy",
    "start": "1526650",
    "end": "1530430"
  },
  {
    "text": "of identified motifs and\nidentified subgraphs.",
    "start": "1530430",
    "end": "1535530"
  },
  {
    "text": "So with this we have\nfinished the treatment",
    "start": "1535530",
    "end": "1539160"
  },
  {
    "text": "of subgraph identification,\nsubgraph counting,",
    "start": "1539160",
    "end": "1543360"
  },
  {
    "text": "and frequent subgraph mining.",
    "start": "1543360",
    "end": "1546630"
  },
  {
    "text": "Thank you very much.",
    "start": "1546630",
    "end": "1548720"
  },
  {
    "start": "1548720",
    "end": "1553000"
  }
]