[
  {
    "start": "0",
    "end": "365000"
  },
  {
    "text": "okay so welcome to another computer musing and uh I hope that you people",
    "start": "4600",
    "end": "11120"
  },
  {
    "text": "enjoy U seeing work in progress as much as uh as I'm having fun uh doing this",
    "start": "11120",
    "end": "18359"
  },
  {
    "text": "work uh what I'm what I want to show you today uh is done with the help of of two",
    "start": "18359",
    "end": "23640"
  },
  {
    "text": "wonderful students uh I might as well introduce them right away Robert Bosch and Chris Doty Robert uh and Chris stand",
    "start": "23640",
    "end": "30759"
  },
  {
    "text": "up for good to sake anyway Robert's going to come have to come here and fix it uh uh these are um um when I say work",
    "start": "30759",
    "end": "39200"
  },
  {
    "text": "in progress I mean that uh um that uh these guys haven't had any",
    "start": "39200",
    "end": "45000"
  },
  {
    "text": "sleep for the last uh 3 days and uh and and we built the system that you that",
    "start": "45000",
    "end": "50879"
  },
  {
    "text": "you're seeing demoed now about a half an hour ago and we've been uh you know making great improvements to it all uh",
    "start": "50879",
    "end": "58039"
  },
  {
    "text": "the last the last several days and it's it's it's fantastic to work with these guys I I've never known two people",
    "start": "58039",
    "end": "64040"
  },
  {
    "text": "before who could sit in the same office and uh and and and and both uh work simultaneously on the same program and",
    "start": "64040",
    "end": "70560"
  },
  {
    "text": "and and and and perfectly reinforce each other and get stuff done fast we we make a we get an idea and then it's it's",
    "start": "70560",
    "end": "76600"
  },
  {
    "text": "implemented a few minutes later um so uh three weeks ago I talked to you about MX",
    "start": "76600",
    "end": "82119"
  },
  {
    "text": "the uh uh this uh this this nice clean risk machine that I've been playing with",
    "start": "82119",
    "end": "87840"
  },
  {
    "text": "and uh and intending to use in in in the next edition of my books and um uh today",
    "start": "87840",
    "end": "93600"
  },
  {
    "text": "I want to show you uh uh the the the simulators that were building to to test",
    "start": "93600",
    "end": "99640"
  },
  {
    "text": "out the ideas and check them um uh last Thursday and Friday uh I'm sorry last",
    "start": "99640",
    "end": "106640"
  },
  {
    "text": "Friday and Saturday I uh I designed and uh and sketched out the program for the assembler for M mix and on Sat on Sunday",
    "start": "106640",
    "end": "114119"
  },
  {
    "text": "I I I did the um uh the programs that would that would uh simulate the",
    "start": "114119",
    "end": "119920"
  },
  {
    "text": "multiplication and division and then uh Monday Tuesday and today uh we've been working on this on this part of the",
    "start": "119920",
    "end": "125719"
  },
  {
    "text": "simulator I I started working on this on the pipeline simul simulator actually though a long time ago um in November",
    "start": "125719",
    "end": "134360"
  },
  {
    "text": "and um and uh it's it's uh I would have",
    "start": "134360",
    "end": "139519"
  },
  {
    "text": "to say it's one of the most interesting programs I've ever had the pleasure of working on um this uh the and I want to",
    "start": "139519",
    "end": "147080"
  },
  {
    "text": "explain about pipelines today uh but this uh is is a program that uh uh that has",
    "start": "147080",
    "end": "154319"
  },
  {
    "text": "uh um very interesting uh complexities the way the way computers interact parts",
    "start": "154319",
    "end": "160560"
  },
  {
    "text": "of computer interact with each other and I want to show you some of the reasons why I think why I think they're they're",
    "start": "160560",
    "end": "166440"
  },
  {
    "text": "neat um the program itself uh um is isn't finished but uh I can show you the",
    "start": "166440",
    "end": "173760"
  },
  {
    "text": "the the main part of it can we maybe get this on the screen um do your camera",
    "start": "173760",
    "end": "178840"
  },
  {
    "text": "pick this up or do have have to move it over here you can zoom so so this this U",
    "start": "178840",
    "end": "185120"
  },
  {
    "text": "is the table of contents for for the main part of the program um and uh this",
    "start": "185120",
    "end": "191640"
  },
  {
    "text": "is you know you know I like to write in cweb um can you see see that a little",
    "start": "191640",
    "end": "197000"
  },
  {
    "text": "bit so you know in introduction low level routines qu routines list Dynamic speculation dispatching execution",
    "start": "197000",
    "end": "202040"
  },
  {
    "text": "commission theissue Branch prediction cash memory simulated memory cash transfers virtual address translation",
    "start": "202040",
    "end": "207680"
  },
  {
    "text": "the right buer loading and storing F St interrupts administrative operations you",
    "start": "207680",
    "end": "212879"
  },
  {
    "text": "could probably bring down the house lights um more register to register Ops um stuff for later that's what I haven't",
    "start": "212879",
    "end": "219480"
  },
  {
    "text": "written yet and so on um now this this uh uh this program has has enough",
    "start": "219480",
    "end": "225840"
  },
  {
    "text": "complexity to it that that I'm I I personally think that there was no way that I could have ever written this without a tool like cweb uh uh this this",
    "start": "225840",
    "end": "233640"
  },
  {
    "text": "idea of literate programming uh um uh has now in some ways a program this this",
    "start": "233640",
    "end": "241159"
  },
  {
    "text": "complex I I doubt if I if um if if I could ever have gotten anything like it",
    "start": "241159",
    "end": "247159"
  },
  {
    "text": "with this complexity uh uh working and and in an understandable fashion if I hadn't used this this way now by I say a",
    "start": "247159",
    "end": "254720"
  },
  {
    "text": "little bit about literate programming because you know in literate programming you you uh uh you try to write for human",
    "start": "254720",
    "end": "260280"
  },
  {
    "text": "beings to to to read the program and not just for the computer to uh to understand the program and um uh and I",
    "start": "260280",
    "end": "269080"
  },
  {
    "text": "I'm hoping that some of you in the audience will enjoy reading this someday because I I plan to put this into a book",
    "start": "269080",
    "end": "274199"
  },
  {
    "text": "this this uh there will be a book called MX whereare and uh let let me read you first uh um something about pipelines",
    "start": "274199",
    "end": "281280"
  },
  {
    "text": "from from the introduction it says one way to visualize the procedure of pipelines is to imagine that somebody",
    "start": "281280",
    "end": "286880"
  },
  {
    "text": "has organized a high-tech car repair shop according to similar principles similar to a computer uh there are eight",
    "start": "286880",
    "end": "293720"
  },
  {
    "text": "independent functional units in this car repair shop we can think of them as eight groups of auto mechanics each",
    "start": "293720",
    "end": "299680"
  },
  {
    "text": "izing in a particular task each group has its own workspace with room to deal with one car at a time group F the fetch",
    "start": "299680",
    "end": "307600"
  },
  {
    "text": "group is in charge of rounding up customers and getting them to enter the assembly line Garage in orderly Fashion",
    "start": "307600",
    "end": "313639"
  },
  {
    "text": "Group D the decod and dispatch group does the initial vehicle inspection",
    "start": "313639",
    "end": "319000"
  },
  {
    "text": "writes up an order that explains what kind of servicing is required the vehicles go next to one of four",
    "start": "319000",
    "end": "324360"
  },
  {
    "text": "execution groups group X handles routine maintenance groups XF XM and XD are",
    "start": "324360",
    "end": "330039"
  },
  {
    "text": "specialists in more complex tasks that tend to take longer the XF group The XF people are good at floating the points",
    "start": "330039",
    "end": "337400"
  },
  {
    "text": "while the XM and XD groups are experts in multi-link suspensions and differentials when the relevant X group",
    "start": "337400",
    "end": "344600"
  },
  {
    "text": "has finished its work cars drive to mstation where they send or receive messages and possibly pay money to",
    "start": "344600",
    "end": "350280"
  },
  {
    "text": "members of the memory group finally all necessary parts are installed by members of group W the right group and the car",
    "start": "350280",
    "end": "355639"
  },
  {
    "text": "leaves the shop everything is tightly organized so in most cases the car move in synchronized fashion from Station to",
    "start": "355639",
    "end": "361880"
  },
  {
    "text": "Station at regular 100 nanocentury intervals now now now this is a this is",
    "start": "361880",
    "end": "367680"
  },
  {
    "start": "365000",
    "end": "590000"
  },
  {
    "text": "very much the way a computer pipeline works and let me show you a little bit of this demo uh first um uh by starting",
    "start": "367680",
    "end": "376319"
  },
  {
    "text": "in the middle of it uh it's a program that I'll explain to you a a little more as time goes on but uh let me first uh",
    "start": "376319",
    "end": "383360"
  },
  {
    "text": "just go to a sort of a steady state uh part of it whoops I got to hit the control thing here uh so so let let me",
    "start": "383360",
    "end": "390120"
  },
  {
    "text": "just go up here it's it's a program that uh that calculates half of a of a",
    "start": "390120",
    "end": "395880"
  },
  {
    "text": "decimal integer if it starts with one and then it gets 1/2 1/4 1/8 116th it",
    "start": "395880",
    "end": "401800"
  },
  {
    "text": "works in decimal and uh as it's writing the answer here you see it in the right buffer a little on the left there it's",
    "start": "401800",
    "end": "408759"
  },
  {
    "text": "it's written in in asky code so 30 is a zero 30 30 30 37 38 31 32 35 would be 0",
    "start": "408759",
    "end": "417319"
  },
  {
    "text": "07 8125 which some some negative power too I think or at least uh maybe maybe",
    "start": "417319",
    "end": "425720"
  },
  {
    "text": "somewhere in the middle of a of a step uh you can sort of see these uh the",
    "start": "425720",
    "end": "430960"
  },
  {
    "text": "there's some pulses in here um that you can that you can see uh uh the vertical",
    "start": "430960",
    "end": "436400"
  },
  {
    "text": "lines mean that we've actually written a character to the right buffer and then when there's a little gap between that",
    "start": "436400",
    "end": "442680"
  },
  {
    "text": "means we've actually finished uh uh uh Power two you know we here we",
    "start": "442680",
    "end": "450120"
  },
  {
    "text": "computed half of the previous one and then another half and another half and another half and so um uh and so now",
    "start": "450120",
    "end": "456080"
  },
  {
    "text": "we're in the middle of calcul of of taking half of the thing we got on that cycle um so now there's um you can see",
    "start": "456080",
    "end": "463879"
  },
  {
    "text": "that there there are two instructions uh uh in the pipeline right now one is is that light blue one at the",
    "start": "463879",
    "end": "470879"
  },
  {
    "text": "top in the in in alu1 it's up here and then there's another instruction the",
    "start": "470879",
    "end": "476319"
  },
  {
    "text": "green one here in the load store unit lsu1 um uh now uh there's here over here is",
    "start": "476319",
    "end": "485000"
  },
  {
    "text": "is the is the F group The fetch buffer this is where instructions first come before they're executed it happens to be empty at the moment I'm not sure why but",
    "start": "485000",
    "end": "492479"
  },
  {
    "text": "it's it might be a bug but I don't know I think it's probably okay um and uh yeah it's because um this instruction in",
    "start": "492479",
    "end": "499960"
  },
  {
    "text": "the ALU here says probable Branch if if a nonzero um and so since it was it was a",
    "start": "499960",
    "end": "507520"
  },
  {
    "text": "branch uh a probable branch and we cleared the fetch buffers assuming that the branch would be taken and we and",
    "start": "507520",
    "end": "513800"
  },
  {
    "text": "we're we're trying to get the instruct uh you know uh uh we have to get instructions from another place so so",
    "start": "513800",
    "end": "519919"
  },
  {
    "text": "we're branching that's why the fetch buffer is is empty at this point we're we're loading a bite this is an ldb",
    "start": "519919",
    "end": "525839"
  },
  {
    "text": "inspection so we're loading a bite into some register and um and so this these",
    "start": "525839",
    "end": "530880"
  },
  {
    "text": "are the execution units in this particular in this particular uh version",
    "start": "530880",
    "end": "535959"
  },
  {
    "text": "we we have two ALU two arithmetic logical units and three load store units",
    "start": "535959",
    "end": "541440"
  },
  {
    "text": "uh uh this particular program isn't using them uh uh they would I believe it",
    "start": "541440",
    "end": "548519"
  },
  {
    "text": "would yeah it would run exactly as fast if we had only one aou and one LSU but but the simulator that U one of the",
    "start": "548519",
    "end": "555680"
  },
  {
    "text": "things that makes the simulator interesting is that it is uh infinitely configurable I can I can change I can",
    "start": "555680",
    "end": "562160"
  },
  {
    "text": "say I have any number of of units of any of any kind uh I can say any any subset",
    "start": "562160",
    "end": "567640"
  },
  {
    "text": "of mx's operation Cod and say that say I have a functional unit that can implement this and I can have as many of",
    "start": "567640",
    "end": "573440"
  },
  {
    "text": "these as I want uh for example and there's many other ways to uh uh to",
    "start": "573440",
    "end": "578480"
  },
  {
    "text": "describe the the simulator each of these each of these ways would be a conceivable way perhaps to build a uh to",
    "start": "578480",
    "end": "586240"
  },
  {
    "text": "build a real MX machine uh now um uh so",
    "start": "586240",
    "end": "591440"
  },
  {
    "start": "590000",
    "end": "998000"
  },
  {
    "text": "instructions uh uh uh are first fetched and then they're dispatched into one of",
    "start": "591440",
    "end": "597320"
  },
  {
    "text": "the execution units um and um then uh uh after after they're done",
    "start": "597320",
    "end": "605000"
  },
  {
    "text": "executing then they they go here and this is called the reorder buffer uh and",
    "start": "605000",
    "end": "610519"
  },
  {
    "text": "uh the the technique that we're using in in in this pipeline simulator is uh is",
    "start": "610519",
    "end": "617120"
  },
  {
    "text": "uh it's called um Dynamic scheduling with speculative execution I'll talk",
    "start": "617120",
    "end": "623240"
  },
  {
    "text": "more about what that means but but uh um essentially uh uh it says that the the",
    "start": "623240",
    "end": "629959"
  },
  {
    "text": "the uh the computer decides uh as it as things come out of the fetch buffer",
    "start": "629959",
    "end": "636639"
  },
  {
    "text": "which execution unit should take them and then um and it'll also start executing instructions ahead of time",
    "start": "636639",
    "end": "643240"
  },
  {
    "text": "before you know they're really needed um and then as some instructions take longer than others for example a",
    "start": "643240",
    "end": "650440"
  },
  {
    "text": "division takes 60 Cycles it's a longest instruction in M mix um multiplication",
    "start": "650440",
    "end": "655680"
  },
  {
    "text": "takes 10 cycles and add takes one cycle uh and so",
    "start": "655680",
    "end": "661279"
  },
  {
    "text": "um sometimes you have you instructions have to wait because they depend on each other and um here in the reorder buffer",
    "start": "661279",
    "end": "669279"
  },
  {
    "text": "we have uh uh one instruction here it says uh inkle this is uh increase the",
    "start": "669279",
    "end": "675760"
  },
  {
    "text": "lower wide of of of a register uh and it's it's ready to it's finished um but",
    "start": "675760",
    "end": "682480"
  },
  {
    "text": "the other two are grade out which means that they're that they're waiting one of them's uh uh waiting for this one and",
    "start": "682480",
    "end": "688240"
  },
  {
    "text": "one's waiting for this and these instruction the instructions will leave the reorder buffer in the same order in",
    "start": "688240",
    "end": "693639"
  },
  {
    "text": "which in which they ex they entered uh and and so I I'll I'll um let me just",
    "start": "693639",
    "end": "700200"
  },
  {
    "text": "run uh one one step um to show you what what happened on the next cycle okay uh",
    "start": "700200",
    "end": "707079"
  },
  {
    "text": "did you see do you see that you want to see it backward with um go back again so so um uh this is",
    "start": "707079",
    "end": "714120"
  },
  {
    "text": "where we were now now now that was cycle",
    "start": "714120",
    "end": "719600"
  },
  {
    "text": "679 oh no that was okay let's go forward too now so so here's a probable Branch",
    "start": "719680",
    "end": "725360"
  },
  {
    "text": "going going uh in there and then um the uh uh two things are going into the",
    "start": "725360",
    "end": "732800"
  },
  {
    "text": "order buffer maybe I should stop it um",
    "start": "732800",
    "end": "739199"
  },
  {
    "text": "uh and and um so you see these the instructions play a little dance as as",
    "start": "739399",
    "end": "745800"
  },
  {
    "text": "they as they're going through the machine now we've got two things in the fetch buffer a load this is a load bite",
    "start": "745800",
    "end": "751199"
  },
  {
    "text": "and ink L uh and then the load store unit uh here has U uh a store bite",
    "start": "751199",
    "end": "758000"
  },
  {
    "text": "instruction which going to going to store a bite in the right buffer uh and the first and this is a two- stage",
    "start": "758000",
    "end": "764480"
  },
  {
    "text": "process it first uh on one cycle it has to figure out which bite uh uh you know",
    "start": "764480",
    "end": "769839"
  },
  {
    "text": "the virtual address that it's going to store into and on the next cycle it'll actually do the storing um the these",
    "start": "769839",
    "end": "776079"
  },
  {
    "text": "things will complete and go into the output on the next cycle this is waiting for the store to to finish uh the from",
    "start": "776079",
    "end": "782360"
  },
  {
    "text": "the fetch buffer we should be able to get um uh",
    "start": "782360",
    "end": "787720"
  },
  {
    "text": "uh uh the inkl instruction into an ALU at this point and and I think the store",
    "start": "787720",
    "end": "793120"
  },
  {
    "text": "bite is going to go into the second stage no it didn't go yeah yeah the",
    "start": "793120",
    "end": "800240"
  },
  {
    "text": "store bite went into the second stage but the load bite went into to the second load store unit in this case now",
    "start": "800240",
    "end": "805600"
  },
  {
    "text": "if I had only one load store unit it would have gone into the first one but it's but since there are two it's safer",
    "start": "805600",
    "end": "810880"
  },
  {
    "text": "to go into the second because you never know the first one might stall in the second stage uh because because it it uh",
    "start": "810880",
    "end": "817600"
  },
  {
    "text": "uh you know it can't find the it can't find the data in in the cach cash might be busy or something so so that's um uh",
    "start": "817600",
    "end": "826440"
  },
  {
    "text": "now now uh I it was Serendipity that I happened to run into into mendal uh on the steps",
    "start": "826440",
    "end": "835040"
  },
  {
    "text": "couple months ago and he said he had two students who were who were doing research on how to visualize pipelines",
    "start": "835040",
    "end": "840279"
  },
  {
    "text": "and that's how come I met Robert and Chris and they and they have they had been uh making such uh visualizations",
    "start": "840279",
    "end": "848320"
  },
  {
    "text": "for for real computers uh like like the like the myips 10K machine and so on and",
    "start": "848320",
    "end": "854199"
  },
  {
    "text": "uh and uh it's amazing when you have a toour like this for visualization how how much easier it is to understand",
    "start": "854199",
    "end": "860680"
  },
  {
    "text": "what's going on to find bottlenecks and to see what things work and what things don't work so U uh this is the but but",
    "start": "860680",
    "end": "868120"
  },
  {
    "text": "now uh ideally we would like to uh to issue one instruction with this",
    "start": "868120",
    "end": "873839"
  },
  {
    "text": "particular machine it it's it it's set up so that it issues one instruction on every cycle at most and it and it uh and",
    "start": "873839",
    "end": "881320"
  },
  {
    "text": "it uh U and out of the reorder buffer uh commits one in one instruction per cycle",
    "start": "881320",
    "end": "887399"
  },
  {
    "text": "at most uh uh uh we can also configure the simulator so that it's super scaler",
    "start": "887399",
    "end": "893759"
  },
  {
    "text": "which means that it that it will allow several instructions to be to be committed at a time",
    "start": "893759",
    "end": "899759"
  },
  {
    "text": "go into execution and several instructions to be uh to be uh I mean several to be issued at a time several",
    "start": "899759",
    "end": "906079"
  },
  {
    "text": "to be committed uh uh I I talk a little bit about um terminology here um um I",
    "start": "906079",
    "end": "912480"
  },
  {
    "text": "find out that when the students were talking about what happens to instructions when they leave the reorder buffer they said they",
    "start": "912480",
    "end": "918480"
  },
  {
    "text": "graduated and uh although John in John's book he he calls it committed well yeah",
    "start": "918480",
    "end": "923720"
  },
  {
    "text": "I I guess I can see why graduation is important to a student um but I but the",
    "start": "923720",
    "end": "929160"
  },
  {
    "text": "other fun the other uh thing I learned was that the students um their their natural inclination was to put things",
    "start": "929160",
    "end": "935880"
  },
  {
    "text": "the up in the other order they had they had things at the bottom of the of the reorder buffer and sort of and sort of",
    "start": "935880",
    "end": "941360"
  },
  {
    "text": "falling out at the bottom and similarly a fetch buffer they they were coming in from the top and dropping down and sort of sinking down and I don't know that's",
    "start": "941360",
    "end": "948480"
  },
  {
    "text": "not my model of students it seems to me that that students are rising and you know until they finally uh when they",
    "start": "948480",
    "end": "954519"
  },
  {
    "text": "when they graduate they they they aren't settling out they're actually you know going to the next level of of challeng",
    "start": "954519",
    "end": "962079"
  },
  {
    "text": "well but anyway um maybe this is just a difference of generation gap or",
    "start": "962079",
    "end": "967120"
  },
  {
    "text": "difference between the way people think on the third floor and fourth floor but I insisted that they put these instru faculty think of graduation at the",
    "start": "967120",
    "end": "973880"
  },
  {
    "text": "beginning yes this is going on yeah okay anyway uh but these instructions now appear as",
    "start": "973880",
    "end": "980040"
  },
  {
    "text": "they would in a program um uh so so as as you write this in you know as you",
    "start": "980040",
    "end": "985880"
  },
  {
    "text": "write this program you have an increase s load B probable Branch uh and and they",
    "start": "985880",
    "end": "990959"
  },
  {
    "text": "appear in that same order here and similarly in the reorder buper they appear in the way they appear on in your coding form so so that it had to be that",
    "start": "990959",
    "end": "998000"
  },
  {
    "start": "998000",
    "end": "1073000"
  },
  {
    "text": "way for me now uh uh this little strip chart on the bottom uh shows the U shows",
    "start": "998000",
    "end": "1004680"
  },
  {
    "text": "every uh every cycle of this of this of this demo um uh in a in a condensed form and so it",
    "start": "1004680",
    "end": "1012480"
  },
  {
    "text": "it'll show you the reorder buffer um uh and but the things are sorted by color",
    "start": "1012480",
    "end": "1018399"
  },
  {
    "text": "so things that belong to the ALU are this light are this light blue color and and a darker green color are are the",
    "start": "1018399",
    "end": "1023639"
  },
  {
    "text": "things from the store from the storebook uh and there's interesting things going on here you see these waterfalls and",
    "start": "1023639",
    "end": "1029360"
  },
  {
    "text": "mountains at the left um and I'll talk I'll talk about that later but the uh um",
    "start": "1029360",
    "end": "1035079"
  },
  {
    "text": "but U we have uh exactly 2,000 clock Cycles uh shown here um you know we",
    "start": "1035079",
    "end": "1041798"
  },
  {
    "text": "figured it was probably dangerous to go beyond 2,000 everybody knows that's a that's a hard number uh to pass so so we",
    "start": "1041799",
    "end": "1048199"
  },
  {
    "text": "stopped there but uh but uh uh uh this",
    "start": "1048199",
    "end": "1053400"
  },
  {
    "text": "this program I'll show you uh actually does go on and on it keeps on in fact it never stops and I but I could run",
    "start": "1053400",
    "end": "1060600"
  },
  {
    "text": "it a lot of time now uh okay any questions um about",
    "start": "1060600",
    "end": "1067519"
  },
  {
    "text": "this no questions well maybe I didn't explain it well enough okay um so now uh",
    "start": "1067799",
    "end": "1074520"
  },
  {
    "start": "1073000",
    "end": "1488000"
  },
  {
    "text": "let me show you what the so so um uh",
    "start": "1074520",
    "end": "1079720"
  },
  {
    "text": "let me show you uh the program that is that is executing and some and something about it so let me see that's F2 I think",
    "start": "1079720",
    "end": "1087799"
  },
  {
    "text": "what this takes away and now I get to emac here okay so now uh hope I'm in the",
    "start": "1087799",
    "end": "1094200"
  },
  {
    "text": "right um let's see I'll show you that that",
    "start": "1094200",
    "end": "1099960"
  },
  {
    "text": "program that we're taking hals MNS file so this is a program that",
    "start": "1099960",
    "end": "1106360"
  },
  {
    "text": "that uh I I won't but this is a this is a draft of the Assembly Language for mix",
    "start": "1106360",
    "end": "1113120"
  },
  {
    "text": "and it and the program that we're actually running here uh let's see how do I get get this to scroll up on this",
    "start": "1113120",
    "end": "1120159"
  },
  {
    "text": "machine I don't know um so it's a very short program that um uh that has this",
    "start": "1120159",
    "end": "1126520"
  },
  {
    "text": "has this little Loop here it jumps into the middle of the loop and then the loop is so nine instructions oh eight seven",
    "start": "1126520",
    "end": "1133280"
  },
  {
    "text": "instructions long and and uh and it uh and ending with this probable brand and",
    "start": "1133280",
    "end": "1139080"
  },
  {
    "text": "then goes back to the loop again and then uh uh after you get to the end uh",
    "start": "1139080",
    "end": "1144520"
  },
  {
    "text": "uh this is all working in decimal arithmetic as a string in um and you can see it's sort of a SE like syntax that",
    "start": "1144520",
    "end": "1151120"
  },
  {
    "text": "the right in the comments but um but it's you know it's a seven instruction Loop and uh it's designed so that each",
    "start": "1151120",
    "end": "1157760"
  },
  {
    "text": "instruction except the except the branch to the beginning of the loop uh should should go in one",
    "start": "1157760",
    "end": "1163480"
  },
  {
    "text": "cycle um and then at the end you finish and you go back and start over again and then take half of the number again",
    "start": "1163480",
    "end": "1171320"
  },
  {
    "text": "um uh now the uh but we also had a um okay so so then I I hand assembl it",
    "start": "1171320",
    "end": "1178159"
  },
  {
    "text": "because I I said my my assem I'm just writing it uh so I so I hand assembled it into uh uh into binary into",
    "start": "1178159",
    "end": "1185200"
  },
  {
    "text": "hexadecimal and so the So the instructions are here uh uh in these in",
    "start": "1185200",
    "end": "1190360"
  },
  {
    "text": "these places with the comments at the right and and uh remember MX instructions are very simple because uh",
    "start": "1190360",
    "end": "1196159"
  },
  {
    "text": "uh they have four bytes the first bite is the operation code like C1 is the operation code and f8 is would be P fa",
    "start": "1196159",
    "end": "1203360"
  },
  {
    "text": "would be P base and so so so C1 would be the the or and immediate instruction so",
    "start": "1203360",
    "end": "1209039"
  },
  {
    "text": "on so so so it's it was it wasn't hard to to hand assemble this uh this stuff",
    "start": "1209039",
    "end": "1214880"
  },
  {
    "text": "um and um and then we we put in the data and there's a table here that that that",
    "start": "1214880",
    "end": "1221039"
  },
  {
    "text": "that has a table of what's what's half of each of each bite uh and so uh then",
    "start": "1221039",
    "end": "1226559"
  },
  {
    "text": "then in order to get the program started we have to load the context and so uh and so so the very beginning of the",
    "start": "1226559",
    "end": "1232120"
  },
  {
    "text": "program I'll show you uh uh is the way the loading routine gets gets things off",
    "start": "1232120",
    "end": "1237440"
  },
  {
    "text": "the ground uh by by doing mx's unsave instruction which means take a a context",
    "start": "1237440",
    "end": "1243720"
  },
  {
    "text": "of you know all the registers uh and and go into U and and and put them all out",
    "start": "1243720",
    "end": "1250120"
  },
  {
    "text": "of memory and into the real registers and then uh uh and then we're ready to",
    "start": "1250120",
    "end": "1255360"
  },
  {
    "text": "then we're ready to begin the program uh then there's a config configuration file and um",
    "start": "1255360",
    "end": "1262640"
  },
  {
    "text": "uh uh let me show you that um so that would be have. now let's",
    "start": "1262640",
    "end": "1270919"
  },
  {
    "text": "let's I I I think I used it uh okay I I use primes M and",
    "start": "1270919",
    "end": "1278720"
  },
  {
    "text": "config um I use the same configuration for this program as they did for for",
    "start": "1278720",
    "end": "1283880"
  },
  {
    "text": "Prime St program I'll show you later uh so but this is typical of the kind of things that you can configure in the",
    "start": "1283880",
    "end": "1289159"
  },
  {
    "text": "simulator so here we say meem address time me read time me WR time this how many cycles does it take to send an",
    "start": "1289159",
    "end": "1294440"
  },
  {
    "text": "address to the in uh a physical address in the memory buff uh in memory bus um",
    "start": "1294440",
    "end": "1300919"
  },
  {
    "text": "and how many cycles does it take uh if if you want to read how many cycles before you get uh before you get the uh",
    "start": "1300919",
    "end": "1307159"
  },
  {
    "text": "the data on on the bus uh how many uh",
    "start": "1307159",
    "end": "1312279"
  },
  {
    "text": "how wide is the memory bus here in this particular case we're taking 16 bytes at a time um here I commented these lines",
    "start": "1312279",
    "end": "1319679"
  },
  {
    "text": "out because I found a bad bug in my Branch prediction mechanism on Monday I have to and I didn't have time to fix it",
    "start": "1319679",
    "end": "1325919"
  },
  {
    "text": "before today but I have uh but one of the things that you want to do on a machine like uh uh is to is to do the",
    "start": "1325919",
    "end": "1333720"
  },
  {
    "text": "best possible job of predicting when when a branch is going to be taken and uh and I have a general mechanism that I",
    "start": "1333720",
    "end": "1339960"
  },
  {
    "text": "know I can fix but it doesn't work at the moment so I commented these out but it it it'll it allows you to uh to base",
    "start": "1339960",
    "end": "1347120"
  },
  {
    "text": "the decision on the next brand brch um based on um on uh combination of of",
    "start": "1347120",
    "end": "1354960"
  },
  {
    "text": "where you are where's the instruction that's branching and what's been the past history of of branches before this",
    "start": "1354960",
    "end": "1361520"
  },
  {
    "text": "the current one um and uh then you can also say how how um there's also a",
    "start": "1361520",
    "end": "1369480"
  },
  {
    "text": "number of bits that you uh in your in your prediction table um here I've used",
    "start": "1369480",
    "end": "1374720"
  },
  {
    "text": "the default too okay so then U me chunks is is not important here now now the um",
    "start": "1374720",
    "end": "1381000"
  },
  {
    "text": "uh it's important to gain speed because the memory is is so slow it's important to gain speed by putting the recently",
    "start": "1381000",
    "end": "1389120"
  },
  {
    "text": "used parts of memory into caches and there are this par there are in this particular case three caches uh you all",
    "start": "1389120",
    "end": "1396400"
  },
  {
    "text": "the caches are optional except the caches for translation from virtual addresses um uh but uh here I'm using",
    "start": "1396400",
    "end": "1404760"
  },
  {
    "text": "I'm using optional cache so I have an s a secondary cache which has 64 bytes to",
    "start": "1404760",
    "end": "1410279"
  },
  {
    "text": "a in each cache block um and 512 sets",
    "start": "1410279",
    "end": "1415799"
  },
  {
    "text": "with four in each set this is four-way associative uh um cache and and it takes",
    "start": "1415799",
    "end": "1421360"
  },
  {
    "text": "two cycles uh to um uh to find out whether something's in the cach uh or",
    "start": "1421360",
    "end": "1427400"
  },
  {
    "text": "not and to get it if it if it is uh the dcash has a smaller block size and it",
    "start": "1427400",
    "end": "1433240"
  },
  {
    "text": "has small sets and this is for data and the iach is for instruction",
    "start": "1433240",
    "end": "1439080"
  },
  {
    "text": "and um and also has a VI has has a so-called victim buffer uh which means",
    "start": "1439080",
    "end": "1445279"
  },
  {
    "text": "that if if you throw something out of the cash you uh in this case I'm keeping",
    "start": "1445279",
    "end": "1451039"
  },
  {
    "text": "two of them uh just in case that they're going to be needed um they're going to be needed this is not these are these",
    "start": "1451039",
    "end": "1458360"
  },
  {
    "text": "have no associativity given so that means that they're directly mapped caches um with only one uh uh one thing",
    "start": "1458360",
    "end": "1465320"
  },
  {
    "text": "in every set um all of these things are for all the caches can be can be um",
    "start": "1465320",
    "end": "1472039"
  },
  {
    "text": "specified also including the um the socalled um uh uh victim replacement",
    "start": "1472039",
    "end": "1480399"
  },
  {
    "text": "policy um there's a uh I can tell you what what pseudo lru means um for those",
    "start": "1480399",
    "end": "1488279"
  },
  {
    "start": "1488000",
    "end": "1638000"
  },
  {
    "text": "of you who are who know this sort of thing can can can you get my pad on the screen um uh the the pseudo lru for for",
    "start": "1488279",
    "end": "1497360"
  },
  {
    "text": "four-way associative cash is something that was used in one in in some Intel machine um uh and uh it generalizes to U",
    "start": "1497360",
    "end": "1507200"
  },
  {
    "text": "uh to any power of two so let me show you what it would be like for an 8-way associative cach although I don't know",
    "start": "1507200",
    "end": "1513000"
  },
  {
    "text": "if anybody's ever built one of these um uh it's it's it's not um it's a little",
    "start": "1513000",
    "end": "1518559"
  },
  {
    "text": "bit expensive in Hardware to uh to keep track of exactly which was the least most recently used block and the second",
    "start": "1518559",
    "end": "1525240"
  },
  {
    "text": "most recently used block and so on uh so instead they uh but let's imagine there",
    "start": "1525240",
    "end": "1530279"
  },
  {
    "text": "there are eight blocks um uh but what you sort of want is that if you've used",
    "start": "1530279",
    "end": "1535919"
  },
  {
    "text": "the block uh you don't want to U um you don't want to take it out of the cach uh",
    "start": "1535919",
    "end": "1542360"
  },
  {
    "text": "uh you want to say this is this a good block to keep um so so this the pseudo",
    "start": "1542360",
    "end": "1547960"
  },
  {
    "text": "lru scheme um sorry a true lru scheme would say every time you use a block you",
    "start": "1547960",
    "end": "1554799"
  },
  {
    "text": "you you put it at the end of the line and and you you you take it of where it is and put it at the end of the line and you keep on doing this and you and you",
    "start": "1554799",
    "end": "1561200"
  },
  {
    "text": "have to remove a block you take from the from the front of the line uh the pseudo lru is is is simpler it needs only it",
    "start": "1561200",
    "end": "1568039"
  },
  {
    "text": "arranges these eight blocks into a tree and has has rooting information where you have a pattern of of bits uh zeros",
    "start": "1568039",
    "end": "1575120"
  },
  {
    "text": "or or ones on each uh on each note of the tree let let me just give it a random uh example here uh telling you",
    "start": "1575120",
    "end": "1580799"
  },
  {
    "text": "whether you want to go to the left or to the right when um when you're and uh uh",
    "start": "1580799",
    "end": "1585840"
  },
  {
    "text": "in order to find the one that you're going to remove so this case would say zero says go to the left one says go to the right go to the right so the next",
    "start": "1585840",
    "end": "1591799"
  },
  {
    "text": "one to be removed would be this one uh following this this routing information zero is left one is right um but now uh",
    "start": "1591799",
    "end": "1599080"
  },
  {
    "text": "when when you use a block you set all the bits to to go the other way so so suppose I now use this block so that",
    "start": "1599080",
    "end": "1606279"
  },
  {
    "text": "says oh okay so then I'm going to change this bit to a one so so so that'll always go I'm going to change this bit",
    "start": "1606279",
    "end": "1612720"
  },
  {
    "text": "to a zero and I'm going to change this bit to a one so so that this flock will",
    "start": "1612720",
    "end": "1617760"
  },
  {
    "text": "will be it'll be hard to to uh uh to to evict this block next until all three of",
    "start": "1617760",
    "end": "1624200"
  },
  {
    "text": "these bits have changed so this is the idea of of pseudo lru it's it's a you know and with the simulator we can find",
    "start": "1624200",
    "end": "1630440"
  },
  {
    "text": "out whether you know whether that behaves any better than random choice or any better than uh uh than a true lru",
    "start": "1630440",
    "end": "1637520"
  },
  {
    "text": "and so on um and U uh so so there's lots of",
    "start": "1637520",
    "end": "1642559"
  },
  {
    "start": "1638000",
    "end": "1898000"
  },
  {
    "text": "different parameters that that are setable here I defined the uh the units",
    "start": "1642559",
    "end": "1647600"
  },
  {
    "text": "and and it's and each unit is defined by 256 bits saying which op codes it will",
    "start": "1647600",
    "end": "1653080"
  },
  {
    "text": "support and so in this particular case this one doesn't doesn't you know doesn't do any of the floating points",
    "start": "1653080",
    "end": "1659120"
  },
  {
    "text": "and then it starts doing add and and subtract and so on and then it doesn't do the load stores which right here and",
    "start": "1659120",
    "end": "1665120"
  },
  {
    "text": "here's a load store unit which does the load stores and another one another one here's a multiplier unit which picks up",
    "start": "1665120",
    "end": "1670559"
  },
  {
    "text": "the multiply instructions both floating point in this and fix point in this case and here's a divider unit floating Point",
    "start": "1670559",
    "end": "1675840"
  },
  {
    "text": "Unit picks up the other floating point this is just but but any any combination of of of",
    "start": "1675840",
    "end": "1681840"
  },
  {
    "text": "things could be used you could have one unit that's just good at shifting and taking end and or whatever um uh here uh",
    "start": "1681840",
    "end": "1689679"
  },
  {
    "text": "you can say how many uh instructions can be dispatched on every cycle committed on every cycle fetched on every cycle",
    "start": "1689679",
    "end": "1696000"
  },
  {
    "text": "you can say how big the fetch buffer is and so on how um inside of the re the",
    "start": "1696000",
    "end": "1701320"
  },
  {
    "text": "reorder buffer um there's a there's a certain number of of of uh temporary",
    "start": "1701320",
    "end": "1707039"
  },
  {
    "text": "values that are called the rename registers and slots for storing and and so so so that um depending on how much",
    "start": "1707039",
    "end": "1715159"
  },
  {
    "text": "capacity you want you can set these things describe for each cache whether or not it's uh it's right around or",
    "start": "1715159",
    "end": "1720760"
  },
  {
    "text": "right allocated when you have a Mist do you want to uh uh do you want to uh evict something else from the cash or do",
    "start": "1720760",
    "end": "1728120"
  },
  {
    "text": "you want to uh uh or or you just want to send the thing on to onto the next level of the hierarchy uh right back or right",
    "start": "1728120",
    "end": "1735279"
  },
  {
    "text": "through another possibility so all of these uh all these uh you know you can see that uh that uh sort of non-ending",
    "start": "1735279",
    "end": "1743679"
  },
  {
    "text": "list of possible things that are that are uh Hardware implementer can choose",
    "start": "1743679",
    "end": "1748720"
  },
  {
    "text": "between and very difficult to understand the trade-offs between these things U not to mention the the cost uh uh that",
    "start": "1748720",
    "end": "1756159"
  },
  {
    "text": "some of these things involve uh with a simulator like this you can you can try all kind of all kind of combinations",
    "start": "1756159",
    "end": "1763159"
  },
  {
    "text": "even ones that you don't know how to build uh you know a lot of these things that I that I that I simulate um I I",
    "start": "1763159",
    "end": "1769279"
  },
  {
    "text": "really have no idea if it's even possible to do in Hardware U uh you know uh least recently used uh uh uh caches",
    "start": "1769279",
    "end": "1779039"
  },
  {
    "text": "that are that are 16 ways set associative with with four simultaneous read ports or something like this but um",
    "start": "1779039",
    "end": "1786159"
  },
  {
    "text": "uh you can find out if if if they uh you know if they really save you and and and and you can run it on uh on programs and",
    "start": "1786159",
    "end": "1792840"
  },
  {
    "text": "see if it actually uh it actually makes a tremendous performance increase or not if it does well you probably figure out",
    "start": "1792840",
    "end": "1798159"
  },
  {
    "text": "a way to to build it otherwise you'll know that you know you have you'll say oh that's good I don't have to figure",
    "start": "1798159",
    "end": "1803279"
  },
  {
    "text": "out how to do it um so this says that there's four things in the right buffer and this says that the that we keep",
    "start": "1803279",
    "end": "1809200"
  },
  {
    "text": "things five Cycles in the right buffer hoping that uh uh that something else will want to go in the same location so",
    "start": "1809200",
    "end": "1815919"
  },
  {
    "text": "before we actually uh decide to to to go to memory so this an example of of of of parameters uh I'll show you another uh",
    "start": "1815919",
    "end": "1823559"
  },
  {
    "text": "file quickly this Prime xmm config uh this one is is similar but if but we",
    "start": "1823559",
    "end": "1830039"
  },
  {
    "text": "added a couple of alus has four alus and uh the main thing I want to show you at",
    "start": "1830039",
    "end": "1835880"
  },
  {
    "text": "the bottom here we defined the the um uh wait I'm undo this uh so we Define that",
    "start": "1835880",
    "end": "1844960"
  },
  {
    "text": "the that the division is going to take six uh stages in P six pipeline stages",
    "start": "1844960",
    "end": "1850440"
  },
  {
    "text": "10 cycles each instead of 60 instead of 60 steps all in one in in one place so",
    "start": "1850440",
    "end": "1857120"
  },
  {
    "text": "that means that that there are six places where people can be working on partial part parts of",
    "start": "1857120",
    "end": "1863360"
  },
  {
    "text": "the Divide see if this if this speeds programs up to have a divider with six which is pipelining this way I could",
    "start": "1863360",
    "end": "1869240"
  },
  {
    "text": "have made it 61s uh or or I could have made it you know one followed by 59 or anything but",
    "start": "1869240",
    "end": "1876600"
  },
  {
    "text": "but all these um but all of the uh instructions that that are potentially timec consuming and floating Point",
    "start": "1876600",
    "end": "1883000"
  },
  {
    "text": "multiply uh even shifts you can you can specify the the uh uh the running time",
    "start": "1883000",
    "end": "1889480"
  },
  {
    "text": "uh and and to what extent things are pipelined so so this is a configuration",
    "start": "1889480",
    "end": "1894720"
  },
  {
    "text": "file now when I run my simulator um which is called M mix uh I have um a",
    "start": "1894720",
    "end": "1901960"
  },
  {
    "text": "config file first and a program file afterwards so I say MX for example um",
    "start": "1901960",
    "end": "1908120"
  },
  {
    "text": "haves do um mm config well actually I use primes didn't I so go",
    "start": "1908120",
    "end": "1914919"
  },
  {
    "text": "back primes mm and and um the uh program",
    "start": "1914919",
    "end": "1920600"
  },
  {
    "text": "file was has. MMX and uh so now um uh to get started I",
    "start": "1920600",
    "end": "1927679"
  },
  {
    "text": "have a a I have something called D which which is for debugging I'm this is just",
    "start": "1927679",
    "end": "1932840"
  },
  {
    "text": "to get going until I get my my assembler and loading routine working then I have another thing called K for clu uh which",
    "start": "1932840",
    "end": "1940840"
  },
  {
    "text": "is just for this lecture but D and K are my initials so and and this this prints out the the uh the units and the number",
    "start": "1940840",
    "end": "1948559"
  },
  {
    "text": "of uh stages in the unit as a hint to uh Robert and Chris uh now I can U I can",
    "start": "1948559",
    "end": "1954840"
  },
  {
    "text": "say you know um uh um do a thousand Cycles or or something like that but but",
    "start": "1954840",
    "end": "1961600"
  },
  {
    "text": "um Let me let me just show you the pipeline P says show Us's in the pipeline so at the beginning that's my",
    "start": "1961600",
    "end": "1967320"
  },
  {
    "text": "my clu uh or was it the clu or the D I think it was the the D that did this it",
    "start": "1967320",
    "end": "1972799"
  },
  {
    "text": "put into the it put into the fetch buffer something that would get that would get uh uh we we bootstrap the",
    "start": "1972799",
    "end": "1979919"
  },
  {
    "text": "program the important thing is this unsave instruction here which says uh uh",
    "start": "1979919",
    "end": "1985080"
  },
  {
    "text": "uh the first two instructions put put something into register zero and the second one says unsave starting at the",
    "start": "1985080",
    "end": "1991080"
  },
  {
    "text": "address in register zero and then we go to uh the contents of register F4 uh",
    "start": "1991080",
    "end": "1997360"
  },
  {
    "text": "which is the way the program is going to start so at the beginning we you know we we have the bootstrap so we so you have",
    "start": "1997360",
    "end": "2002840"
  },
  {
    "text": "to get going and and and and fill all the registers with stuff from memory and then go uh it says instruction pointer",
    "start": "2002840",
    "end": "2009120"
  },
  {
    "text": "is waiting for dispatching um and so if I um if I said",
    "start": "2009120",
    "end": "2014519"
  },
  {
    "text": "verbose to print everything out and do one cycle um uh we can see that um what",
    "start": "2014519",
    "end": "2021559"
  },
  {
    "text": "happened at cycle zero um it it runs the right uh uh it runs a program that looks",
    "start": "2021559",
    "end": "2029120"
  },
  {
    "text": "and sees if there anything in the right buffer which it doesn't find anything and then it sees if if uh you know if",
    "start": "2029120",
    "end": "2035200"
  },
  {
    "text": "we're ready to fetch anything isn't because the instruction pointer is is there so then we scheduled U something",
    "start": "2035200",
    "end": "2040679"
  },
  {
    "text": "for alu1 uh an instruction that increases register L um uh to one",
    "start": "2040679",
    "end": "2046720"
  },
  {
    "text": "because you can't put anything in register zero unless we have one local register this is a technicality but anyway this happened and so we issued",
    "start": "2046720",
    "end": "2053638"
  },
  {
    "text": "the first instruction and um and we left uh instructions in the fetch buffer uh",
    "start": "2053639",
    "end": "2058800"
  },
  {
    "text": "the next cycle um uh does you know I'm not going to take you through this this",
    "start": "2058800",
    "end": "2065000"
  },
  {
    "text": "whole program but I wanted to show you something how The simul Works uh uh so it it has to check some things",
    "start": "2065000",
    "end": "2071118"
  },
  {
    "text": "issued this set instruction which uh which is setting the value of radius to",
    "start": "2071119",
    "end": "2076358"
  },
  {
    "text": "zero and U then um in the reorder buffer now we have two instructions now this is um this is the",
    "start": "2076359",
    "end": "2083760"
  },
  {
    "text": "information that I gave to Robert and Chris um a trace of this for 2,000 steps",
    "start": "2083760",
    "end": "2089800"
  },
  {
    "text": "uh showing showing what the simulator did uh you know in in the future uh if",
    "start": "2089800",
    "end": "2095520"
  },
  {
    "text": "of course it's it's simpler if uh if we just plug in there because there there's hooks in my simulator and there and and",
    "start": "2095520",
    "end": "2102280"
  },
  {
    "text": "their Sim their their uh visualization uh routines could go could go directly",
    "start": "2102280",
    "end": "2108440"
  },
  {
    "text": "from the simulator but at the moment it was certainly much much uh uh more convenient since we're changing",
    "start": "2108440",
    "end": "2114400"
  },
  {
    "text": "everything all the time it's just to work from stored log files of of what happens uh if I if I um um uh set veros",
    "start": "2114400",
    "end": "2124079"
  },
  {
    "text": "to zero it's not going to PR some on I can now I can now say go 2,000 steps and it goes 2,000 steps you know it doesn't",
    "start": "2124079",
    "end": "2129800"
  },
  {
    "text": "take any time and I can look at for example the dcash and the dcash will show me the",
    "start": "2129800",
    "end": "2136119"
  },
  {
    "text": "the uh the values that um I said D star",
    "start": "2136119",
    "end": "2141359"
  },
  {
    "text": "which meant show me only the values that are um that haven't been stored in lower",
    "start": "2141359",
    "end": "2146520"
  },
  {
    "text": "levels of the hierarchy these are the things that have actually been written out so in this particular case I've written out um the um uh the numbers uh",
    "start": "2146520",
    "end": "2155800"
  },
  {
    "text": "0 0 0 0 0 0 1 9 3 0 7 and so on um and",
    "start": "2155800",
    "end": "2164119"
  },
  {
    "text": "if I wanted to see the the entire dcash it would have it would have had you know other other uh things in it that that",
    "start": "2164119",
    "end": "2171200"
  },
  {
    "text": "that had been loaded in okay any questions on this you get the idea yeah uh what's the difference between uh",
    "start": "2171200",
    "end": "2178160"
  },
  {
    "start": "2178000",
    "end": "2343000"
  },
  {
    "text": "piter and insception cash okay the fetch buffer is things that have been that that are ready to to",
    "start": "2178160",
    "end": "2185640"
  },
  {
    "text": "be dispatched and so it it goes from the current construction um so uh let's take a look",
    "start": "2185640",
    "end": "2191880"
  },
  {
    "text": "at fetch buffer here so uh actually um the zeros here are are are are fake it's",
    "start": "2191880",
    "end": "2197280"
  },
  {
    "text": "usually this is usually the address let in so let me give you a better example u i I'll turn on foros mode again and uh",
    "start": "2197280",
    "end": "2204839"
  },
  {
    "text": "wait what happened e okay I something in emac um and now let me let me run",
    "start": "2204839",
    "end": "2212720"
  },
  {
    "text": "another um thousand Cycles what the heck uh this will no we'll be able to go and",
    "start": "2212720",
    "end": "2218520"
  },
  {
    "text": "see the fetch buffer um let well let's see let's go to um",
    "start": "2218520",
    "end": "2225640"
  },
  {
    "text": "cycle um uh 1200 2,000 that's the I'm sorry um up um this is a slightly brain",
    "start": "2225640",
    "end": "2234839"
  },
  {
    "text": "damaged emac so I um what did I say 20 2100 okay so here",
    "start": "2234839",
    "end": "2243400"
  },
  {
    "text": "now we can start looking at fetch buffer um so so the fetch buffer here has two",
    "start": "2243400",
    "end": "2249640"
  },
  {
    "text": "instructions in it um from 1020 and 1024 okay each instruction four byes long and",
    "start": "2249640",
    "end": "2256200"
  },
  {
    "text": "uh and these are instructions that are waiting to be issued uh so at the next time uh we would we would issue this",
    "start": "2256200",
    "end": "2262760"
  },
  {
    "text": "load bite instruction and this uh if you know unless uh unless there you know",
    "start": "2262760",
    "end": "2269560"
  },
  {
    "text": "there's no unit ready to to take it and so uh here here it is in fact um issued",
    "start": "2269560",
    "end": "2275520"
  },
  {
    "text": "at this point okay and then uh then it leaves the fetch buffer and now has only the probable",
    "start": "2275520",
    "end": "2282040"
  },
  {
    "text": "Branch instruction in it instruction pointer now is is one C you see this",
    "start": "2282040",
    "end": "2288720"
  },
  {
    "text": "that means that that the probable Branch was an instruction that uh it um this simulator Peaks ahead at the fetch",
    "start": "2288720",
    "end": "2295280"
  },
  {
    "text": "buffer even though it issues only one instruction on a cycle it also it also looks at the next one to see if it's a",
    "start": "2295280",
    "end": "2302400"
  },
  {
    "text": "if if it's going to change control gives it gives it a head start uh so that if the brand if if the branch did occur we",
    "start": "2302400",
    "end": "2308720"
  },
  {
    "text": "don't actually lose it uh we don't actually lose from it so um uh this uh uh at this",
    "start": "2308720",
    "end": "2317440"
  },
  {
    "text": "point though the fetch buff the fetch we didn't fetch from 1028 because it it uh",
    "start": "2317440",
    "end": "2322960"
  },
  {
    "text": "it knows that be it should go next into the other place okay that answer your",
    "start": "2322960",
    "end": "2328920"
  },
  {
    "text": "question now let's take a look at that trace and again and see what happens so",
    "start": "2328920",
    "end": "2334880"
  },
  {
    "text": "so oops where was I have this one maybe and this",
    "start": "2334880",
    "end": "2342440"
  },
  {
    "text": "one so now now if we went back to the beginning of this of this program you",
    "start": "2342440",
    "end": "2347880"
  },
  {
    "text": "see the you'll see how it started up then so at cycle zero it has these four",
    "start": "2347880",
    "end": "2354200"
  },
  {
    "text": "instructions in the fetch buffer set in unsave and go so um now I'll change it",
    "start": "2354200",
    "end": "2359520"
  },
  {
    "text": "to fast and we'll see so it'll start um the first",
    "start": "2359520",
    "end": "2365040"
  },
  {
    "text": "cycle so so now the unsa sits there for a while but unsave generates a whole",
    "start": "2365040",
    "end": "2370119"
  },
  {
    "text": "bunch of of instructions into load store unit because we have to say we have to unsave a context in fact um uh uh you",
    "start": "2370119",
    "end": "2378079"
  },
  {
    "text": "know it's it's at least 14 U uh octob bytes of information uh to get going and",
    "start": "2378079",
    "end": "2384760"
  },
  {
    "text": "uh and up to um more than almost 300 uh if you saved a large large context uh it",
    "start": "2384760",
    "end": "2391800"
  },
  {
    "text": "takes a while it looks like it's stalled now but in fact what's happening is look look down here you see the the main main",
    "start": "2391800",
    "end": "2397560"
  },
  {
    "text": "memory is lighted up that means that the memory is is locked and the memory is actually feeding and and and the S cache",
    "start": "2397560",
    "end": "2403720"
  },
  {
    "text": "is lighted up too that's what and you see it in the strip here too that uh you see these things at the bottom of the",
    "start": "2403720",
    "end": "2409240"
  },
  {
    "text": "scrip um uh that that means that the memory you know the bottom line is this red line for memory and then the cach is",
    "start": "2409240",
    "end": "2416240"
  },
  {
    "text": "the S cach is yellow uh the dcache will be um uh will be blue when you see it in",
    "start": "2416240",
    "end": "2422359"
  },
  {
    "text": "the iach green um the main memory is um",
    "start": "2422359",
    "end": "2427520"
  },
  {
    "text": "uh is busy now oh it finished but the sash stopped filling now the dcash is going to fill okay so now we we we got",
    "start": "2427520",
    "end": "2434760"
  },
  {
    "text": "to get the information into the into the into the data cach in order to load it in to a register and then uh uh uh that",
    "start": "2434760",
    "end": "2442560"
  },
  {
    "text": "was good but that was only 32 bytes and so we have to do it again uh the sash actually got 64 bytes and so so the",
    "start": "2442560",
    "end": "2448839"
  },
  {
    "text": "dcash will will come up uh FAS anyway it takes a while and that's what all of this",
    "start": "2448839",
    "end": "2455040"
  },
  {
    "text": "stuff at the beginning is uh getting G getting all of that stuff out of memory and and so uh so we have to sit",
    "start": "2455040",
    "end": "2462440"
  },
  {
    "text": "here uh you know 10 10 Cycles just to to read U uh 16 bytes out of memory uh so",
    "start": "2462440",
    "end": "2469880"
  },
  {
    "text": "that's that's what happens at this point and then the unsaved uh uh have filled up the reorder buffer with six uh uh",
    "start": "2469880",
    "end": "2477760"
  },
  {
    "text": "load instructions uh and they're they're they're sitting here in the load store unit uh in the first stage in the second",
    "start": "2477760",
    "end": "2484040"
  },
  {
    "text": "stage they're they're pounding on the dcash saying is this you know please give me this this data in the first",
    "start": "2484040",
    "end": "2490720"
  },
  {
    "text": "stage they're saying um uh uh you know give me a second stage to go into I I'm",
    "start": "2490720",
    "end": "2496880"
  },
  {
    "text": "stalling herec I I now this can go into the second stage and say give me this address and and so things will uh uh you",
    "start": "2496880",
    "end": "2504319"
  },
  {
    "text": "know gradually come out of the re B okay I can I can I can I can move faster here",
    "start": "2504319",
    "end": "2512200"
  },
  {
    "text": "pass this until we get to the next stage and when the program is about to start so let's go ahead",
    "start": "2512200",
    "end": "2520520"
  },
  {
    "text": "here okay so unsaved is still happening all this time um and it gets a little",
    "start": "2520520",
    "end": "2526839"
  },
  {
    "text": "boring after a while um but in fact this is what this is what happens in machines you have to",
    "start": "2526839",
    "end": "2533000"
  },
  {
    "text": "realize that you know we don't think about this when we're writing a program that uh that it takes a long time to get",
    "start": "2533000",
    "end": "2538400"
  },
  {
    "text": "uh to get going at the beginning fortunately that's only that's only one and still 225 Cycles I mean if we're if",
    "start": "2538400",
    "end": "2545240"
  },
  {
    "text": "we're running at 225 MHz this is only been one uh uh one second so",
    "start": "2545240",
    "end": "2551359"
  },
  {
    "text": "um a micr yeah one micr uh",
    "start": "2551359",
    "end": "2558319"
  },
  {
    "text": "back back 10 to yeah so okay so here so unsave come on come on go a unsave is",
    "start": "2558319",
    "end": "2566319"
  },
  {
    "text": "done and we're doing the go instruction now it has to go and and fill the icache so watch the iach light light up here U",
    "start": "2566319",
    "end": "2573760"
  },
  {
    "text": "we're ready to start okay the I so for now the iach is is being filled and the",
    "start": "2573760",
    "end": "2578960"
  },
  {
    "text": "memory is now reading into the sash from a different place now it's reading from the place where the instructions were",
    "start": "2578960",
    "end": "2584280"
  },
  {
    "text": "before it was reading from the place where the data was okay and so then it goes through this this this long dorant phase here",
    "start": "2584280",
    "end": "2590800"
  },
  {
    "text": "you see in order to get the instructions so then we then we get uh finally into the program itself and let and um and",
    "start": "2590800",
    "end": "2598280"
  },
  {
    "text": "when the program is is going um uh still um it still has the",
    "start": "2598280",
    "end": "2605319"
  },
  {
    "text": "memory is still busy uh we haven't actually been able to write anything yet and so things are building",
    "start": "2605319",
    "end": "2611200"
  },
  {
    "text": "up in the reorder buffer these are instructions that have the ones that are bright light brightly lighted here have",
    "start": "2611200",
    "end": "2616359"
  },
  {
    "text": "completed their operation they're no longer in a functional unit U the functional unit here is is uh you know",
    "start": "2616359",
    "end": "2623119"
  },
  {
    "text": "the store bite instruction is what it's probably waiting for it's waiting for a place because you can't store a bite without reading what the other bites",
    "start": "2623119",
    "end": "2629359"
  },
  {
    "text": "were in the word that you're in the word that you want to store into so it's taking a while to uh uh before it can do",
    "start": "2629359",
    "end": "2635599"
  },
  {
    "text": "the store bite uh uh we should get something up into the dcache in a minute yep there it comes from the dcache so",
    "start": "2635599",
    "end": "2642280"
  },
  {
    "text": "pretty soon we should be able to hit uh to to see something in the right buffer I'll I'll Advance this 20 20 Cycles now",
    "start": "2642280",
    "end": "2650040"
  },
  {
    "text": "now you see in the right buffer U this um zero here uh well it started with one",
    "start": "2650040",
    "end": "2657079"
  },
  {
    "text": "and it and should it should make this uh are we still going no okay um so it",
    "start": "2657079",
    "end": "2664200"
  },
  {
    "text": "should start at five here and then we should in a minute",
    "start": "2664200",
    "end": "2670200"
  },
  {
    "text": "um but main memory is still is still locked so so we're still bringing stuff",
    "start": "2671839",
    "end": "2677079"
  },
  {
    "text": "up um as soon as yeah as soon as I get to this to this",
    "start": "2677079",
    "end": "2684280"
  },
  {
    "text": "store bite here that's going to store the five the0 five and then then then then but notice we got the reorder",
    "start": "2684280",
    "end": "2690680"
  },
  {
    "text": "buffer really full of stuff here this is now and uh because this guy it's waiting",
    "start": "2690680",
    "end": "2696200"
  },
  {
    "text": "for this guy as soon soon as this guy is is is done uh then he's going to commit",
    "start": "2696200",
    "end": "2701440"
  },
  {
    "text": "or be graduated things are now things are going to start happening so watch him move out of the reorder buffer and",
    "start": "2701440",
    "end": "2707000"
  },
  {
    "text": "and uh go okay questions on",
    "start": "2707000",
    "end": "2713520"
  },
  {
    "text": "this what do the colors on the re some he what do the colors in the reorder me",
    "start": "2713520",
    "end": "2721839"
  },
  {
    "text": "okay the if if it's brightly lighted that means that it's already out of the functional unit otherwi it it's the",
    "start": "2721839",
    "end": "2727680"
  },
  {
    "text": "color from the functional unit so the so the green would come from a load store and a and a light green from an ALU in",
    "start": "2727680",
    "end": "2734040"
  },
  {
    "text": "this particular case we're going to have another color for divide in in the primes examp example um and and gray",
    "start": "2734040",
    "end": "2740720"
  },
  {
    "text": "means uh means it's it's sitting in here it'll be grayish green or light grayish green or something like that so so um uh",
    "start": "2740720",
    "end": "2749520"
  },
  {
    "text": "here you see then uh the the was a solid dark green at this point because it was",
    "start": "2749520",
    "end": "2754960"
  },
  {
    "text": "all load store and it was a light screen here because it's all ALU pretty much and and here was a mixture of the two we",
    "start": "2754960",
    "end": "2761040"
  },
  {
    "text": "had a whole bunch of load store uh mixed up while we were waiting for the for the for the cach okay see see this is leted",
    "start": "2761040",
    "end": "2768319"
  },
  {
    "text": "up here one two uh 012 U the five",
    "start": "2768319",
    "end": "2774200"
  },
  {
    "text": "0125 so that's in the right buffer we've just computed 1/8",
    "start": "2774200",
    "end": "2780839"
  },
  {
    "start": "2778000",
    "end": "3043000"
  },
  {
    "text": "okay this particular case you're just displaying the trace information is that we're displaying the trace information",
    "start": "2780839",
    "end": "2786599"
  },
  {
    "text": "at this this point I'm not actually running the simulator okay you're not actually running their their simulator",
    "start": "2786599",
    "end": "2792040"
  },
  {
    "text": "goes off of the log file in fact it's they pared the log file and uh we won't have time we won't",
    "start": "2792040",
    "end": "2800839"
  },
  {
    "text": "have time today but uh you know it would be nice if you know uh if if if we had",
    "start": "2800839",
    "end": "2806839"
  },
  {
    "text": "extra time for you know if I could go through the audience and say what what parameters do you want how many registers do you want and how you know",
    "start": "2806839",
    "end": "2813079"
  },
  {
    "text": "how big a reorder buffer how much fetch buffer and everything and then we could um uh you know we we we could do it and",
    "start": "2813079",
    "end": "2819960"
  },
  {
    "text": "and it would only take 3 or four minutes to set it all up and make it work but um I have other demos that are pre that are",
    "start": "2819960",
    "end": "2826720"
  },
  {
    "text": "pre uh canned which I which I think will give us the same kind of information but you can play with this endlessly it's",
    "start": "2826720",
    "end": "2831920"
  },
  {
    "text": "it's a wonderful toy uh in fact we we would often write programs and we had no idea which way it was going to come out",
    "start": "2831920",
    "end": "2837240"
  },
  {
    "text": "and then we would see what we thought was a bottleneck and so I said oh yeah uh the program has starve it needs",
    "start": "2837240",
    "end": "2843079"
  },
  {
    "text": "bigger fetch buffer I increased the size of fetch buffer did nothing because it turned out that uh that that the",
    "start": "2843079",
    "end": "2848640"
  },
  {
    "text": "bottleneck was really because the fetch buffer had to be cleared because of the of the branch",
    "start": "2848640",
    "end": "2853720"
  },
  {
    "text": "instruction um but now I'd like to show you a",
    "start": "2853720",
    "end": "2859319"
  },
  {
    "text": "version yeah go ahead is it possible to describe the situation where several execution unit capable to execute the",
    "start": "2859319",
    "end": "2866319"
  },
  {
    "text": "same instruction but say with different timing for different number of Cycles uh",
    "start": "2866319",
    "end": "2872200"
  },
  {
    "text": "yes um uh I'm not sure I quite understand you have S instruction excuse",
    "start": "2872200",
    "end": "2878559"
  },
  {
    "text": "me was working on the same instruction uh if you have the different type of say",
    "start": "2878559",
    "end": "2883960"
  },
  {
    "text": "Floy Point units one is capable to execute division for 50 cyes and another",
    "start": "2883960",
    "end": "2889720"
  },
  {
    "text": "one for say twice longer takes by oh okay yeah I right now I I uh I haven't",
    "start": "2889720",
    "end": "2898319"
  },
  {
    "text": "specialized it I haven't specialized it that way uh I have only one table entry in my config file uh for for floating",
    "start": "2898319",
    "end": "2905280"
  },
  {
    "text": "Point uh multiplication for example I um uh that that would be",
    "start": "2905280",
    "end": "2911440"
  },
  {
    "text": "not hard to not hard to add but that but at the moment it's uh it's not that General and you know I I don't even I",
    "start": "2911440",
    "end": "2918680"
  },
  {
    "text": "say that a shift left is going to take the same time as a shift right",
    "start": "2918680",
    "end": "2924520"
  },
  {
    "text": "um uh okay I've got um uh another example where I remember I showed you",
    "start": "2925400",
    "end": "2932880"
  },
  {
    "text": "this this configuration file where we had extra alus and and um and and also",
    "start": "2932880",
    "end": "2938480"
  },
  {
    "text": "divide with with with six units uh and then I also increased the fetch buffer size to 10 and I and I wrote this half",
    "start": "2938480",
    "end": "2945960"
  },
  {
    "text": "program um for that let's uh so let me show you let me show you that let's see",
    "start": "2945960",
    "end": "2952079"
  },
  {
    "text": "has XX is this guy here is that right do I just double",
    "start": "2952079",
    "end": "2957160"
  },
  {
    "text": "click on it yeah it worked okay now this program uh go back to",
    "start": "2957160",
    "end": "2964160"
  },
  {
    "text": "emac what I did for this program um is",
    "start": "2964160",
    "end": "2969359"
  },
  {
    "text": "um um uh is I I repeated the loop i d i",
    "start": "2969359",
    "end": "2979160"
  },
  {
    "text": "doubled the loop you remember the loop used to be seven instructions long one two 3 4 five six seven ending with a",
    "start": "2979160",
    "end": "2985400"
  },
  {
    "text": "probable Branch uh non zero so now I Chang it to a branch zero instead of",
    "start": "2985400",
    "end": "2990520"
  },
  {
    "text": "prob Branch non zero and I repeated the same seven instructions again uh that's just called unrolling The Loop one I",
    "start": "2990520",
    "end": "2996960"
  },
  {
    "text": "didn't do anything fancy about uh about inter or leaving uh the loops I just copied the loop again uh that's the only",
    "start": "2996960",
    "end": "3004359"
  },
  {
    "text": "change I made to the program um but we're running now with um uh with the uh",
    "start": "3004359",
    "end": "3010760"
  },
  {
    "text": "config file um that um has some lines",
    "start": "3010760",
    "end": "3019480"
  },
  {
    "text": "uncommented see I added two alus but uh the main thing is right here uh dispatch",
    "start": "3019480",
    "end": "3025160"
  },
  {
    "text": "Max 3 commit Max 3 means that that this is super scaler now we can do three instructions at a time on on a clock",
    "start": "3025160",
    "end": "3033440"
  },
  {
    "text": "cycle um and I gave a fetch buffer size of 10 so now let's let's take a look at",
    "start": "3033440",
    "end": "3039760"
  },
  {
    "text": "um uh what happened that that was this guy",
    "start": "3039760",
    "end": "3045520"
  },
  {
    "start": "3043000",
    "end": "3293000"
  },
  {
    "text": "here um so you see the fetch buffer here is 10 and um I now have four",
    "start": "3045520",
    "end": "3051680"
  },
  {
    "text": "alus and um um it's going to start out with the same same boring stuff at the",
    "start": "3051680",
    "end": "3057599"
  },
  {
    "text": "beginning having you know it's it's going to the memory is going to take the same amount of time to load that stuff",
    "start": "3057599",
    "end": "3062799"
  },
  {
    "text": "up and we're going to sit there and wait and and then then for for one or two cycles we we we'll go zing and and and",
    "start": "3062799",
    "end": "3070640"
  },
  {
    "text": "uh and be able to do the things out but then we'll still be waiting for the memory again so it doesn't really help to have the super scaler until we get uh",
    "start": "3070640",
    "end": "3077799"
  },
  {
    "text": "going into the into the program itself so let's start let's let's start let's go to a uh uh to part into the M middle",
    "start": "3077799",
    "end": "3085559"
  },
  {
    "text": "of the program here where it's and start um executing now with the with this",
    "start": "3085559",
    "end": "3092000"
  },
  {
    "text": "super scaler version F buffer seems to be empty okay so I here so so here we you see we um",
    "start": "3092000",
    "end": "3101319"
  },
  {
    "text": "you want me to go a little slower you can watch",
    "start": "3101319",
    "end": "3108400"
  },
  {
    "text": "um so here so uh uh I can I can go even slower yeah but",
    "start": "3108400",
    "end": "3115040"
  },
  {
    "text": "you see but uh uh first look at the reorder buffer um about half the time you'll see three",
    "start": "3115040",
    "end": "3121240"
  },
  {
    "text": "three things leaving the reorder buffer at every at every time that's the pay off if you can if if three things can",
    "start": "3121240",
    "end": "3126319"
  },
  {
    "text": "can be committed um or if the three things can be issued uh or you know and are committed then then then then we're",
    "start": "3126319",
    "end": "3133200"
  },
  {
    "text": "we're using the super scaler feature of the of of the thing so it's going here",
    "start": "3133200",
    "end": "3138680"
  },
  {
    "text": "and um um going into the alus and you see the",
    "start": "3138680",
    "end": "3145920"
  },
  {
    "text": "see the the gray slots this one is waiting for something to finish uh uh it came out of the out of the low load",
    "start": "3145920",
    "end": "3152240"
  },
  {
    "text": "store you this kind of a neat D um here these two come in zip they go out okay",
    "start": "3152240",
    "end": "3159040"
  },
  {
    "text": "this this uh uh from a uh a small program we can see",
    "start": "3159040",
    "end": "3166200"
  },
  {
    "text": "we can see uh uh uh you know how much speed is the",
    "start": "3166200",
    "end": "3171760"
  },
  {
    "text": "advantage we're getting we're not getting a a factor of three but but",
    "start": "3171760",
    "end": "3177319"
  },
  {
    "text": "uh it is working and U I'll let you watch it a little bit more notice the fetch buffer is is empty",
    "start": "3177319",
    "end": "3184359"
  },
  {
    "text": "right at this point uh that's because we did get to the end of the 14 instructions and then we had to then",
    "start": "3184359",
    "end": "3189839"
  },
  {
    "text": "then we had to start over then had to fill fill fetching again and since we're dispatching three things at a time uh we",
    "start": "3189839",
    "end": "3197000"
  },
  {
    "text": "probably should have have more than duplicated the loop but if I had repeated the loop a few more times then",
    "start": "3197000",
    "end": "3202319"
  },
  {
    "text": "I then then this pausing for the fetch buffer would almost never been necessary I think but I haven't tried it I have to",
    "start": "3202319",
    "end": "3208680"
  },
  {
    "text": "hand assemble this darn thing every time I mean uh so so I I I I I duplicated the loop only twice uh since I was I'm",
    "start": "3208680",
    "end": "3215440"
  },
  {
    "text": "typing in the hexad desmal stuff next week I'll have an assem that I make this make this real fast to test okay so",
    "start": "3215440",
    "end": "3223119"
  },
  {
    "text": "that's medium speed of the of that routine",
    "start": "3223119",
    "end": "3230559"
  },
  {
    "text": "question um uh let me show you the the comparison of the two um",
    "start": "3230880",
    "end": "3237760"
  },
  {
    "text": "which is is it",
    "start": "3237760",
    "end": "3241200"
  },
  {
    "text": "this yeah so so here are the two the time oh this one's still running that's interesting uh stop it's",
    "start": "3243200",
    "end": "3253280"
  },
  {
    "text": "F Well it doesn't stop um yeah I I see just took a little while",
    "start": "3253280",
    "end": "3259040"
  },
  {
    "text": "for it to get okay so you can see you can see the two um uh uh uh you can you",
    "start": "3259040",
    "end": "3265640"
  },
  {
    "text": "can see how much you know how much we're gaining on it the uh uh uh with the with without the",
    "start": "3265640",
    "end": "3272720"
  },
  {
    "text": "super scaler we're getting one one one one one each one takes one more cycle",
    "start": "3272720",
    "end": "3278079"
  },
  {
    "text": "because the number gets one more digit long every time you take half of it uh and here you see it's going much",
    "start": "3278079",
    "end": "3286359"
  },
  {
    "text": "faster okay now uh the the other demo I wanted to show you is is for prime",
    "start": "3286359",
    "end": "3293680"
  },
  {
    "start": "3293000",
    "end": "3600000"
  },
  {
    "text": "numbers you want to you want to give me that",
    "start": "3293680",
    "end": "3298318"
  },
  {
    "text": "Robert so the first example Pro of a of a decent sized program that I have in",
    "start": "3305960",
    "end": "3311440"
  },
  {
    "text": "art of computer programming is a program to calculate the first 500 prime numbers and uh this um is uh uh so naturally",
    "start": "3311440",
    "end": "3321480"
  },
  {
    "text": "I'll I'll probably retain that same that same example in in with MX as I as I had you used for mix and uh and so I rewrote",
    "start": "3321480",
    "end": "3329599"
  },
  {
    "text": "it you know in the assembler and uh and now we're going to show you two versions three three versions",
    "start": "3329599",
    "end": "3335440"
  },
  {
    "text": "um um one of them is the is where you issue",
    "start": "3335440",
    "end": "3341280"
  },
  {
    "text": "one instruction at a time and uh you wait and the Divide is not pipelined and uh so and so it weighs 60 cycles for",
    "start": "3341280",
    "end": "3347960"
  },
  {
    "text": "every division now you know how to how to how uh uh to calculate primee numbers there's many ways to do it but this is",
    "start": "3347960",
    "end": "3353960"
  },
  {
    "text": "the most obvious way uh we start out we say that two is Prime and in fact we",
    "start": "3353960",
    "end": "3359720"
  },
  {
    "text": "even say that three is Prime and then we have to test then we're going to go through odd numbers we're going to try 5",
    "start": "3359720",
    "end": "3364799"
  },
  {
    "text": "7 9 11 13 and so on and uh and um uh uh",
    "start": "3364799",
    "end": "3372280"
  },
  {
    "text": "so is five Prime well we we try dividing it by the prime numbers the odd prime numbers we already know so divide five",
    "start": "3372280",
    "end": "3379000"
  },
  {
    "text": "by three our the remainder is not zero so five is not a multiple of three looks good uh in fact uh you know that's all",
    "start": "3379000",
    "end": "3387839"
  },
  {
    "text": "we have so so five must be prime 7 ided 3 uh the remainder is is not zero we",
    "start": "3387839",
    "end": "3394039"
  },
  {
    "text": "don't even have to divide 7 by 5 because we find out that 7 ID 3 is already less",
    "start": "3394039",
    "end": "3400119"
  },
  {
    "text": "than three and that means that the divisor was uh was bigger than the square root of the number we're trying",
    "start": "3400119",
    "end": "3405880"
  },
  {
    "text": "and anything that's not prime is going to have something that's less than the square root of it that that divides it",
    "start": "3405880",
    "end": "3411079"
  },
  {
    "text": "so we only have to divide until the quotient is um is is less than remainder",
    "start": "3411079",
    "end": "3416760"
  },
  {
    "text": "or greater than remainder one of those two uh as soon as we get uh as soon we divide by a number so that the quotient",
    "start": "3416760",
    "end": "3422000"
  },
  {
    "text": "is smaller than than the than the divisor U then um uh then we've tested",
    "start": "3422000",
    "end": "3428039"
  },
  {
    "text": "enough to see that it's Prime so that's the idea of this algorithm it's simply uh if if we're trying to decide if 21 U",
    "start": "3428039",
    "end": "3434799"
  },
  {
    "text": "25 is prime would divide by three and then by five see whoops it's it it the remainder was Zero uh MX has uh has one",
    "start": "3434799",
    "end": "3443720"
  },
  {
    "text": "um uh thing I wish all computers had and that is the divide and remainder are",
    "start": "3443720",
    "end": "3448880"
  },
  {
    "text": "obtained at the same time uh on uh on other computers uh you you do a division",
    "start": "3448880",
    "end": "3455200"
  },
  {
    "text": "you I mean almost all algorithms I know that where you want to know the quotient you also want to know the remainder uh",
    "start": "3455200",
    "end": "3461440"
  },
  {
    "text": "in the next line of your program or and uh so U uh it seems silly when you have",
    "start": "3461440",
    "end": "3467000"
  },
  {
    "text": "such an in instruction you already had the remainder to have to calculate it again uh but that's the but uh that's",
    "start": "3467000",
    "end": "3473000"
  },
  {
    "text": "the way most machines seem to work uh uh in fact of machines don't even do division in Hardware anymore but that's",
    "start": "3473000",
    "end": "3478799"
  },
  {
    "text": "another story um uh so um uh with MX uh",
    "start": "3478799",
    "end": "3484480"
  },
  {
    "text": "um we have the quoti in the remainder uh one of them appears in a in a in a in a special register off to the side this is",
    "start": "3484480",
    "end": "3492559"
  },
  {
    "text": "this uh is the is the prime program thank thank you Robert you see it starts out with the same uh bootstrapping idea",
    "start": "3492559",
    "end": "3499880"
  },
  {
    "text": "and then uh but when it when it gets going it's a little different now than before uh because you see it's building",
    "start": "3499880",
    "end": "3507359"
  },
  {
    "text": "up a whole bunch of stuff in the reorder buffer let's let's go there and see that looks like it's a little bit interesting",
    "start": "3507359",
    "end": "3513680"
  },
  {
    "text": "enough to see to get get into this program so we first we had a dead time waiting for the iach to get some",
    "start": "3513680",
    "end": "3519240"
  },
  {
    "text": "instructions in here let's let's look in here we're starting to um to to think about prime numbers okay the memory is",
    "start": "3519240",
    "end": "3526359"
  },
  {
    "text": "is filling the sash during this time but we can um uh we can um uh start seeing",
    "start": "3526359",
    "end": "3533640"
  },
  {
    "text": "is what happened now it's a little different than before because because there is going to be a divide instruction coming uh at the moment I'm",
    "start": "3533640",
    "end": "3540359"
  },
  {
    "text": "waiting for a load however I'm trying to load uh um something let's see the next",
    "start": "3540359",
    "end": "3546640"
  },
  {
    "text": "instruction is going to be increase add load wide so this will be a trial",
    "start": "3546640",
    "end": "3552960"
  },
  {
    "text": "divisor that we were trying to load so we could do a division instruction division instruction should",
    "start": "3552960",
    "end": "3559440"
  },
  {
    "text": "should should come along pretty soon um Let me let me go we go on so so we're",
    "start": "3559440",
    "end": "3567000"
  },
  {
    "text": "building up instructions in the reorder buffer that have already been processed um but they're all they're hanging on on",
    "start": "3567000",
    "end": "3574680"
  },
  {
    "text": "this this loader store instruction up here yeah uh you said I thought that",
    "start": "3574680",
    "end": "3580960"
  },
  {
    "text": "you're not actually running the simulator now that's right it's going from a trace oh okay a trace is stor so",
    "start": "3580960",
    "end": "3588319"
  },
  {
    "text": "so I I can jump ahead to 352 without too much uh problem now here you see in the right buffer two is prime three is prime",
    "start": "3588319",
    "end": "3597119"
  },
  {
    "text": "even in heximal it's true okay and U let's go",
    "start": "3597119",
    "end": "3603440"
  },
  {
    "text": "go and um uh the division is lit up here so 60 Cycles later this division will be",
    "start": "3603440",
    "end": "3610200"
  },
  {
    "text": "you know this purple guy will be done now in the in the reorder buffer by the way in my program I I I I found it was",
    "start": "3610200",
    "end": "3616160"
  },
  {
    "text": "important to you know writing a literate program you want to be able to describe the algorithm in in in uh in interesting",
    "start": "3616160",
    "end": "3622079"
  },
  {
    "text": "terms and and I and I had to check also that the uh that the that the architecture of MX was was going to work",
    "start": "3622079",
    "end": "3628680"
  },
  {
    "text": "properly in in cases of interrupts and and and um and so on and I I I I needed",
    "start": "3628680",
    "end": "3634559"
  },
  {
    "text": "a name for things that were that were at the beginning at you know that that are ready to to graduate ready to commit and",
    "start": "3634559",
    "end": "3640960"
  },
  {
    "text": "things that were that were fairly new and I decided that I would say that this was the hot seat up here the top of the",
    "start": "3640960",
    "end": "3647240"
  },
  {
    "text": "reorder buffer is called the hot seat and at the bottom this is the cool end so everything is cool when it starts and",
    "start": "3647240",
    "end": "3652839"
  },
  {
    "text": "it gets warmer and warmer the longer it sits in the reorder buffer and you know you know the air conditioning is a",
    "start": "3652839",
    "end": "3657880"
  },
  {
    "text": "little tricky in these uh in these chips and so uh and so they the uh students",
    "start": "3657880",
    "end": "3663079"
  },
  {
    "text": "also made this that's why transition from Blue to Red here in the it shows in the reor",
    "start": "3663079",
    "end": "3669680"
  },
  {
    "text": "buff um but the guy in the hot SE is this divide instruction and it's going to wait for the for the Divide to finish",
    "start": "3669680",
    "end": "3676520"
  },
  {
    "text": "even if I hadn't interrupted this point it would wait for the Divide to finish um but I did take take uh account that a",
    "start": "3676520",
    "end": "3684079"
  },
  {
    "text": "uh floating Point remainder in construction sitting in the hot site would would be",
    "start": "3684079",
    "end": "3689400"
  },
  {
    "text": "interruptible because that floating Point remainder might take uh um several",
    "start": "3689400",
    "end": "3694960"
  },
  {
    "text": "thousand Cycles in the wor Cas um okay things are going are happening now even",
    "start": "3694960",
    "end": "3700880"
  },
  {
    "text": "though this division is going on uh nothing depends on the result of the division for a while uh and uh and and",
    "start": "3700880",
    "end": "3708039"
  },
  {
    "text": "so we were able to get this now now you see these vertical lines here that's when when something goes in the right",
    "start": "3708039",
    "end": "3713960"
  },
  {
    "text": "buffer so that shows the time when we found a prime so so here so we're going to find five as Prime here probably or",
    "start": "3713960",
    "end": "3721000"
  },
  {
    "text": "seven as Prime here I mean and then this will be 11 this will be 13 this will be 17 20",
    "start": "3721000",
    "end": "3727920"
  },
  {
    "text": "23 29 I don't know why 31 I don't know",
    "start": "3727920",
    "end": "3733319"
  },
  {
    "text": "uh we'll be able to um uh to see see that but anyway this is the idea of what happens when you uh when you're um uh",
    "start": "3733319",
    "end": "3742680"
  },
  {
    "text": "when You' got an algorithm that unfortunately has to wait for the result of this divide I have to see if the remainder is zero before I know uh what",
    "start": "3742680",
    "end": "3750279"
  },
  {
    "text": "what before I can go on next uh um even though um I've done the next instructions uh they're sitting there",
    "start": "3750279",
    "end": "3756880"
  },
  {
    "text": "waiting to you know wait this is a get instruction which says get the remainder register into into a a normal register",
    "start": "3756880",
    "end": "3765039"
  },
  {
    "text": "afterwards there's going to be a test for less than um than an in increment instruction and a in a probable Branch",
    "start": "3765039",
    "end": "3771319"
  },
  {
    "text": "instruction but those are still sitting in the fetch buffer uh because um the L",
    "start": "3771319",
    "end": "3776839"
  },
  {
    "text": "the LSS instruction has to go into an ALU so so alus were both busy okay",
    "start": "3776839",
    "end": "3782720"
  },
  {
    "text": "something happened there um uh we'll see something in the right",
    "start": "3782720",
    "end": "3789240"
  },
  {
    "text": "buffer momentarily I hope yep there it is seven we just found",
    "start": "3789240",
    "end": "3795079"
  },
  {
    "text": "seven is prime okay you know uh okay let's let's",
    "start": "3795079",
    "end": "3800839"
  },
  {
    "text": "go ahead let's go ahead here um and take a look at the right buffer uh it's going",
    "start": "3800839",
    "end": "3807720"
  },
  {
    "text": "into the next the next bite now uh oh sorry I I wanted to see it",
    "start": "3807720",
    "end": "3813559"
  },
  {
    "text": "when the right buffer is still is still active um so go",
    "start": "3813559",
    "end": "3819000"
  },
  {
    "text": "back right buffer come on right buffer go so um uh at this point we've just",
    "start": "3819000",
    "end": "3825680"
  },
  {
    "text": "found that something is prime okay you see it's a little hard to recognize these primes maybe in heximal is B it's",
    "start": "3825680",
    "end": "3831640"
  },
  {
    "text": "11 D you guys know your heximal 13",
    "start": "3831640",
    "end": "3836839"
  },
  {
    "text": "um I've been practicing hexad desal when I'm when when I'm swimming you know instead of counting my Strokes I you",
    "start": "3836839",
    "end": "3842960"
  },
  {
    "text": "know I go 89 a b CDE e f you know it helps okay so no when you get",
    "start": "3842960",
    "end": "3853440"
  },
  {
    "text": "past one digit gets no no no actually the the hard thing is after you get",
    "start": "3853440",
    "end": "3859319"
  },
  {
    "text": "after 70f then the next thing no I'm sorry after 90f the next thing would",
    "start": "3859319",
    "end": "3865079"
  },
  {
    "text": "sound like 80 0 because a and8 you know would both say you know so so I have I",
    "start": "3865079",
    "end": "3871000"
  },
  {
    "text": "have so I so I say a as an oi so so I so I go 9 o b CDE e f 10 11 12 know have o",
    "start": "3871000",
    "end": "3880440"
  },
  {
    "text": "you know b c d I'm serious about it it's important okay so",
    "start": "3880440",
    "end": "3886079"
  },
  {
    "text": "um so um do remember table next to this uh no not yet I I won't even swimming",
    "start": "3886079",
    "end": "3895000"
  },
  {
    "text": "for yeah I've only been swimming for a while you know uh so now um uh this",
    "start": "3895000",
    "end": "3901200"
  },
  {
    "text": "thing is still going again um but let's look at the uh at at at the version that",
    "start": "3901200",
    "end": "3906400"
  },
  {
    "text": "has um uh primes X this is um uh you see now the Divide has this 10",
    "start": "3906400",
    "end": "3914359"
  },
  {
    "text": "cycle pipeline like this okay so see let's take a look and see see how that",
    "start": "3914359",
    "end": "3920880"
  },
  {
    "text": "how that looks like when we're when we're getting a a um okay okay now here",
    "start": "3920880",
    "end": "3926039"
  },
  {
    "text": "we actually have two division instructions in here um so so the A and because we also have another extra ALU",
    "start": "3926039",
    "end": "3933680"
  },
  {
    "text": "so one's waiting for the remainder of the first division so I start to start going and um and uh it's",
    "start": "3933680",
    "end": "3943160"
  },
  {
    "text": "waiting for the result of that one okay so that so that allows some things to complete a fetch buffer gets you know",
    "start": "3943160",
    "end": "3949359"
  },
  {
    "text": "gets to move stuff out and uh what happened to the other divide",
    "start": "3949359",
    "end": "3955720"
  },
  {
    "text": "That was supposed to take 10 Cycles what happened wait a minute is this a bug why",
    "start": "3957440",
    "end": "3963920"
  },
  {
    "text": "are we doing here go backward maybe",
    "start": "3963920",
    "end": "3969520"
  },
  {
    "text": "it's no no no what it yeah this is a we've beened the New Divide algorithm",
    "start": "3969520",
    "end": "3975640"
  },
  {
    "text": "here no what what but divide by zero doesn't even take six Cycles I don't I think it",
    "start": "3975640",
    "end": "3981559"
  },
  {
    "text": "goes right into the it goes right U oh wait that's true that was a div by Z why was it dividing by",
    "start": "3981559",
    "end": "3989440"
  },
  {
    "text": "zero yeah yeah but I mean um did I is this the one where i' where",
    "start": "3989520",
    "end": "3995200"
  },
  {
    "text": "I've actually tripled up the loop okay let let me see this is primes",
    "start": "3995200",
    "end": "4002319"
  },
  {
    "text": "X okay X primes X now I don't think it was well",
    "start": "4002319",
    "end": "4009599"
  },
  {
    "text": "we'll have to see why it divided by zero I guess",
    "start": "4009599",
    "end": "4015839"
  },
  {
    "text": "okay um something has to go wrong in every",
    "start": "4015839",
    "end": "4022720"
  },
  {
    "text": "demo but um uh where was I it divid by zero when",
    "start": "4022720",
    "end": "4027920"
  },
  {
    "text": "I divide by zero it depends on whether the divide by zero interrupt is enabled",
    "start": "4027920",
    "end": "4033319"
  },
  {
    "text": "and so I didn't enable it so it just sets a bit in the in the arithmetic exception register and it Returns the it",
    "start": "4033319",
    "end": "4040920"
  },
  {
    "text": "it actually Returns the remainder equal to the original number and a quotient of zero",
    "start": "4040920",
    "end": "4046240"
  },
  {
    "text": "um which is which is kind of reasonable because the remainder uh I mean",
    "start": "4046240",
    "end": "4051720"
  },
  {
    "text": "likees and and the quoti is zero but that but that has the right effect actually the quot by",
    "start": "4051720",
    "end": "4058440"
  },
  {
    "text": "coincidence it it it it says the thing is um um it's actually uh it's actually",
    "start": "4058440",
    "end": "4065559"
  },
  {
    "text": "a in U but now see there's two there's two things in the Divide unit here right this is at cycle 525 so let me uh let me",
    "start": "4065559",
    "end": "4073000"
  },
  {
    "text": "stop it and look at cycle 525 the",
    "start": "4073000",
    "end": "4078480"
  },
  {
    "text": "emac um sorry I got to get emac up here don't I okay so this is",
    "start": "4079960",
    "end": "4088520"
  },
  {
    "text": "primes x. out",
    "start": "4088520",
    "end": "4094160"
  },
  {
    "text": "525 um slow machine it's a it's a",
    "start": "4095759",
    "end": "4103679"
  },
  {
    "text": "um I actually have much many more than 2,000 Cycles on here so this is 13",
    "start": "4103679",
    "end": "4108758"
  },
  {
    "text": "megabyte file but it should it should come",
    "start": "4108759",
    "end": "4113480"
  },
  {
    "text": "up any questions while we're waiting let me let me I wanted to say one uh",
    "start": "4115279",
    "end": "4122318"
  },
  {
    "text": "um one important okay cycle 525 so it says it is got in the reorder buffer has",
    "start": "4122319",
    "end": "4128600"
  },
  {
    "text": "a division instruction dividing 9 by",
    "start": "4128600",
    "end": "4134159"
  },
  {
    "text": "3 um and um dividing 9 by three and it says yeah",
    "start": "4134159",
    "end": "4142880"
  },
  {
    "text": "and the the other division instruction is dividing 9 by five second divide got squashed because 9 three oh because oh",
    "start": "4142880",
    "end": "4150758"
  },
  {
    "text": "that's right uh very good so after it finds out the remainder is zero then uh",
    "start": "4150759",
    "end": "4156679"
  },
  {
    "text": "this is speculative execution so the so the division so so second division wasn't really necessary uh and it it it",
    "start": "4156679",
    "end": "4163758"
  },
  {
    "text": "could be decom could be de issued and so so uh how do you actually do animate the",
    "start": "4163759",
    "end": "4168798"
  },
  {
    "text": "de ISU let's watch it it looks very much like a commit which is regrettable oh okay so so we",
    "start": "4168799",
    "end": "4176159"
  },
  {
    "text": "don't okay so so so there's a way to actually things um things go out of the",
    "start": "4176159",
    "end": "4181880"
  },
  {
    "text": "reorder buffer at the bottom if there if you find out that uh that that something",
    "start": "4181880",
    "end": "4187000"
  },
  {
    "text": "in the middle of the reorder buffer was a branch instruction that went the unexpected way then you empty the reorder buffer from the bottom up um uh",
    "start": "4187000",
    "end": "4195880"
  },
  {
    "text": "and the reason is that you have to undo the data structure um uh in fact uh the",
    "start": "4195880",
    "end": "4201480"
  },
  {
    "text": "uh the reorder buffer is has to be has to be tricky there can be a lot of things referring to the same register in",
    "start": "4201480",
    "end": "4206679"
  },
  {
    "text": "that in that in that Rea buffer uh let me let me show you uh see if we can get this on the screen u u read order buffer",
    "start": "4206679",
    "end": "4215880"
  },
  {
    "text": "like here suppose that there might be there might be many instructions in here which uh this this instruction might say",
    "start": "4215880",
    "end": "4222400"
  },
  {
    "text": "set register zero to something or other you know some another one says register zero to",
    "start": "4222400",
    "end": "4228360"
  },
  {
    "text": "something another one says register zero so four instructions might might be affecting register zero in here all the",
    "start": "4228360",
    "end": "4234600"
  },
  {
    "text": "instructions in between uh all the instructions from here on refer to this register zero but",
    "start": "4234600",
    "end": "4241400"
  },
  {
    "text": "all the inspections in here are refer to this one all inspections in here refer to that one and so on so so that's why",
    "start": "4241400",
    "end": "4247920"
  },
  {
    "text": "they they have what they call rename registers rename register holds the the the the the uh everything uh in here is",
    "start": "4247920",
    "end": "4255360"
  },
  {
    "text": "pointing to the rename register uh for this result and so on so so the uh when you when you um uh",
    "start": "4255360",
    "end": "4264679"
  },
  {
    "text": "when you de isue instruction you want to do it from the bottom uh so that uh uh so that things will now now start",
    "start": "4264679",
    "end": "4271280"
  },
  {
    "text": "pointing to this rename register okay uh and as I was writing the simulator it it taught me an important lesson that uh",
    "start": "4271280",
    "end": "4278880"
  },
  {
    "text": "that writing a simulator like this with lots of parameters and lots of possibilities in the config in the",
    "start": "4278880",
    "end": "4284840"
  },
  {
    "text": "configuration was was in some way I'm much more confident about it than if I were",
    "start": "4284840",
    "end": "4290000"
  },
  {
    "text": "writing a simulator for an actual machine that had only a certain number of LSUS and fpus and things like this",
    "start": "4290000",
    "end": "4296239"
  },
  {
    "text": "because I had to think big I had to think of a reorder buffer that was a th000 lines long and and I had to think",
    "start": "4296239",
    "end": "4303960"
  },
  {
    "text": "of of of of of cases like this which would never occur in a I mean in practice on a on a real machine maybe",
    "start": "4303960",
    "end": "4311560"
  },
  {
    "text": "only a certain register might never be able to be used more than twice or something like that and the hardware",
    "start": "4311560",
    "end": "4317199"
  },
  {
    "text": "wouldn't have to implement the general scheme but in order to know that my algorithms were correct I had to make",
    "start": "4317199",
    "end": "4323000"
  },
  {
    "text": "them work in in the case where you had a huge number of of of of of possibilities",
    "start": "4323000",
    "end": "4328040"
  },
  {
    "text": "and this meant that I that that I was uh that was much easier to visualize the general case if I was thinking small all",
    "start": "4328040",
    "end": "4334880"
  },
  {
    "text": "the time I would be I every weekend I would found another bug oh I forgot this",
    "start": "4334880",
    "end": "4340400"
  },
  {
    "text": "could have been bigger and so so um uh there's a great Advantage actually in in in in uh implementing something more",
    "start": "4340400",
    "end": "4346840"
  },
  {
    "text": "General than you actually will ever build because because that that forces you to think and and makes it actually",
    "start": "4346840",
    "end": "4352360"
  },
  {
    "text": "intuitively clear what the what the uh what the what the hard cases are that you have to handle uh when you miss",
    "start": "4352360",
    "end": "4359719"
  },
  {
    "text": "speculate do you immediate you clear only the portion of the reorder buff",
    "start": "4359719",
    "end": "4364760"
  },
  {
    "text": "with that need you immediately deal with misul what I do is I I say um I I say I",
    "start": "4364760",
    "end": "4371920"
  },
  {
    "text": "I've got to theissue five things or whatever it is you don't wait for the incorrect instruction just to Bubble to",
    "start": "4371920",
    "end": "4377600"
  },
  {
    "text": "the top no no I what I do yeah well I um you I what I do is though I before I",
    "start": "4377600",
    "end": "4385760"
  },
  {
    "text": "commit anything more um I I I go from the bottom so so so the the general",
    "start": "4385760",
    "end": "4391480"
  },
  {
    "text": "psycle says is there anything to deiss then deiss um is there anything to",
    "start": "4391480",
    "end": "4397960"
  },
  {
    "text": "commit then commit but but but priority goes to deiss youing because I I I think I want to get you know I want to get",
    "start": "4397960",
    "end": "4403679"
  },
  {
    "text": "things uh things going you have to undo the renames and I and I have to undo the renames in reverse",
    "start": "4403679",
    "end": "4409080"
  },
  {
    "text": "order right uh that's uh but but uh the information was there uh and it was you",
    "start": "4409080",
    "end": "4417320"
  },
  {
    "text": "know in instead of letting it know so so it's a trade-off as to whether I want to whether I want to let it bubble all the",
    "start": "4417320",
    "end": "4422679"
  },
  {
    "text": "way up to top but but I wanted to to start the fetch going at the right address as soon as I could and and and",
    "start": "4422679",
    "end": "4428280"
  },
  {
    "text": "stuff so so uh that's the way I I implemented it and there certainly uh",
    "start": "4428280",
    "end": "4433920"
  },
  {
    "text": "all the way through the simulator there were there were trade-offs there were decisions like that to design this one",
    "start": "4433920",
    "end": "4439239"
  },
  {
    "text": "was the one that I that I chose but uh um I not saying it's the it's the right or only way yeah good question yeah does",
    "start": "4439239",
    "end": "4447520"
  },
  {
    "text": "the mimic machine keep track of the addresses of each of the instructions that is executed uh that travels along",
    "start": "4447520",
    "end": "4454480"
  },
  {
    "text": "with the um yeah that travels along you know I uh in the reorder buffer uh uh I",
    "start": "4454480",
    "end": "4462360"
  },
  {
    "text": "I I keep U the arithmetic exception uh possible interrupts an interrupt if",
    "start": "4462360",
    "end": "4468400"
  },
  {
    "text": "you if an interrupt occurs you still don't know if if it's going to be real because it might not get to the hot seat",
    "start": "4468400",
    "end": "4473880"
  },
  {
    "text": "but uh but but things like things like the instruction location are carried along with um it can be implicit of",
    "start": "4473880",
    "end": "4479840"
  },
  {
    "text": "course uh in Hardware but in software I might as well might as well show the whole thing okay so C primes what am I",
    "start": "4479840",
    "end": "4487480"
  },
  {
    "text": "doing XX right uh now this this our last this",
    "start": "4487480",
    "end": "4493440"
  },
  {
    "text": "last example is for for the um uh is",
    "start": "4493440",
    "end": "4498800"
  },
  {
    "text": "where I I again have this divide unit but I and the same specs as before but I",
    "start": "4498800",
    "end": "4506000"
  },
  {
    "text": "changed my I changed my program U so that it sort of doubles up the loop",
    "start": "4506000",
    "end": "4512040"
  },
  {
    "text": "again not not not quite as it's actually simpler I I divide by three uh by three",
    "start": "4512040",
    "end": "4518400"
  },
  {
    "text": "numbers uh at a time so suppose you're trying to check if say uh 20 U uh 29 is",
    "start": "4518400",
    "end": "4525320"
  },
  {
    "text": "prime it would divide by 3 5 and 7even then it would test to see is the is the",
    "start": "4525320",
    "end": "4530600"
  },
  {
    "text": "quot quotient less than the divisor then it would divide by the next three and then it would say is the quot list in",
    "start": "4530600",
    "end": "4536520"
  },
  {
    "text": "diviser this means that um there are fewer instructions in between uh for for",
    "start": "4536520",
    "end": "4541800"
  },
  {
    "text": "for Loop uh bookkeeping and you know few fewer times that I'm actually checking the quoti against the diviser uh in the",
    "start": "4541800",
    "end": "4548639"
  },
  {
    "text": "in the in the loop and um uh so we can watch what happens at a typical point",
    "start": "4548639",
    "end": "4555159"
  },
  {
    "text": "this more unnecessary device uh yes I can do more unnecessary devid but uh you",
    "start": "4555159",
    "end": "4560760"
  },
  {
    "text": "see the pipeline with this pipeline uh uh it actually doesn't cost because",
    "start": "4560760",
    "end": "4567080"
  },
  {
    "text": "because the other the unnecessary divides are you know are sort of mass so so uh yeah interesting tradeoffs um are",
    "start": "4567080",
    "end": "4575840"
  },
  {
    "text": "going on like for for example here I have three things now uh in the divide",
    "start": "4575840",
    "end": "4581440"
  },
  {
    "text": "in the Divide que and every 10 Cycles they'll they'll advance ADV um and uh",
    "start": "4581440",
    "end": "4587360"
  },
  {
    "text": "but but uh you know if I had to divide by 10 things before before before finding out this time I'll divide by um",
    "start": "4587360",
    "end": "4595159"
  },
  {
    "text": "uh before finding out something's Prime I'll divide by 12 now I round up to the next higher multiple of three but if",
    "start": "4595159",
    "end": "4601239"
  },
  {
    "text": "it's not prime I cut off right away anyway because uh the the remainder will",
    "start": "4601239",
    "end": "4607320"
  },
  {
    "text": "be found to be zero uh uh the remainder will be found",
    "start": "4607320",
    "end": "4613480"
  },
  {
    "text": "to be zero while it's sitting here in the reorder buffer and it will it'll it'll it'll squash the other",
    "start": "4613480",
    "end": "4619199"
  },
  {
    "text": "device uh so",
    "start": "4619199",
    "end": "4625239"
  },
  {
    "text": "um I guess it's not quite as fast I um so now here I have only one division",
    "start": "4625239",
    "end": "4631840"
  },
  {
    "text": "going on that one that one uh disappeared turned out to be unnecessary because of the result of",
    "start": "4631840",
    "end": "4638719"
  },
  {
    "text": "another test pretty soon we'll fill up another another device we're issuing three instructions at a time here so so",
    "start": "4638719",
    "end": "4644920"
  },
  {
    "text": "now you see the the the Peri the periodic pattern of the pink here are",
    "start": "4644920",
    "end": "4651000"
  },
  {
    "text": "the Divide how many things we have in the you know how many divides are pending often three um and the the dark",
    "start": "4651000",
    "end": "4658040"
  },
  {
    "text": "green are the uh are the uh things that are waiting to be loaded the trial",
    "start": "4658040",
    "end": "4664040"
  },
  {
    "text": "devisers and the light green are the trivial bookkeeping operations and the",
    "start": "4664040",
    "end": "4669320"
  },
  {
    "text": "in the branches tests and things like that and every vertical line is when I found a prime and there will be another",
    "start": "4669320",
    "end": "4676480"
  },
  {
    "text": "glitch when I found a non Prime like here that that shows in the trace okay",
    "start": "4676480",
    "end": "4683040"
  },
  {
    "text": "so that so uh uh you can before we before we saw this we had",
    "start": "4683040",
    "end": "4689880"
  },
  {
    "text": "no real idea what was going to happen with the with the algorithm and um you",
    "start": "4689880",
    "end": "4694960"
  },
  {
    "text": "know it um you might look and say oh the fetch buffer is full now maybe we maybe",
    "start": "4694960",
    "end": "4700120"
  },
  {
    "text": "we should have a bigger fetch buffer because if we had a bigger fetch buffer it would start fetching more instruction after but that wouldn't do a do a bit of",
    "start": "4700120",
    "end": "4707280"
  },
  {
    "text": "good as far as uh getting these guys uh unjammed because this waiting on this",
    "start": "4707280",
    "end": "4712440"
  },
  {
    "text": "divide up here and it would okay so um now I just",
    "start": "4712440",
    "end": "4719159"
  },
  {
    "text": "want to compare the three um all the the three prime um strip charts so that you",
    "start": "4719159",
    "end": "4725400"
  },
  {
    "text": "can see any questions before I set this one",
    "start": "4725400",
    "end": "4730480"
  },
  {
    "text": "down okay Prime",
    "start": "4730480",
    "end": "4736719"
  },
  {
    "text": "X so no I'm sorry um what is it is that",
    "start": "4738520",
    "end": "4743639"
  },
  {
    "text": "the CP is that what what yes okay CP okay so this",
    "start": "4743639",
    "end": "4750280"
  },
  {
    "text": "is um all right so um at the top was the",
    "start": "4750280",
    "end": "4757239"
  },
  {
    "text": "case where I where I tripled up the loop and divide by three things at a time here's where I'm dividing by by only one",
    "start": "4757239",
    "end": "4763480"
  },
  {
    "text": "thing at a time but I still have this super scaler effect where uh and and you know several divides can be going at",
    "start": "4763480",
    "end": "4770040"
  },
  {
    "text": "once and the and the other one was this guy uh which is the case where the",
    "start": "4770040",
    "end": "4777040"
  },
  {
    "text": "Divide unit was was taking whole 60 cycles and not pipeline of course it's very difficult",
    "start": "4777040",
    "end": "4783159"
  },
  {
    "text": "to to pipeline a divide you I'm not saying that there there is an easy way to pipeline to divide so",
    "start": "4783159",
    "end": "4789120"
  },
  {
    "text": "that you could do 10 10 10 10 but if you could um this is what you would this is how much you would gain in so you see",
    "start": "4789120",
    "end": "4795080"
  },
  {
    "text": "the primes are popping along somewhat faster not six times faster though the best way to make it six times faster is",
    "start": "4795080",
    "end": "4800840"
  },
  {
    "text": "to figure out how to do a divide in 10",
    "start": "4800840",
    "end": "4804840"
  },
  {
    "text": "Cycles so anyway this is uh this is something that uh amazingly the demo",
    "start": "4809080",
    "end": "4814520"
  },
  {
    "text": "didn't break uh so far and uh so we got to give a big hand to Robert and",
    "start": "4814520",
    "end": "4821120"
  },
  {
    "text": "Chris and uh the other thing I wanted to announce is that uh during the next few",
    "start": "4823280",
    "end": "4829360"
  },
  {
    "text": "weeks I'm going to make some be making some critical decisions about uh uh you",
    "start": "4829360",
    "end": "4834639"
  },
  {
    "text": "know things about uh the MX uh uh as I as it comes out and I so I I want to",
    "start": "4834639",
    "end": "4842040"
  },
  {
    "text": "have people to bounce ideas off of and to challenge my my opinions and so on so I'm planning to have a gathering at my",
    "start": "4842040",
    "end": "4848960"
  },
  {
    "text": "house on Saturday at least one or two Saturday one Saturday uh and uh probably",
    "start": "4848960",
    "end": "4854880"
  },
  {
    "text": "the 27th of this month so if people no this is only for people who are really seriously going to volunteer and you",
    "start": "4854880",
    "end": "4861840"
  },
  {
    "text": "know want to uh not not just uh you know uh uh to to be there as a as a Observer",
    "start": "4861840",
    "end": "4869360"
  },
  {
    "text": "but actually as a as as a you know somebody willing to to to uh put time",
    "start": "4869360",
    "end": "4875480"
  },
  {
    "text": "into U into helping me get MX uh uh you know before I make too many bad mistakes",
    "start": "4875480",
    "end": "4881520"
  },
  {
    "text": "but but uh uh if uh if you're are interested uh this will be probably",
    "start": "4881520",
    "end": "4887000"
  },
  {
    "text": "arranged through the MX Masters homepage which is pointed to on my MX",
    "start": "4887000",
    "end": "4892520"
  },
  {
    "text": "page um and if if the date changes that'll be announced there too anyway",
    "start": "4892520",
    "end": "4897920"
  },
  {
    "text": "that's that's coming up in in about 3 weeks any other questions yeah I have",
    "start": "4897920",
    "end": "4904800"
  },
  {
    "text": "actually two questions okay first of all uh I remember that 25 years ago I played with special languages for simulation",
    "start": "4904800",
    "end": "4911920"
  },
  {
    "text": "languages so why didn't you use one of the I bet they they didn't die in 25",
    "start": "4911920",
    "end": "4917159"
  },
  {
    "text": "years they probably become stronger and faster I and the second question okay it",
    "start": "4917159",
    "end": "4922280"
  },
  {
    "text": "may even I understand you love to see C++ maybe this is the answer but um the",
    "start": "4922280",
    "end": "4928560"
  },
  {
    "text": "second question is uh there are new technologies on the horizon for instance meet with very long construction work",
    "start": "4928560",
    "end": "4935199"
  },
  {
    "text": "and as I understand the main quest in design of uh new CPUs right now is to",
    "start": "4935199",
    "end": "4940440"
  },
  {
    "text": "have as much as possible of real estate on the Chip And to utilize it efficiently to make it working all",
    "start": "4940440",
    "end": "4945880"
  },
  {
    "text": "together to get more speed more more out of it so how extensible is your model",
    "start": "4945880",
    "end": "4951719"
  },
  {
    "text": "for instance will would be able to cover uh things like meret you know new features on meret this kind of things um",
    "start": "4951719",
    "end": "4959600"
  },
  {
    "text": "so I I addressed that some of that in in the previous lecture where my my main",
    "start": "4959600",
    "end": "4964760"
  },
  {
    "text": "goal is to is to have a good model that someone can can learn and enjoy programming in and not to not to get the",
    "start": "4964760",
    "end": "4971520"
  },
  {
    "text": "maximum speed for all applications so I want a general purpose computer that's",
    "start": "4971520",
    "end": "4976840"
  },
  {
    "text": "that's uh that uh uh reflects the risk methodology but not to be the best for f",
    "start": "4976840",
    "end": "4983719"
  },
  {
    "text": "transforms or or you know or some kind of uh of some kind of thing where where",
    "start": "4983719",
    "end": "4990320"
  },
  {
    "text": "uh special applic you know um physicist uh number crunching calculations uh so",
    "start": "4990320",
    "end": "4998120"
  },
  {
    "text": "I'm not trying to have the fastest uh computer for for particular applications",
    "start": "4998120",
    "end": "5004159"
  },
  {
    "text": "that are of high economic interest I'm most interested in having a nice clean",
    "start": "5004159",
    "end": "5009880"
  },
  {
    "text": "um um understandable uh",
    "start": "5009880",
    "end": "5015159"
  },
  {
    "text": "realistic uh model of of a computer before before they get ugly and so so so",
    "start": "5015159",
    "end": "5021760"
  },
  {
    "text": "so so um uh now as far as simulation languages go um yeah I I uh actually um",
    "start": "5021760",
    "end": "5030040"
  },
  {
    "text": "uh also had a simulation language called so simulation oriented language which I withdrew when I learned about simula 1",
    "start": "5030040",
    "end": "5037440"
  },
  {
    "text": "because I felt simula was was a big Advance on it uh which you know you know simula 67 actually um was after simula 1",
    "start": "5037440",
    "end": "5046400"
  },
  {
    "text": "but simula 1 was was sufficiently better than my so that I said why should I work",
    "start": "5046400",
    "end": "5052719"
  },
  {
    "text": "on so anymore and that was in simula one 667 was the beginning of uh",
    "start": "5052719",
    "end": "5058000"
  },
  {
    "text": "objectoriented programming you know um uh now um however uh you know with my",
    "start": "5058000",
    "end": "5064520"
  },
  {
    "text": "knowledge of simulation I still would would uh have done um this particular",
    "start": "5064520",
    "end": "5070440"
  },
  {
    "text": "Simulator the way I did um I I but u i",
    "start": "5070440",
    "end": "5075600"
  },
  {
    "text": "I'll publish it and somebody can do what I did in this program uh without you know using um using some other other",
    "start": "5075600",
    "end": "5083440"
  },
  {
    "text": "tools uh then uh that's great but uh but I but I I didn't uh see how I was going",
    "start": "5083440",
    "end": "5090960"
  },
  {
    "text": "to actually apply that object technology to actually do what I wanted to do because I had to cut I had",
    "start": "5090960",
    "end": "5098040"
  },
  {
    "text": "to uh well you could take my you know this",
    "start": "5098040",
    "end": "5103159"
  },
  {
    "text": "program is in C++ because it's in C but uh it doesn't mean that I got anything",
    "start": "5103159",
    "end": "5108239"
  },
  {
    "text": "that you know I I I um I wasn't able to use the automatic features provided by",
    "start": "5108239",
    "end": "5113840"
  },
  {
    "text": "some Library I had to I had to I still had to build my own building blocks but as I understand one of the",
    "start": "5113840",
    "end": "5121679"
  },
  {
    "text": "purposes of this work is to try to understand uh what problems arise in these kind of designs and to try to",
    "start": "5121679",
    "end": "5127800"
  },
  {
    "text": "solve them maybe mathematically just to come up with clean solutions for them and new technologist are coming up with",
    "start": "5127800",
    "end": "5134400"
  },
  {
    "text": "new problems you know yeah that will wa solution in this sense it would be nice if the model itself was extensible and",
    "start": "5134400",
    "end": "5141840"
  },
  {
    "text": "be able to that Hardware designers are invented literally every day yeah well uh I'm I'm",
    "start": "5141840",
    "end": "5149679"
  },
  {
    "text": "trying to do uh to do that by writing as a literate program which means that",
    "start": "5149679",
    "end": "5155400"
  },
  {
    "text": "people can understand what I did and and and uh but my attitude toward it is",
    "start": "5155400",
    "end": "5160960"
  },
  {
    "text": "rather than provide uh things that are blocks that black boxes that people plug",
    "start": "5160960",
    "end": "5166520"
  },
  {
    "text": "into other things I present something that that has open you know explain",
    "start": "5166520",
    "end": "5172719"
  },
  {
    "text": "what's inside of it and and you you you massage it with your text editor rather than uh including that incorporating as",
    "start": "5172719",
    "end": "5179360"
  },
  {
    "text": "a mod module that's my happens to be the way I you know I I approach mathematics the same way I some people think",
    "start": "5179360",
    "end": "5185360"
  },
  {
    "text": "mathematics mathematicians are supposed to uh to produce theorems and the only thing is to know the Annunciation of the",
    "start": "5185360",
    "end": "5191280"
  },
  {
    "text": "theorem and the conclusion of the theorem but to me the important thing is the proof of the theorem because in practice you have something that doesn't",
    "start": "5191280",
    "end": "5197800"
  },
  {
    "text": "really fit the hypothesis it's Clos and and you doesn't give you quite the result you want but it's close but if",
    "start": "5197800",
    "end": "5203440"
  },
  {
    "text": "you know the proof of the theorem you can adapt it to your situation and that's what I try to do with my programs",
    "start": "5203440",
    "end": "5208920"
  },
  {
    "text": "too no I was always mathematics as very organized way of thinking yeah not",
    "start": "5208920",
    "end": "5215880"
  },
  {
    "text": "necessar okay so running late professor could you say something",
    "start": "5215880",
    "end": "5221080"
  },
  {
    "text": "about uh how the pipeline advances every cycle can you say something about how",
    "start": "5221080",
    "end": "5226600"
  },
  {
    "text": "you organize it did you visit the entire pipeline so so the pipeline so the",
    "start": "5226600",
    "end": "5232639"
  },
  {
    "text": "functional units each are are either active or asleep but usually active",
    "start": "5232639",
    "end": "5238000"
  },
  {
    "text": "they're waiting for something and think of the cars in this in in in this shop",
    "start": "5238000",
    "end": "5243199"
  },
  {
    "text": "you know if there's uh you first of all uh if the car has to drive next into into the the thing on",
    "start": "5243199",
    "end": "5249560"
  },
  {
    "text": "the next blot then uh the guy on the next block has to get his car out of there so so you might be stalled because",
    "start": "5249560",
    "end": "5257000"
  },
  {
    "text": "uh because something in the next stage is already blocking you know those there's another group of people uh still",
    "start": "5257000",
    "end": "5262960"
  },
  {
    "text": "still work on it but if if that if if if there's not a stall for that reason you might be stalled because you're waiting",
    "start": "5262960",
    "end": "5268440"
  },
  {
    "text": "for one of your operands you can't add two numbers until the one the previous one has been computed um uh but soon as",
    "start": "5268440",
    "end": "5274800"
  },
  {
    "text": "but if you got your operands then you combine them and goes to the next step",
    "start": "5274800",
    "end": "5279920"
  },
  {
    "text": "um so so uh the the typical uh uh I mean you can take a look at my program but",
    "start": "5279920",
    "end": "5285239"
  },
  {
    "text": "the typical the typical thing says uh you know is such and such happen such",
    "start": "5285239",
    "end": "5290719"
  },
  {
    "text": "and such are ready Do It um otherwise wait and reschedule yourself for for the",
    "start": "5290719",
    "end": "5297360"
  },
  {
    "text": "next time and and so you have to wait for locks in the in the the the um these locks here uh uh are when there's",
    "start": "5297360",
    "end": "5305239"
  },
  {
    "text": "competition for resources and so and and you can also have a situation where one of the instructions in the in the",
    "start": "5305239",
    "end": "5311560"
  },
  {
    "text": "reorder buffer is um is waiting has has locked U uh the dcash or something like",
    "start": "5311560",
    "end": "5318320"
  },
  {
    "text": "that but it turns out that inspection was was issued on speculation it's not really necessary and so we have to",
    "start": "5318320",
    "end": "5325239"
  },
  {
    "text": "unlock the dcash when we when we cancel that that that thing that's but the",
    "start": "5325239",
    "end": "5330639"
  },
  {
    "text": "basic cycle is uh at every unit of time there's a bunch of co- routines in the program that each Co routine is in a",
    "start": "5330639",
    "end": "5337119"
  },
  {
    "text": "certain State like the load store uh if you you look at my emx thing it would",
    "start": "5337119",
    "end": "5343040"
  },
  {
    "text": "say uh it would show you that uh in exactly um here here you see that the",
    "start": "5343040",
    "end": "5350199"
  },
  {
    "text": "reorder buffer um so um there's wraparound because we we made a large",
    "start": "5350199",
    "end": "5357000"
  },
  {
    "text": "font but uh to divide uh it says at the end State equals 2 okay and it says",
    "start": "5357000",
    "end": "5363080"
  },
  {
    "text": "divide one col I mean it's in the fourth stage of the of the Divide pipeline um",
    "start": "5363080",
    "end": "5368800"
  },
  {
    "text": "and um uh uh it will",
    "start": "5368800",
    "end": "5373880"
  },
  {
    "text": "um uh and the next one is a get which is Says Z uh uh equals greater than R",
    "start": "5373880",
    "end": "5381400"
  },
  {
    "text": "register R it means it's waiting for the remainder register um has to go into operan Z from the and the remainder",
    "start": "5381400",
    "end": "5388400"
  },
  {
    "text": "register isn't ready yet because the remainder register is going to be computed by uh The Divide instruction",
    "start": "5388400",
    "end": "5395560"
  },
  {
    "text": "um now at the next at the next um uh at the next cycle um it it it it",
    "start": "5395560",
    "end": "5403119"
  },
  {
    "text": "runs the the right Co routine uh which is in state zero which means no you know sort of no initial State uh it's and it",
    "start": "5403119",
    "end": "5411679"
  },
  {
    "text": "finds nothing to do so it schedules itself for for time 527 in state zero uh",
    "start": "5411679",
    "end": "5417760"
  },
  {
    "text": "then it then alu1 uh is um is doing this get instruction uh it schedules it self for",
    "start": "5417760",
    "end": "5424320"
  },
  {
    "text": "the next time because the Z still isn't ready al2 um schedules itself at the next time",
    "start": "5424320",
    "end": "5430199"
  },
  {
    "text": "you know the these guys are just s sitting there waiting for the next time um and so so that wasn't a very",
    "start": "5430199",
    "end": "5435360"
  },
  {
    "text": "interesting time let's go for committing or something so so at cycle 553 um back to 553 U uh this this thing",
    "start": "5435360",
    "end": "5444920"
  },
  {
    "text": "this instruction was was no longer in it was it was in a hot seat and U no longer",
    "start": "5444920",
    "end": "5450719"
  },
  {
    "text": "in a in a fetch in in a in a functional unit so it's ready to commit itself and",
    "start": "5450719",
    "end": "5456159"
  },
  {
    "text": "then we start running the right instruction again nothing and then then these are do these things and then here",
    "start": "5456159",
    "end": "5462280"
  },
  {
    "text": "we issue a new instruction at uh that's sort of the the general General",
    "start": "5462280",
    "end": "5468639"
  },
  {
    "text": "cycle follow up on that is does time ever jump forward in increments greater than one uh well um it could but",
    "start": "5468639",
    "end": "5478280"
  },
  {
    "text": "uh not it's it's it's un it's it's unusual but they can go to sleep so so",
    "start": "5478280",
    "end": "5483920"
  },
  {
    "text": "so if it if it says running something and then uh like like this running",
    "start": "5483920",
    "end": "5489920"
  },
  {
    "text": "um uh okay running alu1 uh it didn't",
    "start": "5489920",
    "end": "5495800"
  },
  {
    "text": "wasn't followed by scheduling so that meant it actually either went to sleep or uh it finished in this case it",
    "start": "5495800",
    "end": "5502880"
  },
  {
    "text": "finished but if something is go if something is waiting for the decache to be filled it goes to sleep and the",
    "start": "5502880",
    "end": "5508719"
  },
  {
    "text": "decache filler wakes it up when uh so so um uh gives it a you know so that's the",
    "start": "5508719",
    "end": "5516840"
  },
  {
    "text": "technicality but uh uh it doesn't have to come up every every cycle but somebody will know to wake it",
    "start": "5516840",
    "end": "5525880"
  },
  {
    "text": "up and this is typical of simulation language type of things yeah if um if",
    "start": "5526560",
    "end": "5533360"
  },
  {
    "text": "dcash is um I mean first I you can you can write uh at one C cycle this uh data",
    "start": "5533360",
    "end": "5541639"
  },
  {
    "text": "into into dcat I guess uh data buff is not necessary is it correct I understand",
    "start": "5541639",
    "end": "5549239"
  },
  {
    "text": "that for example our our 3000 has a has a right buffer but uh it's basically the",
    "start": "5549239",
    "end": "5557239"
  },
  {
    "text": "thec is very SL at that at that time so",
    "start": "5557239",
    "end": "5563159"
  },
  {
    "text": "is different yeah there's different you you so the dcash has input and output I",
    "start": "5563159",
    "end": "5569239"
  },
  {
    "text": "mean you have to put something new into the dcash and then there's time when you flush the D cach down to the sash or",
    "start": "5569239",
    "end": "5576480"
  },
  {
    "text": "something like that um and um the um",
    "start": "5576480",
    "end": "5581840"
  },
  {
    "text": "when you're flushing the D when you're flushing the dcash down to the next level of of the hierarchy with either",
    "start": "5581840",
    "end": "5588159"
  },
  {
    "text": "memory or to sash uh then you um uh then it goes into a special",
    "start": "5588159",
    "end": "5594199"
  },
  {
    "text": "buffer uh uh and that and usually only one thing",
    "start": "5594199",
    "end": "5600480"
  },
  {
    "text": "is being flushed at a time uh when but and and so it goes into that special buffer right away and some and and and",
    "start": "5600480",
    "end": "5607320"
  },
  {
    "text": "usually that's because you want to replace it with some new information uh so when you write into",
    "start": "5607320",
    "end": "5612880"
  },
  {
    "text": "the dcat you have to usually you take the information that was previously in there if you're not just updating it you",
    "start": "5612880",
    "end": "5618639"
  },
  {
    "text": "have to you have to flush something else and that goes into this separate buffer and I and the separate buffer usually",
    "start": "5618639",
    "end": "5624239"
  },
  {
    "text": "has to has to be there because uh you don't know somebody else might be using the uh the sash or the memory that wants",
    "start": "5624239",
    "end": "5631040"
  },
  {
    "text": "to that wants to get it so this is called the victim buffer I think but usually they don't have two",
    "start": "5631040",
    "end": "5637679"
  },
  {
    "text": "buffers like that there's a lot of really interesting",
    "start": "5637679",
    "end": "5643280"
  },
  {
    "text": "but I I was going around in circles on a lot of this stuff uh because I couldn't figure out a truly elegant way to handle",
    "start": "5643280",
    "end": "5650119"
  },
  {
    "text": "all of the cases of caches considering all the possibilities that I can have right allocate right right around I could have right back right through and",
    "start": "5650119",
    "end": "5657280"
  },
  {
    "text": "all these things uh could be handling them and I and I and for five or six days I was spinning and spinning I",
    "start": "5657280",
    "end": "5662840"
  },
  {
    "text": "couldn't think of you know I I kept writing new drafts of the program and and tearing it up and say and I and",
    "start": "5662840",
    "end": "5668960"
  },
  {
    "text": "finally I decided the only way to do it is to throw code at the problem and you know write 10 pages of code for each",
    "start": "5668960",
    "end": "5674480"
  },
  {
    "text": "case and uh and that worked but uh but some but you know I would have liked to",
    "start": "5674480",
    "end": "5680560"
  },
  {
    "text": "find a truly elegant mathematical solution to to all parts of this it didn't didn't seem to be possible and",
    "start": "5680560",
    "end": "5685760"
  },
  {
    "text": "much more each each part of it is understandable by itself but the whole the whole package together uh adds adds",
    "start": "5685760",
    "end": "5693199"
  },
  {
    "text": "a has unavoidable complexity I think well thank you very much for",
    "start": "5693199",
    "end": "5701440"
  },
  {
    "text": "[Applause]",
    "start": "5705240",
    "end": "5708439"
  },
  {
    "text": "listening",
    "start": "5722639",
    "end": "5725639"
  },
  {
    "text": "e",
    "start": "5752639",
    "end": "5755639"
  },
  {
    "text": "e",
    "start": "5782560",
    "end": "5785560"
  },
  {
    "text": "e e",
    "start": "5812520",
    "end": "5816560"
  }
]