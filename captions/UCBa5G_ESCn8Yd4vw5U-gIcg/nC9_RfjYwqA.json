[
  {
    "start": "0",
    "end": "242000"
  },
  {
    "text": "Okay. Let's get started again. Okay. So welcome back to, um,",
    "start": "4970",
    "end": "11445"
  },
  {
    "text": "week three of CS224N. Okay. So we- we've got a bit of a change of pace today after week two.",
    "start": "11445",
    "end": "20760"
  },
  {
    "text": "So, um, this week in week three, we're actually going to have some human language,",
    "start": "20760",
    "end": "28205"
  },
  {
    "text": "and so this lecture has no partial derivative signs in it. And so we'll be moving away, um,",
    "start": "28205",
    "end": "35030"
  },
  {
    "text": "from sort of working out the so technicalities of doing, um, new networks and back propagation,",
    "start": "35030",
    "end": "42735"
  },
  {
    "text": "um, and a sort of math heavy week two. So then, this week, what we actually want- well,",
    "start": "42735",
    "end": "48855"
  },
  {
    "text": "in today's lecture, we want to look at, well, what kind of structures do human language sentences have,",
    "start": "48855",
    "end": "55455"
  },
  {
    "text": "and how we can build models that, um, build that kind of structure for sentences that we see.",
    "start": "55455",
    "end": "62989"
  },
  {
    "text": "Um, so first of all, I'm gonna sort of explain and motivate a bit about,",
    "start": "62990",
    "end": "68795"
  },
  {
    "text": "um, structure of human language sentences. So, that's kind of like, um, linguistics in 20 minutes or something.",
    "start": "68795",
    "end": "76040"
  },
  {
    "text": "Um, then going particularly focusing on dependency grammars, and then gonna present a method for doing dependency structure,",
    "start": "76040",
    "end": "83494"
  },
  {
    "text": "dependency grammar parsing called transition-based dependency parsing. And then talk about how you can make neural, um, dependency parsers.",
    "start": "83495",
    "end": "93795"
  },
  {
    "text": "Um, so, um, going on just, you know, a couple of announcements. So, assignment two was due one minute ago,",
    "start": "93795",
    "end": "102119"
  },
  {
    "text": "so I hope everyone's succeeded, um, in getting assignment two out of the way.",
    "start": "102120",
    "end": "107430"
  },
  {
    "text": "If you're still working on it, do make sure to make, um, use of the office hours and get help for that.",
    "start": "107430",
    "end": "112790"
  },
  {
    "text": "Coming out just today is assignment three. Um, assignment three, um,",
    "start": "112790",
    "end": "118640"
  },
  {
    "text": "is basically about this lecture. Um, so, [LAUGHTER] in assignment three, what you're doing is building a neural dependency parser,",
    "start": "118640",
    "end": "126993"
  },
  {
    "text": "and so we hope that you can put together what you learned about neural networks last week and the content of today,",
    "start": "126994",
    "end": "133444"
  },
  {
    "text": "and jump straight right in to building a neural dependency parser. Um, the other thing that happens in assignment three is that,",
    "start": "133445",
    "end": "141830"
  },
  {
    "text": "we start using a deep learning framework PyTorch. So, for doing assignment three, instruction zero,",
    "start": "141830",
    "end": "148680"
  },
  {
    "text": "and this is in the PDF for the assignment, is to install PyTorch as a Python package,",
    "start": "148680",
    "end": "154515"
  },
  {
    "text": "and start using that. Um, so we've attempted to make assignment three sort of be a highly scaffolded tutorial,",
    "start": "154515",
    "end": "163710"
  },
  {
    "text": "where you can start to learn how to do things in PyTorch by just, um, writing a few lines of code at a time.",
    "start": "163710",
    "end": "170730"
  },
  {
    "text": "Hopefully that works out for people. Um, if you have any issues with, with that, um, well,",
    "start": "170730",
    "end": "176580"
  },
  {
    "text": "obviously, you can send Piazza messages, come to office hours. I mean, the one other thing you could think of doing is that there's sort of",
    "start": "176580",
    "end": "182829"
  },
  {
    "text": "a one hour introduction to PyTorch on the PyTorch site, where you down- where you're directed for installing PyTorch,",
    "start": "182830",
    "end": "189895"
  },
  {
    "text": "and you could also look at that if that was maybe helpful. Um, now the final mentions, yes.",
    "start": "189895",
    "end": "196710"
  },
  {
    "text": "So, um, final projects, um, you know, we're going to sort of focus on those more in week five,",
    "start": "196710",
    "end": "202060"
  },
  {
    "text": "but if it's not bad to be thinking about things you could do, if you're under a custom final project.",
    "start": "202060",
    "end": "207144"
  },
  {
    "text": "You're certainly encouraged to come and talk to me or the TAs. We have under the sort of office hours page on the website,",
    "start": "207145",
    "end": "214314"
  },
  {
    "text": "a listing of the expertise of some of the different TAs. Um, since I missed my office hours yesterday,",
    "start": "214315",
    "end": "222220"
  },
  {
    "text": "I'm gonna have a shortened office hour tomorrow from 1:00 to 2:20. Um, that's at the same time as the,",
    "start": "222220",
    "end": "229490"
  },
  {
    "text": "um, normal CS224N, um, office hours, so you can kind of come for any reason you want,",
    "start": "229490",
    "end": "236300"
  },
  {
    "text": "but it might be especially good to come to me if you want to talk about, um, final projects. Okay. So, let's leap in and start talking about the structure of sentences.",
    "start": "236300",
    "end": "247475"
  },
  {
    "start": "242000",
    "end": "361000"
  },
  {
    "text": "And so, I just sort of want to explain something about human language sentence structure,",
    "start": "247475",
    "end": "255650"
  },
  {
    "text": "and how people think about that structure, and what kind of goals then people in natural language processing",
    "start": "255650",
    "end": "262775"
  },
  {
    "text": "have of sort of building structure to understand the meaning of sentences. Um, all of the examples I'm going to give today are in English,",
    "start": "262775",
    "end": "271890"
  },
  {
    "text": "um, because that's the language that you're all expected to have some competence in. But this really isn't meant to be sort of facts about English.",
    "start": "271890",
    "end": "279545"
  },
  {
    "text": "This is meant to be sort of ideas of how you can think about the structure of human language sentences that are applied to all sorts of languages.",
    "start": "279545",
    "end": "288145"
  },
  {
    "text": "Okay. So in general, there are two different ways that",
    "start": "288145",
    "end": "294410"
  },
  {
    "text": "linguists have thought about the structure of sentences, though there's some relations to them.",
    "start": "294410",
    "end": "299419"
  },
  {
    "text": "One of them is called phrase structure, or phrase structure grammars. And if you vaguely remember from CS103 if you did that,",
    "start": "299420",
    "end": "308479"
  },
  {
    "text": "when you spent about the lecture on context-free grammars, um, phrase structure grammars are using the tools of",
    "start": "308480",
    "end": "315050"
  },
  {
    "text": "context-free grammars to put structures over sentences. So, I'm first of all going to just briefly introduce that, so you've seen it,",
    "start": "315050",
    "end": "322669"
  },
  {
    "text": "but actually the main tool that we're going to use in this class and for assignment three,",
    "start": "322670",
    "end": "327699"
  },
  {
    "text": "is to do put dependency structures over, um, sentences, so I'll then go about that.",
    "start": "327700",
    "end": "333110"
  },
  {
    "text": "So, the idea of phrase structure is to say that sentences are built out of units that progressively nest.",
    "start": "333110",
    "end": "340810"
  },
  {
    "text": "So, we start off with words that, cat, cuddly, et cetera, and then we're gonna put them into bigger units that we call phrases,",
    "start": "340810",
    "end": "348280"
  },
  {
    "text": "like \"The cuddly cat by the door\", and then you can keep on combining those up into even bigger phrases,",
    "start": "348280",
    "end": "354190"
  },
  {
    "text": "like, \"The cuddly cat by the door.\" Um, [NOISE] Okay, that's that.",
    "start": "354190",
    "end": "360660"
  },
  {
    "text": "So, how does this work? Well, so the idea of it, and this is sort of the way linguists thinks,",
    "start": "360660",
    "end": "366570"
  },
  {
    "start": "361000",
    "end": "756000"
  },
  {
    "text": "is to say, \"Well, here's this language, which, you know, might not be English.",
    "start": "366570",
    "end": "372465"
  },
  {
    "text": "It might be Oaxacan or some other language. What kind of structure does it have? And well, we could look at lots of sentences of the language.",
    "start": "372465",
    "end": "381985"
  },
  {
    "text": "And so the linguist is gonna think, \"Well, I can see, um, patterns, like the cat,",
    "start": "381985",
    "end": "388485"
  },
  {
    "text": "a dog, the dog, a cat, et cetera. So, it's sort of seems like there's one word class here,",
    "start": "388485",
    "end": "394940"
  },
  {
    "text": "which linguists often referred to as determiners. Um, they're also referred to as article sometimes in English.",
    "start": "394940",
    "end": "400700"
  },
  {
    "text": "There's another word class here of nouns. And so, what I- to capture this pattern here,",
    "start": "400700",
    "end": "408295"
  },
  {
    "text": "it seems like we can make this unit, um, that I see all over the place in language, um,",
    "start": "408295",
    "end": "415025"
  },
  {
    "text": "which is made of a, um, a determiner, followed by a noun.",
    "start": "415025",
    "end": "420340"
  },
  {
    "text": "So, I've write, um, a phrase structure grammar role, a context-free grammar role of- I can have",
    "start": "420340",
    "end": "427490"
  },
  {
    "text": "a noun phrase that goes to a determiner, and a noun. Okay. But, you know,",
    "start": "427490",
    "end": "432794"
  },
  {
    "text": "that's not the only thing that I can, um, see. So, I can also see, um,",
    "start": "432795",
    "end": "440870"
  },
  {
    "text": "other examples in my language of the large cat, or a barking dog,",
    "start": "440870",
    "end": "445955"
  },
  {
    "text": "or the cuddly cat, the cuddly dog. So, that seems that I need to put a bit more stuff into my grammar.",
    "start": "445955",
    "end": "453080"
  },
  {
    "text": "So, maybe I can say from my grammar that a noun phrase goes to a determiner,",
    "start": "453080",
    "end": "458430"
  },
  {
    "text": "and then optionally, you can put in an adjective, and then you can have a noun. And then I poke around a little bit further and I",
    "start": "458430",
    "end": "465800"
  },
  {
    "text": "can find examples like the cat in a crate, or a barking dog by the door.",
    "start": "465800",
    "end": "472220"
  },
  {
    "text": "And I can see lots of sentences like this. And so I want to put those into my grammar.",
    "start": "472220",
    "end": "478470"
  },
  {
    "text": "But at that point, I noticed something special, because look, here are some other things,",
    "start": "478470",
    "end": "484245"
  },
  {
    "text": "and these things look a lot like the things I started off with. So, it seems like,",
    "start": "484245",
    "end": "489590"
  },
  {
    "text": "which sort of having a phrase with the same expansion potential that's nested inside this bigger phrase,",
    "start": "489590",
    "end": "497840"
  },
  {
    "text": "because these ones can also be, um, expanded, right? I could have something like the green door something in here.",
    "start": "497840",
    "end": "504720"
  },
  {
    "text": "So, I just wanna capture that in some way. So, maybe I could say that a noun phrase goes to a determiner,",
    "start": "504720",
    "end": "512885"
  },
  {
    "text": "optionally an adjective, a noun, and then a something else, which I'll call a prepositional phrase.",
    "start": "512885",
    "end": "519930"
  },
  {
    "text": "And then I'm gonna write a second rule saying that a prepositional phrase goes to a preposition,",
    "start": "519930",
    "end": "526820"
  },
  {
    "text": "that's gonna be these words here, um, followed by a noun phrase.",
    "start": "526820",
    "end": "533595"
  },
  {
    "text": "So then I'm reuse- [NOISE] I'm reusing my noun phrase that I defined up here.",
    "start": "533595",
    "end": "540980"
  },
  {
    "text": "So then I could immediately generate other stuff. I can sort of say, \"The cat by the, the large door.\"",
    "start": "540980",
    "end": "550515"
  },
  {
    "text": "Or indeed I could say, \"The cat by the large crate.\" Um, \"The cat by the large crate on the table\",",
    "start": "550515",
    "end": "558990"
  },
  {
    "text": "or something like that, because once I can have the prepositional phrase includes a noun phrase, and a noun phrase includes a prepositional phrase,",
    "start": "558990",
    "end": "566960"
  },
  {
    "text": "I've already got something that I can kind of recursively go back and forth between noun phrases,",
    "start": "566960",
    "end": "573649"
  },
  {
    "text": "and I can make infinitely big sentences, right? Yeah?",
    "start": "573650",
    "end": "579090"
  },
  {
    "text": "Yeah? So, I could write something like, yeah, \"The cat by",
    "start": "579090",
    "end": "586690"
  },
  {
    "text": "the large crate on the,",
    "start": "586690",
    "end": "595110"
  },
  {
    "text": "um, large table, um, by the door.\"",
    "start": "595120",
    "end": "602410"
  },
  {
    "text": "Right. I can keep on going and make big sentences. And I could say, well,",
    "start": "602410",
    "end": "608149"
  },
  {
    "text": "I've got a- I don't have space to fit it on this slide, but I've got an analysis of this according to my grammar,",
    "start": "608150",
    "end": "615680"
  },
  {
    "text": "where that's a noun phrase goes to a determiner noun prepositional phrase.",
    "start": "615680",
    "end": "621110"
  },
  {
    "text": "The prepositional phrase goes to a preposition, and a noun phrase, and this noun phrase goes to a determiner,",
    "start": "621110",
    "end": "627920"
  },
  {
    "text": "adjective, noun prepositional phrase. And that goes to a preposition,",
    "start": "627920",
    "end": "635040"
  },
  {
    "text": "and another noun phrase, and I keep on going and I can produce big sentences.",
    "start": "635040",
    "end": "640269"
  },
  {
    "text": "Okay. You know, that kind of then continues on,",
    "start": "640270",
    "end": "645570"
  },
  {
    "text": "because, um, you know, I can then start seeing more bits of grammar.",
    "start": "645570",
    "end": "650970"
  },
  {
    "text": "So, I could say, \"Well, I can now talk to the cat.\" Um, and so if I wanna capture,",
    "start": "650970",
    "end": "656760"
  },
  {
    "text": "um, this talking to a cat here, well, that now means I've got a verb,",
    "start": "656760",
    "end": "662100"
  },
  {
    "text": "because words like talk and walk are verbs. And then talk to the cat,",
    "start": "662100",
    "end": "667830"
  },
  {
    "text": "it seems like after that, it could become a prepositional phrase. And so I could write another rule saying that a verb phrase",
    "start": "667830",
    "end": "674555"
  },
  {
    "text": "goes to a verb followed by a prepositional phrase. And then I can make more bigger sentences like that.",
    "start": "674555",
    "end": "681110"
  },
  {
    "text": "And I could look at more sentences of the language and start building up these,",
    "start": "681110",
    "end": "687060"
  },
  {
    "text": "these context-free grammar rules to describe the structure of the language.",
    "start": "687060",
    "end": "692310"
  },
  {
    "text": "And that's part of what linguists do, and different languages, um, have different structures.",
    "start": "692310",
    "end": "698464"
  },
  {
    "text": "So, um, for example, like in this, uh, little grammar I've had and in general in English, um,",
    "start": "698465",
    "end": "706620"
  },
  {
    "text": "what you do, what you find is that prepositional phrases following the verb.",
    "start": "706620",
    "end": "711995"
  },
  {
    "text": "But if you go to a different language like Chinese, what you find is the prepositional phrases come before the verb.",
    "start": "711995",
    "end": "717980"
  },
  {
    "text": "And so, we could say okay, there are different rules for Chinese, um, and I could start writing a context-free grammar for them. Okay, beauty.",
    "start": "717980",
    "end": "727305"
  },
  {
    "text": "Um,so that's the idea of context-free grammars, and actually, you know, this is the dominant approached linguistic structure",
    "start": "727305",
    "end": "735980"
  },
  {
    "text": "that you'll see if you go and do a linguistics class in the linguistics department, people make these kinds of Phrase Structure Grammar trees.",
    "start": "735980",
    "end": "744180"
  },
  {
    "text": "Um, but just to be contrary, no, it's not actually just to be contrary, it's because this alternative approach has been",
    "start": "744180",
    "end": "750660"
  },
  {
    "text": "very dominant in computational linguistics. What I'm going to show you instead, um,",
    "start": "750660",
    "end": "756625"
  },
  {
    "start": "756000",
    "end": "932000"
  },
  {
    "text": "is the view point of dependency structure. So, the idea of dependency structure",
    "start": "756625",
    "end": "764100"
  },
  {
    "text": "is rather than having these sort of phrasal categories, like, noun phrases and prepositional phrases,",
    "start": "764100",
    "end": "770314"
  },
  {
    "text": "and things like that, we are going to directly, um, represent the structure of sentences by saying,",
    "start": "770314",
    "end": "778945"
  },
  {
    "text": "how words, how arguments or modifiers of other words in a recursive faction.",
    "start": "778945",
    "end": "785630"
  },
  {
    "text": "Which is sort of another way of saying how the dependence on other words. So, we have a sentence,",
    "start": "785630",
    "end": "791100"
  },
  {
    "text": "''Look in the large crate in the kitchen by the door''. And if we want to we can give these word,",
    "start": "791100",
    "end": "796300"
  },
  {
    "text": "words word classes, so we can still say this is a verb, and this is a preposition,",
    "start": "796300",
    "end": "801375"
  },
  {
    "text": "and this is a determiner, and this is an adjective, and this is a noun. But to represent the structure,",
    "start": "801375",
    "end": "807920"
  },
  {
    "text": "what we're going to say is, \"Well, look here is the the root of this whole sentence.\"",
    "start": "807920",
    "end": "815105"
  },
  {
    "text": "So, that's where things start. Um, and then, well, where are we going to look is in the large crate,",
    "start": "815105",
    "end": "822530"
  },
  {
    "text": "so that is a dependent of look. And well, if we- then we have for the crate,",
    "start": "822530",
    "end": "832799"
  },
  {
    "text": "it's got some modifies its a large crate. So, that's a dependent of crate. Its the large crate,",
    "start": "832799",
    "end": "839514"
  },
  {
    "text": "that's a dependence of crate. And in this system of dependencies I'm going to show you,",
    "start": "839515",
    "end": "845285"
  },
  {
    "text": "we've got in as kind of, um, a modifier of crate in the large crate.",
    "start": "845285",
    "end": "851360"
  },
  {
    "text": "I could come back to that. Well, but this crate has its own modification, because it's a crate in the kitchen.",
    "start": "851360",
    "end": "858385"
  },
  {
    "text": "So, we have, in the kitchen, as a modifier of crate.",
    "start": "858385",
    "end": "863910"
  },
  {
    "text": "And it's the kitchen in the kitchen, these are dependence of crate.",
    "start": "863910",
    "end": "869735"
  },
  {
    "text": "And well, then we have this next bit by the door. And as I'll discuss in a minute, well,",
    "start": "869735",
    "end": "876075"
  },
  {
    "text": "what does the by the door modifying? It's still modifying the crate, it saying, ''It's the crate by the door.''",
    "start": "876075",
    "end": "882770"
  },
  {
    "text": "Okay. So, the by the door is also a dependent of crate, and then we've got the structure of dependencies coming off of it.",
    "start": "882770",
    "end": "893775"
  },
  {
    "text": "Okay. And so that's then, um, the structure you get may be drawn a little bit more",
    "start": "893775",
    "end": "899010"
  },
  {
    "text": "neatly when I did that in advance like this. And so we call these things, uh, dependency structure.",
    "start": "899010",
    "end": "905790"
  },
  {
    "text": "And so crucially, what we're doing here, um, is that we're- sorry,",
    "start": "905790",
    "end": "914144"
  },
  {
    "text": "I had two different examples. [NOISE] different examples. [LAUGHTER] Um, um,",
    "start": "914145",
    "end": "919330"
  },
  {
    "text": "what we're doing is saying, what, what words modify other words?",
    "start": "919330",
    "end": "924840"
  },
  {
    "text": "And so, that allows us to sort of understand how the different parts of the sentence relate to each other.",
    "start": "924840",
    "end": "932570"
  },
  {
    "start": "932000",
    "end": "1053000"
  },
  {
    "text": "And so, overall, you know, then- let me just so say here, you might want to why do we need sentence structure?",
    "start": "932570",
    "end": "939920"
  },
  {
    "text": "You know, the way, um, language seems to work when you're talking to your friends is that you just blab of something,",
    "start": "939920",
    "end": "947429"
  },
  {
    "text": "and I understand what you're saying, and, um, what goes on beyond that, um,",
    "start": "947429",
    "end": "952995"
  },
  {
    "text": "is sort of not really accessible to consciousness. But well, to be able to have machines that interpret language correctly,",
    "start": "952995",
    "end": "961780"
  },
  {
    "text": "we sort of need to understand the structure of these sentences, because unless we know what words are arguments and modifiers of other words,",
    "start": "961780",
    "end": "970485"
  },
  {
    "text": "we can't actually work out what sentences mean. And I'll show some examples of that as to how things go wrong immediately,",
    "start": "970485",
    "end": "977260"
  },
  {
    "text": "because actually, a lot of the time there are different possible interpretations you can have. And so, in general,",
    "start": "977260",
    "end": "983495"
  },
  {
    "text": "our goal is, you know, up until now we've sort of looked at the meaning of words, right? We did word vectors,",
    "start": "983495",
    "end": "989140"
  },
  {
    "text": "and we found that words there was similar meaning, and things like that. Um, and you can get somewhere in human languages with just saying words.",
    "start": "989140",
    "end": "996959"
  },
  {
    "text": "I mean you can say, \"Hi\", and friendly, um, and things like that,",
    "start": "996960",
    "end": "1004350"
  },
  {
    "text": "but you can't get very far with just words, right? The way human beings can express complex ideas and explain and teach things to each other,",
    "start": "1004350",
    "end": "1012550"
  },
  {
    "text": "is you can put together words to express more complex meanings. And then, you can do that over and over again",
    "start": "1012550",
    "end": "1020570"
  },
  {
    "text": "recursively to build up more and more complex meanings, so that by the time you're reading the morning newspaper,",
    "start": "1020570",
    "end": "1027420"
  },
  {
    "text": "you know most sentences are sort of 20-30 words long, and they're saying, um, some complex meaning, like you know,",
    "start": "1027420",
    "end": "1034334"
  },
  {
    "text": "\"Overnight Senate Republicans resolve that they would not do blah blah blah blah.'' And you understand that flawlessly,",
    "start": "1034335",
    "end": "1040069"
  },
  {
    "text": "by just sort of putting together those meanings of words. And so, we need to be able to know what is connected to",
    "start": "1040070",
    "end": "1045230"
  },
  {
    "text": "what in order to be able to do that. And one of the ways of saying, um,",
    "start": "1045230",
    "end": "1050740"
  },
  {
    "text": "that's important is saying, ''What can go wrong?'' Okay. So here, is a newspaper article.",
    "start": "1050740",
    "end": "1058675"
  },
  {
    "start": "1053000",
    "end": "1179000"
  },
  {
    "text": "Uh, ''San Jose cop kills man with knife''. Um, now, this has two meanings and the two meanings, um,",
    "start": "1058675",
    "end": "1066605"
  },
  {
    "text": "depend on, well, what you decide depends on what, you know, what modifies what?",
    "start": "1066605",
    "end": "1072190"
  },
  {
    "text": "So, what are the two meanings. Meaning one. The cop stabs the guy. [LAUGHTER]",
    "start": "1072190",
    "end": "1077580"
  },
  {
    "text": "The cop stabs the guy. Right. So, meaning one is the cop stabs that guy. So, what we've got here is,",
    "start": "1077580",
    "end": "1084625"
  },
  {
    "text": "we've got the cops that are killing. So, this is what we'll say is the subject of kill,",
    "start": "1084625",
    "end": "1092070"
  },
  {
    "text": "is the cops, and I'll just call them the San Jose cops here. And well, there's what they kill which say that,",
    "start": "1092070",
    "end": "1099365"
  },
  {
    "text": "the man is an object of killing. Um, and then while one person is the,",
    "start": "1099365",
    "end": "1107615"
  },
  {
    "text": "the cop using knife to kill the person. And so that's then that this is, um,",
    "start": "1107615",
    "end": "1114789"
  },
  {
    "text": "modifier and here if we complex we call it an instrumental modifier to say that the cops are killing people with a knife.",
    "start": "1114790",
    "end": "1123200"
  },
  {
    "text": "That's one possible analysis. Okay. Then, there's a second meaning sentence can have.",
    "start": "1123200",
    "end": "1129055"
  },
  {
    "text": "The second meaning sentence can have. [NOISE] Okay. The second meaning the sentence can have is,",
    "start": "1129055",
    "end": "1135380"
  },
  {
    "text": "that's the man has a knife. So, um, in that case, what we wanna say is, well, you know,",
    "start": "1135380",
    "end": "1141350"
  },
  {
    "text": "is this word man, and this man has, uh,",
    "start": "1141350",
    "end": "1146540"
  },
  {
    "text": "noun modifier, um, which is sort of saying something that the man possesses,",
    "start": "1146540",
    "end": "1152600"
  },
  {
    "text": "and then this dependency is the same, and it's a man with a knife. Okay. And so, the interpretations of these sentences that you can get depend on putting",
    "start": "1152600",
    "end": "1163429"
  },
  {
    "text": "different structures over the sentences in terms of who is- what is modifying what?",
    "start": "1163430",
    "end": "1170405"
  },
  {
    "text": "Um, here is another one that's just like that one. Um, scientists count whales from space.",
    "start": "1170405",
    "end": "1177020"
  },
  {
    "text": "[LAUGHTER] Okay. So again, this sentence has two possible structures, right?",
    "start": "1177020",
    "end": "1182960"
  },
  {
    "text": "[LAUGHTER] That we have, the scientists are the subject that are counting and the whales are the object.",
    "start": "1182960",
    "end": "1191330"
  },
  {
    "text": "Um, and, well, one possibility is that this is how they're doing the counting,",
    "start": "1191330",
    "end": "1197135"
  },
  {
    "text": "um, so that they're counting the whales from space using something like a satellite.",
    "start": "1197135",
    "end": "1202520"
  },
  {
    "text": "Um, but the other possibility is that these parts are the same, this is the subject, and this is the object,",
    "start": "1202520",
    "end": "1208835"
  },
  {
    "text": "but these are whales from space which, you know, we could have analyzed as a noun phrase goes to,",
    "start": "1208835",
    "end": "1216875"
  },
  {
    "text": "um, and now, on a PP, you know, um, constituency grammar, but its dependency grammar we saying, \"Oh,",
    "start": "1216875",
    "end": "1223340"
  },
  {
    "text": "this is now a modifier of the whales, and that they are whales from space, um,",
    "start": "1223340",
    "end": "1231200"
  },
  {
    "text": "that are starting to turn up as in the bottom example.\" Right? So, obviously what you want is this one is correct and this one is here wrong.",
    "start": "1231200",
    "end": "1240440"
  },
  {
    "text": "Um, and so this choice is referred to as a prepositional phrase attachment ambiguity,",
    "start": "1240440",
    "end": "1246455"
  },
  {
    "text": "and it's one of the most common ambiguities in the parsing of English, right?",
    "start": "1246455",
    "end": "1251809"
  },
  {
    "text": "So, here's our prepositional phrase from space. And so in general, when you have prepositional phrases and before it you have verbs,",
    "start": "1251810",
    "end": "1260840"
  },
  {
    "text": "and noun phrases, or nouns, that the prepositional phrase can modify",
    "start": "1260840",
    "end": "1266405"
  },
  {
    "text": "either of the things that come beforehand, right? And so this is a crucial way in which",
    "start": "1266405",
    "end": "1272330"
  },
  {
    "text": "human languages are different from programming languages, right? In programming languages, we have hard rules",
    "start": "1272330",
    "end": "1280360"
  },
  {
    "text": "as to how you meant to interpret things that dangle afterwards, right? So, in programming languages,",
    "start": "1280360",
    "end": "1287140"
  },
  {
    "text": "you have an else is always construed with the closest if. Well, if that's not what you want, um,",
    "start": "1287140",
    "end": "1293930"
  },
  {
    "text": "you have to use parentheses or indentation or something like that. I guess, it's different in Python because you have to use indentation.",
    "start": "1293930",
    "end": "1299870"
  },
  {
    "text": "But if we think of something like C or a similar language, right? Um, if you haven't used,",
    "start": "1299870",
    "end": "1305165"
  },
  {
    "text": "um, braces to indicate, it's just deterministically, the else goes with the closest if.",
    "start": "1305165",
    "end": "1311059"
  },
  {
    "text": "Um, but that's not how human languages are. Human languages are, um, this prepositional phrase can go with anything proceeding,",
    "start": "1311060",
    "end": "1319940"
  },
  {
    "text": "and the hearer is assumed to be smart enough to work out the right one. And, you know, that's actually a pa- large part of why",
    "start": "1319940",
    "end": "1327049"
  },
  {
    "text": "human communication is so efficient, right? Like, um, we can do such a good job at communicating with",
    "start": "1327050",
    "end": "1334250"
  },
  {
    "text": "each other because most of the time we don't have to say very much, and there's this really smart person on the other end, um,",
    "start": "1334250",
    "end": "1341495"
  },
  {
    "text": "who can interpret the words that we say in the right way. Um, so, that's where if you want to have artificial intelligence and smart computers,",
    "start": "1341495",
    "end": "1351800"
  },
  {
    "text": "we then start to need to build language understanding devices who can also,",
    "start": "1351800",
    "end": "1357065"
  },
  {
    "text": "um, work on that basis. That they can just decide what would be the right thing for form space to modify.",
    "start": "1357065",
    "end": "1364985"
  },
  {
    "text": "And if we have that working really well, we can then apply it back to programming languages, and you could just not put in any braces in your programming languages,",
    "start": "1364985",
    "end": "1372725"
  },
  {
    "text": "and the compiler would work out what you meant. Um, okay. So, this is prepositional phrase attachment.",
    "start": "1372725",
    "end": "1378575"
  },
  {
    "text": "It's sort of seems maybe not that hard there, but you know, it, it gets worse, I mean,",
    "start": "1378575",
    "end": "1384965"
  },
  {
    "text": "this isn't as fun an example, but it's a real example of a sentence from The Wall Street Journal actually.",
    "start": "1384965",
    "end": "1392465"
  },
  {
    "text": "The board approved this acquisition by Royal Trustco Limited of Toronto for $0.27,",
    "start": "1392465",
    "end": "1398120"
  },
  {
    "text": "$27 a share at its monthly meeting. Boring sentence, but, um, what is the structure of this sentence?",
    "start": "1398120",
    "end": "1404660"
  },
  {
    "text": "Well, you know, we've got a verb here, and we've got exactly the same subject,",
    "start": "1404660",
    "end": "1409805"
  },
  {
    "text": "and for this noun, um, object coming after it.",
    "start": "1409805",
    "end": "1414965"
  },
  {
    "text": "But then what happens after that? Well, here, we've got a prepositional phrase. Here, we've got a prepositional phrase.",
    "start": "1414965",
    "end": "1420575"
  },
  {
    "text": "You've just got a see four prepositional phrases in a row. And so, well, what we wanna",
    "start": "1420575",
    "end": "1428600"
  },
  {
    "text": "do is say for each of these prepositional phrases what they modify, and starting off there only two choices,",
    "start": "1428600",
    "end": "1435589"
  },
  {
    "text": "the verb and the noun proceeding as before. But it's gonna get more complicated as we go in, because look,",
    "start": "1435589",
    "end": "1441590"
  },
  {
    "text": "there's another noun here, and another noun here, and another noun here.",
    "start": "1441590",
    "end": "1446825"
  },
  {
    "text": "Um, so once we start getting further in there'll be more possibilities. Okay. So, let's see if we can,",
    "start": "1446825",
    "end": "1453184"
  },
  {
    "text": "um, work it out. So, um, by Royal Trustco Limited, what's that modifying?",
    "start": "1453185",
    "end": "1458720"
  },
  {
    "text": "[NOISE] Right. You see acquisition,",
    "start": "1458720",
    "end": "1465709"
  },
  {
    "text": "so it's not the board approved by Royal Trustco Limited, it's an acquisition by Royal Trustco Limited.",
    "start": "1465709",
    "end": "1472145"
  },
  {
    "text": "Okay. So, this one is a dependent of the acquisition. Okay. Um, now, we went to of Toronto,",
    "start": "1472145",
    "end": "1479975"
  },
  {
    "text": "and we have three choices, that could be this, this, or this. Okay. So, of Toronto is modifying.",
    "start": "1479975",
    "end": "1488340"
  },
  {
    "text": "Acquisition. [NOISE] Its acquisition of Toronto? [LAUGHTER] No, I think that's a wrong answer.",
    "start": "1490060",
    "end": "1499055"
  },
  {
    "text": "Um. [LAUGHTER] Is there another guess for what of Toronto is modifying?",
    "start": "1499055",
    "end": "1504080"
  },
  {
    "text": "Royal Trustco. Royal Trustco, right. So, it's Royal Trustco Limited of Toronto.",
    "start": "1504080",
    "end": "1509180"
  },
  {
    "text": "So, this of Toronto is a dependent of Royal Trustco Limited.",
    "start": "1509180",
    "end": "1514550"
  },
  {
    "text": "And Royal Trustco Limited, right, that's this again, sort of this noun phrase, so it can also have modifiers by prepositional phrase.",
    "start": "1514550",
    "end": "1521840"
  },
  {
    "text": "Okay. For $27 a share is modifying acquisition, right?",
    "start": "1521840",
    "end": "1529400"
  },
  {
    "text": "[NOISE] So now, we leap right back. [NOISE] I'm drawing this wrong. Now, we leap right back and,",
    "start": "1529400",
    "end": "1537169"
  },
  {
    "text": "um, is now the acquisition that's being modified. And then finally, we have at its monthly meeting is modifying?",
    "start": "1537170",
    "end": "1545600"
  },
  {
    "text": "[NOISE] Approved. Well, the approved, right? It's approved, yeah. It's approved that its monthly meeting.",
    "start": "1545600",
    "end": "1553055"
  },
  {
    "text": "Okay. [NOISE] I drew that on, [NOISE] I drew that one the wrong way around with the arrow.",
    "start": "1553055",
    "end": "1559730"
  },
  {
    "text": "Sorry, it should have been done this way. I'm getting my arrows wrong. [NOISE] Um, um.",
    "start": "1559730",
    "end": "1565260"
  },
  {
    "text": "Okay. So that we've got this pattern of how things are modifying.",
    "start": "1566390",
    "end": "1573670"
  },
  {
    "text": "Um, [NOISE] and so actually, you know, once you start having a lot of things that have choices like this,",
    "start": "1573770",
    "end": "1581390"
  },
  {
    "text": "you stop having- if I wanna put an analysis ac- on to this sentence I've to work out the, the right structure,",
    "start": "1581390",
    "end": "1589680"
  },
  {
    "text": "I have to potentially consider an exponential number of possible structures because,",
    "start": "1589680",
    "end": "1596415"
  },
  {
    "text": "I've got this situation where for the first prepositional phrase, there were two places that could have modified.",
    "start": "1596415",
    "end": "1603540"
  },
  {
    "text": "For the second prepositional phrase, there are three places that could have modified. For the fourth one,",
    "start": "1603540",
    "end": "1609179"
  },
  {
    "text": "there are five places that could have modified. That just sounds like a factorial. It's not quite as bad as the factorial, because normally,",
    "start": "1609180",
    "end": "1617325"
  },
  {
    "text": "once you've let back that kind of closes off the ones in the middle. And so, further prepositional phrases have to be",
    "start": "1617325",
    "end": "1624900"
  },
  {
    "text": "at least as far back in terms of what they modify. And so, if you get into this sort of combinatorics stuff the number of analyses you get",
    "start": "1624900",
    "end": "1633000"
  },
  {
    "text": "when you get multiple prepositional phrases is the sequence called the Catalan numbers. Ah, but that's still an exponential series.",
    "start": "1633000",
    "end": "1640890"
  },
  {
    "text": "And it's sort of one that turns up in a lot of places when they're tree-like contexts.",
    "start": "1640890",
    "end": "1646080"
  },
  {
    "text": "So, if any of you are doing or have done CS228, where you see, um,",
    "start": "1646080",
    "end": "1652140"
  },
  {
    "text": "triangular- triangulation of, ah, probabilistic graphical models and you ask how many triangulations there are,",
    "start": "1652140",
    "end": "1660210"
  },
  {
    "text": "that's sort of like making a tree over your variables. And that's, again, gives you the number of them as the Catalan series.",
    "start": "1660210",
    "end": "1667605"
  },
  {
    "text": "Okay. But- so the point is, we ha- end up with a lot of ambiguities. Okay. So, that's prepositional phrase attachments.",
    "start": "1667605",
    "end": "1675059"
  },
  {
    "text": "A lot of those going on. They are far from the only kind of ambiguity. So, I wanted to tell you about a few others.",
    "start": "1675060",
    "end": "1681899"
  },
  {
    "text": "Um, okay, shuttle veteran and longtime NASA executive Fred Gregory appointed to board.",
    "start": "1681900",
    "end": "1688950"
  },
  {
    "text": "Um, why is this sentence ambiguous? What are the different reading of this statement?",
    "start": "1688950",
    "end": "1694929"
  },
  {
    "text": "[NOISE]. Yes?",
    "start": "1694929",
    "end": "1700800"
  },
  {
    "text": "Uh, it's a better [inaudible] Okay. So, um, right answer. So, yeah there are two possibilities, right?",
    "start": "1700800",
    "end": "1706919"
  },
  {
    "text": "That is either that there's somebody who's a shuttle veteran and a long time NASA executive,",
    "start": "1706920",
    "end": "1714030"
  },
  {
    "text": "and their name is Fred Gregory, and that they've been appointed to the board. Um, or, um, the other possibility",
    "start": "1714030",
    "end": "1722550"
  },
  {
    "text": "is that there's a shuttle veteran and there's a long time NASA executive, Fred Gregory, and both of them have been appointed to the board.",
    "start": "1722550",
    "end": "1731174"
  },
  {
    "text": "And so, again, we can start to indicate the structure of that using our dependency.",
    "start": "1731175",
    "end": "1736980"
  },
  {
    "text": "So, we can ether, um, say, okay, um,",
    "start": "1736980",
    "end": "1742980"
  },
  {
    "text": "there's Fred Gregory and then this person is, um,",
    "start": "1742980",
    "end": "1749955"
  },
  {
    "text": "a shuttle veteran and long ta- and whoops,",
    "start": "1749955",
    "end": "1755205"
  },
  {
    "text": "and longtime NASA executive. Or we can say, well, we're doing appointment of a veteran and the longtime NASA executive, Fred Gregory.",
    "start": "1755205",
    "end": "1768690"
  },
  {
    "text": "And so, we can represent by dependencies, um, these two different structures.",
    "start": "1768690",
    "end": "1773715"
  },
  {
    "text": "Okay. Um, that's, um, one. Um, That one is not very funny again.",
    "start": "1773715",
    "end": "1780120"
  },
  {
    "text": "So- so, here's a funnier example that illustrates the same ambiguity effectively.",
    "start": "1780120",
    "end": "1785775"
  },
  {
    "text": "Um, so, here's precedence first physical. Doctor: No heart, cognitive issues.",
    "start": "1785775",
    "end": "1792570"
  },
  {
    "text": "[LAUGHTER] Um, so, there isn't actually an explicit, um, coordination word here.",
    "start": "1792570",
    "end": "1799620"
  },
  {
    "text": "But effectively in, um, a natural language or certainly English, um,",
    "start": "1799620",
    "end": "1806445"
  },
  {
    "text": "you can use kind of just comma of sort of list intonation to effectively act as if it was an \"And\" or an \"Or\", right?",
    "start": "1806445",
    "end": "1816300"
  },
  {
    "text": "So, here, um, we have again two possibilities that either we have",
    "start": "1816300",
    "end": "1822645"
  },
  {
    "text": "issues and the dep- and the dependencies of- the dependencies of issues is that there are no issues.",
    "start": "1822645",
    "end": "1831240"
  },
  {
    "text": "So, that's actually a determiner, ah, no issues. Um, and then it's sort of like no heart or cognitive issues.",
    "start": "1831240",
    "end": "1840210"
  },
  {
    "text": "So, heart is another dependent. It's sort of a non-compound heart issues.",
    "start": "1840210",
    "end": "1845610"
  },
  {
    "text": "And so, we refer to that as an independency, and then it's heart or, um, cognitive.",
    "start": "1845610",
    "end": "1853890"
  },
  {
    "text": "Um, so that heart or cognitive is a conjoined phrase inside of this \"No heart\" or \"Cognitive issues\".",
    "start": "1853890",
    "end": "1863400"
  },
  {
    "text": "But there's another possibility, um, which is, um, that the coordination is at the top level that we have \"No heart\" and \"Cognitive issues\".",
    "start": "1863400",
    "end": "1874470"
  },
  {
    "text": "And, um, at that point, we ha- have the \"Cognitive\" as an adjective modifier of the \"Issues\" and the \"No heart\",",
    "start": "1874470",
    "end": "1883604"
  },
  {
    "text": "the determiner is just a modifier of \"Heart\", and then these being conjoined together.",
    "start": "1883604",
    "end": "1889530"
  },
  {
    "text": "So, um, \"Heart\" has a depend- has a coordinated dependency of \"Issues\".",
    "start": "1889530",
    "end": "1896920"
  },
  {
    "text": "Okay. That's one one. Um, I've got more funny ones.",
    "start": "1897020",
    "end": "1904005"
  },
  {
    "text": "Susan gets- [NOISE] [LAUGHTER] Okay. So, what the person [LAUGHTER] who wrote this intended to",
    "start": "1904005",
    "end": "1912240"
  },
  {
    "text": "have is that there- we- Here we've got an adjective modifier ambiguity.",
    "start": "1912240",
    "end": "1917460"
  },
  {
    "text": "So, the intended reading was, um, that \"First\" is an adjectival modifier of \"First hand\" and it's firsthand experience.",
    "start": "1917460",
    "end": "1928934"
  },
  {
    "text": "Um, so, the \"First hand\" is a modifier of \"Experience\" and the \"Job\" is also a modifier of \"Experience\".",
    "start": "1928935",
    "end": "1938294"
  },
  {
    "text": "And then we have the same kind of subject, object, um, reading on that one.",
    "start": "1938295",
    "end": "1946275"
  },
  {
    "text": "Um, but unfortunately, um, this sentence, um,",
    "start": "1946275",
    "end": "1951810"
  },
  {
    "text": "has a different reading, um, where you change the modification relationships.",
    "start": "1951810",
    "end": "1958049"
  },
  {
    "text": "Um, and you have it's the first experience and it goes like this. Um. [LAUGHTER] Okay.",
    "start": "1958050",
    "end": "1967830"
  },
  {
    "text": "[NOISE] One more example. Um, \"Mutilated body washes up on Rio beach to be used for Olympics beach volleyball.\"",
    "start": "1967830",
    "end": "1977265"
  },
  {
    "text": "Um, wha- what are- [LAUGHTER] what are the two ambigui- What are the two readings that you can get for this one?",
    "start": "1977265",
    "end": "1986100"
  },
  {
    "text": "[NOISE]",
    "start": "1986100",
    "end": "1991860"
  },
  {
    "text": "We've got this big phrase that I want to try and put a structure of to be used for Olympic beach volleyball,",
    "start": "1991860",
    "end": "2000304"
  },
  {
    "text": "um, and then, you know, this is sort of like a prepositional phrase attachment ambiguity",
    "start": "2000305",
    "end": "2006170"
  },
  {
    "text": "but this time instead of it's a prepositional phrase that's being attached, we've now got this big verb phrase we call it, right,",
    "start": "2006170",
    "end": "2014059"
  },
  {
    "text": "so that when you've sort of got most of a sentence but without any subject to it, that's sort of a verb phrase to be used for",
    "start": "2014060",
    "end": "2020510"
  },
  {
    "text": "Olympic beach volleyball which might be then infinitive form. Sometimes it's in part of CPO form like being used for beach volleyball.",
    "start": "2020510",
    "end": "2028850"
  },
  {
    "text": "And really, those kind of verb phrases they sort of just like, um, prepositional phrases.",
    "start": "2028850",
    "end": "2034970"
  },
  {
    "text": "Whenever they appear towards the right end of sentences, they can modify various things like verbs or nouns.",
    "start": "2034970",
    "end": "2041840"
  },
  {
    "text": "Um, so, here, um, we have two possibilities. So, this to be used for Olympics beach volleyball.",
    "start": "2041840",
    "end": "2049070"
  },
  {
    "text": "Um, what the right answer is meant to be is that that is a dependent of the Rio beach.",
    "start": "2049070",
    "end": "2054649"
  },
  {
    "text": "So, it's a, um, modifier of the Rio Beach. Um, but the funny reading is,",
    "start": "2054650",
    "end": "2060845"
  },
  {
    "text": "um, that instead of that, um, we can have here is another noun phrase muti- mutilated body,",
    "start": "2060845",
    "end": "2068134"
  },
  {
    "text": "um, and it's the mutilated body that's going to be used. Um, and so then this would be, uh,",
    "start": "2068135",
    "end": "2075590"
  },
  {
    "text": "a noun phrase modifier [NOISE] of that. Okay. Um, so knowing the right structure of sentences is",
    "start": "2075590",
    "end": "2085429"
  },
  {
    "text": "important to understand the interpretations you're meant to get and the interpretations you're not meant to get.",
    "start": "2085430",
    "end": "2091774"
  },
  {
    "text": "Okay. But it's, it's sort of, um, okay, you know, I was using funny examples for the obvious reason, but, you know,",
    "start": "2091775",
    "end": "2098780"
  },
  {
    "text": "this is sort of essential to all the things that we'd like to get out of language most of the time.",
    "start": "2098780",
    "end": "2105140"
  },
  {
    "text": "So, you know, this is back to the kind of boring stuff that we often work with of reading through",
    "start": "2105140",
    "end": "2110240"
  },
  {
    "text": "biomedical research articles and trying to extract facts about protein-protein interactions from them or something like that.",
    "start": "2110240",
    "end": "2118220"
  },
  {
    "text": "So, you know, this is, um, the results demonstrated that KaiC interacts rhythmically with SasA Ka- KaiA and KaiB.",
    "start": "2118220",
    "end": "2128465"
  },
  {
    "text": "Um, and well, [NOISE] I turned the notification's off.",
    "start": "2128465",
    "end": "2133550"
  },
  {
    "text": "[NOISE] Um, so, if we wanna get out sort of protein-protein interaction,",
    "start": "2133550",
    "end": "2140705"
  },
  {
    "text": "um, facts, you know, well, we have this KaiC that's interacting with these other proteins over there.",
    "start": "2140705",
    "end": "2147394"
  },
  {
    "text": "And well, the way we can do that is looking at patterns in our dependency analysis,",
    "start": "2147395",
    "end": "2153560"
  },
  {
    "text": "and so that we can sort of, um, see this repeated pattern where you have, um,",
    "start": "2153560",
    "end": "2160055"
  },
  {
    "text": "the noun subject here interacts with a noun modifier,",
    "start": "2160055",
    "end": "2167930"
  },
  {
    "text": "and then it's going to be these things that are beneath that of the SasA and its conjoin things KaiA and KaiB are the things that interacts with.",
    "start": "2167930",
    "end": "2178055"
  },
  {
    "text": "So, we can kind of think of these two things as essentially, um, patterns.",
    "start": "2178055",
    "end": "2184339"
  },
  {
    "text": "[NOISE] I actually mis-edited this. Sorry. This should also be nmod:with. [NOISE] Um, we can kind of think of",
    "start": "2184340",
    "end": "2193910"
  },
  {
    "text": "these two things as sort of patterns and dependencies that we could look for to find examples of,",
    "start": "2193910",
    "end": "2200315"
  },
  {
    "text": "um, just protein-protein interactions that appear in biomedical text.",
    "start": "2200315",
    "end": "2206494"
  },
  {
    "text": "Okay. Um, so that's the general idea of what we wanna do,",
    "start": "2206495",
    "end": "2211940"
  },
  {
    "text": "and so the total we want to do it with is these Dependency Grammars. And so, I've sort of shown you some Dependency Grammars.",
    "start": "2211940",
    "end": "2219305"
  },
  {
    "start": "2212000",
    "end": "2392000"
  },
  {
    "text": "I just want us to sort of motivate Dependency Grammar a bit more, um, formally and fully, right?",
    "start": "2219305",
    "end": "2225830"
  },
  {
    "text": "So, Dependency Grammar, um, postulates the what is syntactic structure is is that you have, um,",
    "start": "2225830",
    "end": "2233210"
  },
  {
    "text": "relations between lexical items that are sort of binary asymmetric relations which we draw as arrows,",
    "start": "2233210",
    "end": "2239690"
  },
  {
    "text": "because they are binary and asymmetric, and we call dependencies. And there's sort of two ways, common ways,",
    "start": "2239690",
    "end": "2246289"
  },
  {
    "text": "of writing them, and I've sort of shown both now. One way is you sort of put the words in a line and that makes it.",
    "start": "2246290",
    "end": "2253565"
  },
  {
    "text": "He see, let's see the whole sentence. You draw this sort of loopy arrows above them and the other way is you sort of more represent it as a tree,",
    "start": "2253565",
    "end": "2261905"
  },
  {
    "text": "where you put the head of the whole sentence at the top, submitted and then you say the dependence of submitted,",
    "start": "2261905",
    "end": "2269240"
  },
  {
    "text": "uh, bills were in Brownback and then you say, um, the dependence of each of those.",
    "start": "2269240",
    "end": "2274250"
  },
  {
    "text": "Um, so, it was bills on ports and immigration. So, the dependence of bills and were submitted words,",
    "start": "2274250",
    "end": "2281840"
  },
  {
    "text": "the dependent of submitted and you're giving this kind of tree structure. Okay. Um, so, in addition to the arrows commonly what we do is we",
    "start": "2281840",
    "end": "2292700"
  },
  {
    "text": "put a type on each arrow which says what grammatical relations holding them between them.",
    "start": "2292700",
    "end": "2299119"
  },
  {
    "text": "So, is this the subject of the sentence? Is it the object of the verb? Is that a, um,",
    "start": "2299120",
    "end": "2305225"
  },
  {
    "text": "a conjunct and things like that? We have a system of dependency labels.",
    "start": "2305225",
    "end": "2310550"
  },
  {
    "text": "Um, so, for the assignment, what we're gonna do is use universal dependencies,",
    "start": "2310550",
    "end": "2316910"
  },
  {
    "text": "which I'll show you more, a little bit more in a minute. And if you think, \"Man, this stuff is fascinating.",
    "start": "2316910",
    "end": "2322790"
  },
  {
    "text": "I wanna learn all about these linguist structures.\" Um, there's a universal dependency site, um,",
    "start": "2322790",
    "end": "2327830"
  },
  {
    "text": "that you go and can go off and look at it and learn all about them. But, if you don't think that's fascinating, um,",
    "start": "2327830",
    "end": "2334100"
  },
  {
    "text": "for what we're doing for this class, we're never gonna make use of these labels. All we're doing is making use of the arrows.",
    "start": "2334100",
    "end": "2342619"
  },
  {
    "text": "And for the arrows, you should be able to interpret things like prepositional phrases as to what they're",
    "start": "2342620",
    "end": "2348590"
  },
  {
    "text": "modifying just in terms of where the prepositional phrases are connected and whether that's right or wrong.",
    "start": "2348590",
    "end": "2355430"
  },
  {
    "text": "Okay. Yes. So formally, when we have this kind of Dependency Grammar,",
    "start": "2355430",
    "end": "2360695"
  },
  {
    "text": "we've sort of drawing these arrows and we sort of refer to the thing at this end as the head of a dependency.",
    "start": "2360695",
    "end": "2368390"
  },
  {
    "text": "And the thing at this end as the dependent of the dependency. And as in these examples are normal expectation",
    "start": "2368390",
    "end": "2376910"
  },
  {
    "text": "and what our policies are gonna do is the dependencies form a tree. So, it's a connected acyclic single,",
    "start": "2376910",
    "end": "2384274"
  },
  {
    "text": "um, rooted graph at the end of the day. Okay. So, Dependency Grammar has an enormously long history.",
    "start": "2384274",
    "end": "2392855"
  },
  {
    "text": "So, basically, the famous first linguists that human beings know about his Panini who,",
    "start": "2392855",
    "end": "2399109"
  },
  {
    "text": "um, wrote in the fifth century before the Common Era and tried to describe the structure of Sanskrit.",
    "start": "2399110",
    "end": "2405470"
  },
  {
    "text": "And a lot of what Panini did was working out things about all of the morphology of Sanskrit that I'm not gonna touch at the moment.",
    "start": "2405470",
    "end": "2414035"
  },
  {
    "text": "But beyond that, he started trying to describe the structure of Sanskrit sentences.",
    "start": "2414035",
    "end": "2419329"
  },
  {
    "text": "And, um, the notation was sort of different but, essentially, the mechanism he used for describing the structure of",
    "start": "2419330",
    "end": "2426290"
  },
  {
    "text": "Sanskrit was dependencies of sort of working out these, um, what are arguments in modifies of what relationships like we've been looking at.",
    "start": "2426290",
    "end": "2435740"
  },
  {
    "start": "2434000",
    "end": "2545000"
  },
  {
    "text": "And indeed, if you look at kind of the history of humankind, um,",
    "start": "2435740",
    "end": "2440840"
  },
  {
    "text": "most of attempts to understand the structure of human languages are essentially Dependency Grammars.",
    "start": "2440840",
    "end": "2448009"
  },
  {
    "text": "Um, so, sort of in the later parts of the first millennium, there was a ton of work by Arabic grammarians and essentially what",
    "start": "2448010",
    "end": "2456680"
  },
  {
    "text": "they used is also kind of basically a Dependency Grammar. Um, so compared to that, you know,",
    "start": "2456680",
    "end": "2463325"
  },
  {
    "text": "the idea of context-free grammars and phrase structure grammars is incredibly incredibly new.",
    "start": "2463325",
    "end": "2470119"
  },
  {
    "text": "I mean, you can basically, um, totally date it. There was this guy Wells in 1947 who first proposed",
    "start": "2470120",
    "end": "2476569"
  },
  {
    "text": "this idea of having these constituents and phrase structure grammars, and where it then became really famous is through the work of Chomsky, um,",
    "start": "2476570",
    "end": "2485510"
  },
  {
    "text": "which love him or hate him is by far the most famous, um, linguist and also variously contributed to Computer Science.",
    "start": "2485510",
    "end": "2494015"
  },
  {
    "text": "Who's head of the Chomsky hierarchy? Do people remember that 103? Yeah. Okay, the Chomsky hierarchy,",
    "start": "2494015",
    "end": "2500210"
  },
  {
    "text": "the Chomsky hierarchy was not invented to torture beginning computer science students.",
    "start": "2500210",
    "end": "2506375"
  },
  {
    "text": "The Chomsky hierarchy was invented because Chomsky wanted to make arguments as to what the complexity of human languages was, um.",
    "start": "2506375",
    "end": "2517019"
  },
  {
    "text": "Okay. Yeah. So, in modern work, uh, there's this guy Lucie Tesniere.",
    "start": "2517020",
    "end": "2523180"
  },
  {
    "text": "Um, and he sort of formalized the kind of version of dependency grammar that I've been showing you.",
    "start": "2523180",
    "end": "2529755"
  },
  {
    "text": "So, um we sort of often talk about his work. And you know it's- it's long-term being influential and computational linguistics.",
    "start": "2529755",
    "end": "2538250"
  },
  {
    "text": "Some of the earliest parsing work in US Computational Linguistics was dependency grammars.",
    "start": "2538250",
    "end": "2543435"
  },
  {
    "text": "But I won't go on about that um more now. Okay. Um, just one,",
    "start": "2543435",
    "end": "2549780"
  },
  {
    "text": "two little things um, to note. I mean, if you somehow start looking at other papers where their dependency grammars,",
    "start": "2549780",
    "end": "2557434"
  },
  {
    "text": "people aren't consistent on which way to have the arrows point. There's sort of two ways of thinking about this um,",
    "start": "2557434",
    "end": "2566115"
  },
  {
    "text": "that you can either think okay, I'm gonna start at the head and point to the dependent.",
    "start": "2566115",
    "end": "2573575"
  },
  {
    "text": "Or you can say I'm going to start at the dependent and say what its head is, and you find both of them.",
    "start": "2573575",
    "end": "2579079"
  },
  {
    "text": "Uh, the way we're gonna do it in this class is to do it the way Tesniere did it,",
    "start": "2579080",
    "end": "2584425"
  },
  {
    "text": "which was she started the head and pointed to the dependent. Uh, sorry. I'm drawing that wrong.",
    "start": "2584425",
    "end": "2591360"
  },
  {
    "text": "Whoops, um because discussion of the outstanding issues. So, really um, the dependent is sort of discussion.",
    "start": "2591360",
    "end": "2599494"
  },
  {
    "text": "Um, okay. We go from heads to dependence. And usually, it's convenient to serve in addition to the sentence to",
    "start": "2599495",
    "end": "2606880"
  },
  {
    "text": "sort of have a fake root node that points to the head of the whole sentence. So, we use that as well.",
    "start": "2606880",
    "end": "2614250"
  },
  {
    "text": "Okay. Um, so to build a dependency pauses or to indeed build",
    "start": "2614250",
    "end": "2622825"
  },
  {
    "start": "2615000",
    "end": "2752000"
  },
  {
    "text": "any kind of human language structure finders including kind of constituency grammar pauses,",
    "start": "2622825",
    "end": "2631530"
  },
  {
    "text": "the central tool in recent work, where recent work kind of means the last 25 years has been this idea of tree banks.",
    "start": "2631530",
    "end": "2643185"
  },
  {
    "text": "Um, and the idea of tree banks is to say we are going to get human beings to sit around and [NOISE] put grammatical structures over sentences.",
    "start": "2643185",
    "end": "2655605"
  },
  {
    "text": "So, here are some examples I'm showing you from Universal Dependencies where here are some um, English sentences.",
    "start": "2655605",
    "end": "2662069"
  },
  {
    "text": "I think Miramar was a famous goat trainer or something. And some human being has sat and put",
    "start": "2662070",
    "end": "2668530"
  },
  {
    "text": "a dependency structure over this sentence and all the rest. Um, and with the name Universal Dependencies,",
    "start": "2668530",
    "end": "2674854"
  },
  {
    "text": "this is just an aside. Um, Universal Dependencies is actually project I've been strongly involved with.",
    "start": "2674854",
    "end": "2680655"
  },
  {
    "text": "But precisely what the goal of universal dependencies was is to say what we'd like to do is have",
    "start": "2680655",
    "end": "2687435"
  },
  {
    "text": "a uniform parallel system of dependency description which could be used for any human language.",
    "start": "2687435",
    "end": "2695035"
  },
  {
    "text": "So, if you go to the Universal Dependencies website, it's not only about English.",
    "start": "2695035",
    "end": "2700385"
  },
  {
    "text": "You can find Universal Dependency analyses of you know, French, or German, or Finish,",
    "start": "2700385",
    "end": "2707235"
  },
  {
    "text": "or Carsac, or Indonesian, um, lots of languages. Of course, there are um, even more languages",
    "start": "2707235",
    "end": "2714069"
  },
  {
    "text": "which there aren't Universal Dependencies analyses of. So, if you have a- a big calling to say I'm gonna",
    "start": "2714070",
    "end": "2719835"
  },
  {
    "text": "build a Swahili Universal Dependencies um, treebank, um, you can get in touch.",
    "start": "2719835",
    "end": "2725415"
  },
  {
    "text": "Um, but anyway. So, this is the idea of treebank. You know, historically, tree banks wasn't something that people thought of immediately.",
    "start": "2725415",
    "end": "2737230"
  },
  {
    "text": "This so- an idea that took quite a long time to develop, right? That um, people started thinking about grammars",
    "start": "2737230",
    "end": "2744490"
  },
  {
    "text": "of languages even in modern times in the fifties, and people started building parses for languages in the 19, early 1960s.",
    "start": "2744490",
    "end": "2755760"
  },
  {
    "text": "So, there was decades of work in the 60s, 70s, 80s, and no one had tree banks.",
    "start": "2755760",
    "end": "2763130"
  },
  {
    "text": "The way people did this work is that they wrote grammars, that they either wrote grammars like the one I did for constituency of",
    "start": "2763130",
    "end": "2770775"
  },
  {
    "text": "noun phrase goes to determiner, optional adjective noun. Noun goes to goat um,",
    "start": "2770775",
    "end": "2776994"
  },
  {
    "text": "or the equivalent kind of grammars and a dependency format, and they hand built these grammars and then train,",
    "start": "2776995",
    "end": "2786565"
  },
  {
    "text": "had parsers that could parse these sentences. Going into things, having a human being write a grammar feels more efficient.",
    "start": "2786565",
    "end": "2797480"
  },
  {
    "text": "Because if you write uh, a rule like noun phrase goes to determiner optional adjective noun.",
    "start": "2797480",
    "end": "2803589"
  },
  {
    "text": "I mean, that- that describes a huge number of phrases or actually infinite number of phrases.",
    "start": "2803590",
    "end": "2809570"
  },
  {
    "text": "Um, so that you know, this is the structure of you know, the cat, the dog, or cat or dog, or large dog all those things we saw at the beginning.",
    "start": "2809570",
    "end": "2816910"
  },
  {
    "text": "So, it's really efficient you're capturing lots of stuff with one rule. Um, but it sort of turned out that in practice that wasn't such a good idea,",
    "start": "2816910",
    "end": "2827474"
  },
  {
    "text": "and it turned out to be much better to have these kind of treebank supporting structures over sentences.",
    "start": "2827475",
    "end": "2834210"
  },
  {
    "start": "2833000",
    "end": "2966000"
  },
  {
    "text": "It's often a bit more subtle was to why that is because it sounds like pretty menial work um,",
    "start": "2834210",
    "end": "2840320"
  },
  {
    "text": "building tree banks, and in some sense it is. Um, but you know, it turns out to be much more useful.",
    "start": "2840320",
    "end": "2847815"
  },
  {
    "text": "I mean, so one huge benefit is that treebanks are very reusable.",
    "start": "2847815",
    "end": "2853535"
  },
  {
    "text": "That effectively what they was in 60s, 70s, and 80s was that every different you know,",
    "start": "2853535",
    "end": "2859450"
  },
  {
    "text": "people who started about building a parser invented their own notation for grammar rules which got more and more complex,",
    "start": "2859450",
    "end": "2866970"
  },
  {
    "text": "and it was only used by their parser and nobody else's parser. So, there was no sharing and reuse of the work those done by human beings.",
    "start": "2866970",
    "end": "2874610"
  },
  {
    "text": "Well, once you have a treebank, it's reusable for all sorts of purposes that lots of people build parsers format.",
    "start": "2874610",
    "end": "2881510"
  },
  {
    "text": "But also other people use it as well like linguists now often used tree banks to find examples of different constructions.",
    "start": "2881510",
    "end": "2888650"
  },
  {
    "text": "Um, but beyond that, this sort of just became necessary once we wanted to do machine learning.",
    "start": "2888650",
    "end": "2894694"
  },
  {
    "text": "So that if we want to do machine learning, we want to have data that we can build models on.",
    "start": "2894695",
    "end": "2900240"
  },
  {
    "text": "In particular, a lot of what our machine learning models exploit is how common are different structures.",
    "start": "2900240",
    "end": "2907015"
  },
  {
    "text": "So, we want to know about the commoners and the frequency of things. Um, but then treebanks gave us another big thing which is,",
    "start": "2907015",
    "end": "2914335"
  },
  {
    "text": "well, lots of sentences are ambiguous, and what we want to do is build models that find the right structure for sentences.",
    "start": "2914335",
    "end": "2924530"
  },
  {
    "text": "If all you do is have a grammar you have no way of telling what is the right structure for ambiguous sentences.",
    "start": "2924530",
    "end": "2931805"
  },
  {
    "text": "All you can do is say hey that sentence with four prepositional phrases after it that I showed you earlier,",
    "start": "2931805",
    "end": "2938780"
  },
  {
    "text": "it has 14 different parsers. Let me show you all of them. Um, but once you have um,",
    "start": "2938780",
    "end": "2944890"
  },
  {
    "text": "treebank examples, you can say this is the right structure for this sentence in context.",
    "start": "2944890",
    "end": "2952184"
  },
  {
    "text": "So, you should be building a machine learning model which will recover that structure,",
    "start": "2952185",
    "end": "2957255"
  },
  {
    "text": "and if you don't that you're wrong. [NOISE]. Okay. Um, so that's treebanks.",
    "start": "2957255",
    "end": "2963980"
  },
  {
    "text": "Um, so how are we gonna do build dependency parsers? Well, somehow we want models that can kind of capture what's the right parse.",
    "start": "2963980",
    "end": "2974790"
  },
  {
    "start": "2966000",
    "end": "3055000"
  },
  {
    "text": "Just thinking about abstractly, you know, there's sort of different things that we can pay attention to.",
    "start": "2974790",
    "end": "2980340"
  },
  {
    "text": "So, one thing that we can pay attention to is the sort of actual words, right?",
    "start": "2980340",
    "end": "2986030"
  },
  {
    "text": "Discussion of issues. That's a reasonable thing. So, it's reasonable to have issues as dependent of discussion um,",
    "start": "2986030",
    "end": "2995235"
  },
  {
    "text": "where you know, discussion of outstanding. That sounds weird. So, you probably don't want that dependency.",
    "start": "2995235",
    "end": "3001570"
  },
  {
    "text": "Um, there's a question of how far apart words are. Most dependencies are fairly short distance.",
    "start": "3001570",
    "end": "3007480"
  },
  {
    "text": "They not all of them are. There's a question of what's in between. Um, if there's a semicolon in between,",
    "start": "3007480",
    "end": "3013385"
  },
  {
    "text": "there probably is an a dependency across that. Um, and the other issue is sort of how many arguments do things take?",
    "start": "3013385",
    "end": "3020190"
  },
  {
    "text": "So, here we have was completed. If you see the words was completed, you sort of expect that there'll be a subject before of the something was completed,",
    "start": "3020190",
    "end": "3029410"
  },
  {
    "text": "and it would be wrong if there wasn't. So, you're expecting an argument on that side.",
    "start": "3029410",
    "end": "3034470"
  },
  {
    "text": "But on the other side, hand it won't have object after it. You won't say the discussion was completed the goat.",
    "start": "3034470",
    "end": "3041630"
  },
  {
    "text": "Um, that's not a good sentence, right? So, you won't have ah, um, an object after it.",
    "start": "3041630",
    "end": "3047135"
  },
  {
    "text": "So, there's sort of information of that sort, and we want to have our dependency parsers be able to make use of that structure.",
    "start": "3047135",
    "end": "3054305"
  },
  {
    "text": "[NOISE] Okay. Um, so effectively what we do when we build a dependency parser is going to say,",
    "start": "3054305",
    "end": "3064360"
  },
  {
    "start": "3055000",
    "end": "3221000"
  },
  {
    "text": "for each word is- is going to be the dependent of some other word or the root.",
    "start": "3064360",
    "end": "3071560"
  },
  {
    "text": "So, this give here is actually the head of the sentence. So, it's a dependent of root,",
    "start": "3071560",
    "end": "3077570"
  },
  {
    "text": "the talk is a dependent of give, 'll is a dependent of talk.",
    "start": "3077570",
    "end": "3084040"
  },
  {
    "text": "And so, for each word we want to choose what is the dependent of and we want to do it in such a way that the dependencies form a tree.",
    "start": "3084040",
    "end": "3094599"
  },
  {
    "text": "So that means it would be a bad idea if we made a cycle. So, if we sort of said, Bootstrapping, um,",
    "start": "3094600",
    "end": "3103435"
  },
  {
    "text": "was a dependent of, um, talk, um, but then we had things sort of move around.",
    "start": "3103435",
    "end": "3112420"
  },
  {
    "text": "So,this goes to here, but then talk is a dependent that, and so I'm gonna cycle that's bad news,",
    "start": "3112420",
    "end": "3117430"
  },
  {
    "text": "we don't want cycles, we want a tree. And there's one final issue,",
    "start": "3117430",
    "end": "3123175"
  },
  {
    "text": "um, which is we don't want things that, um, is whether we want to allow dependencies to cross or not,",
    "start": "3123175",
    "end": "3131680"
  },
  {
    "text": "um, and this is an example of this. So, most of the time, um, dependencies don't cross each other.",
    "start": "3131680",
    "end": "3139180"
  },
  {
    "text": "Uh, but sometimes they do, and this example here is actually an instance for that.",
    "start": "3139180",
    "end": "3146770"
  },
  {
    "text": "So, I'll give a talk tomorrow, um, on bootstrapping. So, we're giving a talk that's the object,",
    "start": "3146770",
    "end": "3155710"
  },
  {
    "text": "and when it's being given is tomorrow, but this talk has a modifier that's on bootstrapping.",
    "start": "3155710",
    "end": "3163240"
  },
  {
    "text": "So, we actually have another dependency here that crosses, um, that dependency.",
    "start": "3163240",
    "end": "3170905"
  },
  {
    "text": "And that's sort of rare, that doesn't happen a ton in English, but it happens sometimes in some structures like that.",
    "start": "3170905",
    "end": "3177085"
  },
  {
    "text": "And so, this is the question of whether, um, what we say is that the positive sentence is projective if there",
    "start": "3177085",
    "end": "3184900"
  },
  {
    "text": "no crossing dependencies and it's non-projective if there are crossing dependencies,",
    "start": "3184900",
    "end": "3190015"
  },
  {
    "text": "and most of the time, English's projective and it's parses of sentences, but occasionally not.",
    "start": "3190015",
    "end": "3195130"
  },
  {
    "text": "And when it's not is when you kind of have these constituents that are delayed to the end of the sentence, right?",
    "start": "3195130",
    "end": "3200740"
  },
  {
    "text": "You could've said, I'll give a talk on bootstrapping tomorrow, and then a [inaudible] have a projective parse, but if you want to,",
    "start": "3200740",
    "end": "3207490"
  },
  {
    "text": "you can kind of delay that extra modifier and say I'll give a talk tomorrow on bootstrapping and then the parse becomes non-projective.",
    "start": "3207490",
    "end": "3214780"
  },
  {
    "text": "Um, okay. So, that's that.",
    "start": "3214780",
    "end": "3220450"
  },
  {
    "text": "Um, there are various ways of, um, doing dependency parsing,",
    "start": "3220450",
    "end": "3226434"
  },
  {
    "start": "3221000",
    "end": "3299000"
  },
  {
    "text": "but basically what I am gonna tell you about today is this one called transition-based or deterministic dependency parsing,",
    "start": "3226435",
    "end": "3234204"
  },
  {
    "text": "and this is, um, the one that's just been enormously influential in practical deployments of parsing.",
    "start": "3234205",
    "end": "3241030"
  },
  {
    "text": "So, when Google goes off and parses every web page, what they're using is a transition based parser.",
    "start": "3241030",
    "end": "3247690"
  },
  {
    "text": "Um, and so, this was a notion of parsing that, um, was mainly popularized by this guy,",
    "start": "3247690",
    "end": "3254800"
  },
  {
    "text": "walk him Joakim Nivre, he is a Swedish computational linguists. Um, and what you do it's- it's sort of inspired by shift-reduce parsing.",
    "start": "3254800",
    "end": "3265075"
  },
  {
    "text": "So, probably in- in our CS103 or compilers class or something, you saw a little bit of shift-reduce parsing.",
    "start": "3265075",
    "end": "3272650"
  },
  {
    "text": "And this is sort of like a shift-reduce parser, apart from when we reduce,",
    "start": "3272650",
    "end": "3278710"
  },
  {
    "text": "we build dependencies instead of constituent. Um, and this has a lot of very technical description that",
    "start": "3278710",
    "end": "3286270"
  },
  {
    "text": "doesn't help you at all to look at in terms of understanding what, um, a shift-reduce parser does.",
    "start": "3286270",
    "end": "3293079"
  },
  {
    "text": "And here's a formal description of a transition-based shift-reduce parser and which also doesn't help you at all.",
    "start": "3293080",
    "end": "3299890"
  },
  {
    "start": "3299000",
    "end": "3427000"
  },
  {
    "text": "Um, so, instead we kinda look at this example, uh, [LAUGHTER] because that will hopefully help you.",
    "start": "3299890",
    "end": "3305335"
  },
  {
    "text": "So, what I wanna to do is parse the sentence \"I ate fish\". And yet formally what I have is I have a why I start,",
    "start": "3305335",
    "end": "3314530"
  },
  {
    "text": "there are three actions I can take and I have a finished condition for formal parse, parse.",
    "start": "3314530",
    "end": "3320895"
  },
  {
    "text": "Um, and so here's what I do. So, I have a stack which is on this side and I have a buffer.",
    "start": "3320895",
    "end": "3329079"
  },
  {
    "text": "Um, so, the stack is what I have built, and the buffer is all the words in the sentence I haven't dealt with yet.",
    "start": "3329080",
    "end": "3336055"
  },
  {
    "text": "So, I stop the parse, and that's the sort of instruction here, by putting route,",
    "start": "3336055",
    "end": "3341575"
  },
  {
    "text": "my root for my whole sentence onto my stack, and my buffer is the whole sentence,",
    "start": "3341575",
    "end": "3347200"
  },
  {
    "text": "and I haven't found any dependencies yet. Okay, and so then, the actions I can take is to shift things onto the stack",
    "start": "3347200",
    "end": "3355645"
  },
  {
    "text": "or to do the equivalent of a Reduce where I build dependencies.",
    "start": "3355645",
    "end": "3361570"
  },
  {
    "text": "So, starting off, um, I can't build a dependency because I only have root on the stack,",
    "start": "3361570",
    "end": "3367755"
  },
  {
    "text": "so the only thing I can do is shift, so I can shift I onto the stack. Um, now, I could at this point say,",
    "start": "3367755",
    "end": "3374800"
  },
  {
    "text": "let's build a dependency, I is a dependent of root, but that would be the wrong analysis, because really the head of this sentence is I ate.",
    "start": "3374800",
    "end": "3383079"
  },
  {
    "text": "So, I'm a clever boy and I shift again. And now I have root I ate on the stack.",
    "start": "3383080",
    "end": "3390204"
  },
  {
    "text": "Okay, and so, at this point, I'm in a position where, hey, what I'm gonna do is reductions that build structure, because look,",
    "start": "3390205",
    "end": "3400105"
  },
  {
    "text": "I have I ate here and I want to be able to say that I is the subject of dependency of ate,",
    "start": "3400105",
    "end": "3409600"
  },
  {
    "text": "and I will do that by, um, by doing a reduction. And so, what I'm gonna do is the left-arc reduction, which says, look,",
    "start": "3409600",
    "end": "3420730"
  },
  {
    "text": "I'm gonna treat the second from top thing on the stack as a dependent of the thing that's on top of the stack.",
    "start": "3420730",
    "end": "3428605"
  },
  {
    "start": "3427000",
    "end": "3599000"
  },
  {
    "text": "And so, I do that, and so, when I do that, I create the second from the head thing as a subject dependent of ate,",
    "start": "3428605",
    "end": "3437575"
  },
  {
    "text": "and I leave the head on the stack ate, but I sort of add this dependencies as other dependencies I've built.",
    "start": "3437575",
    "end": "3445675"
  },
  {
    "text": "Okay, um, so, I do that. Um, now, I could immediately reduce again and say ate is a dependent of root,",
    "start": "3445675",
    "end": "3454720"
  },
  {
    "text": "but my sentence's actually I ate fish. So, what I want to do is say, \"Oh,",
    "start": "3454720",
    "end": "3460990"
  },
  {
    "text": "if it's still fish on the buffer,\" so what I should first do is shift again, have root ate fish in my sentence,",
    "start": "3460990",
    "end": "3468265"
  },
  {
    "text": "and then I'll be able to say, Look, I want to now build, um, the thing on the top of this stack as",
    "start": "3468265",
    "end": "3475704"
  },
  {
    "text": "a right dependent of the thing that's second from top of the stack, and so that's referred to as a Right-Arc move,",
    "start": "3475705",
    "end": "3482664"
  },
  {
    "text": "and so, I say Right Arc, and so, I do a reduction where I've generated",
    "start": "3482664",
    "end": "3488410"
  },
  {
    "text": "a new dependency and I take the two things that are on top of the stack and say,",
    "start": "3488410",
    "end": "3494244"
  },
  {
    "text": "um, fish is a dependent of ate, and so therefore, I just keep the head.",
    "start": "3494245",
    "end": "3500575"
  },
  {
    "text": "I always just keep the hit on the stack and the- and I generate this new Arc.",
    "start": "3500575",
    "end": "3505915"
  },
  {
    "text": "And so, at this point, I'm in the same position I want to say that this ate is a right dependent of my route,",
    "start": "3505915",
    "end": "3513684"
  },
  {
    "text": "and so, I'm again going to do Right Arc, um, and make this extra dependency here.",
    "start": "3513685",
    "end": "3520840"
  },
  {
    "text": "Okay. So, then my finished condition of having successfully parsed the sentence is my buffer is",
    "start": "3520840",
    "end": "3526420"
  },
  {
    "text": "empty and I just have root left on my stack because that's what I sort of said back here,",
    "start": "3526420",
    "end": "3532599"
  },
  {
    "text": "that was, buffer is empty as my finished condition. Okay. So, I've parsed the sentence.",
    "start": "3532600",
    "end": "3539230"
  },
  {
    "text": "So that worked well but, you know, I actually had different choices of when to pa- when to shift and when to reduce.",
    "start": "3539230",
    "end": "3547870"
  },
  {
    "text": "And I just miraculously made the right choice at each point. And well, one thing you could do at this point is say, well,",
    "start": "3547870",
    "end": "3556630"
  },
  {
    "text": "you could have explored every choice and, um, seen what happened and gone different parsers.",
    "start": "3556630",
    "end": "3564355"
  },
  {
    "text": "And I could have, but if that's what I'd done, I would've explored this exponential size tree of different possible parsers.",
    "start": "3564355",
    "end": "3575680"
  },
  {
    "text": "And if that was what I was doing, I wouldn't be able to parse efficiently. And indeed that's not what people did in the 60s, 70s and 80s.",
    "start": "3575680",
    "end": "3584110"
  },
  {
    "text": "Uh, clever people in the 60s said, uh, rather than doing a crummy search here,",
    "start": "3584110",
    "end": "3590305"
  },
  {
    "text": "we can come up with clever dynamic programming algorithms and you can relatively efficiently explore the space of all possible parsers.",
    "start": "3590305",
    "end": "3598869"
  },
  {
    "text": "Uh, and that was sort of the mainstay of parsing in those decades. But when Joakim Nivre came along,",
    "start": "3598870",
    "end": "3606700"
  },
  {
    "text": "he said \"Yeah, that's true, um, but hey, I've got a clever idea, uh,",
    "start": "3606700",
    "end": "3612595"
  },
  {
    "text": "because now it's the 2000s and I know machine learning.\"",
    "start": "3612595",
    "end": "3618220"
  },
  {
    "text": "Um, so, what I could do instead, is say I'm at a particular position in the parse and I'm gonna build",
    "start": "3618220",
    "end": "3626890"
  },
  {
    "text": "a machine learning classifier and that machine learning classifier is gonna tell me the next thing to do.",
    "start": "3626890",
    "end": "3633970"
  },
  {
    "text": "It's gonna tell me whether to shift, um, with left arc or right arc.",
    "start": "3633970",
    "end": "3639955"
  },
  {
    "text": "So, if we're only just so talking about, well, how to build the arrows, they're just three actions,",
    "start": "3639955",
    "end": "3645160"
  },
  {
    "text": "shift, left arc or right arc. Um, if we also wanted to put labels on the dependencies,",
    "start": "3645160",
    "end": "3650770"
  },
  {
    "text": "and we have our different labels, um, there are then sort of 2R plus actions because she is",
    "start": "3650770",
    "end": "3656109"
  },
  {
    "text": "sort of left arc subject or left arc object or something like that. But anyway, there's a set of actions and so you gonna build",
    "start": "3656110",
    "end": "3664060"
  },
  {
    "text": "a classifier with machine learning somehow which will predict the right action and Joakim Nivre showed the sort of slightly surprising fact",
    "start": "3664060",
    "end": "3674685"
  },
  {
    "text": "that actually you could predict the correct action to take with high accuracy.",
    "start": "3674685",
    "end": "3682530"
  },
  {
    "text": "So, um, in the simplest version of this, um, there's absolutely no search.",
    "start": "3682530",
    "end": "3689440"
  },
  {
    "text": "You just run a classifier at each step and it says \"What you should do next is shift\" and you shift, and then it says \"What you should do is left arc\" and you left arc",
    "start": "3689440",
    "end": "3696820"
  },
  {
    "text": "and you run that through and he proved, no, he showed empirically, that even doing that,",
    "start": "3696820",
    "end": "3702385"
  },
  {
    "text": "you could parse sentences with high accuracy. Now if you wanna do some searching around, you can do a bit better,",
    "start": "3702385",
    "end": "3708505"
  },
  {
    "text": "but it's not necessary. Um, and we're not gonna do it for our, um, assignment.",
    "start": "3708505",
    "end": "3714700"
  },
  {
    "text": "But so if you're doing this just sort of run classify, predict action, run classify, predict action,",
    "start": "3714700",
    "end": "3721434"
  },
  {
    "text": "we then get this wonderful result which you're meant to explain a bit honest on your assignment 3,",
    "start": "3721434",
    "end": "3727645"
  },
  {
    "text": "is that what we've built is a linear time parser. Right? That because we are gonna be sort of- as we chug through a sentence,",
    "start": "3727645",
    "end": "3735369"
  },
  {
    "text": "where we're only doing a linear amount of work for each word and that was sort of an enormous breakthrough.",
    "start": "3735370",
    "end": "3741220"
  },
  {
    "text": "Because although people in the 60s hadn't come up with these dynamic programming algorithms, dynamic programming algorithms for sentences were always cubic or worse.",
    "start": "3741220",
    "end": "3751705"
  },
  {
    "text": "And that's not very good if you want to parse the whole web, whereas if you have something that's linear time,",
    "start": "3751705",
    "end": "3757450"
  },
  {
    "text": "that's really getting you places. Okay. So this is the conventional way in which this was done.",
    "start": "3757450",
    "end": "3765085"
  },
  {
    "text": "Was, you know, we have a stack, we might have already built some structure if we",
    "start": "3765085",
    "end": "3770750"
  },
  {
    "text": "hadn't working out something's dependent of something. We have a buffer of words that we don't deal with and we want to predict the next action.",
    "start": "3770750",
    "end": "3777789"
  },
  {
    "text": "So the conventional way to do this is to say well, we want to have features. And well, the kind of features you wanted was so",
    "start": "3777790",
    "end": "3786100"
  },
  {
    "text": "the usually some kind of conjunction or multiple things so that if the top word of the stack is good,",
    "start": "3786100",
    "end": "3793720"
  },
  {
    "text": "um, and something else is true, right,",
    "start": "3793720",
    "end": "3798760"
  },
  {
    "text": "that the second top word of the stack it has, and it's part of speech is verb,",
    "start": "3798760",
    "end": "3805119"
  },
  {
    "text": "then maybe that's an indicator of do some action. So ha- had these very complex binary indicator features",
    "start": "3805120",
    "end": "3811705"
  },
  {
    "text": "and you'd build- you literally have millions of these binary indicator features and you'd feed them into",
    "start": "3811705",
    "end": "3819130"
  },
  {
    "text": "some big logistic regression or support vector machine or something like that and you would build parses.",
    "start": "3819130",
    "end": "3826705"
  },
  {
    "text": "And these parses worked pretty well. Um, but you sort of had these sort of very complex hand engineered binary features.",
    "start": "3826705",
    "end": "3835599"
  },
  {
    "text": "Um, so in the last bit of lecture I want to show you what people have done in the, um, neural dependency parsing world.",
    "start": "3835600",
    "end": "3842980"
  },
  {
    "text": "But before I do that, let me just explain how you, um, how you evaluate, um, dependency parses.",
    "start": "3842980",
    "end": "3851220"
  },
  {
    "text": "And that's actually very simple, right? So, what you do is well, you assume because the human wrote it down,",
    "start": "3851220",
    "end": "3858880"
  },
  {
    "text": "that there is a correct dependency parse for a sentence. She saw the video lecture like this.",
    "start": "3858880",
    "end": "3864580"
  },
  {
    "text": "And so these are the correct arcs and to evaluate our dependency parser, we're simply gonna say,",
    "start": "3864580",
    "end": "3872140"
  },
  {
    "text": "uh, which arcs are correct. So, there are the gold arcs, so there's a gold arc,",
    "start": "3872140",
    "end": "3878410"
  },
  {
    "text": "um, from two to one, She saw subject, and there's a gold arc from zero to two,",
    "start": "3878410",
    "end": "3887109"
  },
  {
    "text": "the root of the sentence, these the gold arcs. Um, if we generate a parse,",
    "start": "3887110",
    "end": "3892480"
  },
  {
    "text": "we're gonna propose some arcs as to what is the head of each word. And we're simply going to count up how many of them are correct,",
    "start": "3892480",
    "end": "3900685"
  },
  {
    "text": "treating each arc individually. And there are two ways we can do that. We can either, as we're going to do,",
    "start": "3900685",
    "end": "3907885"
  },
  {
    "text": "ignore the labels and that's then, uh, referred to as the unlabeled attachment score.",
    "start": "3907885",
    "end": "3915865"
  },
  {
    "text": "So here in my example, my dependency paths, I've got most of the arcs right but it got this one wrong.",
    "start": "3915865",
    "end": "3923860"
  },
  {
    "text": "So I say my unlabeled attachment score is 80 percent or we can also look at the labels and then my parser wasn't very good at getting the labels rights,",
    "start": "3923860",
    "end": "3933819"
  },
  {
    "text": "so I'm only getting 40 percent. And so we can just count up the number of dependencies and how many we get correct.",
    "start": "3933820",
    "end": "3940809"
  },
  {
    "text": "And that's in our accuracy and in the assignment, you're meant to build a dependency parser with a certain accuracy.",
    "start": "3940810",
    "end": "3949225"
  },
  {
    "text": "I forget the number now is saying, some number 80 something or something that you're meant to get to.",
    "start": "3949225",
    "end": "3955644"
  },
  {
    "text": "Okay. Um, maybe I'll skip that. Okay. Um, so, now I wanted to sort of explain to you just a bit",
    "start": "3955645",
    "end": "3963369"
  },
  {
    "text": "about neural dependency parses and why they are motivated. So I'd mentioned to you already that the conventional model, uh,",
    "start": "3963370",
    "end": "3971845"
  },
  {
    "text": "had these sort of indicated features of, um, on the top of the stack is the word good and the second thing on",
    "start": "3971845",
    "end": "3979180"
  },
  {
    "text": "the stack is the verb has or on the top of the stack is some other word and the second top is of some part of speech.",
    "start": "3979180",
    "end": "3988720"
  },
  {
    "text": "And that part of speech has already been joined with the dependency of another part of speech. People hand-engineer these features.",
    "start": "3988720",
    "end": "3995500"
  },
  {
    "text": "And the problems with that, was these features were very sparse. Each of these features matches very few things.",
    "start": "3995500",
    "end": "4002100"
  },
  {
    "text": "Um, they match some configurations but not others so the features tend to be incomplete.",
    "start": "4002100",
    "end": "4008865"
  },
  {
    "text": "Um, and there are a lot of them, they're are commonly millions of features.",
    "start": "4008865",
    "end": "4014655"
  },
  {
    "text": "And so it turned out that actually computing these features was just expensive so that you had some configuration on",
    "start": "4014655",
    "end": "4021690"
  },
  {
    "text": "your stack and the buffer and then you wanted to know which of these features were active for that stack and buffer configuration.",
    "start": "4021690",
    "end": "4030945"
  },
  {
    "text": "And so you had to compute features format. And it turned out that conventional dependency parsers spent most of their time computing features,",
    "start": "4030945",
    "end": "4039795"
  },
  {
    "text": "then went into the machine learning model rather than doing the sort of shifting and, which you're are seeing, are just a pure parser operation.",
    "start": "4039795",
    "end": "4048809"
  },
  {
    "text": "And so that seemed like it left open the possibility that, well,",
    "start": "4048810",
    "end": "4054030"
  },
  {
    "text": "what if we could get rid of all of this stuff and we could run a neural network directly on the stack and buffer configuration,",
    "start": "4054030",
    "end": "4063360"
  },
  {
    "text": "then maybe that would allow us to build a dependency parser which was",
    "start": "4063360",
    "end": "4068550"
  },
  {
    "text": "faster and suffer less from issues of sparseness than the conventional dependency parser.",
    "start": "4068550",
    "end": "4075705"
  },
  {
    "text": "And so that was a project that Dan Chi Chen and me tried to do in 2014,",
    "start": "4075705",
    "end": "4082785"
  },
  {
    "text": "uh, we used to build a neural dependency parser. And, you know, effectively what we found,",
    "start": "4082785",
    "end": "4089565"
  },
  {
    "text": "is that that's exactly what you could do. So, here's sort of a few stats here.",
    "start": "4089565",
    "end": "4095940"
  },
  {
    "text": "So these are these same UAS and LAS. Uh, so MaltParser was Joakim Nivre's Parser that I sort of,",
    "start": "4095940",
    "end": "4104430"
  },
  {
    "text": "uh, we started showing before. And they've got, um, a UAS on this data of 89.8.",
    "start": "4104430",
    "end": "4113625"
  },
  {
    "text": "But everybody loved that. And the reason they loved it is it could parse at 469 sentences a second.",
    "start": "4113625",
    "end": "4121589"
  },
  {
    "text": "There had been other people that have worked out different more complex ways",
    "start": "4121590",
    "end": "4127350"
  },
  {
    "text": "of doing parsing with so-called graph-based dependency parsers.",
    "start": "4127350",
    "end": "4132359"
  },
  {
    "text": "So this is another famous dependency parser from the 90s. So it was actually, you know,",
    "start": "4132360",
    "end": "4138659"
  },
  {
    "text": "a bit more accurate but it was a bit more accurate at the cost of being two orders of magnitude slower.",
    "start": "4138660",
    "end": "4145680"
  },
  {
    "text": "And, you know, people have worked on top of that. So, here is an even more complex graph-based parser, uh,",
    "start": "4145680",
    "end": "4151679"
  },
  {
    "text": "from the 2000s and well, you know, it's a little bit more accurate again but it's gotten even slower.",
    "start": "4151680",
    "end": "4157890"
  },
  {
    "text": "Um, okay. So, what we were able to show is that using the idea of instead using",
    "start": "4157890",
    "end": "4165210"
  },
  {
    "text": "a neural network to make the decisions of Joakim Nivre Style shift-reduce parser,",
    "start": "4165210",
    "end": "4173055"
  },
  {
    "text": "we could produce something that was almost as accurate as the very best parsers available at that time.",
    "start": "4173055",
    "end": "4181380"
  },
  {
    "text": "I mean, strictly we won over here and we are a fraction behind on UAS. Um, but, you know,",
    "start": "4181380",
    "end": "4187609"
  },
  {
    "text": "it was not only just as fast as Nivre's parser, it was actually faster than Nivre's parser,",
    "start": "4187610",
    "end": "4194795"
  },
  {
    "text": "because we didn't have to spend as much time on feature computation. And that's actually almost a surprising result, right?",
    "start": "4194795",
    "end": "4202175"
  },
  {
    "text": "It's not that we didn't have to do anything. We had to do matrix multiplies in our neural network,",
    "start": "4202175",
    "end": "4208050"
  },
  {
    "text": "but it turned out, um, you could do the matrix multiplies more quickly than",
    "start": "4208050",
    "end": "4213330"
  },
  {
    "text": "the feature computation that he was doing even though at the end of the day, it was sort of looking at weights that went into a support vector machine.",
    "start": "4213330",
    "end": "4221235"
  },
  {
    "text": "So that was kind of cool. And so the secret was we're gonna make use of distributed representations like we've already seen for words.",
    "start": "4221235",
    "end": "4231025"
  },
  {
    "text": "So for each word, we're going to represent it as a word embedding, like we've all what already seen.",
    "start": "4231025",
    "end": "4238005"
  },
  {
    "text": "And in particular, um, we are gonna make use of word vectors",
    "start": "4238005",
    "end": "4244260"
  },
  {
    "text": "and use them as the represent- the starting representations of words in our Parser. But well, if we're interested in distributed representations,",
    "start": "4244260",
    "end": "4253145"
  },
  {
    "text": "it seem to us like maybe you should only have distributed representations of words.",
    "start": "4253145",
    "end": "4258550"
  },
  {
    "text": "Um, maybe it also be good temp distributed representations of other things. So we had parts of speech like,",
    "start": "4258550",
    "end": "4265440"
  },
  {
    "text": "you know, nouns and verbs and adjectives and so on. Well some of those parts of speech have more to do with each other than others.",
    "start": "4265440",
    "end": "4273230"
  },
  {
    "text": "I mean, [NOISE] in particular, um, most NLP work uses fine-grained parts of speech.",
    "start": "4273230",
    "end": "4280320"
  },
  {
    "text": "So you don't only have a part of speech like noun or verb, you have parts of speech like singular noun versus",
    "start": "4280320",
    "end": "4286890"
  },
  {
    "text": "plural noun and you have different parts of speech for, you know, work, works, working, kind of the different forms of",
    "start": "4286890",
    "end": "4296070"
  },
  {
    "text": "verbs are given different parts of speech, um, as well.",
    "start": "4296070",
    "end": "4301170"
  },
  {
    "text": "So there's sort of sets of parts of speech labels that kind of clusters. So maybe we could have distributed representations,",
    "start": "4301170",
    "end": "4307940"
  },
  {
    "text": "a part of speech that represent their similarity. Why not? Um, well if we're gonna do that,",
    "start": "4307940",
    "end": "4313670"
  },
  {
    "text": "why not just keep on going and say the dependency labels. They also, um, have a distributed representation.",
    "start": "4313670",
    "end": "4320875"
  },
  {
    "text": "And so, we built a representation that did that. So the idea is that we have in our stack,",
    "start": "4320875",
    "end": "4330289"
  },
  {
    "text": "the sort of the top positions of the stack, the first positions of the buffer and for each of those positions,",
    "start": "4330290",
    "end": "4337695"
  },
  {
    "text": "we have a word and a part of speech and if we've already built structure as here,",
    "start": "4337695",
    "end": "4343275"
  },
  {
    "text": "we kind of know about a dependency that's already been built. And so we've got a triple for each position and we're gonna convert",
    "start": "4343275",
    "end": "4351790"
  },
  {
    "text": "all of those into a distributed representation, um, which we are learning and we're gonna use those distributed representations,",
    "start": "4351790",
    "end": "4361960"
  },
  {
    "text": "um, to build our parser. Okay. Now for- so,",
    "start": "4361960",
    "end": "4367750"
  },
  {
    "text": "you know starting from- starting from the next lecture forward, we're gonna sort of s- start using a more complex forms of neural models.",
    "start": "4367750",
    "end": "4378835"
  },
  {
    "text": "But for this model, um, we did it in a sort of a very simple straightforward way.",
    "start": "4378835",
    "end": "4385780"
  },
  {
    "text": "We said, well, we could just use exactly the same model,",
    "start": "4385780",
    "end": "4390960"
  },
  {
    "text": "exactly the same parser structure that Nivre used, right? Doing those shifts and left arcs and right arcs.",
    "start": "4390960",
    "end": "4398620"
  },
  {
    "text": "Um, the only part we're gonna turn into a neural network is we're gonna have the decision of what to do next,",
    "start": "4398620",
    "end": "4405590"
  },
  {
    "text": "um, being controlled by our neural network. So our neural network is",
    "start": "4405590",
    "end": "4411070"
  },
  {
    "text": "just a very simple classifier of the kind that we are talking about last week.",
    "start": "4411070",
    "end": "4417040"
  },
  {
    "text": "So based on the configuration, we create an input layer which means we're sort",
    "start": "4417040",
    "end": "4424400"
  },
  {
    "text": "of taking the stuff in these boxers and turn- and looking up a vector representation for each one and concatenating them together to produce",
    "start": "4424400",
    "end": "4434580"
  },
  {
    "text": "a input representation that's sort of similar to when we were making those window classifiers and then we can concatenate a bunch of stuff together.",
    "start": "4434580",
    "end": "4443934"
  },
  {
    "text": "So that gives us in our input layer. [NOISE] Um, so from there, we put things through a hidden layer just like last week.",
    "start": "4443935",
    "end": "4452200"
  },
  {
    "text": "We do Wx plus b and then put it through a ReLU or a non-linearity to a hidden layer.",
    "start": "4452200",
    "end": "4458130"
  },
  {
    "text": "And then on top of that, we're simply gonna stick a softmax output layer.",
    "start": "4458130",
    "end": "4463605"
  },
  {
    "text": "So multiplying by another matrix, adding another, um, bias term,",
    "start": "4463605",
    "end": "4468905"
  },
  {
    "text": "and then that goes into the softmax which is gonna give a probability over our actions as to whether it's shift left arc or right arc,",
    "start": "4468905",
    "end": "4477780"
  },
  {
    "text": "or the corresponding one with labels. And then we're gonna use the same kind of cross entropy loss to say how good a job did we",
    "start": "4477780",
    "end": "4485800"
  },
  {
    "text": "do at guessing the action that we should have taken according to the tree bank parse of the sentence.",
    "start": "4485800",
    "end": "4492050"
  },
  {
    "text": "And so each step of the shift-reduce parser, we're making a decision as what to do next and we're doing it by this classifier",
    "start": "4492050",
    "end": "4501120"
  },
  {
    "text": "and we're getting a loss to the extent that we don't give probability one to the right action.",
    "start": "4501120",
    "end": "4506815"
  },
  {
    "text": "Um, and so that's what we did using the tree bank. We trained up our parser, um,",
    "start": "4506815",
    "end": "4514145"
  },
  {
    "text": "and it was then able to predict the sentences.",
    "start": "4514145",
    "end": "4519825"
  },
  {
    "text": "And the cool thing- the cool thing was, um, that this, um,",
    "start": "4519825",
    "end": "4526410"
  },
  {
    "text": "had all the good things of Nivre's parser but, you know, by having it use these dense representations,",
    "start": "4526410",
    "end": "4533890"
  },
  {
    "text": "it meant that we could get greater accuracy and speed than Nivre's parser at the same time.",
    "start": "4533890",
    "end": "4539844"
  },
  {
    "text": "So here is sort of some results on that. I mean, I already showed you some earlier results, right?",
    "start": "4539845",
    "end": "4546230"
  },
  {
    "text": "So this was showing, um, the fact, um, that, you know, we're outperforming these earlier parsers basically.",
    "start": "4546230",
    "end": "4553310"
  },
  {
    "text": "But subsequent to us doing this work, um, people at Google,",
    "start": "4553310",
    "end": "4558880"
  },
  {
    "text": "um, these papers here by Weiss and Andor, um, they said, \"Well, this is pretty cool.",
    "start": "4558880",
    "end": "4565625"
  },
  {
    "text": "Um, maybe we can get the numbers even better if we make our neural network,",
    "start": "4565625",
    "end": "4571460"
  },
  {
    "text": "um, bigger and deeper and we spend a lot more time tuning our hyper-parameters.\"",
    "start": "4571460",
    "end": "4577705"
  },
  {
    "text": "Um, sad but true. All of these things help when you're building neural networks and when you're doing your final project.",
    "start": "4577705",
    "end": "4585015"
  },
  {
    "text": "Sometimes the answer to making the results better is to make it bigger, deeper and spend more time choosing the hyper-parameters.",
    "start": "4585015",
    "end": "4592795"
  },
  {
    "text": "Um, they put in Beam search as I sort of mentioned. Um, Beam search can really help.",
    "start": "4592795",
    "end": "4597950"
  },
  {
    "text": "So in Beam search, you know, rather than just saying, \"Let's work out what's the best next action,",
    "start": "4597950",
    "end": "4604849"
  },
  {
    "text": "do that one and repeat over\", you allow yourself to do a little bit of search. You sort of say, \"Well, let's consider two actions and explore what happens.\"",
    "start": "4604850",
    "end": "4613520"
  },
  {
    "text": "Um, quick question. Do humans always agree on how to build this trees and if they don't,",
    "start": "4613520",
    "end": "4620480"
  },
  {
    "text": "what will be the [inaudible] or agreement of humans relative to [inaudible] [OVERLAPPING] [NOISE]",
    "start": "4620480",
    "end": "4625525"
  },
  {
    "text": "So that's a good question which I haven't addressed. Um, humans don't always agree.",
    "start": "4625525",
    "end": "4631485"
  },
  {
    "text": "There are sort of two reasons they can't agree fundamentally. One is that, uh, humans,",
    "start": "4631485",
    "end": "4636980"
  },
  {
    "text": "um, sort of mess up, right? Because human work is doing this aren't perfect. And the other one is they generally think that there should be different structures.",
    "start": "4636980",
    "end": "4645360"
  },
  {
    "text": "Um, so, you know, it depend- varies depending on the circumstances and so on.",
    "start": "4645360",
    "end": "4650454"
  },
  {
    "text": "If you just get humans to parse sentences and say, \"Well, what is the agreement and what they produced?\"",
    "start": "4650455",
    "end": "4657219"
  },
  {
    "text": "You know, maybe you're only getting something like 92 percent. But, you know, if you then do an adjudication phase and you say, \"Um,",
    "start": "4657220",
    "end": "4665465"
  },
  {
    "text": "look at these differences, um, is one of them right or wrong?\" There are a lot of them where, you know,",
    "start": "4665465",
    "end": "4672050"
  },
  {
    "text": "one of the person is effectively saying, \"Oh yeah, I goofed. Um, wasn't paying attention or whatever.\"",
    "start": "4672050",
    "end": "4677570"
  },
  {
    "text": "Um, and so then, what's the residual rate in which, um, people can actually disagree about possible parses?",
    "start": "4677570",
    "end": "4685350"
  },
  {
    "text": "I think that's sort of more around three percent. Um, yeah. But there certainly are cases and that includes",
    "start": "4685350",
    "end": "4691790"
  },
  {
    "text": "some of the prepositional phrase attachment ambiguities. Sometimes there are multiple attachments",
    "start": "4691790",
    "end": "4697510"
  },
  {
    "text": "that sort of same clause although it's not really clear which one is right even though there are lots of other circumstances where one of them is very clearly wrong.",
    "start": "4697510",
    "end": "4704710"
  },
  {
    "text": "Um, yeah. [inaudible]. There's- there's still room to do better.",
    "start": "4704710",
    "end": "4712210"
  },
  {
    "text": "I mean, at the unlabeled attachment score, it's actually starting to get pretty good. But there's still room to do better. Um, yeah.",
    "start": "4712210",
    "end": "4718570"
  },
  {
    "text": "Um, yeah. So Beam search, the final thing that they did was- that we're not gonna talk about here,",
    "start": "4718570",
    "end": "4725110"
  },
  {
    "text": "is the sort of more global inference to make sure, um, it's sensible. Um, and so, um,",
    "start": "4725110",
    "end": "4731610"
  },
  {
    "text": "that then led to Google developing these models that they gave silly names to, especially the Parsey McPa- parseFace,",
    "start": "4731610",
    "end": "4739095"
  },
  {
    "text": "um, model of parsing. Um, and so, yeah. So that then- that's sort of pushed up the numbers even further so that they were sort of",
    "start": "4739095",
    "end": "4748394"
  },
  {
    "text": "getting close to 95 percent unlabeled accuracy score from these models.",
    "start": "4748395",
    "end": "4753775"
  },
  {
    "text": "And actually, this work has kind of, you know, deep learning people like to optimize.",
    "start": "4753775",
    "end": "4759485"
  },
  {
    "text": "Um, this work [LAUGHTER] has continued along in the intervening two years and the numbers are sort of getting, um, a bit higher again.",
    "start": "4759485",
    "end": "4766310"
  },
  {
    "text": "But, you know, so this actually, um, led to ah sort of a new era of sort of better parsers because so effectively this was the",
    "start": "4766310",
    "end": "4777440"
  },
  {
    "text": "90's- the 90's era of parsers that was sort of where around 90 percent and then going into this sort of new generation of,",
    "start": "4777440",
    "end": "4788320"
  },
  {
    "text": "um, neural transition based dependency parsers. We sort of have gone down that we've halve that error- error rate.",
    "start": "4788320",
    "end": "4795260"
  },
  {
    "text": "And we're now down to sort of about a five percent error rate. Yeah. I'm basically out of time now but, you know,",
    "start": "4795260",
    "end": "4801430"
  },
  {
    "text": "there is further work including, you know, at Stanford. Um, another student, Tim Dossad has some sort of more recent work.",
    "start": "4801430",
    "end": "4807660"
  },
  {
    "text": "It's more accurate than 95 percent, right? So we- we're still going on but I think I'd better stop here today,",
    "start": "4807660",
    "end": "4813179"
  },
  {
    "text": "um, and that's neural dependency parsing. [NOISE].",
    "start": "4813180",
    "end": "4816310"
  }
]