[
  {
    "start": "0",
    "end": "6000"
  },
  {
    "start": "0",
    "end": "5340"
  },
  {
    "text": "Hi.",
    "start": "5340",
    "end": "5840"
  },
  {
    "text": "In this module, I'm\ngoing to show you",
    "start": "5840",
    "end": "7120"
  },
  {
    "start": "6000",
    "end": "12000"
  },
  {
    "text": "how you can take some\nreal world problems",
    "start": "7120",
    "end": "8830"
  },
  {
    "text": "and model them as constraint\nsatisfaction problems.",
    "start": "8830",
    "end": "12780"
  },
  {
    "start": "12000",
    "end": "413000"
  },
  {
    "text": "So we'll begin with our\nfirst example, LSAT.",
    "start": "12780",
    "end": "15950"
  },
  {
    "text": "So LSAT is the standardized test\nfor admission into law school,",
    "start": "15950",
    "end": "19640"
  },
  {
    "text": "and it features\nthese logic puzzles.",
    "start": "19640",
    "end": "22279"
  },
  {
    "text": "So here's one example\nof a logic puzzle.",
    "start": "22280",
    "end": "24560"
  },
  {
    "text": "So imagine you have\nthree sculptures, A, B,",
    "start": "24560",
    "end": "27199"
  },
  {
    "text": "and C, that are to be\nexhibited in two rooms, 1 or 2,",
    "start": "27200",
    "end": "31160"
  },
  {
    "text": "of an art gallery.",
    "start": "31160",
    "end": "32630"
  },
  {
    "text": "So the exhibition has imposed\na certain number of conditions",
    "start": "32630",
    "end": "36860"
  },
  {
    "text": "on you.",
    "start": "36860",
    "end": "37910"
  },
  {
    "text": "So sculptures A and B\ncannot be in the same room.",
    "start": "37910",
    "end": "41270"
  },
  {
    "text": "Sculptures B and C must\nbe in the same room.",
    "start": "41270",
    "end": "44810"
  },
  {
    "text": "And room 2 can hold\nonly one sculpture.",
    "start": "44810",
    "end": "49280"
  },
  {
    "text": "So how do you model this as\na constraint satisfaction",
    "start": "49280",
    "end": "51770"
  },
  {
    "text": "problem?",
    "start": "51770",
    "end": "52400"
  },
  {
    "text": "Let's do it via this\nJavaScript demo.",
    "start": "52400",
    "end": "56450"
  },
  {
    "text": "Erase that and start over.",
    "start": "56450",
    "end": "58500"
  },
  {
    "text": "So the first thing you want\nto do when you model is you",
    "start": "58500",
    "end": "62570"
  },
  {
    "text": "figure out what\nthe variables are.",
    "start": "62570",
    "end": "64400"
  },
  {
    "text": "So looking back\nhere, we want to put",
    "start": "64400",
    "end": "68270"
  },
  {
    "text": "the three sculptures in rooms.",
    "start": "68270",
    "end": "70740"
  },
  {
    "text": "So let's just define a variable\nfor each of these sculptures.",
    "start": "70740",
    "end": "74990"
  },
  {
    "text": "So in this JavaScript demo, I'm\ngoing to define a variable A.",
    "start": "74990",
    "end": "80540"
  },
  {
    "text": "And the domain of that\nA is either 1 or 2,",
    "start": "80540",
    "end": "84120"
  },
  {
    "text": "depending on what\nroom that sculpture A",
    "start": "84120",
    "end": "87720"
  },
  {
    "text": "should be placed in.",
    "start": "87720",
    "end": "89150"
  },
  {
    "text": "And I hit step, and I get this\nvariable, and I can mouse over",
    "start": "89150",
    "end": "97580"
  },
  {
    "text": "and can see the domain\nof that variable.",
    "start": "97580",
    "end": "101390"
  },
  {
    "text": "OK, so now I can do it for the\nother two sculptures, B and C.",
    "start": "101390",
    "end": "107960"
  },
  {
    "text": "And you'll see that now\nI have three variables--",
    "start": "107960",
    "end": "110690"
  },
  {
    "text": "A, B, and C, each of which\ncan take on values 1 or 2.",
    "start": "110690",
    "end": "115580"
  },
  {
    "text": "So now let me\ndefine the factors.",
    "start": "115580",
    "end": "118388"
  },
  {
    "text": "So I'm going to define a\nfactor for each of these three",
    "start": "118388",
    "end": "120680"
  },
  {
    "text": "conditions.",
    "start": "120680",
    "end": "121430"
  },
  {
    "text": "Usually each condition\ncorresponds to a factor.",
    "start": "121430",
    "end": "123500"
  },
  {
    "text": "But as we'll see later,\nthat's not always the case.",
    "start": "123500",
    "end": "126480"
  },
  {
    "text": "So the first condition says that\nsculptures A and B cannot be",
    "start": "126480",
    "end": "129860"
  },
  {
    "text": "in the same room.",
    "start": "129860",
    "end": "131900"
  },
  {
    "text": "So this naturally is a factor\nthat touches variables A and B.",
    "start": "131900",
    "end": "139519"
  },
  {
    "text": "So I'm going to\ncall that factor AB.",
    "start": "139520",
    "end": "142280"
  },
  {
    "text": "Its scope is variables A and B.",
    "start": "142280",
    "end": "146420"
  },
  {
    "text": "And remember, a\nfactor is a function",
    "start": "146420",
    "end": "149090"
  },
  {
    "text": "that takes on an assignment to\nthe variables in that scope, A",
    "start": "149090",
    "end": "154190"
  },
  {
    "text": "and B in this case.",
    "start": "154190",
    "end": "155760"
  },
  {
    "text": "And it's going to return\na non-negative number.",
    "start": "155760",
    "end": "160269"
  },
  {
    "text": "In this case, I want it to be\nthat case that A and B are not",
    "start": "160270",
    "end": "164210"
  },
  {
    "text": "in the same room.",
    "start": "164210",
    "end": "164960"
  },
  {
    "text": "So I'm going to return\nA not equal to B.",
    "start": "164960",
    "end": "170240"
  },
  {
    "text": "OK, so if I hit Enter, that is\ngoing to give me this factor.",
    "start": "170240",
    "end": "175250"
  },
  {
    "text": "And I can check that its table\nthat says 1, 2 is good, 2, 1",
    "start": "175250",
    "end": "179720"
  },
  {
    "text": "is not.",
    "start": "179720",
    "end": "181460"
  },
  {
    "text": "2, 1 is also good.",
    "start": "181460",
    "end": "182510"
  },
  {
    "text": "But 1, 1 and 2, 2 are not good.",
    "start": "182510",
    "end": "187543"
  },
  {
    "text": "So now I'm going to move\non to the second condition.",
    "start": "187543",
    "end": "189710"
  },
  {
    "text": "Sculptures B and C must\nbe in the same room.",
    "start": "189710",
    "end": "192470"
  },
  {
    "text": "So this is similar, but\nnow apply to B and C--",
    "start": "192470",
    "end": "197550"
  },
  {
    "start": "197550",
    "end": "201260"
  },
  {
    "text": "B and C. And they have\nto be in the same room,",
    "start": "201260",
    "end": "204230"
  },
  {
    "text": "so I'm just going to\nreturn B equals C.",
    "start": "204230",
    "end": "208250"
  },
  {
    "text": "So I'm going to check\nthat that factor does",
    "start": "208250",
    "end": "210440"
  },
  {
    "text": "what I want it to do.",
    "start": "210440",
    "end": "211740"
  },
  {
    "text": "So it's happy with 1, 1\nand 2, 2, which is good.",
    "start": "211740",
    "end": "217550"
  },
  {
    "text": "And now what about\nthe final condition?",
    "start": "217550",
    "end": "219440"
  },
  {
    "text": "So room 2 can hold\nonly one sculpture.",
    "start": "219440",
    "end": "223010"
  },
  {
    "text": "This one's a little bit\ntricky because it doesn't",
    "start": "223010",
    "end": "225439"
  },
  {
    "text": "mention sculptures exactly.",
    "start": "225440",
    "end": "227780"
  },
  {
    "text": "It mentions only the room.",
    "start": "227780",
    "end": "230000"
  },
  {
    "text": "But here, what it\nreally means is",
    "start": "230000",
    "end": "231500"
  },
  {
    "text": "that I have to look at all\nthe sculpture variables.",
    "start": "231500",
    "end": "236160"
  },
  {
    "text": "So I'm going to define a\nfactor, let's call it r2,",
    "start": "236160",
    "end": "239210"
  },
  {
    "text": "which depends on all\nof the variables here.",
    "start": "239210",
    "end": "243410"
  },
  {
    "text": "And I'm going to need to figure\nout whether room 2 has at most",
    "start": "243410",
    "end": "249800"
  },
  {
    "text": "one sculpture.",
    "start": "249800",
    "end": "251180"
  },
  {
    "text": "So let's keep a counter.",
    "start": "251180",
    "end": "253760"
  },
  {
    "text": "And I'm going to go\nthrough all the sculptures",
    "start": "253760",
    "end": "257359"
  },
  {
    "text": "and see if sculpture\nA is in room 2.",
    "start": "257360",
    "end": "260208"
  },
  {
    "text": "If it is, I'm going to\nincrement the counter.",
    "start": "260209",
    "end": "262670"
  },
  {
    "text": "If sculpture B is in room 2, I'm\ngoing to increment the counter.",
    "start": "262670",
    "end": "268310"
  },
  {
    "text": "If sculpture C is in room 2, I'm\ngoing to increment the counter.",
    "start": "268310",
    "end": "272660"
  },
  {
    "text": "And now I'm going to\nreturn whether the number",
    "start": "272660",
    "end": "275390"
  },
  {
    "text": "of sculptures in room 2,\nwhich is now n, is at most 1.",
    "start": "275390",
    "end": "280490"
  },
  {
    "start": "280490",
    "end": "283389"
  },
  {
    "text": "So I make that factor.",
    "start": "283390",
    "end": "284880"
  },
  {
    "text": "And I can see that\nthis factor is happy",
    "start": "284880",
    "end": "288660"
  },
  {
    "text": "if at most one sculpture\nis in room 2, or 0, OK?",
    "start": "288660",
    "end": "296840"
  },
  {
    "text": "So now I have to find my\nconstraint satisfaction problem",
    "start": "296840",
    "end": "301760"
  },
  {
    "text": "or factor graph, set of\nvariables, set of factors.",
    "start": "301760",
    "end": "305990"
  },
  {
    "text": "And now if I press Step, then\nit will magically solve the CSP.",
    "start": "305990",
    "end": "313940"
  },
  {
    "text": "And here there is one\nsatisfying assignment,",
    "start": "313940",
    "end": "317550"
  },
  {
    "text": "which assigns A to room 2,\nassigns B and C to room 1, OK?",
    "start": "317550",
    "end": "325620"
  },
  {
    "text": "So that's our first example\nof solving a constraint",
    "start": "325620",
    "end": "329850"
  },
  {
    "text": "satisfaction problem.",
    "start": "329850",
    "end": "333450"
  },
  {
    "text": "Here is another example\nfrom object tracking.",
    "start": "333450",
    "end": "336210"
  },
  {
    "text": "So suppose you're trying to\nbuild an autonomous driving",
    "start": "336210",
    "end": "338759"
  },
  {
    "text": "system.",
    "start": "338760",
    "end": "339570"
  },
  {
    "text": "You want to track\nwhere objects are, such",
    "start": "339570",
    "end": "342240"
  },
  {
    "text": "as cars and pedestrians, so\nyou know where not to drive.",
    "start": "342240",
    "end": "345750"
  },
  {
    "text": "So we're going to work with\na very simplified setup here.",
    "start": "345750",
    "end": "350940"
  },
  {
    "text": "And here, the setting\nis we're going",
    "start": "350940",
    "end": "352860"
  },
  {
    "text": "to have a number of\ndiscrete time steps--",
    "start": "352860",
    "end": "354969"
  },
  {
    "text": "0, 1, 2, 3, 4.",
    "start": "354970",
    "end": "358290"
  },
  {
    "text": "And at each time\nstep, we're going",
    "start": "358290",
    "end": "360510"
  },
  {
    "text": "to have a sensor\nobservation that",
    "start": "360510",
    "end": "362880"
  },
  {
    "text": "tells us a noisy\nindicator of the position",
    "start": "362880",
    "end": "366420"
  },
  {
    "text": "of a particular object.",
    "start": "366420",
    "end": "368020"
  },
  {
    "text": "So maybe at time\nstep 1, I'm going",
    "start": "368020",
    "end": "370110"
  },
  {
    "text": "to observe that the\nobject was at 0.",
    "start": "370110",
    "end": "374340"
  },
  {
    "text": "And at time step 2, I\nget observation of 2.",
    "start": "374340",
    "end": "379260"
  },
  {
    "text": "And at time step 3, I'm going\nto get observation of 2.",
    "start": "379260",
    "end": "382740"
  },
  {
    "text": "So the noisy sensors\nreport these positions--",
    "start": "382740",
    "end": "386099"
  },
  {
    "text": "0, 2, 2.",
    "start": "386100",
    "end": "388260"
  },
  {
    "text": "And we know that\nobjects can't teleport.",
    "start": "388260",
    "end": "393780"
  },
  {
    "text": "So the question is, what\ntrajectory did the object take?",
    "start": "393780",
    "end": "399960"
  },
  {
    "text": "Did it do something like\nthis, and actually the sensor",
    "start": "399960",
    "end": "403650"
  },
  {
    "text": "readings are correct?",
    "start": "403650",
    "end": "404759"
  },
  {
    "text": "Or maybe it did\nsomething like that,",
    "start": "404760",
    "end": "406290"
  },
  {
    "text": "or something\ncompletely different.",
    "start": "406290",
    "end": "411050"
  },
  {
    "text": "So how do we do this?",
    "start": "411050",
    "end": "413150"
  },
  {
    "start": "413000",
    "end": "656000"
  },
  {
    "text": "We're going to set up\nan object tracking CSP.",
    "start": "413150",
    "end": "416800"
  },
  {
    "text": "So let's first define\na factor graph.",
    "start": "416800",
    "end": "419919"
  },
  {
    "text": "The variables of\nthe factor graph",
    "start": "419920",
    "end": "422140"
  },
  {
    "text": "are going to include the\nposition of the object",
    "start": "422140",
    "end": "425440"
  },
  {
    "text": "at each time step, 1, 2, or 3.",
    "start": "425440",
    "end": "429100"
  },
  {
    "text": "There's three time steps.",
    "start": "429100",
    "end": "430600"
  },
  {
    "text": "And the domain of each\nvariable is 0, 1, or 2.",
    "start": "430600",
    "end": "434560"
  },
  {
    "text": "So object could be in\nposition 0, 1, or 2.",
    "start": "434560",
    "end": "438460"
  },
  {
    "text": "So Xi represents\nthe true position",
    "start": "438460",
    "end": "441130"
  },
  {
    "text": "of the object at time step i.",
    "start": "441130",
    "end": "444460"
  },
  {
    "text": "So now we're going to define a\nbunch of observation factors.",
    "start": "444460",
    "end": "449110"
  },
  {
    "text": "And this is going\nto be attempting",
    "start": "449110",
    "end": "450789"
  },
  {
    "text": "to incorporate the sensor\ninformation into the problem.",
    "start": "450790",
    "end": "456200"
  },
  {
    "text": "So remember at time step 1, we\nobserve that the object was 0.",
    "start": "456200",
    "end": "461710"
  },
  {
    "text": "Of course, this is\nnoisy, so we don't",
    "start": "461710",
    "end": "463690"
  },
  {
    "text": "want to trust it completely.",
    "start": "463690",
    "end": "465160"
  },
  {
    "text": "We're going to define an\nobservation factor, o1,",
    "start": "465160",
    "end": "468070"
  },
  {
    "text": "that captures this.",
    "start": "468070",
    "end": "469760"
  },
  {
    "text": "So o1 is going to\nbe a unary factor.",
    "start": "469760",
    "end": "473380"
  },
  {
    "text": "It depends only on x1.",
    "start": "473380",
    "end": "475330"
  },
  {
    "text": "And it's going to highly\nfavor assigning x1 to 0, which",
    "start": "475330",
    "end": "480939"
  },
  {
    "text": "is the actual observation.",
    "start": "480940",
    "end": "482500"
  },
  {
    "text": "But if x1 might be at 1, which\nis a neighboring location,",
    "start": "482500",
    "end": "488290"
  },
  {
    "text": "that's going to\nhave a weight of 1.",
    "start": "488290",
    "end": "490660"
  },
  {
    "text": "And if the object is\ntoo far away, then a 2,",
    "start": "490660",
    "end": "495580"
  },
  {
    "text": "then I'm going to say\nthat's disallowed.",
    "start": "495580",
    "end": "497560"
  },
  {
    "text": "So whenever you see a 0 weight--",
    "start": "497560",
    "end": "500590"
  },
  {
    "text": "a factor returning 0,\nthat's saying that's a veto.",
    "start": "500590",
    "end": "503770"
  },
  {
    "start": "503770",
    "end": "506389"
  },
  {
    "text": "OK, so 0, 2 is similar,\nbut applied to x2.",
    "start": "506390",
    "end": "514700"
  },
  {
    "text": "x2 is, remember, the position\nof the object at time step 2,",
    "start": "514700",
    "end": "519349"
  },
  {
    "text": "and it's going to favor x2\nbeing 2, and degrade if it's a 1",
    "start": "519350",
    "end": "524540"
  },
  {
    "text": "away, and forbid\nit if it's 2 away.",
    "start": "524540",
    "end": "528769"
  },
  {
    "text": "x3 is also similar, but applied\nto x3, which is the object",
    "start": "528770",
    "end": "534440"
  },
  {
    "text": "position at time step 3.",
    "start": "534440",
    "end": "536660"
  },
  {
    "text": "It's going to favor\nx3 equal 2, but also",
    "start": "536660",
    "end": "539420"
  },
  {
    "text": "going to degrade and forbid\nif it's too far away.",
    "start": "539420",
    "end": "543380"
  },
  {
    "text": "OK, so we have three\nobservation factors that",
    "start": "543380",
    "end": "545570"
  },
  {
    "text": "capture the sensor readings.",
    "start": "545570",
    "end": "548210"
  },
  {
    "text": "And now we're going to define\ntransition factors, which",
    "start": "548210",
    "end": "551690"
  },
  {
    "text": "represent the fact that\nobject's positions can't",
    "start": "551690",
    "end": "554660"
  },
  {
    "text": "change too much, or in other\nwords, objects can't teleport.",
    "start": "554660",
    "end": "559790"
  },
  {
    "text": "So here, we're going to write\nthis factor a little bit",
    "start": "559790",
    "end": "562040"
  },
  {
    "text": "differently.",
    "start": "562040",
    "end": "563310"
  },
  {
    "text": "It's going to be a\nlittle bit more compact.",
    "start": "563310",
    "end": "565130"
  },
  {
    "text": "So we're going to look at\nthe absolute difference",
    "start": "565130",
    "end": "567290"
  },
  {
    "text": "between an object\nat time step high",
    "start": "567290",
    "end": "572120"
  },
  {
    "text": "and an object at the\nnext time step, i plus 1.",
    "start": "572120",
    "end": "575779"
  },
  {
    "text": "And if the object\nhasn't moved, which",
    "start": "575780",
    "end": "578540"
  },
  {
    "text": "means that the\ndifference is 0, I'm",
    "start": "578540",
    "end": "580220"
  },
  {
    "text": "going to assign a weight of 2.",
    "start": "580220",
    "end": "582529"
  },
  {
    "text": "If it's moved by 1, then I'm\ngoing to assign a weight of 1.",
    "start": "582530",
    "end": "586010"
  },
  {
    "text": "And if it's moved\nby 2, I'm going",
    "start": "586010",
    "end": "588440"
  },
  {
    "text": "to assign a weight of 0,\nwhich is disallowing it, OK?",
    "start": "588440",
    "end": "592880"
  },
  {
    "text": "So this concludes the definition\nof the constraint satisfaction",
    "start": "592880",
    "end": "597170"
  },
  {
    "text": "problem for this simple\nobject tracking example.",
    "start": "597170",
    "end": "600980"
  },
  {
    "text": "And if I click on\nthe demo, I'll show--",
    "start": "600980",
    "end": "603800"
  },
  {
    "text": "I can see what the CFC looks\nlike in JavaScript code.",
    "start": "603800",
    "end": "608029"
  },
  {
    "text": "I have defined three\nvariables-- x1, x2, x3.",
    "start": "608030",
    "end": "611720"
  },
  {
    "text": "I'm going to define this\nhelper function nearby",
    "start": "611720",
    "end": "614990"
  },
  {
    "text": "that returns 2 if A and B are\nequal, 1 if they're 1 apart,",
    "start": "614990",
    "end": "619550"
  },
  {
    "text": "and 0 if they are 2 apart.",
    "start": "619550",
    "end": "622339"
  },
  {
    "text": "And then I'm going to\ndefine these factors--",
    "start": "622340",
    "end": "624350"
  },
  {
    "text": "o1, o2, o3, and t1 and t2.",
    "start": "624350",
    "end": "630440"
  },
  {
    "text": "So if I solve this CSP,\nthis will return all the set",
    "start": "630440",
    "end": "638750"
  },
  {
    "text": "of non-zero weight assignments.",
    "start": "638750",
    "end": "642920"
  },
  {
    "text": "And I'll see the maximum\nweight assignment is 1, 2, 2.",
    "start": "642920",
    "end": "647930"
  },
  {
    "text": "So this is a solution to a CSP.",
    "start": "647930",
    "end": "650000"
  },
  {
    "text": "It's assigning x1,\n1, x2, 2, and x3, 2.",
    "start": "650000",
    "end": "654770"
  },
  {
    "text": "Looking at this\npicture, it's 1, 2, 2.",
    "start": "654770",
    "end": "660320"
  },
  {
    "start": "656000",
    "end": "777000"
  },
  {
    "text": "So we think that the object\nprobably took this path.",
    "start": "660320",
    "end": "664400"
  },
  {
    "start": "664400",
    "end": "667760"
  },
  {
    "text": "OK, so that's the\nend of this example.",
    "start": "667760",
    "end": "671760"
  },
  {
    "text": "So now let's look\nat a third example--",
    "start": "671760",
    "end": "675560"
  },
  {
    "text": "event scheduling.",
    "start": "675560",
    "end": "676370"
  },
  {
    "text": "So CSPs are really suited for\ngenerally scheduling problems.",
    "start": "676370",
    "end": "680589"
  },
  {
    "text": "So here is an example of a\nsimple scheduling problem.",
    "start": "680590",
    "end": "684000"
  },
  {
    "text": "So you have a set\nof events and that",
    "start": "684000",
    "end": "687200"
  },
  {
    "text": "need to be assigned into\na number of time slots.",
    "start": "687200",
    "end": "692060"
  },
  {
    "text": "So the events are\nnumbered 1 through e,",
    "start": "692060",
    "end": "694460"
  },
  {
    "text": "and the time slots are\nnumbered 1 through t.",
    "start": "694460",
    "end": "698060"
  },
  {
    "text": "So we have three\nconditions here.",
    "start": "698060",
    "end": "699740"
  },
  {
    "text": "The first condition is\nthat each event must be",
    "start": "699740",
    "end": "702050"
  },
  {
    "text": "put in exactly one time slot.",
    "start": "702050",
    "end": "704870"
  },
  {
    "text": "Condition 2 says\nthat each time slot",
    "start": "704870",
    "end": "706700"
  },
  {
    "text": "can have at most one event.",
    "start": "706700",
    "end": "708470"
  },
  {
    "text": "So you can't double-book two\nevents into one time slot.",
    "start": "708470",
    "end": "711980"
  },
  {
    "text": "And then condition\n3 says that event e",
    "start": "711980",
    "end": "717350"
  },
  {
    "text": "is allowed in time slot t\nonly if this pair exists",
    "start": "717350",
    "end": "722720"
  },
  {
    "text": "in a set of allowed pairs.",
    "start": "722720",
    "end": "724220"
  },
  {
    "text": "So I can visualize a as a set\nof edges between the events",
    "start": "724220",
    "end": "728480"
  },
  {
    "text": "and the time slots.",
    "start": "728480",
    "end": "730010"
  },
  {
    "text": "And here is one\npossible assignment.",
    "start": "730010",
    "end": "733220"
  },
  {
    "text": "I assign event 1 to time slot 2,\nassign event 2 to time slot 1,",
    "start": "733220",
    "end": "741050"
  },
  {
    "text": "and assign event\n3 to time slot 3.",
    "start": "741050",
    "end": "744660"
  },
  {
    "text": "Notice that I can't assign event\n2 to time slot 2 because that",
    "start": "744660",
    "end": "749029"
  },
  {
    "text": "would violate C3.",
    "start": "749030",
    "end": "751400"
  },
  {
    "text": "There's no edge between\nevent 2 and time slot 2.",
    "start": "751400",
    "end": "756830"
  },
  {
    "text": "OK, so how are we going\nto model this as a CSP?",
    "start": "756830",
    "end": "759290"
  },
  {
    "text": "I'm actually going\nto show you not one",
    "start": "759290",
    "end": "761240"
  },
  {
    "text": "but two possible formulations\nof the CSP, which",
    "start": "761240",
    "end": "765050"
  },
  {
    "text": "goes to show that there\nare some flexibility,",
    "start": "765050",
    "end": "767300"
  },
  {
    "text": "or you can say artistic license,\nin terms of how you decide",
    "start": "767300",
    "end": "773089"
  },
  {
    "text": "to formulate problems as CSPs.",
    "start": "773090",
    "end": "778860"
  },
  {
    "start": "777000",
    "end": "1038000"
  },
  {
    "text": "OK, so the first\nformulation is going",
    "start": "778860",
    "end": "782459"
  },
  {
    "text": "to be looking at it from\nthe events perspective.",
    "start": "782460",
    "end": "786610"
  },
  {
    "text": "So here, I'm going to\ndefine a set of variables.",
    "start": "786610",
    "end": "789480"
  },
  {
    "text": "For each variable--\neach event e I'm",
    "start": "789480",
    "end": "792209"
  },
  {
    "text": "going to define a variable Xe.",
    "start": "792210",
    "end": "795780"
  },
  {
    "text": "And the domain of Xe is going\nto be some integer 1 through T.",
    "start": "795780",
    "end": "802600"
  },
  {
    "text": "So notice here that\nright off the bat",
    "start": "802600",
    "end": "804220"
  },
  {
    "text": "I've satisfied condition C1.",
    "start": "804220",
    "end": "807040"
  },
  {
    "text": "Because in a CSP,\nevery variable has",
    "start": "807040",
    "end": "810190"
  },
  {
    "text": "to take on exactly one value.",
    "start": "810190",
    "end": "812270"
  },
  {
    "text": "And so that means that\neach event will be",
    "start": "812270",
    "end": "816010"
  },
  {
    "text": "put in exactly one time slot.",
    "start": "816010",
    "end": "819030"
  },
  {
    "text": "So what about C2?",
    "start": "819030",
    "end": "820560"
  },
  {
    "text": "Now I have to do\nsomething for C2.",
    "start": "820560",
    "end": "822779"
  },
  {
    "text": "Notice that C2 is in\nterms of time slots,",
    "start": "822780",
    "end": "825900"
  },
  {
    "text": "but our variables are\nin terms of events.",
    "start": "825900",
    "end": "829090"
  },
  {
    "text": "So if you remember\nfrom the LSAT puzzle,",
    "start": "829090",
    "end": "831840"
  },
  {
    "text": "that means we implicitly have\nto define a factor that looks",
    "start": "831840",
    "end": "835470"
  },
  {
    "text": "at all possible variables here.",
    "start": "835470",
    "end": "839740"
  },
  {
    "text": "So I'm going to define a\nconstraint which is for--",
    "start": "839740",
    "end": "844200"
  },
  {
    "text": "on every pair of events.",
    "start": "844200",
    "end": "847860"
  },
  {
    "text": "I'm going to make sure that\nthe time slot that event e was",
    "start": "847860",
    "end": "853890"
  },
  {
    "text": "assigned is not the same as the\ntime slot that event e prime",
    "start": "853890",
    "end": "858390"
  },
  {
    "text": "was assigned.",
    "start": "858390",
    "end": "859530"
  },
  {
    "text": "So if I check this for\nall pairs of events,",
    "start": "859530",
    "end": "862740"
  },
  {
    "text": "now I've satisfied C2.",
    "start": "862740",
    "end": "865620"
  },
  {
    "text": "I can guarantee\nthat no time slot",
    "start": "865620",
    "end": "867690"
  },
  {
    "text": "has two events piling on to it.",
    "start": "867690",
    "end": "872080"
  },
  {
    "text": "OK, so now what about C3?",
    "start": "872080",
    "end": "873760"
  },
  {
    "text": "So each event must be only\nallowed in certain time slots.",
    "start": "873760",
    "end": "879520"
  },
  {
    "text": "So here, again, I'm going to\nlook at each possible event.",
    "start": "879520",
    "end": "883700"
  },
  {
    "text": "And I'm simply going to enforce\nthat whatever time slot event e",
    "start": "883700",
    "end": "888310"
  },
  {
    "text": "was assigned--\nthat's denoted Xe--",
    "start": "888310",
    "end": "891730"
  },
  {
    "text": "that pair is in the set of\nallowed event time slot pairs.",
    "start": "891730",
    "end": "897070"
  },
  {
    "text": "And that's enough to\nsatisfy condition three.",
    "start": "897070",
    "end": "899560"
  },
  {
    "text": "OK, so that's the first\nformulation of the CSP.",
    "start": "899560",
    "end": "905170"
  },
  {
    "text": "So now let's look at\nalternative formulation.",
    "start": "905170",
    "end": "909940"
  },
  {
    "text": "So now I'm going to look at from\na perspective of time slots.",
    "start": "909940",
    "end": "913610"
  },
  {
    "text": "So here I'm going to\ndefine a variable, Yt",
    "start": "913610",
    "end": "917649"
  },
  {
    "text": "for every possible time slot t.",
    "start": "917650",
    "end": "920460"
  },
  {
    "text": "And Yt can take on a\nvalue which is either",
    "start": "920460",
    "end": "923980"
  },
  {
    "text": "one of the possible\nevents, or null,",
    "start": "923980",
    "end": "927800"
  },
  {
    "text": "which means that no events\nhave been assigned to that time",
    "start": "927800",
    "end": "930430"
  },
  {
    "text": "slot.",
    "start": "930430",
    "end": "931660"
  },
  {
    "text": "So notice here right off the\nbat I've satisfied condition",
    "start": "931660",
    "end": "934480"
  },
  {
    "text": "2 because, remember, every\nvariable gets assigned exactly",
    "start": "934480",
    "end": "941620"
  },
  {
    "text": "one value, which is either\ngoing to be event or no event.",
    "start": "941620",
    "end": "945160"
  },
  {
    "text": "So you can't possibly assign\ntwo events to a time slot.",
    "start": "945160",
    "end": "949699"
  },
  {
    "text": "Now we have to deal\nwith condition 1.",
    "start": "949700",
    "end": "954130"
  },
  {
    "text": "So how do we deal with it?",
    "start": "954130",
    "end": "956330"
  },
  {
    "text": "So here all our variables\nare in terms of time slots,",
    "start": "956330",
    "end": "961300"
  },
  {
    "text": "but condition 1 is\nin terms of events.",
    "start": "961300",
    "end": "963589"
  },
  {
    "text": "So, again, we're going to have\nto define a constraint that",
    "start": "963590",
    "end": "967510"
  },
  {
    "text": "touches all the variables.",
    "start": "967510",
    "end": "969410"
  },
  {
    "text": "So for every event here\nI need to enforce that.",
    "start": "969410",
    "end": "974740"
  },
  {
    "text": "If I look over all the\ntime slots, that that event",
    "start": "974740",
    "end": "980910"
  },
  {
    "text": "shows up exactly once.",
    "start": "980910",
    "end": "983410"
  },
  {
    "text": "So what this is saying is that\nthis factor looks at all Y1",
    "start": "983410",
    "end": "988620"
  },
  {
    "text": "through Yt, and checks\nthat Yt equals--",
    "start": "988620",
    "end": "995180"
  },
  {
    "text": "Y little t-- equals e for\nexactly one of the possible ts.",
    "start": "995180",
    "end": "999660"
  },
  {
    "text": "So this will check\nthe box for C1.",
    "start": "999660",
    "end": "1002569"
  },
  {
    "text": "And now C3 is similar to before.",
    "start": "1002570",
    "end": "1005760"
  },
  {
    "text": "So for every time\nslot, we're going",
    "start": "1005760",
    "end": "1008030"
  },
  {
    "text": "to enforce that either nothing\nwas scheduled at that time",
    "start": "1008030",
    "end": "1011630"
  },
  {
    "text": "slot, or if something\nwere scheduled,",
    "start": "1011630",
    "end": "1013820"
  },
  {
    "text": "that that event and that\ntime slot are compatible.",
    "start": "1013820",
    "end": "1020320"
  },
  {
    "text": "OK, so that concludes\nthe definition",
    "start": "1020320",
    "end": "1022690"
  },
  {
    "text": "of the second formulation.",
    "start": "1022690",
    "end": "1025750"
  },
  {
    "text": "And now one might wonder\nwhich one is better.",
    "start": "1025750",
    "end": "1029260"
  },
  {
    "text": "And this is a matter\nof efficiency,",
    "start": "1029260",
    "end": "1033280"
  },
  {
    "text": "and there's various trade-offs\nwhich are discussed more",
    "start": "1033280",
    "end": "1036339"
  },
  {
    "text": "in the notes.",
    "start": "1036339",
    "end": "1037270"
  },
  {
    "start": "1037270",
    "end": "1040220"
  },
  {
    "start": "1038000",
    "end": "1338000"
  },
  {
    "text": "OK, so here is a final example\nof a CSP, which is going",
    "start": "1040220",
    "end": "1044959"
  },
  {
    "text": "to be a little bit different.",
    "start": "1044960",
    "end": "1046289"
  },
  {
    "text": "And so it will be\nkind of interesting.",
    "start": "1046290",
    "end": "1049680"
  },
  {
    "text": "So this is program verification.",
    "start": "1049680",
    "end": "1052370"
  },
  {
    "text": "So everyone writes programs,\nand you're probably",
    "start": "1052370",
    "end": "1054470"
  },
  {
    "text": "used to the idea of\nwriting unit tests to check",
    "start": "1054470",
    "end": "1057380"
  },
  {
    "text": "whether a program is correct.",
    "start": "1057380",
    "end": "1060620"
  },
  {
    "text": "But just because your program\npassed a bunch of tests",
    "start": "1060620",
    "end": "1063559"
  },
  {
    "text": "doesn't actually guarantee\nthat it's correct,",
    "start": "1063560",
    "end": "1065720"
  },
  {
    "text": "because you're never sure that\nyou covered all the cases.",
    "start": "1065720",
    "end": "1068480"
  },
  {
    "text": "So the idea behind\nprogram verification",
    "start": "1068480",
    "end": "1071720"
  },
  {
    "text": "is to prove that your program\nworks for all possible inputs.",
    "start": "1071720",
    "end": "1076289"
  },
  {
    "text": "So let's work through\na simple example.",
    "start": "1076290",
    "end": "1078170"
  },
  {
    "text": "Suppose you have\nthis program, foo,",
    "start": "1078170",
    "end": "1080450"
  },
  {
    "text": "which takes in two\nvalues, x and y,",
    "start": "1080450",
    "end": "1083510"
  },
  {
    "text": "and it computes the following.",
    "start": "1083510",
    "end": "1085920"
  },
  {
    "text": "So it's going to\nassign x times x to a.",
    "start": "1085920",
    "end": "1089850"
  },
  {
    "text": "It's going to add y times y to\na, and then assign that to b.",
    "start": "1089850",
    "end": "1094610"
  },
  {
    "text": "And then it's going to\nsubtract this quantity",
    "start": "1094610",
    "end": "1097370"
  },
  {
    "text": "and assign it to c and return c.",
    "start": "1097370",
    "end": "1100520"
  },
  {
    "text": "So the thing I\nwant to prove here",
    "start": "1100520",
    "end": "1103640"
  },
  {
    "text": "is this following specification\nthat c is greater or equal to 0",
    "start": "1103640",
    "end": "1108830"
  },
  {
    "text": "no matter what\nvalue x and y take.",
    "start": "1108830",
    "end": "1112820"
  },
  {
    "text": "So here is how I'm going\nto specify the CSP.",
    "start": "1112820",
    "end": "1117799"
  },
  {
    "text": "I'm going to define a set of\nvariables that corresponds",
    "start": "1117800",
    "end": "1121880"
  },
  {
    "text": "to both the inputs and also the\nintermediate quantities that",
    "start": "1121880",
    "end": "1125660"
  },
  {
    "text": "are computed along the way.",
    "start": "1125660",
    "end": "1126990"
  },
  {
    "text": "So x, y, a, b, and c.",
    "start": "1126990",
    "end": "1129530"
  },
  {
    "text": "And now I'm going to\ndefine a set of constraints",
    "start": "1129530",
    "end": "1132620"
  },
  {
    "text": "corresponding to the\nprogram statements",
    "start": "1132620",
    "end": "1134809"
  },
  {
    "text": "which are going to\nrelate these variables.",
    "start": "1134810",
    "end": "1137640"
  },
  {
    "text": "And so for the first\nconstraint, I'm",
    "start": "1137640",
    "end": "1139670"
  },
  {
    "text": "going to have a equals x\nsquared, which captures what",
    "start": "1139670",
    "end": "1143900"
  },
  {
    "text": "this first statement is doing.",
    "start": "1143900",
    "end": "1146780"
  },
  {
    "text": "I'm going to have b equals\na-plus y squared, which",
    "start": "1146780",
    "end": "1149448"
  },
  {
    "text": "is going to capture the\nsecond program statement.",
    "start": "1149448",
    "end": "1151490"
  },
  {
    "text": "And c equals b minus 2xy,\nwhich is going to capture",
    "start": "1151490",
    "end": "1155090"
  },
  {
    "text": "the third program statement.",
    "start": "1155090",
    "end": "1158340"
  },
  {
    "text": "So an important\nbut really subtle",
    "start": "1158340",
    "end": "1160789"
  },
  {
    "text": "note is that equals\nmeans two things here.",
    "start": "1160790",
    "end": "1164860"
  },
  {
    "text": "So in the Python program, equal\nis an assignment operator.",
    "start": "1164860",
    "end": "1169290"
  },
  {
    "text": "It says take the right-hand\nside, compute its value,",
    "start": "1169290",
    "end": "1172530"
  },
  {
    "text": "and then put it in the variable\nthat is on the left-hand side.",
    "start": "1172530",
    "end": "1177010"
  },
  {
    "text": "Whereas, in the CSP,\nequal represents",
    "start": "1177010",
    "end": "1180070"
  },
  {
    "text": "mathematical equality.",
    "start": "1180070",
    "end": "1181929"
  },
  {
    "text": "It's saying whether\nthe left-hand side is",
    "start": "1181930",
    "end": "1185320"
  },
  {
    "text": "equal to the right-hand side.",
    "start": "1185320",
    "end": "1188130"
  },
  {
    "text": "So remember what this factor--",
    "start": "1188130",
    "end": "1192500"
  },
  {
    "text": "don't be deceived by the\nlooks of this factor,",
    "start": "1192500",
    "end": "1195890"
  },
  {
    "text": "is actually a\nfunction that takes",
    "start": "1195890",
    "end": "1198950"
  },
  {
    "text": "in a value of a and a\nvalue of x, and checks",
    "start": "1198950",
    "end": "1202850"
  },
  {
    "text": "whether a equals x squared.",
    "start": "1202850",
    "end": "1204919"
  },
  {
    "text": "It returns a 1 or a 0.",
    "start": "1204920",
    "end": "1206960"
  },
  {
    "text": "So it's doing checking.",
    "start": "1206960",
    "end": "1208399"
  },
  {
    "text": "Whereas, a equals x times\nx is doing assignment.",
    "start": "1208400",
    "end": "1212540"
  },
  {
    "text": "It's taking x squared\nand putting it into a.",
    "start": "1212540",
    "end": "1217400"
  },
  {
    "text": "So now there's a\nfinal constraint",
    "start": "1217400",
    "end": "1219620"
  },
  {
    "text": "for this specification.",
    "start": "1219620",
    "end": "1221130"
  },
  {
    "text": "And this is also\nkind of interesting.",
    "start": "1221130",
    "end": "1224120"
  },
  {
    "text": "Note that we wanted to check\nthat c is greater than 0",
    "start": "1224120",
    "end": "1228020"
  },
  {
    "text": "for all x and y.",
    "start": "1228020",
    "end": "1229850"
  },
  {
    "text": "But we're going to\nnegate that here.",
    "start": "1229850",
    "end": "1232130"
  },
  {
    "text": "Because CSPs were doing--",
    "start": "1232130",
    "end": "1234350"
  },
  {
    "text": "only looking for an existence\nof a particular assignment.",
    "start": "1234350",
    "end": "1238910"
  },
  {
    "text": "CSPs can't natively check\nall possible assignments",
    "start": "1238910",
    "end": "1244400"
  },
  {
    "text": "in a sense.",
    "start": "1244400",
    "end": "1245970"
  },
  {
    "text": "So we're going to negate it.",
    "start": "1245970",
    "end": "1247169"
  },
  {
    "text": "So intuitively,\nwhat this is doing",
    "start": "1247170",
    "end": "1248990"
  },
  {
    "text": "is looking for a counterexample.",
    "start": "1248990",
    "end": "1250670"
  },
  {
    "text": "It's going to say, hey, can we\nfind a setting of x, y, a, b,",
    "start": "1250670",
    "end": "1255650"
  },
  {
    "text": "and c, such that we are\nable to find a c less than",
    "start": "1255650",
    "end": "1260090"
  },
  {
    "text": "or equal to 0.",
    "start": "1260090",
    "end": "1262640"
  },
  {
    "text": "And if we can, that means the\nspecification doesn't hold.",
    "start": "1262640",
    "end": "1269450"
  },
  {
    "text": "There's a counter example.",
    "start": "1269450",
    "end": "1271850"
  },
  {
    "text": "But if we're not able to find\nany consistent assignment,",
    "start": "1271850",
    "end": "1275929"
  },
  {
    "text": "if a CSP is not\nsatisfiable, that",
    "start": "1275930",
    "end": "1279170"
  },
  {
    "text": "means the program\nsatisfies a specification.",
    "start": "1279170",
    "end": "1283120"
  },
  {
    "text": "So it's maybe a little bit\ncounterintuitive at first.",
    "start": "1283120",
    "end": "1285430"
  },
  {
    "text": "But we're proving\ncorrectness based",
    "start": "1285430",
    "end": "1288850"
  },
  {
    "text": "on the fact that the CSP has\nno satisfying assignments.",
    "start": "1288850",
    "end": "1293760"
  },
  {
    "text": "So one thing that's really\nkind of cool and interesting",
    "start": "1293760",
    "end": "1296790"
  },
  {
    "text": "about formulating\nthe program as a CSP,",
    "start": "1296790",
    "end": "1301170"
  },
  {
    "text": "and the fact that this\nmathematical equality",
    "start": "1301170",
    "end": "1303570"
  },
  {
    "text": "is bi-directional, is\nthat the CSP can actually",
    "start": "1303570",
    "end": "1309299"
  },
  {
    "text": "reason in no particular order.",
    "start": "1309300",
    "end": "1311910"
  },
  {
    "text": "It can look-- start with this\nconstraint, see less than 0,",
    "start": "1311910",
    "end": "1315930"
  },
  {
    "text": "and it can work backwards.",
    "start": "1315930",
    "end": "1317190"
  },
  {
    "text": "It can look backwards\nto c, b, and a.",
    "start": "1317190",
    "end": "1319950"
  },
  {
    "text": "Or it can look forwards,\nstarting with x and y.",
    "start": "1319950",
    "end": "1323039"
  },
  {
    "text": "Or it can do it in kind of\na more sophisticated order.",
    "start": "1323040",
    "end": "1326040"
  },
  {
    "text": "Whereas, if you were only\nto execute the program,",
    "start": "1326040",
    "end": "1328890"
  },
  {
    "text": "you can only go forwards.",
    "start": "1328890",
    "end": "1330720"
  },
  {
    "text": "So this shows you the\nflexibility and power",
    "start": "1330720",
    "end": "1333090"
  },
  {
    "text": "of reasoning over programs\nusing a constraint satisfaction",
    "start": "1333090",
    "end": "1336789"
  },
  {
    "text": "problem.",
    "start": "1336790",
    "end": "1337290"
  },
  {
    "start": "1337290",
    "end": "1339840"
  },
  {
    "start": "1338000",
    "end": "1495000"
  },
  {
    "text": "OK, so we've presented a number\nof examples of real world",
    "start": "1339840",
    "end": "1343559"
  },
  {
    "text": "problems and shown you how to\nformulate them as a CSP or two.",
    "start": "1343560",
    "end": "1349080"
  },
  {
    "text": "So how do you do it?",
    "start": "1349080",
    "end": "1350220"
  },
  {
    "text": "Well, first step is to decide on\nthe variables and the domains.",
    "start": "1350220",
    "end": "1354659"
  },
  {
    "text": "And you want to check\nthat an assignment to all",
    "start": "1354660",
    "end": "1357300"
  },
  {
    "text": "these variables gives you\nthe result of interest.",
    "start": "1357300",
    "end": "1362050"
  },
  {
    "text": "And then we take a look at all\nthe desiderata, the constraints",
    "start": "1362050",
    "end": "1365340"
  },
  {
    "text": "and the preferences, the\nwishes, and translate them",
    "start": "1365340",
    "end": "1368909"
  },
  {
    "text": "into a set of factors.",
    "start": "1368910",
    "end": "1371250"
  },
  {
    "text": "And the nice thing about\nCSPs is that this process",
    "start": "1371250",
    "end": "1374310"
  },
  {
    "text": "is often paralyzable.",
    "start": "1374310",
    "end": "1376110"
  },
  {
    "text": "So if you have a\nset of desiderata,",
    "start": "1376110",
    "end": "1378000"
  },
  {
    "text": "usually each desideratum\ntranslate into a factor",
    "start": "1378000",
    "end": "1382380"
  },
  {
    "text": "or a set of factors.",
    "start": "1382380",
    "end": "1383623"
  },
  {
    "text": "And then at the end\nof the day, you just",
    "start": "1383623",
    "end": "1385290"
  },
  {
    "text": "throw in all the\nfactors into your CSP.",
    "start": "1385290",
    "end": "1389820"
  },
  {
    "text": "So there are some\nnotes to keep in mind",
    "start": "1389820",
    "end": "1393149"
  },
  {
    "text": "when you're designing constraint\nsatisfaction problems.",
    "start": "1393150",
    "end": "1396000"
  },
  {
    "text": "You should keep the\nCSP small so that they",
    "start": "1396000",
    "end": "1398370"
  },
  {
    "text": "will be more computationally\nefficient to solve, which",
    "start": "1398370",
    "end": "1402510"
  },
  {
    "text": "means either having\nfewer variables,",
    "start": "1402510",
    "end": "1405240"
  },
  {
    "text": "fewer factors, a smaller\nnumber of domains,",
    "start": "1405240",
    "end": "1410760"
  },
  {
    "text": "smaller number of arities.",
    "start": "1410760",
    "end": "1412350"
  },
  {
    "text": "You can't make everything small,\nand there's various trade-offs.",
    "start": "1412350",
    "end": "1418140"
  },
  {
    "text": "What exactly is the recipe\nfor computational efficiency",
    "start": "1418140",
    "end": "1422460"
  },
  {
    "text": "really depends on the problems.",
    "start": "1422460",
    "end": "1424020"
  },
  {
    "text": "There's no kind of general rule.",
    "start": "1424020",
    "end": "1427840"
  },
  {
    "text": "So this is going to be a\nlittle bit of an art here.",
    "start": "1427840",
    "end": "1431850"
  },
  {
    "text": "And finally, one\njust kind of reminder",
    "start": "1431850",
    "end": "1434490"
  },
  {
    "text": "is that when you think about\nimplementing each factor,",
    "start": "1434490",
    "end": "1438630"
  },
  {
    "text": "it is true that each factor is\nitself a little mini program.",
    "start": "1438630",
    "end": "1443705"
  },
  {
    "text": "But you should\nreally think of it",
    "start": "1443705",
    "end": "1445080"
  },
  {
    "text": "in terms of checking a solution,\nchecking whether assignment",
    "start": "1445080",
    "end": "1449340"
  },
  {
    "text": "to the variables that that\nfactor encompasses is valid,",
    "start": "1449340",
    "end": "1454440"
  },
  {
    "text": "rather than trying to\ncompute the solution.",
    "start": "1454440",
    "end": "1457210"
  },
  {
    "text": "So equals is mathematical\nor equality, rather than",
    "start": "1457210",
    "end": "1461190"
  },
  {
    "text": "assignment.",
    "start": "1461190",
    "end": "1462000"
  },
  {
    "text": "And this is really important,\nand it takes a little bit",
    "start": "1462000",
    "end": "1465420"
  },
  {
    "text": "of getting used to.",
    "start": "1465420",
    "end": "1466350"
  },
  {
    "text": "Because CSPs requires a\nfundamentally different mindset",
    "start": "1466350",
    "end": "1469289"
  },
  {
    "text": "than normal kind of\nprocedural programming,",
    "start": "1469290",
    "end": "1472660"
  },
  {
    "text": "which is most salient in the\nprogram verification example.",
    "start": "1472660",
    "end": "1478140"
  },
  {
    "text": "But hopefully, after\na bit of practice",
    "start": "1478140",
    "end": "1480150"
  },
  {
    "text": "you'll get used to\nthinking in terms of CSPs,",
    "start": "1480150",
    "end": "1483540"
  },
  {
    "text": "and hopefully it will\nbecome more second nature.",
    "start": "1483540",
    "end": "1486760"
  },
  {
    "text": "All right.",
    "start": "1486760",
    "end": "1487260"
  },
  {
    "text": "So that's the end\nof this module.",
    "start": "1487260",
    "end": "1490160"
  },
  {
    "start": "1490160",
    "end": "1495000"
  }
]