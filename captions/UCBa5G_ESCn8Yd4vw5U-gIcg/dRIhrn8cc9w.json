[
  {
    "start": "0",
    "end": "212000"
  },
  {
    "text": "So, what we're gonna do today is we're gonna start to talk about Model-Free Policy Evaluation.",
    "start": "4130",
    "end": "10125"
  },
  {
    "text": "Um, so, what we were discussing last time is we started formally defining Markov processes,",
    "start": "10125",
    "end": "17100"
  },
  {
    "text": "Markov reward processes and Markov decision processes, and we're looking at the relationship between",
    "start": "17100",
    "end": "22160"
  },
  {
    "text": "these different forms of processes which are ways for us to model sequential decision-making under uncertainty problems.",
    "start": "22160",
    "end": "28224"
  },
  {
    "text": "So, what we're thinking about last week was, well what if someone gives us a model of how the world works?",
    "start": "28225",
    "end": "33559"
  },
  {
    "text": "So, we know what the reward model is, we know what the dynamics model is. It still might be hard to figure out what's the right thing to do.",
    "start": "33560",
    "end": "40585"
  },
  {
    "text": "So, how do we take actions or how do we find a policy that can maximize our expected discounted sum of rewards?",
    "start": "40585",
    "end": "47795"
  },
  {
    "text": "Um, if- even if we're given a model, then we still need to do some computation to try to identify that policy.",
    "start": "47795",
    "end": "54205"
  },
  {
    "text": "So, what we're gonna get to very shortly is how do we do all of that when we don't get a model of the world in advance.",
    "start": "54205",
    "end": "60605"
  },
  {
    "text": "But, let's just first a recap, um, sort of this general problem of policy evaluation.",
    "start": "60605",
    "end": "66140"
  },
  {
    "text": "So, we heard a little bit about policy evaluation last time when we talked about policy evaluation as being one step inside a policy,",
    "start": "66140",
    "end": "73535"
  },
  {
    "text": "um, iteration which alternated between policy evaluation and policy improvement. So, the idea in policy evaluation is somebody gives you",
    "start": "73535",
    "end": "82010"
  },
  {
    "text": "a way to act and then you want to figure out how good that policy is. So, what is the expected discounted sum of rewards for that particular policy?",
    "start": "82010",
    "end": "90485"
  },
  {
    "text": "And what we're gonna be talking about today is dynamic programming, Monte Carlo policy evaluation, and TD learning.",
    "start": "90485",
    "end": "98115"
  },
  {
    "text": "As well as some of the ways that we should think about trying to compare between these algorithms.",
    "start": "98115",
    "end": "103200"
  },
  {
    "text": "So, just as a brief recall, um, remember that last time we defined what a return is for Markov reward process.",
    "start": "103220",
    "end": "111325"
  },
  {
    "text": "And a return for a Markov reward process that we defined by G_t was the discounted sum of rewards we get from that particular time point t onwards.",
    "start": "111325",
    "end": "122170"
  },
  {
    "text": "So, we're gonna get an immediate reward of Rt and then after that,",
    "start": "122170",
    "end": "127590"
  },
  {
    "text": "we're gonna get Gamma, where Gamma was our discount factor. And remember we're gonna assume that's gonna be somewhere between zero and one.",
    "start": "127590",
    "end": "135560"
  },
  {
    "text": "And so, we're sort of weighing future awards generally less than the immediate rewards.",
    "start": "136070",
    "end": "141280"
  },
  {
    "text": "The definition of a state value function was the expected return. And in general, the expected return is gonna be different from",
    "start": "141280",
    "end": "148820"
  },
  {
    "text": "a particular return if the domain is stochastic, because the [NOISE] reward you might get when you try to drive to the airport",
    "start": "148820",
    "end": "155840"
  },
  {
    "text": "today is likely gonna be different than the reward you get when you drive to the airport tomorrow, because traffic will be slightly different,",
    "start": "155840",
    "end": "161450"
  },
  {
    "text": "and it's stochastic, varies over time. And so, you can compare whether, you know, on a particular day if it took you two hours to get to the airport versus on average,",
    "start": "161450",
    "end": "169850"
  },
  {
    "text": "it might take you only an hour. We also defined the state action value function which was the expected reward,",
    "start": "169850",
    "end": "177605"
  },
  {
    "text": "um, if we're following a particular policy Pi but we start off by taking an action a. [NOISE] So, we're saying if you're in a state s,",
    "start": "177605",
    "end": "185325"
  },
  {
    "text": "you take an action a, and from then onwards, you follow this policy Pi that someone's given you.",
    "start": "185325",
    "end": "190444"
  },
  {
    "text": "What is the expected discounted sum of rewards? And we saw that Q functions were useful because we",
    "start": "190445",
    "end": "196280"
  },
  {
    "text": "can use them for things like policy improvement, because they allowed us to think about, well,",
    "start": "196280",
    "end": "201350"
  },
  {
    "text": "if we wanna follow a policy later but we do something slightly different to start, can we see how that would help us improve in terms of the amount of reward we'd obtain?",
    "start": "201350",
    "end": "210540"
  },
  {
    "text": "So, we talked about this somewhat but as a recap, um, we talked about doing dynamic programming for policy evaluation.",
    "start": "211450",
    "end": "218900"
  },
  {
    "start": "212000",
    "end": "353000"
  },
  {
    "text": "So, dynamic programming was something we could apply when we know how the world works. So, this is when we're given the dynamics,",
    "start": "218900",
    "end": "228715"
  },
  {
    "text": "and I'll use the word dynamics or transition model interchangeably in this course. So, if you're given the dynamics or the transition model p and the reward model,",
    "start": "228715",
    "end": "239220"
  },
  {
    "text": "then you can do dynamic programming to evaluate how good a policy is. And so, the way we talked about doing this is that you initialize your value function,",
    "start": "241730",
    "end": "250129"
  },
  {
    "text": "which you could think of generally as a vector. Right now, we're thinking about there being a finite set of states and actions.",
    "start": "250129",
    "end": "255319"
  },
  {
    "text": "So, you can initialize your value function for this particular policy to be zero, um, and then you iterate until convergence.",
    "start": "255320",
    "end": "262805"
  },
  {
    "text": "Where we say the value of a state is exactly equal to the immediate reward we get from following that policy in that state plus",
    "start": "262805",
    "end": "270530"
  },
  {
    "text": "the discounted sum of future rewards we get [NOISE] using our transition model and the value that we've computed from a previous iteration.",
    "start": "270530",
    "end": "280384"
  },
  {
    "text": "And we talked about defining convergence here. Convergence generally we're gonna use some sort of norm to compare",
    "start": "280385",
    "end": "286370"
  },
  {
    "text": "the difference between our value functions on one iteration and next. So, we do things like this,",
    "start": "286370",
    "end": "291919"
  },
  {
    "text": "V_Pi_k minus V_Pi at k minus one [NOISE].",
    "start": "291920",
    "end": "297200"
  },
  {
    "text": "And wait for this to be smaller than some Epsilon. Okay. So, just as a reminder to what is this quantity that we're computing representing?",
    "start": "297200",
    "end": "308335"
  },
  {
    "text": "Well, we can think of this quantity that we're computing, um, as being an exact value of the k horizon value of state s under that policy.",
    "start": "308335",
    "end": "316700"
  },
  {
    "text": "So, on any particular iteration, it's as if we know exactly what value we would get if we could only act for a finite number of time steps like k time steps.",
    "start": "316700",
    "end": "325390"
  },
  {
    "text": "Says, you know, how good would it be if you followed this particular policy for the next k time steps?",
    "start": "325390",
    "end": "331025"
  },
  {
    "text": "Equivalently, you can think of it as an approximation of what the value would be if you acted forever.",
    "start": "331025",
    "end": "337250"
  },
  {
    "text": "So, if k is really large, k is 20 billion, then it's probably gonna be a pretty good approximation",
    "start": "337250",
    "end": "342835"
  },
  {
    "text": "to the value you'd get if you'd act forever. And if k is one, that's probably gonna be a pretty bad estimate.",
    "start": "342835",
    "end": "348980"
  },
  {
    "text": "This will converge over time. So, I think it's useful to think about some of these things graphically as well.",
    "start": "348980",
    "end": "355550"
  },
  {
    "start": "353000",
    "end": "927000"
  },
  {
    "text": "So, let's think about this as you're in a state s, which I'm denoting with that white circle at the top and then you can take an action.",
    "start": "355550",
    "end": "363115"
  },
  {
    "text": "So, what dynamic programming is doing is it's computing an estimate of the V_Pi here at the top by saying,",
    "start": "363115",
    "end": "370070"
  },
  {
    "text": "\"What is the expectation, expectation over Pi of RT plus Gamma V_k minus one.",
    "start": "370070",
    "end": "376354"
  },
  {
    "text": "And what's that expectation over it's gonna be the probability of s prime given s,",
    "start": "376355",
    "end": "381770"
  },
  {
    "text": "Pi of s. Okay. So, how do we think about this graphically? Well, we started in this state,",
    "start": "381770",
    "end": "387229"
  },
  {
    "text": "we take an action and then we think about the next states that we could reach. We're kind of again assuming that we're in a stochastic process.",
    "start": "387230",
    "end": "394670"
  },
  {
    "text": "So, maybe, you know, sometimes the red light is on and sometimes the red light is off. So, depending on that, we are gonna be at a different next state,",
    "start": "394670",
    "end": "400580"
  },
  {
    "text": "we're trying to drive to the airport. And then we can think about after we reach that state,",
    "start": "400580",
    "end": "406460"
  },
  {
    "text": "then we can take some other actions. And in particular, we can take one action in this case because we're assuming we're fixing what the policy is.",
    "start": "406460",
    "end": "412955"
  },
  {
    "text": "And then from those, that, those actions would lead us to other possible states. So, we can think of sort of drawing the tree of trajectories that we might",
    "start": "412955",
    "end": "420680"
  },
  {
    "text": "reach if we started in a state and start following our policy, where whenever we get to make a choice,",
    "start": "420680",
    "end": "426200"
  },
  {
    "text": "there's a single action we take because we're doing policy evaluation. And whenever there's sort of nature's choice,",
    "start": "426200",
    "end": "432020"
  },
  {
    "text": "then there's like a distribution over next states that we might reach. So, you can think of these as the S-prime and",
    "start": "432020",
    "end": "437360"
  },
  {
    "text": "the S double-primes kind of time is going down like this. So, this is sort of you know the,",
    "start": "437360",
    "end": "444065"
  },
  {
    "text": "the potential futures that your agent could arise in. And I think it's useful to think about this graphically because",
    "start": "444065",
    "end": "449810"
  },
  {
    "text": "then we can think about how those potential futures, um, how we can use those to compute what is the value,",
    "start": "449810",
    "end": "455150"
  },
  {
    "text": "a difference of this policy. So, um, in what dynamic program what we're doing and",
    "start": "455150",
    "end": "460850"
  },
  {
    "text": "in general when we're trying to compute the value of a policy is, we're gonna take an expectation over next states.",
    "start": "460850",
    "end": "469075"
  },
  {
    "text": "So, the value is the expected discounted sum of future rewards if we follow this policy,",
    "start": "469075",
    "end": "475730"
  },
  {
    "text": "and the expectation is exactly over these distributions of futures. So, whenever we see",
    "start": "475730",
    "end": "481655"
  },
  {
    "text": "an action and then we think about all the next possible nodes we could get to, we want to take an expectation over those features and expectation over all the rewards we could get.",
    "start": "481655",
    "end": "490480"
  },
  {
    "text": "So, that's what dynamic programming is or that's what we can think of this graph is doing. And when we think about what dynamic programming is doing,",
    "start": "490480",
    "end": "497450"
  },
  {
    "text": "is it estimates this expectation over all those possible futures by bootstrapping and computing a one timestep expectation exactly.",
    "start": "497450",
    "end": "506495"
  },
  {
    "text": "So, what does it do? Again, it says, \"My V_Pi of s is exactly equal to r of s, Pi of s,",
    "start": "506495",
    "end": "515745"
  },
  {
    "text": "my immediate reward plus Gamma sum over probability of s prime given",
    "start": "515745",
    "end": "521050"
  },
  {
    "text": "s a V_Pi k minus one, the best part.",
    "start": "521050",
    "end": "527274"
  },
  {
    "text": "So, it bootstraps, and we're using the word bootstraps there because it's not actually summing up all of these lower down potential rewards.",
    "start": "527275",
    "end": "536355"
  },
  {
    "text": "It's saying, \"I don't need to do that.\" Previously, I computed what it would be like if I started say in this state and continued on for the future.",
    "start": "536355",
    "end": "544445"
  },
  {
    "text": "And so, I, now I already know what the value is at that state, and I'm gonna bootstrap and use that as",
    "start": "544445",
    "end": "549710"
  },
  {
    "text": "a substitute for actually doing all that roll-out. And also here, because I know what the expected discounted or I know what the,",
    "start": "549710",
    "end": "557290"
  },
  {
    "text": "um, sorry, the model is, that it can also just take a direct expectation over s prime. So, my question is, is there an implicit assumption here that",
    "start": "557290",
    "end": "565430"
  },
  {
    "text": "the reward at a given state and thus the value function of evaluated states doesn't change over time.",
    "start": "565430",
    "end": "571475"
  },
  {
    "text": "So, like because you're using it from the prior iteration? So, I think that question is saying, um,",
    "start": "571475",
    "end": "578115"
  },
  {
    "text": "is there an explicit assumption here that the value doesn't change over time? Yes. The idea in this case is that the value that we're",
    "start": "578115",
    "end": "584209"
  },
  {
    "text": "computing is for the infinite horizon case and therefore that it's stationary. It doesn't depend on the time step.",
    "start": "584210",
    "end": "589355"
  },
  {
    "text": "From that way we're not gonna talk very much about the finite horizon case today, in that case it's different. In this situation, we're saying at all time",
    "start": "589355",
    "end": "596510"
  },
  {
    "text": "steps you always have an infinite number more time steps to go. So, the value function itself is a stationary quantity.",
    "start": "596510",
    "end": "602940"
  },
  {
    "text": "So, why is this an okay thing to do like we're bootstrapping? Um, the reason that this is okay is because we actually have",
    "start": "605600",
    "end": "612620"
  },
  {
    "text": "an exact representation of this V_k minus one. You're not getting any approximation error of putting that in",
    "start": "612620",
    "end": "619190"
  },
  {
    "text": "instead of sort of explicitly summing over lots of different histories. Sorry, lots of different future rewards.",
    "start": "619190",
    "end": "625410"
  },
  {
    "text": "So, when we're doing dynamic programming the things to sort of think about here is if we know the model,",
    "start": "626450",
    "end": "631775"
  },
  {
    "text": "then know dynamic model and know the reward model, that we can compute the immediate reward exactly. We can compute our expected sum over future states exactly,",
    "start": "631775",
    "end": "640670"
  },
  {
    "text": "and then we substitute in instead of thinking about, we, instead of thinking about expanding this out as being a sum over rewards,",
    "start": "640670",
    "end": "648590"
  },
  {
    "text": "we can just bootstrap and use our current estimate of V_k minus one. And the reason that I'm emphasizing this a lot is that when we start to",
    "start": "648590",
    "end": "656690"
  },
  {
    "text": "look at these other methods like Monte Carlo methods and TD methods, they're not gonna do this anymore. They're gonna do other forms of approximation of trying to compute this tree.",
    "start": "656690",
    "end": "664900"
  },
  {
    "text": "So, ultimately to compute the value of a policy, what we're essentially doing is we're thinking about",
    "start": "664900",
    "end": "669980"
  },
  {
    "text": "all possible futures and what is the return we'd get under each of those futures. And we're trying to make it tractable to compute that particularly when we don't know how",
    "start": "669980",
    "end": "678800"
  },
  {
    "text": "the world works and we don't have access to the dynamics model or the reward model.",
    "start": "678800",
    "end": "683310"
  },
  {
    "text": "Okay. So, just to summarize dynamic programming, we should talk a little- a little bit about last time,",
    "start": "686600",
    "end": "692340"
  },
  {
    "text": "but we didn't really talk about the bootstrapping aspect. Dynamic programming says the value of a policy is approximately equal to",
    "start": "692340",
    "end": "699720"
  },
  {
    "text": "the expected next- the expectation over pi of immediate reward plus gamma times the previous value you computed requires a model,",
    "start": "699720",
    "end": "708030"
  },
  {
    "text": "it bootstraps the future return using an estimate, using your V_k minus 1.",
    "start": "708030",
    "end": "713280"
  },
  {
    "text": "And it requires the Markov assumption. And what- what I mean by that there is that, um,",
    "start": "713280",
    "end": "719985"
  },
  {
    "text": "you're not thinking about all the past you got to reach a certain state. You're saying no matter how I got to that previous state,",
    "start": "719985",
    "end": "726225"
  },
  {
    "text": "my value of that state is identical, um, and I can sort of assume that, and I can compute that singly based on the current observation.",
    "start": "726225",
    "end": "734860"
  },
  {
    "text": "So, may I have any questions about this. So, right now we're mostly recap of last time, um,",
    "start": "735260",
    "end": "740310"
  },
  {
    "text": "but sort of slightly pointing out some things that I didn't point out before.",
    "start": "740310",
    "end": "744100"
  },
  {
    "text": "Okay. So, those things are useful now that we're gonna be talking about policy evaluation without a model.",
    "start": "745490",
    "end": "752040"
  },
  {
    "text": "So, what we're going to talk about now is Monte Carlo policy evaluation which is something that we can apply when we don't know what the models are of the world,",
    "start": "752040",
    "end": "759839"
  },
  {
    "text": "and we're gonna talk a little bit about how we can start to think about comparing these different forms of estimators, estimators of the value of a policy.",
    "start": "759840",
    "end": "767709"
  },
  {
    "text": "So, in Monte Carlo policy evaluation, um, we can again think about the return.",
    "start": "768290",
    "end": "774420"
  },
  {
    "text": "So, the returning and G_t are discounted sum of future rewards under a policy,",
    "start": "774420",
    "end": "779430"
  },
  {
    "text": "and the value of a policy we can represent now is just, let's think about all the possible trajectories we could get,",
    "start": "779430",
    "end": "787785"
  },
  {
    "text": "um, under our policy and what's average all their returns. So, we can again think about that tree we just constructed.",
    "start": "787785",
    "end": "794265"
  },
  {
    "text": "Each of those different sort of branches would have had a particular reward, um, and then we're just going to get the average over all of them.",
    "start": "794265",
    "end": "800925"
  },
  {
    "text": "So, it's a pretty simple idea. The idea is that the value is just equal to your expected return.",
    "start": "800925",
    "end": "808000"
  },
  {
    "text": "And if all your trajectories are finite, you just can take a whole bunch of these and you average.",
    "start": "808160",
    "end": "814570"
  },
  {
    "text": "So, the nice thing about Monte Carlo policy evaluation is it doesn't require you to",
    "start": "816110",
    "end": "821310"
  },
  {
    "text": "have a sp- a specific model of the dynamics or reward. It just requires you to be able to sample from the environment.",
    "start": "821310",
    "end": "828735"
  },
  {
    "text": "So, I don't need to know a particular like parametric model of how traffic works. All I have to do is drive from here to the airport, you know,",
    "start": "828735",
    "end": "835500"
  },
  {
    "text": "hundreds of times, and then average how long it takes me. And if I'm always driving with the same policy,",
    "start": "835500",
    "end": "840660"
  },
  {
    "text": "let's say I always take the highway, um, then if I do that, you know, 100 times, then I have a pretty good estimate of what is",
    "start": "840660",
    "end": "847740"
  },
  {
    "text": "my expected time to get to the airport if I drive on the highway. Well that is my policy. So, it doesn't do bootstrapping,",
    "start": "847740",
    "end": "854909"
  },
  {
    "text": "it doesn't try to maintain at this root V_k minus 1. Um, it's simply sums up all the rewards from each of",
    "start": "854909",
    "end": "860880"
  },
  {
    "text": "your trajectories and then averages across those. It doesn't assume the state is Markov.",
    "start": "860880",
    "end": "866625"
  },
  {
    "text": "Just averaging doesn't- there's no notion of the next state and whether or not that sufficient to,",
    "start": "866625",
    "end": "873075"
  },
  {
    "text": "um, to summarize the future returns. An important thing is that it can only be applied to what are known as episodic MDPs.",
    "start": "873075",
    "end": "881475"
  },
  {
    "text": "You act forever if there's no notion of- if this is sort of like averaging over your life this doesn't work,",
    "start": "881475",
    "end": "887459"
  },
  {
    "text": "[LAUGHTER] because, you only get one. So, you need to have a process where you can repeatedly do this many times and the process will end each time.",
    "start": "887460",
    "end": "895365"
  },
  {
    "text": "So, like driving to the airport might be really long, but you'll get there eventually and then you can try again tomorrow.",
    "start": "895365",
    "end": "900810"
  },
  {
    "text": "So, this doesn't work for all processes like if you have a robot that's just going to be acting forever,",
    "start": "900810",
    "end": "906014"
  },
  {
    "text": "can't do Monte Carlo policy evaluation. Okay. So, we also often do this in",
    "start": "906015",
    "end": "913589"
  },
  {
    "text": "an incremental fashion which means that after we maintain a running estimate, after each episode, we update our current estimate as V_pi.",
    "start": "913590",
    "end": "920865"
  },
  {
    "text": "And our hope is that as we get more and more data, this estimate will converge to the true value.",
    "start": "920865",
    "end": "926024"
  },
  {
    "text": "So, let's look at, um, what the algorithm for this would be. So, one algorithm which is known as",
    "start": "926025",
    "end": "931410"
  },
  {
    "start": "927000",
    "end": "1424000"
  },
  {
    "text": "the First-Visit Monte Carlo on policy evaluation algorithm, as we start off and we assume that we haven't- N here",
    "start": "931410",
    "end": "937290"
  },
  {
    "text": "is essentially the number of times we visited a state.",
    "start": "937290",
    "end": "940810"
  },
  {
    "text": "So, we start off and this is zero. Also the return- the- or average return from starting in any state is also zero.",
    "start": "944420",
    "end": "952365"
  },
  {
    "text": "So, we initialize say right now or we think that you know we get no reward from a state and we haven't visited any state.",
    "start": "952365",
    "end": "958950"
  },
  {
    "text": "And then what we do is we loop. And for each loop we sample an episode which is we start in",
    "start": "958950",
    "end": "964170"
  },
  {
    "text": "the starting state and we act until our process terminates. I start off at my house and I drive until I can get to the airport.",
    "start": "964170",
    "end": "971954"
  },
  {
    "text": "And then I compute my return. So, I say okay, well maybe that took me two hours to get there.",
    "start": "971955",
    "end": "978135"
  },
  {
    "text": "So, now my G-i is two hours. Um, but you've just compute your return and you compute it for",
    "start": "978135",
    "end": "983910"
  },
  {
    "text": "every time step t inside of the episode. So, G_i,t here is defined from the t time step in that episode,",
    "start": "983910",
    "end": "991275"
  },
  {
    "text": "what is the remaining reward you got from that time step onwards, and we'll instantiate this in our Mars Rover example in a second.",
    "start": "991275",
    "end": "998595"
  },
  {
    "text": "And then for every state that you visited in that particular episode, for the first time you encountered a state,",
    "start": "998595",
    "end": "1004805"
  },
  {
    "text": "you look- you increment the counter and you update your total return.",
    "start": "1004805",
    "end": "1010260"
  },
  {
    "text": "And you use, then you just take an average of those estimates to compute your current estimate of the value for the state.",
    "start": "1011860",
    "end": "1018290"
  },
  {
    "text": "Now why you might be in the same state for more than one time step in an episode. Well let's say I get to the red light, let's say I've discredited my time steps.",
    "start": "1018290",
    "end": "1026270"
  },
  {
    "text": "So, I look at my state every one minute. Well, I got to a red light and there was a traffic accident.",
    "start": "1026270",
    "end": "1031685"
  },
  {
    "text": "So, on time step one I'm at the red light, time step two I'm on the red light, time step three I'm on the red light.",
    "start": "1031685",
    "end": "1037579"
  },
  {
    "text": "And so you can be in the same state for multiple time steps during the episode. And what this is saying is that you only use the first time step you saw that state.",
    "start": "1037580",
    "end": "1045920"
  },
  {
    "text": "And then you sum up the rewards you get til the end of that episode. Okay. We saw the state but in,",
    "start": "1045920",
    "end": "1053435"
  },
  {
    "text": "I guess like different time steps and the same episode, we'd still be incremented twice because it's not- there's gonna be a gap between them?",
    "start": "1053435",
    "end": "1060010"
  },
  {
    "text": "The question is, what happens if we, um, see the same state in the same episode? In first visit, you only use the first occurrence.",
    "start": "1060010",
    "end": "1065810"
  },
  {
    "text": "So, you drop all other ones. So, the first time I got to my red light then I would sum up the future rewards till the end of the episode.",
    "start": "1065810",
    "end": "1072455"
  },
  {
    "text": "If I happen to get to the same red light during the same episode, I ignore that data. We'll see a different way of doing that in a second.",
    "start": "1072455",
    "end": "1079860"
  },
  {
    "text": "Okay. So, how do we estimate whether or not this is a good thing to do. How do we evaluate whether or not this particular- this is an estimate.",
    "start": "1080140",
    "end": "1089120"
  },
  {
    "text": "It's likely wrong at least at the beginning where we don't have much data. So, how do we understand whether or not",
    "start": "1089120",
    "end": "1094130"
  },
  {
    "text": "this estimate is good and how are we going to compare all of the estimators and these algorithms that we're going to be talking about today.",
    "start": "1094130",
    "end": "1099650"
  },
  {
    "text": "So, um, actually just raise your hand because I'm curious. Um, who here has sort of formally seen definitions of bias and variance in other classes.",
    "start": "1099650",
    "end": "1108830"
  },
  {
    "text": "Okay. Most people but not quite everybody. So, just as a quick recap, um, let's think about sort of having a statistical model that is parameterized by theta,",
    "start": "1108830",
    "end": "1117200"
  },
  {
    "text": "um, and that we also have some distribution over some observed data p of x given theta.",
    "start": "1117200",
    "end": "1122960"
  },
  {
    "text": "So, we want to have a statistic theta hat which is a function. So, theta hat is a function of the observed data and it provides an estimate of theta.",
    "start": "1122960",
    "end": "1134375"
  },
  {
    "text": "So, in our case, we're going to have this value, this estimate of the value we're computing. This is a function of our episodes and this is an estimate of the",
    "start": "1134375",
    "end": "1141920"
  },
  {
    "text": "true discounted expected rewards of following this policy. So, the definition of a bias of an estimator is to compare what is",
    "start": "1141920",
    "end": "1150890"
  },
  {
    "text": "the expected value of our statistic versus the true value,",
    "start": "1150890",
    "end": "1156390"
  },
  {
    "text": "for any set of data. So, this would say,",
    "start": "1156820",
    "end": "1162184"
  },
  {
    "text": "if I compute, you know, the expected amount of time for me to get to the airport based on trying to drive there three times.",
    "start": "1162185",
    "end": "1167870"
  },
  {
    "text": "Does the algorithm that I just showed you is that unbiased? On average is that the same is the true expected time for me to get to the airport.",
    "start": "1167870",
    "end": "1175745"
  },
  {
    "text": "The definition of a variance of an estimator compares my statistic to its expected value squared.",
    "start": "1175745",
    "end": "1182780"
  },
  {
    "text": "Expected over the, er, the, um, the type of data I could get under the true parameter and the mean squared error combines these two.",
    "start": "1182780",
    "end": "1191075"
  },
  {
    "text": "Mean squared error is normally what we care about. Normally, we ultimately care about sort of how far away is",
    "start": "1191075",
    "end": "1197330"
  },
  {
    "text": "our estimate of the quantity we care about versus the true quantity? And that's the sum of its bias and its variance.",
    "start": "1197330",
    "end": "1203255"
  },
  {
    "text": "And generally, different algorithms and different estimators will have different trade offs between bias and variance.",
    "start": "1203255",
    "end": "1209010"
  },
  {
    "text": "Okay. So, if we go back to our First-Visit Monte Carlo algorithm the V_pi estimator that we use there is",
    "start": "1209610",
    "end": "1215919"
  },
  {
    "text": "an unbiased estimator of the true expected discounted sum of rewards from our policy.",
    "start": "1215920",
    "end": "1221635"
  },
  {
    "text": "It's just a simple average, um, and it's unbiased. And by the law of large numbers, as you get more and more data,",
    "start": "1221635",
    "end": "1227540"
  },
  {
    "text": "it converges to the true value. So, it's also what is known as as consistent. Consistent means that it converges to the true value as the- as data goes to infinity.",
    "start": "1227540",
    "end": "1240030"
  },
  {
    "text": "So, this is reasonable, um, but it might not be very efficient. So, ah, as we just talked about,",
    "start": "1240160",
    "end": "1246919"
  },
  {
    "text": "you might be in the same state, you might be at the same stoplight for many, many time steps. Um, and you're only going to use the first state in an episode to update.",
    "start": "1246920",
    "end": "1254790"
  },
  {
    "text": "So, every visit at Monte Carlo, simply says well every time you visit a state during the episode,",
    "start": "1254890",
    "end": "1261095"
  },
  {
    "text": "look at how much reward you got from that state till the end and average over all of those. So, essentially every time you reach a state,",
    "start": "1261095",
    "end": "1267815"
  },
  {
    "text": "you always look at the sum of discounted rewards from there to the end of the episode and you average all of that.",
    "start": "1267815",
    "end": "1273455"
  },
  {
    "text": "Which is generally going to be more data efficient. Bias definition, I guess I'm just a little confused how we would get biased,",
    "start": "1273455",
    "end": "1280520"
  },
  {
    "text": "even if we don't actually know theta. How we compute bias. [NOISE] Yeah, given that we don't know theta.",
    "start": "1280520",
    "end": "1285865"
  },
  {
    "text": "It's a great- the question is how do you compute bias? Yes, if you, uh, if you can compute bias exactly that normally means you know what theta is,",
    "start": "1285865",
    "end": "1292330"
  },
  {
    "text": "in which case why are you doing an estimator? Generally, we do not know what bias is, um we can often bound it.",
    "start": "1292330",
    "end": "1299380"
  },
  {
    "text": "So, often using things like concentration inequalities we can, um, well concentration qualities are more for variance.",
    "start": "1299380",
    "end": "1305365"
  },
  {
    "text": "Often, um, we don't know exactly what the bias is, unless you know what the ground truth is. And there are different ways for us to get estimates of bias in practice.",
    "start": "1305365",
    "end": "1314085"
  },
  {
    "text": "So, as you compare across different forms of parametric models, um, sometimes you can do is structural risk, ah, ah,",
    "start": "1314085",
    "end": "1320350"
  },
  {
    "text": "structural risk maximization and things like that to try to get sort of a quantity of how you compare your estimator and your model class.",
    "start": "1320350",
    "end": "1326840"
  },
  {
    "text": "I'm not going to go very much into that here but I'm happy to talk about it in office hours.",
    "start": "1326840",
    "end": "1331760"
  },
  {
    "text": "So, in every visit Monte Carlo, we're just gonna update it every single time.",
    "start": "1333200",
    "end": "1338565"
  },
  {
    "text": "And that's gonna give us another estimator. And note that that's gonna give us generally a lot more counts. Because every time you see a state,",
    "start": "1338565",
    "end": "1346080"
  },
  {
    "text": "you can update the counts. But it's biased. So, you can show that this is a biased estimator of",
    "start": "1346080",
    "end": "1354510"
  },
  {
    "text": "V_pi. May have intuition of why it might be biased. So, in the first case for those of you that have seen this",
    "start": "1354510",
    "end": "1361800"
  },
  {
    "text": "before or not necessarily this particularly but seen this sort of analysis. First visit Monte Carlo,",
    "start": "1361800",
    "end": "1368399"
  },
  {
    "text": "is you're getting IID estimates of a state,",
    "start": "1368400",
    "end": "1373060"
  },
  {
    "text": "of a state's return right? Because you only take that, um, each episode is, is",
    "start": "1373760",
    "end": "1380220"
  },
  {
    "text": "IID because you're starting at a certain state and you're estimating from there. Ah, and you only use the return for the first time you saw that state.",
    "start": "1380220",
    "end": "1388360"
  },
  {
    "text": "If you see a state multiple times in the same episode, are their returns correlated or uncorrelated?",
    "start": "1389180",
    "end": "1397245"
  },
  {
    "text": "Correlated. Okay. So, your data is no longer IID.",
    "start": "1397245",
    "end": "1402405"
  },
  {
    "text": "So, that's sort of the intuition for why when you mod- move to every visit Monte Carlo,",
    "start": "1402405",
    "end": "1407580"
  },
  {
    "text": "your estimator can be biased 'cause you're not averaging over IID variables anymore. Is it biased for an obvious reasons to inspectors paradox? [inaudible]",
    "start": "1407580",
    "end": "1418350"
  },
  {
    "text": "I don't know. That's a good question. I'm happy to look at it and return. However, the nice thing about this is that it is a consistent estimator.",
    "start": "1418350",
    "end": "1426659"
  },
  {
    "start": "1424000",
    "end": "1562000"
  },
  {
    "text": "So, as you get more and more data, it will converge to the true estimate.",
    "start": "1426660",
    "end": "1432375"
  },
  {
    "text": "And empirically, it often has way lower variance. And intuitively, it should have way lower variance.",
    "start": "1432375",
    "end": "1438060"
  },
  {
    "text": "We're averaging over a lot more data points, uh, typically in the same. Now, you know, if you only visit one-",
    "start": "1438060",
    "end": "1444795"
  },
  {
    "text": "if you- if you're very unlikely to repeatedly visit the same state, these two estimators are generally very close to the same thing in an episode.",
    "start": "1444795",
    "end": "1452294"
  },
  {
    "text": "Because you're not gonna have multiple visits to the same state. But in some cases you're gonna visit the same state a",
    "start": "1452295",
    "end": "1457500"
  },
  {
    "text": "lot of times and you get a lot more data and these estimators will generally be much better if you use every visit,",
    "start": "1457500",
    "end": "1463365"
  },
  {
    "text": "but it's biased. So, there's this trade-off. Empirically, this is often much better.",
    "start": "1463365",
    "end": "1468490"
  },
  {
    "text": "Now, of course in practice often instead of the- often you may wanna do this incrementally.",
    "start": "1469120",
    "end": "1475220"
  },
  {
    "text": "You may just want to kind of keep track of a running mean and then you keep track of your running mean and update your counts sort of incrementally.",
    "start": "1475220",
    "end": "1482260"
  },
  {
    "text": "And you can do that if also as you visit you don't have to wait until the end lessons- oh, that's wrong.",
    "start": "1482260",
    "end": "1487275"
  },
  {
    "text": "You do have to wait till the end because you always have to wait till you get the full return before you can update. Yeah, in the back.",
    "start": "1487275",
    "end": "1494385"
  },
  {
    "text": "So, a question on that, if you could like- if you condition on the fact that you have the same number of estimates approximately in each of the states,",
    "start": "1494385",
    "end": "1503250"
  },
  {
    "text": "would then the two be more or less equivalent but the other one would be less biased.",
    "start": "1503250",
    "end": "1508905"
  },
  {
    "text": "For example, if you did I guess there is no way you could have for example a same number of episodes, ah, the same number of count in each state with the first visit approximation.",
    "start": "1508905",
    "end": "1517920"
  },
  {
    "text": "But if you did have that, would you imagine that the episode would be lower in that case? I would- expressions about if you have",
    "start": "1517920",
    "end": "1524039"
  },
  {
    "text": "the same number of counts to a state across the two algorithms. And in terms of the episodes,",
    "start": "1524040",
    "end": "1529770"
  },
  {
    "text": "you couldn't have that be the case unless- so they'd need to be identical if you only visit one state,",
    "start": "1529770",
    "end": "1535965"
  },
  {
    "text": "um, once in an episode and then they'd be totally identical. If it's not the case, if you visit, um,",
    "start": "1535965",
    "end": "1541920"
  },
  {
    "text": "a state multiple times in, in one episode, then, uh, by the time you get to the same counts,",
    "start": "1541920",
    "end": "1547365"
  },
  {
    "text": "the one for the single visit would be better 'cause it's unbiased and it would have basically the same variance. Any other questions about that?",
    "start": "1547365",
    "end": "1556659"
  },
  {
    "text": "Cool. Um, so, incremental Monte Carlo, um,",
    "start": "1556940",
    "end": "1562125"
  },
  {
    "start": "1562000",
    "end": "1655000"
  },
  {
    "text": "on policy evaluation is essentially the same as before except where you can just sort of slowly move your running average for each of the states.",
    "start": "1562125",
    "end": "1569955"
  },
  {
    "text": "And the important thing about this is that, um, as you slowly move your estimator, if you set your alpha to be 1 over Ns,",
    "start": "1569955",
    "end": "1576270"
  },
  {
    "text": "it's identical to every visit Monte Carlo. Essentially, you're just exactly computing the average.",
    "start": "1576270",
    "end": "1582240"
  },
  {
    "text": "Um, but you don't have to do that. So, you can skew it so that you're running average is more weighted towards recent data.",
    "start": "1582240",
    "end": "1589665"
  },
  {
    "text": "And the reason why you might wanna do that is because if your real domain is non-stationary.",
    "start": "1589665",
    "end": "1595990"
  },
  {
    "text": "We have a guess of where, where domains might be non-stationary.",
    "start": "1596470",
    "end": "1601710"
  },
  {
    "text": "It's kind of an advanced topic. We're not gonna really talk about non-stationary domains for most of this class though in reality, they're incredibly important.",
    "start": "1604520",
    "end": "1612330"
  },
  {
    "text": "Um, I don't know if your mechanical parts are breaking down or something's off. Example of like if you're in a manufacturing process and",
    "start": "1612330",
    "end": "1618480"
  },
  {
    "text": "your parts are changing- are breaking down over time. So, your dynamics model is actually changing over time.",
    "start": "1618480",
    "end": "1623985"
  },
  {
    "text": "Then you don't want to reuse your old data because you're- actually your MDP has changed over time.",
    "start": "1623985",
    "end": "1630270"
  },
  {
    "text": "So, this is one of the reasons often empirically like when people train recommender systems and things like that,",
    "start": "1630270",
    "end": "1635294"
  },
  {
    "text": "you know, the, the news all these things are non-stationary. And so people often retrain them a lot to deal with this non-stationarity process.",
    "start": "1635295",
    "end": "1641775"
  },
  {
    "text": "Do I see a question on the back? Okay. Yeah. So, empirically that's often really helpful for non-stationary domains,",
    "start": "1641775",
    "end": "1649545"
  },
  {
    "text": "but if it's non-stationary there's all- there's a bunch of different concerns. So, we're going to mostly ignore that for now.",
    "start": "1649545",
    "end": "1654975"
  },
  {
    "text": "Okay. So, let's just check our understanding for a second. For Monte Carlo, for on policy evaluation. Let's go back to our Mars rover domain.",
    "start": "1654975",
    "end": "1661380"
  },
  {
    "start": "1655000",
    "end": "1934000"
  },
  {
    "text": "So, in our Mars rover, we had these seven states. Our rover dropped down. It was gonna explore,",
    "start": "1661380",
    "end": "1667229"
  },
  {
    "text": "a reward is in state S_1, one and state S_7 it's plus 10 everywhere else at zero.",
    "start": "1667229",
    "end": "1673860"
  },
  {
    "text": "And our policy is gonna be A_1 for all states. And now imagine we don't know what the dynamics model is.",
    "start": "1673860",
    "end": "1680385"
  },
  {
    "text": "So, we're just gonna observe trajectories. And if you get to either state one or state seven,",
    "start": "1680385",
    "end": "1686445"
  },
  {
    "text": "the next action you take terminates the reward. I don't know. Maybe it falls off a cliff or something like that.",
    "start": "1686445",
    "end": "1691920"
  },
  {
    "text": "But whenever you get to S_7 or S_1, then the next action you take so you get whatever reward.",
    "start": "1691920",
    "end": "1697470"
  },
  {
    "text": "You either get the one or you get the 10 and then your process terminates. So, let's imagine a trajectory under this policy would be you start in S_3.",
    "start": "1697470",
    "end": "1705840"
  },
  {
    "text": "You go to action- take action A_1, you get a reward of zero. This is for reward. Then you transition to state S_2,",
    "start": "1705840",
    "end": "1712784"
  },
  {
    "text": "you take an action of A_1, you get a zero. You stay in the same state. So, you stay in S_2 again.",
    "start": "1712785",
    "end": "1719130"
  },
  {
    "text": "Take action A_1, you get another reward of zero and then you reach state S_1, take an action A_1,",
    "start": "1719130",
    "end": "1724320"
  },
  {
    "text": "you get a 1 and then it terminates. So, it's one experience of your Mars rover's life.",
    "start": "1724320",
    "end": "1729480"
  },
  {
    "text": "So, in this case, how about we just take a minute or two, feel free to talk to a neighbor and compute what",
    "start": "1729480",
    "end": "1735120"
  },
  {
    "text": "is the first visit Monte Carlo estimate of the value of each state and what is the every visit Monte Carlo estimate of state S_2?",
    "start": "1735120",
    "end": "1742269"
  },
  {
    "text": "Then I put the algorithm for both first visit at every visit above just depends on",
    "start": "1742370",
    "end": "1748290"
  },
  {
    "text": "whether you update the state only once for this episode or whether you can potentially update it multiple times.",
    "start": "1748290",
    "end": "1753450"
  },
  {
    "text": "[NOISE] You may ask the question too if we have not seen it yet what is the value we use.",
    "start": "1753450",
    "end": "1760830"
  },
  {
    "text": "So, the value you can also say that you initialize V_Pi of S equal to zero for all S if you haven't seen it yet.",
    "start": "1760830",
    "end": "1768720"
  },
  {
    "text": "[NOISE] All right. Raise your hand if you'd like a little bit more time otherwise we'll go ahead.",
    "start": "1768720",
    "end": "1773620"
  },
  {
    "text": "Okay. So what- someone wanna to share what they and maybe somebody nearby them thought was the first visit Monte Carlo estimate of V for every state.",
    "start": "1773840",
    "end": "1781919"
  },
  {
    "text": "I think the first- this estimates is really one for every single state except for the last one that's sent.",
    "start": "1781920",
    "end": "1791500"
  },
  {
    "text": "Which states? We've only updated a few of them so far. Which why don't you give me the full vector.",
    "start": "1791570",
    "end": "1799154"
  },
  {
    "text": "Like okay we'll just start here. So, V of S_1 is what? Is one.",
    "start": "1799155",
    "end": "1805125"
  },
  {
    "text": "Okay. And V of S_2? Is also one. And V of S_3? Is also one.",
    "start": "1805125",
    "end": "1810870"
  },
  {
    "text": "And V of S_4? Also one. [NOISE]. Anybody disagree. Zero. Zero. Okay and V of S_5? Zero. And V of S_6?",
    "start": "1810870",
    "end": "1823260"
  },
  {
    "text": "Zero. And V of S_7? [OVERLAPPING] Yeah.",
    "start": "1823260",
    "end": "1828660"
  },
  {
    "text": "So, we only get to update in this one that the states we've actually visited. Okay. So, here it's one,",
    "start": "1828660",
    "end": "1835740"
  },
  {
    "text": "one, one. Zero, zero, zero, zero. Now what about for every visit the Monte Carlo estimate of just S_2.",
    "start": "1835740",
    "end": "1842370"
  },
  {
    "text": "So, I picked only S_2 'cause that's the only state we visit twice. What's its, what's its estimate?",
    "start": "1842370",
    "end": "1847779"
  },
  {
    "text": "Well, we increment. Yeah.",
    "start": "1852380",
    "end": "1859055"
  },
  {
    "text": "Is it still gonna be one? Yeah, yes it is and why? Because incremental also we have Ns is two at the end of it but Gs is also two.",
    "start": "1859055",
    "end": "1870995"
  },
  {
    "text": "So, the increment both twice. Exactly. So, the return from both times when you started in",
    "start": "1870995",
    "end": "1876570"
  },
  {
    "text": "S_2 and got an added up till the end of the episode was one in both cases. So, it was one twice and then you average over that so it's still one. Yeah.",
    "start": "1876570",
    "end": "1886425"
  },
  {
    "text": "Is the reason that they're all one because gamma's one? 'Cause like shouldn't there be some gamma terms in there.",
    "start": "1886425",
    "end": "1891990"
  },
  {
    "text": "Oh, good question. So, here we've assumed gamma equals one, otherwise there would be- there'd be a gamma multiplied into some of those two.",
    "start": "1891990",
    "end": "1899310"
  },
  {
    "text": "Yeah, good question. I chosen gamma equal to one just to make the math a little bit easier. Otherwise, it'd be a gamma factor tpo. Okay great.",
    "start": "1899310",
    "end": "1906420"
  },
  {
    "text": "So, you know, the, the second question is a little bit of a red herring because in this case it's exactly the same. But if the return had been different from S_2, um,",
    "start": "1906420",
    "end": "1914179"
  },
  {
    "text": "like let's say there was a penalty for being in a state, then they could have had different returns and then we would have gotten something different there.",
    "start": "1914180",
    "end": "1920289"
  },
  {
    "text": "Okay. So, Monte Carlo in this case updated- we had to wait till the end of the episode, but when we updated it till the end of the episode,",
    "start": "1920290",
    "end": "1927525"
  },
  {
    "text": "we updated S_3, S_2, and S_1.",
    "start": "1927525",
    "end": "1931540"
  },
  {
    "text": "So, what is Monte Carlo doing when we think about how we're averaging over possible futures.",
    "start": "1932960",
    "end": "1938550"
  },
  {
    "start": "1934000",
    "end": "2070000"
  },
  {
    "text": "So, what Monte Carlo is doing, um, I've put this sort of incremental version here which you could use for non-stationary cases but you can think of it in the other way too.",
    "start": "1938550",
    "end": "1946260"
  },
  {
    "text": "Um, so, and remember if you want this just to be equal to every visit, you're just plugging in 1 over N of S here for alpha.",
    "start": "1946260",
    "end": "1955830"
  },
  {
    "text": "So, this is what Monte Carlo Evaluation is doing is it's just averaging over these returns.",
    "start": "1955830",
    "end": "1961815"
  },
  {
    "text": "So, what we're doing is if we think about sort of what our tree is doing, in our case our tree is gonna be finite.",
    "start": "1961815",
    "end": "1968190"
  },
  {
    "text": "We're gonna assume that each of these sort of branches eventually terminate. They have to because we can only evaluate a return once we reach it.",
    "start": "1968190",
    "end": "1975600"
  },
  {
    "text": "So, at some point like here when we got to state S_1 or S_7 in our Mars example, the process terminated.",
    "start": "1975600",
    "end": "1984375"
  },
  {
    "text": "And so what does Monte Carlo policy evaluation do? It approximates averaging over all possible futures by summing up one,",
    "start": "1984375",
    "end": "1992878"
  },
  {
    "text": "uh, trajectory through the tree. So, it samples the return all the way down till it gets to a terminal state.",
    "start": "1992879",
    "end": "1999945"
  },
  {
    "text": "It adds up all of the rewards along the way. So, like reward, reward, reward. Well, I'll be more careful than that.",
    "start": "1999945",
    "end": "2006485"
  },
  {
    "text": "Reward, reward. Here you get a reward for each state action pair.",
    "start": "2006485",
    "end": "2011645"
  },
  {
    "text": "So, you sum up all the rewards in this case. Um, and that is its sample, um, of the value.",
    "start": "2011645",
    "end": "2017945"
  },
  {
    "text": "So, notice it's not doing any, um, er, the way it's gonna get into the expectation over states,",
    "start": "2017945",
    "end": "2023975"
  },
  {
    "text": "is by averaging and across trajectories. It's not explicitly looking at the probability of next state given S and A and it's not bootstrapping.",
    "start": "2023975",
    "end": "2032165"
  },
  {
    "text": "It is only able to update, when you get all the way out and see the full return.",
    "start": "2032165",
    "end": "2037919"
  },
  {
    "text": "So, so, this is it samples. It doesn't use an explicit representation of a dynamics model,",
    "start": "2039430",
    "end": "2046025"
  },
  {
    "text": "and it does not bootstrap because there's no notion of VK minus 1 here. It's only summing up a- all of the returns. Questions? Scotty.",
    "start": "2046025",
    "end": "2053569"
  },
  {
    "text": "[inaudible] policy evaluation like this would do a very poor job in rare occurrences?",
    "start": "2053570",
    "end": "2059945"
  },
  {
    "text": "Well, it's interesting. Question is, is it fair to say that this would do a really bad job in very rare occurrences?",
    "start": "2059945",
    "end": "2065330"
  },
  {
    "text": "It's intriguing. They're very high variance estimators. So if you're- Monte Carlo,",
    "start": "2065330",
    "end": "2070850"
  },
  {
    "start": "2070000",
    "end": "2255000"
  },
  {
    "text": "in general, you essentially just like rolling out futures, right? And often you need a lot of possible futures until you can get a good expectation.",
    "start": "2070850",
    "end": "2077299"
  },
  {
    "text": "On the other hand, for things like AlphaGo which is one of the algorithms that was used to solve the board game Go, they use Monte Carlo.",
    "start": "2077300",
    "end": "2085145"
  },
  {
    "text": "So, you know, I think, um, you wanna be careful in how you're doing some of this roll out when you start to get into control.",
    "start": "2085145",
    "end": "2091879"
  },
  {
    "text": "And when you start to- because then you get to pick the actions, um, and you often kind of want to play between, but it- it's not horrible even if there's rare events.",
    "start": "2091880",
    "end": "2098930"
  },
  {
    "text": "Um, er, but if you have other information you can use, it's often good. It depends w-what your other options are.",
    "start": "2098930",
    "end": "2105005"
  },
  {
    "text": "So, generally this is a pretty high variance estimator. You can require a lot of data, and it requires an episodic setting because you",
    "start": "2105005",
    "end": "2111170"
  },
  {
    "text": "can't do this if you're acting forever because there is no way to terminate. So, you have to be able to tell processes to terminate.",
    "start": "2111170",
    "end": "2116690"
  },
  {
    "text": "So, in the DP Policy Evaluation we had the gamma factors, because we wanted to take care of the cases",
    "start": "2116690",
    "end": "2123740"
  },
  {
    "text": "where state were seen in-between that started with a probability equals to one. But in this case, um,",
    "start": "2123740",
    "end": "2130505"
  },
  {
    "text": "if we had such a case that would never terminate, right, because the episode would never end. So, technically, do we still need a gamma factor to evaluate policy equation,",
    "start": "2130505",
    "end": "2140119"
  },
  {
    "text": "uh, policy evaluation on? The question was about, do we still need a gamma factor in these cases,",
    "start": "2140120",
    "end": "2145400"
  },
  {
    "text": "and what about cases where you could have self-loops or small loops in your process? So, um, this G in general can,",
    "start": "2145400",
    "end": "2152030"
  },
  {
    "text": "you know, can use a gamma factor. So, this can include a gamma when you compute those.",
    "start": "2152030",
    "end": "2157655"
  },
  {
    "text": "You're right, that if the process is known to terminate, you don't have to have a gamma less than one because",
    "start": "2157655",
    "end": "2163340"
  },
  {
    "text": "your reward can't be infinity because your process will always terminate. Um, this could not handle cases where there's some probability it will terminate.",
    "start": "2163340",
    "end": "2171170"
  },
  {
    "text": "So, if there is a self-loop inside of- or a small loop inside of your process, such that you could go round it forever and never terminate,",
    "start": "2171170",
    "end": "2178684"
  },
  {
    "text": "you can't do Monte Carlo, and having a good discount there won't help.",
    "start": "2178685",
    "end": "2183710"
  },
  {
    "text": "There are physical reasons why you might have a gamma models like that, which is great, say you model the fuel cost or something,",
    "start": "2183710",
    "end": "2189605"
  },
  {
    "text": "or something would interact, would that be reasonable? The question is whether or not there might be a physical reason for",
    "start": "2189605",
    "end": "2194750"
  },
  {
    "text": "gamma like fuel costs or things like that. I mean, I think normally I would put that into the reward function.",
    "start": "2194750",
    "end": "2200660"
  },
  {
    "text": "Good. So, if you have something like- you can have it. So, I keep thinking about cases where basically you want to get to a goal as quickly as possible,",
    "start": "2200660",
    "end": "2207410"
  },
  {
    "text": "um, and you want to sort of do a stochastic shortest paths type problem. Um, I think generally there I would probably rather pick making it a terminal",
    "start": "2207410",
    "end": "2215330"
  },
  {
    "text": "state and then having like a negative one cost if you really have a notion of how much fuel costs. Um, but you can also use it as a proxy to try to encourage quick progress towards a goal.",
    "start": "2215330",
    "end": "2225935"
  },
  {
    "text": "The challenge is that how you set it is often pretty subtle because if you set it",
    "start": "2225935",
    "end": "2231590"
  },
  {
    "text": "too high you can get weird behavior where your agent has sort of effectively like too scared to do anything,",
    "start": "2231590",
    "end": "2236780"
  },
  {
    "text": "it will stay at really safe areas. Um, and if it's too high in some cases, if it's possible to get sort of trivial reward,",
    "start": "2236780",
    "end": "2243380"
  },
  {
    "text": "your agent can be misled by that. So, it's often a little bit tricky to set in real-world cases.",
    "start": "2243380",
    "end": "2249755"
  },
  {
    "text": "Okay. So, they're high variance estimators that require these episodic settings, um, and, um, there's no bootstrapping.",
    "start": "2249755",
    "end": "2259760"
  },
  {
    "start": "2255000",
    "end": "2380000"
  },
  {
    "text": "And generally, they converge to the true value under some, uh, generally mild assumptions.",
    "start": "2259760",
    "end": "2265260"
  },
  {
    "text": "We're gonna talk about important sampling at the end of class if we have time. Otherwise, we'll probably end up pushing that towards later.",
    "start": "2266260",
    "end": "2273079"
  },
  {
    "text": "That's for what how we do this if you have off policy data, data that's collected from another policy.",
    "start": "2273080",
    "end": "2278255"
  },
  {
    "text": "Okay. Now let's talk about temporal difference learning. So, if you look at Sutton and Barto, um,",
    "start": "2278255",
    "end": "2285770"
  },
  {
    "text": "and if you talk to Rich Sutton or, ah, number of, uh, and a number of other people that are very influential in the field,",
    "start": "2285770",
    "end": "2291140"
  },
  {
    "text": "they would probably argue that these central, um, contribution to reinforcement learning or contribution to reinforcement learning",
    "start": "2291140",
    "end": "2297410"
  },
  {
    "text": "that makes it different perhaps than some other ways of thinking about adaptive control, is the notion of temporal difference learning.",
    "start": "2297410",
    "end": "2304010"
  },
  {
    "text": "And essentially, it's going to just combine between Monte Carlo estimates and dynamic programming methods.",
    "start": "2304010",
    "end": "2309845"
  },
  {
    "text": "And it's model-free. We're not going to explicitly compute a dynamics model or reward model or",
    "start": "2309845",
    "end": "2315559"
  },
  {
    "text": "an estimator of that from data and it both bootstraps and samples. So, remember, dynamic programming as we've defined it so far,",
    "start": "2315560",
    "end": "2324110"
  },
  {
    "text": "um, it bootstraps, er, and the way we have thought about it so far you actually have access to the real dynamics model and the real reward model,",
    "start": "2324110",
    "end": "2330890"
  },
  {
    "text": "but it bootstraps by using that VK minus one. Monte Carlo estimators do not bootstrap.",
    "start": "2330890",
    "end": "2336350"
  },
  {
    "text": "They go all the way out to the end of the trajectory and sum up the rewards, but they sample to approximate the expectation.",
    "start": "2336350",
    "end": "2342990"
  },
  {
    "text": "So, bootstrapping is used to approximate the future discounted sum of rewards.",
    "start": "2343000",
    "end": "2348260"
  },
  {
    "text": "Sampling is often done to approximate your expectation over states.",
    "start": "2348260",
    "end": "2353310"
  },
  {
    "text": "The nice thing about temporal difference learning is you can do it in episodic processes or continual processes.",
    "start": "2353680",
    "end": "2359945"
  },
  {
    "text": "And the other nice aspect about it is that you don't have to wait till the end of the, uh, the episode to update.",
    "start": "2359945",
    "end": "2365180"
  },
  {
    "text": "So as soon as you get a new observation, taking, ah, starting in a state taking an action and going to a next state and getting some reward,",
    "start": "2365180",
    "end": "2372305"
  },
  {
    "text": "um, you can immediately update your value. And this can be really useful because you can kind of immediately start to use that knowledge.",
    "start": "2372305",
    "end": "2378809"
  },
  {
    "text": "Okay. So, what are we gonna do in temporal difference learning? Again, our aim is to compute our estimate of v pi.",
    "start": "2379180",
    "end": "2385744"
  },
  {
    "start": "2380000",
    "end": "2888000"
  },
  {
    "text": "And we still have the same definition of return, um, and we're gonna look at remind ourselves of the Bellman operator.",
    "start": "2385745",
    "end": "2392030"
  },
  {
    "text": "So, if we know our MDP models, our Bellman operator said we're gonna get our immediate reward plus our discounted sum of future rewards.",
    "start": "2392030",
    "end": "2400830"
  },
  {
    "text": "And in incremental every visit Monte Carlo, what we're doing is we're updating our estimate using one sample of the return.",
    "start": "2401170",
    "end": "2409160"
  },
  {
    "text": "So, this is where we said our va- our new value estimate of the value is equal to our old estimate",
    "start": "2409160",
    "end": "2416915"
  },
  {
    "text": "plus alpha times the return we just saw minus V. But this is where we had to wait till the end of the episode to do that update.",
    "start": "2416915",
    "end": "2425975"
  },
  {
    "text": "What the inside of temporal difference learning is, well, why don't we just use our old estimator of",
    "start": "2425975",
    "end": "2432380"
  },
  {
    "text": "v pi for that state and then you don't have to wait till the end of the episode. So, instead of using GI there you use the reward you just saw plus",
    "start": "2432380",
    "end": "2441980"
  },
  {
    "text": "gamma times the value of your next state. So, you bootstrap.",
    "start": "2441980",
    "end": "2447320"
  },
  {
    "text": "Say I'm not going to wait till I get only an episode, started my state, I got a reward, I went to some next state.",
    "start": "2447320",
    "end": "2453395"
  },
  {
    "text": "What is the value of that next state? I don't know. I'll go look it up in my estimator and I'll plug that in and I'll treat that as,",
    "start": "2453395",
    "end": "2458930"
  },
  {
    "text": "uh, as an estimate of the return.",
    "start": "2458930",
    "end": "2461640"
  },
  {
    "text": "So, the simplest TD learning algorithm is exactly that, where you just take your immediate reward plus your",
    "start": "2464500",
    "end": "2471770"
  },
  {
    "text": "discounted expected future value where you plug that in for the state that you actually reached.",
    "start": "2471770",
    "end": "2477155"
  },
  {
    "text": "Now, notice that this is sampling. There is no- normally we would have like that nice sum.",
    "start": "2477155",
    "end": "2484505"
  },
  {
    "text": "The Bellman operator we would normally have a sum over S prime probability of S prime given s a of v pi of S prime.",
    "start": "2484505",
    "end": "2494330"
  },
  {
    "text": "We don't have that here. We're only giving you a single next state. And we're plugging that in as our estimator.",
    "start": "2494330",
    "end": "2500045"
  },
  {
    "text": "So we're still going to be doing sampling to approximate that expectation. But just like dynamic programming we're going to bootstrap",
    "start": "2500045",
    "end": "2506630"
  },
  {
    "text": "because we're gonna using our previous estimate of v pi. We also write this as like a sub a and sub k minus one to show like the iterations.",
    "start": "2506630",
    "end": "2514535"
  },
  {
    "text": "Yeah. I might have down there if you want to see. No, I don't in this case. You could also write this with- um,",
    "start": "2514535",
    "end": "2519905"
  },
  {
    "text": "question is if we want just to be clear about what is happening in terms of iterations. You can also think of this as p of k plus one and this is V of k,",
    "start": "2519905",
    "end": "2529775"
  },
  {
    "text": "for example, you're updating this over time. The thing is is that you're doing this for",
    "start": "2529775",
    "end": "2535640"
  },
  {
    "text": "every single state compared to dynamic programming, where you do this in ways where for all states-",
    "start": "2535640",
    "end": "2540965"
  },
  {
    "text": "so you have sort of a consistent VK and then you're updating. Here we can think of there as just being a value function and you're just sort of",
    "start": "2540965",
    "end": "2547085"
  },
  {
    "text": "updating one entry of that value function depending on which state you just reached. So there's not kind of this nice notion of",
    "start": "2547085",
    "end": "2552994"
  },
  {
    "text": "the whole previous value function of any value function. I'll keep that there just for that reason.",
    "start": "2552995",
    "end": "2558545"
  },
  {
    "text": "Now, people often talk about the TD error, the temporal difference error. What that is is it's comparing what is your estimate here.",
    "start": "2558545",
    "end": "2565625"
  },
  {
    "text": "So, your new estimate, which is your immediate reward plus gamma times your value of the state you actually",
    "start": "2565625",
    "end": "2572410"
  },
  {
    "text": "reached minus your current estimate of your value. Now, notice this one should have been sort of essentially",
    "start": "2572410",
    "end": "2579645"
  },
  {
    "text": "approximating the expectation over S prime.",
    "start": "2579645",
    "end": "2585620"
  },
  {
    "text": "Because for that one you're going to be averaging. And so this looks at the temporal difference. So this is saying how different is",
    "start": "2585620",
    "end": "2592910"
  },
  {
    "text": "your immediate reward plus gamma times your value of your next state, versus your sort of current estimate of the value of your current state.",
    "start": "2592910",
    "end": "2601140"
  },
  {
    "text": "Now note that that doesn't have to go to zero because that first thing is always ever just a sample, it's one future.",
    "start": "2602950",
    "end": "2610694"
  },
  {
    "text": "The only time this would be defined to go to zero is if this is deterministic, so there's only one next state.",
    "start": "2610695",
    "end": "2616705"
  },
  {
    "text": "So, you know, if half the time when I try to drive to the airport I hit traffic and half the time I don't,",
    "start": "2616705",
    "end": "2621840"
  },
  {
    "text": "then that's sort of two different next states that I could go to for my current start state, either hit traffic or don't hit traffic.",
    "start": "2621840",
    "end": "2627785"
  },
  {
    "text": "Um, and so I'm either going to be getting that v pi of hitting traffic or v pi of not hitting traffic.",
    "start": "2627785",
    "end": "2633425"
  },
  {
    "text": "So this TD error will not necessarily go to zero even with infinite data because one is an expected thing from the current state and the",
    "start": "2633425",
    "end": "2640760"
  },
  {
    "text": "other is which actual next state did you reach. So, the nice thing is that you can immediately update this",
    "start": "2640760",
    "end": "2646610"
  },
  {
    "text": "value estimate after your state action reward s prime tuple and you don't need episodic settings. Yeah, Scotty?",
    "start": "2646610",
    "end": "2652850"
  },
  {
    "text": "Does that affect convergence if you keep alpha constant? Yes, good question. Does this affect convergence if you keep alpha constant?",
    "start": "2652850",
    "end": "2660490"
  },
  {
    "text": "Yes, and you normally have to have some mild assumptions on decaying alpha. So, things like one over T is normally",
    "start": "2660490",
    "end": "2668030"
  },
  {
    "text": "sufficient to ensure these estimates convert. Yeah, question? Um, can you say anything about the bias of this estimator?",
    "start": "2668030",
    "end": "2676174"
  },
  {
    "text": "Yeah. The question was whether- question was a good one, what can you say anything about the bias of this estimator?",
    "start": "2676175",
    "end": "2682070"
  },
  {
    "text": "Am I having a sense of whether this is going to be a biased estimator?",
    "start": "2682070",
    "end": "2685860"
  },
  {
    "text": "What of your previous or we have a sense of whether it's going to be biased?",
    "start": "2688420",
    "end": "2696329"
  },
  {
    "text": "Well think back to dynamic programming, was V_k minus one.",
    "start": "2703150",
    "end": "2708785"
  },
  {
    "text": "Um, an unbiased estimator of infinite horizon. Like, let's say, k is equal to two if we want the infinite horizon value.",
    "start": "2708785",
    "end": "2718190"
  },
  {
    "text": "Is that- no matter how you've done those updates, it's not going to be cool. Generally, when you bootstrap, um,",
    "start": "2718190",
    "end": "2724700"
  },
  {
    "text": "it's going to be a biased estimator because you're relying on your previous estimator which is generally wrong. [LAUGHTER]. So, that's going to be biasing you in one particular direction.",
    "start": "2724700",
    "end": "2733025"
  },
  {
    "text": "So, it's a definitely a biased estimator. Um, it also can have fairly high variance. [LAUGHTER]. So, it can both be high-variance and be biased.",
    "start": "2733025",
    "end": "2740405"
  },
  {
    "text": "But on the other hand, you can update it really, really quickly. Um, you don't have to wait till the end of the episode and you can use a lot of information.",
    "start": "2740405",
    "end": "2747200"
  },
  {
    "text": "So, it's generally much less high-variance than, um, im- um, Monte Carlo estimates because you're",
    "start": "2747200",
    "end": "2753410"
  },
  {
    "text": "bootstrapping and that sort of helping average over a lot of your of variability. [inaudible]",
    "start": "2753410",
    "end": "2766400"
  },
  {
    "text": "Now, this question is whether or not it's a function of the initialization. It's not. It's a, it's a function of the different properties of the estimators you could initialize differently.",
    "start": "2766400",
    "end": "2773030"
  },
  {
    "text": "Um, the, the bootstrapping is because you're using a- by bootstrapping and",
    "start": "2773030",
    "end": "2778175"
  },
  {
    "text": "using this V_Pi as a proxy for your real expected discounted sum of returns,",
    "start": "2778175",
    "end": "2785240"
  },
  {
    "text": "um, unless this is the true value, it's just going to bias you. Note that this, um, this doesn't- you don't get biased in",
    "start": "2785240",
    "end": "2793100"
  },
  {
    "text": "dynamic programming when you know the models because that V_Pi, when you bootstrap it's actually V_Pi.",
    "start": "2793100",
    "end": "2798350"
  },
  {
    "text": "This is actually the real value. So, the problem is the- here is that it's an approximation of the real value and that's why it's biasing you.",
    "start": "2798350",
    "end": "2805234"
  },
  {
    "text": "So bootstrapping is fine if you know the real dynamics model. The real reward functions, you need computed the Pi of k minus one exactly,",
    "start": "2805235",
    "end": "2812750"
  },
  {
    "text": "um, but it's not okay here because we're introducing bias.",
    "start": "2812750",
    "end": "2817770"
  },
  {
    "text": "So, how does TD zero learning work? Um, I do zero here because there's sort of some interesting, um,",
    "start": "2820930",
    "end": "2828365"
  },
  {
    "text": "in-between between TD learning and Monte-Carlo learning where instead of doing an immediate reward plus the discounted sum of",
    "start": "2828365",
    "end": "2835220"
  },
  {
    "text": "future rewards versus summing all of the rewards, you can imagine continuums between these two where you",
    "start": "2835220",
    "end": "2840829"
  },
  {
    "text": "may be- some up the first two rewards and then Bootstrap. [NOISE]. So, there's, um,",
    "start": "2840830",
    "end": "2845990"
  },
  {
    "text": "there's a continuum of models, there's a continuum of algorithms between just taking your immediate reward and then bootstrapping versus never bootstrapping.",
    "start": "2845990",
    "end": "2853685"
  },
  {
    "text": "Um, but we're just gonna talk right now about taking your immediate reward and then bootstrapping. So TD learning works as follows: You have to pick a particular alpha,",
    "start": "2853685",
    "end": "2861545"
  },
  {
    "text": "um, which can be a function of the time-step. Um, you initialize your value function, you sample a state action reward, next state.",
    "start": "2861545",
    "end": "2868910"
  },
  {
    "text": "Now in this case, because we're doing policy evaluation, let me- this will be equal to Pi of st,",
    "start": "2868910",
    "end": "2879770"
  },
  {
    "text": "and then you update your value.",
    "start": "2879770",
    "end": "2883440"
  },
  {
    "text": "Okay. So let's look, um, again at that example we had before. So we said that for first visit Monte Carlo,",
    "start": "2886930",
    "end": "2894200"
  },
  {
    "start": "2888000",
    "end": "3390000"
  },
  {
    "text": "you will get 1110000, for every visit it would be one. What is the TD estimate of all states at the end of this episode?",
    "start": "2894200",
    "end": "2903930"
  },
  {
    "text": "So, notice what we're doing here. We loop, we sample a tuple,",
    "start": "2905500",
    "end": "2911270"
  },
  {
    "text": "we update the value of the state we just reached. We get another tuple, we sample it.",
    "start": "2911270",
    "end": "2916550"
  },
  {
    "text": "So, what would that look like in this case? We would start off and we'd have S3,",
    "start": "2916550",
    "end": "2921869"
  },
  {
    "text": "we'd have S3, A1, zero, S2.",
    "start": "2923140",
    "end": "2928579"
  },
  {
    "text": "You'd have S2, A1, zero, S2, S2,",
    "start": "2928580",
    "end": "2933695"
  },
  {
    "text": "A1, zero, S1, S1, A1 plus one, terminate.",
    "start": "2933695",
    "end": "2940590"
  },
  {
    "text": "So, why don't you spend a minute and, and think about what the value would be under TD learning,",
    "start": "2941470",
    "end": "2947970"
  },
  {
    "text": "and what implications this might have too. [NOISE].",
    "start": "2949090",
    "end": "2957530"
  },
  {
    "text": "Does anybody wanna say what the value is, that you get? [NOISE]. Yeah.",
    "start": "2957530",
    "end": "2963590"
  },
  {
    "text": "Uh, one followed by all zeros. That's right. Okay. One followed by all zeros.",
    "start": "2963590",
    "end": "2969359"
  },
  {
    "text": "So, we only updated the final state in this case. I also just wanted to- yeah, question.",
    "start": "2969730",
    "end": "2977750"
  },
  {
    "text": "Um, explain why that happens. Yeah, because, um, what we are doing in this case is that we get a data point so what- we're in a state,",
    "start": "2977750",
    "end": "2985609"
  },
  {
    "text": "we take an action, we get a reward, we get next state. We update the value only for that state. So what we did here is we got S3,",
    "start": "2985610",
    "end": "2993095"
  },
  {
    "text": "we update it, we did action A1, we got a zero S2. So our new value for S3 was also equal to zero.",
    "start": "2993095",
    "end": "3000039"
  },
  {
    "text": "Then we went to S2, we took action A1, we got a zero, we went to S2, we got- so we updated S2,",
    "start": "3000040",
    "end": "3005800"
  },
  {
    "text": "it was also zero. We did that again. We finally got to state S1 and we got a one.",
    "start": "3005800",
    "end": "3012550"
  },
  {
    "text": "So, the thing about this that can be beneficial or not beneficial is you throw away your data in the most naive format.",
    "start": "3012550",
    "end": "3020590"
  },
  {
    "text": "You have a SAR S-prime tuple and then it goes away again. You don't keep it. So when you finally see that reward,",
    "start": "3020590",
    "end": "3027340"
  },
  {
    "text": "you don't back up, you don't propagate that information backwards. So what Monte Carlo did is,",
    "start": "3027340",
    "end": "3032590"
  },
  {
    "text": "it waited until he got all the way there and then it computed the return for every state along the episode which meant that that's why we got 1111.",
    "start": "3032590",
    "end": "3040255"
  },
  {
    "text": "But here you don't do that. By the time you get to, um, [NOISE] S1, you've thrown away the fact that you were ever in S3",
    "start": "3040255",
    "end": "3046570"
  },
  {
    "text": "or S2 and then you, you don't update those states. I mean total reward is proportional to",
    "start": "3046570",
    "end": "3052000"
  },
  {
    "text": "the number of samples you need to get a good estimate of value function? Say that again.",
    "start": "3052000",
    "end": "3057400"
  },
  {
    "text": "Ah, I'm assuming that like the longer it takes for you to get a rewards, the more samples, you'd need to like properly estimate,",
    "start": "3057400",
    "end": "3065079"
  },
  {
    "text": "uh, value of the function. Question out [inaudible] is sort of, you know, how long does it take you to get a reward and",
    "start": "3065080",
    "end": "3071319"
  },
  {
    "text": "how many samples do you need to get a good estimate of the value function? Um, you mean for all states?",
    "start": "3071320",
    "end": "3076555"
  },
  {
    "text": "It's a little nuanced. Um, it depends on the transition dynamics as well. Um, you couldn't- say for a particular,",
    "start": "3076555",
    "end": "3086395"
  },
  {
    "text": "like how, how many, um, samples you need for a particular state to get a good estimate of its reward?",
    "start": "3086395",
    "end": "3091510"
  },
  {
    "text": "Let's say your rewards are stochastic. But in terms of how long it takes you to propagate this information back, it depends on the dynamics.",
    "start": "3091510",
    "end": "3098020"
  },
  {
    "text": "Um, so in this case, you know, if you had exactly the same trajectory and you did it again,",
    "start": "3098020",
    "end": "3103780"
  },
  {
    "text": "then you'd end up updating that S2 and then if you got that same trajectory again, then you would propagate that information back again to",
    "start": "3103780",
    "end": "3110650"
  },
  {
    "text": "S2 and then one more time and then you get it back to S3. I should S3 and there's the third one. So, you can slowly this- propagate this information back, um,",
    "start": "3110650",
    "end": "3118600"
  },
  {
    "text": "but you don't get to kind of immediately like what Monte Carlo would do. Question. I was wondering if you could highlight the differences between this",
    "start": "3118600",
    "end": "3125440"
  },
  {
    "text": "and the Q learning that we talked about last time? Because they seem like kind of similar ideas. That's great. So, exactly right.",
    "start": "3125440",
    "end": "3131500"
  },
  {
    "text": "In fact, TD learning and Q learning are really close analogs. Q learning is, um, when you're gonna do control.",
    "start": "3131500",
    "end": "3138220"
  },
  {
    "text": "So, we're going to look at actions. TD learning is basically Q learning where you're fixing in the policy,",
    "start": "3138220",
    "end": "3144380"
  },
  {
    "text": "Yeah. Next question back there. Like you're actually like implement this so you would",
    "start": "3144480",
    "end": "3150340"
  },
  {
    "text": "you would keep looping right, and updating or you just run through, uh, rewards?",
    "start": "3150340",
    "end": "3156190"
  },
  {
    "text": "It depends. So, um, it depends who asked you. So if you're really, really compare- concerned about memory,",
    "start": "3156190",
    "end": "3162475"
  },
  {
    "text": "um, you just drop data, so then you're on [inaudible]. If, um, in a lot of the existing sort of deep learning methods,",
    "start": "3162475",
    "end": "3168370"
  },
  {
    "text": "you maintain a sort of a, a episodic replay buffer and then you would re-sample samples from that and then you would do this update for the samples from there.",
    "start": "3168370",
    "end": "3176994"
  },
  {
    "text": "So you could revisit sort of past stuff and use it to update your value function. Um, you could also- it can,",
    "start": "3176995",
    "end": "3182500"
  },
  {
    "text": "it can matter the order in which you do that. So in this case, you could do a pass through your data and then do it- another pass or maybe go backwards from the end.",
    "start": "3182500",
    "end": "3189640"
  },
  {
    "text": "[inaudible] it will end up propagating. Some alpha back to S_2 there.",
    "start": "3189640",
    "end": "3197500"
  },
  {
    "text": "Yeah. So, you just go into like convergence or- We'll talk about that very shortly. Yes. That's a great question.",
    "start": "3197500",
    "end": "3203965"
  },
  {
    "text": "Like so what happens is you do this for convergence and we'll talk about that in a second. Yeah. So, just so I make sure I understand.",
    "start": "3203965",
    "end": "3210190"
  },
  {
    "text": "So, when we talk about sampling of tuple, what's really happening is you're going to a trajectory and you're iterating through the SAR,",
    "start": "3210190",
    "end": "3218455"
  },
  {
    "text": "the SAR tuples in that trajectory in order. Right. But we're thinking of this really as acting as- to repeat the question.",
    "start": "3218455",
    "end": "3226390"
  },
  {
    "text": "The question is like we're going through this trajectory we're updating in terms of tuples. Yes, but we're really thinking about this as like your agent being in",
    "start": "3226390",
    "end": "3232150"
  },
  {
    "text": "some state taking an action getting reward again and getting to a next state. So, there doesn't exist a full trajectory. It just like I'm driving my car,",
    "start": "3232150",
    "end": "3238675"
  },
  {
    "text": "what's gonna happen to me in the next like two minutes? So, I don't have the full trajectory and that I'm iterating through it.",
    "start": "3238675",
    "end": "3245230"
  },
  {
    "text": "It's like this is after every single time step inside of that trajectory, I update. So, I don't have to wait till I have the full trajectory.",
    "start": "3245230",
    "end": "3251350"
  },
  {
    "text": "Right and, and I guess I'll just the order in which those tuples are chosen.",
    "start": "3251350",
    "end": "3256855"
  },
  {
    "text": "I- I'm guessing it matters or with the values that you're getting and estimates.",
    "start": "3256855",
    "end": "3261984"
  },
  {
    "text": "Yes. So, the question is like, you know, the order in which you receive tuples, that absolutely affects your value.",
    "start": "3261985",
    "end": "3267859"
  },
  {
    "text": "Um, so in, uh, if you're getting this in terms of how you experience this in the world, it's just the order you experience these in the world.",
    "start": "3267860",
    "end": "3274755"
  },
  {
    "text": "So, this S_t plus prime- T plus one prime becomes your ST on the next time-step.",
    "start": "3274755",
    "end": "3280295"
  },
  {
    "text": "So, these aren't being sampled from a trajectory. It's like that's just wherever you are now. Um, if you have access to batch data,",
    "start": "3280295",
    "end": "3286960"
  },
  {
    "text": "then you can choose which ones to pick and it absolutely affects your convergence. The problem is you don't have to know which ones to pick in advance.",
    "start": "3286960",
    "end": "3294070"
  },
  {
    "text": "Questions. The other thing I just want to mention there is it's a little bit subtle, um, that if you set alpha equal to, like, you know,",
    "start": "3294070",
    "end": "3301090"
  },
  {
    "text": "1 over T or things like that, you can be guaranteed to, um, for these things to converge. Uh, sometimes if alpha is really small, um,",
    "start": "3301090",
    "end": "3308065"
  },
  {
    "text": "also these are going to be guaranteed to converge under minor conditions. Um, but if you said something like alpha equals one,",
    "start": "3308065",
    "end": "3314230"
  },
  {
    "text": "it can definitely oscillate. Alpha equals one means that essentially,",
    "start": "3314230",
    "end": "3319839"
  },
  {
    "text": "you're ignoring your previous estimate, right? So, if you set alpha equal to one then you're just using your TD target.",
    "start": "3319840",
    "end": "3326900"
  },
  {
    "text": "All right. Okay. So, what is temporal policy difference policy evaluation",
    "start": "3328530",
    "end": "3334230"
  },
  {
    "text": "doing if we think about it in terms of this diagram and thinking about us as taking an expectation over futures.",
    "start": "3334230",
    "end": "3339345"
  },
  {
    "text": "So, it's, um, this is the equation for it up there. And what it does is it updates its value estimate by using a sample of S_t plus 1",
    "start": "3339345",
    "end": "3346859"
  },
  {
    "text": "to approximate that expected next state distribution or next future distribution. And then it bootstraps because it plugs in",
    "start": "3346860",
    "end": "3354145"
  },
  {
    "text": "your previous estimate of V_pi for this plus 1. So, that's why it's a hybrid between dynamic programming because it bootstraps and Monte Carlo",
    "start": "3354145",
    "end": "3362200"
  },
  {
    "text": "because it doesn't do an explicit expectation over all the next states, just samples one.",
    "start": "3362200",
    "end": "3367820"
  },
  {
    "text": "Okay. So, now why don't we think about some of these things that, like, allow us to compare between these different algorithms and",
    "start": "3371520",
    "end": "3377109"
  },
  {
    "text": "their strengths and weaknesses and it sometimes depends on the application. Um, uh, you've had to pick which one is most popular,",
    "start": "3377110",
    "end": "3383680"
  },
  {
    "text": "probably TD learning is the most popular but it depends on the domain. It depends on, um, whether you're constrained by data or,",
    "start": "3383680",
    "end": "3390520"
  },
  {
    "start": "3390000",
    "end": "4389000"
  },
  {
    "text": "um, you know, computation or memory et cetera. All right. So, um, why don't we spend a few minutes on this briefly.",
    "start": "3390520",
    "end": "3399130"
  },
  {
    "text": "So, let us spend a minute and think about which of these properties from what you remember so far apply to these three algorithms.",
    "start": "3399130",
    "end": "3407545"
  },
  {
    "text": "So, whether they're usable when you have no models of the current domain, um, whether they handle continuing non-episodic domains,",
    "start": "3407545",
    "end": "3414385"
  },
  {
    "text": "they can handle non-Markovian domains. They converge to the true value in the limit. We're assuming everything's tabular right now,",
    "start": "3414385",
    "end": "3420309"
  },
  {
    "text": "we're not in function approximation land. And whether or not you think they give you an unbiased estimate of the value.",
    "start": "3420310",
    "end": "3425800"
  },
  {
    "text": "So, if at any time point if you were to take your estimator if it's unbiased. So, why don't you would just spend a minute see if you can fill in this table.",
    "start": "3425800",
    "end": "3431890"
  },
  {
    "text": "Feel free to talk to someone next to you and then we'll step through it. [NOISE] All right which of",
    "start": "3431890",
    "end": "3437619"
  },
  {
    "text": "these are usable when you have no models of the current domain? [NOISE] Does dynamic programming need a model of the current domain?",
    "start": "3437620",
    "end": "3448750"
  },
  {
    "text": "Yes. Yes. Okay. What about Monte Carlo? Usable. Usable. What about TD?",
    "start": "3448750",
    "end": "3454715"
  },
  {
    "text": "Usable. Usable. Yeah. Do either of those, TD is known as what?",
    "start": "3454715",
    "end": "3459805"
  },
  {
    "text": "As a model free algorithm, doesn't need an explicit notion. It relies on sampling of the next state from the real world.",
    "start": "3459805",
    "end": "3466539"
  },
  {
    "text": "[NOISE] Which of these can be used for continuing non-episodic domains?",
    "start": "3466540",
    "end": "3471500"
  },
  {
    "text": "So, like, your process might not terminate, ever. Okay. Well, can TD learning be used?",
    "start": "3471980",
    "end": "3479130"
  },
  {
    "text": "Yes. Yes. Can Monte Carlo be used? No. No. Can DP be used?",
    "start": "3479130",
    "end": "3484650"
  },
  {
    "text": "Yes. Yes. Okay. Which of these, um, does DP require Markovian?",
    "start": "3484650",
    "end": "3490369"
  },
  {
    "text": "Yes. It does. Which- does Monte Carlo require Markovian? No. Does TD require Markovian?",
    "start": "3491340",
    "end": "3500300"
  },
  {
    "text": "Yeah, it does. So, um, uh, temporal difference and dynamic programming rely on the fact that",
    "start": "3500780",
    "end": "3508660"
  },
  {
    "text": "your value of the current state does not depend on the history. So, however you got to the current state,",
    "start": "3508660",
    "end": "3514765"
  },
  {
    "text": "it ignores that, um, and then it uses that when it bootstraps too, it assumes that doesn't- so,",
    "start": "3514765",
    "end": "3521410"
  },
  {
    "text": "Monte Carlo just adds up your return from wherever you are at now till the end of the episode. And note that depending on when you got to that particular state,",
    "start": "3521410",
    "end": "3528250"
  },
  {
    "text": "your return may be different and it might depend on the history. So, Monte Carlo doesn't rely on the world being Markov.",
    "start": "3528250",
    "end": "3534984"
  },
  {
    "text": "Um, you can use it in partially observable environments. TD assumes that the world is Markovian,",
    "start": "3534985",
    "end": "3540025"
  },
  {
    "text": "so does dynamic programming in the ways we've defined it so far. So, you bootstrap you say, um,",
    "start": "3540025",
    "end": "3545710"
  },
  {
    "text": "for this current state my prediction of the future value only depends on this current state.",
    "start": "3545710",
    "end": "3551515"
  },
  {
    "text": "So, I can say I get my immediate reward plus whatever state I transition to.",
    "start": "3551515",
    "end": "3556599"
  },
  {
    "text": "But that's sort of a sufficient statistic of the history and I can plug-in my bootstrap estimator.",
    "start": "3556600",
    "end": "3562420"
  },
  {
    "text": "So, it relies on the Markovian assumption. What about non-Markovian domain where do we apply it?",
    "start": "3562420",
    "end": "3567430"
  },
  {
    "text": "Um, the question is well, what do you mean by non-Markovian? Like, these are algorithms you could apply them.",
    "start": "3567430",
    "end": "3572440"
  },
  {
    "text": "Um, so yeah. You can apply these algorithms to anything. The question is whether or not they're guaranteed to converge in the limit to the right value.",
    "start": "3572440",
    "end": "3578724"
  },
  {
    "text": "And they're not, if the world is not Markovian and they don't. Like [LAUGHTER] we've seen in some of our work on intelligent tutoring systems,",
    "start": "3578725",
    "end": "3585640"
  },
  {
    "text": "earlier on we were using some data, um, from a fractions tutor and we're applying Markovian techniques and they don't converge.",
    "start": "3585640",
    "end": "3591640"
  },
  {
    "text": "I mean, they converge to something that's just totally wrong and it doesn't matter how much data you have because you're- you're using methods that rely on assumption that is incorrect.",
    "start": "3591640",
    "end": "3600970"
  },
  {
    "text": "So, you need to be able to evaluate whether they're not Markovian or try to bound the bias or do something.",
    "start": "3600970",
    "end": "3606775"
  },
  {
    "text": "Um, otherwise your estimators of what the value is of a policy can just be wrong even in the limit of infinite data.",
    "start": "3606775",
    "end": "3613880"
  },
  {
    "text": "Um, what about converging to the true value in the limit? Let's assume we're in the Markovian case again.",
    "start": "3614910",
    "end": "3621520"
  },
  {
    "text": "So, for Markovian domains, does, um, DP converge to the true value in the limit? Yes.",
    "start": "3621520",
    "end": "3626839"
  },
  {
    "text": "What about Monte Carlo? Yes. Yes. What about TD? Yes. Yes. They certainly do.",
    "start": "3626840",
    "end": "3632725"
  },
  {
    "text": "The world is really Markovian, um, everything converges. Asymptotically no under minor assumptions, all of these require minor assumptions.",
    "start": "3632725",
    "end": "3639325"
  },
  {
    "text": "Um, uh, so under minor assumptions it will converge to the true value of the limit,",
    "start": "3639325",
    "end": "3644935"
  },
  {
    "text": "depends on, like, the alpha value. Um, uh, what about being an unbiased estimate of the value,",
    "start": "3644935",
    "end": "3650260"
  },
  {
    "text": "is Monte Carlo an unbiased estimator? Yes. Yes. Okay. TD is not.",
    "start": "3650260",
    "end": "3656425"
  },
  {
    "text": "DP is a little bit weird. It's a little bit not quite fair question there. DP is always giving you the exact VK minus one value for that policy.",
    "start": "3656425",
    "end": "3665470"
  },
  {
    "text": "So, that is perfect, that's the exact value. If you have K1- K minus 1 more time steps to act,",
    "start": "3665470",
    "end": "3673255"
  },
  {
    "text": "that is not going to be the same as the infinite horizon value function. Yeah.",
    "start": "3673255",
    "end": "3679240"
  },
  {
    "text": "Can you explain how the last two lines are different. Like I don't understand the difference between unbiased estimator of",
    "start": "3679240",
    "end": "3685600"
  },
  {
    "text": "value and something that converges to the true value of order. Your question's great. So, the question is what's the difference",
    "start": "3685600",
    "end": "3691270"
  },
  {
    "text": "between something being unbiased and consistent? Um, so when we say converges to the true value in limit,",
    "start": "3691270",
    "end": "3697060"
  },
  {
    "text": "that's also known as formally being a consistent estimator. So, the unbiased estimate of the value means,",
    "start": "3697060",
    "end": "3704484"
  },
  {
    "text": "if you have a finite amount of data and you compute your statistic, in this case the value,",
    "start": "3704485",
    "end": "3710200"
  },
  {
    "text": "and you compare it to the true value, then on average, that difference will be zero and that is not true for things like TD.",
    "start": "3710200",
    "end": "3718195"
  },
  {
    "text": "But, um, and that can be- that's being evaluated for finite amounts of data.",
    "start": "3718195",
    "end": "3723340"
  },
  {
    "text": "What consistency says if you have an infinite amount of data, will you get to the true value?",
    "start": "3723340",
    "end": "3729085"
  },
  {
    "text": "So, what that implies is that, say for TD, that asymptotically the bias has to go to zero.",
    "start": "3729085",
    "end": "3735865"
  },
  {
    "text": "If you have infinite amounts of data, eventually its bias will be zero. But for small amount, you know,",
    "start": "3735865",
    "end": "3741490"
  },
  {
    "text": "for finite amounts of data and really, you know, you don't know what that N is. Uh, it could be a biased estimator but as the amount of",
    "start": "3741490",
    "end": "3748450"
  },
  {
    "text": "data you have that goes to infinity then it has to converge to the true value. So, you can have things that are biased estimators that are consistent. Yeah.",
    "start": "3748450",
    "end": "3755724"
  },
  {
    "text": "For Monte Carlo, I thought you said that the implementation has an impact on whether or not it's biased is- I thought you said if",
    "start": "3755725",
    "end": "3761950"
  },
  {
    "text": "it's every visit then it is unbiased [OVERLAPPING] Good question. So, I, um, the question is good.",
    "start": "3761950",
    "end": "3767080"
  },
  {
    "text": "So, this is, um, it's an unbiased estimate for the, um, first visit. And for every visit,",
    "start": "3767080",
    "end": "3775055"
  },
  {
    "text": "it's biased. Great. Question? Um, this might be a dumb, uh,",
    "start": "3775055",
    "end": "3781240"
  },
  {
    "text": "a dumb question but are there any, uh, you know, model free policy evaluations models that aren't actually convergent?",
    "start": "3781240",
    "end": "3789295"
  },
  {
    "text": "Yes. Question was, are there any model free policy evaluation methods that are not convergent? Yes, and we will see them a lot when we get into function approximation.",
    "start": "3789295",
    "end": "3797305"
  },
  {
    "text": "When you start- so right now we're in the tabular case which means we can write down as a table or as a vector what a value is.",
    "start": "3797305",
    "end": "3802945"
  },
  {
    "text": "We move up to infinite state spaces. Um, a lot of the methods are not even guaranteed to converge to",
    "start": "3802945",
    "end": "3808690"
  },
  {
    "text": "anything [LAUGHTER] Not even- we're not even talking about whether they converge to the right value, they're not even guaranteed to stop oscillating.",
    "start": "3808690",
    "end": "3815860"
  },
  {
    "text": "And they can just keep changing. Okay. Yeah. Question. So, is there any specific explanation why TD is not unbiased?",
    "start": "3815860",
    "end": "3826435"
  },
  {
    "text": "Is- is what? Why TD is not unbiased? Why it's not unbiased? Yeah. Great question.",
    "start": "3826435",
    "end": "3832869"
  },
  {
    "text": "So, the question was to say, you know, why is TD biased. TD is biased because you're plugging in",
    "start": "3832870",
    "end": "3838570"
  },
  {
    "text": "this estimator of the value of the next state, that is wrong. And that's generally going to leave to- lead to some bias.",
    "start": "3838570",
    "end": "3847190"
  },
  {
    "text": "You're plugging in an estimator that is not the true V pi for S prime. It's going to lead to a bit of bias.",
    "start": "3847440",
    "end": "3855200"
  },
  {
    "text": "So, it's really the-the bootstrapping part that's the problem. The Monte Carlo was also sampling the expectation and it's unbiased,",
    "start": "3855420",
    "end": "3863170"
  },
  {
    "text": "at least in the first visit case. Problem here is that, um, you're plugging in unexpected discounted sum of rewards that is wrong.",
    "start": "3863170",
    "end": "3871670"
  },
  {
    "text": "All right. So, um, that just summarizes those there.",
    "start": "3873700",
    "end": "3878710"
  },
  {
    "text": "I think the important properties to think- to compare between them. Um, how would you pick between these two algorithms.",
    "start": "3878710",
    "end": "3884785"
  },
  {
    "text": "So, I think thinking about bias and variance characteristics is important. Um, data efficiency is also important as well as computational efficiency,",
    "start": "3884785",
    "end": "3891809"
  },
  {
    "text": "and there's going to be trade offs between these. Um, so if we think",
    "start": "3891810",
    "end": "3897140"
  },
  {
    "text": "about sort of the general bias-variance of these different forms of algorithms, Um, Monte Carlo is unbiased,",
    "start": "3897140",
    "end": "3902800"
  },
  {
    "text": "generally high-variance, um, and it's consistent. TD has some bias, much lower variance than Monte Carlo.",
    "start": "3902800",
    "end": "3909295"
  },
  {
    "text": "TD zero converges to the true value with tabular representations, and as I was saying it does not always converge once",
    "start": "3909295",
    "end": "3916420"
  },
  {
    "text": "we get into function approximation and um, we'll see more about that shortly. I think with the last few minutes,",
    "start": "3916420",
    "end": "3922235"
  },
  {
    "text": "we won't have a chance to get through, um, little bit about how these methods are related to each other when we start to think about the batch setting.",
    "start": "3922235",
    "end": "3928975"
  },
  {
    "text": "So as we saw in this particular case for the Mars Rover just again contrast them. Um, Monte Carlo estimate waited till the end",
    "start": "3928975",
    "end": "3936789"
  },
  {
    "text": "of the episode and then updated every state that was visited in that episode. TD only used each data point once,",
    "start": "3936790",
    "end": "3944115"
  },
  {
    "text": "and so it only ended up changing the value of the final state in this case.",
    "start": "3944115",
    "end": "3950130"
  },
  {
    "text": "So what if- happens if we want to go over our data more than once. So if they we're willing to spend a little bit more computation,",
    "start": "3951080",
    "end": "3957150"
  },
  {
    "text": "so we can actually get better estimates and be more sample efficient. Meaning that we want to use our data more efficiently so that we can get a better estimate.",
    "start": "3957150",
    "end": "3964210"
  },
  {
    "text": "So often we call this batch or offline, um, mal- policy evaluation where we've got some data and we're willing to go through it as",
    "start": "3964210",
    "end": "3971625"
  },
  {
    "text": "much as we can in order to try to get an estimate of the policy that was used to gather that data. So let's imagine that we have a set of k episodes,",
    "start": "3971625",
    "end": "3979055"
  },
  {
    "text": "and we can repeatedly sample an episode. um, and then we either apply Monte Carlo or TD to the whole episode.",
    "start": "3979055",
    "end": "3986375"
  },
  {
    "text": "What happens in this case? Um, so there's this nice example from Sutton and Barto.",
    "start": "3986375",
    "end": "3992214"
  },
  {
    "text": "Um, let's say there's just two states. So there is states A and B, and Gamma is equal to one, and you have eight episodes of experience.",
    "start": "3992215",
    "end": "3999860"
  },
  {
    "text": "So you either the first episode you saw A, 0, B, 0.",
    "start": "3999860",
    "end": "4005940"
  },
  {
    "text": "So this is the reward. In B, you saw, in the sorry- in the, and then another set of episodes you just started in B,",
    "start": "4005940",
    "end": "4013950"
  },
  {
    "text": "and you got one, and you observe that six times, and then in the eighth episode you started in B and you got a zero.",
    "start": "4013950",
    "end": "4021380"
  },
  {
    "text": "So first of all, can we compute what V of B is in this case?",
    "start": "4022180",
    "end": "4030885"
  },
  {
    "text": "So the, the model of the world is going to look something like this.",
    "start": "4030885",
    "end": "4035770"
  },
  {
    "text": "A to B and the B sometimes goes to one, and B sometimes goes to zero and then we always terminate.",
    "start": "4038810",
    "end": "4046510"
  },
  {
    "text": "So in all eight episodes we saw B. In six of those we got a one,",
    "start": "4048170",
    "end": "4054155"
  },
  {
    "text": "in two of them we got a zero. So, if we were doing Monte Carlo,",
    "start": "4054155",
    "end": "4061565"
  },
  {
    "text": "what would be our estimate of B, value of B. So we do a Monte Carlo estimate",
    "start": "4061565",
    "end": "4069030"
  },
  {
    "text": "using these eight episodes and we can go over them as many times as we want. We don't just have to experience each episode once.",
    "start": "4069250",
    "end": "4076090"
  },
  {
    "text": "This is the batch data set. Someone already collected this for us, can do Monte Carlo updates of this data set as much as you want.",
    "start": "4076090",
    "end": "4082155"
  },
  {
    "text": "What will be the estimate of V of B in this case?",
    "start": "4082155",
    "end": "4088090"
  },
  {
    "text": "[NOISE] which is just equal to six divided by eight.",
    "start": "4088090",
    "end": "4093675"
  },
  {
    "text": "In the Monte Carlo estimate or do TD, what will be the TD estimate of B?",
    "start": "4093675",
    "end": "4101179"
  },
  {
    "text": "Remember what TD does is they get this S-A-R-S prime and you bootstrap.",
    "start": "4103110",
    "end": "4111375"
  },
  {
    "text": "You do Alpha times R plus Gamma V of S prime,",
    "start": "4111375",
    "end": "4116240"
  },
  {
    "text": "and then do one minus Alpha of your previous estimate. What is the [inaudible].",
    "start": "4117620",
    "end": "4124069"
  },
  {
    "text": "Um, here in this case you can make Alpha anything small you're gonna do it in infinite number of times.",
    "start": "4124070",
    "end": "4130094"
  },
  {
    "text": "So this is the batch data settings so for TD you're just going to run over your data like millions and millions of times.",
    "start": "4130095",
    "end": "4136750"
  },
  {
    "text": "Until convergence basically. Somebody have any guesses of what V of B would be for TD.",
    "start": "4137400",
    "end": "4144450"
  },
  {
    "text": "It's also three quarters. It's also three quarters. Okay, so for, for TD it's the same because whenever you're in B you always terminate.",
    "start": "4144450",
    "end": "4155370"
  },
  {
    "text": "So it's really like just a one step problem from B, and so for TD it'll also say V of B",
    "start": "4155370",
    "end": "4161330"
  },
  {
    "text": "is equal to six divided by eight which is equal to three quarters. So the two methods agree in the batch setting for this.",
    "start": "4161330",
    "end": "4167475"
  },
  {
    "text": "If you can go for your data an infinite amount of time, V of B is equal to 3- 6 8ths since so is um,",
    "start": "4167475",
    "end": "4174255"
  },
  {
    "text": "ah, under both methods. Um, does anybody know what V of A would be under Monte Carlo? Okay, yeah.",
    "start": "4174255",
    "end": "4185250"
  },
  {
    "text": "V of A under Monte Carlo is going to be 0. Why? Yeah good.",
    "start": "4185250",
    "end": "4194270"
  },
  {
    "text": "Because the only [NOISE] only trajectory where you have an A and I will be [inaudible] from here. okay there's only one trajectory we have an A and it got a zero reward.",
    "start": "4194270",
    "end": "4202625"
  },
  {
    "text": "What do you think might happen with TD? Is it going to be 0 or non-zero?",
    "start": "4202625",
    "end": "4208610"
  },
  {
    "text": "Its non-zero. Non-zero, why? Because you bootstrap the value from A.",
    "start": "4208610",
    "end": "4214035"
  },
  {
    "text": "Could you bootstrap right so, so yes there's only time you're in A you happen to get zero in that trajectory,",
    "start": "4214035",
    "end": "4219795"
  },
  {
    "text": "but this is- in TD you would say, well, you got immediate reward of zero plus Gamma times V of B,",
    "start": "4219795",
    "end": "4225199"
  },
  {
    "text": "and V of B is three quarters. So here Gamma is equal to one. So your estimate of this under a TD would be three quarters.",
    "start": "4225200",
    "end": "4233465"
  },
  {
    "text": "We don't converge to the same thing in this case. So why does this um, ah,",
    "start": "4233465",
    "end": "4239310"
  },
  {
    "text": "so this is what we just went through and we can think about it in terms of these probabilities. Um, So what is- what's happening here?",
    "start": "4239310",
    "end": "4246270"
  },
  {
    "text": "Monte-Carlo in the batch settings converges to the minimum mean squared error estimate. So it minimizes loss with respect to the observed returns.",
    "start": "4246270",
    "end": "4254360"
  },
  {
    "text": "Um, and in this example V of A is equal to zero. TD zero converges to the dynamic programming policy",
    "start": "4254360",
    "end": "4262095"
  },
  {
    "text": "with a maximum likelihood estimates for the dynamics and the reward model.",
    "start": "4262095",
    "end": "4266870"
  },
  {
    "text": "So it's equivalent to if you essentially just- just through counting you estimated P hat of S prime given S a.",
    "start": "4267130",
    "end": "4275110"
  },
  {
    "text": "So for this would say the probability of going B given A is equal to 1.",
    "start": "4275110",
    "end": "4280199"
  },
  {
    "text": "[inaudible] Because the only time you've been on A you've went to B and then the reward for B is equal to three quarters and the reward for A is equal to 0,",
    "start": "4280200",
    "end": "4290275"
  },
  {
    "text": "and then you would do dynamic programming with that, and you would get out, get out the value.",
    "start": "4290275",
    "end": "4295659"
  },
  {
    "text": "So, TD is converging to this sort of maximum likelihood MDP value estimation,",
    "start": "4295900",
    "end": "4302730"
  },
  {
    "text": "and Monte Carlo is just converging to the mean squared error. It's ignoring- well it doesn't assume Markovian.",
    "start": "4302730",
    "end": "4308690"
  },
  {
    "text": "So it's not using them this Markov structure. Question. Just to confirm on the previous slide um,if I'm going over data",
    "start": "4308690",
    "end": "4315165"
  },
  {
    "text": "many times because for TD learning on the first iteration V of A would be zero, right? Because V of A has [inaudible] just assuming.",
    "start": "4315165",
    "end": "4321720"
  },
  {
    "text": "But after a while V of B has converged to three quarters? [OVERLAPPING]. So, In, in, in the online setting, um,",
    "start": "4321720",
    "end": "4328335"
  },
  {
    "text": "if you just saw this once, ah, then this- then V of A would be zero for that particular update.",
    "start": "4328335",
    "end": "4335010"
  },
  {
    "text": "It just that if you did it many, many, many times then it would converge to this other thing. So you know which one is better?",
    "start": "4335010",
    "end": "4341665"
  },
  {
    "text": "Well if your world is not Markovian you don't want to converge to something as if it's Markovian so Monte Carlo was better.",
    "start": "4341665",
    "end": "4347955"
  },
  {
    "text": "But if you're world really is Markov, um, then you're getting a big benefit from TD here.",
    "start": "4347955",
    "end": "4353515"
  },
  {
    "text": "Because it can leverage the Markov structure, and so even though you never got a reward from A, you can leverage the fact that you got lots of data",
    "start": "4353515",
    "end": "4359700"
  },
  {
    "text": "about B and use that to get better estimates. Um, I encourage you to think about how you would",
    "start": "4359700",
    "end": "4364780"
  },
  {
    "text": "compute these sort of models like it's called certainty equivalence. Where what you can do is take your data,",
    "start": "4364780",
    "end": "4370520"
  },
  {
    "text": "compute your estimated dynamics and reward model, and then do dynamic programming with that, and that often can be much more data efficient than these other methods.",
    "start": "4370520",
    "end": "4378530"
  },
  {
    "text": "Um, next time we'll start to talk a little bit about control. Thanks.",
    "start": "4378530",
    "end": "4382670"
  }
]