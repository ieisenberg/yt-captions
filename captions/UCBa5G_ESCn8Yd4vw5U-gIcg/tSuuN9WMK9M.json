[
  {
    "start": "0",
    "end": "134000"
  },
  {
    "text": "well thanks so much for having me here I guess we're a half real-life half virtual but feel free to ask tons of",
    "start": "10519",
    "end": "17420"
  },
  {
    "text": "questions and interrupt me all the time because it's much more entertaining for me that way so yes I will be talking",
    "start": "17420",
    "end": "23660"
  },
  {
    "text": "about how not to generate random numbers which is an extremely destructive title for a talk I would rather well I don't",
    "start": "23660",
    "end": "30710"
  },
  {
    "text": "know if I would rather be constructive maybe some of you would rather be constructive but this is mostly about",
    "start": "30710",
    "end": "36440"
  },
  {
    "text": "how things are messed up rather than how to fix them so for that I apologize anyway okay well okay it's all of your",
    "start": "36440",
    "end": "47420"
  },
  {
    "text": "faults that's that's the lesson here all right so I figured I would start with making this concrete in case any of you",
    "start": "47420",
    "end": "54589"
  },
  {
    "text": "weren't quite sure what we were here about so here's some here's a web page",
    "start": "54589",
    "end": "59839"
  },
  {
    "text": "maybe some of you visit it maybe some of you don't but the relevant thing here is this little green lock on the upper",
    "start": "59839",
    "end": "67189"
  },
  {
    "text": "corner and the HTTPS in the browser you're in the URL so this is the browser",
    "start": "67189",
    "end": "72680"
  },
  {
    "text": "telling us that we have a secure connection to this banking website which we sure hope we do because we would",
    "start": "72680",
    "end": "79609"
  },
  {
    "text": "rather not have our username and password stolen by some criminals on the way we would rather not be visiting some",
    "start": "79609",
    "end": "84740"
  },
  {
    "text": "fake Bank of America side we would rather be visiting the real one so these are the assurances that this",
    "start": "84740",
    "end": "90640"
  },
  {
    "text": "cryptography is trying to tell us so we can go in and click on these on this",
    "start": "90640",
    "end": "95869"
  },
  {
    "text": "little block and we can find out more information about the cryptography that is using so here we have some okay shot",
    "start": "95869",
    "end": "103069"
  },
  {
    "text": "ones with RSA encryption signatures and then public key RSA encryption we've got",
    "start": "103069",
    "end": "109939"
  },
  {
    "text": "a public key we've got an exponent we've got a key size whatever so there's lots of things going on here",
    "start": "109939",
    "end": "115700"
  },
  {
    "text": "primitives I took this screenshot a couple years ago so I don't know",
    "start": "115700",
    "end": "121639"
  },
  {
    "text": "somebody with a laptop open might my check if they've updated it I think chrome now gives you a little",
    "start": "121639",
    "end": "129140"
  },
  {
    "text": "yellow URL if it's using sha-1 okay so",
    "start": "129140",
    "end": "134660"
  },
  {
    "start": "134000",
    "end": "367000"
  },
  {
    "text": "at the sort of very high level what this thing is doing when we connect to this",
    "start": "134660",
    "end": "140240"
  },
  {
    "text": "website is we're going to eventually be doing some RSA encryption so here's the textbook version of RSA",
    "start": "140240",
    "end": "147180"
  },
  {
    "text": "for you we've got Alice and we've got Bob so here I guess this is Bob calm and",
    "start": "147180",
    "end": "153209"
  },
  {
    "text": "Alice's you despite the fact that there are no women in this room and okay so no",
    "start": "153209",
    "end": "161159"
  },
  {
    "text": "other women well I don't know I mean you don't have any verification on me neither I could be a mirage I'm Leia in front of",
    "start": "161159",
    "end": "170220"
  },
  {
    "text": "you okay so all right so hopefully you guys have all seen this before but this",
    "start": "170220",
    "end": "176400"
  },
  {
    "text": "is just to sort of fix ideas RSA the everybody's favorite simple public key",
    "start": "176400",
    "end": "183180"
  },
  {
    "text": "cryptosystem also the first one we've got a public key which is a modulus and",
    "start": "183180",
    "end": "188250"
  },
  {
    "text": "it's the product of two large Prime's P and Q and we've got an encryption exponent e and so the private key really",
    "start": "188250",
    "end": "196230"
  },
  {
    "text": "any of these values suffice is but basically the factorization of n gives",
    "start": "196230",
    "end": "201569"
  },
  {
    "text": "you a decryption exponent D which is e inverse mod fee of N and then okay so if",
    "start": "201569",
    "end": "208760"
  },
  {
    "text": "Alice wants to speak to Bob she asks Bob for the public key that's containing",
    "start": "208760",
    "end": "214139"
  },
  {
    "text": "that certificate in the screenshot that I showed you before then when Alice wants to send Bob an encrypted message",
    "start": "214139",
    "end": "219900"
  },
  {
    "text": "like say her session key for the TLS session she encrypts it by raising it to",
    "start": "219900",
    "end": "226019"
  },
  {
    "text": "the 8th power mod and hopefully with some padding so it's not horribly broken so on and so forth that's the cipher",
    "start": "226019",
    "end": "231510"
  },
  {
    "text": "text and Bob decrypt it by raising that to the dthe power straightforward so the",
    "start": "231510",
    "end": "236579"
  },
  {
    "text": "the only relevant thing for this talk is the fact that if you can factor the public modulus then you get the private",
    "start": "236579",
    "end": "242760"
  },
  {
    "text": "key that's basically as deep into our essay as we're going to go we also saw",
    "start": "242760",
    "end": "248940"
  },
  {
    "text": "that RSA signatures are being used for RSA it's convenient that signing is equivalent to just doing the decryption",
    "start": "248940",
    "end": "255750"
  },
  {
    "text": "operation so if alice is going to sign a",
    "start": "255750",
    "end": "263099"
  },
  {
    "text": "message for Bob she raises her message to the dthe power mod n so using her private key and then Bob can verify by",
    "start": "263099",
    "end": "269550"
  },
  {
    "text": "checking that the signature raised to the 8th power mod n is the original message okay",
    "start": "269550",
    "end": "276199"
  },
  {
    "text": "now this isn't the only crypto that you use some of you might do something like this instead so this is my SSH",
    "start": "276199",
    "end": "283169"
  },
  {
    "text": "connection trying to connect to my host computer see we have we actually have",
    "start": "283169",
    "end": "288839"
  },
  {
    "text": "any ACK at the University of Pennsylvania there's a big piece of it in the on the first floor of the lab and",
    "start": "288839",
    "end": "296669"
  },
  {
    "text": "you can still log into it anyway so",
    "start": "296669",
    "end": "307589"
  },
  {
    "text": "here's here's our SSH connection so if you're doing SSH you're actually not using well you might use RSA signatures",
    "start": "307589",
    "end": "313499"
  },
  {
    "text": "although this one is using elliptic curve DSA signatures but if you're using SSH you are doing a diffie-hellman key",
    "start": "313499",
    "end": "320039"
  },
  {
    "text": "exchange so yeah has anyone else would know yes",
    "start": "320039",
    "end": "335239"
  },
  {
    "text": "yes like there's some unimaginable",
    "start": "335239",
    "end": "341159"
  },
  {
    "text": "coincidence to find one let alone two people that have said no to it well I",
    "start": "341159",
    "end": "346289"
  },
  {
    "text": "said no and then I immediately went and deleted the old fingerprint from my hosts file in the night and then I said",
    "start": "346289",
    "end": "352409"
  },
  {
    "text": "yes you know fingerprints usability",
    "start": "352409",
    "end": "360239"
  },
  {
    "text": "mm-hmm it's better than nothing I guess ok so at least sort of the textbook",
    "start": "360239",
    "end": "368669"
  },
  {
    "start": "367000",
    "end": "876000"
  },
  {
    "text": "version of diffie-hellman this I guess predates RSA but if Alice and Bob want",
    "start": "368669",
    "end": "374699"
  },
  {
    "text": "to guarantee on a shared secret in the presence of an malicious eavesdropper",
    "start": "374699",
    "end": "380669"
  },
  {
    "text": "who's reading all the messages in between them and they don't want to say generate a public key and send it back",
    "start": "380669",
    "end": "386669"
  },
  {
    "text": "and forth they can do the diffie-hellman key exchange so in sort of the generic version we've got a group which say is",
    "start": "386669",
    "end": "394229"
  },
  {
    "text": "the integers mod some prime or an elliptic curve group or whatever and we've got a generator of that group these are public parameters and Alice",
    "start": "394229",
    "end": "402360"
  },
  {
    "text": "and Bob exchange values G to the a and G to the B and then they can compute this shared secret G to the a B",
    "start": "402360",
    "end": "407770"
  },
  {
    "text": "and the diffie-hellman assumption says that this is secure if an eavesdropper sees the transcript of all the messages",
    "start": "407770",
    "end": "414009"
  },
  {
    "text": "G to the a and G to the B they can't can state still can't construct this value due to the a B they can hop in the",
    "start": "414009",
    "end": "422620"
  },
  {
    "text": "middle which is why we have this fingerprint verification that nobody ever checks that's a little bit I guess",
    "start": "422620",
    "end": "429580"
  },
  {
    "text": "outside of the scope of this talk we're actually going to you know discuss these values sort of okay so the security of",
    "start": "429580",
    "end": "437050"
  },
  {
    "text": "diffie-hellman is is based off of the discrete log problem so a different cryptographic hardness assumption from",
    "start": "437050",
    "end": "443770"
  },
  {
    "text": "RSA there's also a signature scheme the digital signature algorithm this is the",
    "start": "443770",
    "end": "450099"
  },
  {
    "text": "u.s. federal standard and its security is also based off of the hardness of",
    "start": "450099",
    "end": "455289"
  },
  {
    "text": "discrete log either in a group mod some prime or an elliptic curve group so",
    "start": "455289",
    "end": "461349"
  },
  {
    "text": "we've got for the digital signature algorithm there's some public parameters",
    "start": "461349",
    "end": "467020"
  },
  {
    "text": "which specify some group and then you've got a public key which is essentially what you would give up for it if e home",
    "start": "467020",
    "end": "473590"
  },
  {
    "text": "and although this group is different and then the private key is the discrete log of the public value so this is as deep",
    "start": "473590",
    "end": "482800"
  },
  {
    "text": "as we're gonna go into ECDSA but or into DSA or ECDSA but it's relevant here on",
    "start": "482800",
    "end": "500199"
  },
  {
    "text": "small characteristic finite field discrete log a couple years ago and they had really really spectacular results",
    "start": "500199",
    "end": "506710"
  },
  {
    "text": "but these are not known to apply to large characteristic like the prime",
    "start": "506710",
    "end": "512409"
  },
  {
    "text": "fields that we actually use for crypto there's also been some recent like very recent work posted to the eprint archive",
    "start": "512409",
    "end": "519880"
  },
  {
    "text": "about elliptic curve discrete log I think in binary fields and there it's",
    "start": "519880",
    "end": "526360"
  },
  {
    "text": "unclear what's going on but as far as we know prime field discrete log is still",
    "start": "526360",
    "end": "536079"
  },
  {
    "text": "the same hardness as it's been for the past few decades",
    "start": "536079",
    "end": "541350"
  },
  {
    "text": "if you trust that there's nothing else out there other questions okay so now",
    "start": "541360",
    "end": "553300"
  },
  {
    "text": "that I've sort of given you an overview of all of the sort of crypto that you actually encounter in the real world but",
    "start": "553300",
    "end": "561640"
  },
  {
    "text": "I gave you sort of the textbook version of it sort of the motivating question of all the work that I'm going to talk about is what does this crypto actually",
    "start": "561640",
    "end": "568240"
  },
  {
    "text": "look like on a broad scale in the real world and the way that we're going to approach",
    "start": "568240",
    "end": "574000"
  },
  {
    "text": "this problem is sort of two steps number one collect all the cryptographic data that we can number two look for strange",
    "start": "574000",
    "end": "581170"
  },
  {
    "text": "things going on this is very hand wavy but that's the general research program",
    "start": "581170",
    "end": "588220"
  },
  {
    "text": "here okay so step number one is collect data the way that a lot of this work",
    "start": "588220",
    "end": "595269"
  },
  {
    "text": "started was by collecting data on HTTPS so browsers locks whatever and this",
    "start": "595269",
    "end": "604029"
  },
  {
    "text": "started actually from the SSL Observatory which was a project which was run by the e FF they actually n",
    "start": "604029",
    "end": "611769"
  },
  {
    "text": "mapped the entire in ipv4 space and over the course of several months downloaded",
    "start": "611769",
    "end": "617260"
  },
  {
    "text": "all of the HTTPS certificates they could posted them online as a gigantic database and people could download them",
    "start": "617260",
    "end": "623019"
  },
  {
    "text": "and so one day we decided to download them and see what was there and it turned out to be way more interesting",
    "start": "623019",
    "end": "628720"
  },
  {
    "text": "than expected and subsequent to that work some of my collaborators developed",
    "start": "628720",
    "end": "635680"
  },
  {
    "text": "a much faster internet wide scanning tool so instead of using n map you can",
    "start": "635680",
    "end": "641790"
  },
  {
    "text": "instead and it taking several months you can instead scan the entire internet in 45 minutes or in five minutes if you",
    "start": "641790",
    "end": "648880"
  },
  {
    "text": "have 100 gigabit uplink so that's V map",
    "start": "648880",
    "end": "655540"
  },
  {
    "text": "it's publicly available you can scan the Internet they've been posting huge amounts of data online at scans dot IO",
    "start": "655540",
    "end": "661449"
  },
  {
    "text": "so if you want to repeat any of this research you can go and download all of the public keys on the internet for the past several years so here's a snapshot",
    "start": "661449",
    "end": "669940"
  },
  {
    "text": "of what the internet looked like a few years ago something like the",
    "start": "669940",
    "end": "675200"
  },
  {
    "text": "about if you basically and met the internet you see that about 30,000 hosts",
    "start": "675200",
    "end": "681470"
  },
  {
    "text": "will have port 443 open about 30 or 30 million hosts about thirty thirteen",
    "start": "681470",
    "end": "687170"
  },
  {
    "text": "million of them will actually successfully complete an HTTPS handshake with you and of that you can download",
    "start": "687170",
    "end": "694810"
  },
  {
    "text": "certificates and you end up with about 5.6 million distinct RSA keys six",
    "start": "694810",
    "end": "701600"
  },
  {
    "text": "million distinct DSA keys a very small number of ECDSA keys which has gone up since but it's still quite small because",
    "start": "701600",
    "end": "707270"
  },
  {
    "text": "most certificate authorities don't issue these and a few hundred ghost keys which is a Russian cipher suite which is not",
    "start": "707270",
    "end": "716060"
  },
  {
    "text": "commonly used outside of Russia you could repeat all of this research as you",
    "start": "716060",
    "end": "722180"
  },
  {
    "text": "would like so that's something like what HTTPS looks like for SSH we did",
    "start": "722180",
    "end": "727790"
  },
  {
    "text": "something similar we scan the entire ipv4 space on port 22 and initiated an",
    "start": "727790",
    "end": "734300"
  },
  {
    "text": "SSH handshake with the hosts it turns out that if you scan SSH people really",
    "start": "734300",
    "end": "740330"
  },
  {
    "text": "don't like that they're willing to accept scanning HTTPS a little bit more than SSH",
    "start": "740330",
    "end": "745850"
  },
  {
    "text": "so you get a lot of complaints if you do this nevertheless we've done it here's something like what it looks like you",
    "start": "745850",
    "end": "753110"
  },
  {
    "text": "find about 23 million open ports of that about half of them will actually",
    "start": "753110",
    "end": "758570"
  },
  {
    "text": "successfully complete a handshake and you get 11 million RS a host Keys these",
    "start": "758570",
    "end": "765440"
  },
  {
    "text": "are the keys that are used to verify the the fingerprints nine point nine million DSA keys you can see these add up to",
    "start": "765440",
    "end": "772190"
  },
  {
    "text": "more than the number of handshakes because you get a bunch of most hosts will give you many different kinds of",
    "start": "772190",
    "end": "778700"
  },
  {
    "text": "host keys you can choose which one you want 1.2 million ECDSA keys this has",
    "start": "778700",
    "end": "784070"
  },
  {
    "text": "gone up since also and 100 cost keys",
    "start": "784070",
    "end": "791140"
  },
  {
    "text": "then okay what other public key infrastructures are out there and easy to scan there's PGP so PGP you can sign",
    "start": "791320",
    "end": "799850"
  },
  {
    "text": "and encrypt your email messages back in the 90s it seems like a good idea to have this web of trust and everybody",
    "start": "799850",
    "end": "805400"
  },
  {
    "text": "would post online a nice database of who all their friends were with all of their public keys and so you",
    "start": "805400",
    "end": "811340"
  },
  {
    "text": "can easily download a repository of this web of trust data and when you do that",
    "start": "811340",
    "end": "819140"
  },
  {
    "text": "you find a few million keys there's actually far fewer RSA keys probably because in the 90s there was still a",
    "start": "819140",
    "end": "824960"
  },
  {
    "text": "patent on RSA so it was not the default for PGP and but you do see a lot of El",
    "start": "824960",
    "end": "831350"
  },
  {
    "text": "Kamal and DSA keys for PGP then there's",
    "start": "831350",
    "end": "837050"
  },
  {
    "text": "Bitcoin the Bitcoin database or the Bitcoin blockchain is also a nice source of a lot of cryptographic data because",
    "start": "837050",
    "end": "845080"
  },
  {
    "text": "Bitcoin addresses are essentially public keys transactions require a signature",
    "start": "845080",
    "end": "851240"
  },
  {
    "text": "and so if you just download the blockchain and scrape it you get a huge",
    "start": "851240",
    "end": "857630"
  },
  {
    "text": "number of public keys and signatures this data is again kind of old so a couple years ago there were 15 million",
    "start": "857630",
    "end": "864460"
  },
  {
    "text": "ECDSA public keys in the database and 22 million transactions I'm sure that's",
    "start": "864460",
    "end": "869690"
  },
  {
    "text": "doubled or tripled or multiplied by ten or something since then",
    "start": "869690",
    "end": "875080"
  },
  {
    "text": "and finally for people who like hardware this is somewhat of an interesting",
    "start": "875080",
    "end": "881510"
  },
  {
    "start": "876000",
    "end": "1335000"
  },
  {
    "text": "example so Taiwan has this really nifty sort of a government infrastructure that they",
    "start": "881510",
    "end": "887900"
  },
  {
    "text": "use to the citizens basically get these little ID cards with a chip in them and",
    "start": "887900",
    "end": "894160"
  },
  {
    "text": "it's a public key infrastructure for securely connecting to the government so when you log in to pay your taxes you",
    "start": "894160",
    "end": "901010"
  },
  {
    "text": "can authenticate your connection using your little smart card chip and you have a little reader that you can plug your",
    "start": "901010",
    "end": "906830"
  },
  {
    "text": "your card into the computer and you can do all sorts of transactions with the",
    "start": "906830",
    "end": "913010"
  },
  {
    "text": "government securely this way and in order to facilitate this and because the government wants other enterprises to",
    "start": "913010",
    "end": "920780"
  },
  {
    "text": "use this infrastructure that they set up they have this convenient public key infrastructure that's the form it takes",
    "start": "920780",
    "end": "927440"
  },
  {
    "text": "the form of an LDAP database of public key certificates for all of these Taiwanese citizens and so it is possible",
    "start": "927440",
    "end": "934370"
  },
  {
    "text": "well they've blocked it after we did this but it was possible to basically download the contents of the entire LDAP",
    "start": "934370",
    "end": "941360"
  },
  {
    "text": "database and get public keys and certificates for about 3 million Taiwanese citizens for",
    "start": "941360",
    "end": "949340"
  },
  {
    "text": "their smart cards so the keys never leave the chip here but the public keys are distributed in certificates so these",
    "start": "949340",
    "end": "964070"
  },
  {
    "text": "cards are certified by all of the major certifying authorities there FIPS 140",
    "start": "964070",
    "end": "969940"
  },
  {
    "text": "certified there Common Criteria certified so they are supposed to be resistant to all the sort of standard",
    "start": "969940",
    "end": "977360"
  },
  {
    "text": "side channel analysis that you might do culture I don't know if he's actually",
    "start": "977360",
    "end": "987650"
  },
  {
    "text": "taking a look at these particular cards but I'm sure I'm sure whichever lab did",
    "start": "987650",
    "end": "994100"
  },
  {
    "text": "the certification bought some of their products in order to to certify them",
    "start": "994100",
    "end": "999519"
  },
  {
    "text": "well we're gonna break some of these two in a different way okay so yes i-i've",
    "start": "1006360",
    "end": "1016450"
  },
  {
    "text": "been talking about all this cryptography and this the title of the talk promised",
    "start": "1016450",
    "end": "1022450"
  },
  {
    "text": "that I would talk about randomness alright so now we're gonna start talking about randomness and in moving from",
    "start": "1022450",
    "end": "1027970"
  },
  {
    "text": "cryptography to randomness well okay you can say well if you're going to generate a cryptographic key you need some source",
    "start": "1027970",
    "end": "1033579"
  },
  {
    "text": "of randomness in order to generate your your key because you want the attacker",
    "start": "1033579",
    "end": "1039160"
  },
  {
    "text": "not to be able to predict the value that you chose for your key therefore it's easy to say let's use a random number that will be unpredictable and if you",
    "start": "1039160",
    "end": "1047800"
  },
  {
    "text": "don't have a good source of random numbers then an attacker might be able to guess what your private key was",
    "start": "1047800",
    "end": "1053730"
  },
  {
    "text": "that's okay you can make that observation it's not particularly interesting so is this all that we can",
    "start": "1053730",
    "end": "1060760"
  },
  {
    "text": "say the answer is of course no because if any here gives something about like",
    "start": "1060760",
    "end": "1066210"
  },
  {
    "text": "thousands and thousands of certain hosts we're using the same key to bear with so",
    "start": "1066210",
    "end": "1072930"
  },
  {
    "text": "that's that's so yes",
    "start": "1072930",
    "end": "1080250"
  },
  {
    "text": "what could you imagine go is going wrong with bad randomness well you might",
    "start": "1080250",
    "end": "1086309"
  },
  {
    "text": "expect if you don't have a good source of randomness then you might expect to see repeated keys so in the case of say",
    "start": "1086309",
    "end": "1092850"
  },
  {
    "text": "an RSA public key what would this look like and as I said before we have our",
    "start": "1092850",
    "end": "1098340"
  },
  {
    "text": "modulus and and an encryption exponent E and what what is the value that we care",
    "start": "1098340",
    "end": "1104220"
  },
  {
    "text": "about is if it's repeated it's not e so actually basically everybody on the internet uses the same value of e for",
    "start": "1104220",
    "end": "1111030"
  },
  {
    "text": "SSL everybody basically uses the value 6 5 5 37 and there's a few small one this",
    "start": "1111030",
    "end": "1117870"
  },
  {
    "text": "is a log scale so this is for all the certificates you see a few people using",
    "start": "1117870",
    "end": "1123210"
  },
  {
    "text": "small values you see almost everybody using six five five thirty seven and then almost nothing else is used so it",
    "start": "1123210",
    "end": "1131640"
  },
  {
    "text": "is not a problem for the security of RSA if people are sharing the same public exponent E because that value doesn't",
    "start": "1131640",
    "end": "1137910"
  },
  {
    "text": "actually hide any of the secrets in the private key what is a problem is if two",
    "start": "1137910",
    "end": "1143669"
  },
  {
    "text": "hosts are sharing the same modulus n because if they have the same modulus and they have it has the same",
    "start": "1143669",
    "end": "1149429"
  },
  {
    "text": "factorization and then they both know the private key of the other so this means that these hosts would share both",
    "start": "1149429",
    "end": "1155820"
  },
  {
    "text": "the same public and private keys they could decrypt messages that were intended for the other party they could sign for each other and so and so forth",
    "start": "1155820",
    "end": "1164000"
  },
  {
    "text": "however there are sort of more subtle problems that can happen so if not if",
    "start": "1164210",
    "end": "1169980"
  },
  {
    "text": "two hosts don't just share both prime factors but if they share exactly one",
    "start": "1169980",
    "end": "1175770"
  },
  {
    "text": "prime factor of the modulus so in this case I have two moduli and one is P",
    "start": "1175770",
    "end": "1181380"
  },
  {
    "text": "times Q 1 and n 2 is P times Q 2 and they so they share the same prime factor",
    "start": "1181380",
    "end": "1186720"
  },
  {
    "text": "P then you can compute the GCD of N 1 and n 2 and that will be this value P",
    "start": "1186720",
    "end": "1193049"
  },
  {
    "text": "and now I've just factored both keys and this is relevant because there's a big",
    "start": "1193049",
    "end": "1199770"
  },
  {
    "text": "difference in the time to naively factor a number versus to compute a GC D so for",
    "start": "1199770",
    "end": "1205309"
  },
  {
    "text": "768 bit RSA moduli the current record was set in late 2009",
    "start": "1205309",
    "end": "1210750"
  },
  {
    "text": "published in 2010 it took about 2.5 calendar years for a team of academics",
    "start": "1210750",
    "end": "1215940"
  },
  {
    "text": "using a bunch of their computing clusters to use the number field sieve to factor a 768 bit RSA modulus in",
    "start": "1215940",
    "end": "1223470"
  },
  {
    "text": "contrast on my laptop it takes 15 microseconds to compute the GCD of two",
    "start": "1223470",
    "end": "1228920"
  },
  {
    "text": "1024 bit RSA modulo so there's a little bit of a difference here yes Euclid's",
    "start": "1228920",
    "end": "1239520"
  },
  {
    "text": "algorithm were actually you can do better than you could versus number field sieve so this is a this would be a",
    "start": "1239520",
    "end": "1246330"
  },
  {
    "text": "problem if it ever occurred now okay what about DSA or ECDSA",
    "start": "1246330",
    "end": "1254040"
  },
  {
    "text": "I can't actually say anything very intelligent about diffie-hellman keys you know if you share the same private",
    "start": "1254040",
    "end": "1262410"
  },
  {
    "text": "key you share the same public key but I don't know any tricks but it turns out with the digital signature algorithm there is a trick because of the way the",
    "start": "1262410",
    "end": "1270210"
  },
  {
    "text": "signatures are constructed so similar to diffie-hellman if you to host your the",
    "start": "1270210",
    "end": "1275970"
  },
  {
    "text": "same private key they'll share the same public key you can see this in the in the public value and they could sign for",
    "start": "1275970",
    "end": "1282330"
  },
  {
    "text": "each other and they both know the private key for each other however the signatures themselves are",
    "start": "1282330",
    "end": "1287670"
  },
  {
    "text": "randomized so they contain a random nonce and if this nonce is known then it",
    "start": "1287670",
    "end": "1293160"
  },
  {
    "text": "is possible for a single signature and you know the public key then it you can easily compute the private key from the",
    "start": "1293160",
    "end": "1299400"
  },
  {
    "text": "signal signature and the known daunts this is an interesting property for a signature scheme to have and this also",
    "start": "1299400",
    "end": "1307470"
  },
  {
    "text": "has the property that if your DSA nonce has ever used to sign this two distinct messages with the same public key then",
    "start": "1307470",
    "end": "1314640"
  },
  {
    "text": "you can easily compute the nonce and from there you can easily compute the private key that was used so if you ever",
    "start": "1314640",
    "end": "1322550"
  },
  {
    "text": "once screw up with your DSA implementation and use the same value to",
    "start": "1322550",
    "end": "1328470"
  },
  {
    "text": "sign two different messages then your private key is forever compromised so",
    "start": "1328470",
    "end": "1335280"
  },
  {
    "start": "1335000",
    "end": "1955000"
  },
  {
    "text": "okay now we have some things to look for in the wild in our gigantic database of",
    "start": "1335280",
    "end": "1341550"
  },
  {
    "text": "key let's look for them now I'm going to tell you why they shouldn't work so you",
    "start": "1341550",
    "end": "1347980"
  },
  {
    "text": "can imagine experiment we take all of the RSA moduli that we collected off the internet as I just said we have many",
    "start": "1347980",
    "end": "1354009"
  },
  {
    "text": "millions of them and we compute the GCD of each pair of all of the RSA moduli",
    "start": "1354009",
    "end": "1360340"
  },
  {
    "text": "and if these are say moduli are randomly chosen then you expect nothing to happen",
    "start": "1360340",
    "end": "1366090"
  },
  {
    "text": "okay so if you if you say okay so we",
    "start": "1366090",
    "end": "1371739"
  },
  {
    "text": "have M RSA moduli they have two factors each and if they are randomly generated",
    "start": "1371739",
    "end": "1378279"
  },
  {
    "text": "we as okay there so the randomly generated Prime's and we're essentially throwing two Prime's into random buckets",
    "start": "1378279",
    "end": "1386470"
  },
  {
    "text": "at a time until we get a collision so we can we know what time this will happen by the birthday bound and we know how",
    "start": "1386470",
    "end": "1392919"
  },
  {
    "text": "many Prime's there are of say 512 bits if we're looking at 1024 bit keys from",
    "start": "1392919",
    "end": "1398409"
  },
  {
    "text": "the prime number theorem and so the birthday bound tells us that after we have square root of M Prime's all right",
    "start": "1398409",
    "end": "1407109"
  },
  {
    "text": "if we have square root of M yeah if we have both once we have like basically",
    "start": "1407109",
    "end": "1413769"
  },
  {
    "text": "square root of the total number of primes then we that's exactly when we expect a collision and it's pretty sharp at that bound so if you plot this for",
    "start": "1413769",
    "end": "1423690"
  },
  {
    "text": "512 bit primes here's this function it's basically astronomically small",
    "start": "1423960",
    "end": "1431220"
  },
  {
    "text": "until you get to pretty close to the number of atoms in the universe and at",
    "start": "1431220",
    "end": "1437289"
  },
  {
    "text": "that point you do get a non-trivial probability of a collision but anywhere sort of below here at reasonable bounds",
    "start": "1437289",
    "end": "1444309"
  },
  {
    "text": "you get almost nothing it's that a question numbers the number itself is",
    "start": "1444309",
    "end": "1452830"
  },
  {
    "text": "not it starts show up substantially before it goes to B probabilities",
    "start": "1452830",
    "end": "1460509"
  },
  {
    "text": "approaching 1 so yeah you might you might well you definitely need to worry if you're going to have a public key for",
    "start": "1460509",
    "end": "1467019"
  },
  {
    "text": "every atom in the universe and you might you might even worry if you have a public key for every atom in the earth",
    "start": "1467019",
    "end": "1473670"
  },
  {
    "text": "no this is this is um this is the function this is this is the probability",
    "start": "1473670",
    "end": "1478840"
  },
  {
    "text": "of a collision that I plot it here so that so so this is the square root of",
    "start": "1478840",
    "end": "1485560"
  },
  {
    "text": "the number of the total number of fronts but we scale this so it's the actual number as opposed to the ratio of",
    "start": "1485560",
    "end": "1492690"
  },
  {
    "text": "probability then we might see halfway of that curve this is if I if I take a",
    "start": "1492690",
    "end": "1502510"
  },
  {
    "text": "random like Allah if I take a collection of M primes randomly generated what's",
    "start": "1502510",
    "end": "1510550"
  },
  {
    "text": "the probability with my collection of M Prime's that I see a collision this is one collision as compared to a collision",
    "start": "1510550",
    "end": "1515890"
  },
  {
    "text": "one morning yes this is a collision anywhere in this gigantic database so a",
    "start": "1515890",
    "end": "1521830"
  },
  {
    "text": "collision with your number will have probability 1 over the few times the number of times and or two over the",
    "start": "1521830",
    "end": "1530610"
  },
  {
    "text": "number of primes and the probability of any collision follows the birthday don't I move it's a big number",
    "start": "1530610",
    "end": "1544530"
  },
  {
    "text": "the the upshot here is that this should never happen like this is not something",
    "start": "1544530",
    "end": "1549940"
  },
  {
    "text": "that you should worry about you might think well ok maybe you should worry you see you still seem to be worried but this is not something that talks like",
    "start": "1549940",
    "end": "1559480"
  },
  {
    "text": "this one because of this just because the lack of readiness 75 is about half",
    "start": "1559480",
    "end": "1566980"
  },
  {
    "text": "of 150 so yeah yeah yeah so the circle",
    "start": "1566980",
    "end": "1574690"
  },
  {
    "text": "there's this short transition between it not happening and it happening is happening in yeah square root of 10 to",
    "start": "1574690",
    "end": "1580750"
  },
  {
    "text": "the 150 but basically this should not",
    "start": "1580750",
    "end": "1586900"
  },
  {
    "text": "happen there's nothing funny going on with a distribution of primes there's nothing funny going on with a number of prime numbers if your keys were randomly",
    "start": "1586900",
    "end": "1594130"
  },
  {
    "text": "generated you have nothing to worry about even for 1024 bit keys which you probably shouldn't be using anymore anyway but you know nothing to worry",
    "start": "1594130",
    "end": "1602140"
  },
  {
    "text": "about until the next load okay so despite me proving to you some",
    "start": "1602140",
    "end": "1608620"
  },
  {
    "text": "of you that this will never happen we did it anyway and okay then there's the question of",
    "start": "1608620",
    "end": "1615549"
  },
  {
    "text": "how do you how do you actually do this computation so the computation that we want to do is we want to take all of the RSA moduli that we downloaded and",
    "start": "1615549",
    "end": "1622659"
  },
  {
    "text": "compute the pairwise greatest common divisors of each of them and doing this",
    "start": "1622659",
    "end": "1628629"
  },
  {
    "text": "in the naive way so for modulus 1 and module is to compute GCD of the to check if it's not",
    "start": "1628629",
    "end": "1633999"
  },
  {
    "text": "1 and continue this is a quadratic algorithm in the number of moduli that",
    "start": "1633999",
    "end": "1639909"
  },
  {
    "text": "you have and so you can estimate the amount of time that it would take which is sort of just naively 15 microseconds",
    "start": "1639909",
    "end": "1646809"
  },
  {
    "text": "per computation and total number of moduli to choose two pairs",
    "start": "1646809",
    "end": "1651999"
  },
  {
    "text": "that's 1,100 years which is totally not out of the question if you have a giant cluster but I did this when I was a",
    "start": "1651999",
    "end": "1658029"
  },
  {
    "text": "postdoc and so I didn't have a giant cluster so we had to be a little bit more clever and so the way that we were",
    "start": "1658029",
    "end": "1665110"
  },
  {
    "text": "more clever it turns out that there's a much more efficient algorithm for accomplishing this which was published",
    "start": "1665110",
    "end": "1671379"
  },
  {
    "text": "by Dan Bernstein in 2004 he put up a paper it was actually an algorithm used",
    "start": "1671379",
    "end": "1676809"
  },
  {
    "text": "for finding pairwise smooth numbers in preparation for a standard factoring",
    "start": "1676809",
    "end": "1683409"
  },
  {
    "text": "algorithm but we can repurpose it for our purposes here it contains a bunch of sort of common tricks from the",
    "start": "1683409",
    "end": "1690249"
  },
  {
    "text": "computational number theory community and so the way the algorithm works you can implement this in about 15 lines of",
    "start": "1690249",
    "end": "1696490"
  },
  {
    "text": "Python it's pretty straightforward but basically you compute this gigantic",
    "start": "1696490",
    "end": "1702119"
  },
  {
    "text": "binary tree which is called a product tree where each each node is the product of its two parents until you get the",
    "start": "1702119",
    "end": "1708999"
  },
  {
    "text": "product of all of the RSA moduli on the internet this is a really big number it was so big that we broke GMP in doing",
    "start": "1708999",
    "end": "1717039"
  },
  {
    "text": "this that's how big it was then you compute a remainder tree you go back",
    "start": "1717039",
    "end": "1723279"
  },
  {
    "text": "down the tree and mod out by the squares of each node and then in the tree at the end you end up with the product of",
    "start": "1723279",
    "end": "1730269"
  },
  {
    "text": "everything mod each element squared you can divide out by that element and then",
    "start": "1730269",
    "end": "1736299"
  },
  {
    "text": "at this point we have basically the product of everything but and one",
    "start": "1736299",
    "end": "1741650"
  },
  {
    "text": "and we can take the GCD of that and n1 and that will tell us if any everything",
    "start": "1741650",
    "end": "1747200"
  },
  {
    "text": "but N 1 and N 1 has some non-trivial common factor around so this is poly",
    "start": "1747200",
    "end": "1755690"
  },
  {
    "text": "logarithmic so you have a log number of nodes in the in the tree and each of",
    "start": "1755690",
    "end": "1763580"
  },
  {
    "text": "each the number of operations going across actually sort of multiplication",
    "start": "1763580",
    "end": "1771650"
  },
  {
    "text": "is it scales like n poly log n rather than like N squared in the number of",
    "start": "1771650",
    "end": "1777830"
  },
  {
    "text": "bits and so you're accumulating a bunch of poly log n factors but the the total",
    "start": "1777830",
    "end": "1786650"
  },
  {
    "text": "number of operations on each node is a proxy is within a poly log factor for each one and so we have basically were",
    "start": "1786650",
    "end": "1795650"
  },
  {
    "text": "near we start with like linear and in the number a total number of moduli",
    "start": "1795650",
    "end": "1801880"
  },
  {
    "text": "elements and so each each node in the tree takes like m poly log n operations",
    "start": "1801880",
    "end": "1809320"
  },
  {
    "text": "with some poly with some poly log and like the length of the tree there's we",
    "start": "1809320",
    "end": "1819530"
  },
  {
    "text": "have more efficient code written in C using GMP which is more than 15 lines of",
    "start": "1819530",
    "end": "1826910"
  },
  {
    "text": "code it's available online if you want to run this or is actually the best",
    "start": "1826910",
    "end": "1834950"
  },
  {
    "text": "enough to do this it starts to break so it this will so Python will work for",
    "start": "1834950",
    "end": "1840530"
  },
  {
    "text": "like a few million keys it'll start to brick to break when you get to like 5 or 10 million keys just because of memory",
    "start": "1840530",
    "end": "1845900"
  },
  {
    "text": "management it starts to to die all your",
    "start": "1845900",
    "end": "1851150"
  },
  {
    "text": "time in any case so the language doesn't make much difference yeah except that",
    "start": "1851150",
    "end": "1858860"
  },
  {
    "text": "the the big barrier here is that this is a gigantic data structure this thing is huge and so if this gets to be more than like",
    "start": "1858860",
    "end": "1866450"
  },
  {
    "text": "your total amount of memory then you have to start like reading you know yeah you either start paging or you have to read and write from disk it gets a",
    "start": "1866450",
    "end": "1872160"
  },
  {
    "text": "little bit unfortunate yes so we had to this takes hundreds of gigabytes to",
    "start": "1872160",
    "end": "1878550"
  },
  {
    "text": "store and so we had to do all this mucking around writing it to disk and",
    "start": "1878550",
    "end": "1884940"
  },
  {
    "text": "whatnot that was the part where GMP broke is because they're using a sign 32-bit integer for the size of the",
    "start": "1884940",
    "end": "1891090"
  },
  {
    "text": "numbers that you're running to disk and we exceeded that did everything on the",
    "start": "1891090",
    "end": "1900270"
  },
  {
    "text": "internet hood was more than 2 to the 31 yeah okay now that we've done this",
    "start": "1900270",
    "end": "1909900"
  },
  {
    "text": "computation or mentally and you can do it you know tonight at home after you go home you can download some code download",
    "start": "1909900",
    "end": "1915630"
  },
  {
    "text": "some keys alright so what actually does happen well it turns out that you compute the private keys for 64,000 HTTP",
    "start": "1915630",
    "end": "1921900"
  },
  {
    "text": "servers so that's about half a percent of the hosts on the internet 2500 SSH",
    "start": "1921900",
    "end": "1927450"
  },
  {
    "text": "servers - PGP users and you discover a bunch of invalid keys that happen to be in the database and 103 Taiwanese",
    "start": "1927450",
    "end": "1934860"
  },
  {
    "text": "citizens so that's not what you are supposed to be finding what happens if",
    "start": "1934860",
    "end": "1942210"
  },
  {
    "text": "you go through and look for repeated DSA nonces it turns out that you can compute the private keys for 1% of all of the",
    "start": "1942210",
    "end": "1948360"
  },
  {
    "text": "SSH servers with DSA keys and 158 Bitcoin addresses ok what happens if you",
    "start": "1948360",
    "end": "1957750"
  },
  {
    "start": "1955000",
    "end": "2266000"
  },
  {
    "text": "just look for repeated keys well something like 60% of the HTTP and ssh",
    "start": "1957750",
    "end": "1964440"
  },
  {
    "text": "hosts serve non unique public keys which is kind of a shocking number because",
    "start": "1964440",
    "end": "1969630"
  },
  {
    "text": "from a theoretical perspective you know the first thing that you do when you do cryptography is like generate a random public key and clearly the internet is",
    "start": "1969630",
    "end": "1977340"
  },
  {
    "text": "not doing that it turns out that there's a lot of reasons that are not vulnerabilities that hosts share public",
    "start": "1977340",
    "end": "1984300"
  },
  {
    "text": "keys in practice their thing you know shared hosting situations where you have a single hosting provider and a bunch of",
    "start": "1984300",
    "end": "1992420"
  },
  {
    "text": "who's either issuing presumably HTTPS certificates for all of their hosts or",
    "start": "1992420",
    "end": "1999330"
  },
  {
    "text": "you have an ssh kind of gateway that has a bunch of different IP",
    "start": "1999330",
    "end": "2004880"
  },
  {
    "text": "dresses behind it that's probably not a vulnerability you have many organizations who register lots of",
    "start": "2004880",
    "end": "2010940"
  },
  {
    "text": "domain names with the same key so Google calm and google.org and Google dot MX or",
    "start": "2010940",
    "end": "2017030"
  },
  {
    "text": "Google thought fr it's not a vulnerability if they share the same public key because it's one organization",
    "start": "2017030",
    "end": "2022550"
  },
  {
    "text": "they have the they presumably have their own infrastructure you also see a lot of",
    "start": "2022550",
    "end": "2028730"
  },
  {
    "text": "expired certificates that are just renewed with the same key which this is just standard practice although",
    "start": "2028730",
    "end": "2034220"
  },
  {
    "text": "apparently after the heartbleed vulnerability last year when everybody was told get a new HTTPS certificate a",
    "start": "2034220",
    "end": "2042080"
  },
  {
    "text": "lot of people went out and got new HTTPS surfeit certificates with the same public key that they had before sort of",
    "start": "2042080",
    "end": "2049580"
  },
  {
    "text": "missing the point but their key might be compromised so that case is bad but but",
    "start": "2049580",
    "end": "2055158"
  },
  {
    "text": "in general if you are just getting a new certificate you don't need to change your key every every year there are a",
    "start": "2055159",
    "end": "2062030"
  },
  {
    "text": "lot of common reasons that are vulnerabilities to share keys a really common one is device default",
    "start": "2062030",
    "end": "2067610"
  },
  {
    "text": "certificates so you know a little a router manufacturer might just burn in a",
    "start": "2067610",
    "end": "2073340"
  },
  {
    "text": "certificate into the firmware of the device and so you will have tens of thousands or millions of devices out",
    "start": "2073340",
    "end": "2079550"
  },
  {
    "text": "there that all have exactly the same keys and people have reverse engineered these things and published databases of",
    "start": "2079550",
    "end": "2085429"
  },
  {
    "text": "the private keys for them the one reason",
    "start": "2085429",
    "end": "2090679"
  },
  {
    "text": "relevant to us is things like a entropy problems in key generation which we can",
    "start": "2090679",
    "end": "2096138"
  },
  {
    "text": "start to estimate but it's hard to really ask it a rigorous estimate because of all of the device default",
    "start": "2096139",
    "end": "2101540"
  },
  {
    "text": "certificates and then there's also things like virtual machine snapshots so if you generate a virtual machine and",
    "start": "2101540",
    "end": "2109270"
  },
  {
    "text": "you set up everything the way you like it you you snapshot it you distribute it to everybody in the internet well you",
    "start": "2109270",
    "end": "2115070"
  },
  {
    "text": "already generated the SSH host keys and so everybody who spins up an instance of that snapshot will end up with the same",
    "start": "2115070",
    "end": "2120860"
  },
  {
    "text": "host keys and we started to see a little bit of that it's also very difficult to",
    "start": "2120860",
    "end": "2125900"
  },
  {
    "text": "get proper estimates of that because I don't know how to tell if something is a virtual machine or not out there on the",
    "start": "2125900",
    "end": "2131570"
  },
  {
    "text": "internet so these are some massive massive lower bounds just from",
    "start": "2131570",
    "end": "2138590"
  },
  {
    "text": "basically hand counting places where these reasons were clearly identifiable",
    "start": "2138590",
    "end": "2144150"
  },
  {
    "text": "so default certificates for HTTPS at least 5% of hosts are sharing keys",
    "start": "2144150",
    "end": "2151619"
  },
  {
    "text": "because of default certificates or keys for a low entropy I'm sure it's actually",
    "start": "2151619",
    "end": "2157200"
  },
  {
    "text": "much higher but 0.3 percent can be manually identified this must be an entropy problem it's not some kind of device default and then for SSH about",
    "start": "2157200",
    "end": "2165600"
  },
  {
    "text": "10% of hosts are sharing public keys because of either default or low entropy",
    "start": "2165600",
    "end": "2170610"
  },
  {
    "text": "keys massive lower bounds like isolate",
    "start": "2170610",
    "end": "2175950"
  },
  {
    "text": "the low entropy situation how do you just turn I I'm not even seeing how this",
    "start": "2175950",
    "end": "2184500"
  },
  {
    "text": "is happening which is so it's kind of an aesthetic judgment so um I guess I I",
    "start": "2184500",
    "end": "2192150"
  },
  {
    "text": "didn't mention that here the if you connect to a machine and it says my ssh",
    "start": "2192150",
    "end": "2198330"
  },
  {
    "text": "implementation is like this router manufacturer and then if you look at all",
    "start": "2198330",
    "end": "2203880"
  },
  {
    "text": "of the hosts that had that banner further ssh implementation and then you",
    "start": "2203880",
    "end": "2209940"
  },
  {
    "text": "see a distribution that falls off like this in the distribution of what their public keys are then you say that looks",
    "start": "2209940",
    "end": "2215190"
  },
  {
    "text": "like an entropy problem rather than that they were building it depended on the",
    "start": "2215190",
    "end": "2223050"
  },
  {
    "text": "implementation but if we saw that like everything shared the everything from that identified itself as being from a",
    "start": "2223050",
    "end": "2229260"
  },
  {
    "text": "particular manufacturer had exactly the same key that looks like a default key if there was some kind of thing",
    "start": "2229260",
    "end": "2234990"
  },
  {
    "text": "distribution that looked like it came out of a random process then that looks like an entropy problem I can't prove it",
    "start": "2234990",
    "end": "2240750"
  },
  {
    "text": "to you but that's awfully suspicious and then in cases where we definitely knew that what was happening was because of",
    "start": "2240750",
    "end": "2247680"
  },
  {
    "text": "an entropy problem then we could see some of these distributions repeated in so this is kind of a qualitative",
    "start": "2247680",
    "end": "2254280"
  },
  {
    "text": "judgment on my part ok",
    "start": "2254280",
    "end": "2260300"
  },
  {
    "text": "did I what did I do here I broke my thing well okay so here is if you look",
    "start": "2260820",
    "end": "2270940"
  },
  {
    "start": "2266000",
    "end": "2388000"
  },
  {
    "text": "at the most commonly repeated keys on the Internet so this is the most",
    "start": "2270940",
    "end": "2277000"
  },
  {
    "text": "commonly 50 most commonly repeated RSA SSH keys and you just say what is their",
    "start": "2277000",
    "end": "2282730"
  },
  {
    "text": "banner what IPS are they being served from can we identify why these keys are repeated here's something like what you",
    "start": "2282730",
    "end": "2288220"
  },
  {
    "text": "see the most commonly repeated SSH key is from Vario so a big internet hosting",
    "start": "2288220",
    "end": "2294130"
  },
  {
    "text": "provider my parents actually have an account on Vario so I went in and checked whether I could see the private key and I couldn't so I decided it was",
    "start": "2294130",
    "end": "2300400"
  },
  {
    "text": "not a vulnerability the next several most common are all obviously devices",
    "start": "2300400",
    "end": "2305770"
  },
  {
    "text": "various kinds of routers and firewalls and what you see as you go down is a hosting provider device device hosting",
    "start": "2305770",
    "end": "2312910"
  },
  {
    "text": "provider device device something else or I'm not sure and so nearly all of them were shared either because they were big",
    "start": "2312910",
    "end": "2319270"
  },
  {
    "text": "hosting providers where probably they just managed their own infrastructure and it's not a problem or it's some",
    "start": "2319270",
    "end": "2325120"
  },
  {
    "text": "family a device that has some kind of baked in default key for the TLS",
    "start": "2325120",
    "end": "2335260"
  },
  {
    "text": "certificates that were that we factored when we went and looked at those the",
    "start": "2335260",
    "end": "2343120"
  },
  {
    "text": "vast vast majority of them were not browser trusted certificates so they were not signed by a certificate",
    "start": "2343120",
    "end": "2349150"
  },
  {
    "text": "authority nobody paid money for these things and the web pages for the two that were had been signed by certificate",
    "start": "2349150",
    "end": "2355060"
  },
  {
    "text": "authorities weren't active when we were looking at him so these subject information for their certificates looks",
    "start": "2355060",
    "end": "2361510"
  },
  {
    "text": "something like this if you go and refactor all of the vulnerable keys and so they say okay",
    "start": "2361510",
    "end": "2367510"
  },
  {
    "text": "self signed system generated or they identify here's a printer there's a",
    "start": "2367510",
    "end": "2376510"
  },
  {
    "text": "router so these are all sort of clearly auto-generated certificates from various",
    "start": "2376510",
    "end": "2382030"
  },
  {
    "text": "kinds of devices that list things like serial numbers these aren't banks",
    "start": "2382030",
    "end": "2389450"
  },
  {
    "start": "2388000",
    "end": "2569000"
  },
  {
    "text": "so this is sort of a clue that what we were looking at was not sort of a widespread problem generic problem in",
    "start": "2389450",
    "end": "2397099"
  },
  {
    "text": "crypto implementation it's a problem somehow isolated to devices and in",
    "start": "2397099",
    "end": "2404089"
  },
  {
    "text": "particular things like routers and firewalls which actually you think the",
    "start": "2404089",
    "end": "2409790"
  },
  {
    "text": "internet is real computers it turns out that if you just scan the internet what you see is devices there's a huge number",
    "start": "2409790",
    "end": "2414980"
  },
  {
    "text": "of things out there so the Internet of Things is already here in some sense so",
    "start": "2414980",
    "end": "2420970"
  },
  {
    "text": "these implementation problems for devices it wasn't it also wasn't that",
    "start": "2420970",
    "end": "2426650"
  },
  {
    "text": "there was a single family of device that was vulnerable that that had made some mistake it was across all nearly all of",
    "start": "2426650",
    "end": "2432710"
  },
  {
    "text": "the major manufacturers so every name in the industry that you can think of we saw represented in the vulnerable keys",
    "start": "2432710",
    "end": "2440660"
  },
  {
    "text": "that we found so there were various kinds of network security devices so these juniper network security devices",
    "start": "2440660",
    "end": "2446150"
  },
  {
    "text": "were more than half of the factored HTTPS certificates and there's another",
    "start": "2446150",
    "end": "2457309"
  },
  {
    "text": "commonality with family tree that even though they're different manufacturers someone may have bought a license to",
    "start": "2457309",
    "end": "2463309"
  },
  {
    "text": "someone else's design so a lot of these things are running some version of embedded Linux on on some little",
    "start": "2463309",
    "end": "2469599"
  },
  {
    "text": "processor and there's there's a few distribution I mean you know the the generic thing that we can say is okay",
    "start": "2469599",
    "end": "2476480"
  },
  {
    "text": "they're probably running SSH on some version of embedded Linux on some little version of some version of hardware that",
    "start": "2476480",
    "end": "2482210"
  },
  {
    "text": "specialized to them that was sort of the most generic but juniper doesn't follow",
    "start": "2482210",
    "end": "2487700"
  },
  {
    "text": "that so juniper has its own operating system which is based on BSD and there",
    "start": "2487700",
    "end": "2494359"
  },
  {
    "text": "were actually several different versions of Linux there were several different versions of SSH hosts and and whatnot so",
    "start": "2494359",
    "end": "2501740"
  },
  {
    "text": "it wasn't it wasn't all because of some shared family tree there was a lot of",
    "start": "2501740",
    "end": "2507619"
  },
  {
    "text": "shared keys because of shared family trees but there were a lot of different implementations that were clearly having",
    "start": "2507619",
    "end": "2513230"
  },
  {
    "text": "similar kinds of problems so yeah we identified devices for more than 50",
    "start": "2513230",
    "end": "2519559"
  },
  {
    "text": "manufacturers it's every name that you can think of and all sorts of interesting things like",
    "start": "2519559",
    "end": "2526630"
  },
  {
    "text": "firewalls for power plants cell towers power yeah power grid things HVAC",
    "start": "2526630",
    "end": "2535730"
  },
  {
    "text": "systems printers like yes yes the that",
    "start": "2535730",
    "end": "2544340"
  },
  {
    "text": "is a very astute observation gaseous",
    "start": "2544340",
    "end": "2551030"
  },
  {
    "text": "centrifuges to thankfully hopefully I",
    "start": "2551030",
    "end": "2557000"
  },
  {
    "text": "never will Def Con I'm just curious I think twice ok alright so I want to",
    "start": "2557000",
    "end": "2565610"
  },
  {
    "text": "talk a little bit about sort of the big picture of what these implementations are doing ok so if you think of your",
    "start": "2565610",
    "end": "2572300"
  },
  {
    "start": "2569000",
    "end": "2766000"
  },
  {
    "text": "little device it wants to generate a crypt okay you tree you you plug it in you turn it on it says I'm going to boot",
    "start": "2572300",
    "end": "2578390"
  },
  {
    "text": "up my SSH process now I'm going to generate my host P okay so what does it",
    "start": "2578390",
    "end": "2584480"
  },
  {
    "text": "need well it needs to generate its its host key now and it needs a source of randomness where does it get it well",
    "start": "2584480",
    "end": "2590330"
  },
  {
    "text": "there's some whatever this is ssh process is it has its some application",
    "start": "2590330",
    "end": "2595640"
  },
  {
    "text": "specific pseudo-random number generator hopefully coming from some library like open ssl the way that this application",
    "start": "2595640",
    "end": "2605060"
  },
  {
    "text": "specific random number generator is going to generate numbers well it's going to take randomness from all the",
    "start": "2605060",
    "end": "2611030"
  },
  {
    "text": "sources that it can which are basically the time the pit and maybe the operating system entropy pool because the",
    "start": "2611030",
    "end": "2617960"
  },
  {
    "text": "operating system is kind enough to provide a source of random numbers but it doesn't have access the the application itself doesn't have access",
    "start": "2617960",
    "end": "2623660"
  },
  {
    "text": "to a lot more than that then okay where does the operating system get its entropy from well it takes its inputs",
    "start": "2623660",
    "end": "2631550"
  },
  {
    "text": "from say keyboards Mouse's hard disk timings network interrupts that kind of",
    "start": "2631550",
    "end": "2637520"
  },
  {
    "text": "information okay so if you think about these little devices you plug it in you",
    "start": "2637520",
    "end": "2644630"
  },
  {
    "text": "turn it on it starts its SSH process it's never it might not even be hooked up to the to the network it doesn't have",
    "start": "2644630",
    "end": "2652010"
  },
  {
    "text": "a keyboard it doesn't have a mouse and it probably doesn't have a hard disk so all of the sources of entropy that the operating system was",
    "start": "2652010",
    "end": "2658280"
  },
  {
    "text": "expecting arch present it might even be plugged hooked up for the first time in",
    "start": "2658280",
    "end": "2663740"
  },
  {
    "text": "on the in the factory and so it's never you know it's not even done yet second",
    "start": "2663740",
    "end": "2672130"
  },
  {
    "text": "when the application decides to query for random numbers from the operating",
    "start": "2672130",
    "end": "2678619"
  },
  {
    "text": "system even if the operating system had access to entropy it might not have actually incorporated it into its",
    "start": "2678619",
    "end": "2684710"
  },
  {
    "text": "entropy pool at the time when it was queried by the application and this was",
    "start": "2684710",
    "end": "2691550"
  },
  {
    "text": "actually a vulnerability in Linux that we experimental event verified that there was essentially a boot time",
    "start": "2691550",
    "end": "2697190"
  },
  {
    "text": "entropy hole so if you started up your Linux distribution it would wait until",
    "start": "2697190",
    "end": "2704210"
  },
  {
    "text": "it had a certain amount of entropy and in order to mix that into the main pool",
    "start": "2704210",
    "end": "2709609"
  },
  {
    "text": "for output if you queried you random or a dev random or W random because it was",
    "start": "2709609",
    "end": "2716690"
  },
  {
    "text": "they were worried about the possibility of somebody of an attacker sort of carefully tracking the entropy sources",
    "start": "2716690",
    "end": "2722240"
  },
  {
    "text": "so you want to mix in lots of entropy all at once so it would look random but",
    "start": "2722240",
    "end": "2733700"
  },
  {
    "text": "it won't block you random and so I mean this is you know I you guys all have",
    "start": "2733700",
    "end": "2741050"
  },
  {
    "text": "beards I assume that you all using Linux all the time so Linux has these two random number generators",
    "start": "2741050",
    "end": "2746599"
  },
  {
    "text": "there's devran I'm a dev you random and a dev random says I'm high-quality randomness you should think of me as you",
    "start": "2746599",
    "end": "2752390"
  },
  {
    "text": "know information theoretically secure even though it's not and dev you random makes no promises and it only says I'm",
    "start": "2752390",
    "end": "2758569"
  },
  {
    "text": "the output of a pseudo-random number generator but it never blocks and if you read man random it says as the general",
    "start": "2758569",
    "end": "2764900"
  },
  {
    "text": "rule W random should be used for everything except long-lived GPG SSL SSH keys but the issue here is that the very",
    "start": "2764900",
    "end": "2773270"
  },
  {
    "start": "2766000",
    "end": "3405000"
  },
  {
    "text": "conservative blocking behavior of random is a usability problem so random will try to measure the amount of entropy",
    "start": "2773270",
    "end": "2778940"
  },
  {
    "text": "that's going in and coming out and try to make sure that they never give out more entropy that came in you can",
    "start": "2778940",
    "end": "2785630"
  },
  {
    "text": "quibble about how good their estimation of entropy is it's probably not very good some people showed a couple years ago",
    "start": "2785630",
    "end": "2792019"
  },
  {
    "text": "but this is overkill even for proper",
    "start": "2792019",
    "end": "2797569"
  },
  {
    "text": "cryptography all you care is that your pseudo-random number generator has been seeded once you don't care about continual seeding and because of that",
    "start": "2797569",
    "end": "2805509"
  },
  {
    "text": "you know you this little router it's probably never going to get an output",
    "start": "2805509",
    "end": "2811309"
  },
  {
    "text": "from dev random so what's the developer going to you do they're going to say well screw it I'm just going to use you",
    "start": "2811309",
    "end": "2817160"
  },
  {
    "text": "random the difference between random and you random is some theoretical academic concern that doesn't apply to me",
    "start": "2817160",
    "end": "2826180"
  },
  {
    "text": "generators are perfectly fine for cryptography as long as they are seeded with uniformly random inputs once you",
    "start": "2830950",
    "end": "2839750"
  },
  {
    "text": "see yeah okay once you've seeded them with sufficiently large say 256 bits of uniformly random inputs then a",
    "start": "2839750",
    "end": "2846680"
  },
  {
    "text": "cryptographically secure pseudo-random number generator is everything that you need for the rest of your life it's not",
    "start": "2846680",
    "end": "2857240"
  },
  {
    "text": "just the factor that's 256 this and its underlying representation of that can be",
    "start": "2857240",
    "end": "2865730"
  },
  {
    "text": "exploited for vulnerabilities well you're saying if you can get at the",
    "start": "2865730",
    "end": "2871009"
  },
  {
    "text": "underlying hardware or the operating system why are these doing that processor you can grab the right number",
    "start": "2871009",
    "end": "2876710"
  },
  {
    "text": "or the seed yeah so there might be other vulnerabilities if you can recover the state and the like but assuming that",
    "start": "2876710",
    "end": "2883730"
  },
  {
    "text": "those are not a problem then there is this hole yes during the initialization",
    "start": "2883730",
    "end": "2889309"
  },
  {
    "text": "there is this hole and this hole is the problem so here is a developer for one",
    "start": "2889309",
    "end": "2897200"
  },
  {
    "text": "of the most commonly used SSH implementations on these little embedded devices saying I give up I'm not going",
    "start": "2897200",
    "end": "2905269"
  },
  {
    "text": "to use dev random because it will never provide any output so if system",
    "start": "2905269",
    "end": "2910700"
  },
  {
    "text": "developers aren't getting seeds between boots nor getting any entropy from somewhere it's their own fault give the",
    "start": "2910700",
    "end": "2916670"
  },
  {
    "text": "problem to somebody else ok",
    "start": "2916670",
    "end": "2922450"
  },
  {
    "text": "so right I have established that there is this problem at boot time which the",
    "start": "2922450",
    "end": "2928970"
  },
  {
    "text": "Linux developers have fixed they have issued a patch they change the behavior of Linux at boot time it will be much",
    "start": "2928970",
    "end": "2935210"
  },
  {
    "text": "more aggressive in incorporating entropy into its pools and it will also take it from more sources now so post-2012 bsd",
    "start": "2935210",
    "end": "2948289"
  },
  {
    "text": "did not have nearly as widespread problems because they were better at seeding on boot there were a couple of vulnerabilities in bsd several years ago",
    "start": "2948289",
    "end": "2954920"
  },
  {
    "text": "where they had boot time entropy seeding issues but those were result it was in",
    "start": "2954920",
    "end": "2968240"
  },
  {
    "text": "summer of 2012 and they were extremely",
    "start": "2968240",
    "end": "2973940"
  },
  {
    "text": "responsive it's very impressive basically like we emailed them and had a",
    "start": "2973940",
    "end": "2980480"
  },
  {
    "text": "response from leanness in like half an hour and there were there were patches by the end of the day yeah ok so i've",
    "start": "2980480",
    "end": "2993650"
  },
  {
    "text": "established that there's this entropy problem i haven't established how this generates keys that we can actually",
    "start": "2993650",
    "end": "2998690"
  },
  {
    "text": "factor so at this point you might believe me that we there are reasons why we would see many many repeated keys due",
    "start": "2998690",
    "end": "3004329"
  },
  {
    "text": "to entropy problems in the wild but why are we seeing keys that are sharing one",
    "start": "3004329",
    "end": "3010269"
  },
  {
    "text": "prime but not both ok so if you think about here's the sort of cartoon version",
    "start": "3010269",
    "end": "3016240"
  },
  {
    "text": "of how you might think to implement RSA in software so you might your",
    "start": "3016240",
    "end": "3022509"
  },
  {
    "text": "application might seed its its pseudo-random number generator and then it says give me a random prime give me",
    "start": "3022509",
    "end": "3027940"
  },
  {
    "text": "another prime multiply them together that's my modulus and so if you know",
    "start": "3027940",
    "end": "3034930"
  },
  {
    "text": "obviously if you haven't seeded your pseudo-random number generator or it seeded always with the same value then",
    "start": "3034930",
    "end": "3040420"
  },
  {
    "text": "you expect to see large numbers of shared keys and these repeated Keyser's assign that you might be vulnerable to a",
    "start": "3040420",
    "end": "3047259"
  },
  {
    "text": "targeted attack but this does not explain since the pseudo-random number generator is going to be a deterministic",
    "start": "3047259",
    "end": "3052690"
  },
  {
    "text": "process why we might CP share not you yeah so if you if you are adding",
    "start": "3052690",
    "end": "3063690"
  },
  {
    "text": "randomness from some entropy source in between generating P and Q then you",
    "start": "3063690",
    "end": "3070830"
  },
  {
    "text": "might expect to share one prime but not two and but if you look at something",
    "start": "3070830",
    "end": "3077310"
  },
  {
    "text": "like open SSL it's not adding an obvious source of randomness so what open SSL",
    "start": "3077310",
    "end": "3082350"
  },
  {
    "text": "does is every time you get a big numb the pseudo-random number generator it",
    "start": "3082350",
    "end": "3089940"
  },
  {
    "text": "will add the current time in seconds into the pool which does not sound like",
    "start": "3089940",
    "end": "3095520"
  },
  {
    "text": "a very good source of entropy because the time has to be the same if you were",
    "start": "3095520",
    "end": "3102120"
  },
  {
    "text": "getting the same seed out of the random number generator in the first place so it turns out that due to clock drift",
    "start": "3102120",
    "end": "3109110"
  },
  {
    "text": "different devices can have slightly different notions of their CPU time",
    "start": "3109110",
    "end": "3115620"
  },
  {
    "text": "versus the real time and if the real time ticks on a slightly different cycle",
    "start": "3115620",
    "end": "3121380"
  },
  {
    "text": "of the CPU than for the actual then the",
    "start": "3121380",
    "end": "3127020"
  },
  {
    "text": "devices then you can add up with just enough entropy to produce this nice",
    "start": "3127020",
    "end": "3132420"
  },
  {
    "text": "distribution of shared Prime's that we were seeing in the wild there is is",
    "start": "3132420",
    "end": "3144840"
  },
  {
    "text": "holding as a constant is that what I'm saying that there's a little bit of these devices one might have its clock",
    "start": "3144840",
    "end": "3152520"
  },
  {
    "text": "running a little bit faster than the other and so if you imagine two devices",
    "start": "3152520",
    "end": "3157560"
  },
  {
    "text": "here that both start up they both think that it's unix time zero and then they",
    "start": "3157560",
    "end": "3163260"
  },
  {
    "text": "start moving forward and as they're generating their keys that key generation process they start with the",
    "start": "3163260",
    "end": "3169800"
  },
  {
    "text": "same seed and then they have to query many many big gnomes in order to generate a prime and as they do that",
    "start": "3169800",
    "end": "3175970"
  },
  {
    "text": "then one of them is running slightly slower than the other and if the clock",
    "start": "3175970",
    "end": "3182580"
  },
  {
    "text": "ticks on a slightly different iteration of querying a big number of the random number generator",
    "start": "3182580",
    "end": "3188040"
  },
  {
    "text": "then they will see different values and then the state of the random number generator will diverge from there",
    "start": "3188040",
    "end": "3194010"
  },
  {
    "text": "afterwards doesn't have a time at all so",
    "start": "3194010",
    "end": "3203850"
  },
  {
    "text": "it thinks it's use time zero and it starts ticking forward for America no how is it how is it counting time it's",
    "start": "3203850",
    "end": "3210810"
  },
  {
    "text": "kind of time and machine cycles it has something real time clock on it well but",
    "start": "3210810",
    "end": "3215820"
  },
  {
    "text": "they don't even all count in the small but LST sounds a little increment by",
    "start": "3215820",
    "end": "3221670"
  },
  {
    "text": "some tick amount in other words they're artifacts of the least significant bits",
    "start": "3221670",
    "end": "3227100"
  },
  {
    "text": "of the time of day that are not rentable we need sample so my picture here is",
    "start": "3227100",
    "end": "3234960"
  },
  {
    "text": "that we've got a CPU clock and we've got a real-time clock so the real-time clock gets powered from starting from when you",
    "start": "3234960",
    "end": "3241290"
  },
  {
    "text": "start it up it would have a battery behind it know what time it was but it",
    "start": "3241290",
    "end": "3246990"
  },
  {
    "text": "was never seated with the time because it's never been plugged in before that's",
    "start": "3246990",
    "end": "3253140"
  },
  {
    "text": "okay about this concept it's clear to me",
    "start": "3253140",
    "end": "3259560"
  },
  {
    "text": "and I understand the variability purple all computers in the conventional community we're all different",
    "start": "3259560",
    "end": "3265530"
  },
  {
    "text": "I don't know what you think of it as a significant difference what do you think a number that I can associate with the",
    "start": "3265530",
    "end": "3275250"
  },
  {
    "text": "variability it's going to depend on the device that you're so anxious what",
    "start": "3275250",
    "end": "3284940"
  },
  {
    "text": "what's your cause of a variability yeah that's acceptable or necessary well in",
    "start": "3284940",
    "end": "3293130"
  },
  {
    "text": "this case I I don't care what the variability is all that I care about is",
    "start": "3293130",
    "end": "3298380"
  },
  {
    "text": "that it's generating some distribution yeah the so there's there's entropy it's",
    "start": "3298380",
    "end": "3303990"
  },
  {
    "text": "going to it's going to vary a lot depending on the actual clock speed of the devices I don't want this to be the",
    "start": "3303990",
    "end": "3311220"
  },
  {
    "text": "source of entropy that I'm actually using to generate the keys I want to have actually had a good seed so I the",
    "start": "3311220",
    "end": "3319800"
  },
  {
    "text": "manufacturers can use whatever value for exactness of their clock that they want and I will that's fine but that",
    "start": "3319800",
    "end": "3327990"
  },
  {
    "text": "shouldn't be their source of entropy for cryptography it's fine you can see for",
    "start": "3327990",
    "end": "3334560"
  },
  {
    "text": "them yeah so we tried to model this scenario if",
    "start": "3334560",
    "end": "3343650"
  },
  {
    "text": "you know I guess you guys all say you believe me but if you don't believe that this might happen we actually took a",
    "start": "3343650",
    "end": "3350120"
  },
  {
    "text": "normal PC shut down as many processes as we could and fixed a seed for OpenSSL",
    "start": "3350120",
    "end": "3357330"
  },
  {
    "text": "and said generate me a key and if you do this many thousands of times you see a",
    "start": "3357330",
    "end": "3363780"
  },
  {
    "text": "beautiful distribution of different P's and Q's that get generated depending on",
    "start": "3363780",
    "end": "3369150"
  },
  {
    "text": "exactly where in the key generation cycle that this second was ticking and",
    "start": "3369150",
    "end": "3375470"
  },
  {
    "text": "it depends on the speed and all sorts of other things okay I'm getting a low on",
    "start": "3375470",
    "end": "3383700"
  },
  {
    "text": "time here should I should I like wrap up now or should I keep going for you guys",
    "start": "3383700",
    "end": "3399780"
  },
  {
    "text": "are more fun than grad students okay so now maybe you believe why why we see",
    "start": "3399780",
    "end": "3408440"
  },
  {
    "start": "3405000",
    "end": "4363000"
  },
  {
    "text": "factorable RSA keys why are we seeing these repeated DSA nonces so the DSA",
    "start": "3408440",
    "end": "3414060"
  },
  {
    "text": "nonces are being generated in real time during the actual sort of running of",
    "start": "3414060",
    "end": "3420240"
  },
  {
    "text": "these devices and even if you have a horrible little device that doesn't have any seeds on first boot it's been up for",
    "start": "3420240",
    "end": "3427470"
  },
  {
    "text": "some period of time when we actually were scanning the Internet and hopefully it's actually incorporated some entropy",
    "start": "3427470",
    "end": "3433050"
  },
  {
    "text": "into its entropy pool by then but it turns out that when we require heed a",
    "start": "3433050",
    "end": "3438240"
  },
  {
    "text": "lot of these devices that were generating keys what we found was that they were generating a deterministic sequence of nonces and the sequence is",
    "start": "3438240",
    "end": "3447360"
  },
  {
    "text": "coming because the application-specific random number generator is seeding itself once and then deterministic",
    "start": "3447360",
    "end": "3453300"
  },
  {
    "text": "deterministic lis ticking forward which is a perfectly fine model if you",
    "start": "3453300",
    "end": "3458760"
  },
  {
    "text": "have a good cryptographic seed it is not a good model if you don't have a good cryptographic cryptographically secure",
    "start": "3458760",
    "end": "3465660"
  },
  {
    "text": "seed and so the reason that we were seeing colliding nonces in many cases",
    "start": "3465660",
    "end": "3471600"
  },
  {
    "text": "was because you might you can imagine say ten thousand different routers all",
    "start": "3471600",
    "end": "3477750"
  },
  {
    "text": "from the same manufacturer and they were all started with the same state and then",
    "start": "3477750",
    "end": "3483410"
  },
  {
    "text": "they got queried different numbers of times and so we will see two nonces",
    "start": "3483410",
    "end": "3489300"
  },
  {
    "text": "collide in a single scan if two of these routers two of these 10,000 happened to be in the same state when we collided",
    "start": "3489300",
    "end": "3495510"
  },
  {
    "text": "them but if we go back and then ask for a hundred different values from there",
    "start": "3495510",
    "end": "3501320"
  },
  {
    "text": "their pools then we will see eventually more collisions so this explained some",
    "start": "3501320",
    "end": "3509310"
  },
  {
    "text": "but not all of the problems there were a few manufacturers who just didn't understand that you needed to generate",
    "start": "3509310",
    "end": "3514500"
  },
  {
    "text": "different values for every signature this is apparently a not uncommon problem with it's pretty easy to",
    "start": "3514500",
    "end": "3525960"
  },
  {
    "text": "generate a good cryptographically secure pseudo-random number generator at this time I mean a yes encounter mode is is",
    "start": "3525960",
    "end": "3531690"
  },
  {
    "text": "great right representatives and all 50",
    "start": "3531690",
    "end": "3539970"
  },
  {
    "text": "vendors oh it was it was a horrible experience I've got a slide but that",
    "start": "3539970",
    "end": "3546210"
  },
  {
    "text": "summarizes this at the end so you'll hopefully get to okay so what about",
    "start": "3546210",
    "end": "3552810"
  },
  {
    "text": "these smart card keys so some of you were very interested in these smart card keys if we went and looked at the primes",
    "start": "3552810",
    "end": "3560160"
  },
  {
    "text": "that we saw when we actually factored these keys this was the most common factor that we saw this does not look",
    "start": "3560160",
    "end": "3567060"
  },
  {
    "text": "like a random number yes this is the first prime after 2 to the 511 plus 2",
    "start": "3567060",
    "end": "3573060"
  },
  {
    "text": "the 510 so they clearly have some other",
    "start": "3573060",
    "end": "3578070"
  },
  {
    "text": "issues the next most common factor is this value which isn't quite the same",
    "start": "3578070",
    "end": "3584130"
  },
  {
    "text": "but you see this is also not quite a random number either it's not quite periodic but it's like pretty pretty close and basically by",
    "start": "3584130",
    "end": "3593670"
  },
  {
    "text": "extrapolating patterns so this is actually it turns out to be a repeated bit pattern but they were swapping sum",
    "start": "3593670",
    "end": "3599280"
  },
  {
    "text": "of two every two words in the representation so by sort of",
    "start": "3599280",
    "end": "3604920"
  },
  {
    "text": "extrapolating patterns of that form incrementing to the next prime we factored eighty more keys and also by",
    "start": "3604920",
    "end": "3612270"
  },
  {
    "text": "using some more fun lattice based math to break things that had some some bit",
    "start": "3612270",
    "end": "3617400"
  },
  {
    "text": "errors there okay it could have been a",
    "start": "3617400",
    "end": "3624390"
  },
  {
    "text": "lot of sort of comments on the internet for like oh my god is this an NSA backdoor it's most likely not course",
    "start": "3624390",
    "end": "3633420"
  },
  {
    "text": "since you know Dan Bernstein pretty well do you have any sense of whether the",
    "start": "3633420",
    "end": "3638850"
  },
  {
    "text": "elliptic curve standard in this standard is has weaknesses that are not found in",
    "start": "3638850",
    "end": "3646920"
  },
  {
    "text": "the Bernstein curve there are no publicly known vulnerabilities that",
    "start": "3646920",
    "end": "3652950"
  },
  {
    "text": "these curves could have so these curves",
    "start": "3652950",
    "end": "3658410"
  },
  {
    "text": "don't have any of the publicly known properties that might make it easier to solve the discrete log problem on them",
    "start": "3658410",
    "end": "3665240"
  },
  {
    "text": "but that's the only answer that we can",
    "start": "3665240",
    "end": "3681600"
  },
  {
    "text": "really give right I mean you can you can quibble about the random number",
    "start": "3681600",
    "end": "3686760"
  },
  {
    "text": "generation process which is part of what dan and Tanya are sort of doing is that the provably at random parameter",
    "start": "3686760",
    "end": "3694770"
  },
  {
    "text": "generation process that they used is not as at all provably at random which is a little bit annoying but we don't know of",
    "start": "3694770",
    "end": "3702540"
  },
  {
    "text": "anything they're probably fine I mean we can use curve to 55.9 if you trust Dan",
    "start": "3702540",
    "end": "3708090"
  },
  {
    "text": "more than the NSA yeah",
    "start": "3708090",
    "end": "3713940"
  },
  {
    "text": "I I mean it's like NSA with whatever gigantic budget that they have and",
    "start": "3713940",
    "end": "3719339"
  },
  {
    "text": "however many hundred thousand employees and Dan look at the NSA s budget of X",
    "start": "3719339",
    "end": "3727020"
  },
  {
    "text": "and a budget of minus X or the other half of the house I think your point is",
    "start": "3727020",
    "end": "3736500"
  },
  {
    "text": "that the NSA will require an exponential number of dollars to keep up with the",
    "start": "3736500",
    "end": "3742530"
  },
  {
    "text": "engine do we need a few scholars well but do you really want to have the",
    "start": "3742530",
    "end": "3749130"
  },
  {
    "text": "security of the entire internet rely on one guy who could be hit by a bus tomorrow I mean can we invent this work",
    "start": "3749130",
    "end": "3757910"
  },
  {
    "text": "but it will require an exponential number of dollars really NSA to compete with that",
    "start": "3757910",
    "end": "3763490"
  },
  {
    "text": "they will require millions and millions of mathematicians to basically counter a",
    "start": "3763490",
    "end": "3771240"
  },
  {
    "text": "few good crypto engineers they don't realize this yet doesn't they're gonna",
    "start": "3771240",
    "end": "3776700"
  },
  {
    "text": "find out ok so how many how many NSA employee is this Dan worth how do we",
    "start": "3776700",
    "end": "3781920"
  },
  {
    "text": "know he's not the best factor that they had dual ec drbg was like not a very",
    "start": "3781920",
    "end": "3788760"
  },
  {
    "text": "good backdoor right people people saw through that one within a few years but the NSA curves we don't have anything on",
    "start": "3788760",
    "end": "3795900"
  },
  {
    "text": "that right or the the NIST curve sir it's more entertaining all right so",
    "start": "3795900",
    "end": "3803900"
  },
  {
    "text": "these smart card keys you guys like smart cards so all right why are these government certified smart cards",
    "start": "3803900",
    "end": "3809430"
  },
  {
    "text": "generating private keys they we know how to generate good random numbers in",
    "start": "3809430",
    "end": "3816359"
  },
  {
    "text": "hardware so the all of the standards so the FIPS 140 standards the Common",
    "start": "3816359",
    "end": "3822359"
  },
  {
    "text": "Criteria whatever they sort of have a list of things best practices that you should do the designers should",
    "start": "3822359",
    "end": "3827550"
  },
  {
    "text": "characterize the entropy there should be some testing of the entropy source at",
    "start": "3827550",
    "end": "3834540"
  },
  {
    "text": "runtime to double-check that it's not outputting all zeroes or repeating of",
    "start": "3834540",
    "end": "3840050"
  },
  {
    "text": "values or whatever and then you should post-process this entropy source by running it through some kind of PR ng",
    "start": "3840050",
    "end": "3847750"
  },
  {
    "text": "hash function something to whiten it right so this is basically like the big picture idea of how you should generate",
    "start": "3847750",
    "end": "3853450"
  },
  {
    "text": "your random numbers anywhere really but also in hardware and these cards that",
    "start": "3853450",
    "end": "3858520"
  },
  {
    "text": "are generating Prime's that look like that are clearly doing none of these things even though they were claimed to",
    "start": "3858520",
    "end": "3864280"
  },
  {
    "text": "be fips-compliant and so we actually never got our hands on one of these cards",
    "start": "3864280",
    "end": "3869980"
  },
  {
    "text": "but our hypothesized failure was that there was actually a hardware failure in",
    "start": "3869980",
    "end": "3875770"
  },
  {
    "text": "the underlying entropy source that would fail in some situations so our",
    "start": "3875770",
    "end": "3881380"
  },
  {
    "text": "hypothesis is that a lot of times these cards are doing some kind of they have some kind of like ring oscillator that",
    "start": "3881380",
    "end": "3887350"
  },
  {
    "text": "should have some kind of chaotic interaction but if it got stuck then it might sort of output these periodic",
    "start": "3887350",
    "end": "3892960"
  },
  {
    "text": "values that we were seeing and so if in some situations it's outside of the proper temperature or it got hit by a",
    "start": "3892960",
    "end": "3899140"
  },
  {
    "text": "hammer or something maybe it would it would get stuck and we would see actually values where it would it would",
    "start": "3899140",
    "end": "3905680"
  },
  {
    "text": "get stuck and then it would get unstuck so that's one problem and then the card",
    "start": "3905680",
    "end": "3911380"
  },
  {
    "text": "software was actually not being operated in Phipps compliance mode and so that",
    "start": "3911380",
    "end": "3916630"
  },
  {
    "text": "meant that there was no testing and no post-processing of the random number generator output pointing out it gets",
    "start": "3916630",
    "end": "3942400"
  },
  {
    "text": "stuck though which is to say some random number generators be not going to there",
    "start": "3942400",
    "end": "3947800"
  },
  {
    "text": "to equilibrium so they don't generate this usually there's a metastable",
    "start": "3947800",
    "end": "3954280"
  },
  {
    "text": "process and these things they servo flip-flop the sampling and they wait for",
    "start": "3954280",
    "end": "3960790"
  },
  {
    "text": "the medicine to fall out and if the system isn't finishing high it is yes",
    "start": "3960790",
    "end": "3969310"
  },
  {
    "text": "those those who don't write our programs randomly the fact that they do behave",
    "start": "3969310",
    "end": "3974530"
  },
  {
    "text": "randomly on their own so we have unintentional randomness",
    "start": "3974530",
    "end": "3981360"
  },
  {
    "text": "which is far too common now you're telling me that intentional you what you",
    "start": "3981360",
    "end": "3988590"
  },
  {
    "text": "want is no randomness when you don't want any randomness and you want perfect randomness when you do want randomness",
    "start": "3988590",
    "end": "3994500"
  },
  {
    "text": "and yes and sadly the the real world is somewhere in between I think there's",
    "start": "3994500",
    "end": "4001250"
  },
  {
    "text": "this you also have to add the operating system cognitive you also want this as",
    "start": "4001250",
    "end": "4007340"
  },
  {
    "text": "an atomic operation mm-hmm yeah we actually one interesting thing with",
    "start": "4007340",
    "end": "4012440"
  },
  {
    "text": "Linux is that we saw a little bit of entropy coming from basically it was not",
    "start": "4012440",
    "end": "4019640"
  },
  {
    "text": "an atomic operation and so different different processes were reading the pool at slightly different times and",
    "start": "4019640",
    "end": "4027040"
  },
  {
    "text": "getting some amount of randomness just from sort of non-deterministic behavior",
    "start": "4027040",
    "end": "4036140"
  },
  {
    "text": "for when when different processes would be reading even when the the the stream",
    "start": "4036140",
    "end": "4043160"
  },
  {
    "text": "that was being output was was continuous ever was deterministic unintentional",
    "start": "4043160",
    "end": "4049880"
  },
  {
    "text": "entropy I think the big message here is that a lot of programmers I mean you want to think about entropy as something",
    "start": "4049880",
    "end": "4056570"
  },
  {
    "text": "you press a button and you get entropy but it turns out that entropy is actually something like an environmental",
    "start": "4056570",
    "end": "4062090"
  },
  {
    "text": "resource that you have to wait for that you're not guaranteed but that's not the model that that all of people all the",
    "start": "4062090",
    "end": "4068990"
  },
  {
    "text": "people writing programs want to to treat it as you want it to just be a function",
    "start": "4068990",
    "end": "4074060"
  },
  {
    "text": "call rather than some kind of blocking resource yeah well I mean we don't want",
    "start": "4074060",
    "end": "4083030"
  },
  {
    "text": "normal people to have to think about cryptography cryptography should be one of those invisible magical things that just makes everything function and the",
    "start": "4083030",
    "end": "4089840"
  },
  {
    "text": "fact that developers are having to think about cryptography is also a serious issue okay so what about PGP we should",
    "start": "4089840",
    "end": "4100339"
  },
  {
    "text": "expect to the developers of PGP they should be paranoid they are using dev random to generate their keys why are we",
    "start": "4100340",
    "end": "4106160"
  },
  {
    "text": "seeing common why are we seeing factorable keys it turns out that this was probably not",
    "start": "4106160",
    "end": "4112100"
  },
  {
    "text": "the PGP developers implementation it was a different plugin that was generating these vulnerable keys both of the keys",
    "start": "4112100",
    "end": "4119420"
  },
  {
    "text": "were more than ten years old they were generated by German speakers German speakers were unhappy to find out that their keys were compromised but they",
    "start": "4119420",
    "end": "4126859"
  },
  {
    "text": "were not currently being used so hopefully it is an implementation error",
    "start": "4126859",
    "end": "4131870"
  },
  {
    "text": "in an implementation that's no longer being used and this is a rare implementation error for Bitcoin there's",
    "start": "4131870",
    "end": "4140330"
  },
  {
    "text": "actually been a number of different incidents there was a Java random number",
    "start": "4140330",
    "end": "4146420"
  },
  {
    "text": "generator vulnerability that was publicized in August 2013 they were not renewing the state of the pool when the",
    "start": "4146420",
    "end": "4152630"
  },
  {
    "text": "process forked and so different different processes can end up with the same pool state and then generate the",
    "start": "4152630",
    "end": "4159799"
  },
  {
    "text": "same nonces we also saw a bunch of test implementations of people who are sort",
    "start": "4159800",
    "end": "4165140"
  },
  {
    "text": "of obviously not putting values or the correct you know they were just putting in all zeros or whatever there is a",
    "start": "4165140",
    "end": "4173029"
  },
  {
    "text": "particular Bitcoin address that has been systematically searching the blockchain for the past several years for repeated",
    "start": "4173030",
    "end": "4180500"
  },
  {
    "text": "nonces and systematically stealing all of the bitcoins from anybody whoever repeats a signature this is this is an",
    "start": "4180500",
    "end": "4194990"
  },
  {
    "text": "old number I have no idea how much they have now but yeah so that this means that math pays not as much as it used to",
    "start": "4194990",
    "end": "4201920"
  },
  {
    "text": "but in case ok so you were asking about",
    "start": "4201920",
    "end": "4209630"
  },
  {
    "text": "the disclosure issues this was a interesting process for me so I",
    "start": "4209630",
    "end": "4216490"
  },
  {
    "text": "personally wrote email disclosures to 61 companies of those 61 companies which",
    "start": "4216490",
    "end": "4224030"
  },
  {
    "text": "are sort of it's like a random sampling of tech companies including all of basically the major names 13 of those",
    "start": "4224030",
    "end": "4229790"
  },
  {
    "text": "companies had some kind of security team contact that I could find on their website the rest of them I had to just",
    "start": "4229790",
    "end": "4236930"
  },
  {
    "text": "guess so you guessed I don't know tech support and what else",
    "start": "4236930",
    "end": "4244199"
  },
  {
    "text": "I did get through to some of them so ultimately I ended up receiving some kind of response from 28 some of those",
    "start": "4244199",
    "end": "4250139"
  },
  {
    "text": "came only after cert got involved I didn't realize that I could just you know go to certain say please contact",
    "start": "4250139",
    "end": "4256110"
  },
  {
    "text": "these companies for me I have too many too contact since then 13 of them have",
    "start": "4256110",
    "end": "4261389"
  },
  {
    "text": "told us that they have fixed the problem five of those published some kind of public security advisory so actually so",
    "start": "4261389",
    "end": "4271559"
  },
  {
    "text": "one of the companies contacted ics-cert the industrial control system cert",
    "start": "4271559",
    "end": "4276920"
  },
  {
    "text": "because they made industrial control systems to report the vulnerability and at that point ics-cert contacted us and",
    "start": "4276920",
    "end": "4283650"
  },
  {
    "text": "asked us to verify this and we said you know we have all these other companies too and so they helpfully helped chase",
    "start": "4283650",
    "end": "4289170"
  },
  {
    "text": "down several of the companies who hadn't responded before and so they were very",
    "start": "4289170",
    "end": "4295320"
  },
  {
    "text": "helpful in this as I said the linux kernel has been patched they were extremely responsive and since the",
    "start": "4295320",
    "end": "4303959"
  },
  {
    "text": "original publication we have seen a decrease in the number of hosts serving factorable",
    "start": "4303959",
    "end": "4310579"
  },
  {
    "text": "after the cert organization",
    "start": "4311389",
    "end": "4318949"
  },
  {
    "text": "that yeah I don't know how many these things to head up or Hannity overlap 61",
    "start": "4324080",
    "end": "4331940"
  },
  {
    "text": "how are there 20 levels so there's okay so there's 61 - 28 who have never",
    "start": "4331940",
    "end": "4341750"
  },
  {
    "text": "responded to us maybe some of them fixed it maybe they haven't so the 28 includes everybody who told us",
    "start": "4341750",
    "end": "4347090"
  },
  {
    "text": "anything ever that was anything that sounded like a human response",
    "start": "4347090",
    "end": "4352570"
  },
  {
    "text": "you",
    "start": "4360090",
    "end": "4362150"
  }
]