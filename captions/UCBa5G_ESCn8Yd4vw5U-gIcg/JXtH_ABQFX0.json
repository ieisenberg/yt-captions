[
  {
    "text": "All right. I propose we get started. Plan for today is to finish up NLI.",
    "start": "5120",
    "end": "10720"
  },
  {
    "text": "I was just talking with the group that was here before, and I think the consensus is that if we finish that early,",
    "start": "10720",
    "end": "15940"
  },
  {
    "text": "I'm gonna give you a glimpse of the topics for next week, um, because they're basically my favorite topics,",
    "start": "15940",
    "end": "21520"
  },
  {
    "text": "and I wanna, like, get people to do projects on them. And I know that we're introducing that content kind of late, um,",
    "start": "21520",
    "end": "27370"
  },
  {
    "text": "in terms of people settling on project topics, but maybe this is my last chance to sneak some things in.",
    "start": "27370",
    "end": "32590"
  },
  {
    "text": "I've got lots of good links to datasets and papers and so forth. That would be about- that'd get us pretty close to the true dream of NLU,",
    "start": "32590",
    "end": "41320"
  },
  {
    "text": "I think, which is like, you know, language use in grounded situations in the real world. Um, and it just comes late in the course because we have to build",
    "start": "41320",
    "end": "49340"
  },
  {
    "text": "up a lot of material to get to the relevant models. Um, but now, certainly by the end of the day today,",
    "start": "49340",
    "end": "55730"
  },
  {
    "text": "you're well-prepared to get your hands dirty with the kinds of things that fall under grounded language understanding.",
    "start": "55730",
    "end": "61295"
  },
  {
    "text": "So I might say a few things about that if there's time. And just by the way, it's gonna get a little bit of a rush next week.",
    "start": "61295",
    "end": "67280"
  },
  {
    "text": "We have just one day for grounded language understanding, and one day for semantic parsing. The saving grace there is that we have a huge amount of material for semantic parsing.",
    "start": "67280",
    "end": "77150"
  },
  {
    "text": "It's a challenging topic, it's very interdisciplinary, you basically have to know a bunch of linguistic semantics and a bunch of machine learning.",
    "start": "77150",
    "end": "84040"
  },
  {
    "text": "Um, but if that sounds exciting to you, then it's a wonderful area to work in, uh, and we have this whole Codebase sippy cup,",
    "start": "84040",
    "end": "91705"
  },
  {
    "text": "and Bill has created lots of notebooks for it. And then we have two supporting screencasts that kind",
    "start": "91705",
    "end": "97310"
  },
  {
    "text": "of get to the essence of the technical ideas, and then a bunch of wonderful papers. So if you're still looking around for a project idea,",
    "start": "97310",
    "end": "105500"
  },
  {
    "text": "and especially if you took semantics with me before, then this is like the- the dream- the marriage of Linguist 130A and this course,",
    "start": "105500",
    "end": "113720"
  },
  {
    "text": "and so I encourage you to check it out. And Bill will give us an introduction to it, but there's no- only so much you can do in an hour.",
    "start": "113720",
    "end": "119770"
  },
  {
    "text": "So it will really pay to do that kind of self-study. Um, just while I'm talking about the schedule,",
    "start": "119770",
    "end": "125719"
  },
  {
    "text": "so you're- you're doing the last homework and the last bake-off. Uh, and then after that,",
    "start": "125720",
    "end": "131450"
  },
  {
    "text": "we kind of settle into a rhythm of project-oriented assignments. You do a lit review, and at that point,",
    "start": "131450",
    "end": "136580"
  },
  {
    "text": "you'll be paired with a mentor from the project team who will be with you through the whole process, so like somebody you can count on for",
    "start": "136580",
    "end": "142550"
  },
  {
    "text": "advice and who will be giving you a lot of feedback. So we do the lit review first, and then we have this thing called an experimental protocol.",
    "start": "142550",
    "end": "148625"
  },
  {
    "text": "And I'll tell you much more about what that's supposed to contain closer to the time, but kind of hovering in the background here is that we're gonna push you to",
    "start": "148625",
    "end": "156650"
  },
  {
    "text": "make sure that your project has some- some kind of quantitative evaluation associated with it. Not because we think that that has to be the way all work in NLU works,",
    "start": "156650",
    "end": "165520"
  },
  {
    "text": "but rather just because we think it's healthy to kind of push you in that direction. And that's why you'll find that when doi- when you interact",
    "start": "165520",
    "end": "171500"
  },
  {
    "text": "with people from the teaching team about your project, they wanna know what data you're gonna use. Because I think that we all on the teaching team",
    "start": "171500",
    "end": "177770"
  },
  {
    "text": "think if we can figure out what data you're gonna use, then we can kind of figure out what your metrics will be,",
    "start": "177770",
    "end": "182860"
  },
  {
    "text": "and get you to the point of a quantitative evaluation. So have that in mind as well as you do project planning and know",
    "start": "182860",
    "end": "189230"
  },
  {
    "text": "that the project assignments are gonna be pushing you in that direction. And then after that, it's just a short YouTube video,",
    "start": "189230",
    "end": "195155"
  },
  {
    "text": "those are typically fun, uh, and then the final paper itself. And, uh, correspondingly, most of the material that we do in class in",
    "start": "195155",
    "end": "203780"
  },
  {
    "text": "the second half of the course is kind of oriented toward you doing your project.",
    "start": "203780",
    "end": "208800"
  },
  {
    "text": "So it's kind of, it gets a little bit meta. We talk about methods and metrics, and presenting your work, and so forth.",
    "start": "208800",
    "end": "214790"
  },
  {
    "text": "So it should be relevant to you no matter what kind of project you're working on, that's the rationale.",
    "start": "214790",
    "end": "220680"
  },
  {
    "text": "There is one thing that I wanted to just clarify about Bake-off 4, just so that you know what the points of freedom are.",
    "start": "221500",
    "end": "228680"
  },
  {
    "text": "So remember Homework 4 and Bake-off 4 are all about word-level entailment. It's a kind of small version of the NLI problem,",
    "start": "228680",
    "end": "235985"
  },
  {
    "text": "and I've supplied you with datasets that you can work with. And anything goes for this in terms of you bringing in outside vectors,",
    "start": "235985",
    "end": "245650"
  },
  {
    "text": "for example, you could do it with ELMo or BERT, um, or vectors you build yourself,",
    "start": "245650",
    "end": "250950"
  },
  {
    "text": "GloVe, right, you name it. You can go onto the web and in fact the- the task is pushing you in the direction of having really rich inputs to these models,",
    "start": "250950",
    "end": "258815"
  },
  {
    "text": "otherwise, you're just not gonna do very well. So from the perspective of modeling and outside data that will initialize your- your vectors,",
    "start": "258815",
    "end": "266495"
  },
  {
    "text": "we wanna be, you know, casting the net wide. There is one restriction that I feel like I didn't emphasize enough last time,",
    "start": "266495",
    "end": "273320"
  },
  {
    "text": "though, which is that when you get down to it, when you develop your original system, and when you enter the bake-off,",
    "start": "273320",
    "end": "279380"
  },
  {
    "text": "you have to be working only with the word disjoint problem, right? It says that here: Keep in mind that for the bake-off evaluation,",
    "start": "279380",
    "end": "287090"
  },
  {
    "text": "the edge disjoint portions of the data are off limits. You can train on any combination of word disjoint train in dev,",
    "start": "287090",
    "end": "294710"
  },
  {
    "text": "you just can't look at that edge-disjoint part, and the reason for that is that this problem, your performance just goes way up if you're allowed to look at edge-disjoint,",
    "start": "294710",
    "end": "302795"
  },
  {
    "text": "and the reason for that is that that means that in training, you get a lot of words that you see at test time,",
    "start": "302795",
    "end": "308690"
  },
  {
    "text": "which is kind of contrary to the direction that I'm trying to push us, which is, these are all new words at test time.",
    "start": "308690",
    "end": "315065"
  },
  {
    "text": "And so what we're doing is kind of stress-testing your system on its ability to generalize from what it knows about its training words into a new part of the vocabulary.",
    "start": "315065",
    "end": "323945"
  },
  {
    "text": "Um, so yeah, this is really important, and you will definitely not be allowed to win the",
    "start": "323945",
    "end": "329420"
  },
  {
    "text": "bake-off if we see that you've brought in the edge-disjoint stuff. [LAUGHTER]",
    "start": "329420",
    "end": "342048"
  },
  {
    "text": "[inaudible] . That'll be okay. You know, I'm actually, so I'm assuming that whatever embedding space you have when it",
    "start": "342049",
    "end": "348230"
  },
  {
    "text": "gets to test-time those words are in that embedding space, right? Because that's kind of the point,",
    "start": "348230",
    "end": "353330"
  },
  {
    "text": "Because it's like your embedding space has interesting structure, and then your model helps you generalize into the entailment problem,",
    "start": "353330",
    "end": "361160"
  },
  {
    "text": "so it'll be- your system is gonna do really poorly, in fact, if none of the test words are in your embedding.",
    "start": "361160",
    "end": "366440"
  },
  {
    "text": "Um, I've tried to disguise where I got the entailment data, and the spirit of that is just that,",
    "start": "366440",
    "end": "372485"
  },
  {
    "text": "yo- you know, you guys can search widely and stuff as long as you don't make a deliberate effort to figure out where my data come from.",
    "start": "372485",
    "end": "378770"
  },
  {
    "text": "That would be contrary to the spirit of all of this. Um, but definitely go out and see, you know,",
    "start": "378770",
    "end": "384229"
  },
  {
    "text": "whether there are new word embeddings that people have released that are especially good for this task.",
    "start": "384230",
    "end": "389430"
  },
  {
    "text": "Okay. Any questions about that before we dive back into the content?",
    "start": "390020",
    "end": "395819"
  },
  {
    "text": "Okay. Just as a kind of recap, so last time I introduced the problem of NLI,",
    "start": "397270",
    "end": "402910"
  },
  {
    "text": "and I think the summary of that discussion is kind of like, NLI at this point is a common sense reasoning task of some kind.",
    "start": "402910",
    "end": "410580"
  },
  {
    "text": "Um, you know, it's kind of hard to define exactly what the criteria are for entailment and contradiction and neutral.",
    "start": "411260",
    "end": "417910"
  },
  {
    "text": "Uh, but we have these naturalistic datasets that reflect some aspects of how humans actually reason about language,",
    "start": "417910",
    "end": "424070"
  },
  {
    "text": "and that's what we hope our systems do as well, because the whole idea of NLI is that it's kind of keyed into fundamental information about how we use language",
    "start": "424070",
    "end": "431465"
  },
  {
    "text": "to build arguments and to reason and to find out new information, and if you think in an extended sense,",
    "start": "431465",
    "end": "437120"
  },
  {
    "text": "even how to answer a question and so forth. Um, I introduced SNLI and MultiNLI, which are exciting,",
    "start": "437120",
    "end": "444899"
  },
  {
    "text": "large datasets, um, that can- that will test disparate- different aspects of your system.",
    "start": "444899",
    "end": "450830"
  },
  {
    "text": "So SNLI is just image captions, and MultiNLI is drawn from a bunch of different genres.",
    "start": "450830",
    "end": "456800"
  },
  {
    "text": "And a nice twist about MultiNLI is that, in addition to the diversity of the training data, there are two dev sets,",
    "start": "456800",
    "end": "463785"
  },
  {
    "text": "one which is matched, which means that you evaluate on the same genres that you trained on, and one mismatched,",
    "start": "463785",
    "end": "469608"
  },
  {
    "text": "which is kind of seeing- it gives you a chance to see how well your system can generalize out of its comfort zone, so to speak.",
    "start": "469609",
    "end": "476705"
  },
  {
    "text": "Um, and another exciting thing about MultiNLI is that the team released it with a bunch of annotations that you can use for kind of error analysis,",
    "start": "476705",
    "end": "485960"
  },
  {
    "text": "and I'm gonna give you a bunch of illustrations of that later, I think it's a nice opportunity. You know, writing a good error analysis section for your paper",
    "start": "485960",
    "end": "493520"
  },
  {
    "text": "is often very difficult and requires a lot of creativity, and I feel like they've given you this gift of the structure",
    "start": "493520",
    "end": "499940"
  },
  {
    "text": "for a very rich error analysis by providing these annotations, so I'll show you a bit about how that works.",
    "start": "499940",
    "end": "506315"
  },
  {
    "text": "And then we got as far as talking about hand-built features, um, which are kind of, like,",
    "start": "506315",
    "end": "511350"
  },
  {
    "text": "word overlap, word cross-product. And what you're seeing here is a bunch of stuff that you can derive from WordNet.",
    "start": "511350",
    "end": "517880"
  },
  {
    "text": "The one- and then here, a bunch of other ideas. I added one slide here, which is, um, we have this narrative of, like,",
    "start": "517880",
    "end": "525890"
  },
  {
    "text": "talking about hand-built features and linear models, and then talking about deep learning models, and you could fall into a trap of thinking these ideas are in direct competition.",
    "start": "525890",
    "end": "535135"
  },
  {
    "text": "Um, I think that's not so, I think it could be very interesting, and maybe some of you have done this in your work so far,",
    "start": "535135",
    "end": "540955"
  },
  {
    "text": "to think about combining, like, a word embedding, something short and dense, with a",
    "start": "540955",
    "end": "547144"
  },
  {
    "text": "feature representation that comes from hand-built features, and that will have the characteristic that we- it will have",
    "start": "547145",
    "end": "552460"
  },
  {
    "text": "very high dimensionality and be very sparse. And that really contrasts with what you would get from BERT or ELMo or GloVe or whatever,",
    "start": "552460",
    "end": "559860"
  },
  {
    "text": "which tend to be very sh- short, low dimensional and very dense, I've kind of represented that here,",
    "start": "559860",
    "end": "566670"
  },
  {
    "text": "short and dense, long and sparse. And the question arises then, like, what's an effective way to combine these two representations in a unified model, right?",
    "start": "566670",
    "end": "575240"
  },
  {
    "text": "Because it's not like I have to choose just long and sparse or short and dense, maybe I can have the advantages of both.",
    "start": "575240",
    "end": "581545"
  },
  {
    "text": "And the naive thing to do would be just- to just concatenate these two representations,",
    "start": "581545",
    "end": "586639"
  },
  {
    "text": "um, so that if, like, the green has 20,000 dimensions, which is pretty realistic,",
    "start": "586640",
    "end": "592369"
  },
  {
    "text": "and the short and dense one has 50, then you have 20,050 dimensions, but even that way of posing it suggests that there might be an issue here, right?",
    "start": "592369",
    "end": "601130"
  },
  {
    "text": "Which is that there's a kind of wild imbalance, and it's two kinds of imbalance. On the one hand, you have all this sparsity dominating the representation.",
    "start": "601130",
    "end": "608795"
  },
  {
    "text": "On the other hand, it's kind of in two phases, like, with very different kinds of information.",
    "start": "608795",
    "end": "614165"
  },
  {
    "text": "So I think it might not be effective to simply concatenate the two representations.",
    "start": "614165",
    "end": "620060"
  },
  {
    "text": "One thing that I've found effective in various work that I've done recently is to do",
    "start": "620060",
    "end": "625670"
  },
  {
    "text": "a little bit of preprocessing on the long and sparse side to just make it short and dense.",
    "start": "625670",
    "end": "630900"
  },
  {
    "text": "Uh, and there are kind of two classes of approach you could take there. So you could just apply something that is",
    "start": "630900",
    "end": "636425"
  },
  {
    "text": "outside of the model you're developing, like, you know, apply LSA or PSA or something like that,",
    "start": "636425",
    "end": "642380"
  },
  {
    "text": "to shrink it down into a dense representation. Uh, that's one step. That's what I've called this, Model External Transformation.",
    "start": "642380",
    "end": "649385"
  },
  {
    "text": "Another approach would be to actually have your model learn some weights that perform that transformation,",
    "start": "649385",
    "end": "655010"
  },
  {
    "text": "that embed this really long thing into a smaller space. That will reintroduce some difficulties of optimization,",
    "start": "655010",
    "end": "661339"
  },
  {
    "text": "but I think if you give it separate parameters, then it will become kind of manageable. Uh, and then at that point,",
    "start": "661340",
    "end": "667680"
  },
  {
    "text": "you would concatenate short and dense and short and dense here, and you'd have, kind of two comparable objects and then move forth.",
    "start": "667680",
    "end": "673670"
  },
  {
    "text": "And I- I think that there's good evidence that that representation would have a lot of the advantages of both sides of the incoming information.",
    "start": "673670",
    "end": "683785"
  },
  {
    "text": "Yeah. [inaudible] combine the two?",
    "start": "683785",
    "end": "688170"
  },
  {
    "text": "I don't know about that. Attention would normally be defined over entire representations,",
    "start": "689150",
    "end": "695410"
  },
  {
    "text": "not over the individual dimensions, so you'd have to think about it somewhat create- creatively. Does that ring any bells for you over on the teaching team?",
    "start": "695410",
    "end": "703200"
  },
  {
    "text": "[inaudible] of success.",
    "start": "703200",
    "end": "715880"
  },
  {
    "text": "Okay, and we'll sa- If you perform this transformation, then this thing, once concatenated,",
    "start": "716340",
    "end": "722428"
  },
  {
    "text": "if you have subsequent weights up here, then you are giving your model a chance to learn lots of interactions between those two sides,",
    "start": "722429",
    "end": "728834"
  },
  {
    "text": "and I think that's where this becomes potentially so powerful. Okay. And then I introduced nli.experiment, um,",
    "start": "728835",
    "end": "737520"
  },
  {
    "text": "which is not required for the homework but if you want to do a project in NLI, I think this could give you a real head-start,",
    "start": "737520",
    "end": "743550"
  },
  {
    "text": "and it kinda makes all these ideas concrete. And I introduced these two ways of doing hyperparameter selection in the context of",
    "start": "743550",
    "end": "749970"
  },
  {
    "text": "a really large dataset where you can't afford to sit around through 50 iterations because,",
    "start": "749970",
    "end": "755070"
  },
  {
    "text": "you know, that could consume all your time or resources. And then toward the end here,",
    "start": "755070",
    "end": "760680"
  },
  {
    "text": "I introduced this idea of a hypothesis only baseline. Um, and the relevance of that is just that,",
    "start": "760680",
    "end": "767024"
  },
  {
    "text": "this can be a surprisingly good baseline for NLI. Uh, and I gave you a rationale that was a kind of linguistic scientific rationale for",
    "start": "767025",
    "end": "774029"
  },
  {
    "text": "why this works related to the fact that there are some intrinsic biases, um, when it comes to entailment problems about",
    "start": "774030",
    "end": "781649"
  },
  {
    "text": "what's likely to appear on the left or the right, uh, and that wasn't my kind of justification",
    "start": "781650",
    "end": "786930"
  },
  {
    "text": "for why hypothesis only might always be pretty strong. And you can see here at the bottom that it is indeed quite a strong baseline, 65%,",
    "start": "786930",
    "end": "795790"
  },
  {
    "text": "uh, and compare it to random 33%, you know, it looks like you really want to think about",
    "start": "796370",
    "end": "802529"
  },
  {
    "text": "the strength of the hypothesis only baseline. And then asked, what about premise only experiments?",
    "start": "802530",
    "end": "810090"
  },
  {
    "text": "And I had not thought enough about that. And so in the moment I think I said something like, well,",
    "start": "810090",
    "end": "816540"
  },
  {
    "text": "based on what I said they ought to be pretty good as well. Because the same kind of biases that are telling you,",
    "start": "816540",
    "end": "823380"
  },
  {
    "text": "for example, that if I give you a general word it's likely to be a hypothesis. Conversely, if I give you a very specific word it's likely to be a premise in an entailment pair,",
    "start": "823380",
    "end": "832875"
  },
  {
    "text": "and also very specific things are likely to be participating in contradictions in the sense of this problem",
    "start": "832875",
    "end": "839639"
  },
  {
    "text": "because they're likely to exclude other event descriptions. And all of that leads and push me in this direction.",
    "start": "839640",
    "end": "846240"
  },
  {
    "text": "All of that leads to think that a premise only baseline ought to be pretty good. So I ran this experiment on SNLI and I was like aghast,",
    "start": "846240",
    "end": "855630"
  },
  {
    "text": "so 33.3 which is the very definition of random for this problem.",
    "start": "855630",
    "end": "861245"
  },
  {
    "text": "And at first I thought there must be some kind of bug in the code or something because there's just no way it could be this random.",
    "start": "861245",
    "end": "867695"
  },
  {
    "text": "And then, then I and I couldn't find any bugs until I started to do some real soul-searching, like did I give you guys a misleading assessment of this problem?",
    "start": "867695",
    "end": "876060"
  },
  {
    "text": "Um, and so I was in a kind of a bad state for awhile I guess. And then I figured it out,",
    "start": "876060",
    "end": "882269"
  },
  {
    "text": "does anybody actually see already what I was missing in running this on SNLI,",
    "start": "882270",
    "end": "887414"
  },
  {
    "text": "it's a subtle fact. It took me awhile to realize it. [inaudible].",
    "start": "887414",
    "end": "901380"
  },
  {
    "text": "[inaudible] That's true and I am going to bring in the local task but I don't think that's the answer. Why is it random for SNLI?",
    "start": "901380",
    "end": "908740"
  },
  {
    "text": "It's because of the way the dataset was constructed. So every premise was given to- to crowd workers and",
    "start": "909740",
    "end": "917790"
  },
  {
    "text": "exactly one of entailment contradiction and neutral was constructed on the basis of that premise.",
    "start": "917790",
    "end": "922904"
  },
  {
    "text": "So those constructed sentences differ wildly of course and they do contain biasing information about the label.",
    "start": "922905",
    "end": "928470"
  },
  {
    "text": "But if I give you only the premise, this was like what the crowd workers got before they started their work.",
    "start": "928470",
    "end": "933615"
  },
  {
    "text": "And so what you see is exactly what you get from the data collection which is perfect randomness,",
    "start": "933615",
    "end": "938670"
  },
  {
    "text": "because all the system has is this unbiased information. So phew, and then I did just to reassure myself check what the- what it is for",
    "start": "938670",
    "end": "947670"
  },
  {
    "text": "the word entailment model because your homework asks you to do hypothesis only and that's about 0.5.",
    "start": "947670",
    "end": "953100"
  },
  {
    "text": "Premise only is about 0.47. So those are pretty strong baselines. Again, it's the same lesson.",
    "start": "953100",
    "end": "959325"
  },
  {
    "text": "But here, I think my- my insights are at least consistent with those results.",
    "start": "959325",
    "end": "965190"
  },
  {
    "text": "So all is well with the world. Like I said, it's the bottom line here [LAUGHTER] as far as I know.",
    "start": "965190",
    "end": "971654"
  },
  {
    "text": "Questions about that or additional concerns? It was- it was because kind of by construction in any of the premises could have",
    "start": "971655",
    "end": "981540"
  },
  {
    "text": "led to any kind of results like you could have constructed something that was entailed or a contradiction or neutral.",
    "start": "981540",
    "end": "988465"
  },
  {
    "text": "In fact, even more by design. It's like, uh, literally the crowd worker was given the premise and constructed three sentences;",
    "start": "988465",
    "end": "997250"
  },
  {
    "text": "one entailment, one contradiction, one neutral. [LAUGHTER] So it's not just by chance,",
    "start": "997250",
    "end": "1004430"
  },
  {
    "text": "this was really by design and I should have known this. Um, I did eventually oh, phew.",
    "start": "1004430",
    "end": "1010710"
  },
  {
    "text": "Okay. So that's a kind of recap with a little bit of new information. And then the, the final things I wanted to do wa- was move into the neural realm,",
    "start": "1011200",
    "end": "1018920"
  },
  {
    "text": "because I think there's exciting models that are kind of specific to NLI, um, that we can discuss of it.",
    "start": "1018920",
    "end": "1024500"
  },
  {
    "text": "Yeah. Just, just a quick question previously. So what about the logistic regression model would",
    "start": "1024500",
    "end": "1031505"
  },
  {
    "text": "differentiate it from this model and let it have a higher baseline than randomness?",
    "start": "1031505",
    "end": "1036980"
  },
  {
    "text": "Oh, well, I just picked logistic regression for the, the experiment down here just to have",
    "start": "1036980",
    "end": "1042949"
  },
  {
    "text": "some model to implement premise and hypothesis only baselines. And the observation is just that both of them have a lot",
    "start": "1042950",
    "end": "1049070"
  },
  {
    "text": "of information that makes them much better than random. It's a different dataset. It's not- it's not a model. It's the dataset.",
    "start": "1049070",
    "end": "1055940"
  },
  {
    "text": "Oh, it's a different dataset. Okay. Yeah, because, so this one was constructed to have no bias when it comes to the premise but the word entailment one was not.",
    "start": "1055940",
    "end": "1064445"
  },
  {
    "text": "It's just a bunch of words drawn from some vocabulary.",
    "start": "1064445",
    "end": "1068340"
  },
  {
    "text": "Okay. So there are kinda two classes of models here that and th-this is a by-product of us having a premise and a hypothesis.",
    "start": "1071500",
    "end": "1079805"
  },
  {
    "text": "The first-class or what I'm going to call sentence encoding models, and in these models you get",
    "start": "1079805",
    "end": "1085055"
  },
  {
    "text": "a separate summary representation of the premise and the hypothesis and then you do something with it.",
    "start": "1085055",
    "end": "1090470"
  },
  {
    "text": "Um, I think this is the kind of model that you're pushed toward if you have in mind that Ido Dagan",
    "start": "1090470",
    "end": "1095840"
  },
  {
    "text": "dream that you're learning representations from NLI data that are going to transfer to lots of other tasks,",
    "start": "1095840",
    "end": "1101360"
  },
  {
    "text": "because for many other tasks, you need an individual sentence representation. Uh, and this offers exactly that.",
    "start": "1101360",
    "end": "1108485"
  },
  {
    "text": "And I've started here with a natural baseline for this kind of model, which is just that kind of sum of",
    "start": "1108485",
    "end": "1115070"
  },
  {
    "text": "word vectors approach that you've explored in various places before. So just to summarize this, I've got every dog danced as my premise,",
    "start": "1115070",
    "end": "1122450"
  },
  {
    "text": "every poodle moved as the hypothesis. I do an embedding lookup to get this layer, right?",
    "start": "1122450",
    "end": "1128299"
  },
  {
    "text": "That would come from some pretrained space presumably. And then to get a fixed dimensional representation for each side here,",
    "start": "1128300",
    "end": "1135545"
  },
  {
    "text": "because the word- the number of words could differ, you just do something that's a kind of hard summary of all those vectors,",
    "start": "1135545",
    "end": "1143000"
  },
  {
    "text": "like the sum, or the average, or the difference, or whatever, right, but sum operation that's gonna take you from",
    "start": "1143000",
    "end": "1149419"
  },
  {
    "text": "this collection of vectors into a single fixed dimensional one, and that would give you xp and xh.",
    "start": "1149420",
    "end": "1155990"
  },
  {
    "text": "And then after that, again, this is familiar, you might just concatenate them or do something else with",
    "start": "1155990",
    "end": "1161779"
  },
  {
    "text": "them to get to the input to your classifier. And then from there, this could be any classifier you want.",
    "start": "1161780",
    "end": "1168350"
  },
  {
    "text": "So a simple linear one or a whole deep learning model, whatever you choose. And this is a baseline in the sense that,",
    "start": "1168350",
    "end": "1176045"
  },
  {
    "text": "this is a pretty primitive way to combine all those words into a fixed dimensional representation,",
    "start": "1176045",
    "end": "1181414"
  },
  {
    "text": "um, but actually these models turn out often to be pretty good. A lot of information from the words ends up encoded in those sums that",
    "start": "1181415",
    "end": "1189860"
  },
  {
    "text": "you get for the premise and the hypothesis. Make sense? And here you can see that like, you know,",
    "start": "1189860",
    "end": "1197930"
  },
  {
    "text": "one simple approach you could take to the bake-off would be, you know, I just have a one word premise and a one-word hypothesis so there's nothing to sum or average.",
    "start": "1197930",
    "end": "1205415"
  },
  {
    "text": "I get xp and xh directly, concatenate them, and then fit a model.",
    "start": "1205415",
    "end": "1210840"
  },
  {
    "text": "Make sense? Questions about it?",
    "start": "1211420",
    "end": "1214650"
  },
  {
    "text": "Here's some code for doing that, um, and it's familiar code in the sense that like go- glove_leaves_phi,",
    "start": "1216910",
    "end": "1224330"
  },
  {
    "text": "glove_leaves_phi, some phi. These are functions that you've actually worked with before.",
    "start": "1224330",
    "end": "1229505"
  },
  {
    "text": "And the only twist here is just that as you process examples, you need to process two parts, the premise and the hypothesis,",
    "start": "1229505",
    "end": "1235850"
  },
  {
    "text": "whereas before when you've done this, you are processing like just a Stanford Sentiment Treebank Representation.",
    "start": "1235850",
    "end": "1241850"
  },
  {
    "text": "But everything else is the same. Um, and it does okay. Uh, on SNLI here training- trained dev 51.6%,",
    "start": "1241850",
    "end": "1252560"
  },
  {
    "text": "so it's actually below the hypothesis only baseline which might make this a kind of nonstarter,",
    "start": "1252560",
    "end": "1258020"
  },
  {
    "text": "but it could still give you intuitively some information about like, uh, a model that you build on top of this,",
    "start": "1258020",
    "end": "1264790"
  },
  {
    "text": "how much you're adding if you do something more sophisticated than the sum or the average the way this model does.",
    "start": "1264790",
    "end": "1271880"
  },
  {
    "text": "Here's what I take to be the rationale. I kind of alluded to this before. So first, encoding the premise and hypothesis separately",
    "start": "1275180",
    "end": "1283485"
  },
  {
    "text": "might give the model a chance to find rich abstract relationships between them. You might think that that's a kind of very human way of doing this.",
    "start": "1283485",
    "end": "1290400"
  },
  {
    "text": "Like I have an understanding of the premise, an understanding of the hypothesis, and then there's a subsequent step of figuring out what their relationship is,",
    "start": "1290400",
    "end": "1298110"
  },
  {
    "text": "and that's more or less directly encoded in this class of model. Um, and in addition,",
    "start": "1298110",
    "end": "1303360"
  },
  {
    "text": "this is the Ido Dagan dream. Sentence-level encoding could facilitate transfer to other tasks. So yeah.",
    "start": "1303360",
    "end": "1309090"
  },
  {
    "text": "And so if you wanted to do like the- the GLUE benchmark, for example, that it's really natural to choose a sentence-encoding model,",
    "start": "1309090",
    "end": "1316350"
  },
  {
    "text": "so that you could use the premise or hypothesis in one of the sentiment tasks or in one of the grammaticality judgment tasks and stuff.",
    "start": "1316350",
    "end": "1324490"
  },
  {
    "text": "Here's a model that's received a lot of attention in the literature. That is a kind of step up in complexity from",
    "start": "1327650",
    "end": "1334200"
  },
  {
    "text": "that simple averaging or summing of vectors, and this is where I kind of have two RNNs.",
    "start": "1334200",
    "end": "1340155"
  },
  {
    "text": "So one for the premise, and one for the hypothesis. So I've used the same example, every dog danced, every poodle moved.",
    "start": "1340155",
    "end": "1347144"
  },
  {
    "text": "I looked them up in what I presumed is a single embedding space, although you could have different embedding spaces for premise and hypothesis if you wanted to,",
    "start": "1347145",
    "end": "1355680"
  },
  {
    "text": "you know, on the assumption that word sentences are different depending on where they appear.",
    "start": "1355680",
    "end": "1360705"
  },
  {
    "text": "And then what I am assuming here is that you would have different parameters for this recurrent neural network.",
    "start": "1360705",
    "end": "1366015"
  },
  {
    "text": "So I put that in green and in purple here just to signal that at that level you might want to learn something very different",
    "start": "1366015",
    "end": "1372570"
  },
  {
    "text": "depending on what the environment for the content is. But that's not forced either.",
    "start": "1372570",
    "end": "1378930"
  },
  {
    "text": "You could have tied parameters. It could be a single RNN. I think the point here is that the way this model subsequently works is that I get",
    "start": "1378930",
    "end": "1385380"
  },
  {
    "text": "this final representation h_3 and this one over here h_P, and those get combined somehow.",
    "start": "1385380",
    "end": "1392775"
  },
  {
    "text": "Maybe concatenation, that's a likely choice, and those get fed into the classifier.",
    "start": "1392775",
    "end": "1398535"
  },
  {
    "text": "And so what you're really depending on is that like the final state in this RNN, is a good summary representation of that example,",
    "start": "1398535",
    "end": "1405900"
  },
  {
    "text": "and similarly for the hypothesis. And then they get concatenated, and you make a classification decision.",
    "start": "1405900",
    "end": "1412185"
  },
  {
    "text": "So from the top here, once you get to combo, this is exactly like that first baseline that I showed you.",
    "start": "1412185",
    "end": "1417750"
  },
  {
    "text": "You should really think of this as like instead of having something primitive like sum or average to combine my word vectors,",
    "start": "1417750",
    "end": "1424245"
  },
  {
    "text": "I have this really complicated function, an RNN, and it has parameters that I learn as part of the task.",
    "start": "1424245",
    "end": "1430710"
  },
  {
    "text": "Instead of imposing this ideal from on high, that sum is the right choice so that mean is the right choice.",
    "start": "1430710",
    "end": "1437205"
  },
  {
    "text": "For all you know, your network is going to discover that the sum was exactly the right function to learn.",
    "start": "1437205",
    "end": "1442575"
  },
  {
    "text": "It's unlikely but conceptually, I think it's useful to think about that possibility.",
    "start": "1442575",
    "end": "1448210"
  },
  {
    "text": "And of course, this has many variants. So like even our code base will let you explore a variant,",
    "start": "1449450",
    "end": "1455400"
  },
  {
    "text": "where this is a bidirectional RNN. And in that case, you might be using a summary representation derived",
    "start": "1455400",
    "end": "1460890"
  },
  {
    "text": "like sort of at the h_1 point combined with the one from h_3. Those might get concatenated,",
    "start": "1460890",
    "end": "1466575"
  },
  {
    "text": "and that's your representation of the premise and same for the hypothesis. But you would feed all of that into this combo func here and fit",
    "start": "1466575",
    "end": "1474780"
  },
  {
    "text": "a classifier. Make sense?",
    "start": "1474780",
    "end": "1481065"
  },
  {
    "text": "Questions? It would be",
    "start": "1481065",
    "end": "1489059"
  },
  {
    "text": "wonderful to see you guys exploring different variants of these. I've only provided one.",
    "start": "1489060",
    "end": "1495585"
  },
  {
    "text": "Um, and here's a kind of strategy for- actually, I did implement this full one in the notebook.",
    "start": "1495585",
    "end": "1501390"
  },
  {
    "text": "You can see that linked up here. But I thought for here, instead of just looking at the code, which you can do on your own,",
    "start": "1501390",
    "end": "1506670"
  },
  {
    "text": "it would be more useful to talk about the conceptual strategy that I took for implementing this.",
    "start": "1506670",
    "end": "1512370"
  },
  {
    "text": "So sentencing-encoding RNN. How would I implement this model here using PyTorch?",
    "start": "1512370",
    "end": "1518355"
  },
  {
    "text": "So here's the way I thought about it. First, it's- it's nice and clean,",
    "start": "1518355",
    "end": "1523470"
  },
  {
    "text": "gives you good code if you define a dataset class. The code that's in the repository by and large for these models,",
    "start": "1523470",
    "end": "1532485"
  },
  {
    "text": "it deals with just a single example. So a single sequence of words, a single length, and a single label.",
    "start": "1532485",
    "end": "1539534"
  },
  {
    "text": "That's like what you would do if you just use the RNN class. It would force you into that mold of having a single list. We need two.",
    "start": "1539535",
    "end": "1546750"
  },
  {
    "text": "So for the dataset, you could subclass the existing one and just have it yield batches of objects that are pairs,",
    "start": "1546750",
    "end": "1553940"
  },
  {
    "text": "like every dog danced as tokens, every poodle moved as tokens, their individual lengths and then finally the label.",
    "start": "1553940",
    "end": "1560815"
  },
  {
    "text": "So that's kind of like bookkeeping, and that's just imposed on you by the structure of the model, that your examples need to look like that.",
    "start": "1560815",
    "end": "1567825"
  },
  {
    "text": "Then for the classifier model itself, the subclass of NN module in PyTorch.",
    "start": "1567825",
    "end": "1574679"
  },
  {
    "text": "Um, you need it to conceptually be a premise RNN and a hypothesis RNN.",
    "start": "1574680",
    "end": "1581160"
  },
  {
    "text": "So what you do is implement its forward method to use those two RNNs, and they get, you know,",
    "start": "1581160",
    "end": "1588179"
  },
  {
    "text": "the premise and hypothesis get processed in exactly the same way as the current RNN code is processing regular examples.",
    "start": "1588180",
    "end": "1595260"
  },
  {
    "text": "And it gives you the two final state representations. And then you just need to by hand as part of",
    "start": "1595260",
    "end": "1602100"
  },
  {
    "text": "the forward method concatenate them and return them, and those will get fed into the classifier.",
    "start": "1602100",
    "end": "1608895"
  },
  {
    "text": "And then finally, the- the way the code is written, you don't really need to do anything to the, uh,",
    "start": "1608895",
    "end": "1614595"
  },
  {
    "text": "base class for RNNs when you define this- this special one.",
    "start": "1614595",
    "end": "1619815"
  },
  {
    "text": "Uh, it just needs a slightly different predict problem method, and the reason it needs a different predict method is that it",
    "start": "1619815",
    "end": "1627060"
  },
  {
    "text": "needs to deal with examples like this, right? That's- that's kind of just back to the fact that your data are a certain way.",
    "start": "1627060",
    "end": "1634125"
  },
  {
    "text": "Uh, but everything else about the logic of optimizing the model is the same. Really the changes are localized to datal- data handling and",
    "start": "1634125",
    "end": "1643169"
  },
  {
    "text": "to the structure of this core like the- what you think of as the computation graph.",
    "start": "1643170",
    "end": "1648880"
  },
  {
    "text": "And I do love PyTorch because it makes all this so easy and with- actually,",
    "start": "1649130",
    "end": "1654270"
  },
  {
    "text": "if you look at the notebook, you'll see that in relatively little code, you get one of these sentence-encoding models. And then because you're inheriting from a simpler class,",
    "start": "1654270",
    "end": "1662055"
  },
  {
    "text": "all the options like whether it's bidirectional, and what the hidden activation function is,",
    "start": "1662055",
    "end": "1667080"
  },
  {
    "text": "and the dimensionalities and so forth, that's kind of all just taken care of.",
    "start": "1667080",
    "end": "1670899"
  },
  {
    "text": "Make sense? Now I encourage you to- to look at the code, and you'll see.",
    "start": "1673160",
    "end": "1678285"
  },
  {
    "text": "You know, it's like 50 lines or something. But most of it is just bookkeeping.",
    "start": "1678285",
    "end": "1683650"
  },
  {
    "text": "Final entrant into this class of sentence-encoding models would be,",
    "start": "1685520",
    "end": "1691380"
  },
  {
    "text": "again just a small variant of the one that we just saw. Instead of having to RNNs, you have two TreeRNNs, right?",
    "start": "1691380",
    "end": "1698205"
  },
  {
    "text": "Recursive tre- you know, tree structured neural networks. Um, you know and so that if you look at just the premise or just the hypothesis,",
    "start": "1698205",
    "end": "1706095"
  },
  {
    "text": "this is exactly the model that we used or that I showed you for the SST. Uh, and all the same variance holds.",
    "start": "1706095",
    "end": "1713460"
  },
  {
    "text": "So if you wanted like more com- more complex combination functions than the one that I've signaled here,",
    "start": "1713460",
    "end": "1718470"
  },
  {
    "text": "um, you could introduce those. It would all be kind of nicely modularized because you would just be dealing with a TreeRNN,",
    "start": "1718470",
    "end": "1725670"
  },
  {
    "text": "a tree- a recursive, uh, neural network. You would define it for the premise and the hypothesis,",
    "start": "1725670",
    "end": "1731190"
  },
  {
    "text": "get their final states, concatenate them, and fit the classifier. So from this point on,",
    "start": "1731190",
    "end": "1736200"
  },
  {
    "text": "it looks like exactly all those others- other models.",
    "start": "1736200",
    "end": "1739960"
  },
  {
    "text": "And again I think this would be pretty straightforward to implement given the TreeRNN PyTorch implementation that comes with the course repo.",
    "start": "1742670",
    "end": "1751710"
  },
  {
    "text": "[NOISE] All right. And that's it for the sentence-encoding models.",
    "start": "1751710",
    "end": "1759135"
  },
  {
    "text": "I hope that gives you a sense for the ways that you could impose new innovations and so forth. The second class that I wanted to introduce I've called chained models.",
    "start": "1759135",
    "end": "1767550"
  },
  {
    "text": "And the reason I've called them chained is that basically you just run together the premise and hypothesis.",
    "start": "1767550",
    "end": "1772950"
  },
  {
    "text": "The simplest version of that, is the one that I've given here where I have every dog dance to every poodle moved,",
    "start": "1772950",
    "end": "1780375"
  },
  {
    "text": "you could insert your own boundary symbol if you wanted, if you thought it was important for the model to learn that transition point.",
    "start": "1780375",
    "end": "1786330"
  },
  {
    "text": "It can be like a unique token that you learn a unique embedding for. Um, but in principle you can just run them together like this,",
    "start": "1786330",
    "end": "1793080"
  },
  {
    "text": "and then have, you know, the same embedding space. That's all these gray cells, and then the same RNN parameters process",
    "start": "1793080",
    "end": "1799740"
  },
  {
    "text": "the entire thing premise and hypothesis together, and then finally on the basis of the final state here make a classifier prediction.",
    "start": "1799740",
    "end": "1807910"
  },
  {
    "text": "And it could be bidirectional in which case it would be using h_6 and h_1 as the basis for the classifier,",
    "start": "1808970",
    "end": "1815550"
  },
  {
    "text": "you know all the same variants apply here. I mean, this is literally just using the RNN that you might have used",
    "start": "1815550",
    "end": "1821340"
  },
  {
    "text": "already where I just feed in the blurred together premise and hypothesis and process it.",
    "start": "1821340",
    "end": "1828010"
  },
  {
    "text": "All right. This is the- I guess the rationale for this would be like the premise really and truly establishes the context for the hypothesis,",
    "start": "1830270",
    "end": "1838370"
  },
  {
    "text": "because it has- it says, \"Though a human reader has gone through and just read them, and then made a decision about the blurred together example pair.\"",
    "start": "1838370",
    "end": "1848070"
  },
  {
    "text": "And maybe that yeah, as I say here, maybe that corresponds to some real processing metaphor or something.",
    "start": "1848180",
    "end": "1854260"
  },
  {
    "text": "The- then this is the throwaway here like, you don't have to really do anything except def- define a new feature function,",
    "start": "1856010",
    "end": "1865170"
  },
  {
    "text": "which just concatenates the leaves of the two trees, and then everything else is just code that's already in the course repo,",
    "start": "1865170",
    "end": "1871500"
  },
  {
    "text": "and you can run your experiments in the usual way.",
    "start": "1871500",
    "end": "1874750"
  },
  {
    "text": "And here's a simple variant where I decide that I'm going to run together the premise and hypothesis.",
    "start": "1876770",
    "end": "1883740"
  },
  {
    "text": "But now I'm gonna give them sle- separate parameters. So I have like an RNN for the premise here,",
    "start": "1883740",
    "end": "1889620"
  },
  {
    "text": "and an RNN for the hypothesis, green and purple. And the linking point is just that the initial hidden state",
    "start": "1889620",
    "end": "1898470"
  },
  {
    "text": "of the hypothesis RNN is the final state of the premise RNN. Bu- but, you know,",
    "start": "1898470",
    "end": "1905040"
  },
  {
    "text": "but different parameters for the two. And this is kind of intermediate between the sentence encoding thing which was keeping them completely separate,",
    "start": "1905040",
    "end": "1911865"
  },
  {
    "text": "and the blurred together one that I just showed you. Because they do get blurred together but with different parameters reflecting different parts of the example.",
    "start": "1911865",
    "end": "1920440"
  },
  {
    "text": "Yeah, and then obviously this has lots of variants as well, ah, where I could fiddle around with different views on each of",
    "start": "1922970",
    "end": "1929580"
  },
  {
    "text": "these RNNs bidirectional different, um, hidden activation functions,",
    "start": "1929580",
    "end": "1934770"
  },
  {
    "text": "different cell structure and so forth. To state, I'm just curious based on what I've presented,",
    "start": "1934770",
    "end": "1943245"
  },
  {
    "text": "do people have intuitions about which model is likely to be better? I think there is a kind of clear winner if I've read the leaderboards",
    "start": "1943245",
    "end": "1951330"
  },
  {
    "text": "correctly in terms of just raw performance of the NLI problem. Do people have intuitions about which one to bet on? Yeah.",
    "start": "1951330",
    "end": "1963255"
  },
  {
    "text": "I've bet on this learner. Oh, you would why is that? Um, well it seems to capture",
    "start": "1963255",
    "end": "1969779"
  },
  {
    "text": "the entire premise and hypothesis, or pre- premise and conclusion, and also have a delineation between both of them.",
    "start": "1969780",
    "end": "1976635"
  },
  {
    "text": "I would imagine that maybe, it's more expressive than having just this concatenation. So maybe I forgot,",
    "start": "1976635",
    "end": "1982710"
  },
  {
    "text": "but I think we presented three different options. Oh, so your bet is this one, the first,",
    "start": "1982710",
    "end": "1987840"
  },
  {
    "text": "what about this one? Yeah, this I think will be weaker because you don't have a separation. Weaker than the sentence encoding ones like,",
    "start": "1987840",
    "end": "1995414"
  },
  {
    "text": "and this would be a minimal pair? Um, I think it would- I don't know.",
    "start": "1995415",
    "end": "2000830"
  },
  {
    "text": "I'm not really sure how this combination function works, like with the concatenation functions. It would likely just be concatenation?",
    "start": "2000830",
    "end": "2007190"
  },
  {
    "text": "Yes, so- Because the- probably better than not ones. Because- but all those models have that in common, right? Because the idea is, I get these two representations for premise and hypothesis,",
    "start": "2007190",
    "end": "2016325"
  },
  {
    "text": "and I want both of them to contribute to the classifier decision. So concatenation is a good choice because then it will",
    "start": "2016325",
    "end": "2022520"
  },
  {
    "text": "give the- the weights that I learned above that for the classifier, it will have access to all the different dimensions from both premise and hypothesis.",
    "start": "2022520",
    "end": "2030200"
  },
  {
    "text": "So I think that part is shared, combo, right? Like this certainly has it. I guess this doesn't have it,",
    "start": "2030200",
    "end": "2036770"
  },
  {
    "text": "but if it was bidirectional, then you'd probably concatenate h_6 and h_1 having run in the reverse direction.",
    "start": "2036770",
    "end": "2044010"
  },
  {
    "text": "So but what was your ranking? It was one? Well, you start from the first one, I'll help you guys. [LAUGHTER]",
    "start": "2044050",
    "end": "2051860"
  },
  {
    "text": "Ah, you know. Anybo- anybody else have bets? Yeah. Ah, I'm gonna bet on this, the tree RNN.",
    "start": "2051860",
    "end": "2059840"
  },
  {
    "text": "Oh, this one here? Yes. So if we stuck to RNNs, this would be the best one, wh- why was that?",
    "start": "2059840",
    "end": "2064955"
  },
  {
    "text": "Ah, RNNs tend to lose some information over time. Yes.",
    "start": "2064955",
    "end": "2070129"
  },
  {
    "text": "So unless we're using an upgraded RNN, like an LSTM or a GRU, I think that having two separate ones and",
    "start": "2070130",
    "end": "2075470"
  },
  {
    "text": "then combining their outputs is likely to perform better. Oh, that's interesting. Just in keeping it shorter here,",
    "start": "2075470",
    "end": "2081260"
  },
  {
    "text": "and getting this representation here kind of saving it for the classifier.",
    "start": "2081260",
    "end": "2087095"
  },
  {
    "text": "I might be doing better, and I- I'd say like [NOISE] that might hold even if you've got a sophisticated cell like an LSTM,",
    "start": "2087095",
    "end": "2093050"
  },
  {
    "text": "just because these things inevitably get kind of attenuated. That's an interesting insight. Yeah, and actually- maybe I'll have to really look at these leaderboards here because,",
    "start": "2093050",
    "end": "2102079"
  },
  {
    "text": "the way you framed that, that insight attention which I'm gonna show you next is highly relevant to this.",
    "start": "2102080",
    "end": "2108260"
  },
  {
    "text": "Because to the extent that I have mechanisms that help me remember distant information, the calculus might change.",
    "start": "2108260",
    "end": "2115100"
  },
  {
    "text": "Um, but still I like that, that intuition. Yeah. I can use intuition where a simple RNN is best.",
    "start": "2115100",
    "end": "2122944"
  },
  {
    "text": "Because if you don't have a lot of data, then maybe you're not gonna have enough data to be able to differentiate the difference between your hypothesis and everything,",
    "start": "2122945",
    "end": "2130400"
  },
  {
    "text": "so to just have a good language model frankly, seems like you'd wanna take advantage of both,",
    "start": "2130400",
    "end": "2135755"
  },
  {
    "text": "versus if you had a ton of data, I can see how having two different ones would give a little bit more readiness. Oh, that's another great insight.",
    "start": "2135755",
    "end": "2142430"
  },
  {
    "text": "Yeah. Yeah, just if you think about data versus the number of parameters that you need to learn, [NOISE] then small data might do best with this one",
    "start": "2142430",
    "end": "2149359"
  },
  {
    "text": "which is the kind of most minimal model that I presented. Yeah. Correct me if I'm wrong.",
    "start": "2149360",
    "end": "2157550"
  },
  {
    "text": "But I think that these models are the best-performing models. Um, especially if you allow that you can have attention,",
    "start": "2157550",
    "end": "2167209"
  },
  {
    "text": "and that sentence encoding models are chosen by and large, by people who are doing multitask learning,",
    "start": "2167209",
    "end": "2173450"
  },
  {
    "text": "so they want a representation of the individual sentences so that they can transfer to other tasks or representations from other tasks can easily transfer into this one.",
    "start": "2173450",
    "end": "2183485"
  },
  {
    "text": "But it's like, if you just wanna solve NLI, you pick a model that's like this,",
    "start": "2183485",
    "end": "2189335"
  },
  {
    "text": "and you add attention mechanisms which I'll show you next and that's like a very powerful approach. Yeah.",
    "start": "2189335",
    "end": "2195260"
  },
  {
    "text": "When you say this comprise the best, do you mean on the bake-off data or on the original dataset?",
    "start": "2195260",
    "end": "2201410"
  },
  {
    "text": "I meant like SNLI. Actually let me, um- Because I guess the way they created the hypothesis was by reading the premise,",
    "start": "2201410",
    "end": "2209974"
  },
  {
    "text": "and then saying, \"Mmh, I'm going to now write an entailment,\" that model might model exactly that process.",
    "start": "2209975",
    "end": "2216920"
  },
  {
    "text": "I had in mind in particular this leaderboard. So let's look.",
    "start": "2216920",
    "end": "2222559"
  },
  {
    "text": "So this is for SNLI, feature-based models, that's like handcrafted stuff. Those are up here.",
    "start": "2222560",
    "end": "2229400"
  },
  {
    "text": "Sentence vector-based models that's like the sentence encoding ones. The top score there is currently 87.4 on the test set,",
    "start": "2229400",
    "end": "2240185"
  },
  {
    "text": "and then down here I think these- before we get to the ensembles, I think these are by and large, so that's a tree one.",
    "start": "2240185",
    "end": "2246605"
  },
  {
    "text": "But I think a lot of these are the chained, but separate premise and hypothesis LSTMs,",
    "start": "2246605",
    "end": "2253234"
  },
  {
    "text": "and these numbers tend to be a bit higher, right? Even setting aside the ensembles.",
    "start": "2253235",
    "end": "2259140"
  },
  {
    "text": "Well, it's less obvious just at a glance exactly what these models are doing.",
    "start": "2261310",
    "end": "2266315"
  },
  {
    "text": "But I'm pretty sure I'm right. [NOISE] I'm pretty sure I'm right for",
    "start": "2266315",
    "end": "2271460"
  },
  {
    "text": "these big well-used tasks chained separate RNNs are the best-performing with attention.",
    "start": "2271460",
    "end": "2281555"
  },
  {
    "text": "So let me show you the attention. That's the final stage here.",
    "start": "2281555",
    "end": "2287960"
  },
  {
    "text": "So here are the guiding ideas for attention mechanisms. We need more connections between the premise and hypothesis.",
    "start": "2287960",
    "end": "2296450"
  },
  {
    "text": "Both classes of model that I showed you are kind of limited in what they allow. So the sentence encoding ones just use",
    "start": "2296450",
    "end": "2302000"
  },
  {
    "text": "the final two representations and concatenate them, and all that other information is kinda, it has to be summarized by the two that I used for the classification decision.",
    "start": "2302000",
    "end": "2310430"
  },
  {
    "text": "Otherwise, it's lost. Here's a more informal statement of this, in processing the hypothesis,",
    "start": "2310430",
    "end": "2317089"
  },
  {
    "text": "your model needs some reminders of what's in the premise. And that final hidden representation isn't enough to get those kind of reminders.",
    "start": "2317090",
    "end": "2326315"
  },
  {
    "text": "And then another guiding insight here might be that it's useful to have a kind of soft alignment between the premise and hypothesis.",
    "start": "2326315",
    "end": "2335715"
  },
  {
    "text": "Alignment is an early insight from approaches to NLI, where people would use algorithms to construct kind of",
    "start": "2335715",
    "end": "2343220"
  },
  {
    "text": "high-fidelity alignments between premise and hypothesis and use that as the basis for making, uh, decisions about entailment.",
    "start": "2343220",
    "end": "2349819"
  },
  {
    "text": "And you can imagine that attention mechanisms especially the word-by-word ones that I show you are",
    "start": "2349820",
    "end": "2354890"
  },
  {
    "text": "kind of a soft way to explore that kind of alignment by establishing some connections and learning weights on those connections.",
    "start": "2354890",
    "end": "2362825"
  },
  {
    "text": "But again, this is all in the spirit of kind of making more dense interconnections between the two parts of your examples.",
    "start": "2362825",
    "end": "2371075"
  },
  {
    "text": "I'm going to start with what I think is the simplest version of attention.",
    "start": "2371075",
    "end": "2376565"
  },
  {
    "text": "You'll see that it's already kind of involved. But I think I can convey to you the intuitions about how this works.",
    "start": "2376565",
    "end": "2382160"
  },
  {
    "text": "So again, we have our familiar example, every dog dance, some poodle danced.",
    "start": "2382160",
    "end": "2387515"
  },
  {
    "text": "And this'll be the target state here, h_c. So I use h_c to get a score vector that combines h_c with h_1,",
    "start": "2387515",
    "end": "2397775"
  },
  {
    "text": "h_2, and h_3, you can see them here. And this is the simplest variant in the sense that all I'm doing is forming the dot-product.",
    "start": "2397775",
    "end": "2405230"
  },
  {
    "text": "It's kind of like un-normalized cosine similarity. And that gives me a vector of scores, alpha here.",
    "start": "2405230",
    "end": "2413840"
  },
  {
    "text": "Those, uh, scores get normalized by a softmax function into what are properly called the attention weights.",
    "start": "2413840",
    "end": "2422315"
  },
  {
    "text": "And so that's another vector of length 3 in our example here, giving a weight, a kind of weight on the, in this case,",
    "start": "2422315",
    "end": "2429200"
  },
  {
    "text": "the association or the similarity between h_c and each one of these elements.",
    "start": "2429200",
    "end": "2435589"
  },
  {
    "text": "Then you get what's called a context vector. And a simple version of that would be just that I take each one of these,",
    "start": "2435590",
    "end": "2443450"
  },
  {
    "text": "and multiply it by its attention weight down here, and then take their average.",
    "start": "2443450",
    "end": "2449645"
  },
  {
    "text": "So this is a vector that has the same dimensionality as each one of these hidden states.",
    "start": "2449645",
    "end": "2455015"
  },
  {
    "text": "It's just been weighted by attention. The attention weight is measuring similarity with this final state,",
    "start": "2455015",
    "end": "2463010"
  },
  {
    "text": "which is so important for these problems. Then you do some kind of attention combination function.",
    "start": "2463010",
    "end": "2470390"
  },
  {
    "text": "So here I've concatenated K, this representation with the final representation here and fed it",
    "start": "2470390",
    "end": "2477230"
  },
  {
    "text": "through a kind of dense layer and apply to an activation function. And that gives you what I've called the attention combination representation.",
    "start": "2477230",
    "end": "2486065"
  },
  {
    "text": "Here's another variant where I have separate parameters for the context vector,",
    "start": "2486065",
    "end": "2491645"
  },
  {
    "text": "and for this vector here and just sum them, very similar I think. And then finally, you fit a classifier on top of",
    "start": "2491645",
    "end": "2501260"
  },
  {
    "text": "this attention combination in the usual way and make your classification decision.",
    "start": "2501260",
    "end": "2508020"
  },
  {
    "text": "So it looks like a lot, um, but, you know, intuitively,",
    "start": "2508450",
    "end": "2514160"
  },
  {
    "text": "what's happening is in this basic form here, I'm getting a measure of similarity with the final vector.",
    "start": "2514160",
    "end": "2520950"
  },
  {
    "text": "That gets averaged into this context vector, and then that context vector,",
    "start": "2520950",
    "end": "2527350"
  },
  {
    "text": "and the usual thing that we use for prediction is fed through into this classifier to make a final decision.",
    "start": "2527350",
    "end": "2534049"
  },
  {
    "text": "So it's like the usual thing and then K would be what I called the reminders, an attention weighted view of what happened previously in the premise,",
    "start": "2534720",
    "end": "2545375"
  },
  {
    "text": "that's been like fast-tracked up as an input to the classifier.",
    "start": "2545375",
    "end": "2550410"
  },
  {
    "text": "Here's a specific example. Just in case you're the sort of person who likes to see numbers here. So imagine these are all just two-dimensional vectors.",
    "start": "2550960",
    "end": "2559820"
  },
  {
    "text": "I get those scores. And here, the intuition which you could probably read off of the vector values is",
    "start": "2559820",
    "end": "2566810"
  },
  {
    "text": "that the first word every is really very similar to danced.",
    "start": "2566810",
    "end": "2571910"
  },
  {
    "text": "And It's got high magnitude. So you get a really large un-normalized,",
    "start": "2571910",
    "end": "2577175"
  },
  {
    "text": "um, cosine similarity value. And then they sort of drop off.",
    "start": "2577175",
    "end": "2582589"
  },
  {
    "text": "And then they get normalized by the softmax function, which sort of flattens things out.",
    "start": "2582590",
    "end": "2588575"
  },
  {
    "text": "Then I do the mean to get that context vector, and that context vector is dimension 2, right?",
    "start": "2588575",
    "end": "2595280"
  },
  {
    "text": "It's just an average of all these weighted vectors from down over here. And that gets concatenated with this representation.",
    "start": "2595280",
    "end": "2603080"
  },
  {
    "text": "Hope you can see that in the purple. So that gives me a 4-dimensional vector, which I feed through this dense layer to get the attention combination.",
    "start": "2603080",
    "end": "2611525"
  },
  {
    "text": "And then finally, that gets fed into the classifier as before. Yeah?",
    "start": "2611525",
    "end": "2616954"
  },
  {
    "text": "Seems to me like the larger your output vector, the more attention you get pretty much no matter what.",
    "start": "2616955",
    "end": "2623750"
  },
  {
    "text": "[inaudible] It's got the highest weights because it had larger numbers?",
    "start": "2623750",
    "end": "2629405"
  },
  {
    "text": "It did, yeah. On this scoring function. And that's because, well, it's not only larger numbers but also",
    "start": "2629405",
    "end": "2635900"
  },
  {
    "text": "larger numbers that are very similar to this final representation. That's sort of the way I cook things up so that you would see what the vectors are.",
    "start": "2635900",
    "end": "2642065"
  },
  {
    "text": "But you're right in the sense that the more similar I am to this final representation and the larger my magnitude,",
    "start": "2642065",
    "end": "2648905"
  },
  {
    "text": "the greater my attention weight will be. [inaudible] you're going to get pretty close to the original vector.",
    "start": "2648905",
    "end": "2658700"
  },
  {
    "text": "Yeah. I made up the boundaries. So I think you have exactly the right intuition. Yeah?",
    "start": "2658700",
    "end": "2667520"
  },
  {
    "text": "So to what extent does, do you benefit from the attention versus just seeing all of the hidden states from previously?",
    "start": "2667520",
    "end": "2677359"
  },
  {
    "text": "Like how much does, where does the attention like add to that?",
    "start": "2677360",
    "end": "2682385"
  },
  {
    "text": "It's an interesting question, so how would I see all the other states? [inaudible] them before, right?",
    "start": "2682385",
    "end": "2689840"
  },
  {
    "text": "Right. Um, so if you just had a classifier on all of those as an addition to the final one,",
    "start": "2689840",
    "end": "2696755"
  },
  {
    "text": "like would that give you the same like results status using this attention layer?",
    "start": "2696755",
    "end": "2702515"
  },
  {
    "text": "I see what you mean. So how would that model deal with varying length for the premise or the hypothesis,",
    "start": "2702515",
    "end": "2709190"
  },
  {
    "text": "especially the premise in this case. If it could be 3, 4, 5, 6. If I didn't know the length,",
    "start": "2709190",
    "end": "2714785"
  },
  {
    "text": "how would I summarize them into something that was fixed dimensional so that I could feed it in the way it happens up here?",
    "start": "2714785",
    "end": "2721445"
  },
  {
    "text": "I think that would be the blocker to actually just literally reusing them. And so the attention mechanism is giving us a kind of blurry look back in a way that for",
    "start": "2721445",
    "end": "2731870"
  },
  {
    "text": "this mechanism is just hardcoded to be weighting things that are similar to this final representation or higher.",
    "start": "2731870",
    "end": "2738930"
  },
  {
    "text": "But we are going for the same intuition which is that we want to kind of bring them back in.",
    "start": "2739390",
    "end": "2744965"
  },
  {
    "text": "The idea s that like all of these models, they are kind of like as they move through data,",
    "start": "2744965",
    "end": "2751100"
  },
  {
    "text": "they have a kind of hazy view of their own past. Uh, and then we want to give them these reminders",
    "start": "2751100",
    "end": "2757115"
  },
  {
    "text": "in the sense in the reminders come through this very thin pipe on this model. But this is a good transition point.",
    "start": "2757115",
    "end": "2762230"
  },
  {
    "text": "So, um, there are other scoring functions that people have explored. I just showed you the dot-product.",
    "start": "2762230",
    "end": "2768230"
  },
  {
    "text": "But you could have learned parameters in here, like this one that's called general by Luong et al.",
    "start": "2768230",
    "end": "2774965"
  },
  {
    "text": "That's like general because it's giving us this like way of combining h_c.",
    "start": "2774965",
    "end": "2781100"
  },
  {
    "text": "The final representation with each one of these vectors and learned parameters for that kind of bilinear combination.",
    "start": "2781100",
    "end": "2788000"
  },
  {
    "text": "And so that's giving us a chance to go way beyond the hard-coded ideal of the dot-product into learning just in general what,",
    "start": "2788000",
    "end": "2794840"
  },
  {
    "text": "what relationships are valuable for the problem that I'm trying to solve and concat is very similar here.",
    "start": "2794840",
    "end": "2801665"
  },
  {
    "text": "I think the crucial innovation from both of these is that you're learning weights as part of the attention mechanism.",
    "start": "2801665",
    "end": "2808349"
  },
  {
    "text": "Would there be any benefit, especially when the  premise and hypothesis get along to have",
    "start": "2809980",
    "end": "2815119"
  },
  {
    "text": "attention for the previous parts of the hypothesis?",
    "start": "2815120",
    "end": "2820205"
  },
  {
    "text": "That's a wonderful question. I mean, yes and if you look at the literature, especially the early literature on attention which was focused on machine translation,",
    "start": "2820205",
    "end": "2829665"
  },
  {
    "text": "that's, in fact, the way they're defined, right? So I have attention for this state but I also have it for this one and this one all the way through the hypothesis or,",
    "start": "2829665",
    "end": "2837610"
  },
  {
    "text": "you know, the translation. Um, the reason that's meaningful is because, in translation, each one of these has an output.",
    "start": "2837610",
    "end": "2844850"
  },
  {
    "text": "So you're like predicting a word for example. Whereas in NLI you have an output only in this last state.",
    "start": "2844850",
    "end": "2852140"
  },
  {
    "text": "So for this presentation, if you did compute them for all these other steps the information would just disappear.",
    "start": "2852140",
    "end": "2860280"
  },
  {
    "text": "Um, and that's a limitation of the, the places where we're getting supervision. So for this global attention,",
    "start": "2860590",
    "end": "2868010"
  },
  {
    "text": "the answer is kind of no, it's not worth doing for every step in the hypothesis but that's a nice transition to word-by-word attention.",
    "start": "2868010",
    "end": "2875960"
  },
  {
    "text": "So word-by-word attention is gonna try to make good on exactly your intuition. I would like to get information at all of these steps",
    "start": "2875960",
    "end": "2883145"
  },
  {
    "text": "about what my premise was like but it gets more involved. So here let me see how well I can do this.",
    "start": "2883145",
    "end": "2889055"
  },
  {
    "text": "So every dog danced, some poodle moved, focus your attention on this B state.",
    "start": "2889055",
    "end": "2894365"
  },
  {
    "text": "And keep in mind that this has a kind of recursive property. So you'll feel a little bit at c at the start.",
    "start": "2894365",
    "end": "2899450"
  },
  {
    "text": "The first representation to build this is kind of feeding,",
    "start": "2899450",
    "end": "2906695"
  },
  {
    "text": "it's looking at B here. So B gets copied over and it gets weighted by the previous attention weights K which came from this A representation.",
    "start": "2906695",
    "end": "2916130"
  },
  {
    "text": "I didn't show you those but just imagine you had them. So I re-weight B by those attention things and then I add",
    "start": "2916130",
    "end": "2923690"
  },
  {
    "text": "in all of the vectors from everything in the premise, right?",
    "start": "2923690",
    "end": "2930140"
  },
  {
    "text": "So this gets copied. These are all the same. But the reason they're repeated is so that I can add in",
    "start": "2930140",
    "end": "2935720"
  },
  {
    "text": "all the previous states and so this would be for whatever dimensionality you had for the premise.",
    "start": "2935720",
    "end": "2941585"
  },
  {
    "text": "You can see already that in this case I'm gonna have to make the simplifying assumption that I have the same length for the premise and hypothesis so that this parameters,",
    "start": "2941585",
    "end": "2951530"
  },
  {
    "text": "these parameters W are well-defined. But I hope you can see that the fundamental thing",
    "start": "2951530",
    "end": "2957770"
  },
  {
    "text": "is we're bringing in all of the premise. We're kind of infusing the current state",
    "start": "2957770",
    "end": "2963244"
  },
  {
    "text": "with everything from the premise and then feeding it through this neural layer to get M. Now,",
    "start": "2963245",
    "end": "2971930"
  },
  {
    "text": "M doesn't have the right dimensionality for us going forward. So the true weights for this are fed through a softmax combination of",
    "start": "2971930",
    "end": "2980000"
  },
  {
    "text": "M with some other learned weights W which are performing this transformation.",
    "start": "2980000",
    "end": "2985145"
  },
  {
    "text": "Then I get what is kind of like the context vector that we saw before. And here, it's all those premise states again weighted by alpha B.",
    "start": "2985145",
    "end": "2996680"
  },
  {
    "text": "And then you bring in also the previous attention weights here.",
    "start": "2996680",
    "end": "3003130"
  },
  {
    "text": "That's KA and you get some parameters for that as well. And then finally, it's the same as before.",
    "start": "3003130",
    "end": "3009700"
  },
  {
    "text": "This classifier layer is just KC and HC. So down here I would use this one.",
    "start": "3009700",
    "end": "3016315"
  },
  {
    "text": "And the final calculation that I got if I was doing the final state and",
    "start": "3016315",
    "end": "3021400"
  },
  {
    "text": "feed that through a classifier. Makes sense?",
    "start": "3021400",
    "end": "3026559"
  },
  {
    "text": "And you do this, so I do it for A and for B and when I get to C, I create this classifier.",
    "start": "3026560",
    "end": "3033625"
  },
  {
    "text": "And since it's dependent on KC, which is dependent on KB and B, which is dependent on KA and A,",
    "start": "3033625",
    "end": "3040855"
  },
  {
    "text": "I've also got lots of influences from all these attention weights that I kept word by word through the entire processing of the hypothesis.",
    "start": "3040855",
    "end": "3050030"
  },
  {
    "text": "So if you squint, I think it makes good on the intuitions that both of you had. Yeah.",
    "start": "3050340",
    "end": "3058015"
  },
  {
    "text": "The question about the intuition behind attention. So it seems like sort of the underlying hypothesis is that",
    "start": "3058015",
    "end": "3064224"
  },
  {
    "text": "if your representation states have similar values, right? So their dot product or their matrix multiplication will be similar.",
    "start": "3064225",
    "end": "3071215"
  },
  {
    "text": "But in this case, right? Maybe it's really useful if you're trying to say that one thing is not related to the other that your hypothesis is not related to your premise.",
    "start": "3071215",
    "end": "3079585"
  },
  {
    "text": "Maybe the states will have very different values and your attention would almost make you not pay attention to that at all.",
    "start": "3079585",
    "end": "3084815"
  },
  {
    "text": "Like, I guess at what point does it make sense that you're always assuming that similar values for your features is what you want to pay attention to?",
    "start": "3084815",
    "end": "3091839"
  },
  {
    "text": "Does that make sense as a question? I think that this is a failing only of the dot-product one, right? Where I've kind of hard-coded the ideal because I tried to highlight them in orange here.",
    "start": "3091840",
    "end": "3100480"
  },
  {
    "text": "I have three chances to learn parameters and those parameters could reflect all of these different associations.",
    "start": "3100480",
    "end": "3106570"
  },
  {
    "text": "So not only strong things but also weak things, right? And you see this in visualizations of the learned weights that you kind of learn to amplify",
    "start": "3106570",
    "end": "3113950"
  },
  {
    "text": "important pairings and de-emphasize ones that are not informative for the final task. So this is kind of like again the data are speaking very",
    "start": "3113950",
    "end": "3121990"
  },
  {
    "text": "loudly in this case in a way that they weren't for the dot-product view.",
    "start": "3121990",
    "end": "3126500"
  },
  {
    "text": "Yeah and let me just mention a few other variants. I mean, what I've done there with those two views.",
    "start": "3131000",
    "end": "3136395"
  },
  {
    "text": "I mean, I just picked two that seemed kind of representative of strategies people use. My personal opinion is that the literature on attention is",
    "start": "3136395",
    "end": "3144450"
  },
  {
    "text": "kind of hard to read because there are so many variants. And when you open up a new paper and see that",
    "start": "3144450",
    "end": "3150670"
  },
  {
    "text": "people have tried a different view of attention it's hard to know where the meaningful differences are",
    "start": "3150670",
    "end": "3156145"
  },
  {
    "text": "and where they're just kind of incidental implementation details. But I hope you're now armed to think like there's kind of",
    "start": "3156145",
    "end": "3162490"
  },
  {
    "text": "these two classes global with like pretty hard-coded values about what attention weight should be like on",
    "start": "3162490",
    "end": "3171040"
  },
  {
    "text": "up to this one which is like very freely learning word by word what the attention weight should be.",
    "start": "3171040",
    "end": "3176905"
  },
  {
    "text": "Other variants so Luong et al also applied, explored local attention",
    "start": "3176905",
    "end": "3183010"
  },
  {
    "text": "which is like instead of looking at the entire premise when forming whatever vector of attention weights I'm gonna form,",
    "start": "3183010",
    "end": "3189115"
  },
  {
    "text": "I look only at a controlled window. Um, I think that's most applicable in situations like machine translation,",
    "start": "3189115",
    "end": "3197079"
  },
  {
    "text": "where you have lots of output states and so you're kind of moving through the hypothesis attending to different local windows in the premise.",
    "start": "3197079",
    "end": "3204910"
  },
  {
    "text": "Um, or I should say the source and target languages for machine translation or for like language modeling or dialogue which could have a lot of output states.",
    "start": "3204910",
    "end": "3213204"
  },
  {
    "text": "Um, for NLI it kind of seems like it's that final state that really matters and then you might as well",
    "start": "3213205",
    "end": "3219340"
  },
  {
    "text": "attend to the entire premise. Yeah. [inaudible] and that works?",
    "start": "3219340",
    "end": "3224530"
  },
  {
    "text": "Yeah, I, I've sort of mentioned that down here. And we're gonna talk about those later.",
    "start": "3224530",
    "end": "3229690"
  },
  {
    "text": "This is what I mean by, um, attention has become kind of pervasive and maybe even the primary source of connection.",
    "start": "3229690",
    "end": "3237835"
  },
  {
    "text": "Let me just go through these now before getting to that. So word-by-word attention. This thing that I showed you here can be set up in",
    "start": "3237835",
    "end": "3244390"
  },
  {
    "text": "many ways and you could have many more learned parameters. And as an extreme case of that,",
    "start": "3244390",
    "end": "3249550"
  },
  {
    "text": "this Rocktaschel paper which was really foundational in showing that attention is powerful for NLI,",
    "start": "3249550",
    "end": "3255130"
  },
  {
    "text": "they basically seem to have taken the view that for every one of the matrices that you have here,",
    "start": "3255130",
    "end": "3260890"
  },
  {
    "text": "you have associated embedding weights or transformation weights. So they have a lot more, um,",
    "start": "3260890",
    "end": "3266214"
  },
  {
    "text": "W's that would be in orange if you depicted their full model. But I think that with this summary here,",
    "start": "3266215",
    "end": "3273055"
  },
  {
    "text": "it's kinda the same intuition which is as you troop through the hypothesis infuse",
    "start": "3273055",
    "end": "3278109"
  },
  {
    "text": "every state that you look at with an attention weighted version of the entire premise and learn parameters along the way.",
    "start": "3278110",
    "end": "3285740"
  },
  {
    "text": "You could, you could, um, as you troop through the hypothesis, append attention weights from the premise at each time-step.",
    "start": "3286320",
    "end": "3293785"
  },
  {
    "text": "That's another variant that Luong et al explore, and then relevant to things like the transformer.",
    "start": "3293785",
    "end": "3298930"
  },
  {
    "text": "So a recent development which I think we'll talk about in a couple of weeks is that in the",
    "start": "3298930",
    "end": "3303970"
  },
  {
    "text": "usual framing like the one I have taken for this lecture uh, the primary connections are the RNN ones.",
    "start": "3303970",
    "end": "3309820"
  },
  {
    "text": "And then you do this like additional layer of attention connections.",
    "start": "3309820",
    "end": "3314905"
  },
  {
    "text": "And in the paper, I think this is the one that's called attention is all you need. Uh, the idea there is that drop",
    "start": "3314905",
    "end": "3321130"
  },
  {
    "text": "the basic recurrent network connections and just have lots of attention mechanisms. And in my view what that's doing is kind of just",
    "start": "3321130",
    "end": "3328840"
  },
  {
    "text": "saying for every point that I'm at in an example, just freely explore connections to my neighborhood maybe through that,",
    "start": "3328840",
    "end": "3337329"
  },
  {
    "text": "throughout the whole example and just see if there are any influences anywhere around me that are relevant for solving my problem.",
    "start": "3337330",
    "end": "3344319"
  },
  {
    "text": "So it's a very open-ended way of exploring the data. It doesn't even encode kind of the linear structure that you get from an RNN.",
    "start": "3344320",
    "end": "3352315"
  },
  {
    "text": "But those are, those are proven to be really powerful. And then as a final kind of more indirect connection,",
    "start": "3352315",
    "end": "3359170"
  },
  {
    "text": "but still interesting the memory networks that were developed a few years ago, they're kind of similar to attention mechanisms",
    "start": "3359170",
    "end": "3366520"
  },
  {
    "text": "in the sense that they're trying with additional, augmented representations to address the fact that",
    "start": "3366520",
    "end": "3372400"
  },
  {
    "text": "your network might be sort of forgetting things as it processes examples. But the mechanism there is quite different.",
    "start": "3372400",
    "end": "3379240"
  },
  {
    "text": "So here you have this kind of memory store representation as opposed to additional attention connections.",
    "start": "3379240",
    "end": "3384940"
  },
  {
    "text": "But of course, those ideas could be combined as well.",
    "start": "3384940",
    "end": "3388700"
  },
  {
    "text": "Okay, that's very technical stuff. Um, but I hope you feel, if you weren't already kind of prepared to dive into the literature,",
    "start": "3391320",
    "end": "3400240"
  },
  {
    "text": "it will be rewarding. Ah, I think it's a very clear result at this point that for lots of problems in NLU,",
    "start": "3400240",
    "end": "3405865"
  },
  {
    "text": "retention mechanisms are valuable. Excellent, so final phase here,",
    "start": "3405865",
    "end": "3412240"
  },
  {
    "text": "I wanted to show you some error analyses. An and some- suggest some new possibilities for doing this.",
    "start": "3412240",
    "end": "3418255"
  },
  {
    "text": "So I mentioned the MultiNLI annotations, here I've given a few examples, the annotations are on the left,",
    "start": "3418255",
    "end": "3425155"
  },
  {
    "text": "I think there are 16 categories for them, and all they're doing is just giving you know",
    "start": "3425155",
    "end": "3430680"
  },
  {
    "text": "a human's judgment about certain important semantic properties of the examples. So this one is MODAL and COREF because it has can in here, ah,",
    "start": "3430680",
    "end": "3440029"
  },
  {
    "text": "and it's sort of got an anaphoric connection between students of human misery and those who study human misery.",
    "start": "3440030",
    "end": "3447700"
  },
  {
    "text": "NEGATION, TENSE DIFFERENCE, CONDITIONAL, QUANTIFIER ACTIVE, PASSIVE, this active passive thing is nice.",
    "start": "3447700",
    "end": "3454525"
  },
  {
    "text": "They consolidated programs to increase efficiency and programs to increase efficiency were consolidated.",
    "start": "3454525",
    "end": "3460255"
  },
  {
    "text": "You know, like it's not surprising that that's a common strategy for people who were constructing examples.",
    "start": "3460255",
    "end": "3466740"
  },
  {
    "text": "And it's really interesting to ask of your system whether it has learned the kind of",
    "start": "3466740",
    "end": "3471780"
  },
  {
    "text": "human linguistic thing that active passive variants preserve some aspects of meaning or many aspects of meaning.",
    "start": "3471780",
    "end": "3478330"
  },
  {
    "text": "So just as a kind of example of something you might do,",
    "start": "3479060",
    "end": "3484345"
  },
  {
    "text": "I used some of my own Amazon credits that I got along with you all to just run a bunch of experiments on the cloud just using the course code.",
    "start": "3484345",
    "end": "3494260"
  },
  {
    "text": "So I did Logistic Regression with cross-product features, um, and I explored like the regularization strength and the penalty type L1 L2.",
    "start": "3494260",
    "end": "3505660"
  },
  {
    "text": "And then for LSTMs, I did a chained one. So that's the most naive version where you have shared parameters across",
    "start": "3505660",
    "end": "3512230"
  },
  {
    "text": "premise and hypothesis as well as a sentence encoding one, which I just pulled out of that notebook that I showed you.",
    "start": "3512230",
    "end": "3518859"
  },
  {
    "text": "And I explored the embedding dimension, the hidden dimensionality, and the learning rate and the activation function.",
    "start": "3518860",
    "end": "3525320"
  },
  {
    "text": "Um, up here, I've given the performance on the 1,000 or so annotated examples.",
    "start": "3525330",
    "end": "3531520"
  },
  {
    "text": "So the logistic regression was best, chained, and then sentence encoding.",
    "start": "3531520",
    "end": "3537070"
  },
  {
    "text": "Just as an aside here, I noted I wanted to store all the model parameters so that I could test them on new cases.",
    "start": "3537070",
    "end": "3543819"
  },
  {
    "text": "The model file for the logistic regression has over 600 megabytes because it has 16 million features.",
    "start": "3543820",
    "end": "3550570"
  },
  {
    "text": "The cross-product feature spaces are really large, contrast that with the LSTMs, where the model files are each about a megabyte.",
    "start": "3550570",
    "end": "3558145"
  },
  {
    "text": "So you know this performance difference if I wanted to run these models on a phone, um, then I just can't use that logistic regression right,",
    "start": "3558145",
    "end": "3566020"
  },
  {
    "text": "but these, these models down are nice and compact. An important thing to keep in mind. [BACKGROUND]",
    "start": "3566020",
    "end": "3574360"
  },
  {
    "text": "Oh for the annotations? I don't know. That's a good question. I should have checked. Um, It",
    "start": "3574360",
    "end": "3580750"
  },
  {
    "text": "would be quick to check though because those models are quick to train. I'm less concerned though with the absolute performance.",
    "start": "3580750",
    "end": "3586960"
  },
  {
    "text": "Although it would be nice to bring it into the mix for an error analysis, but what I was really interested in is just that you have this view",
    "start": "3586960",
    "end": "3592720"
  },
  {
    "text": "of absolute performance where maybe logistic regression is best. But how are they differing according to these different annotation categories?",
    "start": "3592720",
    "end": "3600145"
  },
  {
    "text": "So there are like 16 of them, so I grouped them in a few ways. These are the categories where all the models are more often correct than incorrect.",
    "start": "3600145",
    "end": "3608109"
  },
  {
    "text": "Um, that's a kind of high level summary and that's ACTIVE/PASSIVE, antonyms, BELIEF reports, conditionals,",
    "start": "3608110",
    "end": "3615369"
  },
  {
    "text": "long sentences, MODALS and NEGATION. It's pretty good. Okay, and it's good that there are a lot of them where there doing,",
    "start": "3615370",
    "end": "3621760"
  },
  {
    "text": "they're more often correct than incorrect. Here's the one case where all the models were more incorrect than correct.",
    "start": "3621760",
    "end": "3628435"
  },
  {
    "text": "So this is presumably, no matter what your model the hardest and this is QUANTITY/TIME_REASONING. And this doesn't surprise me,",
    "start": "3628435",
    "end": "3634569"
  },
  {
    "text": "because I think a lot of the models and also the feature spaces are just not sensitive to this low-level kind of stuff, it's very subtle.",
    "start": "3634570",
    "end": "3642655"
  },
  {
    "text": "This is a classic case of a very small set of semantic morphemes having very large consequences for what the overall sentences mean.",
    "start": "3642655",
    "end": "3650815"
  },
  {
    "text": "And so I'm not surprised that this is a hard one. Here's a case where only the logistic regression was more often correct than incorrect,",
    "start": "3650815",
    "end": "3659830"
  },
  {
    "text": "the other models were the reverse and that's COREF and tense differences. And that's kind of interesting.",
    "start": "3659830",
    "end": "3665835"
  },
  {
    "text": "Um, the TENSE_DIFFERENCE one makes sense to me in the sense that the word product model first of all is keeping track of all of these pairs.",
    "start": "3665835",
    "end": "3674100"
  },
  {
    "text": "But since I didn't do any stemming or other normalization, it also knows about differences in tense.",
    "start": "3674100",
    "end": "3679475"
  },
  {
    "text": "Um, and so it has this enormous space of features and it's just kind of",
    "start": "3679475",
    "end": "3684885"
  },
  {
    "text": "pretty well attuned to the fact that you might have like was to is because it has that directly represented,",
    "start": "3684885",
    "end": "3690510"
  },
  {
    "text": "whereas the, um, LSTMs are probably struggling because they",
    "start": "3690510",
    "end": "3695970"
  },
  {
    "text": "probably end up with pretty similar representations for the tense variants because they occur in a lot of the same environments.",
    "start": "3695970",
    "end": "3702809"
  },
  {
    "text": "And you might tell a similar story for the COREF case. Here's one where only the chained LSTM was",
    "start": "3702810",
    "end": "3710040"
  },
  {
    "text": "more correct than incorrect and this is WORD_OVERLAP. That's kind of surprising to me, I don't have an explanation for that.",
    "start": "3710040",
    "end": "3715425"
  },
  {
    "text": "This would make perfect sense if I had added some attention mechanisms, um, but I didn't.",
    "start": "3715425",
    "end": "3721089"
  },
  {
    "text": "And I would have thought that the logistic regression would be really good at this, but it's just about you know 50-50.",
    "start": "3721090",
    "end": "3727700"
  },
  {
    "text": "And here the finally, here the cases where only the sentence-encoding LSTM was more incorrect than correct.",
    "start": "3728100",
    "end": "3733750"
  },
  {
    "text": "So the other two models were better, right? This is our worst model remember and this is PARAPHRASE and QUANTIFIER.",
    "start": "3733750",
    "end": "3740030"
  },
  {
    "text": "I don't have a deep explanation for this I guess. Except that it's the worst, worst of the three.Yeah.",
    "start": "3740220",
    "end": "3746815"
  },
  {
    "text": "Ah so did you [inaudible] ask where the initial input embeddings weren't random,",
    "start": "3746815",
    "end": "3753069"
  },
  {
    "text": "instead of like GloVe or something? I considered it, but my, I took the philosophical view that I would introduce",
    "start": "3753070",
    "end": "3759369"
  },
  {
    "text": "no outside information in this competition and since the logistic regression model can't benefit from GloVe vectors,",
    "start": "3759370",
    "end": "3765100"
  },
  {
    "text": "at least not in the way that I implemented it, I would also not give the other models that advantage. My hunch is that if I brought in rich initialization",
    "start": "3765100",
    "end": "3772720"
  },
  {
    "text": "than the LSTMs would just jump up in performance. But they would have a lot more information at their disposal.",
    "start": "3772720",
    "end": "3778420"
  },
  {
    "text": "I guess my assumptions that the logistic regression has a lot more information [inaudible] cross products such a large feature space.",
    "start": "3778420",
    "end": "3785455"
  },
  {
    "text": "Yeah fair is fair, it's like I gave these three players the data and nothing more.",
    "start": "3785455",
    "end": "3792380"
  },
  {
    "text": "But another dimension to this problem would be,",
    "start": "3793470",
    "end": "3798910"
  },
  {
    "text": "if I compare an LSTM with and without BERT representations for its words,",
    "start": "3798910",
    "end": "3805450"
  },
  {
    "text": "where do the differences arise? And I think this could again illuminate like you probably even have some expectations",
    "start": "3805450",
    "end": "3811120"
  },
  {
    "text": "that it's going to do better at things like that involve general lexical information,",
    "start": "3811120",
    "end": "3816580"
  },
  {
    "text": "maybe word overlap, antonyms, maybe belief, negation. Um, but long sentence might be unaffected by this outside information. Maybe not though.",
    "start": "3816580",
    "end": "3825730"
  },
  {
    "text": "A couple more things.",
    "start": "3825730",
    "end": "3830859"
  },
  {
    "text": "So another thing that you can do in NLI, ah, is resort to some linguistic expectations that you might have.",
    "start": "3830860",
    "end": "3840085"
  },
  {
    "text": "So you could ask, for example, does your model know that negation is downward monotone?",
    "start": "3840085",
    "end": "3846550"
  },
  {
    "text": "That is, can it get right consistently that Fido ran entails Fido moved?",
    "start": "3846550",
    "end": "3852730"
  },
  {
    "text": "And Fido didn't move entails Fido didn't run? So the up arrow means I have entailment in that direction,",
    "start": "3852730",
    "end": "3859630"
  },
  {
    "text": "down entailment in that direction. And what this would mean for your model of course is that,",
    "start": "3859630",
    "end": "3866200"
  },
  {
    "text": "any example that you plugged in, maybe where you would say where it got this right, if you just add a negation it should get this one right.",
    "start": "3866200",
    "end": "3873355"
  },
  {
    "text": "In my experience, these models disappoint you and that they have not learned this.",
    "start": "3873355",
    "end": "3879010"
  },
  {
    "text": "And you will certainly be disappointed if you try something a little bit more sophisticated like, does your model know that every is",
    "start": "3879010",
    "end": "3885370"
  },
  {
    "text": "downward monotone on its first argument and upward on its second? This is a semantic fact that I think is very clear.",
    "start": "3885370",
    "end": "3892359"
  },
  {
    "text": "Um, but your model probably will not have the systematicity that leads you to think that yes it has fully encoded this logical fact.",
    "start": "3892360",
    "end": "3900100"
  },
  {
    "text": "You will find some examples where it seems to be behaving in accord with this generalization and others where it does something quite crazy,",
    "start": "3900100",
    "end": "3908380"
  },
  {
    "text": "even if it is performing well on a large-scale assessment like SNLI.",
    "start": "3908380",
    "end": "3914454"
  },
  {
    "text": "And that's something to think about. Here's a related thing just by way of wrapping up.",
    "start": "3914455",
    "end": "3920515"
  },
  {
    "text": "So I've mentioned before that, that Bill as part of his thesis did lots of rich work on natural logic, applying it to NLI tasks.",
    "start": "3920515",
    "end": "3929035"
  },
  {
    "text": "And natural logic has the characteristic that it has very sophisticated little algebras of semantic relationships.",
    "start": "3929035",
    "end": "3935800"
  },
  {
    "text": "And I've summarized one here. This is a kind of theory of negation, um,",
    "start": "3935800",
    "end": "3942115"
  },
  {
    "text": "where you know if I have p and q are disjoint like dog and couch,",
    "start": "3942115",
    "end": "3948819"
  },
  {
    "text": "then the negation of those two are neutral. And I filled out this whole table here and you can construct, um,",
    "start": "3948819",
    "end": "3957415"
  },
  {
    "text": "artificial data sets where you just insist that the lexical items, so to speak, have certain semantic relationships like entailment, consistency, overlap contradiction.",
    "start": "3957415",
    "end": "3966910"
  },
  {
    "text": "And then you can define the algebra on top of them and construct as many examples as you want in a kind of algorithmic fashion.",
    "start": "3966910",
    "end": "3973780"
  },
  {
    "text": "In past years of this class, we've done this as a homework problem just to have people confront the semantic subtleties.",
    "start": "3973780",
    "end": "3980185"
  },
  {
    "text": "And so then you could ask, if you train your model on a doubly-negated dataset,",
    "start": "3980185",
    "end": "3985435"
  },
  {
    "text": "an artificial one that you create like you know, not not p not not q. Does it generalize to the EEE negated cases?",
    "start": "3985435",
    "end": "3993865"
  },
  {
    "text": "You might think it should, right? It should have all the information that you need at that point because it's seen the base cases,",
    "start": "3993865",
    "end": "4000154"
  },
  {
    "text": "It's seen single negation and it should now know that double negation just kind of flips you back, or you know flips you to another systematic space in this little algebra.",
    "start": "4000155",
    "end": "4009405"
  },
  {
    "text": "Um, but again, I think it's unlikely that your model has fully learned",
    "start": "4009405",
    "end": "4014730"
  },
  {
    "text": "this algebra and you will see that as you try to ask it to make predictions about longer and longer sequences.",
    "start": "4014730",
    "end": "4020520"
  },
  {
    "text": "Um, and this is a nice way to stress test your model and I've given a few examples of papers that I think do this quite",
    "start": "4020520",
    "end": "4026940"
  },
  {
    "text": "well including one by who's on the teaching team. [BACKGROUND]",
    "start": "4026940",
    "end": "4032595"
  },
  {
    "text": "Trained on like not, not-p, not, not-q, not-p, not-q, p, not-q, not-p, q or just,",
    "start": "4032595",
    "end": "4039630"
  },
  {
    "text": "on not, not-p, not, not-q? I will do it on- yeah, that's a good point like the unnegated cases,",
    "start": "4039630",
    "end": "4046230"
  },
  {
    "text": "the singly, and the doubly. I would think that that's giving your model a fair chance to have seen all the relevant kinds of patterns,",
    "start": "4046230",
    "end": "4053190"
  },
  {
    "text": "and it should have everything it needs now to generalize to triple, quadruple, and so forth. Yeah.",
    "start": "4053190",
    "end": "4063900"
  },
  {
    "text": "When were cleaning, um, these types of models, they're completely not transmissible from one language to another even as we're part of the same language family because say,",
    "start": "4063900",
    "end": "4072330"
  },
  {
    "text": "for example, double negation is a thing in other languages that acts differently as in English, I would expect them not to work.",
    "start": "4072330",
    "end": "4078270"
  },
  {
    "text": "But say is we traded on a huge dataset of English words, English sentences, and that has included, I don't know,",
    "start": "4078270",
    "end": "4086880"
  },
  {
    "text": "some other sentences in a different language but related to English and then we test them on that different language,",
    "start": "4086880",
    "end": "4093300"
  },
  {
    "text": "we expected to pick up things that are- uh-",
    "start": "4093300",
    "end": "4097240"
  },
  {
    "text": "Yeah, it's a good question. For- for this probing artificial data case, this is meant to be sep- separate from any intuitions you might have about negation.",
    "start": "4098450",
    "end": "4107984"
  },
  {
    "text": "This is more like testing the sense in which the model is doing something systematic.",
    "start": "4107985",
    "end": "4113650"
  },
  {
    "text": "In the sense of cognitive science like has it really learned to abstract from your data a kind of systematic pattern as embodied in this little algebra up here?",
    "start": "4113650",
    "end": "4122464"
  },
  {
    "text": "And this is just nice because since you control all of the- all aspects of the model and the data that come in,",
    "start": "4122465",
    "end": "4129480"
  },
  {
    "text": "you can have a pretty good sense for whether you've posed this in a fair way, uh, and that can give you insight into what your model is actually capable of learning.",
    "start": "4129480",
    "end": "4137910"
  },
  {
    "text": "For the more general and interesting linguistic question of whether or not parameters you've learned on one language would transfer to others,",
    "start": "4137910",
    "end": "4145395"
  },
  {
    "text": "there are experiments of people trying to do that and in fact, you can try that for NLI because that Facebook group",
    "start": "4145395",
    "end": "4151799"
  },
  {
    "text": "released a version of MultiNLI, that is multilingual. Um, pursuing the hypothesis that there might be some abstract layers of",
    "start": "4151800",
    "end": "4160139"
  },
  {
    "text": "representation that are good for multiple languages. Yeah.",
    "start": "4160140",
    "end": "4166634"
  },
  {
    "text": "Yes, are you ultimately limited to feeding your model certain things and seeing what it spits out and you can't,",
    "start": "4166635",
    "end": "4173640"
  },
  {
    "text": "sort of, look inside and like look- obviously it's not easy to say have you learned the concept? And like look at the activations,",
    "start": "4173640",
    "end": "4179910"
  },
  {
    "text": "but is this still, sort of, the main way of asking this question? It's just throwing things in and seeing what comes out.",
    "start": "4179910",
    "end": "4185579"
  },
  {
    "text": "I'm just smiling because I, sort of, feel like the answer is yes, and this is just amusing because it's like a sense in",
    "start": "4185580",
    "end": "4192420"
  },
  {
    "text": "which deep learning has become like a psychology experiment, where instead of having humans come into the lab",
    "start": "4192420",
    "end": "4199800"
  },
  {
    "text": "where you probe them behaviorally to see what they know, you now have this black-box model that you probe behaviorally to see what it knows.",
    "start": "4199800",
    "end": "4207690"
  },
  {
    "text": "[LAUGHTER] Um, there are great papers that are trying to push us past this. Um, where you do, kind of,",
    "start": "4207690",
    "end": "4214785"
  },
  {
    "text": "you have another model that does some local expe- inspection of the parameters or maybe looks at how,",
    "start": "4214785",
    "end": "4221534"
  },
  {
    "text": "um, different examples as they pass through the network activate different parts of it to give you insight into what they actually have encoded.",
    "start": "4221535",
    "end": "4229500"
  },
  {
    "text": "But I think a lot of it still comes down to this kind of behavioral thing.",
    "start": "4229500",
    "end": "4234220"
  },
  {
    "text": "Which is not necessarily bad it just means that you might also wanna get good at running human subject experiments so that your artificial agents are treated fairly,",
    "start": "4234650",
    "end": "4242820"
  },
  {
    "text": "and the protocols. [NOISE] Yeah.",
    "start": "4242820",
    "end": "4248565"
  },
  {
    "text": "And sort of related to this- that I have seen some, kind of, optimism that attention is not only, kind of,",
    "start": "4248565",
    "end": "4254760"
  },
  {
    "text": "a performance enhancer but maybe also some kind of explanatory metric that you can look at or what does my model you're paying attention to,",
    "start": "4254760",
    "end": "4262410"
  },
  {
    "text": "and maybe get some insights there but I was just talking to someone recently who was saying that there's been a paper published recently and it's saying that attention,",
    "start": "4262410",
    "end": "4268739"
  },
  {
    "text": "actually, is not any good for this. It doesn't actually help us explain things. Wondering if you have any insight on that.",
    "start": "4268740",
    "end": "4275385"
  },
  {
    "text": "Yeah, again, I think there are differing opinions. My view would be- let me give you two views.",
    "start": "4275385",
    "end": "4281310"
  },
  {
    "text": "So first for NLI, when you look at the heat maps of the different attention weights that it has learned on word-by-word attention,",
    "start": "4281310",
    "end": "4289590"
  },
  {
    "text": "those seem often to be quite illuminating to me and do, kind of, reflect what you would expect that certain pairs of words across premise",
    "start": "4289590",
    "end": "4298040"
  },
  {
    "text": "and hypothesis are really informative about the classification label. So I think that all looks good to me.",
    "start": "4298040",
    "end": "4305469"
  },
  {
    "text": "Conversely like I was really excited when I saw people adding attention mechanisms into these problems because it kind of looked like it was a soft parse of the example,",
    "start": "4305470",
    "end": "4314790"
  },
  {
    "text": "like a dependency parse, and I thought that would be really cool because maybe you'd be able to read off of the attention weights",
    "start": "4314790",
    "end": "4320895"
  },
  {
    "text": "what the true parse was or maybe what the top most likely parses for this utterance were,",
    "start": "4320895",
    "end": "4326265"
  },
  {
    "text": "and I think that that dream is not quite realized, it's less clear that that's happening.",
    "start": "4326265",
    "end": "4332160"
  },
  {
    "text": "But for the NLI case, I think this is like one as- one way of making good on your- on what your goal was.",
    "start": "4332160",
    "end": "4339600"
  },
  {
    "text": "Do you have different views? [OVERLAPPING] You think a lot about these things. [LAUGHTER] We'll talk more about attention when we talk about the transformer,",
    "start": "4339600",
    "end": "4352920"
  },
  {
    "text": "and BERT, and ELMo, because attention is a big part of what makes those models work.",
    "start": "4352920",
    "end": "4359170"
  },
  {
    "text": "I think that was a lot of material, and so I think I won't try in this- in these last few minutes to do",
    "start": "4361220",
    "end": "4368130"
  },
  {
    "text": "the ambitious thing of showing you too much about these grounding slides, um, they are up.",
    "start": "4368130",
    "end": "4375570"
  },
  {
    "text": "Let me just show you just one thing. So this is about grounding, and what I did is,",
    "start": "4375570",
    "end": "4382829"
  },
  {
    "text": "I gave you a bunch of linguistic insights about why grounded language understanding is important, and then I frame this as speakers, listeners,",
    "start": "4382830",
    "end": "4390045"
  },
  {
    "text": "chat bots, and reasoning about other minds. And so I'll just say that speakers- that would be like what I've done for a lot of",
    "start": "4390045",
    "end": "4397110"
  },
  {
    "text": "these slides is focusing on colors, people describing colors, because it's a simple version of a very large class of interesting problems",
    "start": "4397110",
    "end": "4404909"
  },
  {
    "text": "and colors are great because they have like cognitive complexity and linguistic complexity. So for speakers here,",
    "start": "4404910",
    "end": "4410760"
  },
  {
    "text": "you could think of models that are learning to describe colors. And there's great data for that,",
    "start": "4410760",
    "end": "4416625"
  },
  {
    "text": "and this is a nice manageable problem that would allow you to confront,",
    "start": "4416625",
    "end": "4421875"
  },
  {
    "text": "um, like color to sequence, right? So color comes in and then you need to produce a description.",
    "start": "4421875",
    "end": "4428040"
  },
  {
    "text": "Then the listener view is the converse, right? So somebody gives you a color description and you need to make a guess about what color they are describing.",
    "start": "4428040",
    "end": "4435120"
  },
  {
    "text": "That's interestingly different, the inputs are different and the output space is a little bit, uh, harder to deal with.",
    "start": "4435120",
    "end": "4441735"
  },
  {
    "text": "And then grounded chat bots. You probably heard about chat bots? I think that they are often kind- kind of at C because they're just using language and",
    "start": "4441735",
    "end": "4449580"
  },
  {
    "text": "producing language and like they're not like actually connected to any problem or any social situation.",
    "start": "4449580",
    "end": "4454650"
  },
  {
    "text": "This group- this Facebook Paper, uh, on negotiation, is a data set where you have chat bots that are grounded in a goal oriented task,",
    "start": "4454650",
    "end": "4464084"
  },
  {
    "text": "and I think that's very exciting. So I've just tried to present their model in its basic form,",
    "start": "4464084",
    "end": "4469515"
  },
  {
    "text": "and you should know that it's a really cool dataset. And then for other minds, I've sort of made a connection between pragmatics and machine learning,",
    "start": "4469515",
    "end": "4479205"
  },
  {
    "text": "and another- and an interesting thing about that is that again, you have a bunch of really interesting quite manageable datasets for doing projects on.",
    "start": "4479205",
    "end": "4488535"
  },
  {
    "text": "And you guys are really well-prepared to think about all of these models, you'll find, if you look through, you'll see that because basically,",
    "start": "4488535",
    "end": "4494610"
  },
  {
    "text": "all of them are like NLI models where instead of having just one label, you have a label for every stage in your hypothesis or in your output space,",
    "start": "4494610",
    "end": "4503445"
  },
  {
    "text": "and what's called the decoder part of the problem. Really easy to implement based on what you guys have already done,",
    "start": "4503445",
    "end": "4509865"
  },
  {
    "text": "and then you have all these cool data sets to think about. So I'm gonna give you much more detail about that on Monday,",
    "start": "4509865",
    "end": "4515580"
  },
  {
    "text": "but if you're still casting about for projects, you might page through this and just, maybe, follow the links to various data sets and so forth,",
    "start": "4515580",
    "end": "4522510"
  },
  {
    "text": "because it is such a rich space. But let's stop for now, that's been enough content. Thanks everyone.",
    "start": "4522510",
    "end": "4529840"
  }
]