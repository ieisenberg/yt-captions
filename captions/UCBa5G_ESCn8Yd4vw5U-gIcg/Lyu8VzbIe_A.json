[
  {
    "start": "0",
    "end": "6000"
  },
  {
    "start": "0",
    "end": "6010"
  },
  {
    "start": "6000",
    "end": "173000"
  },
  {
    "text": "Hi, in the previous module,\nwe looked at modeling CSPs.",
    "start": "6010",
    "end": "10450"
  },
  {
    "text": "This module I'm going to\nstart talking about inference,",
    "start": "10450",
    "end": "13240"
  },
  {
    "text": "in particular\nintroducing backtracking",
    "start": "13240",
    "end": "16763"
  },
  {
    "text": "with dynamic ordering.",
    "start": "16763",
    "end": "17680"
  },
  {
    "start": "17680",
    "end": "20460"
  },
  {
    "text": "So just a quick refresher.",
    "start": "20460",
    "end": "22560"
  },
  {
    "text": "Remember a CSP is defined\nby a factor graph which",
    "start": "22560",
    "end": "27300"
  },
  {
    "text": "has a set of variables\nand where each variable",
    "start": "27300",
    "end": "31830"
  },
  {
    "text": "on some values in domain apply.",
    "start": "31830",
    "end": "35160"
  },
  {
    "text": "And it also has some factors f1\nthrough fm where each factor--",
    "start": "35160",
    "end": "40980"
  },
  {
    "text": "fj is a function that takes\na subset of the variables",
    "start": "40980",
    "end": "45270"
  },
  {
    "text": "and returns a\nnon-negative quantity.",
    "start": "45270",
    "end": "48900"
  },
  {
    "text": "So the assignment weight\nis defined as follows.",
    "start": "48900",
    "end": "53160"
  },
  {
    "text": "So each assignment\nto all the variables",
    "start": "53160",
    "end": "56670"
  },
  {
    "text": "has a weight, which is\ngiven by the product of all",
    "start": "56670",
    "end": "60909"
  },
  {
    "text": "of the factors.",
    "start": "60910",
    "end": "62520"
  },
  {
    "text": "And the goal in finding\nthis-- in solving CSP",
    "start": "62520",
    "end": "66120"
  },
  {
    "text": "is to compute the maximum\nweight assignment.",
    "start": "66120",
    "end": "69727"
  },
  {
    "start": "69727",
    "end": "76070"
  },
  {
    "text": "So let's start with backtracking\nsearch, which we already",
    "start": "76070",
    "end": "81740"
  },
  {
    "text": "talked about a little bit.",
    "start": "81740",
    "end": "83630"
  },
  {
    "text": "So the backtracking\nsearch is going",
    "start": "83630",
    "end": "85880"
  },
  {
    "text": "to be the kind of blueprint\nfor the current algorithm",
    "start": "85880",
    "end": "90140"
  },
  {
    "text": "that we're going to talk about.",
    "start": "90140",
    "end": "92729"
  },
  {
    "text": "So if we start with\nthe empty assignment,",
    "start": "92730",
    "end": "95880"
  },
  {
    "text": "no variable has [INAUDIBLE].",
    "start": "95880",
    "end": "98759"
  },
  {
    "text": "And we choose one\nof the variables,",
    "start": "98760",
    "end": "102390"
  },
  {
    "text": "assign a particular\nvalue, red in this case.",
    "start": "102390",
    "end": "106229"
  },
  {
    "text": "And then we recurse.",
    "start": "106230",
    "end": "107700"
  },
  {
    "text": "And we pick another\nvariable, assign the value",
    "start": "107700",
    "end": "110149"
  },
  {
    "text": "and keep on recursing.",
    "start": "110150",
    "end": "111810"
  },
  {
    "text": "Maybe we reach a leaf and then\nwe back up, backtrack and try",
    "start": "111810",
    "end": "117090"
  },
  {
    "text": "green, backtrack and try blue.",
    "start": "117090",
    "end": "121619"
  },
  {
    "text": "And then we backtrack up here.",
    "start": "121620",
    "end": "123510"
  },
  {
    "text": "Now, we're going to try\nsetting WA to green up here.",
    "start": "123510",
    "end": "128080"
  },
  {
    "text": "Explore this sub tree.",
    "start": "128080",
    "end": "129610"
  },
  {
    "text": "And we come back up.",
    "start": "129610",
    "end": "131190"
  },
  {
    "text": "Fix, explore NT green, NT\nblue, and so on and so forth.",
    "start": "131190",
    "end": "137470"
  },
  {
    "start": "137470",
    "end": "140730"
  },
  {
    "text": "So at the bottom of this\ntree, we have the leaves.",
    "start": "140730",
    "end": "145349"
  },
  {
    "text": "And each leaf is a\ncomplete assignment.",
    "start": "145350",
    "end": "150280"
  },
  {
    "text": "And each assignment adds a\nweight, which we can compute.",
    "start": "150280",
    "end": "155790"
  },
  {
    "text": "And now if once we search\nthrough all the assignments,",
    "start": "155790",
    "end": "158730"
  },
  {
    "text": "we simply take the\nassignment with a map.",
    "start": "158730",
    "end": "163480"
  },
  {
    "text": "So this is the most\nstraightforward way",
    "start": "163480",
    "end": "165310"
  },
  {
    "text": "of taking a CSP and solving\nit using backtracking search.",
    "start": "165310",
    "end": "172110"
  },
  {
    "text": "So the first thing we'll\nnote is that we can actually",
    "start": "172110",
    "end": "175410"
  },
  {
    "start": "173000",
    "end": "282000"
  },
  {
    "text": "compute weight of partial\nassignments as we go",
    "start": "175410",
    "end": "179730"
  },
  {
    "text": "rather than waiting\nuntil the very end",
    "start": "179730",
    "end": "182010"
  },
  {
    "text": "to compute the weight\nof an entire assignment.",
    "start": "182010",
    "end": "185069"
  },
  {
    "text": "So this is how it's\ngoing to proceed.",
    "start": "185070",
    "end": "188720"
  },
  {
    "text": "So let's start with\nempty assignment.",
    "start": "188720",
    "end": "191750"
  },
  {
    "text": "And we assign WA red.",
    "start": "191750",
    "end": "196040"
  },
  {
    "text": "And us we can't evaluate\nany of the factors so far--",
    "start": "196040",
    "end": "201260"
  },
  {
    "text": "but once we assign\nNT, we can actually",
    "start": "201260",
    "end": "205189"
  },
  {
    "text": "evaluate this factor and test\nwhether WA [INAUDIBLE] NT.",
    "start": "205190",
    "end": "210940"
  },
  {
    "text": "But these other factors\nwe can't evaluate yet",
    "start": "210940",
    "end": "213460"
  },
  {
    "text": "because we don't know\nthese values [INAUDIBLE]",
    "start": "213460",
    "end": "215590"
  },
  {
    "text": "values to these variables,\nbut we can move on.",
    "start": "215590",
    "end": "218800"
  },
  {
    "text": "Now we recurse.",
    "start": "218800",
    "end": "220000"
  },
  {
    "text": "We assign SA value.",
    "start": "220000",
    "end": "222250"
  },
  {
    "text": "And now we can assign.",
    "start": "222250",
    "end": "224320"
  },
  {
    "text": "We can evaluate these\nfactors, WA not equal to SA",
    "start": "224320",
    "end": "229200"
  },
  {
    "text": "and NT not equal to SA.",
    "start": "229200",
    "end": "231480"
  },
  {
    "text": "Then we assign q.",
    "start": "231480",
    "end": "233879"
  },
  {
    "text": "We kind of evaluate\nthese two factors.",
    "start": "233880",
    "end": "237010"
  },
  {
    "text": "In NSW, we can evaluate\nthese two factors",
    "start": "237010",
    "end": "240750"
  },
  {
    "text": "and assign v. We\ncan now reassign.",
    "start": "240750",
    "end": "245280"
  },
  {
    "text": "Evaluate these two factors.",
    "start": "245280",
    "end": "246810"
  },
  {
    "text": "And these are all\nthe factors in TSE.",
    "start": "246810",
    "end": "251200"
  },
  {
    "text": "So at any point in\ntime, for example,",
    "start": "251200",
    "end": "253690"
  },
  {
    "text": "at NSW, we have this\npartial assignment here,",
    "start": "253690",
    "end": "259390"
  },
  {
    "text": "and we define the weight\nof that partial assignment",
    "start": "259390",
    "end": "263050"
  },
  {
    "text": "to be the product\nof all the factors",
    "start": "263050",
    "end": "266229"
  },
  {
    "text": "that we can evaluate where all\nthe factors are evaluated--",
    "start": "266230",
    "end": "272000"
  },
  {
    "text": "are evaluable if all the\nvariables scope of that factor",
    "start": "272000",
    "end": "277450"
  },
  {
    "text": "have been met.",
    "start": "277450",
    "end": "279040"
  },
  {
    "start": "279040",
    "end": "282990"
  },
  {
    "start": "282000",
    "end": "328000"
  },
  {
    "text": "So more formally, it shows\nwe have a partial assignment.",
    "start": "282990",
    "end": "286319"
  },
  {
    "text": "And [INAUDIBLE] as follows.",
    "start": "286320",
    "end": "289950"
  },
  {
    "text": "We're going to define the set\nof dependent factors as follows.",
    "start": "289950",
    "end": "295320"
  },
  {
    "text": "So d of a partial assignment\nx and a particular variable Xi",
    "start": "295320",
    "end": "300660"
  },
  {
    "text": "is the set of factors\ndepending on Xi and x",
    "start": "300660",
    "end": "305100"
  },
  {
    "text": "but not on the\nunassigned variable.",
    "start": "305100",
    "end": "308020"
  },
  {
    "text": "So, for example, D of this\npartial assignment up here",
    "start": "308020",
    "end": "313000"
  },
  {
    "text": "and this variable SA are\nsimply these two factors here.",
    "start": "313000",
    "end": "319660"
  },
  {
    "start": "319660",
    "end": "322400"
  },
  {
    "text": "These are the factors\nthat are going to be",
    "start": "322400",
    "end": "324150"
  },
  {
    "text": "multiplied in when Xi is set.",
    "start": "324150",
    "end": "329250"
  },
  {
    "start": "328000",
    "end": "516000"
  },
  {
    "text": "OK, so now we're\nready to present",
    "start": "329250",
    "end": "331080"
  },
  {
    "text": "our main backtracking\nsearch algorithm, OK?",
    "start": "331080",
    "end": "335159"
  },
  {
    "text": "So this is going to be a kind\nof general blueprint for many",
    "start": "335160",
    "end": "339300"
  },
  {
    "text": "of the bells and whistles that\nwe're going to talk about soon.",
    "start": "339300",
    "end": "343710"
  },
  {
    "text": "So backtrack takes a partial\nassignment x, and the weight",
    "start": "343710",
    "end": "348120"
  },
  {
    "text": "of that partial\nassignment, which",
    "start": "348120",
    "end": "350190"
  },
  {
    "text": "is all the factors that we can\nevaluate so far and domains,",
    "start": "350190",
    "end": "354240"
  },
  {
    "text": "which specifies valid\npossible values for each",
    "start": "354240",
    "end": "359198"
  },
  {
    "text": "of the variables in the CSP.",
    "start": "359198",
    "end": "360365"
  },
  {
    "text": "More on a slide in a bit.",
    "start": "360365",
    "end": "361406"
  },
  {
    "start": "361407",
    "end": "364180"
  },
  {
    "text": "Well, if x is a\ncomplete assignment,",
    "start": "364180",
    "end": "366820"
  },
  {
    "text": "then we have reached a leaf.",
    "start": "366820",
    "end": "368980"
  },
  {
    "text": "And we look at its weight and\nwe update our current best.",
    "start": "368980",
    "end": "374950"
  },
  {
    "text": "And we return.",
    "start": "374950",
    "end": "377760"
  },
  {
    "text": "If not, we're going to choose\nan unassigned variable Xi.",
    "start": "377760",
    "end": "382420"
  },
  {
    "text": "We're going to look at the\nvalues in the domain i of Xi",
    "start": "382420",
    "end": "389500"
  },
  {
    "text": "and order them somehow.",
    "start": "389500",
    "end": "392020"
  },
  {
    "text": "We're going to go through\neach value in that order,",
    "start": "392020",
    "end": "395690"
  },
  {
    "text": "and we're going to\ncompute a weight update.",
    "start": "395690",
    "end": "400460"
  },
  {
    "text": "So we're going to look\nat this assignment, which",
    "start": "400460",
    "end": "403100"
  },
  {
    "text": "is the x extended\nwith Xi set to v.",
    "start": "403100",
    "end": "408710"
  },
  {
    "text": "And then we're going to\nlook at all the factors",
    "start": "408710",
    "end": "411440"
  },
  {
    "text": "in the dependent\nset of factors of x,",
    "start": "411440",
    "end": "414140"
  },
  {
    "text": "the partial assignment,\nand new variable Xi",
    "start": "414140",
    "end": "417260"
  },
  {
    "text": "that we're going to assign.",
    "start": "417260",
    "end": "419300"
  },
  {
    "text": "Multiply all the\nfactors evaluated",
    "start": "419300",
    "end": "422900"
  },
  {
    "text": "at this extended assignment.",
    "start": "422900",
    "end": "425460"
  },
  {
    "text": "That number we're going to\ncall delta, which is going",
    "start": "425460",
    "end": "429169"
  },
  {
    "text": "to be the update on w, OK?",
    "start": "429170",
    "end": "432650"
  },
  {
    "text": "If delta equals 0,\nthen we stop there",
    "start": "432650",
    "end": "437120"
  },
  {
    "text": "and don't recurse further.",
    "start": "437120",
    "end": "439160"
  },
  {
    "text": "Because remember\nany 0 by a factor",
    "start": "439160",
    "end": "444500"
  },
  {
    "text": "is enough to zero out the--",
    "start": "444500",
    "end": "447680"
  },
  {
    "text": "this-- the weight of\ntheir given assignment.",
    "start": "447680",
    "end": "452310"
  },
  {
    "text": "So if not, then we continue.",
    "start": "452310",
    "end": "454662"
  },
  {
    "text": "We're going to do\nthis thing called",
    "start": "454662",
    "end": "456120"
  },
  {
    "text": "look ahead, which\ntakes the domains",
    "start": "456120",
    "end": "458970"
  },
  {
    "text": "and tries to reduce them, tries\nto prune away things based",
    "start": "458970",
    "end": "464220"
  },
  {
    "text": "on this new assignment Xi2.",
    "start": "464220",
    "end": "467750"
  },
  {
    "start": "467750",
    "end": "470310"
  },
  {
    "text": "So now if any of these\ndomains become empty,",
    "start": "470310",
    "end": "473040"
  },
  {
    "text": "then we can again prune\nand stop recursing.",
    "start": "473040",
    "end": "477780"
  },
  {
    "text": "Otherwise, we're going\nto recurse and backtrack",
    "start": "477780",
    "end": "480990"
  },
  {
    "text": "on this extended assignment\nwith this updated weight,",
    "start": "480990",
    "end": "485099"
  },
  {
    "text": "w times delta, and the\nnew domains that we've",
    "start": "485100",
    "end": "489660"
  },
  {
    "text": "completed via lookahead.",
    "start": "489660",
    "end": "492490"
  },
  {
    "text": "OK, so this recipe has\nthree choice points--",
    "start": "492490",
    "end": "497020"
  },
  {
    "text": "how to choose the\nunassigned variable,",
    "start": "497020",
    "end": "499599"
  },
  {
    "text": "how to order the\nvalues of the assign--",
    "start": "499600",
    "end": "502840"
  },
  {
    "text": "unassigned variable,\nand finally this",
    "start": "502840",
    "end": "506080"
  },
  {
    "text": "look ahead, which\nis how we prune it.",
    "start": "506080",
    "end": "509270"
  },
  {
    "text": "So we're going to talk\nabout each of these in turn,",
    "start": "509270",
    "end": "512479"
  },
  {
    "text": "starting with the lookahead.",
    "start": "512480",
    "end": "514219"
  },
  {
    "start": "514220",
    "end": "517459"
  },
  {
    "start": "516000",
    "end": "671000"
  },
  {
    "text": "So we're going to introduce\na simple form of lookahead",
    "start": "517460",
    "end": "520669"
  },
  {
    "text": "called forward checking.",
    "start": "520669",
    "end": "522709"
  },
  {
    "text": "OK, so first we're going to\nvisualize the domains of each",
    "start": "522709",
    "end": "527839"
  },
  {
    "text": "of the variables with\nthis set of valid colors",
    "start": "527840",
    "end": "531050"
  },
  {
    "text": "above the respective\n[INAUDIBLE]..",
    "start": "531050",
    "end": "533360"
  },
  {
    "text": "So in the empty assignment,\nall the values are allowed.",
    "start": "533360",
    "end": "538610"
  },
  {
    "text": "OK, so now we're going to\nset, let's say, WA equals red.",
    "start": "538610",
    "end": "546649"
  },
  {
    "text": "So at this point,\ntwo things happened.",
    "start": "546650",
    "end": "548390"
  },
  {
    "text": "First, we wipe out the all--",
    "start": "548390",
    "end": "551060"
  },
  {
    "text": "the other values from\nthat variable, which",
    "start": "551060",
    "end": "554240"
  },
  {
    "text": "is clear that WA [INAUDIBLE].",
    "start": "554240",
    "end": "556399"
  },
  {
    "text": "We're committing to that.",
    "start": "556400",
    "end": "558200"
  },
  {
    "text": "But in addition, what\nwe're going to do",
    "start": "558200",
    "end": "560510"
  },
  {
    "text": "is do one step lookahead\nforward checking.",
    "start": "560510",
    "end": "563900"
  },
  {
    "text": "So we're going to eliminate\nthe inconsistent values",
    "start": "563900",
    "end": "566750"
  },
  {
    "text": "from the domains\nof Xi's neighbors.",
    "start": "566750",
    "end": "569660"
  },
  {
    "text": "So in this case, we're going\nto look at the neighbors of WA,",
    "start": "569660",
    "end": "572209"
  },
  {
    "text": "which are NT and SA.",
    "start": "572210",
    "end": "574130"
  },
  {
    "text": "And we're going to remove\nred from those domains.",
    "start": "574130",
    "end": "579320"
  },
  {
    "text": "And why is that?",
    "start": "579320",
    "end": "580010"
  },
  {
    "text": "Because this factor says\nthat, well, if this is red,",
    "start": "580010",
    "end": "583130"
  },
  {
    "text": "then this can't be red.",
    "start": "583130",
    "end": "584990"
  },
  {
    "text": "The red is gone now.",
    "start": "584990",
    "end": "587570"
  },
  {
    "text": "OK, so now backtracking\nsearch is going to recurse,",
    "start": "587570",
    "end": "592130"
  },
  {
    "text": "and it's going to, let's\nsay, it sets NT to green.",
    "start": "592130",
    "end": "597860"
  },
  {
    "text": "So now, again, I do\none step lookahead.",
    "start": "597860",
    "end": "600410"
  },
  {
    "text": "Look at the neighbors of NT.",
    "start": "600410",
    "end": "601850"
  },
  {
    "text": "And I'm going to wipe out\ngreen from [INAUDIBLE]..",
    "start": "601850",
    "end": "607259"
  },
  {
    "text": "OK, so suppose I recurse again.",
    "start": "607260",
    "end": "609600"
  },
  {
    "text": "And now I set q to be blue.",
    "start": "609600",
    "end": "615680"
  },
  {
    "text": "So again one step lookahead.",
    "start": "615680",
    "end": "617510"
  },
  {
    "text": "I'm going to wipe out\nblue from my neighbors.",
    "start": "617510",
    "end": "622430"
  },
  {
    "text": "Now look at what happens.",
    "start": "622430",
    "end": "624170"
  },
  {
    "text": "SA has an empty\ndomain, which means",
    "start": "624170",
    "end": "628290"
  },
  {
    "text": "that there are no\npossible values that I",
    "start": "628290",
    "end": "630959"
  },
  {
    "text": "can set SA to make the\nassignment consistent.",
    "start": "630960",
    "end": "638080"
  },
  {
    "text": "So in this case if any\ndomain becomes empty,",
    "start": "638080",
    "end": "640270"
  },
  {
    "text": "I simply return here.",
    "start": "640270",
    "end": "643300"
  },
  {
    "text": "And this is important because--",
    "start": "643300",
    "end": "645610"
  },
  {
    "text": "now, all of these\nother variables",
    "start": "645610",
    "end": "647950"
  },
  {
    "text": "have not been set yet.",
    "start": "647950",
    "end": "649720"
  },
  {
    "text": "And rather than\nrecursing and trying",
    "start": "649720",
    "end": "651730"
  },
  {
    "text": "to set them all sorts\nof different ways,",
    "start": "651730",
    "end": "653620"
  },
  {
    "text": "I already know at this point\nthat SA is not settable.",
    "start": "653620",
    "end": "658750"
  },
  {
    "text": "So I just stop there.",
    "start": "658750",
    "end": "662528"
  },
  {
    "text": "So this allows-- Forward\nchecking allows me",
    "start": "662528",
    "end": "664320"
  },
  {
    "text": "to use these domains to prune.",
    "start": "664320",
    "end": "666842"
  },
  {
    "start": "666842",
    "end": "670220"
  },
  {
    "text": "OK, so forward\nchecking is also going",
    "start": "670220",
    "end": "672350"
  },
  {
    "start": "671000",
    "end": "738000"
  },
  {
    "text": "to allow me to choose\nanother unassigned variable",
    "start": "672350",
    "end": "676819"
  },
  {
    "text": "and order the values\nin in a variable.",
    "start": "676820",
    "end": "678950"
  },
  {
    "text": "I'll show as follows.",
    "start": "678950",
    "end": "681860"
  },
  {
    "text": "So suppose we're\nin this situation.",
    "start": "681860",
    "end": "683839"
  },
  {
    "text": "So WA and NT happens [INAUDIBLE]\napplied forward checking",
    "start": "683840",
    "end": "687800"
  },
  {
    "text": "to propagate the constraint\nto the-- all the neighbours.",
    "start": "687800",
    "end": "693070"
  },
  {
    "text": "And now the question is, which\nvariable do I assign there?",
    "start": "693070",
    "end": "697080"
  },
  {
    "text": "So there is this\nheuristic called",
    "start": "697080",
    "end": "699120"
  },
  {
    "text": "most constrained\nvariable, MCV, which",
    "start": "699120",
    "end": "703110"
  },
  {
    "text": "simply chooses the variable that\nhas the smallest domain, OK?",
    "start": "703110",
    "end": "707310"
  },
  {
    "text": "So what's the domain size here?",
    "start": "707310",
    "end": "711600"
  },
  {
    "text": "So there's two elements\nof q, three elements here,",
    "start": "711600",
    "end": "716160"
  },
  {
    "text": "one element here.",
    "start": "716160",
    "end": "717750"
  },
  {
    "text": "So SA is the variable that\nhas the smallest domain.",
    "start": "717750",
    "end": "721890"
  },
  {
    "text": "It has only one element.",
    "start": "721890",
    "end": "724140"
  },
  {
    "text": "And the intuition here\nis I want to restrict",
    "start": "724140",
    "end": "726840"
  },
  {
    "text": "the branching factor\nand choose variables",
    "start": "726840",
    "end": "729630"
  },
  {
    "text": "that have small\nbranching, determined",
    "start": "729630",
    "end": "734340"
  },
  {
    "text": "by the number of\nelements in that domain.",
    "start": "734340",
    "end": "736490"
  },
  {
    "start": "736490",
    "end": "739740"
  },
  {
    "start": "738000",
    "end": "872000"
  },
  {
    "text": "So the second choice point is\nonce I've selected a variable,",
    "start": "739740",
    "end": "746310"
  },
  {
    "text": "how do I order the\nvalues to explore?",
    "start": "746310",
    "end": "750279"
  },
  {
    "text": "So consider the following.",
    "start": "750280",
    "end": "751900"
  },
  {
    "text": "So I'm just trying to\nassign a value to q.",
    "start": "751900",
    "end": "755650"
  },
  {
    "text": "Do I first try red,\nor do I try blue?",
    "start": "755650",
    "end": "761160"
  },
  {
    "text": "So the idea behind\nthis heuristic",
    "start": "761160",
    "end": "763920"
  },
  {
    "text": "called least\nconstrained value is",
    "start": "763920",
    "end": "766019"
  },
  {
    "text": "I'm going to order the\nvalues of the selected Xi",
    "start": "766020",
    "end": "773220"
  },
  {
    "text": "by decreasing number\nof consistent values",
    "start": "773220",
    "end": "776310"
  },
  {
    "text": "of neighboring variables, OK?",
    "start": "776310",
    "end": "778710"
  },
  {
    "text": "And what does this\nmean on this example?",
    "start": "778710",
    "end": "780660"
  },
  {
    "text": "So I look at q.",
    "start": "780660",
    "end": "782699"
  },
  {
    "text": "And remember I set this\nto red tentatively.",
    "start": "782700",
    "end": "787450"
  },
  {
    "text": "And I propagate via forward\nchecking to its neighbors.",
    "start": "787450",
    "end": "791470"
  },
  {
    "text": "So I wiped out red here.",
    "start": "791470",
    "end": "793660"
  },
  {
    "text": "And now I look at the\nneighbors and say,",
    "start": "793660",
    "end": "796000"
  },
  {
    "text": "how many possible\nconsistent values are there?",
    "start": "796000",
    "end": "799450"
  },
  {
    "text": "So there are 2 plus 2 plus\n2, so that's 6 values.",
    "start": "799450",
    "end": "805550"
  },
  {
    "text": "And what about if I\nset it to blue here?",
    "start": "805550",
    "end": "808130"
  },
  {
    "text": "And I eliminate blue\nfrom these neighbors.",
    "start": "808130",
    "end": "812240"
  },
  {
    "text": "And the number of consistent\nvalues is 1 plus 1",
    "start": "812240",
    "end": "815149"
  },
  {
    "text": "plus 2, which is 4 here.",
    "start": "815150",
    "end": "818480"
  },
  {
    "text": "6 is larger than 4, so I'm\ngoing to try red in this case.",
    "start": "818480",
    "end": "824000"
  },
  {
    "text": "So intuitively why\ndoes this make sense?",
    "start": "824000",
    "end": "827120"
  },
  {
    "text": "I want to choose a\nvalue that gives us",
    "start": "827120",
    "end": "829820"
  },
  {
    "text": "much freedom as possible\nto its neighbors",
    "start": "829820",
    "end": "833030"
  },
  {
    "text": "so that I don't run\ninto trouble and get",
    "start": "833030",
    "end": "836570"
  },
  {
    "text": "things to be inconsistent here.",
    "start": "836570",
    "end": "839320"
  },
  {
    "text": "And you can see that by\nhaving red here and red here,",
    "start": "839320",
    "end": "844990"
  },
  {
    "text": "I have more options for\nthe neighbors NT and SA.",
    "start": "844990",
    "end": "849399"
  },
  {
    "text": "Then over here if-- since\nI can only do green here,",
    "start": "849400",
    "end": "853960"
  },
  {
    "text": "and you can-- if you\nlook even one step ahead,",
    "start": "853960",
    "end": "857440"
  },
  {
    "text": "you'll notice that this is\nalready going to cause trouble.",
    "start": "857440",
    "end": "862730"
  },
  {
    "text": "OK, so least constrained\nvalue order the values to--",
    "start": "862730",
    "end": "867620"
  },
  {
    "text": "in order to free up the\nneighbors as much as possible.",
    "start": "867620",
    "end": "871010"
  },
  {
    "start": "871010",
    "end": "873770"
  },
  {
    "start": "872000",
    "end": "950000"
  },
  {
    "text": "So this might seem a\nlittle bit strange.",
    "start": "873770",
    "end": "877070"
  },
  {
    "text": "So most constrained variable--\nleast constrained value",
    "start": "877070",
    "end": "881450"
  },
  {
    "text": "seem superficially kind\nof at odds with each other",
    "start": "881450",
    "end": "885230"
  },
  {
    "text": "but there is a reasoning,\nwhich is that variables",
    "start": "885230",
    "end": "890000"
  },
  {
    "text": "and values are very different.",
    "start": "890000",
    "end": "892940"
  },
  {
    "text": "So in a CSP, every\nvariable must be assigned.",
    "start": "892940",
    "end": "898040"
  },
  {
    "text": "We can't leave a variable\nalone and hope that the problem",
    "start": "898040",
    "end": "903350"
  },
  {
    "text": "will disappear later.",
    "start": "903350",
    "end": "905592"
  },
  {
    "text": "So what we're going\nto do is we're",
    "start": "905593",
    "end": "907010"
  },
  {
    "text": "going to try to choose the\nmost constrained variables",
    "start": "907010",
    "end": "910130"
  },
  {
    "text": "as possible.",
    "start": "910130",
    "end": "910880"
  },
  {
    "text": "So if we're going to fail, we're\ngoing to choose the hardest",
    "start": "910880",
    "end": "913520"
  },
  {
    "text": "variables first to try.",
    "start": "913520",
    "end": "915860"
  },
  {
    "text": "And we might as well fail early,\nwhich leads to more pruning.",
    "start": "915860",
    "end": "920720"
  },
  {
    "text": "On the other hand, values are--",
    "start": "920720",
    "end": "924977"
  },
  {
    "text": "those that we're\ngoing to choose-- we",
    "start": "924978",
    "end": "926520"
  },
  {
    "text": "just need to choose some\nvalue for each variable.",
    "start": "926520",
    "end": "930235"
  },
  {
    "text": "So what are we\ngoing to try to do",
    "start": "930235",
    "end": "931610"
  },
  {
    "text": "is choose the value that is most\nlikely to lead to a solution.",
    "start": "931610",
    "end": "937760"
  },
  {
    "text": "It doesn't matter if some\nvalue is going to cause trouble",
    "start": "937760",
    "end": "942290"
  },
  {
    "text": "because if we choose a\nvalue that happens to work,",
    "start": "942290",
    "end": "946220"
  },
  {
    "text": "then maybe we'll be happy.",
    "start": "946220",
    "end": "950439"
  },
  {
    "start": "950000",
    "end": "1067000"
  },
  {
    "text": "So when do these heuristics\nhelp kind of formally?",
    "start": "950440",
    "end": "954090"
  },
  {
    "text": "The most constrained variable is\nuseful when some of the factors",
    "start": "954090",
    "end": "957960"
  },
  {
    "text": "are constrained.",
    "start": "957960",
    "end": "960770"
  },
  {
    "text": "It's OK if some of the\nfactors are not constrained,",
    "start": "960770",
    "end": "964370"
  },
  {
    "text": "but it's important that at\nleast one of the factors",
    "start": "964370",
    "end": "970720"
  },
  {
    "text": "is a constraint,\nwhich means that it's",
    "start": "970720",
    "end": "973060"
  },
  {
    "text": "something that returns--",
    "start": "973060",
    "end": "974830"
  },
  {
    "text": "can return 0.",
    "start": "974830",
    "end": "976180"
  },
  {
    "text": "If all the factors are\nreturning non-zero values,",
    "start": "976180",
    "end": "980770"
  },
  {
    "text": "then none of these heuristics\nare going to be helpful.",
    "start": "980770",
    "end": "983320"
  },
  {
    "text": "You kind of have to\nexplore everything.",
    "start": "983320",
    "end": "987420"
  },
  {
    "text": "Least constrained\nvalue is useful",
    "start": "987420",
    "end": "989130"
  },
  {
    "text": "when all the factors\nare constraints.",
    "start": "989130",
    "end": "992550"
  },
  {
    "text": "In other words, the assignment\nweights are 1 and-- or 0.",
    "start": "992550",
    "end": "997040"
  },
  {
    "text": "So they have to look\nlike this but not",
    "start": "997040",
    "end": "999350"
  },
  {
    "text": "like [INAUDIBLE] factor.",
    "start": "999350",
    "end": "1001850"
  },
  {
    "text": "And the rationale here\nis that we have to--",
    "start": "1001850",
    "end": "1007595"
  },
  {
    "start": "1007595",
    "end": "1010170"
  },
  {
    "text": "we don't have to find all of\nthe assignments in this case.",
    "start": "1010170",
    "end": "1014970"
  },
  {
    "text": "If we find an assignment\nthat has weight 1,",
    "start": "1014970",
    "end": "1019680"
  },
  {
    "text": "then we know we're\ndone because 1",
    "start": "1019680",
    "end": "1021930"
  },
  {
    "text": "is the maximum weight possible.",
    "start": "1021930",
    "end": "1024000"
  },
  {
    "text": "And we just return\nimmediately and stop early.",
    "start": "1024000",
    "end": "1028380"
  },
  {
    "text": "But if there's other factors\nwhich have varying values--",
    "start": "1028380",
    "end": "1034349"
  },
  {
    "text": "or varying weights of\ndifferent magnitudes,",
    "start": "1034349",
    "end": "1036720"
  },
  {
    "text": "then we can't necessarily\nstop if we find a weight of 2.",
    "start": "1036720",
    "end": "1039718"
  },
  {
    "text": "Well, maybe there's a\nweight-- another assignment",
    "start": "1039718",
    "end": "1041760"
  },
  {
    "text": "that has a weight of\n4 or 8 or 17 or so on.",
    "start": "1041760",
    "end": "1046680"
  },
  {
    "text": "We can't really stop early in.",
    "start": "1046680",
    "end": "1050310"
  },
  {
    "text": "And notice that we need\nforward checking to make",
    "start": "1050310",
    "end": "1053850"
  },
  {
    "text": "both of these things work.",
    "start": "1053850",
    "end": "1055020"
  },
  {
    "text": "Because these heuristics rely on\ncounting the number of elements",
    "start": "1055020",
    "end": "1059820"
  },
  {
    "text": "in domains.",
    "start": "1059820",
    "end": "1060750"
  },
  {
    "text": "And so we need to groom\nor prune these domains",
    "start": "1060750",
    "end": "1063900"
  },
  {
    "text": "so that the heuristics are--",
    "start": "1063900",
    "end": "1065460"
  },
  {
    "start": "1065460",
    "end": "1068700"
  },
  {
    "start": "1067000",
    "end": "1157000"
  },
  {
    "text": "OK, so let's conclude here.",
    "start": "1068700",
    "end": "1070440"
  },
  {
    "text": "So we presented\nbacktracking search.",
    "start": "1070440",
    "end": "1073779"
  },
  {
    "text": "So backtracking search\nhas three choice points.",
    "start": "1073780",
    "end": "1078190"
  },
  {
    "text": "First, we need to choose\nan unassigned variable Xi.",
    "start": "1078190",
    "end": "1082809"
  },
  {
    "text": "This is done by using most\nconstrained variable, MCV.",
    "start": "1082810",
    "end": "1089200"
  },
  {
    "text": "Once we found a\nvariable to assign,",
    "start": "1089200",
    "end": "1092590"
  },
  {
    "text": "we're going to order the values\nof that unassigned variable",
    "start": "1092590",
    "end": "1098340"
  },
  {
    "text": "based on the LCV heuristic\nor a least constrained value.",
    "start": "1098340",
    "end": "1104230"
  },
  {
    "text": "And then we're going\nto compute the updated",
    "start": "1104230",
    "end": "1109299"
  },
  {
    "text": "weight as we discussed before.",
    "start": "1109300",
    "end": "1112300"
  },
  {
    "text": "And then we're going to update\nthe domains via one step",
    "start": "1112300",
    "end": "1117760"
  },
  {
    "text": "look ahead, a.k.a.",
    "start": "1117760",
    "end": "1118960"
  },
  {
    "text": "forward checking.",
    "start": "1118960",
    "end": "1120960"
  },
  {
    "text": "And then if the number of\nelements in any domain is 0,",
    "start": "1120960",
    "end": "1125520"
  },
  {
    "text": "then we stop there and recurse--",
    "start": "1125520",
    "end": "1127800"
  },
  {
    "text": "don't recurse\notherwise [INAUDIBLE]..",
    "start": "1127800",
    "end": "1130870"
  },
  {
    "text": "OK.",
    "start": "1130870",
    "end": "1131370"
  },
  {
    "text": "So notice that none\nof these heuristics",
    "start": "1131370",
    "end": "1133320"
  },
  {
    "text": "is guaranteed to speed\nup backtracking search.",
    "start": "1133320",
    "end": "1136980"
  },
  {
    "text": "There's no theory here but\noften in practice these",
    "start": "1136980",
    "end": "1141270"
  },
  {
    "text": "can make a big difference.",
    "start": "1141270",
    "end": "1142980"
  },
  {
    "text": "So next time we'll\nlook at the lookahead.",
    "start": "1142980",
    "end": "1146549"
  },
  {
    "text": "and see how we can even\nimprove upon forward checking.",
    "start": "1146550",
    "end": "1150470"
  },
  {
    "text": "So that's it.",
    "start": "1150470",
    "end": "1152330"
  },
  {
    "start": "1152330",
    "end": "1156000"
  }
]