[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "Hi everyone. Uh, welcome to lecture number seven. Um, so, up to now, uh,",
    "start": "4400",
    "end": "11295"
  },
  {
    "text": "I believe, can you hear me in the back? Is it easy? Okay. So, in the last set of module that you've seen,",
    "start": "11295",
    "end": "18990"
  },
  {
    "text": "you've learned about convolutional neural networks and how they can be applied to imaging, notably.",
    "start": "18990",
    "end": "24509"
  },
  {
    "text": "Uh, you've played with different types of layers including pooling, max pooling, average pooling, and convolutional layers.",
    "start": "24510",
    "end": "32750"
  },
  {
    "text": "You've also seen some classification, uh, with the most classic algorithms,",
    "start": "32750",
    "end": "38685"
  },
  {
    "text": "uh, all the way up to Inception and, and ResNets. Uh, and then you jumped into advanced application like object detection with YOLO,",
    "start": "38685",
    "end": "46550"
  },
  {
    "text": "uh, and the Fast R-CNN, Faster R-CNN series with an optional video. And finally, uh, face recognition and",
    "start": "46550",
    "end": "53899"
  },
  {
    "text": "neural style transfer that we talked a little bit about in the past lectures. So, today, we are going to build on top of everything you've seen in this set of modules,",
    "start": "53900",
    "end": "61699"
  },
  {
    "text": "to try to delve into the neural networks and interpret them. Because you, you, you notice after seeing, uh,",
    "start": "61700",
    "end": "67875"
  },
  {
    "text": "the set of modules up to now that a lot of, uh, improvements of the neural networks are based on trial and error.",
    "start": "67875",
    "end": "76220"
  },
  {
    "text": "So, we try something, uh, we do hyperparameter search, sometimes the model improves, sometimes it doesn't.",
    "start": "76220",
    "end": "82100"
  },
  {
    "text": "We use a validation set to find the right set of methods that would make our model improve.",
    "start": "82100",
    "end": "87500"
  },
  {
    "text": "It's not satisfactory from a scientific standpoint, so people are also searching how can we find, uh,",
    "start": "87500",
    "end": "94585"
  },
  {
    "text": "an effective way to improve our neural networks, not only with trial and error, but with theory that goes into the network and visualizations.",
    "start": "94585",
    "end": "102425"
  },
  {
    "text": "So, today, we will focus on that. We first, uh, we'll see three methods,",
    "start": "102425",
    "end": "107530"
  },
  {
    "start": "105000",
    "end": "167000"
  },
  {
    "text": "saliency maps, occlusion sensitivity, and class activation maps, which are used to kind of understand what was the decision process of the network.",
    "start": "107530",
    "end": "117740"
  },
  {
    "text": "Given this output, how can we map back the output decision on the input space to",
    "start": "117740",
    "end": "124340"
  },
  {
    "text": "see which part of the inputs were discriminative for this output. And later on, we will delve even more in",
    "start": "124340",
    "end": "130700"
  },
  {
    "text": "details into the network by looking at intermediate layers, what happens at an activation level, at a layer level,",
    "start": "130700",
    "end": "136835"
  },
  {
    "text": "and at a network level with another set of methods, gradient ascent class model visualization,",
    "start": "136835",
    "end": "142460"
  },
  {
    "text": "dataset search, and deconvolution. We will spend some time on the deconvolution because it's,",
    "start": "142460",
    "end": "148160"
  },
  {
    "text": "uh, it's a cool, it's a cool type of, uh, mathematical operation to know and it will give you",
    "start": "148160",
    "end": "154070"
  },
  {
    "text": "more intuition on how the convolution works from a mathematical perspective. Uh, if we have time, we'll go over a fun application called Deep Dream, um,",
    "start": "154070",
    "end": "162420"
  },
  {
    "text": "which is super cool visuals for some of you who know it. Okay? Let's go.",
    "start": "162420",
    "end": "167785"
  },
  {
    "start": "167000",
    "end": "272000"
  },
  {
    "text": "Menti code is on the board, if you guys need to, to sign up. So, uh, as usual,",
    "start": "167785",
    "end": "173700"
  },
  {
    "text": "we'll go over some context, trial information and small case studies, so don't hesitate to participate.",
    "start": "173700",
    "end": "179570"
  },
  {
    "text": "So, you've built an animal classifier for a pet shop, um, and you gave it to them.",
    "start": "179570",
    "end": "184950"
  },
  {
    "text": "It's, it's super good. It's been trained, uh, on ImageNet plus some other data. And what, what is a little worrying is that",
    "start": "184950",
    "end": "192935"
  },
  {
    "text": "the pet shop is a little reluctant to use your network, because they don't understand the decision process of the model.",
    "start": "192935",
    "end": "199535"
  },
  {
    "text": "So, how can you quickly show that the model is actually looking at a specific animal,",
    "start": "199535",
    "end": "205850"
  },
  {
    "text": "let's say a cat, if I give it an input that is a cat. We've seen that together,",
    "start": "205850",
    "end": "212400"
  },
  {
    "text": "one time, everybody remembers? So, I'll go quickly. Uh, you have a network, here is a dog given as an input to a CNN.",
    "start": "212400",
    "end": "219785"
  },
  {
    "text": "The CNN assuming the constraint is that there is one animal per image was trained with a Softmax output layer and we get a probability distribution over all animals,",
    "start": "219785",
    "end": "228775"
  },
  {
    "text": "iguana, dog, car, uh, cat and crab. And what we want is to take the derivative of",
    "start": "228775",
    "end": "235819"
  },
  {
    "text": "the score of dog and backpropagate it to the input to know which parts of the inputs were discriminative for this score of dog.",
    "start": "235820",
    "end": "243870"
  },
  {
    "text": "Does that make sense? Everybody remembers this? And so, the interesting part is that this value is the same shape as x.",
    "start": "243870",
    "end": "251630"
  },
  {
    "text": "So, it's the size of the input. It's a matrix of numbers. If the numbers are large in absolute value,",
    "start": "251630",
    "end": "256790"
  },
  {
    "text": "it means the pixels corresponding to these locations had an impact on the score of dog.",
    "start": "256790",
    "end": "261920"
  },
  {
    "text": "Okay? What do you think the score of dog is? Is it the output probability or no?",
    "start": "261920",
    "end": "268055"
  },
  {
    "text": "What- wha- wha- what do I mean by s of dog? [NOISE]",
    "start": "268055",
    "end": "281360"
  },
  {
    "start": "272000",
    "end": "455000"
  },
  {
    "text": "Yeah? Score of the dog? It's the score of the dog, yeah. But is it, uh, 0.85, that's what I mean?",
    "start": "281360",
    "end": "287910"
  },
  {
    "text": "[NOISE] No, there are actually formulas used to compute the 0.85, going to the softmax [inaudible]",
    "start": "287910",
    "end": "293370"
  },
  {
    "text": "Yes. So, it's the, it's the score that is pre-softmax. It's the score that comes before the softmax.",
    "start": "293370",
    "end": "300120"
  },
  {
    "text": "So, as a reminder, here's a softmax layer and this is how it could be presented. So, you get as a vector, that is a set of scores that are not necessarily probabilities,",
    "start": "300120",
    "end": "309220"
  },
  {
    "text": "they are just scores between minus infinity and plus infinity. You give them to the softmax and",
    "start": "309220",
    "end": "314570"
  },
  {
    "text": "the softmax, what it's going to do is that it's going to output a vector where the sum of all the probabilities in this vector are going to sum up to one.",
    "start": "314570",
    "end": "322565"
  },
  {
    "text": "Okay? And so, the issue is if instead of using the derivative of what we called Y hat last time,",
    "start": "322565",
    "end": "330155"
  },
  {
    "text": "we use the score of dog, we will get a better representation here. The reason is in order to maximize this number,",
    "start": "330155",
    "end": "338245"
  },
  {
    "text": "score of dog divided by the sum of the score of al- all animals, or like maybe I,",
    "start": "338245",
    "end": "344240"
  },
  {
    "text": "I should write exponential of score of dog divided by sum of exponential of the score of all animals.",
    "start": "344240",
    "end": "350000"
  },
  {
    "text": "One way is to minimize the su- the scores of all the other animals rather than maximizing the score of dog.",
    "start": "350000",
    "end": "358370"
  },
  {
    "text": "So, you see, so maybe moving a certain pixel will minimize the score of fish. And so, this pixel will have a high influence on Y hat,",
    "start": "358370",
    "end": "367020"
  },
  {
    "text": "the general output of the network. But it actually doesn't have an influence on the score of dog one layer before. Does it make sense?",
    "start": "367020",
    "end": "375160"
  },
  {
    "text": "So, that's why we would use, uh, the scores pre-softmax instead of using the scores post-softmax that are the probabilities.",
    "start": "375160",
    "end": "383520"
  },
  {
    "text": "Okay. And what's fun is here you cannot see that, the slides are online if you wanna- if you wanna look at it on your computers.",
    "start": "383520",
    "end": "390770"
  },
  {
    "text": "But you have some of the pixels that are roughly the same positions as the dog is on the input image that are stronger.",
    "start": "390770",
    "end": "398020"
  },
  {
    "text": "So, we see some white pixels here. And this can be used to segment the- the dog probably.",
    "start": "398020",
    "end": "404855"
  },
  {
    "text": "So, you could use a simple thresholding to find where the dog was based on this pixel,",
    "start": "404855",
    "end": "410965"
  },
  {
    "text": "uh, pixel derivative, the pixel score map. It doesn't work too- too well in practice,",
    "start": "410965",
    "end": "418200"
  },
  {
    "text": "so we have better methods to do segmentation, but this can be done as well. So, this is what is called saliency maps,",
    "start": "418200",
    "end": "425770"
  },
  {
    "text": "and it's a common technique to quickly, uh, visualize, uh, what the network is looking at.",
    "start": "425770",
    "end": "430824"
  },
  {
    "text": "In practice, we will use other methods. So, here's another contextual story.",
    "start": "430825",
    "end": "437735"
  },
  {
    "text": "Now you've built the animal classifier, they're still a little scared, but you wanna prove that the model is actually looking",
    "start": "437735",
    "end": "443050"
  },
  {
    "text": "at the input image at the right position. You don't need to be quick but you have to be very precise.",
    "start": "443050",
    "end": "448840"
  },
  {
    "text": "[NOISE] Yeah? So, going back from the last slide, is the saliency map that edge detection, one pixel border?",
    "start": "448840",
    "end": "455670"
  },
  {
    "start": "455000",
    "end": "653000"
  },
  {
    "text": "No, the saliency map is literally distinct here. Okay. It's the values of the de- the derivative.",
    "start": "455670",
    "end": "463229"
  },
  {
    "text": "Oh, okay. So, it's like the gradient's at [inaudible] So, you- you take the score of dog,",
    "start": "463230",
    "end": "468840"
  },
  {
    "text": "you backpropagate the gradient all the way to the inputs, it gives you a matrix that's exactly the same size as the x.",
    "start": "468840",
    "end": "474065"
  },
  {
    "text": "And you use- you use like a specific color scheme to see which pixels are the strongest.",
    "start": "474065",
    "end": "479225"
  },
  {
    "text": "Perfect, thank you. Okay. So, here we have our CNN.",
    "start": "479225",
    "end": "484425"
  },
  {
    "text": "The dog is forward propagated and you get a score of, uh, probability score for the dog.",
    "start": "484425",
    "end": "490860"
  },
  {
    "text": "Now, you want a method that is more precise than the previous one but not necessarily too fast. And this one, we've talked about it a little bit, it's occlusion sensitivity.",
    "start": "490860",
    "end": "499310"
  },
  {
    "text": "So, the idea here is to put a gray square on the dog here.",
    "start": "499310",
    "end": "504395"
  },
  {
    "text": "And we propagate this image with the gray square at this position through the CNN.",
    "start": "504395",
    "end": "510110"
  },
  {
    "text": "What we get is another probability distribution that is probably similar to the one we had before, because the gray square doesn't seem to impact too much of the image.",
    "start": "510110",
    "end": "517485"
  },
  {
    "text": "At-, uh, at least from a human perspective, we still see a dog, right? So, the score of dog might be high, 83 percent probably.",
    "start": "517485",
    "end": "525455"
  },
  {
    "text": "What we can say, is that we can build a probability map corresponding to the class dog and ha- and we",
    "start": "525455",
    "end": "532170"
  },
  {
    "text": "will write down on this map how confident is the network if the gray square is at a specific location.",
    "start": "532170",
    "end": "539730"
  },
  {
    "text": "So, for our first location, it seems that the network is very confident, so let's put a red square here.",
    "start": "539730",
    "end": "545329"
  },
  {
    "text": "Now, I'm going to move the gray square a little bit. I'm shifting it just as we do for a convolution and I'm going",
    "start": "545330",
    "end": "550940"
  },
  {
    "text": "to send again this new image in the network. It's going to give me",
    "start": "550940",
    "end": "555995"
  },
  {
    "text": "a new probability distribution output and the score of dog might change. So, looking at the score of dog,",
    "start": "555995",
    "end": "562070"
  },
  {
    "text": "I'm going to say, okay, the network is still very confident that there is a dog here, and I continue.",
    "start": "562070",
    "end": "567495"
  },
  {
    "text": "I shift it again, here same, network's still very confident that there is a dog. Now, I shift the, the, the square, um,",
    "start": "567495",
    "end": "574290"
  },
  {
    "text": "vertically down, and I see that partial, that the- the face of the dog is partially occluded.",
    "start": "574290",
    "end": "581019"
  },
  {
    "text": "Probability of dog will probably go down, because the network cannot see one eye of the dog.",
    "start": "581020",
    "end": "586589"
  },
  {
    "text": "It's not confident that there's a dog anymore. So, probably, the confidence of the network went down.",
    "start": "586590",
    "end": "592970"
  },
  {
    "text": "I'm going to put a, a square that is tending to be blue, and I continue. I shift it again and here we don't see the dog face anymore.",
    "start": "592970",
    "end": "601205"
  },
  {
    "text": "So, probably the network might, might classify this as a chair, right?",
    "start": "601205",
    "end": "606215"
  },
  {
    "text": "Because the chair is more obvious than the dog now. And so, the probability score of dog might go down.",
    "start": "606215",
    "end": "611500"
  },
  {
    "text": "So, I'm gonna put a blue square here and we're going to continue. Here, we don't see the tail of the dog,",
    "start": "611500",
    "end": "618345"
  },
  {
    "text": "it's still fine, the network is pretty confident, and so on. And what I will look at now is",
    "start": "618345",
    "end": "625070"
  },
  {
    "text": "this probability map which tells me roughly where the dog is. So, here we used a pretty big filter compared to the size of the image.",
    "start": "625070",
    "end": "632180"
  },
  {
    "text": "The smaller the, sorry, the pretty big gray square, the smaller the gray square,",
    "start": "632180",
    "end": "637630"
  },
  {
    "text": "the more precise this probability map is going to be. Does that make sense? So, this is,",
    "start": "637630",
    "end": "643850"
  },
  {
    "text": "if you have time, if you can, you can take your time with the pet shop to explain them, uh, what's happening, you would do that. Yeah?",
    "start": "643850",
    "end": "651845"
  },
  {
    "text": "Would you ever, in an occlusion type of situation have an increase in the probability not just a decrease, say, you removed the noise from the picture?",
    "start": "651845",
    "end": "659681"
  },
  {
    "start": "653000",
    "end": "786000"
  },
  {
    "text": "We will see that in the next slide. That's correct. So let's see more examples. Here, we have three classes and these, these,",
    "start": "659682",
    "end": "666235"
  },
  {
    "text": "these images has been- have been generated by Matthew Zeiler and Rob Fergus. This paper, Visualizing and Understanding Convolutional Networks,",
    "start": "666235",
    "end": "674725"
  },
  {
    "text": "is one of the seminal paper that has led the research in in visualizing and interpreting neural networks.",
    "start": "674725",
    "end": "680545"
  },
  {
    "text": "So, I'd advise you to take a look at it, and we will refer to it a lot of time in this lecture. So, now we have three examples.",
    "start": "680545",
    "end": "686890"
  },
  {
    "text": "One is a pomeranian, which is this type of cute dog, a car wheel, which is the true class of the second image,",
    "start": "686890",
    "end": "693610"
  },
  {
    "text": "and an Afghan Hound, which is this type of dog here on the last image.",
    "start": "693610",
    "end": "698830"
  },
  {
    "text": "So, if you do the same thing as we did before that's what you would see. So, just to clarify,",
    "start": "698830",
    "end": "706524"
  },
  {
    "text": "here we see a blue color. It means when the gray square was positioned here or centered at this location,",
    "start": "706524",
    "end": "713845"
  },
  {
    "text": "the network was less confident that the true class was pomeranian. And in fact, if you look at the paper they explained that when a gray square was here,",
    "start": "713845",
    "end": "724450"
  },
  {
    "text": "the confidence of pomeranian went down because the conference, because the confidence of tennis ball went up.",
    "start": "724450",
    "end": "730840"
  },
  {
    "text": "And in fact, the pomeranian dog has a tennis ball in the mouth. And another interesting thing to notice is on the last picture here.",
    "start": "730840",
    "end": "738835"
  },
  {
    "text": "You see that there is a, a red color on the top left of the image.",
    "start": "738835",
    "end": "745060"
  },
  {
    "text": "And this is you exactly as what- as what you mentioned Adam is that, when the square was on the face of the human,",
    "start": "745060",
    "end": "751585"
  },
  {
    "text": "the network was much more confident that the true cla- that the true class was the dog. Because you removed a lot of",
    "start": "751585",
    "end": "758500"
  },
  {
    "text": "meaningful information for the network which has the face of the human. And similarly, if you put the square on the dog,",
    "start": "758500",
    "end": "765580"
  },
  {
    "text": "the true class that the network was outputting was human probably, does make sense?",
    "start": "765580",
    "end": "772670"
  },
  {
    "text": "Okay. So, this is called occlusion sensitivity, and it's the second method that you now have seen for",
    "start": "772860",
    "end": "780519"
  },
  {
    "text": "interpreting where the network looks at on an input.",
    "start": "780520",
    "end": "785660"
  },
  {
    "start": "786000",
    "end": "1479000"
  },
  {
    "text": "So, let's move to class activation maps. So, I don't know if you remember, but two weeks ago, Pranav when he",
    "start": "786510",
    "end": "792970"
  },
  {
    "text": "discussed the techniques that he has used in healthcare, he explained that you get a- he did a chest x-ray.",
    "start": "792970",
    "end": "801595"
  },
  {
    "text": "And he manages to, to tell the doctor where the network is looking at when predicting",
    "start": "801595",
    "end": "807940"
  },
  {
    "text": "a certain disease based on his chest X-ray, right? You remember that? So, this was done through class activation maps,",
    "start": "807940",
    "end": "814735"
  },
  {
    "text": "and that's what we're going to see now. So, one important thing to notice is that we discussed that",
    "start": "814735",
    "end": "822310"
  },
  {
    "text": "classification networks seem to have a very good localization ability,",
    "start": "822310",
    "end": "828085"
  },
  {
    "text": "and we can see it with the two methods that we previously discussed. Same thing, for those of you who have read the yellow paper,",
    "start": "828085",
    "end": "835435"
  },
  {
    "text": "that you've studied in this set of modules. The YOLOv2 algorithm has first been trained on classification,",
    "start": "835435",
    "end": "842230"
  },
  {
    "text": "because classification has a lot of data, a lot more than object detection. Has been trained on classification,",
    "start": "842230",
    "end": "848350"
  },
  {
    "text": "builds a very good localization ability and then has been fine-tuned, and retrained on object detection datasets.",
    "start": "848350",
    "end": "855055"
  },
  {
    "text": "Okay. And so the core idea of class activation map is to show that",
    "start": "855055",
    "end": "860154"
  },
  {
    "text": "CNNs have a very good localization ability even if they were trained only on image level labels.",
    "start": "860155",
    "end": "867460"
  },
  {
    "text": "So, we have this network. There is a very classic network used for classification.",
    "start": "867460",
    "end": "873925"
  },
  {
    "text": "We give it a kid and a dog. Uh, this class activation map is coming from MIT,",
    "start": "873925",
    "end": "880030"
  },
  {
    "text": "the MIT lab with Bolei Zhou et al in 2016. And forward propagate this image of a kid with",
    "start": "880030",
    "end": "886180"
  },
  {
    "text": "a dog through the network which has some CONV, ReLU, MAX POOL, classic series of layers, several of them.",
    "start": "886180",
    "end": "892720"
  },
  {
    "text": "And at the end, you usually flatten the last output volume of the CONV, and run it through several fully connected layer",
    "start": "892720",
    "end": "900250"
  },
  {
    "text": "which are going to play the role of the classifier, and send it to a softmax, and get the probability output.",
    "start": "900250",
    "end": "906610"
  },
  {
    "text": "Now, what we're going to do is that we are going to prove that this CNN is generalizing to localization.",
    "start": "906610",
    "end": "913209"
  },
  {
    "text": "So, we're going to convert this same network in another network. And the part which is going to change is only the last part.",
    "start": "913210",
    "end": "920500"
  },
  {
    "text": "The downside of using flattened plus fully connected is that you lose all spatial information, right?",
    "start": "920500",
    "end": "929185"
  },
  {
    "text": "You have a volume that has spatial information, although it's been going through some max pooling,",
    "start": "929185",
    "end": "934269"
  },
  {
    "text": "so it's been down sampled and you lost some part of the spatial localization. Flattening kills it, you flatten it you",
    "start": "934270",
    "end": "940540"
  },
  {
    "text": "run it through a fully connected layer, and then it's over. You- it-s, it's super hard to find out where",
    "start": "940540",
    "end": "946060"
  },
  {
    "text": "the activation was corresponds to on the input space. So, instead of using flattened plus fully-connected,",
    "start": "946060",
    "end": "952195"
  },
  {
    "text": "we're going to use global average pooling. We're going to explain what it is. A fully connected softmax layer and get the probability output.",
    "start": "952195",
    "end": "959980"
  },
  {
    "text": "And we're going to show that now this network can be trained very quickly because we just need to train one layer,",
    "start": "959980",
    "end": "966445"
  },
  {
    "text": "the fully connected here, and can show where the network looks at. The same as the previous network.",
    "start": "966445",
    "end": "972654"
  },
  {
    "text": "So, let's talk about it more in detail. Assume this was the last CONV layer of our network,",
    "start": "972655",
    "end": "978759"
  },
  {
    "text": "and it outputs a volume, a volume that is sized to simplify four by four by six.",
    "start": "978760",
    "end": "984550"
  },
  {
    "text": "So, six filters were used in the last CONV. And so we have six feature maps now. Does that makes sense?",
    "start": "984550",
    "end": "992230"
  },
  {
    "text": "I'm going to convert this using a gla- global average pooling to just a vector of six values.",
    "start": "992230",
    "end": "997600"
  },
  {
    "text": "What is global average pooling? It's just taking these feature maps. Each of them averaging them into one number.",
    "start": "997600",
    "end": "1004005"
  },
  {
    "text": "So, now instead of having a four by four by six volume, I have a one by one by six volume,",
    "start": "1004005",
    "end": "1010980"
  },
  {
    "text": "but we can call it a vector. Does that make sense? So, what's interesting is that this number,",
    "start": "1010980",
    "end": "1017490"
  },
  {
    "text": "actually holds the information of the whole feature map that came before in, one number being averaged over it.",
    "start": "1017490",
    "end": "1025260"
  },
  {
    "text": "I'm going to put these in a vector, and I'm going to call them activations. As usual a_1, a_2,",
    "start": "1025260",
    "end": "1032339"
  },
  {
    "text": "a_3, a_4, a_5, a_6. As I said, I'm going to train a fully-connected layer here with the softmax activation,",
    "start": "1032340",
    "end": "1040454"
  },
  {
    "text": "and the outputs are going to be the probabilities. So, what is interesting about that?",
    "start": "1040454",
    "end": "1046185"
  },
  {
    "text": "It's that the feature maps here as you know will contain some visual patterns. So, if I look at the first feature map,",
    "start": "1046185",
    "end": "1053340"
  },
  {
    "text": "I can plot it here, so these are the values. And of course, this one is much more granular than four by four.",
    "start": "1053340",
    "end": "1060720"
  },
  {
    "text": "It's not a four by four it's much more numbers. But this- you can say that this is the feature map, and it seems that the activations have found something here.",
    "start": "1060720",
    "end": "1068805"
  },
  {
    "text": "There was a visual pattern in the inputs that activated the feature map, and the filters which generated this feature map here in this location.",
    "start": "1068805",
    "end": "1077115"
  },
  {
    "text": "Same for the second one, there's probably two objects or two patterns that activated the filters that generated this feature map, and so on.",
    "start": "1077115",
    "end": "1087225"
  },
  {
    "text": "So we have six of those. And after I've trained my fully connected layers here- my fully connected layer,",
    "start": "1087225",
    "end": "1094905"
  },
  {
    "text": "I look at the score of dog. Score of dog is 91 percent. What I can do is to know this 91 percent,",
    "start": "1094905",
    "end": "1103740"
  },
  {
    "text": "how much did it come from these feature maps? And how can I know it?",
    "start": "1103740",
    "end": "1108795"
  },
  {
    "text": "It's because now I have a direct mapping using the weights. I know that the weight number one here,",
    "start": "1108795",
    "end": "1114779"
  },
  {
    "text": "this edge you see it, is how much the score was dependent on the orange feature map?",
    "start": "1114780",
    "end": "1122710"
  },
  {
    "text": "Does that makes sense? The second weight, if you look at the green edge,",
    "start": "1123500",
    "end": "1129495"
  },
  {
    "text": "is the weights that has multiplied this feature map to give birth to the outputs of a dog.",
    "start": "1129495",
    "end": "1137625"
  },
  {
    "text": "So, this weight is telling me how much this feature map the green one has influence on the output. Does that makes sense?",
    "start": "1137625",
    "end": "1146070"
  },
  {
    "text": "So, now what I can do is to sum all of these, a weighted sum of all these feature maps.",
    "start": "1146070",
    "end": "1152535"
  },
  {
    "text": "And if I just do this weighted sum, I will get another feature map. Something like that. And you notice that,",
    "start": "1152535",
    "end": "1160290"
  },
  {
    "text": "this one seems to be highly influenced by the green one, the green feature map, yeah.",
    "start": "1160290",
    "end": "1165885"
  },
  {
    "text": "It means probably the weight here was higher. It probably means that the second feature of",
    "start": "1165885",
    "end": "1174450"
  },
  {
    "text": "the last CONV was the one that was looking at the dog. Does that make sense?",
    "start": "1174450",
    "end": "1181600"
  },
  {
    "text": "Okay. And then, once I get this feature map, this feature map is not the size of the input image, right?",
    "start": "1182570",
    "end": "1188370"
  },
  {
    "text": "It's the size of the height and width of the output of the last CONV.",
    "start": "1188370",
    "end": "1193785"
  },
  {
    "text": "So, the only thing I'm going to do is, I am going to up sample it back simply, so that it fits the size of the input image,",
    "start": "1193785",
    "end": "1200505"
  },
  {
    "text": "and I'm going to overlay it on the input image to get my class activation map. The reason it's called class activation map is because",
    "start": "1200505",
    "end": "1207995"
  },
  {
    "text": "this feature map is dependent on the class you're talking about. If I was using, uh,",
    "start": "1207995",
    "end": "1214054"
  },
  {
    "text": "let's say I was using car here, if I was using car,",
    "start": "1214055",
    "end": "1219690"
  },
  {
    "text": "the weights would have been different, right? Look at the edges that connect the first activation to the activation of the previous layer.",
    "start": "1219690",
    "end": "1227565"
  },
  {
    "text": "These weights are different. So, if I sum all of these feature maps I'm going to get something else.",
    "start": "1227565",
    "end": "1233130"
  },
  {
    "text": "Does that make sense? So, this is class activation maps.",
    "start": "1233130",
    "end": "1238090"
  },
  {
    "text": "And in fact, there is a dog here and there is a human there. And what you can notice is,",
    "start": "1238940",
    "end": "1244620"
  },
  {
    "text": "probably if I look at the class of human the weights number one might be very high,",
    "start": "1244620",
    "end": "1250665"
  },
  {
    "text": "because it seems that this visual pattern that activated the first feature map was the face of the kid.",
    "start": "1250665",
    "end": "1257790"
  },
  {
    "text": "Okay. So, what is super cool is that you can get your network, and just change the last few layers into",
    "start": "1258800",
    "end": "1264690"
  },
  {
    "text": "global average pooling plus a softmax fully connected layer. And you can do that, and visualize very well.",
    "start": "1264690",
    "end": "1269940"
  },
  {
    "text": "It requires a small fine tuning. Yeah.",
    "start": "1269940",
    "end": "1276029"
  },
  {
    "text": "So are these like saliency maps, but for the activation? It's a different vocabulary, I would use saliency maps for the backpropagation up to",
    "start": "1276030",
    "end": "1283320"
  },
  {
    "text": "the pixels and class activation maps related to one class [NOISE]. Uh, it's not the backpropagation at all,",
    "start": "1283320",
    "end": "1290865"
  },
  {
    "text": "it's just an up sampling to the, to the input space based on the feature maps of the last CONV layer. So it's mostly just examining the weights and sort of doing like a max operation on a,",
    "start": "1290865",
    "end": "1302640"
  },
  {
    "text": "on them, not so much that different from backpropagation. Yes. Good [NOISE].",
    "start": "1302640",
    "end": "1308400"
  },
  {
    "text": "Any other questions on class activation maps? Yes. Does taking the average not kill the spatial information?",
    "start": "1308400",
    "end": "1313860"
  },
  {
    "text": "Yeah. That's a good question. So, taking the average, does it kill the spatial information? So, let me, let me write down the formula here.",
    "start": "1313860",
    "end": "1320355"
  },
  {
    "text": "This is the score that we're interested in, let's say dog plus C. What you could say is that this score",
    "start": "1320355",
    "end": "1327585"
  },
  {
    "text": "is a sum of K equals one to six of WK,",
    "start": "1327585",
    "end": "1333330"
  },
  {
    "text": "which is the, the weight that, that connects the output activation to the previous layer,",
    "start": "1333330",
    "end": "1338835"
  },
  {
    "text": "times what's times A of the previous layer. Uh, let's say we, we,",
    "start": "1338835",
    "end": "1345495"
  },
  {
    "text": "we use a notation that is like K is the Kth feature map and IJ is the location and I sum that over the locations.",
    "start": "1345495",
    "end": "1355870"
  },
  {
    "text": "Can you see in the back? Roughly? So, what I'm saying is that here,",
    "start": "1355910",
    "end": "1362045"
  },
  {
    "text": "I have my global average pooling that happened here and I can divide it by the certain number, so divided by 16, four by four.",
    "start": "1362045",
    "end": "1371150"
  },
  {
    "text": "Okay. I can switch the two sums, so I can say that this thing is a sum over IJ",
    "start": "1371150",
    "end": "1379140"
  },
  {
    "text": "the locations times sum over K equals one to six of what,",
    "start": "1379140",
    "end": "1388605"
  },
  {
    "text": "WK times AK, so the activations of",
    "start": "1388605",
    "end": "1394770"
  },
  {
    "text": "the Kth feature map in position a- IJ and times the normalization, 116.",
    "start": "1394770",
    "end": "1402015"
  },
  {
    "text": "Does it make sense? Does this makes sense?",
    "start": "1402015",
    "end": "1408060"
  },
  {
    "text": "So I, I still have the, the, the location, I still moved, I still moved the sum around and what I could do is to say that this thing is",
    "start": "1408060",
    "end": "1419625"
  },
  {
    "text": "the score in location IJ of the class activation map,",
    "start": "1419625",
    "end": "1428850"
  },
  {
    "text": "is a class score for this location IJ and I'm summing it over all locations.",
    "start": "1428850",
    "end": "1435345"
  },
  {
    "text": "So, just by flipping what the average pooling was doing over the locations, I can say that my weighting, using my weights,",
    "start": "1435345",
    "end": "1443549"
  },
  {
    "text": "all the activation in a specific location for all the feature maps,",
    "start": "1443550",
    "end": "1448800"
  },
  {
    "text": "I can get the score of this position in regards to the final output.",
    "start": "1448800",
    "end": "1454710"
  },
  {
    "text": "Does that makes sense? So, we- we're not losing the spatial information.",
    "start": "1454710",
    "end": "1461130"
  },
  {
    "text": "[NOISE] The reason we're not losing it is because we know,",
    "start": "1461130",
    "end": "1467970"
  },
  {
    "text": "we know what the feature maps are. Right. We know what they are and we know that they've been averaged exactly,",
    "start": "1467970",
    "end": "1473880"
  },
  {
    "text": "so we exactly can map it back. Were you giving only one way to each [inaudible].",
    "start": "1473880",
    "end": "1482160"
  },
  {
    "start": "1479000",
    "end": "1588000"
  },
  {
    "text": "Yeah. Because we, we assume that each filter that generated these feature maps detects one, one specific thing.",
    "start": "1482160",
    "end": "1489760"
  },
  {
    "text": "So, like if, if this is the feature map it means assuming the filter was detecting dog,",
    "start": "1489800",
    "end": "1496470"
  },
  {
    "text": "that we're going to see just, just something here meaning that there is a dog here and if there was a dog on",
    "start": "1496470",
    "end": "1504090"
  },
  {
    "text": "the lower part of the image we would also have strong activations in these parts. [NOISE] I,",
    "start": "1504090",
    "end": "1509440"
  },
  {
    "text": "I, I say if you wanna see more of the map behind it, check the paper, but this is the intuition behind it.",
    "start": "1512210",
    "end": "1520830"
  },
  {
    "text": "You can flip the summations using the global average pooling and show that you keep the spatial information.",
    "start": "1520830",
    "end": "1527500"
  },
  {
    "text": "The thing is you do the global average pooling, but you don't lose the feature maps because you know where they were from the output of the count, right?",
    "start": "1527720",
    "end": "1535605"
  },
  {
    "text": "So, you're not, you're not deleting this information. That makes sense? Yeah.",
    "start": "1535605",
    "end": "1541905"
  },
  {
    "text": "So, the summation of, uh, the activation is K divided by 16 is instead of taking the average, right, for that [inaudible].",
    "start": "1541905",
    "end": "1547800"
  },
  {
    "text": "Yeah. [NOISE] Okay, let's move on and watch a cool video on how act- class activation maps work.",
    "start": "1547800",
    "end": "1556095"
  },
  {
    "text": "This video was from Kyle McDonald.",
    "start": "1556095",
    "end": "1559210"
  },
  {
    "text": "And it's, uh, it's live so it's very quick.",
    "start": "1561200",
    "end": "1566049"
  },
  {
    "text": "So, you can see that the network is looking at this speed boat.",
    "start": "1569710",
    "end": "1574320"
  },
  {
    "text": "Okay. So now, the three methods we've",
    "start": "1580390",
    "end": "1591050"
  },
  {
    "text": "seen are methods that are roughly mapping back the output to",
    "start": "1591050",
    "end": "1597920"
  },
  {
    "text": "the input space and helping us visualize which parts of the inputs were the most discriminative to lead to this output and the decision of the network.",
    "start": "1597920",
    "end": "1606140"
  },
  {
    "text": "Now we're going to try to delve more into details in the, in the, in the intermediate layers of the network and try to interpret how does",
    "start": "1606140",
    "end": "1614280"
  },
  {
    "text": "the network see our world, not necessarily related to a specific input, but in general.",
    "start": "1614280",
    "end": "1619755"
  },
  {
    "text": "Okay. So, the pet shop now trusts your model",
    "start": "1619755",
    "end": "1625755"
  },
  {
    "text": "because you- you've used occlusion sensitivity, saliency maps, and class activation maps to show that the model is looking at the right place,",
    "start": "1625755",
    "end": "1631409"
  },
  {
    "text": "uh, but they got a little scared when you did that. And they asked you to explain what the model thinks a dog is.",
    "start": "1631410",
    "end": "1640470"
  },
  {
    "text": "So, you have this trained convolutional neural network and you have an output probability.",
    "start": "1640470",
    "end": "1647175"
  },
  {
    "start": "1646000",
    "end": "1726000"
  },
  {
    "text": "Yeah, let me take one in the back. Yeah. Um, what are some good ways to visualize like non-image data?",
    "start": "1647175",
    "end": "1654390"
  },
  {
    "text": "Non-image data that's a, that's a good question. It's actually, so the reason we're seeing images was mo- most of the resources being [NOISE] focusing on images,",
    "start": "1654390",
    "end": "1661470"
  },
  {
    "text": "um, if you look at let's say time series data. So, either speech or natural language,",
    "start": "1661470",
    "end": "1668145"
  },
  {
    "text": "the main way to realize those is, uh, with the attention method, uh, are you familiar with that?",
    "start": "1668145",
    "end": "1674700"
  },
  {
    "text": "So, in the next set of modules that you're going to start this week and you will just study in the next two weeks you will see a visualization method called attention models,",
    "start": "1674700",
    "end": "1682919"
  },
  {
    "text": "which will tell you which part of a sentence was important, let's say to output a number like assuming you're doing machine translation.",
    "start": "1682920",
    "end": "1692505"
  },
  {
    "text": "You know some languages, they don't have a direct one to one mapping. It means I might say, uh, I love cats,",
    "start": "1692505",
    "end": "1698880"
  },
  {
    "text": "but in another language maybe [NOISE] this same sentence will be cats I love or something near that, its fit.",
    "start": "1698880",
    "end": "1705435"
  },
  {
    "text": "And you want an [NOISE] attention model to se- to show you that the cat was referring to the second. I think it's, it's, it's okay.",
    "start": "1705435",
    "end": "1713309"
  },
  {
    "text": "Okay, sorry guys [NOISE]. [NOISE] So, going back to the presentation.",
    "start": "1713310",
    "end": "1721740"
  },
  {
    "text": "Now, we're going to delve into- inside the network. And so the new thing is the pet shop",
    "start": "1721740",
    "end": "1727590"
  },
  {
    "start": "1726000",
    "end": "1956000"
  },
  {
    "text": "is a little scared and asked you to explain what the network thinks a dog is. What's the representation of dog for the network?",
    "start": "1727590",
    "end": "1734145"
  },
  {
    "text": "So, here, we're going to use a method that we've already seen together called gradient ascent, which is defining an objective,",
    "start": "1734145",
    "end": "1741150"
  },
  {
    "text": "that is technically the score of the dog, minus a regularization term.",
    "start": "1741150",
    "end": "1748005"
  },
  {
    "text": "What the regularization term is doing, is it's- it's saying that x should look natural. It's not necessarily L2 regularization,",
    "start": "1748005",
    "end": "1754440"
  },
  {
    "text": "it can be something else, and we- we will discuss it in the next slide, but don't think about it right now.",
    "start": "1754440",
    "end": "1759845"
  },
  {
    "text": "What we will do is we will compute the back-propagation of this objective function all the way back to the input,",
    "start": "1759845",
    "end": "1765530"
  },
  {
    "text": "and perform gradient ascent to find the image that maximizes the score of the dog.",
    "start": "1765530",
    "end": "1771105"
  },
  {
    "text": "So, it's an iterative process, takes longer than the class activation map. And we repeat the process, forward propagate x,",
    "start": "1771105",
    "end": "1778590"
  },
  {
    "text": "compute the objective, back-propagate, and update the pixels and so on. You guys are familiar with that?",
    "start": "1778590",
    "end": "1783750"
  },
  {
    "text": "So let's see what- what we can visualize doing that. So, actually, if you take an image net- classification network,",
    "start": "1783750",
    "end": "1790980"
  },
  {
    "text": "and you perform this on the classes of goose or ostrich or kit fox, husky, dalmatians, you can see what the network is",
    "start": "1790980",
    "end": "1798270"
  },
  {
    "text": "looking at or what the network thinks that dalmatian is. So, for the dalmatian, you can see some- some black dots on a white background,",
    "start": "1798270",
    "end": "1806760"
  },
  {
    "text": "somehow, but these are- are still quite hard to interpret. It's not super easy to see and even worse here on the screen,",
    "start": "1806760",
    "end": "1814470"
  },
  {
    "text": "better on your computers. But you can see a fox, some here,",
    "start": "1814470",
    "end": "1819990"
  },
  {
    "text": "you can see orange color for the fox. It means that pushing the pixels to an orange color would actually lead to a higher score of the kit fox in the output.",
    "start": "1819990",
    "end": "1829005"
  },
  {
    "text": "If you use a better regularization than L2, you might get better pictures.",
    "start": "1829005",
    "end": "1834450"
  },
  {
    "text": "So, this is for flamingo, this is for pelican, and this is for hartebeest. So, a few things that are interesting to see,",
    "start": "1834450",
    "end": "1840195"
  },
  {
    "text": "is that in order to maximize the score of flamingo, what the network visualized is many flamingos.",
    "start": "1840195",
    "end": "1847380"
  },
  {
    "text": "It means that's 10 flamingo leads to a higher score of the class flamingo than one flamingo for the network.",
    "start": "1847380",
    "end": "1855030"
  },
  {
    "text": "Talking about regularization, what does L2 regularization say? It says that for visualizing,",
    "start": "1855030",
    "end": "1861870"
  },
  {
    "text": "we don't want to have extreme values of pixel. It doesn't help much to have one pixel with an extreme value,",
    "start": "1861870",
    "end": "1867809"
  },
  {
    "text": "one pixel with a low value and so on. So, we're going to regularize all the pixels so that all the values are around each other,",
    "start": "1867810",
    "end": "1874050"
  },
  {
    "text": "and then we can re-scale it between zero and 20- 255 if you want. One thing to notice is that the gradient ascent process doesn't",
    "start": "1874050",
    "end": "1882210"
  },
  {
    "text": "constrain the inputs to be between zero and 255.",
    "start": "1882210",
    "end": "1887789"
  },
  {
    "text": "You can go to plus infinity potentially, while an image is stored with numbers between zero and 255,",
    "start": "1887790",
    "end": "1893985"
  },
  {
    "text": "so you might want to clip that as well. This is another type of regularization. One thing that led to beautiful pictures was what Jason Yosinski and his team did is,",
    "start": "1893985",
    "end": "1905250"
  },
  {
    "text": "they forward propagated an image, computed the score, computed the objective function, back-propagated,",
    "start": "1905250",
    "end": "1912525"
  },
  {
    "text": "updated the pixels, and blurred them, blurred the picture. Because what- what is not useful for visualizing,",
    "start": "1912525",
    "end": "1919530"
  },
  {
    "text": "is if you have high frequency variation between pixels, it doesn't have to visualize, if you have many pixels close to each other that have many different values.",
    "start": "1919530",
    "end": "1927855"
  },
  {
    "text": "Instead, you want to have a smooth transition among pixels, and this is another type of regularization called Gaussian blurring.",
    "start": "1927855",
    "end": "1935130"
  },
  {
    "text": "Okay? So, this method actually makes a lot of sense in- in- in scientific terms.",
    "start": "1935130",
    "end": "1942330"
  },
  {
    "text": "You're- you're maximizing an objective function that gives you what the network sees as flamingo,",
    "start": "1942330",
    "end": "1947789"
  },
  {
    "text": "which would maximize the score of flamingo. So, we call it also class model visualization. Yes?",
    "start": "1947790",
    "end": "1955830"
  },
  {
    "text": "So, does a more realistic class model, visualization correspond to a more accurate model? [NOISE]",
    "start": "1955830",
    "end": "1960870"
  },
  {
    "start": "1956000",
    "end": "2028000"
  },
  {
    "text": "Um, does a more realistic class model visualization correspond to a more accurate.",
    "start": "1960870",
    "end": "1968340"
  },
  {
    "text": "So, it's hard to map the accuracy of the model based on this visualization, but it's a good way to validate that the network is looking at the right thing.",
    "start": "1968340",
    "end": "1976830"
  },
  {
    "text": "Yeah. We're going to- to see more of this later. I think the most interesting part is actually on this slide is,",
    "start": "1976830",
    "end": "1984870"
  },
  {
    "text": "we- we did it for the class score, but we could have done it with any activation. So, let's say I stop in the middle of the network,",
    "start": "1984870",
    "end": "1991380"
  },
  {
    "text": "and I define my objective function to be this activation. I'm going to back propagate and find the input that we maximize this activation.",
    "start": "1991380",
    "end": "2000950"
  },
  {
    "text": "It will tell me what is this activation. What does this activation fire for?",
    "start": "2000950",
    "end": "2006200"
  },
  {
    "text": "So, that's even more interesting I think than looking at the inputs and then the output. Does that make sense?",
    "start": "2006200",
    "end": "2012350"
  },
  {
    "text": "That we could do it on any activation? Yep.",
    "start": "2012350",
    "end": "2020450"
  },
  {
    "text": "[NOISE] Any questions on that? [NOISE]",
    "start": "2020450",
    "end": "2027679"
  },
  {
    "text": "Okay. So, now, we're going to do another trick which is data-set search. It's actually one of the most useful, I think.",
    "start": "2027680",
    "end": "2033485"
  },
  {
    "start": "2028000",
    "end": "2313000"
  },
  {
    "text": "Not fast, but very useful. So, the pet shop loved the previous technique, and asks if there are other alternatives to- to",
    "start": "2033485",
    "end": "2041540"
  },
  {
    "text": "show what- what an activation in the middle of a network is thinking.",
    "start": "2041540",
    "end": "2046580"
  },
  {
    "text": "You take an image, forward propagate it to the network, get your output. Now, what you're going to do is select a feature map,",
    "start": "2046580",
    "end": "2055280"
  },
  {
    "text": "let's say this one, where at this layer, and the feature map is of size five by five by 256.",
    "start": "2055280",
    "end": "2061625"
  },
  {
    "text": "It means that the CONV layer here had 256 filters, right?",
    "start": "2061625",
    "end": "2068419"
  },
  {
    "text": "You are going to look at these feature maps and select probably,",
    "start": "2068420",
    "end": "2075290"
  },
  {
    "text": "uh, yeah, what you're going to do is select one of the feature maps, okay? We select one out of 256 feature maps,",
    "start": "2075290",
    "end": "2082865"
  },
  {
    "text": "and we're going to learn- run a lot of data, forward propagate it through the network, and look which data points have had the maximum activation of this feature map.",
    "start": "2082865",
    "end": "2094429"
  },
  {
    "text": "So, let's say we do it with the first feature map. We notice that these are the top five images that really fired this feature map,",
    "start": "2094430",
    "end": "2104420"
  },
  {
    "text": "like high activations on the feature map. What it tells us, is that probably this feature map is",
    "start": "2104420",
    "end": "2109850"
  },
  {
    "text": "detecting shirts. Could do the same thing, let's say we take the second feature map,",
    "start": "2109850",
    "end": "2115715"
  },
  {
    "text": "and we look which data points have maximized the activations of this feature map,",
    "start": "2115715",
    "end": "2122090"
  },
  {
    "text": "out of a lot of data. And we see that this is what we got, the top five images.",
    "start": "2122090",
    "end": "2127400"
  },
  {
    "text": "Probably means that the other feature map seems to be activated when seeing edges.",
    "start": "2127400",
    "end": "2135150"
  },
  {
    "text": "So, the second one is much more likely to appear earlier in the network obviously than later.",
    "start": "2135250",
    "end": "2141630"
  },
  {
    "text": "So, one thing that you may ask is, do these images seem cropped? Like I don't think that this was an image in the data-set,",
    "start": "2142450",
    "end": "2149420"
  },
  {
    "text": "it's probably a subpart of the image. What do you think this crop corresponds to?",
    "start": "2149420",
    "end": "2155360"
  },
  {
    "text": "[NOISE]",
    "start": "2155360",
    "end": "2166460"
  },
  {
    "text": "Any idea how we cropped the image, and why these are cropped?",
    "start": "2166460",
    "end": "2177650"
  },
  {
    "text": "[NOISE] Like, why- why didn't I show you the full images? How was I able to show you the cropped? [NOISE].",
    "start": "2177650",
    "end": "2183560"
  },
  {
    "text": "[inaudible] and so that anything outside is not [inaudible]",
    "start": "2183560",
    "end": "2193130"
  },
  {
    "text": "That's correct. So, let's say we pick an activation, an activation in the network.",
    "start": "2193130",
    "end": "2198980"
  },
  {
    "text": "This activation for a convolutional neural network oftentime doesn't see the entire input image.",
    "start": "2198980",
    "end": "2205295"
  },
  {
    "text": "Right? Doesn't see it. What it sees is a subspace of the input's image.",
    "start": "2205295",
    "end": "2213290"
  },
  {
    "text": "Does that make sense? So, let's look at another slide. Here, we have a picture of units,",
    "start": "2213290",
    "end": "2218825"
  },
  {
    "text": "64 by 64 by 3. It's our input. We run it through a five-layer ConvNet.",
    "start": "2218825",
    "end": "2224300"
  },
  {
    "text": "And now, we get an encoding volume that is much smaller in height and width, but bigger in depth.",
    "start": "2224300",
    "end": "2231529"
  },
  {
    "text": "If I tell you what this activation is seeing. If you map it back, you look at the stride and the filter size you've used,",
    "start": "2231530",
    "end": "2239360"
  },
  {
    "text": "you could say that this is the part that this filter is seeing. This- this-, uh, this activation is seeing.",
    "start": "2239360",
    "end": "2245585"
  },
  {
    "text": "It means the pixel that was up there had no influence on this activation, and it makes sense when you think of it.",
    "start": "2245585",
    "end": "2252184"
  },
  {
    "text": "You're- you're- the- the easiest way to think about it is looking at the- the top picks, the- the- the top entry on the encoding volume, top-left entry.",
    "start": "2252185",
    "end": "2261109"
  },
  {
    "text": "You have the input image, you put a filter here. This filter gives you one number, right?",
    "start": "2261110",
    "end": "2267215"
  },
  {
    "text": "This number, this activation only depends on this part of the image, but then if you add a convolution after it,",
    "start": "2267215",
    "end": "2274925"
  },
  {
    "text": "it will take more filters. And so, the deeper you go, the more part of the image the activation will see.",
    "start": "2274925",
    "end": "2283145"
  },
  {
    "text": "So, if you look at an activation in layer 10, it will see much- a much larger part of the input",
    "start": "2283145",
    "end": "2289325"
  },
  {
    "text": "than an activation in layer one. That makes sense? So, that's why- that's why probably the pictures that I showed here,",
    "start": "2289325",
    "end": "2298600"
  },
  {
    "text": "these ones are very small part cro- crops, small crops of the image, which means the activation I was talking about here is probably earlier in the network.",
    "start": "2298600",
    "end": "2308105"
  },
  {
    "text": "It sees a much smaller part of the input. [inaudible]  [NOISE]",
    "start": "2308105",
    "end": "2323154"
  },
  {
    "start": "2313000",
    "end": "2795000"
  },
  {
    "text": "Yeah, yeah. So, what you look at it which activation was maximum. You look at this one and then you match this one back to crop. Does that make sense?",
    "start": "2323155",
    "end": "2333140"
  },
  {
    "text": "Okay, so here's units again, up and same, this one would correspond more in the center of the image.",
    "start": "2334200",
    "end": "2341869"
  },
  {
    "text": "This intuition makes sense? Okay cool. So, let's talk about deconvolution now.",
    "start": "2342060",
    "end": "2351760"
  },
  {
    "text": "This is gonna be the hardest part of the lecture, but probably helping with- with more intuition on deconvolution. You remember that?",
    "start": "2351760",
    "end": "2359680"
  },
  {
    "text": "That was the generative adversarial networks scheme. And we said that giving a code to the generator,",
    "start": "2359680",
    "end": "2367104"
  },
  {
    "text": "the generator is able to output an image. So, there is something happening here that we didn't talk about.",
    "start": "2367104",
    "end": "2372415"
  },
  {
    "text": "Is how can we start with a 100 dimensional vector and output a 64 by 64 by 3 image? That seems weird.",
    "start": "2372415",
    "end": "2382285"
  },
  {
    "text": "We could use, you might say, a fully connected layer with a lot of neurons, right, to up-sample.",
    "start": "2382285",
    "end": "2389125"
  },
  {
    "text": "In practice, this is one method, another one is to use a deconvolution network. So, convolutions will encode the information",
    "start": "2389125",
    "end": "2396625"
  },
  {
    "text": "in a smaller volume in height and width deeper in- in depth, while the deconvolution will do the reverse.",
    "start": "2396625",
    "end": "2404440"
  },
  {
    "text": "It will up-sample the height and width of an image. So, that would be useful in this case.",
    "start": "2404440",
    "end": "2411385"
  },
  {
    "text": "Another case where it would be useful is segmentation. You remember our case studies, uh,",
    "start": "2411385",
    "end": "2416530"
  },
  {
    "text": "for segmentation life cell, microscopic images of cells. Give it to a convolution network.",
    "start": "2416530",
    "end": "2423445"
  },
  {
    "text": "It's going to encode it. So, it's going to lower the height and width. The interesting thing about this encoding in the middle",
    "start": "2423445",
    "end": "2429955"
  },
  {
    "text": "is that it holds a lot of meaningful information. But what we want ultimately, is to get a segmentation mask,",
    "start": "2429955",
    "end": "2436585"
  },
  {
    "text": "and the segmentation mask in height and width has to be the same size as the pixel image.",
    "start": "2436585",
    "end": "2442420"
  },
  {
    "text": "So we need a deconvolution network to up-sample it. So, deconvolution are used in these cases.",
    "start": "2442420",
    "end": "2450295"
  },
  {
    "text": "Today the case we're going to talk about is visualization. Remember the gradient ascent method we talked about.",
    "start": "2450295",
    "end": "2457770"
  },
  {
    "text": "We define an objective function by choosing an activation in the middle of the network, and we want the objective to be equal to this activation to find",
    "start": "2457770",
    "end": "2465630"
  },
  {
    "text": "the input image that maximizes its activation through an iterative process. Now, we don't want to use an iterative process.",
    "start": "2465630",
    "end": "2472240"
  },
  {
    "text": "We want to use a reconstruction of this activation directly in the input space by one backward path.",
    "start": "2472240",
    "end": "2479425"
  },
  {
    "text": "So, let's say I select this feature map out of the max pool,",
    "start": "2479425",
    "end": "2485125"
  },
  {
    "text": "255, sorry, 5 by 5 by 256. What I'm going to do is,",
    "start": "2485125",
    "end": "2491109"
  },
  {
    "text": "I'm going to identify the max activation of this feature map. Here it is. It's this one, third column second row.",
    "start": "2491110",
    "end": "2500350"
  },
  {
    "text": "I'm going to set all the others to zero. Just this one I keep it, because it seems that this one has detected something.",
    "start": "2500350",
    "end": "2509245"
  },
  {
    "text": "Don't wanna talk about the others. I'm going to try to reconstruct in the input space what this activation has fired for.",
    "start": "2509245",
    "end": "2516865"
  },
  {
    "text": "So, I'm going to compute the reverse mathematical operation of pooling, ReLU, and convolution.",
    "start": "2516865",
    "end": "2525265"
  },
  {
    "text": "I will unpool, I will un-ReLU, let's say, doesn't ex- this word doesn't exist, so don't use it.",
    "start": "2525265",
    "end": "2531234"
  },
  {
    "text": "But un-ReLU and deconv. And I will do it several times because this activation went through several of them.",
    "start": "2531235",
    "end": "2538224"
  },
  {
    "text": "So I will do it again and again until I see, oh, this specific activation that I selected in",
    "start": "2538225",
    "end": "2546280"
  },
  {
    "text": "the feature map fired because it saw the ears of the dog.",
    "start": "2546280",
    "end": "2551560"
  },
  {
    "text": "And as you see, this image is cropped again. It's not the entire image, it's just the part that the activation has seen.",
    "start": "2551560",
    "end": "2557425"
  },
  {
    "text": "And if you look at where the activation is located on the feature map, it makes sense that this is the part that corresponds to it.",
    "start": "2557425",
    "end": "2564380"
  },
  {
    "text": "So now, the higher level intuition is this. We are going to delve into it and see what do we mean by unpool,",
    "start": "2564510",
    "end": "2572545"
  },
  {
    "text": "what do we mean by Un-reLU, and what do we mean by de-conv. Okay. Yes.",
    "start": "2572545",
    "end": "2578605"
  },
  {
    "text": "So, if we had [inaudible]. Would we have just gotten a reconstruction of the whole image?",
    "start": "2578605",
    "end": "2586540"
  },
  {
    "text": "So, the difference is, you mean if we don't zero out all the activations? It shows that this reconstruction would be messier.",
    "start": "2586540",
    "end": "2593710"
  },
  {
    "text": "It would be more messy. [NOISE] Yeah. Doesn't, doesn't necessarily mean you will not get the full image,",
    "start": "2593710",
    "end": "2598869"
  },
  {
    "text": "because probably the other activations probably didn't even fire, means they didn't detect anything else.",
    "start": "2598870",
    "end": "2605785"
  },
  {
    "text": "It's just that it's gonna- it's gonna add some noise to this reconstruction. Okay, so let's talk about deconvolution a little bit on the board.",
    "start": "2605785",
    "end": "2614380"
  },
  {
    "text": "[NOISE] So, to start with deconvolution,",
    "start": "2614380",
    "end": "2621170"
  },
  {
    "text": "and you, you guys can take notes if you want. We are going to spend about 20 minutes on the board now to discuss deconvolution, okay?",
    "start": "2621900",
    "end": "2628980"
  },
  {
    "text": "[NOISE] To understand the deconvolution,",
    "start": "2628980",
    "end": "2636910"
  },
  {
    "text": "we first need to understand deconvolution. We've seen it, uh, from a computer science perspective, but actually,",
    "start": "2636910",
    "end": "2644215"
  },
  {
    "text": "what we are going to do here is we are going to frame deconvolution as a simple matrix vector mathematical operation.",
    "start": "2644215",
    "end": "2651400"
  },
  {
    "text": "You're going to see that it's actually possible. So let's start with a 1D conv.",
    "start": "2651400",
    "end": "2656690"
  },
  {
    "text": "For the 1D convolution, I will take an input x which is of size 12,",
    "start": "2665190",
    "end": "2672654"
  },
  {
    "text": "x1, x2, x3, x4, x5, x6, x7, x8.",
    "start": "2672655",
    "end": "2681204"
  },
  {
    "text": "So, 8 plus 2 padding, which gives me the 12 that I mentioned.",
    "start": "2681205",
    "end": "2686425"
  },
  {
    "text": "So, the input is a one-dimensional vector which has padding of two on both sides.",
    "start": "2686425",
    "end": "2696235"
  },
  {
    "text": "I will give it to a layer that will be a 1D conv. And this layer would have only one filter.",
    "start": "2696235",
    "end": "2705085"
  },
  {
    "text": "And the filter size will be four.",
    "start": "2705085",
    "end": "2712460"
  },
  {
    "text": "We will also use a stride equal to two. [NOISE] So, my first question is,",
    "start": "2714030",
    "end": "2724795"
  },
  {
    "text": "what's the size of the output? Can you guys compute it on your- on your notepads and,",
    "start": "2724795",
    "end": "2733615"
  },
  {
    "text": "and tell me what's the size of the output. [NOISE]. Input size 12,",
    "start": "2733615",
    "end": "2745450"
  },
  {
    "text": "[NOISE] filter of size four, stride of two, padding of two.",
    "start": "2745450",
    "end": "2750980"
  },
  {
    "text": "Five, yeah I heard you, yeah. So, remember use nx, sorry,",
    "start": "2751140",
    "end": "2757930"
  },
  {
    "text": "ny equals nx minus f plus 2p divided by stride and you will get five.",
    "start": "2757930",
    "end": "2767030"
  },
  {
    "text": "So, what I'm going to get is Y1, Y2, Y3, Y4, Y5.",
    "start": "2767070",
    "end": "2774190"
  },
  {
    "text": "[NOISE] So, I'm going to focus on this specific convolution for now.",
    "start": "2774190",
    "end": "2785290"
  },
  {
    "text": "And I'm going to show now that we can define it as, as a mathematical operation between a matrix and a vector.",
    "start": "2785290",
    "end": "2793299"
  },
  {
    "text": "So, the way to do it is, I guess the easiest way is to write the system of equation",
    "start": "2793300",
    "end": "2798700"
  },
  {
    "start": "2795000",
    "end": "2906000"
  },
  {
    "text": "that is underlying here. What is Y1? Y1 is the filter applied to the four first values here. This makes sense?",
    "start": "2798700",
    "end": "2810730"
  },
  {
    "text": "So, if I define my filter as being y W1,",
    "start": "2810730",
    "end": "2817525"
  },
  {
    "text": "W2, W3, and W4, what I'm gonna get is that Y1 equals W1 times zero plus W2 times",
    "start": "2817525",
    "end": "2828460"
  },
  {
    "text": "zero plus W3 times x1 plus W4 times x2.",
    "start": "2828460",
    "end": "2835825"
  },
  {
    "text": "This makes sense? Just the convolution, elementwise operation, and then sum all of it.",
    "start": "2835825",
    "end": "2843530"
  },
  {
    "text": "Y2 is going to be same thing, but with a stride of two, going two down.",
    "start": "2845460",
    "end": "2852744"
  },
  {
    "text": "So, it's going to give me W1 times x1 plus W2 times",
    "start": "2852745",
    "end": "2858040"
  },
  {
    "text": "x2 plus W3 times x3 plus W4 times x4.",
    "start": "2858040",
    "end": "2865720"
  },
  {
    "text": "Correct? Everybody is following? No. Same thing.",
    "start": "2865720",
    "end": "2872235"
  },
  {
    "text": "We will do it for all the y's until Y5, and we know that Y5 is elementwise operation between",
    "start": "2872235",
    "end": "2878490"
  },
  {
    "text": "the filter and the four last number here, summing them. So, it will give me W1 times x7 plus W2 times",
    "start": "2878490",
    "end": "2889480"
  },
  {
    "text": "x8 plus zero plus W3 times zero plus W4 time zero.",
    "start": "2889480",
    "end": "2897310"
  },
  {
    "text": "[NOISE]",
    "start": "2897310",
    "end": "2906785"
  },
  {
    "text": "Okay. Now what we're going to do is to try to write down y as the matrix vector operation between w and x.",
    "start": "2906785",
    "end": "2916925"
  },
  {
    "text": "We need to find what this w matrix is. And looking at this system of equation,",
    "start": "2916925",
    "end": "2923345"
  },
  {
    "text": "it seems that it's not impossible. So let's try to do it. I will write my Y vector here, Y_1,",
    "start": "2923345",
    "end": "2930785"
  },
  {
    "text": "Y_2, Y_3, Y_4, Y_5.",
    "start": "2930785",
    "end": "2935730"
  },
  {
    "text": "And I will write my matrix here and my vector x here.",
    "start": "2935800",
    "end": "2945005"
  },
  {
    "text": "So first question is, what do you think will be the shape of this w matrix? Um?",
    "start": "2945005",
    "end": "2957740"
  },
  {
    "text": "5 by 12. 5 by 12. Correct. We know that this is 5 by 1, this is 12 by 1,",
    "start": "2957740",
    "end": "2964490"
  },
  {
    "text": "so of course w is going to be 5 by 12. Right?",
    "start": "2964490",
    "end": "2970609"
  },
  {
    "text": "So, now, let's try to fill it in 0, 0, x_1, x_2, x_3, blah,",
    "start": "2970610",
    "end": "2976490"
  },
  {
    "text": "blah, blah, x8, 0, 0. Can you guys see in the back or no?",
    "start": "2976490",
    "end": "2983420"
  },
  {
    "text": "Yeah? Okay. Cool. Ah, so, I'm going to fill in this matrix regarding this system of equation.",
    "start": "2983420",
    "end": "2990380"
  },
  {
    "text": "I know that the Y1 would be w_1 times 0, w_2 times 0, w_3 times x_1, w_4 times x_2.",
    "start": "2990380",
    "end": "2997160"
  },
  {
    "text": "So this vector is going to multiply the first row here.",
    "start": "2997160",
    "end": "3002275"
  },
  {
    "text": "So I just have to place my ws here. w_1 will come here, multiply 0,",
    "start": "3002275",
    "end": "3008365"
  },
  {
    "text": "w_2 will come here, w_3 would come here, and w_4 would come here. And all the rest would be filled in with 0s, right?",
    "start": "3008365",
    "end": "3015520"
  },
  {
    "text": "I don't want any more multiplications. How about the second row of this matrix?",
    "start": "3015520",
    "end": "3021190"
  },
  {
    "text": "I know that Y_2 has to be equal to this dot product with this row. And I know that it's going to give me w_1x_1 plus w_2x_2 plus w_3x_3.",
    "start": "3021190",
    "end": "3030655"
  },
  {
    "text": "x_1 is the third input on this vector, third- third entry.",
    "start": "3030655",
    "end": "3036445"
  },
  {
    "text": "So, I would need to shift what I had in the previous row with a stride of two, it will give me that.",
    "start": "3036445",
    "end": "3044180"
  },
  {
    "text": "That makes sense? So if I use the dot product of this row with that,",
    "start": "3047040",
    "end": "3052375"
  },
  {
    "text": "I should get the second equation up there. And so on and you understand what happens, right?",
    "start": "3052375",
    "end": "3059005"
  },
  {
    "text": "This pattern will just shift with the stride of two on the side. So, I would get zeros here and I will get my w_1,",
    "start": "3059005",
    "end": "3067585"
  },
  {
    "text": "w_2, w_3, w_4 and then zeros. And all the way down here.",
    "start": "3067585",
    "end": "3073405"
  },
  {
    "text": "And all the way down here, what I will get is w_4, w_3, w_2, w_1 and zeros.",
    "start": "3073405",
    "end": "3082670"
  },
  {
    "text": "So the only thing I wanna mention here is that the convolution operation as you see can be",
    "start": "3083040",
    "end": "3088630"
  },
  {
    "start": "3084000",
    "end": "3122000"
  },
  {
    "text": "framed as a simple matrix times a vector. Yes.",
    "start": "3088630",
    "end": "3094164"
  },
  {
    "text": "So why did you have zeros in- on the right side of the top row, in the left side, that's when multiplying the- [NOISE]",
    "start": "3094165",
    "end": "3100540"
  },
  {
    "text": "For the top row, why the zeros are on the right side? Yes. Because I don't want Y hat- Y_1 to be dependent on x_3 to x_8.",
    "start": "3100540",
    "end": "3111595"
  },
  {
    "text": "So I want these to be zero multiplicate priors.",
    "start": "3111595",
    "end": "3115160"
  },
  {
    "text": "Okay. Oh, because of the stride and the window size. Okay. Thank you. So why is this important for",
    "start": "3117600",
    "end": "3125140"
  },
  {
    "text": "the intuition behind the deconvolution and the existence of the deconvolution? It's because if we manage to write down y equal wx,",
    "start": "3125140",
    "end": "3133375"
  },
  {
    "text": "we probably can write down x equal w minus one,",
    "start": "3133375",
    "end": "3139645"
  },
  {
    "text": "y if w is an invertible matrix and this is going to,",
    "start": "3139645",
    "end": "3148465"
  },
  {
    "text": "to be our deconvolution. And in fact, what's the, what's the shape of this new matrix?",
    "start": "3148465",
    "end": "3155000"
  },
  {
    "text": "12 by 5. Um?",
    "start": "3155580",
    "end": "3165610"
  },
  {
    "text": "12 by 5. Yes. 12 by 5. We have 12 by 1 on one side,",
    "start": "3165610",
    "end": "3171880"
  },
  {
    "text": "5 by 1 on the other, it has to be 12 by 5. So it's flipped compared to w. So one thing we're going to do here is we're going to make an assumption.",
    "start": "3171880",
    "end": "3183685"
  },
  {
    "text": "First assumption is that w is an invertible matrix. And on top of that, we're going to make a stronger assumption which",
    "start": "3183685",
    "end": "3191770"
  },
  {
    "text": "is that w is an orthogonal matrix.",
    "start": "3191770",
    "end": "3199160"
  },
  {
    "text": "And without going into the details here,",
    "start": "3201390",
    "end": "3211539"
  },
  {
    "text": "same as when we proved Xavier initialization in sections, we made some assumptions that are not always true.",
    "start": "3211540",
    "end": "3218830"
  },
  {
    "text": "This assumption is not going to be always true. One, one intuition that you can have is,",
    "start": "3218830",
    "end": "3224365"
  },
  {
    "text": "if I'm using a filter that is, ah, assume the filter is an edge detector.",
    "start": "3224365",
    "end": "3230955"
  },
  {
    "text": "So like, ah, plus one, zero, zero, minus one.",
    "start": "3230955",
    "end": "3236080"
  },
  {
    "text": "In this case, the matrix would be orthogonal. Why? A matrix that is orthogonal means that if I take two of the columns here,",
    "start": "3237080",
    "end": "3248275"
  },
  {
    "text": "I dot-product them together, it should give me zero. Same with the rows, you can see it.",
    "start": "3248275",
    "end": "3254440"
  },
  {
    "text": "So, what's interesting is that, ah, if the stride was four,",
    "start": "3254440",
    "end": "3260785"
  },
  {
    "text": "there will be no overlap between these two rows. It would give me an orthogonal matrix.",
    "start": "3260785",
    "end": "3266545"
  },
  {
    "text": "Here a stride is two but if I replace this w_1 by minus one, zero, zero, plus one,",
    "start": "3266545",
    "end": "3272244"
  },
  {
    "text": "so plus one, zero, zero, minus one and minus, plus one, zero, zero, minus one, you can see that the dot product would be zero.",
    "start": "3272245",
    "end": "3278695"
  },
  {
    "text": "The zeros will multiply the ones and the ones will multiply the zeros, it gives me a zero dot product.",
    "start": "3278695",
    "end": "3285550"
  },
  {
    "text": "So, this is a case where it works. Practices doesn't always work. The reason we're making this assumption is because we wanna make a reconstruction, right?",
    "start": "3285550",
    "end": "3294550"
  },
  {
    "start": "3289000",
    "end": "3599000"
  },
  {
    "text": "So, we wanna be able to have this w minus one, this, this, this invert and the reconstruction is not going to be exact.",
    "start": "3294550",
    "end": "3303445"
  },
  {
    "text": "But at, at first-order approximation, we can assume that the reconstruction will still be useful to us,",
    "start": "3303445",
    "end": "3310600"
  },
  {
    "text": "even if this assumption is not always true. In the case where w is orthogonal,",
    "start": "3310600",
    "end": "3315969"
  },
  {
    "text": "I know that the inverse of w is w transpose. Or another way to write it,",
    "start": "3315969",
    "end": "3322735"
  },
  {
    "text": "is that for orthogonal matrices, w transpose times w is the identity matrix.",
    "start": "3322735",
    "end": "3329170"
  },
  {
    "text": "So, what it tells me is that x is going to be w transpose time y, times y.",
    "start": "3329170",
    "end": "3337730"
  },
  {
    "text": "So, let's see what we get from that.",
    "start": "3338160",
    "end": "3342589"
  },
  {
    "text": "Let me write down the Menti code.",
    "start": "3350490",
    "end": "3353810"
  },
  {
    "text": "So, let's say now we have our x and we wanna regenerate our,",
    "start": "3364320",
    "end": "3371124"
  },
  {
    "text": "or we will have our y and we want to generate our x using this method. So, I would, what I would write is to understand the 1D deconv.",
    "start": "3371124",
    "end": "3383080"
  },
  {
    "text": "We can use the following illustrations, where we have x here,",
    "start": "3383080",
    "end": "3388765"
  },
  {
    "text": "which is zero, zero, x_1, x_2, x_3, all the way down to x_8.",
    "start": "3388765",
    "end": "3396410"
  },
  {
    "text": "Okay? And I will have my w matrix here,",
    "start": "3396600",
    "end": "3403910"
  },
  {
    "text": "w transpose and my Y vector, Y_1, Y_2, Y_3, Y_4, and Y_5 here.",
    "start": "3403950",
    "end": "3414835"
  },
  {
    "text": "And so, I know that this matrix will be the transpose of the one I have here, right?",
    "start": "3414835",
    "end": "3420595"
  },
  {
    "text": "So, I can just write down the transpose. The transpose will be w_1, w_2, w_3, w_4.",
    "start": "3420595",
    "end": "3427974"
  },
  {
    "text": "Okay? I will shift it down with a stride of two and so on.",
    "start": "3427975",
    "end": "3439240"
  },
  {
    "text": "[NOISE]",
    "start": "3439240",
    "end": "3451650"
  },
  {
    "text": "And this whole thing will be W Transpose.",
    "start": "3451650",
    "end": "3455380"
  },
  {
    "text": "So, th- the small issue here is that this in practice is not- is going to be very similar to a convolution,",
    "start": "3460550",
    "end": "3469515"
  },
  {
    "text": "but because, uh, but it's going to be a tiny little different interval of implementation.",
    "start": "3469515",
    "end": "3476055"
  },
  {
    "text": "Another question I might ask is, how can we do the same thing with the same pattern as we have here?",
    "start": "3476055",
    "end": "3482819"
  },
  {
    "text": "It means the stride is going from left to right, instead of going from up to down.",
    "start": "3482820",
    "end": "3488770"
  },
  {
    "text": "I'm going to introduce that with a technique called sub-pixel convolution.",
    "start": "3490070",
    "end": "3499030"
  },
  {
    "text": "And for those of you who read papers and segmentation in visualization, oftentimes this is a type of convolution that is used for reconstruction.",
    "start": "3499610",
    "end": "3507525"
  },
  {
    "text": "So, let's see how it works. I just wanna do the same operation,",
    "start": "3507525",
    "end": "3514770"
  },
  {
    "text": "but instead of doing it with a strike going from up to down, I want to do it from a strike going from left to right.",
    "start": "3514770",
    "end": "3521230"
  },
  {
    "text": "O- one, one thing you wanna, you wanna notice here,",
    "start": "3525710",
    "end": "3530954"
  },
  {
    "text": "is that, uh, the two lines that I wrote here are cropped.",
    "start": "3530954",
    "end": "3538480"
  },
  {
    "text": "And the reason is because we're using a padded input. Here, we will just crop the two top lines.",
    "start": "3538550",
    "end": "3546180"
  },
  {
    "text": "And same for the two last lines. They will be cropped. Look at that.",
    "start": "3546180",
    "end": "3556020"
  },
  {
    "text": "W1 will multiply Y1, and this one will multiply Y2 and so on.",
    "start": "3556020",
    "end": "3561510"
  },
  {
    "text": "So, this dot product will give me W1 times Y1, but I don't want that to happen because I wanna get the padded zero here.",
    "start": "3561510",
    "end": "3568575"
  },
  {
    "text": "So, I will just crop that. In this matrix it's actually going to be smaller than it seems,",
    "start": "3568575",
    "end": "3574965"
  },
  {
    "text": "and is going to generate my X1 through X8 and then I will pad the top values and the bottom values.",
    "start": "3574965",
    "end": "3581670"
  },
  {
    "text": "Okay, just the height. So, let's look at the sub-pixel convolution. I have my input.",
    "start": "3581670",
    "end": "3592380"
  },
  {
    "text": "And I will do something quite fun.",
    "start": "3596720",
    "end": "3600730"
  },
  {
    "text": "I will perform a sub-pixel operation on Y. What does it mean?",
    "start": "3602300",
    "end": "3607740"
  },
  {
    "text": "I will insert zeros almost everywhere. I will insert them, and I will get 0,",
    "start": "3607740",
    "end": "3613980"
  },
  {
    "text": "0, Y1, 0, Y2, 0, Y3, 0, Y4,",
    "start": "3613980",
    "end": "3620100"
  },
  {
    "text": "0, Y5 and 0, 0. Even more, one more 0 here, one more 0 here.",
    "start": "3620100",
    "end": "3627000"
  },
  {
    "text": "So, this vector is just the vector Y with",
    "start": "3627000",
    "end": "3632310"
  },
  {
    "text": "some zeros inserted around it and also in the middle between the elements of Y.",
    "start": "3632310",
    "end": "3638160"
  },
  {
    "text": "Now, why is that interesting? It's interesting because I can now write down my convolution by flipping my weight.",
    "start": "3638160",
    "end": "3647550"
  },
  {
    "text": "[NOISE]",
    "start": "3647550",
    "end": "3668010"
  },
  {
    "text": "So, let me explain a little bit what happened here. What we wanted is,",
    "start": "3668010",
    "end": "3675525"
  },
  {
    "text": "in order to be able to efficiently compute the deconvolution the same way as we've learned to compute the convolution.",
    "start": "3675525",
    "end": "3682725"
  },
  {
    "text": "We wanted to have the weights scattered from left to right with a stride moving from left to right.",
    "start": "3682725",
    "end": "3689895"
  },
  {
    "text": "What we did, is that we used a sub-pixel version of Y by inserting zeros in the middle,",
    "start": "3689895",
    "end": "3696045"
  },
  {
    "text": "and we divided the stride by two. So, instead of having a stride of two as we had in our convolution,",
    "start": "3696045",
    "end": "3702255"
  },
  {
    "text": "we have a stride of one in our deconvolution. So, notice that I shift my weights from one at every step,",
    "start": "3702255",
    "end": "3710265"
  },
  {
    "text": "when I move from one row to another. Second thing is, I flipped my weights.",
    "start": "3710265",
    "end": "3715920"
  },
  {
    "text": "I flipped my weights. So, instead of having W1, W2, W3, W4, now I have W4, W3, W2, W1.",
    "start": "3715920",
    "end": "3724200"
  },
  {
    "text": "And what you could see is looking at that, first, look at this row,",
    "start": "3724200",
    "end": "3731670"
  },
  {
    "text": "the first row that is not cropped. The result of the dot product of this row with this vector is going to be Y1 times W3,",
    "start": "3731670",
    "end": "3743800"
  },
  {
    "text": "plus Y2 times W1.",
    "start": "3743800",
    "end": "3749065"
  },
  {
    "text": "Yeah? Now, let's look what happened here. I look at my first row here,",
    "start": "3749065",
    "end": "3755720"
  },
  {
    "text": "the dot product of this first row with my Y here is going to be- sorry,",
    "start": "3755720",
    "end": "3763770"
  },
  {
    "text": "sorry, we- these two are cropped as well.",
    "start": "3763770",
    "end": "3767350"
  },
  {
    "text": "And same here. So, looking at my first non-cropped row",
    "start": "3768890",
    "end": "3776700"
  },
  {
    "text": "here as a dot product with this vector what I get is W3 times Y1,",
    "start": "3776700",
    "end": "3784815"
  },
  {
    "text": "plus W2- sorry, plus W1 times Y2.",
    "start": "3784815",
    "end": "3790829"
  },
  {
    "text": "So, exactly the same thing as I got there. So, these two operations are exactly the same operations. They're the same thing.",
    "start": "3790830",
    "end": "3798735"
  },
  {
    "text": "You get the same results two different way of doing it. One, is using a weird operation with strides going from top to bottom.",
    "start": "3798735",
    "end": "3807330"
  },
  {
    "text": "And the second one is exactly a convolution. This is a convolution. Convolution plus flipped weights,",
    "start": "3807330",
    "end": "3813569"
  },
  {
    "text": "insertion of zeros for the sub-pixel version of Y.",
    "start": "3813570",
    "end": "3819400"
  },
  {
    "text": "And on top of that, padding here and there.",
    "start": "3820910",
    "end": "3826029"
  },
  {
    "text": "So, this was the hardest part. Okay? Does it give you more intuition on the convolution here?",
    "start": "3826670",
    "end": "3834720"
  },
  {
    "text": "You know now how convolution can be framed as a mathematical operation between a matrix and a vector.",
    "start": "3834720",
    "end": "3840465"
  },
  {
    "text": "And you know also that under these assumptions, the way we will deconvolve is just by flipping our weights,",
    "start": "3840465",
    "end": "3849120"
  },
  {
    "text": "dividing the stride by two, and inserting zeros. If we just do that, we're deconvolving.",
    "start": "3849120",
    "end": "3856510"
  },
  {
    "text": "For propagating the convolution, the following way you wanna deconvolve,",
    "start": "3856520",
    "end": "3862139"
  },
  {
    "text": "just flip all the weights, insert zeros sub-pixel, and finally divide the stride.",
    "start": "3862139",
    "end": "3869505"
  },
  {
    "text": "And that's the de-convolution. So, super complex thing to understand but this is the intuition behind it.",
    "start": "3869505",
    "end": "3876375"
  },
  {
    "text": "Now, let, let's try to have an intuition of how it would work in two-dimension. Uh, let me write it down.",
    "start": "3876375",
    "end": "3887559"
  },
  {
    "text": "The sub-pixel convolution, we already have that [inaudible] [NOISE] Why do we use that? Yeah. Because in terms of implementation this is the same as what we've been using here.",
    "start": "3892460",
    "end": "3900210"
  },
  {
    "text": "It's, it's very similar, while this one is another implementation. So, you could do both the same,",
    "start": "3900210",
    "end": "3906765"
  },
  {
    "text": "is the same operation. But in practice this one is easier to understand because it, it's exactly the same operation of the convolution,",
    "start": "3906765",
    "end": "3913545"
  },
  {
    "text": "with flipped weights, insertion of zeros and divided stride. That's why I wanted to show that. Yeah.",
    "start": "3913545",
    "end": "3919710"
  },
  {
    "text": "So, uh, what, what happens when, uh, the assumption [OVERLAPPING]. When the ass- assumption doesn't hold?",
    "start": "3919710",
    "end": "3925470"
  },
  {
    "text": "Yeah. So, oftentimes the assumption doesn't hold, but what we want is to be able to see a reconstruction.",
    "start": "3925470",
    "end": "3930855"
  },
  {
    "text": "And if we use this method we will still see a reconstruction. Practice if we had really W minus one,",
    "start": "3930855",
    "end": "3938160"
  },
  {
    "text": "the reconstruction would be much better. But we don't. So, uh, let me go over the 2D,",
    "start": "3938160",
    "end": "3944970"
  },
  {
    "text": "uh, the 2D example. We are going to go a little over time because we have two hours technically for- one hour and 50 minutes,",
    "start": "3944970",
    "end": "3950580"
  },
  {
    "text": "and uh, and let me go over the 2D example. And then we will answer this question on why we need to make this assumption.",
    "start": "3950580",
    "end": "3960760"
  },
  {
    "text": "So, here is the interpretation of the 2D deconvolution. Let me write it down here.",
    "start": "3965090",
    "end": "3970880"
  },
  {
    "text": "[NOISE]",
    "start": "3970880",
    "end": "3978234"
  },
  {
    "text": "The intuition behind the 2D deconv is, I get my inputs. Which is five by five,",
    "start": "3978235",
    "end": "3986110"
  },
  {
    "text": "and this I call it x. I forward propagate it using a filter of size two-by-two,",
    "start": "3986110",
    "end": "3994015"
  },
  {
    "text": "in a conv layer, and a stride of two. This is my convolution. What I get.",
    "start": "3994015",
    "end": "4001860"
  },
  {
    "text": "So, if you do five minus two, plus the padding which is zero,",
    "start": "4001860",
    "end": "4008070"
  },
  {
    "text": "divided by two, plus one, oh, I forgot the plus one actually here, plus one and you floor it.",
    "start": "4008070",
    "end": "4015675"
  },
  {
    "text": "So- so, five minus two divided by two gives you,",
    "start": "4015675",
    "end": "4021030"
  },
  {
    "text": "uh, three divided by two plus one. Um, no actually it will give you three by three,",
    "start": "4021030",
    "end": "4027675"
  },
  {
    "text": "yeah, three by three. A y of three by three. That's what you get.",
    "start": "4027675",
    "end": "4032745"
  },
  {
    "text": "And now, this you call it y. What you're going to do here,",
    "start": "4032745",
    "end": "4039285"
  },
  {
    "text": "is you're going to deconvolve y. In order to deconvolve y,",
    "start": "4039285",
    "end": "4044020"
  },
  {
    "text": "in order to deconvolve it, you're going to use a stride of one.",
    "start": "4044750",
    "end": "4050880"
  },
  {
    "text": "And what we said is that we need to divide this stride by two, right? So, we need a stride of one,",
    "start": "4050880",
    "end": "4056940"
  },
  {
    "text": "and the filter will be the same, two-by-two. And you remember that what we've seen,",
    "start": "4056940",
    "end": "4062415"
  },
  {
    "text": "is that the filter is the same. It's just that it's going to be flipped. So, you will use a filter of two-by-two, but flipped.",
    "start": "4062415",
    "end": "4071200"
  },
  {
    "text": "And now, what do we get? We hope to get a five-by-five input,",
    "start": "4073550",
    "end": "4080355"
  },
  {
    "text": "which is going to be our reconstructed x, five-by-five input. And the way we're going to do it,",
    "start": "4080355",
    "end": "4086805"
  },
  {
    "text": "is this is the intuition behind it. Yeah. Is it up two by two? [NOISE].",
    "start": "4086805",
    "end": "4092340"
  },
  {
    "text": "Five minus two divided by two. Yeah, it's two by two. Okay. Up two by two.",
    "start": "4092340",
    "end": "4098640"
  },
  {
    "text": "Thanks . [OVERLAPPING]. Two by two. Five-by-five here.",
    "start": "4098640",
    "end": "4104040"
  },
  {
    "text": "That's what we hope to reconstruct. The way we will do it, is we will take the filter, s is two by two.",
    "start": "4104040",
    "end": "4110580"
  },
  {
    "text": "We will put it here. And we will multiply all the weights of this filter by y11.",
    "start": "4110580",
    "end": "4121469"
  },
  {
    "text": "All the weights will be multiplied by y11. So, I will get four values here,",
    "start": "4121470",
    "end": "4127839"
  },
  {
    "text": "which are going to be w4 y111, w3 y111 and so on.",
    "start": "4127840",
    "end": "4134000"
  },
  {
    "text": "Now, I will shift this with a stride of one. And I will put my filter again here.",
    "start": "4134000",
    "end": "4140529"
  },
  {
    "text": "And I will multiply all the entries by y12 and so on.",
    "start": "4140530",
    "end": "4147270"
  },
  {
    "text": "And you see that this entry has an overlap. So, it will, it will be updated at every step of the convolution.",
    "start": "4147270",
    "end": "4155400"
  },
  {
    "text": "It's not like what happened in the forward pass. So, this is the intuition behind the 2D convolution.",
    "start": "4155400",
    "end": "4162040"
  },
  {
    "text": "3D, same thing. You have, uh, a volume here.",
    "start": "4162140",
    "end": "4167190"
  },
  {
    "text": "So, your filter is going to be a volume. What you're going to do is you're going to put the volume here,",
    "start": "4167190",
    "end": "4174045"
  },
  {
    "text": "multiply by y11 and so on. And then if you have a second filter, you would put it again on top of it and multiply",
    "start": "4174045",
    "end": "4181754"
  },
  {
    "text": "by y11 all the weights of the filter and so on. It's a little complicated, but this is the intuition behind deconvolution.",
    "start": "4181754",
    "end": "4188940"
  },
  {
    "text": "Okay, let's get back to the lecture. I'm going to take one question here if you guys need clarification.",
    "start": "4188940",
    "end": "4194790"
  },
  {
    "text": "[NOISE] Don't worry if you don't understand deconvolution truly.",
    "start": "4194790",
    "end": "4202545"
  },
  {
    "text": "The important part is that you get the intuition here and you understand how we do it. So, let me make a comment.",
    "start": "4202545",
    "end": "4207929"
  },
  {
    "text": "[NOISE] Why do we need to make this assumption and do we need to make it? [NOISE] When we want to reconstruct [NOISE] like we're doing here in the visualization,",
    "start": "4207930",
    "end": "4217620"
  },
  {
    "text": "we need to make this assumption because we don't want to retrain weights for the deconvolutional network.",
    "start": "4217620",
    "end": "4223080"
  },
  {
    "text": "What we know is that the activation we selected here on the feature map is- has gone through the entire pipeline of the ConvNet.",
    "start": "4223080",
    "end": "4232304"
  },
  {
    "text": "So, to reconstruct, we need to use the weights that we already have in the ConvNet. We need to pass them to the deconvolution and reconstruct.",
    "start": "4232305",
    "end": "4239790"
  },
  {
    "text": "If we're doing the segmentation, like we talked about for the live cell",
    "start": "4239790",
    "end": "4244830"
  },
  {
    "text": "we don't need to do this assumption. We're just saying that this is a procedure that is a deconvolution,",
    "start": "4244830",
    "end": "4251145"
  },
  {
    "text": "and we will train the weights of the deconvolution. So, there is no need to make this assumption,",
    "start": "4251145",
    "end": "4256320"
  },
  {
    "text": "it's just we have a technique that is dividing the stride by one and inserting zeros and then beam,",
    "start": "4256320",
    "end": "4262230"
  },
  {
    "text": "we retrain the weights and we get an output that is an upsampled version of the input that was given to it.",
    "start": "4262230",
    "end": "4268269"
  },
  {
    "text": "So, there's two use cases. One where you use the weights and one where you don't. In this case, we don't want to retrain,",
    "start": "4268270",
    "end": "4274355"
  },
  {
    "text": "we wanna use the weights. So let's see. Let's see a- a version more visual of the upsampling.",
    "start": "4274355",
    "end": "4280850"
  },
  {
    "text": "So, we do the sub-pixel image. This is my image, four by four, I insert zeros and I pad it,",
    "start": "4280850",
    "end": "4287210"
  },
  {
    "text": "I get a nine by nine image. I have my filter like that. And this filter will convolve.",
    "start": "4287210",
    "end": "4293900"
  },
  {
    "text": "I will- it will convolve over the input, so I will place it on my input, and at every step I will perform a convolution up.",
    "start": "4293900",
    "end": "4301159"
  },
  {
    "text": "I will get a value here. The value is blue because as you can see the weights that affected the output were only the blue weights.",
    "start": "4301160",
    "end": "4308770"
  },
  {
    "text": "I would use a stride of one beam. Now, the weights that affect my input are the green ones and so on.",
    "start": "4308770",
    "end": "4316185"
  },
  {
    "text": "And I would just convolve as I do usually, and so on.",
    "start": "4316185",
    "end": "4323040"
  },
  {
    "text": "And now one step down. I see that the weights that are impacting my input are the purple ones.",
    "start": "4323040",
    "end": "4328905"
  },
  {
    "text": "So, I would put a purple square here and so on. So, I just do the convolution like that.",
    "start": "4328905",
    "end": "4334739"
  },
  {
    "text": "And so on, so one thing that is interesting here is that the values that are blue in my out six by six output,",
    "start": "4334740",
    "end": "4343785"
  },
  {
    "text": "were generated only using the blue values of the filter, the blue weights in the filter.",
    "start": "4343785",
    "end": "4350685"
  },
  {
    "text": "The ones that are green were only used-were only generated using the green values of my filter.",
    "start": "4350685",
    "end": "4357000"
  },
  {
    "text": "So, actually this subsample- sub-pixel convolution or deconvolution could have been done with four convolutions,",
    "start": "4357000",
    "end": "4365235"
  },
  {
    "text": "with the blue weights, green weights, purple weights and yellow weights.",
    "start": "4365235",
    "end": "4370349"
  },
  {
    "text": "And then, just- just replace such that the adjustments would be the output.",
    "start": "4370350",
    "end": "4377355"
  },
  {
    "text": "Just put the output of each of these conv and mix them to give out a six by six output.",
    "start": "4377355",
    "end": "4384060"
  },
  {
    "text": "Only thing you need to know we have an input four by four and we get an output six by six. That's what we wanted. We wanted to upsample the image.",
    "start": "4384060",
    "end": "4390405"
  },
  {
    "text": "We can retrain the weights or use the transposed version of them. So, let's see what happens now.",
    "start": "4390405",
    "end": "4395475"
  },
  {
    "text": "We understood what, uh, what deconv was doing. So, we're able to deconv. What we need to do is also to unpool and to unReLU.",
    "start": "4395475",
    "end": "4403890"
  },
  {
    "text": "Fortunately, it's easier than the deconv. So, we're not gonna do board work anymore. So, let's see how unpool works.",
    "start": "4403890",
    "end": "4411150"
  },
  {
    "text": "If I give you this, uh, inputs to the pooling- to a max pooling layer. The output is obviously going to be this one,",
    "start": "4411150",
    "end": "4418905"
  },
  {
    "text": "42 is the maximum of these four numbers. Assuming we're using a two-by-two filter with stride of two,",
    "start": "4418905",
    "end": "4424500"
  },
  {
    "text": "vertically and horizontally, 12 is the maximum of the green numbers,",
    "start": "4424500",
    "end": "4429735"
  },
  {
    "text": "six is the maximum of the red numbers and seven the- the orange ones. Now, question. I give you back the outputs and I tell you, give me the input.",
    "start": "4429735",
    "end": "4440219"
  },
  {
    "text": "Can you give me the input or no? No.",
    "start": "4440220",
    "end": "4445260"
  },
  {
    "text": "No, why- why? [NOISE] You only keep the maximum. So, you- you lost all the other numbers.",
    "start": "4445260",
    "end": "4452775"
  },
  {
    "text": "I don't know anymore the zero, one and minus one that were the red numbers here because they didn't pass through the maximum.",
    "start": "4452775",
    "end": "4460395"
  },
  {
    "text": "So, max pool is not invertible, from a mathematical perspective.",
    "start": "4460395",
    "end": "4465765"
  },
  {
    "text": "What we can do is approximate its invert. How can we do that? [NOISE].",
    "start": "4465765",
    "end": "4473010"
  },
  {
    "text": "Spread it out. Spread it out. That's a good point, we could spread out the six among the four values.",
    "start": "4473010",
    "end": "4479310"
  },
  {
    "text": "That would be an approximation. A better way if we manage to cache some values,",
    "start": "4479310",
    "end": "4485355"
  },
  {
    "text": "is to cache something we call the switches. We cache the values of the maximum,",
    "start": "4485355",
    "end": "4490455"
  },
  {
    "text": "using a matrix that is very easy to score, of zeros and ones. And we pass it to the unpooling.",
    "start": "4490455",
    "end": "4497505"
  },
  {
    "text": "And now we can approximate the inverts, because we know where 6 was, we know where 12 was,",
    "start": "4497505",
    "end": "4503219"
  },
  {
    "text": "we know where 42 was and 7 was. But it's still not invertible because we- we lost all the other numbers.",
    "start": "4503220",
    "end": "4510795"
  },
  {
    "text": "Think about maxpool back propagation. It's exactly the same thing.",
    "start": "4510795",
    "end": "4515835"
  },
  {
    "text": "These numbers 0, 1, -1. They had no impact on the loss function at the end,",
    "start": "4515835",
    "end": "4521100"
  },
  {
    "text": "because they didn't pass through the forward propagation. So, actually with the switches you can have the exact",
    "start": "4521100",
    "end": "4527040"
  },
  {
    "text": "back propagation, we know that the other values are going to be zeros, because they didn't affect the loss during the forward propagation.",
    "start": "4527040",
    "end": "4533864"
  },
  {
    "text": "That- that make sense? Okay. So, this is maxpooling, unpooling, unmaxpooling.",
    "start": "4533865",
    "end": "4540315"
  },
  {
    "text": "And we can use it with the switches. We can approximate it. Why not just cache the whole regional matrix?",
    "start": "4540315",
    "end": "4546495"
  },
  {
    "text": "Yeah, why don't we just cache the whole region there. We could- could cache the entire thing. But in terms of back- for back propagation in terms",
    "start": "4546495",
    "end": "4553500"
  },
  {
    "text": "of efficiency we will just use this switching because it's enough. But not for unpooling though. Yeah, yeah, for unpooling you're right, we could cache everything.",
    "start": "4553500",
    "end": "4560489"
  },
  {
    "text": "But then it's cheating, like you- you kept it, it's like, just give it back. Okay. So now, we know how [NOISE] unpooling works. Let's look at the ReLU.",
    "start": "4560490",
    "end": "4570180"
  },
  {
    "text": "So, what we need to do, in fact, is to pass the switches and the filters back to the unpooling deconv in order to reconstruct.",
    "start": "4570180",
    "end": "4577050"
  },
  {
    "text": "Switches are the matrix of zeros and ones indicating where the maximums were, and filters are the filters that I will transpose under this assumption on the board.",
    "start": "4577050",
    "end": "4588255"
  },
  {
    "text": "Okay. And so on and so on, and I get my reconstruction. I just need to explain the ReLU now.",
    "start": "4588255",
    "end": "4594750"
  },
  {
    "text": "I give you this input to ReLU and I forward propagate it. What do we get? All the negative numbers are going to be equalized to zero,",
    "start": "4594750",
    "end": "4604185"
  },
  {
    "text": "and the others are going to be kept. Now, let's say I'm doing a backpropagation [NOISE] through ReLU.",
    "start": "4604185",
    "end": "4610215"
  },
  {
    "text": "What do I get if I give you that? This is the gradients that are coming back, and I'm asking you what are the gradients after the ReLU during the backpropagation?",
    "start": "4610215",
    "end": "4618990"
  },
  {
    "text": "[NOISE] How does the ReLU behave in backprop? [NOISE].",
    "start": "4618990",
    "end": "4628619"
  },
  {
    "text": "Zeros? [NOISE] Which ones are zero? Um, the negative. The negative are zeroes? Do you agree?",
    "start": "4628620",
    "end": "4636480"
  },
  {
    "text": "The negatives in this yellow matrix are going to be zeros during the backprop.",
    "start": "4636480",
    "end": "4642420"
  },
  {
    "text": "Are you guys sure? [NOISE] Think always",
    "start": "4642420",
    "end": "4649860"
  },
  {
    "text": "about what was the influence of the input on the loss function and you will find out what was the backpropagation.",
    "start": "4649860",
    "end": "4657210"
  },
  {
    "text": "Look at this number. This number here, -2.",
    "start": "4657210",
    "end": "4663120"
  },
  {
    "text": "Did this number have, the fact that it was -2, did it have any influence on the loss function?",
    "start": "4663120",
    "end": "4669224"
  },
  {
    "text": "No, it could have been -10, it could have been -20. It's not gonna impact the loss function.",
    "start": "4669225",
    "end": "4674235"
  },
  {
    "text": "So, what do you think should be the number here? Zero. Zero. Even if the number that is coming back,",
    "start": "4674235",
    "end": "4681600"
  },
  {
    "text": "the gradient is 10. So, what do you think should be the ReLU backward output?",
    "start": "4681600",
    "end": "4688170"
  },
  {
    "text": "[NOISE]",
    "start": "4688170",
    "end": "4697260"
  },
  {
    "text": "Same idea as max-pooling. What we need to do is to remember the switches.",
    "start": "4697260",
    "end": "4703665"
  },
  {
    "text": "Remember which of these values had an impact on the loss. We pass the switches,",
    "start": "4703665",
    "end": "4709395"
  },
  {
    "text": "all these values here that are kind of a y, you know this is a y. All these ones had no impact on the loss function.",
    "start": "4709395",
    "end": "4717435"
  },
  {
    "text": "So, when you backpropagate, their gradient should be set to zero, doesn't matter to update them. It's not gonna make the loss go down.",
    "start": "4717435",
    "end": "4723960"
  },
  {
    "text": "So, these are all zeros and the rest they just pass. Why do they pass with the same value?",
    "start": "4723960",
    "end": "4729630"
  },
  {
    "text": "Because ReLU for positive numbers was 1. So, this number 1 here that passed the ReLU during the forward propagation,",
    "start": "4729630",
    "end": "4736350"
  },
  {
    "text": "it was not modified. Its gradient is going to be 1. That makes sense? So this is ReLU backward.",
    "start": "4736350",
    "end": "4743250"
  },
  {
    "text": "Now, in this reconstruction method, we're not going to use ReLU backward. We're going to use something we call ReLU DeconvNet let's say.",
    "start": "4743250",
    "end": "4751815"
  },
  {
    "text": "The reason we're not, the intuition between why we're not using ReLU backward is because what we're interested",
    "start": "4751815",
    "end": "4757410"
  },
  {
    "text": "in is to know which pixels of the input positively affected the,",
    "start": "4757410",
    "end": "4763320"
  },
  {
    "text": "the activation that we're talking of. So, what we're going to do is that we're just going to do a ReLU. We're just going to do a ReLU backward.",
    "start": "4763320",
    "end": "4770100"
  },
  {
    "text": "Another reason is when we reconstruct, we wanna have the minimum influence from the forward propagation",
    "start": "4770100",
    "end": "4776250"
  },
  {
    "text": "because we don't really want our reconstruction to depend on the forward propagation. We would like our reconstruction to be unbiased and",
    "start": "4776250",
    "end": "4783000"
  },
  {
    "text": "just look at this activation, reconstruct what happened. So, that's what you're going to use.",
    "start": "4783000",
    "end": "4788865"
  },
  {
    "text": "Again, this is a hack that has been found through trial and error and it's not going to be scientifically viable all the time.",
    "start": "4788865",
    "end": "4798670"
  },
  {
    "text": "Okay. So now, we can do everything and we can reconstruct and find out what was this activation corresponds to.",
    "start": "4798680",
    "end": "4805770"
  },
  {
    "text": "It took time to understand it, but it's super fast to do now, It's just one pass, not iterative.",
    "start": "4805770",
    "end": "4811275"
  },
  {
    "text": "We could do it with every layer. So, let's say we do it with the first block of conv, ReLU, maxpool.",
    "start": "4811275",
    "end": "4817395"
  },
  {
    "text": "I go here. I choose an activation. I, I, I, I find the maximum activation. I set all the others to 0.",
    "start": "4817395",
    "end": "4823650"
  },
  {
    "text": "I unpool, ReLU, deconv and I find out the reconstruction. This specific activation was looking at edges like that.",
    "start": "4823650",
    "end": "4830470"
  },
  {
    "text": "So, let's delve into the fun and see how we can visualize inside,",
    "start": "4830870",
    "end": "4837450"
  },
  {
    "text": "what's happening inside the network. So, all the visualization we're going to see now can be found in Matthew Zeiler's and Rob Fergus'",
    "start": "4837450",
    "end": "4843450"
  },
  {
    "text": "paper Visualizing and Understanding Convolution Networks. I'm going to explain what they correspond to, but check,",
    "start": "4843450",
    "end": "4849300"
  },
  {
    "text": "check out their papers if you want to understand more into detail. So, what happens here is that on,",
    "start": "4849300",
    "end": "4856545"
  },
  {
    "text": "on the top left, you have nine pictures. These are the cropped pictures of the data set that",
    "start": "4856545",
    "end": "4862740"
  },
  {
    "text": "activated the first filter of the first layer maximum. So, we have a first filter on the first layer and we run",
    "start": "4862740",
    "end": "4871244"
  },
  {
    "text": "all the data sets and we recorded what are the main pictures that activate this filter.",
    "start": "4871245",
    "end": "4876540"
  },
  {
    "text": "These were the main ones. And we did the same thing for all the filters of the first layer and there are nine times nine of them.",
    "start": "4876540",
    "end": "4884114"
  },
  {
    "text": "There are a lot of them, I think. In the bottom here you have the filters,",
    "start": "4884115",
    "end": "4890219"
  },
  {
    "text": "which are the weights that were plotted. Just take the filter, plot the weights.",
    "start": "4890220",
    "end": "4895739"
  },
  {
    "text": "This is th- this is important only for the first layer. When you go deeper into your network, the filter itself cannot be interpreted.",
    "start": "4895740",
    "end": "4902670"
  },
  {
    "text": "It's super hard to understand it. Here, because the weights are directly multiplying the pixels,",
    "start": "4902670",
    "end": "4908100"
  },
  {
    "text": "the first layer weights can be interpretable. And in fact, you see that the,",
    "start": "4908100",
    "end": "4913845"
  },
  {
    "text": "let's look at the third one, the third filter here on the first row. The third filter has weights that are kind of diagonal,",
    "start": "4913845",
    "end": "4921150"
  },
  {
    "text": "like one of the diagonals. And in fact if you look at the datas that maximized these filters' activation,",
    "start": "4921150",
    "end": "4929175"
  },
  {
    "text": "the feature map corresponding to this filter, they're all like cropped images that correspond to diagonals.",
    "start": "4929175",
    "end": "4934980"
  },
  {
    "text": "That's what happens. Now, the, the deeper we go, the more fun we have. So let's go. Results on a validation set of 50,000 images.",
    "start": "4934980",
    "end": "4943425"
  },
  {
    "text": "What's happened here is they took 50,000 images, they forward propagated to the network.",
    "start": "4943425",
    "end": "4949650"
  },
  {
    "text": "They recorded which image is the maximum, the one that's maximized the activation of",
    "start": "4949650",
    "end": "4956460"
  },
  {
    "text": "the feature map corresponding to the first filter of layer two, second filter and so on for all the filters.",
    "start": "4956460",
    "end": "4962835"
  },
  {
    "text": "Let's look at one of them. We can see that's, okay, we have a circle on this one.",
    "start": "4962835",
    "end": "4967950"
  },
  {
    "text": "It means that this, the filter gener- which generated the feature map corresponding, uh,",
    "start": "4967950",
    "end": "4973650"
  },
  {
    "text": "[NOISE] to this has been activated through probably a wheel or something like that.",
    "start": "4973650",
    "end": "4978824"
  },
  {
    "text": "So, that the image of the wheel was the one that maximized the activation of this one and then we use the deconv method to reconstruct it.",
    "start": "4978825",
    "end": "4986520"
  },
  {
    "text": "Any questions on that? Yeah. What if the activation function is not ReLU [inaudible].",
    "start": "4986520",
    "end": "4995159"
  },
  {
    "text": "Good question, yeah. What if the activation function is not ReLU? In practice, you would just use a backward to reconstruct if it's [inaudible].",
    "start": "4995160",
    "end": "5002630"
  },
  {
    "text": "You would use the same, the same type of method and you would try to approximate the reconstruction.",
    "start": "5002630",
    "end": "5008370"
  },
  {
    "text": "Okay, let's go a little deeper. So now, same layer two,",
    "start": "5009220",
    "end": "5014585"
  },
  {
    "text": "forward propagate all the images of the data set, find the nine images that are the maximum activate- that lead to the maximum activation of the first filter.",
    "start": "5014585",
    "end": "5022505"
  },
  {
    "text": "These are plotted on top here. What you can see is like for this filter, that is the sixth row first filter,",
    "start": "5022505",
    "end": "5030305"
  },
  {
    "text": "features are more invariant to small changes. So, this filter actually was activated to many different types of circles,",
    "start": "5030305",
    "end": "5036980"
  },
  {
    "text": "spirals, whirls, and so it's, it's still activated although the circles were different sized.",
    "start": "5036980",
    "end": "5044159"
  },
  {
    "text": "Can go even deeper up third layer. What's interesting is that the deeper you go,",
    "start": "5044190",
    "end": "5049990"
  },
  {
    "text": "the more complexity you see. So, at the beginning we were seeing only edges, now we see much more complex figures.",
    "start": "5049990",
    "end": "5056440"
  },
  {
    "text": "You can see a face here, in this- in this entry. It means that this filter activated for when",
    "start": "5056440",
    "end": "5063469"
  },
  {
    "text": "it sees this- when it has seen a data point that had this face, then we reconstructed it, cropped it on the face.",
    "start": "5063470",
    "end": "5068840"
  },
  {
    "text": "Uh, the face is kind of red, it means that the more red it was, the more activation it led to.",
    "start": "5068840",
    "end": "5076260"
  },
  {
    "text": "And same top nine for layer three. So, these are the nine images that actually led to the face.",
    "start": "5076690",
    "end": "5082340"
  },
  {
    "text": "These are the nine images that maximize the, the, the activation of the feature map corresponding to that filter and so on.",
    "start": "5082340",
    "end": "5091385"
  },
  {
    "text": "So, here is a very funny. [inaudible]  [NOISE].",
    "start": "5091385",
    "end": "5133730"
  },
  {
    "text": "Can you stand up? [NOISE].",
    "start": "5133730",
    "end": "5139489"
  },
  {
    "text": "And realization layers,",
    "start": "5139490",
    "end": "5159155"
  },
  {
    "text": "we can switch back and forth between showing the actual activations and showing images synthesized to produce high activation.",
    "start": "5159155",
    "end": "5165320"
  },
  {
    "text": "So, he's- he's giving his own image to the network right now. By the time we get to the fifth convolutional layer,",
    "start": "5165320",
    "end": "5171425"
  },
  {
    "text": "the features being computed represent abstract concepts. So, these are the gradients I said. [OVERLAPPING] For example, this neuron seems to respond to faces.",
    "start": "5171425",
    "end": "5179285"
  },
  {
    "text": "We can further investigate this neuron by showing a few different types of information. First, we can artificially create optimized images",
    "start": "5179285",
    "end": "5185780"
  },
  {
    "text": "using new regularization techniques that are described in [OVERLAPPING]. Our paper, the one we talked about. These synthetic images show that this neuron fires in response to a face.",
    "start": "5185780",
    "end": "5192470"
  },
  {
    "text": "[OVERLAPPING] It also taught the images from the training set to activate this neuron the most as well as pixels from those images most responsible for",
    "start": "5192470",
    "end": "5200030"
  },
  {
    "text": "the high activations computed via the deconvolution. And this is the deconvolutionary substance. This feature responds to multiple faces in different locations.",
    "start": "5200030",
    "end": "5207020"
  },
  {
    "text": "And by looking at the deconv, we can see that it would respond more strongly if we had even darker eyes and rosier lips.",
    "start": "5207020",
    "end": "5214865"
  },
  {
    "text": "We can also confirm that it cares about the head and shoulders, but ignores the arms and torso.",
    "start": "5214865",
    "end": "5220175"
  },
  {
    "text": "We can even see that it fires to some extent for cat faces. Using back-prop or deconv,",
    "start": "5220175",
    "end": "5226955"
  },
  {
    "text": "we can see that this unit depends most strongly on a couple of units in the previous layer conv4, and about a dozen or so in conv3.",
    "start": "5226955",
    "end": "5233960"
  },
  {
    "text": "So they're trying to track back track where- which neurons led to [OVERLAPPING]. So, let's look at another neuron on this screen. So, what is this unit doing?",
    "start": "5233960",
    "end": "5239420"
  },
  {
    "text": "From the top nine images, we may conclude that it fires for different types of clothing, but examining the synthetic images shows that it may be",
    "start": "5239420",
    "end": "5246860"
  },
  {
    "text": "detecting not clothing per se, but wrinkles. In the live plot, we can see that it's activated by my shirt and",
    "start": "5246860",
    "end": "5253895"
  },
  {
    "text": "smoothing out half of my shirt causes that half of the activations to decrease. Finally, here's another interesting neuron.",
    "start": "5253895",
    "end": "5262115"
  },
  {
    "text": "This one has learned to look for printed text in a variety of sizes, colors, and fonts.",
    "start": "5262115",
    "end": "5268250"
  },
  {
    "text": "This is pretty cool because we never asked the network to look for wrinkles or text or faces.",
    "start": "5268250",
    "end": "5273320"
  },
  {
    "text": "The only labels we provided were at the very last layer. So, the only reason the network learned features like texts and faces in",
    "start": "5273320",
    "end": "5279050"
  },
  {
    "text": "the middle was to support final decisions at that last layer. For example, the text detector may provide good evidence that a rectangle is in fact",
    "start": "5279050",
    "end": "5288005"
  },
  {
    "text": "a book seen on edge and detecting many books next to each other might be a good way of detecting a bookcase,",
    "start": "5288005",
    "end": "5293540"
  },
  {
    "text": "which was one of the categories we trained the net to recognize. In this video, we've shown some of the features of",
    "start": "5293540",
    "end": "5300199"
  },
  {
    "text": "the DeepViz toolbox and a few of the things we've learned by using it. You can download it. Yeah, so they had a toolbox,",
    "start": "5300200",
    "end": "5307010"
  },
  {
    "text": "which is exactly what you visualize here, and you could test the toolbox on your model,",
    "start": "5307010",
    "end": "5312530"
  },
  {
    "text": "takes time to- to get- get it to run, but- but if you want to visualize all the neurons, it's very helpful.",
    "start": "5312530",
    "end": "5318890"
  },
  {
    "text": "Okay. So, uh, let's go quickly. We'll spend about three minutes on the optional Deep Dream one because it's fun.",
    "start": "5318890",
    "end": "5326105"
  },
  {
    "text": "And yeah, feel free- feel free to jump in and ask questions. So, the Deep Dream one is, uh,",
    "start": "5326105",
    "end": "5334355"
  },
  {
    "text": "is implemented by Google, and, uh, the page- the- the blog post is by Alexander Mordvintsev.",
    "start": "5334355",
    "end": "5341645"
  },
  {
    "text": "The idea here is to generate parts using this knowledge of visualization and how they do that is quite interesting.",
    "start": "5341645",
    "end": "5349130"
  },
  {
    "text": "They would take an input, forward propagate it to the network and at",
    "start": "5349130",
    "end": "5354560"
  },
  {
    "text": "a specific layer that we call the- the green layer, then pick activation and set the gradient to be equal to this activation.",
    "start": "5354560",
    "end": "5363515"
  },
  {
    "text": "The gradient at this layer and then we back propagated the gradients to the input. So, earlier what we did is that we defined a new objective function,",
    "start": "5363515",
    "end": "5371750"
  },
  {
    "text": "that was equal to an activation and we tried to maximize this objective function. Here, they- they're doing it even stronger.",
    "start": "5371750",
    "end": "5378485"
  },
  {
    "text": "They take the activations and they set the gradients to be equal to the activations. And so the stronger the activation,",
    "start": "5378485",
    "end": "5384485"
  },
  {
    "text": "the stronger it's going to become later on, and so on and so on, and so on. So, they are trying to see what the network is",
    "start": "5384485",
    "end": "5391355"
  },
  {
    "text": "activating for and in- increase even this activation. So, forward propagate the image,",
    "start": "5391355",
    "end": "5397940"
  },
  {
    "text": "set the gradient of the dreaming layer to be equal to its activation, but back propagate all the way back to the inputs and update the pixel of the image.",
    "start": "5397940",
    "end": "5405139"
  },
  {
    "text": "Do that several time and every time the activations will change. So, you have to set again the new activations to",
    "start": "5405140",
    "end": "5410930"
  },
  {
    "text": "be the- the- the gradients of the green layer and back propagate, and ultimately, you will see things happening.",
    "start": "5410930",
    "end": "5417215"
  },
  {
    "text": "So, it's hard to see here on the screen, but you would have a pig appearing here. You'd have like a tree somewhere there, and some animals,",
    "start": "5417215",
    "end": "5425150"
  },
  {
    "text": "and a lot of animals are going to start appearing in this cloud. It's interesting because it means,",
    "start": "5425150",
    "end": "5430610"
  },
  {
    "text": "let's say, you see this cloud here? If the network thought that this cloud looked a little bit like a dog,",
    "start": "5430610",
    "end": "5437210"
  },
  {
    "text": "so one of the- the feature maps was- which would be generated by the filter that detects dog would activate itself a little bit.",
    "start": "5437210",
    "end": "5446000"
  },
  {
    "text": "Because we set the gradient to be equal to the activation, it's going to increase the appearance of the dog in the image and so on.",
    "start": "5446000",
    "end": "5455014"
  },
  {
    "text": "And then you will see a dog appearing after a few iterations. So, it's quite fun and if you zoom you see that type of thing.",
    "start": "5455015",
    "end": "5461150"
  },
  {
    "text": "So, you see a pig-snail, it's kind of a pig with the snail carapace.",
    "start": "5461150",
    "end": "5466880"
  },
  {
    "text": "Camel-bird, dog- dog-fish. I'd advise you to like look at this on the slides rather than on the screen, but it's quite fun.",
    "start": "5466880",
    "end": "5474635"
  },
  {
    "text": "And same, like if you give that type of image, you would see that- because the network thought there was like a tower a little bit,",
    "start": "5474635",
    "end": "5482929"
  },
  {
    "text": "you will increase the network's confidence in the fact that there is a tower by changing the- the image and the tower would come out.",
    "start": "5482930",
    "end": "5489140"
  },
  {
    "text": "And so on, it's quite cool. Uh, yeah and if you're dreaming lower layers,",
    "start": "5489140",
    "end": "5496100"
  },
  {
    "text": "obviously you will see edges happening or patterns coming.",
    "start": "5496100",
    "end": "5501125"
  },
  {
    "text": "Because then the lower layers seem to detect an edge and then you will increase its confidence on its edge so it will- it will create an edge on the image.",
    "start": "5501125",
    "end": "5510695"
  },
  {
    "text": "This is a fun video I have, Deep Dream on a video.",
    "start": "5510695",
    "end": "5515929"
  },
  {
    "text": "[MUSIC].",
    "start": "5515930",
    "end": "5526640"
  },
  {
    "text": "So, everything that the metric thinks is something it knows with the information it appears to be.",
    "start": "5526640",
    "end": "5532040"
  },
  {
    "text": "[MUSIC] And what's funny",
    "start": "5532040",
    "end": "5540370"
  },
  {
    "text": "is that there is so many animals in the video. And the reason is [MUSIC].",
    "start": "5540370",
    "end": "5553520"
  },
  {
    "text": "Gets too trippy, I'm going to stop it. [LAUGHTER] So, one- one insight that is fun about it is,",
    "start": "5553520",
    "end": "5561215"
  },
  {
    "text": "uh, if the network and this is not only for Deep Dream, it's also for- it's mostly for gradient ascents.",
    "start": "5561215",
    "end": "5567215"
  },
  {
    "text": "Let's say we have an output score of a dumbbell, and we define our objective function to be the dumbbell score,",
    "start": "5567215",
    "end": "5574760"
  },
  {
    "text": "and we try to find the image that maximizes a dumbbell when we'll see something like that.",
    "start": "5574760",
    "end": "5579920"
  },
  {
    "text": "What's interesting is that the network thinks that the dumbbell is the hand with the dumbbell.",
    "start": "5579920",
    "end": "5585425"
  },
  {
    "text": "Not only the dumbbell. And you can see it here, you see the hands. And the reason is it has never seen a dumbbell alone.",
    "start": "5585425",
    "end": "5592295"
  },
  {
    "text": "So, probably in ImageNet there is no picture of a dumbbell alone in a corner and labeled as dumbbell.",
    "start": "5592295",
    "end": "5598579"
  },
  {
    "text": "But instead, it's usually a human trying to push hard.",
    "start": "5598580",
    "end": "5603735"
  },
  {
    "text": "Okay. So, just to summarize what we've learned today, we are now able to answer all the following questions.",
    "start": "5603735",
    "end": "5612230"
  },
  {
    "text": "What part of the input is responsible for the output beam, occlusion sensitivity, class activation maps seem to be the best way to go.",
    "start": "5612230",
    "end": "5618455"
  },
  {
    "text": "What is the role of a given neuron feature layer? Deconvolve, reconstruct, search in a dataset?",
    "start": "5618455",
    "end": "5623840"
  },
  {
    "text": "What are the top images and do gradient ascents? Check- can we check what the network focuses on?",
    "start": "5623840",
    "end": "5629615"
  },
  {
    "text": "Occlusion sensitivity, saliency map, class activation maps? How does the network see our world?",
    "start": "5629615",
    "end": "5634790"
  },
  {
    "text": "I would say gradient descent, maybe Deep Dream is cool stuff. And then what are the- the implication and- and use cases of these visualizations?",
    "start": "5634790",
    "end": "5644360"
  },
  {
    "text": "Uh, you can use saliency maps to segment, it's not very useful given the new methods we have.",
    "start": "5644360",
    "end": "5649930"
  },
  {
    "text": "But the deconvolution that we've seen together is widely used for segmentation and reconstruction.",
    "start": "5649930",
    "end": "5654985"
  },
  {
    "text": "Also for generating adversarial networks to generate images in parts sometimes.",
    "start": "5654985",
    "end": "5660600"
  },
  {
    "text": "Uh, these visualizations are also helpful to detect if some of the neurons in your network are dead.",
    "start": "5660600",
    "end": "5666935"
  },
  {
    "text": "So, let's say you have a network and you use the toolbox and you see that whatever the input image you give,",
    "start": "5666935",
    "end": "5672575"
  },
  {
    "text": "some feature maps are always dark. It means that the feature that generated",
    "start": "5672575",
    "end": "5678020"
  },
  {
    "text": "this feature map by convoluting over the inputs probably never detected anything. So, it's not being even trained.",
    "start": "5678020",
    "end": "5683600"
  },
  {
    "text": "That's a type of insight you can get. Okay, thanks guys. Sorry we went over time.",
    "start": "5683600",
    "end": "5688940"
  },
  {
    "text": "[NOISE]",
    "start": "5688940",
    "end": "5697090"
  }
]