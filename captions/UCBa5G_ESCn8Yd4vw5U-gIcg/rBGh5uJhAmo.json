[
  {
    "start": "0",
    "end": "5330"
  },
  {
    "text": "OK, so we left off last\nweek, and we were talking",
    "start": "5330",
    "end": "10760"
  },
  {
    "text": "about composite metrics.",
    "start": "10760",
    "end": "15830"
  },
  {
    "text": "So let's review that real quick. OK, so we were saying\na lot of times,",
    "start": "15830",
    "end": "23510"
  },
  {
    "text": "we have multiple metrics that we\ncare about, but a lot of times, they're at odds\nwith one another. So for example, we might care\nfor an aircraft collision",
    "start": "23510",
    "end": "30860"
  },
  {
    "text": "avoidance system, about both\nthe collision rate for it and also the alert rate for it.",
    "start": "30860",
    "end": "35960"
  },
  {
    "text": "And ideally, both of those are\nzero, but that's typically not achievable, and we typically\nhave some kind of tradeoff.",
    "start": "35960",
    "end": "41820"
  },
  {
    "text": "So you can imagine\neach point on this plot is like a different design. And we said one of\nthe ways we understand",
    "start": "41820",
    "end": "47960"
  },
  {
    "text": "the tradeoffs between multiple\nmetrics is this idea of Pareto optimality, where a point\nis Pareto optimal if we",
    "start": "47960",
    "end": "55400"
  },
  {
    "text": "can't improve one metric without\nmaking another one worse.",
    "start": "55400",
    "end": "60700"
  },
  {
    "text": "So we said at this point\nis not Pareto optimal because we can make it better\nin both collision rate and alert",
    "start": "60700",
    "end": "66360"
  },
  {
    "text": "rate. We have other designs that\nwere better in both areas. But this point, for\nexample, is Pareto optimal",
    "start": "66360",
    "end": "73210"
  },
  {
    "text": "because there's\nnothing that we can do to make one metric\nbetter without making a different one worse.",
    "start": "73210",
    "end": "78705"
  },
  {
    "text": " And so then we said we have\nthis thing called the Pareto frontier, which consists of all\nof the Pareto optimal designs",
    "start": "78705",
    "end": "86740"
  },
  {
    "text": "that we have. But then these are all\nkind of equally good if we don't do anything\nelse, and so we",
    "start": "86740",
    "end": "93040"
  },
  {
    "text": "need to create these\nkind of composite metrics to allow us to select one of\nthe points along this frontier.",
    "start": "93040",
    "end": "99795"
  },
  {
    "text": "So we talked about some\ndifferent composite metrics we can use. One was the weighted sum\nmethod, where we just",
    "start": "99795",
    "end": "105220"
  },
  {
    "text": "give each of these\ndifferent metrics a weight, so how much we care about\nalert rate versus how much we",
    "start": "105220",
    "end": "110740"
  },
  {
    "text": "care about collision\nrate in a relative sense. And then we just\ncompute the weighted sum",
    "start": "110740",
    "end": "116380"
  },
  {
    "text": "of the values of\nall the metrics. So in this case, for\nexample, if we said we care,",
    "start": "116380",
    "end": "122530"
  },
  {
    "text": "maybe we wanted our weight\nvector to add up to 1, and so we gave 0.8 of the weight\nto collision rate-- or sorry,",
    "start": "122530",
    "end": "129520"
  },
  {
    "text": "to alert rate and 0.2\nto collision rate, then we would pick a point\nwith the highest weighted sum.",
    "start": "129520",
    "end": "139720"
  },
  {
    "text": "OK, similarly, we talked\nabout another type of metric we could use that used\nthe goal distance.",
    "start": "139720",
    "end": "145700"
  },
  {
    "text": "So we just wanted\nto figure out which point was closest by some\ndistance measure to our goal.",
    "start": "145700",
    "end": "151360"
  },
  {
    "text": "And typically, we pick the\ngoal to be something called the utopia point,\nwhich would be, in our case, zero alerts\nand zero collisions.",
    "start": "151360",
    "end": "158890"
  },
  {
    "text": "We want to see how\nclose we can get. So we compute the\ndistance between all of our points and\nthe goal, and then we",
    "start": "158890",
    "end": "164620"
  },
  {
    "text": "pick the one that's the closest. And then finally, we\nhad one more metric,",
    "start": "164620",
    "end": "169870"
  },
  {
    "text": "where we were like, well,\nyou could just combine them. And there's lots of different\nthings you could imagine doing. But one option would be this\nweighted exponential sum",
    "start": "169870",
    "end": "176670"
  },
  {
    "text": "metric, which is essentially\njust kind of doing this distance thing, but with some\nweights, as well.",
    "start": "176670",
    "end": "184409"
  },
  {
    "text": "OK, but I want to think,\nagain, just real quick, about this weighted sum\nmetric because we're going to dive into it a\nlittle bit deeper now.",
    "start": "184410",
    "end": "192630"
  },
  {
    "text": "And so you can think-- so\nhere, I was just like, OK, it's 0.8, 0.2. That's how much we care about\neach of them, but how could",
    "start": "192630",
    "end": "198900"
  },
  {
    "text": "we actually go\nabout picking this? So you might say, well,\nyou just ask an expert, and you go up to them\nand you're like, hey,",
    "start": "198900",
    "end": "204640"
  },
  {
    "text": "what is your weight between\nalert rate and collision rate? But that's kind of a weird\nquestion to ask people.",
    "start": "204640",
    "end": "211590"
  },
  {
    "text": "And so you might be wondering,\nhow do we pick the weights? And so a more normal thing\nwould be to ask someone, well,",
    "start": "211590",
    "end": "217306"
  },
  {
    "text": "which do you prefer? Do you prefer a design\nthat has this alert rate and this collision rate\nversus this design that has this alert rate and\nthis collision rate?",
    "start": "217307",
    "end": "224103"
  },
  {
    "text": "Which of those two would\nyou pick if you had to? And it turns out if we\ndo this a bunch of times, we could actually\nelicit what their weight",
    "start": "224103",
    "end": "230910"
  },
  {
    "text": "vector is without them having to\ntell it to us or write it down.",
    "start": "230910",
    "end": "236300"
  },
  {
    "text": "So we're going to\ndo an example here. I brought the candy back. And we're going to try to learn\na weight vector over some candy",
    "start": "236300",
    "end": "244040"
  },
  {
    "text": "preferences. So it'd be weird if I came up\nto you, and I was like, hey,",
    "start": "244040",
    "end": "249270"
  },
  {
    "text": "I have these M&Ms, Sour\nPatch Kids, and Skittles. Please specify a weight vector\nfor me that adds up to 1,",
    "start": "249270",
    "end": "255027"
  },
  {
    "text": "and tell me the\nweight of how much you care about each of these. So instead, I'm going to give\nyou pairwise queries for this.",
    "start": "255027",
    "end": "261829"
  },
  {
    "text": "So again, we're trying to\nlearn this weight vector. We're going to require\nthat it sums to 1.",
    "start": "261829",
    "end": "268140"
  },
  {
    "text": "And we have three\ndifferent candies that we want to understand the\nrelative weighting between,",
    "start": "268140",
    "end": "273780"
  },
  {
    "text": "so M&M's, Sour Patch\nKids, and Skittles. And we're going to do so\nusing pairwise queries.",
    "start": "273780",
    "end": "279810"
  },
  {
    "text": "So we'll do a little\ndemonstration here. Again, we have this weight\nvector that we want to learn.",
    "start": "279810",
    "end": "286880"
  },
  {
    "text": "And then W1 is how much we care\nabout M&Ms relative to others.",
    "start": "286880",
    "end": "292560"
  },
  {
    "text": "W2 is how much we care\nabout Sour Patch Kids, and W3 is how much we\ncare about Skittles.",
    "start": "292560",
    "end": "297710"
  },
  {
    "text": "And we said that we want all\nof our weights to sum up to 1. So what this plot is showing\nhere is on the x-axis,",
    "start": "297710",
    "end": "305310"
  },
  {
    "text": "we have W1. On the y-axis, we have W2. Just to make it\neasier to visualize, we're not visualizing W3.",
    "start": "305310",
    "end": "311699"
  },
  {
    "text": "But if we know W1 and W2,\nsince they have to add up to 1, we automatically\nknow what W3 is.",
    "start": "311700",
    "end": "317210"
  },
  {
    "text": "And what I've shaded\nhere is any space that's not allowed to\nbe a possible weight. So we already have\nthe constraint",
    "start": "317210",
    "end": "322700"
  },
  {
    "text": "that W1 plus W2 plus\nW3 is equal to 1, so this whole area here\nwould be a region where they",
    "start": "322700",
    "end": "329810"
  },
  {
    "text": "don't satisfy that constraint. So this shaded area\nis not allowed. And our weight vector\ncould be anywhere inside",
    "start": "329810",
    "end": "336170"
  },
  {
    "text": "of this unshaded area. OK, so I need a volunteer\nwho likes candy and has",
    "start": "336170",
    "end": "344539"
  },
  {
    "text": "opinions about it. All right, first hand I saw. You can stay there if you want.",
    "start": "344540",
    "end": "350540"
  },
  {
    "text": "But it will result in you\ngetting candy, no worries. ",
    "start": "350540",
    "end": "355690"
  },
  {
    "text": "OK, so what we want\nto do is, I have this kind of final\nquestion I'm going to-- or final pair of\ndifferent candies.",
    "start": "355690",
    "end": "362792"
  },
  {
    "text": "So all these bags have\ndifferent amounts of the M&Ms, Sour Patch Kids, and Skittles. This bag has one M&M, four Sour\nPatch Kids, and five Skittles,",
    "start": "362792",
    "end": "371780"
  },
  {
    "text": "and this bag has five M&M's,\nthree Sour Patch Kids, and two Skittles.",
    "start": "371780",
    "end": "377438"
  },
  {
    "text": "And I'm going to give you,\nat the end, the one we think that you'll like better. But first, we need to\ninfer your weight vector",
    "start": "377438",
    "end": "383410"
  },
  {
    "text": "over these various options. And so the first thing\nI'm going to ask you is",
    "start": "383410",
    "end": "389410"
  },
  {
    "text": "this kind of first query here. So the two bags I have here-- I realized that\nI didn't actually",
    "start": "389410",
    "end": "394900"
  },
  {
    "text": "need to make candy\nfor these bags, but I'll give them out after\nso others can have candy. But one of these has one M&M,\nthree Sour Patch Kids, and six",
    "start": "394900",
    "end": "403870"
  },
  {
    "text": "Skittles and the other one has\nseven M&M's, one Sour Patch Kid, And two Skittles.",
    "start": "403870",
    "end": "409750"
  },
  {
    "text": "So if you had to choose\nbetween these two, which one would you pick? You'd pick A? OK, great. So let's think about what it\nmeans that he picked A. OK,",
    "start": "409750",
    "end": "424401"
  },
  {
    "text": "so because he picked A, we\nknow that if we prefer A to B,",
    "start": "424401",
    "end": "435900"
  },
  {
    "text": "then we know that it must\nbe the case that when",
    "start": "435900",
    "end": "441449"
  },
  {
    "text": "we take the weighted sum\nwith our weight vector for A, it's going to result in a value\nthat's greater than when we take",
    "start": "441450",
    "end": "449370"
  },
  {
    "text": "the weighted sum of our weight\nvector with the values in B.",
    "start": "449370",
    "end": "454889"
  },
  {
    "text": "But I'll note, this is an\nassumption that we're making. So we are assuming that in his\nmind, he has this weight vector.",
    "start": "454890",
    "end": "464618"
  },
  {
    "text": "Maybe he doesn't know about it. But that's how he's\nmaking these decisions.",
    "start": "464618",
    "end": "469620"
  },
  {
    "text": "This is an assumption\nwe are making. And that's how he's\nmaking decisions when we ask him his preferences.",
    "start": "469620",
    "end": "476550"
  },
  {
    "text": "But this might not be true. OK, this is an assumption\nthat we're making, and this might not be the\ncase, and we'll actually",
    "start": "476550",
    "end": "483210"
  },
  {
    "text": "talk, when we finish up,\nabout how we could potentially relax that. But given this\nassumption, we then",
    "start": "483210",
    "end": "489390"
  },
  {
    "text": "know that if he\npreferred A to B, so he preferred one M&M, so 1\ntimes W1, plus three Sour Patch",
    "start": "489390",
    "end": "498600"
  },
  {
    "text": "Kids, so 3 times W2. ",
    "start": "498600",
    "end": "503632"
  },
  {
    "text": "Is that right? ",
    "start": "503632",
    "end": "509474"
  },
  {
    "text": "1, 3, 6, OK, great. And you preferred\nthat to the 7, 1, 2? Yeah, OK, perfect. So with three Sour Patch\nKids plus six Skittles.",
    "start": "509474",
    "end": "520349"
  },
  {
    "text": "So we know that that must be\ngreater than 7 times W1 plus 1",
    "start": "520350",
    "end": "526220"
  },
  {
    "text": "times W2 plus 2 times W3. OK, so we just expanded\nboth of these sides.",
    "start": "526220",
    "end": "535490"
  },
  {
    "text": "OK, now, I'm just going\nto do some algebra here. So multiply all of this out.",
    "start": "535490",
    "end": "541370"
  },
  {
    "text": "And so I'm going to just\nsubtract everything over. So we get negative 6W1 plus 2W2\nplus 4W3 is greater than zero.",
    "start": "541370",
    "end": "553459"
  },
  {
    "text": "We also separately\nhad this constraint, where we said W1 plus W2\nplus W3 had to equal 1.",
    "start": "553460",
    "end": "563220"
  },
  {
    "text": "We had to have the\nweights sum to 1. So what we can do is just\nmanipulate this a little bit to say that 1 minus W1\nminus W2 is equal to W3.",
    "start": "563220",
    "end": "575270"
  },
  {
    "text": "And so I'm just going\nto insert that in here. So we get minus 6W1 plus\n2W2 plus 4 times W3,",
    "start": "575270",
    "end": "590570"
  },
  {
    "text": "which we're going to put in 1\nminus W1 minus W2 is greater than zero.",
    "start": "590570",
    "end": "595930"
  },
  {
    "text": "And so then we can continue\nto multiply things out. And eventually, we're going to\nget that 5W1 plus W2 is less",
    "start": "595930",
    "end": "606940"
  },
  {
    "text": "than 2, OK? So all we did was just\ncontinue plugging things in.",
    "start": "606940",
    "end": "612460"
  },
  {
    "text": "OK, so it turns\nout, this equation actually represents something\nthat we call a half space.",
    "start": "612460",
    "end": "617894"
  },
  {
    "text": " And what it means is that we\ncan actually go back to our plot",
    "start": "617895",
    "end": "624580"
  },
  {
    "text": "that we were making,\nand we'll see that if we plot this equation\nand fill in all the values that satisfy this equation,\nthat forms a half space,",
    "start": "624580",
    "end": "632720"
  },
  {
    "text": "and these are weights that\nare possible for him to have. So let's go back here.",
    "start": "632720",
    "end": "641170"
  },
  {
    "text": "So basically, I just programmed\nthis to do that for us. So you can see, if you remember,\nwe had 5W1 plus W2 less than 2.",
    "start": "641170",
    "end": "649190"
  },
  {
    "text": "So if you think about\nit for a second, that's exactly this line. This line is 5W1 plus\nW2 is equal to 2.",
    "start": "649190",
    "end": "657040"
  },
  {
    "text": "And then on this\nside is everything that satisfies that inequality. And on this side is\neverything that doesn't.",
    "start": "657040",
    "end": "664029"
  },
  {
    "text": "OK, so we've basically now\nkind of restricted the space of weights that are possible,\ngiven his answer to that query.",
    "start": "664030",
    "end": "671950"
  },
  {
    "text": "Yeah, question. [INAUDIBLE] Half space? Yeah, it's basically just\nsomething that is in this form.",
    "start": "671950",
    "end": "681980"
  },
  {
    "text": "It's just saying, if you\nhave an inequality like this, it splits the space of\npossible values in half,",
    "start": "681980",
    "end": "687819"
  },
  {
    "text": "where half of them satisfy this\ninequality and then the other half don't.",
    "start": "687820",
    "end": "692990"
  },
  {
    "text": "So what that looks like\nis like this shaded region here that we now\nadded to our plot.",
    "start": "692990",
    "end": "700089"
  },
  {
    "text": "On this side, it doesn't\nsatisfy the inequality, and on this side, it does. So does it have\nboth [INAUDIBLE]?",
    "start": "700090",
    "end": "709110"
  },
  {
    "text": "Well, it's half\nof infinite space. That's why it's\ncalled a half space. I wouldn't focus too\nmuch on the word half.",
    "start": "709110",
    "end": "715322"
  },
  {
    "text": "It's just like putting a plane\nthrough the space, if possible, or a line through the\nspace, if possible.",
    "start": "715322",
    "end": "723930"
  },
  {
    "text": "OK, all right, let's\ndo the rest of them. So all right, next bag has\nsix M&M's, one Sour Patch Kid,",
    "start": "723930",
    "end": "731490"
  },
  {
    "text": "and three Skittles versus five\nM&M's, two Sour Patch Kids, and three Skittles, B, OK.",
    "start": "731490",
    "end": "739350"
  },
  {
    "text": "So what happened here\nis we didn't actually go through the math\nthis time, but we would follow the exact same\nprocess to get a new half space.",
    "start": "739350",
    "end": "746920"
  },
  {
    "text": "And so this time,\nit looked like this. And we can see that\nwe've kind of now",
    "start": "746920",
    "end": "752820"
  },
  {
    "text": "further restricted the\nspace of possible weights. All right, next one,\n2, 7, 1 versus 6, 2, 2.",
    "start": "752820",
    "end": "761495"
  },
  {
    "text": "A. A, OK, great. You know what you want. Yep.",
    "start": "761495",
    "end": "767720"
  },
  {
    "text": "He's had time to look\nat them and study this. OK, this is great. So we've further restricted\nit a little bit more.",
    "start": "767720",
    "end": "774342"
  },
  {
    "text": "All right, number four.  A little tougher one.",
    "start": "774342",
    "end": "779440"
  },
  {
    "text": "Yeah.  [INAUDIBLE] B.",
    "start": "779440",
    "end": "785600"
  },
  {
    "text": "B, OK. Perfect, all right. So that's all I'm\ngoing to ask you.",
    "start": "785600",
    "end": "790800"
  },
  {
    "text": "So we could ask\nmore, and then we could try to restrict this even\nfurther, but we'll stop there.",
    "start": "790800",
    "end": "796310"
  },
  {
    "text": "So now, we know that this is\nyour space of possible weights that's left. So there's different\nthings you can",
    "start": "796310",
    "end": "801980"
  },
  {
    "text": "do once you get to this\npoint in this process. You can just take the\ncenter to pick a point.",
    "start": "801980",
    "end": "808350"
  },
  {
    "text": "There's various options for how\nyou would maybe pick a point now that you've kind of\nnarrowed it down.",
    "start": "808350",
    "end": "813420"
  },
  {
    "text": "I'm just going to\ndo it by eyeball. So 0.2, 0.6 looks pretty good.",
    "start": "813420",
    "end": "818970"
  },
  {
    "text": "It's kind of in the middle here. And so then our third\nweight is going to be 0.2, so they add up to 1.",
    "start": "818970",
    "end": "825080"
  },
  {
    "text": "So we're going to\nput those in here as our guess for\nyour weight vector. So we're going to say 0.2\nfor this one, 0.6, and 0.2.",
    "start": "825080",
    "end": "839600"
  },
  {
    "text": "OK, and so then what we can\ndo is take our final query and say that we had those\ntwo bags that we were going",
    "start": "839600",
    "end": "849529"
  },
  {
    "text": "to decide between at the end. And it appears that if we use\nthis weight vector anyway, the product of the\nweight vector with A",
    "start": "849530",
    "end": "857420"
  },
  {
    "text": "ends up being greater than the\nproduct of the weight vector with B, and so we think you\nprefer A. How'd do we do?",
    "start": "857420",
    "end": "864620"
  },
  {
    "text": "All right, sounds good. So maybe we'll say after\nclass-- or actually, I'll probably just throw it to you.",
    "start": "864620",
    "end": "869820"
  },
  {
    "text": "Let's give it a try. Nice. All right, extra point.",
    "start": "869820",
    "end": "875880"
  },
  {
    "text": "Yeah, extra points for that one. Amazing. All right, so that's\nhow that works.",
    "start": "875880",
    "end": "881950"
  },
  {
    "text": "Any questions on that? Yeah.",
    "start": "881950",
    "end": "887530"
  },
  {
    "text": "When you wrote in all\nthe weight vectors and made more half spaces to\nnarrow down the space, first,",
    "start": "887530",
    "end": "894982"
  },
  {
    "text": "I'm kind of wondering,\ndid you guys choose these specific values\nto make it smaller each time?",
    "start": "894982",
    "end": "900680"
  },
  {
    "text": "And then another one\nis, can they conflict. Oh, my gosh. OK, you've literally just\ntouched on my exact two",
    "start": "900680",
    "end": "907450"
  },
  {
    "text": "next points, so well done. OK, so exactly\nwhat you just said.",
    "start": "907450",
    "end": "912829"
  },
  {
    "text": "So in this case, we just\npre-selected the queries. So I just thought about\nit and was like, what would be good to ask?",
    "start": "912830",
    "end": "918550"
  },
  {
    "text": "But you could imagine\nthat we could probably do better if I asked him\nthe first one, looked at how",
    "start": "918550",
    "end": "923980"
  },
  {
    "text": "this space changed, and then\nthought about, OK, well, what could I ask next,\nsuch that it would give me",
    "start": "923980",
    "end": "930100"
  },
  {
    "text": "like a half space\nthat kind of maximally divides up what I have left? That's called active learning,\nand a lot of people do that.",
    "start": "930100",
    "end": "938020"
  },
  {
    "text": "It's a nice area of\nresearch, super interesting if you want to go into it. It's beyond the\nscope of this class,",
    "start": "938020",
    "end": "944530"
  },
  {
    "text": "but that's exactly along the\npath of what you'd want to do. And then to your\nsecond point of what",
    "start": "944530",
    "end": "951390"
  },
  {
    "text": "happens if it's inconsistent. So that's exactly right. That can happen. So let's say that\ninstead, we pick B here.",
    "start": "951390",
    "end": "958600"
  },
  {
    "text": "We have no weights\nleft possible. And what happened\nhere is we basically",
    "start": "958600",
    "end": "964710"
  },
  {
    "text": "just got an inconsistent\nset of preferences. So some people might say that\nmeans you're kind of irrational.",
    "start": "964710",
    "end": "971290"
  },
  {
    "text": "We were assuming that the\nhuman was perfectly rational, always optimizing\nthis objective. But we could have been wrong\nabout the form of the objective",
    "start": "971290",
    "end": "978390"
  },
  {
    "text": "or things like that. It turns out this can\nactually be pretty hard to do. If I gave enough of these, and\nthey were close enough together,",
    "start": "978390",
    "end": "984990"
  },
  {
    "text": "you might be\ninconsistent eventually. And so what a lot\nof people do is they will actually\nrelax this assumption",
    "start": "984990",
    "end": "991110"
  },
  {
    "text": "and instead compute a\ndistribution over the weights and model the human's choice\nin a probabilistic way.",
    "start": "991110",
    "end": "998100"
  },
  {
    "text": "So that's what a\nlot of people do. And if you understood\nthis, you have an inkling towards\nunderstanding how RLHF works.",
    "start": "998100",
    "end": "1005190"
  },
  {
    "text": "You may have heard for\nlarge language models. There's obviously\na lot more involved here, but this is the\ngeneral idea there.",
    "start": "1005190",
    "end": "1011905"
  },
  {
    "text": " OK, cool. So that wraps up metrics.",
    "start": "1011905",
    "end": "1019670"
  },
  {
    "text": "And now, we'll go\ninto specifications. OK, so we'll start with\nlogical specifications.",
    "start": "1019670",
    "end": "1028003"
  },
  {
    "text": "Oh, we got a question. Yes. So [INAUDIBLE] that\nprobabilistic measuring",
    "start": "1028003",
    "end": "1033980"
  },
  {
    "text": "for inconsistent preferences. I guess do you mind-- is\nit possible to come up",
    "start": "1033980",
    "end": "1039920"
  },
  {
    "text": "with a tolerance for how you\nwould go about doing that? Would you just count\nthe number of times",
    "start": "1039920",
    "end": "1045079"
  },
  {
    "text": "that they prefer\nsomething that is in line with your hypothesis one?",
    "start": "1045079",
    "end": "1051700"
  },
  {
    "text": "Yeah, so the question\nwas, if we were to do that\nprobabilistic version, is there a simple example\nwe could talk about?",
    "start": "1051700",
    "end": "1058572"
  },
  {
    "text": "There's multiple things\nyou'd have to consider. So the first is you have to\nmodel how the human is picking.",
    "start": "1058572",
    "end": "1063672"
  },
  {
    "text": "So you're now no longer assuming\nthat they're perfectly rational. They always pick\nthe one that they prefer according to your model.",
    "start": "1063672",
    "end": "1069850"
  },
  {
    "text": "And so what's a common thing to\ndo is to come up with a model,",
    "start": "1069850",
    "end": "1075190"
  },
  {
    "text": "and there's common\nmodels people use for this, that says they\npick their favorite one with some high probability,\nand they pick the other ones",
    "start": "1075190",
    "end": "1082780"
  },
  {
    "text": "with some lower probability. So that's the first\nthing you need to figure out how to do that. And then this problem\nof figuring out",
    "start": "1082780",
    "end": "1089920"
  },
  {
    "text": "what's the consistent set turns\ninto of a Bayesian estimation problem.",
    "start": "1089920",
    "end": "1095450"
  },
  {
    "text": "So using very similar\ntechniques to what we talked about for\nBayesian estimation for the parameter\nlearning, you do something",
    "start": "1095450",
    "end": "1101830"
  },
  {
    "text": "very similar in this case. Yeah. So now, we'll get\ninto specifications.",
    "start": "1101830",
    "end": "1109380"
  },
  {
    "text": "I debated a lot whether\nor not I should say this, but I think I'm just going to. I have always found\nthis really boring.",
    "start": "1109380",
    "end": "1116250"
  },
  {
    "text": "So I'm going to do my best\nto keep this not boring. I didn't want to influence\nyour thoughts on this,",
    "start": "1116250",
    "end": "1123280"
  },
  {
    "text": "but it's important, and we'll\nuse it the rest of the course, so try to stay with me here.",
    "start": "1123280",
    "end": "1129179"
  },
  {
    "text": "OK, so a logical\nspecification, it formally defines an operating\nrequirement for a system",
    "start": "1129180",
    "end": "1135750"
  },
  {
    "text": "using a logical formula. And all the logical\nformula is, is",
    "start": "1135750",
    "end": "1140850"
  },
  {
    "text": "a precise expression\nthat evaluates to either true or false. OK.",
    "start": "1140850",
    "end": "1146295"
  },
  {
    "text": "And so there's\ndifferent ways that we can define logical formulas,\ndifferent tools that we can use.",
    "start": "1146295",
    "end": "1151410"
  },
  {
    "text": "One of those tools\nis something that we call propositional logic. And so propositional\nlogic consists",
    "start": "1151410",
    "end": "1158190"
  },
  {
    "text": "of these things\ncalled propositions, which are just\nstatements that evaluate to either true or false.",
    "start": "1158190",
    "end": "1165120"
  },
  {
    "text": "And propositions can be kind of\ndecomposed or are created using these things called\natomic propositions,",
    "start": "1165120",
    "end": "1170970"
  },
  {
    "text": "which is just a proposition that\ncannot be broken down further. So I remember when\nI first started learning about this stuff, and I\nheard about atomic propositions,",
    "start": "1170970",
    "end": "1178290"
  },
  {
    "text": "for some reason, the connection\nwas never made in my mind to atoms, but that\nis the whole point. So it's literally just-- it\ncan't be broken down further.",
    "start": "1178290",
    "end": "1185620"
  },
  {
    "text": "I mean, we maybe learned that\natoms can, but in this case, that's kind of the way to\nthink of atomic propositions.",
    "start": "1185620",
    "end": "1191860"
  },
  {
    "text": "You take them, and you use them\nto build up these more complex propositions.",
    "start": "1191860",
    "end": "1197159"
  },
  {
    "text": "So in this case, this is an\nexample of a proposition. You don't need to worry about\nwhat these symbols mean just yet.",
    "start": "1197160",
    "end": "1202800"
  },
  {
    "text": "But this is a proposition. And then the things\nthat make it up are these atomic propositions.",
    "start": "1202800",
    "end": "1209460"
  },
  {
    "text": "And in a second, we'll realize\nthat what this basically says is that A needs to be true,\nand B needs to be true,",
    "start": "1209460",
    "end": "1215380"
  },
  {
    "text": "and not C needs to be true. ",
    "start": "1215380",
    "end": "1222090"
  },
  {
    "text": "OK, so what are the\ndifferent things we can do with\nthese propositions? There's these operators\nthat we can apply to them.",
    "start": "1222090",
    "end": "1228870"
  },
  {
    "text": "So one the simplest\noperator is not. So let's say that we\nhave the proposition P.",
    "start": "1228870",
    "end": "1235570"
  },
  {
    "text": "So again, it can be\neither true or false. And then not P is just\nthe opposite of that. So if P is true, not P is false.",
    "start": "1235570",
    "end": "1243880"
  },
  {
    "text": "And if P is false,\nnot P is true. That's how to read these tables. ",
    "start": "1243880",
    "end": "1250679"
  },
  {
    "text": "OK, another operator we can use. Now, we're talking about we\nhave two separate propositions. We have P and Q. And\nwe want to know--",
    "start": "1250680",
    "end": "1258263"
  },
  {
    "text": "or we're using the\noperator called conjunction, which you can\nthink of in your mind as and.",
    "start": "1258263",
    "end": "1263280"
  },
  {
    "text": "And so this will come out to be\ntrue if both P and Q are true.",
    "start": "1263280",
    "end": "1269370"
  },
  {
    "text": "If there is any\nother combination, this will end up being false.",
    "start": "1269370",
    "end": "1275340"
  },
  {
    "text": "There's also disjunction,\nwhich is kind of like or. So this will be true if either P\nor Q is true, or both are true.",
    "start": "1275340",
    "end": "1283360"
  },
  {
    "text": "So P and Q true, it'll be\ntrue if either or is true,",
    "start": "1283360",
    "end": "1289245"
  },
  {
    "text": "and then the only\ntime it's false is if both P and Q are false. ",
    "start": "1289245",
    "end": "1295990"
  },
  {
    "text": "OK, there's implication,\nP implies Q. This is kind of like if then.",
    "start": "1295990",
    "end": "1301100"
  },
  {
    "text": "So if P is true, then it must\nbe the case that Q is true. So that's this first case here.",
    "start": "1301100",
    "end": "1307070"
  },
  {
    "text": "In the second case, P\nis true, Q is false, so then that must mean that\nthis implication is false.",
    "start": "1307070",
    "end": "1314890"
  },
  {
    "text": "But if P is false, we don't\nreally care about what Q is. We're not imposing\nany conditions there.",
    "start": "1314890",
    "end": "1321020"
  },
  {
    "text": "And so it'll always just\nevaluate to true if P is false. Yeah. Sorry. For the disjunction, is it\nthe same symbol as conjunction",
    "start": "1321020",
    "end": "1331000"
  },
  {
    "text": "or is it-- In the slides, it is. Here, let me just--",
    "start": "1331000",
    "end": "1336190"
  },
  {
    "text": "I think I can just draw on this. Good catch. ",
    "start": "1336190",
    "end": "1342280"
  },
  {
    "text": "Let me draw here. Oops. No.",
    "start": "1342280",
    "end": "1347700"
  },
  {
    "text": "It should be that if\nyou flip it upside down. Good catch.",
    "start": "1347700",
    "end": "1352970"
  },
  {
    "start": "1352970",
    "end": "1360870"
  },
  {
    "text": "OK, cool. OK. And then finally is\nthe biconditional,",
    "start": "1360870",
    "end": "1368320"
  },
  {
    "text": "so this is like if and only if. And so this is only true if\nP and Q have the same value.",
    "start": "1368320",
    "end": "1374110"
  },
  {
    "text": "So if P and Q are both true,\nthis will come out to be true. If they're different,\nit'll be false.",
    "start": "1374110",
    "end": "1379480"
  },
  {
    "text": "And if they're both\nfalse, it'll be true. ",
    "start": "1379480",
    "end": "1386730"
  },
  {
    "text": "Yeah, so this is saying-- you can think of it as P\nimplies Q. So if P is true,",
    "start": "1386730",
    "end": "1392170"
  },
  {
    "text": "then it must be the\ncase that Q is true. So in this case, P is true and\nQ is true will evaluate to true.",
    "start": "1392170",
    "end": "1400110"
  },
  {
    "text": "If P is true and Q is false,\nwhat we just said, if P is true, Q has to be true. So that means that it's\ngoing to evaluate to false.",
    "start": "1400110",
    "end": "1407242"
  },
  {
    "text": "But that's the only condition\nwe're kind of imposing. So we don't really care-- if P is false, we don't\nreally care what Q is.",
    "start": "1407242",
    "end": "1413320"
  },
  {
    "text": "So either case, that\nwill evaluate to true. OK, so a quick example.",
    "start": "1413320",
    "end": "1421830"
  },
  {
    "text": "Let's say that we want to\nexpress the following statement using propositional logic. We'll say if the agent\nis in a safe state,",
    "start": "1421830",
    "end": "1429060"
  },
  {
    "text": "then the agent is not\nin a collision state. So when we want to do\nsomething like this,",
    "start": "1429060",
    "end": "1434230"
  },
  {
    "text": "the first thing\nthat we need to do is define some\natomic propositions to build up our formula.",
    "start": "1434230",
    "end": "1439559"
  },
  {
    "text": "So we'll start with this atomic\nproposition that we'll call S. And we'll say this proposition\nevaluates to true if the agent",
    "start": "1439560",
    "end": "1446070"
  },
  {
    "text": "is in a safe state. And then it evaluates to--",
    "start": "1446070",
    "end": "1451918"
  },
  {
    "text": "and then we have this\nother proposition called C, and that evaluates\nto true if the agent",
    "start": "1451918",
    "end": "1456960"
  },
  {
    "text": "is in a collision state. OK, based on what we just saw,\ncan anyone guess which operator",
    "start": "1456960",
    "end": "1464000"
  },
  {
    "text": "we should apply here? Yeah. Implies. Implies, yeah.",
    "start": "1464000",
    "end": "1469830"
  },
  {
    "text": "Exactly. So this is saying if-- you can think of the\nimplication as if, then, like we were saying.",
    "start": "1469830",
    "end": "1475470"
  },
  {
    "text": "So if the agent is\nin a safe state, then the agent is not\nin a collision state.",
    "start": "1475470",
    "end": "1481130"
  },
  {
    "text": "And so that's just\nsaying S implies not C. So I guess we also use the\nnegation operator, as well.",
    "start": "1481130",
    "end": "1489150"
  },
  {
    "text": "Awesome. So that's propositional logic. There's lots of ways\nto expand on it.",
    "start": "1489150",
    "end": "1494429"
  },
  {
    "text": "The first way to expand\non it is something called first-order logic. And first-order logic\nbasically just adds",
    "start": "1494430",
    "end": "1501650"
  },
  {
    "text": "these things called variables,\npredicates, and quantifiers to propositional logic.",
    "start": "1501650",
    "end": "1507620"
  },
  {
    "text": "So a variable is just\nan object in a domain. So you can think\nof it like maybe we let the variable x represent\nthe state of an agent.",
    "start": "1507620",
    "end": "1516740"
  },
  {
    "text": "And then a predicate\nis a function that evaluates propositions\nover variables.",
    "start": "1516740",
    "end": "1522019"
  },
  {
    "text": "So all that's saying\nis, for example, we have maybe this\npredicate P of x that",
    "start": "1522020",
    "end": "1527230"
  },
  {
    "text": "returns true if the\nagent is in a safe state. So if you remember,\nwe said our variable x is the state that\nthe agent is in.",
    "start": "1527230",
    "end": "1533629"
  },
  {
    "text": "So when we apply P to x, we\nget true if that state was safe and false if it wasn't.",
    "start": "1533630",
    "end": "1539730"
  },
  {
    "text": "And then maybe we\ndefine another predicate that we call Q of x that\nif x is a collision state,",
    "start": "1539730",
    "end": "1545630"
  },
  {
    "text": "it will return true, and if\nx is not a collision state, it will return false. ",
    "start": "1545630",
    "end": "1552850"
  },
  {
    "text": "OK, so an example here. We kind of can just take the\nformula that we had last time.",
    "start": "1552850",
    "end": "1558460"
  },
  {
    "text": "I guess I used different\nletters than S and C this time. But we have the same exact\nthing we want to express.",
    "start": "1558460",
    "end": "1563690"
  },
  {
    "text": "If the agent is in a safe\nstate, then the agent is not in a collision\nstate, so we just replace it",
    "start": "1563690",
    "end": "1568840"
  },
  {
    "text": "with predicates and variables. ",
    "start": "1568840",
    "end": "1579420"
  },
  {
    "text": "OK, then there's this last\nthing for first-order logic called quantifiers,\nwhich allow us",
    "start": "1579420",
    "end": "1585220"
  },
  {
    "text": "to evaluate propositions\nor these predicates over a collection of variables.",
    "start": "1585220",
    "end": "1591730"
  },
  {
    "text": "There's different\ntypes of quantifiers. One is the universal quantifier. So it looks like this kind\nof upside down A here.",
    "start": "1591730",
    "end": "1599860"
  },
  {
    "text": "And you can think of it\nas kind of saying for all. And so in that case, when you\nhave this type of quantifier,",
    "start": "1599860",
    "end": "1606050"
  },
  {
    "text": "it means that all\nvariables in the domain must satisfy the\nproposition or the predicate",
    "start": "1606050",
    "end": "1611110"
  },
  {
    "text": "that we put forward. And so an example would be\nif we want to say all states need to be safe states,\nthen we can write for all",
    "start": "1611110",
    "end": "1620470"
  },
  {
    "text": "x, P of x, meaning for all of\nx, P of x must evaluate to true.",
    "start": "1620470",
    "end": "1625950"
  },
  {
    "text": " Then there's also the\nexistential quantifier,",
    "start": "1625950",
    "end": "1632840"
  },
  {
    "text": "which is this backwards E.\nAnd you can think of that one like there exists.",
    "start": "1632840",
    "end": "1638140"
  },
  {
    "text": "So there needs to be at least\none variable in the domain that satisfies the proposition.",
    "start": "1638140",
    "end": "1644550"
  },
  {
    "text": "So for example, if we wanted\nto say at least one state is a safe state, we can\nwrite there exists an x,",
    "start": "1644550",
    "end": "1650320"
  },
  {
    "text": "there exists a state,\nsuch that P of x is true. ",
    "start": "1650320",
    "end": "1657630"
  },
  {
    "text": "OK, another example here. I don't know if we've talked\nabout this grid world system",
    "start": "1657630",
    "end": "1663360"
  },
  {
    "text": "yet. I don't really remember. But you can imagine we have this\ngrid world, where an agent can just move around in\nthese cells, and we",
    "start": "1663360",
    "end": "1669660"
  },
  {
    "text": "want it to avoid ending up in\nthis obstacle cell, the red cell there.",
    "start": "1669660",
    "end": "1675360"
  },
  {
    "text": "And so our specification\nwe want to express is for all states\nin the trajectory,",
    "start": "1675360",
    "end": "1681000"
  },
  {
    "text": "the agent does not\nhit an obstacle. And so we're going\nto define some",
    "start": "1681000",
    "end": "1686700"
  },
  {
    "text": "of these predicate functions. So we'll say O of x\nrepresents, or will be true,",
    "start": "1686700",
    "end": "1692370"
  },
  {
    "text": "if x is an obstacle state. And then we want to\nsay for all states,",
    "start": "1692370",
    "end": "1698280"
  },
  {
    "text": "the agent's not in the obstacle\nor does not hit the obstacle. So we can say for\nall x, not O of x.",
    "start": "1698280",
    "end": "1706350"
  },
  {
    "text": "So for all x, whether or\nnot it's an obstacle state, does not evaluate to true.",
    "start": "1706350",
    "end": "1712645"
  },
  {
    "text": " So just some examples.",
    "start": "1712645",
    "end": "1718440"
  },
  {
    "text": "On the left would be a\ntrajectory for the system that does satisfy the specification.",
    "start": "1718440",
    "end": "1723472"
  },
  {
    "text": "It doesn't end up\nin the obstacle. And then on the right,\nit does hit the obstacle. There is a state that\nhits the obstacle,",
    "start": "1723473",
    "end": "1728750"
  },
  {
    "text": "and so it does not satisfy it. ",
    "start": "1728750",
    "end": "1735110"
  },
  {
    "text": "OK, another example. Now, let's add one more\nthing to this Gridworld,",
    "start": "1735110",
    "end": "1741230"
  },
  {
    "text": "where, not only do we want to\navoid hitting this obstacle, but we also want to\nreach this green goal.",
    "start": "1741230",
    "end": "1746610"
  },
  {
    "text": "And so we say the agent\nmust reach a goal state and avoid the obstacle state.",
    "start": "1746610",
    "end": "1752900"
  },
  {
    "text": "We'll use the same\npredicate we had before. So O of x represents whether\nx is an obstacle state.",
    "start": "1752900",
    "end": "1759179"
  },
  {
    "text": "But then we'll add one\nmore predicate here, where we say G of x represents\nthat x is in a goal state.",
    "start": "1759180",
    "end": "1767600"
  },
  {
    "text": "So now, we get to use\nboth of our quantifiers. And just like we had before,\nwe want to say that for all x,",
    "start": "1767600",
    "end": "1775370"
  },
  {
    "text": "the agent is not\nan obstacle state. And we have this\nadditional requirement,",
    "start": "1775370",
    "end": "1781860"
  },
  {
    "text": "which is that there exists an\nx, such that x is a goal state. So we must have some x in our\ntrajectory that is at the goal.",
    "start": "1781860",
    "end": "1790905"
  },
  {
    "text": "So if we look at\nthese two trajectories down here, very similarly,\nthis one reaches the goal, and it doesn't hit\nthe obstacle, so it",
    "start": "1790905",
    "end": "1797660"
  },
  {
    "text": "satisfies this specification. And this one does\nnot reach the goal. It does still\navoid the obstacle,",
    "start": "1797660",
    "end": "1804070"
  },
  {
    "text": "but it doesn't reach the goal. And so because we\nhave an and here, this specification\nwill evaluate to false.",
    "start": "1804070",
    "end": "1811419"
  },
  {
    "text": "Yeah. So this would evaluate\nto true, for example, for the left subtree? It would also evaluate\nto true if the goal",
    "start": "1811420",
    "end": "1816550"
  },
  {
    "text": "state was in the middle\nof the trajectory, right? It's just any-- Yeah, if it hit the goal and\nkept going past the goal.",
    "start": "1816550",
    "end": "1823310"
  },
  {
    "text": "Is that your question? Yeah, that would still\nevaluate to true. In this specific problem,\nwhenever we show it in class,",
    "start": "1823310",
    "end": "1830409"
  },
  {
    "text": "we call the goal and the\nobstacle terminal states. So once it hits the\ngoal, we specify that it just stays\nin there, given",
    "start": "1830410",
    "end": "1837190"
  },
  {
    "text": "the dynamics of the system. But that's true. If it could keep\ngoing past the goal, it would still satisfy\nthe specification.",
    "start": "1837190",
    "end": "1844600"
  },
  {
    "text": "OK, that's first-order logic. OK, so now, we're going to keep\nextending down this ladder.",
    "start": "1844600",
    "end": "1852980"
  },
  {
    "text": "And the next thing that we\nbuild on top of this with is something called\ntemporal logic.",
    "start": "1852980",
    "end": "1858610"
  },
  {
    "text": "And what temporal logic does is\nextend this first-order logic to specify properties over time.",
    "start": "1858610",
    "end": "1864260"
  },
  {
    "text": "So because we focus\non sequential systems in this class, you can\nimagine that temporal logic is pretty critical for us.",
    "start": "1864260",
    "end": "1872460"
  },
  {
    "text": "And the first type of temporal\nlogic that we'll talk about is called linear temporal logic.",
    "start": "1872460",
    "end": "1878309"
  },
  {
    "text": "And basically, it specifies\nproperties over linear sequences of states. So that just means\nkind of a set of states",
    "start": "1878310",
    "end": "1886080"
  },
  {
    "text": "that is just one after\nthe other in time. There's three\ndifferent operators",
    "start": "1886080",
    "end": "1892110"
  },
  {
    "text": "that we'll talk about\nfor this course. There's more operators\nfor linear temporal logic",
    "start": "1892110",
    "end": "1897480"
  },
  {
    "text": "that we mentioned, I think,\nas a side note in the book. But the three that we're\ngoing to care about, one is called always,\nand it's written",
    "start": "1897480",
    "end": "1905039"
  },
  {
    "text": "like this square symbol and\nP, which is our proposition. You can read it as always P.",
    "start": "1905040",
    "end": "1911490"
  },
  {
    "text": "And if you're wanting to\nwrite it in LaTeX or in Julia, backslash square is how you get\nthat square symbol, in case you",
    "start": "1911490",
    "end": "1919050"
  },
  {
    "text": "were wondering. And what it specifies\nis that P must be true at all time\nsteps in the future.",
    "start": "1919050",
    "end": "1927750"
  },
  {
    "text": "OK, I want to explain\nthese plots slowly because we're going\nto see a few of them. And I think what they're trying\nto convey is not confusing,",
    "start": "1927750",
    "end": "1934960"
  },
  {
    "text": "but they can be\nconfusing at first if you don't fully understand\nwhat these axes mean.",
    "start": "1934960",
    "end": "1940470"
  },
  {
    "text": "So what we're showing here is\non the x-axis, we have time, and then we have different\nlogical specifications.",
    "start": "1940470",
    "end": "1950020"
  },
  {
    "text": "So P is our proposition here,\nand then we have always P. And the way to read\nthis is the blue dot",
    "start": "1950020",
    "end": "1958800"
  },
  {
    "text": "indicates that it's true. If there's no dot there, it\nindicates that it's false. And so when we look at,\nfor example, time step 1,",
    "start": "1958800",
    "end": "1967510"
  },
  {
    "text": "we're looking at all\ntime steps in the future, so all time steps from 1 on. When we look at whether or not\nit's satisfied at time step 7,",
    "start": "1967510",
    "end": "1975480"
  },
  {
    "text": "we're only looking from\ntime step 7 till the end. So we only care about\nwhat's in the future. So for example, when we say\nalways P, well, at time step 1,",
    "start": "1975480",
    "end": "1984270"
  },
  {
    "text": "P is not true from\ntimestamps 1 through 4. It is true 5 through 10,\nbut it's definitely not",
    "start": "1984270",
    "end": "1989420"
  },
  {
    "text": "true at all time\nsteps in the future, so always P is not going\nto be true at time step 1.",
    "start": "1989420",
    "end": "1995059"
  },
  {
    "text": "At time step 2, P\nagain, there's still some time steps in the\nfuture where it's not true.",
    "start": "1995060",
    "end": "2000200"
  },
  {
    "text": "So always P is also not going\nto be true at time step 2, and so on until we\nget to time step 5.",
    "start": "2000200",
    "end": "2006380"
  },
  {
    "text": "Now, P is always\ntrue for the rest of the trajectory for all\ntime steps in the future, and so we get that always\nP is true, as well,",
    "start": "2006380",
    "end": "2013123"
  },
  {
    "text": "and this will\nhappen till the end. Yeah. [INAUDIBLE]",
    "start": "2013123",
    "end": "2018856"
  },
  {
    "text": " I think we're including four\nin the time that we care about.",
    "start": "2018856",
    "end": "2024230"
  },
  {
    "text": "Yeah. The question was, is 4\nalso OK for always P? And then I guess one other\nkind of thing to mention",
    "start": "2024230",
    "end": "2030910"
  },
  {
    "text": "is a lot of times, when we're\njust kind of given a trajectory, and we want to say, does\nit satisfy this formula?",
    "start": "2030910",
    "end": "2036530"
  },
  {
    "text": "And so a lot of times, we\njust will evaluate from 1 for all time steps\nin the future. ",
    "start": "2036530",
    "end": "2043530"
  },
  {
    "text": "OK, and then the next operator\nwe'll talk about is eventually. So this is this diamond shape\nhere, read as eventually P.",
    "start": "2043530",
    "end": "2053280"
  },
  {
    "text": "If you want to know how to\nwrite that in LaTeX code, it's backslash lozenge.",
    "start": "2053280",
    "end": "2059663"
  },
  {
    "text": "And basically,\nwhat this is saying is that P must be true at\nsome time step in the future. So not all time steps, but\nsome time step in the future.",
    "start": "2059663",
    "end": "2067679"
  },
  {
    "text": "So here's what an example plot\nwould look like for this one. So now, at time step\n1, if we look at P,",
    "start": "2067679",
    "end": "2074339"
  },
  {
    "text": "there is some time step in\nthe future that it holds true. It holds true at 5, 6, and 7. So then eventually, P\nis true at time step 1.",
    "start": "2074340",
    "end": "2082980"
  },
  {
    "text": "Time step 2, same thing. Eventually, in the\nfuture, it becomes true. 6, eventually, it becomes true.",
    "start": "2082980",
    "end": "2089919"
  },
  {
    "text": "But as soon as we get to\ntime step 8, and we look, there's no more time steps in\nthe future where P is true.",
    "start": "2089920",
    "end": "2096040"
  },
  {
    "text": "And so eventually, P is\nnot going to be true. OK, and then the last one\nwe're going to talk about, now,",
    "start": "2096040",
    "end": "2102240"
  },
  {
    "text": "we have two propositions\nhere, and that's P until Q. So it's this cursive U, read P\nuntil Q. And what this one says,",
    "start": "2102240",
    "end": "2111630"
  },
  {
    "text": "it's kind of long, but\nit's not too crazy. It's just saying Q must be true\nat some time step in the future,",
    "start": "2111630",
    "end": "2117520"
  },
  {
    "text": "so this one eventually\nhas to become true. And P is true at least\nuntil Q becomes true.",
    "start": "2117520",
    "end": "2124950"
  },
  {
    "text": "So let's see what\nthis one looks like. So at time step\n1, we have that--",
    "start": "2124950",
    "end": "2130862"
  },
  {
    "text": " so we can check the\nfirst part, which is Q is true at some\ntime step in the future.",
    "start": "2130863",
    "end": "2137290"
  },
  {
    "text": "So at time step 1, Q does become\ntrue at some time in the future, but is P true until then?",
    "start": "2137290",
    "end": "2142800"
  },
  {
    "text": "No, because P is not true\nat these couple steps. And so it's not true\nuntil Q becomes true.",
    "start": "2142800",
    "end": "2148420"
  },
  {
    "text": "So for that case, P until\nQ evaluates to false.",
    "start": "2148420",
    "end": "2154740"
  },
  {
    "text": "Now, let's move on to\ntime step 3, for example. Q does become true at some\ntime step in the future,",
    "start": "2154740",
    "end": "2160350"
  },
  {
    "text": "and P is true until then. So P until Q will\nevaluate to true.",
    "start": "2160350",
    "end": "2166250"
  },
  {
    "text": "And then that kind of\nholds for the rest of these until we get to time step 10. Now, Q is not true at\ntime step 10 or any time",
    "start": "2166250",
    "end": "2174017"
  },
  {
    "text": "step in the future. There are no more time steps. And so P until Q is\nnot going to be true.",
    "start": "2174018",
    "end": "2180070"
  },
  {
    "start": "2180070",
    "end": "2185090"
  },
  {
    "text": "Any questions on any\nof these operators. Yep.",
    "start": "2185090",
    "end": "2191165"
  },
  {
    "text": "[INAUDIBLE] would there be\nnothing on the bottom then?",
    "start": "2191165",
    "end": "2198620"
  },
  {
    "text": "Yeah, so the question was,\ndo we need these to overlap? Yeah. P needs to be true, at\nleast until Q becomes true.",
    "start": "2198620",
    "end": "2205920"
  },
  {
    "text": "So you need to have that\nlittle overlap there. ",
    "start": "2205920",
    "end": "2212960"
  },
  {
    "text": "Yes. Yeah.  OK, awesome.",
    "start": "2212960",
    "end": "2218930"
  },
  {
    "text": "So now, let's do\nanother example. We've added one more\nthing to our Gridworld, which is this blue square.",
    "start": "2218930",
    "end": "2224293"
  },
  {
    "text": "And we're going to say this is a\ncheckpoint that the agent needs to go to. So our new specification\nhas eventually",
    "start": "2224293",
    "end": "2230260"
  },
  {
    "text": "reach the goal after passing\nthrough the checkpoint and always avoid the obstacle.",
    "start": "2230260",
    "end": "2235750"
  },
  {
    "text": "So we're going to define\nsome predicates here. We're going to say-- I previously called this O.\nNow, I'm calling it F, so sorry",
    "start": "2235750",
    "end": "2242200"
  },
  {
    "text": "about that. But F of s of t will tell\nus that the state at time t",
    "start": "2242200",
    "end": "2247359"
  },
  {
    "text": "contains the obstacle, so what\nI was previously calling O of x.",
    "start": "2247360",
    "end": "2252760"
  },
  {
    "text": "G of s of t says that the\nstate at time t is the goal.",
    "start": "2252760",
    "end": "2257890"
  },
  {
    "text": "And then C of s of t says\nthat the state at time t is the checkpoint.",
    "start": "2257890",
    "end": "2263410"
  },
  {
    "text": "And then we're going to\nuse these predicates now to define our property. And so we get this\nlong formula here.",
    "start": "2263410",
    "end": "2270290"
  },
  {
    "text": "And it's just breaking down\neach part of this specification. So we're saying\nthis first part is",
    "start": "2270290",
    "end": "2276320"
  },
  {
    "text": "kind of that diamond\nsymbol, which is eventually reach the goal. That was the first part. Then this next part, not\nG until C, that's saying,",
    "start": "2276320",
    "end": "2286910"
  },
  {
    "text": "don't reach the goal until\nyou've reached the checkpoint. So then that's, again,\neventually reach the goal after passing\nthrough the checkpoint.",
    "start": "2286910",
    "end": "2293549"
  },
  {
    "text": "That's what this\npart takes care of. And then we have, and always\ndon't be in the obstacle,",
    "start": "2293550",
    "end": "2299370"
  },
  {
    "text": "so and always\navoid the obstacle. ",
    "start": "2299370",
    "end": "2305540"
  },
  {
    "text": "Any other questions on that? Yeah. So if we wanted to\nevaluate [INAUDIBLE]",
    "start": "2305540",
    "end": "2311390"
  },
  {
    "text": "reach the goal before\nreaching the checkpoint. But then they reach\nthe checkpoint",
    "start": "2311390",
    "end": "2316490"
  },
  {
    "text": "and then reach the goal. How could we modify this to\ninclude those trajectories? Since I guess that's\nwhat I initially",
    "start": "2316490",
    "end": "2323240"
  },
  {
    "text": "thought the first statement\nin natural language was referring to.",
    "start": "2323240",
    "end": "2329420"
  },
  {
    "text": "OK, so the question is, if\nwe want it to reach the goal, then reach the checkpoint\nand then go back to the goal.",
    "start": "2329420",
    "end": "2336579"
  },
  {
    "text": "[INAUDIBLE] as long as you\nreach the checkpoint, then [INAUDIBLE].",
    "start": "2336580",
    "end": "2341910"
  },
  {
    "text": "OK, yeah. So you're saying, if you\nfollow the trajectory, you went to the goal, you\nwent to the checkpoint,",
    "start": "2341910",
    "end": "2346980"
  },
  {
    "text": "and then you went\nback to the goal. You want to say that\nthat's still OK? ",
    "start": "2346980",
    "end": "2353339"
  },
  {
    "text": "Let me think about it. I mean, my first\ninstinct would be-- ",
    "start": "2353340",
    "end": "2365640"
  },
  {
    "text": "you might need to use signal\ntemporal logic for it, but I'd have to\nthink about that. It might be possible. It's just not immediately\nobvious to me how you do it.",
    "start": "2365640",
    "end": "2372990"
  },
  {
    "text": "OK, so here's an\nexample of a trajectory that would satisfy this. We pass through the checkpoint,\nand we reach the goal,",
    "start": "2372990",
    "end": "2379560"
  },
  {
    "text": "and we never hit the obstacle.  OK, wake up, everyone.",
    "start": "2379560",
    "end": "2386730"
  },
  {
    "text": "I told you I'd try to keep\nyou with me, so here you go. All right, so that was\nlinear temporal logic.",
    "start": "2386730",
    "end": "2393290"
  },
  {
    "text": "We're going to move on\nto signal temporal logic. And what signal temporal\nlogic allows us to do",
    "start": "2393290",
    "end": "2400190"
  },
  {
    "text": "is to extend this\nlinear temporal logic to real valued signals. ",
    "start": "2400190",
    "end": "2407210"
  },
  {
    "text": "OK, so what is a signal? A signal is just\nsomething that kind of",
    "start": "2407210",
    "end": "2412310"
  },
  {
    "text": "changes its value over time. So you can imagine we have\ntime on the horizontal axis,",
    "start": "2412310",
    "end": "2417359"
  },
  {
    "text": "the value on the\nvertical, and we just have some kind of points\nthat represent this signal. And the signal, we just\nneed to specify the time",
    "start": "2417360",
    "end": "2424760"
  },
  {
    "text": "that each point was taken and\nthen its value at each time.",
    "start": "2424760",
    "end": "2429950"
  },
  {
    "text": "It doesn't have to necessarily\nbe at regular time intervals that we take these values. We just need a set of times and\na set of values, real values.",
    "start": "2429950",
    "end": "2438565"
  },
  {
    "text": " And so what signal\ntemporal logic does beyond linear temporal logic\nis introduces two new things",
    "start": "2438565",
    "end": "2447380"
  },
  {
    "text": "that we can do. One is it allows us to specify\nproperties over a time interval.",
    "start": "2447380",
    "end": "2453960"
  },
  {
    "text": "So, say, we have the time\ninterval from A to B. So we could, for example, write\neventually between A and B,",
    "start": "2453960",
    "end": "2463010"
  },
  {
    "text": "P needs to hold. So that just means that\nthis whole thing needs to hold only between A and B.",
    "start": "2463010",
    "end": "2471500"
  },
  {
    "text": "And so what we're saying here is\nwe have some time A, some time",
    "start": "2471500",
    "end": "2477770"
  },
  {
    "text": "B, and we're looking\nwithin this time interval to evaluate this formula,\neventually P. OK,",
    "start": "2477770",
    "end": "2488930"
  },
  {
    "text": "and then the other thing,\nthe second thing that signal temporal logic\nallows us to do, is it allows us to map real\nvalued signals to truth values.",
    "start": "2488930",
    "end": "2498089"
  },
  {
    "text": "So it just kind of\nintroduced this extra type of predicate\nfunction that we can use to map real values\nto a truth value.",
    "start": "2498090",
    "end": "2506480"
  },
  {
    "text": "It has this form called\nmu sub c of our state. And all this is saying\nis we apply some function",
    "start": "2506480",
    "end": "2513640"
  },
  {
    "text": "to our state, and we\ncheck if it's greater than some constant value, c. So it's just kind\nof another predicate",
    "start": "2513640",
    "end": "2519130"
  },
  {
    "text": "that we have in our toolbox. So just to demonstrate\nthat, we have some value, c,",
    "start": "2519130",
    "end": "2526120"
  },
  {
    "text": "and we're checking\nwhether our signal is greater than that value.",
    "start": "2526120",
    "end": "2532490"
  },
  {
    "text": "So it would satisfy it over\nhere, but not over here. ",
    "start": "2532490",
    "end": "2537940"
  },
  {
    "text": "OK, a white slide. Oh, yeah. Just to clarify the-- so when you specify this\ndimension property over A, B,",
    "start": "2537940",
    "end": "2546700"
  },
  {
    "text": "so do you mean that\neventually, your proposition is true for all times in A to B?",
    "start": "2546700",
    "end": "2554049"
  },
  {
    "text": "Yes. So I guess that implies\nthat if we see eventually P, then P must be true at P, just\nbecause if it wasn't at P--",
    "start": "2554050",
    "end": "2563890"
  },
  {
    "text": "Oh. Oh, oh. Let's say that P was true at\nsome c within A to B, naturally,",
    "start": "2563891",
    "end": "2569550"
  },
  {
    "text": "I would say, oh, eventually\nP within A and B, but I guess that's\nnot the case here. Yeah, yeah, that's\na great question.",
    "start": "2569550",
    "end": "2575680"
  },
  {
    "text": "So the question was,\nif we say eventually-- I think we had this. Yeah, we had this kind of\neventually between A and B,",
    "start": "2575680",
    "end": "2582006"
  },
  {
    "text": "does that mean that\nP is going to have to hold at B because\neventually, it needs to hold at every\nsingle time in between there?",
    "start": "2582007",
    "end": "2587790"
  },
  {
    "text": "Do you know if that's true? Absolutely. Yeah.",
    "start": "2587790",
    "end": "2592793"
  },
  {
    "text": " I mean, as long as it holds at\nleast once within A to B, then",
    "start": "2592793",
    "end": "2600330"
  },
  {
    "text": "that would evaluate\nbecause it's eventually-- OK, so you're just checking\nwhen it starts at A",
    "start": "2600330",
    "end": "2607121"
  },
  {
    "text": "if it holds at A, basically? Yeah. The eventually holds at A?",
    "start": "2607122",
    "end": "2613230"
  },
  {
    "text": "OK. So you're evaluating it\nat A. So in those plots we saw earlier, where we had\ntime step 1 through the end,",
    "start": "2613230",
    "end": "2620589"
  },
  {
    "text": "you could pretend\nlike A was 1, and we want to check if it holds\nin that interval from there.",
    "start": "2620590",
    "end": "2626110"
  },
  {
    "text": "It would have been the same\nfor [INAUDIBLE] always? Well, always, you\njust need them all.",
    "start": "2626110",
    "end": "2631960"
  },
  {
    "text": "Yeah.  Until, yeah. So you'd need it to hold\nstarting at the beginning.",
    "start": "2631960",
    "end": "2639840"
  },
  {
    "text": "Yeah, that's a great question.  Yeah.",
    "start": "2639840",
    "end": "2645360"
  },
  {
    "text": "So basically [INAUDIBLE]\nbetween time steps A and B. Yeah, exactly.",
    "start": "2645360",
    "end": "2651390"
  },
  {
    "text": "Yeah. Just building on that, can you\nadd open or closed-set notation",
    "start": "2651390",
    "end": "2657210"
  },
  {
    "text": "to A comma B to\nmodify that condition? Good question.",
    "start": "2657210",
    "end": "2662680"
  },
  {
    "text": "Have you ever seen that before? Say the question again. Could you use brackets,\nI guess, instead",
    "start": "2662680",
    "end": "2670050"
  },
  {
    "text": "of braces to do open or\nclosed-set notation on the time?",
    "start": "2670050",
    "end": "2677760"
  },
  {
    "text": "The short answer is\nyes, but I think it's a convention to do inclusive.",
    "start": "2677760",
    "end": "2684660"
  },
  {
    "text": "Yeah. So the question was,\ncould you have-- these are these closed\nbrackets, so they're like including A and B.\nThe question was, could you",
    "start": "2684660",
    "end": "2690560"
  },
  {
    "text": "have an open bracket here,\nso that you don't include B, but you include right before it? And the answer to that was,\nit's typically a convention",
    "start": "2690560",
    "end": "2698405"
  },
  {
    "text": "to do with these\nclosed brackets, but you could do it in a\ndifferent way if you want to.",
    "start": "2698405",
    "end": "2706160"
  },
  {
    "text": "All right, let's go back here. OK, white slide.",
    "start": "2706160",
    "end": "2711810"
  },
  {
    "text": "Wake up, again. To wake you up and\nshow you a table. So this table is from the book.",
    "start": "2711810",
    "end": "2717770"
  },
  {
    "text": "I think this is the crux\nof what we were trying to get to here, which\nis specifying properties",
    "start": "2717770",
    "end": "2723860"
  },
  {
    "text": "for the various\nexamples that we'll use throughout the quarter. So here's just three\nof the example problems",
    "start": "2723860",
    "end": "2729170"
  },
  {
    "text": "that we'll use in the quarter. One is this continuum\nworld example, where you have this agent\nthat kind of moves around",
    "start": "2729170",
    "end": "2734990"
  },
  {
    "text": "in this square, and it wants\nto get to the green goal, and it wants to avoid\nthe red obstacle.",
    "start": "2734990",
    "end": "2740750"
  },
  {
    "text": "And so just here's\nwhat the specification looks like for that. So we want to say reach the goal\nwithout hitting the obstacle.",
    "start": "2740750",
    "end": "2748630"
  },
  {
    "text": "So very similarly to the things\nthat we defined earlier, we have a predicate\nfor a state being",
    "start": "2748630",
    "end": "2755020"
  },
  {
    "text": "in the goal, a predicate for\nthe state being in the obstacle, and we say eventually, goal,\nand always, not obstacle.",
    "start": "2755020",
    "end": "2763810"
  },
  {
    "text": "Yeah, now that I'm\nthinking about-- oh, no, OK, I'm still thinking\nabout this checkpoint question. I thought I had the\nanswer, but never mind.",
    "start": "2763810",
    "end": "2769870"
  },
  {
    "text": "OK, second one, in the\ninverted pendulum system. So we talked about that briefly\nin the previous lectures,",
    "start": "2769870",
    "end": "2777910"
  },
  {
    "text": "where we want the\npendulum to be upright, and so we want it\nto be specifically",
    "start": "2777910",
    "end": "2783400"
  },
  {
    "text": "the angle between negative pi\nover 4 and pi over 4 radians. So anywhere in this green region\nand anywhere in this red region",
    "start": "2783400",
    "end": "2790600"
  },
  {
    "text": "is not OK. So we define-- we'll\nspecify our property as just keep the\npendulum balanced.",
    "start": "2790600",
    "end": "2797500"
  },
  {
    "text": "And we'll create\nthis predicate, B, that will return true, as long\nas the absolute value of theta",
    "start": "2797500",
    "end": "2804160"
  },
  {
    "text": "is less than pi over\nfour, so that means it's in this green region. And then we just say\nthat we want always B,",
    "start": "2804160",
    "end": "2810290"
  },
  {
    "text": "so B always needs to be true. And then finally, for the\naircraft collision avoidance",
    "start": "2810290",
    "end": "2815320"
  },
  {
    "text": "problem, this one's a\nlittle more interesting because we get to use our\ntemporal specifying like a time",
    "start": "2815320",
    "end": "2822760"
  },
  {
    "text": "interval. So if you remember,\nwe said that we",
    "start": "2822760",
    "end": "2828369"
  },
  {
    "text": "assume that we have some\ntime until the aircraft are going to collide.",
    "start": "2828370",
    "end": "2834220"
  },
  {
    "text": "Specifically, we say that\nwe have 40 to 41 seconds before they might collide.",
    "start": "2834220",
    "end": "2839450"
  },
  {
    "text": "And what we mean by\nthey might collide means they've lost all of\ntheir horizontal separation.",
    "start": "2839450",
    "end": "2844930"
  },
  {
    "text": "So at that point,\nwe want to make sure that they have sufficient\nvertical separation, such that they didn't collide\nwhen they got to that point.",
    "start": "2844930",
    "end": "2851440"
  },
  {
    "text": "And so our property\nspecifies that we want at least 50 meters\nof relative altitude",
    "start": "2851440",
    "end": "2857200"
  },
  {
    "text": "between the time\n40 and 41 seconds. So we want, just at\nthe very end when they've lost their horizontal\nseparation, to make sure",
    "start": "2857200",
    "end": "2863640"
  },
  {
    "text": "that we have a big\nenough relative altitude. And so we will\nspecify this predicate",
    "start": "2863640",
    "end": "2870330"
  },
  {
    "text": "called S, which says\nthat the absolute value of the relative altitude\nbetween the aircraft",
    "start": "2870330",
    "end": "2876570"
  },
  {
    "text": "is greater than or equal to 50. And then our property\nis that we always want that to be true\nbetween 40 and 41 seconds.",
    "start": "2876570",
    "end": "2885900"
  },
  {
    "text": "And you're seeing some\nJulia code over here. I'm going to talk about\nhow that works shortly.",
    "start": "2885900",
    "end": "2893910"
  },
  {
    "text": "But essentially, he's created\nthis very nice Julia package you can use to write\nthese properties and evaluate them in Julia code.",
    "start": "2893910",
    "end": "2902010"
  },
  {
    "text": "And you can see, because\nJulia is so wonderful and allows us to use\nthese Unicode characters, we can actually write the actual\ncharacters for these things.",
    "start": "2902010",
    "end": "2910410"
  },
  {
    "text": "You have a question. Yeah. So instead of signal\ntemporal logic, if we wanted to extend this to\nfuzzy logic for whatever reason,",
    "start": "2910410",
    "end": "2919250"
  },
  {
    "text": "would the truth values be\njust like other signals,",
    "start": "2919250",
    "end": "2925050"
  },
  {
    "text": "or would they be like their\nown independent thing? So the question was, for\nsignal temporal logic,",
    "start": "2925050",
    "end": "2931050"
  },
  {
    "text": "if we were to extend\nit to fuzzy logic, what would the truth values be? Yes. I don't really know\nanything about fuzzy logic,",
    "start": "2931050",
    "end": "2937950"
  },
  {
    "text": "so I don't think I\ncan answer that one. Yeah. Any other questions?",
    "start": "2937950",
    "end": "2944026"
  },
  {
    "start": "2944026",
    "end": "2949519"
  },
  {
    "text": "I think I could\nanswer that question. Logically, it's just like a\nprobability between 0 and 1 instead of--",
    "start": "2949520",
    "end": "2955400"
  },
  {
    "text": "or roughly [INAUDIBLE]. There are ways to do\nprobabilistic temporal logics,",
    "start": "2955400",
    "end": "2962480"
  },
  {
    "text": "which might help\naddress your question. ",
    "start": "2962480",
    "end": "2969530"
  },
  {
    "text": "OK, a fuzzy way to address\nthe fuzzy question. There's probabilistic\ntemporal logics,",
    "start": "2969530",
    "end": "2975329"
  },
  {
    "text": "so maybe that's an option. Thanks. OK, all right, here we go. Wake up again.",
    "start": "2975330",
    "end": "2980955"
  },
  {
    "text": "Important stuff that\nwe're going to use for the rest of the\nquarter about to happen. OK, so let's imagine that\nwe have this signal here.",
    "start": "2980955",
    "end": "2990680"
  },
  {
    "text": "And I'm going to talk about a\nreally cool property of signal temporal logic. And for now, let's\nactually just focus",
    "start": "2990680",
    "end": "2996170"
  },
  {
    "text": "on one portion of this signal. So let's just focus on one\ntime step that we have. We'll call it t.",
    "start": "2996170",
    "end": "3001420"
  },
  {
    "text": "And look at the\nsignal value here. We'll call that st.",
    "start": "3001420",
    "end": "3006640"
  },
  {
    "text": "And then remember, we'll\nset our proposition equal to this predicate function\nthat we introduced for signal",
    "start": "3006640",
    "end": "3014319"
  },
  {
    "text": "temporal logic, where we say mu\nc of st, meaning that mu of st",
    "start": "3014320",
    "end": "3021730"
  },
  {
    "text": "needs to be greater than or\nequal to c, if you remember. And then we're just going to\ndefine the function mu of st",
    "start": "3021730",
    "end": "3027280"
  },
  {
    "text": "to be st. So it just returns st. So what we're really saying with\nthis property or this predicate",
    "start": "3027280",
    "end": "3032410"
  },
  {
    "text": "is just that the state,\nso this value here, needs to be greater\nthan some value, c, OK?",
    "start": "3032410",
    "end": "3039180"
  },
  {
    "text": "So like I said, P\nwill be true as long as our state, this value\nst, is greater than whatever",
    "start": "3039180",
    "end": "3044790"
  },
  {
    "text": "constant c we specify. OK, so I'm going to show\nyou some kind of versions",
    "start": "3044790",
    "end": "3051839"
  },
  {
    "text": "of this property or\nthings that could happen. And I want you to pay attention\nto how you feel about them, OK?",
    "start": "3051840",
    "end": "3058972"
  },
  {
    "text": "So here's the first one. So we satisfy the property. Think about the feeling\nthat you have right now.",
    "start": "3058972",
    "end": "3067319"
  },
  {
    "text": "OK, here's the next one. Here's another\npossible value for c. We're still satisfying\nthe property,",
    "start": "3067320",
    "end": "3073480"
  },
  {
    "text": "but think about what\nyou're feeling right now. OK, so if you thought\nabout your feelings,",
    "start": "3073480",
    "end": "3078940"
  },
  {
    "text": "maybe when you saw\nthis one, you felt a little bit different than\nwhen you saw this one, right?",
    "start": "3078940",
    "end": "3084095"
  },
  {
    "text": "Because here, we were\nlike almost failing. We just barely made it. And over here, we were\nfeeling pretty good.",
    "start": "3084095",
    "end": "3090730"
  },
  {
    "text": "We were not even really\nclose to the failure. Think about this one, as well.",
    "start": "3090730",
    "end": "3095820"
  },
  {
    "text": "So here, we're just\nbarely failing. And then here, not even close.",
    "start": "3095820",
    "end": "3102450"
  },
  {
    "text": "We didn't make it at all. So these things\nlike feel different. And with these binary\nyes or no properties,",
    "start": "3102450",
    "end": "3108577"
  },
  {
    "text": "there's no way to really\ndistinguish between this. Here, they're just both\nsatisfied or they're both not. But something that's really\ncool about signal temporal logic",
    "start": "3108577",
    "end": "3115520"
  },
  {
    "text": "is it gives us\nthis value that we can use to quantify these\nfeelings that we might have.",
    "start": "3115520",
    "end": "3122000"
  },
  {
    "text": "And so essentially,\nwhat we do is we use this value\ncalled robustness. And I'm going to talk, in\na second, about how exactly",
    "start": "3122000",
    "end": "3129740"
  },
  {
    "text": "it's defined. But the way to think about\nrobustness is it's some value. And at zero, or for\nvalues greater than zero,",
    "start": "3129740",
    "end": "3137810"
  },
  {
    "text": "that will represent any\ntrajectory that is a success. Any trajectory,\nsuccessful trajectory,",
    "start": "3137810",
    "end": "3143630"
  },
  {
    "text": "will map to a robustness value\nthat's greater than zero. And then the ones that\nfeel more successful",
    "start": "3143630",
    "end": "3149450"
  },
  {
    "text": "than the other ones will map\nto a higher robustness value. So you can think more\nsuccessful, more robust, less",
    "start": "3149450",
    "end": "3155660"
  },
  {
    "text": "far away from-- or more far away from failing. For below zero, any\ntrajectory that maps",
    "start": "3155660",
    "end": "3162020"
  },
  {
    "text": "to a robustness value\nthat is below zero is a failure trajectory. And the more negative\nit is, the further",
    "start": "3162020",
    "end": "3169220"
  },
  {
    "text": "it was from being a\nsuccessful trajectory.",
    "start": "3169220",
    "end": "3174290"
  },
  {
    "text": "Any questions on that? I haven't talked yet about how\nwe actually compute this value. ",
    "start": "3174290",
    "end": "3181369"
  },
  {
    "text": "OK, so like I said, over here,\nwe're feeling pretty safe. As we move over, we're\nalmost failing now.",
    "start": "3181370",
    "end": "3190610"
  },
  {
    "text": "We just barely failed. And then as our robustness\nbecomes even more negative, we're not even close.",
    "start": "3190610",
    "end": "3197810"
  },
  {
    "text": "So how do we go about\ncalculating this? So for that simple\nproposition we had, that was just like the\nmu sub c of s of t,",
    "start": "3197810",
    "end": "3206270"
  },
  {
    "text": "we just calculated by\nsubtracting c from mu of s of t. So remember, for example, for\nthis property, where we had,",
    "start": "3206270",
    "end": "3212800"
  },
  {
    "text": "we just want st to\nbe greater than c. We're just basically figuring\nout how far away st is from c.",
    "start": "3212800",
    "end": "3220660"
  },
  {
    "text": "So that's kind of\nthe intuition there. So we'll have a bigger\ngap here and then",
    "start": "3220660",
    "end": "3226180"
  },
  {
    "text": "a smaller gap here, which will\nresult in that smaller value. ",
    "start": "3226180",
    "end": "3233690"
  },
  {
    "text": "OK. But we don't just want\nto evaluate robustness for this really simple formula. We want to be able to\nevaluate robustness",
    "start": "3233690",
    "end": "3240190"
  },
  {
    "text": "for more complex formulas,\nlike the specifications that we use for our systems.",
    "start": "3240190",
    "end": "3246099"
  },
  {
    "text": "So we'll talk about how\nto extend robustness to these various operators\nthat we might apply",
    "start": "3246100",
    "end": "3251530"
  },
  {
    "text": "to those predicate functions. So for example,\nlet's say that we have these propositional\nlogic operators.",
    "start": "3251530",
    "end": "3258230"
  },
  {
    "text": "So we're currently\nsaying that P is going to be true as long as\nthe state is greater than c.",
    "start": "3258230",
    "end": "3265240"
  },
  {
    "text": "What if we want to know\nthe robustness of not P? Nothing super\ncrazy happens here.",
    "start": "3265240",
    "end": "3270580"
  },
  {
    "text": "We're just kind of looking\nat the opposite property now. So we just flip everything\nover, and we just",
    "start": "3270580",
    "end": "3276270"
  },
  {
    "text": "say that the robustness of not P\nis the negative robustness of P.",
    "start": "3276270",
    "end": "3288180"
  },
  {
    "text": "OK, now, let's introduce\none more property, where we have Q is this\npredicate function, where",
    "start": "3288180",
    "end": "3294960"
  },
  {
    "text": "we need the state to be\ngreater than D, as well. And, say, we want\nP and Q. And so we",
    "start": "3294960",
    "end": "3303510"
  },
  {
    "text": "need it to both\nbe greater than C, and we need the state\nto be greater than D. So we've got both of these\nthings that need to happen.",
    "start": "3303510",
    "end": "3310660"
  },
  {
    "text": "And so the way we define\nthe robustness here is we just take the minimum\nrobustness between those two.",
    "start": "3310660",
    "end": "3316480"
  },
  {
    "text": "So you can see that it was\ncloser to not being greater",
    "start": "3316480",
    "end": "3321869"
  },
  {
    "text": "than D, and so we're kind\nof taking this worst-case. Because we need them\nboth to be true, we're going to take the\nworst-case between the two",
    "start": "3321870",
    "end": "3328373"
  },
  {
    "text": "by taking the minimum. ",
    "start": "3328373",
    "end": "3333385"
  },
  {
    "text": "OK, so you might\nbe able to guess what would happen if\nwe have P or Q. Now,",
    "start": "3333385",
    "end": "3338630"
  },
  {
    "text": "we just need one\nof them to be true. So we don't have to take\nthe worst-case anymore, and instead, we just\nswitch the min to a max.",
    "start": "3338630",
    "end": "3347870"
  },
  {
    "text": "And then finally, we had\nthis implies operator. For this one, I'm\nnot actually going",
    "start": "3347870",
    "end": "3353480"
  },
  {
    "text": "to go over how we get\nthere, but there's an exercise in the book, where\nyou'll actually derive this.",
    "start": "3353480",
    "end": "3360020"
  },
  {
    "text": "It's only a couple steps, so\nI'd recommend checking it out.",
    "start": "3360020",
    "end": "3365030"
  },
  {
    "text": "Yeah, any questions on this? Yeah.",
    "start": "3365030",
    "end": "3370760"
  },
  {
    "text": "So I mean, this is one case,\nyou said, we define robustness",
    "start": "3370760",
    "end": "3376250"
  },
  {
    "text": "as what's your margin\nfrom your criteria.",
    "start": "3376250",
    "end": "3382010"
  },
  {
    "text": "That means you can have an\ninfinite based on robustness? Now, I can just\ngo up and up and--",
    "start": "3382010",
    "end": "3389330"
  },
  {
    "text": "so there's no-- I'm thinking in my\nmind, kind of if you put in a percentage\nof some [INAUDIBLE]",
    "start": "3389330",
    "end": "3397880"
  },
  {
    "text": "you want to define what is\nyour margin you can go up and up and up. How do you know when\n[INAUDIBLE] robustness",
    "start": "3397880",
    "end": "3405210"
  },
  {
    "text": "fluctuating [INAUDIBLE]? Yeah, great question. So the question was,\nOK, so your robustness is how far you are from\nwhere you're trying to go,",
    "start": "3405210",
    "end": "3412140"
  },
  {
    "text": "so it could just\ngo up to infinity. How do you know\nwhat's a good number? You compute the robustness,\nand you're like, OK,",
    "start": "3412140",
    "end": "3417840"
  },
  {
    "text": "is this good or bad? The general intuition\nis that near zero means you're closer to failing,\nbut the scale of that",
    "start": "3417840",
    "end": "3424760"
  },
  {
    "text": "could depend on your problem. So for example,\nsometimes, your robustness might have units because, for\nexample, for the collision",
    "start": "3424760",
    "end": "3431048"
  },
  {
    "text": "avoidance system, your\nrobustness will typically end up being like how far\nwere you-- it's almost like a modified\nversion of your miss distance.",
    "start": "3431048",
    "end": "3437210"
  },
  {
    "text": "How far were you from what we\nconsider the collision region? So that will actually\nhave units of meters, and so you can understand what\nthat means and interpret it.",
    "start": "3437210",
    "end": "3445569"
  },
  {
    "text": "In cases where you can't,\nsometimes, robustness is still useful\nbecause, as you'll see in the next few\nlectures, we can use it",
    "start": "3445570",
    "end": "3452860"
  },
  {
    "text": "as kind of an objective. So for example, if we\nwant to find a failure, we want to minimize\nthe robustness.",
    "start": "3452860",
    "end": "3457940"
  },
  {
    "text": "We want to get to a trajectory\nthat results in a negative robustness because that allows\nus to find failures of systems.",
    "start": "3457940",
    "end": "3464343"
  },
  {
    "text": "And for that type\nof minimization, the scale really doesn't matter. Good question.",
    "start": "3464343",
    "end": "3469785"
  },
  {
    "text": " Any other questions?",
    "start": "3469785",
    "end": "3475026"
  },
  {
    "text": " Yeah.",
    "start": "3475026",
    "end": "3480598"
  },
  {
    "text": "When would you have a\ncase of the second one that you outlined here,\nwhere it's P and Q?",
    "start": "3480598",
    "end": "3486070"
  },
  {
    "text": "So wouldn't you always want the\nsmaller one or the more minimal",
    "start": "3486070",
    "end": "3492220"
  },
  {
    "text": "value? Let's say we had\nsomething that was like-- ",
    "start": "3492220",
    "end": "3499388"
  },
  {
    "text": "I don't know. We need our aircraft altitude\nto be greater than 200",
    "start": "3499388",
    "end": "3505890"
  },
  {
    "text": "for some requirement, and we\nneed our aircraft altitude to be greater than 500 for\nsome other requirement. And so we just need both\nof those to be true,",
    "start": "3505890",
    "end": "3512740"
  },
  {
    "text": "and then we have this case\nwhere we'll just take the worst case of those two requirements.",
    "start": "3512740",
    "end": "3518700"
  },
  {
    "text": "Yeah. So the question was, when would\nwe have some scenario like this?",
    "start": "3518700",
    "end": "3524460"
  },
  {
    "text": "Yeah. Yeah. [INAUDIBLE] the P\nimplies Q case, too?",
    "start": "3524460",
    "end": "3532830"
  },
  {
    "text": "Sure. Maybe we say-- OK, so the example\nwe had earlier",
    "start": "3532830",
    "end": "3538349"
  },
  {
    "text": "was if we're in a safe state,\nthat means that we're not in a collision state.",
    "start": "3538350",
    "end": "3544500"
  },
  {
    "text": "And so if we define\nvalues for what it means to be in a safe state\nand not a collision state,",
    "start": "3544500",
    "end": "3549760"
  },
  {
    "text": "then we could say how close we\nare to that property being true. Does that make sense?",
    "start": "3549760",
    "end": "3556620"
  },
  {
    "text": "OK, so that was for the\npropositional operators. We also can extend\nthe robustness",
    "start": "3556620",
    "end": "3562619"
  },
  {
    "text": "to temporal operators. So again, we still\nhave this P and Q. But now, we're not just\nconsidering one time step here.",
    "start": "3562620",
    "end": "3570180"
  },
  {
    "text": "We're considering our\nentire trajectory. And for this example, we're\ngoing to say that c equals 0.",
    "start": "3570180",
    "end": "3577210"
  },
  {
    "text": "And so for points in the\ntrajectory that are above c, that proposition or that\npredicate is going to be true.",
    "start": "3577210",
    "end": "3584050"
  },
  {
    "text": "And for points that are below\nc, It's going to be false. OK, so now, let's say\nwe have this eventually",
    "start": "3584050",
    "end": "3590940"
  },
  {
    "text": "operator that we want to\ndefine our robustness over. So again, we have that P\neventually needs to be true.",
    "start": "3590940",
    "end": "3599230"
  },
  {
    "text": "And so since we\nonly need it to be true at one time step\nfor this to be true, we get to take a maximum.",
    "start": "3599230",
    "end": "3605680"
  },
  {
    "text": "So we're kind of picking\nthe best case, so we're going to end up picking\nthis point here, the one that's got the\nhighest robustness by itself.",
    "start": "3605680",
    "end": "3615660"
  },
  {
    "text": "And then you might be\nable to guess that for-- so it'll be this one here.",
    "start": "3615660",
    "end": "3621543"
  },
  {
    "text": "And then you might be\nable to guess similarly, if we say that P always\nneeds to be true, it needs to be true at every\nsingle one of these time steps.",
    "start": "3621543",
    "end": "3628710"
  },
  {
    "text": "And so we're going\nto take a minimum to take the\nworst-case time step.",
    "start": "3628710",
    "end": "3634980"
  },
  {
    "text": "So we're going to end up\nsaying that our robustness, in this case, will be\ndetermined by that point.",
    "start": "3634980",
    "end": "3641690"
  },
  {
    "text": "And then until you\ncan derive this, or if you stare at\nit for long enough, you might be able to\nderive some intuition here,",
    "start": "3641690",
    "end": "3648690"
  },
  {
    "text": "but I'm just going to\ngive you the formula and say you can think about\nthat one more if you want to.",
    "start": "3648690",
    "end": "3655099"
  },
  {
    "text": "Any questions here? Yeah. Question, when we\nwrite Rho of s of t,",
    "start": "3655100",
    "end": "3662690"
  },
  {
    "text": "I'm a bit confused how\nwe can think of s of t, that argument as, I\nguess, a time series.",
    "start": "3662690",
    "end": "3671510"
  },
  {
    "text": "So this is saying\nthe max over all t that are in this, the\nrobustness of that.",
    "start": "3671510",
    "end": "3678079"
  },
  {
    "text": "So if you remember before,\nwe were taking the robustness of just a single time step. Now, we're extending it, and so\nwe're just taking the max over",
    "start": "3678080",
    "end": "3684670"
  },
  {
    "text": "that robustness evaluated\nat each of those time steps. Good question.",
    "start": "3684670",
    "end": "3690621"
  },
  {
    "text": "OK.  But there's still one problem\nthat we need to solve,",
    "start": "3690621",
    "end": "3696440"
  },
  {
    "text": "which is that later\nin this course, we're going to want to take\nthe gradient of the robustness.",
    "start": "3696440",
    "end": "3702080"
  },
  {
    "text": "So I alluded to some\noptimization that might happen. But for now, you just\nhave to believe me. We are going to want gradients.",
    "start": "3702080",
    "end": "3708050"
  },
  {
    "text": "This is going to be useful. So there's still this problem\nthat we need to solve,",
    "start": "3708050",
    "end": "3713990"
  },
  {
    "text": "which is that all these\nkind of mins and maxes that you saw throughout all\nthese formulas I was showing",
    "start": "3713990",
    "end": "3719050"
  },
  {
    "text": "you, they don't\nreally play so nicely with this gradient operation. And let me explain why.",
    "start": "3719050",
    "end": "3724820"
  },
  {
    "text": "So let's look back\nat this trajectory again and assume,\nagain, that c equals 0. So let's say we have\nthis formula that we",
    "start": "3724820",
    "end": "3732670"
  },
  {
    "text": "want between time step\n1 and time step 10, P to eventually be true. So that's going to end up just\nbeing the maximum over all",
    "start": "3732670",
    "end": "3740860"
  },
  {
    "text": "of the values of our state. And so in this case,\nit's equal to S5.",
    "start": "3740860",
    "end": "3748130"
  },
  {
    "text": "Our robustness is just going to\nbe whatever the value of state 5 is the state at time step 5.",
    "start": "3748130",
    "end": "3754570"
  },
  {
    "text": "And so let's think about what\nthe gradient of the robustness is with respect to each of our\nstates for each of our time",
    "start": "3754570",
    "end": "3762700"
  },
  {
    "text": "steps. So if I change S1\na little bit, what",
    "start": "3762700",
    "end": "3767830"
  },
  {
    "text": "is that going to do\nto the robustness? I see you shaking your head. It's nothing.",
    "start": "3767830",
    "end": "3773000"
  },
  {
    "text": "It's not going to do\nanything to the robustness. So the gradient, with\nrespect to S1, is zero. If I change S2 a\nlittle bit, same story.",
    "start": "3773000",
    "end": "3779628"
  },
  {
    "text": "It's not going to do\nanything to robustness because the robustness\nis just equal to S5. So the gradient is\ngoing to be zero there.",
    "start": "3779628",
    "end": "3785270"
  },
  {
    "text": "And so on, until\nwhen we get to S5. Well, the derivative of S5\nwith respect to S5 is 1,",
    "start": "3785270",
    "end": "3790880"
  },
  {
    "text": "so we do get something there. We get a 1. And then the rest of\nthe way through, we're going to get more zeros.",
    "start": "3790880",
    "end": "3796595"
  },
  {
    "text": " OK, so this is a problem.",
    "start": "3796595",
    "end": "3801670"
  },
  {
    "text": "And this is just really not\na very interesting or useful gradient because no\nmatter what we do, we're just going\nto get something",
    "start": "3801670",
    "end": "3807930"
  },
  {
    "text": "that looks like this until\nwe get that one point where the maximum switches over.",
    "start": "3807930",
    "end": "3813960"
  },
  {
    "text": "And so the fix for\nthis is something that we call smooth robustness. And all that happens here is we\nreplace all these min and max",
    "start": "3813960",
    "end": "3822210"
  },
  {
    "text": "operators with something we call\nthe softmin and the softmax. So the softmin, it\nlooks like this,",
    "start": "3822210",
    "end": "3831099"
  },
  {
    "text": "and the softmax looks like this. There's this parameter, w, that\nkind of allows us to control how",
    "start": "3831100",
    "end": "3836460"
  },
  {
    "text": "much we're-- or how soft\nwe're making this, in a way. So if you think of what\nhappens when w equals 0,",
    "start": "3836460",
    "end": "3842920"
  },
  {
    "text": "well, when w equals 0, we\nget x of 0, which is 1. And so we get 1 down\nin the denominator,",
    "start": "3842920",
    "end": "3848920"
  },
  {
    "text": "and then we just\nget si in the top. And so it's just\ngoing to approach",
    "start": "3848920",
    "end": "3853970"
  },
  {
    "text": "the average of all\nof those points that we had in our signal.",
    "start": "3853970",
    "end": "3859100"
  },
  {
    "text": "And then if w goes\ninfinity, it's going to approach\nthe true max or min. And so we have this way\nto smoothly trade off",
    "start": "3859100",
    "end": "3866060"
  },
  {
    "text": "between the two. OK, so just to get\nsome intuition here,",
    "start": "3866060",
    "end": "3871680"
  },
  {
    "text": "I'm going to demonstrate\nthis in a Pluto notebook. So what I'm showing\nhere is that same signal",
    "start": "3871680",
    "end": "3878869"
  },
  {
    "text": "that we were looking at, and\nI'm showing its gradient. So remember, when w\nequals 0, we don't",
    "start": "3878870",
    "end": "3883940"
  },
  {
    "text": "have any smoothing applied. Actually, is that right? ",
    "start": "3883940",
    "end": "3890693"
  },
  {
    "text": "I didn't think\nabout that, but OK. So we're applying\nno smoothing here. And you can see that we have\nthe same gradient that we",
    "start": "3890693",
    "end": "3897109"
  },
  {
    "text": "had before. And then our robustness is just\nequal to that maximization term.",
    "start": "3897110",
    "end": "3903329"
  },
  {
    "text": "And then as we increase w-- ",
    "start": "3903330",
    "end": "3908930"
  },
  {
    "text": "OK, I think-- is it opposite\nof what I was just showing? ",
    "start": "3908930",
    "end": "3914900"
  },
  {
    "text": "The zero is [INAUDIBLE]. Yeah.  OK, well, anyway, so as you\nincrease the smoothing, which",
    "start": "3914900",
    "end": "3923060"
  },
  {
    "text": "is how it would work\nin the STL package, you can see that\nthe gradient starts to move from that just\none pointed version",
    "start": "3923060",
    "end": "3930589"
  },
  {
    "text": "that we had, and it becomes\nmore smoothed out, like this.",
    "start": "3930590",
    "end": "3936390"
  },
  {
    "text": "And you can see that\nas this is going on, we approach the mean of the\nsignal as our robustness value.",
    "start": "3936390",
    "end": "3944850"
  },
  {
    "text": "So this is close to\nthe mean of the signal, whereas before, we had\nthe maximum of the signal.",
    "start": "3944850",
    "end": "3951920"
  },
  {
    "text": "Yeah. I think it's opposite of\nwhat you have on the slides, if I'm not mistaken. Yeah, I think it is opposite.",
    "start": "3951920",
    "end": "3958610"
  },
  {
    "text": "Which one is it? This version or the\none on the slide? I think it's kind of--",
    "start": "3958610",
    "end": "3965570"
  },
  {
    "text": "let me get back to you. Yeah, I'll make a\npost later about that. I think we may have defined\nit in two different ways",
    "start": "3965570",
    "end": "3970887"
  },
  {
    "text": "in the package versus in the\ntextbook, so I'll let you know. Yeah, good question. ",
    "start": "3970887",
    "end": "3978849"
  },
  {
    "text": "Any other questions here? ",
    "start": "3978850",
    "end": "3989440"
  },
  {
    "text": "Yeah. Can you explain why\nthe line is going down? So as you increase\nyour w, like robustness",
    "start": "3989440",
    "end": "3997540"
  },
  {
    "text": "goes down towards zero\nand then reaches zero, adds when you go to 10. So it's not approaching\nzero, but you're",
    "start": "3997540",
    "end": "4003600"
  },
  {
    "text": "right that it goes down. So the question is, why\ndoes the line go down? So we're trying to\napproximate the max function",
    "start": "4003600",
    "end": "4011050"
  },
  {
    "text": "because for this\ncase, we were saying we want it to be\neventually true, and so we're taking the\nmaximum over all of our values.",
    "start": "4011050",
    "end": "4017650"
  },
  {
    "text": "And as we smooth out\nthe max function, we consider the contribution of\nthe other values in the signal.",
    "start": "4017650",
    "end": "4026680"
  },
  {
    "text": "And so we move away\nfrom the true max. And what it actually slides\nor kind of trades off between",
    "start": "4026680",
    "end": "4032420"
  },
  {
    "text": "is it starts approaching the\nmean of all of the values. It looks like it's\napproaching zero",
    "start": "4032420",
    "end": "4038730"
  },
  {
    "text": "because the mean of all of\nthe values is around zero. That's just a coincidence. It's actually\napproaching the mean.",
    "start": "4038730",
    "end": "4045590"
  },
  {
    "text": "Just to clarify, just\nin the slide, it's-- Oh, it's just written wrong. In the textbook\nand the code, zero",
    "start": "4045590",
    "end": "4056300"
  },
  {
    "text": "implies that you return the\ntrue min or the true max, whereas infinity,\nyou get the mean.",
    "start": "4056300",
    "end": "4062570"
  },
  {
    "text": "So as you approach infinity,\nyou get closer and closer to the mean. OK, yeah. And actually, I think I probably\neven just wrote it wrong",
    "start": "4062570",
    "end": "4069110"
  },
  {
    "text": "and said it wrong because if\nyou look at the slide here-- OK, so if we plug\nin infinity here,",
    "start": "4069110",
    "end": "4074960"
  },
  {
    "text": "we're getting negative\ninfinity, which gives us-- I think this is just\nwritten backwards, right?",
    "start": "4074960",
    "end": "4080460"
  },
  {
    "text": "I think just the-- The way it's written. Yeah, OK. Yeah, it's just\nbackwards in the slide. I'll make that correction.",
    "start": "4080460",
    "end": "4086400"
  },
  {
    "text": "Thanks for pointing that out. Any other questions on this? Yeah.",
    "start": "4086400",
    "end": "4091430"
  },
  {
    "text": "I was just wondering why it\nwas between 0 to 1 on the-- or I guess just--",
    "start": "4091430",
    "end": "4097519"
  },
  {
    "text": "Oh, good, the gradient? Why? Is it supposed to represent\nsome kind of probability?",
    "start": "4097519",
    "end": "4105380"
  },
  {
    "text": "The fact that it's between\n0 and 1 is kind of-- OK, so it's just for\nthis particular formula,",
    "start": "4105380",
    "end": "4113849"
  },
  {
    "text": "we said that mu of\nst was equal to st. So we want st greater than c.",
    "start": "4113850",
    "end": "4119089"
  },
  {
    "text": "So our robust--\nand we said c is 0, so our robustness is going\nto be st minus c, st minus 0.",
    "start": "4119090",
    "end": "4124439"
  },
  {
    "text": "So our robustness is just going\nto be the maximum over all of our states. Does that part make sense? And so in this case, our\nrobustness is just s5.",
    "start": "4124439",
    "end": "4132344"
  },
  {
    "text": "And we're thinking about\ntaking the gradient. So if we take the gradient of\nthis formula with respect to s5,",
    "start": "4132345",
    "end": "4137600"
  },
  {
    "text": "we get 1. And so that's just\nwhere the 1 comes from.",
    "start": "4137600",
    "end": "4144068"
  },
  {
    "text": "Yeah. Yeah. Is there supposed to be a\nsummation in the numerator?",
    "start": "4144069",
    "end": "4149109"
  },
  {
    "text": "Because on the previous\nslide, where you defined-- or maybe later slide, where\nyou define softmin and softmax,",
    "start": "4149109",
    "end": "4156040"
  },
  {
    "text": "it just looks like the\nnumerator and denominator to me are the same. ",
    "start": "4156040",
    "end": "4161439"
  },
  {
    "text": "I don't remember\nexactly which slide. Yeah, I'll try to find it. There is a subtle difference\nbetween the numerator",
    "start": "4161439",
    "end": "4170380"
  },
  {
    "text": "and denominator,\nbut I can get there. OK, here we go.",
    "start": "4170380",
    "end": "4175509"
  },
  {
    "text": "The numerator has this si\nin it for both of them. OK, good question.",
    "start": "4175510",
    "end": "4182560"
  },
  {
    "text": "Yeah. [INAUDIBLE] You said it should be flipped?",
    "start": "4182560",
    "end": "4187839"
  },
  {
    "text": "Yeah. Sorry about that. I'll make that correction. Yeah. And I guess kind of\nthe way to think of it",
    "start": "4187840",
    "end": "4193770"
  },
  {
    "text": "is zero, no smoothing, we\nget the true min or max. As we increase that value\nfor w, more smoothing,",
    "start": "4193770",
    "end": "4201220"
  },
  {
    "text": "we go closer to the mean. ",
    "start": "4201220",
    "end": "4206250"
  },
  {
    "text": "Yeah. [INAUDIBLE] that\nyou gave, I don't know if it's just a\ncoincidence, but yeah,",
    "start": "4206250",
    "end": "4211510"
  },
  {
    "text": "when you smooth it\nout all the way, it kind of looked like it\nalmost followed the signal's distribution, more or less.",
    "start": "4211510",
    "end": "4218370"
  },
  {
    "text": "You can see there's a little\nthing in the left half, and then it dips down.",
    "start": "4218370",
    "end": "4224260"
  },
  {
    "text": "Is that just coincidence? Is it supposed to just\nbe like a bell curve? Well, so what's\nhappening is it's kind",
    "start": "4224260",
    "end": "4231720"
  },
  {
    "text": "of following how\nmuch each of these is contributing to the max.",
    "start": "4231720",
    "end": "4237990"
  },
  {
    "text": "It should be, kind of, yeah. So we made it through what\nI wanted to make it through.",
    "start": "4237990",
    "end": "4244140"
  },
  {
    "text": "Reachability, we're going to\nhave as an advanced topic. I'm just going to click\nthrough these slides,",
    "start": "4244140",
    "end": "4249210"
  },
  {
    "text": "though, because they're\npretty, but I don't have time to talk about it, sadly. But it leads to my favorite\nfigure in the whole book.",
    "start": "4249210",
    "end": "4256690"
  },
  {
    "text": "So if you get a\nchance to read it, even though it's\nan advanced topic and won't be on the quizzes,\nyou should just check it out.",
    "start": "4256690",
    "end": "4264780"
  },
  {
    "text": "All right, super cool. We can convert things. We can convert things that\naren't reachability properties",
    "start": "4264780",
    "end": "4270090"
  },
  {
    "text": "into reachability properties. You don't have to\nknow any of this. But it results in\nthese automaton things",
    "start": "4270090",
    "end": "4276343"
  },
  {
    "text": "that you can go through.  I'll just keep\nflipping through it. ",
    "start": "4276343",
    "end": "4289860"
  },
  {
    "text": "So then we create\nthis product system, and this is my favorite\nfigure in the whole book.",
    "start": "4289860",
    "end": "4295230"
  },
  {
    "text": "All right.  Thanks for amusing me on that.",
    "start": "4295230",
    "end": "4300570"
  },
  {
    "text": "If anyone wants to\nknow more about it, I'm happy to show\nyou those slides. I'll have candy at my\noffice hours right now.",
    "start": "4300570",
    "end": "4307650"
  },
  {
    "text": "Other than that, project zero\nand quiz zero due tomorrow, and have a good weekend.",
    "start": "4307650",
    "end": "4313180"
  },
  {
    "text": "I'll see you next week. ",
    "start": "4313180",
    "end": "4319000"
  }
]