[
  {
    "text": "thank you very much I'm I'm Melissa oal from Harvey mud college and I'm delighted to be here today to um talk to",
    "start": "11120",
    "end": "18439"
  },
  {
    "text": "you a little bit about the PCG family of random number Generations random number generators so I'm going to begin with a",
    "start": "18439",
    "end": "24920"
  },
  {
    "text": "question for you all by the way I like to have things be a little bit interactive so I like to ask the people",
    "start": "24920",
    "end": "30560"
  },
  {
    "text": "in the audience put up your hand if you've ever written a program that used a random number generator so that's basically everyone",
    "start": "30560",
    "end": "37840"
  },
  {
    "text": "in the room let me just for comparison let's say put up your hand if you've ever written a program in high",
    "start": "37840",
    "end": "43079"
  },
  {
    "text": "school okay vastly fewer people vastly fewer people have actually said that",
    "start": "43079",
    "end": "49719"
  },
  {
    "text": "they they and so we could argue right that this means that that you're far more concerned about things like random",
    "start": "49719",
    "end": "55920"
  },
  {
    "text": "number generation than you could possibly be about things like hascal and it is the case the random number",
    "start": "55920",
    "end": "60960"
  },
  {
    "text": "generators are actually everywhere in computer science they're used for cryptography they're used um for",
    "start": "60960",
    "end": "67840"
  },
  {
    "text": "simulation they're used for games they're used um for optimization",
    "start": "67840",
    "end": "73799"
  },
  {
    "text": "problems they're used for all sorts of computational creativity in fact at Harvey mod College we have a a",
    "start": "73799",
    "end": "79880"
  },
  {
    "text": "programming languages class and we have a random art assignment where it's it's all about purportedly expression",
    "start": "79880",
    "end": "85280"
  },
  {
    "text": "valuation but it actually produces cool art like that so random number are",
    "start": "85280",
    "end": "90439"
  },
  {
    "text": "everywhere in computer science and they've been there pretty much since the beginning in fact I'm going to begin by",
    "start": "90439",
    "end": "96479"
  },
  {
    "text": "talking a little bit about the history of random number generation and ask you a question which is how did computers",
    "start": "96479",
    "end": "102720"
  },
  {
    "text": "Generate random numbers in 1927 and so some of you are probably",
    "start": "102720",
    "end": "109799"
  },
  {
    "text": "thinking H that sounds a bit odd because I don't think there were computers in",
    "start": "109799",
    "end": "118759"
  },
  {
    "text": "1927 but but there were they just weren't",
    "start": "118759",
    "end": "123799"
  },
  {
    "text": "machines they were people like you and and so and so yeah there were there were",
    "start": "123799",
    "end": "131680"
  },
  {
    "text": "so here's here's an example I'm holding up a book here of um something that was",
    "start": "131680",
    "end": "137879"
  },
  {
    "text": "was called um tracks for computers of series like for people who would do computation this is from 1927 it's by um",
    "start": "137879",
    "end": "146840"
  },
  {
    "text": "tippet and inside is a nice collection of random numbers this is how people",
    "start": "146840",
    "end": "152920"
  },
  {
    "text": "would Generate random numbers and and in fact when this book came out it received",
    "start": "152920",
    "end": "158560"
  },
  {
    "text": "some criticism and people wrote some more paper say you know these random numbers not quite so good as you'd hope",
    "start": "158560",
    "end": "165200"
  },
  {
    "text": "and so um Kendall who produced the Kendall to think in the the mid-30s he",
    "start": "165200",
    "end": "170879"
  },
  {
    "text": "produced a much better book part of the same tracks for computer series and um",
    "start": "170879",
    "end": "176120"
  },
  {
    "text": "had this actually had 10,000 random digits in it and the real",
    "start": "176120",
    "end": "181840"
  },
  {
    "text": "sort of culmination of this this thing was this this book by the Rand",
    "start": "181840",
    "end": "186879"
  },
  {
    "text": "corporation which was called a million random digits and so this came out in",
    "start": "186879",
    "end": "193040"
  },
  {
    "text": "1955 and so I have a question for you which is you know",
    "start": "193040",
    "end": "199760"
  },
  {
    "text": "given this um this thing does this does",
    "start": "199760",
    "end": "205799"
  },
  {
    "text": "this make sense oh well I should point out that this these are these are grouped in five so we Al consider it a million digits or 200,000 five-digit",
    "start": "205799",
    "end": "212879"
  },
  {
    "text": "numbers um but my question for you is is twofold one how would you use a book",
    "start": "212879",
    "end": "218799"
  },
  {
    "text": "like this and two does a book like this make any sense to you at all as a",
    "start": "218799",
    "end": "226200"
  },
  {
    "text": "concept I does it seem completely flaw I love people to be um kind of um contrarian so I'd like you to sort of",
    "start": "226200",
    "end": "232840"
  },
  {
    "text": "talk to somebody next to you I'm not going to only give you like less than a minute probably but I'd like you to confer with somebody near you if",
    "start": "232840",
    "end": "238799"
  },
  {
    "text": "possible disagree with them so take a second does this does this concept of a book of random numbers make",
    "start": "238799",
    "end": "244680"
  },
  {
    "text": "any sense at all so talk to each other see you",
    "start": "244680",
    "end": "252079"
  },
  {
    "text": "[Music] think one",
    "start": "252220",
    "end": "258400"
  },
  {
    "text": "[Music] book is this the table",
    "start": "263430",
    "end": "268520"
  },
  {
    "text": "that to find a okay that's all the time you get I'm afraid so let me just ask um I'm",
    "start": "268600",
    "end": "276680"
  },
  {
    "text": "going to ask first of for somebody to have a criticism of this thing somebody who thinks that the entire concept is is",
    "start": "276680",
    "end": "282919"
  },
  {
    "text": "is flawed in some way anyone have a criticism depends on how many random numbers you need if you only need one",
    "start": "282919",
    "end": "288880"
  },
  {
    "text": "any of those books is acceptable okay so so sobly if we need you know more than 200,000 random numbers that would be",
    "start": "288880",
    "end": "295560"
  },
  {
    "text": "that would be a problem so so the size of the book might be an issue any any other concerns uh a book like that was",
    "start": "295560",
    "end": "302800"
  },
  {
    "text": "extremely useful back then for making onetime codes okay so we could so we could use it actually that's a good",
    "start": "302800",
    "end": "308759"
  },
  {
    "text": "question is it useful for one for onetime codes or not um yes your enemy",
    "start": "308759",
    "end": "314919"
  },
  {
    "text": "has the same copy yeah exactly exactly in fact you know this is the thing every one of these books has the exact same",
    "start": "314919",
    "end": "320400"
  },
  {
    "text": "numbers in it and so um you know it's kind of a weird thing if you actually search for this thing on Google you get",
    "start": "320400",
    "end": "326639"
  },
  {
    "text": "lots of hits for these numbers if you start with these start numbers put them into Google you get a lot of you get a whole bunch of you got a whole bunch of",
    "start": "326639",
    "end": "332479"
  },
  {
    "text": "hits also by the way this is actually on sale at Amazon you can buy this at Amazon still they put it out and the the reviews are just fascinating they",
    "start": "332479",
    "end": "339840"
  },
  {
    "text": "there's actually somebody who said exactly what what we're just talking about saying you know I I got one of these books then my Confederate got this",
    "start": "339840",
    "end": "345560"
  },
  {
    "text": "book and I was horrified to discover that it had the exact same numbers I'm sending mine back and and so it's got",
    "start": "345560",
    "end": "351840"
  },
  {
    "text": "got wonderful reviews on on Amazon um but can somebody make some lemonade",
    "start": "351840",
    "end": "358400"
  },
  {
    "text": "about the fact like we we we we said that maybe that's a problem that these books have the same have the same",
    "start": "358400",
    "end": "363960"
  },
  {
    "text": "numbers is there something positive that we can say about that yes well this was done before the NSA so we know there are",
    "start": "363960",
    "end": "369199"
  },
  {
    "text": "no hidden patterns in ah yes so this this is a really we can actually there's a name for this we can call this nothing",
    "start": "369199",
    "end": "374759"
  },
  {
    "text": "up my sleeve numbers the the thing is if if you decide to use these numbers and that and you didn't make the book you",
    "start": "374759",
    "end": "381039"
  },
  {
    "text": "can absolutely claim there's nothing up your sleeve that that they didn't just you know there's nothing there's no trick you know if somebody else comes",
    "start": "381039",
    "end": "387000"
  },
  {
    "text": "out with some numbers oh these are my random numbers you be like really but these ones you can you can maybe have",
    "start": "387000",
    "end": "393240"
  },
  {
    "text": "AIT more confidence in there's pattern there that's that's a that's a good",
    "start": "393240",
    "end": "398840"
  },
  {
    "text": "thing we we'll talk in a moment about whether or not you know how the exactly how these were made and whether or not",
    "start": "398840",
    "end": "405000"
  },
  {
    "text": "they they kind of have any any pattern in them yes well the extremely useful about having multiple books with the",
    "start": "405000",
    "end": "410759"
  },
  {
    "text": "same code is it gives you the exact same results that a super random number gener right so so one of the things is that we",
    "start": "410759",
    "end": "415840"
  },
  {
    "text": "get the if we use the same if we use the same starting point right and we can get reproducible results which is actually a",
    "start": "415840",
    "end": "422520"
  },
  {
    "text": "really useful thing if if you produce some results and you say oh I just took some random numbers from somewhere and",
    "start": "422520",
    "end": "428199"
  },
  {
    "text": "and we can be like really really did you and whereas if you say well I took them from this book and if you want to replicate my results you totally can",
    "start": "428199",
    "end": "435120"
  },
  {
    "text": "that repeatability is a wonderful thing so that's a that's a really nice a really nice thing that we have",
    "start": "435120",
    "end": "441120"
  },
  {
    "text": "reproducibility that we can reproduce the same the same results these were generated from actual random stuff I can",
    "start": "441120",
    "end": "447000"
  },
  {
    "text": "actually show you uh here's all the numbers at a glance by the way this is all 200,000 numbers is a little graphic",
    "start": "447000",
    "end": "453080"
  },
  {
    "text": "um and so we can say that they look they certainly look random noise so so that's that's a good",
    "start": "453080",
    "end": "460800"
  },
  {
    "text": "that's a good thing these two two successive numbers being XY coordinat or",
    "start": "460800",
    "end": "465840"
  },
  {
    "text": "which one they they would be fine we'll come back we'll come to that any but these were generated it's actually interesting they they they used a",
    "start": "465840",
    "end": "471759"
  },
  {
    "text": "technique that they called an electronic roulette wheel was just trying to make it seem like it sounded sort of plausible to people but but they um they",
    "start": "471759",
    "end": "479440"
  },
  {
    "text": "used that and and when they originally did it they ran the machine and the machine wasn't working quite right and It produced stuff they didn't look",
    "start": "479440",
    "end": "485120"
  },
  {
    "text": "statistically random so they cleaned all the little wheels and so forth on their on the little gizmos and eventually",
    "start": "485120",
    "end": "491639"
  },
  {
    "text": "eventually produced stuff that looked pretty good like could a glance it looked pretty good but even in 1955",
    "start": "491639",
    "end": "498520"
  },
  {
    "text": "people who developed tests when they were criticizing Tippets book um they developed tests like the poker test",
    "start": "498520",
    "end": "505080"
  },
  {
    "text": "which is like you kind of simulate doing hands of poker and see what the distribution of hands look like and so on and when they did that again they",
    "start": "505080",
    "end": "511319"
  },
  {
    "text": "found that things were actually kind of disappointing that if you although you couldn't see it there was sort of subtle",
    "start": "511319",
    "end": "516440"
  },
  {
    "text": "things there that it really wasn't quite as random as people would have liked and so the final thing by this point 1955",
    "start": "516440",
    "end": "522760"
  },
  {
    "text": "there were electronic computers a lot of people at that time used to insist that you called them electronic computers to",
    "start": "522760",
    "end": "528040"
  },
  {
    "text": "distinguish them from the other kind the real computers um but they put it they",
    "start": "528040",
    "end": "533399"
  },
  {
    "text": "actually put it through an algorithm to um to make it so that they that",
    "start": "533399",
    "end": "538600"
  },
  {
    "text": "scrambled it up up and and did make it finally sort of random enough to pass the statistical tests and that's",
    "start": "538600",
    "end": "543839"
  },
  {
    "text": "actually the thing that's often like for for most naturally derived Randomness people do need to put it through",
    "start": "543839",
    "end": "548880"
  },
  {
    "text": "algorithms of some kind because actual natural Randomness tends to have some kind of bias of some kind and so it's",
    "start": "548880",
    "end": "555920"
  },
  {
    "text": "not it's not uncommon to to have to do that um given that this was produced by",
    "start": "555920",
    "end": "561800"
  },
  {
    "text": "a machine and and scrambled up afterwards and and and so on and it passed all these statistical tests we",
    "start": "561800",
    "end": "568640"
  },
  {
    "text": "could say it's statistically random does that mean that we can't possibly predict",
    "start": "568640",
    "end": "574680"
  },
  {
    "text": "what's going to happen like if if I if I if I start here and start reading off",
    "start": "574680",
    "end": "579720"
  },
  {
    "text": "like 23 um 6125 Etc does that mean that",
    "start": "579720",
    "end": "584959"
  },
  {
    "text": "no one could know where in the book I'm reading anyone think research we just we could just",
    "start": "584959",
    "end": "592519"
  },
  {
    "text": "even though these books have no clear pattern to them we could just store the whole book and search through and find it in fact we could just store some some",
    "start": "592519",
    "end": "599120"
  },
  {
    "text": "some kind of markers every so often and that would work too so it is reproducible and it's and it's even",
    "start": "599120",
    "end": "605399"
  },
  {
    "text": "though it was produced in a random way it's predictable because we have the entire book we could always search through the whole thing one other thing",
    "start": "605399",
    "end": "610959"
  },
  {
    "text": "is even though it was statistically random for this method of which I think many of you came up with I didn't ask",
    "start": "610959",
    "end": "616640"
  },
  {
    "text": "you about it but this method of saying oh I'll just pick pick an arbitary starting point and start reading off if",
    "start": "616640",
    "end": "621839"
  },
  {
    "text": "we do that let me ask you a question about this this did pass as a sort of a",
    "start": "621839",
    "end": "626920"
  },
  {
    "text": "statistically random tole but if I if I pick and a number here what do you think the probability that I've picked a two",
    "start": "626920",
    "end": "633320"
  },
  {
    "text": "should be should be one in 10 right that's what we' that's what we'd hope um but because",
    "start": "633320",
    "end": "639480"
  },
  {
    "text": "this is a random sample of stuff from this machine it's not quite one in two",
    "start": "639480",
    "end": "644880"
  },
  {
    "text": "uh sorry one in 10 it's it's kind of a little bit off in fact we're 729 shy of the right number of nines and",
    "start": "644880",
    "end": "653000"
  },
  {
    "text": "we've got 642 many twos now as a random sample that's sort of what you what what is reasonable but but it is a bit",
    "start": "653000",
    "end": "659839"
  },
  {
    "text": "unfortunate that this means that using this this thing of picking arbitrary places in the book it's going to be",
    "start": "659839",
    "end": "666000"
  },
  {
    "text": "biased it's going to be it's going to be um bi it's even worse if we if we go to the look at the five digigit numbers in",
    "start": "666000",
    "end": "672720"
  },
  {
    "text": "the in the book because again you'd hope that with that with five digits the odds",
    "start": "672720",
    "end": "678000"
  },
  {
    "text": "would be one and 10 to the five that's what you'd hope and so we average with 200,000 numbers um but average two and",
    "start": "678000",
    "end": "684959"
  },
  {
    "text": "we do average two but there are four there are twice as many 5 zeros and 59s never shows up at all",
    "start": "684959",
    "end": "692720"
  },
  {
    "text": "and so if you hoping to randomly pick and get 59 someday it's never going to happen with this book so that's that's a",
    "start": "692720",
    "end": "699399"
  },
  {
    "text": "problem by the way if you love the number 66 to20 that's great that shows up 12 times",
    "start": "699399",
    "end": "705360"
  },
  {
    "text": "so um so that's that's great but back in 1955 when they had this they we've",
    "start": "705360",
    "end": "712360"
  },
  {
    "text": "already said that they they put it through a computer um and people were already doing fun things with computer",
    "start": "712360",
    "end": "718040"
  },
  {
    "text": "so you might say why couldn't they have done done something different so let's consider some other options they could have had besides using a machine uh",
    "start": "718040",
    "end": "725440"
  },
  {
    "text": "besides using the the hardware machine to do things so here's one one option",
    "start": "725440",
    "end": "731079"
  },
  {
    "text": "that they could have done they could have taken some some digits from PI and said well let's let's use those as my as",
    "start": "731079",
    "end": "738079"
  },
  {
    "text": "my random digits um so there we've got our our digits from PI oh some people",
    "start": "738079",
    "end": "743120"
  },
  {
    "text": "looking a bit puzzled any so what was that e oh you think it's e no I'm I'm",
    "start": "743120",
    "end": "749279"
  },
  {
    "text": "sorry I didn't I guess I didn't mention that this is the digit supp P starting at the 1 something trillion digit um so",
    "start": "749279",
    "end": "756000"
  },
  {
    "text": "no that wasn't e that is actually digits from PI um they're just further up uh so",
    "start": "756000",
    "end": "761199"
  },
  {
    "text": "so yes that's that is um some digits from from PI and of course we could we",
    "start": "761199",
    "end": "768079"
  },
  {
    "text": "could I could have picked some other starting point these these digits from PI um look a bit like the golden ratio",
    "start": "768079",
    "end": "774240"
  },
  {
    "text": "um to those of you who love the golden the Golden Ratio by the way um what do you how how easy do you think it will be",
    "start": "774240",
    "end": "780519"
  },
  {
    "text": "to find these these digits in pi like",
    "start": "780519",
    "end": "785600"
  },
  {
    "text": "how easy do you think it is to to to find like if I said those some digits from P how easy do you think that would be and L so and log so assuming what",
    "start": "785600",
    "end": "795800"
  },
  {
    "text": "like assuming like we that we've stored it all or something yes like all infinitely many",
    "start": "795800",
    "end": "801800"
  },
  {
    "text": "digits so yeah I mean the thing is with pi is",
    "start": "801800",
    "end": "807480"
  },
  {
    "text": "it's a bit awkward because it does have sort of it goes on forever um but if we had a finite range again we could we",
    "start": "807480",
    "end": "813519"
  },
  {
    "text": "could store the the thing in fact I um I downloaded you know the first the first",
    "start": "813519",
    "end": "819079"
  },
  {
    "text": "two trillion um digits and so all the things I come I I do come from the first two trillion um and so this actually",
    "start": "819079",
    "end": "825600"
  },
  {
    "text": "comes from fairly early on actually but we could we didn't have to do PI we could have picked any any any real",
    "start": "825600",
    "end": "831160"
  },
  {
    "text": "number that's like my favorite um so um any any thoughts about this as a",
    "start": "831160",
    "end": "839120"
  },
  {
    "text": "strategy anything worse or better about this as a strategy compared to them using the machine they use for this book",
    "start": "839120",
    "end": "846040"
  },
  {
    "text": "um anyone have any any thoughts about any any thoughts about that like what",
    "start": "846040",
    "end": "851279"
  },
  {
    "text": "kind of machine did they use to make the book so well it was it was some Hardware",
    "start": "851279",
    "end": "856480"
  },
  {
    "text": "that some electronics that produced random random stuff so they claimed what's proven about the statistics of",
    "start": "856480",
    "end": "862360"
  },
  {
    "text": "the digit of high what have been proven about them so the the smart money um and the ma like it turns out that it's",
    "start": "862360",
    "end": "868800"
  },
  {
    "text": "really really hard to prove things about Randomness but the the smart money is on",
    "start": "868800",
    "end": "873920"
  },
  {
    "text": "like there a property that real that numbers that real numbers have almost all real numbers are something called normal which means essentially that they",
    "start": "873920",
    "end": "880440"
  },
  {
    "text": "look as if they're completely random and the smart money is that Pi is is normal",
    "start": "880440",
    "end": "886639"
  },
  {
    "text": "although and everything everything that all the evidence points to that but it has not been proved but you know the",
    "start": "886639",
    "end": "892639"
  },
  {
    "text": "same the same is true for lots of other things like so it's empirically empir empirically it's as random As It Gets",
    "start": "892639",
    "end": "898839"
  },
  {
    "text": "but um it's not been it's not been proved and it so but that's that's a that's thing we could also claim that Pi",
    "start": "898839",
    "end": "905079"
  },
  {
    "text": "is the ultimate nothing up my sleeve numbers like this we we could claim that well we trust these people at the Rand",
    "start": "905079",
    "end": "910240"
  },
  {
    "text": "Corporation they had nothing up the up their sleeve but we can sort of trust that Pi doesn't really have anything anything up its sleeve so and based on",
    "start": "910240",
    "end": "917920"
  },
  {
    "text": "what we just saw about depending on where I pick unless I've stored the whole thing which starts to get",
    "start": "917920",
    "end": "923800"
  },
  {
    "text": "impractical as we go more and more it's not going to be easy to predict so here's some positive things that we can",
    "start": "923800",
    "end": "928959"
  },
  {
    "text": "say about pie statistically the smart money is is is that it's random it's an it's an infinite stream it's like it's",
    "start": "928959",
    "end": "935000"
  },
  {
    "text": "never going to finish which is which is kind of wonderful if I gave you some digits you would have a hard time without just doing exhaustive search to",
    "start": "935000",
    "end": "940800"
  },
  {
    "text": "find where they came from we can get reproduceable results if we know where we're starting from and it's the",
    "start": "940800",
    "end": "946319"
  },
  {
    "text": "ultimate ling up Our Sleeve number so it's kind of surprising perhaps like why doesn't everybody just use pi as a thing",
    "start": "946319",
    "end": "953480"
  },
  {
    "text": "well there's nothing up your sleeve you're depending on somebody to do the work for you well the thing is we're depending on on the nature of Pi but the",
    "start": "953480",
    "end": "960880"
  },
  {
    "text": "but the thing is in the same way that we picked a random starting point we can pick a random starting we can pick an AR I mean both of this book and and Pi",
    "start": "960880",
    "end": "968600"
  },
  {
    "text": "we're using this thing sort of like like as an amplifier for for some initial we could call it seed Randomness that we we",
    "start": "968600",
    "end": "974560"
  },
  {
    "text": "pick some starting point and then we read off random looking numbers from that from that starting point and so from that from that point um it's if we",
    "start": "974560",
    "end": "984360"
  },
  {
    "text": "have an arbitrary starting point it's it's not going to be it's not going to be easy to to predict which I think is",
    "start": "984360",
    "end": "989560"
  },
  {
    "text": "no no what I was trying to say is that the the guy who computed the digits of five could had a bug in his software oh",
    "start": "989560",
    "end": "996360"
  },
  {
    "text": "well we can we can compute it a bunch of different ways so that's that is that's an important thing there are and and in fact for people to to produce digit",
    "start": "996360",
    "end": "1003360"
  },
  {
    "text": "Supply there's a whole bunch of stuff about how you verify it and so on so how do I pick the random starting point well",
    "start": "1003360",
    "end": "1008920"
  },
  {
    "text": "that's that's an interesting that's an interesting question and it's something that was that is true for the book and true true true for everything what we",
    "start": "1008920",
    "end": "1015240"
  },
  {
    "text": "can say is that the books and everything else they they are like an amplified for some initial Randomness you could either",
    "start": "1015240",
    "end": "1020880"
  },
  {
    "text": "always pick the same point if you want reproducible results or you can pick something something cute like you know what day is it today what's your you",
    "start": "1020880",
    "end": "1027240"
  },
  {
    "text": "know and and maybe do some things with your friends do whatever take a take a photograph take the md5 check some of it whatever you want to do to produce some",
    "start": "1027240",
    "end": "1033839"
  },
  {
    "text": "initial non determinism but the the key thing about all these approaches right from the the earliest one is there is",
    "start": "1033839",
    "end": "1040720"
  },
  {
    "text": "there are Randomness amplifiers and that they start take some initial thing then they produce reproducible Randomness",
    "start": "1040720",
    "end": "1046760"
  },
  {
    "text": "after that so the big con really for using for using pi is just it's really expensive to",
    "start": "1046760",
    "end": "1054080"
  },
  {
    "text": "compute it's like it's you it's not it's not a cheap to compute thing and so the",
    "start": "1054080",
    "end": "1059720"
  },
  {
    "text": "actual the actual issue with with practical random number generation is doing it in a practical way doing it in",
    "start": "1059720",
    "end": "1066320"
  },
  {
    "text": "as little space and as little time and still producing good good results things that satisfy all those statistical tests",
    "start": "1066320",
    "end": "1073640"
  },
  {
    "text": "so that's our sort of our our goal and what we're going to do um to kind of explore this a little bit is we're",
    "start": "1073640",
    "end": "1079600"
  },
  {
    "text": "actually going to invent a really terrible random number generator so this",
    "start": "1079600",
    "end": "1085080"
  },
  {
    "text": "is actually the multiply by three random number generator which I hope you have a sinking feeling in your stomach about",
    "start": "1085080",
    "end": "1091440"
  },
  {
    "text": "and so here it is and um and here's here's the output and",
    "start": "1091440",
    "end": "1098600"
  },
  {
    "text": "by the way this is this this Mo this this this this kind of jum run number generator has been around since um 1951",
    "start": "1098600",
    "end": "1105400"
  },
  {
    "text": "possibly not using three as the constant but anyone have a criticis M about this",
    "start": "1105400",
    "end": "1110799"
  },
  {
    "text": "this um sequence of random purportedly random numbers yes lot of odd numbers in",
    "start": "1110799",
    "end": "1117280"
  },
  {
    "text": "that okay so not lot of odd numbers there are no even numbers at all um that",
    "start": "1117280",
    "end": "1123240"
  },
  {
    "text": "seems that seems like a a problem although we could always just divide by two or something and get you cheated on your book because",
    "start": "1123240",
    "end": "1131080"
  },
  {
    "text": "I'll bet that 9999 does occur it just doesn't occur group correctly so there",
    "start": "1131080",
    "end": "1136159"
  },
  {
    "text": "are some numbers that don't like I don't know about 99 but i' I've checked the thing there are some there are some that",
    "start": "1136159",
    "end": "1141360"
  },
  {
    "text": "that when you when you sequence them differently there but that's like we can we can come to that questions at the end so we're turning to the times three um",
    "start": "1141360",
    "end": "1148159"
  },
  {
    "text": "thing we could actually say that they're all they're all odd and in fact I was hoping that somebody would suggest that they are um they're all multiples of",
    "start": "1148159",
    "end": "1155960"
  },
  {
    "text": "three but actually that's not true because we get to the point where the thing starts to wrap around and so the numbers I've colored in red are not are",
    "start": "1155960",
    "end": "1162760"
  },
  {
    "text": "not multiples of three so um there is a way if you really don't like the fact that we're only getting odd numbers we",
    "start": "1162760",
    "end": "1169400"
  },
  {
    "text": "can we can fix that um by just multiplying by three and adding one that",
    "start": "1169400",
    "end": "1174600"
  },
  {
    "text": "will that will get the job done actually there's something not very good about choosing there's some some rules for these constants and so we'll actually",
    "start": "1174600",
    "end": "1180679"
  },
  {
    "text": "instead of multiplying by three and adding one we'll multiply by 141 which is a NIC number and add three just to",
    "start": "1180679",
    "end": "1185840"
  },
  {
    "text": "keep the three in there and I've also reduced the size of things to to an eight bit so we have we can see the whole thing so if we if we look at that",
    "start": "1185840",
    "end": "1192720"
  },
  {
    "text": "that gives us the whole um the whole sequence of of numbers and so this this",
    "start": "1192720",
    "end": "1199320"
  },
  {
    "text": "has been um this is 1960s technology here and every number appears exactly",
    "start": "1199320",
    "end": "1206280"
  },
  {
    "text": "once which is which is a nice thing remember how we had that issue with bias in this book well this this is like a",
    "start": "1206280",
    "end": "1211760"
  },
  {
    "text": "book where there is no bias where we start the the ODS because everything occurs once we're good we call that",
    "start": "1211760",
    "end": "1217480"
  },
  {
    "text": "property uniformity and so it's uniform um it's also a bit weird that everything only appears once because like you'd",
    "start": "1217480",
    "end": "1222840"
  },
  {
    "text": "expect there to be duplicates but you know with such a small thing what can you expect perhaps um anyone no any any",
    "start": "1222840",
    "end": "1228760"
  },
  {
    "text": "flaws with this I mean the small size we doing a",
    "start": "1228760",
    "end": "1235039"
  },
  {
    "text": "small size one just because we can fit it so I'm missing something are you doing this and then truncating to three digits what what I said it was it's it's",
    "start": "1235039",
    "end": "1243200"
  },
  {
    "text": "it's an eight bit integer that I'm using so it's wrapping in an so good question thank you par alates",
    "start": "1243200",
    "end": "1248960"
  },
  {
    "text": "yeah the par Al goes It goes um even odd even odd even odd even odd and so that's",
    "start": "1248960",
    "end": "1257840"
  },
  {
    "text": "um that you could be you could be unhappy about about the fact that it's it's ring",
    "start": "1257840",
    "end": "1263159"
  },
  {
    "text": "even on in fact that's because the the period of the low order bit is actually just just it's just a has two of two",
    "start": "1263159",
    "end": "1271320"
  },
  {
    "text": "things like zero one the next bit has a period of double back which is slightly better and the period doubles as you go",
    "start": "1271320",
    "end": "1277400"
  },
  {
    "text": "to each successive bit but the bits are pretty awful um so we could complain about that there's something else though",
    "start": "1277400",
    "end": "1283480"
  },
  {
    "text": "that that got observed in 1968 some of you may may be familiar um with this",
    "start": "1283480",
    "end": "1289799"
  },
  {
    "text": "that if you take the these numbers and you group them into Pairs and you use them as X and Y coordinates and you PLU",
    "start": "1289799",
    "end": "1295880"
  },
  {
    "text": "them you you get this very very rigid structure in fact this is this is perly",
    "start": "1295880",
    "end": "1301559"
  },
  {
    "text": "a good sort of structure for one of these things it's called a linear this is called a linear congruent generator and this is reportedly good one because",
    "start": "1301559",
    "end": "1308159"
  },
  {
    "text": "although they're kind of the in two-dimensional in two Dimensions they've actually reasonably wellth space they're not all forming nasty lines sort",
    "start": "1308159",
    "end": "1315279"
  },
  {
    "text": "of stripy stripy things so um but there's still you could say like I think",
    "start": "1315279",
    "end": "1321039"
  },
  {
    "text": "many of you would have a gut feeling looking at this and be like that doesn't seem random to me and and I think that's",
    "start": "1321039",
    "end": "1327799"
  },
  {
    "text": "that's sort of like this is this get started out a lot as like the poster thing poster child for um L Conant gener",
    "start": "1327799",
    "end": "1334240"
  },
  {
    "text": "like there must be really awful look at this it's terrible and but I want you to just to sort",
    "start": "1334240",
    "end": "1340480"
  },
  {
    "text": "of not not necessarily accept everything that people tell you because one thing",
    "start": "1340480",
    "end": "1345520"
  },
  {
    "text": "is that we've taken a random number generator that can only produced 256 numbers and now we plotted it on a grid",
    "start": "1345520",
    "end": "1352000"
  },
  {
    "text": "that has 65,000 points and be like Oh try to fill this space would you random number generator and you can argue that",
    "start": "1352000",
    "end": "1358440"
  },
  {
    "text": "it's like it's doing the best it can as a 256 um I think with 256 States it's",
    "start": "1358440",
    "end": "1363760"
  },
  {
    "text": "it's me you know if it if it did it more irregularly there'd be gaps where stuff never occurs and would that be would",
    "start": "1363760",
    "end": "1369360"
  },
  {
    "text": "that be better um and so can when he looks at when he looked at these things he called this the grain of linear",
    "start": "1369360",
    "end": "1376039"
  },
  {
    "text": "congruential generator and said well that's that's just you know you've zoomed in too far and and you you know",
    "start": "1376039",
    "end": "1381679"
  },
  {
    "text": "and we can also actually if you you look at the order in which these things occur they actually occur in",
    "start": "1381679",
    "end": "1387480"
  },
  {
    "text": "a in a kind of a fairly random order and so maybe you can feel a little bit",
    "start": "1387480",
    "end": "1394279"
  },
  {
    "text": "better about this like you saw this thing was awful but maybe it's maybe it's actually better than you thought",
    "start": "1394279",
    "end": "1400240"
  },
  {
    "text": "and in fact people continue to use these things even though people came up with other other things they and so here's a",
    "start": "1400240",
    "end": "1405960"
  },
  {
    "text": "couple of really classic linear congruential generators following the two methods that we've seen one is",
    "start": "1405960",
    "end": "1411720"
  },
  {
    "text": "multiply by by a number and add a small constant and then what we've done is we've thrown order those thrown away the",
    "start": "1411720",
    "end": "1417400"
  },
  {
    "text": "we we've done it at 48 bits and thrown away the low order 16 bits because they were really terrible they had a really short period",
    "start": "1417400",
    "end": "1423120"
  },
  {
    "text": "and and so the and the other one is I'm",
    "start": "1423120",
    "end": "1428400"
  },
  {
    "text": "just using multiplication but I'm doing modulo some some prime which which",
    "start": "1428400",
    "end": "1433840"
  },
  {
    "text": "actually kind of scatters things around um reasonably nicely",
    "start": "1433840",
    "end": "1439279"
  },
  {
    "text": "um so D 40 so so these these things actually have names this this one is",
    "start": "1439279",
    "end": "1446159"
  },
  {
    "text": "called dran 48 and the other one is called mined and they're actually quite",
    "start": "1446159",
    "end": "1451679"
  },
  {
    "text": "quite old they one of them comes from 1983 it was originally written for a pdp1 a 16bit machine some of you will be",
    "start": "1451679",
    "end": "1458520"
  },
  {
    "text": "like Yay 16 bit machines and and so it was kind of 48 was like three 16bit",
    "start": "1458520",
    "end": "1465200"
  },
  {
    "text": "variables were used to make the the 48-bit um random number generator and",
    "start": "1465200",
    "end": "1470440"
  },
  {
    "text": "minid came out a bit later the minid is a bit interesting because it has a period That's just shy of a power of two",
    "start": "1470440",
    "end": "1478279"
  },
  {
    "text": "which actually kind of awkward if you're trying to Generate random bits because like you're not quite matching up it's like in a lot of computering",
    "start": "1478279",
    "end": "1484440"
  },
  {
    "text": "applications especially system Z ones we want random bits and so it's nicer to have things where our output is 32 bits",
    "start": "1484440",
    "end": "1491039"
  },
  {
    "text": "exactly and d48 can do that really nicely also minad has the issue that",
    "start": "1491039",
    "end": "1496159"
  },
  {
    "text": "every number only occurs once because the period and the output range are the same whereas in D 48 every number occurs",
    "start": "1496159",
    "end": "1502840"
  },
  {
    "text": "65,000 times and so we can we can have we're still not biased we're still",
    "start": "1502840",
    "end": "1508440"
  },
  {
    "text": "uniform um and you might think well this is great you know what is telling me about this stuff it's from the the 80s I",
    "start": "1508440",
    "end": "1515360"
  },
  {
    "text": "love the 80s but you know how is this relevant to me today well let me just point out that D 4H is Java util random",
    "start": "1515360",
    "end": "1523520"
  },
  {
    "text": "and um the other one is C++ 11's mined Rand and both clang and GCC use minad as",
    "start": "1523520",
    "end": "1531240"
  },
  {
    "text": "their default random random number generator so even today these are incredibly prevalent it's also the case",
    "start": "1531240",
    "end": "1538039"
  },
  {
    "text": "that Java has added some on since this but this a lot of people still use Java util random so given the flaws that we've",
    "start": "1538039",
    "end": "1546240"
  },
  {
    "text": "seen why why are linear congruential generators so so prevalent well there are lots of lots of good things about",
    "start": "1546240",
    "end": "1554200"
  },
  {
    "text": "about them they can be quite fast they can support support multiple streams the",
    "start": "1554200",
    "end": "1559799"
  },
  {
    "text": "constant that we add the on where we add a constant if you add a different odd constant you actually get a completely different sequence of random numbers and",
    "start": "1559799",
    "end": "1565880"
  },
  {
    "text": "so that's kind of a cool property we can scale them to arbitary sizes um they support some other cool things um if you",
    "start": "1565880",
    "end": "1573279"
  },
  {
    "text": "take the algorithm for fast and exponentiation you can adapt that pretty trivially to do jumper ahead you can say",
    "start": "1573279",
    "end": "1578840"
  },
  {
    "text": "oh what number would I produce you know a million time a million steps from now and so they they support um lots of nice",
    "start": "1578840",
    "end": "1586320"
  },
  {
    "text": "things and because it's a simple linear relationship mathematically they're really well understood and so that's a",
    "start": "1586320",
    "end": "1593120"
  },
  {
    "text": "positive thing but that that grid still kind of like gets people in the gut you",
    "start": "1593120",
    "end": "1598600"
  },
  {
    "text": "know it's like I don't like that and so we really have to be be aware that they are statistically mediocre and because",
    "start": "1598600",
    "end": "1604840"
  },
  {
    "text": "of the fact that they they follow simple mathematical formula they are predictable that you know minad is",
    "start": "1604840",
    "end": "1611120"
  },
  {
    "text": "obviously predictable its state is is its output um and even when you drop the",
    "start": "1611120",
    "end": "1616440"
  },
  {
    "text": "the low order 16 bits it's trivial to figure out what those low order 16 bits are with only 16 bits you could just",
    "start": "1616440",
    "end": "1623000"
  },
  {
    "text": "force it and so it's worth thinking about some of the Alternatives there are",
    "start": "1623000",
    "end": "1628240"
  },
  {
    "text": "tons of Alternatives but we're going to focus on the ones that are most wellknown and most popular today so one",
    "start": "1628240",
    "end": "1634799"
  },
  {
    "text": "of the ones that's really welln and and really popular is the meren Twister and it was a tour to force um when it came",
    "start": "1634799",
    "end": "1641919"
  },
  {
    "text": "out in 1997 and it has an absolutely massive period which means that if you were",
    "start": "1641919",
    "end": "1648520"
  },
  {
    "text": "hoping to use that technique of sort of memorizing the whole book and doing a search in it it's not going to work for you it's totally not going to work",
    "start": "1648520",
    "end": "1654600"
  },
  {
    "text": "because like this is this is vastly larger than the in fact I should talk",
    "start": "1654600",
    "end": "1659679"
  },
  {
    "text": "about how large this period is because this book this is 200,000 integers and I",
    "start": "1659679",
    "end": "1665880"
  },
  {
    "text": "expressed it graphically um on the screen well what we're going to do is is imagine you know we all have these",
    "start": "1665880",
    "end": "1671240"
  },
  {
    "text": "little eye devices with these retina displays and so and stuff so if I took that thing and I shrank it down to a retina display size that that 200,000",
    "start": "1671240",
    "end": "1678919"
  },
  {
    "text": "things numbers would fill a 1 and a half Square in on an iPad um on a retin a",
    "start": "1678919",
    "end": "1684640"
  },
  {
    "text": "screen if I had two to the 32 integers that would be a generous faculty office in fact I checked in at",
    "start": "1684640",
    "end": "1690799"
  },
  {
    "text": "Stanford that would be the we could you title the ceiling of a Dean's office with with iPad resolution things and",
    "start": "1690799",
    "end": "1695960"
  },
  {
    "text": "express the whole random sequence there that way and that would be that much that much space if I had two to the 48",
    "start": "1695960",
    "end": "1702559"
  },
  {
    "text": "integers um all of the all the numbers if I laid them out on a on resolution",
    "start": "1702559",
    "end": "1708440"
  },
  {
    "text": "that would fill 150 city blocks if I went 2 to 64 integers that would be the size of Maine or Portugal um or if you",
    "start": "1708440",
    "end": "1716240"
  },
  {
    "text": "like if you like think think of things more mathematically uh the rad a sphere with radius 53 miles the surface area of",
    "start": "1716240",
    "end": "1722519"
  },
  {
    "text": "that if we go up to 2 to the 128 integers that is a sphere with radius",
    "start": "1722519",
    "end": "1727880"
  },
  {
    "text": "900 astronomical units that's that's 10 times the you know the the the radius",
    "start": "1727880",
    "end": "1733159"
  },
  {
    "text": "out to the helos the end of the edge of the heliosphere which is like you know so we're way encompassing the entire",
    "start": "1733159",
    "end": "1738399"
  },
  {
    "text": "solar system and I didn't put it on the slide but if you do 2 to the 256 that",
    "start": "1738399",
    "end": "1744519"
  },
  {
    "text": "would be a sphere that is in the same way this is 10 times like our solar system be 10 times the observable universe so that's that's a pretty huge",
    "start": "1744519",
    "end": "1752799"
  },
  {
    "text": "period and the mo and twister is way way way bigger than that so an approach",
    "start": "1752799",
    "end": "1759480"
  },
  {
    "text": "where you just search through the thing is is completely impractical so that might seem kind of cool as I I think I",
    "start": "1759480",
    "end": "1766080"
  },
  {
    "text": "said it was like mathematically it was so it had lots of like this is mostly systems audience I can say to you it's",
    "start": "1766080",
    "end": "1771440"
  },
  {
    "text": "really scary math you so um so that seems that seems kind of positive but",
    "start": "1771440",
    "end": "1777480"
  },
  {
    "text": "unfortunately there were some some issues one is that it's it's huge um for",
    "start": "1777480",
    "end": "1784840"
  },
  {
    "text": "a random number generation it's like it takes two and a half kilobytes and you might think well what's two and a half kilobytes but if you wanted to embed a",
    "start": "1784840",
    "end": "1790159"
  },
  {
    "text": "random number in your data generator in your data structures you know that's going to add up if you decide to use",
    "start": "1790159",
    "end": "1795399"
  },
  {
    "text": "multiple multiple random number generators it's not that fast actually and really really crazily if you just",
    "start": "1795399",
    "end": "1804600"
  },
  {
    "text": "even despite the huge number of numbers it can produce if you just get 624 numbers from the meren Twister from that",
    "start": "1804600",
    "end": "1810440"
  },
  {
    "text": "point onwards You can predict it completely which is really kind of sad um so it also has some other some other",
    "start": "1810440",
    "end": "1818080"
  },
  {
    "text": "issues and and it's not the only random number generator that people can out the m and twister was produced for python",
    "start": "1818080",
    "end": "1825240"
  },
  {
    "text": "was it gets used by python lots of other languages but there are other people who've who've picked other ones and another popular one is one called EXO",
    "start": "1825240",
    "end": "1831600"
  },
  {
    "text": "shift which was produced by the same person that actually came up with the that horrible diagram that showed how",
    "start": "1831600",
    "end": "1837279"
  },
  {
    "text": "awful linear congal generators were um it is a bit awkward that it has that",
    "start": "1837279",
    "end": "1842519"
  },
  {
    "text": "minus one on the on the period is kind of like yeah that's that's a little bit annoying it's incapable of producing",
    "start": "1842519",
    "end": "1847760"
  },
  {
    "text": "zero essentially like the zero state is its death state it hates that",
    "start": "1847760",
    "end": "1853200"
  },
  {
    "text": "so and other people produced other random numbers but other other random number generators but things look pretty",
    "start": "1853200",
    "end": "1859360"
  },
  {
    "text": "good it's like you could tell people well if you want something really big use the M twister maybe and if you want",
    "start": "1859360",
    "end": "1864600"
  },
  {
    "text": "something a bit small you could use EXO shift and things were looking pretty good in the world of random number generation until 2007 and in 2007 one of",
    "start": "1864600",
    "end": "1873519"
  },
  {
    "text": "the the leading lights in random number generation somebody in Montreal called Pier QA um decided to people have been",
    "start": "1873519",
    "end": "1880200"
  },
  {
    "text": "coming up with statistical tests for R number generation for a long time ever since you know Tippets book first came out and in 20",
    "start": "1880200",
    "end": "1887760"
  },
  {
    "text": "7 P took at one and he searched the literature and he found about 160",
    "start": "1887760",
    "end": "1893639"
  },
  {
    "text": "different random number tests statistical tests that you could apply to a random number generator and he",
    "start": "1893639",
    "end": "1898679"
  },
  {
    "text": "developed a um a test Suite called test U1 and the idea was it was a rigorous a",
    "start": "1898679",
    "end": "1906360"
  },
  {
    "text": "rigorous thing to to put random number of generators through to see how well",
    "start": "1906360",
    "end": "1911799"
  },
  {
    "text": "they would do how many of all these statistical tests they would pass and not surprisingly um when you take a look",
    "start": "1911799",
    "end": "1918840"
  },
  {
    "text": "at linear congruential generators they they did not pass he did three different batteries one called small crush that",
    "start": "1918840",
    "end": "1924519"
  },
  {
    "text": "runs in about 10 seconds and so small crush in 10 seconds we like run 15 tests",
    "start": "1924519",
    "end": "1930279"
  },
  {
    "text": "and some of the L Cong just failed all 15 just point boom failed everything and",
    "start": "1930279",
    "end": "1936279"
  },
  {
    "text": "um and he also had two others Med crush and Big Crush and Big Crush takes about",
    "start": "1936279",
    "end": "1942639"
  },
  {
    "text": "6 to eight hours to run and does much more it's like a much more intense test but but",
    "start": "1942639",
    "end": "1947919"
  },
  {
    "text": "these linear congruential generators couldn't even last 10 seconds of statistical spting it wasn't just linear congruential generators either they",
    "start": "1947919",
    "end": "1954880"
  },
  {
    "text": "there were various other ones a lot of people think that the Unix random generation scheme should be better than",
    "start": "1954880",
    "end": "1960240"
  },
  {
    "text": "things like d 48 you can see here is actually worse fils more statistical tests um EXO shift also fails U at least",
    "start": "1960240",
    "end": "1967080"
  },
  {
    "text": "in this 32-bit Incarnation so that's that's pretty bad and that's just the 10c",
    "start": "1967080",
    "end": "1972240"
  },
  {
    "text": "test what about the one that runs for eight hours well almost everything felt Big",
    "start": "1972240",
    "end": "1979360"
  },
  {
    "text": "Crush like certainly the ones that anyone anybody ever used um felt Big",
    "start": "1979360",
    "end": "1984840"
  },
  {
    "text": "Crush there are some esoteric ones that are not necessarily practical like we could use pie that would that would have passed but um but the um but all the",
    "start": "1984840",
    "end": "1993240"
  },
  {
    "text": "ones that people actually use no they that was the it was kind of decimated the the field and that was kind of",
    "start": "1993240",
    "end": "1999919"
  },
  {
    "text": "surprising because some people um you know really love things like the M they had all this beautiful mathematics and",
    "start": "1999919",
    "end": "2005000"
  },
  {
    "text": "stuff but unfortunately mathematics can't capture all the properties that you might you might care about in a random number generator and and in",
    "start": "2005000",
    "end": "2012519"
  },
  {
    "text": "particular all the techniques that are based on something called a generalized linear feedback shift register design there's a test there a sniff test for",
    "start": "2012519",
    "end": "2019960"
  },
  {
    "text": "this thing called a for that kind of random nen you smell like a linear feedback",
    "start": "2019960",
    "end": "2025159"
  },
  {
    "text": "shift register yeah I know I know your thing and so that's that is a test called um linear complexity that that",
    "start": "2025159",
    "end": "2031960"
  },
  {
    "text": "performs that that test and that's part of the Big Crush suite for some reason it's not part of small crush even though",
    "start": "2031960",
    "end": "2037000"
  },
  {
    "text": "actually doesn't take very long to run so just because I'm a cruel person I took that test out of out of Big Crush and I was like I'll just run that",
    "start": "2037000",
    "end": "2042919"
  },
  {
    "text": "separately and see see what it does with these these ones and it turns out that if you run the linear complexity test on",
    "start": "2042919",
    "end": "2048839"
  },
  {
    "text": "a bunch of these these ones that you know really well respected in the literature they'll they'll fail and they fail in about you know six to 10 seconds",
    "start": "2048839",
    "end": "2056358"
  },
  {
    "text": "and for the m and twister you just need 45,000 random numbers from it and it's like boom sorry you're you're you're no",
    "start": "2056359",
    "end": "2062398"
  },
  {
    "text": "good and of course you can react to that by just saying oh well that test I mean",
    "start": "2062399",
    "end": "2067720"
  },
  {
    "text": "really who would run that test but you know there there's it's still kind of a shame that these these things failed",
    "start": "2067720",
    "end": "2074320"
  },
  {
    "text": "this failed the statistical test so you could argue that that's kind of a shocker but there's there's even more of",
    "start": "2074320",
    "end": "2080158"
  },
  {
    "text": "a shocker in this because remember how awful linear congruential generators were well it turns out that if you go up",
    "start": "2080159",
    "end": "2089000"
  },
  {
    "text": "to a 64-bit linear congruential generator and throw away the low order 32 bits that passes small",
    "start": "2089000",
    "end": "2094560"
  },
  {
    "text": "crush and if you go up to 96 bits BS that pass is Big Crush and oh to make a",
    "start": "2094560",
    "end": "2101280"
  },
  {
    "text": "96-bit one it's not even hard we could take that ancient code for D 48 just upgrade it to use 32 bit in rather than",
    "start": "2101280",
    "end": "2106920"
  },
  {
    "text": "64 bit in and Tada you know so it's like it's not hard to to make a 96 bit linear congr generator so and this is this is",
    "start": "2106920",
    "end": "2113920"
  },
  {
    "text": "something that's true for for some of these generation schemes that for many of them more bits makes it easier for",
    "start": "2113920",
    "end": "2120599"
  },
  {
    "text": "them to pass statistical tests and fewer bits makes it harder and you can kind of see sort of intuitively why that might",
    "start": "2120599",
    "end": "2126480"
  },
  {
    "text": "be the case if you no matter how good a generator might be if I crush it down to having a single bit of State it's pretty",
    "start": "2126480",
    "end": "2133000"
  },
  {
    "text": "clear that it couldn't pass very many statistical tests with only a single bit of state and so it's it's quite it kind",
    "start": "2133000",
    "end": "2139839"
  },
  {
    "text": "of matches our intuition um that having more bits might make it easier for things to pass and it turns out that",
    "start": "2139839",
    "end": "2145880"
  },
  {
    "text": "linear congruential generators actually pass at 88 bits so if we throw away the low to 56 bits keep the top 32 we we",
    "start": "2145880",
    "end": "2154560"
  },
  {
    "text": "actually will pass that big Crush test but it's not true this property isn't true for everything sadly EXO shift",
    "start": "2154560",
    "end": "2160839"
  },
  {
    "text": "fails no matter how many bits you give it and the mo Twisted despite how huge it was it still fails that that that",
    "start": "2160839",
    "end": "2166480"
  },
  {
    "text": "sniff test doesn't care how big you are it's like no matter how big you are it's like no you're you're linear feedback",
    "start": "2166480",
    "end": "2171560"
  },
  {
    "text": "shift register so um that's cool um but 88 bits you might think well",
    "start": "2171560",
    "end": "2181000"
  },
  {
    "text": "maybe that's as good as you can get but actually if you if you do some Theory that's in the paper I won't talk about it today um you can actually determine",
    "start": "2181000",
    "end": "2188720"
  },
  {
    "text": "that the the smallest thing could be if it was uniform the smallest and looking at the properties and how the",
    "start": "2188720",
    "end": "2194800"
  },
  {
    "text": "statistical test works and and so forth the small it could be it's actually 36 bits and 88 is quite a quite a big quite",
    "start": "2194800",
    "end": "2201520"
  },
  {
    "text": "a way away from 36 bits and in fact a variant of exos shift exos shift star",
    "start": "2201520",
    "end": "2207800"
  },
  {
    "text": "passes Big Crush if we just keep we do a 40 bit size and keep the top 32 throw",
    "start": "2207800",
    "end": "2213560"
  },
  {
    "text": "away the bottom the bottom um eight and you might say what is I mean you don't even necessarily know what EXO shift is",
    "start": "2213560",
    "end": "2220040"
  },
  {
    "text": "but what's EXO shift start well it's just EXO shift plus an improving step so all we're doing is we doing something to",
    "start": "2220040",
    "end": "2226079"
  },
  {
    "text": "to make it to make it a better and and what is this improving step well crazily enough what we do is we take the",
    "start": "2226079",
    "end": "2232760"
  },
  {
    "text": "internal State and we multiply it by a number and that's the improving step that EXO shift star does it's it's",
    "start": "2232760",
    "end": "2238839"
  },
  {
    "text": "actually taking the trick of a linear congruential generator and saying I'll just apply that trick to get the to get",
    "start": "2238839",
    "end": "2244359"
  },
  {
    "text": "the job done and and so the state is is still this this shift register thing but",
    "start": "2244359",
    "end": "2250280"
  },
  {
    "text": "to get the output it's doing this extra step and this this gives us a kind of a something that's that's a a useful",
    "start": "2250280",
    "end": "2256240"
  },
  {
    "text": "property about um random number generation is like what the internal state is and what the output is don't",
    "start": "2256240",
    "end": "2262720"
  },
  {
    "text": "have to be the same we can tweak the internal state to in producing the output so what we did with d 48 is we",
    "start": "2262720",
    "end": "2269240"
  },
  {
    "text": "had an internal state that was 48 bits we threw away 16 bits and kept and kept the top 32 but you can also do",
    "start": "2269240",
    "end": "2275760"
  },
  {
    "text": "scrambling that's what EXO shift star does instantly that's what the m and twister also does although it's scrambling doesn't stop it from failing",
    "start": "2275760",
    "end": "2282640"
  },
  {
    "text": "the the sniff test and obviously you could combine those um together to make something that both",
    "start": "2282640",
    "end": "2290480"
  },
  {
    "text": "drops bits and um and scrambles things but no matter how we do this we should",
    "start": "2290480",
    "end": "2295880"
  },
  {
    "text": "make sure we don't introduce bias you might notice on the on the um we never have it's always the case that it's",
    "start": "2295880",
    "end": "2301560"
  },
  {
    "text": "always K to one so in these in these examples it's two to one that two things every everything output has exactly two",
    "start": "2301560",
    "end": "2307760"
  },
  {
    "text": "things that matter to it um other if we did something different from that we'd introduce we' introduce",
    "start": "2307760",
    "end": "2313319"
  },
  {
    "text": "bias so that's an idea that we don't the output doesn't have to be the internal State we can sort of permute it in some",
    "start": "2313319",
    "end": "2318960"
  },
  {
    "text": "way and there are three possible things that can happen if you permute the output if the thing was already sort of truly random in some sense it couldn't",
    "start": "2318960",
    "end": "2325400"
  },
  {
    "text": "possibly change it to to put it through any kind of bje wouldn't make it any less random than it already was um but",
    "start": "2325400",
    "end": "2331240"
  },
  {
    "text": "if you if you have something that is not quite random enough and you put it through a suitable scrambling function",
    "start": "2331240",
    "end": "2337640"
  },
  {
    "text": "then that might make it seem more random U and that's what we did with exos shift",
    "start": "2337640",
    "end": "2342960"
  },
  {
    "text": "and obviously you could make it worse in fact if you'd already put it through that that multiply and you put it through this other one that's the",
    "start": "2342960",
    "end": "2348200"
  },
  {
    "text": "multiplicative inverse and so that would turn exos shift star back into exos shift again um but obviously if we",
    "start": "2348200",
    "end": "2355200"
  },
  {
    "text": "dropped some bits then it might be harder to invert the the the transformation but this leads to a",
    "start": "2355200",
    "end": "2360640"
  },
  {
    "text": "fairly sort of obvious question which is like well if we if we're allowed to do some stuff to improve exos shift I",
    "start": "2360640",
    "end": "2366720"
  },
  {
    "text": "should be allowed to do some stuff to improve a linear congruential generators just only only stands to reason and so",
    "start": "2366720",
    "end": "2372880"
  },
  {
    "text": "let's let's see if we can come up with an idea here of what of what to do so we",
    "start": "2372880",
    "end": "2378119"
  },
  {
    "text": "know we want 32 bits we know the low order bits are terrible like the the lowest order bit it's just going 0 one 0",
    "start": "2378119",
    "end": "2383880"
  },
  {
    "text": "one01 which is not not very good at all and but they get better as you go further up d48 just threw away the the",
    "start": "2383880",
    "end": "2390400"
  },
  {
    "text": "um the low order 16 bits we could just for with a 64-bit one just throw away",
    "start": "2390400",
    "end": "2396520"
  },
  {
    "text": "away the the bottom 32 bits and we tried that and that pass small crush did not pass Big",
    "start": "2396520",
    "end": "2401880"
  },
  {
    "text": "Crush but here's here's the idea you could say well maybe the lowest ones are",
    "start": "2401880",
    "end": "2407200"
  },
  {
    "text": "really terrible and and maybe in some sense these top ones are sort of like the best but these ones next door",
    "start": "2407200",
    "end": "2414520"
  },
  {
    "text": "they're not bad they're not they're not the worst random number generate numbers in the world they they're they're kind",
    "start": "2414520",
    "end": "2419640"
  },
  {
    "text": "of they're pretty random and the ones next to them they're pretty random too if we were using those it would be not",
    "start": "2419640",
    "end": "2425280"
  },
  {
    "text": "quite enough to pass all stal test but they'd be pretty good these ones over here not quite as good but they're and",
    "start": "2425280",
    "end": "2431920"
  },
  {
    "text": "so I've got a bunch of different places I could choose some bits from and so",
    "start": "2431920",
    "end": "2437000"
  },
  {
    "text": "instead of just always picking from the same place why not instead say well I've",
    "start": "2437000",
    "end": "2443720"
  },
  {
    "text": "got a bunch of different random number generators that here in these bits let me let me use um figure out some way to",
    "start": "2443720",
    "end": "2450640"
  },
  {
    "text": "choose and H how should I choose hm what kind of algorithms do we like I love",
    "start": "2450640",
    "end": "2456480"
  },
  {
    "text": "randomized algorithms so I should pick randomly hm okay but where am I going to",
    "start": "2456480",
    "end": "2461839"
  },
  {
    "text": "get any Randomness from if only I had some really good high quality Randomness somewhere that would really help me",
    "start": "2461839",
    "end": "2467880"
  },
  {
    "text": "right well these are like the best these top few bits are the best best bits out",
    "start": "2467880",
    "end": "2473560"
  },
  {
    "text": "there so we could just take those three bits and say I will",
    "start": "2473560",
    "end": "2478800"
  },
  {
    "text": "pick where to go based on those those bits so when these bits read two I will",
    "start": "2478800",
    "end": "2485079"
  },
  {
    "text": "pick the this place here I'll pick the the point that's that is let me let me show you",
    "start": "2485079",
    "end": "2492000"
  },
  {
    "text": "again I'll show you again on a 16bit example just so that we can be clear what's going on so what I'm going to do",
    "start": "2492000",
    "end": "2497040"
  },
  {
    "text": "is I'm going to say first of all let's remind ourselves that and this is actually for a terrible 16bit linear",
    "start": "2497040",
    "end": "2503119"
  },
  {
    "text": "congruential generator so it's going to be really stripy so if we puted all the the points that you get out of these",
    "start": "2503119",
    "end": "2508720"
  },
  {
    "text": "these top bits it looks like that I went to the next one it looks like that then went to the next one it looks the same still very stripy next one is kind of I",
    "start": "2508720",
    "end": "2516400"
  },
  {
    "text": "don't if you can see on the projector it's kind of dotty and the next one is",
    "start": "2516400",
    "end": "2521640"
  },
  {
    "text": "is even more Dotty and so on and what we're going to do is in this case",
    "start": "2521640",
    "end": "2527560"
  },
  {
    "text": "because it's only 16 bit I'm just going to use the top two bits and I'm going to pick going use those to choose which of",
    "start": "2527560",
    "end": "2534000"
  },
  {
    "text": "these four now because I'm using the top two bits it means that these my very best two random number things are going",
    "start": "2534000",
    "end": "2540319"
  },
  {
    "text": "to be out so they're out of out of the picture but these top two bits are going to be",
    "start": "2540319",
    "end": "2546920"
  },
  {
    "text": "causing me to switch depending on the value of the top two bits I'll be switching between these these other um",
    "start": "2546920",
    "end": "2552559"
  },
  {
    "text": "three things and they those are all terrible and so the question is what do you get if you randomly switch between",
    "start": "2552559",
    "end": "2558319"
  },
  {
    "text": "them what you get is that now you might look at that and see like I can still see some structure there and you'd be",
    "start": "2558319",
    "end": "2563839"
  },
  {
    "text": "right there is still some structure there but in terms of like at a gut level does this feel more random to you",
    "start": "2563839",
    "end": "2569520"
  },
  {
    "text": "than the individual things I think you'd say yeah it's like those other ones were very very very regimented in their",
    "start": "2569520",
    "end": "2574599"
  },
  {
    "text": "stripes and this is this is this way of switching between things is seems Seems",
    "start": "2574599",
    "end": "2581040"
  },
  {
    "text": "at a gut level like it might be better and so the nice thing is the code for",
    "start": "2581040",
    "end": "2586280"
  },
  {
    "text": "this is super simple because if we had a standard um 64-bit linear congruential generator where you just dropped the",
    "start": "2586280",
    "end": "2592200"
  },
  {
    "text": "load of 32 bits we can just take that code or take the fixed shift of 32 bits",
    "start": "2592200",
    "end": "2598359"
  },
  {
    "text": "and switch it down to just saying well I'll use the top the top few bits to decide what my shift should be and",
    "start": "2598359",
    "end": "2604440"
  },
  {
    "text": "that's it that's that's the only difference in the in the code and the cool thing is that this thing passes Big",
    "start": "2604440",
    "end": "2610480"
  },
  {
    "text": "Crush and it does so at 58 bits which is cool so it means that you can have a 64 64 bit State produce 32-bit random",
    "start": "2610480",
    "end": "2617240"
  },
  {
    "text": "numbers and you're passing Big Crush with you know six bits to spare which is which is kind of you know like you could",
    "start": "2617240",
    "end": "2623520"
  },
  {
    "text": "have you could which we can a gut level we could say well I could double the size of the test and double it a few",
    "start": "2623520",
    "end": "2629040"
  },
  {
    "text": "more times and still be passing um that's just one idea let's let's consider some another idea because",
    "start": "2629040",
    "end": "2636680"
  },
  {
    "text": "you might remember let's let's say we're going to think about just this range",
    "start": "2636680",
    "end": "2642000"
  },
  {
    "text": "which is this this little piece here on the on the slides there I'm actually",
    "start": "2642000",
    "end": "2647319"
  },
  {
    "text": "just going to throw away those those bottom those bottom few bits and pick and use the the top bits to give me a",
    "start": "2647319",
    "end": "2653520"
  },
  {
    "text": "number between zero and seven and",
    "start": "2653520",
    "end": "2659200"
  },
  {
    "text": "so there there is going to be my my number and I'm going to use that to pick",
    "start": "2659200",
    "end": "2664680"
  },
  {
    "text": "this time cuz I'm getting eight bits out of six I'm going to use it to pick a rotation cuz it was always the case that the low",
    "start": "2664680",
    "end": "2670960"
  },
  {
    "text": "order bit was like the the worst one I'm going to play like move it around where does it go nobody knows like that",
    "start": "2670960",
    "end": "2676520"
  },
  {
    "text": "terrible bit is going to move around and so I'm going to do rotations now if you look at what it does to the lce it does horrible things because moving that low",
    "start": "2676520",
    "end": "2683079"
  },
  {
    "text": "a bit up to high to make it really significant does really really nasty things but and so none of these look",
    "start": "2683079",
    "end": "2688720"
  },
  {
    "text": "very random or very nice at all but if you combine them together again you get something that looks pretty cool and",
    "start": "2688720",
    "end": "2695359"
  },
  {
    "text": "what's neat about this is again this pass is a big Crush but it does even better it passes at 53 bits but you",
    "start": "2695359",
    "end": "2701400"
  },
  {
    "text": "still might be concerned you might think well okay this is all very neat but how do you know you're not introducing bias",
    "start": "2701400",
    "end": "2707520"
  },
  {
    "text": "or something something strange here and so let's think about that so let's think",
    "start": "2707520",
    "end": "2712559"
  },
  {
    "text": "about our our process here that we were doing we were taking a bit pattern we're",
    "start": "2712559",
    "end": "2717800"
  },
  {
    "text": "going to look at the first um the first few first three bits and we're going to",
    "start": "2717800",
    "end": "2725280"
  },
  {
    "text": "use that to de on a rotation and so in this case the rotation was two and so we move the the two bits around and so",
    "start": "2725280",
    "end": "2733040"
  },
  {
    "text": "that's where we're at at the at the end and the question is how do we know that",
    "start": "2733040",
    "end": "2738480"
  },
  {
    "text": "this this transformation is a permutation how do we know that it is a bje um and does anyone do anyone have an",
    "start": "2738480",
    "end": "2746559"
  },
  {
    "text": "argument for why how you can know that this must be a",
    "start": "2746559",
    "end": "2751558"
  },
  {
    "text": "bje you can viction means that we that we one one way to tell where the permutation is that you can you can un",
    "start": "2751720",
    "end": "2758920"
  },
  {
    "text": "you can undo it it's a conditional permutation",
    "start": "2758920",
    "end": "2764200"
  },
  {
    "text": "so when when you say conditional permutation you mean it's it's driven by it's driven by",
    "start": "2764240",
    "end": "2772359"
  },
  {
    "text": "those those top those top bits does anyone have an comp anyone have an an argument for how you know that this this",
    "start": "2772359",
    "end": "2779520"
  },
  {
    "text": "is this has to be a bje one one thing is that we can say that we can we can know it is if we can if we know we can n do",
    "start": "2779520",
    "end": "2785680"
  },
  {
    "text": "it do you know that you can undo it you could do it the other way what's the what's the recipe for doing that the",
    "start": "2785680",
    "end": "2791680"
  },
  {
    "text": "opposite you just you just look at the top bits and do the reverse in the other direction and then you're back where you started so this is obviously invertible",
    "start": "2791680",
    "end": "2798760"
  },
  {
    "text": "and so we can look at this one and say I know that this this one is invertible",
    "start": "2798760",
    "end": "2804960"
  },
  {
    "text": "and we know that it's a bijection but we can actually generalize this and just think about this in general so would",
    "start": "2804960",
    "end": "2810040"
  },
  {
    "text": "have a little bit a little bit of math there's more if you love intimidating math there's more in the paper but um",
    "start": "2810040",
    "end": "2815319"
  },
  {
    "text": "the PCG paper but what we're going to do is we're going to consider these these",
    "start": "2815319",
    "end": "2820880"
  },
  {
    "text": "two parts of the thing as a tupal as a pair and in general I'm going to",
    "start": "2820880",
    "end": "2826960"
  },
  {
    "text": "consider the top part and the bottom bit permutations on a cross B so that's what we just thinking of this this thing as a",
    "start": "2826960",
    "end": "2833559"
  },
  {
    "text": "as a pair now the most obvious permutation that you could do by jaction that you could do on a pair is You' take",
    "start": "2833559",
    "end": "2840119"
  },
  {
    "text": "two permutation functions one that turns that permutes the A's one that permutes the B's and you just apply them both",
    "start": "2840119",
    "end": "2847200"
  },
  {
    "text": "and that would give you um a permutation on um on them both but that that sort of",
    "start": "2847200",
    "end": "2854200"
  },
  {
    "text": "is not what we were doing what we were doing was something a little bit different so what we did is we",
    "start": "2854200",
    "end": "2859559"
  },
  {
    "text": "concentrated all our effort on one side we said we had a family of permutations in our case we had a family of rotations",
    "start": "2859559",
    "end": "2865520"
  },
  {
    "text": "we had eight different rotations by Zero by one by two all the way up to seven so we had a family of of permutation",
    "start": "2865520",
    "end": "2870640"
  },
  {
    "text": "functions and every one of them is a is a permutation it can be inverted and the",
    "start": "2870640",
    "end": "2875680"
  },
  {
    "text": "there's one for every every member of of a our the things on the one side of our",
    "start": "2875680",
    "end": "2881640"
  },
  {
    "text": "tupo and if we have that family then it's also the case that if we apply if",
    "start": "2881640",
    "end": "2888480"
  },
  {
    "text": "we apply it by using this F star where we say F star of ab is a followed by F",
    "start": "2888480",
    "end": "2894520"
  },
  {
    "text": "of a f a of B then that is a permutation for exactly the same reasoning that we",
    "start": "2894520",
    "end": "2899680"
  },
  {
    "text": "had before that you can undo it that we can just apply the inverse of the permutation to to do it and so that",
    "start": "2899680",
    "end": "2907240"
  },
  {
    "text": "gives us a really powerful way to perform permutations using the randomness that already exists in in our",
    "start": "2907240",
    "end": "2915160"
  },
  {
    "text": "in our random bits we can use the high order bits and use them to perform whatever permutation we've picked some simple things we picked um things like",
    "start": "2915160",
    "end": "2924400"
  },
  {
    "text": "um rotations and um and shifts but you can do you can do other things too and",
    "start": "2924400",
    "end": "2931760"
  },
  {
    "text": "that's kind of a neat a neat idea and this is this idea of a applying permutations in general and in",
    "start": "2931760",
    "end": "2937319"
  },
  {
    "text": "particular these particular cool kinds of permutations is what underlies this family that I produced which is the PCG",
    "start": "2937319",
    "end": "2944200"
  },
  {
    "text": "family which stands for permuted line congren generator and so in the PCG family we",
    "start": "2944200",
    "end": "2950480"
  },
  {
    "text": "just start with the base theine conrant generator because it has lots of cool properties all the things like Jump",
    "start": "2950480",
    "end": "2955599"
  },
  {
    "text": "Ahead compact size Etc almost all pretty good and then we just add that little extra magic of some permutation stuff on",
    "start": "2955599",
    "end": "2963520"
  },
  {
    "text": "the end potentially with that permutation we're also dropping some stuff dropping some bits",
    "start": "2963520",
    "end": "2969640"
  },
  {
    "text": "which means that the permutation can actually be hard to in we can get a k to1 transformation that's hard to invert",
    "start": "2969640",
    "end": "2975160"
  },
  {
    "text": "because you you don't know what the what the bits you lost were so that's what that's what happens",
    "start": "2975160",
    "end": "2981160"
  },
  {
    "text": "with the PCG PCG family you could be you could just do a random shift or a random rotate that that gives you some stuff",
    "start": "2981160",
    "end": "2987040"
  },
  {
    "text": "but we can combine them we can stack one p one per mutation at top another and do even better so that's the sort of theory",
    "start": "2987040",
    "end": "2994920"
  },
  {
    "text": "but what about the practice how how well do these things actually perform in practice well we're going to begin by",
    "start": "2994920",
    "end": "3002680"
  },
  {
    "text": "thinking about predictable 32-bit generators now for everything in this on",
    "start": "3002680",
    "end": "3008359"
  },
  {
    "text": "this thing except for the m and twister only has 32 bits of State just four bytes of State tiny tiny amount of",
    "start": "3008359",
    "end": "3014720"
  },
  {
    "text": "state and we were asking it to produce 32 bits of output so it cannot hide",
    "start": "3014720",
    "end": "3020720"
  },
  {
    "text": "anything it can't throw anything away by definition you have to be able to all of its permut must be invertible you can",
    "start": "3020720",
    "end": "3026599"
  },
  {
    "text": "get back to the state andless You can predict them so they are going to be predictable um and they're going to be",
    "start": "3026599",
    "end": "3033680"
  },
  {
    "text": "small so how how do these do well in terms of speed you can see there that um",
    "start": "3033680",
    "end": "3040040"
  },
  {
    "text": "this is in gigabits per second and the PCG the P this this particular PCG one",
    "start": "3040040",
    "end": "3045200"
  },
  {
    "text": "which Stacks three permutations together is actually um would happily saturate 30",
    "start": "3045200",
    "end": "3051599"
  },
  {
    "text": "gbit ethernet lines which is kind of cool 30 gbits um per second which is which is pretty neat",
    "start": "3051599",
    "end": "3058640"
  },
  {
    "text": "and what about statistical quality because that's something else we said we we should care about um well these ones",
    "start": "3058640",
    "end": "3064839"
  },
  {
    "text": "on the on the right hand side um they they fail small crush and the",
    "start": "3064839",
    "end": "3071079"
  },
  {
    "text": "ones on the right hand side they pass small Crush um which is which is cool remember it's a tiny tiny generator so",
    "start": "3071079",
    "end": "3077280"
  },
  {
    "text": "we already said that you couldn't possibly pass Big Crush without with fewer than 36 bits so we can't expect we",
    "start": "3077280",
    "end": "3082960"
  },
  {
    "text": "can't expect um with the the 32-bit generator to pass Big Crush but it does",
    "start": "3082960",
    "end": "3088160"
  },
  {
    "text": "pass small crush which is good and so does the Mosen twister it's much Huger it doesn't pass Big Crush either but for",
    "start": "3088160",
    "end": "3094079"
  },
  {
    "text": "No No Good Reason really um so that's that's a a thing what we might say what",
    "start": "3094079",
    "end": "3101680"
  },
  {
    "text": "about Big Crush though how big do you have to get to pass Big Crush well we know we know that the Mozan twister",
    "start": "3101680",
    "end": "3108839"
  },
  {
    "text": "doesn't pass Big Crush we know that even though you can change the size of EXO shift no matter how big we make it it it",
    "start": "3108839",
    "end": "3114480"
  },
  {
    "text": "never passes that that that test we know that exos shift we said that that actually did pass if I",
    "start": "3114480",
    "end": "3121680"
  },
  {
    "text": "keep the top 32 bits throw away the low eight bits that passes so what if what",
    "start": "3121680",
    "end": "3127079"
  },
  {
    "text": "if the PCG generator how does that how does that do well that one passes at 36",
    "start": "3127079",
    "end": "3132839"
  },
  {
    "text": "bits which is really really cool and so that's so we've got something that's",
    "start": "3132839",
    "end": "3138119"
  },
  {
    "text": "both fast and statistically really really good and so that's that's kind of",
    "start": "3138119",
    "end": "3144240"
  },
  {
    "text": "cool unfortunately though this this one because it returns all of its statee is well the the 32-bit one not the 36-bit",
    "start": "3144240",
    "end": "3151359"
  },
  {
    "text": "one is returning all of its state that's predictable um I should also show you",
    "start": "3151359",
    "end": "3157040"
  },
  {
    "text": "how minad does because it's kind of fascinating mined is just a linear congruential generator and so you might",
    "start": "3157040",
    "end": "3164000"
  },
  {
    "text": "feel be like wait a minute I know it wouldn't pass statistical test but surely it should be faster because it's not doing these permutation things that",
    "start": "3164000",
    "end": "3170359"
  },
  {
    "text": "the PCG ones doing so how on Earth could PCG be faster than the concurenti",
    "start": "3170359",
    "end": "3175599"
  },
  {
    "text": "generator that doesn't make any sense well the the answer to that is minad",
    "start": "3175599",
    "end": "3181760"
  },
  {
    "text": "actually includes a modulus by a prime in it and that means we're doing a division operation and that's slow and",
    "start": "3181760",
    "end": "3187400"
  },
  {
    "text": "so we could do all these permutations in the time that it takes easily unless time it takes to do the division what's your impation uh this in in C and",
    "start": "3187400",
    "end": "3196079"
  },
  {
    "text": "C++ and I could like people have implemented",
    "start": "3196079",
    "end": "3201280"
  },
  {
    "text": "them in other languages but yes this is um we hope we'd hope that these would be",
    "start": "3201280",
    "end": "3206319"
  },
  {
    "text": "would be F if you go to 64-bit predictable generators again we're giving all 64 bits as of our output you",
    "start": "3206319",
    "end": "3213400"
  },
  {
    "text": "might again you can you can see that the graphs look almost identical from across these things and EXO shift we know",
    "start": "3213400",
    "end": "3220960"
  },
  {
    "text": "that's going to fail sta statistical tests we also know that the m and twister fail statistical tests as well",
    "start": "3220960",
    "end": "3227280"
  },
  {
    "text": "um but you might be surprised given everything we just said previously about it passing at 40 bits that EXO shift",
    "start": "3227280",
    "end": "3232760"
  },
  {
    "text": "Star fails at 64 bits as well that's that's because I'm using 64 bits of",
    "start": "3232760",
    "end": "3237799"
  },
  {
    "text": "state and I'm asking for it to give me all 64 bits of its state and those lower bits in exos shift star are still not",
    "start": "3237799",
    "end": "3244720"
  },
  {
    "text": "very good so it you can't you can't just return can't just return those so",
    "start": "3244720",
    "end": "3252440"
  },
  {
    "text": "um if we go if we go to a point where we start dropping some bits this isn't a",
    "start": "3252440",
    "end": "3258200"
  },
  {
    "text": "harder to predict ones the last last slide of performance stuff you can um",
    "start": "3258200",
    "end": "3265720"
  },
  {
    "text": "you can see here that the um exos shift is again not doing very",
    "start": "3265720",
    "end": "3273440"
  },
  {
    "text": "well in terms of performance either either its speed or its um it statistical goodness and these other",
    "start": "3273440",
    "end": "3281440"
  },
  {
    "text": "these other ones are are doing a bit better they these are all past statistical tests um I've added a new",
    "start": "3281440",
    "end": "3287319"
  },
  {
    "text": "one onto the onto the list I've added Arc for a random which is its whole",
    "start": "3287319",
    "end": "3292680"
  },
  {
    "text": "reason for being is to be hard to predict it's a it's a cryptographically secure random number generator and so it",
    "start": "3292680",
    "end": "3298640"
  },
  {
    "text": "works really really hard to do lots and lots and lots of scrambling to be really sure that nobody could possibly back",
    "start": "3298640",
    "end": "3304880"
  },
  {
    "text": "back the thing out of course all that amount of scrambling that it does makes it really really much much slower than",
    "start": "3304880",
    "end": "3310559"
  },
  {
    "text": "everything else and it's not clear that you need to do that much even though",
    "start": "3310559",
    "end": "3315760"
  },
  {
    "text": "like I wouldn't say that that this that the PCG one that's hard to predict is the is the most hard to predict PCG one",
    "start": "3315760",
    "end": "3322280"
  },
  {
    "text": "there are ones that are quite hard to predict that don't try nearly as hard as AR random does but if you're doing cryptography maybe you want to over",
    "start": "3322280",
    "end": "3328559"
  },
  {
    "text": "engineer things a bit also AR for random is kind of old there's there's a new one called CH 20 that people quite like and",
    "start": "3328559",
    "end": "3334599"
  },
  {
    "text": "that runs about twice as fast as ar4 random so that's good for a cryptographically secure generator that",
    "start": "3334599",
    "end": "3341319"
  },
  {
    "text": "people happy with but um it's still kind of still kind of slow and actually the",
    "start": "3341319",
    "end": "3346680"
  },
  {
    "text": "statistical properties of those ones are not as well understood as some of the other ones so that's a little bit about",
    "start": "3346680",
    "end": "3352839"
  },
  {
    "text": "the performance of things and if you want to know more about things you can go to PCG random.org there is a paper",
    "start": "3352839",
    "end": "3360200"
  },
  {
    "text": "there is code and most importantly there is part there are party tricks and one of the things I haven't talked about at",
    "start": "3360200",
    "end": "3365960"
  },
  {
    "text": "all is an extension technique using the permutation stuff that allows you to extend the period pretty much",
    "start": "3365960",
    "end": "3371520"
  },
  {
    "text": "arbitrarily on a on a base generator and so we can go to if you love really really huge generators that have massive",
    "start": "3371520",
    "end": "3377400"
  },
  {
    "text": "numb massive bits of State um you can you can totally have that and there's a",
    "start": "3377400",
    "end": "3382520"
  },
  {
    "text": "property called K dimensional equ distribution which means that every tup occurs the same number of times you can have that too and with that you can",
    "start": "3382520",
    "end": "3389359"
  },
  {
    "text": "actually have crazy things like generators that have insanely huge periods but also um you can set them up",
    "start": "3389359",
    "end": "3396799"
  },
  {
    "text": "so that they're just on the verge of spitting out a zip file that contains Shakespeare which is kind of a crazy A",
    "start": "3396799",
    "end": "3403960"
  },
  {
    "text": "crazy thing to do it's kind of fun um and I'm going to finish up as my last thing to do so we did fun stuff with",
    "start": "3403960",
    "end": "3410559"
  },
  {
    "text": "permutations we you might remember we had those awful drawings that made linear congruential generators look bad",
    "start": "3410559",
    "end": "3416000"
  },
  {
    "text": "I thought it would be only fair to try to make my stuff look bad so what I'm going to do is I'm going to try to",
    "start": "3416000",
    "end": "3421359"
  },
  {
    "text": "improve about the worst possible random number generator you could possibly imagine by applying one of these",
    "start": "3421359",
    "end": "3426599"
  },
  {
    "text": "permutations so this is the add one 16bit random number generator I think you'd agree that this is not very random",
    "start": "3426599",
    "end": "3432880"
  },
  {
    "text": "to start with and this is horribly mean to my permutation techniques because",
    "start": "3432880",
    "end": "3438559"
  },
  {
    "text": "they they they expect the top bits to be the most random they're they're the least random when you're adding one they",
    "start": "3438559",
    "end": "3444319"
  },
  {
    "text": "hardly ever change so this is really horrible um so what does it look like well that's what it looks like I think",
    "start": "3444319",
    "end": "3450720"
  },
  {
    "text": "it's I think it's kind of kind of fun so that was and if we go to a slightly",
    "start": "3450720",
    "end": "3456400"
  },
  {
    "text": "different number is adding three that's that's what that looks like and if we go",
    "start": "3456400",
    "end": "3461960"
  },
  {
    "text": "to um adding five that's what that looks like that was that was the one where",
    "start": "3461960",
    "end": "3467200"
  },
  {
    "text": "it's doing a a random rotation um and it's kind of it's kind of cute it looks",
    "start": "3467200",
    "end": "3472480"
  },
  {
    "text": "pretty fractal the there was that other one that could pass at 36 bits well if I take the one where we add five it's",
    "start": "3472480",
    "end": "3478440"
  },
  {
    "text": "going to look a little bit better but it's still we're still being really mean to it because it's expecting the top bits to be the most random they're",
    "start": "3478440",
    "end": "3483559"
  },
  {
    "text": "totally not and so it's kind of got a bit of to it it still looks pretty awful",
    "start": "3483559",
    "end": "3488640"
  },
  {
    "text": "but if we just take the thing and instead of adding five at a number that's actually going to change the high order bits um that permutation gives you",
    "start": "3488640",
    "end": "3496039"
  },
  {
    "text": "an idea of how powerful the per that permutation is that if we just we're not really using a properly near congruential generator we're just adding",
    "start": "3496039",
    "end": "3502079"
  },
  {
    "text": "a constant but it still looks pretty good looks pretty random and so these",
    "start": "3502079",
    "end": "3507880"
  },
  {
    "text": "things sort of remind me you know that's random stuff and art and that's pretty much where we began the talk it seems",
    "start": "3507880",
    "end": "3513119"
  },
  {
    "text": "like a good place to end it so I'll just ask if there are any",
    "start": "3513119",
    "end": "3518520"
  },
  {
    "text": "questions yes yeah so when you use um like split into two parts and then use a",
    "start": "3522160",
    "end": "3528319"
  },
  {
    "text": "to generate like fa to prute B like I wonder why like stop at two like can you",
    "start": "3528319",
    "end": "3534400"
  },
  {
    "text": "use fa a of B to b a c for the next part too say again can you go back to slide",
    "start": "3534400",
    "end": "3541039"
  },
  {
    "text": "when you have like a and so you want to iteratively apply the rotation yeah or",
    "start": "3541039",
    "end": "3548079"
  },
  {
    "text": "some other permutation yeah would that increase like Randomness or so if you so",
    "start": "3548079",
    "end": "3554400"
  },
  {
    "text": "you're saying use the output of the permutation to do some other permutation in the same way that you yeah so you can",
    "start": "3554400",
    "end": "3559920"
  },
  {
    "text": "so you can I me the thing is you can stack these up right so so one of the things that you can do is you can",
    "start": "3559920",
    "end": "3565160"
  },
  {
    "text": "you can I mean you can use one thing to to change the you can you can use the",
    "start": "3565160",
    "end": "3570599"
  },
  {
    "text": "left hand side to change the right hand side and then you can have you change the right hand side you can change the right hand use the right hand side change the left hand side and so on in",
    "start": "3570599",
    "end": "3577119"
  },
  {
    "text": "fact there's a sort of um a thing a bit like that which this",
    "start": "3577119",
    "end": "3583400"
  },
  {
    "text": "might go by too quick for people to follow but um there's a thing that people say like how many bits of Randomness do you need to shuffle a deck",
    "start": "3583400",
    "end": "3589319"
  },
  {
    "text": "of cards um and they might say well I must need 50 52 factorial sort of stuff",
    "start": "3589319",
    "end": "3596480"
  },
  {
    "text": "to do 52 factorial because that's how many permutations there are the correct answer or a different answer is is none",
    "start": "3596480",
    "end": "3604079"
  },
  {
    "text": "at all um because you have a deck of cards and the state of the deck of cards",
    "start": "3604079",
    "end": "3609880"
  },
  {
    "text": "uh represent things and so you can use PCG permutations to say I'll I'll use",
    "start": "3609880",
    "end": "3615359"
  },
  {
    "text": "the front I consider the front and the back of the cards I'll look at the state of the front I'll use that to permute",
    "start": "3615359",
    "end": "3620400"
  },
  {
    "text": "the back then I'll use the state of the back to permute the front then I'll use the state the edges to permute the middle then I use the state of the",
    "start": "3620400",
    "end": "3626359"
  },
  {
    "text": "middle to permute the edges and that means that I can given a particular configuration I can Shuffle the cut deck",
    "start": "3626359",
    "end": "3631640"
  },
  {
    "text": "in a unique way that's unique to that configuration and that doesn't guarantee you that you'll go through all possible",
    "start": "3631640",
    "end": "3638000"
  },
  {
    "text": "permutations there's an extra trick that you can do on the top of that because this you can invert it so you can actually you can count through every",
    "start": "3638000",
    "end": "3643599"
  },
  {
    "text": "possible permutation in a very regular way but as you do that you count through in a regular way then you you permute it",
    "start": "3643599",
    "end": "3649480"
  },
  {
    "text": "in a unique way to some crazy combination then you permute it back counted Advance it one and you can so",
    "start": "3649480",
    "end": "3654559"
  },
  {
    "text": "can advance in a crazy way through all possible permutations in a deck of cards by doing that stacked that idea of",
    "start": "3654559",
    "end": "3660000"
  },
  {
    "text": "stacking permutations one on top of the other so so yes and in fact you know",
    "start": "3660000",
    "end": "3665039"
  },
  {
    "text": "that's that's a good thing to do the one thing that you can't do is that you can't you can't fut with a on",
    "start": "3665039",
    "end": "3672319"
  },
  {
    "text": "the when you're when you're applying it so you have to wait until you're done with that with that step because you",
    "start": "3672319",
    "end": "3677640"
  },
  {
    "text": "can't do anything that will prevent you from inverting it so you can't mess with a um in that step okay another question",
    "start": "3677640",
    "end": "3684000"
  },
  {
    "text": "yes um all the people I've heard talk about random numbers talk about the infinite stream and its statistical",
    "start": "3684000",
    "end": "3690039"
  },
  {
    "text": "properties but there're often you don't want the the whole stream you want a very small subset because you're asking",
    "start": "3690039",
    "end": "3696280"
  },
  {
    "text": "a simple thing and many years ago I was working on the Unix Fortune program which reads a file to the bottom and",
    "start": "3696280",
    "end": "3702039"
  },
  {
    "text": "chooes a random line on and I noticed that regularly it was in my login script",
    "start": "3702039",
    "end": "3707240"
  },
  {
    "text": "I would see the same handful of Fortunes over and over again and I tracked this down to a fundamental problem with",
    "start": "3707240",
    "end": "3713440"
  },
  {
    "text": "seeding around number generator because the seating process um was was just not able to find",
    "start": "3713440",
    "end": "3720119"
  },
  {
    "text": "a random place in this actually fit stream and we've tried everything we",
    "start": "3720119",
    "end": "3726799"
  },
  {
    "text": "could think of and there were amazing spikes I mean you get you're supposed to get a Pome distribution for the pieces you get out but there were spikes out",
    "start": "3726799",
    "end": "3733359"
  },
  {
    "text": "here like this and the only way to get them to come down at all was after you seed to run for a million or two million",
    "start": "3733359",
    "end": "3739599"
  },
  {
    "text": "iterations and see if you can get somewhere but it was totally empirical and I've never had actually try to",
    "start": "3739599",
    "end": "3745440"
  },
  {
    "text": "investigate the problem of seeding gener so is the seeding people have investigated the the question of seeding",
    "start": "3745440",
    "end": "3751000"
  },
  {
    "text": "we sort of like all lighted it because we said you know people were doing seating back back in the day when they",
    "start": "3751000",
    "end": "3756279"
  },
  {
    "text": "had these these books and so we sort of didn't spend a lot of time thinking about um how you do seating but there",
    "start": "3756279",
    "end": "3762000"
  },
  {
    "text": "are ways there are ways to to get decent entropy and I would love I would love I",
    "start": "3762000",
    "end": "3767279"
  },
  {
    "text": "could give I could give a whole separate different talk on how if you want this",
    "start": "3767279",
    "end": "3772319"
  },
  {
    "text": "is this is about deterministic generation and there are there are way and I'm happy to chat to you afterwards",
    "start": "3772319",
    "end": "3777799"
  },
  {
    "text": "but there are some ways to guarantee and some so actually surpris I'm actually going to tease people with a just",
    "start": "3777799",
    "end": "3784520"
  },
  {
    "text": "because I can tease people with a thing that I can I can actually show you a program that takes no input at",
    "start": "3784520",
    "end": "3791079"
  },
  {
    "text": "all and produces a different value every time you run it that is actually",
    "start": "3791079",
    "end": "3798160"
  },
  {
    "text": "statistically random and the and when I and when I when I show that to people",
    "start": "3798160",
    "end": "3803839"
  },
  {
    "text": "it's always a really interesting conversation because I they're like oh cool okay so does it does it look at the",
    "start": "3803839",
    "end": "3809000"
  },
  {
    "text": "time then I'm like no it takes no input and they're like oh okay cool does it go out on the web no it takes no input",
    "start": "3809000",
    "end": "3818000"
  },
  {
    "text": "like because people's understanding of how computers work doesn't doesn't allow the idea um that that this is this could",
    "start": "3818000",
    "end": "3825799"
  },
  {
    "text": "be possible so some of you might know how how it's done but um I'm just going to leave that as a teaser for for people",
    "start": "3825799",
    "end": "3833119"
  },
  {
    "text": "um it is it is a thing that you can you can you can write such a program um but",
    "start": "3833119",
    "end": "3838799"
  },
  {
    "text": "yeah seating seating is an interesting is an interesting thing one of the things actually in the in the Practical side of the PCG generation scheme is it",
    "start": "3838799",
    "end": "3845960"
  },
  {
    "text": "has some things to actually help you seed things well it has um things to help you do seaing well using things",
    "start": "3845960",
    "end": "3853359"
  },
  {
    "text": "like the random device to make it really really easy to do to use that it also has stuff where it can leverage um it",
    "start": "3853359",
    "end": "3860359"
  },
  {
    "text": "has something called PCG unique where depending on where the the generator is located in memory it chooses a different",
    "start": "3860359",
    "end": "3867440"
  },
  {
    "text": "stream and if you use PCG unique on a machine that has address space layout randomization actually PCG unique will",
    "start": "3867440",
    "end": "3874200"
  },
  {
    "text": "give you different numbers every time as well so um it's it is it is an important issue and",
    "start": "3874200",
    "end": "3881920"
  },
  {
    "text": "and doing it well is something that it's much nicer if the libraries that you use just have stuff that takes care of it",
    "start": "3881920",
    "end": "3887640"
  },
  {
    "text": "for you and one of the big problems with a lot of random number stuff is that people don't don't get those those um",
    "start": "3887640",
    "end": "3894160"
  },
  {
    "text": "they're just like oh just come up with a seed and and some people do it well and some people like oh just use the time or",
    "start": "3894160",
    "end": "3899799"
  },
  {
    "text": "whatever it is and it's like it doesn't that doesn't necessarily produce good results good",
    "start": "3899799",
    "end": "3905000"
  },
  {
    "text": "question or you GNA tell us how that work um no input program I'll I'll talk",
    "start": "3905000",
    "end": "3910279"
  },
  {
    "text": "to people I I'll tell people after after afterwards like the non the nonv part of the talk",
    "start": "3910279",
    "end": "3916880"
  },
  {
    "text": "um people people what the camera like so I'm terrible there it is U so people",
    "start": "3916880",
    "end": "3924119"
  },
  {
    "text": "watching on video ha so should have been here um so it is",
    "start": "3924119",
    "end": "3931559"
  },
  {
    "text": "kind of a known thing but um yes I tend to think one of these",
    "start": "3931559",
    "end": "3938039"
  },
  {
    "text": "people that has gone after a lot of super Randomness and so I've used nuclear Decay as one and I've used",
    "start": "3938039",
    "end": "3943240"
  },
  {
    "text": "thermal noise as the other but I found out that the hardware I use is not random so I mean the thing is this is",
    "start": "3943240",
    "end": "3949520"
  },
  {
    "text": "this is one of the things one of the reasons why people came out with these books originally is that you might think that the the physical world world would be great for producing Randomness but",
    "start": "3949520",
    "end": "3955680"
  },
  {
    "text": "it's actually it's actually really bad at producing sort of statistical Randomness there can be problems with the hardware and so forth and it's um",
    "start": "3955680",
    "end": "3962160"
  },
  {
    "text": "like if you get people to roll di a diet it's going to be they can introduce bias surprisingly and",
    "start": "3962160",
    "end": "3968760"
  },
  {
    "text": "um and it turns out that it's not you know it it's it's not it's not sort of",
    "start": "3968760",
    "end": "3975760"
  },
  {
    "text": "better the the other funny thing is of course you know the if you look at how much Universe how much Randomness the",
    "start": "3975760",
    "end": "3981520"
  },
  {
    "text": "universe can possibly produce it's less than than these random number generators",
    "start": "3981520",
    "end": "3986559"
  },
  {
    "text": "we we look at so um that's also kind of like a wacky a wacky thing transistors",
    "start": "3986559",
    "end": "3992039"
  },
  {
    "text": "are not random therefore gates are not random therefore computers are not random well I think that gets that gets",
    "start": "3992039",
    "end": "3998160"
  },
  {
    "text": "the definition of what what we mean by random and if you get to the point where you say if you say it's random if we if",
    "start": "3998160",
    "end": "4004599"
  },
  {
    "text": "we can have things that are match the statistics and without some kind of",
    "start": "4004599",
    "end": "4009960"
  },
  {
    "text": "omniscient view we can't predict what they're going to do I think we will agree that computers actually are pretty",
    "start": "4009960",
    "end": "4015680"
  },
  {
    "text": "random in that sense we can we can like a lot of a lot of debugging is is comes",
    "start": "4015680",
    "end": "4021240"
  },
  {
    "text": "you know is like trying to figure out what on Earth it's doing and some of those things can be can be quite",
    "start": "4021240",
    "end": "4026839"
  },
  {
    "text": "challenging um other questions yes um I was wondering about your thoughts on use of methods like this particularly in",
    "start": "4026839",
    "end": "4033279"
  },
  {
    "text": "parallel applications where you might have many different uh sequences of generators acting right so so one of the",
    "start": "4033279",
    "end": "4040559"
  },
  {
    "text": "things that you might want in a parallel in a parallel situation is you might want to have it doesn't make sense to",
    "start": "4040559",
    "end": "4045640"
  },
  {
    "text": "have a global random number generator in parallel system because it's going to become bottleneck and so that's one of the things that's a big issue for things",
    "start": "4045640",
    "end": "4051640"
  },
  {
    "text": "like the m and twisted because it's like if you just had one Global one maybe two and a half K of stage like Ah that's fine whatever but if you if you want to",
    "start": "4051640",
    "end": "4059559"
  },
  {
    "text": "have every every thread have its own random number generator then you you probably want that's that's a thing to",
    "start": "4059559",
    "end": "4065880"
  },
  {
    "text": "want you also probably want that there couldn't be bizarre coincidences where one thread happens to use a similar seed",
    "start": "4065880",
    "end": "4072720"
  },
  {
    "text": "to another one then they both happen to be producing the same portly random numbers unless you want reproducibility",
    "start": "4072720",
    "end": "4078079"
  },
  {
    "text": "if you want them to have separate things and so that's the idea that we mentioned sort of very briefly a random number",
    "start": "4078079",
    "end": "4083599"
  },
  {
    "text": "streams and so that's a property that linear congruential generators have that if you use a different additive constant",
    "start": "4083599",
    "end": "4088839"
  },
  {
    "text": "you get a different stream of completely different sequence of random numbers there still if you B them on a grid it would still look almost identical but it",
    "start": "4088839",
    "end": "4094160"
  },
  {
    "text": "is a different it is a different sequence and things built on the new congruential generators get that same",
    "start": "4094160",
    "end": "4099679"
  },
  {
    "text": "property and in fact what PCG unique does is it uses the memory address of",
    "start": "4099679",
    "end": "4104798"
  },
  {
    "text": "the state to to say okay I'll use that to work out what my additive constant is",
    "start": "4104799",
    "end": "4110238"
  },
  {
    "text": "and so every memory address is every every memory just becomes its own State",
    "start": "4110239",
    "end": "4116238"
  },
  {
    "text": "and so you can trivially give every every thread a different sequence",
    "start": "4116239",
    "end": "4121600"
  },
  {
    "text": "without any without any trouble at all and so that's that's kind of a neat a neat thing for if you're if you're working in in",
    "start": "4121600",
    "end": "4128560"
  },
  {
    "text": "parallel yes any comments about the Brandon M on the Intel CPUs",
    "start": "4128560",
    "end": "4135159"
  },
  {
    "text": "the the the interesting thing is that they use they they're supposed to be",
    "start": "4135159",
    "end": "4140359"
  },
  {
    "text": "coming out with an actual thing that uses transistor based noise but that isn't what's in there right now the ones",
    "start": "4140359",
    "end": "4145920"
  },
  {
    "text": "that are in the Intel CPUs right now is it's actually using an an algorithm that",
    "start": "4145920",
    "end": "4151000"
  },
  {
    "text": "and just like you can't see the state but the thing that's kind of sad is if you call RD Rand it's way slower than",
    "start": "4151000",
    "end": "4158480"
  },
  {
    "text": "than running many of these you know including not just the PCG but but other other things it's not it's essentially",
    "start": "4158480",
    "end": "4165359"
  },
  {
    "text": "falling back to doing stuff that's implemented in micro code and it's not it's not fast at all and so it's it's",
    "start": "4165359",
    "end": "4173040"
  },
  {
    "text": "kind of a bizarre thing that you have an instruction called Rd Rand that like produce a random number and you think",
    "start": "4173040",
    "end": "4178838"
  },
  {
    "text": "well that's a processor instruction it should be fast but it's like the these",
    "start": "4178839",
    "end": "4184440"
  },
  {
    "text": "these other random number generators can produce like PCG can generate um a random number in less than a nanc and so",
    "start": "4184440",
    "end": "4192440"
  },
  {
    "text": "that's that's really it's really cool that that you know it can do like a multiply and add and and some shifts and",
    "start": "4192440",
    "end": "4199880"
  },
  {
    "text": "stuff and in so little time and it's kind of sad that like this micro coded",
    "start": "4199880",
    "end": "4205080"
  },
  {
    "text": "instruction can't beat that but presumably the intent was not to",
    "start": "4205080",
    "end": "4210239"
  },
  {
    "text": "optimize sounds so it could be you could use Rd run as a seed yeah and you can use you",
    "start": "4210239",
    "end": "4216440"
  },
  {
    "text": "can use other things you can use you can use ID Rand you can use the time stamp counter you can you can use a bunch of things to that are probably you know",
    "start": "4216440",
    "end": "4223280"
  },
  {
    "text": "fairly fairly random but there are by the way the other thing I was not",
    "start": "4223280",
    "end": "4228840"
  },
  {
    "text": "talking about the time St counter yes give moate mean with an application that",
    "start": "4228840",
    "end": "4235080"
  },
  {
    "text": "actually benefit in a noticeable manner by using so um anything where like for any",
    "start": "4235080",
    "end": "4245040"
  },
  {
    "text": "application the the question is is random number generation going to be your bottleneck so for some things it's",
    "start": "4245040",
    "end": "4250600"
  },
  {
    "text": "absolutely not it's absolutely not a bottleneck at all but suppose for example you want to pick something",
    "start": "4250600",
    "end": "4257199"
  },
  {
    "text": "really simple like quick sword um one of the one variation of quick swort is",
    "start": "4257199",
    "end": "4262360"
  },
  {
    "text": "quick sort is a randomized algorithm where you choose the pivot at a random point",
    "start": "4262360",
    "end": "4267560"
  },
  {
    "text": "and so you can use that that variant of um of",
    "start": "4267560",
    "end": "4273679"
  },
  {
    "text": "PCG but sorry of of of quick sword but whether you would use it or",
    "start": "4273679",
    "end": "4279800"
  },
  {
    "text": "not depends on how fast you Generate random numbers because if you don't if you don't if you if it takes you a long",
    "start": "4279800",
    "end": "4285159"
  },
  {
    "text": "time you'd be better off with some other non-randomized strategy so whether a randomized algorithm is viable at all",
    "start": "4285159",
    "end": "4291280"
  },
  {
    "text": "can depend on the speed of of your random number generator and so fast ones",
    "start": "4291280",
    "end": "4296840"
  },
  {
    "text": "are are are net positive and so in that",
    "start": "4296840",
    "end": "4301920"
  },
  {
    "text": "so that's an example where whether randomized quick sort is faster is is worth using at all depends on how fast",
    "start": "4301920",
    "end": "4307840"
  },
  {
    "text": "your random number generator is and obviously it's also the case that if you go if you if you you have something",
    "start": "4307840",
    "end": "4314120"
  },
  {
    "text": "where run number generation is not really the bottleneck whether your thing takes one and a half NS or half a nanc",
    "start": "4314120",
    "end": "4321080"
  },
  {
    "text": "might make no difference at all and so that's that's an area where it might not",
    "start": "4321080",
    "end": "4326280"
  },
  {
    "text": "be better to be to be faster the cool thing about the PCG family is that it",
    "start": "4326280",
    "end": "4331840"
  },
  {
    "text": "gives pretty much no matter what you want it's there for you so it's if you",
    "start": "4331840",
    "end": "4337719"
  },
  {
    "text": "want fast it is actually really fast if you want statistic statistically good it's really statistic ically good if you",
    "start": "4337719",
    "end": "4344600"
  },
  {
    "text": "want compact it's actually really Compact and if you for some reason you really love those gigantic periods and K",
    "start": "4344600",
    "end": "4351719"
  },
  {
    "text": "dimensional equid distribution we can we've got you covered there too and if you want unpredictability we've got some",
    "start": "4351719",
    "end": "4357520"
  },
  {
    "text": "really ones that are really hard to predict um because because of the way they permute things and drop some of the",
    "start": "4357520",
    "end": "4362880"
  },
  {
    "text": "bits making the permutation really hard to undo so it's not is not easy to",
    "start": "4362880",
    "end": "4368280"
  },
  {
    "text": "predict unlike many of these these other ones so if you don't if you want hard to predict fast small small big and um",
    "start": "4368280",
    "end": "4376320"
  },
  {
    "text": "statistically good got you covered on all of those and so that's that that is",
    "start": "4376320",
    "end": "4381639"
  },
  {
    "text": "that is why a number of people are quite excited about",
    "start": "4381639",
    "end": "4386679"
  },
  {
    "text": "it any other any other questions yes so as a peration you kind of use say a",
    "start": "4386679",
    "end": "4392880"
  },
  {
    "text": "crypto block with the es instructions on the you use which instructions like the",
    "start": "4392880",
    "end": "4399760"
  },
  {
    "text": "AES instructions that so I mean that's that's another option right I mean in in",
    "start": "4399760",
    "end": "4405400"
  },
  {
    "text": "the um because they've thrown a bunch of hardware at doing AES you can you could",
    "start": "4405400",
    "end": "4411400"
  },
  {
    "text": "say well if I've got really fast AES permutations I could use those I could use those too one of the one of the",
    "start": "4411400",
    "end": "4417400"
  },
  {
    "text": "things is that the the fundamental idea in PCG is just saying well use a simple simple generator um that has some really",
    "start": "4417400",
    "end": "4424120"
  },
  {
    "text": "nice properties and then add permutations on the top here's here are some good permutations but it's not saying that that those are the only ones",
    "start": "4424120",
    "end": "4430199"
  },
  {
    "text": "that you can that you can use and so if you have a thing that does AES",
    "start": "4430199",
    "end": "4435760"
  },
  {
    "text": "permutations really really fast then that could be a good solution but the thing is the AES permutations are",
    "start": "4435760",
    "end": "4440880"
  },
  {
    "text": "designed to be really like like kind of Overkill to make it impossible that",
    "start": "4440880",
    "end": "4446040"
  },
  {
    "text": "anyone could sort of figure out what happened to the to the bits they kind of go around in crazy ways and",
    "start": "4446040",
    "end": "4452560"
  },
  {
    "text": "so it's even though there's Hardware implementations that make it make it fast part of the point of of PCG is it's",
    "start": "4452560",
    "end": "4460159"
  },
  {
    "text": "trying to do trying to get good Randomness with his little work as possible there's not there's not a lot",
    "start": "4460159",
    "end": "4465920"
  },
  {
    "text": "to be said for for having something that does more work you know you can do things that are more work than you need",
    "start": "4465920",
    "end": "4471000"
  },
  {
    "text": "but why do more work than you need you you we're trying to get as as much bang for buck in a sense",
    "start": "4471000",
    "end": "4478320"
  },
  {
    "text": "that",
    "start": "4486639",
    "end": "4489639"
  }
]