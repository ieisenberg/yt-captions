[
  {
    "start": "0",
    "end": "365000"
  },
  {
    "start": "0",
    "end": "5650"
  },
  {
    "text": "OK, so let's do a quick review\nof our previous lecture.",
    "start": "5650",
    "end": "11240"
  },
  {
    "text": "I'm going to do it on\nthe slide here because I think that the picture is a\nnice summary of where we are at.",
    "start": "11240",
    "end": "18590"
  },
  {
    "text": "So we finished--\nwe are still now in the process of developing the\nfull DSP chain for FMCW radar.",
    "start": "18590",
    "end": "27040"
  },
  {
    "text": "Where we are at\nright now is so far we have learned how to do\nrange estimation and velocity",
    "start": "27040",
    "end": "33460"
  },
  {
    "text": "estimation for FMCW\nradar and basically developed a so-called\nrange-velocity map which",
    "start": "33460",
    "end": "41050"
  },
  {
    "text": "is not the geometric map\nthat we ultimately want. But it is called a\nmap, nevertheless.",
    "start": "41050",
    "end": "48220"
  },
  {
    "text": "And this picture,\nalso for now, we are assuming a single input,\nsingle output SISO system.",
    "start": "48220",
    "end": "54400"
  },
  {
    "text": "Today we are going to\ngeneralize this to MIMO. But the way that DSP\nworks is that remember",
    "start": "54400",
    "end": "61210"
  },
  {
    "text": "we define a frame\nwhich is basically",
    "start": "61210",
    "end": "66909"
  },
  {
    "text": "a number of consecutive\nchirps that are transmitted. So we took basically--",
    "start": "66910",
    "end": "72850"
  },
  {
    "text": "we take m chirps and call\nthat a frame of data.",
    "start": "72850",
    "end": "79229"
  },
  {
    "text": " And this is\nessentially like what",
    "start": "79230",
    "end": "85880"
  },
  {
    "text": "makes a frame is entirely\nup to whoever is developing the DSP to define that.",
    "start": "85880",
    "end": "92060"
  },
  {
    "text": "It's just a mathematical\nconstruction of you take a number of chirps,\nand then you call that a frame.",
    "start": "92060",
    "end": "99950"
  },
  {
    "text": "And then here we are basically-- this picture shows how we\nprocess one frame of data",
    "start": "99950",
    "end": "107659"
  },
  {
    "text": "that we have collected. So a frame has m\nchirps, and each chirp,",
    "start": "107660",
    "end": "113120"
  },
  {
    "text": "or actually the down-converted\nversion of each chirps after mixing the received echo\nwith the transmitted waveform",
    "start": "113120",
    "end": "121220"
  },
  {
    "text": "and passing it through the\nADC, each chirps would have n samples-- ",
    "start": "121220",
    "end": "128740"
  },
  {
    "text": "n complex samples. So one frame of\ndata, overall, we",
    "start": "128740",
    "end": "133990"
  },
  {
    "text": "can think of it or we\ncan rearrange it as a m by n data matrix.",
    "start": "133990",
    "end": "140049"
  },
  {
    "text": "And this is all in DSP. So that's a raw data\nmatrix-- one frame. And so horizontal axis,\nwe can think of it",
    "start": "140050",
    "end": "147850"
  },
  {
    "text": "as index N, which\nis the ADC samples. And vertically, so each row\nis one down-converted chirp.",
    "start": "147850",
    "end": "156340"
  },
  {
    "text": "So the row index gives\nyou the chirp index, and then the column index gives\nyou the ADC sample number.",
    "start": "156340",
    "end": "163269"
  },
  {
    "text": "OK, and so our IF\nsignals, we denote them by two indices, m and n And the\nrange and Doppler processing,",
    "start": "163270",
    "end": "171700"
  },
  {
    "text": "it's very simple. So it's basically two\nFourier transforms.",
    "start": "171700",
    "end": "177110"
  },
  {
    "text": "You can first do it row-wise. You can do them in\nany order, really. It doesn't matter.",
    "start": "177110",
    "end": "182480"
  },
  {
    "text": "But usually we first do\nthe range processing. So you take the FFT of each\nrow, and that converts basically",
    "start": "182480",
    "end": "190990"
  },
  {
    "text": "your ADC samples index\nand to arrange index K.",
    "start": "190990",
    "end": "196330"
  },
  {
    "text": "And that FFT output, we\ncall them or we denote them as R-tildes.",
    "start": "196330",
    "end": "202120"
  },
  {
    "text": "So R-tilde of K\nbasically would have, if you plot basically\nthe magnitude",
    "start": "202120",
    "end": "208900"
  },
  {
    "text": "of each row at this point,\nthey would show peaks at K indices that correspond\nto the range of the targets",
    "start": "208900",
    "end": "218500"
  },
  {
    "text": "that we received echos from. So that's the range\nprocessing step.",
    "start": "218500",
    "end": "223760"
  },
  {
    "text": "And then for Doppler\nprocessing, we do another set of Fourier\ntransforms, this time",
    "start": "223760",
    "end": "230050"
  },
  {
    "text": "on the columns of this. So we FFT each column. And then at the output,\nthe final output,",
    "start": "230050",
    "end": "237129"
  },
  {
    "text": "what that second\nFFT does for us, it basically converts the chirp\nindex m to a Doppler shift",
    "start": "237130",
    "end": "243130"
  },
  {
    "text": "index L. And the\noutput of the FFTs, we denoted them as\nD-tildes, D-tilde of L.",
    "start": "243130",
    "end": "249610"
  },
  {
    "text": "So these D-tildes, if you look\nat the magnitude of those, would show peaks at indices\nthat correspond to the Doppler",
    "start": "249610",
    "end": "257230"
  },
  {
    "text": "shift of individual targets. So because the two\nare multiplied, so you see what we get out\nis R-tilde of K times D-tilde",
    "start": "257230",
    "end": "268880"
  },
  {
    "text": "of L. The two are multiplied. So if you look at this basically\nprocessed data matrix now,",
    "start": "268880",
    "end": "276380"
  },
  {
    "text": "or if you look at\nthe amplitude of it because it's complex value,\nyou take the absolute value of each cell basically.",
    "start": "276380",
    "end": "283139"
  },
  {
    "text": "And now we get what we\ncall a range-velocity map.",
    "start": "283140",
    "end": "288350"
  },
  {
    "text": "And if you visualize\nit as a-- you can visualize it as a heat\nmap or you can visualize it as a 3D surface plot.",
    "start": "288350",
    "end": "296030"
  },
  {
    "text": "But what's important about it\nis that just by looking at it, you can very clearly\nidentify where",
    "start": "296030",
    "end": "304100"
  },
  {
    "text": "you have targets\nin the scene, not in terms of the angle of\narrival yet but in terms",
    "start": "304100",
    "end": "309470"
  },
  {
    "text": "of range and velocity. So wherever you have peaks\nin this range-Doppler map",
    "start": "309470",
    "end": "315020"
  },
  {
    "text": "like this, and here,\nit color corresponds to the magnitude of\nthe processed data.",
    "start": "315020",
    "end": "321979"
  },
  {
    "text": "So where you have basically\nhot zones or peaks, those are targets. So here we have a moving target\nat, say, 20 meters and maybe--",
    "start": "321980",
    "end": "332750"
  },
  {
    "text": "I'm just guessing\nthe numbers-- maybe minus 20 meters per second\nor something like that. And then you have a bunch\nof stationary targets",
    "start": "332750",
    "end": "340430"
  },
  {
    "text": "at different ranges and\nall at zero velocity. So that's how we\ndo the processing.",
    "start": "340430",
    "end": "346850"
  },
  {
    "text": "Again, the two steps, the\ntwo Fourier transforms, there's different\nways you can do them.",
    "start": "346850",
    "end": "352790"
  },
  {
    "text": "You can either do them as\nindividual one-dimensional Fourier transforms. You can do them in any order.",
    "start": "352790",
    "end": "357890"
  },
  {
    "text": "Or you can combine the two and\njust do a 2D Fourier transform. Mathematically, these are all\nbasically the same operation.",
    "start": "357890",
    "end": "365639"
  },
  {
    "start": "365000",
    "end": "625000"
  },
  {
    "text": "So you can also\nbasically summarize it in just a few basically\nfunctional steps.",
    "start": "365640",
    "end": "374010"
  },
  {
    "text": "So, again, you take\none frame of data. You accumulate IF signals\nin an m by n matrix.",
    "start": "374010",
    "end": "380750"
  },
  {
    "text": "And then you do a 2D\nFourier transform. So this is now combined\nrange and Doppler processing.",
    "start": "380750",
    "end": "386419"
  },
  {
    "text": "You get what we call\nthe big SIF of L and K. So now remember, L is\nthe index for Doppler.",
    "start": "386420",
    "end": "392450"
  },
  {
    "text": "K is the index for range. And then you look at the\nmagnitude of S, the processed",
    "start": "392450",
    "end": "399590"
  },
  {
    "text": "S, and do a 2D peak search. And that gives you basically\nrange and velocity.",
    "start": "399590",
    "end": "406729"
  },
  {
    "text": "Of course, you need\nto convert the indices to the physical range and\nthe physical velocity, and that's just scaling\nthat we have seen before.",
    "start": "406730",
    "end": "414000"
  },
  {
    "text": "And here is a visualization. In this case, the\nrange-velocity map, instead of visualizing it\nas a 2D heat map or image,",
    "start": "414000",
    "end": "422960"
  },
  {
    "text": "we are plotting the\nfull 3D surface. So now the height is\nbasically the absolute value",
    "start": "422960",
    "end": "428750"
  },
  {
    "text": "or the magnitude of this\nbasically output of the 2D FFT. And just by looking at it, in\nthis case, it's very clear.",
    "start": "428750",
    "end": "435590"
  },
  {
    "text": "You can just see two peaks,\nand that means two targets. But usually in reality,\nit's much noisier than this.",
    "start": "435590",
    "end": "443000"
  },
  {
    "text": "And you can have many,\nmany targets in the scene. So then we started talking about\nthis idea of target detection.",
    "start": "443000",
    "end": "452930"
  },
  {
    "text": "So target detection, what we\nare doing with it is basically",
    "start": "452930",
    "end": "459789"
  },
  {
    "text": "after processing for\nrange and Doppler, we want to identify\nwhich combinations",
    "start": "459790",
    "end": "467290"
  },
  {
    "text": "or which range and\nDoppler indices have actual target in them because,\nas we see here, most of it",
    "start": "467290",
    "end": "472570"
  },
  {
    "text": "is just noise. There's nothing\nhere, nothing here. There's just really two targets.",
    "start": "472570",
    "end": "477580"
  },
  {
    "text": "And the simplest thing\nyou can do is, as we said, just a fixed threshold. You just set a threshold value.",
    "start": "477580",
    "end": "483820"
  },
  {
    "text": "You say, OK, anything\nhigher than, say 30, dB, I'm going to declare\nthat as a target.",
    "start": "483820",
    "end": "490330"
  },
  {
    "text": "In simple cases, that\nworks reasonably. But in reality, it's not\na very effective technique",
    "start": "490330",
    "end": "497500"
  },
  {
    "text": "because, as we said, your\nnoise can vary over time. There can be interferences\nthat shift the noise floor,",
    "start": "497500",
    "end": "504580"
  },
  {
    "text": "so you need a more\nrobust technique. And then we started\ntalking about this idea",
    "start": "504580",
    "end": "509800"
  },
  {
    "text": "of constant false alarm\nrate or CFAR thresholding. And what CFAR thresholding\neffectively does,",
    "start": "509800",
    "end": "516370"
  },
  {
    "text": "and we'll look at\nthe math today, is instead of a fixed global\nthreshold, you basically,",
    "start": "516370",
    "end": "522429"
  },
  {
    "text": "per cell, and what I mean by\na cell is for each K and L,",
    "start": "522429",
    "end": "528070"
  },
  {
    "text": "you calculate a threshold\nthat corresponds to that cell.",
    "start": "528070",
    "end": "533380"
  },
  {
    "text": "And then you compare the value\nof your processed range-Doppler map at each combination of\nK and L to the threshold",
    "start": "533380",
    "end": "541180"
  },
  {
    "text": "that you calculated\nwith CFAR for that cell. If it's above it, you\nsay there's a target. If it's below it, you\nsay that's just noise.",
    "start": "541180",
    "end": "548290"
  },
  {
    "text": "And the idea of\nCFAR here is, if I look at just 2D slice of this,\nso as a function of, say,",
    "start": "548290",
    "end": "556990"
  },
  {
    "text": "range, if I plot this\nwhere there is a target, so it's mostly noise.",
    "start": "556990",
    "end": "562307"
  },
  {
    "text": "And then there's one peak,\nand then there is also noise. So the idea of CFAR basically\nis-- it's very simple.",
    "start": "562307",
    "end": "567920"
  },
  {
    "text": "It's like so for each\ncell, let's say where there is actually a target. If you want to\ncalculate a threshold,",
    "start": "567920",
    "end": "574839"
  },
  {
    "text": "just exclude a few\nsamples around it. And that's called a\nguard band, basically.",
    "start": "574840",
    "end": "581320"
  },
  {
    "text": "And then for some small\nwindow outside that guard, average the sample's outside.",
    "start": "581320",
    "end": "588450"
  },
  {
    "text": "And the idea is, because\nthe range-Doppler map, as you see here, is typically\nsparse, if you do this,",
    "start": "588450",
    "end": "595560"
  },
  {
    "text": "if there's real target in\nthe cell under test, what's outside there is just noise.",
    "start": "595560",
    "end": "600930"
  },
  {
    "text": "And you average those\ncells, and that gives you an idea of noise floor.",
    "start": "600930",
    "end": "606090"
  },
  {
    "text": "And then you can use\nthat or a scaled version of that to set a threshold\nfor your cell under test.",
    "start": "606090",
    "end": "611910"
  },
  {
    "text": "That's basically the\nidea of CFAR, which we'll look at in more detail today.",
    "start": "611910",
    "end": "617100"
  },
  {
    "text": "But any questions\nbefore we continue? Is this idea of range-Doppler\nprocessing clear?",
    "start": "617100",
    "end": "624000"
  },
  {
    "text": "OK, so let's just\nstart looking at CFAR. So first we look at the 1D case,\nand then we extend it to 2D.",
    "start": "624000",
    "end": "632490"
  },
  {
    "start": "625000",
    "end": "659000"
  },
  {
    "text": "So, again, in 1d case,\nwe just have one index. Let's say N. And then for every N,\nfor a given signal,",
    "start": "632490",
    "end": "640230"
  },
  {
    "text": "you want to calculate\na threshold. So we call N the\ncell under test.",
    "start": "640230",
    "end": "647860"
  },
  {
    "text": "And then there's three\nparameters associated with the CFAR algorithm. There's NG which is the\nnumber of guard cells.",
    "start": "647860",
    "end": "654570"
  },
  {
    "text": "There's NT which is\nnumber of training sets. And then there is\na gain factor beta. And what you do is very,\nvery simple, actually.",
    "start": "654570",
    "end": "662200"
  },
  {
    "start": "659000",
    "end": "736000"
  },
  {
    "text": "So what you do is, here,\nlet's look at the picture. So this is your 1d signal.",
    "start": "662200",
    "end": "667350"
  },
  {
    "text": "So each square here is\none sample of your signal. And then you have\nthis green cell.",
    "start": "667350",
    "end": "672819"
  },
  {
    "text": "This is the cell under test. So we are here calculating\nthe CFAR threshold value for this green cell.",
    "start": "672820",
    "end": "679740"
  },
  {
    "text": "As I said, what you\ndo is that you first exclude a number of\nguard cells on each side.",
    "start": "679740",
    "end": "686200"
  },
  {
    "text": "So here we have\nchosen NG equals-- --just ignore the yellow cells. And then outside\nthat, on each side,",
    "start": "686200",
    "end": "693630"
  },
  {
    "text": "you take NT, which is the\nnumber of training sets.",
    "start": "693630",
    "end": "698640"
  },
  {
    "text": "We have chosen that to\nbe four, in this case. And you average all the blue-- the values of all\nthe blue cells.",
    "start": "698640",
    "end": "704550"
  },
  {
    "text": "So you have this\naveraging block. Just feed it all the\ntraining cell values. And that output, you\ncan also scale it",
    "start": "704550",
    "end": "711960"
  },
  {
    "text": "by some scale factor beta. Beta is just a number. And that gives you\nthe CFAR threshold",
    "start": "711960",
    "end": "717940"
  },
  {
    "text": "at the cell under test. And then and then you move that. So then you do it\nfor the next cell,",
    "start": "717940",
    "end": "723150"
  },
  {
    "text": "and then you do it\nfor the next level. So this entire window\nbasically shifts. And then you would calculate,\nbasically, a per cell threshold",
    "start": "723150",
    "end": "731279"
  },
  {
    "text": "for the entire signal vector. So visually, this is a\ncomparison of fixed versus CFAR",
    "start": "731280",
    "end": "741690"
  },
  {
    "start": "736000",
    "end": "895000"
  },
  {
    "text": "thresholding. Let's look at the\ntop picture first. So here we are looking at one\nslice of the processed signal",
    "start": "741690",
    "end": "750390"
  },
  {
    "text": "after range-Doppler processing. So that's the 1D case. So as a function of N,\nthe blue is our signal.",
    "start": "750390",
    "end": "757019"
  },
  {
    "text": "And then it has three\nvery large peaks. Those are real targets. Those are the true positives\nthat we want to detect.",
    "start": "757020",
    "end": "763800"
  },
  {
    "text": "And everything\nelse is the noise. If you use a fixed threshold,\nand that's this red line here,",
    "start": "763800",
    "end": "769830"
  },
  {
    "text": "as you see, you can\ndetect the true positives. But also there's this little\nguy here, which is a noise peak.",
    "start": "769830",
    "end": "779130"
  },
  {
    "text": "And that, if your\nfixed threshold is low, it can basically\nstick above the noise.",
    "start": "779130",
    "end": "785070"
  },
  {
    "text": "And that, you would\nalso detect that as a target, which would\nbe a false positive. Now let's look at\nthe bottom picture.",
    "start": "785070",
    "end": "791500"
  },
  {
    "text": "And that's what CFAR would\ndo for the same signal. So here the red is this, the\nthe per cell CFAR threshold",
    "start": "791500",
    "end": "800520"
  },
  {
    "text": "that we have calculated. And we have chosen\nfive, basically,",
    "start": "800520",
    "end": "807840"
  },
  {
    "text": "number of guard cells. And training sets is 20,\nand the scale factor is six.",
    "start": "807840",
    "end": "813390"
  },
  {
    "text": "And now, if you look\nat the CFAR threshold, it has this very\ninteresting behavior that where you have a large\npeak, just outside it,",
    "start": "813390",
    "end": "820200"
  },
  {
    "text": "it will go up. And that's because,\nat some point, this peak would make it\ninto the training cells.",
    "start": "820200",
    "end": "826380"
  },
  {
    "text": "And that basically biases\nthe value of the CFAR. But if I zoom in, where\nthe actual peaks are,",
    "start": "826380",
    "end": "832080"
  },
  {
    "text": "the CFAR threshold\nis actually pretty close to our fixed threshold. The slighter blue is\nour old fixed threshold.",
    "start": "832080",
    "end": "839130"
  },
  {
    "text": "So it does a good job of\ndetecting the true positives. And also if you look\nat this noise guy,",
    "start": "839130",
    "end": "844920"
  },
  {
    "text": "it doesn't make it above\nthe CFAR threshold. So it also does a good job of\nrejecting the false positive.",
    "start": "844920",
    "end": "852670"
  },
  {
    "text": "Now you might ask,\nOK, but how did you come up with these numbers,\nlike the five, 20, and the six?",
    "start": "852670",
    "end": "857850"
  },
  {
    "text": "And there is\ndifferent techniques. But usually you collect\na few data sets,",
    "start": "857850",
    "end": "865440"
  },
  {
    "text": "and you kind of try\ndifferent values on them and tune these\nparameters until you",
    "start": "865440",
    "end": "871770"
  },
  {
    "text": "get satisfactory\nfalse positive rates and then just use\nthem in the field.",
    "start": "871770",
    "end": "877800"
  },
  {
    "text": "So that's usually\nhow it is done. In a very\nstraightforward manner,",
    "start": "877800",
    "end": "883230"
  },
  {
    "text": "you can extend this\nto two dimensions. You can do the exact same\nthing because, remember, our range-Doppler process\nsignal is a 2D signal.",
    "start": "883230",
    "end": "891420"
  },
  {
    "text": "So you can do 2D, or you can\nactually do N-dimensional CFAR. It's the same idea. So in 2D-- here's a picture.",
    "start": "891420",
    "end": "898410"
  },
  {
    "text": "Ignore the math for now. Let's just look at the picture. So now you have this\n2D, basically, signal.",
    "start": "898410",
    "end": "905250"
  },
  {
    "text": "Could be the magnitude of our\nrange-Doppler process signal. And then, again,\nyou have a guard--",
    "start": "905250",
    "end": "910380"
  },
  {
    "text": "You have a basically\ncell of interest.",
    "start": "910380",
    "end": "917730"
  },
  {
    "text": "And then you define some\nnumber of guard cells. So you exclude\nyellows outside that.",
    "start": "917730",
    "end": "926970"
  },
  {
    "text": "And then you have some\nnumber of training cells. So you basically, for\neach cell under test,",
    "start": "926970",
    "end": "932790"
  },
  {
    "text": "you average all the blue cells\nand scale the average by beta.",
    "start": "932790",
    "end": "939310"
  },
  {
    "text": "And that would give you the CFAR\nthreshold value for that cell. And then you do\nthat for every cell.",
    "start": "939310",
    "end": "945140"
  },
  {
    "text": "So you just shift\nit and shift it until you cover the\nentire 2D signal.",
    "start": "945140",
    "end": "950170"
  },
  {
    "text": "The math above, I mean, it\nkind of looks complicated, but it's really nothing. So beta is just\nyour scale factor.",
    "start": "950170",
    "end": "956949"
  },
  {
    "text": "This big expression down\nhere really just all that is, is the number\nof training sets.",
    "start": "956950",
    "end": "964959"
  },
  {
    "text": "That really is what it is.  I mean, it's in\nterms of NG and BT.",
    "start": "964960",
    "end": "971880"
  },
  {
    "text": "But really that's just-- so that's one over\nthe number of training cells times the sum of your\nsignal over all training cells.",
    "start": "971880",
    "end": "978360"
  },
  {
    "text": "So this would give\nyou the average. This term is the average\nover the training cells--",
    "start": "978360",
    "end": "986672"
  },
  {
    "text": "average of your signal\nover the training cells. And then you multiply by beta. That's your scaling factor. And it gives you\nyour CFAR threshold.",
    "start": "986672",
    "end": "993910"
  },
  {
    "text": "So that's how you do 2D,\nand you can extend it to ND. You can even make it asymmetric.",
    "start": "993910",
    "end": "1000310"
  },
  {
    "text": "If you need more guard cells\nvertically than horizontally, you can have 2D--",
    "start": "1000310",
    "end": "1005640"
  },
  {
    "text": "I mean, you can make all\nsorts of variations of this. But this is the core idea. And if you look\nat the literature,",
    "start": "1005640",
    "end": "1011380"
  },
  {
    "text": "there's 10 different\nversions of CFAR. There's CFAR Cals. CFAR this, CFAR that. But they're all\nlittle variations",
    "start": "1011380",
    "end": "1018660"
  },
  {
    "text": "of this basically basic idea. Now so with this, this\nwould work much better",
    "start": "1018660",
    "end": "1027359"
  },
  {
    "text": "than applying a fixed threshold. And if you do this with\ncorrectly tuned parameters",
    "start": "1027359",
    "end": "1033480"
  },
  {
    "text": "on, the magnitude of\nyour range-velocity map,",
    "start": "1033480",
    "end": "1038760"
  },
  {
    "text": "it would nicely detect\nthe targets for you. Yes? About the last slide--",
    "start": "1038760",
    "end": "1044970"
  },
  {
    "text": "Previous one? This? Yeah. [INAUDIBLE] For example, if\nI have multiple peaks that are really close to each other,\nthen can CFAR detect that?",
    "start": "1044970",
    "end": "1054600"
  },
  {
    "text": "Yeah, that's a great question. So if you have multiple,\nso if these three peaks were closely packed.",
    "start": "1054600",
    "end": "1061140"
  },
  {
    "text": "So I'm going to\njust sketch it here. So if I had something like\na peak and another peak",
    "start": "1061140",
    "end": "1066750"
  },
  {
    "text": "and another peak and another\npeak, what would CFAR do? If you tune it right,\nit can handle that.",
    "start": "1066750",
    "end": "1073320"
  },
  {
    "text": "So with that, what\nthat means is that you want to increase probably\nyour NG number of guard cells.",
    "start": "1073320",
    "end": "1079590"
  },
  {
    "text": "So that can then\nhandle wider collect-- a peak that is very wide\nor a collection of peaks",
    "start": "1079590",
    "end": "1085440"
  },
  {
    "text": "that are very tightly packed. But again, the CFAR is,\nat the end of the day,",
    "start": "1085440",
    "end": "1091660"
  },
  {
    "text": "it's not the best\nalgorithm out there. It's pretty good. It can do much, much better\nthan fixed threshold.",
    "start": "1091660",
    "end": "1097500"
  },
  {
    "text": "But I mean, these\nalgorithms are-- again, really everything\nwe talk about here,",
    "start": "1097500",
    "end": "1103230"
  },
  {
    "text": "we are talking about the most\nbasic thing that you can do, which is very\nmathematically efficient.",
    "start": "1103230",
    "end": "1109380"
  },
  {
    "text": "But these days, if you think\nin terms of modern algorithms, you can come up with much\nbetter algorithms to do this.",
    "start": "1109380",
    "end": "1117840"
  },
  {
    "text": "You can even think, I\nmean, go down the path of learned algorithms like--",
    "start": "1117840",
    "end": "1123930"
  },
  {
    "text": "I don't know-- train a neural\nnetwork that does this for you. And that would be like CFAR\nby, I'm sure, a wide margin.",
    "start": "1123930",
    "end": "1132030"
  },
  {
    "text": "So I mean, yes, there is\ndefinitely corner cases where CFAR can fail.",
    "start": "1132030",
    "end": "1137580"
  },
  {
    "text": "It's not a perfect algorithm. But today it's widely used,\nand it's very efficient.",
    "start": "1137580",
    "end": "1143040"
  },
  {
    "text": "But, again, everything\nwe talk about, especially for radar,\njust give-- take these as,",
    "start": "1143040",
    "end": "1149505"
  },
  {
    "text": "not this is how it should\ndefinitely be done. This is one way of doing it. It's the simplest thing.",
    "start": "1149505",
    "end": "1154740"
  },
  {
    "text": "It's what is being done today. But always think of,\nespecially if you have more compute resources\nat your disposal on the system",
    "start": "1154740",
    "end": "1161669"
  },
  {
    "text": "you're working with,\nyou should absolutely do more sophisticated,\nbetter algorithms.",
    "start": "1161670",
    "end": "1166890"
  },
  {
    "text": "There's no way to, just because\nwe talked about CFAR here, always do that. OK, so that's CFAR.",
    "start": "1166890",
    "end": "1174600"
  },
  {
    "start": "1173000",
    "end": "1232000"
  },
  {
    "text": "So where are we now? So, so far from-- and CFAR, by the way,\nthis target detection,",
    "start": "1174600",
    "end": "1181950"
  },
  {
    "text": "this is completely independent\nof like, is it PMCW radar? Is it FMC?",
    "start": "1181950",
    "end": "1187290"
  },
  {
    "text": "What waveform was\nused does not matter because at the end of the day,\nyou do your range and Doppler processing.",
    "start": "1187290",
    "end": "1192900"
  },
  {
    "text": "You produce these\nrange-Doppler-- or range-velocity map. And then this idea of target\ndetection would work on.",
    "start": "1192900",
    "end": "1199950"
  },
  {
    "text": "It doesn't care what the\nactual underlying waveform was. OK so we can do--",
    "start": "1199950",
    "end": "1205950"
  },
  {
    "text": "estimate range. We can estimate velocity. We can detect targets. And by detection, I mean we\ncan find range and velocity",
    "start": "1205950",
    "end": "1214679"
  },
  {
    "text": "combinations that we\nare very confident there is a real target there. The last step is,\nhow do we determine",
    "start": "1214680",
    "end": "1221490"
  },
  {
    "text": "the angle of the\ntarget or the direction of arrival or the bearing\nor the angle of arrival? There's different terms.",
    "start": "1221490",
    "end": "1226740"
  },
  {
    "text": "In radar, it's mostly called\nDOA, or direction of arrival. So that's the last step.",
    "start": "1226740",
    "end": "1233500"
  },
  {
    "start": "1232000",
    "end": "1274000"
  },
  {
    "text": "So it's the last DSP step. And if we do that, after we do\nangle of arrival estimation,",
    "start": "1233500",
    "end": "1240750"
  },
  {
    "text": "then we can basically completely\nlocalize our targets in 3D",
    "start": "1240750",
    "end": "1248520"
  },
  {
    "text": "because we know the range. We know the theta was the\nazimuth angle, let's say. Phi is the elevation angle.",
    "start": "1248520",
    "end": "1254830"
  },
  {
    "text": "So every target,\nwe can completely localize where it\nis in the 3D space. And that means you can basically\nproduce the so-called radar",
    "start": "1254830",
    "end": "1263490"
  },
  {
    "text": "image which could be\n3D or a 2D point cloud. So that's the ultimate map\nthat we want to produce.",
    "start": "1263490",
    "end": "1271929"
  },
  {
    "text": "And this is the last step. So when it comes\nto DOA estimation, there's two main approaches.",
    "start": "1271930",
    "end": "1278920"
  },
  {
    "start": "1274000",
    "end": "1423000"
  },
  {
    "text": "One is, if you have a\nhighly-directional antenna,",
    "start": "1278920",
    "end": "1284880"
  },
  {
    "text": "and by a\nhighly-directional antenna, I mean an antenna with\na gain pattern that is very narrow and focused.",
    "start": "1284880",
    "end": "1290760"
  },
  {
    "text": "If you have that, then you can\nmechanically scan the antenna. You can always\nassume, the direction",
    "start": "1290760",
    "end": "1296929"
  },
  {
    "text": "I'm pointing the antenna,\nif I detect anything, that direction is\nthe DOA of my target",
    "start": "1296930",
    "end": "1303350"
  },
  {
    "text": "because my beam is very focused. So you just mechanically\nscan the antenna.",
    "start": "1303350",
    "end": "1308450"
  },
  {
    "text": "And by the angle\nyou're pointing, that tells you the\nDOA of the target. So that's one.",
    "start": "1308450",
    "end": "1314720"
  },
  {
    "text": "But, again, you have to have\na highly-directional antenna. That's very important.",
    "start": "1314720",
    "end": "1320240"
  },
  {
    "text": "Or if you don't have a\nhighly-directional antenna, what you can do is,\nif you build a MIMO",
    "start": "1320240",
    "end": "1326179"
  },
  {
    "text": "array with multiple transmitter\nand multiple receiver antenna, you can use a\nnumber of techniques",
    "start": "1326180",
    "end": "1331610"
  },
  {
    "text": "which are collectively called\nbeamforming techniques. And that would\nbasically enable you",
    "start": "1331610",
    "end": "1337460"
  },
  {
    "text": "to determine the direction\nof arrival of the target. What beamforming\ntechniques effectively do",
    "start": "1337460",
    "end": "1343550"
  },
  {
    "text": "is that, electronically, they\nwould kind of do the same thing",
    "start": "1343550",
    "end": "1349880"
  },
  {
    "text": "that mechanical scanning\ndoes with a very narrow beam. So, electronically,\nthey basically change the basically beam\npattern or the radiation",
    "start": "1349880",
    "end": "1360559"
  },
  {
    "text": "pattern of either your\ntransmitter or your receiver such that you can\neffectively search the space",
    "start": "1360560",
    "end": "1366770"
  },
  {
    "text": "and find where the target is. So that's generally what\nbeamforming techniques do.",
    "start": "1366770",
    "end": "1372630"
  },
  {
    "text": "And when it comes to\nautonomous robotics, pretty much only beamforming\nmethods are used.",
    "start": "1372630",
    "end": "1381200"
  },
  {
    "text": "The mechanical scanning isn't\nused, for obvious reasons. Because to have\nhighly-directional antenna,",
    "start": "1381200",
    "end": "1388130"
  },
  {
    "text": "these are physically very large. You need these big dish\nantennas or things like that. And then they also need to\nmechanically rotate and scan",
    "start": "1388130",
    "end": "1396140"
  },
  {
    "text": "the scene. So they're big. They're not very robust\nfor robotic applications.",
    "start": "1396140",
    "end": "1402920"
  },
  {
    "text": "It's just not the\nright fit for those. For other applications,\nmechanical scanning",
    "start": "1402920",
    "end": "1408830"
  },
  {
    "text": "is widely used. So for instance, for aviation,\nyou go to the airports.",
    "start": "1408830",
    "end": "1414200"
  },
  {
    "text": "You see these parabolic antennas\non the side of the runways that are rotating. That's exactly\nwhat they're doing.",
    "start": "1414200",
    "end": "1420750"
  },
  {
    "text": "They're mechanically\nscanning for DOA/ OK, so what to expect.",
    "start": "1420750",
    "end": "1426200"
  },
  {
    "start": "1423000",
    "end": "1601000"
  },
  {
    "text": "These are just\nsome pictures to-- so at the end of the\nday, if we do all this. We do range processing,\nDoppler processing.",
    "start": "1426200",
    "end": "1432169"
  },
  {
    "text": "We detect the targets. We detect the DOA. And then we visualize\nall these targets",
    "start": "1432170",
    "end": "1437810"
  },
  {
    "text": "in the form of a point cloud. What can we expect\nfrom, let's say, a state-of-the-art radar today?",
    "start": "1437810",
    "end": "1443700"
  },
  {
    "text": "So in terms of the\nDOA resolution, better than one degree\nis achievable today.",
    "start": "1443700",
    "end": "1450320"
  },
  {
    "text": "I've seen radars coding\nas low as 0.4 degrees.",
    "start": "1450320",
    "end": "1456230"
  },
  {
    "text": "And here are two examples. One is a 3D map\nproduced by a radar.",
    "start": "1456230",
    "end": "1462530"
  },
  {
    "text": "So here on the right,\nyou see a, basically, a picture of the scene.",
    "start": "1462530",
    "end": "1468860"
  },
  {
    "text": "So this white-blue car, that's\nwhere the radar was mounted. Actually, this is the\nradar, looking at the scene.",
    "start": "1468860",
    "end": "1476510"
  },
  {
    "text": "And there were two\npedestrians, marked by 1 and 2. There was a row of cars\nhere and some other things.",
    "start": "1476510",
    "end": "1483270"
  },
  {
    "text": "And then on the left, you see\nthe 3D radar image or the point cloud or the map\nthat was produced.",
    "start": "1483270",
    "end": "1490410"
  },
  {
    "text": "So you see the two\npedestrians here. This is stuff here. That's the row of cars.",
    "start": "1490410",
    "end": "1496250"
  },
  {
    "text": "And that's basically\nthe quality of the map. This one that we\nare looking at here,",
    "start": "1496250",
    "end": "1502650"
  },
  {
    "text": "I think the resolution is\nabout one degree in azimuth",
    "start": "1502650",
    "end": "1507740"
  },
  {
    "text": "and 1.5 degrees in elevation. And that's the quality\nof the point cloud that you can get from it.",
    "start": "1507740",
    "end": "1515720"
  },
  {
    "text": "This one on the left-- on the right, this is a\n2D point cloud of a radar.",
    "start": "1515720",
    "end": "1522870"
  },
  {
    "text": "So this was also\nmounted on a car. And this is-- from\nthe driver view,",
    "start": "1522870",
    "end": "1528590"
  },
  {
    "text": "this is the camera\nimage of the car. It was driving on\nthe highway, so you see that the road boundaries.",
    "start": "1528590",
    "end": "1534649"
  },
  {
    "text": "And the things that are numbered\nhere, a few of them are cars. There's one, two,\nthree, four cars.",
    "start": "1534650",
    "end": "1540380"
  },
  {
    "text": "This one is a big\nroad sign and a tree. And then the point\ncloud, this is 2D.",
    "start": "1540380",
    "end": "1546470"
  },
  {
    "text": "So we are showing it\nlike a bird's eye view, top-down view of the road. So this is the road, basically,\nas seen from the top.",
    "start": "1546470",
    "end": "1555510"
  },
  {
    "text": "The ego vehicle was\nkind of down here. And the visualization\nhere is interesting",
    "start": "1555510",
    "end": "1561470"
  },
  {
    "text": "because they have also\nused velocity information to color the point cloud, which\nis a very useful thing to do.",
    "start": "1561470",
    "end": "1568290"
  },
  {
    "text": "So things that were moving\nin the scene like the cars, they're colored in yellow. So they easily--\nyou can see them.",
    "start": "1568290",
    "end": "1574885"
  },
  {
    "text": "So that's-- there\nare three cars. It actually sees beyond\nthe ones immediately in front of the car.",
    "start": "1574885",
    "end": "1580490"
  },
  {
    "text": "So there was another car\nhere, another car out there. That's the incoming car on\nthe other side of the road.",
    "start": "1580490",
    "end": "1586230"
  },
  {
    "text": "So that's that guy. You get the big tree. All the vegetation on\nthe side is obvious,",
    "start": "1586230",
    "end": "1592330"
  },
  {
    "text": "and then that's probably\nthe big road sign. So this is kind of\nqualitatively gives you",
    "start": "1592330",
    "end": "1598480"
  },
  {
    "text": "an idea of what to expect. And these are pretty much\nstate-of-the-art in terms",
    "start": "1598480",
    "end": "1605230"
  },
  {
    "text": "of what's doable today\nfor autonomy applications.",
    "start": "1605230",
    "end": "1611150"
  },
  {
    "text": "Here's another one. Again, this is one of the best\n3D or 4D radars out there.",
    "start": "1611150",
    "end": "1620659"
  },
  {
    "text": "Same idea. So picture on the right, that's\naerial view of the scene where",
    "start": "1620660",
    "end": "1626620"
  },
  {
    "text": "the point cloud was captured. So that's the ego vehicle where\nthe radar was mounted on this.",
    "start": "1626620",
    "end": "1631750"
  },
  {
    "text": "It was driving on the road. And this one box in\nblue, that's a car that",
    "start": "1631750",
    "end": "1637570"
  },
  {
    "text": "was driving in front of them. And then on the right,\nyou see the radar image.",
    "start": "1637570",
    "end": "1644140"
  },
  {
    "text": "I think, for this one, they\nused more than one radar because they are also\nseeing behind the car.",
    "start": "1644140",
    "end": "1649240"
  },
  {
    "text": "So it was probably\nfour radars mounted on the four sides\nof the car so they",
    "start": "1649240",
    "end": "1654610"
  },
  {
    "text": "can cover full 360 degrees. But it's pretty impressive,\nI think, for a radar.",
    "start": "1654610",
    "end": "1659900"
  },
  {
    "text": "I mean, you clearly\nsee the trees. That's the road. And then the choice of\ncolors is not great,",
    "start": "1659900",
    "end": "1667690"
  },
  {
    "text": "but this purpley\nthing is the car that was driving in front of them. Again, very\nqualitatively give you",
    "start": "1667690",
    "end": "1674440"
  },
  {
    "text": "an idea of what you\ncan expect from this. Of course, not every radar\nwould be this high resolution.",
    "start": "1674440",
    "end": "1681309"
  },
  {
    "text": "I mean, these have\nvery big MIMO arrays. The one here had 48\ntransmitters, 48 receivers.",
    "start": "1681310",
    "end": "1689320"
  },
  {
    "text": "So very large MIMO array, and\nthat helped them to, basically, with beamforming\ntechniques, achieve",
    "start": "1689320",
    "end": "1694720"
  },
  {
    "text": "this quality of a point cloud. So let's see how\nbeamforming works.",
    "start": "1694720",
    "end": "1700790"
  },
  {
    "start": "1697000",
    "end": "1764000"
  },
  {
    "text": "So, again, just to\nsummarize, there is mechanical scanning\nversus beamforming. Mechanical scanning\nwe are not going",
    "start": "1700790",
    "end": "1706840"
  },
  {
    "text": "to talk about because those\nare not used for autonomy. But here's an example. You have a dish antenna with a\nvery highly-directional beam.",
    "start": "1706840",
    "end": "1714580"
  },
  {
    "text": "It hits a target. And basically the angle that you\nwere aiming, so the theta-phi",
    "start": "1714580",
    "end": "1721730"
  },
  {
    "text": "that you were aiming, that\ntells you the DOA of the target. So there is no DSP,\nbasically, when it",
    "start": "1721730",
    "end": "1727700"
  },
  {
    "text": "comes to mechanical scanning. You just read back where\nthe antenna was pointing to and call that the\nDOA of the target.",
    "start": "1727700",
    "end": "1734330"
  },
  {
    "text": "Versus an beamforming, you\nuse a MIMO antenna array. The one shown here has two\ntransmitters, six receivers.",
    "start": "1734330",
    "end": "1740780"
  },
  {
    "text": "The antennas do not need\nto be directional at all. Actually, in theory, they\ncan even be isotropic.",
    "start": "1740780",
    "end": "1748039"
  },
  {
    "text": "Physically isotropic\nis not possible, but they can be as close\nas isotropic as you want.",
    "start": "1748040",
    "end": "1753450"
  },
  {
    "text": "And then with\nbeamforming techniques, we basically electronically\nsearch the space",
    "start": "1753450",
    "end": "1758750"
  },
  {
    "text": "and find what the DOA of the\ntarget is, as we'll see today. Now, as I said, beamforming\nis a collection of techniques.",
    "start": "1758750",
    "end": "1768110"
  },
  {
    "start": "1764000",
    "end": "1943000"
  },
  {
    "text": "And broadly, they can be\ncategorized to two, basically, types of beamforming.",
    "start": "1768110",
    "end": "1774559"
  },
  {
    "text": "First one is the so-called\nactive transmitter beamforming. And in short, it's called TXBF.",
    "start": "1774560",
    "end": "1780710"
  },
  {
    "text": "Also called, commonly, phased\narray radar or electronic beam steering.",
    "start": "1780710",
    "end": "1786720"
  },
  {
    "text": "So what active transmitter\nbeamforming does, basically, is that it uses\nmultiple transmitter antennas.",
    "start": "1786720",
    "end": "1795140"
  },
  {
    "text": "And then it controls the\nphase of the signal that is being fed to these antennas.",
    "start": "1795140",
    "end": "1800720"
  },
  {
    "text": "And by controlling\nthat relative phase, effectively it can generate\na very narrow focus beam",
    "start": "1800720",
    "end": "1807290"
  },
  {
    "text": "and scan it in the\nspace exactly as if you were\nmechanically scanning",
    "start": "1807290",
    "end": "1812990"
  },
  {
    "text": "a highly-directional antenna. I think perhaps, if you look\nat a little illustration of it,",
    "start": "1812990",
    "end": "1820490"
  },
  {
    "text": "it's more clear. So this is from Wikipedia. So what is done here--",
    "start": "1820490",
    "end": "1826309"
  },
  {
    "text": "I don't have a cursor, so\nI'll go on the projector. So you have multiple\ntransmit antennas.",
    "start": "1826310",
    "end": "1833450"
  },
  {
    "text": "And here, they are assuming\nthe antennas are isotropic. You see, if you look\nat each antenna, the waveform coming\nout is a spherical.",
    "start": "1833450",
    "end": "1840890"
  },
  {
    "text": "But they are basically\napplying a phase shift.",
    "start": "1840890",
    "end": "1845930"
  },
  {
    "text": "And the notation\nhere is not perfect. But what phi is, is the\ndelta phase between every two",
    "start": "1845930",
    "end": "1852320"
  },
  {
    "text": "consecutive antenna. So you can think\nof the first one as the reference,\nthe zero phase. And this one would be phi.",
    "start": "1852320",
    "end": "1858110"
  },
  {
    "text": "This one would be 2phi,\n3-, 4-, 5-, 6-, 7phi. So it's like a linear\nphase difference.",
    "start": "1858110",
    "end": "1864350"
  },
  {
    "text": "And you can think of a\nphase as a little time delay also that is being applied. So there's this\ncontroller that controls",
    "start": "1864350",
    "end": "1871010"
  },
  {
    "text": "the phase of the signals before\nbeing fed to the antennas. And by controlling that\nas you see, each of them",
    "start": "1871010",
    "end": "1877730"
  },
  {
    "text": "is just transmitting\nspherical waves. But effectively, if you look\nat the wavefronts at far field,",
    "start": "1877730",
    "end": "1884240"
  },
  {
    "text": "they're like a\nplane wave that is pointing to a direction theta. And by changing phi,\nyou can basically",
    "start": "1884240",
    "end": "1890960"
  },
  {
    "text": "electronically scan the angle-- or the effective angle of\nthe overall transmitted beam.",
    "start": "1890960",
    "end": "1898370"
  },
  {
    "text": "So active transmitter\nbeamforming effectively scans the beam for you as if\nyou had a directional antenna",
    "start": "1898370",
    "end": "1905880"
  },
  {
    "text": "with physical scanning. Here's another very\ninteresting picture. It is showing-- so this here,\nif you read the description,",
    "start": "1905880",
    "end": "1913380"
  },
  {
    "text": "it says face array of 15\nantenna elements spaced quarter wavelength apart as\nthe phase difference",
    "start": "1913380",
    "end": "1919549"
  },
  {
    "text": "between adjacent antennas\nis swept between minus 120 degrees and plus 120 degrees.",
    "start": "1919550",
    "end": "1926720"
  },
  {
    "text": "And that is effectively\nscanning your beam for you with almost a full 180 degrees.",
    "start": "1926720",
    "end": "1934910"
  },
  {
    "text": "And this is a\none-dimensional scanning. You can do 2D if your\nantenna elements are placed",
    "start": "1934910",
    "end": "1941570"
  },
  {
    "text": "in a 2D array, basically. So that's the idea of\nactive transmit beamforming.",
    "start": "1941570",
    "end": "1947120"
  },
  {
    "start": "1943000",
    "end": "2151000"
  },
  {
    "text": "And then the second type\nof beamforming techniques is the so-called digital\nreceiver beamforming or DBF.",
    "start": "1947120",
    "end": "1954860"
  },
  {
    "text": "Digital receiver beamforming\nis basically here you use multiple\nreceiver antennas",
    "start": "1954860",
    "end": "1960950"
  },
  {
    "text": "and jointly process\nthe signals that you get from the receive antennas. And by some clever DSP, you\neffectively, in algorithms,",
    "start": "1960950",
    "end": "1970850"
  },
  {
    "text": "in DSP, search the space to find\nwhat the direction of arrival",
    "start": "1970850",
    "end": "1976010"
  },
  {
    "text": "of the target is. So if you compare the\ntwo, it's very interesting",
    "start": "1976010",
    "end": "1981710"
  },
  {
    "text": "because in the act of\ntransmit beamforming, it adds complexity\nto the hardware.",
    "start": "1981710",
    "end": "1986720"
  },
  {
    "text": "You need these phase controllers\nfor every transmitter antenna. And then you need to accurately\napply time-varying phase shifts",
    "start": "1986720",
    "end": "1995539"
  },
  {
    "text": "to them. Versus the digital\nreceiver beamforming, there is no hardware complexity.",
    "start": "1995540",
    "end": "2001480"
  },
  {
    "text": "You just need an\narray of antennas, and the complexity goes to\nyour algorithms instead.",
    "start": "2001480",
    "end": "2006630"
  },
  {
    "text": "So that's the trade-off. On one hand, you have\nsimpler algorithms, more complex hardware. For DBF, you have\nsimple hardware",
    "start": "2006630",
    "end": "2014230"
  },
  {
    "text": "but more complex algorithms\nand math that you can do. And almost always, when\nyou read such a trade-off,",
    "start": "2014230",
    "end": "2023170"
  },
  {
    "text": "the best decision is to go\nwith the solution which makes your algorithms more complex.",
    "start": "2023170",
    "end": "2028900"
  },
  {
    "text": "Why? Well, first of all, as we\nknow, compute day-by-day is becoming more\ncapable and cheaper.",
    "start": "2028900",
    "end": "2037160"
  },
  {
    "text": "So it's just from that point\nof view, if cost is a concern,",
    "start": "2037160",
    "end": "2042460"
  },
  {
    "text": "it's always a good idea to\nmake your hardware simpler and make your\nalgorithms more complex.",
    "start": "2042460",
    "end": "2047830"
  },
  {
    "text": "But also more importantly,\nif you go down the path of go with the complexity\nin the algorithms,",
    "start": "2047830",
    "end": "2055870"
  },
  {
    "text": "after you, say, you\nship your hardware, you can keep improving it\nby just software updates.",
    "start": "2055870",
    "end": "2064239"
  },
  {
    "text": "You can just, a few\nmonths down the road, you come up with a better algorithm. You implement it.",
    "start": "2064239",
    "end": "2069699"
  },
  {
    "text": "You deploy it. And that sensor becomes better. Versus if you go\nwith the one that",
    "start": "2069699",
    "end": "2075158"
  },
  {
    "text": "is kind of like the\ncomplexity is in the hardware, it is what it is. After you ship\nit, that hardware,",
    "start": "2075159",
    "end": "2081820"
  },
  {
    "text": "forever, is going to be what\nit is until you actually change the hardware, build a new one.",
    "start": "2081820",
    "end": "2086980"
  },
  {
    "text": "You can't really, in\nalgorithms, do much about it. So with these types\nof trade-offs,",
    "start": "2086980",
    "end": "2092138"
  },
  {
    "text": "I'm a big advocate\nof go down the path of the so-called\nsoftware-definedness.",
    "start": "2092139",
    "end": "2102340"
  },
  {
    "text": "That's the industry\nterm, basically. However, both of these are\nused in robotic autonomy.",
    "start": "2102340",
    "end": "2110559"
  },
  {
    "text": "DBF is, of course, for\nthe reasons I said, is much more common. But both are used.",
    "start": "2110560",
    "end": "2116260"
  },
  {
    "text": "And off-the-shelf hardware\nusually has support for both. It does support active\ntransmit beamforming and DBF.",
    "start": "2116260",
    "end": "2125170"
  },
  {
    "text": "We are going to talk a lot about\nthis because, again, that's the most widely used,\nmost interesting thing.",
    "start": "2125170",
    "end": "2132730"
  },
  {
    "text": "And it's just a space where\nyou can, for years to come,",
    "start": "2132730",
    "end": "2138170"
  },
  {
    "text": "you can keep coming\nup with new ideas and improving the\nsensor performance just",
    "start": "2138170",
    "end": "2144309"
  },
  {
    "text": "by better algorithms. OK, so we are going to\nstart talking about DBF.",
    "start": "2144310",
    "end": "2151420"
  },
  {
    "start": "2151000",
    "end": "2212000"
  },
  {
    "text": "But just before that,\nhere's one more picture of a very big phased\narray antenna that is used",
    "start": "2151420",
    "end": "2160180"
  },
  {
    "text": "for some military application. I think this one might be\nan early warning system",
    "start": "2160180",
    "end": "2165280"
  },
  {
    "text": "or something like that. So this one, I mean, it has\nmany, many, many antenna elements.",
    "start": "2165280",
    "end": "2170590"
  },
  {
    "text": "Actually, each of\nthese little squares that you see here,\nif you zoom in, you get this, which itself has\na big 2D array of antennas.",
    "start": "2170590",
    "end": "2180040"
  },
  {
    "text": "So it's a huge,\nhuge phased array. And then they can do very\naccurate active transmit beamforming.",
    "start": "2180040",
    "end": "2186130"
  },
  {
    "text": "So phased array is very commonly\nused in military applications like the--",
    "start": "2186130",
    "end": "2192790"
  },
  {
    "text": "very, very beautiful examples--\nlike the F-35 fighter jets. They have this super\nadvanced phase array antenna",
    "start": "2192790",
    "end": "2200230"
  },
  {
    "text": "in the nose of the airplane,\nwhich can give them very",
    "start": "2200230",
    "end": "2205810"
  },
  {
    "text": "accurate radar DOA resolution. OK, but the topic of\ndiscussion for today",
    "start": "2205810",
    "end": "2213340"
  },
  {
    "start": "2212000",
    "end": "2537000"
  },
  {
    "text": "is digital receiver\nbeamforming or DBF.",
    "start": "2213340",
    "end": "2218410"
  },
  {
    "text": "So, again, this is the\nidea where you just use multiple receiver antennas.",
    "start": "2218410",
    "end": "2225040"
  },
  {
    "text": "With some clever DSP, you\ncan find a DOA of the target. So before we can talk about\nthe algorithm, as usual,",
    "start": "2225040",
    "end": "2233359"
  },
  {
    "text": "we need to build a signal model. What is a signal model\nthat we can work with?",
    "start": "2233360",
    "end": "2239269"
  },
  {
    "text": "So to build a signal model\nwe make a few assumptions.",
    "start": "2239270",
    "end": "2245690"
  },
  {
    "text": "So we assume, for\nnow, one pair of TX/RX",
    "start": "2245690",
    "end": "2252339"
  },
  {
    "text": "antennas and located at\nR-prime TX and R-prime RX. So the R-primes are the position\nof the TX and the RX antennas",
    "start": "2252340",
    "end": "2261610"
  },
  {
    "text": "correspondingly. And let's assume there's one\ntarget at the DOA angle theta.",
    "start": "2261610",
    "end": "2270280"
  },
  {
    "text": "And we assume that the\ntarget is in the far field.",
    "start": "2270280",
    "end": "2275450"
  },
  {
    "text": "So with that assumption that\nthe target is far field, so let's look at the\npicture down here. So the blue is our\ntransmit antenna,",
    "start": "2275450",
    "end": "2281920"
  },
  {
    "text": "Red Is the receive antenna. And assume the target\nis way out there. So I'm going to just put\na dot at the corner here.",
    "start": "2281920",
    "end": "2288440"
  },
  {
    "text": "So that's the target that these\nguys are kind of looking at. If the target as far\naway, as we know,",
    "start": "2288440",
    "end": "2294560"
  },
  {
    "text": "we can assume that the fields\nthat basically hit the target and echo back, we\ncan approximate them",
    "start": "2294560",
    "end": "2301150"
  },
  {
    "text": "very well with plane waves. So the transmitted wave, so\nthat's the blue one here,",
    "start": "2301150",
    "end": "2308650"
  },
  {
    "text": "we can write that as a plane\nwave which the direction is",
    "start": "2308650",
    "end": "2313960"
  },
  {
    "text": "going to be determined by the\nK vector of that plane wave. We call that KTX.",
    "start": "2313960",
    "end": "2319270"
  },
  {
    "text": "And it's going to point\ntowards the target. So the target that has\nsum DPA theta, so our K is pointing at angle\ntheta to the right.",
    "start": "2319270",
    "end": "2330190"
  },
  {
    "text": "And the field that\nwe are transmitting is given by this\nexpression here. Let me clean it up.",
    "start": "2330190",
    "end": "2338320"
  },
  {
    "text": "It's e to the minus\nJKTX, R-prime TX. So this is the field at the\ntransmit antenna times ST of T.",
    "start": "2338320",
    "end": "2347770"
  },
  {
    "text": "What is ST? That's our, basically,\ntransmitted waveform. If it's an FMCW radar,\nwe know the SST.",
    "start": "2347770",
    "end": "2356799"
  },
  {
    "text": "For FMCW, it's going to\nbe our e to the J, 2pi,",
    "start": "2356800",
    "end": "2362502"
  },
  {
    "text": "FC plus [INAUDIBLE] times T\nover to T. That's for FMCW.",
    "start": "2362502",
    "end": "2369160"
  },
  {
    "text": "If it's PMCW, you put the\nPMCW waveform in there. But it doesn't-- what's nice is\nit doesn't matter for this part",
    "start": "2369160",
    "end": "2375130"
  },
  {
    "text": "of the algorithm. Whatever waveform you use,\nthe DBF will work for it. This is the plane wave.",
    "start": "2375130",
    "end": "2381280"
  },
  {
    "text": "Remember, e to the minus JK\ndot R defines a plane wave that",
    "start": "2381280",
    "end": "2388440"
  },
  {
    "text": "travels in the direction\nof the K vector and has planar phase runs.",
    "start": "2388440",
    "end": "2394950"
  },
  {
    "text": "What about the echoed back\nfield at the receive antenna? That's also a plane wave\ngiven by this expression--",
    "start": "2394950",
    "end": "2401640"
  },
  {
    "text": "e to the minus JKRX\ntimes inner product with the position\nof the RX antenna",
    "start": "2401640",
    "end": "2407940"
  },
  {
    "text": "times the received waveform,\nwhich, as you know, is attenuated, delayed\nversion of the transmitter.",
    "start": "2407940",
    "end": "2416010"
  },
  {
    "text": "What's important\nhere is that if you look at this picture, the two\nplane waves, the one that we",
    "start": "2416010",
    "end": "2421410"
  },
  {
    "text": "transmit and the\none that we receive, they're exactly in\nopposite directions if the target is far away.",
    "start": "2421410",
    "end": "2426730"
  },
  {
    "text": "So our KRX is minus KTX. That's an important\nassumption in the algorithms",
    "start": "2426730",
    "end": "2433800"
  },
  {
    "text": "that we will develop. Is this clear, the setup?",
    "start": "2433800",
    "end": "2438880"
  },
  {
    "text": "OK, so now what\nwe can look at is that if this is the field\nat the transmit antenna,",
    "start": "2438880",
    "end": "2444790"
  },
  {
    "text": "and this is the field\nat the receive antenna, so as you know-- I'm going to clean\nthings up a little",
    "start": "2444790",
    "end": "2452109"
  },
  {
    "text": "here, so it doesn't\nget too busy. And as you know, we talked\na lot about these two parts",
    "start": "2452110",
    "end": "2462150"
  },
  {
    "text": "of the signal, the temporal\npart or the waveform part of it that is transmitted\nand received.",
    "start": "2462150",
    "end": "2468450"
  },
  {
    "text": "And we said from these, after\nmix them down together, you get-- this gives you\nthis SIF of T, which",
    "start": "2468450",
    "end": "2478200"
  },
  {
    "text": "is used for range and Doppler\nestimation or velocity estimation.",
    "start": "2478200",
    "end": "2484000"
  },
  {
    "text": "And it has a frequency component\nwhich gives us the range. And the phase of it\ngives us Doppler.",
    "start": "2484000",
    "end": "2490380"
  },
  {
    "text": "That's the\nrange-Doppler processing we've already talked about. Now we are looking\nat this part, which",
    "start": "2490380",
    "end": "2496110"
  },
  {
    "text": "is basically a function\nof where the target is.",
    "start": "2496110",
    "end": "2501330"
  },
  {
    "text": "And this is what I\ncall the spatial phase. It's not a technically\ncorrect term.",
    "start": "2501330",
    "end": "2508920"
  },
  {
    "text": "But I think you get\nthe point because there is some temporal phase here,\nwhich gives us Doppler.",
    "start": "2508920",
    "end": "2516180"
  },
  {
    "text": "But this term here, it\nhas no time dependency. It's only has a space\ndependency or angle dependency.",
    "start": "2516180",
    "end": "2522599"
  },
  {
    "text": "And that phase term here--\nso what is the phase? It's just this KTX times\nR-prime TX and KRX times--",
    "start": "2522600",
    "end": "2530190"
  },
  {
    "text": "or inner producted\nwith R-prime, RX. Those are the\nspatial phase terms. So if we look at that phase\ndifference, the spatial part",
    "start": "2530190",
    "end": "2538020"
  },
  {
    "start": "2537000",
    "end": "2891000"
  },
  {
    "text": "of it, call that omega. So we are taking the\nphase difference, which is just contributed\nto from the target DOA",
    "start": "2538020",
    "end": "2546839"
  },
  {
    "text": "theta, what is that? So the phase that the\ntransmitter, as we said, is minus KTX inner\nproduct with R-prime, TX.",
    "start": "2546840",
    "end": "2553650"
  },
  {
    "text": "And the phase that we receive\nis minus KRX inner product with RX antenna position.",
    "start": "2553650",
    "end": "2559530"
  },
  {
    "text": "And we are just subtracting the\ntwo to get-- find that phase difference, what it's equal to. And we use the fact\nthat KRX is minus KTX.",
    "start": "2559530",
    "end": "2567059"
  },
  {
    "text": "So we can just write\nit in terms of KRX. It becomes KRX dot product with\nR-prime, RX plus R-prime, TX.",
    "start": "2567060",
    "end": "2575609"
  },
  {
    "text": "Remember that the\nnorm of the K vector, generally, is always\nequal to 2pi over lambda.",
    "start": "2575610",
    "end": "2582280"
  },
  {
    "text": "So this inner product,\nwe can write it in terms of the\nnorm of the vectors and the angle between them.",
    "start": "2582280",
    "end": "2587470"
  },
  {
    "text": "It becomes equal to\nthis expression here-- minus 2pi over lambda times\nthe norm of R-prime, TX",
    "start": "2587470",
    "end": "2593560"
  },
  {
    "text": "plus R-prime, RX\ntimes sine of theta. This is very important. So super important, if I know\nthe position of my TX and RX",
    "start": "2593560",
    "end": "2604090"
  },
  {
    "text": "antenna, so if R-prime,\nRX, R-prime, TX I know, which I always know because\nI basically own that radar.",
    "start": "2604090",
    "end": "2612430"
  },
  {
    "text": "So I can measure where the\nTX and RX antennas are. And then if I somehow\nmeasure the phase difference",
    "start": "2612430",
    "end": "2620500"
  },
  {
    "text": "between that round\ntrip signal accumulated",
    "start": "2620500",
    "end": "2625570"
  },
  {
    "text": "due to that difference in\nthe position of the TX and RX antenna, so if I know my omega,\nthen I can find sine theta.",
    "start": "2625570",
    "end": "2634060"
  },
  {
    "text": "You just divide\nyour omega by this, and then that's sine theta. And then you take the\narcsine, and that gives you",
    "start": "2634060",
    "end": "2640119"
  },
  {
    "text": "your target DOA. I mean, technically, yes. But that's not how it's done.",
    "start": "2640120",
    "end": "2645310"
  },
  {
    "text": "Because if you just\nrely your DOA estimation on just one phase measurement,\nit's going to be very noisy.",
    "start": "2645310",
    "end": "2651670"
  },
  {
    "text": "And you don't get a\nvery good estimate. But that's the core idea here. You kind of see\nwhere we are going.",
    "start": "2651670",
    "end": "2657550"
  },
  {
    "text": "We are going to work with\nthis phase term omega and perhaps look\nat more antennas to get a more accurate estimate.",
    "start": "2657550",
    "end": "2664849"
  },
  {
    "text": "Another thing that is really\nimportant here and really helps us to simplify our signal\nmodel is that this phase,",
    "start": "2664850",
    "end": "2673150"
  },
  {
    "text": "it doesn't depend on the\nindividual positions of TX and RX antennas.",
    "start": "2673150",
    "end": "2679000"
  },
  {
    "text": "It just depends on\nthe sum of the two. So I can move my TX\nantennas and RX antennas.",
    "start": "2679000",
    "end": "2686950"
  },
  {
    "text": "But as long as that R-prime,\nRX plus R-prime, TX, that sum position doesn't change, it\nwouldn't affect the phase.",
    "start": "2686950",
    "end": "2696250"
  },
  {
    "text": "So now in a MIMO\nsystem, I'm going",
    "start": "2696250",
    "end": "2701530"
  },
  {
    "text": "to have multiple TXs\nand multiple RXs. So you can look at any pair\nof transmit-receive antennas.",
    "start": "2701530",
    "end": "2709270"
  },
  {
    "text": "Like transmit number K--\ntransmit antenna number K sent a waveform, and I'm\nreceiving it on every receive",
    "start": "2709270",
    "end": "2716780"
  },
  {
    "text": "antenna. So every pair of\ntransmit-receive would give you one of these\nomegas that you can measure.",
    "start": "2716780",
    "end": "2725060"
  },
  {
    "text": "So mathematically, if you\nlook at the IF signal that is received when the K-th\ntransmitter was transmitting,",
    "start": "2725060",
    "end": "2735580"
  },
  {
    "text": "and I'm getting it from\nreceiver antenna number Q, then I can write that as SIF\nof KQ which is equal to-- now",
    "start": "2735580",
    "end": "2745030"
  },
  {
    "text": "I'm going to add the\nindices to my omega. The omega is also KQ. So K is a transmit index--",
    "start": "2745030",
    "end": "2751150"
  },
  {
    "text": "antenna index. Q is the receive antenna index. And in terms of the position\nof the K-th transmit antenna",
    "start": "2751150",
    "end": "2758360"
  },
  {
    "text": "and Q-th receive antenna, I can\nexplicitly write my IF signal",
    "start": "2758360",
    "end": "2764800"
  },
  {
    "text": "in this form. So it's e to the minus\nJ, 2pi over lambda. It's a function of the sum of\nthe positions of the antenna--",
    "start": "2764800",
    "end": "2772990"
  },
  {
    "text": "transmit antenna Q-- K, receive antenna Q.\nSine theta is, again,",
    "start": "2772990",
    "end": "2778330"
  },
  {
    "text": "that's the DOA of the\ntarget that echoed back. And SIF of T is our good old\ndown-converted chirp waveform.",
    "start": "2778330",
    "end": "2787359"
  },
  {
    "text": "And, again, the chirp waveform,\nif it's FMCW, if it's PMCW, it's your code word, it does\nnot matter for the purpose",
    "start": "2787360",
    "end": "2795760"
  },
  {
    "text": "of determining the DOA. It does not matter\nwhat this SIF is. Whatever it is,\nthe algorithm works",
    "start": "2795760",
    "end": "2801190"
  },
  {
    "text": "because we are going to work\nwith this part, the part that the term depends\non theta, which",
    "start": "2801190",
    "end": "2807460"
  },
  {
    "text": "there is no contribution from\nthe actual waveform to it. It only depends on the\ngeometry and the angle",
    "start": "2807460",
    "end": "2814390"
  },
  {
    "text": "and the position\nof the antennas. Makes sense? OK, so one more thing that--",
    "start": "2814390",
    "end": "2824180"
  },
  {
    "text": "we made that simplification,\nbut I want to point it out because it's\nextremely important.",
    "start": "2824180",
    "end": "2829880"
  },
  {
    "text": "Here with this\nsignal model up here, we assume the\nantennas are perfectly",
    "start": "2829880",
    "end": "2836690"
  },
  {
    "text": "isotropic because there was\nno contribution to the-- from the gain of the\nantenna, basically.",
    "start": "2836690",
    "end": "2843620"
  },
  {
    "text": "We know in reality antennas\nhave gain patterns, G of theta, which are not isotropic.",
    "start": "2843620",
    "end": "2849619"
  },
  {
    "text": "So in that case,\nall you need to do to make your signal\nmodel complete",
    "start": "2849620",
    "end": "2854990"
  },
  {
    "text": "is that you just multiply\nit by G of theta. You just insert your\nG of theta in there.",
    "start": "2854990",
    "end": "2860089"
  },
  {
    "text": "And this is your signal\nmodel for the case where your antennas\nare not isotropic.",
    "start": "2860090",
    "end": "2865130"
  },
  {
    "text": "For the rest of\nthe derivation, we are going to assume G\nof theta is almost one. So we are going to\ngo by the assumption",
    "start": "2865130",
    "end": "2871700"
  },
  {
    "text": "of isotropic antennas. But extremely, extremely\nimportant to remember,",
    "start": "2871700",
    "end": "2876950"
  },
  {
    "text": "if your antennas\nare not isotropic, you should go back and plug\nin whatever a G of theta is",
    "start": "2876950",
    "end": "2883470"
  },
  {
    "text": "and work with that signal model. Super important, again. These assumptions are what\ncould completely make or break",
    "start": "2883470",
    "end": "2890390"
  },
  {
    "text": "your application. OK, so now consider\na MIMO array. Let's say we have NTX transmit\nantennas and NRX receive",
    "start": "2890390",
    "end": "2900950"
  },
  {
    "text": "antennas. So how many IF signals am\nI going to have access to?",
    "start": "2900950",
    "end": "2906830"
  },
  {
    "text": "It's going to be NTX times NRX\nbecause every pair of TX/RX antennas will give\nme an IF signal.",
    "start": "2906830",
    "end": "2916250"
  },
  {
    "text": "Or the other way to think about\nit, every transmit antenna that transmits, you're going to get\nechoes on all the receivers.",
    "start": "2916250",
    "end": "2923570"
  },
  {
    "text": "They're all going to receive. So in total, you would\nget NTX times NRX pairs.",
    "start": "2923570",
    "end": "2928880"
  },
  {
    "text": "Let's call that P. So\nP is NTX times NRX. So you're going to have\na total of P IF signals",
    "start": "2928880",
    "end": "2936560"
  },
  {
    "text": "after you look at all\ncombinations of transmit and receives. And, again, I'm rewriting what\nwe had in the previous slide--",
    "start": "2936560",
    "end": "2944059"
  },
  {
    "text": "SIF of KQ for\ntransmitter K, receiver Q is given by this expression\nhere-- e to the minus J, 2pi",
    "start": "2944060",
    "end": "2950869"
  },
  {
    "text": "over lambda times the\nnorm of the position of RX plus position of TX\ntimes sine theta times",
    "start": "2950870",
    "end": "2956869"
  },
  {
    "text": "our good old\ndown-converted IF waveform. OK, so, again, as you see,\neven for the case of the MIMO,",
    "start": "2956870",
    "end": "2967100"
  },
  {
    "text": "if you look at this\nterm, it does not determine-- that\nspatial phase does not depend on the individual\nposition of the TX and RXs.",
    "start": "2967100",
    "end": "2977270"
  },
  {
    "text": "It only depends on\nthe norm of the sum.",
    "start": "2977270",
    "end": "2982690"
  },
  {
    "text": "So here is a very\ninteresting idea. And this is a pure\nmathematical simplification,",
    "start": "2982690",
    "end": "2989732"
  },
  {
    "text": "what we are going to do here. But it really, really makes\nthe math more tractable for us. So we are going to\nintroduce this idea",
    "start": "2989732",
    "end": "2996100"
  },
  {
    "text": "of the virtual antenna array. And what the virtual\nantenna array is, so",
    "start": "2996100",
    "end": "3001560"
  },
  {
    "text": "instead of working\nwith these IF signals, I can define a so-called\nvirtual antenna",
    "start": "3001560",
    "end": "3008070"
  },
  {
    "text": "array which, instead of having\nNTX transmitters and NRX",
    "start": "3008070",
    "end": "3013410"
  },
  {
    "text": "receivers, it has one\ntransmitter and NTX times NRX",
    "start": "3013410",
    "end": "3020440"
  },
  {
    "text": "receivers, this virtual array. And I can assume the\ntransmitter is at the origin,",
    "start": "3020440",
    "end": "3028000"
  },
  {
    "text": "is at position zero. And this is our P. These\nP receivers, each of them",
    "start": "3028000",
    "end": "3034510"
  },
  {
    "text": "is at this location, which\nis the sum of the transmit and receive.",
    "start": "3034510",
    "end": "3040060"
  },
  {
    "text": "And this is, again, this\nis a virtual antenna. This is a mathematical\nconstruction. But with that, I can\nreally simplify my math",
    "start": "3040060",
    "end": "3049930"
  },
  {
    "text": "because I can define\nthis virtual array which has, again, a single transmitter\nthat's located at the origin.",
    "start": "3049930",
    "end": "3057170"
  },
  {
    "text": "So R-prime, TX is zero. And it has P receiver antennas. And each receiver,\nreceiver number P,",
    "start": "3057170",
    "end": "3063700"
  },
  {
    "text": "is located at the sum of the\npositions of a TX and RX pair",
    "start": "3063700",
    "end": "3070990"
  },
  {
    "text": "from the original\nphysical array. And now if I work with\nthis virtual array,",
    "start": "3070990",
    "end": "3077920"
  },
  {
    "text": "I'm going to get-- and write\nbasically the signal model for that, I'm going to get the\nexact same thing as this except",
    "start": "3077920",
    "end": "3085300"
  },
  {
    "text": "that I'm not-- I wouldn't need to keep writing\nR-prime, TX plus R-prime, RX",
    "start": "3085300",
    "end": "3092020"
  },
  {
    "text": "because R-prime, TX is zero. And I just work with the\nnorm of the R-prime, RX",
    "start": "3092020",
    "end": "3097540"
  },
  {
    "text": "of the virtual array. So the effective\nP element RX array",
    "start": "3097540",
    "end": "3103090"
  },
  {
    "text": "is called the virtual array. Let's see visually,\nbecause I know the math is too abstract here,\nso let's see visually what",
    "start": "3103090",
    "end": "3111250"
  },
  {
    "start": "3110000",
    "end": "3287000"
  },
  {
    "text": "the virtual array looks like. So let's look at\nthe picture here. So here we have a 2D,\nseven-element MIMO array.",
    "start": "3111250",
    "end": "3118670"
  },
  {
    "text": "So this is the physical array. It has three transmitters-- TX1, TX2, TX3--\nand four receivers.",
    "start": "3118670",
    "end": "3126170"
  },
  {
    "text": "So the idea of the virtual\narray is that instead of this, construct a virtual array\nthat has just one transmitter",
    "start": "3126170",
    "end": "3136090"
  },
  {
    "text": "located at the origin. And it would have\nhow many receivers? It would have three times\nfour, NTX times NRX,",
    "start": "3136090",
    "end": "3144130"
  },
  {
    "text": "which is 12 receivers. And each receiver, you\nplace it at a position",
    "start": "3144130",
    "end": "3149450"
  },
  {
    "text": "which is the sum of\none of the original TXs plus one of the original RXs.",
    "start": "3149450",
    "end": "3154810"
  },
  {
    "text": "So if you do that,\nthis purple array is the effective virtual\narray that you get.",
    "start": "3154810",
    "end": "3162250"
  },
  {
    "text": "So we basically transform a\nMIMO system with this trick to SIMO system--",
    "start": "3162250",
    "end": "3168910"
  },
  {
    "text": "single transmit, multi receive. But the number of receivers\nis the NTX times NRX,",
    "start": "3168910",
    "end": "3177670"
  },
  {
    "text": "so it has actually\nmore elements than the original physical array.",
    "start": "3177670",
    "end": "3184460"
  },
  {
    "text": "OK, and in general,\nif you want to be able to detect a 3D\ndirection of arrival,",
    "start": "3184460",
    "end": "3193970"
  },
  {
    "text": "so both azimuth\nand elevation, you need an array which expands 2D. And by 2D, I mean you\nneed array elements which",
    "start": "3193970",
    "end": "3201710"
  },
  {
    "text": "are placed both horizontally\nand vertically, which is the case here. You see, you have some elements\nthat span horizontally,",
    "start": "3201710",
    "end": "3208790"
  },
  {
    "text": "and then you have two rows. So you also have some\nvertical elements. But it turns out\nthat, as you would",
    "start": "3208790",
    "end": "3215390"
  },
  {
    "text": "see when we are developing\nour DOA algorithms, so then you can find\nyour azimuth angle theta",
    "start": "3215390",
    "end": "3220400"
  },
  {
    "text": "and elevation angle phi. But it turns out that the way\nthe DOA processing algorithm",
    "start": "3220400",
    "end": "3227330"
  },
  {
    "text": "works, at least the one\nthat we develop here, it works completely\nindependently",
    "start": "3227330",
    "end": "3232460"
  },
  {
    "text": "in the theta and phi direction. So it only looks at the elements\nthat are placed horizontally",
    "start": "3232460",
    "end": "3238670"
  },
  {
    "text": "to find your azimuth angle. And it only looks\nat the elements that are placed vertically or\nthe relative phase of them",
    "start": "3238670",
    "end": "3246470"
  },
  {
    "text": "to find the elevation angle. So because of that, so that\nthe math doesn't get too messy,",
    "start": "3246470",
    "end": "3253460"
  },
  {
    "text": "we are going to just consider\na 1D virtual array for now and estimate just theta from\nit so our notation doesn't",
    "start": "3253460",
    "end": "3263359"
  },
  {
    "text": "get too messy. But the exact same\nidea for a 2D array. You apply it twice, and then\nyou can find both theta and phi.",
    "start": "3263360",
    "end": "3272570"
  },
  {
    "text": "So that's the thing. OK, so let's summarize\neverything we talked about",
    "start": "3272570",
    "end": "3278150"
  },
  {
    "text": "and kind of go over\nit one more time. We have so far only built the\nsignal model and this concept",
    "start": "3278150",
    "end": "3284990"
  },
  {
    "text": "of the virtual array. But this is an extremely\nimportant slide. I think this is perhaps\nthe most important slide",
    "start": "3284990",
    "end": "3291410"
  },
  {
    "start": "3287000",
    "end": "3599000"
  },
  {
    "text": "of our entire radar chapter\nbecause it really summarizes. There's a lot of things\npacked into this one page.",
    "start": "3291410",
    "end": "3299010"
  },
  {
    "text": "So I'm going to go\nover it, but please, please make sure you\nspend a lot of time really parsing out everything\nthat is noted here.",
    "start": "3299010",
    "end": "3306530"
  },
  {
    "text": "And make sure it\nall makes sense. It shouldn't be just math. There should be meaning\nassigned to everything",
    "start": "3306530",
    "end": "3315859"
  },
  {
    "text": "that's written down here. But it's our full signal model. And this will explain\neverything-- range,",
    "start": "3315860",
    "end": "3322250"
  },
  {
    "text": "velocity, DOA. And it's as general as it gets. So let's assume\nthere is K targets",
    "start": "3322250",
    "end": "3329120"
  },
  {
    "text": "in the scene, K different\ntargets in the scene that are echoing back. And then the IF signal from\nthe virtual array element P.",
    "start": "3329120",
    "end": "3339770"
  },
  {
    "text": "So we are talking in the\nvirtual array space now. The IF of signal that you\nget from that, SIF of P,",
    "start": "3339770",
    "end": "3348109"
  },
  {
    "text": "we call that, which\ntechnically is equal to-- if you\nwant to write it in terms of the\nphysical array, it",
    "start": "3348110",
    "end": "3353480"
  },
  {
    "text": "would be SIF of some combination\nKQ where K is the transmitter",
    "start": "3353480",
    "end": "3358760"
  },
  {
    "text": "and Q is the receiver. What is that equal to? Well, it's the sum of the\nechos from all K targets.",
    "start": "3358760",
    "end": "3365700"
  },
  {
    "text": "So that's why we have\nsum I from 1 to K. And then each target contributes\na spatial phase that's",
    "start": "3365700",
    "end": "3372320"
  },
  {
    "text": "this E to the J, omega\nwith two indices, P and I. I Is the target index.",
    "start": "3372320",
    "end": "3378560"
  },
  {
    "text": "P is the antenna-- or the virtual antenna index. So that's the\nspatial part of it. And then the temporal\npart is this SIF",
    "start": "3378560",
    "end": "3386000"
  },
  {
    "text": "of T, which is the same thing we\nhave talked about a lot, which is down-converted waveform.",
    "start": "3386000",
    "end": "3391350"
  },
  {
    "text": "So that's that. But we are going to\ngo one level deeper. What is omega, omega-PI?",
    "start": "3391350",
    "end": "3397370"
  },
  {
    "text": "Omega-PI basically\ncontains the information about the DOA of\nthe I-th target.",
    "start": "3397370",
    "end": "3403880"
  },
  {
    "text": "So if the DOA of target\nnumber I is theta-I, omega-PI,",
    "start": "3403880",
    "end": "3410069"
  },
  {
    "text": "and, again, P is one of\nour virtual antennas, so that's a signal you get from\none of those virtual antennas,",
    "start": "3410070",
    "end": "3415850"
  },
  {
    "text": "omega-PI is equal\nto this expression, which is minus 2pi over lambda. Now we only have norm\nof R-tilde-prime, RXP",
    "start": "3415850",
    "end": "3423890"
  },
  {
    "text": "because, again, we are talking\nabout the virtual antenna. So instead of R-prime,\nTX plus R-prime,",
    "start": "3423890",
    "end": "3430670"
  },
  {
    "text": "RX because for the virtual\narray, the TX is zero-- placed at zero, you\njust get the norm",
    "start": "3430670",
    "end": "3437869"
  },
  {
    "text": "off R-tilde-prime,\nRX times sine theta. So that is, again, what\nI call the spatial phase",
    "start": "3437870",
    "end": "3445369"
  },
  {
    "text": "of the IF signal. And then the temporal\npart of it is this thing",
    "start": "3445370",
    "end": "3451319"
  },
  {
    "text": "we have worked with a lot. So that's SIF of T is\nthe IF echo waveform from the I-th target that\ncontains range and Doppler",
    "start": "3451320",
    "end": "3460500"
  },
  {
    "text": "information. Now this part depends on\nwhat waveform you send. Was it the FMCW?",
    "start": "3460500",
    "end": "3465870"
  },
  {
    "text": "Was it PMCW? Was it something else? For FMCW, last time we showed\nthat SIF is given by this sig--",
    "start": "3465870",
    "end": "3472680"
  },
  {
    "text": "this expression here. Mu is the gain of the\nlow-noise amplifier. Alpha-I is the attenuation\nfactor for the I-th target.",
    "start": "3472680",
    "end": "3480900"
  },
  {
    "text": "Then you get two\ncomplex exponentials. Sorry, there's one more thing. There is this e to the J--",
    "start": "3480900",
    "end": "3487050"
  },
  {
    "text": "let me clean this-- there's this e to\nthe J, phi-0-I which is the phase at the\nstart of the frame.",
    "start": "3487050",
    "end": "3495600"
  },
  {
    "text": "Then you get this first complex\nexponential which has delta-FI So this is going to give you\nthe range of the I-th target",
    "start": "3495600",
    "end": "3502619"
  },
  {
    "text": "after you do the\nrange FFT on it. And then there's this second\nterm, B to the minus J 2pi-FDI,",
    "start": "3502620",
    "end": "3509940"
  },
  {
    "text": "which is the Doppler shift\nfrom the I-th target. And this is going to give you\nthe relative radial velocity",
    "start": "3509940",
    "end": "3516900"
  },
  {
    "text": "of the target. And then how you\nmap the frequencies to the physical quantities,\nvelocity and ranges,",
    "start": "3516900",
    "end": "3522750"
  },
  {
    "text": "is given here. Again, it's a very, very\ninformation-dense slide. So absolutely make sure, at\nyour own pace, go over it.",
    "start": "3522750",
    "end": "3531600"
  },
  {
    "text": "Spend as much time as you\nneed, and make sure everything makes sense. And by makes sense, I don't\nmean, yeah, it's a summation,",
    "start": "3531600",
    "end": "3539640"
  },
  {
    "text": "and I know what the sine is. By make sense, I\nmean, tie it back to all the physical\nconcepts we talked about,",
    "start": "3539640",
    "end": "3546540"
  },
  {
    "text": "and make sure you can\nexplain it in words. Math is-- anyone can do math.",
    "start": "3546540",
    "end": "3553830"
  },
  {
    "text": "But the importance\nis, can you explain what's behind the Math and?",
    "start": "3553830",
    "end": "3558900"
  },
  {
    "text": "I want to make\nsure that's clear. If it's not clear,\nabsolutely come talk to us.",
    "start": "3558900",
    "end": "3564220"
  },
  {
    "text": "We can sit together, go over it,\nand make sure it makes sense. OK, so we have our\nfull signal model.",
    "start": "3564220",
    "end": "3571710"
  },
  {
    "text": "Now we can talk\nabout algorithms. And specifically, if\nI clean things up,",
    "start": "3571710",
    "end": "3579540"
  },
  {
    "text": "our algorithm for DOA\nestimation, the DBF, is going to focus on this\nterm, the spatial phase,",
    "start": "3579540",
    "end": "3587190"
  },
  {
    "text": "because that contains\nthe DOA information. And if we extract that,\nwe are basically done.",
    "start": "3587190",
    "end": "3594090"
  },
  {
    "text": "OK, one more thing. So as you see-- again, I'm going\nto clean this up a little bit-- when it comes\nto this spatial first phase",
    "start": "3594090",
    "end": "3602640"
  },
  {
    "text": "term, omega, it\ndepends on two things. One is the target DOA. That's the sine theta-I term.",
    "start": "3602640",
    "end": "3608670"
  },
  {
    "text": "But it also depends on\nthe antenna geometry or the virtual antenna geometry.",
    "start": "3608670",
    "end": "3613740"
  },
  {
    "text": "And by geometry, I\nmean the positions of the virtual\nelements go into it. So to be able to\ndevelop an algorithm,",
    "start": "3613740",
    "end": "3622349"
  },
  {
    "text": "we need to clarify what\nthese R-tilde, RXPs are. What is the geometry\nof the virtual array",
    "start": "3622350",
    "end": "3629640"
  },
  {
    "text": "that we are working with? We are going to start with\nthe simplest geometry you",
    "start": "3629640",
    "end": "3634680"
  },
  {
    "text": "can think of, which is a\nso-called uniform linear array or ULA.",
    "start": "3634680",
    "end": "3640050"
  },
  {
    "text": "What a ULA is-- and, again, we are talking about\nthe effective virtual array",
    "start": "3640050",
    "end": "3645180"
  },
  {
    "text": "that you get-- what a ULA is, is just\nall the virtual elements",
    "start": "3645180",
    "end": "3651630"
  },
  {
    "text": "are arranged linearly, in a\nline, with constant spacing.",
    "start": "3651630",
    "end": "3657990"
  },
  {
    "text": "So this is what\na ULA looks like. You have your RX1, RX2. RX3, all the way to RX number\nP. They're all on a line.",
    "start": "3657990",
    "end": "3665350"
  },
  {
    "text": "And for now, let's\nassume it's horizontal. And the spacing between\neach two is some constant D.",
    "start": "3665350",
    "end": "3672359"
  },
  {
    "text": "So with that, the norm of\nbasically the position of RXP--",
    "start": "3672360",
    "end": "3678030"
  },
  {
    "text": "norm R-tilde-prime RXP is\njust equal to the antenna index times D.",
    "start": "3678030",
    "end": "3685050"
  },
  {
    "text": "So you can say, yeah, this one\nis at D. This one is at 2D. This one is that 3D and so on.",
    "start": "3685050",
    "end": "3691110"
  },
  {
    "text": "Or you can start at zero. It doesn't matter. OK, so that's what the ULA is.",
    "start": "3691110",
    "end": "3696329"
  },
  {
    "text": "And now with that, now we\ncan talk about how we do DOA.",
    "start": "3696330",
    "end": "3702030"
  },
  {
    "text": "Now, as I said, the DOA step\nis the last step in our DSP.",
    "start": "3702030",
    "end": "3707340"
  },
  {
    "text": "So we have already done our\nrange processing, Doppler processing. We have detected the\ntarget, and now we",
    "start": "3707340",
    "end": "3713820"
  },
  {
    "text": "are going to find its DOA. So the actual signal that\nwould feed into our DOA DSP",
    "start": "3713820",
    "end": "3723000"
  },
  {
    "text": "is the range-Doppler\nprocessed IF signal. So we are going to\ncall that our SIF.",
    "start": "3723000",
    "end": "3729420"
  },
  {
    "text": "Previously it was just\na function of L and K, if you remember, where\nL was the Doppler index",
    "start": "3729420",
    "end": "3735780"
  },
  {
    "text": "and K was the range index. And we used to talk\nabout SISO systems.",
    "start": "3735780",
    "end": "3741680"
  },
  {
    "text": "So there was only one\nantenna to work with. But now it's a MIMO system. So we are going to add a third\nindex, which is basically",
    "start": "3741680",
    "end": "3749030"
  },
  {
    "text": "the virtual antenna index.  That's the P. And we need\nthat because we are now",
    "start": "3749030",
    "end": "3757250"
  },
  {
    "text": "talking about MIMO systems. Now what is this SIF? Its range-Doppler process. So we have done our 2D FFT\non the little sp of m and n.",
    "start": "3757250",
    "end": "3766220"
  },
  {
    "text": "And as we do, after\nrange-Doppler processing, what we get is\nbasically our signal",
    "start": "3766220",
    "end": "3771950"
  },
  {
    "text": "becomes R-tilde-I\ntimes D-tilde-I. So this is the output\nafter the two FFTs.",
    "start": "3771950",
    "end": "3778070"
  },
  {
    "text": "But now we are also including\nour spatial phase term, which is this guy--\ne to the minus J, 2pi",
    "start": "3778070",
    "end": "3785480"
  },
  {
    "text": "over lambda, P times\nD sine theta-I. So what this is,\nthis pd, remember, that's just a norm\nof R-tilde-prime RXP.",
    "start": "3785480",
    "end": "3795079"
  },
  {
    "text": "OK, so this entire--\nthis full term here is just e to the\nminus J, big omega-PI.",
    "start": "3795080",
    "end": "3801290"
  },
  {
    "text": "That's the spatial\nphase term that we had in our signal model. Very good. Almost done.",
    "start": "3801290",
    "end": "3807110"
  },
  {
    "text": "Almost done. Bear with me for\nfive more seconds-- five more minutes, and we'll\nbe done with the painful math.",
    "start": "3807110",
    "end": "3812990"
  },
  {
    "text": "But here, the way you should\nthink about the signal is-- previously for the\nSISO case, we were",
    "start": "3812990",
    "end": "3819290"
  },
  {
    "text": "thinking in terms of\nmatrices because we only had range and Doppler index. Now we have range index, Doppler\nindex, and antenna index.",
    "start": "3819290",
    "end": "3826490"
  },
  {
    "text": "So it becomes a cube, basically. So this guy is called--\nit's M by N by P. Again,",
    "start": "3826490",
    "end": "3832670"
  },
  {
    "text": "big M is the number\nof chirps in a frame. Big N is the number of samples,\nADC samples, per chirp.",
    "start": "3832670",
    "end": "3840170"
  },
  {
    "text": "P is the number of\nvirtual antenna elements. And this is called a\npreprocessed radar data cube.",
    "start": "3840170",
    "end": "3846890"
  },
  {
    "text": "Why preprocessed? Because we have already done\nrange-Doppler processing on it. That's why it's\nprepreprocessing.",
    "start": "3846890",
    "end": "3853400"
  },
  {
    "text": "Before, it's called\nraw radar data cube. I'll show some\npictures to clarify. But one more step\nbefore we do DOA.",
    "start": "3853400",
    "end": "3861320"
  },
  {
    "text": "Remember, we do target\ndetection like CFAR or constant thresholding. What that does for us is that it\nextracts the range and Doppler",
    "start": "3861320",
    "end": "3871250"
  },
  {
    "text": "indices. We call that L-hat-I, K-hat-I\nor the range and Doppler peak",
    "start": "3871250",
    "end": "3877250"
  },
  {
    "text": "indices for the I-th target. So once you do that, because if\nI go back, in this expression",
    "start": "3877250",
    "end": "3886490"
  },
  {
    "text": "here, we're summing\nover all targets. But the point here is that\neach R-tilde-I multiplied",
    "start": "3886490",
    "end": "3894529"
  },
  {
    "text": "by D-tilde-I, if at the correct\nindices, KL, for that target,",
    "start": "3894530",
    "end": "3900440"
  },
  {
    "text": "these have very large values. So if you just look at your\nK-hat-I, L-hat-I indices, which",
    "start": "3900440",
    "end": "3908930"
  },
  {
    "text": "are the actual range and Doppler\nindices for the I-th target, all the rest of the\nterms are negligible.",
    "start": "3908930",
    "end": "3914930"
  },
  {
    "text": "All the rest of the R-tilde-,\nD-tilde-Is are almost zero, and you only\nextract the R-tilde,",
    "start": "3914930",
    "end": "3920470"
  },
  {
    "text": "D-tilde for that target. So after your target detection,\nyou can ignore the summation.",
    "start": "3920470",
    "end": "3925970"
  },
  {
    "text": "You can write at\nL-hat-I, K-hat-I, your range-Doppler\nprocessed signal",
    "start": "3925970",
    "end": "3931970"
  },
  {
    "text": "is just the R-tilde,\nD-tilde of the I-th target times the spatial phase\nfrom the I-th target.",
    "start": "3931970",
    "end": "3941240"
  },
  {
    "text": "Again, I know the math\nis way too abstract and kind of can be overwhelming. But let's look at\nthis picture together.",
    "start": "3941240",
    "end": "3947720"
  },
  {
    "text": "I think this is--\nignore the math. If this makes sense, you\nwill get through the math. So what we are visualizing here\nis that preprocessed data cube.",
    "start": "3947720",
    "end": "3957740"
  },
  {
    "text": "So I'm showing it as\nslices because it's hard to visualize a cube. So every slice here,\nstarting from this first one,",
    "start": "3957740",
    "end": "3964820"
  },
  {
    "text": "is the range-velocity\nor range-Doppler map that you get by processing\nthe signal from one",
    "start": "3964820",
    "end": "3972530"
  },
  {
    "text": "of your virtual\nantenna elements. So the first one is SIF LK1.",
    "start": "3972530",
    "end": "3977570"
  },
  {
    "text": "1 is the antenna index. So this frontmost one\nis the range-Doppler from the first antenna.",
    "start": "3977570",
    "end": "3984380"
  },
  {
    "text": "Then you get it from\nthe second antenna. Then you get it from the Pth-- antenna number P.",
    "start": "3984380",
    "end": "3989420"
  },
  {
    "text": "And then if you look at these\nrange-Doppler maps, remember, actual targets show\nas peaks, or if it's",
    "start": "3989420",
    "end": "3996710"
  },
  {
    "text": "a heat map, like hot zones. So in this one, we\nhave two targets. That's the first one, say.",
    "start": "3996710",
    "end": "4001810"
  },
  {
    "text": "That's where the first peak is. And that's the second target.",
    "start": "4001810",
    "end": "4007569"
  },
  {
    "text": "Let's say I want to find\nthe DOA of the first target. So I've done my CFAR.",
    "start": "4007570",
    "end": "4012880"
  },
  {
    "text": "I've found what I\ncall the L-hat-1 and K-hat-1 of that target.",
    "start": "4012880",
    "end": "4023260"
  },
  {
    "text": "Now I'm going to go through\nmy antenna dimension. So I'm to go through the cube\nand extract the signal vector,",
    "start": "4023260",
    "end": "4031440"
  },
  {
    "text": "fixing the L and K and just\nlooking at the value for-- across the antenna dimension.",
    "start": "4031440",
    "end": "4037230"
  },
  {
    "text": "What is that equal to? It's just equal to R-tilde-1,\nK-hat-1, D-tilde-1, L-hat-1--",
    "start": "4037230",
    "end": "4046050"
  },
  {
    "text": "so that's just the range\nFFT times the Doppler FFT of the first target--",
    "start": "4046050",
    "end": "4051750"
  },
  {
    "text": "times this. It's a bit hard to read, maybe. So let me zoom in. Times e to the minus J, 2pi\nover lambda pd sine theta-1.",
    "start": "4051750",
    "end": "4061020"
  },
  {
    "text": "So if I extract-- after I do my\ntarget detection-- if I extract that, basically, cross\nsection of the data",
    "start": "4061020",
    "end": "4068400"
  },
  {
    "text": "cube across the antenna\ndimension, it's some constant.",
    "start": "4068400",
    "end": "4075420"
  },
  {
    "text": "So this R times D\nis now a constant because I've fixed the index. But the only thing that's\nvarying as a function of P",
    "start": "4075420",
    "end": "4082980"
  },
  {
    "text": "is this term, which\nhas sine theta in it.",
    "start": "4082980",
    "end": "4088260"
  },
  {
    "text": "So how do we find theta? Let's introduce a new variable\nto just simplify our notation.",
    "start": "4088260",
    "end": "4096630"
  },
  {
    "text": "I'm going to call F\ntheta-I to be equal to 1 over lambda sine theta-I. That's\nonly to clean up the notation.",
    "start": "4096630",
    "end": "4104310"
  },
  {
    "text": "Then that signal\nslice that we just looked at, which is SIF\nof L-hat-I, K-hat-I,",
    "start": "4104310",
    "end": "4109470"
  },
  {
    "text": "P. As a function of\nP, is given by this. This piece, ignore it.",
    "start": "4109470",
    "end": "4115200"
  },
  {
    "text": "It's just a constant now. Doesn't matter\nwhat it is at all.",
    "start": "4115200",
    "end": "4120210"
  },
  {
    "text": "It's some constant.  I should actually-- this piece.",
    "start": "4120210",
    "end": "4127899"
  },
  {
    "text": "What matters is this guy-- e to the minus J,\n2pi f-theta-I, pd.",
    "start": "4127899",
    "end": "4134620"
  },
  {
    "text": "Now it's a function of P. P is\nmy third index of my data cube. It goes from 1 to\nbig P, which is",
    "start": "4134620",
    "end": "4141278"
  },
  {
    "text": "the number of virtual elements. And if you look at\nthis, what is it? It's a complex exponential\nwith a frequency, f-theta-I,",
    "start": "4141279",
    "end": "4149470"
  },
  {
    "text": "that is sampled spatially\nlike a space D apart.",
    "start": "4149470",
    "end": "4155350"
  },
  {
    "text": "Or if you want to think\nin terms of sampling rate, you can call\nf-double-prime of S,",
    "start": "4155350",
    "end": "4160479"
  },
  {
    "text": "which is 1 over D.\nThat's your sampling rate across the\nantenna dimension,",
    "start": "4160479",
    "end": "4166689"
  },
  {
    "text": "basically, for the DOA. So now I want to\nestimate f-theta-I.",
    "start": "4166689",
    "end": "4172750"
  },
  {
    "text": "Because if I find f-theta-I,\nI can take an arcsine of it and find theta-I.\nHow do I do that?",
    "start": "4172750",
    "end": "4178818"
  },
  {
    "text": "Well, it's a\ncomplex exponential. I want to find a frequency. What do we do? Another Fourier transform.",
    "start": "4178819",
    "end": "4185620"
  },
  {
    "text": "Again, we reduce\nthe DOA estimation to another spectral estimation\nor frequency estimation.",
    "start": "4185620",
    "end": "4191649"
  },
  {
    "text": "Easiest thing to do is our\ngood old Fourier transform. So another Fourier transform.",
    "start": "4191649",
    "end": "4198420"
  },
  {
    "text": "We do 1D P point\nbecause the length of the signal as a function\nof little p is big P.",
    "start": "4198420",
    "end": "4207510"
  },
  {
    "text": "So P point FFT of this\npreprocessed signal.",
    "start": "4207510",
    "end": "4212800"
  },
  {
    "text": "And if you do that, now\nyou can write it as well. This, we said, is\nnot a function--",
    "start": "4212800",
    "end": "4218580"
  },
  {
    "text": "these two terms is\nnot a function of P. So we are treating\nthem as a constant. The only thing that\ncomes out is the FFT",
    "start": "4218580",
    "end": "4224489"
  },
  {
    "text": "of the complex exponential term. We call that theta-tilde-I\nof Q. Q is now a DOA index.",
    "start": "4224490",
    "end": "4231704"
  },
  {
    "text": " So this FFT will show\na peak at some index.",
    "start": "4231705",
    "end": "4240910"
  },
  {
    "text": "Call that Q-hat-I.\nAnd from Q-hat-I, we can find our f-theta-I, which\nis what we defined up here.",
    "start": "4240910",
    "end": "4250330"
  },
  {
    "text": "What would that be? It's just a Q-hat-I\nover the total number of points in the FFT\ntimes the sampling rate.",
    "start": "4250330",
    "end": "4256557"
  },
  {
    "text": "It's the same thing we had\ndone for range and velocity. We're just converting\nthe sample in the FFT--",
    "start": "4256558",
    "end": "4261610"
  },
  {
    "text": "the index of the peak in the\nFFT to the actual frequency. Why the negative sign here?",
    "start": "4261610",
    "end": "4267219"
  },
  {
    "text": "Because it was e to\nthe minus J. That's where the negative\nsign is coming from. So I find my f-hat-theta-I,\nbut I want the actual theta-I",
    "start": "4267220",
    "end": "4276980"
  },
  {
    "text": "itself. That's the DOA. How do I do that? I use this expression. And that gives me theta-hat-I,\nwhich is minus arcsine of this,",
    "start": "4276980",
    "end": "4285190"
  },
  {
    "text": "Q-hat-I-lambda over Pd. And we are done. That's all you\nneed to do for DOA.",
    "start": "4285190",
    "end": "4291730"
  },
  {
    "text": "Let's look at\nvisualization of it. One thing that can\nhappen, and you",
    "start": "4291730",
    "end": "4298120"
  },
  {
    "text": "can ask why we\ndidn't talk about it, is, in here when\nwe were saying, OK,",
    "start": "4298120",
    "end": "4303429"
  },
  {
    "text": "where we have a peak in\nthe range-Doppler map that corresponds to a target, well,\nwho says it's just one target?",
    "start": "4303430",
    "end": "4310570"
  },
  {
    "text": "What if you have\nmultiple targets which have the same\nrange and same velocity? I mean, that can happen\na lot, especially",
    "start": "4310570",
    "end": "4317170"
  },
  {
    "text": "for stationary targets. You can have a whole bunch of\ntargets all at velocity zero, and they're\nequidistant from you.",
    "start": "4317170",
    "end": "4323920"
  },
  {
    "text": "But they're at\ndifferent DOA angles. Would something break\ndown in that case?",
    "start": "4323920",
    "end": "4330020"
  },
  {
    "text": "It turns out no, just naturally\nour algorithm handles it. And what happens\nin that case if you",
    "start": "4330020",
    "end": "4335469"
  },
  {
    "text": "have multiple targets in the\nsame range-Doppler cell, when you do your third FFT\nin the DOA direction,",
    "start": "4335470",
    "end": "4342850"
  },
  {
    "text": "you get multiple peaks in it. And each peak gives you\nthe angle or the DOA of one",
    "start": "4342850",
    "end": "4349090"
  },
  {
    "text": "of the targets. Here's what it looks like. So basically, again, the math\ngets, I know, very messy.",
    "start": "4349090",
    "end": "4355630"
  },
  {
    "text": "But at the end of the day, the\nalgorithm is extremely simple. You just take your signal after\nyour range-Doppler processing",
    "start": "4355630",
    "end": "4363280"
  },
  {
    "text": "and after you have done\nyour target detection. So now we're only looking\nat target indices. That's why it's\nL-hat-I, K-hat-I.",
    "start": "4363280",
    "end": "4369850"
  },
  {
    "text": "So you're looking at\nI-th target, essentially. You do P point FFT\non it, and then",
    "start": "4369850",
    "end": "4374889"
  },
  {
    "text": "that converts your antenna\nindex to a DOA index Q. And then you find\nthe peaks of that.",
    "start": "4374890",
    "end": "4381910"
  },
  {
    "text": "And then this Q-hat-IJs, those\ngive you basically the DOAs",
    "start": "4381910",
    "end": "4389020"
  },
  {
    "text": "of all the targets\nthat correspond to that range and velocity. So in this case, we\nhad three targets,",
    "start": "4389020",
    "end": "4396010"
  },
  {
    "text": "all with the same\nrange and velocity. And that's fine.",
    "start": "4396010",
    "end": "4401050"
  },
  {
    "text": "So how do we detect\nthe targets again? You have another magnitude FFT,\nand you want to find the peaks.",
    "start": "4401050",
    "end": "4406840"
  },
  {
    "text": "You can do your\nfixed thresholding or you can do your\nCFAR thresholding.",
    "start": "4406840",
    "end": "4414790"
  },
  {
    "text": "Pick your favorite way of-- that's a bad drawing of\nCFAR, but you get the idea.",
    "start": "4414790",
    "end": "4420670"
  },
  {
    "text": "You find the peaks\nafter the third FFT, and you're basically done.",
    "start": "4420670",
    "end": "4426190"
  },
  {
    "text": "That's your full\nradar DSP pipeline. So let's summarize everything\nwe talked about for FMCW radar.",
    "start": "4426190",
    "end": "4437840"
  },
  {
    "text": "And then I'll take questions. But this is end-to-end\nimaging radar DSP pipeline",
    "start": "4437840",
    "end": "4443870"
  },
  {
    "text": "from ADC samples to the\nfully processed radar cube which you can visualize\nas a point cloud or an image.",
    "start": "4443870",
    "end": "4451590"
  },
  {
    "text": "So how does it work? remember, with this\nconcept that we introduced of\nvirtual arrays, you",
    "start": "4451590",
    "end": "4458030"
  },
  {
    "text": "have P virtual\nreceiver antennas. ",
    "start": "4458030",
    "end": "4463199"
  },
  {
    "text": "So antenna number one to P2. And each will give you, after\ndown-conversion and IF signal,",
    "start": "4463200",
    "end": "4469770"
  },
  {
    "text": "so you get SIF1 all\nthe way to SIFP, each coming from one of\nyour virtual antennas.",
    "start": "4469770",
    "end": "4476310"
  },
  {
    "text": "And each has two\nindices because we are working with frames of data. And each frame has\nm chirps in it.",
    "start": "4476310",
    "end": "4484290"
  },
  {
    "text": "So little m is the chirp\nindex, and little n is the ADC sample index.",
    "start": "4484290",
    "end": "4490080"
  },
  {
    "text": "And this third one, that's\nP, is our antenna index. So we need three\nindices for our data.",
    "start": "4490080",
    "end": "4497590"
  },
  {
    "text": "So after you receive this\ndata, so here is DSP start.",
    "start": "4497590",
    "end": "4504159"
  },
  {
    "text": "The first thing you do is\nyou rearrange your data into a cube, and that's\nwhat is drawn here.",
    "start": "4504160",
    "end": "4512120"
  },
  {
    "text": "So you rearrange it into a cube.  So one dimension is\nyour chirps index m.",
    "start": "4512120",
    "end": "4519640"
  },
  {
    "text": "One direction-- dimension\nis your ADC sample index n. So this is called\nthe fast time axis,",
    "start": "4519640",
    "end": "4527020"
  },
  {
    "text": "and this is called the slow time\naxis in the radar literature. And then your third dimension\nis the antenna index.",
    "start": "4527020",
    "end": "4533680"
  },
  {
    "text": "So each little cell in this data\ncube, at the end of the day, gives you one ADC sample.",
    "start": "4533680",
    "end": "4540430"
  },
  {
    "text": "That's one ADC sample that\nyou put into one of those.",
    "start": "4540430",
    "end": "4545820"
  },
  {
    "text": "And the entire cube\nis one frame of data that you have just\nreordered into a cube.",
    "start": "4545820",
    "end": "4550950"
  },
  {
    "text": "So that-- now we can\nindex it with m, n, and P, each cell of that cube.",
    "start": "4550950",
    "end": "4556980"
  },
  {
    "text": "Then you do your\nrange processing. So that's FFTs along the rows.",
    "start": "4556980",
    "end": "4562170"
  },
  {
    "text": "And you should do\nit for every slice. slice by slice, row by\nrow, you do your FFTs.",
    "start": "4562170",
    "end": "4568890"
  },
  {
    "text": "That's your range processing. So that would convert this\nn index to a range index K.",
    "start": "4568890",
    "end": "4576389"
  },
  {
    "text": "Then you do your\nDoppler processing. That's FFTs along the columns.",
    "start": "4576390",
    "end": "4583630"
  },
  {
    "text": "But, again, you should\ndo it for every slice. You go do your endpoint FFTs.",
    "start": "4583630",
    "end": "4590349"
  },
  {
    "text": "That would convert your chirp\nindex to a velocity index L.",
    "start": "4590350",
    "end": "4596260"
  },
  {
    "text": "So this is our\npreprocessed data cube now, big SIF of L, K, and P. Then\nyou do your target detection.",
    "start": "4596260",
    "end": "4605440"
  },
  {
    "text": "Pick your favorite algorithm. I would probably do CFAR. What this does is that among\nall the possible Ls and Ks,",
    "start": "4605440",
    "end": "4612730"
  },
  {
    "text": "it just gives you\nthe ones that we think there is target in them. So it just gives you\nthe L-hat-I. K-hat-I",
    "start": "4612730",
    "end": "4618100"
  },
  {
    "text": "with actual targets in it. Now for this part, for target\ndetection, the 2D CFAR,",
    "start": "4618100",
    "end": "4624969"
  },
  {
    "text": "just so that you\ndon't need to do it-- remember, we get a P number\nof range-Doppler maps.",
    "start": "4624970",
    "end": "4631420"
  },
  {
    "text": "Each slice, antenna slice,\ngives you a range-Doppler map. Something that is\nvery common here,",
    "start": "4631420",
    "end": "4636850"
  },
  {
    "text": "just so that you don't need to\ndo per slice target detection, is that you can, after you do\nyour range-Doppler processing,",
    "start": "4636850",
    "end": "4645280"
  },
  {
    "text": "you can average all those\nrange-Doppler processed FFTs, or the magnitudes of\nthem, across the antennas.",
    "start": "4645280",
    "end": "4652630"
  },
  {
    "text": "Just so it's clear\nwhat I'm talking about is, in this picture\nhere, you can",
    "start": "4652630",
    "end": "4658510"
  },
  {
    "text": "go average all these\nrange-Doppler maps together, or the amplitudes of them\ntogether, these CIFs.",
    "start": "4658510",
    "end": "4665093"
  },
  {
    "text": "Take the magnitude\nand average, then you get one average\nrange-Doppler map,",
    "start": "4665093",
    "end": "4670150"
  },
  {
    "text": "and you do your 2D CFAR on that. Because the idea is the targets,\nin terms of range and Doppler,",
    "start": "4670150",
    "end": "4676540"
  },
  {
    "text": "are the same regardless of\nwhich antenna you're looking at. So that's very common.",
    "start": "4676540",
    "end": "4682180"
  },
  {
    "text": "Not necessary but commonly done. It makes it more efficient. But at the end of the day, you\nfind your range and velocity",
    "start": "4682180",
    "end": "4689170"
  },
  {
    "text": "indices of your targets. You still have your\nantenna dimension. And then you do\nyour DOA processing.",
    "start": "4689170",
    "end": "4695900"
  },
  {
    "text": "And that's a P point FFT in\nthe third, basically, dimension",
    "start": "4695900",
    "end": "4701199"
  },
  {
    "text": "of the data cube. And that converts your,\nbasically, antenna index P to a DOA index Q.",
    "start": "4701200",
    "end": "4709290"
  },
  {
    "text": "OK, so now you have your\nS-tilde, I-hat-I. S-tilde-D IF of L-hat-I, K-hat-I Q, you still\nneed to do one more target DOA",
    "start": "4709290",
    "end": "4717940"
  },
  {
    "text": "detection to find\nwhich of these Qs correspond to actual\nDOAs of the targets.",
    "start": "4717940",
    "end": "4725450"
  },
  {
    "text": "That's another peak search. You can do a 1D CFAR. You can do a constant\nthresholding. Whatever you do,\nafter that, you pick",
    "start": "4725450",
    "end": "4733989"
  },
  {
    "text": "Q-hat-Is which you\nthink correspond to actual DOAs of the targets. Now you have,\nbasically, your DSP",
    "start": "4733990",
    "end": "4740980"
  },
  {
    "text": "is finished because you\nhave identified the velocity index, the range index, and\nthe DOA index of all targets.",
    "start": "4740980",
    "end": "4749920"
  },
  {
    "text": "So I here goes\nfrom 1 to k, where k is the total number of targets\nthat you have in the scene.",
    "start": "4749920",
    "end": "4756970"
  },
  {
    "text": "But usually you want to\nmap these from indices to physical\nquantities, like range in meters, radial velocity\nmeters per second,",
    "start": "4756970",
    "end": "4763930"
  },
  {
    "text": "angle in radians or degrees. So you have this final step,\nbut that's just a scaling.",
    "start": "4763930",
    "end": "4769180"
  },
  {
    "text": "We know how it's done. You take your L-hat-I\nand multiply it by C divided by FS or\nsomething like that.",
    "start": "4769180",
    "end": "4776930"
  },
  {
    "text": "But that just\nconverts your indices to actual range,\nvelocity, and DOA angles.",
    "start": "4776930",
    "end": "4782925"
  },
  {
    "text": "And then you're done. Then you decide how you\nwant to visualize it. One very common way is\nproduce a radar image",
    "start": "4782925",
    "end": "4789460"
  },
  {
    "text": "that is a point cloud. If you did a 2D-only\nazimuth-only DOA,",
    "start": "4789460",
    "end": "4796119"
  },
  {
    "text": "you get a 2D point cloud, or\nyou can do 3D point cloud. Very quickly, before\nwe quit for today,",
    "start": "4796120",
    "end": "4802550"
  },
  {
    "text": "here's another picture\nof another very high-level visual\nway of looking at it.",
    "start": "4802550",
    "end": "4807860"
  },
  {
    "text": "This is an example\nprocessed radar data cube. This was the scene. So there was just\none person walking.",
    "start": "4807860",
    "end": "4813220"
  },
  {
    "text": "And this is the already\nfully processed data cube. So the axes are velocity,\nrange, and azimuth angle.",
    "start": "4813220",
    "end": "4821590"
  },
  {
    "text": "We didn't have elevation. It was just a 2D radar. And then at this point,\nthere's many visualizations",
    "start": "4821590",
    "end": "4827620"
  },
  {
    "text": "you can generate. I mean, all of them\nare informative. But for instance,\nif you slice it",
    "start": "4827620",
    "end": "4835300"
  },
  {
    "text": "over the range and the azimuth\nor azimuth and velocity axes--",
    "start": "4835300",
    "end": "4842500"
  },
  {
    "text": "that's the yellow slice-- it\ngives you something, a 2D heat map, which is called a\nvelocity-angle heat map.",
    "start": "4842500",
    "end": "4849910"
  },
  {
    "text": "One axis is velocity. One axis is angle. And then the hot zone, that's\nbasically where your target is.",
    "start": "4849910",
    "end": "4855100"
  },
  {
    "text": "So you can find it's\nvelocity and angle. You can slice it. The red slice, for\ninstance, gives you",
    "start": "4855100",
    "end": "4861100"
  },
  {
    "text": "the so-called\nrange-velocity heat map. Again, it's all the\nsame information. You're just visualizing\nit differently.",
    "start": "4861100",
    "end": "4867560"
  },
  {
    "text": "So you can find your target\nvelocity and range from it. And the black slice is the\nrange and azimuth angle.",
    "start": "4867560",
    "end": "4876280"
  },
  {
    "text": "So you find the\nrange of the target and the azimuth\nangle of the target. From this, what you can do is\nyou can reduce the point cloud.",
    "start": "4876280",
    "end": "4883860"
  },
  {
    "text": "What you do is you basically--\nso this is-- basically it gives you your target\ncoordinates in polar.",
    "start": "4883860",
    "end": "4891730"
  },
  {
    "text": "So it gives you an R and theta. So then you can go and\nput a point in a 2D,",
    "start": "4891730",
    "end": "4898810"
  },
  {
    "text": "or you can convert\nthat to Cartesian, if you want with doing R\ncosine theta, R sine theta.",
    "start": "4898810",
    "end": "4906770"
  },
  {
    "text": "And that would be like the\nxy-coordinates of your target. I might have mixed\nup sine and cosine.",
    "start": "4906770",
    "end": "4912280"
  },
  {
    "text": "You can figure it out. But then you find xy,\nand then put a dot there. If you have more\nthan one target,",
    "start": "4912280",
    "end": "4918490"
  },
  {
    "text": "then it makes for a more\ninteresting point cloud. But that's it that's\nthe full DSP of radar.",
    "start": "4918490",
    "end": "4926560"
  },
  {
    "text": "At the end of the\nday, it's really-- if you were to code all of this,\neverything we talked about,",
    "start": "4926560",
    "end": "4932650"
  },
  {
    "text": "and you would do it in homework,\ntoo, pretty much from scratch, you would see it becomes\nlike five lines of code",
    "start": "4932650",
    "end": "4937840"
  },
  {
    "text": "because it's just two FF--\nthree FFTs and two thresholds. It's literally five\nlines of Python code.",
    "start": "4937840",
    "end": "4942970"
  },
  {
    "text": "I mean, I know the math became\nkind of dense and complicated. But really, really,\nat the end of the day,",
    "start": "4942970",
    "end": "4949160"
  },
  {
    "text": "it's very simple what's\nextremely important, and I hope you go with that\ntakeaway from the class,",
    "start": "4949160",
    "end": "4956440"
  },
  {
    "text": "is all the assumptions\nwe made along the way and also the fact that\nFFT, for instance,",
    "start": "4956440",
    "end": "4963080"
  },
  {
    "text": "is just one implementation\nof an algorithm for finding frequencies. There's better, more\nsophisticated algorithms",
    "start": "4963080",
    "end": "4969910"
  },
  {
    "text": "you could do. And that would hugely improve\nthe performance of radar.",
    "start": "4969910",
    "end": "4975220"
  },
  {
    "text": "Questions? All right, see you next time.",
    "start": "4975220",
    "end": "4981150"
  },
  {
    "start": "4981150",
    "end": "4985000"
  }
]