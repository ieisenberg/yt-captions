[
  {
    "text": "All right. We're going to go ahead and get started. Um, uh, before I get into the technical stuff,",
    "start": "5180",
    "end": "10625"
  },
  {
    "text": "we'll do a little bit of logistics. Um, so, we are starting these things called sessions.",
    "start": "10625",
    "end": "15790"
  },
  {
    "text": "Um, we announced them on Piazza. If you didn't, uh, if you're not getting our Piazza stuff, definitely make sure you've signed up for Piazza, or send us a note.",
    "start": "15790",
    "end": "23035"
  },
  {
    "text": "Um, the sessions are designed to go into the material a little bit deeper, also to discuss something about the homework.",
    "start": "23035",
    "end": "28750"
  },
  {
    "text": "Um, these are structured session as opposed to an office hour, where you can ask one-on-one questions about the homework .",
    "start": "28750",
    "end": "34770"
  },
  {
    "text": "the sessions are designed to go a little bit deeper into the material, and they were prompted both based on some colleagues of mine,",
    "start": "34770",
    "end": "41290"
  },
  {
    "text": "feedback of how much students have liked them in their other classes, as well as some request from last year for opportunities to go deeper into the material.",
    "start": "41290",
    "end": "48579"
  },
  {
    "text": "So, we've announced these on Piazza. The idea is that you will sign up for a session. They are optional, you don't have to do them.",
    "start": "48580",
    "end": "55505"
  },
  {
    "text": "We will be giving one percent extra credit for attending them if you attend a sufficient number of them. Um, the details for that has also been announced,",
    "start": "55505",
    "end": "62960"
  },
  {
    "text": "um, and I, I think that's true. If I've got that right, just email me. I think that's been announced also on Piazza.",
    "start": "62960",
    "end": "68355"
  },
  {
    "text": "Um, so, if you go to Piazza, there's a number of different sessions you can sign up for. The point of signing up for them is to make sure that we have room capacity,",
    "start": "68355",
    "end": "75034"
  },
  {
    "text": "but I'm pretty sure we'll be able to accommodate almost any session you want to go to. The last session will be done via Zoom,",
    "start": "75035",
    "end": "81229"
  },
  {
    "text": "and it's particularly targeted at SCPD students, but anyone is welcome to do it. Um, the way that we'll be keeping",
    "start": "81230",
    "end": "87680"
  },
  {
    "text": "track of whether or not people are going to sessions or not is, we will have a code that's, uh, mentioned inside of the,",
    "start": "87680",
    "end": "93740"
  },
  {
    "text": "the material, and so, then, you will just write in that code to indicate your attendance. Um, we'll record the last session so that if, for some reason,",
    "start": "93740",
    "end": "101390"
  },
  {
    "text": "your schedule is such that you can't attend any of these but you want to participate in session, you can go through the material later and then",
    "start": "101390",
    "end": "107900"
  },
  {
    "text": "record that you attended it by using that code. And we'll be relying on the Stanford Honor Code,",
    "start": "107900",
    "end": "113360"
  },
  {
    "text": "that only people that are doing this will upload the codes. Somebody had any question about sessions and what those involve?",
    "start": "113360",
    "end": "120225"
  },
  {
    "text": "Again, they're optional, they're way to go deeper into the material. Um, some other people have really liked these sort of things.",
    "start": "120225",
    "end": "126660"
  },
  {
    "text": "You can see what you think, it's an experiment. All right.",
    "start": "126660",
    "end": "132810"
  },
  {
    "text": "Any questions about anything else outside of sessions? So, homework's been released, office hour is happening as usual this week.",
    "start": "132810",
    "end": "138855"
  },
  {
    "text": "Feel free to come talk to us or use Piazza for any questions that you have. All right. We're gonna go ahead and get started now then.",
    "start": "138855",
    "end": "145850"
  },
  {
    "text": "Um, as usual, I really appreciate it if you use your name whenever you're asking a [NOISE] question or making a comment.",
    "start": "145850",
    "end": "152180"
  },
  {
    "text": "So, today, we're gonna finally start to get into making decisions where we don't have a model of the world, and in particular, we are going to be focusing on model-free control.",
    "start": "152180",
    "end": "160640"
  },
  {
    "text": "[NOISE] So, the things that we're going be covering today is really focusing on how can an agent start",
    "start": "160640",
    "end": "166400"
  },
  {
    "text": "to be making good decisions when it doesn't know how the world works and it's not going to be explicitly constructing a model?",
    "start": "166400",
    "end": "172459"
  },
  {
    "text": "Um, and remember, a model, in this case, is going to be a reward and/or a dynamics model of the environment.",
    "start": "172460",
    "end": "179900"
  },
  {
    "text": "So, today, we're gonna be looking at methods that do not involve constructing a verbal, um, a dynamics or a reward model,",
    "start": "179900",
    "end": "185765"
  },
  {
    "text": "but it's just going to be directly learning from experience. [NOISE] So, um, [NOISE] before- we were mostly talking last time about,",
    "start": "185765",
    "end": "194720"
  },
  {
    "text": "well, maybe we don't know how the world works, we don't have these explicit dynamics and reward models, but we're going to be trying to evaluate a policy that was provided to us.",
    "start": "194720",
    "end": "201800"
  },
  {
    "text": "And now, we're going to be thinking about the real problems that often comes up in reinforcement learning, which is, how should an agent make decisions when they don't know how the world works,",
    "start": "201800",
    "end": "209360"
  },
  {
    "text": "and they still want to maximize [NOISE] their expected discounted sum of rewards.",
    "start": "209360",
    "end": "214470"
  },
  {
    "text": "So, when we think about sort of how good is the policy, as soon as we have information about how good a policy is,",
    "start": "215090",
    "end": "221990"
  },
  {
    "text": "then we can start to think about how do we learn a good policy instead. And, in fact, when we started off at the very start of the class,",
    "start": "221990",
    "end": "228150"
  },
  {
    "text": "we'd talked about how you would learn to make good decisions or how you would compute good decisions if you were given a model of the world.",
    "start": "228150",
    "end": "234650"
  },
  {
    "text": "And so, that's what we're gonna be going back to now. So, in particular, now,",
    "start": "234650",
    "end": "239760"
  },
  {
    "text": "we can think of starting to get at this issue of this optimization and exploration. We're still not going to get into generalization yet.",
    "start": "239760",
    "end": "246815"
  },
  {
    "text": "Um, this will be happening soon. Um, we've already seen this a little bit it came up with planning,",
    "start": "246815",
    "end": "253809"
  },
  {
    "text": "but now, we're going to start to think about how do we explore and how do we do optimization.",
    "start": "253809",
    "end": "260980"
  },
  {
    "text": "So, when we think about- well,",
    "start": "260980",
    "end": "267015"
  },
  {
    "text": "I, I think I'm just gonna go through more of these as we start to, to go into this area. So, um, again,",
    "start": "267015",
    "end": "272189"
  },
  {
    "text": "we're going to be thinking about how do we identify a policy that has a high expected discounted sum of rewards.",
    "start": "272190",
    "end": "277345"
  },
  {
    "text": "There's going to be delayed consequences, which means is, our agent takes actions that may not see the result",
    "start": "277345",
    "end": "282360"
  },
  {
    "text": "of whether or not those actions were good or bad for a while, and we're going to start to think about this exploration aspect.",
    "start": "282360",
    "end": "288620"
  },
  {
    "text": "Okay. So, let's start with, um,  you know, where these types of problems come up and where people model things when",
    "start": "289200",
    "end": "296340"
  },
  {
    "text": "we're thinking about Markov decision processes and maybe not building a model. So, I think probably one of the first really big examples of success for",
    "start": "296340",
    "end": "303590"
  },
  {
    "text": "doing reinforcement learning and doing it in this sort of model free way was for Backgammon, which was roughly 1994.",
    "start": "303590",
    "end": "310190"
  },
  {
    "text": "They trained an agent to play Backgammon, the board game, um, I- actually using the- a neural network.",
    "start": "310190",
    "end": "316660"
  },
  {
    "text": "Um, neural networks went sort of out of fashion for probably around 10, 15 years, and then came back, but in the early '90s,",
    "start": "316660",
    "end": "322410"
  },
  {
    "text": "people were using neural networks. Um, and, uh, Gerald Tesauro used it for Backgammon and got some very nice results,",
    "start": "322410",
    "end": "329010"
  },
  {
    "text": "and that was sort of one of the first demonstrations of reinforcement learning in kind of a larger setting that you could solve these sort of complicated games.",
    "start": "329010",
    "end": "335540"
  },
  {
    "text": "Um, many other g- problems can also be modeled in MDP, whether games or robots or customer ad selection or invasive species management.",
    "start": "335540",
    "end": "344795"
  },
  {
    "text": "Um, and in many of these cases, we don't know the models in, i- in advance. So, what we're going to be thinking about today is, um,",
    "start": "344795",
    "end": "351349"
  },
  {
    "text": "situations in particular, mostly here, where we think about the model being unknown, but if we can sample it.",
    "start": "351350",
    "end": "357785"
  },
  {
    "text": "But there are occasionally cases too [NOISE] where you do know the model, but it's [NOISE] really, really expensive.",
    "start": "357785",
    "end": "363685"
  },
  {
    "text": "So, for something like computational sustainability or climate modeling, you might be able to write down a good model of the world, but it's really,",
    "start": "363685",
    "end": "370699"
  },
  {
    "text": "really expensive to run because actually simulating the climate is really, really compete- really, really hard, and even then, your model will probably be about.",
    "start": "370700",
    "end": "377330"
  },
  {
    "text": "But I just- I raise this second point in the sense that when we mostly think about sort of",
    "start": "377330",
    "end": "382430"
  },
  {
    "text": "learning from the world, we think of a robot, like, running around in the world, and, and that being an expensive thing to do because",
    "start": "382430",
    "end": "388565"
  },
  {
    "text": "robots are taking real time to, to do this. But you can also think about agents that are learning to sort of interact with a simulator,",
    "start": "388565",
    "end": "396030"
  },
  {
    "text": "where that's also really costly. All right. So, what we're going to be thinking about mostly",
    "start": "396030",
    "end": "403190"
  },
  {
    "text": "today is what is known as on-policy learning, where we get direct experience about the world, [NOISE] and then,",
    "start": "403190",
    "end": "408590"
  },
  {
    "text": "we try to use it to estimate and evaluate a policy from that experience.",
    "start": "408590",
    "end": "413690"
  },
  {
    "text": "But we're also going to stock- start to talk more about off-policy learning, where we get data about the world and we use it",
    "start": "413690",
    "end": "420210"
  },
  {
    "text": "to [NOISE] estimate alternative ways of doing things. So, we can kind of combine experience from trying out different things,",
    "start": "420210",
    "end": "427430"
  },
  {
    "text": "to try to learn about something we didn't do by itself. And, um, this three thing's really important. So, I'm- all right.",
    "start": "427430",
    "end": "433020"
  },
  {
    "text": "The second thing is really important, so I'm just gonna talk about it briefly up here. So, imagine you have a case where,",
    "start": "433020",
    "end": "438290"
  },
  {
    "text": "say, there's only a single state for now, but it's like, you have a state S1, you do A1, you stay at S1, then you do A1.",
    "start": "438290",
    "end": "445245"
  },
  {
    "text": "Or you're, you're in S1, you do A2, so you're in S1, and then, you do A2. [NOISE] So, you'd like to be able to kind of",
    "start": "445245",
    "end": "452509"
  },
  {
    "text": "combine between these experiences so you could learn about doing this. [NOISE] even though you've never done that in the world.",
    "start": "452510",
    "end": "460445"
  },
  {
    "text": "You've never experienced that full trajectory, but you'd like to be able to sort of extrapolate from that, that prior experience.",
    "start": "460445",
    "end": "466580"
  },
  {
    "text": "So, [NOISE] this sort of policy would be an off pol- [NOISE] uh, an off-policy learning because it's different than the previous policies we've tried.",
    "start": "466580",
    "end": "476990"
  },
  {
    "text": "We'll go into that more when we think about Q-learning. All right. So, let's start with generalized policy iteration.",
    "start": "476990",
    "end": "483535"
  },
  {
    "text": "Okay. So, if we go back to policy iteration, we talked about that a couple lectures ago, and policy iteration, we originally saw it when we knew the model of the world.",
    "start": "483535",
    "end": "491935"
  },
  {
    "text": "So, it's a way for us to compute what was the right thing to do given- right thing meaning the policy that",
    "start": "491935",
    "end": "497600"
  },
  {
    "text": "maximizes our expected discounted sum of rewards. So, how do we do this when we know how the world works?",
    "start": "497600",
    "end": "502830"
  },
  {
    "text": "We're given our dynamics and reward model. In that case, we initialize some policy, probably randomly.",
    "start": "502830",
    "end": "508695"
  },
  {
    "text": "So, initializing, again, would mean that we'd said, pi of S equal to some A for all S,",
    "start": "508695",
    "end": "514544"
  },
  {
    "text": "and this is generally probably going to be chosen at random. [NOISE] Um, and then,",
    "start": "514545",
    "end": "520880"
  },
  {
    "text": "we did this policy evaluation procedure, where we first computed the current value of the policy,",
    "start": "520880",
    "end": "526610"
  },
  {
    "text": "and then, we updated the policy. So, we took whatever we had, and then,",
    "start": "526610",
    "end": "533240"
  },
  {
    "text": "we did this sort of one more thing, which you can think of as kinda doing one more Bellman backup, where we said, okay,",
    "start": "533240",
    "end": "539160"
  },
  {
    "text": "we're taking that V pi, we're plugging it in over to here, we're using the fact that we know the dynamics model and we know the reward model,",
    "start": "539160",
    "end": "546274"
  },
  {
    "text": "and we're computing this one-step updated pi prime. And we talked about the fact that when we do this,",
    "start": "546275",
    "end": "553040"
  },
  {
    "text": "we actually get monotonic policy improvement, [NOISE] which is sometimes referred to as a policy improvement theorem.",
    "start": "553040",
    "end": "564970"
  },
  {
    "text": "So, this procedure, when we're doing it with sort of, um, in this dy, uh,",
    "start": "564970",
    "end": "570290"
  },
  {
    "text": "in this case where we knew the dynamics model and we knew the reward model, um, would guarantee to always give us",
    "start": "570290",
    "end": "575795"
  },
  {
    "text": "a policy that was at least as good as the previous policy or better. Um, and, eventually, it was guaranteed to converge at least in",
    "start": "575795",
    "end": "583690"
  },
  {
    "text": "the case where we have finite states and actions because there's only a finite number of policies. So, in this case, there were only A,",
    "start": "583690",
    "end": "590365"
  },
  {
    "text": "to the S possible policies. So, we only need to do this whole procedure, at most A to the S times.",
    "start": "590365",
    "end": "595505"
  },
  {
    "text": "Each time, we're either picking a better policy, or we stayed in the same. And once you find the same policy, you're, you're done.",
    "start": "595505",
    "end": "601855"
  },
  {
    "text": "So, now, we want to do all of this, um, but we don't have access to the dynamics or reward model.",
    "start": "601855",
    "end": "608150"
  },
  {
    "text": "So, does anybody have any ideas of how we might be able to do the same thing now that we don't know the dynamics or reward?",
    "start": "608150",
    "end": "619970"
  },
  {
    "text": "We can maintain another- [NOISE] a matrix transition probabilities, uh, that you calculate [NOISE] it as you experience the world.",
    "start": "619970",
    "end": "626995"
  },
  {
    "text": "Yeah. The better suggestion is, well, what if we try to, uh, if I interpret correctly, wha- what if we try to basically estimate",
    "start": "626995",
    "end": "632640"
  },
  {
    "text": "the dynamics model and a reward model from the world, and then, we could use this to- you could still compute your,",
    "start": "632640",
    "end": "637769"
  },
  {
    "text": "your value function maybe using some of the methods we saw last time, um, and then, you could do this update as policy improvement using",
    "start": "637770",
    "end": "643790"
  },
  {
    "text": "your estimated dynamics and reward model of the world. That's a completely reasonable thing to do, um,",
    "start": "643790",
    "end": "648830"
  },
  {
    "text": "and may have any other idea of what we could do. Yeah, name and- Uh, I think instead of having to,",
    "start": "648830",
    "end": "654829"
  },
  {
    "text": "uh, uh, a compute a model, can we do away with model and directly try to estimate what is",
    "start": "654830",
    "end": "661580"
  },
  {
    "text": "the value of a particular state or state-action pair? Doing away with models",
    "start": "661580",
    "end": "670750"
  },
  {
    "text": "So estimate the value of a particular state. state and action?",
    "start": "670750",
    "end": "676185"
  },
  {
    "text": "Yes. Yes and with actually? Yes [OVERLAPPING]. What she actually said is exactly the path that we're going to look about today which is we're going to focus on model-free control.",
    "start": "676185",
    "end": "684120"
  },
  {
    "text": "So we're not going to directly estimate a model today. I'm actually personally very partial to models that can be a very simple efficient but for today we're not gonna",
    "start": "684120",
    "end": "691019"
  },
  {
    "text": "look at that and we're gonna do exactly what was just proposed which is we're gonna compute a Q and if we compute",
    "start": "691020",
    "end": "697720"
  },
  {
    "text": "a Q function which just to remember Q is always a function of state and action. We're gonna estimate the Q function directly and after we have",
    "start": "697720",
    "end": "705820"
  },
  {
    "text": "that then we can do policy improvement directly using that Q function. So how would we do that?",
    "start": "705820",
    "end": "712060"
  },
  {
    "text": "So this is Monte Carlo for on policy Q evaluation and it's gonna look very similar to Monte Carlo for on policy value evaluation.",
    "start": "712060",
    "end": "721150"
  },
  {
    "text": "Um but we have to make a couple modifications. So before, if we were doing this for V,",
    "start": "721150",
    "end": "726279"
  },
  {
    "text": "I'm just gonna write it to kind of contrast. So for V we just had a count of the number of states.",
    "start": "726280",
    "end": "731515"
  },
  {
    "text": "Now we have a count of the number of state action pairs. Um before we could just keep track of G here um which can",
    "start": "731515",
    "end": "740200"
  },
  {
    "text": "be the sum of previous rewards we've seen across all episodes for G of S. Now we're gonna do that for S,",
    "start": "740200",
    "end": "747144"
  },
  {
    "text": "A and then now we're gonna end up having a value function.",
    "start": "747145",
    "end": "752200"
  },
  {
    "text": "We're gonna have a Q pi. So essentially almost everywhere where we'd just had S before now we have S, A and then it's gonna look very similar.",
    "start": "752200",
    "end": "759595"
  },
  {
    "text": "So we're gonna assume that we're still provided a policy, we can sample an episode and then we compute",
    "start": "759595",
    "end": "765505"
  },
  {
    "text": "GIT for every single time step and that remember now is gonna, I mean it was before but we're gonna to think about the fact that it was",
    "start": "765505",
    "end": "773230"
  },
  {
    "text": "also associated with a particular state and a particular action for that time step and then for every state action pair instead of just state visited in the",
    "start": "773230",
    "end": "780850"
  },
  {
    "text": "episode either for every first time we saw that state action pair or every time we saw that state action pair,",
    "start": "780850",
    "end": "787149"
  },
  {
    "text": "we can always, just like before we can either have first visit or every visit. There we're just gonna update our counts update our Sum",
    "start": "787150",
    "end": "794650"
  },
  {
    "text": "of Total Rewards and then estimate our Q function. It's basically exactly the same as before",
    "start": "794650",
    "end": "801250"
  },
  {
    "text": "except that now we're doing everything over state action pairs.",
    "start": "801250",
    "end": "804890"
  },
  {
    "text": "Now once we have that now policy improvement is even simpler than before.",
    "start": "807210",
    "end": "812410"
  },
  {
    "text": "So we're given this estimate of the Q function and now we can just directly take an arg max over it.",
    "start": "812410",
    "end": "819350"
  },
  {
    "text": "So we define our new policy to simply be arg max of the previous one.",
    "start": "819350",
    "end": "825009"
  },
  {
    "text": "Alright so did anybody see any problems with doing this so far for the type of policies we've been thinking about in the class?",
    "start": "826620",
    "end": "834325"
  },
  {
    "text": "So far we've been thinking about mostly policies but are all deterministic which means that per,",
    "start": "834325",
    "end": "840010"
  },
  {
    "text": "there are mapping from states to actions and we've been thinking about cases where this is um a deterministic mapping.",
    "start": "840010",
    "end": "846970"
  },
  {
    "text": "So we always pick a particular action for a particular state. Yeah in the back and name first please. Oh what's your name?",
    "start": "846970",
    "end": "852700"
  },
  {
    "text": "  Oh yeah but what's the problem the problem is we're never",
    "start": "852700",
    "end": "858610"
  },
  {
    "text": "exploring which is correct but what's the problem with not exploring? We only sample one path over and over again and we never",
    "start": "858610",
    "end": "864610"
  },
  {
    "text": "actually learned anything about the rest of the world that we don't see. So we don't know whether there's a better policy.",
    "start": "864610",
    "end": "869935"
  },
  {
    "text": "So what he is saying that maybe we're only going to sample one path. I think what he means more than that is so you can",
    "start": "869935",
    "end": "875830"
  },
  {
    "text": "still sample different paths because your state space can be stochastic but you are only gonna ever try one action from one state.",
    "start": "875830",
    "end": "882415"
  },
  {
    "text": "So you're never gonna learn about what it would be like if you took A2 instead of A1 in that state which means that",
    "start": "882415",
    "end": "888070"
  },
  {
    "text": "when you're doing this for any particular state you'll only see one corresponding action.",
    "start": "888070",
    "end": "894580"
  },
  {
    "text": "So the time whenever you see state S1 the only time the only action you'll see will be A1 or whatever your policy says to do there.",
    "start": "894580",
    "end": "902200"
  },
  {
    "text": "Which means that you're not gonna have any information about doing anything else there which means your policy improvements is gonna be pretty boring because you're",
    "start": "902200",
    "end": "909310"
  },
  {
    "text": "not gonna get any other information about things you should be doing instead. So we're going to have to do some form of exploration essentially now,",
    "start": "909310",
    "end": "915700"
  },
  {
    "text": "we are gonna have to start to have some sort of stochasticity in our policy or there needs to be changing over time but we can actually try",
    "start": "915700",
    "end": "922720"
  },
  {
    "text": "different things even from the same state and know what to do.Yes name first. My name is . Do we know the whole action space beforehand?",
    "start": "922720",
    "end": "930145"
  },
  {
    "text": "Great question.  question is do we know the whole action space beforehand? Yeah we're gonna assume that we do for at least all this lecture and in general yeah.",
    "start": "930145",
    "end": "938230"
  },
  {
    "text": "Since you've made the action initially have high values so",
    "start": "938230",
    "end": "943329"
  },
  {
    "text": "then after it's computed is probably computed took it low so the next time you see it you would try to other actions?",
    "start": "943330",
    "end": "948580"
  },
  {
    "text": "has made a very nice suggestion so that relates to how we're initializing the Qs.",
    "start": "948580",
    "end": "954645"
  },
  {
    "text": "So one thing you can do which is what he just suggested is you can initialize your Q function really",
    "start": "954645",
    "end": "961000"
  },
  {
    "text": "high everywhere to basically do what's known as optimistic initialization um and that actually can be a really useful strategy for",
    "start": "961000",
    "end": "968050"
  },
  {
    "text": "exploration and if you initialize it in a particular way then you can have a provable guarantee on",
    "start": "968050",
    "end": "975010"
  },
  {
    "text": "how much data you're going to need in order to converge to the optimal policy. So optimistic initialization is often",
    "start": "975010",
    "end": "980890"
  },
  {
    "text": "a really good thing to do to be a little bit careful of how you initialize things like what those value should be but generally empirically it's really good.",
    "start": "980890",
    "end": "987880"
  },
  {
    "text": "And formally it can be very good to. We're not gonna talk about Optimistic initialization today but we will later in the class or talk about optimization.",
    "start": "987880",
    "end": "995620"
  },
  {
    "text": "So doesn't really on the Markov assumption to be able to estimate Q right.",
    "start": "995620",
    "end": "1000960"
  },
  {
    "text": "Yes. But my question is whenever we're defining the policy, we only define it in terms of the state,",
    "start": "1000960",
    "end": "1006915"
  },
  {
    "text": "and if the reward that you get from the state depends on officially you have, then that brings the Markov assumption in like even sorry,",
    "start": "1006915",
    "end": "1016230"
  },
  {
    "text": "even though the reward is not Markov then your policy will act you we're defining a policy as if it were.",
    "start": "1016230",
    "end": "1023625"
  },
  {
    "text": "Yeah so your real world may or may not be",
    "start": "1023625",
    "end": "1028650"
  },
  {
    "text": "Markov all the policies we're talking about right now is assuming a world as Markov. The policies are only mappings from current state to action.",
    "start": "1028650",
    "end": "1036870"
  },
  {
    "text": "They are not a function of history. So those may or may not work well because your real-world may or may not be",
    "start": "1036870",
    "end": "1043500"
  },
  {
    "text": "an MDP and if it's not then you're considering essentially restricted policy class. Considering only mappings from the immediate state to the action and if you,",
    "start": "1043500",
    "end": "1052184"
  },
  {
    "text": "what you should do really depends on the whole history then you might not make good decisions. Good point.",
    "start": "1052185",
    "end": "1057960"
  },
  {
    "text": "Okay so this is sort of how the basic way you would extend Monte Carlo to be able to start to",
    "start": "1057960",
    "end": "1063330"
  },
  {
    "text": "estimate Q and once you have that you could do policy improvement but now it's clear that we need to do something in terms of how we should get- gather experience so we",
    "start": "1063330",
    "end": "1071010"
  },
  {
    "text": "can actually improve when we tried to do this policy improvement um. Because now we don't know how the real dynamics of the world work.",
    "start": "1071010",
    "end": "1079005"
  },
  {
    "text": "So we need to do some with some sort of interleaving of policy evaluation and",
    "start": "1079005",
    "end": "1084300"
  },
  {
    "text": "improvement and we also need to think about how we're doing this exploration aspect.",
    "start": "1084300",
    "end": "1090420"
  },
  {
    "text": "So in general it might seem a little bit subtle.",
    "start": "1090420",
    "end": "1098520"
  },
  {
    "text": "So we've already got one nice suggestion from  like maybe you could initialize everything optimistically and maybe that would help you explore.",
    "start": "1098520",
    "end": "1104534"
  },
  {
    "text": "It does, but in general it might seem like it's a little bit hard of how are we going to get this good estimate",
    "start": "1104535",
    "end": "1110910"
  },
  {
    "text": "of Q pi because what Q pi does is it says um if you wanted a really good estimate of Q pi of S,A for all S and all A it would",
    "start": "1110910",
    "end": "1120120"
  },
  {
    "text": "say you kinda need to get to every different state take every possible action and then follow pi from then onwards and so how do I make sure",
    "start": "1120120",
    "end": "1127080"
  },
  {
    "text": "that I visit all of those things and what we're gonna talk about today is a very simple strategy to make",
    "start": "1127080",
    "end": "1133200"
  },
  {
    "text": "sure that you visit things which works generally under some mild conditions about the underlying process.",
    "start": "1133200",
    "end": "1140740"
  },
  {
    "text": "So the really simple idea is to balance exploration and exploitation by being random some of the time.",
    "start": "1141740",
    "end": "1149235"
  },
  {
    "text": "So let's imagine that there's a finite number of actions we're gonna call that cardinality A, um,",
    "start": "1149235",
    "end": "1154320"
  },
  {
    "text": "here then e-greedy policy with respect to a state action value is as follows.",
    "start": "1154320",
    "end": "1159615"
  },
  {
    "text": "With probability one minus Epsilon,",
    "start": "1159615",
    "end": "1165389"
  },
  {
    "text": "you're going to take the best action according to your current state action value function and",
    "start": "1165389",
    "end": "1173760"
  },
  {
    "text": "else then you're gonna take an action A with probability Epsilon divided by A.",
    "start": "1173760",
    "end": "1185755"
  },
  {
    "text": "So with probability one minus Epsilon you take what you currently think is best according to your group or your estimate of the",
    "start": "1185755",
    "end": "1192210"
  },
  {
    "text": "Q function and with probability Epsilon you select one of the other actions.",
    "start": "1192210",
    "end": "1198789"
  },
  {
    "text": "So it's a pretty simple strategy and the nice thing is that, it's still sufficient.",
    "start": "1200290",
    "end": "1206160"
  },
  {
    "text": "But before we do that why don't we just do a brief example to make sure that we're on the same page.",
    "start": "1206470",
    "end": "1211505"
  },
  {
    "text": "So let's think about how we would do Monte Carlo for on policy Q evaluation for our little Mars rover.",
    "start": "1211505",
    "end": "1217535"
  },
  {
    "text": "So now our Mars Rover is gonna have two things that can do instead of we're gonna be reasoning more about that.",
    "start": "1217535",
    "end": "1224870"
  },
  {
    "text": "So I've written down the reward function here. I'm saying that if you take action A1 you get",
    "start": "1224870",
    "end": "1230130"
  },
  {
    "text": "the same rewards we've been talking about before which is 1, 0, 0, 0, 0, 0 plus 10.",
    "start": "1230130",
    "end": "1235170"
  },
  {
    "text": "And now I'm changing it I'm saying well you're action does -- your rewards do depend on your state and",
    "start": "1235170",
    "end": "1240510"
  },
  {
    "text": "the action you take and so the action for A2 is now going to be 0 everywhere and then you get a plus five at the end",
    "start": "1240510",
    "end": "1247005"
  },
  {
    "text": "and gamma is one and let's assume that our current greedy policy is you take",
    "start": "1247005",
    "end": "1253800"
  },
  {
    "text": "action A1 everywhere and that we're using an Epsilon of 0.5. And we sample a trajectory from an e-greedy policy.",
    "start": "1253800",
    "end": "1261080"
  },
  {
    "text": "And again what an e-greedy policy means here is I set Epsilon equal to 0.5 which means that half the time we're",
    "start": "1261080",
    "end": "1267800"
  },
  {
    "text": "gonna take our current greedy policy of action A1 and the other half the time we're going to either take A1 or A2.",
    "start": "1267800",
    "end": "1275140"
  },
  {
    "text": "So what that would yield as an example would be a trajectory such as state three action A1 0, state two.",
    "start": "1275140",
    "end": "1282855"
  },
  {
    "text": "And now this is a case where we're sampling randomly. So we flipped a coin.",
    "start": "1282855",
    "end": "1287985"
  },
  {
    "text": "We said oh this time I'm gonna be random. Then I have to flip a coin again to see whether I'm taking an action A1 or A2 and I took A2 there.",
    "start": "1287985",
    "end": "1294030"
  },
  {
    "text": "I got a reward of 0 and then the rest of trajectory as follows and my question to you and feel free to talk to a neighbor of",
    "start": "1294030",
    "end": "1302490"
  },
  {
    "text": "course is what is now the Q estimate for all states for both action A1 and action A2 at the end of this trajectory using Monte Carlo estimates?",
    "start": "1302490",
    "end": "1313000"
  },
  {
    "text": "So we're doing first visit in this case.",
    "start": "1313000",
    "end": "1397128"
  },
  {
    "text": "Yeah. Uh, [NOISE] I have a question about the action we choose on the Epsilon table.",
    "start": "1397128",
    "end": "1402543"
  },
  {
    "text": "Yeah. Uh, is it important when- what would the actions on policies ,",
    "start": "1402543",
    "end": "1410530"
  },
  {
    "text": "or should we pass in that action",
    "start": "1410530",
    "end": "1417820"
  },
  {
    "text": "question is whether or not when you hit, uh, now do something random, whether you should include the action that you'll",
    "start": "1417820",
    "end": "1423610"
  },
  {
    "text": "be taking normally if you're being greedy. Um, you could. In some ways, that's like just picking a different Epsilon.",
    "start": "1423610",
    "end": "1429470"
  },
  {
    "text": "Yeah. I hear less talking than normal, so that they may have any clarification questions about this or,",
    "start": "1429720",
    "end": "1436400"
  },
  {
    "text": "or [NOISE] or are there questions? Good. [LAUGHTER] Sorry. I have an idea.",
    "start": "1437640",
    "end": "1443289"
  },
  {
    "text": "Okay. Yeah. So, um, uh, if everybody's ready to ask yourselves.So , what, what did you guys think?",
    "start": "1443290",
    "end": "1448750"
  },
  {
    "text": "Uh, so, you will have in this case S3,",
    "start": "1448750",
    "end": "1454540"
  },
  {
    "text": "well , so everything that you did not, every state of action pair you did not see will remain zero.",
    "start": "1454540",
    "end": "1461560"
  },
  {
    "text": "Yeah. And at a particular, uh Q of S3, A1 will be zero, cause you saw that once and reduce that to zero,",
    "start": "1461560",
    "end": "1468085"
  },
  {
    "text": "Q of S2h will also be zero, Q of S3A1 will be zero, and then, the only one that will be non-zero will be Q of S1, A1,",
    "start": "1468085",
    "end": "1475300"
  },
  {
    "text": "which in this case will be 1. Because you saw it once, and the reward that you got when you saw it was 1.",
    "start": "1475300",
    "end": "1482530"
  },
  {
    "text": "That's one answer. Anybody with a different answer? so,",
    "start": "1482530",
    "end": "1492730"
  },
  {
    "text": "uh, all of the state action pairs that we've seen will be one, and all other state action pairs will be zero.",
    "start": "1492730",
    "end": "1499270"
  },
  {
    "text": "That's another answer. So what, uh,  was say would be right for the TD case.",
    "start": "1499270",
    "end": "1505210"
  },
  {
    "text": "Okay. What you were saying would have been right for last week, uh, or if yesterday, or, or Monday. Any else who may have a third answer?",
    "start": "1505210",
    "end": "1512300"
  },
  {
    "text": "Could you repeat what the second- the second choice was? The first choice is that we only update, um, S1, A1.",
    "start": "1515640",
    "end": "1523000"
  },
  {
    "text": "The second choice is that everything that we saw will now be 1, and maybe I misunderstood over there. So we're gonna have two different um,",
    "start": "1523000",
    "end": "1529705"
  },
  {
    "text": "we have two vectors now. So we have Q of A1, and we have Q of A2,",
    "start": "1529705",
    "end": "1535465"
  },
  {
    "text": "and they're not gonna look identical. So, sometimes we take action A1,",
    "start": "1535465",
    "end": "1540745"
  },
  {
    "text": "and sometimes we take action A2, and we can only update what we saw the returns for the action we took.",
    "start": "1540745",
    "end": "1548155"
  },
  {
    "text": "So what actions do we take for S3?",
    "start": "1548155",
    "end": "1552890"
  },
  {
    "text": "A1. Just A1, right? So that means for those ones, for S3 it's gonna be 1,",
    "start": "1553530",
    "end": "1558804"
  },
  {
    "text": "and that for Q of S3, A1, so I'll fill in all the ones that are zero, one, two, three, four.",
    "start": "1558805",
    "end": "1565165"
  },
  {
    "text": "Um, do we ever take A2 in S3? No. So that also has to be zero,",
    "start": "1565165",
    "end": "1571090"
  },
  {
    "text": "cause we didn't ever start there, take action A2, and get a return. Uh, what about for,",
    "start": "1571090",
    "end": "1576340"
  },
  {
    "text": "what action do we take from S2? Right. So for that one, we get a 1.",
    "start": "1576340",
    "end": "1583820"
  },
  {
    "text": "So we basically, uh, distributing your experience. So now if you were going to take a max over those,",
    "start": "1587370",
    "end": "1593125"
  },
  {
    "text": "then you would get the same thing that we saw last time for Monte Carlo, which would be 11100000 to the end,",
    "start": "1593125",
    "end": "1599440"
  },
  {
    "text": "um, but here we- we're subdividing our samples. So, you only get to get an experience for the action that you actually took in the state.",
    "start": "1599440",
    "end": "1607674"
  },
  {
    "text": "And because we're in the Monte Carlo case, we'll see the TD case or, Q-learning we'll call it later, um, then we get to add up all the rewards to the end of the episode.",
    "start": "1607675",
    "end": "1616825"
  },
  {
    "text": "So G here is gonna be the sum of all these steps, and I didn't speci- oh, I did. Good. And we're keeping Gamma equal to 1 here just",
    "start": "1616825",
    "end": "1624160"
  },
  {
    "text": "to make all the math. Just adding. Yeah? Should we just [OVERLAPPING]. Sorry.",
    "start": "1624160",
    "end": "1629320"
  },
  {
    "text": "Can just be one half for Q S1A1 or in Q S3A1?",
    "start": "1629320",
    "end": "1641000"
  },
  {
    "text": "Uh, is talking about whether or not if we did every visit, if anything would change here. [NOISE] Excuse me. It would not change in this case, because, um,",
    "start": "1641000",
    "end": "1647440"
  },
  {
    "text": "both times when you visited S3, the sum of rewards to the end of the episode was 1. So you'd have two counts of 1,",
    "start": "1647440",
    "end": "1653440"
  },
  {
    "text": "and then we divide by 2. It da- it can actually be different, but it's mostly different if you got like a different sum of",
    "start": "1653440",
    "end": "1660160"
  },
  {
    "text": "rewards from then to the end of the episode. Yes? So is [OVERLAPPING]. Remind me [OVERLAPPING].   Yeah. Isn't that?",
    "start": "1660160",
    "end": "1669730"
  },
  {
    "text": "Maybe I misunderstood. Yeah. So, I thought we were supposed to say that everything was, and I missed that. Did, did you say that that was different for the two actions?",
    "start": "1669730",
    "end": "1676285"
  },
  {
    "text": "That was one for in the projectory, um, zero.",
    "start": "1676285",
    "end": "1681360"
  },
  {
    "text": "I understand. Sorry about that. Okay.",
    "start": "1681360",
    "end": "1687700"
  },
  {
    "text": "Okay. So now we're gonna show formally that this does the right thing. So, um, we're gonna show provably",
    "start": "1688670",
    "end": "1696390"
  },
  {
    "text": "that like what we did before when we were doing policy improvement, we're showing that if you pick a policy,",
    "start": "1696390",
    "end": "1703360"
  },
  {
    "text": "um, pi i, that was, uh, generated by being greedy with respect to your Q function,",
    "start": "1703360",
    "end": "1710559"
  },
  {
    "text": "then that was guaranteed to yield monotonic improvement, and the same thing is gonna be true here too, when you do e-greedy.",
    "start": "1710560",
    "end": "1717070"
  },
  {
    "text": "Um, so if you use sort of er, an e-greedy policy, then you can gather data such that, uh,",
    "start": "1717070",
    "end": "1722830"
  },
  {
    "text": "the new policy- the new value you get, if you're optimistic with respect to that- oh, sorry, if you're greedy with respect to that,",
    "start": "1722830",
    "end": "1728740"
  },
  {
    "text": "that means you're gonna get any better policy. Okay. So let's say that, um, we have an e-greedy policy,",
    "start": "1728740",
    "end": "1735070"
  },
  {
    "text": "Pi i, and then we're gonna call an e-greedy policy with respect to Q Pi i,",
    "start": "1735070",
    "end": "1740965"
  },
  {
    "text": "which is gonna be Pi i plus 1, so we had a greedy- e-greedy policy Pi i that was doing some amount of exploration and some amount of greediness in the past,",
    "start": "1740965",
    "end": "1749380"
  },
  {
    "text": "we use that to gather data, we then evaluated that policy and we got this Q Pi i,",
    "start": "1749380",
    "end": "1754570"
  },
  {
    "text": "and now we're gonna extract a new policy. We're going to do policy improvements. I'm gonna show that that's a monotonic improvement.",
    "start": "1754570",
    "end": "1760674"
  },
  {
    "text": "Okay? Does anyone have any questions about the, what we are showing? Okay. So, what does this mean?",
    "start": "1760675",
    "end": "1767320"
  },
  {
    "text": "So right now what we're gonna be trying to show is that this, this Q function, the Pi of s Pi i plus 1,",
    "start": "1767320",
    "end": "1774655"
  },
  {
    "text": "so, is gonna be better than our previous value. At least as good or better than our previous value of our old policy Pi i.",
    "start": "1774655",
    "end": "1783490"
  },
  {
    "text": "So the way we define this is now, um, the Q function here is going to be a sum over,",
    "start": "1783490",
    "end": "1791350"
  },
  {
    "text": "our policy is stochastic. So it's Pi i plus 1, of the probability we take an action in a certain state,",
    "start": "1791350",
    "end": "1798535"
  },
  {
    "text": "times Q Pi i of SA, and then we're gonna expand that out,",
    "start": "1798535",
    "end": "1805375"
  },
  {
    "text": "and we're going to redefine it in terms of what it, what it means to be an e-greedy policy. So with, remember in a e-greedy policy we either take something randomly,",
    "start": "1805375",
    "end": "1815110"
  },
  {
    "text": "and that's with probability S1, and we split our probability mass across all the actions. So that's how we get this equation.",
    "start": "1815110",
    "end": "1821529"
  },
  {
    "text": "So this says, this is the- this is the random part. So with probability, with probability epsilon,",
    "start": "1821530",
    "end": "1830214"
  },
  {
    "text": "we take one action, one of the actions, and then we would follow that from then always.",
    "start": "1830214",
    "end": "1836050"
  },
  {
    "text": "So that's just Q Pi i of SA, and then with probability 1 minus Epsilon, we're greedy.",
    "start": "1836050",
    "end": "1842380"
  },
  {
    "text": "And we follow the best action according to our current Q Pi i.",
    "start": "1842380",
    "end": "1848570"
  },
  {
    "text": "So, now what we're gonna do is we're going to rewrite that. The first term isn't gonna change and I'm gonna expand the second.",
    "start": "1848640",
    "end": "1856510"
  },
  {
    "text": "[NOISE]",
    "start": "1856510",
    "end": "1875350"
  },
  {
    "text": "I haven't done anything here. I just multiplied the last term by 1, but I expressed the 1 as 1 over Epsilon divided by 1 over Epsilon,",
    "start": "1875350",
    "end": "1883240"
  },
  {
    "text": "and now I'm gonna re-express that part. So, and I'm gonna rewrite the first term, plus 1 minus Epsilon,",
    "start": "1883240",
    "end": "1890649"
  },
  {
    "text": "max over a, and what I'm gonna rewrite this as-",
    "start": "1890650",
    "end": "1899150"
  },
  {
    "text": "It's gonna use the fact that whenever we define our e-greedy policy,",
    "start": "1910670",
    "end": "1915915"
  },
  {
    "text": "if you sum over all actions in a certain state, those are all probabilities of us taking those actions in that state,",
    "start": "1915915",
    "end": "1921480"
  },
  {
    "text": "so it has to sum to one. So I just first divide it, I just multiply by one,",
    "start": "1921480",
    "end": "1927595"
  },
  {
    "text": "and we're expressing as 1 minus Epsilon divide by 1 minus Epsilon, then I re-expressed the 1, because it has to equal to 1,",
    "start": "1927595",
    "end": "1934000"
  },
  {
    "text": "cause we have to take some action in a particular state. A policy always has to, the probability of us taking any action state has to be equal to 1,",
    "start": "1934000",
    "end": "1941215"
  },
  {
    "text": "and then I'm gonna do the that expression because we're,",
    "start": "1941215",
    "end": "1946330"
  },
  {
    "text": "here is where we'll take the best action. So by definition, the best action has to be at least as good as taking any of the other actions.",
    "start": "1946330",
    "end": "1953920"
  },
  {
    "text": "So we're gonna do the following; we're gonna push that Q inside.",
    "start": "1953920",
    "end": "1959860"
  },
  {
    "text": "[NOISE]",
    "start": "1959860",
    "end": "1977200"
  },
  {
    "text": "So that has to be smaller than what we saw before, because basically we just push the Q inside, and we're no longer taking a max.",
    "start": "1977200",
    "end": "1983695"
  },
  {
    "text": "And the Q values- all the Q values at best have to be equal to the max, and in other cases they'll generally be worse.",
    "start": "1983695",
    "end": "1989620"
  },
  {
    "text": "Okay? But then once we have that, we can cancel that 1 over Epsilon minus 1 over Epsilon, and what do we have?",
    "start": "1989620",
    "end": "1995170"
  },
  {
    "text": "We have two different terms here that look very similar. We have one.",
    "start": "1995170",
    "end": "2009150"
  },
  {
    "text": "Let's see. We need one was taking that apart.",
    "start": "2009150",
    "end": "2012940"
  },
  {
    "text": "And we'll keep this up. Yeah. There is an Epsilon over a right there.",
    "start": "2015020",
    "end": "2021665"
  },
  {
    "text": "Okay. So now I'm going to pull that out. [NOISE]",
    "start": "2021665",
    "end": "2062710"
  },
  {
    "text": "If I split those terms up, the first term and the third term are identical, and one is subtracted and one is added. Make sure that's clear.",
    "start": "2062710",
    "end": "2072865"
  },
  {
    "text": "So, this just ends up becoming the middle term. [NOISE]",
    "start": "2072865",
    "end": "2085239"
  },
  {
    "text": "And that was just the previous value. Yeah? first line, where we changed it to,",
    "start": "2085239",
    "end": "2090835"
  },
  {
    "text": "instead of the sum, over all, A of Pi I a given s minus Epsilon to, [NOISE] minus Epsilon over the cardinality of A in this case?",
    "start": "2090835",
    "end": "2097855"
  },
  {
    "text": "Yes. Um, is that s- that, is that [NOISE] still one minus Epsilon,",
    "start": "2097855",
    "end": "2103280"
  },
  {
    "text": "[NOISE] I mean, that, that looks all- That's all . Got it. Does that answer your question?",
    "start": "2103280",
    "end": "2109040"
  },
  {
    "text": "I think so. Yeah. So, the, what we did from the one minus Epsilon, to the next one.",
    "start": "2109040",
    "end": "2114490"
  },
  {
    "text": "[NOISE] So, we had a one minus Epsilon divided by one mi- minus Epsilon, [NOISE] and, I re-express that as the sum over A [NOISE] ,",
    "start": "2114490",
    "end": "2121900"
  },
  {
    "text": "Pi I of A given S minus Epsilon divided by sum over A, and then, if you sum over A that's second term,",
    "start": "2121900",
    "end": "2128665"
  },
  {
    "text": "just this Epsilon, and the first term is one. Okay? Yes. Isn't that [OVERLAPPING] Can you remind me your name?",
    "start": "2128665",
    "end": "2137470"
  },
  {
    "text": "[OVERLAPPING] the Pi, the, what? Name? Oh. Pi I is the Pi,",
    "start": "2137470",
    "end": "2143300"
  },
  {
    "text": "like Pi I plus one, negative Pi, and then Pi I.",
    "start": "2143300",
    "end": "2150200"
  },
  {
    "text": "Pi I plus one. [NOISE] Which line are you thinking about? [NOISE] . Which- [OVERLAPPING]",
    "start": "2150200",
    "end": "2155850"
  },
  {
    "text": "The means, I'm sorry. The second line . Yeah. You wrote E Pi I plus [NOISE] one,",
    "start": "2155850",
    "end": "2162070"
  },
  {
    "text": "negative five [NOISE], five Pi times five.",
    "start": "2162070",
    "end": "2167680"
  },
  {
    "text": "I'm just not understanding your question with- so you're on that second line is that right or-? ",
    "start": "2167680",
    "end": "2176270"
  },
  {
    "text": "In the  . Okay. Pi plus one is- sorry. What is the question? [NOISE] .",
    "start": "2176270",
    "end": "2188680"
  },
  {
    "text": "Yeah. The? Yeah. Yeah. [NOISE]",
    "start": "2188680",
    "end": "2198160"
  },
  {
    "text": "[NOISE] . Yeah, so good question. The greater than or equal happen because we push that Q Pi we had a max over",
    "start": "2198160",
    "end": "2203350"
  },
  {
    "text": "A Q Pi I of s, a we pushed it inside of the sum. And so that sum now no longer includes a max.",
    "start": "2203350",
    "end": "2210684"
  },
  {
    "text": "And so, now that the max is always greater than or equal to any of the other elements.",
    "start": "2210685",
    "end": "2217030"
  },
  {
    "text": "So, that's where you got the, greater than or equal to. Yeah? So, I just wondering if you could explain like",
    "start": "2217030",
    "end": "2223320"
  },
  {
    "text": "intuitively  you go random or optimal actions and then you end up with monotonic improvement.",
    "start": "2223320",
    "end": "2232570"
  },
  {
    "text": "[NOISE] Yeah. Can we get some intuition this is  the algebraic derivation.",
    "start": "2232570",
    "end": "2237925"
  },
  {
    "text": "And I think intuitively the idea is that by doing some e greedy exploration and you're gonna get evidence about some other state action pairs.",
    "start": "2237925",
    "end": "2245080"
  },
  {
    "text": "Um, and then you can use this to estimate your Q function and that when you do that then that's also gonna give you uh,",
    "start": "2245080",
    "end": "2251500"
  },
  {
    "text": "then that can improve your policy and you can have evidence that there is something better you could do then the current one, the current thing you're doing.",
    "start": "2251500",
    "end": "2257605"
  },
  {
    "text": "If you don't do any exploration your Q function wouldn't change from before. But now because you're doing exploration then you can learn about",
    "start": "2257605",
    "end": "2265120"
  },
  {
    "text": "other stuff and then if it's better you'll see that in your Q function.  function like your exploration",
    "start": "2265120",
    "end": "2273699"
  },
  {
    "text": "is not as good then you just take the old one? Yeah. Um, yeah.",
    "start": "2273699",
    "end": "2280510"
  },
  {
    "text": "So, this is now um, this is saying that you'll get this monotonic improvement if you're computing this exactly.",
    "start": "2280510",
    "end": "2287230"
  },
  {
    "text": "So that's an important part. So this show- so what this shows here is",
    "start": "2287230",
    "end": "2294670"
  },
  {
    "text": "that if you get a Q function and it looks like there's some improvement from some other actions that you're not taking right now you're",
    "start": "2294670",
    "end": "2300340"
  },
  {
    "text": "gonna shift your policy over towards focusing on those actions. This is assuming right now in terms of",
    "start": "2300340",
    "end": "2305500"
  },
  {
    "text": "the monotonic improvement that Q Pi I's have been computed exactly. So that's what we thought when we were doing planning where we knew what",
    "start": "2305500",
    "end": "2312730"
  },
  {
    "text": "the dynamics model was in the Reward Model and we're using that [NOISE] to compute a value function.",
    "start": "2312730",
    "end": "2317830"
  },
  {
    "text": "Um, so if we we're doing in that case we have the guaranteed monotonic improvement because we had the exact value of Pi and similarly here if we have the exact value of Q Pi I,",
    "start": "2317830",
    "end": "2328780"
  },
  {
    "text": "then when you do this improvement then you're guaranteed to be monotonically improving if you didn't,",
    "start": "2328780",
    "end": "2334870"
  },
  {
    "text": "like if you have just an approximation of Q Pi I, then it may not be monotonic.",
    "start": "2334870",
    "end": "2340470"
  },
  {
    "text": "like let's say you tried another action once in that state. You may have a bad estimate of how good things are from that point.",
    "start": "2340470",
    "end": "2346849"
  },
  {
    "text": "So, this, this is an important aspect. And this is going to be really important when we start to think about function approximation because we almost never will have computed Q Pi I, exactly.",
    "start": "2346850",
    "end": "2355525"
  },
  {
    "text": "But if you do like that say, you can just iterate through this a ton of times like you're learning that's still a tabular environment.",
    "start": "2355525",
    "end": "2361359"
  },
  {
    "text": "You've converged you know your Q Pi I, is perfect. Then when you- then do policy improvement you can get a benefit even you can improve- though",
    "start": "2361360",
    "end": "2369579"
  },
  {
    "text": "there's going to be this interesting question of how often do you improve your policy   versus how much time do you spend evaluating your current policy  .",
    "start": "2369580",
    "end": "2375295"
  },
  {
    "text": "Yeah? Uh, yes. Yeah. So does this mean that it definitely converges  to like an optimal Q that was Q function?",
    "start": "2375295",
    "end": "2384340"
  },
  {
    "text": "The overall- Perfect. Yeah, we'll talk about that   question is great too. So, this  is just saying like one step monotonic improvement what,",
    "start": "2384340",
    "end": "2391030"
  },
  {
    "text": "what's gonna happen in terms of total convergence we'll talk about that in just a second. Yes? Remind me name, please. ",
    "start": "2391030",
    "end": "2396062"
  },
  {
    "text": " [NOISE]  question and answers When I think of V Pi, I think of it as being a function of a state? But action given a state?",
    "start": "2396062",
    "end": "2407942"
  },
  {
    "text": "Uh. So,  to sort of re- refresh all over my what is a Pi and how we define the function.",
    "start": "2407943",
    "end": "2413890"
  },
  {
    "text": "Now we're thinking of it as a mapping from states to actions but it can be a stochastic function. So, it can be a probability distribution over actions.",
    "start": "2413890",
    "end": "2420860"
  },
  {
    "text": "So, I can select action A1 with 50 percent probability. or action A2 with 50 percent probability.",
    "start": "2420900",
    "end": "2426640"
  },
  {
    "text": "For example from the things- [OVERLAPPING] ? . Okay. I mean depends how you want to implement it like that concerned to be a bit.",
    "start": "2426640",
    "end": "2434665"
  },
  {
    "text": "Essentially I think of it as you're in a state and then you have some probability distribution over actions you have to",
    "start": "2434665",
    "end": "2440110"
  },
  {
    "text": "sample from that to decide what action you take.  The policy the- so what we're doing here when we",
    "start": "2440110",
    "end": "2450880"
  },
  {
    "text": "expanded this as we said what is the policy for an action given a state we said with one minus Epsilon probability we will be taking this max action.",
    "start": "2450880",
    "end": "2459490"
  },
  {
    "text": "So that one. And with Epsilon probability we would be taking one of the actions.",
    "start": "2459490",
    "end": "2465280"
  },
  {
    "text": "And so, then we summed over each of the actions we could take. So, what we did there is we split this sum up",
    "start": "2465280",
    "end": "2470440"
  },
  {
    "text": "into the probability of taking one action and what'll be the Q function of that action and the probability of",
    "start": "2470440",
    "end": "2475690"
  },
  {
    "text": "taking each of the other actions and what would be the value of those. So, it's like our expected value.",
    "start": "2475690",
    "end": "2481015"
  },
  {
    "text": "Yeah at the back.  Yeah . So when we talked about the Bellman operator, we said that if you got to the same value function - [NOISE]",
    "start": "2481015",
    "end": "2493684"
  },
  {
    "text": "You can stop iterating. Here, would you have to have tried every ah,",
    "start": "2493685",
    "end": "2501454"
  },
  {
    "text": "action to know that you are done? That's a great question before  in policy improvement if you got to the same policy you you,",
    "start": "2501455",
    "end": "2511190"
  },
  {
    "text": "you are done you don't have to do any more improvement. The question is, in this case is it true or there's some other additional conditions?",
    "start": "2511190",
    "end": "2516785"
  },
  {
    "text": "Um, this is very related to question too. So why don't we go onto the next part that is saying, you know, under what conditions are these going to converge and converge to optimal?",
    "start": "2516785",
    "end": "2524405"
  },
  {
    "text": "Um,  do- do you have question before? Yeah, in this  this also say that the only time we get strict equalities is when Epsilon is 1. So you just act purely randomly?",
    "start": "2524405",
    "end": "2530630"
  },
  {
    "text": "Uh, the question is whether or not there's,",
    "start": "2530630",
    "end": "2537365"
  },
  {
    "text": "um,so if if policy is random, would you get such a quality here? Um, yeah, you should get.",
    "start": "2537365",
    "end": "2544880"
  },
  {
    "text": "I mean if you can get such a quality whenever you've converged to, like if your Q function is converged your policy is optimal.",
    "start": "2544880",
    "end": "2551360"
  },
  {
    "text": "Are you guaranteed such a quality against what interest are? No, I don't think so. Because if you're acting totally randomly in fact",
    "start": "2551360",
    "end": "2558020"
  },
  {
    "text": "that's normally often how you start off and then you want to improve from there. Could you review I mean if you're, if you're if you're worried",
    "start": "2558020",
    "end": "2564980"
  },
  {
    "text": "if it's uniform some things are going to look better than others. So even if acting randomly, some actions are going to have higher rewards than",
    "start": "2564980",
    "end": "2570049"
  },
  {
    "text": "others and that can be reflected in your Q function. Any other questions before we get on to convergence in the back  .",
    "start": "2570050",
    "end": "2582440"
  },
  {
    "text": "One outside this should um, yeah . Yeah, another question.",
    "start": "2582440",
    "end": "2588440"
  },
  {
    "text": "Um, um, do you exclude um, argmax when you explore? Do we what? Do we exclude the argmax action?",
    "start": "2588440",
    "end": "2593960"
  },
  {
    "text": "Like, you know by exploration, um, and e greedy part. And what is your name ? ",
    "start": "2593960",
    "end": "2599090"
  },
  {
    "text": "Pardon.  Um, I- no you don't exclude it, don't exclude.",
    "start": "2599090",
    "end": "2604325"
  },
  {
    "text": "You don't exclude the argmax action when you explore. You pick all of them.",
    "start": "2604325",
    "end": "2609454"
  },
  {
    "text": "Um, if you wanted to that would be equivalent to sort of defining. You could do that. But in the simplest version, including in this proof here,",
    "start": "2609455",
    "end": "2615500"
  },
  {
    "text": "we assume that when you're um, acting randomly you just sample from any of the states. It's often easier from implementation, too.",
    "start": "2615500",
    "end": "2622490"
  },
  {
    "text": "Okay, great questions. Let's, um, write that up here as well. Er, okay, so this other really great question that's coming up from several people here.",
    "start": "2622490",
    "end": "2632645"
  },
  {
    "text": "Um, er, I have, okay, what does this mean over time? Um, I have call it monotonic improvement and what guarantees do we have?",
    "start": "2632645",
    "end": "2639965"
  },
  {
    "text": "So, the guarantees that we have is, um, if you assemble all state action pairs an infinite number of times,",
    "start": "2639965",
    "end": "2646115"
  },
  {
    "text": "and your behavior policy converges to the greedy policy. So what do I mean by that?",
    "start": "2646115",
    "end": "2651580"
  },
  {
    "text": "Um, so the behavior policy here is sort of what policy you- you're using versus what policy is greedy with respect to your current Q.",
    "start": "2651580",
    "end": "2659500"
  },
  {
    "text": "So, if you have the case that as the limit as I goes to infinity,",
    "start": "2659500",
    "end": "2665230"
  },
  {
    "text": "have Pi a given s goes to argmax Q,",
    "start": "2665230",
    "end": "2677840"
  },
  {
    "text": "s, a with probability one. Which means that in the limit you converge to",
    "start": "2677840",
    "end": "2684560"
  },
  {
    "text": "always taking the greedy action with respect to your Q function  .",
    "start": "2684560",
    "end": "2688950"
  },
  {
    "text": "Then, um, then you are greedy in the limit of infinity exploration. That's called GLIE often.",
    "start": "2691120",
    "end": "2697655"
  },
  {
    "text": "So that means you visit all these state action pairs an infinite number of times but you are also converging [NOISE] in the limit to be greedy with respect to your Q function.",
    "start": "2697655",
    "end": "2706685"
  },
  {
    "text": "Um, and there's different ways to do this.The simple way to do it is to sort of, decay your um, your Epsilon or your or your E greedy Policy over time.",
    "start": "2706685",
    "end": "2716780"
  },
  {
    "text": "Um, so you can reduce your Epsilon towards zero at a rate of like one over I,",
    "start": "2716780",
    "end": "2721985"
  },
  {
    "text": "for example, that's sufficient. It's not necessarily This is, this is separate than what you wanna do empirically.",
    "start": "2721985",
    "end": "2728195"
  },
  {
    "text": "This is just to sort of show under these conditions. Then, um, then we're generally going to be able to show that we are going to converge to",
    "start": "2728195",
    "end": "2736310"
  },
  {
    "text": "the optimal policy and optimal value for Monte Carlo and TD methods.",
    "start": "2736310",
    "end": "2742670"
  },
  {
    "text": "So, generally when think will talk about this again as we talk about some of the other algorithms generally when you're GLIE, um,",
    "start": "2742670",
    "end": "2748475"
  },
  {
    "text": "and you have some conditions over how you're learning the Q functions, um, then you will be guaranteed to converge to optimal policy.",
    "start": "2748475",
    "end": "2757144"
  },
  {
    "text": "Yeah. Um, do you realize  like, like we've seen Epsilon and.",
    "start": "2757145",
    "end": "2763700"
  },
  {
    "text": "Yeah. So question is is this the only way to guarantee it, um,",
    "start": "2763700",
    "end": "2769160"
  },
  {
    "text": "there's sort of interesting different things that are happening here. Um, you could be guaranteed that you're converging to the optimal Q function without converging to the optimal policy.",
    "start": "2769160",
    "end": "2779345"
  },
  {
    "text": "So, you could keep Epsilon really high, um, and you could get a lot of information you will be",
    "start": "2779345",
    "end": "2784700"
  },
  {
    "text": "learning about what the optimal Q function is, but you might not be following that policy. And we'll talk more about that in a, in a minute.",
    "start": "2784700",
    "end": "2792270"
  },
  {
    "text": "All right, so let's talk a little bit more about Monte Carlo Control. In that given this precursor.",
    "start": "2792910",
    "end": "2799190"
  },
  {
    "text": "So, if we wanted to do Monte Carlo Online Control, instead of just this evaluation we talked about before,",
    "start": "2799190",
    "end": "2805120"
  },
  {
    "text": "we can kind of combine these ideas of   learning the Q function and doing this er, improvement at the same time.",
    "start": "2805120",
    "end": "2810655"
  },
  {
    "text": "So we can initialize our Q functions and our counts in the same way we were talking about before.",
    "start": "2810655",
    "end": "2815890"
  },
  {
    "text": "Um, and then what we could do is we can construct an E greedy policy.",
    "start": "2815890",
    "end": "2821055"
  },
  {
    "text": "So E greedy policy in this case is always going to be that with probability one minus Epsilon.",
    "start": "2821055",
    "end": "2826985"
  },
  {
    "text": "We pick the argmax with respect to Q with probability Epsilon we select an action and,",
    "start": "2826985",
    "end": "2836300"
  },
  {
    "text": "let me write it this way: probability Epsilon over a we select action a.",
    "start": "2836300",
    "end": "2845015"
  },
  {
    "text": "So we're just mixing up between this random um, or being greedy. Yeah. If I heard that so,",
    "start": "2845015",
    "end": "2851059"
  },
  {
    "text": "actually like  the optimal actions in this case you are selecting with probability one minus Epsilon plus Epsilon over the cardinality of A right?",
    "start": "2851060",
    "end": "2859265"
  },
  {
    "text": "Yeah. Okay. Several people would ask about this. So essentially, you're being greedy  with",
    "start": "2859265",
    "end": "2864710"
  },
  {
    "text": "probability one minus Epsilon plus Epsilon over a. And then the remaining part of your probability is going to be an exploration.",
    "start": "2864710",
    "end": "2872960"
  },
  {
    "text": "Because when you're being random you could also select what's currently the best action. So, um, it looks pretty similar to what we saw before.",
    "start": "2872960",
    "end": "2880880"
  },
  {
    "text": "We're going to sample an episode, after we finished the episode then in this case I'm defining as first visit,",
    "start": "2880880",
    "end": "2887270"
  },
  {
    "text": "no, you could make this every visit. I could do every visit.",
    "start": "2887270",
    "end": "2892440"
  },
  {
    "text": "The same, um, benefits and restrictions apply here.",
    "start": "2893650",
    "end": "2898819"
  },
  {
    "text": "So what we had before in the sense that you could either be getting a slightly more biased estimator if you're doing",
    "start": "2898820",
    "end": "2904160"
  },
  {
    "text": "every visit but generally going to be able to use more data. It's going to be sort of less noisy. Um, so in this case what we're doing is we're",
    "start": "2904160",
    "end": "2911795"
  },
  {
    "text": "just maintaining counts over state action pairs and we're updating our Q function. And then after we finished that episode then we can update, um,",
    "start": "2911795",
    "end": "2921770"
  },
  {
    "text": "our k and our Epsilon, in this case we're just using Epsilon equal to one over k, and then we redefine our new E greedy policy with respect to Q,",
    "start": "2921770",
    "end": "2930244"
  },
  {
    "text": "and then we get another episode. So that's just sort of Monte Carlo Online Control.",
    "start": "2930245",
    "end": "2936300"
  },
  {
    "text": "So why don't we go back to that Mars Rover example? So, in the Mars Rover example what we had is for this is what our 2 Q functions look like.",
    "start": "2938620",
    "end": "2949130"
  },
  {
    "text": "So, at this point what would be just spend a minute and say what would be our new policy, um,",
    "start": "2949130",
    "end": "2955505"
  },
  {
    "text": "if we're at the end of this episode and- and its fine just write down tie if there,",
    "start": "2955505",
    "end": "2961009"
  },
  {
    "text": "if there are two Q functions that have exactly the same, um, value for the, for the same state for two different actions and it's just a tie.",
    "start": "2961010",
    "end": "2968120"
  },
  {
    "text": "Then you can choose how to break, the break the tie. Um, and then also write down what the new E greedy policy is.",
    "start": "2968120",
    "end": "2974280"
  },
  {
    "text": "I'll just take a minute to do that.",
    "start": "2977410",
    "end": "2980730"
  },
  {
    "text": "Okay, what's our greedy policy? What is the greedy policy for S1?",
    "start": "3064260",
    "end": "3070405"
  },
  {
    "text": "A1. What is the greedy policy for S2? Two. And then what's our greedy policy for S3?",
    "start": "3070405",
    "end": "3076390"
  },
  {
    "text": "One. And then what is it for everything else? Tie. Okay. And depending on your implementation you could",
    "start": "3076390",
    "end": "3085390"
  },
  {
    "text": "either always be you could either sort of define your greedy policy or you would just like break ties randomly and keep track of that.",
    "start": "3085390",
    "end": "3092140"
  },
  {
    "text": "Could constantly be breaking ties randomly. That would probably be better empirically like, instead of predefining one greedy policy,",
    "start": "3092140",
    "end": "3098815"
  },
  {
    "text": "you can probably just always be Q, er, querying what argmax is of Q. And if you're getting ties just break them randomly to get more exploration.",
    "start": "3098815",
    "end": "3105760"
  },
  {
    "text": "Um, so then if we then define an E greedy policy where K is three and our Epsilon is one over k,",
    "start": "3105760",
    "end": "3112750"
  },
  {
    "text": "with what probability do we follow? Random. So k is three,",
    "start": "3112750",
    "end": "3121579"
  },
  {
    "text": "Epsilon is equal to one over three. So that would mean that with one-third probability,",
    "start": "3121710",
    "end": "3128310"
  },
  {
    "text": "we select something random and with two-thirds probability, we select the pi greedy policy.",
    "start": "3128310",
    "end": "3133120"
  },
  {
    "text": "And then that would be the update for that particular episode.",
    "start": "3133430",
    "end": "3137680"
  },
  {
    "text": "So, if you do this, if you do- if you have greedy in the limit of infinite exploration Monte Carlo,",
    "start": "3144270",
    "end": "3151090"
  },
  {
    "text": "then you're gonna converge to the optimal state-action value. [NOISE] So, now, we're gonna start to talk about TD methods.",
    "start": "3151090",
    "end": "3163795"
  },
  {
    "text": "So, similar to what we were seeing, um, for Q, uh, Monte Carlo,",
    "start": "3163795",
    "end": "3168880"
  },
  {
    "text": "there is gonna be sort of this simple analogy that moves us over to TD. So, remember, for TD what we had before is,",
    "start": "3168880",
    "end": "3174130"
  },
  {
    "text": "we have our V pi of S. It was equal to our previous V pi of S plus one minus Alpha times- oops,",
    "start": "3174130",
    "end": "3184960"
  },
  {
    "text": "let me rewrite that- plus Alpha times R plus Gamma V pi of",
    "start": "3184960",
    "end": "3194170"
  },
  {
    "text": "S prime minus V pi of S. [NOISE] And this was where we were",
    "start": "3194170",
    "end": "3201490"
  },
  {
    "text": "sampling an expectation [NOISE] because we're only getting one sample of S prime,",
    "start": "3201490",
    "end": "3209080"
  },
  {
    "text": "and we were bootstrapping because we're using our previous estimate of V pi.",
    "start": "3209080",
    "end": "3214960"
  },
  {
    "text": "So, that was kinda the kwo- two key aspects of TD learning that we're both bootstrapping and sampling.",
    "start": "3214960",
    "end": "3221215"
  },
  {
    "text": "In Monte Carlo, we were sampling, but not bootstrapping. Um, and one of the nice aspects of TD learning is that then we could",
    "start": "3221215",
    "end": "3227319"
  },
  {
    "text": "update it after every tuple instead of waiting till the end of the episode. So, just as, like, what we do with Monte Carlo,",
    "start": "3227320",
    "end": "3233710"
  },
  {
    "text": "we're kinda replacing all of our Vs with Qs, we're gonna do exactly the same thing here. [NOISE] So, now, we're gonna think about",
    "start": "3233710",
    "end": "3240520"
  },
  {
    "text": "this sort of what's often known as temporal difference methods for control. [NOISE] So, what we're gonna do now is,",
    "start": "3240520",
    "end": "3248650"
  },
  {
    "text": "we can do- we can estimate the Q pi function using temporal difference updating with, like, a e-greedy policy,",
    "start": "3248650",
    "end": "3253780"
  },
  {
    "text": "um, and then, we could do Monte Carlo improvement by setting pi to an e-greedy version of Q pi.",
    "start": "3253780",
    "end": "3259390"
  },
  {
    "text": "That would be one thing we can do. [NOISE] There's an algorithm called SARSA,",
    "start": "3259390",
    "end": "3267760"
  },
  {
    "text": "which stands for state-action-reward- next state-next action, so SARSA.",
    "start": "3267760",
    "end": "3273010"
  },
  {
    "text": "Um, how does SARSA work? So, what we do is, we initialize our e-greedy policy randomly.",
    "start": "3273010",
    "end": "3278185"
  },
  {
    "text": "For example, uh, we take an action, we observe reward and next state, and then,",
    "start": "3278185",
    "end": "3283900"
  },
  {
    "text": "we take another action, and we observe another reward and next state, and then, we update our Q as follows: We say our previous va- um,",
    "start": "3283900",
    "end": "3293125"
  },
  {
    "text": "our value of Q for [NOISE] ST, AT is gonna be whatever our previous value was.",
    "start": "3293125",
    "end": "3299260"
  },
  {
    "text": "Actually, I'm gonna be careful with this. We're not going to index them with pi",
    "start": "3299260",
    "end": "3304540"
  },
  {
    "text": "anymore because we sort of have this running estimate, and our policy is gonna be changing, too. So, the, the Q function that we get here is now not just for one policy,",
    "start": "3304540",
    "end": "3314109"
  },
  {
    "text": "but we're going to be averaging it over different samples, and we can be changing how we're acting over time. So, it's ST, AT,",
    "start": "3314110",
    "end": "3320500"
  },
  {
    "text": "it's gonna be equal to Q of ST, AT plus one minus Alpha RT plus",
    "start": "3320500",
    "end": "3329755"
  },
  {
    "text": "Gamma Q of ST plus one AT plus one minus Q of ST, AT.",
    "start": "3329755",
    "end": "3341270"
  },
  {
    "text": "The important thing about this equation is that I am plugging in the actual action that was taken next.",
    "start": "3342900",
    "end": "3350155"
  },
  {
    "text": "So, you see- you're in a state, you do an action, you get a reward, you go to a next state, and then, you do another action.",
    "start": "3350155",
    "end": "3356365"
  },
  {
    "text": "And so, once you know what the next action is that you've done, then you can do this update in SARSA as you're actually plugging in the action that was taken.",
    "start": "3356365",
    "end": "3365860"
  },
  {
    "text": "And then, once you have that, you can do policy improvement in the normal way. So, you can have ST is equal",
    "start": "3365860",
    "end": "3373420"
  },
  {
    "text": "to arg, max Q,",
    "start": "3373420",
    "end": "3391030"
  },
  {
    "text": "[NOISE] so, like, the E-greedy wrapper for that. Now- so, this is a little bit different than Monte Carlo for two reasons.",
    "start": "3391030",
    "end": "3396339"
  },
  {
    "text": "Um, it's sort of, uh, we're doing these tuple updates, we see the state, action, reward, next state,",
    "start": "3396340",
    "end": "3402850"
  },
  {
    "text": "next action tuples, and then, once we do those, we can update our Q function. Um, we can do those along the way,",
    "start": "3402850",
    "end": "3408820"
  },
  {
    "text": "we don't have to [NOISE] wait till the end of the episode, and similarly, we don't have to wait till the end of the episode to change how we're acting in the world.",
    "start": "3408820",
    "end": "3414190"
  },
  {
    "text": "So, like, in the, um, trajectory that we saw before, we saw some states multiple times.",
    "start": "3414190",
    "end": "3419440"
  },
  {
    "text": "In this case, we could actually be changing our policy for how we act in those states during the same episode.",
    "start": "3419440",
    "end": "3424465"
  },
  {
    "text": "So, if your episodes are really long, this can be really helpful. [NOISE] So, in general,",
    "start": "3424465",
    "end": "3434425"
  },
  {
    "text": "um, I think it's often extremely helpful to, um, update the policy a lot. Yeah  Is there",
    "start": "3434425",
    "end": "3441970"
  },
  {
    "text": "a reason [NOISE] ?",
    "start": "3441970",
    "end": "3454430"
  },
  {
    "text": "Oh, yeah. So, they're both the same, it's just either you could write it where you put the V in the next part or not.",
    "start": "3454430",
    "end": "3459674"
  },
  {
    "text": "So, you can either have it as one minus Alpha times your old value plus reward plus Gamma of your next thing,",
    "start": "3459675",
    "end": "3466224"
  },
  {
    "text": "or you could have it as V plus Alpha times, or that, that should be still an Alpha here plus reward  minus V. So that's either.",
    "start": "3466225",
    "end": "3477339"
  },
  {
    "text": "They- they're the same. If you know that I've made a typo, just let me know. Yeah. Uh, and is there a reason  we use, like,",
    "start": "3477340",
    "end": "3485530"
  },
  {
    "text": "the next state action  pair that we choose, uh, uh, A plus one rather than the max state action?",
    "start": "3485530",
    "end": "3492069"
  },
  {
    "text": "question's about why do we use the next state action pair you choose instead of the max. Q-learning is going to be the max,",
    "start": "3492070",
    "end": "3497425"
  },
  {
    "text": "we'll see that in about a slide. Um, SARSA's basically updating on policy, um, that can have- generally,",
    "start": "3497425",
    "end": "3505480"
  },
  {
    "text": "you want to do Q-learning, which is going to be doing the max. Sometimes, there's some benefits, particularly in cases where, um,",
    "start": "3505480",
    "end": "3511660"
  },
  {
    "text": "[NOISE] you could have lot of negative outcomes, that the optimism of being max can end up sort of causing your agent to make a lot of",
    "start": "3511660",
    "end": "3519490"
  },
  {
    "text": "bad decisions early on because it's really optimistic about what it's- what it's- could do instead of what it's actually doing.",
    "start": "3519490",
    "end": "3525475"
  },
  {
    "text": "Um, there's a nice cliff walk example inside Sutton and Barto where they show that SARSA actually is doing better in sort of early,",
    "start": "3525475",
    "end": "3533410"
  },
  {
    "text": "early stages, early samples compared to Q-learning, because SARSA is realistic about what happens",
    "start": "3533410",
    "end": "3538780"
  },
  {
    "text": "if you take certain actions next to- as opposed to optimistic. And if you're doing a lot of randomness, um,",
    "start": "3538780",
    "end": "3543985"
  },
  {
    "text": "that means that SARSA can be more realistic in the early stages. But empirically, generally, you want to do Q-learning,",
    "start": "3543985",
    "end": "3549640"
  },
  {
    "text": "and both will convert to the same thing. Yeah.",
    "start": "3549640",
    "end": "3555069"
  },
  {
    "text": "Um, so, [NOISE]  , should be, um, Q  ST one A be plus one be ST plus one.",
    "start": "3555070",
    "end": "3564170"
  },
  {
    "text": "Yeah. Thank you. Yes",
    "start": "3564300",
    "end": "3572590"
  },
  {
    "text": "This might be  question but you're talking about how its getting the information from the future action,",
    "start": "3572590",
    "end": "3578410"
  },
  {
    "text": "but you have to have already done that action. So, why is it called, um, er, state action or -or next state actions,",
    "start": "3578410",
    "end": "3587335"
  },
  {
    "text": "when it's really the past one that you're updating from what I'm understanding. Because you- you're doing this one and you're using the information you learn,",
    "start": "3587335",
    "end": "3594430"
  },
  {
    "text": "that take the one in the back. So, why is it- why are we talking about it like it's a future action? What's the purpose of that?",
    "start": "3594430",
    "end": "3601655"
  },
  {
    "text": "Um, all right. I- I don't think isn't about the particular terms used to define SARSA ,",
    "start": "3601655",
    "end": "3607480"
  },
  {
    "text": "I don't think it- I mean, I guess, it's really just that you have to wait till you get, um,f that- that last A is important.",
    "start": "3607480",
    "end": "3614335"
  },
  {
    "text": "So that instead of saying that- but before we thought with TD learning if you were in a state action reward next state and then you could update your Q-function",
    "start": "3614335",
    "end": "3621940"
  },
  {
    "text": "now we're just saying you have to wait till you've actually decided what to do in that next state. Okay. Because that's how you're choosing how to do update your Q-function here,",
    "start": "3621940",
    "end": "3630745"
  },
  {
    "text": "and that's what you're plugging in for your target. So, in terms of the convergent properties,",
    "start": "3630745",
    "end": "3638440"
  },
  {
    "text": "um, it requires a couple of different things, uh, so, if we are,",
    "start": "3638440",
    "end": "3644714"
  },
  {
    "text": "um, we need sort of two things. We're gonna need the fact that we're- we're updating our Q-function and it's gonna be updating incrementally,",
    "start": "3644715",
    "end": "3652260"
  },
  {
    "text": "and so, like what we talked about before, we're gonna need some conditions over the Alphas. Um, if alpha is equal to 1, uh,",
    "start": "3652260",
    "end": "3658930"
  },
  {
    "text": "generally your Q-function is not gonna converge, because it means you're not remembering anything about the past. Um, if alpha is 0,",
    "start": "3658930",
    "end": "3665260"
  },
  {
    "text": "then you're not updating anymore. So, generally, you need something in terms of the step sizes, which allows you to sort of slowly be incrementing but still be converging.",
    "start": "3665260",
    "end": "3673000"
  },
  {
    "text": "So these are one sufficient set of conditions, um, so if you have stuff like Alpha T,",
    "start": "3673000",
    "end": "3679270"
  },
  {
    "text": "is equal to 1 over T. Now empirically often you're going to want to pick very different forms of learning rates.",
    "start": "3679270",
    "end": "3685330"
  },
  {
    "text": "So Alpha T, is often referred to as, like, the learning rate parameter,",
    "start": "3685330",
    "end": "3690110"
  },
  {
    "text": "and empirically you are often not gonna wanna use this [NOISE],",
    "start": "3690900",
    "end": "3703899"
  },
  {
    "text": "generally not gonna use this. This is gonna, um, uh, you- you're often gonna wanna use different things empirically,",
    "start": "3703899",
    "end": "3710589"
  },
  {
    "text": "you could end up using sometimes small constants, or slowly decaying constants. Often that depends on the domain,",
    "start": "3710590",
    "end": "3715869"
  },
  {
    "text": "but this is from a theoretical side what is sufficient to ensure convergence. And then the other aspect is that the way that your,",
    "start": "3715870",
    "end": "3722290"
  },
  {
    "text": "uh, that your policy itself has to satisfy the condition of GLIE, which means that you are, sort of,",
    "start": "3722290",
    "end": "3727930"
  },
  {
    "text": "slowly getting more greedy over the time but you're doing so in a way that you're still sampling all state action pairs an infinite number of times.",
    "start": "3727930",
    "end": "3734455"
  },
  {
    "text": "Now- now, just note for a second that that's not always possible, like, so if you have a domain, um,",
    "start": "3734455",
    "end": "3739885"
  },
  {
    "text": "where, uh, things are not reachable after a point it's not argotic,",
    "start": "3739885",
    "end": "3745510"
  },
  {
    "text": "you can't get back to certain states after you get there. Let's say you're flying a helicopter and you break the helicopter.",
    "start": "3745510",
    "end": "3750790"
  },
  {
    "text": "So you can't get back up there, um, then you're not gonna be able to satisfy GLIE because at some point you broke your helicopter and",
    "start": "3750790",
    "end": "3756160"
  },
  {
    "text": "then like you have no idea what it would have been like if you continued to fly your helicopter in the air. So, there can be some domains for which it is very hard to satisfy GLIE, um,",
    "start": "3756160",
    "end": "3765309"
  },
  {
    "text": "but we generally are going to ignore those even though there are some really interesting work on, so, how do we deal with those cases as well.",
    "start": "3765310",
    "end": "3771295"
  },
  {
    "text": "In those cases, somebody might assume that it's more of an episodic problem, so maybe you have like a 100 helicopters and so when you",
    "start": "3771295",
    "end": "3777579"
  },
  {
    "text": "crash one that's considered a termination condition and then you get out your next one. Um, so you may or may not be able to be greedy in the limit of information,",
    "start": "3777580",
    "end": "3785545"
  },
  {
    "text": "in the limit of infinite exploration there but you can, sort of, have a bounded amounts of exploration. And we're going to talk a lot more later about, sort of,",
    "start": "3785545",
    "end": "3792130"
  },
  {
    "text": "how to do this exploration in a much more smart manner and in a way that can give us finite example guarantees on how much data we need to learn a good policy.",
    "start": "3792130",
    "end": "3800540"
  },
  {
    "text": "So, this is just what I said before which is, you know, we generally are not gonna use the step type.",
    "start": "3803700",
    "end": "3809830"
  },
  {
    "text": "where you have",
    "start": "3809830",
    "end": "3815020"
  },
  {
    "text": "Q  plus alpha because 1 is alpha, times the-the .",
    "start": "3815020",
    "end": "3820300"
  },
  {
    "text": "Yeah. Okay, yeah. So this is the- this is for SARSA. So this is the condition for SARSA assuming that- that particular update of how we're updating our Q-functions.",
    "start": "3820300",
    "end": "3829690"
  },
  {
    "text": "Okay? So, yeah. Uh, so in the Monte Carlo case,",
    "start": "3829690",
    "end": "3837130"
  },
  {
    "text": "we have sufficient  condition on- with the pie that has been GLIE with the Epsilon going down to 1 over t.",
    "start": "3837130",
    "end": "3843700"
  },
  {
    "text": "Do we have anything similar in general? Um, great question. Uh, question is about if, for the Monte Carlo, do we have a sufficient,  uh, a similar condition.",
    "start": "3843700",
    "end": "3851170"
  },
  {
    "text": "If you're just, um, if you're doing first visit that alone is sufficient. Because you're getting an unbiased estimator that's converging",
    "start": "3851170",
    "end": "3858825"
  },
  {
    "text": "for all of your returns with only a few of all the state action pairs in infinite number of times. If you're doing it in this incremental fashion, um,",
    "start": "3858825",
    "end": "3866520"
  },
  {
    "text": "then if you're, if you're- if you're playing around with how about Alpha is, then you need to have similar conditions to make sure it guarantees.",
    "start": "3866520",
    "end": "3873289"
  },
  {
    "text": "What I mean is, uh, how do you, like, how do you know that condition will impulse?",
    "start": "3873290",
    "end": "3879595"
  },
  {
    "text": "How do you know that things are GLIE? Yes. Like in Monte Carlo we did have condition rate. It was that Epsilon decay as long as it-",
    "start": "3879595",
    "end": "3886464"
  },
  {
    "text": "Oh, so, um, great question. so is like, how do you make sure something's GLIE. Um, one sufficient condition is that Epsilon is 1 over- uh,",
    "start": "3886465",
    "end": "3893440"
  },
  {
    "text": "it's over T or one over I. And do you know like, uh, with that  that work like, yeah.",
    "start": "3893440",
    "end": "3902290"
  },
  {
    "text": "Oh, if you need to like know if there are sufficient conditions like this? Yeah, like, it will be GLIE if and only",
    "start": "3902290",
    "end": "3908800"
  },
  {
    "text": "if- if Epsilon put to 0 but there's some diverges or something like that? Yeah I think it's quite similar as  sequence,",
    "start": "3908800",
    "end": "3915940"
  },
  {
    "text": "similar like you're, sort of, essentially you're- you're ensuring that you're doing infinite number of updates, infinite amount of grid its like",
    "start": "3915940",
    "end": "3922030"
  },
  {
    "text": "random exploration but still its going down fast enough to converge in. I think it's probably exactly the same but converges.",
    "start": "3922030",
    "end": "3928190"
  },
  {
    "text": "Okay. So then when we get into Q-Learning which is related to the question which was asked, okay, why are we just picking in that particular action",
    "start": "3930030",
    "end": "3936160"
  },
  {
    "text": "next why don't we just pick the max. Um, yeah. We could just pick the max instead. So SARSA is picking this particular action next,",
    "start": "3936160",
    "end": "3942790"
  },
  {
    "text": "Q-learning is picking the max action next. Yeah. as   you said what  does it take to do better",
    "start": "3942790",
    "end": "3950830"
  },
  {
    "text": "early on because its not too often that statement that  later. Um, is there any way that we could mix SARSA and Q-learning,",
    "start": "3950830",
    "end": "3957520"
  },
  {
    "text": "you certainly could, um, but then that also means that maybe I wasn't being clear enough with the earlier part. So SARSA can do better in some domains early",
    "start": "3957520",
    "end": "3965500"
  },
  {
    "text": "on particularly if there's a lot of really negative rewards because it's being realistic, um, another case is Q learning. Will it be better even early on?",
    "start": "3965500",
    "end": "3971815"
  },
  {
    "text": "Because you're being more optimistic and as we talked about a little bit before, often optimism is really helpful for exploration.",
    "start": "3971815",
    "end": "3978550"
  },
  {
    "text": "The cliff walk example in Sutton and Barto is a case where some actions lead the agent to like fall off a cliff and so",
    "start": "3978550",
    "end": "3985420"
  },
  {
    "text": "some actions are really bad and so there being optimistic early on means that you're gonna take a lot of really bad decisions and suffer a lot of negative rewards for a while.",
    "start": "3985420",
    "end": "3993204"
  },
  {
    "text": "Many other domains are not like that so depends on a lot. And yes you could certainly mix them.",
    "start": "3993205",
    "end": "3998420"
  },
  {
    "text": "Alright. So I guess in terms of Q-learning one thing that's interesting here is,",
    "start": "3999810",
    "end": "4005385"
  },
  {
    "text": "uh, so we can again sort of think about how are we're improving this and we're gonna, sort of, be e greedy with respect to the current estimate of optimal Q,",
    "start": "4005385",
    "end": "4014790"
  },
  {
    "text": "and- and really this is quite similar to what we we're doing in SARSA except for now when we update this Q we're really just gonna be doing this MAX.",
    "start": "4014790",
    "end": "4023369"
  },
  {
    "text": "So Q of ST, AT is gonna be equal to the previous value,",
    "start": "4023370",
    "end": "4029620"
  },
  {
    "text": "plus alpha or plus max over A.",
    "start": "4030260",
    "end": "4035595"
  },
  {
    "text": "So, now also note that you can update this a little bit earlier, so, you don't have to wait until the next action is taken.",
    "start": "4035595",
    "end": "4046230"
  },
  {
    "text": "So, you only need to observe this part. You don't need to actually see the next action that's taken and then",
    "start": "4046230",
    "end": "4051450"
  },
  {
    "text": "you can perform policy improvement, and in general, in this case, you're only gonna- you only need",
    "start": "4051450",
    "end": "4057450"
  },
  {
    "text": "to update the policy for the state that you were just in. So you can do pi, you can update pi b for ST for the action you just took.",
    "start": "4057450",
    "end": "4066570"
  },
  {
    "text": "You don't need to- particularly, in large state space, that can be helpful.",
    "start": "4066570",
    "end": "4070420"
  },
  {
    "text": "So we actually ended up talking about this a little bit already about whether or not how you initialize Q matters.",
    "start": "4071690",
    "end": "4077850"
  },
  {
    "text": "It doesn't asymptotically, I mean, if you have a case where your Q function is gonna converge to the right thing,",
    "start": "4077850",
    "end": "4083070"
  },
  {
    "text": "it will still converge to the right thing no matter how you initialize it as long as it satisfies these other conditions,",
    "start": "4083070",
    "end": "4088770"
  },
  {
    "text": "but it certainly matters a lot empirically and so even though often we think of just initializing it randomly or initialize it with 0,",
    "start": "4088770",
    "end": "4095280"
  },
  {
    "text": "initializing it optimistically is often really helpful. So we'll talk more about that when we talk about exploration . Yeah",
    "start": "4095280",
    "end": "4104250"
  },
  {
    "text": "On the previous slide  line six, either max or a argmax?. Thank you.",
    "start": "4104250",
    "end": "4112000"
  },
  {
    "text": "[NOISE]",
    "start": "4112000",
    "end": "4118380"
  },
  {
    "text": "So now, um, if we do Q-learning. Um, Let's see. I think wha- I'm gonna leave this as just an exercise you can do later,",
    "start": "4118380",
    "end": "4125299"
  },
  {
    "text": "but you could just do the exact same exercise for Q-learning, um, and see how these updates propagate. Um, so just like Monte Carlo versus Q- Monte Carlo versus TD for policy evaluation,",
    "start": "4125300",
    "end": "4137600"
  },
  {
    "text": "there's some of the same issues with Q-learning. Q-learning is only gonna update your Q function for the state you are just in.",
    "start": "4137600",
    "end": "4145069"
  },
  {
    "text": "So, even if it turns out later in the same episode, you get a really high reward. You're not gonna backpropagate",
    "start": "4145070",
    "end": "4150380"
  },
  {
    "text": "that information at the end of the episode in the way that you would with Monte Carlo. So Q-learning updates can be much slower often,",
    "start": "4150380",
    "end": "4157529"
  },
  {
    "text": "um, than Monte Carlo. Just like enter that has implications for how quickly you",
    "start": "4157530",
    "end": "4163009"
  },
  {
    "text": "can learn to make better decisions [NOISE]. So, the conditions that are sufficient to",
    "start": "4163010",
    "end": "4169640"
  },
  {
    "text": "ensure that Q-learning with the ε-greedy converges, it's basically the same as SARSA. We need to make sure that things are, um,",
    "start": "4169640",
    "end": "4176299"
  },
  {
    "text": "that are GLIE, and,",
    "start": "4176300",
    "end": "4183114"
  },
  {
    "text": "I see, and slightly revise this. So, if you just wanna make sure that you converge,",
    "start": "4183115",
    "end": "4189055"
  },
  {
    "text": "that needed to be the all SA infinitely often. I need to have these conditions on the Alpha.",
    "start": "4189055",
    "end": "4195100"
  },
  {
    "text": "So if you look at the same conditions,",
    "start": "4195100",
    "end": "4204720"
  },
  {
    "text": "in order for the Q functions to converge, you need to have these conditions on how you're updating your li- like what you're learning rates are.",
    "start": "4204720",
    "end": "4210565"
  },
  {
    "text": "Ah, and that you visit all state action pairs infinitely often. But that just- that's sufficient to allow you to converge to the optimal Q values.",
    "start": "4210565",
    "end": "4217500"
  },
  {
    "text": "And then if you want to actually make sure that the policy you're following is really the optimal policy,",
    "start": "4217500",
    "end": "4223034"
  },
  {
    "text": "then you need to be GLIE. You also need the policy you chose to be more and more greedy. All right, let me just briefly into the maximization bias before we finish.",
    "start": "4223035",
    "end": "4234195"
  },
  {
    "text": "The maximization bias is an interesting question. Ah, so why are we going to talk about this? Well okay, let's go back to this one.",
    "start": "4234195",
    "end": "4240910"
  },
  {
    "text": "So in Q learning, what are we doing? In Q learning, we're computing the Q function and then we're being e-greedy with respect to it.",
    "start": "4240910",
    "end": "4246639"
  },
  {
    "text": "Now, we're going to need some more data and we're re-updating our Q function and we're being greedy with respect to it. And so we're e-greedy with respect to it.",
    "start": "4246640",
    "end": "4253550"
  },
  {
    "text": "And so, we're always sort of doing this dance between updating stuff, getting more evidence, but then trying to kind of exploit that knowledge up to some random exploration.",
    "start": "4253550",
    "end": "4261750"
  },
  {
    "text": "And the maximization bias points out that maybe there can be some problems with this. Okay. So, let's just consider a particular example.",
    "start": "4261750",
    "end": "4268550"
  },
  {
    "text": "Imagine there is a single state MDP which means there's only one state. Um, but there are two actions and both of them actually have 0 mean random rewards.",
    "start": "4268550",
    "end": "4276764"
  },
  {
    "text": "So now, you can think of these as being like, Gaussians. Right now, we're mostly talking about it when the reward is",
    "start": "4276765",
    "end": "4282100"
  },
  {
    "text": "actually deterministic but it doesn't have to be. It could be stochastic reward. But in this case, where you would imagine that whether you take action a1 or action a2,",
    "start": "4282100",
    "end": "4290400"
  },
  {
    "text": "your expected value is zero, but the value you get on any particular episode- any particular step might not be zero.",
    "start": "4290400",
    "end": "4296400"
  },
  {
    "text": "Might be one or minus one or things like that. The average is still zero but on any particular step,",
    "start": "4296400",
    "end": "4303000"
  },
  {
    "text": "you could have something different, okay? But the expected value is zero um,",
    "start": "4303000",
    "end": "4308065"
  },
  {
    "text": "and so the Q value for both sa1 and the Q value for sa2 is zero which is the same as the value.",
    "start": "4308065",
    "end": "4313350"
  },
  {
    "text": "And these are all the optimal Q and S values. So let's imagine that there are some prior samples.",
    "start": "4313350",
    "end": "4320000"
  },
  {
    "text": "You've tried action a1 a bunch of times, you've tried action a2 a bunch of times, and you compute an empirical estimate of this.",
    "start": "4320000",
    "end": "4325965"
  },
  {
    "text": "And here again where um, there's just a single state. Um, and we can just average over these.",
    "start": "4325965",
    "end": "4331975"
  },
  {
    "text": "Let's imagine that it's super simple that we have um, gamma is equal to zeros.",
    "start": "4331975",
    "end": "4337090"
  },
  {
    "text": "So, we're really just estimating over the immediate reward. Okay, so there's no future rewards. We're just saying all the times that we've tried this action before.",
    "start": "4337090",
    "end": "4344595"
  },
  {
    "text": "What were all the rewards we get when we average? And now what we wanna do is we wanna take our empirical estimates of the Q function for a1 and a2,",
    "start": "4344595",
    "end": "4352180"
  },
  {
    "text": "and we want to figure out what the greedy policy is. And the problem is that it can be biased.",
    "start": "4352180",
    "end": "4358280"
  },
  {
    "text": "So even though each of these unbiased estimators of k- of Q are themselves,",
    "start": "4358650",
    "end": "4364505"
  },
  {
    "text": "even- even though the two estimates the ah, actions are unbiased, when you take a max over it, it can be biased.",
    "start": "4364505",
    "end": "4371800"
  },
  {
    "text": "Let's just write out what that is. So our V Pi hat is equal to the expected value of",
    "start": "4371800",
    "end": "4379190"
  },
  {
    "text": "max over Q a1, Q a2.",
    "start": "4379190",
    "end": "4386324"
  },
  {
    "text": "So I'm going to",
    "start": "4386325",
    "end": "4393290"
  },
  {
    "text": "be taking the expected value of max of these two things because that's how I defined my policy.",
    "start": "4393290",
    "end": "4398640"
  },
  {
    "text": "My policy says pick whichever of these two empirically looks best. But we know that from Jensens,",
    "start": "4398640",
    "end": "4404020"
  },
  {
    "text": "this is greater than equal to if you switch the max and the expectation [NOISE]. And this is just equal to max of zero, zero.",
    "start": "4404020",
    "end": "4422200"
  },
  {
    "text": "So the important part is this,",
    "start": "4423350",
    "end": "4426410"
  },
  {
    "text": "and this is equal to the true V Pi.",
    "start": "4429070",
    "end": "4434540"
  },
  {
    "text": "So that means that whatever we compute um, can be a biased estimator of the true V Pi.",
    "start": "4435540",
    "end": "4442195"
  },
  {
    "text": "So why did this happen? Well if you get ah, you know, if you only have a finite number of samples um,",
    "start": "4442195",
    "end": "4448929"
  },
  {
    "text": "I- if I have tried action a1 a finite number of times, it might be on that finite number of times it happens to",
    "start": "4448930",
    "end": "4454360"
  },
  {
    "text": "look slightly positive like it's like, a 0.1 instead of zero. And then when I take my policy,",
    "start": "4454360",
    "end": "4460445"
  },
  {
    "text": "I'm going to maximize over those. So I'm going to immediately exploit whichever one happens to look better even if with statistical chance.",
    "start": "4460445",
    "end": "4466985"
  },
  {
    "text": "So that's why you can get this maximization bias.",
    "start": "4466985",
    "end": "4471460"
  },
  {
    "text": "And the same thing can happen in terms of MDPs. So ah, this generally can happen.",
    "start": "4472590",
    "end": "4480594"
  },
  {
    "text": "You can also look at some nice examples from this paper by Johns- Johnson Tsitsiklis and",
    "start": "4480595",
    "end": "4486155"
  },
  {
    "text": "Shie Mannor where they show how this can also happen in Markov decision processes. Where essentially if you ah,",
    "start": "4486155",
    "end": "4492940"
  },
  {
    "text": "if your estimates for these Q functions ah, then you're going to be sort of biased to whatever has happened to look good in",
    "start": "4492940",
    "end": "4498329"
  },
  {
    "text": "your data and so you can have a maximization bias. So one thing that was proposed to try to",
    "start": "4498330",
    "end": "4504665"
  },
  {
    "text": "handle- deal with this case is called double Q learning. And so the idea is instead of ah,",
    "start": "4504665",
    "end": "4510724"
  },
  {
    "text": "having one Q function, we are going to have two different Q functions. And we're going to create two independent unbiased estimators of Q,",
    "start": "4510725",
    "end": "4519110"
  },
  {
    "text": "and you're going to use one of them for your decision-making and the other to try to estimate the value.",
    "start": "4519110",
    "end": "4525295"
  },
  {
    "text": "And that's gonna allow us to have an unbiased estimator.",
    "start": "4525295",
    "end": "4529280"
  },
  {
    "text": "And the reason that you might want to do this is because ah, then it can sort of help- help with this issue that",
    "start": "4530520",
    "end": "4538670"
  },
  {
    "text": "you can end up being overly bias towards things that have happened to look good. Yes, now you're separating like between the samples that you're ga-",
    "start": "4538670",
    "end": "4545000"
  },
  {
    "text": "that you're getting to estimate how good an action is versus ah, the way you're trying to estimate your policy.",
    "start": "4545000",
    "end": "4552055"
  },
  {
    "text": "So I'm just going to be a little brief with this because of time. Q learning basically- double Q learning basically",
    "start": "4552055",
    "end": "4557720"
  },
  {
    "text": "means that we're going to have these two different Q functions. Um, and then with 50% probability,",
    "start": "4557720",
    "end": "4562900"
  },
  {
    "text": "we're going to update one, at 50% probability, we're going to update the other. So, this was- and in this case,",
    "start": "4562900",
    "end": "4570570"
  },
  {
    "text": "I'm going to skip out all others um, the final slides I want to show you the difference. Um, the difference here can be significant sometimes.",
    "start": "4571130",
    "end": "4579770"
  },
  {
    "text": "So, in this case, this is sort of looking at the percent of time that we're taking bad actions in this domain where you can have,",
    "start": "4579770",
    "end": "4587260"
  },
  {
    "text": "in this case, you have a scenario where it's actually the wrong thing to do but it's stochastic.",
    "start": "4587260",
    "end": "4592290"
  },
  {
    "text": "And so with a small amount of data, it can end up looking better compared to another option where the reward is deterministic and actually better but has no stochasticity,",
    "start": "4592290",
    "end": "4601760"
  },
  {
    "text": "and then Q learning can suffer quite a lot from this maximization bias. Um, if you're using the same Q function to essentially",
    "start": "4601760",
    "end": "4608520"
  },
  {
    "text": "immediately define your policy as you are um, for estimating the value of that policy,",
    "start": "4608520",
    "end": "4614190"
  },
  {
    "text": "whereas double Q learning does a lot better in this case. So it's something to consider in terms of when you're implementing these things",
    "start": "4614190",
    "end": "4623665"
  },
  {
    "text": "and it's pretty small overhead too because you can just maintain two different Q functions.",
    "start": "4623665",
    "end": "4628760"
  },
  {
    "text": "Right. I know that was a little bit fast but make sure to put details on there, um, when I- we upload the additional slides today um.",
    "start": "4628770",
    "end": "4636960"
  },
  {
    "text": "The main things that you should know from today is to be able to understand how you do this Monte Carlo on policy controls and same for SARSA and Q-learning.",
    "start": "4636960",
    "end": "4644000"
  },
  {
    "text": "It's useful to understand how quickly they update, um, both in terms of whether you have to wait to the end of",
    "start": "4644000",
    "end": "4649560"
  },
  {
    "text": "the episode and then how quickly information propagates back. And also to understand how to define the conditions on",
    "start": "4649560",
    "end": "4655260"
  },
  {
    "text": "the algorithms converging to the optimal Q function. Thanks.",
    "start": "4655260",
    "end": "4659400"
  }
]