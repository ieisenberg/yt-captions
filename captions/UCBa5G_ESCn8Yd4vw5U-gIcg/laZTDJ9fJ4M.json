[
  {
    "text": "So today, I had thought that we would wrap up the cryptogram problem, however, that it takes some time to do the editing down of the tapes.",
    "start": "1890",
    "end": "11820"
  },
  {
    "text": "We have five hours of videotape to boiled to compress down into the key moments.",
    "start": "11820",
    "end": "18480"
  },
  {
    "text": "And I think you have so that everyone will be able to see the what it was like on the other teams.",
    "start": "18480",
    "end": "26880"
  },
  {
    "text": "And so tomorrow we're going to do that editing and then Thursday. That will be the class on Thursday.",
    "start": "26880",
    "end": "31919"
  },
  {
    "text": "So today I want to launch into problem three, which we were going to launch on Thursday.",
    "start": "31920",
    "end": "38510"
  },
  {
    "text": "No problem. Problem three is especially.",
    "start": "38510",
    "end": "48390"
  },
  {
    "text": "Well, I think it's it it combines so many aspects of computer science that it is going to turn out to be an especially instructive problem.",
    "start": "48390",
    "end": "59700"
  },
  {
    "text": "And and it initially it involves logic. That's why I had the cryptogram I did yesterday.",
    "start": "59700",
    "end": "66450"
  },
  {
    "text": "The last the last, the closing words of it or that's logic and that's the transition between problem two and problem three.",
    "start": "66450",
    "end": "76560"
  },
  {
    "text": "Although it also it also gets into techniques of of heuristic search, at least in one way, of looking at the problem.",
    "start": "76560",
    "end": "89009"
  },
  {
    "text": "One reasonable way and also combinatorial algorithms for covering problems.",
    "start": "89010",
    "end": "95480"
  },
  {
    "text": "And because we're going to be solving a special case of a ENPI complete problem,",
    "start": "95480",
    "end": "101190"
  },
  {
    "text": "we're gonna be trying to get as good a solution as we can to a to a covering problem.",
    "start": "101190",
    "end": "107700"
  },
  {
    "text": "So it ties together lots of lots of things. And there are many ways to approach this.",
    "start": "107700",
    "end": "112920"
  },
  {
    "text": "I was amused that to hear about the Ellis program that areif mentioned a few weeks or so ago,",
    "start": "112920",
    "end": "119100"
  },
  {
    "text": "because I already had known what the cryptogram was going to be on that.",
    "start": "119100",
    "end": "126479"
  },
  {
    "text": "And here you were talking about maybe you having Alice start working, solving this,",
    "start": "126480",
    "end": "131970"
  },
  {
    "text": "solving this this thing that had a little bit to do with Alice, as we know now.",
    "start": "131970",
    "end": "139740"
  },
  {
    "text": "And so I'm still not personally familiar with that program. But that's, again, a case where that kind of searching, considering what you call a constraint, satisfaction, might be relevant now.",
    "start": "139740",
    "end": "157470"
  },
  {
    "text": "OK. So the main thing to get to get going on problem three, however, is just to understand exactly what the problem is and to see this kind of circuit that we're dealing with,",
    "start": "157470",
    "end": "166370"
  },
  {
    "text": "because it also has some interesting hardware implications. And and the circuit that we're that that the the problem in,",
    "start": "166370",
    "end": "175180"
  },
  {
    "text": "does anybody remember anything about problem from three or have you haven't looked at it at all?",
    "start": "175180",
    "end": "181890"
  },
  {
    "text": "Somebody said no, not at all. OK, well, the idea is that we we've got an interesting circuit.",
    "start": "181890",
    "end": "188130"
  },
  {
    "text": "The circuit is for a multiplier or parallel multiplier. And I'm going talking more or we're going to discuss.",
    "start": "188130",
    "end": "194640"
  },
  {
    "text": "But I guess I'll do a lot of talking to today more than usual.",
    "start": "194640",
    "end": "200620"
  },
  {
    "text": "The the ideas of this of this multiplier parallel means what if I say something as a parallel multiplier in hardware?",
    "start": "200620",
    "end": "208019"
  },
  {
    "text": "What is that? Why do I say things at the same time? He tries to do a lot of things. At the same time we're trying to to to minimize the depth of the circuit.",
    "start": "208020",
    "end": "218250"
  },
  {
    "text": "You know, the number of gates that you have to go through in order to get the output signals between the input and output.",
    "start": "218250",
    "end": "224880"
  },
  {
    "text": "And the fewer that is, the more parallel with circuit is, I guess.",
    "start": "224880",
    "end": "230340"
  },
  {
    "text": "And so, like a parallel matter tries to do the Kerry propagation unit in a minimum time so that",
    "start": "230340",
    "end": "240450"
  },
  {
    "text": "you don't have to wait for like if you ever if you want to add one hundred numbers, you don't have to wait one hundred steps to get the carry to go to the end and a parallel multiplier.",
    "start": "240450",
    "end": "250860"
  },
  {
    "text": "Similarly, we try to imagine that somebody was we're designing a supercomputer, some sort that the the speed of the multiplier is critical.",
    "start": "250860",
    "end": "261299"
  },
  {
    "text": "We want to make sure that we get very, very, very soon from the input to the output.",
    "start": "261300",
    "end": "269039"
  },
  {
    "text": "And the cost of hardware is no object. I mean, you have to have lots of gates in order to do this.",
    "start": "269040",
    "end": "277050"
  },
  {
    "text": "Pay for lots of gates, more important things to get the speed. That's at least that some some some of the implications of this that we're we're more",
    "start": "277050",
    "end": "286830"
  },
  {
    "text": "interested in minimizing in depth this circuit than minimizing the size of the circuit.",
    "start": "286830",
    "end": "293879"
  },
  {
    "text": "OK. Now, suppose we have a circuit. It's got lots of gates in it. Then it's been manufactured.",
    "start": "293880",
    "end": "303680"
  },
  {
    "text": "And the question is, did did the did something go wrong in the manufacturer?",
    "start": "303680",
    "end": "310639"
  },
  {
    "text": "Is there. Does this does this circuit that somebody just now? Not that. That there isn't a logical error in our design or or a proof.",
    "start": "310640",
    "end": "320810"
  },
  {
    "text": "We can prove that the circuit is correct. What. But what the manufacturing process.",
    "start": "320810",
    "end": "326510"
  },
  {
    "text": "Maybe some, you know, imperfections, one sort or another have crept in.",
    "start": "326510",
    "end": "334070"
  },
  {
    "text": "And so we want to know. Yeah. We assume that the thing is the process of manufacturer is sufficiently reliable and that we haven't lost it,",
    "start": "334070",
    "end": "344050"
  },
  {
    "text": "that we haven't lost much of the circuit. And for the purpose of this problem, we assume that only one part of the circuit is going to be defective.",
    "start": "344050",
    "end": "352550"
  },
  {
    "text": "And in fact, it's defective in a particular way that they call stuck at fault. This means that that big gate that's computing a binary function of its inputs is either always producing zero or always producing one.",
    "start": "352550",
    "end": "369490"
  },
  {
    "text": "Has its output always too, always false? Because it's been it's been badly manufactured.",
    "start": "369490",
    "end": "379370"
  },
  {
    "text": "And we would like to know that if we would like to have a small number of test cases,",
    "start": "379370",
    "end": "385130"
  },
  {
    "text": "that would mean that if it passed the test cases, then it doesn't have any of these stuck at fault.",
    "start": "385130",
    "end": "393260"
  },
  {
    "text": "Not a single stuck at fault in both senses of that word, that sentence.",
    "start": "393260",
    "end": "399300"
  },
  {
    "text": "It doesn't have any single stuck at fault. But it might be possible that that the that it'll have two false or eighty two faults that.",
    "start": "399300",
    "end": "414440"
  },
  {
    "text": "And it'll still pass all of our test cases. We're only giving us a set of test cases that we're supposed to detect the errors of the singles stuck at fault.",
    "start": "414440",
    "end": "426650"
  },
  {
    "text": "We don't correct them. We after our test cases are run through. We won't know necessarily which gates are our flaky, which gate is stuck.",
    "start": "426650",
    "end": "438470"
  },
  {
    "text": "We just know that. That the the chip or whatever it is we've manufactured to be tossed out.",
    "start": "438470",
    "end": "444080"
  },
  {
    "text": "We haven't figured out which which part of it is is is wrong. So the test cases then our numbers to be multiplied X, Y and X, X, Y, Y and Z.",
    "start": "444080",
    "end": "456670"
  },
  {
    "text": "And we and we also know the product zei. And for I equals one to n we we multiply, we, we put x i y y i in the inputs and we check to see if the output is equal to zei.",
    "start": "456670",
    "end": "468980"
  },
  {
    "text": "And if they, if it matches for all n then we've got we we know that we have no single stock at fault.",
    "start": "468980",
    "end": "477140"
  },
  {
    "text": "The question that we're trying to solve in this class then will be to find the smallest n for which we for which there exists,",
    "start": "477140",
    "end": "484320"
  },
  {
    "text": "say a set of things, X or Y. The smallest would be the smallest that the class can find in mass.",
    "start": "484320",
    "end": "491900"
  },
  {
    "text": "We can also find a proof that we have smallest. It seems to be unlikely at the moment that we're going to have a a method of actually exhausting all all",
    "start": "491900",
    "end": "501920"
  },
  {
    "text": "smaller in unless somebody can come up with a really solution like N equals three or something like this,",
    "start": "501920",
    "end": "507080"
  },
  {
    "text": "which happens to detect all of them. And we could probably prove that no solution with N equals two would work.",
    "start": "507080",
    "end": "513500"
  },
  {
    "text": "But I suspect that we can get in down in the in in the range of, you know, couple dozen.",
    "start": "513500",
    "end": "526640"
  },
  {
    "text": "What did I say? The problem is sixteen, 16, something like that anyway.",
    "start": "526640",
    "end": "532740"
  },
  {
    "text": "We should be able to get it. We should be able to get in reasonably small.",
    "start": "532740",
    "end": "542510"
  },
  {
    "text": "Not too much greater than 10. Maybe you can. But I would be surprised if we got it down to ten.",
    "start": "542510",
    "end": "550160"
  },
  {
    "text": "Although there are this particular circuit I think it was four hundred and one gates making a total",
    "start": "550160",
    "end": "557690"
  },
  {
    "text": "of eight hundred and two single stuck at fault because each gate could be stuck in two ways.",
    "start": "557690",
    "end": "564320"
  },
  {
    "text": "So these eight hundred and some eight hundred too fast to detect.",
    "start": "564320",
    "end": "570590"
  },
  {
    "text": "And we want to cover them with something like 20 cases, let's say, which means that each case has to cover about 40 on the average that nobody else covers or something like that.",
    "start": "570590",
    "end": "582830"
  },
  {
    "text": "I mean, there's no there will be a lot of a lot of inputs.",
    "start": "582830",
    "end": "588320"
  },
  {
    "text": "We'll, of course, overlap with other with other with other cases.",
    "start": "588320",
    "end": "594770"
  },
  {
    "text": "And so our single input X Y might detect so many different.",
    "start": "594770",
    "end": "601180"
  },
  {
    "text": "False. That will cause X times way to be multiplied badly.",
    "start": "601180",
    "end": "608600"
  },
  {
    "text": "But somehow we we want to cover it with above with with 20 or fewer test cases.",
    "start": "608600",
    "end": "615470"
  },
  {
    "text": "All eight hundred and two of the others. Others. OK, so now does anybody know anything about parallel adding?",
    "start": "615470",
    "end": "623560"
  },
  {
    "text": "First of all, before I go into parallel multiplying. No. No way to to do a circuit that would, that would add and bit no.",
    "start": "623560",
    "end": "632750"
  },
  {
    "text": "Efficiently. Sorry about that.",
    "start": "632750",
    "end": "638330"
  },
  {
    "text": "Carrie, look ahead. What does Carrie look I had mean to you. Doesn't wait for the carriers to ripple through the lower stages.",
    "start": "638330",
    "end": "645970"
  },
  {
    "text": "It computes them by having two levels and then the normal position where they get to a larger number that to compensate.",
    "start": "645970",
    "end": "655899"
  },
  {
    "text": "OK. Now, can you be specific? Let's try to design a young circuit first fought for it for let's say let's say binary edition of big numbers,",
    "start": "655900",
    "end": "669470"
  },
  {
    "text": "for example, from C each I call mom three.",
    "start": "669470",
    "end": "674540"
  },
  {
    "text": "I guess I'll I'll number them this way. They will.",
    "start": "674540",
    "end": "682850"
  },
  {
    "text": "Each stage either produces a new carrier or propagate. So we're going to add these in binary and up and we get carry's.",
    "start": "682850",
    "end": "692149"
  },
  {
    "text": "So let's call this C Zino C one, C choose in three and then Keri's C zero.",
    "start": "692150",
    "end": "704340"
  },
  {
    "text": "You want to see to see three. These are carriers in the formula. What would be a formula for Zeine off c c not to say the formula is the same for each case.",
    "start": "704340",
    "end": "718220"
  },
  {
    "text": "Xie xie sell-by dinkle two. This is the thing without Kerry's. I'm like Exide plus Y on my two, which is also known as side exclusive ma.",
    "start": "718220",
    "end": "737050"
  },
  {
    "text": "Why. I mean I think here in the handout I asked.",
    "start": "737050",
    "end": "746560"
  },
  {
    "text": "Did I use your circle plus four exclusively? That's my favorite location for Exclusive.",
    "start": "746560",
    "end": "752110"
  },
  {
    "text": "I think it's got to win over all the other notations someday. It's so it's I like to also use it for when the X's are arbitrary non-negative integers, when X and Y are arbitrary,",
    "start": "752110",
    "end": "768220"
  },
  {
    "text": "non-negative integers exclusive or I mean X circle plus Y to mean the exclusive or of the binary.",
    "start": "768220",
    "end": "776069"
  },
  {
    "text": "I'll take a binary representations of the integers. It's also called the name addition because.",
    "start": "776070",
    "end": "785470"
  },
  {
    "text": "This is the way this is the game of name. I think somebody might have read. The winning strategy is based on what happened, getting to positions where the exclusive or in this sense of all the piles is zero.",
    "start": "785470",
    "end": "798050"
  },
  {
    "text": "Those are the those are positions from which if you take anything off of a pile, you're bound to destroy that condition.",
    "start": "798050",
    "end": "805540"
  },
  {
    "text": "But then there's another move that you can make to restore the condition that the name summons you. So exclusive or of of integers turns out to be an interesting operation on integers two but one zero one.",
    "start": "805540",
    "end": "816700"
  },
  {
    "text": "We know what it is zero. It's the same as saying we get one if X and Y are different and zero effects and one are the same.",
    "start": "816700",
    "end": "825850"
  },
  {
    "text": "And then C survive is equal to carry. It's so, so easy.",
    "start": "825850",
    "end": "832279"
  },
  {
    "text": "Survival is X plus why I mod to see I is X plus why I give to the tomboy just right.",
    "start": "832280",
    "end": "842030"
  },
  {
    "text": "I see. I mean when and why I m or c I mean.",
    "start": "842030",
    "end": "847860"
  },
  {
    "text": "Oh no I'm talking about in the first step here. Yeah. So this year you're looking ahead for the final track for the final.",
    "start": "847860",
    "end": "855470"
  },
  {
    "text": "But I'm, I'm saying that we can have these two first of all and we have we have these numbers and we have",
    "start": "855470",
    "end": "861819"
  },
  {
    "text": "these numbers and then there is going to be a then one more thing we could do is add these,",
    "start": "861820",
    "end": "869080"
  },
  {
    "text": "add these again. And and then we would get another step of Kerry.",
    "start": "869080",
    "end": "877310"
  },
  {
    "text": "And until finally, there wouldn't be till all the seas were zero.",
    "start": "877310",
    "end": "882340"
  },
  {
    "text": "And then we'd be then we'd be done. And we can prove that that in the next stage, I mean, if we take V0, this is gonna have to be zero zero zero zero plus C one and still a possibility.",
    "start": "882340",
    "end": "894760"
  },
  {
    "text": "You know, this could be W wanted something with there's a possibility that there's a carryover over here at the next step.",
    "start": "894760",
    "end": "901830"
  },
  {
    "text": "And we could use this process several times, but I'm not. Marianne, you heard that you were going further. So what can you.",
    "start": "901830",
    "end": "911390"
  },
  {
    "text": "Another letter for, for. Let's let's call this W and and then since then we can try to get a scene that represents the final.",
    "start": "911390",
    "end": "932980"
  },
  {
    "text": "Let's let's try to get carries that represent the final answer.",
    "start": "932980",
    "end": "938290"
  },
  {
    "text": "So let's see now. Let me say that let me use a for the answer.",
    "start": "938290",
    "end": "944930"
  },
  {
    "text": "One, you want to pay for the answer.",
    "start": "944930",
    "end": "952149"
  },
  {
    "text": "And let's suppose that Sabai is going to equal these by exclusive or see some money.",
    "start": "952150",
    "end": "963830"
  },
  {
    "text": "That'll be fine. And carries that carry that. I think you would say Samaria was going to be the.",
    "start": "963830",
    "end": "975450"
  },
  {
    "text": "It would be one if if it's if zie is not the answer. Did you put the Zeke but zip by the opposite digit is the answer. And zero if if a two is equal z2 then C two would be.",
    "start": "975450",
    "end": "988480"
  },
  {
    "text": "So. So this defines a carry saying that it should change the answer from the man to some.",
    "start": "988480",
    "end": "998399"
  },
  {
    "text": "And then we would like to be if we could compute the C, the C Savi's then we could then we could actually.",
    "start": "998400",
    "end": "1008680"
  },
  {
    "text": "Oh well then then we're done. And the idea would be to try to compute the CIC in parallel, as Andy said,",
    "start": "1008680",
    "end": "1018839"
  },
  {
    "text": "by trying to somehow have logic that that doesn't require a C for to be calculated with with with four or eight layers of logic.",
    "start": "1018840",
    "end": "1033949"
  },
  {
    "text": "Well, I mean, what was the formula that you that you said? Let me try to write down the street c. I see.",
    "start": "1033950",
    "end": "1043240"
  },
  {
    "text": "Explain. So that's not very apparent. Let's see. Let's see. Not C well but let's look at. That's OK. It was X equals X, Y and Y or C minus or CIA minus one N X and X I or C.",
    "start": "1043240",
    "end": "1066210"
  },
  {
    "text": "I mean this one thing and I take a look at this.",
    "start": "1066210",
    "end": "1077220"
  },
  {
    "text": "This is a carry. This says that you see what this this c survive represents a carry.",
    "start": "1077220",
    "end": "1085450"
  },
  {
    "text": "Let me see. Maybe I want to make a saw by minus one. I'm not sure I want one.",
    "start": "1085450",
    "end": "1092789"
  },
  {
    "text": "It's supposed to represent a carry. I was asked if the carry if if Z2 is different from a two that means that that there was a a a one carried across from the, from the right.",
    "start": "1092790",
    "end": "1109150"
  },
  {
    "text": "OK. And so c I it's. Yeah. So I want to see minus one here know that this means that like for example a three would be Z3 exclusive",
    "start": "1109150",
    "end": "1123120"
  },
  {
    "text": "or with C two because C two would represent a carry from carry across this line here for C two.",
    "start": "1123120",
    "end": "1132240"
  },
  {
    "text": "And you're saying f C two would be true if X two and Y two are both correct or if X too.",
    "start": "1132240",
    "end": "1139720"
  },
  {
    "text": "Yeah. And C one or X or Y two and C one.",
    "start": "1139720",
    "end": "1145350"
  },
  {
    "text": "So you have at least two out of the three of these. Of the X two, Y two and C one.",
    "start": "1145350",
    "end": "1150510"
  },
  {
    "text": "Being being on could actually replace those last two terms with the CIA minus one and zei.",
    "start": "1150510",
    "end": "1165100"
  },
  {
    "text": "Since we've already we've already computed zei. You've already figured out that. So that's. So another formula for this is Exide Y, which in fact we know also is otherwise known as W.",
    "start": "1165100",
    "end": "1182970"
  },
  {
    "text": "So I. I r or.",
    "start": "1182970",
    "end": "1191850"
  },
  {
    "text": "And then this term, then he's going to he's supposed to give us the one X, I think, for Y I's one, but not both or both.",
    "start": "1191850",
    "end": "1207780"
  },
  {
    "text": "And S.I. is right. But we don't need if we don't you really needing care for the case when they're both on.",
    "start": "1207780",
    "end": "1214680"
  },
  {
    "text": "So. So that's a dunk. I mean, you've got to pick it up if they're both on. But we don't. We've already done so.",
    "start": "1214680",
    "end": "1219910"
  },
  {
    "text": "So so Roger's point is that this could also be written C minus one VII with which we're even though this zei is not the same.",
    "start": "1219910",
    "end": "1233170"
  },
  {
    "text": "I mean, you don't have this part of the formula is not equal to this part of the formula. But the union, when you add when you put it into effect, say, why not?",
    "start": "1233170",
    "end": "1243450"
  },
  {
    "text": "It's equal now.",
    "start": "1243450",
    "end": "1248549"
  },
  {
    "text": "OK. So now we've got a recurrence relation for the season in terms of w WMC.",
    "start": "1248550",
    "end": "1255750"
  },
  {
    "text": "And we can expand it off. So I see.",
    "start": "1255750",
    "end": "1261120"
  },
  {
    "text": "Let's take a look and see. Three for example, let's equal W three or C two Z3 and then going up you know that C two is equal to W.",
    "start": "1261120",
    "end": "1274650"
  },
  {
    "text": "Well let's put the Z3 first. So these three times W two or C one and this is equal to W three to four, C three WGME Distributive Law.",
    "start": "1274650",
    "end": "1296670"
  },
  {
    "text": "I'm, I guess I'm not dropping my my end signs here.",
    "start": "1296670",
    "end": "1302490"
  },
  {
    "text": "Excuse me for that. I'll use to use concatenation to mean logical.",
    "start": "1302490",
    "end": "1312260"
  },
  {
    "text": "So W three are Z three. W two or the three. Is it two Zs. You see one is too easy to see one.",
    "start": "1312260",
    "end": "1326500"
  },
  {
    "text": "And so this, this, this will give me a Z three. Easy to see one which is going to be W one and then limit the last two will be the easy to see one see one C zero and C zero is since C minus one is,",
    "start": "1326500",
    "end": "1352990"
  },
  {
    "text": "it's always there. So C zero is going to be W. So running out the front, the, the law for Kerrie's we get of a formula like this.",
    "start": "1352990",
    "end": "1369840"
  },
  {
    "text": "Now the, the idea in turn to find efficient circuits as far as a small number of levels of computation",
    "start": "1369840",
    "end": "1383110"
  },
  {
    "text": "is similar to the ideas that are used in programing to find efficient algorithms.",
    "start": "1383110",
    "end": "1389190"
  },
  {
    "text": "We had as a time when all of the algorithms in computer science were going faster.",
    "start": "1389190",
    "end": "1397230"
  },
  {
    "text": "I mean, like when was this maybe the late 60s or something. Every method that we used to think took N squared steps was now being done.",
    "start": "1397230",
    "end": "1406470"
  },
  {
    "text": "And again, everything that used to take in Cube went down to N squared. And people would be walking into my office everyday and say, you remember this problem that you used to take and and cubed operations?",
    "start": "1406470",
    "end": "1420330"
  },
  {
    "text": "Well, I can do it in N squared. And the way that they did it was almost always call what what would be the paradigm that they divide and divide and conquer?",
    "start": "1420330",
    "end": "1431789"
  },
  {
    "text": "Yeah, they would always they would almost always divide the problem into two equal parts. And then they would have a method that would be recursive,",
    "start": "1431790",
    "end": "1440700"
  },
  {
    "text": "saying if you can solve each of the sub problems on harmful end things, then then you can go on.",
    "start": "1440700",
    "end": "1447419"
  },
  {
    "text": "You have a clever way of combining them. And this and this gives you a bit of a savings of roughly order and often in in the algorithm.",
    "start": "1447420",
    "end": "1457590"
  },
  {
    "text": "And so these these bonds were were falling on time. And pretty soon people recognize this pattern of divide and conquer.",
    "start": "1457590",
    "end": "1464100"
  },
  {
    "text": "And it became named and were going to be teaching at the high school students next year.",
    "start": "1464100",
    "end": "1474240"
  },
  {
    "text": "Okay. The. Now, in this case, let's see if we couldn't figure out what method.",
    "start": "1474240",
    "end": "1482700"
  },
  {
    "text": "Divide and conquer. For this C of when. When N is large.",
    "start": "1482700",
    "end": "1489470"
  },
  {
    "text": "Now. Let's see if we can think of a way to do to calculate it.",
    "start": "1489470",
    "end": "1499600"
  },
  {
    "text": "Three isn't too large, but you have to think big, think that three is a big, large number.",
    "start": "1499600",
    "end": "1505289"
  },
  {
    "text": "We've got four terms there are together.",
    "start": "1505290",
    "end": "1511480"
  },
  {
    "text": "Can you think of a way to do eight terms?",
    "start": "1511480",
    "end": "1517179"
  },
  {
    "text": "For example, C seven is going to be equal.",
    "start": "1517180",
    "end": "1523780"
  },
  {
    "text": "She's going to have eight terms in it, starting with W seven, seven, six and so on.",
    "start": "1523780",
    "end": "1531730"
  },
  {
    "text": "The last one will be the seven easy six all the way down. C one, W zero or was it.",
    "start": "1531730",
    "end": "1542919"
  },
  {
    "text": "Let's try to find a way to compute C seven in like one or two steps, more than C three, because we can set in parallel bit slicing.",
    "start": "1542920",
    "end": "1558130"
  },
  {
    "text": "You could have. You could have something that should compute the carry to the seven point and then you can, you can combine the rippling through and can look ahead.",
    "start": "1558130",
    "end": "1570610"
  },
  {
    "text": "How can you have it if you have glass let's say for four bits midship at the end of it, you know, I mean,",
    "start": "1570610",
    "end": "1582820"
  },
  {
    "text": "just any way that is occurring at the end of it, like we know, for example, here C three is whether or not there's a carry.",
    "start": "1582820",
    "end": "1591899"
  },
  {
    "text": "Daniel, is that a C minus one for the extra? So I should have written.",
    "start": "1591900",
    "end": "1599780"
  },
  {
    "text": "Plus, see, these are easy to assume, one zero C minus one as the extra term.",
    "start": "1599780",
    "end": "1611810"
  },
  {
    "text": "OK. So I think you should come back.",
    "start": "1611810",
    "end": "1618740"
  },
  {
    "text": "Excuse me. Speak a little louder. It gives you it just decreases. All right. We're working on it. There is a there are several ways that people are heard.",
    "start": "1618740",
    "end": "1628250"
  },
  {
    "text": "I'm not sure what Babbage's way it was, but I think it was something like like that.",
    "start": "1628250",
    "end": "1633730"
  },
  {
    "text": "Oh, gosh. I should I should really know if you could do it by or treat it.",
    "start": "1633730",
    "end": "1641650"
  },
  {
    "text": "But where each each fits generates.",
    "start": "1641650",
    "end": "1647840"
  },
  {
    "text": "Well. Can tell whether the group that the groups that come that contribute to its group generate or propagate.",
    "start": "1647840",
    "end": "1661380"
  },
  {
    "text": "Carry and. OK. Thank you. Binary tree means that you're thinking that you've got like a 32 bit add.",
    "start": "1661380",
    "end": "1670880"
  },
  {
    "text": "You're thinking of that as divided into two groups of sixteen which are divided in each each of sixteen, divided to two of eight and so on.",
    "start": "1670880",
    "end": "1677240"
  },
  {
    "text": "And make these fun groups that we and each group is going to have some polls from the right thing,",
    "start": "1677240",
    "end": "1684800"
  },
  {
    "text": "whether there was a carry from that, from the people to the right. That's the gender. That's the. Yes. OK.",
    "start": "1684800",
    "end": "1694559"
  },
  {
    "text": "And and in order to get one of the ways I first heard I heard this described was that you",
    "start": "1694560",
    "end": "1699800"
  },
  {
    "text": "imagine that you compute in each group computes to assign two things simultaneously.",
    "start": "1699800",
    "end": "1705860"
  },
  {
    "text": "One, under the assumption that there is a carry from the right and one under the assumption that there isn't a K from the right man.",
    "start": "1705860",
    "end": "1712970"
  },
  {
    "text": "Then either later stage somebody chooses. Which of those two groups is the correct one? Once you get to the top of the product, it's a possibility, you know,",
    "start": "1712970",
    "end": "1723850"
  },
  {
    "text": "that the task can tell each of the points below is what the actual state of affairs is in.",
    "start": "1723850",
    "end": "1731020"
  },
  {
    "text": "And then you can get those results back and finally get the result. Mm hmm. OK. So so that that binary tree is a is a is a good way of looking at.",
    "start": "1731020",
    "end": "1742460"
  },
  {
    "text": "I think there's also an algebraic way that might be more general or something anyway,",
    "start": "1742460",
    "end": "1748490"
  },
  {
    "text": "somehow encoding by just looking at the formula and factoring out the formula itself.",
    "start": "1748490",
    "end": "1761240"
  },
  {
    "text": "So let's see if I can in fact, I'm not sure I can retrieve it here.",
    "start": "1761240",
    "end": "1767809"
  },
  {
    "text": "But it's it's like what you were saying. Suppose we had calculated w seven or disease seven, six or seven C, D, W or 76.",
    "start": "1767810",
    "end": "1786420"
  },
  {
    "text": "We find W four and F, that's some unit of time.",
    "start": "1786420",
    "end": "1793910"
  },
  {
    "text": "And then we also have C seven, six, five, four times C three.",
    "start": "1793910",
    "end": "1806400"
  },
  {
    "text": "So I don't need to write it down. Oh, oh, oh.",
    "start": "1806400",
    "end": "1818260"
  },
  {
    "text": "Seventy six point three, I'm not sure this comes out to be exactly the same circuit that would come out of the binary tree stuff that I noticed then.",
    "start": "1818260",
    "end": "1831150"
  },
  {
    "text": "This term looks exactly like this term, except that all the subscripts are increased by four.",
    "start": "1831150",
    "end": "1842420"
  },
  {
    "text": "And so just the amount of time to calculate this formula is the same as the amount of time to calculate this formula.",
    "start": "1842420",
    "end": "1851850"
  },
  {
    "text": "And we just use the same certainly could include subscripts by four. Then we want to orien this.",
    "start": "1851850",
    "end": "1859710"
  },
  {
    "text": "But that's five five operands. It's not.",
    "start": "1859710",
    "end": "1865740"
  },
  {
    "text": "What we would like to have also computed is this guy.",
    "start": "1865740",
    "end": "1871500"
  },
  {
    "text": "Simultaneously. So. So that the product of those four Zs is available to us.",
    "start": "1871500",
    "end": "1876720"
  },
  {
    "text": "And then in. So that does it. So let's see. So it could be computed in two more levels of logic.",
    "start": "1876720",
    "end": "1883950"
  },
  {
    "text": "Oversee three. One level two to do the.",
    "start": "1883950",
    "end": "1889019"
  },
  {
    "text": "And here in one level to do your.",
    "start": "1889020",
    "end": "1894730"
  },
  {
    "text": "That gives us two more levels for every so then we can get see 15 into more levels because we can compute the all the subscripts increased by eight.",
    "start": "1894730",
    "end": "1905929"
  },
  {
    "text": "We could compute the analog of C of the first half was of C fifteen.",
    "start": "1905930",
    "end": "1911250"
  },
  {
    "text": "By increasing all subscripts by eight and the. And then we also have to keep the products of all disease out of the first Azeez which.",
    "start": "1911250",
    "end": "1925810"
  },
  {
    "text": "So, so we get two outputs, one output at that level three for example.",
    "start": "1925810",
    "end": "1934490"
  },
  {
    "text": "We will not compute C, C three. But we would also compute this. I think it's the same thing. We'd also compute this other guy. Oh, let's call it.",
    "start": "1934490",
    "end": "1942640"
  },
  {
    "text": "Need three say is equal to the three. Easy to do.",
    "start": "1942640",
    "end": "1947990"
  },
  {
    "text": "You want to see zero. And then we can call this piece because D seven is going to be equal to C seven three six zero at the end.",
    "start": "1947990",
    "end": "1969620"
  },
  {
    "text": "So. So there's a there's two S. Yeah. There's two sides good going on here.",
    "start": "1969620",
    "end": "1976880"
  },
  {
    "text": "But we would get we would get that by taking this guy which we can compute in the same time as D three multiplied by three.",
    "start": "1976880",
    "end": "1987380"
  },
  {
    "text": "And so there wouldn't be so. So that's the idea of a a parallel circuit that takes up something like to log in steps log based.",
    "start": "1987380",
    "end": "1999200"
  },
  {
    "text": "When I say log, I'm going to log base two right now. So like a log of 32, it's five.",
    "start": "1999200",
    "end": "2005559"
  },
  {
    "text": "And this would take us to a log in levels of logic, maybe plus a minus one at the beginning, because every time we double, we add two levels.",
    "start": "2005560",
    "end": "2017730"
  },
  {
    "text": "And now the question, could we imagine a circuit that does better,",
    "start": "2017730",
    "end": "2024620"
  },
  {
    "text": "like a square root of log in something like that, something that would would maybe be Konstantine.",
    "start": "2024620",
    "end": "2030880"
  },
  {
    "text": "We just had a few more gates and we tried to get the Kerrys into into constant, you know,",
    "start": "2030880",
    "end": "2038890"
  },
  {
    "text": "something better than order log in, not because of the the fact that two in front of the log in.",
    "start": "2038890",
    "end": "2044410"
  },
  {
    "text": "That's not the question I'm asking. I'm saying could we actually get something in which the the order that's Antarctic growth is not a Constantines log in.",
    "start": "2044410",
    "end": "2055990"
  },
  {
    "text": "Could you hope to get a circuit faster? Not a Fuze, not if each pushing the circuit has a positive influence.",
    "start": "2055990",
    "end": "2064159"
  },
  {
    "text": "And so we're using binary we're using in groups that have two inputs in this assumption.",
    "start": "2064160",
    "end": "2070539"
  },
  {
    "text": "Otherwise, we would simply take the A circuit that defines the sum of two N numbers and we would do it in one in one shot.",
    "start": "2070540",
    "end": "2083620"
  },
  {
    "text": "But yeah, if if you had if you if you make that constraint.",
    "start": "2083620",
    "end": "2089440"
  },
  {
    "text": "So binary inputs low about how do we show that we need at least log in. Well you can. Construct, I think, just to just a single input care, which will require you to look at all the hits, essentially.",
    "start": "2089440",
    "end": "2115090"
  },
  {
    "text": "OK. Yeah, you're getting handed. What you're saying is that the add that the. The answer depends on all the on all the input. If it was a function, it didn't depend on all inputs.",
    "start": "2115090",
    "end": "2124110"
  },
  {
    "text": "Then we would have some hope of doing it in less than log log in levels.",
    "start": "2124110",
    "end": "2129330"
  },
  {
    "text": "But if it depends on all the inputs, if it's somehow there, there's a way of setting N minus one of the things so that the F one matters.",
    "start": "2129330",
    "end": "2139220"
  },
  {
    "text": "Now, football, you choose any input. And there's a way. There's a there's a there's a case in which that input can affect the output.",
    "start": "2139220",
    "end": "2146550"
  },
  {
    "text": "Then the circuit is going to have to involve that input indirectly.",
    "start": "2146550",
    "end": "2151930"
  },
  {
    "text": "And if three levels of logic, we can only involve at most eight inputs. There's no way we could we could imagine touching more than eight inputs in three levels.",
    "start": "2151930",
    "end": "2161350"
  },
  {
    "text": "The logic is similar to sixteen inputs in four levels of logic.",
    "start": "2161350",
    "end": "2167190"
  },
  {
    "text": "So what if it doesn't depend? If it's if it if the function were computing is is independent of some of the inputs.",
    "start": "2167190",
    "end": "2174900"
  },
  {
    "text": "Then of course, we don't need to log in levels. But if any function, that's possible input.",
    "start": "2174900",
    "end": "2180490"
  },
  {
    "text": "So does this carry. Does it depend on all the inputs.",
    "start": "2180490",
    "end": "2186380"
  },
  {
    "text": "The last carry will depend on all the. Yeah. Let's carry on. So that's about it. Yeah. I suppose that proves it approves the bond of log in times of causation of one a constant factor",
    "start": "2186380",
    "end": "2201960"
  },
  {
    "text": "and not for for improvements to find out exactly what the exact minimum number of cases are.",
    "start": "2201960",
    "end": "2209030"
  },
  {
    "text": "C otherwise course she's fifty six I'm sure what number is.",
    "start": "2209030",
    "end": "2215920"
  },
  {
    "text": "But he has worked out also from application to the the typed upper and lower bounds on these things.",
    "start": "2215920",
    "end": "2227900"
  },
  {
    "text": "So it is very interesting because neither the upper bound nor the lower bound is obvious.",
    "start": "2227900",
    "end": "2233460"
  },
  {
    "text": "I mean there is sort of one simple truth that gets you that gets you within one of the two lower bound.",
    "start": "2233460",
    "end": "2241020"
  },
  {
    "text": "One lower than the two lower bound and one higher than the two upper bound. And then then it takes hard work to show that actually the lower bound is one because this is one.",
    "start": "2241020",
    "end": "2250640"
  },
  {
    "text": "I've been in a similar hard work to show that the upper one was one down side. As I recall, I think that was needed for the modification. I sure now, anyway, we're going to need something of sorts of size about log in.",
    "start": "2250640",
    "end": "2267570"
  },
  {
    "text": "And this is the method that's used in in the one in in today's in problem three.",
    "start": "2267570",
    "end": "2273600"
  },
  {
    "text": "And it's not allowed to change the circuit problem three. We all got to be working on the same circuit. And and so that circuit is given.",
    "start": "2273600",
    "end": "2281670"
  },
  {
    "text": "We're not allowed to come up with a better circuit if there is a better one. This is the one that happens to be happens to be implemented. And how do we see it in this notation now?",
    "start": "2281670",
    "end": "2292260"
  },
  {
    "text": "Let's take a look at the. Okay, you can have your thing there.",
    "start": "2292260",
    "end": "2297300"
  },
  {
    "text": "I'm just gonna be showing the the way it looks in R in the gate definition says, look, let's look down here at the carry propagator.",
    "start": "2297300",
    "end": "2308310"
  },
  {
    "text": "This is this is a notation that I made up this for the purposes of this problem.",
    "start": "2308310",
    "end": "2316380"
  },
  {
    "text": "Any. Several people have been working on, um, good notations to describe hierarchical design.",
    "start": "2316380",
    "end": "2329759"
  },
  {
    "text": "And we need some kind of an iterative construct and people are just writing in Lisp or something like that.",
    "start": "2329760",
    "end": "2337350"
  },
  {
    "text": "But I wanted to have something that's particular for this problem. You can imagine having a compiler that would translate this notation into into circuits,",
    "start": "2337350",
    "end": "2350310"
  },
  {
    "text": "but you don't have to write that compiler as part of problem three. All you you can do is take this chart here and coded in PA. or whatever language you want by compiling it in your head into something.",
    "start": "2350310",
    "end": "2366240"
  },
  {
    "text": "But somehow you're gonna have to have to convert this from this this notation to to the internal",
    "start": "2366240",
    "end": "2373980"
  },
  {
    "text": "representation in your program for your programs that that work on problem three will.",
    "start": "2373980",
    "end": "2379590"
  },
  {
    "text": "We'll certainly want to represent the circuit somehow inside of them. And this is this notation is, however, formal enough that it could have that it could be compiled by machine without without um.",
    "start": "2379590",
    "end": "2396000"
  },
  {
    "text": "I mean, it would be a decent project for. So each module has a has it is declared with.",
    "start": "2396000",
    "end": "2405740"
  },
  {
    "text": "With the first statement being an input statement, the last statement being an output statement and ending with a period and the end that defines it.",
    "start": "2405740",
    "end": "2418410"
  },
  {
    "text": "Here we have a parameter K of the module module C.K. is the is K is a parameter to this, to this,",
    "start": "2418410",
    "end": "2427319"
  },
  {
    "text": "which will be a constant whenever we invoke whenever we invoke it, like down here we invoke C one, C two, C forward C eight.",
    "start": "2427320",
    "end": "2435860"
  },
  {
    "text": "Now the notation could probably be first seen. Let's go in the first one they have fatter. This is the because this one didn't have any subscripts in it.",
    "start": "2435860",
    "end": "2447900"
  },
  {
    "text": "This will be the simplest case of the notation. And the half letter is what just computes these these two quantities.",
    "start": "2447900",
    "end": "2460740"
  },
  {
    "text": "You're given X amount. You've got three. You've got three inputs I'm sorry, X, Y and and C and you compute and you compute.",
    "start": "2460740",
    "end": "2468390"
  },
  {
    "text": "So it's not it's not the it's not related to what's on the board.",
    "start": "2468390",
    "end": "2473910"
  },
  {
    "text": "Very much so. If you have three inputs and we produce two of two outputs X plus Y policy input and outputs, are you and V where,",
    "start": "2473910",
    "end": "2483599"
  },
  {
    "text": "where V represents the Kerrie's of of three accommodation, three binary numbers and you represents the other.",
    "start": "2483600",
    "end": "2491860"
  },
  {
    "text": "And so, so there are three inputs for each input being one bit.",
    "start": "2491860",
    "end": "2498960"
  },
  {
    "text": "And then the first thing says X exclusive or Y goes to a X and Y goes to B and so on.",
    "start": "2498960",
    "end": "2508140"
  },
  {
    "text": "We compute five functions and then we output you and V. So we have two outputs.",
    "start": "2508140",
    "end": "2513150"
  },
  {
    "text": "And then later on when we call this module, we show what the inputs are, each of three inputs and then a right arrow and give two outputs those.",
    "start": "2513150",
    "end": "2524069"
  },
  {
    "text": "So that means that s abi would be the first output you and Bisa by we'd be the second half would be.",
    "start": "2524070",
    "end": "2530610"
  },
  {
    "text": "And so that's that's the way a high level, higher level call of a module results in the circuits.",
    "start": "2530610",
    "end": "2538830"
  },
  {
    "text": "So now when we get to the CV function, then we have a for loop.",
    "start": "2538830",
    "end": "2544140"
  },
  {
    "text": "And it says for I equals zero to K minus one. That's just a macro abbreviation, really, which says repeat statements.",
    "start": "2544140",
    "end": "2551760"
  },
  {
    "text": "With all the eyes replaced by constants. So this is zero goes to a zero.",
    "start": "2551760",
    "end": "2558140"
  },
  {
    "text": "There goes to be zero and then zero goes. They want their votes to be won and so on, up to K minus one with the right arrow.",
    "start": "2558140",
    "end": "2567539"
  },
  {
    "text": "And then four eyes K through fifteen. We compute eight I by that, by that method.",
    "start": "2567540",
    "end": "2574290"
  },
  {
    "text": "And this defines Kerry propagator which is shifting by K. And what it's really doing is. Is the operation that we call season D on board over there.",
    "start": "2574290",
    "end": "2587790"
  },
  {
    "text": "That is if you assume that the Xs are the seats and the Y is are the D.",
    "start": "2587790",
    "end": "2595770"
  },
  {
    "text": "Then this will shift everything Kavis to the right and compute the next step over of the other function.",
    "start": "2595770",
    "end": "2603210"
  },
  {
    "text": "We take a look at that. Exactly. Later on. But then the then the as a high level, Modula is a parallel sixteen bit atter.",
    "start": "2603210",
    "end": "2614190"
  },
  {
    "text": "And it takes then two inputs. X 015 wiser.",
    "start": "2614190",
    "end": "2619980"
  },
  {
    "text": "Fifteen. This is this dot dot notation is a is an abbreviation for notation with commas X zero comma X one come up to X 15 comma Y.",
    "start": "2619980",
    "end": "2630480"
  },
  {
    "text": "It's as if there were actually thirty two numbers. They're written down with commas, 32 inputs written with commas between them.",
    "start": "2630480",
    "end": "2639930"
  },
  {
    "text": "So the dot dot then the four conventions are simply a way to expand the definition into.",
    "start": "2639930",
    "end": "2649059"
  },
  {
    "text": "So you have primitives that are just one bit. One bits operations.",
    "start": "2649060",
    "end": "2654520"
  },
  {
    "text": "And the first thing that we do is we, we do the first line there. The X and the Y. So go to the Zis like I got ANZ interchange in my notation and then X and Y.",
    "start": "2654520",
    "end": "2666000"
  },
  {
    "text": "Those are the WS which we call which I call BS here. Then I call C one of certain inputs.",
    "start": "2666000",
    "end": "2673380"
  },
  {
    "text": "Zero is one of the inputs to see one and then B zero to 14 and A zero to 14.",
    "start": "2673380",
    "end": "2680460"
  },
  {
    "text": "And that gives me thirty two bits of output, C zero to thirty one and then eight.",
    "start": "2680460",
    "end": "2687150"
  },
  {
    "text": "Then on those thirty two bits of output I, I call C two which shifts everything over by two.",
    "start": "2687150",
    "end": "2695549"
  },
  {
    "text": "And then I call C four and C eight. And I don't call C 16 because I wouldn't do anything.",
    "start": "2695550",
    "end": "2703600"
  },
  {
    "text": "Oh, whenever you have a 50 60, an output of inputs and outputs all at it.",
    "start": "2703600",
    "end": "2709580"
  },
  {
    "text": "It wouldn't do any more. So then finally, the last answer is exclusive or of the of the of the two lines.",
    "start": "2709580",
    "end": "2717770"
  },
  {
    "text": "And so now that corresponds to what we did here. Except my notation is asked is all backwards.",
    "start": "2717770",
    "end": "2724610"
  },
  {
    "text": "These are what we call what what the handout calls aid. I should have prepared and use that before the WS.",
    "start": "2724610",
    "end": "2730540"
  },
  {
    "text": "Ah ah ah. What the handoff calls viens I guess but the the a zero to a three is what they you",
    "start": "2730540",
    "end": "2741440"
  },
  {
    "text": "know called G and the intermediate steps are to calculate c d e f before you get to G.",
    "start": "2741440",
    "end": "2753109"
  },
  {
    "text": "And the after like, like e f represent the calculations after you've formed groups of like E represents.",
    "start": "2753110",
    "end": "2766760"
  },
  {
    "text": "When you've got four things. When you've got four terms here. And F represents. When you got eight terms and G represents when you got. No I'm sorry.",
    "start": "2766760",
    "end": "2774350"
  },
  {
    "text": "D represents four terms. East eight. And so on. But I've used in order to save letters I guess I, I lumped all 32 outputs as one letter.",
    "start": "2774350",
    "end": "2787819"
  },
  {
    "text": "I mean I call it c zero to thirty one for the thirty two outputs of that carry. But really the first sixteen outputs are outputs like these guys and this and the other outputs are like these guys.",
    "start": "2787820",
    "end": "2803849"
  },
  {
    "text": "Now, then then the final Kudi Gras is the edition of the last carry to to the Z.",
    "start": "2803850",
    "end": "2811610"
  },
  {
    "text": "And if just atter it throws away the carry off the left hand. Because after you multiply two eight bit numbers, the product will never be more than then 16 bits.",
    "start": "2811610",
    "end": "2825200"
  },
  {
    "text": "So. So you don't need to worry about this. Is this adding it's going to be for the you know, to add numbers that are never going to overflow.",
    "start": "2825200",
    "end": "2832599"
  },
  {
    "text": "Sixteen bits. What time is it?",
    "start": "2832600",
    "end": "2840790"
  },
  {
    "text": "Ten minutes. OK. I just read a neat joke, a story about the students at Caltech that a professor a possible never had to watch.",
    "start": "2840790",
    "end": "2852670"
  },
  {
    "text": "And he pays himself by the clock on the wall and the guy rigged the clock. So they go 10 percent faster than 15 percent faster.",
    "start": "2852670",
    "end": "2860660"
  },
  {
    "text": "And Chris had the race or one of the shoes through his nose.",
    "start": "2860660",
    "end": "2873369"
  },
  {
    "text": "And I would certainly be subject to such a gimmick.",
    "start": "2873370",
    "end": "2881220"
  },
  {
    "text": "And it finally caught on and was furious and gave them a pop quiz. That was really long shot. So it went like 40 percent.",
    "start": "2881220",
    "end": "2891570"
  },
  {
    "text": "So it's our first book I was reading was written by the students who for some reason they left that part of the story out.",
    "start": "2891570",
    "end": "2901920"
  },
  {
    "text": "Mm hmm. Okay. Well, actually, I suspected something somebody might be tricking me yesterday.",
    "start": "2901920",
    "end": "2910299"
  },
  {
    "text": "I'll tell you that on Thursday. But I guess it didn't happen. But I had it was.",
    "start": "2910300",
    "end": "2917470"
  },
  {
    "text": "Well, since we brought it up, there was that, though, in the very first group, Kathy and Marianne were had started with some probable words.",
    "start": "2917470",
    "end": "2927070"
  },
  {
    "text": "And it turned out that in their solution to the cryptogram, there was a capital D space in the message.",
    "start": "2927070",
    "end": "2937910"
  },
  {
    "text": "And and and it looked like a probable word should be tried at this point.",
    "start": "2937910",
    "end": "2945280"
  },
  {
    "text": "Got it. And and these are very nice girls. And they didn't rape. They hesitated as long as they as they reasonably could before trying to put the letter in here.",
    "start": "2945280",
    "end": "2957310"
  },
  {
    "text": "But meanwhile, I had snuck out of the room to go back to my terminal to check that the file that I had sent them hadn't been corrupted.",
    "start": "2957310",
    "end": "2966460"
  },
  {
    "text": "Because I've been I I've been reading about all these Kaltech Franks's.",
    "start": "2966460",
    "end": "2971859"
  },
  {
    "text": "And you know how they substituted for the card section and Rosebraugh and so on and so on.",
    "start": "2971860",
    "end": "2978370"
  },
  {
    "text": "And so I I was a little bit of a concern that I had given that people were going to be deciphering quite a different message.",
    "start": "2978370",
    "end": "2988150"
  },
  {
    "text": "And I was glad. Okay, so back to the back to the hardware.",
    "start": "2988150",
    "end": "3002089"
  },
  {
    "text": "The the the method that's indicated by our circuit here is really quite general.",
    "start": "3002090",
    "end": "3009840"
  },
  {
    "text": "I give it only a bit by, you know, multiply the numbers to 16 because that meant a nice size for the for the problem.",
    "start": "3009840",
    "end": "3017940"
  },
  {
    "text": "Four by four is too small to be very interesting. Sixteen by sixteen is only to be tackled after you've solved this one.",
    "start": "3017940",
    "end": "3027510"
  },
  {
    "text": "Well. And I didn't want to be responsible for all the machine time that could be done in poor solutions to the 16 by 16.",
    "start": "3027510",
    "end": "3036320"
  },
  {
    "text": "I know the size of the circuit, but I don't didn't bring it with me.",
    "start": "3036320",
    "end": "3042630"
  },
  {
    "text": "I think it just quadruples roughly when you doubled the number of inputs.",
    "start": "3042630",
    "end": "3050130"
  },
  {
    "text": "And so eight by eight is the one that we're actually going to be working on.",
    "start": "3050130",
    "end": "3056190"
  },
  {
    "text": "However, I recommend when you when you put this into your programs, you you don't specify it exactly for eight by eight.",
    "start": "3056190",
    "end": "3067290"
  },
  {
    "text": "That is that you'd be bubb. Your program's first done on a four by four. In fact, three by three don't have to be a power to lie. I first I caught a lot of errors in my own attempts.",
    "start": "3067290",
    "end": "3077730"
  },
  {
    "text": "And this one I was looking at when I was exploring it by by just trying to three by three. Case of multiply three bit by three big numbers. You have to propagate carries until you get it.",
    "start": "3077730",
    "end": "3090150"
  },
  {
    "text": "Like here I call C eight. But as soon as it gets greater than greater than N.",
    "start": "3090150",
    "end": "3095599"
  },
  {
    "text": "Like if you're multiplying eight eight big numbers. I had to go up to C eight in this call. But I would never have to call 16. Well, if I was doing nine big numbers, I would have to go as far as as high as C 16 now.",
    "start": "3095600",
    "end": "3109980"
  },
  {
    "text": "So I had to. So I had to keep doubling until a certain threshold.",
    "start": "3109980",
    "end": "3117180"
  },
  {
    "text": "I forget what the exact. But you can generalize it, I think. Soon as you understand the circuit, you it'll be clear how to generalize.",
    "start": "3117180",
    "end": "3123780"
  },
  {
    "text": "Whenever this says 31, you you this means to you to K minus one or if you're multiplying Cubitt numbers.",
    "start": "3123780",
    "end": "3132960"
  },
  {
    "text": "And if it says 15, it means I'm sorry for came on one. You're thirty one and fifteen would represent two K minus one and so on.",
    "start": "3132960",
    "end": "3141990"
  },
  {
    "text": "Various things will be generalized in that way.",
    "start": "3141990",
    "end": "3148430"
  },
  {
    "text": "Now the idea of parallel multiplication has has a parallel ladder in it.",
    "start": "3148430",
    "end": "3156839"
  },
  {
    "text": "But there is, there is another thing that goes on too. I guess I just turn this over accumulating partial products.",
    "start": "3156840",
    "end": "3167339"
  },
  {
    "text": "So if we're doing, let's let's imagine that we're doing just three by three multiplication.",
    "start": "3167340",
    "end": "3181630"
  },
  {
    "text": "Well, in this case, we get this, let's say any to a warming bureau.",
    "start": "3181630",
    "end": "3189430"
  },
  {
    "text": "I actually use I can use subscripts much some much just change letters because we only got three of them to worry about here.",
    "start": "3189430",
    "end": "3200050"
  },
  {
    "text": "OK, now we've we've got three partial products and then we have to add them up and then that'll be the that'll be the solution.",
    "start": "3200050",
    "end": "3210720"
  },
  {
    "text": "Now there is a very well if we had I guess in fact this is true.",
    "start": "3210720",
    "end": "3215880"
  },
  {
    "text": "This is too small for. Fruit juice, for example.",
    "start": "3215880",
    "end": "3231609"
  },
  {
    "text": "Much like once you buy first. No. OK. Now, this is a good point. Right.",
    "start": "3231610",
    "end": "3239859"
  },
  {
    "text": "Right. Do I write these as four digit numbers instead of five digit numbers? They're binary because it's binary. So they're multiplying by zero on one.",
    "start": "3239860",
    "end": "3247460"
  },
  {
    "text": "So, so good fortune. This will not that this actually a.",
    "start": "3247460",
    "end": "3253480"
  },
  {
    "text": "A Sabai is equal to Y. Well, give me a formula. What is that formula for a simbi piece of zero.",
    "start": "3253480",
    "end": "3266750"
  },
  {
    "text": "Giving a Savi's Y zero. Exactly. And this is why one exi time.",
    "start": "3266750",
    "end": "3275770"
  },
  {
    "text": "So those are hands out. Now we've got four out of four binary numbers to add up and lots of zeros in there.",
    "start": "3275770",
    "end": "3288320"
  },
  {
    "text": "If we could, if we think of these as being eight big numbers, it's four zeros over here, three zero to the right here and on Barrow there to the left, you've got three big numbers to add.",
    "start": "3288320",
    "end": "3303070"
  },
  {
    "text": "And we get an eight foot answer. Now one of the things is that the zeros are propagating throughout this circuit.",
    "start": "3303070",
    "end": "3312730"
  },
  {
    "text": "And whenever I have a command in my language that says compute zero wealth, set something to zero, you don't really set it to zero.",
    "start": "3312730",
    "end": "3321910"
  },
  {
    "text": "Just imagine that there's no that that that zero is on the output line or or on the input line.",
    "start": "3321910",
    "end": "3327670"
  },
  {
    "text": "And if you say and something with zero anything and with zero gives you zero.",
    "start": "3327670",
    "end": "3333460"
  },
  {
    "text": "And so again, the input is never looked at. And and we drop out all the gates that we can because of this.",
    "start": "3333460",
    "end": "3342040"
  },
  {
    "text": "One of the inputs is known to be zero. What the last point is.",
    "start": "3342040",
    "end": "3347620"
  },
  {
    "text": "Well, I was just going to imagine that I'm putting into an eight bit and adding circuit.",
    "start": "3347620",
    "end": "3354820"
  },
  {
    "text": "I don't I don't really need them. But if I'm if I'm using an eighth adapter, then I have eight inputs.",
    "start": "3354820",
    "end": "3362530"
  },
  {
    "text": "So I get those items. I gave eight APIs, you know, Reskin every one.",
    "start": "3362530",
    "end": "3368050"
  },
  {
    "text": "But the other is guaranteed to be zero. But you can get a you can get a one here and you take fifteen times fifteen and you get to twenty five, which is a figure in 120.",
    "start": "3368050",
    "end": "3383230"
  },
  {
    "text": "So. So now the one naive idea is it is the word would give us a much poorer answer than the one that's actually done in the circuit.",
    "start": "3383230",
    "end": "3401160"
  },
  {
    "text": "The neighbor would say, OK, we know how to do parallax. And so we do parallel as of these two and paralyzer these two.",
    "start": "3401160",
    "end": "3410200"
  },
  {
    "text": "And then a parallel that of those. And we have guaranteed that we've got, you know, this some.",
    "start": "3410200",
    "end": "3419560"
  },
  {
    "text": "What's the running time of that kind of a method if we imagine going this to be to to end this instead?",
    "start": "3419560",
    "end": "3426430"
  },
  {
    "text": "Oh, we would have to do. We would be left with, you know, in one level of logic. We got all these all of these computed. So on one level, this takes one.",
    "start": "3426430",
    "end": "3435790"
  },
  {
    "text": "One is the time to cut to get all of these at the end, partial products and skates and equals four.",
    "start": "3435790",
    "end": "3444670"
  },
  {
    "text": "And then if we would do a parallel add of by pairing the ends, then then we would have log in levels of parallax.",
    "start": "3444670",
    "end": "3457920"
  },
  {
    "text": "But each will add taking log in time itself would give us log squared squared log in depth of the circuit.",
    "start": "3457920",
    "end": "3488820"
  }
]