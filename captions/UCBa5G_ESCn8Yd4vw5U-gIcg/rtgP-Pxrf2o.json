[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "Welcome to Exploring Computing.",
    "start": "0",
    "end": "3720"
  },
  {
    "text": "Today's video is\nAdditional Python Features.",
    "start": "3720",
    "end": "7017"
  },
  {
    "text": "So in this video, we're\ngoing to take a look",
    "start": "7017",
    "end": "8850"
  },
  {
    "text": "at a few other Python\nlanguage features",
    "start": "8850",
    "end": "11610"
  },
  {
    "text": "that you might find handy\nin certain situations.",
    "start": "11610",
    "end": "15504"
  },
  {
    "start": "15000",
    "end": "147000"
  },
  {
    "text": "So the first one I\nwanted to talk about",
    "start": "15505",
    "end": "17130"
  },
  {
    "text": "is how to do a\nmulti-line statement.",
    "start": "17130",
    "end": "19750"
  },
  {
    "text": "So sometimes, you\nhave a line of code",
    "start": "19750",
    "end": "21690"
  },
  {
    "text": "that's just too long to fit\non a single line comfortably.",
    "start": "21690",
    "end": "26430"
  },
  {
    "text": "And in some languages,\nyou can just go ahead",
    "start": "26430",
    "end": "28590"
  },
  {
    "text": "and split across the line.",
    "start": "28590",
    "end": "30750"
  },
  {
    "text": "You can just say, \"Oh, this\ndoesn't fit on the line.",
    "start": "30750",
    "end": "33970"
  },
  {
    "text": "I'm going to go ahead and put a\ncarriage return in the middle.",
    "start": "33970",
    "end": "37478"
  },
  {
    "text": "The language interpreter\nshould figure this out.\"",
    "start": "37478",
    "end": "39520"
  },
  {
    "text": "And it turns out this\ndoes not work in Python.",
    "start": "39520",
    "end": "41820"
  },
  {
    "text": "So if you do what I've\ndone here, where I've taken",
    "start": "41820",
    "end": "44860"
  },
  {
    "text": "name equals and I put in\na carriage return there",
    "start": "44860",
    "end": "47430"
  },
  {
    "text": "and then I follow it on\nthe next line with input,",
    "start": "47430",
    "end": "49890"
  },
  {
    "text": "this is actually going to\ncause an error when you try",
    "start": "49890",
    "end": "52170"
  },
  {
    "text": "and load it.",
    "start": "52170",
    "end": "52859"
  },
  {
    "text": "So that's no good.",
    "start": "52860",
    "end": "55330"
  },
  {
    "text": "So there's several\nsolutions to this.",
    "start": "55330",
    "end": "59130"
  },
  {
    "text": "The one that's universally\ngoing to be doable",
    "start": "59130",
    "end": "61695"
  },
  {
    "text": "is you can go ahead and\nput a backslash at the end",
    "start": "61695",
    "end": "65670"
  },
  {
    "text": "of your unfinished line.",
    "start": "65670",
    "end": "66869"
  },
  {
    "text": "So if I say name equals\nand I have that backslash--",
    "start": "66870",
    "end": "70385"
  },
  {
    "text": "don't use the\nforward slash, it's",
    "start": "70385",
    "end": "71760"
  },
  {
    "text": "got to be the backslash--\nyou've got that backslash, that",
    "start": "71760",
    "end": "74610"
  },
  {
    "text": "tells Python, \"I'm not\nreally done with the line.",
    "start": "74610",
    "end": "78570"
  },
  {
    "text": "Go to the next line.",
    "start": "78570",
    "end": "79890"
  },
  {
    "text": "That's actually a continuation\nof the current line.\"",
    "start": "79890",
    "end": "83080"
  },
  {
    "text": "In addition, you\ncan use parentheses.",
    "start": "83080",
    "end": "85760"
  },
  {
    "text": "So if you've already\ngot parentheses--",
    "start": "85760",
    "end": "88640"
  },
  {
    "text": "or you've got the\ninput statement there,",
    "start": "88640",
    "end": "90513"
  },
  {
    "text": "I can go ahead and\nuse parentheses",
    "start": "90513",
    "end": "91930"
  },
  {
    "text": "for the input statement.",
    "start": "91930",
    "end": "94250"
  },
  {
    "text": "You can also-- in\nmany situations,",
    "start": "94250",
    "end": "95712"
  },
  {
    "text": "like if we've got a\nmathematical formula,",
    "start": "95712",
    "end": "97420"
  },
  {
    "text": "you can just put it in\nparentheses wherever you want.",
    "start": "97420",
    "end": "100390"
  },
  {
    "text": "But if you've got an open\nparenthesis, like here where",
    "start": "100390",
    "end": "103690"
  },
  {
    "text": "I've got that input and\nthen open parenthesis,",
    "start": "103690",
    "end": "107020"
  },
  {
    "text": "Python immediately realizes\nthat it doesn't see a closing",
    "start": "107020",
    "end": "110560"
  },
  {
    "text": "parenthesis on\nthat current line,",
    "start": "110560",
    "end": "112180"
  },
  {
    "text": "so I must be\nspreading my statement",
    "start": "112180",
    "end": "115660"
  },
  {
    "text": "across multiple lines,\nand it will go ahead",
    "start": "115660",
    "end": "117520"
  },
  {
    "text": "and continue processing lines--",
    "start": "117520",
    "end": "120340"
  },
  {
    "text": "the subsequent lines as if they\nwere part of the original line",
    "start": "120340",
    "end": "123159"
  },
  {
    "text": "until it sees that\nclosing parenthesis.",
    "start": "123160",
    "end": "126500"
  },
  {
    "text": "You can do the same thing\nwith the square brackets.",
    "start": "126500",
    "end": "128850"
  },
  {
    "text": "If you've got a list of\nitems like I got here,",
    "start": "128850",
    "end": "131800"
  },
  {
    "text": "it sees that opening\nsquare bracket,",
    "start": "131800",
    "end": "134720"
  },
  {
    "text": "and it sees a bunch of people\non our team member list.",
    "start": "134720",
    "end": "137048"
  },
  {
    "text": "It doesn't see a\nclosing square bracket,",
    "start": "137048",
    "end": "138715"
  },
  {
    "text": "and it says, \"Oh,\nyou must want me",
    "start": "138715",
    "end": "140989"
  },
  {
    "text": "to continue processing the\nnext line and the next line",
    "start": "140990",
    "end": "144140"
  },
  {
    "text": "until I see that closing\nangular bracket.\"",
    "start": "144140",
    "end": "146690"
  },
  {
    "start": "146690",
    "end": "149470"
  },
  {
    "start": "147000",
    "end": "204000"
  },
  {
    "text": "All right, another issue\nthat sometimes comes up",
    "start": "149470",
    "end": "151750"
  },
  {
    "text": "is how to do what's called\nconcatenating strings.",
    "start": "151750",
    "end": "155530"
  },
  {
    "text": "In computer science,\nconcatenating strings",
    "start": "155530",
    "end": "157540"
  },
  {
    "text": "means to combine two strings\ninto a single string.",
    "start": "157540",
    "end": "161135"
  },
  {
    "text": "And there's a variety\nof different ways",
    "start": "161135",
    "end": "162760"
  },
  {
    "text": "to do this, depending upon\nthe programming language.",
    "start": "162760",
    "end": "165280"
  },
  {
    "text": "In Python, you just separate\nthe strings by a space,",
    "start": "165280",
    "end": "168880"
  },
  {
    "text": "and it automatically\nputs them together.",
    "start": "168880",
    "end": "170680"
  },
  {
    "text": "So if I say, \"hello\"\nspace \"everyone,\"",
    "start": "170680",
    "end": "175219"
  },
  {
    "text": "it's going to combine that\ntogether into a single string",
    "start": "175220",
    "end": "177700"
  },
  {
    "text": "\"helloeveryone.\"",
    "start": "177700",
    "end": "178375"
  },
  {
    "text": "Notice that it does not\nactually add a space",
    "start": "178375",
    "end": "180970"
  },
  {
    "text": "into the \"helloeveryone.\"",
    "start": "180970",
    "end": "182430"
  },
  {
    "text": "So I get \"helloeveryone.\"",
    "start": "182430",
    "end": "185060"
  },
  {
    "text": "So if you want a space,\neither the \"hello\" string",
    "start": "185060",
    "end": "187870"
  },
  {
    "text": "needs to end with a space\nor the \"everyone\" string",
    "start": "187870",
    "end": "190690"
  },
  {
    "text": "needs to start with a space.",
    "start": "190690",
    "end": "192370"
  },
  {
    "text": "Or you need to put in\na third in the middle",
    "start": "192370",
    "end": "194920"
  },
  {
    "text": "a quote with a\nspace with a closing",
    "start": "194920",
    "end": "197470"
  },
  {
    "text": "quote in between the\n\"hello\" and the \"everyone,\"",
    "start": "197470",
    "end": "200200"
  },
  {
    "text": "and that will combine to get\nyou \"hello\" space \"everyone.\"",
    "start": "200200",
    "end": "206300"
  },
  {
    "start": "204000",
    "end": "279000"
  },
  {
    "text": "This can be useful when we\nhave a really long string.",
    "start": "206300",
    "end": "208970"
  },
  {
    "text": "So here I'm using\nthe Stanford motto.",
    "start": "208970",
    "end": "212050"
  },
  {
    "text": "I am not going to\nattempt to read it.",
    "start": "212050",
    "end": "213850"
  },
  {
    "text": "I don't know German at all.",
    "start": "213850",
    "end": "216400"
  },
  {
    "text": "\"The Stanford motto,\"\nblah, blah, blah,",
    "start": "216400",
    "end": "220030"
  },
  {
    "text": "\"translates as the\nwind of freedom blows.\"",
    "start": "220030",
    "end": "223510"
  },
  {
    "text": "And so maybe that's\na little bit too long",
    "start": "223510",
    "end": "226000"
  },
  {
    "text": "to fit on a single line.",
    "start": "226000",
    "end": "227350"
  },
  {
    "text": "I want to put it\nacross multiple lines.",
    "start": "227350",
    "end": "230020"
  },
  {
    "text": "And I'm going to do\nthat by breaking it down",
    "start": "230020",
    "end": "232060"
  },
  {
    "text": "into individual strings.",
    "start": "232060",
    "end": "234340"
  },
  {
    "text": "Notice each of these strings, at\nleast the first three strings,",
    "start": "234340",
    "end": "239269"
  },
  {
    "text": "ends with a space,\nso \"translates as\"",
    "start": "239270",
    "end": "242020"
  },
  {
    "text": "space, \"The Stanford\nmotto\" space, dash, space.",
    "start": "242020",
    "end": "247000"
  },
  {
    "text": "Because, remember, if we don't\nput those spaces in there,",
    "start": "247000",
    "end": "249820"
  },
  {
    "text": "when the string gets\ncombined back together,",
    "start": "249820",
    "end": "252938"
  },
  {
    "text": "we're not going to have spaces.",
    "start": "252938",
    "end": "254230"
  },
  {
    "text": "So don't forget your spaces.",
    "start": "254230",
    "end": "256489"
  },
  {
    "text": "You may also notice\nthat you don't",
    "start": "256490",
    "end": "258130"
  },
  {
    "text": "have closing backslashes on\nthe end of each of these lines.",
    "start": "258130",
    "end": "262258"
  },
  {
    "text": "And that's because I've\ngot that print statement.",
    "start": "262258",
    "end": "264300"
  },
  {
    "text": "So I've got the\nprint, parenthesis,",
    "start": "264300",
    "end": "268150"
  },
  {
    "text": "and so that immediately\ntells Python",
    "start": "268150",
    "end": "270940"
  },
  {
    "text": "that it should continue\nprocessing each",
    "start": "270940",
    "end": "273670"
  },
  {
    "text": "of the following lines as if\nthey were on the same line",
    "start": "273670",
    "end": "276130"
  },
  {
    "text": "until it hits that\nclosing parenthesis.",
    "start": "276130",
    "end": "280370"
  },
  {
    "start": "279000",
    "end": "298000"
  },
  {
    "text": "You can also use\ntriple quotes for this.",
    "start": "280370",
    "end": "282229"
  },
  {
    "text": "So if you've got a\nlong string and you",
    "start": "282230",
    "end": "287540"
  },
  {
    "text": "don't want to bother putting\nquotes around all of them",
    "start": "287540",
    "end": "289790"
  },
  {
    "text": "and you want it to go\nacross multiple lines,",
    "start": "289790",
    "end": "292460"
  },
  {
    "text": "you can just put a triple\nquote at the start and then",
    "start": "292460",
    "end": "294740"
  },
  {
    "text": "a triple quote at the end.",
    "start": "294740",
    "end": "296180"
  },
  {
    "text": "And this will also work.",
    "start": "296180",
    "end": "299360"
  },
  {
    "start": "298000",
    "end": "399000"
  },
  {
    "text": "OK.",
    "start": "299360",
    "end": "299860"
  },
  {
    "text": "The last thing I\nwanted to mention",
    "start": "299860",
    "end": "301276"
  },
  {
    "text": "in our short little video on\nAdditional Python Features",
    "start": "301277",
    "end": "304260"
  },
  {
    "text": "is how you write a\ncomment in Python.",
    "start": "304260",
    "end": "307570"
  },
  {
    "text": "And so you recall\nthat a comment is",
    "start": "307570",
    "end": "311160"
  },
  {
    "text": "used when we want to convey\ninformation to other humans who",
    "start": "311160",
    "end": "314190"
  },
  {
    "text": "are reading our\ncode, but we want it",
    "start": "314190",
    "end": "316740"
  },
  {
    "text": "to be ignored by the computer.",
    "start": "316740",
    "end": "318849"
  },
  {
    "text": "So here, the number sign is\nused by Python and when--",
    "start": "318850",
    "end": "324270"
  },
  {
    "text": "for comments, and when\nPython sees a number sign,",
    "start": "324270",
    "end": "327690"
  },
  {
    "text": "it ignores everything\nfollowing the number",
    "start": "327690",
    "end": "329610"
  },
  {
    "text": "sign until the end of the line.",
    "start": "329610",
    "end": "332319"
  },
  {
    "text": "That's considered a comment.",
    "start": "332320",
    "end": "334133"
  },
  {
    "text": "The Python thinks, \"Oh, that's\nsomething for human beings.",
    "start": "334133",
    "end": "336550"
  },
  {
    "text": "I'm not a human\nbeing, so I'm going",
    "start": "336550",
    "end": "337810"
  },
  {
    "text": "to go ahead and ignore it.\"",
    "start": "337810",
    "end": "338970"
  },
  {
    "text": "Here, we've got a number\nsign \"define variable.\"",
    "start": "338970",
    "end": "342377"
  },
  {
    "text": "So that whole line-- it\nstarts with a number sign,",
    "start": "342377",
    "end": "344460"
  },
  {
    "text": "so that whole line is just\ngoing to get completely",
    "start": "344460",
    "end": "346289"
  },
  {
    "text": "ignored by the computer.",
    "start": "346290",
    "end": "347370"
  },
  {
    "text": "The computer's just going\nto be like, \"Oh, this",
    "start": "347370",
    "end": "348990"
  },
  {
    "text": "must be something that Patrick\nwants for other people reading",
    "start": "348990",
    "end": "351599"
  },
  {
    "text": "the code to know,\nbut I'm not a person.",
    "start": "351600",
    "end": "353615"
  },
  {
    "text": "I'm a computer.",
    "start": "353615",
    "end": "354240"
  },
  {
    "text": "I'm better than a person.",
    "start": "354240",
    "end": "355349"
  },
  {
    "text": "I'm a computer, so I'm going\nto just ignore that line.",
    "start": "355350",
    "end": "358590"
  },
  {
    "text": "So it completely\nignores that first line.",
    "start": "358590",
    "end": "360360"
  },
  {
    "text": "And then, the next line, total\nequals zero, number sign,",
    "start": "360360",
    "end": "364530"
  },
  {
    "text": "\"total number of students\nis initially zero.\"",
    "start": "364530",
    "end": "366720"
  },
  {
    "text": "It is going to process\nthe total equals zero.",
    "start": "366720",
    "end": "368910"
  },
  {
    "text": "That's not behind a number sign.",
    "start": "368910",
    "end": "370243"
  },
  {
    "text": "But then, as soon as it sees\nthat number sign, it says, \"Oh,",
    "start": "370243",
    "end": "372743"
  },
  {
    "text": "the rest of this line,\nthat's for humans.",
    "start": "372743",
    "end": "374520"
  },
  {
    "text": "I'm going to go\nahead and ignore it.\"",
    "start": "374520",
    "end": "376061"
  },
  {
    "text": "So this whole thing, number\nsign \"define variables,\"",
    "start": "376062",
    "end": "379710"
  },
  {
    "text": "total equals zero, number\nsign \"total number of students",
    "start": "379710",
    "end": "382410"
  },
  {
    "text": "is initially zero,\" is going\nto get treated by the computer",
    "start": "382410",
    "end": "385200"
  },
  {
    "text": "as just total equals zero.",
    "start": "385200",
    "end": "387900"
  },
  {
    "text": "All right.",
    "start": "387900",
    "end": "388500"
  },
  {
    "text": "That's it for today.",
    "start": "388500",
    "end": "389770"
  },
  {
    "text": "We've got one more lecture\non Python programming.",
    "start": "389770",
    "end": "393629"
  },
  {
    "text": "I'll see you soon.",
    "start": "393630",
    "end": "395630"
  },
  {
    "start": "395630",
    "end": "400000"
  }
]