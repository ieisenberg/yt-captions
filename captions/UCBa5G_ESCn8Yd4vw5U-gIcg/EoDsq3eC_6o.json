[
  {
    "text": "Guy was worth waiting for. So I'm in hyperspace.",
    "start": "4500",
    "end": "11190"
  },
  {
    "text": "OK. So hyphenation space is what we're going into this hour. And and Tech 82 is using brand new hyphenation algorithm of frankly, Anku, I noticed,",
    "start": "11190",
    "end": "22830"
  },
  {
    "text": "is in the audience here to correct me in case I make any terrible errors. This is going to be described in his thesis that comes out, oh, any day now.",
    "start": "22830",
    "end": "33590"
  },
  {
    "text": "I guess it is. Isn't that right, Frank? And I'm going to first explain to you the way it works.",
    "start": "33590",
    "end": "41580"
  },
  {
    "text": "And then you and then we'll we'll play with it a little bit so that you get some idea about it.",
    "start": "41580",
    "end": "47160"
  },
  {
    "text": "And then I'll show you how it fits in in the tech code. This, of course, is a special interest to people in in foreign countries so that they will be able to use tech with with other languages.",
    "start": "47160",
    "end": "64309"
  },
  {
    "text": "I however, I have to mention that the president will only support one language at a time, at least per paragraph.",
    "start": "64310",
    "end": "71909"
  },
  {
    "text": "It would be rather difficult. The way I remember the way I describe hyphenation, saying in second pass will go through and hyphenate every word.",
    "start": "71910",
    "end": "78840"
  },
  {
    "text": "But what if the word is that the paragraph is half in Hebrew and half in English or something?",
    "start": "78840",
    "end": "85289"
  },
  {
    "text": "We would have we only have one hyphenation tables that we're using all of the same. So there's other problems with that, of course, too, because there's left to right versus right to left.",
    "start": "85290",
    "end": "94780"
  },
  {
    "text": "But we're going to assume that we're using only one language at a time anyway.",
    "start": "94780",
    "end": "101070"
  },
  {
    "text": "And if somebody wants to extend it to a switch between hyphenation tables and so on. Well, that's a what is it? No. That could live there in the paragraph. When you pass the whatsit, it could tell.",
    "start": "101070",
    "end": "110370"
  },
  {
    "text": "It can select hyphenation table, such and such. Now, the hyphenation is based on idea of patterns, which is the one or one thing that unifies many,",
    "start": "110370",
    "end": "127410"
  },
  {
    "text": "many of these things in the ad hoc hyphenation algorithm that we used in the present version of.",
    "start": "127410",
    "end": "133740"
  },
  {
    "text": "If I have a pattern that's for example, A B two D.",
    "start": "133740",
    "end": "143520"
  },
  {
    "text": "And I put zeros on between it when there is no positive.",
    "start": "143520",
    "end": "149010"
  },
  {
    "text": "No. This would mean that if there was a word, if we find a hyphenated word that contains the subsequence A, B and D,",
    "start": "149010",
    "end": "156930"
  },
  {
    "text": "and I would I would try to insert a zero before the A zero between A and B or two between being D and so on.",
    "start": "156930",
    "end": "163859"
  },
  {
    "text": "I do this for all parents. I take the maximum of the numbers that would that that apply.",
    "start": "163860",
    "end": "171690"
  },
  {
    "text": "If the final result is odd, it's it's a place for hyphenation. And if it's even if it's a place where I don't hyphenate. So zero is even so I wouldn't hyphenate there.",
    "start": "171690",
    "end": "182940"
  },
  {
    "text": "If I put a one in here, that would be a good I suppose I put a one here and that would say that's a good place to hyphenate a BD.",
    "start": "182940",
    "end": "190080"
  },
  {
    "text": "That would say for the one there. So hyphenates there. But then you look through all the patterns that you did with zeros and ones and you got some some bad cases.",
    "start": "190080",
    "end": "199040"
  },
  {
    "text": "So then you can go and say, well, but let's suppress it. If if it fits in this pattern also. And the two will then knock out one because it's even higher than one.",
    "start": "199040",
    "end": "209370"
  },
  {
    "text": "And we're taking the maximum. And then if we don't still get enough hyphens that we want and we can put threes in there and they'll and they will override the twos and.",
    "start": "209370",
    "end": "218780"
  },
  {
    "text": "So this was the genesis of the idea. The neat thing is how well how well it works with the right pattern.",
    "start": "218780",
    "end": "225450"
  },
  {
    "text": "So let's take a look at some at some examples. Now, the I guess, first of all, I could look at the the patterns that that Franck generated on Sunday.",
    "start": "225450",
    "end": "238410"
  },
  {
    "text": "So let's see. That's added p fine.",
    "start": "238410",
    "end": "253830"
  },
  {
    "text": "Now, this is page one of. Oh yeah. Thirty eight. Seventy nine. So there are thirty three thousand eight hundred seventy nine patterns in this particular list.",
    "start": "253830",
    "end": "262470"
  },
  {
    "text": "And these patterns seem to work rather well for English. Now add a dot stands for the beginning of the word.",
    "start": "262470",
    "end": "269160"
  },
  {
    "text": "So. So the first pattern is beginning of the word a, c, e and the four means between the four and between the C and he would suppress very strongly.",
    "start": "269160",
    "end": "282230"
  },
  {
    "text": "You probably never want a hyphen with a word that starts with a C in the next letter being E,",
    "start": "282230",
    "end": "289390"
  },
  {
    "text": "the next one says if you got a word that starts with us, you don't want to hyphenate there.",
    "start": "289390",
    "end": "298020"
  },
  {
    "text": "And so on. OK. These are the these are the thing. Let's take a look at line two. Thousand. And you get some of it. We're in the middle of it now, here's a L.P saying don't hyphenate it before the pair LP.",
    "start": "298020",
    "end": "311970"
  },
  {
    "text": "But here's a a strong case for hyphenation LP A hyphen B.",
    "start": "311970",
    "end": "318740"
  },
  {
    "text": "OK. Yeah. You can move to a seat where it's easier for you to see the monitor LPA. If you got us a letter that has lpa b I can't think of any right now.",
    "start": "318740",
    "end": "328620"
  },
  {
    "text": "What is that. What would be the word for that. Then you want to break there with very strong five.",
    "start": "328620",
    "end": "339870"
  },
  {
    "text": "So the numbers are for hyphens, even though it was not for height. OK. That's what parents looked like. And now we see what.",
    "start": "339870",
    "end": "347310"
  },
  {
    "text": "Actually this algorithm can do. We take a look at the@ some sample files.",
    "start": "347310",
    "end": "356400"
  },
  {
    "text": "There is a there are several of these. And first, let me show you the one that's called except hyphen.",
    "start": "356400",
    "end": "365080"
  },
  {
    "text": "See, that's P.",
    "start": "365080",
    "end": "374490"
  },
  {
    "text": "These are these are words that that were exceptions to the to the present TEC hyphenation algorithm, I guess.",
    "start": "374490",
    "end": "387330"
  },
  {
    "text": "And so they were putting here to see what we could what would happen to them.",
    "start": "387330",
    "end": "392780"
  },
  {
    "text": "So. So that asterisk means that we do find the hyphen. And my monitor isn't showing anything.",
    "start": "392780",
    "end": "400310"
  },
  {
    "text": "Is yours. Ours. Oh, here it goes. OK, asterisk means we find that this isn't.",
    "start": "400310",
    "end": "406650"
  },
  {
    "text": "Yeah. Yeah. This is just a bunch of exceptions. So for example, if you try to tack right now the one you're using now, it would say cell fed joint and.",
    "start": "406650",
    "end": "415380"
  },
  {
    "text": "And that was this was then a collection of words that were were a little bit hard to hyphenate asterisks.",
    "start": "415380",
    "end": "422550"
  },
  {
    "text": "Sure. The hyphens that this new algorithm will find and hyphens are ones that it didn't didn't find, didn't do well in this one.",
    "start": "422550",
    "end": "429479"
  },
  {
    "text": "Let's try the next one. Those. Those tend to be hard words. This this next one. These are the words that were listed in the appendix of a tech manual as being",
    "start": "429480",
    "end": "441600"
  },
  {
    "text": "as being the words that we that computer scientists were were interested in.",
    "start": "441600",
    "end": "449050"
  },
  {
    "text": "And and what we wanted to get some we wanted to pick up some of the hyphens.",
    "start": "449050",
    "end": "455340"
  },
  {
    "text": "And so the Astros here every almost everywhere, I mean, that we've picked up just about every hyphen on these words.",
    "start": "455340",
    "end": "461580"
  },
  {
    "text": "So algorithm computer gets hyphenated declaration. We missed the hyphen after the C there, the subroutine.",
    "start": "461580",
    "end": "472270"
  },
  {
    "text": "OK. So these words all got pretty well hyphenated. Now, if we want to look at the dig at the whole dictionary.",
    "start": "472270",
    "end": "481479"
  },
  {
    "text": "And this is Webster's Pocket Dictionary, that that was the dictionary.",
    "start": "481480",
    "end": "488340"
  },
  {
    "text": "That was largely the basis for these hyphenation patterns. And this one is one hundred one pages. So each page will give us a few of a few words out of it.",
    "start": "488340",
    "end": "502719"
  },
  {
    "text": "OK. So we started out and we found the hyphen in Aardvark. But Abakar, we didn't we didn't get.",
    "start": "502720",
    "end": "508920"
  },
  {
    "text": "And so I'm like, okay. So now they are.",
    "start": "508920",
    "end": "516180"
  },
  {
    "text": "You see that we pick up almost all of them here. Yeah.",
    "start": "516180",
    "end": "525430"
  },
  {
    "text": "Oh, let's see what's going on.",
    "start": "525430",
    "end": "532390"
  },
  {
    "text": "We can't. Oh, you can't see. That was. That is there are a lot of numbers down the.",
    "start": "532390",
    "end": "548020"
  },
  {
    "text": "Because I can see it on my monitor up there. But this, too. This is Scooter.",
    "start": "548020",
    "end": "555910"
  },
  {
    "text": "It's not good. Well, I don't want to mess with that. Okay. Is there is there a hacking eat in that will move every line over?",
    "start": "555910",
    "end": "566389"
  },
  {
    "text": "But control right arrow does what?",
    "start": "566390",
    "end": "571490"
  },
  {
    "text": "Edit control, and that moves it over as much as it can.",
    "start": "571490",
    "end": "581990"
  },
  {
    "text": "OK. Do that again.",
    "start": "581990",
    "end": "593450"
  },
  {
    "text": "OK. Computers are wonderful. OK.",
    "start": "593450",
    "end": "598490"
  },
  {
    "text": "How they're so ok. You see that in this case.",
    "start": "598490",
    "end": "605640"
  },
  {
    "text": "There's a lot of it after a C with a T. Then we it's a good place for a hyphen.",
    "start": "605640",
    "end": "616370"
  },
  {
    "text": "But acuity it wouldn't put a hyphen after an AC.",
    "start": "616370",
    "end": "623510"
  },
  {
    "text": "OK, well let's get to some harder cases. Let's see what's going on here.",
    "start": "623510",
    "end": "628880"
  },
  {
    "text": "Adaptations, adaptable. That adage, I don't know.",
    "start": "628880",
    "end": "634640"
  },
  {
    "text": "You know, you see, sometimes you want to hype and after after two D after the second D and sometimes not.",
    "start": "634640",
    "end": "648730"
  },
  {
    "text": "OK. Now these statistics are that actually the method is picked up eighty eight point three of the hyphens in this dictionary and it made only 27 errors.",
    "start": "648730",
    "end": "659390"
  },
  {
    "text": "No error means it put in a hyphen where there shouldn't have been one. Let's see if we can't find a place where there was an error and enough period shows in here as a place where Reaffirm Mode Reader agreed on.",
    "start": "659390",
    "end": "680009"
  },
  {
    "text": "OK. Now I'll have to shift this over to the right. Again. What happened?",
    "start": "680010",
    "end": "690610"
  },
  {
    "text": "It just did it from that point on. OK. OK.",
    "start": "690610",
    "end": "708170"
  },
  {
    "text": "No. Oh, that's OK.",
    "start": "708170",
    "end": "713839"
  },
  {
    "text": "We don't care. I was only interested in this associate. So you put in it, put in a hyphen there.",
    "start": "713840",
    "end": "720760"
  },
  {
    "text": "An associate. And that was considered an error. Why is that? Because apparently the dictionary lists that word twice, once with a hyphen and once without a hyphen.",
    "start": "720760",
    "end": "731000"
  },
  {
    "text": "OK, so that's not such a bad air assault.",
    "start": "731000",
    "end": "736850"
  },
  {
    "text": "[INAUDIBLE] is is the noun and associate is the verb. And and according to the dictionary, in one case he would do it considered to be one three syllable word, in one case a four syllable word.",
    "start": "736850",
    "end": "748519"
  },
  {
    "text": "OK. So if you really are upset about about that then we would put that into into the hyphenation except dictionary attack.",
    "start": "748520",
    "end": "760150"
  },
  {
    "text": "All right. Well, that's one of the 27 errors. And so you got an idea. So why should I look in this in this file? People have some idea that some of the hard ones are where we start with a D e or something like that.",
    "start": "760150",
    "end": "773900"
  },
  {
    "text": "Let's take a look at that page. Difficult. OK. Round and round. Difficult. Let's stick.",
    "start": "773900",
    "end": "782180"
  },
  {
    "text": "Let's see. First of all, I go to page one that the directory to the whole file read on it.",
    "start": "782180",
    "end": "791720"
  },
  {
    "text": "OK. So let's see. By the way, this gives you a fairly random look into the file.",
    "start": "791720",
    "end": "798949"
  },
  {
    "text": "Two, four, four words. We were hitting all of these pretty well. Difficult. It's going to appear in page twenty six.",
    "start": "798950",
    "end": "804950"
  },
  {
    "text": "Let's take a look at some of these others to get an idea. Forger didn't get a hyphenated there, but who had wanted to come out for anyway?",
    "start": "804950",
    "end": "812140"
  },
  {
    "text": "You know, Genesis. We missed one of them. We don't really care.",
    "start": "812140",
    "end": "817910"
  },
  {
    "text": "Those that are two from the end because tech isn't going to hyphenate. Two letters away anyway.",
    "start": "817910",
    "end": "823610"
  },
  {
    "text": "I said page 26 was where we were. We could look for that. Page twenty six is.",
    "start": "823610",
    "end": "838149"
  },
  {
    "text": "Okay, I'm sorry, I got I supposed to move this over now so that I'm from.",
    "start": "838150",
    "end": "847930"
  },
  {
    "text": "Sorry, repeat substitute command. Why? Oh, I forgot.",
    "start": "847930",
    "end": "853029"
  },
  {
    "text": "Okay, I see. So here we go.",
    "start": "853030",
    "end": "862580"
  },
  {
    "text": "OK. Now, remember, the astronauts are the ones that get picked up.",
    "start": "862580",
    "end": "869200"
  },
  {
    "text": "And you'll notice that it does pick up nicely. They sometimes hear the hyphen s in other places D as hyphen, depending on the context.",
    "start": "869200",
    "end": "883600"
  },
  {
    "text": "And no errors are present in this particular in this particular car.",
    "start": "883600",
    "end": "890870"
  },
  {
    "text": "Now, these these patterns were generated by a program that is written in Web and is going to appear in Frank's thesis.",
    "start": "890870",
    "end": "897839"
  },
  {
    "text": "And and it'll be possible to get this program and run it for other languages, for other dictionaries.",
    "start": "897840",
    "end": "903090"
  },
  {
    "text": "And you have different constraints and different kinds of texts that you're setting,",
    "start": "903090",
    "end": "908550"
  },
  {
    "text": "even if you're working with English language so that you would you could use different dictionaries for though, for those words.",
    "start": "908550",
    "end": "916380"
  },
  {
    "text": "The patterns that Frank says that the time to run the program or was fifty seven C.P.U minutes on Sunday with mix,",
    "start": "916380",
    "end": "928050"
  },
  {
    "text": "you know, it goes through lots and lots of calculations in order to find the good patterns for this purpose.",
    "start": "928050",
    "end": "938040"
  },
  {
    "text": "The program is available to use. OK, so now we still haven't gotten out to difficult, but we can see that, that when it does miss a hyphen,",
    "start": "938040",
    "end": "948209"
  },
  {
    "text": "it tends to miss two of them in similar words that they they tend to go in in in clusters.",
    "start": "948210",
    "end": "955290"
  },
  {
    "text": "Well, where is difficult? Let's go on and on the chain. Detect, deteriorate.",
    "start": "955290",
    "end": "961170"
  },
  {
    "text": "We're picking up lots of these determinants. Determine a ball. No wonder it didn't find that one. Well, see, I can't search for difficult because it has these other things in it.",
    "start": "961170",
    "end": "975540"
  },
  {
    "text": "Maybe I could search for a D I f f star or DFS period would be good enough.",
    "start": "975540",
    "end": "986199"
  },
  {
    "text": "How about. Oh what's tav mean.",
    "start": "986200",
    "end": "991830"
  },
  {
    "text": "Oh that means. Yeah. OK, I got it so different. OK, we're close here. Now if they call.",
    "start": "991830",
    "end": "1000050"
  },
  {
    "text": "OK. And difficulty. But Difficulty's didn't see curious.",
    "start": "1000050",
    "end": "1009589"
  },
  {
    "text": "Now if you look so you look up above and below it. Lots and lots of hyphens are in there. So. So if indeed this fits, one uniform method for parents is is quite successful.",
    "start": "1009590",
    "end": "1021800"
  },
  {
    "text": "Now let's try let's try playing with it. Oh, I wanted to show you another.",
    "start": "1021800",
    "end": "1027020"
  },
  {
    "text": "Another set that. We took another dictionary that we got from a commercial firm for newspaper setting and and ran it",
    "start": "1027020",
    "end": "1039170"
  },
  {
    "text": "through a previous set of patterns and looked at all the the things that didn't work in that case.",
    "start": "1039170",
    "end": "1047480"
  },
  {
    "text": "And and then made sure that they weren't what they were.",
    "start": "1047480",
    "end": "1054510"
  },
  {
    "text": "What is the word in the pocket dictionary meaning which is pocket dictionary but still were common. A lot of them are modern, whereas others have gotten into the language recently or Martin hadn't some interest.",
    "start": "1054510",
    "end": "1072950"
  },
  {
    "text": "We wanted to make sure that we didn't make errors on these on these words. One reason no, they weren't in the pocket dictionary, so. Well, Afghanistan, we don't seem to find any hyphens in.",
    "start": "1072950",
    "end": "1085130"
  },
  {
    "text": "Yeah. Right. OK, so there's that.",
    "start": "1085130",
    "end": "1099110"
  },
  {
    "text": "There are some of these words that these were if these were ones that that caused trouble for parents that were only based on the pocket dictionary.",
    "start": "1099110",
    "end": "1110090"
  },
  {
    "text": "And then we had a much larger database of several hundred thousand words. I remember exactly how many, but much larger one, which we could also check that we wouldn't that we wouldn't make any errors.",
    "start": "1110090",
    "end": "1119240"
  },
  {
    "text": "And I believe there's only one error in this whole file now.",
    "start": "1119240",
    "end": "1124710"
  },
  {
    "text": "And I'll I'll be able to find it in a minute. Cryptanalysis, this is one that was hyphenated wrong in my article in Scientific American.",
    "start": "1124710",
    "end": "1136320"
  },
  {
    "text": "I remember that one that came out Krip Tantalize or something like that. OK.",
    "start": "1136320",
    "end": "1145799"
  },
  {
    "text": "Digitize the ones that we're that we're kind of interested in.",
    "start": "1145800",
    "end": "1152820"
  },
  {
    "text": "Actually, this list of exceptions included some things like dumbhead that were kind of interesting and a surprising number of obscene words.",
    "start": "1152820",
    "end": "1167409"
  },
  {
    "text": "OK, well, humoristic sorry, joystick, we didn't pick up dove in.",
    "start": "1167410",
    "end": "1180300"
  },
  {
    "text": "So now what I did was I wrote up. Oh. Read on. So I wrote a program called Tech Hyphen.",
    "start": "1180300",
    "end": "1189929"
  },
  {
    "text": "And as you can see. Oh well I. I can try executing tech hifa now this joysticks.",
    "start": "1189930",
    "end": "1197690"
  },
  {
    "text": "This just excerpts the hyphenation part of tech and then it gives us a chance",
    "start": "1197690",
    "end": "1205080"
  },
  {
    "text": "to type in words and it'll show us how the hyphenation algorithm performs. So I'm, I'm compiling it now and loading it and I have to input my test file.",
    "start": "1205080",
    "end": "1216470"
  },
  {
    "text": "Had that and it typed out. You can't read it, but it's typed out. Please wait. Now, at this point, it's computing from all those patterns.",
    "start": "1216470",
    "end": "1225030"
  },
  {
    "text": "It's computing a very efficient data structure so that to do the hyphenation is gonna be real fast.",
    "start": "1225030",
    "end": "1230890"
  },
  {
    "text": "I'll explain the data structure in a few minutes. OK. Now it's ready and it says the hyphenation table sizes are fifty two oh seven and one seventy four.",
    "start": "1230890",
    "end": "1240130"
  },
  {
    "text": "This fifty two oh seven is the number of words in a try tr ieee that's in your in your tech web listing.",
    "start": "1240130",
    "end": "1251520"
  },
  {
    "text": "And this is a data structure. We'll be talking about it. So it's fifty seven, fifty two hundred words to store all those patterns in a very efficient way to select hyphenation and will really be quite fast for it,",
    "start": "1251520",
    "end": "1262799"
  },
  {
    "text": "for English words. And that's four bytes for words. So twenty K bytes was used for twenty eight point twenty one K bytes essentially are in that table.",
    "start": "1262800",
    "end": "1278800"
  },
  {
    "text": "One hundred and seventy four is is the number of op codes I use in another table where I'm limited to two hundred fifty five.",
    "start": "1278800",
    "end": "1286230"
  },
  {
    "text": "And those are the so-called hyphenation option in the listing. Okay, now we can type A we can type some text in here and I'll post that.",
    "start": "1286230",
    "end": "1295289"
  },
  {
    "text": "I will write so that you can see the you can see what I'm typing I hope.",
    "start": "1295290",
    "end": "1300870"
  },
  {
    "text": "But I'm not looking at an edited file now. So we're we're we're stuck with with this problem of being something being on the left.",
    "start": "1300870",
    "end": "1311670"
  },
  {
    "text": "I guess what I can do is I can just put a bunch of notes that at the beginning of the words, I'll type execs that click super gradualists to X, the O loads those shifts and see what that hyphenates into.",
    "start": "1311670",
    "end": "1328889"
  },
  {
    "text": "Okay, the X's came on on the left. So you can see the rest of it. Now where this puts a no no and this is no different notation here.",
    "start": "1328890",
    "end": "1338200"
  },
  {
    "text": "A hyphen is something that that the algorithm finds. And a double cosine is a place where it found an even number greater than zero.",
    "start": "1338200",
    "end": "1349830"
  },
  {
    "text": "So we're a hyphen was suppressed by one of the pattern. So where I had up where I had a tour of four, I'd give an equal sign here where I get a one, three or five.",
    "start": "1349830",
    "end": "1359490"
  },
  {
    "text": "I've got an I've got a hike. So if you look at it Super Cal live forever.",
    "start": "1359490",
    "end": "1367440"
  },
  {
    "text": "It missed one hyphen between lit and. Jill, I think it could have put one there.",
    "start": "1367440",
    "end": "1374980"
  },
  {
    "text": "It's certainly a valid subset of the legal hyphens, but at the end of the word, it didn't it didn't get very many.",
    "start": "1374980",
    "end": "1381660"
  },
  {
    "text": "Now this, of course, is the word not in the dictionary, but it you see that we'll find words that are English like and it'll it'll do pretty well on on those words.",
    "start": "1381660",
    "end": "1392220"
  },
  {
    "text": "I am willing to take suggestions from the audience if you want to try any word.",
    "start": "1392220",
    "end": "1400020"
  },
  {
    "text": "Excuse me. Record. Somebody wants to see a therapist comes out as the rapist.",
    "start": "1400020",
    "end": "1414220"
  },
  {
    "text": "OK. They're pissed. OK. The other one is weeknights.",
    "start": "1414220",
    "end": "1420840"
  },
  {
    "text": "Coming out as a wee night. Is that isn't that the other one? Penny Stone is a CNN P and I are Penny Stone.",
    "start": "1420840",
    "end": "1436770"
  },
  {
    "text": "Yes, OK. They broke it.",
    "start": "1436770",
    "end": "1445830"
  },
  {
    "text": "Now, wait a second.",
    "start": "1445830",
    "end": "1451380"
  },
  {
    "text": "Actually, this would probably work out all right if I didn't put the X's in front of it, right? No, I. Course, this wouldn't be in our database. What were the two ends? OK?",
    "start": "1451380",
    "end": "1461309"
  },
  {
    "text": "No, it's just the same thing. Now, let's see. Barbara, do you have any ideas? OK.",
    "start": "1461310",
    "end": "1472260"
  },
  {
    "text": "Let's try a German word. This and shaft and. OK. Let's compact, let's say computer vision schaffen.",
    "start": "1472260",
    "end": "1481030"
  },
  {
    "text": "And so you get to see the hook.",
    "start": "1481030",
    "end": "1489330"
  },
  {
    "text": "This ends often will work. OK.",
    "start": "1489330",
    "end": "1495149"
  },
  {
    "text": "Now somebody said record and that it turned out it was one of the errors in that in that other file it had.",
    "start": "1495150",
    "end": "1501540"
  },
  {
    "text": "It did sound either record or record one of the two and the same thing for progress",
    "start": "1501540",
    "end": "1507780"
  },
  {
    "text": "versus progress and the same thing for one other case present and present.",
    "start": "1507780",
    "end": "1513480"
  },
  {
    "text": "Right. So they've all now been added as high as as exceptions in the hyphenation exception list, seven of them altogether.",
    "start": "1513480",
    "end": "1521610"
  },
  {
    "text": "And so if I type record now, it will just not do anything to it because it's been an exception where I said, don't touch it, don't touch that word.",
    "start": "1521610",
    "end": "1532740"
  },
  {
    "text": "Funny thing happened in Nepal in the past, the Times Tribune a couple weeks ago or a month or so ago,",
    "start": "1532740",
    "end": "1539070"
  },
  {
    "text": "where there was a paragraph that had three lines line and the first line is hyphenated record properly r e hyphen in second line.",
    "start": "1539070",
    "end": "1548980"
  },
  {
    "text": "It happened to end with record. Are you see hyphen or I.D. and other third line.",
    "start": "1548980",
    "end": "1554940"
  },
  {
    "text": "There was a missed completely wrong hyphenation, I forget.",
    "start": "1554940",
    "end": "1560730"
  },
  {
    "text": "I saved the example. I'll make a slide out of it. But. But this must have been done by manual intervention.",
    "start": "1560730",
    "end": "1567390"
  },
  {
    "text": "But then they let the automatic algorithm go on for the rest of the paragraph and it blew it.",
    "start": "1567390",
    "end": "1573240"
  },
  {
    "text": "Yeah. So those. So. So right now I have seven exceptions in the dictionary. So when we generate the patterns that we look for the dots in the resulting file.",
    "start": "1573240",
    "end": "1584160"
  },
  {
    "text": "And we we decide whether those dots are real errors or not in our mind sometimes that there's there's bugs in the dictionary.",
    "start": "1584160",
    "end": "1591930"
  },
  {
    "text": "And the ones that that we are upset about, like I could have put associate in there if I was upset about it, then.",
    "start": "1591930",
    "end": "1599340"
  },
  {
    "text": "Then make a dictionary for that. This percentage. Eighty eight percent found with with a very compact table that compares very favorably",
    "start": "1599340",
    "end": "1610710"
  },
  {
    "text": "with any other other method that was known to get a approximation for this. And what was the corresponding figures for for the present TEC algorithm?",
    "start": "1610710",
    "end": "1619620"
  },
  {
    "text": "Frank, you remember we pick out about 40 percent now.",
    "start": "1619620",
    "end": "1625140"
  },
  {
    "text": "I thought it was only in the 20s, but make me, I guess. Right, because we've got so many prefixes in respite, respite.",
    "start": "1625140",
    "end": "1637800"
  },
  {
    "text": "Got no hyphens. Must have. Yeah. Must be in the pocket dictionary. See, there won't be any errors for any word that's in the dictionary, which is a pretty complete, complete dictionary.",
    "start": "1637800",
    "end": "1648559"
  },
  {
    "text": "Now I think if I typed backslash T here it'll go through a database.",
    "start": "1648560",
    "end": "1654590"
  },
  {
    "text": "That came right out of the Pascal manual. I typed in every word of five letters or more out of the Pascal manual, and I guess you can't read it now.",
    "start": "1654590",
    "end": "1663000"
  },
  {
    "text": "But I'll tell Springer I didn't get hyphenated for large, did Heindl? Berg did the hyphen before the G. There isn't gonna bother anybody because, you know, Tech doesn't use the hyphens at the very end of the word.",
    "start": "1663000",
    "end": "1678810"
  },
  {
    "text": "Berlin came out okay. Pascal. Okay. Manual. Okay. Report. OK. Kathleen. Yes. Yes. And no hyphens at all.",
    "start": "1678810",
    "end": "1687940"
  },
  {
    "text": "Nick Lao's. That's fine, I think. No, no, no. OK, well then it wasn't. But it would move to an American. It sounds fine.",
    "start": "1687940",
    "end": "1696510"
  },
  {
    "text": "So it's based on English. So it must be okay. Preface. Know what I mean is are hyphenation parents supposed to work for English.",
    "start": "1696510",
    "end": "1705250"
  },
  {
    "text": "You see some version. Programing language drafted followed spirit ALGOL languages x 10 Civ D.",
    "start": "1705250",
    "end": "1720730"
  },
  {
    "text": "Though the men phase didn't get hyphenated first in that school became operational public K shewn followed.",
    "start": "1720730",
    "end": "1731850"
  },
  {
    "text": "You know it's working. Intourist D meant.",
    "start": "1731850",
    "end": "1737750"
  },
  {
    "text": "Yep. So that's all. So I'm doing fine.",
    "start": "1737750",
    "end": "1744190"
  },
  {
    "text": "So booklet consists parts was not hyphenated. I'm glad to see. So all these things.",
    "start": "1744190",
    "end": "1753129"
  },
  {
    "text": "OK. So let's start at the end.",
    "start": "1753130",
    "end": "1758240"
  },
  {
    "text": "We've got some more French word here. Pyar this Shahadat. Criticisms, suggestions, encouragement.",
    "start": "1758240",
    "end": "1765920"
  },
  {
    "text": "Helmuth son. Maior, Switzerland. So so that's the way the think reforms are based on these.",
    "start": "1765920",
    "end": "1778910"
  },
  {
    "text": "And since the if you look at the details of the words, it really is something that's,",
    "start": "1778910",
    "end": "1786620"
  },
  {
    "text": "it has promise of working even better in languages other than English, which English is weirder in this respect I think than than other languages are so.",
    "start": "1786620",
    "end": "1799700"
  },
  {
    "text": "So the success of this looks quite promising for just replacing this by another set of parents.",
    "start": "1799700",
    "end": "1805659"
  },
  {
    "text": "All the parents are being put into basic tech. So so in other words, your your format, when when you start running tech at all,",
    "start": "1805660",
    "end": "1814670"
  },
  {
    "text": "it knows no pattern and you have to input those as part of your format.",
    "start": "1814670",
    "end": "1822530"
  },
  {
    "text": "And basic will input a file, a separate file that contains the patterns on it so that people have their own favorite files, that they can do it now,",
    "start": "1822530",
    "end": "1833390"
  },
  {
    "text": "that besides patterns that go in, parents are read only by Initech and those a fairly elaborate computation to get the parent into an efficient form.",
    "start": "1833390",
    "end": "1842990"
  },
  {
    "text": "But then there's also the chance for users to put in their own exceptions, and that's done with hyphenation.",
    "start": "1842990",
    "end": "1853340"
  },
  {
    "text": "And then here you list the words that you want to hyphenate, especially in case you noticed when we had a statistician picked up or were some 20",
    "start": "1853340",
    "end": "1863929"
  },
  {
    "text": "letter word I'd never heard of before and surely wouldn't be in this dictionary. And it was heter or something or other.",
    "start": "1863930",
    "end": "1869070"
  },
  {
    "text": "And I and and if this method doesn't do well on it, then you can certainly put this put this in.",
    "start": "1869070",
    "end": "1877580"
  },
  {
    "text": "If you're curious about which patterns, which were the seven exceptions, I guess I might as well flash those up on the screen.",
    "start": "1877580",
    "end": "1884500"
  },
  {
    "text": "That's that's part file.",
    "start": "1884500",
    "end": "1901290"
  },
  {
    "text": "Okay. These were the words that were sufficiently strange that they that it was better to have them as exceptions",
    "start": "1901290",
    "end": "1910160"
  },
  {
    "text": "than to tend to make the patterns check for them because they would knock out other other good patterns. There's more than seven. OK. Let's see. That was control. So declination obligatory philanthropic present presence, progress with reciprocity.",
    "start": "1910160",
    "end": "1938790"
  },
  {
    "text": "Record. Records. Retribution and rhetoric in this file. I use this backslash age instead of hyphenation because this is a program that doesn't recognize control sequences except one letter ones.",
    "start": "1938790",
    "end": "1950970"
  },
  {
    "text": "Just to give it like this backslash t at the bottom here is a toggle that switches",
    "start": "1950970",
    "end": "1956610"
  },
  {
    "text": "back and forth between online and and stored in a stored dictionary of stuff.",
    "start": "1956610",
    "end": "1962730"
  },
  {
    "text": "So the last pattern was easy. Why. So you said X, Y is easy.",
    "start": "1962730",
    "end": "1967900"
  },
  {
    "text": "Y it would not hyphenate between the two Zs and one, two, three, four, five, six, seven, eight, nine, ten, eleven words.",
    "start": "1967900",
    "end": "1978210"
  },
  {
    "text": "Then we're given this hyper social basic tech will include these seven exceptions and and the fifth then the three thousand some parents.",
    "start": "1978210",
    "end": "1989340"
  },
  {
    "text": "Any question on that. Okay, now let's see how they use these patterns for it to go real fast, to do the hyphenation.",
    "start": "1989340",
    "end": "2005760"
  },
  {
    "text": "This idea of a I would try is a data structure that I discussed at some length in my book on sorting and searching.",
    "start": "2005760",
    "end": "2017880"
  },
  {
    "text": "And another word for it is a digital search tree. But there is a special kind of our pack.",
    "start": "2017880",
    "end": "2024480"
  },
  {
    "text": "Try that, Frank. Develop that.",
    "start": "2024480",
    "end": "2030190"
  },
  {
    "text": "That does the thing beautifully and let's see if I find a thing in them.",
    "start": "2030190",
    "end": "2035340"
  },
  {
    "text": "Let me find the. The algorithm for you in the manual hyphenation is Section 41 and it starts to modulate on sixth page to eighty three.",
    "start": "2035340",
    "end": "2055220"
  },
  {
    "text": "And so if you have a pattern. P1 p2.",
    "start": "2055220",
    "end": "2063389"
  },
  {
    "text": "Well. Let's suppose I have a parent, ABC, because I use that or a BD, I use that example before.",
    "start": "2063390",
    "end": "2077720"
  },
  {
    "text": "So to find this pattern, to see if there is anything in the tree for ABC,",
    "start": "2077720",
    "end": "2082840"
  },
  {
    "text": "will we can send zie one to A and then Z2 would be set to try link, which I can just call L for, for, for brevity.",
    "start": "2082840",
    "end": "2099750"
  },
  {
    "text": "Freeling of Ziyuan plus B and Z3 is Alosi two plus C plus V.",
    "start": "2099750",
    "end": "2110050"
  },
  {
    "text": "These are the the internal ASCII codes of the of the things Z3 is now going to be the identification of the pattern.",
    "start": "2110050",
    "end": "2123990"
  },
  {
    "text": "And however I have to have a check that, that this pattern is legitimate.",
    "start": "2123990",
    "end": "2132920"
  },
  {
    "text": "Well it meant and we see. So first and so then I also have a check that that something is gone.",
    "start": "2132920",
    "end": "2144619"
  },
  {
    "text": "So what should I call that. Let me call it C C of ZEW. One should equal a C as the two should equal B and C of Z3 should equal D.",
    "start": "2144620",
    "end": "2158420"
  },
  {
    "text": "If any of these conditions fails, then there's no pattern in the dictionary. But if all three of these conditions are true, then Z3 is a number identifying the parent EBD so that the trial is constructed in this fashion.",
    "start": "2158420",
    "end": "2172010"
  },
  {
    "text": "And basically it's like this at the beginning. I can think of this as as some long-stay 5000 word array and we start out and we look",
    "start": "2172010",
    "end": "2183740"
  },
  {
    "text": "in position ninety seven of the array and we put it and we put that number in CZI one.",
    "start": "2183740",
    "end": "2193530"
  },
  {
    "text": "Now we said we want to ninety seven. And look at S.O.S. one and see if as in a in there.",
    "start": "2193530",
    "end": "2199100"
  },
  {
    "text": "If so then, then good. That means we have at least one parent starting with eight. Then we, then we look at Alosi one which tells us another starting place in the three.",
    "start": "2199100",
    "end": "2208400"
  },
  {
    "text": "And that's for all parents starting with AC and Leif and Alosi one might be fifteen.",
    "start": "2208400",
    "end": "2215059"
  },
  {
    "text": "Say so when we add me to 15 and that. And we look here and it goes a B started there then. Then there has been a pattern starting with a B and then we pick up elements L and put",
    "start": "2215060",
    "end": "2230690"
  },
  {
    "text": "and that'll be Z2 and we saw LMC two and add to it and we see if there's a D there.",
    "start": "2230690",
    "end": "2237060"
  },
  {
    "text": "If so, then we've got an identification of that particular pattern. Now what. So what. Actually it turns out is that if you look at the tree and you see well first of all,",
    "start": "2237060",
    "end": "2249800"
  },
  {
    "text": "you've got to reserve all the locations for the first letters in the tree. So suppose everything can occur. The first letter, then we'd fill up twenty six places here in this table.",
    "start": "2249800",
    "end": "2261920"
  },
  {
    "text": "But then after a maybe there's only seven letters that fit. So we find a place where we can pick where we can pick all seven of these in here.",
    "start": "2261920",
    "end": "2271010"
  },
  {
    "text": "And finally we get the plate to two things that have only one balance successor. And so there's a easy way to stick them in and fill up all the holes and not waste any space.",
    "start": "2271010",
    "end": "2280020"
  },
  {
    "text": "You see that the idea is a method is extremely fast. We just have to check one one thing and fetch add, check, fetch, dad.",
    "start": "2280020",
    "end": "2289790"
  },
  {
    "text": "And we've got and we've identified where the pattern occurred. The the actual code for this is, I think, module eight, 10.",
    "start": "2289790",
    "end": "2304240"
  },
  {
    "text": "Yeah. We've got our words stored in H in.",
    "start": "2304240",
    "end": "2313030"
  },
  {
    "text": "Let's see, we've got our word in the C module eight 10. We've got our words stored in the HFC array.",
    "start": "2313030",
    "end": "2321500"
  },
  {
    "text": "And we said so here we go. It's Cierra.",
    "start": "2321500",
    "end": "2326660"
  },
  {
    "text": "And so we we put telemeters before and after the word to mark the beginning and end of the word. And then for each place within the word, we try to look for a pattern starting there.",
    "start": "2326660",
    "end": "2336260"
  },
  {
    "text": "And this loop is the look for a pattern in there. So is set to the HCF J.",
    "start": "2336260",
    "end": "2341780"
  },
  {
    "text": "That's this like Z one set today and Allissa to J.",
    "start": "2341780",
    "end": "2349940"
  },
  {
    "text": "This is our starting position while L is. While HCF Val is equal to try chargee, try chass my CV.",
    "start": "2349940",
    "end": "2357319"
  },
  {
    "text": "That I was talking about. Then I continue and I. And I. And I. And I go ahead as soon as I get to.",
    "start": "2357320",
    "end": "2366230"
  },
  {
    "text": "Oh by the way the pattern might be of various length. There might be a. Blink three and also a blink for starting in a given place. So I also look at Z one and Z two to see if there's a trick, a try up.",
    "start": "2366230",
    "end": "2377770"
  },
  {
    "text": "Start with it. A try out. Means that we have found a pattern there. And so in that case, and I would go through and store maximum values in the high stable as I'm supposed to.",
    "start": "2377770",
    "end": "2388150"
  },
  {
    "text": "Usually it'll be min quarter. Which means no. So then I increase L and Z set to the next element plus ACL and.",
    "start": "2388150",
    "end": "2398440"
  },
  {
    "text": "And go through the loop again. So just a few instructions per for iteration and the loop almost always dies out.",
    "start": "2398440",
    "end": "2406200"
  },
  {
    "text": "Right. Very quickly at the end. Then we, we have something that will contain odd numbers or even numbers depending on whether we should put a hyphen in or not.",
    "start": "2406200",
    "end": "2420120"
  },
  {
    "text": "The hyphenation exception table is kept in another in a in a hash table with a technique called ordered hashing.",
    "start": "2420120",
    "end": "2428470"
  },
  {
    "text": "That's of little interest. But I won't go through it now. And the first thing first we look up in the hyphen in the exception table to see if you've got a hyphen.",
    "start": "2428470",
    "end": "2437109"
  },
  {
    "text": "If that fails, then we go through the pattern matching process like this. And in both cases, we're gonna we're gonna finally start the patterns in in this hyphae thing,",
    "start": "2437110",
    "end": "2448510"
  },
  {
    "text": "which will be either even or depending on whether we want to run a hyphen there or not. The question is now this.",
    "start": "2448510",
    "end": "2460550"
  },
  {
    "text": "There has to be a definition of what what what things in a paragraph. We try to hyphenate.",
    "start": "2460550",
    "end": "2466170"
  },
  {
    "text": "Well, hyphenation is shut off. Inside of a math formula. But we also want to be sure that we could try hyphenating words that are surrounded by,",
    "start": "2466170",
    "end": "2476920"
  },
  {
    "text": "quote, marks or parentheses or something like that, followed by punctuation. We want that to interfere with our hyphenation process. And so take on the second pass does the following thing.",
    "start": "2476920",
    "end": "2488769"
  },
  {
    "text": "It looks. It starts out of space and then passes after the space until it gets to the first letter.",
    "start": "2488770",
    "end": "2497350"
  },
  {
    "text": "So this this could pass over quote marks and Perens of things like that till it gets to a letter.",
    "start": "2497350",
    "end": "2503620"
  },
  {
    "text": "And then starting at that letter, if it's if the letter is uppercase, it makes sure that it's that were supposed to be hyphenating uppercase.",
    "start": "2503620",
    "end": "2511910"
  },
  {
    "text": "Only looked at the first letter of the word. If the first letter is lower case and seconders upper case, it will try hyphenating in any case.",
    "start": "2511910",
    "end": "2521410"
  },
  {
    "text": "And in this end, for this purpose, the definition of a letter is not using that you code to see what is your code type is is eleven or twelve for other char.",
    "start": "2521410",
    "end": "2533860"
  },
  {
    "text": "But the definition of a letter is something that has a r u c code value.",
    "start": "2533860",
    "end": "2539500"
  },
  {
    "text": "That's uppercase or LC code. I forget one of the two. I think it's L.C code lowercase code zero.",
    "start": "2539500",
    "end": "2547570"
  },
  {
    "text": "If if the character has L.C Code zero, then it's considered a letter.",
    "start": "2547570",
    "end": "2553570"
  },
  {
    "text": "So the standard thing is, for example, L.C code of lowercase A is lowercase A.",
    "start": "2553570",
    "end": "2560050"
  },
  {
    "text": "LC code of uppercase A. is is lowercase say. This is the way you convert uppercase to lowercase through the LC code table.",
    "start": "2560050",
    "end": "2567700"
  },
  {
    "text": "And it's intended of course for large alphabets and other other foreign alphabets so that we have an idea as to what",
    "start": "2567700",
    "end": "2574359"
  },
  {
    "text": "it means to convert to lowercase because we convert everything to lowercase to look it up for four hyphenation.",
    "start": "2574360",
    "end": "2581680"
  },
  {
    "text": "And then afterwards we have to we know the hyphenation patterns and we put the hyphens, of course, in the original word, preserving the upper case, lower case the way they were.",
    "start": "2581680",
    "end": "2590550"
  },
  {
    "text": "Yeah. Dan, how do you tell if it's a capital if LC is not equal to itself?",
    "start": "2590550",
    "end": "2602120"
  },
  {
    "text": "It's upper case. It's considered the case. So that's.",
    "start": "2602120",
    "end": "2607720"
  },
  {
    "text": "Yeah. And then we then we go until we get to a non letter and then we go until we get to a a.",
    "start": "2607720",
    "end": "2617530"
  },
  {
    "text": "So sort of a safe point. So a non letter might be a a period or a comma or quotation mark or something.",
    "start": "2617530",
    "end": "2623710"
  },
  {
    "text": "Then we go to. So we reach either glew or penalty or something like that. Now if we reach either before this word or after the word, if we reach a dangerous thing like a box, then we give up.",
    "start": "2623710",
    "end": "2638950"
  },
  {
    "text": "So before the word afterword, it's supposed to be it supposed to be innocuous stuff.",
    "start": "2638950",
    "end": "2645050"
  },
  {
    "text": "So it says if there is a discretionary hyphen, it's considered dangerous means that the author has has said how he wants this word hyphenated.",
    "start": "2645050",
    "end": "2654190"
  },
  {
    "text": "So we don't touch that. So if we run into a discretionary hyphen anywhere in this process,",
    "start": "2654190",
    "end": "2659470"
  },
  {
    "text": "we assume that that's where we've been given already the correct information about this and that shuts the whole process off.",
    "start": "2659470",
    "end": "2665260"
  },
  {
    "text": "If we run into a box that that turns it off and a couple other things would turn it off. Math formula, for example, would would stop it.",
    "start": "2665260",
    "end": "2673040"
  },
  {
    "text": "But penalty wood wood would say where at the end of a word, penalty or glue to those of those.",
    "start": "2673040",
    "end": "2678790"
  },
  {
    "text": "So really, we cover all the common cases of text. And there is another slight clarification as we made.",
    "start": "2678790",
    "end": "2688640"
  },
  {
    "text": "We're passing through ligatures here as well as kerning.",
    "start": "2688640",
    "end": "2693650"
  },
  {
    "text": "Kerning little pieces of space that have been inserted into the word for for typographic effects.",
    "start": "2693650",
    "end": "2701339"
  },
  {
    "text": "And let's talk about those kerning. We just ignore. We just bypassed kerning, collect the word that would be there if the kerning wasn't there in the hyphenated.",
    "start": "2701340",
    "end": "2711730"
  },
  {
    "text": "And we put the kerning back in again. Talk about how to put the kerning back in again.",
    "start": "2711730",
    "end": "2717630"
  },
  {
    "text": "Also, how the ligatures. Suppose you made a ligature out of a letter and a non letter.",
    "start": "2717630",
    "end": "2726470"
  },
  {
    "text": "So you maybe somebody gave a ligature for a left parenthesis. See something like that? Oh, I'm sorry. I'm not going to worry about about weird cases like this.",
    "start": "2726470",
    "end": "2734690"
  },
  {
    "text": "So a ligature, if if if a letter is in the middle of a ligature, I don't start hyphenating there.",
    "start": "2734690",
    "end": "2741290"
  },
  {
    "text": "I'll start hyphenating after it. And at the end, similarly, if there's a letter followed by a non letter in the ligature,",
    "start": "2741290",
    "end": "2749570"
  },
  {
    "text": "I will chop that letter off and not consider it part of the word being hyphenated. So what we actually have here is the word being hyphenated. Is is a is given by node's and not by parts of notes.",
    "start": "2749570",
    "end": "2760610"
  },
  {
    "text": "It's not the part of a ligature at the beginning of the end. But we definitely have a set set of nodes in our in our horizontal list that suppose that's a word that we consider a candidate for hyphen.",
    "start": "2760610",
    "end": "2772460"
  },
  {
    "text": "This this set of nodes, which consists of either character nodes, ligature nodes or current nodes,",
    "start": "2772460",
    "end": "2778839"
  },
  {
    "text": "is is to is the candidate expands into the candidate for hyphenation.",
    "start": "2778840",
    "end": "2787580"
  },
  {
    "text": "And so it's not we don't split a ligature between punctuation and letters.",
    "start": "2787580",
    "end": "2793280"
  },
  {
    "text": "It's that that would be weird to try to handle that and so on.",
    "start": "2793280",
    "end": "2798630"
  },
  {
    "text": "OK, now we've got the we got this word as a candidate for hyphenation. And if it has fewer than five letters, we still we don't bother with it.",
    "start": "2798630",
    "end": "2806660"
  },
  {
    "text": "So we've got to have five letters or more. If so, then we look up in hyphenation table.",
    "start": "2806660",
    "end": "2812180"
  },
  {
    "text": "If it's not there, we try to go through the patterns. Even our business. And and we wind up with a bunch of hyphens.",
    "start": "2812180",
    "end": "2822740"
  },
  {
    "text": "Now, I mentioned the other day about difficult and what we have to do after that point.",
    "start": "2822740",
    "end": "2830450"
  },
  {
    "text": "Let me give you an even worse example. Now I'm going to give you one is so bad that we might not even get it right.",
    "start": "2830450",
    "end": "2838670"
  },
  {
    "text": "But I think we'll get it right. And it's in the test program at the end of year. At the end of this document, Phenix area contains a test program.",
    "start": "2838670",
    "end": "2851000"
  },
  {
    "text": "And this is like I said the other day, it's a program. This is not intended to do anything useful.",
    "start": "2851000",
    "end": "2859490"
  },
  {
    "text": "It's intended to exercise the different parts of time. And it's it's so.",
    "start": "2859490",
    "end": "2868320"
  },
  {
    "text": "Have I discussed these appendices so far in class or was that in conversation outside of class? I don't remember how I talked about it yet at all. OK.",
    "start": "2868320",
    "end": "2877160"
  },
  {
    "text": "This was oh, I mentioned this the other day. I mentioned that trip tech was supposed to be a little bit of a pun, but that's about all I did.",
    "start": "2877160",
    "end": "2884150"
  },
  {
    "text": "OK, so Trip is this test program starts on Independence Day here.",
    "start": "2884150",
    "end": "2889819"
  },
  {
    "text": "And it and I haven't gotten all the way through it, but I believe that by the time I get all the way to the end of this program and",
    "start": "2889820",
    "end": "2896120"
  },
  {
    "text": "I'll probably change a little bit after after I get all the way to the end, I believe there will be high probability that tech is near the near its final bug,",
    "start": "2896120",
    "end": "2907850"
  },
  {
    "text": "that all the ones afterwards, after any way, will be extremely subtle or related to errors, error, recovery.",
    "start": "2907850",
    "end": "2917000"
  },
  {
    "text": "However, I have not tested it yet so that I got all the way to the end. And in fact, you'll see that there's the word end sits somewhere in the middle of this file right now.",
    "start": "2917000",
    "end": "2927349"
  },
  {
    "text": "It's just stopping it where it is. I think it's. Oh.",
    "start": "2927350",
    "end": "2933770"
  },
  {
    "text": "Let me see. No, no, it's actually probably I get probably o end.",
    "start": "2933770",
    "end": "2944380"
  },
  {
    "text": "Is that. Yeah. Right there. It's says temporary ending on page one, dash three.",
    "start": "2944380",
    "end": "2949910"
  },
  {
    "text": "Temporary ending. And that's just where I where I looked up. Hyphenation of a very strange word. BBB BBB six ps there.",
    "start": "2949910",
    "end": "2959930"
  },
  {
    "text": "And I said just here in this test program I set the ace up uppercase hyphen to one which means I'm going to.",
    "start": "2959930",
    "end": "2969720"
  },
  {
    "text": "Uppercase letters. And I said eight sites. Two hundred point line penalty to a large number.",
    "start": "2969720",
    "end": "2975630"
  },
  {
    "text": "And so this is going to going to give me on one line of a paragraph, something that it won't be able to do without breaking the tolerance,",
    "start": "2975630",
    "end": "2986430"
  },
  {
    "text": "because this will have to stretch too much in order to in order to do it. So it'll go into the second pass and try hyphenating this word BBB Beebee,",
    "start": "2986430",
    "end": "2995789"
  },
  {
    "text": "and then it'll give me an underflow box message that will show me how many hyphens it found.",
    "start": "2995790",
    "end": "3001760"
  },
  {
    "text": "So and then I said, and that's as far as I got through testing this program so that you might just read the rest of it and try to guess what it's going to do.",
    "start": "3001760",
    "end": "3009770"
  },
  {
    "text": "But you can't tell now how the Appendix C shows the the results of the test program so far.",
    "start": "3009770",
    "end": "3019700"
  },
  {
    "text": "So when you when you install tech at your system, you should you can at least try it on chip tech and see if it doesn't give you the same output",
    "start": "3019700",
    "end": "3028730"
  },
  {
    "text": "as you see here in Appendix B for all of these files are on the tape that we distributed.",
    "start": "3028730",
    "end": "3034100"
  },
  {
    "text": "So you could compare with it. And at the very end of that, Appendix C will be what it did.",
    "start": "3034100",
    "end": "3041570"
  },
  {
    "text": "This wonderful box message that it gave us for the Beeby BBB and it's here on the bottom of page nine.",
    "start": "3041570",
    "end": "3051740"
  },
  {
    "text": "The short version of it says we're in font 20 and it hyphenated Beeby hyphen B hyphen three B's and the long version of it.",
    "start": "3051740",
    "end": "3061250"
  },
  {
    "text": "Oh gosh. Unfortunately it says et cetera there. And so we don't get to see what the discretionary nodes are that were inserted for those hyphens.",
    "start": "3061250",
    "end": "3074750"
  },
  {
    "text": "Well, that's a shame because they're they're rather beautiful.",
    "start": "3074750",
    "end": "3082820"
  },
  {
    "text": "But Will, we'll work out in class exactly what those would be. And in the final test program, I will have.",
    "start": "3082820",
    "end": "3087900"
  },
  {
    "text": "I'll have cut the box of made that that's part of the box print.",
    "start": "3087900",
    "end": "3094309"
  },
  {
    "text": "Now, why did BBB get hyphenated that way? Well, the reason was I put that in as a hyphenation exception.",
    "start": "3094310",
    "end": "3102200"
  },
  {
    "text": "So previously in that test program, it actually told it to hyphenate everywhere I put it and I put it in hyphenation.",
    "start": "3102200",
    "end": "3110060"
  },
  {
    "text": "I actually with lowercase B's, I put it in B hyphen B everything. But I told you Tech takes back a hyphen in these positions.",
    "start": "3110060",
    "end": "3118520"
  },
  {
    "text": "And so so the test program was at least working into the stent that it it it found all six hyphens in in that algorithm, but it took them back.",
    "start": "3118520",
    "end": "3128410"
  },
  {
    "text": "If you if you really want to get a high from there, you could put it in as a discretionary yourself, but otherwise text hyphenation method won't do it.",
    "start": "3128410",
    "end": "3135760"
  },
  {
    "text": "Now what about this? There's a strange find in use here called the trip fun trip.",
    "start": "3135760",
    "end": "3143460"
  },
  {
    "text": "Fun is something that doesn't exist on any printer, but it only exists as a tech fun metric.",
    "start": "3143460",
    "end": "3151339"
  },
  {
    "text": "And Appendix B shows this fun and gives the ligature information about it.",
    "start": "3151340",
    "end": "3159690"
  },
  {
    "text": "And this is an example of APL file. And we'll talk more about the ligatures and things tomorrow.",
    "start": "3159690",
    "end": "3171319"
  },
  {
    "text": "But basically. So let me just summarize for you. When A B is followed by a B, we convert converted into an A.",
    "start": "3171320",
    "end": "3179870"
  },
  {
    "text": "I want to be is followed by a hyphen. So let me write this down. BBM goes into a B is followed by a hyphen.",
    "start": "3179870",
    "end": "3190819"
  },
  {
    "text": "It goes into a C, realize that ligatures can also involve hyphens.",
    "start": "3190820",
    "end": "3196940"
  },
  {
    "text": "And so when we're doing our discretionary zuba, that would have that would also have to take account of that thing and be followed by a C gets gets kerning.",
    "start": "3196940",
    "end": "3210350"
  },
  {
    "text": "It goes into B Kearn C now followed by A B has some kerning associated with it, and A followed by a hyphen is also kerning.",
    "start": "3210350",
    "end": "3231770"
  },
  {
    "text": "But I. Well I think that fell off a file by hyphen, get some kerning.",
    "start": "3231770",
    "end": "3238100"
  },
  {
    "text": "And then in that font it turns out that a a followed by a turns into a.",
    "start": "3238100",
    "end": "3243560"
  },
  {
    "text": "But that isn't gonna Rising's examples now anyway. This, this letter than when I when I made up the paragraph for the word BBB BBB.",
    "start": "3243560",
    "end": "3253520"
  },
  {
    "text": "What happened. Well the B.V. turned into an A.",
    "start": "3253520",
    "end": "3258580"
  },
  {
    "text": "So. So this was a ligature A A followed by B and sort of the current there.",
    "start": "3258580",
    "end": "3263840"
  },
  {
    "text": "And then I had an I had A, B and other B. So it turned into a current A Kearn A.",
    "start": "3263840",
    "end": "3271800"
  },
  {
    "text": "And that was what was in the list when the paragraph started, the work on it. Then the second pass took over.",
    "start": "3271800",
    "end": "3278960"
  },
  {
    "text": "And so we had to hyphenate this word. We looked at this. Ligget at this and the ligature remembered where it came from.",
    "start": "3278960",
    "end": "3285740"
  },
  {
    "text": "And it came from six BS that looked up. Hyphenation table found that there were hyphenation points here and we see what we can do.",
    "start": "3285740",
    "end": "3293570"
  },
  {
    "text": "So then in order to insert the first hyphen, notice that we have to go back and figure out what the ligatures would be in both cases.",
    "start": "3293570",
    "end": "3305900"
  },
  {
    "text": "So in the first case where there was no hyphenation, we get an A followed by a Kurn, followed by something else.",
    "start": "3305900",
    "end": "3312650"
  },
  {
    "text": "But in the case that the hyphen is present, we would get an A followed by a different Kurn by this hyphen.",
    "start": "3312650",
    "end": "3319880"
  },
  {
    "text": "So we have to make up a discretionary note or the first case corresponds to if we're gonna break here at this hyphen and insert the hyphen.",
    "start": "3319880",
    "end": "3330920"
  },
  {
    "text": "In that case, we would put in, I believe, the ligature Vehbi, followed by a followed by Kern, followed by a hyphen.",
    "start": "3330920",
    "end": "3343549"
  },
  {
    "text": "And then the other case there would be nothing, I think. And in the end then. But but Vehbi followed by a Kurn in the case that there is no break taken.",
    "start": "3343550",
    "end": "3355520"
  },
  {
    "text": "Remember, discretionary has three parts. This is if there's a break. This comes before a break. This comes after the break. And if there's no break, we use this text.",
    "start": "3355520",
    "end": "3366860"
  },
  {
    "text": "Now, the next case is more interesting or more complicated, depending on your point of view.",
    "start": "3366860",
    "end": "3372680"
  },
  {
    "text": "And that is after you've decided whether or not to break at this hyphen. What about this hyphen? If you don't break out the hyphen, we see what's supposed to turn out into a Colonsay for those last Bauby.",
    "start": "3372680",
    "end": "3385940"
  },
  {
    "text": "If we do break at the hyphen, the whole pattern is changing because these two B's are then going to combine into a ligature.",
    "start": "3385940",
    "end": "3394069"
  },
  {
    "text": "And this being the hyphen is going to be a ligature. So that's the next part of it's going to make a discretionary.",
    "start": "3394070",
    "end": "3400700"
  },
  {
    "text": "And if we take the hyphen, it'll come out to a C. And on the next line, we'll have a B, B as a ligature, followed by A Kurn followed by B.",
    "start": "3400700",
    "end": "3416099"
  },
  {
    "text": "And what if we don't take the hyphen? We we we got a current A, B, B current Vehbi.",
    "start": "3416100",
    "end": "3423140"
  },
  {
    "text": "All right. Now I think I did this right, but only the computer can really handle these kind of things.",
    "start": "3423140",
    "end": "3432230"
  },
  {
    "text": "Well, in other words, the process of reconstructing after you found the hyphen can be a little complicated in the presence of ligatures.",
    "start": "3432230",
    "end": "3441080"
  },
  {
    "text": "But it's important to do this because of words like difficult and. And because we wanted to keep a general pattern of of ligatures.",
    "start": "3441080",
    "end": "3451080"
  },
  {
    "text": "Take two to do ligatures properly. Depending on what the the user defines.",
    "start": "3451080",
    "end": "3458060"
  },
  {
    "text": "Because I feel that now that ligatures are really the answer to accents in in foreign languages.",
    "start": "3458060",
    "end": "3464150"
  },
  {
    "text": "And the previous way the was doing accents. Turns off hyphenation but also doesn't doesn't give the right keyboard patterns for somebody who for whom accents is it is bread and butter.",
    "start": "3464150",
    "end": "3476490"
  },
  {
    "text": "Now if we have some some text that that involves multiple keystrokes to get extended",
    "start": "3476490",
    "end": "3482720"
  },
  {
    "text": "letters or even if we have some excellent letters coming in as a pair of eyes,",
    "start": "3482720",
    "end": "3488930"
  },
  {
    "text": "a pair of characters, less than 128, which you could which you couldn't imagine doing then then all the hyphenation algorithms and so",
    "start": "3488930",
    "end": "3501890"
  },
  {
    "text": "on will still work fine because this ligature mechanism has been built in to be quite general.",
    "start": "3501890",
    "end": "3508339"
  },
  {
    "text": "Something I see Barbara nodding your head here, and I just recall it in her Cyrillic font plan for Cyrillic font that one of the one of the things for keyboarding is to use to type,",
    "start": "3508340",
    "end": "3521300"
  },
  {
    "text": "I think J one for one kind of a soft stop and J two for a hard stop.",
    "start": "3521300",
    "end": "3528260"
  },
  {
    "text": "This is the Russian symbol. So I think they look something like that. Remember how to do him in script, but is something I don't remember exactly.",
    "start": "3528260",
    "end": "3536420"
  },
  {
    "text": "But the keyboards to type in those characters with type A J one for one and a J two.",
    "start": "3536420",
    "end": "3542000"
  },
  {
    "text": "And these this recognized as a ligature which which converts into that.",
    "start": "3542000",
    "end": "3547040"
  },
  {
    "text": "Now you might say, how am I going to give patterns for such for such things,",
    "start": "3547040",
    "end": "3552440"
  },
  {
    "text": "because ones and twos in a pattern are supposed to mean I supposed to mean numbers.",
    "start": "3552440",
    "end": "3557599"
  },
  {
    "text": "Remember if I said a B for D, that four isn't considered part of a ligature with B?",
    "start": "3557600",
    "end": "3564990"
  },
  {
    "text": "OK, well. So what if I wanted to give a pattern that. I said, if you know, if a J one is followed by a J.",
    "start": "3564990",
    "end": "3574360"
  },
  {
    "text": "Two, then I want a hyphen. That's never going to happen, of course, in Cyrillic. But how would I give that pattern?",
    "start": "3574360",
    "end": "3581910"
  },
  {
    "text": "And the answer is that you just put a zero here and zero there and one there.",
    "start": "3581910",
    "end": "3589150"
  },
  {
    "text": "And if you see a zero, if it sees a zero, then it assumes a digit after it is is like a letter.",
    "start": "3589150",
    "end": "3595680"
  },
  {
    "text": "So there's this escape for for giving the pattern set that that works. So the patterns can be described quite generally, I'd say thought of that much.",
    "start": "3595680",
    "end": "3612300"
  },
  {
    "text": "Now for people in foreign languages will,",
    "start": "3612300",
    "end": "3617550"
  },
  {
    "text": "we'll have a chance to get Franck's program that will generate parents for them and they can compare it against dictionary.",
    "start": "3617550",
    "end": "3624750"
  },
  {
    "text": "They think this is one of the more fun programs to play with, with different dictionaries and to see what and to see what happens when questions on.",
    "start": "3624750",
    "end": "3642160"
  },
  {
    "text": "Yes. Have you considered extending that program for spelling verification?",
    "start": "3642160",
    "end": "3647740"
  },
  {
    "text": "Yes. No, I haven't. But Frank. And Frank's thesis discussed, as it turned out, that this pact, tri structure is it is extremely compact way to represent a spelling checker.",
    "start": "3647740",
    "end": "3660700"
  },
  {
    "text": "And it's a good. And so it has two good uses and and probably the best method known for for quick spelling checking.",
    "start": "3660700",
    "end": "3669460"
  },
  {
    "text": "All right. Good. Good. Common. Yes. Yeah. How do you handle apostrophe. How do I handle apostrophes in words up apostrophes.",
    "start": "3669460",
    "end": "3682720"
  },
  {
    "text": "While they could be they could be put into hyphenation patterns if you wanted to, or else it would be it would be the end of the word and we would hyphenate only up to the up to the apostrophe.",
    "start": "3682720",
    "end": "3691520"
  },
  {
    "text": "OK. Because I think it is something like French where you have a lot of words that begin with L apostrophe followed by the right.",
    "start": "3691520",
    "end": "3698050"
  },
  {
    "text": "Yeah. Good point. In fact, people from H.M.S. I just noticed this French place name.",
    "start": "3698050",
    "end": "3713010"
  },
  {
    "text": "Do you know this one? The director of American Mass Society is Levak and he capitalizes the V.",
    "start": "3713010",
    "end": "3725460"
  },
  {
    "text": "And I just notice here was a case where the E was capitalized. But this but these words.",
    "start": "3725460",
    "end": "3730550"
  },
  {
    "text": "Yeah, no, probably in French we would want to strip off of the the prefix like that or else just",
    "start": "3730550",
    "end": "3741060"
  },
  {
    "text": "put the words in the dictionary and make up the patterns on it on that assumption.",
    "start": "3741060",
    "end": "3746380"
  },
  {
    "text": "See in our English dictionary we put in the words ending with S and E d.",
    "start": "3746380",
    "end": "3751740"
  },
  {
    "text": "All those things are in this dictionary so that the patterns will be recognized without having to strip off suffixes.",
    "start": "3751740",
    "end": "3758390"
  },
  {
    "text": "And so this previous analogous, analogous thing as a prefix,",
    "start": "3758390",
    "end": "3764039"
  },
  {
    "text": "the common prefix that would be put into words and probably be best to put that in spite of the patterns.",
    "start": "3764040",
    "end": "3772550"
  },
  {
    "text": "OK. Thanks a lot, though. Tomorrow, the four sessions are specifically on system dependent things.",
    "start": "3772550",
    "end": "3779390"
  },
  {
    "text": "And if the man wants to ask me what I would recommend to read tonight, I would say, well, there's a couple of good movies on in town.",
    "start": "3779390",
    "end": "3788119"
  },
  {
    "text": "But if you really want to read some of this, then I would go to the index, look up system dependencies.",
    "start": "3788120",
    "end": "3794030"
  },
  {
    "text": "That refers you to about 30, 40 modules. Look at those modules just to see what it says.",
    "start": "3794030",
    "end": "3801109"
  },
  {
    "text": "Those are the modules that the entire set of module that I think you might be especially interested in to to modify for your home system.",
    "start": "3801110",
    "end": "3881215"
  }
]