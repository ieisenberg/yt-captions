[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "My plan for the day is to finish up that stuff on methods.",
    "start": "5180",
    "end": "10905"
  },
  {
    "text": "We don't have much left, but I think they're really interesting topics. And then I have a notebook on metrics.",
    "start": "10905",
    "end": "16950"
  },
  {
    "text": "And I think I won't go through the entire notebook, there's a lot of material there. What I thought I would do is just go through the section that's",
    "start": "16950",
    "end": "23280"
  },
  {
    "text": "on kind of accuracy, precision and recall. Because I think if I do that, not only are those probably going to be",
    "start": "23280",
    "end": "29090"
  },
  {
    "text": "the most used metrics for projects in this course, but also you can kinda get a feel for the higher level thing that I'm trying to do which is",
    "start": "29090",
    "end": "36770"
  },
  {
    "text": "to get you to think in a kind of structured way about what your metrics are doing,",
    "start": "36770",
    "end": "42050"
  },
  {
    "text": "what they're not doing, where they might have faults, and so forth. So I'll do that. And then Atticus is gonna take over.",
    "start": "42050",
    "end": "49100"
  },
  {
    "text": "Atticus has a very exciting mini-lecture on generalization and adversarial testing,",
    "start": "49100",
    "end": "54589"
  },
  {
    "text": "as I've called it here. Um, and we'll let that take whatever time it takes and then just wrap up.",
    "start": "54590",
    "end": "59830"
  },
  {
    "text": "Uh, and if there's a little bit of time that's great you guys can just start to work on your projects, uh, and chat with the members of the teaching team who are here.",
    "start": "59830",
    "end": "68280"
  },
  {
    "text": "Uh, and then next week, contextual word representations, I'm gonna try to make you, uh,",
    "start": "68740",
    "end": "75740"
  },
  {
    "start": "70000",
    "end": "130000"
  },
  {
    "text": "responsible users of BERT and ELMo and the transformer. Uh, and then next Wednesday we'll have a panel discussion on NLU in industry.",
    "start": "75740",
    "end": "83555"
  },
  {
    "text": "And then Memorial Day. And then we kind of wrap up with some other loose ends again in the spirit",
    "start": "83555",
    "end": "88850"
  },
  {
    "text": "of trying to introduce topics and content that will help push your projects forward, that's basically what we're all about from here on out.",
    "start": "88850",
    "end": "96480"
  },
  {
    "text": "Oh, we had a wonderful discussion. I really appreciated all the comments that people made last time about the material.",
    "start": "96800",
    "end": "105545"
  },
  {
    "text": "There was, you know, a bunch of stuff that I had never thought about, and that deserves further thought.",
    "start": "105545",
    "end": "110810"
  },
  {
    "text": "Um, in the meantime, have any questions or concerns occurred to you about the things",
    "start": "110810",
    "end": "116120"
  },
  {
    "text": "we covered which is kind of like we did all of this stuff, we covered a lot of ground.",
    "start": "116120",
    "end": "121375"
  },
  {
    "text": "Data organization, cross-validation, baselines, hyper-parameter optimization, and classifier comparison.",
    "start": "121375",
    "end": "128789"
  },
  {
    "text": "So Goog- Google has that theme this year which is their hyper-parameters selection",
    "start": "128790",
    "end": "135410"
  },
  {
    "start": "130000",
    "end": "243000"
  },
  {
    "text": "I guess that's maybe what they use for AutoML too. Is there some sense that those things have kind",
    "start": "135410",
    "end": "140599"
  },
  {
    "text": "of helped with the hyper-parameter tuning or is that still kind of privy only to these big companies that have so much money",
    "start": "140600",
    "end": "147004"
  },
  {
    "text": "that they can just blast away on hyper-parameters for whenever, it was 400,000 hours or something?",
    "start": "147005",
    "end": "152770"
  },
  {
    "text": "I mean, there's definitely an element of blasting away. And kinda impressionistically for SNLI,",
    "start": "152770",
    "end": "159079"
  },
  {
    "text": "which is a leaderboard I kinda follow closely. Um, there is a split,",
    "start": "159079",
    "end": "164159"
  },
  {
    "text": "you see sometimes that simple models with relatively few parameters have really high scores,",
    "start": "164160",
    "end": "169985"
  },
  {
    "text": "and I think that strongly correlated with them being- them originating in companies like Google,",
    "start": "169985",
    "end": "175855"
  },
  {
    "text": "that could do really wide cross- cross, you know, hyper-parameter validation to find settings of the model that were really really good.",
    "start": "175855",
    "end": "184225"
  },
  {
    "text": "And they correspondingly, you know, these really articulate intricate models that are guided a lot by people's human intuition about the data,",
    "start": "184225",
    "end": "192049"
  },
  {
    "text": "they do well with less hyper-parameter optimization because they are guided by intuition.",
    "start": "192050",
    "end": "197255"
  },
  {
    "text": "So it's an interesting kind of juxtaposition. I myself don't know much about Google Vizier.",
    "start": "197255",
    "end": "202625"
  },
  {
    "text": "Is that a public product or something they just use internally? I think they had published a paper a little bit about it.",
    "start": "202625",
    "end": "208400"
  },
  {
    "text": "It was part of their like learning to learn I think like quantity or something in 2017 they had published about it but I wasn't sure how widely applicable it was.",
    "start": "208400",
    "end": "218495"
  },
  {
    "text": "Yeah, I don't know, I mean, I remember it from that quote I gave from the healthcare paper where they spent 200,000 hours doing,",
    "start": "218495",
    "end": "226155"
  },
  {
    "text": "uh, optimization using Vizier, but I guess I don't really know much about what it's all about. It would be great if they alleviated this burden by making resources",
    "start": "226155",
    "end": "234980"
  },
  {
    "text": "available. Other things on your mind?",
    "start": "234980",
    "end": "241209"
  },
  {
    "text": "All right. Let's do this final bit here, which is, assessing models without convergence,",
    "start": "242870",
    "end": "249239"
  },
  {
    "start": "243000",
    "end": "364000"
  },
  {
    "text": "which you could think of as another way of calling out a lot of deep learning models. And the background here is kind of like in the simpler era of",
    "start": "249240",
    "end": "257419"
  },
  {
    "text": "2011 for this course when everybody was using logistic regression, um,",
    "start": "257420",
    "end": "263065"
  },
  {
    "text": "convergence issues rarely arose, because those models I mean, you might not even notice it but they do have thresholds,",
    "start": "263065",
    "end": "269100"
  },
  {
    "text": "they do run for a number of iterations typically, um, but they tend to converge, right?",
    "start": "269100",
    "end": "274280"
  },
  {
    "text": "So you just kind of don't think about the fact that this is one of your hyper-parameters because they just finish up possibly before whatever threshold was set on the number of epochs.",
    "start": "274280",
    "end": "284074"
  },
  {
    "text": "So we didn't talk about this too much until recently but now with neural networks kind of at center stage,",
    "start": "284075",
    "end": "289940"
  },
  {
    "text": "convergence too has taken center stage, because these models rarely converge. Um, they can converge at different rates between runs.",
    "start": "289940",
    "end": "298460"
  },
  {
    "text": "And then the other side of this is that maybe running to convergence is not really what you want because what you",
    "start": "298460",
    "end": "305060"
  },
  {
    "text": "might implicitly be doing with kind of early stopping is some regularization that and that is benefiting your solution.",
    "start": "305060",
    "end": "313235"
  },
  {
    "text": "Um, and then the final point here is just that the performance of these models on test data is",
    "start": "313235",
    "end": "319099"
  },
  {
    "text": "often heavily dependent on when you decided to stop and how it related to convergence.",
    "start": "319100",
    "end": "324845"
  },
  {
    "text": "So the bottom line here is kind of like sometimes a model with a low final error turns out",
    "start": "324845",
    "end": "329960"
  },
  {
    "text": "to be great and sometimes it turns out- it turns out to be worse than one that finished with a higher error.",
    "start": "329960",
    "end": "335034"
  },
  {
    "text": "Who knows, right? That's I guess what I was gesturing at with this notion of like stopping early as a way of regularizing or as a way of avoiding over fitting to the training data.",
    "start": "335035",
    "end": "346045"
  },
  {
    "text": "But this poses a whole new set of problems, right? Because it's at least one more hyper-parameter but it's a very",
    "start": "346045",
    "end": "351289"
  },
  {
    "text": "complicated one to deal with because now you're thinking about having to run systems to varying degrees interacting with all your other hyper-parameters.",
    "start": "351290",
    "end": "359150"
  },
  {
    "text": "And of course the more they need to run, the more expensive this all gets in some generalized sense.",
    "start": "359150",
    "end": "364354"
  },
  {
    "start": "364000",
    "end": "475000"
  },
  {
    "text": "So one class of responses that you could have to this I've grouped under the heading of incremental Dev set testing.",
    "start": "364355",
    "end": "372005"
  },
  {
    "text": "So basically the idea here is that as your model is training, uh, incrementally say every 100th",
    "start": "372005",
    "end": "379325"
  },
  {
    "text": "epoch or every 10th or every 1000th, whatever you can afford, um, run an evaluation on a Dev set and see how performance is doing.",
    "start": "379325",
    "end": "389250"
  },
  {
    "text": "Uh, and I just wanna mention that all the PyTorch models for this course that are included in your repo, they can do this.",
    "start": "389250",
    "end": "396370"
  },
  {
    "text": "So if you give fit an optional X_dev and dev_itr set of arguments,",
    "start": "396370",
    "end": "401740"
  },
  {
    "text": "uh, then they will run evaluations on X_dev. And you can kind of collect that information and make use of it.",
    "start": "401740",
    "end": "409075"
  },
  {
    "text": "You could show a learning curve um, or you could use it to make a decision about where you want to stop.",
    "start": "409075",
    "end": "415750"
  },
  {
    "text": "And I will say that in my view at least given my understanding, TensorFlow is kinda ahead of the curve in all of this.",
    "start": "415750",
    "end": "422604"
  },
  {
    "text": "If you use the TensorFlow classes for this course, then I was able to just piggyback on the new estimator model framework and",
    "start": "422605",
    "end": "430540"
  },
  {
    "text": "its capabilities and they have lots of sophisticated things in terms of like automatically writing your model to disk,",
    "start": "430540",
    "end": "437340"
  },
  {
    "text": "so that if you want to rewind back to an earlier state of really good performance it's easy to do that.",
    "start": "437340",
    "end": "442895"
  },
  {
    "text": "And the PyTorch models are not currently set up for that kind of thing. But the spirit of all of this is just that you have your Dev set, uh,",
    "start": "442895",
    "end": "451620"
  },
  {
    "text": "you might as well see how you're doing on it and use that to inform test set evaluation. It's worth emphasizing again that absolutely",
    "start": "451620",
    "end": "459440"
  },
  {
    "text": "under no circumstances should you do this with your test set. That would just be like an incredibly blatant form of cheating",
    "start": "459440",
    "end": "465710"
  },
  {
    "text": "where you decided to stop opportunistically when you saw the best performance. But that's what your Dev set is for,",
    "start": "465710",
    "end": "472275"
  },
  {
    "text": "uh, so I encourage a lot of this. I mentioned before here that, you know,",
    "start": "472275",
    "end": "478510"
  },
  {
    "start": "475000",
    "end": "635000"
  },
  {
    "text": "the low error rate doesn't always correspond to good performance. Here's an actual pair of learning curves.",
    "start": "478510",
    "end": "483860"
  },
  {
    "text": "I have macro F1 here and the number of iterations. And for whatever reason on this run of the model,",
    "start": "483860",
    "end": "489860"
  },
  {
    "text": "performance got really good and then kind of leveled off. Meanwhile, over here error versus iterations,",
    "start": "489860",
    "end": "496340"
  },
  {
    "text": "the error just kept getting lower and lower. But obviously this was arguably having a negative effect or no effect at all,",
    "start": "496340",
    "end": "503360"
  },
  {
    "text": "even as this error went way down, and that's just because at a certain point you start to over-fit to the training data.",
    "start": "503360",
    "end": "510800"
  },
  {
    "text": "[inaudible]. [NOISE]",
    "start": "510800",
    "end": "519260"
  },
  {
    "text": "I mean, I- I guess it's a wild world that you might see that. [LAUGHTER] Um, but versions of this",
    "start": "519260",
    "end": "525160"
  },
  {
    "text": "might be something that you actually use, this kind of debugging. So for example, if your learning curve- your- sorry,",
    "start": "525160",
    "end": "530529"
  },
  {
    "text": "your error doesn't look approximately like this, then there might be something wrong in the optimization setting that's causing it to oscillate,",
    "start": "530530",
    "end": "537190"
  },
  {
    "text": "or even like have the error get larger, and it would surprise me if that corresponds to",
    "start": "537190",
    "end": "542440"
  },
  {
    "text": "good behavior kind of over here on this left panel. Um, and I guess the lesson there is just you might observe both of these things.",
    "start": "542440",
    "end": "551050"
  },
  {
    "text": "That's another advantage of TensorFlow is that with- with, um, TensorBoard monitoring, you can see all of this,",
    "start": "551050",
    "end": "556330"
  },
  {
    "text": "and kind of get a feel for what your model is doing. But certainly look at both and don't take one as a proxy for the other.",
    "start": "556330",
    "end": "562585"
  },
  {
    "text": "That's kind of my- my overarching point here.",
    "start": "562585",
    "end": "566090"
  },
  {
    "text": "Here's what I think the best response to all of this is, right? Because of- the way I was just describing things before,",
    "start": "568170",
    "end": "575139"
  },
  {
    "text": "we were still kind of in the mode of saying, I know that my model varies by epoch. I know that that affects test set performance,",
    "start": "575140",
    "end": "582610"
  },
  {
    "text": "but still what I wanna do for you is report one single number on a test set. And if you think open mindedly about this,",
    "start": "582610",
    "end": "589795"
  },
  {
    "text": "that's kind of misleading because what I'm telling you is that there's lots of variation along these learning curves as you- as you train on more data.",
    "start": "589795",
    "end": "596770"
  },
  {
    "text": "So I think the best response is to accept that incremental performance plots, like the one here,",
    "start": "596770",
    "end": "603115"
  },
  {
    "text": "are really how we should be assessing these models. Because that exposes much more information about the variation that you actually observe,",
    "start": "603115",
    "end": "611215"
  },
  {
    "text": "and can give you actually new ways of arguing for your model as I'll show you in a second.",
    "start": "611215",
    "end": "616610"
  },
  {
    "text": "The other thing I would say is that in deep learning, you know, in principle if you think about the theory, these models should be capable of learning anything.",
    "start": "616830",
    "end": "624144"
  },
  {
    "text": "So what we're really thinking about is how efficiently they can learn, or how stable their learning patterns are and so forth,",
    "start": "624145",
    "end": "630910"
  },
  {
    "text": "and that's probably, ultimately, where your real argument lies. And here's the kind of an example of this from my own work",
    "start": "630910",
    "end": "638680"
  },
  {
    "start": "635000",
    "end": "913000"
  },
  {
    "text": "from a paper that I did last year with Nick Dingwall. So the background here just quickly is,",
    "start": "638680",
    "end": "644350"
  },
  {
    "text": "we were arguing for this model called Mittens. Mittens is a warm start for GloVe.",
    "start": "644350",
    "end": "650755"
  },
  {
    "text": "The argument is that Mittens are warmer than GloVes. And really the pitch here is that what you could do is",
    "start": "650755",
    "end": "656470"
  },
  {
    "text": "start from like vectors that you had downloaded from the web, and then run GloVe on them with a kind of",
    "start": "656470",
    "end": "662860"
  },
  {
    "text": "retrofitting learning objective to update them for a specialized domain. And in the paper, we do this kind of updating for a bunch of different domains.",
    "start": "662860",
    "end": "671950"
  },
  {
    "text": "And what we're trying to do is show that you can do well, if you do that kind of updating. But the way that we actually evaluate them is kind of extrinsic.",
    "start": "671950",
    "end": "680230"
  },
  {
    "text": "So the evaluation is that they are inputs to various kinds of other machine learning models. And in this case,",
    "start": "680230",
    "end": "686305"
  },
  {
    "text": "we're doing a sequence prediction task for healthcare where you're kind of talking about people being diagnosed with different diseases.",
    "start": "686305",
    "end": "693145"
  },
  {
    "text": "And the model is an RNN that for each token is predicting whether it's like talking about a concern for a diagnosis,",
    "start": "693145",
    "end": "699985"
  },
  {
    "text": "or ruling out a diagnosis, whereas in other tag or whether it's a positive diagnosis for the disease in kind of clinical texts,",
    "start": "699985",
    "end": "707620"
  },
  {
    "text": "the kind of thing that you'd see in a- in an electronic health record. So these are RNNs fundamentally.",
    "start": "707620",
    "end": "714925"
  },
  {
    "text": "The full story here is that we didn't do a lot of hyper-parameter tuning because our rationale was that would be expensive,",
    "start": "714925",
    "end": "721540"
  },
  {
    "text": "first of all, for these RNNs because they need to run for a long time for convergence. And the two models are,",
    "start": "721540",
    "end": "727930"
  },
  {
    "text": "our main competition is like Mittens versus clinical text GloVes. So GloVe just trained on the text we have available,",
    "start": "727930",
    "end": "734214"
  },
  {
    "text": "and not given a warm start from the downloaded vectors. That's our main competition. And all we really care about is the Delta between them.",
    "start": "734215",
    "end": "741790"
  },
  {
    "text": "Really, we're trying to see whether Mittens is better. And otherwise these RNNs are kind of the same.",
    "start": "741790",
    "end": "747340"
  },
  {
    "text": "Like in your- and the inputs are scaled in similar ways, Mittens and these various flavors of GloVe.",
    "start": "747340",
    "end": "752530"
  },
  {
    "text": "So we used that as an argument to just set the hyper parameters, like the dimensionality to the network and its activation function and so forth.",
    "start": "752530",
    "end": "759820"
  },
  {
    "text": "But we did observe a lot of variation in how these models would learn because of randomization in their parameter initialization and so forth.",
    "start": "759820",
    "end": "769855"
  },
  {
    "text": "So we felt it was important to show these learning curves, and that's what we're doing here by category,",
    "start": "769855",
    "end": "775480"
  },
  {
    "text": "along the x-axis is the number of training epochs and the y-axis is F1.",
    "start": "775480",
    "end": "781180"
  },
  {
    "text": "And I like this really full picture because if I step back, I can say that we- if you look at macro averaged,",
    "start": "781180",
    "end": "790420"
  },
  {
    "text": "have a kind of modest argument overall, that for this data, Mittens learns a bit faster.",
    "start": "790420",
    "end": "797279"
  },
  {
    "text": "So if you can only afford to do like 1,000 training epochs, then the warm start for this domain is actually helping.",
    "start": "797280",
    "end": "804720"
  },
  {
    "text": "But over time if you can run to 10,000, the difference between those two models has disappeared",
    "start": "804720",
    "end": "810404"
  },
  {
    "text": "between clinical text GloVe and Mittens. But you can also see that,",
    "start": "810404",
    "end": "815665"
  },
  {
    "text": "no matter how long you run, these things have kind of leveled out, and both of those models are better than generic GloVe vectors,",
    "start": "815665",
    "end": "822774"
  },
  {
    "text": "or random initialization like that's the yellow and the- and the gray. So that's the kind of full picture,",
    "start": "822775",
    "end": "828430"
  },
  {
    "text": "but it gets pretty nuanced if you look at these different categories. So like, I'm not sure that that model really-",
    "start": "828430",
    "end": "833755"
  },
  {
    "text": "that argument really holds for concern, for example. There, it's very hard to see a difference between the red and the blue.",
    "start": "833755",
    "end": "841120"
  },
  {
    "text": "Maybe it's a bit stronger for positive up here where the error bars are tighter. [NOISE] I like this,",
    "start": "841120",
    "end": "848745"
  },
  {
    "text": "you know, kind of like in early phases of learning, Mittens is good, but in the fullness of time a lot of the differences disappear,",
    "start": "848745",
    "end": "856105"
  },
  {
    "text": "at least between those two competitors. It would be a very different picture. I would be giving you a very different story here if we had decided to just pick",
    "start": "856105",
    "end": "864250"
  },
  {
    "text": "the best point of performance for each one of these categories or the best point of performance from macro averaging, right?",
    "start": "864250",
    "end": "870325"
  },
  {
    "text": "There it might look like a stronger cut and dry argument in favor of Mittens. But you can see that would be a bit opportunistic, right?",
    "start": "870325",
    "end": "878290"
  },
  {
    "text": "And so I kind of, you know, I think things like open an honest reporting of how these models are doing.",
    "start": "878290",
    "end": "883300"
  },
  {
    "text": "This is like our attempt to do that. And so I don't know, I guess I'm saying that I would love to see",
    "start": "883300",
    "end": "890380"
  },
  {
    "text": "plots like this in papers you all produce. And I recognize that there's often a lot of pressure in terms of",
    "start": "890380",
    "end": "898300"
  },
  {
    "text": "information overload and in terms of culture to give a single Macro F1 number, or something like that.",
    "start": "898300",
    "end": "904089"
  },
  {
    "text": "But if you feel there's a room for this kind of more nuanced thing, then go for it. You have the teaching team's full support, I would say.",
    "start": "904090",
    "end": "912200"
  },
  {
    "start": "913000",
    "end": "1007000"
  },
  {
    "text": "And this plot here, since all that's differing here is the random initialization and other kind",
    "start": "913740",
    "end": "920080"
  },
  {
    "text": "of random things about how these models are learning. That brings us to this other point here, the role of random parameter initialization, right?",
    "start": "920080",
    "end": "926950"
  },
  {
    "text": "So, you know, you- when you set up the weights for your model in these settings, you do it with random initialization in these kind of non-convex optimization problems,",
    "start": "926950",
    "end": "936714"
  },
  {
    "text": "that initial setting might be determining a lot about how the model ultimately fares.",
    "start": "936714",
    "end": "941920"
  },
  {
    "text": "Um, but I will say that even simpler models can be impacted by this. If there's multiple optimal solutions,",
    "start": "941920",
    "end": "948100"
  },
  {
    "text": "then they could get steered in one direction or another. A kind of startling result from a couple of years ago,",
    "start": "948100",
    "end": "954850"
  },
  {
    "text": "is this paper that kind of did a bunch of analysis of recently proposed neural, um, language models.",
    "start": "954850",
    "end": "963475"
  },
  {
    "text": "And the striking finding of this paper is that, if you ran these systems a lot of times,",
    "start": "963475",
    "end": "969910"
  },
  {
    "text": "then the differences between them essentially disappeared because the way in",
    "start": "969910",
    "end": "975699"
  },
  {
    "text": "which they had been randomly initialized was having a big impact on the final outcome for the models.",
    "start": "975700",
    "end": "981820"
  },
  {
    "text": "And it will kind of put a damper this paper on the feeling that recent proposals were vastly better than",
    "start": "981820",
    "end": "987595"
  },
  {
    "text": "earlier ones because kind of when it all washed out, the differences were small or nonexistent.",
    "start": "987595",
    "end": "993145"
  },
  {
    "text": "And this was all tracing to different initializations. And this is sort of disturbing also for statistical testing.",
    "start": "993145",
    "end": "1000540"
  },
  {
    "text": "Different initializations can lead to statistically significant differences.",
    "start": "1000540",
    "end": "1006009"
  },
  {
    "start": "1007000",
    "end": "1044000"
  },
  {
    "text": "And there's a related thing here which is kinda the extreme version of this, which goes under the heading of catastrophic failure.",
    "start": "1007250",
    "end": "1014519"
  },
  {
    "text": "So you have an unlucky initialization of your model, and it leads to not only bad performance,",
    "start": "1014520",
    "end": "1020280"
  },
  {
    "text": "but like effectively zero performance. Um, my feeling is that,",
    "start": "1020280",
    "end": "1025425"
  },
  {
    "text": "the smart, the good, and open thing to do is to report the number of times that that happened, maybe in the pros of your paper,",
    "start": "1025425",
    "end": "1031620"
  },
  {
    "text": "so that you don't destroy the results table, but it is important, I think, to be forthcoming about how often this was happening,",
    "start": "1031620",
    "end": "1038160"
  },
  {
    "text": "and how much it was shaping the final means and confidence intervals that you reported. Sorry.",
    "start": "1038160",
    "end": "1044610"
  },
  {
    "start": "1044000",
    "end": "1140000"
  },
  {
    "text": "So since the- the initializations can have these big differences, and people aren't going to be publishing, you know,",
    "start": "1044610",
    "end": "1051040"
  },
  {
    "text": "results where they're not beating state-of-the-art. Do you think that there is this kind of, like, just random hill-climbing that happens because people all around the world are- are",
    "start": "1051040",
    "end": "1058659"
  },
  {
    "text": "basically doing these random initializations every time they attempt one of these papers, and occasionally people will get lucky,",
    "start": "1058660",
    "end": "1064470"
  },
  {
    "text": "and beat some benchmark, and they will get published and someone else will get even luckier. Like is that what you think is happening,",
    "start": "1064470",
    "end": "1070450"
  },
  {
    "text": "or is that not really a big concern? I think it is happening, and I think it's a concern,",
    "start": "1070450",
    "end": "1075455"
  },
  {
    "text": "and that's sort of the story not to impose too much on these authors, but that's kind of the story of this paper here.",
    "start": "1075455",
    "end": "1081070"
  },
  {
    "text": "Uh, and that- all of it brings me to the idea that we should be reporting things that look more like this,",
    "start": "1081070",
    "end": "1088610"
  },
  {
    "text": "that show us the impact of all of these different choices, and not so fixated on a single summary number",
    "start": "1088610",
    "end": "1095409"
  },
  {
    "text": "because it's probably overstating the degree to which we're making inexorable progress on these problems.",
    "start": "1095410",
    "end": "1104030"
  },
  {
    "text": "It's kind of- like, again, to bring up the SNLI leaderboard, there are so many systems that have been entered onto that leaderboard now,",
    "start": "1106350",
    "end": "1114055"
  },
  {
    "text": "that you can do the thing of kind of informally doing a meta study, and saying, okay, broadly speaking,",
    "start": "1114055",
    "end": "1120695"
  },
  {
    "text": "which classes of models are doing well? And like here, there the clear answer is- it's some kind of ensemble of deep learning modular pieces.",
    "start": "1120695",
    "end": "1128830"
  },
  {
    "text": "Um, so that even if the individual numbers are kind of being overstated, the overall trend is clear.",
    "start": "1128830",
    "end": "1135760"
  },
  {
    "start": "1140000",
    "end": "1212000"
  },
  {
    "text": "And to substantiate this a little bit in the notebook I didn't reproduce it here but there's a famous problem in, in neural networks.",
    "start": "1140540",
    "end": "1149205"
  },
  {
    "text": "The XOR problem which is just the logical connective that gives a 1 to the cases where p and q have different truth values, otherwise 0.",
    "start": "1149205",
    "end": "1157590"
  },
  {
    "text": "Um, and it's famously not a problem that a linear classifier can learn.",
    "start": "1157590",
    "end": "1163005"
  },
  {
    "text": "The other one is if and only if where the values have to be the same to get a truth value of 1.",
    "start": "1163005",
    "end": "1169395"
  },
  {
    "text": "And like one of the original arguments by the deep learning founders,",
    "start": "1169395",
    "end": "1174540"
  },
  {
    "text": "um, just shows that you can learn XOR with a kind of a shallow neural network.",
    "start": "1174540",
    "end": "1179815"
  },
  {
    "text": "And that's great. And it's cool. And you definitely can theoretically do this thing that you can't do with a linear model without adding a bunch of interaction terms.",
    "start": "1179815",
    "end": "1186664"
  },
  {
    "text": "Okay. Cool. But in reality, if you run my little feed-forward network it succeeds at this 8 of 10 times.",
    "start": "1186665",
    "end": "1193850"
  },
  {
    "text": "[LAUGHTER] And that's- and that's entirely owing to the fact that this is a small problem.",
    "start": "1193850",
    "end": "1200730"
  },
  {
    "text": "And so the initialization really matters. And you could just run that and get a feel for yourself that the extent to which this has actually solved empirically.",
    "start": "1200730",
    "end": "1209190"
  },
  {
    "text": "[LAUGHTER] So response here yeah, this kind of summarizes what I've been saying.",
    "start": "1209190",
    "end": "1215670"
  },
  {
    "start": "1212000",
    "end": "1295000"
  },
  {
    "text": "So report scores for multiple complete runs with different randomly chosen initializations and then summarize",
    "start": "1215670",
    "end": "1222200"
  },
  {
    "text": "that variation with confidence intervals or statistical tests. And then I wanna return to this pragmatic note that I keep sounding here.",
    "start": "1222200",
    "end": "1229880"
  },
  {
    "text": "So arguably these observations are incompatible with things like McNemar's test which depend on one run.",
    "start": "1229880",
    "end": "1236050"
  },
  {
    "text": "And I think that's true. But I think we have to balance that against the fact that if your system takes two weeks to",
    "start": "1236050",
    "end": "1241740"
  },
  {
    "text": "train then more or less starting now you have the opportunity to do just a few runs.",
    "start": "1241740",
    "end": "1247155"
  },
  {
    "text": "And then McNemar's test might be better than nothing in terms of informing us about differences.",
    "start": "1247155",
    "end": "1252789"
  },
  {
    "text": "So let's wrap this up. Uh, I think I can summarize everything that we did last time and this time with a few things here.",
    "start": "1254060",
    "end": "1261120"
  },
  {
    "text": "So your evaluation should be based around a few systems that are related in ways that illuminate your hypotheses",
    "start": "1261120",
    "end": "1267870"
  },
  {
    "text": "and help to convey what the best models are learning. That's the kind of baseline stuff that we talked about.",
    "start": "1267870",
    "end": "1273835"
  },
  {
    "text": "Every model you assess should be given its best chance to shine, right? Uh, that's like hyper parameter tuning and all of",
    "start": "1273835",
    "end": "1281510"
  },
  {
    "text": "that stuff is trying to make the strong argument in this way. And then the pragmatic note we need to be realistic",
    "start": "1281510",
    "end": "1287880"
  },
  {
    "text": "about how many experiments we can actually afford to run, afford in terms of dollars or time or resources.",
    "start": "1287880",
    "end": "1295300"
  },
  {
    "text": "The test shet- the test set should play no role whatsoever in optimization or model selection.",
    "start": "1295610",
    "end": "1302924"
  },
  {
    "text": "This is a note that we've sounded a lot because we did all those bake-offs. The best way to ensure that this,",
    "start": "1302925",
    "end": "1308730"
  },
  {
    "text": "this is to have the test set locked away until the final batch of experiments that will be reported in the paper.",
    "start": "1308730",
    "end": "1314790"
  },
  {
    "text": "Um, and the other thing that you can do if you don't have a test set is, is simulate that by careful cross-validation set-ups.",
    "start": "1314790",
    "end": "1323340"
  },
  {
    "text": "This would be where okay, you have a fixed body of examples, you do cross-validation and report the mean.",
    "start": "1323340",
    "end": "1331125"
  },
  {
    "text": "And the way you try to make a case that you're kind of hands-off about all of that is that you set up",
    "start": "1331125",
    "end": "1336570"
  },
  {
    "text": "your models with a lot of hyper-parameter tuning and let them run hands-off and then just report the final number.",
    "start": "1336570",
    "end": "1343095"
  },
  {
    "text": "And try to be honest with yourself about the extent to which you're going back and specially advantaging the model that you're favoring.",
    "start": "1343095",
    "end": "1349649"
  },
  {
    "text": "You kind of want this to be as hands-off as possible. And then of course just report this regime very carefully.",
    "start": "1349650",
    "end": "1357520"
  },
  {
    "text": "Strive to base your model comparisons in multiple runs on the same splits especially if you're doing deep learning stuff.",
    "start": "1357620",
    "end": "1364110"
  },
  {
    "text": "Um, because a single model can perform in very different ways on the same data depending on optimization and moon,",
    "start": "1364110",
    "end": "1371880"
  },
  {
    "text": "you know, sunspots and whatever else is happening in the universe.",
    "start": "1371880",
    "end": "1376000"
  },
  {
    "start": "1377000",
    "end": "1574000"
  },
  {
    "text": "All right. Uh, did that raise any new questions for you or concerns or comments or? Yeah.",
    "start": "1377300",
    "end": "1385950"
  },
  {
    "text": "Um, I'm still a little bit caught up on the random initialization portion.",
    "start": "1385950",
    "end": "1391424"
  },
  {
    "text": "I'm just wondering ethically speaking I guess- so I, I understood I guess one major point of",
    "start": "1391425",
    "end": "1399060"
  },
  {
    "text": "the analysis and different the performance of various models to learn like sort of meta-learn what architectures are of high level like",
    "start": "1399060",
    "end": "1406470"
  },
  {
    "text": "features of the model are good for like good performance on a certain task. But at the same time is it necessarily bad that people",
    "start": "1406470",
    "end": "1414600"
  },
  {
    "text": "get lucky and do happen to do the random hill climb and, and get like successful models that way?",
    "start": "1414600",
    "end": "1421995"
  },
  {
    "text": "Oh, I think it's not- so the only bad part. Yeah, like getting lucky could be great. And it does show us something there's a setting in which you win.",
    "start": "1421995",
    "end": "1429059"
  },
  {
    "text": "I think the part that at least I was worried about and maybe two is like if I do that special stuff only for the model that I want to advocate for,",
    "start": "1429060",
    "end": "1437850"
  },
  {
    "text": "because that's where you're stacking the deck in your favor. Uh, like I run these models hundreds of times.",
    "start": "1437850",
    "end": "1446595"
  },
  {
    "text": "And most of the time my model loses and I report the situation in which my model happened to win.",
    "start": "1446595",
    "end": "1452385"
  },
  {
    "text": "And you, you probably know in your heart that that's not an honest reporting, um, that kind of thing.",
    "start": "1452385",
    "end": "1459060"
  },
  {
    "text": "And I think he's asking, how often is that happening out there in the world? And I guess I was saying more than I would like as my guess.",
    "start": "1459060",
    "end": "1467400"
  },
  {
    "text": "But what we can do is a kind of push the community with our own choices in the direction of reporting",
    "start": "1467400",
    "end": "1474585"
  },
  {
    "text": "the mean and confidence intervals on all of those runs. [inaudible] on that note,",
    "start": "1474585",
    "end": "1483990"
  },
  {
    "text": "is there any empirical value from those weights that get initialized when you get lucky? Is it may be something that could be,",
    "start": "1483990",
    "end": "1489809"
  },
  {
    "text": "could be indicative of a good initialization system and like could that actual initialization be later considered like the hyper,",
    "start": "1489810",
    "end": "1496110"
  },
  {
    "text": "hyper parameter like there is- uh, have there initialization there's other types like that. Uh, I get that like, see tuning as an idea probably isn't that great but, uh,",
    "start": "1496110",
    "end": "1504540"
  },
  {
    "text": "is there insight that could be gleaned from finding what weights worked out or which ones didn't? I'm sure there is.",
    "start": "1504540",
    "end": "1511215"
  },
  {
    "text": "Yeah, now that's a great point. Uh, and I feel like as we get better at getting analytic insights those good",
    "start": "1511215",
    "end": "1517920"
  },
  {
    "text": "settings where you got lucky we'll provide more and more intelligence because you could s- what, what if you did report that for your problem",
    "start": "1517920",
    "end": "1524640"
  },
  {
    "text": "the standard thing was this kind of, um, initialization. And the best settings were the ones that deviated the most from it.",
    "start": "1524640",
    "end": "1531434"
  },
  {
    "text": "But what if they had different statistical properties? And what if you then took that, uh, lesson and applied it in a systematic way and found that it",
    "start": "1531435",
    "end": "1539310"
  },
  {
    "text": "reproduced a lot then you could get an initialization scheme named after you. [LAUGHTER] Which is real fame",
    "start": "1539310",
    "end": "1546810"
  },
  {
    "text": "because then you get your name in all of these deep learning packages. [LAUGHTER] Okay.",
    "start": "1546810",
    "end": "1558809"
  },
  {
    "text": "Let's do the metrics thing but keep asking questions on Piazza and office hours.",
    "start": "1558810",
    "end": "1565950"
  },
  {
    "text": "Uh, yeah, I think it's, it's great to be discussing all this. [NOISE]",
    "start": "1565950",
    "end": "1574920"
  },
  {
    "start": "1574000",
    "end": "1608000"
  },
  {
    "text": "But let's do one thing about metrics. So this is a massively long notebook. [NOISE] Um, and that's why I say like let's talk about basically",
    "start": "1574920",
    "end": "1584460"
  },
  {
    "text": "just the first part of this classifier metrics thing because that'll be enough to give you a feel for my thinking about this,",
    "start": "1584460",
    "end": "1590925"
  },
  {
    "text": "and kind of get that discussion going. And then, if you're doing a problem with regression or sequence prediction,",
    "start": "1590925",
    "end": "1597465"
  },
  {
    "text": "then you can refer to these later sections here, um, which introduce all of these metrics in just the way I'm going to today,",
    "start": "1597465",
    "end": "1605070"
  },
  {
    "text": "and talk about their trade-offs. Yeah. Um, here's the overview of this.",
    "start": "1605070",
    "end": "1611159"
  },
  {
    "start": "1608000",
    "end": "1741000"
  },
  {
    "text": "So different evaluation metrics encode different values, and the, the different values in the sense of like what do we value, uh,",
    "start": "1611160",
    "end": "1618165"
  },
  {
    "text": "of a system, and they also have different biases and weaknesses. No- none of these metrics is perfect because",
    "start": "1618165",
    "end": "1624705"
  },
  {
    "text": "all of them are encoding different values and values can vary. So you should choose your metrics carefully,",
    "start": "1624705",
    "end": "1630855"
  },
  {
    "text": "and motivate these choices when writing up and presenting your work. Um, I would love to see passages where even if you've,",
    "start": "1630855",
    "end": "1637860"
  },
  {
    "text": "even if you're doing something that's the default [NOISE] for your problem you still do articulate why it's the choice that you made.",
    "start": "1637860",
    "end": "1644100"
  },
  {
    "text": "[NOISE] The notebook reviews some of the most prominent metrics in NLP,",
    "start": "1644100",
    "end": "1649679"
  },
  {
    "text": "and I tried to define them, but also articulate what values they encode and what weaknesses they have,",
    "start": "1649680",
    "end": "1655260"
  },
  {
    "text": "and also report relationships between them. Because one way in which this can be kind of overwhelming",
    "start": "1655260",
    "end": "1660989"
  },
  {
    "text": "is that basically the same metric is described, um, and given different names in different ways,",
    "start": "1660989",
    "end": "1666870"
  },
  {
    "text": "um, when really the differences don't mean much. In your own work,",
    "start": "1666870",
    "end": "1672164"
  },
  {
    "text": "you should not feel confined to the metrics in this notebook, right? Per my first item. You have the freedom to motivate new metrics and use",
    "start": "1672165",
    "end": "1679830"
  },
  {
    "text": "cases for existing metrics depending on what your goals are. Now, culturally, if you're working on an established problem,",
    "start": "1679830",
    "end": "1688005"
  },
  {
    "text": "then you'll feel a lot of pressure from readers and referees to use metrics that have already been adopted for the problem,",
    "start": "1688005",
    "end": "1694290"
  },
  {
    "text": "and there are even these little communities within NLP that have totally settled on a single metric,",
    "start": "1694290",
    "end": "1699960"
  },
  {
    "text": "uh, no matter how problematic. And so you can get in this trap of feeling like you know there's a problem,",
    "start": "1699960",
    "end": "1706455"
  },
  {
    "text": "but you still have to report it. Um, you should feel free to argue against those norms and motivate new ones.",
    "start": "1706455",
    "end": "1713310"
  },
  {
    "text": "You might in your paper want to report the old metrics as a kind of foundation and then talk about why a new metric,",
    "start": "1713310",
    "end": "1720990"
  },
  {
    "text": "uh, is a better one for your problem. I kind of feel like I don't really work in this area,",
    "start": "1720990",
    "end": "1726170"
  },
  {
    "text": "but for language modeling, I feel like everybody is in this state with reporting perplexity. So it's like everyone does it because everyone",
    "start": "1726170",
    "end": "1733370"
  },
  {
    "text": "expects that everyone else will expect that they do it, but nobody believes in it. Still report it. [NOISE] Uh,",
    "start": "1733370",
    "end": "1743700"
  },
  {
    "start": "1741000",
    "end": "1773000"
  },
  {
    "text": "and the other thing I'll say just by way of high level is the scikit model evaluation usage guide here is great.",
    "start": "1743700",
    "end": "1749775"
  },
  {
    "text": "It has lots of notes about how to make responsible use of the metrics they've provided and they've provided lots of them.",
    "start": "1749775",
    "end": "1756000"
  },
  {
    "text": "In the notebook that I'm going through here, I've hidden a lot of this, but I defi- redefine the metrics just so that you can see how they work,",
    "start": "1756000",
    "end": "1762525"
  },
  {
    "text": "but m- my advice to you would be to use the scikit ones because they had been more heavily tested,",
    "start": "1762525",
    "end": "1767940"
  },
  {
    "text": "and tend to have more options for doing things.",
    "start": "1767940",
    "end": "1772059"
  },
  {
    "text": "So but let's just do this classifier metric thing and then kind of linger over this. And this is kind of nice because this is",
    "start": "1772970",
    "end": "1778680"
  },
  {
    "start": "1773000",
    "end": "1925000"
  },
  {
    "text": "the stuff that you've probably encountered the most and feel like you already fully understand and that the- my idea would",
    "start": "1778680",
    "end": "1784320"
  },
  {
    "text": "be that I wanna kind of problematize this for you. So let's start with the confusion matrix.",
    "start": "1784320",
    "end": "1790154"
  },
  {
    "text": "Uh, this gives a complete comparison of how the observed, that is the gold labels here,",
    "start": "1790155",
    "end": "1795960"
  },
  {
    "text": "and the predicted labels relate to each other. I'm sorry that that's a bit small, um,",
    "start": "1795960",
    "end": "1801539"
  },
  {
    "text": "but I have like a simple sentiment problem, pos, neg, neutral, pos, neg, neutral. And the idea here is that like the system that made this got 15 positive examples right,",
    "start": "1801540",
    "end": "1812295"
  },
  {
    "text": "15 negative, and 1,000 neutral correct. Those are the diagonal elements. And then the off-diagonal is saying like,",
    "start": "1812295",
    "end": "1819420"
  },
  {
    "text": "for 10 of the true positive cases, the model predict negative, and for 100 of the true positive cases,",
    "start": "1819420",
    "end": "1826200"
  },
  {
    "text": "the model predicted neutral, right? You guys have seen these before. I'm gonna call this example 1.",
    "start": "1826200",
    "end": "1833200"
  },
  {
    "text": "You should remember when you think about these things that",
    "start": "1834530",
    "end": "1839610"
  },
  {
    "text": "your classifier probably did not predict into this space. It predicted a probability distribution over those three labels pos, neg, and neutral.",
    "start": "1839610",
    "end": "1849600"
  },
  {
    "text": "And to construct this table, you have to impose a threshold. You have to say that I'm gonna, for example,",
    "start": "1849600",
    "end": "1856080"
  },
  {
    "text": "pick the highest of the probability values and just say that is the true label, and that is what shaped this final picture here.",
    "start": "1856080",
    "end": "1864475"
  },
  {
    "text": "But that is, of course, a meaningful thing to have done. If your classifier say it predicted, [NOISE] uh,",
    "start": "1864475",
    "end": "1871145"
  },
  {
    "text": "like fro- [NOISE] to make it easy to think of a binary problem where the threshold will be 50%.",
    "start": "1871145",
    "end": "1877480"
  },
  {
    "text": "Suppose your classifier reliably predicts for the zero label that it's like 0-20%,",
    "start": "1877480",
    "end": "1884415"
  },
  {
    "text": "and then 20-40 for the positive label, you're confusing ma- confusion matrix will look like you've got everything wrong,",
    "start": "1884415",
    "end": "1891465"
  },
  {
    "text": "when in fact with a different threshold, your model would be perfect. Um, so keep that in mind and that, this can happen,",
    "start": "1891465",
    "end": "1898380"
  },
  {
    "text": "especially with very imbalanced classes that the classifier just kind of never predicts high values for things,",
    "start": "1898380",
    "end": "1904305"
  },
  {
    "text": "even though it is discriminating. And I'm not gonna go into this today, but metrics like average precision and precision-recall",
    "start": "1904305",
    "end": "1911340"
  },
  {
    "text": "curves they can expose exactly that kind of behavior in your classifier, and give you a, a really strong argument that you're doing well",
    "start": "1911340",
    "end": "1918810"
  },
  {
    "text": "even though the default ma- confusion matrix would look bad.",
    "start": "1918810",
    "end": "1923140"
  },
  {
    "start": "1925000",
    "end": "2231000"
  },
  {
    "text": "And the other thing I would say here is that we might care about the full distribution, and that's being completely hidden by this confusion matrix,",
    "start": "1925220",
    "end": "1932400"
  },
  {
    "text": "but this is nonetheless the basis for the metrics that I want to go over with you now. So accuracy. This is the metric",
    "start": "1932400",
    "end": "1940290"
  },
  {
    "text": "that we all probably think of at some level when we think about assessing the, how good a system is, at least before you enter",
    "start": "1940290",
    "end": "1946860"
  },
  {
    "text": "this field to think accuracy will be the right metric. This is just the sum of the correct predictions divided by the sum of all predictions.",
    "start": "1946860",
    "end": "1954300"
  },
  {
    "text": "And I have the same confusion matrix here and I just highlighted the diagonal because what accuracy is doing is summing those values,",
    "start": "1954300",
    "end": "1961290"
  },
  {
    "text": "and dividing by the total of all the values in the table. And so here this, with this classifier you get an accuracy of 81%.",
    "start": "1961290",
    "end": "1969990"
  },
  {
    "text": "[NOISE] Yeah. It's useful to just know the bounds,",
    "start": "1969990",
    "end": "1976545"
  },
  {
    "text": "I did this for all the metrics, um, and here obviously at 0 to 1. 0 the worst, 1 the best.",
    "start": "1976545",
    "end": "1983160"
  },
  {
    "text": "What value is encoded by accuracy? You might argue that it encodes a kind of core value that we have for classifiers,",
    "start": "1983160",
    "end": "1990870"
  },
  {
    "text": "that is how often they're correct. Um, and in addition as I'll show you in a second,",
    "start": "1990870",
    "end": "1996420"
  },
  {
    "text": "the accuracy of a classifier on a test set will be negatively correlated with the negative cross entropy loss which is a common loss for classifiers.",
    "start": "1996420",
    "end": "2005495"
  },
  {
    "text": "So in, in that important sense, your classifier is probably optimizing accuracy or",
    "start": "2005495",
    "end": "2011390"
  },
  {
    "text": "rather an inverse value of accuracy and that does make it a very natural fit.",
    "start": "2011390",
    "end": "2016445"
  },
  {
    "text": "And I, I wanna return to that when we think about how this is all interacting with, um, Hyper-parameter tuning.",
    "start": "2016445",
    "end": "2022804"
  },
  {
    "text": "But just keep in mind that even though we don't favor accuracy as the metric, it is what your classifier is doing, probably.",
    "start": "2022805",
    "end": "2031235"
  },
  {
    "text": "So weaknesses of accuracy. It does not give a per-class metric for multi-class problems,",
    "start": "2031235",
    "end": "2037159"
  },
  {
    "text": "uh, and we might want that kind of nuance. [NOISE] But the more important thing is that accuracy just completely",
    "start": "2037160",
    "end": "2042530"
  },
  {
    "text": "fails to control for size imbalances in the classes. So for example, consider this variant here of the above classifier,",
    "start": "2042530",
    "end": "2050794"
  },
  {
    "text": "ex1, where the classifier only ever predicts neutral. Because neutral is a large category,",
    "start": "2050795",
    "end": "2058820"
  },
  {
    "text": "it looks like a really good classifier from the point of view of accuracy. Its accuracy is 0.87 for this,",
    "start": "2058820",
    "end": "2065960"
  },
  {
    "text": "for this confusion matrix versus 0.81 for the one before. But I really feel like this is a better model.",
    "start": "2065960",
    "end": "2074164"
  },
  {
    "text": "If you think about actually discriminating between the labels, this looks better than this one,",
    "start": "2074165",
    "end": "2079369"
  },
  {
    "text": "which is just stupidly always guessing neutral and benefiting from the fact that neutral is a massive category.",
    "start": "2079370",
    "end": "2086195"
  },
  {
    "text": "And this is why we have never used accuracy in this class because you could only ever trust it even a little bit for a completely balanced problem.",
    "start": "2086195",
    "end": "2094730"
  },
  {
    "text": "[NOISE] Makes sense? And then the other part of this little framework I've",
    "start": "2094730",
    "end": "2102530"
  },
  {
    "text": "constructed here is just what's related to accuracy. And so I didn't want- just want to state that accuracy is",
    "start": "2102530",
    "end": "2107780"
  },
  {
    "text": "inversely proportional to the cross-entropy loss, um, and the cross-entropy loss and in turn accuracy can both be,",
    "start": "2107780",
    "end": "2115250"
  },
  {
    "text": "be related to KL divergence. And the value of that is just that if your classifier is predicting a probability distribution,",
    "start": "2115250",
    "end": "2122960"
  },
  {
    "text": "you might also think about learning from a probability [NOISE] distribution, and kind of really embracing the probabilistic nature of your [NOISE] classifier end of the data,",
    "start": "2122960",
    "end": "2131210"
  },
  {
    "text": "in which case you'd probably use KL divergence as your metric and it would also be what your model was optimizing in some re-scaled sense.",
    "start": "2131210",
    "end": "2138890"
  },
  {
    "text": "[NOISE] So this is kind of like, like nice little network of related things that very deeply connect with what your model is doing,",
    "start": "2138890",
    "end": "2146825"
  },
  {
    "text": "and then we have this kind of mismatch that it's what your model is doing, but it's probably not what you want to report as your metric.",
    "start": "2146825",
    "end": "2152765"
  },
  {
    "text": "You know we want to report something like macro F1. But you can't in a straightforward way optimize for macro F1.",
    "start": "2152765",
    "end": "2160160"
  },
  {
    "text": "So that's worth keeping in mind, and in my experience it's worth keeping in mind because when you do hyper-parameter tuning,",
    "start": "2160160",
    "end": "2167030"
  },
  {
    "text": "you might do that tuning against your true metric which is macro F1, uh, and pick the model that maximizes that value.",
    "start": "2167030",
    "end": "2175280"
  },
  {
    "text": "But you should remember that your model is doing something different and might actually be steering you outside of the space that you actually wanna be in for your problem.",
    "start": "2175280",
    "end": "2183589"
  },
  {
    "text": "That's a kind of limitation of this, this mitch- mismatch that we're encountering.",
    "start": "2183590",
    "end": "2189060"
  },
  {
    "text": "Make sense? Any questions about that? [NOISE] This, oh, go ahead.",
    "start": "2189910",
    "end": "2198290"
  },
  {
    "text": "Is it variables function for F1 macro average? [NOISE] I've- um-",
    "start": "2198290",
    "end": "2204750"
  },
  {
    "text": "I'm afraid not because the macro F1 is this kind of holistic thing about",
    "start": "2204910",
    "end": "2210635"
  },
  {
    "text": "how you're doing on an entire subset of your data and so it would have to be,",
    "start": "2210635",
    "end": "2215705"
  },
  {
    "text": "correct me if I'm wrong here, [NOISE] but some kind of loss that was more like a reinforcement learning loss, and not something that was directly like",
    "start": "2215705",
    "end": "2222500"
  },
  {
    "text": "stateable as a differential loss on your classifier. Yeah. That kind of problem though with accuracy you know like imbalanced classes.",
    "start": "2222500",
    "end": "2236420"
  },
  {
    "start": "2231000",
    "end": "2298000"
  },
  {
    "text": "This is what leads to precision and recall and the reason I like that we're doing this one in particular is that again and again through the notebook,",
    "start": "2236420",
    "end": "2244940"
  },
  {
    "text": "you see that precision and recall is what people have in their back- in the back of their minds. So like when you get to like BLEU scores,",
    "start": "2244940",
    "end": "2251480"
  },
  {
    "text": "BLEU scores are kind of precision-recall, you know, um, word-level acc- it's what's sometimes called accuracy is also a precision-recall balance",
    "start": "2251480",
    "end": "2260119"
  },
  {
    "text": "and even some of the regression metrics are kin- trying to do something that's like bouncing precision and recall.",
    "start": "2260120",
    "end": "2266030"
  },
  {
    "text": "So this is kind of the heart of it. So precision in these things is the sum of the correct predictions divided by the sum of all the guesses.",
    "start": "2266030",
    "end": "2274610"
  },
  {
    "text": "Is a per-class notion and in our confusion matrices, it's the diagonal values divided by the column sums.",
    "start": "2274610",
    "end": "2281480"
  },
  {
    "text": "That's what I've indicated with this coloring here that we're kind of operating column-wise.",
    "start": "2281480",
    "end": "2286895"
  },
  {
    "text": "So here are the precision values for this, uh, example one that we've been dealing with.",
    "start": "2286895",
    "end": "2292850"
  },
  {
    "text": "So high neutral, low negative, and modest positive.",
    "start": "2292850",
    "end": "2297810"
  },
  {
    "text": "For our problematic all neutral classifier, precision is kind of undefined because we made zero guesses going down.",
    "start": "2298540",
    "end": "2307100"
  },
  {
    "text": "So we end up dividing by zero. The standard thing is to map those to zero but you should keep in mind that it was strictly speaking undefined and this,",
    "start": "2307100",
    "end": "2314900"
  },
  {
    "text": "this affects the bounds. If you think very carefully and mathematically, you can't quite say that the bounds are 0 to 1 without this caveat",
    "start": "2314900",
    "end": "2322310"
  },
  {
    "text": "about what you do in the case that you have an all 0s column like this.",
    "start": "2322310",
    "end": "2327330"
  },
  {
    "text": "Then we have high precision for this neutral [NOISE] category. There's that caveat there about the bounds.",
    "start": "2327880",
    "end": "2335585"
  },
  {
    "text": "What value is encoded by precision? The way I would articulate this is that i- it encodes a conservative value in that it penalizes incorrect guessing on a per-class basis.",
    "start": "2335585",
    "end": "2348030"
  },
  {
    "text": "The weaknesses of precision. Precision's dangerous edge case is that you can achieve",
    "start": "2348940",
    "end": "2355010"
  },
  {
    "text": "very high precision for a category by rarely guessing it. So consider this one here; example three,",
    "start": "2355010",
    "end": "2361820"
  },
  {
    "text": "what I did is just make a minor change where I have it predict once for each of these and it happens to be correct.",
    "start": "2361820",
    "end": "2368945"
  },
  {
    "text": "I think this is not a good classifier in some intuitive sense. But its precision is perfect for positive and negative because it just kind",
    "start": "2368945",
    "end": "2377840"
  },
  {
    "text": "of withheld judgment for all but these two cases where it could do well.",
    "start": "2377840",
    "end": "2383130"
  },
  {
    "text": "Compare that with example one where, you know, the precision was pretty low here but it's intuitively",
    "start": "2385990",
    "end": "2392990"
  },
  {
    "text": "kind of got a better grip on the positive and negative categories.",
    "start": "2392990",
    "end": "2397350"
  },
  {
    "start": "2399000",
    "end": "2421000"
  },
  {
    "text": "So the counter par- part to precision is recall. Recall is the sum of correct predictions divided by the sum of all true instances,",
    "start": "2399040",
    "end": "2408619"
  },
  {
    "text": "again per-class; and in our confusion matrices it's the diagonal divided by the row sums.",
    "start": "2408620",
    "end": "2414710"
  },
  {
    "text": "[NOISE] So here are the recall values for example one.",
    "start": "2414710",
    "end": "2421050"
  },
  {
    "start": "2421000",
    "end": "2454000"
  },
  {
    "text": "Important point about all of these metrics that are related to F scoring is that recall trades off against precision,",
    "start": "2421660",
    "end": "2428675"
  },
  {
    "text": "and that's the way in which each of them is kind of making up for the faults of the other. So here's that example three again.",
    "start": "2428675",
    "end": "2434644"
  },
  {
    "text": "Remember, we make one guess for positive, one for negative. So precision is perfect but recall is dismal for both of",
    "start": "2434645",
    "end": "2441349"
  },
  {
    "text": "those categories because in withholding its guesses for those classes, it ends up making a bunch of",
    "start": "2441350",
    "end": "2447740"
  },
  {
    "text": "recall mistakes and as a result like the F1 for this is going to be pretty bad.",
    "start": "2447740",
    "end": "2452930"
  },
  {
    "text": "[NOISE] Recall is straightforward bounds, and I would say this is a nice balance here.",
    "start": "2452930",
    "end": "2459440"
  },
  {
    "text": "So recall encodes a permissive value in penalizing only missed true cases.",
    "start": "2459440",
    "end": "2465365"
  },
  {
    "text": "Whereas precision was conservative, recall is permissive.",
    "start": "2465365",
    "end": "2470310"
  },
  {
    "start": "2471000",
    "end": "2517000"
  },
  {
    "text": "Weaknesses of recall. Its dangerous edge case is that you can achieve very high recall for a category",
    "start": "2471190",
    "end": "2476990"
  },
  {
    "text": "by always guessing it and that could mean lots of incorrect guesses. But since recall kind of intuitively,",
    "start": "2476990",
    "end": "2483200"
  },
  {
    "text": "if you think about the calculations, it sees only the correct guesses. So it doesn't really mind about this over guessing.",
    "start": "2483200",
    "end": "2489380"
  },
  {
    "text": "Um, you can see this here actually. So for the neutral category, uh,",
    "start": "2489380",
    "end": "2496760"
  },
  {
    "text": "it made a lot of guesses about neutral, um, but it missed none of them,",
    "start": "2496760",
    "end": "2501815"
  },
  {
    "text": "and so its recall is actually very high, down here it's 1. [NOISE] Yeah, just always guess a category and you're sure to have perfect recall.",
    "start": "2501815",
    "end": "2510910"
  },
  {
    "text": "That's the sum of it. But in turn your precision will be hit somewhat.",
    "start": "2510910",
    "end": "2515510"
  },
  {
    "start": "2517000",
    "end": "2693000"
  },
  {
    "text": "F scores which we've used pervasively in this course, they kind of codify this balance between precision and",
    "start": "2518950",
    "end": "2526670"
  },
  {
    "text": "recall and so the standard way of doing this is to combine precision and recall via their harmonic mean with",
    "start": "2526670",
    "end": "2534020"
  },
  {
    "text": "a value beta that can be used to emphasize precision or recall, and we've done the default thing of always balancing them equally.",
    "start": "2534020",
    "end": "2541579"
  },
  {
    "text": "And that's F1 down here, where you just pick the value 1 and it simplifies down to this expression.",
    "start": "2541580",
    "end": "2548579"
  },
  {
    "text": "But you know again you should be thoughtful about which one- whether you default to this equal balance,",
    "start": "2549130",
    "end": "2556025"
  },
  {
    "text": "uh, and one way to think about this is like, so a bunch of people in this course are working on things like hate speech and toxicity.",
    "start": "2556025",
    "end": "2562685"
  },
  {
    "text": "So just as a quick use case. Suppose you are developing a system that's going to help with interventions for that problem.",
    "start": "2562685",
    "end": "2569435"
  },
  {
    "text": "It's an open question whether you want the system to be biased in favor of precision or recall.",
    "start": "2569435",
    "end": "2575180"
  },
  {
    "text": "Um, if you have very few hum- human resources for doing manual review of your model predictions,",
    "start": "2575180",
    "end": "2581480"
  },
  {
    "text": "then you want to favor precision as you want to make really good use of those humans and have them see only things that",
    "start": "2581480",
    "end": "2587030"
  },
  {
    "text": "your model has high confidence are like toxic. But, that's going to have the tradeoff that a lot of",
    "start": "2587030",
    "end": "2594020"
  },
  {
    "text": "messages that really ought of have been filtered out of your community are going to make it in. Because what you are optimizing for there,",
    "start": "2594020",
    "end": "2601010"
  },
  {
    "text": "at a higher level it's like saving human time. Conversely, if you have a whole fleet of humans who,",
    "start": "2601010",
    "end": "2606650"
  },
  {
    "text": "who can help you with this task, then you could be biased in favor of recall if they don't mind reviewing a lot",
    "start": "2606650",
    "end": "2612680"
  },
  {
    "text": "of score- a lot of texts where actually it was fine to just let them onto the platform. It's really going to depend on what you're trying to do",
    "start": "2612680",
    "end": "2619865"
  },
  {
    "text": "but I think whatever your actual situation is, it's unlikely that precision and recall are perfectly balanced.",
    "start": "2619865",
    "end": "2626255"
  },
  {
    "text": "So I guess the only justification for us, perfectly balancing them all the time, is that we don't know what else you're trying to accomplish in the world.",
    "start": "2626255",
    "end": "2634560"
  },
  {
    "text": "So here's an example for- for our basic example, these are the F scores here.",
    "start": "2637750",
    "end": "2643205"
  },
  {
    "text": "And I think they kind of align with what we think of about how the model is doing on these tasks.",
    "start": "2643205",
    "end": "2648995"
  },
  {
    "text": "And there's for example two and and strictly speaking both for positive and negative because you had undefined precision for uh,",
    "start": "2648995",
    "end": "2656944"
  },
  {
    "text": "for positive and negative, uh the F Score is also undefined but typically that will be mapped to",
    "start": "2656945",
    "end": "2662540"
  },
  {
    "text": "0 or like for scikit that will be mapped to 0 and it'll print out a bunch of warnings for you.",
    "start": "2662540",
    "end": "2668790"
  },
  {
    "text": "And here's example three where we had such high precision for positive and negative but very low recall.",
    "start": "2669520",
    "end": "2676985"
  },
  {
    "text": "And that's nicely reflected in the fact that the F1 scores for pos and neg are also very low.",
    "start": "2676985",
    "end": "2683460"
  },
  {
    "text": "Bounds are 0 and 1, and you have a guarantee that it will be between precision and recall.",
    "start": "2684220",
    "end": "2692730"
  },
  {
    "start": "2693000",
    "end": "2735000"
  },
  {
    "text": "What's the value encoded by F Scores? Here's one way that I tried to articulate it.",
    "start": "2694840",
    "end": "2700220"
  },
  {
    "text": "So it's an attempt to summarize how well your classifiers predictions for a certain class K align with the true instances,",
    "start": "2700220",
    "end": "2708259"
  },
  {
    "text": "where what I'm trying to bring out with align is like not only giving you credit for the hits, but also detracting for the misses,",
    "start": "2708259",
    "end": "2714830"
  },
  {
    "text": "in the kind of in the case of F1 in a symmetric way. And intuitively for all these things precision and recall are",
    "start": "2714830",
    "end": "2721700"
  },
  {
    "text": "keeping each other in check somehow for these calculations. And as- and if you go through the notebook on your own,",
    "start": "2721700",
    "end": "2728869"
  },
  {
    "text": "you'll see that theme recur again and again outside in the classification context.",
    "start": "2728870",
    "end": "2734850"
  },
  {
    "start": "2735000",
    "end": "2814000"
  },
  {
    "text": "What are the weaknesses of F Scores? So there's no normalization for the size of",
    "start": "2735910",
    "end": "2741980"
  },
  {
    "text": "your data-set within the class that you're focused on or outside of it. Um, and then the other thing that you might highlight here is that for a given F score,",
    "start": "2741980",
    "end": "2753770"
  },
  {
    "text": "if you think about like focusing on pos here, pos F1 pays attention to all the row values and all the column values,",
    "start": "2753770",
    "end": "2762213"
  },
  {
    "text": "but it ignores everything that's off of those rows and columns, all the values.",
    "start": "2762214",
    "end": "2767240"
  },
  {
    "text": "And to kind of illustrate that what I did is here I have example one where down here in the corner you have  1,000.",
    "start": "2767240",
    "end": "2773630"
  },
  {
    "text": "And then for this dataset I changed that to  100,000. For pos and neg,",
    "start": "2773630",
    "end": "2779570"
  },
  {
    "text": "F1 is the same across these two data-sets. And that's worth keeping in mind because obviously these are very different problems.",
    "start": "2779570",
    "end": "2787760"
  },
  {
    "text": "These are very different datasets and the classifier is doing very different things because I made this so massive.",
    "start": "2787760",
    "end": "2794015"
  },
  {
    "text": "But, F1 was insensitive to that. Only the neutral F1 changed because of",
    "start": "2794015",
    "end": "2799970"
  },
  {
    "text": "course that value is- is on its row and its column. But keep that in mind, right?",
    "start": "2799970",
    "end": "2806225"
  },
  {
    "text": "When you do this F1 you're kind of ignoring one aspect of the data, when you think about a per class basis.",
    "start": "2806225",
    "end": "2813240"
  },
  {
    "text": "Related to F Scores, so dice similarity for binary vectors which you might remember from the first unit uh,",
    "start": "2813940",
    "end": "2821390"
  },
  {
    "start": "2814000",
    "end": "2839000"
  },
  {
    "text": "and is often used to assess kind of how well you uh, a model's predictions align on a set theoretic way,",
    "start": "2821390",
    "end": "2827285"
  },
  {
    "text": "that's equivalent to F1, especially, if you think on a kind of per token basis for a vector of predictions.",
    "start": "2827285",
    "end": "2833885"
  },
  {
    "text": "Um, and then as I said the intuition of F Scores is common.",
    "start": "2833885",
    "end": "2838800"
  },
  {
    "start": "2839000",
    "end": "2958000"
  },
  {
    "text": "Let's do just a few of these macro averaged things. So macro averaged F scores.",
    "start": "2840340",
    "end": "2846230"
  },
  {
    "text": "That's the mean of all the F scores for each category. That's the one that we've always used. Here's a quick example.",
    "start": "2846230",
    "end": "2852980"
  },
  {
    "text": "You guys know about this one. I mean basically what we're doing here is just taking all the per class F values and averaging them.",
    "start": "2852980",
    "end": "2861215"
  },
  {
    "text": "And that kinda goes here to the weaknesses. So I typically- I default to macro F1 because I like",
    "start": "2861215",
    "end": "2869450"
  },
  {
    "text": "the fact that it's giving each class no matter its size equal weight in the final calculation, and the justification for that is that in NLP",
    "start": "2869450",
    "end": "2876963"
  },
  {
    "text": "very often it's the smallest classes that we care about the most, and so it makes no sense to give more weight to",
    "start": "2876964",
    "end": "2883160"
  },
  {
    "text": "the ones that are large cause maybe they're easy and uninteresting. But you should keep in mind that in- in thinking about macro averaging,",
    "start": "2883160",
    "end": "2892835"
  },
  {
    "text": "your system's metrics might look out of step with how it actually performs in the world.",
    "start": "2892835",
    "end": "2898190"
  },
  {
    "text": "Because if I just turn it loose on real data that have the same class balance as the data-set it was developed on,",
    "start": "2898190",
    "end": "2906830"
  },
  {
    "text": "then you know the fact that it makes a lot of correct predictions is gonna be",
    "start": "2906830",
    "end": "2912050"
  },
  {
    "text": "a meaningful thing in terms of people experiencing the system. And just because it's a large class doesn't mean that it's",
    "start": "2912050",
    "end": "2917720"
  },
  {
    "text": "any less meaningful if you think about performance in the world. So in a funny way, your macro average score could end up overstating how well you",
    "start": "2917720",
    "end": "2925220"
  },
  {
    "text": "actually do because you know a tiny class that you never experience as a user with the system was contributing just as",
    "start": "2925220",
    "end": "2932690"
  },
  {
    "text": "much to the kind of example that it sees all the time in practice. So that's worth keeping in mind in terms of practical applications.",
    "start": "2932690",
    "end": "2941510"
  },
  {
    "text": "And then I think these two kind of balance each other. So you can both over and understate how well",
    "start": "2941510",
    "end": "2946820"
  },
  {
    "text": "your system is doing by doing macro averaging. But nonetheless, I think when we think about system evaluation in this context,",
    "start": "2946820",
    "end": "2954590"
  },
  {
    "text": "the macro average choice is a really good one. There are also weighted F Scores.",
    "start": "2954590",
    "end": "2961475"
  },
  {
    "start": "2958000",
    "end": "2966000"
  },
  {
    "text": "Scikit reports these which just gives a weighted average based on the class size.",
    "start": "2961475",
    "end": "2966575"
  },
  {
    "start": "2966000",
    "end": "2995000"
  },
  {
    "text": "And then there are micro-averaged scores and micro-averaged scores with just a few qualifications are exactly identical to accuracy.",
    "start": "2966575",
    "end": "2975859"
  },
  {
    "text": "And so they inherit all the problems of accuracy and that makes them a kind of disfavored option and in fact by and large.",
    "start": "2975860",
    "end": "2983690"
  },
  {
    "text": "Why not just report accuracy as- as opposed to choosing the more convoluted micro averaging approach.",
    "start": "2983690",
    "end": "2990380"
  },
  {
    "text": "But I did include it here for completeness.",
    "start": "2990380",
    "end": "2994710"
  },
  {
    "text": "And I think I'll stop there cause I wanna leave plenty of time for Atticus, and I also feel like now you're armed with a kind of framework for thinking about this.",
    "start": "2996430",
    "end": "3004600"
  },
  {
    "text": "What value does it encode, what bounds does it have, and what are its strengths and weaknesses.",
    "start": "3004600",
    "end": "3009730"
  },
  {
    "text": "It's worth asking that for any metric that you encounter and certainly if you decided to propose your own metric you'd wanna",
    "start": "3009730",
    "end": "3015640"
  },
  {
    "text": "kinda fully command that space of different considerations. Okay. Unless there are questions.",
    "start": "3015640",
    "end": "3024410"
  },
  {
    "text": "Yeah. Why are macro-averaged F1 scores better than weighed F scores?",
    "start": "3025710",
    "end": "3032480"
  },
  {
    "text": "The weighted scores will have that fact that they'll favor large classes,",
    "start": "3032580",
    "end": "3038110"
  },
  {
    "text": "just like micro-averaging would. That might be what you wanna do.",
    "start": "3038110",
    "end": "3043525"
  },
  {
    "text": "Uh, it really depends- I guess I'm encouraging you to think about what you're trying to achieve, what your system is trying to do,",
    "start": "3043525",
    "end": "3049600"
  },
  {
    "text": "and then choose a metric accordingly. And my- my justification for macro averaging is just that we often do care about those small classes.",
    "start": "3049600",
    "end": "3056980"
  },
  {
    "text": "We really wanna get traction on them. And that- that can be kind of dispiriting if you're doing really well",
    "start": "3056980",
    "end": "3064030"
  },
  {
    "text": "improving on the small classes but you chose weighted or micro F1, and you just don't see any impact on the number.",
    "start": "3064030",
    "end": "3071530"
  },
  {
    "text": "It's like I doubled the performance, I doubled my F score on this tiny class and weighted- weighted F1 says, ''I don't care.",
    "start": "3071530",
    "end": "3078895"
  },
  {
    "text": "It's too small for me to care. I go up by a little bit,'' whereas the macro one will reflect all of those gains. Yeah.",
    "start": "3078895",
    "end": "3088705"
  },
  {
    "text": "If you wanted to develop say like a conversational agent that appears human, I just basically pass the Turing test.",
    "start": "3088705",
    "end": "3095710"
  },
  {
    "text": "What type of metric would be best suited for something like that? That's so funny to think though, you know.",
    "start": "3095710",
    "end": "3103525"
  },
  {
    "text": "Turing's answer was the Turing test. And he did have some kind of accuracy calculation, right?",
    "start": "3103525",
    "end": "3109720"
  },
  {
    "text": "Wasn't it like fooling it like two out of three times or something, I forgot. Was it two out of three? And it's specifically like the game is you,",
    "start": "3109720",
    "end": "3116800"
  },
  {
    "text": "since it's a classification where there's a human and a machine, they have to call the machine the human and the human machine,",
    "start": "3116800",
    "end": "3122559"
  },
  {
    "text": "like they have to get the label swapped. So that was his metric but the lesson of the time is that",
    "start": "3122560",
    "end": "3129175"
  },
  {
    "text": "that people confuse humans for robots and the reverse all of the time.",
    "start": "3129175",
    "end": "3134215"
  },
  {
    "text": "Did we tell that story? I guess we didn't. From the first ever real Turing Test.",
    "start": "3134215",
    "end": "3139525"
  },
  {
    "text": "Um, the human who is most often rated as a machine was a Shakespeare expert.",
    "start": "3139525",
    "end": "3146184"
  },
  {
    "text": "She could answer any question about Shakespeare, and people's rationale was, ''No human could know that much about Shakespeare.''",
    "start": "3146185",
    "end": "3151510"
  },
  {
    "text": "[LAUGHTER]",
    "start": "3151510",
    "end": "3158125"
  },
  {
    "text": "All right. Let me turn it over to Atticus [NOISE] to continue these themes.",
    "start": "3158125",
    "end": "3164650"
  },
  {
    "text": "[NOISE]",
    "start": "3164650",
    "end": "3184690"
  },
  {
    "text": "Hello, I'm Atticus. I'm one of your course assistants. And I'm gonna give you a little presentation on",
    "start": "3184690",
    "end": "3190060"
  },
  {
    "text": "evaluating NLU models with harder generalization tasks. All right. So going through this,",
    "start": "3190060",
    "end": "3198730"
  },
  {
    "start": "3196000",
    "end": "3307000"
  },
  {
    "text": "I'm gonna start by just kind of overviewing the framework that Chris has been talking about which is just a standard generalization framework of arbitrarily setting",
    "start": "3198730",
    "end": "3206589"
  },
  {
    "text": "aside training examples and testing examples from a large dataset.",
    "start": "3206590",
    "end": "3212065"
  },
  {
    "text": "And then I'm going to introduce you to some adversarial testing literature where people are trying to develop",
    "start": "3212065",
    "end": "3218230"
  },
  {
    "text": "more challenging generalization tasks to probe at the capabilities of NLU models,",
    "start": "3218230",
    "end": "3224470"
  },
  {
    "text": "and then I will conclude by sharing some of my research with you. [NOISE] Cool. So this should be a framework you're very familiar with by this point.",
    "start": "3224470",
    "end": "3233440"
  },
  {
    "text": "It's what we've been doing in our homeworks and in most of our bake offs, where we find a dataset for an NLU task.",
    "start": "3233440",
    "end": "3240220"
  },
  {
    "text": "And then we just arbitrarily split this dataset into training and testing. And we trained models on the training set and evaluate on unseen testing examples.",
    "start": "3240220",
    "end": "3251050"
  },
  {
    "text": "But actually in bake-off 3, we did something a little bit different than this. So in bake-off 3,",
    "start": "3251050",
    "end": "3256690"
  },
  {
    "text": "if you remember, we did NLI on single words. We were just trying to predict an entailment relation for pairs of words.",
    "start": "3256690",
    "end": "3263755"
  },
  {
    "text": "And in our edge-disjoint case, we followed this standard framework where we arbitrarily set aside some examples for testing and some for training.",
    "start": "3263755",
    "end": "3272080"
  },
  {
    "text": "But in our word-disjoint case, we did something a little bit different, where we ensured that in training and testing,",
    "start": "3272080",
    "end": "3278980"
  },
  {
    "text": "no words would be shared between these two sets which creates a harder generalization task as it expects models to generalize to unseen vocabulary.",
    "start": "3278980",
    "end": "3288235"
  },
  {
    "text": "So kind of like the high level theme of this presentation is that I'm going to encourage you to consider breaking from the standard evaluations,",
    "start": "3288235",
    "end": "3296770"
  },
  {
    "text": "and try to create generalization tasks that are difficult, well-motivated, and that answer specific questions about model capabilities.",
    "start": "3296770",
    "end": "3305320"
  },
  {
    "text": "[NOISE] So to get introduced into the adversarial testing literature,",
    "start": "3305320",
    "end": "3311710"
  },
  {
    "start": "3307000",
    "end": "3334000"
  },
  {
    "text": "we're gonna start with the example of question answering. So consider the research question,",
    "start": "3311710",
    "end": "3316750"
  },
  {
    "text": "can a model learn to comprehend a passage of text? So this is a very high level and ambitious research question.",
    "start": "3316750",
    "end": "3323035"
  },
  {
    "text": "And people here have actually tried to answer it by creating the Stanford Question Answer Dataset,",
    "start": "3323035",
    "end": "3329529"
  },
  {
    "text": "which is an awesome resource that you might wanna use in your projects. So examples in this dataset look like this,",
    "start": "3329529",
    "end": "3335589"
  },
  {
    "start": "3334000",
    "end": "3379000"
  },
  {
    "text": "where there is a passage, a question, and an answer. The input is going to be the passage of text in the question,",
    "start": "3335590",
    "end": "3342925"
  },
  {
    "text": "and the output will be the answer. In this case, it's about a passage about football, question about a quarterback,",
    "start": "3342925",
    "end": "3349300"
  },
  {
    "text": "the answer's John Elway. So you might think to answer our research question,",
    "start": "3349300",
    "end": "3354490"
  },
  {
    "text": "can a model learn to comprehend a passage of text, that if a model achieves human level performance on this dataset,",
    "start": "3354490",
    "end": "3361554"
  },
  {
    "text": "then it is able to comprehend passages of text. So if you do think that, then you're in luck.",
    "start": "3361554",
    "end": "3367885"
  },
  {
    "text": "Plenty of models have beaten humans at this task. So, you know, we're done.",
    "start": "3367885",
    "end": "3373900"
  },
  {
    "text": "Question answering solved like everything's great and no more work to do. But unfortunately, it's not actually quite that simple.",
    "start": "3373900",
    "end": "3382494"
  },
  {
    "text": "So [NOISE] you might have a suspicion that these models don't understand language quite as deeply as you might hope they do.",
    "start": "3382495",
    "end": "3390369"
  },
  {
    "text": "And Jia et al. actually devised an experiment to see whether this is the case.",
    "start": "3390370",
    "end": "3396265"
  },
  {
    "text": "They take training examples from the SQuAD dataset, and they systematically perturbed them to create",
    "start": "3396265",
    "end": "3402430"
  },
  {
    "text": "a new adversarial test set that they then evaluate models on, uh, and using this as a new evaluation metric.",
    "start": "3402430",
    "end": "3409825"
  },
  {
    "text": "So our example before with the football. We have a model prediction of John Elway which is the correct answer.",
    "start": "3409825",
    "end": "3416994"
  },
  {
    "text": "But what they do is they append a single misleading sentence to the passage",
    "start": "3416995",
    "end": "3422185"
  },
  {
    "text": "to trick the model into thinking that Jeff Dean is the quarterback that the question is asking about,",
    "start": "3422185",
    "end": "3428559"
  },
  {
    "text": "and which is just incorrect. So [NOISE] when they generate a new adversarial test set using this technique,",
    "start": "3428560",
    "end": "3436405"
  },
  {
    "text": "they find that 16 published models trained on SQuAD dropped from a 75% test,",
    "start": "3436405",
    "end": "3443545"
  },
  {
    "text": "a 75% F1 score on the original test set, down to a 36% F1 score on this new adversarial test set.",
    "start": "3443545",
    "end": "3451735"
  },
  {
    "text": "So sad; question answering is not solved, which you might have suspected.",
    "start": "3451735",
    "end": "3458590"
  },
  {
    "text": "So a natural idea is we've identified a hole in the generalization capabilities of models trained on the SQuAD dataset.",
    "start": "3458590",
    "end": "3467170"
  },
  {
    "text": "So to patch this hole you'd say, \"Okay, let's just take these types of examples and include them in training.\"",
    "start": "3467170",
    "end": "3473319"
  },
  {
    "text": "And this does work, when we include these types of examples in training,",
    "start": "3473320",
    "end": "3479050"
  },
  {
    "text": "those models learned to ignore the final sentence, and they now- this patched model will now make the correct prediction of John Elway.",
    "start": "3479050",
    "end": "3486760"
  },
  {
    "text": "[NOISE] But these models- this new patched model trained on these types of examples is",
    "start": "3486760",
    "end": "3493150"
  },
  {
    "text": "now vulnerable to a different adversarial testing set, one where we just prepend the sentence instead of appending it.",
    "start": "3493150",
    "end": "3500170"
  },
  {
    "text": "And so now, we see that this problem seems to be deeper than just throwing in more training data,",
    "start": "3500170",
    "end": "3506875"
  },
  {
    "text": "and having the model become more robust that [NOISE] different perturbations,",
    "start": "3506875",
    "end": "3512590"
  },
  {
    "text": "being trained on one perturbation of the data, doesn't generalize to even similar perturbations like this.",
    "start": "3512590",
    "end": "3519055"
  },
  {
    "text": "And so- oh, yeah. Are you- are they algorithmically inserting this? Like did-",
    "start": "3519055",
    "end": "3524470"
  },
  {
    "text": "Yes. Or they didn't do it manually? So there- it's a process of algorithmically,",
    "start": "3524470",
    "end": "3530140"
  },
  {
    "text": "and then I think it's verified by Mechanical Turks, that it's consistent with the passage. So they have like",
    "start": "3530140",
    "end": "3536530"
  },
  {
    "text": "an algorithmic generation process for these types of sentences that are misleading, but then I believe that they have their own Mechanical Turks that go",
    "start": "3536530",
    "end": "3544750"
  },
  {
    "text": "in and verify whatever sentence they put in is going to be consistent with everything. I see.",
    "start": "3544750",
    "end": "3550105"
  },
  {
    "text": "Yeah. But they didn't do it based of the model itself, like they didn't look at the way the model was working and then insert [OVERLAPPING]",
    "start": "3550105",
    "end": "3556030"
  },
  {
    "text": "I think they did do another experiment, it's not this one. It's- I think it's in the same paper where they just add tokens arbitrarily,",
    "start": "3556030",
    "end": "3563440"
  },
  {
    "text": "don't have to be grammatical or anything just to try to make the sen- the models fail. And they get the F1 score down to 6% on that adversarial testing data.",
    "start": "3563440",
    "end": "3571494"
  },
  {
    "text": "But you also might have some like, I mean, it- I think this one's a little more convincing in that this is English,",
    "start": "3571495",
    "end": "3578305"
  },
  {
    "text": "and the other experiment that gets down to 6% is kind of like throwing at random stuff.",
    "start": "3578305",
    "end": "3584035"
  },
  {
    "text": "That's not even really going to be grammatical English. Yeah. And also something you can look at is SQuAD 2.0 tries to",
    "start": "3584035",
    "end": "3591010"
  },
  {
    "text": "address this make it a little harder by adding the option to say, \"Oh, there is no answer to the question in this passage.\"",
    "start": "3591010",
    "end": "3599110"
  },
  {
    "text": "Cool. Any more questions? Okay. So we're gonna move from question",
    "start": "3599110",
    "end": "3606190"
  },
  {
    "text": "answering to NLI where in the last couple of years. Um, [BACKGROUND] oh, sorry. Yeah, that's all right. Um-",
    "start": "3606190",
    "end": "3613645"
  },
  {
    "text": "This is, like, a big question, but, like, if you could include- I think all possible perturbations, um,",
    "start": "3613645",
    "end": "3621760"
  },
  {
    "text": "[NOISE] train on those, like, what use- would you be able to say that, like, you solved that test?",
    "start": "3621760",
    "end": "3628210"
  },
  {
    "text": "Uh, no, I, I think that's a good question. That's an actually an experiment that I was really interested when I read this paper is not pre-pending, appending,",
    "start": "3628210",
    "end": "3635800"
  },
  {
    "text": "but what if you had a training and testing data where you inserted this misleading sentence at every possible location in the paragraph?",
    "start": "3635800",
    "end": "3642250"
  },
  {
    "text": "Because then you could think that the- you know, I'm not sure if the tech models would even be able to,",
    "start": "3642250",
    "end": "3647905"
  },
  {
    "text": "like, generalize across those two things. But yeah, no, I think that's really interesting. Because- well, also it's important to remember that this is, like, one way to,",
    "start": "3647905",
    "end": "3656590"
  },
  {
    "text": "like, mess with the model, but of, like, an infinite classes [LAUGHTER] of ways to mess with this model.",
    "start": "3656590",
    "end": "3661630"
  },
  {
    "text": "So me, I, I definitely think that's like an interesting question. Cool. All right.",
    "start": "3661630",
    "end": "3668740"
  },
  {
    "text": "So moving on to NLI. [NOISE] So in the last couple of years, there have been, like,",
    "start": "3668740",
    "end": "3673870"
  },
  {
    "text": "a growing number of more difficult generalization tasks that are trying to expose the fragility of models trained on the SNLI,",
    "start": "3673870",
    "end": "3681640"
  },
  {
    "text": "and MultiNLI datas- dataset. [NOISE] So one of these experiments tries to",
    "start": "3681640",
    "end": "3687340"
  },
  {
    "text": "isolate the capability of models to perform lexical semantic reasoning. So what they do to create",
    "start": "3687340",
    "end": "3693175"
  },
  {
    "text": "adversarial testing examples is they take a premise from the SNLI dataset, they take a single word in that premise,",
    "start": "3693175",
    "end": "3699805"
  },
  {
    "text": "they exchange it for another word to generate a hypothesis sentence, and then that is the adversarial example.",
    "start": "3699805",
    "end": "3706734"
  },
  {
    "text": "So you can see, there are three examples here, and each of these examples, the label for the sentence is directly from a relationship between a pair of words.",
    "start": "3706735",
    "end": "3716350"
  },
  {
    "text": "And in this paper, they expose that models don't have quite the robust range of lexical semantic reasoning that you would hope they would,",
    "start": "3716350",
    "end": "3724840"
  },
  {
    "text": "when being trained on these massive naturalistic data sets. Yeah.",
    "start": "3724840",
    "end": "3732640"
  },
  {
    "text": "[inaudible] first one in, how do we know that some are holding a saxophone can also [inaudible] guitar, like one chance.",
    "start": "3732640",
    "end": "3739120"
  },
  {
    "text": "So that actually gets in more less about their paper and more into the nature of how SNLI was created.",
    "start": "3739120",
    "end": "3745030"
  },
  {
    "text": "So SNLI was created with image captions, deri- describing a literal scene, and what Turkers were told to do is generate a caption that must be true.",
    "start": "3745030",
    "end": "3754690"
  },
  {
    "text": "So they're given a caption of an image without that image. They're to generate an entailment relationship, they say,",
    "start": "3754690",
    "end": "3761395"
  },
  {
    "text": "they are asked to describe a sentence that must be true of this scene for a contradiction relationship,",
    "start": "3761395",
    "end": "3767334"
  },
  {
    "text": "they are asked to generate a sentence that is not true of this scene. And so, that kind of,",
    "start": "3767334",
    "end": "3773560"
  },
  {
    "text": "like, results in this more, like, fuzzy idea of contradiction, then on kind of, like, a strict logical idea of contradiction.",
    "start": "3773560",
    "end": "3781135"
  },
  {
    "text": "And so give an example, like, what makes it different from an SNLI sampling rather than,",
    "start": "3781135",
    "end": "3786565"
  },
  {
    "text": "like, what's adversarial about it? So what's adversarial about it is that- so these,",
    "start": "3786565",
    "end": "3792700"
  },
  {
    "text": "these pairs don't occur in the SNLI dataset. Only the first sentences do.",
    "start": "3792700",
    "end": "3797830"
  },
  {
    "text": "And then, they just take a single word, and they exchanged that word for something else. So this could be something that might occur in SNLI,",
    "start": "3797830",
    "end": "3804835"
  },
  {
    "text": "but I guess, that's kind of the idea around adversarial testing. Is that, like, it should be similar enough to",
    "start": "3804835",
    "end": "3810160"
  },
  {
    "text": "what we're training on that it's a justified task, but the interesting part is they fail on these.",
    "start": "3810160",
    "end": "3816325"
  },
  {
    "text": "Compared to the SNLI test set. So I guess what makes it adversarial is they're doing worse than they",
    "start": "3816325",
    "end": "3822070"
  },
  {
    "text": "are on the actual SNLI test set. So yeah. Okay. Yeah. They accidentally made it do better.",
    "start": "3822070",
    "end": "3829255"
  },
  {
    "text": "Accidentally made it do better. So yeah. So actually in this paper, they have a bunch of different- they break it down to",
    "start": "3829255",
    "end": "3835900"
  },
  {
    "text": "different classes of words they work with, they have, like, planets, like fruit, animals,",
    "start": "3835900",
    "end": "3843445"
  },
  {
    "text": "and so PyClass, some of the classes as they do very well on. And then some of the classes they seem not to be exposed to those types of words as much,",
    "start": "3843445",
    "end": "3851770"
  },
  {
    "text": "and so, you can actually see a full breakdown. So if you were to actually use, like, for example, they have, like,",
    "start": "3851770",
    "end": "3857305"
  },
  {
    "text": "one thing they do is planets. So like, replacing Venus with Pluto. And it seems S- that models trained on SNLI just are really bad at that,",
    "start": "3857305",
    "end": "3863950"
  },
  {
    "text": "I guess because it's down to like, 10% or something, but in in other classes of words that I guess are much more familiar,",
    "start": "3863950",
    "end": "3870700"
  },
  {
    "text": "they get above what they get on the test set for SNLI. So yeah.",
    "start": "3870700",
    "end": "3875980"
  },
  {
    "text": "I, I think it's a good idea to really, like, take a look at the details in these types of papers because they, like, really can expose, like,",
    "start": "3875980",
    "end": "3881965"
  },
  {
    "text": "a range of nuanced capabilities. [NOISE] So moving on from lexical semantics.",
    "start": "3881965",
    "end": "3888910"
  },
  {
    "text": "There's also experiments that try to determine whether models are capable of compositional semantics.",
    "start": "3888910",
    "end": "3894550"
  },
  {
    "text": "So here's two examples from this paper by a Nie and Wang.",
    "start": "3894550",
    "end": "3899575"
  },
  {
    "text": "So the first one, they just take the subject and the object, and they swap those two.",
    "start": "3899575",
    "end": "3905484"
  },
  {
    "text": "And so, woman is pulling a child on a sled in the snow, child's pulling a woman on a sled in the snow.",
    "start": "3905485",
    "end": "3911650"
  },
  {
    "text": "And then in this example, what they do is they take a premise sentence from SNLI,",
    "start": "3911650",
    "end": "3916809"
  },
  {
    "text": "and they take an adjective in that sentence, and just move it to a different noun. And so, we both- well,",
    "start": "3916810",
    "end": "3924030"
  },
  {
    "text": "we all understand that these sentences are not in the entailment relation because moving words matters a lot.",
    "start": "3924030",
    "end": "3930930"
  },
  {
    "text": "[NOISE] That's kind of the whole thing around compositional semantics. But what they found is by doing this,",
    "start": "3930930",
    "end": "3937800"
  },
  {
    "text": "they trick the models that are trained on SNLI, and the- they often mistake these types of examples for entailment relationships.",
    "start": "3937800",
    "end": "3946135"
  },
  {
    "text": "Because they think, uh, yellow- yellow those are similar words, entailment.",
    "start": "3946135",
    "end": "3951610"
  },
  {
    "text": "Yeah. [NOISE] And so another experiment isolates a specific compositional frame,",
    "start": "3951610",
    "end": "3957985"
  },
  {
    "text": "it's I think a little more, [NOISE] like, specific than the other ones I was talking about, where it's just, like,",
    "start": "3957985",
    "end": "3965155"
  },
  {
    "text": "the X is more Y than the Z, and so, it's just found that as models trained on SNLI just can't do these kind of examples.",
    "start": "3965155",
    "end": "3974619"
  },
  {
    "text": "And this one makes, like, a little more sense, isn't that surprising to me because it's like",
    "start": "3974620",
    "end": "3980230"
  },
  {
    "text": "a very particular compositional frame that I don't think would occur that much when with literal image captions.",
    "start": "3980230",
    "end": "3987325"
  },
  {
    "text": "So yeah. [NOISE] So yeah. So something you might be wondering is, like, if they don't learn",
    "start": "3987325",
    "end": "3993160"
  },
  {
    "text": "in lexical semantics, and they don't learn in compositional semantics, what, what are we really doing here, right?",
    "start": "3993160",
    "end": "3998875"
  },
  {
    "text": "And I guess what I would guess is what I would say is that models are learning a specific slice of lexical semantics,",
    "start": "3998875",
    "end": "4006914"
  },
  {
    "text": "and/or compositional semantics, that is kind of hand tailored to the SNLI test set which the community has been hill climbing on since its release.",
    "start": "4006914",
    "end": "4015390"
  },
  {
    "text": "And so I think this is actually an exciting thing for your guys' projects because it's kind of intimidating to try to get a new state-of-the-art score on SNLI dataset,",
    "start": "4015390",
    "end": "4025454"
  },
  {
    "text": "but for these adversarial testing data sets, no one's been hill climbing on them. So I think there's a lot more room for innovation and",
    "start": "4025455",
    "end": "4032460"
  },
  {
    "text": "improvement that you could do in your projects. [NOISE] All right. So now, I'm gonna move on from",
    "start": "4032460",
    "end": "4039180"
  },
  {
    "text": "adversarial testing onto and share a little bit of my own research. So in my own research,",
    "start": "4039180",
    "end": "4045119"
  },
  {
    "text": "I've been constructing artificial natural language inference datasets. And they have examples that look like this.",
    "start": "4045120",
    "end": "4051600"
  },
  {
    "text": "So like, every tall human does not kick any large rock contradicts no human angrily kicks some rock.",
    "start": "4051600",
    "end": "4058500"
  },
  {
    "text": "So they're like, pretty complicated and hard to parse as humans, but this is kind of how they look.",
    "start": "4058500",
    "end": "4065100"
  },
  {
    "text": "There's two quantifiers, negation, adjectives, adverbs. And my kind of original intent with this dataset was to stress test,",
    "start": "4065100",
    "end": "4074205"
  },
  {
    "text": "and align models with learning these kind of, like, logical sentences. And so, [NOISE] oh, also,",
    "start": "4074205",
    "end": "4081974"
  },
  {
    "text": "I designed a task-specific model which is I call the CompTreeNN model,",
    "start": "4081975",
    "end": "4087090"
  },
  {
    "text": "which kinda jointly composes a premise and hypothesis together by aligning all their words and then composing them together up this tree structure.",
    "start": "4087090",
    "end": "4095700"
  },
  {
    "text": "And so there's just a task specific model that should be particularly good at doing [NOISE] this kind of reasoning.",
    "start": "4095700",
    "end": "4101940"
  },
  {
    "text": "And so, the first thing I did was just do a standard evaluation on my data. Where I arbitrarily set aside some examples for testing,",
    "start": "4101940",
    "end": "4108705"
  },
  {
    "text": "and some examples for training. And as you can see from this results table, standard neural models,",
    "start": "4108705",
    "end": "4115020"
  },
  {
    "text": "and my task-specific model, all achieved very high accuracy on this standard evaluation split.",
    "start": "4115020",
    "end": "4121739"
  },
  {
    "text": "And while when I did some digging, I found that the standard neural models fail to encode the identity of verbs,",
    "start": "4121740",
    "end": "4128670"
  },
  {
    "text": "nouns, adverbs, and adjectives, which is a pretty serious flaw, and my task-specific model performs perfectly,",
    "start": "4128670",
    "end": "4135420"
  },
  {
    "text": "what I realized was that my- the standard evaluation on my dataset was far easier than I expected it to be.",
    "start": "4135420",
    "end": "4142525"
  },
  {
    "text": "The- when I thought about it more, I realized that every combination of quantifiers and negation,",
    "start": "4142525",
    "end": "4148795"
  },
  {
    "text": "and modifiers occur in my training dataset. Because I have 100 nouns, 100 verbs, 100 adjectives.",
    "start": "4148795",
    "end": "4154739"
  },
  {
    "text": "So all these complex function words are going to appear in every possible order during training.",
    "start": "4154740",
    "end": "4159855"
  },
  {
    "text": "And so a model that could do well is just one that memorizes these quantifiers and negation,",
    "start": "4159855",
    "end": "4166214"
  },
  {
    "text": "and then just assigns them labels. So what I decided to do is I wanted to construct a",
    "start": "4166215",
    "end": "4172995"
  },
  {
    "text": "more challenging training and testing split, that really, um, precisely [NOISE] asked a question about what a model is able to do.",
    "start": "4172995",
    "end": "4182230"
  },
  {
    "text": "And we're gonna just keep it very high-level on [NOISE] what a baseline model that performs natural logic reasoning is,",
    "start": "4182230",
    "end": "4190745"
  },
  {
    "text": "but I constructed a simple baseline model that does perform natural logic reasoning,",
    "start": "4190745",
    "end": "4196895"
  },
  {
    "text": "and I use this model to kind of implicitly define an idea of fairness.",
    "start": "4196895",
    "end": "4202160"
  },
  {
    "text": "So I have a simple baseline model, and I consider a training dataset to be fair, if this simple baseline can learn a perfect solution from the training data.",
    "start": "4202160",
    "end": "4210565"
  },
  {
    "text": "With the idea being that neural models, if they're able to perform the type of reasoning my baseline model is able to form,",
    "start": "4210565",
    "end": "4217830"
  },
  {
    "text": "should succeed at the same generalization tasks. And what I found was that standard neural models",
    "start": "4217830",
    "end": "4226170"
  },
  {
    "text": "fail miserably at this new more challenging generalization task, and that even my task-specific model fails to achieve perfect performance,",
    "start": "4226170",
    "end": "4234805"
  },
  {
    "text": "which was pretty interesting that even something with a hard-encoded tree structure wasn't able to solve this task.",
    "start": "4234805",
    "end": "4241540"
  },
  {
    "text": "And so, I guess the kind of narrative here is that at first, I used the standard evaluation which was interesting,",
    "start": "4241540",
    "end": "4248685"
  },
  {
    "text": "but by breaking away from that kind of standard framework, I was able to ask, like, a far more deep question about the capabilities of my models.",
    "start": "4248685",
    "end": "4257975"
  },
  {
    "text": "And so that's kind of just the high-level moral of the story is you should, like, think deeply and carefully about what you're learning from your experiments.",
    "start": "4257975",
    "end": "4265864"
  },
  {
    "text": "Because often, they're going to be far easier than you expect them to be. And you should consider breaking away from this kind of",
    "start": "4265865",
    "end": "4271970"
  },
  {
    "text": "standard evaluation of arbitrarily creating a training and test set to create more challenging generalization tasks",
    "start": "4271970",
    "end": "4279210"
  },
  {
    "text": "that answer interesting specific questions. Cool. Thank you.",
    "start": "4279210",
    "end": "4284580"
  }
]