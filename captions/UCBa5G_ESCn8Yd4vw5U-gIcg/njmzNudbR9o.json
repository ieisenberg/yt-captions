[
  {
    "text": "Oh, OK. So that was syntax semantic.",
    "start": "5080",
    "end": "12219"
  },
  {
    "text": "This is lecture number six and somatic series. The is the big region in the middle that touches the local variables.",
    "start": "12220",
    "end": "23759"
  },
  {
    "text": "All is the equivalence table. And and you get so next talking here and there from syntax routines.",
    "start": "23760",
    "end": "34230"
  },
  {
    "text": "And then I divide and part of it here into the part of a two that is doing math.",
    "start": "34230",
    "end": "41610"
  },
  {
    "text": "Well, this is all really semantics. And the math was just one big chunk of it. I'm not going to talk anymore about math in this hour except saying it's more of the same as what we're gonna be doing.",
    "start": "41610",
    "end": "52530"
  },
  {
    "text": "So the things that we're gonna be talking about now as part of this is part of text semantics. And with math, it's just similar.",
    "start": "52530",
    "end": "63060"
  },
  {
    "text": "And and there you can find it in the code where there's special data structures for math.",
    "start": "63060",
    "end": "69440"
  },
  {
    "text": "So in the dynamic memory, we not only have each list, Noel Velis notes, but we have different kinds of things called no adds NORAD,",
    "start": "69440",
    "end": "78810"
  },
  {
    "text": "that are used for the things that can occur there, like fractions and square roots.",
    "start": "78810",
    "end": "84979"
  },
  {
    "text": "Overline, binary relations and so on. New data structures for math, new and special.",
    "start": "84980",
    "end": "92790"
  },
  {
    "text": "Part of the semantic routines that set up those data structures. Print them out and and change them into the kind of data structures that the rest of knows about.",
    "start": "92790",
    "end": "103799"
  },
  {
    "text": "Big, Big Ruthenian math is called M list to each list. This converts an analyst math type list into an eight list horizontal type list.",
    "start": "103800",
    "end": "112260"
  },
  {
    "text": "And then the rest ATEC knows what to do with H lists. So those are those are somehow sort of self-contained into Worland themselves.",
    "start": "112260",
    "end": "119370"
  },
  {
    "text": "So I called it math on here, and it represents about 40 percent of the code for semantics in tech.",
    "start": "119370",
    "end": "125160"
  },
  {
    "text": "We'll talk about the other 60 percent in this hour so that you get. And then you want to look at the others. Be able to follow that the same the same way.",
    "start": "125160",
    "end": "144270"
  },
  {
    "text": "To start out the semantics, I suppose we ought to talk about the the big switch of tech.",
    "start": "144270",
    "end": "152590"
  },
  {
    "text": "This is the or the so-called chief executive, the program that takes over when tech is running.",
    "start": "152590",
    "end": "160019"
  },
  {
    "text": "You mentioned that tech consists of lots of procedures and then there's a little driver program at the end that starts the procedures going well.",
    "start": "160020",
    "end": "167680"
  },
  {
    "text": "The thing that that it starts going is called main control. And this is where where are we here?",
    "start": "167680",
    "end": "175310"
  },
  {
    "text": "The chief executive sections nine or six on page three, 18.",
    "start": "175310",
    "end": "183959"
  },
  {
    "text": "This is the hub of the web. This is where everything comes together, when I was writing Main Control,",
    "start": "183960",
    "end": "190770"
  },
  {
    "text": "I had to get a new desk to work on with the whole tech programs spread out all over the desk because I had to be picking up pick,",
    "start": "190770",
    "end": "199380"
  },
  {
    "text": "you know, remembering what all the subroutines do and all the naming conventions that I had used there.",
    "start": "199380",
    "end": "206730"
  },
  {
    "text": "And I had my finger in several places always at once. Because this is referring to the rest of the program and drive in, picks up the other things, starts going at one.",
    "start": "206730",
    "end": "218070"
  },
  {
    "text": "This part of the program also is been made a little bit more complicated to read because it's inner loop stuff.",
    "start": "218070",
    "end": "228030"
  },
  {
    "text": "When you when you're going through a paragraph and trying to set text, this is the high priority for for the money of the thing.",
    "start": "228030",
    "end": "238650"
  },
  {
    "text": "So the main control procedure consists of it has been tuned in order to to go fast on on the on the text.",
    "start": "238650",
    "end": "250620"
  },
  {
    "text": "So, man, control looks something like this big switch is says get and token and then we switch",
    "start": "250620",
    "end": "267240"
  },
  {
    "text": "is another label where we could come back to in case we didn't like the token we got. And we want to try again without getting another one. We want to use it again and some other slight disguise.",
    "start": "267240",
    "end": "277530"
  },
  {
    "text": "And here there is a bunch of little code for pause, for interrupt. You can interrupt at this point and you can also be tracing commands will print out the command that it got here.",
    "start": "277530",
    "end": "289949"
  },
  {
    "text": "So when we were running yesterday and it said, here's our I got a blank space, here's where the letter B came through.",
    "start": "289950",
    "end": "295260"
  },
  {
    "text": "That was at this point research by us, except for this diagnostic information, then it's a big case and it's case abs of mode plus Kurr command.",
    "start": "295260",
    "end": "311820"
  },
  {
    "text": "And then we have a bunch of things that will be like V mode plus plus Skipp.",
    "start": "311820",
    "end": "320430"
  },
  {
    "text": "And this would be four plus. We skipped, say, for a V skip that occurs in vertical mode and each mode plus each script might be another.",
    "start": "320430",
    "end": "331949"
  },
  {
    "text": "Another case. So here's another type of.",
    "start": "331950",
    "end": "337100"
  },
  {
    "text": "Right. Right. Split into many, many cases by adding together the current command to to something.",
    "start": "337100",
    "end": "345420"
  },
  {
    "text": "V mode has been set up an HMO. They've been set up to be spaced apart so that these will these will all give us the unique, unique division into cases.",
    "start": "345420",
    "end": "356410"
  },
  {
    "text": "Now that now I suppose there is also an M mode plus a skip.",
    "start": "356410",
    "end": "362820"
  },
  {
    "text": "Skip is allowed in that mode. And then in most of these cases, there will be a there will just be a procedure call here.",
    "start": "362820",
    "end": "372280"
  },
  {
    "text": "Like, I don't know what to even do. Glue or something won't be called that. But it will be a it'll be a procedure call here. And that's called an action procedure.",
    "start": "372280",
    "end": "381970"
  },
  {
    "text": "Then in your in your listing, there will be another module, say it'll be called declare. Action procedures needed in main module in main control.",
    "start": "381970",
    "end": "393600"
  },
  {
    "text": "And and another one of the action procedures will be procedure. Do glue. And then it'll do it'll actually do the it'll actually do the thing that that you wanted to do for these three cases.",
    "start": "393600",
    "end": "415169"
  },
  {
    "text": "The reason I separate this out is because a lot of people have to use Pascal compilers that put restrictions on how big a procedure can be.",
    "start": "415170",
    "end": "425740"
  },
  {
    "text": "And and so main control procedure. If I had all of these if I had all these semantics inside the main control procedure, it would way exceed these this limit,",
    "start": "425740",
    "end": "435360"
  },
  {
    "text": "especially on IBM machine, which wants everything to fit into a small area that they can use only to base registries for.",
    "start": "435360",
    "end": "441240"
  },
  {
    "text": "So so the main control consists mostly of this case statement and callsigns procedure.",
    "start": "441240",
    "end": "450900"
  },
  {
    "text": "The only exception is this. Cases that are really in the mainstream for the for the inner loop, something like,",
    "start": "450900",
    "end": "456720"
  },
  {
    "text": "for example, H mode, plus letter H mode, plus letter H mode, plus other char.",
    "start": "456720",
    "end": "466620"
  },
  {
    "text": "This is what you find in the middle of it, in the middle of text. And this is handled right in the main control procedure itself.",
    "start": "466620",
    "end": "480300"
  },
  {
    "text": "And the end there with the. Things that we'll look for ligatures and do those thing.",
    "start": "480300",
    "end": "488240"
  },
  {
    "text": "There are few other things like spaces between words which were considered important enough to put most of the most of their code.",
    "start": "488240",
    "end": "494810"
  },
  {
    "text": "The common code for space between words. Also in mind control procedure.",
    "start": "494810",
    "end": "500510"
  },
  {
    "text": "Now, the Kirk command is one of these command codes that Section two or one lists always command code Section two a one of the next ones.",
    "start": "500510",
    "end": "509300"
  },
  {
    "text": "And we take a look at those codes, too. We looked yesterday at the first page and two when we looked at the first sixteen cores,",
    "start": "509300",
    "end": "519620"
  },
  {
    "text": "but on page two or two, it shows the next cause and this extends way out. So we got code like char narm that's for the backslash,",
    "start": "519620",
    "end": "529390"
  },
  {
    "text": "the H.E.R Math Chinatown mark input x ray is the internal code name for show instructions and make Bachs H move.",
    "start": "529390",
    "end": "540560"
  },
  {
    "text": "All of these, all of these are command codes for different things tech has to do all the way.",
    "start": "540560",
    "end": "546080"
  },
  {
    "text": "Go to the next page. Now the next page, by the way, can we have the houselights on a little more so that people can read people that better?",
    "start": "546080",
    "end": "557370"
  },
  {
    "text": "OK. Can you see it enough in the first row? Because you get some light from this guy. OK. Thanks.",
    "start": "557370",
    "end": "564500"
  },
  {
    "text": "Now the codes above Max non prefixed command, which is which changes from day to day as tech gets larger or smaller, but it's now equal to sixty nine.",
    "start": "564500",
    "end": "581690"
  },
  {
    "text": "These codes up to 70 and hot and up to ninety one. Here are all, are all things that somebody might want to say is global or so I'm maybe older or deaf or something.",
    "start": "581690",
    "end": "595160"
  },
  {
    "text": "But you have these commands that will take a prefix and they're independent of the mode.",
    "start": "595160",
    "end": "600199"
  },
  {
    "text": "If you really had to cut down main control further and and you had too many cases to handle.",
    "start": "600200",
    "end": "608420"
  },
  {
    "text": "You could rewrite it so that wristwatch would check. If Kurr Command is bigger than Max non prefixed command, then then do a prefixed command.",
    "start": "608420",
    "end": "620180"
  },
  {
    "text": "Else to do a case statement like this and you could read then you could cut down the definition of H mode H motors.",
    "start": "620180",
    "end": "626899"
  },
  {
    "text": "Now I think ninety one you can cut it down to 70. So that nice. So that these branches because because all the, all these codes, 70 up to ninety one are really done.",
    "start": "626900",
    "end": "637160"
  },
  {
    "text": "You do the same thing for them, independent of the mode. And all of them really just call the one procedure called prefixed command.",
    "start": "637160",
    "end": "645259"
  },
  {
    "text": "So I didn't do that now because why should I add something to the inner loop?",
    "start": "645260",
    "end": "651260"
  },
  {
    "text": "If I use some code to make it, if test in the inner loop, if I it's not necessary. But you could cut down the size of main control by three times 20 cases in that case statement since they",
    "start": "651260",
    "end": "661370"
  },
  {
    "text": "all go to the same place and they're all consecutive three consecutive regions of the of the cases do that.",
    "start": "661370",
    "end": "670550"
  },
  {
    "text": "Now the codes above Max Command are the ones that get NC token will will wipe out undefined control sequence,",
    "start": "670550",
    "end": "679550"
  },
  {
    "text": "will not get through will marks, top mark, bottom mark or call. Long call after call. Long recall these last won't even occur through the scanner.",
    "start": "679550",
    "end": "689930"
  },
  {
    "text": "These appear in IQ test IQ table, but they're only used to tell for it for purposes of of when we are updating",
    "start": "689930",
    "end": "699050"
  },
  {
    "text": "the data structure to tell whether we need to update reference counts or not. So.",
    "start": "699050",
    "end": "704180"
  },
  {
    "text": "So these last things don't have to do with coming through get next at all. But these six here are taken care of by get NC token.",
    "start": "704180",
    "end": "713720"
  },
  {
    "text": "So that's what the Kirk command will be one of these codes. Now suppose you wanted that, you wanted to figure out how tech does a certain a certain thing.",
    "start": "713720",
    "end": "722600"
  },
  {
    "text": "Like, let's try to figure out. Suppose you didn't happen to know that x ray was the internal code of shoebox, but you wanted to see what how the heck this tech to a shoebox.",
    "start": "722600",
    "end": "732690"
  },
  {
    "text": "Okay, well, the answer is you look in the index under shoebox,",
    "start": "732690",
    "end": "738170"
  },
  {
    "text": "primitive and for every primitive of tech are two hundred and forty two or three of these.",
    "start": "738170",
    "end": "743570"
  },
  {
    "text": "They're listed in the same kind of a fashion like shoebox. Primitive here is on page 430. And it's alphabetized under S.H., not under backslash.",
    "start": "743570",
    "end": "757370"
  },
  {
    "text": "There are three or four primitives that are only one character long and those are indexed under a single character primitives right here on the same page.",
    "start": "757370",
    "end": "764270"
  },
  {
    "text": "Fortunately, a shoebox. There are four of them. And but otherwise, the primitives have are made out of letters in there.",
    "start": "764270",
    "end": "771980"
  },
  {
    "text": "And so we don't refer you to where we're the primitive was actually loaded into the hash table.",
    "start": "771980",
    "end": "779550"
  },
  {
    "text": "Very primitive is put into text. Hash table by the Initech program.",
    "start": "779550",
    "end": "785350"
  },
  {
    "text": "And this particular one was done in module eleven fifty nine. So if we turn to eleven fifty nine, we will see.",
    "start": "785350",
    "end": "795960"
  },
  {
    "text": "Of course, now we're we're we're paging around in this code without looking at the environment too much.",
    "start": "795960",
    "end": "803380"
  },
  {
    "text": "But here we'll see a call on primitive procedure shoebox.",
    "start": "803380",
    "end": "810310"
  },
  {
    "text": "Now this, this procedure primitive is what's used to enter all the primitive. So I call it 242 times and there's a module to 18 says put each of text primitives into the hash table.",
    "start": "810310",
    "end": "822520"
  },
  {
    "text": "And this is one of the one of the things that belongs with that module. Because of the plus here. And so always.",
    "start": "822520",
    "end": "830710"
  },
  {
    "text": "And that model, too, I would refer you to all the calls on Primitive if you really wanted a list of all appearances.",
    "start": "830710",
    "end": "837790"
  },
  {
    "text": "Now, shoebox then is put in with. And then here's the command and the church modified the command code for show boxes x",
    "start": "837790",
    "end": "847149"
  },
  {
    "text": "ray and the character model for the shoebox code so that if somebody writes shoebox,",
    "start": "847150",
    "end": "855010"
  },
  {
    "text": "what comes through text scanner is Kirkman will be x ray and Kirchherr will be shoebox code,",
    "start": "855010",
    "end": "862420"
  },
  {
    "text": "which we've defined here to be one right after putting something in primitive.",
    "start": "862420",
    "end": "868870"
  },
  {
    "text": "I also have a have a case of the print command and char procedure.",
    "start": "868870",
    "end": "874500"
  },
  {
    "text": "There is a procedure that we have to use when we're tracing commands. That's going to that's gonna be used in research here to print the thing out in symbolic form.",
    "start": "874500",
    "end": "883149"
  },
  {
    "text": "It's not going to say you're doing command number twelve, churchyards one, it's gonna want to say shoebox.",
    "start": "883150",
    "end": "888910"
  },
  {
    "text": "And so in so x ray inside of that procedure is going to just it's gonna look at the code and it's going in.",
    "start": "888910",
    "end": "898290"
  },
  {
    "text": "It's going to find shoebox code. There's a little print shoebox with an escape kerick in front of it. So then then you'll you'll see what what came through in this print command.",
    "start": "898290",
    "end": "909129"
  },
  {
    "text": "And sure, procedure is supposed to be robust. It's supposed to be able to handle cases that can't ever really be there.",
    "start": "909130",
    "end": "915040"
  },
  {
    "text": "There's no way for a tech user to to put to get command x ray associated with any code other than these here tech.",
    "start": "915040",
    "end": "922839"
  },
  {
    "text": "You can never enter the something in the hash table whose command is x ray.",
    "start": "922840",
    "end": "930280"
  },
  {
    "text": "Only the primitive procedure is allowed to do this by anything. But you guys could do this by changing the web listing, doing something you know,",
    "start": "930280",
    "end": "937570"
  },
  {
    "text": "you could you can get anything into into that KUTV, especially if you make a mistake. So. So this print command and server procedure has to never give an error message specifically, but calling error,",
    "start": "937570",
    "end": "950410"
  },
  {
    "text": "it actually can be used inside of other routines, which we wouldn't want to do to lead to an error message.",
    "start": "950410",
    "end": "956500"
  },
  {
    "text": "But they has to do something in all cases. Well, it's just going to say show in all those other cases, sometimes if I think there's really a chance that somebody would have would want to know that it was a bad one,",
    "start": "956500",
    "end": "966009"
  },
  {
    "text": "I would have I would have rewritten this if I felt really needed and I would have shortcode",
    "start": "966010",
    "end": "973480"
  },
  {
    "text": "printing show and the other cases would say unknown x ray or something like that.",
    "start": "973480",
    "end": "979120"
  },
  {
    "text": "But I want to make sure that that, you know, that this that the procedure does always have a do something and every case that doesn't that doesn't abort your job.",
    "start": "979120",
    "end": "994150"
  },
  {
    "text": "So then shoebox comes through as x ray. Well, what about now?",
    "start": "994150",
    "end": "1001830"
  },
  {
    "text": "How does that get acted on? Well, it's we could now find that by looking in the index under x ray to see where there were x ray is used.",
    "start": "1001830",
    "end": "1010530"
  },
  {
    "text": "But that would refer us right back to the previous page. So save us to save time. We look here and we see cases of main control that don't depend on mode.",
    "start": "1010530",
    "end": "1019440"
  },
  {
    "text": "One of them is going to be any mode x ray and it's gonna call a procedure called show whatever. So sure, whatever is when these action procedures, I'm talking about it and in most of the semantics are done by action procedures like that.",
    "start": "1019440",
    "end": "1031829"
  },
  {
    "text": "And here it is in the next page there on module one 11 61,",
    "start": "1031830",
    "end": "1037519"
  },
  {
    "text": "the class action procedures for use four main control or one of the things is procedures show whatever. And this is it looks at the curvature. And if it's shoebox code, then it gets us to module eleven 64.",
    "start": "1037520",
    "end": "1050170"
  },
  {
    "text": "So the current contents of a box. OK, well, turn a page seven.",
    "start": "1050170",
    "end": "1056460"
  },
  {
    "text": "Sure. The core contents of a box scan eight bit integer. That's a special routine that calls scan integer and makes.",
    "start": "1056460",
    "end": "1065880"
  },
  {
    "text": "And if it's not between zero and 255, it gives you an error message saying that it should have been between zero to five.",
    "start": "1065880",
    "end": "1073860"
  },
  {
    "text": "And that is changing it to zero on you. Then we print a new line and this greater than sign and var.",
    "start": "1073860",
    "end": "1082320"
  },
  {
    "text": "And we print integer curve. Now scan Apiata, injure, reduce puts its answer in curve.",
    "start": "1082320",
    "end": "1091080"
  },
  {
    "text": "That's one of the reasons I wanted to use a global for this, because almost because all the time I'm scanning something and I'm going to have to have a new local every time for the done thing.",
    "start": "1091080",
    "end": "1100179"
  },
  {
    "text": "And then actually specifically assign it. But I've got to be careful cause that I don't doesn't get wiped out by something else.",
    "start": "1100180",
    "end": "1109930"
  },
  {
    "text": "In the meantime, and that's the danger. The well-known dangers of global variables are that somebody else, if everybody uses Caravel, like if Pritt new line will use Kervella.",
    "start": "1109930",
    "end": "1119929"
  },
  {
    "text": "I'd certainly be in trouble. So you do this only when you know that your use of the thing is going to be near the",
    "start": "1119930",
    "end": "1125770"
  },
  {
    "text": "near the time it was actually started and global variable or otherwise in trouble. And then also I couldn't do this.",
    "start": "1125770",
    "end": "1131560"
  },
  {
    "text": "Well, if I if I made main control recursive so that people would incorporate a whole tech job inside of another one.",
    "start": "1131560",
    "end": "1138820"
  },
  {
    "text": "Then I would have to have curb Elby local to main control.",
    "start": "1138820",
    "end": "1144639"
  },
  {
    "text": "All right. Now print Charr equals sign. So box whatever is going to be equal to. And then we have two cases, but it's not as it refers to box of Kernville.",
    "start": "1144640",
    "end": "1158110"
  },
  {
    "text": "This is a macro that that refers to a position in EQR TV.",
    "start": "1158110",
    "end": "1165250"
  },
  {
    "text": "The current value of of that box and its pointer to the box.",
    "start": "1165250",
    "end": "1171040"
  },
  {
    "text": "It's either an H list note or else notice the box is there. What if it's no. That means that the box there's no box there. And TEC calls that absent.",
    "start": "1171040",
    "end": "1181030"
  },
  {
    "text": "Otherwise we use the shoebox routine and displays all these boxes out in various lines using the",
    "start": "1181030",
    "end": "1187930"
  },
  {
    "text": "shoebox depth and shoebox breadth parameters to pull off and explain how much is actually being shown.",
    "start": "1187930",
    "end": "1194980"
  },
  {
    "text": "Then we give an error. Then we give an error message. OK. That's not really an error in the help message that goes with that was described in the previous page.",
    "start": "1194980",
    "end": "1202030"
  },
  {
    "text": "There it says, we saw it yesterday. This isn't an error message. I'm just showing something. That's the whole thing. That's the semantics for sure. Box. And it's typical of a simple case of semantics.",
    "start": "1202030",
    "end": "1213240"
  },
  {
    "text": "And there are a ninety one times three branches to this thing.",
    "start": "1213240",
    "end": "1218290"
  },
  {
    "text": "So about two hundred seventy three cases. You switch into. From the three switch procedure. And one by one you check those off.",
    "start": "1218290",
    "end": "1228070"
  },
  {
    "text": "And make sure that that take is doing the right thing. Now you want to add something to tag the extensions usually come through a single place.",
    "start": "1228070",
    "end": "1244840"
  },
  {
    "text": "Let me see if I can find the extensions to. We talk about that. A second module to twelve or nine. Right near the end is where extensions are discussed.",
    "start": "1244840",
    "end": "1257580"
  },
  {
    "text": "And and it's worth reading that just to get a feeling for what you have to do.",
    "start": "1257580",
    "end": "1266260"
  },
  {
    "text": "I suppose you had a new feature to text. How many different parts of tech would actually be changed to to accommodate that feature?",
    "start": "1266260",
    "end": "1273820"
  },
  {
    "text": "Well, you've got to put a new primitive in the hash table. You've got to maybe put a new kind of what's it node type into your data structure.",
    "start": "1273820",
    "end": "1287020"
  },
  {
    "text": "I see Lyle sitting here in the front row. He's putting the feature at Xerox that prints in color.",
    "start": "1287020",
    "end": "1293860"
  },
  {
    "text": "So he knows what goes on in these things. But there's various places where you have to wear where tech would actually get extended.",
    "start": "1293860",
    "end": "1302170"
  },
  {
    "text": "And we end tried to make most of those all the possible to put him into this one place extensions",
    "start": "1302170",
    "end": "1309430"
  },
  {
    "text": "and provide hooks into the main program that so that you don't have to affect the rest of it.",
    "start": "1309430",
    "end": "1319000"
  },
  {
    "text": "I got a beep from something warning five minutes to automatic log out.",
    "start": "1319000",
    "end": "1327630"
  },
  {
    "text": "Yeah, I don't know if I'll use the computer, but I wanted to be logged in just in case.",
    "start": "1327630",
    "end": "1334320"
  },
  {
    "text": "Excuse me. So. So these hooks are shown in the intersections.",
    "start": "1334320",
    "end": "1340179"
  },
  {
    "text": "They're following twelve or nine and most of the case that we won't have to we won't have to add a new command code if we're lucky.",
    "start": "1340180",
    "end": "1348940"
  },
  {
    "text": "We won't have to add anything to the main control because of what's there, because there's one from the command codes.",
    "start": "1348940",
    "end": "1355960"
  },
  {
    "text": "It's called extension, and it just has a church part that says what kind of extension you have.",
    "start": "1355960",
    "end": "1360970"
  },
  {
    "text": "So if possible, when you make an extension to tech use extension as your command code and just give another",
    "start": "1360970",
    "end": "1367419"
  },
  {
    "text": "church field and then the action procedure that you get is nothing you see right there.",
    "start": "1367420",
    "end": "1373840"
  },
  {
    "text": "Twelve, sixteen. Magic. Twelve, sixteen. Is there any mode extension.",
    "start": "1373840",
    "end": "1380200"
  },
  {
    "text": "Do extension and. Calls the action procedure in COP 17 two extension, which Jaspreet is a case statement that implements the different extensions and gives confusion if it's an extension it doesn't know about.",
    "start": "1380200",
    "end": "1391890"
  },
  {
    "text": "Confusion is the. Is an interesting error message.",
    "start": "1391890",
    "end": "1397260"
  },
  {
    "text": "It's a it. This is where tech types out. This can't happen. But actually, it doesn't type of this can't happen all the time.",
    "start": "1397260",
    "end": "1408330"
  },
  {
    "text": "It's remembered whether there's been an error. At least one error before. And this is the first error that tech has seen.",
    "start": "1408330",
    "end": "1414690"
  },
  {
    "text": "Then it says this can't happen. But if something but if the user has really screwed up before, it says something else.",
    "start": "1414690",
    "end": "1424200"
  },
  {
    "text": "Let's take a look at confusion just to see what. So you get the idea what that is, because confusion is used to first, internal consistency, checks in tech.",
    "start": "1424200",
    "end": "1433380"
  },
  {
    "text": "Confusion is defying in. You guys are fast, right? Ninety. OK. Module number 90.",
    "start": "1433380",
    "end": "1442680"
  },
  {
    "text": "Page 32 of confusion. And so there is a built in global boolean variable called spotless.",
    "start": "1442680",
    "end": "1448800"
  },
  {
    "text": "And that is set ordinarily to true until you've got your first there. So if it's spotless, it says this can't happen. Then it gives the indication of what can happen.",
    "start": "1448800",
    "end": "1459540"
  },
  {
    "text": "It would say X T1 in that case. And then it gives a health message there.",
    "start": "1459540",
    "end": "1467160"
  },
  {
    "text": "Then that health message, by the way, will show up on your on on on your file.",
    "start": "1467160",
    "end": "1476820"
  },
  {
    "text": "Let's see. Wait a minute. Because this is a common procedure.",
    "start": "1476820",
    "end": "1482190"
  },
  {
    "text": "This second procedure is guaranteed to cause a fatal error.",
    "start": "1482190",
    "end": "1487649"
  },
  {
    "text": "This is where it dies. But on the other case, it says, I can't go on meeting you like this. And then. And then. So you stop by the different health message.",
    "start": "1487650",
    "end": "1497340"
  },
  {
    "text": "OK. So. So that's what confusion prints. Now back to extensions.",
    "start": "1497340",
    "end": "1505980"
  },
  {
    "text": "I'm glad as some of you are. Chuckling You know, I work on this a little bit now.",
    "start": "1505980",
    "end": "1513610"
  },
  {
    "text": "So the extensions occurring on the hooks are indicated.",
    "start": "1513610",
    "end": "1523500"
  },
  {
    "text": "Let's see. In like patient module 12, 25.",
    "start": "1523500",
    "end": "1531900"
  },
  {
    "text": "Page 400. You'll see the then I've made a what's it node have four subtypes for the four things that I'm treating as extensions in tech.",
    "start": "1531900",
    "end": "1544010"
  },
  {
    "text": "I'm considering oh open send clothes and X and as if they were extensions to provide a example paradigms of what, what you do for extensions.",
    "start": "1544010",
    "end": "1554580"
  },
  {
    "text": "And so twelve, twenty five says in the case subtype gives for cases otherwise.",
    "start": "1554580",
    "end": "1560640"
  },
  {
    "text": "Now this is for displaying a what's it. So we all we don't give an error message. So if we don't know what it is, we just print out what's it some say confusion in that case.",
    "start": "1560640",
    "end": "1571140"
  },
  {
    "text": "But if we're copying a node for copying or watch it notice one of the things we have to do. So magic twelve twenty six is a is a something that belongs in section two hundred and.",
    "start": "1571140",
    "end": "1586740"
  },
  {
    "text": "And all of these hooks from the rest of the program have been filled in here in the extensions section.",
    "start": "1586740",
    "end": "1594090"
  },
  {
    "text": "And you can get. You have you certainly have to provide confusion message there. If you're trying to copy what's it node. You don't know how many words to copy.",
    "start": "1594090",
    "end": "1601410"
  },
  {
    "text": "So you're in trouble. What's it? Nodes are not of a given unknown size. Open node size is bigger than a send node size in this particular example and a closed node size.",
    "start": "1601410",
    "end": "1610550"
  },
  {
    "text": "This is two words with turns out to be equal to the standard size. But it's a coincidence. There's a place where you have to return recycling nodes of the data structure that's used in Section one.",
    "start": "1610550",
    "end": "1624840"
  },
  {
    "text": "Ninety six to twelve. Twenty seven is the code for wipe out or what's it node and go to done and so that.",
    "start": "1624840",
    "end": "1631630"
  },
  {
    "text": "So you have to if you extend tech in introducing a new kind of what's it, then you must also be able to create print out and, and free those nodes.",
    "start": "1631630",
    "end": "1644550"
  },
  {
    "text": "And that's what these last three sections were about. Then there's a bunch of of simple things that didn't affect tech at all.",
    "start": "1644550",
    "end": "1652800"
  },
  {
    "text": "In the case of send open and closed. But they might otherwise. So we still have the hooks. So throw 28 or 29 or 30. Twelve, thirty one.",
    "start": "1652800",
    "end": "1661980"
  },
  {
    "text": "All of these. Let's see. I think it would be good for the videotape people to show this,",
    "start": "1661980",
    "end": "1668730"
  },
  {
    "text": "to show my finger pointing, even though the people in the audience can't see my thing too. So on the these cases, the modules are trivial like it says incorporate or what's it not.",
    "start": "1668730",
    "end": "1681140"
  },
  {
    "text": "Box and the code for that is do nothing, do nothing, if that's a macro in Web that expands into nothing.",
    "start": "1681140",
    "end": "1690200"
  },
  {
    "text": "It's an empty statement. Let dbe the width of what's it. No, P d is set to zero. That's it.",
    "start": "1690200",
    "end": "1697520"
  },
  {
    "text": "So all of these are trivial things. But you have to if you add it, what's it where you want to do something,",
    "start": "1697520",
    "end": "1703740"
  },
  {
    "text": "then you'd have to check on the IT nodes type and see that you were doing the right thing.",
    "start": "1703740",
    "end": "1708800"
  },
  {
    "text": "OK. So this gives an idea as to what parts of tech would be affected if you add something new to the language.",
    "start": "1708800",
    "end": "1719730"
  },
  {
    "text": "Whenever you add something new to tech, you realize that you're making it impossible for your programs to run at somebody else's installation.",
    "start": "1719730",
    "end": "1727080"
  },
  {
    "text": "And you have to know, I would strongly recommend that everybody keep a a vanilla version of tech around for those people who want to write programs for other users.",
    "start": "1727080",
    "end": "1740440"
  },
  {
    "text": "That's not let it grow to the point where where we can't share, where we can't share anymore.",
    "start": "1740440",
    "end": "1748059"
  },
  {
    "text": "A lot of effort has been put into this program to make it possible to be used and in thousands of computer centers around the world.",
    "start": "1748060",
    "end": "1759330"
  },
  {
    "text": "And we can we can do that if we keep our extensions in control so that we that you'll",
    "start": "1759330",
    "end": "1768029"
  },
  {
    "text": "also be able to have a change file that doesn't include all of your extension. If somebody says, I want to write something that I know is going to work at somebody else's machine, then you should you should have one.",
    "start": "1768030",
    "end": "1778140"
  },
  {
    "text": "There you have you should have a version of text that that does a form. OK. Now, I'd like to follow one more thing through the semantics to finish out so we can get an idea of the rest of the semantics.",
    "start": "1778140",
    "end": "1790320"
  },
  {
    "text": "And so let's try this. Anybody has a better source example. I thought I'd try a filing through the H box to something and then just make the list rather trivial.",
    "start": "1790320",
    "end": "1805100"
  },
  {
    "text": "Well, let's let's let's make a small H box and see what what it does.",
    "start": "1805100",
    "end": "1812160"
  },
  {
    "text": "So suppose I want to say H box to 100 points of the letter A.",
    "start": "1812160",
    "end": "1828040"
  },
  {
    "text": "OK. That shouldn't be a hard thing, but it will actually take us a little adventure through a lot of different parts of tech.",
    "start": "1828040",
    "end": "1837240"
  },
  {
    "text": "OK. Now the first place we we have to well let's think about what what we imagine would be going on after you have the you c h box.",
    "start": "1837240",
    "end": "1850170"
  },
  {
    "text": "Tech has to look ahead and see if if you specify something like two hundred point or expand by a hundred points or just if it's just each box with nothing after it.",
    "start": "1850170",
    "end": "1861960"
  },
  {
    "text": "There are two cases of each box that you can see. The one is where you give a particular size.",
    "start": "1861960",
    "end": "1869460"
  },
  {
    "text": "And then the glue will have to be set so that you reach that size somehow. We don't have any glue in here. Too bad we are put in space after that and allow.",
    "start": "1869460",
    "end": "1881820"
  },
  {
    "text": "Well, if there was no glue. Are we. If we weren't, we might. We'll see what happens if there is no glue in the box. OK. Anyway, one cases that we specify a final size, 100 points.",
    "start": "1881820",
    "end": "1894420"
  },
  {
    "text": "Exactly. The other case is that we expand by a given amount where this could be expand one hundred",
    "start": "1894420",
    "end": "1900540"
  },
  {
    "text": "points and that would say take a natural size and make it a hundred points more. The special time when you write H box left Bres.",
    "start": "1900540",
    "end": "1908730"
  },
  {
    "text": "That's expand by zero point. So you have these kinds of things that can occur and specify the specification of what kind of an H box.",
    "start": "1908730",
    "end": "1920360"
  },
  {
    "text": "We have these two cases, the expanding and the exact and exactly then each box that can be used in different context,",
    "start": "1920360",
    "end": "1931270"
  },
  {
    "text": "that can be preceded by a lot of different things. For example, it could have been preceded by law lower two points.",
    "start": "1931270",
    "end": "1939660"
  },
  {
    "text": "And that means from know move it down to if it's in an H list. I could have been preceded by ship out, which says how?",
    "start": "1939660",
    "end": "1949680"
  },
  {
    "text": "Because we it could have been preceded by leaders,",
    "start": "1949680",
    "end": "1955080"
  },
  {
    "text": "which says this box is going to represent the replicating part in leaders and gonna be that's going to be followed by glue,",
    "start": "1955080",
    "end": "1963610"
  },
  {
    "text": "whether there's various contexts by which this in which this H box could have appeared.",
    "start": "1963610",
    "end": "1971220"
  },
  {
    "text": "And we want to we have to somehow remember then as we're as we're building up the H box,",
    "start": "1971220",
    "end": "1977370"
  },
  {
    "text": "we don't have to remember what we're going to do with it after we're finished. With the box. So where does take remember that?",
    "start": "1977370",
    "end": "1985650"
  },
  {
    "text": "Well, the answer is on the safe stack.",
    "start": "1985650",
    "end": "1992460"
  },
  {
    "text": "We also remember stuff like that. Yesterday, I told you that the safe stack was used for saving and restoring equivalence.",
    "start": "1992460",
    "end": "1999899"
  },
  {
    "text": "And then it had this kind of we put fix up instructions on the safe stack and we had boundary words on the safe stack, too.",
    "start": "1999900",
    "end": "2008030"
  },
  {
    "text": "Well, just, just after those boundry words, before Loubani words, whatever you want to call it, there is room.",
    "start": "2008030",
    "end": "2018960"
  },
  {
    "text": "It's a nice place to put stuff before you get to the to the fix ups afterwards, because if you're going to come back to this Volney word, it's going to be at a time when you know what kind of a boundary where it was.",
    "start": "2018960",
    "end": "2030260"
  },
  {
    "text": "So in the boundary word includes a code that tells you what kind of a group you're in.",
    "start": "2030260",
    "end": "2036350"
  },
  {
    "text": "And in this case will be an each box group. When we finish in each box group, we'll be ready to read some stuff off of the top of this offer, the off of the safe stack.",
    "start": "2036350",
    "end": "2045650"
  },
  {
    "text": "That will tell us that this H box was being lowered perhaps by something or maybe it was being put into leaders.",
    "start": "2045650",
    "end": "2053000"
  },
  {
    "text": "Maybe it was there was a set box. One hundred equals this in front of it. All that information will be encoded on the safe stack at the end.",
    "start": "2053000",
    "end": "2062970"
  },
  {
    "text": "And at the end. And so the safe stack contains below its boundary words, contains mysterious other information.",
    "start": "2062970",
    "end": "2069619"
  },
  {
    "text": "And then and then fix ups occurring.",
    "start": "2069620",
    "end": "2076540"
  },
  {
    "text": "Now, there's a bit of a factoring problem involved here somehow. I mentioned there are different things that can come in front of it, like law leaders.",
    "start": "2076540",
    "end": "2084129"
  },
  {
    "text": "I didn't mention setbacks, but that's another one. It's called save in the present tech. But Setbacks in Tech 82. And you might have said global setbacks, which.",
    "start": "2084130",
    "end": "2097990"
  },
  {
    "text": "Which is different from just from a local sandbox and a few other things can precede can precede this.",
    "start": "2097990",
    "end": "2107080"
  },
  {
    "text": "And then all of these operations can take any box. So these operations could also could could apply to each parts, to a V box, to a V talk.",
    "start": "2107080",
    "end": "2116619"
  },
  {
    "text": "And a few other V split. There are a few other cases that that make into a box.",
    "start": "2116620",
    "end": "2122820"
  },
  {
    "text": "And so. So you have two things that are that multiply together all the possibilities for how to use a box.",
    "start": "2122820",
    "end": "2131140"
  },
  {
    "text": "The possibilities for how to make a box. And so so Tech wants to represent all these combinations.",
    "start": "2131140",
    "end": "2138589"
  },
  {
    "text": "So. So first. So these these uses of a box put something on the safe stack, corresponding the use of the box.",
    "start": "2138590",
    "end": "2146020"
  },
  {
    "text": "And then and then they they and then all the different ways to make a box, put something on the safe stack,",
    "start": "2146020",
    "end": "2152430"
  },
  {
    "text": "seeing what kind of box they're making and everything is finally ingloriously put together at the end.",
    "start": "2152430",
    "end": "2158410"
  },
  {
    "text": "Now let's take a look at that. That's the general problem that had to be solved. When we look at the specific case, we want to keep a little aware of of of the environment of that case.",
    "start": "2158410",
    "end": "2169550"
  },
  {
    "text": "I'll see if I can find out where each box is done.",
    "start": "2169550",
    "end": "2176150"
  },
  {
    "text": "Let's see. Building boxes and lists is this part. Forty six. That starts on page 326 and module nine 32.",
    "start": "2176150",
    "end": "2186670"
  },
  {
    "text": "And it starts getting into boxes.",
    "start": "2186670",
    "end": "2193059"
  },
  {
    "text": "Let's see, like module nine. Thirty nine tells how it's going to represent the context of the box and the context of the box in the simple",
    "start": "2193060",
    "end": "2205840"
  },
  {
    "text": "case that we just have in each box in the middle of some other list with nothing else in front of it. The context is gonna be like lower by zero because we're just going to it's going to be treated as",
    "start": "2205840",
    "end": "2215800"
  },
  {
    "text": "a special case of lowering or raising or moving left to right where the amount of shifting is zero.",
    "start": "2215800",
    "end": "2222160"
  },
  {
    "text": "So the context code for that is going to turn out to be zero, but there will be a context code placed on the safe stack.",
    "start": "2222160",
    "end": "2231430"
  },
  {
    "text": "So when we when we scan each box, it's going to come through.",
    "start": "2231430",
    "end": "2236589"
  },
  {
    "text": "The command code for that is make box. And all of these different contexts are going to insist that make box command is the next one.",
    "start": "2236590",
    "end": "2244270"
  },
  {
    "text": "Otherwise there will be an error message saying I expected a box specification here or something like that.",
    "start": "2244270",
    "end": "2253090"
  },
  {
    "text": "And the that the any mode make box comes through on module nine fifty one.",
    "start": "2253090",
    "end": "2263680"
  },
  {
    "text": "And so so a module 951, the last two lines of that anymore would make box saves zero is set to zero begin box.",
    "start": "2263680",
    "end": "2274190"
  },
  {
    "text": "Now Save Zero is an abbreviation for save stack of save pointer plus zero and saved one.",
    "start": "2274190",
    "end": "2293460"
  },
  {
    "text": "The same thing for sticking in a one here. So this means it goes at the top of the same stack.",
    "start": "2293460",
    "end": "2298910"
  },
  {
    "text": "Save player minus one is where the the information that's really at the top of the stack goes and zero.",
    "start": "2298910",
    "end": "2306710"
  },
  {
    "text": "This, this is the first place that's available on that stack.",
    "start": "2306710",
    "end": "2312099"
  },
  {
    "text": "If you looked at the code for safe stack or it's made sure there's always, always five or six places available before it checks again to see whether it's run out of safes,",
    "start": "2312100",
    "end": "2321730"
  },
  {
    "text": "tax base, the test, we don't have to test here whether or not there's room on the saves stack. That test has already been made that there's always room for five or six things, because whenever it does test,",
    "start": "2321730",
    "end": "2333700"
  },
  {
    "text": "it's at a point that is guaranteed never to put five or six things on before the next test.",
    "start": "2333700",
    "end": "2338880"
  },
  {
    "text": "We don't want to be testing all over the place. OK. So now save zero. In other words, this position on safe stack is set to zero, indicating which equipment to a shift amount by zero.",
    "start": "2338880",
    "end": "2351700"
  },
  {
    "text": "Because if I had. OK, so some of the other possibilities for getting the context code are describe another mine.",
    "start": "2351700",
    "end": "2358210"
  },
  {
    "text": "I want to go into that also. So we've got zero in that position and we call Biggin Box Biggin Begin Box Subroutine.",
    "start": "2358210",
    "end": "2368560"
  },
  {
    "text": "And unfortunately I was not able to write the Begin box subroutine next because.",
    "start": "2368560",
    "end": "2374200"
  },
  {
    "text": "It calls inbox box in subroutine.",
    "start": "2374200",
    "end": "2381040"
  },
  {
    "text": "And I had to declare box since first ahead. The reason is that when I begin a box, I don't know.",
    "start": "2381040",
    "end": "2390010"
  },
  {
    "text": "All I've seen so far is a mail box. I don't know that I'm making an H box. This might be some simple thing like instead of H box.",
    "start": "2390010",
    "end": "2395740"
  },
  {
    "text": "I just said box 20, in which case I would I would be able to finish the box right away.",
    "start": "2395740",
    "end": "2401500"
  },
  {
    "text": "Something like eight box. I don't have to wait and scan this whole thing, which might be arbitrarily long before I finish the box, but I might finish it very simply.",
    "start": "2401500",
    "end": "2409570"
  },
  {
    "text": "So I called Biggin Box nine begin boxes module nine fifty eight.",
    "start": "2409570",
    "end": "2416740"
  },
  {
    "text": "And that's what Dan is going to look and see what kind of make box we're supposed to make.",
    "start": "2416740",
    "end": "2422020"
  },
  {
    "text": "And in this case, we have other cases, initiate the construction of each box, every box.",
    "start": "2422020",
    "end": "2430330"
  },
  {
    "text": "Because when you see where did I where's my carlon primitive for HD box. It must be around here somewhere. It's box primitive is the bottom of page three.",
    "start": "2430330",
    "end": "2444730"
  },
  {
    "text": "Thirty eight box primitive for each box is right here and it and it was it's a command course make box.",
    "start": "2444730",
    "end": "2454030"
  },
  {
    "text": "Its char code is V top code plus H mode. So, so that's where we are here.",
    "start": "2454030",
    "end": "2461920"
  },
  {
    "text": "Each box gets a V top code plus each mode. And that's so the H mode is gonna tell us what mode to go in.",
    "start": "2461920",
    "end": "2467980"
  },
  {
    "text": "When we, when we are, when we reach this point, V box will look very similar, but it would have V mode in there instead.",
    "start": "2467980",
    "end": "2474609"
  },
  {
    "text": "So as far as techno's it, so it's it's got the command code of make box and then it's church code is is gonna be V tough code Plessey the V Motor H Motor R zero.",
    "start": "2474610",
    "end": "2486760"
  },
  {
    "text": "And these are the three cases that we're coming into in module now. This is a 962 model 962. Here is where we focus on the 962.",
    "start": "2486760",
    "end": "2498190"
  },
  {
    "text": "Here's where we we make enter restricted horizontal motor internal vertical mode in order to make a box.",
    "start": "2498190",
    "end": "2506020"
  },
  {
    "text": "And so the first thing is we stuff away. Kirchherr minus V top code into a local variable.",
    "start": "2506020",
    "end": "2513040"
  },
  {
    "text": "K The the value of K will be zero for V top or otherwise it'll be V mode for V box or H mode for H box.",
    "start": "2513040",
    "end": "2524170"
  },
  {
    "text": "We increase the safe pointer. That means then that we have now officially put this guy on the save stack.",
    "start": "2524170",
    "end": "2531280"
  },
  {
    "text": "It's in order to make room for the next thing we call scan specs subroutine.",
    "start": "2531280",
    "end": "2536600"
  },
  {
    "text": "The scan specs subroutine is what scans this part of the input.",
    "start": "2536600",
    "end": "2543410"
  },
  {
    "text": "Expand or two, followed by 100 points. And it puts two things on the safe stack.",
    "start": "2543410",
    "end": "2549210"
  },
  {
    "text": "One of them is either zero or one telling whether it's to or expand.",
    "start": "2549210",
    "end": "2554230"
  },
  {
    "text": "And the other one is the dimension. Hundred point, I guess there's no point in going to look at the scan specs subroutine, but it's just called scan keyword.",
    "start": "2554230",
    "end": "2565320"
  },
  {
    "text": "And then it puts those two things on the stack. And I believe it also increases the safe pointer by two so that we now have put three things",
    "start": "2565320",
    "end": "2576690"
  },
  {
    "text": "under the stack telling us the context of this box as well as the final dimensions of the box.",
    "start": "2576690",
    "end": "2583329"
  },
  {
    "text": "Now, now we still have K, which tells us what was going on.",
    "start": "2583330",
    "end": "2590070"
  },
  {
    "text": "Although Kirchherr has changed many times because of the scan spec procedure is called GET. Next, of course, K equals H mode. Then we call new safe level each box group.",
    "start": "2590070",
    "end": "2602220"
  },
  {
    "text": "So the safe pointer, not the safe stack, is not going to get a boundary word for an H box group.",
    "start": "2602220",
    "end": "2609450"
  },
  {
    "text": "And then we're ready to know when the right race comes along that we in an H box group.",
    "start": "2609450",
    "end": "2615450"
  },
  {
    "text": "And so the thing to do is to try to package up our box.",
    "start": "2615450",
    "end": "2621930"
  },
  {
    "text": "That's where we'll see that in a minute. But we put on the safe stack and a boundary word that that refers us to an H box group in our current group.",
    "start": "2621930",
    "end": "2630319"
  },
  {
    "text": "The current type of thing we're in is gonna be each box. Otherwise for a V v box and we talk to similar things go.",
    "start": "2630320",
    "end": "2637950"
  },
  {
    "text": "Then we say push next. And here's something I should know about in tech.",
    "start": "2637950",
    "end": "2644609"
  },
  {
    "text": "It has it has a stack for all the semantic activities for for various kinds of lists.",
    "start": "2644610",
    "end": "2653390"
  },
  {
    "text": "And then and this has state information analogous to the input state. Mary, when we were talking about syntax last hour, the syntax we would have a state and lo and limit.",
    "start": "2653390",
    "end": "2663750"
  },
  {
    "text": "And there were a few other things we didn't we didn't get into. But like the name of the file you're reading is part of your state. The semantics also have these have to have a stack of of these things.",
    "start": "2663750",
    "end": "2676560"
  },
  {
    "text": "And one of the things is the mode that you're in. That's that's current part of your semantic state.",
    "start": "2676560",
    "end": "2682590"
  },
  {
    "text": "And then you have the head, the head and tail of the list that you're building.",
    "start": "2682590",
    "end": "2690000"
  },
  {
    "text": "So if you're in horizontal mode, for example, you're building a horizontal list, had points to the beginning of that horizontal list.",
    "start": "2690000",
    "end": "2697530"
  },
  {
    "text": "Taylor points to the end of that horizontal. There is a space fact.",
    "start": "2697530",
    "end": "2703600"
  },
  {
    "text": "There is another part of the of your mode of your of your state as far as semantics is concerned, for building horizontal lists.",
    "start": "2703600",
    "end": "2713050"
  },
  {
    "text": "So we would. So when we say push nest, this says all the state variables that go into semantics,",
    "start": "2713050",
    "end": "2721560"
  },
  {
    "text": "save them away in your nest stack for semantics and so that they'll pop up again later when we're done with this.",
    "start": "2721560",
    "end": "2727260"
  },
  {
    "text": "But but they all get saved. And so we're pushing some things on a save stack and some things in the nest egg will turn out to be we need to do that.",
    "start": "2727260",
    "end": "2736530"
  },
  {
    "text": "And then we set mode to minus K, K is either H motor V mode.",
    "start": "2736530",
    "end": "2741780"
  },
  {
    "text": "So it's and the mode the value of your current mode is six possibilities is vertical mode and remote and minus V mode.",
    "start": "2741780",
    "end": "2753540"
  },
  {
    "text": "Minus V mode is internal vertical mode and plus V mode is what you have when off on",
    "start": "2753540",
    "end": "2760440"
  },
  {
    "text": "the outermost level of tech building pages and there's H mode and minus H mode,",
    "start": "2760440",
    "end": "2766560"
  },
  {
    "text": "minus H mode is restricted horizontal mode. That's what you have in the middle of an H box. Plus H mode is the ordinary horizontal mode which you have for building a paragraph.",
    "start": "2766560",
    "end": "2779940"
  },
  {
    "text": "Then there's M mode and minus M mode. Plus M mode is in a displayed math formula, minus M mode is in a text math fun.",
    "start": "2779940",
    "end": "2788640"
  },
  {
    "text": "So those are the six modes and that's part of you. And so when you say push nest, that saves away your mode and your head and tail of your current list,",
    "start": "2788640",
    "end": "2798720"
  },
  {
    "text": "your space factor or perceived depth or whatever was part of the mode there and also presents you with a fresh new mode, a brand new mode.",
    "start": "2798720",
    "end": "2809730"
  },
  {
    "text": "Your new you now got an empty list that you're building. So your head is now pointing to a special location in memory that's just gonna be the head of this list.",
    "start": "2809730",
    "end": "2820200"
  },
  {
    "text": "It's not really a an element of a list, but it's it's the base of the thing. And the tail is pointing to the same place. So that is representing an empty list.",
    "start": "2820200",
    "end": "2832710"
  },
  {
    "text": "And the mode when I say push next, I stay in the same mode I was in, but now I change it to minus K, which is minus H.",
    "start": "2832710",
    "end": "2842720"
  },
  {
    "text": "Minus Weemote, so I'm going to make either a V box or an H box. And I have to initialize the space factor in the case of horizontal mode.",
    "start": "2842720",
    "end": "2851270"
  },
  {
    "text": "So I. I said space vector to a thousand thousand is the normal space vector, meaning don't don't make any correction to spacing.",
    "start": "2851270",
    "end": "2861130"
  },
  {
    "text": "If space vector was two thousand it would say double your stretch, your stretch ability and spacing and half your shrink ability.",
    "start": "2861130",
    "end": "2872390"
  },
  {
    "text": "And that return that. And then return which. Which means go to exit. Get out of the procedure for begin a box. So now this is a simple case of posthypnotic suggestion.",
    "start": "2872390",
    "end": "2884000"
  },
  {
    "text": "Here's where we we now return to main control and we go back into tech. And we we have our fingers crossed that someday, somewhere, a right brain is going to come along and we're going to be able to finish this each box.",
    "start": "2884000",
    "end": "2896850"
  },
  {
    "text": "But we we fearlessly let tech run with its head.",
    "start": "2896850",
    "end": "2903830"
  },
  {
    "text": "Do whatever it wants to. Now, to this age box and all kinds of things can happen before we ever get back control again.",
    "start": "2903830",
    "end": "2910760"
  },
  {
    "text": "Those things would presumably be our state will presumably be pushed down on either the safe stack or the nesting stack or both.",
    "start": "2910760",
    "end": "2920680"
  },
  {
    "text": "Whenever something even more complicated comes along with someday we're gonna get back in a right brace is going to come along and take us out.",
    "start": "2920680",
    "end": "2928970"
  },
  {
    "text": "Well, what does come along in this case? Wait a minute. Where did I say Skåne left, Bres? So the circuit scan specked subroutine actually scanned away the left brain, too.",
    "start": "2928970",
    "end": "2944930"
  },
  {
    "text": "Why not? Because one of the things that could have been was H box left brain. And why should we have to backup it? So it takes away the left brain to scan specked subroutine is only used in two places here and after H line B center, I guess another case.",
    "start": "2944930",
    "end": "2960770"
  },
  {
    "text": "OK, now. Now. So. So we've we've we've pushed our previous mode into the nest and we're in a freshman with an empty list.",
    "start": "2960770",
    "end": "2970190"
  },
  {
    "text": "Next thing comes through the scanner is H mode plus a letter letter a K that we see.",
    "start": "2970190",
    "end": "2978400"
  },
  {
    "text": "Do we have time. I guess we we have time to do a little bit of this.",
    "start": "2978400",
    "end": "2983990"
  },
  {
    "text": "Well, I won't go through all the details. We certainly will have to check now for the character following to see if it's part of a ligature and whether kerning is needed and things like that.",
    "start": "2983990",
    "end": "2994039"
  },
  {
    "text": "Well, I'm not going to go through all that code, but h more plus letter is the case recognized in module nine or seven.",
    "start": "2994040",
    "end": "3002200"
  },
  {
    "text": "And it tells us to go to Main Loop and main loop is in where.",
    "start": "3002200",
    "end": "3015030"
  },
  {
    "text": "Main loop is in that same module, nine or seven. And it says a pin. OK, here we go. Main loop is append character Kirchherr and the following characters, if any, to the current.",
    "start": "3015030",
    "end": "3026590"
  },
  {
    "text": "Each list in the current front go to re switch when a non character has been fetched.",
    "start": "3026590",
    "end": "3031900"
  },
  {
    "text": "Nine, 10, four, nine, 10 is all that action. And this is, this is inner loop. So we're trying to be fast here.",
    "start": "3031900",
    "end": "3040840"
  },
  {
    "text": "F is set to Curfman. This is the internal code of the current font. If it's undefined Fonte and we then we're not in a loop anymore. And we've given up.",
    "start": "3040840",
    "end": "3049930"
  },
  {
    "text": "We call a procedure for missing Fonte and go back to Big Switch, do nothing.",
    "start": "3049930",
    "end": "3055390"
  },
  {
    "text": "But that's suppose F is not only not not undefined five. Then we set C to the current character, which is s internal code for lower case A 97.",
    "start": "3055390",
    "end": "3069490"
  },
  {
    "text": "And we may loop one, which is a label that's been explained on the previous page, said main loop.",
    "start": "3069490",
    "end": "3077650"
  },
  {
    "text": "One is like is like main loop, but FXE are the current Fantham character.",
    "start": "3077650",
    "end": "3085119"
  },
  {
    "text": "So that's a I guess a correct description of what main loop one is.",
    "start": "3085120",
    "end": "3090190"
  },
  {
    "text": "Now here we have to check to see whether this is a valid character in the phone or not. So he says, is it less than Funt beginning character or greater than the front ending character?",
    "start": "3090190",
    "end": "3099820"
  },
  {
    "text": "Because C because this font might might be valid. OK, but it might not have this character in it.",
    "start": "3099820",
    "end": "3105100"
  },
  {
    "text": "And if so, then we have to then we have a char warning procedure which, which gets called and we again ignore the character.",
    "start": "3105100",
    "end": "3115840"
  },
  {
    "text": "Tech will never put in its data structure a character that doesn't exist in the font. The Alpha routine never has to check whether the character is there or not. That's already been done before we ever put it in the data structure.",
    "start": "3115840",
    "end": "3128380"
  },
  {
    "text": "So we get through this test and they loop through it. I bet you if I turn back the page and and and gave the camera operator more fits,",
    "start": "3128380",
    "end": "3137799"
  },
  {
    "text": "it would just say that it was like main loop one, except that the character also is in the right range for the fun.",
    "start": "3137800",
    "end": "3144400"
  },
  {
    "text": "So then we said a couple of other variables that are gonna help us on our ligature space loop. And but the gist of it all is that we're going to finally get the main loop three,",
    "start": "3144400",
    "end": "3153430"
  },
  {
    "text": "which is going to finally put it, put it, put a character into the current list in front.",
    "start": "3153430",
    "end": "3163119"
  },
  {
    "text": "What that means is the following I've got now. When I when I said pushiness a minute ago, that meant that I that I had a pointer variable called Head,",
    "start": "3163120",
    "end": "3176080"
  },
  {
    "text": "which gets pushed down at each level, pointing to some new word of memory, which is no has no pointer in it and nothing, nothing there.",
    "start": "3176080",
    "end": "3186700"
  },
  {
    "text": "This represents an empty list. And tail is also pointing to this same place in memory to represent the empty list.",
    "start": "3186700",
    "end": "3196060"
  },
  {
    "text": "Now, when I get a new character, a while I'm going to do is make up a char node,",
    "start": "3196060",
    "end": "3202420"
  },
  {
    "text": "which is which is one of these notes that goes in the one word memory and tail is going to point to, as I say, get a veil.",
    "start": "3202420",
    "end": "3210609"
  },
  {
    "text": "And in fact, I'll I'll use a special case and get a veil that that doesn't call a subroutine unless unless it's a hard situation.",
    "start": "3210610",
    "end": "3219960"
  },
  {
    "text": "This is one of the hard cases in order because, I mean, I get an available one word node.",
    "start": "3219960",
    "end": "3225990"
  },
  {
    "text": "And and I'll have no pointer in here, but I'll make this one point to this.",
    "start": "3225990",
    "end": "3231970"
  },
  {
    "text": "One tail will point to this one and it'll say F here and see here.",
    "start": "3231970",
    "end": "3237609"
  },
  {
    "text": "The font and the character will be stored in that note. F is already known to be in the correct range for a quarter word.",
    "start": "3237610",
    "end": "3245770"
  },
  {
    "text": "But this ninety seven code for ASCII. I'm going to have to add min quarter word to it in order to get it in there.",
    "start": "3245770",
    "end": "3251400"
  },
  {
    "text": "Anyway I, I'm going to have a font and a character and then a no pointer at the end of that.",
    "start": "3251400",
    "end": "3257140"
  },
  {
    "text": "If this list got any longer let's suppose I had a space there. Just two. I won't go through exact. I won't go through the code. But I'll tell you what happened if I put a space here.",
    "start": "3257140",
    "end": "3265809"
  },
  {
    "text": "What would happen? We'd look at font at the current font f and say, what's the glue for that current font?",
    "start": "3265810",
    "end": "3272950"
  },
  {
    "text": "And in most cases there will be a pointer to a glue specification for that font.",
    "start": "3272950",
    "end": "3278079"
  },
  {
    "text": "If not, we'll make up such a pointer so that later on we can we can do it in one step.",
    "start": "3278080",
    "end": "3284350"
  },
  {
    "text": "There will be a pointer to a glue specification. So then this will point to till we move to a new word, which is glue.",
    "start": "3284350",
    "end": "3293950"
  },
  {
    "text": "And this is and this would be glue, which refers to the to the glue for the current font.",
    "start": "3293950",
    "end": "3303400"
  },
  {
    "text": "There's a little packet that says how much to stretch. How much. Just shrink. How much does space for spaces in in each font and even the undefined font.",
    "start": "3303400",
    "end": "3313760"
  },
  {
    "text": "One of these, which is Charles Zero. But this glue will point to this word of glue specification.",
    "start": "3313760",
    "end": "3321350"
  },
  {
    "text": "And there's a reference code in this word saying how many people are pointing to it so that this will disappear when there's no there's no more uses of it.",
    "start": "3321350",
    "end": "3330349"
  },
  {
    "text": "But this is this glue is a very compact thing. This one has to specify three thirty two bit numbers.",
    "start": "3330350",
    "end": "3339620"
  },
  {
    "text": "So we don't want to we don't want to waste that much space in. We do it. We get by with that. We just a point just pointing to it and have a reference count in here to show that this will go away when we don't need it.",
    "start": "3339620",
    "end": "3352430"
  },
  {
    "text": "So this is a one word node for the character. A two word node for the glue.",
    "start": "3352430",
    "end": "3358780"
  },
  {
    "text": "And we've built an age list that contains two items in it.",
    "start": "3358780",
    "end": "3364280"
  },
  {
    "text": "When we when we when we made this space, we checked the space factor that the space factor was one hundred one thousand.",
    "start": "3364280",
    "end": "3371700"
  },
  {
    "text": "Therefore, we can use the standard glue for the fund. Otherwise, we would have fiddled with it a little bit.",
    "start": "3371700",
    "end": "3379410"
  },
  {
    "text": "OK, that's what we did. Then A in a space then.",
    "start": "3379410",
    "end": "3386170"
  },
  {
    "text": "All right, Grace comes through and here's where some this is another big thing.",
    "start": "3386170",
    "end": "3392990"
  },
  {
    "text": "When TEC sees the right brace, almost anything can happen depending on what the right brace means and see where it the right breathe come through.",
    "start": "3392990",
    "end": "3404390"
  },
  {
    "text": "I think it's this one is the right phrase anyway.",
    "start": "3404390",
    "end": "3416200"
  },
  {
    "text": "There's. If I can if I went in the handle right brace.",
    "start": "3416200",
    "end": "3427839"
  },
  {
    "text": "Is the procedure. So. So when the right brace comes through, then we call. Handle. Right. Brace. And 964 is the module number.",
    "start": "3427840",
    "end": "3440840"
  },
  {
    "text": "No. Nine nine 64 is the one that's used in nine forty seven.",
    "start": "3440840",
    "end": "3445850"
  },
  {
    "text": "Yeah. OK. Nine forty seven is the procedure.",
    "start": "3445850",
    "end": "3451420"
  },
  {
    "text": "Handle. Right. Brace. Here we are. And it does it has to deal with all of all the things that can occur when the right brace occurs.",
    "start": "3451420",
    "end": "3461559"
  },
  {
    "text": "Now there's a lot of area situations that that we want to detect here, like an X. Suppose somebody said dollar sign in any had a right brace before he finished his formula.",
    "start": "3461560",
    "end": "3475400"
  },
  {
    "text": "Well, dollar sign is also considered to go on the save stack where the boundary were.",
    "start": "3475400",
    "end": "3480440"
  },
  {
    "text": "And so the left and right. And there's also now something called Group Begin which which will give you local local variables, just like left braces, too.",
    "start": "3480440",
    "end": "3493850"
  },
  {
    "text": "So there are things that the right race might match, something that isn't that isn't a left brace.",
    "start": "3493850",
    "end": "3499430"
  },
  {
    "text": "We have to check for that. Decide what to do. We have to decide, for example, in this case,",
    "start": "3499430",
    "end": "3504440"
  },
  {
    "text": "whether or not the guy forgot a dollar sign or whether he put it in a right brace that he didn't want to.",
    "start": "3504440",
    "end": "3512230"
  },
  {
    "text": "And so those cases have to be have to be handled.",
    "start": "3512230",
    "end": "3517730"
  },
  {
    "text": "But in this case, we're lucky we got a right brace. And what happens?",
    "start": "3517730",
    "end": "3523490"
  },
  {
    "text": "It it costs case core group of crew group for us is in each box group.",
    "start": "3523490",
    "end": "3529610"
  },
  {
    "text": "So it must be in cases of hanle. Right. Brace. We're right. Brace triggers a delayed action 1964. And it's going to finally take us to my Monju 979 no and see nine 64.",
    "start": "3529610",
    "end": "3550590"
  },
  {
    "text": "If I looked in the index under each box group, I would find it. Oh, here it is. Nine 64. So each box group says call package of zero and box group says in the paragraph in package of zero.",
    "start": "3550590",
    "end": "3567690"
  },
  {
    "text": "So package of zero must be the thing that is going to wrap this thing up into a little neat little package and s on the next page 965.",
    "start": "3567690",
    "end": "3578030"
  },
  {
    "text": "And package of the parameter is going to tell whether it's a read top or not.",
    "start": "3578030",
    "end": "3584180"
  },
  {
    "text": "So it is the only other case unsafe. This is what goes through all all the fix ups on the on the safe stack.",
    "start": "3584180",
    "end": "3591980"
  },
  {
    "text": "So it goes back to the previous boundary word. Anything that's been declared nearby only indef see here to font changes in here.",
    "start": "3591980",
    "end": "3598010"
  },
  {
    "text": "They all get undone by, by the unsafe procedure. Well then I've got back to the point where there are three words on the safe stack that are telling",
    "start": "3598010",
    "end": "3605960"
  },
  {
    "text": "me what kind of box I was supposed to make and what the what the use of that box was going gonna be. So I decrease a finger by three more and all those three things are saved zero, saved one and saved two.",
    "start": "3605960",
    "end": "3618550"
  },
  {
    "text": "Here I checked to see what kind of mode I'm in. If negative H mode means I just finished a restricted, you know, in each box and restricted horizontal mode.",
    "start": "3618550",
    "end": "3627500"
  },
  {
    "text": "So that's what, that's what applies. So I said per box to each pack of Lync of head saved to save one.",
    "start": "3627500",
    "end": "3636850"
  },
  {
    "text": "OK. Now each pack is my packaging subroutine. Talk about that's in the SEC link of head.",
    "start": "3636850",
    "end": "3644090"
  },
  {
    "text": "Well here's head the top of the list. Think of it is the beginning of the list. So when I call each pack, I want to know where the list starts. And I also have these two things on the safe stack that said it was 200.",
    "start": "3644090",
    "end": "3656280"
  },
  {
    "text": "This is 200 points. So I want to make it eight points. Exactly. And each pack is the subroutine that's called the packager.",
    "start": "3656280",
    "end": "3665420"
  },
  {
    "text": "And that is the main way to to take a list and make it into a box. It's sort of the way each pack and VPC are the two things in their packaging subroutines which come right at me right here.",
    "start": "3665420",
    "end": "3678440"
  },
  {
    "text": "Packaging page one ninety six five fifty four packaging.",
    "start": "3678440",
    "end": "3685400"
  },
  {
    "text": "And that section is is devoted to creating eight to the age packs.",
    "start": "3685400",
    "end": "3693309"
  },
  {
    "text": "Every team page pack subroutine sexually runs through this list, figures out how big it is.",
    "start": "3693310",
    "end": "3701390"
  },
  {
    "text": "So it finds character, you know, find F characters C and four that it knows it looks up in the fine information and sees how wide the character is,",
    "start": "3701390",
    "end": "3714349"
  },
  {
    "text": "how high it is, how deep it is. So we can compute the depth of this H box. It looks at the next thing. It's glue. And it.",
    "start": "3714350",
    "end": "3722660"
  },
  {
    "text": "Records how much stretch ability there is, whether or not it's infinite and whatever, and gets to the end of the lists.",
    "start": "3722660",
    "end": "3730180"
  },
  {
    "text": "See, that's supposed to make it up to 100 points, makes up or makes up a new box node that says the glue is stretching by a certain factor.",
    "start": "3730180",
    "end": "3740359"
  },
  {
    "text": "This is the height of the boxes, the depth of the box. Each pack does all those nice things and returns a pointer to the box.",
    "start": "3740360",
    "end": "3746810"
  },
  {
    "text": "It made the box note it made. And as we saw, it's that pointer gets stuffed into Kurr box.",
    "start": "3746810",
    "end": "3755690"
  },
  {
    "text": "That's what we're in handle. Right. Brace somewhere. Where I got lost and we're getting short of time, but that's the one.",
    "start": "3755690",
    "end": "3761390"
  },
  {
    "text": "So the right brace has taken us through that much. And if I go if I could find my code back again here on boxes, building boxes,",
    "start": "3761390",
    "end": "3770869"
  },
  {
    "text": "I bet you what would happen next is that I would pop the nest and go back to my environment.",
    "start": "3770870",
    "end": "3779080"
  },
  {
    "text": "But wherever that is. Page three, 35.",
    "start": "3779080",
    "end": "3785960"
  },
  {
    "text": "OK. Here we go. Yeah. So Curb Box was set to each pack and.",
    "start": "3785960",
    "end": "3795599"
  },
  {
    "text": "And then we popped the nest. Which means that we get by this time.",
    "start": "3795600",
    "end": "3800900"
  },
  {
    "text": "We've got another pointer to this to this list already. This list is now pointed to by by some box note or other.",
    "start": "3800900",
    "end": "3809359"
  },
  {
    "text": "And Head is still pointing to it. But I, but I wipe this note. I recycle it, put it back into it, into free memory.",
    "start": "3809360",
    "end": "3817910"
  },
  {
    "text": "And then I call a box and procedure box and procedure is going to take cur box and add it to the current list in the in the outermost and we'll leave.",
    "start": "3817910",
    "end": "3828470"
  },
  {
    "text": "It'll either lower it or raise it or, or put it in leaders or whatever the context and save. Save. Zero tells it to do. So there we are.",
    "start": "3828470",
    "end": "3836869"
  },
  {
    "text": "We finished the H box. That's taken us through a lot of the of the ideas that take.",
    "start": "3836870",
    "end": "3843210"
  },
  {
    "text": "And I think by by that example, you get a feeling for, you know, what other things are going to are going to happen.",
    "start": "3843210",
    "end": "3851930"
  },
  {
    "text": "Anything could happen inside this H box. Of course, we could call a V box that could have had a display from the inside of the box and all that other stuff going on.",
    "start": "3851930",
    "end": "3859670"
  },
  {
    "text": "But it's all done with the same same basic idea that we save some things on us, on a nesting stack, some things on a safe stack.",
    "start": "3859670",
    "end": "3870619"
  },
  {
    "text": "And we have a few vital procedures like the HPC procedure that make transformations on a data structure.",
    "start": "3870620",
    "end": "3878270"
  },
  {
    "text": "Finally, everything gets into the data structure and we're ready to do things like break it into lines, four paragraphs.",
    "start": "3878270",
    "end": "3886880"
  },
  {
    "text": "And that's that. That's the subject of the lecture at two o'clock, breaking paragraphs into lines.",
    "start": "3886880",
    "end": "3894559"
  },
  {
    "text": "The most interesting one that I want to especially recommend is the one at 330 hyphenation.",
    "start": "3894560",
    "end": "3900230"
  },
  {
    "text": "We should have some fun with that computer is still up because the brand new hyphenation algorithm in tech and I want to show you how it works and do some experiments with it.",
    "start": "3900230",
    "end": "3910780"
  },
  {
    "text": "So this afternoon, we're both pretty good with the hyphenation one to be the most fun for me.",
    "start": "3910780",
    "end": "3922872"
  }
]