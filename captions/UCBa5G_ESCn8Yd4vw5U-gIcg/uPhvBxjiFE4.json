[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "All right. Let's get started. Uh, it's my pleasure to introduce Sergey Levine who will be giving a guest lecture today.",
    "start": "4850",
    "end": "12875"
  },
  {
    "text": "Uh, Sergey is an assistant professor at UC Berkeley. He did his bachelor's and his PhD here at Stanford University,",
    "start": "12875",
    "end": "21099"
  },
  {
    "text": "uh, and his research is at the intersection between control, uh, and machine learning with the aim of developing algorithms and techniques that can endow",
    "start": "21100",
    "end": "29395"
  },
  {
    "text": "machines with the ability to autonomously acquire skills for executing complex tasks.",
    "start": "29395",
    "end": "35390"
  },
  {
    "text": "Uh, and today, he'll be talking about information theoretic exploration and unsupervised reinforcement learning.",
    "start": "35390",
    "end": "40660"
  },
  {
    "text": "Please join me in welcoming Sergey. [APPLAUSE]",
    "start": "40660",
    "end": "47309"
  },
  {
    "text": "Thank you for the introduction. So, um, yeah, I thought a little bit about what kind of topic to discuss today.",
    "start": "47310",
    "end": "52400"
  },
  {
    "start": "48000",
    "end": "290000"
  },
  {
    "text": "And I figured I would actually talk about something that's, uh, you know, addressing some challenges in reinforcement learning,",
    "start": "52400",
    "end": "57740"
  },
  {
    "text": "but I think it ties also pretty deeply to topics in multitask learning and meta-learning that are sort of the core focus of this course.",
    "start": "57740",
    "end": "63739"
  },
  {
    "text": "So let's start off with a little discussion of, uh, what's wrong with reinforcement learning algorithms. So you guys had a few lectures on RL.",
    "start": "63740",
    "end": "69890"
  },
  {
    "text": "Hopefully, you kind of, uh, have a decent idea of what the basic, uh, setup looks like.",
    "start": "69890",
    "end": "75650"
  },
  {
    "text": "But, uh, you know, the basic setup has some issues. So here's an example of a task where you have, uh,",
    "start": "75650",
    "end": "80810"
  },
  {
    "text": "a little bipedal robot learning to run. And you might look at this and say, \"Well, that's- that's pretty cool like this little guy learned to run essentially from scratch.\"",
    "start": "80810",
    "end": "88960"
  },
  {
    "text": "Uh, but what did it take for him to get there? Well, that learning curve on the bottom shows, uh, the progression,",
    "start": "88960",
    "end": "95300"
  },
  {
    "text": "the- the reward function as a function of the number of time steps that, uh, he had to actually attempt running.",
    "start": "95300",
    "end": "100415"
  },
  {
    "text": "And if we put a scale on this in terms of sort of, uh, hours of time that it would take in",
    "start": "100415",
    "end": "105950"
  },
  {
    "text": "the real world if it was like an actual robot trying to run, this little bit where he just starts making progress alone already takes 10 hours,",
    "start": "105950",
    "end": "112670"
  },
  {
    "text": "and then if you want to get to the end of this curve over here, this would be like on the order of 100 hours. So pretty cool if something is working,",
    "start": "112670",
    "end": "118759"
  },
  {
    "text": "but seems like doing this from scratch takes a really, really long time. And if you run this algorithm twice,",
    "start": "118760",
    "end": "124250"
  },
  {
    "text": "you get two pretty different solutions. They both look like reasonable, uh, running gaits, but something here seems to be a little bit off if you",
    "start": "124250",
    "end": "130880"
  },
  {
    "text": "get totally different solutions each time you do this. And then you might also think, \"Well, how did we define the task, uh, for this little  guy?\"",
    "start": "130880",
    "end": "138235"
  },
  {
    "text": "In, uh, you know when- when we learn about reinforcement learning, classically we're told that we specify objectives or reward functions that tell the system what it's supposed to do,",
    "start": "138235",
    "end": "147470"
  },
  {
    "text": "and the reinforcement learning algorithm tell- it's supposed to figure out how to do it. So you might think, \"Well, if you want it to run,",
    "start": "147470",
    "end": "152879"
  },
  {
    "text": "then clearly, you just give it a reward function.\" It says, \"Like you get a 1, if you run, and a 0 otherwise, go for it and then you can figure this out.\"",
    "start": "152880",
    "end": "158915"
  },
  {
    "text": "But of course, that's not how it works in practice. In practice, if you actually use a reward function like this you're not gonna get a very good solution.",
    "start": "158915",
    "end": "165005"
  },
  {
    "text": "And what people do instead is they defined some complicated monster of a reward function like this that says, \"Well, have a large forward velocity.",
    "start": "165005",
    "end": "171650"
  },
  {
    "text": "Keep the torso upright. Don't fall too much,\" all this other stuff. So essentially encode a little bit more guidance about how the tasks should be performed.",
    "start": "171650",
    "end": "178145"
  },
  {
    "text": "So long training times, different outcomes when you run at different times, complex reward functions.",
    "start": "178145",
    "end": "183770"
  },
  {
    "text": "So there's a lot of these challenges and some of these challenges are local optima challenges. Some of them, uh,",
    "start": "183770",
    "end": "189110"
  },
  {
    "text": "are challenges with needing to craft very detailed reward functions, and some of them are challenges associated with long training times.",
    "start": "189110",
    "end": "194735"
  },
  {
    "text": "And there are a variety of different, uh, ways we can start thinking about solving these challenges and I'm going to discuss one, perhaps, somewhat non-obvious,",
    "start": "194735",
    "end": "202080"
  },
  {
    "text": "uh, direction, which is to think about, you know, how is it that- that humans and animals avoid having to deal with some of these issues.",
    "start": "202080",
    "end": "209695"
  },
  {
    "text": "Well, maybe part of the key to that is that, uh, we're not actually, uh, you know, this very much goes to the core of this class,",
    "start": "209695",
    "end": "214940"
  },
  {
    "text": "we're not re- really learning all these skills from scratch. So in standard RL settings, you have very detailed goals,",
    "start": "214940",
    "end": "220489"
  },
  {
    "text": "you're given that goal and you just try to achieve that goal. Uh, if you imagine, you know, uh, the child interacting with its environment maybe,",
    "start": "220490",
    "end": "227750"
  },
  {
    "text": "it doesn't have very specific goals, but it's interacting with the world and acquiring knowledge about the world through largely unstructured interaction.",
    "start": "227750",
    "end": "234985"
  },
  {
    "text": "And now, we might start thinking, \"Well, can this kind of unstructured interaction help us, uh, address these issues?",
    "start": "234985",
    "end": "241465"
  },
  {
    "text": "Perhaps the issues associated with local optima can be mitigated by obtaining very good coverage over the space of",
    "start": "241465",
    "end": "247370"
  },
  {
    "text": "possible behaviors so that you know what's possible in the world.\" And then maybe once you have the more global view of the possibilities,",
    "start": "247370",
    "end": "253310"
  },
  {
    "text": "you can avoid the local optimum when you're provided with a specific task to accomplish. Perhaps, uh, the need for detailed rewards can also be",
    "start": "253310",
    "end": "260420"
  },
  {
    "text": "alleviated by having some kind of varied diversity seeking exploration where you, uh, see what all the possible things that you can do in the world are,",
    "start": "260420",
    "end": "266300"
  },
  {
    "text": "and then maybe you can deal with objectives that are as simple as this, because you've already seen things that look a little bit like running and a little bit like not running.",
    "start": "266300",
    "end": "273620"
  },
  {
    "text": "And also maybe the long training times can be alleviated by essentially utilizing unstructured experience like this as",
    "start": "273620",
    "end": "280324"
  },
  {
    "text": "unsupervised pre-training to build up representations, build up some initial skills that can later be utilized to address user-specified goals.",
    "start": "280325",
    "end": "288960"
  },
  {
    "text": "So the particular, uh, problem that I'm gonna talk about today is,",
    "start": "289140",
    "end": "295009"
  },
  {
    "start": "290000",
    "end": "399000"
  },
  {
    "text": "uh, the problem of recovering diverse behavior without access to any reward function.",
    "start": "295010",
    "end": "300335"
  },
  {
    "text": "And of course, I'll- I'll allude a little bit to how this can be used to then achieve specific goals later down the line.",
    "start": "300335",
    "end": "305730"
  },
  {
    "text": "But I'll spe- I'll mostly focus on the unsupervised parts or the pre-training part. So this part essentially. Why do we want this?",
    "start": "305730",
    "end": "313165"
  },
  {
    "text": "Well, uh, you might want it because you can learn skills without supervision then use them to accomplish goals later on.",
    "start": "313165",
    "end": "318485"
  },
  {
    "text": "You can learn subskills and then use those subskills with hierarchical reinforcement learning methods, and you can explore the space of",
    "start": "318485",
    "end": "324200"
  },
  {
    "text": "possible behaviors to help you later on get out of those local optima. So, uh, if you want",
    "start": "324200",
    "end": "330020"
  },
  {
    "text": "kind of a more concrete motivating example scenario, let's imagine that, uh, you buy, uh, your, you know,",
    "start": "330020",
    "end": "335525"
  },
  {
    "text": "mark 1 household robot, and this is your kitchen. And you buy the robot in the morning, you put it in the kitchen, and then you say,",
    "start": "335525",
    "end": "342790"
  },
  {
    "text": "\"You know, do whatever it is that you need to do to prepare yourself for an unknown future goal,\" and then you're gonna go to work and the robot is going to go at it in",
    "start": "342790",
    "end": "349670"
  },
  {
    "text": "your kitchen trying to figure out what is it that it can do. And then you're gonna come and they- come back in the evening and you gonna say,",
    "start": "349670",
    "end": "355270"
  },
  {
    "text": "\"Well, tonight your job is going to be to do the dishes for me.\" And the robot should have done whatever was necessary during",
    "start": "355270",
    "end": "361250"
  },
  {
    "text": "this unsupervised pre-training phase to prepare it as well as it possibly co- could for whatever unknown tasks you might give it down the line like doing the dishes.",
    "start": "361250",
    "end": "370045"
  },
  {
    "text": "That's sort of an example scenario that we can keep in our minds as I discuss some of the techniques that we can think about for this.",
    "start": "370045",
    "end": "376960"
  },
  {
    "text": "And you could, uh, you know, if you're willing to, uh, sort of stretch the analogy a little bit, you could also imagine that the, uh,",
    "start": "376960",
    "end": "383509"
  },
  {
    "text": "the child that was playing around with toys on the previous slide was unintentionally doing some variant of this,",
    "start": "383510",
    "end": "389000"
  },
  {
    "text": "essentially exploring the world with the unintentional aim of preparing itself for whatever its future might demand of it.",
    "start": "389000",
    "end": "397010"
  },
  {
    "text": "Okay. Um, so that's maybe the high-level motivation, but the concrete things that I'd like to discuss in today's lecture,",
    "start": "397010",
    "end": "403610"
  },
  {
    "start": "399000",
    "end": "493000"
  },
  {
    "text": "I'm going to start with some definitions and concepts from information theory that we're going to utilize, uh, repeatedly in the lecture to actually think of algorithms that can do this.",
    "start": "403610",
    "end": "413050"
  },
  {
    "text": "I'm going to discuss a distribution matching formulation of reinforcement learning that deviates a little bit from the standard way",
    "start": "413050",
    "end": "418900"
  },
  {
    "text": "of formulating the reinforcement learning problem, and provides us a way to connect it, uh, with some of these probabilistic concepts.",
    "start": "418900",
    "end": "425180"
  },
  {
    "text": "Then I'll talk about our first, uh, fully unsupervised or reinforce learning algorithm. We're just going to learn without a reward function to reach diverse goals.",
    "start": "425180",
    "end": "434300"
  },
  {
    "text": "And then, uh, I'll- I'll discuss a way that we can extend this idea to match desired state distributions.",
    "start": "434300",
    "end": "442060"
  },
  {
    "text": "Talk about whether coverage of state distributions is actually a good exploration objective and some theoretical sense,",
    "start": "442060",
    "end": "447979"
  },
  {
    "text": "and then generalize the idea further from covering the space of states to covering the space of skills.",
    "start": "447980",
    "end": "453680"
  },
  {
    "text": "And then I'll conclude by, uh, briefly tying these ideas back to meta-learning, uh with a- with a short discussion about how- some of",
    "start": "453680",
    "end": "461090"
  },
  {
    "text": "these unsupervised skill extraction techniques can actually be utilized together with, uh, with meta-learning to perform essentially unsupervised meta-learning,",
    "start": "461090",
    "end": "468659"
  },
  {
    "text": "you know, uh, and that'll be at the end of the lecture. I- I'm not sure if I'll get through all of this but it sort of depends on how many questions you guys ask.",
    "start": "468660",
    "end": "474950"
  },
  {
    "text": "So feel free to ask questions. Uh, if- if we're running out of time, this is sort of intentionally designed so that the most important stuff comes first, and,",
    "start": "474950",
    "end": "481639"
  },
  {
    "text": "uh, sort of the fuzzier stuff comes later. All right. Let's start with, uh, some definitions and concepts.",
    "start": "481640",
    "end": "488539"
  },
  {
    "text": "And many of you might already know a- a lot of these but I do want to go through them to make sure we're all on the same page. So first some useful identities.",
    "start": "488540",
    "end": "495785"
  },
  {
    "start": "493000",
    "end": "577000"
  },
  {
    "text": "Hopefully, all of you know what a distribution is. Uh, but we need to know what a distribution is because we're going to work a lot with distributions.",
    "start": "495785",
    "end": "502324"
  },
  {
    "text": "So if this is your variable x, you can think of some getting some samples represented by those blue dots.",
    "start": "502325",
    "end": "509425"
  },
  {
    "text": "Using those samples, you can fit a distribution and just tells you how dense are your points in, uh, different regions.",
    "start": "509425",
    "end": "515419"
  },
  {
    "text": "Now, a particular quantity, uh, that we can compute on these distributions,",
    "start": "515420",
    "end": "520459"
  },
  {
    "text": "which is going to be very useful for us in this lecture, is the entropy of the distribution. So I'm going to use this script H to denote entropy.",
    "start": "520460",
    "end": "527850"
  },
  {
    "text": "Uh, entropy can be defined, uh, like this and the- this equation might be a little bit cryptic.",
    "start": "527850",
    "end": "533020"
  },
  {
    "text": "But to give you a little bit of intuition about what's going on here, it's the negative of the expectation of the log probabilities.",
    "start": "533020",
    "end": "538760"
  },
  {
    "text": "So intuitively, if your distribution is very large log probability somewhere, then this expectation will be large,",
    "start": "538760",
    "end": "545390"
  },
  {
    "text": "which means that its negative will be, uh, a very negative number. If the distribution has very small log probabilities,",
    "start": "545390",
    "end": "551839"
  },
  {
    "text": "then this expectation will also be small, so it'll be, uh, a less negative number. So larger entropies correspond to smaller log probabilities,",
    "start": "551840",
    "end": "559675"
  },
  {
    "text": "uh, which means that the entropy quantifies in a sense how broad the distribution is. So if this distribution is very wide,",
    "start": "559675",
    "end": "565925"
  },
  {
    "text": "it has large entropy, meaning, it has small log probabilities. And if it's very peaked, then it has a small entropy meaning large log probabilities.",
    "start": "565925",
    "end": "574010"
  },
  {
    "text": "And this will be very important, uh, in today's lecture. Ah, the third very useful identity is mutual information.",
    "start": "574010",
    "end": "583170"
  },
  {
    "start": "577000",
    "end": "734000"
  },
  {
    "text": "Now again, mutual information can be defined as a somewhat cryptic way, but then we can discuss the- sort of the intuition behind it,",
    "start": "583170",
    "end": "589275"
  },
  {
    "text": "and that intuition will be very useful for us. So mutual information is a measure of how, ah,",
    "start": "589275",
    "end": "595035"
  },
  {
    "text": "intuitively how dependent two random variables are and its definitions, the KL divergence between the joint distribution of those variables,",
    "start": "595035",
    "end": "601510"
  },
  {
    "text": "p of x, y, and the product of their marginals, p of x times p of y, which we can equivalently write like this using the definition of KL divergence.",
    "start": "601510",
    "end": "610565"
  },
  {
    "text": "But to provide a little bit of intuition for this, let's say that you have two different distributions over x and y,",
    "start": "610565",
    "end": "615875"
  },
  {
    "text": "this top one here and this bottom one. So the green dots that I've plotted are, ah, samples from that distribution.",
    "start": "615875",
    "end": "622070"
  },
  {
    "text": "So now from looking at this definition, um, can you, ah, raise your hand if you think that the top plot",
    "start": "622070",
    "end": "628324"
  },
  {
    "text": "shows a distribution with higher mutual information between x and y. Now raise your hand if you think that the lower one has higher mutual information.",
    "start": "628325",
    "end": "636825"
  },
  {
    "text": "Okay. Right. So since mutual information is a measure of the dep- of the degree to which the variables are dependent on each other,",
    "start": "636825",
    "end": "643190"
  },
  {
    "text": "ah, high mutual information means that x and y are highly dependent, low mutual information means that they are largely independent.",
    "start": "643190",
    "end": "649620"
  },
  {
    "text": "And very conveniently, we can rewrite, ah, mutual information as the difference of two entropies.",
    "start": "649620",
    "end": "655540"
  },
  {
    "text": "Ah, the entropy of the marginal of one of the variables, so let's say the entropy of p of y,",
    "start": "655540",
    "end": "660775"
  },
  {
    "text": "minus the conditional entropy of that variable conditional on the other one. And this has I think a very appealing intuitive interpretation.",
    "start": "660775",
    "end": "668230"
  },
  {
    "text": "The second term is very small. It's a very small entropy. If when you know x,",
    "start": "668230",
    "end": "674605"
  },
  {
    "text": "you can accurately guess y. So in this top plot, you know, y is roughly equal to x,",
    "start": "674605",
    "end": "679635"
  },
  {
    "text": "so if you know x, you can guess y pretty well. In the bottom plot, y is independent of x,",
    "start": "679635",
    "end": "684860"
  },
  {
    "text": "so knowing x doesn't help you guess y any better. But it's not enough for x- for you to be able to guess y from knowing x,",
    "start": "684860",
    "end": "692725"
  },
  {
    "text": "you have to actually- it has to actually be difficult to guess y. So if y is always equal to 0.5,",
    "start": "692725",
    "end": "698130"
  },
  {
    "text": "of course you can guess y very accurately if you know x, but you can also guess it very accurately if you don't know x. So this first term basically quantifies how hard it is to guess y a priori.",
    "start": "698130",
    "end": "707630"
  },
  {
    "text": "If it's hard to guess y a priori, but much easier to guess y if you know x, that means that x tells you a lot about",
    "start": "707630",
    "end": "713670"
  },
  {
    "text": "y and that means that x and y have high mutual information. And the reason I'm somewhat belaboring",
    "start": "713670",
    "end": "718949"
  },
  {
    "text": "this definition is because this intuition will be very important later on to understand what some of these unsupervised reinforcing learning algorithms are doing.",
    "start": "718950",
    "end": "725945"
  },
  {
    "text": "So as a little warm-up, let's go through, um, ah, a sho- a short, ah,",
    "start": "725945",
    "end": "731279"
  },
  {
    "text": "kind of example of mutual information and reinforcement learning. Let's say that we have a distribution.",
    "start": "731280",
    "end": "737680"
  },
  {
    "text": "Our distribution is going to be defined in terms of quantities that we actually care about in RL, it's going to be defined in terms of policies and states.",
    "start": "737680",
    "end": "744600"
  },
  {
    "text": "So we'll say that pi of s is the state marginal distribution of our policy pi. So you run your policy a whole bunch,",
    "start": "744600",
    "end": "750180"
  },
  {
    "text": "count up which states it visits, average together those counts and you get a distribution over states.",
    "start": "750180",
    "end": "755480"
  },
  {
    "text": "The entropy of pi of s quantifies in a sense the coverage of your policy.",
    "start": "755480",
    "end": "761105"
  },
  {
    "text": "So if your policy has a very large entropy of pi of s, that means intuitively that it goes to a wide range of different states.",
    "start": "761105",
    "end": "767009"
  },
  {
    "text": "It's doing a good job of exploring. Now let's think of an example of, ah,",
    "start": "767010",
    "end": "773135"
  },
  {
    "text": "how we can use mutual information to understand something about, ah, MDPs.",
    "start": "773135",
    "end": "778640"
  },
  {
    "text": "Here's an example of a mutual information quantity called empowerment. I'm not actually gonna go through empowerment in detail,",
    "start": "778640",
    "end": "784149"
  },
  {
    "text": "I just wanna use it as a short example. So, ah, classically, empowerment is defined as",
    "start": "784150",
    "end": "789245"
  },
  {
    "text": "the mutual information between the next state, s_t plus 1, and the current action a_t.",
    "start": "789245",
    "end": "795560"
  },
  {
    "text": "On the surface, this might at first seem like a slightly cryptic concept, but let's go back to those difference of entropies definition from the previous slide.",
    "start": "795560",
    "end": "803585"
  },
  {
    "text": "We know that we can write this mutual information as the entropy of s_t plus 1 minus the entropy of s_t plus 1 given a_t.",
    "start": "803585",
    "end": "810680"
  },
  {
    "text": "So that means that if you know what action you took, you can guess your next state very accurately;",
    "start": "810680",
    "end": "815734"
  },
  {
    "text": "if you don't know what action you took, you cannot guess your next state very accurate. What that means is that you go to a wide range of",
    "start": "815734",
    "end": "821345"
  },
  {
    "text": "different states and your actions are very predictive of those states. So now let's think about that a little bit.",
    "start": "821345",
    "end": "828430"
  },
  {
    "text": "Why would we call something like this empowerment? It sounds like a very lofty term. Any guesses about why this is called empowerment?",
    "start": "828430",
    "end": "837040"
  },
  {
    "text": "Yes. Measures to what degree you can cover your environment. Exactly, yeah. It's- it measures the amount",
    "start": "837040",
    "end": "844210"
  },
  {
    "text": "of control authority you have over your world. If your actions are highly predictive of your states, that means your actions are influencing your states,",
    "start": "844210",
    "end": "851205"
  },
  {
    "text": "ah, in a fairly predictable way. So that means that you have a lot of control about what goes on. If- if these two entropies are equal,",
    "start": "851205",
    "end": "858340"
  },
  {
    "text": "that means that your actions have no effect on the state. That means that you're sort of enfeebled, you're not able to affect the world around you. So that's why it's called, ah, empowerment.",
    "start": "858340",
    "end": "865190"
  },
  {
    "text": "[NOISE] So anyway, that's just a little exercise to help us think about mutual information in the context of control problems.",
    "start": "865190",
    "end": "872420"
  },
  {
    "start": "872000",
    "end": "888000"
  },
  {
    "text": "Let's talk about, ah, the first, ah, kind of algorithmic components in today's lecture,",
    "start": "872420",
    "end": "877930"
  },
  {
    "text": "which is how we can reformulate classic reinforcement learning as a distribution matching problem.",
    "start": "877930",
    "end": "884145"
  },
  {
    "text": "In this case, there'll be a distribution matching problem on actions. So I'll first motivate this a little bit with",
    "start": "884145",
    "end": "891150"
  },
  {
    "start": "888000",
    "end": "985000"
  },
  {
    "text": "a- with an actual challenge that we sometimes face in RL. So this is the challenge that I showed on that first slide.",
    "start": "891150",
    "end": "896505"
  },
  {
    "text": "You take your favorite RL algorithm, this particular one is TRPO, you run it twice and you get two different answers,",
    "start": "896505",
    "end": "902510"
  },
  {
    "text": "and you think, what the hell just happened? Um, well, you can, ah, set up a little toy problem that captures sort of a microcosm of this issue,",
    "start": "902510",
    "end": "911720"
  },
  {
    "text": "ah, because it's a little hard to reason about these complicated humanoids. So let's set up something much simpler. Let's say we have four legs instead of two because that's clearly simpler,",
    "start": "911720",
    "end": "919535"
  },
  {
    "text": "and we're navigating a little maze. And our goal is to reach this blue square. Now when you're first starting out,",
    "start": "919535",
    "end": "925800"
  },
  {
    "text": "you can explore the upper passage or the lower passage, and both at first seem like you're making progress towards the goal.",
    "start": "925800",
    "end": "931480"
  },
  {
    "text": "So if you make it a little further along the upper passage and you think, oh, I'm getting closer, I'm getting closer, let's just go there, [NOISE] but then you get stuck.",
    "start": "931480",
    "end": "938490"
  },
  {
    "text": "So intuitively, the right strategy for a problem like this ought to be to explore both passages in roughly equal proportion",
    "start": "938490",
    "end": "945839"
  },
  {
    "text": "until you figure out that one of them is decisively better than the other. And I would actually posit that the issue here is very much like",
    "start": "945840",
    "end": "952805"
  },
  {
    "text": "the issue here that reinforcement learning, it- it's self-reinforcing. Once you see that you're making a little bit more progress along the upper passage,",
    "start": "952805",
    "end": "959720"
  },
  {
    "text": "classic reinforcing learning algorithms, we'll want to commit all the probability mass there because they're getting larger rewards there in",
    "start": "959720",
    "end": "965585"
  },
  {
    "text": "the same way that this little running guy as soon as he figures out one type of running gait, he'll want to go more to that place and ignore all other possible gaits",
    "start": "965585",
    "end": "974150"
  },
  {
    "text": "because that one running gait where he ran and made a little more progress is the one that seems to be more rewarding. And that's a local optima problem.",
    "start": "974150",
    "end": "981135"
  },
  {
    "text": "So how can we track both hypotheses or in general all hypotheses that are valuable to us?",
    "start": "981135",
    "end": "986645"
  },
  {
    "start": "985000",
    "end": "1058000"
  },
  {
    "text": "So we're going to talk a lot about Q-functions. Many of you might already know what-Q functions are, but a short primer.",
    "start": "986645",
    "end": "992320"
  },
  {
    "text": "Ah, in our reality of actions, you have states and you have rewards. Your goal is to maximize your expected reward on your policy.",
    "start": "992320",
    "end": "999210"
  },
  {
    "text": "So hopefully, we're all good with that. And the Q function is defined as the expected value of the rewards that you will accumulate if you start in state s,",
    "start": "999210",
    "end": "1007389"
  },
  {
    "text": "take the action a, and then afterwards follow your policy pi. And reward functions are very useful because if you ha- sorry, ah,",
    "start": "1007390",
    "end": "1014100"
  },
  {
    "text": "Q -functions are very useful because if you have a Q-function for a policy, you can extract a better policy simply by being greedy with respect to your Q-function.",
    "start": "1014100",
    "end": "1021995"
  },
  {
    "text": "So if you take an action with probability 1, if that action is the argmax of your Q-function, you know that this policy will be at least as good",
    "start": "1021995",
    "end": "1029600"
  },
  {
    "text": "as the one that you use to train your Q-function. And of course from this, you can get, ah, a reinforcement learning algorithm, ah, the one that I outlined",
    "start": "1029600",
    "end": "1036985"
  },
  {
    "text": "here is policy iteration. You can also directly enforce optimality on the Q-function by forcing your- your Q-function to obey this equation.",
    "start": "1036985",
    "end": "1045209"
  },
  {
    "text": "So if you can enforce this equation everywhere, then you'll just recover the optimal Q function directly. So that's Q learning.",
    "start": "1045210",
    "end": "1051664"
  },
  {
    "text": "Okay. So, um, yeah, this is basically the- the only equation you need to know for the Q learning algorithm.",
    "start": "1051665",
    "end": "1058360"
  },
  {
    "start": "1058000",
    "end": "1251000"
  },
  {
    "text": "So we can do something like Q learning, ah, for our little example with the two passengers.",
    "start": "1058360",
    "end": "1064785"
  },
  {
    "text": "And let's say that initially, ah, we make a little bit more progress along this upper passage. If we make a little bit more progress along the upper passage,",
    "start": "1064785",
    "end": "1072280"
  },
  {
    "text": "then the height of this, ah, Q-function will be a little larger. It'll- it'll take on slightly larger values for the- for going left here.",
    "start": "1072280",
    "end": "1080025"
  },
  {
    "text": "And that's a problem because if the way that we're going to improve our policies is by taking the argmax,",
    "start": "1080025",
    "end": "1085510"
  },
  {
    "text": "then our policy will then put all this probability mass on this better option. This option is not actually better,",
    "start": "1085510",
    "end": "1091170"
  },
  {
    "text": "it just looks better because we got lucky. But as soon as we get lucky once, we'll go there even more,",
    "start": "1091170",
    "end": "1096520"
  },
  {
    "text": "which means that we'll get even luckier until eventually we're completely committing ourselves to exploring",
    "start": "1096520",
    "end": "1101970"
  },
  {
    "text": "this upper passage without even having seen what's going on down here. So that's no good. What we can do",
    "start": "1101970",
    "end": "1108530"
  },
  {
    "text": "instead is we could imagine committing our probability mass in proportion to some positive transformation of our Q-function",
    "start": "1108530",
    "end": "1114409"
  },
  {
    "text": "so that if the Q values for two options look about equally good, we'll explore them about equally often. And it turns out that",
    "start": "1114410",
    "end": "1120360"
  },
  {
    "text": "a very convenient positive transformation to use is the exponential. We'll see why in a second. Ah, but intuitively, if we choose our policy to not be",
    "start": "1120360",
    "end": "1128240"
  },
  {
    "text": "the greedy policy but to commit probability mass in proportion to the exponential of the Q values,",
    "start": "1128240",
    "end": "1133794"
  },
  {
    "text": "then two options that have roughly equal Q values will be explored to about equal degrees and we won't necessarily have this problem of immediately",
    "start": "1133795",
    "end": "1140760"
  },
  {
    "text": "committing to the first option that accidentally looks a little bit better. So why is it so convenient to use an exponential?",
    "start": "1140760",
    "end": "1147875"
  },
  {
    "text": "Well, because it allows us to bring in some of those concepts from information theory. It turns out that if you write down the KL divergence between",
    "start": "1147875",
    "end": "1155514"
  },
  {
    "text": "your policy Pi and the exponential of the Q function, so you can treat this as a probability distribution if you normalize it,",
    "start": "1155515",
    "end": "1162510"
  },
  {
    "text": "then by the definition of KL divergence, this is equal to the expectation under Pi of Q minus log Pi.",
    "start": "1162510",
    "end": "1169674"
  },
  {
    "text": "And this is now starting to look an awful lot like regular reinforcement learning. This first term is basically your expected reward,",
    "start": "1169675",
    "end": "1176235"
  },
  {
    "text": "because remember that Q is the expectation of future rewards. So that means that this first term turns into",
    "start": "1176235",
    "end": "1181980"
  },
  {
    "text": "the expectation under Pi of your future rewards. The second term, that's the new guy.",
    "start": "1181980",
    "end": "1187155"
  },
  {
    "text": "That's something that we didn't have in regular RL, but the expectation under Pi of log Pi is just the entropy.",
    "start": "1187155",
    "end": "1194110"
  },
  {
    "text": "So all we've done, if we change our objective to this KL divergence, is we've taken our regular RL objective and added the entropy of Pi to it.",
    "start": "1194110",
    "end": "1202705"
  },
  {
    "text": "We call this the maximum entropy objective because what it tells us to do is to maximize our,",
    "start": "1202705",
    "end": "1208090"
  },
  {
    "text": "our rewards while at the same time being as random as possible. And this actually allows us to address this problem with the two passages, why?",
    "start": "1208090",
    "end": "1216179"
  },
  {
    "text": "Well, because if you're maximizing your rewards while being as random as possible, that means that when you have two roughly equally good options,",
    "start": "1216180",
    "end": "1222335"
  },
  {
    "text": "you should take both options in equal proportion because it will give you higher entropy than committing to one of the two.",
    "start": "1222335",
    "end": "1227580"
  },
  {
    "text": "Once you're sure that one of the two options is much, much better, then it's fine to commit all your probability mass to that.",
    "start": "1227580",
    "end": "1232915"
  },
  {
    "text": "But if they look about equally good, you should try both, and that will allow you to maximize your entropy. So it's a distribution matching objective in the sense",
    "start": "1232915",
    "end": "1240330"
  },
  {
    "text": "that Pi is matching this exponential Q distribution, and it allows us to begin addressing this local optima issue.",
    "start": "1240330",
    "end": "1246825"
  },
  {
    "text": "Now building on this idea, uh, we can do, uh, lots of fancy math.",
    "start": "1246825",
    "end": "1251995"
  },
  {
    "start": "1251000",
    "end": "1721000"
  },
  {
    "text": "So for those of you that are, uh, that like concepts like variational inference, you can actually show that this kind of",
    "start": "1251995",
    "end": "1258030"
  },
  {
    "text": "objective emerges from a particular kind of inference problem. So in optimal control or reinforcement learning,",
    "start": "1258030",
    "end": "1264809"
  },
  {
    "text": "we asked the question, which actions lead to, to an optimal future? Which action maximizes your reward? That's a very reasonable question to ask.",
    "start": "1264810",
    "end": "1271815"
  },
  {
    "text": "In inference, you can imagine asking a slightly different question, but ending u- ending up with a very similar answer,",
    "start": "1271815",
    "end": "1277155"
  },
  {
    "text": "which is, given that your future is optimal, which action would you have taken?",
    "start": "1277155",
    "end": "1282400"
  },
  {
    "text": "It turns out that the answer to that second question is basically exactly that maximum entropy objective.",
    "start": "1282400",
    "end": "1287865"
  },
  {
    "text": "So if we're going to talk about inference, of course, we need to ask inference in what model. So we're going to build up a graphical model,",
    "start": "1287865",
    "end": "1294970"
  },
  {
    "text": "a probabilistic graphical model, that we can use for maximum entropy reinforcement learning. In this graphical model, we're going to have states and actions,",
    "start": "1294970",
    "end": "1302474"
  },
  {
    "text": "that's- that should be familiar to all of you, that's basically how a sequential decision-making process works. But we also need to somehow introduce our rewards.",
    "start": "1302474",
    "end": "1309309"
  },
  {
    "text": "And the way that we will introduce our rewards at first looks a little peculiar, but it actually is going to make a lot of sense.",
    "start": "1309310",
    "end": "1314755"
  },
  {
    "text": "So we're going to introduce these additional auxiliary variables that I'm going to call O for optimality. These variables are not equal to rewards,",
    "start": "1314755",
    "end": "1321894"
  },
  {
    "text": "they're actually binary variables, and our evidence is that those variables are all true. That is to say our evidence is that you are being optimal,",
    "start": "1321895",
    "end": "1329850"
  },
  {
    "text": "given that you are being optimal, what action are you taking? And we're going to define the probability of",
    "start": "1329850",
    "end": "1336060"
  },
  {
    "text": "those variables being true as the exponential of the reward. In a slight regularity condition for this to make sense,",
    "start": "1336060",
    "end": "1341550"
  },
  {
    "text": "which is that your reward needs to always be negative because you can't have, you know, probabilities that are larger than 1.",
    "start": "1341550",
    "end": "1347260"
  },
  {
    "text": "But except for that regularity condition, this is a well-defined probabilistic graphical model.",
    "start": "1347260",
    "end": "1352665"
  },
  {
    "text": "So now the question that you want to answer is, what's the probability of an action given your current state and given that you are always being optimal?",
    "start": "1352665",
    "end": "1360555"
  },
  {
    "text": "So given that you are rational, how likely is a certain action? And if we set up this inference problem, uh,",
    "start": "1360555",
    "end": "1366850"
  },
  {
    "text": "we can actually do basically the usual thing that we do, we can do some va- varia- variable elimination.",
    "start": "1366850",
    "end": "1373360"
  },
  {
    "text": "So I'll walk through this pretty quickly., there'll be lots of equations, but I promise you that they're actually pretty simple equations. So we need to write down the distribution which we're doing inference.",
    "start": "1373360",
    "end": "1382030"
  },
  {
    "text": "So it's a distribution over all of our states and actions because we don't know what those are going to be given our evidence, which is that these optimality variables are true.",
    "start": "1382030",
    "end": "1388995"
  },
  {
    "text": "We have three types of conditional probability distributions in this model, the initial state, p of s_0,",
    "start": "1388995",
    "end": "1395620"
  },
  {
    "text": "our optimality variable probabilities exponential of r, and the transition probabilities p of s_t plus 1, you have an s_t, a_t.",
    "start": "1395620",
    "end": "1403105"
  },
  {
    "text": "We're gonna take this joint, and then we're gonna compute the conditional that we want, which is p of a_t, given s_t comma our evidence.",
    "start": "1403105",
    "end": "1410185"
  },
  {
    "text": "So that's the thing that we want. And the way that we're going to do this is going to be using variational inference,",
    "start": "1410185",
    "end": "1416919"
  },
  {
    "text": "because s's and a's are continuous, huge, so doing this, uh, inference exactly is intractable,",
    "start": "1416919",
    "end": "1422860"
  },
  {
    "text": "but variational inference gives us a nice optimization-based way to solve this inference problem, and it requires us to define a variational distribution.",
    "start": "1422860",
    "end": "1430215"
  },
  {
    "text": "Remember that a variational distribution is just the distribution over all of our hidden variables that has some convenient form that makes inference easy.",
    "start": "1430215",
    "end": "1438340"
  },
  {
    "text": "Usually, we choose the variational distribution to be something really simple like a product of independent marginals.",
    "start": "1438340",
    "end": "1443434"
  },
  {
    "text": "Here, I'm going to make a very peculiar choice for my very short distribution. I'm going to choose it such that it looks a lot like my original distribution.",
    "start": "1443435",
    "end": "1451815"
  },
  {
    "text": "Usually, if you're doing variational inference, this is not a very good idea because the whole point of doing variational inference is to use a simpler variational family than your original model.",
    "start": "1451815",
    "end": "1460885"
  },
  {
    "text": "But it turns out that in this very, very special case, this will lead to a- a very convenient solution.",
    "start": "1460885",
    "end": "1466090"
  },
  {
    "text": "So the way that I'm going to define my variational distribution is by using the same initial state probabilities,",
    "start": "1466090",
    "end": "1471505"
  },
  {
    "text": "the same transition probabilities, and then I'm going to- the only thing that I'm actually going to say that's different is Pi of a given",
    "start": "1471505",
    "end": "1477840"
  },
  {
    "text": "s. So up here I have this exponential r, here I have the Pi. So that's my, uh, variational family.",
    "start": "1477840",
    "end": "1486059"
  },
  {
    "text": "This is just, uh, a, a picture of the, of the variational distribution. So you have this additional edge from s to a,",
    "start": "1486060",
    "end": "1491215"
  },
  {
    "text": "and you no longer have the O's because that's your evidence, and we don't put evidence in our variational distributions. So now, at the variational lower bound,",
    "start": "1491215",
    "end": "1498660"
  },
  {
    "text": "which is what we optimize when we do variational inference, it's simply the KL divergence between Q and p. Um,",
    "start": "1498660",
    "end": "1504100"
  },
  {
    "text": "if you, uh, don't believe me, you can do a little bit of algebra. I promise you this is, this is in fact a correct way to write the variational lower bound.",
    "start": "1504100",
    "end": "1511075"
  },
  {
    "text": "And being a KL divergence, so you can express it as simply the expectation under Q of log Q",
    "start": "1511075",
    "end": "1516270"
  },
  {
    "text": "minus log p. And this is where the cleverness is gonna come in. The reason that we chose our Q in",
    "start": "1516270",
    "end": "1522235"
  },
  {
    "text": "this very peculiar way is that now we're gonna get lots and lots of cancellation. If we actually substitute in our definition of Q and our definition of p into here,",
    "start": "1522235",
    "end": "1531445"
  },
  {
    "text": "we get a huge, huge equation, almost all of which cancels. I- if you're wondering what I did here,",
    "start": "1531445",
    "end": "1536845"
  },
  {
    "text": "is I just put the log of these in here and log of products as sum of logs, so that's where all this stuff comes from.",
    "start": "1536845",
    "end": "1543115"
  },
  {
    "text": "And of course because I chose the p of s_0 here to match the one here, that cancels out, the transition probabilities cancel out,",
    "start": "1543115",
    "end": "1549925"
  },
  {
    "text": "so the only terms that remain are the log Pi's and the rewards. And this is all in expectation under Q, which is this thing.",
    "start": "1549925",
    "end": "1558250"
  },
  {
    "text": "So that's just equal to the sum over all my time steps of the expectation of r,",
    "start": "1558250",
    "end": "1563350"
  },
  {
    "text": "plus the entropy of Pi, which is exactly what we had on the previous slide when we talked about maximum entropy reinforcement learning.",
    "start": "1563350",
    "end": "1570595"
  },
  {
    "text": "So maximum entropy reinforcement learning, its objective is exactly the variational lower bound for this particular variational approximation,",
    "start": "1570595",
    "end": "1578140"
  },
  {
    "text": "which means that we are in fact doing approximate inference in this graphical model.",
    "start": "1578140",
    "end": "1583880"
  },
  {
    "text": "That's pretty neat. That means that, uh, our reinforcement learning procedure now actually corresponds to probabilistic inference.",
    "start": "1583880",
    "end": "1590414"
  },
  {
    "text": "Uh, now, how do we actually optimize that variational lower bound? Uh, well we have a few choices,",
    "start": "1590415",
    "end": "1595515"
  },
  {
    "text": "one choice is to just use policy gradient. Policy gradient is great because you can just write down your objective,",
    "start": "1595515",
    "end": "1600835"
  },
  {
    "text": "calculate its derivatives, and then do gradient ascent, and it'll work. It'll take a huge number of samples, but it will work.",
    "start": "1600835",
    "end": "1607235"
  },
  {
    "text": "Um, if you want to be a little more clever, you can actually modify Q-learning to optimize this objective.",
    "start": "1607235",
    "end": "1612815"
  },
  {
    "text": "It turns out to look like a procedure that greatly resembles message passing. Uh, so how do you modify Q-learning to optimize this objective?",
    "start": "1612815",
    "end": "1620520"
  },
  {
    "text": "I'm not gonna prove this, I'm just gonna state the result but, uh, you can look up the, uh, you know, the explanation for why this is true in this tutorial.",
    "start": "1620520",
    "end": "1628000"
  },
  {
    "text": "So regular Q-learning performs updates like this. So reward plus the max over the next Q, that's the Q-learning algorithm that we all learn from, uh,",
    "start": "1628000",
    "end": "1637159"
  },
  {
    "text": "Richard Sutton's textbook or whatever first reinforcement learning class you took. If you want to modify Q-learning to solve this inference problem,",
    "start": "1637160",
    "end": "1645900"
  },
  {
    "text": "all you do is you replace this max with a seemingly cryptic log of the integral of an exponential.",
    "start": "1645900",
    "end": "1652760"
  },
  {
    "text": "This first- at first this seems like a really bizarre thing to do, what's a log of an integral of an exponential.",
    "start": "1652760",
    "end": "1657865"
  },
  {
    "text": "But imagine for a second that your Q values are very, very big. If your Q values are very, very big,",
    "start": "1657865",
    "end": "1663990"
  },
  {
    "text": "when you exponentiate them, the biggest of them dominates all the rest. When you sum them all together,",
    "start": "1663990",
    "end": "1669969"
  },
  {
    "text": "that sum is entirely dominated by the exponential of the biggest value. So when you take the log,",
    "start": "1669969",
    "end": "1675615"
  },
  {
    "text": "you essentially get back to the biggest value. So if your Q values are very big, then the log of the integral of the exponential is very close to a max.",
    "start": "1675615",
    "end": "1683780"
  },
  {
    "text": "And that makes a lot of sense, because if we're matching distributions, if we're doing this max n thing, and we have one choice that is extremely large,",
    "start": "1683950",
    "end": "1691725"
  },
  {
    "text": "and all other choices are extremely bad, then we'll just put all our mass there, and then we'll do a max.",
    "start": "1691725",
    "end": "1696910"
  },
  {
    "text": "But if all our choices are about equally good, then we wanna put probability mass on all of them and then we have a very soft, uh, max here.",
    "start": "1696910",
    "end": "1703900"
  },
  {
    "text": "That looks more like this one. [NOISE] So all you do is your regular, uh, Q-learning except that instead of a max,",
    "start": "1703900",
    "end": "1710870"
  },
  {
    "text": "you use the log of the integral of exponentials and then you will actually optimize this maximum entropy RL problem.",
    "start": "1710870",
    "end": "1717230"
  },
  {
    "text": "Okay. And then you'll do this nice distribution match. Um, a, a modern algorithm that instantiates",
    "start": "1717230",
    "end": "1724400"
  },
  {
    "start": "1721000",
    "end": "1816000"
  },
  {
    "text": "this basic idea in more of a policy iteration framework rather than a Q-learning framework is called soft actor-critic.",
    "start": "1724400",
    "end": "1730340"
  },
  {
    "text": "Um, some of you probably heard about soft actor-critic in, uh, Kate Rakelly's lecture. Uh, and actually soft actor-critic in fact solves that same inference problem.",
    "start": "1730340",
    "end": "1739730"
  },
  {
    "text": "So it consists of primarily two steps. There's a Q-function update, which updates the Q-function for a given policy.",
    "start": "1739730",
    "end": "1746450"
  },
  {
    "text": "So this is not a Q-star update, this is Q-Pi update, and the only modification there is to incorporate that entropy term, the log Pi.",
    "start": "1746450",
    "end": "1753530"
  },
  {
    "text": "So this will convert to Q-Pi for a given policy under the maximum entropy objective.",
    "start": "1753530",
    "end": "1758540"
  },
  {
    "text": "And then there's a policy update step which is basically the KL divergence. The MaxEnt RL, the KL divergence objective.",
    "start": "1758540",
    "end": "1765019"
  },
  {
    "text": "KL divergence between Pi and this Q-function. And of course in practice you do the usual actor-critic thing which means you take one gradient step on this,",
    "start": "1765020",
    "end": "1772910"
  },
  {
    "text": "one gradient step on that, and then repeat. But if it is a proper policy iteration procedure, you would actually run this thing to convergence,",
    "start": "1772910",
    "end": "1778809"
  },
  {
    "text": "and then run this thing to convergence. And then you interact with the world, collect more data sort of usual RL thing.",
    "start": "1778810",
    "end": "1785585"
  },
  {
    "text": "It turns out that the Q-function update is essentially doing message passing in your graphical model. And the policy update is fitting that variational distribution.",
    "start": "1785585",
    "end": "1795320"
  },
  {
    "text": "So they actually correspond to parts of a well-defined inference procedure.",
    "start": "1795320",
    "end": "1801230"
  },
  {
    "text": "Um, this algorithm works decently well, um, so it, it gets good results on a bunch of benchmark tests.",
    "start": "1801230",
    "end": "1806540"
  },
  {
    "text": "But maybe more interestingly, it actually, uh, exhibits some interesting properties that might suggest that it",
    "start": "1806540",
    "end": "1812990"
  },
  {
    "text": "could alleviate some of these issues that I outlined on the first slide of the lecture. For example, you can use soft actor-critic or in",
    "start": "1812990",
    "end": "1821780"
  },
  {
    "start": "1816000",
    "end": "2080000"
  },
  {
    "text": "general soft optimality algorithm like soft Q-learning to pre-train policies that can then be fine tuned on more narrow objectives.",
    "start": "1821780",
    "end": "1828950"
  },
  {
    "text": "This is not fully unsupervised pre-training yet that will come later, uh, but it's sort of starting to get at that idea.",
    "start": "1828950",
    "end": "1835820"
  },
  {
    "text": "So one of the things you can do is you can train a policy for this little, uh, quadrupedal amp robot with the reward function that says run as fast as possible.",
    "start": "1835820",
    "end": "1847055"
  },
  {
    "text": "Now, let's think about this for a minute. If you reward function is just the norm of your velocity and you run regular reinforcement learning, what will it do?",
    "start": "1847055",
    "end": "1856295"
  },
  {
    "text": "Well, it'll pick a direction arbitrarily and will run in that direction. If you're doing MaxEnt entropy reinforcement learning,",
    "start": "1856295",
    "end": "1862990"
  },
  {
    "text": "our objective is to maximize our reward while being as random as possible. So let's, let's imagine for a second what that would do with",
    "start": "1862990",
    "end": "1869530"
  },
  {
    "text": "an objective that just says maximize the norm of your velocity. Okay. So if you've all thought about it, uh,",
    "start": "1869530",
    "end": "1876590"
  },
  {
    "text": "let's see what it actually does. So this is the soft Q-learning method. There it goes. It's a Halloween special.",
    "start": "1876590",
    "end": "1884299"
  },
  {
    "text": "Uh, it's fright- it's this frightening explosion of spiders. But once you get over the initial scare, you'll notice that,",
    "start": "1884300",
    "end": "1892565"
  },
  {
    "text": "uh, it's actually running in essentially a distribution of possible directions.",
    "start": "1892565",
    "end": "1898340"
  },
  {
    "text": "So it tries to run as- in as many directions as possible because by doing that it can maximize entropy.",
    "start": "1898340",
    "end": "1903455"
  },
  {
    "text": "Now why is this useful other than, uh, you know, uh, scaring people? You can take this thing and you can fine tune it with a specific direction.",
    "start": "1903455",
    "end": "1911810"
  },
  {
    "text": "So you can for example put it into a hallway. And then we're going to fine tune it to run down this hallway.",
    "start": "1911810",
    "end": "1917480"
  },
  {
    "text": "So you'll see this one is initialized randomly, this one is initialized with deterministic RL, and this one is initialized with maximum entropy RL.",
    "start": "1917480",
    "end": "1925775"
  },
  {
    "text": "The initialization from the deterministic RL knows how to run in one specific arbitrary direction which is",
    "start": "1925775",
    "end": "1932210"
  },
  {
    "text": "almost certainly not the direction of this hallway because, uh, you know, it's extremely unlikely that was the one I picked during pre-training.",
    "start": "1932210",
    "end": "1938375"
  },
  {
    "text": "The maximum entropy one knows how to run in all possible directions. So all that has to do is just",
    "start": "1938375",
    "end": "1944315"
  },
  {
    "text": "unlearn all the wrong directions and just keep going in the right direction. So that allows the MaxEnt initialization to learn a lot more quickly in practice.",
    "start": "1944315",
    "end": "1952820"
  },
  {
    "text": "And of course if we look at the plots, that's pretty much what we see. So the blue lines show fine tuning for the MaxEnt initialization and,",
    "start": "1952820",
    "end": "1959840"
  },
  {
    "text": "ah, the green lines show fine tuning for the deterministic, uh, reinforcement learning algorithm.",
    "start": "1959840",
    "end": "1965340"
  },
  {
    "text": "Um, okay, I'll probably skip over the hierarchical policies since I do wanna get more to the,",
    "start": "1966010",
    "end": "1971120"
  },
  {
    "text": "uh, fun unsupervised stuff. But maybe I'll briefly show some- the robot videos as a little intermission.",
    "start": "1971120",
    "end": "1977720"
  },
  {
    "text": "So, uh, besides, uh, generating videos with exploding spiders, we can use this to actually train robots to do interesting tasks in the real world.",
    "start": "1977720",
    "end": "1985460"
  },
  {
    "text": "Um, so this is, uh, a soft Q-learning experiment where we use soft Q-learning to train this Sawyer robot to stack a Lego block.",
    "start": "1985460",
    "end": "1993350"
  },
  {
    "text": "We weren't so much interested as- in, in whether or not it could stack the Lego block. I mean we, we know how to do this part.",
    "start": "1993350",
    "end": "1998690"
  },
  {
    "text": "This is not that difficult, but we wanted to see is whether the injection of that entropy maximization resulted in interesting behavior at test time.",
    "start": "1998690",
    "end": "2005305"
  },
  {
    "text": "So what we did at test time of course is that we went in and we messed with it. We went in and we perturbed the robot",
    "start": "2005305",
    "end": "2011020"
  },
  {
    "text": "to try to see how well it could react to our perturbations. And the reason that it can react to those perturbations is",
    "start": "2011020",
    "end": "2016150"
  },
  {
    "text": "because during training you're maximizing entropy, which means that you are essentially teaching the policy to be resilient to as much injected noise as possible.",
    "start": "2016150",
    "end": "2024380"
  },
  {
    "text": "You can do this on other kinds of robots too. This is a- this is actually soft actor-critic",
    "start": "2026040",
    "end": "2031075"
  },
  {
    "text": "running on a quadrupedal robot that is trying to learn how to walk. Uh, so initially, the robot doesn't know anything.",
    "start": "2031075",
    "end": "2036370"
  },
  {
    "text": "So it sort of wiggles around randomly. Uh, and then after some time passes, it begins making forward progress.",
    "start": "2036370",
    "end": "2042835"
  },
  {
    "text": "And this, uh, this basically learns in about two hours how to walk forward. And once learning is concluded,",
    "start": "2042835",
    "end": "2049345"
  },
  {
    "text": "then you can run the robot and it has a pretty decent- pretty plausible gate.",
    "start": "2049345",
    "end": "2054355"
  },
  {
    "text": "And then again, you can start messing with it and see how much the entropy injection during training actually helped it acquire robust strategies.",
    "start": "2054355",
    "end": "2061494"
  },
  {
    "text": "Of course, they've never seen slopes like this before. So struggles a little bit and you can- if you give it a large enough perturbation, it will eventually fail, but it has some degree of robustness,",
    "start": "2061495",
    "end": "2069250"
  },
  {
    "text": "so it can walk downstairs. It can't actually walk upstairs, that will fail, but it can go downstairs. Uh, and, uh, it can very poorly play Jenga.",
    "start": "2069250",
    "end": "2076600"
  },
  {
    "text": "[LAUGHTER] So, um, and there we go. So that's the- that's maximum entropy RL.",
    "start": "2076600",
    "end": "2082254"
  },
  {
    "start": "2080000",
    "end": "2880000"
  },
  {
    "text": "Now maximum entropy RL is not yet unsupervised reinforcement learning. We still have to give it a reward function,",
    "start": "2082255",
    "end": "2087730"
  },
  {
    "text": "but subject to that reward function, it was learning a breadth of different behaviors. Next, we're gonna talk about how we can",
    "start": "2087730",
    "end": "2094435"
  },
  {
    "text": "actually learn without any reward function at all. So let's think back to this scenario.",
    "start": "2094435",
    "end": "2101200"
  },
  {
    "text": "You buy your household robot, you put it in your kitchen, you turn it on, and you let it work for a whole day,",
    "start": "2101200",
    "end": "2107215"
  },
  {
    "text": "and then you come back in the evening and you give it a goal. And it's supposed to do something during this day that best prepares it for the goal that you're gonna give it. So what can it do?",
    "start": "2107215",
    "end": "2115600"
  },
  {
    "text": "Uh, well, before we talk about what it's gonna do during, during it's day, let's actually first fast-forward and talk about what's gonna happen in the evening.",
    "start": "2115600",
    "end": "2123115"
  },
  {
    "text": "In the evening, you need to give it an objective. And that means that you need an interface. Let's nail down a very simple interface.",
    "start": "2123115",
    "end": "2129400"
  },
  {
    "text": "Let's say that you're gonna show it a state that you want it to reach. So if it's doing things using camera images,",
    "start": "2129400",
    "end": "2136675"
  },
  {
    "text": "then maybe what you're gonna show it is an image. If it's doing things using, you know, a vector of states of all the objects in the world,",
    "start": "2136675",
    "end": "2142404"
  },
  {
    "text": "then you're gonna, you're gonna give it a desired vector of states of objects in the world. So you're gonna give it a goal state.",
    "start": "2142405",
    "end": "2148315"
  },
  {
    "text": "This- I'm not necessarily gonna claim that this is a good interface. It's just a simple one that allows us to get started.",
    "start": "2148315",
    "end": "2153685"
  },
  {
    "text": "It's a little weird to, you know, task your robot by giving it a photograph of the desired outcome. But at least it's simple and we can all understand it.",
    "start": "2153685",
    "end": "2161019"
  },
  {
    "text": "So if that's the interface we're gonna use, then somewhere under the hood, your friendly robot needs to be able to compare two states.",
    "start": "2161020",
    "end": "2169300"
  },
  {
    "text": "And it needs to look at this picture, and it needs to look at this picture, and tell you how similar they are to each other.",
    "start": "2169300",
    "end": "2174445"
  },
  {
    "text": "There are a variety of ways to do this, uh, but the way that we're gonna try to do it is by building a latent variable model",
    "start": "2174445",
    "end": "2180250"
  },
  {
    "text": "whose latent variables are a little bit more meaningful than the original observation space. So if you compare the pixels in an image, the,",
    "start": "2180250",
    "end": "2187945"
  },
  {
    "text": "the resulting distance doesn't really correspond to like the physical proximity of two states, but maybe you can embed those images into",
    "start": "2187945",
    "end": "2194980"
  },
  {
    "text": "some lat- latent space where distances are meaningful and you have a variety of choices for how to do this. GANs will do this.",
    "start": "2194980",
    "end": "2201250"
  },
  {
    "text": "We're gonna use something called variational autoencoders. Just another latent variable model, and there are many choices.",
    "start": "2201250",
    "end": "2207370"
  },
  {
    "text": "And then we're gonna use the latent space of that variational autoencoder to compare two states.",
    "start": "2207370",
    "end": "2212995"
  },
  {
    "text": "And then since we actually have this latent variable model, the way that we're gonna get the robot to practice during the day",
    "start": "2212995",
    "end": "2219160"
  },
  {
    "text": "is by generating samples from that latent variable model. So the robot has a model, it can sample from that model,",
    "start": "2219160",
    "end": "2224620"
  },
  {
    "text": "it can essentially hallucinate potential images, set those as goals for itself and then go and practice reaching them.",
    "start": "2224620",
    "end": "2231415"
  },
  {
    "text": "That makes a lot of sense. I think, you know, that this is a plausible way to practice goals.",
    "start": "2231415",
    "end": "2237025"
  },
  {
    "text": "But there's, um, a pretty substantial problem with this setup. Does anyone have ideas about what problem you might have if we go and do this?",
    "start": "2237025",
    "end": "2244970"
  },
  {
    "text": "It might [inaudible] ? Right. So one answer is that it might- it might set easy goals for itself.",
    "start": "2246150",
    "end": "2254270"
  },
  {
    "text": "Where's the latent variable model gonna come from? We have to train it on data. There's only one source of data, it's the robot,",
    "start": "2254270",
    "end": "2260780"
  },
  {
    "text": "so it's gonna use its own experience to train that latent variable model. Maybe, it  did some random useless stuff. Maybe, it broke the dishes,",
    "start": "2260780",
    "end": "2266405"
  },
  {
    "text": "and now it has lots of data of breaking dishes. So it'll generate more goals of breaking dishes, and it'll just keep going in a loop,",
    "start": "2266405",
    "end": "2271790"
  },
  {
    "text": "essentially doing the thing that it's done successfully before setting those easy goals. So that's no good.",
    "start": "2271790",
    "end": "2277850"
  },
  {
    "text": "What we need is, we need some way to encourage it to diversify. So, um, let's, uh,",
    "start": "2277850",
    "end": "2284000"
  },
  {
    "text": "first sort of outline this algorithm a little bit more precisely. We have our variational autoencoder.",
    "start": "2284000",
    "end": "2289130"
  },
  {
    "text": "That variational autoencoder has a decoder distribution that I'm going to call p theta of x given z, so x is your state or image and z is your latent variable.",
    "start": "2289130",
    "end": "2297035"
  },
  {
    "text": "It has a prior p of z. So if you wanted to sample, your first sample z from p of z and then x from,",
    "start": "2297035",
    "end": "2302450"
  },
  {
    "text": "uh, p theta x given z, and it also has an encoder q phi, uh, z given g-,",
    "start": "2302450",
    "end": "2307760"
  },
  {
    "text": "uh, s, uh, sorry, z given x, that should be z given x. It's a little typo. Um, and the way that",
    "start": "2307760",
    "end": "2314600"
  },
  {
    "text": "your training is going to proceed is that you're going to propose a goal. How do you propose a goal, where you sample from your VE? So sample z from p of z sample x from p of x given z,",
    "start": "2314600",
    "end": "2323480"
  },
  {
    "text": "then you're going to attempt to reach that goal using your policy. So your policy now is pi of a given x comma",
    "start": "2323480",
    "end": "2330950"
  },
  {
    "text": "x g. So it's conditioning your current state and the goal. So you're going to learn this giant policy that-",
    "start": "2330950",
    "end": "2336440"
  },
  {
    "text": "that will attempt to reach all possible goals. Of course, your policy, in general, will not necessarily succeed,",
    "start": "2336440",
    "end": "2342170"
  },
  {
    "text": "it won't reach that goal perfectly, it'll reach some other state, x bar and if it's a very good policy then x bar would be very similar to x g.",
    "start": "2342170",
    "end": "2350285"
  },
  {
    "text": "If it is a very bad policy then x bar will be some random thing, and then you're gonna learn.",
    "start": "2350285",
    "end": "2355955"
  },
  {
    "text": "You're going to use your data to update your policy, and you're going to use your data to update your VE,",
    "start": "2355955",
    "end": "2361535"
  },
  {
    "text": "which means that you're going to change p theta and q phi. Now, of course, in practice,",
    "start": "2361535",
    "end": "2367880"
  },
  {
    "text": "the way that we would implement this is we would, uh, use a replay buffer. So when you attempt to reach the goal, you just add this to your buffer,",
    "start": "2367880",
    "end": "2373640"
  },
  {
    "text": "and then you use all of your data so far to update your policy and your VE, but for now, let's- for simplicity let's think of this as an online algorithm,",
    "start": "2373640",
    "end": "2380555"
  },
  {
    "text": "that will just keep things a little simple, and then of course, you repeat. So this easy goals problem happens because we use this data that we actually,",
    "start": "2380555",
    "end": "2388490"
  },
  {
    "text": "obtained from this policy to update our goal proposer which will then propose more goals that looked like the states were reached and will",
    "start": "2388490",
    "end": "2395230"
  },
  {
    "text": "start going in a circle and not actually, do anything interesting. So intuitively, what we'd like to do,",
    "start": "2395230",
    "end": "2401410"
  },
  {
    "text": "is we'd like to up weight those goals that seem more interesting to us.",
    "start": "2401410",
    "end": "2406430"
  },
  {
    "text": "So if your robot lives in a 2D environment, and these little circles denote the states that it had visited.",
    "start": "2406430",
    "end": "2412760"
  },
  {
    "text": "If you have a big clump of stuff over here and you have these really rare things that you reached out of the fringes.",
    "start": "2412760",
    "end": "2418339"
  },
  {
    "text": "Intuitively, what you'd like to do is to somehow up-weight these rare things, and do those more often because those are probably the harder,",
    "start": "2418340",
    "end": "2424340"
  },
  {
    "text": "the more interesting goals. So maybe, if you somehow up-weight them, and then fit your model,",
    "start": "2424340",
    "end": "2430610"
  },
  {
    "text": "and then propose from that model, when you then go to reach those goals you might actually, end up putting more mass onto the tails of your distribution, and gradually, expand.",
    "start": "2430610",
    "end": "2439130"
  },
  {
    "text": "And we'll make this very vague notion a little bit more precise, later. So in order to do something like that,",
    "start": "2439130",
    "end": "2447395"
  },
  {
    "text": "all we really have to do is we have to modify this last step because step four,",
    "start": "2447395",
    "end": "2452720"
  },
  {
    "text": "is the step that actually, uses your data to change which goals we propose in the future, and we need to modify step four,",
    "start": "2452720",
    "end": "2459575"
  },
  {
    "text": "so that if the state x bar that you reached was very interesting, it should get a bigger weight and if it was very boring it should get smaller weight.",
    "start": "2459575",
    "end": "2468365"
  },
  {
    "text": "Now, interesting and boring here means, is it a state that you've reached, often or is it the state that you've reached, rarely?",
    "start": "2468365",
    "end": "2473870"
  },
  {
    "text": "[NOISE] So that's this step. [NOISE] Here's how you can do it.",
    "start": "2473870",
    "end": "2479180"
  },
  {
    "text": "Standard maximum likelihood estimation will basically, train your VAE to maximize some approximation to the log likelihood of x bar.",
    "start": "2479180",
    "end": "2488885"
  },
  {
    "text": "Now, if it's a VAE you're actually using a variational lower bound to approximate this because you can't evaluate log p of x bar,",
    "start": "2488885",
    "end": "2494720"
  },
  {
    "text": "exactly but some approximation to log p of x bar. Weighted maximum likelihood estimation exactly,",
    "start": "2494720",
    "end": "2501230"
  },
  {
    "text": "as the name might imply will just put a little multiplier on this and this multiplier is some function of x bar,",
    "start": "2501230",
    "end": "2507005"
  },
  {
    "text": "and by choosing that multiplier carefully, we can actually, create this effect where the interesting or rare outcomes are",
    "start": "2507005",
    "end": "2514060"
  },
  {
    "text": "up-weighted and the uninteresting or common outcomes are down-weighted.",
    "start": "2514060",
    "end": "2519160"
  },
  {
    "text": "All we do, is we use our previous density estimator, our p theta x bar or some approximation thereof.",
    "start": "2519160",
    "end": "2526245"
  },
  {
    "text": "Raised to some power alpha, where alpha is between negative 1 and 0, so it's basically, gonna be,",
    "start": "2526245",
    "end": "2531710"
  },
  {
    "text": "uh, it's- it- the- the weight is smaller for larger probabilities to weight our likelihood.",
    "start": "2531710",
    "end": "2538115"
  },
  {
    "text": "So that means that, if a particular x bar is extremely probable, it's in this really dense region,",
    "start": "2538115",
    "end": "2543385"
  },
  {
    "text": "then when you raise it to the power, let's say, negative 0.5, it'll get a much smaller weight.",
    "start": "2543385",
    "end": "2549060"
  },
  {
    "text": "If it's very rare, it's probabilities like 0.0001, then you raise it to some negative power and you get a really big weight.",
    "start": "2549060",
    "end": "2556880"
  },
  {
    "text": "So that'll do exactly what we wanted, we'll up-weight these things in the tails and the interesting result that you can prove which is described in the second paper,",
    "start": "2556880",
    "end": "2564710"
  },
  {
    "text": "Dalal, Pong, Lin et al, is that for any alpha between negative 1 and 0,",
    "start": "2564710",
    "end": "2570155"
  },
  {
    "text": "following this procedure actually, increases the entropy of p theta of x.",
    "start": "2570155",
    "end": "2576125"
  },
  {
    "text": "Now, if you increase the entropy every single step, and you can prove that it doesn't asymptote to something",
    "start": "2576125",
    "end": "2582020"
  },
  {
    "text": "suboptimal and eventually, you get full entropy. You get the highest entropy distribution that you can have, and the highest entropy distribution that you can have is",
    "start": "2582020",
    "end": "2588589"
  },
  {
    "text": "the uniform distribution over all valid states. Question? [inaudible]",
    "start": "2588590",
    "end": "2596150"
  },
  {
    "text": "Right. So the question was, at each step why don't you just uniformly sample from the state space? If you could uniformly sample from the state space that would be a better algorithm.",
    "start": "2596150",
    "end": "2604055"
  },
  {
    "text": "The trouble that we have is that our, uh, observations or our states here. These Xs they might be for example,",
    "start": "2604055",
    "end": "2610820"
  },
  {
    "text": "images from the robot's camera. Uni-formally, sampling images, uh, by itself doesn't actually produce",
    "start": "2610820",
    "end": "2616820"
  },
  {
    "text": "uniformly sampled valid states because most random images are kind of static, they're white noise.",
    "start": "2616820",
    "end": "2622430"
  },
  {
    "text": "So what you want is you want uniformly sampled valid states, and that can be a really complex manifold in the space of all possible x vectors.",
    "start": "2622430",
    "end": "2630215"
  },
  {
    "text": "So essentially, you can view this procedure as a really fancy way of discovering that uniform distribution.",
    "start": "2630215",
    "end": "2635585"
  },
  {
    "text": "Any other questions? [BACKGROUND] Okay.",
    "start": "2635585",
    "end": "2640775"
  },
  {
    "text": "Um, so now we have, uh, we've- we've defined how this step is going to work,",
    "start": "2640775",
    "end": "2646940"
  },
  {
    "text": "we just use this w which is- which comes from using our previous density estimator, and now we can ask the question, what is the objective for this procedure?",
    "start": "2646940",
    "end": "2655235"
  },
  {
    "text": "So we kinda cooked up this recipe but what is this recipe doing? Is it actually optimizing some well-defined objective?",
    "start": "2655235",
    "end": "2660875"
  },
  {
    "text": "And that's where things get a little bit interesting. So if your entropy increases every step,",
    "start": "2660875",
    "end": "2666904"
  },
  {
    "text": "you can actually show that under a few additional conditions, what you're actually optimizing is the entropy of your goal distribution.",
    "start": "2666905",
    "end": "2675230"
  },
  {
    "text": "So this p of g this is the distribution of your goals which are coming from your VE. So you're increasing that entropy,",
    "start": "2675230",
    "end": "2680750"
  },
  {
    "text": "so you're maximizing that entropy, and you can show that this is actually true. But that's not all that you're doing, you're not just training a VE,",
    "start": "2680750",
    "end": "2686870"
  },
  {
    "text": "you're also training a policy. So your goals get higher entropy due to this skew fit procedure,",
    "start": "2686870",
    "end": "2693724"
  },
  {
    "text": "but what does RL do? Well, your policy pi,",
    "start": "2693724",
    "end": "2699635"
  },
  {
    "text": "and I'm gonna rewrite it as pi of a given S, G just to make it very explicit that there's a state and there is a goal.",
    "start": "2699635",
    "end": "2705845"
  },
  {
    "text": "It's being trained to reach goals, and if it does a very good job of reaching those goals then it will reach a state,",
    "start": "2705845",
    "end": "2713945"
  },
  {
    "text": "its final state S that is close to the goal, and in fact, that might even be equal to the goal.",
    "start": "2713945",
    "end": "2719195"
  },
  {
    "text": "So what that means is that as your policy gets better and better,",
    "start": "2719195",
    "end": "2724265"
  },
  {
    "text": "it becomes easier and easier to predict what the goal was from looking at the state that it reached. So if the policy is very good,",
    "start": "2724265",
    "end": "2730670"
  },
  {
    "text": "if it always reaches the goal then G is equal to S. So P of G given S,",
    "start": "2730670",
    "end": "2736520"
  },
  {
    "text": "is a very low entropy distribution. Now, where have we seen that before? We're making one entropy big and we're making some conditional entropy small.",
    "start": "2736520",
    "end": "2743450"
  },
  {
    "text": "[BACKGROUND] So if that's our objective,",
    "start": "2743450",
    "end": "2748925"
  },
  {
    "text": "that's actually, exactly the mutual information between S and G and that's kinda cool.",
    "start": "2748925",
    "end": "2754700"
  },
  {
    "text": "Somehow, we had this kind of cooked up procedure involving VEs and maximizing entropies and- and up-weighting things,",
    "start": "2754700",
    "end": "2760805"
  },
  {
    "text": "and all that turns into is just the mutual information between the last state that you reaching your trajectory,",
    "start": "2760805",
    "end": "2766429"
  },
  {
    "text": "and your goal, and if you maximize that mutual information, then you end up successfully, reaching a wide range of goals.",
    "start": "2766429",
    "end": "2773869"
  },
  {
    "text": "So maximize mutual information between S and G, at least a good exploration because you're trying to make this first entropy term big,",
    "start": "2773870",
    "end": "2780965"
  },
  {
    "text": "and it leads to effective goal reaching because you're trying to make that second entropy small, and of course, there are other ways to approximate",
    "start": "2780965",
    "end": "2788780"
  },
  {
    "text": "that mutual information of which this algorithm is just one of them. Any questions about this?",
    "start": "2788780",
    "end": "2795420"
  },
  {
    "text": "Okay. Again, I- I'm contractually obligated to show you robot videos.",
    "start": "2800000",
    "end": "2805984"
  },
  {
    "text": "So, ah, we ran this thing on a robot and, ah, therefore what we have to show this to you, uh,",
    "start": "2805985",
    "end": "2811520"
  },
  {
    "text": "at zero hours so that what, what is this robot doing first of all? It's, it's a robotic arm, It's placed in front of a door,",
    "start": "2811520",
    "end": "2816890"
  },
  {
    "text": "ah, you might think that it's told to open the door, it's not told to open the door, it's just placed in front of the door but that's a very suggestive way to,",
    "start": "2816890",
    "end": "2822380"
  },
  {
    "text": "ah, set up your robot. So of course initially, what it's going to do is it's gonna wiggle its hand a little bit because that's",
    "start": "2822380",
    "end": "2828619"
  },
  {
    "text": "the most obvious thing to do for an untrained reinforcing learning algorithm, but pretty quickly it figures out that hand wiggling results in",
    "start": "2828620",
    "end": "2834800"
  },
  {
    "text": "images that have a high probability under its VAE and it starts proposing all sorts of other goals that involve actually interacting with the door because",
    "start": "2834800",
    "end": "2841250"
  },
  {
    "text": "that allows it to achieve outcomes that have a low probability under its VAE, and then that probability increases,",
    "start": "2841250",
    "end": "2846804"
  },
  {
    "text": "and it opens the door to all sorts of different angles. And then at the end once it's all trained, it can actually open this door to any angle that you want,",
    "start": "2846804",
    "end": "2853485"
  },
  {
    "text": "ah, without actually being told in advance that door opening is what you're supposed to do. So you can think of this as a very, very limited version of that household robot,",
    "start": "2853485",
    "end": "2860990"
  },
  {
    "text": "where it's not placed in a messy kitchen, it's placed in this admittedly rather pristine laboratory setting,",
    "start": "2860990",
    "end": "2866270"
  },
  {
    "text": "but maybe a step in the right direction. And you can test it, you can give it different goal states.",
    "start": "2866270",
    "end": "2871609"
  },
  {
    "text": "So here, um, a person is actually giving it pictures and we're just testing to make sure that it can open the door to every desired angle.",
    "start": "2871610",
    "end": "2880010"
  },
  {
    "start": "2880000",
    "end": "2945000"
  },
  {
    "text": "All right. So that was learning with goals. Now, the next thing that I'm going to talk about is kind of",
    "start": "2880010",
    "end": "2887120"
  },
  {
    "text": "a state distribution matching formulation of reinforcement learning that generalizes these ideas a little bit further.",
    "start": "2887120",
    "end": "2893059"
  },
  {
    "text": "So remember before I talked about this MaxEnt RL thing,",
    "start": "2893060",
    "end": "2898235"
  },
  {
    "text": "which matches action distributions, and I also talked about how we can maximize the entropy of possible goals.",
    "start": "2898235",
    "end": "2906515"
  },
  {
    "text": "So can we somehow combine these ideas to match state distribution? So instead of just making your state distribution as broad as possible,",
    "start": "2906515",
    "end": "2913460"
  },
  {
    "text": "can you say match a distribution in state space rather than in action space?",
    "start": "2913460",
    "end": "2919714"
  },
  {
    "text": "It's potentially quite useful because then you can go and explore diverse states under a prior over good states.",
    "start": "2919715",
    "end": "2926450"
  },
  {
    "text": "So if- so maybe your household robot, uh, needs to be told in advance, I don't care about states where my dishes are broken,",
    "start": "2926450",
    "end": "2933184"
  },
  {
    "text": "I don't care about states where, you know, you threw my vase out the window. All the other states, those I care about.",
    "start": "2933185",
    "end": "2938450"
  },
  {
    "text": "So do everything except for breaking my dishes and throwing stuff out the window, and then you're gonna have a much more coherent exploration strategy.",
    "start": "2938450",
    "end": "2944955"
  },
  {
    "text": "So before I describe how to do this, as an aside, let me describe something that does not solve this problem.",
    "start": "2944955",
    "end": "2951625"
  },
  {
    "start": "2945000",
    "end": "3073000"
  },
  {
    "text": "It, it might seem like it solves us from but it doesn't, and it's something called ex- intrinsic motivation.",
    "start": "2951625",
    "end": "2956965"
  },
  {
    "text": "So this is a common method for doing exploration in non-information theoretic settings.",
    "start": "2956965",
    "end": "2963485"
  },
  {
    "text": "You incentivize your policy Pi of a given s to explore diverse states before it sees any reward.",
    "start": "2963485",
    "end": "2970744"
  },
  {
    "text": "And the way that you do it is by rewarding visiting states that are novel. This first seems like it's very,",
    "start": "2970745",
    "end": "2975770"
  },
  {
    "text": "very similar to what I discussed before but it actually leads to very different outcomes. So if a state is visited often, it's not novel,",
    "start": "2975770",
    "end": "2981800"
  },
  {
    "text": "if a state is visited rarely, then it is novel, and the way that we do this, this is kind of very standard, uh,",
    "start": "2981800",
    "end": "2987755"
  },
  {
    "text": "reward bonus exploration is by adding a little term to our reward function based on",
    "start": "2987755",
    "end": "2993079"
  },
  {
    "text": "the negative log p Pi of s. So you estimate how often your policy visits each state and then subtract those log probabilities from your reward,",
    "start": "2993080",
    "end": "3000325"
  },
  {
    "text": "and that'll get your policy to receive larger rewards for states that have visited rarely.",
    "start": "3000325",
    "end": "3005780"
  },
  {
    "text": "So you update your policy to maximize this expected, the expected value of this modified reward,",
    "start": "3006150",
    "end": "3011934"
  },
  {
    "text": "update your p Pi, update your estimate of the state marginal, and then repeat.",
    "start": "3011935",
    "end": "3017065"
  },
  {
    "text": "And what does this do? Well, let's say that initially your policy does this. You fit your state distribution,",
    "start": "3017065",
    "end": "3023529"
  },
  {
    "text": "you get this green circle. It's a little faint on the slide but there's little old green circle that I actually drew around this thing.",
    "start": "3023530",
    "end": "3029319"
  },
  {
    "text": "So then anything inside that green circle gets a lower reward because it has higher probability. Everything outside that circle gets",
    "start": "3029320",
    "end": "3035170"
  },
  {
    "text": "a higher reward be- because there's lower probability. So what does the policy do? Well, it goes somewhere else and then your distribution changes,",
    "start": "3035170",
    "end": "3043690"
  },
  {
    "text": "and then it goes somewhere else, and so on. So your policy does end up going to lots of",
    "start": "3043690",
    "end": "3048700"
  },
  {
    "text": "different places but at any given point in time, your policy is not actually covering the space, it's just going to some arbitrary location.",
    "start": "3048700",
    "end": "3055735"
  },
  {
    "text": "It'll go somewhere else next time. So this distribution keeps chasi- chasing your policy and your policy keeps changing.",
    "start": "3055735",
    "end": "3061630"
  },
  {
    "text": "At no instant in time, do you actually have a policy that covers the space. So it kind of seems like it's very close to the right answer,",
    "start": "3061630",
    "end": "3068530"
  },
  {
    "text": "but it's not quite the right answer. There's something missing. So can we fill in this missing piece?",
    "start": "3068530",
    "end": "3077320"
  },
  {
    "text": "Can we somehow change this intrinsic motivation method so that it actually matches a desired state distribution?",
    "start": "3077320",
    "end": "3083395"
  },
  {
    "text": "It turns out that it's not actually that hard. So the state marginal matching problem is to learn a policy Pi so as to minimize",
    "start": "3083395",
    "end": "3090069"
  },
  {
    "text": "the KL divergence between that policy state marginal and a desired state marginal.",
    "start": "3090070",
    "end": "3095410"
  },
  {
    "text": "So you have a target density and our idea is to somehow utilize this intrinsic motivation, uh, principle.",
    "start": "3095410",
    "end": "3101875"
  },
  {
    "text": "So we're going to define our reward function as log of, uh, our desired probability minus the log of our current, uh, probability.",
    "start": "3101875",
    "end": "3112075"
  },
  {
    "text": "So this is starting to look a lot like, uh, uh, KL divergence, it's also starting to look a lot like intrinsic motivation.",
    "start": "3112075",
    "end": "3118765"
  },
  {
    "text": "Now, this by itself doesn't yet perform marginal matching because your policy keeps getting",
    "start": "3118765",
    "end": "3123930"
  },
  {
    "text": "chased around like this your policy never actually ends up, uh, matching the distribution, but it's very close.",
    "start": "3123930",
    "end": "3130795"
  },
  {
    "text": "So the procedure is you, you learn your Pi_k and I'm going to actually gonna put the superscript k to denote",
    "start": "3130795",
    "end": "3136240"
  },
  {
    "text": "the policy iteration k to maximize the expected value of your reward r_k.",
    "start": "3136240",
    "end": "3141760"
  },
  {
    "text": "So r_k means that the p Pi is actually p Pi_k, you update your distribution to fit the state marginal to",
    "start": "3141760",
    "end": "3149320"
  },
  {
    "text": "get p Pi_k plus 1 and then you repeat. And let's say this orange circle is my desired distribution.",
    "start": "3149320",
    "end": "3157555"
  },
  {
    "text": "So by itself, my policy will sort of try to escape from my,",
    "start": "3157555",
    "end": "3162849"
  },
  {
    "text": "uh, distribution, it will keep getting chased around and never actually match the thing. So what if instead,",
    "start": "3162850",
    "end": "3169750"
  },
  {
    "text": "we update our distribution p Pi_k to fit all the states seen so far? Um, so that will take care of one side of the problem because now",
    "start": "3169750",
    "end": "3177940"
  },
  {
    "text": "we're actually- we're not just matching distribution from the current policy, we're matching distribution from all policies. And then what we return at the end is not the last Pi_k but",
    "start": "3177940",
    "end": "3187825"
  },
  {
    "text": "the mixture of all the policies seen so far because remember these policies were running all over the state space.",
    "start": "3187825",
    "end": "3194125"
  },
  {
    "text": "It went here, it went there, it went there, no one policy covers the space but the ensemble of all policies together does actually cover the space.",
    "start": "3194125",
    "end": "3202735"
  },
  {
    "text": "And it's not actually just a vague intuition, it turns out that, uh, you can actually show that this ends up being, uh,",
    "start": "3202735",
    "end": "3209275"
  },
  {
    "text": "the Nash equilibrium for a two-player game, where one player is trying to, uh,",
    "start": "3209275",
    "end": "3214915"
  },
  {
    "text": "basically optimize this objective and the other one is trying to match the distribution. This is a, a technique called a",
    "start": "3214915",
    "end": "3222055"
  },
  {
    "text": "self-player or someone referred to as historical averaging, where if you're optimizing these objectives",
    "start": "3222055",
    "end": "3227080"
  },
  {
    "text": "in alternating fashion the way that you actually recover at equilibrium, which has to be a stochastic policy, is by averaging together the iterates.",
    "start": "3227080",
    "end": "3233635"
  },
  {
    "text": "So this, this is just like a theorem that you can look up. Very simple modification to intrinsic motivation,",
    "start": "3233635",
    "end": "3238885"
  },
  {
    "text": "turns out to actually match distributions. So it's a game between the two players,",
    "start": "3238885",
    "end": "3244120"
  },
  {
    "text": "the players are Pi_k and p Pi_k. And of course, there's a special case of this where if you",
    "start": "3244120",
    "end": "3250600"
  },
  {
    "text": "choose p_star to be a constant, meaning the uniform distribution, uh,",
    "start": "3250600",
    "end": "3256495"
  },
  {
    "text": "then you're just maximizing state entropy, and then, then you recover the algorithm from the previous section.",
    "start": "3256495",
    "end": "3262190"
  },
  {
    "text": "Okay. So does this work? Um, the answer is that it basically does.",
    "start": "3262740",
    "end": "3269290"
  },
  {
    "start": "3263000",
    "end": "3324000"
  },
  {
    "text": "So this is a, a comparison between soft Actor-Critic, which is a maximum entropy reinforcing learning algorithm that matches",
    "start": "3269290",
    "end": "3275214"
  },
  {
    "text": "action distributions versus the state marginal matching method which matches state distributions.",
    "start": "3275215",
    "end": "3280285"
  },
  {
    "text": "And there's a heat map visualizing this little quadrupedal robot running around in this little funny world with three hallways.",
    "start": "3280285",
    "end": "3287725"
  },
  {
    "text": "And you can see that the heat map or say marginal matching is much more uniform. This is trying to match a uniform distribution.",
    "start": "3287725",
    "end": "3292930"
  },
  {
    "text": "Um, I'll skip over this. Here it's trying to match kind of a funny lopsided distribution.",
    "start": "3292930",
    "end": "3298750"
  },
  {
    "text": "So it's trying to move this little block to different places and we tell it we want the left side to be twice as likely as the right side.",
    "start": "3298750",
    "end": "3305800"
  },
  {
    "text": "Now, of course it can't match it perfectly. The red line is a state marginal matching because that's contend with the dynamics of the real world.",
    "start": "3305800",
    "end": "3311260"
  },
  {
    "text": "So you can't go to the left side without passing through at least a little bit of the right- right side. But you can see that it's a little bit more skewed to the left,",
    "start": "3311260",
    "end": "3317080"
  },
  {
    "text": "so it's a lot more probability mass on the left side, a lot less than the right side. So kinda seems to be doing something.",
    "start": "3317080",
    "end": "3323720"
  },
  {
    "text": "All right. But maybe the next question that I wanna ask and I think that's",
    "start": "3323790",
    "end": "3330160"
  },
  {
    "start": "3324000",
    "end": "3344000"
  },
  {
    "text": "an important question is- is this actually a good way to explore like intuitively kinda make sense.",
    "start": "3330160",
    "end": "3335770"
  },
  {
    "text": "You want to see lots of different things in the world so you wanna get good coverage. So you wanna maximize your state entropy.",
    "start": "3335770",
    "end": "3340960"
  },
  {
    "text": "Is it actually a good idea to maximize state entropy. So is state entropy really a good objective and if",
    "start": "3340960",
    "end": "3346480"
  },
  {
    "text": "it's a good objective what does a good objective for? So, you know, just to sort of recap what we saw before,",
    "start": "3346480",
    "end": "3353380"
  },
  {
    "text": "the skew-fit does this, you know mutual information between states and goals, which corresponds to maximizing goal entropy and minimizing goal given state entropy.",
    "start": "3353380",
    "end": "3362560"
  },
  {
    "text": "State marginal matching in the special case where you choose P star to be a constant also maximizes a state entropy.",
    "start": "3362560",
    "end": "3368410"
  },
  {
    "text": "So it seems like this is something we kind of know how to do. They're more or less the same thing. But when is this a good idea?",
    "start": "3368410",
    "end": "3375290"
  },
  {
    "text": "So one place where it's a good idea, and I'm gonna quote Eysenbach's theorem.",
    "start": "3376980",
    "end": "3383770"
  },
  {
    "text": "It's not actually a theorem. It's just Ben Eysenbach was the one who- who told me about it.",
    "start": "3383770",
    "end": "3388869"
  },
  {
    "text": "But it's, uh, it follows trivially from a classic maximum entropy modeling and result. So don't take the name or the fact that I call it a theorem too seriously.",
    "start": "3388870",
    "end": "3397750"
  },
  {
    "text": "Um, It says that if at test time an adversary will choose the worst goal,",
    "start": "3397750",
    "end": "3404260"
  },
  {
    "text": "meaning that when you come home after letting your robot run all day, you know what your robot is good at and you're gonna choose the worst possible thing.",
    "start": "3404260",
    "end": "3412195"
  },
  {
    "text": "You're like the world's worst robot owner. If that's what you're going to do, then the- the best goal distribution to use for",
    "start": "3412195",
    "end": "3421330"
  },
  {
    "text": "training is actually the one with the largest entropy. So if the robot knows that you're gonna to be the worst possible robot owner,",
    "start": "3421330",
    "end": "3429340"
  },
  {
    "text": "then the optimal thing for that robot to do without any other knowledge about what kind of goal you might propose is to maximize the entropy of goals.",
    "start": "3429340",
    "end": "3436599"
  },
  {
    "text": "And this follows directly from the equivalence between maximum entropy modeling and the adversarial formulation where you maximize p and minimize q.",
    "start": "3436600",
    "end": "3446230"
  },
  {
    "text": "So if you read about maximum entropy models, it's just basically a trivial corollary to that.",
    "start": "3446230",
    "end": "3451569"
  },
  {
    "text": "So if you wanna read a little bit more about this idea, it's summarized in this paper called Unsupervised Meta-Learning for Reinforcement Learning,",
    "start": "3451570",
    "end": "3458065"
  },
  {
    "text": "which I'll come back to later. But the short version is that there is actually a kind of a principled reason to suppose that maximizing state entropy is good,",
    "start": "3458065",
    "end": "3466540"
  },
  {
    "text": "uh, because it makes you robust in the face of the worst-case human so to speak.",
    "start": "3466540",
    "end": "3473930"
  },
  {
    "text": "And another actually excellent paper to read about some theoretical reasons",
    "start": "3474000",
    "end": "3480100"
  },
  {
    "text": "why high state might be a good idea is this paper called Provably Efficient Maximum Entropy Exploration by Hazan et al.",
    "start": "3480100",
    "end": "3485530"
  },
  {
    "text": "So if you're interested in some of the theoretical foundations for this, I highly recommend that paper. Okay. So the next kind of algorithmic idea I wanna discuss a little bit is how we can go",
    "start": "3485530",
    "end": "3498430"
  },
  {
    "start": "3493000",
    "end": "3600000"
  },
  {
    "text": "a little bit beyond just covering states and actually think about covering the space of possible skills.",
    "start": "3498430",
    "end": "3506049"
  },
  {
    "text": "So, so far, all of the unsupervised RL algorithms we've talked about, they are attempting to reach goals or reach states,",
    "start": "3506050",
    "end": "3512980"
  },
  {
    "text": "maximize standard, reach that sort of thing. But there's more to behavior than just reaching states.",
    "start": "3512980",
    "end": "3519100"
  },
  {
    "text": "So next, I'm gonna talk about learning diverse skills. So a skill- you know,",
    "start": "3519100",
    "end": "3526645"
  },
  {
    "text": "I'm gonna define skill in a very peculiar way. Don't take this kind of too seriously but I just need a term for it so I'm going to call it a skill.",
    "start": "3526645",
    "end": "3533305"
  },
  {
    "text": "I'm gonna to have a policy pie that gives a distribution over actions, conditioned on states,",
    "start": "3533305",
    "end": "3538915"
  },
  {
    "text": "and conditioned over the- on the Z before this was a goal but now it's just gonna be a task index.",
    "start": "3538915",
    "end": "3544885"
  },
  {
    "text": "What's a task index it's- it's an integer. It's gonna be like zero, one, two, three.",
    "start": "3544885",
    "end": "3549940"
  },
  {
    "text": "And intuitively, if you want diverse skills, then what you want this pi to do is you want it to go to-",
    "start": "3549940",
    "end": "3556210"
  },
  {
    "text": "to go into different things for different values of Z. So maybe, if you give it a z of 0,",
    "start": "3556210",
    "end": "3563130"
  },
  {
    "text": "you should you- should have it like go up here; if you give it a z of 1, it should go over here; a z of 2 should go there. So basically different z's should do different things.",
    "start": "3563130",
    "end": "3571565"
  },
  {
    "text": "Okay. That kinda makes sense. Um, now, like integers do this",
    "start": "3571565",
    "end": "3577900"
  },
  {
    "text": "with maximum entropy reinforcement learning or that goal reaching thing. Well, so maximum entropy RL,",
    "start": "3577900",
    "end": "3584395"
  },
  {
    "text": "it just does action entropy. Action entropy is not the same as covering the space of skills.",
    "start": "3584395",
    "end": "3589450"
  },
  {
    "text": "So you'll take different actions but you might actually end up in very similar places from taking very different actions. So that's not quite what we want.",
    "start": "3589450",
    "end": "3595435"
  },
  {
    "text": "You can take different actions and land on similar states. Reaching diverse goals is not the same as performing",
    "start": "3595435",
    "end": "3601329"
  },
  {
    "text": "diverse tasks either and that- that's a little bit more subtle. The reason for this is that not all behaviors can be captured by goal reaching.",
    "start": "3601330",
    "end": "3609895"
  },
  {
    "text": "Let me give you an example of a behavior that cannot be captured by goal reaching. This is my- my favorite quadrupedal robot.",
    "start": "3609895",
    "end": "3616300"
  },
  {
    "text": "It needs to go to this green location and it needs to avoid this red thing at all costs. So maybe the red thing is the- is the fire pit of death.",
    "start": "3616300",
    "end": "3623365"
  },
  {
    "text": "That's where you're not allowed to go. The green thing is your- is your favorite object in the world.",
    "start": "3623365",
    "end": "3628825"
  },
  {
    "text": "If you just try to reach this green state, then you'll go straight through the bad red thing.",
    "start": "3628825",
    "end": "3634165"
  },
  {
    "text": "So you cannot frame this as a pure goal reaching problem. Now, this task can still be defined in terms of states is just that",
    "start": "3634165",
    "end": "3641560"
  },
  {
    "text": "now the state of distribution that you want is more complicated. There are some states that you want to not land, then in some other states, you want to land on as often as possible.",
    "start": "3641560",
    "end": "3649880"
  },
  {
    "text": "And then to go back to the MaxEnt stuff you know the MaxEnt RL policies are stochastic but they're not always controllable.",
    "start": "3651300",
    "end": "3657790"
  },
  {
    "text": "So they- they'll do- they, you know, if you remember that, uh, the ant running in all possible directions,",
    "start": "3657790",
    "end": "3663114"
  },
  {
    "text": "we couldn't really tell which direction to run, it just randomly runs in random directions. Here we want something very controllable.",
    "start": "3663114",
    "end": "3668245"
  },
  {
    "text": "We want different task indices to correspond to different coherent behaviors.",
    "start": "3668245",
    "end": "3673430"
  },
  {
    "text": "So the intuition behind the method that I'm gonna describe is that different skills,",
    "start": "3674100",
    "end": "3679615"
  },
  {
    "text": "different values of z should visit different state-space regions. Not necessarily different goals but different regions.",
    "start": "3679615",
    "end": "3687835"
  },
  {
    "text": "And this generalizes the notion of goals. So here's how we can do it.",
    "start": "3687835",
    "end": "3693220"
  },
  {
    "text": "We're going to use a diversity promoting reward function. So when you train your policy,",
    "start": "3693220",
    "end": "3699234"
  },
  {
    "text": "you're always gonna train it the same way. You're gonna to train it with RL. Maybe maximum entropy RL but some kind of a reward maximizing thing maybe with an entropy term.",
    "start": "3699234",
    "end": "3707680"
  },
  {
    "text": "And the thing that you get to choose is this reward, right? So we're going to train our policy to be the arg max of some expected reward.",
    "start": "3707680",
    "end": "3716230"
  },
  {
    "text": "And of course, we have many different z's. So we'll sum that over all possible Zs. The choice that we have to make is the choice of R,",
    "start": "3716230",
    "end": "3722770"
  },
  {
    "text": "and our R will depend on Z. So different tasks have different rewards but of course we can't design them manually.",
    "start": "3722770",
    "end": "3728589"
  },
  {
    "text": "We have to somehow acquire them automatically. So we'll make a very simple choice.",
    "start": "3728590",
    "end": "3733855"
  },
  {
    "text": "We'll reward states that are unlikely for other Zs.",
    "start": "3733855",
    "end": "3739825"
  },
  {
    "text": "We'll say you get a big reward if you go to a state that's very likely for the current Z and very unlikely for the other Zs.",
    "start": "3739825",
    "end": "3748180"
  },
  {
    "text": "And that'll encourage the Zs to specialize. So the way that you do this if you want to,",
    "start": "3748180",
    "end": "3755635"
  },
  {
    "text": "uh, think about how this can be done mechanically, is you train a classifier. You train a classifier that predicts p of z given s. What is p of z given s?",
    "start": "3755635",
    "end": "3764560"
  },
  {
    "text": "Well, z is an integer, s is a state. So you can treat z as a basic categorical labels p of z given s to",
    "start": "3764560",
    "end": "3770320"
  },
  {
    "text": "classify the classifies which integer was fed into your policy that resulted in it visiting the state s.",
    "start": "3770320",
    "end": "3777234"
  },
  {
    "text": "So if I see you going somewhere because somebody gave you a command, what I'm trying to guess is what command were you given that caused you to go over there.",
    "start": "3777235",
    "end": "3785300"
  },
  {
    "text": "So then you can imagine this whole system, the training of the classifier, the training of the policy and so on as",
    "start": "3785550",
    "end": "3792040"
  },
  {
    "text": "a loop where you have your policy or agent that takes actions. Those go to the environment, the environment responds with states.",
    "start": "3792040",
    "end": "3797920"
  },
  {
    "text": "The policy at the beginning of the first timestep of every episode is given a skill, an integer,",
    "start": "3797920",
    "end": "3803724"
  },
  {
    "text": "a z, and the state goes to this discriminator- this classifier, which attempts to guess what z was given to the policy.",
    "start": "3803725",
    "end": "3811790"
  },
  {
    "text": "And they are colluding, they're cooperating with each other. The policy's trying to do the thing that makes the classifier get the right answer and",
    "start": "3811970",
    "end": "3819089"
  },
  {
    "text": "the classifier's trying to look at what the policy did and- and try to guess the right answer. So now, let's think about what this interaction will",
    "start": "3819090",
    "end": "3825580"
  },
  {
    "text": "actually do to the behavior of the policy. Let's say that I have only two values of C just for simplicity.",
    "start": "3825580",
    "end": "3831085"
  },
  {
    "text": "So I have a green value and a blue value. Initially, you have a random policy",
    "start": "3831085",
    "end": "3837535"
  },
  {
    "text": "and when you condition on green and you condition on blue, it kinda does the same random stuff.",
    "start": "3837535",
    "end": "3843339"
  },
  {
    "text": "But of course, just to random chance, sometimes the green lines will be a little bit further this way,",
    "start": "3843340",
    "end": "3849520"
  },
  {
    "text": "the blue lines will be a little further this way. So when you train your classifier, the classifier will say I have no idea what's going on,",
    "start": "3849520",
    "end": "3855099"
  },
  {
    "text": "but if you really want me to draw a decision boundary, I'm gonna draw this one. Because, you know, there's a little more green stuff over here,",
    "start": "3855100",
    "end": "3860950"
  },
  {
    "text": "a little more blue stuff over here. It really has no idea but it's like it's saying, like maybe this is like 51% versus 49%.",
    "start": "3860950",
    "end": "3867025"
  },
  {
    "text": "So there's just a little bit of tiebreaker through random chance. When the policy gets to go, now the policy is trying to help this classifier.",
    "start": "3867025",
    "end": "3874390"
  },
  {
    "text": "It's saying, oh you think that this is 51% green and this is 49% green. Okay. I can do that. I can send more green stuff here and more blue stuff here.",
    "start": "3874390",
    "end": "3881995"
  },
  {
    "text": "And then the classifier gets to go again and the classifier will draw the line a little more cleanly. And then the policy gets to go and it will separate out even more and so on.",
    "start": "3881995",
    "end": "3889600"
  },
  {
    "text": "Eventually, this process will cause the policy and the classifier to,",
    "start": "3889600",
    "end": "3894850"
  },
  {
    "text": "uh, agree on a separation, uh, of the state space. And of course, this is an example of two skills",
    "start": "3894850",
    "end": "3900730"
  },
  {
    "text": "but now imagine you did this with like 2,000 skills. Then you'd have policies that go to all- you have skills that go to all the different places in the world and also avoid all the different places and",
    "start": "3900730",
    "end": "3908740"
  },
  {
    "text": "basically do all- all possible combinations of state space region coverage.",
    "start": "3908740",
    "end": "3916190"
  },
  {
    "text": "Um, okay. Any questions about this method? Yes.",
    "start": "3916350",
    "end": "3921940"
  },
  {
    "text": "Is it possible to do this with like me- meaningful latent features of some kind? That's a really interesting question.",
    "start": "3921940",
    "end": "3928360"
  },
  {
    "text": "Yes. So the question for those of you who didn't hear is, is it possible to do this with some kind of meaningful, uh, latent features?",
    "start": "3928360",
    "end": "3933715"
  },
  {
    "text": "I think that could be possible, yes. So you could imagine, for example, um, doing some- something where you impose structure on the Z's.",
    "start": "3933715",
    "end": "3942040"
  },
  {
    "text": "You could, for example, instead of having the Z's be integers, you can have them be vectors of categorical variables, almost like vectors of attributes.",
    "start": "3942040",
    "end": "3947845"
  },
  {
    "text": "Uh, you could supervise some of the Z's. You can say, well, these entries correspond to like these semantically meaningful features,",
    "start": "3947845",
    "end": "3953440"
  },
  {
    "text": "the other interest could correspond to whatever you want. So you could probably impose a lot more structure on the Z's. Uh, we've tried a little bit of that but not very much.",
    "start": "3953440",
    "end": "3960730"
  },
  {
    "text": "I can, I can tell you a little bit after the lecture if you want. Any other questions? Yeah. Do Z's make difference goes- corresponding to different states?",
    "start": "3960730",
    "end": "3968170"
  },
  {
    "text": "Right. [inaudible]. Yeah, yeah, yeah. So the, so the question was- well,",
    "start": "3968170",
    "end": "3973390"
  },
  {
    "text": "I made a big deal out of how goal-reaching is not the same as, uh, as skills. But now, I'm telling you that, that different skills correspond to different states.",
    "start": "3973390",
    "end": "3979900"
  },
  {
    "text": "So, so what's up? Um, the- it's a very good question. And the answer is a little subtle because",
    "start": "3979900",
    "end": "3986470"
  },
  {
    "text": "while this is trying to make different tasks correspond to different states, it's no longer trying to make different task correspond to different goals.",
    "start": "3986470",
    "end": "3993775"
  },
  {
    "text": "So you could have, for example, a state visitation profile for this blue line which is like",
    "start": "3993775",
    "end": "3999055"
  },
  {
    "text": "avoid this region and end up in this region. So that's a little bit more elaborate than just reaching goals.",
    "start": "3999055",
    "end": "4005684"
  },
  {
    "text": "Now, there's, uh- there are other versions of this kind of, uh, method that could be formulated.",
    "start": "4005685",
    "end": "4011220"
  },
  {
    "text": "For example, you could imagine training your classifier to predict Z not conditional on a single state but conditional on an entire sequence of states.",
    "start": "4011220",
    "end": "4018645"
  },
  {
    "text": "Then you have non-Markovian rewards which is a little tough, but then you would actually get this thing to",
    "start": "4018645",
    "end": "4024210"
  },
  {
    "text": "separate the policy into all sorts of different trajectories, uh, which would maybe be a little closer to what your- to what you might want.",
    "start": "4024210",
    "end": "4031575"
  },
  {
    "text": "Uh, there's a subtlety here though which is that different trajectories might also not be",
    "start": "4031575",
    "end": "4036810"
  },
  {
    "text": "exactly what you want because you can have two trajectories that look very different but achieve very similar outcomes.",
    "start": "4036810",
    "end": "4041850"
  },
  {
    "text": "So there's a choice that you have to make. In fact, people have proposed variants on this objective. There were a couple of other papers. I think I have a citation of that somewhere.",
    "start": "4041850",
    "end": "4049724"
  },
  {
    "text": "Let's see where I have that. Okay. So here, there's a citation to Gregor et al, Variational Intrinsic Control.",
    "start": "4049725",
    "end": "4057810"
  },
  {
    "text": "So if you check out this paper, Variational Intrinsic Control, uh, it actually proposed a slightly different discriminator",
    "start": "4057810",
    "end": "4064424"
  },
  {
    "text": "which has conditioned on the current state and like the last state or something. And you can do all sorts of combinations, conditional trajectories, current state, future state,",
    "start": "4064425",
    "end": "4071130"
  },
  {
    "text": "whatever, and they all end up with slightly  different definitions of what a task is. Okay. Uh, any other questions?",
    "start": "4071130",
    "end": "4079390"
  },
  {
    "text": "Okay. Um, let's look at what this thing does. So, um, we can, uh,",
    "start": "4079790",
    "end": "4085589"
  },
  {
    "text": "train it on everybody's favorite Half Cheetah task. Uh, I'm not sure whether, uh,",
    "start": "4085590",
    "end": "4091140"
  },
  {
    "text": "you guys had to do any of the MuJoCo RL things in this course. Do you know- raise your hand if you know what Half Cheetah is.",
    "start": "4091140",
    "end": "4096839"
  },
  {
    "text": "Does it mean anything- okay. Okay. Good. [LAUGHTER] Um, so that Half Cheetah is supposed to run, that's its goal in life.",
    "start": "4096840",
    "end": "4102674"
  },
  {
    "text": "But if you don't know what the reward function for Half Cheetah is and you just run this unsupervised skill extraction method,",
    "start": "4102675",
    "end": "4108180"
  },
  {
    "text": "uh, sometimes you get skills that run in a very festive way, uh, sometimes you get skills that actually run backwards.",
    "start": "4108180",
    "end": "4113790"
  },
  {
    "text": "It's very easy to tell whether you're running backwards or forwards. So the discriminator really likes that. Uh, but sometimes, it'll also do like a weird front flip,",
    "start": "4113790",
    "end": "4121335"
  },
  {
    "text": "because that's also very easy to distinguish from running forward and backward. So basically, it tries to do the most extreme things that are the easiest to distinguish.",
    "start": "4121335",
    "end": "4128325"
  },
  {
    "text": "Um, here is the ant. Uh, the ant kind of- you know, the ant has a lot more different things that it could do.",
    "start": "4128325",
    "end": "4134444"
  },
  {
    "text": "So it ends up doing these kinda funny wiggles where sometimes it'll walk in like a, a letter S-shaped, sometimes a letter J shape.",
    "start": "4134445",
    "end": "4141509"
  },
  {
    "text": "So it sort of walks in different wiggles. Uh, if you run this on a really simple task like mountain car,",
    "start": "4141510",
    "end": "4146984"
  },
  {
    "text": "uh, mountain car is a pretty simple task. There's only so many things you could do. So usually, you get one of the skills extra corresponding to just outright solving the task.",
    "start": "4146985",
    "end": "4154275"
  },
  {
    "text": "So this, this skill is just doing the task. It's basically reaching the goal, the other skills are doing other weird stuff,",
    "start": "4154275",
    "end": "4159960"
  },
  {
    "text": "like this one appears to be trying to go as fast as possible. So something is actually working and",
    "start": "4159960",
    "end": "4165449"
  },
  {
    "text": "the skills are actually distinguishable from one another. Uh, you can also use this for hierarchical RL,",
    "start": "4165450",
    "end": "4170670"
  },
  {
    "text": "so you can train up some skills for the cheetah and then you can make the cheetah do hurdles by treating the skills,",
    "start": "4170670",
    "end": "4177690"
  },
  {
    "text": "the different Z's as different actions for higher level policy. The same with the ant. You can take the skills for the ant and then",
    "start": "4177690",
    "end": "4184219"
  },
  {
    "text": "train a higher level policy that directs the ants to different places. [NOISE] So these are some of the learning curves for the hierarchical version.",
    "start": "4184220",
    "end": "4191049"
  },
  {
    "text": "Uh, but perhaps for the purpose of today's lecture, one thing I do wanna make sure to cover is the connection between",
    "start": "4191050",
    "end": "4196680"
  },
  {
    "text": "this and all these other information theoretic ideas that I touched on. So recall that our objective is to maximize the expected value of our reward and",
    "start": "4196680",
    "end": "4205800"
  },
  {
    "text": "our reward is log p of z given s. It turns out that this is also maximizing mutual information.",
    "start": "4205800",
    "end": "4211755"
  },
  {
    "text": "But now instead of goals, you have Z's. So it's maximizing mutual information between z and s. Remember that mutual information is a difference of two entropies,",
    "start": "4211755",
    "end": "4220910"
  },
  {
    "text": "the entropy of Z minus the entropy of Z given S. This first term, back when we had goals, it was very hard.",
    "start": "4220910",
    "end": "4227800"
  },
  {
    "text": "Now, it's very easy because these Z's are integers. How do you maximize the entropy of Z?",
    "start": "4227800",
    "end": "4233265"
  },
  {
    "text": "We'll just pick your integers uniformly at random. If you picked them uniformly at random, that first term is maximized.",
    "start": "4233265",
    "end": "4238440"
  },
  {
    "text": "So that's really easy. It's actually only the second term that's hard. [NOISE] And the second term is of course minimized by",
    "start": "4238440",
    "end": "4244949"
  },
  {
    "text": "maximizing log p of z given s. If your classifier is perfect, then that second term has zero- has, has no entropy.",
    "start": "4244950",
    "end": "4251925"
  },
  {
    "text": "So just make your classifier be really, really good, conveniently enough, that's exactly what the whole method is doing because the classifier is training itself to be really",
    "start": "4251925",
    "end": "4259350"
  },
  {
    "text": "good and the policy is changing itself so the classifiers had an easier time classifying its states. So this method is also doing mutual information between z and s,",
    "start": "4259350",
    "end": "4268515"
  },
  {
    "text": "where z is basically the replacement for goals now. Okay. So the last thing I'm gonna talk about,",
    "start": "4268515",
    "end": "4274290"
  },
  {
    "text": "and this is gonna be quite brief, uh, is a kind of an application of this idea to meta-learning.",
    "start": "4274290",
    "end": "4279449"
  },
  {
    "text": "So, so far, we just talked about the unsupervised part, like how do you discover these different skills? But what if you actually want to use this,",
    "start": "4279450",
    "end": "4286230"
  },
  {
    "text": "uh, in a meta-learning setting? So I don't think I need a quick summary of- well,",
    "start": "4286230",
    "end": "4291405"
  },
  {
    "text": "you should all know what Meta-RL is, right? So I, I could just skip this. I, I think if you don't- you know,",
    "start": "4291405",
    "end": "4296880"
  },
  {
    "text": "if you haven't been paying attention then maybe, maybe it's too late for that. But let's talk about something else. [NOISE] Let's talk about the bad stuff.",
    "start": "4296880",
    "end": "4303300"
  },
  {
    "text": "Let's talk about meta-overfitting, uh, which is about as exciting as it sounds. Uh, so meta-learning requires task distributions.",
    "start": "4303300",
    "end": "4311115"
  },
  {
    "text": "And where do the task distributions come from in meta-learning? Well, they come from you? Right. You have to build them.",
    "start": "4311115",
    "end": "4316440"
  },
  {
    "text": "Uh, if you're doing reinforcement learning, maybe you figured out that a good set of tasks to",
    "start": "4316440",
    "end": "4322800"
  },
  {
    "text": "meta-train on is tasks that require them to run in different directions. And if you were smart enough to design those tasks,",
    "start": "4322800",
    "end": "4328830"
  },
  {
    "text": "define rewards for all of them, and then use them for meta-training, then you might be able to adapt quickly to new tasks. So you might, you know,",
    "start": "4328830",
    "end": "4335115"
  },
  {
    "text": "run something like MAML, then the ant does some cool stuff where it runs in place, ready to go. And as soon as given even a tiny bit of reward for running in a certain direction,",
    "start": "4335115",
    "end": "4343200"
  },
  {
    "text": "immediately figures it out. But, of course, that's only if you chose the right meta-training tasks.",
    "start": "4343200",
    "end": "4348570"
  },
  {
    "text": "When there are too few meta-training tasks, you can meta-overfit which means that you're- you become really good at recalling your training tasks,",
    "start": "4348570",
    "end": "4355170"
  },
  {
    "text": "but really bad at trying to figure out new tasks. The same as overfitting and, and supervised learning, you can have meta-overfitting and meta-learning.",
    "start": "4355170",
    "end": "4363165"
  },
  {
    "text": "So specifying task distributions can actually be a very delicate choice and it can be quite difficult,",
    "start": "4363165",
    "end": "4368790"
  },
  {
    "text": "especially for reinforcement learning because their task correspond to reward functions which you're gonna program by hand.",
    "start": "4368790",
    "end": "4375180"
  },
  {
    "text": "So it'd be very nice to be able to propose tasks automatically [NOISE] so that you get as many tasks as you want and avoid meta-overfitting.",
    "start": "4375180",
    "end": "4383744"
  },
  {
    "text": "Of course, you have to propose them properly so their distribution has something in common with the task that you want to test-time.",
    "start": "4383745",
    "end": "4389925"
  },
  {
    "text": "So you can imagine the kind of a pipeline for unsupervised meta-reinforcement learning,",
    "start": "4389925",
    "end": "4395085"
  },
  {
    "text": "where you're given a particular environment without a reward function, you automatically acquire some tasks,",
    "start": "4395085",
    "end": "4400845"
  },
  {
    "text": "basically invent some things to do in that environment, and then meta-learn on those tasks, so that then at test-ti me when somebody comes along and gives you a reward function,",
    "start": "4400845",
    "end": "4408990"
  },
  {
    "text": "you can adapt very quickly to that reward function, without having received any reward functions during meta-training.",
    "start": "4408990",
    "end": "4415630"
  },
  {
    "text": "So what does it mean to propose tasks? Well, it means making up some rewards r of s,",
    "start": "4416900",
    "end": "4423345"
  },
  {
    "text": "z for different tasks to z, so different Zs should have different rewards.",
    "start": "4423345",
    "end": "4428200"
  },
  {
    "text": "And Meta-RL just means train your model to maximize the expectation with",
    "start": "4428930",
    "end": "4434970"
  },
  {
    "text": "respect to all of your tasks of the reward of the policy after the policy has been updated on that task.",
    "start": "4434970",
    "end": "4440400"
  },
  {
    "text": "So that's just the definition of Meta-RL. So how can you propose tasks? Well, you can do exactly the thing that I described before,",
    "start": "4440400",
    "end": "4447360"
  },
  {
    "text": "you can choose your r of s, z to maximize the mutual information between z and s,",
    "start": "4447360",
    "end": "4452580"
  },
  {
    "text": "basically using any of the techniques covered in the lecture up to now. And there's a crucial difference here,",
    "start": "4452580",
    "end": "4459140"
  },
  {
    "text": "which is bef- before the result was a policy conditioned on the task. Before the result was always like Pi of a given s,",
    "start": "4459140",
    "end": "4466775"
  },
  {
    "text": "g or Pi of a given s, z. But if we're doing Meta-learning, that's not what we're after.",
    "start": "4466775",
    "end": "4472060"
  },
  {
    "text": "In Meta-learning, what we're after is a policy that can adapt to rewards. So if we use those tasks for Meta-RL,",
    "start": "4472060",
    "end": "4479985"
  },
  {
    "text": "then what we get is not a Pi of a given s, z, what we get is a policy that can learn from rewards.",
    "start": "4479985",
    "end": "4486495"
  },
  {
    "text": "And that's really nice, because now we can define new tasks for this thing just by defining a reward. We don't even have to know what the Zs mean.",
    "start": "4486495",
    "end": "4494139"
  },
  {
    "text": "Um, so this basic idea does actually, work. So this is an experiment that uses the,",
    "start": "4494240",
    "end": "4499739"
  },
  {
    "text": "uh, the- the s- skill, you know, mutual information between s, z method called the diversity is all you need or DIAYN,",
    "start": "4499740",
    "end": "4506580"
  },
  {
    "text": "uh, in an unsupervised Meta-RL pipeline. And what these comparisons shows, uh, the green one shows the performance add adaptation time,",
    "start": "4506580",
    "end": "4515250"
  },
  {
    "text": "so that's Meta testing, where the Meta training was done using task proposals using that Mutual Information method.",
    "start": "4515250",
    "end": "4521400"
  },
  {
    "text": "The red line shows RL from scratch, and the blue line, that's a pretty funny one that actually,",
    "start": "4521400",
    "end": "4527940"
  },
  {
    "text": "shows a setting where the Meta-learning was done by proposing random tasks. The random tasks proposed by such- by initializing the discriminator with random weights.",
    "start": "4527940",
    "end": "4538170"
  },
  {
    "text": "So it so sort of a random shopping of the space. The interesting thing about this is that even the random proposals actually, work decently well,",
    "start": "4538170",
    "end": "4544320"
  },
  {
    "text": "in some case, like they work well for this simple 2D navigation task, they kind of work decently, well for the ant. They don't seem to work so well for the cheetah for some reason.",
    "start": "4544320",
    "end": "4551130"
  },
  {
    "text": "The DIAYN ones are a little more consistent, uh, but the- the main point is that this kind of unsupervised proposals can actually,",
    "start": "4551130",
    "end": "4557579"
  },
  {
    "text": "get you some, uh, decently meaningful Meta-learning models. So this is kind of potentially a viable way to address the Meta-overfitting issue.",
    "start": "4557580",
    "end": "4564870"
  },
  {
    "text": "Okay. Uh, well, uh, that's it for the lecture. Uh, I'd be happy to take any questions from you guys, uh,",
    "start": "4564870",
    "end": "4571470"
  },
  {
    "text": "about either the last part, the unsupervised Meta-RL or anything that preceded it. Um, so if you have any questions now's the time to ask. Yeah?",
    "start": "4571470",
    "end": "4578650"
  },
  {
    "text": "Uh, in the [inaudible] [OVERLAPPING]. Yeah. [OVERLAPPING] Any ideas for how to use information theory to make that adjustment? [OVERLAPPING]",
    "start": "4581450",
    "end": "4587730"
  },
  {
    "text": "Yeah, that's a really good question. So the question was I pick the number of skills,",
    "start": "4587730",
    "end": "4593670"
  },
  {
    "text": "well, I didn't pick it, Ben Eysenbach picked it. [LAUGHTER]. So that's my excuse. Uh, somewhat arbitrarily, is there a better way to do it?",
    "start": "4593670",
    "end": "4600719"
  },
  {
    "text": "Um, I don't know. Uh, we did try something that it was seem pretty obvious, we just use a continuous space of skills.",
    "start": "4600720",
    "end": "4607409"
  },
  {
    "text": "That really, didn't work. We're not sure why. Uh, we also tried somewhat less obvious things like using a combinatorial space of skill.",
    "start": "4607410",
    "end": "4615540"
  },
  {
    "text": "So if you- instead of having an integer, you might have a vector of binary values. So if you have, you know, 32 binary values,",
    "start": "4615540",
    "end": "4621900"
  },
  {
    "text": "you can have 2 to the  32nd power of different skills, still discrete set, but a very large number, that actually, works.",
    "start": "4621900",
    "end": "4627675"
  },
  {
    "text": "Um, but I don't know how to select that number in a principled way. Yeah?",
    "start": "4627675",
    "end": "4634270"
  },
  {
    "text": "So, um, around this idea of [inaudible] mutual information, we can optimize in two ways, right?",
    "start": "4634760",
    "end": "4641565"
  },
  {
    "text": "We can in- introduce [inaudible] in variational distribution [inaudible] introduce the forward model.",
    "start": "4641565",
    "end": "4649050"
  },
  {
    "text": "[OVERLAPPING] And I don't know if you've [inaudible]. And when you introduce the forward model,",
    "start": "4649050",
    "end": "4654690"
  },
  {
    "text": "we get this optimization with reward that depends on the forward, right? [OVERLAPPING] Then you talk about his other idea",
    "start": "4654690",
    "end": "4660030"
  },
  {
    "text": "whether we use the probability of a particular goal we reached as it increased motivation [OVERLAPPING] which sounds like really",
    "start": "4660030",
    "end": "4666840"
  },
  {
    "text": "similar to this idea of curiosity [OVERLAPPING] Um, and one thing I've been trying to kinda reconcile about",
    "start": "4666840",
    "end": "4672239"
  },
  {
    "text": "these two methods of increasing motivation is that, if you take mutual information with",
    "start": "4672240",
    "end": "4678410"
  },
  {
    "text": "foreign model has [inaudible] [OVERLAPPING] so you can take curiosity and other stuff like, [OVERLAPPING] using the novelty of the status as your reward.",
    "start": "4678410",
    "end": "4686300"
  },
  {
    "text": "Basically, [inaudible] are over the state distribution, they optimize exactly the opposite thing, [OVERLAPPING] but it seems that both of these things",
    "start": "4686300",
    "end": "4694109"
  },
  {
    "text": "[NOISE] create highly structured, um [OVERLAPPING] Right. Yeah. [OVERLAPPING] Thi- this is",
    "start": "4694109",
    "end": "4700350"
  },
  {
    "text": "a- this is a very complex question that I ca- I can probably give you, you know maybe like a 20-30 minute answer,",
    "start": "4700350",
    "end": "4706679"
  },
  {
    "text": "but I'll- I'll give you the short answer, um, you can get- well there- there's a two-part short answer.",
    "start": "4706680",
    "end": "4712800"
  },
  {
    "text": "Uh, one part is, you can get meaningful behavior out of seemingly contradictory objectives.",
    "start": "4712800",
    "end": "4718095"
  },
  {
    "text": "There are actually, many more examples tha- that I could give you a- after the lecture if you like. So that's a thing that happens,",
    "start": "4718095",
    "end": "4723375"
  },
  {
    "text": "uh, and this isn't the only case where it happens. But um, in terms of trying to reconcile the- the relationships between",
    "start": "4723375",
    "end": "4729389"
  },
  {
    "text": "these different techniques, uh, something that I might actually, recommend is a- is a paper by Marc Bellemare, Unifying Count-Based Exploration and Intrinsic Motivation,",
    "start": "4729390",
    "end": "4736695"
  },
  {
    "text": "which discusses this in a little bit more detail. Uh, I don't think he covers the,",
    "start": "4736695",
    "end": "4742215"
  },
  {
    "text": "the Model Error version of intrinsic motivation in a lot of detail, but he does talk a lot about the log P of S versus the counts and so on,",
    "start": "4742215",
    "end": "4748800"
  },
  {
    "text": "and that might be a starting point to try to understand how these things can be reconciled. Yeah?",
    "start": "4748800",
    "end": "4754635"
  },
  {
    "text": "So the sort of diversity method seems like [inaudible] RL where you're kind of partitioning the state-space,",
    "start": "4754635",
    "end": "4760170"
  },
  {
    "text": "but can't you apply it to a more general sense of just something for data [OVERLAPPING] [inaudible] Um, Right.",
    "start": "4760170",
    "end": "4765449"
  },
  {
    "text": "So the question was can som- can somebody like this mutual information diversity method be applied to general unstructured data?",
    "start": "4765450",
    "end": "4771570"
  },
  {
    "text": "Um, so clustering does exactly this. So if, if, if you imagine doing like ye-, uh, you know, uh,",
    "start": "4771570",
    "end": "4776775"
  },
  {
    "text": "Gaussian mixture model or k-means clustering it- that's exactly- exactly what it's doing. It can there also in the sense,",
    "start": "4776775",
    "end": "4782159"
  },
  {
    "text": "to learn tasks to maximum of entropy on this data, as well? Um, Right. Can it learn tasks?",
    "start": "4782160",
    "end": "4788910"
  },
  {
    "text": "That is a more complex question. I mean, you could imagine a clustering as learning tasks,",
    "start": "4788910",
    "end": "4794460"
  },
  {
    "text": "like whe- when you cluster the spacing and say predict the cluster from the, from the data points, so that's a task. Um, in fact that will probably be the closest analogue actually,",
    "start": "4794460",
    "end": "4803505"
  },
  {
    "text": "because if you're classifiers doing you know, p of z given s, then if you do clustering into p of z given x tha- that's the closest analog.",
    "start": "4803505",
    "end": "4812099"
  },
  {
    "text": "I think, you can probably do more than that, but I don't know. It's a good idea. Any other questions? Yeah. [inaudible]",
    "start": "4812100",
    "end": "4829020"
  },
  {
    "text": "make sure you're pretty good at everything, um, as it goes to you're trying to match some target distribution, um,",
    "start": "4829020",
    "end": "4834525"
  },
  {
    "text": "and it seems like as your state space gets bigger and bigger, the strategy is sort of, being conservative and, you know,",
    "start": "4834525",
    "end": "4841275"
  },
  {
    "text": "preparing for the worst-case is less and less useful [OVERLAPPING] um, and particularly, if you go back, in case,",
    "start": "4841275",
    "end": "4846900"
  },
  {
    "text": "your kitchen example, you know, if your robot spends all day [LAUGHTER] preparing for your worst-case demand obviously,",
    "start": "4846900",
    "end": "4852389"
  },
  {
    "text": "that's going to include your command where you can say. [OVERLAPPING] You might need a couple of days. Sorry? You might need a couple of days.",
    "start": "4852390",
    "end": "4857910"
  },
  {
    "text": "[LAUGHTER] [inaudible] Um, so I- I'm curious you know, if- if- to make these algorithms,",
    "start": "4857910",
    "end": "4863730"
  },
  {
    "text": "useful in- in practice, it seems like using this sort of you know, pure maximum entropy effective procedures and revision probably",
    "start": "4863730",
    "end": "4871410"
  },
  {
    "text": "isn't going to be as useful as the ones where we come up. We have [inaudible] some sort of prior about what are",
    "start": "4871410",
    "end": "4878040"
  },
  {
    "text": "useful type of [inaudible] actually [inaudible] question, um,",
    "start": "4878040",
    "end": "4883320"
  },
  {
    "text": "what is sort of your thought on how to go from, how I want to prepare for, you know,",
    "start": "4883320",
    "end": "4889470"
  },
  {
    "text": "likely things I might ask you to do in [inaudible] work, into an actual prior that we could inject into this algorithm.",
    "start": "4889470",
    "end": "4896070"
  },
  {
    "text": "Yeah. So um, the question was es- essentially, uh, how can we do better than just",
    "start": "4896070",
    "end": "4901664"
  },
  {
    "text": "optimizing for the worst case in very complex environments, where optimizing for the worst-case would take forever, basically, where there are a gajillion things you could do.",
    "start": "4901665",
    "end": "4908250"
  },
  {
    "text": "Um, two part answer, uh, one is, is a- a very lame answer which is that this- the state- a state distribution matching formulation of reinforcement learning,",
    "start": "4908250",
    "end": "4917610"
  },
  {
    "text": "kind of aims to do exactly that. It assumes that you're given some distribution. I think my question was if you're- if you wanna do that?",
    "start": "4917610",
    "end": "4923250"
  },
  {
    "text": "How do you actually, go from in my brain, I have this idea that things are useful [OVERLAPPING] Yeah. [inaudible] [OVERLAPPING] Yeah.",
    "start": "4923250",
    "end": "4932820"
  },
  {
    "text": "[inaudible] [OVERLAPPING] Yeah. Right. So how do you actually get that distribution? That's a really good question. And I don't really know.",
    "start": "4932820",
    "end": "4937895"
  },
  {
    "text": "And I think that question also gets at something a bit deeper it's- it's really kind of a design question. It's like what's the right way to- to communicate these things?",
    "start": "4937895",
    "end": "4945620"
  },
  {
    "text": "Or what's the right way to do- do, you know, should you use data should you have some communication channel? But wha- one other answer that I- that I- that I wanna give here which was maybe,",
    "start": "4945620",
    "end": "4953070"
  },
  {
    "text": "a little bit of lateral thinking on this topic is that, perhaps it's not so unreasonable to try to learn all the things.",
    "start": "4953070",
    "end": "4959190"
  },
  {
    "text": "If you're do- doing a little bit better than just density estimation, because what you can do is you can figure out that even though, uh,",
    "start": "4959190",
    "end": "4965880"
  },
  {
    "text": "you haven't broken every single dish yet, having broken one of the dishes you can kinda guess what's going to happen if your break all the others.",
    "start": "4965880",
    "end": "4971640"
  },
  {
    "text": "So maybe you don't have to break every single dish before deciding that you've mastered the dish breaking skill and move on to something more productive.",
    "start": "4971640",
    "end": "4978284"
  },
  {
    "text": "So perhaps, uh, having this thing be somehow, aware of your capability to generalize might actually, cover the space without like physically covering the space.",
    "start": "4978285",
    "end": "4987280"
  },
  {
    "text": "Okay? Should we wrap up? Yeah, thanks Sergey.",
    "start": "4988700",
    "end": "4994000"
  },
  {
    "text": "[APPLAUSE]",
    "start": "4994000",
    "end": "4999418"
  }
]