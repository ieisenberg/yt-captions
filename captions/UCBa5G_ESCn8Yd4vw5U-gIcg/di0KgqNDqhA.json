[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "Welcome to Exploring Computing.",
    "start": "0",
    "end": "3690"
  },
  {
    "text": "Today's video is\nLists and Loops.",
    "start": "3690",
    "end": "7050"
  },
  {
    "text": "So one thing that computers\nare really good at",
    "start": "7050",
    "end": "9120"
  },
  {
    "text": "is processing lists\nof information.",
    "start": "9120",
    "end": "11019"
  },
  {
    "text": "And this is both\nbecause we don't really",
    "start": "11020",
    "end": "13290"
  },
  {
    "text": "like processing large\namounts of information--",
    "start": "13290",
    "end": "15400"
  },
  {
    "text": "let's say we need\nto do a calculation",
    "start": "15400",
    "end": "16953"
  },
  {
    "text": "on a single Stanford\nstudent, like maybe we're",
    "start": "16953",
    "end": "18869"
  },
  {
    "text": "doing a graduation check on\na single Stanford student.",
    "start": "18870",
    "end": "21210"
  },
  {
    "text": "That doesn't sound too bad.",
    "start": "21210",
    "end": "22650"
  },
  {
    "text": "But then if we go, well, we want\nyou to do this graduation check",
    "start": "22650",
    "end": "25770"
  },
  {
    "text": "on 12,000 Stanford\nstudents, that's",
    "start": "25770",
    "end": "27780"
  },
  {
    "text": "sounding like not a lot of fun.",
    "start": "27780",
    "end": "31688"
  },
  {
    "text": "Computers, on the other hand,\ndon't care how many items there",
    "start": "31688",
    "end": "34230"
  },
  {
    "text": "are, and they're really\ngood at carrying out",
    "start": "34230",
    "end": "37020"
  },
  {
    "text": "the exact same\ncalculation on each",
    "start": "37020",
    "end": "38940"
  },
  {
    "text": "of the different\npeople in a list",
    "start": "38940",
    "end": "40800"
  },
  {
    "text": "or each of the\ndifferent bank accounts",
    "start": "40800",
    "end": "42390"
  },
  {
    "text": "on a list or each\nof the different",
    "start": "42390",
    "end": "44550"
  },
  {
    "text": "whatever you have in the list.",
    "start": "44550",
    "end": "45850"
  },
  {
    "text": "So lists are super common\nwhen processing information",
    "start": "45850",
    "end": "49260"
  },
  {
    "start": "46000",
    "end": "85000"
  },
  {
    "text": "on the computer, and computers\nare great at processing",
    "start": "49260",
    "end": "51899"
  },
  {
    "text": "lots of information.",
    "start": "51900",
    "end": "53670"
  },
  {
    "text": "All right, so here\nwe're creating",
    "start": "53670",
    "end": "55920"
  },
  {
    "text": "several different\nlists of information.",
    "start": "55920",
    "end": "58469"
  },
  {
    "text": "I've got a list\nof ages, and I've",
    "start": "58470",
    "end": "61050"
  },
  {
    "text": "got a list of team members.",
    "start": "61050",
    "end": "63048"
  },
  {
    "text": "And you can see in\neach case, the way",
    "start": "63048",
    "end": "64589"
  },
  {
    "text": "I'm going to do\nthis is I'm going",
    "start": "64590",
    "end": "65965"
  },
  {
    "text": "to have that square bracket\nfollowed by a number of items,",
    "start": "65965",
    "end": "70979"
  },
  {
    "text": "separated by commas, followed\nby a closing square bracket,",
    "start": "70980",
    "end": "74095"
  },
  {
    "text": "and that's going to go\nahead and create my list.",
    "start": "74095",
    "end": "76095"
  },
  {
    "text": "And I can go ahead and\nstore a list in a variable,",
    "start": "76095",
    "end": "79180"
  },
  {
    "text": "so I store my list of ages\ninto the ages variable",
    "start": "79180",
    "end": "81525"
  },
  {
    "text": "and I store my list of names\nin the team_members variable.",
    "start": "81525",
    "end": "85150"
  },
  {
    "start": "85000",
    "end": "108000"
  },
  {
    "text": "So another thing that you might\nrun into is the empty list.",
    "start": "85150",
    "end": "88410"
  },
  {
    "text": "The empty list is a list\nwith no items in it.",
    "start": "88410",
    "end": "90850"
  },
  {
    "text": "And so this is an\nempty list here.",
    "start": "90850",
    "end": "93340"
  },
  {
    "text": "I'm going to start\nmy course list.",
    "start": "93340",
    "end": "94890"
  },
  {
    "text": "I haven't signed\nup for any courses",
    "start": "94890",
    "end": "96390"
  },
  {
    "text": "yet, so I've got an open\nsquare bracket followed",
    "start": "96390",
    "end": "98640"
  },
  {
    "text": "by a closed square\nbracket, and that",
    "start": "98640",
    "end": "100140"
  },
  {
    "text": "indicates that I do have a\nlist, that list is there,",
    "start": "100140",
    "end": "103243"
  },
  {
    "text": "it's available for\nme to put classes in,",
    "start": "103243",
    "end": "104909"
  },
  {
    "text": "but I don't have any\nclasses in it yet.",
    "start": "104910",
    "end": "107700"
  },
  {
    "text": "We can access individual\nitems in a list",
    "start": "107700",
    "end": "110009"
  },
  {
    "start": "108000",
    "end": "182000"
  },
  {
    "text": "using another square\nbracket notation.",
    "start": "110010",
    "end": "113460"
  },
  {
    "text": "If I have the name\nof a list followed",
    "start": "113460",
    "end": "115680"
  },
  {
    "text": "by a square bracket followed\nby the particular index",
    "start": "115680",
    "end": "118260"
  },
  {
    "text": "number of the item in the\nlist that I want to access,",
    "start": "118260",
    "end": "120750"
  },
  {
    "text": "this will allow me to\naccess an item in the list.",
    "start": "120750",
    "end": "124090"
  },
  {
    "text": "So in this case, I am\naccessing the number 2",
    "start": "124090",
    "end": "126990"
  },
  {
    "text": "item in my team member list.",
    "start": "126990",
    "end": "128459"
  },
  {
    "text": "Now, you might think that\nthat's going to be \"Hank,\"",
    "start": "128460",
    "end": "131640"
  },
  {
    "text": "but actually it isn't, because\nit turns out that Python",
    "start": "131640",
    "end": "134490"
  },
  {
    "text": "and many other\nprogramming languages,",
    "start": "134490",
    "end": "136840"
  },
  {
    "text": "but it turns out not all\nprogramming languages, thanks,",
    "start": "136840",
    "end": "139200"
  },
  {
    "text": "guys, start numbering\nlists with 0.",
    "start": "139200",
    "end": "142620"
  },
  {
    "text": "So in this case,\n\"Casey\" will be item 0,",
    "start": "142620",
    "end": "145230"
  },
  {
    "text": "\"Hank\" will be item 1, and\n\"Tammy\" will be item 2.",
    "start": "145230",
    "end": "148470"
  },
  {
    "text": "So this will actually\nprint the string \"Tammy.\"",
    "start": "148470",
    "end": "151970"
  },
  {
    "text": "We can also use this format,\nthis square bracket format,",
    "start": "151970",
    "end": "155930"
  },
  {
    "text": "to change items in a list.",
    "start": "155930",
    "end": "157579"
  },
  {
    "text": "So if I say team_members\nbracket 1, again,",
    "start": "157580",
    "end": "161930"
  },
  {
    "text": "we've got \"Casey\" as item\n0, \"Hank\" is number one.",
    "start": "161930",
    "end": "164569"
  },
  {
    "text": "And so what I'm\nactually doing is",
    "start": "164570",
    "end": "166580"
  },
  {
    "text": "I'm assigning into\nteam_members 1,",
    "start": "166580",
    "end": "169550"
  },
  {
    "text": "so I'm assigning\ninto the location",
    "start": "169550",
    "end": "172190"
  },
  {
    "text": "that \"Hank\" is\ncurrently occupying.",
    "start": "172190",
    "end": "173660"
  },
  {
    "text": "And this actually does not\ninsert this new team member.",
    "start": "173660",
    "end": "177260"
  },
  {
    "text": "This actually replaces\nthis current team member.",
    "start": "177260",
    "end": "179299"
  },
  {
    "text": "So \"Hank\" is going to be\nreplaced by \"Joe\" here.",
    "start": "179300",
    "end": "183960"
  },
  {
    "start": "182000",
    "end": "275000"
  },
  {
    "text": "We can add items onto the\nend of an existing list",
    "start": "183960",
    "end": "186990"
  },
  {
    "text": "by using the append.",
    "start": "186990",
    "end": "189120"
  },
  {
    "text": "This uses a slightly different\nsyntax than we've seen before.",
    "start": "189120",
    "end": "191739"
  },
  {
    "text": "So here, I've got\nthe course list",
    "start": "191740",
    "end": "193350"
  },
  {
    "text": "with the original empty list\nthat we saw that example",
    "start": "193350",
    "end": "196110"
  },
  {
    "text": "a couple of minutes ago.",
    "start": "196110",
    "end": "197790"
  },
  {
    "text": "And then I use\ncourse_list dot append,",
    "start": "197790",
    "end": "200310"
  },
  {
    "text": "so I take the name of a variable\nwhich is storing the list,",
    "start": "200310",
    "end": "203640"
  },
  {
    "text": "I follow it by the period or\nthe dot, followed by append.",
    "start": "203640",
    "end": "207750"
  },
  {
    "text": "And so the implication\nhere is that I'm",
    "start": "207750",
    "end": "210540"
  },
  {
    "text": "going to append to\nthe list, and the list",
    "start": "210540",
    "end": "212640"
  },
  {
    "text": "that I'm going to append\nto is the list which",
    "start": "212640",
    "end": "215730"
  },
  {
    "text": "precedes that period.",
    "start": "215730",
    "end": "217090"
  },
  {
    "text": "So in this case, I'm\nadding to the course list.",
    "start": "217090",
    "end": "219760"
  },
  {
    "text": "So it seems like a\nbit of a difference",
    "start": "219760",
    "end": "222269"
  },
  {
    "text": "from what we've seen before.",
    "start": "222270",
    "end": "224820"
  },
  {
    "text": "As you'll discover\nin a minute, they",
    "start": "224820",
    "end": "226770"
  },
  {
    "text": "mix up when to use\nthis format and when",
    "start": "226770",
    "end": "230590"
  },
  {
    "text": "to use the previous format\nthat we've been using.",
    "start": "230590",
    "end": "233550"
  },
  {
    "text": "I think it's a\nlittle bit confusing,",
    "start": "233550",
    "end": "235570"
  },
  {
    "text": "but that's the way\nPython defined it.",
    "start": "235570",
    "end": "239230"
  },
  {
    "text": "OK, so course\nunderscore list dot",
    "start": "239230",
    "end": "241260"
  },
  {
    "text": "append, meaning I'm\nappending to the course list,",
    "start": "241260",
    "end": "244349"
  },
  {
    "text": "and then I go ahead and append\n\"CS105,\" I can append \"IHUM6A,\"",
    "start": "244350",
    "end": "247530"
  },
  {
    "text": "and I can append \"Econ1A.\"",
    "start": "247530",
    "end": "250770"
  },
  {
    "text": "And so the end result\nafter running these four",
    "start": "250770",
    "end": "253680"
  },
  {
    "text": "lines of code will be I have a\nlist with three classes in it,",
    "start": "253680",
    "end": "258660"
  },
  {
    "text": "\"CS105,\" \"IHUM6A,\" and \"Econ1A.\"",
    "start": "258660",
    "end": "263130"
  },
  {
    "text": "The append only allows you to\nadd to the end of the list.",
    "start": "263130",
    "end": "265960"
  },
  {
    "text": "There is a fancier\ninsert that you",
    "start": "265960",
    "end": "268382"
  },
  {
    "text": "can use if you want to put\nitems in the middle of the list,",
    "start": "268382",
    "end": "270840"
  },
  {
    "text": "but you won't need\nit for our class,",
    "start": "270840",
    "end": "272340"
  },
  {
    "text": "so I'm just going to\ngo ahead and skip it.",
    "start": "272340",
    "end": "275311"
  },
  {
    "start": "275000",
    "end": "310000"
  },
  {
    "text": "Now, sometimes\nyou're going to want",
    "start": "275312",
    "end": "276770"
  },
  {
    "text": "to know how long the list is.",
    "start": "276770",
    "end": "278349"
  },
  {
    "text": "And so you can determine\nhow long the list",
    "start": "278350",
    "end": "280100"
  },
  {
    "text": "is by taking the length.",
    "start": "280100",
    "end": "282570"
  },
  {
    "text": "So I'm going to take\nlen, short for length,",
    "start": "282570",
    "end": "285562"
  },
  {
    "text": "and I'm going to have\na pair of parentheses,",
    "start": "285562",
    "end": "287395"
  },
  {
    "text": "and I'm going to\npass in the list,",
    "start": "287395",
    "end": "289520"
  },
  {
    "text": "pass in a variable\nthat's storing a list,",
    "start": "289520",
    "end": "291319"
  },
  {
    "text": "and it will return a number.",
    "start": "291320",
    "end": "293130"
  },
  {
    "text": "So in this particular\ncase, since my list",
    "start": "293130",
    "end": "295760"
  },
  {
    "text": "had three courses\nin it, this will",
    "start": "295760",
    "end": "297560"
  },
  {
    "text": "print \"I am taking 3 classes.\"",
    "start": "297560",
    "end": "300580"
  },
  {
    "text": "All right.",
    "start": "300580",
    "end": "301080"
  },
  {
    "text": "One of the most common\nthings that we'll",
    "start": "301080",
    "end": "302900"
  },
  {
    "text": "want to do with lists is to\nprocess the items in the list.",
    "start": "302900",
    "end": "306169"
  },
  {
    "text": "And we're going to do that using\na for loop control structure.",
    "start": "306170",
    "end": "310110"
  },
  {
    "start": "310000",
    "end": "367000"
  },
  {
    "text": "So just as a reminder,\na control structure",
    "start": "310110",
    "end": "312289"
  },
  {
    "text": "allows us to control when\nstatements get executed,",
    "start": "312290",
    "end": "314810"
  },
  {
    "text": "and sometimes how many\ntimes they get executed.",
    "start": "314810",
    "end": "317863"
  },
  {
    "text": "The conditional\ncontrol structure,",
    "start": "317863",
    "end": "319280"
  },
  {
    "text": "which we saw last lecture,\nexecutes some statements",
    "start": "319280",
    "end": "321810"
  },
  {
    "text": "when a condition is\ntrue, and potentially it",
    "start": "321810",
    "end": "324470"
  },
  {
    "text": "will also execute\nanother set of statements",
    "start": "324470",
    "end": "326582"
  },
  {
    "text": "when that condition is false.",
    "start": "326582",
    "end": "327790"
  },
  {
    "text": "So we took a look\nat the if statement,",
    "start": "327790",
    "end": "329660"
  },
  {
    "text": "the if-else statement, and\nchained if-else statements",
    "start": "329660",
    "end": "332540"
  },
  {
    "text": "last lecture.",
    "start": "332540",
    "end": "335110"
  },
  {
    "text": "The loop control\nstructure will allow",
    "start": "335110",
    "end": "336759"
  },
  {
    "text": "us to execute the same code\nover and over and over again.",
    "start": "336760",
    "end": "340190"
  },
  {
    "text": "And there are several\ndifferent versions of this.",
    "start": "340190",
    "end": "342580"
  },
  {
    "text": "The simplest one executes\nthe code over and over",
    "start": "342580",
    "end": "346509"
  },
  {
    "text": "again for all the\nitems in a list.",
    "start": "346510",
    "end": "348680"
  },
  {
    "text": "You can also execute the\nsame code over and over",
    "start": "348680",
    "end": "351669"
  },
  {
    "text": "again for a set number of\ntimes, and you may also",
    "start": "351670",
    "end": "354610"
  },
  {
    "text": "execute the same code\nover and over again",
    "start": "354610",
    "end": "356530"
  },
  {
    "text": "until a particular\ncondition is true.",
    "start": "356530",
    "end": "358190"
  },
  {
    "text": "We're just going to take\na look at that first one.",
    "start": "358190",
    "end": "360520"
  },
  {
    "text": "It's the most straightforward.",
    "start": "360520",
    "end": "362090"
  },
  {
    "text": "It's pretty easy to use,\nand it's very useful.",
    "start": "362090",
    "end": "367280"
  },
  {
    "start": "367000",
    "end": "535000"
  },
  {
    "text": "All right, so here's our\nfirst example of a for loop.",
    "start": "367280",
    "end": "371020"
  },
  {
    "text": "I'm going to print out each of\nthe classes that I'm taking.",
    "start": "371020",
    "end": "375129"
  },
  {
    "text": "And so the way this works\nis I create a new variable",
    "start": "375130",
    "end": "379120"
  },
  {
    "text": "in the for loop.",
    "start": "379120",
    "end": "379870"
  },
  {
    "text": "In this case, the\nvariable is course.",
    "start": "379870",
    "end": "382030"
  },
  {
    "text": "And what's going\nto happen here is",
    "start": "382030",
    "end": "383889"
  },
  {
    "text": "that course will be set to\ndifferent values, one for each",
    "start": "383890",
    "end": "387760"
  },
  {
    "text": "of the values in\nmy second variable",
    "start": "387760",
    "end": "390340"
  },
  {
    "text": "here, course_list,\nwhich I previously set,",
    "start": "390340",
    "end": "392626"
  },
  {
    "text": "and we saw a little\nbit earlier that's",
    "start": "392627",
    "end": "394210"
  },
  {
    "text": "the list that I appended a\nbunch of different items to.",
    "start": "394210",
    "end": "398900"
  },
  {
    "text": "And so what will happen is the\nstatements in the for loop,",
    "start": "398900",
    "end": "405120"
  },
  {
    "text": "which in this case is the\nprint, \"I am taking,\" course,",
    "start": "405120",
    "end": "408620"
  },
  {
    "text": "will get executed one\nat a time for each",
    "start": "408620",
    "end": "412160"
  },
  {
    "text": "of the different values\nof the course list.",
    "start": "412160",
    "end": "416760"
  },
  {
    "text": "All right, so let's take a\nlook at this running in action.",
    "start": "416760",
    "end": "419410"
  },
  {
    "text": "So here's my\noriginal course list.",
    "start": "419410",
    "end": "422370"
  },
  {
    "text": "Previously, I added\nall the items to it.",
    "start": "422370",
    "end": "424428"
  },
  {
    "text": "This time, we're just going\nto assume that it's already",
    "start": "424428",
    "end": "426720"
  },
  {
    "text": "initially predefined.",
    "start": "426720",
    "end": "427800"
  },
  {
    "text": "So there's my course list, and\nhere's my little for loop here.",
    "start": "427800",
    "end": "432720"
  },
  {
    "text": "And what we're\ngoing to do is we're",
    "start": "432720",
    "end": "434790"
  },
  {
    "text": "going to perform different\nwhat are referred",
    "start": "434790",
    "end": "437370"
  },
  {
    "text": "to as iterations of the loop.",
    "start": "437370",
    "end": "439300"
  },
  {
    "text": "And so an iteration\nof the loop means",
    "start": "439300",
    "end": "441150"
  },
  {
    "text": "we're going back and executing\nthe statements in the for loop",
    "start": "441150",
    "end": "445290"
  },
  {
    "text": "again and again and\nagain, so each of those",
    "start": "445290",
    "end": "447300"
  },
  {
    "text": "would be a different iteration.",
    "start": "447300",
    "end": "448591"
  },
  {
    "text": "So on the first iteration,\nwhat's going to happen here",
    "start": "448592",
    "end": "451380"
  },
  {
    "text": "is that the course variable,\nwhich is set in the for loop,",
    "start": "451380",
    "end": "455310"
  },
  {
    "text": "is going to get set\ninitially to \"CS105.\"",
    "start": "455310",
    "end": "458820"
  },
  {
    "text": "And then I'm going to\nprint \"I am taking CS105.\"",
    "start": "458820",
    "end": "462870"
  },
  {
    "text": "And then in the second\niteration of the loop,",
    "start": "462870",
    "end": "464940"
  },
  {
    "text": "I am going to go\nback up, and I am",
    "start": "464940",
    "end": "466650"
  },
  {
    "text": "going to reset the value of the\ncourse variable to \"IHUM6A,\"",
    "start": "466650",
    "end": "473250"
  },
  {
    "text": "and then I'm going to\nexecute the statement print.",
    "start": "473250",
    "end": "477180"
  },
  {
    "text": "And in this case, it's going to\ndo the equivalent of printing",
    "start": "477180",
    "end": "480120"
  },
  {
    "text": "\"I am taking,\" and\nthen it will retrieve",
    "start": "480120",
    "end": "482677"
  },
  {
    "text": "the value of the variable.",
    "start": "482677",
    "end": "483760"
  },
  {
    "text": "So it'll be as if I\nhad that string there,",
    "start": "483760",
    "end": "485820"
  },
  {
    "text": "\"IHUM6A\" there, and it will\nprint \"I am taking IHUM6A.\"",
    "start": "485820",
    "end": "490740"
  },
  {
    "text": "And then we've got one more\niteration, the third iteration.",
    "start": "490740",
    "end": "495270"
  },
  {
    "text": "The course is going\nto be set to \"Econ1A,\"",
    "start": "495270",
    "end": "498479"
  },
  {
    "text": "and this will print\n\"I am taking Econ1A.\"",
    "start": "498480",
    "end": "502350"
  },
  {
    "text": "And there's my output.",
    "start": "502350",
    "end": "504160"
  },
  {
    "text": "So it did exactly\nwhat we expected.",
    "start": "504160",
    "end": "506590"
  },
  {
    "text": "Now, you can think\nof this loop as being",
    "start": "506590",
    "end": "509310"
  },
  {
    "text": "the equivalent of\nthe non-loop version,",
    "start": "509310",
    "end": "512610"
  },
  {
    "text": "print \"I am taking CS105,\"\nprint \"I am taking IHUM6A,\"",
    "start": "512610",
    "end": "516510"
  },
  {
    "text": "print \"I am taking Econ1A.\"",
    "start": "516510",
    "end": "519120"
  },
  {
    "text": "But because we're doing\nthis in a for loop,",
    "start": "519120",
    "end": "521667"
  },
  {
    "text": "we have a lot more flexibility.",
    "start": "521668",
    "end": "522960"
  },
  {
    "text": "We can change all the\nitems in the list,",
    "start": "522960",
    "end": "524627"
  },
  {
    "text": "and it will automatically\nchange the number",
    "start": "524627",
    "end": "527130"
  },
  {
    "text": "of times it's printing.",
    "start": "527130",
    "end": "528240"
  },
  {
    "text": "So the loops are super\nuseful and very important",
    "start": "528240",
    "end": "532500"
  },
  {
    "text": "when we're working\nwith lists of items.",
    "start": "532500",
    "end": "535170"
  },
  {
    "start": "535000",
    "end": "791000"
  },
  {
    "text": "So let's take a quick look\nat the syntax of our loops.",
    "start": "535170",
    "end": "538430"
  },
  {
    "text": "So we've got that word \"for,\"\nand we've got the word \"in,\"",
    "start": "538430",
    "end": "541670"
  },
  {
    "text": "and then we've got that colon\nat the end of that first line.",
    "start": "541670",
    "end": "545690"
  },
  {
    "text": "And so those are all\nrequired, and those are",
    "start": "545690",
    "end": "547730"
  },
  {
    "text": "going to just be copied as is.",
    "start": "547730",
    "end": "549649"
  },
  {
    "text": "The for and the\nin, you'll recall,",
    "start": "549650",
    "end": "551120"
  },
  {
    "text": "those are what we refer to as\nreserved words or keywords,",
    "start": "551120",
    "end": "555320"
  },
  {
    "text": "the idea being that\nthis is reserved for use",
    "start": "555320",
    "end": "558290"
  },
  {
    "text": "by the Python language, and I\ncan't name a variable \"for,\"",
    "start": "558290",
    "end": "562009"
  },
  {
    "text": "I can't name a variable \"in.\"",
    "start": "562010",
    "end": "563360"
  },
  {
    "text": "It would get Python very\nconfused, so don't do that.",
    "start": "563360",
    "end": "567440"
  },
  {
    "text": "And then I've got\nthe loop variable,",
    "start": "567440",
    "end": "569060"
  },
  {
    "text": "and so this is going to be the\nfirst time that loop variable",
    "start": "569060",
    "end": "572090"
  },
  {
    "text": "is mentioned, and it's going\nto be used inside of the loop",
    "start": "572090",
    "end": "575780"
  },
  {
    "text": "to represent the different\nvalues in the next variable,",
    "start": "575780",
    "end": "580500"
  },
  {
    "text": "which is a list variable.",
    "start": "580500",
    "end": "582620"
  },
  {
    "text": "I should mention that\nyou don't actually",
    "start": "582620",
    "end": "585080"
  },
  {
    "text": "have to have a variable in that\nsecond position after the in.",
    "start": "585080",
    "end": "588020"
  },
  {
    "text": "If you want, you could actually\nput a list directly there.",
    "start": "588020",
    "end": "591785"
  },
  {
    "text": "It's much less common,\nusually there is a variable,",
    "start": "591785",
    "end": "593910"
  },
  {
    "text": "but it is possible.",
    "start": "593910",
    "end": "595350"
  },
  {
    "text": "So here I've replaced the code\nthat we had previously where",
    "start": "595350",
    "end": "599240"
  },
  {
    "text": "I referred to the\ncourse_list variable,",
    "start": "599240",
    "end": "601520"
  },
  {
    "text": "and I've just replaced it by\njust writing the list right",
    "start": "601520",
    "end": "604310"
  },
  {
    "text": "there, and that is doable.",
    "start": "604310",
    "end": "607000"
  },
  {
    "text": "OK, then we have our\nstatements, and these",
    "start": "607000",
    "end": "608830"
  },
  {
    "text": "are the statements that will\nget executed over and over",
    "start": "608830",
    "end": "611470"
  },
  {
    "text": "and over again for each of the\nvalues of our loop variable.",
    "start": "611470",
    "end": "616000"
  },
  {
    "text": "I do want to mention that\nit is possible to have",
    "start": "616000",
    "end": "619870"
  },
  {
    "text": "more than one statement.",
    "start": "619870",
    "end": "620970"
  },
  {
    "text": "So here I'm printing\nout two statements.",
    "start": "620970",
    "end": "623350"
  },
  {
    "text": "I'm printing out \"I\nam taking,\" and then",
    "start": "623350",
    "end": "625389"
  },
  {
    "text": "I print the course name.",
    "start": "625390",
    "end": "626620"
  },
  {
    "text": "And then I'm also printing\nthe course \"is a lot of fun!\"",
    "start": "626620",
    "end": "630560"
  },
  {
    "text": "It's also possible\nto have statements",
    "start": "630560",
    "end": "632470"
  },
  {
    "text": "both before and\nafter the for loop.",
    "start": "632470",
    "end": "635990"
  },
  {
    "text": "So if you have statements\nbefore the for loop,",
    "start": "635990",
    "end": "638800"
  },
  {
    "text": "those will get done once\nbefore we enter the loop.",
    "start": "638800",
    "end": "641720"
  },
  {
    "text": "And if you've got statements\nafter the for loop,",
    "start": "641720",
    "end": "643720"
  },
  {
    "text": "those will get done once\nafter we finish the for loop.",
    "start": "643720",
    "end": "647019"
  },
  {
    "text": "And so the way that\nPython is going",
    "start": "647020",
    "end": "649930"
  },
  {
    "text": "to determine what\nis actually repeated",
    "start": "649930",
    "end": "653450"
  },
  {
    "text": "over and over and over\nagain is by the indentation.",
    "start": "653450",
    "end": "656020"
  },
  {
    "text": "So in this case here, the print\n\"My schedule is,\" that only",
    "start": "656020",
    "end": "660410"
  },
  {
    "text": "happens once.",
    "start": "660410",
    "end": "661639"
  },
  {
    "text": "The print \"I am taking\"\ncourse, that happens",
    "start": "661640",
    "end": "663762"
  },
  {
    "text": "over and over and over again.",
    "start": "663762",
    "end": "664970"
  },
  {
    "text": "And then they print \"I\nmay add more later.\"",
    "start": "664970",
    "end": "667430"
  },
  {
    "text": "That's only going\nto happen once.",
    "start": "667430",
    "end": "669050"
  },
  {
    "text": "And the way Python can tell the\ndifference between the print",
    "start": "669050",
    "end": "673885"
  },
  {
    "text": "statement that happens over\nand over and over again",
    "start": "673885",
    "end": "676010"
  },
  {
    "text": "for each of the courses versus\nthe one that only happens",
    "start": "676010",
    "end": "678530"
  },
  {
    "text": "once is that indentation.",
    "start": "678530",
    "end": "679940"
  },
  {
    "text": "Because print \"I am\ntaking\" course is indented,",
    "start": "679940",
    "end": "684570"
  },
  {
    "text": "that's the one that's\nsubordinate to the for loop,",
    "start": "684570",
    "end": "686780"
  },
  {
    "text": "and that's the one that will\nget printed over and over",
    "start": "686780",
    "end": "689030"
  },
  {
    "text": "and over again.",
    "start": "689030",
    "end": "689655"
  },
  {
    "text": "And again, we could add\nadditional statements",
    "start": "689655",
    "end": "691995"
  },
  {
    "text": "that we wanted to carry out\nover and over and over again,",
    "start": "691995",
    "end": "694370"
  },
  {
    "text": "but they would\nneed to be indented",
    "start": "694370",
    "end": "695990"
  },
  {
    "text": "at the same level as that\none that we've got there.",
    "start": "695990",
    "end": "698240"
  },
  {
    "text": "OK, let's take a\nlook at something",
    "start": "700770",
    "end": "702480"
  },
  {
    "text": "a bit more complicated.",
    "start": "702480",
    "end": "703610"
  },
  {
    "text": "So this is an example\nwhere I'm trying",
    "start": "703610",
    "end": "706440"
  },
  {
    "text": "to determine if\npizza delivery is",
    "start": "706440",
    "end": "708510"
  },
  {
    "text": "available for a\nparticular ZIP code.",
    "start": "708510",
    "end": "711720"
  },
  {
    "text": "And so I'm going to\ngo ahead and come up",
    "start": "711720",
    "end": "715019"
  },
  {
    "text": "with a list of ZIP\ncodes, and then I'm",
    "start": "715020",
    "end": "717030"
  },
  {
    "text": "going to ask the user\nwhat is their ZIP code.",
    "start": "717030",
    "end": "721140"
  },
  {
    "text": "So we've got our variable\nhere in the for loop,",
    "start": "721140",
    "end": "723810"
  },
  {
    "text": "the zipcode variable, and\nthat's the one that's going",
    "start": "723810",
    "end": "726657"
  },
  {
    "text": "to have its value changed.",
    "start": "726657",
    "end": "727740"
  },
  {
    "text": "So it will be 94301 to start\noff with, then it will be 94304,",
    "start": "727740",
    "end": "733100"
  },
  {
    "text": "94305, and so on.",
    "start": "733100",
    "end": "735720"
  },
  {
    "text": "And then the statement\nin the for loop,",
    "start": "735720",
    "end": "738417"
  },
  {
    "text": "the ones that are\nindented over, those",
    "start": "738417",
    "end": "740000"
  },
  {
    "text": "will get executed over\nand over and over again",
    "start": "740000",
    "end": "741920"
  },
  {
    "text": "for each of the values\nin our zipcode list.",
    "start": "741920",
    "end": "746922"
  },
  {
    "text": "And one thing that you may\nnotice if you look at this",
    "start": "746922",
    "end": "749130"
  },
  {
    "text": "carefully is that if we run into\na ZIP code in the list which",
    "start": "749130",
    "end": "754242"
  },
  {
    "text": "is the same as the ZIP code\nthat you've just entered,",
    "start": "754242",
    "end": "756450"
  },
  {
    "text": "let's say the user\nenters 94305, then we'll",
    "start": "756450",
    "end": "760080"
  },
  {
    "text": "print \"Delivery is available.\"",
    "start": "760080",
    "end": "762300"
  },
  {
    "text": "But you may notice if we\nenter in a ZIP code that's",
    "start": "762300",
    "end": "765240"
  },
  {
    "text": "not there, like 90210, that no\nprint statement occurs at all,",
    "start": "765240",
    "end": "774790"
  },
  {
    "text": "and basically, the user\nwon't see any output at all",
    "start": "774790",
    "end": "777222"
  },
  {
    "text": "and they'll wonder\nwhat's going on.",
    "start": "777222",
    "end": "778680"
  },
  {
    "text": "So we'll fix that\na little bit later.",
    "start": "778680",
    "end": "780160"
  },
  {
    "text": "It's actually a little\nbit complicated.",
    "start": "780160",
    "end": "781785"
  },
  {
    "text": "So that'll be the last\nthing we do this lecture.",
    "start": "781785",
    "end": "784300"
  },
  {
    "text": "But I did want to mention that.",
    "start": "784300",
    "end": "785980"
  },
  {
    "text": "What we're going to do now is\nwe're going to look at a couple",
    "start": "785980",
    "end": "788522"
  },
  {
    "text": "more examples of\nfor loops in action.",
    "start": "788522",
    "end": "790269"
  },
  {
    "text": "In this first\nexample, we're going",
    "start": "790270",
    "end": "791410"
  },
  {
    "start": "791000",
    "end": "1059000"
  },
  {
    "text": "to add all the values in a list.",
    "start": "791410",
    "end": "792779"
  },
  {
    "text": "So I've got a list with\n100, 200, 150, 400,",
    "start": "792780",
    "end": "795910"
  },
  {
    "text": "and I want to know what the\ntotal of all those values is.",
    "start": "795910",
    "end": "799940"
  },
  {
    "text": "And so we've got\nour little for loop.",
    "start": "799940",
    "end": "802340"
  },
  {
    "text": "We've got our\nvariable here, number,",
    "start": "802340",
    "end": "804500"
  },
  {
    "text": "in the for loop, \"for\nnumber in mylist.\"",
    "start": "804500",
    "end": "806450"
  },
  {
    "text": "And as you know,\nnumber will be set",
    "start": "806450",
    "end": "808550"
  },
  {
    "text": "to each of the different\nvalues in our list, 100,",
    "start": "808550",
    "end": "810800"
  },
  {
    "text": "200, 150, and 400 in turn.",
    "start": "810800",
    "end": "813529"
  },
  {
    "text": "And then we've got\nthat indented statement",
    "start": "813530",
    "end": "815913"
  },
  {
    "text": "that's going to get executed\nonce for each of the numbers,",
    "start": "815913",
    "end": "818330"
  },
  {
    "text": "once for 100, once for 200,\nonce for 150, and once for 400.",
    "start": "818330",
    "end": "822120"
  },
  {
    "text": "Now, that statement\nthere, total equals",
    "start": "822120",
    "end": "824600"
  },
  {
    "text": "total plus number,\na lot of students",
    "start": "824600",
    "end": "827000"
  },
  {
    "text": "find that a bit confusing\nbecause if you think about it,",
    "start": "827000",
    "end": "830870"
  },
  {
    "text": "that seems like I'm\nsaying 1 equals 1 plus 1.",
    "start": "830870",
    "end": "837980"
  },
  {
    "text": "How can total equal\ntotal plus something else",
    "start": "837980",
    "end": "841680"
  },
  {
    "text": "unless number's 0?",
    "start": "841680",
    "end": "842960"
  },
  {
    "text": "So that's not the right way\nto be thinking about it.",
    "start": "842960",
    "end": "845150"
  },
  {
    "text": "The right way to be thinking\nabout that equals sign",
    "start": "845150",
    "end": "847310"
  },
  {
    "text": "is not as the thing on\nthe left is the same",
    "start": "847310",
    "end": "849707"
  },
  {
    "text": "as the thing on the right.",
    "start": "849707",
    "end": "850790"
  },
  {
    "text": "The way to be\nthinking about it is,",
    "start": "850790",
    "end": "852709"
  },
  {
    "text": "I'm going to carry out the\nactions on the right-hand side",
    "start": "852710",
    "end": "856885"
  },
  {
    "text": "of the equals\nsign, and I'm going",
    "start": "856885",
    "end": "858260"
  },
  {
    "text": "to store the result of whatever\nthose actions generate,",
    "start": "858260",
    "end": "863360"
  },
  {
    "text": "and I'm going to store\nthat into the variable",
    "start": "863360",
    "end": "865761"
  },
  {
    "text": "on the left-hand side\nof the equals sign.",
    "start": "865762",
    "end": "867470"
  },
  {
    "text": "So it's not saying the two are\nequal when we start running it.",
    "start": "867470",
    "end": "871430"
  },
  {
    "text": "What it's saying is, I've got\na calculation on the right.",
    "start": "871430",
    "end": "874100"
  },
  {
    "text": "I'm going to go ahead and\ncarry out that calculation,",
    "start": "874100",
    "end": "876308"
  },
  {
    "text": "and whatever the\nresults of that are--",
    "start": "876308",
    "end": "878117"
  },
  {
    "text": "whether or not that\ncalculation on the right",
    "start": "878117",
    "end": "879950"
  },
  {
    "text": "includes the current\nvalue of total or not,",
    "start": "879950",
    "end": "882410"
  },
  {
    "text": "I don't really care.",
    "start": "882410",
    "end": "883519"
  },
  {
    "text": "Whatever the result\nof that is, I'm",
    "start": "883520",
    "end": "885860"
  },
  {
    "text": "going to store that as\nthe new value of total.",
    "start": "885860",
    "end": "887779"
  },
  {
    "text": "So in this particular\ncase, total",
    "start": "887780",
    "end": "890210"
  },
  {
    "text": "equals total plus\nnumber means retrieve",
    "start": "890210",
    "end": "892670"
  },
  {
    "text": "the value of the total\nvariable right now,",
    "start": "892670",
    "end": "897560"
  },
  {
    "text": "add the value of\nthe number variable",
    "start": "897560",
    "end": "899210"
  },
  {
    "text": "to the current value\nof the total variable,",
    "start": "899210",
    "end": "901790"
  },
  {
    "text": "take the resulting value of\nthe two of them added together,",
    "start": "901790",
    "end": "905329"
  },
  {
    "text": "and store that as the\nnew result into total.",
    "start": "905330",
    "end": "908580"
  },
  {
    "text": "So again, it's not saying\nthat total is initially",
    "start": "908580",
    "end": "911990"
  },
  {
    "text": "equal to total plus number.",
    "start": "911990",
    "end": "913730"
  },
  {
    "text": "It's saying that after\ncarrying out total plus number,",
    "start": "913730",
    "end": "918740"
  },
  {
    "text": "take the result of\nthat calculation",
    "start": "918740",
    "end": "920630"
  },
  {
    "text": "and then store it\nback into total.",
    "start": "920630",
    "end": "922770"
  },
  {
    "text": "So we do use the equals\nsign, but if you're",
    "start": "922770",
    "end": "926210"
  },
  {
    "text": "getting confused\nby it, you might",
    "start": "926210",
    "end": "928010"
  },
  {
    "text": "want to think of it not\nas an equals sign, but as",
    "start": "928010",
    "end": "930770"
  },
  {
    "text": "a operator that says assign\ninto the variable on the left.",
    "start": "930770",
    "end": "934820"
  },
  {
    "text": "So assign into total\nwhatever the value",
    "start": "934820",
    "end": "938210"
  },
  {
    "text": "of carrying out the calculation\ntotal plus number is.",
    "start": "938210",
    "end": "941930"
  },
  {
    "text": "All right.",
    "start": "941930",
    "end": "942430"
  },
  {
    "text": "So let's actually\nwalk through this.",
    "start": "942430",
    "end": "944287"
  },
  {
    "text": "So we're going to go\nthrough our iterations.",
    "start": "944287",
    "end": "946120"
  },
  {
    "text": "Remember, iterations\nare the name",
    "start": "946120",
    "end": "948880"
  },
  {
    "text": "we give to each of the\nexecutions of the statement",
    "start": "948880",
    "end": "951130"
  },
  {
    "text": "in our for loop.",
    "start": "951130",
    "end": "952460"
  },
  {
    "text": "So iteration 1,\ntotal is initially 0",
    "start": "952460",
    "end": "956290"
  },
  {
    "text": "because I set total equal to 0\nbefore I started my for loop.",
    "start": "956290",
    "end": "962000"
  },
  {
    "text": "And so total starts off at\n0, and we start off number",
    "start": "962000",
    "end": "966220"
  },
  {
    "text": "as the first number on\nthe list, which is 100.",
    "start": "966220",
    "end": "970759"
  },
  {
    "text": "So total equals\ntotal plus number.",
    "start": "970760",
    "end": "973107"
  },
  {
    "text": "That takes the current\nvalue of total, which is 0,",
    "start": "973107",
    "end": "975190"
  },
  {
    "text": "takes the current value\nof number, which is 100,",
    "start": "975190",
    "end": "977190"
  },
  {
    "text": "so total plus number is 100.",
    "start": "977190",
    "end": "979630"
  },
  {
    "text": "And so after I execute\nthis whole statement,",
    "start": "979630",
    "end": "982690"
  },
  {
    "text": "total's new value will be 100.",
    "start": "982690",
    "end": "985710"
  },
  {
    "text": "Iteration 2, total is 100.",
    "start": "985710",
    "end": "988140"
  },
  {
    "text": "That's what the result\nfrom iteration 1 was.",
    "start": "988140",
    "end": "991110"
  },
  {
    "text": "And number is now shifted\nover to the next number",
    "start": "991110",
    "end": "993310"
  },
  {
    "text": "in our list, which is 200.",
    "start": "993310",
    "end": "995580"
  },
  {
    "text": "So total equals\ntotal plus number.",
    "start": "995580",
    "end": "998270"
  },
  {
    "text": "Total is initially 100 and\nnumber is 200, so 100 plus 200.",
    "start": "998270",
    "end": "1003040"
  },
  {
    "text": "It's 300.",
    "start": "1003040",
    "end": "1004180"
  },
  {
    "text": "And so what this\nis going to do is",
    "start": "1004180",
    "end": "1005620"
  },
  {
    "text": "it's going to calculate\nthe 300, and then it",
    "start": "1005620",
    "end": "1007453"
  },
  {
    "text": "will go ahead and store that\n300 as the new value of total.",
    "start": "1007453",
    "end": "1012550"
  },
  {
    "text": "OK, iteration 3, total is\nnow 300 from iteration 2.",
    "start": "1012550",
    "end": "1017080"
  },
  {
    "text": "Number's now 150 because\nwe've shifted over",
    "start": "1017080",
    "end": "1019150"
  },
  {
    "text": "to the next item in the list.",
    "start": "1019150",
    "end": "1021490"
  },
  {
    "text": "Total equals total plus number.",
    "start": "1021490",
    "end": "1022839"
  },
  {
    "text": "That gives us for\n450, 300 plus 150.",
    "start": "1022840",
    "end": "1027939"
  },
  {
    "text": "And so total's new\nvalue would be 450.",
    "start": "1027940",
    "end": "1030939"
  },
  {
    "text": "And then finally,\nfrom iteration 3,",
    "start": "1030940",
    "end": "1033639"
  },
  {
    "text": "total is now 450, so\nwhen iteration 4 starts,",
    "start": "1033640",
    "end": "1036770"
  },
  {
    "text": "total is 450.",
    "start": "1036770",
    "end": "1039369"
  },
  {
    "text": "We add that to\nnumber, which is 400.",
    "start": "1039369",
    "end": "1041390"
  },
  {
    "text": "So if I add the initial value\nof total for iteration 4, 450,",
    "start": "1041390",
    "end": "1046209"
  },
  {
    "text": "plus the new value of number,\nwhich is 400, I get 850.",
    "start": "1046210",
    "end": "1049630"
  },
  {
    "text": "And so the total\nnew value is 850.",
    "start": "1049630",
    "end": "1052210"
  },
  {
    "text": "That's what gets\nstored back into total.",
    "start": "1052210",
    "end": "1054370"
  },
  {
    "text": "And so when we ask it to print\ntotal, it prints the 850.",
    "start": "1054370",
    "end": "1059460"
  },
  {
    "start": "1059000",
    "end": "1111000"
  },
  {
    "text": "OK, we can go ahead\nand do an averaging.",
    "start": "1059460",
    "end": "1062554"
  },
  {
    "text": "This is another common\noperation that we might want",
    "start": "1062555",
    "end": "1064680"
  },
  {
    "text": "to do with items in the list.",
    "start": "1064680",
    "end": "1066692"
  },
  {
    "text": "And so you can see that the\nway I'm going to do this is I'm",
    "start": "1066692",
    "end": "1069150"
  },
  {
    "text": "going to take the\ntotal, I'm going",
    "start": "1069150",
    "end": "1070500"
  },
  {
    "text": "to go ahead and create\nthe total just the same",
    "start": "1070500",
    "end": "1072417"
  },
  {
    "text": "as I did in the last example\nby iterating through the list",
    "start": "1072417",
    "end": "1075150"
  },
  {
    "text": "and adding them\nall into a total.",
    "start": "1075150",
    "end": "1076770"
  },
  {
    "text": "Set the initial value of\ntotal to 0, and then go ahead",
    "start": "1076770",
    "end": "1080160"
  },
  {
    "text": "and add each of the individual\nitems in the list into total.",
    "start": "1080160",
    "end": "1083550"
  },
  {
    "text": "And that's going to get me\nthe 850 we saw previously.",
    "start": "1083550",
    "end": "1086333"
  },
  {
    "text": "And then what we're\ngoing to do is",
    "start": "1086333",
    "end": "1087750"
  },
  {
    "text": "we're going to take\nthe length of the list.",
    "start": "1087750",
    "end": "1089542"
  },
  {
    "text": "Remember, the len function\ntakes a list as a parameter,",
    "start": "1089542",
    "end": "1095020"
  },
  {
    "text": "and it returns how\nlong that list is.",
    "start": "1095020",
    "end": "1097750"
  },
  {
    "text": "So in this particular case,\nmy list has four items in it,",
    "start": "1097750",
    "end": "1101920"
  },
  {
    "text": "so length mylist is\ngoing to return 4.",
    "start": "1101920",
    "end": "1105150"
  },
  {
    "text": "I'm gonna to take the\n850, divide it by 4,",
    "start": "1105150",
    "end": "1107310"
  },
  {
    "text": "and that's going\nto print out 212.5.",
    "start": "1107310",
    "end": "1111440"
  },
  {
    "start": "1111000",
    "end": "1162000"
  },
  {
    "text": "OK, let's go back to\nour delivery example.",
    "start": "1111440",
    "end": "1114029"
  },
  {
    "text": "So you recall that the problem\nwith our delivery example",
    "start": "1114030",
    "end": "1116480"
  },
  {
    "text": "is, if the ZIP\ncode is not found,",
    "start": "1116480",
    "end": "1119450"
  },
  {
    "text": "the basic version doesn't\ndo anything at all.",
    "start": "1119450",
    "end": "1121330"
  },
  {
    "text": "So that's not good.",
    "start": "1121330",
    "end": "1123559"
  },
  {
    "text": "Basically, if somebody\nis in our ZIP code range,",
    "start": "1123560",
    "end": "1127190"
  },
  {
    "text": "it'll print out, hey,\nwe can deliver to you,",
    "start": "1127190",
    "end": "1129860"
  },
  {
    "text": "and that'll be fine.",
    "start": "1129860",
    "end": "1130950"
  },
  {
    "text": "But if somebody is not\nin our ZIP code range,",
    "start": "1130950",
    "end": "1132860"
  },
  {
    "text": "it's not going to do\nanything, and they're",
    "start": "1132860",
    "end": "1134610"
  },
  {
    "text": "going to think our program's\nbusted, so that's not good.",
    "start": "1134610",
    "end": "1139160"
  },
  {
    "text": "All right.",
    "start": "1139160",
    "end": "1139660"
  },
  {
    "text": "So what we want to do is we\nwant to determine whether or not",
    "start": "1139660",
    "end": "1142960"
  },
  {
    "text": "that print \"Delivery is\navailable\" actually occurred.",
    "start": "1142960",
    "end": "1147100"
  },
  {
    "text": "And so either that statement\noccurred and we printed it,",
    "start": "1147100",
    "end": "1151120"
  },
  {
    "text": "or it didn't occur.",
    "start": "1151120",
    "end": "1152600"
  },
  {
    "text": "So that's a true/false value.",
    "start": "1152600",
    "end": "1153860"
  },
  {
    "text": "And so any time you've\ngot a true/false value,",
    "start": "1153860",
    "end": "1156027"
  },
  {
    "text": "you should be thinking\nabout Booleans.",
    "start": "1156027",
    "end": "1157610"
  },
  {
    "text": "And remember, a Boolean\nvariable is something",
    "start": "1157610",
    "end": "1159549"
  },
  {
    "text": "that is either true or false.",
    "start": "1159550",
    "end": "1163560"
  },
  {
    "start": "1162000",
    "end": "1336000"
  },
  {
    "text": "OK, so here's my first\nattempt to fix it.",
    "start": "1163560",
    "end": "1166302"
  },
  {
    "text": "What I'm going to do is I'm\ngoing to go ahead and add",
    "start": "1166302",
    "end": "1168510"
  },
  {
    "text": "in a statement.",
    "start": "1168510",
    "end": "1170010"
  },
  {
    "text": "And notice the statement is\nindented at the same level",
    "start": "1170010",
    "end": "1172260"
  },
  {
    "text": "as the print \"Delivery\nis available.\"",
    "start": "1172260",
    "end": "1174720"
  },
  {
    "text": "and I'm going to say\nzipcode_found equals True.",
    "start": "1174720",
    "end": "1177400"
  },
  {
    "text": "So what this is\ngoing to do is, if we",
    "start": "1177400",
    "end": "1179190"
  },
  {
    "text": "happen to run into a ZIP\ncode that is in the list,",
    "start": "1179190",
    "end": "1181909"
  },
  {
    "text": "we're going to print that\ndelivery is available.",
    "start": "1181910",
    "end": "1183910"
  },
  {
    "text": "And we're also going to set this\nvariable here, zipcode_found,",
    "start": "1183910",
    "end": "1187110"
  },
  {
    "text": "to True.",
    "start": "1187110",
    "end": "1188370"
  },
  {
    "text": "So that mostly works, but\nthere's a bit of a problem.",
    "start": "1188370",
    "end": "1195480"
  },
  {
    "text": "And that is, if the print\nstatement doesn't run,",
    "start": "1195480",
    "end": "1200390"
  },
  {
    "text": "if the ZIP code isn't\nactually on the list,",
    "start": "1200390",
    "end": "1202460"
  },
  {
    "text": "zipcode_found is never set.",
    "start": "1202460",
    "end": "1205409"
  },
  {
    "text": "And so what we\nreally want to do is",
    "start": "1205410",
    "end": "1206870"
  },
  {
    "text": "we want it to be set to\nFalse if we didn't find it",
    "start": "1206870",
    "end": "1210290"
  },
  {
    "text": "and True if we did find it.",
    "start": "1210290",
    "end": "1212130"
  },
  {
    "text": "And so the way we're\ngoing to do this",
    "start": "1212130",
    "end": "1213710"
  },
  {
    "text": "is we're going to go ahead\nand set zipcode_found to False",
    "start": "1213710",
    "end": "1217070"
  },
  {
    "text": "initially before we\nstart our for loop,",
    "start": "1217070",
    "end": "1219500"
  },
  {
    "text": "and then as we go\nthrough the for loop,",
    "start": "1219500",
    "end": "1221210"
  },
  {
    "text": "if we happen to run into\nthe ZIP code, that's great.",
    "start": "1221210",
    "end": "1224480"
  },
  {
    "text": "We'll go ahead and print\nthat delivery is available.",
    "start": "1224480",
    "end": "1227750"
  },
  {
    "text": "And at the same\ntime, we will reset",
    "start": "1227750",
    "end": "1230120"
  },
  {
    "text": "the variable zipcode_found,\nwhich is initially",
    "start": "1230120",
    "end": "1232580"
  },
  {
    "text": "False-- we will say, OK,\nthat was set to False before,",
    "start": "1232580",
    "end": "1234980"
  },
  {
    "text": "but now it's true because\nwe found your ZIP code.",
    "start": "1234980",
    "end": "1238250"
  },
  {
    "text": "OK, so that's pretty much it.",
    "start": "1238250",
    "end": "1241380"
  },
  {
    "text": "The last thing we\nhave to do is actually",
    "start": "1241380",
    "end": "1243230"
  },
  {
    "text": "do something on that basis.",
    "start": "1243230",
    "end": "1245580"
  },
  {
    "text": "And so after we\nfinish this loop,",
    "start": "1245580",
    "end": "1248330"
  },
  {
    "text": "either zipcode_found is\nstill at its initial value,",
    "start": "1248330",
    "end": "1251610"
  },
  {
    "text": "which is False, which means we\ndidn't run into the ZIP code.",
    "start": "1251610",
    "end": "1254809"
  },
  {
    "text": "Or we've gone through the list\nand we have found the ZIP code,",
    "start": "1254810",
    "end": "1258060"
  },
  {
    "text": "we've reset\nzipcode_found from False,",
    "start": "1258060",
    "end": "1259970"
  },
  {
    "text": "and it's now set to True.",
    "start": "1259970",
    "end": "1262250"
  },
  {
    "text": "And then now what we'd need to\ndo is just check that value,",
    "start": "1262250",
    "end": "1265070"
  },
  {
    "text": "and on that basis either\nprint \"Sorry no delivery is",
    "start": "1265070",
    "end": "1269222"
  },
  {
    "text": "available\" or don't do anything\nbecause we already printed",
    "start": "1269223",
    "end": "1271640"
  },
  {
    "text": "that delivery was available.",
    "start": "1271640",
    "end": "1273900"
  },
  {
    "text": "So you can see I'm going\nto take zipcode_found,",
    "start": "1273900",
    "end": "1276770"
  },
  {
    "text": "and then you could see\nI'm inverting the result.",
    "start": "1276770",
    "end": "1279070"
  },
  {
    "text": "So I talked in the\nprevious lecture",
    "start": "1279070",
    "end": "1281000"
  },
  {
    "text": "about how not takes the\nresult and flips it.",
    "start": "1281000",
    "end": "1283800"
  },
  {
    "text": "So in this particular\ncase, we don't really",
    "start": "1283800",
    "end": "1286520"
  },
  {
    "text": "care if the ZIP code is found.",
    "start": "1286520",
    "end": "1287930"
  },
  {
    "text": "What we really want to know is\nif the ZIP code was not found,",
    "start": "1287930",
    "end": "1290840"
  },
  {
    "text": "and so putting that not\nin front of zipcode_found",
    "start": "1290840",
    "end": "1293210"
  },
  {
    "text": "actually inverts it.",
    "start": "1293210",
    "end": "1294289"
  },
  {
    "text": "So if zipcode_found is true,\nnot zipcode_found is false,",
    "start": "1294290",
    "end": "1299300"
  },
  {
    "text": "and I don't do anything.",
    "start": "1299300",
    "end": "1300590"
  },
  {
    "text": "If zipcode_found is false,\nas it was initially,",
    "start": "1300590",
    "end": "1303679"
  },
  {
    "text": "not zipcode_found\nFalse is actually true,",
    "start": "1303680",
    "end": "1307490"
  },
  {
    "text": "because, again, the\nnot does the inversion.",
    "start": "1307490",
    "end": "1309530"
  },
  {
    "text": "And so it prints \"Sorry\nno delivery is available.\"",
    "start": "1309530",
    "end": "1312650"
  },
  {
    "text": "So it's a bit more complicated\nthan what we started off with,",
    "start": "1312650",
    "end": "1316010"
  },
  {
    "text": "but this does get us\nthe result we want.",
    "start": "1316010",
    "end": "1319410"
  },
  {
    "text": "All right.",
    "start": "1319410",
    "end": "1320340"
  },
  {
    "text": "That's it for this lecture.",
    "start": "1320340",
    "end": "1322270"
  },
  {
    "text": "We've got a short little\nvideo next talking",
    "start": "1322270",
    "end": "1325710"
  },
  {
    "text": "about a few additional\nPython language",
    "start": "1325710",
    "end": "1328350"
  },
  {
    "text": "features you might find handy.",
    "start": "1328350",
    "end": "1330890"
  }
]