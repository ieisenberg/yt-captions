[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "Okay. Hello everyone. Um, welcome back to the second class of, um, CS224N.",
    "start": "4160",
    "end": "12915"
  },
  {
    "text": "Okay, so right at the end of last time I was just showing you a little, um, from this, um,",
    "start": "12915",
    "end": "18974"
  },
  {
    "text": "IPython Notebook of things that you could do with word vectors but I kind of ran out of time a little for a bit.",
    "start": "18975",
    "end": "25380"
  },
  {
    "text": "So, I'll just spend a couple of more minutes first, um, showing the end of  this. I stuck this IPython Notebook up on the course page.",
    "start": "25380",
    "end": "33360"
  },
  {
    "start": "29000",
    "end": "117000"
  },
  {
    "text": "So, under lecture one you can find a copy of it and you can download it. So, I both stuck up just an HTML version of it and a zip file.",
    "start": "33360",
    "end": "41840"
  },
  {
    "text": "Like HTML file is only good to look at. You can't do anything with it. So, you wanna, if you wanna play with it by yourself, um,",
    "start": "41840",
    "end": "48275"
  },
  {
    "text": "download the zip file and get the IPython Notebook out of that. Okay. So we were looking at",
    "start": "48275",
    "end": "53390"
  },
  {
    "text": "these Glove word vectors which I'll talk about a bit more today and so there were these sort of basic results of similarity in this vector space work very nicely for,",
    "start": "53390",
    "end": "64930"
  },
  {
    "text": "um, discovering similar words and then going on from that,",
    "start": "64930",
    "end": "70550"
  },
  {
    "text": "there was this idea that we'll spend some more time on today which was, um,",
    "start": "70550",
    "end": "75830"
  },
  {
    "text": "maybe this vector space is not only a similarity space where close together things have similar meaning but it actually captures meaning",
    "start": "75830",
    "end": "85760"
  },
  {
    "text": "in a considerably deeper and more profound way which is to say that there are",
    "start": "85760",
    "end": "90800"
  },
  {
    "text": "actually directions in the space that you can point which have a certain meaning.",
    "start": "90800",
    "end": "97280"
  },
  {
    "text": "So, that if you are pointing in one direction it means this is more so the case,",
    "start": "97280",
    "end": "103970"
  },
  {
    "text": "if you are pointing in a different direction and the meaning space it might be this is the capital of this country or",
    "start": "103970",
    "end": "110780"
  },
  {
    "text": "all sorts of different meanings could be encoded in the space. And a way of testing that,",
    "start": "110780",
    "end": "116655"
  },
  {
    "text": "is to use these analogy, um, problems. And I quickly showed this at the end but just to make sure if you're",
    "start": "116655",
    "end": "123080"
  },
  {
    "start": "117000",
    "end": "438000"
  },
  {
    "text": "unguarded since it's sort of- it's sort of a clever thing right? So, the idea is that we're going to start with a pair of words like king and man.",
    "start": "123080",
    "end": "134600"
  },
  {
    "text": "And so what we're gonna do is we're gonna say well, there's a vector for king in the space and there's a vector for man in",
    "start": "134600",
    "end": "143150"
  },
  {
    "text": "the space and but what we're gonna do is we're going to subtract as in just good old vector subtraction that you hopefully learned in your,",
    "start": "143150",
    "end": "152000"
  },
  {
    "text": "um, linear algebra class. We're gonna subtract the man vector from the king vector and the idea we have in our head then is if we do",
    "start": "152000",
    "end": "160490"
  },
  {
    "text": "that what will happen is we'll be left with the meaning of kingship without the manness.",
    "start": "160490",
    "end": "167965"
  },
  {
    "text": "Um, and so then there's also a direct vector for a woman.",
    "start": "167965",
    "end": "174269"
  },
  {
    "text": "So, we can add the woman vector to that resulting vector and then we could say well,",
    "start": "174270",
    "end": "179810"
  },
  {
    "text": "in the vector, we end up at some point in the vector space and then we're gonna say well, what's the closest word that you're gonna find the here",
    "start": "179810",
    "end": "187340"
  },
  {
    "text": "and it's gonna print out the closest word and as we saw, um, last time, um,",
    "start": "187340",
    "end": "194765"
  },
  {
    "text": "lo and behold if you do that, um, you get the answer.",
    "start": "194765",
    "end": "200565"
  },
  {
    "text": "I'm saying you get, um, king, man, woman.",
    "start": "200565",
    "end": "212440"
  },
  {
    "text": "No? All right. [LAUGHTER]. You gotta reverse king and man.",
    "start": "213530",
    "end": "219194"
  },
  {
    "text": "I have to reverse king and, ah, sure, sure, sure. I'm sorry. Oops. Yeah, okay, I kinda do it well like man, king.",
    "start": "219195",
    "end": "229470"
  },
  {
    "text": "Ah, [LAUGHTER] Okay. Yeah, that's right.",
    "start": "229470",
    "end": "235260"
  },
  {
    "text": "Sorry. Okay. Yeah, because it should be man is to king as woman is to something sorry yeah.",
    "start": "235260",
    "end": "240385"
  },
  {
    "text": "I was getting [LAUGHTER] my order of components wrong. Okay. Um, and, you know,",
    "start": "240385",
    "end": "246260"
  },
  {
    "text": "as I was sort of I guess I was showing some examples last time with nationality words but I mean this in a way that is sort of surprising to shocking,",
    "start": "246260",
    "end": "258620"
  },
  {
    "text": "this actually works for all kinds of things that you can get meaning in this space.",
    "start": "258620",
    "end": "263870"
  },
  {
    "text": "So, I can ask various kinds of analogies of sorts.",
    "start": "263870",
    "end": "269030"
  },
  {
    "text": "So I can say Australia is to beer as France is to-. Wine.",
    "start": "269030",
    "end": "274280"
  },
  {
    "text": "Wine. You might think wine. What it gives back as champagne which seems a pretty good answer. [LAUGHTER] Um, I'll go with that.",
    "start": "274280",
    "end": "280535"
  },
  {
    "text": "Um, um, you can do more syntactic facts. So, I can say tall ta- tall is to tallest as long is to longest and it gets set.",
    "start": "280535",
    "end": "291000"
  },
  {
    "text": "Um, if I say good is to fantastic as bad is to terrible.",
    "start": "291000",
    "end": "296745"
  },
  {
    "text": "That it seems to get out that there's some kind of notion of make more extreme direction and get this direction out.",
    "start": "296745",
    "end": "304880"
  },
  {
    "text": "I skipped over one. A bomber is to Clinton as Reagan is to.",
    "start": "304880",
    "end": "310565"
  },
  {
    "text": "You may or may not like the answer it gives for this one as Obama is to- as Reagan is to Nixon.",
    "start": "310565",
    "end": "317615"
  },
  {
    "text": "Um, now one thing you might notice at this point and this is something I actually want to come back to at the end.",
    "start": "317615",
    "end": "324350"
  },
  {
    "text": "Um, well, there's this problem because Clinton's ambiguous, right? There's Bill or there's Hillary.",
    "start": "324350",
    "end": "329840"
  },
  {
    "text": "Um, and, um, I forget, you know, so this data as I said is a few years old.",
    "start": "329840",
    "end": "336860"
  },
  {
    "text": "So, this data was done in 2014. So, in sort of in- it definitely doesn't",
    "start": "336860",
    "end": "342230"
  },
  {
    "text": "have Trump really in it as a politician, um, but, you know, it would have variously both Clintons but as sort of makes sense if probably um,",
    "start": "342230",
    "end": "350420"
  },
  {
    "text": "for a sort of proof for 2014 data, um, that Bill Clinton dominated.",
    "start": "350420",
    "end": "355575"
  },
  {
    "text": "So, I think what we're getting, um, out of this is that Clinton and Nixon are sort of similar of people in dangers,",
    "start": "355575",
    "end": "363330"
  },
  {
    "text": "um, of being impeached. Um, and, uh, on both sides of the aisle had us thinking primarily of Bill Clinton.",
    "start": "363330",
    "end": "371695"
  },
  {
    "text": "But, um, if this sort of brings up something that I'll come back to right at the end of, um,",
    "start": "371695",
    "end": "377380"
  },
  {
    "text": "it sort of looks like we've got a sort of a problem here because we just have this string literally Clinton and that, um,",
    "start": "377380",
    "end": "385690"
  },
  {
    "text": "string is any possible sense and meaning of the string Clinton and so minimally um,",
    "start": "385690",
    "end": "395275"
  },
  {
    "text": "that we have Bill Clinton and Hillary Clinton that near. Maybe you have some friends that are called Clinton as well, right,",
    "start": "395275",
    "end": "401240"
  },
  {
    "text": "and they're all mixed together in this Clinton. And so that seems kinda problematic and that's sort of been an issue",
    "start": "401240",
    "end": "407200"
  },
  {
    "text": "that's been discussed some for these word vectors and I'll come back to that. Um, another thing you can do is you can give",
    "start": "407200",
    "end": "413780"
  },
  {
    "text": "a set of words and say which is the odd one out. Maybe you used to do puzzles like that in middle school or something.",
    "start": "413780",
    "end": "420020"
  },
  {
    "text": "Um, and so you can do that and it decides that cereal is the odd one out of that set. It seems okay.",
    "start": "420020",
    "end": "426080"
  },
  {
    "text": "Um, and then one other thing I'll just show you is, so, um, it'll sort of be nice to look at these words that I've drawn",
    "start": "426080",
    "end": "433250"
  },
  {
    "text": "them in some of the slide pictures. So, this is saying to put together a PCA or",
    "start": "433250",
    "end": "438680"
  },
  {
    "start": "438000",
    "end": "596000"
  },
  {
    "text": "Principal Components Analysis, um, scatter plot. Um, so, I can do that and then I can say, \"Um,",
    "start": "438680",
    "end": "446490"
  },
  {
    "text": "give it a set of words and draw me these as a scatter plot\" and um,",
    "start": "446490",
    "end": "453479"
  },
  {
    "text": "hopefully if I can just about fit it in, um, here's my scatter plot. And it works pretty well, right?",
    "start": "453480",
    "end": "460090"
  },
  {
    "text": "I've got the wine, champagne, beer up here then the coffee and tea. Um, here are the countries.",
    "start": "460090",
    "end": "465770"
  },
  {
    "text": "Here is the schools, college institute, universities. Um, the animals are down here.",
    "start": "465770",
    "end": "471380"
  },
  {
    "text": "Um, foodstuffs there. So, yeah, this sort of really does work with this two direction- dimensional display.",
    "start": "471380",
    "end": "480290"
  },
  {
    "text": "It basically shows you similarity. Now, um, there are, you know,",
    "start": "480290",
    "end": "486355"
  },
  {
    "text": "to some extent though you want to hold on to your wallet with these PCA displays. So, it's as I've discussed before since you're",
    "start": "486355",
    "end": "493160"
  },
  {
    "text": "taking something that was 100-dimensional and we're just doing this 2D projection that is capturing some of the major geometry of",
    "start": "493160",
    "end": "500720"
  },
  {
    "text": "the space but it just has to be losing a huge amount of the information. So, when things end up close together,",
    "start": "500720",
    "end": "507759"
  },
  {
    "text": "they might be really close together in the original space or they might just have been words that lost in",
    "start": "507760",
    "end": "513680"
  },
  {
    "text": "the 2D projection because they- there are other patterns that were more dominant and were chosen as the first two principal components.",
    "start": "513680",
    "end": "521690"
  },
  {
    "text": "So, you sort of don't wanna over trust these things and something if you like Infoviz you might think",
    "start": "521690",
    "end": "527510"
  },
  {
    "text": "about is how there are other ways that I might be able to represent the distances in a way that was more accurate.",
    "start": "527510",
    "end": "533690"
  },
  {
    "text": "Um, but anyway this is very simple to do and I'm just getting a PCA to reduce the dimensionality of the matrix and then,",
    "start": "533690",
    "end": "540650"
  },
  {
    "text": "um, transforming with it these word vectors and printing them. Um, it's mainly easy to do.",
    "start": "540650",
    "end": "547380"
  },
  {
    "text": "The bit that wasn't easy for me to do, um, but if someone's got some clever Python um plotting tips I'd like one,",
    "start": "547380",
    "end": "554780"
  },
  {
    "text": "if someone wants to send me a message after class. I would have thought there'd be some default way in which you could just",
    "start": "554780",
    "end": "560990"
  },
  {
    "text": "label points in a scatter plot but I wasn't able to find one. So, what I did, um,",
    "start": "560990",
    "end": "567230"
  },
  {
    "text": "was I'm just sort of plotting the texts and I'm offsetting it a little bit from the points. Um, now that works kinda crappily",
    "start": "567230",
    "end": "573650"
  },
  {
    "text": "because they just collide with each other as you can see. Um, so, it'd be better if there was a better way to do point labeling in Python plots.",
    "start": "573650",
    "end": "580970"
  },
  {
    "text": "So, if anyone knows the answer to that one you can send it to me. Um, okay. So, that's that. Ah.",
    "start": "580970",
    "end": "589714"
  },
  {
    "text": "And if you haven't used IPython Notebooks before and don't want your computer to run really slowly,",
    "start": "589715",
    "end": "595670"
  },
  {
    "text": "it's a good idea to halt your IPython Notebooks when you're not gonna be using them anymore, um, especially if they're computing something.",
    "start": "595670",
    "end": "602524"
  },
  {
    "start": "596000",
    "end": "1459000"
  },
  {
    "text": "Um, okay. [NOISE] Um. [NOISE]",
    "start": "602525",
    "end": "626480"
  },
  {
    "text": "Okay. [NOISE] So now, [NOISE] um, lecture two and so for today,",
    "start": "626480",
    "end": "632180"
  },
  {
    "text": "we're gonna keep on talking about things you can do with Word Vectors and say a little bit at the end about Word sensors.",
    "start": "632180",
    "end": "638870"
  },
  {
    "text": "So, in more detail, [NOISE] um, I'm gonna say a bit more about, um, Word2Vec.",
    "start": "638870",
    "end": "645530"
  },
  {
    "text": "I'm gonna have a sort of a very brief excursion on optimization, um, but then I sort of want to explain a bit more of the space of what",
    "start": "645530",
    "end": "655010"
  },
  {
    "text": "people have done and can do with dense word representations.",
    "start": "655010",
    "end": "660515"
  },
  {
    "text": "So I am gonna say something about count-based approaches to capturing meaning and how do they work.",
    "start": "660515",
    "end": "667205"
  },
  {
    "text": "I'm gonna talk for a bit about a, a different model of Word Vectors which was the GloVe model that,",
    "start": "667205",
    "end": "672755"
  },
  {
    "text": "um, as a post-doc of mine, um, Jeffrey Pennington and, uh,",
    "start": "672755",
    "end": "678305"
  },
  {
    "text": "me worked on a couple of years ago, um, talk some about evaluation, really quite dominant theme on a lot of what",
    "start": "678305",
    "end": "685070"
  },
  {
    "text": "we do on natural language processing is how do we, how do we evaluate things and how much do we trust our evaluations,",
    "start": "685070",
    "end": "692105"
  },
  {
    "text": "um, and then say a little bit about, um, word sensors. I have a sort of a goal here which is that by the end of the class,",
    "start": "692105",
    "end": "698540"
  },
  {
    "text": "um, you should actually sort of understand, um, enough of the lay of the land that you could",
    "start": "698540",
    "end": "703910"
  },
  {
    "text": "read papers about word vectors such as the ones that are in the syllabus and actually understand",
    "start": "703910",
    "end": "709310"
  },
  {
    "text": "them and where they're coming from and roughly how they work. And so, you know, if you really wanna minimize",
    "start": "709310",
    "end": "714410"
  },
  {
    "text": "work for your c- this class, you could think, \"I, I know everything I need to know after the first week and I'm gonna",
    "start": "714410",
    "end": "719780"
  },
  {
    "text": "do a final project on word vectors and I'll be okay.\" Um, and you know, you could actually do that,",
    "start": "719780",
    "end": "725150"
  },
  {
    "text": "I mentioned during the wo- um, class, um, a couple of recent pieces of work on word vectors.",
    "start": "725150",
    "end": "731585"
  },
  {
    "text": "On the other hand, um, doing things with word vectors as a fairly mined out areas, so you're probably better off, um,",
    "start": "731585",
    "end": "738200"
  },
  {
    "text": "also listening to some of the later parts of the class. Okay. So, remember we had this idea of Word2Vec,",
    "start": "738200",
    "end": "744650"
  },
  {
    "text": "so it was an iterative updating algorithm that learned, um,",
    "start": "744650",
    "end": "749975"
  },
  {
    "text": "these vector representations of words, then in some sense capture their meaning and the way it worked was we kinda",
    "start": "749975",
    "end": "756290"
  },
  {
    "text": "moved position by position through a corpus and each point in time, we had a center word here into and it's trying to predict",
    "start": "756290",
    "end": "765170"
  },
  {
    "text": "the words around that by having a probability distribution over words will occur around that,",
    "start": "765170",
    "end": "770945"
  },
  {
    "text": "and that probability distribution is defined simply in terms of the.product of the word vectors via the Softmax function.",
    "start": "770945",
    "end": "780275"
  },
  {
    "text": "And so, what we wanna do is change those vectors in a way that this gives good probability predictions,",
    "start": "780275",
    "end": "786920"
  },
  {
    "text": "that gives as high probability as possible to words that you tend to see in the context.",
    "start": "786920",
    "end": "792440"
  },
  {
    "text": "And so, just to drill that in a little bit more, you know, what we actually have is we have two matrices, right?",
    "start": "792440",
    "end": "801305"
  },
  {
    "text": "We have for center words, we have a matrix where for each word in our vocabulary,",
    "start": "801305",
    "end": "806930"
  },
  {
    "text": "we have a vector, um, and at this, this is probably as good a point as any to say that it",
    "start": "806930",
    "end": "812450"
  },
  {
    "text": "turns out that all the major deep learning packages, TensorFlow, PyTorch, etc., for their word vectors,",
    "start": "812450",
    "end": "820115"
  },
  {
    "text": "the word vectors are represented as rows. If you've done a bunch of math classes, that might not be what you would expect.",
    "start": "820115",
    "end": "826790"
  },
  {
    "text": "You might have expected the other way around, but they all put them in rows. So we can have rows for our,",
    "start": "826790",
    "end": "833285"
  },
  {
    "text": "um, so we have six words and a five dimensional vector each. Okay. And then, we have this outside, um,",
    "start": "833285",
    "end": "840035"
  },
  {
    "text": "matrix where we also have a second, um, vector for each word which is this representation in context.",
    "start": "840035",
    "end": "847625"
  },
  {
    "text": "Um, so when we have a particular center word here, word four, you know,",
    "start": "847625",
    "end": "852949"
  },
  {
    "text": "when we're doing our computations, we're taking a.product between v_4 and each row of",
    "start": "852950",
    "end": "859640"
  },
  {
    "text": "U and that's then giving us a vector of dot product scores.",
    "start": "859640",
    "end": "865655"
  },
  {
    "text": "And so, then after that, we're running Softmaxes on each of those numbers doing it",
    "start": "865655",
    "end": "871190"
  },
  {
    "text": "element-wise and that's been giving us a probability distribution over words in the context.",
    "start": "871190",
    "end": "877079"
  },
  {
    "text": "Um, and the sort of things to notice there, um, which hopefully you noticed last time,",
    "start": "877080",
    "end": "883360"
  },
  {
    "text": "but to make sure you noticed that, um, you know, we've just got one probability distribution, right?",
    "start": "883360",
    "end": "889280"
  },
  {
    "text": "So in terms of what words we predict, we're predicting exactly the same probability distribution, every position.",
    "start": "889280",
    "end": "895640"
  },
  {
    "text": "We've sort of saying the most likely word one to the left is whatever it is house or most likely word to the left is house,",
    "start": "895640",
    "end": "902630"
  },
  {
    "text": "three to the left is house, the one to the right should be house too, right? So, it's sort of no sort of find us a prediction,",
    "start": "902630",
    "end": "909319"
  },
  {
    "text": "it's just an overall kind of probability distribution of words that are likely to occur in my context.",
    "start": "909320",
    "end": "916160"
  },
  {
    "text": "So, all we're asking for is a model that gives reasonably high probability estimates to all words that",
    "start": "916160",
    "end": "923480"
  },
  {
    "text": "occur in the context of this word relatively often, is nothing more to it than that.",
    "start": "923480",
    "end": "929975"
  },
  {
    "text": "And that's part of why it's sort of surprising when you've got such a simplistic thing that it seems like at the end of the day,",
    "start": "929975",
    "end": "936380"
  },
  {
    "text": "it can end up capturing so much about the meanings of words and aspects of the meanings of words,",
    "start": "936380",
    "end": "942769"
  },
  {
    "text": "like in the examples I've just showing you in the IPython Notebook. Um, and [NOISE] there's one other thing I was gonna say, oh yeah,",
    "start": "942770",
    "end": "953300"
  },
  {
    "text": "one other thing I was gonna say was the other thing that might occur to you from this is,",
    "start": "953300",
    "end": "959253"
  },
  {
    "text": "um, well, wait a minute, there was like that and-and, and-of that occur all the time.",
    "start": "959254",
    "end": "966125"
  },
  {
    "text": "Um, so that means every word must have a high dot product with words like that and of and,",
    "start": "966125",
    "end": "976219"
  },
  {
    "text": "um, they get their probabilities right. And the first answer to that is, \"Yup, that's true.\"",
    "start": "976219",
    "end": "983014"
  },
  {
    "text": "And it turns out that all word vectors, [NOISE] um, have a very strong prob- word probability component that reflects that.",
    "start": "983015",
    "end": "991010"
  },
  {
    "text": "And I mean, one of the things that some workers discuss, so on the readings,",
    "start": "991010",
    "end": "996980"
  },
  {
    "text": "there are two papers from Sanjeev Arora's group in Princeton and one of those papers sort of discusses, um, this probability,",
    "start": "996980",
    "end": "1005485"
  },
  {
    "text": "high frequency effect and your crude way of [NOISE] actually fixing this high frequency effect is that normally, um,",
    "start": "1005485",
    "end": "1013959"
  },
  {
    "text": "the first, um, the first biggest component in your word vectors is actually a frequency effect and if you just lop it off,",
    "start": "1013960",
    "end": "1022390"
  },
  {
    "text": "you can make your semantic similarities better. Um, but there are other things that we do to sort of deal with high frequencies.",
    "start": "1022390",
    "end": "1029860"
  },
  {
    "text": "Okay, so we get these lovely spaces that I've shown some of. But I'll make one more remark. Um.",
    "start": "1029860",
    "end": "1037510"
  },
  {
    "text": "Yeah, so did I say this last time? Oh, oh. Um, my remark anyway is that,",
    "start": "1037510",
    "end": "1044155"
  },
  {
    "text": "um, we show all these two-dimensional pictures. They're exceedingly, exceedingly misleading because in these pic,",
    "start": "1044155",
    "end": "1053455"
  },
  {
    "text": "two-dimensional pictures, you know, you have these effects that if, you know,",
    "start": "1053455",
    "end": "1059530"
  },
  {
    "text": "Samsung is close to Nokia, it has to be over here and then it has to be far away from words that are over here.",
    "start": "1059530",
    "end": "1067690"
  },
  {
    "text": "Um, whereas you might sort of also want to have the effect that Nokia is close to Finland for a different reason,",
    "start": "1067690",
    "end": "1074619"
  },
  {
    "text": "um, and you can't do that in two-dimensional, um, vector spaces but, you know, one of the, um,",
    "start": "1074619",
    "end": "1080665"
  },
  {
    "text": "most of the properties of high dimensional vector spaces are very unintuitive, and one of the ways that they're unintuitive is in a high dimensional vector space,",
    "start": "1080665",
    "end": "1089800"
  },
  {
    "text": "a word can be close to lots of other words in different directions.",
    "start": "1089800",
    "end": "1095275"
  },
  {
    "text": "Um, okay. So um, we sort of started to talk about how we went about learning these word vectors.",
    "start": "1095275",
    "end": "1104980"
  },
  {
    "text": "I'm sort of going to take about a five minute detour into optimization.",
    "start": "1104980",
    "end": "1111580"
  },
  {
    "text": "Now, this isn't really an optimization class, if you want to learn a lot about optimization. Well you can learn more about optimization if you do",
    "start": "1111580",
    "end": "1118870"
  },
  {
    "text": "229 and if you do something like Stephen Boyd's optimization class, you can learn a lot of optimization but this is",
    "start": "1118870",
    "end": "1125799"
  },
  {
    "text": "sort of really baby optimization but just to make sure everyone's on the same page, here are three slides.",
    "start": "1125800",
    "end": "1132085"
  },
  {
    "text": "Right, so what we did at the end, what we did over there, where I apologized that my writing was too small,",
    "start": "1132085",
    "end": "1139090"
  },
  {
    "text": "but that will give you the chance to when doing homework too and you have to write that out to work it out for yourselves and learn more in the process.",
    "start": "1139090",
    "end": "1148495"
  },
  {
    "text": "Right, so what we had was a cost function that we wanted to minimize and so what we did was we did our bit of",
    "start": "1148495",
    "end": "1155440"
  },
  {
    "text": "calculus to calculate the gradient of the cost function with respect",
    "start": "1155440",
    "end": "1160465"
  },
  {
    "text": "to our word vectors which were our variables theta and then what we want to do is say,",
    "start": "1160465",
    "end": "1166570"
  },
  {
    "text": "well if we take a small step in the direction of the negative of the gradient that will be taking us down,",
    "start": "1166570",
    "end": "1175000"
  },
  {
    "text": "down hill in this space and we want to keep on doing that and sort of head to the minimum of our space.",
    "start": "1175000",
    "end": "1182410"
  },
  {
    "text": "I mean, of course in our high multi-dimensional space, you know, it might not be a nice smooth curve like this.",
    "start": "1182410",
    "end": "1188140"
  },
  {
    "text": "It might be a horrible and non-convex curve but that's just the idea. So, essentially we're saying we've got the old parameters,",
    "start": "1188140",
    "end": "1196510"
  },
  {
    "text": "we work out the gradient of the objective function using those old parameters.",
    "start": "1196510",
    "end": "1201525"
  },
  {
    "text": "We multiply that by a small alpha which is our step size or learning rate because we only want to move a",
    "start": "1201525",
    "end": "1208679"
  },
  {
    "text": "little bit each time because if back here, if we sort of said downhill is this way and said,",
    "start": "1208680",
    "end": "1215250"
  },
  {
    "text": "\"Great let's go a long way that way.\" You could kind of completely overshoot, so we only want to go a little bit each time.",
    "start": "1215250",
    "end": "1221220"
  },
  {
    "text": "So we normally have a small learning rate alpha and so we subtract a small multiple of the gradient and we,",
    "start": "1221220",
    "end": "1228745"
  },
  {
    "text": "from the old parameters and we get our new parameters and that sort of effectively being worked out,",
    "start": "1228745",
    "end": "1234580"
  },
  {
    "text": "component wise as is shown below, that we're just doing that to each of the partial derivatives and then,",
    "start": "1234580",
    "end": "1240924"
  },
  {
    "text": "that our hope is that that will let us gradually walk down this surface. Now, if you actually did this,",
    "start": "1240925",
    "end": "1248049"
  },
  {
    "text": "it would be unbelievably bad for the kind of systems that we build and there's a lot of work on",
    "start": "1248050",
    "end": "1254080"
  },
  {
    "text": "clever optimization but the most basic thing which you definitely need to know is that well,",
    "start": "1254080",
    "end": "1262015"
  },
  {
    "text": "our objective function here, J of theta was a function of our entire corpus, right?",
    "start": "1262015",
    "end": "1269230"
  },
  {
    "text": "And to get this to work well, the first thing you want to do is, you know collect a few billion words of your favorite language and then say,",
    "start": "1269230",
    "end": "1277600"
  },
  {
    "text": "\"Go and build a Word2Vec model for me, \" and so, if you have to evaluate",
    "start": "1277600",
    "end": "1283945"
  },
  {
    "text": "a billion center words and maybe then to- for each of 10 billion context words,",
    "start": "1283945",
    "end": "1290110"
  },
  {
    "text": "if you have a window size of five and you- so you have to do these sort of 10 billion um,",
    "start": "1290110",
    "end": "1295690"
  },
  {
    "text": "Softmax calculations before you work out what your gradient is,",
    "start": "1295690",
    "end": "1300774"
  },
  {
    "text": "that you're going to be having your computer compute for a quite a long time before you make one little step in the gradient and so things are going to go so, so slowly.",
    "start": "1300775",
    "end": "1310044"
  },
  {
    "text": "So, no one does that in deep learning systems. Um, so what people- everyone does is use",
    "start": "1310045",
    "end": "1316269"
  },
  {
    "text": "stochastic gradient descent and in stochastic gradient descent, we sample our window in the simplest case.",
    "start": "1316270",
    "end": "1325325"
  },
  {
    "text": "We, just for this one window, work out an estimate of the gradient and we use it as a parameter update.",
    "start": "1325325",
    "end": "1333900"
  },
  {
    "text": "So, this is sort of an amazingly, amazingly noisy estimate of",
    "start": "1333900",
    "end": "1338970"
  },
  {
    "text": "the gradient but it sort of doesn't matter too much because as soon as we've done it, we're going to choose a different center word and do it again and again,",
    "start": "1338970",
    "end": "1346750"
  },
  {
    "text": "so that gradually we sort of approach what we would have gotten if we'd sort of looked at all of the center words before we took any steps,",
    "start": "1346750",
    "end": "1354998"
  },
  {
    "text": "but because we take steps as we go, we get to the minimum of the function orders and magnitude more quickly.",
    "start": "1354999",
    "end": "1363655"
  },
  {
    "text": "So thi- this shows the simplest case where we're just sampling one window.",
    "start": "1363655",
    "end": "1368995"
  },
  {
    "text": "In practice, that's not what we normally do. We normally sample as- a small bunch,",
    "start": "1368995",
    "end": "1375895"
  },
  {
    "text": "you know, order of approximately 32 or 64. Um, so if we have a sample that's bigger,",
    "start": "1375895",
    "end": "1383184"
  },
  {
    "text": "that's generally referred to as a mini-batch and we calculate a gradient estimate from the mini-batch.",
    "start": "1383185",
    "end": "1389110"
  },
  {
    "text": "Um, so that has two advantages. One advantage is that you kind of get less noisy estimates of",
    "start": "1389110",
    "end": "1396550"
  },
  {
    "text": "the gradient because you've kind of averaged over a bunch of examples rather than just using one,",
    "start": "1396550",
    "end": "1401830"
  },
  {
    "text": "but the second advantage, which is the one why we really care, is if we want our computations to go fast when we're using a GPU,",
    "start": "1401830",
    "end": "1410815"
  },
  {
    "text": "that you need to get parallelization of doing the same operation a whole bunch of",
    "start": "1410815",
    "end": "1416049"
  },
  {
    "text": "times and then you gain a lot by using a mini-batch of 64 examples or something like that.",
    "start": "1416050",
    "end": "1422274"
  },
  {
    "text": "Um, and you don't have to but you know, it turns out the details of the guts of the hardware that you know,",
    "start": "1422275",
    "end": "1427780"
  },
  {
    "text": "it isn't- [inaudible] GPUs, you know, they have these, whatever they have inside them, there in powers of two.",
    "start": "1427780",
    "end": "1433495"
  },
  {
    "text": "So, you get better speedups if you use batches like 32 or 64, rather than just deciding that 42 is still your favorite number from",
    "start": "1433495",
    "end": "1441070"
  },
  {
    "text": "high school [LAUGHTER] and you're going to use that as the size of your mini-batch.",
    "start": "1441070",
    "end": "1446059"
  },
  {
    "text": "Okay. um, yeah here's one other interesting thing which",
    "start": "1447000",
    "end": "1453730"
  },
  {
    "text": "actually has some optimization details in it, it turns out. Um, if you think of these um,",
    "start": "1453730",
    "end": "1459625"
  },
  {
    "start": "1459000",
    "end": "1567000"
  },
  {
    "text": "doing stochastic gradients with word vectors, that's actually very different to some other deep learning problems like vision deep learning problems.",
    "start": "1459625",
    "end": "1468385"
  },
  {
    "text": "Because for either a single window or even a sort of a reasonably sized mini-batch,",
    "start": "1468385",
    "end": "1473740"
  },
  {
    "text": "it will turn out that those mini-batch, mini-batch only has, you know,",
    "start": "1473740",
    "end": "1479260"
  },
  {
    "text": "relatively speaking a handful of words in it, right? So, if you have mini-batch of size 32 and a window size of ten,",
    "start": "1479260",
    "end": "1485710"
  },
  {
    "text": "you know, probably there are only about a 100,150 different words in it. Um, but yet we're building this model over",
    "start": "1485710",
    "end": "1493030"
  },
  {
    "text": "a vocabulary of quarter of a million words or something like that. So, just about all of the elements in this vector are zero.",
    "start": "1493030",
    "end": "1500290"
  },
  {
    "text": "Um, and so, um, we sort of really have this very sparse um,",
    "start": "1500290",
    "end": "1506934"
  },
  {
    "text": "perimeter update and so, um, that sort of suggests that we actually probably um,",
    "start": "1506935",
    "end": "1514299"
  },
  {
    "text": "want to sort of only update the word vectors that appear and then the question is whether you can achieve that, right?",
    "start": "1514300",
    "end": "1521380"
  },
  {
    "text": "The dumb way to do it, is you just have this matrix that's normally, nearly all zeros and you say add",
    "start": "1521380",
    "end": "1527830"
  },
  {
    "text": "those two matrices together and there you go and then the question is,",
    "start": "1527830",
    "end": "1533230"
  },
  {
    "text": "can you actually have a sparse matrix update which only updates the certain rows of the matrix that contain",
    "start": "1533230",
    "end": "1541030"
  },
  {
    "text": "the words that you've entered and do things much faster? And if you're doing something even cleverer like doing",
    "start": "1541030",
    "end": "1547240"
  },
  {
    "text": "distributed computation over multiple computers and sharing your parameters, well then definitely you just sort of only want to update",
    "start": "1547240",
    "end": "1554620"
  },
  {
    "text": "the word vectors that you've actually been getting a parameter estimate for. So, there's sort of some details there but I'm",
    "start": "1554620",
    "end": "1560850"
  },
  {
    "text": "going to skip past them for more details, um. Right. So, a couple of people asked afterwards, yeah,",
    "start": "1560850",
    "end": "1568570"
  },
  {
    "start": "1567000",
    "end": "1789000"
  },
  {
    "text": "why are there these two word vectors that sort of center and the outside one?",
    "start": "1568570",
    "end": "1574524"
  },
  {
    "text": "And, I mean the answer to that is, it makes that math I showed you easy, right? So that if, um,",
    "start": "1574525",
    "end": "1581875"
  },
  {
    "text": "if you do it as I showed you, well, you know, for working out, um,",
    "start": "1581875",
    "end": "1588130"
  },
  {
    "text": "the partial derivatives for the center word. It's just as I showed you, it's easy.",
    "start": "1588130",
    "end": "1595210"
  },
  {
    "text": "Um, but if you use only one set of word vectors, well then the same word,",
    "start": "1595210",
    "end": "1601809"
  },
  {
    "text": "that's the center word, will be one of the choices for the context word when you're working out that Softmax for the context word.",
    "start": "1601810",
    "end": "1609894"
  },
  {
    "text": "And then you'll get these terms that are then squared terms in terms of the two references,",
    "start": "1609895",
    "end": "1615820"
  },
  {
    "text": "so that same word, and that makes your math more difficult. Um, so it's sort of just a practical thing,",
    "start": "1615820",
    "end": "1623725"
  },
  {
    "text": "um, in the end. I mean it sort of doesn't make very much difference, because if you sort of think about it since you're going along through all the,",
    "start": "1623725",
    "end": "1632005"
  },
  {
    "text": "um, positions, you know. What was a center word at one point is immediately afterwards a context word of what used to be a context word,",
    "start": "1632005",
    "end": "1640510"
  },
  {
    "text": "which is now the center word. So, sort of doing the same computations because, you know,",
    "start": "1640510",
    "end": "1646240"
  },
  {
    "text": "the dot product is symmetric actually, um, all over again. So, they get pretty similar vector representations.",
    "start": "1646240",
    "end": "1654100"
  },
  {
    "text": "So, it seems like in general you can get the best results by averaging what comes out for your two vectors,",
    "start": "1654100",
    "end": "1659349"
  },
  {
    "text": "and you end up with just one vector per word. Okay, more substantively, um,",
    "start": "1659349",
    "end": "1665740"
  },
  {
    "text": "if you go to the word2vec paper, you'll discover that there's sort of more to word2vec that they",
    "start": "1665740",
    "end": "1671920"
  },
  {
    "text": "define as sort of a family of word2vec models. And there are so two main parts of that family.",
    "start": "1671920",
    "end": "1679044"
  },
  {
    "text": "Um, firstly, there's a choice between the Continuous Bag of Words model, and the skip-grams model.",
    "start": "1679045",
    "end": "1685345"
  },
  {
    "text": "And what I presented with the skip-grams models. So, in the skip-grams model, you've got one center word and you're trying to",
    "start": "1685345",
    "end": "1692170"
  },
  {
    "text": "predict all the words in context one at a time. For the Continuous Bag of Words model it's the opposite.",
    "start": "1692170",
    "end": "1699225"
  },
  {
    "text": "You've got all of the outside words and you're trying to use all of them, though considered independently like a Naive Bayes model to predict the center word.",
    "start": "1699225",
    "end": "1709715"
  },
  {
    "text": "Um, and then the second one is, um, the way I presented learning this was",
    "start": "1709715",
    "end": "1717684"
  },
  {
    "text": "the method that's using the so called Naive Softmax. So, therefore when we are wanting to work things out,",
    "start": "1717685",
    "end": "1724315"
  },
  {
    "text": "we were sort of saying okay we want probability estimates for the context words,",
    "start": "1724315",
    "end": "1729353"
  },
  {
    "text": "and so we're just going to sum over the whole vocabulary and we'll come up with these probability estimates.",
    "start": "1729354",
    "end": "1735550"
  },
  {
    "text": "Um, in practice, that turns out to be a sort of a bad idea because that would also make things mega slow.",
    "start": "1735550",
    "end": "1743860"
  },
  {
    "text": "So, in homework two, coming up next week, um, you will get to implement a much more practical, um,",
    "start": "1743860",
    "end": "1751585"
  },
  {
    "text": "way of doing this which they present in the word2vec papers, right? So, the problem is,",
    "start": "1751585",
    "end": "1756730"
  },
  {
    "text": "if we're using this equation that we use to do the calculus, that down in this denominator here,",
    "start": "1756730",
    "end": "1763225"
  },
  {
    "text": "we're doing the sum over the entire vocabulary. So, if you have a vocabulary of a quarter million words,",
    "start": "1763225",
    "end": "1769120"
  },
  {
    "text": "we're sort of doing a quarter of a million dot products and exponentials and adding them all to work out that denominator.",
    "start": "1769120",
    "end": "1776170"
  },
  {
    "text": "And that sort of seems uh, sort of a really bad idea if you want things to be fast.",
    "start": "1776170",
    "end": "1781240"
  },
  {
    "text": "Um, so, um, Tomas Mikolov and colleagues came up with this idea of negative sampling would be near enough.",
    "start": "1781240",
    "end": "1788830"
  },
  {
    "text": "And so the idea of negative sampling, is we're going to train binary logistic regressions instead.",
    "start": "1788830",
    "end": "1795745"
  },
  {
    "start": "1789000",
    "end": "1846000"
  },
  {
    "text": "And so, we're going to train one binary logistic regression for the actual word observed what's in the numerator,",
    "start": "1795745",
    "end": "1804055"
  },
  {
    "text": "and you want to give high probability to the word that was actually observed.",
    "start": "1804055",
    "end": "1809140"
  },
  {
    "text": "And then, what we're going to do, is we're going to sort of randomly sample a bunch of other words,",
    "start": "1809140",
    "end": "1815679"
  },
  {
    "text": "they're the negative samples and say they weren't the ones that were actually seen.",
    "start": "1815680",
    "end": "1821920"
  },
  {
    "text": "So, you should be trying to give them as low a probability as possible. Okay, so, um, the sort of notation that",
    "start": "1821920",
    "end": "1830920"
  },
  {
    "text": "they use in the paper is sort of slightly different to the one I've used. They actually do maximization not minimization,",
    "start": "1830920",
    "end": "1838360"
  },
  {
    "text": "and that's the equation which I'll come back to. Um, though before we do that here's the sigmoid function.",
    "start": "1838360",
    "end": "1846700"
  },
  {
    "start": "1846000",
    "end": "1984000"
  },
  {
    "text": "So, the sigmoid function is normally written like this, one over one plus E to the minus X.",
    "start": "1846700",
    "end": "1851905"
  },
  {
    "text": "But, um, essentially, the sigmoid function is like a binary case of the Softmax function, right?",
    "start": "1851905",
    "end": "1859600"
  },
  {
    "text": "That we have two possible outcomes, yes or no, and that you're sort of again got an input that is any real number,",
    "start": "1859600",
    "end": "1867610"
  },
  {
    "text": "and it's mapping it onto a probability distribution between zero and one which represents these two binary outcomes.",
    "start": "1867610",
    "end": "1874870"
  },
  {
    "text": "And to the extent that the number is positive, it kind of ceilings to one and negative goes down to zero.",
    "start": "1874870",
    "end": "1881215"
  },
  {
    "text": "Okay, so with this time, we're going to take the dot for- for the good word,",
    "start": "1881215",
    "end": "1886239"
  },
  {
    "text": "we're going to take the dot product of the two vectors, shove it through our sigmoid function",
    "start": "1886239",
    "end": "1891835"
  },
  {
    "text": "and then we're going to want that probability estimate, um, to be as high as possible. So, if I show you this version,",
    "start": "1891835",
    "end": "1898809"
  },
  {
    "text": "which is just written slightly differently, um, to look as much as possible like the notation that we used last time,",
    "start": "1898810",
    "end": "1906730"
  },
  {
    "text": "here is our new objective function for using negative sampling. And we've got two terms,",
    "start": "1906730",
    "end": "1912415"
  },
  {
    "text": "the first one, um, is the log of the sigmoid of the observed context word,",
    "start": "1912415",
    "end": "1919285"
  },
  {
    "text": "the outside words, dot producted with the center word, and we're going to want that to be big.",
    "start": "1919285",
    "end": "1925180"
  },
  {
    "text": "Um, and then on the other hand, um, we've got, um, the,",
    "start": "1925180",
    "end": "1932785"
  },
  {
    "text": "um, randomly chosen K words, which are just other words,",
    "start": "1932785",
    "end": "1938530"
  },
  {
    "text": "and we're going to work out dot products between them and the center word. And we're going to want those to be as small as possible.",
    "start": "1938530",
    "end": "1945100"
  },
  {
    "text": "Um, note that extra minus sign in there which is causing the sign of the two things to be different, right?",
    "start": "1945100",
    "end": "1951549"
  },
  {
    "text": "So, those are our negative samples. And for big K, it can be a reasonably modest number,",
    "start": "1951550",
    "end": "1957220"
  },
  {
    "text": "you can just take kind of 10, 15 negative samples and that works pretty fine.",
    "start": "1957220",
    "end": "1962664"
  },
  {
    "text": "Um, I said we sort of sampled some words, um, to be the negative samples.",
    "start": "1962665",
    "end": "1968755"
  },
  {
    "text": "They in particular propose a sampling distribution that helps them along",
    "start": "1968755",
    "end": "1974260"
  },
  {
    "text": "a little in partly dealing with this pro- problem of very frequent words.",
    "start": "1974260",
    "end": "1980260"
  },
  {
    "text": "Um, so the starting point of how you sample words is you use what we call the- the unigram distribution.",
    "start": "1980260",
    "end": "1987460"
  },
  {
    "start": "1984000",
    "end": "4844000"
  },
  {
    "text": "So, that just means you take words on a large corpus and count up how often each one occurs just as a count of independent words,",
    "start": "1987460",
    "end": "1996010"
  },
  {
    "text": "so there's the called unigram counts. And so you start off with unigram counts, but then you raise them to the three quarters power.",
    "start": "1996010",
    "end": "2003585"
  },
  {
    "text": "And raising to the three quarters power, has the effect of, um, decreasing how often you sample very common words,",
    "start": "2003585",
    "end": "2010785"
  },
  {
    "text": "and increasing how often you sample rarer words. Okay, um, and that's that.",
    "start": "2010785",
    "end": "2019394"
  },
  {
    "text": "Okay, so that's everything about word2vec I am going to say. Anyone have any last thing.",
    "start": "2019395",
    "end": "2028559"
  },
  {
    "text": "Yes. [NOISE] Oh, oh [NOISE]. This is a- sorry Z,",
    "start": "2028560",
    "end": "2035275"
  },
  {
    "text": "that capital Z is often used as a normalization term and so this is saying,",
    "start": "2035275",
    "end": "2040660"
  },
  {
    "text": "well if you want the probability distribution of words, is you work out this three quarters power of the count",
    "start": "2040660",
    "end": "2046960"
  },
  {
    "text": "of the word for every word in the vocabulary and then these numbers you just sum them up over the vocabulary and it'll be sum",
    "start": "2046960",
    "end": "2053800"
  },
  {
    "text": "total and we're dividing by that so we get a probability distribution. Good question because i hadn't explained that.",
    "start": "2053800",
    "end": "2059845"
  },
  {
    "text": "Um, in this class, when you see the letter Z with no explanation, it normally means I am a normalization term to turn things into",
    "start": "2059845",
    "end": "2068740"
  },
  {
    "text": "probabilities and you sort of iterate over the numerator term and summing them and divide through.",
    "start": "2068740",
    "end": "2074800"
  },
  {
    "text": "Any other questions of things I haven't explained or otherwise? Yes.",
    "start": "2074800",
    "end": "2080530"
  },
  {
    "text": "So the window [inaudible] that's a [inaudible] Yeah, yes.",
    "start": "2080530",
    "end": "2086290"
  },
  {
    "text": "So, [NOISE] what size window do you use? I'll actually come back to that in a bit and show a little bit of data on that,",
    "start": "2086290",
    "end": "2092514"
  },
  {
    "text": "but yeah, we haven't done anything about that. At the moment we're guessing a window size like five, which isn't a bad one um,",
    "start": "2092515",
    "end": "2098995"
  },
  {
    "text": "but you know there isn't- there hasn't really been any science behind that, um,",
    "start": "2098995",
    "end": "2104305"
  },
  {
    "text": "that people treat that as what's then called a hyperparameter which means that um,",
    "start": "2104305",
    "end": "2109405"
  },
  {
    "text": "you try a few different numbers and see which one seems best and that's the one that you use in your future work. Yeah.",
    "start": "2109405",
    "end": "2117310"
  },
  {
    "text": "Um, [inaudible] three quarters power chosen for any theoretical reason or just because it seems to work in practice?",
    "start": "2117310",
    "end": "2124180"
  },
  {
    "text": "Um, no. Um, that, that was um, also chosen as a hyperparameter and improved performance.",
    "start": "2124180",
    "end": "2133120"
  },
  {
    "text": "I mean, actually um, you know, for this Word2Vec paper, I mean,",
    "start": "2133120",
    "end": "2138580"
  },
  {
    "text": "you know, it turns out that um, in the actual paper um, the model looks very- fairly clean but what",
    "start": "2138580",
    "end": "2147490"
  },
  {
    "text": "people's discovered when they started digging through the code, which to- to their credit they did make available, reproducible research,",
    "start": "2147490",
    "end": "2156325"
  },
  {
    "text": "that there are actually a whole bunch of tricks of different things like these hyperparameters of um,",
    "start": "2156325",
    "end": "2163300"
  },
  {
    "text": "how you sample, and how you wait windows and various things to make the numbers better.",
    "start": "2163300",
    "end": "2168475"
  },
  {
    "text": "So, you know, people play quite a few tricks to make the numbers go up which aren't particularly theoretical.",
    "start": "2168475",
    "end": "2175204"
  },
  {
    "text": "Are we good? Yeah.",
    "start": "2175205",
    "end": "2193540"
  },
  {
    "text": "[inaudible] [NOISE].",
    "start": "2193540",
    "end": "2199230"
  },
  {
    "text": "Ah, sometimes. I so- I- you- so in general for a lot of these sampling things,",
    "start": "2199230",
    "end": "2208510"
  },
  {
    "text": "it's a bad idea if you're going to be doing multiple passes if you just go bloom, bloom, bloom and then bloom, bloom, bloom again,",
    "start": "2208510",
    "end": "2215530"
  },
  {
    "text": "that's a bad idea, but a common technique a lot of the packages use is that they do use this shuffling operation at the beginning.",
    "start": "2215530",
    "end": "2222820"
  },
  {
    "text": "So for each epoch, they'll shuffle the data randomly and then they'll go through it in sequence and that has",
    "start": "2222820",
    "end": "2228880"
  },
  {
    "text": "the benefits of faster computation from locality et cetera um,",
    "start": "2228880",
    "end": "2233904"
  },
  {
    "text": "while ha- meaning that when you do it differently epoch, it will work out differently. Uh, yeah, yeah.",
    "start": "2233905",
    "end": "2248650"
  },
  {
    "text": "[inaudible] [NOISE] [inaudible]. That last question I think was talking about taking the mini-batches from the corpus and",
    "start": "2248650",
    "end": "2254185"
  },
  {
    "text": "contrasting whether you actually say sample 20 randomly from the whole corpus versus just sort of working from left to right.",
    "start": "2254185",
    "end": "2261535"
  },
  {
    "text": "Yes, do you have a question? Um, yeah [inaudible] [NOISE].",
    "start": "2261535",
    "end": "2275770"
  },
  {
    "text": "Yeah. So- so you could argue- you could argue whether or not this was written in the clearest way, but, right.",
    "start": "2275770",
    "end": "2282895"
  },
  {
    "text": "So, we're making this dot product and then we're negating it which is then flipping which side of the space we're on, right?",
    "start": "2282895",
    "end": "2291510"
  },
  {
    "text": "Because the sigmoid is symmetric around zero. So, if we've got some dot product um,",
    "start": "2291510",
    "end": "2299214"
  },
  {
    "text": "and then we negate it, we're sort of working out a one minus probability and so",
    "start": "2299215",
    "end": "2305095"
  },
  {
    "text": "that's the way in which we're actually for the first um,",
    "start": "2305095",
    "end": "2310224"
  },
  {
    "text": "for the first time we're wanting the probability to be high and then for the negative samples,",
    "start": "2310225",
    "end": "2315640"
  },
  {
    "text": "we're wanting their probability to be low. Okay, I'll maybe run ahead now.",
    "start": "2315640",
    "end": "2322495"
  },
  {
    "text": "Um, so this was an algorithm which um,",
    "start": "2322495",
    "end": "2327810"
  },
  {
    "text": "sort of you're going through this corpus position by position and you're sort of doing",
    "start": "2327810",
    "end": "2333870"
  },
  {
    "text": "this prediction of words and then you're updating some parameters and you're learning something and you know,",
    "start": "2333870",
    "end": "2340200"
  },
  {
    "text": "by job it seemed to work based on what we saw in the examples, but you know, you might have thought um,",
    "start": "2340200",
    "end": "2347154"
  },
  {
    "text": "that that was kind of weird right? Look we have this whole big pile of data you know,",
    "start": "2347155",
    "end": "2352600"
  },
  {
    "text": "sort of traditional, I'm thinking of statistics, right? So you have a big pile of data,",
    "start": "2352600",
    "end": "2358180"
  },
  {
    "text": "you aggregate it and it sort of seems like there are obvious things you could do here. You could say, well there's a word like,",
    "start": "2358180",
    "end": "2364930"
  },
  {
    "text": "whatever word we're using, banana. Let's just see what words occur in the context of the gut banana and count",
    "start": "2364930",
    "end": "2371140"
  },
  {
    "text": "them all up and then we'll be able to use those to predict somehow and you know, those kinds of methods were traditionally",
    "start": "2371140",
    "end": "2378940"
  },
  {
    "text": "used including even with distributed representation techniques. Um, so I want to say a bit about that,",
    "start": "2378940",
    "end": "2385210"
  },
  {
    "text": "so you're fully educated and don't sound like one of those people who were aware of no work that happened before 2013 when your network's took off.",
    "start": "2385210",
    "end": "2395440"
  },
  {
    "text": "Um, okay. So, what we could do is we can essentially do the same thing as sort of Word2Vec.",
    "start": "2395440",
    "end": "2403300"
  },
  {
    "text": "We could say there's a five word window around each word instance that's often referred to as a word token, right?",
    "start": "2403300",
    "end": "2411160"
  },
  {
    "text": "So at NLP, we often want to distinguish between a particular kind of type like banana",
    "start": "2411160",
    "end": "2417250"
  },
  {
    "text": "or apple versus particular instances often in the text and that's referred to as sort of a type token distinction.",
    "start": "2417250",
    "end": "2423984"
  },
  {
    "text": "So we could, um, look at each um token with a word,",
    "start": "2423985",
    "end": "2429670"
  },
  {
    "text": "and the words five around that, and then we could so start counting up which words occur,",
    "start": "2429670",
    "end": "2434680"
  },
  {
    "text": "occur with it and so we can then have a matrix of co-occurrence counts.",
    "start": "2434680",
    "end": "2440845"
  },
  {
    "text": "Um, okay. So, we'll have again, and I'm going to give me an example of this.",
    "start": "2440845",
    "end": "2446080"
  },
  {
    "text": "So, normally again you use the five to 10 but you know I can just use a window of one to keep my counts very simple and small.",
    "start": "2446080",
    "end": "2453055"
  },
  {
    "text": "I ignore left or right just like Word2Vec did, and so if I have a teeny baby corpus like this,",
    "start": "2453055",
    "end": "2459474"
  },
  {
    "text": "you know, what I could do, is just say here is the matrix of word co-occurrence accounts.",
    "start": "2459475",
    "end": "2465445"
  },
  {
    "text": "So, within my window size of one, I occurs next to like twice,",
    "start": "2465445",
    "end": "2470859"
  },
  {
    "text": "and that means that like occurs next I twice it's symmetric, and all my other accounts here are singletons, um.",
    "start": "2470860",
    "end": "2478720"
  },
  {
    "text": "And so this gives me a big huge sparse matrix of word co-occurrence accounts.",
    "start": "2478720",
    "end": "2485580"
  },
  {
    "text": "And so one thing that you could do is just use this matrix directly, because I haven't really got enough data here.",
    "start": "2485580",
    "end": "2492870"
  },
  {
    "text": "But, you know, if you sort of, um, decided that, you know,",
    "start": "2492870",
    "end": "2498125"
  },
  {
    "text": "the word like is like the word learning, what you'd do is you'd expect that these two vectors would end up kind of similar to each other.",
    "start": "2498125",
    "end": "2506880"
  },
  {
    "text": "And [NOISE] they do. So, you can just measure, um, similarity of the vectors directly in terms of these co-occurrence counts.",
    "start": "2506880",
    "end": "2515579"
  },
  {
    "text": "But, you know, it's a little bit unappealing doing things this way, right? If you have a quarter million word vocabulary that's where",
    "start": "2515580",
    "end": "2523160"
  },
  {
    "text": "you are in this space where my math is bad, but it's in the trillions of the number of cells of this matrix,",
    "start": "2523160",
    "end": "2529849"
  },
  {
    "text": "might require a lot of storage. Though if you're clever and notice that most of the cells were zero and could do",
    "start": "2529850",
    "end": "2535490"
  },
  {
    "text": "some clever sparse matrix representation might take a little bit less. Um, your classification models might have sparsity issues cause, you know,",
    "start": "2535490",
    "end": "2543710"
  },
  {
    "text": "a lot of those cells aren't present and so it might not be very robust. And so those are traditional answer to all of these things which is well,",
    "start": "2543710",
    "end": "2551980"
  },
  {
    "text": "maybe we could have that big co-occurrence counts matrix and somehow reduce its dimensionality of just, um,",
    "start": "2551980",
    "end": "2560930"
  },
  {
    "text": "find a corresponding low dimensional matrix which preserves, uh, most of the information, um,",
    "start": "2560930",
    "end": "2567915"
  },
  {
    "text": "in the original matrix and, you know, maybe we'll reduce things to a dimensionality of somewhere around the size 25 to a 1,000,",
    "start": "2567915",
    "end": "2576140"
  },
  {
    "text": "um as is done with Word2Vec. So, there's sort of a standard most common way of doing",
    "start": "2576140",
    "end": "2582620"
  },
  {
    "text": "this dimensionality reduction and you don't really have to understand all the math, but you get to play with this and homework one which is, um,",
    "start": "2582620",
    "end": "2590714"
  },
  {
    "text": "for any matrix you can do what's called the singular value decomposition, um, which is a way you can take an arbitrary matrix and decompose it into three matrices, um,",
    "start": "2590715",
    "end": "2603505"
  },
  {
    "text": "where the center one is diagonal and has what- in it what are called singular vectors which are weightings of the different dimensions.",
    "start": "2603505",
    "end": "2611320"
  },
  {
    "text": "So, they decrease in size as you go downwards. And then these two U and V are then",
    "start": "2611320",
    "end": "2617540"
  },
  {
    "text": "orthogonal bases corresponding to the rows and columns. And so in particular,",
    "start": "2617540",
    "end": "2623435"
  },
  {
    "text": "it's even simpler than the case where we just have these word-word vectors, because you have a square matrix and so they are effectively the same.",
    "start": "2623435",
    "end": "2631095"
  },
  {
    "text": "But, you know, for the general case, um, although you get these sort of full orthogonal bases,",
    "start": "2631095",
    "end": "2637089"
  },
  {
    "text": "you then have these bits sort of don't really matter cause they end up being used for nothing when you work out the product.",
    "start": "2637089",
    "end": "2643855"
  },
  {
    "text": "Um, and then if you want to reduce the dimensionality, what you say is,",
    "start": "2643855",
    "end": "2649180"
  },
  {
    "text": "throw away the smallest singular values which remember there are in decreasing",
    "start": "2649180",
    "end": "2654675"
  },
  {
    "text": "size and that means you're then effectively throwing away rows and columns of these other matrices.",
    "start": "2654675",
    "end": "2662040"
  },
  {
    "text": "And then it says, behold I've now reduced these things to a two-dimensional representation from",
    "start": "2662040",
    "end": "2668360"
  },
  {
    "text": "the original three-dimensional representation and that's referred to as the reduced SVD and the classic result is in terms of least squares error in",
    "start": "2668360",
    "end": "2679275"
  },
  {
    "text": "estimation that this- the product of these three things will give X k which is the best,",
    "start": "2679275",
    "end": "2687189"
  },
  {
    "text": "um, k- rank k approximation to the original X in terms of,",
    "start": "2687189",
    "end": "2692210"
  },
  {
    "text": "uh, X squared least squares criterion. So, we could do this and we could build word vectors.",
    "start": "2692210",
    "end": "2698975"
  },
  {
    "text": "So, I can, um, make use of, um, NumPy's SVD function and I can throw into it,",
    "start": "2698975",
    "end": "2707175"
  },
  {
    "text": "um, matrices and, um, I can make word vectors.",
    "start": "2707175",
    "end": "2714039"
  },
  {
    "text": "And these ones look really bad, but hey, I give it a dataset of three centers [LAUGHTER] and it's not exactly a fair comparison.",
    "start": "2714040",
    "end": "2720825"
  },
  {
    "text": "But- so this technique was in, um, popularized around, um, the turn- the turn of the millennium.",
    "start": "2720825",
    "end": "2728924"
  },
  {
    "text": "It generally, um, went for some word applications under the name of latent semantic analysis or",
    "start": "2728925",
    "end": "2734900"
  },
  {
    "text": "latent semantic indexing and the idea was that you could have these semantic directions that you are",
    "start": "2734900",
    "end": "2741490"
  },
  {
    "text": "finding in this low dimensional space that had meaning. And people worked with it quite a bit for techniques",
    "start": "2741490",
    "end": "2747380"
  },
  {
    "text": "like t- trying to do information retrieval using these LSA approximations and it sort of worked a bit.",
    "start": "2747380",
    "end": "2756944"
  },
  {
    "text": "It kind of never really worked very well I think,",
    "start": "2756945",
    "end": "2762140"
  },
  {
    "text": "um, and so it never sort of hugely caught on. Um, but it's- the methods kind of continued to be explored actually mainly in the sort of",
    "start": "2762140",
    "end": "2771770"
  },
  {
    "text": "COG psych- COGS psych community where people were doing things with word meaning.",
    "start": "2771770",
    "end": "2777135"
  },
  {
    "text": "And there's this sort of kind of interesting, um, the [NOISE] to the literature that there was this guy Doug Rohde, um,",
    "start": "2777135",
    "end": "2784954"
  },
  {
    "text": "who, um, did a PhD at CMU, um, in 2005.",
    "start": "2784955",
    "end": "2791055"
  },
  {
    "text": "And basically what he discovered was, look if rather than just using raw counts,",
    "start": "2791055",
    "end": "2797715"
  },
  {
    "text": "I start doing quite a bit more in terms of, you know, fiddling with the counts,",
    "start": "2797715",
    "end": "2804565"
  },
  {
    "text": "I can start to produce results that are much better. So, rather than using low counts,",
    "start": "2804565",
    "end": "2809619"
  },
  {
    "text": "you have to do something to deal with those very high-frequency words. So, one idea is you could log scale them which",
    "start": "2809620",
    "end": "2815960"
  },
  {
    "text": "is also commonly used in information retrieval. Another idea is you could just use something like,",
    "start": "2815960",
    "end": "2821575"
  },
  {
    "text": "uh, a ceiling function, so you take the minimum of X,t for t set and that some number like around 100.",
    "start": "2821575",
    "end": "2829905"
  },
  {
    "text": "Um, he had- he used the idea which was also another of the hacks that was put into",
    "start": "2829905",
    "end": "2835430"
  },
  {
    "text": "the Word2Vec was rather than just treating the whole window the same that you should,",
    "start": "2835430",
    "end": "2841214"
  },
  {
    "text": "um, count words that are closer more. So, in Word2Vec, they sample closer words more commonly than further away words.",
    "start": "2841215",
    "end": "2849744"
  },
  {
    "text": "Um, in his system, you're sort of having to have a differential count for closer words et cetera.",
    "start": "2849745",
    "end": "2854925"
  },
  {
    "text": "And then, um, compared to any of that rather than using counts at all,",
    "start": "2854925",
    "end": "2860435"
  },
  {
    "text": "he then started using Pearson correlations which helped and set they're sometimes negative and he decided that it helped,",
    "start": "2860435",
    "end": "2868994"
  },
  {
    "text": "um, if you then got rid of the negative values. So, in- in some sense,",
    "start": "2868995",
    "end": "2874030"
  },
  {
    "text": "this sounds like a bag of hacks, um, but on the other hand, he was able to show that, you know,",
    "start": "2874030",
    "end": "2880555"
  },
  {
    "text": "these transformed counts could actually then give you very useful word vectors as I'm about to show.",
    "start": "2880555",
    "end": "2887150"
  },
  {
    "text": "And- well, we have to realize that actually in slightly different forms,",
    "start": "2887150",
    "end": "2893119"
  },
  {
    "text": "several of these exact same counts are actually being used in Word2Vec as well. Do you hear that?",
    "start": "2893120",
    "end": "2901110"
  },
  {
    "text": "Yeah. Were they [inaudible].",
    "start": "2901110",
    "end": "2906885"
  },
  {
    "text": "Yeah. So, so that's an- I'm about to show exactly that. Um, that's actually a really interesting little,",
    "start": "2906885",
    "end": "2914369"
  },
  {
    "text": "um, bit of the data. So, you know, what, um, yeah, so the, the thing- if you do that,",
    "start": "2914370",
    "end": "2922005"
  },
  {
    "text": "you not only get word similarities pretty good. Let me show you this example which is cleaner.",
    "start": "2922005",
    "end": "2928360"
  },
  {
    "text": "Um, so this- the precise idea of evaluating with analogies was not something that had really been developed.",
    "start": "2928360",
    "end": "2937390"
  },
  {
    "text": "So, that was actually something that Marsh Mikolov, um, suggested. But actually, um, Doug Rohde made this, um,",
    "start": "2937390",
    "end": "2945655"
  },
  {
    "text": "really interesting observation which was- he said, look,",
    "start": "2945655",
    "end": "2951100"
  },
  {
    "text": "\"Once I do these kind of transformations to improve the semantic representation of my word vectors,",
    "start": "2951100",
    "end": "2957925"
  },
  {
    "text": "look this really interesting property emerges. Um, that what you find is that there is semantic vectors",
    "start": "2957925",
    "end": "2967240"
  },
  {
    "text": "are which basically linear components in my carefully-constructed space.",
    "start": "2967240",
    "end": "2972869"
  },
  {
    "text": "So, here we have the sort of, um, verb to the doer of the verb direction,",
    "start": "2972870",
    "end": "2978055"
  },
  {
    "text": "drive, driver, um, clean, janitor, swim, swimmer, learn,",
    "start": "2978055",
    "end": "2983505"
  },
  {
    "text": "teacher or teach, teacher, doctor, treat, priest, pray.",
    "start": "2983505",
    "end": "2988705"
  },
  {
    "text": "I mean, you know, it's not exactly perfect, you know, there's a little bit of wiggle there, right? But, you know, roughly it's completely clear that there's sort of a direction",
    "start": "2988705",
    "end": "2997740"
  },
  {
    "text": "in the space that corresponds to- from a verb to the doers of a verb.",
    "start": "2997740",
    "end": "3003320"
  },
  {
    "text": "Um, and yeah, so he [inaudible] - he- no one had thought of this idea of doing the analogies and tests.",
    "start": "3003320",
    "end": "3010450"
  },
  {
    "text": "But the thing in retrospect that's obvious is, if you can construct a vector space that has this linearity property,",
    "start": "3010450",
    "end": "3020195"
  },
  {
    "text": "then you're definitely gonna do well in analogy. So, effectively he had invented a vector space that do",
    "start": "3020195",
    "end": "3026610"
  },
  {
    "text": "well in analogies because this means that you've got this direction which is the doer and then you can immediately",
    "start": "3026610",
    "end": "3033845"
  },
  {
    "text": "say that's the doer vector which you can get from subtracting clean from swimmer. And the- Right. So, it's clean from janitor.",
    "start": "3033845",
    "end": "3040745"
  },
  {
    "text": "And then we can add it on to swim and we'll get somewhere close to swimmer. Um, so his space actually did do that.",
    "start": "3040745",
    "end": "3048410"
  },
  {
    "text": "And so, um, this is- so the, the moral in some sense is,",
    "start": "3048410",
    "end": "3053704"
  },
  {
    "text": "if you have- if you kind of do carefully control accounts and so on, that conventional methods can also give you good word vector spaces and- I mean,",
    "start": "3053705",
    "end": "3064714"
  },
  {
    "text": "so that was actually the starting off point for our work on GloVe. Um, so that essentially,",
    "start": "3064715",
    "end": "3071010"
  },
  {
    "text": "there had been these two schools of work. Um, there had been the school of work that had",
    "start": "3071010",
    "end": "3076775"
  },
  {
    "text": "been explored more in COG psych than anywhere else, which had been based on counting and transforming counts.",
    "start": "3076775",
    "end": "3083869"
  },
  {
    "text": "And, you know, it had some advantages or it seemed it had some advantages, right?",
    "start": "3083870",
    "end": "3089795"
  },
  {
    "text": "That, um, you're making sort of efficient use of statistics as you're using the global statistics of the whole matrix directly to estimate things.",
    "start": "3089795",
    "end": "3098045"
  },
  {
    "text": "Um, and at that poi- up until then, it had really only being used to capture word similarity, um,",
    "start": "3098045",
    "end": "3105575"
  },
  {
    "text": "and a lot of it had suffered from disproportionate im- importance given to large counts.",
    "start": "3105575",
    "end": "3111675"
  },
  {
    "text": "But Doug Rohde, he had sort of started to show how to solve both of these problems. And so on the other hand,",
    "start": "3111675",
    "end": "3117700"
  },
  {
    "text": "there had been these neural network methods which are kind of direct prediction methods that we're defining that probability distribution and trying to predict the words that occur.",
    "start": "3117700",
    "end": "3127110"
  },
  {
    "text": "And they had some advantages, right? The fact that your sampling means that you're not going to run out of memory hopefully.",
    "start": "3127110",
    "end": "3135030"
  },
  {
    "text": "I know we've had some memory problems with homework one, but in principle, you're not as bad memory position and if you have to",
    "start": "3135030",
    "end": "3141460"
  },
  {
    "text": "construct a huge matrix because you're going linearly, um, but, you know, since you're doing it sample by",
    "start": "3141460",
    "end": "3147359"
  },
  {
    "text": "sample it's inefficient use of statistics, um. Okay. And so, but on the other hand Mikolov's work it performed perfectly.",
    "start": "3147360",
    "end": "3157255"
  },
  {
    "text": "Not perfectly, but really well. Um, so this is sort of led into this work,",
    "start": "3157255",
    "end": "3162880"
  },
  {
    "text": "um, that Jeffrey Pennington, um, Richard Socher [inaudible] can we sort of combine these ideas",
    "start": "3162880",
    "end": "3170155"
  },
  {
    "text": "and sort of have some of the goodness of the neural net methods,",
    "start": "3170155",
    "end": "3175445"
  },
  {
    "text": "um, while trying to do things with some kind of count matrix.",
    "start": "3175445",
    "end": "3180535"
  },
  {
    "text": "And so in particular, um, we wanted to get the result in a slightly less hacky way that you want to have components of meaning",
    "start": "3180535",
    "end": "3190240"
  },
  {
    "text": "being linear ope- linear operations in the vector space that they're just some effective or adding or something like this.",
    "start": "3190240",
    "end": "3198085"
  },
  {
    "text": "And so the crucial observation of this model was that we could use ratios of co-occurrence probabilities to encode meaning components.",
    "start": "3198085",
    "end": "3207685"
  },
  {
    "text": "And so the idea here is, if you have a word like ice and you say how often the thing's going to co-occur with that,",
    "start": "3207685",
    "end": "3215215"
  },
  {
    "text": "well solid should co-occur a lot and gas shouldn't. But well water is also going to co-occur a lot and some random word won't occur much.",
    "start": "3215215",
    "end": "3225545"
  },
  {
    "text": "If you have, oops. If you have steam,",
    "start": "3225545",
    "end": "3231819"
  },
  {
    "text": "you get the opposite pattern with solid and gas, right? But so the thing to notice is,",
    "start": "3231820",
    "end": "3238835"
  },
  {
    "text": "it's not enough to just have large by itself because large appears both here and here or small appears there and there,",
    "start": "3238835",
    "end": "3246320"
  },
  {
    "text": "the thing that's interesting and sort of the difference between these components in there indicating a meaning component.",
    "start": "3246320",
    "end": "3252925"
  },
  {
    "text": "And so we can get it that if we look at the ratio of co-occurrence probabilities.",
    "start": "3252925",
    "end": "3260275"
  },
  {
    "text": "And so for the ratio of co-occurrence probabilities this is a dimension of",
    "start": "3260275",
    "end": "3265809"
  },
  {
    "text": "meaning and where for other words and this sort of ratio cancels out to about one.",
    "start": "3265810",
    "end": "3273200"
  },
  {
    "text": "And so in this slide I've moved so it's not how my small and large that these are actually actual counts from a corpus.",
    "start": "3273200",
    "end": "3280840"
  },
  {
    "text": "So we roughly get dimension of meaning between solid and gas are the ones coming out",
    "start": "3280840",
    "end": "3286240"
  },
  {
    "text": "as about one because they are not the dimension of meaning. And so, it seems like what we want is we want to have ratio of",
    "start": "3286240",
    "end": "3293960"
  },
  {
    "text": "co-occurrence probabilities become linear and our space. And then we're in a good business.",
    "start": "3293960",
    "end": "3300515"
  },
  {
    "text": "And so that's what we want to set about doing. Well, how can you do that? Well, the way you can do that,",
    "start": "3300515",
    "end": "3307359"
  },
  {
    "text": "is by if you can make the dot products equal to the log of the co-occurrence probability,",
    "start": "3307360",
    "end": "3315775"
  },
  {
    "text": "then immediately you get the fact that when you have a vector difference it turns into a ratio of the co-occurrence probabilities.",
    "start": "3315775",
    "end": "3326605"
  },
  {
    "text": "And so, essentially the whole of the model is that we want to have dot products or logs of co-occurrence probabilities.",
    "start": "3326605",
    "end": "3334630"
  },
  {
    "text": "And so, that's what we do. So, here is our objective function here",
    "start": "3334630",
    "end": "3339700"
  },
  {
    "text": "and it's made to look a little bit more complicated. But essentially we've got this squared loss here",
    "start": "3339700",
    "end": "3347095"
  },
  {
    "text": "and then we wanting to say the dot-product should be as similar as possible to the log of",
    "start": "3347095",
    "end": "3353980"
  },
  {
    "text": "co-occurrence probability and so you'll they'll be lost to the extent that they're not the same,",
    "start": "3353980",
    "end": "3360744"
  },
  {
    "text": "but we kind of complexify it a little by putting in bias terms for both of the two words.",
    "start": "3360745",
    "end": "3367180"
  },
  {
    "text": "Because maybe the word is just overall common and likes to co-occur things or uncommon or does end.",
    "start": "3367180",
    "end": "3373660"
  },
  {
    "text": "And then we do one more little trick because every [inaudible] does tricks to make the performance better is that we also use this f-function in front,",
    "start": "3373660",
    "end": "3383184"
  },
  {
    "text": "so that we're sort of capping the effect that very common word pairs can have on the performance of the system.",
    "start": "3383185",
    "end": "3390370"
  },
  {
    "text": "Okay. And so that gave us the GloVe model of word vectors. And theoretically, the interest of this was,",
    "start": "3390370",
    "end": "3400165"
  },
  {
    "text": "you know, a lot of the preceding literature had been there had been these count methods and there had been these prediction methods.",
    "start": "3400165",
    "end": "3406515"
  },
  {
    "text": "And the hope was that this could sort of unify the two by showing you how you could have a method that",
    "start": "3406515",
    "end": "3413244"
  },
  {
    "text": "is estimated simply of a count matrix but it's done in the same kind of",
    "start": "3413245",
    "end": "3418675"
  },
  {
    "text": "iterative loss based estimation method that's used for the neural methods to get good word vectors.",
    "start": "3418675",
    "end": "3424960"
  },
  {
    "text": "And this also worked to give good word vectors. So here's GloVe results for the word frog.",
    "start": "3424960",
    "end": "3430490"
  },
  {
    "text": "And frogs and toad are obvious. But there are these different kinds of words, uh,",
    "start": "3430490",
    "end": "3436675"
  },
  {
    "text": "various kinds of pretty tree frogs and things like that. Okay. Um, so I'll then go from here and say a little",
    "start": "3436675",
    "end": "3446440"
  },
  {
    "text": "bit more about some of the work on evaluating word vectors. And this is maybe also a chance just talk a little bit about evaluation altogether.",
    "start": "3446440",
    "end": "3456505"
  },
  {
    "text": "So, normally in NLP when we do a valuation, the first thing that comes up is intrinsic versus extrinsic evaluation.",
    "start": "3456505",
    "end": "3465320"
  },
  {
    "text": "So, normally if there's something we trying to do like model, um, word similarity with word vectors or we're trying to, um,",
    "start": "3465320",
    "end": "3474790"
  },
  {
    "text": "put parts of speech on words or something, we can just have an intrinsic evaluation of saying how good a job did you get.",
    "start": "3474790",
    "end": "3482859"
  },
  {
    "text": "Are you guessing the right part of speech? Are you putting synonyms close together? And that's sort of normally very easy to do and fast to compute.",
    "start": "3482860",
    "end": "3492265"
  },
  {
    "text": "And it's useful to do because it helps us understand the system. On the other hand, a lot of the time those intrinsic evaluations,",
    "start": "3492265",
    "end": "3500440"
  },
  {
    "text": "it's not very clear where- where they're having done well on that task is really going to",
    "start": "3500440",
    "end": "3506285"
  },
  {
    "text": "help us build the amazing natural language understanding robots that we so ardently desire.",
    "start": "3506285",
    "end": "3512230"
  },
  {
    "text": "Um, so, people are also very interested in extrinsic evaluations.",
    "start": "3512230",
    "end": "3517660"
  },
  {
    "text": "And so extrinsically is then saying well suppose you use this new stuff in a real system doesn't make performance go up.",
    "start": "3517660",
    "end": "3527455"
  },
  {
    "text": "And it's then sort of definitional what counts to you as a real system that normally that's",
    "start": "3527455",
    "end": "3532835"
  },
  {
    "text": "meaning it's some application that human beings actually care about and liked to use.",
    "start": "3532835",
    "end": "3538675"
  },
  {
    "text": "So that's something like web search, or question answering, or phone dialog system or something like that, um,",
    "start": "3538675",
    "end": "3547030"
  },
  {
    "text": "hat you can put it into that system and the numbers get- go up. So, that seems what you want to do.",
    "start": "3547030",
    "end": "3553300"
  },
  {
    "text": "You want to have stuff that works in real tasks. Of course, there are sort of on the other hand a lot of things are a lot harder than.",
    "start": "3553300",
    "end": "3560500"
  },
  {
    "text": "So much more work to do such an evaluation and run different variance of a system.",
    "start": "3560500",
    "end": "3567340"
  },
  {
    "text": "And even when the results, uh, poor or great sometimes it's hard to diagnose.",
    "start": "3567340",
    "end": "3574600"
  },
  {
    "text": "You know, if- if your great new word vectors don't work better in the system, you know, it might be for sort of some extraneous reason about",
    "start": "3574600",
    "end": "3581800"
  },
  {
    "text": "how the system was built at sort of hiding all your magic. And if you just change the rest of the system and suddenly show its good effects.",
    "start": "3581800",
    "end": "3589300"
  },
  {
    "text": "So, it's kind of hard to do, um, sort of, um, apportionment of goodness and badness Okay.",
    "start": "3589300",
    "end": "3598059"
  },
  {
    "text": "So, um, so, today I'm mainly going to say a little bit more about these intrinsic word vector evaluations that we've talked about.",
    "start": "3598060",
    "end": "3605980"
  },
  {
    "text": "So we've talked quite a bit about these analogies. So if we're actually working out the analogies,",
    "start": "3605980",
    "end": "3612369"
  },
  {
    "text": "it turns out that normally what people are doing is working out a cosine distance and angle between, um,",
    "start": "3612370",
    "end": "3620890"
  },
  {
    "text": "different word candidates, um, to work out which is the word that solves the analogy which",
    "start": "3620890",
    "end": "3626950"
  },
  {
    "text": "is an Norbert little tiny wrinkle of difference there. And there's also one other trick that people commonly use.",
    "start": "3626950",
    "end": "3634000"
  },
  {
    "text": "They forbid the system from returning one of the three word she put into the analogy Okay.",
    "start": "3634000",
    "end": "3641620"
  },
  {
    "text": "But nevertheless, so, this is something that you can evaluate. Here now some GloVe visualizations.",
    "start": "3641620",
    "end": "3648519"
  },
  {
    "text": "And so these GloVe visualizations show exactly the same kind of linearity property that Doug Rohde discovered which means that analogy's work.",
    "start": "3648520",
    "end": "3657970"
  },
  {
    "text": "Sort of by construction, because our vector space wanted to make meaning components linear.",
    "start": "3657970",
    "end": "3663295"
  },
  {
    "text": "So, this is then, um, showing a gender display.",
    "start": "3663295",
    "end": "3668424"
  },
  {
    "text": "This is showing one between companies and their CEOs, kind of cool.",
    "start": "3668425",
    "end": "3673450"
  },
  {
    "text": "And you can also do more syntactic facts. So this is showing, um, positive comparative and superlative of adjectives.",
    "start": "3673450",
    "end": "3681440"
  },
  {
    "text": "Yeah. So, Tomas Mikolov came up with this idea of doing these analogy tasks.",
    "start": "3681440",
    "end": "3688645"
  },
  {
    "text": "And so he built a data-set with a lot of analogies in it. It's sort of- it's a bit of a weirdo data-set because it's sort of tests a few",
    "start": "3688645",
    "end": "3697329"
  },
  {
    "text": "random different things which may have been things that his system worked well on, um,",
    "start": "3697330",
    "end": "3702380"
  },
  {
    "text": "but you know, it tests countries and capitals, country, cities and states, countries and currency.",
    "start": "3702380",
    "end": "3712780"
  },
  {
    "text": "So there are a bunch of semantic things that tests. And then there are some, um,",
    "start": "3712780",
    "end": "3718630"
  },
  {
    "text": "syntactic things that tests so bad, worst, fast fastest for superlatives.",
    "start": "3718630",
    "end": "3724535"
  },
  {
    "text": "But, you know, even some of the ones I was showing before, you know, there's no- there's no Obama is to",
    "start": "3724535",
    "end": "3730210"
  },
  {
    "text": "Clinton kind of ones that are actually in this evaluation set.",
    "start": "3730210",
    "end": "3735400"
  },
  {
    "text": "Um, here's a big table of results, um, that comes from our GloVe paper.",
    "start": "3735400",
    "end": "3740830"
  },
  {
    "text": "So not surprisingly the GloVe paper perform best in this evaluation. Because that was our paper. Um, [LAUGHTER]",
    "start": "3740830",
    "end": "3748150"
  },
  {
    "text": "[LAUGHTER] But I mean perhaps- you know, perhaps the things to start to notice is,",
    "start": "3748150",
    "end": "3754180"
  },
  {
    "text": "yeah, if you just do a plain SVD on counts. You know that that works abominably badly for these, um, analogy tasks.",
    "start": "3754180",
    "end": "3764170"
  },
  {
    "text": "But, you know, kind of as Doug Rohde showed, if you start then doing manipulations of the count matrix before you do an SVD,",
    "start": "3764170",
    "end": "3773875"
  },
  {
    "text": "you can actually start to produce an SVD based system that actually performs quite well on these tasks.",
    "start": "3773875",
    "end": "3781089"
  },
  {
    "text": "Um, you know, not badly against other things. Um, other things that you will discover,",
    "start": "3781090",
    "end": "3787990"
  },
  {
    "text": "right at the top there are a 100 dimensional ones, and at the bottom there are some 1000 dimensional ones,",
    "start": "3787990",
    "end": "3793359"
  },
  {
    "text": "and other 300 dimensional ones. At least when you're training on a big amount of text, bigger dimensionality definitely works better.",
    "start": "3793360",
    "end": "3800530"
  },
  {
    "text": "And I'll come back to that in a minute. Um, the amount of text makes a difference as well, right?",
    "start": "3800530",
    "end": "3805630"
  },
  {
    "text": "So we're going up from- so one to 1.5 billion words at the beginning, to these ones down here are being trained over 42 billion words of text,",
    "start": "3805630",
    "end": "3814480"
  },
  {
    "text": "and perhaps unsurprisingly, the 42 billion words of texts ones work better.",
    "start": "3814480",
    "end": "3820450"
  },
  {
    "text": "Um, so it's big data. Um, here are a couple more steps from this paper.",
    "start": "3820450",
    "end": "3825525"
  },
  {
    "text": "So this is a graph of dimensionality and what the performance is. So for the three lines the green one's semantic,",
    "start": "3825525",
    "end": "3832979"
  },
  {
    "text": "the blue one's the syntactic analogies and so red's the overall score. So sort of what you see is up to dimensionality",
    "start": "3832979",
    "end": "3840790"
  },
  {
    "text": "300 things that clearly increasing quite a bit, and then it gets fairly flat,",
    "start": "3840790",
    "end": "3846085"
  },
  {
    "text": "which is precisely why you find a lot of word vectors, um, that are of dimensionality 300.",
    "start": "3846085",
    "end": "3851770"
  },
  {
    "text": "Um, this one's showing what window size. So this is sort of what we talked about symmetric on both sides window size,",
    "start": "3851770",
    "end": "3860680"
  },
  {
    "text": "and as it goes from 246810. And sort of what you see is, if you use a very small window like two, that actually works.",
    "start": "3860680",
    "end": "3869635"
  },
  {
    "text": "That the, the syntactic prediction is stronger because well, syntactic effects are very local.",
    "start": "3869635",
    "end": "3875770"
  },
  {
    "text": "Whereas as you go out, the semantic prediction gets better and better. Actually this syntactic gets a bit better as well,",
    "start": "3875770",
    "end": "3882369"
  },
  {
    "text": "but it's especially the semantic that gains. Um, the right graph shows that if you only use context on one side,",
    "start": "3882370",
    "end": "3890080"
  },
  {
    "text": "um, your numbers aren't as good. Okay, um, so, I sort of just wanted to sort of sneak in a little cameos of a couple of,",
    "start": "3890080",
    "end": "3900700"
  },
  {
    "text": "um, recent bits of work, as sort of a first of what things people are doing,",
    "start": "3900700",
    "end": "3905815"
  },
  {
    "text": "um, with word vectors. Um, so this one, um, was actually by two Stanford people.",
    "start": "3905815",
    "end": "3912474"
  },
  {
    "text": "Um, now the best- this would be the best story. If I could say that this was a final project,",
    "start": "3912475",
    "end": "3917995"
  },
  {
    "text": "um, in this class last year, but unfortunately that's not true. This paper has nothing to do with this class [LAUGHTER].",
    "start": "3917995",
    "end": "3925329"
  },
  {
    "text": "But it-- right. Um, Zin Yin and Yuanyuan,",
    "start": "3925330",
    "end": "3930490"
  },
  {
    "text": "um, actually had, um, some sort of clever and very mathy ideas,",
    "start": "3930490",
    "end": "3937690"
  },
  {
    "text": "where they're using matrix perturbation theory. Um, and sort of just showing how, um,",
    "start": "3937690",
    "end": "3944140"
  },
  {
    "text": "dimensionality in word vectors actually sort of feeds into the bias-variance trade-off. If you've seen that,",
    "start": "3944140",
    "end": "3950335"
  },
  {
    "text": "um, in other parts of machine learning. And I'm not even going to attempt to explain their paper.",
    "start": "3950335",
    "end": "3956185"
  },
  {
    "text": "Um, but here it is, that they did really well with this paper, they gone all talk in Europe's from it.",
    "start": "3956185",
    "end": "3961570"
  },
  {
    "text": "Um, and so- but there's sort of an interesting result of what you see with these word vectors,",
    "start": "3961570",
    "end": "3967720"
  },
  {
    "text": "which is in a way kind of surprising. So this is showing doing word vector dimensions from zero up to 10,000.",
    "start": "3967720",
    "end": "3976210"
  },
  {
    "text": "So we're going way higher than we talked about before. And so what you discover which people have known for ages is,",
    "start": "3976210",
    "end": "3983440"
  },
  {
    "text": "that there's sort of a little blip that somewhere around two or 300, which seems to optimize performance.",
    "start": "3983440",
    "end": "3990235"
  },
  {
    "text": "So, I've used those sizes. But the thing that they were sort of doing a lot of their theory about,",
    "start": "3990235",
    "end": "3995920"
  },
  {
    "text": "and it's kind of surprising is, well, surely if you have a humongous humongous number, like,",
    "start": "3995920",
    "end": "4002250"
  },
  {
    "text": "if you are using 10,000, um, dimensional vectors, you know, you're trying to estimate another two orders of magnitude more numbers for every word,",
    "start": "4002250",
    "end": "4013320"
  },
  {
    "text": "surely things should just fall apart, um, because you've got hopelessly many parameters relative to",
    "start": "4013320",
    "end": "4019920"
  },
  {
    "text": "the amount of training data that you're trying to estimate these numbers from. And so the interesting result that they show is,",
    "start": "4019920",
    "end": "4027330"
  },
  {
    "text": "that things don't fall apart. Um, and that you can essentially go out to these huge huge dimensionalities,",
    "start": "4027330",
    "end": "4035280"
  },
  {
    "text": "and the performance stays flat. And that they've got a lot of theory, sort of for predicting why that that's actually going to end up being the case.",
    "start": "4035280",
    "end": "4044670"
  },
  {
    "text": "Um, yeah. So for training these models iteratively, this is- orange is showing, um, GloVe training.",
    "start": "4044670",
    "end": "4053775"
  },
  {
    "text": "You know, they keep on getting better for a while. So you know, just go out, go sleep and see in the morning how it's doing, right?",
    "start": "4053775",
    "end": "4061020"
  },
  {
    "text": "So that if you were running it, um, for 24 hours your numbers are better than if you only ran it for six hours.",
    "start": "4061020",
    "end": "4067290"
  },
  {
    "text": "Um, and that's true for a lot of deep learning models, sorry. So this is the key reason why you don't want",
    "start": "4067290",
    "end": "4074730"
  },
  {
    "text": "to start your assignment the night before it's due. Because even if you program it perfectly,",
    "start": "4074730",
    "end": "4080880"
  },
  {
    "text": "you might just not have enough time for it to run, um, so that you produce good numbers at the end of it.",
    "start": "4080880",
    "end": "4087430"
  },
  {
    "text": "Um, okay. Uh, yeah so, so couple of more, um,",
    "start": "4088160",
    "end": "4094965"
  },
  {
    "text": "things, on that, um. Yes. So, um, what are we showing here?",
    "start": "4094965",
    "end": "4101850"
  },
  {
    "text": "So these are again semantics in tactic and overall numbers. So there are sort of two things that are sort of being mixed together here.",
    "start": "4101850",
    "end": "4109950"
  },
  {
    "text": "One is, if we just look at the overall numbers, they're highest over here, um,",
    "start": "4109950",
    "end": "4115094"
  },
  {
    "text": "which is this 42 billion Common Crawl web-pages corpus, that gives us the highest overall number.",
    "start": "4115095",
    "end": "4122085"
  },
  {
    "text": "But there's sort of something else that's interesting in this graph, which is, um, that using Wikipedia works frequently well.",
    "start": "4122085",
    "end": "4131730"
  },
  {
    "text": "So that you actually find that 1.6 billion tokens of Wikipedia works",
    "start": "4131730",
    "end": "4137040"
  },
  {
    "text": "better than 4.3 billion tokens of News-wire newspaper article data.",
    "start": "4137040",
    "end": "4143640"
  },
  {
    "text": "And so I, I think that's sort of actually make sense, which is well, you know,",
    "start": "4143640",
    "end": "4149279"
  },
  {
    "text": "the job of encyclopedias is to just sort of explain concepts and how they relate to each other, right?",
    "start": "4149280",
    "end": "4154859"
  },
  {
    "text": "So that encyclopedias are just much more expository text that show all the connections between things,",
    "start": "4154860",
    "end": "4162000"
  },
  {
    "text": "whereas newspapers in general aren't trying to expose at how things fit together.",
    "start": "4162000",
    "end": "4167730"
  },
  {
    "text": "They're just telling you about, you know, who got shot dead last night or something like that, right?",
    "start": "4167730",
    "end": "4172980"
  },
  {
    "text": "So, um, so this is sort of interesting fact, um, that this Wikipedia data kind of really,",
    "start": "4172980",
    "end": "4179955"
  },
  {
    "text": "it sort of is differentially useful, um, for, um, making word vectors.",
    "start": "4179955",
    "end": "4186179"
  },
  {
    "text": "And you know, in fact, you know, when we did very well without GloVe word vectors and lots of people use those.",
    "start": "4186180",
    "end": "4193934"
  },
  {
    "text": "You know, I think actually one of the reasons why they work so well is that the original word2vec vectors that Google distributes are built only on Google News data,",
    "start": "4193935",
    "end": "4203880"
  },
  {
    "text": "where else sort of have this, um, Wikipedia data inside them. Okay, um, rushing ahead.",
    "start": "4203880",
    "end": "4211650"
  },
  {
    "text": "Um, yes, so the- there's all the work on analogy, but the other more basic evaluation is this one of capturing similarity judgments.",
    "start": "4211650",
    "end": "4220380"
  },
  {
    "text": "And I haven't said much about this, but you know, there is this sort of large sub-literature in the psychology community,",
    "start": "4220380",
    "end": "4228135"
  },
  {
    "text": "where people have wanted to model humans judgments of similarity. So like a good psych person, what you do,",
    "start": "4228135",
    "end": "4236265"
  },
  {
    "text": "is you find your classroom of Psych one undergrads, and you show them pairs of words and say rate",
    "start": "4236265",
    "end": "4242520"
  },
  {
    "text": "these things for similarity on a scale of one to 10. And lots of that data has been collected,",
    "start": "4242520",
    "end": "4248265"
  },
  {
    "text": "and you work out the mean over human beings, and they give numbers like this of tiger and cat, 7.35.",
    "start": "4248265",
    "end": "4255255"
  },
  {
    "text": "Tiger's similar to Tiger 10, book and paper, plane and car, stock and phone,",
    "start": "4255255",
    "end": "4261224"
  },
  {
    "text": "stock and CD, and you get numbers. So then, what we're doing is wanting to say,",
    "start": "4261225",
    "end": "4267000"
  },
  {
    "text": "well let's use distance in the space to map directly onto these similarity judgments,",
    "start": "4267000",
    "end": "4273140"
  },
  {
    "text": "and how well does it map? And so that's sort of similarity judging has",
    "start": "4273140",
    "end": "4278570"
  },
  {
    "text": "also then being used for evaluating these systems. So again, here are a lot of models.",
    "start": "4278570",
    "end": "4284570"
  },
  {
    "text": "This is again from our GloVe paper. But so there are these various similarity data-sets. So one of the best-known ones that I had on the slide before is this, um, Wordsim 353.",
    "start": "4284570",
    "end": "4296190"
  },
  {
    "text": "It has 353, um, different ones in it, and so you are sort of then modeling a correlation",
    "start": "4296190",
    "end": "4304140"
  },
  {
    "text": "between your judgments of similarity and the ones that came from the human beings.",
    "start": "4304140",
    "end": "4309225"
  },
  {
    "text": "Okay. Two more things I want to say. Um, yes. So, we had that problem right at the beginning",
    "start": "4309225",
    "end": "4316860"
  },
  {
    "text": "of Clinton and how that could be various people. And that's perhaps in some sense the simplest case of words being ambiguous,",
    "start": "4316860",
    "end": "4327030"
  },
  {
    "text": "when you have names which have reference to different people. Um, but it's not only true of names.",
    "start": "4327030",
    "end": "4333810"
  },
  {
    "text": "So by and large, words in human languages are ambiguous and have lots of meanings.",
    "start": "4333810",
    "end": "4341820"
  },
  {
    "text": "Um, that's especially true of common words. They always have lots of meaning. It's especially true of words that have existed for a long time.",
    "start": "4341820",
    "end": "4350625"
  },
  {
    "text": "It's not true of new very technical words, you know, carcinoma. I think that only has one meaning.",
    "start": "4350625",
    "end": "4355965"
  },
  {
    "text": "Um, but, you know, if you think of any relatively, um, common word and starts, um,",
    "start": "4355965",
    "end": "4363690"
  },
  {
    "text": "scratching your head for a moment, you'll find it has lots of meanings. I- maybe this isn't even such a common word,",
    "start": "4363690",
    "end": "4370680"
  },
  {
    "text": "but my random word I've got here is Pike. Um, pike has lots of meanings, it has meanings like?",
    "start": "4370680",
    "end": "4377610"
  },
  {
    "text": "Fish. Fish, it's a kind of fish, yeah. So there's a fish that's a pike. What else is a pike?",
    "start": "4377610",
    "end": "4383220"
  },
  {
    "text": "A large spear. A large spear. Yes, so a large spear is a pike. Other kinds of pike's?",
    "start": "4383220",
    "end": "4389940"
  },
  {
    "text": "Gymnastics move. It's a road. Gymnastics move or in diving move. It's a road. Um, yeah. Um, so there are lots of meanings.",
    "start": "4389940",
    "end": "4398240"
  },
  {
    "text": "Um, there are other meanings. Um, in Australian English, pike is also used as a verb to mean,",
    "start": "4398240",
    "end": "4403760"
  },
  {
    "text": "um, to pull out from doing something. Like, \"We were all going to go out to a nightclub later, but Joe piked.\"",
    "start": "4403760",
    "end": "4411590"
  },
  {
    "text": "[LAUGHTER] Um, I don't think that usage is common in this country, but, um, you can try that, um. [LAUGHTER]",
    "start": "4411590",
    "end": "4418255"
  },
  {
    "text": "Right. But lots of meanings and, you know, this isn't only true of the word pike, right?",
    "start": "4418255",
    "end": "4424940"
  },
  {
    "text": "Pick any other simple word, right? You can pick a word like shell or field or house or make,",
    "start": "4424940",
    "end": "4432040"
  },
  {
    "text": "you know, they have lots of meanings when it comes down to it. So, you know, but, uh, how can this work if we just have one meaningful words?",
    "start": "4432040",
    "end": "4441069"
  },
  {
    "text": "And that's the interesting question and it was something that [NOISE] we were actually interested in early on.",
    "start": "4441069",
    "end": "4448120"
  },
  {
    "text": "So, I'm even before the Word2Vec paper came out back in 2012,",
    "start": "4448120",
    "end": "4453815"
  },
  {
    "text": "um, we were playing around, um, with neural word vectors and, um, we thought,",
    "start": "4453815",
    "end": "4460370"
  },
  {
    "text": "boy this is so broken having only one, um, cents, for a word.",
    "start": "4460370",
    "end": "4466605"
  },
  {
    "text": "Why don't we come up with a model that has multiple sensors for a word? And so we did that and we did it in a pretty crude way,",
    "start": "4466605",
    "end": "4473565"
  },
  {
    "text": "I guess, [NOISE] um, the way we did it is say, well, let's for each common word,",
    "start": "4473565",
    "end": "4480145"
  },
  {
    "text": "let's cluster all the contexts in which it occurs. And then we'll see if there seem to be",
    "start": "4480145",
    "end": "4487365"
  },
  {
    "text": "multiple clear clusters by some criterion for that word. And if so, we'll just sort of split the word into pseudo words.",
    "start": "4487365",
    "end": "4496220"
  },
  {
    "text": "So, if it seems like that there are five clusters, um, for the word, the example I meant to use here is jaguar.",
    "start": "4496220",
    "end": "4503020"
  },
  {
    "text": "Five clusters for the word jaguar, I will just call them jaguar_1, jaguar_2, jaguar_3, four,",
    "start": "4503020",
    "end": "4508239"
  },
  {
    "text": "five, so it's just literally changed the word in our corpus according to its cluster number.",
    "start": "4508240",
    "end": "4513945"
  },
  {
    "text": "And then we run our word vectoring algorithm and so we get a representation that each of those sensors of the word.",
    "start": "4513945",
    "end": "4520870"
  },
  {
    "text": "And basically, that works, right up the top is jaguar_1 next, uh, luxury and convertible.",
    "start": "4520870",
    "end": "4526824"
  },
  {
    "text": "Um, here is, I guess there's a very old version of MacOS called Jaguar,",
    "start": "4526825",
    "end": "4533260"
  },
  {
    "text": "any remem- remember that one? Um. Right. So, jaguars right next to software and Microsoft up there, so that's hopeful.",
    "start": "4533260",
    "end": "4540435"
  },
  {
    "text": "Um, here's the jaguar that's right next to the Hunter, um, and I'm being confused on this one,",
    "start": "4540435",
    "end": "4547070"
  },
  {
    "text": "is jaguar as near solo musical keyboard and string. Is there a band, [NOISE] a brand of keyboard called jaguar?",
    "start": "4547070",
    "end": "4553545"
  },
  {
    "text": "I'm not quite sure about that one, but anyway, it's sort of basically works. Um, but that was sort of crude and it's also perhaps problematic,",
    "start": "4553545",
    "end": "4562080"
  },
  {
    "text": "so a lot of time, the divisions between sensors aren't very clear, right? A lot of sensors are actually related to each other and overlapping because",
    "start": "4562080",
    "end": "4570330"
  },
  {
    "text": "when how sensors normally arrive is that people stretch the meanings of words. It's not that they just sort of randomly",
    "start": "4570330",
    "end": "4576860"
  },
  {
    "text": "wake up the next morning and say, \"I know carpet. I could also refer to that as stone,\" um,",
    "start": "4576860",
    "end": "4583005"
  },
  {
    "text": "and given a new sense to the word stone, right? You so take something that you know about like",
    "start": "4583005",
    "end": "4588600"
  },
  {
    "text": "a web and you extend it metaphorically to other uses of webbing. Um, so here's a perhaps more interesting things,",
    "start": "4588600",
    "end": "4597000"
  },
  {
    "text": "so this is the other Sanjeev Arora, um, paper that I was going to mention. So, that what happens if you don't,",
    "start": "4597000",
    "end": "4604710"
  },
  {
    "text": "um, if you don't have more than one cents for each word?",
    "start": "4604710",
    "end": "4610094"
  },
  {
    "text": "Well, effectively what you get is that the word vector that you learn is what's referred to by",
    "start": "4610095",
    "end": "4617260"
  },
  {
    "text": "physicists and fancy people as a superposition of the word vectors of the different sentence, different sensors.",
    "start": "4617260",
    "end": "4625910"
  },
  {
    "text": "By supersitio- superposition just means a weighted average. Um, um, [LAUGHTER] so that effectively",
    "start": "4625910",
    "end": "4634930"
  },
  {
    "text": "my meaning of pike is sort of a weighted average of the vectors for the different sensors of pike,",
    "start": "4634930",
    "end": "4640865"
  },
  {
    "text": "and the components are just weighted by their frequency. Um, so that part maybe is perhaps not too surprising,",
    "start": "4640865",
    "end": "4648265"
  },
  {
    "text": "but the part that's really surprising is well, if we just averaging these word vectors,",
    "start": "4648265",
    "end": "4654375"
  },
  {
    "text": "you'd think you couldn't get anything out of the average, right|? Like if I tell you I'm thinking of two numbers and they're here,",
    "start": "4654375",
    "end": "4663179"
  },
  {
    "text": "weighted sum is 54, what are my two numbers, right? You are sort of really short of information to be able to answer my question.",
    "start": "4663180",
    "end": "4671990"
  },
  {
    "text": "But, well, you know, for these word vectors, um, we have these high dimensional spaces and even though there",
    "start": "4671990",
    "end": "4682625"
  },
  {
    "text": "are a lot of words that the space is so vast for thoughts dimensions,",
    "start": "4682625",
    "end": "4687980"
  },
  {
    "text": "that actual words or sensors are very sparse in that space.",
    "start": "4687980",
    "end": "4693535"
  },
  {
    "text": "And so it turns out that there's this whole literature on, um, sparse coding, compressed sensing,",
    "start": "4693535",
    "end": "4700330"
  },
  {
    "text": "um, some of which has actually done by people in the stats department here, um, which shows that in these cases where you have these sort of sparse,",
    "start": "4700330",
    "end": "4709325"
  },
  {
    "text": "um, codes in these high dimensional spaces, you can actually commonly reconstruct out the components of a superposition,",
    "start": "4709325",
    "end": "4716885"
  },
  {
    "text": "even though all you've done is sort of done this weighted average, and so, um, this paper looks at how you can do this and so they have,",
    "start": "4716885",
    "end": "4725010"
  },
  {
    "text": "um, these underlying meaning components, and they sort of separated out. So, tie has one meaning component,",
    "start": "4725010",
    "end": "4732810"
  },
  {
    "text": "there's in this space of trousers, blouse, waistcoat, that makes sense, and other one in this meaning component of seasoned teams,",
    "start": "4732810",
    "end": "4740300"
  },
  {
    "text": "winning league, makes sense. Um, scoreline goal with equalizer clinching scorers,",
    "start": "4740300",
    "end": "4746015"
  },
  {
    "text": "this one seems to overlap with this one a bit. Um, but here tie, this is sort of cable ties and wire ties and things like that.",
    "start": "4746015",
    "end": "4753800"
  },
  {
    "text": "So, they are actually able to pull out the different sense meanings, um, from outside, out of the meaning of the word.",
    "start": "4753800",
    "end": "4761055"
  },
  {
    "text": "Um, so that is a kind of a cool thing. I just wanna, um,",
    "start": "4761055",
    "end": "4766085"
  },
  {
    "text": "say one more thing. Okay. [NOISE] All the evaluations so far was intrinsic,",
    "start": "4766085",
    "end": "4772010"
  },
  {
    "text": "um, you also might wanna do extrinsic evaluation. Why, why word vectors excited people on NLP so much?",
    "start": "4772010",
    "end": "4780010"
  },
  {
    "text": "Is it turned out that having this meaning, having this representation meaning just turned out to be",
    "start": "4780010",
    "end": "4785965"
  },
  {
    "text": "very useful and sort of improve all of your tasks after that. Um, and so, um,",
    "start": "4785965",
    "end": "4792280"
  },
  {
    "text": "this is doing named entity recognition which is labeling persons and locations and organizations, but, you know,",
    "start": "4792280",
    "end": "4798860"
  },
  {
    "text": "it's typical of many tasks of what people found, was if you started with a model without sort of word representations",
    "start": "4798860",
    "end": "4806610"
  },
  {
    "text": "and you throw in your word vectors regardless of whether they were to vehicle GloVe ones,",
    "start": "4806610",
    "end": "4811875"
  },
  {
    "text": "just kind of your numbers go up a couple of percent or more? And so word vectors were just sort of this useful source that you could",
    "start": "4811875",
    "end": "4819570"
  },
  {
    "text": "throw into any NLP system that you build and your numbers went up. So, that there was just a very effective technology, um,",
    "start": "4819570",
    "end": "4827335"
  },
  {
    "text": "which actually did work in basically any extrinsic tasks you type tried it on. Okay. Thanks a lot.",
    "start": "4827335",
    "end": "4834489"
  }
]