[
  {
    "text": "Hey guys. Um, let's get started. So over the last several weeks,",
    "start": "3230",
    "end": "9260"
  },
  {
    "text": "you've learned a lot about many different learning algorithms from linear regression, to logistic regression, to generalizing models,",
    "start": "9260",
    "end": "16000"
  },
  {
    "text": "generative algorithms like GDA and Naive Bayes to most recently support-vector machines.",
    "start": "16000",
    "end": "21600"
  },
  {
    "text": "Um, what I'd like to do today is to start talking about advice for applying learning algorithms.",
    "start": "21600",
    "end": "28960"
  },
  {
    "text": "To teach a little bit about the theory behind, um, how to make good decisions of what to do,",
    "start": "28960",
    "end": "34540"
  },
  {
    "text": "how to actually apply these algorithms. And so today, um, I wanna discuss bias and variance.",
    "start": "34540",
    "end": "41440"
  },
  {
    "text": "Um, and it turns out, you know, I've, I've built quite a lot of machine learning systems, um,",
    "start": "41440",
    "end": "46685"
  },
  {
    "text": "and it turns out that bias and variance is one of those concepts. It's, sort of, easy to understand,",
    "start": "46685",
    "end": "52234"
  },
  {
    "text": "but hard to master. Uh, uh, what does it- lots of those, was it all these board games or sometimes, uh, uh,",
    "start": "52235",
    "end": "58550"
  },
  {
    "text": "smartphone games, say easy to learn, hard to master or something like that? So bias and variance is actually one of those things, where I've had PhD students that worked with me for several years and then graduated,",
    "start": "58550",
    "end": "68900"
  },
  {
    "text": "and worked in the industry for a couple years after that. And, and they actually tell me that, you know, when they took, um,",
    "start": "68900",
    "end": "75045"
  },
  {
    "text": "machine learning at Stanford, they learned bias and variance, but as they progressed for many years",
    "start": "75045",
    "end": "80630"
  },
  {
    "text": "their understanding of bias and variance continues to deepen. So I'm gonna try to accelerate your learning, um, uh, uh, of,",
    "start": "80630",
    "end": "87715"
  },
  {
    "text": "of bias and variance because I find that people that understand this concept,",
    "start": "87715",
    "end": "93079"
  },
  {
    "text": "um, are much more efficient in terms of how you develop learning algorithms and make your algorithms work.",
    "start": "93080",
    "end": "98945"
  },
  {
    "text": "So we'll talk about this today, and it'll be a recurring theme that'll come up again a few times in the next several weeks as well.",
    "start": "98945",
    "end": "105310"
  },
  {
    "text": "Um, then we'll discuss regularization, um, uh, and talk about, um,",
    "start": "105310",
    "end": "110470"
  },
  {
    "text": "how to reduce variance in learning algorithms, talk about train, dev, test splits, uh,",
    "start": "110470",
    "end": "115705"
  },
  {
    "text": "and then also talk about a few model selection and cross-validation algorithms.",
    "start": "115705",
    "end": "121985"
  },
  {
    "text": "Um, oh, let's see, reminders for today. Uh, Problem Set 1 is due tonight,",
    "start": "121985",
    "end": "128394"
  },
  {
    "text": "uh, uh, 11:59 P.M. Uh, and, uh, if you are not yet ready to submit it today,",
    "start": "128395",
    "end": "134900"
  },
  {
    "text": "uh, late submissions are accepted until Saturday evening. Saturday 11:59 P.M, with the details of late submissions, uh,",
    "start": "134900",
    "end": "142530"
  },
  {
    "text": "written according to the late day policy written on the course website. So, so I definitely encourage you to submit your homework on time today.",
    "start": "142530",
    "end": "148800"
  },
  {
    "text": "If for some reason you're not able to the late submission, which we don't encourage anyone to take advantage of,",
    "start": "148800",
    "end": "154760"
  },
  {
    "text": "but it is written, uh, on the course website. And Problem Set 2 will be released, uh shortly.",
    "start": "154760",
    "end": "162254"
  },
  {
    "text": "Actually I think, uh, it was already posted online, um, uh, and is due two weeks from now.",
    "start": "162255",
    "end": "167510"
  },
  {
    "text": "Um, yeah. Right. And so, uh, okay.",
    "start": "167510",
    "end": "172545"
  },
  {
    "text": "So, um, and, and what I'm going to do today is talk about the conceptual aspects of this.",
    "start": "172545",
    "end": "179090"
  },
  {
    "text": "Uh, and if you want to see even more math between these so the conceptual concepts, uh, at this Friday's discussion section,",
    "start": "179090",
    "end": "186319"
  },
  {
    "text": "we'll be covering, um, some of the the, uh, mathematical aspects of learning theories such as error decomposition,",
    "start": "186320",
    "end": "193189"
  },
  {
    "text": "uniform convergence, and VC dimension. You know, one, one interesting thing I've learned is, um, really watching the evolution of machine learning over many years is that,",
    "start": "193190",
    "end": "200735"
  },
  {
    "text": "that machine learning as a discipline has actually become less mathematical over the years, right? Um, uh, so I remember when, um, you know,",
    "start": "200735",
    "end": "209879"
  },
  {
    "text": "machine learning people used to worry about, uh, computing the normal equations, like x transpose x inverse equals x transpose y.",
    "start": "209880",
    "end": "216185"
  },
  {
    "text": "How numerically stable is your numerical solver for solving the normal equations of inverting a matrix for solving linear equations.",
    "start": "216185",
    "end": "222800"
  },
  {
    "text": "But because, um, numerical linear algebra has made tremendous rise, now we just call linear- linear algebra routine.",
    "start": "222800",
    "end": "230660"
  },
  {
    "text": "To invert a matrix to solve linear system equations not worry about whether it's numerically stable or not.",
    "start": "230660",
    "end": "236079"
  },
  {
    "text": "But once upon a time a lot of my friends in machine learning were reading text books on, uh, numerical optimization to figure out if your formula",
    "start": "236080",
    "end": "244730"
  },
  {
    "text": "for inverting a matrix or really solving linear system equations was numerically stable. And so one of the trends I've seen is that,",
    "start": "244730",
    "end": "251450"
  },
  {
    "text": "uh, I think, um, three or four years ago, to understand bias and variance,",
    "start": "251450",
    "end": "257320"
  },
  {
    "text": "there was a certain mathematical theory that was crucial to understanding that. And so I used to teach that in CS229,",
    "start": "257320",
    "end": "264060"
  },
  {
    "text": "but we decided, um, that we're constantly trying to improve this class, right? But I decided that, uh, that, uh,",
    "start": "264060",
    "end": "270470"
  },
  {
    "text": "mathematical theory is actually less crucial today. If your main goal is to make these algorithms work. So we still teach it.",
    "start": "270470",
    "end": "276440"
  },
  {
    "text": "But we're doing it in the Friday discussion section, and that leaves more time for the main lecture here to talk more about the conceptual thing that I think will help you build learning algorithms,",
    "start": "276440",
    "end": "284690"
  },
  {
    "text": "as well as for the newer topics like, um, what- we'll talk about random forest, decision trees of random forests in neural networks next week.",
    "start": "284690",
    "end": "291685"
  },
  {
    "text": "So here we go. Okay. So let's talk about bias and variance.",
    "start": "291685",
    "end": "296975"
  },
  {
    "text": "Um, let's say you have this dataset. [NOISE]",
    "start": "296975",
    "end": "307980"
  },
  {
    "text": "Um, I'm gonna draw the same dataset three times. [NOISE]",
    "start": "307980",
    "end": "318710"
  },
  {
    "text": "Okay. So, um, let's say you have a housing price prediction problem where",
    "start": "318710",
    "end": "325970"
  },
  {
    "text": "this is the size of the house and this is the price of the house. Um, it looks like if you fit a straight line to this data,",
    "start": "325970",
    "end": "334775"
  },
  {
    "text": "maybe it's not too bad, right? But it looks like this dataset seems to go",
    "start": "334775",
    "end": "342680"
  },
  {
    "text": "up and then curve downward a little bit, right? And so [NOISE] maybe this is a slightly better model if you fit a, let me see.",
    "start": "342680",
    "end": "350480"
  },
  {
    "text": "So this if you fit a linear function, um, Theta 0 plus Theta 1x. Uh, but if you fit a quadratic model,",
    "start": "350480",
    "end": "358800"
  },
  {
    "text": "maybe this actually fits to the dataset a little bit better.",
    "start": "358800",
    "end": "361900"
  },
  {
    "text": "Um, or you could actually fit a high order polynomial. This is one, two, three, four, five, six examples.",
    "start": "364660",
    "end": "371955"
  },
  {
    "text": "So if you fit a fifth order polynomial,",
    "start": "371955",
    "end": "375400"
  },
  {
    "text": "let's say the 5x to the 5th, then, um, you can actually fit a function that passes through all the points perfectly.",
    "start": "377840",
    "end": "388160"
  },
  {
    "text": "But that doesn't seem like a great model for this data either.",
    "start": "388160",
    "end": "393335"
  },
  {
    "text": "And so, um, to name this phenomenon, the function assuming the one in the middle is what we like,",
    "start": "393335",
    "end": "400580"
  },
  {
    "text": "um, fitting a quadratic function is maybe pretty good.",
    "start": "400580",
    "end": "405694"
  },
  {
    "text": "Let's call it just right. Whereas, um, this, uh, example on the left,",
    "start": "405695",
    "end": "412574"
  },
  {
    "text": "it underfits the data,",
    "start": "412575",
    "end": "418785"
  },
  {
    "text": "um, as in, it is not capturing the trend that is maybe semi-evident in the data.",
    "start": "418785",
    "end": "424700"
  },
  {
    "text": "And we say this algorithm has high bias. And the term bias, um,",
    "start": "424700",
    "end": "431470"
  },
  {
    "text": "the term bias has, has actually multiple meanings in the English language. We, as a society,",
    "start": "431470",
    "end": "437420"
  },
  {
    "text": "want to to avoid racial bias, and gender bias, and discrimination against people's orientation, and things like that.",
    "start": "437420",
    "end": "444200"
  },
  {
    "text": "So, uh, the term bias in machine learning has a completely separate meaning. Um, and it just means that, uh, and,",
    "start": "444200",
    "end": "450830"
  },
  {
    "text": "and it just means that, um, uh, this learning algorithm had very strong preconceptions that the data could be fit by linear functions.",
    "start": "450830",
    "end": "460009"
  },
  {
    "text": "This album had a very strong bias or the very strong preconception that the relationship between pricing and house- size of house is linear,",
    "start": "460010",
    "end": "466760"
  },
  {
    "text": "and this bias turns out not to be true. So this is actually a different sense of bias than, than the,",
    "start": "466760",
    "end": "472250"
  },
  {
    "text": "than the other types of undesirable bias we want to avoid in society or which, which interestingly comes up in machine learning as well in other contexts, right?",
    "start": "472250",
    "end": "480410"
  },
  {
    "text": "We want our learning algorithms to avoid those different biases, there's a different use of the term. And in contrast and just cut off on the right,",
    "start": "480410",
    "end": "487625"
  },
  {
    "text": "we say that this is overfitting, um, the data.",
    "start": "487625",
    "end": "493160"
  },
  {
    "text": "And this algorithm has high variance.",
    "start": "493160",
    "end": "498690"
  },
  {
    "text": "Um, and the term high variance comes from this intuition that, um, you happen to get these five examples,",
    "start": "498690",
    "end": "506650"
  },
  {
    "text": "but if, you know, a friend of yours was to collect data from, uh, see here, six,",
    "start": "506650",
    "end": "512409"
  },
  {
    "text": "six examples and a friend of yours was to collect a slightly different set of six examples, right?",
    "start": "512410",
    "end": "518380"
  },
  {
    "text": "So if a friend of yours were to rerun the collected slightly different, um, uh, set of housings- houses, you know, right?",
    "start": "518380",
    "end": "527819"
  },
  {
    "text": "Then this algorithm will fit some totally other varying function on this and so the- your predictions will have very high variance.",
    "start": "527820",
    "end": "536830"
  },
  {
    "text": "If you think of this as averaging over different random draws of the data. So, so the, the variations if,",
    "start": "536830",
    "end": "543105"
  },
  {
    "text": "if a friend of yours does the same experiment and they just get a slightly different dataset just due to random noise, then this algorithm fitting a fifth-order",
    "start": "543105",
    "end": "549920"
  },
  {
    "text": "polynomial results in a totally different result. So that's-, uh, so we say that this algorithm has",
    "start": "549920",
    "end": "555889"
  },
  {
    "text": "a very high variance, there's a lot of variability in the predictions this algorithm will make, okay? Um, so one of the things we'll need to do is,",
    "start": "555890",
    "end": "565105"
  },
  {
    "text": "um, identify if your learning algorithm. Oh, so when you train a learning algorithm.",
    "start": "565105",
    "end": "570650"
  },
  {
    "text": "It almost never works the first time. And so when I'm developing learning algorithms, my standard work flow is often to train an algorithm-,",
    "start": "570650",
    "end": "579430"
  },
  {
    "text": "uh, often train up something quick and dirty, and then try to understand if the algorithm has a problem of high bias or high variance,",
    "start": "579430",
    "end": "586670"
  },
  {
    "text": "if it's underfitting it or overfitting the data, and I use that insight to decide how to improve the learning algorithm.",
    "start": "586670",
    "end": "592940"
  },
  {
    "text": "And I will say a lot more about, um, how to improve the learning algorithm. We have a menu of tools that we'll talk about in the next couple of weeks,",
    "start": "592940",
    "end": "600550"
  },
  {
    "text": "about how to reduce bias or reduce variance of, uh, of, of your learning algorithms.",
    "start": "600550",
    "end": "606959"
  },
  {
    "text": "Um, I should have mentioned that the problems of bias and variance,",
    "start": "606960",
    "end": "612690"
  },
  {
    "text": "um, also hold true for classification problems.",
    "start": "612690",
    "end": "618160"
  },
  {
    "text": "Uh, so, [NOISE], right.",
    "start": "618160",
    "end": "627795"
  },
  {
    "text": "So let's say that's a binary classification problem. Um, if you fit a, uh,",
    "start": "627795",
    "end": "633935"
  },
  {
    "text": "logistic regression model to this, you know, straight line fit to the data.",
    "start": "633935",
    "end": "639710"
  },
  {
    "text": "Maybe that's not great, right? Um, if you fit a logistic regression model, um,",
    "start": "639710",
    "end": "645654"
  },
  {
    "text": "with a few nonlinear features; so you have features x_1 and x_2.",
    "start": "645655",
    "end": "651445"
  },
  {
    "text": "Um, if instead of using x_1 and x_2 as features, you use additional features x_1 squared,",
    "start": "651445",
    "end": "656665"
  },
  {
    "text": "x_2 squared, x_1 times x_2, x_1, qx_2 and this is Phi of x, right?",
    "start": "656665",
    "end": "663420"
  },
  {
    "text": "And you can have a small set of features you choose by hand. excuse me, probably more features in this or using SVM kernel and using SVM for this problem.",
    "start": "663420",
    "end": "673055"
  },
  {
    "text": "Then, um, if you, let's see, if you have too many features,",
    "start": "673055",
    "end": "678520"
  },
  {
    "text": "then you might actually have a learning algorithm that fits a decision boundary that looks like that.",
    "start": "678520",
    "end": "684810"
  },
  {
    "text": "Right? And this learning algorithm actually gets perfect performance on the training set but this overfits.",
    "start": "686670",
    "end": "694940"
  },
  {
    "text": "Um, excuse me, I meant to make the colors consistent, sorry I meant to use red.",
    "start": "695280",
    "end": "700329"
  },
  {
    "text": "But you- you get what I mean. Um, and there's only if you choose somewhere in-between,",
    "start": "700330",
    "end": "708100"
  },
  {
    "text": "you know, that you get something that, that seems to be a much better fit to the data.",
    "start": "708100",
    "end": "713305"
  },
  {
    "text": "The green line seems to be a pretty good way of separating the positive and negative examples that they're sort of just right.",
    "start": "713305",
    "end": "718615"
  },
  {
    "text": "So, uh, similar to, I guess I messed up the colors slightly before, kind of but similar to these colors here,",
    "start": "718615",
    "end": "724150"
  },
  {
    "text": "the blue line underfits because it's not capturing trends that are pretty apparently in the data. The orange line overfits.",
    "start": "724150",
    "end": "730899"
  },
  {
    "text": "It's just much too complicated a hypothesis whereas the green line, um, is just right, okay?",
    "start": "730900",
    "end": "737125"
  },
  {
    "text": "So it turns out that, um, in the error of GPU computing ability to train models with a lot of features,",
    "start": "737125",
    "end": "749050"
  },
  {
    "text": "um, one of the- by building a big enough model, uh, so take a support vector machine.",
    "start": "749050",
    "end": "755425"
  },
  {
    "text": "If you add enough features to it, if you have a high enough dimensional feature space, um, or if you, um,",
    "start": "755425",
    "end": "762310"
  },
  {
    "text": "take a linear regression model, logistic regression model and just add enough features to it, you can often, um, overfit the data.",
    "start": "762310",
    "end": "770065"
  },
  {
    "text": "And it turns out that, um, one of the most effective ways to prevent overfitting, um, is regularization.",
    "start": "770065",
    "end": "779035"
  },
  {
    "text": "So let me describe what that is and, um, excuse me, just finding my notes, reworking today's lecture.",
    "start": "779035",
    "end": "789430"
  },
  {
    "text": "So this is new things I have not presented.",
    "start": "789430",
    "end": "792800"
  },
  {
    "text": "Um, so all that. Okay, cool. And, um, regularization is the- it'll be one of those techniques that,",
    "start": "803280",
    "end": "812995"
  },
  {
    "text": "um, won't take that long to explain. It'll sound deceptively simple but is one of the techniques that I use most often.",
    "start": "812995",
    "end": "820555"
  },
  {
    "text": "I, I, I feel like I use regularization in many, many models. So, so just because it doesn't that sound that",
    "start": "820555",
    "end": "825595"
  },
  {
    "text": "complicated or maybe won't even take that long to explain today, don't underestimate how widely used it is.",
    "start": "825595",
    "end": "830890"
  },
  {
    "text": "It's used in- it's not used in every single machine learning model but it's used very, very often.",
    "start": "830890",
    "end": "836110"
  },
  {
    "text": "Um, so here's the idea,",
    "start": "836110",
    "end": "847790"
  },
  {
    "text": "um, which is- let's take linear regression.",
    "start": "847970",
    "end": "853480"
  },
  {
    "text": "Right. So that's the optimization objective for linear regression.",
    "start": "866250",
    "end": "871660"
  },
  {
    "text": "Um, if you want to add regularization, uh, you just add one extra term here,",
    "start": "871660",
    "end": "880209"
  },
  {
    "text": "uh, Lambda, uh, times norm of, uh, Theta squared, right?",
    "start": "880210",
    "end": "886975"
  },
  {
    "text": "Sometimes you write Lambda over two to make some of the derivations come out easier. And what this does is it takes your cost function for logistic regression,",
    "start": "886975",
    "end": "897805"
  },
  {
    "text": "uh, which you try to minimize, try to minimize the square error fit to the data and you're creating",
    "start": "897805",
    "end": "903160"
  },
  {
    "text": "an incentive term for the algorithm to make the parameter's Thetas, uh, smaller, okay?",
    "start": "903160",
    "end": "909129"
  },
  {
    "text": "So this is called a regularization term.",
    "start": "909130",
    "end": "911930"
  },
  {
    "text": "And it turns out that, um, let's take the linear regression overfitting example, right.",
    "start": "917040",
    "end": "926710"
  },
  {
    "text": "So you know if you set Lambda equal to0, then it's just linear regression over the fifth order polynomial features.",
    "start": "926710",
    "end": "935274"
  },
  {
    "text": "Uh, it turns out that as you increase Lambda, you know, Lambda to some intermediate value,",
    "start": "935275",
    "end": "941755"
  },
  {
    "text": "uh, depending on the scales of data. Let's say you said Lambda equals 1. Then, when you solve for this minimization problem,",
    "start": "941755",
    "end": "948720"
  },
  {
    "text": "or this augmented problem for the value of Theta, um, this term penalizes the parameters being too big and it turns out that you",
    "start": "948720",
    "end": "957660"
  },
  {
    "text": "end up with a fit that looks a little bit better, right?",
    "start": "957660",
    "end": "963310"
  },
  {
    "text": "It maybe it looks like that, okay? Um, and by preventing the parameters Theta from being too big,",
    "start": "963310",
    "end": "969775"
  },
  {
    "text": "you make it harder for the learning algorithm to overfit the data and it turns out",
    "start": "969775",
    "end": "974830"
  },
  {
    "text": "fitting a very high order polynomial like that may result in value of states that is very large, right?",
    "start": "974830",
    "end": "980200"
  },
  {
    "text": "Um, and, and then if you set Lambda to be too large,",
    "start": "980200",
    "end": "986185"
  },
  {
    "text": "then you actually end up, um, in an underfitting regime, okay?",
    "start": "986185",
    "end": "992395"
  },
  {
    "text": "So there'll usually be some optimal value of Lambda where if Lambda equals 0,",
    "start": "992395",
    "end": "997840"
  },
  {
    "text": "you're not using any regularization. You're so- maybe overfitting. Um, if Lambda is way too big,",
    "start": "997840",
    "end": "1003555"
  },
  {
    "text": "then you're forcing all the parameters to be too close to 0. Um, in fact actually, if you think about it,",
    "start": "1003555",
    "end": "1009630"
  },
  {
    "text": "if Lambda was equal to 10 to the 100 or some ridiculously large number, then you're really forcing all the Thetas to be 0, right?",
    "start": "1009630",
    "end": "1018660"
  },
  {
    "text": "If all the Thetas is 0, then you know then you're kinda fitting the straight line, right? So that's if Lambda equals, uh, 10 to the 100.",
    "start": "1018660",
    "end": "1026475"
  },
  {
    "text": "And so- and this is a very simple function which is the function 0, right? And, and this function h of Theta,",
    "start": "1026475",
    "end": "1033120"
  },
  {
    "text": "x equals 0, right, approximately 0. It is a very simple function which you get if you set Lambda very large.",
    "start": "1033120",
    "end": "1042045"
  },
  {
    "text": "And by doubling Lambda between, you know, a far too large value like 10 to the 100 compared to a far too small value like Lambda 0, you, you,",
    "start": "1042045",
    "end": "1050760"
  },
  {
    "text": "you smooth the interpolate between this much too simple function of h equals 0 and a much too complex function, okay?",
    "start": "1050760",
    "end": "1057900"
  },
  {
    "text": "Um, so there is,",
    "start": "1057900",
    "end": "1064170"
  },
  {
    "text": "um- so that's pretty, uh, it, it, it, um,",
    "start": "1064170",
    "end": "1069510"
  },
  {
    "text": "it- so that's pretty much it for regularization in terms of what you need to implement but you feel",
    "start": "1069510",
    "end": "1074640"
  },
  {
    "text": "like your learning algorithm may be overfitting, um, add this to your model and solve this optimization problem,",
    "start": "1074640",
    "end": "1081945"
  },
  {
    "text": "um, and it will help relieve overfitting. Um, more generally, if you are, um, let's see.",
    "start": "1081945",
    "end": "1095445"
  },
  {
    "text": "More generally if you have a, uh, say logistic regression problem where this is your cost function.",
    "start": "1095445",
    "end": "1105190"
  },
  {
    "text": "Then to add regularization, I guess instead of min this is a max, right?",
    "start": "1112120",
    "end": "1118760"
  },
  {
    "text": "If you're applying logistic regression, uh, then this was the original cost function, um, then you can have minus [NOISE] Lambda or Lambda over 2,",
    "start": "1118760",
    "end": "1128585"
  },
  {
    "text": "right, it just depends on scaling of Lambda times the norm of Theta squared and there's a minus here because for logistic regression,",
    "start": "1128585",
    "end": "1134840"
  },
  {
    "text": "we're maximizing rather than minimizing. Or this could be argmax at any of the generalized linear model family as well.",
    "start": "1134840",
    "end": "1140495"
  },
  {
    "text": "But by subtracting Lambda times the norm of Theta squared, this allows you to also regularize",
    "start": "1140495",
    "end": "1145730"
  },
  {
    "text": "the classification algorithm such as logistic regression. Okay? [NOISE] Um, it turns out that, uh,",
    "start": "1145730",
    "end": "1154684"
  },
  {
    "text": "and- and I- I- I- wan- I make an analogy that, uh, where all the math details are true,",
    "start": "1154685",
    "end": "1161030"
  },
  {
    "text": "but we don't wanna talk about all the math details. It turns out that, um, one of the reasons the support vector machine doesn't",
    "start": "1161030",
    "end": "1168005"
  },
  {
    "text": "overfit too badly even though it has, you know, been working in infinite like,",
    "start": "1168005",
    "end": "1173135"
  },
  {
    "text": "you know, infinite dimensional feature space, right? So- so why- why doesn't a support vector machine just overfit like crazy?",
    "start": "1173135",
    "end": "1179735"
  },
  {
    "text": "We showed, uh, on Monday that by using kernels, it's sort of using infinite dimensional feature space, right?",
    "start": "1179735",
    "end": "1186380"
  },
  {
    "text": "So why doesn't it always fit these crazy complicated functions, it just overfits the dataset like crazy?",
    "start": "1186380",
    "end": "1192688"
  },
  {
    "text": "It turns out and the theory is complicated. It turns out that, um, [NOISE] you know, the optimization",
    "start": "1192688",
    "end": "1200225"
  },
  {
    "text": "objective of the support vector machine was to minimize the norm of w squared. Uh, this turns out to, uh,",
    "start": "1200225",
    "end": "1206090"
  },
  {
    "text": "correspond to maximizing the margin, the geometric margin SVM, and it's actually possible to prove that, um,",
    "start": "1206090",
    "end": "1212284"
  },
  {
    "text": "this has a similar effect as that, right? That this is why the support vector machine despite working in",
    "start": "1212285",
    "end": "1219140"
  },
  {
    "text": "infinite dimensional feature space sometimes, um, by forcing the parameters to be small is difficult for",
    "start": "1219140",
    "end": "1225020"
  },
  {
    "text": "the support vector machine to overfit the data too much. Okay? The theory to actually show this is quite complicated.",
    "start": "1225020",
    "end": "1232130"
  },
  {
    "text": "Uh, um, uh, yeah, er, uh, it's actually very- yeah, is to show that the cost of cost Phi is where this is- where norm of",
    "start": "1232130",
    "end": "1239630"
  },
  {
    "text": "w small cannot be too complicated, complicating can overfit basically. Um, but that's why, uh, SVMs can",
    "start": "1239630",
    "end": "1245120"
  },
  {
    "text": "work in- can work in infinite dimensional feature spaces. Yeah? [inaudible]",
    "start": "1245120",
    "end": "1256300"
  },
  {
    "text": "Oh, sure. Do you ever regularized per elements of parameters? Um, not really. Uh, and the problem with that is, um,",
    "start": "1256300",
    "end": "1264080"
  },
  {
    "text": "you know, let me give one- let me give one more specific example, then come back to that, right? So it turns out that, um,",
    "start": "1264080",
    "end": "1270845"
  },
  {
    "text": "uh, so we talked about Naive Bayes as a text classification algorithm.",
    "start": "1270845",
    "end": "1276890"
  },
  {
    "text": "[NOISE] It turns out that, um, let's see if the text classification algorithm problem,",
    "start": "1276890",
    "end": "1282500"
  },
  {
    "text": "you know, classify spam, non-spam, or classified it to a sentiment, possible negative sentiment of a tweet or something.",
    "start": "1282500",
    "end": "1288289"
  },
  {
    "text": "[NOISE] Let's say you have 100 examples, but you have [NOISE] 10,000 dimensional features, right?",
    "start": "1288290",
    "end": "1295309"
  },
  {
    "text": "So let's say your features are these, you know, take the dictionary A, aardvark and so on.",
    "start": "1295310",
    "end": "1301160"
  },
  {
    "text": "So 101, right. So let's say you construct a feature like this, um,",
    "start": "1301160",
    "end": "1306184"
  },
  {
    "text": "it turns out that if you fit logistic regression to this type of data,",
    "start": "1306185",
    "end": "1311240"
  },
  {
    "text": "where you have 10,000 parameters and 100 examples, this will badly- this will probably overfit the data,",
    "start": "1311240",
    "end": "1317929"
  },
  {
    "text": "um, because you have, uh, uh, but it turns out that if you use logistic regression with regularization,",
    "start": "1317930",
    "end": "1325625"
  },
  {
    "text": "this is actually a pretty good algorithm for text classification, um, and this will usually i- in terms of performance accuracy, um, yeah,",
    "start": "1325625",
    "end": "1333304"
  },
  {
    "text": "because this is logistic regression, you need to implement gradient descent or something to solve local value parameters.",
    "start": "1333305",
    "end": "1338615"
  },
  {
    "text": "But logistic regression with regularization for text classification, will usually perform- outperform Naive Bayes",
    "start": "1338615",
    "end": "1345260"
  },
  {
    "text": "o- on a- on a classification accuracy standpoint. Uh, without regularization, logistic regression will badly overfit this data, right?",
    "start": "1345260",
    "end": "1353615"
  },
  {
    "text": "Um, and- and to- to explain a bit more, um, you know,",
    "start": "1353615",
    "end": "1358625"
  },
  {
    "text": "imagine that you have a three-dimensional subspace where you have two examples.",
    "start": "1358625",
    "end": "1365465"
  },
  {
    "text": "Then all you can do is fit a straight line, right, for the hyper-plane to separate these two examples.",
    "start": "1365465",
    "end": "1370910"
  },
  {
    "text": "But so one rule of thumb for, um, logistic regression is that, if you do not use regularization,",
    "start": "1370910",
    "end": "1378050"
  },
  {
    "text": "it's nice if the number of examples is at least on the order of the number of parameters you want to fit, right?",
    "start": "1378050",
    "end": "1383900"
  },
  {
    "text": "So this is if you're not using regularization. It's nice if- in fact, I- I personally think that, uh, I tend to use the duration only if the number of",
    "start": "1383900",
    "end": "1392000"
  },
  {
    "text": "examples can be maybe 10x bigger than the number of examples, uh, because that's what you need to have enough information",
    "start": "1392000",
    "end": "1398960"
  },
  {
    "text": "to fit good choices for all these parameters, um, but that's if you're not using regularization.",
    "start": "1398960",
    "end": "1404285"
  },
  {
    "text": "But if you are using regularization, then, um, you can fit, you know, even 10,000 parameters, right?",
    "start": "1404285",
    "end": "1411125"
  },
  {
    "text": "Even with only 100 examples, and this will be a pretty decent, um, text classification algorithm.",
    "start": "1411125",
    "end": "1416825"
  },
  {
    "text": "Okay? Um, the question you have just now: why don't we regularize per parameter, right?",
    "start": "1416825",
    "end": "1422750"
  },
  {
    "text": "So why don't we, uh, let's see. I guess instead of Lambda [NOISE] norm of Theta squared,",
    "start": "1422750",
    "end": "1430325"
  },
  {
    "text": "it would be a sum over j Lambda j, you know, Theta j squared, right?",
    "start": "1430325",
    "end": "1436835"
  },
  {
    "text": "Um, the reason we don't do this is because you then end up with, if you have 10,000 parameters here,",
    "start": "1436835",
    "end": "1442475"
  },
  {
    "text": "you end up with another 10,000 parameters here, and so choosing all these 10,000 Lambdas is",
    "start": "1442475",
    "end": "1448145"
  },
  {
    "text": "as difficult as just choosing all these parameters in the first place. So we don't have good weights to do this. Whereas, when you talk about cross-validation, multiple regression a little bit,",
    "start": "1448145",
    "end": "1455840"
  },
  {
    "text": "we'll talk about how to choose maybe one parameter Lambda, but that- those techniques won't work for choosing from",
    "start": "1455840",
    "end": "1461285"
  },
  {
    "text": "10,000 parameters Lambda j. You've got a question? [inaudible]",
    "start": "1461285",
    "end": "1479120"
  },
  {
    "text": "You're absolutely right. Yes. Thank you. Um, yes. So in order to make sure that the different Lambdas on the similar scale, uh,",
    "start": "1479120",
    "end": "1485045"
  },
  {
    "text": "a common pre-processing step we're using learning algorithms is, uh, take your different features, um,",
    "start": "1485045",
    "end": "1490924"
  },
  {
    "text": "so for text classification of all the features is 01, you can just leave the features alone. But if a housing classification,",
    "start": "1490925",
    "end": "1497554"
  },
  {
    "text": "if feature one is the size of house which I guess ranges from, I don't know, 100 to, uh, how big are the biggest houses?",
    "start": "1497555",
    "end": "1504005"
  },
  {
    "text": "I don't know, like whatever. Let's say houses go from, I don't know, five inches square feet to 10,000 square feet.",
    "start": "1504005",
    "end": "1509660"
  },
  {
    "text": "Ten thousand square feet is really really big for a house, I guess. But the numb- feature x2 is the number of",
    "start": "1509660",
    "end": "1514850"
  },
  {
    "text": "bedrooms which probably ranges from like, I don't know, one to- I guess there's some houses with a ton of bedrooms,",
    "start": "1514850",
    "end": "1520220"
  },
  {
    "text": "but I would say most houses have at most five bedrooms, I don't know, right? Then these features are on very different scales and, uh,",
    "start": "1520220",
    "end": "1526760"
  },
  {
    "text": "normalizing them to all be on a similar scale, so subtract out the mean and divide it by the standard deviation.",
    "start": "1526760",
    "end": "1533029"
  },
  {
    "text": "So scale all of these things to be between, you know, 01 over 2 minus 1, um, to 1, would- would- would be",
    "start": "1533030",
    "end": "1540560"
  },
  {
    "text": "a good pre-processing step before applying these methods. Um, it turns out that this will make gradient descent run faster as well,",
    "start": "1540560",
    "end": "1546365"
  },
  {
    "text": "as a common pre-processing step to scale each individual feature to be on a similar range of values.",
    "start": "1546365",
    "end": "1551855"
  },
  {
    "text": "All right. Yeah? At the back?",
    "start": "1551855",
    "end": "1554970"
  },
  {
    "text": "Uh, can we quickly go back to some more support vector machine model like NLG?",
    "start": "1559540",
    "end": "1570795"
  },
  {
    "text": "So it's actually both, so just to repeat it, why-why don't support vector machines suffer too badly,",
    "start": "1570795",
    "end": "1577200"
  },
  {
    "text": "is it because it's small numbers for vectors or is it because of minimizing the penalty W. Um,",
    "start": "1577200",
    "end": "1582465"
  },
  {
    "text": "I would say the formal argument relies more on the latter. So it turns out that if you look all the class- if you're looking",
    "start": "1582465",
    "end": "1588060"
  },
  {
    "text": "at all the class of functions separate the data with a large margin, ah, that class has low complexity formalized by",
    "start": "1588060",
    "end": "1594105"
  },
  {
    "text": "low VC dimension which you'll learn about in Friday's discussion section if you want to come to that. And so, it turns out that the class of all functions that separate the data of",
    "start": "1594105",
    "end": "1602010"
  },
  {
    "text": "a large margin is a relatively simple class of functions by- and by simple class functions, I mean, it has low VC dimension.",
    "start": "1602010",
    "end": "1607815"
  },
  {
    "text": "We should talk about this Friday. Um, and thus any function within that class of functions, uh, is not too likely to over-fit.",
    "start": "1607815",
    "end": "1614970"
  },
  {
    "text": "So, um, it is convenient the support vector machine has a relatively low number of support vectors.",
    "start": "1614970",
    "end": "1620250"
  },
  {
    "text": "But, um, uh, you could imagine other algorithms of a very large number of support vectors,",
    "start": "1620250",
    "end": "1626040"
  },
  {
    "text": "uh, but smallest to large margin is still a low complexity class that will move with it. Alright, next one question.",
    "start": "1626040",
    "end": "1633429"
  },
  {
    "text": "I'm sorry say that again. [inaudible]",
    "start": "1640340",
    "end": "1654720"
  },
  {
    "text": "Oh, sure yes. So is it possible that so yes. So one of the- so yes.",
    "start": "1654720",
    "end": "1660120"
  },
  {
    "text": "So in general, models that have high bias tend to underfit and models have high variance tend to overfit.",
    "start": "1660120",
    "end": "1665565"
  },
  {
    "text": "Um, we use these terms over-fit high variance, underfit high bias not quite and they have very similar meanings.",
    "start": "1665565",
    "end": "1672929"
  },
  {
    "text": "Right, at their first approximation assume they, they mean the same thing. One thing we'll see later, uh, two weeks from now is,",
    "start": "1672930",
    "end": "1678165"
  },
  {
    "text": "uh, we'll talk about algorithms with high bias and high variance. So, uh, this is, uh,",
    "start": "1678165",
    "end": "1684825"
  },
  {
    "text": "and actually one way to think of high bias and high variance, we will talk about this later, is if you have a dataset that looks like this,",
    "start": "1684825",
    "end": "1692050"
  },
  {
    "text": "uh, and if somehow your classifier has very high complexity,",
    "start": "1692300",
    "end": "1700200"
  },
  {
    "text": "there is a very, very complicated function. But for some reason it's still not fitting your data well right,",
    "start": "1700200",
    "end": "1705930"
  },
  {
    "text": "so that would be one way to have high bias and high variance which does happen. All right. Cool.",
    "start": "1705930",
    "end": "1713100"
  },
  {
    "text": "[NOISE].",
    "start": "1713100",
    "end": "1728000"
  },
  {
    "text": "So to wrap up the discussion on regularization, um,",
    "start": "1728000",
    "end": "1734190"
  },
  {
    "text": "there's one- so mechanically the way you implement regularization is by adding that penalty on the norm of the parameters,",
    "start": "1735670",
    "end": "1744780"
  },
  {
    "text": "uh, so that's what you actually implement. It turns out that, um, there's another way to think about regularization.",
    "start": "1744780",
    "end": "1751320"
  },
  {
    "text": "So you remember when we talked about the new, uh, linear regression we talked about minimizing squared error and then later on we saw that",
    "start": "1751320",
    "end": "1758549"
  },
  {
    "text": "linear regression was maximum likelihood estimation on a certain generalized linear model using,",
    "start": "1758550",
    "end": "1763740"
  },
  {
    "text": "uh, using, using, using a Gaussian distribution as the choice for the exponential family as a member of the exponential family.",
    "start": "1763740",
    "end": "1770985"
  },
  {
    "text": "It turns out that, um, there's a similar point of view you can take on the regularization algorithm that we just saw.",
    "start": "1770985",
    "end": "1777705"
  },
  {
    "text": "Which is, let's say S is the training set. [NOISE].",
    "start": "1777705",
    "end": "1787050"
  },
  {
    "text": "Right. So, um, given a training set,",
    "start": "1787050",
    "end": "1794160"
  },
  {
    "text": "um, you want to find the most likely value of Theta, right?",
    "start": "1794160",
    "end": "1801495"
  },
  {
    "text": "Um, and so by Bayes rule P of Theta given S is P of S given Theta",
    "start": "1801495",
    "end": "1811169"
  },
  {
    "text": "times P of Theta divided by P of S. And",
    "start": "1811169",
    "end": "1817350"
  },
  {
    "text": "so if you want to pick the value of Theta that's the most likely value of Theta given the data you saw,",
    "start": "1817350",
    "end": "1824970"
  },
  {
    "text": "then because the denominator is just a constant, this is arg max over Theta of P of S given Theta times P of Theta.",
    "start": "1824970",
    "end": "1836200"
  },
  {
    "text": "Um, and so if you're using",
    "start": "1840560",
    "end": "1846300"
  },
  {
    "text": "logistic regression then the first term is this.",
    "start": "1846300",
    "end": "1853660"
  },
  {
    "text": "Right and in the second term is P of Theta,",
    "start": "1856130",
    "end": "1861960"
  },
  {
    "text": "um, where this is the, you know, logistic regression model say,",
    "start": "1861960",
    "end": "1867190"
  },
  {
    "text": "right or any generalized linear model. And it turns out that, um,",
    "start": "1868520",
    "end": "1876510"
  },
  {
    "text": "if you assume P of Theta is Gaussian. So if you assume P of Theta is follow Theta.",
    "start": "1876510",
    "end": "1886260"
  },
  {
    "text": "The prior probability on Theta is Gaussian with mean 0 and,",
    "start": "1886260",
    "end": "1893250"
  },
  {
    "text": "uh, some variance tau squared i. So in other words P of Theta is,",
    "start": "1893250",
    "end": "1900885"
  },
  {
    "text": "you know, 1 over root 2 pi, um, I guess this would be the determinant of tau squared i, right,",
    "start": "1900885",
    "end": "1909060"
  },
  {
    "text": "e to the negative, um, Theta transpose, uh, tau squared i inverse.",
    "start": "1909060",
    "end": "1918310"
  },
  {
    "text": "Right. So the Gaussian probability as follows. It turns out that if, um,",
    "start": "1919820",
    "end": "1925740"
  },
  {
    "text": "this is your prior distribution for Theta and you plug this in here and you take logs computer maps and so on,",
    "start": "1925740",
    "end": "1934020"
  },
  {
    "text": "then you end up with exactly the regularization technique that we found just now. Okay. Um, and so in everything we've been doing so",
    "start": "1934020",
    "end": "1943529"
  },
  {
    "text": "far we've been taking a, um, frequentist interpretation.",
    "start": "1943530",
    "end": "1949875"
  },
  {
    "text": "I guess the two main schools of statistics are the frequentist school of statistic and the Bayesian school of statistic,",
    "start": "1949875",
    "end": "1961305"
  },
  {
    "text": "um, and there used to be some titanic academic debates about which is the right one,",
    "start": "1961305",
    "end": "1967620"
  },
  {
    "text": "but I think, uh, statisticians have gotten together and kind of made peace and then go freely between these two more and more these days.",
    "start": "1967620",
    "end": "1975540"
  },
  {
    "text": "Maybe not now all the time but, uh, but then the frequency score statistic. We say that there is some data and we want to find, um,",
    "start": "1975540",
    "end": "1984014"
  },
  {
    "text": "the value of Theta that makes the data",
    "start": "1984015",
    "end": "1989190"
  },
  {
    "text": "as likely as possible and that's where we got maximum likelihood estimation right.",
    "start": "1989190",
    "end": "1994649"
  },
  {
    "text": "And in the frequentist school of statistics, we view them as being some true value of Theta out in the world that is unknown.",
    "start": "1994650",
    "end": "2001895"
  },
  {
    "text": "Um, and so there is some true value of Theta that generated all these housing prices and our goal is to estimate this true parameter.",
    "start": "2001895",
    "end": "2009590"
  },
  {
    "text": "In the Bayesian school of statistics we say that Theta is unknown. But before you see even any data you already have some prior beliefs about how",
    "start": "2009590",
    "end": "2019490"
  },
  {
    "text": "housing prices are generated out in the world and your prior beliefs are captured in a probability distribution,",
    "start": "2019490",
    "end": "2025685"
  },
  {
    "text": "uh, denoted by P of Theta, so this is called the Gaussian prior.",
    "start": "2025685",
    "end": "2030540"
  },
  {
    "text": "And, um, we say that, um, and- and if you look at this Gaussian prior.",
    "start": "2032350",
    "end": "2038330"
  },
  {
    "text": "[NOISE]. Excuse me. It's quite reasonable. It's saying that before you've seen any data",
    "start": "2038330",
    "end": "2044510"
  },
  {
    "text": "on average I think the parameters of theta have mean 0 because I don't know if each Theta is positive or negative so giving the mean 0 seems reasonable.",
    "start": "2044510",
    "end": "2052309"
  },
  {
    "text": "And most things in the world are Gaussians and we just assume that my prior on Theta is Gaussian. So you know, we could debate that this is, uh,",
    "start": "2052310",
    "end": "2059570"
  },
  {
    "text": "the right assumption but it's not totally unreasonable, right? But they say well, for actually I think, you know,",
    "start": "2059570",
    "end": "2065690"
  },
  {
    "text": "for the next linear regression problem I'm gonna work on next week and I have no idea what I'm going to work on,",
    "start": "2065690",
    "end": "2071915"
  },
  {
    "text": "where I'm going to apply linear regression that next week. It is actually not too bad an assumption to say, you know, my prior is Gaussian.",
    "start": "2071915",
    "end": "2078935"
  },
  {
    "text": "And in the Bayesian view of the world, our goal is, um, to find the value of Theta that is most likely after,",
    "start": "2078935",
    "end": "2092659"
  },
  {
    "text": "um, we have seen the data. Okay. And so this is called map estimation.",
    "start": "2092660",
    "end": "2099680"
  },
  {
    "text": "Which stands for the maximum a posteriori estimation.",
    "start": "2099680",
    "end": "2107599"
  },
  {
    "text": "So this is actually the map estimator I guess the arg max of this, right?",
    "start": "2107600",
    "end": "2113040"
  },
  {
    "text": "Uh, as the map or the maximum a posteriori estimates of Theta which means,",
    "start": "2114100",
    "end": "2119405"
  },
  {
    "text": "look at the data, compute the Bayesian posterior distribution of Theta and pick the value of Theta that's most likely.",
    "start": "2119405",
    "end": "2124714"
  },
  {
    "text": "Okay. And so one of the things you do in the problem set that was just released, um,",
    "start": "2124715",
    "end": "2130940"
  },
  {
    "text": "is-is actually show this equivalence as well as plugged in a different prior",
    "start": "2130940",
    "end": "2137515"
  },
  {
    "text": "for theta other than the Gaussian prior you experiment with, uh, whether P of Theta is the Laplace prior and to",
    "start": "2137515",
    "end": "2143260"
  },
  {
    "text": "find a derive a different map as mean algorithm. Okay. Um, all right, good. Yeah, question?",
    "start": "2143260",
    "end": "2151990"
  },
  {
    "text": "[inaudible].",
    "start": "2151990",
    "end": "2165500"
  },
  {
    "text": "Sorry can you say that again? [inaudible]",
    "start": "2165500",
    "end": "2178520"
  },
  {
    "text": "Uh, yes. [inaudible]",
    "start": "2178520",
    "end": "2184970"
  },
  {
    "text": "Oh I see, yes, can difference between these two be seen as regularized versus non-regularized? Yes. So, so, um,",
    "start": "2184970",
    "end": "2190250"
  },
  {
    "text": "MLU here corresponds to the origin of regularization, uh, and this procedure here corresponds to adding regularization.",
    "start": "2190250",
    "end": "2199145"
  },
  {
    "text": "Um, it turns out that frequency statistic- statisticians can also use regularization it just that they don't try to",
    "start": "2199145",
    "end": "2205010"
  },
  {
    "text": "justify it through a Bayesian prior they just say, so if you're a frequentist statistic. If you're a frequentist statistician your job is to wake up and come up with",
    "start": "2205010",
    "end": "2212869"
  },
  {
    "text": "an algorithm to estimate this you know true value of theta that exists out in the world, and you can come up any procedure you want and to inspire your procedure,",
    "start": "2212870",
    "end": "2219940"
  },
  {
    "text": "you can add a regularization term. I think there's a lot of these debates between frequentists and Bayesians are more philosophical.",
    "start": "2219940",
    "end": "2225700"
  },
  {
    "text": "I think there's a machine learning person, as an engineer. I don't really you know, I think the philosophical debates are lovely but I just- I,",
    "start": "2225700",
    "end": "2232925"
  },
  {
    "text": "I just like my stuff to work. So, so, so frequentists can also infer regularization.",
    "start": "2232925",
    "end": "2239089"
  },
  {
    "text": "It just that they say this is part of the algorithm they invented rather than derived from a Bayesian prior.",
    "start": "2239090",
    "end": "2245760"
  },
  {
    "text": "All right, cool. So, um, [NOISE] all right.",
    "start": "2248290",
    "end": "2261250"
  },
  {
    "text": "Let's talk about um, so in, in our discussion on regularization and choosing the degree of polynomial,",
    "start": "2261250",
    "end": "2271369"
  },
  {
    "text": "um, uh, all right.",
    "start": "2271370",
    "end": "2276420"
  },
  {
    "text": "So let's see, let's say I plot a chart where on the horizontal axis I plot,",
    "start": "2277930",
    "end": "2283400"
  },
  {
    "text": "um, [NOISE] model complexity.",
    "start": "2283400",
    "end": "2288904"
  },
  {
    "text": "So how complicated is your model? So for example, uh, to the right of this curve could be a very high degree polynomial.",
    "start": "2288905",
    "end": "2295610"
  },
  {
    "text": "[NOISE] Right.",
    "start": "2295610",
    "end": "2302900"
  },
  {
    "text": "Um, and what you find is that as you increase model complexity your training error- if you do not regularize, right?",
    "start": "2302900",
    "end": "2314990"
  },
  {
    "text": "So if, if you fit a linear function, cosine function, cubic function and so on. You find that the higher the degree of",
    "start": "2314990",
    "end": "2321290"
  },
  {
    "text": "your polynomial the better your training error because you know, a fifth-order polynomial always fits the data better than a fourth-order polynomial.",
    "start": "2321290",
    "end": "2328805"
  },
  {
    "text": "If you, if you do not regularize. But what we saw with the original picture was that the ability of the algorithm",
    "start": "2328805",
    "end": "2339309"
  },
  {
    "text": "[NOISE] to generalize kind of goes down and then starts to go back up, right?",
    "start": "2339310",
    "end": "2347795"
  },
  {
    "text": "And so if you were to have a separate test set and evaluate your classifier on a set of data that the algorithm hasn't seen so far,",
    "start": "2347795",
    "end": "2355625"
  },
  {
    "text": "so measure how well the algorithm generalizes to a different novel set of data, then if you fit a linear function then this underfits [NOISE].",
    "start": "2355625",
    "end": "2366890"
  },
  {
    "text": "If you fit a fifth-order polynomial this overfits, [NOISE] and there is somewhere in",
    "start": "2366890",
    "end": "2373190"
  },
  {
    "text": "between right, that is just right.",
    "start": "2373190",
    "end": "2382670"
  },
  {
    "text": "Okay? And um, this curve is true for regularization as well.",
    "start": "2382670",
    "end": "2388700"
  },
  {
    "text": "So say you apply linear regression with 10,000 features to a very small training example.",
    "start": "2388700",
    "end": "2396210"
  },
  {
    "text": "If lambda was much too big then they will um, underfit.",
    "start": "2397450",
    "end": "2406744"
  },
  {
    "text": "If [NOISE] lambda was 0 so,",
    "start": "2406745",
    "end": "2411890"
  },
  {
    "text": "you're not regularizing at all then they will overfit, and there will be some intermediate value of",
    "start": "2411890",
    "end": "2417260"
  },
  {
    "text": "lambda that is not too big and not too small that you know, balances overfitting and underfitting.",
    "start": "2417260",
    "end": "2422840"
  },
  {
    "text": "Okay. So, um, what I'd like to do next is describe uh, a mechanistic.",
    "start": "2422840",
    "end": "2428435"
  },
  {
    "text": "A few different mechanistic procedures for trying to find this point in the middle,",
    "start": "2428435",
    "end": "2433580"
  },
  {
    "text": "right? And so [NOISE]",
    "start": "2433580",
    "end": "2457970"
  },
  {
    "text": "um, so given a data set [NOISE]",
    "start": "2457970",
    "end": "2471070"
  },
  {
    "text": "what we'll often do is um, take your data set and split it into different subsets,",
    "start": "2471070",
    "end": "2476590"
  },
  {
    "text": "uh, and a, a, a good hygiene is to take a data in the trained set- train, dev and test sets, um,",
    "start": "2476590",
    "end": "2482590"
  },
  {
    "text": "So if you have say, 10,000 examples, all right,",
    "start": "2482590",
    "end": "2489455"
  },
  {
    "text": "and you're trying to carry out this model selection problem. So for example, let's say you're trying to decide what",
    "start": "2489455",
    "end": "2496310"
  },
  {
    "text": "order polynomial you want to fit, [NOISE] right.",
    "start": "2496310",
    "end": "2503420"
  },
  {
    "text": "Or you're trying to choose the value of lambda, um,",
    "start": "2503420",
    "end": "2509255"
  },
  {
    "text": "or you're trying to choose the value of tau, that was the bandwidth parameter in uh,",
    "start": "2509255",
    "end": "2514670"
  },
  {
    "text": "locally weighted regression that you saw in the problem set- that we saw with, uh, locally weighted regression, all right?",
    "start": "2514670",
    "end": "2519890"
  },
  {
    "text": "So, um, or you're trying to choose a value C in a support vector machine.",
    "start": "2519890",
    "end": "2524930"
  },
  {
    "text": "So remember, the SVM objective was actually this, right.",
    "start": "2524930",
    "end": "2531710"
  },
  {
    "text": "With the you know, subject to some other things but for the O unknown soft margin that we talked about on Wednesday- uh, talked about on Monday.",
    "start": "2531710",
    "end": "2539599"
  },
  {
    "text": "You're trying to minimize the normal W and then there was this additional parameter C that trains off how much you insist on",
    "start": "2539600",
    "end": "2546589"
  },
  {
    "text": "classifying every training example perfectly. All right. So whether you're trying to make- which of these decisions you are trying to make,",
    "start": "2546590",
    "end": "2554194"
  },
  {
    "text": "um, how do you, uh, you know, choose a polynomial size or choose lambda or choose",
    "start": "2554195",
    "end": "2560570"
  },
  {
    "text": "tau or choose parameter C which also has this bias-variance trade-off. There'll be some values of C that are too large and some values of C that are too small.",
    "start": "2560570",
    "end": "2567710"
  },
  {
    "text": "[NOISE]",
    "start": "2567710",
    "end": "2579380"
  },
  {
    "text": "So here's one thing you can do which is um, uh, let's see, so",
    "start": "2579380",
    "end": "2588080"
  },
  {
    "text": "split your training data S into a subset which I'm gonna call the uh,",
    "start": "2588080",
    "end": "2594830"
  },
  {
    "text": "raw training set as subscript train, um, and then some subset which we wanna call S subscript dev.",
    "start": "2594830",
    "end": "2602045"
  },
  {
    "text": "And dev stands for uh, development, [NOISE] um, and then later we'll talk about [NOISE] a separate test set.",
    "start": "2602045",
    "end": "2612320"
  },
  {
    "text": "And so what you can do is train each model,",
    "start": "2612320",
    "end": "2618965"
  },
  {
    "text": "and by model I mean, um, option [NOISE] for the degree of polynomial",
    "start": "2618965",
    "end": "2629780"
  },
  {
    "text": "[NOISE] on S train.",
    "start": "2629780",
    "end": "2638460"
  },
  {
    "text": "Um, so you're evaluating a menu of models, right? So let's say, this is model 1,",
    "start": "2638560",
    "end": "2645484"
  },
  {
    "text": "model 2, and so on up to model 5, up to some number. They can train each of these models, uh,",
    "start": "2645485",
    "end": "2652250"
  },
  {
    "text": "on the first subset of your data [NOISE] and then get some hypothesis.",
    "start": "2652250",
    "end": "2659580"
  },
  {
    "text": "Let's call it h_i, [NOISE] um, and then,",
    "start": "2660130",
    "end": "2665299"
  },
  {
    "text": "[NOISE] measure the error",
    "start": "2665300",
    "end": "2671435"
  },
  {
    "text": "on S dev which is a second subset of your data called the development set.",
    "start": "2671435",
    "end": "2676775"
  },
  {
    "text": "And pick the one- [NOISE]",
    "start": "2676775",
    "end": "2688744"
  },
  {
    "text": "Okay. So rather than- and- and- uh, I wanna contrast this with an alternative procedure, right?",
    "start": "2688745",
    "end": "2697760"
  },
  {
    "text": "So the two sets of the da- two subsets of the data, some test set data, training set, and development set.",
    "start": "2697760",
    "end": "2702995"
  },
  {
    "text": "And uh, after training, uh, first order polynomial, second order polynomial, third order polynomial on the training set,",
    "start": "2702995",
    "end": "2709490"
  },
  {
    "text": "we evaluate all of these different models on the separate held-out developments sets and then pick the one with the lowest error on the development set.",
    "start": "2709490",
    "end": "2717349"
  },
  {
    "text": "Okay, um, but the one thing to not do would be to evaluate all these algorithms instead on the training set and then pick",
    "start": "2717350",
    "end": "2724850"
  },
  {
    "text": "the one with the lowest error on the training set, right. Why not- wha- what goes wrong when you do that? Yeah.",
    "start": "2724850",
    "end": "2736580"
  },
  {
    "text": "[BACKGROUND] [inaudible] Yeah, right, you just over-fit. How- why- why will you over-fit? [BACKGROUND] Parts of the error,",
    "start": "2736580",
    "end": "2747260"
  },
  {
    "text": "what you want to remain so don't want- [inaudible] Yeah. Yep, cool, right. So if you use this procedure,",
    "start": "2747260",
    "end": "2753424"
  },
  {
    "text": "you'll always end up picking the fifth order polynomial, right. Because the more complex algorithm will always do better on the training set.",
    "start": "2753425",
    "end": "2760400"
  },
  {
    "text": "So if you do this, this will always cause you to say, let's use the fifth order polynomial or the- or the highest possible order polynomial.",
    "start": "2760400",
    "end": "2766565"
  },
  {
    "text": "So this won't help you realize in the housing price prediction example to the second order polynomial is the benefit of the data, right. Does it make sense?",
    "start": "2766565",
    "end": "2774635"
  },
  {
    "text": "Um, and that's why for this procedure, um, if you evaluate your, uh,",
    "start": "2774635",
    "end": "2780470"
  },
  {
    "text": "model's error on a separate development set that the algorithm did not see during training,",
    "start": "2780470",
    "end": "2786515"
  },
  {
    "text": "this allows you to hopefully pick a model that neither over-fits nor underfits. And in this example, hopefully,",
    "start": "2786515",
    "end": "2792650"
  },
  {
    "text": "you find that uh, there will be the second-order polynomial, right, that the one that's just right in between that actually does",
    "start": "2792650",
    "end": "2798140"
  },
  {
    "text": "best on your development set, okay. Um, all right.",
    "start": "2798140",
    "end": "2806150"
  },
  {
    "text": "Now, uh, and then, um, you know if- if you are, uh,",
    "start": "2806150",
    "end": "2812590"
  },
  {
    "text": "if- if you are publishing an academic paper on machine learning um, then, this procedure has looked at",
    "start": "2812590",
    "end": "2818960"
  },
  {
    "text": "the training set as well as the development set, right. So this- this procedure, this piece of code is,",
    "start": "2818960",
    "end": "2824870"
  },
  {
    "text": "you know, is two in these decisions. Uh, it's two in the parameters, the training set, and it's two in the decision on the degree of polynomial to the dev set.",
    "start": "2824870",
    "end": "2834470"
  },
  {
    "text": "And so if you want to know, if you want to publish a paper that say, oh, my algorithm achieves 90% accuracy on this dataset um,",
    "start": "2834470",
    "end": "2842210"
  },
  {
    "text": "it's not valid to report the results on the dev set because the algorithm has already been optimized to the dev set.",
    "start": "2842210",
    "end": "2849020"
  },
  {
    "text": "In particular, information about what's the most- um, what's the best uh, degree of polynomial to choose",
    "start": "2849020",
    "end": "2854810"
  },
  {
    "text": "was derived from the dev set from the development set. And so if you're publishing a paper or you want to report an unbiased result, um,",
    "start": "2854810",
    "end": "2863670"
  },
  {
    "text": "evaluate the algorithm on a separate test set,",
    "start": "2865180",
    "end": "2871430"
  },
  {
    "text": "S test and report that error, okay.",
    "start": "2871430",
    "end": "2880145"
  },
  {
    "text": "And so if you're publishing a paper, it's considered good hygiene to um, uh, report the error on a completely separate test set that you did",
    "start": "2880145",
    "end": "2888740"
  },
  {
    "text": "not in any way shape or form look at during the development of your model, during the training procedure, okay.",
    "start": "2888740",
    "end": "2895445"
  },
  {
    "text": "Clear with things? Oh, yeah. Are dev and test [inaudible] is uh,",
    "start": "2895445",
    "end": "2901790"
  },
  {
    "text": "generally different by much? Um, a dev and test set's error isn't strictly different by much. It depends on the size of- it depends on the size of the dataset.",
    "start": "2901790",
    "end": "2909875"
  },
  {
    "text": "Um, uh, and so it turns out that um, actu- let- let- actually let me- let me give an example, actually.",
    "start": "2909875",
    "end": "2918980"
  },
  {
    "text": "So let's say you're trying to fit a degree of polynomial, right.",
    "start": "2918980",
    "end": "2924020"
  },
  {
    "text": "Um, and you want to choose uh, uh, write the dev error.",
    "start": "2924020",
    "end": "2930260"
  },
  {
    "text": "So we can fill the first, second, third, fourth, fifth degree polynomial. And so um, after fitting all of these,",
    "start": "2930260",
    "end": "2938165"
  },
  {
    "text": "lets say that the square error right, to use round numbers is 10, um,",
    "start": "2938165",
    "end": "2944585"
  },
  {
    "text": "5.1, 5.0, 4.9, you know,",
    "start": "2944585",
    "end": "2951935"
  },
  {
    "text": "um, 7, 10, and so on, okay. Just to- just to use round numbers for illustrative purposes.",
    "start": "2951935",
    "end": "2959920"
  },
  {
    "text": "If you're using the dev error to pick the best hypothesis,",
    "start": "2959920",
    "end": "2967510"
  },
  {
    "text": "to pick the best hot spot, you would say that uh, using the fifth order polynomial gets you 4.9 squared error, right.",
    "start": "2967510",
    "end": "2977120"
  },
  {
    "text": "But did you really earn that 4.9 square error or did you just get lucky?",
    "start": "2977120",
    "end": "2983030"
  },
  {
    "text": "Because there is some noise and so maybe all of these actually have error that close to 5.0.",
    "start": "2983030",
    "end": "2989525"
  },
  {
    "text": "But some are just higher, some are just lower, and you just got a little bit lucky that on the dev set this did better.",
    "start": "2989525",
    "end": "2995615"
  },
  {
    "text": "Which is why, if you look at your dev set error, your dev set error is a biased estimate, right.",
    "start": "2995615",
    "end": "3001599"
  },
  {
    "text": "And so where's your very large test set? If it's a very large test set, maybe the true numbers are 10, 5, 5,",
    "start": "3001600",
    "end": "3008920"
  },
  {
    "text": "5, 7, 10 are your actual expected squared errors.",
    "start": "3008920",
    "end": "3014410"
  },
  {
    "text": "It's just that um, because of a little bit of noise you got lucky and reported 4.9.",
    "start": "3014410",
    "end": "3019705"
  },
  {
    "text": "And so this would be a bad thing to do in an academic paper, right. Because it's uh, what you earned was an error of 5.0 you didn't earn an error of 4.9.",
    "start": "3019705",
    "end": "3027309"
  },
  {
    "text": "It's just that- because you're over-fitting a little bit in the dev set. Um, you chose the thing that looked best for the dev set,",
    "start": "3027310",
    "end": "3034600"
  },
  {
    "text": "but your algorithm didn't actually achieve that error, it's just because of noise, okay. So- so um, now in- in so- so it's considered a good practice to report um,",
    "start": "3034600",
    "end": "3046220"
  },
  {
    "text": "uh, uh, so reporting on the dev error isn't- isn't- isn't really a valid unbiased procedure.",
    "start": "3046530",
    "end": "3052795"
  },
  {
    "text": "And- and uh, um, yeah. Do you have a question? [BACKGROUND]",
    "start": "3052795",
    "end": "3088000"
  },
  {
    "text": "[inaudible] Yeah. Ye- so- so one of the just to we say, I- I yes, you're right. One of the problems with some of the machine learning benchmarks that people worked on",
    "start": "3088000",
    "end": "3095410"
  },
  {
    "text": "for a long time is this is unavoidable mental over-fitting. The people'd gotten to use the dataset and everyone's working the",
    "start": "3095410",
    "end": "3101410"
  },
  {
    "text": "same trying to publish the best numbers from the same test set. So the academic committee on machine learning does have some amount of over-fitting uh,",
    "start": "3101410",
    "end": "3109000"
  },
  {
    "text": "to the standard benchmarks that people have worked on for a long time. And this is an unfortunate result uh, when the test is very- very large,",
    "start": "3109000",
    "end": "3115480"
  },
  {
    "text": "the amounts of over-fitting is probably smaller, but when the test set is not big enough then the over-fitting result can cause um,",
    "start": "3115480",
    "end": "3122380"
  },
  {
    "text": "sometimes even research papers to uh, to publish results that are uh, probably over-fit to the data set, right.",
    "start": "3122380",
    "end": "3128289"
  },
  {
    "text": "um, uh, and so I think there is actually uh, one standard academic benchmark because there's a dataset called CIFAR, it's quite small.",
    "start": "3128290",
    "end": "3134800"
  },
  {
    "text": "It's actually the very same research paper uh, uh, analyzing um, results on CIFAR uh,",
    "start": "3134800",
    "end": "3140740"
  },
  {
    "text": "arguing that some fraction of their progress that was made was actually perhaps uh,",
    "start": "3140740",
    "end": "3145975"
  },
  {
    "text": "researchers uni- unintentionally over-fitting to this dataset. Okay. Oh and by the way um,",
    "start": "3145975",
    "end": "3154015"
  },
  {
    "text": "one thing I do when I'm building you know, production machine learning systems. So when I'm- when I'm shipping a product, right.",
    "start": "3154015",
    "end": "3160030"
  },
  {
    "text": "I just don't build a speech recognition system and just make it work. I just wanna, and not- and if I'm not trying to publish a paper, I'm not trying to make some claim.",
    "start": "3160030",
    "end": "3167095"
  },
  {
    "text": "Sometimes I don't bother to have a test set, right. So and uh, and it means I don't know the true error of the system sometimes uh,",
    "start": "3167095",
    "end": "3174474"
  },
  {
    "text": "but I'm very conscious of that. If I don't have a lot of data, sometimes I'm may decide to just not have a test set and it means I just don't try to report the test set number.",
    "start": "3174475",
    "end": "3182605"
  },
  {
    "text": "I can report that dev set number which I know is biased and I just don't report the test set number.",
    "start": "3182605",
    "end": "3187765"
  },
  {
    "text": "Don't do this when you're publishing your academic paper, right. This is not good if you're publishing a paper or making claims on",
    "start": "3187765",
    "end": "3193150"
  },
  {
    "text": "the outside but all we're doing is building a product and not writing a paper out, this is- this is actually okay. Uh, yeah.",
    "start": "3193150",
    "end": "3199660"
  },
  {
    "text": "[inaudible]",
    "start": "3199660",
    "end": "3210319"
  },
  {
    "text": "Yeah. Okay, good. Uh, that's- lemme, lemme get to that. Good. So, um, the next topic about setting up the train dev test split is,",
    "start": "3210320",
    "end": "3218675"
  },
  {
    "text": "how do you decide how much data should go into each of these three subsets? Um, so uh, uh,",
    "start": "3218675",
    "end": "3225439"
  },
  {
    "text": "I can tell- so, so let me just tell you the historical perspective and then a modern perspective. Um, historically, the rule of thumb was you take a training set, right?",
    "start": "3225439",
    "end": "3234695"
  },
  {
    "text": "Take your training set S and then you would send- here, one rule of thumb that you see a lot of people referring to is, uh,",
    "start": "3234695",
    "end": "3241234"
  },
  {
    "text": "70% training, right? 30% test. [NOISE] This is one common rule of thumb that you just hear a lot.",
    "start": "3241235",
    "end": "3250670"
  },
  {
    "text": "Uh, or maybe you have- if you- if you don't have a dev set, if- if- if you're not doing model selection,",
    "start": "3250670",
    "end": "3255860"
  },
  {
    "text": "if you just- if you've already picked the model and now you're revising. Or maybe you have people use,",
    "start": "3255860",
    "end": "3261410"
  },
  {
    "text": "you know, 60% train, 20% dev, 20% test.",
    "start": "3261410",
    "end": "3267980"
  },
  {
    "text": "Right? So these are rules of thumb that people use to give. Um, and these are decent rules of thumb when you don't have a massive dataset.",
    "start": "3267980",
    "end": "3277370"
  },
  {
    "text": "So you may have 100- 100 examples, maybe you have 1,000 examples, maybe several thousand examples,",
    "start": "3277370",
    "end": "3283880"
  },
  {
    "text": "I think these rules of thumb are perfectly fine. [NOISE] Um, what I'm seeing is that as you move to machine learning problems with really,",
    "start": "3283880",
    "end": "3291079"
  },
  {
    "text": "really giant datasets, the percentage of data you send to dev and test are shrinking.",
    "start": "3291080",
    "end": "3297320"
  },
  {
    "text": "Right? And, and so, here's what I mean. Um, let's say you have 10 million examples.",
    "start": "3297320",
    "end": "3304220"
  },
  {
    "text": "Um, you know, yeah, decent size, not giant but like a reasonable size. Um, so le- let's,",
    "start": "3304220",
    "end": "3310805"
  },
  {
    "text": "let's take this- this is actually a pretty good rule of thumb if you have a small dataset. If you have a thou- if you have, you know, 5 million examples, this is a perfectly fine rule of thumb to use.",
    "start": "3310805",
    "end": "3317510"
  },
  {
    "text": "Um, but if you have 10 million examples, then, you know, you have 6 million,",
    "start": "3317510",
    "end": "3323090"
  },
  {
    "text": "[NOISE] 2 million, [NOISE] 2 million,",
    "start": "3323090",
    "end": "3329030"
  },
  {
    "text": "right, train, dev, test. [NOISE] And the question is,",
    "start": "3329030",
    "end": "3334955"
  },
  {
    "text": "do you really need 2 million examples to estimate the performance of your final classifier?",
    "start": "3334955",
    "end": "3340490"
  },
  {
    "text": "Uh, sometimes you do if you're working on online advertising, you know, which I have done,",
    "start": "3340490",
    "end": "3346220"
  },
  {
    "text": "and you're trying to increase your ad click-through rate by 0.1%, because it turns out increasing ad click-through rate by 0.1%,",
    "start": "3346220",
    "end": "3353885"
  },
  {
    "text": "which I've done multiple times, uh, turns out to be very lucrative. [LAUGHTER] Uh, uh, then you actually need a very large dataset to measure these very,",
    "start": "3353885",
    "end": "3360890"
  },
  {
    "text": "very small improvements because to- to- to increasing ad click-through rate by 0.1, you might have actually a lot of projects.",
    "start": "3360890",
    "end": "3366440"
  },
  {
    "text": "You might have 10 projects, each of which increases ad click-through rate by 0.01%, right?",
    "start": "3366440",
    "end": "3371599"
  },
  {
    "text": "And so to measure these very different- small differences in, algorithm one does 0.01% better than algorithm b",
    "start": "3371600",
    "end": "3378695"
  },
  {
    "text": "by- so you need a lot of data to tease out that very small difference. So if you're in the business of teasing out these very small differences,",
    "start": "3378695",
    "end": "3385295"
  },
  {
    "text": "you actually need very large test sets. But if you're comparing different algorithms and one algorithm is, you know,",
    "start": "3385295",
    "end": "3393260"
  },
  {
    "text": "2% better or even 1% better than the other algorithm, then with 1,000 examples maybe, right,",
    "start": "3393260",
    "end": "3400550"
  },
  {
    "text": "1,000 examples may be enough for you to distinguish between these much larger differences.",
    "start": "3400550",
    "end": "3405830"
  },
  {
    "text": "Um, so my recommendation for choosing the dev and test sets is choose them to be big enough,",
    "start": "3405830",
    "end": "3412625"
  },
  {
    "text": "um, that you have enough data to make meaningful comparisons between different algorithms.",
    "start": "3412625",
    "end": "3419450"
  },
  {
    "text": "Uh, and if you suspect your algorithms will vary in performance by 0.01%, you just need a lot of data to distinguish that, right?",
    "start": "3419450",
    "end": "3427400"
  },
  {
    "text": "So, so if you have 100 examples, then, you know, if, if one algorithm has 90% accuracy and one algorithm has 90.01% accuracy,",
    "start": "3427400",
    "end": "3437975"
  },
  {
    "text": "then unless you have at least 1,000 examples and maybe 10,000 or more, you just can't see this very small difference, right?",
    "start": "3437975",
    "end": "3443990"
  },
  {
    "text": "If you have 100 examples, you just can't measure this very small difference. So my, my advice is, uh,",
    "start": "3443990",
    "end": "3449255"
  },
  {
    "text": "choose your dev and test sets to be big enough that, um, uh, you could see the differences in the performance of algorithms that you,",
    "start": "3449255",
    "end": "3457130"
  },
  {
    "text": "uh, tha- that you roughly expect to see. Um, and then you don't need to make your dev and test sets much larger than that.",
    "start": "3457130",
    "end": "3462980"
  },
  {
    "text": "And I would usually then just put the data. You don't need the dev and sets back in the training set.",
    "start": "3462980",
    "end": "3468225"
  },
  {
    "text": "So when you're working with very large datasets, say, you know, a million or 10 million or 100 million examples,",
    "start": "3468225",
    "end": "3474160"
  },
  {
    "text": "what you see is that the percentage of data that goes into dev and test tends to be much smaller. So it might be, um,",
    "start": "3474160",
    "end": "3480400"
  },
  {
    "text": "uh, so you see for example, maybe 90% train, you know, 5% dev,",
    "start": "3480400",
    "end": "3486289"
  },
  {
    "text": "and 5% test, right? Or, or, or even smaller, or even 1%, 1% depending on how much data you really need.",
    "start": "3486290",
    "end": "3492260"
  },
  {
    "text": "To measure to the level of accuracy you need the differences in the performance of your algorithms.",
    "start": "3492260",
    "end": "3497280"
  },
  {
    "text": "Okay? Cool. All right, um, just to give this whole procedure a name,",
    "start": "3497280",
    "end": "3505180"
  },
  {
    "text": "um, what we just did here between the train and dev set, this procedure that we have is called hold-out cross validation.",
    "start": "3505180",
    "end": "3513500"
  },
  {
    "text": "[NOISE] And sometimes,",
    "start": "3513500",
    "end": "3521614"
  },
  {
    "text": "to distinguish this from other cross validation procedures we'll talk about in a minute, sometimes this is called simple hold-out cross validation.",
    "start": "3521614",
    "end": "3528725"
  },
  {
    "text": "We'll talk about some other hold-out cross validation procedures in a second. Um, and, uh, uh,",
    "start": "3528725",
    "end": "3534724"
  },
  {
    "text": "and the dev set,",
    "start": "3534725",
    "end": "3537810"
  },
  {
    "text": "um, is sometimes also called the cross validation set.",
    "start": "3541510",
    "end": "3546570"
  },
  {
    "text": "Okay, right? Uh, so sometimes you- people use- sometimes, you hear people say, you know,",
    "start": "3549640",
    "end": "3555650"
  },
  {
    "text": "we're gonna use a cross validation set. That means roughly the same thing as a, as a dev set. Okay? So in the normal workflow of developing a learning algorithm,",
    "start": "3555650",
    "end": "3566359"
  },
  {
    "text": "uh, when you're given the dataset, I would split it into a training set and a dev set. Oh, and I used to say cross-validation set,",
    "start": "3566360",
    "end": "3573065"
  },
  {
    "text": "but cross-validation is just a mouthful. So I think just motivated by the reducing number of syllables, because you're using this classifier so often,",
    "start": "3573065",
    "end": "3579605"
  },
  {
    "text": "more and more people just call it the dev set, but it means roughly the same thing. Right? So, so when I'm, uh, building a machine learning system,",
    "start": "3579605",
    "end": "3586250"
  },
  {
    "text": "I'll often take the dataset, split into train and dev, and if you need a test set, then also a test set,",
    "start": "3586250",
    "end": "3592325"
  },
  {
    "text": "um, and then, uh, keep on fitting the parameters to the training set and, uh,",
    "start": "3592325",
    "end": "3597860"
  },
  {
    "text": "evaluating the performance of your algorithm on the dev set and using that to come up with new features,",
    "start": "3597860",
    "end": "3602990"
  },
  {
    "text": "choose the model size, choose the regularization parameter Lambda, um, really try out lots of different things and spend, you know,",
    "start": "3602990",
    "end": "3609560"
  },
  {
    "text": "several days or weeks, uh, to optimize the performance on the dev set. Um, and then, uh,",
    "start": "3609560",
    "end": "3615635"
  },
  {
    "text": "when you want to know how well is your algorithm performing, to then evaluate the model on the test set.",
    "start": "3615635",
    "end": "3622250"
  },
  {
    "text": "Right? And- and the thing to be careful not to do is to make any decisions about your model using the test set, right?",
    "start": "3622250",
    "end": "3629225"
  },
  {
    "text": "Because then- then your scientific data to the test set is no longer an unbiased estimate. Uh, one- so- and- and o- one thing that is actually okay to do is, um,",
    "start": "3629225",
    "end": "3638870"
  },
  {
    "text": "if you have a team that's working on the problem, if every week they measure the performance on",
    "start": "3638870",
    "end": "3644330"
  },
  {
    "text": "the test set and report out on a chart, right? You know, uh, the, the performance on the test set, that's actually okay.",
    "start": "3644330",
    "end": "3651080"
  },
  {
    "text": "You can evaluate the model multiple times on the test set. You can actually give out a weekly report, saying, this week, for our online advertising system,",
    "start": "3651080",
    "end": "3657890"
  },
  {
    "text": "we have this result on the test set. One week later, we have this result on test set, one week later, this result on the test set. It's actually okay to evaluate your algorithm repeatedly on the test set.",
    "start": "3657890",
    "end": "3666020"
  },
  {
    "text": "Uh, what's not okay is to use those evaluations to make any decisions about your learning algorithm.",
    "start": "3666020",
    "end": "3671120"
  },
  {
    "text": "So for example, if one day you notice that your model is doing worse this week than last week on the test set,",
    "start": "3671120",
    "end": "3677720"
  },
  {
    "text": "if you use that to revert back to an older model, then you've just made a decision that's based on the test set,",
    "start": "3677720",
    "end": "3683180"
  },
  {
    "text": "and- and your test set is no longer biased. But if all you do is report out the result but not make any decisions based on the test set",
    "start": "3683180",
    "end": "3689690"
  },
  {
    "text": "performance such as whether to revert to an earlier model, then you can- I- I- it's actually legitimate it's actually okay to keep on,",
    "start": "3689690",
    "end": "3696980"
  },
  {
    "text": "you know, use, uh, use the same test set to track your- your team's performance over time. Okay. All right.",
    "start": "3696980",
    "end": "3705575"
  },
  {
    "text": "Good. Um, so when you have very large data sets,",
    "start": "3705575",
    "end": "3711005"
  },
  {
    "text": "this is the procedure if you're developing for defining the train dev",
    "start": "3711005",
    "end": "3716450"
  },
  {
    "text": "and test sets and this procedure can be used to choose the model of polynomial.",
    "start": "3716450",
    "end": "3722224"
  },
  {
    "text": "It can also be used to choose the regularization parameter Lambda or or the parameter C or- or- or the parameter tau from now locally weighted regression.",
    "start": "3722225",
    "end": "3730340"
  },
  {
    "text": "Um, now, whenever you have a very small data-set, right?",
    "start": "3730340",
    "end": "3738320"
  },
  {
    "text": "Um, [NOISE] So it turns out that,",
    "start": "3738320",
    "end": "3745295"
  },
  {
    "text": "uh, so I'm gonna leave out the test set for now. Le- let's just assume there is some separate test set. I'm not gonna worry about that for now.",
    "start": "3745295",
    "end": "3750829"
  },
  {
    "text": "Um, but let's say you have 100 examples, right?",
    "start": "3750830",
    "end": "3756700"
  },
  {
    "text": "Um, if you're going to split this into, you know, 70 in the training set in S subscript train and 30 in S dev.",
    "start": "3756700",
    "end": "3766315"
  },
  {
    "text": "Then you're training your algorithm on 70 examples instead of 100 examples. And so I've actually worked on a few healthcare problems.",
    "start": "3766315",
    "end": "3773855"
  },
  {
    "text": "Oh, actually, mo- most of my PhD students, uh, including Annan, work, doing a lot of work on, uh,",
    "start": "3773855",
    "end": "3779165"
  },
  {
    "text": "machine learning applied to health care. And so we actually worked on a few data-sets in healthcare where, you know,",
    "start": "3779165",
    "end": "3784625"
  },
  {
    "text": "every training example corresponded to some patient that sometimes that, uh, you know,",
    "start": "3784625",
    "end": "3789770"
  },
  {
    "text": "unfortunate disease or- or- or if every- if you're working- or if, um, every example corresponded to injecting a patient with a drug and seeing what happens to",
    "start": "3789770",
    "end": "3799190"
  },
  {
    "text": "the patient right sometimes there's literally a lot of blood and pain that goes into collecting every example.",
    "start": "3799190",
    "end": "3804785"
  },
  {
    "text": "And if you have 100 examples to hold out 30 of them, um, for the purpose of model selection using only 70 examples and 100 examples.",
    "start": "3804785",
    "end": "3814130"
  },
  {
    "text": "It seems like you're wasting a lot of data that was collected through a lot of, you know, literal pain, right?",
    "start": "3814130",
    "end": "3819725"
  },
  {
    "text": "Um, so is there a way to say do model selection such as choose the degree of polynomial without,",
    "start": "3819725",
    "end": "3826660"
  },
  {
    "text": "\"Slightly wasting so much of the data.\"",
    "start": "3826660",
    "end": "3830089"
  },
  {
    "text": "There is a procedure that you should use only if you have a small data-set,",
    "start": "3832660",
    "end": "3837785"
  },
  {
    "text": "only if you're worried about the size of- oh, and the other disadvantage of this is, you evaluate your model only on 30 examples,",
    "start": "3837785",
    "end": "3844280"
  },
  {
    "text": "and that seems really small. Right? You know can you- can you just find more data to evaluate your models as well.",
    "start": "3844280",
    "end": "3849770"
  },
  {
    "text": "So there's a procedure that you should use [NOISE] only if you have a small data-set,",
    "start": "3849770",
    "end": "3855875"
  },
  {
    "text": "uh, called k-fold cross-validation, or k-fold CV. And this is, uh, in contrast to simple cross validation.",
    "start": "3855875",
    "end": "3863150"
  },
  {
    "text": "Um, but this is the idea which is- let's say this is your training set S, so you have, you know,",
    "start": "3863150",
    "end": "3869405"
  },
  {
    "text": "X 1, Y 1 down to X say 100, Y 100.",
    "start": "3869405",
    "end": "3876710"
  },
  {
    "text": "[NOISE] What we're going to do is take the training set and, uh, divide it into k pieces.",
    "start": "3876710",
    "end": "3884405"
  },
  {
    "text": "Um, so for the purpose of illustration, I'm gonna use k equals 5. When I'm, just to make the- the writing on the board sane.",
    "start": "3884405",
    "end": "3891320"
  },
  {
    "text": "Uh, k equals 10, uh, is typical. I guess, uh, for illustration.",
    "start": "3891320",
    "end": "3899120"
  },
  {
    "text": "[NOISE] But so what you do is, um, take your data-set and divide it into five different subsets of- in this example,",
    "start": "3899120",
    "end": "3909755"
  },
  {
    "text": "you would have 20 examples. 100- 100 examples divided into five subsets, so there are 20 examples in each subset.",
    "start": "3909755",
    "end": "3915965"
  },
  {
    "text": "And, um, what you do is, for i equals 1 to k train i.e,",
    "start": "3915965",
    "end": "3925880"
  },
  {
    "text": "fit parameters on k minus 1 pieces.",
    "start": "3925880",
    "end": "3935220"
  },
  {
    "text": "And then test on the",
    "start": "3935950",
    "end": "3941900"
  },
  {
    "text": "remaining [NOISE] one piece,",
    "start": "3941900",
    "end": "3949589"
  },
  {
    "text": "and then you average. Right? So in other words, uh, when k is equals 5, we're going to loop through five times.",
    "start": "3950560",
    "end": "3958475"
  },
  {
    "text": "In the first iteration, we're going to train on these and test on the last one fifth of the data. Um,",
    "start": "3958475",
    "end": "3966335"
  },
  {
    "text": "so we'll hold out the last one fifth of the data, train on the rest and test on that. And then in the second iteration, through this for loop,",
    "start": "3966335",
    "end": "3973895"
  },
  {
    "text": "we'll train on pieces 1 ,2, 3 and 5 and test on piece number 4,",
    "start": "3973895",
    "end": "3980195"
  },
  {
    "text": "and we get the number. Um, and then you hold out this third piece, train on the others, test on this, and so on.",
    "start": "3980195",
    "end": "3987560"
  },
  {
    "text": "So you do it five times, where on each time, you leave out one fifth of the data, train on the remaining four-fifths and you evaluate the model on that final one fifth.",
    "start": "3987560",
    "end": "3997565"
  },
  {
    "text": "Okay? And so, um, if you're trying to choose a degree of polynomial, what you would do is- I guess for,",
    "start": "3997565",
    "end": "4005230"
  },
  {
    "text": "you know, D equals 1 through 5.",
    "start": "4005230",
    "end": "4008690"
  },
  {
    "text": "Right? So you do this procedure for a first order polynomial, uh,",
    "start": "4014970",
    "end": "4020800"
  },
  {
    "text": "fit- you fit a linear regression model five times, each time on four-fifths of the model and test on the remaining one fifth,",
    "start": "4020800",
    "end": "4026215"
  },
  {
    "text": "and you repeat this whole procedure for the quadratic function. Repeat this whole procedure for the cubic function, and so on.",
    "start": "4026215",
    "end": "4032619"
  },
  {
    "text": "And after doing this for every order polynomial from 1, 2, 3, 4, 5 you would then, uh,",
    "start": "4032620",
    "end": "4038725"
  },
  {
    "text": "pick the degree of polynomial that, um, sorry and then for each of these models,",
    "start": "4038725",
    "end": "4044380"
  },
  {
    "text": "you then average the five S's you have for- for S error. Okay? And then after doing this,",
    "start": "4044380",
    "end": "4050365"
  },
  {
    "text": "you would pick the degree of polynomial that did best according to this- according to this metric.",
    "start": "4050365",
    "end": "4057010"
  },
  {
    "text": "Right? And then maybe you'll find that the second-order polynomial does best. Um, and now you actually end up with, uh, five classifiers.",
    "start": "4057010",
    "end": "4069535"
  },
  {
    "text": "Right? Because you have five classifiers, each one fits on four-fifths of the data, uh, and then, uh,",
    "start": "4069535",
    "end": "4075580"
  },
  {
    "text": "and- and there's a- there's a final optional step, which is to refit the model on all 100% of the data.",
    "start": "4075580",
    "end": "4086930"
  },
  {
    "text": "Right? So if you want, you can keep five classifiers around and output their predictions,",
    "start": "4086940",
    "end": "4092770"
  },
  {
    "text": "but then you're keeping five classifiers around this. Uh- uh maybe a bit more common to- now that you've chosen to use",
    "start": "4092770",
    "end": "4098440"
  },
  {
    "text": "a second-order polynomial to just refit the model once on all 100% of the data.",
    "start": "4098440",
    "end": "4103525"
  },
  {
    "text": "Okay? Um, and so the advantage of, uh, k-fold cross validation is that,",
    "start": "4103525",
    "end": "4110085"
  },
  {
    "text": "instead of leaving out 30% of your data for your dev set on each iteration,",
    "start": "4110085",
    "end": "4115410"
  },
  {
    "text": "you're only leaving out 1 over k of your data. I use k equals 5 for illustration, but in practice,",
    "start": "4115410",
    "end": "4122035"
  },
  {
    "text": "k equals 10 is by far the most common choice that we use. I've sometimes seen people use k equals 20,",
    "start": "4122035",
    "end": "4128364"
  },
  {
    "text": "but quite rarely, but, um, uh, if you use k equals 10, then on each iteration, you're leaving out just one tenth of the data.",
    "start": "4128365",
    "end": "4135555"
  },
  {
    "text": "10% of the data rather than 30% of the data. Okay? Um, and so this procedure compared to simple cross-validation,",
    "start": "4135555",
    "end": "4145255"
  },
  {
    "text": "it makes more efficient use of the data, because you're holding out you know only 10% of the data on each iteration.",
    "start": "4145255",
    "end": "4151509"
  },
  {
    "text": "Uh, the disadvantage of this is computationally very expensive, that you're now fitting each model 10 times instead of just once.",
    "start": "4151510",
    "end": "4159475"
  },
  {
    "text": "Okay? But- but- but when you have a small data-set, this- this is actually a better procedure than simple cross validation.",
    "start": "4159475",
    "end": "4165355"
  },
  {
    "text": "If you don't mind the computational expense of fitting each model 10 times. This- this- this actually lets you get away with holding on this data.",
    "start": "4165355",
    "end": "4171730"
  },
  {
    "text": "[NOISE]",
    "start": "4171730",
    "end": "4182230"
  },
  {
    "text": "And then, um, there's one even more extreme version of this, which you should use, if you have very very small datasets.",
    "start": "4182230",
    "end": "4189114"
  },
  {
    "text": "So sometimes you might have an even smaller dataset. You know, if you're doing a class project with 20 examples this-",
    "start": "4189115",
    "end": "4194860"
  },
  {
    "text": "that's- that's small even by today's machine learning standards. So, uh, there's- there's an extreme version of k-fold cross-validation,",
    "start": "4194860",
    "end": "4202660"
  },
  {
    "text": "called leave-one-out cross validation, which is if you set k equals m. Right?",
    "start": "4202660",
    "end": "4210820"
  },
  {
    "text": "So in other words, here's your training set, maybe 20 examples.",
    "start": "4210820",
    "end": "4216085"
  },
  {
    "text": "So you're gonna divide this into as many pieces as you have training examples.",
    "start": "4216085",
    "end": "4221455"
  },
  {
    "text": "And what you do is leave out one example, train on the other 19,",
    "start": "4221455",
    "end": "4226660"
  },
  {
    "text": "and test on the one example you held out. And then leave out the second example, train on the other 19 and test to the one example you held out,",
    "start": "4226660",
    "end": "4233920"
  },
  {
    "text": "and do that 20 times, and then you average this over the 20 outcomes to evaluate how good different orders of polynomial are.",
    "start": "4233920",
    "end": "4240849"
  },
  {
    "text": "Um, the huge downside of this is just is completely very- very expensive, because now you need to change your algorithm m times.",
    "start": "4240850",
    "end": "4248020"
  },
  {
    "text": "So you, kind of, never do this unless m is really small. Uh, I personally have- I pretty much never use this procedure unless m is 100 or less.",
    "start": "4248020",
    "end": "4257560"
  },
  {
    "text": "I guess, you- your- if your model isn't too complicated, you can afford to fit a linear regression model 100 times, like it's not too bad.",
    "start": "4257560",
    "end": "4263935"
  },
  {
    "text": "Right? So- so if- if- if m is, uh, less than 100, you could consider this procedure.",
    "start": "4263935",
    "end": "4269380"
  },
  {
    "text": "But- but if m is 1000, fitting a linear model- fitting a model 1000 times, it seems like a lot of work, then you usually use k-fold cross-validation instead.",
    "start": "4269380",
    "end": "4276850"
  },
  {
    "text": "Uh, but if you do have 20 examples, then you know, I- I would then- then- if you have 20 examples,",
    "start": "4276850",
    "end": "4282940"
  },
  {
    "text": "I would probably use this procedure and somewhere between 20 and",
    "start": "4282940",
    "end": "4287949"
  },
  {
    "text": "50s maybe when I switch over from leave-one-out to k-fold cross-validation. Okay? Yeah.",
    "start": "4287950",
    "end": "4294650"
  },
  {
    "text": "In 10- fold cross validation should we use [inaudible] k times to go.",
    "start": "4298890",
    "end": "4308260"
  },
  {
    "text": "Yeah. So, um, right. So since you have k estimates, say 10- 10 estimates,",
    "start": "4308260",
    "end": "4314050"
  },
  {
    "text": "we're using 10-fold cross-validation. Can you measure the variance on those 10 estimates? Um, it turns out that those 10 estimates are",
    "start": "4314050",
    "end": "4321670"
  },
  {
    "text": "correlated because each of the 10 classifiers, eight-eight-eight-eight out of nine of the sets of data they trained on overlap.",
    "start": "4321670",
    "end": "4329395"
  },
  {
    "text": "So, um, there were some very interesting results, uh-uh there's some research papers written by Michael Kearns,",
    "start": "4329395",
    "end": "4335770"
  },
  {
    "text": "actually, um, it's like a long time ago, uh, trying to understand how correlated are these 10 estimates.",
    "start": "4335770",
    "end": "4342775"
  },
  {
    "text": "And from a theoretical point of view, the- we- the- as far as I know, the latest error result shows that this is not a worse estimate in training error,",
    "start": "4342775",
    "end": "4351460"
  },
  {
    "text": "but note- but- but maybe it's showing us in practice is not- you could measure it, but, uh,",
    "start": "4351460",
    "end": "4358645"
  },
  {
    "text": "we don't really trust that estimate of variance, because we think all 10 estimates are highly correlated,",
    "start": "4358645",
    "end": "4363894"
  },
  {
    "text": "or- or at least somewhat correlated. Yeah. Go ahead [inaudible]",
    "start": "4363894",
    "end": "4370960"
  },
  {
    "text": "Whether we're gonna find using k-fold cross-validation in deep learning?",
    "start": "4370960",
    "end": "4377005"
  },
  {
    "text": "Um, if you have a very small training set, then maybe yes. But deep learning algorithms depend on the details.",
    "start": "4377005",
    "end": "4384090"
  },
  {
    "text": "Right? Sometimes it takes so long to train, that training- training- training on a neural network 20 times, you know, seems like a pain unless- unless you have enough data.",
    "start": "4384090",
    "end": "4392610"
  },
  {
    "text": "Unless, um, your neural network was quite small. Right? Um, so it's rarely done with a deep learning algorithm.",
    "start": "4392610",
    "end": "4400900"
  },
  {
    "text": "But if you have so- frank- frankly if you have so little data, if you have 20 training examples, uh - uh, you know there are",
    "start": "4400900",
    "end": "4407635"
  },
  {
    "text": "other techniques that you probably need to use to boost performance. Such as transfer learning, or just more heterogeneity of input features,",
    "start": "4407635",
    "end": "4415989"
  },
  {
    "text": "or something else. Right? Um, yeah. [inaudible]",
    "start": "4415990",
    "end": "4423910"
  },
  {
    "text": "Sorry say again. [inaudible].",
    "start": "4423910",
    "end": "4431320"
  },
  {
    "text": "Sorry thank you for asking that, uh, this average set no. Um, I meant, um,",
    "start": "4431320",
    "end": "4437425"
  },
  {
    "text": "averaging the test errors. So, uh, here, you will have trained 10 classifiers and,",
    "start": "4437425",
    "end": "4444525"
  },
  {
    "text": "you know, when you evaluate it on the left at 110 for the data, you get it wrong- you get a number. Right? So you're looping 10 times, hold at one part, train on the others.",
    "start": "4444525",
    "end": "4453440"
  },
  {
    "text": "Test on this part you left out. And so that will give you a number, and they go say oh when you test on test on this part you left out,",
    "start": "4453440",
    "end": "4459115"
  },
  {
    "text": "the squared error was 5.0 and then you do it again, squared error was 5.7, squared error was 2.8.",
    "start": "4459115",
    "end": "4465085"
  },
  {
    "text": "So by average I meant average those numbers. And the average of those numbers is your estimate of the error of a,",
    "start": "4465085",
    "end": "4473920"
  },
  {
    "text": "you know, third order polynomial for this problem. So this is an averaging the set of real numbers that you got from",
    "start": "4473920",
    "end": "4481645"
  },
  {
    "text": "this- so- so this loop gives you k real numbers, uh, and so this is averaging those k real numbers to estimate for this outer loop,",
    "start": "4481645",
    "end": "4491244"
  },
  {
    "text": "how good a classifier with that degree polynomial is. Okay? Wow, actually, a lot of questions,",
    "start": "4491245",
    "end": "4496360"
  },
  {
    "text": "there's one thing I want to cover,  go ahead and this last two go ahead. [inaudible]",
    "start": "4496360",
    "end": "4509995"
  },
  {
    "text": "I see. Sure. Yes, using something other than F1 score would it just mean other than average?",
    "start": "4509995",
    "end": "4515320"
  },
  {
    "text": "Uh, yes, it would. Having F1 score is complicated. Yes. Uh, I think,",
    "start": "4515320",
    "end": "4520900"
  },
  {
    "text": "I think we'll talk- actually, um, so this week, Friday, we'll talk about learning theory. Next week- next Friday we're talking more about performance evaluation metrics.",
    "start": "4520900",
    "end": "4528400"
  },
  {
    "text": "So actually we will talk about F1 score? Uh, Mitch, one last question? How do you sample the data in the, in these sets?",
    "start": "4528400",
    "end": "4534340"
  },
  {
    "text": "Oh, sure. How do you sample the data in these sets? Um, so for the purposes of this class, assuming all your data comes through the same distribution,",
    "start": "4534340",
    "end": "4541375"
  },
  {
    "text": "uh I, I, I, I would usually randomly shuffle. Uh, again, in the era of machine learning and big data,",
    "start": "4541375",
    "end": "4548215"
  },
  {
    "text": "there's one other interesting trend is which, which wasn't true 10 years ago which is we're increasingly trying to train and test on different sets.",
    "start": "4548215",
    "end": "4555054"
  },
  {
    "text": "Uh, uh, we're trying to, you know, train on data, uh, collect it in one context and apply it to a totally different context.",
    "start": "4555055",
    "end": "4562000"
  },
  {
    "text": "Uh, such as, um, we're trying to, uh, uh, you know, train on, on speech collected on your cellphone because you have all that data,",
    "start": "4562000",
    "end": "4569470"
  },
  {
    "text": "and trying to apply it to a, um, uh, uh to a smart speaker where it was collected on a different microphone,",
    "start": "4569470",
    "end": "4576460"
  },
  {
    "text": "in your cellphone or something. So, uh, if you are doing that and the way you set your train dev test split is a bit more complicated.",
    "start": "4576460",
    "end": "4583690"
  },
  {
    "text": "Um, I wasn't going to talk about it in this class. If you want to learn more, uh, ah, I think at the start of the class,",
    "start": "4583690",
    "end": "4589230"
  },
  {
    "text": "I mentioned I was working on this book, Machine Learning Yearning. So that book is finished. And if you go to this website,",
    "start": "4589230",
    "end": "4595185"
  },
  {
    "text": "you can get a copy of it for free. Uh, uh, that talks about that. Uh, and I also talk about this more in CS230 which,",
    "start": "4595185",
    "end": "4602740"
  },
  {
    "text": "which goes more into the big data. But you can, you can go, go and learn machine- you can also read all about it in,",
    "start": "4602740",
    "end": "4608245"
  },
  {
    "text": "in Machine Learning Yearning. Um, if the train and test sets are a different distribution. Uh, yeah, but random shuffling would be a good default if you think you're training",
    "start": "4608245",
    "end": "4616450"
  },
  {
    "text": "dev test on two different, right? All right. Just one last thing I want to cover real quick which is, um, feature selection.",
    "start": "4616450",
    "end": "4629750"
  },
  {
    "text": "And so, um, so let me just describe what- so sometimes you have a lot of features.",
    "start": "4635610",
    "end": "4645880"
  },
  {
    "text": "Um, so, so actually let's take text classification. You might have 10,000 features corresponding to 10,000 words,",
    "start": "4645880",
    "end": "4652225"
  },
  {
    "text": "but you might suspect that a lot of the features are not important, right? You know the word the,",
    "start": "4652225",
    "end": "4658020"
  },
  {
    "text": "whether the word the is called a stop word, whether the word the appears in e-mail or not, doesn't really tell you if it's spam or not spam because the word the,",
    "start": "4658020",
    "end": "4665265"
  },
  {
    "text": "a, of, you know, these are called stop words. They don't tell you much about the content of the email.",
    "start": "4665265",
    "end": "4670855"
  },
  {
    "text": "Um, but so if a lot of features, uh, sometimes one way to reduce overfitting is to try to",
    "start": "4670855",
    "end": "4678130"
  },
  {
    "text": "find a small subset of the features that are most useful for your task, right? And so, um, this takes judgment.",
    "start": "4678130",
    "end": "4685090"
  },
  {
    "text": "There are some problems like computer vision where you have a lot of features corresponding to there being a lot of pixels in every image.",
    "start": "4685090",
    "end": "4691420"
  },
  {
    "text": "But probably, every pixel is somewhat relevant. So you don't want to select a subset of pixels for most computer vision tasks.",
    "start": "4691420",
    "end": "4698560"
  },
  {
    "text": "But there are some other problems where you might have lot of features when you suspect",
    "start": "4698560",
    "end": "4703720"
  },
  {
    "text": "the way to prevent overfitting is to find a small subset of the most relevant features for your task.",
    "start": "4703720",
    "end": "4709210"
  },
  {
    "text": "Um, so feature selection is a special case of model selection that applies to when you suspect that even though you have 10,000 features,",
    "start": "4709210",
    "end": "4718344"
  },
  {
    "text": "maybe only 50 of them are highly relevant, right? And so, um, uh one example,",
    "start": "4718345",
    "end": "4723985"
  },
  {
    "text": "if you are measuring a lot of things going on in a truck, uh, in order to figure out if the truck is about to break down, right.",
    "start": "4723985",
    "end": "4731469"
  },
  {
    "text": "You, you might, uh, for, for preventive maintenance, you might measure hundreds of variables or many hundreds of variables,",
    "start": "4731470",
    "end": "4737530"
  },
  {
    "text": "but you might secretly suspect that there are only a few things that, you know, predict when this truck is about to go down,",
    "start": "4737530",
    "end": "4743050"
  },
  {
    "text": "so you can do preventive maintenance. So if you suspect that's the case, then feature selection would be a reasonable approach to try, right?",
    "start": "4743050",
    "end": "4749680"
  },
  {
    "text": "And so, um, here's the- I'll, I'll just write out one algorithm, uh, which is start with- this is script f equals the empty set of features.",
    "start": "4749680",
    "end": "4762740"
  },
  {
    "text": "And then you repeatedly try adding each feature i",
    "start": "4765570",
    "end": "4776290"
  },
  {
    "text": "to f and see",
    "start": "4776290",
    "end": "4782920"
  },
  {
    "text": "which single feature addition",
    "start": "4782920",
    "end": "4787010"
  },
  {
    "text": "most improves the dev set performance, right?",
    "start": "4791280",
    "end": "4802255"
  },
  {
    "text": "And then Step 2 is go ahead and connect to add that feature to f, okay?",
    "start": "4802255",
    "end": "4817460"
  },
  {
    "text": "So let me illustrate this with pictures. So let's say you have, um, five features,",
    "start": "4818520",
    "end": "4827350"
  },
  {
    "text": "x1 through x5, and in practice it's usually more like x1 through x500 or x1 through 10,000,",
    "start": "4827350",
    "end": "4832915"
  },
  {
    "text": "but I'll just use 5. So start off with an empty set of features and, you know, train a linear classifier with no feature.",
    "start": "4832915",
    "end": "4839890"
  },
  {
    "text": "So the model is, um, h of x equals theta 0, right? With no features. Uh, so this won't be a very good model.",
    "start": "4839890",
    "end": "4846370"
  },
  {
    "text": "But see how well this does on your dev set. Uh, so this way you average the ys, right? So it's not for your model.",
    "start": "4846370",
    "end": "4851815"
  },
  {
    "text": "Next- so this is step one. In the second iteration, you would then take each of these features and add it to the empty sets.",
    "start": "4851815",
    "end": "4860170"
  },
  {
    "text": "You can try the empty set plus x1, empty set plus x2, empty set plus x5.",
    "start": "4860170",
    "end": "4868120"
  },
  {
    "text": "And for each of these, you would fit a corresponding model. So for this one you fit h of x equals theta 0 plus theta 1 x5.",
    "start": "4868120",
    "end": "4876280"
  },
  {
    "text": "So try adding one feature to your model, and see which model best improves your performance on the dev set, right?",
    "start": "4876280",
    "end": "4883480"
  },
  {
    "text": "And let's say you find that adding feature two is the best choice. So now, what we'll do is set the set of features to be x2.",
    "start": "4883480",
    "end": "4894204"
  },
  {
    "text": "For the next step, you would then consider starting of x2 and adding x1,",
    "start": "4894205",
    "end": "4902005"
  },
  {
    "text": "or x3, or x4, or x5.",
    "start": "4902005",
    "end": "4910120"
  },
  {
    "text": "So if your model is already using the feature x2, what's the other feature, what additional feature most helps your algorithm?",
    "start": "4910120",
    "end": "4917710"
  },
  {
    "text": "Um, and let's say it is x4, right? So you fit three or four models, see which one does best. And now you would commit to using the features x2 and x4.",
    "start": "4917710",
    "end": "4928465"
  },
  {
    "text": "Um, and you kind of keep on doing this, keep on adding features greedily, keep on adding features one at a time to see which single feature addition,",
    "start": "4928465",
    "end": "4937690"
  },
  {
    "text": "um, helps improve your algorithm the most. Um, and, and, and you can keep iterating",
    "start": "4937690",
    "end": "4943075"
  },
  {
    "text": "until adding more features now hurts performance. Uh, and then pick what- whichever feature subset",
    "start": "4943075",
    "end": "4948639"
  },
  {
    "text": "allows you to have the best possible performance of dev set, okay? So this is a special case of model selection called forward search.",
    "start": "4948640",
    "end": "4955330"
  },
  {
    "text": "It's called forward search because we started with a empty set of features, and adding features one at a time. There's a procedure called backwards search which we'll read about that.",
    "start": "4955330",
    "end": "4962650"
  },
  {
    "text": "We install all the features and remove features one at a time. But this would be a reasonable, uh, uh feature selection algorithm.",
    "start": "4962650",
    "end": "4969025"
  },
  {
    "text": "The disadvantage of this is it is quite computationally expensive, uh, but this can help you select a decent set of features, okay?",
    "start": "4969025",
    "end": "4976300"
  },
  {
    "text": "Um, so we're running a little bit late, uh, let's break. Oh, so I think, uh, I was meant to be on the road next week but, uh,",
    "start": "4976300",
    "end": "4983304"
  },
  {
    "text": "because [inaudible] is still unable to teach, I think we will have, uh, Rafael, uh, uh, teach, uh,",
    "start": "4983305",
    "end": "4990505"
  },
  {
    "text": "decision trees next week, and then also Kian will talk about neural networks next week, okay?",
    "start": "4990505",
    "end": "4996955"
  },
  {
    "text": "So let's break for today, um, and, and maybe we'll see some of you at the Friday discussion session.",
    "start": "4996955",
    "end": "5002320"
  }
]