[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "What we have seen so far is social science explanations,",
    "start": "5034",
    "end": "8595"
  },
  {
    "text": "why clusters, uh, appear in networks.",
    "start": "8595",
    "end": "12165"
  },
  {
    "text": "Um, and what do we are going to do next is to start talking about",
    "start": "12165",
    "end": "16529"
  },
  {
    "text": "methods that build on the intuition I have just explained and actually,",
    "start": "16530",
    "end": "21380"
  },
  {
    "text": "uh, identify, uh, these clusters in networks.",
    "start": "21380",
    "end": "25044"
  },
  {
    "text": "So, uh, let's start with what we have learned so far, right?",
    "start": "25045",
    "end": "28910"
  },
  {
    "text": "Like Granovetter's theory suggests,",
    "start": "28910",
    "end": "32300"
  },
  {
    "text": "that networks are composed from tightly connected,",
    "start": "32300",
    "end": "35660"
  },
  {
    "text": "uh, clusters, or sets of nodes.",
    "start": "35660",
    "end": "37700"
  },
  {
    "text": "Um, and the connections inside the clusters are strong, uh,",
    "start": "37700",
    "end": "41630"
  },
  {
    "text": "interpersonally, socially, and these connections across the clusters are weak,",
    "start": "41630",
    "end": "46475"
  },
  {
    "text": "are more like acquaintance uh, relationships,",
    "start": "46475",
    "end": "49445"
  },
  {
    "text": "we can call these clusters also communities,",
    "start": "49445",
    "end": "52625"
  },
  {
    "text": "we call them groups,",
    "start": "52625",
    "end": "54160"
  },
  {
    "text": "we call them modules.",
    "start": "54160",
    "end": "55625"
  },
  {
    "text": "It is kind of all the same, right?",
    "start": "55625",
    "end": "58740"
  },
  {
    "text": "And, uh, we are going to use the word network communities to",
    "start": "58740",
    "end": "62660"
  },
  {
    "text": "refer- to refer to sets of nodes with a lot of internal connections and few,",
    "start": "62660",
    "end": "68000"
  },
  {
    "text": "uh, external ones, meaning a few to the rest,",
    "start": "68000",
    "end": "70990"
  },
  {
    "text": "uh, of the- of the network.",
    "start": "70990",
    "end": "73820"
  },
  {
    "start": "73000",
    "end": "97000"
  },
  {
    "text": "So now the question will be given- given a, uh,",
    "start": "73820",
    "end": "78140"
  },
  {
    "text": "a network, how do we find these,",
    "start": "78140",
    "end": "80615"
  },
  {
    "text": "uh, densely connected groups of nodes?",
    "start": "80615",
    "end": "83125"
  },
  {
    "text": "Ideally, we would like uh, uh,",
    "start": "83125",
    "end": "86020"
  },
  {
    "text": "then these densely connected groups of nodes to then",
    "start": "86020",
    "end": "90335"
  },
  {
    "text": "correspond to real underlying, uh, social communities.",
    "start": "90335",
    "end": "94580"
  },
  {
    "text": "So let me give you a few examples of this.",
    "start": "94580",
    "end": "96895"
  },
  {
    "text": "So for example, one, uh,",
    "start": "96895",
    "end": "99219"
  },
  {
    "start": "97000",
    "end": "212000"
  },
  {
    "text": "most famous and most used social network is called Zachary's Karate Club network.",
    "start": "99220",
    "end": "106275"
  },
  {
    "text": "And Zachary was also a PhD student and he was studying,",
    "start": "106275",
    "end": "110405"
  },
  {
    "text": "uh, social relationships in a university karate club.",
    "start": "110405",
    "end": "113930"
  },
  {
    "text": "Um, and this is the social network of that,",
    "start": "113930",
    "end": "116945"
  },
  {
    "text": "uh, uh, university karate club.",
    "start": "116945",
    "end": "119320"
  },
  {
    "text": "But what was interesting is that during the study,",
    "start": "119320",
    "end": "121940"
  },
  {
    "text": "the conflicts led this karate club to split into two groups.",
    "start": "121940",
    "end": "126925"
  },
  {
    "text": "And what is interesting is that actually here the split is",
    "start": "126925",
    "end": "131000"
  },
  {
    "text": "denoted that circles went and created a new karate club,",
    "start": "131000",
    "end": "135320"
  },
  {
    "text": "and the squares, uh,",
    "start": "135320",
    "end": "136910"
  },
  {
    "text": "remained in the old karate club.",
    "start": "136910",
    "end": "139235"
  },
  {
    "text": "And what is striking is that basically this network kind of split in the middle, right?",
    "start": "139235",
    "end": "145460"
  },
  {
    "text": "Like the circles went on one end and the squares went on the other.",
    "start": "145460",
    "end": "149670"
  },
  {
    "text": "So it's not that, you know,",
    "start": "149670",
    "end": "150785"
  },
  {
    "text": "a random set of nodes will decide to form a new club.",
    "start": "150785",
    "end": "153560"
  },
  {
    "text": "But it's kind of one part of the network separated out- itself out, right?",
    "start": "153560",
    "end": "158480"
  },
  {
    "text": "And actually, the- the- the way you can automatically find this,",
    "start": "158480",
    "end": "162950"
  },
  {
    "text": "uh, this split is to simply say,",
    "start": "162950",
    "end": "165485"
  },
  {
    "text": "how do I split the nodes of this network into two sets",
    "start": "165485",
    "end": "168425"
  },
  {
    "text": "so that the number of edges that crosses between the two sets,",
    "start": "168425",
    "end": "171890"
  },
  {
    "text": "meaning goes from one set of nodes to the other, um, is minimized.",
    "start": "171890",
    "end": "175880"
  },
  {
    "text": "All right, So basically this was one of",
    "start": "175880",
    "end": "178130"
  },
  {
    "text": "the first examples that basically communities happen based on",
    "start": "178130",
    "end": "183320"
  },
  {
    "text": "the underlying network structure and that you can predict which humans are going to join",
    "start": "183320",
    "end": "188300"
  },
  {
    "text": "one team and which humans are going to join",
    "start": "188300",
    "end": "190460"
  },
  {
    "text": "the other team based on the social relationships between them.",
    "start": "190460",
    "end": "194005"
  },
  {
    "text": "Perhaps that is kind of obvious and well known to us today.",
    "start": "194005",
    "end": "197600"
  },
  {
    "text": "But, uh, back in '60s,",
    "start": "197600",
    "end": "199565"
  },
  {
    "text": "this was, uh, totally miraculous, right?",
    "start": "199565",
    "end": "201530"
  },
  {
    "text": "It wasn't at all expected that it's actually social connections that",
    "start": "201530",
    "end": "205730"
  },
  {
    "text": "make- that play such a big role in how groups and communities form.",
    "start": "205730",
    "end": "212200"
  },
  {
    "start": "212000",
    "end": "282000"
  },
  {
    "text": "Another example of groups and communities is in a very different part of the world.",
    "start": "212200",
    "end": "217700"
  },
  {
    "text": "So it is in, uh,",
    "start": "217700",
    "end": "219110"
  },
  {
    "text": "online advertising where basically if you think you are a Google or a Facebook, um,",
    "start": "219110",
    "end": "223880"
  },
  {
    "text": "you have advertisers who say,",
    "start": "223880",
    "end": "226085"
  },
  {
    "text": "who- where do they want their ads to be shown.",
    "start": "226085",
    "end": "229000"
  },
  {
    "text": "So you can create this bipartite graph where you put, uh,",
    "start": "229000",
    "end": "232070"
  },
  {
    "text": "advertisers at the bottom and you put,",
    "start": "232070",
    "end": "234710"
  },
  {
    "text": "uh, queries or keywords,",
    "start": "234710",
    "end": "236405"
  },
  {
    "text": "uh, on the other side.",
    "start": "236405",
    "end": "237635"
  },
  {
    "text": "And then here I'm kind of showing the adjacency matrix where a dot means that",
    "start": "237635",
    "end": "241730"
  },
  {
    "text": "a given advertiser wants its ads to be shown when a given query,",
    "start": "241730",
    "end": "247055"
  },
  {
    "text": "a given keyword, a given person with a given interest, uh, shows up.",
    "start": "247055",
    "end": "252019"
  },
  {
    "text": "And what you'll find out is that there are",
    "start": "252020",
    "end": "253190"
  },
  {
    "text": "these well-defined dense clusters where, you know,",
    "start": "253190",
    "end": "256489"
  },
  {
    "text": "groups of advertisers, um,",
    "start": "256490",
    "end": "259005"
  },
  {
    "text": "bid or advertise on common keywords or on common, uh, interests.",
    "start": "259005",
    "end": "263330"
  },
  {
    "text": "And you know, here is one example of, uh, you know,",
    "start": "263330",
    "end": "266120"
  },
  {
    "text": "the gambling set of advertisers who are gambling on people,",
    "start": "266120",
    "end": "270440"
  },
  {
    "text": "who are advertising on people interested in gambling queries.",
    "start": "270440",
    "end": "275025"
  },
  {
    "text": "So it allows you to identify",
    "start": "275025",
    "end": "277400"
  },
  {
    "text": "micro markets, subgroups in this type of online advertising space.",
    "start": "277400",
    "end": "282415"
  },
  {
    "start": "282000",
    "end": "365000"
  },
  {
    "text": "Another example is, you know,",
    "start": "282415",
    "end": "284510"
  },
  {
    "text": "imagine you take a network of, uh,",
    "start": "284510",
    "end": "286700"
  },
  {
    "text": "NCAA University football teams",
    "start": "286700",
    "end": "289550"
  },
  {
    "text": "and you connect two teams if they play games with each other.",
    "start": "289550",
    "end": "292909"
  },
  {
    "text": "Uh, and here's a visualization of the network.",
    "start": "292910",
    "end": "295400"
  },
  {
    "text": "And the question is, is that any structure in how teams, uh, play each other?",
    "start": "295400",
    "end": "300500"
  },
  {
    "text": "And if you run these community detection methods,",
    "start": "300500",
    "end": "303500"
  },
  {
    "text": "you would actually identify the- the groups.",
    "start": "303500",
    "end": "306205"
  },
  {
    "text": "Here they are visualized, right?",
    "start": "306205",
    "end": "307939"
  },
  {
    "text": "So notice this network is the same as that network, right?",
    "start": "307940",
    "end": "311290"
  },
  {
    "text": "So this is just visualize the network.",
    "start": "311290",
    "end": "313430"
  },
  {
    "text": "This is what the visualization comes up with.",
    "start": "313430",
    "end": "315229"
  },
  {
    "text": "It doesn't seem that is any real structure here, right?",
    "start": "315230",
    "end": "318290"
  },
  {
    "text": "Maybe you say, oh, there seems to be something here and maybe there is a cluster here.",
    "start": "318290",
    "end": "321710"
  },
  {
    "text": "I don't know, maybe there's something here.",
    "start": "321710",
    "end": "323465"
  },
  {
    "text": "It's very hard to say.",
    "start": "323465",
    "end": "324830"
  },
  {
    "text": "But after you apply a community detection method,",
    "start": "324830",
    "end": "327514"
  },
  {
    "text": "it will actually go and identify,",
    "start": "327515",
    "end": "329570"
  },
  {
    "text": "um, the clusters and here they are.",
    "start": "329570",
    "end": "332015"
  },
  {
    "text": "And what is interesting and- right,",
    "start": "332015",
    "end": "334070"
  },
  {
    "text": "is that they actually exactly correspond to these conferences in which, er,",
    "start": "334070",
    "end": "339225"
  },
  {
    "text": "teams are organized where teams play each other",
    "start": "339225",
    "end": "341870"
  },
  {
    "text": "inside the conference more than with other conferences.",
    "start": "341870",
    "end": "345615"
  },
  {
    "text": "And we even have a couple of themes that are-",
    "start": "345615",
    "end": "348110"
  },
  {
    "text": "that are not part of any community because they",
    "start": "348110",
    "end": "350659"
  },
  {
    "text": "are part of this Independence conference",
    "start": "350660",
    "end": "353480"
  },
  {
    "text": "and they just kind of play the two different teams.",
    "start": "353480",
    "end": "356390"
  },
  {
    "text": "So this is how, for example,",
    "start": "356390",
    "end": "357680"
  },
  {
    "text": "we can extract structure of them out of the network,",
    "start": "357680",
    "end": "360620"
  },
  {
    "text": "even though initially the structure is not obvious.",
    "start": "360620",
    "end": "364699"
  },
  {
    "text": "To give you another example now is to say,",
    "start": "364700",
    "end": "368465"
  },
  {
    "start": "365000",
    "end": "495000"
  },
  {
    "text": "how do we formalize this, right?",
    "start": "368465",
    "end": "370580"
  },
  {
    "text": "How do we identify the sets of tightly connected, uh, nodes?",
    "start": "370580",
    "end": "374650"
  },
  {
    "text": "And the way we are going to do this is that we are going to specify,",
    "start": "374650",
    "end": "379040"
  },
  {
    "text": "um, a metric that we call modularity.",
    "start": "379040",
    "end": "382135"
  },
  {
    "text": "And we are- and this metric will measure how well",
    "start": "382135",
    "end": "385060"
  },
  {
    "text": "a network is partitioned into communities.",
    "start": "385060",
    "end": "388490"
  },
  {
    "text": "So given a partitioning of the network into groups of nodes,",
    "start": "388490",
    "end": "392724"
  },
  {
    "text": "let's assume that right now somebody gave- gives us this partitioning.",
    "start": "392725",
    "end": "396190"
  },
  {
    "text": "We are going to compute this modularity score q,",
    "start": "396190",
    "end": "399785"
  },
  {
    "text": "and if we have the modularity, uh, score defined,",
    "start": "399785",
    "end": "404380"
  },
  {
    "text": "then what we are going to do later is we are going to say,",
    "start": "404380",
    "end": "407470"
  },
  {
    "text": "can I search over,",
    "start": "407470",
    "end": "409180"
  },
  {
    "text": "can I find a very good, uh,",
    "start": "409180",
    "end": "411425"
  },
  {
    "text": "set of partitioning such that my modularity score will be as high as possible.",
    "start": "411425",
    "end": "416395"
  },
  {
    "text": "So that's what we are going to do later.",
    "start": "416395",
    "end": "418240"
  },
  {
    "text": "But now, let's assume that, uh,",
    "start": "418240",
    "end": "421810"
  },
  {
    "text": "groups are given to us, um,",
    "start": "421810",
    "end": "424014"
  },
  {
    "text": "and we want to estimate how good of a clustering are we having.",
    "start": "424015",
    "end": "428045"
  },
  {
    "text": "And the way the modularity operates is the following, we say,",
    "start": "428045",
    "end": "431150"
  },
  {
    "text": "modularity Q will be proportional to the summation",
    "start": "431150",
    "end": "434585"
  },
  {
    "text": "over all the groups where for every group,",
    "start": "434585",
    "end": "438050"
  },
  {
    "text": "I want to ask how many edges are there between the members of the group?",
    "start": "438050",
    "end": "442740"
  },
  {
    "text": "How many edges are within the members of the group S?",
    "start": "442740",
    "end": "446425"
  },
  {
    "text": "Minus how many edges would I expect between this,",
    "start": "446425",
    "end": "451069"
  },
  {
    "text": "h, group S, um,",
    "start": "451070",
    "end": "453300"
  },
  {
    "text": "in some null, uh,",
    "start": "453300",
    "end": "454349"
  },
  {
    "text": "random null model, right?",
    "start": "454350",
    "end": "455820"
  },
  {
    "text": "And if the group S has much more edges",
    "start": "455820",
    "end": "457985"
  },
  {
    "text": "between its members than what is expected at random,",
    "start": "457985",
    "end": "460789"
  },
  {
    "text": "then we have found a strong significant cluster.",
    "start": "460790",
    "end": "464065"
  },
  {
    "text": "And now you know what is the total modularity of",
    "start": "464065",
    "end": "466460"
  },
  {
    "text": "the network is the sum over these modularity scores,",
    "start": "466460",
    "end": "469970"
  },
  {
    "text": "uh, of individual clusters.",
    "start": "469970",
    "end": "472185"
  },
  {
    "text": "Right? So because we have these expected number of edges within a group s,",
    "start": "472185",
    "end": "477250"
  },
  {
    "text": "we need a null- we need a null model, right?",
    "start": "477250",
    "end": "479560"
  },
  {
    "text": "We need a random graph null model.",
    "start": "479560",
    "end": "481990"
  },
  {
    "text": "So now if we go back to our subgraph mining,",
    "start": "481990",
    "end": "484690"
  },
  {
    "text": "we talked about Erdos-Renyi as an example of a round- of a- of a model.",
    "start": "484690",
    "end": "490360"
  },
  {
    "text": "Um, and we also talked about configuration model as an example of a null model.",
    "start": "490360",
    "end": "495115"
  },
  {
    "start": "495000",
    "end": "701000"
  },
  {
    "text": "So let me now tell you, uh,",
    "start": "495115",
    "end": "497169"
  },
  {
    "text": "and remind you about the configuration model,",
    "start": "497170",
    "end": "499525"
  },
  {
    "text": "right, which we already talked about,",
    "start": "499525",
    "end": "501430"
  },
  {
    "text": "I think two lectures ago when we talked about, uh, subgraph mining.",
    "start": "501430",
    "end": "505164"
  },
  {
    "text": "The idea is the following;",
    "start": "505165",
    "end": "507130"
  },
  {
    "text": "given a real graph G on N nodes and M edges,",
    "start": "507130",
    "end": "510295"
  },
  {
    "text": "we want to create,",
    "start": "510295",
    "end": "511809"
  },
  {
    "text": "uh, a random network G prime.",
    "start": "511809",
    "end": "513820"
  },
  {
    "text": "And we will refer to this random network as a rewired network because essentially it",
    "start": "513820",
    "end": "518860"
  },
  {
    "text": "will mean that we every node keeps its degree number of connections constant,",
    "start": "518860",
    "end": "524410"
  },
  {
    "text": "but connects to random nodes rather to- than",
    "start": "524410",
    "end": "527529"
  },
  {
    "text": "to the ones that they are really in- connected to in the network.",
    "start": "527530",
    "end": "530845"
  },
  {
    "text": "So this means that our network,",
    "start": "530845",
    "end": "532629"
  },
  {
    "text": "we'll have the same degree distribution,",
    "start": "532630",
    "end": "534280"
  },
  {
    "text": "the same degree sequence,",
    "start": "534280",
    "end": "535764"
  },
  {
    "text": "but it will have random connections.",
    "start": "535764",
    "end": "538480"
  },
  {
    "text": "Um, and we are going to consider graph g as a multigraph, right?",
    "start": "538480",
    "end": "542410"
  },
  {
    "text": "We'll allow multiple edges to exist,",
    "start": "542410",
    "end": "544540"
  },
  {
    "text": "uh, between the nodes.",
    "start": "544540",
    "end": "545889"
  },
  {
    "text": "So now you can say,",
    "start": "545890",
    "end": "547405"
  },
  {
    "text": "I have these nodes,",
    "start": "547405",
    "end": "548560"
  },
  {
    "text": "they have these spokes.",
    "start": "548560",
    "end": "549790"
  },
  {
    "text": "These are kind of these rough edges.",
    "start": "549790",
    "end": "551394"
  },
  {
    "text": "And now I wont to randomly connect,",
    "start": "551395",
    "end": "553660"
  },
  {
    "text": "uh, these, uh, endpoints.",
    "start": "553660",
    "end": "556290"
  },
  {
    "text": "And of course, maybe between a pair of nodes,",
    "start": "556290",
    "end": "558495"
  },
  {
    "text": "I will allow multiple edges because perhaps both of these two end points,",
    "start": "558495",
    "end": "562265"
  },
  {
    "text": "randomly, you know, by chance decide to",
    "start": "562265",
    "end": "564400"
  },
  {
    "text": "connect to these two end points so it'll be kind of a double-edge.",
    "start": "564400",
    "end": "567235"
  },
  {
    "text": "But for the purpose of this, uh,",
    "start": "567235",
    "end": "569260"
  },
  {
    "text": "discussion right now, that's completely fine and okay.",
    "start": "569260",
    "end": "572485"
  },
  {
    "text": "So then, you can ask yourself,",
    "start": "572485",
    "end": "574990"
  },
  {
    "text": "what is the expected number of edges between a pair of nodes i and j,",
    "start": "574990",
    "end": "580495"
  },
  {
    "text": "where node i has degree, uh,",
    "start": "580495",
    "end": "582370"
  },
  {
    "text": "k_i, and node j has deg- degree k_j.",
    "start": "582370",
    "end": "586165"
  },
  {
    "text": "Uh, and the way to derive this equa- er,",
    "start": "586165",
    "end": "588579"
  },
  {
    "text": "expression is the following.",
    "start": "588580",
    "end": "589945"
  },
  {
    "text": "You say, um, what is the total number of,",
    "start": "589945",
    "end": "593515"
  },
  {
    "text": "uh, edge endpoints?",
    "start": "593515",
    "end": "595165"
  },
  {
    "text": "Basically the spokes.",
    "start": "595165",
    "end": "596545"
  },
  {
    "text": "Number of spokes is 2 times n, right?",
    "start": "596545",
    "end": "598810"
  },
  {
    "text": "Every edge has two end points.",
    "start": "598810",
    "end": "600745"
  },
  {
    "text": "Every edge gets cut in half.",
    "start": "600745",
    "end": "602320"
  },
  {
    "text": "If I have m edges,",
    "start": "602320",
    "end": "603700"
  },
  {
    "text": "then I have 2 times m, uh, end points.",
    "start": "603700",
    "end": "606325"
  },
  {
    "text": "This is why we have this guy- this thing here.",
    "start": "606325",
    "end": "609190"
  },
  {
    "text": "Then what is K sub j, right?",
    "start": "609190",
    "end": "612520"
  },
  {
    "text": "K sub j is the degree of, uh, node j.",
    "start": "612520",
    "end": "616150"
  },
  {
    "text": "It's the number of spokes it has.",
    "start": "616150",
    "end": "618220"
  },
  {
    "text": "So now I say, um,",
    "start": "618220",
    "end": "620230"
  },
  {
    "text": "for every node- for every spoke of node i,",
    "start": "620230",
    "end": "622870"
  },
  {
    "text": "I randomly pick another spoke.",
    "start": "622870",
    "end": "625225"
  },
  {
    "text": "So node, um, er, k_j,",
    "start": "625225",
    "end": "628675"
  },
  {
    "text": "accounts for k_j divided by 2m fraction of all available spokes.",
    "start": "628675",
    "end": "635050"
  },
  {
    "text": "Right? Because this guy could also decide to link to itself or whatever else, right?",
    "start": "635050",
    "end": "639160"
  },
  {
    "text": "So now basically I say out of these k_i different tries, different random, um,",
    "start": "639160",
    "end": "645639"
  },
  {
    "text": "end points selections, uh, for, er,",
    "start": "645640",
    "end": "648190"
  },
  {
    "text": "each one of them has the probability k_j divided by 2m to connect to node j.",
    "start": "648190",
    "end": "654580"
  },
  {
    "text": "So now, um, if I multiply these together,",
    "start": "654580",
    "end": "657415"
  },
  {
    "text": "I basically say that the expected number of edges between I and",
    "start": "657415",
    "end": "661300"
  },
  {
    "text": "j is simply the degree of i times degree j divided by 2m.",
    "start": "661300",
    "end": "666040"
  },
  {
    "text": "Right? So basically what this means is that the probability or the expected number",
    "start": "666040",
    "end": "670300"
  },
  {
    "text": "of edges is simply equal to the product of the degrees,",
    "start": "670300",
    "end": "674290"
  },
  {
    "text": "uh, of the nodes, uh, uh,",
    "start": "674290",
    "end": "675730"
  },
  {
    "text": "um, that we are interested in.",
    "start": "675730",
    "end": "678579"
  },
  {
    "text": "All right? So, um,",
    "start": "678580",
    "end": "680365"
  },
  {
    "text": "we have this very elegant relationship, uh,",
    "start": "680365",
    "end": "683200"
  },
  {
    "text": "about the expected number of edges between a pair of",
    "start": "683200",
    "end": "685720"
  },
  {
    "text": "nodes under this random configuration model,",
    "start": "685720",
    "end": "688779"
  },
  {
    "text": "where nodes keep their degree,",
    "start": "688780",
    "end": "690670"
  },
  {
    "text": "but the edges are assigned, uh, randomly,",
    "start": "690670",
    "end": "693519"
  },
  {
    "text": "which basically means these endpoints get randomly connected uh,",
    "start": "693520",
    "end": "696706"
  },
  {
    "text": "with each other and we're leaving this kind of,",
    "start": "696706",
    "end": "699085"
  },
  {
    "text": "uh, multi graph, uh, world.",
    "start": "699085",
    "end": "701815"
  },
  {
    "text": "Right? So now that we have this, uh,",
    "start": "701815",
    "end": "704440"
  },
  {
    "text": "expected number of edges between, uh,",
    "start": "704440",
    "end": "706330"
  },
  {
    "text": "i and j, then I can say, you know,",
    "start": "706330",
    "end": "708535"
  },
  {
    "text": "just like as a- as a- as a- as a side,",
    "start": "708535",
    "end": "711279"
  },
  {
    "text": "uh, calculation, I can say, okay,",
    "start": "711280",
    "end": "712660"
  },
  {
    "text": "so what is the total expected number of edges in this,",
    "start": "712660",
    "end": "715930"
  },
  {
    "text": "uh, graph g prime?",
    "start": "715930",
    "end": "717850"
  },
  {
    "text": "So basically I'm saying,",
    "start": "717850",
    "end": "719185"
  },
  {
    "text": "let's sum over, um, all the nodes i,",
    "start": "719185",
    "end": "722560"
  },
  {
    "text": "all the nodes j. Um,",
    "start": "722560",
    "end": "724795"
  },
  {
    "text": "so all pairs of nodes and ask what is the expected number of edges between them?",
    "start": "724795",
    "end": "729245"
  },
  {
    "text": "And, of course, I have to multiply this by one-half because when I go over all pairs,",
    "start": "729245",
    "end": "733980"
  },
  {
    "text": "it means I will count every edge twice because i, j and j,i will be counted twice.",
    "start": "733980",
    "end": "740584"
  },
  {
    "text": "So if I work out these summations explained here, basically,",
    "start": "740585",
    "end": "745014"
  },
  {
    "text": "I- I get it's a summation of the,",
    "start": "745014",
    "end": "747610"
  },
  {
    "text": "uh, uh, the degrees, uh,",
    "start": "747610",
    "end": "749500"
  },
  {
    "text": "times another summation over the degrees, uh,",
    "start": "749500",
    "end": "751960"
  },
  {
    "text": "the sum of the degrees is two times n. The sum over",
    "start": "751960",
    "end": "755170"
  },
  {
    "text": "the degrees is two times n. And here I have divide by,",
    "start": "755170",
    "end": "758380"
  },
  {
    "text": "um, 1- 1 over 2 times n that comes from here times one-half.",
    "start": "758380",
    "end": "763045"
  },
  {
    "text": "So I get, um,",
    "start": "763045",
    "end": "764485"
  },
  {
    "text": "2 times m times 2 times m divided by 4 times m. Uh, you know, uh,",
    "start": "764485",
    "end": "769404"
  },
  {
    "text": "4s cancel out, one m cancel out and I'm left with, uh,",
    "start": "769405",
    "end": "773200"
  },
  {
    "text": "m. So this means that this mo- this un- this model,",
    "start": "773200",
    "end": "776860"
  },
  {
    "text": "both the degree distribution and the total number of edges, uh, will be preserved.",
    "start": "776860",
    "end": "781540"
  },
  {
    "text": "And the expected number of edges between a pair of nodes is de- determined, uh,",
    "start": "781540",
    "end": "785620"
  },
  {
    "text": "by this formula, k_i times k_j divided by 2m.",
    "start": "785620",
    "end": "790300"
  },
  {
    "start": "790000",
    "end": "948000"
  },
  {
    "text": "So now let's go back to the modularity.",
    "start": "790300",
    "end": "793870"
  },
  {
    "text": "So in modularity we said,",
    "start": "793870",
    "end": "795595"
  },
  {
    "text": "we have a number of edges between the group s, uh,",
    "start": "795595",
    "end": "798504"
  },
  {
    "text": "minus the expected number of edges within, uh,",
    "start": "798505",
    "end": "802105"
  },
  {
    "text": "the group s. So notice that we are only interested in the edges inside the group,",
    "start": "802105",
    "end": "807535"
  },
  {
    "text": "and we are not explicitly minimizing for the number of edges that cross between groups.",
    "start": "807535",
    "end": "813204"
  },
  {
    "text": "This is kind of implicitly accounted for, uh, in modularity.",
    "start": "813205",
    "end": "816715"
  },
  {
    "text": "So how do we write this out now,",
    "start": "816715",
    "end": "818860"
  },
  {
    "text": "given what we learned about configuration model as our null model?",
    "start": "818860",
    "end": "822985"
  },
  {
    "text": "So we are going to write the following.",
    "start": "822985",
    "end": "825070"
  },
  {
    "text": "We are going to say modularity, uh,",
    "start": "825070",
    "end": "826870"
  },
  {
    "text": "of our group, uh,",
    "start": "826870",
    "end": "828520"
  },
  {
    "text": "S in, uh, graph, uh,",
    "start": "828520",
    "end": "830500"
  },
  {
    "text": "G is simply a sum over the- uh,",
    "start": "830500",
    "end": "835150"
  },
  {
    "text": "all the pairs of nodes,",
    "start": "835150",
    "end": "837325"
  },
  {
    "text": "uh, in the group.",
    "start": "837325",
    "end": "838750"
  },
  {
    "text": "This is, uh, where the,",
    "start": "838750",
    "end": "840010"
  },
  {
    "text": "er, that pair of nodes is connected.",
    "start": "840010",
    "end": "842110"
  },
  {
    "text": "This simply counts number of edges between the groups.",
    "start": "842110",
    "end": "845425"
  },
  {
    "text": "And the second theorem says, ah-ha,",
    "start": "845425",
    "end": "847839"
  },
  {
    "text": "for every pair i, j,",
    "start": "847840",
    "end": "849835"
  },
  {
    "text": "I'm going to multiply their,",
    "start": "849835",
    "end": "851275"
  },
  {
    "text": "uh, their degrees, divide by 2m.",
    "start": "851275",
    "end": "853330"
  },
  {
    "text": "So this is the expected number of edges between a pair of nodes.",
    "start": "853330",
    "end": "856450"
  },
  {
    "text": "Right? So this is basically now saying,",
    "start": "856450",
    "end": "858190"
  },
  {
    "text": "what is the real number of nodes minus",
    "start": "858190",
    "end": "860620"
  },
  {
    "text": "the expected number of nodes over all the pairs of nodes in a given group?",
    "start": "860620",
    "end": "864895"
  },
  {
    "text": "And now I sum this up over all the groups, little s, uh,",
    "start": "864895",
    "end": "869515"
  },
  {
    "text": "from the partitioning of nodes into grou- into communities",
    "start": "869515",
    "end": "873280"
  },
  {
    "text": "into groups, capital S. Um, and this, uh,",
    "start": "873280",
    "end": "877525"
  },
  {
    "text": "factor 1 over 2m is, uh,",
    "start": "877525",
    "end": "880285"
  },
  {
    "text": "is a normalizing constant so that",
    "start": "880285",
    "end": "883254"
  },
  {
    "text": "our modularity metric Q will have range from minus 1 to 1.",
    "start": "883255",
    "end": "887470"
  },
  {
    "text": "Right? If all the edges are inside the group,",
    "start": "887470",
    "end": "891279"
  },
  {
    "text": "um, uh, uh, uh, uh, group s,",
    "start": "891280",
    "end": "895030"
  },
  {
    "text": "and, uh, uh, somehow we would expect very little edges,",
    "start": "895030",
    "end": "899110"
  },
  {
    "text": "uh, inside that group,",
    "start": "899110",
    "end": "900490"
  },
  {
    "text": "then modularity will be- will be very close to 1.",
    "start": "900490",
    "end": "903565"
  },
  {
    "text": "And, uh, if we have",
    "start": "903565",
    "end": "905140"
  },
  {
    "text": "kind of an anti-community where we ex- where we have no edges between the- uh,",
    "start": "905140",
    "end": "910150"
  },
  {
    "text": "uh, between the group.",
    "start": "910150",
    "end": "911725"
  },
  {
    "text": "But based on the degrees of those nodes,",
    "start": "911725",
    "end": "913660"
  },
  {
    "text": "we would expect a lot of edges,",
    "start": "913660",
    "end": "915504"
  },
  {
    "text": "then the value will be negative, will be minus 1.",
    "start": "915505",
    "end": "918505"
  },
  {
    "text": "So as I said, the modularity can take,",
    "start": "918505",
    "end": "921805"
  },
  {
    "text": "a value from minus 1 to 1.",
    "start": "921805",
    "end": "923815"
  },
  {
    "text": "It is positive if the number of edges within the group",
    "start": "923815",
    "end": "926635"
  },
  {
    "text": "exceeds the numb- the expected number of edges.",
    "start": "926635",
    "end": "930340"
  },
  {
    "text": "And in reality, in practice, uh,",
    "start": "930340",
    "end": "933580"
  },
  {
    "text": "if the modularity Q is greater than let's say, 0.3, 0.7,",
    "start": "933580",
    "end": "937915"
  },
  {
    "text": "this means that the graph has a significant community structure that we have identified,",
    "start": "937915",
    "end": "942970"
  },
  {
    "text": "uh, really strong, uh, clusters,",
    "start": "942970",
    "end": "945115"
  },
  {
    "text": "if our modularity is in this range.",
    "start": "945115",
    "end": "947830"
  },
  {
    "text": "So let me recap.",
    "start": "947830",
    "end": "950110"
  },
  {
    "start": "948000",
    "end": "1060000"
  },
  {
    "text": "Uh, modularity Q is defined over an undirected graph and our partitioning of nodes s. Um,",
    "start": "950110",
    "end": "958660"
  },
  {
    "text": "and it is intuitively defined as a summation over all the groups,",
    "start": "958660",
    "end": "962855"
  },
  {
    "text": "number of nodes between the members of the group,",
    "start": "962855",
    "end": "966139"
  },
  {
    "text": "minus number of, um,",
    "start": "966140",
    "end": "968555"
  },
  {
    "text": "expected number of, uh,",
    "start": "968555",
    "end": "970325"
  },
  {
    "text": "edges uh, between the members of the group.",
    "start": "970325",
    "end": "972560"
  },
  {
    "text": "Uh, given- using the configuration model as a null model,",
    "start": "972560",
    "end": "977310"
  },
  {
    "text": "we then instantiate modularity using the following formula,",
    "start": "977310",
    "end": "981500"
  },
  {
    "text": "where we basically say for every group s,",
    "start": "981500",
    "end": "984035"
  },
  {
    "text": "take pairs of- all pairs of nodes from the group.",
    "start": "984035",
    "end": "987245"
  },
  {
    "text": "Ask whether a given pair is connected.",
    "start": "987245",
    "end": "990505"
  },
  {
    "text": "So this summation, we now count,",
    "start": "990505",
    "end": "993154"
  },
  {
    "text": "uh, the number of edges uh,",
    "start": "993154",
    "end": "995020"
  },
  {
    "text": "between the members of the group, minus, uh,",
    "start": "995020",
    "end": "998635"
  },
  {
    "text": "degree of one node, the degree of the other node,",
    "start": "998635",
    "end": "1001015"
  },
  {
    "text": "divided by twice the number of edges in the network.",
    "start": "1001015",
    "end": "1003260"
  },
  {
    "text": "So this is the expected number of edges between i and j,",
    "start": "1003260",
    "end": "1006950"
  },
  {
    "text": "um, uh, under the configuration models.",
    "start": "1006950",
    "end": "1009330"
  },
  {
    "text": "So these difference tells us, um, er, er,",
    "start": "1009330",
    "end": "1012795"
  },
  {
    "text": "how- how many more- what is the difference between",
    "start": "1012795",
    "end": "1015579"
  },
  {
    "text": "the true number of edges and expected number of edges,",
    "start": "1015580",
    "end": "1018420"
  },
  {
    "text": "uh, inside a given group.",
    "start": "1018420",
    "end": "1019709"
  },
  {
    "text": "And now we sum this up over all different groups and we normalize it.",
    "start": "1019710",
    "end": "1023745"
  },
  {
    "text": "So this is how,",
    "start": "1023745",
    "end": "1024829"
  },
  {
    "text": "uh, we can, uh, write it.",
    "start": "1024830",
    "end": "1026839"
  },
  {
    "text": "Now that we have the modularity score,",
    "start": "1026840",
    "end": "1028959"
  },
  {
    "text": "we basically have an objective function.",
    "start": "1028960",
    "end": "1031120"
  },
  {
    "text": "So now the question is,",
    "start": "1031120",
    "end": "1033250"
  },
  {
    "text": "can I identify clusters' communities by maximizing this modularity score,",
    "start": "1033250",
    "end": "1039415"
  },
  {
    "text": "by basically maximizing, uh, this metric?",
    "start": "1039415",
    "end": "1042930"
  },
  {
    "text": "So the question will be, uh,",
    "start": "1042930",
    "end": "1044610"
  },
  {
    "text": "that we're going to address next is, if I, uh,",
    "start": "1044610",
    "end": "1047324"
  },
  {
    "text": "search over these groupings,",
    "start": "1047325",
    "end": "1049875"
  },
  {
    "text": "can I- how do I find, uh, uh,",
    "start": "1049875",
    "end": "1052170"
  },
  {
    "text": "uh, sets that have high modularity score?",
    "start": "1052170",
    "end": "1056150"
  }
]