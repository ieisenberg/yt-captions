[
  {
    "start": "0",
    "end": "5030"
  },
  {
    "text": "In the last part\nof this lecture,",
    "start": "5030",
    "end": "7220"
  },
  {
    "text": "I'm actually going to talk about\nan application of deep graph",
    "start": "7220",
    "end": "10910"
  },
  {
    "text": "generative models to\nmolecule generation, right?",
    "start": "10910",
    "end": "13960"
  },
  {
    "text": "So basically, if you want to\ngenerate drug-like molecules,",
    "start": "13960",
    "end": "17660"
  },
  {
    "text": "you can use graph\ngenerative models.",
    "start": "17660",
    "end": "19880"
  },
  {
    "text": "So let me tell you about that.",
    "start": "19880",
    "end": "21859"
  },
  {
    "start": "21860",
    "end": "25577"
  },
  {
    "text": "So what we are going\nto do is the following.",
    "start": "25577",
    "end": "27410"
  },
  {
    "text": "The question is,\ncan we learn a model",
    "start": "27410",
    "end": "29720"
  },
  {
    "text": "that can generate valid and\nrealistic molecules that",
    "start": "29720",
    "end": "33200"
  },
  {
    "text": "optimize some property?",
    "start": "33200",
    "end": "35560"
  },
  {
    "text": "Right.",
    "start": "35560",
    "end": "36060"
  },
  {
    "text": "So the way you\ncan think of it is",
    "start": "36060",
    "end": "37435"
  },
  {
    "text": "that we want to have a model.",
    "start": "37435",
    "end": "40290"
  },
  {
    "text": "The model is going to\noutput a given molecule.",
    "start": "40290",
    "end": "42650"
  },
  {
    "text": "This molecule has to be valid--",
    "start": "42650",
    "end": "44570"
  },
  {
    "text": "basically, it has to obey\nthe rules of chemistry.",
    "start": "44570",
    "end": "47960"
  },
  {
    "text": "It also has to be\nrealistic, right?",
    "start": "47960",
    "end": "50140"
  },
  {
    "text": "You cannot generate some\nFrankenstein type molecule.",
    "start": "50140",
    "end": "52612"
  },
  {
    "text": "It has to be realistic.",
    "start": "52612",
    "end": "53570"
  },
  {
    "text": "It has to look like a drug.",
    "start": "53570",
    "end": "55440"
  },
  {
    "text": "And we want it to\noptimize a given property.",
    "start": "55440",
    "end": "59059"
  },
  {
    "text": "For example, we want it\nto optimize drug likeness.",
    "start": "59060",
    "end": "62600"
  },
  {
    "text": "We want to optimize\nits solubility.",
    "start": "62600",
    "end": "65659"
  },
  {
    "text": "And the paper I'm going to\ntalk about, or the method",
    "start": "65660",
    "end": "70670"
  },
  {
    "text": "is called Graph\nConvolutional Policy",
    "start": "70670",
    "end": "72710"
  },
  {
    "text": "Network for Goal-directed\nMolecular Graph Generation.",
    "start": "72710",
    "end": "76549"
  },
  {
    "text": "And it's linked here.",
    "start": "76550",
    "end": "77480"
  },
  {
    "text": "And you can read it if\nyou want more details.",
    "start": "77480",
    "end": "80520"
  },
  {
    "text": "So, here is a high level\noverview of this paper,",
    "start": "80520",
    "end": "83689"
  },
  {
    "text": "and of this novel problem of\noptimal molecule generation,",
    "start": "83690",
    "end": "87365"
  },
  {
    "text": "right?",
    "start": "87365",
    "end": "88159"
  },
  {
    "text": "The goal here is to generate\ngraphs that optimize a given",
    "start": "88160",
    "end": "92120"
  },
  {
    "text": "objective, like drug-likeness,\nthat obey underlying rules--",
    "start": "92120",
    "end": "96650"
  },
  {
    "text": "meaning that the\ngraphs are valid,",
    "start": "96650",
    "end": "98180"
  },
  {
    "text": "like chemical validity\nrules, like the bonds",
    "start": "98180",
    "end": "103070"
  },
  {
    "text": "and things like that--",
    "start": "103070",
    "end": "104000"
  },
  {
    "text": "and are learned from\nexamples, meaning",
    "start": "104000",
    "end": "106350"
  },
  {
    "text": "they look realistic, right?",
    "start": "106350",
    "end": "107869"
  },
  {
    "text": "They imitate molecular graphs\nwhich we use for training,",
    "start": "107870",
    "end": "111695"
  },
  {
    "text": "right?",
    "start": "111695",
    "end": "113090"
  },
  {
    "text": "And we just talked\na bit about how",
    "start": "113090",
    "end": "116659"
  },
  {
    "text": "do we imitate a given\ndistribution of graphs.",
    "start": "116660",
    "end": "119935"
  },
  {
    "text": "But here the difference is,\nwe don't want to only imitate,",
    "start": "119935",
    "end": "123299"
  },
  {
    "text": "we want to generate\ngraphs that are valid,",
    "start": "123300",
    "end": "125780"
  },
  {
    "text": "and we want to\ngenerate graphs that",
    "start": "125780",
    "end": "127460"
  },
  {
    "text": "actually optimize a\ngiven criteria, a given",
    "start": "127460",
    "end": "130850"
  },
  {
    "text": "black box, right?",
    "start": "130850",
    "end": "133760"
  },
  {
    "text": "And here the important point\nis that the criteria is really",
    "start": "133760",
    "end": "136670"
  },
  {
    "text": "a black box, right?",
    "start": "136670",
    "end": "137750"
  },
  {
    "text": "It's this black box where\nthe graph generation",
    "start": "137750",
    "end": "140750"
  },
  {
    "text": "will get some feedback, right?",
    "start": "140750",
    "end": "142220"
  },
  {
    "text": "The objectives\nlike drug-likeness",
    "start": "142220",
    "end": "145250"
  },
  {
    "text": "are governed by physical\nlaws, which to us will",
    "start": "145250",
    "end": "148910"
  },
  {
    "text": "be assumed they are unknown.",
    "start": "148910",
    "end": "150380"
  },
  {
    "text": "What I mean by that is we don't\nneed them to be written down.",
    "start": "150380",
    "end": "153620"
  },
  {
    "text": "All we have to do is\nto have a black box.",
    "start": "153620",
    "end": "156019"
  },
  {
    "text": "If we give it a\nmolecule, the black box",
    "start": "156020",
    "end": "158270"
  },
  {
    "text": "tells us how good\nthat molecule is.",
    "start": "158270",
    "end": "159980"
  },
  {
    "text": "But we don't have to\nlook into the box.",
    "start": "159980",
    "end": "161730"
  },
  {
    "text": "That's the important point.",
    "start": "161730",
    "end": "163430"
  },
  {
    "text": "So, how are we going to do this?",
    "start": "163430",
    "end": "165599"
  },
  {
    "text": "We are going to do this and cast\nit as a reinforcement learning",
    "start": "165600",
    "end": "169100"
  },
  {
    "text": "problem.",
    "start": "169100",
    "end": "169980"
  },
  {
    "text": "And the way with\nreinforcement learning,",
    "start": "169980",
    "end": "171647"
  },
  {
    "text": "the way that we formalize it is\nthat we have a machine learning",
    "start": "171647",
    "end": "174890"
  },
  {
    "text": "agent that observes\nthe environment,",
    "start": "174890",
    "end": "177470"
  },
  {
    "text": "takes an action to interact\nwith the environment,",
    "start": "177470",
    "end": "180540"
  },
  {
    "text": "and then receives a\npositive or negative reward.",
    "start": "180540",
    "end": "183439"
  },
  {
    "text": "And then the agent wants\nto learn from this loop.",
    "start": "183440",
    "end": "187280"
  },
  {
    "text": "And the key idea is\nthat agent can directly",
    "start": "187280",
    "end": "189560"
  },
  {
    "text": "learn from the\nenvironment, which",
    "start": "189560",
    "end": "191480"
  },
  {
    "text": "is a black box to\nthe agent, right?",
    "start": "191480",
    "end": "194360"
  },
  {
    "text": "So we think that there\nis the environment.",
    "start": "194360",
    "end": "196460"
  },
  {
    "text": "The agent is taking\nactions, and it's",
    "start": "196460",
    "end": "198440"
  },
  {
    "text": "interacting with\nthe environment,",
    "start": "198440",
    "end": "199880"
  },
  {
    "text": "and the environment is\ngiving back some feedback,",
    "start": "199880",
    "end": "202790"
  },
  {
    "text": "some rewards to the agent.",
    "start": "202790",
    "end": "204920"
  },
  {
    "text": "And there are two\ntypes of the rewards,",
    "start": "204920",
    "end": "206630"
  },
  {
    "text": "there is the\ninstantaneous reward",
    "start": "206630",
    "end": "208433"
  },
  {
    "text": "and then there is the\nlong term reward, right?",
    "start": "208433",
    "end": "210350"
  },
  {
    "text": "In our case,\ninstantaneous reward",
    "start": "210350",
    "end": "212480"
  },
  {
    "text": "will did I just add an\natom to the molecule,",
    "start": "212480",
    "end": "216319"
  },
  {
    "text": "and I did it according to\nthe rules of chemistry.",
    "start": "216320",
    "end": "220610"
  },
  {
    "text": "And then the long\nterm reward will",
    "start": "220610",
    "end": "222200"
  },
  {
    "text": "be after we are done with\ngenerating the molecule, how",
    "start": "222200",
    "end": "225290"
  },
  {
    "text": "good was that molecule?",
    "start": "225290",
    "end": "226459"
  },
  {
    "text": "That's the long term reward.",
    "start": "226460",
    "end": "229620"
  },
  {
    "text": "OK.",
    "start": "229620",
    "end": "230250"
  },
  {
    "text": "So the solution to this\ngoal-directed molecule",
    "start": "230250",
    "end": "233910"
  },
  {
    "text": "generation, we call it Graph\nConvolutional Policy Network",
    "start": "233910",
    "end": "237330"
  },
  {
    "text": "that combines graph\nrepresentation",
    "start": "237330",
    "end": "239160"
  },
  {
    "text": "and reinforcement learning.",
    "start": "239160",
    "end": "241050"
  },
  {
    "text": "And the key component\nof GCPN is that we",
    "start": "241050",
    "end": "244500"
  },
  {
    "text": "are going to use a graph neural\nnetwork to capture the graph",
    "start": "244500",
    "end": "247710"
  },
  {
    "text": "structure information,\nwe are going",
    "start": "247710",
    "end": "249660"
  },
  {
    "text": "to use reinforcement\nlearning to guide",
    "start": "249660",
    "end": "251940"
  },
  {
    "text": "the generation towards\nthe desired objective,",
    "start": "251940",
    "end": "254610"
  },
  {
    "text": "and we are going to\nuse supervised learning",
    "start": "254610",
    "end": "256680"
  },
  {
    "text": "to imitate examples on a given\ntraining data set, right?",
    "start": "256680",
    "end": "262580"
  },
  {
    "text": "We want our molecules\nto look realistic.",
    "start": "262580",
    "end": "267689"
  },
  {
    "text": "How does GCPN differ\nfrom GraphRNN?",
    "start": "267690",
    "end": "271770"
  },
  {
    "text": "First, what is the commonality?",
    "start": "271770",
    "end": "274169"
  },
  {
    "text": "The commonality is that these\nare both generative models",
    "start": "274170",
    "end": "277110"
  },
  {
    "text": "for graphs, and they\ntry to kind of imitate",
    "start": "277110",
    "end": "280590"
  },
  {
    "text": "or they can be learned\ngiven a data set.",
    "start": "280590",
    "end": "284820"
  },
  {
    "text": "What are the main\ndifferences is that GCPN",
    "start": "284820",
    "end": "287820"
  },
  {
    "text": "is going to use a graph\nneural network to predict",
    "start": "287820",
    "end": "291240"
  },
  {
    "text": "the generation of\nthe next action,",
    "start": "291240",
    "end": "292694"
  },
  {
    "text": "and while GraphRNN is using\nthe hidden state of an RNN",
    "start": "292695",
    "end": "299340"
  },
  {
    "text": "to decide on the next action.",
    "start": "299340",
    "end": "302160"
  },
  {
    "text": "A graph neural network\nis more expressive",
    "start": "302160",
    "end": "304530"
  },
  {
    "text": "than a recurrent neural\nnetwork, so that's",
    "start": "304530",
    "end": "307080"
  },
  {
    "text": "the benefit of\nthe GCPN approach,",
    "start": "307080",
    "end": "309210"
  },
  {
    "text": "but on the negative\nside, the GNN",
    "start": "309210",
    "end": "313500"
  },
  {
    "text": "takes longer time to\ncompute than an RNN.",
    "start": "313500",
    "end": "316200"
  },
  {
    "text": "So molecules\ngenerally are small,",
    "start": "316200",
    "end": "318450"
  },
  {
    "text": "so we can afford this more\ncomplex algorithm that",
    "start": "318450",
    "end": "322860"
  },
  {
    "text": "has bigger expressive\npower, and it",
    "start": "322860",
    "end": "324780"
  },
  {
    "text": "will-- is able to learn more.",
    "start": "324780",
    "end": "326800"
  },
  {
    "text": "So GCPN will then also\nuse reinforcement learning",
    "start": "326800",
    "end": "330270"
  },
  {
    "text": "to direct graph generation\ntowards our goal,",
    "start": "330270",
    "end": "333120"
  },
  {
    "text": "towards our black box.",
    "start": "333120",
    "end": "334800"
  },
  {
    "text": "And reinforcement learning will\nenable us this goal directed",
    "start": "334800",
    "end": "339000"
  },
  {
    "text": "graph generation.",
    "start": "339000",
    "end": "341540"
  },
  {
    "text": "So to give you an idea,\nboth of these two,",
    "start": "341540",
    "end": "344420"
  },
  {
    "text": "both GCPN and GraphRNN are\nsequential graph generation",
    "start": "344420",
    "end": "348380"
  },
  {
    "text": "approaches.",
    "start": "348380",
    "end": "349220"
  },
  {
    "text": "But in the GraphRNN we\npredict the action based",
    "start": "349220",
    "end": "352760"
  },
  {
    "text": "on the RNN hidden state, right?",
    "start": "352760",
    "end": "354620"
  },
  {
    "text": "So the node gives the hidden\nstate to the edge level RNN,",
    "start": "354620",
    "end": "357830"
  },
  {
    "text": "and then the hidden\nstate is passed on,",
    "start": "357830",
    "end": "359720"
  },
  {
    "text": "and the edges have\ngenerated, and then",
    "start": "359720",
    "end": "361670"
  },
  {
    "text": "the hidden state goes back\nto the node level RNN, right?",
    "start": "361670",
    "end": "365040"
  },
  {
    "text": "So basically all the\ninformation, all the history",
    "start": "365040",
    "end": "367370"
  },
  {
    "text": "is captured in\nthis hidden state.",
    "start": "367370",
    "end": "370790"
  },
  {
    "text": "And if you have\ngenerated 10,000 nodes,",
    "start": "370790",
    "end": "373550"
  },
  {
    "text": "this means this hidden state has\nbeen transformed 10,000 times,",
    "start": "373550",
    "end": "377030"
  },
  {
    "text": "and then for every edge\nit's also been transformed.",
    "start": "377030",
    "end": "379850"
  },
  {
    "text": "So it's a lot that this\nhidden state needs to capture.",
    "start": "379850",
    "end": "385640"
  },
  {
    "text": "So in a GCPN, we won't have\nthis notion of a hidden state,",
    "start": "385640",
    "end": "389870"
  },
  {
    "text": "but we are going to use the\nGNN to basically give me",
    "start": "389870",
    "end": "394760"
  },
  {
    "text": "the embeddings of the nodes.",
    "start": "394760",
    "end": "396300"
  },
  {
    "text": "So I'm going to say, here is\na partially generated graph,",
    "start": "396300",
    "end": "399259"
  },
  {
    "text": "and here is a new node.",
    "start": "399260",
    "end": "400610"
  },
  {
    "text": "What I'm going to\ndo is I'm going",
    "start": "400610",
    "end": "402050"
  },
  {
    "text": "to embed each of the nodes in\nthe partially generated graph,",
    "start": "402050",
    "end": "405560"
  },
  {
    "text": "and then I'm also going to have\nsome embedding for the new node",
    "start": "405560",
    "end": "410750"
  },
  {
    "text": "number 4.",
    "start": "410750",
    "end": "411500"
  },
  {
    "text": "And then, based on\nthese embeddings,",
    "start": "411500",
    "end": "413150"
  },
  {
    "text": "I'm now going to\npredict which node",
    "start": "413150",
    "end": "415610"
  },
  {
    "text": "number 4 should link to, right?",
    "start": "415610",
    "end": "420270"
  },
  {
    "text": "So this means that\nbasically now I'm",
    "start": "420270",
    "end": "421889"
  },
  {
    "text": "not using the RNN to do this,\nbut I'm using a graph neural",
    "start": "421890",
    "end": "425370"
  },
  {
    "text": "network to generate the\nstate, and then I'm simply",
    "start": "425370",
    "end": "428040"
  },
  {
    "text": "doing link prediction.",
    "start": "428040",
    "end": "429700"
  },
  {
    "text": "So I'm kind of using--",
    "start": "429700",
    "end": "431160"
  },
  {
    "text": "predicting potential links\nusing node embeddings",
    "start": "431160",
    "end": "434040"
  },
  {
    "text": "rather than to directly generate\nthem based on the hidden state.",
    "start": "434040",
    "end": "438043"
  },
  {
    "text": "That's the difference.",
    "start": "438043",
    "end": "438960"
  },
  {
    "text": "And this would be much more\nscalable, sorry, much more",
    "start": "438960",
    "end": "442919"
  },
  {
    "text": "expressive, much more\nrobust, but less scalable",
    "start": "442920",
    "end": "446820"
  },
  {
    "text": "because we have to now\ncompute these embeddings",
    "start": "446820",
    "end": "449220"
  },
  {
    "text": "and then evaluate\nthese link predictions",
    "start": "449220",
    "end": "451290"
  },
  {
    "text": "for every single action.",
    "start": "451290",
    "end": "453610"
  },
  {
    "text": "So the overview of GCPN\nis that it has these",
    "start": "453610",
    "end": "456669"
  },
  {
    "text": "following four steps, right?",
    "start": "456670",
    "end": "459890"
  },
  {
    "text": "First, we are going\nto insert the nodes.",
    "start": "459890",
    "end": "462460"
  },
  {
    "text": "Then we are going to\nuse the GNN to predict",
    "start": "462460",
    "end": "464800"
  },
  {
    "text": "which nodes are going to\nconnect with each other.",
    "start": "464800",
    "end": "467349"
  },
  {
    "text": "Then we are going\nto take an action,",
    "start": "467350",
    "end": "470890"
  },
  {
    "text": "and we are going to\ncheck chemical validity.",
    "start": "470890",
    "end": "475120"
  },
  {
    "text": "And then if the\naction is correct,",
    "start": "475120",
    "end": "476560"
  },
  {
    "text": "we say yes, you\ncreated a good edge,",
    "start": "476560",
    "end": "478160"
  },
  {
    "text": "you didn't create a good edge.",
    "start": "478160",
    "end": "479650"
  },
  {
    "text": "And then, after the model is\ndone generating the graph,",
    "start": "479650",
    "end": "483370"
  },
  {
    "text": "we are going to compute\nthe final reward.",
    "start": "483370",
    "end": "486160"
  },
  {
    "text": "We are going to ask\nthe black box, what",
    "start": "486160",
    "end": "489190"
  },
  {
    "text": "do you think of the\nmolecule we generated?",
    "start": "489190",
    "end": "492850"
  },
  {
    "text": "So a few questions\nabout the reward--",
    "start": "492850",
    "end": "496130"
  },
  {
    "text": "we will have two rewards.",
    "start": "496130",
    "end": "498410"
  },
  {
    "text": "One will be the\nreward per step, which",
    "start": "498410",
    "end": "500770"
  },
  {
    "text": "will be basically to--\nwhether the model has",
    "start": "500770",
    "end": "503830"
  },
  {
    "text": "learned to take a valid action.",
    "start": "503830",
    "end": "505659"
  },
  {
    "text": "Basically, at each step\na small positive reward",
    "start": "505660",
    "end": "508180"
  },
  {
    "text": "will be awarded for taking a\nvalid action-- so basically,",
    "start": "508180",
    "end": "512620"
  },
  {
    "text": "by respecting the\nrules of chemistry.",
    "start": "512620",
    "end": "515289"
  },
  {
    "text": "And the final reward will be\nproportionate to the-- the goal",
    "start": "515289",
    "end": "520299"
  },
  {
    "text": "is for it to optimize\nthe desired property",
    "start": "520299",
    "end": "522669"
  },
  {
    "text": "of the molecule, right?",
    "start": "522669",
    "end": "523750"
  },
  {
    "text": "At the end, we are going\nto get huge positive reward",
    "start": "523750",
    "end": "527290"
  },
  {
    "text": "if the molecule is\ngood, and a low reward,",
    "start": "527290",
    "end": "531100"
  },
  {
    "text": "or no reward if the\nmolecule is bad, right?",
    "start": "531100",
    "end": "533750"
  },
  {
    "text": "And the total reward is\ngoing to be final reward",
    "start": "533750",
    "end": "536530"
  },
  {
    "text": "plus these stepwise rewards.",
    "start": "536530",
    "end": "538865"
  },
  {
    "start": "538865",
    "end": "542610"
  },
  {
    "text": "And then, in terms of training\nthe model, there are two parts.",
    "start": "542610",
    "end": "546160"
  },
  {
    "text": "First is the\nsupervised training,",
    "start": "546160",
    "end": "548279"
  },
  {
    "text": "where we are going to train\nthe policy by imitating",
    "start": "548280",
    "end": "551460"
  },
  {
    "text": "the actions given real observed\ngraphs using the gradient.",
    "start": "551460",
    "end": "555162"
  },
  {
    "text": "So basically, here\nwe are just kind",
    "start": "555162",
    "end": "556620"
  },
  {
    "text": "of going to try to\nlearn our model how",
    "start": "556620",
    "end": "560400"
  },
  {
    "text": "to generate realistic molecules\nand not worry about optimizing",
    "start": "560400",
    "end": "565380"
  },
  {
    "text": "the structure yet.",
    "start": "565380",
    "end": "566220"
  },
  {
    "text": "So it's just about learning\nto generate proper molecules",
    "start": "566220",
    "end": "569279"
  },
  {
    "text": "and obey chemistry.",
    "start": "569280",
    "end": "571470"
  },
  {
    "text": "And then in the second\npart of the training",
    "start": "571470",
    "end": "573689"
  },
  {
    "text": "we are going to actually\ntrain a policy that",
    "start": "573690",
    "end": "576360"
  },
  {
    "text": "optimizes the reward.",
    "start": "576360",
    "end": "577649"
  },
  {
    "text": "And here we are going to use\na standard policy gradient",
    "start": "577650",
    "end": "581940"
  },
  {
    "text": "algorithm that is kind of\nclassical reinforcement",
    "start": "581940",
    "end": "586690"
  },
  {
    "text": "learning.",
    "start": "586690",
    "end": "587190"
  },
  {
    "text": "But the point is, we are going\nto have two steps of training,",
    "start": "587190",
    "end": "590160"
  },
  {
    "text": "one to learn the chemistry\nand then the second one",
    "start": "590160",
    "end": "593339"
  },
  {
    "text": "to learn how to\noptimize the reward.",
    "start": "593340",
    "end": "596300"
  },
  {
    "text": "And now if I want\nto show you this,",
    "start": "596300",
    "end": "598080"
  },
  {
    "text": "we will have the\npartially generated graph,",
    "start": "598080",
    "end": "600350"
  },
  {
    "text": "the GCPN is going to decide how\nto grow it one node at a time",
    "start": "600350",
    "end": "605120"
  },
  {
    "text": "and how to create connections.",
    "start": "605120",
    "end": "607550"
  },
  {
    "text": "We are going to get\nsmall positive reward",
    "start": "607550",
    "end": "610490"
  },
  {
    "text": "and the gradient\nbased on the fact",
    "start": "610490",
    "end": "614450"
  },
  {
    "text": "that we have generated\nthe graph correctly.",
    "start": "614450",
    "end": "616940"
  },
  {
    "text": "And this is going to\nloop until we decide",
    "start": "616940",
    "end": "619990"
  },
  {
    "text": "the molecule is generated.",
    "start": "619990",
    "end": "621770"
  },
  {
    "text": "Now that the molecule\nis generated,",
    "start": "621770",
    "end": "623690"
  },
  {
    "text": "we are going to ask our\nblack box to tell us",
    "start": "623690",
    "end": "627860"
  },
  {
    "text": "how good is this molecule.",
    "start": "627860",
    "end": "630019"
  },
  {
    "text": "And then this final\nreward is going to be",
    "start": "630020",
    "end": "633170"
  },
  {
    "text": "also back-propagated, right?",
    "start": "633170",
    "end": "634540"
  },
  {
    "text": "So this generation is\ngoing to be trained",
    "start": "634540",
    "end": "637250"
  },
  {
    "text": "using the supervised\nlearning, and then",
    "start": "637250",
    "end": "639200"
  },
  {
    "text": "this overall end-to-end\nwith the delayed reward",
    "start": "639200",
    "end": "642980"
  },
  {
    "text": "will be trained in this\nkind of reinforcement",
    "start": "642980",
    "end": "649130"
  },
  {
    "text": "learning framework.",
    "start": "649130",
    "end": "651230"
  },
  {
    "text": "And what is the benefit\nof this approach",
    "start": "651230",
    "end": "653240"
  },
  {
    "text": "is that we can generate\nmolecules that try",
    "start": "653240",
    "end": "658160"
  },
  {
    "text": "to optimize a given property.",
    "start": "658160",
    "end": "660319"
  },
  {
    "text": "So here I'm showing\nyou different molecules",
    "start": "660320",
    "end": "662270"
  },
  {
    "text": "that optimize log P, which is\na particular chemical property,",
    "start": "662270",
    "end": "667160"
  },
  {
    "text": "or here we are\noptimizing QED, which",
    "start": "667160",
    "end": "670250"
  },
  {
    "text": "is the quantum energy--\nagain, something",
    "start": "670250",
    "end": "672080"
  },
  {
    "text": "that medicinal\nchemists worry about.",
    "start": "672080",
    "end": "675350"
  },
  {
    "text": "And you can see how these\ngraphs that we generate",
    "start": "675350",
    "end": "677870"
  },
  {
    "text": "look like real molecules.",
    "start": "677870",
    "end": "679910"
  },
  {
    "text": "Another thing that this\nallows you to do-- it",
    "start": "679910",
    "end": "682610"
  },
  {
    "text": "allows you to take a\npartially-built molecule",
    "start": "682610",
    "end": "685040"
  },
  {
    "text": "and complete it.",
    "start": "685040",
    "end": "686490"
  },
  {
    "text": "So for example, you can start\nwith some starting structure,",
    "start": "686490",
    "end": "690140"
  },
  {
    "text": "where here, log B--",
    "start": "690140",
    "end": "692420"
  },
  {
    "text": "I think it's solubility.",
    "start": "692420",
    "end": "693769"
  },
  {
    "text": "So basically you start with some\nvery bad values of solubility,",
    "start": "693770",
    "end": "696470"
  },
  {
    "text": "and then you say, how do\nI complete this structure",
    "start": "696470",
    "end": "699319"
  },
  {
    "text": "to improve solubility?",
    "start": "699320",
    "end": "700580"
  },
  {
    "text": "And here you see how it went\nfrom minus 8 to minus 0.7,",
    "start": "700580",
    "end": "704270"
  },
  {
    "text": "and from minus 5 to minus\n2, by basically completing",
    "start": "704270",
    "end": "709070"
  },
  {
    "text": "the molecule, right?",
    "start": "709070",
    "end": "711650"
  },
  {
    "text": "So this is the point, is\nwe can take, basically,",
    "start": "711650",
    "end": "714110"
  },
  {
    "text": "a partially built structure or\nfinish it, or create a brand",
    "start": "714110",
    "end": "718610"
  },
  {
    "text": "new structure.",
    "start": "718610",
    "end": "719930"
  },
  {
    "start": "719930",
    "end": "723300"
  },
  {
    "text": "So let me summarize the\nlecture of graph generation.",
    "start": "723300",
    "end": "728029"
  },
  {
    "text": "So complex graphs can be\nsuccessfully generated",
    "start": "728030",
    "end": "731300"
  },
  {
    "text": "via sequential generation\nusing deep learning.",
    "start": "731300",
    "end": "735560"
  },
  {
    "text": "Each step is a decision that is\nmade based on the hidden state,",
    "start": "735560",
    "end": "741680"
  },
  {
    "text": "and this hidden state can\neither be implicit or explicit.",
    "start": "741680",
    "end": "747260"
  },
  {
    "text": "In the RNN, this\nvector representation",
    "start": "747260",
    "end": "750230"
  },
  {
    "text": "about keeping the\nstate was implicit",
    "start": "750230",
    "end": "752660"
  },
  {
    "text": "because it was all in this\nhidden state, while in the GCPN",
    "start": "752660",
    "end": "757069"
  },
  {
    "text": "the state was explicit because\nit was computed directly",
    "start": "757070",
    "end": "761600"
  },
  {
    "text": "on the intermediate graphs and\nencoded by a neural network.",
    "start": "761600",
    "end": "770959"
  },
  {
    "text": "I also showed you possible\ntasks for GraphRNN.",
    "start": "770960",
    "end": "774440"
  },
  {
    "text": "We talked about imitating\na given set of graphs.",
    "start": "774440",
    "end": "778430"
  },
  {
    "text": "For the second\npart, for GCPN, we",
    "start": "778430",
    "end": "781520"
  },
  {
    "text": "talked about optimizing\ngraphs to a given goal.",
    "start": "781520",
    "end": "784850"
  },
  {
    "text": "I talked about the application\nto molecule generation",
    "start": "784850",
    "end": "788509"
  },
  {
    "text": "to try to generate molecules\nwith optimal properties,",
    "start": "788510",
    "end": "792020"
  },
  {
    "text": "but you could apply this to any\nkind of graph generation task,",
    "start": "792020",
    "end": "796160"
  },
  {
    "text": "to any kind of\nproperty-- for example,",
    "start": "796160",
    "end": "799019"
  },
  {
    "text": "including generating\nrealistic maps,",
    "start": "799020",
    "end": "802280"
  },
  {
    "text": "generating realistic cities,\nroad networks, materials,",
    "start": "802280",
    "end": "807560"
  },
  {
    "text": "and things like that.",
    "start": "807560",
    "end": "809980"
  },
  {
    "start": "809980",
    "end": "815000"
  }
]