[
  {
    "text": "So let's get started. Uh, it is my pleasure to introduce Jeff Clune.",
    "start": "5780",
    "end": "12060"
  },
  {
    "text": "Jeff will be giving a guest lecture in the course. Jeff is a Senior Research Manager at Uber AI Labs",
    "start": "12060",
    "end": "18900"
  },
  {
    "text": "and that was just formed after Uber acquired a startup that he helped lead. Uh, and before that,",
    "start": "18900",
    "end": "25000"
  },
  {
    "text": "Jeff was the Loy and Edith Harris Associate Professor in Computer Science at the University of Wyoming.",
    "start": "25000",
    "end": "32015"
  },
  {
    "text": "One of the things that I think has been really exciting about Jeff's work is that it actually has spanned multiple different subfields of machine learning",
    "start": "32015",
    "end": "38120"
  },
  {
    "text": "and artificial intelligence ranging from deep learning evolutionary methods and evolving neural networks as well as robotics.",
    "start": "38120",
    "end": "45860"
  },
  {
    "text": "So let's welcome Jeff. [APPLAUSE]",
    "start": "45860",
    "end": "51660"
  },
  {
    "text": "Hello everyone. Thank you very, very much to Chelsea for the invitation. It's an honor to be here and I'm excited to speak with you today.",
    "start": "51660",
    "end": "57725"
  },
  {
    "text": "So, um, today I'm going to kind of think really the long-term about where are we- how we might achieve",
    "start": "57725",
    "end": "63050"
  },
  {
    "text": "our most ambitious objectives as an AI research community. Um, but before I begin doing that, I wanted to tell you about a little bit of work that my team",
    "start": "63050",
    "end": "70190"
  },
  {
    "text": "and my collaborators and I have done that I won't have time to talk to you about in case you're interested in looking it up or in case we have the opportunity to chat one on one some time.",
    "start": "70190",
    "end": "77450"
  },
  {
    "text": "The first thing I wanted to mention is that we've done some work on automated ecological understanding. So this is kind of a nice opportunity for people who work in",
    "start": "77450",
    "end": "83930"
  },
  {
    "text": "the deep learning community to kind of use our skills to help the world, make a- you know, make the world a much better place.",
    "start": "83930",
    "end": "89840"
  },
  {
    "text": "So biologists really want to understand kind of the animals and their ecosystems, what they're doing, how many of them there are, etc.",
    "start": "89840",
    "end": "96260"
  },
  {
    "text": "to manage endangered populations, combat poaching, and just to generally understand ecosystems.",
    "start": "96260",
    "end": "101640"
  },
  {
    "text": "And so if you think about it motion sensor cameras plus deep learning are kind of a perfect marriage to help wi- wildlife biologists do that.",
    "start": "101640",
    "end": "108065"
  },
  {
    "text": "And we were able to show in this paper that it works quite well. So I'm excited to see the future of that. My collaborators and I have also done about",
    "start": "108065",
    "end": "114740"
  },
  {
    "text": "a six paper arc in what we call AI Neuroscience. So this is trying to understand how much",
    "start": "114740",
    "end": "119870"
  },
  {
    "text": "do deep neural nets understand about the images that they classify. For example, including a lot of these papers which you might find interesting,",
    "start": "119870",
    "end": "126665"
  },
  {
    "text": "and then the final thing I'll mention is we've done a lot of work in reinforcement learning, particularly on the question of how to do intelligent exploration in reinforcement learning.",
    "start": "126665",
    "end": "133550"
  },
  {
    "text": "So recently put out the Go-Explore algorithm which solves Montezuma's Revenge and virtually solves again with Pitfall which",
    "start": "133550",
    "end": "139970"
  },
  {
    "text": "no prior algorithm had scored greater than zero on. And so I think it's kind of interesting and important to kind of figure out how could we make",
    "start": "139970",
    "end": "146480"
  },
  {
    "text": "these RL algorithms explore like humans do so we can make them much more sample efficient. So you can check that out if you're interested in it.",
    "start": "146480",
    "end": "152680"
  },
  {
    "text": "Okay. So here's the major main subject of today's talk. The first bit is going to be wildly speculative. I hope you don't mind.",
    "start": "152680",
    "end": "159959"
  },
  {
    "text": "But we're going to have some fun thinking about like how might we get to the really, really far goals that we've set ourselves as a research community.",
    "start": "159960",
    "end": "166550"
  },
  {
    "text": "And I want to warn you that, you know, this is obviously because it's so ambitious, and so thinking kind of big picture,",
    "start": "166550",
    "end": "172160"
  },
  {
    "text": "it's not grounded yet in a lot of experimental evidence and it's just a discussion. So even if you completely go by anything that I say at that phase of the talk,",
    "start": "172160",
    "end": "179299"
  },
  {
    "text": "what it's gonna do is it's also going to provide motivation and context for a lot of the techniques I am going to tell you about in detail,",
    "start": "179300",
    "end": "185239"
  },
  {
    "text": "which even if you disagree with the wild speculation in the beginning, I still think you'll find interesting from a meta-learning perspective.",
    "start": "185240",
    "end": "190475"
  },
  {
    "text": "And then we'll go through those techniques in order. So let's begin with the big picture stuff.",
    "start": "190475",
    "end": "195875"
  },
  {
    "text": "So how- we all I think in the back of our heads are interested in trying to produce artificial general intelligence or you might call it human level AI.",
    "start": "195875",
    "end": "203720"
  },
  {
    "text": "Or at least you're wondering whether or not that's possible. And so I think this is, you know, obviously like the most scientific- sorry,",
    "start": "203720",
    "end": "209780"
  },
  {
    "text": "most ambitious quest in scientific history. And it'll change everything, you know, every aspect of our economy,",
    "start": "209780",
    "end": "215510"
  },
  {
    "text": "culture, it'll revolutionize science, etc. So the question is how will we get all the way there?",
    "start": "215510",
    "end": "220650"
  },
  {
    "text": "Not how would we make incremental progress this year and next year, but how might we really achieve this thing at the back of our community's  head,",
    "start": "220650",
    "end": "227045"
  },
  {
    "text": "we wanted- we want to accomplish. And so I think that if you kind of take a step back and you say what is the traditional machine learning community,",
    "start": "227045",
    "end": "234740"
  },
  {
    "text": "you go to NeurIPS, you go to ICLR, you got to ICML, what are we doing as a community? And I think that we're kind of implicitly committed to what I call the manual path to AI,",
    "start": "234740",
    "end": "243650"
  },
  {
    "text": "and nobody ever talks about this, it's kind of like the fish that don't see the water. I think that the community effectively is saying what we're",
    "start": "243650",
    "end": "250370"
  },
  {
    "text": "trying to do is identify the key building blocks to AI, you know. And so if you go and you look at, uh,",
    "start": "250370",
    "end": "255485"
  },
  {
    "text": "a paper in any given conference, what does it look like? Well, there you say, oh, I think that maybe we need this building block here.",
    "start": "255485",
    "end": "261170"
  },
  {
    "text": "It doesn't exist yet, so I'm going to propose that we add it. Or I'm going to take this existing building block like a highway network.",
    "start": "261170",
    "end": "266180"
  },
  {
    "text": "I'm gonna replace it with a RES network. I'm going to show that that works slightly better. So we're kind of finding all the pieces or improving the pieces.",
    "start": "266180",
    "end": "272585"
  },
  {
    "text": "And that kind of raises some interesting questions, which is, you know, how many building blocks are there that would be required to",
    "start": "272585",
    "end": "279169"
  },
  {
    "text": "build an actual really complicated powerful thinking machine? You know, are there hundreds? Are there thousands?",
    "start": "279170",
    "end": "285125"
  },
  {
    "text": "And like can we find them all one by one as a community manually? I think that's kind of an interesting question to consider.",
    "start": "285125",
    "end": "291005"
  },
  {
    "text": "But even if you think that we can find all those building blocks, we're implicitly committed to some Phase 2,",
    "start": "291005",
    "end": "296620"
  },
  {
    "text": "where we are eventually going to have to put all these building blocks together into some giant complicated Rube Goldbergian thinking machine,",
    "start": "296620",
    "end": "303935"
  },
  {
    "text": "which is something that I just think is something that we should say explicitly because if this is the path we're committed to, we should kind of stare at it clear-eyed and know how daunting of a challenge it is.",
    "start": "303935",
    "end": "312755"
  },
  {
    "text": "And I just want to be clear that I think this is a really Herculean task. You're talking about hundreds or thousands of nonlinearly interacting complicated parts,",
    "start": "312755",
    "end": "320930"
  },
  {
    "text": "each of which took a PhD or at least a paper to get right to begin with and now they're all interacting. So how would you debug that system?",
    "start": "320930",
    "end": "327260"
  },
  {
    "text": "And well, if it doesn't work, how are you going to fix it? So I'm not saying that it's impossible, but I think it's really, really difficult and we should know that.",
    "start": "327260",
    "end": "333545"
  },
  {
    "text": "Um, I also think that it doesn't really fit our scientific culture very well because we typically have, you know, each of you working in a small team on a paper every couple of years or in",
    "start": "333545",
    "end": "341360"
  },
  {
    "text": "Chelsea's case you know 16 papers for a year or more, I've lost count. But either way, what we don't tend to do is stop and have like",
    "start": "341360",
    "end": "348560"
  },
  {
    "text": "an entire CERN like effort or Apollo program like effort to put all these pieces together. And that might be what's required to get all of those pieces I had on the,",
    "start": "348560",
    "end": "356930"
  },
  {
    "text": "the last slide all together into one functioning working machine. So, uh, I think that if you look at the overall trend in machine learning recently,",
    "start": "356930",
    "end": "364760"
  },
  {
    "text": "there's a clear trend. And that is that hand designed pipelines give way",
    "start": "364760",
    "end": "371150"
  },
  {
    "text": "to learn solutions over time once we have sufficient data and compute.",
    "start": "371150",
    "end": "376235"
  },
  {
    "text": "Okay. And so this we've seen this over and over and over again. When we first try to solve a problem,",
    "start": "376235",
    "end": "381590"
  },
  {
    "text": "we typically try to hand code the whole thing. That doesn't work, so we say I'm going to hand code part of the pipeline then I'm gonna sprinkle some machine learning in.",
    "start": "381590",
    "end": "387830"
  },
  {
    "text": "And eventually, once we have enough data to compute, we just realized we should have learned the whole thing from the beginning. This has happened with features such as HOG and SIFT giving way to deep learning.",
    "start": "387830",
    "end": "395669"
  },
  {
    "text": "It's happened with architecture, the best architectures now in CIFAR and ImageNet are learned, they've been searched for automatically.",
    "start": "395670",
    "end": "401525"
  },
  {
    "text": "They have not been designed by humans. We're seeing this with hyper parameters and data augmentation, and increasingly a focus of this class,",
    "start": "401525",
    "end": "407645"
  },
  {
    "text": "we're seeing that hand designed learning algorithms are giving away to learned learning algorithms. And so this trend suggests an alternate path to our most ambitious goals",
    "start": "407645",
    "end": "416570"
  },
  {
    "text": "as a research community and that is what I call AI-Generating Algorithms. So the idea here is that we would learn as much as possible.",
    "start": "416570",
    "end": "423980"
  },
  {
    "text": "This is an all-in bet on learning. And the idea is that we have one algorithm that we start and",
    "start": "423980",
    "end": "429169"
  },
  {
    "text": "it starts off simple with simple origins and it bootstraps itself up from simplicity to ultimately",
    "start": "429170",
    "end": "435169"
  },
  {
    "text": "being extremely intelligent and have a complicated AI. It's gonna do this by having an expensive outer loop just like meta-learning.",
    "start": "435170",
    "end": "442670"
  },
  {
    "text": "That is, it requires a lot of compute, but on the inner loop, what it does is produce a very sample-efficient learner.",
    "start": "442670",
    "end": "449285"
  },
  {
    "text": "Which should be familiar to this class. And we have an, an existence proof that this can work which is earth, right?",
    "start": "449285",
    "end": "455310"
  },
  {
    "text": "The very, very dumb computationally inefficient algorithm of Darwinian evolution produced you",
    "start": "455310",
    "end": "461255"
  },
  {
    "text": "and all of you are extremely sample-efficient learners inside of your life in the inner loop which is your lifetime.",
    "start": "461255",
    "end": "467735"
  },
  {
    "text": "So the question is, can we make such an algorithm? And I think that if we want to pull this off, then we need progress on three pillars.",
    "start": "467735",
    "end": "474950"
  },
  {
    "text": "So I call these the three pillars of AI-GAs. The first one is that we need to meta-learn the architectures of the algorithm,",
    "start": "474950",
    "end": "480365"
  },
  {
    "text": "then look the neural net architectures, for example. The second one is we need to learn- meta-learn the learning algorithms themselves which is the focus of this class.",
    "start": "480365",
    "end": "487460"
  },
  {
    "text": "And then the third one, which is not very well, uh, talked about and kind of the least researched and",
    "start": "487460",
    "end": "492560"
  },
  {
    "text": "the least understood is automatically generating effective learning environments. So in this, what I want to point out is that hand crafting each of these things,",
    "start": "492560",
    "end": "500840"
  },
  {
    "text": "if you had to like, design your architecture, the algorithm,  and the environments, that's very, very slow and it's limited by our own intelligence.",
    "start": "500840",
    "end": "507245"
  },
  {
    "text": "In contrast, it's better to learn all of these simultaneously and let M- um,",
    "start": "507245",
    "end": "512270"
  },
  {
    "text": "like ML and compute do the heavy lifting. So in today's talk, what I'm gonna do is I'm going to talk about work that",
    "start": "512270",
    "end": "517279"
  },
  {
    "text": "we've been doing in each one of these pillars in turn. Quickly, I want to mention a little bit more about AI-GAs and then I'll get back to the meta-learning algorithms themselves.",
    "start": "517280",
    "end": "524660"
  },
  {
    "text": "So one thing I do want to point out is AI-GAs like any search algorithm are not a building-block-free approach.",
    "start": "524660",
    "end": "530149"
  },
  {
    "text": "You still have to decide what your search space is, what your search operators are. But the hypothesis is that the AI-G pa- AI-GA path has fewer building blocks that need",
    "start": "530150",
    "end": "538639"
  },
  {
    "text": "to be identified versus the thousands or hundreds that exist in the manual path. And therefore, it's going to be easier to find them and get them to work together.",
    "start": "538640",
    "end": "547285"
  },
  {
    "text": "I also want to admit right out of the gate that AI-GA is going to be way more computationally inefficient.",
    "start": "547285",
    "end": "552800"
  },
  {
    "text": "It's gonna require tremendous amounts of compute. But if you look back at the history of machine learning, I think that it's okay because, um, you know,",
    "start": "552800",
    "end": "560735"
  },
  {
    "text": "computation speeds up exponentially and some of the best algorithms were built long before we had the compute to take advantage of them,",
    "start": "560735",
    "end": "566420"
  },
  {
    "text": "like deep learning, for example. And the early research allowed us to pounce once the computation was available.",
    "start": "566420",
    "end": "573080"
  },
  {
    "text": "I also want to point out this top bullet, which is probably where the most important research will happen and that is efficient abstractions of whatever it was that",
    "start": "573080",
    "end": "579230"
  },
  {
    "text": "produced the miracle that happened on earth, those will help us shave orders of magnitude off of the planet-sized computer that was required to produce us.",
    "start": "579230",
    "end": "587105"
  },
  {
    "text": "So that's where the real interest is. So are AI-GAs a faster path to AI than the manual path?",
    "start": "587105",
    "end": "594080"
  },
  {
    "text": "I actually think that it's very debatable, but I ultimately have concluded after thinking about this that I do think AI-GAs are a faster path to AI but I have high uncertainty.",
    "start": "594080",
    "end": "602570"
  },
  {
    "text": "So I do recognize that either one could win, but in terms of the arguments for why, I think it's in line with this trend in machine learning.",
    "start": "602570",
    "end": "608660"
  },
  {
    "text": "I think it scales really well. It doesn't require human genius. So I borrowed this slide from Pieter Abbeel,",
    "start": "608660",
    "end": "613760"
  },
  {
    "text": "which typically he only has these two pie charts and I've added this one over here.",
    "start": "613760",
    "end": "619055"
  },
  {
    "text": "And the idea is that we don't have to require, you know, identify and combine all these building blocks. So I think one thing that's interesting especially for an audience like this,",
    "start": "619055",
    "end": "627320"
  },
  {
    "text": "which are PhD students mostly, is you know if you want to think about where you want to spend your time, I would argue that it's really interesting to spend your time on things like AI-GAs",
    "start": "627320",
    "end": "635480"
  },
  {
    "text": "and meta-learning because it's kind of like if you can go back in time and ask yourself, 15 years ago, would you rather work on HOG and SIFT?",
    "start": "635480",
    "end": "641980"
  },
  {
    "text": "They were the dominant technique. They would look way better than neural nets. But ultimately, the learning of a solution took off and",
    "start": "641980",
    "end": "648529"
  },
  {
    "text": "surpassed and has been much more general and much more powerful. So if I could go back in time, I'd want to work on neural nets. Actually, I was working on neural nets around that.",
    "start": "648530",
    "end": "655519"
  },
  {
    "text": "So that's already happened. Um, but you should also if you had a time machine. Okay. So I do think that community should reallocate more effort",
    "start": "655520",
    "end": "662690"
  },
  {
    "text": "because even if I'm right that there's some probability mass on AI-GAs, virtually all of the probability mass right now is on the manual approach.",
    "start": "662690",
    "end": "668810"
  },
  {
    "text": "And so we should reallocate some of our effort to this approach. So there's more discussion in this paper here. I don't have time to go deep into AI-GAs today.",
    "start": "668810",
    "end": "675710"
  },
  {
    "text": "That's not what this talk is about. But I discussed at, at length wh- who's going to win, the manual path or the AI-GA path,",
    "start": "675710",
    "end": "681675"
  },
  {
    "text": "I argue that AI-GA is very interesting- intrinsically interesting even if they're not the fastest path to AI that we really have to be worried about",
    "start": "681675",
    "end": "688850"
  },
  {
    "text": "safety and ethics concerns with them that are unique to this type of algorithm. And also that this should be considered its own Grand Challenge of science.",
    "start": "688850",
    "end": "695615"
  },
  {
    "text": "So you can check all that out if you want in the archive paper. But now what I wanna do is start telling you about some meta-learning techniques that get us down this road a little bit.",
    "start": "695615",
    "end": "702649"
  },
  {
    "text": "So I'm going to systematically go through these three pillars. So let's start with the first one which is meta-learning the architectures,",
    "start": "702650",
    "end": "708310"
  },
  {
    "text": "which also is known as architecture search. So this is a project called Generative Teaching Networks.",
    "start": "708310",
    "end": "713990"
  },
  {
    "text": "It's under review right now at ICLR. So fingers crossed. It's with this fantastic group of collaborators that I really want to single out",
    "start": "713990",
    "end": "719780"
  },
  {
    "text": "Felipe here who has definitely done all of the heavy lifting on this project. So the idea in general with architecture search is that architectures matter a lot.",
    "start": "719780",
    "end": "727940"
  },
  {
    "text": "If you look at for example ImageNet, a lot of the gains have been architectures and therefore we should search for them ins- instead of trying to manually design them. So how might we do that?",
    "start": "727940",
    "end": "735500"
  },
  {
    "text": "Well, a really common approach, uh, like an idea that's at the core of all these NAS methods, which stands for neural architecture search,",
    "start": "735500",
    "end": "741995"
  },
  {
    "text": "is that you train on real data for some short amount of time that gets you an estimate of how good an architecture is and then you do something with that estimate.",
    "start": "741995",
    "end": "749135"
  },
  {
    "text": "You could do something really simple like just do random search and take the thing that should, uh, looked the best or you could do something really",
    "start": "749135",
    "end": "754339"
  },
  {
    "text": "fancy like modeling the space of searches, etc. But the point is that all of them in their core tend to have this idea of training for a little while on",
    "start": "754340",
    "end": "760910"
  },
  {
    "text": "real data, getting an estimate a- after of those, a moderate number of SGD steps and then,",
    "start": "760910",
    "end": "766190"
  },
  {
    "text": "uh, you're off to the races. So the question is whether or not we could speed this up and that's what we try to do in this project.",
    "start": "766190",
    "end": "771680"
  },
  {
    "text": "So instead of training on real data from moderate number of steps, we're going to try to train which is a very,",
    "start": "771680",
    "end": "777019"
  },
  {
    "text": "very few number of SGD steps and see if that can perform better. And then we're going to use few step accuracy.",
    "start": "777020",
    "end": "783920"
  },
  {
    "text": "So the accuracy after a few steps of SGD is an estimate of the asymptotic performance of the network if I trained it,",
    "start": "783920",
    "end": "790500"
  },
  {
    "text": "you know, for 600 epochs for a lot of compute and data. So why might that work?",
    "start": "790500",
    "end": "796230"
  },
  {
    "text": "Well, if you think about a, a typical training set, it might look like this, is a T- TC plot. You might have like lots and lots of this kind of",
    "start": "796230",
    "end": "802910"
  },
  {
    "text": "zero and lots and lots of this kind of zero, for example. It might be the case that you could get away with just a few of these samples and a few of these samples.",
    "start": "802910",
    "end": "809639"
  },
  {
    "text": "If you intelligently sampled these data points, then you could do better than just training on all of the datasets because there might be redundancies.",
    "start": "809640",
    "end": "815990"
  },
  {
    "text": "And there's been work that's just basically shown that that in fact does work by sub selecting, uh, real data, you can do better.",
    "start": "815990",
    "end": "823175"
  },
  {
    "text": "But if you think about how humans learn, we don't always learn a task by doing that task.",
    "start": "823175",
    "end": "828530"
  },
  {
    "text": "I don't only learn basketball by playing basketball. And in fact, sometimes I do drills, which do not exactly resemble the sport itself.",
    "start": "828530",
    "end": "835775"
  },
  {
    "text": "For example, this basketball drill is really common, you dribbled two balls at once which never ever, ever happens in a basketball game.",
    "start": "835775",
    "end": "842110"
  },
  {
    "text": "But you can still learn that way. Additionally, you can actually watch videos of somebody playing basketball and learn how to play that way via observation.",
    "start": "842110",
    "end": "848885"
  },
  {
    "text": "And you can also read a book about basketball which is really crazy because [inaudible] does-",
    "start": "848885",
    "end": "856630"
  },
  {
    "text": "sorry, it actually does, uh- teach you a lot about the game, which I think is really interesting because it means that we can generate",
    "start": "860100",
    "end": "866620"
  },
  {
    "text": "different types of data that might speed up our learning, more than the real than- and it doesn't have to look like the real data.",
    "start": "866620",
    "end": "872290"
  },
  {
    "text": "So uh- also, I wanna point out that, over time, teaching methods improved. You get better drills,",
    "start": "872290",
    "end": "877570"
  },
  {
    "text": "better videos, and better books. So the question is, can we meta-learn to generate training data that allows us to rapidly learn a new task?",
    "start": "877570",
    "end": "887019"
  },
  {
    "text": "And if so, that could help speed up neural architecture search. So there has been work already on this which is really interesting wi- this paper that",
    "start": "887020",
    "end": "893860"
  },
  {
    "text": "really blew my mind is this hyper-gradients paper from Maclaurin in 2015. They treat the data as a hyperparameter of the algorithm,",
    "start": "893860",
    "end": "900519"
  },
  {
    "text": "differentiate that through all of the SGD to the pixels of the images for MNIST, and then it learns what data it should produce",
    "start": "900520",
    "end": "908904"
  },
  {
    "text": "to end up having a learner that trains on that data do well on MNIST. They only generated- they only lear- learned 10 samples and these are the 10 samples.",
    "start": "908905",
    "end": "916720"
  },
  {
    "text": "And as, as you can see, they look like kind of platonic digits. And then this paper here did that with 100 samples.",
    "start": "916720",
    "end": "921985"
  },
  {
    "text": "So one of the things that we wondered in this paper is, is instead of da- generating data pixel by pixel, which kind of leaves a lot on the table in terms of",
    "start": "921985",
    "end": "928930"
  },
  {
    "text": "learning regularities about the data themselves, and about the search space etc., our idea is that we're gonna learn a generator to generate data to accelerate this process,",
    "start": "928930",
    "end": "937480"
  },
  {
    "text": "and we call that a generative teaching network. So here's the general method, a GTN is going to generate data,",
    "start": "937480",
    "end": "944425"
  },
  {
    "text": "which a new never seen before learning neural net, which is a new architecture,",
    "start": "944425",
    "end": "949480"
  },
  {
    "text": "new initialization will train on the synthetic data produced by the GTN. And then we're going to optimize the GTN with meta-learning to produce",
    "start": "949480",
    "end": "956680"
  },
  {
    "text": "good data such that that learner performs well on the target task. After a very few number of SGD steps.",
    "start": "956680",
    "end": "962965"
  },
  {
    "text": "So here it is in picture form. We have the inner loop. You could generate a noise vector Z,",
    "start": "962965",
    "end": "968560"
  },
  {
    "text": "pass it into the generator, it produces data. This li- like a big batch of data. The learner iterates over a few steps of SGD,",
    "start": "968560",
    "end": "975760"
  },
  {
    "text": "maybe 32, for example, gets its final weights, pass that out to the- to, uh, evaluate on real data,",
    "start": "975760",
    "end": "982045"
  },
  {
    "text": "such as MNIST data, see how well it does, differentiate back through that entire process like MAML, for example,",
    "start": "982045",
    "end": "988870"
  },
  {
    "text": "and get back to the original weight to the generator, and change the weights of the generator to generate better data,",
    "start": "988870",
    "end": "994630"
  },
  {
    "text": "then throw the learner out and repeat the process over and over again. Does that make sense? Okay. So couple of things to note.",
    "start": "994630",
    "end": "1003765"
  },
  {
    "text": "There's a- only a few number of steps here, so you're implicitly incentivizing this generator to train the- to create data that enables rapid learning by the learner.",
    "start": "1003765",
    "end": "1012885"
  },
  {
    "text": "And another thing is that we're also going to meta-learn the inner loop hyperparameters like if it's got- like the momentum,",
    "start": "1012885",
    "end": "1018630"
  },
  {
    "text": "for example, in SGD. And we're gonna do that for both the controls and the GTN to have it be a fair playing field.",
    "start": "1018630",
    "end": "1024420"
  },
  {
    "text": "[NOISE] All right. So our domains are gonna be MNIST and CIFAR because this is really computationally expensive.",
    "start": "1024420",
    "end": "1030735"
  },
  {
    "text": "So the first thing we ran into when we tried this is that, uh- it's very unstable. So this is what would happen when we tried to train,",
    "start": "1030735",
    "end": "1036345"
  },
  {
    "text": "and then Felipe came up with a really good idea which was to take this idea from, uh, Salimans & Kingma,",
    "start": "1036345",
    "end": "1041775"
  },
  {
    "text": "which is weight normalization. And just reparameterize the weight vector w into a v vector, normalize,",
    "start": "1041775",
    "end": "1048870"
  },
  {
    "text": "and then by la- multiply by a scalar g, and then we learn both the weight vector and that scalar,",
    "start": "1048870",
    "end": "1054329"
  },
  {
    "text": "and that dramatically improves the stability of meta-learning. Uh, so to show you that- here,",
    "start": "1054329",
    "end": "1059909"
  },
  {
    "text": "these are different hyperparameters of the algorithm without weight normalization and with weight normalization.",
    "start": "1059910",
    "end": "1064950"
  },
  {
    "text": "So before we did this, we were having a lot of trying. We spent a lot of time and compute, trying to find the hyperparameters that would make this thing work.",
    "start": "1064950",
    "end": "1071190"
  },
  {
    "text": "And then after we did this, it was just trivial for everything just kinda worked. So we, as a side note,",
    "start": "1071190",
    "end": "1076260"
  },
  {
    "text": "hypothesize that this might be a good trick for all meta-learning. We're gonna try to do a whole paper just on that. Uh, but if your- if your project's not working,",
    "start": "1076260",
    "end": "1083940"
  },
  {
    "text": "I recommend you try this one line code change here, it might really, really help. Here's a look at the performance difference between weight norm and not.",
    "start": "1083940",
    "end": "1091680"
  },
  {
    "text": "This was the unstable one, and this is the performance curve with weight normalization. So now that you see that,",
    "start": "1091680",
    "end": "1097664"
  },
  {
    "text": "I just want to stop and say, it worked, like we didn't know we started this, but then it would be possible to generate data, learn and consume,",
    "start": "1097665",
    "end": "1104580"
  },
  {
    "text": "and then do well on real data when the learner has never seen real data. But it turns out that it does work.",
    "start": "1104580",
    "end": "1110159"
  },
  {
    "text": "So this is performance with the GTN, it gets about 97.5% on MNIST.",
    "start": "1110160",
    "end": "1115455"
  },
  {
    "text": "So my question to you is, what are the samples look like? What do you think? Do you think that look realistic or unrealistic?",
    "start": "1115455",
    "end": "1125830"
  },
  {
    "text": "Unrealistic. Unrealistic. We have one brave soul who's willing to speak up. Here's what the samples look like.",
    "start": "1125830",
    "end": "1132255"
  },
  {
    "text": "I would mostly agree with you. They- I mean you can tell that they're digits. You can tell this is MNIST.",
    "start": "1132255",
    "end": "1138030"
  },
  {
    "text": "But they look pretty alien and weird, which I think is quite surprising. But the interesting thing is you can train a network on these digits and then it can",
    "start": "1138030",
    "end": "1145680"
  },
  {
    "text": "do just fine on real MNIST digits which is kind of crazy. Some of them look really- pretty recognizable like",
    "start": "1145680",
    "end": "1151380"
  },
  {
    "text": "this three here and some of them like totally alien, like this four, there.",
    "start": "1151380",
    "end": "1156560"
  },
  {
    "text": "And so the idea that unrecognizable images can meaningfully affect neural networks, is reminiscent of this finding we had on our paper from 2015,",
    "start": "1156560",
    "end": "1163550"
  },
  {
    "text": "\"Deep Neural Nets Are Easily Fooled, \" which I think is quite interesting. And we have lots of hypotheses for why these,",
    "start": "1163550",
    "end": "1168700"
  },
  {
    "text": "uh, GTN samples are unrecognizable. So if you're interested in that, you can ask me that in the Q&A, Q&A at the end of the talk,",
    "start": "1168700",
    "end": "1174794"
  },
  {
    "text": "but we're still kinda speculative, so I didn't put it in the core of the talk. All right. So the next thing we noticed is that instead of randomly sampling this Z code here,",
    "start": "1174795",
    "end": "1183450"
  },
  {
    "text": "we can do even better because if you really want to teach somebody fast, you shouldn't just give them random data. You should teach them with a curriculum.",
    "start": "1183450",
    "end": "1189675"
  },
  {
    "text": "So instead what we can do is we can cross off the noise generator and we can a put a- put a learned tensor here.",
    "start": "1189675",
    "end": "1195210"
  },
  {
    "text": "So now what we're gonna do is we're going to just learn the block of Z codes, the fixed block that we're gonna use throughout training.",
    "start": "1195210",
    "end": "1200835"
  },
  {
    "text": "And the Z code is this length by the batch size and then this is the number of inter-loop steps that you do,",
    "start": "1200835",
    "end": "1206310"
  },
  {
    "text": "and then you just learn each one of those numbers and pass that in to the network. So we found that,",
    "start": "1206310",
    "end": "1212490"
  },
  {
    "text": "that greatly boosted performance. Here is your learning curriculum versus your no curriculum, right here.",
    "start": "1212490",
    "end": "1217559"
  },
  {
    "text": "And so from here on out, all of the results I'm going to show are with the curriculum version of GTNs.",
    "start": "1217560",
    "end": "1223155"
  },
  {
    "text": "Okay. So here's the first like really, really kinda fun comparison of real data to synthetic data.",
    "start": "1223155",
    "end": "1229245"
  },
  {
    "text": "What you find is that if you only have 32 steps of SGD, it is way faster to train on GTN produced",
    "start": "1229245",
    "end": "1236174"
  },
  {
    "text": "meta-learned synthetic data than it is to just take real data and train on it. So real data is this blue curve here.",
    "start": "1236174",
    "end": "1243390"
  },
  {
    "text": "So my first pop quiz to the class, why is that line going up? If it's just real data,",
    "start": "1243390",
    "end": "1250035"
  },
  {
    "text": "why does it go up over time? [NOISE]",
    "start": "1250035",
    "end": "1260160"
  },
  {
    "text": "Anybody? Yes. Because we are learning hyperparameters? Yes. Thank you.",
    "start": "1260160",
    "end": "1265860"
  },
  {
    "text": "I was gonna call on you first. Uh, yes, that's right. Remember, we're learning the hyperparameters of the real data algorithm too.",
    "start": "1265860",
    "end": "1271559"
  },
  {
    "text": "So it's getting a better SGD momentum and things like that over time. Yes? So did you backpropagate to 32 steps?",
    "start": "1271560",
    "end": "1277530"
  },
  {
    "text": "Yes. Did you- Yes. That's right. And in fact, what we'll see later is we can do even farther than that.",
    "start": "1277530",
    "end": "1283785"
  },
  {
    "text": "I think we got up to 128 and maybe Felipe- Felipe is amazing. He was able to push it even farther than that, I believe.",
    "start": "1283785",
    "end": "1290070"
  },
  {
    "text": "But those results are not in this paper. All right, cool. So the blue curve is real data,",
    "start": "1290070",
    "end": "1295440"
  },
  {
    "text": "eventually, it gets us good hyperparameters and it's stuck. This is dataset distillation, 100 samples directly pixel by pixel learned.",
    "start": "1295440",
    "end": "1301590"
  },
  {
    "text": "And this is when you have a generator which can take the advantage of all sorts of regularities across examples, dconf, priors, etc., etc.",
    "start": "1301590",
    "end": "1307980"
  },
  {
    "text": "That's- this is outer loop training. So this is meta-learning. This is inner loop training. It's a little bit noisy, but this is real data and this is the,",
    "start": "1307980",
    "end": "1314940"
  },
  {
    "text": "uh, the GTN data. And what we basically found is that it is, uh, faster to train on this data.",
    "start": "1314940",
    "end": "1321750"
  },
  {
    "text": "So what we wanted then to do is go back to the original motivation, which is neural architecture search and say, can we use this synthetic data to more rapidly",
    "start": "1321750",
    "end": "1328260"
  },
  {
    "text": "figure out what architectures are good in the search space? Uh, and so we're gonna do this in CIFAR because that",
    "start": "1328260",
    "end": "1333390"
  },
  {
    "text": "is the standard NAS benchmark that everybody has been working on. And if you look at CIFAR, the story is basically the same as with MNIST.",
    "start": "1333390",
    "end": "1340095"
  },
  {
    "text": "This is real data over time. And this is GTN over time. And you can see that it performs way better.",
    "start": "1340095",
    "end": "1346470"
  },
  {
    "text": "And then this is-that was outer loop. On the inner loop, you can see that- and you can basically get the fa- the performance, uh,",
    "start": "1346470",
    "end": "1352470"
  },
  {
    "text": "of real data at 128 iterations, four times faster with GTN or for the same budget you can go to a better performance.",
    "start": "1352470",
    "end": "1360210"
  },
  {
    "text": "And so this is way faster to, uh, to learn on. Now like with MNIST, the samples here are pretty weird,",
    "start": "1360210",
    "end": "1367184"
  },
  {
    "text": "pretty unrecognizable, and pretty alien. I mean, you can kinda tell that CIFAR, if you've been looking at CIFAR images for way too long, which I have.",
    "start": "1367185",
    "end": "1373650"
  },
  {
    "text": "Uh, but yeah, you can't really recognize what any of these things are versus real CIFAR images. But yet, if you train on these,",
    "start": "1373650",
    "end": "1379720"
  },
  {
    "text": "you end up performing really well. So now the ultimate thing that matters in architecture search is not the actual performance of your learner,",
    "start": "1379720",
    "end": "1386870"
  },
  {
    "text": "after learning, because we don't care about its real performance after 128 sets. What we care is if the estimated performance after we do that 128 steps of SGD,",
    "start": "1386870",
    "end": "1395629"
  },
  {
    "text": "by the way that's 128, I don't know if you noticed it, but the CIFAR ones, uh, go for 128, so even longer.",
    "start": "1395629",
    "end": "1402365"
  },
  {
    "text": "Anyway the- uh, what you care about is after 128, then we think this architecture is pretty good or pretty bad.",
    "start": "1402365",
    "end": "1408280"
  },
  {
    "text": "Does that actually correlate with the true asymptotic performance if I take that same architecture and I train it",
    "start": "1408280",
    "end": "1414140"
  },
  {
    "text": "forever on real CIFAR data or whatever my domain is? And what we found is that there is actually a pretty good correlation.",
    "start": "1414140",
    "end": "1420230"
  },
  {
    "text": "So the top 50% of GTN architecture. So the architectures that GTN thinks are the best,",
    "start": "1420230",
    "end": "1425795"
  },
  {
    "text": "tend to also be the best when you train them much, much, much longer on real data. And in fact, in the, uh,",
    "start": "1425795",
    "end": "1431900"
  },
  {
    "text": "in the top 50% that correlation is 0.56 and if you take the top 10 GTN architectures,",
    "start": "1431900",
    "end": "1437870"
  },
  {
    "text": "they are basically also a lot of them are in the top 10 of true performance. So it doesn't matter that you pick this one which isn't",
    "start": "1437870",
    "end": "1443480"
  },
  {
    "text": "actually good because you also pick this one which is good. So as long as you get enough of those, you're fine. And so, um, also what we found is that you can get as good of a rank correlation with",
    "start": "1443480",
    "end": "1454460"
  },
  {
    "text": "the fake synthetic data as training on real data for in 128 steps of GTN versus 1,200 steps on real data.",
    "start": "1454460",
    "end": "1463700"
  },
  {
    "text": "So to get the same rank correlation, you can either spend 128 fake data steps or 1,200 real data steps,",
    "start": "1463700",
    "end": "1469025"
  },
  {
    "text": "which means that GTN is 9X faster, giving you that estimated performance for that new architecture that you've never trained before. [NOISE]",
    "start": "1469025",
    "end": "1475565"
  },
  {
    "text": "So, um, that's pretty exciting, and what that allowed us to do is basically, um, produce something that is competitive with",
    "start": "1475565",
    "end": "1481400"
  },
  {
    "text": "the state of the art for neural architecture search. So, uh, what we- because GTN is a drop-in replacement for real data,",
    "start": "1481400",
    "end": "1487490"
  },
  {
    "text": "we didn't do this with really fancy neural architecture search algorithms because these are often really expensive, we just took random search.",
    "start": "1487490",
    "end": "1492515"
  },
  {
    "text": "We either did it with real data or fake data, and then we added some tricks that people use and basically what you find in every paper in machine learning is that our method is bolded, because it works.",
    "start": "1492515",
    "end": "1501605"
  },
  {
    "text": "Um, but what this is pretty cool is what it means is that, you know, in just a few GPU days, you can basically find something that's near state-of-the-art in CIFAR,",
    "start": "1501605",
    "end": "1510125"
  },
  {
    "text": "uh, computation, ah, using this sort of tricks. And what's also interesting is that, er, there are other neural architecture search algorithms,",
    "start": "1510125",
    "end": "1517855"
  },
  {
    "text": "like I mentioned, that do more fancy things but their innovations are orthogonal to using fake data versus real data.",
    "start": "1517855",
    "end": "1523160"
  },
  {
    "text": "So you can hybridize this GTN technique with them and they would perform even better. We haven't done that yet because we're not NAS experts,",
    "start": "1523160",
    "end": "1529910"
  },
  {
    "text": "but we think that's an interesting direction for future work. So the next thing I want to point out which is really provocative but also fair warning,",
    "start": "1529910",
    "end": "1536809"
  },
  {
    "text": "it's preliminary, is that this idea should work really really well for reinforcement learning. Not a lot of people do architecture search on reinforcement learning,",
    "start": "1536810",
    "end": "1543650"
  },
  {
    "text": "but I think that will change if you think back to the AI-GA paradigm. So here's pole balancing which is admittedly very simple.",
    "start": "1543650",
    "end": "1550340"
  },
  {
    "text": "And what you see here this is A2C over time, and this is the performance up to that environment step.",
    "start": "1550340",
    "end": "1556804"
  },
  {
    "text": "The blue line here is taking a new neural net at every single iteration here,",
    "start": "1556805",
    "end": "1562220"
  },
  {
    "text": "a new neural net and doing one step of SGD with synthetic data. Which means that this red line point here",
    "start": "1562220",
    "end": "1570170"
  },
  {
    "text": "took 100,000 steps and this blue line point here, it took 100,000 steps to train up the GTN but at that point,",
    "start": "1570170",
    "end": "1577160"
  },
  {
    "text": "I can zap in the knowledge of how to do pole balancing into that new neural network in one SGD step. So if I stopped and launched architecture search right there,",
    "start": "1577160",
    "end": "1584575"
  },
  {
    "text": "with a whole lot of caveats like does it, does it actually, is a predictive, you know, out of distribution on new architectures, etc,",
    "start": "1584575",
    "end": "1590030"
  },
  {
    "text": "that's 100,000 times faster. Now I don't expect that to hold up on a much harder problem, but the same ideas that worked in supervising learning",
    "start": "1590030",
    "end": "1596270"
  },
  {
    "text": "might also work here in RL and actually, I would argue that they're probably gonna work even better. Why? Because in RL,",
    "start": "1596270",
    "end": "1601940"
  },
  {
    "text": "the hard part is exploration. But once you've learned how to solve the problem, you can teach the next network how to solve",
    "start": "1601940",
    "end": "1607460"
  },
  {
    "text": "that problem really really fast and see how good it is, at least at performing the problem, which is a little bit of a subtle different question",
    "start": "1607460",
    "end": "1612680"
  },
  {
    "text": "for whether or not it's good to learning the problem. So it depends on what you want that, uh, architecture search for. But anyway, I thought that was interesting. All right.",
    "start": "1612680",
    "end": "1619590"
  },
  {
    "text": "So this is the conclusion to the first mini talk within this talk or the second one if you count AI-GAs and this is for GTNs.",
    "start": "1619590",
    "end": "1626990"
  },
  {
    "text": "So GTNs produce synthetic data that trains neural nets faster than real data. It generalizes to new architectures,",
    "start": "1626990",
    "end": "1633410"
  },
  {
    "text": "which it has never seen before. It enables, I should have said by the way, when we train a GTN, we train our distribution of architectures,",
    "start": "1633410",
    "end": "1639170"
  },
  {
    "text": "but then when we tested it, we test it out on wildly different architectures because the neural architecture search goes really far away from that initial distribution,",
    "start": "1639170",
    "end": "1645335"
  },
  {
    "text": "and we found that correlation works quite well even on those totally different architectures. Uh, it enables you to rapidly estimate the performance of new architectures,",
    "start": "1645335",
    "end": "1653030"
  },
  {
    "text": "er, and we think this is a really generic approach. It could work with supervised learning, unsupervised learning,",
    "start": "1653030",
    "end": "1658910"
  },
  {
    "text": "semi-supervised learning and RL and we mostly focused on this and then showed you a little preliminary results on RL.",
    "start": "1658910",
    "end": "1665540"
  },
  {
    "text": "It also produced a state of the art, uh, competitive architecture search algorithm but through a totally different means,",
    "start": "1665540",
    "end": "1672530"
  },
  {
    "text": "which is like an exciting new tool to have in the toolbox for neural architecture search. Cool. All right.",
    "start": "1672530",
    "end": "1679415"
  },
  {
    "text": "So that is the first pillar, meta-learned architectures. Now we're going to get into the home turf of this class which is meta-learning.",
    "start": "1679415",
    "end": "1686960"
  },
  {
    "text": "And so the way that I see the world and I hope this doesn't conflict too much with Chelsea's summary of the field from that in the other lectures,",
    "start": "1686960",
    "end": "1694700"
  },
  {
    "text": "is that there are, kind of, two large camps of meta-learning. One of them I think is that you meta-learn good initial weights and then you hand it over to SGD and you.",
    "start": "1694700",
    "end": "1703400"
  },
  {
    "text": "Er, let it, let it go and I would say that's, kind of, the MAML style that Chelsea is pioneering,",
    "start": "1703400",
    "end": "1709115"
  },
  {
    "text": "and then I would say the other camp is this kind of idea that you're just going to meta-learn a recurrent neural network and",
    "start": "1709115",
    "end": "1714245"
  },
  {
    "text": "it itself is going to invent its own learning algorithm within, it's not going to use SGD at inference time,",
    "start": "1714245",
    "end": "1719630"
  },
  {
    "text": "it's just going to use the activations within the network to kind of create its own learning algorithm. This is the learning to reinforcement learning Jane Wang paper,",
    "start": "1719630",
    "end": "1726664"
  },
  {
    "text": "and also the RL squared paper that came out at the same time from Rocky Duan and those at OpenAI.",
    "start": "1726665",
    "end": "1732154"
  },
  {
    "text": "I think they're both awesome, both really interesting, you'll see work in this talk on both of them but I like to give that high-level picture,",
    "start": "1732155",
    "end": "1738260"
  },
  {
    "text": "and so let's just quickly focus on the second camp, I know you know the first camp very well, probably know both of them but this is the LRL camp.",
    "start": "1738260",
    "end": "1744690"
  },
  {
    "text": "So in the outer loop, you optimize a recurrent neural net with parameters theta for lifetime performance.",
    "start": "1744690",
    "end": "1750470"
  },
  {
    "text": "So you take this neural net, you deploy it in a world, say like Montezuma's Revenge, you let it play, you see how well it does,",
    "start": "1750470",
    "end": "1756605"
  },
  {
    "text": "and then either you differentiate back to the original parameters of theta, so you- the next time you deploy that net it's a little bit",
    "start": "1756605",
    "end": "1762355"
  },
  {
    "text": "better or you could do like an evolutionary algorithm and just, you know, mutate the parameters and see if it does better etc.",
    "start": "1762355",
    "end": "1767960"
  },
  {
    "text": "etc. So you have the outer loop thing optimizing that initial neural net and then you deploy it and there's no SGD going on within its lifetime if you- I like that metaphor of a lifetime.",
    "start": "1767960",
    "end": "1776750"
  },
  {
    "text": "Um, it does get the reward as an input. So it can actually implement its own reinforcement learning algorithm.",
    "start": "1776750",
    "end": "1782045"
  },
  {
    "text": "Now, RNNs are Turing complete, so in theory this thing can implement any learning algorithm that's out there which is,",
    "start": "1782045",
    "end": "1787640"
  },
  {
    "text": "kind of, exciting, um, and what was nice is that in this paper here, they show that it learns on its own in RL to",
    "start": "1787640",
    "end": "1794720"
  },
  {
    "text": "exploit and- to explore and exploit which is kinda cool. So you put it in this maze here,",
    "start": "1794720",
    "end": "1800530"
  },
  {
    "text": "it doesn't know where the reward, is it explores over here, then over here, then over here, then over here, and once it finds the reward,",
    "start": "1800530",
    "end": "1806480"
  },
  {
    "text": "it changes the activations within its own network to stamp in that knowledge, is to learn where to go and then it goes back there over",
    "start": "1806480",
    "end": "1812120"
  },
  {
    "text": "and over again which are all the blue dots here, and you can see it vastly outperforms A3C which doesn't have that capability.",
    "start": "1812120",
    "end": "1818825"
  },
  {
    "text": "Um, they also show, which is really interesting, that it kind of invents, maybe,",
    "start": "1818825",
    "end": "1823895"
  },
  {
    "text": "its own model-based RL algorithm within its activations and they have some arguments in here but there are also some caveats.",
    "start": "1823895",
    "end": "1830540"
  },
  {
    "text": "So I encourage you to go check it out but I think it's provocative. So the thing that I'm going to put out there for",
    "start": "1830540",
    "end": "1836570"
  },
  {
    "text": "this talk is some new work that's pushing in this direction is while it's great to think about an RNN as Turing Complete,",
    "start": "1836570",
    "end": "1841895"
  },
  {
    "text": "oftentimes just being Turing complete that- isn't enough. We're not going to actually search for AGI in the space of Turing machines.",
    "start": "1841895",
    "end": "1848630"
  },
  {
    "text": "It's a very inefficient representation to have your program run in. So the idea here is that materials matter.",
    "start": "1848630",
    "end": "1854450"
  },
  {
    "text": "You still have to choose those building blocks when you go to do meta-learning. And so, um, you know,",
    "start": "1854450",
    "end": "1859985"
  },
  {
    "text": "LRL/RL squared, those recurrent neural networks, they have to learn everything within their activations,",
    "start": "1859985",
    "end": "1865549"
  },
  {
    "text": "that's not how you learn. In your life, if you learn something in this class, for example, it is not just looping around in the firing of your neurons.",
    "start": "1865550",
    "end": "1873125"
  },
  {
    "text": "That's what happens if I give you like my telephone number and you have to remember it for a couple of seconds. But, if you remember something for, uh,",
    "start": "1873125",
    "end": "1878150"
  },
  {
    "text": "anything longer than about that, it's going into the weights of your brain and not in the activations of your brain. And so one of the things we could do is we could try to get learning to happen",
    "start": "1878150",
    "end": "1886130"
  },
  {
    "text": "within the weights of the neural net not just its activations. So the first paper in this arc here is Differentiable Hebbian Learning.",
    "start": "1886130",
    "end": "1893825"
  },
  {
    "text": "This is work that's done by myself, Thomas Miconi, and Ken Stanley. And I really want to highlight Thomas here who's really been",
    "start": "1893825",
    "end": "1899840"
  },
  {
    "text": "pioneering this direction both on this paper and the next paper I'm going to tell you about. He's a fantastic scientist.",
    "start": "1899840",
    "end": "1905120"
  },
  {
    "text": "So the idea here is that we're going to deal with Hebbian Learning. How many of you are familiar with Hebbian Learning?",
    "start": "1905120",
    "end": "1911790"
  },
  {
    "text": "About 40%. Okay. So the idea that Hebbian Learning is that you",
    "start": "1911950",
    "end": "1918409"
  },
  {
    "text": "can store information in the weights of the network in addition to the activations. You can now get to use both. But, what's different about this work than anything you've ever heard of",
    "start": "1918410",
    "end": "1926240"
  },
  {
    "text": "before is that we're going to train the Hebbian learning with SGD. So we're going to be able to take advantage of that very powerful tool",
    "start": "1926240",
    "end": "1933160"
  },
  {
    "text": "to sculpt very carefully tuned Hebbian parameters. So just like LRL/RL squared,",
    "start": "1933160",
    "end": "1939865"
  },
  {
    "text": "we're going to have a recurrent neural network that's going to be deployed at inference time and it's going to have no SGD inside it.",
    "start": "1939865",
    "end": "1945710"
  },
  {
    "text": "But now, it's going to be able to use Hebbian learning to do so not just like change its own activations.",
    "start": "1945710",
    "end": "1951970"
  },
  {
    "text": "So the one slide summary of Hebbian learning is that neurons that fire together, wire together.",
    "start": "1951970",
    "end": "1957290"
  },
  {
    "text": "You've probably heard that phrase is how quickly it's- it's usually described. So here's how it works, the new weight in the network,",
    "start": "1957290",
    "end": "1963590"
  },
  {
    "text": "so the weight- the network- the weight between i and j at time t plus 1 equals the old weight plus a little bit,",
    "start": "1963590",
    "end": "1969810"
  },
  {
    "text": "this is just a learning parameter, a learning rate parameter, of the output of the post and pre-synaptic neuron firings.",
    "start": "1969810",
    "end": "1976840"
  },
  {
    "text": "So if the neurons both fire in the same direction both positive or both negative, you get a positive value, the weight increases.",
    "start": "1976840",
    "end": "1982580"
  },
  {
    "text": "If they both- if they fire in the opposite way, so one fired positively, one fired negatively, you get a negative value and the weight decreases.",
    "start": "1982580",
    "end": "1989330"
  },
  {
    "text": "And so these will kind of reinforce themselves. Now, that might sound like it's hopeless and will never do anything interesting.",
    "start": "1989330",
    "end": "1995135"
  },
  {
    "text": "But in fact, people for a long time have been showing that this kind of unsupervised learning rule can do lots of really powerful",
    "start": "1995135",
    "end": "2000880"
  },
  {
    "text": "unsupervised learning including like PCA and associative recall where you give a few numbers of a phone number,",
    "start": "2000880",
    "end": "2006610"
  },
  {
    "text": "a few digits of a phone number, and then it will return like the full phone number. You give it a few notes of a song and like the whole rest of the song comes back,",
    "start": "2006610",
    "end": "2013945"
  },
  {
    "text": "and this is happening in your brain. Uh, neuroscientists had been showing for a long time. So what we're going to do here is we're going to do Differentiable Hebbian Learning.",
    "start": "2013945",
    "end": "2023440"
  },
  {
    "text": "And so the idea is that we're going to set up Hebb's rule inside of a neural net and then we're going to let SGD sculpt its parameters.",
    "start": "2023440",
    "end": "2029425"
  },
  {
    "text": "So here's how this works. You take a recurrent, we're going to call it a plastic network because the weights themselves can",
    "start": "2029425",
    "end": "2035169"
  },
  {
    "text": "change and we're going to train it end to end with gradients. So in the inner loop, the net- network ends up updating with no SGD.",
    "start": "2035170",
    "end": "2042090"
  },
  {
    "text": "It's just kind of going through its own motions and updating itself according to these Hebbian learning rules. And then in the outer loop,",
    "start": "2042090",
    "end": "2047890"
  },
  {
    "text": "we're going to differentiate through the entire episode to update the training parameters with SGD. This is a little confusing because we're using SGD in the outer loop,",
    "start": "2047890",
    "end": "2057179"
  },
  {
    "text": "but not on the inner loop. So here's how it works. The- the, uh, output of any given neuron is going to be a non-linear- non-linearity and",
    "start": "2057180",
    "end": "2065960"
  },
  {
    "text": "then your typical weighted sum where you have- now the weights here where typical- the typical weighted center where you have a weight,",
    "start": "2065960",
    "end": "2071575"
  },
  {
    "text": "which is the whole parenthesis here, times the incoming activation. But, what you have is a fixed part.",
    "start": "2071575",
    "end": "2077625"
  },
  {
    "text": "So this is the normal, kind of like a normal weight. This is just learned by, uh, SGD and then you have this plastic parts.",
    "start": "2077625",
    "end": "2083504"
  },
  {
    "text": "So inside the lifetime of the organism this component of the weight will change, and then this gets added to this,",
    "start": "2083505",
    "end": "2089530"
  },
  {
    "text": "and so the weight over time can change. That makes sense? So this Alpha here is a term that allows",
    "start": "2089530",
    "end": "2099030"
  },
  {
    "text": "each weight to have a different ratio of the fixed part and the plastic part.",
    "start": "2099030",
    "end": "2105445"
  },
  {
    "text": "So SGD can choose. These weights over here, we always need them to be set to these values. So just crank Alpha to 0 and we'll only use the green part of the weight.",
    "start": "2105445",
    "end": "2113780"
  },
  {
    "text": "These other weights here can be a mixture of both and these weights over here can be like entirely plastic, and have no fixed component whatsoever, and everything in between.",
    "start": "2113780",
    "end": "2120740"
  },
  {
    "text": "So SGD gets control Alpha in this case. And then, what is Alpha being multiplied by? Well, we call this the Hebbian trace here,",
    "start": "2120740",
    "end": "2127190"
  },
  {
    "text": "this h. This is a purely lifetime quality- quantity. Gets initialized to zero every time.",
    "start": "2127190",
    "end": "2132210"
  },
  {
    "text": "And then, the way that it works is that the new Hebbian trace is just equal to a frac- like the old Hebbian trace,",
    "start": "2132210",
    "end": "2139240"
  },
  {
    "text": "a bit of that, and then also a bit of whether or not the neurons fire together, so it should wire together.",
    "start": "2139240",
    "end": "2145400"
  },
  {
    "text": "That'll make sense? Cool. So what we found on",
    "start": "2145650",
    "end": "2150890"
  },
  {
    "text": "a variety of experiences that this works remarkably well and often really does better than LSDMs,",
    "start": "2150890",
    "end": "2156040"
  },
  {
    "text": "and otherwise non-plastic recurrent networks. So on this, um, task here,",
    "start": "2156040",
    "end": "2161380"
  },
  {
    "text": "an Omniglot at the time this was tied for state of the art with Chelsea. Here- here you go and some other, uh, papers.",
    "start": "2161380",
    "end": "2167455"
  },
  {
    "text": "And basically, it does about as well, but uses this totally different method which we think is really interesting. You can also take, uh,",
    "start": "2167455",
    "end": "2173665"
  },
  {
    "text": "this neural net here and you can take this really simple like kind of associative recall pattern recognizing thing.",
    "start": "2173665",
    "end": "2179115"
  },
  {
    "text": "So you might give it a series of patterns here, and then you give it a partial pattern,",
    "start": "2179115",
    "end": "2184204"
  },
  {
    "text": "and its job is to fill in what it saw. So this is kinda like I give you a bunch of phone numbers. I give you a few digits from one of the phone numbers that you",
    "start": "2184205",
    "end": "2190480"
  },
  {
    "text": "saw and you have to give me the rest of that particular phone number. And what we show there is that an LSD, uh, sorry,",
    "start": "2190480",
    "end": "2196040"
  },
  {
    "text": "a non-plastic recurrent neural net does not perform very well on this task. LSDMs actually, ultimately, perform well,",
    "start": "2196040",
    "end": "2202569"
  },
  {
    "text": "but look how much faster the Hebbian network learns this task. Uh, so there's a pretty dramatic difference there.",
    "start": "2202570",
    "end": "2208045"
  },
  {
    "text": "And then we went to a much harder version of this. And we said, \"All right. We're going to give the network of series of images.\"",
    "start": "2208045",
    "end": "2213384"
  },
  {
    "text": "So this is now a pretty high dimensional search space. We're going to flash these images, and then will flash it half of one of the images,",
    "start": "2213384",
    "end": "2219559"
  },
  {
    "text": "and it has to fill in the rest of that image. And it has to be able to do that with an image that it's never seen before.",
    "start": "2219560",
    "end": "2225414"
  },
  {
    "text": "So this is a lot of high density information storage, right? You get shown like a couple of images and then you have",
    "start": "2225415",
    "end": "2230650"
  },
  {
    "text": "to remember every pixel from every one of those, so you can reconstruct it when you only see half of it. Storing all that information in your activations might be very hard,",
    "start": "2230650",
    "end": "2238200"
  },
  {
    "text": "but the Hebbian learning makes it easier because you can use the weights to do it. Sorry. So, uh, I don't have a plot here. LSDMs couldn't even solve it and our network actually does quite well at solving that.",
    "start": "2238200",
    "end": "2247270"
  },
  {
    "text": "And then, that's worth two million parameters which is kind of interesting because in the history of the Hebbian learning, it's always tiny little neural nets.",
    "start": "2247270",
    "end": "2254125"
  },
  {
    "text": "And so now, we're able to scale Hebbian learning up to two million plus parameters which is kind of a new era for Hebbian learning, which is pretty interesting.",
    "start": "2254125",
    "end": "2261100"
  },
  {
    "text": "So the next task that we have here is maze navigation. And so, uh, this is kind of cool because it learns,",
    "start": "2261100",
    "end": "2268090"
  },
  {
    "text": "again, on its own to explore and exploit. So you drop an agent, which is this, uh, yellow thing, here in this maze.",
    "start": "2268090",
    "end": "2274964"
  },
  {
    "text": "It can only see its local neighborhood. It has no idea where it is and what it's supposed to do. What it eventually figures out over meta optimization is like, oh, I see.",
    "start": "2274965",
    "end": "2283420"
  },
  {
    "text": "You want me to explore this maze. And then the second I get to the green thing, you want me to go back to it as many times as possible.",
    "start": "2283420",
    "end": "2288870"
  },
  {
    "text": "That's the reward function. So the initial random network you see here it just kind of bops around. It does nothing, as you would expect.",
    "start": "2288870",
    "end": "2294645"
  },
  {
    "text": "But then, look at this thing. What it basically, I don't know- yes. So the first time it has to explore until it finds",
    "start": "2294645",
    "end": "2301119"
  },
  {
    "text": "this green thing and then it just shoots right back to it every single time. So it has remembered the maze. It knows how to explore that maze.",
    "start": "2301120",
    "end": "2307390"
  },
  {
    "text": "It knows how to find the treasure and then it knows how to return to it over, and over, and over again, which is pretty cool. So this is Learning to Reinforcement Learning/RL squared down here.",
    "start": "2307390",
    "end": "2316109"
  },
  {
    "text": "This, uh, [NOISE] black curve.",
    "start": "2316110",
    "end": "2321370"
  },
  {
    "text": "No, sorry. The non-plastic one, red. And what you see, this is what like a normal LSDM does for example.",
    "start": "2321370",
    "end": "2327435"
  },
  {
    "text": "And then, uh, if you just have uniform plasticity, so you don't get to learn a per weight Alpha,",
    "start": "2327435",
    "end": "2333685"
  },
  {
    "text": "but just one Alpha for the whole network, it also doesn't work. It's only once you give the degree of freedom to SGD to",
    "start": "2333685",
    "end": "2339070"
  },
  {
    "text": "have that per weight Alpha within the network that it can do much, much better on this task, which I think is pretty interesting.",
    "start": "2339070",
    "end": "2345860"
  },
  {
    "text": "Okay. Any questions about that? Yeah. There's one right there. [BACKGROUND]",
    "start": "2346140",
    "end": "2357005"
  },
  {
    "text": "I'm now forgetting whether it saw them all at training.",
    "start": "2357005",
    "end": "2362164"
  },
  {
    "text": "I think I'm pretty sure that it, uh, at test time, we show a new images, and I can do this task. Yeah. Virtually sure that we would have done that,",
    "start": "2362165",
    "end": "2370850"
  },
  {
    "text": "but- I'd have to check the paper. I'd spent a little while since I read it. Cool, yeah? [NOISE] [BACKGROUND]",
    "start": "2370850",
    "end": "2409680"
  },
  {
    "text": "Yeah. I think that's a fair thing to think about. I mean, there's- obviously, you can store information and activations. You can store it kind of to disk in",
    "start": "2409680",
    "end": "2416690"
  },
  {
    "text": "the differentiable storage and you can store it to weights. and I think there's gonna be pros and cons to the different approaches.",
    "start": "2416690",
    "end": "2422660"
  },
  {
    "text": "But I thi- both- I think it's kind of attention with the differentiable plasticity is that the weights",
    "start": "2422660",
    "end": "2428255"
  },
  {
    "text": "are a part of the- kind of like computation, and so, um, that has pros and cons like the-",
    "start": "2428255",
    "end": "2433984"
  },
  {
    "text": "the DNC style stuff you kind of write it to disk and then it becomes like the input to this program. Whereas, in the Hebbian cage,",
    "start": "2433985",
    "end": "2439490"
  },
  {
    "text": "you kinda get to change the program on the fly, and so, uh, it's very hand-wavy but I think in some situations one is gonna be easier than the other,",
    "start": "2439490",
    "end": "2447290"
  },
  {
    "text": "and I don't think we know yet really where like which type of problem one shines on versus another.",
    "start": "2447290",
    "end": "2453289"
  },
  {
    "text": "Um, I think you could get a DNC to do the image completion task, uh, for example.",
    "start": "2453290",
    "end": "2461600"
  },
  {
    "text": "But my guess is that there are gonna be other types of tasks where you really kinda wanna bend the program in different ways temporarily",
    "start": "2461600",
    "end": "2467720"
  },
  {
    "text": "that it's gonna be hard to mold the DNC to have like a generic function that takes different inputs and does wildly different things as",
    "start": "2467720",
    "end": "2473510"
  },
  {
    "text": "opposed to kinda changing a few ways to change the program. It's just my instincts. But that's like a really interesting area",
    "start": "2473510",
    "end": "2479450"
  },
  {
    "text": "of work just to compare these different approaches to storing information. Great, those are good questions.",
    "start": "2479450",
    "end": "2486125"
  },
  {
    "text": "Okay. I'll push on. So the next thing that we wanted to look at was a subject that's near and dear to my heart.",
    "start": "2486125",
    "end": "2492020"
  },
  {
    "text": "I've worked on this in my lab in Wyoming on smaller neural networks, and now we're getting to see it at scale, and that's the idea of neural modulation.",
    "start": "2492020",
    "end": "2499325"
  },
  {
    "text": "And so here, the idea is that, uh, this comes from another paper that was led by Thomas. It's also written by Rawal et al.",
    "start": "2499325",
    "end": "2505550"
  },
  {
    "text": "Um, but Thomas did the heavy lifting here. And so the idea here is we're gonna do Differentiable Neuromodulated Hebbian plasticity,",
    "start": "2505550",
    "end": "2511490"
  },
  {
    "text": "so it's taking it one step further. And the idea is that Hebbian learning is very local. If the- you know, every little connection is kind of",
    "start": "2511490",
    "end": "2518420"
  },
  {
    "text": "getting updated according to the data that's flying through it. It's a very difficult optimization process to kind of harness and, uh, and heard.",
    "start": "2518420",
    "end": "2525470"
  },
  {
    "text": "And so what you might want is that you want learning in a set of like a certain subset of the weights only in certain situations.",
    "start": "2525470",
    "end": "2532625"
  },
  {
    "text": "Like maybe once I've learned to solve the problem, I want like all the ways to just stay put and not do anything. I don't want the heavy and bouncing around,",
    "start": "2532625",
    "end": "2538835"
  },
  {
    "text": "and so I want to like freeze learning. But then if something happens, that I might wanna like crank learning up. But I might not wanna crank it up everywhere,",
    "start": "2538835",
    "end": "2544670"
  },
  {
    "text": "I might wanna crank it only up in the part of the network that was responsible for the task I was just solving, for example. So that's the idea behind neural modulation.",
    "start": "2544670",
    "end": "2551359"
  },
  {
    "text": "In neural modulation, you can have one neuron in the network like this one here inhibit learning in another part of the network,",
    "start": "2551360",
    "end": "2558845"
  },
  {
    "text": "and so we can like basically [NOISE] you could say for example, if I'm playing chess that only turned learning on the chess-playing part of the net- uh,",
    "start": "2558845",
    "end": "2564875"
  },
  {
    "text": "network and turn it off everywhere else. So I don't overwrite information and other parts of the network. Ah, that's kind of a cartoon example.",
    "start": "2564875",
    "end": "2570710"
  },
  {
    "text": "So how do we pull that off in practice? Well, we do, um, this Differentiable Neural Modulated Plasticity",
    "start": "2570710",
    "end": "2576139"
  },
  {
    "text": "or we call it Backpropamine, Thomas came up with that. And the idea is we're gonna have the same Hebbian formulation, the notation is slightly different but it's basically the same idea as before.",
    "start": "2576139",
    "end": "2584285"
  },
  {
    "text": "But the new part is now, the new Hebbian trace is the old Hebbian trace plus whether",
    "start": "2584285",
    "end": "2590510"
  },
  {
    "text": "the neurons fired together or not multiplied by the output of some other neuron M,",
    "start": "2590510",
    "end": "2595820"
  },
  {
    "text": "and that other neuron can be entirely a learned function of data. So that could be the thing that tells you whether you're playing",
    "start": "2595820",
    "end": "2600980"
  },
  {
    "text": "chess or not [NOISE] or you are doing- or Chelsea whether or not reward just went way up or way down or some other complicated function of the data.",
    "start": "2600980",
    "end": "2608405"
  },
  {
    "text": "Now, in addition to doing that which is pretty interesting, there's also in the paper an eligibility trace version. So what that says is,",
    "start": "2608405",
    "end": "2614810"
  },
  {
    "text": "don't just turn learning on and off in certain contexts but store information about which neurons were involved in what situation.",
    "start": "2614810",
    "end": "2621020"
  },
  {
    "text": "But don't do anything with that, just store it. And then if something happens later like, you know, in 100 steps like I had a really big reward or a really big prediction error,",
    "start": "2621020",
    "end": "2629315"
  },
  {
    "text": "then go back and change the neurons that were involved in a certain way. So if you read the Sutton & Barto book, there's a lot of work on eligibility traces in RL which is pretty interesting.",
    "start": "2629315",
    "end": "2636830"
  },
  {
    "text": "So here's an eligibility trace version of differentiable plasticity. So in a nutshell,",
    "start": "2636830",
    "end": "2642080"
  },
  {
    "text": "this works even better than Differentiable Hebbian Plasticity at least on the pro- some problems. So on a simple task here where we were trying to, um,",
    "start": "2642080",
    "end": "2649745"
  },
  {
    "text": "basically recognize whether or not a certain symbol had been given to us a couple of time steps ago, then what you see is that the Hebbi- Differentiable Hebbian Plasticity which is,",
    "start": "2649745",
    "end": "2659285"
  },
  {
    "text": "um, the green and the non-plastic networks at all don't solve that problem at all, and both the eligibility trace version which is we're calling retroactive and a",
    "start": "2659285",
    "end": "2667569"
  },
  {
    "text": "simple differentiable Hebbian neuro modulation version which is kind of a normal backpropamine,",
    "start": "2667570",
    "end": "2672700"
  },
  {
    "text": "both of those solve that problem very well. [NOISE] And then here on this maze task, um, they both solve this problem way better than, uh,",
    "start": "2672700",
    "end": "2681349"
  },
  {
    "text": "non-modulated plasticity which is not even on the charts on this. Oh actually, no, it's here in blue.",
    "start": "2681350",
    "end": "2687695"
  },
  {
    "text": "And then same thing down here on this Penn Treebank problem. Cool. So [NOISE] the final thing that I wanna show you- ah,",
    "start": "2687695",
    "end": "2697789"
  },
  {
    "text": "I've just asked, is there any questions on that? So I think it's pretty cool. Now, you have something wildly different than SGD.",
    "start": "2697790",
    "end": "2703775"
  },
  {
    "text": "That's controlling, uh, the- the neuron- the neural network at inference time, and it can turn learning on and off at particular connections",
    "start": "2703775",
    "end": "2710285"
  },
  {
    "text": "and in different contexts in different connections, which is a lot of extra degrees of freedom for meta-learning.",
    "start": "2710285",
    "end": "2715430"
  },
  {
    "text": "[NOISE] Okay, so the next thing I wanna talk about,",
    "start": "2715430",
    "end": "2720800"
  },
  {
    "text": "this is unpublished work. I don't- we've never presented this outside of DARPA meetings, so you're the first people to see it.",
    "start": "2720800",
    "end": "2726560"
  },
  {
    "text": "This is a project that, uh, uh, I'm very interested in which is trying to learn to continuously learn.",
    "start": "2726560",
    "end": "2732859"
  },
  {
    "text": "This is done with this fantastic team here, and I really wanna call out Shawn who has been the lead author and has had come up with a lot of the innovations on the projects.",
    "start": "2732860",
    "end": "2739954"
  },
  {
    "text": "So in my opinion, one of the Achilles heels of all of machine learning is catastrophic forgetting.",
    "start": "2739955",
    "end": "2745805"
  },
  {
    "text": "How many of you are familiar with this term? Oh everybody, that's really good. Okay. So then I will just",
    "start": "2745805",
    "end": "2752809"
  },
  {
    "text": "do this briefly because I know at least we're putting it on YouTube. Um, the idea is that when you're sequentially learning a task,",
    "start": "2752810",
    "end": "2758180"
  },
  {
    "text": "you first learn task A, [NOISE] then you learn task B. And what you do is typically machine-learning models when they're learning B,",
    "start": "2758180",
    "end": "2764734"
  },
  {
    "text": "they have no incentive to hold on to any of the information for A so that it is override everything they knew about A, and it corrupts A and then they lose the skill for A, right?",
    "start": "2764735",
    "end": "2772160"
  },
  {
    "text": "That's your classic catastrophic forgetting. Now, animals including yourself don't do this. You're able to like, you know,",
    "start": "2772160",
    "end": "2778400"
  },
  {
    "text": "study for this class and go to some other class and study for that, and then go like play badminton which you haven't played in 10 years and just pick up where",
    "start": "2778400",
    "end": "2784220"
  },
  {
    "text": "you left off without corrupting your knowledge for all of these classes. And through our lives, we get better and better at a variety of tasks,",
    "start": "2784220",
    "end": "2790010"
  },
  {
    "text": "and if we forget what happens gradually, not catastrophically, which is what happens in machine [NOISE] learning models.",
    "start": "2790010",
    "end": "2795079"
  },
  {
    "text": "So I think we have to solve this if we want to make major progress in AI. I think it's kind of embarrassing how little progress",
    "start": "2795080",
    "end": "2800960"
  },
  {
    "text": "we've made actually on this problem. But that's not for want of trying, and we've been working on this prob- prob- problem for very, very long.",
    "start": "2800960",
    "end": "2808430"
  },
  {
    "text": "And there's a lot of early work that was really interesting that had all these different kinds of techniques.",
    "start": "2808430",
    "end": "2813815"
  },
  {
    "text": "But one thing that unifies that in my opinion is they're all kinda manually designed. This is like the manual path to AI,",
    "start": "2813815",
    "end": "2819079"
  },
  {
    "text": "I think I know how to solve catastrophic forgetting what I need are pseudo rehearsal patterns or, uh, I need to have sparse representations,",
    "start": "2819080",
    "end": "2825440"
  },
  {
    "text": "so I might have an auxiliary loss for that, etc, etc. There has been recent work that I love",
    "start": "2825440",
    "end": "2830869"
  },
  {
    "text": "also but I would also put it into the camp of stuff that's manually designed. So EWC which is a wonderful paper is still kind of a hand design technique.",
    "start": "2830870",
    "end": "2838745"
  },
  {
    "text": "I think I know how to solve this problem, let's use some really cool math and Fisher information and we're gonna try to solve it,",
    "start": "2838745",
    "end": "2843815"
  },
  {
    "text": "same with progressive nets. And there's been more and more and more and more, and it's all kind of manually designed. But, you know, my proposal or our AI proposal that it kinda comes from",
    "start": "2843815",
    "end": "2852830"
  },
  {
    "text": "the AI-GA perspective is like let's not try to figure out how to solve this ourselves. Let's just set the problem up,",
    "start": "2852830",
    "end": "2859255"
  },
  {
    "text": "ask machine learning to figure out how to solve the problem, which is to say let's learn to continuously learn and meta- learning the solution.",
    "start": "2859255",
    "end": "2866145"
  },
  {
    "text": "So a hypothesis that we're not smart enough to build systems that can continually learn. So let's do, uh,",
    "start": "2866145",
    "end": "2871559"
  },
  {
    "text": "the AI-GA thing and, um, you know, that is in contrast to the manual path which might say we might want",
    "start": "2871560",
    "end": "2877619"
  },
  {
    "text": "sparse representations so let's kinda like create an auxiliary loss trained for that and hope that that works. So I like meta-learning because you just get to",
    "start": "2877620",
    "end": "2884910"
  },
  {
    "text": "kinda ask the system to produce what you ultimately want. So going back to these two camps of learning, now we're going to flip to the other one.",
    "start": "2884910",
    "end": "2890330"
  },
  {
    "text": "That's more like the MAML school of meta-learning here to use that. So I know that you're all very very familiar with,",
    "start": "2890330",
    "end": "2896870"
  },
  {
    "text": "uh, this kind of meta- learning and inner-loop learning. But I'm gonna introduce you to some of the terminology that I'm gonna use",
    "start": "2896870",
    "end": "2902095"
  },
  {
    "text": "because this talk- this part gets really complicated. So I don't want to lose you. So the general gist is that,",
    "start": "2902095",
    "end": "2907245"
  },
  {
    "text": "you know, with a typical MAML approach, you start with your parameter vector here and then within one inner-loop of training,",
    "start": "2907245",
    "end": "2913420"
  },
  {
    "text": "you copy it and you start doing inner-loop steps. Uh, and then at the end of all of that, you evaluate on your meta loss and you differentiate back through",
    "start": "2913420",
    "end": "2920910"
  },
  {
    "text": "that entire block to the original parameter vector. You take a gradient step, and then you repeat the process, right?",
    "start": "2920910",
    "end": "2927025"
  },
  {
    "text": "Standard for this group. So I want to introduce some terms. I think you use these terms. I think I've heard you and Sergey use these terms.",
    "start": "2927025",
    "end": "2933900"
  },
  {
    "text": "So I like that were maybe starting to create some standards in the community. So we call this whole process meta-training and then in particular,",
    "start": "2933900",
    "end": "2941760"
  },
  {
    "text": "I don't know if you use these terms? Oh, you do good. Okay. So you- this will be old news for you. But we had to like kinda basically really commit to using",
    "start": "2941760",
    "end": "2948470"
  },
  {
    "text": "these amongst our team or we were just constantly talking past each other. Probably it's happening in your class projects.",
    "start": "2948470",
    "end": "2953595"
  },
  {
    "text": "So we call this meta-training training data. Whatever it's training on in here. So meta-training training data and then",
    "start": "2953595",
    "end": "2960855"
  },
  {
    "text": "the stuff that you evaluate here we call meta-training test data. You could also call this meta-training validation data at your preference.",
    "start": "2960855",
    "end": "2967885"
  },
  {
    "text": "But I'm going to call it test for symmetry and so it's good to keep that in your head, and then, what you do is that there's after meta-training you have",
    "start": "2967885",
    "end": "2974335"
  },
  {
    "text": "your final initial parameter vector theta m here. You now pull that over for meta-testing and now,",
    "start": "2974335",
    "end": "2980250"
  },
  {
    "text": "you might want to test it on totally different data that it's never seen before, right? So now you have meta-testing training data,",
    "start": "2980250",
    "end": "2986640"
  },
  {
    "text": "which is a bit mind bendy. But once you get used to this language, it really helps clarify things, right? So the- this network here has never seen this training data.",
    "start": "2986640",
    "end": "2996089"
  },
  {
    "text": "So it's meta- testing training data. It does all that. But then you still want to test this learner on something it's never seen.",
    "start": "2996090",
    "end": "3002190"
  },
  {
    "text": "So you can't test it on this stuff. So now you have to go over here to meta-testing testing data.",
    "start": "3002190",
    "end": "3007965"
  },
  {
    "text": "Does that all make sense? Good. Glad you got it. Okay, so with all that language in mind,",
    "start": "3007965",
    "end": "3014565"
  },
  {
    "text": "now I'm gonna make it a little bit more complicated because we want to do continual learning. It can't just be IID chunks of data.",
    "start": "3014565",
    "end": "3021750"
  },
  {
    "text": "Right? It has to be sequential data. So now we're going to do that all of that, but we're gonna do in tasks in a row.",
    "start": "3021750",
    "end": "3027290"
  },
  {
    "text": "So you have Task 1, Task 2, task, you know t and then your meta-loss here because now you wanna say how",
    "start": "3027290",
    "end": "3034095"
  },
  {
    "text": "much did you remember not just the most recent thing you heard- you trained on but all of it. Now, you have this, you know,",
    "start": "3034095",
    "end": "3041714"
  },
  {
    "text": "your meta loss is going to be on all of the tasks, that it saw. Does that makes sense? And then you do all of that,",
    "start": "3041715",
    "end": "3048140"
  },
  {
    "text": "and that's, uh, that's the general framework. Cool. So a couple, uh,",
    "start": "3048140",
    "end": "3053885"
  },
  {
    "text": "actually at ICML, uh, Martha White gave a talk that I thought was really eye-opening. So basically we had been working on his vision of trying to",
    "start": "3053885",
    "end": "3060860"
  },
  {
    "text": "learn to continuously learn for a really long time and it wasn't working very well and then she basically put out an algorithm that did exactly that and did it really well,",
    "start": "3060860",
    "end": "3067954"
  },
  {
    "text": "and it was called originally MRCL for Meta-Learn Representations for Continual Learning. Uh, but they changed the name recently in an updated version of the paper to OML and,",
    "start": "3067955",
    "end": "3077025"
  },
  {
    "text": "uh, in our opinion this really validated this vision that you could learn to continuously learn. So we kind of chose to scrap what we've-",
    "start": "3077025",
    "end": "3083385"
  },
  {
    "text": "what we were doing and build on top of their algorithm. So here's how O- OML works. Uh, it does pretty well.",
    "start": "3083385",
    "end": "3088934"
  },
  {
    "text": "So what they do is they meta- learn a representation chunk here. This red, uh, part of the network, uh,",
    "start": "3088935",
    "end": "3094995"
  },
  {
    "text": "over across a meta-learning outer loop utter- iterations and then in the inner loop, they're only gonna learn this blue,",
    "start": "3094995",
    "end": "3101234"
  },
  {
    "text": "these kind of inference layers here. So they call these the TLN and so then after meta-training,",
    "start": "3101235",
    "end": "3107040"
  },
  {
    "text": "when they go to meta-test, they'll freeze this red block here and they'll only train in these blue layers here.",
    "start": "3107040",
    "end": "3113075"
  },
  {
    "text": "Okay? And what they show is that this performs really well. Like, historically catastrophic forgetting, you learn one task,",
    "start": "3113075",
    "end": "3118820"
  },
  {
    "text": "you'll learn a second task, and you're hosed. They were showing now that after 150 classes sequentially trained on Omniglot,",
    "start": "3118820",
    "end": "3125849"
  },
  {
    "text": "where each task is one class of Omniglot. You could still do pretty well,",
    "start": "3125850",
    "end": "3131000"
  },
  {
    "text": "which was just kind of for me kinda mind-blowing. That you could solve cash- cash out for getting across 150 tasks.",
    "start": "3131000",
    "end": "3136730"
  },
  {
    "text": "So you get on- on, uh, meta-tests training, so the stuff you already saw. You could remember 97% so you have near perfect memorization even on the first,",
    "start": "3136730",
    "end": "3146390"
  },
  {
    "text": "you can still remember the first class after seeing the 150th class, which is pretty cool, of the stuff you actually saw.",
    "start": "3146390",
    "end": "3152089"
  },
  {
    "text": "Now, when you go to generalize, so different instances of either the first-class or the 150th class,",
    "start": "3152090",
    "end": "3157595"
  },
  {
    "text": "you know, you're generalizing it's much worse. It's like 63%, which is still way, way better than chance and way better than anything that came before that I am aware of.",
    "start": "3157595",
    "end": "3165690"
  },
  {
    "text": "What's also really cool is that it learned on its own the sparse representations are a very good idea, which is cool.",
    "start": "3165690",
    "end": "3172755"
  },
  {
    "text": "So, um, here is for example a method that was explicitly trying to design sparse representations,",
    "start": "3172755",
    "end": "3178310"
  },
  {
    "text": "and you can see they're pretty sparse. Uh, these are different instances of the- of the training example and this is an average across the whole, uh, dataset.",
    "start": "3178310",
    "end": "3186085"
  },
  {
    "text": "But many of the neurons were dead. It's just learned to never used most neurons. If you just do normal deep learning,",
    "start": "3186085",
    "end": "3191089"
  },
  {
    "text": "where you get pretty highly active non-sparse representations. But if you look at miracle,",
    "start": "3191090",
    "end": "3196395"
  },
  {
    "text": "it learned to be sparse but it also learned to use all of its neurons in its representation, which is pretty powerful.",
    "start": "3196395",
    "end": "3202069"
  },
  {
    "text": "So neuron- OML gets a lot, right? It sends for online- I think it's online aware meta-learning, maybe. I forget the acronym.",
    "start": "3202070",
    "end": "3210900"
  },
  {
    "text": "Anyway, it's- it gets a lot right, but it's ultimately still subject to SGD because it's training that red",
    "start": "3210900",
    "end": "3215930"
  },
  {
    "text": "block and then it just hopes at inference time and meta test- test time, sorry, meta test training time that SGD is",
    "start": "3215930",
    "end": "3222470"
  },
  {
    "text": "not gonna mess up the weights in that network. So the question is, could we do better? Could we try to allow more control to optimize the SGD too or at least modify",
    "start": "3222470",
    "end": "3233130"
  },
  {
    "text": "the SGD so that it can basically not cannibalize its own information while it's learning at meta test time?",
    "start": "3233130",
    "end": "3240530"
  },
  {
    "text": "And so what we propose is a different type of, kind of version of this which is based on neuromodulation.",
    "start": "3240530",
    "end": "3247280"
  },
  {
    "text": "So we're going to now- we're gonna allow neural modulation and modulate SGD. But this is a different type of neural modulation that I was just telling you about.",
    "start": "3247280",
    "end": "3253030"
  },
  {
    "text": "Instead of directly gaining the plasticity, turning and learning on and off in the network, it's gonna get the activations of the network, okay?",
    "start": "3253030",
    "end": "3260089"
  },
  {
    "text": "And so if you gate the activations of the network, we call that selective activation that also indirectly allows",
    "start": "3260090",
    "end": "3266060"
  },
  {
    "text": "you to control learning which we call selective plasticity. So it gets a lot easier to see when you look at the architecture.",
    "start": "3266060",
    "end": "3272250"
  },
  {
    "text": "So here is a, uh, our system. You've got this red network here,",
    "start": "3272250",
    "end": "3277819"
  },
  {
    "text": "which is your prediction network. Sorry, I swapped the colors on you. This is not meta-learn. This is inner loop learned, uh,",
    "start": "3277820",
    "end": "3284185"
  },
  {
    "text": "during, like normal, like at meta test training. And then this is meta-learned here. This neuromodulatory network here and the output of",
    "start": "3284185",
    "end": "3292040"
  },
  {
    "text": "this layer is a multiplicative weight on this layer here. So it gets to turn these neurons on and off depending on",
    "start": "3292040",
    "end": "3299870"
  },
  {
    "text": "whatever this network thinks about that input type. So for some types of, uh, of neurons it might only let",
    "start": "3299870",
    "end": "3306290"
  },
  {
    "text": "the first 30% of the neurons fire etc, etc, etc, depending on the context.",
    "start": "3306290",
    "end": "3311445"
  },
  {
    "text": "And so if you look at this, what this allows is, in normal deep learning you have learned, the forward pass goes through the entire network.",
    "start": "3311445",
    "end": "3317234"
  },
  {
    "text": "So you have inference everywhere and you also have learning everywhere. SGD goes back through the whole network, so you're gonna get this process of catastrophic forgetting.",
    "start": "3317235",
    "end": "3325069"
  },
  {
    "text": "But with ANML, I don't know if I told you the name but it stands for a neuromodulated meta-learning algorithm which is a play",
    "start": "3325070",
    "end": "3332540"
  },
  {
    "text": "on both MAML and reptile which we enjoyed. So ANML here, a neuromodulated meta learning algorithm, it can activate,",
    "start": "3332540",
    "end": "3341000"
  },
  {
    "text": "it can gate these activations here and that means that it can both select- it can cause selected activation.",
    "start": "3341000",
    "end": "3346640"
  },
  {
    "text": "So these are not going to fire. So it's kind of taken the blue weights out of the network and that also then will affect the backwards pass in SGD so you get selective plasticity.",
    "start": "3346640",
    "end": "3355425"
  },
  {
    "text": "All these purple weights will not be modified because they weren't involved in that forward pass. So you're giving more degrees of freedom to the network.",
    "start": "3355425",
    "end": "3362990"
  },
  {
    "text": "So here is the training domain here. It's back to Omniglot and each of the classes from Omniglot are going to",
    "start": "3362990",
    "end": "3369799"
  },
  {
    "text": "be its own class or task and so what we do here during training, is we're going to, you know,",
    "start": "3369800",
    "end": "3375740"
  },
  {
    "text": "what we'd normally ideally do is we would differentiate through 600, uh, tasks in a row which is like 9,000 steps of SGD.",
    "start": "3375740",
    "end": "3385424"
  },
  {
    "text": "You differentiate to that entire thing back to the initial weight vector and you'd be about your business but that is hard.",
    "start": "3385425",
    "end": "3391295"
  },
  {
    "text": "Felipe has not figured out how to do that 9,000 steps of SGD. But instead, the OML paper came up with",
    "start": "3391295",
    "end": "3396530"
  },
  {
    "text": "a really cool innovation and that is this particular loss function. So what they do is they say,",
    "start": "3396530",
    "end": "3401810"
  },
  {
    "text": "all right we're going to pick one particular class, the current task and we're gonna start doing SGD on different instances of that class,",
    "start": "3401810",
    "end": "3408530"
  },
  {
    "text": "20 of them, for example, and then our meta loss will be on both instances of that class that we just saw. [NOISE]",
    "start": "3408530",
    "end": "3416090"
  },
  {
    "text": "So how good can you remember what you saw and also other classes from the training set?",
    "start": "3416090",
    "end": "3421155"
  },
  {
    "text": "And what that means is that you have to learn the thing you're just asked to train on, without messing up information from",
    "start": "3421155",
    "end": "3426795"
  },
  {
    "text": "other classes that you've learned in the past but we're only going to do that on a little tiny sample and then we're gonna keep doing that over and over again.",
    "start": "3426795",
    "end": "3432510"
  },
  {
    "text": "That obviates the need to differentiate through 600 classes or tasks directly.",
    "start": "3432510",
    "end": "3439085"
  },
  {
    "text": "So then we'll do that for a different task and we'll repeat that, or those are the meta, uh, meta optimizations.",
    "start": "3439085",
    "end": "3444964"
  },
  {
    "text": "Cool. And then what you can do is your inter-loop loss was all, was those things and you can differentiate it all the way back",
    "start": "3444965",
    "end": "3450770"
  },
  {
    "text": "to the initial parameter vector. So in MAML, they did it by choosing",
    "start": "3450770",
    "end": "3456800"
  },
  {
    "text": "that exact same trick to train the red and then they have inter-loop learning SGD, normal SGD on the blue.",
    "start": "3456800",
    "end": "3462484"
  },
  {
    "text": "What we do is we use that meta learning to train the red network, the neuromodulatory network which then masks",
    "start": "3462485",
    "end": "3468015"
  },
  {
    "text": "the activation of this thing which is not meta trained. It's a normal prediction network. Okay. And then at meta testing what we're gonna do is we're going to have a new class.",
    "start": "3468015",
    "end": "3476974"
  },
  {
    "text": "We do 20 instances of that class and then, sorry, we do 15 of that class and then we check it",
    "start": "3476975",
    "end": "3483335"
  },
  {
    "text": "on five more examples of that particular class. So the question is both at the end of 15 steps",
    "start": "3483335",
    "end": "3489190"
  },
  {
    "text": "here you can ask how well did it memorize all of these samples that's kind of like how well did it fit the training set and that's meta test training accuracy",
    "start": "3489190",
    "end": "3496569"
  },
  {
    "text": "here and then you can also ask how well does it do on these other samples? So how was it generalized to these unseen samples that it has never seen?",
    "start": "3496570",
    "end": "3505595"
  },
  {
    "text": "Clear? So you get that. If you do it for at least one task,",
    "start": "3505595",
    "end": "3510710"
  },
  {
    "text": "you get that plot there. If you do that for two tasks, then you can put a plot there and there and then you can do that across however,",
    "start": "3510710",
    "end": "3518570"
  },
  {
    "text": "many classes you want to show the network and then you can stop and ask both how well did we do at everything it saw in meta test training and how well they",
    "start": "3518570",
    "end": "3525380"
  },
  {
    "text": "do at meta test- testing and you get these plots. Right. So then the question is, uh, you know,",
    "start": "3525380",
    "end": "3532875"
  },
  {
    "text": "how well- what we really care about is how well does it do on a meta-test test set. All right.",
    "start": "3532875",
    "end": "3538275"
  },
  {
    "text": "So I wanna remind you that in normal deep learning, you have two things helping you out. You have IID training and you have the fact",
    "start": "3538275",
    "end": "3544290"
  },
  {
    "text": "that you typically do multiple passes through the data, right? Multiple epochs. In sequential learning, in this particular setup,",
    "start": "3544290",
    "end": "3550275"
  },
  {
    "text": "we are going to be not have IID data. So you have to contend with catastrophic forgetting. And then we're only gonna do one pass through the data.",
    "start": "3550275",
    "end": "3556785"
  },
  {
    "text": "So it's also kind of like a few shot learning problem. Uh, and so both of those forces are gonna hurt our performance.",
    "start": "3556785",
    "end": "3562510"
  },
  {
    "text": "So here's what the OML paper showed. Um, if you look on meta-test training, so how well did you memorize the stuff that you were just shown even after 150 classes?",
    "start": "3562510",
    "end": "3572715"
  },
  {
    "text": "You can see OML is doing really, really well and so is ANML. But then we extended that all the way out to 600 classes.",
    "start": "3572715",
    "end": "3578910"
  },
  {
    "text": "And now you see this massive difference between OML and ANML. But then we actually started playing around with the OML a little bit.",
    "start": "3578910",
    "end": "3585780"
  },
  {
    "text": "And what we realized is that if you don't- if you let it only fine tune- I'm not gonna get back to the picture.",
    "start": "3585780",
    "end": "3591510"
  },
  {
    "text": "But if you only fine tune the last of those two layers, not just the- not both of them, then you can do much better.",
    "start": "3591510",
    "end": "3597000"
  },
  {
    "text": "That's this green thing here. And then the gap with ANML is actually pretty small. Now, if you look at just training from scratch,",
    "start": "3597000",
    "end": "3604319"
  },
  {
    "text": "you get this terrible performance. This is the catastrophic forgetting problem we've been dealing with in deep learning forever. And if you just pre-trained on the meta-training set,",
    "start": "3604320",
    "end": "3611820"
  },
  {
    "text": "and then do transfer learning, you still fall off a cliff. So this is the normal catastrophic forgetting in deep learning. All right.",
    "start": "3611820",
    "end": "3617940"
  },
  {
    "text": "Now, the real big difference is when you look at meta-test testing. So how well does the network generalize to new stuff that it has seen?",
    "start": "3617940",
    "end": "3625620"
  },
  {
    "text": "So during meta-testing, it's never gonna see anything that it saw in meta-training. But it did see 15 of each of 600 classes.",
    "start": "3625620",
    "end": "3632280"
  },
  {
    "text": "And the question is, how well has to do with the five things of each of those classes that it's never seen before? And what you see is that, now,",
    "start": "3632280",
    "end": "3638130"
  },
  {
    "text": "you- there's a massive gap between ANML and OML. Even the OML lack the better version of OML, as you go way out.",
    "start": "3638130",
    "end": "3645540"
  },
  {
    "text": "But kind of the thing with the big picture, instead of comparing between different methods, it's just just like, this is really cool.",
    "start": "3645540",
    "end": "3650580"
  },
  {
    "text": "Like, 600 classes in, 9,000 steps of SGD in,",
    "start": "3650580",
    "end": "3655859"
  },
  {
    "text": "and the network is not forgetting terribly. I mean, this is not as good performance as you might hope for,",
    "start": "3655860",
    "end": "3661875"
  },
  {
    "text": "but it's still remembering a lot about what it learned about these really early classes, which is pretty incredible.",
    "start": "3661875",
    "end": "3667155"
  },
  {
    "text": "Now, in terms of what you might actually be able to expect here, we actually said. All right. Let's see if we can get rid of",
    "start": "3667155",
    "end": "3672569"
  },
  {
    "text": "catastrophic forgetting and see like what's the best you could hope for. So the upper bound or Oracle for ANML is this red line here,",
    "start": "3672570",
    "end": "3680010"
  },
  {
    "text": "which you see, you just train IID. In- instead of doing 600 classes in order, you just train IID sampled from those 600 classes.",
    "start": "3680010",
    "end": "3687060"
  },
  {
    "text": "So you eliminate catastrophic forgetting. But you still have one pass through the data. So you still have a low-shot learning problem and that's this red line here.",
    "start": "3687060",
    "end": "3693585"
  },
  {
    "text": "And what you can see is that neural- the kind of ANML is really close to that Oracle there. So to some extent,",
    "start": "3693585",
    "end": "3700020"
  },
  {
    "text": "the problem is no longer catastrophic forgetting, it might be just data efficiencies, sample efficient learning. But it's really not the Achilles' heel you know,",
    "start": "3700020",
    "end": "3707640"
  },
  {
    "text": "catastrophic forgetting is, uh, what's harming us. So that's really exciting.",
    "start": "3707640",
    "end": "3713040"
  },
  {
    "text": "The final thing I'll show in terms of data from this particular project, is that it also like OML, it learns sparsity.",
    "start": "3713040",
    "end": "3719805"
  },
  {
    "text": "So here is the activation of that balloon network, the, uh, for- the forward passed non-meta network.",
    "start": "3719805",
    "end": "3725070"
  },
  {
    "text": "Before it gets gated with the neuromodulatory network, this is the output of the neuromodulatory network,",
    "start": "3725070",
    "end": "3730290"
  },
  {
    "text": "and 50% of these neurons are active for these individual example samples. And after neuromodulatory activation,",
    "start": "3730290",
    "end": "3736740"
  },
  {
    "text": "it's down to 6%. So it's intelligently learning to figure out- how to figure out which small subset of the network should be on,",
    "start": "3736740",
    "end": "3743190"
  },
  {
    "text": "in order to learn without forgetting. So any questions?",
    "start": "3743190",
    "end": "3749410"
  },
  {
    "text": "I hope I'm not horribly losing you. All right. So to conclude this section, um,",
    "start": "3749630",
    "end": "3755610"
  },
  {
    "text": "both OML and ANML show the promise of meta-learning for learning solutions to catastrophic forgetting.",
    "start": "3755610",
    "end": "3760905"
  },
  {
    "text": "And I would say more broadly. Like whatever problem it is you're trying to solve, just set it up as a meta-learning problem, and then see if meta-learning can solve it for you instead of trying to get too clever.",
    "start": "3760905",
    "end": "3769890"
  },
  {
    "text": "ANML's advantage over OML also underscores that even within the meta-learning paradigm, which is what everybody in this room is interested in; materials still matter.",
    "start": "3769890",
    "end": "3778365"
  },
  {
    "text": "You know, should you use neuromodulation, should you use Hebbian Learning, should you use a different architecture, etc.",
    "start": "3778365",
    "end": "3783690"
  },
  {
    "text": "Uh, I think there's lots of future work that could improve this even further, including trying to replace SGD entirely.",
    "start": "3783690",
    "end": "3790170"
  },
  {
    "text": "So ANML is still using SGD where it is modulating it. But you can imagine the version where you just have like a giant and recurrent neural net with differentiable neuromodulation for example,",
    "start": "3790170",
    "end": "3799080"
  },
  {
    "text": "and then that thing invents its own learning algorithm that learns to learn without forgetting. That would be very exciting.",
    "start": "3799080",
    "end": "3804370"
  },
  {
    "text": "Okay, now we get to some, uh, non-meta learning stuff. The third pillar of AI-GAs is automatically generating learning environments.",
    "start": "3804370",
    "end": "3814339"
  },
  {
    "text": "So all of you know that in meta-learning, you can't just train on one environment.",
    "start": "3814340",
    "end": "3819395"
  },
  {
    "text": "You have to train on a distribution of environments. So the question is, where will you get them? You know, how are you gonna provide the fuel to your meta-learning algorithm?",
    "start": "3819395",
    "end": "3828625"
  },
  {
    "text": "And if you'd pick some, are they gonna be the right ones to catalyze learning? And I don't mean learning on your particular problem,",
    "start": "3828625",
    "end": "3834210"
  },
  {
    "text": "although that's interesting too. But what about learning to get really far, to get sort of like really ambitious AI goals? How are we gonna do that?",
    "start": "3834210",
    "end": "3840390"
  },
  {
    "text": "We certainly wouldn't want humans picking all of those problems because we're probably not good at it. So in machine learning, we tend to do that.",
    "start": "3840390",
    "end": "3847020"
  },
  {
    "text": "That we pick the challenges and then we go and try to solve them. But the question that I think is really interesting to ask is,",
    "start": "3847020",
    "end": "3852210"
  },
  {
    "text": "can algorithms invent their own problems, while they're trying to learn how to solve those problems?",
    "start": "3852210",
    "end": "3857700"
  },
  {
    "text": "And so one thing that I find really, really inspirational are these things called open-ended algorithms.",
    "start": "3857700",
    "end": "3863865"
  },
  {
    "text": "Now, this is an algorithm that you turn it on, and you just let it run forever. And it continuously innovates forever.",
    "start": "3863865",
    "end": "3872400"
  },
  {
    "text": "It just like runs and runs and runs. You know, we do not have any algorithms right now that you would want to let run, for like,",
    "start": "3872400",
    "end": "3877680"
  },
  {
    "text": "I don't know, more than a couple of years, a couple of months. But I'm talking about an algorithm that could run for a billion years.",
    "start": "3877680",
    "end": "3884505"
  },
  {
    "text": "So can anybody in this room make an algorithm that you'd wanna run for a billion years and then come back and check on it, and it would still be doing interesting stuff?",
    "start": "3884505",
    "end": "3891870"
  },
  {
    "text": "So we have seen an example of that, and that's on Earth. The very simple algorithm of Darwinian evolution plus a planet-sized computer, plus a planet.",
    "start": "3891870",
    "end": "3900420"
  },
  {
    "text": "A billion years later, is constantly innovating and doing really, really fascinating things. So can we make algorithms do this?",
    "start": "3900420",
    "end": "3907710"
  },
  {
    "text": "I think that is a really fantastic and interesting challenge. And no, you do not have to be committed to using",
    "start": "3907710",
    "end": "3913020"
  },
  {
    "text": "an evolutionary algorithm to do that. That's not at all the point. The point is it can be dealt with whatever your favorite optimization algorithm is,",
    "start": "3913020",
    "end": "3918750"
  },
  {
    "text": "we should be able to make algorithms that endlessly innovate. Now, evolution on Earth, and it's not the only algorithm that does this,",
    "start": "3918750",
    "end": "3924720"
  },
  {
    "text": "human culture also does this. We constantly are innovating and making new, new types of novels,",
    "start": "3924720",
    "end": "3930090"
  },
  {
    "text": "and TV shows, and science, and art, and dance, etc. So what's- one thing that's kind of underlying all of",
    "start": "3930090",
    "end": "3938010"
  },
  {
    "text": "these open-ended algorithms is that they invent their own challenges and solve them,",
    "start": "3938010",
    "end": "3943050"
  },
  {
    "text": "and then the solution to those challenges end up being new problems that get solved. So for example, natural selection invented the problem of leaves high up in trees,",
    "start": "3943050",
    "end": "3953234"
  },
  {
    "text": "and then the solution to that problem, in the form of giraffes and caterpillars, right? Which are two different ways to go eat those leaves.",
    "start": "3953235",
    "end": "3960285"
  },
  {
    "text": "And then giraffes in turn are their own problem, that lions can prey upon and hyenas, etc.",
    "start": "3960285",
    "end": "3966494"
  },
  {
    "text": "So in this work, we have this, uh, new paper called POET, which is a Paired Open-Ended Trailblazer.",
    "start": "3966495",
    "end": "3972164"
  },
  {
    "text": "And I wanna highlight Rui Wang, who is- who has done all the heavy lifting on this project. He's done a wonderful job. And the idea behind",
    "start": "3972165",
    "end": "3978059"
  },
  {
    "text": "this approach is that we want to try to endlessly generate increasingly complex and diverse learning environments and",
    "start": "3978060",
    "end": "3983760"
  },
  {
    "text": "their solutions altogether online i- in one big algorithm. So here's how it works.",
    "start": "3983760",
    "end": "3989760"
  },
  {
    "text": "We're gonna periodically generate environments. So to do that, that means we have to parameterize environments.",
    "start": "3989760",
    "end": "3995040"
  },
  {
    "text": "You have to have a way to search for environments. So you may have a parameter vector that specifies a particular environment.",
    "start": "3995040",
    "end": "4000500"
  },
  {
    "text": "And, you know, you can change those parameters and you get different environments. And then what we're gonna do is we're gonna add",
    "start": "4000500",
    "end": "4006470"
  },
  {
    "text": "newly generated environments to the population of environments, if they're not too easy for the current set of agents and they're not too hard.",
    "start": "4006470",
    "end": "4015570"
  },
  {
    "text": "We're also gonna have a tiebreaker if they're novelty to kind of like incentivize these environments to go out and be different.",
    "start": "4015570",
    "end": "4021305"
  },
  {
    "text": "And then that this is a population of environments. And then each one of those environments has an agent that's paired in it.",
    "start": "4021305",
    "end": "4027025"
  },
  {
    "text": "And then once we generate those new environments, we're gonna start optimizing the agents to solve those environments.",
    "start": "4027025",
    "end": "4032184"
  },
  {
    "text": "So that's our paired- that's why the algorithm has paired. Oops, yeah.",
    "start": "4032185",
    "end": "4037720"
  },
  {
    "text": "So there's a paradox in life which is really I think interesting, which is that, if you try too hard to solve a problem you'll fail.",
    "start": "4037720",
    "end": "4045100"
  },
  {
    "text": "For example, if I put you in this maze here and you're this robot and you try to go to the, this is the start,",
    "start": "4045100",
    "end": "4050680"
  },
  {
    "text": "and try to go to the goal and your reward function says only reduce your distance to the goal,",
    "start": "4050680",
    "end": "4055910"
  },
  {
    "text": "then what you'll do is you'll go up here and you'll bang your head against this wall forever. And that's what this optimization algorithm does is tries to reduce distance to the goal.",
    "start": "4055910",
    "end": "4064474"
  },
  {
    "text": "If you just try to seek out and go to new places in the maze or seek for novelty, you'll trivially solve this problem which is what this,",
    "start": "4064475",
    "end": "4071510"
  },
  {
    "text": "uh, maze does over here. Now, this is a more general lesson in life. For example, it applies in all of science and technology.",
    "start": "4071510",
    "end": "4079734"
  },
  {
    "text": "If you go back a few hundred years to this technology, you say, I want to heat up food more rapidly,",
    "start": "4079735",
    "end": "4084755"
  },
  {
    "text": "you will never invent a microwave if you only fund researchers that put- that can heat food faster, um,",
    "start": "4084755",
    "end": "4091329"
  },
  {
    "text": "because to invent a microwave you have to have been working on microwave technology to produce that innovation and notice that a chocolate bar melted in your pocket,",
    "start": "4091330",
    "end": "4098875"
  },
  {
    "text": "which is how the microwave was actually invented. And if you go back here a couple of millennia to abacuses,",
    "start": "4098875",
    "end": "4104435"
  },
  {
    "text": "and you say, oh that things cool, it does computation. I want more computation and you only fund people who will make you better,",
    "start": "4104435",
    "end": "4110640"
  },
  {
    "text": "uh, uh, you know, the things that produce more compute, then you will never invent the modern-day computer because to produce this you have to had been goin- working on",
    "start": "4110640",
    "end": "4117989"
  },
  {
    "text": "lightning and vacuum tubes which had no immediate application for computation whatsoever.",
    "start": "4117990",
    "end": "4123369"
  },
  {
    "text": "So the ideal- the idea is that we call this goal switching. Um, let's skip that example.",
    "start": "4123370",
    "end": "4128719"
  },
  {
    "text": "The uh- the uh, idea is that if you're optimizing for one thing. This row-this scientist here wants to optimize for a robot that's",
    "start": "4128720",
    "end": "4135545"
  },
  {
    "text": "walking but suddenly one of your agents starts crawling will you- really well, don't throw that out as a failure.",
    "start": "4135545",
    "end": "4142180"
  },
  {
    "text": "Instead, capture that and start optimizing for that too because that might be an ultimately really good stepping stone to walking,",
    "start": "4142180",
    "end": "4149270"
  },
  {
    "text": "same with balancing on one foot. Now, I do wanna mention one thing about POET, I meant to say this at the top. Uh, POET so far is not a meta-learning system,",
    "start": "4149270",
    "end": "4158295"
  },
  {
    "text": "but it could be used for meta-learning. So let's say you had to generate environments and then you- that can be fuel for your metal-learning algorithms.",
    "start": "4158295",
    "end": "4164025"
  },
  {
    "text": "So this idea of goal switching, so you start optimizing your agents on one goal, if they suddenly like start doing well in some other goal,",
    "start": "4164025",
    "end": "4170659"
  },
  {
    "text": "you catch chance on the wing and you start optimizing for that too, that's called goal switching and we've shown over and over again in a lot of",
    "start": "4170660",
    "end": "4177130"
  },
  {
    "text": "different papers that this can really pay off because it gets your agents off of local optima. So we- in this paper that we had on the cover of Nature",
    "start": "4177130",
    "end": "4184330"
  },
  {
    "text": "produced state of the art adaptation in robots. In this Go-Explore paper we use that to help solve those two challenges that I talked about.",
    "start": "4184330",
    "end": "4191890"
  },
  {
    "text": "And so the way that goal switching works in POET is that you have this population of different environments and periodically you'll transfer an agent from",
    "start": "4191890",
    "end": "4198160"
  },
  {
    "text": "one environment to another environment to see if it's doing better. Okay, so here's the particular domain in the POET,",
    "start": "4198160",
    "end": "4204005"
  },
  {
    "text": "it's just an obstacle course and its agents running through it. Tries to run through it really fast without falling and here the degrees of freedom in the environment.",
    "start": "4204005",
    "end": "4210909"
  },
  {
    "text": "So the environment can make envi- environments that have different degrees of say stump height or roughness in the terrain. And here's how it works.",
    "start": "4210910",
    "end": "4218195"
  },
  {
    "text": "So we start with the parameter vector that specifies an environment phi one and then we'll have a parameter vector that",
    "start": "4218195",
    "end": "4223620"
  },
  {
    "text": "specifies a theta that's paired with that environment. We'll optimize theta to perform well on phi.",
    "start": "4223620",
    "end": "4229045"
  },
  {
    "text": "And then what we'll do is after Theta is pretty good at this, we'll copy the environment to make another environment phi two which is a little bit different.",
    "start": "4229045",
    "end": "4236364"
  },
  {
    "text": "And then we'll do transfer learning. So we'll goal switch this agent into this environment and start optimizing it here.",
    "start": "4236365",
    "end": "4242320"
  },
  {
    "text": "Now optimization is in parallel both of these things are kind of learning to solve this problem together, then we might copy this environment that might be too hard,",
    "start": "4242320",
    "end": "4249599"
  },
  {
    "text": "so we throw it out. We generate a new environment and we can test both of these in this environment,",
    "start": "4249600",
    "end": "4255370"
  },
  {
    "text": "see which one's better, produce a new agent optimize it there. This does not have to be a linear chain, we can kind of produce this environment,",
    "start": "4255370",
    "end": "4262090"
  },
  {
    "text": "maybe the best parent for it is this, and we go on and on. Now imagine that- imagine that eventually,",
    "start": "4262090",
    "end": "4267250"
  },
  {
    "text": "we produce this really really hard challenge here, and what you do is initially it looks like this is the best stepping stone to see this population,",
    "start": "4267250",
    "end": "4274300"
  },
  {
    "text": "so you start optimizing this in this and it does okay but it's stuck on a local optima. But we're doing goal switching in this algorithm,",
    "start": "4274300",
    "end": "4281335"
  },
  {
    "text": "so this thing might ultimately replace that thing, and now with a little bit more optimization on this problem might",
    "start": "4281335",
    "end": "4286699"
  },
  {
    "text": "ultimately produce the best solution to that problem there and ultimately we end up with this solution to",
    "start": "4286700",
    "end": "4292170"
  },
  {
    "text": "this problem which got us off of these local optima. So in this particular case we have a three-layer neural network,",
    "start": "4292170",
    "end": "4298660"
  },
  {
    "text": "it's being optimized with evolution strategies but it could be any RL algorithm, and here's some fun videos of it working.",
    "start": "4298660",
    "end": "4303880"
  },
  {
    "text": "So you have this little tiny robot here, it's moving through this terrain, the environments start off really simple,",
    "start": "4303880",
    "end": "4309905"
  },
  {
    "text": "and then over time they-the are-the algorithm starts making harder and harder versions of these problems. First, it's kind of giving it individual challenges like",
    "start": "4309905",
    "end": "4317320"
  },
  {
    "text": "only little stumps and only little gaps and only some more on rough terrain. Over time it starts producing like bigger gaps and it's starting to",
    "start": "4317320",
    "end": "4324900"
  },
  {
    "text": "combine things like medium-sized gaps and medium-sized stumps and eventually it kind of produces these really hard environments that",
    "start": "4324900",
    "end": "4331770"
  },
  {
    "text": "have like gaps about as big as they can do and it's using its lateral sensors so it's kind of like timing its jumps and",
    "start": "4331770",
    "end": "4337255"
  },
  {
    "text": "it's really kind of pushing the limits of what this body is capable of. Here's another challenge that was invented by",
    "start": "4337255",
    "end": "4343145"
  },
  {
    "text": "POET all by itself which we didn't even think was possible. So one interesting thing about POET is we found is if you take",
    "start": "4343145",
    "end": "4349570"
  },
  {
    "text": "the most challenging environment it produces and you try to directly optimize solutions in them,",
    "start": "4349570",
    "end": "4354605"
  },
  {
    "text": "it doesn't work because there's no curricula whereas POET is automatically implementing its own curricula. So what we did is we took the hardest environments here and we said we'll try to be",
    "start": "4354605",
    "end": "4363220"
  },
  {
    "text": "more fair and we'll create a direct path curriculum which is a pretty common technique. So we take this parameter vector for this environment,",
    "start": "4363220",
    "end": "4369780"
  },
  {
    "text": "this one here and then we linearly interpolate along that parameter vector and we start optimizing down it,",
    "start": "4369780",
    "end": "4375020"
  },
  {
    "text": "and it always fails every single time because curricula are hard, designing them is hard and you- you will usually",
    "start": "4375020",
    "end": "4381970"
  },
  {
    "text": "get it wrong and the harder the environment the more that it failed. So I wanted to show you this one nice example.",
    "start": "4381970",
    "end": "4388340"
  },
  {
    "text": "Here is our agent. It's on the most simple version of the problem here and it's dragging its knee.",
    "start": "4388340",
    "end": "4393355"
  },
  {
    "text": "And what you see is that ultimately the- the algorithm creates a slightly harder version of the problem, this knee dragging behavior no longer works.",
    "start": "4393355",
    "end": "4400525"
  },
  {
    "text": "It ships the robot up and so the robot stands up and gets a better score, and then we are further up and then basically eventually this thing",
    "start": "4400525",
    "end": "4407675"
  },
  {
    "text": "was better even when transferred back to this simple environment. So the algorithm automatically goal switches",
    "start": "4407675",
    "end": "4413135"
  },
  {
    "text": "this thing back to the original where now it's standing up and it's performing better and with further optimization it gets a much better score of 349.",
    "start": "4413135",
    "end": "4420679"
  },
  {
    "text": "Now we did the counterfactual. We went and ran this agent in that environment for a long time and it never stands up,",
    "start": "4420680",
    "end": "4427570"
  },
  {
    "text": "it's always dragging its knee. And so I think this just exemplifies why curricular learning is hard because here you had to go and work on",
    "start": "4427570",
    "end": "4433295"
  },
  {
    "text": "a harder problem to get better at this simple problem and get yourself off of this local optima.",
    "start": "4433295",
    "end": "4438485"
  },
  {
    "text": "So without- if you don't do goal switching, you don't do transfer, you never solve these really hard problems and you never generate them.",
    "start": "4438485",
    "end": "4444655"
  },
  {
    "text": "So there's been a lot of work on learning curricula, I don't have time to get into it all today but I just want to quickly kind of fuel your intuitions with future work.",
    "start": "4444655",
    "end": "4452389"
  },
  {
    "text": "We'd like to do this in harder domains and you know you could do it with multiple agents as well.",
    "start": "4452390",
    "end": "4458320"
  },
  {
    "text": "But I think it's really thought-provoking to put it in a world like this. So if you had enough compute to run POET in a world like",
    "start": "4458320",
    "end": "4464380"
  },
  {
    "text": "this where there are other agents that you can barter with, buy goods from, you fight with, cooperate with, you can climb buildings deal with aerial predators, etc.",
    "start": "4464380",
    "end": "4473030"
  },
  {
    "text": "You can really imagine meta-learning some very sophisticated behaviors in such a domain.",
    "start": "4473030",
    "end": "4478250"
  },
  {
    "text": "This is also very related to Open AI. So currently like I mentioned POET has not yet been learned with meta-learning.",
    "start": "4478250",
    "end": "4484550"
  },
  {
    "text": "Each environment is a little deterministic environment. You don't have to learn to solve it but you could easily have all of the tasks produced by POET as your distribution",
    "start": "4484550",
    "end": "4492310"
  },
  {
    "text": "that you train on or you could have each environment in POET be its own little distribution that you're meta-learning",
    "start": "4492310",
    "end": "4497530"
  },
  {
    "text": "on and you still have goal switching amongst the learners. And this is all very related, Open AI's automatic domain randomization,",
    "start": "4497530",
    "end": "4503135"
  },
  {
    "text": "if you saw that paper which worked really well and solves Rubik's cube. So, uh, I don't have time to go through all of",
    "start": "4503135",
    "end": "4509230"
  },
  {
    "text": "those things but I think POET is really exciting because it deals with, it invents its own curricula, it hedges its bets,",
    "start": "4509230",
    "end": "4514280"
  },
  {
    "text": "it endlessly innovates, it provides possibility for meta-learning and opens up a lot of really interesting research directions,",
    "start": "4514280",
    "end": "4521680"
  },
  {
    "text": "but mostly it's inventing its own challenges which is what we need for meta-learning. So if you're interested in more on these- this subject related to POET and openendedness,",
    "start": "4521680",
    "end": "4529719"
  },
  {
    "text": "you can watch our ICML tutorial on population-based methods which is at that link there. So with that, I'll get to my last slide.",
    "start": "4529720",
    "end": "4537135"
  },
  {
    "text": "Thank you for your patience. Um, and that is that I think that it's really fair in- and interesting to this question whether or not the",
    "start": "4537135",
    "end": "4544295"
  },
  {
    "text": "dominant paradigm in machine learning or the manual approach to AI is really going to get us ultimately to where we want to",
    "start": "4544295",
    "end": "4550505"
  },
  {
    "text": "go and I think that's just kind of interesting to discuss. And I proposed to you the idea of an alternative paradigm which is the AI generating algorithms paradigm,",
    "start": "4550505",
    "end": "4558400"
  },
  {
    "text": "where you really go all-in on meta-learning. So you're gonna meta learn the architecture,",
    "start": "4558400",
    "end": "4563580"
  },
  {
    "text": "the learning algorithms and you're going to learn the environments and generate them automatically. And you can imagine those three things coming together to produce",
    "start": "4563580",
    "end": "4570909"
  },
  {
    "text": "one really interesting algorithm that potentially could innovate forever and get us all the way to extremely powerful forms of",
    "start": "4570910",
    "end": "4577165"
  },
  {
    "text": "AI and perhaps- perhaps maybe human-level AI. And then I also introduced you to for each one of these pillars here",
    "start": "4577165",
    "end": "4583960"
  },
  {
    "text": "some pretty exotic new approaches that we've been working on including generative teaching networks, Differentiable Hebbian Plasticity, Differentiable Neuromodulated Hebbian Plasticity,",
    "start": "4583960",
    "end": "4593075"
  },
  {
    "text": "ANML and then POET, which can automatically generate environments. So I hope that you found that interesting and I wanna say thank you for",
    "start": "4593075",
    "end": "4600215"
  },
  {
    "text": "your patience and for the invitation. [APPLAUSE].",
    "start": "4600215",
    "end": "4608469"
  },
  {
    "text": "I also wanna thank my collaborators and there's at least a minute if anyone has any high-level questions or low-level questions. Yes.",
    "start": "4608470",
    "end": "4618950"
  },
  {
    "text": "Um, what's the most pervasive argument that you come across [NOISE] [inaudible]",
    "start": "4618950",
    "end": "4625020"
  },
  {
    "text": "Yeah. Um, so I have a lot of them in the paper that's on Arxiv and so you can read a more detailed thing there.",
    "start": "4625020",
    "end": "4630540"
  },
  {
    "text": "But I think that the- basically, my view is that, uh, I'll give you two answers.",
    "start": "4630540",
    "end": "4635610"
  },
  {
    "text": "One, at a high-level, engineering is wonderful; it's done really impressive things. You know, we got to the moon, we got to Mars,",
    "start": "4635610",
    "end": "4641250"
  },
  {
    "text": "we built the International Space Station, we've built Boeing, you know, giant planes, very complicated machines,",
    "start": "4641250",
    "end": "4646620"
  },
  {
    "text": "and so you could say that will keep- that will continue, and we'll do- we'll just build something really big. But I think it's fair to question whether or not that will",
    "start": "4646620",
    "end": "4653490"
  },
  {
    "text": "work when the thing we're building, uh, requires, you know, is- is- maybe is- you know,",
    "start": "4653490",
    "end": "4658935"
  },
  {
    "text": "maybe we're not smart enough to do that. You know, when it's requiring something that's more sophisticated than something we can understand.",
    "start": "4658935",
    "end": "4664349"
  },
  {
    "text": "So I think it's fair to question that. The second thing I would say is that, um, I think that the",
    "start": "4664350",
    "end": "4670350"
  },
  {
    "text": "manual path is making tremendous progress, and it's, you know, like all of those stuff we've seen in the last couple years in AI",
    "start": "4670350",
    "end": "4676065"
  },
  {
    "text": "has been from the manual path from in most cases, and so it's really doing well and so the question is- I think",
    "start": "4676065",
    "end": "4681990"
  },
  {
    "text": "eventually the AIJ path will kind of be under it for a while, and under-perform it, and then it will cross over and surpass it,",
    "start": "4681990",
    "end": "4689190"
  },
  {
    "text": "but I don't know when that crossover point is. The crossover point itself might come after we produce human level AI,",
    "start": "4689190",
    "end": "4695445"
  },
  {
    "text": "and so that's an argument that maybe both paths will get there but maybe the manual path will get there faster. Yeah.",
    "start": "4695445",
    "end": "4702780"
  },
  {
    "text": "Can you comment, um, sort of a general question. Can you- can you comment on the relationship between the work that your group",
    "start": "4702780",
    "end": "4709350"
  },
  {
    "text": "does and Uber self-driving, and- and here what I'm thinking of is the- you know,",
    "start": "4709350",
    "end": "4716550"
  },
  {
    "text": "these thousands of edge cases, the long tail, and, uh, is there- can you- can you elaborate on the relationship between this work?",
    "start": "4716550",
    "end": "4725940"
  },
  {
    "text": "Yeah. So, er, at the highest level, I'm in AI labs which was formed after our startup Geometric Intelligence got acquired,",
    "start": "4725940",
    "end": "4732525"
  },
  {
    "text": "and it was definitely set up to be a basic research lab that was focused on all areas of machine learning,",
    "start": "4732525",
    "end": "4738315"
  },
  {
    "text": "not just self-driving and then in the Uber, we have an entirely separate organization that focuses on self-driving.",
    "start": "4738315",
    "end": "4743595"
  },
  {
    "text": "So just from an organizational perspective, we have totally different mandates, which is why you see here a lot of more basic machine learning fo-, uh,",
    "start": "4743595",
    "end": "4749205"
  },
  {
    "text": "research that's not just focused on that particular research application. But that said, we find those challenges interesting and we work on them too.",
    "start": "4749205",
    "end": "4756900"
  },
  {
    "text": "Uh, and I can't comment too much about internal applications of these particular ideas to that,",
    "start": "4756900",
    "end": "4762690"
  },
  {
    "text": "but I can just give you a flavor of how it might be useful. You could imagine for example, in POET, that you're automatically inventing as you mentioned,",
    "start": "4762690",
    "end": "4769739"
  },
  {
    "text": "long-tail edge cases that are very very difficult and are, you know, hard for the current policy to solve,",
    "start": "4769740",
    "end": "4776550"
  },
  {
    "text": "and then they- they invent the solution to those problems. So that's useful for a variety of ways. One, is you're collecting hard- hard- you know",
    "start": "4776550",
    "end": "4782309"
  },
  {
    "text": "really hard corner cases that you can add to your set to train on, and two, you have the solution to those edge cases.",
    "start": "4782310",
    "end": "4787640"
  },
  {
    "text": "So if your policy can- can consume, you know, imitation learning or learning via observation or demonstration,",
    "start": "4787640",
    "end": "4793475"
  },
  {
    "text": "then it can use those individual solutions to then distill back in to the main policy. So that's just kind of like one way that these algorithms might be useful.",
    "start": "4793475",
    "end": "4800810"
  },
  {
    "text": "But more broadly, like the idea of open-ended algorithms and getting off of local optima, better search techniques,",
    "start": "4800810",
    "end": "4805850"
  },
  {
    "text": "improved memory usage, more efficient learning, solving continual learning, which is definitely an issue with self-driving,",
    "start": "4805850",
    "end": "4811600"
  },
  {
    "text": "and many business applications. There is a wide variety to apply it, there is a wide opportunity to apply",
    "start": "4811600",
    "end": "4817320"
  },
  {
    "text": "these sorts of ideas within any company that has a lot of, uh, challenging machine learning problems which Uber definitely has.",
    "start": "4817320",
    "end": "4823425"
  },
  {
    "text": "Good answer. Thank you. Yes. This is really interesting to see how these algorithms work in",
    "start": "4823425",
    "end": "4830820"
  },
  {
    "text": "these kinds of simulated environment and stuff and I was thinking, working in robotics, I was thinking about how I can apply that as to what I do in robotics, and it's like,",
    "start": "4830820",
    "end": "4838800"
  },
  {
    "text": "think about it, there's a lot of, um, problems in robotics that don't seem to be directly addressed by this. So I was wondering if you could comment on how we take these to like",
    "start": "4838800",
    "end": "4846780"
  },
  {
    "text": "a physical world where you can't afford to fail. We- we're still optimizing the hardware,",
    "start": "4846780",
    "end": "4852270"
  },
  {
    "text": "we even don't know what our feedback is yet. So what can we learn from these kind of meta techniques in a more physical environment?",
    "start": "4852270",
    "end": "4860385"
  },
  {
    "text": "Yeah. So one thing that I would say is, uh, I recommend this paper here. This paper here, what I love about it,",
    "start": "4860385",
    "end": "4867929"
  },
  {
    "text": "is that it kind of marries the very expensive power of stochastic optimization and deep reinforcement learning or evolutionary algorithms,",
    "start": "4867930",
    "end": "4875760"
  },
  {
    "text": "any of these stochastic optimizers, which are really expensive and really sample inefficient but they can be done in simulation ahead of time.",
    "start": "4875760",
    "end": "4882870"
  },
  {
    "text": "So it takes like stuff that you learn in simulation, and then it ports it over in the real world to using that information that you've learned in simulation,",
    "start": "4882870",
    "end": "4890265"
  },
  {
    "text": "really really efficiently with Bayesian optimization. So I don't have time to tell you the full method but the idea is that you can",
    "start": "4890265",
    "end": "4895755"
  },
  {
    "text": "use a lot of the algorithms that I've talked about to kind of explore the set of possibilities, learn a variety of different strategies that are all really high-performing,",
    "start": "4895755",
    "end": "4903660"
  },
  {
    "text": "like a diverse set of high-performing strategies, and then in the real world when you only have a limited amount of experiments you can do or time to learn,",
    "start": "4903660",
    "end": "4911340"
  },
  {
    "text": "you can just switch between a whole bunch of really good solutions. That's one flavor of answer. A second flavor of answer is the Open AI robotics cube strategy,",
    "start": "4911340",
    "end": "4921810"
  },
  {
    "text": "which is that you learn- you use things like meta learning and POET, to, uh, train in simulation,",
    "start": "4921810",
    "end": "4928500"
  },
  {
    "text": "and then immediately deploy in the real world, and because the OpenAI robotics cube what it did,",
    "start": "4928500",
    "end": "4935220"
  },
  {
    "text": "was it combined two of the three pillars from AI-GAs. So it automatically generates an increasingly large,",
    "start": "4935220",
    "end": "4941489"
  },
  {
    "text": "diverse set of challenging environments to train on, and then it uses the RL squared slash learning to reinforcement learn",
    "start": "4941490",
    "end": "4948780"
  },
  {
    "text": "recurrent neural network that invents its own learning algorithm and in simulation, it kept on waking up in a simulated world that had a different like- you know,",
    "start": "4948780",
    "end": "4957540"
  },
  {
    "text": "like a different amount of gravity, a different amount of friction, different amount of colors on the walls. So it's always in a slightly different world and it has to",
    "start": "4957540",
    "end": "4963510"
  },
  {
    "text": "rapidly figure out like which world am I in? What's the friction? What's the gravity? Quickly solve the problem,",
    "start": "4963510",
    "end": "4969315"
  },
  {
    "text": "and it does that over and over and over again in simulation at great compute cost. But then when you drop it in the real world,",
    "start": "4969315",
    "end": "4975164"
  },
  {
    "text": "the real world is just another new challenge, and it's like, \"Oh, what's the friction here? And what's the weird lighting effect here?",
    "start": "4975165",
    "end": "4980820"
  },
  {
    "text": "And what- like how do I flip the cube?\" And then it can kind of rapidly- and be a sample efficient learner that solves the Rubik's cube,",
    "start": "4980820",
    "end": "4986805"
  },
  {
    "text": "and that's what they showed that it did. So you can harness- compute ahead of time to",
    "start": "4986805",
    "end": "4991860"
  },
  {
    "text": "learn- to learn efficiently and then just deploy that in the world. So I think those are two different techniques,",
    "start": "4991860",
    "end": "4997560"
  },
  {
    "text": "both of which are key- can be used to great effect in robotics and Chelsea's done a lot of great work showing that that works,",
    "start": "4997560",
    "end": "5002630"
  },
  {
    "text": "and so has Sergey, and several other people in the field and now Open AI. And so I don't think that it's the case that robotics",
    "start": "5002630",
    "end": "5007820"
  },
  {
    "text": "has to wait for AI to get better and more sample efficient. I think that now you can already start taking advantage of these techniques and Open AI I think is the best showcase of that.",
    "start": "5007820",
    "end": "5015650"
  },
  {
    "text": "There was one more back there. I don't know when you have to call it though. Just one more. Okay, we'll take the one more question that was back there.",
    "start": "5015650",
    "end": "5021170"
  },
  {
    "text": "Ah, just a quick thought. Can you guys consider applying POET to the Minecraft RL challenge or something. [inaudible]",
    "start": "5021170",
    "end": "5034130"
  },
  {
    "text": "Yeah. We have talked about that. I think that's a fascinating direction. I'm not familiar with that particular challenge right now",
    "start": "5034130",
    "end": "5040520"
  },
  {
    "text": "but just the idea of like POET plus Minecraft, I think is, uh, really great because it's such an open-ended world it would be really fascinating to see what it does. Yeah.",
    "start": "5040520",
    "end": "5047600"
  },
  {
    "text": "Great question. Thank you all again. I appreciate it. [APPLAUSE]",
    "start": "5047600",
    "end": "5052000"
  }
]