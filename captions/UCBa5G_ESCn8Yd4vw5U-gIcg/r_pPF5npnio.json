[
  {
    "text": "this six six six page paper is the best i ever wrote if you measure it in in order of ideas per",
    "start": "2960",
    "end": "9519"
  },
  {
    "text": "per per uh bite so uh so if anybody wants one of those",
    "start": "9519",
    "end": "15599"
  },
  {
    "text": "reprints they're there um i've also got here six copies of the of the mixed uh",
    "start": "15599",
    "end": "22800"
  },
  {
    "text": "documentation as it stands up uh as it stands uh today uh there's only six here",
    "start": "22800",
    "end": "28640"
  },
  {
    "text": "but it's downloadable anybody can you know if you if you click um on the on the home page uh uh you you can get you",
    "start": "28640",
    "end": "35280"
  },
  {
    "text": "can get the postcode for it um uh but if people here are really uh seriously",
    "start": "35280",
    "end": "40960"
  },
  {
    "text": "promised to uh you know to read it closely and and uh and and and uh report errors to me uh uh",
    "start": "40960",
    "end": "47600"
  },
  {
    "text": "you know i have six here you know and if they're gone uh uh they need donald um i found",
    "start": "47600",
    "end": "55440"
  },
  {
    "text": "one one error in it this afternoon but uh uh any anyway uh",
    "start": "55440",
    "end": "60640"
  },
  {
    "text": "uh there it is and also uh one more announcement next friday a week from",
    "start": "60640",
    "end": "65840"
  },
  {
    "text": "a week from this friday um i'm going to give another lecture in this room it's not in the computer musing series but",
    "start": "65840",
    "end": "70960"
  },
  {
    "text": "it's a different thing it's it's about digital typography and they tell me that my book",
    "start": "70960",
    "end": "76400"
  },
  {
    "text": "called digital typography was uh was printed last week in winnipeg at least",
    "start": "76400",
    "end": "81520"
  },
  {
    "text": "the you know the ink went on the paper last week and uh and uh theoretically",
    "start": "81520",
    "end": "86720"
  },
  {
    "text": "the copies will arrive here either next thursday or next friday in time for this lecture and uh i plan to show the book",
    "start": "86720",
    "end": "92640"
  },
  {
    "text": "at that time and see it probably for the first time myself uh it's a book that summarizes everything i did about",
    "start": "92640",
    "end": "99840"
  },
  {
    "text": "on attacking metaphone and other things like that over the last 20 years and uh and i think uh",
    "start": "99840",
    "end": "105759"
  },
  {
    "text": "you know it's a lot of fun to i don't want to see this all in one book okay that that's the end of my",
    "start": "105759",
    "end": "111520"
  },
  {
    "text": "announcements uh i'm going to talk today about this thing",
    "start": "111520",
    "end": "116799"
  },
  {
    "text": "you see here um m mix a risk machine for the new millennium now uh",
    "start": "116799",
    "end": "123920"
  },
  {
    "text": "i i guess the first thing i should show you is this cartoon which i saw here which says",
    "start": "124560",
    "end": "131760"
  },
  {
    "text": "you know the mayonnaise for the next millennium uh chips for the car for the next millennium the toilet",
    "start": "131760",
    "end": "137680"
  },
  {
    "text": "paper for the next millennium uh it says 1999 is going to be a long year uh that's probably true but uh but i",
    "start": "137680",
    "end": "145040"
  },
  {
    "text": "think in in this case has has a",
    "start": "145040",
    "end": "151280"
  },
  {
    "text": "a little bit of uh a reasonable claim for this title because the m",
    "start": "151280",
    "end": "156560"
  },
  {
    "text": "stands for millennium i mean each m in m extends for a thousand and so on and as as as we'll see",
    "start": "156560",
    "end": "164000"
  },
  {
    "text": "um what like i got one more graphic here to show you",
    "start": "164000",
    "end": "169680"
  },
  {
    "text": "the happy hour now um uh",
    "start": "169680",
    "end": "175360"
  },
  {
    "text": "em i i think uh most of you probably know that there was a computer that still is a computer in",
    "start": "175360",
    "end": "182560"
  },
  {
    "text": "in my books the art of computer programming called mix and uh",
    "start": "182560",
    "end": "187680"
  },
  {
    "text": "i i brought the new additional art of computer programming here to show you uh where",
    "start": "187680",
    "end": "194959"
  },
  {
    "text": "where mix is defined because we can see on page 124",
    "start": "194959",
    "end": "200560"
  },
  {
    "text": "uh the new um yeah allison can you that's great wonderful okay so you see",
    "start": "200560",
    "end": "207040"
  },
  {
    "text": "this little construction symbol here this is part of the of the art of computer program is still under",
    "start": "207040",
    "end": "212400"
  },
  {
    "text": "construction in fact this m mix represents the very last hurdle i have to get out of the way",
    "start": "212400",
    "end": "217599"
  },
  {
    "text": "before i can really grind out volume four uh at speed uh now uh so it says it",
    "start": "217599",
    "end": "223200"
  },
  {
    "text": "must be admitted that mix is not quite obsolete it will be placed in the subsequent editions by a new machine called mix the 2009",
    "start": "223200",
    "end": "229760"
  },
  {
    "text": "mx will be a so-called reduced instruction set computer with risk which will do it arithmetic on",
    "start": "229760",
    "end": "234799"
  },
  {
    "text": "64-bit words will be even nicer than makes it will be similar to machines that become dominant during the 1990s",
    "start": "234799",
    "end": "240159"
  },
  {
    "text": "task of converting everything in this book from mixed to mix will take a long time volunteers are solicited to help",
    "start": "240159",
    "end": "246080"
  },
  {
    "text": "with that conversion process that's one of my main goals today is to try to to see how many of you in the",
    "start": "246080",
    "end": "251920"
  },
  {
    "text": "audience i can convince that you that that you would love to join this volunteer effort um",
    "start": "251920",
    "end": "258639"
  },
  {
    "text": "uh meanwhile author hopes that people will be content to live for a few more years with the old-fashioned mix architecture still worth knowing because",
    "start": "258639",
    "end": "264639"
  },
  {
    "text": "it helps provide a context for subsequent development well this was the old uh the old machine um mixed as it",
    "start": "264639",
    "end": "270639"
  },
  {
    "text": "was and it was designed um in 1963 and uh i think um",
    "start": "270639",
    "end": "277520"
  },
  {
    "text": "uh you know it uh it was still it still looked fairly reasonable in 1973 uh and we had uh we",
    "start": "277520",
    "end": "286479"
  },
  {
    "text": "even had a a a a working uh you know a meeting of the of of mug the mixed user group uh where",
    "start": "286479",
    "end": "293360"
  },
  {
    "text": "we all had mugs and stuff to celebrate in those days and uh",
    "start": "293360",
    "end": "298960"
  },
  {
    "text": "but in the late 70s you know people started using re-entrant coding more memories got huger and huger and the vax",
    "start": "298960",
    "end": "305040"
  },
  {
    "text": "came out and and uh and machine language just started to look very baroque you couldn't enjoy",
    "start": "305040",
    "end": "310400"
  },
  {
    "text": "programming anymore and uh so anyway but now mix is totally uh different from",
    "start": "310400",
    "end": "317360"
  },
  {
    "text": "the machines that are that are out there and uh and so uh",
    "start": "317360",
    "end": "322479"
  },
  {
    "text": "and so i knew that uh uh that it was uh",
    "start": "322479",
    "end": "328160"
  },
  {
    "text": "becoming more and more of a sore thumb as time time went on that's why i uh i'm doing this now now um",
    "start": "328160",
    "end": "334639"
  },
  {
    "text": "i've got i've got a webpage about it i suppose a lot of you have seen the",
    "start": "334639",
    "end": "340320"
  },
  {
    "text": "webpage because i checked this afternoon and there were 18 000 hits on it",
    "start": "340320",
    "end": "346320"
  },
  {
    "text": "so so it tells about you know something about the background of",
    "start": "346880",
    "end": "353520"
  },
  {
    "text": "it um and uh oh yeah oh before i forget i have to show you this uh",
    "start": "353520",
    "end": "358800"
  },
  {
    "text": "about the name excuse me you've got to talk about this trivial stuff before i get into the deep stuff it's always helped",
    "start": "358800",
    "end": "366000"
  },
  {
    "text": "remember mix was it was the 1009 and the reason was that it was the 1009",
    "start": "366000",
    "end": "372000"
  },
  {
    "text": "is if you took these computers the 360 you heard of that 650 that was my you know 650 was was the",
    "start": "372000",
    "end": "379280"
  },
  {
    "text": "one i learned on 709 all these things the u3 univec three solid state 80 and",
    "start": "379280",
    "end": "385199"
  },
  {
    "text": "all these machines uh including the ii which um people have mis misread as the as an 11",
    "start": "385199",
    "end": "392639"
  },
  {
    "text": "that's actually not a pdp 11 it's a recomp ii but anyway you add these numbers together and and you know divide by 16",
    "start": "392639",
    "end": "399280"
  },
  {
    "text": "you get 1009 what's the average of that so that so now uh uh mix is the world's first polyunsaturated",
    "start": "399280",
    "end": "405680"
  },
  {
    "text": "computer um uh and and when this book has been translated into many languages and the",
    "start": "405680",
    "end": "411759"
  },
  {
    "text": "translators in russia wrote to me said well how do you translate polyunsaturated into into russian and i said it's uh",
    "start": "411759",
    "end": "417759"
  },
  {
    "text": "it's totally anti-revisionistic um uh",
    "start": "417759",
    "end": "423680"
  },
  {
    "text": "uh the point is it was some it was some buzzword that that somebody on madison avenue would be able to say now i don't",
    "start": "423680",
    "end": "429280"
  },
  {
    "text": "know exactly what i'm going to say about amnics here if you've got a good idea for how to replace the sentence let me know but uh but john hennessy and dave",
    "start": "429280",
    "end": "436080"
  },
  {
    "text": "patterson um came out with uh uh with the second polyunsaturated computer in",
    "start": "436080",
    "end": "441759"
  },
  {
    "text": "their book on computer architecture and it's called deluxe dlx and and that's uh",
    "start": "441759",
    "end": "447520"
  },
  {
    "text": "uh you know 560 and they found how dlx was actually you know 560 you could get by this com",
    "start": "447520",
    "end": "454319"
  },
  {
    "text": "calculation so i had to prove this too and so the 2009 is here it comes from",
    "start": "454319",
    "end": "459360"
  },
  {
    "text": "cray 1 ibm 801 risk 2 clippers you know 300 amd 29k",
    "start": "459360",
    "end": "465599"
  },
  {
    "text": "motorola 88k ibm 601 intel i960 alpha 2164 power 2 mix 4000 hitachi super h4",
    "start": "465599",
    "end": "473520"
  },
  {
    "text": "strong arm 11. i'm sorry strong arm 110 and spark 64 you add all those numbers together divide by 14",
    "start": "473520",
    "end": "480160"
  },
  {
    "text": "2009 had to be 2 000 um now",
    "start": "480160",
    "end": "486560"
  },
  {
    "text": "and uh there was a dance group at stanford uh uh i trusted her not a customer at the dinglesville uh",
    "start": "486720",
    "end": "494240"
  },
  {
    "text": "a few years ago called mammox and uh and uh i uh but but i actually found out that um",
    "start": "494240",
    "end": "502319"
  },
  {
    "text": "that that that monik's mammox m-o-m-i-x is a",
    "start": "502319",
    "end": "507520"
  },
  {
    "text": "is a good is a is a popular uh dialect word in ozarks and it means to screw something up i mean",
    "start": "507520",
    "end": "514640"
  },
  {
    "text": "uh so anyway there's a lot of there's a lot of reasons to have a computer called moments that makes",
    "start": "514640",
    "end": "522320"
  },
  {
    "text": "but but maybe maybe you should do like tech and say nick",
    "start": "522320",
    "end": "527440"
  },
  {
    "text": "now the um the uh the webpage also has a has a defense",
    "start": "528080",
    "end": "536720"
  },
  {
    "text": "says why have a machine language at all and and you know uh you know people don't really spend",
    "start": "536720",
    "end": "543200"
  },
  {
    "text": "much time programming in assembler anymore uh uh so why should i uh why should i harp on it and i explain uh uh",
    "start": "543200",
    "end": "550640"
  },
  {
    "text": "uh all these all these uh extremely important reasons why why it's uh",
    "start": "550640",
    "end": "556399"
  },
  {
    "text": "why i believe that it's that uh in a book in a series of books like mine it's important to have have some kind of a uh",
    "start": "556399",
    "end": "563120"
  },
  {
    "text": "of a of a model uh that's that's realistic uh",
    "start": "563120",
    "end": "569120"
  },
  {
    "text": "to base things on instead of just working from from top down i like to to also work bottom up and uh and so i uh",
    "start": "569120",
    "end": "576560"
  },
  {
    "text": "so i discussed the uh the ideas here in fact uh the the high level languages keep changing but uh but at the low",
    "start": "576560",
    "end": "583360"
  },
  {
    "text": "level we can have some some some understanding of what's easy to do on a machine and what isn't",
    "start": "583360",
    "end": "589600"
  },
  {
    "text": "and uh uh there there are quite a there are quite a lot of uh of of reasons in",
    "start": "589600",
    "end": "594880"
  },
  {
    "text": "the summer i say i don't want to go into i don't want to spend the time right now um let me see what other handouts do i have",
    "start": "594880",
    "end": "601760"
  },
  {
    "text": "here yeah i'll get to those so um uh but but but basically i i want to i want",
    "start": "601760",
    "end": "609519"
  },
  {
    "text": "to have some uh a machine language which is actually very very much like the",
    "start": "609519",
    "end": "616800"
  },
  {
    "text": "most machines uh in some in some way um now what what other what other uh",
    "start": "616800",
    "end": "623760"
  },
  {
    "text": "criteria did i did i want for this for this language um",
    "start": "623760",
    "end": "628800"
  },
  {
    "text": "you know um the this uh i i should also say that uh that the",
    "start": "628800",
    "end": "634480"
  },
  {
    "text": "very first time i ever gave a lecture called computer musings was was almost exactly seven years ago and and i talked",
    "start": "634480",
    "end": "639839"
  },
  {
    "text": "about mix at that time that was my first computer i'm using was called mix a risk computer for the new millennium in it",
    "start": "639839",
    "end": "646160"
  },
  {
    "text": "and uh and i had just read uh a few uh half a year before that no no a few",
    "start": "646160",
    "end": "653040"
  },
  {
    "text": "months before that uh hennessey and patterson's first edition of their book on on computer architecture",
    "start": "653040",
    "end": "658720"
  },
  {
    "text": "speaking of the devil and uh and uh",
    "start": "658720",
    "end": "664640"
  },
  {
    "text": "just it's just a phrase john and uh and uh and at that time",
    "start": "664640",
    "end": "671600"
  },
  {
    "text": "uh john very very uh very graciously looked at the entire document that i had",
    "start": "671600",
    "end": "676959"
  },
  {
    "text": "about uh about what i thought amex would be in 1992 and uh and and made",
    "start": "676959",
    "end": "682880"
  },
  {
    "text": "extensive comments and uh and his main comment at that time was uh it's got to be 64-bit machine um",
    "start": "682880",
    "end": "690640"
  },
  {
    "text": "at that time essentially every computer was i don't",
    "start": "690640",
    "end": "696720"
  },
  {
    "text": "know i had the idea that uh okay i had to go down from 36 bits to 32 bits but i was never going to get any more um",
    "start": "696720",
    "end": "704000"
  },
  {
    "text": "and uh and you know eunuchs",
    "start": "704000",
    "end": "710000"
  },
  {
    "text": "seemed that the ins had to be 32 i mean so but uh but machines uh were coming",
    "start": "710000",
    "end": "717040"
  },
  {
    "text": "out 64 and he was absolutely right that and so that that impacted very heavily on the design uh so so uh now now after",
    "start": "717040",
    "end": "725600"
  },
  {
    "text": "the second edition of of hennessy and patterson came out my new design is very very heavily",
    "start": "725600",
    "end": "730959"
  },
  {
    "text": "influenced by by that i also want to give a special thanks to dick sites is he here",
    "start": "730959",
    "end": "736880"
  },
  {
    "text": "no okay well maybe he'll show up in a minute anyway uh dick who is designer of the alpha chip uh worked with me",
    "start": "736880",
    "end": "743839"
  },
  {
    "text": "actually on the first mix when he was a freshman at uh at stanford uh",
    "start": "743839",
    "end": "749279"
  },
  {
    "text": "he and i worked on the on the simulator for the first mix which was in 1970 and published a cs report about that and now",
    "start": "749279",
    "end": "755920"
  },
  {
    "text": "and then now he spent a lot of time with me this last year uh with the design of emmick",
    "start": "755920",
    "end": "761760"
  },
  {
    "text": "um now um the uh so first of all uh i learned from",
    "start": "761760",
    "end": "769760"
  },
  {
    "text": "from hennessey patterson's book that computer that that about risk machines are the the uh the",
    "start": "769760",
    "end": "777120"
  },
  {
    "text": "concept of reduced instruction set machines which uh which which originated uh uh",
    "start": "777120",
    "end": "782240"
  },
  {
    "text": "many places around the world but i think uh a lot of credit goes to stanford and berkeley",
    "start": "782240",
    "end": "787600"
  },
  {
    "text": "projects that came out of about 1980-81 and and also some independent projects",
    "start": "787600",
    "end": "795200"
  },
  {
    "text": "at ibm and other places uh and uh and the the the wonderful thing about",
    "start": "795200",
    "end": "800880"
  },
  {
    "text": "the risk machine is that it's actually um it actually uh can be nice to read",
    "start": "800880",
    "end": "806079"
  },
  {
    "text": "the machine language coding this was not true uh of of a lot of the later uh",
    "start": "806079",
    "end": "811600"
  },
  {
    "text": "machine languages that that came out um but uh but all of a sudden hey there was",
    "start": "811600",
    "end": "817279"
  },
  {
    "text": "a uh you know there was a window in time when when machine language was was fun again and uh and it will it'll probably",
    "start": "817279",
    "end": "824000"
  },
  {
    "text": "go away uh you know as as people have to have to uh have to um",
    "start": "824000",
    "end": "830000"
  },
  {
    "text": "you know i don't know these uh very high very long like structured word language and so on are gonna they're gonna come",
    "start": "830000",
    "end": "836240"
  },
  {
    "text": "out with languages that are again not never to be seen by a human being but um uh but uh uh the the the kind that this",
    "start": "836240",
    "end": "844720"
  },
  {
    "text": "uh we're still at a time when uh when almost readable uh um instructions are going on uh on uh",
    "start": "844720",
    "end": "852399"
  },
  {
    "text": "in the machine and that is that was great news for me um now uh i so i anyway i wanted to be",
    "start": "852399",
    "end": "859199"
  },
  {
    "text": "realistic uh now i i i um uh but i also had to be",
    "start": "859199",
    "end": "865920"
  },
  {
    "text": "on uh sort of um i don't know uh",
    "start": "865920",
    "end": "872560"
  },
  {
    "text": "how do you say it um well what does realistic mean in some",
    "start": "872560",
    "end": "877680"
  },
  {
    "text": "ways it has to be economical but if i made it economical for now according to amdahl's law it would be",
    "start": "877680",
    "end": "883920"
  },
  {
    "text": "wrong uh very soon uh because computers are everything is changing so fast and so i",
    "start": "883920",
    "end": "889680"
  },
  {
    "text": "figured i'd better design this thing so that it instead of instead of looking for what i have no now but i i better",
    "start": "889680",
    "end": "895199"
  },
  {
    "text": "say what am i what will i do if i can actually uh you know make the make the machine ten times",
    "start": "895199",
    "end": "900320"
  },
  {
    "text": "uh put put ten times as much uh on a chip now or a hundred times as much on that ship and so on so that this isn't",
    "start": "900320",
    "end": "906639"
  },
  {
    "text": "gonna look like it's uh it's it's too much mired in the past by the time i actually get to finishing my book and so",
    "start": "906639",
    "end": "912240"
  },
  {
    "text": "i i had to be uh you know a little bit ahead of time uh in this design or try to predict uh",
    "start": "912240",
    "end": "919199"
  },
  {
    "text": "uh to predict trends in some way um but i but i wanted to i wanted to be",
    "start": "919199",
    "end": "924880"
  },
  {
    "text": "something that that that that could be buildable uh you know assuming present trends continue uh although maybe uh we",
    "start": "924880",
    "end": "932800"
  },
  {
    "text": "we couldn't build it now i i don't have a real uh a realistic expectation that anybody will actually",
    "start": "932800",
    "end": "939040"
  },
  {
    "text": "ever build it uh because that cost millions and millions of dollars for for all the all the uh stuff you know um but",
    "start": "939040",
    "end": "945680"
  },
  {
    "text": "i still wanted to want to uh you know i wanted to design one that i would really like to own uh and and and wouldn't it be great if",
    "start": "945680",
    "end": "952639"
  },
  {
    "text": "somebody would actually build it someday um it you know now they'd have to probably spend a few",
    "start": "952639",
    "end": "958320"
  },
  {
    "text": "more millions of dollars just for patent rights to some of the ideas i'm stealing because i because i i haven't paying",
    "start": "958320",
    "end": "963680"
  },
  {
    "text": "attention to the things in and makes that that are everything patented nowadays unfortunately but um",
    "start": "963680",
    "end": "970079"
  },
  {
    "text": "uh anyway um i think that uh it like i didn't wanna i i wouldn't feel right if",
    "start": "970079",
    "end": "976160"
  },
  {
    "text": "it was just something only a textbook computer that couldn't be built and that and that didn't go into um the",
    "start": "976160",
    "end": "983040"
  },
  {
    "text": "uh into all the issues that that you have to worry about in a real machine like what happens when the power fails and what and and uh uh",
    "start": "983040",
    "end": "990320"
  },
  {
    "text": "how do you uh exactly what happens on an interrupt and and uh how do you convert virtual addresses to",
    "start": "990320",
    "end": "997040"
  },
  {
    "text": "physical addresses and and uh a lot of messy things that that have to be uh",
    "start": "997040",
    "end": "1002079"
  },
  {
    "text": "that have to be uh handled and so i studied i studied",
    "start": "1002079",
    "end": "1008000"
  },
  {
    "text": "as much as i could about the machines that are in use now and i tried to to take the cleanest aspect of the thing so",
    "start": "1008000",
    "end": "1014639"
  },
  {
    "text": "another thing was i wanted to be clean and nice i didn't want to have it look like it's",
    "start": "1014639",
    "end": "1020399"
  },
  {
    "text": "designed by a committee because you know this is signed by me and i have a chance to you know i don't have to satisfy anybody else",
    "start": "1020399",
    "end": "1027918"
  },
  {
    "text": "so i wanted to have the nicest in some way thing i wanted to be easy to learn",
    "start": "1027919",
    "end": "1034720"
  },
  {
    "text": "because that's the main purpose of it is so that i can like you know describe it in my books and somebody can look at it and and uh and",
    "start": "1034720",
    "end": "1041760"
  },
  {
    "text": "and they got the idea pretty fast and and you know they don't have to to dwell on it if they're not going to write that many programs in it just so they get the",
    "start": "1041760",
    "end": "1048079"
  },
  {
    "text": "idea in mind of what this machine is like um you know i i i figure",
    "start": "1048079",
    "end": "1054960"
  },
  {
    "text": "maybe one percent of the people who who look at mix are actually going to write a program for mix but but uh",
    "start": "1054960",
    "end": "1062000"
  },
  {
    "text": "so so i got a design for the 99 still i want those one percent to really be happy and and and that's the other thing",
    "start": "1062000",
    "end": "1067840"
  },
  {
    "text": "is fun uh that is it'll be it'll be a pleasure for people who do want to spend more time on this machine uh to um to do it",
    "start": "1067840",
    "end": "1075679"
  },
  {
    "text": "there's a lot of advantages to a machine independent machine uh you know everything is changing so fast in the in",
    "start": "1075679",
    "end": "1081440"
  },
  {
    "text": "computer world uh uh these days it's nice to have a few things that that that that",
    "start": "1081440",
    "end": "1086880"
  },
  {
    "text": "lasts for a little while and so by having uh by having a machine like this it's conceivable that uh that that we'll",
    "start": "1086880",
    "end": "1094000"
  },
  {
    "text": "be able to do various modeling experience experiments and so on that'll that'll that'll still make sense over a",
    "start": "1094000",
    "end": "1099600"
  },
  {
    "text": "period of time um but uh but i can't uh afford to change my books every time a",
    "start": "1099600",
    "end": "1105760"
  },
  {
    "text": "new trend comes along and uh you know i'm already 61 years old and i got lots to do and and uh",
    "start": "1105760",
    "end": "1113679"
  },
  {
    "text": "and so um and so uh you know i'm trying to write about i'm trying to write about timeless",
    "start": "1113679",
    "end": "1118880"
  },
  {
    "text": "truths things that are always important so i want to have one machine that i could that will stick and stay the same",
    "start": "1118880",
    "end": "1125919"
  },
  {
    "text": "although it is still uh is adaptable to many uh uh to many different configurations and so you can",
    "start": "1125919",
    "end": "1132400"
  },
  {
    "text": "have even though it's a hypothetical mythical machine there are there are uh cheap versions of the",
    "start": "1132400",
    "end": "1138880"
  },
  {
    "text": "mythical hardware and and the expensive version of mythical hardware um i'm going to be giving a talk on",
    "start": "1138880",
    "end": "1145679"
  },
  {
    "text": "wednesday march 3rd with the next computer musing where i talk about the uh this the simulator that i that that",
    "start": "1145679",
    "end": "1152880"
  },
  {
    "text": "i'm building for ammix i i got i was heavy into debugging it yesterday and i got it to interrupt for",
    "start": "1152880",
    "end": "1158960"
  },
  {
    "text": "the first time on sunday um and uh this this this simulator uh shows how how mix can",
    "start": "1158960",
    "end": "1166559"
  },
  {
    "text": "can exist in infinitely many configurations as to how has to all kinds of uh combinations of functional units and",
    "start": "1166559",
    "end": "1173600"
  },
  {
    "text": "caching and and all every every buzzword i've heard of uh",
    "start": "1173600",
    "end": "1179600"
  },
  {
    "text": "uh uh um you know has a has a uh a way to describe an image well um so",
    "start": "1179600",
    "end": "1186960"
  },
  {
    "text": "uh uh i i don't know i might think of other other other parts of the design but but",
    "start": "1186960",
    "end": "1194080"
  },
  {
    "text": "in general i wanted it to be a combination of all these",
    "start": "1194080",
    "end": "1199200"
  },
  {
    "text": "all these things and um i uh and i came up with this with this design",
    "start": "1199200",
    "end": "1204720"
  },
  {
    "text": "that i want i'm going to show you today uh now the the uh",
    "start": "1204720",
    "end": "1211440"
  },
  {
    "text": "the first thing is simplicity um i i this was all this was the same as i",
    "start": "1211440",
    "end": "1216880"
  },
  {
    "text": "had in 1992 every instruction is has has four bytes to it uh the operation code x",
    "start": "1216880",
    "end": "1223600"
  },
  {
    "text": "y and z uh and the operation code so so there's 256 operation codes 256 x's 256 wise since",
    "start": "1223600",
    "end": "1231840"
  },
  {
    "text": "this exes typical instruction might be this one 32 1 2 3 which means",
    "start": "1231840",
    "end": "1237440"
  },
  {
    "text": "32 means add and this says um set register 1 equal to register 2 plus",
    "start": "1237440",
    "end": "1243840"
  },
  {
    "text": "register 3. so this is this is typical of a of a risk machine to have uh",
    "start": "1243840",
    "end": "1250640"
  },
  {
    "text": "uh to have like this kind of a three three registers mentioned in an instruction uh",
    "start": "1250640",
    "end": "1256720"
  },
  {
    "text": "one register is is is the second register operated on with the third register",
    "start": "1256720",
    "end": "1263360"
  },
  {
    "text": "now the thing that's that's pretty that's that's fairly different however is that there's 256 registers",
    "start": "1263360",
    "end": "1270000"
  },
  {
    "text": "that makes it however uh you know as i said uh ahead of time because uh",
    "start": "1270000",
    "end": "1275440"
  },
  {
    "text": "you know we got to figure out something to do with the larger chips but also um easy to learn because",
    "start": "1275440",
    "end": "1283360"
  },
  {
    "text": "because here you are you know all these bites are are very simple um in fact uh",
    "start": "1283360",
    "end": "1290240"
  },
  {
    "text": "i i believe that uh that having a lot of registers is is is",
    "start": "1290240",
    "end": "1295440"
  },
  {
    "text": "extremely good for compact uh uh for compact programming uh programming because uh a lot of a lot of",
    "start": "1295440",
    "end": "1303520"
  },
  {
    "text": "my programs uh a great deal of the stuff will live in registers all the time and never appear",
    "start": "1303520",
    "end": "1309919"
  },
  {
    "text": "in memory and this makes this this saves a lot of space when you're trying to to refer to the to the numbers that you're",
    "start": "1309919",
    "end": "1317039"
  },
  {
    "text": "working with so it so having a lot of registers has has a lot of advantages",
    "start": "1317039",
    "end": "1322720"
  },
  {
    "text": "now it has disadvantages too uh because if uh one of the one of the disadvantages",
    "start": "1322720",
    "end": "1328960"
  },
  {
    "text": "is that when you uh when you're swapping from one job to another uh you have to save the state of",
    "start": "1328960",
    "end": "1334720"
  },
  {
    "text": "the of the computation and so what if the job isn't actually using very many registers you don't want to have to",
    "start": "1334720",
    "end": "1340240"
  },
  {
    "text": "store 256 registers into memory and uh and then load them again when you when",
    "start": "1340240",
    "end": "1346720"
  },
  {
    "text": "you come back uh well i've taken care of that too as we'll see um",
    "start": "1346720",
    "end": "1352559"
  },
  {
    "text": "let's see uh the the app i said there's 256 ops and this",
    "start": "1352559",
    "end": "1358960"
  },
  {
    "text": "is uh and so now let me show you this this chart here which is which is near the end of my report in fact i have an",
    "start": "1358960",
    "end": "1365039"
  },
  {
    "text": "extra copy of it i'll just put it over i'll just put it here um",
    "start": "1365039",
    "end": "1370880"
  },
  {
    "text": "this these are the can you zoom back a little bit uh yeah this these are the 256 uh codes",
    "start": "1370880",
    "end": "1377679"
  },
  {
    "text": "that that like i guess i kind of like to have a t-shirt that has this on it because uh because uh anyway these are",
    "start": "1377679",
    "end": "1383520"
  },
  {
    "text": "the these are the so so you see that that in in hexadecimal is zero zero through ff",
    "start": "1383520",
    "end": "1390640"
  },
  {
    "text": "um and uh uh i i i won't uh",
    "start": "1390640",
    "end": "1396080"
  },
  {
    "text": "go through all of them with you this afternoon but i'll give you the idea they fall although there's 256 that's a",
    "start": "1396080",
    "end": "1401840"
  },
  {
    "text": "that's a lot if you ever have to try to to to address 256 christmas cards you'll know what i mean uh",
    "start": "1401840",
    "end": "1408320"
  },
  {
    "text": "but um uh but uh they fall into about a dozen easily remembered categories in the",
    "start": "1408320",
    "end": "1414159"
  },
  {
    "text": "patterns and and and what uh one of the things that i want to stress is that is the cleanliness of the design or the",
    "start": "1414159",
    "end": "1420159"
  },
  {
    "text": "sort of the orthogonality of the design that the things that are that are true about one instruction are generally true",
    "start": "1420159",
    "end": "1425760"
  },
  {
    "text": "of all instructions um so for example uh in this in this format the instructions usually have",
    "start": "1425760",
    "end": "1432240"
  },
  {
    "text": "this form this form uh where the where the x and y and z are are independent",
    "start": "1432240",
    "end": "1437280"
  },
  {
    "text": "but sometimes y and z are tied together and so you have you know a 16-bit",
    "start": "1437280",
    "end": "1442840"
  },
  {
    "text": "uh something or other and sometimes all x y and z are tied together as one 24-bit field",
    "start": "1442840",
    "end": "1449200"
  },
  {
    "text": "so you have you have uh essentially three formats of instructions where",
    "start": "1449200",
    "end": "1454960"
  },
  {
    "text": "where all all the bytes are independent or where y and c are tied together or xyz are tied",
    "start": "1454960",
    "end": "1460320"
  },
  {
    "text": "together um another thing is a lot of these instructions if you go okay else you can",
    "start": "1460320",
    "end": "1466000"
  },
  {
    "text": "zoom in you can zoom up again now is your maybe your name wasn't allison",
    "start": "1466000",
    "end": "1471840"
  },
  {
    "text": "i've forgotten whoever you are on tv can you zoom up yeah now for example the very first",
    "start": "1471840",
    "end": "1478000"
  },
  {
    "text": "instruction is zero zero is called trap and this is um a uh in general it's sort of an",
    "start": "1478000",
    "end": "1484640"
  },
  {
    "text": "extensive it's a forced interrupt it means i i know i want to call the operating system i know i want to uh",
    "start": "1484640",
    "end": "1491279"
  },
  {
    "text": "to uh to stop on this and here you could you could make that to any extent any the",
    "start": "1491279",
    "end": "1498080"
  },
  {
    "text": "operating system can do any instructions at once on that uh the very last one all ones is is trip",
    "start": "1498080",
    "end": "1504240"
  },
  {
    "text": "which is which is different this is an interrupt too but it's a it but it doesn't go to the operating system it",
    "start": "1504240",
    "end": "1509600"
  },
  {
    "text": "goes to you and and user programs can write their own handlers for for trips while the",
    "start": "1509600",
    "end": "1515600"
  },
  {
    "text": "operating system writes the handler for the trap so so so every program has its own",
    "start": "1515600",
    "end": "1521919"
  },
  {
    "text": "interrupt but don't let the operating system know uh which could be used so for example for for breakpoint debugging",
    "start": "1523440",
    "end": "1529440"
  },
  {
    "text": "various things uh now um uh and i and usually if something's",
    "start": "1529440",
    "end": "1534799"
  },
  {
    "text": "wrong with the hardware um you get you get either all zeros or all ones and so and so one of these things will happen and you'll know about it please",
    "start": "1534799",
    "end": "1541360"
  },
  {
    "text": "um now uh i told you about the add instruction",
    "start": "1541360",
    "end": "1546400"
  },
  {
    "text": "uh which adds you know register y to register z and puts it in register x uh there's also an add",
    "start": "1546400",
    "end": "1552880"
  },
  {
    "text": "immediate uh and that's what this bracketed eye means in all these things um and uh and and you see uh uh",
    "start": "1552880",
    "end": "1561520"
  },
  {
    "text": "essentially every instruction that can possib that that that makes sense to have an immediate uh does uh which means",
    "start": "1561520",
    "end": "1567200"
  },
  {
    "text": "there's that the 256 almost gets divided into into into half 128 because you have",
    "start": "1567200",
    "end": "1573039"
  },
  {
    "text": "add and add immediate where add immediate says instead of take instead of taking register z",
    "start": "1573039",
    "end": "1578400"
  },
  {
    "text": "uh you change the op code from 32 to 33 then it would say take",
    "start": "1578400",
    "end": "1583520"
  },
  {
    "text": "register two plus three and and store it in register one okay so that's the idea of an immediate instruction and all the",
    "start": "1583520",
    "end": "1589760"
  },
  {
    "text": "immediate instructions take this uh this is this uh z field and treat it as",
    "start": "1589760",
    "end": "1595120"
  },
  {
    "text": "an unsigned constant and",
    "start": "1595120",
    "end": "1599039"
  },
  {
    "text": "just by learning the rules of immediate you learn a whole bunch of more now the the ad at instruction uh has",
    "start": "1603039",
    "end": "1610400"
  },
  {
    "text": "both signed and unsigned uh variance so so add and add immediate then this of",
    "start": "1610400",
    "end": "1615520"
  },
  {
    "text": "course subtract is the is for subtraction uh there's a reverse subtraction",
    "start": "1615520",
    "end": "1621760"
  },
  {
    "text": "well it's not really it negation is is like you can you can say",
    "start": "1622480",
    "end": "1627760"
  },
  {
    "text": "calculate zero minus r z and and uh uh so anyway those are",
    "start": "1627760",
    "end": "1633760"
  },
  {
    "text": "uh ordinary uh instructions on uh arithmetic on on 64-bit numbers",
    "start": "1633760",
    "end": "1640640"
  },
  {
    "text": "but then there's also uh the uh something that uh you sort of hide under",
    "start": "1640640",
    "end": "1646159"
  },
  {
    "text": "the table unless you unless you start working with uh with the details of machines and that is what happens if",
    "start": "1646159",
    "end": "1651440"
  },
  {
    "text": "this if you add two numbers together and you get something that's too big it doesn't fit in 64 bits well overflow",
    "start": "1651440",
    "end": "1657760"
  },
  {
    "text": "occurs uh and uh so then you have to decide what are you going to do about overflow",
    "start": "1657760",
    "end": "1664240"
  },
  {
    "text": "you're going to ignore it you're going to make it possible to see it somehow and what what do you do oh well um now",
    "start": "1664240",
    "end": "1671279"
  },
  {
    "text": "overflow is is especially important not only for integer results but also for floating",
    "start": "1671279",
    "end": "1678399"
  },
  {
    "text": "point results and these these instructions near the top here are floating point instructions like fadd",
    "start": "1678399",
    "end": "1683919"
  },
  {
    "text": "floating ad and uh and",
    "start": "1683919",
    "end": "1688960"
  },
  {
    "text": "the uh and it was important",
    "start": "1688960",
    "end": "1694159"
  },
  {
    "text": "to to be be consistent with the with the ieee standard on floating point which is uh which is well defined and has has",
    "start": "1695120",
    "end": "1701520"
  },
  {
    "text": "been in existence for more than 10 years and and has a lot has has a heck a lot of good ideas in it so uh so i knew from",
    "start": "1701520",
    "end": "1709039"
  },
  {
    "text": "from that i was going to use ieee floating point uh arithmetic in mix",
    "start": "1709039",
    "end": "1714720"
  },
  {
    "text": "and uh and and uh therefore in order to keep uh this whole thing easy to learn and and",
    "start": "1714720",
    "end": "1721919"
  },
  {
    "text": "clean and so on i had to make the whatever rules i chose for fixed point would have to be the same as the",
    "start": "1721919",
    "end": "1727360"
  },
  {
    "text": "rules for floating point and so i typically uh uh",
    "start": "1727360",
    "end": "1732960"
  },
  {
    "text": "defines different kinds of exceptions that can that can occur on floating point arithmetic",
    "start": "1732960",
    "end": "1738559"
  },
  {
    "text": "the uh you know overflow can occur underflow can occur uh you can divide by zero you",
    "start": "1738559",
    "end": "1744880"
  },
  {
    "text": "can have a result that's that's not a number um that",
    "start": "1744880",
    "end": "1750000"
  },
  {
    "text": "you can have a result that's undefined like square root of a negative number you can have a you can have a result",
    "start": "1750000",
    "end": "1755679"
  },
  {
    "text": "that's inexact so so they defined a whole bunch of exceptional conditions and so uh and so whatever i did with",
    "start": "1755679",
    "end": "1762320"
  },
  {
    "text": "floating point numbers i would also do for in for the the idea of an integer",
    "start": "1762320",
    "end": "1767600"
  },
  {
    "text": "except uh integer overflow and so uh uh that is uh",
    "start": "1767600",
    "end": "1773360"
  },
  {
    "text": "let me show you now something that there's a there's a web page that shows the these",
    "start": "1773360",
    "end": "1780320"
  },
  {
    "text": "op codes uh that you that's reachable from the other mx page it says",
    "start": "1780320",
    "end": "1785440"
  },
  {
    "text": "click here for the 256 op codes uh and on and uh you know that same chart there and then at the bottom of that page it",
    "start": "1785440",
    "end": "1791679"
  },
  {
    "text": "tells you about all other kinds of weird codes and and for example the exception codes that we have",
    "start": "1791679",
    "end": "1797200"
  },
  {
    "text": "are all listed here are the trip codes the dvz io vx so in integer divide check integer",
    "start": "1797200",
    "end": "1804559"
  },
  {
    "text": "overflow uh and then the fixed fixed point operations of floating overflow and so on are are these others that come",
    "start": "1804559",
    "end": "1810799"
  },
  {
    "text": "from ieee um and uh i did w is a separate i didn't know i i didn't",
    "start": "1810799",
    "end": "1818320"
  },
  {
    "text": "specify what oh uh i mean when you're converting a floating point",
    "start": "1818320",
    "end": "1823679"
  },
  {
    "text": "number to a fixed point number should it be an integer overflow that you get a floating point overflow that you get i decided to make a separate one for that",
    "start": "1823679",
    "end": "1830000"
  },
  {
    "text": "so that uh if if you were interested in calling it one way you could enable both of these otherwise you do the other one so",
    "start": "1830000",
    "end": "1835600"
  },
  {
    "text": "so i have eight and besides i needed eight eight codes uh to fill a byte so so uh uh it all it all packed real nice",
    "start": "1835600",
    "end": "1842880"
  },
  {
    "text": "uh the uh uh so so that's what happens if you add two numbers together and uh or",
    "start": "1842880",
    "end": "1849200"
  },
  {
    "text": "subtraction and the result is out of range you get integer overflow and then then uh uh it depends on on what the",
    "start": "1849200",
    "end": "1857600"
  },
  {
    "text": "programmer wants just as in as in floating point so there's a separate register which says do you want to do anything special",
    "start": "1857600",
    "end": "1865279"
  },
  {
    "text": "uh do you want to uh do you want to interrupt your your program on an image overflow or do you just want to sort of",
    "start": "1865279",
    "end": "1870480"
  },
  {
    "text": "log the fact that it happened and go on and uh and that's uh that's handled the same way as as with floating point um so",
    "start": "1870480",
    "end": "1878720"
  },
  {
    "text": "uh so actually uh this if if you do decide on interrupt that you're interested in",
    "start": "1878720",
    "end": "1884320"
  },
  {
    "text": "it it will go through one of your own routines like a trip that you that you write yourself that you can write yourself and you can uh",
    "start": "1884320",
    "end": "1890320"
  },
  {
    "text": "you can uh in this in this handler you um it's set up so that not only can you uh uh can you say oh by the way you know",
    "start": "1890320",
    "end": "1897679"
  },
  {
    "text": "uh you know uh you just had an in you just had an overflow um on your instructions such and such uh you can",
    "start": "1897679",
    "end": "1904159"
  },
  {
    "text": "also correct it can also correct the error and substitute another result if it wants if",
    "start": "1904159",
    "end": "1909200"
  },
  {
    "text": "if if if it wants to to uh to do something uh now",
    "start": "1909200",
    "end": "1914960"
  },
  {
    "text": "so the multiplication and division are our uh are in here somewhere here's",
    "start": "1914960",
    "end": "1921200"
  },
  {
    "text": "multiplication i put i i put them up here because the they tend to be slow",
    "start": "1921200",
    "end": "1926640"
  },
  {
    "text": "instructions like uh uh so maybe we combine the multiplier with a floating point multiplier in in in",
    "start": "1926640",
    "end": "1932399"
  },
  {
    "text": "hardware uh you could share a lot of the of of stuff maybe um",
    "start": "1932399",
    "end": "1938240"
  },
  {
    "text": "but multiply and divide uh again they all they can they can overflow and they these instructions are all 64 bits to",
    "start": "1938240",
    "end": "1944240"
  },
  {
    "text": "64-bit uh now however there's also unsigned arithmetic which which never overflows",
    "start": "1944240",
    "end": "1950799"
  },
  {
    "text": "never has exceptions and that's and so you add add the letter u so add an add unsigned says uh you know we're doing",
    "start": "1950799",
    "end": "1957039"
  },
  {
    "text": "like in in in the c language if we have unsigned numbers we just work mod 2 to 64. we just let uh carries go",
    "start": "1957039",
    "end": "1964240"
  },
  {
    "text": "in and out the door whatever uh at the left hand and uh",
    "start": "1964240",
    "end": "1969360"
  },
  {
    "text": "and so we got um we got a lot you know a lot of unsigned uh things where it says um you know i don't",
    "start": "1969360",
    "end": "1976399"
  },
  {
    "text": "care if it overflows here and and don't ever interrupt on these on these guys um",
    "start": "1976399",
    "end": "1982880"
  },
  {
    "text": "there's also a negate unsigned",
    "start": "1982880",
    "end": "1988159"
  },
  {
    "text": "and now that then and multiply and divide are unsigned are also are are also um",
    "start": "1988159",
    "end": "1995519"
  },
  {
    "text": "uh nicer from the standpoint of doing um if you if you're doing multiple precision arithmetic because the",
    "start": "1995519",
    "end": "2001919"
  },
  {
    "text": "unsigned multiply gives you a 128-bit uh product instead of just 64-bit uh if you",
    "start": "2001919",
    "end": "2009200"
  },
  {
    "text": "want to look at the high order bits and uh and divide on unsigned takes 128-bit in",
    "start": "2009200",
    "end": "2015840"
  },
  {
    "text": "and produces uh and produces a quotient and a remainder",
    "start": "2015840",
    "end": "2021679"
  },
  {
    "text": "while the ordinary divide does produce a remainder but it doesn't but it but it only starts with a 64-bit given but",
    "start": "2021840",
    "end": "2029760"
  },
  {
    "text": "in general that's the idea now we got uh also i got a whole bunch of little",
    "start": "2029760",
    "end": "2035760"
  },
  {
    "text": "things like like two ad unsigned it says multiply by two and multiply by four and i multiply by eight",
    "start": "2035760",
    "end": "2041519"
  },
  {
    "text": "and multiply by sixteen and add this is useful if you uh have to have to uh do subscripting and you you know you want",
    "start": "2041519",
    "end": "2047919"
  },
  {
    "text": "to move move along by um by two bites four bytes eight bytes and",
    "start": "2047919",
    "end": "2053919"
  },
  {
    "text": "sixteen bytes and now i gotta talk about about multibyte uh words uh this is a little bit fun um",
    "start": "2053919",
    "end": "2061760"
  },
  {
    "text": "uh the uh we have bytes here in eight eight bits",
    "start": "2061760",
    "end": "2067280"
  },
  {
    "text": "uh equals one byte um and um actually uh let's go let me let",
    "start": "2067280",
    "end": "2074079"
  },
  {
    "text": "me let me change that because um uh we had actually uh um two",
    "start": "2074079",
    "end": "2080398"
  },
  {
    "text": "two nibbles is one bite um uh uh what because a lot of times people",
    "start": "2080399",
    "end": "2088000"
  },
  {
    "text": "need needed a word for for like a hexadecimal digit something that's four bits four bits long and it becomes one",
    "start": "2088000",
    "end": "2094480"
  },
  {
    "text": "nibble and um and then of course",
    "start": "2094480",
    "end": "2100480"
  },
  {
    "text": "um we we have then um the problem of making other names here",
    "start": "2100839",
    "end": "2107119"
  },
  {
    "text": "and uh and i i got a letter uh with with a good suggestion from a guy who said two bits",
    "start": "2107119",
    "end": "2113760"
  },
  {
    "text": "is one nip and two big two nips is one nibble okay",
    "start": "2113760",
    "end": "2119280"
  },
  {
    "text": "now now um there's a big need for for a 16 bit quantity",
    "start": "2119280",
    "end": "2126078"
  },
  {
    "text": "and a lot of people have come up with different names for 16-bit things so oh and uh they were but unfortunately the",
    "start": "2127839",
    "end": "2134480"
  },
  {
    "text": "there was there was the uh uh the most common uh thing for 16-bit quantity is uh",
    "start": "2134480",
    "end": "2140880"
  },
  {
    "text": "is is a word and this is what this i found even used uh",
    "start": "2140880",
    "end": "2146000"
  },
  {
    "text": "uh what i mean in intel considered 16 bit to be one word and and even though they go to even",
    "start": "2146000",
    "end": "2152400"
  },
  {
    "text": "the alpha was talking about 16 bits as a as a word",
    "start": "2152400",
    "end": "2157599"
  },
  {
    "text": "uh and a uh 64-bit thing was a quad word to the alpha to the to the output to the",
    "start": "2157599",
    "end": "2162640"
  },
  {
    "text": "people there um on the other hand when you grow up in the unix world everyone knows that a word is 32 bits",
    "start": "2162640",
    "end": "2169599"
  },
  {
    "text": "and uh it but for cray it a word was 64 was 64 bits",
    "start": "2169599",
    "end": "2174720"
  },
  {
    "text": "and um and so it was quite clear that that the word word had you know impossible to to use in a",
    "start": "2174720",
    "end": "2182480"
  },
  {
    "text": "way that that that you could get any agreement on whatsoever and there were there were a few other",
    "start": "2182480",
    "end": "2188480"
  },
  {
    "text": "proposals for for 16-bit things and i summarized all of them actually on a web page if you're interested and i can",
    "start": "2188480",
    "end": "2194240"
  },
  {
    "text": "refer to uh if you look at my news 98 page it describes discusses it but anyway",
    "start": "2194240",
    "end": "2201520"
  },
  {
    "text": "after thinking about it and talking over with a lot of people um i came up with the right answer which",
    "start": "2201520",
    "end": "2206880"
  },
  {
    "text": "is which has been spreading around the world very rapidly two bites is one wide",
    "start": "2206880",
    "end": "2213720"
  },
  {
    "text": "now it sounds a little bit like word just say with a brooklyn accent so if you you know so it's okay but the re but",
    "start": "2214320",
    "end": "2220320"
  },
  {
    "text": "it wants to very much to be a one-syllable word that starts with w and one of the one of the big reasons",
    "start": "2220320",
    "end": "2225839"
  },
  {
    "text": "for this is that that the that the extended unix now uh well",
    "start": "2225839",
    "end": "2231520"
  },
  {
    "text": "the functions that use these 16-bit characters you know you know unicode is is growing fast and and and it's this",
    "start": "2231520",
    "end": "2237839"
  },
  {
    "text": "code that that handles all the uh uh essentially all the world's languages except burmese and because they haven't",
    "start": "2237839",
    "end": "2244400"
  },
  {
    "text": "been able to get into burma yet but but it'll handle burma too and uh and so uh",
    "start": "2244400",
    "end": "2250240"
  },
  {
    "text": "unicode the 16-bit code uh they uh uh uh is you know",
    "start": "2250240",
    "end": "2256800"
  },
  {
    "text": "all kinds of subroutines are are needed for for things like like w print f you know and and",
    "start": "2256800",
    "end": "2262800"
  },
  {
    "text": "and w get s and so on all the units uh all the all the uh unix",
    "start": "2262800",
    "end": "2269760"
  },
  {
    "text": "c standard library functions that that uh uh uh",
    "start": "2269760",
    "end": "2275040"
  },
  {
    "text": "work on on 8-bit characters uh the corresponding ones for six-speed characters have a w in them and so so",
    "start": "2275040",
    "end": "2281040"
  },
  {
    "text": "it's it it really is nice because this is the wide print the wide print uh version of the thing and so on so so two bytes is a",
    "start": "2281040",
    "end": "2287839"
  },
  {
    "text": "wide and i've been using this now for for quite a few months and in fact uh not only is it's been spreading so fast",
    "start": "2287839",
    "end": "2293359"
  },
  {
    "text": "that uh that bite magazine ceased publication last year and the successor to bite is that has been named wide",
    "start": "2293359",
    "end": "2300720"
  },
  {
    "text": "and it's going to be an online magazine and it's very interesting oh no um but um i mean i i did find that some",
    "start": "2300720",
    "end": "2307599"
  },
  {
    "text": "conflicts like there's also there's already a magazine called canada-wide for for large canadians but uh uh but uh",
    "start": "2307599",
    "end": "2315359"
  },
  {
    "text": "you know that's too bad but you know they aren't they'll they'll probably you know get a kick out of this now now um uh so 16 bit things uh we",
    "start": "2315359",
    "end": "2322960"
  },
  {
    "text": "call them wise and it works the next thing though what should i call the uh the",
    "start": "2322960",
    "end": "2328400"
  },
  {
    "text": "32-bit and the 64-bit thing and and uh and and at this point uh all",
    "start": "2328400",
    "end": "2334720"
  },
  {
    "text": "these uh um our memory is is good at remembering a",
    "start": "2334720",
    "end": "2339920"
  },
  {
    "text": "few small things but after that i after thinking about a long time i i",
    "start": "2339920",
    "end": "2345440"
  },
  {
    "text": "i realized that that this kind of clever use of why and stuff is not gonna it shouldn't",
    "start": "2345440",
    "end": "2350640"
  },
  {
    "text": "shouldn't continue on because because it gets to be a difficult thing of memory after this point so ins so i hear i i",
    "start": "2350640",
    "end": "2356880"
  },
  {
    "text": "call it a a tetrabyte or a tetra uh you can say tetrabyte if it sounds",
    "start": "2356880",
    "end": "2363280"
  },
  {
    "text": "better to have another syllable in the word and two tetras is an octa",
    "start": "2363280",
    "end": "2368960"
  },
  {
    "text": "um or octobite and uh it's because because the more you look at programming these things you",
    "start": "2368960",
    "end": "2375359"
  },
  {
    "text": "have to somehow have a have a strong remembrance that four that four associated with with 32-bit words and",
    "start": "2375359",
    "end": "2382480"
  },
  {
    "text": "eight is associated with 64-bit words because you have to realize that you're passing over that many bytes in the code",
    "start": "2382480",
    "end": "2388079"
  },
  {
    "text": "and when you whenever when whenever you're looking at a program uh and and you have to stop and think well now",
    "start": "2388079",
    "end": "2394240"
  },
  {
    "text": "how many bytes is that then uh that's wasted time but if it's an octa",
    "start": "2394240",
    "end": "2399359"
  },
  {
    "text": "byte you know how many bytes it is so anyway this is the these are the these are the terms that that mx uses and i",
    "start": "2399359",
    "end": "2406079"
  },
  {
    "text": "and i believe they're they're spreading one so now now uh yeah why not duel then instead of or",
    "start": "2406079",
    "end": "2412560"
  },
  {
    "text": "something or duo instead of why not begin the switch what is the fundamental unit why not begin to switch",
    "start": "2412560",
    "end": "2419119"
  },
  {
    "text": "immediately um",
    "start": "2419119",
    "end": "2422680"
  },
  {
    "text": "you could yeah you could maybe maybe do i think i think it was there was already there was already copped by somebody in",
    "start": "2428320",
    "end": "2434560"
  },
  {
    "text": "the in i mean like like i was thinking of octet for example but octet was without because octet is used by all the",
    "start": "2434560",
    "end": "2441200"
  },
  {
    "text": "coding uh the information theory and and i you know so so okay um",
    "start": "2441200",
    "end": "2447119"
  },
  {
    "text": "but um so anyway the instructions in in mx here are load bite",
    "start": "2447119",
    "end": "2453520"
  },
  {
    "text": "or load by unsigned a load wide load tetra load octa okay and that means",
    "start": "2453520",
    "end": "2462079"
  },
  {
    "text": "that you're taking out of memory uh either one by two bytes four bytes or eight bytes",
    "start": "2462079",
    "end": "2467599"
  },
  {
    "text": "and a load byte um uh will also uh extend the sign so if so",
    "start": "2467599",
    "end": "2473680"
  },
  {
    "text": "so you look at a byte is considered to be a number between minus 128 plus 127 and and load bite uh",
    "start": "2473680",
    "end": "2481760"
  },
  {
    "text": "uh is um uh you know then that then brings the byte into a 64-bit register",
    "start": "2481760",
    "end": "2487040"
  },
  {
    "text": "now uh i should mention that um uh that people say it's a risk it's a reduced",
    "start": "2487040",
    "end": "2492720"
  },
  {
    "text": "instruction set machine but how can a machine with 256 opcos be considered a reduced construction set machine and the",
    "start": "2492720",
    "end": "2499599"
  },
  {
    "text": "reason is that in fact if you look at uh at you know the alpha and the power pc and stuff like that and count the number",
    "start": "2499599",
    "end": "2505680"
  },
  {
    "text": "of instructions uh it's not 256 isn't out of line uh in fact uh the idea of",
    "start": "2505680",
    "end": "2511520"
  },
  {
    "text": "reduced instruction set is not that there's a small number of instructions of opcodes but it's a small number of",
    "start": "2511520",
    "end": "2517280"
  },
  {
    "text": "different conventions in the opcodes and really what the really the characteristic of the architecture is",
    "start": "2517280",
    "end": "2522640"
  },
  {
    "text": "that the references to memory uh are confined to loading and storing for",
    "start": "2522640",
    "end": "2527760"
  },
  {
    "text": "memory and uh that and and and everything else is between registers as a resource sometimes called a load store",
    "start": "2527760",
    "end": "2534319"
  },
  {
    "text": "architecture or register register architecture because because actually all the instructions",
    "start": "2534319",
    "end": "2540800"
  },
  {
    "text": "uh in in the eights nines a and b here in these four bands are are low and store uh to memory while the",
    "start": "2540800",
    "end": "2548720"
  },
  {
    "text": "other instructions in the other in all the other bands are are just between registers and that's the idea of a risk",
    "start": "2548720",
    "end": "2554240"
  },
  {
    "text": "architecture um now uh so so uh",
    "start": "2554240",
    "end": "2559599"
  },
  {
    "text": "in that case the instruction is not uh that register x is set to a a function",
    "start": "2559599",
    "end": "2565920"
  },
  {
    "text": "of register y and z with an ordinary operation but in this case it means you add register y arrays through z and then",
    "start": "2565920",
    "end": "2572720"
  },
  {
    "text": "look in that memory location and then you either you either load that into radius or x or storage or x into",
    "start": "2572720",
    "end": "2578880"
  },
  {
    "text": "that into that location so so uh uh um or else if z is an",
    "start": "2578880",
    "end": "2584319"
  },
  {
    "text": "immediate then you add this in this constant to the base register that's in register y",
    "start": "2584319",
    "end": "2589760"
  },
  {
    "text": "so that's the idea of load and mode load byte load byte unsigned would be the same as loading a byte but you but you",
    "start": "2589760",
    "end": "2596400"
  },
  {
    "text": "don't sign extended you just put in all you put zeros into the into the other bytes uh load tetra unsigned you know loads",
    "start": "2596400",
    "end": "2604000"
  },
  {
    "text": "the lower two lower 32 bits but they put upper 32 bits close to zero uh load wide",
    "start": "2604000",
    "end": "2609680"
  },
  {
    "text": "unsigned now i have a load ah octa byte unsigned um it's exactly the same as a load",
    "start": "2609680",
    "end": "2616000"
  },
  {
    "text": "octavite but uh i said i wanted this this design to be orthogonal and consistent so if",
    "start": "2616000",
    "end": "2622000"
  },
  {
    "text": "you're if you're dealing with with with something that you know you uh uh the uh",
    "start": "2622000",
    "end": "2629280"
  },
  {
    "text": "i have a there's something about this here",
    "start": "2629520",
    "end": "2634920"
  },
  {
    "text": "foolish consistency is the hobgoblin of uh okay um",
    "start": "2635599",
    "end": "2640880"
  },
  {
    "text": "yeah no no anyway there's reason to be consistent in in in in design instead of",
    "start": "2640880",
    "end": "2648240"
  },
  {
    "text": "you know i had this extra i could have defined some some fancy op code in here but it but it broke the pattern i didn't",
    "start": "2648240",
    "end": "2653359"
  },
  {
    "text": "want to do that um there there's um load short float this",
    "start": "2653359",
    "end": "2658640"
  },
  {
    "text": "is a floating point thing um because uh the main thing i disagree well finally",
    "start": "2658640",
    "end": "2664960"
  },
  {
    "text": "when you have a 64-bit machine um a single precision floating point uh the",
    "start": "2664960",
    "end": "2670000"
  },
  {
    "text": "32-bit floating point numbers don't make any sense anymore uh it's almost uh if",
    "start": "2670000",
    "end": "2675280"
  },
  {
    "text": "it's almost terrible to to imagine computing with 32-bit floating point if you have a 64-bit register",
    "start": "2675280",
    "end": "2682160"
  },
  {
    "text": "except that you might want to pack the data or get it from some from some uh you know some some",
    "start": "2682319",
    "end": "2688640"
  },
  {
    "text": "program that was uh that was from long ago but but uh uh",
    "start": "2688640",
    "end": "2695040"
  },
  {
    "text": "so so i can find so i don't have a single precision floating point um",
    "start": "2695520",
    "end": "2701119"
  },
  {
    "text": "edition but i can load it into a register and i can add and then i can store it out again and that's enough to",
    "start": "2701119",
    "end": "2706640"
  },
  {
    "text": "actually round to exactly the ieee standard um but uh but i uh that's that i don't want",
    "start": "2706640",
    "end": "2713040"
  },
  {
    "text": "to talk a load high tetra is is that you that you take a texture bike but you put it in the upper half instead of the",
    "start": "2713040",
    "end": "2718240"
  },
  {
    "text": "lower half and these other instructions are kind of weird i'll go",
    "start": "2718240",
    "end": "2723280"
  },
  {
    "text": "into them so so then all the load instructions have corresponding store instructions that go with them store bites store bite unsigned the store wide",
    "start": "2723280",
    "end": "2729680"
  },
  {
    "text": "wide unsigned textured and so on short float high tetra",
    "start": "2729680",
    "end": "2735440"
  },
  {
    "text": "and convention is that actually uh an overflow can occur when you're storing",
    "start": "2735440",
    "end": "2740960"
  },
  {
    "text": "if you try to store a bite and and and the value of the register is not",
    "start": "2740960",
    "end": "2746800"
  },
  {
    "text": "between minus 128 and plus 127 uh then over an integer overflow is signaled but",
    "start": "2746800",
    "end": "2752319"
  },
  {
    "text": "store by unsigned just takes the bite and forgets about overflow and stuff um store a constant is another one in",
    "start": "2752319",
    "end": "2758800"
  },
  {
    "text": "here you know you can set up you can set uh",
    "start": "2758800",
    "end": "2764720"
  },
  {
    "text": "memory to location to zero or some small number instead of putting it in a register okay",
    "start": "2764720",
    "end": "2770960"
  },
  {
    "text": "um so the load and store instructions are",
    "start": "2770960",
    "end": "2776319"
  },
  {
    "text": "are uh characteristic of risk machines that in that uh that's the way",
    "start": "2776319",
    "end": "2782640"
  },
  {
    "text": "memory gets in in and out of registers but that's a major a major operation",
    "start": "2782640",
    "end": "2789839"
  },
  {
    "text": "major part of the hardware because uh there's a there's all kind of layers of caches between the",
    "start": "2789839",
    "end": "2795839"
  },
  {
    "text": "memory and the registers in order to to get efficiency now um i'll go quickly through some of",
    "start": "2795839",
    "end": "2801200"
  },
  {
    "text": "the other stuff um uh here's uh",
    "start": "2801200",
    "end": "2806640"
  },
  {
    "text": "these these commands here there's four set commands set high set medium high medium low and set low and and these",
    "start": "2806640",
    "end": "2814319"
  },
  {
    "text": "instructions all take a wide and 16 you know 16-bit uh",
    "start": "2814319",
    "end": "2822240"
  },
  {
    "text": "immediate value so it's a wide immediate and and puts it into uh and puts it into",
    "start": "2822319",
    "end": "2828400"
  },
  {
    "text": "the highest wide of the register the medium high or the or medium low or the low",
    "start": "2828400",
    "end": "2833440"
  },
  {
    "text": "and you can increment the highest wide or the medium-high wide or into the highest or the medium-highest and not",
    "start": "2833440",
    "end": "2840640"
  },
  {
    "text": "this means take away bits from from from these and so so here we have 16 bit uh immediate things and and with",
    "start": "2840640",
    "end": "2848400"
  },
  {
    "text": "four of these instructions you can build any 16-bit any 64-bit constant you want into a register",
    "start": "2848400",
    "end": "2854319"
  },
  {
    "text": "and it takes four instructions which is uh twice 64 bits because each instruction is 32 bit",
    "start": "2854319",
    "end": "2860640"
  },
  {
    "text": "now we got we got through those instructions now the branch instructions are",
    "start": "2860640",
    "end": "2865839"
  },
  {
    "text": "are here and uh there's eight of them",
    "start": "2865839",
    "end": "2871119"
  },
  {
    "text": "branch negative branch zero branch positive uh branch odd and then the",
    "start": "2871119",
    "end": "2876240"
  },
  {
    "text": "opposite non-negative non-zero non-positive and even and then there's two versions of the",
    "start": "2876240",
    "end": "2882480"
  },
  {
    "text": "branch uh and then these branches are are relative to the location so if you say branch uh negative uh to uh",
    "start": "2882480",
    "end": "2890400"
  },
  {
    "text": "self plus four that means you go ahead four instructions in the code um but if you wanna go self minus four that's",
    "start": "2890400",
    "end": "2897440"
  },
  {
    "text": "that's the backward uh version of of the instruction and in that case uh",
    "start": "2897440",
    "end": "2902720"
  },
  {
    "text": "you it's like having an extra bit uh in the up in the op code because then you give the uh",
    "start": "2902720",
    "end": "2909040"
  },
  {
    "text": "the complement they it would say if you want to go to self minus four you would say branch negative backward uh",
    "start": "2909040",
    "end": "2916160"
  },
  {
    "text": "well the assembler does this for you but usually so you just say branch negative self minus four or or the symbolic name",
    "start": "2916160",
    "end": "2921760"
  },
  {
    "text": "of that location but but uh in the hardware branch negative backward would the",
    "start": "2921760",
    "end": "2928480"
  },
  {
    "text": "would say then uh uh minus four is given in in uh",
    "start": "2928480",
    "end": "2933520"
  },
  {
    "text": "in two's complement form so so those are the eight branch instructions they're easy uh you just",
    "start": "2933520",
    "end": "2939440"
  },
  {
    "text": "you give it uh the name of a register and then if that register is negative",
    "start": "2939440",
    "end": "2945440"
  },
  {
    "text": "you can branch forward or backward by the other 16 bits in the instructions so that that gives you a range of",
    "start": "2945440",
    "end": "2951599"
  },
  {
    "text": "of plus or minus 65k instructions",
    "start": "2951599",
    "end": "2957280"
  },
  {
    "text": "uh then there's the probable branch uh uh negative four and so on so so these",
    "start": "2957280",
    "end": "2962640"
  },
  {
    "text": "are the same as branch except you give a hint saying i think i'll probably branch well the branch says i think i probably",
    "start": "2962640",
    "end": "2968000"
  },
  {
    "text": "won't branch and then the hardware can use branch prediction",
    "start": "2968000",
    "end": "2973760"
  },
  {
    "text": "mechanisms to refine this this guess but uses this as the initial guess anyway",
    "start": "2973760",
    "end": "2979760"
  },
  {
    "text": "to the first time you come to an instruction you can avoid branching all together with these cs and zs instructions that",
    "start": "2979760",
    "end": "2986480"
  },
  {
    "text": "that occur here this is conditional set if negative conditional set of zero so on or zero or set if negative uh uh",
    "start": "2986480",
    "end": "2992960"
  },
  {
    "text": "these instructions the meaning of conditional set negative is is is this it says uh uh if register y is negative",
    "start": "2992960",
    "end": "3000400"
  },
  {
    "text": "then set register x to register z otherwise don't set anything and so you can often avoid a branch",
    "start": "3000400",
    "end": "3006720"
  },
  {
    "text": "instruction it's much faster on on on modern machine to style to do these things and the zero set is",
    "start": "3006720",
    "end": "3013680"
  },
  {
    "text": "similar it says if register y is negative then set a register x to",
    "start": "3013680",
    "end": "3018800"
  },
  {
    "text": "register z otherwise that register x to zero uh which turns out to be even easier to",
    "start": "3018800",
    "end": "3024079"
  },
  {
    "text": "implement and and it occurs in lots and lots of programs",
    "start": "3024079",
    "end": "3030000"
  },
  {
    "text": "uh okay uh the uh the boolean operations are real simple the or and",
    "start": "3030000",
    "end": "3035839"
  },
  {
    "text": "um or or with negative uh and with the negative or complement or not and then there's nor and nand",
    "start": "3035839",
    "end": "3042559"
  },
  {
    "text": "which is the complement of our exclusive or and and not exclusive or so these are 64-bit",
    "start": "3042559",
    "end": "3049200"
  },
  {
    "text": "operations on bits i should talk a little bit about the shifts here this is shift left",
    "start": "3049200",
    "end": "3055920"
  },
  {
    "text": "shift left unsigned shift right shift right unsigned um one thing i'm a little bit worried about in my if my books have",
    "start": "3055920",
    "end": "3064319"
  },
  {
    "text": "all these instructions i'm trying to define in such a way that they that they should have been defined on all the on all the machines now",
    "start": "3064319",
    "end": "3069920"
  },
  {
    "text": "but i find that almost all machines define shift wrong uh that they for example on a 32-bit",
    "start": "3069920",
    "end": "3075760"
  },
  {
    "text": "machine it'll it'll only look at five bits of the amount of shift and it'll it so it won't distinguish",
    "start": "3075760",
    "end": "3081040"
  },
  {
    "text": "between shifting by zero and shifting by 32 which are rather dramatically different",
    "start": "3081040",
    "end": "3086319"
  },
  {
    "text": "in fact um and so compilers have to have to worry and have you know have to test for the special case if they're",
    "start": "3086319",
    "end": "3092240"
  },
  {
    "text": "going to implement the language over the variable uh variable length shift um so in in my",
    "start": "3092240",
    "end": "3098480"
  },
  {
    "text": "uh machine of shift left is exactly equivalent to multiplying by a power of two including whether or not an overflow",
    "start": "3098480",
    "end": "3105040"
  },
  {
    "text": "occurs you know if you if you if you want to replace uh multiply by 16 with a shift",
    "start": "3105040",
    "end": "3111599"
  },
  {
    "text": "left 4 it's absolutely legitimate in that mix",
    "start": "3111599",
    "end": "3117200"
  },
  {
    "text": "but it isn't on on on the machine so i'm afraid maybe readers in my books are going to going to program in the real world are",
    "start": "3117280",
    "end": "3123680"
  },
  {
    "text": "going to are going to assume that the real world is actually as nice as this i don't know but i but still uh i'm going to do it",
    "start": "3123680",
    "end": "3129920"
  },
  {
    "text": "the right way in hopes that uh you know machines will eventually change over and this will be",
    "start": "3129920",
    "end": "3135839"
  },
  {
    "text": "they'll be in the majority shift left unsigned is is the same as shift left with no",
    "start": "3135839",
    "end": "3142880"
  },
  {
    "text": "overflow occurring so it's the same as multiplying by 16 uh",
    "start": "3142880",
    "end": "3148800"
  },
  {
    "text": "unsigned shift right again is equivalent to dividing by a",
    "start": "3148800",
    "end": "3154400"
  },
  {
    "text": "power of two in all cases uh and uh",
    "start": "3154400",
    "end": "3160240"
  },
  {
    "text": "and with the sign extended in the arithmetic shift the unsigned uh shift brings in zeros from the left so these",
    "start": "3160240",
    "end": "3166400"
  },
  {
    "text": "instructions are fairly easy to understand i got a mux instruction here this is multiplex",
    "start": "3166400",
    "end": "3171680"
  },
  {
    "text": "instruction which uh which says uh register x is set to uh",
    "start": "3171680",
    "end": "3178079"
  },
  {
    "text": "either register y or register z in each each bit position is determined by a mask which is in it which is in another",
    "start": "3178480",
    "end": "3184480"
  },
  {
    "text": "auxiliary register so there so you have that fancy that fancy instruction there um let's",
    "start": "3184480",
    "end": "3191280"
  },
  {
    "text": "see let uh to make comparisons you have less than uh less than unsigned equal equal unsigned equal unsign the same as",
    "start": "3191280",
    "end": "3197599"
  },
  {
    "text": "equal but you compare right just one register to another and then you know i set it to zero or one",
    "start": "3197599",
    "end": "3203280"
  },
  {
    "text": "based on whether the thing is is is less so so anyway a lot of these instructions are easy um the jump instruction is",
    "start": "3203280",
    "end": "3209920"
  },
  {
    "text": "trivial that's an absolute jump here we have a it's relative with the with x y z all treated as a 24",
    "start": "3209920",
    "end": "3216400"
  },
  {
    "text": "bit uh uh constant so you can jump plus or minus two to the 24th instructions d",
    "start": "3216400",
    "end": "3222319"
  },
  {
    "text": "jump is the same but it's it's dynamic is for like a case statement in um",
    "start": "3222319",
    "end": "3228319"
  },
  {
    "text": "in uh in c where you go where you want a switch statement in c and uh and the get",
    "start": "3228319",
    "end": "3233760"
  },
  {
    "text": "address is uh is is saying put into a register uh the address relative to your present location so this uh uh",
    "start": "3233760",
    "end": "3242000"
  },
  {
    "text": "saves you means that air makes programs can pretty much be loaded into any part of memory without",
    "start": "3242000",
    "end": "3248000"
  },
  {
    "text": "the loader having to relocate a bunch of stuff um well um the",
    "start": "3248000",
    "end": "3254319"
  },
  {
    "text": "the families of instruction i've talked about that we had arithmetic and we've had boolean we had load and store we had",
    "start": "3254319",
    "end": "3260720"
  },
  {
    "text": "we had branching and and uh i haven't talked about floating point that that actually takes it takes",
    "start": "3260720",
    "end": "3266800"
  },
  {
    "text": "a while um uh so i can just say quickly it's it's quite analogous to everything else",
    "start": "3266800",
    "end": "3272640"
  },
  {
    "text": "we've been saying um uh i have comparison instruction floating point less than floating point unordered",
    "start": "3272640",
    "end": "3278960"
  },
  {
    "text": "with respect to this these are things that you need for the ieee standard um convert uh from float from fixed point",
    "start": "3278960",
    "end": "3286000"
  },
  {
    "text": "to floating point uh convert from floating point to fixed point all these things are are",
    "start": "3286000",
    "end": "3291119"
  },
  {
    "text": "fairly uh fairly straightforward and i but i want to talk about the uh",
    "start": "3291119",
    "end": "3297200"
  },
  {
    "text": "some of the other more interesting parts of the machine um so",
    "start": "3297200",
    "end": "3303200"
  },
  {
    "text": "there are um there are two um innovations i want to talk about uh",
    "start": "3303200",
    "end": "3310000"
  },
  {
    "text": "one very briefly and the other one a little bit more slightly more length um the the one i want to talk about very",
    "start": "3310000",
    "end": "3315680"
  },
  {
    "text": "briefly is the is the um the instruction called",
    "start": "3315680",
    "end": "3321920"
  },
  {
    "text": "more and there's mxlr as well um",
    "start": "3321920",
    "end": "3327200"
  },
  {
    "text": "now uh this is an instruction that doesn't exist in any in any computer",
    "start": "3327200",
    "end": "3332880"
  },
  {
    "text": "right now so why should i put it in the machine if it's supposed to be realistic and so on well it's because it's ahead of time uh",
    "start": "3332880",
    "end": "3339920"
  },
  {
    "text": "in fact i think there was a machine something like this in the uh in the micro unity machine that never saw the",
    "start": "3339920",
    "end": "3344960"
  },
  {
    "text": "light of day but the but uh now um in fact these instructions uh uh are",
    "start": "3344960",
    "end": "3351440"
  },
  {
    "text": "are much simpler and and and cleaner than uh than instructions uh uh that that are are going into a lot of",
    "start": "3351440",
    "end": "3358160"
  },
  {
    "text": "machines now uh to do what they call multimedia or",
    "start": "3358160",
    "end": "3363599"
  },
  {
    "text": "operations or anyway there's a lot of special hardware going into facilitating",
    "start": "3363599",
    "end": "3370559"
  },
  {
    "text": "operations on pixels and stuff like that and um",
    "start": "3370559",
    "end": "3376720"
  },
  {
    "text": "and i have also uh uh instructions called bike diff and wide dips which which work on on parts of",
    "start": "3376720",
    "end": "3383760"
  },
  {
    "text": "words simultaneously so for example you can be you can be subtracting uh",
    "start": "3383760",
    "end": "3389200"
  },
  {
    "text": "all the all the bytes of of of two different registers so each fight",
    "start": "3389200",
    "end": "3394240"
  },
  {
    "text": "independently without carrying into the next and uh replace it by zero if the result is negative",
    "start": "3394240",
    "end": "3399839"
  },
  {
    "text": "um and uh these instructions have actually become known in intel world as mmx technology",
    "start": "3399839",
    "end": "3406079"
  },
  {
    "text": "uh i i can claim having the word m-mix before they had mmx technology because i gave this",
    "start": "3406079",
    "end": "3412880"
  },
  {
    "text": "lecture in 1992. but but anyway it's uh it's just an interesting",
    "start": "3412880",
    "end": "3419200"
  },
  {
    "text": "coincidence that they that their mmx technology is for instructions like this despite",
    "start": "3419200",
    "end": "3424640"
  },
  {
    "text": "different wide difference but the more instruction is is based on the fact that 64 is actually eight times eight",
    "start": "3424640",
    "end": "3431680"
  },
  {
    "text": "and uh and when you have a 64-bit word it's natural to actually think of that word as if it was a matrix of eight rows",
    "start": "3431680",
    "end": "3440480"
  },
  {
    "text": "and eight columns um a bit and then you can uh saying well if you",
    "start": "3440480",
    "end": "3446640"
  },
  {
    "text": "know so sometimes a 64-bit word represents a uh an integer sometimes it represents a floating point number uh",
    "start": "3446640",
    "end": "3453680"
  },
  {
    "text": "but here it also can represent a matrix and so uh and so these are this means multiple",
    "start": "3453680",
    "end": "3459839"
  },
  {
    "text": "multiply matrices uh multiply the registers together as if they were as if they were",
    "start": "3459839",
    "end": "3465599"
  },
  {
    "text": "eight by eight matrices and this and and and m xor is the same multiply uh",
    "start": "3465599",
    "end": "3470880"
  },
  {
    "text": "there's two ways to calculate the product of eight by eight boolean matrices one is by taking the or and one",
    "start": "3470880",
    "end": "3476400"
  },
  {
    "text": "is by taking exclusive or of the other things as you're going and um",
    "start": "3476400",
    "end": "3481839"
  },
  {
    "text": "and uh let me just explain for example if you multiply by the identity matrix you don't change anything",
    "start": "3481839",
    "end": "3488480"
  },
  {
    "text": "but if you multiply by the by a matrix that looks like this uh you you flip the bytes from left to",
    "start": "3488480",
    "end": "3494720"
  },
  {
    "text": "right so so you go big and into little endian okay um uh",
    "start": "3494720",
    "end": "3500880"
  },
  {
    "text": "if you if you multiply by this matrix on both left and right you flip all the bits",
    "start": "3500880",
    "end": "3506720"
  },
  {
    "text": "uh uh this is you know but in general you if you multiply by any permutation matrix and you and and if you multiply",
    "start": "3506720",
    "end": "3513520"
  },
  {
    "text": "by the permutation matrix on the on the left you're permuting the bytes of the word uh if you're multiplying by that",
    "start": "3513520",
    "end": "3519599"
  },
  {
    "text": "permutation matrix on the right you're permuting the bits within a byte",
    "start": "3519599",
    "end": "3525359"
  },
  {
    "text": "and if you have several ones in a row then you you",
    "start": "3525359",
    "end": "3531119"
  },
  {
    "text": "then you're you're putting several uh you're putting several bytes together uh so so uh",
    "start": "3531119",
    "end": "3537920"
  },
  {
    "text": "i i give in the write-up i give a whole bunch of applications of this to show how you can do lots of uh",
    "start": "3537920",
    "end": "3543760"
  },
  {
    "text": "lots of stuff with just a few instructions and a lot and it combines nicely with the other uh",
    "start": "3543760",
    "end": "3550799"
  },
  {
    "text": "uh other things like the count bits instruction",
    "start": "3550799",
    "end": "3556480"
  },
  {
    "text": "so so uh um and dick sites told me that uh every every computer architect is entitled to",
    "start": "3556480",
    "end": "3563040"
  },
  {
    "text": "have at least one instruction that's going to look silly in 10 years and so and so maybe this will be it you",
    "start": "3563040",
    "end": "3569280"
  },
  {
    "text": "know but i think i think it actually is going to catch on but who knows",
    "start": "3569280",
    "end": "3574480"
  },
  {
    "text": "you couldn't use it in in you know c compiler would never use it unless unless you build in something that was",
    "start": "3574480",
    "end": "3580079"
  },
  {
    "text": "where first could define a data type to be an eight by eight uh bit matrix but uh you can use these",
    "start": "3580079",
    "end": "3585839"
  },
  {
    "text": "things also for uh for efficient calculation in finite fields uh it's a it's uh",
    "start": "3585839",
    "end": "3592960"
  },
  {
    "text": "i don't know i couldn't resist putting it in now the other thing i want to tell you about is the stack is the subroutine",
    "start": "3592960",
    "end": "3598640"
  },
  {
    "text": "linkage in the in the machine um subroutine calls uh uh stack or a",
    "start": "3598640",
    "end": "3604559"
  },
  {
    "text": "register stack uh now now uh this is this uh uh if you look at what",
    "start": "3604559",
    "end": "3609680"
  },
  {
    "text": "actually happens in in in the the programs that are being being run",
    "start": "3609680",
    "end": "3615520"
  },
  {
    "text": "all the time now a significant amount of time is being spent uh putting uh taking arguments uh uh uh",
    "start": "3615520",
    "end": "3623359"
  },
  {
    "text": "getting arguments uh into subroutines and getting you know parameters in the sub teams and",
    "start": "3623359",
    "end": "3629440"
  },
  {
    "text": "and so on and passing the results back out of the subroutine and uh and so uh",
    "start": "3629440",
    "end": "3634480"
  },
  {
    "text": "people realize this and they they uh design different architectures in order to uh in order to make the",
    "start": "3634480",
    "end": "3641359"
  },
  {
    "text": "the the passing of arguments and so on uh reasonably fast and and and",
    "start": "3641359",
    "end": "3647680"
  },
  {
    "text": "and uh he has to work at recursive subroutines and all kinds of stuff um and uh",
    "start": "3647680",
    "end": "3653599"
  },
  {
    "text": "uh the uh the well there are various solutions to this and",
    "start": "3653599",
    "end": "3660240"
  },
  {
    "text": "the one that that came out of berkeley risk uh uh the uh was what",
    "start": "3660240",
    "end": "3666160"
  },
  {
    "text": "is now on the spark is the idea of red of of windows uh this has nothing to do",
    "start": "3666160",
    "end": "3672000"
  },
  {
    "text": "with microsoft uh this is uh uh this is but this is a a separate bank of registers that you",
    "start": "3672000",
    "end": "3678480"
  },
  {
    "text": "move around uh as when you go into a subroutine and and you get to look at the uh at",
    "start": "3678480",
    "end": "3685119"
  },
  {
    "text": "some registers in common between caller and colleen uh and then the other case is where you where you uh uh",
    "start": "3685119",
    "end": "3693280"
  },
  {
    "text": "uh you you pass the arguments in registers with with others with other conventions",
    "start": "3693280",
    "end": "3699520"
  },
  {
    "text": "now um each of these has its uh champions and it has its pluses and minuses but uh",
    "start": "3699520",
    "end": "3706880"
  },
  {
    "text": "but i i i have something that i think uh is a nice compromise you know it sort of",
    "start": "3706880",
    "end": "3712880"
  },
  {
    "text": "uh it sort of does you can do it either way depending on your on your own preference uh and uh",
    "start": "3712880",
    "end": "3720000"
  },
  {
    "text": "and and and it's uh uh it's too it's too difficult to explain real quick but i so also i have",
    "start": "3720000",
    "end": "3726079"
  },
  {
    "text": "to just give you the highlights but here's the here's the idea i said i had 256 registers",
    "start": "3726079",
    "end": "3731520"
  },
  {
    "text": "and that's but but i divide them into local and global so here so let's consider this is",
    "start": "3731520",
    "end": "3737440"
  },
  {
    "text": "all these are all the registers here and i have a and i have a pointer g because everything greater than or equal to g",
    "start": "3737440",
    "end": "3744079"
  },
  {
    "text": "is global so g is the max of g is 255 so that would say you always have at least one",
    "start": "3744079",
    "end": "3750000"
  },
  {
    "text": "global register so these registers are global then i have another register",
    "start": "3750000",
    "end": "3756480"
  },
  {
    "text": "l that says everything less than l is local",
    "start": "3756480",
    "end": "3761680"
  },
  {
    "text": "and everything between l and g is zero",
    "start": "3761680",
    "end": "3765599"
  },
  {
    "text": "now so so one of the one wanted uh this this uh uh",
    "start": "3766720",
    "end": "3771839"
  },
  {
    "text": "these uh it ties in with something i said uh before that if you're storing the context of a program you don't have",
    "start": "3771839",
    "end": "3777119"
  },
  {
    "text": "to store all 256 registers you only have to store uh the locals and the globals and not all",
    "start": "3777119",
    "end": "3782720"
  },
  {
    "text": "the zeros in between so if somebody isn't using these um it's okay but if if somebody says add",
    "start": "3782720",
    "end": "3788319"
  },
  {
    "text": "uh and one of the registers that you're adding is is in this is this in this marginal region between l and g here",
    "start": "3788319",
    "end": "3794079"
  },
  {
    "text": "well it's just it just reads it reads as if it's zero uh if you try to store into this register then it",
    "start": "3794079",
    "end": "3800640"
  },
  {
    "text": "moves then l silently moves moves up you don't have to know what l is it'll just you know",
    "start": "3800640",
    "end": "3806240"
  },
  {
    "text": "the idea is the programmer should use the small numbered registers whenever possible but if you have an instruction",
    "start": "3806240",
    "end": "3811599"
  },
  {
    "text": "and the instruction says you know add add register uh uh 100 to register 200 and put it in in",
    "start": "3811599",
    "end": "3818240"
  },
  {
    "text": "register 20. well register 100 and 200 they might be local or global depending on the value of g",
    "start": "3818240",
    "end": "3826318"
  },
  {
    "text": "and uh the uh but but i have to tell you something",
    "start": "3826799",
    "end": "3832480"
  },
  {
    "text": "else that's different about local and global otherwise this concept wouldn't make that much that much sense and then",
    "start": "3832480",
    "end": "3837839"
  },
  {
    "text": "and so the uh uh the other part of the idea is that in",
    "start": "3837839",
    "end": "3843599"
  },
  {
    "text": "fact these local registers aren't sitting in a linear array like this but the but actually the local registers",
    "start": "3843599",
    "end": "3850000"
  },
  {
    "text": "are sitting in us in a circle that that has an arbitrary offset",
    "start": "3850000",
    "end": "3855599"
  },
  {
    "text": "and register 0 through register l are actually sitting somewhere in this circle when i go into a subroutine",
    "start": "3855599",
    "end": "3862720"
  },
  {
    "text": "i can uh i can push i have an instruction called push go",
    "start": "3862720",
    "end": "3869119"
  },
  {
    "text": "uh which which says push down a certain number of your registers and go into the subroutine so so so if i push them down",
    "start": "3869119",
    "end": "3876960"
  },
  {
    "text": "it essentially says that the offset uh is is here and l has just decreased by",
    "start": "3876960",
    "end": "3882240"
  },
  {
    "text": "that amount so if i say push go by 10 l has just gotten 10 less and i push down 10 to my local registers",
    "start": "3882240",
    "end": "3889119"
  },
  {
    "text": "now the subroutine can can can start using its own local adding to this if it wants to but it's got all these arguments that are still in there",
    "start": "3889119",
    "end": "3896079"
  },
  {
    "text": "that are passed it can put its answers in here and then it can say pop and it can say pop five which means leave five",
    "start": "3896079",
    "end": "3902559"
  },
  {
    "text": "of my local registers and then go back and take all the ones that you push when you when you went into me",
    "start": "3902559",
    "end": "3908880"
  },
  {
    "text": "um so so that's the now now the idea is that you that even though i said push 10",
    "start": "3908880",
    "end": "3915119"
  },
  {
    "text": "the machine only had to change this offset and and as you as you issue the",
    "start": "3915119",
    "end": "3920799"
  },
  {
    "text": "instructions you have you add the offset to the local registers but not to the global registers and you get the local",
    "start": "3920799",
    "end": "3926720"
  },
  {
    "text": "registers out of this ring while the goal racers come out of this out of another out of another array",
    "start": "3926720",
    "end": "3932880"
  },
  {
    "text": "um and so uh if you're interested in the in the",
    "start": "3932880",
    "end": "3938160"
  },
  {
    "text": "details of uh it's all described in this in this uh document that's on the web um",
    "start": "3938160",
    "end": "3944240"
  },
  {
    "text": "but the but the basic idea is something like this if you say if if you like the",
    "start": "3944240",
    "end": "3949760"
  },
  {
    "text": "the uh uh the spark like windows then you would say push go eight and pop eight",
    "start": "3949760",
    "end": "3955760"
  },
  {
    "text": "um when you when you more or less uh it is subroutine language if if you like uh",
    "start": "3955760",
    "end": "3962839"
  },
  {
    "text": "uh type of thing you would say push go infinity and pop zero uh which infinity",
    "start": "3962839",
    "end": "3969359"
  },
  {
    "text": "really means push go all of your locals and pop uh and and and and and remove them all on",
    "start": "3969359",
    "end": "3974720"
  },
  {
    "text": "popping this more or less that's the same and then we have a certain number of global place for for communication uh but uh but the",
    "start": "3974720",
    "end": "3982240"
  },
  {
    "text": "uh the idea here is that uh you you know this this uh this this scheme adapts itself to whatever",
    "start": "3982240",
    "end": "3989760"
  },
  {
    "text": "the needs are if you have a subroutine that wants that wants lots of locals okay it's got them if if not if you have",
    "start": "3989760",
    "end": "3995520"
  },
  {
    "text": "a if you have an application that wants lots of globals uh you can you can have a low small value of g if you have a application",
    "start": "3995520",
    "end": "4002160"
  },
  {
    "text": "with lots of locals you can you can you can let it grow this way and that's the uh that's the idea that i that that uh",
    "start": "4002160",
    "end": "4008720"
  },
  {
    "text": "late binding not not not not the architect design in advance uh what's going to be right for all programs but",
    "start": "4008720",
    "end": "4014160"
  },
  {
    "text": "let the programs uh uh uh do now i had to",
    "start": "4014160",
    "end": "4019760"
  },
  {
    "text": "implement my simulator to make sure that this idea would work uh uh that it would that you could do it with a pipeline and",
    "start": "4019760",
    "end": "4025680"
  },
  {
    "text": "not lose too much and of course there is extra hardware involved in adding this uh adding this offset in here and uh and",
    "start": "4025680",
    "end": "4032400"
  },
  {
    "text": "keeping track also automatically of when you have to store things in memory start you start wrapping around the circle",
    "start": "4032400",
    "end": "4037839"
  },
  {
    "text": "you have to have to dump things out into into memory and load them back in again uh but i've",
    "start": "4037839",
    "end": "4043039"
  },
  {
    "text": "got that all worked out and i think it's the amount of hardware is reasonable considering the trends in in in",
    "start": "4043039",
    "end": "4048799"
  },
  {
    "text": "technology it gives you something good i think reasonable to do with with silicon because the uh because i think the",
    "start": "4048799",
    "end": "4054240"
  },
  {
    "text": "effect that you're going to get for saving running time on on on on on",
    "start": "4054240",
    "end": "4059520"
  },
  {
    "text": "calling and you know going in and out of subroutines combined with uh uh",
    "start": "4059520",
    "end": "4064960"
  },
  {
    "text": "with uh uh the the compactness that you get of having a large number of registers in a",
    "start": "4064960",
    "end": "4070799"
  },
  {
    "text": "program uh is is a win anyway uh uh i i decided that",
    "start": "4070799",
    "end": "4075920"
  },
  {
    "text": "this was going to be the subroutine uh uh the the the uh the the severe team",
    "start": "4075920",
    "end": "4081359"
  },
  {
    "text": "calling mechanism recommended in my books although another style of subroutine linkage can",
    "start": "4081359",
    "end": "4086960"
  },
  {
    "text": "can also be programmed with this with the other uh with the other instruction well it takes always a long time to",
    "start": "4086960",
    "end": "4093920"
  },
  {
    "text": "explain uh these things and i um and uh",
    "start": "4093920",
    "end": "4099040"
  },
  {
    "text": "and uh in in this in this write-up uh",
    "start": "4099040",
    "end": "4104560"
  },
  {
    "text": "there's some i i also went into the the things that are the messy details that are needed",
    "start": "4104560",
    "end": "4110000"
  },
  {
    "text": "all the instructions that are needed by the operating system in order to do its uh uh",
    "start": "4110000",
    "end": "4115679"
  },
  {
    "text": "in order to for example uh get things in and out of different caches and and to handle virtual",
    "start": "4115679",
    "end": "4121040"
  },
  {
    "text": "virtual addressing to to physical addressing and what happens on interrupts and",
    "start": "4121040",
    "end": "4126318"
  },
  {
    "text": "and how do you restore con and save non-save context and things like that",
    "start": "4126319",
    "end": "4132560"
  },
  {
    "text": "there's uh amex has has 32 uh special registers",
    "start": "4132560",
    "end": "4138238"
  },
  {
    "text": "that are used uh each each has a number from zero to thirty one here and uh the um and i told",
    "start": "4138239",
    "end": "4146318"
  },
  {
    "text": "you about the multiplex mask register for example but there's there are other registers for the high half of the product and things like this uh so all",
    "start": "4146319",
    "end": "4153600"
  },
  {
    "text": "those details are are there not not uh really needed for uh unless you're going to write the",
    "start": "4153600",
    "end": "4159838"
  },
  {
    "text": "operating system for some of the uh for some of the weirder ones",
    "start": "4159839",
    "end": "4165359"
  },
  {
    "text": "and uh i'm left a little bit uh wondering about this easy to learn part",
    "start": "4165359",
    "end": "4171199"
  },
  {
    "text": "what if i have to look at the at the entire document and say you're going to learn all of the instructions that are",
    "start": "4171199",
    "end": "4176960"
  },
  {
    "text": "that are there in order to handle uh in order to handle the the full complexities of",
    "start": "4176960",
    "end": "4183120"
  },
  {
    "text": "of operating system but uh uh i i i still needed those",
    "start": "4183120",
    "end": "4191278"
  },
  {
    "text": "instructions in order to make the thing complete and i'm not gonna and i'm gonna have those uh separated out into into",
    "start": "4191279",
    "end": "4197280"
  },
  {
    "text": "special reference books and not in the in the main text so uh uh in general i",
    "start": "4197280",
    "end": "4202719"
  },
  {
    "text": "have to say that uh uh i hope you all like it as much as i do i",
    "start": "4202719",
    "end": "4207760"
  },
  {
    "text": "can't wait till i own one of these machines and uh and uh i'm i'm look and i'm i",
    "start": "4207760",
    "end": "4214960"
  },
  {
    "text": "am actively uh looking for volunteers to help with the job of translating all of the programs",
    "start": "4214960",
    "end": "4220880"
  },
  {
    "text": "that were done in in mix into mnix for this purpose i've got a wonderful",
    "start": "4220880",
    "end": "4226960"
  },
  {
    "text": "help helper of vladimir ivanovic vlad are you here ah stand up please",
    "start": "4226960",
    "end": "4233120"
  },
  {
    "text": "so um and he has just uh he's just setting up uh",
    "start": "4233120",
    "end": "4238239"
  },
  {
    "text": "the uh the homepage for uh m mix masters which is the which will be the volunteer",
    "start": "4238239",
    "end": "4244880"
  },
  {
    "text": "group and uh if this is www.mixmasters.org",
    "start": "4244880",
    "end": "4249480"
  },
  {
    "text": "and uh and it um is is going to uh",
    "start": "4250239",
    "end": "4255920"
  },
  {
    "text": "we're gonna they're gonna he's going to help organize and people will choose the parts that they're going to work on and",
    "start": "4255920",
    "end": "4261600"
  },
  {
    "text": "uh uh and and",
    "start": "4261600",
    "end": "4265760"
  },
  {
    "text": "all the information is here um furthermore in the next uh",
    "start": "4266640",
    "end": "4272640"
  },
  {
    "text": "in the next few weeks i'm going to be making uh a lot of decisions about the assembly language that uh and i and i",
    "start": "4272640",
    "end": "4279199"
  },
  {
    "text": "would very much like to to have a group of people uh to",
    "start": "4279199",
    "end": "4284400"
  },
  {
    "text": "that we would shoot the breeze about these ideas for for for two or three hours uh and and and see you know knock",
    "start": "4284400",
    "end": "4291120"
  },
  {
    "text": "down my uh my uh my proposals um for for uh",
    "start": "4291120",
    "end": "4298800"
  },
  {
    "text": "for december before i spend too much time writing up something that that people aren't going to like this is what we did when when tech was designed uh",
    "start": "4299760",
    "end": "4306480"
  },
  {
    "text": "every friday for for about four years we we had a meeting of two or",
    "start": "4306480",
    "end": "4311600"
  },
  {
    "text": "three hours of anybody could drop in and we annual we would discuss the aspects of tech and and uh",
    "start": "4311600",
    "end": "4319199"
  },
  {
    "text": "i i hope i'm i'm looking forward uh for having two or three meetings to talk about ideas of mix in in march",
    "start": "4319199",
    "end": "4327280"
  },
  {
    "text": "if any of you are interested in participating in these in these uh we could talk after after uh after this right now and",
    "start": "4327280",
    "end": "4335440"
  },
  {
    "text": "then after my lecture in in march on march 3rd uh and we'll we'll try to set times that",
    "start": "4335440",
    "end": "4341920"
  },
  {
    "text": "that are that are uh that'll work for people because i i really would appreciate this uh this",
    "start": "4341920",
    "end": "4347920"
  },
  {
    "text": "transfer for feedback on some of the on some of the trade-offs uh uh uh designing the uh the assembly language",
    "start": "4347920",
    "end": "4356480"
  },
  {
    "text": "the architecture itself is fairly close to it is getting to the point where it's pretty much hard to change now but i",
    "start": "4356480",
    "end": "4362719"
  },
  {
    "text": "think still not too late to make a change if you've got a really really great improvement on on what i have",
    "start": "4362719",
    "end": "4370560"
  },
  {
    "text": "okay any questions uh that's uh the overflow of uh",
    "start": "4370560",
    "end": "4378960"
  },
  {
    "text": "shift red yeah affect uh register no unsigned shift left does not",
    "start": "4378960",
    "end": "4385600"
  },
  {
    "text": "overflow but but the unsigned shift left does not go into the high mould no you think it should it could yeah",
    "start": "4385600",
    "end": "4393920"
  },
  {
    "text": "it would be it it'd probably be a good idea i hadn't thought about that you know we could yeah we",
    "start": "4396880",
    "end": "4403040"
  },
  {
    "text": "have to have to that's a that's a good suggestion because high malt is is affected right now by only the multiply unsigned",
    "start": "4403040",
    "end": "4410719"
  },
  {
    "text": "and so i could make it i could make it exactly equivalent and uh",
    "start": "4410719",
    "end": "4416000"
  },
  {
    "text": "yeah i had this idea that if i wouldn't have just one or two auxiliary registers uh",
    "start": "4416000",
    "end": "4422719"
  },
  {
    "text": "having one only one or two auxiliary registers means there's a lot of competition for them in the pipeline so so uh so you know so register that's",
    "start": "4422719",
    "end": "4430000"
  },
  {
    "text": "used for the upper half of our multiplication is different from the one that's used for the upper half of a",
    "start": "4430000",
    "end": "4435440"
  },
  {
    "text": "of uh of a dividend but uh uh here is a case where it's",
    "start": "4435440",
    "end": "4441840"
  },
  {
    "text": "quite natural for two instructions to use the high model register very good yes",
    "start": "4441840",
    "end": "4447520"
  },
  {
    "text": "uh no no uh i i i borrowed tried that uh",
    "start": "4448960",
    "end": "4454400"
  },
  {
    "text": "in the 60s then i was that's true that's too radical why do would you prefer that",
    "start": "4454400",
    "end": "4460000"
  },
  {
    "text": "i mean yeah i do that's true",
    "start": "4460000",
    "end": "4465840"
  },
  {
    "text": "yeah that's true uh in fact uh i even considered decimal",
    "start": "4465840",
    "end": "4471440"
  },
  {
    "text": "arithmetic you know i mean uh you know computers are getting so fast now uh you know that that you know",
    "start": "4471440",
    "end": "4478080"
  },
  {
    "text": "it's it it might be that you know tying them to make them human friendly again",
    "start": "4478080",
    "end": "4483280"
  },
  {
    "text": "but uh but i rejected it i think java should probably have been decimal though uh i mean in its in its floating point",
    "start": "4483280",
    "end": "4491040"
  },
  {
    "text": "uh the biggest mistake in tech was that i that i made it binary um i mean",
    "start": "4491040",
    "end": "4496080"
  },
  {
    "text": "internally tech works in units of two to the minus sixteenth points",
    "start": "4496080",
    "end": "4501520"
  },
  {
    "text": "and and uh that and i should have had it it'd be two to ten to the minus fifth",
    "start": "4501520",
    "end": "4506640"
  },
  {
    "text": "points uh because then the the uh the uh",
    "start": "4506640",
    "end": "4511760"
  },
  {
    "text": "the thing that's printed when it says how many points it is would be exactly what what's inside the computer right",
    "start": "4511760",
    "end": "4517040"
  },
  {
    "text": "now it's a rounded approximation so so they're they're you know there are aspects of of decimal arithmetic that",
    "start": "4517040",
    "end": "4523520"
  },
  {
    "text": "that that are better for human uh interaction but i i i guess binary computers are",
    "start": "4523520",
    "end": "4529520"
  },
  {
    "text": "still here for another 10 years anyway yeah there's an issue with um",
    "start": "4529520",
    "end": "4536000"
  },
  {
    "text": "256 registers there's a lot of registers yeah and it's possible that the sort of things",
    "start": "4536000",
    "end": "4542320"
  },
  {
    "text": "you might want to do in registers is different if you've got yeah i might be worth putting an array",
    "start": "4542320",
    "end": "4549600"
  },
  {
    "text": "in registers yes that was uh now i i should have mentioned that that this was done in the um in the crisp architecture",
    "start": "4549600",
    "end": "4557360"
  },
  {
    "text": "the hobbit um and uh uh and uh",
    "start": "4557360",
    "end": "4563600"
  },
  {
    "text": "that right now my register stack when i push things down it's only scalars that i can push",
    "start": "4563600",
    "end": "4568719"
  },
  {
    "text": "i can't address i can't address registers uh that's but that's extremely complicated in the pipeline um",
    "start": "4568719",
    "end": "4575520"
  },
  {
    "text": "so so i so i rejected it at the moment but it's but your point is well taken i uh that that we use them in different",
    "start": "4575520",
    "end": "4582239"
  },
  {
    "text": "ways and and for example i i i have banks of registers uh uh um okay um",
    "start": "4582239",
    "end": "4590800"
  },
  {
    "text": "the the main uh the main loss that i have by having this many registers is the",
    "start": "4590800",
    "end": "4596320"
  },
  {
    "text": "is that the uh immediate instructions are only eight bits uh uh and uh hennessey patterson gave",
    "start": "4596320",
    "end": "4603679"
  },
  {
    "text": "statistics of how how large uh in in lots of programs the immediate fields wanted to be",
    "start": "4603679",
    "end": "4609520"
  },
  {
    "text": "and you could you could get uh uh i don't know 75 percent of all the structure of all immediate would fit in",
    "start": "4609520",
    "end": "4615440"
  },
  {
    "text": "eight bits but then there were but you could get up if you could get up to 10 bits uh uh then then you would hit 90",
    "start": "4615440",
    "end": "4621120"
  },
  {
    "text": "some you know 95 96 percent or something of all instructions would would fit in a 10-bit immediate um something like that",
    "start": "4621120",
    "end": "4627840"
  },
  {
    "text": "it was and and uh uh here i am uh you know with my uh with my nice one one",
    "start": "4627840",
    "end": "4635360"
  },
  {
    "text": "bite for each uh for each part of the word having only eight bits left for the for",
    "start": "4635360",
    "end": "4640480"
  },
  {
    "text": "for the immediate base register plus an eight bit offset however i can divide my base registers into groups of four",
    "start": "4640480",
    "end": "4646400"
  },
  {
    "text": "so that it's actually have a 10 bit offset because the lower two bits identify which base register in the bank",
    "start": "4646400",
    "end": "4651520"
  },
  {
    "text": "before there are so if i have several things going off of one base register i can actually have four or eight base",
    "start": "4651520",
    "end": "4657280"
  },
  {
    "text": "radiuses grouped together based on the on on the context and that's another example of how how in fact there is an",
    "start": "4657280",
    "end": "4664480"
  },
  {
    "text": "array of base registers and and here the assembler will even allow you to carry in so so if you have the you know if you",
    "start": "4664480",
    "end": "4670719"
  },
  {
    "text": "wanted to have an immediate field that's a little more than that's more than eight bits it'll actually carry into the number of the registers but then the",
    "start": "4670719",
    "end": "4677199"
  },
  {
    "text": "loading routine will set up those registers to differ from each other by 256.",
    "start": "4677199",
    "end": "4682560"
  },
  {
    "text": "yeah on that of course particularly many of the operands for say and or",
    "start": "4682560",
    "end": "4691040"
  },
  {
    "text": "you know logical immediates will have a lot of leading ones and be nice to have it",
    "start": "4691040",
    "end": "4696400"
  },
  {
    "text": "well that's why i have the negative uh the negatives of these instructions too and i have the wide instruction i have",
    "start": "4696400",
    "end": "4702159"
  },
  {
    "text": "the yeah yeah we can like we can talk offline about this though but yeah",
    "start": "4702159",
    "end": "4708640"
  },
  {
    "text": "does the increment family uh set the overflow",
    "start": "4708640",
    "end": "4713760"
  },
  {
    "text": "the increment is unsigned",
    "start": "4713760",
    "end": "4717280"
  },
  {
    "text": "except when i say a medium-high immediate you know is that the instruction like the set i had a set",
    "start": "4727679",
    "end": "4733120"
  },
  {
    "text": "high set medium high set and those were those were 16-bit immediate that's a quick you know there's lots of",
    "start": "4733120",
    "end": "4739199"
  },
  {
    "text": "when you go to 64-bit uh a lot of problems get uh harder than they were in the 32-bit world because",
    "start": "4739199",
    "end": "4745280"
  },
  {
    "text": "you you could easily you could more easily uh uh build a 32-bit constant than you can 64-bit but the most significant",
    "start": "4745280",
    "end": "4752560"
  },
  {
    "text": "problem on the 64-bit machine was actually the virtual to virtual",
    "start": "4752560",
    "end": "4758159"
  },
  {
    "text": "address to physical address problem that i had didn't get into uh because all all the schemes that uh",
    "start": "4758159",
    "end": "4764800"
  },
  {
    "text": "that are used on 32-bit machines uh uh fail to scale up very well when you when",
    "start": "4764800",
    "end": "4770719"
  },
  {
    "text": "you have to when you when you try to try to i mean like uh these the ideas of of page tables um",
    "start": "4770719",
    "end": "4780960"
  },
  {
    "text": "which worked nicely with 32-bit uh i had to",
    "start": "4781760",
    "end": "4786960"
  },
  {
    "text": "work very hard in order to have something that would be reasonable uh id uh way to do the mapping uh for all",
    "start": "4786960",
    "end": "4793440"
  },
  {
    "text": "conceivable uh uh changes in technology uh uh coming up and i think i have a good compromise but it's not simple",
    "start": "4793440",
    "end": "4800159"
  },
  {
    "text": "unfortunately it's hidden from from essentially all users but still i i still that was the one",
    "start": "4800159",
    "end": "4806800"
  },
  {
    "text": "perhaps the most difficult 64-bit problem i faced",
    "start": "4806800",
    "end": "4812280"
  },
  {
    "text": "uh everything is aligned every every every command is automatically aligned",
    "start": "4819760",
    "end": "4826560"
  },
  {
    "text": "and uh no if you do yes you can but it just",
    "start": "4826560",
    "end": "4833920"
  },
  {
    "text": "ignores the low three bits uh in fact those low three bits are very valuable uh",
    "start": "4833920",
    "end": "4840400"
  },
  {
    "text": "there's a tremendous number of data structures where where you want a pointer plus one bit or pointer plus two bits and so on and you",
    "start": "4840400",
    "end": "4846400"
  },
  {
    "text": "can use the low you can you can and the pointers can you've got those bits right there and",
    "start": "4846400",
    "end": "4851600"
  },
  {
    "text": "it's totally ignored now uh but i know that uh that the uh uh that there's uh",
    "start": "4851600",
    "end": "4858320"
  },
  {
    "text": "uh you know it was necessary for the alpha to to have uh instructions that that allow",
    "start": "4858320",
    "end": "4865600"
  },
  {
    "text": "unaligned loads uh just because of uh of our legacy code",
    "start": "4865600",
    "end": "4871120"
  },
  {
    "text": "but fortunately i don't have any legacy code so so i can design a thing to be right",
    "start": "4871120",
    "end": "4877040"
  },
  {
    "text": "and and this multiply instruction this this uh you know there's a short routine we'll do the the uh the right thing with",
    "start": "4877040",
    "end": "4884800"
  },
  {
    "text": "with unaligned load uh you uh and and and then you you do a couple of these um",
    "start": "4884800",
    "end": "4890320"
  },
  {
    "text": "more instructions on it and and it will shift the bytes into the position that you want and",
    "start": "4890320",
    "end": "4895760"
  },
  {
    "text": "and get it so it's a fairly short loop to do uh to do unaligned loads but uh",
    "start": "4895760",
    "end": "4901280"
  },
  {
    "text": "but i but i'm not going to but i i'm saying that the sensible program that starts out and doesn't have to worry",
    "start": "4901280",
    "end": "4906640"
  },
  {
    "text": "about legacy uh everything is always aligned",
    "start": "4906640",
    "end": "4911760"
  },
  {
    "text": "okay",
    "start": "4911760",
    "end": "4914000"
  },
  {
    "text": "uh let's see it's it's uh well you need two instructions but uh but you've",
    "start": "4922639",
    "end": "4929120"
  },
  {
    "text": "got the uh but you've got the compare uh you've got the compare and set uh it's less and so so you can subtract",
    "start": "4929120",
    "end": "4935840"
  },
  {
    "text": "and then you do a compare and set if less does that employ a branch no",
    "start": "4935840",
    "end": "4943199"
  },
  {
    "text": "no that's the that's the point yeah and and there's also maximum and minimum",
    "start": "4943199",
    "end": "4948880"
  },
  {
    "text": "on on each bite uh which you can do in two instructions you take the bite difference and then you",
    "start": "4948880",
    "end": "4954080"
  },
  {
    "text": "and then you do um uh let's see uh",
    "start": "4954080",
    "end": "4959840"
  },
  {
    "text": "and and then you add in yeah uh the the the max is equal to the max of x",
    "start": "4960080",
    "end": "4966560"
  },
  {
    "text": "and y is equal to uh the the uh x minus y",
    "start": "4966560",
    "end": "4972719"
  },
  {
    "text": "uh flush to zero plus y oh well plus i'm sorry uh that's the min and and the",
    "start": "4972719",
    "end": "4978239"
  },
  {
    "text": "max is similar but you subtract um so so max and min on individual bytes are are there in two instructions as",
    "start": "4978239",
    "end": "4984840"
  },
  {
    "text": "well okay well i guess time is up and i'll be glad to answer other questions",
    "start": "4984840",
    "end": "4992280"
  },
  {
    "text": "you",
    "start": "5027199",
    "end": "5029280"
  }
]