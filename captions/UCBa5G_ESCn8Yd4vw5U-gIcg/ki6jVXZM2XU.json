[
  {
    "start": "0",
    "end": "27000"
  },
  {
    "text": "yeah so I was asked to here to talk about Rex Computing um as Andy was saying we've developed a new process",
    "start": "11559",
    "end": "17400"
  },
  {
    "text": "architecture so whole new instruction sets Core Design uh full chip implementing those cores and uh uh with",
    "start": "17400",
    "end": "25119"
  },
  {
    "text": "a team of four people which uh can see here so myself uh PA in the Georgia Tech",
    "start": "25119",
    "end": "30920"
  },
  {
    "start": "27000",
    "end": "66000"
  },
  {
    "text": "shirt sorry for being here at Stanford um at least it's not like MIT I am but",
    "start": "30920",
    "end": "37239"
  },
  {
    "text": "um and then nman who's also in the audience and PE and uh without all of them obviously I would not be here today",
    "start": "37239",
    "end": "43840"
  },
  {
    "text": "um little over three years ago this just started off off as a crazy idea and uh coupled with you know being a bit Young",
    "start": "43840",
    "end": "50960"
  },
  {
    "text": "and the ni of both Paul and I we actually thought we can make a processor uh for you know basically no money and",
    "start": "50960",
    "end": "57879"
  },
  {
    "text": "uh uh you know the two of us had to double the team size but uh I think",
    "start": "57879",
    "end": "62920"
  },
  {
    "text": "we've done uh pretty well so far so um when we started Rex we uh we're trying",
    "start": "62920",
    "end": "68560"
  },
  {
    "start": "66000",
    "end": "241000"
  },
  {
    "text": "to think about um uh you know what are the basic precepts of of uh computer",
    "start": "68560",
    "end": "74640"
  },
  {
    "text": "architecture that haven't really been rethought over the past 30 or 40 years and uh as we're digging deeper into you",
    "start": "74640",
    "end": "81360"
  },
  {
    "text": "know what are the really bare minimum things necessary to do computation um we",
    "start": "81360",
    "end": "86680"
  },
  {
    "text": "started thinking that it's not as much of the computation itself that is the issue but how we actually get data to uh",
    "start": "86680",
    "end": "93240"
  },
  {
    "text": "the processor and uh really the whole memory system and while there has been a",
    "start": "93240",
    "end": "98399"
  },
  {
    "text": "lot of talk about the memory system at a uh uh you know more focus on the memory itself so trying to find alternatives to",
    "start": "98399",
    "end": "105040"
  },
  {
    "text": "dram Etc um there hasn't been much thought in terms of uh you know how it's",
    "start": "105040",
    "end": "110280"
  },
  {
    "text": "actually architected on the chip itself your slid says confidential I will have to leave the room if that's true excuse",
    "start": "110280",
    "end": "117960"
  },
  {
    "text": "me I've taken a bunch of these slides from other decks and all of this is not confidential maybe we could raise the",
    "start": "117960",
    "end": "124280"
  },
  {
    "text": "screen in",
    "start": "124280",
    "end": "131959"
  },
  {
    "text": "um it still have 2016 on it yeah uh tell how uh we've been busy actually working",
    "start": "131959",
    "end": "138040"
  },
  {
    "text": "on the chip instead of the the slide decks that's a good thing it means you didn't finish the whole thing this",
    "start": "138040",
    "end": "145400"
  },
  {
    "text": "afternoon um yeah so uh basically what we were looking at in terms of the",
    "start": "145400",
    "end": "151200"
  },
  {
    "text": "memory system was the onchip cache hierarchy and over the decades this has grown from having an off-chip SRAM back",
    "start": "151200",
    "end": "158319"
  },
  {
    "text": "cache uh very small still relatively High latency compared to the actual chip",
    "start": "158319",
    "end": "163879"
  },
  {
    "text": "uh speed but uh you know still faster closer access than a a dram and you know",
    "start": "163879",
    "end": "170680"
  },
  {
    "text": "since uh uh the um you know 286 we've gone having uh on ship caches L1 L2 L3",
    "start": "170680",
    "end": "178560"
  },
  {
    "text": "Etc um without much thoughts of the the implications that that has as we start",
    "start": "178560",
    "end": "183760"
  },
  {
    "text": "to approach the you know Twilight phase of mors law um and so while uh you know",
    "start": "183760",
    "end": "190080"
  },
  {
    "text": "30 years ago if you were looking at this diagram then compared to now which this is for uh Intel Sandy Bridge",
    "start": "190080",
    "end": "196480"
  },
  {
    "text": "architecture um while doing the actual floating double Precision floating Point operation only takes about 100 PJs",
    "start": "196480",
    "end": "203879"
  },
  {
    "text": "actually moving the 64 bits necessary all the way from Dam to your register F takes about 40x more energy than that",
    "start": "203879",
    "end": "211040"
  },
  {
    "text": "and uh uh that's kind of a problem and while there's been you know all the the",
    "start": "211040",
    "end": "216519"
  },
  {
    "text": "free benefits of Mor's law has been really helping that what is now 100 Pico Jews hasn't really helped much on the",
    "start": "216519",
    "end": "221680"
  },
  {
    "text": "other side um so when most people think uh look at this slide and say uh um oh",
    "start": "221680",
    "end": "228360"
  },
  {
    "text": "well that makes sense the dram is you know separate on the motherboard you have to you know that is having to be refreshed it's using a good amount of",
    "start": "228360",
    "end": "234720"
  },
  {
    "text": "power itself you know that that's fine but in reality about six % of that 4200",
    "start": "234720",
    "end": "241439"
  },
  {
    "start": "241000",
    "end": "314000"
  },
  {
    "text": "Pico tools is being used on the processor itself so you know the the dam and everything even if that's uh gets",
    "start": "241439",
    "end": "248360"
  },
  {
    "text": "closer to your processor like we're trying to do 3D integration within packages and even if we're trying all",
    "start": "248360",
    "end": "253959"
  },
  {
    "text": "these new fancy uh um you know memory Technologies outside the chip um that's",
    "start": "253959",
    "end": "259239"
  },
  {
    "text": "only improving 40% of that number uh and the main thing that's just happened over these decades is this uh um more and",
    "start": "259239",
    "end": "266680"
  },
  {
    "text": "more uh adding more and more complexity to the on chip cach hierarchy in order to try to help programmers is the the",
    "start": "266680",
    "end": "273479"
  },
  {
    "text": "main main point um you know programmers don't want to manage memory like the initial purpose caches just so the",
    "start": "273479",
    "end": "280400"
  },
  {
    "text": "programmer can you know just deal with a virtual address space don't have to you know segment that themselves really just",
    "start": "280400",
    "end": "286639"
  },
  {
    "text": "make their lives easier and uh this idea is is great in theory but uh um the cost",
    "start": "286639",
    "end": "293160"
  },
  {
    "text": "that we're starting to pay especially as uh we're not getting the you know free improvements that we have in the past um",
    "start": "293160",
    "end": "299720"
  },
  {
    "text": "is really starting to bite us so uh we started Rex with this uh realization and",
    "start": "299720",
    "end": "306120"
  },
  {
    "text": "uh um said that you know we need to architect a new uh architecture you know with this fact in",
    "start": "306120",
    "end": "312120"
  },
  {
    "text": "mind so uh We've developed the Neo processor architecture um so it's a 200",
    "start": "312120",
    "end": "317800"
  },
  {
    "start": "314000",
    "end": "382000"
  },
  {
    "text": "so it's a manye mimd uh core um VW I'll get that back to that in a second",
    "start": "317800",
    "end": "324160"
  },
  {
    "text": "hopefully people don't get too scared about the VW Ward um with the fancy two- dimensional uh",
    "start": "324160",
    "end": "330280"
  },
  {
    "text": "um Network on chip and uh a very the the big differentiator what I just spent the",
    "start": "330280",
    "end": "336520"
  },
  {
    "text": "past couple minutes talking about is really the uh on chip cache hierarchy differences so we've moved to a purely",
    "start": "336520",
    "end": "343319"
  },
  {
    "text": "software manage memory system where we have just plain physically addressed um local memories for each one of our our",
    "start": "343319",
    "end": "350039"
  },
  {
    "text": "cores um and then do all of the fancy uh things that are handled by today's",
    "start": "350039",
    "end": "355120"
  },
  {
    "text": "Hardware manag memory systems uh instead in software and the the real goal of this you know set off that uh you know",
    "start": "355120",
    "end": "361880"
  },
  {
    "text": "unless we can really get an order of magnitude Energy Efficiency improvements uh there's no real point in in doing",
    "start": "361880",
    "end": "367880"
  },
  {
    "text": "what we're trying to do um you know we're up against enough competition you know four guys versus uh uh Intel and uh",
    "start": "367880",
    "end": "376199"
  },
  {
    "text": "um you know we have to have a a you know real sort of advantage for that um so as",
    "start": "376199",
    "end": "382440"
  },
  {
    "start": "382000",
    "end": "442000"
  },
  {
    "text": "I said before you know we've designed a lot of uh aspects of this uh so everything from the instruction set to",
    "start": "382440",
    "end": "388280"
  },
  {
    "text": "the full chip but uh we realize that you know we can't just even though I'm in love with the hardware aspects uh you",
    "start": "388280",
    "end": "395360"
  },
  {
    "text": "actually need to have software run on this thing and you know have this available to folks in a way that they can actually use and so uh you know not",
    "start": "395360",
    "end": "403199"
  },
  {
    "text": "just defining the instruction set core chip but also the actual reference node designs and the software tools to be",
    "start": "403199",
    "end": "409000"
  },
  {
    "text": "able to use this uh so as Andy said a bit earlier about uh uh the original S1",
    "start": "409000",
    "end": "414800"
  },
  {
    "text": "team and developing all of the tools necessary for that computer uh",
    "start": "414800",
    "end": "420400"
  },
  {
    "text": "uh you know we've taken a a fairly similar approach I guess we've been able to leverage the past 30 years of",
    "start": "420400",
    "end": "426080"
  },
  {
    "text": "advancement and knowledge in that sense plus uh the Advent of uh you know the real development of the open source",
    "start": "426080",
    "end": "431840"
  },
  {
    "text": "software Community but uh you know starting to do all this for for",
    "start": "431840",
    "end": "437400"
  },
  {
    "text": "ourselves uh is quite a big leap so uh kind of give you a little bit of an idea",
    "start": "437400",
    "end": "442840"
  },
  {
    "start": "442000",
    "end": "493000"
  },
  {
    "text": "of the instruction set I guess this slide is maybe a bit out of order from what I originally wanted but uh you know",
    "start": "442840",
    "end": "448520"
  },
  {
    "text": "it's a very risk and inspired architecture I did say the vliw word a bit earlier which few shocked",
    "start": "448520",
    "end": "454840"
  },
  {
    "text": "Expressions on people's faces um but uh uh our real Point here is to uh keep a",
    "start": "454840",
    "end": "461199"
  },
  {
    "text": "very simple very clean design and you know try to exploit as much instruction level parilis task level",
    "start": "461199",
    "end": "468280"
  },
  {
    "text": "parismad parallelism as possible um everything's load store based so our",
    "start": "468280",
    "end": "473919"
  },
  {
    "text": "memory actually moving data around on chip through multiple chips and using off chip memories uh is a a a very",
    "start": "473919",
    "end": "482000"
  },
  {
    "text": "simple clean design and we've really focused on floating Point uh",
    "start": "482000",
    "end": "487560"
  },
  {
    "text": "performance um so everyone's scared about uh vliw and this is the thing I get all the time with the number one",
    "start": "487560",
    "end": "494240"
  },
  {
    "start": "493000",
    "end": "731000"
  },
  {
    "text": "thing being itanium um so wasn't it proven that you know uh VW just doesn't",
    "start": "494240",
    "end": "501159"
  },
  {
    "text": "work with itanium and I bring up this uh picture of a uh you know block diagram",
    "start": "501159",
    "end": "507159"
  },
  {
    "text": "of the itanium architecture and big problem the the original concept of of",
    "start": "507159",
    "end": "512240"
  },
  {
    "text": "VW which you know was really pioneered by floating Point systems and you know the actual vliw name with the um",
    "start": "512240",
    "end": "519159"
  },
  {
    "text": "multiflow and um others in the mid late ' 80s uh was this concept that you can",
    "start": "519159",
    "end": "525560"
  },
  {
    "text": "remove a lot of complexity out of the chip design itself um in order to and you know have software be able to take",
    "start": "525560",
    "end": "531720"
  },
  {
    "text": "some of that burden off and most of that back then was related to the instruction decoder so instead of having these",
    "start": "531720",
    "end": "537519"
  },
  {
    "text": "really complex cisk uh uh instructions um that you know you had a big fancy",
    "start": "537519",
    "end": "543240"
  },
  {
    "text": "decoder that handled all the scheduling making sure that you know you're not um uh having any instructions conflict etc",
    "start": "543240",
    "end": "550720"
  },
  {
    "text": "etc um and it was the compiler's job to actually do all of that for for the",
    "start": "550720",
    "end": "555959"
  },
  {
    "text": "hardware and so when I look at itanium with Branch prediction these caches",
    "start": "555959",
    "end": "561320"
  },
  {
    "text": "which are indeterminate uh indeterminate pipelines depending on what instructions you're running um in what order etc etc",
    "start": "561320",
    "end": "568279"
  },
  {
    "text": "where you just cannot actually know how the processor will perform at runtime um when you're compiling an",
    "start": "568279",
    "end": "575720"
  },
  {
    "text": "application how is the compiler actually able to do this and actually make any of these sort of",
    "start": "575720",
    "end": "580760"
  },
  {
    "text": "optimizations so uh the big part which I'll get to in a bit with uh Rex is oops",
    "start": "580760",
    "end": "587360"
  },
  {
    "text": "um is uh this fact that we are really focused on hard real time determinism for everything and then the second thing",
    "start": "587360",
    "end": "593760"
  },
  {
    "text": "I always get is for Scratch pads so this concept concept of a software managed memory system where uh we have you know",
    "start": "593760",
    "end": "601480"
  },
  {
    "text": "just physical addressing um you know none of the the fancy caching etc for uh",
    "start": "601480",
    "end": "607279"
  },
  {
    "text": "uh the actual end user um always brings up comparisons to cell so if you're",
    "start": "607279",
    "end": "612519"
  },
  {
    "text": "familiar with the cell processor made as a collaboration between uh Toshiba Sony and IBM uh primarily you know used in",
    "start": "612519",
    "end": "620200"
  },
  {
    "text": "the uh um uh Playstation 3 uh it was notoriously difficult to program with",
    "start": "620200",
    "end": "626000"
  },
  {
    "text": "because the the real idea by Sony and tashiba at that point point was uh to use what the were the cell special",
    "start": "626000",
    "end": "633040"
  },
  {
    "text": "processing units the spus or SPS and the uh and the whole design point of this",
    "start": "633040",
    "end": "639600"
  },
  {
    "text": "was they were you know relatively powerful but still small they had eight of these in you know a 2005 processor um",
    "start": "639600",
    "end": "647720"
  },
  {
    "text": "but IBM's part of the agreement was that they were going to be fabricating the chip but also uh they want to actually",
    "start": "647720",
    "end": "654480"
  },
  {
    "text": "have you know more skin in the game and put in that uh uh power processing so",
    "start": "654480",
    "end": "659720"
  },
  {
    "text": "power PC architecture and uh the big problem with this was that created huge bottleneck where in the SP with the spus",
    "start": "659720",
    "end": "668160"
  },
  {
    "text": "the uh um actual only way that you could get to external memory was actually having to go through the power",
    "start": "668160",
    "end": "673800"
  },
  {
    "text": "processing unit so there was this huge overhead and that system had its own cache Etc that just made it impossible",
    "start": "673800",
    "end": "680639"
  },
  {
    "text": "for um you know a compiler to actually know how to to access large Parts memory",
    "start": "680639",
    "end": "686000"
  },
  {
    "text": "and just real pain in the ass so um when we're going into the Neo architecture a",
    "start": "686000",
    "end": "692279"
  },
  {
    "text": "bit uh I like using this as an give an idea of the instruction set uh so here",
    "start": "692279",
    "end": "697880"
  },
  {
    "text": "we have up in the upper left hand corner the floating Point Unit and its uh instructions so we've got um uh you 22",
    "start": "697880",
    "end": "706880"
  },
  {
    "text": "instructions total for the floating Point Unit that uh uh supports full i e",
    "start": "706880",
    "end": "712000"
  },
  {
    "text": "64bit um in the future doing packed uh single Precision potentially half and",
    "start": "712000",
    "end": "717800"
  },
  {
    "text": "other formats um and uh the real you know philosophy behind vliw is being",
    "start": "717800",
    "end": "724160"
  },
  {
    "text": "able to exploit task level par or instruction level parallelism so we want to be able to use the FPU the load store",
    "start": "724160",
    "end": "730639"
  },
  {
    "text": "unit the outbox or secondary load load store unit and the ALU all at once so",
    "start": "730639",
    "end": "736399"
  },
  {
    "start": "731000",
    "end": "889000"
  },
  {
    "text": "one of the really unique things that we did with our instruction set architecture was this fact that we can",
    "start": "736399",
    "end": "742000"
  },
  {
    "text": "uh if you look at this full 64-bit word we're fitting four different instructions from four different units",
    "start": "742000",
    "end": "748160"
  },
  {
    "text": "in it and depending on the actual uh register usage of uh the different",
    "start": "748160",
    "end": "753680"
  },
  {
    "text": "instructions the length of the the way that the entire 64 bits is allocated",
    "start": "753680",
    "end": "759160"
  },
  {
    "text": "tells you exactly what instructions you can use so our instruction decode logic is ridiculously simple because we're",
    "start": "759160",
    "end": "766760"
  },
  {
    "text": "able to pass the same 64-bit uh um instruction across all of our uh um to",
    "start": "766760",
    "end": "774000"
  },
  {
    "text": "through all of our stages for all of our um instruction units and each uh execution unit is able to",
    "start": "774000",
    "end": "780079"
  },
  {
    "text": "figure out exactly what it has to do for that and um unlike a lot of architectures both due to having a lot",
    "start": "780079",
    "end": "786600"
  },
  {
    "text": "of register uh ports but also the format of the instructions themselves is that",
    "start": "786600",
    "end": "791680"
  },
  {
    "text": "we can actually do things like an FMA to 128bit load store operations and any of",
    "start": "791680",
    "end": "798680"
  },
  {
    "text": "your basic ALU instructions all simultaneously so in a lot of cases where it's just impossible most",
    "start": "798680",
    "end": "805120"
  },
  {
    "text": "architecture and you know um even VW architecture of the past uh where you",
    "start": "805120",
    "end": "810800"
  },
  {
    "text": "just cannot really get theoretical peak of performance because you just it's impossible to use all of the execution",
    "start": "810800",
    "end": "817240"
  },
  {
    "text": "units um in a vast majority of the applications that we're targeting that is actually possible so a quick question",
    "start": "817240",
    "end": "824040"
  },
  {
    "text": "since you just mentioned your compiler in the slide before and I don't know which language you're doing are you",
    "start": "824040",
    "end": "829120"
  },
  {
    "text": "going to be comparing your compiler to the Bulldog compiler um you mean in terms of uh the actual scheduling",
    "start": "829120",
    "end": "835839"
  },
  {
    "text": "capabilities or well just a little detail kind of uh so I won't be in this",
    "start": "835839",
    "end": "841120"
  },
  {
    "text": "presentation so a lot of yeah um we could talk a bit more later um a",
    "start": "841120",
    "end": "847800"
  },
  {
    "text": "lot of our soft so I guess since we're leveraging uh so much of the software",
    "start": "847800",
    "end": "853199"
  },
  {
    "text": "capability is to actually make people be a be able to use our processor um the",
    "start": "853199",
    "end": "858959"
  },
  {
    "text": "software really is the secret sauce when it comes to most of this very simplified Hardware with software taking role so uh",
    "start": "858959",
    "end": "865920"
  },
  {
    "text": "we're happy to start showing Hardware now uh still uh going to be a little bit until we show the internals of some of",
    "start": "865920",
    "end": "872320"
  },
  {
    "text": "the software um but yeah the the main point of this is we can actually utilize",
    "start": "872320",
    "end": "878360"
  },
  {
    "text": "all of our functional units um simultaneously um and be able to get you",
    "start": "878360",
    "end": "884440"
  },
  {
    "text": "know at a single core level uh to start off with uh close to to theoretical Peak Performance so uh here's a diagram of",
    "start": "884440",
    "end": "891680"
  },
  {
    "start": "889000",
    "end": "1027000"
  },
  {
    "text": "our core uh we have a 64-bit ALU 64-bit floating Point Unit and uh uh two load",
    "start": "891680",
    "end": "897839"
  },
  {
    "text": "store units which are both both capable of either half W 32-bit W 64-bit or",
    "start": "897839",
    "end": "903000"
  },
  {
    "text": "double w 128bit operations every single cycle um all of them are fully pipelined",
    "start": "903000",
    "end": "908880"
  },
  {
    "text": "with the only instructions not pipelined is the integer divide um not fully",
    "start": "908880",
    "end": "914160"
  },
  {
    "text": "pipelined is the floating Point divide and floating Point square root but uh um other than that you can issue a new",
    "start": "914160",
    "end": "921000"
  },
  {
    "text": "instruction every single cycle for each one of these units um so we can really exploit uh uh you know get very high IPC",
    "start": "921000",
    "end": "928480"
  },
  {
    "text": "count over this um but uh yeah the the big point of this",
    "start": "928480",
    "end": "934480"
  },
  {
    "text": "is that we can within a core if your program fits inside of our scratch pad with this current test silicon uh 64",
    "start": "934480",
    "end": "940920"
  },
  {
    "text": "kilobytes of scratch pad in the future 128 256 bit kilobyte or more um you know",
    "start": "940920",
    "end": "948720"
  },
  {
    "text": "you're going to hit theoretical Peak Performance like we can guarantee if you're able to do a fuse multiply ad",
    "start": "948720",
    "end": "955160"
  },
  {
    "text": "every single cycle um as part of the interop of your program you will be hit two gig flops um with our 1 GHz uh",
    "start": "955160",
    "end": "962839"
  },
  {
    "text": "nominal clock uh clock speed um and uh it's also really small so not including",
    "start": "962839",
    "end": "969639"
  },
  {
    "text": "the scratch Pad so just looking at the neoc core and actually the router as well it's less than .1 square mimet and",
    "start": "969639",
    "end": "976120"
  },
  {
    "text": "tsmc is 28 nm process uh so a ridiculously small core size and I'll",
    "start": "976120",
    "end": "981680"
  },
  {
    "text": "have a comparison a bit later on showing how that ranks up against uh uh some other both mobile and high performance",
    "start": "981680",
    "end": "987959"
  },
  {
    "text": "cores um and what's kind of shown here with the scratch Pad is that uh it is uh",
    "start": "987959",
    "end": "994319"
  },
  {
    "text": "multibank so we have eight uh 64 bit single ported registers so if you're",
    "start": "994319",
    "end": "1000720"
  },
  {
    "text": "doing a double w read or write to that you're actually utilizing two of the banks and uh we have a really cool",
    "start": "1000720",
    "end": "1007079"
  },
  {
    "text": "hashing system and such that uh makes that really powerful in terms of being able to with every single cycle be able",
    "start": "1007079",
    "end": "1014639"
  },
  {
    "text": "to use all eight of those banks for both incoming data into the core on the Network on chip which I'll get to on the",
    "start": "1014639",
    "end": "1020319"
  },
  {
    "text": "next slide sending data out on the network on chip and doing processing just within the",
    "start": "1020319",
    "end": "1026240"
  },
  {
    "text": "core so uh when we go out to the network on chip so uh just designing a chip a",
    "start": "1026240",
    "end": "1031880"
  },
  {
    "start": "1027000",
    "end": "1180000"
  },
  {
    "text": "you know very uh simple processor core uh and thinking you're just going to have one of those on chip won't really",
    "start": "1031880",
    "end": "1038319"
  },
  {
    "text": "work today so we're trying to embrace task level parallelism so we have a true mimd model so each one of our cores is",
    "start": "1038319",
    "end": "1045280"
  },
  {
    "text": "fully independent and all connected to this uh two-dimensional mesh Network on",
    "start": "1045280",
    "end": "1050679"
  },
  {
    "text": "chip it behaves it follows a static priority routing system so uh we it's",
    "start": "1050679",
    "end": "1057640"
  },
  {
    "text": "fully deadlock free you're able to send messages every single cycle with one cycle per hop um for each core that you",
    "start": "1057640",
    "end": "1064440"
  },
  {
    "text": "go down on the the knock um the fully deterministic part is a really important",
    "start": "1064440",
    "end": "1069679"
  },
  {
    "text": "part uh when it comes to our compiler and actually trying and schedule these things as you know just doing something",
    "start": "1069679",
    "end": "1075400"
  },
  {
    "text": "within one core is interesting but actually being able to architect protect uh programs to be pipelined over",
    "start": "1075400",
    "end": "1081440"
  },
  {
    "text": "multiple cores or uh uh you know have completely separate applications that",
    "start": "1081440",
    "end": "1086600"
  },
  {
    "text": "you don't actually want potentially have uh interactions with other uh applications on the chip be able to uh",
    "start": "1086600",
    "end": "1093640"
  },
  {
    "text": "run and coexist in in you know on a single chip um and so that full fully",
    "start": "1093640",
    "end": "1100240"
  },
  {
    "text": "deterministic Behavior Uh enables us at the compiler level to actually give hard",
    "start": "1100240",
    "end": "1105320"
  },
  {
    "text": "guarantees on you know it's going to take exactly five Cycles to go from core 0 to uh core 13 for instance and uh with",
    "start": "1105320",
    "end": "1113960"
  },
  {
    "text": "that knowledge we uh uh actually can write very performant and have the compiler generate very performant code",
    "start": "1113960",
    "end": "1121720"
  },
  {
    "text": "and uh when it gets comes to the address space another cool aspect of Architecture is um if you look at core",
    "start": "1121720",
    "end": "1128120"
  },
  {
    "text": "zero um that is the first in the case of our test chip uh 64 kilobytes of uh",
    "start": "1128120",
    "end": "1135080"
  },
  {
    "text": "address space so address 0 through 64k uh corresponds to core0 and if core0",
    "start": "1135080",
    "end": "1143400"
  },
  {
    "text": "were to read or write from any one of those addresses it would be accessing its own scratch pad in one cycle now if",
    "start": "1143400",
    "end": "1149559"
  },
  {
    "text": "it goes one address higher it would now actually be able to write to core one's",
    "start": "1149559",
    "end": "1155679"
  },
  {
    "text": "scratch pad and that just takes and that's handled completely automatically for it and uh if it access that address",
    "start": "1155679",
    "end": "1162880"
  },
  {
    "text": "it takes one additional cycle to write out to that um and then that is just one additional hop to any core with on the",
    "start": "1162880",
    "end": "1169440"
  },
  {
    "text": "chip this also expands not just to the address space on a single chip but we can expand the address space to multiple",
    "start": "1169440",
    "end": "1175440"
  },
  {
    "text": "chips uh which will be in the next slide so with uh this test chip we've uh",
    "start": "1175440",
    "end": "1183280"
  },
  {
    "start": "1180000",
    "end": "1260000"
  },
  {
    "text": "uh have 16 of our uh cores and then two CIS so C on the the north that U",
    "start": "1183280",
    "end": "1191799"
  },
  {
    "text": "basically routes up to anything below the the uh current chips address and uh",
    "start": "1191799",
    "end": "1197400"
  },
  {
    "text": "chip uh South which does the opposite um it's extremely high bandwidth compared",
    "start": "1197400",
    "end": "1202600"
  },
  {
    "text": "to most cies um which very good for us when you we're considering trying to move a lot of data going through our",
    "start": "1202600",
    "end": "1209720"
  },
  {
    "text": "chip in kind of a systolic array fashion um and uh so 125 gigabits per second in",
    "start": "1209720",
    "end": "1216039"
  },
  {
    "text": "each Direction per CES um and uh we've been able to utilize a a multi-chip",
    "start": "1216039",
    "end": "1222120"
  },
  {
    "text": "module um to actually show this off with our current uh test silicon um and again that the protocol",
    "start": "1222120",
    "end": "1230000"
  },
  {
    "text": "is actually reutilized for uh the chipto chip links so over the CES you'd be",
    "start": "1230000",
    "end": "1235799"
  },
  {
    "text": "using the exact same address space if you have multiple of our chips connected or say or connected to something that is",
    "start": "1235799",
    "end": "1241400"
  },
  {
    "text": "has access to a you know larger amount of memory like Dam um with our current",
    "start": "1241400",
    "end": "1246520"
  },
  {
    "text": "test board we have uh the ability to connect to an fpga which has Dam attached and we basically just map that",
    "start": "1246520",
    "end": "1252200"
  },
  {
    "text": "Dam um to be a either something higher or lower in the uh global address space",
    "start": "1252200",
    "end": "1260600"
  },
  {
    "start": "1260000",
    "end": "1329000"
  },
  {
    "text": "um so to go a bit about the the um cies since it is pretty uh interesting um so",
    "start": "1260640",
    "end": "1266760"
  },
  {
    "text": "it's not your tra traditional series which is just a a differential pair uh connected to another series following",
    "start": "1266760",
    "end": "1273320"
  },
  {
    "text": "you know the same uh standard um but we're actually doing a unique thing using a another startup company called C",
    "start": "1273320",
    "end": "1280360"
  },
  {
    "text": "dos in Switzerland uh they've developed a a new type of CES that is much closer",
    "start": "1280360",
    "end": "1285880"
  },
  {
    "text": "to a a sour synchronous forwarded uh blink but uh so they're able to do this",
    "start": "1285880",
    "end": "1293159"
  },
  {
    "text": "125 gbit per second which is you know over twice as fast as the B bleeding",
    "start": "1293159",
    "end": "1298360"
  },
  {
    "text": "edge new C is on uh uh you know 16 nimer and we're doing it on 28 but uh by",
    "start": "1298360",
    "end": "1304559"
  },
  {
    "text": "utilizing multi-level signaling we can uh actually do much lower power and not",
    "start": "1304559",
    "end": "1309600"
  },
  {
    "text": "have to have ridiculously high uh frequencies um and then the addition of",
    "start": "1309600",
    "end": "1314799"
  },
  {
    "text": "actually doing fored clock um instead of you know having Ed clock for each",
    "start": "1314799",
    "end": "1319840"
  },
  {
    "text": "differential pair that we're sending over um we uh uh also reduces power",
    "start": "1319840",
    "end": "1326000"
  },
  {
    "text": "significantly um so to give you a bit of idea of how that's connected on the left",
    "start": "1326000",
    "end": "1331120"
  },
  {
    "start": "1329000",
    "end": "1383000"
  },
  {
    "text": "here basically every the um 16 wires that are you know abbreviated there but",
    "start": "1331120",
    "end": "1338360"
  },
  {
    "text": "uh is the the going between two of our chips say within a multi-chip module or one of our chips in the fpga that's uh",
    "start": "1338360",
    "end": "1346039"
  },
  {
    "text": "able to be connected to it um we're able ble to get up to 25 uh gbits per second",
    "start": "1346039",
    "end": "1351960"
  },
  {
    "text": "this is simplified a bit with a different reference clock but uh with",
    "start": "1351960",
    "end": "1357200"
  },
  {
    "text": "this we can get down to 1.4 Pico Jewels per bit for transfers and uh if you know",
    "start": "1357200",
    "end": "1362840"
  },
  {
    "text": "anything about today's series the state-of-the-art ones used for like HMC and pcie Gen 4 um on you know modern 28",
    "start": "1362840",
    "end": "1371799"
  },
  {
    "text": "nanometer chips is around 20 to 25 PJs per bit uh so we get a really fast",
    "start": "1371799",
    "end": "1377960"
  },
  {
    "text": "interface and uh are not using much power so uh I guess give a bit of idea",
    "start": "1377960",
    "end": "1384200"
  },
  {
    "start": "1383000",
    "end": "1441000"
  },
  {
    "text": "on the timeline of how we uh got this in here um so we closed our Original Seed",
    "start": "1384200",
    "end": "1390200"
  },
  {
    "text": "financing of $2 million as Andy brought up earlier um back in July of uh uh 2015",
    "start": "1390200",
    "end": "1397039"
  },
  {
    "text": "uh we spent a couple months setting up the company um interviewing folks etc etc uh negotiating with the um IP",
    "start": "1397039",
    "end": "1405440"
  },
  {
    "text": "vendors for uh standard cell libraries fabrication Etc um and eventually made",
    "start": "1405440",
    "end": "1410720"
  },
  {
    "text": "our two hires in November of 2015 um all the way through RTL development till",
    "start": "1410720",
    "end": "1415880"
  },
  {
    "text": "eventually taping out in July of July 20th of uh uh 20 2016 so anniversary of",
    "start": "1415880",
    "end": "1424279"
  },
  {
    "text": "the moon landing it was good day um and we finally got our chips back on October",
    "start": "1424279",
    "end": "1429760"
  },
  {
    "text": "3rd of uh uh 2016 and it's been hell with the board development between now",
    "start": "1429760",
    "end": "1436600"
  },
  {
    "text": "and then then and now um so to give you a bit of idea on kind",
    "start": "1436600",
    "end": "1442039"
  },
  {
    "start": "1441000",
    "end": "1630000"
  },
  {
    "text": "of the flow that we follow to be able to do this in a very aggressive timeline so we developed you know full custom core",
    "start": "1442039",
    "end": "1448480"
  },
  {
    "text": "design and you know multi-chip module uh multie chip and multi-chip module with",
    "start": "1448480",
    "end": "1454960"
  },
  {
    "text": "the uh with that design in only six months and so uh we used a full Cadence",
    "start": "1454960",
    "end": "1461559"
  },
  {
    "text": "uh tool Suite Cadence has been a great partner um bit of an ad for them here um",
    "start": "1461559",
    "end": "1467120"
  },
  {
    "text": "but uh we utilize their newest and greatest and best uh uh tools for",
    "start": "1467120",
    "end": "1472840"
  },
  {
    "text": "synthesis place and routes verification Etc along with really great tool called jewels that I like to highlight for",
    "start": "1472840",
    "end": "1479200"
  },
  {
    "text": "allowing us to actually do uh early power analysis and was really really uh",
    "start": "1479200",
    "end": "1484559"
  },
  {
    "text": "influential in terms of us being to make good design decisions to optimize for power which uh is really the name of the",
    "start": "1484559",
    "end": "1491039"
  },
  {
    "text": "game for us um we are running on about a a weekly uh flow uh going from a new",
    "start": "1491039",
    "end": "1497279"
  },
  {
    "text": "core um RTL uh complete to be able to have full place and routed uh net list that we",
    "start": "1497279",
    "end": "1503320"
  },
  {
    "text": "were able to do uh Power performance and area analysis on and uh um eventually",
    "start": "1503320",
    "end": "1509240"
  },
  {
    "text": "from having final chip RTL to having a what was supposed to be our final uh",
    "start": "1509240",
    "end": "1514880"
  },
  {
    "text": "tape out net list uh was or excuse me final tape out GDs that later had to uh",
    "start": "1514880",
    "end": "1521960"
  },
  {
    "text": "be Eed uh was only a month so very simple design enabl us to uh uh really",
    "start": "1521960",
    "end": "1528520"
  },
  {
    "text": "do things really really quickly um so kind of to give you a look",
    "start": "1528520",
    "end": "1533840"
  },
  {
    "text": "at what we actually produced uh so the 16 core demo uh you could see the two CES the north side and the South Side",
    "start": "1533840",
    "end": "1541080"
  },
  {
    "text": "along with our 16 cores uh the big you know blocks that you see in the middle there are the scratch pads so each core",
    "start": "1541080",
    "end": "1547760"
  },
  {
    "text": "has eight scratch Pad Banks as part of before we utilized uh the arm standard",
    "start": "1547760",
    "end": "1553240"
  },
  {
    "text": "cell uh and arm memory compilers for those um and uh",
    "start": "1553240",
    "end": "1558840"
  },
  {
    "text": "actually for this uh and we're I'll show in a little bit with um our we we were",
    "start": "1558840",
    "end": "1566200"
  },
  {
    "text": "originally targeting about 32 double Precision gigaflops per watt um and about 8X better than Intel um on a newer",
    "start": "1566200",
    "end": "1574000"
  },
  {
    "text": "process node than what we taped out up um and again built by a team of four and we're expecting to have a newer version",
    "start": "1574000",
    "end": "1580480"
  },
  {
    "text": "next year this B picture on the bottom here is the multi- chip module so we've got two of our 16 core chips with the uh",
    "start": "1580480",
    "end": "1587399"
  },
  {
    "text": "125 Abit in each Direction link and then the links on the external sides are also",
    "start": "1587399",
    "end": "1593919"
  },
  {
    "text": "broken out which enables us to connect multiple of our packages on the board which I'll be showing in a little bit",
    "start": "1593919",
    "end": "1599679"
  },
  {
    "text": "and uh um yeah so valuation kits uh here's a",
    "start": "1599679",
    "end": "1605640"
  },
  {
    "text": "picture of the board that we I'll be demoing in a bit as well as uh we're able to connect this to an fpga so on",
    "start": "1605640",
    "end": "1612320"
  },
  {
    "text": "the flip side of that board we have uh FMC adapters which allow us to plug into a variety of fpgas as seen here and uh",
    "start": "1612320",
    "end": "1621039"
  },
  {
    "text": "uh enable us to actually really stress the uh uh memory bandwidth of uh of our chip um and those will be on sale",
    "start": "1621039",
    "end": "1629679"
  },
  {
    "text": "shortly a bit on uh piler and that fun stuff uh we've been leveraging the lovm",
    "start": "1629679",
    "end": "1635679"
  },
  {
    "start": "1630000",
    "end": "1683000"
  },
  {
    "text": "uh uh open source project so we created a custom backend um and really have been",
    "start": "1635679",
    "end": "1643360"
  },
  {
    "text": "working most on the optimiz optimization uh levels so uh most our Focus has been",
    "start": "1643360",
    "end": "1649880"
  },
  {
    "text": "you know trying to have the compiler be aware of the latencies we have to different locations in memory um and uh",
    "start": "1649880",
    "end": "1657200"
  },
  {
    "text": "um you know it's mostly scheduling issues uh that to be able to get most of",
    "start": "1657200",
    "end": "1662480"
  },
  {
    "text": "the the performance right now we there was you know some tweaks we had to do on the front end to be able to get uh CN",
    "start": "1662480",
    "end": "1668480"
  },
  {
    "text": "C++ support with clang we have very rudimentary support right now um and most of our testing is being done with",
    "start": "1668480",
    "end": "1674840"
  },
  {
    "text": "assembly that we uh have written you know through the uh RTL and now now",
    "start": "1674840",
    "end": "1680440"
  },
  {
    "text": "having real silicon development process and I'll also be giving a demo in a shortly for our software simulation",
    "start": "1680440",
    "end": "1687200"
  },
  {
    "start": "1683000",
    "end": "1777000"
  },
  {
    "text": "tools it's called neosm or neim iass uh the interactive cycle accurate simulator",
    "start": "1687200",
    "end": "1693159"
  },
  {
    "text": "um with this we get U so we actually were able to generate that using our um",
    "start": "1693159",
    "end": "1698360"
  },
  {
    "text": "own RTL so the exact same RTL that we taped out with we're able to make a c u",
    "start": "1698360",
    "end": "1704399"
  },
  {
    "text": "uh compile to C++ to have a cycle accurate simulator that is is pretty darn fast on our Intel i7",
    "start": "1704399",
    "end": "1712440"
  },
  {
    "text": "6700k processor desktop CPU you know 350 bucks or so um we're able to actually",
    "start": "1712440",
    "end": "1718440"
  },
  {
    "text": "get about 1 mahz uh simulated speed uh for our single tile simulation um which",
    "start": "1718440",
    "end": "1725960"
  },
  {
    "text": "is really fast compared to RTL simulation when we were doing most of our work initially with the um you know",
    "start": "1725960",
    "end": "1732000"
  },
  {
    "text": "the variety of different uh RTL based simulators we're lucky to be getting maybe uh what 20 to to 50 khz um but you",
    "start": "1732000",
    "end": "1741960"
  },
  {
    "text": "know we get the exact same level of simulation detail and unlike pretty much any other simulator that you can get",
    "start": "1741960",
    "end": "1747919"
  },
  {
    "text": "from commercial uh uh semiconductor vendors you can see every single register within our chip and some of the",
    "start": "1747919",
    "end": "1754559"
  },
  {
    "text": "cool features which sadly aren't working today I was hoping to show but uh we have cool things like a schematic level",
    "start": "1754559",
    "end": "1761399"
  },
  {
    "text": "viewer to be able to see inside the actual pipeline cycle by cycle um being for each of the functional units um and",
    "start": "1761399",
    "end": "1769200"
  },
  {
    "text": "uh also be able to see things on network on chip uh have you know sort of heat Maps based on program",
    "start": "1769200",
    "end": "1776480"
  },
  {
    "text": "runtime um Library support uh so this is very much work in progress portion but",
    "start": "1776480",
    "end": "1782720"
  },
  {
    "start": "1777000",
    "end": "1815000"
  },
  {
    "text": "is extremely important for our overall future uh so we want to be able to support as many of the existing",
    "start": "1782720",
    "end": "1788480"
  },
  {
    "text": "programming models um as possible but obviously we have some preference to a",
    "start": "1788480",
    "end": "1793640"
  },
  {
    "text": "couple of our fa favorites um but in terms of the real application areas that we're looking at are mostly things where",
    "start": "1793640",
    "end": "1800080"
  },
  {
    "text": "you would be running you know bare metal code on this so we really love DP like",
    "start": "1800080",
    "end": "1805240"
  },
  {
    "text": "applications anything uh and our first demo that was going to show here today",
    "start": "1805240",
    "end": "1810600"
  },
  {
    "text": "was for uh fft for mobile base station processing I already talked bit about",
    "start": "1810600",
    "end": "1816240"
  },
  {
    "start": "1815000",
    "end": "2636000"
  },
  {
    "text": "the debugging profiling but uh cool thing that lvm um with some of our changes been able to give us as some",
    "start": "1816240",
    "end": "1822559"
  },
  {
    "text": "really cool graphs in terms of being able to show similar to the Bulldog compiler originally uh Josh Fischer's",
    "start": "1822559",
    "end": "1828720"
  },
  {
    "text": "original Bulldog paper was you know is still pretty awesome to me because you",
    "start": "1828720",
    "end": "1833760"
  },
  {
    "text": "know you get to see these graphs programs which most people just don't seem to really conceptualize",
    "start": "1833760",
    "end": "1839000"
  },
  {
    "text": "well um and real-time signal processing kind of I was just mentioning some of the DSP stuff and where we see uh really",
    "start": "1839000",
    "end": "1846440"
  },
  {
    "text": "our best um levels of performance and efficiency gain is in the uh DSP mobile",
    "start": "1846440",
    "end": "1852799"
  },
  {
    "text": "base station space where with the oncoming uh uh kind of five G uh um",
    "start": "1852799",
    "end": "1860880"
  },
  {
    "text": "evolution of Technology coming uh there's been a real push by the Telecom vendors to utilize fpgas and more exotic",
    "start": "1860880",
    "end": "1867480"
  },
  {
    "text": "Hardware than they have in the past which uh actually is hurting them uh a bit when it comes to power efficiency",
    "start": "1867480",
    "end": "1873559"
  },
  {
    "text": "and and cost so we see ourselves as having a very good solution for that so",
    "start": "1873559",
    "end": "1879200"
  },
  {
    "text": "I've got a live demo um that was working four hours ago and then broke uh three hours ago",
    "start": "1879200",
    "end": "1885970"
  },
  {
    "text": "[Music] yeah don't work with animals or do live",
    "start": "1885970",
    "end": "1891559"
  },
  {
    "text": "demos um so I guess can the camera be tilted all onto the",
    "start": "1891559",
    "end": "1898200"
  },
  {
    "text": "table Yeah right here I can't see too well but um this is our development",
    "start": "1898200",
    "end": "1903440"
  },
  {
    "text": "board saw on that picture uh not that one this one over here I guess yeah",
    "start": "1903440",
    "end": "1910000"
  },
  {
    "text": "here cool can see all right yeah it's showing up on",
    "start": "1910000",
    "end": "1917000"
  },
  {
    "text": "the screens behind you that that helps oh well um there's not too much on",
    "start": "1917000",
    "end": "1922720"
  },
  {
    "text": "it I guess there's like the syon Night Rider ey which you know I'm a fan of but",
    "start": "1922720",
    "end": "1928200"
  },
  {
    "text": "uh so we've got a development board have the the you know Night Rider kit sort of",
    "start": "1928200",
    "end": "1933880"
  },
  {
    "text": "thing going on there um and we have slots for two of our packages so we can have up to four of our 16 core dyes um",
    "start": "1933880",
    "end": "1941960"
  },
  {
    "text": "you know total of 64 cores on a single uh board uh right now we only have a single uh package in there um I don't",
    "start": "1941960",
    "end": "1949120"
  },
  {
    "text": "want to open that up yet but uh um I guess I could show you here here are the",
    "start": "1949120",
    "end": "1955120"
  },
  {
    "text": "the chips that would go in there um so uh yeah the the live demo I was going to",
    "start": "1955120",
    "end": "1961880"
  },
  {
    "text": "give was a uh 1024 fft uh uh fft so good",
    "start": "1961880",
    "end": "1967840"
  },
  {
    "text": "uh uh we're using as a benchmark to doing a 10 MHz 600 sub Channel um uh fft",
    "start": "1967840",
    "end": "1974679"
  },
  {
    "text": "Bas baseband for U uh LTE um and I do have some numbers but I'm",
    "start": "1974679",
    "end": "1981440"
  },
  {
    "text": "just going to see if this works so if we can switch the computer screen",
    "start": "1981440",
    "end": "1989279"
  },
  {
    "text": "so um don't think it's there we go cool so",
    "start": "1989279",
    "end": "1997120"
  },
  {
    "text": "here is uh all the commands that we have on the board so we've got to pick microcontroller here connected through",
    "start": "1997120",
    "end": "2002760"
  },
  {
    "text": "uart to uh my PC um that actually is connected to our debug inter SPI",
    "start": "2002760",
    "end": "2008960"
  },
  {
    "text": "interface on our chip um we've got a bunch of fun uh commands on here but uh",
    "start": "2008960",
    "end": "2014440"
  },
  {
    "text": "sadly it seems that I broke the chip earlier so I'll try doing this just",
    "start": "2014440",
    "end": "2020240"
  },
  {
    "text": "initializes the ADC and gives us our initial values for um um actually be",
    "start": "2020240",
    "end": "2025320"
  },
  {
    "text": "able to do power measurements and everything I can do power and right now",
    "start": "2025320",
    "end": "2030399"
  },
  {
    "text": "domain a which is our chip is using 11 M uh which is a bit too low it should be",
    "start": "2030399",
    "end": "2036440"
  },
  {
    "text": "around 50 just idling right now um I think that in doing a stress test",
    "start": "2036440",
    "end": "2042200"
  },
  {
    "text": "earlier of this I left the fft running for uh about hour and a half and after I",
    "start": "2042200",
    "end": "2048200"
  },
  {
    "text": "rebooted it it was dead or was now exhibiting this issue um so I can just",
    "start": "2048200",
    "end": "2054398"
  },
  {
    "text": "turn on the PLL I'll set it just to do 500 MHz right now I have 750 and 1 GHz",
    "start": "2054399",
    "end": "2060919"
  },
  {
    "text": "supported as well and uh I'll do a um",
    "start": "2060919",
    "end": "2068398"
  },
  {
    "text": "fft and do it for chip zero so",
    "start": "2068399",
    "end": "2074358"
  },
  {
    "text": "it's executing or it's sending the code over takes about a minute or so but",
    "start": "2074359",
    "end": "2082720"
  },
  {
    "text": "uh oops",
    "start": "2085560",
    "end": "2089560"
  },
  {
    "text": "or it may have",
    "start": "2103040",
    "end": "2105640"
  },
  {
    "text": "died um actually so we're doing a uh full 1024 points we're using two banks",
    "start": "2109640",
    "end": "2116200"
  },
  {
    "text": "at eight so it's total 16 kilobytes of data um onto all 16 cores um so this is",
    "start": "2116200",
    "end": "2122800"
  },
  {
    "text": "going over SPI due to a board issue we actually um are not able to use the",
    "start": "2122800",
    "end": "2128880"
  },
  {
    "text": "hardware spis on the microcontroller so we're doing bit bagging so it's a bit slower than you would normally um",
    "start": "2128880",
    "end": "2136880"
  },
  {
    "text": "expect huh okay giv me back to the terminal so it may have ran let's do",
    "start": "2136880",
    "end": "2141960"
  },
  {
    "text": "power to see what the power is 32 Ms yeah it it does not seem to be working",
    "start": "2141960",
    "end": "2148800"
  },
  {
    "text": "um but anyways we do have cool commands like uh read CSR so I can",
    "start": "2148800",
    "end": "2155000"
  },
  {
    "text": "do uh help app I always forget the so read CSR we want to do it to tile",
    "start": "2155000",
    "end": "2161680"
  },
  {
    "text": "0 0 on chip z um or CS I want to do csr1",
    "start": "2161680",
    "end": "2167560"
  },
  {
    "text": "which is the pro program counter and uh I'll do that for chip one well the",
    "start": "2167560",
    "end": "2173839"
  },
  {
    "text": "program counter has a value so something actually did R run there and that does I don't think that is actually a",
    "start": "2173839",
    "end": "2181040"
  },
  {
    "text": "valid program counter value so something is definitely messed up there but um",
    "start": "2181040",
    "end": "2187319"
  },
  {
    "text": "yeah um good thing I did take pictures before it broke so um we we we",
    "start": "2187319",
    "end": "2197480"
  },
  {
    "text": "just got these chips actually running about two weeks ago and um the yeah we we just got them running",
    "start": "2197480",
    "end": "2204640"
  },
  {
    "text": "about two weeks ago we were running some really basic tests couple of the chips that we put on like just didn't work and",
    "start": "2204640",
    "end": "2210160"
  },
  {
    "text": "we didn't know why so uh we eventually got one that worked which this one's been going you know pretty good for",
    "start": "2210160",
    "end": "2215839"
  },
  {
    "text": "about a week and but anytime time I've got any results I always take pictures so happy I did this time um so this was",
    "start": "2215839",
    "end": "2223160"
  },
  {
    "text": "before like this was doing the initial power before I even turned on the PLO or anything and it's about 59 60 mows for",
    "start": "2223160",
    "end": "2230920"
  },
  {
    "text": "that uh domain a which is our Core Power domain and then that domain B is the io",
    "start": "2230920",
    "end": "2236920"
  },
  {
    "text": "power um it says P0 at the end there that's just a bug in the code that I didn't bother to fix um but you can",
    "start": "2236920",
    "end": "2243760"
  },
  {
    "text": "actually do the calculation 1.8 uh volts times the the current um which I did a bit later on so don't",
    "start": "2243760",
    "end": "2250680"
  },
  {
    "text": "have to pull out your calculators um pl3 set that to 1 GHz that all programmed",
    "start": "2250680",
    "end": "2256720"
  },
  {
    "text": "fine uh and the chip got up to about low under um 100 Mills and then eventually",
    "start": "2256720",
    "end": "2265079"
  },
  {
    "text": "here um doesn't want let me zoom in too well",
    "start": "2265079",
    "end": "2270880"
  },
  {
    "text": "there uh we were doing load ft so we did see on the on the um screen before that",
    "start": "2270880",
    "end": "2276440"
  },
  {
    "text": "it was executed the SPI commands uh it didn't seem to actually get into loading the ffts uh there is like a handshake",
    "start": "2276440",
    "end": "2283280"
  },
  {
    "text": "there that that happens um sometimes since this is broken for the past 3 hours um it has actually like done the",
    "start": "2283280",
    "end": "2290920"
  },
  {
    "text": "handshake but then it seems to like break later on so still have to do some debugging with that and EV eventually",
    "start": "2290920",
    "end": "2297319"
  },
  {
    "text": "actually starts doing the reset which sets the PC counter back to the program counter back to zero and then it starts",
    "start": "2297319",
    "end": "2303640"
  },
  {
    "text": "the execution and in the end uh it got the test running and I did power check it was up to about",
    "start": "2303640",
    "end": "2310240"
  },
  {
    "text": "223 M after leaving that on and just keeping it on for uh about 45 minutes or so when",
    "start": "2310240",
    "end": "2317880"
  },
  {
    "text": "I checked again um it was up to about 250 M and that stayed about constant so um in terms of what should",
    "start": "2317880",
    "end": "2326400"
  },
  {
    "text": "have happened when we did a live demo but I'll summarize for how it was a bit earlier uh we were doing about",
    "start": "2326400",
    "end": "2332160"
  },
  {
    "text": "1.06 gigaflops per core while running at 1 GHz uh so 16.9 for the whole chip um",
    "start": "2332160",
    "end": "2339440"
  },
  {
    "text": "the power usage for the actual Core Power all of our our cores and the PLL",
    "start": "2339440",
    "end": "2344480"
  },
  {
    "text": "was about 250 mow uh power power usage for the io was about 178 and uh while",
    "start": "2344480",
    "end": "2352800"
  },
  {
    "text": "that was not running on the current ship but if we were were fully saturating the uh uh 125 gbits of the CI that would",
    "start": "2352800",
    "end": "2360359"
  },
  {
    "text": "have added about 250 M um so in total adding all of those up even the part",
    "start": "2360359",
    "end": "2365920"
  },
  {
    "text": "that we didn't test uh uh would give us about 25 G flops per watt uh double precisions full f e 754",
    "start": "2365920",
    "end": "2374319"
  },
  {
    "text": "2008 64 bit um many of the numbers you may see uh you know that don't actually",
    "start": "2374319",
    "end": "2380680"
  },
  {
    "text": "say that exactly uh usually refer to single prision or something that isn't itly uh compatible um so that's about",
    "start": "2380680",
    "end": "2389319"
  },
  {
    "text": "and this is you know not fully optimized assembly code right now and uh we're",
    "start": "2389319",
    "end": "2394560"
  },
  {
    "text": "still about 2x better than Intel on for nmet today and that's Intel's advertised",
    "start": "2394560",
    "end": "2400319"
  },
  {
    "text": "numbers which you're not going to see in reality so uh to give you and that was",
    "start": "2400319",
    "end": "2406800"
  },
  {
    "text": "also for an fft which has question pretty clear you have",
    "start": "2406800",
    "end": "2413480"
  },
  {
    "text": "computational efficiency yeah how is it your architecture compared to like Intel",
    "start": "2413480",
    "end": "2418960"
  },
  {
    "text": "in terms of the overhead of like context switch",
    "start": "2418960",
    "end": "2424079"
  },
  {
    "text": "right yeah so um I guess the the it's longer question to answer so the when it",
    "start": "2424079",
    "end": "2431520"
  },
  {
    "text": "comes to like relocating code for instance so one of the cool things about our global address space is that at a",
    "start": "2431520",
    "end": "2438720"
  },
  {
    "text": "you know if we have set of code that is just running on a single chip or excuse",
    "start": "2438720",
    "end": "2443760"
  },
  {
    "text": "me a single core we can actually move that to any other core without incurring any penalties there's no nothing in",
    "start": "2443760",
    "end": "2449839"
  },
  {
    "text": "actual the instructions that need to be changed to be moved to different cores thing that does like since um I guess I",
    "start": "2449839",
    "end": "2457319"
  },
  {
    "text": "didn't specify explicitly but um our Network on chip is right only so for instance when we're um anytime that uh",
    "start": "2457319",
    "end": "2465839"
  },
  {
    "text": "one core needs data from another core the the core that actually has that data needs to send it so it's the job of",
    "start": "2465839",
    "end": "2471960"
  },
  {
    "text": "compiler or you know if uh um we have an interrupt Network which I didn't show",
    "start": "2471960",
    "end": "2477280"
  },
  {
    "text": "explicitly but uh um you know it's the job of core to issue an interrupt to another Court says hey I need this data",
    "start": "2477280",
    "end": "2483560"
  },
  {
    "text": "or you know do some other sort of handshake we don't like the whole sort of threading model that we have for this",
    "start": "2483560",
    "end": "2489440"
  },
  {
    "text": "isn't one that uh particularly like goes to something where you want to have a core you know do do a switch like that",
    "start": "2489440",
    "end": "2497800"
  },
  {
    "text": "but the the real point is we want to have data in the scratch pad for you know its execution you know when when",
    "start": "2497800",
    "end": "2505599"
  },
  {
    "text": "it's actually needed so um the uh we we do have things like we we don't have",
    "start": "2505599",
    "end": "2511359"
  },
  {
    "text": "Branch prediction but we do have Branch instructions with delay slots Etc so like in this fft we were um you know a",
    "start": "2511359",
    "end": "2517960"
  },
  {
    "text": "lot of people don't like Branch delay slots but we were able to exploit that to you know get a bit uh tighter in a",
    "start": "2517960",
    "end": "2524440"
  },
  {
    "text": "inner loop and and such so much uh longer answer",
    "start": "2524440",
    "end": "2530640"
  },
  {
    "text": "but uh so to give you a bit of bit of an idea of comparison for what will be our production chip 256 core on 16 nanometer",
    "start": "2530640",
    "end": "2538319"
  },
  {
    "text": "based on uh what we have right now um so uh uh you know for each core in terms of",
    "start": "2538319",
    "end": "2545559"
  },
  {
    "text": "uh double Precision floating point able to theoretical peak of 2 gflops per core",
    "start": "2545559",
    "end": "2551119"
  },
  {
    "text": "um you know you can multiply it by 256 uh the numbers from Intel and gang",
    "start": "2551119",
    "end": "2556680"
  },
  {
    "text": "are pretty much you know advertised as you are never going to exceed this rather than what you see in in real life",
    "start": "2556680",
    "end": "2564200"
  },
  {
    "text": "and um one of my I can do a whole presentation rant on uh um sort of uh uh",
    "start": "2564200",
    "end": "2571079"
  },
  {
    "text": "how things are benchmarked and advertised um but uh most of the numbers that you see from big guys they want to",
    "start": "2571079",
    "end": "2578000"
  },
  {
    "text": "be showing their level three blahs their you know dents Matrix Matrix sort of workloads uh since you know pretty much",
    "start": "2578000",
    "end": "2585079"
  },
  {
    "text": "anything can do pretty well with that without needing to have much of in terms of memory bandwidth and so big",
    "start": "2585079",
    "end": "2590960"
  },
  {
    "text": "architectural decision on our side both at a single chip if you're just able to load up the the and uh you know do",
    "start": "2590960",
    "end": "2598680"
  },
  {
    "text": "everything on within the memory of your single processor um you know we are going to hit theoretical Peak",
    "start": "2598680",
    "end": "2604760"
  },
  {
    "text": "Performance that we have the bandwidth and and the ability to use all the functional units to do that for level",
    "start": "2604760",
    "end": "2611000"
  },
  {
    "text": "one two and three blaws um so you know the fft I showed um not super optimized",
    "start": "2611000",
    "end": "2617760"
  },
  {
    "text": "but you know doing 50 53% um of theoretical Peak is I think a",
    "start": "2617760",
    "end": "2625000"
  },
  {
    "text": "pretty good start and we should be getting much closer to that once we actually get real Lind pack compiled and",
    "start": "2625000",
    "end": "2630599"
  },
  {
    "text": "running on this um it it will be blazing um so we see ourselves as being",
    "start": "2630599",
    "end": "2637880"
  },
  {
    "start": "2636000",
    "end": "2673000"
  },
  {
    "text": "about 10 years ahead of the gang when it uh uh comes to Energy Efficiency at this level um you know this year Intel's next",
    "start": "2637880",
    "end": "2645440"
  },
  {
    "text": "Generation uh processors are staying on 14 animer for the first time um I like",
    "start": "2645440",
    "end": "2652119"
  },
  {
    "text": "More's law of effectively is is over in terms of just simple seos scaling and in",
    "start": "2652119",
    "end": "2657720"
  },
  {
    "text": "terms of since denard's law breakdown Etc we just haven't been seeing the same uh improvements over the past decade and",
    "start": "2657720",
    "end": "2664400"
  },
  {
    "text": "it's going to Plateau um to a great extent and I think really realized by",
    "start": "2664400",
    "end": "2669440"
  },
  {
    "text": "everyone um over the next decade but we see ourselves scaling very well um we",
    "start": "2669440",
    "end": "2675800"
  },
  {
    "start": "2673000",
    "end": "2715000"
  },
  {
    "text": "really like what tsmc has to offer in the next uh uh fabrication generations",
    "start": "2675800",
    "end": "2681079"
  },
  {
    "text": "and we also see that there being a ton of architectural improvements to be made um with this test chip we were very uh",
    "start": "2681079",
    "end": "2688240"
  },
  {
    "text": "conservative in terms of decisions we made like our idle power with just the PLL running technically the whole chip",
    "start": "2688240",
    "end": "2694760"
  },
  {
    "text": "is like perog counter is just set to to zero but all the functional units don't have any you know fancy clock or power",
    "start": "2694760",
    "end": "2701480"
  },
  {
    "text": "gating or anything so if we were to really try to leverage doing low power design techniques um you know our chip",
    "start": "2701480",
    "end": "2708000"
  },
  {
    "text": "like just their current chip at 28 nmet can be competitive with the next couple generations of of",
    "start": "2708000",
    "end": "2714000"
  },
  {
    "text": "Intel and uh on a cost semiconductor economics perspective we're a big fan of",
    "start": "2714000",
    "end": "2720160"
  },
  {
    "start": "2715000",
    "end": "3018000"
  },
  {
    "text": "uh um keeping to small uh dieses so while the big uh you know Intel Zeon F",
    "start": "2720160",
    "end": "2725680"
  },
  {
    "text": "chip and uh any of nvidia's gpus are pushing 600 700 Square millim um the",
    "start": "2725680",
    "end": "2731920"
  },
  {
    "text": "yield and such for that is very very low and leads to high costs and uh um you",
    "start": "2731920",
    "end": "2737160"
  },
  {
    "text": "know suboptimal kind of designs you have to account for being able to have a bunch of redundancy in in your design",
    "start": "2737160",
    "end": "2744680"
  },
  {
    "text": "which makes you know you have to make sacrifices uh we see that like 100 square millimeters as being a real sweet",
    "start": "2744680",
    "end": "2750359"
  },
  {
    "text": "spot in terms of how uh you you can fabricate things and uh be able to get",
    "start": "2750359",
    "end": "2755559"
  },
  {
    "text": "away with the uh you know having very good yield and uh you know make very well optimized",
    "start": "2755559",
    "end": "2761960"
  },
  {
    "text": "designs where did you get the in it's a good guesstimate um I see yeah",
    "start": "2761960",
    "end": "2771880"
  },
  {
    "text": "I I would so in terms of like nvidia's yields like we're sharing you know a Fab",
    "start": "2771880",
    "end": "2778559"
  },
  {
    "text": "with with tsmc once you're pushing you know 500 plus square square millimeter die sizes",
    "start": "2778559",
    "end": "2785640"
  },
  {
    "text": "your your yields start dropping",
    "start": "2785640",
    "end": "2790318"
  },
  {
    "text": "um uh yeah so we so we got 200 dies back for for this test chip um and doing a",
    "start": "2791359",
    "end": "2797680"
  },
  {
    "text": "multi-project wafer like this is not a good way to like uh calculate yield in",
    "start": "2797680",
    "end": "2802880"
  },
  {
    "text": "anyway um but uh we're you know based on the yield for the same size die that",
    "start": "2802880",
    "end": "2809200"
  },
  {
    "text": "Apple Etc all get with their mobile devices uh chips we we expect to be in",
    "start": "2809200",
    "end": "2815520"
  },
  {
    "text": "that range the thing that",
    "start": "2815520",
    "end": "2818839"
  },
  {
    "text": "the the wor the worry yeah yeah the the worry I have with that is we have a lot of memory compared so on that the 256",
    "start": "2821839",
    "end": "2828880"
  },
  {
    "text": "core chip that I'm saying here we would have 128 kilobytes of SRAM and uh you",
    "start": "2828880",
    "end": "2834720"
  },
  {
    "text": "know when 60 plus% of our di area is is SRAM we'd rather just you know throw out",
    "start": "2834720",
    "end": "2841319"
  },
  {
    "text": "the the dieses that you know have SRAM any SRAM failures and only keep the ones",
    "start": "2841319",
    "end": "2846960"
  },
  {
    "text": "that you know pass pass these tests both Flash and diss got a sudden",
    "start": "2846960",
    "end": "2855640"
  },
  {
    "text": "jump in capacity when they decided memory can be wrong all the",
    "start": "2855640",
    "end": "2861599"
  },
  {
    "text": "time um yeah I guess I I I I like my",
    "start": "2861599",
    "end": "2866800"
  },
  {
    "text": "stuff being correct in EN in eraser encoding if",
    "start": "2866800",
    "end": "2874559"
  },
  {
    "text": "every fetch is wrong and you're paying for the circuits anyway so you might as well have them",
    "start": "2874559",
    "end": "2880920"
  },
  {
    "text": "always active it's definitely thing we want to explore but um like there there",
    "start": "2880920",
    "end": "2887119"
  },
  {
    "text": "are eccs Rams with the 16 nmet stuff like it's an option in the memory compiler to have um you know just single",
    "start": "2887119",
    "end": "2894359"
  },
  {
    "text": "single bit correction and like two bit uh uh you know detection or I forget",
    "start": "2894359",
    "end": "2900480"
  },
  {
    "text": "exactly but uh it it's definitely a popular thing on newer designs something that we're we're willing to explore but",
    "start": "2900480",
    "end": "2908160"
  },
  {
    "text": "since since we have so much SRAM adding anything like that is is going to be a",
    "start": "2908160",
    "end": "2913520"
  },
  {
    "text": "big cost a bigger cost excuse me not adding",
    "start": "2913520",
    "end": "2921000"
  },
  {
    "text": "it yeah well um so so far like when when we",
    "start": "2921000",
    "end": "2927960"
  },
  {
    "text": "tested the memory on this test chip it's surprisingly all worked and 64 kilobytes",
    "start": "2927960",
    "end": "2933400"
  },
  {
    "text": "in in uh you know 27 mm for the whole uh",
    "start": "2933400",
    "end": "2938599"
  },
  {
    "text": "core size with the the SRAM compared to the 0.1 for just the the core and router",
    "start": "2938599",
    "end": "2943720"
  },
  {
    "text": "logic um you know we we were surprised that that that worked um but uh yeah",
    "start": "2943720",
    "end": "2951240"
  },
  {
    "text": "give you a bit of an idea in terms of uh um the the total area size for for",
    "start": "2951240",
    "end": "2957040"
  },
  {
    "text": "different cores so just compare those on 28 n process obviously tsmc and Global",
    "start": "2957040",
    "end": "2962680"
  },
  {
    "text": "foundaries are a bit different but it's a comparison um we're getting getting significantly higher uh flops per square",
    "start": "2962680",
    "end": "2970079"
  },
  {
    "text": "mimer and like compared to a an arm cortex a15 core that's 10x larger than",
    "start": "2970079",
    "end": "2976000"
  },
  {
    "text": "our core we still uh you know significantly uh higher performance and",
    "start": "2976000",
    "end": "2981599"
  },
  {
    "text": "then same thing with a full x86 uh uh core granted that um uh Jaguar was",
    "start": "2981599",
    "end": "2988000"
  },
  {
    "text": "primarily a mobile device CPU if I remember correctly but uh you know I'll I'll take it same thing with Adam but",
    "start": "2988000",
    "end": "2995119"
  },
  {
    "text": "the the big comparison here is has which is not only you know a real Intel high performance core but one manufactured on",
    "start": "2995119",
    "end": "3002200"
  },
  {
    "text": "a more advanced process not it's a 22 neter I love tsmc but Intel's had the",
    "start": "3002200",
    "end": "3008680"
  },
  {
    "text": "the advant the fabrication Advantage for a while and uh we're still you know",
    "start": "3008680",
    "end": "3013920"
  },
  {
    "text": "little tiny core um punching outside its weight class we've got some great advisers um also not on here I'd like to",
    "start": "3013920",
    "end": "3021480"
  },
  {
    "start": "3018000",
    "end": "5427000"
  },
  {
    "text": "thank Lenor Mullen um and Isaac yanam yanamoto and a bunch of others that have",
    "start": "3021480",
    "end": "3027720"
  },
  {
    "text": "helped us a lot uh along this whole process and uh We've uh done a lot in a",
    "start": "3027720",
    "end": "3033960"
  },
  {
    "text": "fairly small amount of time so uh just a couple pictures which I forgot I had as hidden",
    "start": "3033960",
    "end": "3040960"
  },
  {
    "text": "slides so I'll go to show those very",
    "start": "3040960",
    "end": "3048200"
  },
  {
    "text": "ni so that's my uh index finger that you see in the background there out of",
    "start": "3048640",
    "end": "3054079"
  },
  {
    "text": "focus we have ways of verifying if that's true or [Music]",
    "start": "3054079",
    "end": "3060538"
  },
  {
    "text": "not uh I'm turning off Touch ID on my iPhone now um so uh that's you know our it's a",
    "start": "3060720",
    "end": "3069240"
  },
  {
    "text": "3x4 square millimeter full full die you know it has you can kind of make out the series on the north versus our core",
    "start": "3069240",
    "end": "3075880"
  },
  {
    "text": "obviously the top metal layer uh while you know looks pretty under light uh it's uh you know not uh can't actually",
    "start": "3075880",
    "end": "3083520"
  },
  {
    "text": "see that much in terms of details but you know we have a 150 Micron bumps on",
    "start": "3083520",
    "end": "3089079"
  },
  {
    "text": "the CES and then higher bump pitches over the main course and 240 bumps total",
    "start": "3089079",
    "end": "3096200"
  },
  {
    "text": "it's not very complicated at all um although we're looking at some really cool um micro bump technology around 30",
    "start": "3096200",
    "end": "3104480"
  },
  {
    "text": "40 microns uh with you know advancement advances on tsmc 16 nimer so very",
    "start": "3104480",
    "end": "3111040"
  },
  {
    "text": "excited about that uh made this using our uh uh gds2 that we taped out with um",
    "start": "3111040",
    "end": "3118440"
  },
  {
    "text": "pretty design I'm really crossing my fingers at some point I'll you know have a couple hours to uh etch off uh some of",
    "start": "3118440",
    "end": "3126280"
  },
  {
    "text": "the upper layers to do another photo like the one before um and uh actually",
    "start": "3126280",
    "end": "3131400"
  },
  {
    "text": "try to see some of the internal circuitry and such but uh yeah that's",
    "start": "3131400",
    "end": "3137119"
  },
  {
    "text": "pretty much that um we could do a a Neo Sim demonstration we got it ready uh for",
    "start": "3137119",
    "end": "3144119"
  },
  {
    "text": "the fft That was supposed to run on the real Hardware so so you can now just see it running in in",
    "start": "3144119",
    "end": "3149839"
  },
  {
    "text": "simulation um so uh nman you want to come up cool setting up yeah so what is the",
    "start": "3149839",
    "end": "3157119"
  },
  {
    "text": "memory latency on the load so load is one Cycle One cycle and remote transfer",
    "start": "3157119",
    "end": "3163280"
  },
  {
    "text": "course one cycle per hop so um you know going all the way down",
    "start": "3163280",
    "end": "3168520"
  },
  {
    "text": "across it's a log mesh or is it just a a log or just mesh just mesh okay so uh",
    "start": "3168520",
    "end": "3175880"
  },
  {
    "text": "when we're going off chip so for the sires uh you know 1225 GB per second uh",
    "start": "3175880",
    "end": "3182640"
  },
  {
    "text": "bandwidth with the latency being four Cycles from point to point so when you go off of the um router on you know die",
    "start": "3182640",
    "end": "3191240"
  },
  {
    "text": "zero appearing on die one you're getting that's an additional four cycles and the",
    "start": "3191240",
    "end": "3196559"
  },
  {
    "text": "memory accesses are perfectly uniform no banking or anything like that um there's",
    "start": "3196559",
    "end": "3201760"
  },
  {
    "text": "there's banking but it's all aligned with so all of our memory addresses are bite aligned and you yeah so no no",
    "start": "3201760",
    "end": "3209400"
  },
  {
    "text": "variation strides or anything like that no quick question is your mesh WRA so",
    "start": "3209400",
    "end": "3218599"
  },
  {
    "text": "that it come no it's not a Taurus um would love to do that but uh next time",
    "start": "3218599",
    "end": "3225480"
  },
  {
    "text": "question one is know like parallel numerics and com to that is like a",
    "start": "3225480",
    "end": "3231720"
  },
  {
    "text": "sequential convolution and uh a good test for that is uh entropy coding for",
    "start": "3231720",
    "end": "3238000"
  },
  {
    "text": "example hman or arithmetic coding you have some numbers on the they also match",
    "start": "3238000",
    "end": "3243640"
  },
  {
    "text": "map get get a measure about you know regular programs but the most complex",
    "start": "3243640",
    "end": "3249640"
  },
  {
    "text": "convoluted are the entropy cing so we have number how many uh clocks per bin",
    "start": "3249640",
    "end": "3255440"
  },
  {
    "text": "according um I don't know specifically for for that application um so our compiler tools are still like our main",
    "start": "3255440",
    "end": "3263240"
  },
  {
    "text": "focus for the past two and a half almost 3 months has just been getting are boards working so we haven't been able",
    "start": "3263240",
    "end": "3268559"
  },
  {
    "text": "to spend the time that we're originally planning on trying to get more software to run um this fft that nman is about to",
    "start": "3268559",
    "end": "3274960"
  },
  {
    "text": "show is like the first quasi application demo that we've been able to muster and",
    "start": "3274960",
    "end": "3280559"
  },
  {
    "text": "did have running on Hardware not and now not any T sequential of computation um",
    "start": "3280559",
    "end": "3289720"
  },
  {
    "text": "do you have a better answer for that sequential code yeah I I don't know",
    "start": "3289720",
    "end": "3297000"
  },
  {
    "text": "brch intensive Cur oh yeah this one uh this is an in place FDA Al it has three",
    "start": "3297000",
    "end": "3302880"
  },
  {
    "text": "four Loops in it a lot of iterations yeah start you can just start um so yeah",
    "start": "3302880",
    "end": "3311240"
  },
  {
    "text": "we we easily use a branches basically um I'm I'm a hardware engineer myself I'm not the software engineer here but I use",
    "start": "3311240",
    "end": "3316920"
  },
  {
    "text": "the assembly wrote different codes for memory copy uh matrix multiplication and",
    "start": "3316920",
    "end": "3323039"
  },
  {
    "text": "fft and it was just um very uh B basically efficient we use the um Branch",
    "start": "3323039",
    "end": "3330200"
  },
  {
    "text": "lay slots and uh we can paralyze paraliz basically",
    "start": "3330200",
    "end": "3336079"
  },
  {
    "text": "instructions I think the question is on on serial code like compress out of the spec benchmarks that's a particularly",
    "start": "3336079",
    "end": "3342920"
  },
  {
    "text": "tough one for a vliw um you haven't looked at any of those not yet I have case in point Intel",
    "start": "3342920",
    "end": "3350319"
  },
  {
    "text": "gave up on it already and so did Nvidia I know it because I was contracted to",
    "start": "3350319",
    "end": "3356920"
  },
  {
    "text": "uh design alternate architecture so um but there is there are ways how you can",
    "start": "3356920",
    "end": "3363839"
  },
  {
    "text": "map that sequential into okay I'd like to talk to you more",
    "start": "3363839",
    "end": "3371720"
  },
  {
    "text": "about that I I actually was on the HP team that transferred itanium to Intel",
    "start": "3371720",
    "end": "3377680"
  },
  {
    "text": "and I coded decompress and got nearly six instructions per cycle you can do it but",
    "start": "3377680",
    "end": "3384280"
  },
  {
    "text": "it's hard work I got three bins per cycle that's like a so there are several",
    "start": "3384280",
    "end": "3392920"
  },
  {
    "text": "things on that but um Intel's it is in the generation six",
    "start": "3392920",
    "end": "3398720"
  },
  {
    "text": "Intel's processing but their main interest is different so maybe we can",
    "start": "3398720",
    "end": "3404920"
  },
  {
    "text": "talk on that how you caniz that approach yeah so right now in terms what naron is about to show at the simulator you know",
    "start": "3404920",
    "end": "3411839"
  },
  {
    "text": "we're able to get cycle counts for things and such but it's still a you know relatively you know very lowlevel",
    "start": "3411839",
    "end": "3418599"
  },
  {
    "text": "development environment for us so we're hoping that we'll be able to get uh um",
    "start": "3418599",
    "end": "3424920"
  },
  {
    "text": "get more real applications running once we have the hardware in a more stable",
    "start": "3424920",
    "end": "3429960"
  },
  {
    "text": "stable State um so I guess I you want I could talk",
    "start": "3429960",
    "end": "3436760"
  },
  {
    "text": "through it so um this is iast um so not very pretty at the moment but uh",
    "start": "3436760",
    "end": "3443200"
  },
  {
    "text": "functional uh so we have basic scripting interface he could technically load that",
    "start": "3443200",
    "end": "3448880"
  },
  {
    "text": "script into the thing but uh create one of our tiles yeah you can go through it",
    "start": "3448880",
    "end": "3456119"
  },
  {
    "text": "so yeah first we add it depends how many uh processor we want to how many cord we",
    "start": "3456119",
    "end": "3462000"
  },
  {
    "text": "want to run for example we have 16 uh cores in here we are just using one of them and that is a TI number zero uh in",
    "start": "3462000",
    "end": "3470280"
  },
  {
    "text": "the simulator we add the tile first and then we start initialize it uh with the",
    "start": "3470280",
    "end": "3476880"
  },
  {
    "text": "code that we have like we set the program counter to zero and some other",
    "start": "3476880",
    "end": "3483079"
  },
  {
    "text": "um like operations like rounding we set the rounding type and those kind of stuff",
    "start": "3483079",
    "end": "3488920"
  },
  {
    "text": "for the fing Point uh after the reset we this with this command we load the",
    "start": "3488920",
    "end": "3494319"
  },
  {
    "text": "assembly code that I have written before for example this is an assembly code for",
    "start": "3494319",
    "end": "3500440"
  },
  {
    "text": "fft it's not optimized at all and uh it's basically it was written in two",
    "start": "3500440",
    "end": "3506799"
  },
  {
    "text": "days ago and not at all and basically but uh we also had a power",
    "start": "3506799",
    "end": "3513599"
  },
  {
    "text": "outage basically uh well we work on this on this more later but this just for a demo",
    "start": "3513760",
    "end": "3520440"
  },
  {
    "text": "that we can uh show that we can do this fft on our core and uh so we have the",
    "start": "3520440",
    "end": "3525799"
  },
  {
    "text": "assembly have the TW factors for the fft needed and I have the inputs for the the",
    "start": "3525799",
    "end": "3533160"
  },
  {
    "text": "uh F 1224 uh 14 14. double verion values",
    "start": "3533160",
    "end": "3540400"
  },
  {
    "text": "so if you go to the script uh after the loading",
    "start": "3540400",
    "end": "3546960"
  },
  {
    "text": "uh okay so yeah uh after we load the program",
    "start": "3560319",
    "end": "3566920"
  },
  {
    "text": "into the uh basically this simulation environment we it takes um for this one",
    "start": "3566920",
    "end": "3573520"
  },
  {
    "text": "actually it takes about 100 Cycles to uh load more than more than 100 Cycles we",
    "start": "3573520",
    "end": "3578920"
  },
  {
    "text": "load it into the memory to the uh basically tile and then after that we",
    "start": "3578920",
    "end": "3584400"
  },
  {
    "text": "start the execution of the code so what I can show you I usually just copy and paste the whole thing so basically what",
    "start": "3584400",
    "end": "3590480"
  },
  {
    "text": "we do here um it will uh by to this point it will will initialize the",
    "start": "3590480",
    "end": "3597119"
  },
  {
    "text": "scratch pad or our memory for example um I can show that I have loaded the X",
    "start": "3597119",
    "end": "3604240"
  },
  {
    "text": "values into the bank number four starting address zero I can show maximum",
    "start": "3604240",
    "end": "3609839"
  },
  {
    "text": "for now um okay I I can show it goes up to eight I can show five of them so you can",
    "start": "3609839",
    "end": "3617160"
  },
  {
    "text": "see the X values in this uh basically memory addresses these are the W uh",
    "start": "3617160",
    "end": "3623000"
  },
  {
    "text": "Point uh I format and then so now we can see the scratch P memory values so what",
    "start": "3623000",
    "end": "3630520"
  },
  {
    "text": "I did uh last night after running the fft I can compareed the output values in",
    "start": "3630520",
    "end": "3635760"
  },
  {
    "text": "the scratch pad with what we expect and they were correct so the fft was working but uh uh to see how the and so this",
    "start": "3635760",
    "end": "3643839"
  },
  {
    "text": "this uh basically uh column shows the scratchpad values which is our memory this one we",
    "start": "3643839",
    "end": "3650000"
  },
  {
    "text": "can see the register uh file values and the our CSR registers which are which",
    "start": "3650000",
    "end": "3656000"
  },
  {
    "text": "used to program the core and then these are the grf and F frf basically general",
    "start": "3656000",
    "end": "3661079"
  },
  {
    "text": "purpose register file and floating Point register file right so I can actually",
    "start": "3661079",
    "end": "3666319"
  },
  {
    "text": "start uh this is cycle accurate if I say step 10 basically it will do 10",
    "start": "3666319",
    "end": "3674319"
  },
  {
    "text": "execution of 10 instructions and CES 10 cycles and then basically whatever",
    "start": "3674319",
    "end": "3679559"
  },
  {
    "text": "changes the simulator uh basically shows it in a different color and this one",
    "start": "3679559",
    "end": "3685119"
  },
  {
    "text": "this plus one increments the by one cycle basically and uh well this fft takes uh",
    "start": "3685119",
    "end": "3695520"
  },
  {
    "text": "a few 100,000 cycles for example if I do 100,000 step",
    "start": "3695520",
    "end": "3701720"
  },
  {
    "text": "it takes a little bit time and then the Neo Sim console open oh yes on the",
    "start": "3701720",
    "end": "3709880"
  },
  {
    "text": "back this one um",
    "start": "3709880",
    "end": "3716440"
  },
  {
    "text": "yeah so this is scrolling the wrong direction okay so",
    "start": "3717880",
    "end": "3725480"
  },
  {
    "text": "for example we did U what 100,000 steps and uh so it was running at 377 khz and",
    "start": "3725480",
    "end": "3733240"
  },
  {
    "text": "still that's you know 10x faster than uh um this this is running on Intel Zeon",
    "start": "3733240",
    "end": "3739200"
  },
  {
    "text": "you know 2 GHz compared to the 4 GHz uh that I mentioned before but still much faster than regular RTL simulation but",
    "start": "3739200",
    "end": "3746279"
  },
  {
    "text": "still fully cycle accurate um I guess one other thing I want to point out that this console that's being showed here is",
    "start": "3746279",
    "end": "3753079"
  },
  {
    "text": "the server for the uh actual simulator so this um icast guey is able to connect",
    "start": "3753079",
    "end": "3760920"
  },
  {
    "text": "to a external server um in this case it's just running on the same machine but one of the things that we want to",
    "start": "3760920",
    "end": "3767200"
  },
  {
    "text": "enable is have a um simulator instances running up on you know an external",
    "start": "3767200",
    "end": "3772400"
  },
  {
    "text": "server that has a bunch of cores relatively fast but uh be able to have the actual client um running on any sort",
    "start": "3772400",
    "end": "3778599"
  },
  {
    "text": "of device so you have a very uh um you know can have development tools running anywhere so",
    "start": "3778599",
    "end": "3785480"
  },
  {
    "text": "continue so um I can just jump to the basically end of the simulation um maybe",
    "start": "3785480",
    "end": "3791839"
  },
  {
    "text": "I go 200,000 more cycles and um it's going to finish soon",
    "start": "3791839",
    "end": "3802680"
  },
  {
    "text": "okay yeah so when I add any cycle so we don't see any change in the grf and FF",
    "start": "3816279",
    "end": "3822119"
  },
  {
    "text": "values meaning the execution is done and then at the end we have a for Loop just stay just to keep the count uh",
    "start": "3822119",
    "end": "3829039"
  },
  {
    "text": "programming counter basically not going to the beginning of the program and uh when it's done we can see the final",
    "start": "3829039",
    "end": "3836920"
  },
  {
    "text": "values in the scratch pad and that's how I compare the values with the expected values and they're correct and we have",
    "start": "3836920",
    "end": "3844119"
  },
  {
    "text": "added uh a few functions just in in the last two days we don't have to see the",
    "start": "3844119",
    "end": "3850720"
  },
  {
    "text": "values in HEX now we can show the the values in decimal and uh basically it will be easier to interpret them um",
    "start": "3850720",
    "end": "3859760"
  },
  {
    "text": "that's basically it thanks so um that's the the basics of",
    "start": "3859760",
    "end": "3866440"
  },
  {
    "text": "the icast tool there's you know our assembler and so like the assembly file",
    "start": "3866440",
    "end": "3872200"
  },
  {
    "text": "you saw there um the the actual machine code",
    "start": "3872200",
    "end": "3877520"
  },
  {
    "text": "obviously that's being generated by lvm um currently with just a very basic set of optimization passes um but uh the the",
    "start": "3877520",
    "end": "3886200"
  },
  {
    "text": "actually taking from code um probably take me a couple minutes to find it but uh we do have so",
    "start": "3886200",
    "end": "3893760"
  },
  {
    "text": "there's no there's no opset the latency that you're waiting for the result yeah so this is really just not not optimized",
    "start": "3893760",
    "end": "3900079"
  },
  {
    "text": "at all but yeah since it's pipelined we're just waiting for for that the there's a couple of examples in here",
    "start": "3900079",
    "end": "3906440"
  },
  {
    "text": "where you're having multiple instructions on a single line but like for example",
    "start": "3906440",
    "end": "3912880"
  },
  {
    "text": "the all all of these uh like this oh here so this has two instructions",
    "start": "3912880",
    "end": "3920960"
  },
  {
    "text": "together but um there's multiple cases here like with ads like these this ad",
    "start": "3920960",
    "end": "3926200"
  },
  {
    "text": "could have been done up in another spot but yeah so so integer ad is four Cycles",
    "start": "3926200",
    "end": "3931880"
  },
  {
    "text": "what I'm seeing there um so yeah to get to get correct to get through the full pipeline till it's back in the the R st",
    "start": "3931880",
    "end": "3939039"
  },
  {
    "text": "but you can issue a new one every cycle yeah the only things that are not",
    "start": "3939039",
    "end": "3945559"
  },
  {
    "text": "pipeline are the the integer divide that's you have to wait 60 67 Cycles for",
    "start": "3945559",
    "end": "3951839"
  },
  {
    "text": "but uh uh three",
    "start": "3951839",
    "end": "3957160"
  },
  {
    "text": "so the integer divide is 67 but our floating point is only",
    "start": "3958520",
    "end": "3963680"
  },
  {
    "text": "20 20 23 26 but but you can issue a new",
    "start": "3963680",
    "end": "3969200"
  },
  {
    "text": "floating Point divide every 14 huh 12",
    "start": "3969200",
    "end": "3975720"
  },
  {
    "text": "okay just I could hear are you using SRP divides or is it just subtracts and um",
    "start": "3976680",
    "end": "3986119"
  },
  {
    "text": "for so the so the addition or so so the AL divide is is what you call like Grade",
    "start": "3986119",
    "end": "3992920"
  },
  {
    "text": "School Division long division the floating Point Unit I do we figure out",
    "start": "3992920",
    "end": "3998760"
  },
  {
    "text": "what they use so the the the floating Point Unit is Berkeley hard flow so yeah one oh one",
    "start": "3998760",
    "end": "4005440"
  },
  {
    "text": "things I think they use or do they no you're only en",
    "start": "4005440",
    "end": "4010640"
  },
  {
    "text": "Coachman it's not self correct it is Newton it's Newton and correctly rounded",
    "start": "4010640",
    "end": "4016119"
  },
  {
    "text": "um I believe you were the one that verified it verified against whatever",
    "start": "4016119",
    "end": "4022640"
  },
  {
    "text": "I've got I got patents on Division and so I'm I'm the expert on this maybe",
    "start": "4022640",
    "end": "4028039"
  },
  {
    "text": "we'll talk you can you can if you do a floating Point GM you can check at the",
    "start": "4028039",
    "end": "4033680"
  },
  {
    "text": "end and figure out gmid isn't self-correcting so you have to use full Precision all the time you way to see",
    "start": "4033680",
    "end": "4040559"
  },
  {
    "text": "the uh information like in the pipeline yeah um so that's schic view which it's",
    "start": "4040559",
    "end": "4045880"
  },
  {
    "text": "not working at the moment so if we didn't have the power outage we would so just to calculate",
    "start": "4045880",
    "end": "4053279"
  },
  {
    "text": "something like a plus b plus C if I'm understanding correctly that's four five Cycles because you can't use the output",
    "start": "4053279",
    "end": "4059400"
  },
  {
    "text": "of the a first a plus b until for cyle later uh yes correct so I I think",
    "start": "4059400",
    "end": "4066039"
  },
  {
    "text": "there's an so that just for for integer Edition correct I'm addition",
    "start": "4066039",
    "end": "4073160"
  },
  {
    "text": "addition so so mix test could be a very common one in video CeX is 8 by8 uh 2D",
    "start": "4073160",
    "end": "4081119"
  },
  {
    "text": "transform cosine it doesn't have the sign part just the question um how many clocks would that",
    "start": "4081119",
    "end": "4088839"
  },
  {
    "text": "be it's a 8 point uh 2D 8 by8 transform DC cosign transform um we haven't run",
    "start": "4088839",
    "end": "4096920"
  },
  {
    "text": "coign yet this is all questions for Paul who thought it was better to be programming than to come to a talk I see",
    "start": "4096920",
    "end": "4104238"
  },
  {
    "text": "because you know those like mentioned six clocks per bit decode",
    "start": "4104239",
    "end": "4112520"
  },
  {
    "text": "you know number or the one I proposing I have solution three bins per clock which",
    "start": "4112520",
    "end": "4119359"
  },
  {
    "text": "is like order faster and then is the cosign transform which is these are very practical used ones so a comparison you",
    "start": "4119359",
    "end": "4126400"
  },
  {
    "text": "have to compare against is like 12 clocks for 1 8 by8 2D transport so if",
    "start": "4126400",
    "end": "4134278"
  },
  {
    "text": "you can read that then you're better than inter otherwise it's a you know confusion a little bit well I'd like to",
    "start": "4134279",
    "end": "4140560"
  },
  {
    "text": "sit down and talk a bit more I think I could show you some of our um isai documentation that would probably answer",
    "start": "4140560",
    "end": "4147040"
  },
  {
    "text": "that question better they actually use the uh coine transform because it has fewer U",
    "start": "4147040",
    "end": "4154560"
  },
  {
    "text": "floating Point multiplies at the expense of additional integer multiplies and it was designed at a time when the ratio of",
    "start": "4154560",
    "end": "4162000"
  },
  {
    "text": "those two operations was different and I've argued they should just be using a full fft and it will on a machine that",
    "start": "4162000",
    "end": "4168520"
  },
  {
    "text": "optimized for floating point it will run faster but they still use the cosine transform in I was one of the persons",
    "start": "4168520",
    "end": "4174920"
  },
  {
    "text": "who decided on going the coign B and it was the right decision when it was made",
    "start": "4174920",
    "end": "4180080"
  },
  {
    "text": "it was not the right decision now now it has gone to integer transform",
    "start": "4180080",
    "end": "4186040"
  },
  {
    "text": "right so it stays um integers",
    "start": "4186040",
    "end": "4191199"
  },
  {
    "text": "and just to be clear some of these algorithms you're not writing one single cor you're running on six",
    "start": "4191199",
    "end": "4197800"
  },
  {
    "text": "four tremendous Paris compared to four yeah and I guess compare like one",
    "start": "4197800",
    "end": "4205320"
  },
  {
    "text": "of the things that we have to also look at is just what sort of instruction bundles we can actually put together for",
    "start": "4205320",
    "end": "4211440"
  },
  {
    "text": "for some of these things so so the the that you were going to demonstrate",
    "start": "4211440",
    "end": "4218880"
  },
  {
    "text": "didn't that was actually using the spread across yeah but yes this one was just on",
    "start": "4218880",
    "end": "4225920"
  },
  {
    "text": "one this one was just on one the simulator was on one the one that actually Hardware was yeah that's when",
    "start": "4225920",
    "end": "4233400"
  },
  {
    "text": "you're kind of benchmarking yeah that's fair John could you talk a little bit about your business model or your your",
    "start": "4233400",
    "end": "4241560"
  },
  {
    "text": "plans how you plan to introduce this to the world are you going to become a chip",
    "start": "4241560",
    "end": "4247840"
  },
  {
    "text": "vendor or a board level product vendor or a system level product vendor or an IP licensor or what do you expect to do",
    "start": "4247840",
    "end": "4254199"
  },
  {
    "text": "cloud service uh anything but Bitcoin but",
    "start": "4254199",
    "end": "4262120"
  },
  {
    "text": "um yeah uh so we're mainly looking at being an actual just fabulous semi U you",
    "start": "4262120",
    "end": "4267520"
  },
  {
    "text": "know chip vendor uh the the whole the main goal in having this development board is uh part proof of concept part",
    "start": "4267520",
    "end": "4275520"
  },
  {
    "text": "being able to you know with the fpga we can hook up this to either PC and kind",
    "start": "4275520",
    "end": "4281600"
  },
  {
    "text": "of have a co-processor sort of demonstration or even better have it connected to a radio antenna",
    "start": "4281600",
    "end": "4288000"
  },
  {
    "text": "stack and with that we can have uh one fpg on this side that uh you",
    "start": "4288000",
    "end": "4294080"
  },
  {
    "text": "know can be running a soft core or something running Linux and uh you've got 100 gbit ethernet in do a whole",
    "start": "4294080",
    "end": "4300400"
  },
  {
    "text": "bunch of stuff uh sending data over to our uh say having four of our chips so",
    "start": "4300400",
    "end": "4305880"
  },
  {
    "text": "64 cores total going across here and then another fpga on this side that has the actual like LTE radio antennas and",
    "start": "4305880",
    "end": "4313560"
  },
  {
    "text": "we could be doing full digital um uh software defined radio on our chip um",
    "start": "4313560",
    "end": "4319760"
  },
  {
    "text": "significantly lower power than than anything else out there so like this 1024 point fft you know not optimized",
    "start": "4319760",
    "end": "4326280"
  },
  {
    "text": "and missing a lot of pieces but uh um in terms of the the gigaflops number for that and the efficiency for that is very",
    "start": "4326280",
    "end": "4334040"
  },
  {
    "text": "comparable to wanting to do an LTE stack um so we're you know beating the as6 and",
    "start": "4334040",
    "end": "4340239"
  },
  {
    "text": "DSP is doing that right now with a you know fairly hack together chip so the",
    "start": "4340239",
    "end": "4346280"
  },
  {
    "text": "business model is that perhaps someday I'll be able to send you a purchase order and you'll send me back a box of",
    "start": "4346280",
    "end": "4351320"
  },
  {
    "text": "packaged discreet chips that I saw dur in uh yes so mostly it would be for you know oems so we want to be working with",
    "start": "4351320",
    "end": "4358679"
  },
  {
    "text": "the ericon nokas ETC of the world for putting these into uh uh the boxes for",
    "start": "4358679",
    "end": "4364520"
  },
  {
    "text": "that what is the current state of the chip architecture documentation the instruction set the uh instruction en",
    "start": "4364520",
    "end": "4370880"
  },
  {
    "text": "codings that sort of stuff so if we can switch to the other computer I forgot I wanted to show",
    "start": "4370880",
    "end": "4378800"
  },
  {
    "text": "that so we have both a web- based and a um pdf version of the ISA documentation",
    "start": "4389840",
    "end": "4397120"
  },
  {
    "text": "so the goal is to try to get this out next month um we want to be able to publish this on the website and shortly",
    "start": "4397120",
    "end": "4402560"
  },
  {
    "text": "after have a um some version of the simulator tools available but uh it's uh",
    "start": "4402560",
    "end": "4408600"
  },
  {
    "text": "currently partially autogenerated and we're throwing in a bunch of uh documentation with that to you know",
    "start": "4408600",
    "end": "4414800"
  },
  {
    "text": "actually inform on the the precepts of the architecture but the the main goal is we want to have C support to go along",
    "start": "4414800",
    "end": "4421080"
  },
  {
    "text": "with this sort of release so there are plenty of people that are going to want to look at the uh the ISA and the actual",
    "start": "4421080",
    "end": "4427320"
  },
  {
    "text": "assembly toy around with that a bit and we want to give the tools like the with like icast to be able to so you can",
    "start": "4427320",
    "end": "4433760"
  },
  {
    "text": "really make optimized great uh assembly but uh um for most people you're going",
    "start": "4433760",
    "end": "4439480"
  },
  {
    "text": "to want to write in see or some other LM front end language to you getting your documentation so it's intelligible to",
    "start": "4439480",
    "end": "4446719"
  },
  {
    "text": "others are there non-disclosure issues will that be thrown into the public domain not not public domain but that'll",
    "start": "4446719",
    "end": "4452199"
  },
  {
    "text": "be available to anyone that's interested it's not going to be public domain or open source so we do have uh some",
    "start": "4452199",
    "end": "4458400"
  },
  {
    "text": "patents related to the particulars of our instruction set I Wasing wrong term I'm just saying not under on NDA yeah we",
    "start": "4458400",
    "end": "4464600"
  },
  {
    "text": "we want give as much documentation just out to the public um obviously we're we're keeping rights you know when it",
    "start": "4464600",
    "end": "4470320"
  },
  {
    "text": "comes to actually producing chips with the instructions set Etc but in terms of all the csrs exactly you know how you",
    "start": "4470320",
    "end": "4476520"
  },
  {
    "text": "can tweak and do everything possible we want to be as open as as we can so if there's no floating Point",
    "start": "4476520",
    "end": "4484440"
  },
  {
    "text": "operations um those slots are just left empty or can you put integer in",
    "start": "4484440",
    "end": "4490199"
  },
  {
    "text": "them um so here's taking look at the ISA a bit um so",
    "start": "4490199",
    "end": "4496239"
  },
  {
    "text": "um so you're saying for this whole slot here yeah just I'm just doing purely integer computation so those would all",
    "start": "4496239",
    "end": "4503400"
  },
  {
    "text": "just be zeros um in the future we've been thinking about some ways to be able to to repurpose some of that one of the",
    "start": "4503400",
    "end": "4510199"
  },
  {
    "text": "surprises on the Intel um was more interested in scaler code than than high",
    "start": "4510199",
    "end": "4515600"
  },
  {
    "text": "performance Computing and so they insisted that they have different instruction formats both with floating",
    "start": "4515600",
    "end": "4522280"
  },
  {
    "text": "point and they added additional integer functional units so that they could keep the slots busy um and that was one of",
    "start": "4522280",
    "end": "4529639"
  },
  {
    "text": "the the changes that came from the HP version to the in yeah one of the things I'm going to",
    "start": "4529639",
    "end": "4535320"
  },
  {
    "text": "be working is refactoring this uh this spreadsheet sort of thing um to be a bit",
    "start": "4535320",
    "end": "4540600"
  },
  {
    "text": "more readable usable but like there are some really powerful things you can do to really optimize like if you want to",
    "start": "4540600",
    "end": "4546400"
  },
  {
    "text": "do a fuse multiply ad up here and uh you need to have this third operan register",
    "start": "4546400",
    "end": "4551600"
  },
  {
    "text": "but you also want to be doing a uh um you know post modify a 128bit double",
    "start": "4551600",
    "end": "4557560"
  },
  {
    "text": "word and do that on on both units Etc well it may look like oh these overl lap",
    "start": "4557560",
    "end": "4563520"
  },
  {
    "text": "you have you can't use this instruction this instruction in reality you could just have the same register number this",
    "start": "4563520",
    "end": "4568960"
  },
  {
    "text": "is using floating Point register that may be using different one Etc you might be able to dual purpose the floating",
    "start": "4568960",
    "end": "4575000"
  },
  {
    "text": "Point functioning unit to do integer Ops yeah so that that won't be able to be done with this silicon but uh in the",
    "start": "4575000",
    "end": "4580719"
  },
  {
    "text": "future yeah there there's a lot uh to be uh uh",
    "start": "4580719",
    "end": "4587280"
  },
  {
    "text": "learned in terms of exactly what packets of instructions using the full 64 bits",
    "start": "4587280",
    "end": "4593199"
  },
  {
    "text": "to its maximal maximum potential um but the the basic the basics of the the",
    "start": "4593199",
    "end": "4599360"
  },
  {
    "text": "architecture the ISA Etc like all of our instructions fit on you know a single page you can look at this print it out",
    "start": "4599360",
    "end": "4606040"
  },
  {
    "text": "and you know get a good idea and uh in terms of the full Isa documentation I think you can get a very good idea in a",
    "start": "4606040",
    "end": "4612719"
  },
  {
    "text": "couple hours to uh you know maybe an afternoon of uh looking at our documentation in about a",
    "start": "4612719",
    "end": "4620199"
  },
  {
    "text": "month full disclosure I've had the occasion to chat with you several times",
    "start": "4624239",
    "end": "4629400"
  },
  {
    "text": "through the last couple years and I don't claim to understand the your architecture issues but I've been",
    "start": "4629400",
    "end": "4636199"
  },
  {
    "text": "surprised at how well you seem to understand a lot of different architectures from a lot of different",
    "start": "4636199",
    "end": "4641760"
  },
  {
    "text": "vendors going back decades and I've got a 40-year head start on you and",
    "start": "4641760",
    "end": "4649239"
  },
  {
    "text": "you know a lot of this these products better than I do so I I'm wondering what got you interested in this field of",
    "start": "4649239",
    "end": "4655199"
  },
  {
    "text": "architecture how long you've been trying to study all of these competing products",
    "start": "4655199",
    "end": "4660560"
  },
  {
    "text": "what you know what how you managed to learn things from them just how intimately familiar are you with using",
    "start": "4660560",
    "end": "4665639"
  },
  {
    "text": "all of these things that you've alluded to you had uh itanium and x86 and some",
    "start": "4665639",
    "end": "4671520"
  },
  {
    "text": "other architectures up there I've used most things that uh um have exist like most common things",
    "start": "4671520",
    "end": "4678440"
  },
  {
    "text": "that have existed in the past 20 years or so so my lifetime I guess Alpha and and after but uh um like",
    "start": "4678440",
    "end": "4688360"
  },
  {
    "text": "a lot of the floating point system designs multiflow etc etc that I we've taken a lot of architectural inspiration",
    "start": "4688360",
    "end": "4694239"
  },
  {
    "text": "from um uh CDC everything back to the CDC 6600 um I'm a huge fan of and you",
    "start": "4694239",
    "end": "4702320"
  },
  {
    "text": "know love but um sadly not gotten the chance to use them and in terms of",
    "start": "4702320",
    "end": "4707520"
  },
  {
    "text": "emulators and such I like if I had free time or something that's something that I would love to do because of uh uh but",
    "start": "4707520",
    "end": "4715120"
  },
  {
    "text": "in terms of actually being able to create those emulators since I haven't looked deeply but um they don't the few",
    "start": "4715120",
    "end": "4721280"
  },
  {
    "text": "that I've seen don't seem to be that great but um in in a general sense just to say how I got interested in all this",
    "start": "4721280",
    "end": "4727080"
  },
  {
    "text": "um I started getting more interesting deeper uh aspects of you",
    "start": "4727080",
    "end": "4733360"
  },
  {
    "text": "know computer science when I was 13 and I just always had to know why something",
    "start": "4733360",
    "end": "4739560"
  },
  {
    "text": "like not just the how how something works but why that developed you know the whole reason re Rex exists and we",
    "start": "4739560",
    "end": "4745639"
  },
  {
    "text": "went in this direction was not just AC the fact that I could not just accept",
    "start": "4745639",
    "end": "4750760"
  },
  {
    "text": "that the way something is done is the only way it can be done and that it is necessarily the right way",
    "start": "4750760",
    "end": "4757440"
  },
  {
    "text": "so that's for I uh haven't seen anything about any",
    "start": "4757440",
    "end": "4763120"
  },
  {
    "text": "kind of privileged mode or the kinds of things that Fone around and uh most of the big CPUs that are fting around these",
    "start": "4763120",
    "end": "4770000"
  },
  {
    "text": "days yeah so go go ahead I think you're going to answer my question okay um so there is",
    "start": "4770000",
    "end": "4776760"
  },
  {
    "text": "no privilege mode or anything we are looking at having a bit of uh memory",
    "start": "4776760",
    "end": "4781880"
  },
  {
    "text": "protection options but at a very it's more like address um protection like",
    "start": "4781880",
    "end": "4787080"
  },
  {
    "text": "ranging at the network on chip level in the future there's a lot of things uh that we can do in terms of being able to",
    "start": "4787080",
    "end": "4794239"
  },
  {
    "text": "um uh say restrict access to certain portions of the network and give a lot",
    "start": "4794239",
    "end": "4799480"
  },
  {
    "text": "of these the you know not just the level of hard real-time guarantees for latency but saying there's no way no chance at",
    "start": "4799480",
    "end": "4806120"
  },
  {
    "text": "all that you know stuff can get passed around certain things so that's not in the Silicon but uh we've already been",
    "start": "4806120",
    "end": "4813159"
  },
  {
    "text": "toying around with things for the future there applications where it's not",
    "start": "4813159",
    "end": "4819440"
  },
  {
    "text": "needed um between U using a VW and reference it and scratch that memory and",
    "start": "4819800",
    "end": "4827880"
  },
  {
    "text": "Branch delay slots it seems like you've got a really big compil problem on your",
    "start": "4827880",
    "end": "4834080"
  },
  {
    "text": "hands yeah and 30 plus years of DW experience has come up with much better",
    "start": "4834080",
    "end": "4841320"
  },
  {
    "text": "super scaler compilers um so I think the thing that's just never actually been done and or the",
    "start": "4841320",
    "end": "4848440"
  },
  {
    "text": "very Le done well um is the fact that there's not been an architecture that gives memory guarantees at at the level",
    "start": "4848440",
    "end": "4854280"
  },
  {
    "text": "that we do and the problem I've just looked at time and time again is that if you cannot",
    "start": "4854280",
    "end": "4860560"
  },
  {
    "text": "say be it because of some particular aity of network on chip or because of uh",
    "start": "4860560",
    "end": "4866360"
  },
  {
    "text": "um you know where you are in the pipeline what instructions you executed whatever if you can't say when you can",
    "start": "4866360",
    "end": "4873120"
  },
  {
    "text": "use data or where it will be somewhere else to be used there's no way a compiler can can actually figure things",
    "start": "4873120",
    "end": "4879600"
  },
  {
    "text": "out um and it yeah in in our case um we're able to",
    "start": "4879600",
    "end": "4887120"
  },
  {
    "text": "leverage a lot of the basic stuff just from the open source Community there's been tens hundreds of millions of",
    "start": "4887120",
    "end": "4892159"
  },
  {
    "text": "dollars invested into lovm and the things surrounding it by Google Facebook Apple Etc um and uh we've been able to",
    "start": "4892159",
    "end": "4900320"
  },
  {
    "text": "leverage a lot of that up to now um to just get basic support working and the",
    "start": "4900320",
    "end": "4906120"
  },
  {
    "text": "the you know relatively simple optimization passes the future parts are actually going you know are difficult in",
    "start": "4906120",
    "end": "4913560"
  },
  {
    "text": "terms of being able to to do this that there's you know we don't have a tools that exist for C",
    "start": "4913560",
    "end": "4920239"
  },
  {
    "text": "memories now AR um so you can utilize our scratch",
    "start": "4920239",
    "end": "4925320"
  },
  {
    "text": "pads like a cache in term like a similar way it's just without without",
    "start": "4925320",
    "end": "4932800"
  },
  {
    "text": "without without the the functionality of automatic like the hardware trying to make it guess um but in that sense we're",
    "start": "4932800",
    "end": "4939320"
  },
  {
    "text": "also never going to have a cach this doesn't like",
    "start": "4939320",
    "end": "4945120"
  },
  {
    "text": "having a hit but you're not having so I think you're going end up with something that's really",
    "start": "4945120",
    "end": "4950760"
  },
  {
    "text": "fast certain benchmarks and it's going to be painful on general purpose um well",
    "start": "4950760",
    "end": "4957199"
  },
  {
    "text": "we're not running Windows on it that's that's one of the",
    "start": "4957199",
    "end": "4962079"
  },
  {
    "text": "things but uh not running Windows and uh I think for most of the applications",
    "start": "4962960",
    "end": "4968679"
  },
  {
    "text": "we're looking at you know the ones that we've already made small demos for are things DSP like test which have been the",
    "start": "4968679",
    "end": "4975880"
  },
  {
    "text": "the things that have continued to be vliw through the the scary thing for me a little bit has been TI is now trending",
    "start": "4975880",
    "end": "4981639"
  },
  {
    "text": "to actually using real Hardware managed caches and their efficiency numbers have actually gone down with the past uh with",
    "start": "4981639",
    "end": "4987960"
  },
  {
    "text": "the newest generation versus older ones but so Paul's gonna kill me if for getting this wrong but I my",
    "start": "4987960",
    "end": "4994199"
  },
  {
    "text": "understanding is that is that basically the huge thing is is the determinism right you know when something is going",
    "start": "4994199",
    "end": "5000239"
  },
  {
    "text": "to happen and effectively this is a um this is this optimization problem has",
    "start": "5000239",
    "end": "5005520"
  },
  {
    "text": "fairly you know good Solutions in good like you know algorithms to find a",
    "start": "5005520",
    "end": "5011920"
  },
  {
    "text": "reasonable solution even if it's not necessarily the most optimal the hard part is the if test where the latencies",
    "start": "5011920",
    "end": "5017840"
  },
  {
    "text": "on the two branches are different because you don't know it run at compile time which branch you're going to",
    "start": "5017840",
    "end": "5023480"
  },
  {
    "text": "take or or you can turn the problem backwards you can say Okay given any M",
    "start": "5023480",
    "end": "5028679"
  },
  {
    "text": "of cod what is the most complex can it get and the answer is there in nature",
    "start": "5028679",
    "end": "5035280"
  },
  {
    "text": "already it is in video coding the images they already when you're trying to compress that you that's what you're",
    "start": "5035280",
    "end": "5042199"
  },
  {
    "text": "looking for how much you could build on the previous thing so if you build a leure backwards to deal with entropy",
    "start": "5042199",
    "end": "5048280"
  },
  {
    "text": "coding then you solve that video High spe coding problem and you can throw",
    "start": "5048280",
    "end": "5054360"
  },
  {
    "text": "windows in there easily you",
    "start": "5054360",
    "end": "5059239"
  },
  {
    "text": "want kind of relates to both of your points about um the AR architecture",
    "start": "5059960",
    "end": "5065280"
  },
  {
    "text": "maybe not being suited for certain tasks specifically things that are very serial and not you know Tri parall can you",
    "start": "5065280",
    "end": "5072600"
  },
  {
    "text": "speak a little bit to because the architecture that you guys described is is mimy and and not can you speak a",
    "start": "5072600",
    "end": "5080000"
  },
  {
    "text": "little bit to the advantages if you're going to kind of compare this to let's say an Invidia GPU where you have SD and",
    "start": "5080000",
    "end": "5086880"
  },
  {
    "text": "and yours maybe for example for uh I know the advantage that you get um let's",
    "start": "5086880",
    "end": "5092639"
  },
  {
    "text": "say for lighting neural networks um yeah so the the real point",
    "start": "5092639",
    "end": "5099760"
  },
  {
    "text": "of when you have a MD architecture is just that you can exploit task level parallelism that gpus simply cannot do",
    "start": "5099760",
    "end": "5106679"
  },
  {
    "text": "um or you know Nvidia gpus with the you know the the current cre deore and SMX",
    "start": "5106679",
    "end": "5113080"
  },
  {
    "text": "unit Etc architecture um so uh yeah that's much longer question than the",
    "start": "5113080",
    "end": "5120360"
  },
  {
    "text": "minute that I've got left um so so at a",
    "start": "5120360",
    "end": "5126360"
  },
  {
    "text": "very okay at a very high level I would say that the the biggest thing is just that compared to you know s simd",
    "start": "5126360",
    "end": "5133840"
  },
  {
    "text": "architecture where you have 192 Cuda cores for each unit that uh are all restricted doing the exact same",
    "start": "5133840",
    "end": "5139719"
  },
  {
    "text": "instruction simultaneously each one of our cores have four execution units all",
    "start": "5139719",
    "end": "5144760"
  },
  {
    "text": "that can be doing simultaneous work and then we have n number of cores on a chip that can all be doing completely",
    "start": "5144760",
    "end": "5150280"
  },
  {
    "text": "independent tasks um the pipelining aspect either you know in the case with",
    "start": "5150280",
    "end": "5155480"
  },
  {
    "text": "our test trip we have two series or in the future having multiple series on covering all of the corners you could do",
    "start": "5155480",
    "end": "5161960"
  },
  {
    "text": "cool data flow or systolic array type things where you have big input data streams coming on one side and you're",
    "start": "5161960",
    "end": "5168360"
  },
  {
    "text": "pushing across or uh you know there's plenty of different models which you could take either having a group cluster",
    "start": "5168360",
    "end": "5174360"
  },
  {
    "text": "of cores um operating and passing data together um you know where they actually",
    "start": "5174360",
    "end": "5179520"
  },
  {
    "text": "are using you know the the problem size that you actually have the the data",
    "start": "5179520",
    "end": "5184719"
  },
  {
    "text": "isn't is too large for a single core scratch Pad you figure that it's actually worth taking latency penalty to",
    "start": "5184719",
    "end": "5191639"
  },
  {
    "text": "you know having to move and you know either a square or a a row of a of um U",
    "start": "5191639",
    "end": "5198560"
  },
  {
    "text": "of of SC of uh excuse me course and so uh yeah that it's very application",
    "start": "5198560",
    "end": "5204840"
  },
  {
    "text": "dependent specifically on machine learning that you said um you I've had a",
    "start": "5204840",
    "end": "5210040"
  },
  {
    "text": "lot of people say that is your architecture neural inspired or something and and I would say no to that",
    "start": "5210040",
    "end": "5216320"
  },
  {
    "text": "but uh the way that you know you do convolutional neural networks with you know big giant Matrix dense matrices and",
    "start": "5216320",
    "end": "5223360"
  },
  {
    "text": "do matrix multiplication like that yeah you can do that on architecture um I",
    "start": "5223360",
    "end": "5228400"
  },
  {
    "text": "would say it's almost certain it's certainly more efficient than what you're going to get with a uh Nvidia GPU",
    "start": "5228400",
    "end": "5234800"
  },
  {
    "text": "um but uh performance- wise SMD architecture can do really dense uh",
    "start": "5234800",
    "end": "5240360"
  },
  {
    "text": "large matrices pretty darn fast B similar is BIC main issue is just the",
    "start": "5240360",
    "end": "5248320"
  },
  {
    "text": "back propagation so it's like backwards fft where you're sending all those I I",
    "start": "5248320",
    "end": "5253800"
  },
  {
    "text": "would say the training aspect gpus would have you know the performance Advantage",
    "start": "5253800",
    "end": "5259000"
  },
  {
    "text": "the kind of like um uh the excuse me for the word the the actual um running of a",
    "start": "5259000",
    "end": "5266679"
  },
  {
    "text": "trained neural net afterwards um would be something that I think we would be able to do very well because you know",
    "start": "5266679",
    "end": "5272199"
  },
  {
    "text": "you can have a group of cores dedicated to that while uh um you know other cores could",
    "start": "5272199",
    "end": "5277880"
  },
  {
    "text": "be running different parts of your overall application since that probably isn't the only thing that you want your",
    "start": "5277880",
    "end": "5283480"
  },
  {
    "text": "chip to do and that's just something a GPU wouldn't be able to",
    "start": "5283480",
    "end": "5289239"
  },
  {
    "text": "do I think you already have some of the answer there basically fft is a full",
    "start": "5289239",
    "end": "5295840"
  },
  {
    "text": "butterfly yeah and neural Nets can be you don't have to have a full butterly you can have just a small you know",
    "start": "5295840",
    "end": "5303239"
  },
  {
    "text": "levels of how you're switching backwards for back propagation you know not every Ro has to propagate every previous Ro so",
    "start": "5303239",
    "end": "5311639"
  },
  {
    "text": "you already have near solution in your architecture yeah I there is I guess I'm",
    "start": "5311639",
    "end": "5318960"
  },
  {
    "text": "skeptical well I would love to be proven wrong and have my architecture be better but uh I I am holding out until we have",
    "start": "5318960",
    "end": "5326920"
  },
  {
    "text": "real Benchmark data and I was really hoping we would have a couple more demos than just uh this one that I swear was",
    "start": "5326920",
    "end": "5334239"
  },
  {
    "text": "running on Hardware 4 hours ago assuming that you are very very fast with right I mean you",
    "start": "5334239",
    "end": "5341679"
  },
  {
    "text": "know given the convolution and ation right do",
    "start": "5341679",
    "end": "5346920"
  },
  {
    "text": "multiplication after you know in the in the the frequency domain but u b u more",
    "start": "5346920",
    "end": "5353040"
  },
  {
    "text": "specifically that back propagation specifically can be rephrased as a convolution over the you know the the",
    "start": "5353040",
    "end": "5359560"
  },
  {
    "text": "out the output from the previous layer with like your with the flipped kernel",
    "start": "5359560",
    "end": "5365199"
  },
  {
    "text": "so you can rephrase back propagation as just kind of the same convolution",
    "start": "5365199",
    "end": "5370440"
  },
  {
    "text": "theoretically you should if you're going to be as fast and as efficient for fft I",
    "start": "5370440",
    "end": "5375639"
  },
  {
    "text": "can't see it you know unless I'm missing something with with the memory aspect there it seems like you should be also",
    "start": "5375639",
    "end": "5382360"
  },
  {
    "text": "very very fast for at least convolutional nor oh I I definitely think we'll be fast I guess like our",
    "start": "5382360",
    "end": "5388199"
  },
  {
    "text": "advantage compared to compared to a GPU a GPU can't do an fft like we're we're doing it like our 16 core thing here you",
    "start": "5388199",
    "end": "5395800"
  },
  {
    "text": "know little tiny chip will outdo a lot of Nvidia gpus um on just that raw level",
    "start": "5395800",
    "end": "5403600"
  },
  {
    "text": "like that I would love to actually have a benchmark to show that we can beat out",
    "start": "5403600",
    "end": "5409080"
  },
  {
    "text": "you know a GPU on on the reason I asked about the memory subsystem was two",
    "start": "5409080",
    "end": "5414960"
  },
  {
    "text": "dimensional",
    "start": "5414960",
    "end": "5417960"
  }
]