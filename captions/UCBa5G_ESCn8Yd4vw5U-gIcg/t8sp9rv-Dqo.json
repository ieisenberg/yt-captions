[
  {
    "start": "0",
    "end": "5380"
  },
  {
    "text": "Today, we'll continue\nthese geometric type--",
    "start": "5380",
    "end": "10480"
  },
  {
    "text": "describing these\ngeometric type problems. One thing that is going\nto come up-- actually,",
    "start": "10480",
    "end": "16625"
  },
  {
    "text": "maybe in a couple of\nweeks in the class is the concept of\nan analytic center. It's actually not an\nanalytic center of a set,",
    "start": "16625",
    "end": "23260"
  },
  {
    "text": "although people informally say\nthe analytic center of a set. They don't mean that.",
    "start": "23260",
    "end": "28570"
  },
  {
    "text": "What they really mean is the\nanalytic center of a set of-- of a description of a set,\nwhich is a set of inequalities.",
    "start": "28570",
    "end": "36280"
  },
  {
    "text": "And the analytic\ncenter goes like this. So let's say we have--",
    "start": "36280",
    "end": "42219"
  },
  {
    "text": "I mean, the equality constraints\nwe just keep right here. But suppose we have a\nbunch of inequalities here.",
    "start": "42220",
    "end": "48220"
  },
  {
    "text": "And what this means-- so obviously, the fi of\nx should be less than 0.",
    "start": "48220",
    "end": "54010"
  },
  {
    "text": "Minus fi of x is what\npeople would call the margin when that's positive.",
    "start": "54010",
    "end": "59590"
  },
  {
    "text": "So minus fi of x is the margin. And it's roughly how much\ndo you have left before you",
    "start": "59590",
    "end": "65349"
  },
  {
    "text": "violate the inequality. That's the margin. And the so-called analytic\ncenter of a set of inequalities",
    "start": "65349",
    "end": "72729"
  },
  {
    "text": "is given by minimizing\nthe negative log of the--",
    "start": "72730",
    "end": "80395"
  },
  {
    "text": "this is the margin,\nminus fi of x. Another way to say\nit is you maximize the product of the margins.",
    "start": "80395",
    "end": "89225"
  },
  {
    "text": "This comes up in a\nlot of other things, in log utilities it's used\nuniversally, networking and things like that.",
    "start": "89225",
    "end": "94700"
  },
  {
    "text": "So this is not at all uncommon. So that is the so-called\nanalytic center.",
    "start": "94700",
    "end": "100729"
  },
  {
    "text": "Oh, of course that's\na convex problem. Why? Because minus log minus argument\nis convex and increasing.",
    "start": "100730",
    "end": "110179"
  },
  {
    "text": "And then the fi's\nof x are Convex And we'll actually\nsoon we'll see",
    "start": "110180",
    "end": "117200"
  },
  {
    "text": "very soon that this\nis actually quite straightforward to compute. Matter of fact, you will\nactually be doing-- well,",
    "start": "117200",
    "end": "123755"
  },
  {
    "text": "you'll be writing code\nthat will basically compute analytic centers\nand things like that.",
    "start": "123755",
    "end": "130100"
  },
  {
    "text": "So that's the analytic-- that is the analytic center\nof a set of inequalities. And here's just\na picture of what",
    "start": "130100",
    "end": "136400"
  },
  {
    "text": "it looks like for a polyhedron. So this shows you\nwhat's feasible.",
    "start": "136400",
    "end": "142790"
  },
  {
    "text": "Each of these corresponds\nto one of the rows here, each of those lines.",
    "start": "142790",
    "end": "148970"
  },
  {
    "text": "The dashed curves give\nyou the level curves of this log barrier.",
    "start": "148970",
    "end": "154400"
  },
  {
    "text": "This is called the log barrier. It's called a log\nbarrier, I think that's maybe borrowed\nfrom physics or something like that because it's a\npotential function that goes up",
    "start": "154400",
    "end": "162400"
  },
  {
    "text": "to infinity as you\napproach the boundary. So that's a barrier for a\nparticle or something like that",
    "start": "162400",
    "end": "169420"
  },
  {
    "text": "if that were a-- if\nthat were an energy. And a couple of\nthings you can see.",
    "start": "169420",
    "end": "176079"
  },
  {
    "text": "It's actually cool. So we've marked there\nthe analytic center. That's the point where\nthat barrier is minimized.",
    "start": "176080",
    "end": "182240"
  },
  {
    "text": "So whatever that\npoint is, it maximizes the product actually of the\nmargins for the inequalities.",
    "start": "182240",
    "end": "190510"
  },
  {
    "text": "So that's what it does. And you can see actually that\nthe level sets close down",
    "start": "190510",
    "end": "198730"
  },
  {
    "text": "to the analytic\ncenter are, of course, going to be very\nclose to ellipsoidal. And that's of course, true\nfor any smooth function.",
    "start": "198730",
    "end": "209560"
  },
  {
    "text": "So the dark ellipsoid\ndrawn there is this.",
    "start": "209560",
    "end": "216349"
  },
  {
    "text": "It turns out that for\nthe analytic center, if you calculate\nthe Hessian of it, then the ellipsoid defined\nby the center but with a 1",
    "start": "216350",
    "end": "224030"
  },
  {
    "text": "on the right hand\nside, that ellipsoid is guaranteed to\nbe inside the set. ",
    "start": "224030",
    "end": "232170"
  },
  {
    "text": "This will be important later. If you puff that ellipsoid up\nby a factor around m-- actually,",
    "start": "232170",
    "end": "239640"
  },
  {
    "text": "m would be enough\nbecause that would be square root of m squared there.",
    "start": "239640",
    "end": "244739"
  },
  {
    "text": "If you puff it up\nby a factor of m, then you cover the ellipsoid. So basically it says that\nthe ellipsoids defined",
    "start": "244740",
    "end": "252090"
  },
  {
    "text": "by analytic centers also have\nthis approximation property. That it gives you\nan inside ellipsoid.",
    "start": "252090",
    "end": "258599"
  },
  {
    "text": "And then when you puff it up\nby a factor, it covers the set. So it gives you\nthis approximation.",
    "start": "258600",
    "end": "265080"
  },
  {
    "text": "Here, the\napproximation depends-- now remember that for things\nlike the Lowner-John ellipsoid,",
    "start": "265080",
    "end": "271650"
  },
  {
    "text": "or the minimum volume\ncovering ellipsoid, or the maximum volume\ninscribed ellipsoid, there it depended\nonly on the dimension.",
    "start": "271650",
    "end": "278310"
  },
  {
    "text": "Here, it depends on m which\nis the number of inequalities here. So if m is much larger than\nn, this is a worse bound.",
    "start": "278310",
    "end": "286580"
  },
  {
    "text": "Worse approximation\nbound of a convex set. But anyway, you'll be\nseeing much more about this",
    "start": "286580",
    "end": "295425"
  },
  {
    "text": "in a couple of weeks.  What we're going to look at\nnow is linear discrimination.",
    "start": "295425",
    "end": "303080"
  },
  {
    "text": "Probably most of you\nhave seen this maybe in some basic machine\nlearning class.",
    "start": "303080",
    "end": "308600"
  },
  {
    "text": "But here's the problem. And there's many, many\nvariations on this. But it looks like this.",
    "start": "308600",
    "end": "314220"
  },
  {
    "text": "I'm going to give you a set\nof points x1 through xn. These are vectors. And a bunch of ys.",
    "start": "314220",
    "end": "319465"
  },
  {
    "text": "And if you like,\nthese are simply feature vectors associated\nwith a positive outcome and a negative outcome in\nsome kind of Boolean problem.",
    "start": "319465",
    "end": "328099"
  },
  {
    "text": "So I have some data. And what we seek\nis a hyperplane.",
    "start": "328100",
    "end": "334550"
  },
  {
    "text": "So that's defined by a\nvector a and a constant b. And we want all the xis to be\non one side of that hyperplane",
    "start": "334550",
    "end": "343340"
  },
  {
    "text": "and we want all the ys\nto be on the other side. So that's what we want,\nseparating hyperplane.",
    "start": "343340",
    "end": "351139"
  },
  {
    "text": "Shockingly, this was\nstudied in the early 1950s. People came up with\nsomething called",
    "start": "351140",
    "end": "356390"
  },
  {
    "text": "the perceptron algorithm which\nyou might have seen somewhere. It's a very early thing. And weirdly, many years\nwent by before someone",
    "start": "356390",
    "end": "365580"
  },
  {
    "text": "looked up and said,\ndude, that's an LP. In which case, people\nliterally down the hall",
    "start": "365580",
    "end": "372150"
  },
  {
    "text": "know how to solve these. So it's just one of\nthose cases where the diffusion of knowledge,\nit took some time.",
    "start": "372150",
    "end": "379380"
  },
  {
    "text": "So there is a subtlety here\nthat we're going to look at. Oh, one thing we have to be\ncareful of is the notation.",
    "start": "379380",
    "end": "388230"
  },
  {
    "text": "So here, the variables\nare basically a and b. And the data are\nthe xis and the yis,",
    "start": "388230",
    "end": "395460"
  },
  {
    "text": "which violates this usual\nconvention that things at the end of the\nalphabet are typically",
    "start": "395460",
    "end": "400550"
  },
  {
    "text": "are variables and things at\nthe beginning are typically your parameters or data.",
    "start": "400550",
    "end": "405570"
  },
  {
    "text": "So you have to be\non your toes here. So what sort of inequality\non a and b is this?",
    "start": "405570",
    "end": "411960"
  },
  {
    "start": "411960",
    "end": "417419"
  },
  {
    "text": "What kind of function is\na transpose xi plus b?",
    "start": "417420",
    "end": "422826"
  },
  {
    "text": "What kind of function\nof the pair ab is that? It's linear.",
    "start": "422826",
    "end": "428310"
  },
  {
    "text": "OK, that's linear. Now there is one thing here, we\nhave these strict inequalities.",
    "start": "428310",
    "end": "434490"
  },
  {
    "text": "So let me just say a\nlittle bit about that. There are a lot of cases where\nstrict inequalities are silly,",
    "start": "434490",
    "end": "441780"
  },
  {
    "text": "and just mean nothing, and\nyou just quietly replace them with inequalities. So here would be an example.",
    "start": "441780",
    "end": "448090"
  },
  {
    "text": "You're working with someone\nand they're designing a power amplifier and they\ngo, your budget",
    "start": "448090",
    "end": "453389"
  },
  {
    "text": "is 50 milliwatts in your design. And you go, cool, OK. And then they come back\nand they go, it's strict.",
    "start": "453390",
    "end": "459479"
  },
  {
    "text": "You have to be less\nthan 50 milliwatts. Not less than or equal to. And it's like, OK, this\nis just completely idiotic",
    "start": "459480",
    "end": "465748"
  },
  {
    "text": "and makes no sense. Everybody see what I'm saying? So basically, quietly you try\nto explain to the person that",
    "start": "465748",
    "end": "472530"
  },
  {
    "text": "doesn't make any sense. And you quietly replace\nless strictly less than with less than or equal\nto and no one gets hurt.",
    "start": "472530",
    "end": "478710"
  },
  {
    "text": "Everyone got this? OK, so that's fine. Now if we try that here,\nlet's see what happens.",
    "start": "478710",
    "end": "487210"
  },
  {
    "text": "So you'd say, well, ai\ntranspose x plus b is bigger than or equal to 0.",
    "start": "487210",
    "end": "492730"
  },
  {
    "text": "And I also want a transpose yi\nplus b less than or equal to 0. Anybody got any\nsuggestions about how",
    "start": "492730",
    "end": "498789"
  },
  {
    "text": "to solve that system\nof inequalities?  a and b 0.",
    "start": "498790",
    "end": "504760"
  },
  {
    "text": "A and b 0. I like it. So a and b 0 works. So this is one of\nthose cases where",
    "start": "504760",
    "end": "510879"
  },
  {
    "text": "the distinction between\nstrict and non-strict actually matters.",
    "start": "510880",
    "end": "516309"
  },
  {
    "text": "It actually matters because\nwhen you make it non-strict-- when you made it\nnon-strict, it's got a silly solution\nwhich is uninteresting.",
    "start": "516309",
    "end": "524830"
  },
  {
    "text": "So in a lot of these cases,\nyou actually have to hand, argue each one. I'm not aware of a\ngeneral principle.",
    "start": "524830",
    "end": "532899"
  },
  {
    "text": "Hand argue each one and I'll\ndo that argument right now. The main arguments go\nsomething like this.",
    "start": "532900",
    "end": "541210"
  },
  {
    "text": "That inequality is homogeneous. In other words, if I double a\nand b, then whatever this is,",
    "start": "541210",
    "end": "548710"
  },
  {
    "text": "which is supposed\nto be positive, goes up by a factor 2. Everybody agree? Same over here for this one.",
    "start": "548710",
    "end": "555279"
  },
  {
    "text": "Same for the other one. If this is supposed\nto be less than-- if I double a and b,\nthese things are negative.",
    "start": "555280",
    "end": "561529"
  },
  {
    "text": "Whatever are they? They just got twice as negative. Everybody following this? So what I could\ndo is my claim is",
    "start": "561530",
    "end": "568370"
  },
  {
    "text": "that I can without\nloss of generality replace these\nstrict inequalities with these non-strict\ninequalities with a 1.",
    "start": "568370",
    "end": "576085"
  },
  {
    "text": "And the way I do\nthat is up here, if you give me an a and a b\nthat satisfies this, I simply",
    "start": "576085",
    "end": "581480"
  },
  {
    "text": "scale them by whatever\nfactor is needed to make-- however positive that was\nhow negative that was,",
    "start": "581480",
    "end": "587300"
  },
  {
    "text": "I multiply by a\nfactor which makes that bigger than or equal to 1. Everybody got it? So that says if there\nexists a and b that satisfy",
    "start": "587300",
    "end": "594949"
  },
  {
    "text": "that, then by multiplying\nthem by a positive number, they're going to satisfy this.",
    "start": "594950",
    "end": "600590"
  },
  {
    "text": "The converse goes like this. Converse is relatively\nstraightforward. Because if I tell you a number\nis bigger than or equal to 1,",
    "start": "600590",
    "end": "607670"
  },
  {
    "text": "it's definitely positive. So everyone got this? There's actually a subtlety,\nit's actually quite important",
    "start": "607670",
    "end": "614330"
  },
  {
    "text": "in I don't know. You could easily encounter this.",
    "start": "614330",
    "end": "620215"
  },
  {
    "text": "I mean, actually both in\nresearch or other things, or other places. So this is something we\nexpect you to know about.",
    "start": "620215",
    "end": "628780"
  },
  {
    "text": "Yeah? Is there anything stopping\nus from saying a transpose x plus b greater than a million?",
    "start": "628780",
    "end": "634960"
  },
  {
    "text": "No, it's fine. That's totally cool. So if you want to put 10 to the\n6 here and minus 10 to the 6,",
    "start": "634960",
    "end": "643060"
  },
  {
    "text": "that's perfectly good. And then to be quite\nprecise, what I'm saying then",
    "start": "643060",
    "end": "648070"
  },
  {
    "text": "is the first set of\ninequalities are feasible if and only if these\nare feasible, if",
    "start": "648070",
    "end": "655120"
  },
  {
    "text": "and only if your variation\nwhere one is replaced with 10 to the 6 is feasible.",
    "start": "655120",
    "end": "661780"
  },
  {
    "text": "And if one is feasible, all\nof them are feasible, period.",
    "start": "661780",
    "end": "667930"
  },
  {
    "text": "And if one is infeasible,\nall are infeasible. And how do we get-- how do\nwe translate among them?",
    "start": "667930",
    "end": "673030"
  },
  {
    "text": "We just scale them\nby various things. So if I have an a and\nb that satisfies these and I want one that satisfies\nyours, I just multiply a and b",
    "start": "673030",
    "end": "679840"
  },
  {
    "text": "by a million, and then\nthey'll satisfy it. Make sense? ",
    "start": "679840",
    "end": "687280"
  },
  {
    "text": "All right. So we did it very quietly, or\nI did it with just half a line",
    "start": "687280",
    "end": "692980"
  },
  {
    "text": "saying they're\nhomogeneous in ab. But I just gave you\nthe full argument for why that's the case. ",
    "start": "692980",
    "end": "700960"
  },
  {
    "text": "So what does this say? Oh, sorry, we can go back. This says that if you\ngave me a pile of vectors,",
    "start": "700960",
    "end": "707514"
  },
  {
    "text": "one set of vectors and another\nset and you wanted to know can separate them\nwith a hyperplane,",
    "start": "707515",
    "end": "713890"
  },
  {
    "text": "and the answer is just it's\nan LP feasibility problem. That's what it says. So it means that that's\nimmediately tractable.",
    "start": "713890",
    "end": "721870"
  },
  {
    "text": "We could just solve this.  Well, we can do more.",
    "start": "721870",
    "end": "728100"
  },
  {
    "text": "You can do things like this. You can actually say, well, now\nthat I know that there is one,",
    "start": "728100",
    "end": "735020"
  },
  {
    "text": "I might want to pick one of\nthese separating hyperplanes. And one way you might do\nit is something like this.",
    "start": "735020",
    "end": "742610"
  },
  {
    "text": "If I have two\nhyperplanes like that and they're normalized with\na 1 on the right hand side,",
    "start": "742610",
    "end": "750829"
  },
  {
    "text": "or minus 1, the\ndistance between them is 2 divided by the 2 norm of\na, you can just calculate that.",
    "start": "750830",
    "end": "758750"
  },
  {
    "text": "In fact, this is a slab. So this middle thing, this is a\ntranspose x plus b equals zero.",
    "start": "758750",
    "end": "766220"
  },
  {
    "text": "This is, I know it\ndoesn't really matter, but this is either, let's say,\nthe minus 1 and this is plus 1, let's say.",
    "start": "766220",
    "end": "772102"
  },
  {
    "text": "So that's what that is. And the width of that slab is\ngoing to be 2 over the square--",
    "start": "772102",
    "end": "778910"
  },
  {
    "text": "2 over the 2 norm of a. By the way, what kind\nof function is this?",
    "start": "778910",
    "end": "784100"
  },
  {
    "text": "Convex, concave? ",
    "start": "784100",
    "end": "790720"
  },
  {
    "text": "It's a trick question but a\nperfectly good one, I think. What kind of function\nis that of a?",
    "start": "790720",
    "end": "796630"
  },
  {
    "start": "796630",
    "end": "803534"
  },
  {
    "text": "The answer is, it's\nneither convex or concave. I was just messing with you. I just wanted to see if\nyou'd-- anyway, it's fine.",
    "start": "803534",
    "end": "809170"
  },
  {
    "text": "It's not. So it's Nothing So if\nyou're saying maximize this,",
    "start": "809170",
    "end": "816910"
  },
  {
    "text": "it's not concave,\nthat's for sure. ",
    "start": "816910",
    "end": "822250"
  },
  {
    "text": "You can picture it in your\nmind if you want, right, in R2, the norm.",
    "start": "822250",
    "end": "828220"
  },
  {
    "text": "It's got level curves like this. And that thing is a function. It's a crazy thing with\na weird pole, it's 0.",
    "start": "828220",
    "end": "834550"
  },
  {
    "text": "It goes up to infinity. So it's not convex\nand it's not concave. Actually, in some\ndirections it's convex",
    "start": "834550",
    "end": "840459"
  },
  {
    "text": "and in others it's concave.  Doesn't mean we\ncan't maximize it.",
    "start": "840460",
    "end": "846790"
  },
  {
    "text": "Because maximizing this is the\nsame as minimizing 1 over it because it's positive.",
    "start": "846790",
    "end": "853420"
  },
  {
    "text": "So that says this\nproblem is convex, that's a quadratic program.",
    "start": "853420",
    "end": "859060"
  },
  {
    "text": "And if you solve this\nproblem, this QP, you'll actually\nget the thickest--",
    "start": "859060",
    "end": "868070"
  },
  {
    "text": "you'll get the thickest\nseparating slab. Makes sense?",
    "start": "868070",
    "end": "874220"
  },
  {
    "text": "And in fact, we can\neven say a little bit how there's an interesting\nway to get that slab. So for this problem\nover here, I think",
    "start": "874220",
    "end": "881810"
  },
  {
    "text": "this shows you the separating\nslab for these points and these points. All make sense?",
    "start": "881810",
    "end": "887675"
  },
  {
    "text": " And let's see, that's a QP.",
    "start": "887675",
    "end": "893490"
  },
  {
    "text": "Again, you have\nto be very careful because you have to see\nwhat the variables are and all that sort of stuff. Here the variables are a\nand b, xi and yi are data.",
    "start": "893490",
    "end": "903420"
  },
  {
    "text": "So that's robust\nlinear discrimination is the way you might say it.",
    "start": "903420",
    "end": "908430"
  },
  {
    "text": "That's dialect. That's old school\nmachine learning dialect. ",
    "start": "908430",
    "end": "915600"
  },
  {
    "text": "Now, it's actually kind\nof interesting to take for this problem to work out\nwhat is the dual of this QP.",
    "start": "915600",
    "end": "924600"
  },
  {
    "text": "It's not a QP. Sorry, I misspoke. It's not a QP unless\nyou square it. And that's an equivalent\nproblem and that's a QP.",
    "start": "924600",
    "end": "931890"
  },
  {
    "text": "This would be, I guess, an SOCP. But I think that none\nof this would matter.",
    "start": "931890",
    "end": "938190"
  },
  {
    "text": "So if you work out what\nthe Lagrange dual is,",
    "start": "938190",
    "end": "944100"
  },
  {
    "text": "you get something\nthat looks like this. You had these two\nsets of inequalities. And you end up with something\nthat looks like this.",
    "start": "944100",
    "end": "950230"
  },
  {
    "text": "You should maximize\n1 transpose lambda plus 1 transpose mu\nsubject to, and you get",
    "start": "950230",
    "end": "957347"
  },
  {
    "text": "something that looks like this. It's actually interesting. And it says that the sum of the\nlambdas and the sum of the mus",
    "start": "957348",
    "end": "962680"
  },
  {
    "text": "have to be equal, and you\nget something like that.",
    "start": "962680",
    "end": "967930"
  },
  {
    "text": "And the optimal value\nof that top problem is actually the maximum\nmargin of separation.",
    "start": "967930",
    "end": "973600"
  },
  {
    "text": " It's the norm or whatever it is.",
    "start": "973600",
    "end": "980950"
  },
  {
    "text": "So if you stare at\nthis long enough, you realize that\nactually what we can do",
    "start": "980950",
    "end": "986260"
  },
  {
    "text": "is change variables to normalize\nthe lambdas and the mus. They're both\nnon-negative vectors.",
    "start": "986260",
    "end": "992440"
  },
  {
    "text": "And simply, we replace them\nwith vectors that sum up to 1 and are non-negative, otherwise\nknown as mixture coefficients.",
    "start": "992440",
    "end": "1000610"
  },
  {
    "text": "So we do that and you\nplug that in up here and various things happen. And you end up with\nthis problem here.",
    "start": "1000610",
    "end": "1007530"
  },
  {
    "text": "And now this is very cool\nbecause now we can look at it. This says that theta is a\nset of mixture coefficients.",
    "start": "1007530",
    "end": "1015270"
  },
  {
    "text": "And so this is a general\npoint in the convex hull of the original xs, because\nit's a mixture of them.",
    "start": "1015270",
    "end": "1024099"
  },
  {
    "text": "This thing, here, again,\nthese are coefficients that are non-negative, add up to 1. This thing here is\nactually a general point",
    "start": "1024099",
    "end": "1032579"
  },
  {
    "text": "in the convex hull of the yis. And what this says is you should\nminimize t subject to this norm",
    "start": "1032579",
    "end": "1039539"
  },
  {
    "text": "less than t. Obviously, it's the same as\njust minimizing this thing. This is the epigraph\nformulation.",
    "start": "1039540",
    "end": "1045459"
  },
  {
    "text": "And so what it really saying\nis very geometrically clear. It says minimize the\ndistance between two points.",
    "start": "1045460",
    "end": "1055490"
  },
  {
    "text": "One is in the convex\nhull of the xs and one in the convex\nhull of the ys. Does that make sense?",
    "start": "1055490",
    "end": "1061929"
  },
  {
    "text": "So it's actually very cool. So if we go back here,\nthe primal, basically it",
    "start": "1061930",
    "end": "1067930"
  },
  {
    "text": "says expand the\nslab until it stops",
    "start": "1067930",
    "end": "1073720"
  },
  {
    "text": "fitting between the two sets. The other one says, form the\nconvex hull of the dark points",
    "start": "1073720",
    "end": "1078850"
  },
  {
    "text": "in your head. Just do that visually. Form the convex hull of\nthe white circles here.",
    "start": "1078850",
    "end": "1085900"
  },
  {
    "text": "And then find the two\npoints in those two sets which are closest to each other.",
    "start": "1085900",
    "end": "1091270"
  },
  {
    "text": "And sure enough, you're\ngoing to get something like, I don't know, probably that\ndark point and then a point",
    "start": "1091270",
    "end": "1097210"
  },
  {
    "text": "over there. All make sense? So it just means\nthat in these, a lot",
    "start": "1097210",
    "end": "1105500"
  },
  {
    "text": "of these geometric problems,\nduals are interpretable. Duals are usually highly\ninterpretable and interesting.",
    "start": "1105500",
    "end": "1111049"
  },
  {
    "text": "I mean doesn't help\nyou do anything. It doesn't solve it\nbetter, blah, blah, blah. But it's just interesting just\nto see that it all makes sense.",
    "start": "1111050",
    "end": "1116873"
  },
  {
    "text": " I think we looked at that.",
    "start": "1116873",
    "end": "1124750"
  },
  {
    "text": "And now we get to something\nthat's actually well useful. So here it is.",
    "start": "1124750",
    "end": "1129809"
  },
  {
    "text": " Now what it is you\nhave points that",
    "start": "1129810",
    "end": "1137190"
  },
  {
    "text": "are not linearly separable. And again, if you've had a first\ncourse maybe in the first two",
    "start": "1137190",
    "end": "1142908"
  },
  {
    "text": "weeks of a machine learning\nclass, you would have seen. This is the so-called--\nit's getting close to the idea of the\nsupport vector machine which",
    "start": "1142908",
    "end": "1150210"
  },
  {
    "text": "we'll get to in a minute. But what you do is\nyou add-- and this is in the style of how it's\ndescribed in a machine learning",
    "start": "1150210",
    "end": "1157200"
  },
  {
    "text": "class, which I think is poorly\nbut that doesn't matter. That's fine. And so what you do is\nyou say, well, look,",
    "start": "1157200",
    "end": "1163049"
  },
  {
    "text": "I can't satisfy\nthese inequalities. And you go, cool, I'm going\nto give you some slack.",
    "start": "1163050",
    "end": "1168870"
  },
  {
    "text": "By the way, that parsed\nboth mathematically and colloquially. So what it means is instead of\nrequiring these things to be",
    "start": "1168870",
    "end": "1176760"
  },
  {
    "text": "bigger than 1, I'm going to say,\nthey're bigger than 1 minus ui. ui is non-negative. It's your slack.",
    "start": "1176760",
    "end": "1182580"
  },
  {
    "text": "It's how much we're\ngoing to shrink. We're going to shrink the\nrequirement on the constraint so you can be-- so\nyou can satisfy it.",
    "start": "1182580",
    "end": "1189510"
  },
  {
    "text": "And then we're going to say\nsomething like, let's minimize the sum of these slacks.",
    "start": "1189510",
    "end": "1195120"
  },
  {
    "text": "How much do you actually--\nhow many inequalities do you actually need-- do\nI need to give you slack on so you can satisfy them?",
    "start": "1195120",
    "end": "1201450"
  },
  {
    "text": "And you'd get a problem\nthat looks like this. And it's actually quite\ninteresting here, we",
    "start": "1201450",
    "end": "1208620"
  },
  {
    "text": "would do it-- we would write this in a very\nsimple way but that's OK.",
    "start": "1208620",
    "end": "1214530"
  },
  {
    "text": "And it turns out this\nis actually useful. Now it's a heuristic for\nminimizing roughly the number",
    "start": "1214530",
    "end": "1220799"
  },
  {
    "text": "of misclassified points\nwhich I can show you what that would be.",
    "start": "1220800",
    "end": "1226350"
  },
  {
    "text": "Actually, why don't\nI show you that? So here's what it\nwould look like. ",
    "start": "1226350",
    "end": "1232690"
  },
  {
    "text": "Let's see, I will write down. Let me see what it is.  So this is ai transpose--",
    "start": "1232690",
    "end": "1241330"
  },
  {
    "text": "a transpose xi plus b. We want that-- here.",
    "start": "1241330",
    "end": "1247780"
  },
  {
    "text": "Here's 0. And if I ask you whether you\nhave misclassified a point xi",
    "start": "1247780",
    "end": "1253450"
  },
  {
    "text": "or not, the question is\nwhether this is negative. So if you're going\nto misclassify,",
    "start": "1253450",
    "end": "1261840"
  },
  {
    "text": "that's something\nthat looks like this. That's a cost. So if I took this function\nof these, actually",
    "start": "1261840",
    "end": "1270309"
  },
  {
    "text": "what I would end up getting is\nprecisely the number of data points I misclassified.",
    "start": "1270310",
    "end": "1275617"
  },
  {
    "text": "Everybody agree with that? I mean because if\nthis is negative, it means I wanted this\nthing to be positive. Or here, I can-- here, if\nyou insist that's positive,",
    "start": "1275617",
    "end": "1283870"
  },
  {
    "text": "I guess I have to\nmake it like that. So that's what it is. So now this function,\nof course, is not convex",
    "start": "1283870",
    "end": "1290400"
  },
  {
    "text": "so you can't minimize that. Then what this says\nis you should actually",
    "start": "1290400",
    "end": "1297300"
  },
  {
    "text": "do something like this. You should say, I want\nthat to be at least 1.",
    "start": "1297300",
    "end": "1303770"
  },
  {
    "text": "And then your cost\nfunction-- the cost function we have looks like\nthis because it's the amount.",
    "start": "1303770",
    "end": "1311900"
  },
  {
    "text": "And actually, it's\nsuper interesting and makes perfect sense. That's equivalent to\nthis problem here.",
    "start": "1311900",
    "end": "1316940"
  },
  {
    "text": "That's these numbers up\nhere, the u's and v's. So that's convex.",
    "start": "1316940",
    "end": "1321980"
  },
  {
    "text": "And it's actually\nsuper interesting to think about what it means. Here's what it means. It says that if you\nhave a data point--",
    "start": "1321980",
    "end": "1329299"
  },
  {
    "text": "and we think of 1 as the margin. So it says, you know what?",
    "start": "1329300",
    "end": "1334460"
  },
  {
    "text": "If you classify\ncorrectly with at least-- over here means you classify\ncorrectly, bigger than 0.",
    "start": "1334460",
    "end": "1341059"
  },
  {
    "text": "If you classify correctly\nwith a margin of 1 or more, then that's cool.",
    "start": "1341060",
    "end": "1346400"
  },
  {
    "text": "There's no cost. You did fine. You start charging over here.",
    "start": "1346400",
    "end": "1352460"
  },
  {
    "text": "We're actually charging for\nclassifying correctly but being",
    "start": "1352460",
    "end": "1357710"
  },
  {
    "text": "less than the margin we desire. Everybody following this? And then it just grows linearly.",
    "start": "1357710",
    "end": "1365440"
  },
  {
    "text": "And actually, you can see\nsomething immediately, which is this function is\nbigger than this other function.",
    "start": "1365440",
    "end": "1370960"
  },
  {
    "text": "And so it turns out that\nthe optimal value of this is actually an upper\nbound on the number of misclassifications.",
    "start": "1370960",
    "end": "1377160"
  },
  {
    "text": "So again, if you're\nfollowing this that's great. And if you aren't,\nthat's probably OK too.",
    "start": "1377160",
    "end": "1383640"
  },
  {
    "text": " All makes sense? So how many people\nactually have seen things",
    "start": "1383640",
    "end": "1391230"
  },
  {
    "text": "like this in a machine\nlearning class? I hope a fair number of people. Good. ",
    "start": "1391230",
    "end": "1397230"
  },
  {
    "text": "And then all you\ndo now is you add-- I guess, they would actually\nsquare this probably up here.",
    "start": "1397230",
    "end": "1403620"
  },
  {
    "text": "They would square this thing. And then this trades\noff two things.",
    "start": "1403620",
    "end": "1409770"
  },
  {
    "text": "This will trade off the\ntwo desirable things. Number one, having small slacks.",
    "start": "1409770",
    "end": "1415350"
  },
  {
    "text": "Small slacks corresponds\nto this surrogate function. In fact, there's a\nwhole way to view",
    "start": "1415350",
    "end": "1421080"
  },
  {
    "text": "this which makes perfect\nsense, which is someone says, find me a hyperplane\nthat misclassifies",
    "start": "1421080",
    "end": "1426930"
  },
  {
    "text": "as few points as possible. And you go, cool, the\nfunction looks like this. And you go, I can't do that\nbecause it's not convex.",
    "start": "1426930",
    "end": "1433290"
  },
  {
    "text": "Then you'd say, well, I'll\nuse this convex function here.",
    "start": "1433290",
    "end": "1438840"
  },
  {
    "text": "Makes perfect sense, right? And you say, I'll minimize that. Everybody following this?",
    "start": "1438840",
    "end": "1445110"
  },
  {
    "text": "Anyway, by the way often\nin many, many fields, that story usually has\na very good outcome.",
    "start": "1445110",
    "end": "1452550"
  },
  {
    "text": "Someone says, I want to do x. And you'd say, we can't\ndo that, not convex.",
    "start": "1452550",
    "end": "1458460"
  },
  {
    "text": "Then someone says, but here's\na surrogate which is convex. And then people observe it to\nwork really well in practice.",
    "start": "1458460",
    "end": "1465270"
  },
  {
    "text": "Usually about five\nyears later, somebody writes a theory-oriented paper\nthat basically says, actually,",
    "start": "1465270",
    "end": "1472170"
  },
  {
    "text": "you never even wanted to\nsolve the first thing which you can't solve anyway\nbecause it's a bad idea. You really wanted to--",
    "start": "1472170",
    "end": "1478500"
  },
  {
    "text": "what you really wanted to solve\nwas the convex relaxation. So I won't go into\ndetails on that",
    "start": "1478500",
    "end": "1484350"
  },
  {
    "text": "but that comes up\nmany, many times. And here's one in finance. People would say, you what\nis my 0.99 value at risk.",
    "start": "1484350",
    "end": "1499230"
  },
  {
    "text": "That's how much money could\nyou lose in a 1% event.",
    "start": "1499230",
    "end": "1504299"
  },
  {
    "text": "That's value at risk. By the way, it's\nused universally throughout finance banking. It's written into\nregulations, everything.",
    "start": "1504300",
    "end": "1512620"
  },
  {
    "text": "So some people figured out\na very cool thing called Conditional Value Risk, CVaR. If you know, it doesn't-- and\nyou don't have to know what",
    "start": "1512620",
    "end": "1518670"
  },
  {
    "text": "these are. That's actually kind of\nbad for value at risk. It's exactly the same thing. It's a convex surrogate\nfor value at risk.",
    "start": "1518670",
    "end": "1526950"
  },
  {
    "text": "Everybody following this? It's convex and that means\nwe can do all sorts of stuff. We can analyze portfolio. We can construct portfolios\nthat have constraints on CVaR",
    "start": "1526950",
    "end": "1535730"
  },
  {
    "text": "and all sorts of things. Everybody got it? 10 years later, people\nanalyze it and find out",
    "start": "1535730",
    "end": "1541559"
  },
  {
    "text": "that the value at risk is\nwhat's called an incoherent risk measure and CVaR is not.",
    "start": "1541560",
    "end": "1549690"
  },
  {
    "text": "So they write down some axioms. I mean, again, this\nis just the story. You write down some axioms that\na risk measure should have.",
    "start": "1549690",
    "end": "1558010"
  },
  {
    "text": "And what it means is\nthat value at risk, it's actually just a\nbad measure of risk.",
    "start": "1558010",
    "end": "1566020"
  },
  {
    "text": "And too bad that it's what all\nbanks use, many hedge funds. It's written into\nregulations so it",
    "start": "1566020",
    "end": "1573340"
  },
  {
    "text": "tells banks how much money\nthey have to have on hand to avoid a run on the bank and\nall this kind of crazy stuff.",
    "start": "1573340",
    "end": "1579680"
  },
  {
    "text": "But anyway, so that's\na perfect example where the convex thing\nturned out to be actually",
    "start": "1579680",
    "end": "1585130"
  },
  {
    "text": "what you really wanted to do. Not the one that\nsounded the most natural in the first place. This is another one.",
    "start": "1585130",
    "end": "1590680"
  },
  {
    "text": "It turns out here's an\nincredibly bad idea, is to say, I have a bunch of data. Please find me a separating\nhyperplane that misclassifies",
    "start": "1590680",
    "end": "1601059"
  },
  {
    "text": "as few as possible. But that sounds\ncompletely reasonable. Anybody would say that. It sounds reasonable.",
    "start": "1601060",
    "end": "1606293"
  },
  {
    "text": "It turns out it's not. Something like this is\nactually much better. Yeah? In this problem,\ndoes it matter if we",
    "start": "1606293",
    "end": "1611870"
  },
  {
    "text": "choose plus/minus 1 as the--",
    "start": "1611870",
    "end": "1617105"
  },
  {
    "text": "The margins? Yeah, exactly. No, it is not going to\nmake any difference at all.",
    "start": "1617105",
    "end": "1623260"
  },
  {
    "text": "You can make them 10\nto the 6 if you want. And actually what would happen\nis just everything would just",
    "start": "1623260",
    "end": "1628450"
  },
  {
    "text": "scale because actually\nif you look at it, everything is\nhomogeneous, including the objective this way.",
    "start": "1628450",
    "end": "1634118"
  },
  {
    "text": "So everything would just scale. It wouldn't make any--\nif you don't like-- if you don't like 1 as your\ncanonical positive number,",
    "start": "1634118",
    "end": "1640660"
  },
  {
    "text": "choose another one. You could make an e just\nto mess with people, or pi. You could make it\nsquare root pi.",
    "start": "1640660",
    "end": "1648710"
  },
  {
    "text": "That's not a bad\nidea just to do that. Just so that somebody's\npoking through your code later goes like, whoa, what is that?",
    "start": "1648710",
    "end": "1656580"
  },
  {
    "text": "Yes? What do you mean by homogeneous? Oh, homogeneous\nmeans that if you",
    "start": "1656580",
    "end": "1663330"
  },
  {
    "text": "multiply the arguments or\nthe variables, in this case, by a positive number, then\nthat expression value goes up",
    "start": "1663330",
    "end": "1672090"
  },
  {
    "text": "by the same number. So a norm is a great example. An absolute value, a norm.",
    "start": "1672090",
    "end": "1678179"
  },
  {
    "text": "And you can see here that the\nvariables are a, b, u, and v.",
    "start": "1678180",
    "end": "1683460"
  },
  {
    "text": "And if I multiply\nthem all by 2, you tell me what happens\nto the objective? It goes up by 2x.",
    "start": "1683460",
    "end": "1689370"
  },
  {
    "text": "So it's homogeneous. Yeah, OK.",
    "start": "1689370",
    "end": "1694840"
  },
  {
    "text": "Everybody got this idea? Well, you can actually do--",
    "start": "1694840",
    "end": "1702659"
  },
  {
    "text": "I mean, I guess,\nin machine learning you describe this\nas kernel methods but we can just do this.",
    "start": "1702660",
    "end": "1710809"
  },
  {
    "text": "Suppose you want to\nseparate two points by some non-linear function. Now of course, there's\na gazillion functions",
    "start": "1710810",
    "end": "1717080"
  },
  {
    "text": "that separate two sets of\npoints because I could actually define a function\nthat's positive right around each of our xs,\nnegative around each of our ys.",
    "start": "1717080",
    "end": "1726530"
  },
  {
    "text": "And then I don't even care\nwhat it is anywhere else. It doesn't matter. It's a half. I don't care. Or 0, that doesn't\nmake any difference.",
    "start": "1726530",
    "end": "1733429"
  },
  {
    "text": "That's silly. So I mean you want some\nfamily of functions or whatever to\nregularize your choices.",
    "start": "1733430",
    "end": "1740419"
  },
  {
    "text": "And so you could do\nthings like this. We can make a--",
    "start": "1740420",
    "end": "1745550"
  },
  {
    "text": "so f of z contains\nthese basis functions. And then theta is now a linear\ncombination of basis functions.",
    "start": "1745550",
    "end": "1752300"
  },
  {
    "text": "One of them, by the\nway, could be 1. That would be a very\ncommon basis functions.",
    "start": "1752300",
    "end": "1757430"
  },
  {
    "text": "And then what you\nwant to do is you want to find these inequalities. Now this looks complicated\nbecause in these things,",
    "start": "1757430",
    "end": "1765049"
  },
  {
    "text": "there's sines, cosines,\nhyperbolic cosine. I mean, who knows\nwhat's in those? There's some weird things.",
    "start": "1765050",
    "end": "1770880"
  },
  {
    "text": "I have no idea. Maybe those are weird\nradial basis functions. It doesn't matter.",
    "start": "1770880",
    "end": "1776370"
  },
  {
    "text": "But it'd make you nervous. But the point is that's data. And so actually, these\nare just vectors.",
    "start": "1776370",
    "end": "1782460"
  },
  {
    "text": "They're just constant vectors. And it's exactly the same-- It's exactly the same problem.",
    "start": "1782460",
    "end": "1787679"
  },
  {
    "text": "So that makes sense? Maybe an even simpler\ninterpretation of this",
    "start": "1787680",
    "end": "1794059"
  },
  {
    "text": "is even better and really dumb. You think of this as--",
    "start": "1794060",
    "end": "1799820"
  },
  {
    "text": "I would think of this as\nfeature engineering, which is like, thanks for your xs. Thanks for your ys.",
    "start": "1799820",
    "end": "1804860"
  },
  {
    "text": "I'm going to put them\nthrough some functions. Maybe I get a bigger vector.",
    "start": "1804860",
    "end": "1810559"
  },
  {
    "text": "And you say now just do\nsupport vector machine on that or separate them that way. That's another way to say it.",
    "start": "1810560",
    "end": "1816620"
  },
  {
    "text": " So you can do crazy\nstuff like you could say,",
    "start": "1816620",
    "end": "1822320"
  },
  {
    "text": "I want to do quadratic-- I do want to do\nquadratic discrimination. So to do that, you\nset up inequalities",
    "start": "1822320",
    "end": "1828440"
  },
  {
    "text": "that look like this and this. And the variables\nhere are P, q, and r. What kind of inequality is\nthis and this in P, q, and r?",
    "start": "1828440",
    "end": "1836251"
  },
  {
    "text": " They're linear.",
    "start": "1836251",
    "end": "1841707"
  },
  {
    "text": "Because the left\nhand side is actually linear in the triple P, q, r.",
    "start": "1841707",
    "end": "1846770"
  },
  {
    "text": "And you have to get used to this\nbecause you see x transpose Px and you immediately\nwant to ask--",
    "start": "1846770",
    "end": "1855080"
  },
  {
    "text": "it is quadratic in xi but xi\nis data so it's not a variable. Your variable is P.\nSo that's what it--",
    "start": "1855080",
    "end": "1863210"
  },
  {
    "text": "And you could do crazy stuff. Like you could\nsay, you know what? I want to see if I can separate\nsome data by an ellipsoid.",
    "start": "1863210",
    "end": "1872270"
  },
  {
    "text": "And that would just be-- that would end up being an SDP. You'd have an\ninequality constraint.",
    "start": "1872270",
    "end": "1878990"
  },
  {
    "text": "You'd have a matrix\ninequality constraint on P, something like that.",
    "start": "1878990",
    "end": "1885080"
  },
  {
    "text": "And this would be a\nseparation by an ellipsoid. So somebody want to\nname a use for that?",
    "start": "1885080",
    "end": "1892625"
  },
  {
    "text": " I give you a bunch of data.",
    "start": "1892625",
    "end": "1898250"
  },
  {
    "text": "Let's say maybe these are\ngood outcomes or something. Maybe these are bad ones. So anybody want to?",
    "start": "1898250",
    "end": "1904100"
  },
  {
    "text": " Location? What's that?",
    "start": "1904100",
    "end": "1909880"
  },
  {
    "text": "Location. Yeah, I mean it could be-- Yeah, it could be that you\nhave some incredibly complex",
    "start": "1909880",
    "end": "1915580"
  },
  {
    "text": "industrial process. You set your knobs various ways. And you run the process\nand you get a bunch",
    "start": "1915580",
    "end": "1921520"
  },
  {
    "text": "of data that looks like this. These are the ones that came in. These are the product\nthat came out up to spec. This is the one that failed.",
    "start": "1921520",
    "end": "1929049"
  },
  {
    "text": "And so what this will\ndo is it'll give you an ellipsoid in the\noriginal space that tells if you set your--",
    "start": "1929050",
    "end": "1935760"
  },
  {
    "text": "this is where you\nwant to set your-- this is how you want\nto set those values. And you get an ellipsoidal safe\nset or something like that.",
    "start": "1935760",
    "end": "1945159"
  },
  {
    "text": "Makes sense? And then you could do very\nweird stuff like here,",
    "start": "1945160",
    "end": "1951430"
  },
  {
    "text": "we've separated these\npoints by a quartic. But anyway, once\nyou get the idea,",
    "start": "1951430",
    "end": "1958120"
  },
  {
    "text": "you can do anything\nyou like with it. Although, you have\nto admit it, looks--",
    "start": "1958120",
    "end": "1963669"
  },
  {
    "text": "well, I'll try one for you. I give you a set of-- I give you a set of points,\nsome xs and some ys.",
    "start": "1963670",
    "end": "1968810"
  },
  {
    "text": "And I say, I'd like\nyou to separate them by a minimum degree polynomial.",
    "start": "1968810",
    "end": "1974467"
  },
  {
    "text": "Now I have to tell\nyou what the degree of a polynomial of x and y is. But let's say it's the maximum--",
    "start": "1974467",
    "end": "1979710"
  },
  {
    "text": "a polynomial, sum it's a linear\ncombination of xi to the P i,",
    "start": "1979710",
    "end": "1988440"
  },
  {
    "text": "y to the-- sorry, x to\nthe P i, y to the qi. I'm going to take p\nplus q as the degree.",
    "start": "1988440",
    "end": "1995520"
  },
  {
    "text": "So someone tell me, can\nyou solve that problem? And what kind of\na problem is it? ",
    "start": "1995520",
    "end": "2004250"
  },
  {
    "text": "How do you minimize the degree\nof a polynomial discriminator for a given data?",
    "start": "2004250",
    "end": "2009770"
  },
  {
    "text": " First of all, could you do it?",
    "start": "2009770",
    "end": "2015890"
  },
  {
    "text": "Yeah? Iterate. Yeah. By iterate, you\nmean try degree 1?",
    "start": "2015890",
    "end": "2021289"
  },
  {
    "text": "Otherwise known as a hyperplane? It's a fail, then you say I'm\ngoing to try quadratic, fail.",
    "start": "2021290",
    "end": "2027019"
  },
  {
    "text": "Cubic, succeeds,\nthen you're done. That was your algorithm? I like it. Perfectly good.",
    "start": "2027020",
    "end": "2033860"
  },
  {
    "text": "Is it anything else? We have a name for it. That's just quasi\nconvex optimization",
    "start": "2033860",
    "end": "2041240"
  },
  {
    "text": "because the degree of a\npolynomial is actually-- I mean it's a silly one\nbut it's a quasi convex",
    "start": "2041240",
    "end": "2047840"
  },
  {
    "text": "function because I list\nout all the coefficients-- Let's just do it\nfor one variable. I list the coefficients\nof a polynomial.",
    "start": "2047840",
    "end": "2054319"
  },
  {
    "text": "And the degree is I look along\nthe vector for the largest",
    "start": "2054320",
    "end": "2059870"
  },
  {
    "text": "coefficient that's not 0. That's actually quasi convex.",
    "start": "2059870",
    "end": "2065058"
  },
  {
    "text": " You just go on and\non with these things. You could probably write a paper\nabout some of these things.",
    "start": "2065059",
    "end": "2072388"
  },
  {
    "text": "I mean, hilariously. Actually, almost certainly. It actually would probably\nbe better than a lot. Anyway, OK, I'll\nstop right there.",
    "start": "2072389",
    "end": "2078949"
  },
  {
    "text": " So our last topic is called\nplacement and facility",
    "start": "2078949",
    "end": "2085339"
  },
  {
    "text": "location. And there's a whole bunch of\nproblems that look like this. So it typically goes down in\nlike two or three dimensions",
    "start": "2085340",
    "end": "2093620"
  },
  {
    "text": "right but there's cases where it\ngoes down in higher dimensions. And the way it\nworks typically is",
    "start": "2093620",
    "end": "2099020"
  },
  {
    "text": "some of the positions are given\nand the others are variables. And then for each\npair of points,",
    "start": "2099020",
    "end": "2105500"
  },
  {
    "text": "I have a function that's\na function of the two points, the two locations.",
    "start": "2105500",
    "end": "2111525"
  },
  {
    "text": "I mean actually, in\nmany cases, they're 0, meaning it doesn't\nreally matter. And then you just\nwant to minimize",
    "start": "2111525",
    "end": "2118099"
  },
  {
    "text": "the sum of these\nfunctions that are functions of the two locations.",
    "start": "2118100",
    "end": "2124430"
  },
  {
    "text": "And there are a lot\nof interpretations. So I mean the\nfamous one, I think",
    "start": "2124430",
    "end": "2131780"
  },
  {
    "text": "it's called warehouse location\nproblem or something like that. And it basically\nsays what you do",
    "start": "2131780",
    "end": "2137760"
  },
  {
    "text": "is you have a bunch of\nfacilities i and j. fij is the transportation cost\nbetween the two facilities.",
    "start": "2137760",
    "end": "2144000"
  },
  {
    "text": "And that might grow. I don't know, it\nmight be linear. It might grow\nquadratically or something. It doesn't matter.",
    "start": "2144000",
    "end": "2149130"
  },
  {
    "text": "It's something. And then some of the\nlocations are fixed.",
    "start": "2149130",
    "end": "2154260"
  },
  {
    "text": "And then you want to choose\nthe locations of the other so that this total\ncost is minimized,",
    "start": "2154260",
    "end": "2160859"
  },
  {
    "text": "your total transportation cost. This is universal\nin circuit design.",
    "start": "2160860",
    "end": "2166080"
  },
  {
    "text": "So what happens there\nis I don't know. You have any of the many chips\nin my phone, and your phone,",
    "start": "2166080",
    "end": "2173910"
  },
  {
    "text": "all your electronics\nwould have little cells. I mean, this goes\ndown at many levels but let's do it\nat the gate level.",
    "start": "2173910",
    "end": "2180010"
  },
  {
    "text": "So you might have, I don't\nknow, 10 million gates. Each gate is connected\nto an order of magnitude",
    "start": "2180010",
    "end": "2187980"
  },
  {
    "text": "three or four others, roughly. I mean some have big fan\nand some have big fan out.",
    "start": "2187980",
    "end": "2194280"
  },
  {
    "text": "But mostly, they're connected\nto between one and three others. Or actually, I guess two\nand whatever, four others,",
    "start": "2194280",
    "end": "2200160"
  },
  {
    "text": "something like that. Then what you want\nto do is you want to choose where these\ngates are going to go.",
    "start": "2200160",
    "end": "2206279"
  },
  {
    "text": "And you want the ones that\nare connected to each other to be nearby. And there, you would actually\ntake this thing, the cost.",
    "start": "2206280",
    "end": "2216329"
  },
  {
    "text": "This is 0 if cell i\nand cell j are not connected to each other.",
    "start": "2216330",
    "end": "2221980"
  },
  {
    "text": "And this would simply be\nsomething like the L1 norm if they are.",
    "start": "2221980",
    "end": "2227099"
  },
  {
    "text": "The L1 norm because when\nyou run wires on a circuit, you don't run like this.",
    "start": "2227100",
    "end": "2232349"
  },
  {
    "text": "You go this way and then you go\nthrough a via to another layer and then you go that way,\nor something like that.",
    "start": "2232350",
    "end": "2237570"
  },
  {
    "text": "Everybody got that? So this is universally used. ",
    "start": "2237570",
    "end": "2245370"
  },
  {
    "text": "So that's an example. We'll look at some\nexamples here. I mean, just a baby example\njust so you can visualize it.",
    "start": "2245370",
    "end": "2253260"
  },
  {
    "text": "And here, by the way,\nthe idea of designing penalties and functions\njust comes up again.",
    "start": "2253260",
    "end": "2259950"
  },
  {
    "text": "So here it is. I guess these ones on\nthe boundary we imagine are fixed points.",
    "start": "2259950",
    "end": "2265230"
  },
  {
    "text": "In a circuit, those\nwould be something that you've already settled on. Or it could be\nsomething like a pin.",
    "start": "2265230",
    "end": "2271530"
  },
  {
    "text": "You'd say that's where\nthe external pin comes in. It's locked down,\nthat's where it is. That's where that comes from.",
    "start": "2271530",
    "end": "2277950"
  },
  {
    "text": "And then you're\nplacing these things. So let's see what they are--\nlet's see if this makes sense.",
    "start": "2277950",
    "end": "2284819"
  },
  {
    "text": "In this first case, so\nwhat we're going to do is we're going to minimize. And the lines here\nshow you it's a graph",
    "start": "2284820",
    "end": "2292140"
  },
  {
    "text": "and it tells you which things\nare connected to which others. And what we do is on every one\nof those, we take the distance,",
    "start": "2292140",
    "end": "2299520"
  },
  {
    "text": "in this case, the Euclidean\ndistance between the two and we take a function of it. So if we literally just\nminimize the Euclidean distance,",
    "start": "2299520",
    "end": "2306060"
  },
  {
    "text": "we get this thing\nhere like this. So whatever this is, this is\nthe arrangement of those seven",
    "start": "2306060",
    "end": "2311730"
  },
  {
    "text": "or whatever black dots\nin there in such a way that the total length of all\nof those edges is minimized.",
    "start": "2311730",
    "end": "2319020"
  },
  {
    "text": "Everybody got that? Now we go to--",
    "start": "2319020",
    "end": "2325690"
  },
  {
    "text": "now we minimize the\nsum of the squares. By the way, this is silly. I mean this is in a\nlinear algebra class",
    "start": "2325690",
    "end": "2331095"
  },
  {
    "text": "because it's just\na least squares problem with\nequality constraints and that's gotten analytical. It doesn't matter.",
    "start": "2331095",
    "end": "2337230"
  },
  {
    "text": "But that's what that is. And what happened? They got more spread out. And I'd like someone to explain.",
    "start": "2337230",
    "end": "2343645"
  },
  {
    "text": " Just anthropomorphize it.",
    "start": "2343645",
    "end": "2351340"
  },
  {
    "text": "So why would that happen? By the way, this is\nthe fourth power here.",
    "start": "2351340",
    "end": "2359380"
  },
  {
    "text": "And they get spread\nout even more. Somebody? Yeah? [INAUDIBLE] in the\nfirst one is it squared?",
    "start": "2359380",
    "end": "2367822"
  },
  {
    "text": "You mean in this one? No, compared to the first. Sorry. In the first one,\nbasically if you",
    "start": "2367822",
    "end": "2375262"
  },
  {
    "text": "were going to explain\nthis cost function, you'd say it's\npretty chill about-- compared to a squaring\nthe distance, just",
    "start": "2375262",
    "end": "2382460"
  },
  {
    "text": "taking the distance, it's\npretty chill about long lengths.",
    "start": "2382460",
    "end": "2387680"
  },
  {
    "text": "And so sure enough, you get\na bunch of long lengths. In the second one, it's\nway less chill about that.",
    "start": "2387680",
    "end": "2395766"
  },
  {
    "text": "That's what you're going to say? [INAUDIBLE] Exactly. Yeah? It's chill about the--",
    "start": "2395767",
    "end": "2401750"
  },
  {
    "text": "Yeah. And then this one is chill\nabout big, long lengths.",
    "start": "2401750",
    "end": "2407150"
  },
  {
    "text": "But it still cares about\nsmall so it actually has an incentive to\npush things together even when they're pretty close.",
    "start": "2407150",
    "end": "2413390"
  },
  {
    "text": "This one here, this\nis square and so what that means\nis it doesn't like long lengths at all because\nyou square of the length.",
    "start": "2413390",
    "end": "2420680"
  },
  {
    "text": "Short distances are actually\nOK because short squared is real small.",
    "start": "2420680",
    "end": "2427470"
  },
  {
    "text": "Everybody got this? And so once you see that,\nyou understand all of this.",
    "start": "2427470",
    "end": "2433260"
  },
  {
    "text": "And then I have a\nquestion for you. ",
    "start": "2433260",
    "end": "2439860"
  },
  {
    "text": "What would you imagine if I\nused the following function?",
    "start": "2439860",
    "end": "2445470"
  },
  {
    "text": "Did I write it as h of-- I did. So h of u is going to be--",
    "start": "2445470",
    "end": "2453750"
  },
  {
    "text": "I'll just draw it if\nyou don't mind, 0, some distance d, and then that.",
    "start": "2453750",
    "end": "2459690"
  },
  {
    "text": "So suppose it's dead\nzone linear like that. ",
    "start": "2459690",
    "end": "2466695"
  },
  {
    "text": "What does it mean?  If I did that, if I did\nplacement with that function,",
    "start": "2466695",
    "end": "2472400"
  },
  {
    "text": "what it would say\nis you know what? If you're within a hidden\ndistance d, I'm totally cool.",
    "start": "2472400",
    "end": "2477680"
  },
  {
    "text": "And actually, I\ndon't get happier if you put things\neven closer than d. Everybody got it?",
    "start": "2477680",
    "end": "2485010"
  },
  {
    "text": "And I want to know-- I would like to know what do\nyou think would happen if-- ",
    "start": "2485010",
    "end": "2492480"
  },
  {
    "text": "A lot of values get pushed\nto d if they're above d. Exactly. So a lot of distance\nvalues would",
    "start": "2492480",
    "end": "2500040"
  },
  {
    "text": "be at d just heuristically. Because basically it\nsays, look, the incentive",
    "start": "2500040",
    "end": "2506550"
  },
  {
    "text": "to push things closer once\nyou get within d of someone-- it's a neighbor if\nyou have an edge.",
    "start": "2506550",
    "end": "2512730"
  },
  {
    "text": "Once you get within d, this\nthing doesn't care anymore. And you might as well just\ngo work on other stuff. Go find things whose distance\nis bigger than d and work",
    "start": "2512730",
    "end": "2519900"
  },
  {
    "text": "on those. I mean, I'm completely\nanthropomorphizing it but that's what-- make sense?",
    "start": "2519900",
    "end": "2525210"
  },
  {
    "text": "Actually what's cool about\nthat is the placement problem gets hard, non-convex\nwhen you add one more",
    "start": "2525210",
    "end": "2533790"
  },
  {
    "text": "extremely realistic constraint. And it's this. I'll just mention\nthis because if there are people here who actually\ndo circuits or stuff like that.",
    "start": "2533790",
    "end": "2541839"
  },
  {
    "text": "So a more realistic placement\nproblem is something like this. Each of these things\nactually is like a cell.",
    "start": "2541840",
    "end": "2550289"
  },
  {
    "text": "It might look like this and\nthis one looks like this. And maybe the xis\nare the center.",
    "start": "2550290",
    "end": "2555970"
  },
  {
    "text": "And an extremely\ncommon constraint is that they don't overlap. I mean duh.",
    "start": "2555970",
    "end": "2562150"
  },
  {
    "text": "So that constraint\nis non-convex. Everybody got that?",
    "start": "2562150",
    "end": "2567700"
  },
  {
    "text": "Here's what's cool. If you do this, that's actually\na pretty good convex heuristic",
    "start": "2567700",
    "end": "2574049"
  },
  {
    "text": "for getting a layout where\nthings are at least d apart.",
    "start": "2574050",
    "end": "2579270"
  },
  {
    "text": "Everybody got this? And I could actually tune this. If these were squares,\nfor each edge,",
    "start": "2579270",
    "end": "2586680"
  },
  {
    "text": "I could make d equal to\nthe radius of this one",
    "start": "2586680",
    "end": "2593339"
  },
  {
    "text": "plus the radius of that one. And in that case,\nit's a heuristic but I will tend to get\nthings that don't overlap.",
    "start": "2593340",
    "end": "2599670"
  },
  {
    "text": " Make sense? ",
    "start": "2599670",
    "end": "2607390"
  },
  {
    "text": "So that's placement. So this actually\nfinishes a whole section",
    "start": "2607390",
    "end": "2612670"
  },
  {
    "text": "of the course that was\non just applications.",
    "start": "2612670",
    "end": "2618250"
  },
  {
    "text": "I mean, it was just\na whirlwind tour. You're encountering a\nbunch of other applications in your homework.",
    "start": "2618250",
    "end": "2623837"
  },
  {
    "text": "And I think the idea is just\nto see a whole lot of these in different fields,\ndifferent areas, how it works, and\nthen also know about--",
    "start": "2623837",
    "end": "2631720"
  },
  {
    "text": "I mean of course in the homework\nand watching these things, I'm telling you\nwhat the problem is.",
    "start": "2631720",
    "end": "2637575"
  },
  {
    "text": "But one of the things you\nwant to be thinking about is if you encountered\na problem, how",
    "start": "2637575",
    "end": "2644050"
  },
  {
    "text": "would you set it up so\nthat it would do something that you wanted to do I mean. Which is the idea behind\ndesigning penalty functions",
    "start": "2644050",
    "end": "2651820"
  },
  {
    "text": "and things like that.  Now, the next part of\nthe course is actually",
    "start": "2651820",
    "end": "2659890"
  },
  {
    "text": "going to be on how do you\nactually solve problems. So that's going to\nbe the next course.",
    "start": "2659890",
    "end": "2668050"
  },
  {
    "text": "Sorry, the next\nsection of the course. And we'll probably have\na small bit at the end where we'll actually do some\nother interesting applications.",
    "start": "2668050",
    "end": "2676100"
  },
  {
    "text": "But this is important\nso we'll do this first. So we're going to\ntalk about what",
    "start": "2676100",
    "end": "2682210"
  },
  {
    "text": "happens when, let's say, you\ncall the solve method in CVXPy.",
    "start": "2682210",
    "end": "2688359"
  },
  {
    "text": "I think actually we had\ndiscussions about what happens at the highest level. At the highest level\nwhat happens is",
    "start": "2688360",
    "end": "2694090"
  },
  {
    "text": "it takes your problem\nand it transforms it. Just you get an\nequivalent problem, and then you get another\nequivalent problem,",
    "start": "2694090",
    "end": "2700870"
  },
  {
    "text": "and another one. And you reduce it through\na chain of equivalences until you get to some\nstandard form we can solve,",
    "start": "2700870",
    "end": "2708309"
  },
  {
    "text": "like a linear program, quadratic\nprogram, or second order cone programming, or\nsemidefinite program.",
    "start": "2708310",
    "end": "2713650"
  },
  {
    "text": "So that's the first part. We're actually not going to\ntalk about that, although it is super interesting. But it just uses the\nideas from the beginning",
    "start": "2713650",
    "end": "2719495"
  },
  {
    "text": "of the class of a reduction\nof equivalent problems. So we're not going\nto talk about that. That's what CVXPy does.",
    "start": "2719495",
    "end": "2725720"
  },
  {
    "text": "Now the next section\nof the course is like how do you\nsolve an LP, or a SOCP,",
    "start": "2725720",
    "end": "2731210"
  },
  {
    "text": "or a semidefinite\nprogram, that's what we're going to look at. And also, we're going\nto work our way up.",
    "start": "2731210",
    "end": "2737240"
  },
  {
    "text": "And the way that's\ngoing to work is we're going to start at\nthe very basics with just",
    "start": "2737240",
    "end": "2743330"
  },
  {
    "text": "linear algebra. So how do you solve\nlinear algebra things. And then you'll see that\nwe'll start with that.",
    "start": "2743330",
    "end": "2751220"
  },
  {
    "text": "On top of that, I'll\nshow you how to solve-- well, let's see,\nwe'll show you how",
    "start": "2751220",
    "end": "2756260"
  },
  {
    "text": "to solve quadratic problems. Oh, by the way, solving\nquadratic problems, that's linear algebra.",
    "start": "2756260",
    "end": "2762050"
  },
  {
    "text": "Then the next step\nup, this is just to give you the big picture\nof what we're going to do. By next week or two\nweeks, then we'll",
    "start": "2762050",
    "end": "2768920"
  },
  {
    "text": "say something like, OK, we will\nsolve your non-quadratic convex",
    "start": "2768920",
    "end": "2774380"
  },
  {
    "text": "problem by solving a sequence\nof quadratic problems. But solving a quadratic\nproblem is linear algebra.",
    "start": "2774380",
    "end": "2780847"
  },
  {
    "text": "And then the stuff we're\ngoing to talk about right now comes into play. And then we'll go above that.",
    "start": "2780847",
    "end": "2786277"
  },
  {
    "text": "And eventually we'll get\nto interior point methods which will handle constraints\nand everything else all this way. So that's the big picture.",
    "start": "2786277",
    "end": "2794810"
  },
  {
    "text": "So what we're going\nto do is we're going to go all the\nway down to the bottom. But we're not going to\ngo to the gate level or anything like that.",
    "start": "2794810",
    "end": "2800417"
  },
  {
    "text": "We're going to go to the\nfloating point level. So at the floating\npoint level-- so",
    "start": "2800417",
    "end": "2805440"
  },
  {
    "text": "we're going to talk about\nnumerical linear algebra background. Actually, honestly, I think\neveryone needs to know this.",
    "start": "2805440",
    "end": "2811650"
  },
  {
    "text": "I mean, I'm just going to\ngive you a little tiny bit. There's an appendix\non this in the book.",
    "start": "2811650",
    "end": "2816990"
  },
  {
    "text": "Please read it. Actually, just because\nthis is useful for--",
    "start": "2816990",
    "end": "2823500"
  },
  {
    "text": "anyone here, if you\ndo anything that has anything to do with math\nand computation, anything,",
    "start": "2823500",
    "end": "2828870"
  },
  {
    "text": "which is, I mean, pretty\nmuch if you're in this class, you're in that category,\nyou need to know this.",
    "start": "2828870",
    "end": "2834690"
  },
  {
    "text": "And to me it's\ncompletely unacceptable to not know at least\na bit about how",
    "start": "2834690",
    "end": "2840303"
  },
  {
    "text": "linear equations are solved. And I'll tell you why. Because for example,\nyou're going to learn crazy things like we'll\nsee cases where on my phone",
    "start": "2840303",
    "end": "2848100"
  },
  {
    "text": "I can solve a set of linear\nequations that's a million by a million.",
    "start": "2848100",
    "end": "2853170"
  },
  {
    "text": "So you need to know\nwhat's easy, what's hard, and all that kind of stuff. And it is not intuitive until\nyou have seen this material.",
    "start": "2853170",
    "end": "2861710"
  },
  {
    "text": "Some of it is not\nobvious at all.  So that's the big picture.",
    "start": "2861710",
    "end": "2871010"
  },
  {
    "text": "And so we'll start just by\ntalking about matrix structure",
    "start": "2871010",
    "end": "2877060"
  },
  {
    "text": "and algorithm complexity. So suppose we want to solve\na set of linear equations,",
    "start": "2877060",
    "end": "2883690"
  },
  {
    "text": "like Ax equals b here. So we want to solve that. If A is for general methods,\nit grows like n cubed.",
    "start": "2883690",
    "end": "2892690"
  },
  {
    "text": "Oh, and I should mention\nsomething about this. In theoretical computer\nscience, actually the number",
    "start": "2892690",
    "end": "2898810"
  },
  {
    "text": "is not n cubed. Does anyone here know what\nthe current number is?",
    "start": "2898810",
    "end": "2904200"
  },
  {
    "text": "Somebody here has got to know? Go ahead. By the way, I wouldn't know.",
    "start": "2904200",
    "end": "2909690"
  },
  {
    "text": "So if you say the wrong\nnumber, it's totally fine. I mean I know the range it is. What is it?",
    "start": "2909690",
    "end": "2914913"
  },
  {
    "text": "I know it's between 2 and 3. It's like 2.4. Yeah, OK. It's around 2.4.",
    "start": "2914913",
    "end": "2920400"
  },
  {
    "text": "Maybe 2.3, something. I have no idea. [INAUDIBLE] Microsoft\nand Google because they",
    "start": "2920400",
    "end": "2926460"
  },
  {
    "text": "use reinforcement learning\nwith a faster algorithm. Awesome. So it's what, 2.3 now?",
    "start": "2926460",
    "end": "2931830"
  },
  {
    "text": "Somewhere around there. Yeah, OK, it's 2.3. So end of the 2.3. Now, I mean, that is\nfascinating because it",
    "start": "2931830",
    "end": "2940770"
  },
  {
    "text": "can't be less than n\nsquared because you got to look at-- you got to look\nat all entries of the matrix. So you might imagine how could\nyou do this without n cubed.",
    "start": "2940770",
    "end": "2949470"
  },
  {
    "text": "Anyway, you can. And it turns out\nthose algorithms are utterly and completely\nuseless in practice.",
    "start": "2949470",
    "end": "2954690"
  },
  {
    "text": "Just completely. I mean, look, maybe sometime\nin the future they won't be. But right, now\nthey're just useless.",
    "start": "2954690",
    "end": "2962339"
  },
  {
    "text": "Super interesting. And weirdly, the\nmethods people use",
    "start": "2962340",
    "end": "2967770"
  },
  {
    "text": "to show that low\ncomplexity in theory are actually extremely\nclose to the methods people use to make solving these\nthings fast in practice.",
    "start": "2967770",
    "end": "2975880"
  },
  {
    "text": "So I will say what\nthat is shortly. And that part is\nnot obvious at all.",
    "start": "2975880",
    "end": "2981020"
  },
  {
    "text": "So the idea is super useful\nbut the actual results are utterly useless, those.",
    "start": "2981020",
    "end": "2986710"
  },
  {
    "text": "Back to this. So what's cool is if A has\ngot some structure to it,",
    "start": "2986710",
    "end": "2993940"
  },
  {
    "text": "then you can actually\nsolve this a lot faster. I mean here's a no-brainer. What if I told\nyou A is diagonal?",
    "start": "2993940",
    "end": "3001120"
  },
  {
    "text": "Then you're like,\nyeah, I know how to solve Ax equals b\nwhen A is diagonal. But I said, what if was\na million by a million?",
    "start": "3001120",
    "end": "3009880"
  },
  {
    "text": "You'd say, yeah, I can do\nthat in about 300 microseconds on my phone.",
    "start": "3009880",
    "end": "3015850"
  },
  {
    "text": "Everybody see this? And you go, but how would\nyou store a million-- and you go, well,\nthat's the point. I'm only going to store\nthe diagonal entries.",
    "start": "3015850",
    "end": "3022060"
  },
  {
    "text": "I'm not going to store\nthe ones through zeros. I mean, that's an extreme case. I think most people\nwould get that.",
    "start": "3022060",
    "end": "3028150"
  },
  {
    "text": "Profoundly stupid\ncase but there's going to be others where\nit is not obvious at all.",
    "start": "3028150",
    "end": "3035140"
  },
  {
    "text": "And we'll get to those.  So here's how this works.",
    "start": "3035140",
    "end": "3040184"
  },
  {
    "text": "And it's really cool. The history is very cool. It goes back to the\n'60s, maybe even earlier.",
    "start": "3040185",
    "end": "3045980"
  },
  {
    "text": "So a floating point\noperation, it's like an addition of two floating\npoint numbers, subtraction,",
    "start": "3045980",
    "end": "3052020"
  },
  {
    "text": "multiplication, or division. Truth is that's a\nbig old lie because I think a division takes\nsomething eight times",
    "start": "3052020",
    "end": "3057200"
  },
  {
    "text": "as long as an add or\nsomething like that. But look, this is\njust going to be--",
    "start": "3057200",
    "end": "3062810"
  },
  {
    "text": "this is just for\norder of magnitude. I'll also say the reasons\nwhy all of this model is completely wrong. But it's fine.",
    "start": "3062810",
    "end": "3068660"
  },
  {
    "text": "It's good enough for this. And some people got\nweird in the '60s",
    "start": "3068660",
    "end": "3073880"
  },
  {
    "text": "and they decided a floating\npoint operation was actually a multiply, plus an add,\nplus some indexing work.",
    "start": "3073880",
    "end": "3080960"
  },
  {
    "text": "And you're like, OK, whatever.  So here's what you do is you\nlook at an algorithm that",
    "start": "3080960",
    "end": "3087589"
  },
  {
    "text": "does stuff and you count\nthe number of flops as a--",
    "start": "3087590",
    "end": "3094280"
  },
  {
    "text": "typically polynomial. There might be a log in\nthere which people just-- a log is just like-- you\njust change it to a constant",
    "start": "3094280",
    "end": "3100170"
  },
  {
    "text": "because that's what it\nreally is in practice. So you express it as\na polynomial function",
    "start": "3100170",
    "end": "3106339"
  },
  {
    "text": "of the problem dimension and\nyou only keep the leading terms because this is very crude. ",
    "start": "3106340",
    "end": "3113280"
  },
  {
    "text": "So it is not remotely a good\npredictor of computation time",
    "start": "3113280",
    "end": "3119280"
  },
  {
    "text": "on modern computers. And this is just changing. It's getting all very weird\nand all that kind of stuff. I mean that should\nbe kind of obvious.",
    "start": "3119280",
    "end": "3126395"
  },
  {
    "text": " But it's useful as a rough\nestimate of complexity.",
    "start": "3126395",
    "end": "3133019"
  },
  {
    "text": "And a lot of people divide\nall these things in their head into various groups like that.",
    "start": "3133020",
    "end": "3138460"
  },
  {
    "text": "So the way, and this\nis also historical, so vector-vector operations\nare ones that take two vectors",
    "start": "3138460",
    "end": "3148200"
  },
  {
    "text": "and you have an inner product. What does that take? Well, I have to multiply\nxi by yi for each,",
    "start": "3148200",
    "end": "3153870"
  },
  {
    "text": "so that's n multiplies. Then I have n minus\n1 adds because I have to add the x1y1 y plus\nx2y2 and blah, blah, blah.",
    "start": "3153870",
    "end": "3162500"
  },
  {
    "text": "So basically, inner product,\npeople would just say n. I mean, the 2 is silly\nso you just say n.",
    "start": "3162500",
    "end": "3168320"
  },
  {
    "text": " The sum would be the same thing. It's just n flops.",
    "start": "3168320",
    "end": "3175600"
  },
  {
    "text": "And by the way, these\nhave very cool names that's also a retro name.",
    "start": "3175600",
    "end": "3180820"
  },
  {
    "text": "So if you know this,\nyou can impress people. So the first one, this is\ncalled BLAS, B-L-A-S, level 1.",
    "start": "3180820",
    "end": "3189460"
  },
  {
    "text": "Second is called BLAS level 2. And that's BLAS level 3. BLAS is Basic Linear\nAlgebra Subroutines.",
    "start": "3189460",
    "end": "3196180"
  },
  {
    "text": "That's from the 1960s.",
    "start": "3196180",
    "end": "3201450"
  },
  {
    "text": "But it's actually a\nvery good distinction to be thinking about. ",
    "start": "3201450",
    "end": "3209070"
  },
  {
    "text": "And then by the way--\nand some of this persists but gets really\ncrazy when you start",
    "start": "3209070",
    "end": "3214619"
  },
  {
    "text": "looking at things like GPUs. And god help you if you\nare looking at TPUs.",
    "start": "3214620",
    "end": "3220580"
  },
  {
    "text": "But anyway, on GPUs, they're\ncrazy optimized for this.",
    "start": "3220580",
    "end": "3226760"
  },
  {
    "text": "So there you can just get\nlike just insane speed.",
    "start": "3226760",
    "end": "3231860"
  },
  {
    "text": "So anyway, I'll make some\nmentions of that later. And these are things\nyou should know.",
    "start": "3231860",
    "end": "3238497"
  },
  {
    "text": "If you're in the middle of--\nif you're putting something together and you'd say that--",
    "start": "3238497",
    "end": "3243530"
  },
  {
    "text": "you'd say, you can't multiply\nthose two matrices together. You should step back and say,\noh, that's BLAS level three.",
    "start": "3243530",
    "end": "3250819"
  },
  {
    "text": "And I think our\nfriends at NVIDIA have a really good\nidea about that. I think we can do\njust fine, thank you.",
    "start": "3250820",
    "end": "3257089"
  },
  {
    "text": " So you can also\nlook at the numbers",
    "start": "3257090",
    "end": "3263000"
  },
  {
    "text": "here that BLAS level 1 are\nlinear in the single dimension. BLAS level 2, if you're\ngoing to form Ax,",
    "start": "3263000",
    "end": "3271670"
  },
  {
    "text": "matrix vector multiply,\nthat's going to be-- it's basically mn, the\nproduct of the two.",
    "start": "3271670",
    "end": "3278670"
  },
  {
    "text": "And let's see. Yeah, this is fine. I mean if things are sparse,\nit gets very interesting.",
    "start": "3278670",
    "end": "3285260"
  },
  {
    "text": "That's a structure\neveryone should know about. So sparse, how do you\ncalculate the inner product",
    "start": "3285260",
    "end": "3291230"
  },
  {
    "text": "of two sparse vectors? And roughly speaking,\nhow much does it cost?",
    "start": "3291230",
    "end": "3297950"
  },
  {
    "text": " I'll give you two vectors,\neach dimension 100 million.",
    "start": "3297950",
    "end": "3306350"
  },
  {
    "text": "They're sparse. Each one has 100,000 entries. You tell me. I want the inner\nproduct of the two.",
    "start": "3306350",
    "end": "3313220"
  },
  {
    "text": "What does it take? How do you do it? ",
    "start": "3313220",
    "end": "3318390"
  },
  {
    "text": "I'll say I want to know\nwhat the flop count is. ",
    "start": "3318390",
    "end": "3326380"
  },
  {
    "text": "Yeah? What do you do? Go ahead. You cycle through the\nnon-zero elements. Yeah. What you do is--",
    "start": "3326380",
    "end": "3332069"
  },
  {
    "text": "the only time you ever\nhave to do anything is when there's an entry that's\nnon-zero in both vectors.",
    "start": "3332070",
    "end": "3340428"
  },
  {
    "text": "So here's a big upper\nbound on the number of flops it could take. It's the minimum of the\nnumber of non-zeros.",
    "start": "3340428",
    "end": "3348599"
  },
  {
    "text": "Everybody got that? Of the two. So that's an example. Matrix vector, same story.",
    "start": "3348600",
    "end": "3355800"
  },
  {
    "text": "If A is sparse and I multiply by\na vector, that's going to be--",
    "start": "3355800",
    "end": "3362833"
  },
  {
    "text": "you're going to have a whole\nlot-- it's going to have to-- it's going to depend on\ncapital N, the number of non-zero elements.",
    "start": "3362833",
    "end": "3367920"
  },
  {
    "text": " And there's other structures. What if I gave you A as\na low rank factorization?",
    "start": "3367920",
    "end": "3376950"
  },
  {
    "text": "So suppose I gave you A as a-- A is a million by million\nmatrix which you can't store.",
    "start": "3376950",
    "end": "3382860"
  },
  {
    "text": "But what if I gave it to you\nas the product of a million by 20 matrix and a\n20 by million matrix?",
    "start": "3382860",
    "end": "3389910"
  },
  {
    "text": "Both of which I can\nstore on my phone. Then how do you multiply?",
    "start": "3389910",
    "end": "3395920"
  },
  {
    "text": "How do you actually\nform Ax in that case? Here would be the wrong way.",
    "start": "3395920",
    "end": "3403450"
  },
  {
    "text": "This is the\nabsolutely wrong way.  what did I multiply-- what\nam I multiplying it by? x.",
    "start": "3403450",
    "end": "3410890"
  },
  {
    "text": "This would be a very poor idea\nbecause the first thing this",
    "start": "3410890",
    "end": "3416619"
  },
  {
    "text": "would do is try to\nattempt to allocate 100 million 100 million matrix\nand then it's game over. Everybody following this?",
    "start": "3416620",
    "end": "3423790"
  },
  {
    "text": "But this is just silly. I mean, no one would do that. That's the right way.",
    "start": "3423790",
    "end": "3430780"
  },
  {
    "text": "And then this one,\nyou just work out what it is and so on, and\nthen work out that one.",
    "start": "3430780",
    "end": "3437080"
  },
  {
    "text": "So that's another very\ncommon structure is low rank. ",
    "start": "3437080",
    "end": "3445650"
  },
  {
    "text": "That's good. This is the idea. So this is BLAS\nlevel 1, 2, and 3.",
    "start": "3445650",
    "end": "3452369"
  },
  {
    "text": "These are the different levels. By the way, there's some\nvery interesting things. The complexity of\nmatrix-matrix multiply, these",
    "start": "3452370",
    "end": "3459480"
  },
  {
    "text": "are n by n matrix. Again, our friends in\ntheoretical computer science, it's like 2.35 or whatever.",
    "start": "3459480",
    "end": "3466109"
  },
  {
    "text": "It's the same number. If Google figured out a\nbetter number, that's awesome. Good for them. Everybody got that?",
    "start": "3466110",
    "end": "3471990"
  },
  {
    "text": "And it's fine. Actually, I can\ntell you how that works because the exact same\nmethod is used in practice.",
    "start": "3471990",
    "end": "3479809"
  },
  {
    "text": "So I'm going to show\nyou that just for fun. Not the details.",
    "start": "3479810",
    "end": "3485640"
  },
  {
    "text": "Actually maybe almost all the\ndetails, but it doesn't matter. So if you multiply\ntwo-- if I'm going",
    "start": "3485640",
    "end": "3492810"
  },
  {
    "text": "to multiply two\nmatrices and this is A, B, C, D, E, F, G,\nH, something like that.",
    "start": "3492810",
    "end": "3501250"
  },
  {
    "text": "So what you do is\nyou just partition it into blocks like this.",
    "start": "3501250",
    "end": "3506290"
  },
  {
    "text": "And you can work out what it is. I forget what these entries are. This is AE plus BG or\nsomething goes here.",
    "start": "3506290",
    "end": "3514330"
  },
  {
    "text": "And so then you have\na recursive method that says you just recurse\ndown and each of these",
    "start": "3514330",
    "end": "3520690"
  },
  {
    "text": "is given by blocks as well. Everybody following this? And now comes the smart part. So now first we're going to\ndo some theoretical computer",
    "start": "3520690",
    "end": "3527470"
  },
  {
    "text": "science. And that is somebody\nfigured out how to work this out with seven\nmatrix-matrix multiplies, not",
    "start": "3527470",
    "end": "3535450"
  },
  {
    "text": "eight. Because your naive\nmethod would use eight. They did it with seven. And now you just recurse down.",
    "start": "3535450",
    "end": "3541570"
  },
  {
    "text": "And you're going to\nget a number that-- it's not going to be n cubed. It's going to be n to the\n2.8 or something like that.",
    "start": "3541570",
    "end": "3548559"
  },
  {
    "text": "Everybody following this? Now this is actually how it\nworks entirely in practice",
    "start": "3548560",
    "end": "3555500"
  },
  {
    "text": "and this is your friend. By the way, normal people do\nnot need to know about this. But it's good for\nyou to know about it.",
    "start": "3555500",
    "end": "3561800"
  },
  {
    "text": "So the way you multiply two\nmatrices, so it depends.",
    "start": "3561800",
    "end": "3568780"
  },
  {
    "text": "Actually, we could even\ndo this-- just first let's do single thread. So single thread is\ngoing to work like this.",
    "start": "3568780",
    "end": "3576339"
  },
  {
    "text": "By the way, if you\nmultiply these out, you don't use the silly seven\nmultiplies versus eight.",
    "start": "3576340",
    "end": "3581620"
  },
  {
    "text": "It's just eight multiplies. So if I say take your matrix,\nchop it up into sub-blocks,",
    "start": "3581620",
    "end": "3587859"
  },
  {
    "text": "chop those into sub-blocks,\nand then just write a recursive thing, and go. Then someone says how many\nflops do you end up doing?",
    "start": "3587860",
    "end": "3595069"
  },
  {
    "text": "And the answer is n cubed. So it's the same as if you\njust wrote a one line, a C",
    "start": "3595070",
    "end": "3600220"
  },
  {
    "text": "program that said walk\nacross the first one and down the first\nrow and fill them. That kind of thing.",
    "start": "3600220",
    "end": "3605710"
  },
  {
    "text": "Everybody following me on this? So you'd say, you haven't\nchanged the number of flops.",
    "start": "3605710",
    "end": "3610930"
  },
  {
    "text": "How on Earth could\nthis be faster? Again, anyone want\nto suggest something.",
    "start": "3610930",
    "end": "3616510"
  },
  {
    "text": "You'd have to know a little\nbit about computer architecture and how computers work. But I feel like all of us should\nknow a little bit about that.",
    "start": "3616510",
    "end": "3622510"
  },
  {
    "text": "Yes? It's cache optimized. Yeah, that's exactly right. It's cache optimized.",
    "start": "3622510",
    "end": "3627750"
  },
  {
    "text": "So what you do is-- the lowest level in\nthe hierarchy are--",
    "start": "3627750",
    "end": "3633840"
  },
  {
    "text": "I don't know, 16 by 16 matrices. Why? Because you can\nmultiply 16 by 16 matrices directly at the\nlowest level of cache.",
    "start": "3633840",
    "end": "3643650"
  },
  {
    "text": "The next group up is\n256 by 256 matrices. You can multiply two of those\nusing your level 2 cache.",
    "start": "3643650",
    "end": "3650100"
  },
  {
    "text": "Everybody following this? And by the way, this\nis from the 1960s.",
    "start": "3650100",
    "end": "3656230"
  },
  {
    "text": "1970s? No, maybe '70s. Let's go with that. Everybody following this?",
    "start": "3656230",
    "end": "3662040"
  },
  {
    "text": "So it's actually\ncompletely stunning what happens when\nyou do this right.",
    "start": "3662040",
    "end": "3667710"
  },
  {
    "text": "Oh, and by the way, the\nsame things go to a world where you have a lot of cores. So this could be a\nGPU with 10,000 cores.",
    "start": "3667710",
    "end": "3674400"
  },
  {
    "text": "And you say, oh, boy, oh,\nis it good at multiplying? I can multiply 5,000 16\nby 16 matrices by other 16",
    "start": "3674400",
    "end": "3683910"
  },
  {
    "text": "by 16 matrices all\ntogether in 2 microseconds. Everybody following that? So people who work\non these things",
    "start": "3683910",
    "end": "3690792"
  },
  {
    "text": "know exactly what\nthose things are. They know exactly\nwhat they can do. And so then it's the same thing. You'd chop these things\nup into these things.",
    "start": "3690792",
    "end": "3697920"
  },
  {
    "text": "And all of us are\nutterly unaware of this, which is kind of cool.",
    "start": "3697920",
    "end": "3702990"
  },
  {
    "text": "But we benefit like crazy. so everybody following this?",
    "start": "3702990",
    "end": "3709500"
  },
  {
    "text": "So if you ever meet-- I don't know if people even\ndo-- well there are people who do this in my department in CS.",
    "start": "3709500",
    "end": "3714990"
  },
  {
    "text": "So anyway, if you meet one\nof those people, just-- remember I told you\nif you meet someone who works on devices\nand things like that,",
    "start": "3714990",
    "end": "3721079"
  },
  {
    "text": "you should thank them? If you meet someone who works\non the lowest level stuff",
    "start": "3721080",
    "end": "3726450"
  },
  {
    "text": "like this, thank them too. Because they're the ones\nthat allow the rest of us to use like NumPy and\nSciPy, for that matter",
    "start": "3726450",
    "end": "3734130"
  },
  {
    "text": "Torch and things like that\nbecause it's just awesome. What they've done is amazing. And we're the beneficiaries.",
    "start": "3734130",
    "end": "3740260"
  },
  {
    "text": " So if you didn't follow what\nI was saying, that's OK,",
    "start": "3740260",
    "end": "3747330"
  },
  {
    "text": "but you should know\nabout this, I think. Oh, let's talk about speed of\ncurrent compute and things.",
    "start": "3747330",
    "end": "3755460"
  },
  {
    "text": "So you could actually\ndo things like-- that you can do it yourself. And you can actually do\nsome of these calculations",
    "start": "3755460",
    "end": "3763260"
  },
  {
    "text": "and make guesses about how\nlong something's going to take. Or you could actually say,\nit did that calculation",
    "start": "3763260",
    "end": "3769650"
  },
  {
    "text": "at this number of\nflops per second.",
    "start": "3769650",
    "end": "3774750"
  },
  {
    "text": "And by the way-- so anyway, somebody\ntell me what's a-- here, I don't know. It's a four-year-old laptop.",
    "start": "3774750",
    "end": "3781950"
  },
  {
    "text": "What will this do for, I don't\nknow, matrix vector multiplies and stuff like that?",
    "start": "3781950",
    "end": "3787737"
  },
  {
    "text": "By the way, here's a hint. It's measured in\ngigaflops, which is 10 to the 9 flops per second.",
    "start": "3787737",
    "end": "3793410"
  },
  {
    "text": "So what would be a speed number? I mean, you either\nknow this or you don't.",
    "start": "3793410",
    "end": "3798710"
  },
  {
    "text": "But what would be a speed number\nfor a five-year-old laptop? ",
    "start": "3798710",
    "end": "3808780"
  },
  {
    "text": "How many billions\nof flops speed? By the way, that's a lot of\nfloating point operations, just for the record. But how many of the-- how many\nbillions can you do in a second",
    "start": "3808780",
    "end": "3816250"
  },
  {
    "text": "on like a-- how about a newer computer? Anyone?",
    "start": "3816250",
    "end": "3822369"
  },
  {
    "text": "Know the number? Range? ",
    "start": "3822370",
    "end": "3829150"
  },
  {
    "text": "It's between 1 and 10 for this. It could easily be 30 for this.",
    "start": "3829150",
    "end": "3834580"
  },
  {
    "text": "Why? Because people who\nknow what they're doing have optimized matrix-matrix\nmultiply because people",
    "start": "3834580",
    "end": "3841540"
  },
  {
    "text": "do it a lot. what would it be\non a simple GPU?",
    "start": "3841540",
    "end": "3846798"
  },
  {
    "text": "Well, I have a GPU in\nhere for my graphics, so what is it there? Now we're talking 100 easily.",
    "start": "3846798",
    "end": "3853670"
  },
  {
    "text": "That's a baby GPU. And on a real GPU? You start getting\ntowards the teraflops.",
    "start": "3853670",
    "end": "3859570"
  },
  {
    "text": "And then it goes up from there. By the way, these are\njust amazing numbers.",
    "start": "3859570",
    "end": "3865240"
  },
  {
    "text": "And we're the beneficiaries. So I mean just as a\nquick thing, how long does it take to multiply\ntwo 1,000 by 1,000 matrices?",
    "start": "3865240",
    "end": "3874010"
  },
  {
    "text": "Someone want to-- I mean, look it's\norder n cube plot. So that's 10 to the 9. So someone tell me the number?",
    "start": "3874010",
    "end": "3879890"
  },
  {
    "text": " That's a gigaflop. That's a billion flops.",
    "start": "3879890",
    "end": "3886350"
  },
  {
    "text": "How long does it take? I mean, I can just\ndo it right now but I'm not going to because\nI know what would happen.",
    "start": "3886350",
    "end": "3891420"
  },
  {
    "text": "But go ahead, somebody\nwhat's the number? Does that take a minute? You'd say, wait, do you realize,\nlike multiplying 2,000 each",
    "start": "3891420",
    "end": "3899550"
  },
  {
    "text": "of those-- I'll make it sound crazy. You'd say, you have two arrays. Each of them have a\nmillion numbers in them.",
    "start": "3899550",
    "end": "3906270"
  },
  {
    "text": "Everybody following this? And then you have to\nmultiply them together and they all connect\nwith all of them? And you're going to do\na billion multiplies?",
    "start": "3906270",
    "end": "3914369"
  },
  {
    "text": "That's crazy. Everybody following this? So how long does it take? 1/100 second. What's that?",
    "start": "3914370",
    "end": "3919600"
  },
  {
    "text": "1/100 second. That's about right. [CHUCKLES] So it's on the--",
    "start": "3919600",
    "end": "3924839"
  },
  {
    "text": "Put it this way, it's\nmeasured in milliseconds. So 1/100 would be\non a new computer.",
    "start": "3924840",
    "end": "3931560"
  },
  {
    "text": "So this would be\na tenth of this. This would be 100\nmilliseconds here. And it's probably worth siting\ndown seriously pondering",
    "start": "3931560",
    "end": "3941370"
  },
  {
    "text": "like how amazing that is. And there's a lot of\npeople to thank for that.",
    "start": "3941370",
    "end": "3946960"
  },
  {
    "text": "So anyway, if whatever,\nyour roommates or neighbors or something do this kind of\nstuff, you should thank them.",
    "start": "3946960",
    "end": "3953619"
  },
  {
    "text": "So that sound good? Oh, and what about when\nI'm on a super high-end GPU",
    "start": "3953620",
    "end": "3959200"
  },
  {
    "text": "and I'm multiplying 20,000\nby 20,000 dense matrices?",
    "start": "3959200",
    "end": "3965980"
  },
  {
    "text": "You'd be terrified is the\nanswer, is what it is. It's unbelievably fast.",
    "start": "3965980",
    "end": "3971573"
  },
  {
    "text": "But actually, that's\nnot the main point. We're going to be\ntalking about other stuff where you don't\nneed a supercomputer",
    "start": "3971573",
    "end": "3978730"
  },
  {
    "text": "to achieve things. You just need to be smart. And that's going to be\nthe theme of the material",
    "start": "3978730",
    "end": "3984190"
  },
  {
    "text": "we're going to look at. So we're going to start-- we're\ngoing to build up real easy",
    "start": "3984190",
    "end": "3989590"
  },
  {
    "text": "and just say, let's look\nat some linear equations-- when is it easy to\nsolve linear equations? Well, here's one time.",
    "start": "3989590",
    "end": "3995530"
  },
  {
    "text": "If it's diagonal,\nthat's idiotic. It's order n. What about matrix-- what\nif it's lower triangular",
    "start": "3995530",
    "end": "4003390"
  },
  {
    "text": "and you want to solve it? So you want to\nsolve something that looks-- it's lower triangular.",
    "start": "4003390",
    "end": "4009150"
  },
  {
    "text": "So it looks like A11, A21, A22.",
    "start": "4009150",
    "end": "4015390"
  },
  {
    "text": "A31, A32, A33. I'm not going to draw the zeros.",
    "start": "4015390",
    "end": "4021600"
  },
  {
    "text": "Times, let's say, x1,\nx2, x3 equals b1, b2, b3.",
    "start": "4021600",
    "end": "4028180"
  },
  {
    "text": "And you probably saw this even\nin high school or something. So how do you solve this?",
    "start": "4028180",
    "end": "4034250"
  },
  {
    "text": "Well, look, the first\nequation is A11x1 equals B1. So x1 is B1 over A11.",
    "start": "4034250",
    "end": "4039910"
  },
  {
    "text": "Now you know x1. The second equation is A21x1\nbut you know what that is. You already calculated it.",
    "start": "4039910",
    "end": "4045710"
  },
  {
    "text": "So the second one\nis A22x2 equals B2",
    "start": "4045710",
    "end": "4050740"
  },
  {
    "text": "minus A21x1 which\nyou already know. So that method is\ncalled-- that's called forward substitution\nbecause you solve for x1,",
    "start": "4050740",
    "end": "4058660"
  },
  {
    "text": "then x2, then x3, then x4. And whenever you\nhave one, you're",
    "start": "4058660",
    "end": "4064119"
  },
  {
    "text": "going to substitute it\nin future equations. Everybody got that? And when you work\nout the complexity,",
    "start": "4064120",
    "end": "4071500"
  },
  {
    "text": "that's going to be\nactually n squared flops. ",
    "start": "4071500",
    "end": "4078190"
  },
  {
    "text": "So that's cool. By the way, it's\ndifferent from n cubed. In fact, there's a\nfactor of n in there.",
    "start": "4078190",
    "end": "4085900"
  },
  {
    "text": "So you already know something. It says that if you had to\nsolve some triangular equations, you can do that really fast\ncompared to just solving",
    "start": "4085900",
    "end": "4094240"
  },
  {
    "text": "non-triangular equations. And if it's upper\ntriangular, you do what's called\nbackward substitution.",
    "start": "4094240",
    "end": "4100330"
  },
  {
    "text": "It's the same thing. In that case, you get xn first,\nthen xn minus 1, and so on.",
    "start": "4100330",
    "end": "4105639"
  },
  {
    "text": "Oh, and by the way, this is\nnot how it actually works. This is blocked. That's how they actually do it.",
    "start": "4105640",
    "end": "4112870"
  },
  {
    "text": "So there's little blocks. Again, we are blissfully\nunaware of this. But when you solve\na triangular system,",
    "start": "4112870",
    "end": "4118839"
  },
  {
    "text": "they don't do it line\nby line like this. It's actually blocked. But we can pretend it looks\nlike this and the conclusion",
    "start": "4118840",
    "end": "4126910"
  },
  {
    "text": "is the same.  What if a matrix is orthogonal?",
    "start": "4126910",
    "end": "4133359"
  },
  {
    "text": "Then it takes 2n squared\nflops to compute A transpose--",
    "start": "4133359",
    "end": "4139350"
  },
  {
    "text": "to compute, sorry, A\ninverse B because A inverse is A transpose and then\nit's matrix vector multiply.",
    "start": "4139350",
    "end": "4145568"
  },
  {
    "text": "So actually, that's what it was.",
    "start": "4145569",
    "end": "4150790"
  },
  {
    "text": "There's lots of other cases. If A could be-- I mean, here's a very famous\nstructure for a matrix A.",
    "start": "4150790",
    "end": "4157839"
  },
  {
    "text": "It's identity minus rank one. I think that's called maybe\na Householder reflection",
    "start": "4157840",
    "end": "4163180"
  },
  {
    "text": "or somebody might know. Somebody in ICME or\nsomething could tell me. I think that's right.",
    "start": "4163180",
    "end": "4168850"
  },
  {
    "text": "That's called a Householder\nreflection or something. Those, again, you\ncan solve in n flops",
    "start": "4168850",
    "end": "4174189"
  },
  {
    "text": "because you just are\nsmart about how you do it. And the storage is also clear. You would store\nu, not the matrix.",
    "start": "4174189",
    "end": "4182049"
  },
  {
    "text": "A permutation matrix\nis a good example. If you have a permutation\nmatrix and you want to know how\nlong does it take",
    "start": "4182050",
    "end": "4188929"
  },
  {
    "text": "to solve a permutation\nmatrix times x equals B, you just unpermute them,\nwhich is the transpose.",
    "start": "4188930",
    "end": "4196310"
  },
  {
    "text": "And you actually don't\neven do any flops because all you're doing is\nyou're just moving numbers around. So permutations is hilarious\nbecause if you ask under a flop",
    "start": "4196310",
    "end": "4205310"
  },
  {
    "text": "count analysis from\nthe 1960s or '70s, it's 0 flops because\nyou just move--",
    "start": "4205310",
    "end": "4210380"
  },
  {
    "text": "it's actually like mem copies. You're just moving\nnumbers around.",
    "start": "4210380",
    "end": "4215510"
  },
  {
    "text": "In fact, that can\ntake a lot of time if it's a vector that's 100\nmillion high or something",
    "start": "4215510",
    "end": "4221690"
  },
  {
    "text": "like that.  So these are examples.",
    "start": "4221690",
    "end": "4227130"
  },
  {
    "text": "And now we're going to\nget to what the method is. And actually, it's\nmuch more important to just understand the high\nlevel idea than the low level",
    "start": "4227130",
    "end": "4234770"
  },
  {
    "text": "details, except if you're\nin the few people who actually work on these methods\nso that the rest of us benefit.",
    "start": "4234770",
    "end": "4241300"
  },
  {
    "text": "But the rest of us,\nhere's the method. It's actually very\nsimple and there's already immediately\nweird things that you--",
    "start": "4241300",
    "end": "4248560"
  },
  {
    "text": "I don't know, some\nof you probably will leave today\nknowing something you didn't know before\nthat's weird and shocking.",
    "start": "4248560",
    "end": "4254320"
  },
  {
    "text": "So here it is. The general method\nworks like this. You take a matrix A. You\nwant to solve Ax equals b.",
    "start": "4254320",
    "end": "4260679"
  },
  {
    "text": "You take the matrix A and\nthe first thing you do is you factor it. And factor it means you write\nit out as a product of matrices.",
    "start": "4260680",
    "end": "4266560"
  },
  {
    "text": "You know a bunch of these\nfactorizations probably. There's the QR factorization.",
    "start": "4266560",
    "end": "4271660"
  },
  {
    "text": "There's the eigendecomposition,\nsingular value decomposition. You probably know a bunch\nof these already anyway.",
    "start": "4271660",
    "end": "4278770"
  },
  {
    "text": "So you factor it into a product\nof matrices each of which is easy to invert.",
    "start": "4278770",
    "end": "4284860"
  },
  {
    "text": "People say that. By the way, when they\nsay that, that's slang. It doesn't mean that anyone's\ngoing to invert that matrix.",
    "start": "4284860",
    "end": "4291010"
  },
  {
    "text": "When you say easy\nto invert, it means it's easy to solve Ax equals b.",
    "start": "4291010",
    "end": "4296235"
  },
  {
    "text": "That's what they\nactually mean by that. But they just say easy to invert\neven though no one is inverting",
    "start": "4296235",
    "end": "4301760"
  },
  {
    "text": "any matrices. So this is really,\nreally quite dumb.",
    "start": "4301760",
    "end": "4307590"
  },
  {
    "text": "It just says, well, if A is this\nproduct, then the inverse of A is the product of the\ninverses in reverse order.",
    "start": "4307590",
    "end": "4313410"
  },
  {
    "text": "So I get this thing. And now I just put\nparentheses the right way, which is to say I\nfirst put a parentheses",
    "start": "4313410",
    "end": "4320310"
  },
  {
    "text": "around the first one, A1\ninverse b, and I calculate that.",
    "start": "4320310",
    "end": "4325810"
  },
  {
    "text": "So actually, what you do is\nyou solve this to get x1.",
    "start": "4325810",
    "end": "4332810"
  },
  {
    "text": "That's actually that\nsecond expression. Then I have to multiply\nby A2 inverse, which I do by simply calling the solve\nmethod on A2 with right hand",
    "start": "4332810",
    "end": "4345429"
  },
  {
    "text": "side x1. Everybody see that? So in fact, you solve this\nby just a sequence of solves.",
    "start": "4345430",
    "end": "4352427"
  },
  {
    "text": "You can even think of this in\na beautiful object-oriented way where each of these\nthings has a solve method.",
    "start": "4352428",
    "end": "4358540"
  },
  {
    "text": "And solve literally\nmeans you solve A, b, means it\nreturns A inverse b.",
    "start": "4358540",
    "end": "4367270"
  },
  {
    "text": "And some of these\nmethods are idiotic. It would be diagonal, or a\npermutation, or something like that. Doesn't matter.",
    "start": "4367270",
    "end": "4372380"
  },
  {
    "text": "That's the idea. So you solve that by literally\njust a sequence of solves. That's it.",
    "start": "4372380",
    "end": "4378070"
  },
  {
    "text": " Now, usually the\nway this works--",
    "start": "4378070",
    "end": "4383962"
  },
  {
    "text": "There are exceptions which\nwe're going to talk about. But it works in a cool way. I mean in the simplest,\nmost generic cases,",
    "start": "4383962",
    "end": "4391059"
  },
  {
    "text": "the factorization is\ncost order n cubed. And then we'll see that\nthe solve actually is",
    "start": "4391060",
    "end": "4398340"
  },
  {
    "text": "going to take order n squared. Now things get weird\nbecause suppose I ask you",
    "start": "4398340",
    "end": "4405429"
  },
  {
    "text": "how long does it take me to\nsolve one equation with 5,000",
    "start": "4405430",
    "end": "4410860"
  },
  {
    "text": "variables. So 5,000 by 5,000 matrix\nA, 5,000 vector b, and I want to compute whatever.",
    "start": "4410860",
    "end": "4417890"
  },
  {
    "text": "I want to actually factor A.\nWell, it's order of magnitude,",
    "start": "4417890",
    "end": "4424840"
  },
  {
    "text": "it's under a second. I mean, it depends on\nwhat you're doing it on. But it's not minutes. It's not milliseconds.",
    "start": "4424840",
    "end": "4432070"
  },
  {
    "text": "Well, it'll be milliseconds\non some crazy things but that's fine. Everybody follow this? And now I'm going to ask you--",
    "start": "4432070",
    "end": "4439210"
  },
  {
    "text": "let's say it's a second. We'll make it simple. Suppose I say, well, no,\nnow I want to do this. I want to actually solve\n10 sets of equations",
    "start": "4439210",
    "end": "4448270"
  },
  {
    "text": "with the same matrix but\ndifferent right hand sides. Well, the naive method\nwould take 10 seconds",
    "start": "4448270",
    "end": "4455710"
  },
  {
    "text": "because you just have a\nlittle loop or whatever, unless you had 10 cores\naround and parallelized it but that's OK. Whatever, right?",
    "start": "4455710",
    "end": "4461380"
  },
  {
    "text": "So it would take 10 seconds. Everybody following this? How long in fact does it take\nif you know what you're doing?",
    "start": "4461380",
    "end": "4468085"
  },
  {
    "start": "4468085",
    "end": "4473800"
  },
  {
    "text": "Let's review. So I want you to solve 5,000\nequations, 5,000 variables.",
    "start": "4473800",
    "end": "4480020"
  },
  {
    "text": "Takes a second. Now I'd say, OK,\nthanks for doing that. I'd like to do it now for 10\nsets with the same coefficient",
    "start": "4480020",
    "end": "4486969"
  },
  {
    "text": "matrix. A normal person would\nsay, 10 seconds.",
    "start": "4486970",
    "end": "4492550"
  },
  {
    "text": "I mean, are we right? And what is the actual number? It's 1 second, right?",
    "start": "4492550",
    "end": "4498370"
  },
  {
    "text": "Why? Because if a 5,000 by 5,000\nmatrix took a second to factor,",
    "start": "4498370",
    "end": "4504849"
  },
  {
    "text": "solve is going to be a factor\nn smaller because that's n squared, not n cubed.",
    "start": "4504850",
    "end": "4511090"
  },
  {
    "text": "So the answer, that works\nout to actually microseconds. So the answer\nwould be, oh, yeah,",
    "start": "4511090",
    "end": "4517390"
  },
  {
    "text": "it's about one second plus\nmaybe about 150 microseconds. Everybody following this?",
    "start": "4517390",
    "end": "4522850"
  },
  {
    "text": " I mean, until you know\nthis, this is not obvious.",
    "start": "4522850",
    "end": "4528790"
  },
  {
    "text": "So actually how many people\nknew that basically you can solve 10 sets\nof linear equations",
    "start": "4528790",
    "end": "4534140"
  },
  {
    "text": "basically the exact same\ncost of solving one? Some of you must have\nknown this or something.",
    "start": "4534140",
    "end": "4540949"
  },
  {
    "text": "Everybody? OK. I'm not detecting that\nyou're that impressed.",
    "start": "4540950",
    "end": "4546340"
  },
  {
    "text": "[CHUCKLES] Are you just like, who cares? Or I mean what?",
    "start": "4546340",
    "end": "4553630"
  },
  {
    "text": "I mean, it's cool, right? I'll put it this way. I'm impressed. I think you should be.",
    "start": "4553630",
    "end": "4558907"
  },
  {
    "text": "Honestly, I think\nyou should be too. By the way, this requires\nthat you actually know what you're doing\nbecause if you actually just--",
    "start": "4558907",
    "end": "4566560"
  },
  {
    "text": "if you say for right hand\nside and right hand sides, solve, Ab, you're [INAUDIBLE].",
    "start": "4566560",
    "end": "4574330"
  },
  {
    "text": "By the way, another\nname for this is called factorization caching.",
    "start": "4574330",
    "end": "4580040"
  },
  {
    "text": "So it means you factor once\nand then do multiple solves. ",
    "start": "4580040",
    "end": "4586430"
  },
  {
    "text": "I think this makes sense. And the most common one\nis the LU factorization.",
    "start": "4586430",
    "end": "4594890"
  },
  {
    "text": "L is lower triangular,\nU is upper. And it basically\nsays you can take",
    "start": "4594890",
    "end": "4600139"
  },
  {
    "text": "a matrix A. If\nit's non-singular, you can write it\nas a permutation times a lower, times an\nupper triangular matrix.",
    "start": "4600140",
    "end": "4606020"
  },
  {
    "text": "The cost of that\nis n cubed flops. And then this is how\nyou would solve it.",
    "start": "4606020",
    "end": "4611180"
  },
  {
    "text": "It looks like this. So this one dominates.",
    "start": "4611180",
    "end": "4617239"
  },
  {
    "text": "And then these things,\nthis is the solve method.",
    "start": "4617240",
    "end": "4623120"
  },
  {
    "text": "This is where you're actually\nwalking through the three factors. That's why there's\nthree things here.",
    "start": "4623120",
    "end": "4628940"
  },
  {
    "text": "Each of these is solving\nessentially or computing the-- it's working with the\ninverse of 1 of the factors.",
    "start": "4628940",
    "end": "4635840"
  },
  {
    "text": "And so this is what\nyou're doing here. And this whole thing\nhere is order n squared.",
    "start": "4635840",
    "end": "4641760"
  },
  {
    "text": "That's order n cubed. And this comes up in\na whole lot of areas.",
    "start": "4641760",
    "end": "4648179"
  },
  {
    "text": "So this is cool. And this is kind of the same\nas the Gaussian elimination",
    "start": "4648180",
    "end": "4654989"
  },
  {
    "text": "that you were almost\ncertainly tortured with either in high school or\nundergraduate days.",
    "start": "4654990",
    "end": "4660870"
  },
  {
    "text": "So it's basically this. By the way, when you\nwere taught that, did anyone say\nthat it has nothing",
    "start": "4660870",
    "end": "4666090"
  },
  {
    "text": "to do whatsoever with how\npeople actually solve equations? Probably not. No.",
    "start": "4666090",
    "end": "4671880"
  },
  {
    "text": "So why you would cause people\nto actually do Gaussian? I mean, I don't know.",
    "start": "4671880",
    "end": "4677092"
  },
  {
    "text": "It's like writing an\nassembly language program. A person should do that\neither zero or once.",
    "start": "4677092",
    "end": "4682139"
  },
  {
    "text": "And absolutely no\nmore than that. And most normal people should\ndo it exactly zero times.",
    "start": "4682140",
    "end": "4687480"
  },
  {
    "text": "But they should appreciate-- Oh, sorry, we need\na very small number of people who are very weird\nand like that to do that.",
    "start": "4687480",
    "end": "4694949"
  },
  {
    "text": "That's all they do. So that the rest\nof us can benefit. That's the way\nthis all works out.",
    "start": "4694950",
    "end": "4700510"
  },
  {
    "text": " Anyway, so this is\nbasically the same as that.",
    "start": "4700510",
    "end": "4706682"
  },
  {
    "text": "Except, it's not the\nway it really works. Of course the way\nit really works is all of this is the\nsame thing, except all",
    "start": "4706682",
    "end": "4711780"
  },
  {
    "text": "these things are blocked. And if you have multiple\ncores like on a GPU or just multiple cores, stuff\nis being done at the same time.",
    "start": "4711780",
    "end": "4721350"
  },
  {
    "text": "But other than that,\nthe idea is identical. So I think we'll quit here\nand we'll continue next time.",
    "start": "4721350",
    "end": "4730760"
  },
  {
    "start": "4730760",
    "end": "4735000"
  }
]