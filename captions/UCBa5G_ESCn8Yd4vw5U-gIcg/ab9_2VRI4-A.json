[
  {
    "text": "Greetings. Might as well start, I know you're all having a good time talking to each other, but let's talk to each other as a bigger group.",
    "start": "8710",
    "end": "19060"
  },
  {
    "text": "Now, see, looking ahead, I got I was going to announce today the exact day that projects are going to be do, but I don't have the calendar.",
    "start": "19060",
    "end": "33250"
  },
  {
    "text": "All and everything all worked out. Just suffice to say that it's a it's a day earlier than you thought it was going to be.",
    "start": "33250",
    "end": "39190"
  },
  {
    "text": "So work hard. Probably it'll be about the middle of that week when I.",
    "start": "39190",
    "end": "46809"
  },
  {
    "text": "Because it takes me an average of an hour to read these exact exams.",
    "start": "46810",
    "end": "53970"
  },
  {
    "text": "Oh, you've got to get you know, in that weekend, which is the first day of finals is June 6th.",
    "start": "53970",
    "end": "69730"
  },
  {
    "text": "And this and commencement is commencement.",
    "start": "69730",
    "end": "76420"
  },
  {
    "text": "This is a Sunday the 16th. Okay, so that means my grades have to be in by Thursday that before commencement.",
    "start": "76420",
    "end": "83439"
  },
  {
    "text": "So so. So I. I should have. So let's. Yeah. So like I'm thinking right now then that the that the project should be in by the Wednesday.",
    "start": "83440",
    "end": "99100"
  },
  {
    "text": "The fourth is that it is the Wednesday. The Fourth. Yeah.",
    "start": "99100",
    "end": "105540"
  },
  {
    "text": "OK, so Wednesday, June 4th will be day for projects to be do. And that's absolute, that's an absolute deadline.",
    "start": "105540",
    "end": "116080"
  },
  {
    "text": "If they come in on the fifth they might not be able to to read them.",
    "start": "116080",
    "end": "121750"
  },
  {
    "text": "So please remember I announced that at the very beginning of the quarter that that they that they would be do that approximately,",
    "start": "121750",
    "end": "131800"
  },
  {
    "text": "you know, before finals week and that there would be no no leight solutions allowed.",
    "start": "131800",
    "end": "137590"
  },
  {
    "text": "So I am repeating that now and I'll try to repeat it every day for hereafter so that if you know what to work for, then now next week.",
    "start": "137590",
    "end": "148959"
  },
  {
    "text": "Starting on Monday. Yes. So the three lectures next week are going to be special about technical writing.",
    "start": "148960",
    "end": "155710"
  },
  {
    "text": "And there'll be special handouts for those. And.",
    "start": "155710",
    "end": "160750"
  },
  {
    "text": "And it's something that I've sort of an annual event in this course which people say they've enjoyed in the past.",
    "start": "160750",
    "end": "172560"
  },
  {
    "text": "I hope you enjoy this this year, if I can still give it with the same enthusiasm. I've given it the last time. But.",
    "start": "172560",
    "end": "179890"
  },
  {
    "text": "But this is this is something that you it's sort of different because you're going to have English lessons in a computer science class,",
    "start": "179890",
    "end": "187090"
  },
  {
    "text": "except we're going to be talking about computer science thing ease instead of in math and out of how do tricks of the trade for good technical writing.",
    "start": "187090",
    "end": "198650"
  },
  {
    "text": "So that starts a week from today. Now, what I want to talk about today was something about external memory devices and and especially for searching on.",
    "start": "198650",
    "end": "215860"
  },
  {
    "text": "And we've talked to just a little bit about disks already. And when I review what I want to review that quickly,",
    "start": "215860",
    "end": "224290"
  },
  {
    "text": "what I think everyone knows that the way that that disks typically the hard disks work you've got.",
    "start": "224290",
    "end": "234579"
  },
  {
    "text": "Can we have this picture on the screen? You've got this different.",
    "start": "234580",
    "end": "245230"
  },
  {
    "text": "You've got these different tracks. I mean, what do you call them?",
    "start": "245230",
    "end": "250849"
  },
  {
    "text": "Strata surfaces. What are the platters? Yeah. So those are all accessible at the same time.",
    "start": "250850",
    "end": "259780"
  },
  {
    "text": "And then we've got and we've got an arm that usually moves in and out so that you get to the.",
    "start": "259780",
    "end": "267130"
  },
  {
    "text": "So, so that you can you can get to everything.",
    "start": "267130",
    "end": "272170"
  },
  {
    "text": "But it takes you a little while. If the arm has to move now. On the other hand, there's some disks. Have one head on every track.",
    "start": "272170",
    "end": "281200"
  },
  {
    "text": "The track is this thing. This is a circle circular area here, which takes you one revolution.",
    "start": "281200",
    "end": "287470"
  },
  {
    "text": "Time to get around. Sometimes there's there's one head on every track or one reading, writing head on every tax so that there's no arm that has to move back and forth.",
    "start": "287470",
    "end": "296050"
  },
  {
    "text": "And that's equivalent to a drum storage as a drum storage.",
    "start": "296050",
    "end": "301169"
  },
  {
    "text": "It essentially says that there's no late so no sick time.",
    "start": "301170",
    "end": "306210"
  },
  {
    "text": "Move an arm. It's just the latency time to latency time is the time to to go around to get it, to get at the data.",
    "start": "306210",
    "end": "316750"
  },
  {
    "text": "So that's one version of which sort of is halfway between random access and and, um, and a disk access because the seek time is cut down,",
    "start": "316750",
    "end": "330490"
  },
  {
    "text": "seek time as the time to move the arm latency time, the time for rotation on delay to get at the part of the data that you're interested in.",
    "start": "330490",
    "end": "338530"
  },
  {
    "text": "Now to cut. So to cut sick time down to zero. You either you either arrange that, you get you're working entirely in one cylinder, namely different layers.",
    "start": "338530",
    "end": "352840"
  },
  {
    "text": "But the same arm position. Or else you get yourself a head track.",
    "start": "352840",
    "end": "358600"
  },
  {
    "text": "Or a drum. Now you can also eliminate latency delay completely on on a lot of hardware devices.",
    "start": "358600",
    "end": "368320"
  },
  {
    "text": "Some of them are designed so that you can't really do this without major hardware modifications.",
    "start": "368320",
    "end": "374720"
  },
  {
    "text": "But. But but you. But lots of lots of disks if you can. You can use this method as shown on the last. Well, it's it's shown schematically here on this next page.",
    "start": "374720",
    "end": "387560"
  },
  {
    "text": "I'm looking at page three hundred and sixty three of the text right now.",
    "start": "387560",
    "end": "393700"
  },
  {
    "text": "If you have a half of a track of data and you mean the thing is whirling around this way.",
    "start": "393700",
    "end": "401890"
  },
  {
    "text": "And if, say, the read head is at a when you want to start reading.",
    "start": "401890",
    "end": "410410"
  },
  {
    "text": "Well, that's great. There's no latency delay. You you just read it and then half have a revolution later.",
    "start": "410410",
    "end": "419020"
  },
  {
    "text": "You're done. Now, if the read had is, I'd be at the moon at the moment.",
    "start": "419020",
    "end": "424569"
  },
  {
    "text": "You you say begin your your your read instruction or write instructions.",
    "start": "424570",
    "end": "429790"
  },
  {
    "text": "Same for reading. Right. Then you have to wait a fourth of a revolution for latency delay and then one half is",
    "start": "429790",
    "end": "438790"
  },
  {
    "text": "the read right time which which you're committed to to get that much information. On the other hand, if you're if you're.",
    "start": "438790",
    "end": "444190"
  },
  {
    "text": "What about the situation C? Well, there's two ways to do it. Some machines. What you have to do.",
    "start": "444190",
    "end": "449940"
  },
  {
    "text": "If if it's that c when you when you give the command, you just got away three quarters of a revolution and then plus a half four for the read.",
    "start": "449940",
    "end": "458530"
  },
  {
    "text": "Right. But it's not.",
    "start": "458530",
    "end": "463960"
  },
  {
    "text": "But actually what you could do is read this, read this part of the data into the last part of your buffer and then wait.",
    "start": "463960",
    "end": "474780"
  },
  {
    "text": "You're half just wait. Have a revolution of latency time. Not not a whole revolution. And then. And then this goes into the first part of your buffer.",
    "start": "474780",
    "end": "486370"
  },
  {
    "text": "So here, if your hardware and software is sufficiently clever, they can they can work it out so that you would never need more than one revolution for any disk disagreed on.",
    "start": "486370",
    "end": "498110"
  },
  {
    "text": "Well, I'm not counting seek time now.",
    "start": "498110",
    "end": "507639"
  },
  {
    "text": "Then the book works out that if you're reading at fraction X of attract the average time",
    "start": "507640",
    "end": "513680"
  },
  {
    "text": "or the track goes your average delay time goes to one half of one minus X squared.",
    "start": "513680",
    "end": "521560"
  },
  {
    "text": "Instead of instead of for half a revolution, if if you took a simple minor thing that says, just wait.",
    "start": "521560",
    "end": "528010"
  },
  {
    "text": "Get to the beginning of it, then, you know, on the average it's going to, you know, it's the whole revolution or or nothing.",
    "start": "528010",
    "end": "534470"
  },
  {
    "text": "And on the average, half a revolution have a revolution can be, you know, ten, ten to fifteen milliseconds.",
    "start": "534470",
    "end": "544689"
  },
  {
    "text": "Typically, that's a lot of c.p.u cycles. That's a factor of four orders of magnitude or something over a year of over your ordinary machine instructions.",
    "start": "544690",
    "end": "555670"
  },
  {
    "text": "So half a revolution. This is a isn't too good if you have to wait for it, unless your application doesn't mind such delays.",
    "start": "555670",
    "end": "568420"
  },
  {
    "text": "Now, if you're right, if if you work it out so that you're always taking on full track every time,",
    "start": "568420",
    "end": "575500"
  },
  {
    "text": "then there's no latency delay whatsoever by this improved scheme because wherever you start on the disk,",
    "start": "575500",
    "end": "580780"
  },
  {
    "text": "that tells you where to start putting it, dumping it in your buffer and then get to the end and wrap around the beginning of",
    "start": "580780",
    "end": "587350"
  },
  {
    "text": "your buffer and you keep up with the disk and and the latency time is cut to zero.",
    "start": "587350",
    "end": "593649"
  },
  {
    "text": "That has been implemented on lots of different manufacturers desks, but other disks are sort of designed in a way that that's impossible.",
    "start": "593650",
    "end": "604320"
  },
  {
    "text": "The hard, hard. Embedded some algorithm before they knew about this tech district.",
    "start": "604320",
    "end": "609770"
  },
  {
    "text": "And so they couldn't they couldn't go back to it afterwards.",
    "start": "609770",
    "end": "614910"
  },
  {
    "text": "OK, now. Well,",
    "start": "614910",
    "end": "622560"
  },
  {
    "text": "they want to talk to them mostly is searching on external memory because we'd like because there are these applications",
    "start": "622560",
    "end": "633600"
  },
  {
    "text": "where we have huge databases and we want and we don't want to look at too many things on the desk at it possible.",
    "start": "633600",
    "end": "639300"
  },
  {
    "text": "We'd like to just go right to the right thing if we can. Now, hashing if you're if the if you're right, if you have an application, which you just are doing retrieval by by keys.",
    "start": "639300",
    "end": "659040"
  },
  {
    "text": "But the ordering of the keys isn't important to you at all. You just so you never need to know what's the next key greater than this one or or anything about the order whatsoever than hashing.",
    "start": "659040",
    "end": "670589"
  },
  {
    "text": "Looks like a winning method because you you can compute the hash function and and you arrange it so that so that it's you.",
    "start": "670590",
    "end": "688800"
  },
  {
    "text": "You can keep a lot of records on each page of the of the death on each track of the disk.",
    "start": "688800",
    "end": "694260"
  },
  {
    "text": "And you can if you work out the mathematics, it turns out, and you even get the disk completely full,",
    "start": "694260",
    "end": "702600"
  },
  {
    "text": "it's something like it's something less than one and a half disk accesses will be enough to get you to any place on it.",
    "start": "702600",
    "end": "712920"
  },
  {
    "text": "On the other hand, there's some problems about maintaining this over a period of time with insertions and deletions and things getting out of order.",
    "start": "712920",
    "end": "722100"
  },
  {
    "text": "And I don't have a tablet to write on that saying. You got a pen?",
    "start": "722100",
    "end": "731800"
  },
  {
    "text": "I got some paper, but. And last time I got the papers, we got enough.",
    "start": "731800",
    "end": "738700"
  },
  {
    "text": "Oh, thanks, say no. The people on TV don't see eye to eye. Camera operator, look at the.",
    "start": "738700",
    "end": "752790"
  },
  {
    "text": "Ma, ma. Okay, now, before we talk about searching, we might just talk about representing ordinary files on the on a disk like your text files or something.",
    "start": "752790",
    "end": "772780"
  },
  {
    "text": "And what should you do if if restoring a large text file and one approaches?",
    "start": "772780",
    "end": "785330"
  },
  {
    "text": "Is this you're editing this file in the files. The stuff is getting bigger and bigger. So we have these fixed these fixed things,",
    "start": "785330",
    "end": "792730"
  },
  {
    "text": "each one track long and there are some they probably each have a point or two which to which block is next on the in the file.",
    "start": "792730",
    "end": "803380"
  },
  {
    "text": "But now somebody is editing and all of a sudden he's decided to insert a new paragraph of text in the middle of this one.",
    "start": "803380",
    "end": "812560"
  },
  {
    "text": "So what are you going to do? And one thing you can do is what do they call them on the sale system?",
    "start": "812560",
    "end": "820420"
  },
  {
    "text": "Rippling, which means they just re copying all the files, you know.",
    "start": "820420",
    "end": "825769"
  },
  {
    "text": "Oh. If there is one hundred more blocks here, they just would move them down.",
    "start": "825770",
    "end": "832110"
  },
  {
    "text": "Now they do allow a little bit of excess space in these at the end because there might",
    "start": "832110",
    "end": "838060"
  },
  {
    "text": "have been deletions in there and you don't always keep everything tightly packed. OK. And so you think about this for a while. You can you come up with.",
    "start": "838060",
    "end": "847330"
  },
  {
    "text": "You come up with the following idea. And so kind of thing, that's that's probably been invented dozens of times by people who thought about this for a little while.",
    "start": "847330",
    "end": "857590"
  },
  {
    "text": "And they would say, well, why do we? We could always guarantee that none of these things are going to be worse than half full.",
    "start": "857590",
    "end": "865660"
  },
  {
    "text": "Everything will be at least half full. If we if we if we're clever about this.",
    "start": "865660",
    "end": "873250"
  },
  {
    "text": "And what's the idea of cleverness? Well, you know, the word if somebody if suppose let's for sake of definiteness,",
    "start": "873250",
    "end": "884110"
  },
  {
    "text": "let's suppose that this is five hundred and twelve words in each of these.",
    "start": "884110",
    "end": "891970"
  },
  {
    "text": "OK. And but but they aren't all full necessarily. And we have also a place for a pointer. Well if you if if you try to insert more than five hundred and twelve in there.",
    "start": "891970",
    "end": "902800"
  },
  {
    "text": "So you have five hundred thirteen. It doesn't fit. So you can break that into a 256 257.",
    "start": "902800",
    "end": "909370"
  },
  {
    "text": "And neither of those is is worse than half. Four is worse than half empty. And at least half full. And then the future insertions will continue.",
    "start": "909370",
    "end": "920440"
  },
  {
    "text": "So you'd have to split one of these occasionally and make it into two. But then you wouldn't have to propagate this all the way to the end, which is a slow operation, takes a lot of disk disk access.",
    "start": "920440",
    "end": "934089"
  },
  {
    "text": "Now, on the other hand, what if somebody is doing a deletion? And so it goes from 256 down to 255 or something smaller?",
    "start": "934090",
    "end": "943360"
  },
  {
    "text": "Well, again, it's not so bad. You just find the neighbor which who has at least half in.",
    "start": "943360",
    "end": "948730"
  },
  {
    "text": "And between the two of you, you can share. You can you know, you can you can you can divide up your total resources into into two parts.",
    "start": "948730",
    "end": "959500"
  },
  {
    "text": "Unless it's his he's already kind of law. In which case you could combine with him and and merge the two blocks and concatenate them into one.",
    "start": "959500",
    "end": "969580"
  },
  {
    "text": "OK. So simple that a simple linear list and it's an easy thing to maintain.",
    "start": "969580",
    "end": "975370"
  },
  {
    "text": "So that these things are always at least half full. If you want to if you want it to always be at least two thirds for.",
    "start": "975370",
    "end": "983320"
  },
  {
    "text": "How you could work that out. Try to guarantee to.",
    "start": "983320",
    "end": "991610"
  },
  {
    "text": "Well, the idea is that when we do an insertion deletion, we still want to have a two thirds fall, provided that was true before the insertion deletion.",
    "start": "991610",
    "end": "998910"
  },
  {
    "text": "We don't want to have to change too much of the deaths of the three that wanted to do.",
    "start": "998910",
    "end": "1006949"
  },
  {
    "text": "Yeah. That's it. It's you. If you if something gets full, then you go look at its neighbor and and,",
    "start": "1006950",
    "end": "1014360"
  },
  {
    "text": "you know, you combine the two blocks and then it only of both of those are full.",
    "start": "1014360",
    "end": "1022399"
  },
  {
    "text": "Would you go on to the next one. And and maybe split it.",
    "start": "1022400",
    "end": "1027410"
  },
  {
    "text": "No, I'm so both of those are full and you split into those two into three. Otherwise you you would suppress it.",
    "start": "1027410",
    "end": "1033990"
  },
  {
    "text": "And I guess there's heuristics that you could learn after playing around with these things as to how how much space to to leave there.",
    "start": "1033990",
    "end": "1045329"
  },
  {
    "text": "And and Andy gave the mathematics of the situation on the average, if you take this collapsing and expand and merging idea.",
    "start": "1045330",
    "end": "1056210"
  },
  {
    "text": "But that was based on the Beechy philosophy, not on sequential philosophy. I don't know the sequential one it's ever been analyzed.",
    "start": "1056210",
    "end": "1063440"
  },
  {
    "text": "But in the Meechie case, he proved that the average memory usage would be sixty nine point three percent.",
    "start": "1063440",
    "end": "1072110"
  },
  {
    "text": "That's the log of two natural log of two point six nine three. This is the asymptotic. When you have a large block, size one six nine three, whatever is the is the average fraction of usage.",
    "start": "1072110",
    "end": "1087890"
  },
  {
    "text": "If you've got random insertions in a B3, that's what is there months now.",
    "start": "1087890",
    "end": "1099080"
  },
  {
    "text": "So this works in a one dimensional case. And the idea was carried over into the in into retrieval applications.",
    "start": "1099080",
    "end": "1112990"
  },
  {
    "text": "And the paper came out in 1972 by Bayer and Muckrake, Rudy Baer and Ed McBride.",
    "start": "1112990",
    "end": "1124330"
  },
  {
    "text": "And, well, there is I think he's now a professor in Switzerland.",
    "start": "1124330",
    "end": "1130820"
  },
  {
    "text": "And McBride is one of the main designers of Xerox hardware and software.",
    "start": "1130820",
    "end": "1137980"
  },
  {
    "text": "Muckrake was actually he taught 144 B. One year, also seven.",
    "start": "1137980",
    "end": "1143559"
  },
  {
    "text": "About this time. Seventy two. Seventy three. But they were both at Boeing Research Labs in Seattle.",
    "start": "1143560",
    "end": "1149540"
  },
  {
    "text": "And they never told anybody exactly why they call this B trees, their idea.",
    "start": "1149540",
    "end": "1157280"
  },
  {
    "text": "And it might have something to do with Boeing, but it might also have some do it there.",
    "start": "1157280",
    "end": "1164820"
  },
  {
    "text": "And some people say that it's they tend to be balanced and they tend to be also Bushi.",
    "start": "1164820",
    "end": "1173549"
  },
  {
    "text": "And the other one. No, no, not binary.",
    "start": "1173550",
    "end": "1180390"
  },
  {
    "text": "Well, no. But there was another there was another nice one of those buzzwords, Buzzy.",
    "start": "1180390",
    "end": "1190070"
  },
  {
    "text": "Now, I guess now balanced in bounces is.",
    "start": "1190070",
    "end": "1198169"
  },
  {
    "text": "Anyway, you heard about arbi trees earlier in this course.",
    "start": "1198170",
    "end": "1204160"
  },
  {
    "text": "And Arbie is again, it could mean red and black and it could mean it could stand for Robbie,",
    "start": "1204160",
    "end": "1212420"
  },
  {
    "text": "who is the Bob Sedrick son who was born about that time, Sean. So there is all kinds of questions about these names that are quite important.",
    "start": "1212420",
    "end": "1222169"
  },
  {
    "text": "As you can see, the trees that didn't work. They tried. Yeah. You know that you've seen this.",
    "start": "1222170",
    "end": "1230270"
  },
  {
    "text": "You know, you've seen this cartoon where the scientist has on his blackboard this now anyway.",
    "start": "1230270",
    "end": "1244830"
  },
  {
    "text": "It's it's gotten to the point where beaches are so important that this article in computing surveys claims that it's really the",
    "start": "1244830",
    "end": "1253250"
  },
  {
    "text": "standard general and most common file organizations in in the world to in the world today are are known some variant of beaches.",
    "start": "1253250",
    "end": "1264950"
  },
  {
    "text": "This is an article that I referred to. It was came out in ACMD Computing Surveys, which might have this on the screen, ACM computing surveys for June seventy.",
    "start": "1264950",
    "end": "1278180"
  },
  {
    "text": "And there there's this article here by I don't know how to pronounce his name, Komar Comber, the ubiquitous bee tree and.",
    "start": "1278180",
    "end": "1288620"
  },
  {
    "text": "And he's made a survey of lots of different software, different manufacturers, and found out that and other database systems and found out that really is is is propagated very fast.",
    "start": "1288620",
    "end": "1304640"
  },
  {
    "text": "The idea was simultaneously invented. So very, very similar idea was sometimes invented in the suppliers project here at Stanford.",
    "start": "1304640",
    "end": "1313280"
  },
  {
    "text": "As they found out the first time I talked about chiefs in 1970, one or two. One of the guys taken a class had had developed this very similar idea in in the data base project for the library here.",
    "start": "1313280",
    "end": "1332720"
  },
  {
    "text": "Now, it's not it it combines this this this thing about all nodes being half full with another very beautiful idea.",
    "start": "1332720",
    "end": "1343100"
  },
  {
    "text": "And you've seen the idea in connection with these internal so internal searching in connection with these two, three trees.",
    "start": "1343100",
    "end": "1351770"
  },
  {
    "text": "But the idea is that they're balanced. Not only are the nodes all of the same or at least half full, but also there's balance in the sense that every path to the root has the same line.",
    "start": "1351770",
    "end": "1366710"
  },
  {
    "text": "And here's the formal definition. V3 of order m every node has most M sons, but every note except the root in the leaves has at least over two sons.",
    "start": "1366710",
    "end": "1386779"
  },
  {
    "text": "And the root has at least two sons, unless it is a leaf and all use appear the same level.",
    "start": "1386780",
    "end": "1393890"
  },
  {
    "text": "This is the, this is the critical thing. It's about carrying no information. We'll have to, we can discuss that and then not leave with Case Unstaged came.",
    "start": "1393890",
    "end": "1406240"
  },
  {
    "text": "The important thing is that all you appear on the same level so that you know that there",
    "start": "1406240",
    "end": "1411950"
  },
  {
    "text": "aren't any any parts of the tree that are are sort of degenerates that there is one.",
    "start": "1411950",
    "end": "1419409"
  },
  {
    "text": "Know, the thing is, it's growing very badly to the left. So it has to be has to be balanced that is there all paths to the leak from the root to the leaves are the same length.",
    "start": "1419410",
    "end": "1429230"
  },
  {
    "text": "And this is a this concept might seem obvious now, but I remember when I first heard about it,",
    "start": "1429230",
    "end": "1435950"
  },
  {
    "text": "I know I never had conceived before of trees growing at the top instead of at the bottom.",
    "start": "1435950",
    "end": "1443029"
  },
  {
    "text": "I guess I was just too much a nature boy. I know I would see how trees grew and they spread out there.",
    "start": "1443030",
    "end": "1449700"
  },
  {
    "text": "There they would grow through their leaves and buds and all that.",
    "start": "1449700",
    "end": "1455419"
  },
  {
    "text": "But this is the opposite of these trees. When they get bigger, they get bigger because the roots splits.",
    "start": "1455420",
    "end": "1463220"
  },
  {
    "text": "This is. And it was a was an eye opening concept, although in a way it's very natural one year after.",
    "start": "1463220",
    "end": "1472610"
  },
  {
    "text": "In retrospect, it's very natural. And you start out with a small database. You don't need much. You don't need. You know, you just keep it in one in one area on a desk.",
    "start": "1472610",
    "end": "1482750"
  },
  {
    "text": "But if it's too big for one area on a disk, well, then you've got to have a directory to it. And so you'd have to you'd have a you have a two level thing where you where you have a directory and then the single single area is on the list.",
    "start": "1482750",
    "end": "1494160"
  },
  {
    "text": "But now if these do it, if it gets even more, even bigger, then you've got to have a directory to you know,",
    "start": "1494160",
    "end": "1501860"
  },
  {
    "text": "you've got to have several directories and then you've got to have a directory to these directories. And so you've gone to. And so it's split into into three levels.",
    "start": "1501860",
    "end": "1509360"
  },
  {
    "text": "And this is really all at all that's going on. So it's a natural concept. This is that I hadn't thought of trees growing that way before.",
    "start": "1509360",
    "end": "1517640"
  },
  {
    "text": "And they put it together with with with this with this idea that every note is at least half full and makes it makes a nice, tight thing.",
    "start": "1517640",
    "end": "1530600"
  },
  {
    "text": "From my personal point of view. I facing writing Volume three in the early 70s, and I definitely want to want to treat the question of what to do on discs and drums.",
    "start": "1530600",
    "end": "1543799"
  },
  {
    "text": "But I also see it every every piece of hardware like this is a little bit different.",
    "start": "1543800",
    "end": "1552140"
  },
  {
    "text": "And there's all kinds of real strange things going on in the different different devices.",
    "start": "1552140",
    "end": "1561220"
  },
  {
    "text": "And and so millions of algorithms based on how to get around specific hardware characteristics.",
    "start": "1561220",
    "end": "1570980"
  },
  {
    "text": "How am I supposed to present something in a book that that's going to be of use? Hopefully, you know, by the time I finish writing it. And and so the whole thing is kind of messy.",
    "start": "1570980",
    "end": "1586250"
  },
  {
    "text": "And therefore, when I saw the. Beaches. Which was which was much cleaner then then then the the various messy algorithms that",
    "start": "1586250",
    "end": "1595460"
  },
  {
    "text": "people had for for putting things all on the same track and then on the same cylinder.",
    "start": "1595460",
    "end": "1602419"
  },
  {
    "text": "And then we shuffle every Saturday night. You could do a complete organization reorganization of your file and all these other all of these algorithms that really didn't.",
    "start": "1602420",
    "end": "1612980"
  },
  {
    "text": "Didn't turn me on as far as their beauty was concerned. When I got when I searched our beaches, at least it was much more appealing from this standpoint that I could say,",
    "start": "1612980",
    "end": "1621260"
  },
  {
    "text": "well, this is something that I would like to wear. I actually wouldn't mind presenting in the book. It's not as dirty as all these other things.",
    "start": "1621260",
    "end": "1627530"
  },
  {
    "text": "And I have to I had to mention the existence of the other ones, but I figured they would they would die out pretty soon.",
    "start": "1627530",
    "end": "1637820"
  },
  {
    "text": "With luck, in the end, it seems that the world is never going to be completely tidy as a mathematician would like it.",
    "start": "1637820",
    "end": "1645960"
  },
  {
    "text": "But what concepts like these be trees anyway.",
    "start": "1645960",
    "end": "1651590"
  },
  {
    "text": "Ah ah ah. Pleasant enough to work with that. It's that it probably keeps them going, even though some of the dirty, dirtier methods might turn out to be more efficient.",
    "start": "1651590",
    "end": "1663140"
  },
  {
    "text": "If you, if you measured them just for specific dedicated applications that they were tuned for, some of the dirty might well be trees then have these,",
    "start": "1663140",
    "end": "1674810"
  },
  {
    "text": "these general characteristics and we can see that they that they maintain them because we already think you're off only with two or three trees and some of the other things.",
    "start": "1674810",
    "end": "1684770"
  },
  {
    "text": "And so it's pretty ah, it's pretty easy to see how how you keep this characteristics or is this one now the order and the way it was defined.",
    "start": "1684770",
    "end": "1697540"
  },
  {
    "text": "They're usually that order would be. Oh yeah.",
    "start": "1697540",
    "end": "1704090"
  },
  {
    "text": "I'll turn it this way for you. This is Order seven order if the order is odd, is seems to be to work out best in that general definition.",
    "start": "1704090",
    "end": "1714640"
  },
  {
    "text": "And in the case of order three then it's just the two, three, three trees,",
    "start": "1714640",
    "end": "1720650"
  },
  {
    "text": "a case of order seven is shown here and you can have it most six keys in a node so that there is whoops I",
    "start": "1720650",
    "end": "1727910"
  },
  {
    "text": "think six keys in an no it wasn't as that the rule because the number of suns has to be at most seven.",
    "start": "1727910",
    "end": "1735540"
  },
  {
    "text": "Yeah. And so this is an this is an example. So you have. So I have these look these things here and then this particular example,",
    "start": "1735540",
    "end": "1743910"
  },
  {
    "text": "there's no leaves that's just done to make the first presentation of the idea simple.",
    "start": "1743910",
    "end": "1750920"
  },
  {
    "text": "But there's many modifications of the ideas. We'll see. Here's the root has two keys in it.",
    "start": "1750920",
    "end": "1755960"
  },
  {
    "text": "Root has at least one key always, but might have only one. If somebody tries to do an insertion of a new thing and it goes into one of these places that has already six keys, then that one would have to split.",
    "start": "1755960",
    "end": "1769790"
  },
  {
    "text": "You'd have seven and but you don't split it into three and four is split into",
    "start": "1769790",
    "end": "1774860"
  },
  {
    "text": "three and three because you need one key to differentiate between the two.",
    "start": "1774860",
    "end": "1782290"
  },
  {
    "text": "So you've certainly put a seventh key in there. Then you take the smallest three and make those into a into a separate leaf.",
    "start": "1782290",
    "end": "1789740"
  },
  {
    "text": "Now a separate node and the largest three make them into second. Now in the middle one goes up into the parent. Now, the parent also has seven in this particular example.",
    "start": "1789740",
    "end": "1801540"
  },
  {
    "text": "So double splitting has occurred. So you take the largest three of those. Whatever they are, that new one will probably be.",
    "start": "1801540",
    "end": "1812220"
  },
  {
    "text": "Yeah. It'll have to be between six seventy seven. Seven seventy three. So it'll it will be then the new middle one too.",
    "start": "1812220",
    "end": "1819080"
  },
  {
    "text": "So if you knew this was going to three, three and then another one coming up into the root, if the root got four then it would split and end up and that's the way the big tree grows.",
    "start": "1819080",
    "end": "1828350"
  },
  {
    "text": "One more level. Now this this turns out to be, of course, you usually have order much, much higher than seven.",
    "start": "1828350",
    "end": "1839120"
  },
  {
    "text": "And so it turns out that you get by with only two levels, almost always very.",
    "start": "1839120",
    "end": "1846559"
  },
  {
    "text": "I mean, if if you're a disk track, so are are anything reasonable, you usually find out that you hardly ever have to have three levels.",
    "start": "1846560",
    "end": "1854570"
  },
  {
    "text": "And it's a nice way to keep the information in order in alphabetical order.",
    "start": "1854570",
    "end": "1860029"
  },
  {
    "text": "And you can walk through it in alphabetical order if you want to know that the.",
    "start": "1860030",
    "end": "1867170"
  },
  {
    "text": "Why would you want to walk through in alphabetical order? So maybe harshing would be good enough.",
    "start": "1867170",
    "end": "1877910"
  },
  {
    "text": "Well, I guess the reason is that the times the index would be there is different.",
    "start": "1877910",
    "end": "1888590"
  },
  {
    "text": "Say two attributes. So that you want to you want to combine iron ore,",
    "start": "1888590",
    "end": "1894299"
  },
  {
    "text": "you want and you want to go through two lists of records in increasing order or something like that, that would be one.",
    "start": "1894300",
    "end": "1904050"
  },
  {
    "text": "One application. I don't. You can go in. You can use these anyway, both sequentially and and for searching for an individual.",
    "start": "1904050",
    "end": "1917760"
  },
  {
    "text": "I discussed insertion. Deletion is just the opposite. If you take out a key.",
    "start": "1917760",
    "end": "1923370"
  },
  {
    "text": "Well, there's a little trick that involved. Suppose we want this to go back to this picture. This particular example that I'm showing here is based on an assumption that that keys are sure that that records are short.",
    "start": "1923370",
    "end": "1936720"
  },
  {
    "text": "So we might. So so we're keeping. I know even I shot a key here to 33. There's also the data that goes with it. Key to thirty three is stored up in that note.",
    "start": "1936720",
    "end": "1946940"
  },
  {
    "text": "And that's taking a valuable space if it's a lot of data. Because we really want to get it high, high branching factor as we can in the index.",
    "start": "1946940",
    "end": "1955169"
  },
  {
    "text": "So if there is actually a lot of data going on there, then we then it's much better to take an alternate organization, which we'll talk about later.",
    "start": "1955170",
    "end": "1964510"
  },
  {
    "text": "But but if it under the assumption that the data is in, too, that goes with the key isn't too much,",
    "start": "1964510",
    "end": "1970110"
  },
  {
    "text": "then we would store it like this and we'd have the data stored with 233 up there. And what if what if I wanted to delete 233 now, what would I do in order to keep this in order to keep this structure?",
    "start": "1970110",
    "end": "1989299"
  },
  {
    "text": "No ideas. Oh, come on, let's stop. You want to move the book a little, OK?",
    "start": "1989300",
    "end": "1998630"
  },
  {
    "text": "That's what I have to do in order to delete 233. It's up there in the room anyway.",
    "start": "1998630",
    "end": "2004050"
  },
  {
    "text": "So 233 was the dividing line you see between this branch and this branch, 320 sounds to 40 once.",
    "start": "2004050",
    "end": "2012360"
  },
  {
    "text": "Anything less. OK. Ken, looks like you want to go down the tree and find the first element before two twenty four.",
    "start": "2012360",
    "end": "2021059"
  },
  {
    "text": "Two thirty three or after. Yeah. OK. Before let's say to 27, 27. Delete it from where it is. Yeah. Pull it back up and play it. Which is three.",
    "start": "2021060",
    "end": "2029050"
  },
  {
    "text": "So you put two to twenty seven up here and then you want it.",
    "start": "2029050",
    "end": "2034240"
  },
  {
    "text": "And then we have a hole here. OK. Now we have a hole here and there's only two guys there.",
    "start": "2034240",
    "end": "2040390"
  },
  {
    "text": "Well we should always have three in a in a in a tree with water so we should always have three, four or five or six in every note.",
    "start": "2040390",
    "end": "2050040"
  },
  {
    "text": "So there's only two left there. So merge with one on the left. So merge it with the one on the left. Now what does that mean?",
    "start": "2050040",
    "end": "2057669"
  },
  {
    "text": "We've got to bring in the one 91, which was the discriminator between the two. Hope you guys can read sideways because, you know, it's good practice.",
    "start": "2057670",
    "end": "2068109"
  },
  {
    "text": "And then you've got six key seven keys, one forty nine and two one seven nine and one ninety one one ninety seven to eleven.",
    "start": "2068110",
    "end": "2076320"
  },
  {
    "text": "You got those. And then out of those seven we would put the middle one up in there and shuffle them around a little bit so we'd have two.",
    "start": "2076320",
    "end": "2090370"
  },
  {
    "text": "So this deletion would actually require going down a tree and doing a little combination of these of these two things.",
    "start": "2090370",
    "end": "2103180"
  },
  {
    "text": "Now, before we start talking about strategies where we keep data only in the we don't keep the data in the middle of a tree.",
    "start": "2103180",
    "end": "2115180"
  },
  {
    "text": "We shouldn't. Let's just talk about the questions of of multiple user access, because that's kind of interesting things.",
    "start": "2115180",
    "end": "2122559"
  },
  {
    "text": "Suppose this is a huge database that's being connected to lots of different terminals.",
    "start": "2122560",
    "end": "2127990"
  },
  {
    "text": "And, you know, it's the it's the entire this now this database is the census of the United States or something like this,",
    "start": "2127990",
    "end": "2138840"
  },
  {
    "text": "or it's the it's the mailing list for Time magazine or something like that.",
    "start": "2138840",
    "end": "2145880"
  },
  {
    "text": "And they got a lot of clicks answering mail. So I've just moved or I'm canceling my subscription because I didn't like what you said about Andersen or whatever it is.",
    "start": "2145880",
    "end": "2154430"
  },
  {
    "text": "So then you get a you get a dynamic changing database.",
    "start": "2154430",
    "end": "2163119"
  },
  {
    "text": "OK. And you are still a lot of people to be able to access it.",
    "start": "2163120",
    "end": "2168400"
  },
  {
    "text": "And you've got to lock out the people you lock things out from. You know, you don't want to update these things twice.",
    "start": "2168400",
    "end": "2174760"
  },
  {
    "text": "You don't want to insert somebody twice or have somebody making a sending out or or charging somebody at the same time.",
    "start": "2174760",
    "end": "2184690"
  },
  {
    "text": "Somebody else is marking that he's paid his account or something like that. OK. So how can how can we handle that?",
    "start": "2184690",
    "end": "2193160"
  },
  {
    "text": "Does the Vetri actually it's going to be a big mess in this way.",
    "start": "2193160",
    "end": "2201829"
  },
  {
    "text": "This isn't it. This is an important problem. And it turned out it was a subject of three term papers in this course, about 1970, four, five.",
    "start": "2201830",
    "end": "2216370"
  },
  {
    "text": "At which time was an unsolved problem? Well, it seems like it might be sufficient to Lochley.",
    "start": "2216370",
    "end": "2222930"
  },
  {
    "text": "No, Your Honor. Yeah. If you're not, suppose you'd like to know, John, everything below.",
    "start": "2222930",
    "end": "2229030"
  },
  {
    "text": "Did that work? Well, with a problem with that is would be if it depends on how you say which one you're on.",
    "start": "2229030",
    "end": "2234660"
  },
  {
    "text": "Let's go back to where it was. We suppose the the the the thing was an insertion, for example.",
    "start": "2234660",
    "end": "2239789"
  },
  {
    "text": "See, we saw that if we inserted into this note here, then actually the insertion propagated back and caused this not to split and cause this not to change.",
    "start": "2239790",
    "end": "2250580"
  },
  {
    "text": "Now, if we if we were gonna do an insertion, we had a chance of coming up and changing this known.",
    "start": "2250580",
    "end": "2260460"
  },
  {
    "text": "Then it turns out that, well, we've walked down here. But somebody, meanwhile, has already, you know, has already made some big judgment based on this.",
    "start": "2260460",
    "end": "2269750"
  },
  {
    "text": "No. And then if we're changing that node and we might, you know, move move this pointer to another one.",
    "start": "2269750",
    "end": "2275550"
  },
  {
    "text": "But he might similarly be trying to to split this node and doing something else.",
    "start": "2275550",
    "end": "2281230"
  },
  {
    "text": "So. So there's the problem of interference that that could happen.",
    "start": "2281230",
    "end": "2289290"
  },
  {
    "text": "Now, the solution, the best solution that was like that turned out that year on the term papers was due to Varo.",
    "start": "2289290",
    "end": "2300210"
  },
  {
    "text": "I think her name is. I don't know how to pronounce it. Mohamed, can you tell me what's the proper way to pronounce Bero?",
    "start": "2300210",
    "end": "2306210"
  },
  {
    "text": "She was from Iran too. I'll write it down.",
    "start": "2306210",
    "end": "2312450"
  },
  {
    "text": "I think it was this. Did I spell it OK?",
    "start": "2312450",
    "end": "2327720"
  },
  {
    "text": "Like that. OK. OK, OK.",
    "start": "2327720",
    "end": "2334210"
  },
  {
    "text": "She she had the best solution that year and was published then in the.",
    "start": "2334210",
    "end": "2340460"
  },
  {
    "text": "It was published in information processing letters. She's now studying computer science at UCLA.",
    "start": "2340460",
    "end": "2351550"
  },
  {
    "text": "C. Information processing letters.",
    "start": "2351550",
    "end": "2356990"
  },
  {
    "text": "It's a nice it's a nice article to look up if you were interested in this problem.",
    "start": "2356990",
    "end": "2362410"
  },
  {
    "text": "October six. Page one one. Seven to one. Well, this solution that she came up with was to make sure that all access is to all of work",
    "start": "2362410",
    "end": "2378410"
  },
  {
    "text": "on the on the B2B goes always from the top to the bottom and never back upwards.",
    "start": "2378410",
    "end": "2386030"
  },
  {
    "text": "Make sure that all everything you're going to do is going to go downwards. And you can do this. You can do this by I guess a similar idea was used in the beaches.",
    "start": "2386030",
    "end": "2400430"
  },
  {
    "text": "You can do this by just remembering when you're when you're doing an insertion.",
    "start": "2400430",
    "end": "2406880"
  },
  {
    "text": "You just you know that you'll never have to walk up to a node unless it's for me,",
    "start": "2406880",
    "end": "2415000"
  },
  {
    "text": "it's only only in this case where we had a node that had six keys in it, would we ever have to, you know, would we ever have to lock it out?",
    "start": "2415000",
    "end": "2421730"
  },
  {
    "text": "We would. But would we ever have to come up above it? So so you so you can actually, for example,",
    "start": "2421730",
    "end": "2432440"
  },
  {
    "text": "you can make sure that there aren't any fool nodes if you if you come down and see you and get to a full node, full node.",
    "start": "2432440",
    "end": "2438170"
  },
  {
    "text": "You can split it right away and into to go into two half full nodes and then and then walk down and release the and release whatever you're you're",
    "start": "2438170",
    "end": "2453230"
  },
  {
    "text": "working on something very important that that the root not be locked out very often because the root is that nobody can get at the tree at all.",
    "start": "2453230",
    "end": "2463400"
  },
  {
    "text": "And once they have the root. Now there's been some very spent some fancy schemes that are circulating lately talking about partial lock out for certain kinds of updates.",
    "start": "2463400",
    "end": "2477109"
  },
  {
    "text": "And you you reserve a note instead of locking it and all kinds of things like that. And that these like I guess they're interesting, but I would but I like her.",
    "start": "2477110",
    "end": "2487130"
  },
  {
    "text": "But her solution better, which is just you just at all times, you just have a lock on two on two nodes.",
    "start": "2487130",
    "end": "2494119"
  },
  {
    "text": "The one is the parent of the other. And then you move and you move downward and you have to be careful that you release the locks and pick up the pointers in the right order.",
    "start": "2494120",
    "end": "2507470"
  },
  {
    "text": "I guess when you do release the father and then you lock the son or the grandson and then you move down.",
    "start": "2507470",
    "end": "2519030"
  },
  {
    "text": "Yeah, I just think for the whole day, only two people can be on the tree at the same time. Yeah. Is it that they always, you know, which you have exclusive access to just one node and then it's parent.",
    "start": "2519030",
    "end": "2532069"
  },
  {
    "text": "That's right. So at the beginning when I'm searching the tree, I would have to wait for the route to be unlocked.",
    "start": "2532070",
    "end": "2537200"
  },
  {
    "text": "Then I would lock the route, OK? Then nobody can touch that until I get until I decide which way I'm going.",
    "start": "2537200",
    "end": "2543980"
  },
  {
    "text": "And then. And then I choose which and choose one of the sons of the route, OK. Or if the route is already full. I split it at that point because I know every time I see a full node, I'm gonna I'm gonna get rid of it.",
    "start": "2543980",
    "end": "2555860"
  },
  {
    "text": "I'm going to unfold it, you know. So. So that's like. So suppose the son of the route is not for OK then I can I can go to the appropriate sun and unlock the route",
    "start": "2555860",
    "end": "2569330"
  },
  {
    "text": "and then and then it can pick up from the sun's sun until I get to the part of the database where I am.",
    "start": "2569330",
    "end": "2576410"
  },
  {
    "text": "So it's a database. So, so typically the things that are locked will be scattered far apart and they won't be interfering with somebody wanting to update the rest of it.",
    "start": "2576410",
    "end": "2589369"
  },
  {
    "text": "But is very important then that you never want to go upwards from where you are in this in this kind of application.",
    "start": "2589370",
    "end": "2595580"
  },
  {
    "text": "OK. So what's sort of a natural fit? Two people are separated by different surprises.",
    "start": "2595580",
    "end": "2604160"
  },
  {
    "text": "Yeah. That they both build their respective one above and then it causes.",
    "start": "2604160",
    "end": "2611720"
  },
  {
    "text": "So you put a node that causes the one above it to be split up. But No. The one above it wasn't wasn't for. But it's happening on two separate branches.",
    "start": "2611720",
    "end": "2622010"
  },
  {
    "text": "If that happens, it does go up at that point. In other words. A separation.",
    "start": "2622010",
    "end": "2628540"
  },
  {
    "text": "See, you would never you wouldn't ever get to. I'm going to assume that the father is not full. Whenever I go to a son. And so then if I see the son is four, I would flip the son.",
    "start": "2628540",
    "end": "2639760"
  },
  {
    "text": "The father might fill up at that point, but. But the next person coming through there is going to split it before we before getting into trouble.",
    "start": "2639760",
    "end": "2646900"
  },
  {
    "text": "That's that that's the approach that that I think would work. And similar for empty if you're doing deletions. So this is what the protocols in the locking problems if you have to go down and up.",
    "start": "2646900",
    "end": "2663100"
  },
  {
    "text": "We had we had some beautiful solutions to that. But they but they were 100 pages long and I'm not sure they worked.",
    "start": "2663100",
    "end": "2670960"
  },
  {
    "text": "I mean, you know, they were one, two, three, four.",
    "start": "2670960",
    "end": "2679270"
  },
  {
    "text": "Why do you say then that when you put a before you get to two, you go into the one which isn't which isn't very good.",
    "start": "2679270",
    "end": "2693440"
  },
  {
    "text": "Yeah. Yeah, yeah. Good point. OK. Now then she did simulations in order to validate the method and it turned out that that we couldn't read.",
    "start": "2693440",
    "end": "2708190"
  },
  {
    "text": "It was very hard to get to get parameters where it meant where it made too much mattering anyway.",
    "start": "2708190",
    "end": "2715329"
  },
  {
    "text": "Because if you assume, for example, that there are that there are oh how many would there be forty clerks processing the timed feelingly subscription list simultaneously.",
    "start": "2715330",
    "end": "2733619"
  },
  {
    "text": "And and if it takes, you know, 50 milliseconds to up to do each update or maybe even five hundred milliseconds to each update,",
    "start": "2733620",
    "end": "2745630"
  },
  {
    "text": "still those forty clerks are typing awfully fast in order to really interfere with each other significantly.",
    "start": "2745630",
    "end": "2751480"
  },
  {
    "text": "So the clashes actually aren't a steady state situation.",
    "start": "2751480",
    "end": "2763000"
  },
  {
    "text": "The amount of noise locked out doesn't seem to be a really severe problem. When you when you figure out that if it's people that are causing the if there's some human beings that are actually doing the updating.",
    "start": "2763000",
    "end": "2776080"
  },
  {
    "text": "If it's if these updates are being generated by machines, then you'd have to be a little more careful about the locking out process.",
    "start": "2776080",
    "end": "2782400"
  },
  {
    "text": "But it turned out that really, even if somebody locked out the whole tree for an update, you wouldn't jam up too badly under most traffic situations that we could think of when she was doing our project.",
    "start": "2782400",
    "end": "2798160"
  },
  {
    "text": "Still, it was an interesting problem to see what would you know if you couldn't just have an algorithm where you anybody would want to be locking that part of the tree? And there's a little bit of of it.",
    "start": "2798160",
    "end": "2809410"
  },
  {
    "text": "It makes some sense also because you have some you have to be able to take take a kind of errors that",
    "start": "2809410",
    "end": "2816940"
  },
  {
    "text": "have been made during these updates and keep some kind of accounting about what what what people did.",
    "start": "2816940",
    "end": "2826790"
  },
  {
    "text": "So so maybe you sit in lock out now for a little while.",
    "start": "2826790",
    "end": "2832930"
  },
  {
    "text": "Once you once you get there. OK. Now, the other thing I wanted I wanted to mention is that just before we go is all right,",
    "start": "2832930",
    "end": "2844000"
  },
  {
    "text": "if we want to keep all the information at the bottom of the tree. Well, one of the nice things about this Vetri scheme is that there's no reason why we have to have the same conventions all the way through the tree.",
    "start": "2844000",
    "end": "2856120"
  },
  {
    "text": "We can have a different idea at every level because every level has been formed at a different sort of with a different time.",
    "start": "2856120",
    "end": "2863830"
  },
  {
    "text": "When when the roots splits, we can say, oh, we've now grown to a five level B tree.",
    "start": "2863830",
    "end": "2869260"
  },
  {
    "text": "Let's let's keep each level in a different form. And this is typical in in any in any data storage.",
    "start": "2869260",
    "end": "2875270"
  },
  {
    "text": "You'd say that you have all your you have all your all your carbon copies of letters that you wrote in the days when you had copies.",
    "start": "2875270",
    "end": "2884200"
  },
  {
    "text": "You keep those in a file folder, but then his powerful as a couple in a drawer and a drawer you have you know something and you have a label on the file folder.",
    "start": "2884200",
    "end": "2892720"
  },
  {
    "text": "But then you have another kind of a label on the drawers. And these drawers there are maybe maybe shipped out into some archive where they're put into certain, you know, certain rows or something like that.",
    "start": "2892720",
    "end": "2905190"
  },
  {
    "text": "So there might be many different kinds of every level in this tree might actually correspond to a different record size, a different physical medium.",
    "start": "2905190",
    "end": "2914349"
  },
  {
    "text": "All kinds of things are possible. But you want to be consistent across any one level.",
    "start": "2914350",
    "end": "2920890"
  },
  {
    "text": "But but but different levels could be different. And. In particular, we could do something quite different at the lowest level that we do at that moment than we do at the top,",
    "start": "2920890",
    "end": "2930830"
  },
  {
    "text": "at the upper levels and in the very same system that IBM uses.",
    "start": "2930830",
    "end": "2936700"
  },
  {
    "text": "This is a this is essentially beaches with with with the lower levels,",
    "start": "2936700",
    "end": "2945859"
  },
  {
    "text": "with the lower two levels treated specially because they want to be on the same cylinder and they want and they have pointer.",
    "start": "2945860",
    "end": "2952800"
  },
  {
    "text": "They have pointers going across from like.",
    "start": "2952800",
    "end": "2958070"
  },
  {
    "text": "So let. So you can keep all the data at the bottom and then the then up on the upper in the upper ones.",
    "start": "2958070",
    "end": "2966520"
  },
  {
    "text": "Just keep, just keep numbers that separate the keys. Not, they're not actual keys themselves.",
    "start": "2966520",
    "end": "2971680"
  },
  {
    "text": "You don't have to really be true keys if need be any, any convenient thing that will separate the records and all the records actually live at the bottom and there will even be a pointer between",
    "start": "2971680",
    "end": "2982270"
  },
  {
    "text": "blocks so that at the bottom level we would actually have a scheme just like this one that we talked about for it for ordinary file.",
    "start": "2982270",
    "end": "2989290"
  },
  {
    "text": "But then we also have an index to get at parts of the file. And the the algorithms for insertion deletion and maintaining half of the half full",
    "start": "2989290",
    "end": "3003120"
  },
  {
    "text": "ratio in the index blocks as well as the others are still similar to what we had before. We don't have to worry about the fact that that key in one of these, though, is is real.",
    "start": "3003120",
    "end": "3015220"
  },
  {
    "text": "Know, you just you have to change this when you're when you're moving, when you're reshuffling adjacent blocks on a deletion.",
    "start": "3015220",
    "end": "3022410"
  },
  {
    "text": "But you don't. But you don't have to in many cases.",
    "start": "3022410",
    "end": "3028240"
  },
  {
    "text": "You don't have to worry about the fact that the key that was actually used to discriminate there might not appear in this one anymore until you're doing it actually reorganization at a local level.",
    "start": "3028240",
    "end": "3039810"
  },
  {
    "text": "So this is a scheme that has the advantage then of of local updating.",
    "start": "3039810",
    "end": "3048480"
  },
  {
    "text": "Maintaining a fairly good storage in the worst case doesn't require these massive file reorganizations and also",
    "start": "3048480",
    "end": "3059100"
  },
  {
    "text": "allows a lot of the hierarchical structure also allows things like selective lockouts and so on to go on fairly,",
    "start": "3059100",
    "end": "3068340"
  },
  {
    "text": "fairly nicely. That was the advantage of these features.",
    "start": "3068340",
    "end": "3074310"
  },
  {
    "text": "Any more questions on that? Yeah, I just. You're talking about this being decided. Yes, yes.",
    "start": "3074310",
    "end": "3083680"
  },
  {
    "text": "Yes. That's the that's the intention. Yeah. That's the that's the one developed in Cambridge.",
    "start": "3083680",
    "end": "3091290"
  },
  {
    "text": "I, I. OK. I'm not sure if I'm not sure which one.",
    "start": "3091290",
    "end": "3098340"
  },
  {
    "text": "Which Foster Sergie use here. This is the one that was referred to. Where key E. A. IBM system.",
    "start": "3098340",
    "end": "3107260"
  },
  {
    "text": "Sternhell, 74. I think TSX is earlier than this is about eight years earlier.",
    "start": "3107260",
    "end": "3115610"
  },
  {
    "text": "Yeah. TSX is a lot earlier. I was Cambridge Scientific Center. That was different. Oh, one more point I guess I wanted to make today, and I forgot.",
    "start": "3115610",
    "end": "3126540"
  },
  {
    "text": "Is is that the way they implement VCM? It is that they know that they they use the paging hardware of the of the machine for virtual memory.",
    "start": "3126540",
    "end": "3141970"
  },
  {
    "text": "And it really would be nice if a system programing languages would allow us to talk about the memory pages that are equivalent to disk pages.",
    "start": "3141970",
    "end": "3154690"
  },
  {
    "text": "Then we could write all kinds of software that we could take advantage of the virtual memory in a reasonable way.",
    "start": "3154690",
    "end": "3160440"
  },
  {
    "text": "If you're if you're trying to implement Beatriz's yourself. But with the operating system, is is is preventing you from really knowing what what goes on on a disk.",
    "start": "3160440",
    "end": "3170800"
  },
  {
    "text": "Because it's all it's all it's but by these magic routines that it's swapping pages out of your virtual address, address, base,",
    "start": "3170800",
    "end": "3179290"
  },
  {
    "text": "what you're all you really want to know is how you work, which what size of of an array is the right thing for a virtual address space.",
    "start": "3179290",
    "end": "3188590"
  },
  {
    "text": "And and couldn't you tell your your compiler to get you an array.",
    "start": "3188590",
    "end": "3194620"
  },
  {
    "text": "That was, that was lined up correctly in memory so that it would, it would you know, so that you could use these techniques then.",
    "start": "3194620",
    "end": "3201580"
  },
  {
    "text": "Then you could implement these things very, very cleanly in your pa. programs and so on.",
    "start": "3201580",
    "end": "3207550"
  },
  {
    "text": "But without that then you just out, you're just taking your chances.",
    "start": "3207550",
    "end": "3213080"
  },
  {
    "text": "And on in only these these system programmers that that work at them,",
    "start": "3213080",
    "end": "3220030"
  },
  {
    "text": "at the manufacturers are able to really are able to really make these things work.",
    "start": "3220030",
    "end": "3227120"
  },
  {
    "text": "Right. So what? So the moral of the story is when you on a virtual machine, if you really want to use it right to the programmer,",
    "start": "3227120",
    "end": "3236370"
  },
  {
    "text": "ought to have a way to to get arrays lined up according to the pay of the physical pages.",
    "start": "3236370",
    "end": "3245650"
  },
  {
    "text": "If if he wants to make.",
    "start": "3245650",
    "end": "3276150"
  }
]