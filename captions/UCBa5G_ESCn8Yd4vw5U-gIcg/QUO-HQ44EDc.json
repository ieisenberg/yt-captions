[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "So first, we are going to talk about",
    "start": "4220",
    "end": "7725"
  },
  {
    "text": "relational classification and iterative classification.",
    "start": "7725",
    "end": "11250"
  },
  {
    "text": "So let me explain to you, uh,",
    "start": "11250",
    "end": "12555"
  },
  {
    "text": "the ideas, uh, for this part of the lecture.",
    "start": "12555",
    "end": "15900"
  },
  {
    "text": "So first, we wanna talk about what is, uh, relation classification,",
    "start": "15900",
    "end": "20640"
  },
  {
    "text": "then we'll talk about iterative classification, and then last,",
    "start": "20640",
    "end": "23925"
  },
  {
    "text": "I'm going to talk about, uh,",
    "start": "23925",
    "end": "25529"
  },
  {
    "text": "belief propagation as I- as I said, uh, earlier.",
    "start": "25530",
    "end": "28440"
  },
  {
    "start": "28000",
    "end": "236000"
  },
  {
    "text": "So, uh, probabilistic relational classifier,",
    "start": "28440",
    "end": "31785"
  },
  {
    "text": "the idea is the following.",
    "start": "31785",
    "end": "33060"
  },
  {
    "text": "Uh, the class probability, um,",
    "start": "33060",
    "end": "36240"
  },
  {
    "text": "Y_v of node v is a weighted average of class probabilities of its neighbors, right?",
    "start": "36240",
    "end": "41270"
  },
  {
    "text": "So this means that for labeled nodes we are going to",
    "start": "41270",
    "end": "43550"
  },
  {
    "text": "fix the class label to be the ground-truth label,",
    "start": "43550",
    "end": "47180"
  },
  {
    "text": "the label we are given, and then for, um,",
    "start": "47180",
    "end": "49550"
  },
  {
    "text": "unlabeled nodes, we are just initialize the belief that, let's say,",
    "start": "49550",
    "end": "54210"
  },
  {
    "text": "they are- uh, they have the color green to be,",
    "start": "54210",
    "end": "57050"
  },
  {
    "text": "let say, 0.5, so something, uh, uniform.",
    "start": "57050",
    "end": "59885"
  },
  {
    "text": "And then nodes are going to update their belief about what color they are about,",
    "start": "59885",
    "end": "64979"
  },
  {
    "text": "based on the- on the colors of the,",
    "start": "64980",
    "end": "68160"
  },
  {
    "text": "eh, nodes, uh, in the network, uh, around them.",
    "start": "68160",
    "end": "71255"
  },
  {
    "text": "And this is going to iterate until it, uh, converges.",
    "start": "71255",
    "end": "75145"
  },
  {
    "text": "And just to note,",
    "start": "75145",
    "end": "76680"
  },
  {
    "text": "here we are go- only going to use node labels and network structure,",
    "start": "76680",
    "end": "81589"
  },
  {
    "text": "but we have not yet going to use node attributes.",
    "start": "81589",
    "end": "84670"
  },
  {
    "text": "So here, this works even if nodes only have colors and there are no,",
    "start": "84670",
    "end": "89465"
  },
  {
    "text": "uh, attributes, uh, attached to the nodes,",
    "start": "89465",
    "end": "92000"
  },
  {
    "text": "or no features attached to the nodes.",
    "start": "92000",
    "end": "94375"
  },
  {
    "text": "So how are we going to do this, uh, update?",
    "start": "94375",
    "end": "97455"
  },
  {
    "text": "We are going to, uh,",
    "start": "97455",
    "end": "98925"
  },
  {
    "text": "update this formula that I- that I show- uh,",
    "start": "98925",
    "end": "101595"
  },
  {
    "text": "that I show here, and the idea is the following.",
    "start": "101595",
    "end": "103950"
  },
  {
    "text": "We say that probability that my node of interest v is of class C,",
    "start": "103950",
    "end": "108354"
  },
  {
    "text": "is simply, um, 1 over the sum over, let's say,",
    "start": "108355",
    "end": "112830"
  },
  {
    "text": "the weights of the edges, um, uh,",
    "start": "112830",
    "end": "115830"
  },
  {
    "text": "that- that are adjacent to our node v. So this is basically, uh,",
    "start": "115830",
    "end": "120170"
  },
  {
    "text": "counts the degree or the in-degree of node v. Um,",
    "start": "120170",
    "end": "124890"
  },
  {
    "text": "and then we say, now let's sum up over this same,",
    "start": "124890",
    "end": "127640"
  },
  {
    "text": "uh, set of edges.",
    "start": "127640",
    "end": "129095"
  },
  {
    "text": "Here is the weight of every edge,",
    "start": "129095",
    "end": "131030"
  },
  {
    "text": "uh times the probability that",
    "start": "131030",
    "end": "133265"
  },
  {
    "text": "the neighbor beho- belongs to the same class C. So basically,",
    "start": "133265",
    "end": "136830"
  },
  {
    "text": "here we are summing all the neighboring nodes,",
    "start": "136830",
    "end": "138890"
  },
  {
    "text": "u of node v. We ask what is the weight of the edge times the probability,",
    "start": "138890",
    "end": "145069"
  },
  {
    "text": "the likelihood that node u belongs to class C?",
    "start": "145070",
    "end": "147725"
  },
  {
    "text": "So basically what this is saying,",
    "start": "147725",
    "end": "149795"
  },
  {
    "text": "is that the node v says the- the likelihood that I belong to a given class C,",
    "start": "149795",
    "end": "155930"
  },
  {
    "text": "is the average likelihood that",
    "start": "155930",
    "end": "159079"
  },
  {
    "text": "my neighbors belong to that same class C. Uh, and that's it, right?",
    "start": "159080",
    "end": "164000"
  },
  {
    "text": "So in some sense here,",
    "start": "164000",
    "end": "165185"
  },
  {
    "text": "a node is going to update its belief for a prediction about its own label,",
    "start": "165185",
    "end": "169625"
  },
  {
    "text": "about the beliefs or predictions about the labels of its nearby nodes.",
    "start": "169625",
    "end": "173960"
  },
  {
    "text": "And here we are making the most basic assumption,",
    "start": "173960",
    "end": "176210"
  },
  {
    "text": "which is that the two nodes share a label",
    "start": "176210",
    "end": "179285"
  },
  {
    "text": "if they are connected in the- in the network, which is here.",
    "start": "179285",
    "end": "182570"
  },
  {
    "text": "And, you know, we can now think of A_uv as a zero, one,",
    "start": "182570",
    "end": "186200"
  },
  {
    "text": "kind of as an unweighted graph,",
    "start": "186200",
    "end": "187925"
  },
  {
    "text": "or we can think of this as a weight,",
    "start": "187925",
    "end": "190270"
  },
  {
    "text": "um, and then, you know, now different nodes,",
    "start": "190270",
    "end": "192990"
  },
  {
    "text": "u have different influence on the label of v,",
    "start": "192990",
    "end": "196290"
  },
  {
    "text": "because of the co- different connection strength.",
    "start": "196290",
    "end": "198765"
  },
  {
    "text": "And this is just a normalization, so that this, uh,",
    "start": "198765",
    "end": "201690"
  },
  {
    "text": "weight that summation, uh,",
    "start": "201690",
    "end": "203040"
  },
  {
    "text": "is between, uh, zero and one.",
    "start": "203040",
    "end": "205599"
  },
  {
    "text": "There are a few just important things to note,",
    "start": "205600",
    "end": "208330"
  },
  {
    "text": "is that convergence of this formula is not guaranteed.",
    "start": "208330",
    "end": "211780"
  },
  {
    "text": "Um, and also notice as I said,",
    "start": "211780",
    "end": "214640"
  },
  {
    "text": "this model cannot use node featured information.",
    "start": "214640",
    "end": "217640"
  },
  {
    "text": "It is just using the labels of the nodes and also uses the network information.",
    "start": "217640",
    "end": "223755"
  },
  {
    "text": "How does it use the network information?",
    "start": "223755",
    "end": "226175"
  },
  {
    "text": "It uses it because these summations go over",
    "start": "226175",
    "end": "229250"
  },
  {
    "text": "the edges or over the neighbors, uh, in the network.",
    "start": "229250",
    "end": "232535"
  },
  {
    "text": "That's how network information is used.",
    "start": "232535",
    "end": "235525"
  },
  {
    "text": "So let me give you now one example how one could go and,",
    "start": "235525",
    "end": "239519"
  },
  {
    "start": "236000",
    "end": "305000"
  },
  {
    "text": "uh, implement the simple method.",
    "start": "239520",
    "end": "241505"
  },
  {
    "text": "First, you know, we are going to, uh,",
    "start": "241505",
    "end": "243890"
  },
  {
    "text": "initialize all labeled nodes, uh,",
    "start": "243890",
    "end": "246710"
  },
  {
    "text": "with their, uh, true labels,",
    "start": "246710",
    "end": "249615"
  },
  {
    "text": "and we are going to fix this.",
    "start": "249615",
    "end": "250800"
  },
  {
    "text": "So this probabilities of green and red nodes remain fixed.",
    "start": "250800",
    "end": "254030"
  },
  {
    "text": "So maybe it says, uh,",
    "start": "254030",
    "end": "255530"
  },
  {
    "text": "node 7 belongs to green class with probability 1,",
    "start": "255530",
    "end": "258739"
  },
  {
    "text": "while the node, uh,",
    "start": "258740",
    "end": "260090"
  },
  {
    "text": "2 belongs to green class with probability 0, because it's red.",
    "start": "260090",
    "end": "264250"
  },
  {
    "text": "Right? Um, and then all the unlabeled nodes here,",
    "start": "264250",
    "end": "267170"
  },
  {
    "text": "we will assign their, uh,",
    "start": "267170",
    "end": "268565"
  },
  {
    "text": "probability to belonging to,",
    "start": "268565",
    "end": "270305"
  },
  {
    "text": "uh, to class, uh,",
    "start": "270305",
    "end": "271865"
  },
  {
    "text": "green, to the positive class to be,",
    "start": "271865",
    "end": "273910"
  },
  {
    "text": "uh, to be 0.5., Right?",
    "start": "273910",
    "end": "275390"
  },
  {
    "text": "Nodes are unde- undecided which class they wanna, uh, belong to.",
    "start": "275390",
    "end": "279295"
  },
  {
    "text": "So now what we are going to do,",
    "start": "279295",
    "end": "280700"
  },
  {
    "text": "is we're going to update the- thi- this probabilities P of the, uh, gray nodes.",
    "start": "280700",
    "end": "286505"
  },
  {
    "text": "So let me show you how we are going to do this.",
    "start": "286505",
    "end": "288590"
  },
  {
    "text": "Um, of course, when we will be doing this,",
    "start": "288590",
    "end": "291425"
  },
  {
    "text": "we need to come up with some order in which we are going to update the nodes.",
    "start": "291425",
    "end": "295759"
  },
  {
    "text": "And in our case, let's assume that our order is exactly based on node ID,",
    "start": "295760",
    "end": "299990"
  },
  {
    "text": "so it's 1, 2, 3, 4, 5, and so on.",
    "start": "299990",
    "end": "302095"
  },
  {
    "text": "So first, we are going to update node 3.",
    "start": "302095",
    "end": "305195"
  },
  {
    "start": "305000",
    "end": "392000"
  },
  {
    "text": "And node 3 says the following.",
    "start": "305195",
    "end": "307830"
  },
  {
    "text": "It says, \"Aha, I have, uh, three neighbors.",
    "start": "307830",
    "end": "310634"
  },
  {
    "text": "Um, you know, um,",
    "start": "310635",
    "end": "312450"
  },
  {
    "text": "and, uh, how I- how am I going, uh, to do this?",
    "start": "312450",
    "end": "315735"
  },
  {
    "text": "I have, um, you know, uh,",
    "start": "315735",
    "end": "317969"
  },
  {
    "text": "the- the- two neighbors of me have the probability zero of belonging to the green class,",
    "start": "317970",
    "end": "323390"
  },
  {
    "text": "and this- uh, and I have one gray- gray member that has 0.5.",
    "start": "323390",
    "end": "327665"
  },
  {
    "text": "So this is 0, 0 plus 0.5,",
    "start": "327665",
    "end": "329990"
  },
  {
    "text": "and because I have three neighbors and my graph is unweighted,",
    "start": "329990",
    "end": "333229"
  },
  {
    "text": "so this is divided by 3.",
    "start": "333229",
    "end": "334825"
  },
  {
    "text": "So now the- the node number 3 has a probability of belonging to green class,",
    "start": "334825",
    "end": "339950"
  },
  {
    "text": "uh, o- of 0.17.\"",
    "start": "339950",
    "end": "342160"
  },
  {
    "text": "Now there is- you know,",
    "start": "342160",
    "end": "343500"
  },
  {
    "text": "now node 4 wakes up and we're going to update its own,",
    "start": "343500",
    "end": "347330"
  },
  {
    "text": "uh, predicted probability of being green.",
    "start": "347330",
    "end": "349800"
  },
  {
    "text": "And again, it goes over its four neighbors and we sum up at zero,",
    "start": "349800",
    "end": "354860"
  },
  {
    "text": "uh, this is because of this one.",
    "start": "354860",
    "end": "356615"
  },
  {
    "text": "Then we sum up 0.17,",
    "start": "356615",
    "end": "358595"
  },
  {
    "text": "0.5, and 1, and divide it by 4.",
    "start": "358595",
    "end": "361565"
  },
  {
    "text": "So the, um, uh,",
    "start": "361565",
    "end": "364290"
  },
  {
    "text": "node number 4 will say,",
    "start": "364290",
    "end": "366030"
  },
  {
    "text": "\"my likelihood or my probability that I am,",
    "start": "366030",
    "end": "369215"
  },
  {
    "text": "um, labeled green is 0.42.\"",
    "start": "369215",
    "end": "372625"
  },
  {
    "text": "Now, um, now that node 4 has,",
    "start": "372625",
    "end": "375590"
  },
  {
    "text": "uh, updated its label,",
    "start": "375590",
    "end": "377175"
  },
  {
    "text": "then node 5 is going to update its label,",
    "start": "377175",
    "end": "380159"
  },
  {
    "text": "again, summing over its neighbors,",
    "start": "380160",
    "end": "382170"
  },
  {
    "text": "ah, and, you know, it will- it will come up with a belief",
    "start": "382170",
    "end": "384740"
  },
  {
    "text": "that its probability of being green is 0.73.",
    "start": "384740",
    "end": "387474"
  },
  {
    "text": "Then, you know, node 8 is going to update",
    "start": "387475",
    "end": "389780"
  },
  {
    "text": "its label and node 9 is going to update its label.",
    "start": "389780",
    "end": "392750"
  },
  {
    "start": "392000",
    "end": "515000"
  },
  {
    "text": "And after, you know, the first iteration,",
    "start": "392750",
    "end": "394955"
  },
  {
    "text": "updates of all unlabeled nodes, uh,",
    "start": "394955",
    "end": "397319"
  },
  {
    "text": "these are our, uh, beliefs,",
    "start": "397320",
    "end": "399155"
  },
  {
    "text": "our predicted probabilities of them being green.",
    "start": "399155",
    "end": "402200"
  },
  {
    "text": "Again, the- the pre-labeled nodes,",
    "start": "402200",
    "end": "404870"
  },
  {
    "text": "they don't get to update,",
    "start": "404870",
    "end": "405965"
  },
  {
    "text": "they remain fixed, and all the gray nodes gets to update.",
    "start": "405965",
    "end": "409040"
  },
  {
    "text": "And you- for example, node number 9,",
    "start": "409040",
    "end": "411175"
  },
  {
    "text": "thinks it's green because the only neighbor it has is green with probability one,",
    "start": "411175",
    "end": "415800"
  },
  {
    "text": "so nine is also very sure it's- uh, it's green.",
    "start": "415800",
    "end": "419715"
  },
  {
    "text": "Um, while for example,",
    "start": "419715",
    "end": "421050"
  },
  {
    "text": "the pa- the eight is a bit less because it has one node who is not- uh,",
    "start": "421050",
    "end": "425414"
  },
  {
    "text": "neighboring one node, node number 5,",
    "start": "425415",
    "end": "427475"
  },
  {
    "text": "and that node is not super entirely sure about its color yet.",
    "start": "427475",
    "end": "431440"
  },
  {
    "text": "So this is, uh, one iteration.",
    "start": "431440",
    "end": "433605"
  },
  {
    "text": "Now we do the second iteration when now again,",
    "start": "433605",
    "end": "436280"
  },
  {
    "text": "node 3 is going to- to update its by summing 0,",
    "start": "436280",
    "end": "440375"
  },
  {
    "text": "0- 0, 0, um,",
    "start": "440375",
    "end": "442040"
  },
  {
    "text": "and 0.42, and dividing it by 3.",
    "start": "442040",
    "end": "444580"
  },
  {
    "text": "So what is going to happen,",
    "start": "444580",
    "end": "445970"
  },
  {
    "text": "is this probability increases a bit more than, uh,",
    "start": "445970",
    "end": "448910"
  },
  {
    "text": "you know, node 4 updated itself,",
    "start": "448910",
    "end": "450560"
  },
  {
    "text": "five updated, uh, and eight updated.",
    "start": "450560",
    "end": "453230"
  },
  {
    "text": "And nine updated, but its portability didn't change,",
    "start": "453230",
    "end": "456350"
  },
  {
    "text": "so we say node- node 9 has converged.",
    "start": "456350",
    "end": "458720"
  },
  {
    "text": "It converged to its belief and that's how it would stay.",
    "start": "458720",
    "end": "462265"
  },
  {
    "text": "So now you notice how the, uh,",
    "start": "462265",
    "end": "464190"
  },
  {
    "text": "beliefs have, uh, changed across the network.",
    "start": "464190",
    "end": "466680"
  },
  {
    "text": "And now I can run this for another, uh, iteration,",
    "start": "466680",
    "end": "469979"
  },
  {
    "text": "where again, I've update nodes in the order 3,",
    "start": "469980",
    "end": "472610"
  },
  {
    "text": "4, 5, uh, 8.",
    "start": "472610",
    "end": "474655"
  },
  {
    "text": "And as I update them, uh, you know,",
    "start": "474655",
    "end": "476940"
  },
  {
    "text": "the probability's updated a bit again, uh,",
    "start": "476940",
    "end": "479685"
  },
  {
    "text": "but node 8 did not change its, uh,",
    "start": "479685",
    "end": "482560"
  },
  {
    "text": "probability, so we say it converged and we fix it.",
    "start": "482560",
    "end": "485650"
  },
  {
    "text": "Right? So now, I still have three nodes and I will",
    "start": "485650",
    "end": "488285"
  },
  {
    "text": "update this for another iteration, right?",
    "start": "488285",
    "end": "491085"
  },
  {
    "text": "Um, and in the other iteration,",
    "start": "491085",
    "end": "492884"
  },
  {
    "text": "the four- five and three don't change,",
    "start": "492885",
    "end": "495510"
  },
  {
    "text": "so they have also converged.",
    "start": "495510",
    "end": "496800"
  },
  {
    "text": "So now, uh, node 3 beliefs it's of green class with probability 0.16.",
    "start": "496800",
    "end": "501759"
  },
  {
    "text": "Um, five thinks it's 0.86, so quite high.",
    "start": "501760",
    "end": "505770"
  },
  {
    "text": "And then, you know, po- no- node number 4 is undetermined.",
    "start": "505770",
    "end": "509849"
  },
  {
    "text": "It thinks it's a bit- leaning a bit more towards green,",
    "start": "509850",
    "end": "512640"
  },
  {
    "text": "but it's, uh, but it's unclear.",
    "start": "512640",
    "end": "514635"
  },
  {
    "text": "So, um, if I run for one more iteration,",
    "start": "514635",
    "end": "518570"
  },
  {
    "start": "515000",
    "end": "581000"
  },
  {
    "text": "um, then the probabilities,",
    "start": "518570",
    "end": "520510"
  },
  {
    "text": "um, on these classification task will converge.",
    "start": "520510",
    "end": "523340"
  },
  {
    "text": "Here is what- the- the values they converge to,",
    "start": "523340",
    "end": "525775"
  },
  {
    "text": "so what do we conclude?",
    "start": "525775",
    "end": "527105"
  },
  {
    "text": "We conclude that, uh, 9,8,",
    "start": "527105",
    "end": "529610"
  },
  {
    "text": "and 5, uh, belong- uh,",
    "start": "529610",
    "end": "531725"
  },
  {
    "text": "belong to green class.",
    "start": "531725",
    "end": "534050"
  },
  {
    "text": "Uh, node 4 also belongs to green class because it's just above 0.5, but very slightly.",
    "start": "534050",
    "end": "540334"
  },
  {
    "text": "So four is also green.",
    "start": "540335",
    "end": "542255"
  },
  {
    "text": "And three says, \"You know,",
    "start": "542255",
    "end": "543860"
  },
  {
    "text": "I have a very low belief that I am of green color,",
    "start": "543860",
    "end": "546640"
  },
  {
    "text": "\" so three is of red color, right?",
    "start": "546640",
    "end": "548600"
  },
  {
    "text": "So our predictions now would be that 4- 4, 5, uh, 8,",
    "start": "548600",
    "end": "552750"
  },
  {
    "text": "and belong to, uh, green color,",
    "start": "552750",
    "end": "554640"
  },
  {
    "text": "and three belongs to, uh, red color.",
    "start": "554640",
    "end": "557235"
  },
  {
    "text": "And we did this by basically just doing this, um,",
    "start": "557235",
    "end": "559870"
  },
  {
    "text": "iterative classification by propagating",
    "start": "559870",
    "end": "562580"
  },
  {
    "text": "this label information and nodes updating its belief about its label,",
    "start": "562580",
    "end": "567320"
  },
  {
    "text": "based on the labels of other nodes.",
    "start": "567320",
    "end": "568970"
  },
  {
    "text": "So in this approach,",
    "start": "568970",
    "end": "570620"
  },
  {
    "text": "we used the notion of the network,",
    "start": "570620",
    "end": "572870"
  },
  {
    "text": "but we did not use the notion that nodes have any kind of features or any kind of,",
    "start": "572870",
    "end": "578410"
  },
  {
    "text": "uh- uh, signal attached to them.",
    "start": "578410",
    "end": "581454"
  },
  {
    "start": "581000",
    "end": "629000"
  },
  {
    "text": "So this was in terms of relational classification based on the labels alone.",
    "start": "581455",
    "end": "588290"
  },
  {
    "text": "And you saw how basically the- the probabilities kind of",
    "start": "588290",
    "end": "591980"
  },
  {
    "text": "spread from labeled nodes to unlabeled nodes through these- um,",
    "start": "591980",
    "end": "595945"
  },
  {
    "text": "through this iterative classification,",
    "start": "595945",
    "end": "598535"
  },
  {
    "text": "where nodes were updating, uh,",
    "start": "598535",
    "end": "600425"
  },
  {
    "text": "the probabilities, based on the probabilities of",
    "start": "600425",
    "end": "603110"
  },
  {
    "text": "their nearby nodes or their neighbors in the network.",
    "start": "603110",
    "end": "606959"
  },
  {
    "text": "So now, we are going to look at the iterative, uh, classification,",
    "start": "606960",
    "end": "612140"
  },
  {
    "text": "a different kind of type of approach that will use more,",
    "start": "612140",
    "end": "615530"
  },
  {
    "text": "uh, of the information.",
    "start": "615530",
    "end": "617105"
  },
  {
    "text": "In particular, it's going to use both the node features as well as the labels,",
    "start": "617105",
    "end": "621779"
  },
  {
    "text": "uh, of the nearby nodes.",
    "start": "621780",
    "end": "623700"
  },
  {
    "text": "So this will now combine both the network as well as the,",
    "start": "623700",
    "end": "626960"
  },
  {
    "text": "uh, um, the feature information of the nodes.",
    "start": "626960",
    "end": "630130"
  },
  {
    "start": "629000",
    "end": "747000"
  },
  {
    "text": "So in the relational classifiers that we have just talked about,",
    "start": "630130",
    "end": "634085"
  },
  {
    "text": "they do not use node attributes,",
    "start": "634085",
    "end": "635970"
  },
  {
    "text": "they just use the network structure and the labels.",
    "start": "635970",
    "end": "638769"
  },
  {
    "text": "So now the question is,",
    "start": "638770",
    "end": "640380"
  },
  {
    "text": "how do we label?",
    "start": "640380",
    "end": "641520"
  },
  {
    "text": "How do we take advantage?",
    "start": "641520",
    "end": "643635"
  },
  {
    "text": "How do we harness the information in node attributes?",
    "start": "643635",
    "end": "647500"
  },
  {
    "text": "And the main idea of iterative classification,",
    "start": "647500",
    "end": "650720"
  },
  {
    "text": "is to classify node v based on its attributes f,",
    "start": "650720",
    "end": "654800"
  },
  {
    "text": "as well as the labels z of the neighboring nodes,",
    "start": "654800",
    "end": "659565"
  },
  {
    "text": "uh, N sub v of this,",
    "start": "659565",
    "end": "661170"
  },
  {
    "text": "uh, node v of interest.",
    "start": "661170",
    "end": "664040"
  },
  {
    "text": "So how is this going to work?",
    "start": "664040",
    "end": "666954"
  },
  {
    "text": "On the input, we are given a graph.",
    "start": "666955",
    "end": "669205"
  },
  {
    "text": "Each node will have a feature vector associated with it,",
    "start": "669205",
    "end": "672550"
  },
  {
    "text": "and some nodes will be labeled with, uh, labels y.",
    "start": "672550",
    "end": "676315"
  },
  {
    "text": "The task is to predict labels of unlabeled nodes",
    "start": "676315",
    "end": "679885"
  },
  {
    "text": "and the way we are going to do this is that we are going to train two classifiers.",
    "start": "679885",
    "end": "685045"
  },
  {
    "text": "We are going first to train a base classifier that is going to predict a label of a node,",
    "start": "685045",
    "end": "692050"
  },
  {
    "text": "uh, based on its feature vector alone.",
    "start": "692050",
    "end": "694959"
  },
  {
    "text": "That's the classifier Phi_1.",
    "start": "694960",
    "end": "697855"
  },
  {
    "text": "And then, we are also going to train another classifier that will have two inputs.",
    "start": "697855",
    "end": "704154"
  },
  {
    "text": "It will have inputs about the features of node v",
    "start": "704155",
    "end": "707470"
  },
  {
    "text": "and it is also going to have this additional input,",
    "start": "707470",
    "end": "711475"
  },
  {
    "text": "this vector z, that will su- summarize the labels of v's neighbors.",
    "start": "711475",
    "end": "718555"
  },
  {
    "text": "So this means that now we are making predictions with this classify our Phi_2,",
    "start": "718555",
    "end": "724089"
  },
  {
    "text": "um, using two- two types of input.",
    "start": "724090",
    "end": "727150"
  },
  {
    "text": "One is the feature information, uh,",
    "start": "727150",
    "end": "729325"
  },
  {
    "text": "captured in this feature vector f, and, uh,",
    "start": "729325",
    "end": "732310"
  },
  {
    "text": "also the labels of the name of its neighbors captured in the vector, uh, z.",
    "start": "732310",
    "end": "739210"
  },
  {
    "text": "And this way, this approach will now be using",
    "start": "739210",
    "end": "742090"
  },
  {
    "text": "both the feature information as well as the network information.",
    "start": "742090",
    "end": "746785"
  },
  {
    "text": "So let me tell you now how do we compute these labels summary vector z, uh,",
    "start": "746785",
    "end": "753610"
  },
  {
    "start": "747000",
    "end": "853000"
  },
  {
    "text": "of a- of a given node v. So the idea will be that,",
    "start": "753610",
    "end": "756475"
  },
  {
    "text": "you know, I'm a given node here in the network,",
    "start": "756475",
    "end": "758769"
  },
  {
    "text": "let's say blue and I have, um,",
    "start": "758770",
    "end": "761020"
  },
  {
    "text": "some nodes that believe they are green and other nodes that believe they are red.",
    "start": "761020",
    "end": "764890"
  },
  {
    "text": "So now what I need is to create this- this- this summary vector z, uh,",
    "start": "764890",
    "end": "770515"
  },
  {
    "text": "that will tell me- what are the beliefs,",
    "start": "770515",
    "end": "772960"
  },
  {
    "text": "what are- what does my- what do my neighbors think about their labels.",
    "start": "772960",
    "end": "776575"
  },
  {
    "text": "So for example, there are many ch- choices I can make to determine- to set this,",
    "start": "776575",
    "end": "782200"
  },
  {
    "text": "uh, vector, er, z.",
    "start": "782200",
    "end": "784165"
  },
  {
    "text": "For example, I could simply have it to be a vector,",
    "start": "784165",
    "end": "787584"
  },
  {
    "text": "to be a histogram which would count the number",
    "start": "787585",
    "end": "791035"
  },
  {
    "text": "or the fraction of each label in the neighborhood.",
    "start": "791035",
    "end": "794845"
  },
  {
    "text": "So for example, in this case,",
    "start": "794845",
    "end": "796899"
  },
  {
    "text": "um, for this node, uh,",
    "start": "796900",
    "end": "798775"
  },
  {
    "text": "the blue node we could say a-ha,",
    "start": "798775",
    "end": "800545"
  },
  {
    "text": "I have two neighbors who think they are green,",
    "start": "800545",
    "end": "803019"
  },
  {
    "text": "and I have one neighbor who thinks it's red.",
    "start": "803020",
    "end": "805645"
  },
  {
    "text": "Or another way would be to say,",
    "start": "805645",
    "end": "807580"
  },
  {
    "text": "you know, 66 percent of my,",
    "start": "807580",
    "end": "809620"
  },
  {
    "text": "um, neighbors think they are green,",
    "start": "809620",
    "end": "812305"
  },
  {
    "text": "and 33 think they are red.",
    "start": "812305",
    "end": "814705"
  },
  {
    "text": "And this is what this vector z would capture.",
    "start": "814705",
    "end": "817750"
  },
  {
    "text": "We could also, for example, um,",
    "start": "817750",
    "end": "819910"
  },
  {
    "text": "extend z to say what is the most common label among, uh,",
    "start": "819910",
    "end": "824035"
  },
  {
    "text": "these neighbors, or how many different labels are among these neighbors.",
    "start": "824035",
    "end": "828654"
  },
  {
    "text": "But essentially here the idea is that this vector z",
    "start": "828655",
    "end": "832045"
  },
  {
    "text": "captures how the labels around the node of interest,",
    "start": "832045",
    "end": "837175"
  },
  {
    "text": "uh, v are- are distributed among,",
    "start": "837175",
    "end": "841029"
  },
  {
    "text": "uh, the neighbors of node v in the network.",
    "start": "841030",
    "end": "844090"
  },
  {
    "text": "Um, and there are a lot of different, uh, choices, uh,",
    "start": "844090",
    "end": "847165"
  },
  {
    "text": "how we come up the,",
    "start": "847165",
    "end": "849565"
  },
  {
    "text": "uh- how we can come up with this vector.",
    "start": "849565",
    "end": "851905"
  },
  {
    "text": "Um, so this iterative classifiers are going now to work in two steps.",
    "start": "851905",
    "end": "858459"
  },
  {
    "start": "853000",
    "end": "1015000"
  },
  {
    "text": "In the first step or in the first phase,",
    "start": "858459",
    "end": "861130"
  },
  {
    "text": "we are going to classify node labels based on node attributes alone.",
    "start": "861130",
    "end": "866065"
  },
  {
    "text": "So it means using the training data,",
    "start": "866065",
    "end": "868585"
  },
  {
    "text": "we are going to train two classifiers.",
    "start": "868585",
    "end": "870790"
  },
  {
    "text": "For example, using a linear classifier, a neural network,",
    "start": "870790",
    "end": "873820"
  },
  {
    "text": "or support vector machine or a decision tree that given a feature vector of a given node,",
    "start": "873820",
    "end": "878980"
  },
  {
    "text": "it's going to predict its label.",
    "start": "878980",
    "end": "881185"
  },
  {
    "text": "And in phase 1, we are going to apply this classifier Phi_1,",
    "start": "881185",
    "end": "886209"
  },
  {
    "text": "so that now every node in the network has some predicted, uh, label.",
    "start": "886209",
    "end": "890935"
  },
  {
    "text": "And then using the training data,",
    "start": "890935",
    "end": "893125"
  },
  {
    "text": "we are also going to train this classifier Phi_2,",
    "start": "893125",
    "end": "896650"
  },
  {
    "text": "that is going to use two inputs.",
    "start": "896650",
    "end": "898315"
  },
  {
    "text": "It's going to use the feature of the node of interest,",
    "start": "898315",
    "end": "901555"
  },
  {
    "text": "as well as this summary vector z that captures or summarizes the labels of the nodes,",
    "start": "901555",
    "end": "908830"
  },
  {
    "text": "um, in it's network neighborhood.",
    "start": "908830",
    "end": "911470"
  },
  {
    "text": "And this Phi_2 is going to predict the label of the node",
    "start": "911470",
    "end": "914230"
  },
  {
    "text": "of interest v based on its features,",
    "start": "914230",
    "end": "916975"
  },
  {
    "text": "as well as the summary z of its,",
    "start": "916975",
    "end": "919630"
  },
  {
    "text": "uh- of the labels of its neighbors.",
    "start": "919630",
    "end": "922210"
  },
  {
    "text": "And then- right, so we have first applied Phi_1 then we also have trained Phi_2 so",
    "start": "922210",
    "end": "929230"
  },
  {
    "text": "that now we will go into phase 2 where we are going to",
    "start": "929230",
    "end": "932110"
  },
  {
    "text": "iterate and we are going to iterate until convergence,",
    "start": "932110",
    "end": "936385"
  },
  {
    "text": "uh, the following- uh, the following, uh,",
    "start": "936385",
    "end": "938800"
  },
  {
    "text": "iteration where on the, uh,",
    "start": "938800",
    "end": "941035"
  },
  {
    "text": "test set, which means on the unlabeled nodes.",
    "start": "941035",
    "end": "943690"
  },
  {
    "text": "Uh, we are going to use this, uh, first,",
    "start": "943690",
    "end": "947170"
  },
  {
    "text": "the classifier Phi_1 to assign initial, uh, labels.",
    "start": "947170",
    "end": "951625"
  },
  {
    "text": "We are going to compute the label summaries z,",
    "start": "951625",
    "end": "955270"
  },
  {
    "text": "and then we are going to predict the labels with the second classifier, Phi_2.",
    "start": "955270",
    "end": "960130"
  },
  {
    "text": "And we are going now to repeat this process until it",
    "start": "960130",
    "end": "963670"
  },
  {
    "text": "converges in a sense that we are going to update the vector z.",
    "start": "963670",
    "end": "967959"
  },
  {
    "text": "We are going to, uh,",
    "start": "967960",
    "end": "969280"
  },
  {
    "text": "apply the classifier Phi_2 to update the label of the node.",
    "start": "969280",
    "end": "973270"
  },
  {
    "text": "And, uh, now the no- node labels have updated,",
    "start": "973270",
    "end": "977050"
  },
  {
    "text": "we are going to update the label summaries z and again",
    "start": "977050",
    "end": "981325"
  },
  {
    "text": "apply Phi_2 to update the node predi- the- the node predictions, update z,",
    "start": "981325",
    "end": "986800"
  },
  {
    "text": "update the prediction, and keep iterating this until this, uh,",
    "start": "986800",
    "end": "991015"
  },
  {
    "text": "class labels stabilize, converge or some maximum number of iterations is reached.",
    "start": "991015",
    "end": "997570"
  },
  {
    "text": "Um, note that in general or in worse-case,",
    "start": "997570",
    "end": "1001440"
  },
  {
    "text": "uh, convergence is not guaranteed,",
    "start": "1001440",
    "end": "1003285"
  },
  {
    "text": "so we would set some maximum, uh,",
    "start": "1003285",
    "end": "1005639"
  },
  {
    "text": "number of iterations, you know,",
    "start": "1005640",
    "end": "1007050"
  },
  {
    "text": "maybe 10, 50, 100, something like that, something like that.",
    "start": "1007050",
    "end": "1010320"
  },
  {
    "text": "Not too many- not too many.",
    "start": "1010320",
    "end": "1011790"
  },
  {
    "text": "Um, so that's the idea.",
    "start": "1011790",
    "end": "1014680"
  },
  {
    "text": "So what I wanna do next is actually show you",
    "start": "1014690",
    "end": "1019050"
  },
  {
    "start": "1015000",
    "end": "1437000"
  },
  {
    "text": "this to give you a sense how this work on a simple, uh, toy example.",
    "start": "1019050",
    "end": "1023654"
  },
  {
    "text": "So the idea here is that we have an input graph,",
    "start": "1023655",
    "end": "1026939"
  },
  {
    "text": "uh, let's say that we are thinking about web pages.",
    "start": "1026940",
    "end": "1029970"
  },
  {
    "text": "So we have a graph of how web pages link to each other.",
    "start": "1029970",
    "end": "1033164"
  },
  {
    "text": "Each node will be a web page.",
    "start": "1033165",
    "end": "1035160"
  },
  {
    "text": "An edge will be a hyperlink,",
    "start": "1035160",
    "end": "1037395"
  },
  {
    "text": "uh, between the web pages.",
    "start": "1037395",
    "end": "1039660"
  },
  {
    "text": "And, uh, uh, we will have a directed edge,",
    "start": "1039660",
    "end": "1043245"
  },
  {
    "text": "which means that one page points to another page.",
    "start": "1043245",
    "end": "1046290"
  },
  {
    "text": "And imagine that every node in my network is,",
    "start": "1046290",
    "end": "1049410"
  },
  {
    "text": "uh, is, uh, is described with the set of features.",
    "start": "1049410",
    "end": "1052230"
  },
  {
    "text": "In our case, you know,",
    "start": "1052230",
    "end": "1053610"
  },
  {
    "text": "we could simply assume that these features captures,",
    "start": "1053610",
    "end": "1056760"
  },
  {
    "text": "uh, what words, what texts a web page is using.",
    "start": "1056760",
    "end": "1060270"
  },
  {
    "text": "And imagine that the task we wanna do is to predict the topic of the web page.",
    "start": "1060270",
    "end": "1067035"
  },
  {
    "text": "And what we would like to do in this prediction is use two facts.",
    "start": "1067035",
    "end": "1070770"
  },
  {
    "text": "First is, of course,",
    "start": "1070770",
    "end": "1071970"
  },
  {
    "text": "we'd like to use the words of the web page to predict the topic.",
    "start": "1071970",
    "end": "1075525"
  },
  {
    "text": "And then the second thing we would like to do is we also can",
    "start": "1075525",
    "end": "1079350"
  },
  {
    "text": "assume that pages that are on similar topics or on the same topic,",
    "start": "1079350",
    "end": "1083669"
  },
  {
    "text": "they tend to link one another.",
    "start": "1083670",
    "end": "1085875"
  },
  {
    "text": "So when we make a prediction about the topic of a page,",
    "start": "1085875",
    "end": "1089340"
  },
  {
    "text": "we don't only rely on the words that the page users itself.",
    "start": "1089340",
    "end": "1093914"
  },
  {
    "text": "But if you also wanna rely on the labels,",
    "start": "1093915",
    "end": "1097005"
  },
  {
    "text": "on the topics of the pages that link to this,",
    "start": "1097005",
    "end": "1100710"
  },
  {
    "text": "uh, page of interest.",
    "start": "1100710",
    "end": "1102480"
  },
  {
    "text": "So that is, uh, the idea.",
    "start": "1102480",
    "end": "1104309"
  },
  {
    "text": "Uh, this is what we would like to do.",
    "start": "1104310",
    "end": "1107655"
  },
  {
    "text": "So let me now, uh,",
    "start": "1107655",
    "end": "1109965"
  },
  {
    "text": "show you how- how this would work, uh,",
    "start": "1109965",
    "end": "1112980"
  },
  {
    "text": "in this, uh, example of a web page classification.",
    "start": "1112980",
    "end": "1117850"
  },
  {
    "text": "So the idea here is that first,",
    "start": "1119060",
    "end": "1122460"
  },
  {
    "text": "we are going to train this baseline classifier,",
    "start": "1122460",
    "end": "1126210"
  },
  {
    "text": "this classifier Phi 1,",
    "start": "1126210",
    "end": "1129240"
  },
  {
    "text": "that is going to- to use and classify pages,",
    "start": "1129240",
    "end": "1134010"
  },
  {
    "text": "classify nodes based on their attributes.",
    "start": "1134010",
    "end": "1137085"
  },
  {
    "text": "So just to give you uh,",
    "start": "1137085",
    "end": "1139005"
  },
  {
    "text": "to explain what- what is happening here,",
    "start": "1139005",
    "end": "1141210"
  },
  {
    "text": "we have this graph on four nodes.",
    "start": "1141210",
    "end": "1144750"
  },
  {
    "text": "We will do the following.",
    "start": "1144750",
    "end": "1146700"
  },
  {
    "text": "It's- the color will denote the ground truth color.",
    "start": "1146700",
    "end": "1150360"
  },
  {
    "text": "So this is the ground truth topic of the real topic of the web-page.",
    "start": "1150360",
    "end": "1155934"
  },
  {
    "text": "Um, the- the- then each- each page also has some feature- feature vector,",
    "start": "1155935",
    "end": "1162365"
  },
  {
    "text": "let's say describing the words on that page.",
    "start": "1162365",
    "end": "1164855"
  },
  {
    "text": "And let's assume these are the feature vectors of my four pages.",
    "start": "1164855",
    "end": "1168775"
  },
  {
    "text": "For- the pages also have hyperlinks that are directed and point to each other.",
    "start": "1168775",
    "end": "1174960"
  },
  {
    "text": "And then for example, based on the labeled data,",
    "start": "1174960",
    "end": "1177945"
  },
  {
    "text": "we can uh, apply our Phi 1 and Phi 1 will say,",
    "start": "1177945",
    "end": "1182054"
  },
  {
    "text": "this- this web-page belongs to topic o and you know,",
    "start": "1182055",
    "end": "1185970"
  },
  {
    "text": "the ground truth is zero,",
    "start": "1185970",
    "end": "1187049"
  },
  {
    "text": "so this is a correct classification.",
    "start": "1187050",
    "end": "1188865"
  },
  {
    "text": "But for example, this- this web-page here, uh,",
    "start": "1188865",
    "end": "1192270"
  },
  {
    "text": "based on it's features alone um,",
    "start": "1192270",
    "end": "1195315"
  },
  {
    "text": "we will predict that it is ah,",
    "start": "1195315",
    "end": "1197100"
  },
  {
    "text": "of topic 0, but in reality it is of topic 1.",
    "start": "1197100",
    "end": "1201419"
  },
  {
    "text": "And the question will be,",
    "start": "1201420",
    "end": "1203220"
  },
  {
    "text": "can we using kind of network information- could network",
    "start": "1203220",
    "end": "1206549"
  },
  {
    "text": "information help us to decide that this should really be green topic,",
    "start": "1206550",
    "end": "1210915"
  },
  {
    "text": "not the red topic as it is predicted based on the features alone.",
    "start": "1210915",
    "end": "1215310"
  },
  {
    "text": "And then we have this four other pages,",
    "start": "1215310",
    "end": "1217395"
  },
  {
    "text": "here are their corresponding featured vectors um,",
    "start": "1217395",
    "end": "1220380"
  },
  {
    "text": "and you know, here the classifier would predict that they're both green um,",
    "start": "1220380",
    "end": "1225570"
  },
  {
    "text": "while here the classifier would predict that",
    "start": "1225570",
    "end": "1228240"
  },
  {
    "text": "these two should be red and, perhaps, you know,",
    "start": "1228240",
    "end": "1230550"
  },
  {
    "text": "one way to think of this is that it's really whether the first feature uh,",
    "start": "1230550",
    "end": "1234330"
  },
  {
    "text": "is set to one, you're red and if it's set to zero, you are green.",
    "start": "1234330",
    "end": "1238950"
  },
  {
    "text": "That would be one way to think of the uh,",
    "start": "1238950",
    "end": "1240600"
  },
  {
    "text": "what the classifier is learning.",
    "start": "1240600",
    "end": "1242340"
  },
  {
    "text": "So now, in the first step of this or in the first phase, um,",
    "start": "1242340",
    "end": "1247125"
  },
  {
    "text": "we- we came up with predictions of the labels uh,",
    "start": "1247125",
    "end": "1250800"
  },
  {
    "text": "based only on the features alone.",
    "start": "1250800",
    "end": "1252870"
  },
  {
    "text": "So we applied the classifier Phi 1 from the previous- from the previous slide.",
    "start": "1252870",
    "end": "1260265"
  },
  {
    "text": "So now what we wanna do next is we wanna create our feet labeled summary vectors z.",
    "start": "1260265",
    "end": "1268530"
  },
  {
    "text": "So for each node v,",
    "start": "1268530",
    "end": "1271190"
  },
  {
    "text": "we are going to create this vector z that captures the neighborhood labels.",
    "start": "1271190",
    "end": "1276125"
  },
  {
    "text": "And given that this is a directed graph,",
    "start": "1276125",
    "end": "1278570"
  },
  {
    "text": "we are going to use a four-dimensional vector to capture the statistics.",
    "start": "1278570",
    "end": "1284384"
  },
  {
    "text": "Basically, we are going to have two parts to this vector z;",
    "start": "1284385",
    "end": "1287775"
  },
  {
    "text": "a part I and O. I is about incoming and O is about outgoing neighbor labeling formation.",
    "start": "1287775",
    "end": "1295980"
  },
  {
    "text": "And we will say that for example,",
    "start": "1295980",
    "end": "1297870"
  },
  {
    "text": "I of 0 is set to 1 if at least one of the",
    "start": "1297870",
    "end": "1302220"
  },
  {
    "text": "incoming pages- one of the pages that links to this node of interest is also labeled 0.",
    "start": "1302220",
    "end": "1308100"
  },
  {
    "text": "And we will use similar definitions for I1, O0, and O1.",
    "start": "1308100",
    "end": "1313664"
  },
  {
    "text": "So give you an idea.",
    "start": "1313665",
    "end": "1316050"
  },
  {
    "text": "So this is now same graph as before.",
    "start": "1316050",
    "end": "1318930"
  },
  {
    "text": "These are the features of the web page,",
    "start": "1318930",
    "end": "1320925"
  },
  {
    "text": "but now this four more uh,",
    "start": "1320925",
    "end": "1322635"
  },
  {
    "text": "numbers appear here and let me again explain what do they mean.",
    "start": "1322635",
    "end": "1326250"
  },
  {
    "text": "So this is now- this four numbers are basically",
    "start": "1326250",
    "end": "1329040"
  },
  {
    "text": "my vector z that summarizes the labels of the neighbors around it.",
    "start": "1329040",
    "end": "1334770"
  },
  {
    "text": "And we have I, which is for incoming neighbors,",
    "start": "1334770",
    "end": "1337620"
  },
  {
    "text": "I wanna say is any of the incoming neighbors uh, of plus zero,",
    "start": "1337620",
    "end": "1341805"
  },
  {
    "text": "is any of the incoming neighbors of plus one,",
    "start": "1341805",
    "end": "1344205"
  },
  {
    "text": "because this node here has one neighbor that is green,",
    "start": "1344205",
    "end": "1347580"
  },
  {
    "text": "we set value one here, right?",
    "start": "1347580",
    "end": "1349409"
  },
  {
    "text": "It's an incoming neighbor.",
    "start": "1349410",
    "end": "1351255"
  },
  {
    "text": "And then on the- on the uh, outgoing neighbor side,",
    "start": "1351255",
    "end": "1355515"
  },
  {
    "text": "this is this edge,",
    "start": "1355515",
    "end": "1356970"
  },
  {
    "text": "we have one neighbor that believes it's class is zero.",
    "start": "1356970",
    "end": "1361409"
  },
  {
    "text": "So here it is, right?",
    "start": "1361410",
    "end": "1364215"
  },
  {
    "text": "So notice that colors correspond to ground truth",
    "start": "1364215",
    "end": "1367154"
  },
  {
    "text": "and the numbers correspond to predicted labels, right?",
    "start": "1367155",
    "end": "1370740"
  },
  {
    "text": "So that's why here I have one,",
    "start": "1370740",
    "end": "1372510"
  },
  {
    "text": "zero because the node of interest has one outgoing edge to our node of",
    "start": "1372510",
    "end": "1378675"
  },
  {
    "text": "class zero and has zero outgoing edges to nodes of class 1 of the green class.",
    "start": "1378675",
    "end": "1386400"
  },
  {
    "text": "Similarly, for example, you can look at this node here, uh,",
    "start": "1386400",
    "end": "1390300"
  },
  {
    "text": "it's feature vector and then the summary of",
    "start": "1390300",
    "end": "1393060"
  },
  {
    "text": "the incoming edges and the summary of the outgoing edges,",
    "start": "1393060",
    "end": "1396180"
  },
  {
    "text": "this- this node has here- has one incoming neighbor that is of class zero.",
    "start": "1396180",
    "end": "1403935"
  },
  {
    "text": "This is this one and has zero incoming edges",
    "start": "1403935",
    "end": "1407460"
  },
  {
    "text": "of class 1 and in terms of the outgoing edges,",
    "start": "1407460",
    "end": "1411365"
  },
  {
    "text": "it has zero outgoing edges to class, uh,",
    "start": "1411365",
    "end": "1414635"
  },
  {
    "text": "to class 0, and it has one outgoing edge to class 1.",
    "start": "1414635",
    "end": "1418865"
  },
  {
    "text": "So this is now, you know,",
    "start": "1418865",
    "end": "1420320"
  },
  {
    "text": "the four-dimensional representation, uh,",
    "start": "1420320",
    "end": "1423299"
  },
  {
    "text": "the vector z, the summary of the labels around this particular node.",
    "start": "1423300",
    "end": "1426795"
  },
  {
    "text": "Analogously, you can compute it for this node and you can compute it for that node.",
    "start": "1426795",
    "end": "1431070"
  },
  {
    "text": "So now that you have for every node both the vector f and the vector z,",
    "start": "1431070",
    "end": "1437580"
  },
  {
    "start": "1437000",
    "end": "1572000"
  },
  {
    "text": "what you do, you now train,",
    "start": "1437580",
    "end": "1440190"
  },
  {
    "text": "uh, the second um, uh, classifier.",
    "start": "1440190",
    "end": "1444450"
  },
  {
    "text": "And again you only train it on the labeled training set.",
    "start": "1444450",
    "end": "1447855"
  },
  {
    "text": "And this classifier, you train in such a way that it uses",
    "start": "1447855",
    "end": "1451559"
  },
  {
    "text": "both the information in f as well as the information in z.",
    "start": "1451560",
    "end": "1455985"
  },
  {
    "text": "So now you are basically training",
    "start": "1455985",
    "end": "1459270"
  },
  {
    "text": "the classifier Phi 2 that uses both the feature information as well as",
    "start": "1459270",
    "end": "1465030"
  },
  {
    "text": "the label summary information about what do",
    "start": "1465030",
    "end": "1469245"
  },
  {
    "text": "the neighbors of a node of interest think about their own labels.",
    "start": "1469245",
    "end": "1474330"
  },
  {
    "text": "And this now gives me the classifier Phi 2.",
    "start": "1474330",
    "end": "1477914"
  },
  {
    "text": "So now um, in the second step,",
    "start": "1477915",
    "end": "1481230"
  },
  {
    "text": "I'm going now to apply my uh,",
    "start": "1481230",
    "end": "1483360"
  },
  {
    "text": "classifier Phi 2 on the- on the graph of interest on the unlabeled nodes.",
    "start": "1483360",
    "end": "1488640"
  },
  {
    "text": "So right, so we've- I'm going to use trained node features to apply",
    "start": "1488640",
    "end": "1492420"
  },
  {
    "text": "the classifier Phi 1 on the unlabeled- unlabeled set and I'm going to predict the labels.",
    "start": "1492420",
    "end": "1499500"
  },
  {
    "text": "And now- now I'm going to use",
    "start": "1499500",
    "end": "1503205"
  },
  {
    "text": "trained node feature vectors as well",
    "start": "1503205",
    "end": "1506220"
  },
  {
    "text": "to- to predict the labels and now given the predicted labels,",
    "start": "1506220",
    "end": "1510315"
  },
  {
    "text": "I'm going to um,",
    "start": "1510315",
    "end": "1511620"
  },
  {
    "text": "update the feature descriptors- the feature descriptors in a sec- in a sense of uh,",
    "start": "1511620",
    "end": "1517200"
  },
  {
    "text": "class summaries around each node.",
    "start": "1517200",
    "end": "1520559"
  },
  {
    "text": "Now that I have created this vector z,",
    "start": "1520560",
    "end": "1523485"
  },
  {
    "text": "I can now apply my classifier Phi 2 to update the predicted label of every node.",
    "start": "1523485",
    "end": "1531690"
  },
  {
    "text": "And if I do this, the labels of certain nodes may change.",
    "start": "1531690",
    "end": "1536909"
  },
  {
    "text": "And basically the idea is right now that I have used all these data,",
    "start": "1536910",
    "end": "1540780"
  },
  {
    "text": "meaning the feature vector as well as",
    "start": "1540780",
    "end": "1542940"
  },
  {
    "text": "the summary vector of the labels around the given node,",
    "start": "1542940",
    "end": "1545955"
  },
  {
    "text": "I will be able to more robustly predict the label of the node of interest.",
    "start": "1545955",
    "end": "1550559"
  },
  {
    "text": "And now, right, I- basically the idea is that now I",
    "start": "1550560",
    "end": "1554520"
  },
  {
    "text": "can go and update the summaries because some labels might have changed.",
    "start": "1554520",
    "end": "1558630"
  },
  {
    "text": "I update the summary and reapply the Phi 2 predictor- Phi 2 classifier.",
    "start": "1558630",
    "end": "1564360"
  },
  {
    "text": "And I keep doing this,",
    "start": "1564360",
    "end": "1565920"
  },
  {
    "text": "basically reclassifying nodes with Phi 2 until the process converges.",
    "start": "1565920",
    "end": "1571875"
  },
  {
    "text": "Right? So I'll be updating this until- until the label prediction stabilize.",
    "start": "1571875",
    "end": "1577980"
  },
  {
    "start": "1572000",
    "end": "1620000"
  },
  {
    "text": "I think because if our prediction for a given node changes,",
    "start": "1577980",
    "end": "1583080"
  },
  {
    "text": "then its vector z is also going to change.",
    "start": "1583080",
    "end": "1587700"
  },
  {
    "text": "And if the vector z is going- changes then the- I have to apply",
    "start": "1587700",
    "end": "1591809"
  },
  {
    "text": "the predictor Phi 2 to update",
    "start": "1591810",
    "end": "1595170"
  },
  {
    "text": "the belief or the prediction about the label of a given node.",
    "start": "1595170",
    "end": "1599295"
  },
  {
    "text": "And I keep iterating this until the process stabilized, right?",
    "start": "1599295",
    "end": "1604200"
  },
  {
    "text": "So here the prediction for this node flipped from 0 to 1.",
    "start": "1604200",
    "end": "1608850"
  },
  {
    "text": "Now this vectors z have changed, have been updated.",
    "start": "1608850",
    "end": "1613515"
  },
  {
    "text": "So I have to re-update my classifier Phi 2 again over all these nodes.",
    "start": "1613515",
    "end": "1620100"
  },
  {
    "start": "1620000",
    "end": "1760000"
  },
  {
    "text": "And I keep doing this until the process converges meaning until no node labels change,",
    "start": "1620100",
    "end": "1627495"
  },
  {
    "text": "or until some maximum number of iterations is reached.",
    "start": "1627495",
    "end": "1632220"
  },
  {
    "text": "And that is essentially the idea of what",
    "start": "1632220",
    "end": "1635970"
  },
  {
    "text": "we are trying to do here and how do we arrive to the final prediction.",
    "start": "1635970",
    "end": "1639900"
  },
  {
    "text": "So to summarize, so far,",
    "start": "1639900",
    "end": "1643725"
  },
  {
    "text": "we have talked about two approaches to collective classification.",
    "start": "1643725",
    "end": "1647460"
  },
  {
    "text": "First, we talked about relational classification,",
    "start": "1647460",
    "end": "1650909"
  },
  {
    "text": "where we are iteratively updating probabilities of nodes",
    "start": "1650910",
    "end": "1654570"
  },
  {
    "text": "belonging to a labeled class based on the labels of its neighbors.",
    "start": "1654570",
    "end": "1658485"
  },
  {
    "text": "This approach uses the network structure and the labels of the nodes,",
    "start": "1658485",
    "end": "1664755"
  },
  {
    "text": "but it does not use the features of the nodes.",
    "start": "1664755",
    "end": "1669435"
  },
  {
    "text": "So then in the second part,",
    "start": "1669435",
    "end": "1672555"
  },
  {
    "text": "we talked about iterative classification,",
    "start": "1672555",
    "end": "1675570"
  },
  {
    "text": "where we improve over",
    "start": "1675570",
    "end": "1677940"
  },
  {
    "text": "the relational classification to",
    "start": "1677940",
    "end": "1681419"
  },
  {
    "text": "handle attribute or feature information of nodes as well.",
    "start": "1681420",
    "end": "1685395"
  },
  {
    "text": "And here the idea was that we classify a given node,",
    "start": "1685395",
    "end": "1689040"
  },
  {
    "text": "v or a given node i,",
    "start": "1689040",
    "end": "1690810"
  },
  {
    "text": "based on its features,",
    "start": "1690810",
    "end": "1692459"
  },
  {
    "text": "as well as the labels of its neighbors.",
    "start": "1692459",
    "end": "1695220"
  },
  {
    "text": "So here, the way we achieve these was to train two classifiers.",
    "start": "1695220",
    "end": "1700230"
  },
  {
    "text": "The initial classifier that given the features of a node predicts its label.",
    "start": "1700230",
    "end": "1705205"
  },
  {
    "text": "Now that the nodes have its labels predicted, for every node,",
    "start": "1705205",
    "end": "1709880"
  },
  {
    "text": "we can now create this summary vector z that",
    "start": "1709880",
    "end": "1713030"
  },
  {
    "text": "describes the labels of the nodes that are neighbors of a node of interest.",
    "start": "1713030",
    "end": "1719635"
  },
  {
    "text": "And then that we have that,",
    "start": "1719635",
    "end": "1722595"
  },
  {
    "text": "we can then use the classifier Phi 2 to re-update the prediction on a given node.",
    "start": "1722595",
    "end": "1729809"
  },
  {
    "text": "And this classifier Phi 2,",
    "start": "1729810",
    "end": "1731910"
  },
  {
    "text": "uses both the feature information of the node as",
    "start": "1731910",
    "end": "1735240"
  },
  {
    "text": "well as the summary vector of the labels of its neighbors,",
    "start": "1735240",
    "end": "1738645"
  },
  {
    "text": "the summary vector z.",
    "start": "1738645",
    "end": "1740490"
  },
  {
    "text": "And we then keep applying this classifier Phi 2 over the network until",
    "start": "1740490",
    "end": "1746790"
  },
  {
    "text": "the entire process converges or until",
    "start": "1746790",
    "end": "1750390"
  },
  {
    "text": "the entire- the maximum number of iterations is reached.",
    "start": "1750390",
    "end": "1755500"
  }
]