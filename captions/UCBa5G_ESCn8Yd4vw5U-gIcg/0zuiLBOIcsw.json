[
  {
    "text": "So the algorithm that allows us to identify",
    "start": "4190",
    "end": "7950"
  },
  {
    "text": "high modularity score communities is- it's called uh,",
    "start": "7950",
    "end": "11144"
  },
  {
    "text": "the Louvain Algorithm, from the",
    "start": "11145",
    "end": "13485"
  },
  {
    "text": "University Louvain in Belgium.",
    "start": "13485",
    "end": "16664"
  },
  {
    "text": "That's why, uh, this name.",
    "start": "16665",
    "end": "18465"
  },
  {
    "text": "So it is a very scalable and very popularly- very popular algorithm.",
    "start": "18465",
    "end": "24555"
  },
  {
    "text": "Kind of it's a de facto thing you would use if you want to",
    "start": "24555",
    "end": "27165"
  },
  {
    "text": "partition the network into a set of clusters.",
    "start": "27165",
    "end": "30210"
  },
  {
    "text": "So Louvain algorithm is a greedy community detection algorithm that uh, scales uh, um,",
    "start": "30210",
    "end": "36360"
  },
  {
    "text": "ah, n log n,",
    "start": "36360",
    "end": "38330"
  },
  {
    "text": "where n is the number of nodes in the network so it can uh,",
    "start": "38330",
    "end": "41610"
  },
  {
    "text": "um, scale to large networks.",
    "start": "41610",
    "end": "43665"
  },
  {
    "text": "It supports weighted graphs, uh,",
    "start": "43665",
    "end": "45945"
  },
  {
    "text": "and it provides us hierarchical communities.",
    "start": "45945",
    "end": "48514"
  },
  {
    "text": "So it doesn't only provide us clustering at one level,",
    "start": "48514",
    "end": "51680"
  },
  {
    "text": "but it provides us kind of clustering of clusters.",
    "start": "51680",
    "end": "54425"
  },
  {
    "text": "So we get this notion of a tree or a dendrogram,",
    "start": "54425",
    "end": "57335"
  },
  {
    "text": "how individual nodes join into groups and how",
    "start": "57335",
    "end": "60260"
  },
  {
    "text": "these groups can then be further joined into the super groups uh, and so on.",
    "start": "60260",
    "end": "64915"
  },
  {
    "text": "Um, and as I said,",
    "start": "64915",
    "end": "66350"
  },
  {
    "text": "it is very widely used,",
    "start": "66350",
    "end": "68314"
  },
  {
    "text": "there are fast implementations available, uh,",
    "start": "68315",
    "end": "70850"
  },
  {
    "text": "It works very quickly,",
    "start": "70850",
    "end": "72860"
  },
  {
    "text": "ah, and works well in practice.",
    "start": "72860",
    "end": "75200"
  },
  {
    "text": "It finds uh, clusters,",
    "start": "75200",
    "end": "76820"
  },
  {
    "text": "communities that have a high modularity.",
    "start": "76820",
    "end": "79645"
  },
  {
    "text": "The algorithm operates in two phases,",
    "start": "79645",
    "end": "83344"
  },
  {
    "text": "where basically we wanna greedily assign the nodes to communities to maximize modularity.",
    "start": "83345",
    "end": "88220"
  },
  {
    "text": "Ah, and each uh,",
    "start": "88220",
    "end": "90110"
  },
  {
    "text": "iteration, each pass contains two phases.",
    "start": "90110",
    "end": "94045"
  },
  {
    "text": "So in phase 1,",
    "start": "94045",
    "end": "95780"
  },
  {
    "text": "modularity is optimized by allowing only local changes of nodes to communities,",
    "start": "95780",
    "end": "101659"
  },
  {
    "text": "so basically nodes get a chance to change community memberships.",
    "start": "101660",
    "end": "105365"
  },
  {
    "text": "And in phase 2, these identified communities are aggregated into",
    "start": "105365",
    "end": "109369"
  },
  {
    "text": "the super-nodes to build a new super-node network so that then another- um,",
    "start": "109370",
    "end": "114900"
  },
  {
    "text": "another part of community detection can be run.",
    "start": "114900",
    "end": "118415"
  },
  {
    "text": "So the idea is the following, the input network.",
    "start": "118415",
    "end": "121660"
  },
  {
    "text": "Uh, we start with an input network,",
    "start": "121660",
    "end": "123585"
  },
  {
    "text": "we optimize in phase 1 the modularity of it,",
    "start": "123585",
    "end": "126510"
  },
  {
    "text": "so we find clusters,",
    "start": "126510",
    "end": "128240"
  },
  {
    "text": "then we join these clusters into super-nodes to create this aggregate network.",
    "start": "128240",
    "end": "134540"
  },
  {
    "text": "Now we have a new network over which we can again run phase 1 to cluster it further.",
    "start": "134540",
    "end": "140900"
  },
  {
    "text": "In this way, we find clusters, clusters of clusters,",
    "start": "140900",
    "end": "143989"
  },
  {
    "text": "and so on, and we hierarchically uh, cluster the network.",
    "start": "143990",
    "end": "147900"
  },
  {
    "text": "Um, so now let me explain how phase 1 works.",
    "start": "147900",
    "end": "151995"
  },
  {
    "text": "Phase 1, we start by putting each node in the graph into a distinct community.",
    "start": "151995",
    "end": "157849"
  },
  {
    "text": "So each node says,",
    "start": "157850",
    "end": "159035"
  },
  {
    "text": "I am my own cluster,",
    "start": "159035",
    "end": "160745"
  },
  {
    "text": "I am my own community and each node i,",
    "start": "160745",
    "end": "163875"
  },
  {
    "text": "for each node i, the algorithm performs two calculations.",
    "start": "163875",
    "end": "167970"
  },
  {
    "text": "It computes the modularity when putting",
    "start": "167970",
    "end": "170780"
  },
  {
    "text": "this i into a community with some other neighbor j.",
    "start": "170780",
    "end": "174425"
  },
  {
    "text": "So basically we take the node i and say,",
    "start": "174425",
    "end": "176360"
  },
  {
    "text": "what if I put node i and put it into the community of node j?",
    "start": "176360",
    "end": "181235"
  },
  {
    "text": "Would that increase modularity?",
    "start": "181235",
    "end": "183594"
  },
  {
    "text": "And the idea is that i,",
    "start": "183594",
    "end": "185515"
  },
  {
    "text": "now for a given node i,",
    "start": "185515",
    "end": "187145"
  },
  {
    "text": "I try to put it into the commu- the same community",
    "start": "187145",
    "end": "190115"
  },
  {
    "text": "as every single of its neighbors is already a member of,",
    "start": "190115",
    "end": "194330"
  },
  {
    "text": "um, and whatever increases the modularity the most,",
    "start": "194330",
    "end": "197385"
  },
  {
    "text": "that's where I put i,- that's the community I put i into.",
    "start": "197385",
    "end": "202114"
  },
  {
    "text": "Um, and this phase 1 uh,",
    "start": "202115",
    "end": "205070"
  },
  {
    "text": "would kind of iterate all of the nodes until",
    "start": "205070",
    "end": "207965"
  },
  {
    "text": "no movement is possible that increases modularity.",
    "start": "207965",
    "end": "211405"
  },
  {
    "text": "So, th- the first phase stops when the local maxima in modularity is obtained.",
    "start": "211405",
    "end": "216694"
  },
  {
    "text": "Basically means no individual nodes can",
    "start": "216695",
    "end": "219470"
  },
  {
    "text": "move to a different community to improve modularity.",
    "start": "219470",
    "end": "222830"
  },
  {
    "text": "Um, note that the output of",
    "start": "222830",
    "end": "225950"
  },
  {
    "text": "the algorithm depends on the order in which we consider the nodes,",
    "start": "225950",
    "end": "229805"
  },
  {
    "text": "uh, in practice, it turns out that the ordering is not important.",
    "start": "229805",
    "end": "233390"
  },
  {
    "text": "So you fix some random ordering and that's how you process nodes.",
    "start": "233390",
    "end": "237440"
  },
  {
    "text": "And then for every node, you say,",
    "start": "237440",
    "end": "238910"
  },
  {
    "text": "what if I join you with the community with neighbor 1, neighbor 2,",
    "start": "238910",
    "end": "242150"
  },
  {
    "text": "neighbor 3, see which of these joinings increases the modularity the most,",
    "start": "242150",
    "end": "246579"
  },
  {
    "text": "and you move the node there.",
    "start": "246580",
    "end": "248180"
  },
  {
    "text": "If none of the moves increases modularity,",
    "start": "248180",
    "end": "250879"
  },
  {
    "text": "then you just don't move i to the community of node j.",
    "start": "250880",
    "end": "254980"
  },
  {
    "text": "So, um, what is elegant is that this modularity gain, right?",
    "start": "254980",
    "end": "259400"
  },
  {
    "text": "This Delta modularity where you say,",
    "start": "259400",
    "end": "261320"
  },
  {
    "text": "what if I take node i and move it from",
    "start": "261320",
    "end": "263570"
  },
  {
    "text": "the current community D to the new community C. Um,",
    "start": "263570",
    "end": "267185"
  },
  {
    "text": "this can be computed very efficiently.",
    "start": "267185",
    "end": "269270"
  },
  {
    "text": "And the way you can compute it is that you split it out into two terms.",
    "start": "269270",
    "end": "272750"
  },
  {
    "text": "One term is how will modularity change when I take node i and I",
    "start": "272750",
    "end": "276740"
  },
  {
    "text": "take it out from the cu- current community D?",
    "start": "276740",
    "end": "280680"
  },
  {
    "text": "And then how is the modularity going to change when I take",
    "start": "280680",
    "end": "283520"
  },
  {
    "text": "the same node i and put it into the new community C?",
    "start": "283520",
    "end": "287080"
  },
  {
    "text": "So the way you can think of picture is that, you know,",
    "start": "287080",
    "end": "290164"
  },
  {
    "text": "I'm right now looking- looking at node i,",
    "start": "290165",
    "end": "292415"
  },
  {
    "text": "let's say node i is assigned to some community D,",
    "start": "292415",
    "end": "295255"
  },
  {
    "text": "I pick some of its neighbors,",
    "start": "295255",
    "end": "296940"
  },
  {
    "text": "maybe I pick this uh, node uh,",
    "start": "296940",
    "end": "299260"
  },
  {
    "text": "here that belongs to the community C. So I say what happens if I",
    "start": "299260",
    "end": "302630"
  },
  {
    "text": "take i and kind of move it to the community C?",
    "start": "302630",
    "end": "306060"
  },
  {
    "text": "So first is, I have to compute the Delta modularity by taking i and moving it out of D,",
    "start": "306060",
    "end": "312139"
  },
  {
    "text": "and then I need to compute the Delta modularity for merging i back into the community uh,",
    "start": "312140",
    "end": "318380"
  },
  {
    "text": "C. And summing these two terms will give me the Delta modularity,",
    "start": "318380",
    "end": "322820"
  },
  {
    "text": "the increase or decrease in modularity when I move D uh, from uh,",
    "start": "322820",
    "end": "327180"
  },
  {
    "text": "when I move i from D to C. So let's derive",
    "start": "327180",
    "end": "331919"
  },
  {
    "text": "this Delta modularity when I move i into the community C. First,",
    "start": "331920",
    "end": "337670"
  },
  {
    "text": "we need to derive the modularity of uh,",
    "start": "337670",
    "end": "340790"
  },
  {
    "text": "community C as it is.",
    "start": "340790",
    "end": "342170"
  },
  {
    "text": "Let's call this Q of C. And the way we",
    "start": "342170",
    "end": "344760"
  },
  {
    "text": "derive this is we need kind of two sufficient statistic.",
    "start": "344760",
    "end": "347580"
  },
  {
    "text": "One is the sum Sigma inside which is the sum of the links, number of links,",
    "start": "347580",
    "end": "352909"
  },
  {
    "text": "or some of the link weights between the members of C,",
    "start": "352910",
    "end": "356025"
  },
  {
    "text": "um, and then um,",
    "start": "356025",
    "end": "357445"
  },
  {
    "text": "Sigma_tot will be the total number of links that all these nodes have, right?",
    "start": "357445",
    "end": "362820"
  },
  {
    "text": "So this is only inside the members,",
    "start": "362820",
    "end": "365285"
  },
  {
    "text": "and this is inside plus outside, right?",
    "start": "365285",
    "end": "368630"
  },
  {
    "text": "So here, I'm only summing degrees, uh, uh,",
    "start": "368630",
    "end": "372440"
  },
  {
    "text": "I'm only summing edge- counting edges that are inside the members of the C,",
    "start": "372440",
    "end": "376680"
  },
  {
    "text": "and when I compute the total,",
    "start": "376680",
    "end": "378050"
  },
  {
    "text": "I also account for all the edges.",
    "start": "378050",
    "end": "379909"
  },
  {
    "text": "So I just sum up the degrees of the- of wherever the edges go.",
    "start": "379910",
    "end": "384515"
  },
  {
    "text": "So now I have these two quantities, Sigma_in and Sigma_tot,",
    "start": "384515",
    "end": "388405"
  },
  {
    "text": "so uh, now I can rewrite modularity in terms of Sigma_in and Sigma_tot, right?",
    "start": "388405",
    "end": "394970"
  },
  {
    "text": "So here is modularity of a given community C,",
    "start": "394970",
    "end": "397910"
  },
  {
    "text": "it's this 1 over 2m we had before,",
    "start": "397910",
    "end": "400475"
  },
  {
    "text": "double summation over all pairs of nodes in C,",
    "start": "400475",
    "end": "403925"
  },
  {
    "text": "whether they are connected minus the normalized product of their degrees.",
    "start": "403925",
    "end": "408159"
  },
  {
    "text": "Um, if I distributed the summation inside,",
    "start": "408160",
    "end": "411155"
  },
  {
    "text": "I see here that this is basically now the number of edges between the uh,",
    "start": "411155",
    "end": "415490"
  },
  {
    "text": "members of the- of the group.",
    "start": "415490",
    "end": "417280"
  },
  {
    "text": "So this is Sigma_in divided by 2m,",
    "start": "417280",
    "end": "419850"
  },
  {
    "text": "and what I have here is a summation of the degrees of the nodes uh,",
    "start": "419850",
    "end": "424580"
  },
  {
    "text": "in C. Another summation of the degrees of nodes in C divided by 2m squared.",
    "start": "424580",
    "end": "430284"
  },
  {
    "text": "So that is uh,",
    "start": "430285",
    "end": "431460"
  },
  {
    "text": "Sigma_tot divided by 2m uh, squared.",
    "start": "431460",
    "end": "435360"
  },
  {
    "text": "Right? So uh, this is a- and- and this square",
    "start": "435360",
    "end": "439430"
  },
  {
    "text": "here comes because I take this 2m and distribute it inside.",
    "start": "439430",
    "end": "443574"
  },
  {
    "text": "So this means now that QC is large uh,",
    "start": "443575",
    "end": "446630"
  },
  {
    "text": "when most of the total links are within the community um,",
    "start": "446630",
    "end": "450710"
  },
  {
    "text": "and uh, um, very few cross to other uh, communities.",
    "start": "450710",
    "end": "457050"
  },
  {
    "text": "So now that we have defined, ah,",
    "start": "457050",
    "end": "459565"
  },
  {
    "text": "computed the modularity of C,",
    "start": "459565",
    "end": "461500"
  },
  {
    "text": "now we need to say how does this modularity change,",
    "start": "461500",
    "end": "464470"
  },
  {
    "text": "when we take this node I and put it into C. And, uh,",
    "start": "464470",
    "end": "468145"
  },
  {
    "text": "here we are going to use this, ah,",
    "start": "468145",
    "end": "470259"
  },
  {
    "text": "notion of, ah, um, uh, k_i,",
    "start": "470260",
    "end": "473410"
  },
  {
    "text": "in which is the number of edges node- that node i has,",
    "start": "473410",
    "end": "477685"
  },
  {
    "text": "to other members of C. And k_i is now the total,",
    "start": "477685",
    "end": "482080"
  },
  {
    "text": "uh, degree of node i, right?",
    "start": "482080",
    "end": "483849"
  },
  {
    "text": "So basically these two, um, uh,",
    "start": "483850",
    "end": "485350"
  },
  {
    "text": "these two, ah, terms, uh, are, ah,",
    "start": "485350",
    "end": "488200"
  },
  {
    "text": "equivalent or analogous to a Sigma in and a Sigma tot, right?",
    "start": "488200",
    "end": "492610"
  },
  {
    "text": "Is the total degree versus degree to oth- or the number of edges to other members,",
    "start": "492610",
    "end": "497889"
  },
  {
    "text": "uh, of C. And now,",
    "start": "497890",
    "end": "500230"
  },
  {
    "text": "ah, if I write this out, right,",
    "start": "500230",
    "end": "502570"
  },
  {
    "text": "so the, uh, the, uh, the,",
    "start": "502570",
    "end": "505285"
  },
  {
    "text": "the modularity I had before was,",
    "start": "505285",
    "end": "507985"
  },
  {
    "text": "um, uh, modularity of, of C,",
    "start": "507985",
    "end": "510789"
  },
  {
    "text": "that we have already defined plus the modularity of this,",
    "start": "510790",
    "end": "514180"
  },
  {
    "text": "let's say, ah, isolated community i so, ah,",
    "start": "514180",
    "end": "517419"
  },
  {
    "text": "it has- i doesn't have an edge with itself,",
    "start": "517420",
    "end": "520510"
  },
  {
    "text": "so with 0 minus, ah,",
    "start": "520510",
    "end": "523180"
  },
  {
    "text": "k_i times k_i with 2m,",
    "start": "523180",
    "end": "525430"
  },
  {
    "text": "so it's k_i squared.",
    "start": "525430",
    "end": "527020"
  },
  {
    "text": "Uh, and now after I have moved, uh,",
    "start": "527020",
    "end": "529075"
  },
  {
    "text": "in to the community,",
    "start": "529075",
    "end": "530470"
  },
  {
    "text": "see this node i, what do I get is the, uh,",
    "start": "530470",
    "end": "532855"
  },
  {
    "text": "sum of- number of edges inside Sigma in increases by k_i,",
    "start": "532855",
    "end": "537175"
  },
  {
    "text": "in, and the, uh,",
    "start": "537175",
    "end": "539290"
  },
  {
    "text": "total number of edges,",
    "start": "539290",
    "end": "540865"
  },
  {
    "text": "now increases bu- or total sum of the degrees now increases for the degree of node i.",
    "start": "540865",
    "end": "546084"
  },
  {
    "text": "So this is how I can write it, ah,",
    "start": "546085",
    "end": "548635"
  },
  {
    "text": "write it all, ah, all,",
    "start": "548635",
    "end": "550210"
  },
  {
    "text": "all, ah, all together now.",
    "start": "550210",
    "end": "552385"
  },
  {
    "text": "And then, right here is we said Delta modularity after I move i into community C is,",
    "start": "552385",
    "end": "558490"
  },
  {
    "text": "you know, after minus before.",
    "start": "558490",
    "end": "560290"
  },
  {
    "text": "Ah, this was- this is after, right?",
    "start": "560290",
    "end": "562480"
  },
  {
    "text": "I have the sum of the, uh,",
    "start": "562480",
    "end": "564115"
  },
  {
    "text": "the in deg- the degrees inside the community is increased by this theorem,",
    "start": "564115",
    "end": "569050"
  },
  {
    "text": "the total number of degrees is increased by the degree of node i,",
    "start": "569050",
    "end": "573295"
  },
  {
    "text": "so this is the after modularity.",
    "start": "573295",
    "end": "575274"
  },
  {
    "text": "This is the before modularity we have defined,",
    "start": "575275",
    "end": "578320"
  },
  {
    "text": "and now if I simplify this,",
    "start": "578320",
    "end": "580195"
  },
  {
    "text": "I basically- this is the- this is the expression,",
    "start": "580195",
    "end": "582925"
  },
  {
    "text": "um, the expression I get.",
    "start": "582925",
    "end": "584529"
  },
  {
    "text": "And what is nice, it depends on this sufficient statistic Sigma in and Sigma tot,",
    "start": "584530",
    "end": "589480"
  },
  {
    "text": "as well as the degree of node i,",
    "start": "589480",
    "end": "592029"
  },
  {
    "text": "and the number of edges that i has, ah,",
    "start": "592030",
    "end": "594820"
  },
  {
    "text": "to the nodes of community C. So this was the,",
    "start": "594820",
    "end": "597760"
  },
  {
    "text": "the term that we have just derived is this one.",
    "start": "597760",
    "end": "600535"
  },
  {
    "text": "Um, and then we can analogously determine,",
    "start": "600535",
    "end": "603115"
  },
  {
    "text": "er, derive a similar expression that says,",
    "start": "603115",
    "end": "605425"
  },
  {
    "text": "how does modularity change when I take node i outside community D,",
    "start": "605425",
    "end": "609955"
  },
  {
    "text": "sum these up together and I get a Delta modularity.",
    "start": "609955",
    "end": "613509"
  },
  {
    "text": "So, now that I know how to compute Delta modularity quickly, ah,",
    "start": "613509",
    "end": "617709"
  },
  {
    "text": "I basically iterate between,",
    "start": "617710",
    "end": "620110"
  },
  {
    "text": "ah, for every node I try to see,",
    "start": "620110",
    "end": "622120"
  },
  {
    "text": "is there an opportunity to increase modularity if I move it, uh,",
    "start": "622120",
    "end": "625750"
  },
  {
    "text": "to the, to a different community,",
    "start": "625750",
    "end": "627790"
  },
  {
    "text": "I compute this Delta modularity, um,",
    "start": "627790",
    "end": "630459"
  },
  {
    "text": "and I move the node into some new community, C prime, ah, based on,",
    "start": "630460",
    "end": "635140"
  },
  {
    "text": "uh, based on the- in a greedy way,",
    "start": "635140",
    "end": "637285"
  },
  {
    "text": "based on how the overall modularity, ah, is increased.",
    "start": "637285",
    "end": "640750"
  },
  {
    "text": "And this is essentially how the first phase of this,",
    "start": "640750",
    "end": "643660"
  },
  {
    "text": "ah, Louvain algorithm will operate.",
    "start": "643660",
    "end": "646345"
  },
  {
    "text": "So now, ah, now that I have,",
    "start": "646345",
    "end": "648970"
  },
  {
    "text": "ah, reached a local, ah, optimum,",
    "start": "648970",
    "end": "651189"
  },
  {
    "text": "I have moved, ah,",
    "start": "651190",
    "end": "652510"
  },
  {
    "text": "nodes to different communities until the modularity stopped increasing.",
    "start": "652510",
    "end": "656350"
  },
  {
    "text": "Then I moved to phase 2 which is called the restructuring, right?",
    "start": "656350",
    "end": "659800"
  },
  {
    "text": "So now, I wanna take these clusters communities obtained in phase 1.",
    "start": "659800",
    "end": "663700"
  },
  {
    "text": "And I can- I wanna contract them into a super-node,",
    "start": "663700",
    "end": "666415"
  },
  {
    "text": "ah, and, uh, create a new network,",
    "start": "666415",
    "end": "668875"
  },
  {
    "text": "a next level network,",
    "start": "668875",
    "end": "670000"
  },
  {
    "text": "where super-nodes are connected if there is at least one edge between the nodes,",
    "start": "670000",
    "end": "674050"
  },
  {
    "text": "ah, of the corresponding communities,",
    "start": "674050",
    "end": "675878"
  },
  {
    "text": "um, and the, ah, weights,",
    "start": "675879",
    "end": "677920"
  },
  {
    "text": "ah, of the edges between two super-nodes is",
    "start": "677920",
    "end": "680800"
  },
  {
    "text": "the sum of the edge weights across all edges between their corresponding communities.",
    "start": "680800",
    "end": "686380"
  },
  {
    "text": "And now I will have a super graph.",
    "start": "686380",
    "end": "688645"
  },
  {
    "text": "And I simply go and run,",
    "start": "688645",
    "end": "690760"
  },
  {
    "text": "ah, phase 1, ah, again.",
    "start": "690760",
    "end": "692755"
  },
  {
    "text": "All right, so the idea is,",
    "start": "692755",
    "end": "694255"
  },
  {
    "text": "I have my original network,",
    "start": "694255",
    "end": "695980"
  },
  {
    "text": "I run phase 1 to identify clusters.",
    "start": "695980",
    "end": "698514"
  },
  {
    "text": "Now I contract each cluster into a super-node.",
    "start": "698515",
    "end": "702325"
  },
  {
    "text": "I connect two clusters,",
    "start": "702325",
    "end": "704499"
  },
  {
    "text": "if there is at least one edge, ah, between them.",
    "start": "704499",
    "end": "707155"
  },
  {
    "text": "And now this will be a weighted network where the,",
    "start": "707155",
    "end": "710215"
  },
  {
    "text": "the edge weights are denoted here,",
    "start": "710215",
    "end": "711910"
  },
  {
    "text": "so this will be the total number of edges between C_1 and C_2.",
    "start": "711910",
    "end": "715735"
  },
  {
    "text": "And this would be the total number of edges, ah,",
    "start": "715735",
    "end": "718120"
  },
  {
    "text": "between the members of,",
    "start": "718120",
    "end": "720160"
  },
  {
    "text": "ah, C_2 ah, and so on.",
    "start": "720160",
    "end": "722170"
  },
  {
    "text": "And now that I have the super graph,",
    "start": "722170",
    "end": "723774"
  },
  {
    "text": "I simply apply my,",
    "start": "723775",
    "end": "726610"
  },
  {
    "text": "ah, phase 1 algorithm again.",
    "start": "726610",
    "end": "729370"
  },
  {
    "text": "So the way this will work is,",
    "start": "729370",
    "end": "731740"
  },
  {
    "text": "ah, you know, to summarize,",
    "start": "731740",
    "end": "733480"
  },
  {
    "text": "I have my original network,",
    "start": "733480",
    "end": "735055"
  },
  {
    "text": "I pick a node and, ah,",
    "start": "735055",
    "end": "737110"
  },
  {
    "text": "initially I put every node into its own community.",
    "start": "737110",
    "end": "740110"
  },
  {
    "text": "Um, and then I ask, ah, a node,",
    "start": "740110",
    "end": "742584"
  },
  {
    "text": "what if I move you to the same community as your member node 2 is up.",
    "start": "742585",
    "end": "747940"
  },
  {
    "text": "How would that change modular- modularity?",
    "start": "747940",
    "end": "749950"
  },
  {
    "text": "What if I move you to the community of node 3,",
    "start": "749950",
    "end": "752995"
  },
  {
    "text": "how would modularity change?",
    "start": "752995",
    "end": "754390"
  },
  {
    "text": "What if I move it to a community of node 5?",
    "start": "754390",
    "end": "756475"
  },
  {
    "text": "How would, ah, modularity, ah, change?",
    "start": "756475",
    "end": "759654"
  },
  {
    "text": "So, as I, ah, as I do this, ah,",
    "start": "759655",
    "end": "762730"
  },
  {
    "text": "moves, um, I then decide to move it to wherever the modularity changes the most.",
    "start": "762730",
    "end": "767514"
  },
  {
    "text": "And after the pas- the, the phase 1, ah,",
    "start": "767515",
    "end": "770365"
  },
  {
    "text": "finishes, this is the assignment of nodes to communities.",
    "start": "770365",
    "end": "774145"
  },
  {
    "text": "Now, I create this, ah,",
    "start": "774145",
    "end": "775855"
  },
  {
    "text": "phase 2 where I create a super graph,",
    "start": "775855",
    "end": "777954"
  },
  {
    "text": "where I contract all the nodes of the same community into a super-node,",
    "start": "777955",
    "end": "782319"
  },
  {
    "text": "and then this the, ah,",
    "start": "782319",
    "end": "784329"
  },
  {
    "text": "the edge, ah, the self loop is the,",
    "start": "784330",
    "end": "787345"
  },
  {
    "text": "the to- the total number of- twice the number of edges inside, ah,",
    "start": "787345",
    "end": "791439"
  },
  {
    "text": "the cross edges are how many edges from one cluster point to, ah, another cluster.",
    "start": "791440",
    "end": "797605"
  },
  {
    "text": "This gives me a super, super network,",
    "start": "797605",
    "end": "799584"
  },
  {
    "text": "super-node network, and now I simply apply, ah, phase, ah,",
    "start": "799585",
    "end": "802960"
  },
  {
    "text": "1 again, by clustering this, you know,",
    "start": "802960",
    "end": "805540"
  },
  {
    "text": "here I would get the following two clusters,",
    "start": "805540",
    "end": "807475"
  },
  {
    "text": "again I contract into super-nodes.",
    "start": "807475",
    "end": "809425"
  },
  {
    "text": "So here I have now basically,",
    "start": "809425",
    "end": "810970"
  },
  {
    "text": "ah, the two communities.",
    "start": "810970",
    "end": "812230"
  },
  {
    "text": "So what this means is that this original graph can be first split into two communities,",
    "start": "812230",
    "end": "817120"
  },
  {
    "text": "the violet and green one.",
    "start": "817120",
    "end": "819055"
  },
  {
    "text": "And then, you know, the,",
    "start": "819055",
    "end": "820810"
  },
  {
    "text": "the green one can be super,",
    "start": "820810",
    "end": "822700"
  },
  {
    "text": "ah, ah, ah, ah,",
    "start": "822700",
    "end": "823960"
  },
  {
    "text": "again split into two more communities and the violet,",
    "start": "823960",
    "end": "826675"
  },
  {
    "text": "into two more communities.",
    "start": "826675",
    "end": "828415"
  },
  {
    "text": "And then each of these four communities is denoted in this network.",
    "start": "828415",
    "end": "831790"
  },
  {
    "text": "So we get this, ah, hierarchical, ah, structure.",
    "start": "831790",
    "end": "834820"
  },
  {
    "text": "Um, and just to give you an example,",
    "start": "834820",
    "end": "836950"
  },
  {
    "text": "if you look, for example,",
    "start": "836950",
    "end": "837970"
  },
  {
    "text": "at a, ah, Belgian,",
    "start": "837970",
    "end": "839500"
  },
  {
    "text": "ah, mobile network, right?",
    "start": "839500",
    "end": "841210"
  },
  {
    "text": "Eh, Belgium is a,",
    "start": "841210",
    "end": "842440"
  },
  {
    "text": "is a place where,",
    "start": "842440",
    "end": "843550"
  },
  {
    "text": "uh, there are two, ah,",
    "start": "843550",
    "end": "844975"
  },
  {
    "text": "people speak two languages,",
    "start": "844975",
    "end": "846220"
  },
  {
    "text": "there's a strong French community,",
    "start": "846220",
    "end": "847720"
  },
  {
    "text": "and there's a, a strong Dutch speaking community.",
    "start": "847720",
    "end": "850720"
  },
  {
    "text": "And if you look at the social network,",
    "start": "850720",
    "end": "852279"
  },
  {
    "text": "ah, of phone calls,",
    "start": "852280",
    "end": "853870"
  },
  {
    "text": "you see very nicely how the- basically the,",
    "start": "853870",
    "end": "855940"
  },
  {
    "text": "the country splits into two, uh,",
    "start": "855940",
    "end": "858100"
  },
  {
    "text": "separate parts where, you know,",
    "start": "858100",
    "end": "860050"
  },
  {
    "text": "French speak to French,",
    "start": "860050",
    "end": "861459"
  },
  {
    "text": "Dutch speak to Dutch,",
    "start": "861460",
    "end": "862720"
  },
  {
    "text": "and there is relatively little connections, ah, between the two.",
    "start": "862720",
    "end": "866649"
  },
  {
    "text": "So to summarize, uh,",
    "start": "866650",
    "end": "869065"
  },
  {
    "text": "we have defined the notion of modularity,",
    "start": "869065",
    "end": "871480"
  },
  {
    "text": "which, ah, gives me the overall quality of the partitioning of a graph into communities.",
    "start": "871480",
    "end": "876805"
  },
  {
    "text": "Um, and now, ah, then we talked about, ah,",
    "start": "876805",
    "end": "879925"
  },
  {
    "text": "the Louvain algorithm for modularity maximization,",
    "start": "879925",
    "end": "883540"
  },
  {
    "text": "where basically it is a greedy strategy,",
    "start": "883540",
    "end": "885880"
  },
  {
    "text": "where we start with every node belonging into its own cluster,",
    "start": "885880",
    "end": "889525"
  },
  {
    "text": "and then we merge- we remove nodes between",
    "start": "889525",
    "end": "892090"
  },
  {
    "text": "clusters so that the overall modularity keeps increasing.",
    "start": "892090",
    "end": "895375"
  },
  {
    "text": "After no moves are possible anymore,",
    "start": "895375",
    "end": "898120"
  },
  {
    "text": "we join the clusters into super-nodes,",
    "start": "898120",
    "end": "900805"
  },
  {
    "text": "and again, repeat the clustering,",
    "start": "900805",
    "end": "902500"
  },
  {
    "text": "and this way we get this kind of nice hierarchical,",
    "start": "902500",
    "end": "905350"
  },
  {
    "text": "ah, community, ah, structure.",
    "start": "905350",
    "end": "907690"
  },
  {
    "text": "Um, Louvain works really well in practice,",
    "start": "907690",
    "end": "910480"
  },
  {
    "text": "scales to large networks and, ah,",
    "start": "910480",
    "end": "912324"
  },
  {
    "text": "people, ah, really like, ah, to use it.",
    "start": "912325",
    "end": "915410"
  }
]