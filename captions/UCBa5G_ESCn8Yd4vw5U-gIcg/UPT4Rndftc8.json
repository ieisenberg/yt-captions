[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "So, so far we've covered multi-task learning and meta-learning topics in the context",
    "start": "5270",
    "end": "10439"
  },
  {
    "text": "of supervised learning as well as in the context of uh, hierarchical Bayesian models. And so today we're gonna talk about what these types of",
    "start": "10439",
    "end": "17700"
  },
  {
    "text": "algorithms start to look like when we move into sequential decision-making domains, uh, in reinforcement learning.",
    "start": "17700",
    "end": "23220"
  },
  {
    "text": "And so today we'll get started on that and we'll get started by talking about, kind of a, a primer on, on reinforcement learning in",
    "start": "23220",
    "end": "28980"
  },
  {
    "text": "the multitask reinforcement learning problem, uh, goal condition variants of that and, uh,",
    "start": "28980",
    "end": "34545"
  },
  {
    "text": "then we'll, in future lectures, over the next couple of weeks, cover additional topics in the context of",
    "start": "34545",
    "end": "40565"
  },
  {
    "text": "reinforcement learning when you have multiple goals, multiple tasks, etc. Um, first some logistical items.",
    "start": "40565",
    "end": "47130"
  },
  {
    "start": "46000",
    "end": "151000"
  },
  {
    "text": "Homework 2 is due on Wednesday this week. Uh, Homework 3 will be out on Wednesday this week and Homework 3 will cover,",
    "start": "47130",
    "end": "55460"
  },
  {
    "text": "uh, topics in goal condition reinforcement learning and including some of the things that we're talking about today.",
    "start": "55460",
    "end": "60935"
  },
  {
    "text": "And the product proposal is due next Wednesday. Okay, so, um, first,",
    "start": "60935",
    "end": "69979"
  },
  {
    "text": "uh, why should we actually care about reinforce learning? So, uh, we talked a lot about supervised learning. Supervised learning is, is used in a wi - wide variety of places.",
    "start": "69980",
    "end": "77810"
  },
  {
    "text": "Um, and I guess, first to, kind of, answer this question, let's think about, well, when do you not need sequential decision-making?",
    "start": "77810",
    "end": "84725"
  },
  {
    "text": "Uh, and anywhere else are things where you need sequential decision-making systems. So, uh, you don't need sequential decision-making systems when",
    "start": "84725",
    "end": "92090"
  },
  {
    "text": "your system is making a single isolated decision, uh, such as a classification decision or a regression decision.",
    "start": "92090",
    "end": "99335"
  },
  {
    "text": "Uh, and where that decision does not affect feature inputs to the system and does not affect future, future decisions.",
    "start": "99335",
    "end": "106670"
  },
  {
    "text": "Uh, and so from this point of view, uh, we don't need sequential decisions whenever we're, kind of,",
    "start": "106670",
    "end": "114380"
  },
  {
    "text": "in a very isolated black-box world, uh, and actually in the real world, uh, in many cases, our decisions are actually affecting the future or affecting,",
    "start": "114380",
    "end": "122540"
  },
  {
    "text": "uh, future aspects of the world. So, uh, there are many different applications of sequential decision,",
    "start": "122540",
    "end": "128750"
  },
  {
    "text": "sequential decision making problems. Uh, in many cases, in some applications, people choose to ignore the dependence of, uh,",
    "start": "128750",
    "end": "135860"
  },
  {
    "text": "of future, of the current decision on, on the future, uh, which, kind of, makes a simplifying assumption.",
    "start": "135860",
    "end": "141680"
  },
  {
    "text": "Uh, but in many real world cases, there are, um, there is this effect, uh, of, of affecting the future.",
    "start": "141680",
    "end": "148065"
  },
  {
    "text": "And so for example, some very common applications of reinforcement learning where you can't afford to ignore this effect include things like robotics, uh,",
    "start": "148065",
    "end": "155540"
  },
  {
    "start": "151000",
    "end": "217000"
  },
  {
    "text": "include things like language and dialogue systems when you're interacting with another agent or interacting with a human, for example.",
    "start": "155540",
    "end": "163340"
  },
  {
    "text": "Uh, in autonomous driving, uh, decisions you make affect the, the future observations that you make.",
    "start": "163340",
    "end": "168965"
  },
  {
    "text": "Uh, in business operations, uh, in finance, uh, these are all kind of in these sequential,",
    "start": "168965",
    "end": "175500"
  },
  {
    "text": "uh, in a sequential decision-making problem setting. Uh, and really most kind of deployed machine learning systems that are",
    "start": "175500",
    "end": "181459"
  },
  {
    "text": "deployed in the real world and are interacting with humans, are faced with a sequential decision-making problem.",
    "start": "181460",
    "end": "186985"
  },
  {
    "text": "Okay. Um, so this is, uh, in practice, why this, sort of, topic is important.",
    "start": "186985",
    "end": "192120"
  },
  {
    "text": "Uh, and also if you're interested in, kind of, how humans, uh, act in the world and how humans are intelligent in the world, uh,",
    "start": "192120",
    "end": "200269"
  },
  {
    "text": "these sorts of problems is also, kind of, a key aspect of our own intelligence. We also can reason about how our actions affect the future.",
    "start": "200270",
    "end": "208630"
  },
  {
    "text": "Okay. So reinforcement learning, uh, or in general sequential decision making is pretty important.",
    "start": "208630",
    "end": "214400"
  },
  {
    "text": "Um, and so in this lecture, what we're gonna talk about is first, uh, what is reinforcement learning or what does multi-task learning look like",
    "start": "214400",
    "end": "223010"
  },
  {
    "start": "217000",
    "end": "376000"
  },
  {
    "text": "in the reinforcement learning context when you're making, uh, sequential decisions? What does this look like, uh, in the formulation of policy gradients which is one,",
    "start": "223010",
    "end": "232599"
  },
  {
    "text": "uh, one form of reinforcement learning, algorithm of one class of reinforcement learning algorithms? What does this look like, uh,",
    "start": "232600",
    "end": "238835"
  },
  {
    "text": "in the, in the context of Q-learning? So, uh, we'll give a, a, like, a few slides of,",
    "start": "238835",
    "end": "244560"
  },
  {
    "text": "of review on Q-learning. This should be a review for most of you because this, this topic is covered in a, a number of courses like CS 221,",
    "start": "244560",
    "end": "251100"
  },
  {
    "text": "CS 229, um, etc. Although policy gradients is not always covered in those courses. So we'll, we'll gi- give a little bit more of an in-depth overview of those.",
    "start": "251100",
    "end": "259230"
  },
  {
    "text": "Uh, and then finally we'll talk about approaches for multi-task Q-learning, goal conditioning Q-learning, um, and algorithms that,",
    "start": "259230",
    "end": "265710"
  },
  {
    "text": "that significantly improve upon, kind of, the naive approach to multi-task learning, uh, in combination with reinforcement learning.",
    "start": "265710",
    "end": "272805"
  },
  {
    "text": "Okay. So first let's talk about, uh, the problem statement. Uh, and we can do this by looking at an example.",
    "start": "272805",
    "end": "279820"
  },
  {
    "text": "So, so far we've been looking at things like object classification, regression, these isolated, uh, problems where you need,",
    "start": "279820",
    "end": "285520"
  },
  {
    "text": "you make, um, predictions. And, uh, in contrast, you could think about something like object manipulation where we",
    "start": "285520",
    "end": "292540"
  },
  {
    "text": "have very much a sequential decision-making problem. So you can view, uh, the, the problem of object classification as a supervised learning problem",
    "start": "292540",
    "end": "300250"
  },
  {
    "text": "and the problem of object manipulation as a sequential decision-making problem. Uh, and what are the differences between these two problems?",
    "start": "300250",
    "end": "306900"
  },
  {
    "text": "So in supervised learning, so far we've assumed that we have iid data,",
    "start": "306900",
    "end": "312610"
  },
  {
    "text": "data that is independently and identically distributed according to some distribution. Uh, whereas in sequential decision-making,",
    "start": "312610",
    "end": "320060"
  },
  {
    "text": "your action that you take effects the next state that you're in. So the data that you're seeing is very much not iid.",
    "start": "320060",
    "end": "327034"
  },
  {
    "text": "Uh, second, so in supervised learning, we have some typically assume some large dataset that's maybe",
    "start": "327035",
    "end": "333530"
  },
  {
    "text": "curated by humans to ensure that it has a distribution that you care about. Uh, whereas in things like sequential decision-making,",
    "start": "333530",
    "end": "340130"
  },
  {
    "text": "you need to collect the data yourself in many cases. Um, and it's also not clear what the labels are.",
    "start": "340130",
    "end": "346700"
  },
  {
    "text": "Uh, you aren't really, you kind of need to figure out what this might be in a different, in different applications.",
    "start": "346700",
    "end": "352105"
  },
  {
    "text": "And then lastly, in things like supervised learning, you generally have a fairly well-defined notion of success which is",
    "start": "352105",
    "end": "357305"
  },
  {
    "text": "corresponds to some error or some prediction accuracy correspond, uh, in relation to the, the labels.",
    "start": "357305",
    "end": "362375"
  },
  {
    "text": "Whereas in, uh, things like reinforcement learning, success is a little bit more, uh, great.",
    "start": "362375",
    "end": "368250"
  },
  {
    "text": "Okay. So these are some of the, kind of, biggest differences between, uh, these two problem domains.",
    "start": "368250",
    "end": "374370"
  },
  {
    "text": "Uh, and so before we go into like what concretely the problem looks like, let's look over some terminology and notation.",
    "start": "374370",
    "end": "380540"
  },
  {
    "start": "376000",
    "end": "516000"
  },
  {
    "text": "So, uh, somebody before will say that we have some neural network that's gonna be making some predictions and in the classification setting, uh,",
    "start": "380540",
    "end": "388210"
  },
  {
    "text": "you might be looking at an image and then classifying the class corresponding to that image. Uh, corresponding to different,",
    "start": "388210",
    "end": "393950"
  },
  {
    "text": "uh, different types of animals for example. Now, uh, in reinforcement learning, uh,",
    "start": "393950",
    "end": "399020"
  },
  {
    "text": "we're no longer gonna be making, uh, predictions like that. We'll be instead, uh, using, uh, our policy.",
    "start": "399020",
    "end": "405590"
  },
  {
    "text": "This policy will be taking actions and the actions will affect the next state. Um, so, all right.",
    "start": "405590",
    "end": "411150"
  },
  {
    "text": "There will be this feedback loop that goes from the action to, uh, back to the observation, uh, and our, our classes won't look something, won't look like this.",
    "start": "411150",
    "end": "419330"
  },
  {
    "text": "They might look more like this. So we might, uh, need to figure out if we should run away, if we should ignore, if we should pet the tiger, etc.",
    "start": "419330",
    "end": "428050"
  },
  {
    "text": "Okay. So we need to make decisions, um, always denoting the observation that the agent or the,",
    "start": "428120",
    "end": "434240"
  },
  {
    "text": "the system receives as input is denoting the action. Uh, Pi is denoting the policy which is parameterized by Theta.",
    "start": "434240",
    "end": "442960"
  },
  {
    "text": "And typically, we assume that there is some underlying state of the world s. Uh,",
    "start": "442960",
    "end": "448910"
  },
  {
    "text": "and so in the fully observed setting, we get to observe s, uh, and in the partially observed setting,",
    "start": "448910",
    "end": "454470"
  },
  {
    "text": "we get to observe o. Uh, what concretely is the difference between s and o? Uh, one example of this is you may have,",
    "start": "454470",
    "end": "461675"
  },
  {
    "text": "uh, you may be, uh, trying to chase a, uh, a hyena or something and, uh,",
    "start": "461675",
    "end": "468590"
  },
  {
    "text": "if you're given an image or something that would be an observation, uh, whereas in contrast, if you are given the pose of the,",
    "start": "468590",
    "end": "476195"
  },
  {
    "text": "uh, respective animals, then that would be the state. You'll basically be able to fully observe, uh, the system,",
    "start": "476195",
    "end": "482240"
  },
  {
    "text": "under- underlying state of the system and the things that, that matter for making decisions in the world.",
    "start": "482240",
    "end": "487730"
  },
  {
    "text": "Uh, and in particular, in partially observed settings, uh, you might not just receive an image.",
    "start": "487730",
    "end": "493280"
  },
  {
    "text": "You may also have occlusions and the imagery can actually see, uh, part of the state.",
    "start": "493280",
    "end": "498120"
  },
  {
    "text": "Okay. So this is, kind of, the, the basic, uh, kind of, terminology corresponding to reinforcement learning.",
    "start": "498370",
    "end": "504860"
  },
  {
    "text": "Uh, now one very basic approach to this, sort of, sequential decision making",
    "start": "504860",
    "end": "510800"
  },
  {
    "text": "problem is to treat it as a supervised learning problem. So what you could do is, you can say, \"Okay,",
    "start": "510800",
    "end": "516289"
  },
  {
    "start": "516000",
    "end": "601000"
  },
  {
    "text": "I, I just want to, uh, perform. I just want to imitate some expert for example.\"",
    "start": "516290",
    "end": "521810"
  },
  {
    "text": "So, uh, maybe you could collect a bunch of driving data, uh, collect the observation that the person sees and collect",
    "start": "521810",
    "end": "528365"
  },
  {
    "text": "the action that they took in those states, uh, put this into some big training data set, uh,",
    "start": "528365",
    "end": "534620"
  },
  {
    "text": "and then sample iid from this training data set during supervised learning to, uh, to train your policy to predict actions from observations.",
    "start": "534620",
    "end": "543904"
  },
  {
    "text": "Okay. So we've already seen a little bit of imitation learning. So there was a paper presentation, uh, a week or two ago that was looking at,",
    "start": "543905",
    "end": "550325"
  },
  {
    "text": "uh, how we can apply meta-learning into things like imitation learning. Uh, these approaches generally work, uh, pretty well in some contexts.",
    "start": "550325",
    "end": "556940"
  },
  {
    "text": "For example if you have a lot of data, uh, expert data of performing the right actions, uh, then these, these systems can actually do something fairly reasonable.",
    "start": "556940",
    "end": "565370"
  },
  {
    "text": "Uh, the place where these kinds of systems tend to fail are when you have very long,",
    "start": "565370",
    "end": "570980"
  },
  {
    "text": "uh, very long horizon problems, you have compounding errors, uh, as, uh, basically as you make actions,",
    "start": "570980",
    "end": "577850"
  },
  {
    "text": "you'll start to move off of the manifold of the data and then your errors will, will compound, um, until you're well off of the manifold of the training data.",
    "start": "577850",
    "end": "586519"
  },
  {
    "text": "Um, and also these systems don't reason about outcomes in any way. Uh, they're just trying to mimic what the data is",
    "start": "586520",
    "end": "592880"
  },
  {
    "text": "doing rather than trying to accomplish some particular outcome. Okay. So this is where reinforcement learning comes in.",
    "start": "592880",
    "end": "599134"
  },
  {
    "text": "Um, and for reinforcement learning, we need some notion of what's called a reward function.",
    "start": "599135",
    "end": "604310"
  },
  {
    "start": "601000",
    "end": "657000"
  },
  {
    "text": "Uh, and this reward function should capture what states and actions are better or worse,",
    "start": "604310",
    "end": "609440"
  },
  {
    "text": "uh, for the system. So this typ - typically takes in both a state and an action,",
    "start": "609440",
    "end": "614815"
  },
  {
    "text": "uh, and it tells us which states and actions are better. For example, if we're driving, we might have a very high reward, if we,",
    "start": "614815",
    "end": "621470"
  },
  {
    "text": "we look like this and have a low reward if we see something like this. Okay.",
    "start": "621470",
    "end": "628514"
  },
  {
    "text": "So the- um, in aggregate, the states, the actions, and the rewards,",
    "start": "628515",
    "end": "633715"
  },
  {
    "text": "as well as the dynamics of the system define a Markov decision process,",
    "start": "633715",
    "end": "639039"
  },
  {
    "text": "because this is encapsulating the notion of a sequential decision-making problem. [NOISE] Okay. Any, uh,",
    "start": "639039",
    "end": "646750"
  },
  {
    "text": "any questions up until here? This, this should mostly be review for people.",
    "start": "646750",
    "end": "652250"
  },
  {
    "text": "Okay. Cool. So the goal of reinforcement learning, uh, is typically to learn some policy that takes, uh, as input.",
    "start": "653370",
    "end": "660610"
  },
  {
    "start": "657000",
    "end": "1155000"
  },
  {
    "text": "Uh, in this case, we'll look at the fully observed setting, takes as input some state, and makes predictions about auctions. Uh, the goal is to learn, uh, the,",
    "start": "660610",
    "end": "667585"
  },
  {
    "text": "the policy- uh, the parameters of that policy. So, uh, for in a deep reinforcement learning setting, your policy will probably be parameterized as a neural network,",
    "start": "667585",
    "end": "676135"
  },
  {
    "text": "uh, where the states are being processed as input, you're produ- uh, producing actions, the actions are fed into the world, uh,",
    "start": "676135",
    "end": "681910"
  },
  {
    "text": "and then the world gives you the next state that's fed back into your policy.",
    "start": "681910",
    "end": "687949"
  },
  {
    "text": "Okay. Um, and so, we can actually characterize a system as the graphical model here, uh,",
    "start": "688560",
    "end": "696115"
  },
  {
    "text": "where we have a policy that's taking in- in the- in this case, in the partially observed setting a policy that's taking",
    "start": "696115",
    "end": "702880"
  },
  {
    "text": "the observation and producing an action, uh, the dynamics are, uh, taking in the current state and the current action",
    "start": "702880",
    "end": "710140"
  },
  {
    "text": "and producing a distribution over the next state. Um, and one thing that's pretty important is that",
    "start": "710140",
    "end": "715870"
  },
  {
    "text": "this dynamics function is independent of the previous state. All right. This is what's known as the Markov property.",
    "start": "715870",
    "end": "722605"
  },
  {
    "text": "Which is that basically, uh, kind of the definition of a state in a Markov decision process is that, uh, you can fully define, uh,",
    "start": "722605",
    "end": "729264"
  },
  {
    "text": "the reward function and the dynamics, uh, from the, the information in that state variable independent of previous states.",
    "start": "729265",
    "end": "738115"
  },
  {
    "text": "Uh, and the way, the way- you see guys if you look at this dynamics distribution here,",
    "start": "738115",
    "end": "743649"
  },
  {
    "text": "this only depends on S_t and A_t and doesn't depend on S_t minus 1.",
    "start": "743650",
    "end": "748640"
  },
  {
    "text": "Okay. And then, [NOISE] the goal of reinforcement learning and typically kind of the way that we can",
    "start": "749580",
    "end": "754840"
  },
  {
    "text": "formulate a concrete objective here is that we want to be able to maximize the expected reward, uh, under our policy.",
    "start": "754840",
    "end": "761755"
  },
  {
    "text": "And in the infinite horizon case, we can imagine the stationary distribution over states and actions",
    "start": "761755",
    "end": "767470"
  },
  {
    "text": "arising from our policy and maximize the reward function, uh, under that stationary distribution,",
    "start": "767470",
    "end": "773035"
  },
  {
    "text": "uh, and in the finite horizon case, we might have some horizon capital T and you wanna maximize the rewards of the states",
    "start": "773035",
    "end": "779800"
  },
  {
    "text": "and actions visited by our policy- when rolling out our policy. Yeah.",
    "start": "779800",
    "end": "785745"
  },
  {
    "text": "So are the actions here taken before the observation or after the observation? So like is any one taken just before we",
    "start": "785745",
    "end": "793510"
  },
  {
    "text": "observe Observation 1 [NOISE] or is it taken just after? It's taken just after. So you observe Observation 1 and then,",
    "start": "793510",
    "end": "800320"
  },
  {
    "text": "uh, and that's shown, that's shown right here and then your policy predi- predicts an action from that observation,",
    "start": "800320",
    "end": "807430"
  },
  {
    "text": "and that action is then fed- uh, then the kind of the world that actually, is actually executed in the real-world and",
    "start": "807430",
    "end": "813160"
  },
  {
    "text": "that produces the next state which produces, uh, the next observation. It seems like you- uh, the states",
    "start": "813160",
    "end": "820060"
  },
  {
    "text": "produced- it seems like you'd wanna use the state to make your action but it sounds like you're saying the model doesn't try and convert it into a state first. You're saying.",
    "start": "820060",
    "end": "829735"
  },
  {
    "text": "So the- I guess there's a couple of different versions of how you might handle the partial observability,",
    "start": "829735",
    "end": "835255"
  },
  {
    "text": "maybe one point of confusion here is th- the arrowheads on these arrows are very hard to see and there,",
    "start": "835255",
    "end": "840384"
  },
  {
    "text": "there is an arrow going from state to observation and not an arrow going from observation to state. Um, you- what your policy could do is it could try to form some, like,",
    "start": "840385",
    "end": "849325"
  },
  {
    "text": "estimate of the current state from your observation, and then, like, do some sort of inference and then pass that to your policy to predict the next option.",
    "start": "849325",
    "end": "856180"
  },
  {
    "text": "You said here is the real state of the world rather than an embedded state from [NOISE] [OVERLAPPING] Yeah. Exactly. Yeah. Yeah so the state is the, the real state.",
    "start": "856180",
    "end": "865100"
  },
  {
    "text": "Okay. Cool. So [NOISE] now that we've talked about kind of the reinforcement learning problem,",
    "start": "865650",
    "end": "873565"
  },
  {
    "text": "um, what is the reinforcing learning task? Uh, and we're gonna define this for the sake of,",
    "start": "873565",
    "end": "879040"
  },
  {
    "text": "uh, thinking about the multitask learning setting. [NOISE] So remember, in supervised learning, we defined a task, uh, as this,",
    "start": "879040",
    "end": "885430"
  },
  {
    "text": "as corresponding to the data distribution, or the, the data generating distributions, p of X and p of Y given X,",
    "start": "885430",
    "end": "891130"
  },
  {
    "text": "as well as some loss function. [NOISE] Uh, in reinforcement learning, uh, our task will be defined as basically just a Markov decision process.",
    "start": "891130",
    "end": "899800"
  },
  {
    "text": "So, uh, the task will be defined by some state space as some action space a, uh,",
    "start": "899800",
    "end": "907545"
  },
  {
    "text": "some initial state distribution p of S_1, uh, your dynamics function, uh,",
    "start": "907545",
    "end": "913365"
  },
  {
    "text": "S prime given s and a, and the reward function. So if you look at, uh, the, uh,",
    "start": "913365",
    "end": "920430"
  },
  {
    "text": "kind of- if you compare this to the supervised learning setting, uh, the initial state distribution, the dynamics are, basically,",
    "start": "920430",
    "end": "926310"
  },
  {
    "text": "are the same as the data generating distributions. The reward function, uh,",
    "start": "926310",
    "end": "931365"
  },
  {
    "text": "corresponds to the loss function, um, and the state and action space are just kind of telling you, uh,",
    "start": "931365",
    "end": "936810"
  },
  {
    "text": "what is the general set that your states and actions lie within. All right. So this is just a Markov decision process.",
    "start": "936810",
    "end": "944460"
  },
  {
    "text": "Um, and I guess one thing worth mentioning here is that, if these- if the different MDPs are different tasks,",
    "start": "944460",
    "end": "950815"
  },
  {
    "text": "then this is much more than just the semantic meaning of a task. Uh, cause different tasks could have the same exact reward function but have different action spaces,",
    "start": "950815",
    "end": "957880"
  },
  {
    "text": "for example, or have different dynamics. Um, and so we use the term task loosely to describe",
    "start": "957880",
    "end": "964315"
  },
  {
    "text": "these different Markov decision processes. All right. So what are some examples of what different task distributions might look like,",
    "start": "964315",
    "end": "971845"
  },
  {
    "text": "or settings where we might actually want to apply multitask learning in the reinforcement learning setting? Uh, so one example, uh,",
    "start": "971845",
    "end": "978639"
  },
  {
    "text": "that we saw earlier actually is a supervised learning problem but really is a sequential decision making problem is a recommendation system,",
    "start": "978640",
    "end": "984595"
  },
  {
    "text": "where you want to be able to recommend videos, or recommend treatments, or recommend other things to a particular person.",
    "start": "984595",
    "end": "990115"
  },
  {
    "text": "And you could imagine different people as being different tasks in the system. Different people have different preferences,",
    "start": "990115",
    "end": "996850"
  },
  {
    "text": "have different- uh, operate in different ways. Uh, and so, if you kind of view this personalized recommendation, uh,",
    "start": "996850",
    "end": "1004440"
  },
  {
    "text": "problem as a multi-task learning problem, then you can view it as a setting where, uh,",
    "start": "1004440",
    "end": "1009569"
  },
  {
    "text": "the dynamics and the reward function vary across tasks. Um, the dynamics correspond to how that person will react to",
    "start": "1009570",
    "end": "1017340"
  },
  {
    "text": "a particular action that you take and the reward function corresponds to whether, to whether or not what you do- uh, whether,",
    "start": "1017340",
    "end": "1024885"
  },
  {
    "text": "whether or not you recommend something to them reduce- re- results in a state that is good.",
    "start": "1024885",
    "end": "1031425"
  },
  {
    "text": "In some context, the initial state distribution may also vary for different people, it depends on the, uh,",
    "start": "1031425",
    "end": "1037709"
  },
  {
    "text": "particular, like how you formulate your problem. Okay. So this is one example.",
    "start": "1037710",
    "end": "1043890"
  },
  {
    "text": "Um, another example where reinforcement learning has been applied, uh, has been in character animation, uh, and you can imagine,",
    "start": "1043890",
    "end": "1050190"
  },
  {
    "text": "uh, trying to animate different, uh, characters in computer graphics across different maneuvers, for example.",
    "start": "1050190",
    "end": "1056820"
  },
  {
    "text": "Uh, so there has been some work applied in reinforcement learning to learning- uh, for learning maneuvers like this. Uh, and in this case,",
    "start": "1056820",
    "end": "1062625"
  },
  {
    "text": "if you treat this as a multitask learning problem, different tasks would have different reward functions, um,",
    "start": "1062625",
    "end": "1068669"
  },
  {
    "text": "in the setting but the dynamics would be the same, initial state distribution would be the same, as well as the state and action space.",
    "start": "1068670",
    "end": "1076000"
  },
  {
    "text": "Okay. Uh, and then, another setting where, uh, reinforcement learning has been applied is for, uh, dressing, uh,",
    "start": "1076520",
    "end": "1084630"
  },
  {
    "text": "putting on clothes, and this is actually a really challenging problem in computer graphics because of the,",
    "start": "1084630",
    "end": "1089880"
  },
  {
    "text": "the deformable objects and also has applications in assistive robotics, for example. Uh, and in this setting,",
    "start": "1089880",
    "end": "1096375"
  },
  {
    "text": "uh, things like the initial state distribution, what, what is the garment- what state is the garment in before you put it on,",
    "start": "1096375",
    "end": "1102600"
  },
  {
    "text": "as well as the dynamics are going to vary across tasks but the underlying reward function might be the same,",
    "start": "1102600",
    "end": "1108075"
  },
  {
    "text": "uh, such as putting the clothes on the person. Uh, and then one last example of,",
    "start": "1108075",
    "end": "1113775"
  },
  {
    "text": "of a task distribution might be if we wanna be able to do reinforcement learning across different robotic platforms.",
    "start": "1113775",
    "end": "1119880"
  },
  {
    "text": "Uh, you may still want to do the same task across these platforms like, like having them learn how to grasp things, uh,",
    "start": "1119880",
    "end": "1125669"
  },
  {
    "text": "but in this case, the state space and the action space would be- would vary across tasks. The initial state distribution and the dynamics would also",
    "start": "1125670",
    "end": "1132059"
  },
  {
    "text": "vary across tasks as the robots have different, uh, degrees of freedom and react to actions in different ways,",
    "start": "1132060",
    "end": "1137370"
  },
  {
    "text": "but the underlying reward function could be the same. Of course, if you want the robots to do different things, then the reward function would be different.",
    "start": "1137370",
    "end": "1144400"
  },
  {
    "text": "Any questions on these examples? Or any questions about other examples?",
    "start": "1144650",
    "end": "1150760"
  },
  {
    "text": "Okay. Cool. So this is a reinforcement learning task.",
    "start": "1152270",
    "end": "1157800"
  },
  {
    "start": "1155000",
    "end": "1261000"
  },
  {
    "text": "Um, now, one alternative way to view multitask reinforcement learning,",
    "start": "1157800",
    "end": "1162900"
  },
  {
    "text": "uh, is as follows. So we'll typically have some sort of task identifier that's part of the state,",
    "start": "1162900",
    "end": "1169485"
  },
  {
    "text": "and this is required to make it a fully observable setting or a fully observable MDP.",
    "start": "1169485",
    "end": "1175200"
  },
  {
    "text": "And the notation I'm using here is that S-bar is gonna denote the original state space or the original state,",
    "start": "1175200",
    "end": "1181845"
  },
  {
    "text": "and Z_i is going to denote the task identifier as in previous lectures. Now, if you take this view, then interestingly,",
    "start": "1181845",
    "end": "1189690"
  },
  {
    "text": "what you can take is you can look at- uh, you can basically fold, uh, looking at the task identifier and determining, um,",
    "start": "1189690",
    "end": "1196784"
  },
  {
    "text": "determining the dynamics and determining the reward into a single dynamics function and a single reward function. Uh, and then, basically, view, uh,",
    "start": "1196785",
    "end": "1204510"
  },
  {
    "text": "your set of tasks as just a single, single task standard Markov decision process,",
    "start": "1204510",
    "end": "1209850"
  },
  {
    "text": "where the state space and the action space are just the union of the state spaces and action spaces in the original tasks,",
    "start": "1209850",
    "end": "1216194"
  },
  {
    "text": "uh, that the initial state distribution just corresponds to a mixture distribution over your initial state distributions for each of those tasks.",
    "start": "1216194",
    "end": "1222929"
  },
  {
    "text": "The dynamics and the reward function are folded into the- um, uh, ah, they are just a single dynamics and single reward function that",
    "start": "1222930",
    "end": "1230520"
  },
  {
    "text": "takes as input the task identifier and produces either the next state or the reward.",
    "start": "1230520",
    "end": "1235270"
  },
  {
    "text": "So basically, you can essentially view- you can still basically apply standard reinforcement learning",
    "start": "1235910",
    "end": "1241935"
  },
  {
    "text": "algorithms- standard single task reinforcement learning algorithms to the multitask problem with this view on multitask RL.",
    "start": "1241935",
    "end": "1251110"
  },
  {
    "text": "Questions on this? [NOISE]",
    "start": "1252880",
    "end": "1259220"
  },
  {
    "text": "So basically, multi-task RLs, the same as before,",
    "start": "1259220",
    "end": "1264787"
  },
  {
    "start": "1261000",
    "end": "1411000"
  },
  {
    "text": "is the same as the single task reinforcement problem except we have a task identifier that's part of the state.",
    "start": "1264787",
    "end": "1270845"
  },
  {
    "text": "Uh, this task identifier could be something like a one-hot task ID like we had described in the supervised learning context,",
    "start": "1270845",
    "end": "1277835"
  },
  {
    "text": "it could be a language description of the task, uh, it could be a desired goal state that you want to reach, uh,",
    "start": "1277835",
    "end": "1284840"
  },
  {
    "text": "and this would be what's known as goal-conditioned reinforcement learning where you condition it on a particular state that you want to be able to reach in the future.",
    "start": "1284840",
    "end": "1292730"
  },
  {
    "text": "Uh, and what is the RL function will it could be just the same as",
    "start": "1292730",
    "end": "1298070"
  },
  {
    "text": "before where it takes as input the task id and outputs the reward function corresponding to that task for that state.",
    "start": "1298070",
    "end": "1304684"
  },
  {
    "text": "Uh, or for things like goal-conditioned reinforcement learning, it can correspond to simply the negative distance between",
    "start": "1304685",
    "end": "1310850"
  },
  {
    "text": "your current state or your current original state and the goal state. Uh, and some examples of distance functions might be Euclidean, uh, distance,",
    "start": "1310850",
    "end": "1321799"
  },
  {
    "text": "it could be Euclidean distance in some latent space, uh, it can also be a sparse 0/1 or a function that corresponds,",
    "start": "1321800",
    "end": "1327365"
  },
  {
    "text": "that is 1 when s bar equals sg and 0 when they're not equal.",
    "start": "1327365",
    "end": "1333750"
  },
  {
    "text": "Okay, so you might ask, okay, if, if this is just a standard Markov decision process,",
    "start": "1335350",
    "end": "1340775"
  },
  {
    "text": "why not just apply standard reinforcement learning algorithms? And as I mentioned you can and this will work.",
    "start": "1340775",
    "end": "1347060"
  },
  {
    "text": "Well, it will be more challenging than the individual single tasks because you will have a wider distribution of things in general, uh,",
    "start": "1347060",
    "end": "1354965"
  },
  {
    "text": "but in general you can apply these, these same types of algorithms, but you can often do better, uh,",
    "start": "1354965",
    "end": "1361580"
  },
  {
    "text": "and we'll discuss that a bit in this lecture. [NOISE] Okay.",
    "start": "1361580",
    "end": "1368880"
  },
  {
    "text": "Great. Any questions on how it can be formulated as a single task RL problem? Yeah.",
    "start": "1369490",
    "end": "1378440"
  },
  {
    "text": "[inaudible].",
    "start": "1378440",
    "end": "1384919"
  },
  {
    "text": "Yeah. So I will look conditioned RL is a special case of multi-task reinforcement learning where, um,",
    "start": "1384920",
    "end": "1391190"
  },
  {
    "text": "the task descriptor corresponds to the goal state and the tasks correspond to goal reaching tasks.",
    "start": "1391190",
    "end": "1399360"
  },
  {
    "text": "Okay. So let's get into some algorithms. So, ah, the first class of, I guess,",
    "start": "1402730",
    "end": "1410390"
  },
  {
    "text": "these are, I'll start off by saying that it kind of goes, we can look at broadly at kind of the, the anatomy and like the class of reinforcement learning algorithms",
    "start": "1410390",
    "end": "1417740"
  },
  {
    "start": "1411000",
    "end": "1548000"
  },
  {
    "text": "and how these approaches relate to each other and then I'll talk a bit about, uh, two classes of algorithms.",
    "start": "1417740",
    "end": "1424970"
  },
  {
    "text": "So we can generally review reinforcement learning algorithms in the following flow graph",
    "start": "1424970",
    "end": "1431645"
  },
  {
    "text": "where we first are generating samples, uh, in our environment, this is just running the policy forward typically,",
    "start": "1431645",
    "end": "1440405"
  },
  {
    "text": "then we fit some model to estimate the return, ah, and then we use that model to improve the policy.",
    "start": "1440405",
    "end": "1448445"
  },
  {
    "text": "And then different algorithms typically correspond to just differences in this green box and in this blue box.",
    "start": "1448445",
    "end": "1455435"
  },
  {
    "text": "So for example, one, ah, one example of fitting a model might be just fitting something to the return,",
    "start": "1455435",
    "end": "1462965"
  },
  {
    "text": "estimating the empirical return such as using the Monte-Carlo policy gradient. Uh, another example of estimating the return might be to try to fit a Q function, ah,",
    "start": "1462965",
    "end": "1472549"
  },
  {
    "text": "using for example dynamic programming algorithms, uh, and another example of fitting a model would be to, uh,",
    "start": "1472550",
    "end": "1479060"
  },
  {
    "text": "estimate a function that models the dynamics. Uh, and once we have any of these models we can then,",
    "start": "1479060",
    "end": "1486950"
  },
  {
    "text": "uh, for example apply the policy gradient to our policy parameters, we can improve the policy by taking the max over Q values for our current Q-function,",
    "start": "1486950",
    "end": "1497270"
  },
  {
    "text": "uh, or in the case of model based algorithms we can optimize a policy by for example back propagating through a model into our policy.",
    "start": "1497270",
    "end": "1504960"
  },
  {
    "text": "Uh, this is kind of a, a general outlook on reinforcement learning algorithms where we have different choices for fitting a model to estimate the return,",
    "start": "1505180",
    "end": "1511385"
  },
  {
    "text": "different choices for improving the policy, we also have different choices for how we generate samples although those are,",
    "start": "1511385",
    "end": "1516860"
  },
  {
    "text": "uh, generally, that decision is generally orthogonal to the choice of algorithm. And in this lecture, we'll focus on",
    "start": "1516860",
    "end": "1524000"
  },
  {
    "text": "model-free reinforcement learning methods such as policy gradient methods and Q-learning methods,",
    "start": "1524000",
    "end": "1529174"
  },
  {
    "text": "uh, and in fact we'll, we'll stick with these algorithms for the next, uh, two weeks about. Uh, and then on, uh,",
    "start": "1529175",
    "end": "1536090"
  },
  {
    "text": "the lecture on November 6th we'll focus on model-based RL methods and how they can be applied to the multi-task learning.",
    "start": "1536090",
    "end": "1542610"
  },
  {
    "text": "Okay. So let's start with policy gradients. So, uh, this is our objective,",
    "start": "1543250",
    "end": "1550205"
  },
  {
    "start": "1548000",
    "end": "1603000"
  },
  {
    "text": "uh, in reinforcement learning, so we want to be able to sample trajectories from our policy,",
    "start": "1550205",
    "end": "1556085"
  },
  {
    "text": "uh, and estimate the return. So we'll refer to this objective as J of Theta and,",
    "start": "1556085",
    "end": "1565190"
  },
  {
    "text": "ah, this is just rewriting J of Theta. You can view this or you can estimate this as,",
    "start": "1565190",
    "end": "1570860"
  },
  {
    "text": "uh, rolling out and trajectories, uh, for the example shown here, uh, and estimating the rewa- computing the reward for each of those trajectories.",
    "start": "1570860",
    "end": "1579394"
  },
  {
    "text": "So maybe the first trajectory has a high reward, the middle trajectory has a medium reward and the,",
    "start": "1579395",
    "end": "1584495"
  },
  {
    "text": "the last trajectory has a bad reward. Uh, and so this first sum is the sum over the samples",
    "start": "1584495",
    "end": "1590600"
  },
  {
    "text": "from our policy and the second sum is a sum over time. So this is the way that we can, uh,",
    "start": "1590600",
    "end": "1598040"
  },
  {
    "text": "kind of estimate the, the expectation shown on the left. Now, what we could think about doing this,",
    "start": "1598040",
    "end": "1603770"
  },
  {
    "start": "1603000",
    "end": "1922000"
  },
  {
    "text": "can we differentiate through this objective directly into our policy? Uh, so if our objective is",
    "start": "1603770",
    "end": "1610445"
  },
  {
    "text": "the expected reward and we can estimate this with the reward of a trajectory, I'm just using shorthand to denote that as a sum over",
    "start": "1610445",
    "end": "1617600"
  },
  {
    "text": "time of the reward function of the individual states. Uh, you can view this as, uh,",
    "start": "1617600",
    "end": "1624875"
  },
  {
    "text": "this expectation as an integral over Pi Theta, uh, because the expectation is with respect to Pi Theta of r tau.",
    "start": "1624875",
    "end": "1632940"
  },
  {
    "text": "All right. So this is our objective, uh, and if you want to be able to compute the gradient of this objective with respect to our policy parameters,",
    "start": "1633310",
    "end": "1641360"
  },
  {
    "text": "uh, we get something like this. So we can move the gradient, uh, inside the integral because it's a linear operation and, uh,",
    "start": "1641360",
    "end": "1649970"
  },
  {
    "text": "then you basically have the, the integral of the gradient of the policy [NOISE] times reward function integrated over trajectories.",
    "start": "1649970",
    "end": "1659010"
  },
  {
    "text": "Okay. So this is the gradient. Uh, now how do we actually go about evaluating this gradient?",
    "start": "1659320",
    "end": "1666770"
  },
  {
    "text": "So we do- we don't want to have to, uh, integrate over all possible trajectories,",
    "start": "1666770",
    "end": "1671945"
  },
  {
    "text": "so what we're gonna do is we're gonna use this very convenient identity, uh, which is known as the likelihood ratio trick.",
    "start": "1671945",
    "end": "1677975"
  },
  {
    "text": "And in particular what this identity shows is that, oops, which is that if we, uh,",
    "start": "1677975",
    "end": "1685205"
  },
  {
    "text": "are looking at the, the policy parameter, the, sorry, the policy probability for a trajectory times the gradient of the log of the policy.",
    "start": "1685205",
    "end": "1694595"
  },
  {
    "text": "This is equal to, uh, the, basically we just differentiate to the log, uh,",
    "start": "1694595",
    "end": "1701435"
  },
  {
    "text": "which is equal to the policy times the gradient of Pi divided by Pi.",
    "start": "1701435",
    "end": "1707345"
  },
  {
    "text": "And of course the two pis are on the top and on the bottom can cancel and this is just equal to the gradient of Pi or the gradient of,",
    "start": "1707345",
    "end": "1715550"
  },
  {
    "text": "uh, of the policy with respect to the policy, the policy parameters. Okay. So we have this very convenient, uh, identity,",
    "start": "1715550",
    "end": "1722299"
  },
  {
    "text": "and we can use it to, uh, expand out this equation. So, uh, we can basically replace this,",
    "start": "1722300",
    "end": "1731555"
  },
  {
    "text": "this term with the term on the left to get an integral that looks like this and very conveniently this integral now looks a lot like an expectation.",
    "start": "1731555",
    "end": "1740270"
  },
  {
    "text": "So, uh, this is an expectation under Pi Theta, uh, and so we can simply ,uh,",
    "start": "1740270",
    "end": "1746855"
  },
  {
    "text": "evaluate the gradient or estimate the gradient by, uh, taking an expectation over a trajectory sampled from our policy, uh,",
    "start": "1746855",
    "end": "1754535"
  },
  {
    "text": "and using those samples to evaluate the gradient of the log,",
    "start": "1754535",
    "end": "1760025"
  },
  {
    "text": "probability of our policy weighted by the reward of that trajectory.",
    "start": "1760025",
    "end": "1764190"
  },
  {
    "text": "Okay. So I guess to kind of recap what we did there, this first trajectory we don't want to have to",
    "start": "1765490",
    "end": "1772265"
  },
  {
    "text": "integrate over all possible trajectories and so instead we're able to transform that into an expectation over",
    "start": "1772265",
    "end": "1777860"
  },
  {
    "text": "trajectories drawn from the distribution of our policy.",
    "start": "1777860",
    "end": "1781890"
  },
  {
    "text": "Okay. So when- the, once you have this gradient we can, uh, we can use it,",
    "start": "1782950",
    "end": "1788000"
  },
  {
    "text": "to actually differentiate in, compute this gradient and actually apply that gradient to our policy parameters.",
    "start": "1788000",
    "end": "1793790"
  },
  {
    "text": "Okay. So this is all with respect to trajectories, uh, one thing that is, uh,",
    "start": "1793790",
    "end": "1800690"
  },
  {
    "text": "one thing that's important to do is actually break this down into states and actions, so we're denoting the, uh,",
    "start": "1800690",
    "end": "1806525"
  },
  {
    "text": "Pi of Tau as, uh, Pi of the full trajectory which can be broken down into,",
    "start": "1806525",
    "end": "1812780"
  },
  {
    "text": "uh, the initial state, uh, density times a product over time of the,",
    "start": "1812780",
    "end": "1820475"
  },
  {
    "text": "uh, policy probability and the dynamics probability. So this is basically the probability trajectory under our policy.",
    "start": "1820475",
    "end": "1827960"
  },
  {
    "text": "Uh, if we take the log of both sides of the equation,",
    "start": "1827960",
    "end": "1833179"
  },
  {
    "text": "we get log, uh, Pi of Theta of Tau, uh, and then just change the,",
    "start": "1833180",
    "end": "1839315"
  },
  {
    "text": "the products into sums using the log and we can basically,",
    "start": "1839315",
    "end": "1847564"
  },
  {
    "text": "uh, plug in the right-hand side of the equation into the equation on the left into our form for the gradient.",
    "start": "1847564",
    "end": "1856774"
  },
  {
    "text": "Now unfortunately, if we just apply this, uh, naively, we would have a term that corresponds to",
    "start": "1856775",
    "end": "1863120"
  },
  {
    "text": "the probability of our state or next state given our state and action, uh, and we don't know that probability value.",
    "start": "1863120",
    "end": "1871110"
  },
  {
    "text": "Uh, but we can- one thing that you know is that because this,",
    "start": "1871450",
    "end": "1877414"
  },
  {
    "text": "uh, this is a gradient with respect to Theta, these terms don't depend on Theta, they're constant with respect to Theta and so the gradient",
    "start": "1877415",
    "end": "1884600"
  },
  {
    "text": "of Theta with respect to those terms is 0 and then we get, uh, so we then get the, the kind of,",
    "start": "1884600",
    "end": "1889775"
  },
  {
    "text": "the final gradient which corresponds to this term right here.",
    "start": "1889775",
    "end": "1895295"
  },
  {
    "text": "So, uh, this is basically, uh, log probability of Pi of a given s.",
    "start": "1895295",
    "end": "1902270"
  },
  {
    "text": "This is something that we can evaluate because our policy will output a distribution over a, uh, conditioned on s,",
    "start": "1902270",
    "end": "1908225"
  },
  {
    "text": "and this right term is just the reward function given the state and the action. All right.",
    "start": "1908225",
    "end": "1914419"
  },
  {
    "text": "So this is kind of the vanilla policy gradient, uh, and this is something that we can very clearly evaluate.",
    "start": "1914420",
    "end": "1920480"
  },
  {
    "text": "Um, and so, what this looks like, uh, as an algorithm, uh,",
    "start": "1920480",
    "end": "1928110"
  },
  {
    "start": "1922000",
    "end": "1996000"
  },
  {
    "text": "is basically we can estimate, uh, basically we can run- rule out our policy to get trajectories.",
    "start": "1928110",
    "end": "1933825"
  },
  {
    "text": "We can then estimate the policy gradient by averaging over those trajectories, uh,",
    "start": "1933825",
    "end": "1940095"
  },
  {
    "text": "over time of the, uh, the lo- the gradient- grad log Pi times the reward function,",
    "start": "1940095",
    "end": "1946965"
  },
  {
    "text": "uh, and then apply the gradient, uh, to our policy parameters. So if we go back to our diagram, uh,",
    "start": "1946965",
    "end": "1953715"
  },
  {
    "text": "collecting data corresponds to the orange box, uh, evaluating the return corresponds to the green box and actually,",
    "start": "1953715",
    "end": "1961559"
  },
  {
    "text": "using that to improve the policy, uh, in the last step corresponds to the blue box. [NOISE] And then, what this looks like is an algorithm which is called,",
    "start": "1961560",
    "end": "1971010"
  },
  {
    "text": "uh, the reinforce algorithm, er, is explicitly sampling trajectories from your policy and then computing the gradient, uh,",
    "start": "1971010",
    "end": "1978465"
  },
  {
    "text": "using those trajectories, and then using that estimated gradient to update your policy parameters.",
    "start": "1978465",
    "end": "1984720"
  },
  {
    "text": "And then you can repeat this step to iteratively improve your policy. [NOISE] Okay. So this is the algorithm.",
    "start": "1984720",
    "end": "1992490"
  },
  {
    "text": "Um, how does this compare to something like imitation learning like maximum likelihood of expert actions?",
    "start": "1992490",
    "end": "1998534"
  },
  {
    "start": "1996000",
    "end": "2154000"
  },
  {
    "text": "So, uh, if you look at the policy gradient, um, and you instead also look at kind of the, the imitation learning approach where you do, uh,",
    "start": "1998535",
    "end": "2005480"
  },
  {
    "text": "supervised learning with respect to actions, uh, the maximum likelihood objective looks pretty similar to the,",
    "start": "2005480",
    "end": "2012980"
  },
  {
    "text": "the gradient of the policy, um, [NOISE] the, the policy gradient form. And in particular, the difference is that, uh,",
    "start": "2012980",
    "end": "2020284"
  },
  {
    "text": "the- is just the reward term on the right. So basically policy gradient will correspond to taking,",
    "start": "2020285",
    "end": "2029120"
  },
  {
    "text": "um, maximizing the probability of actions that have high reward.",
    "start": "2029120",
    "end": "2034385"
  },
  {
    "text": "And if they have low reward, then, er, you- you'll have, uh, you'll try to maximize it less essentially.",
    "start": "2034385",
    "end": "2042539"
  },
  {
    "text": "Okay. Now, one of the really nice things about this is that, uh, because we- it's just basically a gradient descent algorithm,",
    "start": "2042970",
    "end": "2049865"
  },
  {
    "text": "it's very easy to apply multitask learning algorithms to it. Uh, we can basically be- it corresponds, uh,",
    "start": "2049865",
    "end": "2056240"
  },
  {
    "text": "very similarly to maximum likelihood, likelihood problems. So all of the things that we learned about in maximum likelihood supervised learning",
    "start": "2056240",
    "end": "2062210"
  },
  {
    "text": "can be applied to the reinforcement learning context. Okay. So this is nice.",
    "start": "2062210",
    "end": "2068839"
  },
  {
    "text": "Um, let's go to one more slide kind of on, on intuitively what this algorithm is doing.",
    "start": "2068840",
    "end": "2073895"
  },
  {
    "text": "Um, so if we look at the, er, kind of the form of the, the gradient, er,",
    "start": "2073895",
    "end": "2079610"
  },
  {
    "text": "which corresponds to the kind of gradient log Pi of a given S, uh, and look at maximum likelihood,",
    "start": "2079610",
    "end": "2085175"
  },
  {
    "text": "um, we can say that, okay, we have trajectories. If we do maximum likelihood imitation learning, we're just trying to imitate,",
    "start": "2085175",
    "end": "2091070"
  },
  {
    "text": "uh, the best trajectories, uh, whereas in policy gradient what we're trying to do is we have some, some distribution over these trajectories.",
    "start": "2091070",
    "end": "2098015"
  },
  {
    "text": "And then we're going to try to, uh, increase the probability of the actions that had a high reward, uh,",
    "start": "2098015",
    "end": "2103400"
  },
  {
    "text": "and place less probability mass on the actions that had low reward. Uh, and so as a result, we'll basically just be making the good stuff,",
    "start": "2103400",
    "end": "2110180"
  },
  {
    "text": "more likely making the stuff that gets bad reward less likely, um, and kind of formalizing this notion of trial and error.",
    "start": "2110180",
    "end": "2117079"
  },
  {
    "text": "You, you try a few things. You do more of the good stuff and less of the bad stuff. [NOISE] Okay.",
    "start": "2117080",
    "end": "2124370"
  },
  {
    "text": "[NOISE] So that's policy gradients. Um, it's pretty easy to combine with things like multitask learning. Uh, it's also pretty to com- pretty easy to combine with things like meta-learning.",
    "start": "2124370",
    "end": "2133250"
  },
  {
    "text": "Uh, so the meta-learning algorithms that we learned such as MAML and black-box meta-learning algorithms,",
    "start": "2133250",
    "end": "2138950"
  },
  {
    "text": "uh, just assume that you can get some gradient, uh, of your objective. And so we can readily apply these to, uh,",
    "start": "2138950",
    "end": "2146735"
  },
  {
    "text": "readily apply, uh, these algorithms to- in combination with policy gradient algorithms.",
    "start": "2146735",
    "end": "2152360"
  },
  {
    "text": "Uh, so, for example, uh, here's a very- toy example of MAML with policy gradients where there's just two tasks.",
    "start": "2152360",
    "end": "2160460"
  },
  {
    "start": "2154000",
    "end": "2245000"
  },
  {
    "text": "One of the tasks is running forward and one of the tasks is running backwards. Uh, so we're not evaluating generalization in, in any way.",
    "start": "2160460",
    "end": "2166234"
  },
  {
    "text": "We're just gonna look at whether or not it can learn to adapt its policy with a single gradient step for one of these two tasks.",
    "start": "2166235",
    "end": "2172880"
  },
  {
    "text": "Um, what we see is first at the end of meta-learning, basically at this point right here at the end of meta-learning,",
    "start": "2172880",
    "end": "2178355"
  },
  {
    "text": "but before taking a [NOISE] gradient step to a- one of the tasks we get a policy that looks like this.",
    "start": "2178355",
    "end": "2184625"
  },
  {
    "text": "Uh, it's running in place, essentially, like, ready to, to run in either of the two directions.",
    "start": "2184625",
    "end": "2189890"
  },
  {
    "text": "[NOISE] And if we then, uh, take one gradient step with respect to the task of",
    "start": "2189890",
    "end": "2195680"
  },
  {
    "text": "running backward- with the reward function of running backward, uh, we get a policy that looks like this.",
    "start": "2195680",
    "end": "2201039"
  },
  {
    "text": "And if we take a single policy gradient step with respect to the reward function of running forward,",
    "start": "2201040",
    "end": "2208989"
  },
  {
    "text": "we get a policy that looks like this. [NOISE] Um, and so,",
    "start": "2208989",
    "end": "2214805"
  },
  {
    "text": "I guess, one of the interesting things that this shows is that, uh, there does exist a representation under which",
    "start": "2214805",
    "end": "2219890"
  },
  {
    "text": "reinforcement learning is very fast and very efficient, um, at least in the context of a few tasks.",
    "start": "2219890",
    "end": "2226715"
  },
  {
    "text": "Uh, and I guess one other thing worth mentioning here is that the policy gradient was evaluated with respect to 20 trajectories,",
    "start": "2226715",
    "end": "2233585"
  },
  {
    "text": "uh, from Pi Theta. Uh, so basically 20 trajectories similar to the video shown on the previous slide.",
    "start": "2233585",
    "end": "2240390"
  },
  {
    "text": "Okay. So this is pretty straightforward. Um, what about black-box methods? Uh, so we can also apply policy gradient to black-box methods.",
    "start": "2241450",
    "end": "2249680"
  },
  {
    "start": "2245000",
    "end": "2726000"
  },
  {
    "text": "What this corresponds to is using, um, some LSTM policy, some policy with memory or recurrence, uh,",
    "start": "2249680",
    "end": "2257555"
  },
  {
    "text": "and training that policy with the policy gradient algorithm or, or, uh, a variant of",
    "start": "2257555",
    "end": "2263210"
  },
  {
    "text": "the policy gradient algorithm that I mentioned on the previous slide. Uh, so, for example,",
    "start": "2263210",
    "end": "2268265"
  },
  {
    "text": "in, uh, this, this previous paper that was actually, uh, presented, uh, a few weeks ago in class, uh,",
    "start": "2268265",
    "end": "2274369"
  },
  {
    "text": "one of the experiments that they looked at was learning to visually navigate a maze. Uh, and so what they did is they trained the algorithm on 1,000 different small",
    "start": "2274370",
    "end": "2283490"
  },
  {
    "text": "mazes and then evaluated the algorithm's ability to learn how to solve new mazes,",
    "start": "2283490",
    "end": "2289220"
  },
  {
    "text": "uh, including both small mazes and large mazes. Uh, and so we can look, uh, at what it does.",
    "start": "2289220",
    "end": "2295670"
  },
  {
    "text": "So here, this is first showing, uh, after meta-learning, uh, the beginning of rolling out the recurrent policy.",
    "start": "2295670",
    "end": "2303005"
  },
  {
    "text": "Uh, so, in this case, it doesn't know the task and it needs to navigate the maze. Uh, and the left is showing the, uh,",
    "start": "2303005",
    "end": "2309380"
  },
  {
    "text": "the agent's point of view and the right is showing the maze. And then after it gets this experience,",
    "start": "2309380",
    "end": "2314404"
  },
  {
    "text": "it then is able to learn how to solve the maze with basically just a single trajectory. Um, so at first,",
    "start": "2314405",
    "end": "2320645"
  },
  {
    "text": "navigate around that maze to explore and then at the end of that episode, [NOISE] the memory of the, uh,",
    "start": "2320645",
    "end": "2327965"
  },
  {
    "text": "of the architecture is not reset, and it- you keep on rolling forward that, that memory- that black-box architecture and it can figure out how to,",
    "start": "2327965",
    "end": "2335900"
  },
  {
    "text": "uh, from there, based on what's stored in memory, how to solve the task. [NOISE] Uh, and they also looked at bigger mazes.",
    "start": "2335900",
    "end": "2342380"
  },
  {
    "text": "So here's an example of it navigating through a bigger maze. At the beginning, it's just exploring. It needs to figure out how to solve the task.",
    "start": "2342380",
    "end": "2348650"
  },
  {
    "text": "Uh, so it explores, um, different parts of the maze. This is one of the,",
    "start": "2348650",
    "end": "2354484"
  },
  {
    "text": "the, um, I guess, both of these examples are successful examples. There's also failure cases.",
    "start": "2354485",
    "end": "2359704"
  },
  {
    "text": "Um, so here's one. In, in this case, after it sees a single trajectory, it's able to very quickly navigate to the goal position. Okay. Yeah.",
    "start": "2359705",
    "end": "2370400"
  },
  {
    "text": "[BACKGROUND].",
    "start": "2370400",
    "end": "2378650"
  },
  {
    "text": "Yeah. So for MAML, the number of, um, the, the inner loop corresponded to 20 trajectories and one grad- one policy gradient step.",
    "start": "2378650",
    "end": "2387830"
  },
  {
    "text": "In this example, the inner loop corresponds to basically like two trajectories,",
    "start": "2387830",
    "end": "2396090"
  },
  {
    "text": "um, where you can basically see the trajectories on the, um, on the thing.",
    "start": "2397570",
    "end": "2403745"
  },
  {
    "text": "So, uh, here's the- this is the first trajectory shown here. And then the second trajectory is when it actually, um,",
    "start": "2403745",
    "end": "2410630"
  },
  {
    "text": "solves the task well. Does that answer your question? [BACKGROUND].",
    "start": "2410630",
    "end": "2416060"
  },
  {
    "text": "This is after meta-learning. Yes. Yeah. So this is the inner loop. [BACKGROUND]. Yeah. And then the outer loop is trained, uh, a lot,",
    "start": "2416060",
    "end": "2422120"
  },
  {
    "text": "uh, for, um, across the different tasks. So this is trained across 1,000 mazes during the meta-training process.",
    "start": "2422120",
    "end": "2430655"
  },
  {
    "text": "Uh, and then- yeah. And it practices a lot for those, uh, mazes. Yeah. [BACKGROUND].",
    "start": "2430655",
    "end": "2440990"
  },
  {
    "text": "Yeah. So in this case, it's just, it's just gets this as input. It doesn't get the, the layout of the maze.",
    "start": "2440990",
    "end": "2446599"
  },
  {
    "text": "Uh, and in the case of the ant example, it just receives like joint angles, uh, and other state information. Yeah.",
    "start": "2446600",
    "end": "2455890"
  },
  {
    "text": "[BACKGROUND]",
    "start": "2455890",
    "end": "2462170"
  },
  {
    "text": "So in both of these examples, after this end of the first trajectory, just- it's- it is reset to the initial position. Does that answer your question?",
    "start": "2462170",
    "end": "2470750"
  },
  {
    "text": "[BACKGROUND] [NOISE] Um, so I think that after it reaches the end,",
    "start": "2470750",
    "end": "2484190"
  },
  {
    "text": "here it is then reset to this position again. We can watch it again one more time if you want to verify it.",
    "start": "2484190",
    "end": "2496580"
  },
  {
    "text": "So he goes to the goal, and then it's respawned right there again. Yeah.",
    "start": "2496580",
    "end": "2504140"
  },
  {
    "text": "[inaudible]. Yeah that's a good question.",
    "start": "2504140",
    "end": "2509569"
  },
  {
    "text": "Um, so I guess as of like last year,",
    "start": "2509570",
    "end": "2517040"
  },
  {
    "text": "I think the- these sorts of maze tasks are probably the most complicated task that I've seen these algorithms do. This year I've seen",
    "start": "2517040",
    "end": "2523145"
  },
  {
    "text": "more complex tasks that these algorithms have been able to learn quickly. Um, ranging from being able to adapt to- learn how to run on",
    "start": "2523145",
    "end": "2531350"
  },
  {
    "text": "an entirely new agent or like simulated robot to, um, solving,",
    "start": "2531350",
    "end": "2537605"
  },
  {
    "text": "uh, like actually settings where the tasks themselves are partially observable, not just the, um, this is,",
    "start": "2537605",
    "end": "2545225"
  },
  {
    "text": "this is also partially observable, but partially observable to a greater degree I guess. Um, and then I've also seen tasks where, um,",
    "start": "2545225",
    "end": "2553400"
  },
  {
    "text": "it's like there are different manipulation tasks and it can generalize to an entirely new manipulation task, like robotic manipulation task.",
    "start": "2553400",
    "end": "2560790"
  },
  {
    "text": "But those are, those all like very, very recent works, but yeah. There are more, more, more better things to come. Yeah.",
    "start": "2562120",
    "end": "2569690"
  },
  {
    "text": "[inaudible].",
    "start": "2569690",
    "end": "2580339"
  },
  {
    "text": "Yeah, so this is a good question. Um, we'll- so we'll cover meta-reinforcement learning in more detail,",
    "start": "2580340",
    "end": "2585890"
  },
  {
    "text": "um, next week on Wednesday when there's going to be a guest lecture by Kate. Er, but one thing that I'll say here is I guess first,",
    "start": "2585890",
    "end": "2594710"
  },
  {
    "text": "one of the things in the reinforcement learning setting we talked about how MAML is very expressive, um, in the supervised learning setting.",
    "start": "2594710",
    "end": "2600590"
  },
  {
    "text": "Um, in the reinforcement learning setting, it's actually not very expressive because, um, because of the policy gradient.",
    "start": "2600590",
    "end": "2607235"
  },
  {
    "text": "Basically, if the reward function is 0 for all of your trajectories then your gradient will always be 0.",
    "start": "2607235",
    "end": "2613849"
  },
  {
    "text": "And so even if it gets lots of rich experience about the environment with zero reward,",
    "start": "2613850",
    "end": "2619160"
  },
  {
    "text": "it can't actually incorporate that experience to update the policy. And this was just one example, there's other examples where the policy gradient isn't very informative.",
    "start": "2619160",
    "end": "2625700"
  },
  {
    "text": "And so as a result, MAML with policy gradients isn't actually very expressive and has, um, well is, is,",
    "start": "2625700",
    "end": "2632120"
  },
  {
    "text": "is yeah is not as good. Um, in general, applying",
    "start": "2632120",
    "end": "2637310"
  },
  {
    "text": "these algorithms to the reinforcement learning setting it's pretty easy to combine with policy gradients. Combining them with methods like Q-learning and",
    "start": "2637310",
    "end": "2643130"
  },
  {
    "text": "actor-critic algorithms is a lot more challenging, and Kate will talk about that certainly a lot during her lecture,",
    "start": "2643130",
    "end": "2649370"
  },
  {
    "text": "um, and some of the challenges that come up there. Um, the biggest thing is that those algorithms aren't,",
    "start": "2649370",
    "end": "2655970"
  },
  {
    "text": "uh, a gradient-based algorithm there are dynamic programming algorithms. So it's hard to combine these things.",
    "start": "2655970",
    "end": "2661025"
  },
  {
    "text": "Yeah, yeah. Er, are this kind of algorithms will have",
    "start": "2661025",
    "end": "2666980"
  },
  {
    "text": "things like curiosity that can be expand on the existing algorithms? Yeah. So curiosity based approach and other exploration methods in general,",
    "start": "2666980",
    "end": "2676685"
  },
  {
    "text": "can certainly be combined like that's just a kind of an objective and you could use that objective as one of your tasks.",
    "start": "2676685",
    "end": "2682040"
  },
  {
    "text": "You can augment all of your tasks without objective, or you could imagine trying to learn exploration strategies like learn curiosity,",
    "start": "2682040",
    "end": "2689345"
  },
  {
    "text": "like learn different forms of curiosity that are particularly effective for a class of tasks or class of environments.",
    "start": "2689345",
    "end": "2695240"
  },
  {
    "text": "Um, and Kate will talk about kind of learning exploration strategies in her lecture next week. Yeah.",
    "start": "2695240",
    "end": "2700730"
  },
  {
    "text": "[inaudible] can you use advantage estimation with value?",
    "start": "2700730",
    "end": "2707555"
  },
  {
    "text": "Advantaged estimation. You mean, uh, GAE Generalized Advantage Estimation. [inaudible]. [NOISE] yeah so, uh,",
    "start": "2707555",
    "end": "2716089"
  },
  {
    "text": "the- I guess there's different-there's different ways.",
    "start": "2716090",
    "end": "2721595"
  },
  {
    "text": "So I guess to, to explain to other people kind of what the question is. So one of the challenges with policy gradients is that,",
    "start": "2721595",
    "end": "2728675"
  },
  {
    "start": "2726000",
    "end": "2956000"
  },
  {
    "text": "uh, the gradient estimate that it gives you is high variance. And one thing that people typically do, uh, to mitigate to,",
    "start": "2728675",
    "end": "2734540"
  },
  {
    "text": "to reduce the variance of this is to use what's called a baseline, um, which corresponds to some- which basically",
    "start": "2734540",
    "end": "2740210"
  },
  {
    "text": "corresponds to something that's subtracted from the reward term here. Er, is gives you an unbiased estimate of this gradient,",
    "start": "2740210",
    "end": "2747230"
  },
  {
    "text": "but that has lower variance. Um, and there are different techniques for estimating that baseline and one of them",
    "start": "2747230",
    "end": "2752510"
  },
  {
    "text": "corresponds to things like generalized advantage estimation and other things. Um, in the original uh,",
    "start": "2752510",
    "end": "2757954"
  },
  {
    "text": "implementation of the MAML algorithm, we used a Monte Carlo estimator for the baseline,",
    "start": "2757955",
    "end": "2764045"
  },
  {
    "text": "uh, rather than a bootstrapped estimator. I think applying a bootstrapped estimator would",
    "start": "2764045",
    "end": "2769550"
  },
  {
    "text": "be like applying MAML to that would be a bit tricky. You could of course always do it from scratch on, on your batch of data,",
    "start": "2769550",
    "end": "2775835"
  },
  {
    "text": "but applying MAML to it is little bit tricky because- just because of how- because bootstrapping isn't a gradient based algorithm,",
    "start": "2775835",
    "end": "2782180"
  },
  {
    "text": "it's a dynamic programming algorithm. [inaudible].",
    "start": "2782180",
    "end": "2787280"
  },
  {
    "text": "Yeah, it's hard. Okay. So some of the pros of policy gradients,",
    "start": "2787280",
    "end": "2796885"
  },
  {
    "text": "um, to recap is that it's very simple. I gives you-kind of just gives you a gradient of your policy which is very nice.",
    "start": "2796885",
    "end": "2803040"
  },
  {
    "text": "Um, it's also very easy to combine with existing multitask algorithms and meta-learning algorithms as we saw in the last couple of slides.",
    "start": "2803040",
    "end": "2810035"
  },
  {
    "text": "Um, the downsides is that first it produces a high variance gradient, um, and this can be mitigated with baselines.",
    "start": "2810035",
    "end": "2816485"
  },
  {
    "text": "Um, and baselines are basically used by all algorithms in practice. I don't have time to cover them, um,",
    "start": "2816485",
    "end": "2822500"
  },
  {
    "text": "in this lecture but uh, feel free to come to office hours if you're interested in learning more. It can also be mitigated with trust regions,",
    "start": "2822500",
    "end": "2828589"
  },
  {
    "text": "um, with which people have also used uh, and both- both MAML and the black-box methods we're using",
    "start": "2828590",
    "end": "2833809"
  },
  {
    "text": "both baselines and trust regions in the optimization to, um, make things more stable and, uh, more effective.",
    "start": "2833810",
    "end": "2842990"
  },
  {
    "text": "The other downside of policy gradient algorithms is that it requires on policy data. Um, and in particular the way that",
    "start": "2842990",
    "end": "2850850"
  },
  {
    "text": "you can see this as you can see that this expectation is with respect, respect to pi Theta, and pi Theta is your current policy.",
    "start": "2850850",
    "end": "2857570"
  },
  {
    "text": "So in order to improve your policy, you need data from your current policy. [NOISE] Um, and this is really important because this means",
    "start": "2857570",
    "end": "2867050"
  },
  {
    "text": "that you can't reuse any data from your previous policies to estimate- to try and improve your policy.",
    "start": "2867050",
    "end": "2873440"
  },
  {
    "text": "Um, it also means you can't reuse data from other tasks or from, from, from other things basically.",
    "start": "2873440",
    "end": "2878705"
  },
  {
    "text": "Uh, and this is-this is really challenging. As a result these algorithms tend to be less sample efficient, than, um,",
    "start": "2878705",
    "end": "2886490"
  },
  {
    "text": "algorithms that are able to reuse data, um, from previous policies, uh, from, from other experience etc.",
    "start": "2886490",
    "end": "2893300"
  },
  {
    "text": "Things like importance weighting can help with this. Uh, so you can basically add, add a weight that, um,",
    "start": "2893300",
    "end": "2900065"
  },
  {
    "text": "corresponds to the ratio between the policy- between your current policy, and the policy that you collected data with.",
    "start": "2900065",
    "end": "2908765"
  },
  {
    "text": "Um, but these importance weights also tend to give you high variance especially when those two policies are very different.",
    "start": "2908765",
    "end": "2915170"
  },
  {
    "text": "Okay. Cool. So now that we've talked about policy gradients,",
    "start": "2915170",
    "end": "2922204"
  },
  {
    "text": "um, let's talk about value-based reinforcement learning. Ah, and in particular, the, ah, the benefit of value-based RL is that, ah,",
    "start": "2922205",
    "end": "2929420"
  },
  {
    "text": "first they, um, they tend to be lower variance, ah, by introducing some amount of bias and they, um,",
    "start": "2929420",
    "end": "2938585"
  },
  {
    "text": "can use off-policy data which is the, the bigger- which is like a really, ah, important thing if you care about reusing data and being sample efficient.",
    "start": "2938585",
    "end": "2946110"
  },
  {
    "text": "Okay. Um, so for your very brief overview of these algorithms for those of you who,",
    "start": "2946120",
    "end": "2951500"
  },
  {
    "text": "ah, are a little bit rusty so a value function, ah- first let's go over some definitions. So a value function corresponds to the total reward that you will",
    "start": "2951500",
    "end": "2960380"
  },
  {
    "start": "2956000",
    "end": "3134000"
  },
  {
    "text": "achieve starting from state S and following some policy pi. Ah, so this is the function of both the policy and your current state.",
    "start": "2960380",
    "end": "2969859"
  },
  {
    "text": "And a Q function, oh in- and this kinda captures how good is a state basically,",
    "start": "2969860",
    "end": "2975260"
  },
  {
    "text": "how valuable is that state. And a Q function corresponds to the same thing as a value function but, ah,",
    "start": "2975260",
    "end": "2981440"
  },
  {
    "text": "the total reward starting from state S, taking action A and from there, following pi.",
    "start": "2981440",
    "end": "2987380"
  },
  {
    "text": "Ah, so the A that passed as input is a parameter and it does not depend on the policy pi.",
    "start": "2987380",
    "end": "2994394"
  },
  {
    "text": "Ah, and this is basically telling you how good is a state action pair. Ah, both of these things are very closely related so as I alluded to,",
    "start": "2994395",
    "end": "3003190"
  },
  {
    "text": "the value function corresponds to, ah, an expectation over action- the value function of our current policy corresponds to expectation under a policy",
    "start": "3003190",
    "end": "3010735"
  },
  {
    "text": "of Q of the state as input and the pol- the action sample from your policy.",
    "start": "3010735",
    "end": "3016840"
  },
  {
    "text": "And one other thing that's really nice about your Q function is that, if you know the Q function for your current policy,",
    "start": "3016840",
    "end": "3022990"
  },
  {
    "text": "you can use it to improve your policy. Ah, so for example, ah, one very naive way to see this is that if you just set, ah,",
    "start": "3022990",
    "end": "3030295"
  },
  {
    "text": "the probability of taking an action for your current state to one for every action that is the max of,",
    "start": "3030295",
    "end": "3038260"
  },
  {
    "text": "ah, the arg max of the Q-value, ah, this is just gonna increase the probability of taking actions that have maximum Q values",
    "start": "3038260",
    "end": "3046465"
  },
  {
    "text": "then the new policy resulting from this will be at least as good as the old policy,",
    "start": "3046465",
    "end": "3051610"
  },
  {
    "text": "ah, and typically better. Okay. Um, so the goal value-based RL is to- to learn these um,",
    "start": "3051610",
    "end": "3061060"
  },
  {
    "text": "to learn at least the Q function. Ah, and then use that Q function to perform the task or to perform,",
    "start": "3061060",
    "end": "3067150"
  },
  {
    "text": "um, in order to learn a policy. Ah, and one kind of critical identity that's important for these types of algorithms,",
    "start": "3067150",
    "end": "3074815"
  },
  {
    "text": "is noting that for the optimal policy, ah, we have this equality that is satisfied.",
    "start": "3074815",
    "end": "3080620"
  },
  {
    "text": "So we know that the Q function for the optimal policy is equal to, ah,",
    "start": "3080620",
    "end": "3086290"
  },
  {
    "text": "the expectation of states visited under the dynamics of the reward function plus, ah,",
    "start": "3086290",
    "end": "3093640"
  },
  {
    "text": "Gamma times the max of actions of the next Q function, where Gamma here is representing some discount factor.",
    "start": "3093640",
    "end": "3102020"
  },
  {
    "text": "Ah, the way that you can see this, ah, is that, ah, basically if you take a reward and then, ah, if,",
    "start": "3102090",
    "end": "3108625"
  },
  {
    "text": "if at the current timestep you observe some reward and then, ah, you know, kind of the- the- kind of the reward in the future for the best action.",
    "start": "3108625",
    "end": "3116724"
  },
  {
    "text": "Um, that's gonna equal the best- ah, the best, ah, value from your current state and current action.",
    "start": "3116725",
    "end": "3124105"
  },
  {
    "text": "Ah, and this is what's known as the Bellman equation. Okay. So we can use this Bellman equation to, ah, learn a Q function.",
    "start": "3124105",
    "end": "3133600"
  },
  {
    "text": "So, um, what this looks like is, ah, this is one example of a- of an algorithm that's called fitted Q-iteration.",
    "start": "3133600",
    "end": "3141730"
  },
  {
    "start": "3134000",
    "end": "3373000"
  },
  {
    "text": "Um, what this looks like is you first, ah, collect a dataset using some policy,",
    "start": "3141730",
    "end": "3147490"
  },
  {
    "text": "ah, and the hyper parameters corresponding to this sort of the dataset size and the,",
    "start": "3147490",
    "end": "3152935"
  },
  {
    "text": "the policy that you use for data collection. Ah, you can then set, ah, the reward plus the max Q as, ah,",
    "start": "3152935",
    "end": "3161665"
  },
  {
    "text": "some target label and then improve your policy,",
    "start": "3161665",
    "end": "3167020"
  },
  {
    "text": "ah, to try to match those target values. So you're essentially trying to, ah,",
    "start": "3167020",
    "end": "3173485"
  },
  {
    "text": "run a dynamic programming algorithm that leads to the Bellman equation holding for your Q function.",
    "start": "3173485",
    "end": "3180980"
  },
  {
    "text": "Ah, and so for example if your Q function is represented, ah, has parameters phi, ah,",
    "start": "3181110",
    "end": "3187030"
  },
  {
    "text": "that might be some neural network that takes this input, the state and action and outputs the Q value, a scalar value for that state and action.",
    "start": "3187030",
    "end": "3194260"
  },
  {
    "text": "Um, another way to parameterize this indiscreet action case is, if you just pass in the state, ah,",
    "start": "3194260",
    "end": "3199570"
  },
  {
    "text": "and then output the Q value for each of the actions correspond- for- for that state.",
    "start": "3199570",
    "end": "3204940"
  },
  {
    "text": "Ah, that's, that's often used in practice. Ah, and the other hyperparameter values that uh,",
    "start": "3204940",
    "end": "3210025"
  },
  {
    "text": "that you have in this algorithm correspond to, ah, the number of gradient steps you take, ah, and the number of iterations that you perform this for.",
    "start": "3210025",
    "end": "3218515"
  },
  {
    "text": "So in practice, you're gonna be iterating between collecting your dataset, computing your, your target values,",
    "start": "3218515",
    "end": "3223765"
  },
  {
    "text": "trying to fit your Q function to those target values and then iteratively, ah, fitting your Q function and also recollecting your dataset.",
    "start": "3223765",
    "end": "3233329"
  },
  {
    "text": "Okay. And then the result of this procedure is that you get- you can get a policy by simply taking the argmax of your Q function for a given state.",
    "start": "3234390",
    "end": "3244375"
  },
  {
    "text": "So take the actions and the current state that maximize your future reward or your future returns.",
    "start": "3244375",
    "end": "3250099"
  },
  {
    "text": "Okay. So this is a, er, a, ah, Q-learning style, style algorithm.",
    "start": "3250470",
    "end": "3255520"
  },
  {
    "text": "Um, some important notes here. Ah, first, we can reuse data from previous policies.",
    "start": "3255520",
    "end": "3261070"
  },
  {
    "text": "So this doesn't make any assumptions about the underlying, ah, algorithm. There's no expectations with respect to pi Theta,",
    "start": "3261070",
    "end": "3269065"
  },
  {
    "text": "um, in, in any of this. Ah, and so as a result, it's what's called an off policy",
    "start": "3269065",
    "end": "3274720"
  },
  {
    "text": "algorithm because it can use off policy data, ah, and as a result, you can use, ah, replay buffers.",
    "start": "3274720",
    "end": "3280840"
  },
  {
    "text": "So you can store data. It can aggregate data across all of your experience into a single replay buffer and, ah,",
    "start": "3280840",
    "end": "3287050"
  },
  {
    "text": "when computing this update, you can load from your replay buffer, ah, any kind of- any sorts of data.",
    "start": "3287050",
    "end": "3293230"
  },
  {
    "text": "And this allows you to, ah, one, kinda keep on aggregating data and reusing that data and two,",
    "start": "3293230",
    "end": "3299365"
  },
  {
    "text": "uh, get more data that is, ah, decorrelated. So if you just, ah, kind of get some data online and make updates,",
    "start": "3299365",
    "end": "3306655"
  },
  {
    "text": "you'll have a very correlated data which will result in uh, poor performance.",
    "start": "3306655",
    "end": "3312080"
  },
  {
    "text": "Okay. Another thing to note, ah, as I mentioned before is that this is not a gradient descent algorithm.",
    "start": "3312450",
    "end": "3317455"
  },
  {
    "text": "This is a dynamic programming algorithm. You can see that by, ah, the fact that this, um,",
    "start": "3317455",
    "end": "3322870"
  },
  {
    "text": "this update affects the targets at the next value right here. Ah, and as a result,",
    "start": "3322870",
    "end": "3329319"
  },
  {
    "text": "it's tricky to kind of combine this approach with things like MAML, um, and, and even black-box methods in practice.",
    "start": "3329320",
    "end": "3337464"
  },
  {
    "text": "Um, but it is relatively easy to combine with algorithms like multitask learn- learning algorithms",
    "start": "3337465",
    "end": "3343900"
  },
  {
    "text": "and goal condition learning algorithms by simply conditioning your Q function or your policy on the task identifier or the goal.",
    "start": "3343900",
    "end": "3352970"
  },
  {
    "text": "Okay. Um, so let's talk about Multi-task Q-learning.",
    "start": "3354480",
    "end": "3361720"
  },
  {
    "text": "Any questions on kind of the setup for Q-learning before I move on?",
    "start": "3361720",
    "end": "3366290"
  },
  {
    "text": "Okay. So, um, for Multi-task RL we can just,",
    "start": "3368300",
    "end": "3374565"
  },
  {
    "start": "3373000",
    "end": "3480000"
  },
  {
    "text": "kind of take our policy and condition it on some task identifier likewise for our Q-function.",
    "start": "3374565",
    "end": "3380310"
  },
  {
    "text": "Um, and in each of these cases, I'm using- again using S bar to denote the kind of original state space.",
    "start": "3380310",
    "end": "3386400"
  },
  {
    "text": "where the, the kind of- the, the new augmented state corresponds to the original state space and the task identifier.",
    "start": "3386400",
    "end": "3392325"
  },
  {
    "text": "In analogous to multi-task learning, we can use a lot of things that we've learned about before, like stratified sampling, like hard and soft weight sharing,",
    "start": "3392325",
    "end": "3402060"
  },
  {
    "text": "other architectural changes, etc. So this is quite nice. Uh, we can reuse",
    "start": "3402060",
    "end": "3408630"
  },
  {
    "text": "the things that we've learned across supervised learning and reinforcement learning, uh, now, what's different.",
    "start": "3408630",
    "end": "3414345"
  },
  {
    "text": "So there are some things that are different that- about reinforcement learning that we talked about at the very beginning of the lecture that affects the algorithm choices that we make.",
    "start": "3414345",
    "end": "3423765"
  },
  {
    "text": "So the first thing that's different is that the data distribution is controlled by the agent, it's no longer just given to us.",
    "start": "3423765",
    "end": "3430725"
  },
  {
    "text": "Uh, and so one of the things we can think about is can we reuse- can we think about how, how should we explore data in a way that's effective for",
    "start": "3430725",
    "end": "3437850"
  },
  {
    "text": "multiple tasks and also can we think about not just weight sharing but also data sharing across tasks and how should when we collect a batch of data,",
    "start": "3437850",
    "end": "3445484"
  },
  {
    "text": "how should we choose to share that data across the tasks?",
    "start": "3445485",
    "end": "3449890"
  },
  {
    "text": "And second, you may also know what aspects of the MDP are changing within your task distribution,",
    "start": "3451850",
    "end": "3458550"
  },
  {
    "text": "and if you know this you can actually leverage this knowledge in certain ways in your algorithm choice by making assumptions about whether",
    "start": "3458550",
    "end": "3466050"
  },
  {
    "text": "or not one aspect of the MDP is going to be changing across tasks. Okay. Um, so let's think about an example",
    "start": "3466050",
    "end": "3475590"
  },
  {
    "text": "for thinking about how we can- how we might wanna go about sharing data or leveraging this sort of information. Um, so say we are playing hockey, uh,",
    "start": "3475590",
    "end": "3484275"
  },
  {
    "start": "3480000",
    "end": "4642000"
  },
  {
    "text": "and we have some, uh, some of our teammates and some of our opponents,",
    "start": "3484275",
    "end": "3489839"
  },
  {
    "text": "uh, and we may wanna be trying to practice different tasks. Uh, so we may want to be able to practice passing the puck from,",
    "start": "3489840",
    "end": "3497760"
  },
  {
    "text": "uh, from yourself to your teammate, and you may also wanna be able to practice shooting goals.",
    "start": "3497760",
    "end": "3502990"
  },
  {
    "text": "Now, if you're considering this multitask learning problem, uh,",
    "start": "3503030",
    "end": "3508755"
  },
  {
    "text": "what if during practice you accidentally perform a very good pass to your,",
    "start": "3508755",
    "end": "3514680"
  },
  {
    "text": "uh, to your teammate when you're trying to shoot a goal?",
    "start": "3514680",
    "end": "3519099"
  },
  {
    "text": "Well, this happens, uh, it makes sense, of course, the story or experience is normal but you can also take that experience and say,",
    "start": "3520300",
    "end": "3528260"
  },
  {
    "text": "\"Well, okay even though I was trying to shoot a goal, I don't need to just use that for shooting a goal. I could also say, okay,",
    "start": "3528260",
    "end": "3533470"
  },
  {
    "text": "in hindsight if I was doing task two, that would've been great. I would've gotten a ve- a kind of a very high reward for that task,\" right?",
    "start": "3533470",
    "end": "3541530"
  },
  {
    "text": "And so you can relabel that experience with the task to identifier, and with the reward function for that task and store that data for that task.",
    "start": "3541530",
    "end": "3552070"
  },
  {
    "text": "Okay, so this is something that's known as hindsight relabeling which is that, in hindsight, you can kind of take some experience that you collected with the intention of one task,",
    "start": "3553070",
    "end": "3560955"
  },
  {
    "text": "relabel it for another task and use that in learning the other task.",
    "start": "3560955",
    "end": "3566710"
  },
  {
    "text": "Okay, it's also referred to sometimes as hindsight experience replay as well or HER.",
    "start": "3568280",
    "end": "3573340"
  },
  {
    "text": "Okay. So what does this actually formally look like? So we can look- imagine a goal condition RL setting and first we're collecting",
    "start": "3573560",
    "end": "3581790"
  },
  {
    "text": "some data using some policy as in the kind of standard of policy reinforcement learning setting.",
    "start": "3581790",
    "end": "3587940"
  },
  {
    "text": "Then we of course store the data in a replay buffer. Uh, and then we perform hindsight relabeling.",
    "start": "3587940",
    "end": "3594569"
  },
  {
    "text": "So what we can do is we can take, uh- we can relabel the experience that we just collected but take",
    "start": "3594570",
    "end": "3601440"
  },
  {
    "text": "the last state that we actually reached and imagine that that was actually the goal for that task.",
    "start": "3601440",
    "end": "3606510"
  },
  {
    "text": "So we can replace the, um, replace the goal that you're trying to achieve in that task with",
    "start": "3606510",
    "end": "3612030"
  },
  {
    "text": "the goal that you actually achieved and replace the reward function with the distance between",
    "start": "3612030",
    "end": "3617715"
  },
  {
    "text": "the current state and that new hindsight goal,",
    "start": "3617715",
    "end": "3622450"
  },
  {
    "text": "and then once you have this relabeled experience you can then store that in your replay buffer as well.",
    "start": "3623510",
    "end": "3630315"
  },
  {
    "text": "Uh, and then, of course, update your policy using your replay buffer and repeat.",
    "start": "3630315",
    "end": "3636280"
  },
  {
    "text": "Okay. Cool. So what about other relabeling strategies?",
    "start": "3637070",
    "end": "3643065"
  },
  {
    "text": "So what this relabeling strategy used the last goal as input, as a, as a thing that we're-",
    "start": "3643065",
    "end": "3648750"
  },
  {
    "text": "the last state as the thing that we're gonna re- relabel as the goal. You can also use really any state from the trajectory,",
    "start": "3648750",
    "end": "3653940"
  },
  {
    "text": "uh, and these are also states that were reached. Um, in general, you could, you could choose, uh,",
    "start": "3653940",
    "end": "3659525"
  },
  {
    "text": "any potential state, uh, to relabel with although in practice one of the things that's really nice about, uh,",
    "start": "3659525",
    "end": "3666244"
  },
  {
    "text": "relabeling with the state that you actually reached is that it can alleviate, uh, it can alleviate a lot of the,",
    "start": "3666245",
    "end": "3672840"
  },
  {
    "text": "um, a lot of the exploitation challenges. So, uh, if you're exploring for- in",
    "start": "3672840",
    "end": "3677910"
  },
  {
    "text": "the context of one task versus in the context of many tasks, if you accidentally solve one task when trying to perform the other tasks then",
    "start": "3677910",
    "end": "3685609"
  },
  {
    "text": "you've already- then you've solved exploration problem for that task.",
    "start": "3685610",
    "end": "3690620"
  },
  {
    "text": "Uh, this can also kind of bootstrap the kind of- it allows you to kind of bootstrap the learning process.",
    "start": "3690620",
    "end": "3697410"
  },
  {
    "text": "Okay. Any questions on how this works?",
    "start": "3697810",
    "end": "3702910"
  },
  {
    "text": "So we can generalize this also to the multitask RL setting, um, and this is kind of similar to the setting that we showed,",
    "start": "3705020",
    "end": "3712455"
  },
  {
    "text": "uh, in the example. So the way this looks like is we use- uh, in this case, we just have a- we collect data, in this case,",
    "start": "3712455",
    "end": "3719609"
  },
  {
    "text": "the data core has a task identifier rather than a goal state. Um, sort of that data, we relabel by,",
    "start": "3719610",
    "end": "3727365"
  },
  {
    "text": "um, for- by selecting some task J. Replacing the task identifier with the task identifier for task J and",
    "start": "3727365",
    "end": "3734040"
  },
  {
    "text": "then replacing the reward function with the rewards of, sorry, that should be- the negative shouldn't be there.",
    "start": "3734040",
    "end": "3740040"
  },
  {
    "text": "But bas- replacing it with a reward function for task J of the corresponding state,",
    "start": "3740040",
    "end": "3745110"
  },
  {
    "text": "and then storing the relabeled data, updating the policy and repeating.",
    "start": "3745110",
    "end": "3750135"
  },
  {
    "text": "Um, another question that comes up here similar to the last slide is what tasks should we choose to relabel with?",
    "start": "3750135",
    "end": "3755730"
  },
  {
    "text": "Um, you choose randomly, uh, but one good choice in terms of exploration is you could",
    "start": "3755730",
    "end": "3762090"
  },
  {
    "text": "choose tasks in which the trajectory achieves high reward. Uh, and that will help you,",
    "start": "3762090",
    "end": "3767475"
  },
  {
    "text": "uh, those are tasks that, that solve the exploration problem to some degree for, um, those tasks. Yep?",
    "start": "3767475",
    "end": "3774660"
  },
  {
    "text": "So is there a special way to handle hindsight experience replay when the, when the dimensionality of the state space is really high?",
    "start": "3774660",
    "end": "3781155"
  },
  {
    "text": "Yeah. Um, we'll talk about that in a few slides. Yeah?",
    "start": "3781155",
    "end": "3786750"
  },
  {
    "text": "[inaudible] based on a particular state [inaudible] reward functions we use.",
    "start": "3786750",
    "end": "3793440"
  },
  {
    "text": "So given the, the task [BACKGROUND] [inaudible] different task?",
    "start": "3793440",
    "end": "3799450"
  },
  {
    "text": "Um, could you repeat the question? So the R function like [inaudible] is that,",
    "start": "3799550",
    "end": "3808980"
  },
  {
    "text": "like, depend on what task we are doing like is that sort of like, the, um, [inaudible] we're doing this task so the reward function B is for the state",
    "start": "3808980",
    "end": "3817500"
  },
  {
    "text": "and then for the task there should be something else or is it kind of independent from the tasks?",
    "start": "3817500",
    "end": "3823905"
  },
  {
    "text": "Yeah. So if you initially collected the re- the dat- um, if you initially collected the data for task I,",
    "start": "3823905",
    "end": "3830355"
  },
  {
    "text": "you will get reward labels for task I and then if you want to relabel for task J,",
    "start": "3830355",
    "end": "3835650"
  },
  {
    "text": "here, then you, you, you wanna kind of replace the reward function in that because of experience",
    "start": "3835650",
    "end": "3840915"
  },
  {
    "text": "with rewards that would correspond to task J. Does that answer your question?",
    "start": "3840915",
    "end": "3847440"
  },
  {
    "text": "[inaudible]. Okay. Um, now, you can't always apply this trick.",
    "start": "3847440",
    "end": "3854130"
  },
  {
    "text": "Uh, so you can apply relabeling when the form of the reward function is known, uh, this is and evalutable.",
    "start": "3854130",
    "end": "3861075"
  },
  {
    "text": "If you can't evaluate the reward function in all possible contexts or it's expensive to evaluate the reward function, like if it,",
    "start": "3861075",
    "end": "3866460"
  },
  {
    "text": "if it requires asking a human, for example, it may be a bit trickier to do this.",
    "start": "3866460",
    "end": "3873195"
  },
  {
    "text": "Uh, it also requires that the dynamics be consistent across goals or tasks that you relabel for.",
    "start": "3873195",
    "end": "3878730"
  },
  {
    "text": "Um, if they're not consistent, then, uh, when you have two poles corresponding to state action and next state.",
    "start": "3878730",
    "end": "3885945"
  },
  {
    "text": "Those two poles will not- will no longer be dynamically consistent and the resulting policy you get will have data",
    "start": "3885945",
    "end": "3892095"
  },
  {
    "text": "that corresponds to different dynamics that isn't accurate. This is kind of one example of exploiting the knowledge that we may know that the,",
    "start": "3892095",
    "end": "3900285"
  },
  {
    "text": "the dynamics may be the same across tasks, um, and you also need to be using an off-policy algorithm with",
    "start": "3900285",
    "end": "3906870"
  },
  {
    "text": "an asterisk that I believe that there are some people that have looked at applying this on non-policy settings. Um, but basically, uh,",
    "start": "3906870",
    "end": "3912960"
  },
  {
    "text": "if we're going to be relabeling experience for this task, uh, and storing this in a replay buffer like we don't have the, um,",
    "start": "3912960",
    "end": "3918855"
  },
  {
    "text": "we don't necessarily have the policy that, uh, that collected, um, this experience,",
    "start": "3918855",
    "end": "3925785"
  },
  {
    "text": "uh, when it was passed in a particular goal state. Yeah? So in this case, when you have some data K and you come up with or,",
    "start": "3925785",
    "end": "3934485"
  },
  {
    "text": "or you choose a task whose traj- trajectories were [inaudible] that doesn't work.",
    "start": "3934485",
    "end": "3939810"
  },
  {
    "text": "Is there any reason to come up with multiple tasks because they're- on the right theory asks which task to choose.",
    "start": "3939810",
    "end": "3946755"
  },
  {
    "text": "Could you say that let's come up with a few different ones [NOISE] and relabel multiply- multiple times or is it enough - [OVERLAPPING]",
    "start": "3946755",
    "end": "3955349"
  },
  {
    "text": "Yeah. So I'm- maybe I'm not sur- maybe one answer to your question, you can tell me if it answers your question or not is this is I",
    "start": "3955350",
    "end": "3962880"
  },
  {
    "text": "guess is- when I was making this slide I was assuming that you would have an initial set of tasks that you cared about. There may also be a setting where you just have one task that you care about and you want",
    "start": "3962880",
    "end": "3970730"
  },
  {
    "text": "to leverage other tasks to improve the learning for that task, and in that setting,",
    "start": "3970730",
    "end": "3976484"
  },
  {
    "text": "it is important to think about, \"Well, what can we construct other like auxiliary tasks [OVERLAPPING] for improving? \" Um,",
    "start": "3976485",
    "end": "3982260"
  },
  {
    "text": "and that will be something that is discussed a bit actually on Wednesday in the paper presentations. Yeah?",
    "start": "3982260",
    "end": "3990480"
  },
  {
    "text": "Um, I think I had this similar thing I was thinking about, like why not, um, why not like,",
    "start": "3990480",
    "end": "3997800"
  },
  {
    "text": "um, like why do we only take one task to relabel. Why not like duplicate the data for each task, uh, [inaudible].",
    "start": "3997800",
    "end": "4006200"
  },
  {
    "text": "Yeah. So you can certainly basically choose tasks at, um, at random and, and orders like choose all the tasks essentially, um,",
    "start": "4006200",
    "end": "4015720"
  },
  {
    "text": "and that, yeah- you could certainly do that, uh, and then like you could essentially view this version like tasks when the",
    "start": "4015720",
    "end": "4022940"
  },
  {
    "text": "structure gets reward as a form of that where you just relabel all of them and then when you sample data from your replay buffer,",
    "start": "4022940",
    "end": "4028849"
  },
  {
    "text": "you prioritize it to include data that where, in which you get high reward, for example. So yeah. You could, you could definitely do that",
    "start": "4028850",
    "end": "4035060"
  },
  {
    "text": "and then think about how you might prioritize later. One downside of doing that is you do have to prioritize potentially or,",
    "start": "4035060",
    "end": "4042050"
  },
  {
    "text": "uh, I guess it kind of depends on the setting but yeah, typically, if you did that, you'd probably want to prioritize so that you're not getting",
    "start": "4042050",
    "end": "4048500"
  },
  {
    "text": "a ton of data that you just have zero reward because your policy was attempting completely different things.",
    "start": "4048500",
    "end": "4053279"
  },
  {
    "text": "Okay, so we just- we can just look at one kind of quick empirical example of what this looks like in practice.",
    "start": "4057830",
    "end": "4063090"
  },
  {
    "text": "So, um, [NOISE] the paper from 2017 was looking at this, uh, goal conditioned RL in the context of",
    "start": "4063090",
    "end": "4069569"
  },
  {
    "text": "simulated robotic manipulation where there are tasks such as pushing shown in the top row,",
    "start": "4069570",
    "end": "4074865"
  },
  {
    "text": "sliding shown in the middle row, and pick-and-place shown in the, um, in the bottom row.",
    "start": "4074865",
    "end": "4081615"
  },
  {
    "text": "I'm- I was looking at this now, I'm not sure what the difference between pushing and sliding is. Uh, but maybe- maybe that's the kind of details that are on the paper.",
    "start": "4081615",
    "end": "4090540"
  },
  {
    "text": "And empirically, if you look at it without relabeling versus with relabeling, um, the two could er, eh,",
    "start": "4090540",
    "end": "4096075"
  },
  {
    "text": "value-based RL method called DDPG. The green, uh, and dashed red lines show, uh,",
    "start": "4096075",
    "end": "4104055"
  },
  {
    "text": "show DDPG without relabeling, and the red and blue lines show with relabeling with two different relabeling strategies.",
    "start": "4104055",
    "end": "4111690"
  },
  {
    "text": "Uh, you can see that in- in these settings, relabeling significantly improves performance,",
    "start": "4111690",
    "end": "4116924"
  },
  {
    "text": "uh, likely mostly because of an exploration challenge. So you see that in the pushing example and in the pick-and-place example,",
    "start": "4116925",
    "end": "4123540"
  },
  {
    "text": "the individual DDPG is basically getting that reward, uh, which means that it's having trouble actually finding any rewards.",
    "start": "4123540",
    "end": "4129914"
  },
  {
    "text": "And- so this approach is helping it find rewards for some- for certain goals, um, by essentially amortizing exploration across the different tasks.",
    "start": "4129915",
    "end": "4138520"
  },
  {
    "text": "Okay. Cool. Um, and then since we have a bit more time,",
    "start": "4139220",
    "end": "4146009"
  },
  {
    "text": "uh, we can talk a bit about image observations which is, uh, one of the questions I asked, uh, before. So one of the things that's- that's important in the goal condition",
    "start": "4146010",
    "end": "4155310"
  },
  {
    "text": "are offsetting is you need this distance function that tells you how far you are from your state, and this is- this corresponds to your reward function.",
    "start": "4155310",
    "end": "4162240"
  },
  {
    "text": "But when you have image observations, you don't have good distance functions for images in general.",
    "start": "4162240",
    "end": "4167535"
  },
  {
    "text": "Uh, things like- like LT distance don't work very well. Uh, and so one thing you could imagine doing is well what if you have a binary reward function.",
    "start": "4167535",
    "end": "4175079"
  },
  {
    "text": "That basically, it's just 1 if the two images are identical and 0 otherwise. [NOISE] Um, this will be accurate,",
    "start": "4175080",
    "end": "4182100"
  },
  {
    "text": "uh, but of course it will be very sparse. Um, but there- there are things that- even though it's sparse,",
    "start": "4182100",
    "end": "4187350"
  },
  {
    "text": "there are things that we can do with it. Uh, and things that we can- ways that we can use this for, uh, effective learning.",
    "start": "4187350",
    "end": "4194505"
  },
  {
    "text": "And in particular, one of the things that we can observe is that under the sparse binary reward function,",
    "start": "4194505",
    "end": "4200700"
  },
  {
    "text": "we know that random interaction that's unlabeled, uh,",
    "start": "4200700",
    "end": "4206395"
  },
  {
    "text": "is actually optimal- if your goal function is to reach the last state, at the last time step.",
    "start": "4206395",
    "end": "4213994"
  },
  {
    "text": "So for example, if you have some agent that's randomly you kind of, ah, exploring in the world, you can say that, \"Okay.",
    "start": "4213995",
    "end": "4220470"
  },
  {
    "text": "This is optimal with all we care about is reaching here at the last time step.\" We don't care about any of the other time steps and how we got there.",
    "start": "4220470",
    "end": "4228970"
  },
  {
    "text": "Uh, and so there are things that you can do to actually, uh, you can kind of leverage this insight, uh, with a couple of different algorithms.",
    "start": "4229010",
    "end": "4236280"
  },
  {
    "text": "So, um, the first thing you can do with this- uh, first of all, it's- it's easier to deal with",
    "start": "4236280",
    "end": "4241980"
  },
  {
    "text": "image observations because we can use a 0/1 reward function. Um, the first thing you could do is you can use it for better learning.",
    "start": "4241980",
    "end": "4248880"
  },
  {
    "text": "So if you know the data is optimal with respect to that reward function, what if we just use supervised imitation learning on that data.",
    "start": "4248880",
    "end": "4255120"
  },
  {
    "text": "Um, so in imitation learning we typically assume that we have optimal demonstrations. Uh, here, if that's our reward function,",
    "start": "4255120",
    "end": "4262245"
  },
  {
    "text": "this- these random interactions for goal conditioned RL correspond to optimal behavior.",
    "start": "4262245",
    "end": "4267375"
  },
  {
    "text": "And so what we could do is we can collect data from- from some policy, perform hindsight relabeling where we use the last date as the goal in hindsight,",
    "start": "4267375",
    "end": "4277035"
  },
  {
    "text": "store the relabeled data in some replay buffer, and then update your policy just using supervised imitation learning",
    "start": "4277035",
    "end": "4283094"
  },
  {
    "text": "conditioned on the relabeled goal on your replay buffer. Um, so it turns out you can- you can do",
    "start": "4283095",
    "end": "4291120"
  },
  {
    "text": "this and actually does decently well in a number of domains. Um, one, uh, paper that did this,",
    "start": "4291120",
    "end": "4298020"
  },
  {
    "text": "uh, the way they collected data was actually, uh, by using data from a human that was kind of interacting in, uh,",
    "start": "4298020",
    "end": "4305085"
  },
  {
    "text": "not completely random ways but in more directive ways but still in, uh, less optimal ways as you might think.",
    "start": "4305085",
    "end": "4311580"
  },
  {
    "text": "So they collected data from human play, uh, and performed goal condition imitation learning on this data.",
    "start": "4311580",
    "end": "4317699"
  },
  {
    "text": "Uh, so here is, uh, an example of the- the play data, so this is just a hu- human doing a bunch of",
    "start": "4317700",
    "end": "4323490"
  },
  {
    "text": "random stuff in this ex- environment in virtual reality. Uh, and this data- there's no reward functions in this data or anything.",
    "start": "4323490",
    "end": "4333345"
  },
  {
    "text": "Uh, that way, what you can do is you can take some, uh, one of the kind of states in this thing. Uh, you can train, uh, a goal conditioned function,",
    "start": "4333345",
    "end": "4340110"
  },
  {
    "text": "basically, a policy that takes as input a goal image, and the current image, and regresses to the actions that the human took for different windows of this data.",
    "start": "4340110",
    "end": "4347550"
  },
  {
    "text": "Uh, and as a result, you get a policy that looks like the bottom rate, um, that is able to reach,",
    "start": "4347550",
    "end": "4353085"
  },
  {
    "text": "uh, goals including pressing buttons. Uh, for example, it's trying to press the green button, and it's trying to press the blue button.",
    "start": "4353085",
    "end": "4358590"
  },
  {
    "text": "Now, it's trying to slide the door over to the left. Um, it's able to do kind of all of these different goals just by using that- that data.",
    "start": "4358590",
    "end": "4367920"
  },
  {
    "text": "Okay. Um, are there any other ways to use this insight?",
    "start": "4368340",
    "end": "4373400"
  },
  {
    "text": "So another thing that we could do, uh, with this insights is we could try to use it to learn a better goal representation.",
    "start": "4373400",
    "end": "4378784"
  },
  {
    "text": "Uh, so if we have these 0/1 goal representations, this isn't very good for reinforced learning but we can use it to,",
    "start": "4378785",
    "end": "4385005"
  },
  {
    "text": "uh, learn about our goal representation. And in particular, we can imagine the question, \"Which representation when uses",
    "start": "4385005",
    "end": "4391530"
  },
  {
    "text": "a reward function will cause a planner to choose the observed actions?\" [NOISE] Uh, and so we could first collect random unlabeled interaction data.",
    "start": "4391530",
    "end": "4402015"
  },
  {
    "text": "In this case, we'll collect data of, this is robot ran- like sampling from a random Gaussian distribution, as shown here.",
    "start": "4402015",
    "end": "4409560"
  },
  {
    "text": "Uh, we'll then train a latent state representation and a latent space model such that if we",
    "start": "4409560",
    "end": "4415140"
  },
  {
    "text": "plan a sequence of actions with respect to the last state, we will recover the observed action sequence.",
    "start": "4415140",
    "end": "4421605"
  },
  {
    "text": "Um, so essentially, this corresponds to, uh, embedding a, uh, a planner in latent space into a goal condition policy",
    "start": "4421605",
    "end": "4429764"
  },
  {
    "text": "and train that goal condition policy with supervised learning to match the observed actions.",
    "start": "4429765",
    "end": "4434820"
  },
  {
    "text": "Uh, so we could use this policy directly as in the previous paper, uh, but we can also throw away the latent space model and return",
    "start": "4434820",
    "end": "4442170"
  },
  {
    "text": "the goal representation that the planner was using- the planner was using inside that policy, uh, and combine that- that goal representation with reinforcement learning.",
    "start": "4442170",
    "end": "4450000"
  },
  {
    "text": "Um, so this is referred to as distributional planning that works in the sense that it's, uh,",
    "start": "4450000",
    "end": "4455235"
  },
  {
    "text": "performing this planning procedure inside the neural network and outputting a distribution over action sequences.",
    "start": "4455235",
    "end": "4460710"
  },
  {
    "text": "Uh, and what you can do with this metric, uh, is this metric is- the metric that you could use is much more shaped because the planner has to be able to use that shape reward function,",
    "start": "4460710",
    "end": "4468045"
  },
  {
    "text": "if you only give it the sparse reward function it wouldn't be able to succeed. Um, you could use, uh, you can take out this- this metric, uh,",
    "start": "4468045",
    "end": "4474330"
  },
  {
    "text": "run reinforcement learning with respect [NOISE] to this metric on a variety of vision based robotic learning tasks, uh, and then compare it to a variety of other metrics",
    "start": "4474330",
    "end": "4481695"
  },
  {
    "text": "such as pixel distance and distance in a VAE latent space. And you can see that the metric that comes from this procedure showed in green leads to, uh,",
    "start": "4481695",
    "end": "4489060"
  },
  {
    "text": "much more successful reinforcement learning because it's able to recover both an accurate and a shaped reward function.",
    "start": "4489060",
    "end": "4495645"
  },
  {
    "text": "And so you can get behavior that looks like this where it can figure out how to reach an image of a goal,",
    "start": "4495645",
    "end": "4500670"
  },
  {
    "text": "uh, or figure out how to- to push an object, uh, to reach an image of a goal. Uh, and it can also be used in the real world, uh,",
    "start": "4500670",
    "end": "4508110"
  },
  {
    "text": "for like reaching a certain goal image or for, uh, pushing an object for example.",
    "start": "4508110",
    "end": "4514390"
  },
  {
    "text": "Okay. Um, so to summarize, uh, what we talked about today is,",
    "start": "4515330",
    "end": "4520635"
  },
  {
    "text": "uh, what is the multi-task RL problem, how we can we apply policy gradients to this problem, and how we can think about doing, uh,",
    "start": "4520635",
    "end": "4527849"
  },
  {
    "text": "weight sharing as well as data sharing in both, uh, policy gradient settings and in Q-learning settings.",
    "start": "4527850",
    "end": "4534885"
  },
  {
    "text": "Um, so there's a number of remaining questions, some of which you brought up today that we'll cover in the next two weeks.",
    "start": "4534885",
    "end": "4541350"
  },
  {
    "text": "[NOISE] Uh, so for example, uh, can we use auxiliary tasks to accelerate the learning process?",
    "start": "4541350",
    "end": "4546495"
  },
  {
    "text": "Uh, and this will be the, uh, the focus of the, uh, Wednesday. What about hierarchies of tasks,",
    "start": "4546495",
    "end": "4552270"
  },
  {
    "text": "where we have subtasks and then we want to learn higher-level policies that operate, um, on those subtasks?",
    "start": "4552270",
    "end": "4558450"
  },
  {
    "text": "Uh, can we learn exploration strategies across tasks rather than, um, try to using a single kind- just using vanilla, um, vanilla approaches.",
    "start": "4558450",
    "end": "4567735"
  },
  {
    "text": "And also, uh, what do meta-RL algorithms actually learn, uh, when applied to various settings?",
    "start": "4567735",
    "end": "4574110"
  },
  {
    "text": "Um, so we'll be covering each of these, the first will be covered on Wednesday, and the paper presentations, uh, the second one will be covered on Monday next week in paper representations.",
    "start": "4574110",
    "end": "4582750"
  },
  {
    "text": "Um, next Wednesday, we'll have a- the guest lecture by Kate Rakelly, uh, who's the first author on a recent off policy meta-RL paper,",
    "start": "4582750",
    "end": "4589830"
  },
  {
    "text": "that is, uh, I think currently the state of the art method in- in meta-reinforcement [NOISE] learning.",
    "start": "4589830",
    "end": "4594885"
  },
  {
    "text": "Uh, and then on Monday, we'll, um, we'll have paper presentations that study emergent phenomena in meta-reinforcement learning.",
    "start": "4594885",
    "end": "4602579"
  },
  {
    "text": "Um, for those of you that don't have quite as much experience in reinforcement learning, there are additional reinforcement learning resources such as the Stanford course,",
    "start": "4602580",
    "end": "4609750"
  },
  {
    "text": "the UCL course from David Silver, and the Berkeley course, and I believe that all of these courses have lecture videos online.",
    "start": "4609750",
    "end": "4615780"
  },
  {
    "text": "Um, so if you're interested in learning more,  those could be helpful, uh, and it can also be useful for the homework.",
    "start": "4615780",
    "end": "4620790"
  },
  {
    "text": "Um, and then a couple of reminders, homework 2 is due on Wednesday, homework 3 covers hindsight experience replay and goal conditioned RL,",
    "start": "4620790",
    "end": "4626925"
  },
  {
    "text": "and that will be out this Wednesday and due in a couple of weeks. After that, uh, and then the project proposal is due next Wednesday.",
    "start": "4626925",
    "end": "4633420"
  },
  {
    "text": "Okay. See you on Wednesday. [NOISE]",
    "start": "4633420",
    "end": "4643000"
  }
]