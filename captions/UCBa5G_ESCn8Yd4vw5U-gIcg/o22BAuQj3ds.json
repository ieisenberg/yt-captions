[
  {
    "text": "you you'll be able to watch it again oh maybe I'm on now okay good so hello",
    "start": "2399",
    "end": "7799"
  },
  {
    "text": "hello welcome to another computer musing uh this is the uh the Halloween uh uh",
    "start": "7799",
    "end": "16320"
  },
  {
    "text": "version I'm going to have another Christmas uh lecture in December be the next one um and topic",
    "start": "16320",
    "end": "23480"
  },
  {
    "text": "today is uh plgic Computing which I you",
    "start": "23480",
    "end": "28920"
  },
  {
    "text": "know I figured if if I use a word that nobody knows uh somebody has to come and he and hear the talk right so I will I",
    "start": "28920",
    "end": "36280"
  },
  {
    "text": "will at least explain to you but before you leave you will know what what that means um and uh uh in fact it's a it's",
    "start": "36280",
    "end": "45800"
  },
  {
    "text": "something that uh I I'm right now writing part of of volume four of the art of computer programming which is",
    "start": "45800",
    "end": "51680"
  },
  {
    "text": "which is kind of the part that I've been waiting longest Force you know for for so many years I I I I I've been",
    "start": "51680",
    "end": "58000"
  },
  {
    "text": "collecting material for section which is now called section 7.1.3 and it and uh and now at last I",
    "start": "58000",
    "end": "65840"
  },
  {
    "text": "can put it into uh you know into a computer file and and pretty soon it's going to be out there uh for everybody",
    "start": "65840",
    "end": "73119"
  },
  {
    "text": "to read and and sort of this is the I mean I've enjoyed writing the rest of the book but this part is the part that",
    "start": "73119",
    "end": "79560"
  },
  {
    "text": "that really uh I I I like the most somehow and um and so I hope other people like it too uh I got it I got a",
    "start": "79560",
    "end": "88600"
  },
  {
    "text": "uh you know a start on it uh but I haven't uh and so",
    "start": "88600",
    "end": "95320"
  },
  {
    "text": "it's section 73 is called bitwise tricks and techniques um my friend Mike",
    "start": "95320",
    "end": "101640"
  },
  {
    "text": "Patterson has a has his own name for this he calls it btnt uh which is you know sort of a SQL",
    "start": "101640",
    "end": "109119"
  },
  {
    "text": "AT&T but anyway this is this uh this will be on the web available for",
    "start": "109119",
    "end": "114759"
  },
  {
    "text": "downloading in a month or so I'm still I'm still in the midst of writing it um",
    "start": "114759",
    "end": "120119"
  },
  {
    "text": "if you if a few people have actually guessed the URL and found it uh you know",
    "start": "120119",
    "end": "125399"
  },
  {
    "text": "the the uh uh the rough draft uh uh but but I you know unless you have a lot of",
    "start": "125399",
    "end": "130840"
  },
  {
    "text": "time there's so much other stuff you can do uh there's no point in in reading it until i' until I've got the ready for",
    "start": "130840",
    "end": "138879"
  },
  {
    "text": "beta testing at least um but anyway this uh uh as I say I I I have U terrific fun",
    "start": "138879",
    "end": "146120"
  },
  {
    "text": "writing this because I've been collecting stuff from the folklore that that uh programmers have been doing uh",
    "start": "146120",
    "end": "152640"
  },
  {
    "text": "for years and years and uh rarely uh does it get into print um nowadays",
    "start": "152640",
    "end": "158959"
  },
  {
    "text": "there's there's about a dozen websites that uh of people that have also done their own collection of these of these",
    "start": "158959",
    "end": "164519"
  },
  {
    "text": "tricks um uh and uh uh and so I looked",
    "start": "164519",
    "end": "169680"
  },
  {
    "text": "at all those websites some of them uh at least one of them was host hosted at Stanford by Sean Anderson um and uh and",
    "start": "169680",
    "end": "178280"
  },
  {
    "text": "then a book came out two three years ago called Hacker's Delight uh which which",
    "start": "178280",
    "end": "184400"
  },
  {
    "text": "uh features a lot of these ideas and uh and there are AATA to that book on the",
    "start": "184400",
    "end": "190599"
  },
  {
    "text": "web so you know and the author of that book is we're we're in constant touch so we we're trading ideas um these are",
    "start": "190599",
    "end": "198440"
  },
  {
    "text": "these are are are things that uh uh at first we thought they were just tricks",
    "start": "198440",
    "end": "204120"
  },
  {
    "text": "but once we once we but you know the difference between a trick and a technique is that a technique is you get",
    "start": "204120",
    "end": "209200"
  },
  {
    "text": "is some is some is a trick that you can use at least twice uh you know and so and so",
    "start": "209200",
    "end": "215519"
  },
  {
    "text": "once you you know once you find two different applications for something then it becomes a technique and so and and uh we're understanding more and more",
    "start": "215519",
    "end": "222680"
  },
  {
    "text": "about it and and it might even be that we we're just seeing the tip of the iceberg that there's many more of these things so my my general feeling is that",
    "start": "222680",
    "end": "230200"
  },
  {
    "text": "uh that that right now computer scientists are about in somewhat you know stayed analogous to the way at the",
    "start": "230200",
    "end": "236840"
  },
  {
    "text": "uh at the end of the 60s uh we were with respect to data structures um uh during",
    "start": "236840",
    "end": "242560"
  },
  {
    "text": "the during the first part of the 60s people were learning about about data structures uh and and but but the the",
    "start": "242560",
    "end": "250239"
  },
  {
    "text": "general idea was well if you want to use uh uh uh anything more than a then a a",
    "start": "250239",
    "end": "257600"
  },
  {
    "text": "linear list or you know some I'm sorry a a vector or or Matrix uh then then you",
    "start": "257600",
    "end": "264360"
  },
  {
    "text": "use somebody's package you know you you you use uh say lisp or something where somebody has given you uh a whole bunch",
    "start": "264360",
    "end": "271840"
  },
  {
    "text": "of high level data structur but all of a sudden programmers found out that that actually they could do their own data structure was was pretty easy to to you",
    "start": "271840",
    "end": "279000"
  },
  {
    "text": "know to use uh to make stacks themselves and and and so on in their own programs",
    "start": "279000",
    "end": "284479"
  },
  {
    "text": "and so now I think it's about the same we're about at that level with respect to the to the stuff I'm talking about",
    "start": "284479",
    "end": "290039"
  },
  {
    "text": "today that uh that it's time to go mainstream with these with with these uh ideas that uh that that that you know",
    "start": "290039",
    "end": "297720"
  },
  {
    "text": "they're now understandable enough we don't have to go to somebody to some special compiler that knows how to do",
    "start": "297720",
    "end": "303240"
  },
  {
    "text": "some uh some fancy things uh but we can actually understand uh certain methods",
    "start": "303240",
    "end": "309880"
  },
  {
    "text": "and and uh use them in our own programs with with ease and understanding um and so I'm hoping that this uh that that",
    "start": "309880",
    "end": "317320"
  },
  {
    "text": "that anyway this uh this this change that now these aren't going to a lot of",
    "start": "317320",
    "end": "322960"
  },
  {
    "text": "the things I'm going to talking about today are going to seem exotic but I'm hoping that in 10 years uh you know it",
    "start": "322960",
    "end": "328280"
  },
  {
    "text": "won't be taught necessarily in first grade but but but maybe you know every programmer will will sort of consider that part of their their basic toolkit",
    "start": "328280",
    "end": "335520"
  },
  {
    "text": "now so so what what does it mean bitwise well it's just that uh since the very",
    "start": "335520",
    "end": "341280"
  },
  {
    "text": "beginning computers have have have had not only the ability to add subtract and multiply and divine but they also had",
    "start": "341280",
    "end": "347160"
  },
  {
    "text": "the ability to do uh what we used to call logical and but they have other names uh you know so so you could take",
    "start": "347160",
    "end": "353919"
  },
  {
    "text": "two binary numbers unless you had a decimal computer you could take two binary numbers and you could uh and you",
    "start": "353919",
    "end": "359720"
  },
  {
    "text": "could take the end of the two things so you know just getting a one where both of the in in the positions where both of",
    "start": "359720",
    "end": "365680"
  },
  {
    "text": "the numbers were one and you also had or uh and you had exclusive or which is uh",
    "start": "365680",
    "end": "372160"
  },
  {
    "text": "uh uh in fact at one point was uh um was",
    "start": "372160",
    "end": "377319"
  },
  {
    "text": "a classified thing I I I went to the you know I mean was was used so",
    "start": "377319",
    "end": "383039"
  },
  {
    "text": "often in in in in in codebreaking I I went to a conference in Los Alamos in 1976 where somebody wrote the truth",
    "start": "383039",
    "end": "389560"
  },
  {
    "text": "table for exclusive or on the Blackboard and the security man he rased it immediately um but U anyway it's you",
    "start": "389560",
    "end": "397360"
  },
  {
    "text": "know we can't keep it a secret you know any longer so so now um now uh okay so",
    "start": "397360",
    "end": "403240"
  },
  {
    "text": "so so we so uh uh for exclusive or um I I I write it as",
    "start": "403240",
    "end": "411440"
  },
  {
    "text": "a plus with in a circle this means that uh uh you know this means that I that",
    "start": "411440",
    "end": "417599"
  },
  {
    "text": "that I take the bits uh so let's suppose X is equal to 5 right um and put it in",
    "start": "417599",
    "end": "423919"
  },
  {
    "text": "binary is 101 and Y is equal to well choose a number not too",
    "start": "423919",
    "end": "429560"
  },
  {
    "text": "big seven all right all right that's uh",
    "start": "429560",
    "end": "435479"
  },
  {
    "text": "that's that's lucky so now um so",
    "start": "435479",
    "end": "440680"
  },
  {
    "text": "exclusive or why you just take each bit one 1+ one but you added mod two so you",
    "start": "440680",
    "end": "445960"
  },
  {
    "text": "get 0 1 zero okay so so X o plus Y is is",
    "start": "445960",
    "end": "452080"
  },
  {
    "text": "two all right um then uh you also have X and Y um and I use C notation for this is",
    "start": "452080",
    "end": "460599"
  },
  {
    "text": "ersan so this means you take the end of all the bits and what do you get X and",
    "start": "460599",
    "end": "466479"
  },
  {
    "text": "Y what five okay and X or",
    "start": "466479",
    "end": "471840"
  },
  {
    "text": "Y is seven right what's X and Y Bar",
    "start": "471840",
    "end": "479479"
  },
  {
    "text": "that that's a complement of Y zero yeah and so on uh any Boolean",
    "start": "479599",
    "end": "486159"
  },
  {
    "text": "operation that we do now we ALS we also have uh like left shift okay X left",
    "start": "486159",
    "end": "492720"
  },
  {
    "text": "shift two uh would be 101 and we and we bring in",
    "start": "492720",
    "end": "498400"
  },
  {
    "text": "zeros uh and so um this is a two and so this is 20 and uh and X right",
    "start": "498400",
    "end": "507159"
  },
  {
    "text": "shift two is one okay so uh these are the basic",
    "start": "507159",
    "end": "513320"
  },
  {
    "text": "bitwise operations that we at now um uh however let me go to um uh something a",
    "start": "513320",
    "end": "522399"
  },
  {
    "text": "little bit harder let's try minus x uh I'm going to consider that these",
    "start": "522399",
    "end": "527720"
  },
  {
    "text": "are integers um but they're infinite Precision integer so minus one is going",
    "start": "527720",
    "end": "535200"
  },
  {
    "text": "to be all ones you know one you proceeding out",
    "start": "535200",
    "end": "540320"
  },
  {
    "text": "indefinitely uh what is minus5 but you know it's going to have a whole bunch of",
    "start": "540320",
    "end": "547000"
  },
  {
    "text": "ones at the beginning know it's minus 5 but but what does it look like in",
    "start": "547000",
    "end": "553959"
  },
  {
    "text": "binary looks like that because if we add five to that we can check it you add",
    "start": "555399",
    "end": "560440"
  },
  {
    "text": "five you get one and one is two carry one we do carry when we when we add not",
    "start": "560440",
    "end": "565800"
  },
  {
    "text": "when we do exclusive or uh one and one is two okay there we go and we get and we get we get it in general in fact if x",
    "start": "565800",
    "end": "573160"
  },
  {
    "text": "is any um you know let's suppose X is equal to Alpha of and one and a whole",
    "start": "573160",
    "end": "579160"
  },
  {
    "text": "bunch of zeros uh then minus X is equal to",
    "start": "579160",
    "end": "585360"
  },
  {
    "text": "um Alpha bar and one and a whole bunch of zeros uh this is the complement of alpha",
    "start": "585360",
    "end": "593920"
  },
  {
    "text": "bitwise complement I should have also mentioned compl yeah okay so because you know you add these together and you get",
    "start": "593920",
    "end": "600519"
  },
  {
    "text": "zero and then you get one and one is two and then and then here we getting 0 and one are one and zero everywhere along so",
    "start": "600519",
    "end": "606560"
  },
  {
    "text": "we're getting zero all the way around so this is the formula for uh for minus X",
    "start": "606560",
    "end": "612720"
  },
  {
    "text": "now um and and now I consider that um uh you know um this is a new these",
    "start": "612720",
    "end": "621000"
  },
  {
    "text": "operations are defined on all the integers and that they're and they're they're uh like these are associative",
    "start": "621000",
    "end": "626560"
  },
  {
    "text": "operations exclusive or and not and you know this bitwise and bitwise or",
    "start": "626560",
    "end": "633240"
  },
  {
    "text": "exclusive or they're all associative operations we can mix them uh with with",
    "start": "633240",
    "end": "638959"
  },
  {
    "text": "plus and minus and uh and uh uh imagine",
    "start": "638959",
    "end": "644480"
  },
  {
    "text": "that we we we teach this to everybody I mean you know uh and and we and we have a whole system uh that we that we go",
    "start": "644480",
    "end": "651680"
  },
  {
    "text": "beyond ordinary arithmetic and just have a richer collection of things to do um",
    "start": "651680",
    "end": "657360"
  },
  {
    "text": "and so you start looking at at this and mathematicians um uh have found a a",
    "start": "657360",
    "end": "664480"
  },
  {
    "text": "small number of uses of this exclusive Ora operation but they had they never studied the the bitwise and and bitwise",
    "start": "664480",
    "end": "670399"
  },
  {
    "text": "or uh but uh but there's some some nice theories about the about exclusive or",
    "start": "670399",
    "end": "676920"
  },
  {
    "text": "that uh that are used especially in the theory of of games but but also there",
    "start": "676920",
    "end": "683040"
  },
  {
    "text": "are there are um uh interesting identities in fact uh for example x +",
    "start": "683040",
    "end": "691279"
  },
  {
    "text": "2 exclusive or 3 - 2 is equal to x - 2",
    "start": "691279",
    "end": "699639"
  },
  {
    "text": "exclusive or 3 + 2 now that's not obvious but it just",
    "start": "699639",
    "end": "706279"
  },
  {
    "text": "happens to be true um and uh and it's an it's an open problem actually to take uh",
    "start": "706279",
    "end": "711680"
  },
  {
    "text": "to to to solve the the uh U if somebody",
    "start": "711680",
    "end": "717000"
  },
  {
    "text": "writes down a formula involving Plus plus minus an exclusive or to tell you",
    "start": "717000",
    "end": "722440"
  },
  {
    "text": "whether it's an identity for all integers uh uh if uh but but but certain",
    "start": "722440",
    "end": "728920"
  },
  {
    "text": "classes of the problem are known now let's check this out just just to just to make sure so so I'll make a table of",
    "start": "728920",
    "end": "734600"
  },
  {
    "text": "X here and so we go 0 1 2 3 I claim it's true for all all integers egg um and uh",
    "start": "734600",
    "end": "743320"
  },
  {
    "text": "so I'll write x + 2 here and then I will exclusive or with three okay well you",
    "start": "743320",
    "end": "749279"
  },
  {
    "text": "can I'm going to go -2 why not so um 0 + 2 is you know 2 3 4 we can do we can add",
    "start": "749279",
    "end": "757720"
  },
  {
    "text": "two uh I don't think we'll have much problem with that um - 2 + 2 - 1 + 2 so",
    "start": "757720",
    "end": "764639"
  },
  {
    "text": "so so we get this now we got a two exclusive or with three so what happen zero exclusive or three is three One",
    "start": "764639",
    "end": "771199"
  },
  {
    "text": "exclusive or three is 2 1 0 and then four exclusive or3 is 7 7",
    "start": "771199",
    "end": "779639"
  },
  {
    "text": "6 5 going like this -1 exclusive or3 what was it you remember minus1 is",
    "start": "779639",
    "end": "786920"
  },
  {
    "text": "all one so exclusive or3 it's whole bunch of ones followed by two twos minus",
    "start": "786920",
    "end": "792360"
  },
  {
    "text": "4 okay now let's let's also take x -2 and exclusive or3 with that so x -2 is",
    "start": "792360",
    "end": "799519"
  },
  {
    "text": "your - 5 -4 -3 - 2 minus",
    "start": "799519",
    "end": "805120"
  },
  {
    "text": "one0 one two for example now we exclusive or that with three and uh we already have these answers",
    "start": "805120",
    "end": "813560"
  },
  {
    "text": "uh so uh in fact we can see what's going on here so exclusive over three here we",
    "start": "813560",
    "end": "820160"
  },
  {
    "text": "get three and then here we had a minus 4 uh Min -2 exclusive well this is it's got",
    "start": "820160",
    "end": "827120"
  },
  {
    "text": "to be one bigger so it's it's got to be Min - 3 -2",
    "start": "827120",
    "end": "832560"
  },
  {
    "text": "-1 and then this will be Min - 8 we had -5 a minute ago it's just guy",
    "start": "832560",
    "end": "839519"
  },
  {
    "text": "so we take exclusive R3 we get ends with three Z minus 8 okay and One exclusive",
    "start": "839519",
    "end": "845120"
  },
  {
    "text": "or3 know it's two okay so now if you look at at these numbers they're they're just four",
    "start": "845120",
    "end": "851279"
  },
  {
    "text": "apart and so you can see that if I you know if I put the this over here I get I",
    "start": "851279",
    "end": "857320"
  },
  {
    "text": "get a plus4 over here so so so this is indeed an aous identity involving these",
    "start": "857320",
    "end": "862920"
  },
  {
    "text": "things but there are other identities uh I hav't thrown in bitwise and and or and things like that and uh uh uh so uh you",
    "start": "862920",
    "end": "871839"
  },
  {
    "text": "know uh we enriched mathematics we might as well learn learn about this system but very very few people have ever",
    "start": "871839",
    "end": "878199"
  },
  {
    "text": "studied yeah when you say that uh testing identities like this it's open",
    "start": "878199",
    "end": "883959"
  },
  {
    "text": "do you mean it's not known whether it's computable or it's not known whether pomal or linear or actually",
    "start": "883959",
    "end": "891800"
  },
  {
    "text": "um um I'm not sure what's not known uh the",
    "start": "891800",
    "end": "899079"
  },
  {
    "text": "let's see uh it was John Conway who who who told me this once at lunch but but",
    "start": "899079",
    "end": "904480"
  },
  {
    "text": "what I and I don't have all the pages here let's see here I've got a level 46",
    "start": "904480",
    "end": "910639"
  },
  {
    "text": "research problem which you can look at um uh can we get this on oh okay this",
    "start": "910639",
    "end": "917040"
  },
  {
    "text": "guy here um incidentally this is an example of an interesting",
    "start": "917040",
    "end": "922680"
  },
  {
    "text": "graphic where you just plot the X2 Y and shift right 11 and you get this very",
    "start": "922680",
    "end": "927839"
  },
  {
    "text": "interesting pattern in one of the exercises to explain why you get these worlds anyway okay so the results of",
    "start": "927839",
    "end": "933560"
  },
  {
    "text": "exercise 15 make it possible to decide whether or not any two given animating functions are equal animating functions",
    "start": "933560",
    "end": "939519"
  },
  {
    "text": "are functions that that alternate plus and um and exclusive or with with",
    "start": "939519",
    "end": "945959"
  },
  {
    "text": "constants U and there's a normal form for that and you can do is there an algorithm decides whether any given",
    "start": "945959",
    "end": "951880"
  },
  {
    "text": "expression is identically zero expression is constructed from a finite number of integer variables and constants using only the binary so this",
    "start": "951880",
    "end": "958279"
  },
  {
    "text": "is an this this is a decision problem so so actually whether it's unsolvable or solvable is is open I believe yeah um",
    "start": "958279",
    "end": "967160"
  },
  {
    "text": "and I got this uh from John Conway who who was the person who solved the",
    "start": "967160",
    "end": "972519"
  },
  {
    "text": "animating function the problem he calls him animating for his own reasons so it has to do with the game of nim okay so",
    "start": "972519",
    "end": "980880"
  },
  {
    "text": "um now uh",
    "start": "980880",
    "end": "986680"
  },
  {
    "text": "the these fun these operations get more important because uh nowadays when we have when uh 64-bit computers are are",
    "start": "989360",
    "end": "996360"
  },
  {
    "text": "very common so we have more bits if we had only uh you know 8bit registers then",
    "start": "996360",
    "end": "1001880"
  },
  {
    "text": "wouldn't be that interesting to to do bitwise operations because you could you could do them bit by bit without much",
    "start": "1001880",
    "end": "1007319"
  },
  {
    "text": "that much different but when we can do 64 bits at a time we're getting a factor of 64 and that's nothing to sneeze it um",
    "start": "1007319",
    "end": "1013920"
  },
  {
    "text": "and uh uh so um we're so people are now",
    "start": "1013920",
    "end": "1020000"
  },
  {
    "text": "starting to look at what what what we can do with these operations on bigger and bigger on bigger and bigger numbers",
    "start": "1020000",
    "end": "1026558"
  },
  {
    "text": "um and so before I get further my plan today is to show you a",
    "start": "1026559",
    "end": "1032480"
  },
  {
    "text": "whole bunch of uh of really cool hacks U and and and some of which uh uh are",
    "start": "1032480",
    "end": "1039400"
  },
  {
    "text": "tricks and some of which are techniques uh most of which are techniques um and and and then you can you can you know uh",
    "start": "1039400",
    "end": "1047600"
  },
  {
    "text": "learn learn the whole thing later at your leisure if you're interested um but uh uh when I started when I started",
    "start": "1047600",
    "end": "1055440"
  },
  {
    "text": "seeing how many there are and and and then week after week learning yet more",
    "start": "1055440",
    "end": "1060760"
  },
  {
    "text": "uh amazing things that are possible with these operations um I thought oh boy uh",
    "start": "1060760",
    "end": "1066360"
  },
  {
    "text": "there ought to be a a name for for for this kind of study um and uh so um and",
    "start": "1066360",
    "end": "1073840"
  },
  {
    "text": "and there was one name in in the literature uh but I don't even want to",
    "start": "1073840",
    "end": "1079080"
  },
  {
    "text": "write it down because it was for me it was a non-starter I can tell you though if you don't breathe it out of this room",
    "start": "1079080",
    "end": "1085200"
  },
  {
    "text": "it's it uh uh one of my uh one of my",
    "start": "1085200",
    "end": "1090600"
  },
  {
    "text": "former students U Mike fredman wrote a paper with Dan Willard about 15 years ago where they decided that they they",
    "start": "1090600",
    "end": "1097240"
  },
  {
    "text": "wanted to call this trans dichotomus Computing um and uh uh okay I looked it",
    "start": "1097240",
    "end": "1103799"
  },
  {
    "text": "up in Google and I found that that uh you know somebody the following year wrote A pap paper that had transus in",
    "start": "1103799",
    "end": "1110280"
  },
  {
    "text": "the title but fortunately it's it's it's died out the last last 13 years there hasn't been anybody else or at least the",
    "start": "1110280",
    "end": "1116520"
  },
  {
    "text": "last 10 years as far as I know using that word so so I want to have another but I I fig concept is important enough",
    "start": "1116520",
    "end": "1121760"
  },
  {
    "text": "I want to I want to have a have have a name for it and um also uh",
    "start": "1121760",
    "end": "1128360"
  },
  {
    "text": "as I'm going to say later on in this lecture I think it might have implications for Hardware design of new kind of computers in the future so uh uh",
    "start": "1128360",
    "end": "1137120"
  },
  {
    "text": "so I also looked and and one one possible uh thing would be vld DW",
    "start": "1137120",
    "end": "1145200"
  },
  {
    "text": "because uh people have designed computers with a very large instruction",
    "start": "1145200",
    "end": "1150600"
  },
  {
    "text": "word and they call those vliw machines uh but I googled this and this this is",
    "start": "1150600",
    "end": "1155880"
  },
  {
    "text": "already taken by very large data warehouses uh so uh you know so you",
    "start": "1155880",
    "end": "1162120"
  },
  {
    "text": "can't use that okay so um I asked Leo",
    "start": "1162120",
    "end": "1167320"
  },
  {
    "text": "gibas my student who's sitting up here with a with a sheepish grin and uh and",
    "start": "1167320",
    "end": "1172480"
  },
  {
    "text": "and I said you know I uh I want uh I want to use Greek Roots um and uh and so",
    "start": "1172480",
    "end": "1179320"
  },
  {
    "text": "I I don't even remember what word I gave him but I I I I combined some Greek word some Greek roots and I said how does",
    "start": "1179320",
    "end": "1184919"
  },
  {
    "text": "this sound to you Leo and he said it you know basically it stinks but but but but",
    "start": "1184919",
    "end": "1190400"
  },
  {
    "text": "he said Plato logic is a winner PL logic sounds good to a Greek person and it comes from Greek Roots meaning wide and",
    "start": "1190400",
    "end": "1199760"
  },
  {
    "text": "word okay actually platy let's say is is the you know that's",
    "start": "1199760",
    "end": "1205679"
  },
  {
    "text": "platy is the study of wide words now this has nothing to do with a Greek",
    "start": "1205679",
    "end": "1211159"
  },
  {
    "text": "philosopher whose name some of you might might remember hear um you know it just",
    "start": "1211159",
    "end": "1218159"
  },
  {
    "text": "happens that he his name also comes from this this root that that means white um",
    "start": "1218159",
    "end": "1224080"
  },
  {
    "text": "and logos people know that the Greek from this so uh anyway this is uh uh but",
    "start": "1224080",
    "end": "1230320"
  },
  {
    "text": "but I think the connection with Plato is you know I mean okay so it's it's misunderstood but uh uh um it actually",
    "start": "1230320",
    "end": "1238919"
  },
  {
    "text": "it's it's so much easier to remember the word because you know you don't have to PL logic it just sounds it sounds like",
    "start": "1238919",
    "end": "1246400"
  },
  {
    "text": "it's it's a word that all have been there for years and so you know so anyway but got got to say a few words",
    "start": "1246400",
    "end": "1253320"
  },
  {
    "text": "the downside of it is is that patology is a noun uh um uh and pl loic is an",
    "start": "1253320",
    "end": "1262760"
  },
  {
    "text": "adjective not an um so I say plgic Computing I didn't",
    "start": "1262760",
    "end": "1269919"
  },
  {
    "text": "say you know uh building a computer out of plgic it's like syntactic you know uh",
    "start": "1269919",
    "end": "1278919"
  },
  {
    "text": "I could say plat olical as well but it just uh exra syllable I I don't usually",
    "start": "1278919",
    "end": "1285200"
  },
  {
    "text": "use syntactical I say syntactic and so and you physical okay you got music uh",
    "start": "1285200",
    "end": "1292039"
  },
  {
    "text": "is a noun but but we have a syntax anyway so uh this is an adjective um and",
    "start": "1292039",
    "end": "1300159"
  },
  {
    "text": "uh you can also say you know an adverb ploicy and things like this okay um",
    "start": "1300159",
    "end": "1306840"
  },
  {
    "text": "anyway U it might not fly somebody has a better name you never know but uh uh but",
    "start": "1306840",
    "end": "1313760"
  },
  {
    "text": "uh I feel the concept needs a name and this is this is this is the winner so far that I know okay so that's the",
    "start": "1313760",
    "end": "1321000"
  },
  {
    "text": "that's the reason for the for the for the title now let me show you some some",
    "start": "1321000",
    "end": "1326200"
  },
  {
    "text": "now the re now I think the first person who really uh uh began to uh uh to uh",
    "start": "1326200",
    "end": "1332120"
  },
  {
    "text": "take the covers off as as some of the possibilities for uh for Plato logic uh",
    "start": "1332120",
    "end": "1339279"
  },
  {
    "text": "Computing was Gil gosper uh who who published a uh a famous uh sequence of",
    "start": "1339279",
    "end": "1347600"
  },
  {
    "text": "instructions in 1972 in a in famous mem o hack mem that came out on U February 29th 1972 at MIT",
    "start": "1347600",
    "end": "1356799"
  },
  {
    "text": "and gosper's hack uh was a sequence of seven operations uh that I will write down for",
    "start": "1356799",
    "end": "1363880"
  },
  {
    "text": "you and explain um and but what what what happened is after I I in a way gos",
    "start": "1363880",
    "end": "1371360"
  },
  {
    "text": "hack changed the world because after gosper after we realized that gosper hack existed then all of a sudden we said well maybe there's other hacks too",
    "start": "1371360",
    "end": "1378080"
  },
  {
    "text": "like this that that we can do things that we never thought we could do with these bitwise operations uh so here is",
    "start": "1378080",
    "end": "1383640"
  },
  {
    "text": "gosper's hack um uh you started with a number X and you set u = to xn -",
    "start": "1383640",
    "end": "1390480"
  },
  {
    "text": "x and then you set V to X+",
    "start": "1390480",
    "end": "1395559"
  },
  {
    "text": "U and finally you set y to V exclusive o I'm sorry V plus v",
    "start": "1395559",
    "end": "1405480"
  },
  {
    "text": "exclusive orx divided by U or divided by 4 U let's",
    "start": "1405480",
    "end": "1411559"
  },
  {
    "text": "say in other words shift shift right to so so here is this is this is uh one",
    "start": "1411559",
    "end": "1418760"
  },
  {
    "text": "operation to subtract another one to take the uh and that's two operations",
    "start": "1418760",
    "end": "1423960"
  },
  {
    "text": "three operations here's a four operations for the exclusive or five to the plus oops the division is six",
    "start": "1423960",
    "end": "1433240"
  },
  {
    "text": "what 7 one 2",
    "start": "1433240",
    "end": "1438760"
  },
  {
    "text": "three four five six seven yeah shift right too so what's going on here this",
    "start": "1438760",
    "end": "1444159"
  },
  {
    "text": "is this is one operation two operations three four five six and seven yeah six",
    "start": "1444159",
    "end": "1450720"
  },
  {
    "text": "is for the division and and seven is for the shift right too so you can also call",
    "start": "1450720",
    "end": "1456120"
  },
  {
    "text": "let me call this V exclusive orx divided by U shift right",
    "start": "1456120",
    "end": "1462480"
  },
  {
    "text": "to okay seven operation now um I told you a minute ago about how do you get",
    "start": "1462480",
    "end": "1470159"
  },
  {
    "text": "minus X from X remember that uh and look what happens",
    "start": "1470159",
    "end": "1476200"
  },
  {
    "text": "if you take the end of these two guys you get one and all you just get a",
    "start": "1476200",
    "end": "1483360"
  },
  {
    "text": "one in the position where where X's smallest one was okay incredibly useful operation I think gosper uh was the",
    "start": "1483360",
    "end": "1490559"
  },
  {
    "text": "first to notice this um but anyway I haven't seen anything before 1972 where",
    "start": "1490559",
    "end": "1496760"
  },
  {
    "text": "where this where this particular trick technique was was applied but so if you want to know you know the the",
    "start": "1496760",
    "end": "1502760"
  },
  {
    "text": "smallest one uh that extracts it out there so let's let's take an a typical example of of a number X and suppose X",
    "start": "1502760",
    "end": "1509640"
  },
  {
    "text": "is equal to well let see you already gave",
    "start": "1509640",
    "end": "1515080"
  },
  {
    "text": "me uh let me go through the second row here call out ones and zeros one",
    "start": "1515080",
    "end": "1522000"
  },
  {
    "text": "one zero zero one one one one Z zero one one this",
    "start": "1522000",
    "end": "1532399"
  },
  {
    "text": "is too random we got to okay we got to have non random go",
    "start": "1532399",
    "end": "1537480"
  },
  {
    "text": "ahead when I got to have a few more zeros right that's all right uh anyway",
    "start": "1537480",
    "end": "1546480"
  },
  {
    "text": "it wasn't completely planned um now",
    "start": "1546480",
    "end": "1551559"
  },
  {
    "text": "uh so this is X so what's U well U is going to be a one sitting here right",
    "start": "1551559",
    "end": "1560240"
  },
  {
    "text": "as I told you because minus X is going to is going to be 0 0 1 0 1 0 0 On's all",
    "start": "1560240",
    "end": "1566440"
  },
  {
    "text": "the way around so this is U Okay now what's v well x + U uh it's",
    "start": "1566440",
    "end": "1573960"
  },
  {
    "text": "one1 one one o you know the one got added in here and it carries over like",
    "start": "1573960",
    "end": "1580120"
  },
  {
    "text": "that okay now uh the next thing is we take V exclusive or X right V exclusive",
    "start": "1580120",
    "end": "1587960"
  },
  {
    "text": "or X so what has so so something has changed here 11",
    "start": "1587960",
    "end": "1593320"
  },
  {
    "text": "one right now we divide by",
    "start": "1593320",
    "end": "1600840"
  },
  {
    "text": "U uh that shifts it over U is just a power two so it this is this is a a",
    "start": "1600840",
    "end": "1607520"
  },
  {
    "text": "strange way of of normalizing the thing bringing thinking those three ones all to the",
    "start": "1607520",
    "end": "1612799"
  },
  {
    "text": "right um uh and um",
    "start": "1612799",
    "end": "1619679"
  },
  {
    "text": "uh by the way I have to put parenthesis around this whole business uh and so",
    "start": "1619679",
    "end": "1627399"
  },
  {
    "text": "uh uh now",
    "start": "1627399",
    "end": "1632760"
  },
  {
    "text": "I add that to V what sh by oh I got to shift right I I",
    "start": "1632760",
    "end": "1640720"
  },
  {
    "text": "got a shift right by two right so so now I shift right by two and and I only got one left now I add V v+ and I'm getting",
    "start": "1640720",
    "end": "1650480"
  },
  {
    "text": "101111 all right so that's the that's why uh now",
    "start": "1651640",
    "end": "1659480"
  },
  {
    "text": "um notice that y has five one bits in it and X has 51 bits in it well it turns",
    "start": "1659480",
    "end": "1667000"
  },
  {
    "text": "out this is the smallest number bigger than x that has 51 bits in",
    "start": "1667000",
    "end": "1672320"
  },
  {
    "text": "it so so so now set X to this do it again your shift is one over one one place to",
    "start": "1673760",
    "end": "1681120"
  },
  {
    "text": "the left and so on it'll it you'll run through all the all the integers that have exactly five one bits if you start",
    "start": "1681120",
    "end": "1687080"
  },
  {
    "text": "out with the smallest one which is you know 31 okay that's gosper's hack um now",
    "start": "1687080",
    "end": "1693799"
  },
  {
    "text": "the uh uh you know I I introduced as an",
    "start": "1693799",
    "end": "1699200"
  },
  {
    "text": "exercise uh uh sequence of nested parenthesis encoded by zeros and ones uh",
    "start": "1699200",
    "end": "1706039"
  },
  {
    "text": "and and I and I was able to to to out gosper gosper by having even a",
    "start": "1706039",
    "end": "1712679"
  },
  {
    "text": "divide by the square root of U in my in my formula but anyway that's uh this was",
    "start": "1712679",
    "end": "1718799"
  },
  {
    "text": "I said this is an eye opener to know that we could do something like this um and it's just the beginning just the",
    "start": "1718799",
    "end": "1725600"
  },
  {
    "text": "beginning okay now um",
    "start": "1725600",
    "end": "1730440"
  },
  {
    "text": "uh uh I I guess I can show next um uh yeah let's let's talk about",
    "start": "1730960",
    "end": "1739480"
  },
  {
    "text": "uh okay so so how do you make this into a into a technique uh and one of the",
    "start": "1739480",
    "end": "1746279"
  },
  {
    "text": "first things uh is to is to study how to operate at the right hand of a word",
    "start": "1746279",
    "end": "1752200"
  },
  {
    "text": "which is what this what this is and so um working with with these bits one of the things that we that that we when we",
    "start": "1752200",
    "end": "1759640"
  },
  {
    "text": "start to to learn the um uh about it pretty soon people are talking about",
    "start": "1759640",
    "end": "1764760"
  },
  {
    "text": "what we call the ruler function um which is if you have an integer uh that isn't",
    "start": "1764760",
    "end": "1771880"
  },
  {
    "text": "zero the ruler function says how many zeros there are at the right the number of trailing zeros of the thing and uh uh",
    "start": "1771880",
    "end": "1779519"
  },
  {
    "text": "the reason we call it the ruler function is because if you zoom in on you see how how the tick marks on the ruler get like",
    "start": "1779519",
    "end": "1785120"
  },
  {
    "text": "this you see the ruler function if if you have an odd number the ruler function is zero but if it but if you",
    "start": "1785120",
    "end": "1790919"
  },
  {
    "text": "have twice an odd number the ruler function is one and if you have four times an odd number it's two and so on",
    "start": "1790919",
    "end": "1796519"
  },
  {
    "text": "so so the length of the tick mark you know goes like the ruler function",
    "start": "1796519",
    "end": "1802000"
  },
  {
    "text": "that's um and uh one of the interesting properties of the ruler function is that the ruler function of xus Y is the ruler",
    "start": "1802000",
    "end": "1808440"
  },
  {
    "text": "function of X exclusive or Y and so on so so we start thinking about the ruler function which talks about number of of",
    "start": "1808440",
    "end": "1814880"
  },
  {
    "text": "trailing one number of ones at the right uh zeros trailing zeros at at the right uh then there's a corresponding dual",
    "start": "1814880",
    "end": "1821480"
  },
  {
    "text": "function in the Lambda function uh which is the which is the uh uh the integ part",
    "start": "1821480",
    "end": "1828320"
  },
  {
    "text": "of binary logarithm of x uh which tells you uh where the leftmost one is in in",
    "start": "1828320",
    "end": "1836120"
  },
  {
    "text": "in an integer a positive integer negative integer has so many ones that",
    "start": "1836120",
    "end": "1841279"
  },
  {
    "text": "there is no leftmost but this is the leftmost one and it's kind of nice that Lambda is for left and ruler is for and",
    "start": "1841279",
    "end": "1847880"
  },
  {
    "text": "row is for is for right easy to remember these number numbers okay",
    "start": "1847880",
    "end": "1853320"
  },
  {
    "text": "so a lot of the things that we that we we try to do then are based on an",
    "start": "1853320",
    "end": "1858799"
  },
  {
    "text": "understanding of of ways to deal with the with with the bits that are at the right and bits that are at the left and",
    "start": "1858799",
    "end": "1865559"
  },
  {
    "text": "um um uh it it's uh it it seems to be a",
    "start": "1865559",
    "end": "1870679"
  },
  {
    "text": "lot harder to work at the left than at the right uh because when you're adding adding stuff together you got carries",
    "start": "1870679",
    "end": "1876919"
  },
  {
    "text": "propagating to the left but we we don't have anything that propagates to the right in this in in the same way um and",
    "start": "1876919",
    "end": "1883639"
  },
  {
    "text": "uh uh a lot of the the the basic theory of this of this subject is still is",
    "start": "1883639",
    "end": "1890320"
  },
  {
    "text": "still filled with open questions but uh uh and so for example I can't prove to",
    "start": "1890320",
    "end": "1895480"
  },
  {
    "text": "you that there's no um uh uh that there's no efficient way to",
    "start": "1895480",
    "end": "1903600"
  },
  {
    "text": "extract the leftmost bit the way I extracted the rightmost bit remember I the X and minus X is is the rightmost",
    "start": "1903600",
    "end": "1911240"
  },
  {
    "text": "bit L zero um I have no proof that there isn't that that tomorrow somebody isn't",
    "start": "1911240",
    "end": "1916639"
  },
  {
    "text": "going to come up with a a sequence of of of of 12 steps that uh is going to give me the leftmost bit I just haven't been",
    "start": "1916639",
    "end": "1923720"
  },
  {
    "text": "able to think of it but I haven't been able to think of a way to prove that that's impossible um I do have some lower",
    "start": "1923720",
    "end": "1930000"
  },
  {
    "text": "bounds saying if I'm going to compute the the number of zeros uh I'm if I'm",
    "start": "1930000",
    "end": "1935639"
  },
  {
    "text": "going to compute the position of this of this number to actually compute the logarithm the Lambda x uh uh then uh",
    "start": "1935639",
    "end": "1945000"
  },
  {
    "text": "then I know it it's difficult uh to certain point if I have if if I have",
    "start": "1945000",
    "end": "1950159"
  },
  {
    "text": "nbit words I know it takes log log end steps to do that uh but to compute one",
    "start": "1950159",
    "end": "1955440"
  },
  {
    "text": "to compute 2 to the power Lambda X might be simple I have no I I I know no reason",
    "start": "1955440",
    "end": "1962360"
  },
  {
    "text": "no reason why it's impossible but I I I I strongly doubt it",
    "start": "1962360",
    "end": "1967399"
  },
  {
    "text": "um okay so those are the Lambda and row functions uh but there's a there's a uh",
    "start": "1967399",
    "end": "1974320"
  },
  {
    "text": "a great uh a great great trick uh which I uh",
    "start": "1974320",
    "end": "1980559"
  },
  {
    "text": "which I I uh um realized uh must be true",
    "start": "1980559",
    "end": "1986360"
  },
  {
    "text": "earlier this year and I told my friend Bill Lynch uh uh about it uh and I said",
    "start": "1986360",
    "end": "1993159"
  },
  {
    "text": "you know it's it's seems to be difficult to figure to compute Lambda X but if",
    "start": "1993159",
    "end": "1998240"
  },
  {
    "text": "you're given um X and Y two different numbers and you want to know whether",
    "start": "1998240",
    "end": "2003320"
  },
  {
    "text": "Lambda x equals Lambda y that's easy you I don't know how to calculate Lambda X",
    "start": "2003320",
    "end": "2009639"
  },
  {
    "text": "fast I don't know how to calculate Lambda why fast but I can I can but I know how to calculate whether one is so",
    "start": "2009639",
    "end": "2014840"
  },
  {
    "text": "I so I so I I I met my uh my uh former",
    "start": "2014840",
    "end": "2020080"
  },
  {
    "text": "colleague Bill Lynch had a party earlier this year and I told him you know I I just discovered that it's easy to do",
    "start": "2020080",
    "end": "2025240"
  },
  {
    "text": "this today uh and give him give it to him as a puzzle and he sends back by email a solution that was much better",
    "start": "2025240",
    "end": "2030919"
  },
  {
    "text": "than mine um and so and and and so Bill",
    "start": "2030919",
    "end": "2036039"
  },
  {
    "text": "Bill said this is true if and only if x exclusive or Y is less than or equal X",
    "start": "2036039",
    "end": "2042039"
  },
  {
    "text": "and Y so anyway think about it if uh you",
    "start": "2042039",
    "end": "2048358"
  },
  {
    "text": "know if they if they have the same leading bit position then I take the exclusive or that zeros out that bit",
    "start": "2048359",
    "end": "2054040"
  },
  {
    "text": "position but the end still has the one in that bit position and Converse also goes works as okay so so we can test",
    "start": "2054040",
    "end": "2062560"
  },
  {
    "text": "fast uh whether this is true um now another similar thing um uh my friend",
    "start": "2062560",
    "end": "2069520"
  },
  {
    "text": "Tom Riki came up with a similar idea uh but related and that is uh uh I won't",
    "start": "2069520",
    "end": "2075878"
  },
  {
    "text": "talk much about the reversal but but um uh another another thing that people",
    "start": "2075879",
    "end": "2081398"
  },
  {
    "text": "always uh try to do with their bitwise out is to try to to to flip a number",
    "start": "2081399",
    "end": "2089440"
  },
  {
    "text": "left to right now now here it's not an infinite Precision integer but but maybe we have a 64-bit integer so so we want",
    "start": "2089440",
    "end": "2095079"
  },
  {
    "text": "to take the the bits you know ABCD and and and and flip on so that the a is at",
    "start": "2095079",
    "end": "2100640"
  },
  {
    "text": "the right and the B and the B is and B is going the other direction uh and um",
    "start": "2100640",
    "end": "2106520"
  },
  {
    "text": "and uh uhi let me let me find that page here 42 that's",
    "start": "2106520",
    "end": "2112920"
  },
  {
    "text": "um uh X to find out whether the reversal of X is is is",
    "start": "2112920",
    "end": "2120240"
  },
  {
    "text": "um uh is less than the reversal of Y is something you can do quickly without",
    "start": "2120240",
    "end": "2127000"
  },
  {
    "text": "testing without reversing X or reversing Y and the and the reason and and what",
    "start": "2127000",
    "end": "2134880"
  },
  {
    "text": "you do is you you you set D equal x - Y and Y - x and then you test",
    "start": "2134880",
    "end": "2144400"
  },
  {
    "text": "D and and y equal D so you know x - Y and and Y - x now",
    "start": "2144400",
    "end": "2154400"
  },
  {
    "text": "this is a you know remember this is some quantity uh and it's negative and so this is the",
    "start": "2154400",
    "end": "2160440"
  },
  {
    "text": "this is the least bit of x - y this is the this the rightmost one bit of x - Y",
    "start": "2160440",
    "end": "2165800"
  },
  {
    "text": "and so if that uh if if that uh uh happens to be you know that's a place",
    "start": "2165800",
    "end": "2171920"
  },
  {
    "text": "where Y is one and X is zero and so if it happens that we we we inter intersect",
    "start": "2171920",
    "end": "2177000"
  },
  {
    "text": "that bit with Y and we get and we haven't zeroed it out then then it must be that that that y has has a one in",
    "start": "2177000",
    "end": "2183280"
  },
  {
    "text": "that bit uh so so when X and Y are reversed you see they'll have other bits that cancel out to the uh to the right",
    "start": "2183280",
    "end": "2190520"
  },
  {
    "text": "so anyway this is uh um another surprising fact that without reversing",
    "start": "2190520",
    "end": "2196920"
  },
  {
    "text": "numbers I can tell what would have happened if I compared the two and uh and Riki found a great use for this",
    "start": "2196920",
    "end": "2203119"
  },
  {
    "text": "because he he lets X and Y be the be the U the address of nodes in a binary",
    "start": "2203119",
    "end": "2209800"
  },
  {
    "text": "search tree and this turn this is kind of a random a randomization which helps",
    "start": "2209800",
    "end": "2215280"
  },
  {
    "text": "him keep the binary search tree balanced and he said that uh that this improved the speed of a of a program at H Packard",
    "start": "2215280",
    "end": "2222280"
  },
  {
    "text": "by by several ords of magnitude when he when he put this extra couple lines",
    "start": "2222280",
    "end": "2228400"
  },
  {
    "text": "of and uh uh so anyway this is a u",
    "start": "2228400",
    "end": "2235079"
  },
  {
    "text": "another another quick story okay now let's uh but I want to get you some some",
    "start": "2235079",
    "end": "2241079"
  },
  {
    "text": "more mind stuff so go next um uh one one",
    "start": "2241079",
    "end": "2246839"
  },
  {
    "text": "um uh idea that uh is too cool to to uh uh",
    "start": "2246839",
    "end": "2252800"
  },
  {
    "text": "omit is uh is this one those uh the next few things I'm going to be talking about is where we're working on individual",
    "start": "2252800",
    "end": "2259240"
  },
  {
    "text": "bytes uh so imagine that I got a 64-bit word and divided into eight bytes um or",
    "start": "2259240",
    "end": "2266480"
  },
  {
    "text": "in general you have imagine that you have some wide word and it's divided into a small number of fields uh or a",
    "start": "2266480",
    "end": "2273000"
  },
  {
    "text": "smaller number of fields and those fields are we want to sort of work on all of those fields at",
    "start": "2273000",
    "end": "2278119"
  },
  {
    "text": "uh simultaneously um but but the individual Fields aren't supposed to mess up the",
    "start": "2278119",
    "end": "2283480"
  },
  {
    "text": "other ones uh and uh so uh the",
    "start": "2283480",
    "end": "2289880"
  },
  {
    "text": "um uh the next trick I want to show you is is is due to Hank Deets um and uh",
    "start": "2289880",
    "end": "2297079"
  },
  {
    "text": "it's to take the average of of of of of corresponding bites so so I have a word X that's uh that has the 8 bytes X1 X2",
    "start": "2297079",
    "end": "2306319"
  },
  {
    "text": "up to X8 in a 64-bit word uh and Y is y1 Y 2 uh Y8 and I want to get Z which uh",
    "start": "2306319",
    "end": "2316240"
  },
  {
    "text": "you know Z1 uh through Z8 where ZJ is equal to",
    "start": "2316240",
    "end": "2321440"
  },
  {
    "text": "the average of XJ plus YJ over two like like like average these guys out so so",
    "start": "2321440",
    "end": "2328680"
  },
  {
    "text": "of course I want to do some kind of something like addition uh here's the here's the uh D's",
    "start": "2328680",
    "end": "2335760"
  },
  {
    "text": "formula uh first of all I set Z to X exclusive or",
    "start": "2335760",
    "end": "2342640"
  },
  {
    "text": "Y and um L Bar I'll explain this in a",
    "start": "2342640",
    "end": "2349800"
  },
  {
    "text": "minute and shift right one and then I take then I take X and Y and add it to",
    "start": "2349800",
    "end": "2357319"
  },
  {
    "text": "that guy so let's call this T instead so that's not to confuse the issue so so I",
    "start": "2357319",
    "end": "2362440"
  },
  {
    "text": "computed temporary number which is exclusive or anded with the uh with this L Bar and shifted right one I tell you",
    "start": "2362440",
    "end": "2369839"
  },
  {
    "text": "what l l is um and L is actually one one",
    "start": "2369839",
    "end": "2374960"
  },
  {
    "text": "one one one it's a one it's a one at the right position at the right of of every",
    "start": "2374960",
    "end": "2381079"
  },
  {
    "text": "bite it's simply a low bit there's eight of them",
    "start": "2381079",
    "end": "2386440"
  },
  {
    "text": "though 1 2 3 4 5 6 78 right so L has L",
    "start": "2386440",
    "end": "2392440"
  },
  {
    "text": "is is is a l bit there and so if you so what's happened here I I I exclusive",
    "start": "2392440",
    "end": "2398440"
  },
  {
    "text": "order X and Y and then I Ed with uh",
    "start": "2398440",
    "end": "2403599"
  },
  {
    "text": "saying that you don't have the low bit on so so that means I'm zeroing out the low bit so that when I shift it right",
    "start": "2403599",
    "end": "2409319"
  },
  {
    "text": "one it's not going to go into the wrong field so that's that's easy enough so so what I've done is I've exclusive wor",
    "start": "2409319",
    "end": "2414480"
  },
  {
    "text": "these guys and shifted them right one well then I and it and add that to add that to T and it's just another way of",
    "start": "2414480",
    "end": "2422000"
  },
  {
    "text": "writing the the well-known formula that to add two binary numbers uh you get it",
    "start": "2422000",
    "end": "2427079"
  },
  {
    "text": "is um X exclusive or Y plus the carries",
    "start": "2427079",
    "end": "2432520"
  },
  {
    "text": "uh and the carries are X and Y shifted shifted left one andan if you if you're",
    "start": "2432520",
    "end": "2439160"
  },
  {
    "text": "adding two two binary numbers together you take the exclusive form and you also have to have to have to add in the carries um this is a plus sign too um",
    "start": "2439160",
    "end": "2447839"
  },
  {
    "text": "but now we're dividing by two so really I wanted to shift you know I wanted to shift this right by one and not shift",
    "start": "2447839",
    "end": "2454560"
  },
  {
    "text": "this by one so that's what I've got here so uh uh I mean take the floor to to by",
    "start": "2454560",
    "end": "2461839"
  },
  {
    "text": "shifting right one so so that's the but it it's a formula you know that that uh",
    "start": "2461839",
    "end": "2468040"
  },
  {
    "text": "is so simple once you've seen it but but you say why didn't I think of that you know okay now okay um but",
    "start": "2468040",
    "end": "2477400"
  },
  {
    "text": "um more often I think we to um uh uh we",
    "start": "2477400",
    "end": "2484040"
  },
  {
    "text": "when we have a lot of bites um we're doing something where we want to say search through a whole bunch of btes and",
    "start": "2484040",
    "end": "2489560"
  },
  {
    "text": "quickly decide whether not one of the btes is zero uh for example you know I",
    "start": "2489560",
    "end": "2494640"
  },
  {
    "text": "think you all know the way uh the way uh uh programming languages like C and I'm",
    "start": "2494640",
    "end": "2501480"
  },
  {
    "text": "sure Java keep keep track of strings they they store characters U and then",
    "start": "2501480",
    "end": "2508119"
  },
  {
    "text": "then put a zero of a null character at the end and that that that instead of",
    "start": "2508119",
    "end": "2513200"
  },
  {
    "text": "you know saying somewhere else how long the string is they just say no here's where the spring starts and and it ends",
    "start": "2513200",
    "end": "2519560"
  },
  {
    "text": "at the first zero wherever that happens to be okay so uh let's imagine that we",
    "start": "2519560",
    "end": "2524599"
  },
  {
    "text": "want to figure out what's what the what the length of a string is um and of course it's obvious we look at the first",
    "start": "2524599",
    "end": "2530240"
  },
  {
    "text": "character is it zero no go on the second character third character until we until we find a zero but uh well this is",
    "start": "2530240",
    "end": "2537040"
  },
  {
    "text": "taking few instructions for every character it' be nice if we could sort of just glance at eight characters at",
    "start": "2537040",
    "end": "2542839"
  },
  {
    "text": "once let say we have a 64-bit machine and uh say uh is there any zeros in here",
    "start": "2542839",
    "end": "2548880"
  },
  {
    "text": "uh you know if not go on to the next okay well um here's a I used to think it",
    "start": "2548880",
    "end": "2554960"
  },
  {
    "text": "took four it took four or five instructions to do that there's you can do it with three uh so so X is equal to",
    "start": "2554960",
    "end": "2562440"
  },
  {
    "text": "you know eight eight eight bytes and I want to see if any of these is zero and",
    "start": "2562440",
    "end": "2567960"
  },
  {
    "text": "uh what you do is you um you compute H and x -",
    "start": "2567960",
    "end": "2574839"
  },
  {
    "text": "L and xar uh one two three uper now H is the is is",
    "start": "2574839",
    "end": "2582359"
  },
  {
    "text": "a is is um uh I'll write it in octal notation it's 80 80 80",
    "start": "2582359",
    "end": "2588800"
  },
  {
    "text": "80 um it's a one in the high in the high bit position of every field and L is uh",
    "start": "2588800",
    "end": "2596839"
  },
  {
    "text": "is heximal 01 I write this for heximal instead of the ox that that that that",
    "start": "2596839",
    "end": "2603559"
  },
  {
    "text": "see that language that okay so so so other words H has a one bit in the at",
    "start": "2603559",
    "end": "2609200"
  },
  {
    "text": "the top of every bite and L has a one bit at the bottom of every bite and and let's see what happens here well if",
    "start": "2609200",
    "end": "2615680"
  },
  {
    "text": "there if there aren't any zeros in in in the word um I claim that U",
    "start": "2615680",
    "end": "2623359"
  },
  {
    "text": "uh uh uh it's we're going to get zero here so so every one of these bytes it",
    "start": "2623359",
    "end": "2630520"
  },
  {
    "text": "is is non zero let's suppose so you know okay so what's happening then well I subtract one I I subtract one from that",
    "start": "2630520",
    "end": "2638640"
  },
  {
    "text": "bite I get x minus L and I've lost you know I I haven't borrowed into into",
    "start": "2638640",
    "end": "2644680"
  },
  {
    "text": "anywhere else I just I had some non-zero number I I subtracted one from it is still zero or positive right um then I",
    "start": "2644680",
    "end": "2655960"
  },
  {
    "text": "I I uh look at uh I end it with with the complement of this number so that means",
    "start": "2655960",
    "end": "2662680"
  },
  {
    "text": "that I I have to have a I have to have a bit that was Zero before before subtracting one uh but one after",
    "start": "2662680",
    "end": "2670000"
  },
  {
    "text": "subtracting one I'm sorry yeah it has to have a one after subtracting one because I because I'm",
    "start": "2670000",
    "end": "2676880"
  },
  {
    "text": "adding so I have to have a one from this and I have to have a one from which is which meant a zero originally so so so",
    "start": "2676880",
    "end": "2682520"
  },
  {
    "text": "i' I've had a bit that went uh that was Zero but after I subtracted one went to a one",
    "start": "2682520",
    "end": "2688720"
  },
  {
    "text": "um right but it also um uh uh so so so how can how can that be",
    "start": "2688720",
    "end": "2697240"
  },
  {
    "text": "um that that um you know if if if I if I had a",
    "start": "2697240",
    "end": "2702680"
  },
  {
    "text": "number like X is 1011 1 and I subtract one and I get",
    "start": "2702680",
    "end": "2711318"
  },
  {
    "text": "10111 um you know and right 1011 good",
    "start": "2711760",
    "end": "2717079"
  },
  {
    "text": "thank you and and so I would and you know so this is X this is x - one or x -",
    "start": "2717079",
    "end": "2724000"
  },
  {
    "text": "L in in our field and then I have X bar R is of course",
    "start": "2724000",
    "end": "2729440"
  },
  {
    "text": "01111 and so I I'm sitting here with 1 1 0 0 0 0 0 0 uh now I'm I'm I'm adding",
    "start": "2729440",
    "end": "2738559"
  },
  {
    "text": "this with h which means it that these ones have to go all the way to the to the left it can't happen so I'm getting",
    "start": "2738559",
    "end": "2744599"
  },
  {
    "text": "zero so so you know I'm getting zero if if all of these guys are are nonzero",
    "start": "2744599",
    "end": "2753079"
  },
  {
    "text": "but if it if at least one is is zero let's take the one that occurs most closest to the right and take a look at",
    "start": "2753079",
    "end": "2759559"
  },
  {
    "text": "it you find out that you get a one bit there I mean let's let's check it out you got a zero there so then you got so",
    "start": "2759559",
    "end": "2765839"
  },
  {
    "text": "so it's all zeros so I subtracted one so I got all ones there and and it and it it was enough to to do it now so so just",
    "start": "2765839",
    "end": "2773280"
  },
  {
    "text": "three operations uh uh to give test you know",
    "start": "2773280",
    "end": "2780440"
  },
  {
    "text": "in operations loading",
    "start": "2780440",
    "end": "2785078"
  },
  {
    "text": "uh exactly uh left most zero is uh so this",
    "start": "2790280",
    "end": "2795480"
  },
  {
    "text": "is the first example I know actually where into to like uh a little Indian uh",
    "start": "2795480",
    "end": "2802280"
  },
  {
    "text": "uh storing weight of storing strings the way they the way I mean I never understood why Intel did it the way the",
    "start": "2802280",
    "end": "2807960"
  },
  {
    "text": "way they do but uh but this case I can find the rightmost bite uh by looking at this number but uh but if I have to get",
    "start": "2807960",
    "end": "2814760"
  },
  {
    "text": "the leftmost bite I I I have to compute another another quantity with four",
    "start": "2814760",
    "end": "2820119"
  },
  {
    "text": "instructions that that will that will tell me what the left most light is uh so I don't want to dwell on this too",
    "start": "2820119",
    "end": "2825880"
  },
  {
    "text": "long but uh anyway uh here's my my point is that uh real quick we can we can look",
    "start": "2825880",
    "end": "2832440"
  },
  {
    "text": "at 8 byes at a time also maybe we're not searching for you have a question are",
    "start": "2832440",
    "end": "2838720"
  },
  {
    "text": "you assuming that you can get the complement of X without the instructions and and yeah I I'm assuming that that",
    "start": "2838720",
    "end": "2844880"
  },
  {
    "text": "that my Hardware does um uh allows me to to do and not in one instruction uh now",
    "start": "2844880",
    "end": "2852240"
  },
  {
    "text": "this is not true on all machines unfortunately but you know next you know it soon will be I mean as soon as people",
    "start": "2852240",
    "end": "2858319"
  },
  {
    "text": "know know these tricks they're they're not going to build these stupid machines right now right now in order to get and not on an Intel machine you have to you",
    "start": "2858319",
    "end": "2865599"
  },
  {
    "text": "have to put it into a floating Point register uh and use the you know and you have to set some flags and things like",
    "start": "2865599",
    "end": "2872079"
  },
  {
    "text": "this it's it's it's it's ridiculous but uh you know on on a decent computer um",
    "start": "2872079",
    "end": "2877880"
  },
  {
    "text": "which uh you know like power PC something so um so you know nips",
    "start": "2877880",
    "end": "2885880"
  },
  {
    "text": "whatever you they should have all of these my uh my uh",
    "start": "2885880",
    "end": "2893000"
  },
  {
    "text": "uh operation counting",
    "start": "2893000",
    "end": "2899400"
  },
  {
    "text": "assuming you",
    "start": "2899640",
    "end": "2902720"
  },
  {
    "text": "know you know sticking with stupid conventions about the machines that we happen to have right now I mean I also",
    "start": "2905000",
    "end": "2912280"
  },
  {
    "text": "uh you know u define division uh correctly instead of the way most",
    "start": "2912280",
    "end": "2918440"
  },
  {
    "text": "computers work okay so uh now uh let me",
    "start": "2918440",
    "end": "2923720"
  },
  {
    "text": "give you another example here um uh let's suppose well uh maybe we aren't",
    "start": "2923720",
    "end": "2930760"
  },
  {
    "text": "searching for zero maybe we want to find the first occurrence of some letter in a long string you know we're doing text",
    "start": "2930760",
    "end": "2936160"
  },
  {
    "text": "searching so so uh uh you know looking for the first occurrence of a or some character like a dollar sign so find the",
    "start": "2936160",
    "end": "2942760"
  },
  {
    "text": "first dollar sign in this text all right well what you do is you take the word X and you exclusive or with eight signs",
    "start": "2942760",
    "end": "2949280"
  },
  {
    "text": "and then you look for zero right okay so now now let me give you another example",
    "start": "2949280",
    "end": "2955079"
  },
  {
    "text": "uh this one was actually given by uh lesie Lamport who wrote the uh who wrote",
    "start": "2955079",
    "end": "2961200"
  },
  {
    "text": "one of the the the rare articles about this this subject his paper was published I I'm not sure sure 76 or",
    "start": "2961200",
    "end": "2967760"
  },
  {
    "text": "something like this uh when he worked at uh at Park maybe I don't know what",
    "start": "2967760",
    "end": "2973400"
  },
  {
    "text": "anyway U uh but he he wrote one of the first uh papers that discussed this kind of thing uh but he didn't know that",
    "start": "2973400",
    "end": "2979640"
  },
  {
    "text": "these tricks such good tricks existed so he actually took every bite and extended",
    "start": "2979640",
    "end": "2984680"
  },
  {
    "text": "it to 9bit uh but his paper suggested this this application and so here we",
    "start": "2984680",
    "end": "2990359"
  },
  {
    "text": "have um uh I suppose I have X U and and",
    "start": "2990359",
    "end": "2995680"
  },
  {
    "text": "Y and these are um uh you know btes and then then I want",
    "start": "2995680",
    "end": "3001960"
  },
  {
    "text": "Z Now um in this case the rule is ZJ is equal to XJ If X and Y are",
    "start": "3001960",
    "end": "3011040"
  },
  {
    "text": "equal but it's equal to an asterisk uh if they're not",
    "start": "3011040",
    "end": "3016480"
  },
  {
    "text": "equal okay so if they're equal you could choose either X or Y so so for example",
    "start": "3016480",
    "end": "3021720"
  },
  {
    "text": "you start out with a word like like like X is beaching and and Y is",
    "start": "3021720",
    "end": "3029799"
  },
  {
    "text": "beling then Z is",
    "start": "3029920",
    "end": "3035200"
  },
  {
    "text": "Bing okay that's the problem is is to convert beaching and belching",
    "start": "3035880",
    "end": "3041760"
  },
  {
    "text": "toing okay um now here's the here's the here's",
    "start": "3041760",
    "end": "3048559"
  },
  {
    "text": "the code um T is equal to this H this High",
    "start": "3048559",
    "end": "3055079"
  },
  {
    "text": "bit thing uh anded with and then you take the exclusive or of X and Y or",
    "start": "3055079",
    "end": "3061000"
  },
  {
    "text": "exclusive or of X and Y and H minus L you know okay we're we're not going to go through in detail you just have to",
    "start": "3061000",
    "end": "3066440"
  },
  {
    "text": "believe me on this one this gives me uh something that's inter that's anded with",
    "start": "3066440",
    "end": "3072040"
  },
  {
    "text": "h and so it's going to so in every bike we're either going to have a leading one or not and it's going to be a one actually",
    "start": "3072040",
    "end": "3079520"
  },
  {
    "text": "if x equals y in that character and or is it yeah if if if if they're unequal",
    "start": "3079520",
    "end": "3085200"
  },
  {
    "text": "it's going to give us a one and if they're equal it's going to be it's going to be zero so then I form a mask M",
    "start": "3085200",
    "end": "3091040"
  },
  {
    "text": "by taking t uh uh and uh left shifting",
    "start": "3091040",
    "end": "3096799"
  },
  {
    "text": "at one and subtracting T right shifting by seven this is going to give me a mask",
    "start": "3096799",
    "end": "3102280"
  },
  {
    "text": "that is uh either all ones or all zeros in each",
    "start": "3102280",
    "end": "3107760"
  },
  {
    "text": "bite then I do this and inserts an asterisk where where the thing is mased",
    "start": "3107760",
    "end": "3112839"
  },
  {
    "text": "and it and it and it otherwise it doesn't so so that's the that's the",
    "start": "3112839",
    "end": "3118520"
  },
  {
    "text": "solution to this problem one two 3 I've already done that",
    "start": "3118520",
    "end": "3124760"
  },
  {
    "text": "four five 6 7 8 9 10 11",
    "start": "3124760",
    "end": "3129880"
  },
  {
    "text": "instructions but this a you know harder to do you know we did eight characters",
    "start": "3129880",
    "end": "3135400"
  },
  {
    "text": "with 11 instructions so it's not not too bad um okay um now",
    "start": "3135400",
    "end": "3145319"
  },
  {
    "text": "uh the uh I got an exercise in here which I",
    "start": "3145319",
    "end": "3151799"
  },
  {
    "text": "which I had great fun writing uh which shows that we can go Way Beyond this um to the following in",
    "start": "3151799",
    "end": "3159799"
  },
  {
    "text": "the six in six operations suppose I have um a number X",
    "start": "3159799",
    "end": "3166400"
  },
  {
    "text": "that has six bytes eight bytes to it and I'm going to compute six operations on X",
    "start": "3166400",
    "end": "3172640"
  },
  {
    "text": "I'm going to I'm going to um exclusive or with a constant then I'm and call",
    "start": "3172640",
    "end": "3177920"
  },
  {
    "text": "that y then I'm going to uh take Y and and it with b and plus C another",
    "start": "3177920",
    "end": "3185240"
  },
  {
    "text": "constant or that with Y exclusive or with d and and the whole thing with e",
    "start": "3185240",
    "end": "3190760"
  },
  {
    "text": "now I'm supposed to this T this this T is supposed to be a bunch of flags shifted left seven so in each bite T is",
    "start": "3190760",
    "end": "3197760"
  },
  {
    "text": "supposed to start out with a one or a zero based on on eight criteria and each",
    "start": "3197760",
    "end": "3203760"
  },
  {
    "text": "bite is different uh I I'm actually numbering the bite 0 to 7 instead of 1 to8 here",
    "start": "3203760",
    "end": "3210480"
  },
  {
    "text": "the but so so in the leftmost in the leftmost bite um oh no I'm sorry the rightmost",
    "start": "3210480",
    "end": "3216440"
  },
  {
    "text": "bite here it's X7 through X1 I'm using U uh this this notation",
    "start": "3216440",
    "end": "3224000"
  },
  {
    "text": "now uh this is you know base 256 uh",
    "start": "3224000",
    "end": "3229280"
  },
  {
    "text": "arithmetic uh so in the rightmost bite I'm I'm saying that the flag should be",
    "start": "3229280",
    "end": "3234400"
  },
  {
    "text": "set if the character is exclamation point the next fite over is supposed to",
    "start": "3234400",
    "end": "3240480"
  },
  {
    "text": "be set if the character is not an asterisk the next character it's if it's",
    "start": "3240480",
    "end": "3246760"
  },
  {
    "text": "if it's if it comes Less in asky code than a capital A uh the the next one is if it comes",
    "start": "3246760",
    "end": "3254200"
  },
  {
    "text": "greater in asky code than a lowercase z and and here's greater than or equal",
    "start": "3254200",
    "end": "3259680"
  },
  {
    "text": "to a lowercase a uh this one is whether",
    "start": "3259680",
    "end": "3264720"
  },
  {
    "text": "it's asky code for for a decimal digit 0 to 9 and here it's a case where any any",
    "start": "3264720",
    "end": "3273200"
  },
  {
    "text": "bite that's less than or equal to 168 um and finally at the X7 I the flag",
    "start": "3273200",
    "end": "3281119"
  },
  {
    "text": "should be set if and only if it's one of these four characters uh that uh",
    "start": "3281119",
    "end": "3286640"
  },
  {
    "text": "represents a relation less equal greater than or or or question mark so so um the",
    "start": "3286640",
    "end": "3294200"
  },
  {
    "text": "point is you can do that operation doing eight eight eight different kinds of",
    "start": "3294200",
    "end": "3300640"
  },
  {
    "text": "tests on on on eight individual bytes in six operations if you just if you just",
    "start": "3300640",
    "end": "3306359"
  },
  {
    "text": "happen to know the magic constants a b c d and e now why is that true well um if",
    "start": "3306359",
    "end": "3312920"
  },
  {
    "text": "I had time I would explain the answer to you but you'll have to look yeah so so",
    "start": "3312920",
    "end": "3318599"
  },
  {
    "text": "now so so you know some of those tests were were less than some were less than or equal some were in a Range some",
    "start": "3318599",
    "end": "3325240"
  },
  {
    "text": "unequal test but we're doing it all simultaneously this okay now um uh when we're doing",
    "start": "3325240",
    "end": "3333280"
  },
  {
    "text": "instructions of this kind um uh the um uh okay let I guess I want to",
    "start": "3333280",
    "end": "3343480"
  },
  {
    "text": "say couple couple other things quick um uh elen bamp remarked to me 20 30 years",
    "start": "3343480",
    "end": "3351920"
  },
  {
    "text": "ago that uh people are building are putting more and more uh Gates on a chip",
    "start": "3351920",
    "end": "3357039"
  },
  {
    "text": "now you were getting n you know n uh uh logic flip flops on a chip uh where n",
    "start": "3357039",
    "end": "3362640"
  },
  {
    "text": "keeps getting larger and larger and larger uh but only if you look at the chips Only log in of those bit of those",
    "start": "3362640",
    "end": "3369680"
  },
  {
    "text": "flip flops are either flipping or flopping you know hardly anything is actually happening as far as changing",
    "start": "3369680",
    "end": "3375520"
  },
  {
    "text": "the state in in in inside of inside of the chips that we're building now you uh",
    "start": "3375520",
    "end": "3380559"
  },
  {
    "text": "this is uh I mean I'm not talking about a CPU chip but I'm talking about mostly about a memory chip where where almost",
    "start": "3380559",
    "end": "3387160"
  },
  {
    "text": "nothing is CH is is there but but the these are built you know these are these are large um integrated circuits so so",
    "start": "3387160",
    "end": "3393160"
  },
  {
    "text": "not much is happening it's so different from the the human brain where you know we got all our cells are somehow working",
    "start": "3393160",
    "end": "3400280"
  },
  {
    "text": "working together and and we're not saying okay now you go um uh so U uh of",
    "start": "3400280",
    "end": "3409240"
  },
  {
    "text": "course there an obvious source of inefficiency uh and Hardware designers",
    "start": "3409240",
    "end": "3414280"
  },
  {
    "text": "have been working for years to to to figure out how we can do some how we can",
    "start": "3414280",
    "end": "3419599"
  },
  {
    "text": "how we can do something so we can handle this and get a lot you know make use of all the all the potential power that's",
    "start": "3419599",
    "end": "3425480"
  },
  {
    "text": "that's that's there um and um uh so maybe this PL toic Computing uh will",
    "start": "3425480",
    "end": "3433559"
  },
  {
    "text": "will'll have some uh uh will lead to uh",
    "start": "3433559",
    "end": "3439319"
  },
  {
    "text": "some advances in this direction uh and for this I I recommend thinking of it as",
    "start": "3439319",
    "end": "3444880"
  },
  {
    "text": "trying to imagine a a a a brand new kind of computer that U has smart we might",
    "start": "3444880",
    "end": "3452400"
  },
  {
    "text": "think of having having smart memory so that that we're not doing these operations in",
    "start": "3452400",
    "end": "3457839"
  },
  {
    "text": "registers um but we're actually we're just saying to the memory go ahead and",
    "start": "3457839",
    "end": "3463200"
  },
  {
    "text": "do some logical ANS on on on what you have don't don't send it to me to do the",
    "start": "3463200",
    "end": "3469480"
  },
  {
    "text": "to do to do the operation and so I I'd like to assume that we might be able to build a machine that uh you know the",
    "start": "3469480",
    "end": "3476559"
  },
  {
    "text": "cycle time would be slower than the cycle times we're now asking for but uh",
    "start": "3476559",
    "end": "3482079"
  },
  {
    "text": "still uh the the words would be very wide uh and so we would tell the memory",
    "start": "3482079",
    "end": "3488039"
  },
  {
    "text": "you know okay do a large part of your memory now and uh and do a a bitwise",
    "start": "3488039",
    "end": "3494799"
  },
  {
    "text": "exclusive or of of these guys or even plus you know which which involves some",
    "start": "3494799",
    "end": "3500880"
  },
  {
    "text": "carry propagation uh and we also would want to be able to to shift by powers of",
    "start": "3500880",
    "end": "3506920"
  },
  {
    "text": "to um and and uh and now we could you could combine that with a normal memory",
    "start": "3506920",
    "end": "3512880"
  },
  {
    "text": "and uh uh to but just have these as different so this is rather like uh what",
    "start": "3512880",
    "end": "3519960"
  },
  {
    "text": "something that people have studied for a long time called simd computer which is a which which is a parallel machine",
    "start": "3519960",
    "end": "3526960"
  },
  {
    "text": "standing for single instruction multiple data where where the CPU is giving instructions and the and then uh out in",
    "start": "3526960",
    "end": "3534520"
  },
  {
    "text": "the uh uh uh and then then the different parallel units are all are all operating on these",
    "start": "3534520",
    "end": "3541000"
  },
  {
    "text": "instructions and uh and so last 10 years or so uh there's been",
    "start": "3541000",
    "end": "3548160"
  },
  {
    "text": "researchers of various parts of the world that are talking about what they call SW computation um this means simd within",
    "start": "3548160",
    "end": "3557240"
  },
  {
    "text": "a register um and and so uh they're",
    "start": "3557240",
    "end": "3562880"
  },
  {
    "text": "they're thinking yeah this stuff that we're that we're doing here with with Bing and so on that's very much like",
    "start": "3562880",
    "end": "3568520"
  },
  {
    "text": "like simd but we're doing it you know we're doing it in in our program so so",
    "start": "3568520",
    "end": "3573599"
  },
  {
    "text": "so we're using a Syd kind of approach but within a register um and uh and",
    "start": "3573599",
    "end": "3579720"
  },
  {
    "text": "there's even there's a nice uh you know there's there's uh some website but",
    "start": "3579720",
    "end": "3585319"
  },
  {
    "text": "there there's there's there's a compiler called the sarc compiler which where you can give it uh",
    "start": "3585319",
    "end": "3590890"
  },
  {
    "text": "[Music] uh some expansion to to the Sea language and and and and and uh it will figure",
    "start": "3590890",
    "end": "3597799"
  },
  {
    "text": "out some some rather clever techniques for um uh for doing these operations uh",
    "start": "3597799",
    "end": "3603839"
  },
  {
    "text": "without without you having to figure them out uh and and it'll it it'll do some packing and unpacking and and and",
    "start": "3603839",
    "end": "3609559"
  },
  {
    "text": "and clever stuff um uh I said earlier though I I think it's like time for",
    "start": "3609559",
    "end": "3614880"
  },
  {
    "text": "these ideas to go mainstream and for ordinary programmers not have to go to a special compiler for this and uh I'm and",
    "start": "3614880",
    "end": "3622200"
  },
  {
    "text": "I'm hoping that sometime we would we might even be able to uh uh make use of",
    "start": "3622200",
    "end": "3627640"
  },
  {
    "text": "these things with really wide words uh not within a register but in fact uh uh",
    "start": "3627640",
    "end": "3632720"
  },
  {
    "text": "within within a smart memory you I'm I'm doing doing some calculation uh in order to finish up I",
    "start": "3632720",
    "end": "3638960"
  },
  {
    "text": "want to I want to mention um uh then",
    "start": "3638960",
    "end": "3644319"
  },
  {
    "text": "two uh two things the first one is uh let's see yeah I got I think I have time",
    "start": "3644319",
    "end": "3651160"
  },
  {
    "text": "to do to do part of it so Von Pratt came up with this in the",
    "start": "3651160",
    "end": "3656520"
  },
  {
    "text": "7s um uh and showed that you can",
    "start": "3656520",
    "end": "3661559"
  },
  {
    "text": "multiply Boolean matrices extremely fast using such a",
    "start": "3661559",
    "end": "3666920"
  },
  {
    "text": "computer uh now let me let me explain this on a 64-bit register so suppose I",
    "start": "3666920",
    "end": "3673240"
  },
  {
    "text": "have suppose I have some uh I don't know I I could I could get a you know fairly",
    "start": "3673240",
    "end": "3678720"
  },
  {
    "text": "random idea but I can write down two 4x4 matrices of zeros and ones uh for uh",
    "start": "3678720",
    "end": "3685160"
  },
  {
    "text": "well whatever you want to put here and then uh I can multiply these together there's two ways to multiply 01 matrices",
    "start": "3685160",
    "end": "3692400"
  },
  {
    "text": "one is the Boolean way and one is the modulo two uh but anyway the first either case this would this would say",
    "start": "3692400",
    "end": "3698960"
  },
  {
    "text": "take the fourth row is one one one this one would say combine the second row and the fourth row so if we take exclusive",
    "start": "3698960",
    "end": "3705039"
  },
  {
    "text": "or this would be 1 0 1 1 but if I took ore I I could take",
    "start": "3705039",
    "end": "3711720"
  },
  {
    "text": "either logical or or or exclusive ore here and this is take the first row and",
    "start": "3711720",
    "end": "3717119"
  },
  {
    "text": "this one says do the bottom three rows so exclusive or the bottom three rows is 0 0 1 0o okay so this is matrix",
    "start": "3717119",
    "end": "3724440"
  },
  {
    "text": "multiplication mod to for example but I could also have done okay now I like to do this quickly",
    "start": "3724440",
    "end": "3733160"
  },
  {
    "text": "on a in a with a 64-bit register so let's suppose that I pack that I have my",
    "start": "3733160",
    "end": "3739200"
  },
  {
    "text": "64-bit register um and I and I I got",
    "start": "3739200",
    "end": "3744839"
  },
  {
    "text": "three quarters of it are zero and here I put here I put the Matrix so I have 0 0",
    "start": "3744839",
    "end": "3750039"
  },
  {
    "text": "0 1 0 1 0 1 and so on down here that's X",
    "start": "3750039",
    "end": "3755240"
  },
  {
    "text": "and then you know this is X and then Y and Y will be 16bit thing like this as",
    "start": "3755240",
    "end": "3760400"
  },
  {
    "text": "well and I'd like to and get Z in the same format with a fairly small number",
    "start": "3760400",
    "end": "3767400"
  },
  {
    "text": "of instructions okay well um so let's let's",
    "start": "3767400",
    "end": "3772440"
  },
  {
    "text": "suppose that this is a b c d e f g G H I J K L M N O P times a b c d e f g h i j",
    "start": "3772440",
    "end": "3785359"
  },
  {
    "text": "k l m n o p uh equals and then I'm not going to",
    "start": "3785359",
    "end": "3791799"
  },
  {
    "text": "write out the whole thing but as a a b plus BB this is exclusive or plus b e",
    "start": "3791799",
    "end": "3797000"
  },
  {
    "text": "plus c i plus DM and the",
    "start": "3797000",
    "end": "3803279"
  },
  {
    "text": "other this other 15 entries are similar so matrix multiplication",
    "start": "3803279",
    "end": "3810880"
  },
  {
    "text": "that starting out with a B CDE e f g h i j k up to p and and a through p",
    "start": "3810880",
    "end": "3820759"
  },
  {
    "text": "in let's let's uh on this here's the here's the",
    "start": "3821640",
    "end": "3828599"
  },
  {
    "text": "solution uh first off we say x is set to X or X left shift 16",
    "start": "3828599",
    "end": "3835839"
  },
  {
    "text": "and then X then after doing that I then I also shift left 32 so the first time I take",
    "start": "3835839",
    "end": "3842559"
  },
  {
    "text": "this and I shift left 16 and so I get two copies of it and I take this and I shift at 32 and I get copies so since I",
    "start": "3842559",
    "end": "3849880"
  },
  {
    "text": "have now built the register with that goes a through P A through P A through P",
    "start": "3849880",
    "end": "3855319"
  },
  {
    "text": "A through P four times same thing for y um so so I I I've got uh four I've got",
    "start": "3855319",
    "end": "3864640"
  },
  {
    "text": "my matrices replicated four",
    "start": "3864640",
    "end": "3869558"
  },
  {
    "text": "times the next thing I want to do is uh swapping",
    "start": "3871119",
    "end": "3878039"
  },
  {
    "text": "um bits that are 15 apart and I'm going to change X so that I got a a cc e e uh",
    "start": "3878039",
    "end": "3887319"
  },
  {
    "text": "so on o o and and then it's going to have BB d d and and with PP and and then",
    "start": "3887319",
    "end": "3894640"
  },
  {
    "text": "start a a c b c e e and so on like this so so these are these are 32 bits and 32",
    "start": "3894640",
    "end": "3900400"
  },
  {
    "text": "more bits in X and how do I get from here to here uh well I have to I have to",
    "start": "3900400",
    "end": "3905640"
  },
  {
    "text": "swap this a with this B and I have to swap this C with this B um and so then",
    "start": "3905640",
    "end": "3912240"
  },
  {
    "text": "then the C then um I'm sorry not that guy I want to swap the D with this with",
    "start": "3912240",
    "end": "3918640"
  },
  {
    "text": "this guy so so some pairs of elements that are 15 apart I want to I want to",
    "start": "3918640",
    "end": "3924200"
  },
  {
    "text": "swap um you can do that by taking",
    "start": "3924200",
    "end": "3930039"
  },
  {
    "text": "X um exclusive or X right shift",
    "start": "3930039",
    "end": "3936440"
  },
  {
    "text": "15 that shifts everything right 15 and then you end with some",
    "start": "3936440",
    "end": "3942720"
  },
  {
    "text": "mask which which has a one bit at at the right position of the guy you want to uh",
    "start": "3942720",
    "end": "3949720"
  },
  {
    "text": "you want to um uh flip and then you can say x is set to X exclusive or I'm sorry",
    "start": "3949720",
    "end": "3956240"
  },
  {
    "text": "T exclusive RT left",
    "start": "3956240",
    "end": "3961680"
  },
  {
    "text": "shift what is it X is",
    "start": "3961680",
    "end": "3966799"
  },
  {
    "text": "um",
    "start": "3966799",
    "end": "3969799"
  },
  {
    "text": "13 x is yeah X is",
    "start": "3971960",
    "end": "3977960"
  },
  {
    "text": "X left shift 15 uh this puts after I've masked It Off",
    "start": "3978640",
    "end": "3986440"
  },
  {
    "text": "in this position I'll have a exclusive or B in this position I'll have C exclusive or D um and I'll have zeros",
    "start": "3986440",
    "end": "3994839"
  },
  {
    "text": "elsewhere then I I I take that number and I shift it left 15 and so what I'm",
    "start": "3994839",
    "end": "4000760"
  },
  {
    "text": "doing is I'm changing the B to an a here and the and and this a to a b here",
    "start": "4000760",
    "end": "4008119"
  },
  {
    "text": "because I'm I'm exclusive I'm taking a exclus or b and adding it to or xoring",
    "start": "4008119",
    "end": "4014119"
  },
  {
    "text": "it to to B and that Chang is I mean b b with A+ B is a and a with a plus b is",
    "start": "4014119",
    "end": "4024559"
  },
  {
    "text": "B so so so so anyway these this is what 1 2 3 four five six operations swaps",
    "start": "4024559",
    "end": "4032640"
  },
  {
    "text": "guys that are 15 apart the ones that I want I choose this",
    "start": "4032640",
    "end": "4037839"
  },
  {
    "text": "okay and and and then I can shoot I can do it again with things that are 30 apart and I can get a a a a e e e e and",
    "start": "4037839",
    "end": "4045039"
  },
  {
    "text": "so like is with another with with another swap so I I can arrange things",
    "start": "4045039",
    "end": "4050279"
  },
  {
    "text": "so that I'm sitting here with x equals a a a a uh e e e um and uh uh it's going",
    "start": "4050279",
    "end": "4058400"
  },
  {
    "text": "to end up uh I'm going to have each of the uh I'm going to have the columns uh",
    "start": "4058400",
    "end": "4065279"
  },
  {
    "text": "a a e i m and then b f j m and end with d h LP it's going to have p p p p on the",
    "start": "4065279",
    "end": "4072799"
  },
  {
    "text": "right uh uh with the same similar pattern but instead of using 15 and 30",
    "start": "4072799",
    "end": "4078960"
  },
  {
    "text": "uh you use 12 and 24 it turns out you can get yal AB c d a uh",
    "start": "4078960",
    "end": "4086079"
  },
  {
    "text": "ABCD ABCD ABCD and then you can go EFG efgh efgh",
    "start": "4086079",
    "end": "4093440"
  },
  {
    "text": "efgh and so on and ending up with MN o uh but these are",
    "start": "4093440",
    "end": "4099199"
  },
  {
    "text": "caps cap A B C D um so these are the the elements of Y",
    "start": "4099199",
    "end": "4107040"
  },
  {
    "text": "but uh with with a little bit of of of Shifting and and exclusive oing asking",
    "start": "4107040",
    "end": "4114838"
  },
  {
    "text": "uh I can get that I can get the first row repeated four times and then the second row repeated four times and",
    "start": "4114839",
    "end": "4120278"
  },
  {
    "text": "ending up with mnop the last row repeat it four times now I compute X and",
    "start": "4120279",
    "end": "4128040"
  },
  {
    "text": "Y and I'm doing simultaneously 64 and operations so here I'm getting a",
    "start": "4128040",
    "end": "4134640"
  },
  {
    "text": "a and then I'm getting ab and AC and so on all the way up to",
    "start": "4134640",
    "end": "4140960"
  },
  {
    "text": "PP and uh now I look at this and it turns out that all I have to do is it is",
    "start": "4140960",
    "end": "4147159"
  },
  {
    "text": "is take these these four 16bit things and uh I I I take these 32 and I",
    "start": "4147159",
    "end": "4153719"
  },
  {
    "text": "exclusive more to these 32 and then I take these and exclusive more to these and I've got the the matrix product so I",
    "start": "4153719",
    "end": "4161719"
  },
  {
    "text": "had to go through fast but the the point is that I've used if I have two the D by two to the D",
    "start": "4161719",
    "end": "4168560"
  },
  {
    "text": "matrices um uh I I do 18d + 2 bitwise",
    "start": "4168560",
    "end": "4174880"
  },
  {
    "text": "operations and I've got the product um and uh so usually you know you you",
    "start": "4174880",
    "end": "4183600"
  },
  {
    "text": "talk about time for matrix multiplication of n by n Matrix is n cubed this is log n with a fairly small",
    "start": "4183600",
    "end": "4190880"
  },
  {
    "text": "constant of proportionality so so if you let let me take D equals 6 so there's 64",
    "start": "4190880",
    "end": "4196880"
  },
  {
    "text": "by 64 matrices so I so that's two to the 12 that's 4,000 some bits Al together uh",
    "start": "4196880",
    "end": "4204000"
  },
  {
    "text": "and in the other Matrix there's another 4,000 so I've got 8,000 bits in these matrices um and uh uh I'm doing um uh 6",
    "start": "4204000",
    "end": "4212960"
  },
  {
    "text": "* 18 for 108 110 operations I'm uh on these 8",
    "start": "4212960",
    "end": "4221320"
  },
  {
    "text": "8,000 bids with 110 operations you know that's only uh 18 80th as many bits as",
    "start": "4221320",
    "end": "4227159"
  },
  {
    "text": "there are bits um I multiplied these matrices together now how big was my",
    "start": "4227159",
    "end": "4233480"
  },
  {
    "text": "register uh my register is 2 to the D cubed um so I'm actually sitting here",
    "start": "4233480",
    "end": "4240719"
  },
  {
    "text": "with an 18 bit 2 to the 18th bits uh register so uh I'm sitting here",
    "start": "4240719",
    "end": "4247920"
  },
  {
    "text": "with rather wide words these are 20 256 uh kilobytes um uh but you know as smart",
    "start": "4247920",
    "end": "4255520"
  },
  {
    "text": "memory could do this and it's very and you know and with the low cycle time and so you know you could and and they also",
    "start": "4255520",
    "end": "4263280"
  },
  {
    "text": "showed many other operations uh Pratt and STM showed that many other",
    "start": "4263280",
    "end": "4268520"
  },
  {
    "text": "operations could be done efficiently uh with with with with this kind of",
    "start": "4268520",
    "end": "4274960"
  },
  {
    "text": "organization all right um so the last uh the last example uh uh well what should",
    "start": "4274960",
    "end": "4281960"
  },
  {
    "text": "I go through it or not I promise to say something about about this Lambda function and so and so",
    "start": "4281960",
    "end": "4289320"
  },
  {
    "text": "uh I think I can do it um uh uh but if you want to if you want to leave go ahead because uh you know I I know that",
    "start": "4289320",
    "end": "4296840"
  },
  {
    "text": "it's I've already spoken for an hour and 10 minutes um so here here here's the idea uh",
    "start": "4296840",
    "end": "4305560"
  },
  {
    "text": "suppose I want to calculate Lambda of X this is the I want to I want to know where's the leading one of X remember I",
    "start": "4305560",
    "end": "4311400"
  },
  {
    "text": "told you this was this was this seemed to be a tough problem um and let me",
    "start": "4311400",
    "end": "4316639"
  },
  {
    "text": "assume that X is is only 16 bits long uh I can I can reduce the 64-bit problem to",
    "start": "4316639",
    "end": "4323239"
  },
  {
    "text": "to a a 16-bit problem with a couple you know by by by looking at the four parts",
    "start": "4323239",
    "end": "4329000"
  },
  {
    "text": "of the words so now I've got a little bit of breathing room if I have if I have a 16bit",
    "start": "4329000",
    "end": "4334360"
  },
  {
    "text": "number um and um and so so X is is is is",
    "start": "4334360",
    "end": "4339880"
  },
  {
    "text": "a 16bit number and let's suppose X for example is 0 0 01 and then",
    "start": "4339880",
    "end": "4345800"
  },
  {
    "text": "uh 12 other bits that I don't know what they are um now I'm going to make four copies",
    "start": "4345800",
    "end": "4351800"
  },
  {
    "text": "of this number X so I so I got 0 0 01 here and you know you know anyway I'll",
    "start": "4351800",
    "end": "4358840"
  },
  {
    "text": "put I'll call it Alpha and I have alpha alpha alpha alpha U and uh and now I'm",
    "start": "4358840",
    "end": "4365360"
  },
  {
    "text": "going to now I'm going to uh uh form another magic magic constant here U and",
    "start": "4365360",
    "end": "4373040"
  },
  {
    "text": "the constant looks like this the first part I'll write it in um well I'll write it in binary one one one",
    "start": "4373040",
    "end": "4379080"
  },
  {
    "text": "one eight eight ones and eight zeros then the next one has four ones",
    "start": "4379080",
    "end": "4386199"
  },
  {
    "text": "four zeros four ones four zeros uh and then two ones two zeros and",
    "start": "4386199",
    "end": "4392639"
  },
  {
    "text": "so on over and over again uh I'm getting tired of this uh and then um 1",
    "start": "4392639",
    "end": "4401239"
  },
  {
    "text": "10111 okay so in hexad decimal it's ff00 0 F0 F0 c c c c and a a a a is this is",
    "start": "4401239",
    "end": "4413199"
  },
  {
    "text": "this constant here and so I'm going to um uh I'm going to this is my magic",
    "start": "4413199",
    "end": "4420800"
  },
  {
    "text": "constant um M for magic and then I so this is X uh replicated and so now I",
    "start": "4420800",
    "end": "4428280"
  },
  {
    "text": "take Y is equal to X and M so so what's so uh Y is going to have",
    "start": "4428280",
    "end": "4437320"
  },
  {
    "text": "four parts to it y0 y1 Y2 Y3 uh y0 is is",
    "start": "4437320",
    "end": "4444159"
  },
  {
    "text": "going to X let's say start out with three three zeros and a",
    "start": "4444159",
    "end": "4449199"
  },
  {
    "text": "one uh so it's going to repeat it's going to um start out looking like U",
    "start": "4449199",
    "end": "4454840"
  },
  {
    "text": "three zeros and a one and it's going to have four unknowns and it's going to have eight",
    "start": "4454840",
    "end": "4461600"
  },
  {
    "text": "zeros uh this is y0 y1 is going to start out 00 0 1 and and and then Z four",
    "start": "4461600",
    "end": "4471400"
  },
  {
    "text": "zeros um and then four unknowns and four zeros and Y 2 is going to be",
    "start": "4471400",
    "end": "4478840"
  },
  {
    "text": "um uh 0 0 0 Z and then um two unknowns two zeros two",
    "start": "4478840",
    "end": "4486360"
  },
  {
    "text": "unknowns two zeros two unknown two zeros and Y3 is going to be start out with four zeros and it's going to be like",
    "start": "4486360",
    "end": "4492760"
  },
  {
    "text": "this so I'm getting I'm I'm getting some crazy number by",
    "start": "4492760",
    "end": "4499120"
  },
  {
    "text": "taking this x here anding it with this with this uh U strange mask which",
    "start": "4499120",
    "end": "4506239"
  },
  {
    "text": "happens to be truth tables of different uh of different uh uh projection trunks",
    "start": "4506239",
    "end": "4512600"
  },
  {
    "text": "as well now um",
    "start": "4512600",
    "end": "4517880"
  },
  {
    "text": "the the uh the basic idea because I showed you that there's a",
    "start": "4517880",
    "end": "4525960"
  },
  {
    "text": "that there's an easy way to",
    "start": "4525960",
    "end": "4529040"
  },
  {
    "text": "test xal Lambda y that was remember that was if and only if",
    "start": "4532080",
    "end": "4538440"
  },
  {
    "text": "x if you take the XR it's less than or equal to the uh to The Logical and to",
    "start": "4538440",
    "end": "4544840"
  },
  {
    "text": "the bitwise and um and so now I've also got these techniques that were",
    "start": "4544840",
    "end": "4550159"
  },
  {
    "text": "introduced by Lamport which allow us to check uh whether one whether one bite is",
    "start": "4550159",
    "end": "4556159"
  },
  {
    "text": "less than another bite corresponding fields and so what I can do is simultaneously test to see whether if I",
    "start": "4556159",
    "end": "4563760"
  },
  {
    "text": "if if I throw out uh uh numbers whose whose Lambda has has a has a has a one",
    "start": "4563760",
    "end": "4571080"
  },
  {
    "text": "and it's eight you know Lambda is is a binary number and and it's got four bits to it",
    "start": "4571080",
    "end": "4576880"
  },
  {
    "text": "so if I I can calculate uh I can calculate whether Lambda is even or odd",
    "start": "4576880",
    "end": "4582719"
  },
  {
    "text": "by throwing out all of the all the um odd-numbered bits and seeing if I've changed",
    "start": "4582719",
    "end": "4588639"
  },
  {
    "text": "Lambda and I can tell whether Lambda X has it has a two in its in its in binary",
    "start": "4588639",
    "end": "4595679"
  },
  {
    "text": "expansion by by uh uh by throwing out uh all all leading bits that uh uh that are",
    "start": "4595679",
    "end": "4602520"
  },
  {
    "text": "in positions that have two in their in their expansion so then if I contest you know so then if I contest compare",
    "start": "4602520",
    "end": "4610199"
  },
  {
    "text": "compare um uh the exclusive or with the n these functions uh then I'll know",
    "start": "4610199",
    "end": "4616920"
  },
  {
    "text": "whether the bit was zero or one and and that's the point of this of of of this of this exercise and so I'm throwing up",
    "start": "4616920",
    "end": "4622880"
  },
  {
    "text": "so by taking this this magic constant I'm actually forming uh some some",
    "start": "4622880",
    "end": "4629280"
  },
  {
    "text": "changing on X so uh the um uh the bottom line is um that um I can",
    "start": "4629280",
    "end": "4638199"
  },
  {
    "text": "just show you the formula um and I don't want to get my pages out of order so I'll do it this",
    "start": "4638199",
    "end": "4644480"
  },
  {
    "text": "way this is Page formula 96 okay so so the magic magic",
    "start": "4644480",
    "end": "4654920"
  },
  {
    "text": "formula is this um I I I I I I um this was my my",
    "start": "4654920",
    "end": "4665639"
  },
  {
    "text": "funny M here and then I I I take H and I intersect it with Y or Y or H minus",
    "start": "4665639",
    "end": "4672520"
  },
  {
    "text": "xclusive or Y and where H has has these high high one bits in it and then uh uh",
    "start": "4672520",
    "end": "4678159"
  },
  {
    "text": "that gives me the of that I needed and and and then you",
    "start": "4678159",
    "end": "4684199"
  },
  {
    "text": "can sh bits to the right and collect them so it turns out that uh on",
    "start": "4684199",
    "end": "4690800"
  },
  {
    "text": "word um this is a competit this is is competitive with the way known to calculate the uh uh the position of the",
    "start": "4690800",
    "end": "4698320"
  },
  {
    "text": "of bit of a number and it to operations",
    "start": "4698320",
    "end": "4704320"
  },
  {
    "text": "in l log n steps so this there's an obvious way to do it in log n but this",
    "start": "4704320",
    "end": "4709560"
  },
  {
    "text": "is log log n which is very good because log log n never exceeds five I mean you",
    "start": "4709560",
    "end": "4716159"
  },
  {
    "text": "know if if if n is so big that log log n is six then we've already exceeded the size of the universe so so uh uh uh uh",
    "start": "4716159",
    "end": "4725800"
  },
  {
    "text": "it's a uh you know it's an example again then with that even if we allow our",
    "start": "4725800",
    "end": "4732239"
  },
  {
    "text": "words to get bigger we can do uh we we can do non non-trivial calculations so",
    "start": "4732239",
    "end": "4737880"
  },
  {
    "text": "once we understand technique so for my last I just want to show you this you",
    "start": "4737880",
    "end": "4743199"
  },
  {
    "text": "can look it up in the paper in 98 here this these are um",
    "start": "4743199",
    "end": "4748520"
  },
  {
    "text": "21 21 loic steps uh that that do a",
    "start": "4748520",
    "end": "4753960"
  },
  {
    "text": "calculation that uh that Mike Mike Patterson and I came up with this we were trying to prove that something was going to take log n steps and we found",
    "start": "4753960",
    "end": "4760560"
  },
  {
    "text": "out we could do it with a constant number of steps and the and the problem was that we w we were we were taking a",
    "start": "4760560",
    "end": "4766800"
  },
  {
    "text": "look at a at a binary number and we wanted to find where it had a zero followed by R ones in a row R is some",
    "start": "4766800",
    "end": "4776239"
  },
  {
    "text": "given number so like you know zero followed by 82 ones and I and I want to",
    "start": "4776239",
    "end": "4782520"
  },
  {
    "text": "I want to I want to put I want to mark all the all the zeros that have this property that they're followed by by 82",
    "start": "4782520",
    "end": "4789120"
  },
  {
    "text": "or more ones um and uh and uh that problem is equ equalent to to saying I",
    "start": "4789120",
    "end": "4797480"
  },
  {
    "text": "want xar and X shifted by 1 and X shifted by two and and so on up to X",
    "start": "4797480",
    "end": "4803600"
  },
  {
    "text": "shifted by 81 82 in know words the the number of uh you know I want I want this",
    "start": "4803600",
    "end": "4808840"
  },
  {
    "text": "to be a zero and I want all these all these guys to be one so to find this pattern U it looks like we're going to",
    "start": "4808840",
    "end": "4814639"
  },
  {
    "text": "you know to calculate this we would need something like log R steps where we",
    "start": "4814639",
    "end": "4820199"
  },
  {
    "text": "could sort of group these by TW but to our",
    "start": "4820199",
    "end": "4825320"
  },
  {
    "text": "we found that this uh these 21 steps actually you know we we we kept trying",
    "start": "4825320",
    "end": "4831920"
  },
  {
    "text": "to disprove it until we finally until we finally had a method that that took 60 steps then we cut it down to 40 and then",
    "start": "4831920",
    "end": "4838480"
  },
  {
    "text": "we cut it down to 30 and and we cut it down to 15 and then it didn't work and then we had to add a few more so so so",
    "start": "4838480",
    "end": "4845199"
  },
  {
    "text": "so this is just uh not you know so so it's um uh it it's just uh another",
    "start": "4845199",
    "end": "4853280"
  },
  {
    "text": "indication that that probably more things out there and it's very hard to prove that you can't do something with",
    "start": "4853280",
    "end": "4858560"
  },
  {
    "text": "these operations are are powerful and uh I I find that uh u i i i keep running",
    "start": "4858560",
    "end": "4866480"
  },
  {
    "text": "into more cases in my programs where I where where I can use this so this part",
    "start": "4866480",
    "end": "4872080"
  },
  {
    "text": "of is not going to be just about the uh fancy things but I also study applications to graph Theory to bitmap",
    "start": "4872080",
    "end": "4879560"
  },
  {
    "text": "Graphics uh and uh you know uh I I used it to uh uh calculate the gaps between",
    "start": "4879560",
    "end": "4886880"
  },
  {
    "text": "primes I just uh I I just found out that I that I set some World Records on that",
    "start": "4886880",
    "end": "4892679"
  },
  {
    "text": "in that regard because by by using this kind of operations so uh and I think if everybody uh would would know would know",
    "start": "4892679",
    "end": "4899600"
  },
  {
    "text": "these things their programs would get better so that's what I had to say for for today thanks for",
    "start": "4899600",
    "end": "4906400"
  },
  {
    "text": "listening happy to answer question questions one question it seems to me",
    "start": "4912719",
    "end": "4919280"
  },
  {
    "text": "that the naive look for why the ruler function is easy and the Lambda function is hard is that you've got this negation",
    "start": "4919280",
    "end": "4926000"
  },
  {
    "text": "operator that does most of the work for you negation operator yeah and I'm wondering if that means that the",
    "start": "4926000",
    "end": "4931360"
  },
  {
    "text": "negation operator is in practice going to be somewhat difficult to implement or whether there would be some so so",
    "start": "4931360",
    "end": "4938040"
  },
  {
    "text": "actually uh one can you know electrical engineers have have U",
    "start": "4938040",
    "end": "4944520"
  },
  {
    "text": "have implemented the negation oper uh now you could imagine a computer where somebody give you a uh a um dual",
    "start": "4944520",
    "end": "4952159"
  },
  {
    "text": "negation operator you know uh numbers carries propagate the other way carries",
    "start": "4952159",
    "end": "4958719"
  },
  {
    "text": "propagate to the right so on and Mike and I say well what what what if we had such a machine you know it turned out",
    "start": "4958719",
    "end": "4963920"
  },
  {
    "text": "and so so we have lower bounds saying that in order to reverse bits it takes log end steps U that's a that's a nice",
    "start": "4963920",
    "end": "4971280"
  },
  {
    "text": "theorem proved by uh milter uh and Monro uh and um and uh uh so so",
    "start": "4971280",
    "end": "4982360"
  },
  {
    "text": "bit reversal is known to be uh you know is known to take some extra time so so",
    "start": "4982360",
    "end": "4987920"
  },
  {
    "text": "if we built a machine that that also allowed us to do this then then we could do the Lambda operations faster and and",
    "start": "4987920",
    "end": "4993719"
  },
  {
    "text": "maybe you know why not maybe maybe we should build a machine that also allows you know to add U",
    "start": "4993719",
    "end": "5001480"
  },
  {
    "text": "um uh vertically instead of horizontally or something like that you know we we",
    "start": "5001480",
    "end": "5007080"
  },
  {
    "text": "because people know how to how to build those circuits uh and so that might make a lot of lot of other things Happ now",
    "start": "5007080",
    "end": "5013840"
  },
  {
    "text": "now in in the MX computer I I threw in um uh instructions that uh that that",
    "start": "5013840",
    "end": "5021760"
  },
  {
    "text": "will that that have built in Matrix multiply instruction on on on on on 64-bit words and when you combine that",
    "start": "5021760",
    "end": "5030280"
  },
  {
    "text": "with with with these other things exclusive or and so on then all of a sudden you you find that you can compute",
    "start": "5030280",
    "end": "5036639"
  },
  {
    "text": "cyclic parody codes faster you can multiply polinomial and you can do all kind of all kind of other other thing so",
    "start": "5036639",
    "end": "5043520"
  },
  {
    "text": "the question is probably what is the small number of Primitives that uh that",
    "start": "5043520",
    "end": "5049400"
  },
  {
    "text": "will uh you know that that each have have power but you can you can keep adding more and more more and more",
    "start": "5049400",
    "end": "5055400"
  },
  {
    "text": "operations but the uh um this this one Matrix multiply unified seven or eight",
    "start": "5055400",
    "end": "5062360"
  },
  {
    "text": "instructions on the alpha on the alpha computer for example and and did and did more than the alpha computer had so so it so",
    "start": "5062360",
    "end": "5070960"
  },
  {
    "text": "it but in order to design this a new kind of a computer it's going to take a genius I haven't worked out the problems",
    "start": "5070960",
    "end": "5077120"
  },
  {
    "text": "by any means but I but I'm just saying this is food for thought that what why can't we have a smart memory uh uh maybe",
    "start": "5077120",
    "end": "5084480"
  },
  {
    "text": "doing these things because the engineers have figured out how to how to do conventional memories maybe you know",
    "start": "5084480",
    "end": "5091880"
  },
  {
    "text": "it's not going to be that much harder for them to add now we we got better technology uh uh to uh",
    "start": "5091880",
    "end": "5098760"
  },
  {
    "text": "to make the memories do do more for",
    "start": "5098760",
    "end": "5103079"
  },
  {
    "text": "us question from this side yeah I was just G to point out that we can also um",
    "start": "5105199",
    "end": "5111440"
  },
  {
    "text": "slot the value of two variables without using a third variables by only using um",
    "start": "5111440",
    "end": "5117480"
  },
  {
    "text": "ex ex yeah that's a yeah that's a beautiful trick that that's that's",
    "start": "5117480",
    "end": "5123000"
  },
  {
    "text": "that's well known you take X to x or y y to X X or Y X X or Y and this and this",
    "start": "5123000",
    "end": "5131119"
  },
  {
    "text": "does it it swaps X and Y something what unless already get zero",
    "start": "5131119",
    "end": "5139000"
  },
  {
    "text": "I can't hear unless X and Y already equal then they get well these are the aling no yeah I'm assuming they're that",
    "start": "5139000",
    "end": "5146159"
  },
  {
    "text": "I can't do this with a sub I and a subj yeah",
    "start": "5146159",
    "end": "5152760"
  },
  {
    "text": "so so Jean Leon and his colleagues back in the 80s built programmable active",
    "start": "5160520",
    "end": "5165600"
  },
  {
    "text": "memories uh which would have been able to do a fair amount of this stuff I I'm",
    "start": "5165600",
    "end": "5171679"
  },
  {
    "text": "not sure whether that line of of engineering uh whether anything came out",
    "start": "5171679",
    "end": "5177520"
  },
  {
    "text": "of it or not you know about it is it I I didn't I hadn't heard about it I I mean I know he",
    "start": "5177520",
    "end": "5183480"
  },
  {
    "text": "started working on RSA chips uh uh this was probably before the RSA stuff yeah",
    "start": "5183480",
    "end": "5190560"
  },
  {
    "text": "yeah that was later yeah right so he but I'm uh but I'm referring to dem's work",
    "start": "5190560",
    "end": "5196880"
  },
  {
    "text": "uh okay another another thing I'm discussing here is what we call implicit data structures where where instead of",
    "start": "5196880",
    "end": "5203000"
  },
  {
    "text": "having pointer you you lot lot of times we have we have data structures that you can compute your way to the other part",
    "start": "5203000",
    "end": "5210520"
  },
  {
    "text": "other part of the structure instead of instead of linking instead of needing explicit link like a heap where where",
    "start": "5210520",
    "end": "5216440"
  },
  {
    "text": "you know that the father of node K is the parent of node K is K is K shifted",
    "start": "5216440",
    "end": "5223159"
  },
  {
    "text": "right one and and the children are 2K plus and 2k+ one uh and and uh and um",
    "start": "5223159",
    "end": "5230440"
  },
  {
    "text": "and so I I I I talk about what I call a sideways Heap which is another way of of",
    "start": "5230440",
    "end": "5235960"
  },
  {
    "text": "uh that uh doesn't seem to be as well known U implicit data structure and I",
    "start": "5235960",
    "end": "5242360"
  },
  {
    "text": "also have uh uh had a lot of fun with data structur based on hyperbolic geometry which which",
    "start": "5242360",
    "end": "5249400"
  },
  {
    "text": "are pretty weird um uh but but but it you can you can use bitwise operations to",
    "start": "5249400",
    "end": "5256880"
  },
  {
    "text": "find your way around uh and and uh a data structure without without so",
    "start": "5256880",
    "end": "5264760"
  },
  {
    "text": "much memory and uh these these this another important use of of this kind of",
    "start": "5264760",
    "end": "5270119"
  },
  {
    "text": "of this kind of thing now now now vmac con uh uh worked on on uh on unifying",
    "start": "5270119",
    "end": "5278119"
  },
  {
    "text": "data structures in in those days and uh uh so I'm referring to that work of his",
    "start": "5278119",
    "end": "5284000"
  },
  {
    "text": "but I don't know but I didn't know if of of this uh this approach of course if that was done in the early 80s then that",
    "start": "5284000",
    "end": "5290360"
  },
  {
    "text": "they wouldn't have had that uh the ability to build machines anywhere anywhere like",
    "start": "5290360",
    "end": "5296040"
  },
  {
    "text": "that we can do with with with f day technology right there was implemented with fpgas add-on cards that I see that",
    "start": "5296040",
    "end": "5303719"
  },
  {
    "text": "implemented pams with fga yeah yeah well I you know I don't see where these",
    "start": "5303719",
    "end": "5310440"
  },
  {
    "text": "techniques are going to would make Tech run any faster uh appreciably so you know it's",
    "start": "5310440",
    "end": "5316600"
  },
  {
    "text": "not general purpose there's there's lots of programs that problems that it solves really well but but I can't say that",
    "start": "5316600",
    "end": "5323480"
  },
  {
    "text": "that you know if I had a that that I would be able to uh",
    "start": "5323480",
    "end": "5328960"
  },
  {
    "text": "to a lot of these other things that people want fast fre transform they can",
    "start": "5328960",
    "end": "5334280"
  },
  {
    "text": "build a chip that's just good for fast fre transer so so uh uh so I I I have",
    "start": "5334280",
    "end": "5340840"
  },
  {
    "text": "I've never been any good at figuring out whether stuff is is uh is is commercially useful you know has any has",
    "start": "5340840",
    "end": "5347719"
  },
  {
    "text": "any any Financial value um I'm I'm Al excited by the ideas underlying it and",
    "start": "5347719",
    "end": "5354480"
  },
  {
    "text": "and so on but but uh it seems to me that this is that it",
    "start": "5354480",
    "end": "5360600"
  },
  {
    "text": "has enormous un untapped potential that that could very well lead to uh a way to",
    "start": "5360600",
    "end": "5368639"
  },
  {
    "text": "to make use of this of the fact that that we need a a good way to to",
    "start": "5368639",
    "end": "5375480"
  },
  {
    "text": "make smarter memories if we if we want to if we want to use things to their to",
    "start": "5375480",
    "end": "5380880"
  },
  {
    "text": "their uh potential yeah there was a uni computer",
    "start": "5380880",
    "end": "5387199"
  },
  {
    "text": "in late 60s oh what there was a univac computer in late 60s that had a bit revers uh you have that with with B",
    "start": "5387199",
    "end": "5394199"
  },
  {
    "text": "reverse instruction because uh all the vendors for the Navy were screwing up IO",
    "start": "5394199",
    "end": "5400199"
  },
  {
    "text": "and uh finally Captain Grace Hopper said that the hell is it every driver has a a",
    "start": "5400199",
    "end": "5406360"
  },
  {
    "text": "load register no up or bit reverse and then output I see so whether it was a",
    "start": "5406360",
    "end": "5412000"
  },
  {
    "text": "typewriter or printer or whatever oh I see and all these vendors were all messing up little Indian well little",
    "start": "5412000",
    "end": "5419239"
  },
  {
    "text": "endan big endian I know uh is is is is a but but switching switch swapping all in",
    "start": "5419239",
    "end": "5426760"
  },
  {
    "text": "bits instead of just bytes I'm not sure if I it was just eight bits yeah but the uh",
    "start": "5426760",
    "end": "5433360"
  },
  {
    "text": "yeah um that's uh that's done by one instruction",
    "start": "5433360",
    "end": "5440800"
  },
  {
    "text": "on MX of course but with the Matrix",
    "start": "5440800",
    "end": "5445118"
  },
  {
    "text": "multiply so yeah um when I'm looking at the complexity of these operations I wonder",
    "start": "5446960",
    "end": "5453560"
  },
  {
    "text": "if makes sense to distinguish the the Boolean operations and plus minus and",
    "start": "5453560",
    "end": "5459320"
  },
  {
    "text": "negation because uh on the hardware level they have different uh complexity",
    "start": "5459320",
    "end": "5464719"
  },
  {
    "text": "especially if for example when mapping these operations to fpgas they have also different latencies",
    "start": "5464719",
    "end": "5471840"
  },
  {
    "text": "plus the the fact that carries have to propagate uh makes",
    "start": "5471840",
    "end": "5478080"
  },
  {
    "text": "it makes makes addition definitely harder than than than than Boolean",
    "start": "5478080",
    "end": "5486520"
  },
  {
    "text": "operations for sure but but it's still in the class of that they call ac0 which",
    "start": "5486719",
    "end": "5493679"
  },
  {
    "text": "means that the complexity grows polom with the with the uh uh with the",
    "start": "5493679",
    "end": "5500800"
  },
  {
    "text": "logarithm of the of the of of of the of the size well multiplication is not",
    "start": "5500800",
    "end": "5507480"
  },
  {
    "text": "multiplication is is is is is is is is way above that so so uh um the",
    "start": "5507480",
    "end": "5517040"
  },
  {
    "text": "uh the but there it's something that that",
    "start": "5517040",
    "end": "5523760"
  },
  {
    "text": "that I that I should state that that that assuming that I can do um add in",
    "start": "5523760",
    "end": "5530719"
  },
  {
    "text": "one cycle time is is uh is is much more difficult than saying I can do um",
    "start": "5530719",
    "end": "5537360"
  },
  {
    "text": "bitwise and in one cycle time there there are uh very efficient",
    "start": "5537360",
    "end": "5544000"
  },
  {
    "text": "ways to do uh carry propagation uh that don't exist for",
    "start": "5544000",
    "end": "5550440"
  },
  {
    "text": "multiplication in in addition but they still still are much more complex than than simple than simple one bit at a",
    "start": "5550440",
    "end": "5559080"
  },
  {
    "text": "time oh thanks again",
    "start": "5562239",
    "end": "5567079"
  },
  {
    "text": "[Applause]",
    "start": "5569620",
    "end": "5572720"
  }
]