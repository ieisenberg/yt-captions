[
  {
    "text": "it's a pleasure to be here I think it's bit listen overdo visit to Stanford",
    "start": "12120",
    "end": "17160"
  },
  {
    "text": "probably I haven't been here for a long time even the supposition might link me for a long time but I'll talk about",
    "start": "17160",
    "end": "22919"
  },
  {
    "text": "memory system design and hopefully I'll give you some hope that we still have hope in this domain but before I start",
    "start": "22919",
    "end": "28559"
  },
  {
    "text": "very quickly what do I work on well clearly I work on memory memory memory storage and interconnects but I'm really",
    "start": "28559",
    "end": "35340"
  },
  {
    "text": "interested in computer architecture hardware software interface and also by informatics these are some of the things",
    "start": "35340",
    "end": "40379"
  },
  {
    "text": "that I my group looks at parallel architectures heterogeneous architectures GPUs we have big projects",
    "start": "40379",
    "end": "46800"
  },
  {
    "text": "relate to that I'm really interesting crossing the boundaries and hopefully you'll see teams of that in this talk system architecture boundary as well as",
    "start": "46800",
    "end": "53970"
  },
  {
    "text": "the architecture circuits boundary and going forward especially if you want to design more scalable memory systems I",
    "start": "53970",
    "end": "59160"
  },
  {
    "text": "think need to cross those boundaries even more than we have done in the past so you'll see themes of energy",
    "start": "59160",
    "end": "65219"
  },
  {
    "text": "efficiency fault tolerance and hardware security in this talk but basically we're like doing broad research spanning",
    "start": "65219",
    "end": "72270"
  },
  {
    "text": "application systems on logic with architecture at the center but that's kind of that little picture I have",
    "start": "72270",
    "end": "78329"
  },
  {
    "text": "related to the research and one of my interest is genome sequence analysis and assembly and this is a problem where",
    "start": "78329",
    "end": "84959"
  },
  {
    "text": "it's it's really that wood that motivates memory a lot I look at algorithms in this area but it's it's",
    "start": "84959",
    "end": "92279"
  },
  {
    "text": "it's a it's an area it's a big data area where we produce more data than we can",
    "start": "92279",
    "end": "98189"
  },
  {
    "text": "process today actually with the next-generation sequencing technologies which actually current generation but",
    "start": "98189",
    "end": "103979"
  },
  {
    "text": "I'll talk about memory in this talk and what are we talking about basically main",
    "start": "103979",
    "end": "109079"
  },
  {
    "text": "memory sits in between processor and caches and the storage and it's a critical component in all computing",
    "start": "109079",
    "end": "115049"
  },
  {
    "text": "systems we design basically we need to have some kind of working storage as Andy mentioned earlier and this system must scale in many many dimensions size",
    "start": "115049",
    "end": "122369"
  },
  {
    "text": "technology efficiency costs and the algorithms we use to manage it if you want to maintain the performance growth",
    "start": "122369",
    "end": "128310"
  },
  {
    "text": "and the technology scaling benefits and this is another view of the memory system this is my cartoonish picture of",
    "start": "128310",
    "end": "134430"
  },
  {
    "text": "it but there are two key points that I would like to make over here one is if you look at",
    "start": "134430",
    "end": "140310"
  },
  {
    "text": "the computation components in this cartoonish picture they're they're limited to the red parts basically",
    "start": "140310",
    "end": "145500"
  },
  {
    "text": "everything else is part of the memory system if we were designing these notes systems and there most of it is really",
    "start": "145500",
    "end": "151800"
  },
  {
    "text": "dedicated to moving and storing data and if you even if you look at the red parts internally a lot of it is dedicated to",
    "start": "151800",
    "end": "159120"
  },
  {
    "text": "moving and storing data we have the registers and interconnected l1 caches that I didn't paint and the second thing",
    "start": "159120",
    "end": "164310"
  },
  {
    "text": "is if you look at this most of the memory system is shared across these computational agents shared caches other",
    "start": "164310",
    "end": "170220"
  },
  {
    "text": "shared cache is shared memory controllers shared memory shared interconnects and that leads to quality of service problems I'll briefly talk",
    "start": "170220",
    "end": "176010"
  },
  {
    "text": "about that today let me tell you a little bit about the state of the main memory system as I see it today there",
    "start": "176010",
    "end": "181650"
  },
  {
    "text": "are some recent technology architecture and application trends that lead to some new requirements is demand that also",
    "start": "181650",
    "end": "186930"
  },
  {
    "text": "exacerbate some old requirement and we've always demanded a lot from the system and we're demanding even more",
    "start": "186930",
    "end": "192470"
  },
  {
    "text": "opposite that DM and memory controllers as we know them and as we design them today are unlikely or they are not able",
    "start": "192470",
    "end": "199980"
  },
  {
    "text": "to satisfy all of these requirements and I'll hopefully give you some evidence from the field based on some of the studies we've done and at the same time",
    "start": "199980",
    "end": "206549"
  },
  {
    "text": "there are some emerging memory technologies that happen to be non-volatile that enable some new opportunities like the merging of memory",
    "start": "206549",
    "end": "212340"
  },
  {
    "text": "and storage so hopefully we'll get to the end of the talk well I'll talk about that given these I believe we need to",
    "start": "212340",
    "end": "217410"
  },
  {
    "text": "rethink the entire main memory system and the system we design around it or the systems we design around it",
    "start": "217410",
    "end": "223109"
  },
  {
    "text": "to fix the issues we're having with DRAM and enable some of these emerging memory technologies while satisfying all the",
    "start": "223109",
    "end": "229410"
  },
  {
    "text": "requirements that we demand from it so the set outline of my talk this actually this could be a really long talk this",
    "start": "229410",
    "end": "234930"
  },
  {
    "text": "could be days and days but I'm going to compress it to one hour eight minutes remaining feel free to ask questions I",
    "start": "234930",
    "end": "240989"
  },
  {
    "text": "may need to limit it given that we have a time limitation but I'd be happy to have a discussion afterwards or some",
    "start": "240989",
    "end": "246450"
  },
  {
    "text": "other time as well feel free to email me but I'll talk about the major trends affecting main memory and then I'll pose",
    "start": "246450",
    "end": "252000"
  },
  {
    "text": "everything as a memory scaling problem and talk about two major solution directions looking at new memory architectures and enabling emerging",
    "start": "252000",
    "end": "257850"
  },
  {
    "text": "memory technologies and circle back and talk about how we can do better draw some principles hopefully hopefully none",
    "start": "257850",
    "end": "263520"
  },
  {
    "text": "of this will be surprising principles because a lot of them will be applied from some other domains and then I'll",
    "start": "263520",
    "end": "269130"
  },
  {
    "text": "summarize this isn't one slide the major trends that are affecting main memory as I see them",
    "start": "269130",
    "end": "274320"
  },
  {
    "text": "first we're demanding more memory bandwidth capacity and quality of service and this is really driven by",
    "start": "274320",
    "end": "280620"
  },
  {
    "text": "three major things we're putting increasingly more computational agents on the chip they're sharing the",
    "start": "280620",
    "end": "286710"
  },
  {
    "text": "bandwidth they're sharing the capacity they're sharing the resources as a result you have a predictability problem",
    "start": "286710",
    "end": "291980"
  },
  {
    "text": "applications are becoming increasingly data intensive you have and this is not going to change probably we're at the",
    "start": "291980",
    "end": "297750"
  },
  {
    "text": "points in in civilization today we're generating the most data and we're going to generate even more in my opinion and",
    "start": "297750",
    "end": "303870"
  },
  {
    "text": "we want to consolidate more and more regardless of what every system you design cell phone data center dot dot we",
    "start": "303870",
    "end": "310620"
  },
  {
    "text": "would like to put more applications running on the node such that we can get area cost and energy efficiency benefits",
    "start": "310620",
    "end": "317010"
  },
  {
    "text": "and this is driving the capacity bandwidth and quality of service requirements up this is just one example the capacity gap the sector from a paper",
    "start": "317010",
    "end": "323490"
  },
  {
    "text": "that was published by HP Labs on University of Michigan iske 2009 basically they plotted the core count",
    "start": "323490",
    "end": "328830"
  },
  {
    "text": "which is doubling approximately every two years they applied the DMM capacity which is doubling approximately every three years and they've shown that",
    "start": "328830",
    "end": "335490"
  },
  {
    "text": "memory capacity per cores expect to drop by 30% every two years now if the program is relying on a thread getting",
    "start": "335490",
    "end": "342180"
  },
  {
    "text": "more memory such that you can write more feature full software then that's not going to happen assuming you're utilizing your resource",
    "start": "342180",
    "end": "348630"
  },
  {
    "text": "as well and the trends are actually much worse for memory bandwidth per core memory bandwidth grows by approximately",
    "start": "348630",
    "end": "354930"
  },
  {
    "text": "10 percent every year with some bumps maybe but basically we're designing these systems where computation is",
    "start": "354930",
    "end": "361740"
  },
  {
    "text": "increasing growing much faster than we can provide capacity and bandwidth basically mister is starving the course",
    "start": "361740",
    "end": "367580"
  },
  {
    "text": "the second major system trend in memory is energy and power is the key system",
    "start": "367580",
    "end": "372630"
  },
  {
    "text": "design concern and this has been like that for a while except it's getting much worse today there's a really nice paper by Charles",
    "start": "372630",
    "end": "378600"
  },
  {
    "text": "lafurgey and others at IBM Research where they published real data from big iron systems of IBM in 2003 and they've",
    "start": "378600",
    "end": "385890"
  },
  {
    "text": "shown that approximately 40 to 50 percent of the entire system energy in this big iron system to spent on the off",
    "start": "385890",
    "end": "391020"
  },
  {
    "text": "chip memory hierarchy including the off chip interconnect off chip caches off chip DRAM and off chip storage and",
    "start": "391020",
    "end": "397080"
  },
  {
    "text": "that's a big fraction and other people have repeated the studies on mobile systems and one issue we're having with",
    "start": "397080",
    "end": "403140"
  },
  {
    "text": "DRM is it consumes power even when it's not used we basically need to periodically refresh it that's actually a big scaling problem of",
    "start": "403140",
    "end": "409620"
  },
  {
    "text": "the UN today which brings me to my third point DM technology scaling is ending and offending is a strong word you can",
    "start": "409620",
    "end": "416850"
  },
  {
    "text": "choose the other word which is becoming really difficult to deal with but ITRs",
    "start": "416850",
    "end": "422280"
  },
  {
    "text": "international technology roadmap of semiconductors has been projecting for a while that year and will not easily",
    "start": "422280",
    "end": "427410"
  },
  {
    "text": "scale below X nanometers anybody has a value assigned to X tree wow that's",
    "start": "427410",
    "end": "434160"
  },
  {
    "text": "that's very optimistic maybe yeah we'll see it may become 3 but definitely",
    "start": "434160",
    "end": "441330"
  },
  {
    "text": "driving that X down will be increasingly more difficult for us and I'll hopefully give you some evidence from the field",
    "start": "441330",
    "end": "447860"
  },
  {
    "text": "that we're actually seeing the scaling issues feeling the scaling issues but",
    "start": "447860",
    "end": "452940"
  },
  {
    "text": "scaling what do I mean by scaling basically reduce the size of the circuit and that reduces that provides you many benefits high capacity higher density",
    "start": "452940",
    "end": "459810"
  },
  {
    "text": "lower costs and hopefully reasonable energy scaling and if this ends we're not going to be able to satisfy these",
    "start": "459810",
    "end": "465690"
  },
  {
    "text": "requirements really well at least with the technology the way we have known it so let me pose everything as the memory",
    "start": "465690",
    "end": "471600"
  },
  {
    "text": "scaling problem and talk about some motivate you a little bit more and then talk about some solution directions so what is the scaling problem we see with",
    "start": "471600",
    "end": "477720"
  },
  {
    "text": "DRM based the DRM like any other memory has a storage device and an access device and the storage device in DRM is",
    "start": "477720",
    "end": "484229"
  },
  {
    "text": "a capacitor access devices the access transistor the bitline and the sense amplifier over here and for this to work",
    "start": "484229",
    "end": "490919"
  },
  {
    "text": "well the capacitor must be large enough to real for reliable sensing and this access transistor must be large enough",
    "start": "490919",
    "end": "496110"
  },
  {
    "text": "for low leakage and high retention time such that you don't you keep the charge over here and this was actually the",
    "start": "496110",
    "end": "502800"
  },
  {
    "text": "value that was assigned to X by ITRs in 2009 basically they said scaling below 35 nanometers is challenging and they",
    "start": "502800",
    "end": "510090"
  },
  {
    "text": "were actually right in my opinion because of what I'll describe next except we're clearly below 35 nanometers",
    "start": "510090",
    "end": "517020"
  },
  {
    "text": "today the DRM manufacturers are actually manufacturing chips at 20 nanometers and below but it's clearly it's it's clear",
    "start": "517020",
    "end": "524190"
  },
  {
    "text": "that it's challenging when you reduce the size of the circuit both of these properties reliability properties and the retention property is difficult",
    "start": "524190",
    "end": "530279"
  },
  {
    "text": "become difficult much more difficult to maintain so let me give you an example from the field that my students and I",
    "start": "530279",
    "end": "537720"
  },
  {
    "text": "have found out and reported in the syska paper the idea is this is a rope hammer",
    "start": "537720",
    "end": "543340"
  },
  {
    "text": "problem basically if you take a DM chip that's manufactured after 2010 maybe for",
    "start": "543340",
    "end": "549580"
  },
  {
    "text": "2015 and if you actually do what I'm going to describe to that chip you'll",
    "start": "549580",
    "end": "554800"
  },
  {
    "text": "get errors in the chip and the idea is you can activate a row open arrow and then by applying high voltage to the",
    "start": "554800",
    "end": "561910"
  },
  {
    "text": "word line and then you can close the row by pre charging that word line basically go back to the lower voltage and if you",
    "start": "561910",
    "end": "568030"
  },
  {
    "text": "keep doing this enough times toggling the word line enough times within a refresh interval you get errors in",
    "start": "568030",
    "end": "574570"
  },
  {
    "text": "adjacent rows now this called the row hammer problem and this is actually a disturbance area basically it's a very fundamental to any",
    "start": "574570",
    "end": "580540"
  },
  {
    "text": "type of memory that scales down to smaller notes you're basically by",
    "start": "580540",
    "end": "585820"
  },
  {
    "text": "applying high voltage over here you're accelerating the charge leakage on some of the weak cells that that are due to",
    "start": "585820",
    "end": "593860"
  },
  {
    "text": "the word line to word line coupling that are in the adjacent row but they have nothing to do with this row over here",
    "start": "593860",
    "end": "601050"
  },
  {
    "text": "and we call this the hammered row and we call these the victim rows and basically we've shown that you can this is a",
    "start": "601050",
    "end": "608350"
  },
  {
    "text": "failure mechanism that is that I've escaped and that you can get exposed as a user in the field if you have the D um",
    "start": "608350",
    "end": "615610"
  },
  {
    "text": "chips and what fraction of the DRAM chips are vulnerable among the ones we've tested from three different manufacturers more than 80 percent",
    "start": "615610",
    "end": "621570"
  },
  {
    "text": "exhibit this error and you can actually write a simple program a seven line user",
    "start": "621570",
    "end": "628390"
  },
  {
    "text": "level program which we published at github so you can download then you can test on your laptops as we go through",
    "start": "628390",
    "end": "633610"
  },
  {
    "text": "this talk that's what this program does is it exercises that by bypassing the",
    "start": "633610",
    "end": "640150"
  },
  {
    "text": "caches and the selecting address is x and y such that they map to the same bank and basically ping-ponging we",
    "start": "640150",
    "end": "646990"
  },
  {
    "text": "activate some pre charges across those as a result of your vulnerable chip you get some errors and using this program",
    "start": "646990",
    "end": "655630"
  },
  {
    "text": "you can actually see that existing systems are vulnerable if they have the DRAM chip that exhibits the failure",
    "start": "655630",
    "end": "662740"
  },
  {
    "text": "mechanism and a more control it's a real reliability and security sham we'll talk about why it's a security in a little",
    "start": "662740",
    "end": "668110"
  },
  {
    "text": "bit but in a more controlled environment you can actually induce a lot more errors than what we've seen over here",
    "start": "668110",
    "end": "673990"
  },
  {
    "text": "and clearly the errors correlates with the access rates because you need to do it enough",
    "start": "673990",
    "end": "679660"
  },
  {
    "text": "time such that you accelerate the charge leakage and drain the capacitors such that before it gets refreshed so one",
    "start": "679660",
    "end": "685839"
  },
  {
    "text": "solution you can think of right now is you can actually refresh the UM more more frequently to get rid of these",
    "start": "685839",
    "end": "691179"
  },
  {
    "text": "errors and that's actually a viable solution except the results that we have in this paper suggest that if you want",
    "start": "691179",
    "end": "696279"
  },
  {
    "text": "to get rid of all of the errors you need to refresh the UM by seven times more at a faster rate okay so why is this a",
    "start": "696279",
    "end": "703329"
  },
  {
    "text": "scaling problem clearly this happens because you have word-line too we have interference between different cells and",
    "start": "703329",
    "end": "708519"
  },
  {
    "text": "as you scale the circuit down that interference becomes higher so we test the chips from 2008 to 2014 I know even",
    "start": "708519",
    "end": "716350"
  },
  {
    "text": "2015 right now it's not shown here the first time error appears in the chips that were manufactured in 2010 before",
    "start": "716350",
    "end": "722470"
  },
  {
    "text": "that there are no errors later between 2012 and 2013 the air manufacturers were not able to contain these errors and for",
    "start": "722470",
    "end": "729309"
  },
  {
    "text": "good reason because this requires a lot of testing if you can imagine what the testing goes into it and all of the all",
    "start": "729309",
    "end": "734679"
  },
  {
    "text": "of the chips that were manufactured during this period are actually vulnerable and later manufactures start realizing it and actually they have",
    "start": "734679",
    "end": "740649"
  },
  {
    "text": "mechanisms to fix these errors and we have this infrastructure where we tested DRM but this is the old version of the",
    "start": "740649",
    "end": "746920"
  },
  {
    "text": "interest it's the oldest version of the infrastructure and we have a newer version but I'll talk about some of these other works that I actually that",
    "start": "746920",
    "end": "753639"
  },
  {
    "text": "we used to derive some insights into into DM scaling and this is the latest version of the infrastructure I'd be",
    "start": "753639",
    "end": "759519"
  },
  {
    "text": "happy to talk about this and we're hoping that we'll put it into public use by expanding the memory controllers out",
    "start": "759519",
    "end": "766360"
  },
  {
    "text": "there but the paper has a lot of results so one interesting solution one interesting part of it is what is the",
    "start": "766360",
    "end": "771759"
  },
  {
    "text": "solution space you can imagine many many solutions to this error correcting codes could be one of them",
    "start": "771759",
    "end": "777279"
  },
  {
    "text": "and the sect that actually doesn't correct all of the errors according to our results and the solution we propose",
    "start": "777279",
    "end": "784299"
  },
  {
    "text": "very briefly is involves refresh these are the ideas if you access if you",
    "start": "784299",
    "end": "790329"
  },
  {
    "text": "activate a word line with very low probability activate the word lines around it such that you minimize the",
    "start": "790329",
    "end": "797170"
  },
  {
    "text": "risk of errors over over the long run and by doing this you can actually get reliable to guarantees that are much",
    "start": "797170",
    "end": "803139"
  },
  {
    "text": "better than hard desks today memory vendors because isn't it true",
    "start": "803139",
    "end": "808949"
  },
  {
    "text": "that if you look at memory built in self-test right back you know this walking ones working zeros and all that",
    "start": "808949",
    "end": "815639"
  },
  {
    "text": "stuff physically that goes after coupling cells and to combine that with",
    "start": "815639",
    "end": "821929"
  },
  {
    "text": "retention test physically they would be caught right that's why so did you talk",
    "start": "821929",
    "end": "830309"
  },
  {
    "text": "to the interior vendors to see like why no what was the motivation for letting",
    "start": "830309",
    "end": "835349"
  },
  {
    "text": "this test is not happening so maybe they didn't realize that we have talked with",
    "start": "835349",
    "end": "840539"
  },
  {
    "text": "it I mean they don't tell us why the errors happen clearly but I think there",
    "start": "840539",
    "end": "846329"
  },
  {
    "text": "are chemi tests that are designed but they're very costly as you said right and going forward it's going to be a big problem testing these DMS",
    "start": "846329",
    "end": "853649"
  },
  {
    "text": "I think but later after we published this past mark actually included a",
    "start": "853649",
    "end": "858749"
  },
  {
    "text": "hammer test in there in there mem test 86 program so you can actually have that test it can run it on your real systems",
    "start": "858749",
    "end": "867119"
  },
  {
    "text": "and I believe going forward this kind of failure mechanism will need to be tested to screen it out but we'll talk about",
    "start": "867119",
    "end": "872399"
  },
  {
    "text": "the D I'm testing a little bit more detail later on like by doing this thing",
    "start": "872399",
    "end": "877889"
  },
  {
    "text": "very somehow changing the specs of this",
    "start": "877889",
    "end": "881928"
  },
  {
    "text": "is not supposed to happen in the year because you shouldn't sub this a very predictable form of error I",
    "start": "885439",
    "end": "891029"
  },
  {
    "text": "should not get that so that's one of the",
    "start": "891029",
    "end": "900629"
  },
  {
    "text": "solutions that we've discussed how do you detect whether you're being hammered basically you need to keep track of the number of hammerings that happen and",
    "start": "900629",
    "end": "906389"
  },
  {
    "text": "that actually costs a lot of hardware I'd be happy to yeah it does cause we describe that in the paper actually so",
    "start": "906389",
    "end": "913319"
  },
  {
    "text": "this probabilistic refresh doesn't cost any hardware any state except you do it randomly and the problem is you need to",
    "start": "913319",
    "end": "918929"
  },
  {
    "text": "know which rows are adjacent to this row and today's memory controllers have no exposure to that information yeah so you",
    "start": "918929",
    "end": "925529"
  },
  {
    "text": "can do it with indium if you have slack in the timing but it's very difficult to do it on the memory controller side that's why I think we need some other",
    "start": "925529",
    "end": "931559"
  },
  {
    "text": "interface to fix some of these issues okay so we can talk about solutions",
    "start": "931559",
    "end": "936689"
  },
  {
    "text": "fascinating actually to talk about the solutions but I'd love one thing I will talk about is this is actually seems like a little hardware",
    "start": "936689",
    "end": "943030"
  },
  {
    "text": "problem but it actually affects a lot of the system security that we have built",
    "start": "943030",
    "end": "948130"
  },
  {
    "text": "things upon basically me wrote the paper the first sentence we had about memory isolations a key property of a reliable",
    "start": "948130",
    "end": "953950"
  },
  {
    "text": "and secure computing system and access to one memory address should not have unintended side effects on data stored in other addresses I mean you are pretty",
    "start": "953950",
    "end": "960130"
  },
  {
    "text": "sure that you could design an attack to take or an entire system and that's exactly what Google project 0 did in",
    "start": "960130",
    "end": "966490"
  },
  {
    "text": "March of this year what they did was they exploited this bug to gain kernel privileges and I'll copy from their blog",
    "start": "966490",
    "end": "973120"
  },
  {
    "text": "post basically it's for this slide they test the selection of laptops and they found that it's vulnerable to this problem and they built two different",
    "start": "973120",
    "end": "980070"
  },
  {
    "text": "privilege escalation exploits that use this and you can read it in more detail",
    "start": "980070",
    "end": "985420"
  },
  {
    "text": "but the cool thing is what they did was they were able to induce bit flips in",
    "start": "985420",
    "end": "990850"
  },
  {
    "text": "their page tape as a user level process and the page table entries and you can actually induce a bit foot in your",
    "start": "990850",
    "end": "996450"
  },
  {
    "text": "write-protect bit or write enable a bit that actually points your own page table as a result you gain write access to",
    "start": "996450",
    "end": "1002310"
  },
  {
    "text": "your own page table which means that you can write access to your entire physical memory that's how they were able to take",
    "start": "1002310",
    "end": "1007560"
  },
  {
    "text": "over 50% of laptops and recently there was some research coming out of Europe where they showed that you could",
    "start": "1007560",
    "end": "1012870"
  },
  {
    "text": "actually use the JavaScript to execute code remotely on some other computer that's well nerble throughout hammer bog",
    "start": "1012870",
    "end": "1018780"
  },
  {
    "text": "and you can take over that computer remotely so it's pretty interesting actually and later this became a kind of",
    "start": "1018780",
    "end": "1024240"
  },
  {
    "text": "popular and they people came up with funny pictures like this and one of the",
    "start": "1024240",
    "end": "1029579"
  },
  {
    "text": "quotes that I really liked on the website which really I think provides the insight to the security attack if",
    "start": "1029579",
    "end": "1034650"
  },
  {
    "text": "you want to gain access to that door we're there you keep hammering on the story enough times and that door opens",
    "start": "1034650",
    "end": "1039959"
  },
  {
    "text": "up and then you're getting privileged access to that door ok so let me recap",
    "start": "1039959",
    "end": "1045780"
  },
  {
    "text": "the DRAM scaling problem so I believe this is one evidence of the DM scaling problem and if you think about if you",
    "start": "1045780",
    "end": "1051030"
  },
  {
    "text": "take a step back there's nothing new here right all of the memories that they scale down they have these effects flash",
    "start": "1051030",
    "end": "1057480"
  },
  {
    "text": "memory for example is very prone to read disturb errors and flash memory has a controller that corrects those are in in",
    "start": "1057480",
    "end": "1063900"
  },
  {
    "text": "in hard disks you have adjacent track interference and there is a controller that fixes a lot of those issues but",
    "start": "1063900",
    "end": "1070470"
  },
  {
    "text": "indium we weren't used to these issues getting exposed so we need some solution but before that let me talk about one paper that Samsung",
    "start": "1070470",
    "end": "1077899"
  },
  {
    "text": "and Intel two unlikely partners to write papers together they've written this paper in the memory form 2014 that we've",
    "start": "1077899",
    "end": "1084380"
  },
  {
    "text": "organized with iske and they've pointed out some of the challenges which I will talk about later and they identify",
    "start": "1084380",
    "end": "1089630"
  },
  {
    "text": "refresh as a big challenge and variable retention time is a big challenge we'll talk about this in a little bit but it's",
    "start": "1089630",
    "end": "1095899"
  },
  {
    "text": "clear that the manufacturers are also seeing the problem and the solution they've described is similar to what has",
    "start": "1095899",
    "end": "1101330"
  },
  {
    "text": "been employed in other memories basic core architecting controllers and DM together such that because the process",
    "start": "1101330",
    "end": "1107059"
  },
  {
    "text": "or the device is not scaling we're about maybe you punt a little bit and thus it you enable the system to scale by Co",
    "start": "1107059",
    "end": "1113840"
  },
  {
    "text": "designing the system and the DM together so that brings me how do we solve the problem I'll talk about three the solution directions overall and then",
    "start": "1113840",
    "end": "1120260"
  },
  {
    "text": "we'll go into a bit more detail so the first solution is making DM and",
    "start": "1120260",
    "end": "1125269"
  },
  {
    "text": "controllers more intelligent fixing it basically since we cannot fix it well maybe we can fix it at the device stile",
    "start": "1125269",
    "end": "1130669"
  },
  {
    "text": "and circuit though I'm not precluding that possibility but I think a good direction to explore is to design the",
    "start": "1130669",
    "end": "1136370"
  },
  {
    "text": "system together with the DM looking at new interfaces new functions and new architectures the second solution",
    "start": "1136370",
    "end": "1142309"
  },
  {
    "text": "direction which is also promising in my opinion is somehow trying to eliminate or minimize the problem is it could come",
    "start": "1142309",
    "end": "1147440"
  },
  {
    "text": "up with a scalable technology that's much better than here and that doesn't have these issues good luck with that",
    "start": "1147440",
    "end": "1152450"
  },
  {
    "text": "but I think this is really interesting to explore basically this can open up new technologies and system-wide",
    "start": "1152450",
    "end": "1157490"
  },
  {
    "text": "rethinking of storage and memory depending on what kind of technologies you actually design and the third",
    "start": "1157490",
    "end": "1162529"
  },
  {
    "text": "solution reaction which may sound a little bit crazy sometimes is to embrace it maybe maybe we can design some",
    "start": "1162529",
    "end": "1168559"
  },
  {
    "text": "memories to be not reliable and design take advantage of the application level",
    "start": "1168559",
    "end": "1173830"
  },
  {
    "text": "characteristics and make use of these lemon memories and I think that's really interesting too because this can open up",
    "start": "1173830",
    "end": "1179659"
  },
  {
    "text": "new models for data management and maybe usage as long as we can do it appropriately and there may be other solution directions but I think",
    "start": "1179659",
    "end": "1185389"
  },
  {
    "text": "regardless of the solution direction you take good solutions to memory scaling in",
    "start": "1185389",
    "end": "1190639"
  },
  {
    "text": "the end will require software hardware and device cooperation especially given that historical examples we have in",
    "start": "1190639",
    "end": "1196159"
  },
  {
    "text": "other memories so we need to some rethinking across the stack so let me",
    "start": "1196159",
    "end": "1201200"
  },
  {
    "text": "very quickly talk about these solution directions and I'll talk about an orthogonal problem and then we'll go - solution directions so what do I mean",
    "start": "1201200",
    "end": "1208110"
  },
  {
    "text": "by fixing Giambi school you'd like to overcome the shortcomings that we have in the technology with what I call system dear I'm co.design this is not",
    "start": "1208110",
    "end": "1215010"
  },
  {
    "text": "this can open up new GM architectures interface them functions and the good thing is industry is actually interested",
    "start": "1215010",
    "end": "1220830"
  },
  {
    "text": "in doing something around this area that has not been the case traditionally in memory industry and we should do better",
    "start": "1220830",
    "end": "1227220"
  },
  {
    "text": "waste management more efficient utilization since the resource is not scaling very well so there are several key issues to tackle I'll touch on some",
    "start": "1227220",
    "end": "1233429"
  },
  {
    "text": "of them during the seminar one is enabling reliable T at low cost fixing problems like grow hammer and we'll talk",
    "start": "1233429",
    "end": "1240720"
  },
  {
    "text": "about that a little bit the second is reducing energy such that we can scale the memory and these are actually two sides of the same coin if you think",
    "start": "1240720",
    "end": "1246240"
  },
  {
    "text": "about it you can enable more reliability by expending more energy in fact apple solution to the RO hammer problem the",
    "start": "1246240",
    "end": "1253049"
  },
  {
    "text": "Apple released a security patch after after we've written our paper and group after Google's attack what they in the",
    "start": "1253049",
    "end": "1258990"
  },
  {
    "text": "security patch what they've said on the web is they increase the refresh rate to actually fix the roll camera problem -",
    "start": "1258990",
    "end": "1265549"
  },
  {
    "text": "the problem is if as you increase the refresh rate you increase your energy even though your enable reliable so",
    "start": "1265549",
    "end": "1271380"
  },
  {
    "text": "these are really two sides of the same coin and improving latency and bandwidth is important I'm not sure if I'll get to",
    "start": "1271380",
    "end": "1278400"
  },
  {
    "text": "talk about this but especially reducing latency there's a lot we can do in this area and um because we're really wasting",
    "start": "1278400",
    "end": "1284309"
  },
  {
    "text": "a lot of latency our timing parameters are for the design for the worst case and reducing waste in capacity bandwidth",
    "start": "1284309",
    "end": "1290070"
  },
  {
    "text": "and latency that's I think very promising also one thing that I will focus on that can help a lot and whose",
    "start": "1290070",
    "end": "1296039"
  },
  {
    "text": "an idea whose time may have may come if we design if you do the right things is enabling computation close to data",
    "start": "1296039",
    "end": "1302490"
  },
  {
    "text": "because we can actually potentially fix a lot of the issues we're having if we do this over here we don't not we not",
    "start": "1302490",
    "end": "1309240"
  },
  {
    "text": "only can enable computation but also management close to the data so I'll talk about some of the works that we",
    "start": "1309240",
    "end": "1314340"
  },
  {
    "text": "have in this area the second solution direction is the emerging memory take neither some emerging resistive memory",
    "start": "1314340",
    "end": "1320850"
  },
  {
    "text": "technologies and because they're resistive they're more skilled because they're not dependent on this charge storage and as a result and they're also",
    "start": "1320850",
    "end": "1328740"
  },
  {
    "text": "non-volatile one example is phase change memory there also other examples DTM Ram RM resistor Ram and these are expect to",
    "start": "1328740",
    "end": "1335309"
  },
  {
    "text": "scale to much smaller nanometers and I TS has been project that nine nanometers at the same time it",
    "start": "1335309",
    "end": "1340970"
  },
  {
    "text": "was projecting 35 nanometers hard for ya and they expect to be denser than the air and because these technologies can",
    "start": "1340970",
    "end": "1346880"
  },
  {
    "text": "store multiple bits per cell by chopping up the resistance range just like flash chops up the voltage range the problem",
    "start": "1346880",
    "end": "1353000"
  },
  {
    "text": "is a lot of these technologies have many shortcomings the key question we are asking is can we somehow enable them to",
    "start": "1353000",
    "end": "1358120"
  },
  {
    "text": "replace augment or maybe surpassed yeah if you and I'll talk about some of the",
    "start": "1358120",
    "end": "1364100"
  },
  {
    "text": "works in this area I think this is also very promising direction the third solution direction which I will also",
    "start": "1364100",
    "end": "1369230"
  },
  {
    "text": "talk about is doing something that looks like this it's this a cartoonish picture don't take it so seriously because it",
    "start": "1369230",
    "end": "1374780"
  },
  {
    "text": "could be designed a different way about designing hybrid memory systems people have searched for universal memory for a long time",
    "start": "1374780",
    "end": "1380420"
  },
  {
    "text": "Universal memory is a memory that's good oh and with green in all metrics but if we don't have green in all metrics if",
    "start": "1380420",
    "end": "1385790"
  },
  {
    "text": "you have some memories that are green at some things and red at some other things but in other memories that are green at some other things and red at some other",
    "start": "1385790",
    "end": "1392330"
  },
  {
    "text": "things yet other things maybe we can combine them together somehow and design",
    "start": "1392330",
    "end": "1397430"
  },
  {
    "text": "the hardware and the software together to manage the data allocation and movements to achieve the best of multiple technologies I think this is a",
    "start": "1397430",
    "end": "1402740"
  },
  {
    "text": "very promising direction going forward you can actually have the ERM of different types as well to be able to do",
    "start": "1402740",
    "end": "1408410"
  },
  {
    "text": "that let me give you one very quick example this is just as a teaser if you will but one of the promising directions",
    "start": "1408410",
    "end": "1415340"
  },
  {
    "text": "in my opinion is to exploit application level fault tolerance if you understand your application very well you can",
    "start": "1415340",
    "end": "1420890"
  },
  {
    "text": "potentially mark your data or understand your data based on its memory area",
    "start": "1420890",
    "end": "1425900"
  },
  {
    "text": "vulnerable so if you inject a bit flip to that portion of your data space",
    "start": "1425900",
    "end": "1431540"
  },
  {
    "text": "sometimes it doesn't matter that much because your application doesn't crash maybe a pixel changes maybe no one cares",
    "start": "1431540",
    "end": "1437660"
  },
  {
    "text": "and the end but sometimes it matters a lot maybe you change a pointer in your programming your index of the database",
    "start": "1437660",
    "end": "1442970"
  },
  {
    "text": "and that actually crashes the entire system so if you can somehow classify your data as vulnerable and tolerant you",
    "start": "1442970",
    "end": "1449930"
  },
  {
    "text": "can perhaps take advantage of this at the memory level design reliable versus low-cost memories maybe you don't care",
    "start": "1449930",
    "end": "1456140"
  },
  {
    "text": "about the row hammer folds as much over here and you can actually take advantage",
    "start": "1456140",
    "end": "1461150"
  },
  {
    "text": "of this so we actually have a case study of this with Microsoft's web search",
    "start": "1461150",
    "end": "1466670"
  },
  {
    "text": "workload in all our data centers the ECC memory is used so that you can protect for the errors",
    "start": "1466670",
    "end": "1472509"
  },
  {
    "text": "but this way you can get rid of a lot of the cost in memory by making some of",
    "start": "1472509",
    "end": "1477820"
  },
  {
    "text": "your memory low-cost that way you can reduce the hardware cost reasonably while still achieving a reasonable single server availability target so I",
    "start": "1477820",
    "end": "1484659"
  },
  {
    "text": "think this is one just one example that's just scratching the surface one example of a heterogeneous memory in",
    "start": "1484659",
    "end": "1490539"
  },
  {
    "text": "this case it's heterogeneous in terms of reliability but you can imagine heterogeneity in terms of different technologies as well and this was all",
    "start": "1490539",
    "end": "1497139"
  },
  {
    "text": "done manually by Gemma manually modifying the application it doesn't work for all application so if you actually do it for graph processing",
    "start": "1497139",
    "end": "1502570"
  },
  {
    "text": "applications it's actually very difficult unless you go very fine-grain in the data structures okay let me",
    "start": "1502570",
    "end": "1509919"
  },
  {
    "text": "briefly talk about an orthogonal issue and I'll talk about more specific solution ideas and this orthogonal issue",
    "start": "1509919",
    "end": "1515409"
  },
  {
    "text": "is really important in my I think that's why I don't want to remove these slides and the problem is you have this memory bus that's shared and the cores",
    "start": "1515409",
    "end": "1522729"
  },
  {
    "text": "interfere with this memory bus when they access the shared main memory and that's an interference problem if you don't",
    "start": "1522729",
    "end": "1528369"
  },
  {
    "text": "somehow control the interference which is actually the case in most systems today you can actually get an well",
    "start": "1528369",
    "end": "1535479"
  },
  {
    "text": "nerble system basically the memory controller can be optimizing for locality in the row buffer zone main",
    "start": "1535479",
    "end": "1540819"
  },
  {
    "text": "memory and an application may be very good at exploiting that locality as a result this application that is doing",
    "start": "1540819",
    "end": "1547479"
  },
  {
    "text": "random access that has bad locality will be deprioritized by the memory controller if your memory controller policy is to optimize for locality",
    "start": "1547479",
    "end": "1554319"
  },
  {
    "text": "without being application aware and as a result if you have unfair policies you can have an uncontrollable unpredictable",
    "start": "1554319",
    "end": "1560049"
  },
  {
    "text": "and vulnerable system and this becomes more important if you're running many more applications on top of on your note",
    "start": "1560049",
    "end": "1566469"
  },
  {
    "text": "where you're sharing the memory bus so how do you actually fix this problem we've been looking at this I'd love to talk about this with other people but",
    "start": "1566469",
    "end": "1572859"
  },
  {
    "text": "very quickly you need to design a quality of service of our memory system where the hardware provides at least",
    "start": "1572859",
    "end": "1578049"
  },
  {
    "text": "some sort of guarantees it provides a configurable fairness substrate",
    "start": "1578049",
    "end": "1583139"
  },
  {
    "text": "application of our memory scheduling policies ability to partition memory awareness of the memory to the higher",
    "start": "1583139",
    "end": "1589839"
  },
  {
    "text": "levels and throttling mechanism such that you don't overload your memory and software can be designed to configure",
    "start": "1589839",
    "end": "1596709"
  },
  {
    "text": "these resources to satisfy different quality of service goals so it's a hardware software cooperative problem",
    "start": "1596709",
    "end": "1601839"
  },
  {
    "text": "and this problem is going to be even more important because we're designing even more complex systems basically we have not",
    "start": "1601839",
    "end": "1608380"
  },
  {
    "text": "only course but GPUs and hardware accelerators they all have different demands from the system and they all share different parts of the memory",
    "start": "1608380",
    "end": "1614770"
  },
  {
    "text": "system and the memory is also getting more complex basically we have hybrid memories and hybrid memory controllers",
    "start": "1614770",
    "end": "1620140"
  },
  {
    "text": "that are controlling them the key question we're asking is how do you allocate the resources in the memory system to these heterogeneous agents to",
    "start": "1620140",
    "end": "1626200"
  },
  {
    "text": "mitigate the interference that's happening across these different agents well and provide predict provide",
    "start": "1626200",
    "end": "1631240"
  },
  {
    "text": "predictable performance to those agents that actually need that performance so one solution Direction very quickly this",
    "start": "1631240",
    "end": "1637090"
  },
  {
    "text": "is my last slide on the quality of service I think we've been looking at more best effort approaches but I think",
    "start": "1637090",
    "end": "1643510"
  },
  {
    "text": "going forward strong memory service guarantees is really important and the way we're thinking about the problem",
    "start": "1643510",
    "end": "1648910"
  },
  {
    "text": "currently is if we can somehow estimate the performance loss you have or slow",
    "start": "1648910",
    "end": "1654190"
  },
  {
    "text": "down you have for an agent when you're running together with other agents and",
    "start": "1654190",
    "end": "1659260"
  },
  {
    "text": "if you have an online model that can estimate this accurately you can actually use this in many ways at the",
    "start": "1659260",
    "end": "1665080"
  },
  {
    "text": "system level you can expose this to the operating system for example the operating system now has a very good idea of over this application is slowing",
    "start": "1665080",
    "end": "1671470"
  },
  {
    "text": "down a lot because it's sharing memory resources with the other application and if you design the mechanisms resource",
    "start": "1671470",
    "end": "1677380"
  },
  {
    "text": "partitioning mechanism or prioritization mechanisms in the caches and the interconnect and the hardware you can actually use these models to drive the",
    "start": "1677380",
    "end": "1684700"
  },
  {
    "text": "partitioning such that you satisfy the performance requirements of a given application you can now say oh this",
    "start": "1684700",
    "end": "1690340"
  },
  {
    "text": "application shouldn't be slowed down by 2x regardless of whatever I run it with and if you have this model and the model",
    "start": "1690340",
    "end": "1696520"
  },
  {
    "text": "is accurate you can try to satisfy that and if you cannot satisfy that then you punt the problem to the higher workload",
    "start": "1696520",
    "end": "1702250"
  },
  {
    "text": "schedule and the workload scheduler does something else today we don't have this guarantee from a single node as a result",
    "start": "1702250",
    "end": "1707500"
  },
  {
    "text": "I think we're under utilizing the single nodes a lot because if we want to provide these guarantees we want to be",
    "start": "1707500",
    "end": "1713620"
  },
  {
    "text": "we need to be conservative because hardware doesn't provide any guarantees underneath now it's changing in the cash level Intel actually has in has well the",
    "start": "1713620",
    "end": "1720310"
  },
  {
    "text": "quality of service mechanism such that you can partition the cache but going forward we need to look deeper into the memory of course you need to do this all",
    "start": "1720310",
    "end": "1726880"
  },
  {
    "text": "the while providing high system performance this goes without saying because fairness or quality of service is not a problem if you don't care about performance you",
    "start": "1726880",
    "end": "1733120"
  },
  {
    "text": "can design a thousand four thousand agent system and just run one agent on the system and everything else becomes",
    "start": "1733120",
    "end": "1738280"
  },
  {
    "text": "underutilized so I'm not going to talk about this but we are mechanism that's coming up it'll",
    "start": "1738280",
    "end": "1743429"
  },
  {
    "text": "be published in micro in December that talks about an application slowdown model that achieves about 10% error an",
    "start": "1743429",
    "end": "1750960"
  },
  {
    "text": "area of within 10% to do the slowdown estimation in caches and main memory",
    "start": "1750960",
    "end": "1757039"
  },
  {
    "text": "okay any questions so far am i speaking too fast okay cool oh now",
    "start": "1757039",
    "end": "1764010"
  },
  {
    "text": "we can actually I can increase my speed and you can throttle me back really I",
    "start": "1764010",
    "end": "1773909"
  },
  {
    "text": "don't think fresh takes a heck of a lot of energy it seems like so yeah it",
    "start": "1773909",
    "end": "1783090"
  },
  {
    "text": "depends on the solution so refresh I agree today it may not take a lot of energy but going forward we'll talk about it it will take more energy so",
    "start": "1783090",
    "end": "1789330"
  },
  {
    "text": "it's not a scalable solution going forward but it's a probably a good stopgap solution for today and I don't",
    "start": "1789330",
    "end": "1794850"
  },
  {
    "text": "know how much they increase the refresh rate they don't talk about that in that web post maybe 2x that's my guess but",
    "start": "1794850",
    "end": "1801600"
  },
  {
    "text": "maybe 4x also but 2x in our in our experiments 2x actually doesn't get rid of all the airs increasing refresh but I",
    "start": "1801600",
    "end": "1810450"
  },
  {
    "text": "think a targeted refresh more probabilistic refresh actually is very negligible in terms of energy and",
    "start": "1810450",
    "end": "1816510"
  },
  {
    "text": "performance yes I'll talk about some of",
    "start": "1816510",
    "end": "1829980"
  },
  {
    "text": "those here yeah basically the first part I will dedicate to new memory architectures I'll talk about rethinking",
    "start": "1829980",
    "end": "1836280"
  },
  {
    "text": "DM we have a lot of work in rethinking flash memory also we have a very similar infrastructure for flash memory where we",
    "start": "1836280",
    "end": "1841919"
  },
  {
    "text": "gained a lot of insights thanks to some of our industrial partners but I'm not going to talk about that but in a little",
    "start": "1841919",
    "end": "1849630"
  },
  {
    "text": "bit the second direction is enabling emerging memory technology so I'll dedicate some time on hybrid memory systems and single level memory and",
    "start": "1849630",
    "end": "1855390"
  },
  {
    "text": "storage so back to the future maybe a little bit but I'm not going to talk about the system level memory and",
    "start": "1855390",
    "end": "1861210"
  },
  {
    "text": "storage quality officers although that's a critical problem but we just don't have time so hopefully at the end of this talk you'll have a lot of hope that",
    "start": "1861210",
    "end": "1867240"
  },
  {
    "text": "we will fix the UM somehow but will also enable these emerging memory technology somehow and maybe design a predictable",
    "start": "1867240",
    "end": "1873360"
  },
  {
    "text": "system let me jump into the first one there's a lot to talk about dear I'm actually we've been focusing on this for",
    "start": "1873360",
    "end": "1879270"
  },
  {
    "text": "the past four or five years and I'll probably cover these these three very",
    "start": "1879270",
    "end": "1885270"
  },
  {
    "text": "quickly well not very quickly but these three let me start with in-memory computation because I think this an idea",
    "start": "1885270",
    "end": "1891630"
  },
  {
    "text": "whose time has come and why do I think it was its time has come because we're",
    "start": "1891630",
    "end": "1897090"
  },
  {
    "text": "feeling this technology push from the UM the I'm scaling is very difficult right now and take the vendors are very",
    "start": "1897090",
    "end": "1902970"
  },
  {
    "text": "interested in examining new solution directions for example the the paper that I mentioned from Samsung and Intel",
    "start": "1902970",
    "end": "1909030"
  },
  {
    "text": "one of the solutions that they propose is putting ECC inside the um in the um ECC this was a big no-no for vendors for",
    "start": "1909030",
    "end": "1916020"
  },
  {
    "text": "a long time you don't want to modify the sub-race because that has a lot of overhead but now they're thinking of",
    "start": "1916020",
    "end": "1921030"
  },
  {
    "text": "putting ECC because they're feeling the heat so if you actually can do things like that if you can put a logic layer",
    "start": "1921030",
    "end": "1926040"
  },
  {
    "text": "underneath um which some vendors have explored like hybrid memory cube then we can perhaps explore even more",
    "start": "1926040",
    "end": "1931950"
  },
  {
    "text": "interesting solutions that can change the model of execution that we have today and the second is in no time in",
    "start": "1931950",
    "end": "1939150"
  },
  {
    "text": "the system in the system design we have we've had in the decades we were so pressed by data movements and data",
    "start": "1939150",
    "end": "1948240"
  },
  {
    "text": "movement and storage being a bottleneck so far basically systems our energy limited data moment is the biggest cost",
    "start": "1948240",
    "end": "1953340"
  },
  {
    "text": "and applications are extremely data intensive both bandwidth and capacity so there's this application push also",
    "start": "1953340",
    "end": "1959580"
  },
  {
    "text": "that's driving us to do more on the memory side in my opinion and I'll talk about two approaches and this is a",
    "start": "1959580",
    "end": "1964830"
  },
  {
    "text": "really old idea that one of the in the in the late 1960s Harold stone from IBM Research actually he published the first",
    "start": "1964830",
    "end": "1971010"
  },
  {
    "text": "paper logic and memory and at that time that's in 1970 at that time the idea was",
    "start": "1971010",
    "end": "1976020"
  },
  {
    "text": "if you can put processors inside DRM we can do a lot more I'm not going to talk about that I think that's going to be",
    "start": "1976020",
    "end": "1981059"
  },
  {
    "text": "very difficult even though that some of those early works were really interesting I think we should think a",
    "start": "1981059",
    "end": "1986190"
  },
  {
    "text": "little bit differently perhaps today and one approach that has a lot of promise and surprising it hasn't been examined",
    "start": "1986190",
    "end": "1991410"
  },
  {
    "text": "as much as minimally changing the app I think we can minimally change the UM to enable simple yet powerful computation",
    "start": "1991410",
    "end": "1997650"
  },
  {
    "text": "primitives they can be limited but the arm can be used as an accelerator especially when you need it significantly so I'll talk about the",
    "start": "1997650",
    "end": "2004580"
  },
  {
    "text": "syllabus and the second solution direction which I will not talk about to exploit the lock control logic in the 3d stacked memory which hopefully will",
    "start": "2004580",
    "end": "2011060"
  },
  {
    "text": "exist such that you can enable more comprehensive computation near memory so this may be a more costly approach so",
    "start": "2011060",
    "end": "2017720"
  },
  {
    "text": "let me first focus on the first one but I'll talk very little if we have time at the end of the in memory computation",
    "start": "2017720",
    "end": "2023540"
  },
  {
    "text": "part so what do I mean by minimally changing the app so this is when we first started we were thinking about what is minimal changes",
    "start": "2023540",
    "end": "2030170"
  },
  {
    "text": "what is the I'm good at what can we do that we can provide and the first thing is you can imagine as both data copy",
    "start": "2030170",
    "end": "2036980"
  },
  {
    "text": "actually if we can do copying internally in the DRAM chip we can save a lot of energy now granted this is cheating",
    "start": "2036980",
    "end": "2042560"
  },
  {
    "text": "that's not computation but even that's not possible today so let's talk about the problem first if you want to copy",
    "start": "2042560",
    "end": "2048500"
  },
  {
    "text": "one page to another in memory today we go through the CPU as intermediary basically to bring the source page byte",
    "start": "2048500",
    "end": "2054620"
  },
  {
    "text": "by byte all the way into l1 the destination page byte by byte all the way into the l1 do the copy and write",
    "start": "2054620",
    "end": "2059629"
  },
  {
    "text": "the destination page all the way back into memory now with a 4 kilobyte this is still bad but if you think it",
    "start": "2059630",
    "end": "2065540"
  },
  {
    "text": "considered one you go back page that's actually overwhelms the system now you don't mind hopefully you're not doing copies with one gear by pages but that",
    "start": "2065540",
    "end": "2071898"
  },
  {
    "text": "could happen actually there initialization actually you initialization is a very special form of copy and initialization can consume a",
    "start": "2071899",
    "end": "2079100"
  },
  {
    "text": "lot of cycles but this is high latency because you do round trips across this most important system resource perhaps",
    "start": "2079100",
    "end": "2084919"
  },
  {
    "text": "this consumes high bandwidth on the data bus this cause cache pollution but you could eliminate that through the DMA",
    "start": "2084919",
    "end": "2090888"
  },
  {
    "text": "engine perhaps this cause unwanted data moment especially if you're not using the destination page at all soon",
    "start": "2090889",
    "end": "2097420"
  },
  {
    "text": "basically if you want to do this copy with the ddr3 technology for a four",
    "start": "2097420",
    "end": "2102650"
  },
  {
    "text": "kilobyte page through the DMA engine without taking take onto overheads of setting up and tearing down the DMA",
    "start": "2102650",
    "end": "2108980"
  },
  {
    "text": "basically it takes a thousand 46 nanoseconds and 3.6 micro joules now",
    "start": "2108980",
    "end": "2113990"
  },
  {
    "text": "wouldn't it be nice if we had the option in the system to tell the memory to do this and the memory doesn't bother",
    "start": "2113990",
    "end": "2119780"
  },
  {
    "text": "anyone else this would be low latency because I'm going to give you a mechanism multiple mechanisms actually",
    "start": "2119780",
    "end": "2125740"
  },
  {
    "text": "this will cause no bandwidth utilization on the date of us which is a major bottleneck this would cause no cache",
    "start": "2125740",
    "end": "2131540"
  },
  {
    "text": "pollution but you could eliminate that if you want today and this causes no unwanted data moment so it saves energy and I'm going to show you a mechanism",
    "start": "2131540",
    "end": "2138620"
  },
  {
    "text": "which in the best case reduces us at 46 nanoseconds for a 4 kilobyte copy 299 seconds and the 3.6 micro joules - 0.04",
    "start": "2138620",
    "end": "2145910"
  },
  {
    "text": "micro joules and the idea is actually really simple if you know about how diem operates in the subway level this is the",
    "start": "2145910",
    "end": "2153109"
  },
  {
    "text": "da I'm sorry if you want to read one byte over here or eight bits over here you really need to activate an entire",
    "start": "2153109",
    "end": "2158990"
  },
  {
    "text": "row and that drove let's say it's the same as page size four kilobyte you can",
    "start": "2158990",
    "end": "2164720"
  },
  {
    "text": "activate this row and then you take a read command to read the entire you know eight bits out of the straw buffer so",
    "start": "2164720",
    "end": "2171950"
  },
  {
    "text": "we're going to take advantage of this role of location to the row clone the idea is if you want to copy one source",
    "start": "2171950",
    "end": "2179270"
  },
  {
    "text": "page to a destination page EDDM first you activate the source row which brings the data into the sense amplifiers then",
    "start": "2179270",
    "end": "2185960"
  },
  {
    "text": "you send a command that deactivates the source row but activates the destination row and once you do do that the data and",
    "start": "2185960",
    "end": "2193099"
  },
  {
    "text": "the sense amplifiers actually start driving the destination cells as a result you've used the sense amplifiers as an intermediary to do the copy",
    "start": "2193099",
    "end": "2199609"
  },
  {
    "text": "basically by doing two consecutive activates you can do this copy really fast as long as the source and",
    "start": "2199609",
    "end": "2204619"
  },
  {
    "text": "destination rows share the sense amplifiers which means that they are in the same sub array and you cannot do",
    "start": "2204619",
    "end": "2210529"
  },
  {
    "text": "this in today's DM chips unfortunately because it's not enabled but this is very very little cost to do because",
    "start": "2210529",
    "end": "2220250"
  },
  {
    "text": "there's a DRM no memory built in self-test we can take advantage of the ng maybe just simply read it because the",
    "start": "2220250",
    "end": "2228260"
  },
  {
    "text": "this controller should be able to read and write write so they already have the registers and you said I think the",
    "start": "2228260",
    "end": "2236450"
  },
  {
    "text": "circuitry actually goes outside the subway so if you can't you can do it actually I agree it'll be slower than this yeah",
    "start": "2236450",
    "end": "2243849"
  },
  {
    "text": "absolutely yes absolutely and this the other solutions are going to resemble that yeah I agree with you certainly so",
    "start": "2243849",
    "end": "2251869"
  },
  {
    "text": "this is the fastest you can get I think in the subarrays and it's actually ninety nights like this two consecutive activates well I had modified the slide",
    "start": "2251869",
    "end": "2260539"
  },
  {
    "text": "but that's not 0.01 percent area caused by the 0.01 percent comes from generalizing it such that the data such",
    "start": "2260539",
    "end": "2266180"
  },
  {
    "text": "that you can do it in the entire within the chip so clearly this is not general",
    "start": "2266180",
    "end": "2272000"
  },
  {
    "text": "because it's limited the sub-race and actually rating system has no visibility to the sub race that's but we'll talk about",
    "start": "2272000",
    "end": "2278090"
  },
  {
    "text": "that so interests are very copy is just to activates but we would like to do it even if the data resides in different tanks so what we do is to have pipelines",
    "start": "2278090",
    "end": "2285680"
  },
  {
    "text": "internal reading right through the data bus internally in the DM basically you",
    "start": "2285680",
    "end": "2291320"
  },
  {
    "text": "have you set one bank to read mode to set the other bank to write mode and you can do arbitrary length data copies by",
    "start": "2291320",
    "end": "2298130"
  },
  {
    "text": "doing this and the hardest part which I'm not going to talk about where you can actually utilize the best circuitry is if you want to copy data from one",
    "start": "2298130",
    "end": "2305270"
  },
  {
    "text": "page over here in one sorry to another page in another sorry in the same Bank because they share the global bit lines",
    "start": "2305270",
    "end": "2310460"
  },
  {
    "text": "you cannot do that as fast as this so we act what we actually do is we use interbank copy twice but you could",
    "start": "2310460",
    "end": "2316670"
  },
  {
    "text": "actually use the bit circuitry also so all of this is 0.01 percent area cost",
    "start": "2316670",
    "end": "2321859"
  },
  {
    "text": "with our models of the UN so what is the savings you get clearly the savings you get depend on where the source and",
    "start": "2321859",
    "end": "2327290"
  },
  {
    "text": "destination pages are and hopefully if you expose the system the system can allocate the pages such that you get the",
    "start": "2327290",
    "end": "2332690"
  },
  {
    "text": "maximal savings that's one of the things that I will talk about in a little bit but basically if the source and destination are in the same sub Rea you",
    "start": "2332690",
    "end": "2339560"
  },
  {
    "text": "get 11 11 times latency reduction and the energy reduction is the DM energy only it's 74",
    "start": "2339560",
    "end": "2346190"
  },
  {
    "text": "X because you're not exercising that interconnect between DM n memory and clearly if it's between different banks",
    "start": "2346190",
    "end": "2352220"
  },
  {
    "text": "you save less energy and less latency but still you gain the worst case you",
    "start": "2352220",
    "end": "2357260"
  },
  {
    "text": "still save energy internally so what is the impact on the application performance these are",
    "start": "2357260",
    "end": "2362480"
  },
  {
    "text": "probably not the best applications I take all these with a grain of salt but basically it improves performance fork for example is the poster child for this",
    "start": "2362480",
    "end": "2369410"
  },
  {
    "text": "because it does a lot of copy-on-write in the end and if you're able to allocate so one thing if you if you're",
    "start": "2369410",
    "end": "2376190"
  },
  {
    "text": "doing copy on writes in the operating system and the operating system as visibility to the DM topology into the",
    "start": "2376190",
    "end": "2381380"
  },
  {
    "text": "sub race the operating system can say or when I'm writing to this page I need to do a copy at that point I'm going to",
    "start": "2381380",
    "end": "2387410"
  },
  {
    "text": "allocate that page from the same sub array as the source page today we don't have that visibility we really need",
    "start": "2387410",
    "end": "2392540"
  },
  {
    "text": "interfaces that are much better into memory such that we can do this kind of system level optimizations so if you do",
    "start": "2392540",
    "end": "2397670"
  },
  {
    "text": "that actually can gain a lot of performance and the papers a lot of analysis so system boot-up for example you can gain a lot of performance",
    "start": "2397670",
    "end": "2403010"
  },
  {
    "text": "basically the performance improvement score improvements correlate with the amount of copying an initialization that you do so",
    "start": "2403010",
    "end": "2410270"
  },
  {
    "text": "initialization is something that I very briefly touched on initialization is really a special form of copy basically",
    "start": "2410270",
    "end": "2415339"
  },
  {
    "text": "you want to zero initialize a huge chunk of memory you zero initialize a row and then copy that drove to other roles that",
    "start": "2415339",
    "end": "2420830"
  },
  {
    "text": "way you can actually get rid of a lot of the initialization penalty too and the performance improvement is even more in",
    "start": "2420830",
    "end": "2427580"
  },
  {
    "text": "multi-core systems because one when one application or one thread is doing copies you're freeing up the memory bus such that the other thread can actually",
    "start": "2427580",
    "end": "2433760"
  },
  {
    "text": "access memory so let's say let's assume that we had this role Cohen idea and I",
    "start": "2433760",
    "end": "2440180"
  },
  {
    "text": "think the eye manufactures are really interested in small changes like this that can actually impact a lot of applications we still are not done",
    "start": "2440180",
    "end": "2446900"
  },
  {
    "text": "clearly right you really need to have an end-to-end system designed to take advantage of something like this and this is true for all in memory",
    "start": "2446900",
    "end": "2452720"
  },
  {
    "text": "computation that I'm going to talk about but I'll use Rockland as an example we have this roeckl enabled DM how do you",
    "start": "2452720",
    "end": "2458119"
  },
  {
    "text": "take advantage of it first you definitely need to communicate occurrences of this bulk copy initialization or actually it doesn't",
    "start": "2458119",
    "end": "2466250"
  },
  {
    "text": "have to be both copy if you're doing interbank it has to be bucket if you're doing somebody across the layers so you tab mechanisms where this fortunately",
    "start": "2466250",
    "end": "2472250"
  },
  {
    "text": "summer I say is actually have this today the excited to have the repeat instructive X which you can use with",
    "start": "2472250",
    "end": "2477859"
  },
  {
    "text": "copying instructions ensuring cache coherence is critical and we have some mechanism for that that I'm not going to",
    "start": "2477859",
    "end": "2483740"
  },
  {
    "text": "talk about especially if you want to use this in the general-purpose domain and the special purpose domains for perhaps",
    "start": "2483740",
    "end": "2488810"
  },
  {
    "text": "you can ignore some of this early on but going forward to we need better mechanisms because this can actually dominate the costs of doing computation",
    "start": "2488810",
    "end": "2495859"
  },
  {
    "text": "and memory how do you maximize latency and energy savings so how do you make the operating system and the applications aware of the topology of",
    "start": "2495859",
    "end": "2502220"
  },
  {
    "text": "the DM and the computation capability such that you can get the best advantages as I've described if you make",
    "start": "2502220",
    "end": "2507619"
  },
  {
    "text": "the operating system aware of the subway or the DM topology you can get a lot more done and finally we don't want to",
    "start": "2507619",
    "end": "2514160"
  },
  {
    "text": "do this always in memory in fact if you do ro clone for all page copies you lose performance in some applications",
    "start": "2514160",
    "end": "2520070"
  },
  {
    "text": "sometimes you do want to do this on the processor side especially when you're caching is very effective so we want to",
    "start": "2520070",
    "end": "2525650"
  },
  {
    "text": "have mechanisms to understand when to do what sometimes row clones sometimes doing the",
    "start": "2525650",
    "end": "2531290"
  },
  {
    "text": "copy internally in the processor so that's also very important and the paper has some detail related to that so where",
    "start": "2531290",
    "end": "2538310"
  },
  {
    "text": "are we taking this I think we're designing all these differ accelerators that are very good at",
    "start": "2538310",
    "end": "2543500"
  },
  {
    "text": "making us process data efficiently but basically I think this direction is",
    "start": "2543500",
    "end": "2549890"
  },
  {
    "text": "really thinking of memory as a command is similar to a conventional accelerator memory is good at some things if we can",
    "start": "2549890",
    "end": "2556310"
  },
  {
    "text": "figure out what those some things are we can put some specialized compute capability in memory and we can think of",
    "start": "2556310",
    "end": "2561560"
  },
  {
    "text": "that as an accelerator for those computations it's actually a very different exciter from what we have here",
    "start": "2561560",
    "end": "2567500"
  },
  {
    "text": "because it has access to this huge data store and it's also sitting on the other side of the memory bus all these",
    "start": "2567500",
    "end": "2573950"
  },
  {
    "text": "actuators are bound by the memory bus if you're dealing with huge data so one of",
    "start": "2573950",
    "end": "2578960"
  },
  {
    "text": "the things that I will briefly touch upon this is something we deal with in one of the iske papers with 3d stack memory but it's a general problem if we",
    "start": "2578960",
    "end": "2585350"
  },
  {
    "text": "can somehow enable in-memory search or graph analytics or big data analytics I don't like using that big data term but",
    "start": "2585350",
    "end": "2591410"
  },
  {
    "text": "big data analytics how can we do it I'm going to list a lot of questions over here but iske baare iske paper has some",
    "start": "2591410",
    "end": "2598400"
  },
  {
    "text": "answers basically let's say you have this data base or graph stored in memory in your different sub arrays we'd like",
    "start": "2598400",
    "end": "2603740"
  },
  {
    "text": "to send a query to memory with some interface over here and the memory does the searching in its sub arrays and",
    "start": "2603740",
    "end": "2609320"
  },
  {
    "text": "returns back the result such that the CPU can focus on this there are many questions here is the interfaces that we have today do not enable this means more",
    "start": "2609320",
    "end": "2615950"
  },
  {
    "text": "scalable and flexible interfaces what is the right partitioning of computation capability what is the right low cost",
    "start": "2615950",
    "end": "2621980"
  },
  {
    "text": "memory substrates how do you actually build this compares I just gave you a copy right hopefully I'll give you a",
    "start": "2621980",
    "end": "2627050"
  },
  {
    "text": "little bit more hope in the next few slides but you need to do more than just copy if you have the logic there inside",
    "start": "2627050",
    "end": "2633020"
  },
  {
    "text": "3d stack 3d stack then you can actually do more and that's what our iske paper is about you can actually gain 14x",
    "start": "2633020",
    "end": "2639500"
  },
  {
    "text": "performance improvement and reduce any memory system energy by 10x if you have",
    "start": "2639500",
    "end": "2644750"
  },
  {
    "text": "a graph analytics engine that's sitting in an interconnected set of 3d stats I'm not going to talk about that that's the",
    "start": "2644750",
    "end": "2650390"
  },
  {
    "text": "more more intrusive approach because you need a different programming model to take advantage of that actually so what",
    "start": "2650390",
    "end": "2656600"
  },
  {
    "text": "maybe technology Stan a blurs DRM it's very interesting to examine but there are other technologies that integrate",
    "start": "2656600",
    "end": "2662240"
  },
  {
    "text": "much better with logic and once we have this how the actually rethink or ease",
    "start": "2662240",
    "end": "2667460"
  },
  {
    "text": "search algorithms or different algorithms and applications in fact we have this problem with row clone we were actually searching for applications and",
    "start": "2667460",
    "end": "2673490"
  },
  {
    "text": "when we talked with people they say oh we those copies as much as possible so they actually jumped through hoops in their",
    "start": "2673490",
    "end": "2679010"
  },
  {
    "text": "software such that they don't exercise a lot copies as there is not this complicated software a lot actually but",
    "start": "2679010",
    "end": "2685280"
  },
  {
    "text": "if the copies are a lot cheaper maybe there's a different way of designing the software which makes life easier for the programmers and that's true for other",
    "start": "2685280",
    "end": "2691850"
  },
  {
    "text": "computations also I believe this actually slide from my students we've excess shadi who developed the idea of",
    "start": "2691850",
    "end": "2697370"
  },
  {
    "text": "ro clone but basically we need support across the entire system this is from his proposal and he's completed all all",
    "start": "2697370",
    "end": "2702950"
  },
  {
    "text": "of this so he's ready to graduate I believe but the blue parts yeah but",
    "start": "2702950",
    "end": "2709850"
  },
  {
    "text": "basically the we have a paper coming up on India I'm gather scatter and I'll hopefully give you some hope by talking",
    "start": "2709850",
    "end": "2716510"
  },
  {
    "text": "about Indian bitwise operations but we need cache coherence support and we also need some virtual memory support that",
    "start": "2716510",
    "end": "2722660"
  },
  {
    "text": "I'm not going to talk about but let me give you a little bit more hope because computation is data moment is kind of",
    "start": "2722660",
    "end": "2728630"
  },
  {
    "text": "cheating because you don't do any computation but I think there's a lot of potential for computation in DM also",
    "start": "2728630",
    "end": "2733820"
  },
  {
    "text": "even within the core of the subarray I think external part like the best part is very interesting also to examine but",
    "start": "2733820",
    "end": "2740150"
  },
  {
    "text": "in the core you can get even more benefits and the idea is how do we do in and and or and I'm going to assume an",
    "start": "2740150",
    "end": "2747440"
  },
  {
    "text": "idealized circuit here basically if you have these ABC rows ABC and if you can",
    "start": "2747440",
    "end": "2753320"
  },
  {
    "text": "currently connect the word lines to the bit line what you really get is a",
    "start": "2753320",
    "end": "2758630"
  },
  {
    "text": "majority circuit of a B and C now you can actually do a majority circuit",
    "start": "2758630",
    "end": "2764420"
  },
  {
    "text": "operation and the entire ABC rows but the other interesting thing is you can rewrite this equation like this you can",
    "start": "2764420",
    "end": "2771440"
  },
  {
    "text": "take out C and now this can be your control row if C is set to one or once",
    "start": "2771440",
    "end": "2777890"
  },
  {
    "text": "now you get the or of a and B if C is set to all zeros you get the end of a and B basically we have an analog",
    "start": "2777890",
    "end": "2785150"
  },
  {
    "text": "computation mechanism that can do and then or in the UM assuming you can design these really nicely of course its",
    "start": "2785150",
    "end": "2792680"
  },
  {
    "text": "destructive absolutely yeah so I'm going to give you the instruction semantics in a little bit it destroys in the end the",
    "start": "2792680",
    "end": "2797900"
  },
  {
    "text": "results get result becomes whatever you have over here so you can actually imagine an instruction that looks like",
    "start": "2797900",
    "end": "2804380"
  },
  {
    "text": "bulk and which is semantics are like that and this is one way of implementing it can reserve a row to zero is there",
    "start": "2804380",
    "end": "2810650"
  },
  {
    "text": "another road to one and you can have designated gross for triple activations so the cost of this is triple activation",
    "start": "2810650",
    "end": "2815930"
  },
  {
    "text": "and you want to limit that because you don't want to be able to do triple activation in arbitrary addresses in the",
    "start": "2815930",
    "end": "2820970"
  },
  {
    "text": "sub race so if you actually reserved this to a very small portion you can actually do the end and/or in that small",
    "start": "2820970",
    "end": "2826130"
  },
  {
    "text": "portion in the subway and this is how it works basically instruction you first roll clone the data into this designated",
    "start": "2826130",
    "end": "2831710"
  },
  {
    "text": "one row row clone B into the designated two row row clone r0 which is the end in",
    "start": "2831710",
    "end": "2838130"
  },
  {
    "text": "this case you need the controller all into d3 you activate through the triple activate and then roll clone the results",
    "start": "2838130",
    "end": "2844339"
  },
  {
    "text": "into C and now d1 d2 and d3 have all all have the result so if you do this what",
    "start": "2844339",
    "end": "2850700"
  },
  {
    "text": "are the benefits you get basically we see significant improvements in end and or throughput compared to the",
    "start": "2850700",
    "end": "2857450"
  },
  {
    "text": "state-of-the-art mechanism which is doing the doing the end and or inside",
    "start": "2857450",
    "end": "2862490"
  },
  {
    "text": "the sim D units Intel AVX over here and so Intel ABX actually works really well",
    "start": "2862490",
    "end": "2868490"
  },
  {
    "text": "this is the size of the vectors to end or or and this is the throughput of the end operations in this case if your",
    "start": "2868490",
    "end": "2875420"
  },
  {
    "text": "vectors are really small you run out of the cache so your sim D units are very effective actually you get very high",
    "start": "2875420",
    "end": "2881390"
  },
  {
    "text": "throughput but if your vectors are really large the throughput of the similar units reduces because now your",
    "start": "2881390",
    "end": "2886489"
  },
  {
    "text": "memory bound whereas if you're doing this operation in memory you can sustain the same level of throughput which is",
    "start": "2886489",
    "end": "2891589"
  },
  {
    "text": "actually 20x higher in this case when your vectors are larger and you can actually scale this by doing in many",
    "start": "2891589",
    "end": "2897769"
  },
  {
    "text": "banks at the same time as your data size scales we can actually do it and currently in many banks and the energy",
    "start": "2897769",
    "end": "2903079"
  },
  {
    "text": "reduction is significant and the state paper has a more detail actually you get 50x energy reduction because you're not moving data out of the chip so we've",
    "start": "2903079",
    "end": "2910369"
  },
  {
    "text": "actually tested this on some real workloads a database that does range queries that uses a lot of ands and ORS",
    "start": "2910369",
    "end": "2916759"
  },
  {
    "text": "to actually do the selection and it uses the fast bit library which is a very fast library that we're doing and in",
    "start": "2916759",
    "end": "2923180"
  },
  {
    "text": "ours we ported that library to use this in our simulator and you can see a significant performance improvements and",
    "start": "2923180",
    "end": "2929450"
  },
  {
    "text": "many range queries and the paper has a lot more detail on this yes variation",
    "start": "2929450",
    "end": "2935589"
  },
  {
    "text": "control so this is exactly why I said assume an idealized circuit",
    "start": "2935589",
    "end": "2941990"
  },
  {
    "text": "so I think if you if you if you reserved three designated rows I believe it could",
    "start": "2941990",
    "end": "2950450"
  },
  {
    "text": "be designed but then I think that's up to the UM designers that's that's a that's a part where I can I cannot",
    "start": "2950450",
    "end": "2958099"
  },
  {
    "text": "design it but I believe that good D um designers will be able to sign it yes",
    "start": "2958099",
    "end": "2963160"
  },
  {
    "text": "the alignment issues within the the bus so that's one question that's the",
    "start": "2963160",
    "end": "2968990"
  },
  {
    "text": "limitation of this model basically your data you cop you UN Dan or everything over here but we're developing more",
    "start": "2968990",
    "end": "2976609"
  },
  {
    "text": "primitives like knots or some X or or masking that we can do potentially in",
    "start": "2976609",
    "end": "2982160"
  },
  {
    "text": "memory but I don't have those results yet you need to do so I think the",
    "start": "2982160",
    "end": "3026740"
  },
  {
    "text": "benefits are similar to the roll call benefits that we have not period actually exploring that right now but benefits are even you remember the",
    "start": "3026740",
    "end": "3032890"
  },
  {
    "text": "interbank copy I think the benefits are similar to that exactly it solved that order so it's still significant but it's",
    "start": "3032890",
    "end": "3039010"
  },
  {
    "text": "not 20x yes so these are some range",
    "start": "3039010",
    "end": "3047290"
  },
  {
    "text": "queries in a database in that uses the fast bit library I don't remember the",
    "start": "3047290",
    "end": "3052750"
  },
  {
    "text": "exact thing but the paper has the details and I can send you more information this is a shorter version of the paper",
    "start": "3052750",
    "end": "3060630"
  },
  {
    "text": "version who is some question that's the next step",
    "start": "3061710",
    "end": "3066849"
  },
  {
    "text": "exactly exactly you'll become Willie and complete basically right yeah so that's our goal",
    "start": "3071650",
    "end": "3076849"
  },
  {
    "text": "actually basically we're we're taking this we want the ball computation model in memory we have some mechanisms to the inversion it's not as easy as and an or",
    "start": "3076849",
    "end": "3083710"
  },
  {
    "text": "but there are different ways of thinking about it and doing it but maybe I'll",
    "start": "3083710",
    "end": "3089119"
  },
  {
    "text": "talk about that later at some point but I think this is very interesting maybe",
    "start": "3089119",
    "end": "3094519"
  },
  {
    "text": "bulk maybe I should put the ball in parenthesis because as Sebastian mentioned there could be other ways of doing the computation internally in chip",
    "start": "3094519",
    "end": "3100970"
  },
  {
    "text": "but this could this basically requires new memory and software interfaces to enable in-memory computation and at some",
    "start": "3100970",
    "end": "3106730"
  },
  {
    "text": "point I think I'd love to examine new programming models algorithms and compilers perhaps because this can",
    "start": "3106730",
    "end": "3112519"
  },
  {
    "text": "actually if you have a ball computation model in memory you can actually take advantage of a lot of things in my opinion so I've talked about the first",
    "start": "3112519",
    "end": "3118670"
  },
  {
    "text": "approach weights the minimally changing the um table simple yet powerful computation primitives and hopefully giving you some hope in that direction",
    "start": "3118670",
    "end": "3124549"
  },
  {
    "text": "there's a lot more you can do with the 3d stacked control logic layer and I'll",
    "start": "3124549",
    "end": "3129859"
  },
  {
    "text": "point you to these papers basically we've examined what is the minimum thing that you can do if you have a 3d stacked",
    "start": "3129859",
    "end": "3135319"
  },
  {
    "text": "logic layer without changing the existing programming model keeping the sequential programming model without",
    "start": "3135319",
    "end": "3140599"
  },
  {
    "text": "changing the virtual memory substrate without changing the cache coherence mechanism significantly and we call it the PIM enabled instructions basically",
    "start": "3140599",
    "end": "3146960"
  },
  {
    "text": "you have an instruction come at you can execute in memory or in the processor and it's virtualized its cache coherence",
    "start": "3146960",
    "end": "3154549"
  },
  {
    "text": "and that actually buys you some benefit and this was a second thing that we've explored that's also published at iske",
    "start": "3154549",
    "end": "3160309"
  },
  {
    "text": "basically the ideas what is the thing that you can do if you can change things maximally in this case you can think of",
    "start": "3160309",
    "end": "3165920"
  },
  {
    "text": "it think of the the 3d stack memory as an accelerator how do you map the graph processing application to it what is the",
    "start": "3165920",
    "end": "3171859"
  },
  {
    "text": "programming model we don't assume virtual memory in this case for example so that's that actually shows a lot of",
    "start": "3171859",
    "end": "3177859"
  },
  {
    "text": "benefits also that I mentioned earlier I don't have time to talk about this but I think this is a very promising direction",
    "start": "3177859",
    "end": "3183049"
  },
  {
    "text": "as well okay let me jump in to refresh and then I'll switch to the other",
    "start": "3183049",
    "end": "3189410"
  },
  {
    "text": "direction which is emerging memory technologies how much time do we have left Oh 17 minutes okay refresh we'll be",
    "start": "3189410",
    "end": "3196910"
  },
  {
    "text": "really quick done okay I want to talk about refresh because this is one of the major skins if you",
    "start": "3196910",
    "end": "3202070"
  },
  {
    "text": "talk to DM designer probably they will tell you that this is the biggest headache they have India but the problem",
    "start": "3202070",
    "end": "3208130"
  },
  {
    "text": "is neon capacitor charge leaks over time and the memory Couture needs to refresh each job periodically restore the charge",
    "start": "3208130",
    "end": "3213500"
  },
  {
    "text": "and today you need to refresh every activate area of any meal is like every and milliseconds typically Ines sixty-four milliseconds that's probably",
    "start": "3213500",
    "end": "3219920"
  },
  {
    "text": "going to go down there many downside to this energy performance quality of service impact but I'll talk about one",
    "start": "3219920",
    "end": "3225380"
  },
  {
    "text": "thing refresh rate actual limits DM capacity scaling so this is from a paper that we did in iske in 2012 this is",
    "start": "3225380",
    "end": "3231110"
  },
  {
    "text": "device capacity on the x-axis this is the percentage of time you have to spend to the Refresh base of throughput loss",
    "start": "3231110",
    "end": "3236810"
  },
  {
    "text": "of the device due to refresh today it's about eight percent if the scaling trend",
    "start": "3236810",
    "end": "3242360"
  },
  {
    "text": "continues and I do have to talk about the assumptions that go into this it's going to be about 50 percent if you",
    "start": "3242360",
    "end": "3248090"
  },
  {
    "text": "design a 64 Giga bit um chip and energy percentage of VI minor is spent",
    "start": "3248090",
    "end": "3254420"
  },
  {
    "text": "refreshing today it's about 15 percent let's say and again you can argue with the numbers depending on your utilization and how much you're",
    "start": "3254420",
    "end": "3260390"
  },
  {
    "text": "accessing in memory this changes but with the same utilization at 64 Giga bit note you'll be spending 50% of your DM",
    "start": "3260390",
    "end": "3267920"
  },
  {
    "text": "energy on refresh if nothing changes and this is a bit scary because we're designing this huge memory chip which we",
    "start": "3267920",
    "end": "3274880"
  },
  {
    "text": "cannot access elf all the time and help of its power is really energy is spent on refresh keeping the data I'll talk",
    "start": "3274880",
    "end": "3281300"
  },
  {
    "text": "about one promising direction I'll talk about the issues related to this basically we don't need to design the Refresh for the worst case if you look",
    "start": "3281300",
    "end": "3287330"
  },
  {
    "text": "at the retention time of profile of DM due to the variation in the circuit you have this retention time profile today",
    "start": "3287330",
    "end": "3293240"
  },
  {
    "text": "we're refreshing everything every 64 milliseconds but most of memory doesn't need to be refreshed for 256",
    "start": "3293240",
    "end": "3300140"
  },
  {
    "text": "milliseconds so if you can somehow figure this out you can actually reduce your refresh rate by 75% or a number of",
    "start": "3300140",
    "end": "3306980"
  },
  {
    "text": "refresh is by 75% and that's the ID I'll give you some results first I'll talk about one of the challenges in enabling",
    "start": "3306980",
    "end": "3312350"
  },
  {
    "text": "this and this in this an old observation many people have written papers and electron device letters but we've with",
    "start": "3312350",
    "end": "3318020"
  },
  {
    "text": "our infrastructure we've shown that this actually holds true for many many drm chips also the idea we've looked at is",
    "start": "3318020",
    "end": "3324710"
  },
  {
    "text": "three flashing rows containing weak cells more frequently and other less frequently and this requires three",
    "start": "3324710",
    "end": "3330090"
  },
  {
    "text": "steps very quickly you need to profile the retains time of all rows figure out the minimum retention time of all rows",
    "start": "3330090",
    "end": "3335790"
  },
  {
    "text": "and store the rows into bins by a retention time in the memory controller if you're doing this in the memory controller and you can have really",
    "start": "3335790",
    "end": "3341580"
  },
  {
    "text": "simple mechanisms by using bloom filters to do that I'll refer you to the paper and the memory Couture can now refresh",
    "start": "3341580",
    "end": "3347370"
  },
  {
    "text": "droves in different bins at different rates and if you do that you can get significant refresh reduction almost 75%",
    "start": "3347370",
    "end": "3352980"
  },
  {
    "text": "at very low hardware costs you can reduce the dynamic and idle power significantly and you can get significant performance improvement",
    "start": "3352980",
    "end": "3359010"
  },
  {
    "text": "actually benefits increase with DM capacity so energy reduction increases to 50% at 64 gigabit not now",
    "start": "3359010",
    "end": "3366630"
  },
  {
    "text": "the most difficult part turns out to be the profiling step and that's exactly why dear manufacturers are having a problem because it's profiling figuring",
    "start": "3366630",
    "end": "3372930"
  },
  {
    "text": "out the test like what is the minimum retention time is very difficult and it's difficult then I'll refer you to",
    "start": "3372930",
    "end": "3378360"
  },
  {
    "text": "especially this paper over here but it's difficult to to the problem that da that the four-page paper that I",
    "start": "3378360",
    "end": "3384540"
  },
  {
    "text": "mentioned from Samsung and Intel talked about the variable retention time problem it turns out dear I'm cell the",
    "start": "3384540",
    "end": "3390390"
  },
  {
    "text": "refresh for example first of all as data dependence that's one issue it depends on the data around you how much you need",
    "start": "3390390",
    "end": "3397200"
  },
  {
    "text": "to refresh this particular cell but it also dependent is depend on a random process basically for a long time a dram",
    "start": "3397200",
    "end": "3402690"
  },
  {
    "text": "cell can retain data for hundreds of seconds and later on charge gets trapped in the cell and your leakage access",
    "start": "3402690",
    "end": "3409740"
  },
  {
    "text": "rates significantly and your retention time tanks to eight milliseconds so you have this bimodal behavior and many of",
    "start": "3409740",
    "end": "3414840"
  },
  {
    "text": "you I'm cells so you need to test the dear I'm cell long enough such that you get to the minimum attention time states",
    "start": "3414840",
    "end": "3419910"
  },
  {
    "text": "which could be days and days and days according to our results and this actually getting worse with D am scaling",
    "start": "3419910",
    "end": "3426570"
  },
  {
    "text": "that's why VRT is one of the biggest issues and that's exactly why the our manufacturers are really interested in putting in D I'm ECC error correction",
    "start": "3426570",
    "end": "3432690"
  },
  {
    "text": "codes today yeah that's a very well",
    "start": "3432690",
    "end": "3441030"
  },
  {
    "text": "studied and examined effects and refresh rate you need to refresh more frequently",
    "start": "3441030",
    "end": "3446820"
  },
  {
    "text": "as temperature increases and that's already employed actually in some the technologies lpddr4 example okay so i'm",
    "start": "3446820",
    "end": "3456720"
  },
  {
    "text": "not going to talk about this promises fascinating problem so how do you actually solve this problem given that you need to test yeah for days and days one option to say oh",
    "start": "3456720",
    "end": "3463260"
  },
  {
    "text": "dear manufacturers figure this out I think it's going to be very difficult to actually do that and the thing that we",
    "start": "3463260",
    "end": "3468720"
  },
  {
    "text": "argue over here is more online profiling of the system actually there's one other reason why it's hard for the DI manufactures do this actually impossible",
    "start": "3468720",
    "end": "3474990"
  },
  {
    "text": "for da manufactures in my opinion once you solder the DRAM chip on your board you expose it to a very high temperature",
    "start": "3474990",
    "end": "3480150"
  },
  {
    "text": "and that changes the retention time profile and this is actually becoming worse with the scaled smaller",
    "start": "3480150",
    "end": "3486840"
  },
  {
    "text": "technologies so the solution we're pursuing and I don't have all the answers is to do more online profiling",
    "start": "3486840",
    "end": "3492240"
  },
  {
    "text": "of DM in the field I think this can actually fix a lot of the issues that we have initially protect DM with ECC maybe",
    "start": "3492240",
    "end": "3497970"
  },
  {
    "text": "in DM ECC and over time while you're running the system at boot up plus during your during the execution your",
    "start": "3497970",
    "end": "3505500"
  },
  {
    "text": "periodic test parts of DRAM and do optimizations you can adjust refresh rate reduce ECU can determine the",
    "start": "3505500",
    "end": "3511410"
  },
  {
    "text": "latency characteristics of different roles at just the latency you can actually say look at data patterns if",
    "start": "3511410",
    "end": "3517350"
  },
  {
    "text": "you're storing zeros maybe you don't need to refresh that row you can skip a lot of refresh so you can actually do a lot more optimization specialize it to",
    "start": "3517350",
    "end": "3523110"
  },
  {
    "text": "the computation that you're running if you can enable something like this but clearly if you would like to enable something like this you need different",
    "start": "3523110",
    "end": "3529080"
  },
  {
    "text": "interfaces and all kinds of mechanisms to keep the performance overhead and energy overheads low but this is where",
    "start": "3529080",
    "end": "3534630"
  },
  {
    "text": "we're what you're looking into going forward with the infrastructure that we have so I'm going to skip the latency",
    "start": "3534630",
    "end": "3540300"
  },
  {
    "text": "part even though it's very exciting in my opinion because of this graph we've focused on capacity so much but the",
    "start": "3540300",
    "end": "3546270"
  },
  {
    "text": "latency is not improving but I do have to talk about the solutions later on but",
    "start": "3546270",
    "end": "3553290"
  },
  {
    "text": "let me move into this one which is also exciting that's hard to pick from",
    "start": "3553290",
    "end": "3558600"
  },
  {
    "text": "multiple exciting things but I'll pick this one so let me talk about the second solution direction which is enabling",
    "start": "3558600",
    "end": "3564540"
  },
  {
    "text": "emerging memory technologies and this is actually very promising in my opinion because there's some resistant memory technology I see more scalable than",
    "start": "3564540",
    "end": "3570720"
  },
  {
    "text": "there one example is phase change memory which you may have heard of basically it's actually a really old technology IDE it's used in the rewritable CDs",
    "start": "3570720",
    "end": "3577080"
  },
  {
    "text": "except we export something else the optical reflectivity of the different pages of the material and rewritable CDs",
    "start": "3577080",
    "end": "3583530"
  },
  {
    "text": "basically they change memory stores data by changing the phase of material chocolate glass and data is read by",
    "start": "3583530",
    "end": "3589410"
  },
  {
    "text": "detecting the material resistance and recent advanced and the read devices over here the",
    "start": "3589410",
    "end": "3595200"
  },
  {
    "text": "access devices basically has made made it to be able to do this to detect the",
    "start": "3595200",
    "end": "3601079"
  },
  {
    "text": "resistance reliably as a result it's become interesting in CD rewritable CDs",
    "start": "3601079",
    "end": "3606539"
  },
  {
    "text": "you basically shine light on on a cell as a result you get different with different optical reflectivities and now",
    "start": "3606539",
    "end": "3613109"
  },
  {
    "text": "you can detect zero one but that's a very slow reading process clearly so you want this other read device that can",
    "start": "3613109",
    "end": "3618690"
  },
  {
    "text": "detect the material distance and it's activated scale to much smaller nanometers its prototype that 20 nanometers install six-week to be denser",
    "start": "3618690",
    "end": "3624900"
  },
  {
    "text": "than the I'm the key quest the key problem is these are many shortcomings and this is just one example can we",
    "start": "3624900",
    "end": "3629999"
  },
  {
    "text": "enable them to replace augment or even maybe surpassed yeah very quickly charge memory is difficult to scale because if",
    "start": "3629999",
    "end": "3636900"
  },
  {
    "text": "it's difficult to place on control charge and reliable sensing becomes difficult as charge storage unit size",
    "start": "3636900",
    "end": "3642480"
  },
  {
    "text": "reduces this true and flash this trendy am also whereas resistive memory technologies do not rely on charge they",
    "start": "3642480",
    "end": "3649380"
  },
  {
    "text": "change memory you Jack turn to change the material face and you detect resistance of the face in sttm you",
    "start": "3649380",
    "end": "3656099"
  },
  {
    "text": "inject current to change the magnet polarity and you detect resistance compared to a reference magnet and a memory stirs RM REM you inject current",
    "start": "3656099",
    "end": "3662220"
  },
  {
    "text": "to change the atomic structure and resistance to determine by the item distance so they have very different mechanisms but in the end they're all",
    "start": "3662220",
    "end": "3668009"
  },
  {
    "text": "resistive I'll focus on fascia memory because we've been looking at that for much longer but I think other memory",
    "start": "3668009",
    "end": "3673710"
  },
  {
    "text": "technologies are very very promising also so I'm I'm not going to take sides on any technology I'm going to look at the architecture and system level",
    "start": "3673710",
    "end": "3679319"
  },
  {
    "text": "effects so I don't know and I don't know",
    "start": "3679319",
    "end": "3688920"
  },
  {
    "text": "if it's real but my suspicion based on all of the readings is its phase change memory actually but I'm not sure give a",
    "start": "3688920",
    "end": "3697680"
  },
  {
    "text": "great presentation they said the drop phase change memory I went to rewrap myself it must be wrong",
    "start": "3697680",
    "end": "3711079"
  },
  {
    "text": "oh they didn't say okay I'd love to get",
    "start": "3721220",
    "end": "3728450"
  },
  {
    "text": "that link from you sometime please thank you I appreciate it okay so let's look at the architectural",
    "start": "3728450",
    "end": "3734690"
  },
  {
    "text": "aspects I think so the pros and cons of the cons over diem depends on what",
    "start": "3734690",
    "end": "3739760"
  },
  {
    "text": "technology it is so face serum you get hopefully better technology skill and better capacity and cost in the long run",
    "start": "3739760",
    "end": "3744800"
  },
  {
    "text": "you get non volatility and you get low idle power refresh problem goes away which is actually nice that's the key scaling problem with you the problem is",
    "start": "3744800",
    "end": "3752000"
  },
  {
    "text": "you have a higher read latencies and write latency is higher active energy for reads and writes especially for writes and you get lower",
    "start": "3752000",
    "end": "3758900"
  },
  {
    "text": "endurance a cell basically dies after some number of writes which is similar to the flash and you have some other",
    "start": "3758900",
    "end": "3765079"
  },
  {
    "text": "reliable tissues write resistance drift but the time scales are much higher than refresh as far as we know today so it's",
    "start": "3765079",
    "end": "3770839"
  },
  {
    "text": "clearly challenging to enable patient's memory as a replacement for diem we'd like to mitigate the shortcomings and find the right way to PlayStation Grammy",
    "start": "3770839",
    "end": "3776990"
  },
  {
    "text": "in the system very quickly I'll go over our thinking over the years the sexiest slide from 2008 when we first started",
    "start": "3776990",
    "end": "3782660"
  },
  {
    "text": "looking at this we ask the question how should we organize patient memory based main memory and our first idea was some",
    "start": "3782660",
    "end": "3788869"
  },
  {
    "text": "of some memory in the system will domaine remain as DM some memory will be PCM and in this case how do you",
    "start": "3788869",
    "end": "3794420"
  },
  {
    "text": "partition and migrate data between PCM DM becomes a problem I'm going to talk about that later on but we were more",
    "start": "3794420",
    "end": "3799790"
  },
  {
    "text": "aggressive at the time he wants to examine the implications of this at least in terms of performance and energy to begin with so we wanted to look at",
    "start": "3799790",
    "end": "3806510"
  },
  {
    "text": "the pure PCM based main memory so we did this study that was published in this Co 2009 that we're very surveyed four types",
    "start": "3806510",
    "end": "3812869"
  },
  {
    "text": "of patient memory across many different device and circuit level conferences and try to derive some parameters to use for",
    "start": "3812869",
    "end": "3819800"
  },
  {
    "text": "a facies memory that's at feature size 90 nanometers and that's actually a harder task that said than done",
    "start": "3819800",
    "end": "3825859"
  },
  {
    "text": "because none of these papers agree with each other if you look at it but we derived some parameters that are",
    "start": "3825859",
    "end": "3831380"
  },
  {
    "text": "reasonable in my opinion I can never be sure but these are the latest parameters you have you're really looking at a memory that's 4x slower in terms of",
    "start": "3831380",
    "end": "3838160"
  },
  {
    "text": "reads compared en 12x slower compared to the um in terms of writes this is the energy",
    "start": "3838160",
    "end": "3843920"
  },
  {
    "text": "increase writes consume 43 X higher energy and endurance a cell dies after 10 to the 8 rights to it and SL dies",
    "start": "3843920",
    "end": "3850640"
  },
  {
    "text": "because you actually as you inject current and increase the temperature significant to melt the material 650",
    "start": "3850640",
    "end": "3857390"
  },
  {
    "text": "degrees Celsius contacts the great as a result you have this endurance problem but basically if",
    "start": "3857390",
    "end": "3864500"
  },
  {
    "text": "you take a system that uses the UM and magically replace every single DRAM cell",
    "start": "3864500",
    "end": "3870860"
  },
  {
    "text": "with a fascia memory cell with those properties without changing anything in the system this is what you get for these applications you get sixty percent",
    "start": "3870860",
    "end": "3877250"
  },
  {
    "text": "performance degradation you get hundred twenty percent energy increase and your memory dies after five hundred dollars",
    "start": "3877250",
    "end": "3882290"
  },
  {
    "text": "that's clearly you don't want this as your main memory without doing some modification so you can read this paper",
    "start": "3882290",
    "end": "3887930"
  },
  {
    "text": "we've developed some techniques for buffering basically if you have this kind of memory as your main memory you'd like to do enough buffering such that",
    "start": "3887930",
    "end": "3894260"
  },
  {
    "text": "you don't access the memory or you minimally access it and if you do that your results become better twenty",
    "start": "3894260",
    "end": "3901040"
  },
  {
    "text": "percent performance degradation compared to the energy becomes on par with diem but take this with a grain of salt all energy modeling is of course",
    "start": "3901040",
    "end": "3907340"
  },
  {
    "text": "difficult with an emerging technology an average lifetime becomes five point six years which is better but maybe that's",
    "start": "3907340",
    "end": "3912680"
  },
  {
    "text": "not what you want because you don't want to be bound by the average right so I think this is actually going to be",
    "start": "3912680",
    "end": "3917900"
  },
  {
    "text": "difficult with some memory technology that looks like this using it as main memory because worst-case lifetime is",
    "start": "3917900",
    "end": "3923390"
  },
  {
    "text": "actually much shorter you have no guarantees you can actually have an attack program that can kill your memory intensive application see large",
    "start": "3923390",
    "end": "3929540"
  },
  {
    "text": "performance and energy degradation and maybe even use optimistic PCM parameters I don't know yet but I think going",
    "start": "3929540",
    "end": "3935750"
  },
  {
    "text": "forward this hybrid memory systems is a very interesting solution reaction can we somehow architect memory systems that",
    "start": "3935750",
    "end": "3941260"
  },
  {
    "text": "look like this or maybe have dims that have multiple types of technologies maybe our 3d stacks that are multiple",
    "start": "3941260",
    "end": "3947120"
  },
  {
    "text": "different types of technologies and manage the data allocation and moment so we've looked at this in the context of DM and PCM very briefly I'll give you",
    "start": "3947120",
    "end": "3954740"
  },
  {
    "text": "results I'm not going to go over the detail but the key idea is somehow identify your data that's better to",
    "start": "3954740",
    "end": "3961100"
  },
  {
    "text": "place at DRAM and better to and identify other data that's better to place at PCM so what's better to place at DM latency",
    "start": "3961100",
    "end": "3968870"
  },
  {
    "text": "critical data and data and data you can access as fast in PCM as in DM you would",
    "start": "3968870",
    "end": "3975050"
  },
  {
    "text": "like you don't want to waste your DM space in it and if you have streaming accesses actually you can keep them in",
    "start": "3975050",
    "end": "3980690"
  },
  {
    "text": "PCM because you can read out of the row buffers and your bandwidth can be as high as diagram if you have streaming access in fact all you were doing is",
    "start": "3980690",
    "end": "3987410"
  },
  {
    "text": "what all you're doing is streaming can have a memory hierarchy that's composed of very slow circuits like tape maybe and design",
    "start": "3987410",
    "end": "3995019"
  },
  {
    "text": "a lot of buffers in between such that you can spin through but basically that's the idea somehow you mark the",
    "start": "3995019",
    "end": "4000299"
  },
  {
    "text": "data in hardware in this case and you replace the data intelligently so if you",
    "start": "4000299",
    "end": "4005369"
  },
  {
    "text": "do this you can't you're kind of in the middle compared to if this is 16 goodbye PCM performances 16 go by DM performance",
    "start": "4005369",
    "end": "4012390"
  },
  {
    "text": "this hybrid memory with intelligent data management gets you kind of in the middle so we're still not there yet so there's a lot more Headroom to do",
    "start": "4012390",
    "end": "4019109"
  },
  {
    "text": "research in this area in my opinion so I'm going to skip this but as TTM and we examine STTR mem as part of your main",
    "start": "4019109",
    "end": "4024660"
  },
  {
    "text": "memory and the results actually are better because the cons of sttm I'm",
    "start": "4024660",
    "end": "4029910"
  },
  {
    "text": "compared to a change memory at least at this point in time is much better you have higher right latency but you don't",
    "start": "4029910",
    "end": "4036299"
  },
  {
    "text": "have the read latency problem you don't have the read energy problem and you don't have the endurance problem and as",
    "start": "4036299",
    "end": "4042269"
  },
  {
    "text": "a result your performance loss is not as high and your energy savings are much higher and if you're interested you can",
    "start": "4042269",
    "end": "4047519"
  },
  {
    "text": "take a look at the paper but let me tell you a little bit about other opportunities and then circle back and",
    "start": "4047519",
    "end": "4053459"
  },
  {
    "text": "then we'll conclude I think it's a very exciting area actually regardless of whatever technology that's enabling some",
    "start": "4053459",
    "end": "4059039"
  },
  {
    "text": "of these emerging technologies really important there are many opportunities processing tightly coupled with memory",
    "start": "4059039",
    "end": "4065249"
  },
  {
    "text": "is could be more interesting with some of these emerging technologies more robust system designs can be enabled because of the non volatility and you",
    "start": "4065249",
    "end": "4071729"
  },
  {
    "text": "can enable new applications because of the non volatility adviser disable access to persistent memory but I'll talk about one thing that requires a",
    "start": "4071729",
    "end": "4078359"
  },
  {
    "text": "different way of thinking about systems going back to the future as I mentioned earlier merging of memory and storage",
    "start": "4078359",
    "end": "4084979"
  },
  {
    "text": "we've been designing systems that look like this for a long time basically if you have a two-level storage model and",
    "start": "4084979",
    "end": "4090329"
  },
  {
    "text": "that is evolved because volatile data is present in this main memory and main memory is really fast and we use a load",
    "start": "4090329",
    "end": "4098639"
  },
  {
    "text": "store interface to access that main memory and that's heavily x-rayed and hardware so that we don't actually waste",
    "start": "4098639",
    "end": "4103650"
  },
  {
    "text": "the latency and bandwidth provided by this main memory but because this persistent storage was really slow we",
    "start": "4103650",
    "end": "4110639"
  },
  {
    "text": "used a different interface to go through and access it basically we have the file system interface and you have operating",
    "start": "4110639",
    "end": "4116159"
  },
  {
    "text": "system and file system calls and you manipulate the persistent data actually inside this main memory so you do a lot",
    "start": "4116159",
    "end": "4121230"
  },
  {
    "text": "of copies back come forth and do the translation so this is maybe okay if you have a free",
    "start": "4121230",
    "end": "4126930"
  },
  {
    "text": "access time is milliseconds over here but once you replace this with something like phase change memory which is very",
    "start": "4126930",
    "end": "4132600"
  },
  {
    "text": "similar to DM over here the code the interface over here becomes a huge bottleneck and I'll show you some",
    "start": "4132600",
    "end": "4138569"
  },
  {
    "text": "results related to that so what we would like to do is to unify the management as",
    "start": "4138570",
    "end": "4145109"
  },
  {
    "text": "much as possible such that we can eliminate all that wasted work to locate translate and transfer data and maybe",
    "start": "4145110",
    "end": "4152640"
  },
  {
    "text": "even more actually if you can actually enable access to persistent data directly from the programming language",
    "start": "4152640",
    "end": "4158160"
  },
  {
    "text": "maybe you can do even more and I believe this will improve energy and performs that I'll give you some results and this may simplify the program model going",
    "start": "4158160",
    "end": "4164490"
  },
  {
    "text": "forward and this the person's memory manager I'm going to skip this but basically we're going to we want to expose a load store interface manage",
    "start": "4164490",
    "end": "4170819"
  },
  {
    "text": "data placement and movement security and a lot of other things now once you have",
    "start": "4170820",
    "end": "4176779"
  },
  {
    "text": "once your operating on data with a single interface now you need to actually have metadata to talk to",
    "start": "4176780",
    "end": "4182819"
  },
  {
    "text": "identify data so this needs to be managed also and this is a cartoonish picture of what we're trying to do you",
    "start": "4182820",
    "end": "4188759"
  },
  {
    "text": "have this person memory manager load store accessible and you have a heterogeneous area of devices and basically can address all of them with a",
    "start": "4188760",
    "end": "4194430"
  },
  {
    "text": "single address space in fact I think maybe it's more ambitious but you would",
    "start": "4194430",
    "end": "4199530"
  },
  {
    "text": "like to address every data in the world maybe with a single address space eventually but I'm not sure how if",
    "start": "4199530",
    "end": "4204720"
  },
  {
    "text": "that's going to be doable so let me give you very quickly what could be the benefits of this this is",
    "start": "4204720",
    "end": "4209910"
  },
  {
    "text": "one from one application that's in this paper it's storage bound it's actually a",
    "start": "4209910",
    "end": "4215010"
  },
  {
    "text": "postmark it's a bad application but that's okay it's a it's just a poster child for this but there are a lot of other applications over here basically",
    "start": "4215010",
    "end": "4221700"
  },
  {
    "text": "it's storage bound if you use hard disk drives you waste a lot of time just accessing the hard disk if you replace",
    "start": "4221700",
    "end": "4227400"
  },
  {
    "text": "the hard disk with something like phase-change memory and still have dear I'm in the system you get 24 X performance improvement now this still",
    "start": "4227400",
    "end": "4234570"
  },
  {
    "text": "uses the two-level model if you actually get rid of the UM and have just phase",
    "start": "4234570",
    "end": "4240990"
  },
  {
    "text": "change memory which is slower than the um and have a single level interface you get 5x more and we haven't even we've",
    "start": "4240990",
    "end": "4247470"
  },
  {
    "text": "gotten read oh dear I'm in the system if you add DM and do much more intelligent data management you can actually do even more than this so basically we'd like to",
    "start": "4247470",
    "end": "4254730"
  },
  {
    "text": "get this additional point by the way the the things are as not not as dramatic because you have flash somewhere over",
    "start": "4254730",
    "end": "4260340"
  },
  {
    "text": "here which actually has a more smooth transition but basically there's a lot",
    "start": "4260340",
    "end": "4265470"
  },
  {
    "text": "of performance left on the table because of the interface we have because software becomes a bottleneck these memories and this is the energy",
    "start": "4265470",
    "end": "4271470"
  },
  {
    "text": "improvements that you can get so in the last one minutes let me actually talk",
    "start": "4271470",
    "end": "4278580"
  },
  {
    "text": "about how come you do better I'm going to circle back and derive some principles I've talked about a lot of ideas I've left off a lot of ideas but I",
    "start": "4278580",
    "end": "4285210"
  },
  {
    "text": "think there are three cross-cutting principles in everything that I've described and I think we're not",
    "start": "4285210",
    "end": "4291630"
  },
  {
    "text": "exploiting that in the system today and one is if we want to scale memory we definitely want better cooperation",
    "start": "4291630",
    "end": "4296820"
  },
  {
    "text": "between the devices and the system we want to expose more information to the upper layers like the or figure out that",
    "start": "4296820",
    "end": "4302790"
  },
  {
    "text": "information with the right interfaces in the system like the different refresh rates or different latencies that you",
    "start": "4302790",
    "end": "4307890"
  },
  {
    "text": "want to employ for different parts of memory which I didn't talk about or different types of memories and their characteristics and for this we need",
    "start": "4307890",
    "end": "4314910"
  },
  {
    "text": "flexible interface for in-memory computation we need flexible interfaces and we want more information flowing from top to the down like what we should",
    "start": "4314910",
    "end": "4322020"
  },
  {
    "text": "do in memory what what data should be placed where and we don't have these interface that the interface we have to",
    "start": "4322020",
    "end": "4327300"
  },
  {
    "text": "memory today including flash is pretty bad it's actually a very dumb interface that treats the memory as a storage",
    "start": "4327300",
    "end": "4333240"
  },
  {
    "text": "device that does nothing intelligent the second is I'm the the next two will be very well known in the processor design",
    "start": "4333240",
    "end": "4340680"
  },
  {
    "text": "domain I think better than worst case design so memory has been ignored perhaps that's why we're not doing better than worst case design but we're",
    "start": "4340680",
    "end": "4346170"
  },
  {
    "text": "still optimizing lots of things for the worst case refresh rates latencies and",
    "start": "4346170",
    "end": "4352220"
  },
  {
    "text": "other things also reliability parameters but worst case should not really determine the common case we're leaving",
    "start": "4352220",
    "end": "4358200"
  },
  {
    "text": "a lot of performance and energy on the table and I didn't talk about this but the with the right interface you can",
    "start": "4358200",
    "end": "4366180"
  },
  {
    "text": "actually get rid of 30% of your DRAM read latency today because drm latencies",
    "start": "4366180",
    "end": "4371310"
  },
  {
    "text": "are dictated by the worst case operation today 85 degrees celsius worst case device and the third is the",
    "start": "4371310",
    "end": "4378360"
  },
  {
    "text": "heterogeneity in design again this is very well known and process to bind space that's why we have the accelerators right but we're not doing",
    "start": "4378360",
    "end": "4383610"
  },
  {
    "text": "this as much in memory so heterogeneity enables a more efficient design because there's no one-size-fits-all memory that's good at",
    "start": "4383610",
    "end": "4389520"
  },
  {
    "text": "every metric that can optimize what do you want so we would like to specialize and become asymmetric of course clearly",
    "start": "4389520",
    "end": "4395610"
  },
  {
    "text": "this adds more complexity but for scaling it's probably a good idea and I",
    "start": "4395610",
    "end": "4400770"
  },
  {
    "text": "believe these principles are coupled if you want to actually exploit heterogeneity you need better interfaces if you want to do better for skins",
    "start": "4400770",
    "end": "4406650"
  },
  {
    "text": "design you need hydrogen 80 and better interfaces at the same time ok let me",
    "start": "4406650",
    "end": "4411840"
  },
  {
    "text": "quickly summarize basically I've talked about memory scaling problems I believe these are critical bottleneck for system",
    "start": "4411840",
    "end": "4417360"
  },
  {
    "text": "performance efficiency and usability in fact the threatened system security as I've described earlier I've talked about",
    "start": "4417360",
    "end": "4423690"
  },
  {
    "text": "new memory architectures I think there's a lot of hope in fixing the UM enabling emerging memory technologies I talked",
    "start": "4423690",
    "end": "4429960"
  },
  {
    "text": "about the hybrid memory systems as single level stores I think there's a lot of hope there and an orthogonal problem regardless of whatever you use",
    "start": "4429960",
    "end": "4436830"
  },
  {
    "text": "your memory you develop device your memory with you need to solve the problem of quality of service if it's a shared resource across different",
    "start": "4436830",
    "end": "4442950"
  },
  {
    "text": "workloads and I've already giving you the three principles cooperation across the stack better than worst case design",
    "start": "4442950",
    "end": "4448680"
  },
  {
    "text": "and heterogeneity I'll acknowledge a lot of people whose effort actually went",
    "start": "4448680",
    "end": "4454950"
  },
  {
    "text": "into this talk I guess I'm the messenger here but basically my students my collaborators and at different places",
    "start": "4454950",
    "end": "4461340"
  },
  {
    "text": "and funding with the generous plan without that generous funding we were we wouldn't have been able to talk about",
    "start": "4461340",
    "end": "4467330"
  },
  {
    "text": "any of this or do any of this and one thing our point is we have a lot of open source tools so if you're interested I",
    "start": "4467330",
    "end": "4473430"
  },
  {
    "text": "mean we're going we're going to put out even more the Wii emulator to actually does enable design space exploration for",
    "start": "4473430",
    "end": "4480510"
  },
  {
    "text": "very different kinds of memory it's a flexible DRAM simulator that models HP my die oh and different kinds of things",
    "start": "4480510",
    "end": "4486600"
  },
  {
    "text": "and we have different memory simulators at different granularities and an error model that we developed in collaboration",
    "start": "4486600",
    "end": "4491670"
  },
  {
    "text": "with Facebook by examining their systems actually all of their systems are looking at the memory error occurrences",
    "start": "4491670",
    "end": "4497760"
  },
  {
    "text": "and the entire Facebook server fleet okay thank you if you have to take more",
    "start": "4497760",
    "end": "4504540"
  },
  {
    "text": "questions so for years you had this very nice",
    "start": "4504540",
    "end": "4514699"
  },
  {
    "text": "split between architecture and microarchitecture the programmers use",
    "start": "4514699",
    "end": "4520670"
  },
  {
    "text": "the architecture and the micro architecture to do whatever it wanted to as long as it didn't violate that",
    "start": "4520670",
    "end": "4526280"
  },
  {
    "text": "contract mhm you seem to be violating that contract okay what's the impact of that gonna be okay let me let me think",
    "start": "4526280",
    "end": "4534590"
  },
  {
    "text": "about this I think I'm not violating that contract I'm just thinking about this finding a different contract well",
    "start": "4534590",
    "end": "4540170"
  },
  {
    "text": "you're making your microarchitecture today you're gonna make architecture exactly but that's really going to",
    "start": "4540170",
    "end": "4546409"
  },
  {
    "text": "restrict the flexibility of the hardware design we've made good advantage of that slim that's right I think that's the",
    "start": "4546409",
    "end": "4554179"
  },
  {
    "text": "that's where the interesting research challenge lies how do you design an interface where you can still do the",
    "start": "4554179",
    "end": "4559550"
  },
  {
    "text": "innovation without changing that interface all the time and the software is written and I think there are",
    "start": "4559550",
    "end": "4565340"
  },
  {
    "text": "interfaces that are amenable to that for example if you're a package based interface to memory and not advocating",
    "start": "4565340",
    "end": "4570830"
  },
  {
    "text": "it but I think if you have packet reason to reach the memory the packets can remain the same but then you can",
    "start": "4570830",
    "end": "4576320"
  },
  {
    "text": "communicate different things within those packets right you can over time adjusts those packets somehow I agree",
    "start": "4576320",
    "end": "4582230"
  },
  {
    "text": "it's a research challenge yeah and how do you do it efficient before it becomes an issue also but I'm not suggesting",
    "start": "4582230",
    "end": "4588710"
  },
  {
    "text": "that you should break everything just design more clean interfaces such that innovation can happen independently",
    "start": "4588710",
    "end": "4594469"
  },
  {
    "text": "stealth but we can't exploit we can still scale yes what about another level",
    "start": "4594469",
    "end": "4603230"
  },
  {
    "text": "of memory management so that intelligence such as the OS or system",
    "start": "4603230",
    "end": "4611599"
  },
  {
    "text": "management software could change the mapping and do a copy so opted to",
    "start": "4611599",
    "end": "4619310"
  },
  {
    "text": "optimize based on the measured characteristics so that makes sense",
    "start": "4619310",
    "end": "4625550"
  },
  {
    "text": "depending on what that layer looks like so you're thinking basically some",
    "start": "4625550",
    "end": "4631730"
  },
  {
    "text": "software layer or hardware layer or something memory management to switch between",
    "start": "4631730",
    "end": "4636940"
  },
  {
    "text": "where things are stored we need to do movements and then then switch work or",
    "start": "4636940",
    "end": "4655610"
  },
  {
    "text": "something actually another layer that",
    "start": "4655610",
    "end": "4663500"
  },
  {
    "text": "actually manages your memory it makes a lot of sense and we ended up because",
    "start": "4663500",
    "end": "4671480"
  },
  {
    "text": "different phases of a computation have different access paths yes so it's all that's agreed I agree but I think with",
    "start": "4671480",
    "end": "4678350"
  },
  {
    "text": "with the if you have the computation key for both T in memory you maybe there is a different way of doing things like no",
    "start": "4678350",
    "end": "4684560"
  },
  {
    "text": "yeah yes we're very take advantage of",
    "start": "4684560",
    "end": "4690860"
  },
  {
    "text": "the certain technology that in memory computation or search engine or",
    "start": "4690860",
    "end": "4702650"
  },
  {
    "text": "something so actually that's that's what we did with the graph analytics research",
    "start": "4702650",
    "end": "4710060"
  },
  {
    "text": "that I didn't describe as much but basically we've looked at page rank computation and that's very memory bound",
    "start": "4710060",
    "end": "4715699"
  },
  {
    "text": "and if you're doing that graph analytics over a huge graph you can get 14x",
    "start": "4715699",
    "end": "4721969"
  },
  {
    "text": "higher performance according to our results and 10x reduction system energy I think big graph analytics like",
    "start": "4721969",
    "end": "4728929"
  },
  {
    "text": "applications is one example but I don't think it's limited to that graph analytics only",
    "start": "4728929",
    "end": "4735638"
  },
  {
    "text": "you",
    "start": "4741749",
    "end": "4743809"
  }
]