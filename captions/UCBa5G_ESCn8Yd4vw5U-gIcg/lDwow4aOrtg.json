[
  {
    "text": "All right. Hey, everyone. Morning and welcome back. Um, so what I'd like to do today",
    "start": "3470",
    "end": "11684"
  },
  {
    "text": "is continue our discussion of Naive Bayes and in particular, um, we've described how to use Naive Bayes in a generative learning algorithm,",
    "start": "11685",
    "end": "20700"
  },
  {
    "text": "to build a spam classifier that will almost work, right? And, and, and so today you see how Laplace smoothing is one other idea, uh,",
    "start": "20700",
    "end": "28845"
  },
  {
    "text": "you need to add to the Naive Bayes algorithm we described on Monday, to really make it work, um, for, say,",
    "start": "28845",
    "end": "35309"
  },
  {
    "text": "email spam classification, or, or for text classification. Uh, and then we'll talk about the different version of",
    "start": "35310",
    "end": "40739"
  },
  {
    "text": "Naive Bayes that's even better than the one we've been discussing so far. Um, talk a little bit about,",
    "start": "40740",
    "end": "46585"
  },
  {
    "text": "ah, advice for applying machine-learning algorithms. So this would be useful to you as you get started on your,",
    "start": "46585",
    "end": "52820"
  },
  {
    "text": "ah, CS229 class projects as well. This is a strategy of how to choose an algorithm and what to do first, what to do second,",
    "start": "52820",
    "end": "58190"
  },
  {
    "text": "uh, and then we'll start with, um, intro to support vector machines.",
    "start": "58190",
    "end": "63420"
  },
  {
    "text": "Okay? Um, so to recap, uh, the Naive Bayes Algorithm is",
    "start": "63420",
    "end": "70190"
  },
  {
    "text": "a generative learning algorithm in which given a piece of email, or Twitter message or some piece of text, um,",
    "start": "70190",
    "end": "77540"
  },
  {
    "text": "take a dictionary and put in zeros and ones depending on whether different words appear in",
    "start": "77540",
    "end": "84050"
  },
  {
    "text": "a particular email and so this becomes your feature representation for, say, an email that you're trying to classify as spam or not spam.",
    "start": "84050",
    "end": "90439"
  },
  {
    "text": "Um, so using the indicator function notation, um, X_j-, uh,",
    "start": "90440",
    "end": "97145"
  },
  {
    "text": "X_j- I've been trying to use the subscript J not consistently to denote the indexes and the features",
    "start": "97145",
    "end": "103860"
  },
  {
    "text": "and ith index in the training examples and you'll see I'm not being consistent with that. So X_j is whether or not the indicator for whether words j appears in an email.",
    "start": "103860",
    "end": "114335"
  },
  {
    "text": "And so, um, to build a generative model for this, uh, we need to model these two terms p of x given y and p of y.",
    "start": "114335",
    "end": "124409"
  },
  {
    "text": "Uh, so Gaussian distribution analysis models these two terms with a Gaussian and the Bernoulli respectively and Naive Bayes uses a different model.",
    "start": "124410",
    "end": "133085"
  },
  {
    "text": "And with Naive Bayes in particular p of x given y is modeled as a, um, product of the conditional probabilities of the individual features given the class label y.",
    "start": "133085",
    "end": "144360"
  },
  {
    "text": "And so the parameters that Naive Bayes model are, um, phi subscript y is the class prior.",
    "start": "144360",
    "end": "150180"
  },
  {
    "text": "What's the chance that y is equal to 1, before you've seen any features? As well as phi subscript J given y equals 0,",
    "start": "150180",
    "end": "157820"
  },
  {
    "text": "which is a chance of that word appearing in a non-spam, as well as phi subscript J given y equals 1 which is a chance of",
    "start": "157820",
    "end": "165140"
  },
  {
    "text": "that word appearing in spam email. Okay? Um, and so if you derive the maximum likelihood estimates,",
    "start": "165140",
    "end": "176075"
  },
  {
    "text": "you will find that the maximum likelihood estimates of, you know, phi y is this.",
    "start": "176075",
    "end": "182590"
  },
  {
    "text": "Right? Just a fraction of training examples, um, that was equal to spam and maximum likelihood estimates of this-",
    "start": "185810",
    "end": "198840"
  },
  {
    "text": "and this is just an indicator function notation, way of writing, um,",
    "start": "216530",
    "end": "223034"
  },
  {
    "text": "look, at all of your, uh, emails with label y equals 0 and contact y fraction of them,",
    "start": "223035",
    "end": "229275"
  },
  {
    "text": "did this feature X_j appear? Did this word X_j appear? Right? Um, and then finally at prediction time,",
    "start": "229275",
    "end": "239830"
  },
  {
    "text": "um, let's see,",
    "start": "245378",
    "end": "250650"
  },
  {
    "text": "you will calculate p of y equals 1 given X.",
    "start": "250650",
    "end": "257380"
  },
  {
    "text": "This is kinda according to Bayes rule. Okay?",
    "start": "261580",
    "end": "267000"
  },
  {
    "text": "Um, all right. So it turns out this algorithm will almost work and here's where it breaks down,",
    "start": "280020",
    "end": "289425"
  },
  {
    "text": "which is, um, you know, so actually eve- every year, there are some CS229 students and some machine learning students,",
    "start": "289425",
    "end": "296190"
  },
  {
    "text": "they will do a class project and some of you will end up submitting this to an academic conference. Right? Some, some- actually some,",
    "start": "296190",
    "end": "302465"
  },
  {
    "text": "some of CS229 class projects get submitted, you know, as conference papers pretty much every year.",
    "start": "302465",
    "end": "307730"
  },
  {
    "text": "One of the top machine learning conferences, is the conference NIPS. NIPS stands for Neural Information Processing Systems, um,",
    "start": "307730",
    "end": "314480"
  },
  {
    "text": "ah, and let's say that in your dictionary, you know, you have 10,000 words in your dictionary.",
    "start": "314480",
    "end": "320660"
  },
  {
    "text": "Let's say that the NIPS conference, the word NIPS corresponds to word number 6017, right?",
    "start": "320660",
    "end": "327320"
  },
  {
    "text": "In your, in your 10,000 word dictionary. But up until now,",
    "start": "327320",
    "end": "333039"
  },
  {
    "text": "presumably you've not had a lot of emails from your friends asking, \"Hey, do you want to submit the paper to the NIPS Conference or not.\"",
    "start": "333040",
    "end": "341224"
  },
  {
    "text": "Um, and so if you use your current, you know, email, set of emails to find these maximum likelihood estimates of parameters,",
    "start": "341225",
    "end": "350000"
  },
  {
    "text": "you will probably estimate that, um, probability of seeing this word given that it's spam email, is probably zero.",
    "start": "350000",
    "end": "362110"
  },
  {
    "text": "Right? Zero over the number of, ah, examples that you've labeled as spam in your email.",
    "start": "362240",
    "end": "369710"
  },
  {
    "text": "So if, if you train up this model using your personal email, probably none of the emails you've received for the last few ones had the word NIPS in it, um, maybe.",
    "start": "369710",
    "end": "377750"
  },
  {
    "text": "Uh, and so if you plug in this formula for maximum likelihood estimate, the numerator is 0 and so your estimate of this is probably 0.",
    "start": "377750",
    "end": "384979"
  },
  {
    "text": "Um, and then similarly,",
    "start": "384980",
    "end": "387570"
  },
  {
    "text": "this is also 0 over, you know, the number of non-spam emails I guess.",
    "start": "390860",
    "end": "395910"
  },
  {
    "text": "Right. So that's what this is, is just this formula. Right? And, um, statistically it's just a bad idea to say that",
    "start": "395910",
    "end": "407870"
  },
  {
    "text": "the chance of something is 0 just because you haven't seen it yet and where this will cause the Naive Bayes algorithm to break down is,",
    "start": "407870",
    "end": "416090"
  },
  {
    "text": "if you use these as estimates of the, of the parameters, so this is your estimates parameter phi subscript 6017 given y equals 1.",
    "start": "416090",
    "end": "426465"
  },
  {
    "text": "This is phi subscript 6017 given y equals 0. Yes? And if you ever calculate this probability,",
    "start": "426465",
    "end": "434200"
  },
  {
    "text": "that is equal to a product from I equals 1 through n. Let's say you",
    "start": "434200",
    "end": "439530"
  },
  {
    "text": "have 10,000 words appear of X_i equals 1,",
    "start": "439530",
    "end": "446055"
  },
  {
    "text": "p of X_i given y, right?",
    "start": "446055",
    "end": "452280"
  },
  {
    "text": "And so if, um, you train your spam classifier on the emails you've gotten up until today,",
    "start": "452280",
    "end": "457340"
  },
  {
    "text": "and then after CS229, your project teammates sen- starts sending you emails saying, hey, you know, we like the class project.",
    "start": "457340",
    "end": "464305"
  },
  {
    "text": "Shall we consider submitting this class project to the NIPS conference? The NIPS conference deadline is usually in,",
    "start": "464305",
    "end": "470060"
  },
  {
    "text": "um, sort of May or June most years so, you know, finish your class project this December,",
    "start": "470060",
    "end": "476100"
  },
  {
    "text": "work on it some more by January, February, March, April next year and then maybe submit it to the conference May or June of 2019.",
    "start": "476100",
    "end": "483105"
  },
  {
    "text": "When you start getting emails from your friends saying, let's submit our papers to NIPS conference, then when you start to see the word NIPS in your email maybe in March of next year,",
    "start": "483105",
    "end": "492800"
  },
  {
    "text": "um, this product of probabilities will have a 0 in it, right?",
    "start": "492800",
    "end": "499245"
  },
  {
    "text": "And so this thing that I've just circled will evaluate to 0  because you multiply a lot numbers, one of which is 0.",
    "start": "499245",
    "end": "505310"
  },
  {
    "text": "Um, and in the same way this, well, this is also 0, right?",
    "start": "505310",
    "end": "511194"
  },
  {
    "text": "And this is also 0 because there'll be that one term in that product over there.",
    "start": "511195",
    "end": "518659"
  },
  {
    "text": "And so what that means is if you train a spam classifier today using all the data you have in your email inbox so far,",
    "start": "518660",
    "end": "526460"
  },
  {
    "text": "and if tomorrow or- or, you know, or two months from now, whenever. The first time you get an email from your teammates that has the word NIPS in it,",
    "start": "526460",
    "end": "535170"
  },
  {
    "text": "your spam classifier will estimate this probability as 0 over 0 plus 0, okay?",
    "start": "535170",
    "end": "542815"
  },
  {
    "text": "Now, apart from the divide by 0 error, uh, it turns out that, um,",
    "start": "542815",
    "end": "548610"
  },
  {
    "text": "statistically, it's just a bad idea, right? To estimate the probability of something as 0 just",
    "start": "548610",
    "end": "553760"
  },
  {
    "text": "because you have not seen it once yet, right? Um, so [NOISE] what I want to do is describe to you Laplace smoothing,",
    "start": "553760",
    "end": "563735"
  },
  {
    "text": "which is a technique that helps, um, address this problem. Okay? And, um, let's- let's- In order to motivate Laplace smoothing, let me, um,",
    "start": "563735",
    "end": "574905"
  },
  {
    "text": "use a- a- a- Yeah, Let me use a different example for now. Right? Um.",
    "start": "574905",
    "end": "583900"
  },
  {
    "text": "Let's see. All right. So, you know, several years ago, this is- this is all the data,",
    "start": "587250",
    "end": "592870"
  },
  {
    "text": "but several years ago- so- so let me put aside Naive Bayes, I want to talk about Laplace smoothing. We will come back to apply Laplace smoothing in Naive Bayes.",
    "start": "592870",
    "end": "598360"
  },
  {
    "text": "So several years ago, I was tracking the progress of the Stanford football team,",
    "start": "598360",
    "end": "603880"
  },
  {
    "text": "um, just a few years ago now. But that year on 9/12, um,",
    "start": "603880",
    "end": "609880"
  },
  {
    "text": "our football team played to Wake Forest and,",
    "start": "609880",
    "end": "615070"
  },
  {
    "text": "you know, actually these are all the, uh, all the stay games we played that year, right? And, um, uh, we did not win that game.",
    "start": "615070",
    "end": "624295"
  },
  {
    "text": "Then on 10/10, we played Oregon State and we did not win that game.",
    "start": "624295",
    "end": "632149"
  },
  {
    "text": "Arizona, we did not win that game.",
    "start": "634170",
    "end": "638600"
  },
  {
    "text": "We played Caltech, we did not win that game. [LAUGHTER].",
    "start": "639750",
    "end": "646420"
  },
  {
    "text": "And the question is, these are all the away games- almost all the out of state games we played that year.",
    "start": "646420",
    "end": "653050"
  },
  {
    "text": "And so you're, you know, Stanford football team's biggest fan. You followed them to every single out of state game and watched all these games.",
    "start": "653050",
    "end": "658135"
  },
  {
    "text": "The question is, after this unfortunate streak, when you go on- there's actually a game on New Year's Eve,",
    "start": "658135",
    "end": "665140"
  },
  {
    "text": "you follow them to their over home game, what's your estimate of the chances of their winning or losing?",
    "start": "665140",
    "end": "672085"
  },
  {
    "text": "Right? Now, if you use maximum likelihood, so let's say this is the variable x,",
    "start": "672085",
    "end": "677574"
  },
  {
    "text": "you would estimate the probability of their winning. Well, maximum likelihood is really count up the number of wins, right,",
    "start": "677575",
    "end": "686005"
  },
  {
    "text": "and divide that by the number of wins plus the number of losses.",
    "start": "686005",
    "end": "693625"
  },
  {
    "text": "And so in this case, um, you estimate this as 0 divided by number of wins with 0,",
    "start": "693625",
    "end": "702085"
  },
  {
    "text": "number of losses was 4, right? Which is equal to 0, okay? Um, that's kinda mean, right?",
    "start": "702085",
    "end": "709480"
  },
  {
    "text": "[LAUGHTER]. They lost 4 games, but you say, no, the chances of their winning is 0. Absolute certainty.",
    "start": "709480",
    "end": "714910"
  },
  {
    "text": "And- and- and just statistically, this is not, um, this is not a good idea.",
    "start": "714910",
    "end": "719995"
  },
  {
    "text": "Um, and so what Laplace smoothing,",
    "start": "719995",
    "end": "723920"
  },
  {
    "text": "what we're going to do is, uh, imagine that we saw the positive outcomes,",
    "start": "727710",
    "end": "734829"
  },
  {
    "text": "the number of wins, you know, just add 1 to the number of wins we actually saw and also the number of losses add 1.",
    "start": "734830",
    "end": "744625"
  },
  {
    "text": "Right? So if you actually saw 0 wins, pretend you saw one and if you saw 4 losses, pretend you saw 1 more than you actually saw.",
    "start": "744625",
    "end": "751270"
  },
  {
    "text": "And so Laplace smoothing, you're gonna end up adding 1 to the numerator and adding 2 to the denominator.",
    "start": "751270",
    "end": "758529"
  },
  {
    "text": "And so this ends up being 1 over 6, right? And that's actually a more reasonable may- maybe",
    "start": "758530",
    "end": "765730"
  },
  {
    "text": "it is a more reasonable estimate for the chance of, uh, them winning or losing the next game.",
    "start": "765730",
    "end": "771415"
  },
  {
    "text": "Um, uh, and the- there's actually a cert- certain- certain set of circumstances under which there's more estimates.",
    "start": "771415",
    "end": "776980"
  },
  {
    "text": "I didn't just make this up in thin air. Uh, Laplace, um, uh, you know, uh, it's an ancient that -- well known,",
    "start": "776980",
    "end": "784195"
  },
  {
    "text": "uh, very influential mathematician. He actually tried to estimated the chance of the sun rising the next day.",
    "start": "784195",
    "end": "790120"
  },
  {
    "text": "And the reasoning was, well, we've seen the sunrise all times and so, uh, but tha- that doesn't mean we should be absolutely certain",
    "start": "790120",
    "end": "796810"
  },
  {
    "text": "the sun will still rise tomorrow, right? And so his reasoning was, well, we've seen the sunrise 10,000 times, you know,",
    "start": "796810",
    "end": "802960"
  },
  {
    "text": "we can be really certain the sun will rise again tomorrow but maybe not absolutely certain because maybe something will go wrong",
    "start": "802960",
    "end": "808269"
  },
  {
    "text": "or who- who knows what will happen in this galaxy? Um , uh, uh, and so his reasoning",
    "start": "808270",
    "end": "813895"
  },
  {
    "text": "was- he derived the optimal estimate- way of estimating, you know, really the chance the sun will rise tomorrow.",
    "start": "813895",
    "end": "819475"
  },
  {
    "text": "And this is actually an optimal estimate under I'll say- I'll say the same assumptions, we don't need to worry about it.",
    "start": "819475",
    "end": "825040"
  },
  {
    "text": "But it turns out that if you assume that you are Bayesian, where the uniform Bayesian prior on the chance of the sun rising tomorrow.",
    "start": "825040",
    "end": "832180"
  },
  {
    "text": "So if the chance the sun rising tomorrow is uniformly distributed, you know, in the unit interval anywhere from 0 to 1,",
    "start": "832180",
    "end": "838345"
  },
  {
    "text": "then after a set of observations of this coin toss of whether the sun rises, this is actually a Bayesian optimal estimate of the chances of the sun rising tomorrow, okay?",
    "start": "838345",
    "end": "846805"
  },
  {
    "text": "If you don't understand what I just said in the last 30 seconds, don't worry about it. Um, uh, it's taught in sort of a Bayesian statistics- advanced Bayesian statistics classes.",
    "start": "846805",
    "end": "854140"
  },
  {
    "text": "But mechanically, what you should do is, uh, take this formula and add 1 to the number of",
    "start": "854140",
    "end": "859570"
  },
  {
    "text": "counts you actually saw for each of the possible outcomes. Um, and more generally,",
    "start": "859570",
    "end": "864880"
  },
  {
    "text": "uh, if y, er, excuse me.",
    "start": "864880",
    "end": "872290"
  },
  {
    "text": "If- if you're estimating probabilities for a k way random variable, um,",
    "start": "872290",
    "end": "880550"
  },
  {
    "text": "then you estimate the chance that X being i to be equal to,",
    "start": "880560",
    "end": "888320"
  },
  {
    "text": "um, so- so that's",
    "start": "894011",
    "end": "903269"
  },
  {
    "text": "the maximum likelihood estimate. And for the fast-moving,",
    "start": "903270",
    "end": "908439"
  },
  {
    "text": "you'd add one to the numerator and, um, you add k to the denominator.",
    "start": "908440",
    "end": "914904"
  },
  {
    "text": "Okay? So for Naive Bayes,",
    "start": "914905",
    "end": "924505"
  },
  {
    "text": "the way this mod- modifies your parameter estimates is this.",
    "start": "924505",
    "end": "929755"
  },
  {
    "text": "Um, I'm just gonna copy over the formula from above. Right?",
    "start": "929755",
    "end": "942660"
  },
  {
    "text": "Um, so that's the maximum likely estimate.",
    "start": "944370",
    "end": "950320"
  },
  {
    "text": "And with Laplace smoothing, you add one to the numerator and add two to the denominator and this",
    "start": "950320",
    "end": "957190"
  },
  {
    "text": "means that your estimates are probably- these probabilities they're never exactly 0 or exactly 1,",
    "start": "957190",
    "end": "962230"
  },
  {
    "text": "which takes away that problem of, you know, the 0 over 0. Okay. Um, and so if you implement this algorithm,",
    "start": "962230",
    "end": "970270"
  },
  {
    "text": "it's not- it's not like a great spam classifier but it's not terrible either. And one nice thing about this algorithm is is so simple, right?",
    "start": "970270",
    "end": "977980"
  },
  {
    "text": "Estimated parameters is just counting ,um, uh, uh can be done, you know, very efficiently, right, just- just by counting,",
    "start": "977980",
    "end": "985390"
  },
  {
    "text": "uh, and then- and classification time is just multiplying a bunch probabilities together. Uh, this is very confusing first algorithm. All right.",
    "start": "985390",
    "end": "994075"
  },
  {
    "text": "Any questions about this? Yeah.",
    "start": "994075",
    "end": "1000210"
  },
  {
    "text": "[inaudible]? Oh sorry. This is y. Er, oh yes.",
    "start": "1000210",
    "end": "1006570"
  },
  {
    "text": "Thank you. Er, yes thank you.",
    "start": "1006570",
    "end": "1009910"
  },
  {
    "text": "All right. Oh, by the way, I- I was actually following the Stanford football team that year so,",
    "start": "1018020",
    "end": "1024255"
  },
  {
    "text": "you know, they lost. [LAUGHTER]. Because, okay, I love our football team. They're doing much better right now. That was a few years ago.",
    "start": "1024255",
    "end": "1030780"
  },
  {
    "text": "[LAUGHTER]. [NOISE].",
    "start": "1030780",
    "end": "1039089"
  },
  {
    "text": "All right. Um, [NOISE]",
    "start": "1039090",
    "end": "1049897"
  },
  {
    "text": "So, um, in- in the- examples we've talked about so far,",
    "start": "1049897",
    "end": "1055470"
  },
  {
    "text": "the features were binary valued. Um, and so, um,",
    "start": "1055470",
    "end": "1061049"
  },
  {
    "text": "actually one quick generalization, uh, when the features are multinomial valued,",
    "start": "1061050",
    "end": "1069825"
  },
  {
    "text": "um, then the generalization- actually here's one example. We talked about predicting housing prices, right?",
    "start": "1069825",
    "end": "1076620"
  },
  {
    "text": "That was our very first world meaning example. Let's say you have a classification problem instead,",
    "start": "1076620",
    "end": "1081690"
  },
  {
    "text": "which is you're listing a house you want to sell, what is the chance of this house to be sold within the next 30 days? So it's a classification problem.",
    "start": "1081690",
    "end": "1087990"
  },
  {
    "text": "Um, so if one of the features is the size of the house x, right,",
    "start": "1087990",
    "end": "1093585"
  },
  {
    "text": "then one way to turn the feature into a discrete feature would be to choose a few buckets,",
    "start": "1093585",
    "end": "1100470"
  },
  {
    "text": "assert the size is less than 400 square feet, uh, versus,",
    "start": "1100470",
    "end": "1106755"
  },
  {
    "text": "you know, 400 to 800 or 800 to 1200 or greater than 1200 square feet.",
    "start": "1106755",
    "end": "1113580"
  },
  {
    "text": "Then you can set the feature XI to one of four values, right?",
    "start": "1113580",
    "end": "1118649"
  },
  {
    "text": "So that is how you discretize a continuous valued feature to a discrete value feature. Um, and if you want to apply Naive Bayes to this problem,",
    "start": "1118650",
    "end": "1127200"
  },
  {
    "text": "then probability of x given y, this is just the same as before.",
    "start": "1127200",
    "end": "1132420"
  },
  {
    "text": "Product from i equals 1 through n of p of",
    "start": "1132420",
    "end": "1140400"
  },
  {
    "text": "xj given Y where now this can be a multinomial probability.",
    "start": "1140400",
    "end": "1149325"
  },
  {
    "text": "Right? Where if- if X now takes on one of four values there then, um, this can be a,",
    "start": "1149325",
    "end": "1155280"
  },
  {
    "text": "uh, estimators and multinomial problem. So instead of a Bernoulli distribution over two possible outcomes,",
    "start": "1155280",
    "end": "1161130"
  },
  {
    "text": "this can be a probably, uh, probability mass function probably over four possible outcomes if you discretize the size of a house into four values.",
    "start": "1161130",
    "end": "1169425"
  },
  {
    "text": "Um, and if you ever discretized variables, a typical rule of thumb in machine learning often we",
    "start": "1169425",
    "end": "1174900"
  },
  {
    "text": "discretize variables into 10 values, into 10 buckets. Uh, just as a- it often seems to work well enough.",
    "start": "1174900",
    "end": "1181110"
  },
  {
    "text": "I- I drew 4  here so I don't have to write all 10 buckets. But if you ever discretize var- variables,",
    "start": "1181110",
    "end": "1186179"
  },
  {
    "text": "you know, most people will start off with discretizing things into 10 values.",
    "start": "1186180",
    "end": "1192640"
  },
  {
    "text": "All right. Now, uh, right.",
    "start": "1200000",
    "end": "1209820"
  },
  {
    "text": "And so this is how you can apply Naive Bayes on other problems as well including cost line, for example, if a house is likely to be sold in the next 30 days.",
    "start": "1209820",
    "end": "1217345"
  },
  {
    "text": "Now, um, there's, uh, there's a different variation on Naive Bayes that I want to describe to",
    "start": "1217345",
    "end": "1226659"
  },
  {
    "text": "you that is actually much better for the specific problem of text classification.",
    "start": "1226660",
    "end": "1231880"
  },
  {
    "text": "Uh and so our feature representation for x so far was the following, right?",
    "start": "1231880",
    "end": "1238530"
  },
  {
    "text": "With a dictionary a, aardvark, buy,",
    "start": "1238530",
    "end": "1244480"
  },
  {
    "text": "So let's say you get an email that's, you know, a very spammy email that's \"Drugs, buy drugs now\",",
    "start": "1250220",
    "end": "1257610"
  },
  {
    "text": "[LAUGHTER] This is meant as an illustrative example,",
    "start": "1257610",
    "end": "1263490"
  },
  {
    "text": "I'm not telling any of you to buy drugs. [LAUGHTER] Um, so if,",
    "start": "1263490",
    "end": "1273120"
  },
  {
    "text": "uh, if you have a dictionary of 10,000 words, then I guess- let's say a is worth 1, aardvark is worth 2,",
    "start": "1273120",
    "end": "1278894"
  },
  {
    "text": "uh, just to, you know, make this example concrete. Let's say the word buy is word 800, drugs is word 1,600,",
    "start": "1278895",
    "end": "1285929"
  },
  {
    "text": "and let's say now is the word- is the 6,200th word in your, uh, 10,000 words in the sorted dictionary.",
    "start": "1285930",
    "end": "1292605"
  },
  {
    "text": "Um, then the representation for x will be, you know, 0, 0, [NOISE] right?",
    "start": "1292605",
    "end": "1298350"
  },
  {
    "text": "And they put a 1 there, and a 1 there, and a 1 there. Okay? Now, one, one- so, um,",
    "start": "1298350",
    "end": "1303660"
  },
  {
    "text": "one interesting thing about Naive Bayes is that it throws away the fact that the word drugs has appeared twice, right?",
    "start": "1303660",
    "end": "1309945"
  },
  {
    "text": "So that's losing a little bit of information, um, uh, and, and in this feature representation, um,",
    "start": "1309945",
    "end": "1317190"
  },
  {
    "text": "you know, each feature is either 0 or 1, right? And that's part of why it throws away the information that's, uh,",
    "start": "1317190",
    "end": "1323804"
  },
  {
    "text": "where the one-word drugs appear twice, and maybe should be given more weight for your- in your classifier.",
    "start": "1323805",
    "end": "1329440"
  },
  {
    "text": "Um, [NOISE] there's a different representation, uh, which is specific to text.",
    "start": "1329870",
    "end": "1340019"
  },
  {
    "text": "And I think text data has a, has a property that they can be very long or very short. You can have a five-word email,",
    "start": "1340020",
    "end": "1346080"
  },
  {
    "text": "or a 1,000-word email, um, and somehow you're taking very short or very long",
    "start": "1346080",
    "end": "1351450"
  },
  {
    "text": "emails and just mapping them to a feature vector that's always the same length. Just a different representation [NOISE] for, um,",
    "start": "1351450",
    "end": "1359415"
  },
  {
    "text": "this email, which is, uh, for that email that says, \"Drugs, buy drugs now\", we're gonna represent it as a four-dimensional feature vector, [NOISE] right?",
    "start": "1359415",
    "end": "1373289"
  },
  {
    "text": "And so this is going to be, um, n-dimensional for an email of length n.",
    "start": "1373290",
    "end": "1379125"
  },
  {
    "text": "So rather than a 10,000-dimensional feature vector, we now have a four-dimensional feature vector,",
    "start": "1379125",
    "end": "1385995"
  },
  {
    "text": "but now xj is,",
    "start": "1385995",
    "end": "1392800"
  },
  {
    "text": "um, an index from 1 to 10,000 instead of just being 0 or 1.",
    "start": "1395300",
    "end": "1401070"
  },
  {
    "text": "Okay? And, uh, n is- and I guess n varies by training example.",
    "start": "1401070",
    "end": "1407909"
  },
  {
    "text": "So ni is the, uh, length of email i.",
    "start": "1407910",
    "end": "1420450"
  },
  {
    "text": "So the longer email, this vector, the feature vector x will be longer,",
    "start": "1420450",
    "end": "1425835"
  },
  {
    "text": "and the shorter email, this feature vector will be shorter, okay?",
    "start": "1425835",
    "end": "1432945"
  },
  {
    "text": "So, um, let's see. Uh, just to give names to the algorithms we're gonna develop,",
    "start": "1432945",
    "end": "1441809"
  },
  {
    "text": "these are- these are really very confusing, very horrible names. But this is what the community calls them.",
    "start": "1441810",
    "end": "1447885"
  },
  {
    "text": "That the, the model we've talked about so far is sometimes called the Multivariate Bernoulli.",
    "start": "1447885",
    "end": "1460000"
  },
  {
    "text": "And that model, uh, so Bernoulli means coin tosses, so multivariate means, you know,",
    "start": "1460670",
    "end": "1466320"
  },
  {
    "text": "there are 10,000 Bernoulli random variables in this model whereas as a Multivariate Bernoulli event model.",
    "start": "1466320",
    "end": "1471855"
  },
  {
    "text": "An event comes with statistics I guess. Um, and the new representation we're gonna talk about is called",
    "start": "1471855",
    "end": "1477330"
  },
  {
    "text": "the [NOISE] Multinomial Event Model.",
    "start": "1477330",
    "end": "1484950"
  },
  {
    "text": "Uh, these two names are- are- are- frankly, these two names are quite confusing. But these are the names that, uh, I think- actually,",
    "start": "1484950",
    "end": "1491760"
  },
  {
    "text": "one of my friends Andrew McCallum, uh, as far as I know, wrote the paper that named these two algorithms.",
    "start": "1491760",
    "end": "1496890"
  },
  {
    "text": "But- but I think these are- these are the names we seem to use.",
    "start": "1496890",
    "end": "1502930"
  },
  {
    "text": "Um, and so, with this new model,",
    "start": "1512630",
    "end": "1518160"
  },
  {
    "text": "um, we're gonna build a generative model, and because it's a generative model,",
    "start": "1518160",
    "end": "1524580"
  },
  {
    "text": "or model p of x, y which can be factored as follows and using the Naive Bayes assumption,",
    "start": "1524580",
    "end": "1533905"
  },
  {
    "text": "we're going to assume that p of x given y is product from i equals 1 through n,",
    "start": "1533905",
    "end": "1540890"
  },
  {
    "text": "of j equals 1 through n, of p of xj, given y, and then times, you know, p of y.",
    "start": "1540890",
    "end": "1549570"
  },
  {
    "text": "Is that second term, right? Now, one of the, uh, uh, one, one of the reasons these two models were very-",
    "start": "1549570",
    "end": "1557085"
  },
  {
    "text": "were frankly actually very confusing to the machine learning community, is because this is exactly the equation [NOISE] that,",
    "start": "1557085",
    "end": "1563070"
  },
  {
    "text": "you know, you saw on Monday, when we described Naive Bayes for the first time, um, that, you know, this, you know,",
    "start": "1563070",
    "end": "1569355"
  },
  {
    "text": "p of x given y is part of probabilities. Right? So this is exactly, uh, so this, this equation looks cosmetically identical,",
    "start": "1569355",
    "end": "1576044"
  },
  {
    "text": "but with this new model, the second model, the confusingly named Multinomial Event Model, um,",
    "start": "1576045",
    "end": "1582480"
  },
  {
    "text": "the definition of xj and the definition of n is very different, right?",
    "start": "1582480",
    "end": "1588315"
  },
  {
    "text": "So instead of a product from 1 through 10,000, there's a product from 1 through the number of words in the email,",
    "start": "1588315",
    "end": "1594674"
  },
  {
    "text": "and this is now instead a multinomial probability. Rather than a binary or Bernoulli probability.",
    "start": "1594675",
    "end": "1600975"
  },
  {
    "text": "Okay? Um, and it turns out that, uh, well,",
    "start": "1600975",
    "end": "1606030"
  },
  {
    "text": "[NOISE] with this model, the parameters are same as before.",
    "start": "1606030",
    "end": "1612540"
  },
  {
    "text": "Phi y is probability of y equals 1, and also, um, the other parameters of this model, phi k,",
    "start": "1612540",
    "end": "1620160"
  },
  {
    "text": "given y equals 0, is a chance of xj equals k,",
    "start": "1620160",
    "end": "1627310"
  },
  {
    "text": "given y equals 0. Right? And- and just to make sure you understand the notation. See if this makes sense.",
    "start": "1628880",
    "end": "1634860"
  },
  {
    "text": "So this probability is the chance of word",
    "start": "1634860",
    "end": "1640215"
  },
  {
    "text": "blank being blank if label y equals 0.",
    "start": "1640215",
    "end": "1649455"
  },
  {
    "text": "So what goes into those two blanks?",
    "start": "1649455",
    "end": "1651970"
  },
  {
    "text": "Actually, what goes in the second blank? Uh, let's see. Well- well, yeah?",
    "start": "1658880",
    "end": "1682780"
  },
  {
    "text": "[inaudible]. Yes. Right. So it's the chance of the third word in the email,",
    "start": "1682780",
    "end": "1689595"
  },
  {
    "text": "being the word drugs, or the chance of the second in the email being buy, or whatever. And one part of, um,",
    "start": "1689595",
    "end": "1696555"
  },
  {
    "text": "why we implicitly assume, mainly why this is tricky, is that, uh, we assume that this probability doesn't depend on j, right?",
    "start": "1696555",
    "end": "1705435"
  },
  {
    "text": "That for every position in the email, for the- the chance that the first word being drugs is same as chance of the second word being drugs,",
    "start": "1705435",
    "end": "1711539"
  },
  {
    "text": "is same as the third word being drugs, which is why, um, on the left-hand side j doesn't actually appear on the left-hand side, right.",
    "start": "1711540",
    "end": "1718570"
  },
  {
    "text": "Makes sense? Any questions about this? No?",
    "start": "1719270",
    "end": "1724770"
  },
  {
    "text": "Okay. All right. Um, and so the way you calculate the probability, the way you would,",
    "start": "1724770",
    "end": "1729884"
  },
  {
    "text": "um, uh, and, and so the way that, uh, given a new email,",
    "start": "1729885",
    "end": "1735885"
  },
  {
    "text": "a test email, um, uh, you would calculate this probability is by, you know,",
    "start": "1735885",
    "end": "1741525"
  },
  {
    "text": "plugging these parameters that you estimate from the data into this formula. Okay? [NOISE]",
    "start": "1741525",
    "end": "1766830"
  },
  {
    "text": "Um, oh, and then, um, I wrote down, uh, [NOISE] right.",
    "start": "1766830",
    "end": "1773774"
  },
  {
    "text": "And then, and then the other set of the parameters is this. [NOISE] Right. Kind of just with y equals 1,",
    "start": "1773775",
    "end": "1780210"
  },
  {
    "text": "is that y equals 0. And then for the maximum likelihood estimate of the parameters, I'll just write out one of them.",
    "start": "1780210",
    "end": "1785910"
  },
  {
    "text": "[NOISE] Your estimate of, uh, the chance of a given word is really anywhere in any position,",
    "start": "1785910",
    "end": "1795150"
  },
  {
    "text": "being word k. What's the chance of some word in a non-spam email being the word drugs, let's say?",
    "start": "1795150",
    "end": "1801720"
  },
  {
    "text": "Um, the chance of that is equal to [NOISE]",
    "start": "1801720",
    "end": "1823049"
  },
  {
    "text": "I find that- well, this indicates a function notation. It looks complex. I'll just say in a second,",
    "start": "1823050",
    "end": "1829990"
  },
  {
    "text": "uh, what this actually means.",
    "start": "1830720",
    "end": "1835875"
  },
  {
    "text": "So the denominator, um, so this space means- so- and so if you figure out what",
    "start": "1835875",
    "end": "1841020"
  },
  {
    "text": "the English meaning of this complicated formula is, this basically says, \"Look at all the words in all of your non-spam emails,",
    "start": "1841020",
    "end": "1848580"
  },
  {
    "text": "all the emails of y equals 0, and look at all of the words in all of the emails, and so all of those words,",
    "start": "1848580",
    "end": "1854295"
  },
  {
    "text": "what fraction of those words is the word drugs?\" And that's, uh, your estimate of the chance of the word drugs",
    "start": "1854295",
    "end": "1860340"
  },
  {
    "text": "appearing in the non-spam email in some position in that email, right? And so, um, in math,",
    "start": "1860340",
    "end": "1866250"
  },
  {
    "text": "the denominator is sum of your training set, indicator is not spam,",
    "start": "1866250",
    "end": "1871545"
  },
  {
    "text": "times the number of words in that email. So the denominator ends up being",
    "start": "1871545",
    "end": "1877230"
  },
  {
    "text": "the total number of words in all of your non-spam emails in your training set, um, and the numerator as some of your training set,",
    "start": "1877230",
    "end": "1884850"
  },
  {
    "text": "sum from i equals 1 through m, indicates a y equals 0.",
    "start": "1884850",
    "end": "1889950"
  },
  {
    "text": "So, you know, count up only the things for non-spam email, and for the non-spam email j equals 1 through ni,",
    "start": "1889950",
    "end": "1897870"
  },
  {
    "text": "go over the words in that email and see how many words are that word k. Right.",
    "start": "1897870",
    "end": "1903390"
  },
  {
    "text": "And so, uh, uh, if in your training set you have, um, uh, ah, you know,",
    "start": "1903390",
    "end": "1908985"
  },
  {
    "text": "100,000 words in your non-spam emails and 200 of them are the word drugs,",
    "start": "1908985",
    "end": "1915090"
  },
  {
    "text": "that occurs, uh, you know, 200 times, then this ratio will be 200 over 100,000. Okay? Oh, and then lastly, um,",
    "start": "1915090",
    "end": "1926760"
  },
  {
    "text": "[NOISE] to implement Laplace smoothing with this, you would,",
    "start": "1926760",
    "end": "1932010"
  },
  {
    "text": "um, add 1 to the numerator as usual, and then, um, let's see.",
    "start": "1932010",
    "end": "1938895"
  },
  {
    "text": "Actually, what- what- what- what would you add to the denominator? Uh-",
    "start": "1938895",
    "end": "1950925"
  },
  {
    "text": "Uh, wait. But what is k? Not k, right? k is a variable. So k indexes into, ah,",
    "start": "1950925",
    "end": "1957210"
  },
  {
    "text": "the words? What do you have?",
    "start": "1957210",
    "end": "1961779"
  },
  {
    "text": "About 10,000. 10,000. Cool. How come? Why 10,000? [inaudible].",
    "start": "1963620",
    "end": "1971730"
  },
  {
    "text": "Cool. Yeah. Yeah. All right. Yeah, Right.",
    "start": "1971730",
    "end": "1977175"
  },
  {
    "text": "Oh, I think I just realized why you say k I think, uh, overloading notation. When defining the possibility, I think I used k as the number of possible outcomes.",
    "start": "1977175",
    "end": "1984255"
  },
  {
    "text": "Yeah, but here k is an index. Yeah. Right? So, um, uh, see I want a numerator and add to number of the",
    "start": "1984255",
    "end": "1991620"
  },
  {
    "text": "possible outcomes in the denominator which in this case was there 10,000. So, um, uh, so this is the probability of, um,",
    "start": "1991620",
    "end": "2000365"
  },
  {
    "text": "X being equal to the value of k, where k ranges from 1-10,000 if you have a dictionary size.",
    "start": "2000365",
    "end": "2010774"
  },
  {
    "text": "If you have a list of 10,000 words you're modeling. And so the number of possible values for X is 10,000,",
    "start": "2010775",
    "end": "2016970"
  },
  {
    "text": "so you add 10,000 to the denominator. Makes sense? Cool. Yeah. Question?",
    "start": "2016970",
    "end": "2022220"
  },
  {
    "text": "[inaudible]. Oh, what do you do if the word's not in your dictionary? So, um, uh, there are two approaches to that.",
    "start": "2022220",
    "end": "2030184"
  },
  {
    "text": "One is, um, just throw it away. Just ignore it, disregard it, that's one. Uh, second approach, is to take the rare words and map them to",
    "start": "2030185",
    "end": "2038180"
  },
  {
    "text": "a special token which traditionally is denoted UNK for unknown words. So, um, if in your training set, uh,",
    "start": "2038180",
    "end": "2046160"
  },
  {
    "text": "you decide to take just the top 10,000 words in- into your dictionary, then everything that's not in the top 10,000 words can map to",
    "start": "2046160",
    "end": "2052715"
  },
  {
    "text": "your unknown word token or the unknown words special symbol. Yeah. [inaudible].",
    "start": "2052715",
    "end": "2062570"
  },
  {
    "text": "Oh, why did I write the run before? Oh, this is an indicator function notation. Uh, uh, so indicator function uh,",
    "start": "2062570",
    "end": "2070175"
  },
  {
    "text": "boy- so if- if, um, and so this is- this notation, right?",
    "start": "2070175",
    "end": "2076850"
  },
  {
    "text": "Means uh- well, so indicator of, you know, 2 equals 1 plus 1. This is true.",
    "start": "2076850",
    "end": "2083720"
  },
  {
    "text": "An indicator of, you know, 3 equals 5 is- is 0, is false.",
    "start": "2083720",
    "end": "2090095"
  },
  {
    "text": "So that's the- yeah, um, cool. Yes, uh, but this is a- this is a little formula",
    "start": "2090095",
    "end": "2097790"
  },
  {
    "text": "that's either true or false depending on whether y-i is 0. Uh, I guess if y-i is 01 this- this is the same as not y-i I guess,",
    "start": "2097790",
    "end": "2106460"
  },
  {
    "text": "so 1 minus y-i will give us 0- yeah. Cool. Okay great.",
    "start": "2106460",
    "end": "2113010"
  },
  {
    "text": "Um, all right. So I think both of the models, ah, ah, including the details that maximum likelihood estimate are written out in,",
    "start": "2113740",
    "end": "2122299"
  },
  {
    "text": "um, more detail in the lecture notes. Um, so, you know,",
    "start": "2122300",
    "end": "2130490"
  },
  {
    "text": "when would you use the Naive Bayes algorithm. It turns out Naive Bayes algorithm is actually not very competitive with other learning algorithms.",
    "start": "2130490",
    "end": "2137360"
  },
  {
    "text": "Uh, so for most problems you find that logistic regression,um, will work better in terms of delivering a higher accuracy than Naive Bayes.",
    "start": "2137360",
    "end": "2147950"
  },
  {
    "text": "But the- the- the advantages of Naive Bayes is, uh, first it's computationally very efficient,",
    "start": "2147950",
    "end": "2154010"
  },
  {
    "text": "and second it's relatively quick to implement, right? And it also doesn't require an iterative gradient descent thing,",
    "start": "2154010",
    "end": "2159980"
  },
  {
    "text": "and the number of lines of code needed to implement Naive Bayes is relatively small. So if you are, uh, facing a problem,",
    "start": "2159980",
    "end": "2168110"
  },
  {
    "text": "way you go is to implement something quick and dirty, then Naive Bayes is- is maybe a reasonable choice.",
    "start": "2168110",
    "end": "2174994"
  },
  {
    "text": "Um, and I think, um, you know as you work on your class projects,",
    "start": "2174995",
    "end": "2180155"
  },
  {
    "text": "I think some of you probably a minority will try to invent a new machine learning algorithm,",
    "start": "2180155",
    "end": "2185989"
  },
  {
    "text": "and write a research paper. Um, and I think, you know, inventing the machine learning algorithm is a great thing to do.",
    "start": "2185989",
    "end": "2192019"
  },
  {
    "text": "It helps a lot of people on a lot different applications so that's one. Um, the majority of class projects in CS229 will try",
    "start": "2192020",
    "end": "2199670"
  },
  {
    "text": "to apply a learning algorithm to a project that you care about.",
    "start": "2199670",
    "end": "2204920"
  },
  {
    "text": "Apply to a research project you're working on somewhere in Stanford or apply to a fun application you wanna",
    "start": "2204920",
    "end": "2209960"
  },
  {
    "text": "build or apply to a business application for some of you taking this on SCPD, taking this remotely.",
    "start": "2209960",
    "end": "2215375"
  },
  {
    "text": "And if your goal is not to invent a brand new learning algorithm, but to take the existing algorithms and apply them,",
    "start": "2215375",
    "end": "2221840"
  },
  {
    "text": "then rule of thumb that's suggested here is, um, ah, when you get started on a machine learning project,",
    "start": "2221840",
    "end": "2228950"
  },
  {
    "text": "start by implementing something quick and dirty. That's been implemented in most complicated possible learning algorithms.",
    "start": "2228950",
    "end": "2234620"
  },
  {
    "text": "Start by implementing something quickly, and, uh, train the algorithm, look at how it performs,",
    "start": "2234620",
    "end": "2239870"
  },
  {
    "text": "and then use that to deep out the algorithm, and keep iterating on- on that. So I think, you know,",
    "start": "2239870",
    "end": "2245675"
  },
  {
    "text": "we're- we're- that's at Stanford. So we're very good at coming up with very complicated algorithms. But if your goal is to make something,",
    "start": "2245675",
    "end": "2252740"
  },
  {
    "text": "um, work for an application, rather than inventing a new learning algorithm and publishing a paper on a new technical, you know, contribution.",
    "start": "2252740",
    "end": "2259940"
  },
  {
    "text": "If you- if your main goal is, uh, you're working on an application on- on understanding news better or improving the environment or estimating prices or whatever.",
    "start": "2259940",
    "end": "2269900"
  },
  {
    "text": "Uh, and your primary objective is just make an algorithm work. Then rather than, uh,",
    "start": "2269900",
    "end": "2275869"
  },
  {
    "text": "building a very complicated algorithm at the onset, um, I would recommend implementing something quickly,",
    "start": "2275870",
    "end": "2282200"
  },
  {
    "text": "uh, so that you can then better understand how it's performing, and then do error analysis which we'll talk about later,",
    "start": "2282200",
    "end": "2288799"
  },
  {
    "text": "and use that to drive your development. Um, you know one- one- one analogy I sometimes make is that,",
    "start": "2288800",
    "end": "2296570"
  },
  {
    "text": "um, if you are, uh, uh, let's see.",
    "start": "2296570",
    "end": "2301805"
  },
  {
    "text": "So if you're writing a new computer program with 10,000 lines of code, right? One approach is to write all 10,000 lines of code first,",
    "start": "2301805",
    "end": "2310505"
  },
  {
    "text": "and then to try compiling it for the first time, right. And that's clearly a bad idea, right? And it's a, you know, you should write small modules, run it,",
    "start": "2310505",
    "end": "2318290"
  },
  {
    "text": "it test it- unit testing, and then build up a program incrementally. Rather than write 10,000 lines of code, and then start to see what syntax errors you're getting for the first time.",
    "start": "2318290",
    "end": "2326494"
  },
  {
    "text": "Um, and I think it's similar for machine learning. Uh, instead of building a very complicated algorithm from the get-go, um,",
    "start": "2326495",
    "end": "2333545"
  },
  {
    "text": "you build a simpler algorithm, test it, and then- and then use the- see what it's doing wrong,",
    "start": "2333545",
    "end": "2338795"
  },
  {
    "text": "see what it's doing wrong to improve from there. You often end up, um, uh, getting to a better performing algorithm faster.",
    "start": "2338795",
    "end": "2347375"
  },
  {
    "text": "Um, so here's- here's- here's one example. This is actually something I used to work on. I- I actually started a conference on email and anti-spam.",
    "start": "2347375",
    "end": "2355580"
  },
  {
    "text": "My student worked on spam classification many years ago. And, um, it turns out that when your'e starting out on a new application problem,",
    "start": "2355580",
    "end": "2364595"
  },
  {
    "text": "um, it's hard to know what's the hardest part of the problem, right. So if you want to build an anti-spam classifier,",
    "start": "2364595",
    "end": "2371360"
  },
  {
    "text": "there are lots of you could work on. For example, spammers will deliberately misspell words.",
    "start": "2371360",
    "end": "2376475"
  },
  {
    "text": "Uh, you know, a lot of mortgage spam, right, refinance your mortgage or whatever. But instead of writing th- the words uh,",
    "start": "2376475",
    "end": "2384305"
  },
  {
    "text": "mortgage spammers will write M-0-R-T-G-A-G-E.",
    "start": "2384305",
    "end": "2392910"
  },
  {
    "text": "Right. Or instead of G-A-G-E, maybe, uh, slash slash, right.",
    "start": "2393010",
    "end": "2399890"
  },
  {
    "text": "But all of us as people have no trouble reading this as a word mortgage but uh, this will trip up a spam filter.",
    "start": "2399890",
    "end": "2405815"
  },
  {
    "text": "This might map the word to- to an unknown word. There it was off by just a letter and it hasn't seen this before,",
    "start": "2405815",
    "end": "2411080"
  },
  {
    "text": "and that's the lightest way to slip by this spam filter. So that's one idea for improving, um,",
    "start": "2411080",
    "end": "2416375"
  },
  {
    "text": "spam or- actually one of our PhD students [inaudible] actually wrote a paper mapping this back to words like that.",
    "start": "2416375",
    "end": "2422990"
  },
  {
    "text": "So the spam filter can see the words the way that humans see them, right. So- so that's one idea. Um, another idea might be a lot of spam email spoofs email headers.",
    "start": "2422990",
    "end": "2432559"
  },
  {
    "text": "[NOISE] You know, uh, spam has often tried to hide where the email truly came from, uh,",
    "start": "2432560",
    "end": "2441740"
  },
  {
    "text": "by spoofing the email header that, you know, address and other information. Um, ah, an- an- another thing you might do is, ah,",
    "start": "2441740",
    "end": "2450545"
  },
  {
    "text": "try to fetch the URLs that are referred to in the email, and then analyze the web pages that you get to.",
    "start": "2450545",
    "end": "2455735"
  },
  {
    "text": "Right, there are a lot of things that you could do to improve a spam filter. And any one of these topics could easily be three months or six months of research.",
    "start": "2455735",
    "end": "2464855"
  },
  {
    "text": "But when you are building say a new spam filter for the first time, how do you actually know which of these is the best investments of your time.",
    "start": "2464855",
    "end": "2471425"
  },
  {
    "text": "So my advice to, ah, those who work on projects, if your primary goal is to just get this thing to work,",
    "start": "2471425",
    "end": "2477355"
  },
  {
    "text": "is to not so-somewhat arbitrarily dive in, and spend six months on improving this or spend,",
    "start": "2477355",
    "end": "2484780"
  },
  {
    "text": "you know, six months on trying to analyze email headers. But you instead implement a more basic algorithm.",
    "start": "2484780",
    "end": "2491255"
  },
  {
    "text": "Almost implement something quick and dirty. And then look at the examples that your learning algorithm is still misclassifying.",
    "start": "2491255",
    "end": "2497450"
  },
  {
    "text": "And you'll find that, if after you've implemented a quick and dirty algorithm, you find that your sp- anti-spam algorithm is",
    "start": "2497450",
    "end": "2503735"
  },
  {
    "text": "misclassifying a lot of examples with these deliberately misspelled words. It's only then that you have more evidence that it's worth",
    "start": "2503735",
    "end": "2509945"
  },
  {
    "text": "spending a bunch of time solving the misspelled words, the deliberately misspelled words problem.",
    "start": "2509945",
    "end": "2515015"
  },
  {
    "text": "Right. When you implement a spam filter, and you see that it's not misclassifying a lot of examples of these misspelled words,",
    "start": "2515015",
    "end": "2520670"
  },
  {
    "text": "then I would say don't bother. Go work on something else instead or at least- at least treat that as a low priority.",
    "start": "2520670",
    "end": "2526010"
  },
  {
    "text": "Okay. So one of the uses of, um, GDA Gaussian discriminant analysis as well as Naive Bayes is that- is,",
    "start": "2526010",
    "end": "2533465"
  },
  {
    "text": "uh, they're not going to be the most accurate algorithms. If you want the highest classification accuracy,",
    "start": "2533465",
    "end": "2539200"
  },
  {
    "text": "their are other algorithms like logistic regression or SVM which we talked about, or neural networks we'll talk about later,",
    "start": "2539200",
    "end": "2545380"
  },
  {
    "text": "which will almost always give you higher classification accuracy than these algorithms. But the advantage of Gaussian discriminant analysis,",
    "start": "2545380",
    "end": "2552064"
  },
  {
    "text": "and Naive Bayes is that, um, they are very quick to train or it's non-iterative.",
    "start": "2552064",
    "end": "2558320"
  },
  {
    "text": "Uh, uh, this is just counting, and GDA is just computing means and co-variances, right. So it's very competition efficient,",
    "start": "2558320",
    "end": "2564970"
  },
  {
    "text": "and also they are- they are simple to implement. So it can help you implement that quick and dirty thing that helps you,",
    "start": "2564970",
    "end": "2571855"
  },
  {
    "text": "um, get going more quickly. And so I think for your project as well,",
    "start": "2571855",
    "end": "2577355"
  },
  {
    "text": "I would advise most of you to uh, uh, you know, as you start working on your project,",
    "start": "2577355",
    "end": "2582935"
  },
  {
    "text": "I would advise most of you to, um, don't spend weeks designing exactly what you're going to do.",
    "start": "2582935",
    "end": "2588845"
  },
  {
    "text": "Uh, if you have an applicant- if- if you- if you- if you have an applied project, but instead get a data set,",
    "start": "2588845",
    "end": "2593855"
  },
  {
    "text": "uh, and apply something simple. Start with logistic regression not- not a neural network or not- not something more complicated.",
    "start": "2593855",
    "end": "2600230"
  },
  {
    "text": "Or start with Naive Bayes, and then see how that performs, and then- and then go from there.",
    "start": "2600230",
    "end": "2605345"
  },
  {
    "text": "Okay? All right. So that's it for, uh, Naive Bayes, um,",
    "start": "2605345",
    "end": "2612575"
  },
  {
    "text": "and generative learning algorithms. The next thing I wanna do is move on to a different cla- type of classifier, ah,",
    "start": "2612575",
    "end": "2620480"
  },
  {
    "text": "which is a support vector machine. Um, let me just check any questions about this before I move on. Yeah.",
    "start": "2620480",
    "end": "2627140"
  },
  {
    "text": "[inaudible].",
    "start": "2627140",
    "end": "2646849"
  },
  {
    "text": "Sorry you can use logistic regression with. [OVERLAPPING] Discrete variables [inaudible]",
    "start": "2646850",
    "end": "2661680"
  },
  {
    "text": "Oh I see yeah right yes so yes, uh, right. So one of the weaknesses of",
    "start": "2661680",
    "end": "2667710"
  },
  {
    "text": "the Naive Bayes Algorithm is that it treats all of the words as completely, you know, separate from each other.",
    "start": "2667710",
    "end": "2673155"
  },
  {
    "text": "And so the words one and two are quite similar and the words, you know, like mother and father are quite similar.",
    "start": "2673155",
    "end": "2679349"
  },
  {
    "text": "Uh, and so wi- wi-with this, uh, feature representation, it doesn't know the relationship between these words.",
    "start": "2679350",
    "end": "2685980"
  },
  {
    "text": "So, um, in machine learning there are other ways of representing words, uh, there's a technique called word embeddings,",
    "start": "2685980",
    "end": "2691800"
  },
  {
    "text": "um-[NOISE] In which you",
    "start": "2691800",
    "end": "2697860"
  },
  {
    "text": "choose the feature representation that encodes the fact that the words one and two are quite similar to each other.",
    "start": "2697860",
    "end": "2703050"
  },
  {
    "text": "Uh, the words mother and father are quite similar to each other. Yeah the words, um, whatever London and Tokyo are",
    "start": "2703050",
    "end": "2710190"
  },
  {
    "text": "quite similar to each other because they are both city names. Uh, and so, uh, this is a technique that I was not planning to teach here but that is taught in CS 230.",
    "start": "2710190",
    "end": "2720345"
  },
  {
    "text": "So in- in- in neural networks [NOISE] , right, but you can also read up on word embeddings or look at some of",
    "start": "2720345",
    "end": "2727560"
  },
  {
    "text": "the videos and resources from CS 230 if you want to learn about that. Uh, so the word embeddings techniques.",
    "start": "2727560",
    "end": "2733740"
  },
  {
    "text": "These are techniques from neural networks really. Will reduce the number of training examples you need so they are a good text classifier because it comes in with",
    "start": "2733740",
    "end": "2740100"
  },
  {
    "text": "more knowledge baked in, right. Cool. Anything else?",
    "start": "2740100",
    "end": "2745380"
  },
  {
    "text": "[NOISE] Cool.",
    "start": "2745380",
    "end": "2750569"
  },
  {
    "text": "By the way I do this in the other classes too. In some of the other classes, somebody's got a question they go, no we don't do that we just covered that in",
    "start": "2750570",
    "end": "2757125"
  },
  {
    "text": "CS 229 so [LAUGHTER].",
    "start": "2757125",
    "end": "2771660"
  },
  {
    "text": "Actually CS224N I think also covers this. Yeah, The NLP class, yeah, pretty sure, actually I am sure they do.",
    "start": "2771660",
    "end": "2779350"
  },
  {
    "text": "Okay so, [NOISE] su-support vector machines, SVMs.",
    "start": "2782450",
    "end": "2794670"
  },
  {
    "text": "Um, let's say the classification problem,",
    "start": "2794670",
    "end": "2801000"
  },
  {
    "text": "[NOISE].",
    "start": "2801000",
    "end": "2809940"
  },
  {
    "text": "Right, where the data set looks like this, uh, and so you want an algorithm to find, you know,",
    "start": "2809940",
    "end": "2815805"
  },
  {
    "text": "like a nonlinear decision boundary, right? So the support vector machine will be an algorithm to help us",
    "start": "2815805",
    "end": "2822540"
  },
  {
    "text": "find potentially very very non-linear decision boundaries like this. Now one way to build a classifier like this would be to use logistic regression.",
    "start": "2822540",
    "end": "2831555"
  },
  {
    "text": "But if this is X 1, this is X 2, right, so logistic regression will fit the three lines of data,",
    "start": "2831555",
    "end": "2839369"
  },
  {
    "text": "Gaussian discriminant analysis will end up with a straight line decision boundary. So one way to apply logistic regression like this would be to take",
    "start": "2839370",
    "end": "2845519"
  },
  {
    "text": "your feature vector X 1 X 2 and map it to a high dimensional feature vector with,",
    "start": "2845520",
    "end": "2851490"
  },
  {
    "text": "you know, X 1, X 2, X 1 squared, X 2 squared X 1, X 2 maybe X 1 cubed,",
    "start": "2851490",
    "end": "2858555"
  },
  {
    "text": "X 2 cubed and so on. And have a new feature vector which we would call phi of x. That- that has these high-dimensional features right, now, um,",
    "start": "2858555",
    "end": "2868365"
  },
  {
    "text": "it turns out if you do this and then apply logistic regression to this augmented feature vector, uh,",
    "start": "2868365",
    "end": "2875100"
  },
  {
    "text": "then logistic regression can learn non-linear decision boundaries. Uh, with these other features it's just regression",
    "start": "2875100",
    "end": "2881040"
  },
  {
    "text": "and you actually learn the decision boundary. This is- there's a- there's a shape of an ellipse, right. Um, but randomly choosing",
    "start": "2881040",
    "end": "2888540"
  },
  {
    "text": "these features is little bit of a pain right. I- I- I don't know. What I- I- I actually don't know what,",
    "start": "2888540",
    "end": "2894285"
  },
  {
    "text": "you know, type of a, uh, set of features could get you a decision boundary like that right.",
    "start": "2894285",
    "end": "2900404"
  },
  {
    "text": "Rather than just an ellipse and more complex as your boundary. Um, and what we will see with support vector machines is that we",
    "start": "2900405",
    "end": "2908370"
  },
  {
    "text": "will be able to derive an algorithm that can take say input features X 1, X 2,",
    "start": "2908370",
    "end": "2913605"
  },
  {
    "text": "map them to a much higher dimensional set of features. Uh, and then apply a linear classifier,",
    "start": "2913605",
    "end": "2921105"
  },
  {
    "text": "uh, in a way similar to logistic regression. But different in details that allows you to learn very non-linear decision boundaries.",
    "start": "2921105",
    "end": "2928980"
  },
  {
    "text": "Okay. Um, and I think, uh, you know, a support vector machine, one of the- actually one of the reasons, uh,",
    "start": "2928980",
    "end": "2935385"
  },
  {
    "text": "support vector machines are used today is- is a relatively turn-key algorithm. And what I mean by that is it doesn't have too many parameters to fiddle with.",
    "start": "2935385",
    "end": "2943650"
  },
  {
    "text": "Uh, even for logistic regression or for linear regression. You know you might have to tune the gradient descent parameter,",
    "start": "2943650",
    "end": "2951260"
  },
  {
    "text": "uh, tune the learning rate sorry, tune the learning rate alpha. And that's just another thing to fit in with. We`ll try a few values and hope you didn't mess up how you set that value.",
    "start": "2951260",
    "end": "2959150"
  },
  {
    "text": "Um, support vector machine today has a very, uh,",
    "start": "2959150",
    "end": "2964184"
  },
  {
    "text": "robust, very mature software packages that you can just download to train the support vector machine on- on any on,",
    "start": "2964185",
    "end": "2970935"
  },
  {
    "text": "you know, on a problem and you just run it and the algorithm will, kind of, converge without you having to worry too much about the details.",
    "start": "2970935",
    "end": "2977430"
  },
  {
    "text": "Um, so I think in the grand scheme of things today I would say support vector machines are not as effective as neural networks for many problems.",
    "start": "2977430",
    "end": "2985470"
  },
  {
    "text": "But, um, uh, but one great property of support vector machines is- is- is turn key.",
    "start": "2985470",
    "end": "2990740"
  },
  {
    "text": "You kind of just turn the key and it works and there isn't as many parameters like the learning rate and other things that you had to fiddle with.",
    "start": "2990740",
    "end": "2997595"
  },
  {
    "text": "Okay, um so the road map is,",
    "start": "2997595",
    "end": "3008300"
  },
  {
    "text": "uh, we're going to develop the following set of ideas. We talked about the optimal [NOISE] margin classifier today, and, uh,",
    "start": "3008300",
    "end": "3020945"
  },
  {
    "text": "we'll start with the separable case",
    "start": "3020945",
    "end": "3026360"
  },
  {
    "text": "and what that means is going to start off with datasets, um, that we assume look like this and that are linearly separable.",
    "start": "3026360",
    "end": "3035844"
  },
  {
    "text": "Right, and so the optimal margin classifier is the basic building block for the support vector machine,",
    "start": "3035844",
    "end": "3041315"
  },
  {
    "text": "and, uh, we'll first derive an algorithm, uh, that' ll be- that will have some similarities to",
    "start": "3041315",
    "end": "3047630"
  },
  {
    "text": "logistic regression but that allows us to scale, uh, in important ways that to find a linear classifier",
    "start": "3047630",
    "end": "3055100"
  },
  {
    "text": "for training sets like this that we assume for now can be linearly separated. Um, so we'll do that today.",
    "start": "3055100",
    "end": "3061505"
  },
  {
    "text": "And then what you'll see on Wednesday is, um, excuse me, next Monday,",
    "start": "3061505",
    "end": "3067595"
  },
  {
    "text": "which is next Monday is an idea called kernels. And the kernel idea is one of the most powerful ideas in machine learning.",
    "start": "3067595",
    "end": "3075710"
  },
  {
    "text": "Is, um, how do you take a feature vector x, maybe this is R 2,",
    "start": "3075710",
    "end": "3080930"
  },
  {
    "text": "right, and map it to a much higher dimensional set of features.",
    "start": "3080930",
    "end": "3087559"
  },
  {
    "text": "In our example there that was R 5, right, and then train an algorithm on this high dimensional set of features.",
    "start": "3087560",
    "end": "3096260"
  },
  {
    "text": "And- and the cool thing about kernels is that this high dimensional set of features may not be R 5.",
    "start": "3096260",
    "end": "3101645"
  },
  {
    "text": "It might be R100,000 or it might even be R infinite.",
    "start": "3101645",
    "end": "3107975"
  },
  {
    "text": "Um, and so with the kernel formulation we're gonna take our original set of features that you are given for the houses you're trying to sell.",
    "start": "3107975",
    "end": "3116300"
  },
  {
    "text": "For, uh, you know, medical conditions you're trying to predict and map this two-dimensional feature vector space",
    "start": "3116300",
    "end": "3122120"
  },
  {
    "text": "into maybe infinite dimensional set of features. And, um, what this does is it relieves us",
    "start": "3122120",
    "end": "3128059"
  },
  {
    "text": "from a lot of the burden of manually picking features, right, like do you want to have square root of X 1",
    "start": "3128060",
    "end": "3133520"
  },
  {
    "text": "or maybe X 1, X 2 to the power of two thirds. So you just don't have to fiddle with these features too much",
    "start": "3133520",
    "end": "3139265"
  },
  {
    "text": "because the kernels will allow you to choose an infinitely large set of features.",
    "start": "3139265",
    "end": "3144515"
  },
  {
    "text": "Okay, um, and then finally, uh, we'll talk about the inseparable case.",
    "start": "3144515",
    "end": "3150290"
  },
  {
    "text": "[NOISE] So we're gonna do this today and then",
    "start": "3150290",
    "end": "3155540"
  },
  {
    "text": "this next, uh, Monday okay.",
    "start": "3155540",
    "end": "3162060"
  },
  {
    "text": "So [NOISE] and by the way I, you know, th-the machine learning world has become a little bit funny.",
    "start": "3173620",
    "end": "3180410"
  },
  {
    "text": "I think that if you read in the news the media talks a lot about machine learning, the media just talks about,",
    "start": "3180410",
    "end": "3187060"
  },
  {
    "text": "you know, neural networks all the time, right? And you'll hear about neural networks and deep learning a little bit later in this class. But if you look at what actually happens in practice in machine learning.",
    "start": "3187060",
    "end": "3196315"
  },
  {
    "text": "Uh, the set of algorithms is actually used in practice, is actually much wider than neural networks and deep learning.",
    "start": "3196315",
    "end": "3202369"
  },
  {
    "text": "So- so we do not live in a neural networks only world. We actually use many, many tools in machine learning.",
    "start": "3202370",
    "end": "3208535"
  },
  {
    "text": "It's just that deep learning attracts the attention of the media in some way there's quite disproportionate to what I find useful, you know,",
    "start": "3208535",
    "end": "3218750"
  },
  {
    "text": "I knew that's like- I loved that, you know but- but they're not- they're not the only thing in the world,",
    "start": "3218750",
    "end": "3223970"
  },
  {
    "text": "uh, and so yeah and then late last night I was talking to an engineer, uh, about factor analysis which we'll learn about later in CS229",
    "start": "3223970",
    "end": "3231560"
  },
  {
    "text": "right, there's an unsupervised learning algorithm and there's an application, uh, that one of my teams is working on in manufacturing.",
    "start": "3231560",
    "end": "3238660"
  },
  {
    "text": "Where we're gonna use factor analysis or something very similar to it. Which- which is totally not a neural network technique.",
    "start": "3238660",
    "end": "3244200"
  },
  {
    "text": "Right. But still there, there are all these other techniques that including support vector machines and Naive Bayes I think do get used and are important.",
    "start": "3244200",
    "end": "3253400"
  },
  {
    "text": "All right so let's start developing the optimal margin classifier.",
    "start": "3254520",
    "end": "3260990"
  },
  {
    "text": "[NOISE]",
    "start": "3260990",
    "end": "3266885"
  },
  {
    "text": "So, um, first, let me define the functional margin,",
    "start": "3266885",
    "end": "3272015"
  },
  {
    "text": "which is, uh, informally, the functional margin of the classifier is how well- how,",
    "start": "3272015",
    "end": "3278105"
  },
  {
    "text": "how confidently and accurately do you classify an example. Um, so here's what I mean.",
    "start": "3278105",
    "end": "3283865"
  },
  {
    "text": "Uh, we're gonna go to binary classification, and we're gonna use logistic regression, right?",
    "start": "3283865",
    "end": "3290420"
  },
  {
    "text": "So, so let's, let's start by motivating this with logistic regression [NOISE].",
    "start": "3290420",
    "end": "3296569"
  },
  {
    "text": "So this, this is a classifier H of theta equals the logistic function of pi to theta transpose x.",
    "start": "3296570",
    "end": "3301775"
  },
  {
    "text": "And so, um, if you turn this into a binary classification, if, if,",
    "start": "3301775",
    "end": "3307474"
  },
  {
    "text": "if you have this algorithm predict not a probability but predict 0 or 1, then what this classifier will do is, uh, predict 1.",
    "start": "3307475",
    "end": "3316170"
  },
  {
    "text": "If theta transpose x is greater than 0, right?",
    "start": "3317470",
    "end": "3323522"
  },
  {
    "text": "Um, and predict 0 otherwise.",
    "start": "3323522",
    "end": "3329900"
  },
  {
    "text": "Okay. Because theta transpose x greater than 0, this means that, um, g of theta transpose x is greater than 0.5 [NOISE],",
    "start": "3329900",
    "end": "3340700"
  },
  {
    "text": "and you can have greater than or greater than equal to, it doesn't matter. It is, it's exactly 0.5, it doesn't really matter what you do.",
    "start": "3340700",
    "end": "3346925"
  },
  {
    "text": "Um, and so you predict 1 if theta transpose x is greater than equal to 0,",
    "start": "3346925",
    "end": "3352385"
  },
  {
    "text": "meaning that the upper probability- the estimated probability of a class  being 1 is greater than 50/50, and so you predict 1.",
    "start": "3352385",
    "end": "3358925"
  },
  {
    "text": "And if theta transpose x is less than 0, then you predict that this class is 0. Okay. So this is what will happen if you have, um,",
    "start": "3358925",
    "end": "3366770"
  },
  {
    "text": "logistic regression output 1 or 0 rather than output a probability, right.",
    "start": "3366770",
    "end": "3371870"
  },
  {
    "text": "So in other words, this means that if y_i is equal to 1, right?",
    "start": "3371870",
    "end": "3381620"
  },
  {
    "text": "Then hope or we want that",
    "start": "3381620",
    "end": "3387170"
  },
  {
    "text": "theta transpose x_i is much greater than 0.",
    "start": "3387170",
    "end": "3393980"
  },
  {
    "text": "Uh, this double greater than sign, it means much greater, right? Um, uh, because if the true label is 1,",
    "start": "3393980",
    "end": "3402155"
  },
  {
    "text": "then if the algorithm is doing well, hopefully theta transpose x, right?",
    "start": "3402155",
    "end": "3408575"
  },
  {
    "text": "Will be faster there, right? So the output probability is very, very close to 1. And if indeed theta transpose x is much greater than 0,",
    "start": "3408575",
    "end": "3416675"
  },
  {
    "text": "then g of theta transpose x will be very close to 1 which means that is,",
    "start": "3416675",
    "end": "3421850"
  },
  {
    "text": "it's giving a very good, very accurate prediction. Very correct and confident prediction, right?",
    "start": "3421850",
    "end": "3427595"
  },
  {
    "text": "That, that equals 1. Um, and if y_i is equal to 0,",
    "start": "3427595",
    "end": "3433820"
  },
  {
    "text": "then what we want or what we hope, is that theta transpose xi is much less than 0, right?",
    "start": "3433820",
    "end": "3441515"
  },
  {
    "text": "Because, uh, if this is true, then the algorithm is doing very well on this example. Okay.",
    "start": "3441515",
    "end": "3447540"
  },
  {
    "text": "So, um.",
    "start": "3449440",
    "end": "3458270"
  },
  {
    "text": "So the functional margin which we'll define in a second, uh, captures [NOISE] this idea that if a classifier has a large functional margin,",
    "start": "3458270",
    "end": "3467540"
  },
  {
    "text": "it means that these two statements are true, right? Um, so looking ahead a little bit,",
    "start": "3467540",
    "end": "3475625"
  },
  {
    "text": "there's a different thing we'll define in a second which is called the geometric margin and that's the following.",
    "start": "3475625",
    "end": "3483694"
  },
  {
    "text": "And for now, let's assume the data is, is linearly separable.",
    "start": "3483695",
    "end": "3488580"
  },
  {
    "text": "Okay. Um, right.",
    "start": "3489130",
    "end": "3492450"
  },
  {
    "text": "So let's say that's the data set. [NOISE] Now,",
    "start": "3495820",
    "end": "3500840"
  },
  {
    "text": "[NOISE]",
    "start": "3500840",
    "end": "3509130"
  },
  {
    "text": "that seems like a pretty good decision boundary for separating the positive [NOISE] and negative examples. [NOISE] Um, that's another decision boundary in red,",
    "start": "3509130",
    "end": "3519890"
  },
  {
    "text": "that also separates the positive negative examples. But somehow the green line looks much better than the red line, okay?",
    "start": "3519890",
    "end": "3526190"
  },
  {
    "text": "So, uh, why is that? Well, the red line comes really close to a few of the training examples,",
    "start": "3526190",
    "end": "3534635"
  },
  {
    "text": "whereas the green line, you know, has a much bigger separation, right?",
    "start": "3534635",
    "end": "3542710"
  },
  {
    "text": "Just has a much bigger distance from the positive and negative examples. So even though the red line and the [NOISE] green line both, you know,",
    "start": "3542710",
    "end": "3550720"
  },
  {
    "text": "perfectly separate the positive and negative examples, the green line has a much bigger separation,",
    "start": "3550720",
    "end": "3558410"
  },
  {
    "text": "uh, which is called the geometric margin. But there's a much bigger geometric margin meaning a physical separation from the trained examples even as it separates them.",
    "start": "3558410",
    "end": "3567155"
  },
  {
    "text": "Okay. Um, and so what I'd like to do in the,",
    "start": "3567155",
    "end": "3572750"
  },
  {
    "text": "uh, next several, I guess in the next, next, next 20 minutes is formalize definite functional margin,",
    "start": "3572750",
    "end": "3578930"
  },
  {
    "text": "formalize definition geometric margin, and it will pose the, the, I guess the optimal margin classifier which based in",
    "start": "3578930",
    "end": "3585490"
  },
  {
    "text": "the algorithm that tries to maximize the geometric margin. So what the rudimentary SVM does,",
    "start": "3585490",
    "end": "3590980"
  },
  {
    "text": "what the SVM and low-dimensional spaces will do, also called the optimal margin classifier, is pose an optimization problem to try to find",
    "start": "3590980",
    "end": "3598690"
  },
  {
    "text": "the green line to classify these examples, okay? So, um, [NOISE] now,",
    "start": "3598690",
    "end": "3609980"
  },
  {
    "text": "um, in order to develop SVMs, I'm going to change the notation a little bit again. You know, because these algorithms have different properties, um,",
    "start": "3609980",
    "end": "3618275"
  },
  {
    "text": "using slightly different notation to describe them, makes then the math a little bit easier. So when developing SVMs,",
    "start": "3618275",
    "end": "3625475"
  },
  {
    "text": "we're going to use, um, minus 1 and plus 1 to denote the class labels.",
    "start": "3625475",
    "end": "3633335"
  },
  {
    "text": "And, um, we're going to have a H output.",
    "start": "3633335",
    "end": "3643140"
  },
  {
    "text": "So rather than having a hypothesis output a probability like you saw in logistic regression,",
    "start": "3647470",
    "end": "3654335"
  },
  {
    "text": "the support vector machine will output either minus 1 or plus 1. And so, uh, g of z becomes minus 1 or 1, um, actually.",
    "start": "3654335",
    "end": "3667235"
  },
  {
    "text": "So output 1 if z is greater than equal to 0, and minus 1 otherwise, okay.",
    "start": "3667235",
    "end": "3676850"
  },
  {
    "text": "So instead of a smooth transition from 0 to 1, we have a hard transition, an abrupt transition from negative 1 to, um, plus 1.",
    "start": "3676850",
    "end": "3686180"
  },
  {
    "text": "[NOISE]",
    "start": "3686180",
    "end": "3697099"
  },
  {
    "text": "And finally, where previously we had for logistic regression, right?",
    "start": "3697100",
    "end": "3708200"
  },
  {
    "text": "Where, uh, this was R N plus 1 with x_0 equals 1.",
    "start": "3708200",
    "end": "3714244"
  },
  {
    "text": "For the SVM, we will have h of, I'll just write this out.",
    "start": "3714245",
    "end": "3720990"
  },
  {
    "text": "Okay. Um, so for the SVM, the parameters of the SVM will be the parameters w and b.",
    "start": "3734830",
    "end": "3742550"
  },
  {
    "text": "And hypothesis applied to x will be g of this, and where dropping the x_0 equals 1 [NOISE] constraint.",
    "start": "3742550",
    "end": "3750695"
  },
  {
    "text": "So separate out w and b as follows. So this is a standard notation used to develop support vector machines.",
    "start": "3750695",
    "end": "3757565"
  },
  {
    "text": "Um, and one way to think about this, is if the parameters are, you know, theta 0, theta 1,",
    "start": "3757565",
    "end": "3762650"
  },
  {
    "text": "theta 2, theta 3, then this is a new b, and this is a new w. Okay?",
    "start": "3762650",
    "end": "3768740"
  },
  {
    "text": "So you just separate out the, the, the, uh, theta 0 which was previously multiplying to x_o, right?",
    "start": "3768740",
    "end": "3779090"
  },
  {
    "text": "And so um, uh, yeah, right. And so this term here becomes sum from i equals 1 through N,",
    "start": "3779090",
    "end": "3788870"
  },
  {
    "text": "uh, w_i x_i plus b, right? Since we've gotten rid of [NOISE] x_0.",
    "start": "3788870",
    "end": "3800119"
  },
  {
    "text": "[NOISE].",
    "start": "3800120",
    "end": "3816005"
  },
  {
    "text": "All right. So let me formalize the definition of a functional margin.",
    "start": "3816005",
    "end": "3821930"
  },
  {
    "text": "[NOISE] So um, ah,",
    "start": "3821930",
    "end": "3829470"
  },
  {
    "text": "so the parameters w and b are defined as linear classifier, right, so you know,",
    "start": "3829720",
    "end": "3835415"
  },
  {
    "text": "wh- what- the formulas we just wrote down the parameters w and b, defines the a- a, uh, uh,",
    "start": "3835415",
    "end": "3840440"
  },
  {
    "text": "re- really defines a hyperplane. Ah, but defines a line, or in high dimensions it'd be a plane or a hyperplane that defines a straight line,",
    "start": "3840440",
    "end": "3848285"
  },
  {
    "text": "ah, ah, separating out the positive and negative examples. And so we're gonna say the functional margin of the,",
    "start": "3848285",
    "end": "3855605"
  },
  {
    "text": "actually my hyperplane [NOISE]",
    "start": "3855605",
    "end": "3882290"
  },
  {
    "text": "Okay, so the functional margin of a hyperplane defined by this with respect to one training example.",
    "start": "3882290",
    "end": "3890135"
  },
  {
    "text": "We're going to write as this, um, and hyperplane just means straight line,",
    "start": "3890135",
    "end": "3895535"
  },
  {
    "text": "right, but in high dimension. So this is linear classifiers, so its just, you know, functional margin of this classifier with respect to one training example,",
    "start": "3895535",
    "end": "3902960"
  },
  {
    "text": "we're going to define as this. And so if you compare this with the equations we had up there,",
    "start": "3902960",
    "end": "3909770"
  },
  {
    "text": "um, you know, if y equals 1 we hope for that, if y equals 0, we hope for that. So really what we hope for is for",
    "start": "3909770",
    "end": "3916190"
  },
  {
    "text": "our classifier to achieve a large functional margin, right? And so, um, so if y_i equals 1 then what we want or what we hope for,",
    "start": "3916190",
    "end": "3929300"
  },
  {
    "text": "um, is that w transpose x_i plus b is greater than,",
    "start": "3929300",
    "end": "3936335"
  },
  {
    "text": "much greater than 0, and that the label is equal to minus 1. [NOISE] Then we want or we hope that [NOISE] this is much smaller than 0.",
    "start": "3936335",
    "end": "3949910"
  },
  {
    "text": "Um, and if you, kind of, combine these two statements, if you take y_i,",
    "start": "3949910",
    "end": "3955950"
  },
  {
    "text": "right, and multiply it with, er, that, [NOISE] then, you know,",
    "start": "3957070",
    "end": "3964865"
  },
  {
    "text": "these two statements together is basically saying that you hope that Gamma hat i is much greater than 0, right,",
    "start": "3964865",
    "end": "3971690"
  },
  {
    "text": "because y_i now is plus 1 or minus 1 and, uh, uh, and so y is equal to 1 you want this to be very, very large.",
    "start": "3971690",
    "end": "3979954"
  },
  {
    "text": "If y_i is negative 1, you want this to be a very, very large negative number. Um, and so either way it's just saying that you hope this would be very large, okay?",
    "start": "3979955",
    "end": "3989075"
  },
  {
    "text": "So we just hope that. [NOISE] And- and as an aside,",
    "start": "3989075",
    "end": "4000579"
  },
  {
    "text": "ah, one property of this as well is that, um,",
    "start": "4000580",
    "end": "4006560"
  },
  {
    "text": "so long as Gamma hat i is greater than 0, that means the algorithm,",
    "start": "4008850",
    "end": "4015985"
  },
  {
    "text": "um, right, is equal to y_i.",
    "start": "4015985",
    "end": "4022240"
  },
  {
    "text": "[NOISE] Ah, so- so- so long as the, um, functional margin,",
    "start": "4022240",
    "end": "4027550"
  },
  {
    "text": "so long as this Gamma hat i is greater than 0, it means that, ah, either this is bigger than 0,",
    "start": "4027550",
    "end": "4034270"
  },
  {
    "text": "this is less than 0 depending on the sign of the label. And it means that the algorithm gets",
    "start": "4034270",
    "end": "4040315"
  },
  {
    "text": "this one example correct at least, right? And if- if much greater than 0 then it means, you know,",
    "start": "4040315",
    "end": "4046780"
  },
  {
    "text": "so if it is greater than 0 it means in- in the logistic regression case it means that, the prediction is at least a little bit above 0.5,",
    "start": "4046780",
    "end": "4052570"
  },
  {
    "text": "a little bit below 0.5, probably 0 so that at least gets it, right? And if it is much greater than 0 much less than 0,",
    "start": "4052570",
    "end": "4058090"
  },
  {
    "text": "then that means it, you know, the probability of output in the logistic regression case is either very close to 1 or very close to 0.",
    "start": "4058090",
    "end": "4065420"
  },
  {
    "text": "So one other definition, [NOISE]",
    "start": "4066870",
    "end": "4080470"
  },
  {
    "text": "I'm gonna define the functional margin with respect to the training set to be Gamma hat, equals min over i of Gamma hat i,",
    "start": "4080470",
    "end": "4089500"
  },
  {
    "text": "where here i [NOISE] equals ranges over your training examples. Okay. So, um, this is a worst-case notion,",
    "start": "4089500",
    "end": "4096219"
  },
  {
    "text": "but so this definition of a function margin, on the left we defined functional margins with respect to a single training example,",
    "start": "4096220",
    "end": "4103194"
  },
  {
    "text": "which is how well are you doing on that one training example? And we'll define the function margin with respect to the entire training set as,",
    "start": "4103195",
    "end": "4109765"
  },
  {
    "text": "how well are you doing on the worst example in your training set? Okay, ah, this is a little bit of a plateau notion and we're for now,",
    "start": "4109765",
    "end": "4117670"
  },
  {
    "text": "for today, we're assuming that the training set is linearly separable. So we're gonna assume that the training set,",
    "start": "4117670",
    "end": "4122890"
  },
  {
    "text": "you know, it looks like this. [NOISE] And that you can separate it on a straight line [NOISE] that will relax this later,",
    "start": "4122890",
    "end": "4129505"
  },
  {
    "text": "but because we're assuming, just for today, that the training set is, um, linearly separable,",
    "start": "4129505",
    "end": "4134650"
  },
  {
    "text": "we'll use this kind of worst-case notion and define the functional margin to be the functional margin of the worst training example.",
    "start": "4134650",
    "end": "4141730"
  },
  {
    "text": "Okay? [NOISE]. Now, one thing",
    "start": "4141730",
    "end": "4151239"
  },
  {
    "text": "about the definition of the functional margin is, it's actually really easy to cheat and increase the functional margin, right?",
    "start": "4151240",
    "end": "4158484"
  },
  {
    "text": "And one thing you can do, um, in regards to this formula is if you take w,",
    "start": "4158485",
    "end": "4163929"
  },
  {
    "text": "you know, and multiply it by 2 and take b and multiply it by 2.",
    "start": "4163930",
    "end": "4169089"
  },
  {
    "text": "[NOISE] then, um, everything here just multiplies by two and you've doubled the functional margin,",
    "start": "4169090",
    "end": "4176259"
  },
  {
    "text": "right, but you haven't actually changed anything meaningful. Okay, so- so one, one way to cheat on the functional margin is just by scaling",
    "start": "4176260",
    "end": "4183370"
  },
  {
    "text": "the parameters by 2 or instead of 2 maybe you can [NOISE] multiply all your parameters by 10 and then you've actually",
    "start": "4183370",
    "end": "4189580"
  },
  {
    "text": "increased the functional margin of your training examples as 10x, but, ah, this doesn't actually change the decision boundary, right?",
    "start": "4189580",
    "end": "4195700"
  },
  {
    "text": "It doesn't actually change any classification, just to multiply all of your parameters by a factor of 10.",
    "start": "4195700",
    "end": "4200920"
  },
  {
    "text": "Um, so one thing you could do is, ah,",
    "start": "4200920",
    "end": "4206935"
  },
  {
    "text": "replace, one thing you could do,",
    "start": "4206935",
    "end": "4211700"
  },
  {
    "text": "um, would be to normalize the length for your parameters. So for example, hypothetically you could impose a constraint,",
    "start": "4211980",
    "end": "4220630"
  },
  {
    "text": "the normal w is equal to 1, or another way to do that would be to take w and b and replace it with w",
    "start": "4220630",
    "end": "4228070"
  },
  {
    "text": "over normal b and replace b with, [NOISE] right,",
    "start": "4228070",
    "end": "4233199"
  },
  {
    "text": "just the value of parameters through by the magnitude, by the- by the Euclidean length of the parameter vector w,",
    "start": "4233200",
    "end": "4240250"
  },
  {
    "text": "and this doesn't change any classification, It's just rescaling the parameters. Ah, but, ah, but, but that it prevents, you know,",
    "start": "4240250",
    "end": "4246639"
  },
  {
    "text": "display of cheating on the functional margin. Okay. Um, and in fact,",
    "start": "4246640",
    "end": "4253390"
  },
  {
    "text": "more generally you could actually scale w and b by any other values you want and- and it doesn't- doesn't matter, right?",
    "start": "4253390",
    "end": "4259740"
  },
  {
    "text": "You can choose to replace this by w over 17 and b over 17 or any other number or any,",
    "start": "4259740",
    "end": "4266395"
  },
  {
    "text": "right, and the classification stays the same. Okay. So we'll come back and use this property, in a little bit. Okay. [NOISE]",
    "start": "4266395",
    "end": "4284995"
  },
  {
    "text": "All right. So to find the functional margin, let's define the geometric margin. An- and you'll see in a second how",
    "start": "4284995",
    "end": "4290289"
  },
  {
    "text": "the geometric and functional margin relate to each other. Um, so les- let's,",
    "start": "4290290",
    "end": "4296935"
  },
  {
    "text": "let's define the, uh, geometric margin with respect to a single example. Which is, um- so let's see- let's say you have a classifier.",
    "start": "4296935",
    "end": "4307520"
  },
  {
    "text": "All right, so given parameters w and b that defines a linear classifier and the equation,",
    "start": "4309000",
    "end": "4316105"
  },
  {
    "text": "wx plus b equals 0 defines the equation of a straight line. Uh, so the axes here are x_1 and x_2,",
    "start": "4316105",
    "end": "4323185"
  },
  {
    "text": "and then half of this plane you know, in this half of the plane, you'll have w transpose x plus b is greater than 0.",
    "start": "4323185",
    "end": "4330445"
  },
  {
    "text": "And in this half, you'll have w transpose x plus b is less than 0. And in between this- the straight line given by",
    "start": "4330445",
    "end": "4338380"
  },
  {
    "text": "this equation w transpose x plus b equals 0, right. And so given parameters w and b, the upper right,",
    "start": "4338380",
    "end": "4345025"
  },
  {
    "text": "that's where your cost high will predict y equals 1 and the lower left is where it'll predict y is equal to negative 1, okay.",
    "start": "4345025",
    "end": "4353935"
  },
  {
    "text": "Now, let's say you have one training example here, right? So that's a training example, x_i, y_i.",
    "start": "4353935",
    "end": "4363804"
  },
  {
    "text": "And, uh, let's say it's a positive example, okay?",
    "start": "4363805",
    "end": "4371275"
  },
  {
    "text": "And so, um, your classifiers classify this example correctly, right?",
    "start": "4371275",
    "end": "4378219"
  },
  {
    "text": "Because in the upper right half- half plane- here in this half plane w transpose x plus b is greater than 0.",
    "start": "4378220",
    "end": "4385660"
  },
  {
    "text": "And so in the- in this upper-right region, uh, your classifier is predicting plus 1, right?",
    "start": "4385660",
    "end": "4393145"
  },
  {
    "text": "Whereas in this lower half region would be predicting h of x equals negative 1.",
    "start": "4393145",
    "end": "4398300"
  },
  {
    "text": "Right, and that's why this straight line where it switches from predicting negative to positive is the decision boundary.",
    "start": "4399690",
    "end": "4406670"
  },
  {
    "text": "So what we're going to do is define this distance, um,",
    "start": "4406830",
    "end": "4415390"
  },
  {
    "text": "to be that geometric margin of this training example,",
    "start": "4415390",
    "end": "4422335"
  },
  {
    "text": "is the Euc- the Euclidean distance is what will define to be the geometric margin.",
    "start": "4422335",
    "end": "4427340"
  },
  {
    "text": "So let me just write down what that is. [NOISE]",
    "start": "4427340",
    "end": "4443860"
  },
  {
    "text": "So the geometric margin of,",
    "start": "4443860",
    "end": "4450280"
  },
  {
    "text": "you know, the classifier of the hyperplane defined by w, b with respect to one example x_i, y_i.",
    "start": "4450280",
    "end": "4460900"
  },
  {
    "text": "This is going to be gamma i equals w transpose x plus b over [NOISE] the normal w. [NOISE]",
    "start": "4460900",
    "end": "4472630"
  },
  {
    "text": "Um, and let's see I'm not proving why this is the case, the proof is given in the lecture notes but, uh,",
    "start": "4472630",
    "end": "4478405"
  },
  {
    "text": "the lecture notes shows why this is the right formula for measuring the Euclidean distance that I just drew [NOISE] in the picture up there, okay.",
    "start": "4478405",
    "end": "4485845"
  },
  {
    "text": "Uh, but, and then, I'm not proving this here but the proof is given in the lecture notes but this turns out to be the way you compute the Euclidean distance between that example and uh,",
    "start": "4485845",
    "end": "4494500"
  },
  {
    "text": "and the decision boundary, okay? Um, and uh, a- and this is [NOISE] for the positive example I guess.",
    "start": "4494500",
    "end": "4504280"
  },
  {
    "text": "Uh, more generally, um, I'm going to define the geometric margin to be equal to this,",
    "start": "4504280",
    "end": "4516820"
  },
  {
    "text": "uh, and this definition applies to positive examples and the negative examples, okay?",
    "start": "4516820",
    "end": "4523400"
  },
  {
    "text": "And so the relationship between the geometric margin and the functional margin is",
    "start": "4523440",
    "end": "4528640"
  },
  {
    "text": "that the geometric margin is equal to the functional margin divided by",
    "start": "4528640",
    "end": "4534610"
  },
  {
    "text": "the norm of w. [NOISE]",
    "start": "4534610",
    "end": "4552610"
  },
  {
    "text": "Finally, um, the geometric margin with respect to the training set is, um,",
    "start": "4552610",
    "end": "4570925"
  },
  {
    "text": "where again uses worst-case notion of, uh- look through all your training examples and pick the worst possible training example,",
    "start": "4570925",
    "end": "4579864"
  },
  {
    "text": "um, and that is your geometric margin on the training set.",
    "start": "4579865",
    "end": "4585235"
  },
  {
    "text": "Uh, an- and so I hope the- sorry, I hope the notation is clear, right. So gamma hat was the functional margin and",
    "start": "4585235",
    "end": "4595930"
  },
  {
    "text": "gamma is the geometric margin,",
    "start": "4595930",
    "end": "4604365"
  },
  {
    "text": "okay? And so, um,",
    "start": "4604365",
    "end": "4609040"
  },
  {
    "text": "what the optimal margin classifier does is [NOISE] ,",
    "start": "4626220",
    "end": "4637480"
  },
  {
    "text": "um, choose the parameters w and",
    "start": "4637480",
    "end": "4643750"
  },
  {
    "text": "b to maximize the geometric margin, okay?",
    "start": "4643750",
    "end": "4653485"
  },
  {
    "text": "Um, so in other words, thi- this- the optimal margin classifiers is the baby SVM, you know, it's like,",
    "start": "4653485",
    "end": "4659830"
  },
  {
    "text": "a SVM for linearly separable data, uh, at least for today.",
    "start": "4659830",
    "end": "4666160"
  },
  {
    "text": "[NOISE] And so the optimal margin classifier will choose that straight line, because that straight line maximizes the distance or maximizes the geometric margin",
    "start": "4666160",
    "end": "4675580"
  },
  {
    "text": "to all of these examples, okay? Now, uh, how you pose this mathematically,",
    "start": "4675580",
    "end": "4684640"
  },
  {
    "text": "there are a few steps of this derivations I don't want to do but I'll, I'll just describe the beginning step and",
    "start": "4684640",
    "end": "4690400"
  },
  {
    "text": "the last step and leave the in bet- in between steps to the lecture notes. But it turns out that, um,",
    "start": "4690400",
    "end": "4696085"
  },
  {
    "text": "one way to pose this problem is to maximize gamma w and b of gamma.",
    "start": "4696085",
    "end": "4703825"
  },
  {
    "text": "So you want to maximize the geometric margin subject to that.",
    "start": "4703825",
    "end": "4709010"
  },
  {
    "text": "Subject to the every training example, um, uh, must have geometric margin,",
    "start": "4722430",
    "end": "4729489"
  },
  {
    "text": "uh, uh, greater than or equal to gamma, right? So you want gamma to be as big as possible subject to",
    "start": "4729490",
    "end": "4736180"
  },
  {
    "text": "that every single training example must have at least that geometric margin. [NOISE] This causes you to maximize the worst-case geometric margin.",
    "start": "4736180",
    "end": "4743800"
  },
  {
    "text": "And it turns out this is, um- not in this form, this is in a convex optimization problems.",
    "start": "4743800",
    "end": "4749140"
  },
  {
    "text": "So it's difficult to solve this without a gradient descent and initially known local optima and so on. But it turns out that via a few steps of V writing,",
    "start": "4749140",
    "end": "4756745"
  },
  {
    "text": "you can reformulate this problem as, um, into the equivalent problem which is a minimizing norm of w subject",
    "start": "4756745",
    "end": "4764800"
  },
  {
    "text": "to the geometric margin, right.",
    "start": "4764800",
    "end": "4772735"
  },
  {
    "text": "Um, so it turns out- so I hope this problem makes sense, right? So this problem is just you know solve for w and b to make sure that",
    "start": "4772735",
    "end": "4780219"
  },
  {
    "text": "every example has a geometric margin greater or equal to gamma and you want gamma to be as big as possible.",
    "start": "4780220",
    "end": "4785395"
  },
  {
    "text": "So this is the way to formulate optimization problem that says, ''Maximize the geometric margin.''",
    "start": "4785395",
    "end": "4790840"
  },
  {
    "text": "And what we show in the lecture notes is that, uh, through a few steps, uh,",
    "start": "4790840",
    "end": "4796165"
  },
  {
    "text": "you can rewrite this optimization problem into the following equivalent form which is to try to minimize the norm of w, uh, subject to this.",
    "start": "4796165",
    "end": "4804700"
  },
  {
    "text": "And maybe one piece of intuition to take away is, um, uh, the smaller w is the bigger, right?",
    "start": "4804700",
    "end": "4811840"
  },
  {
    "text": "Th- th- the, the less of a normalization division effect you have, right? Uh, but the details I gave you in the lecture notes, okay?",
    "start": "4811840",
    "end": "4819325"
  },
  {
    "text": "Um, but this turns out to be a convex optimization problem and if you optimize this, then you will have the optimal margin classifier and they're",
    "start": "4819325",
    "end": "4827290"
  },
  {
    "text": "very good numerical optimization packages to solve this optimization problem. And if you give this a dataset then, you know,",
    "start": "4827290",
    "end": "4833985"
  },
  {
    "text": "assuming your data's separable [NOISE] and we'll fix that assumption, uh, when we convene next week, then you have the optimal management classifier",
    "start": "4833985",
    "end": "4840600"
  },
  {
    "text": "which is really a baby SVM and we add kernels to it, then you have the full complexity of the SVM norm, okay?",
    "start": "4840600",
    "end": "4847240"
  },
  {
    "text": "All right, let's break for today, uh, see, see you guys next Monday.",
    "start": "4847240",
    "end": "4853010"
  }
]