[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "Morning and welcome back. So what we'll see today in class",
    "start": "3590",
    "end": "10965"
  },
  {
    "text": "is the first in-depth discussion of a learning algorithm, linear regression, and in particular,",
    "start": "10965",
    "end": "16920"
  },
  {
    "text": "over the next, what, hour and a bit you'll see linear regression, batch and stochastic gradient descent is",
    "start": "16920",
    "end": "24060"
  },
  {
    "text": "an algorithm for fitting linear regression models, and then the normal equations, um, uh,",
    "start": "24060",
    "end": "29355"
  },
  {
    "text": "as a way of- as a very efficient way to let you fit linear models.",
    "start": "29355",
    "end": "34785"
  },
  {
    "text": "Um, and we're going to define notation, and a few concepts today that will lay the foundation",
    "start": "34785",
    "end": "41329"
  },
  {
    "text": "for a lot of the work that we'll see the rest of this quarter. Um, so to- to motivate linear regression, it's gonna be, uh,",
    "start": "41329",
    "end": "48590"
  },
  {
    "start": "45000",
    "end": "181000"
  },
  {
    "text": "maybe the- maybe the simplest, one of the simplest learning algorithms. Um, you remember the ALVINN video,",
    "start": "48590",
    "end": "55340"
  },
  {
    "text": "the autonomous driving video that I had shown in class on Monday, um, for the self-driving car video,",
    "start": "55340",
    "end": "61585"
  },
  {
    "text": "that was a supervised learning problem. And the term supervised learning [NOISE] meant",
    "start": "61585",
    "end": "68840"
  },
  {
    "text": "that you were given Xs which was a picture of what's in front of the car,",
    "start": "68840",
    "end": "74049"
  },
  {
    "text": "and the algorithm [NOISE] had to map that to an output Y which was the steering direction.",
    "start": "74050",
    "end": "79745"
  },
  {
    "text": "And that was a regression problem, [NOISE] because the output Y that you want is a continuous value, right?",
    "start": "79745",
    "end": "88354"
  },
  {
    "text": "As opposed to a classification problem where Y is the speed. And we'll talk about classification, um, next Monday, but supervised learning regression.",
    "start": "88355",
    "end": "96275"
  },
  {
    "text": "So I think the simplest, maybe the simplest possible learning algorithm, a supervised learning regression problem, is linear regression.",
    "start": "96275",
    "end": "104690"
  },
  {
    "text": "And to motivate that, rather than using a self-driving car example which is quite complicated,",
    "start": "104690",
    "end": "111080"
  },
  {
    "text": "we'll- we'll build up a supervised learning algorithm using a simpler example. Um, so let's say you want to predict or estimate the prices of houses.",
    "start": "111080",
    "end": "121100"
  },
  {
    "text": "So [NOISE] the way you build a learning algorithm is start by collecting a data-set of houses, and their prices.",
    "start": "121100",
    "end": "128425"
  },
  {
    "text": "Um, so this is a data-set that we collected off Craigslist a little bit back. This is data from Portland, Oregon.",
    "start": "128425",
    "end": "135850"
  },
  {
    "text": "[NOISE] But so there's the size of a house in square feet, [NOISE] um, and there's the price of a house in thousands of dollars, [NOISE] right?",
    "start": "135850",
    "end": "145230"
  },
  {
    "text": "And so there's a house that is 2,104 square feet whose asking price was $400,000.",
    "start": "145230",
    "end": "152780"
  },
  {
    "text": "Um, [NOISE] house with, uh, that size, with that price, [NOISE] and so on.",
    "start": "152780",
    "end": "165035"
  },
  {
    "text": "Okay? Um, and maybe more conventionally if you plot this data,",
    "start": "165035",
    "end": "171490"
  },
  {
    "text": "there's a size, there's a price. So you have some dataset like that. And what we'll end up doing today is fit a straight line to this data, right?",
    "start": "171490",
    "end": "180080"
  },
  {
    "text": "[NOISE] And go through how to do that. So in supervised learning, um, the [NOISE] process of supervised learning is that you have",
    "start": "180080",
    "end": "187280"
  },
  {
    "start": "181000",
    "end": "284000"
  },
  {
    "text": "a training set such as the data-set that I drew on the left, and you feed this to a learning algorithm, [NOISE] right?",
    "start": "187280",
    "end": "199435"
  },
  {
    "text": "And the job of the learning algorithm is to output a function, uh, to make predictions about housing prices.",
    "start": "199435",
    "end": "206690"
  },
  {
    "text": "And by convention, um, I'm gonna call this a function that it outputs a hypothesis, [NOISE] right?",
    "start": "206690",
    "end": "215635"
  },
  {
    "text": "And the job of the hypothesis is, [NOISE] you know, it will- it can input the size of a new house,",
    "start": "215635",
    "end": "222110"
  },
  {
    "text": "or the size of a different house that you haven't seen yet, [NOISE] and will output the estimated [NOISE] price.",
    "start": "222110",
    "end": "230895"
  },
  {
    "text": "Okay? Um, so the job of the learning algorithm is to input a training set, and output a hypothesis.",
    "start": "230895",
    "end": "236030"
  },
  {
    "text": "The job of the hypothesis is to take as input, any size of a house, and try to tell you what it thinks should be the price of that house.",
    "start": "236030",
    "end": "244460"
  },
  {
    "text": "Now, when designing a learning algorithm, um, and- and, you know,",
    "start": "244460",
    "end": "249665"
  },
  {
    "text": "even though linear regression, right? You may have seen it in a linear algebra class before, or some other class before, um,",
    "start": "249665",
    "end": "255780"
  },
  {
    "text": "the way you go about structuring a machine learning algorithm is important. And design choices of,",
    "start": "255780",
    "end": "261139"
  },
  {
    "text": "you know, what is the workflow? What is the data-set? What is the hypothesis? How does this represent the hypothesis? These are the key decisions you have to make in pretty much every supervised learning,",
    "start": "261140",
    "end": "270200"
  },
  {
    "text": "every machine learning algorithm's design. So, uh, as we go through linear regression, I will try to describe the concepts clearly as well",
    "start": "270200",
    "end": "277040"
  },
  {
    "text": "because they'll lay the foundation for the rest of the algorithms. Sometimes it's much more complicated with the algorithms you'll see later this quarter.",
    "start": "277040",
    "end": "283655"
  },
  {
    "text": "So when designing a learning algorithm the first thing we need to ask is, um, [NOISE] how- how do you represent the hypothesis, H, right?",
    "start": "283655",
    "end": "295475"
  },
  {
    "start": "284000",
    "end": "507000"
  },
  {
    "text": "And in linear regression, for the purpose of this lecture, [NOISE] we're going to say that, um,",
    "start": "295475",
    "end": "300620"
  },
  {
    "text": "the hypothesis is going to be [NOISE] that.",
    "start": "300620",
    "end": "306350"
  },
  {
    "text": "Right? That the input, uh, size X, and output a number as a- as a linear function,",
    "start": "306350",
    "end": "313230"
  },
  {
    "text": "um, of the size X, okay? And then, the mathematicians in the room, you'll say technically this is an affine function.",
    "start": "313230",
    "end": "319610"
  },
  {
    "text": "It was a linear function, there's no theta 0, technically, you know, but- but the machine learning sometimes just calls this a linear function,",
    "start": "319610",
    "end": "325490"
  },
  {
    "text": "but technically it's an affine function. Doesn't- doesn't matter. Um, so more generally in- in this example we have just one input feature X.",
    "start": "325490",
    "end": "335930"
  },
  {
    "text": "More generally, if you have multiple input features, so if you have more data,",
    "start": "335930",
    "end": "341165"
  },
  {
    "text": "more information about these houses, such as number of bedrooms [NOISE] Excuse me,",
    "start": "341165",
    "end": "349560"
  },
  {
    "text": "my handwriting is not big. That's the word bedrooms, [NOISE] right?",
    "start": "349560",
    "end": "355545"
  },
  {
    "text": "Then, I guess- [NOISE] All right. Yeah. Cool. My- my- my father-in-law lives a little bit outside Portland,",
    "start": "355545",
    "end": "364130"
  },
  {
    "text": "uh, and he's actually really into real estate. So this is actually a real data-set from Portland. [LAUGHTER] Um, so more generally,",
    "start": "364130",
    "end": "371250"
  },
  {
    "text": "uh, if you know the size, as well as the number of bedrooms in these houses, then you may have two input features [NOISE] where X1 is the size,",
    "start": "371250",
    "end": "380914"
  },
  {
    "text": "and X2 is the number of bedrooms. [NOISE] Um, I'm using the pound sign bedrooms to denote number of bedrooms,",
    "start": "380915",
    "end": "390199"
  },
  {
    "text": "and you might say that you estimate the size of a house as, um, h of x equals,",
    "start": "390200",
    "end": "395720"
  },
  {
    "text": "theta 0 plus theta 1, [NOISE] X1, plus theta 2, X2,",
    "start": "395720",
    "end": "401505"
  },
  {
    "text": "where X1 is the size of the house, and X2 is- [NOISE] is the number of bedrooms.",
    "start": "401505",
    "end": "408780"
  },
  {
    "text": "Okay? Um, so in order to- [NOISE] so in order to simplify the notation,",
    "start": "408780",
    "end": "420720"
  },
  {
    "text": "[NOISE] um, [NOISE] in order to make that notation a little bit more compact,",
    "start": "420720",
    "end": "431095"
  },
  {
    "text": "um, I'm also gonna introduce this other notation where, um, we want to write a hypothesis,",
    "start": "431095",
    "end": "439370"
  },
  {
    "text": "as sum from J equals 0-2 of theta JXJ,",
    "start": "439800",
    "end": "450840"
  },
  {
    "text": "so this is the summation, where for conciseness we define X0 to be equal to 1, okay?",
    "start": "450840",
    "end": "458965"
  },
  {
    "text": "See we define- if we define X0 to be a dummy feature that always takes on the value of 1,",
    "start": "458965",
    "end": "465115"
  },
  {
    "text": "then you can write the hypothesis h of x this way, sum from J equals 0-2, or just theta JXJ, okay?",
    "start": "465115",
    "end": "471590"
  },
  {
    "text": "It's the same with that equation that you saw to the upper right. And so here theta becomes a three-dimensional parameter,",
    "start": "471590",
    "end": "480205"
  },
  {
    "text": "theta 0, theta 1, theta 2. This index starting from 0, and the features become a three dimensional feature vector X0, X1,",
    "start": "480205",
    "end": "491669"
  },
  {
    "text": "X2, where X0 is always 1, X1 is the size of the house, and X2 is the number of bedrooms of the house, okay?",
    "start": "491670",
    "end": "500280"
  },
  {
    "text": "So, um, to introduce a bit more terminology. Theta [NOISE] is called the parameters, um,",
    "start": "500280",
    "end": "512520"
  },
  {
    "start": "507000",
    "end": "884000"
  },
  {
    "text": "of the learning algorithm, and the job [NOISE] of the learning algorithm is to choose parameters theta,",
    "start": "512520",
    "end": "519210"
  },
  {
    "text": "that allows you to make good predictions about your prices of houses, right?",
    "start": "519210",
    "end": "524240"
  },
  {
    "text": "Um, and just to lay out some more notation that we're gonna use throughout this quarter.",
    "start": "524240",
    "end": "531029"
  },
  {
    "text": "We're gonna use a standard that, uh, M,",
    "start": "531030",
    "end": "535120"
  },
  {
    "text": "we'll define as the number of training examples.",
    "start": "536660",
    "end": "543899"
  },
  {
    "text": "So M is going to be the number of rows, [NOISE] right, in the table above, um,",
    "start": "543900",
    "end": "551829"
  },
  {
    "text": "where, you know, each house you have in your training set. This one training example. Um, you've already seen [NOISE] me use X to denote the inputs,",
    "start": "552200",
    "end": "563080"
  },
  {
    "text": "um, and often the inputs are called  features.",
    "start": "563360",
    "end": "568779"
  },
  {
    "text": "Um, you know, I think, I don't know, as- as- as a- as a emerging discipline grows up, right,",
    "start": "568780",
    "end": "574580"
  },
  {
    "text": "notation kind of emerges depending on what different scientists use for the first time when you write a paper. So I think that, I don't know,",
    "start": "574580",
    "end": "581360"
  },
  {
    "text": "I think that the fact that we call these things hypotheses, frankly, I don't think that's a great name. But- but I think someone many decades ago wrote a few papers calling it a hypothesis,",
    "start": "581360",
    "end": "589670"
  },
  {
    "text": "and then others followed, and we're kind of stuck with some of this terminology. But X is called input features,",
    "start": "589670",
    "end": "594750"
  },
  {
    "text": "or sometimes input attributes, um, and Y [NOISE] is the output, right?",
    "start": "594750",
    "end": "602025"
  },
  {
    "text": "And sometimes we call this the target variable. [NOISE] Okay.",
    "start": "602025",
    "end": "607920"
  },
  {
    "text": "Uh, so x, y is, uh, one training example.",
    "start": "607920",
    "end": "613000"
  },
  {
    "text": "[NOISE] Um, and, uh,",
    "start": "613000",
    "end": "621970"
  },
  {
    "text": "I'm going to use this notation, um, x_i,  y_i in parentheses to denote",
    "start": "621970",
    "end": "631795"
  },
  {
    "text": "the i_th training example.",
    "start": "631795",
    "end": "637795"
  },
  {
    "text": "Okay. So the superscript parentheses i, that's not exponentiation. Uh, I think that as suppo- uh, this is- um,",
    "start": "637795",
    "end": "645805"
  },
  {
    "text": "this notation x_i, y_ i, this is just a way of, uh, writing an index into the table of training examples above.",
    "start": "645805",
    "end": "653500"
  },
  {
    "text": "Okay. So, so maybe, for example, if the first training example is, uh, the size- the house of size 2104,",
    "start": "653500",
    "end": "659890"
  },
  {
    "text": "so x_1_1 would be equal to 2104,",
    "start": "659890",
    "end": "666850"
  },
  {
    "text": "right, because this is the size of the first house in the training example. And I guess, uh, x, um,",
    "start": "666850",
    "end": "673615"
  },
  {
    "text": "second example, feature one would be 1416 with our example above.",
    "start": "673615",
    "end": "679830"
  },
  {
    "text": "So the superscript in parentheses is just some, uh, uh, yes, it's, it's just the, um,",
    "start": "679830",
    "end": "686475"
  },
  {
    "text": "index into the different training examples where i- superscript i here would run from 1 through m,",
    "start": "686475",
    "end": "693535"
  },
  {
    "text": "1 through the number of training examples you have. Um, and then one last bit of notation, um,",
    "start": "693535",
    "end": "700240"
  },
  {
    "text": "I'm going to use n to denote the number of features you have for the supervised learning problem.",
    "start": "700240",
    "end": "708970"
  },
  {
    "text": "So in this example, uh, n is equal to 2, right? Because we have two features which is,",
    "start": "708970",
    "end": "715195"
  },
  {
    "text": "um, the size of house and the number of bedrooms, so two features. Which is why you can take this and,",
    "start": "715195",
    "end": "723819"
  },
  {
    "text": "and write this, um, as the sum from j equals 0 to n. Um, and so here,",
    "start": "723820",
    "end": "735010"
  },
  {
    "text": "x and Theta are n plus 1 dimensional because we added the extra,",
    "start": "735010",
    "end": "740929"
  },
  {
    "text": "um, x_0 and Theta_0. Okay. So- so we have two features then these are three-dimensional vectors.",
    "start": "740929",
    "end": "747850"
  },
  {
    "text": "And more generally, if you have n features, uh, you, you end up with x and Theta being n plus 1 dimensional features. All right.",
    "start": "747850",
    "end": "756550"
  },
  {
    "text": "And, you know, uh, you see this notation in multiple times, in multiple algorithms throughout this quarter.",
    "start": "756550",
    "end": "762370"
  },
  {
    "text": "So if you, you know, don't manage to memorize all these symbols right now, don't worry about it. You'll see them over and over and they become familiar. All right.",
    "start": "762370",
    "end": "771685"
  },
  {
    "text": "So, um, given the data set and given that this is the way you define the hypothesis,",
    "start": "771685",
    "end": "778315"
  },
  {
    "text": "how do you choose the parameters, right? So you- the learning algorithm's job is to choose values for the parameters",
    "start": "778315",
    "end": "783970"
  },
  {
    "text": "Theta so that it can output a hypothesis. So how do you choose parameters Theta?",
    "start": "783970",
    "end": "790150"
  },
  {
    "text": "Well, what we'll do, um, is let's choose Theta",
    "start": "790150",
    "end": "796039"
  },
  {
    "text": "such that h of x is close to y,",
    "start": "803100",
    "end": "809170"
  },
  {
    "text": "uh, for the training examples.",
    "start": "809170",
    "end": "812660"
  },
  {
    "text": "Okay. So, um, and I think the final bit of notation, um,",
    "start": "814320",
    "end": "821200"
  },
  {
    "text": "I've been writing h of x as a function of the features of the house, as a function of the size and number of bedrooms of the house.",
    "start": "821200",
    "end": "828520"
  },
  {
    "text": "[NOISE] Um, sometimes we emphasize that h depends both on the parameters Theta and on the input features x. Um,",
    "start": "828520",
    "end": "836529"
  },
  {
    "text": "we're going to use h_Theta of x to emphasize that the hypothesis depends both on the parameters and on the,",
    "start": "836530",
    "end": "846385"
  },
  {
    "text": "you know, input features x, right? But, uh, sometimes for notational convenience, I just write this as h of x,",
    "start": "846385",
    "end": "851800"
  },
  {
    "text": "sometimes I include the Theta there, and they mean the same thing. It's just, uh, maybe a abbreviation in notation.",
    "start": "851800",
    "end": "857755"
  },
  {
    "text": "Okay. But so in order to, um, learn a set of parameters,",
    "start": "857755",
    "end": "863575"
  },
  {
    "text": "what we'll want to do is choose a parameters Theta so that at least for the houses whose prices you know, that, you know,",
    "start": "863575",
    "end": "870940"
  },
  {
    "text": "the learning algorithm outputs prices that are close to what you know where the correct price is for that set of houses,",
    "start": "870940",
    "end": "877389"
  },
  {
    "text": "what the correct asking price is for those houses. And so more formally, um,",
    "start": "877390",
    "end": "884250"
  },
  {
    "start": "884000",
    "end": "1086000"
  },
  {
    "text": "in the linear regression algorithm, also called ordinary least squares. With linear regression, um,",
    "start": "884250",
    "end": "889425"
  },
  {
    "text": "we will want to minimize,",
    "start": "889425",
    "end": "895355"
  },
  {
    "text": "I'm gonna build out this equation one piece at a time, okay? Minimize the square difference between what the hypothesis outputs,",
    "start": "895355",
    "end": "904180"
  },
  {
    "text": "h_Theta of x minus y squared, right?",
    "start": "904180",
    "end": "914470"
  },
  {
    "text": "So let's say we wanna minimize the squared difference between the prediction, which is h of x and y,",
    "start": "914470",
    "end": "919870"
  },
  {
    "text": "which is the correct price. Um, and so what we want to do is choose values of Theta that minimizes that.",
    "start": "919870",
    "end": "930015"
  },
  {
    "text": "Um, to fill this out, you know, you have m training examples. So I'm going to sum from i equals 1 through m of that square difference.",
    "start": "930015",
    "end": "943255"
  },
  {
    "text": "So this is sum over i equals 1 through all, say, 50 examples you have, right?",
    "start": "943255",
    "end": "948415"
  },
  {
    "text": "Um, of the square difference between what your algorithm predicts and what the true price of the house is.",
    "start": "948415",
    "end": "954490"
  },
  {
    "text": "Um, and then finally, by convention, we put a one-half there- put a one-half constant there because, uh,",
    "start": "954490",
    "end": "963040"
  },
  {
    "text": "when we take derivatives to minimize this later, putting a one-half there would make some of the math a little bit simpler. So, you know, changing one- adding a one-half.",
    "start": "963040",
    "end": "969940"
  },
  {
    "text": "Minimizing that formula should give you the same as minimizing one-half of that but we often put a one-half there so to make the math a little bit simpler later, okay?",
    "start": "969940",
    "end": "978774"
  },
  {
    "text": "And so in linear regression, we're gonna define the cost function J of Theta to be equal to that.",
    "start": "978775",
    "end": "988584"
  },
  {
    "text": "And, uh, [NOISE] we'll find parameters Theta that minimizes the cost function J of Theta, okay?",
    "start": "988585",
    "end": "999265"
  },
  {
    "text": "Um, and, the questions I've often gotten is, you know, why squared error?",
    "start": "999265",
    "end": "1004680"
  },
  {
    "text": "Why not absolute error, or this error to the power of 4? We'll talk more about that when we talk about, um, uh,",
    "start": "1004680",
    "end": "1011625"
  },
  {
    "text": "when, when, when we talk about the generalization of, uh, linear regression. Um, when we talk about generalized linear models,",
    "start": "1011625",
    "end": "1018390"
  },
  {
    "text": "which we'll do next week, you'll see that, um, uh, linear regression is a special case",
    "start": "1018390",
    "end": "1023820"
  },
  {
    "text": "of a bigger family of algorithms called generalizing your models. And that, uh, using squared error corresponds to a Gaussian, but the- we, we,",
    "start": "1023820",
    "end": "1031980"
  },
  {
    "text": "we'll justify maybe a little bit more why squared error rather than absolute error or errors to the power of 4, uh, next week.",
    "start": "1031980",
    "end": "1040420"
  },
  {
    "text": "So, um, let me just check, see if any questions, [NOISE] at this point. No, okay. Cool.",
    "start": "1040490",
    "end": "1052180"
  },
  {
    "text": "All right. So, um,",
    "start": "1061580",
    "end": "1072554"
  },
  {
    "text": "so let's- next let's see how you can implement an algorithm to find the value of Theta that minimizes J of Theta.",
    "start": "1072555",
    "end": "1081210"
  },
  {
    "text": "That- that minimizes the cost function J of Theta. Um, we're going to use an algorithm called gradient descent.",
    "start": "1081210",
    "end": "1088960"
  },
  {
    "start": "1086000",
    "end": "1981000"
  },
  {
    "text": "And, um, you know, this is my first time teaching in this classroom,",
    "start": "1092420",
    "end": "1097500"
  },
  {
    "text": "so trying to figure out logistics like this. All right. Let's get rid of the chair. Cool, um, all right.",
    "start": "1097500",
    "end": "1107550"
  },
  {
    "text": "And so with, uh, gradient descent we are going to start with some value of Theta,",
    "start": "1107550",
    "end": "1117644"
  },
  {
    "text": "um, and it could be, you know, Theta equals the vector of all zeros would be a reasonable default.",
    "start": "1117645",
    "end": "1124200"
  },
  {
    "text": "We can initialize it randomly, the count doesn't really matter. But, uh, Theta is this three-dimensional vector.",
    "start": "1124200",
    "end": "1129750"
  },
  {
    "text": "And I'm writing 0 with an arrow on top to denote the vector of all 0s.",
    "start": "1129750",
    "end": "1135060"
  },
  {
    "text": "So 0 with an arrow on top that's a vector that says 0, 0, 0, everywhere, right. So, um, uh, so sought to some, you know,",
    "start": "1135060",
    "end": "1142105"
  },
  {
    "text": "initial value of Theta and we're going to keep changing Theta,",
    "start": "1142105",
    "end": "1152525"
  },
  {
    "text": "um, to reduce J of Theta, okay?",
    "start": "1152525",
    "end": "1160425"
  },
  {
    "text": "So let me show you a, um- vi- vis- let me show you a visualization of gradient descent,",
    "start": "1160425",
    "end": "1172110"
  },
  {
    "text": "and then- and then we'll write out the math. [NOISE] Um, so- all right.",
    "start": "1172110",
    "end": "1180615"
  },
  {
    "text": "Let's say you want to minimize some function J of Theta and, uh, it's important to get the axes right in this diagram, right?",
    "start": "1180615",
    "end": "1187830"
  },
  {
    "text": "So in this diagram the horizontal axes are Theta 0 and Theta 1.",
    "start": "1187830",
    "end": "1192914"
  },
  {
    "text": "And what you want to do is find values for Theta 0 and Theta 1.",
    "start": "1192915",
    "end": "1197975"
  },
  {
    "text": "In our- I- I- In our example it's actually Theta 0, Theta 1, Theta 2 because Theta's 3-dimensional but I can't plot that.",
    "start": "1197975",
    "end": "1203279"
  },
  {
    "text": "So I'm just using Theta 0 and Theta 1. But what you want to do is find values for Theta 0 and Theta 1, right?",
    "start": "1203280",
    "end": "1210555"
  },
  {
    "text": "That's the, um, uh, right,",
    "start": "1210555",
    "end": "1216600"
  },
  {
    "text": "you wanna find values of Theta 0 and Theta 1 that minimizes the height of the surface j of Theta.",
    "start": "1216600",
    "end": "1222779"
  },
  {
    "text": "So maybe this- this looks like a good- pretty good point or something, okay? Um, and so in gradient descent you, you know,",
    "start": "1222780",
    "end": "1229919"
  },
  {
    "text": "start off at some point on this surface and you do that by initializing Theta 0 and Theta 1 either randomly or to the value",
    "start": "1229920",
    "end": "1237600"
  },
  {
    "text": "of all zeros or something doesn't- doesn't matter too much. And, um, what you do is, uh,",
    "start": "1237600",
    "end": "1242625"
  },
  {
    "text": "im- imagine that you are standing on this lower hill, right standing at the point of that little x or that little cross.",
    "start": "1242625",
    "end": "1249150"
  },
  {
    "text": "Um, what you do in gradient descent is, uh, turn on- turn around all 360 degrees and look all around",
    "start": "1249150",
    "end": "1255539"
  },
  {
    "text": "you and see if you were to take a tiny little step, you know, take a tiny little baby step,",
    "start": "1255540",
    "end": "1260790"
  },
  {
    "text": "in what direction should you take a little step to go downhill as fast",
    "start": "1260790",
    "end": "1265800"
  },
  {
    "text": "as possible because you're trying to go downhill which is- goes to the lowest possible elevation, goes to the lowest possible point of J of Theta, okay?",
    "start": "1265800",
    "end": "1274440"
  },
  {
    "text": "So what gradient descent will do is, uh, stand at that point look around, look all- all around you and say, well,",
    "start": "1274440",
    "end": "1280559"
  },
  {
    "text": "what direction should I take a little step in to go downhill as quickly as possible because you want to minimize, uh, J of Theta.",
    "start": "1280560",
    "end": "1287280"
  },
  {
    "text": "You wanna minim- reduce the value of J of Theta, you know, go to the lowest possible elevation on this hill.",
    "start": "1287280",
    "end": "1292860"
  },
  {
    "text": "Um, and so gradient descent will take that little baby step, right?",
    "start": "1292860",
    "end": "1298440"
  },
  {
    "text": "And then- and then repeat. Uh, now you're a little bit lower on the surface. So you again take a look all around you and say oh it looks like that hill,",
    "start": "1298440",
    "end": "1306644"
  },
  {
    "text": "that- that little direction is the steepest direction or the steepest gradient downhill. So you take another little step,",
    "start": "1306645",
    "end": "1313110"
  },
  {
    "text": "take another step- another step and so on, until, um, uh, until you- until you get to a hopefully a local optimum.",
    "start": "1313110",
    "end": "1323475"
  },
  {
    "text": "Now one property of gradient descent is that, um, uh, depend on where you initialize parameters,",
    "start": "1323475",
    "end": "1329265"
  },
  {
    "text": "you can get to local diff- different points, right? So previously, you had started it at that lower point x.",
    "start": "1329265",
    "end": "1335115"
  },
  {
    "text": "But imagine if, uh, you had started it, you know, just a few steps over to the right, right?",
    "start": "1335115",
    "end": "1340275"
  },
  {
    "text": "At that- at that new x instead of the one on the left. If you had run gradient descent from that new point then, uh,",
    "start": "1340275",
    "end": "1346590"
  },
  {
    "text": "that would have been the first step, that would be the second step and so on. And you would have gotten to",
    "start": "1346590",
    "end": "1351960"
  },
  {
    "text": "a different local optimum- to a different local minima, okay? Um, it turns out that when you run gradient descents on linear regression,",
    "start": "1351960",
    "end": "1361665"
  },
  {
    "text": "it turns out that, uh, uh, uh, there will not be local optimum but we'll talk about that in a little bit, okay?",
    "start": "1361665",
    "end": "1369179"
  },
  {
    "text": "So let's formalize the [NOISE] gradient descent algorithm.",
    "start": "1369180",
    "end": "1375880"
  },
  {
    "text": "In gradient descent, um,",
    "start": "1383450",
    "end": "1390630"
  },
  {
    "text": "each step of gradient descent, uh, is implemented as follows. So- so remember, in- in this example,",
    "start": "1390630",
    "end": "1397575"
  },
  {
    "text": "the training set is fixed, right? You- You know you've collected the data set of housing prices from Portland,",
    "start": "1397575",
    "end": "1403020"
  },
  {
    "text": "Oregon so you just have that stored in your computer memory. And so the data set is fixed. The cost function J is a fixed function there's function of parameters Theta,",
    "start": "1403020",
    "end": "1411960"
  },
  {
    "text": "and the only thing you're gonna do is tweak or modify the parameters Theta.",
    "start": "1411960",
    "end": "1417105"
  },
  {
    "text": "One step of gradient descent, um, can be implemented as follows,",
    "start": "1417105",
    "end": "1422430"
  },
  {
    "text": "which is Theta j gets updated as Theta j minus,",
    "start": "1422430",
    "end": "1428475"
  },
  {
    "text": "I'll just write this out, okay?",
    "start": "1428475",
    "end": "1434669"
  },
  {
    "text": "Um, so bit more notation, I'm gonna use colon equals, I'm gonna use this notation to denote assignment.",
    "start": "1434670",
    "end": "1442965"
  },
  {
    "text": "So what this means is, we're gonna take the value on the right and assign it to Theta on the left, right?",
    "start": "1442965",
    "end": "1448275"
  },
  {
    "text": "And so, um, so in other words, in the notation we'll use this quarter, you know, a colon equals a plus 1.",
    "start": "1448275",
    "end": "1455460"
  },
  {
    "text": "This means increment the value of a by 1. Um, whereas, you know, a equals b,",
    "start": "1455460",
    "end": "1461835"
  },
  {
    "text": "if I write a equals b I'm asserting a statement of fact, right? I'm asserting that the value of a is equal to the value of b. Um, and hopefully,",
    "start": "1461835",
    "end": "1470550"
  },
  {
    "text": "I won't ever write a equals a plus 1, right because- cos that is rarely true, okay?",
    "start": "1470550",
    "end": "1477135"
  },
  {
    "text": "Um, all right. So, uh, in each step of gradient descent,",
    "start": "1477135",
    "end": "1483975"
  },
  {
    "text": "you're going to- for each value of j, so you're gonna do this for j equals 0, 1 ,2 or 0, 1,",
    "start": "1483975",
    "end": "1492240"
  },
  {
    "text": "up to n, where n is the number of features. For each value of j takes either j and update it according to Theta j minus Alpha.",
    "start": "1492240",
    "end": "1501375"
  },
  {
    "text": "Um, which is called the learning rate.",
    "start": "1501375",
    "end": "1508680"
  },
  {
    "text": "Um, Alpha the learning rate times this formula. And this formula is the partial derivative of the cost function J",
    "start": "1508680",
    "end": "1516810"
  },
  {
    "text": "of Theta with respect to the parameter, um, Theta j, okay?",
    "start": "1516810",
    "end": "1522180"
  },
  {
    "text": "In- and this partial derivative notation. Uh, for those of you that, um, haven't seen calculus for a while or haven't seen,",
    "start": "1522180",
    "end": "1529649"
  },
  {
    "text": "you know, some of their prerequisites for a while. We'll- we'll- we'll go over some more of this in a little bit greater detail in discussion section,",
    "start": "1529650",
    "end": "1536235"
  },
  {
    "text": "but I'll- I'll- I'll do this, um, quickly now.",
    "start": "1536235",
    "end": "1540640"
  },
  {
    "text": "But, um, I don't know. If, if you've taken a calculus class a while back, you may remember that the derivative of a function is,",
    "start": "1546740",
    "end": "1553905"
  },
  {
    "text": "you know, defines the direction of steepest descent. So it defines the direction that allows you to go downhill as steeply as possible,",
    "start": "1553905",
    "end": "1560760"
  },
  {
    "text": "uh, on the, on the hill like that. There's a question. How do you determine the learning rate?",
    "start": "1560760",
    "end": "1566220"
  },
  {
    "text": "How do you determine the learning rate? Ah, let me get back to that. It's a good question. Uh, for now, um, uh, you know, there's a theory and there's a practice.",
    "start": "1566220",
    "end": "1573360"
  },
  {
    "text": "Uh, in practice, you set to 0.01. [LAUGHTER].",
    "start": "1573360",
    "end": "1579240"
  },
  {
    "text": "[LAUGHTER] Let me say a bit more about that later. [NOISE]. Uh, if- if you actually- if- if you scale all the features between 0 and 1,",
    "start": "1579240",
    "end": "1586905"
  },
  {
    "text": "you know, minus 1 and plus 1 or something like that, then, then, yeah. Then, then try- you can try a few values and see what lets you minimize the function best,",
    "start": "1586905",
    "end": "1594120"
  },
  {
    "text": "but if the feature is scaled to plus minus 1, I usually start with 0.01 and then,",
    "start": "1594120",
    "end": "1599280"
  },
  {
    "text": "and then try increasing and decreasing it. Say, say a little bit more about that. [NOISE] Um, uh, all right, cool.",
    "start": "1599280",
    "end": "1608010"
  },
  {
    "text": "So, um, let's see. Let me just quickly [NOISE] show how the derivative calculation is done.",
    "start": "1608010",
    "end": "1618644"
  },
  {
    "text": "Um, and you know, I'm, I'm gonna do a few more equations in this lecture, uh, and then, and then over time I think.",
    "start": "1618645",
    "end": "1624990"
  },
  {
    "text": "Um, all, all of these, all of these definitions and derivations are written out in full detail in the lecture notes,",
    "start": "1624990",
    "end": "1631679"
  },
  {
    "text": "uh, posted on the course website. So sometimes, I'll do more math in class when, um, we want you to see the steps of the derivation and sometimes to save time in class,",
    "start": "1631680",
    "end": "1640184"
  },
  {
    "text": "we'll gloss over the mathematical details and leave you to read over, the full details in the lecture notes on the CS229",
    "start": "1640185",
    "end": "1645659"
  },
  {
    "text": "you know, course website. Um, so partial derivative with respect to J of Theta,",
    "start": "1645660",
    "end": "1651570"
  },
  {
    "text": "that's the partial derivative with respect to that of one-half H of Theta of X minus Y squared.",
    "start": "1651570",
    "end": "1662085"
  },
  {
    "text": "Uh, and so I'm going to do a slightly simpler version assuming we have just one training example, right?",
    "start": "1662085",
    "end": "1667980"
  },
  {
    "text": "The, the actual deriva- definition of J of Theta has a sum over I from 1 to M over all the training examples.",
    "start": "1667980",
    "end": "1675779"
  },
  {
    "text": "So I'm just forgetting that sum for now. So if you have only one training example. Um, and so from calculus,",
    "start": "1675780",
    "end": "1683429"
  },
  {
    "text": "if you take the derivative of a square, you know, the 2 comes down and so that cancels out with the half. So 2 times 1.5 times, um,",
    "start": "1683430",
    "end": "1691289"
  },
  {
    "text": "uh, the thing inside, right? Uh, and then by the, uh,",
    "start": "1691290",
    "end": "1697455"
  },
  {
    "text": "chain rule of, uh, derivatives. Uh, that's times the partial derivative of Theta J of X Theta X minus Y, right?",
    "start": "1697455",
    "end": "1706875"
  },
  {
    "text": "So if you take the derivative of a square, the two comes down and then you take the derivative of what's inside and multiply that, right?",
    "start": "1706875",
    "end": "1713850"
  },
  {
    "text": "[NOISE] Um, and so the two and one-half cancel out.",
    "start": "1713850",
    "end": "1719835"
  },
  {
    "text": "So this leaves you with H minus Y times partial derivative respect to Theta J of",
    "start": "1719835",
    "end": "1727620"
  },
  {
    "text": "Theta 0X0 plus Theta 1X1 plus th- th- that plus Theta NXN minus Y, right?",
    "start": "1727620",
    "end": "1738900"
  },
  {
    "text": "Where I just took the definition of H of X and expanded it out to that, um, sum, right?",
    "start": "1738900",
    "end": "1746550"
  },
  {
    "text": "Because, uh, H of X is just equal to that. So if you look at the partial derivative of each of these terms with respect to Theta J,",
    "start": "1746550",
    "end": "1755805"
  },
  {
    "text": "the partial derivative of every one of these terms with respect to Theta J is going to z- be 0 except for,",
    "start": "1755805",
    "end": "1763755"
  },
  {
    "text": "uh, the term corresponding to J, right? Because, uh, if J was equal to 1, say, right?",
    "start": "1763755",
    "end": "1772035"
  },
  {
    "text": "Then this term doesn't depend on Theta 1. Uh, this term, this term, all of them do not even depend on Theta 1.",
    "start": "1772035",
    "end": "1778845"
  },
  {
    "text": "The only term that depends on Theta 1 is this term over there. Um, and the partial derivative of this term with respect to Theta 1 will be just X1, right?",
    "start": "1778845",
    "end": "1790275"
  },
  {
    "text": "And so, um, when you take the partial derivative of this big sum with respect to say the J, uh,",
    "start": "1790275",
    "end": "1796755"
  },
  {
    "text": "in- in- in- instead of just J equals 1 and with respect to Theta J in general, then the only term that even depends on Theta J is the term Theta JXJ.",
    "start": "1796755",
    "end": "1808105"
  },
  {
    "text": "And so the partial derivative of all the other terms end up being 0 and",
    "start": "1808105",
    "end": "1813150"
  },
  {
    "text": "partial derivative of this term with respect to Theta J is equal to XJ, okay?",
    "start": "1813150",
    "end": "1819465"
  },
  {
    "text": "And so this ends up being H Theta X minus Y times XJ, okay?",
    "start": "1819465",
    "end": "1828434"
  },
  {
    "text": "Um, and again, listen, if you haven't, if you haven't played with calculus for awhile, if you- you know, don't quite remember what a partial derivative is,",
    "start": "1828435",
    "end": "1834750"
  },
  {
    "text": "or don't quite get what we just said. Don't worry too much about it. We'll go over a bit more in the section and we- and, and then also read through the lecture notes which kind of goes over this in,",
    "start": "1834750",
    "end": "1843075"
  },
  {
    "text": "in, in, um, in more detail and more slowly than, than, uh, we might do in class, okay?",
    "start": "1843075",
    "end": "1849360"
  },
  {
    "text": "[NOISE]",
    "start": "1849360",
    "end": "1861750"
  },
  {
    "text": "So, um, so plugging this- let's see. So we've just calculated that this partial derivative,",
    "start": "1861750",
    "end": "1870315"
  },
  {
    "text": "right, is equal to this, and so plugging it back into that formula,",
    "start": "1870315",
    "end": "1875339"
  },
  {
    "text": "one step of gradient descent is, um, is the following, which is that we will- that Theta J be updated according to Theta J minus the learning",
    "start": "1875339",
    "end": "1889380"
  },
  {
    "text": "rate times H of X minus Y times XJ, okay?",
    "start": "1889380",
    "end": "1900044"
  },
  {
    "text": "Now, I'm, I'm gonna just add a few more things in this equation. Um, so I did this with one training example, but, uh,",
    "start": "1900045",
    "end": "1906915"
  },
  {
    "text": "this was- I kind of used definition of the cost function J of Theta defined using just one single training example,",
    "start": "1906915",
    "end": "1913740"
  },
  {
    "text": "but you actually have M training examples. And so, um, the, the correct formula for the derivative is actually if you",
    "start": "1913740",
    "end": "1921660"
  },
  {
    "text": "take this thing and sum it over all M training examples, um, the derivative of- you know,",
    "start": "1921660",
    "end": "1927120"
  },
  {
    "text": "the derivative of a sum is the sum of the derivatives, right? So, um, so you actually- If, if,",
    "start": "1927120",
    "end": "1932775"
  },
  {
    "text": "if you redo this derivation, you know, summing with the correct definition of J of Theta which sums over all M training examples.",
    "start": "1932775",
    "end": "1939360"
  },
  {
    "text": "If you just redo that little derivation, you end up with, uh, sum equals I through M of that, right?",
    "start": "1939360",
    "end": "1950265"
  },
  {
    "text": "Where remember XI is the Ith training examples input features, YI is the target label, is the, uh,",
    "start": "1950265",
    "end": "1957255"
  },
  {
    "text": "price in the Ith training example, okay? Um, and so this is the actual correct formula for the partial derivative with",
    "start": "1957255",
    "end": "1966825"
  },
  {
    "text": "respect to that of the cost function J of Theta when it's defined using,",
    "start": "1966825",
    "end": "1973380"
  },
  {
    "text": "um, uh, all of the, um, [NOISE] uh, on- when it's defined using all of the training examples, okay?",
    "start": "1973380",
    "end": "1980684"
  },
  {
    "text": "And so the gradient descent algorithm is to- [NOISE]",
    "start": "1980685",
    "end": "1989220"
  },
  {
    "start": "1981000",
    "end": "2554000"
  },
  {
    "text": "Repeat until convergence, carry out this update,",
    "start": "1991450",
    "end": "1996679"
  },
  {
    "text": "and in each iteration of gradient descent, uh, you do this update for j equals,",
    "start": "1996680",
    "end": "2003970"
  },
  {
    "text": "uh, 0, 1 up to n. Uh,",
    "start": "2003970",
    "end": "2010059"
  },
  {
    "text": "where n is the number of features. So n was 2 in our example. Okay. Um, and if you do this then,",
    "start": "2010060",
    "end": "2018235"
  },
  {
    "text": "uh, uh, you know, actually let me see. Then what will happen is,",
    "start": "2018235",
    "end": "2023500"
  },
  {
    "text": "um, [NOISE] well, I'll show you the animation. As you fit- hopefully,",
    "start": "2023500",
    "end": "2028740"
  },
  {
    "text": "you find a pretty good value of the parameters Theta. Okay. So, um, it turns out that when",
    "start": "2028740",
    "end": "2037780"
  },
  {
    "text": "you plot the cost function j of Theta for a linear regression model,",
    "start": "2037780",
    "end": "2043240"
  },
  {
    "text": "um, it turns out that, unlike the earlier diagram I had shown which has local optima,",
    "start": "2043240",
    "end": "2050350"
  },
  {
    "text": "it turns out that if j of Theta is defined the way that, you know, we just defined it for linear regression,",
    "start": "2050350",
    "end": "2056230"
  },
  {
    "text": "is the sum of squared terms, um, then j of Theta turns out to be a quadratic function, right?",
    "start": "2056230",
    "end": "2061409"
  },
  {
    "text": "It's a sum of these squares of terms, and so, j of Theta will always look like, look like a big bowl like this.",
    "start": "2061410",
    "end": "2067945"
  },
  {
    "text": "Okay. Um, another way to look at this, uh, uh, and so and so j of Theta does not have local optima,",
    "start": "2067945",
    "end": "2074200"
  },
  {
    "text": "um, or the only local optima is also the global optimum. The other way to look at the function like this is",
    "start": "2074200",
    "end": "2079839"
  },
  {
    "text": "to look at the contours of this plot, right? So you plot the contours by looking at the big bowl",
    "start": "2079840",
    "end": "2085254"
  },
  {
    "text": "and taking horizontal slices and plotting where the, where the curves where, where the edges of the horizontal slice is.",
    "start": "2085255",
    "end": "2091629"
  },
  {
    "text": "So the contours of a big bowl or I guess a formal is, uh, of a bigger,",
    "start": "2091630",
    "end": "2096925"
  },
  {
    "text": "uh, of of this quadratic function will be ellipsis, um, like these or these ovals or these ellipses like this.",
    "start": "2096925",
    "end": "2105400"
  },
  {
    "text": "And so if you run gradient descent on this algorithm, um, let's say I initialize, uh,",
    "start": "2105400",
    "end": "2112375"
  },
  {
    "text": "my parameters at that little x, uh, shown over here, right.",
    "start": "2112375",
    "end": "2118060"
  },
  {
    "text": "And usually you initialize Theta degree with a 0, but but, you know, but it doesn't matter too much. So let's reinitialize over there.",
    "start": "2118060",
    "end": "2124375"
  },
  {
    "text": "Then, um, with one step of gradient descent, the algorithm will take that step downhill,",
    "start": "2124375",
    "end": "2130240"
  },
  {
    "text": "uh, and then with a second step, it'll take that step downhill whereby we, fun fact, uh,",
    "start": "2130240",
    "end": "2137200"
  },
  {
    "text": "if you- if you think about the contours of the function, it turns out that the direction of steepest descent is always at 90 degrees,",
    "start": "2137200",
    "end": "2142735"
  },
  {
    "text": "is always orthogonal, uh, to the contour direction, right. So, I don't know, yeah. I seem to remember that from my high-school something, I think it's true. All right.",
    "start": "2142735",
    "end": "2152515"
  },
  {
    "text": "And so as you, as you take steps downhill, uh, uh, because there's only one global minimum,",
    "start": "2152515",
    "end": "2159475"
  },
  {
    "text": "um, this algorithm will eventually converge to the global minimum. Okay. And so the question just now about the choice of the learning rate Alpha.",
    "start": "2159475",
    "end": "2168535"
  },
  {
    "text": "Um, if you set Alpha to be very very large, to be too large then they can overshoot, right.",
    "start": "2168535",
    "end": "2174430"
  },
  {
    "text": "The steps you take can be too large and you can run past the minimum. Uh, if you set to be too small,",
    "start": "2174430",
    "end": "2180640"
  },
  {
    "text": "then you need a lot of iterations and the algorithm will be slow. And so what happens in practice is, uh,",
    "start": "2180640",
    "end": "2186714"
  },
  {
    "text": "usually you try a few values and and and see what value of the learning rate allows you to most efficiently,",
    "start": "2186715",
    "end": "2193525"
  },
  {
    "text": "you know, drive down the value of j of Theta. Um, and if you see j of Theta increasing rather than decreasing,",
    "start": "2193525",
    "end": "2200140"
  },
  {
    "text": "you see the cost function increasing rather than decreasing, then, there's a very strong sign that the learning rate is,",
    "start": "2200140",
    "end": "2206590"
  },
  {
    "text": "uh, too large, and so, um. [NOISE] Actually what what I often do is actually try out multiple values of,",
    "start": "2206590",
    "end": "2213685"
  },
  {
    "text": "um, the learning rate Alpha, and, uh, uh, and and usually try them on an exponential scale.",
    "start": "2213685",
    "end": "2219130"
  },
  {
    "text": "So you try open O1, open O2, open O4, open O8 kinda like a doubling scale or some- uh, uh,",
    "start": "2219130",
    "end": "2225970"
  },
  {
    "text": "or doubling or tripling scale and try a few values and see what value allows you to drive down to the learning rate fastest.",
    "start": "2225970",
    "end": "2232090"
  },
  {
    "text": "Okay. Um, let me just. So I just want to visualize this in one other way,",
    "start": "2232090",
    "end": "2239020"
  },
  {
    "text": "um, which is with the data. So, uh, this is this is the actual dataset. Uh, they're, um, there are actually 49 points in this dataset.",
    "start": "2239020",
    "end": "2247030"
  },
  {
    "text": "So m the number of training examples is 49, and so if you initialize the parameters to 0,",
    "start": "2247030",
    "end": "2253480"
  },
  {
    "text": "that means, initializing your hypothesis or initializing your straight line fit to the data to be that horizontal line, right?",
    "start": "2253480",
    "end": "2260800"
  },
  {
    "text": "So, if you initialize Theta 0 equals 0, Theta 1 equals 0, then your hypothesis is, you know,",
    "start": "2260800",
    "end": "2267565"
  },
  {
    "text": "for any input size of house or price, the estimated price is 0, right? And so your hypothesis starts off with a horizontal line,",
    "start": "2267565",
    "end": "2275305"
  },
  {
    "text": "that is whatever the input x the output y is 0. And what you're doing, um,",
    "start": "2275305",
    "end": "2280825"
  },
  {
    "text": "as you run gradient descent is you're changing the parameters Theta, right?",
    "start": "2280825",
    "end": "2286000"
  },
  {
    "text": "So the parameters went from this value to this value to this value to this value and so on. And so, the other way of visualizing gradient descent is,",
    "start": "2286000",
    "end": "2294400"
  },
  {
    "text": "if gradient descent starts off with this hypothesis, with each iteration of gradient descent,",
    "start": "2294400",
    "end": "2299950"
  },
  {
    "text": "you are trying to find different values of the parameters Theta, uh, that allows this straight line to fit the data better.",
    "start": "2299950",
    "end": "2308050"
  },
  {
    "text": "So after one iteration of gradient descent, this is the new hypothesis, you now have different values of Theta 0 and",
    "start": "2308050",
    "end": "2313779"
  },
  {
    "text": "Theta 1 that fits the data a little bit better. Um, after two iterations, you end up with that hypothesis, uh,",
    "start": "2313780",
    "end": "2320980"
  },
  {
    "text": "and with each iteration of gradient descent it's trying to minimize j of Theta. Is trying to minimize one half of the sum of squares errors of",
    "start": "2320980",
    "end": "2328540"
  },
  {
    "text": "the hypothesis or predictions on the different examples, right? With three iterations of gradient descent, um,",
    "start": "2328540",
    "end": "2334540"
  },
  {
    "text": "uh, four iterations and so on. And then and then a bunch more iterations, uh, and eventually it converges to that hypothesis,",
    "start": "2334540",
    "end": "2343000"
  },
  {
    "text": "which is a pretty, pretty decent straight line fit to the data. Okay. Is there a question? Yeah, go for it.",
    "start": "2343000",
    "end": "2348400"
  },
  {
    "text": "[inaudible]",
    "start": "2348400",
    "end": "2361150"
  },
  {
    "text": "Uh, sure.",
    "start": "2361150",
    "end": "2368049"
  },
  {
    "text": "Maybe, uh, just to repeat the question. Why is the- why are you subtracting Alpha times the gradient rather than adding Alpha times the gradient?",
    "start": "2368050",
    "end": "2376090"
  },
  {
    "text": "Um, let me suggest, actually let me raise the screen. Um, [NOISE] so let me suggest you work through one example.",
    "start": "2376090",
    "end": "2385030"
  },
  {
    "text": "Um, uh, it turns out that if you add multiple times in a gradient, you'll be going uphill rather than going downhill,",
    "start": "2385030",
    "end": "2391480"
  },
  {
    "text": "and maybe one way to see that would be if, um, you know, take a quadratic function, um, excuse me.",
    "start": "2391480",
    "end": "2400090"
  },
  {
    "text": "Right. If you are here, the gradient is a positive direction and you want to reduce,",
    "start": "2400090",
    "end": "2405835"
  },
  {
    "text": "so this would be Theta and this will be j I guess. So you want Theta to decrease, so the gradient is positive.",
    "start": "2405835",
    "end": "2411070"
  },
  {
    "text": "You wanna decrease Theta, so you want to subtract a multiple times the gradient. Um, I think maybe the best way to see that would be the work through an example yourself.",
    "start": "2411070",
    "end": "2418135"
  },
  {
    "text": "Uh, uh, set j of Theta equals Theta squared and set Theta equals 1.",
    "start": "2418135",
    "end": "2423610"
  },
  {
    "text": "So here at the quadratic function of the derivative is equal to 1. So you want to subtract the value from Theta rather than add.",
    "start": "2423610",
    "end": "2428994"
  },
  {
    "text": "Okay? Cool. Um. All right. Great. So you've now seen your first learning algorithm,",
    "start": "2428995",
    "end": "2441275"
  },
  {
    "text": "um, and, you know, gradient descent and linear regression is definitely still one of the most widely used learning algorithms in the world today,",
    "start": "2441275",
    "end": "2448970"
  },
  {
    "text": "and if you implement this- if you, if you, if you implement this today, right, you could use this for,",
    "start": "2448970",
    "end": "2454115"
  },
  {
    "text": "for some actually pretty, pretty decent purposes. Um, now, I wanna I give this algorithm one other name.",
    "start": "2454115",
    "end": "2465365"
  },
  {
    "text": "Uh, so our gradient descent algorithm here, um, calculates this derivative by summing over",
    "start": "2465365",
    "end": "2474110"
  },
  {
    "text": "your entire training set m. And so sometimes this version of gradient descent, has another name, which is batch gradient descent.",
    "start": "2474110",
    "end": "2482975"
  },
  {
    "text": "Oops. All right",
    "start": "2482975",
    "end": "2493445"
  },
  {
    "text": "and the term batch, um, you know- and again- I think in machine learning, uh, our whole committee, we just make up names and stuff and sometimes the names aren't great.",
    "start": "2493445",
    "end": "2501770"
  },
  {
    "text": "But the- the term batch gradient descent refers to that, you look at the entire training set,",
    "start": "2501770",
    "end": "2507244"
  },
  {
    "text": "all 49 examples in the example I just had on, uh, PowerPoint. You know, you- you think of all for 49 examples as one batch of data,",
    "start": "2507245",
    "end": "2514760"
  },
  {
    "text": "I'm gonna process all the data as a batch, so hence the name batch gradient descent.",
    "start": "2514760",
    "end": "2520145"
  },
  {
    "text": "The disadvantage of batch gradient descent is that if you have a giant dataset,",
    "start": "2520145",
    "end": "2525185"
  },
  {
    "text": "if you have, um, and- and in the era of big data we're really, moving to larger and larger datasets,",
    "start": "2525185",
    "end": "2531065"
  },
  {
    "text": "so I've used, you know, we train machine learning models of like hundreds of millions of examples.",
    "start": "2531065",
    "end": "2536180"
  },
  {
    "text": "And- and if you are trying to- if you have, uh, if you download the US census database,",
    "start": "2536180",
    "end": "2541250"
  },
  {
    "text": "if your data, the United States census, that's a very large dataset. And you wanna predict housing prices,",
    "start": "2541250",
    "end": "2546785"
  },
  {
    "text": "from all across the United States, um, that- that- that may have a dataset with many- many millions of examples.",
    "start": "2546785",
    "end": "2553339"
  },
  {
    "text": "And the disadvantage of batch gradient descent is that, in order to make one update,",
    "start": "2553340",
    "end": "2559520"
  },
  {
    "start": "2554000",
    "end": "2696000"
  },
  {
    "text": "to your parameters, in order to even take a single step of gradient descent, you need to calculate, this sum.",
    "start": "2559520",
    "end": "2566705"
  },
  {
    "text": "And if m is say a million or 10 million or 100 million, you need to scan through your entire database,",
    "start": "2566705",
    "end": "2574105"
  },
  {
    "text": "scan through your entire dataset and calculate this for, you know, 100 million examples and sum it up.",
    "start": "2574105",
    "end": "2581225"
  },
  {
    "text": "And so every single step of gradient descent becomes very slow because you're scanning over, you're reading over, right,",
    "start": "2581225",
    "end": "2587870"
  },
  {
    "text": "like 100 million training examples, uh, uh, and uh, uh, before you can even, you know,",
    "start": "2587870",
    "end": "2593045"
  },
  {
    "text": "make one tiny little step of gradient descent. Okay, um, yeah, and by the way, I think- I feel like in today's era of",
    "start": "2593045",
    "end": "2600260"
  },
  {
    "text": "big data people start to lose intuitions about what's a big data-set. I think even by today's standards, like a hundred million examples is still very big, right,",
    "start": "2600260",
    "end": "2607279"
  },
  {
    "text": "I- I rarely- only rarely use a hundred million examples. Um, I don't know,",
    "start": "2607280",
    "end": "2612410"
  },
  {
    "text": "maybe in a few years we'll look back on a hundred million examples and say that was really small, but at least today. Uh, yeah.",
    "start": "2612410",
    "end": "2619445"
  },
  {
    "text": "So the main disadvantage of batch gradient descent is, every single step of gradient descent requires that you read through, you know,",
    "start": "2619445",
    "end": "2627560"
  },
  {
    "text": "your entire data-set, maybe terabytes of data-sets maybe- maybe- maybe, uh, tens or hundreds of terabytes of data,",
    "start": "2627560",
    "end": "2633650"
  },
  {
    "text": "uh, before you can even update the parameters just once. And if gradient descent needs, you know,",
    "start": "2633650",
    "end": "2639275"
  },
  {
    "text": "hundreds of iterations to converge, then you'll be scanning through your entire data-set hundreds of times.",
    "start": "2639275",
    "end": "2645290"
  },
  {
    "text": "Right, or-or and then sometimes we train, our algorithms with thousands or tens of thousands of iterations.",
    "start": "2645290",
    "end": "2650359"
  },
  {
    "text": "And so- so this- this gets expensive. So there's an alternative to batch gradient descent. Um, and",
    "start": "2650360",
    "end": "2659030"
  },
  {
    "text": "let me just write out the algorithm here that we can talk about it, which is going to repeatedly do this.",
    "start": "2659030",
    "end": "2666260"
  },
  {
    "text": "[NOISE] Oops, okay. Um, so this algorithm,",
    "start": "2666260",
    "end": "2695625"
  },
  {
    "text": "which is called stochastic gradient descent. [NOISE] Um, instead of scanning through",
    "start": "2695625",
    "end": "2709315"
  },
  {
    "start": "2696000",
    "end": "4697000"
  },
  {
    "text": "all million examples before you update the parameters theta even a little bit,",
    "start": "2709315",
    "end": "2714385"
  },
  {
    "text": "in stochastic gradient descent, instead, in the inner loop of the algorithm, you loop through j equals 1 through m of taking a gradient descent step",
    "start": "2714385",
    "end": "2723560"
  },
  {
    "text": "using, the derivative of just one single example of just that, uh, one example, ah,",
    "start": "2723560",
    "end": "2729800"
  },
  {
    "text": "oh, excuse me it's through i, right. Yeah, so let i go from 1 to m,",
    "start": "2729800",
    "end": "2734990"
  },
  {
    "text": "and update theta j for every j. So you update this for j equals 1 through n, update theta j,",
    "start": "2734990",
    "end": "2742775"
  },
  {
    "text": "using this derivative that when now this derivative is taken just with respect to one training example- example I.",
    "start": "2742775",
    "end": "2751160"
  },
  {
    "text": "Okay, um, I'll- I'll just- alright and I guess you update this for every j.",
    "start": "2751160",
    "end": "2759510"
  },
  {
    "text": "Okay, and so, let me just draw a picture of what this algorithm is doing.",
    "start": "2762580",
    "end": "2769940"
  },
  {
    "text": "If um, this is the contour, like the one you saw just now.",
    "start": "2769940",
    "end": "2776135"
  },
  {
    "text": "So the axes are, uh, theta 0 and theta 1, and the height of the surface right, denote the contours as j of theta.",
    "start": "2776135",
    "end": "2783740"
  },
  {
    "text": "With stochastic gradient descent, what you do is you initialize the parameters somewhere. And then you will look at your first training example.",
    "start": "2783740",
    "end": "2791795"
  },
  {
    "text": "Hey, lets just look at one house, and see if you can predict that house as better, and you modify the parameters to",
    "start": "2791795",
    "end": "2797720"
  },
  {
    "text": "increase the accuracy where you predict the price of that one house. And because you're fitting the data just for one house, um, you know,",
    "start": "2797720",
    "end": "2804815"
  },
  {
    "text": "maybe you end up improving the parameters a little bit, but not quite going in the most direct direction downhill.",
    "start": "2804815",
    "end": "2812930"
  },
  {
    "text": "And you go look at the second house and say, hey, let's try to fit that house better. And then you update the parameters. And you look at third house, fourth house.",
    "start": "2812930",
    "end": "2819935"
  },
  {
    "text": "Right, and so as you run stochastic gradient descent, it takes a slightly noisy, slightly random path.",
    "start": "2819935",
    "end": "2827599"
  },
  {
    "text": "Uh, but on average, it's headed toward the global minimum, okay.",
    "start": "2827600",
    "end": "2833990"
  },
  {
    "text": "So as you run stochastic gradient descent- stochastic gradient descent will actually, never quite converge.",
    "start": "2833990",
    "end": "2840920"
  },
  {
    "text": "In- with- with batch gradient descent, it kind of went to the global minimum and stopped right,",
    "start": "2840920",
    "end": "2846785"
  },
  {
    "text": "uh, with stochastic gradient descent even as you won't run it, the parameters will oscillate and won't ever quite converge because you're always",
    "start": "2846785",
    "end": "2853369"
  },
  {
    "text": "running around looking at different houses and trying to do better than just that one house- and that one house- and that one house. Uh, but when you have a very large data-set,",
    "start": "2853370",
    "end": "2862070"
  },
  {
    "text": "stochastic gradient descent, allows your implementation- allows you algorithm to make much faster progress.",
    "start": "2862070",
    "end": "2868400"
  },
  {
    "text": "Uh, and so, um, uh, uh- and so when you have very large data-sets,",
    "start": "2868400",
    "end": "2874250"
  },
  {
    "text": "stochastic gradient descent is used much more in practice than batch gradient descent. [BACKGROUND]",
    "start": "2874250",
    "end": "2892370"
  },
  {
    "text": "Uh, yeah, is it possible to start with stochastic gradient descent and then switch over to batch gradient descent? Yes, it is.",
    "start": "2892370",
    "end": "2897920"
  },
  {
    "text": "So, uh, boy, something that wasn't talked about in this class, it's talked about in CS230 is Mini-batch gradient descent, where, um,",
    "start": "2897920",
    "end": "2905930"
  },
  {
    "text": "you don't- where you use say a hundred examples at a time rather than one example at a time. And so- uh, so that's another algorithm that I should use more often in practice.",
    "start": "2905930",
    "end": "2915185"
  },
  {
    "text": "I think people rarely- actually, so- so in practice, you know, when your dataset is large, we rarely,",
    "start": "2915185",
    "end": "2923765"
  },
  {
    "text": "ever switch to batch gradient descent, because batch gradient descent is just so slow, right.",
    "start": "2923765",
    "end": "2929180"
  },
  {
    "text": "So, I-I know I'm thinking through concrete examples of problems I've worked on.",
    "start": "2929180",
    "end": "2934535"
  },
  {
    "text": "And I think that what- maybe actually maybe- I think that uh,",
    "start": "2934535",
    "end": "2939359"
  },
  {
    "text": "for a lot of- for- for modern machine learning, where you have- if you have very- very large data sets, right so you know,",
    "start": "2939580",
    "end": "2945830"
  },
  {
    "text": "whether- if you're building a speech recognition system, you might have like a terabyte of data, right, and so, um,",
    "start": "2945830",
    "end": "2952340"
  },
  {
    "text": "it's so expensive to scan through a terabyte of data just reading it from disk, right it's so expensive that you would",
    "start": "2952340",
    "end": "2959840"
  },
  {
    "text": "probably never even run one iteration of batch gradient descent. Uh, and it turns out the- the-",
    "start": "2959840",
    "end": "2965860"
  },
  {
    "text": "there's one- one huge saving grace of stochastic gradient descent is, um, let's say you run stochastic gradient descent, right,",
    "start": "2965860",
    "end": "2972770"
  },
  {
    "text": "and, you know, you end up with this parameter and that's the parameter you use,",
    "start": "2972770",
    "end": "2978770"
  },
  {
    "text": "for your machine learning system, rather than the global optimum. It turns out that parameter is actually not that bad, right,",
    "start": "2978770",
    "end": "2985579"
  },
  {
    "text": "you- you probably make perfectly fine predictions even if you don't quite get to the like the global- global minimum.",
    "start": "2985580",
    "end": "2991790"
  },
  {
    "text": "So, uh, what you said I think it's a fine thing to do, no harm trying it.",
    "start": "2991790",
    "end": "2996875"
  },
  {
    "text": "Although in practice uh, uh, in practice we don't bother, I think in practice we usually use stochastic gradient descent.",
    "start": "2996875",
    "end": "3003870"
  },
  {
    "text": "The thing that actually is more common, is to slowly decrease the learning rate. So just keep using stochastic gradient descent,",
    "start": "3003870",
    "end": "3009420"
  },
  {
    "text": "but reduce the learning rate over time. So it takes smaller and smaller steps. So if you do that, then what happens is the size of the oscillations would decrease.",
    "start": "3009420",
    "end": "3017830"
  },
  {
    "text": "Uh, and so you end up oscillating or bouncing around the smaller region. So wherever you end up,",
    "start": "3017830",
    "end": "3023050"
  },
  {
    "text": "may not be the global- global minimum, but at least it'll- be it'll be closer to the global minimum. Yeah, so decreasing the learning rate is used much more often.",
    "start": "3023050",
    "end": "3031405"
  },
  {
    "text": "Cool. Question. Yeah. [BACKGROUND]",
    "start": "3031405",
    "end": "3039710"
  },
  {
    "text": "Oh sure, when do you stop with stochastic gradient descent? Uh, uh, plot to j of theta, uh, over time.",
    "start": "3039710",
    "end": "3046835"
  },
  {
    "text": "So j of theta is a cost function that you're trying to drag down. So monitor j of theta as,",
    "start": "3046835",
    "end": "3052385"
  },
  {
    "text": "you know, is going down over time, and then if it looks like it stopped going down, then you can say, \"Oh, it looks like it looks like it stopped going down,\" then you stop training.",
    "start": "3052385",
    "end": "3059735"
  },
  {
    "text": "Although- and then- ah, uh, you know, one nice thing about linear regression is that it has no local optimum and so,",
    "start": "3059735",
    "end": "3066740"
  },
  {
    "text": "um, uh, it- you run into these convergence debugging types of issues less often.",
    "start": "3066740",
    "end": "3073595"
  },
  {
    "text": "Where you're training highly non-linear things like neural networks, we should talk about later in CS229 as well.",
    "start": "3073595",
    "end": "3078755"
  },
  {
    "text": "Uh, these issues become more acute. Cool. Okay, great.",
    "start": "3078755",
    "end": "3087545"
  },
  {
    "text": "So, um, uh, yeah. [BACKGROUND].",
    "start": "3087545",
    "end": "3095660"
  },
  {
    "text": "Oh, would your learning rate be 1 over n times linear regressions then? Not really, it's usually much bigger than that.",
    "start": "3095660",
    "end": "3100849"
  },
  {
    "text": "Uh, uh, yeah, because if your learning rate was 1 over n times that of what you'd use with batch gradient descent",
    "start": "3100850",
    "end": "3106850"
  },
  {
    "text": "then it would end up being as slow as batch gradient descent, so it's usually much bigger. Okay. So, um, so that's stochastic gradient descent and- and- so I'll tell you what I do.",
    "start": "3106850",
    "end": "3119195"
  },
  {
    "text": "If- if you have a relatively small dataset, you know, if you have- if you have, I don't know, like hundreds of examples maybe thousands of examples where,",
    "start": "3119195",
    "end": "3126529"
  },
  {
    "text": "uh, it's computationally efficient to do batch gradient descent. If batch gradient descent doesn't cost too much,",
    "start": "3126530",
    "end": "3132349"
  },
  {
    "text": "I would almost always just use batch gradient descent because it's one less thing to fiddle with, right? It's just one less thing to have to worry about,",
    "start": "3132350",
    "end": "3138680"
  },
  {
    "text": "uh, the parameters oscillating, but your dataset is too large that batch gradient descent becomes prohibit- prohibitively slow,",
    "start": "3138680",
    "end": "3146870"
  },
  {
    "text": "then almost everyone will use, you know, stochastic gradient descent or whatever more like stochastic gradient descent, okay?",
    "start": "3146870",
    "end": "3154380"
  },
  {
    "text": "All right, so, um, gradient descent,",
    "start": "3166990",
    "end": "3173585"
  },
  {
    "text": "both batch gradient descent and stochastic gradient descent is an iterative algorithm meaning that you have to take multiple steps to get to,",
    "start": "3173585",
    "end": "3181640"
  },
  {
    "text": "you know, get near hopefully the global optimum. It turns out there is another algorithm,",
    "start": "3181640",
    "end": "3187370"
  },
  {
    "text": "uh, and- and, um, for many other algorithms we'll talk about in this course including generalized linear models and neural networks and a few other algorithms, uh,",
    "start": "3187370",
    "end": "3196549"
  },
  {
    "text": "you will have to use gradient descent and so- and so we'll see gradient descent, you know, as we develop multiple different algorithms later this quarter.",
    "start": "3196550",
    "end": "3205220"
  },
  {
    "text": "It turns out that for the special case of linear regression, uh, uh, and I mean linear regression but not the algorithm we'll talk about next Monday,",
    "start": "3205220",
    "end": "3213275"
  },
  {
    "text": "not the algorithm we'll talk about next Wednesday, but if the algorithm you're using is linear regression and exactly linear regression.",
    "start": "3213275",
    "end": "3219170"
  },
  {
    "text": "It turns out that there's a way to, uh, solve for the optimal value of the parameters theta to just jump in",
    "start": "3219170",
    "end": "3226190"
  },
  {
    "text": "one step to the global optimum without needing to use an iterative algorithm,",
    "start": "3226190",
    "end": "3231290"
  },
  {
    "text": "right, and this- this one I'm gonna present next is called the normal equation. It works only for linear regression,",
    "start": "3231290",
    "end": "3237380"
  },
  {
    "text": "doesn't work for any of the other algorithms I talk about later this quarter. But [NOISE] um, uh,",
    "start": "3237380",
    "end": "3247970"
  },
  {
    "text": "let me quickly show you the derivation of that. And, um, what I want to do is, uh,",
    "start": "3247970",
    "end": "3256234"
  },
  {
    "text": "give you a flavor of how to derive the normal equation and where you end up with is you know,",
    "start": "3256235",
    "end": "3263840"
  },
  {
    "text": "wha- what- what I hope to do is end up with a formula that lets you say theta equals some stuff where you just",
    "start": "3263840",
    "end": "3271280"
  },
  {
    "text": "set theta equals to that and in one step with a few matrix multiplications you end up with the optimal value of theta that lands you right at the global optimum,",
    "start": "3271280",
    "end": "3280309"
  },
  {
    "text": "right, just like that, just in one step. Okay. Um, and if you've taken, you know,",
    "start": "3280310",
    "end": "3286160"
  },
  {
    "text": "advanced linear algebra courses before or something, you may have seen, um, this formula for linear regression.",
    "start": "3286160",
    "end": "3293375"
  },
  {
    "text": "Wha- what a lot of linear algebra classes do is, what some linear algebra classes do is cover the board with,",
    "start": "3293375",
    "end": "3300484"
  },
  {
    "text": "you know, pages and pages of matrix derivatives. Um, what I wanna do is describe to you",
    "start": "3300485",
    "end": "3306320"
  },
  {
    "text": "a matrix derivative notation that allows you to derive the normal equation in roughly four lines of linear algebra,",
    "start": "3306320",
    "end": "3314119"
  },
  {
    "text": "uh, rather than some pages and pages of linear algebra and in the work I've done in machine learning you know,",
    "start": "3314120",
    "end": "3320045"
  },
  {
    "text": "sometimes notation really matters, right. If you have the right notation you can solve some problems much more easily and what I wanna do is,",
    "start": "3320045",
    "end": "3327230"
  },
  {
    "text": "um, uh, define this uh, matrix linear algebra notation and then I don't wanna do all the steps of the derivation,",
    "start": "3327230",
    "end": "3335630"
  },
  {
    "text": "I wanna give you- give you a sense of the flavor of what it looks like and then, um, I'll ask you to,",
    "start": "3335630",
    "end": "3341345"
  },
  {
    "text": "uh, uh, get a lot of details yourself, um, in the- in the lecture notes where we",
    "start": "3341345",
    "end": "3346820"
  },
  {
    "text": "work out everything in more detail than I want to do algebra in class. And, um, in problem set one you'll get to practice using this yourself to- to- to-,",
    "start": "3346820",
    "end": "3355430"
  },
  {
    "text": "you know, derive some additional things. I've- I've found this notation really convenient, right, for deriving learning algorithms.",
    "start": "3355430",
    "end": "3362510"
  },
  {
    "text": "Okay. So, um, I'm going to use the following notation.",
    "start": "3362510",
    "end": "3368435"
  },
  {
    "text": "Um, so J, right.",
    "start": "3368435",
    "end": "3373610"
  },
  {
    "text": "There's a function mapping from parameters to the real numbers. So I'm going to define this- this is the derivative of J of theta with respect to theta,",
    "start": "3373610",
    "end": "3387080"
  },
  {
    "text": "where- remember theta is a three-dimensional vector says R3,",
    "start": "3387080",
    "end": "3392690"
  },
  {
    "text": "or actually it's R n+1, right. If you have, uh, two features to the house if n=2,",
    "start": "3392690",
    "end": "3398150"
  },
  {
    "text": "then theta was 3 dimensional, it's n+1 dimensional so it's a vector. And so I'm gonna define the derivative with respect to theta of J of theta as follows.",
    "start": "3398150",
    "end": "3408350"
  },
  {
    "text": "Um, this is going to be itself a 3 by 1 vector [NOISE].",
    "start": "3408350",
    "end": "3421280"
  },
  {
    "text": "Okay, so I hope this notation is clear. So this is a three-dimensional vector with, uh, three components.",
    "start": "3421280",
    "end": "3429840"
  },
  {
    "text": "Alright so that's what I guess I'm.",
    "start": "3432370",
    "end": "3437670"
  },
  {
    "text": "So that's the first component is a vector, there's a second and there's a third. It's the partial derivative of J with respect to each of the three elements.",
    "start": "3440500",
    "end": "3450839"
  },
  {
    "text": "Um, and more generally,",
    "start": "3451030",
    "end": "3455760"
  },
  {
    "text": "in the notation we'll use, um, let me give you an example.",
    "start": "3466690",
    "end": "3472550"
  },
  {
    "text": "Um, uh, let's say that a is a matrix. So let's say that a is a two-by-two matrix.",
    "start": "3472550",
    "end": "3482240"
  },
  {
    "text": "Then, um, you can have a function, right, so let's say a is, you know,",
    "start": "3482240",
    "end": "3488465"
  },
  {
    "text": "A1-1, A1-2, A2-1 and A2-2, right.",
    "start": "3488465",
    "end": "3494645"
  },
  {
    "text": "So A is a two-by-two matrix. Then you might have some function um,",
    "start": "3494645",
    "end": "3500375"
  },
  {
    "text": "of a matrix A right, then that's a real number. So maybe f maps from A 2-by-2 to,",
    "start": "3500375",
    "end": "3509000"
  },
  {
    "text": "uh, excuse me, R 2-by-2, it's a real number. So, um, uh, and so for example,",
    "start": "3509000",
    "end": "3517099"
  },
  {
    "text": "if f of A equals A11 plus A12 squared, then f of, you know, 5,",
    "start": "3517100",
    "end": "3525109"
  },
  {
    "text": "6, 7, 8 would be equal to I guess 5 plus 6 squared, right.",
    "start": "3525110",
    "end": "3532505"
  },
  {
    "text": "So as we derive this, we'll be working a little bit with functions that map from matrices to real numbers and this is just one made up",
    "start": "3532505",
    "end": "3539510"
  },
  {
    "text": "example of a function that inputs a matrix and maps the matrix, maps the values of matrix to a real number.",
    "start": "3539510",
    "end": "3545464"
  },
  {
    "text": "And when you have a matrix function like this, I'm going to define the derivative with respect to A of f of A to be",
    "start": "3545465",
    "end": "3557150"
  },
  {
    "text": "equal to itself a matrix where the derivative of f of A with respect to the matrix A.",
    "start": "3557150",
    "end": "3564880"
  },
  {
    "text": "Uh, this itself will be a matrix with the same dimension of a and the elements of",
    "start": "3564880",
    "end": "3573109"
  },
  {
    "text": "this are the derivative with respect to the individual elements.",
    "start": "3573110",
    "end": "3583170"
  },
  {
    "text": "Actually, let me just write it like this. [NOISE]",
    "start": "3584830",
    "end": "3601880"
  },
  {
    "text": "Okay. So if A was a 2-by-2 matrix then the derivative of F of A with respect to A is itself",
    "start": "3601880",
    "end": "3608000"
  },
  {
    "text": "a 2-by-2 matrix and you compute this 2-by-2 matrix just by looking at F and taking,",
    "start": "3608000",
    "end": "3614405"
  },
  {
    "text": "uh, derivatives with respect to the different elements and plugging them into the different, the different elements of this matrix.",
    "start": "3614405",
    "end": "3621200"
  },
  {
    "text": "Okay. Um, and so in this particular example, I guess the derivative respect to A of F of A.",
    "start": "3621200",
    "end": "3628325"
  },
  {
    "text": "This would be, um, [NOISE] right,",
    "start": "3628325",
    "end": "3637640"
  },
  {
    "text": "it would be- it would be that. Ah and I got these four numbers by taking, um,",
    "start": "3637640",
    "end": "3644885"
  },
  {
    "text": "the definition of F and taking the derivative with respect to A_1, 1 and plugging that here.",
    "start": "3644885",
    "end": "3651200"
  },
  {
    "text": "Ah, taking the derivative with respect to A_1,2 and",
    "start": "3651200",
    "end": "3656930"
  },
  {
    "text": "plugging that here and taking the derivative with respect to the remaining elements and plugging them here which- which was 0.",
    "start": "3656930",
    "end": "3663125"
  },
  {
    "text": "Okay? So that's the definition of a matrix derivative. Yeah? [inaudible].",
    "start": "3663125",
    "end": "3672710"
  },
  {
    "text": "Oh, yes. We're just using the definition for a vector. Ah, N by 1 or N by 1 matrix. Yes. And in fact that definition and",
    "start": "3672710",
    "end": "3679579"
  },
  {
    "text": "this definition for the derivative of J with respect to Theta these are consistent. So if you apply that definition to a column vector,",
    "start": "3679580",
    "end": "3686630"
  },
  {
    "text": "treating a column vector as an N by 1 matrix or N, I guess it would be N plus 1 by 1 matrix",
    "start": "3686630",
    "end": "3691850"
  },
  {
    "text": "then that- that specializes to what we described here. [NOISE]",
    "start": "3691850",
    "end": "3709790"
  },
  {
    "text": "All right. So, um, let's see.",
    "start": "3709790",
    "end": "3717545"
  },
  {
    "text": "Okay. So, um, I want to leave the details of the lecture notes because there's",
    "start": "3717545",
    "end": "3724339"
  },
  {
    "text": "more lines of algebra which I won't do but it'll give you an overview [NOISE] of what the derivation of the normal equation looks like.",
    "start": "3724340",
    "end": "3731255"
  },
  {
    "text": "Um, so onto this definition of a derivative of a- of a matrix,",
    "start": "3731255",
    "end": "3736789"
  },
  {
    "text": "um, the broad outline of what we're going to do is we're going to take J of Theta.",
    "start": "3736790",
    "end": "3743075"
  },
  {
    "text": "Right. That's the cost function. Um, take the derivative with respect to Theta.",
    "start": "3743075",
    "end": "3750325"
  },
  {
    "text": "Right. Ah, since Theta is a vector so you want to take the derivative with respect to Theta and you know well,",
    "start": "3750325",
    "end": "3757030"
  },
  {
    "text": "how do you minimize a function? You take derivatives with [NOISE] respect to Theta and set it equal to 0.",
    "start": "3757030",
    "end": "3763220"
  },
  {
    "text": "And then you solve for the value of Theta so that the derivative is 0. Right. The- the minimum, you know, the maximum and minimum of a function is where the derivative is equal to 0.",
    "start": "3763220",
    "end": "3770870"
  },
  {
    "text": "So- so how you derive the normal equation is take this vector. Ah, so J of Theta maps from a vector to a real number.",
    "start": "3770870",
    "end": "3778340"
  },
  {
    "text": "So we'll, take the derivatives respect to Theta set it to 0,0 and solve for Theta and then we end up with a formula for Theta that lets you just,",
    "start": "3778340",
    "end": "3786230"
  },
  {
    "text": "um, ah, you know, immediately go to the global minimum of the- of the cost function J of Theta.",
    "start": "3786230",
    "end": "3793355"
  },
  {
    "text": "And, and a lot of the build up, a lot of this notation is, you know, is there- what does this mean and is there",
    "start": "3793355",
    "end": "3799220"
  },
  {
    "text": "an easy way to compute the derivative of J of Theta? Okay? So, um, ah,",
    "start": "3799220",
    "end": "3807065"
  },
  {
    "text": "so I hope you understand the lecture notes when hopefully you take a look at them, ah, just a couple other derivations.",
    "start": "3807065",
    "end": "3815510"
  },
  {
    "text": "Um, if A [NOISE] is a square matrix.",
    "start": "3815510",
    "end": "3821000"
  },
  {
    "text": "So let's say A is a [NOISE] N, N by N matrix. So number of rows equals number of columns.",
    "start": "3821000",
    "end": "3828110"
  },
  {
    "text": "Um, I'm going to denote the trace of A [NOISE] to be equal to [NOISE] the sum of the diagonal entries.",
    "start": "3828110",
    "end": "3837319"
  },
  {
    "text": "[NOISE] So sum of i of A_ii.",
    "start": "3837320",
    "end": "3844020"
  },
  {
    "text": "And this is pronounced the trace of A, um, and, ah, and- and you can- you can also write this as",
    "start": "3844480",
    "end": "3852890"
  },
  {
    "text": "trace operator like the trace function applied to A but by convention we often write trace of A without the parentheses.",
    "start": "3852890",
    "end": "3860645"
  },
  {
    "text": "And so this is called the trace of A. [NOISE] So trace just means sum of diagonal entries and,",
    "start": "3860645",
    "end": "3868279"
  },
  {
    "text": "um, some facts about the trace of a matrix. You know, trace of A is equal to",
    "start": "3868280",
    "end": "3874850"
  },
  {
    "text": "the trace of A transpose because if you transpose a matrix, right, you're just flipping it along the- the 45 degree axis.",
    "start": "3874850",
    "end": "3881690"
  },
  {
    "text": "And so the the diagonal entries actually stay the same when you transpose the matrix. So the trace of A is equal to trace of A transpose, um,",
    "start": "3881690",
    "end": "3889400"
  },
  {
    "text": "and then, ah, there-there are some other useful properties of, um, the trace operator.",
    "start": "3889400",
    "end": "3896480"
  },
  {
    "text": "Um, here's one that I don't want to prove but that you could go home and prove yourself with a-with a few with- with a little bit of work, maybe not,",
    "start": "3896480",
    "end": "3905135"
  },
  {
    "text": "not too much which is, ah, if you define, um, F of A [NOISE] equals trace of A times B.",
    "start": "3905135",
    "end": "3916010"
  },
  {
    "text": "So here if B is some fixed matrix, right, ah, and what F of A does is it multiplies A and",
    "start": "3916010",
    "end": "3922730"
  },
  {
    "text": "B and then it takes the sum of diagonal entries. Then it turns out that the derivative with respect to A of F of A is equal to,",
    "start": "3922730",
    "end": "3933065"
  },
  {
    "text": "um, B transpose [NOISE].",
    "start": "3933065",
    "end": "3938119"
  },
  {
    "text": "Um, and this is, ah, you could prove this yourself. For any matrix B, if F of A is defined this way,",
    "start": "3938120",
    "end": "3943625"
  },
  {
    "text": "the de- the derivative is equal to B transpose. Um, the trace function or the trace operator has other interesting properties.",
    "start": "3943625",
    "end": "3951740"
  },
  {
    "text": "The trace of AB is equal to the trace of BA. Ah, um, you could- you could prove this from past principles,",
    "start": "3951740",
    "end": "3959300"
  },
  {
    "text": "it's a little bit of work to prove, ah, ah, that- that you, if you expand out the definition of A and B it should prove",
    "start": "3959300",
    "end": "3964550"
  },
  {
    "text": "that [NOISE] and the trace of A times B times C is equal to [NOISE] the trace of C times A times B. Ah,",
    "start": "3964550",
    "end": "3972815"
  },
  {
    "text": "this is a cyclic permutation property. If you have a multiply, you know, multiply several matrices together you can always take one from",
    "start": "3972815",
    "end": "3979430"
  },
  {
    "text": "the end and move it to the front and the trace will remain the same. [NOISE] And,",
    "start": "3979430",
    "end": "3987050"
  },
  {
    "text": "um, another one that is a little bit harder to prove is that the trace,",
    "start": "3987050",
    "end": "3995585"
  },
  {
    "text": "excuse me, the derivative of A trans- of AA transpose C is [NOISE] Okay.",
    "start": "3995585",
    "end": "4007645"
  },
  {
    "text": "Yeah. So I think just as- just as for you know, ordinary, um, calculus we know the derivative of X squared is 2_X.",
    "start": "4007645",
    "end": "4015670"
  },
  {
    "text": "Right. And so we all figured out that very well. We just use it too much without- without having to re-derive it every time.",
    "start": "4015670",
    "end": "4021220"
  },
  {
    "text": "Ah, this is a little bit like that. The trace of A squared C is, you know, two times CA.",
    "start": "4021220",
    "end": "4027250"
  },
  {
    "text": "Right. It's a little bit like that but- but with- with matrix notation as there. So think of this as analogous to D,",
    "start": "4027250",
    "end": "4034480"
  },
  {
    "text": "DA of A squared C equals 2AC. Right. But that is like the matrix version of that.",
    "start": "4034480",
    "end": "4042160"
  },
  {
    "text": "[NOISE]",
    "start": "4042160",
    "end": "4064244"
  },
  {
    "text": "All right. So finally, um,",
    "start": "4064245",
    "end": "4071910"
  },
  {
    "text": "what I'd like to do is take J of Theta and express it in this,",
    "start": "4071910",
    "end": "4078944"
  },
  {
    "text": "uh, you know, matrix vector notation. So we can take derivatives with respect to Theta, and set the derivatives equal to 0,",
    "start": "4078945",
    "end": "4084900"
  },
  {
    "text": "and just solve for the value of Theta, right? And so, um, let me just write out the definition of J of Theta.",
    "start": "4084900",
    "end": "4092430"
  },
  {
    "text": "So J of Theta was one-half sum from i equals 1 through m",
    "start": "4092430",
    "end": "4097484"
  },
  {
    "text": "of h of x i minus y i squared.",
    "start": "4097485",
    "end": "4104594"
  },
  {
    "text": "Um, and it turns out that, um, all right.",
    "start": "4104595",
    "end": "4119865"
  },
  {
    "text": "It turns out that, um, if it is, if you define a matrix capital X as follows.",
    "start": "4119865",
    "end": "4126795"
  },
  {
    "text": "Which is, I'm going to take the matrix capital X and take the training examples we have,",
    "start": "4126795",
    "end": "4134654"
  },
  {
    "text": "you know, and stack them up in rows.",
    "start": "4134655",
    "end": "4139359"
  },
  {
    "text": "So we have m training examples, right? So so the X's were column vectors.",
    "start": "4140030",
    "end": "4146219"
  },
  {
    "text": "So I'm taking transpose to just stack up the training examples in, uh, in rows here.",
    "start": "4146220",
    "end": "4151259"
  },
  {
    "text": "So let me call this the design matrix. So the capital X called the design matrix. And, uh, it turns out that if you define X this way,",
    "start": "4151260",
    "end": "4161520"
  },
  {
    "text": "then X times Theta, there's this thing times Theta.",
    "start": "4161520",
    "end": "4169199"
  },
  {
    "text": "And the way a matrix vector multiplication works is your Theta is now a column vector, right?",
    "start": "4169200",
    "end": "4175859"
  },
  {
    "text": "So Theta is, you know, Theta_0, Theta_1, Theta_2. So the way that, um,",
    "start": "4175860",
    "end": "4182384"
  },
  {
    "text": "matrix-vector multiplication works is you multiply this column vector with each of these in in turn.",
    "start": "4182385",
    "end": "4188355"
  },
  {
    "text": "And so this ends up being X1 transpose Theta, X2 transpose Theta,",
    "start": "4188355",
    "end": "4196890"
  },
  {
    "text": "down to X_m transpose Theta,",
    "start": "4196890",
    "end": "4202995"
  },
  {
    "text": "which is of course just the vector of all of the predictions of the algorithm.",
    "start": "4202995",
    "end": "4209620"
  },
  {
    "text": "And so if, um, now let me also define a vector y to be taking all of the,",
    "start": "4229340",
    "end": "4238560"
  },
  {
    "text": "uh, labels from your training example,",
    "start": "4238560",
    "end": "4246060"
  },
  {
    "text": "and stacking them up into a big column vector, right. Let me define y that way.",
    "start": "4246060",
    "end": "4251579"
  },
  {
    "text": "Um, it turns out that, um,",
    "start": "4251580",
    "end": "4257250"
  },
  {
    "text": "J of Theta can then be written as one-half of",
    "start": "4257250",
    "end": "4264045"
  },
  {
    "text": "X Theta minus y transpose X Theta minus y.",
    "start": "4264045",
    "end": "4272475"
  },
  {
    "text": "Okay. Um, and let me see. Yeah. Let me just, uh, uh,",
    "start": "4272475",
    "end": "4279690"
  },
  {
    "text": "outline the proof, but I won't do this in great detail. So X Theta minus y is going to be,",
    "start": "4279690",
    "end": "4286260"
  },
  {
    "text": "right, so this is X Theta, this is y. So, you know, X Theta minus y is going to be this vector of h of x1 minus",
    "start": "4286260",
    "end": "4296460"
  },
  {
    "text": "y1 down to h of xm minus ym, right.",
    "start": "4296460",
    "end": "4305775"
  },
  {
    "text": "So it's just all the errors your learning algorithm is making on the m examples. It's the difference between predictions and the actual labels.",
    "start": "4305775",
    "end": "4311790"
  },
  {
    "text": "And if you you remember, so Z transpose Z is equal to sum over i Z squared, right.",
    "start": "4311790",
    "end": "4319560"
  },
  {
    "text": "A vector transpose itself is a sum of squares of elements. And so this vector transpose itself is the sum of squares of the elements, right.",
    "start": "4319560",
    "end": "4329730"
  },
  {
    "text": "So so which is why, uh, so so the cost function J of Theta is computed by taking the sum of squares of all of these elements,",
    "start": "4329730",
    "end": "4336989"
  },
  {
    "text": "of all of these errors, and and the way you do that is to take this vector, your X Theta minus y transpose itself,",
    "start": "4336990",
    "end": "4344908"
  },
  {
    "text": "is the sum of squares of these, which is exactly the error. So that's why you end up with a,",
    "start": "4344909",
    "end": "4351105"
  },
  {
    "text": "this as the sum of squares of the, those error terms.",
    "start": "4351105",
    "end": "4356575"
  },
  {
    "text": "Okay. And, um, if some of the steps don't quite make sense,",
    "start": "4356575",
    "end": "4364725"
  },
  {
    "text": "really don't worry about it. All this is written out more slowly and carefully in the lecture notes. But I wanted you to have a sense of the, uh,",
    "start": "4364725",
    "end": "4371895"
  },
  {
    "text": "broad arc of the of the big picture of their derivation before you go through them yourself in greater detail in the lecture notes elsewhere.",
    "start": "4371895",
    "end": "4379809"
  },
  {
    "text": "So finally, what we want to do is take the derivative with respect to Theta of J of Theta,",
    "start": "4388190",
    "end": "4397170"
  },
  {
    "text": "and set that to 0. And so this is going to be equal to the derivative of",
    "start": "4397170",
    "end": "4403365"
  },
  {
    "text": "one-half X Theta minus y transpose X Theta minus y. Um, and so I'm gonna,",
    "start": "4403365",
    "end": "4412170"
  },
  {
    "text": "I'm gonna do the steps really quickly, right. So the steps require some of the little properties of",
    "start": "4412170",
    "end": "4417540"
  },
  {
    "text": "traces and matrix derivatives I wrote down briefly just now. But so I'm gonna do these very quickly without getting into the details, but, uh,",
    "start": "4417540",
    "end": "4424905"
  },
  {
    "text": "so this is equal to one-half derivative of Theta of, um.",
    "start": "4424905",
    "end": "4430590"
  },
  {
    "text": "So take transposes of these things. So this becomes Theta transpose X transpose minus y transpose.",
    "start": "4430590",
    "end": "4438220"
  },
  {
    "text": "Right. Um, and then, uh, kind of like expanding out a quadratic function, right.",
    "start": "4438650",
    "end": "4446760"
  },
  {
    "text": "This is, you know, A minus B times C minus D. So you can just AC minus AD this and so on.",
    "start": "4446760",
    "end": "4452579"
  },
  {
    "text": "So I'll just write this out.",
    "start": "4452580",
    "end": "4455650"
  },
  {
    "text": "All right. And so, uh, what I just did here this is similar to how, you know,",
    "start": "4468830",
    "end": "4474915"
  },
  {
    "text": "ax minus b times ax minus b, is equal to a squared x squared minus axb minus bax plus b squared.",
    "start": "4474915",
    "end": "4486045"
  },
  {
    "text": "Is it's kind of, it's just expanding out a quadratic function. Um, and then the final step",
    "start": "4486045",
    "end": "4507135"
  },
  {
    "text": "is, yeah, go ahead. [BACKGROUND] Oh, is that right?",
    "start": "4507135",
    "end": "4515219"
  },
  {
    "text": "Oh yes, thank you. Thank you. Um, and then the final step is,",
    "start": "4515220",
    "end": "4521715"
  },
  {
    "text": "you know, for each of these four terms; first, second, third, and fourth terms, to take the derivative with respect to Theta.",
    "start": "4521715",
    "end": "4528870"
  },
  {
    "text": "And if you use some of the formulas I was alluding to over there, you find that the derivative, um,",
    "start": "4528870",
    "end": "4535500"
  },
  {
    "text": "which which I don't want to show the derivation of, but it turns out that the derivative is, um,",
    "start": "4535500",
    "end": "4540915"
  },
  {
    "text": "X transpose X Theta plus X transpose X Theta minus,",
    "start": "4540915",
    "end": "4546720"
  },
  {
    "text": "um, X transpose y minus X transpose y,",
    "start": "4546720",
    "end": "4553680"
  },
  {
    "text": "um, and we're going to set this derivative. Actually not, let me just do this.",
    "start": "4553680",
    "end": "4560175"
  },
  {
    "text": "And so this simplifies to X transpose X Theta minus X transpose y.",
    "start": "4560175",
    "end": "4567210"
  },
  {
    "text": "And so as as described earlier, I'm gonna set this derivative to 0.",
    "start": "4567210",
    "end": "4573045"
  },
  {
    "text": "And how to go from this step to that step is using the matrix derivatives, uh, explained in more detail in the lecture notes.",
    "start": "4573045",
    "end": "4579135"
  },
  {
    "text": "And so the final step is, you know, having set this to 0, this implies that X transpose X Theta equals X transpose y.",
    "start": "4579135",
    "end": "4587295"
  },
  {
    "text": "Uh, so this is called the normal equations.",
    "start": "4587295",
    "end": "4590679"
  },
  {
    "text": "And the optimum value for Theta is Theta equals",
    "start": "4594080",
    "end": "4600130"
  },
  {
    "text": "X transpose X inverse, X transpose y.",
    "start": "4600130",
    "end": "4608045"
  },
  {
    "text": "Okay. Um, and if you implement this, um,",
    "start": "4608045",
    "end": "4614135"
  },
  {
    "text": "then, you know, you can in basically one step, get the value of Theta that corresponds to the global minimum.",
    "start": "4614135",
    "end": "4621915"
  },
  {
    "text": "Okay. Um, and and and again,",
    "start": "4621915",
    "end": "4627920"
  },
  {
    "text": "common question I get is one is, well, what if X is non-invertible? Uh, what that usually means is you have have redundant features,",
    "start": "4627920",
    "end": "4633949"
  },
  {
    "text": "uh, that your features are linearly dependent. Uh, but if you use something called the pseudo inverse,",
    "start": "4633950",
    "end": "4639350"
  },
  {
    "text": "you kind of get the right answer if that's the case. Although I think the, uh, even more right answer is if you have linearly dependent features,",
    "start": "4639350",
    "end": "4645080"
  },
  {
    "text": "probably means you have the same feature repeated twice, and I will usually go and figure out what features are actually repeated,",
    "start": "4645080",
    "end": "4650555"
  },
  {
    "text": "leading to this problem. Okay. All right.",
    "start": "4650555",
    "end": "4655625"
  },
  {
    "text": "Uh, any last questions before- so that so that's the normal equations. Hope you read through the detailed derivations in the lecture notes.",
    "start": "4655625",
    "end": "4661250"
  },
  {
    "text": "Any last questions before we break? Okay. [BACKGROUND]",
    "start": "4661250",
    "end": "4676590"
  },
  {
    "text": "Oh, yeah. How do you choose a learning rate? It's, it's, it's quite empirical, I think. So most people would try different values,",
    "start": "4676590",
    "end": "4682469"
  },
  {
    "text": "and then just pick one. All right. I think let's let's break. If, if people have more questions,",
    "start": "4682470",
    "end": "4688290"
  },
  {
    "text": "when the TAs come up, we're going to keep taking questions. Well, let's break for the day. Thanks everyone.",
    "start": "4688290",
    "end": "4693250"
  }
]