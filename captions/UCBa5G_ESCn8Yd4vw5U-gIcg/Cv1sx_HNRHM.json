[
  {
    "text": "OK, so here is our first lab.",
    "start": "0",
    "end": "4010"
  },
  {
    "text": "This lab introduces some\nbasic concepts in Python.",
    "start": "4010",
    "end": "9440"
  },
  {
    "text": "Python is a very popular\nprogramming language.",
    "start": "9440",
    "end": "11870"
  },
  {
    "text": "And if any of you have taken\nany programming classes",
    "start": "11870",
    "end": "15410"
  },
  {
    "text": "prior to this class in\nstatistical learning,",
    "start": "15410",
    "end": "18560"
  },
  {
    "text": "you'll likely have seen\nsome Python already.",
    "start": "18560",
    "end": "21650"
  },
  {
    "text": "So that's also a warning\nto say that this is not",
    "start": "21650",
    "end": "25070"
  },
  {
    "text": "a complete exhaustive\nintroduction",
    "start": "25070",
    "end": "26630"
  },
  {
    "text": "to the language of Python.",
    "start": "26630",
    "end": "27980"
  },
  {
    "text": "There are lots of tutorials\nout there for Python.",
    "start": "27980",
    "end": "31880"
  },
  {
    "text": "We've included a link below\nfor the basic Python tutorial.",
    "start": "31880",
    "end": "38960"
  },
  {
    "text": "And we're also going to be using\nseveral common packages, pandas",
    "start": "38960",
    "end": "43730"
  },
  {
    "text": "and NumPy.",
    "start": "43730",
    "end": "44630"
  },
  {
    "text": "And you can find tutorials\nfor those online as well.",
    "start": "44630",
    "end": "48470"
  },
  {
    "text": "And also, the text and\neverything you see on this page",
    "start": "48470",
    "end": "51530"
  },
  {
    "text": "is exactly what's in\nthe lab, in the book.",
    "start": "51530",
    "end": "53969"
  },
  {
    "text": "Yes.",
    "start": "53970",
    "end": "54470"
  },
  {
    "text": "And as I said, this is\nthe one I downloaded just",
    "start": "54470",
    "end": "56810"
  },
  {
    "text": "off the stat learning,\nstatistical learning website.",
    "start": "56810",
    "end": "60540"
  },
  {
    "text": "OK.",
    "start": "60540",
    "end": "61140"
  },
  {
    "text": "So we're not going to\nread all the text here,",
    "start": "61140",
    "end": "64277"
  },
  {
    "text": "sitting in the lab.",
    "start": "64277",
    "end": "65069"
  },
  {
    "text": "We're going to go through\njust some of the code.",
    "start": "65069",
    "end": "67500"
  },
  {
    "text": "You can follow\nalong in more detail",
    "start": "67500",
    "end": "69720"
  },
  {
    "text": "by running the labs as this is\nthe code that you have access",
    "start": "69720",
    "end": "73410"
  },
  {
    "text": "to on the website, and is\nthe code that's in the book.",
    "start": "73410",
    "end": "77940"
  },
  {
    "text": "OK.",
    "start": "77940",
    "end": "78540"
  },
  {
    "text": "So let's start off with some\nbasic objects in Python.",
    "start": "78540",
    "end": "87000"
  },
  {
    "text": "So there's-- as most\nlanguages have different types",
    "start": "87000",
    "end": "91440"
  },
  {
    "text": "of objects, and for us, we'll be\ninterested in numeric objects.",
    "start": "91440",
    "end": "96270"
  },
  {
    "text": "But Python itself\nis a language that",
    "start": "96270",
    "end": "98969"
  },
  {
    "text": "evolved, not to do\ndata analysis, but just",
    "start": "98970",
    "end": "101160"
  },
  {
    "text": "as a general purpose\nlanguage in any case.",
    "start": "101160",
    "end": "103180"
  },
  {
    "text": "So there are lots\nof different types--",
    "start": "103180",
    "end": "104763"
  },
  {
    "text": "standard types of\nobjects in Python.",
    "start": "104763",
    "end": "106440"
  },
  {
    "text": "Let's just start with a string.",
    "start": "106440",
    "end": "109140"
  },
  {
    "text": "And this is an example\nof calling a function.",
    "start": "109140",
    "end": "112479"
  },
  {
    "text": "Almost everything we do\nin these computations",
    "start": "112480",
    "end": "115800"
  },
  {
    "text": "will be calling some\nkind of function.",
    "start": "115800",
    "end": "117550"
  },
  {
    "text": "Here's an example, we'll\ncall the print function.",
    "start": "117550",
    "end": "121170"
  },
  {
    "text": "OK.",
    "start": "121170",
    "end": "121799"
  },
  {
    "text": "And this is an example--",
    "start": "121800",
    "end": "123430"
  },
  {
    "text": "you can see how the\nJupyter Notebooks run.",
    "start": "123430",
    "end": "126000"
  },
  {
    "text": "There's a little text box\nof code that is executed,",
    "start": "126000",
    "end": "130949"
  },
  {
    "text": "and the output of the\ncode shows up beneath.",
    "start": "130949",
    "end": "134310"
  },
  {
    "text": "And we just press Return.",
    "start": "134310",
    "end": "135599"
  },
  {
    "text": "I pressed Shift Return\nfor each cell, yes.",
    "start": "135600",
    "end": "139050"
  },
  {
    "text": "And that will move--",
    "start": "139050",
    "end": "140620"
  },
  {
    "text": "run the code and move it down.",
    "start": "140620",
    "end": "144220"
  },
  {
    "text": "As in lots of\nenvironments, you might",
    "start": "144220",
    "end": "146530"
  },
  {
    "text": "have some questions about\nthe functions you're using.",
    "start": "146530",
    "end": "151450"
  },
  {
    "text": "The help system in Jupyter,\nyou can access help",
    "start": "151450",
    "end": "155650"
  },
  {
    "text": "by putting a question mark\nafter the name of the function.",
    "start": "155650",
    "end": "159370"
  },
  {
    "text": "And it will give you what's\ncalled its docstring.",
    "start": "159370",
    "end": "162250"
  },
  {
    "text": "So you have a function\nwhere you're not",
    "start": "162250",
    "end": "164560"
  },
  {
    "text": "sure exactly what it does, you\ncan use this question mark.",
    "start": "164560",
    "end": "167620"
  },
  {
    "text": "And many functions have\nvery helpful docstrings.",
    "start": "167620",
    "end": "171010"
  },
  {
    "text": "OK.",
    "start": "171010",
    "end": "171549"
  },
  {
    "text": "Besides strings, there\nare, of course, numbers,",
    "start": "171550",
    "end": "175300"
  },
  {
    "text": "numbers 3 plus 3\nand 5 add up to 8.",
    "start": "175300",
    "end": "178750"
  },
  {
    "text": "And surprisingly\nenough, you can also",
    "start": "178750",
    "end": "182650"
  },
  {
    "text": "add other types of objects.",
    "start": "182650",
    "end": "184060"
  },
  {
    "text": "Here, we can add strings.",
    "start": "184060",
    "end": "185170"
  },
  {
    "text": "And when we add strings,\nit is concatenation.",
    "start": "185170",
    "end": "187720"
  },
  {
    "text": "Most of our work will\nnot be adding strings.",
    "start": "187720",
    "end": "189730"
  },
  {
    "text": "This is just the typical\nhello, world introduction",
    "start": "189730",
    "end": "193330"
  },
  {
    "text": "to a language.",
    "start": "193330",
    "end": "195260"
  },
  {
    "text": "So we've seen numbers.",
    "start": "195260",
    "end": "196989"
  },
  {
    "text": "We've seen strings.",
    "start": "196990",
    "end": "198190"
  },
  {
    "text": "There are other\nobjects in Python",
    "start": "198190",
    "end": "200020"
  },
  {
    "text": "that start to look like things\nwe might use in computing that",
    "start": "200020",
    "end": "203620"
  },
  {
    "text": "start to look like a vector.",
    "start": "203620",
    "end": "205040"
  },
  {
    "text": "So down here, I've got something\nthat's called a list in Python.",
    "start": "205040",
    "end": "208120"
  },
  {
    "text": "It's denoted by these\nsquare brackets.",
    "start": "208120",
    "end": "210349"
  },
  {
    "text": "And it's the list of\nthe numbers 3, 4, and 5.",
    "start": "210350",
    "end": "215080"
  },
  {
    "text": "OK.",
    "start": "215080",
    "end": "217210"
  },
  {
    "text": "And in doing\ncalculations, you'll",
    "start": "217210",
    "end": "219010"
  },
  {
    "text": "often want to add two of them.",
    "start": "219010",
    "end": "220610"
  },
  {
    "text": "So let's make another\nlist 4, 9, and 7.",
    "start": "220610",
    "end": "223000"
  },
  {
    "text": "And let's try adding them.",
    "start": "223000",
    "end": "224590"
  },
  {
    "text": "And there are some\ncounterintuitive results here",
    "start": "224590",
    "end": "228790"
  },
  {
    "text": "because this illustrates\nin some sense",
    "start": "228790",
    "end": "231640"
  },
  {
    "text": "that Python is not\nnecessarily-- it doesn't do,",
    "start": "231640",
    "end": "234688"
  },
  {
    "text": "perhaps, the most\nnatural thing you'd",
    "start": "234688",
    "end": "236230"
  },
  {
    "text": "think to do with two\nlists of numbers.",
    "start": "236230",
    "end": "237812"
  },
  {
    "text": "It concatenates the list instead\nof adding them element wise.",
    "start": "237813",
    "end": "240730"
  },
  {
    "text": "And that's-- well, that's\nbecause there's lots",
    "start": "240730",
    "end": "243040"
  },
  {
    "text": "of different types\nof objects in Python.",
    "start": "243040",
    "end": "245140"
  },
  {
    "text": "For data analysis, what\nwe really want to use",
    "start": "245140",
    "end": "247840"
  },
  {
    "text": "are arrays, that\nis representations",
    "start": "247840",
    "end": "251709"
  },
  {
    "text": "of numbers in the computer.",
    "start": "251710",
    "end": "253750"
  },
  {
    "text": "And when we have two\nvectors, we'd expect--",
    "start": "253750",
    "end": "255970"
  },
  {
    "text": "when we add them,\nthe result should",
    "start": "255970",
    "end": "257857"
  },
  {
    "text": "be the sum of the vectors.",
    "start": "257857",
    "end": "258940"
  },
  {
    "text": "And for that, we're\ngoing to use this package",
    "start": "258940",
    "end": "261730"
  },
  {
    "text": "NumPy, which is the standard\nnumerical library in Python.",
    "start": "261730",
    "end": "269140"
  },
  {
    "text": "OK.",
    "start": "269140",
    "end": "270010"
  },
  {
    "text": "We'll see some aspects\nof NumPy in this lab.",
    "start": "270010",
    "end": "273250"
  },
  {
    "text": "And here is a link to a\nmore exhaustive tutorial",
    "start": "273250",
    "end": "276920"
  },
  {
    "text": "or the quickstart with links\nto a more in depth tutorial",
    "start": "276920",
    "end": "279470"
  },
  {
    "text": "if you need.",
    "start": "279470",
    "end": "280700"
  },
  {
    "text": "So Jonathan, lists can have\nitems of arbitrary different",
    "start": "280700",
    "end": "284600"
  },
  {
    "text": "types, right?",
    "start": "284600",
    "end": "285650"
  },
  {
    "text": "So that's why you\ncan't just add, right?",
    "start": "285650",
    "end": "287550"
  },
  {
    "text": "Because--",
    "start": "287550",
    "end": "288050"
  },
  {
    "text": "That's a great question.",
    "start": "288050",
    "end": "289085"
  },
  {
    "text": "You couldn't add 3 to Hello.",
    "start": "289085",
    "end": "291020"
  },
  {
    "text": "Yes.",
    "start": "291020",
    "end": "291770"
  },
  {
    "text": "So Trevor points out here that\nhere, my list had numbers.",
    "start": "291770",
    "end": "294949"
  },
  {
    "text": "But actually, we could have\na string in there as well.",
    "start": "294950",
    "end": "301230"
  },
  {
    "text": "And we could have\nother things as well.",
    "start": "301230",
    "end": "303750"
  },
  {
    "text": "We could have-- even\nthe print is a function.",
    "start": "303750",
    "end": "306110"
  },
  {
    "text": "We could add that to the list.",
    "start": "306110",
    "end": "307710"
  },
  {
    "text": "And when we add it,\nyou'll see it concatenates",
    "start": "307710",
    "end": "312139"
  },
  {
    "text": "x with this new list y.",
    "start": "312140",
    "end": "313970"
  },
  {
    "text": "So that's-- lists are just\nsequences of any arbitrary",
    "start": "313970",
    "end": "320150"
  },
  {
    "text": "Python objects.",
    "start": "320150",
    "end": "321139"
  },
  {
    "text": "There's another type of\nsequence we'll see in a moment,",
    "start": "321140",
    "end": "323432"
  },
  {
    "text": "called a tuple, that\nlooks a lot like a list,",
    "start": "323432",
    "end": "325997"
  },
  {
    "text": "but is slightly different.",
    "start": "325997",
    "end": "327080"
  },
  {
    "text": "OK.",
    "start": "327080",
    "end": "327580"
  },
  {
    "text": "Anyways, this\nillustrates that Python",
    "start": "327580",
    "end": "329599"
  },
  {
    "text": "has a lot of generic programming\nfunctionality that really has",
    "start": "329600",
    "end": "333080"
  },
  {
    "text": "nothing to do with numerics.",
    "start": "333080",
    "end": "334310"
  },
  {
    "text": "And that's why we use\nthese libraries, NumPy.",
    "start": "334310",
    "end": "336770"
  },
  {
    "text": "And for more structured\ndata, we use pandas,",
    "start": "336770",
    "end": "341509"
  },
  {
    "text": "that use so-called dataframes.",
    "start": "341510",
    "end": "344600"
  },
  {
    "text": "OK.",
    "start": "344600",
    "end": "345530"
  },
  {
    "text": "So we're going to\nuse this package",
    "start": "345530",
    "end": "348260"
  },
  {
    "text": "NumPy for Numerical Python.",
    "start": "348260",
    "end": "351050"
  },
  {
    "text": "It's our first example of\na library that we'll use.",
    "start": "351050",
    "end": "354349"
  },
  {
    "text": "And so library is just\nsome other code that's",
    "start": "354350",
    "end": "358070"
  },
  {
    "text": "been added to the\nlanguage, or is not,",
    "start": "358070",
    "end": "360350"
  },
  {
    "text": "let's say, loaded\ninto the program",
    "start": "360350",
    "end": "364220"
  },
  {
    "text": "when we start the programs.",
    "start": "364220",
    "end": "365480"
  },
  {
    "text": "So we have to access it.",
    "start": "365480",
    "end": "367700"
  },
  {
    "text": "And that uses this\nimport statement.",
    "start": "367700",
    "end": "370770"
  },
  {
    "text": "So in the further\nlabs, we'll see",
    "start": "370770",
    "end": "372470"
  },
  {
    "text": "that every lab will\nstart off with many",
    "start": "372470",
    "end": "374570"
  },
  {
    "text": "of these type of\nimport statements.",
    "start": "374570",
    "end": "376160"
  },
  {
    "text": "This actually is what\ntells the computer",
    "start": "376160",
    "end": "379220"
  },
  {
    "text": "where to find the code\nthat we will use later",
    "start": "379220",
    "end": "381680"
  },
  {
    "text": "when we want to run\nthese specific functions.",
    "start": "381680",
    "end": "385430"
  },
  {
    "text": "OK.",
    "start": "385430",
    "end": "386720"
  },
  {
    "text": "So once we have NumPy loaded,\nwe can start to make arrays.",
    "start": "386720",
    "end": "391640"
  },
  {
    "text": "And so if you look at the\nsyntax, we call the module,",
    "start": "391640",
    "end": "395690"
  },
  {
    "text": "or the package is called NumPy.",
    "start": "395690",
    "end": "397580"
  },
  {
    "text": "And we decided to name it NP.",
    "start": "397580",
    "end": "400220"
  },
  {
    "text": "That means when we want to\nfind a function in the NumPy",
    "start": "400220",
    "end": "403040"
  },
  {
    "text": "library, we use\nthis notation NP.",
    "start": "403040",
    "end": "406550"
  },
  {
    "text": "That's the library NumPy.",
    "start": "406550",
    "end": "408770"
  },
  {
    "text": "Dot, that refers to something\nwithin the NumPy library.",
    "start": "408770",
    "end": "412400"
  },
  {
    "text": "And here, we're using\nthe function array.",
    "start": "412400",
    "end": "414560"
  },
  {
    "text": "And this makes an array with\nthe numbers 3, 4, and 5,",
    "start": "414560",
    "end": "419000"
  },
  {
    "text": "as I had for x above,\nand 4, 9, 7 for y.",
    "start": "419000",
    "end": "422570"
  },
  {
    "text": "Now when we add\nthese two, which--",
    "start": "422570",
    "end": "427320"
  },
  {
    "text": "So no is an abbreviation\nin that case?",
    "start": "427320",
    "end": "429630"
  },
  {
    "text": "Yes.",
    "start": "429630",
    "end": "430800"
  },
  {
    "text": "And we could have\ncalled this anything.",
    "start": "430800",
    "end": "433500"
  },
  {
    "text": "We could have called it Foo.",
    "start": "433500",
    "end": "434800"
  },
  {
    "text": "Yeah.",
    "start": "434800",
    "end": "435300"
  },
  {
    "text": "If we'd called it Foo, we'd\nhave to put Foo down here.",
    "start": "435300",
    "end": "438069"
  },
  {
    "text": "That's our choice.",
    "start": "438070",
    "end": "438900"
  },
  {
    "text": "But np is a standard\nabbreviation",
    "start": "438900",
    "end": "440729"
  },
  {
    "text": "for NumPy in the literature.",
    "start": "440730",
    "end": "443110"
  },
  {
    "text": "So now when we add\nthese two arrays,",
    "start": "443110",
    "end": "446009"
  },
  {
    "text": "we get more of what we expect.",
    "start": "446010",
    "end": "448373"
  },
  {
    "text": "That's a relief.",
    "start": "448373",
    "end": "449039"
  },
  {
    "text": "Yes.",
    "start": "449040",
    "end": "450240"
  },
  {
    "text": "So this array is the basic\ntype of object for manipulating",
    "start": "450240",
    "end": "455819"
  },
  {
    "text": "numbers in Python.",
    "start": "455820",
    "end": "458040"
  },
  {
    "text": "This is a one dimensional array\nbecause it's made from a list,",
    "start": "458040",
    "end": "462450"
  },
  {
    "text": "just a one dimensional\norganization of numbers.",
    "start": "462450",
    "end": "467580"
  },
  {
    "text": "There are two\ndimensional arrays,",
    "start": "467580",
    "end": "469080"
  },
  {
    "text": "three dimensional arrays,\nfour dimensional arrays.",
    "start": "469080",
    "end": "471990"
  },
  {
    "text": "Matrices are simply\ntwo dimensional arrays",
    "start": "471990",
    "end": "475440"
  },
  {
    "text": "with numbers in them.",
    "start": "475440",
    "end": "477060"
  },
  {
    "text": "You can have arrays with\nthings that aren't numbers.",
    "start": "477060",
    "end": "480120"
  },
  {
    "text": "But we don't have\nto start with that.",
    "start": "480120",
    "end": "481919"
  },
  {
    "text": "[CHUCKLES]",
    "start": "481920",
    "end": "482710"
  },
  {
    "text": "OK.",
    "start": "482710",
    "end": "483720"
  },
  {
    "text": "So here's an example of\na two dimensional array.",
    "start": "483720",
    "end": "487160"
  },
  {
    "text": "So we give it a list of lists.",
    "start": "487160",
    "end": "489757"
  },
  {
    "text": "So if you note, there's\ntwo square brackets.",
    "start": "489757",
    "end": "491590"
  },
  {
    "text": "The first entry in the\nlist is the list 1, 2.",
    "start": "491590",
    "end": "494080"
  },
  {
    "text": "The second is the list 3, 4.",
    "start": "494080",
    "end": "497050"
  },
  {
    "text": "And this is going to make\na 2 by 2 array or a 2",
    "start": "497050",
    "end": "499419"
  },
  {
    "text": "by 2 matrix that we can\nuse for multiplying later.",
    "start": "499420",
    "end": "505700"
  },
  {
    "text": "OK.",
    "start": "505700",
    "end": "506200"
  },
  {
    "text": "Now given an object\nin Python, there are--",
    "start": "506200",
    "end": "511810"
  },
  {
    "text": "we'll want to know\nsome things about it.",
    "start": "511810",
    "end": "513620"
  },
  {
    "text": "So some things\nwe'll want to know",
    "start": "513620",
    "end": "515679"
  },
  {
    "text": "is maybe to find some of it,\nthe entries in the array.",
    "start": "515679",
    "end": "519530"
  },
  {
    "text": "And we can do that with\nthis square bracket.",
    "start": "519530",
    "end": "521469"
  },
  {
    "text": "We'll see more on\nindexing later.",
    "start": "521470",
    "end": "523389"
  },
  {
    "text": "But objects also have this\nthing called attributes.",
    "start": "523390",
    "end": "526100"
  },
  {
    "text": "So it uses the same\nsort of dot notation",
    "start": "526100",
    "end": "530470"
  },
  {
    "text": "to reference something\nassociated with x.",
    "start": "530470",
    "end": "533560"
  },
  {
    "text": "So if I wanted to know--",
    "start": "533560",
    "end": "535510"
  },
  {
    "text": "the ndim tells us what\nthe dimension of the array",
    "start": "535510",
    "end": "539235"
  },
  {
    "text": "is, it's a two\ndimensional array.",
    "start": "539235",
    "end": "540610"
  },
  {
    "text": "That shouldn't be surprising.",
    "start": "540610",
    "end": "543339"
  },
  {
    "text": "We can also ask\nwhat kind of data",
    "start": "543340",
    "end": "545800"
  },
  {
    "text": "is represented in the array.",
    "start": "545800",
    "end": "547149"
  },
  {
    "text": "And these are integers.",
    "start": "547150",
    "end": "548200"
  },
  {
    "text": "If you saw above, we\nhad put an integer.",
    "start": "548200",
    "end": "550580"
  },
  {
    "text": "So there are various\nattributes that--",
    "start": "550580",
    "end": "554620"
  },
  {
    "text": "any Python object\nhas attributes.",
    "start": "554620",
    "end": "558580"
  },
  {
    "text": "And you can inspect them by\nusing this sort of reference",
    "start": "558580",
    "end": "561880"
  },
  {
    "text": "here.",
    "start": "561880",
    "end": "562600"
  },
  {
    "text": "OK.",
    "start": "562600",
    "end": "564100"
  },
  {
    "text": "So let's move on a little bit.",
    "start": "564100",
    "end": "567970"
  },
  {
    "text": "So instead of\nhaving integers, we",
    "start": "567970",
    "end": "570699"
  },
  {
    "text": "might want to use\nfloating points.",
    "start": "570700",
    "end": "572470"
  },
  {
    "text": "That's the representation\nof decimals in the computer.",
    "start": "572470",
    "end": "576100"
  },
  {
    "text": "We can do that by\nadding an argument float",
    "start": "576100",
    "end": "579910"
  },
  {
    "text": "when we call an array.",
    "start": "579910",
    "end": "581690"
  },
  {
    "text": "And if you note, I\nchecked its dtype.",
    "start": "581690",
    "end": "584590"
  },
  {
    "text": "That is what kind of\ndata is collected.",
    "start": "584590",
    "end": "587140"
  },
  {
    "text": "Other attributes are its shape.",
    "start": "587140",
    "end": "590320"
  },
  {
    "text": "We won't dwell on\nall the attributes.",
    "start": "590320",
    "end": "592180"
  },
  {
    "text": "There are many of them.",
    "start": "592180",
    "end": "594580"
  },
  {
    "text": "OK.",
    "start": "594580",
    "end": "595090"
  },
  {
    "text": "So besides attributes, Python\nobjects also have methods.",
    "start": "595090",
    "end": "602300"
  },
  {
    "text": "So here's my array.",
    "start": "602300",
    "end": "605709"
  },
  {
    "text": "It's just the list\n1, 2, 3, and 4.",
    "start": "605710",
    "end": "608260"
  },
  {
    "text": "And I'm going to call this\nmethod the sum method on x.",
    "start": "608260",
    "end": "611380"
  },
  {
    "text": "So what is a method?",
    "start": "611380",
    "end": "612950"
  },
  {
    "text": "It's like an attribute, and\nthat it's associated to x.",
    "start": "612950",
    "end": "617350"
  },
  {
    "text": "But it's a function.",
    "start": "617350",
    "end": "619380"
  },
  {
    "text": "We see it's a\nfunction because it",
    "start": "619380",
    "end": "621040"
  },
  {
    "text": "has these round curly braces.",
    "start": "621040",
    "end": "622790"
  },
  {
    "text": "So not surprisingly, when\nwe call the sum method on x,",
    "start": "622790",
    "end": "626649"
  },
  {
    "text": "it returns the sum\nof the values of x.",
    "start": "626650",
    "end": "629350"
  },
  {
    "text": "So this should be 10.",
    "start": "629350",
    "end": "631839"
  },
  {
    "text": "OK.",
    "start": "631840",
    "end": "632590"
  },
  {
    "text": "And well, you can also\ncompute the sum of an array",
    "start": "632590",
    "end": "635650"
  },
  {
    "text": "with a function.",
    "start": "635650",
    "end": "636860"
  },
  {
    "text": "There's a function called\nsum in the NumPy library.",
    "start": "636860",
    "end": "640300"
  },
  {
    "text": "np.sum of x computes the sum.",
    "start": "640300",
    "end": "645540"
  },
  {
    "text": "So whether we use a\nmethod or a function",
    "start": "645540",
    "end": "648029"
  },
  {
    "text": "will often depend\non the context.",
    "start": "648030",
    "end": "649500"
  },
  {
    "text": "But this is just to know\nthat these are basic things",
    "start": "649500",
    "end": "653010"
  },
  {
    "text": "that Python objects have,\nattributes and methods.",
    "start": "653010",
    "end": "655920"
  },
  {
    "text": "And we can call functions\non them as well.",
    "start": "655920",
    "end": "659550"
  },
  {
    "text": "OK.",
    "start": "659550",
    "end": "660750"
  },
  {
    "text": "Moving on.",
    "start": "660750",
    "end": "661530"
  },
  {
    "start": "661530",
    "end": "664210"
  },
  {
    "text": "So this next example\ntalks about reshaping",
    "start": "664210",
    "end": "669060"
  },
  {
    "text": "an array, which we will not--",
    "start": "669060",
    "end": "672360"
  },
  {
    "text": "I don't think it's worth\nspending a lot of time on.",
    "start": "672360",
    "end": "674940"
  },
  {
    "text": "One thing I want to\nshow in this example",
    "start": "674940",
    "end": "677220"
  },
  {
    "text": "is something about\nhow Python uses",
    "start": "677220",
    "end": "679680"
  },
  {
    "text": "reference instead of value.",
    "start": "679680",
    "end": "681399"
  },
  {
    "text": "So I'm just going to\nmove on a little bit",
    "start": "681400",
    "end": "684510"
  },
  {
    "text": "to get to this point.",
    "start": "684510",
    "end": "685870"
  },
  {
    "text": "So without having dwelt\non all the examples above,",
    "start": "685870",
    "end": "689670"
  },
  {
    "text": "we had an original array x.",
    "start": "689670",
    "end": "692550"
  },
  {
    "text": "And then we made this\nnew array x reshape.",
    "start": "692550",
    "end": "696330"
  },
  {
    "text": "X was an array of length\n6, and we made it into a 2",
    "start": "696330",
    "end": "701610"
  },
  {
    "text": "by 3 matrix.",
    "start": "701610",
    "end": "702660"
  },
  {
    "text": "So we can just check that\ndown here by plotting that.",
    "start": "702660",
    "end": "710259"
  },
  {
    "text": "So it's a 2 by 3 matrix.",
    "start": "710260",
    "end": "713710"
  },
  {
    "text": "And what I want to show\nin this quick example",
    "start": "713710",
    "end": "715720"
  },
  {
    "text": "is something kind of\nimportant about Python",
    "start": "715720",
    "end": "717939"
  },
  {
    "text": "is that it uses reference\ninstead of value.",
    "start": "717940",
    "end": "721970"
  },
  {
    "text": "So this x reshape, it was\nactually derived from x,",
    "start": "721970",
    "end": "727670"
  },
  {
    "text": "and actually has\nthe same data as x.",
    "start": "727670",
    "end": "730880"
  },
  {
    "text": "So let me just--",
    "start": "730880",
    "end": "732650"
  },
  {
    "text": "excuse me while I scroll\nup one little bit.",
    "start": "732650",
    "end": "735690"
  },
  {
    "text": "So here, this x\nreshape was found",
    "start": "735690",
    "end": "740030"
  },
  {
    "text": "by calling the\nreshape method of x.",
    "start": "740030",
    "end": "742640"
  },
  {
    "text": "So it's another array.",
    "start": "742640",
    "end": "744140"
  },
  {
    "text": "It's not x.",
    "start": "744140",
    "end": "744950"
  },
  {
    "text": "It's something different.",
    "start": "744950",
    "end": "746040"
  },
  {
    "text": "It has a different shape.",
    "start": "746040",
    "end": "749320"
  },
  {
    "text": "But when we--",
    "start": "749320",
    "end": "752140"
  },
  {
    "text": "So it started off as a\none dimensional array.",
    "start": "752140",
    "end": "754690"
  },
  {
    "text": "Yes, that's right.",
    "start": "754690",
    "end": "755440"
  },
  {
    "text": "And with reshape, you made\nit a two dimensional array.",
    "start": "755440",
    "end": "757870"
  },
  {
    "text": "That's right.",
    "start": "757870",
    "end": "758529"
  },
  {
    "text": "So that-- which is--",
    "start": "758530",
    "end": "759580"
  },
  {
    "text": "With the same\nnumbers, but arranged",
    "start": "759580",
    "end": "761500"
  },
  {
    "text": "in a two dimensional array.",
    "start": "761500",
    "end": "762668"
  },
  {
    "text": "That's right.",
    "start": "762668",
    "end": "763210"
  },
  {
    "start": "763210",
    "end": "768520"
  },
  {
    "text": "Oh, I'm sorry.",
    "start": "768520",
    "end": "769270"
  },
  {
    "text": "I see I typed--",
    "start": "769270",
    "end": "771130"
  },
  {
    "text": "put a dot instead of a comma.",
    "start": "771130",
    "end": "773930"
  },
  {
    "text": "See, even the experts\nmake mistakes.",
    "start": "773930",
    "end": "775630"
  },
  {
    "text": "[CHUCKLES] So this just to show\nthat x, as Trevor had said,",
    "start": "775630",
    "end": "779660"
  },
  {
    "text": "is a one dimensional\narray of size 6.",
    "start": "779660",
    "end": "782420"
  },
  {
    "text": "And x reshape is 2 by 3.",
    "start": "782420",
    "end": "785256"
  },
  {
    "text": "One of the pertinent things\nI want to show in this",
    "start": "785257",
    "end": "787340"
  },
  {
    "text": "is I'm going to change one\nof the entries of x reshape.",
    "start": "787340",
    "end": "790400"
  },
  {
    "text": "So I'm going to change--",
    "start": "790400",
    "end": "791690"
  },
  {
    "text": "here I've-- this notation\nhere, square brackets,",
    "start": "791690",
    "end": "795140"
  },
  {
    "text": "is how you access\nelements in the array.",
    "start": "795140",
    "end": "798570"
  },
  {
    "text": "And here, I've put 0, 0.",
    "start": "798570",
    "end": "801830"
  },
  {
    "text": "And that's actually the entry in\nthe first row and first column.",
    "start": "801830",
    "end": "806630"
  },
  {
    "text": "For those of you who have\nprogrammed in other languages,",
    "start": "806630",
    "end": "809330"
  },
  {
    "text": "you might wonder\nwhy I didn't put",
    "start": "809330",
    "end": "811430"
  },
  {
    "text": "1, 1 for the first row\nin the first entry.",
    "start": "811430",
    "end": "814370"
  },
  {
    "text": "And that's because well,\nPython is a zero based indexing",
    "start": "814370",
    "end": "818210"
  },
  {
    "text": "compared to other languages.",
    "start": "818210",
    "end": "819590"
  },
  {
    "text": "And I would say these days,\nI think, zero based indexing",
    "start": "819590",
    "end": "822590"
  },
  {
    "text": "is more common.",
    "start": "822590",
    "end": "825170"
  },
  {
    "text": "C based languages use it.",
    "start": "825170",
    "end": "827459"
  },
  {
    "text": "But in any case, 0\nis always the first.",
    "start": "827460",
    "end": "829850"
  },
  {
    "text": "It can be a bit\nconfusing for those who",
    "start": "829850",
    "end": "831889"
  },
  {
    "text": "are used to 1 being the first.",
    "start": "831890",
    "end": "833400"
  },
  {
    "text": "But like it was for me.",
    "start": "833400",
    "end": "834510"
  },
  {
    "text": "Yes.",
    "start": "834510",
    "end": "835290"
  },
  {
    "text": "Yeah.",
    "start": "835290",
    "end": "835959"
  },
  {
    "text": "OK.",
    "start": "835960",
    "end": "836460"
  },
  {
    "text": "So I'm setting the\nfirst entry-- the entry,",
    "start": "836460",
    "end": "838860"
  },
  {
    "text": "the first row and first\ncolumn of x reshaped to be 5.",
    "start": "838860",
    "end": "843720"
  },
  {
    "text": "So we should expect when we\nlook at x reshape again, that's",
    "start": "843720",
    "end": "847199"
  },
  {
    "text": "what we'll do in the next line.",
    "start": "847200",
    "end": "848970"
  },
  {
    "text": "It's changed to 5.",
    "start": "848970",
    "end": "850709"
  },
  {
    "text": "But x will also have changed.",
    "start": "850710",
    "end": "852645"
  },
  {
    "start": "852645",
    "end": "856580"
  },
  {
    "text": "So after I've changed the\nfirst entry of x reshape,",
    "start": "856580",
    "end": "860900"
  },
  {
    "text": "it has a 5 in the first\nrow and first column.",
    "start": "860900",
    "end": "863840"
  },
  {
    "text": "But x also has a 5\nin its first entry.",
    "start": "863840",
    "end": "867050"
  },
  {
    "text": "And that's because\nboth x reshape and x,",
    "start": "867050",
    "end": "869839"
  },
  {
    "text": "they refer to the same place\nin the computer's memory.",
    "start": "869840",
    "end": "873210"
  },
  {
    "text": "When we change\nthe number sitting",
    "start": "873210",
    "end": "874970"
  },
  {
    "text": "in that part of the\nmemory for x reshape,",
    "start": "874970",
    "end": "877250"
  },
  {
    "text": "we've also changed it for x.",
    "start": "877250",
    "end": "878780"
  },
  {
    "text": "And this is just a\nuseful thing when",
    "start": "878780",
    "end": "882380"
  },
  {
    "text": "you start to see a language,\nto know whether it uses",
    "start": "882380",
    "end": "884660"
  },
  {
    "text": "this reference system or copy.",
    "start": "884660",
    "end": "886790"
  },
  {
    "text": "So using this reference\nsystem is a way",
    "start": "886790",
    "end": "888829"
  },
  {
    "text": "to be more efficient sometimes.",
    "start": "888830",
    "end": "890960"
  },
  {
    "text": "So that's just a heads\nup that I wanted to pass",
    "start": "890960",
    "end": "896000"
  },
  {
    "text": "on when talking about arrays.",
    "start": "896000",
    "end": "897720"
  },
  {
    "text": "So whenever possible,\nNumPy will make a--",
    "start": "897720",
    "end": "901220"
  },
  {
    "text": "will not copy the array.",
    "start": "901220",
    "end": "902629"
  },
  {
    "text": "And it will make what is\ncalled a new view of the array.",
    "start": "902630",
    "end": "905100"
  },
  {
    "text": "So it viewed the same\nnumbers as a 2 by 3 matrix",
    "start": "905100",
    "end": "908959"
  },
  {
    "text": "with x reshape as x viewed\nthem as a vector of length 6.",
    "start": "908960",
    "end": "912560"
  },
  {
    "text": "Another important\nthing that we'll",
    "start": "912560",
    "end": "914600"
  },
  {
    "text": "use over and over in the book is\nwe'll generate random numbers.",
    "start": "914600",
    "end": "919290"
  },
  {
    "text": "So let's look a little bit--\nand we'll talk about the best",
    "start": "919290",
    "end": "922440"
  },
  {
    "text": "practice way to do that, so that\nour results are reproducible.",
    "start": "922440",
    "end": "925960"
  },
  {
    "text": "So the NumPy library has ways\nto generate random numbers.",
    "start": "925960",
    "end": "929380"
  },
  {
    "text": "This will generate some\nrandom normal variables.",
    "start": "929380",
    "end": "933780"
  },
  {
    "text": "And one of the things\nthat's important in writing",
    "start": "933780",
    "end": "939120"
  },
  {
    "text": "something--",
    "start": "939120",
    "end": "940170"
  },
  {
    "text": "going through a lab like this\nis to have reproducible results.",
    "start": "940170",
    "end": "943240"
  },
  {
    "text": "So of course, the numbers\nin a random number generator",
    "start": "943240",
    "end": "947070"
  },
  {
    "text": "will change from time to time.",
    "start": "947070",
    "end": "948450"
  },
  {
    "text": "If I rerun this block,\nthe numbers have changed,",
    "start": "948450",
    "end": "950940"
  },
  {
    "text": "and that's because\nthey're random.",
    "start": "950940",
    "end": "952410"
  },
  {
    "text": "So we want to be able to set\na seed for the random number",
    "start": "952410",
    "end": "954930"
  },
  {
    "text": "generator.",
    "start": "954930",
    "end": "955779"
  },
  {
    "text": "So the best practice\nway to do that currently",
    "start": "955780",
    "end": "958680"
  },
  {
    "text": "is to set a seed as follows.",
    "start": "958680",
    "end": "961600"
  },
  {
    "text": "We make a specific\nrandom number generator",
    "start": "961600",
    "end": "964170"
  },
  {
    "text": "using this default rng.",
    "start": "964170",
    "end": "967440"
  },
  {
    "text": "And what it allows us to do\nis have reproducible results.",
    "start": "967440",
    "end": "972220"
  },
  {
    "text": "And now instead of using the\nfunction np.random, normal,",
    "start": "972220",
    "end": "976110"
  },
  {
    "text": "we use the function rng.normal.",
    "start": "976110",
    "end": "978870"
  },
  {
    "text": "And there, I said function.",
    "start": "978870",
    "end": "980102"
  },
  {
    "text": "It's actually a method here.",
    "start": "980103",
    "end": "981270"
  },
  {
    "text": "But these distinctions\nare kind of fluid.",
    "start": "981270",
    "end": "984010"
  },
  {
    "text": "So now we've created two\nrandom number generators",
    "start": "984010",
    "end": "986550"
  },
  {
    "text": "with the same seed.",
    "start": "986550",
    "end": "988110"
  },
  {
    "text": "And they're going to give\nus exactly the same data.",
    "start": "988110",
    "end": "990390"
  },
  {
    "text": "So that will be how we will\nhave reproducible results",
    "start": "990390",
    "end": "994050"
  },
  {
    "text": "throughout the lab.",
    "start": "994050",
    "end": "997100"
  },
  {
    "start": "997100",
    "end": "1002000"
  }
]