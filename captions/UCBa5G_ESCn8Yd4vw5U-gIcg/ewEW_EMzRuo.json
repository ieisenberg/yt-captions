[
  {
    "text": "Welcome everyone, uh, back to the class.",
    "start": "4010",
    "end": "7575"
  },
  {
    "text": "Uh, super excited to,",
    "start": "7575",
    "end": "9540"
  },
  {
    "text": "uh, talk to you all today.",
    "start": "9540",
    "end": "10770"
  },
  {
    "text": "Um, we are going to discuss,",
    "start": "10770",
    "end": "13215"
  },
  {
    "text": "um, several very interesting topics.",
    "start": "13215",
    "end": "16105"
  },
  {
    "text": "Uh, first, we are going to finish,",
    "start": "16105",
    "end": "18215"
  },
  {
    "text": "uh, some of the parts, uh,",
    "start": "18215",
    "end": "19850"
  },
  {
    "text": "that are left unfinished from the last lecture,",
    "start": "19850",
    "end": "23000"
  },
  {
    "text": "and then we are going to dig into the theory of,",
    "start": "23000",
    "end": "26640"
  },
  {
    "text": "uh, graph neural networks.",
    "start": "26640",
    "end": "28935"
  },
  {
    "text": "So let's first talk about,",
    "start": "28935",
    "end": "30960"
  },
  {
    "text": "uh, where we ended last time, right?",
    "start": "30960",
    "end": "33480"
  },
  {
    "text": "So last time we talked about how do you design graph neural networks?",
    "start": "33480",
    "end": "37515"
  },
  {
    "text": "What kind of, um, uh,",
    "start": "37515",
    "end": "39690"
  },
  {
    "text": "design choices do you make and, eh,",
    "start": "39690",
    "end": "42495"
  },
  {
    "text": "how do you set up the entire,",
    "start": "42495",
    "end": "44465"
  },
  {
    "text": "let's call it training inference pipeline.",
    "start": "44465",
    "end": "46805"
  },
  {
    "text": "And we talked about how do you setup the input graph?",
    "start": "46805",
    "end": "49755"
  },
  {
    "text": "How do you define the graph neural network architecture?",
    "start": "49755",
    "end": "52970"
  },
  {
    "text": "How do you then use it to create node embeddings?",
    "start": "52970",
    "end": "55705"
  },
  {
    "text": "And then we also talked about how do you get from",
    "start": "55705",
    "end": "58220"
  },
  {
    "text": "node embeddings to the prediction- prediction head.",
    "start": "58220",
    "end": "61070"
  },
  {
    "text": "And we talked about the different prediction heads, uh,",
    "start": "61070",
    "end": "64159"
  },
  {
    "text": "based on node classification, uh,",
    "start": "64160",
    "end": "66230"
  },
  {
    "text": "link, uh, prediction as well as graph classification.",
    "start": "66230",
    "end": "70010"
  },
  {
    "text": "We talked about how do you then make predictions?",
    "start": "70010",
    "end": "72920"
  },
  {
    "text": "How do you compare those predictions with ground truth labels, uh,",
    "start": "72920",
    "end": "77020"
  },
  {
    "text": "to optimize the loss function and be able to do",
    "start": "77020",
    "end": "79579"
  },
  {
    "text": "back-propagation all the way down to the graph neural network structure?",
    "start": "79580",
    "end": "83750"
  },
  {
    "text": "And then we also talked about various kinds of, uh,",
    "start": "83750",
    "end": "86180"
  },
  {
    "text": "evaluation metrics you can use, uh,",
    "start": "86180",
    "end": "88265"
  },
  {
    "text": "to assess, estimate, uh,",
    "start": "88265",
    "end": "90045"
  },
  {
    "text": "the performance of your model.",
    "start": "90045",
    "end": "91670"
  },
  {
    "text": "One thing that still remains, uh,",
    "start": "91670",
    "end": "93479"
  },
  {
    "text": "unanswered is, uh, how do we set up the tasks?",
    "start": "93480",
    "end": "96510"
  },
  {
    "text": "How do we properly split into the training,",
    "start": "96510",
    "end": "99765"
  },
  {
    "text": "validation, uh, and test set?",
    "start": "99765",
    "end": "101940"
  },
  {
    "text": "And what I wanna talk, uh,",
    "start": "101940",
    "end": "103245"
  },
  {
    "text": "in this part of the lecture,",
    "start": "103245",
    "end": "104670"
  },
  {
    "text": "is address this question,",
    "start": "104670",
    "end": "106020"
  },
  {
    "text": "how do we split our datasets- our graph dataset into train, validation, and test sets?",
    "start": "106020",
    "end": "111774"
  },
  {
    "text": "So, um, we have two options,",
    "start": "111775",
    "end": "114780"
  },
  {
    "text": "um, when we are splitting a dataset.",
    "start": "114780",
    "end": "116924"
  },
  {
    "text": "We can, uh, split our dataset at once and call this a fixed split, where basically,",
    "start": "116925",
    "end": "122690"
  },
  {
    "text": "we want to take a dataset and split it into three disjoint independent pieces.",
    "start": "122690",
    "end": "128479"
  },
  {
    "text": "We wanna have a training set that we are going to use to optimize GNN model parameters.",
    "start": "128480",
    "end": "134620"
  },
  {
    "text": "We are going to use a validation set which we- we can use to",
    "start": "134620",
    "end": "139370"
  },
  {
    "text": "tune hyperparameters and various kinds of con- constants and decision choices,",
    "start": "139370",
    "end": "145010"
  },
  {
    "text": "uh, in terms of,",
    "start": "145010",
    "end": "147155"
  },
  {
    "text": "uh, the modeling architecture.",
    "start": "147155",
    "end": "149050"
  },
  {
    "text": "And once basically using the training set and the validation set,",
    "start": "149050",
    "end": "153420"
  },
  {
    "text": "we finalize our final model,",
    "start": "153420",
    "end": "155360"
  },
  {
    "text": "final- final values of hyper-parameters,",
    "start": "155360",
    "end": "158150"
  },
  {
    "text": "final values of different design dimensions.",
    "start": "158150",
    "end": "161099"
  },
  {
    "text": "Uh, we are then going to apply our model to",
    "start": "161100",
    "end": "163950"
  },
  {
    "text": "this new independent test set that was held out all the time,",
    "start": "163950",
    "end": "169410"
  },
  {
    "text": "and we only use it to report final, uh, performance.",
    "start": "169410",
    "end": "172955"
  },
  {
    "text": "And this is a fair way to evaluate because we",
    "start": "172955",
    "end": "175670"
  },
  {
    "text": "used training and validation to build the model,",
    "start": "175670",
    "end": "179455"
  },
  {
    "text": "then we fix the model and we apply it to this, uh, independent,",
    "start": "179455",
    "end": "184190"
  },
  {
    "text": "unseen never touched before test set and we pre- uh,",
    "start": "184190",
    "end": "188300"
  },
  {
    "text": "we report, uh, our performance.",
    "start": "188300",
    "end": "190655"
  },
  {
    "text": "Um, what is interesting in graphs, is that, uh,",
    "start": "190655",
    "end": "194470"
  },
  {
    "text": "sometimes we cannot guarantee that the test set will really be held out,",
    "start": "194470",
    "end": "198770"
  },
  {
    "text": "meaning that there will be no information leakage",
    "start": "198770",
    "end": "201545"
  },
  {
    "text": "from training and validation sets into the test set.",
    "start": "201545",
    "end": "204680"
  },
  {
    "text": "And this is why, uh, this becomes interesting.",
    "start": "204680",
    "end": "207685"
  },
  {
    "text": "So that's that's in terms of a fixed split.",
    "start": "207685",
    "end": "209870"
  },
  {
    "text": "Once we have created the fixed split,",
    "start": "209870",
    "end": "212269"
  },
  {
    "text": "we could actually make it such that it is a random.",
    "start": "212270",
    "end": "215150"
  },
  {
    "text": "And what this would mean, is that we could randomly split our data into training,",
    "start": "215150",
    "end": "219110"
  },
  {
    "text": "validation, and test set,",
    "start": "219110",
    "end": "220370"
  },
  {
    "text": "and then we could kind of report- rather than on a single split,",
    "start": "220370",
    "end": "223955"
  },
  {
    "text": "we could report average performance over different,",
    "start": "223955",
    "end": "227615"
  },
  {
    "text": "uh, uh, let's call them, uh, random splits.",
    "start": "227615",
    "end": "229880"
  },
  {
    "text": "So one is just to create the split and work with it forever.",
    "start": "229880",
    "end": "233470"
  },
  {
    "text": "The other one is to kind of create the split,",
    "start": "233470",
    "end": "235835"
  },
  {
    "text": "but one component of that split is that there is some randomness and we can",
    "start": "235835",
    "end": "240290"
  },
  {
    "text": "then try out many different instantiation of the split and report the average,",
    "start": "240290",
    "end": "245284"
  },
  {
    "text": "uh, to provide even more,",
    "start": "245285",
    "end": "247385"
  },
  {
    "text": "uh, robust, uh, results.",
    "start": "247385",
    "end": "249564"
  },
  {
    "text": "So, um, you know,",
    "start": "249565",
    "end": "251610"
  },
  {
    "text": "why is splitting graphs special?",
    "start": "251610",
    "end": "254355"
  },
  {
    "text": "Uh, imagine if you have an image dataset or a document dataset.",
    "start": "254355",
    "end": "258875"
  },
  {
    "text": "Then in such datasets,",
    "start": "258875",
    "end": "260495"
  },
  {
    "text": "you assume that, uh,",
    "start": "260495",
    "end": "262010"
  },
  {
    "text": "uh, data points are independent from, uh, each other.",
    "start": "262010",
    "end": "265565"
  },
  {
    "text": "So this means that, uh,",
    "start": "265565",
    "end": "267165"
  },
  {
    "text": "each data point here is an image, and, uh,",
    "start": "267165",
    "end": "270375"
  },
  {
    "text": "because they are independent from each other,",
    "start": "270375",
    "end": "272255"
  },
  {
    "text": "it is easy to split them into training, test,",
    "start": "272255",
    "end": "274970"
  },
  {
    "text": "uh, and validation, uh, set.",
    "start": "274970",
    "end": "277285"
  },
  {
    "text": "Um, and there is no leakage because each image is a data- data point, uh, by its own.",
    "start": "277285",
    "end": "283370"
  },
  {
    "text": "Uh, splitting a graph is different.",
    "start": "283370",
    "end": "286479"
  },
  {
    "text": "Um, the problem with the graph is that nodes are connected with each other.",
    "start": "286480",
    "end": "290755"
  },
  {
    "text": "So for example, in node classification,",
    "start": "290755",
    "end": "292985"
  },
  {
    "text": "each data point is a node now, um,",
    "start": "292985",
    "end": "295280"
  },
  {
    "text": "but these nodes are not independent from each other.",
    "start": "295280",
    "end": "298080"
  },
  {
    "text": "The nodes are actually connected, uh,",
    "start": "298080",
    "end": "300800"
  },
  {
    "text": "with each other, meaning that,",
    "start": "300800",
    "end": "302240"
  },
  {
    "text": "you know, for example, in this case,",
    "start": "302240",
    "end": "303919"
  },
  {
    "text": "if I look at node 5, in order to predict node 5, it will,",
    "start": "303920",
    "end": "307760"
  },
  {
    "text": "in terms of a graph neural network also collect information from nodes,",
    "start": "307760",
    "end": "311300"
  },
  {
    "text": "uh, 1 and 2.",
    "start": "311300",
    "end": "312544"
  },
  {
    "text": "So this means that, uh,",
    "start": "312545",
    "end": "313640"
  },
  {
    "text": "nodes, um, 1 and, um, uh,",
    "start": "313640",
    "end": "316410"
  },
  {
    "text": "2, um, will affect,",
    "start": "316410",
    "end": "318540"
  },
  {
    "text": "uh, the prediction on- on- of node 5.",
    "start": "318540",
    "end": "320820"
  },
  {
    "text": "So if 1 and 2 are the training dataset and 5 is the test dataset,",
    "start": "320820",
    "end": "325070"
  },
  {
    "text": "then clearly we have some,",
    "start": "325070",
    "end": "327065"
  },
  {
    "text": "um, information, uh, leakage.",
    "start": "327065",
    "end": "329165"
  },
  {
    "text": "So, uh, this is why this is interesting.",
    "start": "329165",
    "end": "332315"
  },
  {
    "text": "So then the question is,",
    "start": "332315",
    "end": "333815"
  },
  {
    "text": "um, what are our options?",
    "start": "333815",
    "end": "335675"
  },
  {
    "text": "What can we- uh, what can we do?",
    "start": "335675",
    "end": "338590"
  },
  {
    "text": "Um, we can do the following.",
    "start": "338590",
    "end": "341264"
  },
  {
    "text": "Um, the first solution is to do what we call,",
    "start": "341265",
    "end": "344745"
  },
  {
    "text": "um, a transductive setting,",
    "start": "344745",
    "end": "346675"
  },
  {
    "text": "where the input graph can be observed over, for all the dataset splits.",
    "start": "346675",
    "end": "351830"
  },
  {
    "text": "So basically we- we will work with the same graph structure for training,",
    "start": "351830",
    "end": "355580"
  },
  {
    "text": "validation, and, uh, test set.",
    "start": "355580",
    "end": "357775"
  },
  {
    "text": "And we will only split the node- the node labels,",
    "start": "357775",
    "end": "361100"
  },
  {
    "text": "meaning we'll keep the graph structure as is,",
    "start": "361100",
    "end": "363590"
  },
  {
    "text": "but we're going to put some nodes into the training,",
    "start": "363590",
    "end": "366275"
  },
  {
    "text": "test and, uh, validation, uh, set.",
    "start": "366275",
    "end": "369065"
  },
  {
    "text": "So we are only splitting, uh, node labels.",
    "start": "369065",
    "end": "371930"
  },
  {
    "text": "This means that at the training time,",
    "start": "371930",
    "end": "373835"
  },
  {
    "text": "we compute embeddings of nodes,",
    "start": "373835",
    "end": "376145"
  },
  {
    "text": "let's say 1 and 2 because they are our training set, uh,",
    "start": "376145",
    "end": "379330"
  },
  {
    "text": "using the entire graph,",
    "start": "379330",
    "end": "380794"
  },
  {
    "text": "but only labels of 1 and 2.",
    "start": "380795",
    "end": "382780"
  },
  {
    "text": "And at validation time we compute embeddings of the, uh,",
    "start": "382780",
    "end": "386139"
  },
  {
    "text": "entire graph and only evaluate on, uh, uh, uh,",
    "start": "386140",
    "end": "390035"
  },
  {
    "text": "labels of nodes 3 and 4 because we have the data, uh, for them.",
    "start": "390035",
    "end": "394705"
  },
  {
    "text": "So this would be one possible,",
    "start": "394705",
    "end": "396974"
  },
  {
    "text": "uh, approach, uh, to do this.",
    "start": "396975",
    "end": "399270"
  },
  {
    "text": "Another approach is what we call,",
    "start": "399270",
    "end": "402050"
  },
  {
    "text": "uh, an inductive setting, where we, uh,",
    "start": "402050",
    "end": "404824"
  },
  {
    "text": "break the edges between the splits into, uh,",
    "start": "404825",
    "end": "408080"
  },
  {
    "text": "multiple graphs or multiple independent graphs, multiple independent components.",
    "start": "408080",
    "end": "412849"
  },
  {
    "text": "So now we have, uh,",
    "start": "412850",
    "end": "414500"
  },
  {
    "text": "three graphs that are independent.",
    "start": "414500",
    "end": "416210"
  },
  {
    "text": "Um, and in our case that would mean is that we would just drop these , uh, dotted edges.",
    "start": "416210",
    "end": "421770"
  },
  {
    "text": "So now we have three different graphs and we can call one a training graph,",
    "start": "421770",
    "end": "425629"
  },
  {
    "text": "a validation graph, um, and a test graph.",
    "start": "425630",
    "end": "428335"
  },
  {
    "text": "Um, so this means that when now we are making,",
    "start": "428335",
    "end": "431210"
  },
  {
    "text": "let's say a prediction, uh,",
    "start": "431210",
    "end": "432590"
  },
  {
    "text": "in the test set about node five,",
    "start": "432590",
    "end": "434585"
  },
  {
    "text": "we are not affected, uh,",
    "start": "434585",
    "end": "435949"
  },
  {
    "text": "by the, uh, prediction of- uh,",
    "start": "435950",
    "end": "438485"
  },
  {
    "text": "by the label or the structure from- information from node 1 anymore.",
    "start": "438485",
    "end": "442745"
  },
  {
    "text": "So this means that at the training time we compute embeddings",
    "start": "442745",
    "end": "445760"
  },
  {
    "text": "only over the graph that includes nodes 1 and 2,",
    "start": "445760",
    "end": "448790"
  },
  {
    "text": "um, and only, uh,",
    "start": "448790",
    "end": "450470"
  },
  {
    "text": "in using the labels of 1 and 2.",
    "start": "450470",
    "end": "452300"
  },
  {
    "text": "And at validation time,",
    "start": "452300",
    "end": "453740"
  },
  {
    "text": "we compute the embedding using the graph, uh,",
    "start": "453740",
    "end": "456449"
  },
  {
    "text": "over nodes 3 and 4, uh,",
    "start": "456450",
    "end": "458190"
  },
  {
    "text": "and evaluate based on the nodes, uh, 3 and 4.",
    "start": "458190",
    "end": "460805"
  },
  {
    "text": "Of course, the problem with this- with this approach,",
    "start": "460805",
    "end": "463100"
  },
  {
    "text": "is that now I have- I have thrown away quite a few edges,",
    "start": "463100",
    "end": "466340"
  },
  {
    "text": "quite a bit of graph information,",
    "start": "466340",
    "end": "468305"
  },
  {
    "text": "and if my graphs are small,",
    "start": "468305",
    "end": "469970"
  },
  {
    "text": "this is not, uh, preferred.",
    "start": "469970",
    "end": "471775"
  },
  {
    "text": "So kind of the trade-off is either I have some leakage of structured information between,",
    "start": "471775",
    "end": "477410"
  },
  {
    "text": "uh, training, validation and test set,",
    "start": "477410",
    "end": "479540"
  },
  {
    "text": "but at least the labels are independent in",
    "start": "479540",
    "end": "481880"
  },
  {
    "text": "the transductive setting or in an inductive setting,",
    "start": "481880",
    "end": "484895"
  },
  {
    "text": "I actually have to throw away the edges so that I chop",
    "start": "484895",
    "end": "488285"
  },
  {
    "text": "the graph in two different independent pieces and then,",
    "start": "488285",
    "end": "492065"
  },
  {
    "text": "uh, run or evaluate over those pieces.",
    "start": "492065",
    "end": "496120"
  },
  {
    "text": "So in- the solution in that transactive setting is that the in- input graph, uh,",
    "start": "496120",
    "end": "501275"
  },
  {
    "text": "can be, uh, observed, uh,",
    "start": "501275",
    "end": "503540"
  },
  {
    "text": "for all, uh, dataset splits,",
    "start": "503540",
    "end": "505640"
  },
  {
    "text": "training, validation, and test.",
    "start": "505640",
    "end": "507250"
  },
  {
    "text": "Um, and this is- this is interesting because, um,",
    "start": "507250",
    "end": "511780"
  },
  {
    "text": "it allows us to basically operate in this what you could also think of",
    "start": "511780",
    "end": "515180"
  },
  {
    "text": "as semi-supervised setting where the graph is given, uh,",
    "start": "515180",
    "end": "518930"
  },
  {
    "text": "the- the edges of all the nodes are given,",
    "start": "518930",
    "end": "521560"
  },
  {
    "text": "uh, the features of all the nodes are given,",
    "start": "521560",
    "end": "523715"
  },
  {
    "text": "but the lab- but the labels of nodes are only,",
    "start": "523715",
    "end": "526905"
  },
  {
    "text": "uh, only a subset of node labels, uh, is observed.",
    "start": "526905",
    "end": "530405"
  },
  {
    "text": "So, uh, to summarize,",
    "start": "530405",
    "end": "532595"
  },
  {
    "text": "in the transactive setting,",
    "start": "532595",
    "end": "534079"
  },
  {
    "text": "we have training, test,",
    "start": "534080",
    "end": "535160"
  },
  {
    "text": "and validation split, uh,",
    "start": "535160",
    "end": "536839"
  },
  {
    "text": "all on the same graph.",
    "start": "536840",
    "end": "538340"
  },
  {
    "text": "Where data consists of one connected graph.",
    "start": "538340",
    "end": "541175"
  },
  {
    "text": "The entire graph can be observed,",
    "start": "541175",
    "end": "543409"
  },
  {
    "text": "uh, uh, in all the data splits.",
    "start": "543409",
    "end": "545360"
  },
  {
    "text": "So it means all the nodes,",
    "start": "545360",
    "end": "546875"
  },
  {
    "text": "all the edges and all the node features,",
    "start": "546875",
    "end": "549110"
  },
  {
    "text": "uh, but we only split the,",
    "start": "549110",
    "end": "550790"
  },
  {
    "text": "uh, the labels, meaning, uh,",
    "start": "550790",
    "end": "553014"
  },
  {
    "text": "some labels are observed,",
    "start": "553015",
    "end": "554360"
  },
  {
    "text": "other labels- labels are unobserved.",
    "start": "554360",
    "end": "557015"
  },
  {
    "text": "And this, uh, setting is applicable both to node prediction,",
    "start": "557015",
    "end": "560750"
  },
  {
    "text": "uh, as well as edge class- edge prediction tasks.",
    "start": "560750",
    "end": "564265"
  },
  {
    "text": "The inductive setting, which is the training,",
    "start": "564265",
    "end": "566660"
  },
  {
    "text": "validation, and test sets,",
    "start": "566660",
    "end": "568175"
  },
  {
    "text": "are on different graphs.",
    "start": "568175",
    "end": "569755"
  },
  {
    "text": "Uh, the dataset here consists of multiple graphs that are independent from each other.",
    "start": "569755",
    "end": "574700"
  },
  {
    "text": "We only observe the graph structure- note features as well as,",
    "start": "574700",
    "end": "579260"
  },
  {
    "text": "ah, let say node labels,",
    "start": "579260",
    "end": "580850"
  },
  {
    "text": "uh, within the split.",
    "start": "580850",
    "end": "582415"
  },
  {
    "text": "Um, and this allows us to really test how can we generalize to  unseen graphs.",
    "start": "582415",
    "end": "586555"
  },
  {
    "text": "The- the drawback of this approach is that we",
    "start": "586555",
    "end": "589610"
  },
  {
    "text": "have to take the original graph and chop it into many,",
    "start": "589610",
    "end": "592985"
  },
  {
    "text": "uh, different, uh, small, uh, pieces.",
    "start": "592985",
    "end": "595550"
  },
  {
    "text": "Uh, and this way we throw away some, uh, graph formation.",
    "start": "595550",
    "end": "599774"
  },
  {
    "text": "This was now in terms of node classification.",
    "start": "599775",
    "end": "603175"
  },
  {
    "text": "Here I give you an example in terms of transductive classification,",
    "start": "603175",
    "end": "606670"
  },
  {
    "text": "you simply split, uh, nodes into training,",
    "start": "606670",
    "end": "609310"
  },
  {
    "text": "uh, validation, and test sets.",
    "start": "609310",
    "end": "611425"
  },
  {
    "text": "Um, in the inductive setting, uh,",
    "start": "611425",
    "end": "613765"
  },
  {
    "text": "we basically- we can assume we have multiple different, uh, graphs, um,",
    "start": "613765",
    "end": "618580"
  },
  {
    "text": "uh, given and we can, um, uh,",
    "start": "618580",
    "end": "622030"
  },
  {
    "text": "take some graphs into the training set,",
    "start": "622030",
    "end": "624070"
  },
  {
    "text": "others in the validation and test set.",
    "start": "624070",
    "end": "626155"
  },
  {
    "text": "If we don't have multiple graphs,",
    "start": "626155",
    "end": "628060"
  },
  {
    "text": "we have to create multiple graphs by basically dropping the edges",
    "start": "628060",
    "end": "631630"
  },
  {
    "text": "or cutting the edges between them so that we get to these different,",
    "start": "631630",
    "end": "635605"
  },
  {
    "text": "uh, connected components and then put them in the training, test,",
    "start": "635605",
    "end": "639070"
  },
  {
    "text": "uh, and validation, uh, set.",
    "start": "639070",
    "end": "641650"
  },
  {
    "text": "So now that we have talked about node classification,",
    "start": "641650",
    "end": "646075"
  },
  {
    "text": "let's switch and let's go to the next, uh,",
    "start": "646075",
    "end": "648520"
  },
  {
    "text": "classification task, which is graph classification.",
    "start": "648520",
    "end": "651370"
  },
  {
    "text": "In graph classification, uh,",
    "start": "651370",
    "end": "653560"
  },
  {
    "text": "induc- inductive setting is well defined because we have independent graphs,",
    "start": "653560",
    "end": "657610"
  },
  {
    "text": "um, and we can simply split them into the training, validation, and test sets.",
    "start": "657610",
    "end": "661660"
  },
  {
    "text": "So basically, we put some graphs into the training set,",
    "start": "661660",
    "end": "664375"
  },
  {
    "text": "some in the validation set,",
    "start": "664375",
    "end": "665710"
  },
  {
    "text": "and some in the test set.",
    "start": "665710",
    "end": "666820"
  },
  {
    "text": "Se here, we basically have independent, uh, graphs.",
    "start": "666820",
    "end": "669535"
  },
  {
    "text": "It's easy to split them,",
    "start": "669535",
    "end": "670779"
  },
  {
    "text": "there is no crosstalk,",
    "start": "670780",
    "end": "671994"
  },
  {
    "text": "there is no information leakage,",
    "start": "671994",
    "end": "673915"
  },
  {
    "text": "um, and this can be done.",
    "start": "673915",
    "end": "676055"
  },
  {
    "text": "Perhaps, um, the trickiest of all the settings,",
    "start": "676055",
    "end": "681180"
  },
  {
    "text": "uh, for machine learning with graphs is link prediction.",
    "start": "681180",
    "end": "684285"
  },
  {
    "text": "Um, and the goal of link prediction is to predict missing edges.",
    "start": "684285",
    "end": "688535"
  },
  {
    "text": "And setting up link prediction requires a bit of thought and it",
    "start": "688535",
    "end": "692485"
  },
  {
    "text": "can be tricky because link prediction is an unsupervised,",
    "start": "692485",
    "end": "696820"
  },
  {
    "text": "uh, or self-supervised task.",
    "start": "696820",
    "end": "698935"
  },
  {
    "text": "We need to create labels and the data splits,",
    "start": "698935",
    "end": "702115"
  },
  {
    "text": "uh, on our own.",
    "start": "702115",
    "end": "703435"
  },
  {
    "text": "So this means that we need to hide some of the edges from",
    "start": "703435",
    "end": "706900"
  },
  {
    "text": "the GNN and let the GNN predict the existing edges.",
    "start": "706900",
    "end": "711475"
  },
  {
    "text": "So the idea is, for example,",
    "start": "711475",
    "end": "713170"
  },
  {
    "text": "if I have the original graph,",
    "start": "713170",
    "end": "714865"
  },
  {
    "text": "I have to hide a couple of edges,",
    "start": "714865",
    "end": "717055"
  },
  {
    "text": "for example, these two red edges,",
    "start": "717055",
    "end": "718660"
  },
  {
    "text": "so that I say this is the input and I want my- my GNN to be able to predict these two,",
    "start": "718660",
    "end": "723879"
  },
  {
    "text": "uh, output, uh, edges, right?",
    "start": "723880",
    "end": "726070"
  },
  {
    "text": "So in some sense, we'll have to take some edges out,",
    "start": "726070",
    "end": "728830"
  },
  {
    "text": "hide them from ourselves and try to, uh, predict them.",
    "start": "728830",
    "end": "732595"
  },
  {
    "text": "So, uh, this is interesting and it creates a bit more complexity because,",
    "start": "732595",
    "end": "738430"
  },
  {
    "text": "um, in a GNN,",
    "start": "738430",
    "end": "739839"
  },
  {
    "text": "we have two types of edges.",
    "start": "739840",
    "end": "741340"
  },
  {
    "text": "We will have the message-passing edges,",
    "start": "741340",
    "end": "743785"
  },
  {
    "text": "so edges that the GNN can use to create the embedding,",
    "start": "743785",
    "end": "746620"
  },
  {
    "text": "and then we'll have these what we'll call supervision edges,",
    "start": "746620",
    "end": "749455"
  },
  {
    "text": "which are the edges that are part of,",
    "start": "749455",
    "end": "751360"
  },
  {
    "text": "let's say, our training, uh, dataset.",
    "start": "751360",
    "end": "753790"
  },
  {
    "text": "So for, uh, link prediction,",
    "start": "753790",
    "end": "756430"
  },
  {
    "text": "we need to split edges twice.",
    "start": "756430",
    "end": "758200"
  },
  {
    "text": "In first step, we assign two types of edges to the original graph.",
    "start": "758200",
    "end": "762310"
  },
  {
    "text": "As I said, some edges we'll call message passing edges.",
    "start": "762310",
    "end": "765550"
  },
  {
    "text": "They are edges used for the GNN to operate over.",
    "start": "765550",
    "end": "769045"
  },
  {
    "text": "And then we'll also call- what we'll call supervision edges.",
    "start": "769045",
    "end": "773350"
  },
  {
    "text": "These are the edges for us to compute the objective function,",
    "start": "773350",
    "end": "776410"
  },
  {
    "text": "loss function, performance of the model, and so on.",
    "start": "776410",
    "end": "779649"
  },
  {
    "text": "Um, and after the step 1, um,",
    "start": "779650",
    "end": "782665"
  },
  {
    "text": "only message edges will remain in the graph and supervision edges are the,",
    "start": "782665",
    "end": "787839"
  },
  {
    "text": "uh, edges that are used for supervision of, uh, edge prediction,",
    "start": "787840",
    "end": "791650"
  },
  {
    "text": "uh, made by the model and will not be used, uh, by the GNN.",
    "start": "791650",
    "end": "796090"
  },
  {
    "text": "Um, so this- this is the first step.",
    "start": "796090",
    "end": "798835"
  },
  {
    "text": "And then in the second step, we split, uh,",
    "start": "798835",
    "end": "801355"
  },
  {
    "text": "edges into train, test, and validation set.",
    "start": "801355",
    "end": "804565"
  },
  {
    "text": "Um, and we have two options.",
    "start": "804565",
    "end": "806155"
  },
  {
    "text": "One is to do what is called inductive link prediction split, where, you know,",
    "start": "806155",
    "end": "810520"
  },
  {
    "text": "we- let's say we have a dataset with three graphs and each split will be,",
    "start": "810520",
    "end": "815560"
  },
  {
    "text": "uh, indepe- will be an independent graph.",
    "start": "815560",
    "end": "817750"
  },
  {
    "text": "So we'll have a training set,",
    "start": "817750",
    "end": "819205"
  },
  {
    "text": "we'll have our validation set and a test set, three different graphs,",
    "start": "819205",
    "end": "822550"
  },
  {
    "text": "and each graph will have a different, um, uh,",
    "start": "822550",
    "end": "826000"
  },
  {
    "text": "split in terms of training,",
    "start": "826000",
    "end": "827980"
  },
  {
    "text": "validation, and test edges, right?",
    "start": "827980",
    "end": "829720"
  },
  {
    "text": "So here this would be the message-passing edges and the supervision edges.",
    "start": "829720",
    "end": "833319"
  },
  {
    "text": "In the second validation graph,",
    "start": "833320",
    "end": "835750"
  },
  {
    "text": "y- you know, we'll have different, um, uh,",
    "start": "835750",
    "end": "838045"
  },
  {
    "text": "supervision edges and different message-passing edges,",
    "start": "838045",
    "end": "841584"
  },
  {
    "text": "and then, in the test set, uh, the same.",
    "start": "841585",
    "end": "844270"
  },
  {
    "text": "So this is, uh,",
    "start": "844270",
    "end": "845770"
  },
  {
    "text": "one way, um, uh, to do this.",
    "start": "845770",
    "end": "848275"
  },
  {
    "text": "Another way to do this is to do this in,",
    "start": "848275",
    "end": "850990"
  },
  {
    "text": "uh, the transductive setting.",
    "start": "850990",
    "end": "852805"
  },
  {
    "text": "And if we do transductive link prediction split, um,",
    "start": "852805",
    "end": "855640"
  },
  {
    "text": "this is generally the default when people talk about link prediction.",
    "start": "855640",
    "end": "859885"
  },
  {
    "text": "And suppose we only have one- one input graph.",
    "start": "859885",
    "end": "862630"
  },
  {
    "text": "What we have to do in this, uh, one,",
    "start": "862630",
    "end": "865090"
  },
  {
    "text": "um, input graph, by definition,",
    "start": "865090",
    "end": "867519"
  },
  {
    "text": "the transductive- of the- uh,",
    "start": "867519",
    "end": "869470"
  },
  {
    "text": "what we mean by transductive learning,",
    "start": "869470",
    "end": "871420"
  },
  {
    "text": "the entire graph can be observed,",
    "start": "871420",
    "end": "873579"
  },
  {
    "text": "uh, for all the datasets' splits.",
    "start": "873580",
    "end": "875725"
  },
  {
    "text": "But since edges are both, uh,",
    "start": "875725",
    "end": "877870"
  },
  {
    "text": "part of the graph structure and the supervision,",
    "start": "877870",
    "end": "880375"
  },
  {
    "text": "we need to hold out, uh,",
    "start": "880375",
    "end": "882085"
  },
  {
    "text": "validation and test edges.",
    "start": "882085",
    "end": "884005"
  },
  {
    "text": "Um, and then to train the training set,",
    "start": "884005",
    "end": "886180"
  },
  {
    "text": "we need to further hold out, uh,",
    "start": "886180",
    "end": "887845"
  },
  {
    "text": "the supervision edges, uh, on the training set.",
    "start": "887845",
    "end": "890605"
  },
  {
    "text": "So let me now, uh,",
    "start": "890605",
    "end": "891850"
  },
  {
    "text": "show you how exactly to do this.",
    "start": "891850",
    "end": "894235"
  },
  {
    "text": "So, uh, for transductive link predict- um, link prediction,",
    "start": "894235",
    "end": "899019"
  },
  {
    "text": "we will take the original graph and we are going to create",
    "start": "899020",
    "end": "902200"
  },
  {
    "text": "a training dataset where we'll have a couple of training edges,",
    "start": "902200",
    "end": "905665"
  },
  {
    "text": "um, er, for message-passing as well as the supervision edges.",
    "start": "905665",
    "end": "909714"
  },
  {
    "text": "At validation time, we are going to use the training edges and the, uh,",
    "start": "909715",
    "end": "914290"
  },
  {
    "text": "training message-passing edges and training supervision edges,",
    "start": "914290",
    "end": "917665"
  },
  {
    "text": "uh, to be able to predict the validation edges.",
    "start": "917665",
    "end": "920820"
  },
  {
    "text": "And then at the test time,",
    "start": "920820",
    "end": "922470"
  },
  {
    "text": "we are going to use the training message edges,",
    "start": "922470",
    "end": "924915"
  },
  {
    "text": "training supervision edges, as well as validation edges to predict the test edges.",
    "start": "924915",
    "end": "930195"
  },
  {
    "text": "So now you can see how, uh,",
    "start": "930195",
    "end": "931785"
  },
  {
    "text": "at training time the graph is sparser,",
    "start": "931785",
    "end": "934168"
  },
  {
    "text": "at the validation time,",
    "start": "934169",
    "end": "935640"
  },
  {
    "text": "we need- we get to see the supervision edges,",
    "start": "935640",
    "end": "938435"
  },
  {
    "text": "but we have to predict the validation edges,",
    "start": "938435",
    "end": "940870"
  },
  {
    "text": "and at the final test time,",
    "start": "940870",
    "end": "942925"
  },
  {
    "text": "we get to see all the edges but the test edges,",
    "start": "942925",
    "end": "945955"
  },
  {
    "text": "and we need to predict,",
    "start": "945955",
    "end": "947230"
  },
  {
    "text": "uh, the test edges.",
    "start": "947230",
    "end": "948459"
  },
  {
    "text": "So here you see how, uh, basically, these,",
    "start": "948460",
    "end": "950470"
  },
  {
    "text": "uh, sets are nested in one another.",
    "start": "950470",
    "end": "952899"
  },
  {
    "text": "So, um, why do we use a growing number of edges?",
    "start": "952900",
    "end": "956395"
  },
  {
    "text": "Because one way to think of this if- is if the graph is evolving over time,",
    "start": "956395",
    "end": "960670"
  },
  {
    "text": "then you could say at some early time,",
    "start": "960670",
    "end": "962440"
  },
  {
    "text": "this was the graph, then it grew by adding this edge.",
    "start": "962440",
    "end": "965680"
  },
  {
    "text": "So that was the graph and it added another edge,",
    "start": "965680",
    "end": "968170"
  },
  {
    "text": "and so on and so forth.",
    "start": "968170",
    "end": "969370"
  },
  {
    "text": "So you can think of this almost like as splitting it along, uh, uh,",
    "start": "969370",
    "end": "972835"
  },
  {
    "text": "uh, three- into thee- three different,",
    "start": "972835",
    "end": "975730"
  },
  {
    "text": "um, time, uh, intervals.",
    "start": "975730",
    "end": "977800"
  },
  {
    "text": "And that's perhaps the best way to define,",
    "start": "977800",
    "end": "980665"
  },
  {
    "text": "uh, link prediction, uh, on a graph.",
    "start": "980665",
    "end": "983065"
  },
  {
    "text": "So to summarize, transductive link prediction split is a bit, um, um,",
    "start": "983065",
    "end": "987550"
  },
  {
    "text": "uh, tricky because we need to take",
    "start": "987550",
    "end": "990490"
  },
  {
    "text": "the original graph and s- and basically have four types of edges.",
    "start": "990490",
    "end": "993985"
  },
  {
    "text": "Training message-passing edges, training supervision edges,",
    "start": "993985",
    "end": "997615"
  },
  {
    "text": "validation edges, as well as,",
    "start": "997615",
    "end": "999595"
  },
  {
    "text": "uh, test edges.",
    "start": "999595",
    "end": "1001125"
  },
  {
    "text": "Um, and we have nice,",
    "start": "1001125",
    "end": "1002685"
  },
  {
    "text": "uh, even though this, you know,",
    "start": "1002685",
    "end": "1003930"
  },
  {
    "text": "might be a bit cumbersome, uh, to split, uh,",
    "start": "1003930",
    "end": "1006375"
  },
  {
    "text": "around, uh, this allows us, uh,",
    "start": "1006375",
    "end": "1009210"
  },
  {
    "text": "to do- uh, to do the- to do things well because we have, uh, good tools,",
    "start": "1009210",
    "end": "1013275"
  },
  {
    "text": "meaning DeepSNAP and GraphGym that allow us,",
    "start": "1013275",
    "end": "1015975"
  },
  {
    "text": "uh, to do this, uh, for free, uh, for us.",
    "start": "1015975",
    "end": "1018779"
  },
  {
    "text": "So, uh, to summarize, uh,",
    "start": "1018780",
    "end": "1021525"
  },
  {
    "text": "we- we talked about the entire GNN training pipeline from evaluation metrics,",
    "start": "1021525",
    "end": "1026790"
  },
  {
    "text": "loss functions, labels, as well as, uh, the predictions.",
    "start": "1026790",
    "end": "1030435"
  },
  {
    "text": "And these are some of the tools, uh,",
    "start": "1030435",
    "end": "1032130"
  },
  {
    "text": "you can use that allow you to kind of manage these in an end-to-end, uh, fashion.",
    "start": "1032130",
    "end": "1037425"
  },
  {
    "text": "So to summarize, uh,",
    "start": "1037425",
    "end": "1039689"
  },
  {
    "text": "we talked about, um, uh,",
    "start": "1039690",
    "end": "1041519"
  },
  {
    "text": "the GNN layer and how do we define it,",
    "start": "1041520",
    "end": "1044250"
  },
  {
    "text": "we talked about how to stack different GNN layers together,",
    "start": "1044250",
    "end": "1048015"
  },
  {
    "text": "and then we also talked about graph augmentation in",
    "start": "1048015",
    "end": "1051030"
  },
  {
    "text": "terms of feature augmentation and graph structure augmentation,",
    "start": "1051030",
    "end": "1054615"
  },
  {
    "text": "and what I talked, uh,",
    "start": "1054615",
    "end": "1055830"
  },
  {
    "text": "now was about learning, uh,",
    "start": "1055830",
    "end": "1057929"
  },
  {
    "text": "objectives and, uh, how do we,",
    "start": "1057930",
    "end": "1060510"
  },
  {
    "text": "uh, set up different, uh, tasks.",
    "start": "1060510",
    "end": "1063850"
  }
]