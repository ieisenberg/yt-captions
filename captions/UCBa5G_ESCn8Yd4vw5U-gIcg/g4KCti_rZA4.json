[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "start": "0",
    "end": "4658"
  },
  {
    "text": "BILL MACCARTNEY: So that's\nthe end of the introduction.",
    "start": "4658",
    "end": "6950"
  },
  {
    "text": "Let's now begin to drill\ndown on the data resources",
    "start": "6950",
    "end": "10660"
  },
  {
    "text": "that we'll need to\nlaunch our investigation.",
    "start": "10660",
    "end": "13215"
  },
  {
    "text": "And there are two\ndifferent kinds",
    "start": "13215",
    "end": "14590"
  },
  {
    "text": "of data we need to talk\nabout, the corpus and the KB.",
    "start": "14590",
    "end": "19600"
  },
  {
    "start": "18000",
    "end": "127000"
  },
  {
    "text": "Just like any other\nNLP problem, we",
    "start": "19600",
    "end": "21490"
  },
  {
    "text": "need to start with a\ncorpus, a large collection",
    "start": "21490",
    "end": "25180"
  },
  {
    "text": "of natural language text.",
    "start": "25180",
    "end": "26680"
  },
  {
    "text": "And for relation extraction,\nwe need sentences containing",
    "start": "26680",
    "end": "29620"
  },
  {
    "text": "two or more entities.",
    "start": "29620",
    "end": "32529"
  },
  {
    "text": "And because our goal is\nto do relation extraction",
    "start": "32530",
    "end": "35829"
  },
  {
    "text": "with distant\nsupervision, we need",
    "start": "35830",
    "end": "38350"
  },
  {
    "text": "to be able to connect\nthe entities to a KB.",
    "start": "38350",
    "end": "42100"
  },
  {
    "text": "So we need a corpus in\nwhich the entity mentions",
    "start": "42100",
    "end": "45340"
  },
  {
    "text": "are annotated with\nentity resolutions, which",
    "start": "45340",
    "end": "49420"
  },
  {
    "text": "map them to unique\nunambiguous identifiers.",
    "start": "49420",
    "end": "53559"
  },
  {
    "text": "The same identifiers\nthat are used in the KB.",
    "start": "53560",
    "end": "56665"
  },
  {
    "start": "56665",
    "end": "59300"
  },
  {
    "text": "So in this representation,\nI've got the string Elon",
    "start": "59300",
    "end": "62899"
  },
  {
    "text": "Musk, which is just an\nEnglish language string.",
    "start": "62900",
    "end": "66900"
  },
  {
    "text": "That's what we call\nan entity mention.",
    "start": "66900",
    "end": "69470"
  },
  {
    "text": "And then I've got Elon_Musk,\nwhich is an entity ID.",
    "start": "69470",
    "end": "74690"
  },
  {
    "text": "It's a unique\nunambiguous identifier",
    "start": "74690",
    "end": "77990"
  },
  {
    "text": "for this entity in some\npredefined dictionary of entity",
    "start": "77990",
    "end": "86869"
  },
  {
    "text": "IDs.",
    "start": "86870",
    "end": "87810"
  },
  {
    "text": "And it's very common\nfor this purpose",
    "start": "87810",
    "end": "89810"
  },
  {
    "text": "to use something\nlike Wikipedia, which",
    "start": "89810",
    "end": "92930"
  },
  {
    "text": "has one Wikipedia page\nfor almost any entity",
    "start": "92930",
    "end": "97400"
  },
  {
    "text": "that you can think of.",
    "start": "97400",
    "end": "98330"
  },
  {
    "start": "98330",
    "end": "100813"
  },
  {
    "text": "For our investigation,\nwe're going",
    "start": "100813",
    "end": "102230"
  },
  {
    "text": "to use an adaptation of\nthe Wikilinks corpus, which",
    "start": "102230",
    "end": "105050"
  },
  {
    "text": "was produced by Google\nand UMass in 2013.",
    "start": "105050",
    "end": "109040"
  },
  {
    "text": "The full corpus contains\n40 million entity mentions",
    "start": "109040",
    "end": "112550"
  },
  {
    "text": "from 10 million web pages.",
    "start": "112550",
    "end": "114980"
  },
  {
    "text": "And each entity mentioned is\nannotated with a Wikipedia URL.",
    "start": "114980",
    "end": "120650"
  },
  {
    "text": "But we're going to use just\na subset of the full corpus",
    "start": "120650",
    "end": "123710"
  },
  {
    "text": "in order to make\nthings manageable.",
    "start": "123710",
    "end": "128190"
  },
  {
    "start": "127000",
    "end": "284000"
  },
  {
    "text": "So let's start to look\nat some of the code we'll",
    "start": "128190",
    "end": "130259"
  },
  {
    "text": "use in the Python\nnotebooks for this topic.",
    "start": "130259",
    "end": "134860"
  },
  {
    "text": "The data assets\nthat we'll use live",
    "start": "134860",
    "end": "137250"
  },
  {
    "text": "in a subdirectory of our data\ndirectory called rel_ext_data",
    "start": "137250",
    "end": "142840"
  },
  {
    "text": "and we've defined a class\ncalled corpus, which",
    "start": "142840",
    "end": "146650"
  },
  {
    "text": "holds the examples and which\nlets you quickly look up",
    "start": "146650",
    "end": "149890"
  },
  {
    "text": "examples containing\nspecific entities.",
    "start": "149890",
    "end": "153560"
  },
  {
    "text": "So if we load our\ncorpus, we find",
    "start": "153560",
    "end": "155709"
  },
  {
    "text": "that it contains more\nthan 330,000 examples.",
    "start": "155710",
    "end": "158860"
  },
  {
    "text": "Pretty good size.",
    "start": "158860",
    "end": "160270"
  },
  {
    "text": "It's small enough that we\ncan work with it easily",
    "start": "160270",
    "end": "163780"
  },
  {
    "text": "on an ordinary laptop,\nbut it's big enough",
    "start": "163780",
    "end": "166870"
  },
  {
    "text": "to support effective\nmachine learning.",
    "start": "166870",
    "end": "170440"
  },
  {
    "text": "And we can print out a\nrepresentative example",
    "start": "170440",
    "end": "173350"
  },
  {
    "text": "from the corpus.",
    "start": "173350",
    "end": "175060"
  },
  {
    "text": "Actually, this is\na bit hard to read.",
    "start": "175060",
    "end": "177680"
  },
  {
    "text": "So let me give you a different\nview of the same example.",
    "start": "177680",
    "end": "182909"
  },
  {
    "text": "We represent examples\nusing the example",
    "start": "182910",
    "end": "185490"
  },
  {
    "text": "class, which is a namedtuple\nwith 12 fields listed here.",
    "start": "185490",
    "end": "191150"
  },
  {
    "text": "The first two fields\nentity_1 and entity_2",
    "start": "191150",
    "end": "194439"
  },
  {
    "text": "contain unique identifiers for\nthe two entities mentioned.",
    "start": "194440",
    "end": "199210"
  },
  {
    "text": "We name identities\nusing Wiki IDs,",
    "start": "199210",
    "end": "201730"
  },
  {
    "text": "which you can think of as the\nlast portion of a Wikipedia",
    "start": "201730",
    "end": "205870"
  },
  {
    "text": "URL.",
    "start": "205870",
    "end": "208730"
  },
  {
    "text": "The next five fields\nrepresent the text",
    "start": "208730",
    "end": "210739"
  },
  {
    "text": "surrounding the two mentions,\ndivided into five chunks.",
    "start": "210740",
    "end": "214340"
  },
  {
    "text": "So left contains the text\nbefore the first mention.",
    "start": "214340",
    "end": "217640"
  },
  {
    "text": "mention_1 is the\nfirst mention itself.",
    "start": "217640",
    "end": "220970"
  },
  {
    "text": "middle contains the text\nbetween the two mentions.",
    "start": "220970",
    "end": "224510"
  },
  {
    "text": "mention_2 is the second mention\nand right contains the text",
    "start": "224510",
    "end": "228439"
  },
  {
    "text": "after the second mention.",
    "start": "228440",
    "end": "232130"
  },
  {
    "text": "And the last five fields contain\nthe same five chunks of text,",
    "start": "232130",
    "end": "236120"
  },
  {
    "text": "but this time,\nannotated with part",
    "start": "236120",
    "end": "238640"
  },
  {
    "text": "of speech tags,\nwhich may turn out",
    "start": "238640",
    "end": "240560"
  },
  {
    "text": "to be useful when we start\nbuilding models for relation",
    "start": "240560",
    "end": "243380"
  },
  {
    "text": "extraction.",
    "start": "243380",
    "end": "244471"
  },
  {
    "start": "244471",
    "end": "248239"
  },
  {
    "text": "Now, whenever you start\nto work with a new dataset",
    "start": "248240",
    "end": "250940"
  },
  {
    "text": "it's good practice to\ndo some data exploration",
    "start": "250940",
    "end": "253730"
  },
  {
    "text": "to get familiar with the data.",
    "start": "253730",
    "end": "255680"
  },
  {
    "text": "A big part of this is getting\na sense of the high level",
    "start": "255680",
    "end": "258289"
  },
  {
    "text": "characteristics of the\ndata, summary statistics,",
    "start": "258290",
    "end": "261470"
  },
  {
    "text": "distributions and so on.",
    "start": "261470",
    "end": "264000"
  },
  {
    "text": "For example, how many\nentities are there",
    "start": "264000",
    "end": "266210"
  },
  {
    "text": "and what are the\nmost common ones?",
    "start": "266210",
    "end": "268650"
  },
  {
    "text": "Here's some code that computes\nthat and here are the results.",
    "start": "268650",
    "end": "273540"
  },
  {
    "text": "So there are more than\n95,000 unique entities,",
    "start": "273540",
    "end": "276740"
  },
  {
    "text": "and it looks like the most\ncommon entities are dominated",
    "start": "276740",
    "end": "280039"
  },
  {
    "text": "by geographic locations.",
    "start": "280040",
    "end": "281930"
  },
  {
    "start": "281930",
    "end": "285330"
  },
  {
    "text": "Now the main benefit we\nget from the corpus class",
    "start": "285330",
    "end": "287819"
  },
  {
    "text": "is the ability to retrieve\nthe examples containing",
    "start": "287820",
    "end": "290520"
  },
  {
    "text": "specific entities.",
    "start": "290520",
    "end": "292990"
  },
  {
    "text": "So let's find\nexamples containing",
    "start": "292990",
    "end": "294720"
  },
  {
    "text": "Elon Musk and Tesla Motors.",
    "start": "294720",
    "end": "296460"
  },
  {
    "start": "296460",
    "end": "299840"
  },
  {
    "text": "There are five such examples,\nand here's the first one.",
    "start": "299840",
    "end": "305150"
  },
  {
    "text": "Actually, this might not be\nall of the examples containing",
    "start": "305150",
    "end": "309050"
  },
  {
    "text": "Elon Musk and Tesla Motors.",
    "start": "309050",
    "end": "311090"
  },
  {
    "text": "It's only the examples where\nElon Musk was mentioned first",
    "start": "311090",
    "end": "315350"
  },
  {
    "text": "and Tesla Motors was\nmentioned second.",
    "start": "315350",
    "end": "318170"
  },
  {
    "text": "There may be additional\nexamples that",
    "start": "318170",
    "end": "320420"
  },
  {
    "text": "have them in the reverse order.",
    "start": "320420",
    "end": "322770"
  },
  {
    "text": "So let's check, look for\nTesla Motors, Elon Musk.",
    "start": "322770",
    "end": "327949"
  },
  {
    "text": "Sure enough, two more\nexamples in reverse order.",
    "start": "327950",
    "end": "331500"
  },
  {
    "text": "So going forward,\nwe'll have to remember",
    "start": "331500",
    "end": "333170"
  },
  {
    "text": "to check both\ndirections when we're",
    "start": "333170",
    "end": "336140"
  },
  {
    "text": "looking for examples containing\na specific pair of entities.",
    "start": "336140",
    "end": "339950"
  },
  {
    "start": "339000",
    "end": "416000"
  },
  {
    "text": "OK, a few last\nobservations on the corpus.",
    "start": "339950",
    "end": "342740"
  },
  {
    "text": "First, this corpus\nis not without flaws.",
    "start": "342740",
    "end": "345620"
  },
  {
    "text": "As you get more\nfamiliar with it,",
    "start": "345620",
    "end": "347060"
  },
  {
    "text": "you'll probably discover\nthat it contains",
    "start": "347060",
    "end": "349669"
  },
  {
    "text": "many examples that are nearly,\nbut not exactly duplicates.",
    "start": "349670",
    "end": "356000"
  },
  {
    "text": "This seems to be an artifact\nof the web document sampling",
    "start": "356000",
    "end": "360500"
  },
  {
    "text": "methodology that was used in the\nconstruction of the Wikilinks",
    "start": "360500",
    "end": "364010"
  },
  {
    "text": "data set.",
    "start": "364010",
    "end": "365870"
  },
  {
    "text": "And it winds up creating\na few distortions",
    "start": "365870",
    "end": "368180"
  },
  {
    "text": "and we may see some\nexamples of this later.",
    "start": "368180",
    "end": "370830"
  },
  {
    "text": "But even though the\ncorpus has a few warts,",
    "start": "370830",
    "end": "373370"
  },
  {
    "text": "it will serve our\npurposes just fine.",
    "start": "373370",
    "end": "377949"
  },
  {
    "text": "One thing that this\ncorpus does not include",
    "start": "377950",
    "end": "380070"
  },
  {
    "text": "is any annotation\nabout relations.",
    "start": "380070",
    "end": "383380"
  },
  {
    "text": "So it could not be used for\nthe fully supervised approach",
    "start": "383380",
    "end": "386760"
  },
  {
    "text": "to relation extraction,\nbecause that",
    "start": "386760",
    "end": "388830"
  },
  {
    "text": "requires a relation label on\neach pair of entity mentions.",
    "start": "388830",
    "end": "393360"
  },
  {
    "text": "And we don't have any\nsuch annotation here.",
    "start": "393360",
    "end": "395340"
  },
  {
    "text": "The only annotations that\nwe have in this corpus",
    "start": "395340",
    "end": "398639"
  },
  {
    "text": "are entity resolutions.",
    "start": "398640",
    "end": "400590"
  },
  {
    "text": "Mapping an entity\nmention to an entity ID.",
    "start": "400590",
    "end": "404550"
  },
  {
    "text": "That means that in\norder to make headway,",
    "start": "404550",
    "end": "406740"
  },
  {
    "text": "we'll need to connect the\ncorpus with an external source",
    "start": "406740",
    "end": "410310"
  },
  {
    "text": "of knowledge about relations.",
    "start": "410310",
    "end": "413010"
  },
  {
    "text": "We need a KB.",
    "start": "413010",
    "end": "413955"
  },
  {
    "start": "413955",
    "end": "417509"
  },
  {
    "start": "416000",
    "end": "497000"
  },
  {
    "text": "Happily our data distribution\ndoes include a KB,",
    "start": "417510",
    "end": "420540"
  },
  {
    "text": "which is derived from Freebase.",
    "start": "420540",
    "end": "423690"
  },
  {
    "text": "Freebase has an\ninteresting history.",
    "start": "423690",
    "end": "425890"
  },
  {
    "text": "It was created in the\nlate 2000s by a company",
    "start": "425890",
    "end": "429300"
  },
  {
    "text": "called Metaweb led by\nJohn Giannandrea, who",
    "start": "429300",
    "end": "433560"
  },
  {
    "text": "later became my boss.",
    "start": "433560",
    "end": "436110"
  },
  {
    "text": "Google acquired Metaweb\nin 2010, and Freebase",
    "start": "436110",
    "end": "440879"
  },
  {
    "text": "became the foundation of\nGoogle's knowledge graph.",
    "start": "440880",
    "end": "444630"
  },
  {
    "text": "Unfortunately,\nGoogle shut Freebase",
    "start": "444630",
    "end": "447060"
  },
  {
    "text": "down in 2016, which was tragic.",
    "start": "447060",
    "end": "450669"
  },
  {
    "text": "But the Freebase data is still\navailable from various sources.",
    "start": "450670",
    "end": "455200"
  },
  {
    "text": "So our KB is a collection\nof relational triples each",
    "start": "455200",
    "end": "459180"
  },
  {
    "text": "consisting of a relation,\na subject, and an object.",
    "start": "459180",
    "end": "463539"
  },
  {
    "text": "So for example, place_of_birth,\nBarack_Obama, Honolulu.",
    "start": "463540",
    "end": "467130"
  },
  {
    "text": "has_spouse, Barack_Obama,\nMichelle_Obama.",
    "start": "467130",
    "end": "469800"
  },
  {
    "text": "Author, The Audacity\nof Hope, Barack_Obama.",
    "start": "469800",
    "end": "473460"
  },
  {
    "text": "So as you might\nguess, the relation",
    "start": "473460",
    "end": "475650"
  },
  {
    "text": "is one of a handful of\npredefined constants",
    "start": "475650",
    "end": "478889"
  },
  {
    "text": "like place_of_birth\nbirth or has_spouse.",
    "start": "478890",
    "end": "482220"
  },
  {
    "text": "The subject and the\nobject are entities",
    "start": "482220",
    "end": "484980"
  },
  {
    "text": "represented by Wiki IDs.",
    "start": "484980",
    "end": "487440"
  },
  {
    "text": "It's the same ID space\nused in the corpus.",
    "start": "487440",
    "end": "490230"
  },
  {
    "text": "Wiki IDs are basically the\nlast part of a Wikipedia URL.",
    "start": "490230",
    "end": "494070"
  },
  {
    "start": "494070",
    "end": "497910"
  },
  {
    "start": "497000",
    "end": "552000"
  },
  {
    "text": "Now just like we\ndid for the corpus,",
    "start": "497910",
    "end": "499560"
  },
  {
    "text": "we've created a KB class\nto store the KB triples",
    "start": "499560",
    "end": "503910"
  },
  {
    "text": "and some associated indexes.",
    "start": "503910",
    "end": "506910"
  },
  {
    "text": "This class makes it\neasy and efficient",
    "start": "506910",
    "end": "509460"
  },
  {
    "text": "to look up KB triples both\nby relation and by entities.",
    "start": "509460",
    "end": "516339"
  },
  {
    "text": "So here, we're just\nloading the data",
    "start": "516340",
    "end": "518880"
  },
  {
    "text": "and printing a count\nof the KB triples.",
    "start": "518880",
    "end": "522419"
  },
  {
    "text": "There are 45,000 KB\ntriples, so this is quite",
    "start": "522419",
    "end": "525180"
  },
  {
    "text": "a bit smaller than the corpus.",
    "start": "525180",
    "end": "526890"
  },
  {
    "text": "If you remember the\ncorpus has 330 examples",
    "start": "526890",
    "end": "533970"
  },
  {
    "text": "and we can print out\nthe first KB triple.",
    "start": "533970",
    "end": "537389"
  },
  {
    "text": "So this is a KB triple that\nsays that the contains relation",
    "start": "537390",
    "end": "541620"
  },
  {
    "text": "holds between Brickfields and\nKuala Lumpur Sentral railway",
    "start": "541620",
    "end": "544529"
  },
  {
    "text": "station which I did not know.",
    "start": "544530",
    "end": "549720"
  },
  {
    "start": "549720",
    "end": "553279"
  },
  {
    "start": "552000",
    "end": "643000"
  },
  {
    "text": "Just like we do with the corpus,\nlet's do some data exploration",
    "start": "553280",
    "end": "556670"
  },
  {
    "text": "to get a sense of the high\nlevel characteristics of the KB.",
    "start": "556670",
    "end": "560089"
  },
  {
    "text": "So first, how many\nrelations are there?",
    "start": "560090",
    "end": "562850"
  },
  {
    "text": "The all_relations\nattribute of the KB",
    "start": "562850",
    "end": "565819"
  },
  {
    "text": "contains a list\nof its relations.",
    "start": "565820",
    "end": "569000"
  },
  {
    "text": "And it seems that\nthere are 16 of them.",
    "start": "569000",
    "end": "573750"
  },
  {
    "text": "Well, what are the relations\nand how big are they?",
    "start": "573750",
    "end": "576600"
  },
  {
    "text": "This code prints out\na list with sizes.",
    "start": "576600",
    "end": "580050"
  },
  {
    "text": "Note the\nget_triples_for_relation",
    "start": "580050",
    "end": "583110"
  },
  {
    "text": "method, which returns a\nlist of the KB triples",
    "start": "583110",
    "end": "587370"
  },
  {
    "text": "for a given relation.",
    "start": "587370",
    "end": "590130"
  },
  {
    "text": "You begin to get a sense of what\nkind of stuff is in this KB.",
    "start": "590130",
    "end": "595200"
  },
  {
    "text": "It looks like the\ncontains relation",
    "start": "595200",
    "end": "597420"
  },
  {
    "text": "is really big with more\nthan 18,000 triples.",
    "start": "597420",
    "end": "601410"
  },
  {
    "text": "And there are a\nfew relations that",
    "start": "601410",
    "end": "603839"
  },
  {
    "text": "are pretty small with\nfewer than 1,000 triples.",
    "start": "603840",
    "end": "611700"
  },
  {
    "text": "Here's some code, that prints\none example from each relations",
    "start": "611700",
    "end": "616530"
  },
  {
    "text": "so that we can form a better\nsense of what they mean.",
    "start": "616530",
    "end": "620930"
  },
  {
    "text": "Some of these are familiar facts\nlike adjoins, France, Spain.",
    "start": "620930",
    "end": "626460"
  },
  {
    "text": "Others might refer to\nunfamiliar entities.",
    "start": "626460",
    "end": "629640"
  },
  {
    "text": "So for example, I've never\nheard of Sheridan Le Fanu.",
    "start": "629640",
    "end": "634860"
  },
  {
    "text": "But I think you can quickly\nform an intuitive sense of what",
    "start": "634860",
    "end": "638519"
  },
  {
    "text": "each relation is about.",
    "start": "638520",
    "end": "640050"
  },
  {
    "start": "640050",
    "end": "644050"
  },
  {
    "start": "643000",
    "end": "692000"
  },
  {
    "text": "Now one of the most important\nmessage in a KB class",
    "start": "644050",
    "end": "646600"
  },
  {
    "text": "is get_triples_for_entities\nwhich lets us look up triples",
    "start": "646600",
    "end": "651160"
  },
  {
    "text": "by the entities they contain.",
    "start": "651160",
    "end": "653709"
  },
  {
    "text": "So let's use it to\nsee what triples",
    "start": "653710",
    "end": "655540"
  },
  {
    "text": "contain France and Germany.",
    "start": "655540",
    "end": "659529"
  },
  {
    "text": "OK, sure, they belong\nto the adjoins relation.",
    "start": "659530",
    "end": "662080"
  },
  {
    "text": "That makes sense.",
    "start": "662080",
    "end": "663400"
  },
  {
    "text": "Now relations like adjoins\nare intuitively symmetric.",
    "start": "663400",
    "end": "667450"
  },
  {
    "text": "So we'd expect to find the\ninverse triple in the KB",
    "start": "667450",
    "end": "671410"
  },
  {
    "text": "as well, and yep, it's there.",
    "start": "671410",
    "end": "675279"
  },
  {
    "text": "But note that\nthere's no guarantee",
    "start": "675280",
    "end": "677830"
  },
  {
    "text": "that such inverse triples\nactually appear in the KB.",
    "start": "677830",
    "end": "681970"
  },
  {
    "text": "There's no guarantee\nthat the KB is complete.",
    "start": "681970",
    "end": "685480"
  },
  {
    "text": "And you could easily write some\ncode to find missing inverses.",
    "start": "685480",
    "end": "689110"
  },
  {
    "start": "689110",
    "end": "693019"
  },
  {
    "start": "692000",
    "end": "738000"
  },
  {
    "text": "Now, that relation\nadjoins is symmetric,",
    "start": "693020",
    "end": "695810"
  },
  {
    "text": "but most relations are\nintuitively asymmetric.",
    "start": "695810",
    "end": "699620"
  },
  {
    "text": "So let's see what\ntriples we have",
    "start": "699620",
    "end": "701000"
  },
  {
    "text": "for Tesla_Motors and Elon_Musk.",
    "start": "701000",
    "end": "704690"
  },
  {
    "text": "OK, they belong to\nthe founders relation.",
    "start": "704690",
    "end": "706700"
  },
  {
    "text": "Good.",
    "start": "706700",
    "end": "707390"
  },
  {
    "text": "That's expected.",
    "start": "707390",
    "end": "708690"
  },
  {
    "text": "That's an asymmetric relation.",
    "start": "708690",
    "end": "711320"
  },
  {
    "text": "What about the inverse,\nElon Musk and Tesla Motors?",
    "start": "711320",
    "end": "714845"
  },
  {
    "start": "714845",
    "end": "717680"
  },
  {
    "text": "OK, they belong to the\nworked_at relation.",
    "start": "717680",
    "end": "722029"
  },
  {
    "text": "Seems like a funny way to\ndescribe Elon's role at Tesla,",
    "start": "722030",
    "end": "725240"
  },
  {
    "text": "but OK.",
    "start": "725240",
    "end": "727459"
  },
  {
    "text": "So this shows that you\ncan have one relation",
    "start": "727460",
    "end": "730370"
  },
  {
    "text": "between x and y and a\ndifferent relation that",
    "start": "730370",
    "end": "733820"
  },
  {
    "text": "holds between y and x.",
    "start": "733820",
    "end": "735888"
  },
  {
    "start": "735888",
    "end": "739024"
  },
  {
    "start": "738000",
    "end": "818000"
  },
  {
    "text": "One more observation.",
    "start": "739024",
    "end": "741040"
  },
  {
    "text": "There may be more\nthan one relation",
    "start": "741040",
    "end": "743110"
  },
  {
    "text": "that holds between a\ngiven pair of entities,",
    "start": "743110",
    "end": "745180"
  },
  {
    "text": "even in one direction.",
    "start": "745180",
    "end": "747440"
  },
  {
    "text": "So for example, let's\nsee what triples hold--",
    "start": "747440",
    "end": "750490"
  },
  {
    "text": "what triples contain\nCleopatra and",
    "start": "750490",
    "end": "752404"
  },
  {
    "text": "Ptolemy_XIII_Theos_Philopator.",
    "start": "752405",
    "end": "753655"
  },
  {
    "start": "753655",
    "end": "760620"
  },
  {
    "text": "Oh, my goodness.",
    "start": "760620",
    "end": "761910"
  },
  {
    "text": "This pair belongs to\nboth the has_sibling",
    "start": "761910",
    "end": "764699"
  },
  {
    "text": "relation and the has_spouse\nrelation to which I can only",
    "start": "764700",
    "end": "770400"
  },
  {
    "text": "say, oh.",
    "start": "770400",
    "end": "771830"
  },
  {
    "start": "771830",
    "end": "774990"
  },
  {
    "text": "Moving right along, let's\nlook at the distribution",
    "start": "774990",
    "end": "779430"
  },
  {
    "text": "of entities in a KB.",
    "start": "779430",
    "end": "781200"
  },
  {
    "text": "How many entities are there and\nwhat are the most common ones?",
    "start": "781200",
    "end": "785760"
  },
  {
    "text": "Well, here's some code\nthat computes that.",
    "start": "785760",
    "end": "790050"
  },
  {
    "text": "There are 40,000\nentities in the KB.",
    "start": "790050",
    "end": "792959"
  },
  {
    "text": "So that's fewer than half as\nmany entities as in the corpus.",
    "start": "792960",
    "end": "796890"
  },
  {
    "text": "If you remember, the corpus\nhas 95,000 unique entities.",
    "start": "796890",
    "end": "801520"
  },
  {
    "text": "So there are lots of\nentities in the corpus that",
    "start": "801520",
    "end": "804990"
  },
  {
    "text": "don't appear in the KB at all.",
    "start": "804990",
    "end": "807930"
  },
  {
    "text": "But just like the corpus,\nthe most common entities",
    "start": "807930",
    "end": "810240"
  },
  {
    "text": "are dominated by geographic\nlocations, England, India,",
    "start": "810240",
    "end": "814080"
  },
  {
    "text": "Italy and so on.",
    "start": "814080",
    "end": "815340"
  },
  {
    "start": "815340",
    "end": "818760"
  },
  {
    "start": "818000",
    "end": "916000"
  },
  {
    "text": "Note that there's no\npromise or expectation",
    "start": "818760",
    "end": "822060"
  },
  {
    "text": "that this KB is complete.",
    "start": "822060",
    "end": "824460"
  },
  {
    "text": "For one thing, the\nKB doesn't even",
    "start": "824460",
    "end": "826470"
  },
  {
    "text": "contain many of the\nentities from the corpus.",
    "start": "826470",
    "end": "829259"
  },
  {
    "text": "And even for the\nentities it does include,",
    "start": "829260",
    "end": "831930"
  },
  {
    "text": "there may be possible triples\nwhich are true in the world",
    "start": "831930",
    "end": "836100"
  },
  {
    "text": "but are missing from the KB.",
    "start": "836100",
    "end": "839160"
  },
  {
    "text": "So as an example,\nthese triples are",
    "start": "839160",
    "end": "841139"
  },
  {
    "text": "in the KB, founders,\nTesla_Motors, Elon_Musk,",
    "start": "841140",
    "end": "844020"
  },
  {
    "text": "worked_at, Elon_Musk,\nTesla_Motors, Founders, SpaceX,",
    "start": "844020",
    "end": "848010"
  },
  {
    "text": "Elon_Musk.",
    "start": "848010",
    "end": "849030"
  },
  {
    "text": "You might expect to find\nworked_at, at, Elon_Musk,",
    "start": "849030",
    "end": "852150"
  },
  {
    "text": "SpaceX.",
    "start": "852150",
    "end": "853050"
  },
  {
    "text": "But nope, that triple\nis not in the KB.",
    "start": "853050",
    "end": "856500"
  },
  {
    "text": "That's weird.",
    "start": "856500",
    "end": "858360"
  },
  {
    "text": "Well, in fact, the whole\npoint of relation extraction",
    "start": "858360",
    "end": "861660"
  },
  {
    "text": "is to identify new relational\ntriples from natural language",
    "start": "861660",
    "end": "865740"
  },
  {
    "text": "text so that we can\nadd them to a KB.",
    "start": "865740",
    "end": "868800"
  },
  {
    "text": "If our KB's were complete, we\nwouldn't have anything to do.",
    "start": "868800",
    "end": "873570"
  },
  {
    "text": "Now actually, in\nthis case, you might",
    "start": "873570",
    "end": "876090"
  },
  {
    "text": "object that we don't need to\ndo relation extraction to make",
    "start": "876090",
    "end": "880440"
  },
  {
    "text": "that completion.",
    "start": "880440",
    "end": "881730"
  },
  {
    "text": "We could write some\nlogic that recognizes",
    "start": "881730",
    "end": "885089"
  },
  {
    "text": "that founders, xy\nentails worked at yx",
    "start": "885090",
    "end": "891060"
  },
  {
    "text": "and apply that\nrule systematically",
    "start": "891060",
    "end": "893730"
  },
  {
    "text": "across the KB and use that\nto fill in the missing",
    "start": "893730",
    "end": "897060"
  },
  {
    "text": "triple in this case.",
    "start": "897060",
    "end": "898890"
  },
  {
    "text": "But the general\npoint still stands",
    "start": "898890",
    "end": "900690"
  },
  {
    "text": "that there may be\nlots of triples",
    "start": "900690",
    "end": "903180"
  },
  {
    "text": "that are true in the world\nbut missing from the KB",
    "start": "903180",
    "end": "906750"
  },
  {
    "text": "where that strategy is not going\nto allow us to add the missing",
    "start": "906750",
    "end": "911400"
  },
  {
    "text": "information.",
    "start": "911400",
    "end": "913550"
  },
  {
    "start": "913550",
    "end": "917000"
  }
]