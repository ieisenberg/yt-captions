[
  {
    "text": "Welcome back.",
    "start": "0",
    "end": "1153"
  },
  {
    "text": "Today, we're going to go\nthrough the lab for chapter",
    "start": "1153",
    "end": "3320"
  },
  {
    "text": "10, the Deep Learning Lab.",
    "start": "3320",
    "end": "4910"
  },
  {
    "text": "And we'll see that\nthis is deep learning,",
    "start": "4910",
    "end": "9389"
  },
  {
    "text": "so it's supervised\nproblems, like we've seen",
    "start": "9390",
    "end": "12570"
  },
  {
    "text": "throughout much of the course.",
    "start": "12570",
    "end": "13820"
  },
  {
    "text": "But the way the code will\nlook slightly different",
    "start": "13820",
    "end": "18500"
  },
  {
    "text": "because we're not using\nscikit-learn to fit",
    "start": "18500",
    "end": "21108"
  },
  {
    "text": "these models.",
    "start": "21108",
    "end": "21650"
  },
  {
    "text": "We're using one of\nthe more popular",
    "start": "21650",
    "end": "24050"
  },
  {
    "text": "open-source deep learning\npackages-- the torch package.",
    "start": "24050",
    "end": "27289"
  },
  {
    "text": "So we'll see that the\nway we set up problems",
    "start": "27290",
    "end": "31100"
  },
  {
    "text": "is going to be slightly\ndifferent to the scikit-learn.",
    "start": "31100",
    "end": "33410"
  },
  {
    "text": "It's going to be a\nlittle more complicated.",
    "start": "33410",
    "end": "36220"
  },
  {
    "text": "But we'll see several examples.",
    "start": "36220",
    "end": "38190"
  },
  {
    "text": "And we will see\nenough so that we'll",
    "start": "38190",
    "end": "39980"
  },
  {
    "text": "see the repeating pattern.",
    "start": "39980",
    "end": "41810"
  },
  {
    "start": "41810",
    "end": "44870"
  },
  {
    "text": "So as usual, we have our\nimports at the beginning.",
    "start": "44870",
    "end": "48170"
  },
  {
    "text": "All of these ones up here in\nthe cell we've seen before.",
    "start": "48170",
    "end": "50850"
  },
  {
    "text": "And then we have some\ntorch-specific imports.",
    "start": "50850",
    "end": "53329"
  },
  {
    "text": "Now we haven't included torch\nas a dependency to ISLP.",
    "start": "53330",
    "end": "57590"
  },
  {
    "text": "So you'll have to use pip\nto install a few packages.",
    "start": "57590",
    "end": "60410"
  },
  {
    "text": "There are a few like torch.",
    "start": "60410",
    "end": "62360"
  },
  {
    "text": "And you'll see\nbelow torch vision,",
    "start": "62360",
    "end": "64128"
  },
  {
    "text": "torch metrics, torch info.",
    "start": "64129",
    "end": "66020"
  },
  {
    "text": "Only four or five.",
    "start": "66020",
    "end": "67130"
  },
  {
    "text": "And we'll have instructions on\nthe web page how to do that.",
    "start": "67130",
    "end": "69829"
  },
  {
    "text": "But we already saw how\nto install packages",
    "start": "69830",
    "end": "71720"
  },
  {
    "text": "with pip earlier.",
    "start": "71720",
    "end": "74600"
  },
  {
    "text": "So let's see one of the\nimportant-- one of the most",
    "start": "74600",
    "end": "80330"
  },
  {
    "text": "important things in\nthis module is this nn.",
    "start": "80330",
    "end": "83870"
  },
  {
    "text": "This nn stands for\nneural network.",
    "start": "83870",
    "end": "87020"
  },
  {
    "text": "And we'll see later when we\nspecify our loss function.",
    "start": "87020",
    "end": "91062"
  },
  {
    "text": "Because it's a\nsupervised problem,",
    "start": "91063",
    "end": "92480"
  },
  {
    "text": "we really just have to\nspecify the loss function.",
    "start": "92480",
    "end": "94640"
  },
  {
    "text": "We're going to use the module\npart, the module class from nn",
    "start": "94640",
    "end": "99860"
  },
  {
    "text": "as a key thing.",
    "start": "99860",
    "end": "100675"
  },
  {
    "text": "So that's going\nto help us set up",
    "start": "100675",
    "end": "102050"
  },
  {
    "text": "all the different hidden\nlayers of the neural network.",
    "start": "102050",
    "end": "106800"
  },
  {
    "text": "And so that's going to be one of\nthe key modules, part of that.",
    "start": "106800",
    "end": "113030"
  },
  {
    "text": "There are quite a\nfew imports, so I",
    "start": "113030",
    "end": "114710"
  },
  {
    "text": "don't think we should\ndwell too much on them.",
    "start": "114710",
    "end": "116909"
  },
  {
    "text": "Another key concept is this\nidea of a tensor data set.",
    "start": "116910",
    "end": "121070"
  },
  {
    "text": "So unlike earlier chapters where\nwe used dataframes and NumPy",
    "start": "121070",
    "end": "126050"
  },
  {
    "text": "arrays, there are\nsort of specific forms",
    "start": "126050",
    "end": "128660"
  },
  {
    "text": "of the data set for torch.",
    "start": "128660",
    "end": "130130"
  },
  {
    "text": "And that's because\ntorch or other packages",
    "start": "130130",
    "end": "134210"
  },
  {
    "text": "for fitting deep\nlearning models,",
    "start": "134210",
    "end": "137250"
  },
  {
    "text": "they will use data in\na different fashion.",
    "start": "137250",
    "end": "139290"
  },
  {
    "text": "They'll use the mini batch\nparadigm or something",
    "start": "139290",
    "end": "141290"
  },
  {
    "text": "like that.",
    "start": "141290",
    "end": "141810"
  },
  {
    "text": "So there's a lot of\noverhead that these packages",
    "start": "141810",
    "end": "144620"
  },
  {
    "text": "have written to deal with that.",
    "start": "144620",
    "end": "146040"
  },
  {
    "text": "So when we-- we'll take arrays\nand form them into tensor data",
    "start": "146040",
    "end": "149719"
  },
  {
    "text": "sets.",
    "start": "149720",
    "end": "150230"
  },
  {
    "text": "And that's going to be\nenough to tell torch",
    "start": "150230",
    "end": "152780"
  },
  {
    "text": "how to get the data to\nwhere it needs to go.",
    "start": "152780",
    "end": "155610"
  },
  {
    "text": "So torch is a fairly general\npurpose deep learning library.",
    "start": "155610",
    "end": "160040"
  },
  {
    "text": "And just using torch itself,\nif we were to fit the models,",
    "start": "160040",
    "end": "163849"
  },
  {
    "text": "it requires effectively writing\nstochastic gradient descent",
    "start": "163850",
    "end": "167390"
  },
  {
    "text": "yourself.",
    "start": "167390",
    "end": "167900"
  },
  {
    "text": "So that's kind of complicated.",
    "start": "167900",
    "end": "169385"
  },
  {
    "text": "There are some helper\npackages in particular,",
    "start": "169385",
    "end": "171260"
  },
  {
    "text": "this PyTorch Lightning that\nmakes it easier to fit.",
    "start": "171260",
    "end": "174569"
  },
  {
    "text": "And so there's some\ncommon patterns we'll use,",
    "start": "174570",
    "end": "178220"
  },
  {
    "text": "this trainer that\nencapsulates how",
    "start": "178220",
    "end": "180590"
  },
  {
    "text": "to-- once you know\nwhat the data is",
    "start": "180590",
    "end": "182910"
  },
  {
    "text": "and what the network is,\nhow to actually fit a model.",
    "start": "182910",
    "end": "185933"
  },
  {
    "text": "So we're going to use PyTorch\nLightning as a helper.",
    "start": "185933",
    "end": "188100"
  },
  {
    "text": "And we've even written\nin the ISLP package",
    "start": "188100",
    "end": "191220"
  },
  {
    "text": "some helpers for\nPyTorch Lightning.",
    "start": "191220",
    "end": "194130"
  },
  {
    "text": "And those are these imports\nwe hear from the ISLP.torch.",
    "start": "194130",
    "end": "198180"
  },
  {
    "text": "So I think, Jonathan, neural\nnetworks are quite complex.",
    "start": "198180",
    "end": "201180"
  },
  {
    "text": "And they can do amazing\nrange of things.",
    "start": "201180",
    "end": "203920"
  },
  {
    "text": "So, fortunately, there's a lot\nof these packages that have",
    "start": "203920",
    "end": "207060"
  },
  {
    "text": "been written to help us do it.",
    "start": "207060",
    "end": "209349"
  },
  {
    "text": "Yes.",
    "start": "209350",
    "end": "209850"
  },
  {
    "text": "Yeah, I mean, if we were\nto do this from scratch,",
    "start": "209850",
    "end": "211892"
  },
  {
    "text": "right, for instance,\nin regression.",
    "start": "211892",
    "end": "214002"
  },
  {
    "text": "We could have written\nregression from scratch.",
    "start": "214003",
    "end": "215920"
  },
  {
    "text": "But if we were to do\nthis from scratch,",
    "start": "215920",
    "end": "217180"
  },
  {
    "text": "it would just take forever.",
    "start": "217180",
    "end": "218305"
  },
  {
    "text": "But now we have these great\npackages that we can use.",
    "start": "218305",
    "end": "221459"
  },
  {
    "text": "We're going to start with\na really simple example,",
    "start": "221460",
    "end": "224015"
  },
  {
    "text": "to see how things work, yeah.",
    "start": "224015",
    "end": "225660"
  },
  {
    "text": "Yes.",
    "start": "225660",
    "end": "226295"
  },
  {
    "text": "So what we're\ngoing to start with",
    "start": "226295",
    "end": "227670"
  },
  {
    "text": "is the hitters data that\nwe've seen in other chapters.",
    "start": "227670",
    "end": "233640"
  },
  {
    "text": "In particular, in linear\nregression model selection.",
    "start": "233640",
    "end": "236220"
  },
  {
    "text": "I think in model selection,\nwe talked about this one.",
    "start": "236220",
    "end": "238450"
  },
  {
    "text": "So one of the things that\nthese packages have is,",
    "start": "238450",
    "end": "244250"
  },
  {
    "text": "like scikit-learn,\nyou can sort of",
    "start": "244250",
    "end": "246020"
  },
  {
    "text": "change the metric you\ncan use to evaluate.",
    "start": "246020",
    "end": "248010"
  },
  {
    "text": "So we're going to use mean\nabsolute error instead",
    "start": "248010",
    "end": "250580"
  },
  {
    "text": "of mean squared error.",
    "start": "250580",
    "end": "251660"
  },
  {
    "text": "But, OK.",
    "start": "251660",
    "end": "252650"
  },
  {
    "text": "So we're going to\nstart off somewhere",
    "start": "252650",
    "end": "257540"
  },
  {
    "text": "where we were before, that is,\nwe're going to have a design",
    "start": "257540",
    "end": "260028"
  },
  {
    "text": "matrix and a response.",
    "start": "260029",
    "end": "261859"
  },
  {
    "text": "An X and a Y like we\nhad in earlier chapters.",
    "start": "261860",
    "end": "264139"
  },
  {
    "text": "And we'll see how this\ngets transformed into data",
    "start": "264140",
    "end": "266870"
  },
  {
    "text": "that Torch can read in.",
    "start": "266870",
    "end": "268139"
  },
  {
    "text": "So this X and this\nY are just like we",
    "start": "268140",
    "end": "270320"
  },
  {
    "text": "saw in earlier chapters.",
    "start": "270320",
    "end": "271970"
  },
  {
    "text": "We've used model\nspec to create them.",
    "start": "271970",
    "end": "276080"
  },
  {
    "text": "And then we'll also make our\nusual training and test split.",
    "start": "276080",
    "end": "280310"
  },
  {
    "text": "And Torch can take a\ntest data set, as well as",
    "start": "280310",
    "end": "283790"
  },
  {
    "text": "a training data set, even\na validation data set.",
    "start": "283790",
    "end": "286190"
  },
  {
    "text": "And we'll see how\nto do that shortly.",
    "start": "286190",
    "end": "289610"
  },
  {
    "text": "OK, so we can, of course, fit\nour linear regression model.",
    "start": "289610",
    "end": "292400"
  },
  {
    "text": "We've already seen that.",
    "start": "292400",
    "end": "293630"
  },
  {
    "text": "We're just going to use this\nas a point of comparison",
    "start": "293630",
    "end": "297320"
  },
  {
    "text": "to see the accuracy, how\nwell these things can do.",
    "start": "297320",
    "end": "299570"
  },
  {
    "text": "So we're going to use\na standardized lasso.",
    "start": "299570",
    "end": "303180"
  },
  {
    "text": "Just before you go on, Jonathan.",
    "start": "303180",
    "end": "304560"
  },
  {
    "text": "Just let's remember the\nmean absolute error of 259",
    "start": "304560",
    "end": "309030"
  },
  {
    "text": "for the test data.",
    "start": "309030",
    "end": "310200"
  },
  {
    "text": "Yeah, and that's for a\nsimple linear regression.",
    "start": "310200",
    "end": "312760"
  },
  {
    "text": "And then we can compare\nthat to the Lasso.",
    "start": "312760",
    "end": "315630"
  },
  {
    "text": "The Lasso was 259 versus 257.",
    "start": "315630",
    "end": "319530"
  },
  {
    "text": "Very, close.",
    "start": "319530",
    "end": "320110"
  },
  {
    "text": "Very close.",
    "start": "320110",
    "end": "320849"
  },
  {
    "text": "And we're going to compare\nthat after fitting a pretty",
    "start": "320850",
    "end": "323280"
  },
  {
    "text": "simple neural network model.",
    "start": "323280",
    "end": "326040"
  },
  {
    "text": "OK, so now we're going to\nbuild our first network.",
    "start": "326040",
    "end": "328680"
  },
  {
    "text": "And this is going\nto use something",
    "start": "328680",
    "end": "331813"
  },
  {
    "text": "that we have not\ntouched yet, and that's",
    "start": "331813",
    "end": "333479"
  },
  {
    "text": "using classes in Python.",
    "start": "333480",
    "end": "335130"
  },
  {
    "text": "So we've written a lot\nof functions in Python",
    "start": "335130",
    "end": "338160"
  },
  {
    "text": "or used a lot of functions.",
    "start": "338160",
    "end": "339700"
  },
  {
    "text": "Now we have to actually\nwrite our own classes",
    "start": "339700",
    "end": "341910"
  },
  {
    "text": "or more specifically subclasses.",
    "start": "341910",
    "end": "343770"
  },
  {
    "text": "And let's take a look\nat what that looks like.",
    "start": "343770",
    "end": "347229"
  },
  {
    "text": "So this keyword class,\nthis is the first time",
    "start": "347230",
    "end": "349770"
  },
  {
    "text": "we've seen this in the lab.",
    "start": "349770",
    "end": "351639"
  },
  {
    "text": "So what is the format?",
    "start": "351640",
    "end": "353370"
  },
  {
    "text": "What are we doing here?",
    "start": "353370",
    "end": "356760"
  },
  {
    "text": "This bit of code\nhere is actually",
    "start": "356760",
    "end": "358680"
  },
  {
    "text": "specifying the architecture\nof the neural network.",
    "start": "358680",
    "end": "361720"
  },
  {
    "text": "And this is the way the Torch\npackage allows you to specify",
    "start": "361720",
    "end": "366370"
  },
  {
    "text": "the network architecture.",
    "start": "366370",
    "end": "369669"
  },
  {
    "text": "OK, so as I mentioned\nbefore, we're",
    "start": "369670",
    "end": "371530"
  },
  {
    "text": "going to use this\nnn.Module object.",
    "start": "371530",
    "end": "374290"
  },
  {
    "text": "And so, how to\nread this line here",
    "start": "374290",
    "end": "377020"
  },
  {
    "text": "is we're making a new\nclass called HittersModel.",
    "start": "377020",
    "end": "379970"
  },
  {
    "text": "And that's really going\nto be our representation",
    "start": "379970",
    "end": "381970"
  },
  {
    "text": "of the neural network\nwe're going to fit.",
    "start": "381970",
    "end": "383678"
  },
  {
    "text": "And it inherits from nn.Module.",
    "start": "383678",
    "end": "386950"
  },
  {
    "text": "And what's nice about\nthis inheritance is",
    "start": "386950",
    "end": "390340"
  },
  {
    "text": "that there's lots\nof things an object",
    "start": "390340",
    "end": "393160"
  },
  {
    "text": "can do based on its methods.",
    "start": "393160",
    "end": "395830"
  },
  {
    "text": "Here we're going to\ndefine two methods.",
    "start": "395830",
    "end": "398300"
  },
  {
    "text": "One, this __init method.",
    "start": "398300",
    "end": "401650"
  },
  {
    "text": "This is how the\nobject is created.",
    "start": "401650",
    "end": "403930"
  },
  {
    "text": "And one, the forward map.",
    "start": "403930",
    "end": "405340"
  },
  {
    "text": "And this is what's key\nfor the neural network.",
    "start": "405340",
    "end": "408199"
  },
  {
    "text": "This is what's going to be--",
    "start": "408200",
    "end": "409840"
  },
  {
    "text": "when we draw a picture like\nthis with these arrows,",
    "start": "409840",
    "end": "414010"
  },
  {
    "text": "this is evaluating\nthis forward map.",
    "start": "414010",
    "end": "416650"
  },
  {
    "text": "I'm just going to have a very\npoor man's neural network",
    "start": "416650",
    "end": "419960"
  },
  {
    "text": "there.",
    "start": "419960",
    "end": "420460"
  },
  {
    "text": "That network there, that's\nwhat the forward mapping codes.",
    "start": "420460",
    "end": "423940"
  },
  {
    "text": "OK.",
    "start": "423940",
    "end": "425170"
  },
  {
    "text": "So let's look at the\nkey parts of this cell",
    "start": "425170",
    "end": "429898"
  },
  {
    "text": "here because this\nis what we're going",
    "start": "429898",
    "end": "431440"
  },
  {
    "text": "to have to write each time\nwe want to fit a new network.",
    "start": "431440",
    "end": "434960"
  },
  {
    "text": "So it's really defining\nthe forward map",
    "start": "434960",
    "end": "437380"
  },
  {
    "text": "is all what we\nreally need to do.",
    "start": "437380",
    "end": "439450"
  },
  {
    "text": "This init method is where\nwe do some of the setup.",
    "start": "439450",
    "end": "443090"
  },
  {
    "text": "So in this case, we're going\nto have a single hidden layer",
    "start": "443090",
    "end": "447610"
  },
  {
    "text": "with 50 units.",
    "start": "447610",
    "end": "449389"
  },
  {
    "text": "So this 50 represents 50 units.",
    "start": "449390",
    "end": "455110"
  },
  {
    "text": "There are 19 features.",
    "start": "455110",
    "end": "456560"
  },
  {
    "text": "So this nn.Linear\ndefines an object",
    "start": "456560",
    "end": "461770"
  },
  {
    "text": "that maps 19 features\ninto 50 dimensions.",
    "start": "461770",
    "end": "464180"
  },
  {
    "text": "So there's 19 times 50\nparameters in that linear map.",
    "start": "464180",
    "end": "468100"
  },
  {
    "text": "Plus, 50 for the intercept,\nso actually 20 times.",
    "start": "468100",
    "end": "471040"
  },
  {
    "text": "1,000 parameters there.",
    "start": "471040",
    "end": "472870"
  },
  {
    "text": "We apply the ReLu\nfunction to it.",
    "start": "472870",
    "end": "475690"
  },
  {
    "text": "And then this\ndropout, you remember,",
    "start": "475690",
    "end": "477760"
  },
  {
    "text": "this, in the fitting\nprocess, randomly sets",
    "start": "477760",
    "end": "480460"
  },
  {
    "text": "some of the weights to 0, and\nthen outputs the 50 parameters",
    "start": "480460",
    "end": "484240"
  },
  {
    "text": "into a scalar\nresponse, the 1 here.",
    "start": "484240",
    "end": "487240"
  },
  {
    "text": "You're going to find that\nthese kinds of examples",
    "start": "487240",
    "end": "489669"
  },
  {
    "text": "are really helpful.",
    "start": "489670",
    "end": "490480"
  },
  {
    "text": "Because when you want\nto fit a neural network,",
    "start": "490480",
    "end": "492397"
  },
  {
    "text": "you'll go straight to\nan example like this.",
    "start": "492397",
    "end": "494290"
  },
  {
    "text": "And you'll change it so it\nmatches your own example.",
    "start": "494290",
    "end": "497740"
  },
  {
    "text": "Yes, OK.",
    "start": "497740",
    "end": "501220"
  },
  {
    "text": "And so, this\nsequential here, this",
    "start": "501220",
    "end": "504070"
  },
  {
    "text": "is meant to say that\nthis map is going",
    "start": "504070",
    "end": "507070"
  },
  {
    "text": "to be composed of these\nfour things in sequence.",
    "start": "507070",
    "end": "511210"
  },
  {
    "text": "OK, so now we have enough\nto define the forward map.",
    "start": "511210",
    "end": "516339"
  },
  {
    "text": "So first we flatten the x.",
    "start": "516340",
    "end": "521979"
  },
  {
    "text": "Though, actually, we may not\neven need that in this case.",
    "start": "521980",
    "end": "525579"
  },
  {
    "text": "But for the image\nexamples, we may need that.",
    "start": "525580",
    "end": "528140"
  },
  {
    "text": "And then we apply\nthese four maps",
    "start": "528140",
    "end": "529780"
  },
  {
    "text": "we defined and basically return,\nagain, the flattened version",
    "start": "529780",
    "end": "534130"
  },
  {
    "text": "of the array.",
    "start": "534130",
    "end": "536260"
  },
  {
    "text": "OK, so now this is defined the\nmapping from features, those 19",
    "start": "536260",
    "end": "541840"
  },
  {
    "text": "features, to an outcome.",
    "start": "541840",
    "end": "543865"
  },
  {
    "text": "OK?",
    "start": "543865",
    "end": "545372"
  },
  {
    "text": "So we haven't said anything\nabout the response.",
    "start": "545372",
    "end": "547330"
  },
  {
    "text": "The response comes in\nTorch when we relate this",
    "start": "547330",
    "end": "550090"
  },
  {
    "text": "to the loss function.",
    "start": "550090",
    "end": "551800"
  },
  {
    "text": "So now if we give\n19 features, if we",
    "start": "551800",
    "end": "557050"
  },
  {
    "text": "know the weights of this\nnetwork, we'll get an outcome.",
    "start": "557050",
    "end": "559529"
  },
  {
    "text": "And to train it, we're\ngoing to compare it",
    "start": "559530",
    "end": "561280"
  },
  {
    "text": "to the actual outcome.",
    "start": "561280",
    "end": "564277"
  },
  {
    "text": "So I guess I should\nsay, we get a prediction",
    "start": "564277",
    "end": "566110"
  },
  {
    "text": "when we pass the\nfeatures through.",
    "start": "566110",
    "end": "567940"
  },
  {
    "text": "And we'll compare\nit to an outcome.",
    "start": "567940",
    "end": "569960"
  },
  {
    "text": "So I'm just going to jump\nto the part where the loss--",
    "start": "569960",
    "end": "577970"
  },
  {
    "text": "I'll just jump actually.",
    "start": "577970",
    "end": "579803"
  },
  {
    "text": "Actually, let's look at\nthe summary, Jonathan.",
    "start": "579803",
    "end": "581720"
  },
  {
    "text": "That's interesting.",
    "start": "581720",
    "end": "582511"
  },
  {
    "text": "That shows you\nwhat's in the model.",
    "start": "582512",
    "end": "584270"
  },
  {
    "text": "OK, yes.",
    "start": "584270",
    "end": "586040"
  },
  {
    "text": "So to actually create this\nobject, like for scikit-learn,",
    "start": "586040",
    "end": "593089"
  },
  {
    "text": "you have to construct\nthe estimator.",
    "start": "593090",
    "end": "594680"
  },
  {
    "text": "And we've made it so it\ntakes one argument that",
    "start": "594680",
    "end": "597140"
  },
  {
    "text": "is the number of features.",
    "start": "597140",
    "end": "599150"
  },
  {
    "text": "There are 19 features.",
    "start": "599150",
    "end": "600380"
  },
  {
    "text": "So HittersModel 19,\nthat will fully specify",
    "start": "600380",
    "end": "602840"
  },
  {
    "text": "what that network looks like.",
    "start": "602840",
    "end": "604340"
  },
  {
    "text": "And as Trevor\nsaid, there's often",
    "start": "604340",
    "end": "608540"
  },
  {
    "text": "helper functions you\ncan use to sort of get",
    "start": "608540",
    "end": "610652"
  },
  {
    "text": "a sense of what the network\nis that you've specified.",
    "start": "610652",
    "end": "612860"
  },
  {
    "text": "This is actually\nvery helpful when",
    "start": "612860",
    "end": "614329"
  },
  {
    "text": "you get more complicated\nbecause, well, this",
    "start": "614330",
    "end": "616790"
  },
  {
    "text": "is already a simple network.",
    "start": "616790",
    "end": "619820"
  },
  {
    "text": "But enough to-- so\nthe summary function.",
    "start": "619820",
    "end": "622430"
  },
  {
    "text": "What we're going\nto do-- you can ask",
    "start": "622430",
    "end": "623953"
  },
  {
    "text": "for various things\nin the summary,",
    "start": "623953",
    "end": "625370"
  },
  {
    "text": "but one of the\nmost helpful things",
    "start": "625370",
    "end": "627140"
  },
  {
    "text": "is just to get a sense of what\neach layer expects as input,",
    "start": "627140",
    "end": "630200"
  },
  {
    "text": "what it outputs as output,\nand how many parameters",
    "start": "630200",
    "end": "633750"
  },
  {
    "text": "are in that layer.",
    "start": "633750",
    "end": "636390"
  },
  {
    "text": "OK, so looking at our\nHittersModel here.",
    "start": "636390",
    "end": "639370"
  },
  {
    "text": "So this 175, that's\nwhat we told it",
    "start": "639370",
    "end": "643050"
  },
  {
    "text": "to use for the number of rows\nin the input, how many are",
    "start": "643050",
    "end": "646290"
  },
  {
    "text": "in our training set.",
    "start": "646290",
    "end": "647589"
  },
  {
    "text": "So it takes 175 cases\nwith 19 features",
    "start": "647590",
    "end": "654030"
  },
  {
    "text": "and produce a prediction\nof 175 outcomes.",
    "start": "654030",
    "end": "657550"
  },
  {
    "text": "And you can see sort of\nin a tree-like fashion",
    "start": "657550",
    "end": "660899"
  },
  {
    "text": "how the networks are specified.",
    "start": "660900",
    "end": "663600"
  },
  {
    "text": "And then if you go\nthrough each row here,",
    "start": "663600",
    "end": "665850"
  },
  {
    "text": "you'll see the numbers\nthat you expect to see.",
    "start": "665850",
    "end": "668560"
  },
  {
    "text": "So we see 19 a few times.",
    "start": "668560",
    "end": "670230"
  },
  {
    "text": "And then we see the 50.",
    "start": "670230",
    "end": "671337"
  },
  {
    "text": "At that point, you've\nmoved up to the hidden",
    "start": "671337",
    "end": "673170"
  },
  {
    "text": "layer with 50 units.",
    "start": "673170",
    "end": "675209"
  },
  {
    "text": "And then the dropout gets\napplied there, and so on.",
    "start": "675210",
    "end": "678180"
  },
  {
    "text": "Until, eventually, you\nget down to 175, 1.",
    "start": "678180",
    "end": "681120"
  },
  {
    "text": "And that's your output.",
    "start": "681120",
    "end": "682150"
  },
  {
    "text": "Yes.",
    "start": "682150",
    "end": "682650"
  },
  {
    "text": "And if you look at\nthis in a web browser,",
    "start": "682650",
    "end": "687248"
  },
  {
    "text": "you'll see the actual\nnumber of parameters.",
    "start": "687248",
    "end": "689040"
  },
  {
    "text": "And you can see, for instance,\nthat this network here",
    "start": "689040",
    "end": "692820"
  },
  {
    "text": "will have the 1,000 parameters.",
    "start": "692820",
    "end": "695780"
  },
  {
    "text": "That's 50 times 19 plus\n50 for the intercept,",
    "start": "695780",
    "end": "699590"
  },
  {
    "text": "but they've been cut\noff on the tablet here.",
    "start": "699590",
    "end": "703280"
  },
  {
    "text": "OK, let's see how well\nit does, Jonathan.",
    "start": "703280",
    "end": "705560"
  },
  {
    "text": "OK.",
    "start": "705560",
    "end": "707750"
  },
  {
    "text": "Let's see how well it does.",
    "start": "707750",
    "end": "709970"
  },
  {
    "text": "And I guess-- well,\nit's important enough",
    "start": "709970",
    "end": "715790"
  },
  {
    "text": "to just sort of see how the\ndata are passed into Torch.",
    "start": "715790",
    "end": "719449"
  },
  {
    "text": "OK, you're getting\ntoo excited there.",
    "start": "719450",
    "end": "721550"
  },
  {
    "text": "With all these parameters, I\nwas expecting some good results.",
    "start": "721550",
    "end": "725045"
  },
  {
    "text": "Yes, that's fair.",
    "start": "725045",
    "end": "725810"
  },
  {
    "text": "But as I said because data\nis slightly different,",
    "start": "725810",
    "end": "729170"
  },
  {
    "text": "we have to package the data in\na way that Torch can use it.",
    "start": "729170",
    "end": "731790"
  },
  {
    "text": "And so, these X_train and\nX_test, Y_train, et cetera",
    "start": "731790",
    "end": "735680"
  },
  {
    "text": "are familiar to us.",
    "start": "735680",
    "end": "737060"
  },
  {
    "text": "They're NumPy arrays.",
    "start": "737060",
    "end": "738080"
  },
  {
    "text": "And we form different data sets.",
    "start": "738080",
    "end": "740450"
  },
  {
    "text": "A training data set\nand a test data set.",
    "start": "740450",
    "end": "743900"
  },
  {
    "text": "And that's, ultimately, what\nis going to get fed into Torch.",
    "start": "743900",
    "end": "748700"
  },
  {
    "text": "OK, so the way this is specified\nis we're going to have to--",
    "start": "748700",
    "end": "755970"
  },
  {
    "text": "it's a bit cumbersome,\nI'll admit.",
    "start": "755970",
    "end": "758699"
  },
  {
    "text": "It's fair to say.",
    "start": "758700",
    "end": "759480"
  },
  {
    "text": "But this pattern repeats itself.",
    "start": "759480",
    "end": "761170"
  },
  {
    "text": "So once you can\nunderstand the few steps,",
    "start": "761170",
    "end": "763470"
  },
  {
    "text": "then you can repeat\nthis for other problems.",
    "start": "763470",
    "end": "765490"
  },
  {
    "text": "So this simple data\nmodule is what's",
    "start": "765490",
    "end": "768120"
  },
  {
    "text": "going to tell Torch\nhow to read in the data",
    "start": "768120",
    "end": "771089"
  },
  {
    "text": "for stochastic gradient descent.",
    "start": "771090",
    "end": "772750"
  },
  {
    "text": "So here we're going to say\nwe want batches of size 32.",
    "start": "772750",
    "end": "775770"
  },
  {
    "text": "And we give a training\ndata set or a training--",
    "start": "775770",
    "end": "778600"
  },
  {
    "text": "which we specified\nbefore, the test data set.",
    "start": "778600",
    "end": "781750"
  },
  {
    "text": "And we also have an optional\nvalidation data set.",
    "start": "781750",
    "end": "784050"
  },
  {
    "text": "Here, we're just going to use\nthe test data as validation.",
    "start": "784050",
    "end": "786510"
  },
  {
    "text": "But you can put a fraction here\nif you want 20% of the training",
    "start": "786510",
    "end": "791550"
  },
  {
    "text": "data to be used for validation.",
    "start": "791550",
    "end": "793195"
  },
  {
    "text": "And, Jonathan, correct\nme if I'm wrong,",
    "start": "793195",
    "end": "794820"
  },
  {
    "text": "but simple data\nmodule is a function",
    "start": "794820",
    "end": "796950"
  },
  {
    "text": "we provide in the ISLP package\nto make this even easier.",
    "start": "796950",
    "end": "801460"
  },
  {
    "text": "Yes.",
    "start": "801460",
    "end": "801960"
  },
  {
    "start": "801960",
    "end": "804550"
  },
  {
    "text": "OK.",
    "start": "804550",
    "end": "805050"
  },
  {
    "text": "And, finally, as I said, we\nneed to specify the loss.",
    "start": "805050",
    "end": "808120"
  },
  {
    "text": "So there's a few common\nlosses we'll see in the class.",
    "start": "808120",
    "end": "811950"
  },
  {
    "text": "One is a regression loss,\nthat's squared error loss",
    "start": "811950",
    "end": "814080"
  },
  {
    "text": "and one is classification.",
    "start": "814080",
    "end": "815940"
  },
  {
    "text": "So this part here, if you\nnotice, it takes hit_model.",
    "start": "815940",
    "end": "820540"
  },
  {
    "text": "And, remember, this is\nthe network that tells us",
    "start": "820540",
    "end": "822899"
  },
  {
    "text": "how to make predictions.",
    "start": "822900",
    "end": "824910"
  },
  {
    "text": "And regression says we're going\nto use that law in a regression",
    "start": "824910",
    "end": "830610"
  },
  {
    "text": "loss.",
    "start": "830610",
    "end": "831370"
  },
  {
    "text": "So, ultimately, there\nwill be an argument",
    "start": "831370",
    "end": "833640"
  },
  {
    "text": "for the Y of the hit train.",
    "start": "833640",
    "end": "835170"
  },
  {
    "text": "The Y_train will be compared\nto hit_model of X_train",
    "start": "835170",
    "end": "839310"
  },
  {
    "text": "through squared error.",
    "start": "839310",
    "end": "840690"
  },
  {
    "text": "That's what that line means.",
    "start": "840690",
    "end": "841950"
  },
  {
    "text": "And we'll also track\nthe mean absolute error.",
    "start": "841950",
    "end": "845220"
  },
  {
    "text": "OK, so now I think, Trevor,\nwe're just about ready to fit--",
    "start": "845220",
    "end": "849509"
  },
  {
    "text": "yes.",
    "start": "849510",
    "end": "850230"
  },
  {
    "text": "So the last step is to\nput this all together",
    "start": "850230",
    "end": "852959"
  },
  {
    "text": "to run stochastic\ngradient descent.",
    "start": "852960",
    "end": "854470"
  },
  {
    "text": "And that's what\nthis cell is doing.",
    "start": "854470",
    "end": "856980"
  },
  {
    "text": "OK, so the last\nthing we specified",
    "start": "856980",
    "end": "859290"
  },
  {
    "text": "was this hit_module\nthate specified",
    "start": "859290",
    "end": "861930"
  },
  {
    "text": "it was a regression problem.",
    "start": "861930",
    "end": "863339"
  },
  {
    "text": "And this data module.",
    "start": "863340",
    "end": "865290"
  },
  {
    "text": "This is how we told Torch\nto run through the data",
    "start": "865290",
    "end": "870360"
  },
  {
    "text": "with batch sizes\nof 32, et cetera.",
    "start": "870360",
    "end": "872740"
  },
  {
    "text": "Now we'll tell it we want\n50 epochs and a few details",
    "start": "872740",
    "end": "877320"
  },
  {
    "text": "about logging.",
    "start": "877320",
    "end": "878310"
  },
  {
    "text": "This callbacks argument here.",
    "start": "878310",
    "end": "881260"
  },
  {
    "text": "This is actually what is going\nto allow us to make plots",
    "start": "881260",
    "end": "883800"
  },
  {
    "text": "as we go along the epochs.",
    "start": "883800",
    "end": "887399"
  },
  {
    "text": "So this error tracker is another\nlittle small helper thing",
    "start": "887400",
    "end": "890790"
  },
  {
    "text": "we add in the ISLP package\nso that in our logs,",
    "start": "890790",
    "end": "894579"
  },
  {
    "text": "we actually have the\nloss at every epoch",
    "start": "894580",
    "end": "897150"
  },
  {
    "text": "so we can plot those.",
    "start": "897150",
    "end": "899040"
  },
  {
    "text": "OK, that was a mouthful\nor several mouthfuls,",
    "start": "899040",
    "end": "903269"
  },
  {
    "text": "so let's see how it does.",
    "start": "903270",
    "end": "906077"
  },
  {
    "text": "Are you ready?",
    "start": "906077",
    "end": "906660"
  },
  {
    "text": "Yeah, I'm ready.",
    "start": "906660",
    "end": "907326"
  },
  {
    "text": "OK, so let's fit it.",
    "start": "907327",
    "end": "910068"
  },
  {
    "text": "And it'll give us\na bunch of messages",
    "start": "910068",
    "end": "911610"
  },
  {
    "text": "that it's running\nthrough the 50 epochs.",
    "start": "911610",
    "end": "913709"
  },
  {
    "text": "That'll be about 50\nlines here like this.",
    "start": "913710",
    "end": "915600"
  },
  {
    "text": "By the way, it's tedious to\nlook at all these blue things",
    "start": "915600",
    "end": "918870"
  },
  {
    "text": "when it's all finished and done.",
    "start": "918870",
    "end": "920380"
  },
  {
    "text": "But when you're sitting\nwaiting for the machine,",
    "start": "920380",
    "end": "922380"
  },
  {
    "text": "it's kind of nice seeing\nthese pop up sequentially",
    "start": "922380",
    "end": "925320"
  },
  {
    "text": "showing that--",
    "start": "925320",
    "end": "926003"
  },
  {
    "text": "--it tells you--",
    "start": "926003",
    "end": "926670"
  },
  {
    "text": "--it's working.",
    "start": "926670",
    "end": "926970"
  },
  {
    "text": "--work is being done.",
    "start": "926970",
    "end": "927928"
  },
  {
    "text": "Your work is being done, right?",
    "start": "927928",
    "end": "929220"
  },
  {
    "text": "Yes.",
    "start": "929220",
    "end": "930300"
  },
  {
    "text": "OK, so let's finally\nevaluate the performance.",
    "start": "930300",
    "end": "935709"
  },
  {
    "text": "Oh, I see the number.",
    "start": "935710",
    "end": "937300"
  },
  {
    "text": "test_mean absolute error 229.",
    "start": "937300",
    "end": "940360"
  },
  {
    "text": "And I think we had\n257 and 259 before.",
    "start": "940360",
    "end": "943360"
  },
  {
    "text": "Yeah, so that's\nquite a bit better.",
    "start": "943360",
    "end": "944990"
  },
  {
    "text": "Yes.",
    "start": "944990",
    "end": "945490"
  },
  {
    "text": "That's quite a bit better.",
    "start": "945490",
    "end": "946730"
  },
  {
    "text": "Yes.",
    "start": "946730",
    "end": "947230"
  },
  {
    "text": "So even though it was much more\ncomplex to specify the model",
    "start": "947230",
    "end": "950740"
  },
  {
    "text": "it paid off in this case.",
    "start": "950740",
    "end": "952000"
  },
  {
    "text": "Yes, and it may not pay off in\nevery case, but it has here.",
    "start": "952000",
    "end": "955600"
  },
  {
    "text": "We'll see later.",
    "start": "955600",
    "end": "958300"
  },
  {
    "text": "OK, so now let's make a plot.",
    "start": "958300",
    "end": "960019"
  },
  {
    "text": "So the results.",
    "start": "960020",
    "end": "961300"
  },
  {
    "text": "When we constructed something to\nlog the data, and it just makes",
    "start": "961300",
    "end": "965560"
  },
  {
    "text": "a CSV file that we\ncan load with Panda.",
    "start": "965560",
    "end": "968115"
  },
  {
    "text": "And we'll use that\nto make a few plots.",
    "start": "968115",
    "end": "969740"
  },
  {
    "text": "Let's take plot the error\nas a function of epoch.",
    "start": "969740",
    "end": "975040"
  },
  {
    "text": "So here we're going to plot\nthe mean absolute error",
    "start": "975040",
    "end": "978009"
  },
  {
    "text": "as a function of epoch.",
    "start": "978010",
    "end": "979180"
  },
  {
    "text": "And, actually, we maybe didn't\nneed to do 50 epochs here.",
    "start": "979180",
    "end": "983500"
  },
  {
    "text": "It settled down pretty\nquickly to a point.",
    "start": "983500",
    "end": "987350"
  },
  {
    "text": "But, in this case, training and\nvalidation are about the same.",
    "start": "987350",
    "end": "990069"
  },
  {
    "text": "We probably have not\noverfit too much.",
    "start": "990070",
    "end": "991780"
  },
  {
    "text": "It wasn't that complex\na model, I guess.",
    "start": "991780",
    "end": "994330"
  },
  {
    "text": "Notice how it's dancing\naround there, right?",
    "start": "994330",
    "end": "997540"
  },
  {
    "text": "Because after each\nepoch, you've used",
    "start": "997540",
    "end": "1002250"
  },
  {
    "text": "random subsets of the batches\nof the data to update.",
    "start": "1002250",
    "end": "1006780"
  },
  {
    "text": "So there's a certain\nelement of noise in this.",
    "start": "1006780",
    "end": "1010740"
  },
  {
    "text": "Yes, all of these network models\nuse stochastic gradient ascent",
    "start": "1010740",
    "end": "1014899"
  },
  {
    "text": "or some form of\nstochastic gradient ascent",
    "start": "1014900",
    "end": "1016650"
  },
  {
    "text": "to do the fitting.",
    "start": "1016650",
    "end": "1018060"
  },
  {
    "text": "OK, so that's a basic\nexample that shows you",
    "start": "1018060",
    "end": "1020700"
  },
  {
    "text": "how to go from NumPy arrays to\na simple single-layer network",
    "start": "1020700",
    "end": "1025709"
  },
  {
    "text": "model.",
    "start": "1025710",
    "end": "1027260"
  },
  {
    "start": "1027260",
    "end": "1031000"
  }
]