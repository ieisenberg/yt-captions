[
  {
    "text": "Welcome to Exploring Computing.",
    "start": "0",
    "end": "3690"
  },
  {
    "text": "Today's video is\nintroduction to Python--",
    "start": "3690",
    "end": "7170"
  },
  {
    "text": "Interacting with\nthe Python Shell.",
    "start": "7170",
    "end": "10140"
  },
  {
    "text": "So we've been\ninstructing the computer",
    "start": "10140",
    "end": "12120"
  },
  {
    "text": "how to carry out tasks for quite\na while now using HTML and CSS.",
    "start": "12120",
    "end": "17610"
  },
  {
    "text": "HTML and CSS are\ncomputer languages,",
    "start": "17610",
    "end": "20100"
  },
  {
    "text": "meaning that they are languages\nthat allow us to communicate",
    "start": "20100",
    "end": "24030"
  },
  {
    "text": "with the computer.",
    "start": "24030",
    "end": "25330"
  },
  {
    "text": "But they're not\nprogramming languages",
    "start": "25330",
    "end": "27030"
  },
  {
    "text": "because we aren't writing\nprograms with them.",
    "start": "27030",
    "end": "29460"
  },
  {
    "text": "So we're not going to switch\nto learning Python which",
    "start": "29460",
    "end": "32279"
  },
  {
    "text": "is a programming language,\nand the key distinction here",
    "start": "32280",
    "end": "35399"
  },
  {
    "text": "is that with Python, we're\ngoing to tell the computer",
    "start": "35400",
    "end": "38370"
  },
  {
    "text": "to step by step how\nto carry out a task.",
    "start": "38370",
    "end": "42600"
  },
  {
    "text": "Now this is going to\nbuild a lot on what",
    "start": "42600",
    "end": "44579"
  },
  {
    "text": "you've learned previously.",
    "start": "44580",
    "end": "45730"
  },
  {
    "text": "So as with HTML and CSS,\nPython has its own syntax",
    "start": "45730",
    "end": "50130"
  },
  {
    "text": "and semantics rules\nthat we need to learn.",
    "start": "50130",
    "end": "52450"
  },
  {
    "text": "And we'll edit our\nPython programs",
    "start": "52450",
    "end": "54660"
  },
  {
    "text": "in a text editor,\nwill be notified",
    "start": "54660",
    "end": "57660"
  },
  {
    "text": "if our Python programs\ndon't validate correctly",
    "start": "57660",
    "end": "60540"
  },
  {
    "text": "because they have\nsyntax errors that we'll",
    "start": "60540",
    "end": "62670"
  },
  {
    "text": "need to edit them if they do.",
    "start": "62670",
    "end": "64890"
  },
  {
    "text": "We'll see if our code actually\ndoes what we think it should.",
    "start": "64890",
    "end": "67750"
  },
  {
    "text": "And then if it doesn't,\nwe'll return to editing",
    "start": "67750",
    "end": "70050"
  },
  {
    "text": "and fix it as needed.",
    "start": "70050",
    "end": "71650"
  },
  {
    "text": "And so this is pretty much\nthe exact same process",
    "start": "71650",
    "end": "73740"
  },
  {
    "text": "we've been using\nfor HTML and CSS.",
    "start": "73740",
    "end": "77409"
  },
  {
    "text": "To get a copy of Python\ngo to www.python.org",
    "start": "77410",
    "end": "81910"
  },
  {
    "text": "and go to download.",
    "start": "81910",
    "end": "83680"
  },
  {
    "text": "And the latest version\nis 3.8.3 and that's",
    "start": "83680",
    "end": "87580"
  },
  {
    "text": "what should be at\nthe download link,",
    "start": "87580",
    "end": "89740"
  },
  {
    "text": "but anything labeled\n3.0 and above is fine.",
    "start": "89740",
    "end": "93740"
  },
  {
    "text": "So if you've already\ngot on your computer",
    "start": "93740",
    "end": "95450"
  },
  {
    "text": "or maybe you're sharing a\ncomputer with a roommate,",
    "start": "95450",
    "end": "98860"
  },
  {
    "text": "anything with 3.0\nand above is fine.",
    "start": "98860",
    "end": "101830"
  },
  {
    "text": "Anything with 2. something, that\nactually has different syntax",
    "start": "101830",
    "end": "106240"
  },
  {
    "text": "rules so you don't\nwant to use those.",
    "start": "106240",
    "end": "109390"
  },
  {
    "text": "OK, when you go ahead\nand download Python,",
    "start": "109390",
    "end": "111550"
  },
  {
    "text": "you're going to get a bunch of\ndifferent programs associated",
    "start": "111550",
    "end": "114850"
  },
  {
    "text": "with Python or a bunch\nof documentation.",
    "start": "114850",
    "end": "117606"
  },
  {
    "text": "The main thing we're\ngoing to be focusing on",
    "start": "117607",
    "end": "119440"
  },
  {
    "text": "is IDLE, which is the Python\nIntegrated Development",
    "start": "119440",
    "end": "122200"
  },
  {
    "text": "Environment.",
    "start": "122200",
    "end": "122860"
  },
  {
    "text": "There are two main\ncomponents to IDLE.",
    "start": "122860",
    "end": "126430"
  },
  {
    "text": "There's an editor which we'll\ntalk about in a little bit,",
    "start": "126430",
    "end": "130030"
  },
  {
    "text": "and then there's an\ninteractive Python interpreter",
    "start": "130030",
    "end": "132400"
  },
  {
    "text": "called the Python Shell.",
    "start": "132400",
    "end": "134170"
  },
  {
    "text": "And this is what we're going\nto focus on in this video.",
    "start": "134170",
    "end": "138370"
  },
  {
    "text": "A shell is a program\nthat allows us",
    "start": "138370",
    "end": "140080"
  },
  {
    "text": "to interact with a program\nor the operating system",
    "start": "140080",
    "end": "142900"
  },
  {
    "text": "by typing commands to it.",
    "start": "142900",
    "end": "144970"
  },
  {
    "text": "This mode of\ninteraction by typing",
    "start": "144970",
    "end": "147730"
  },
  {
    "text": "is sometimes referred to as\na Command Line Interface.",
    "start": "147730",
    "end": "150459"
  },
  {
    "text": "That's as oppresed to a\ngraphical user interface, which",
    "start": "150460",
    "end": "153010"
  },
  {
    "text": "is the type of interface that\nyou're probably more used to.",
    "start": "153010",
    "end": "157739"
  },
  {
    "text": "All right.",
    "start": "157740",
    "end": "158240"
  },
  {
    "text": "So if you've installed\nPython on your computer,",
    "start": "158240",
    "end": "161780"
  },
  {
    "text": "you'll get four different\nprograms associated with it.",
    "start": "161780",
    "end": "165950"
  },
  {
    "text": "And we're seeing\nthem right here,",
    "start": "165950",
    "end": "168222"
  },
  {
    "text": "as you can see the\none on the left",
    "start": "168223",
    "end": "169640"
  },
  {
    "text": "is marked IDLE that's the\nintegrated development",
    "start": "169640",
    "end": "171620"
  },
  {
    "text": "environment.",
    "start": "171620",
    "end": "172040"
  },
  {
    "text": "That's what we're\ngoing to be using.",
    "start": "172040",
    "end": "173540"
  },
  {
    "text": "There is a second\nversion of Python",
    "start": "173540",
    "end": "176959"
  },
  {
    "text": "which does not have the\neditor and sort of the menu",
    "start": "176960",
    "end": "182870"
  },
  {
    "text": "interface built into it,\nthat's the second one over.",
    "start": "182870",
    "end": "186319"
  },
  {
    "text": "We don't want that one\nyou want to use idle.",
    "start": "186320",
    "end": "188420"
  },
  {
    "text": "And then there's a\nbunch of documentation,",
    "start": "188420",
    "end": "190170"
  },
  {
    "text": "so go ahead and start the\none that's marked idle.",
    "start": "190170",
    "end": "194209"
  },
  {
    "text": "And you should see\nsomething like this.",
    "start": "194210",
    "end": "197510"
  },
  {
    "text": "So we can just interact\ndirectly with Python",
    "start": "197510",
    "end": "199730"
  },
  {
    "text": "by typing into this window.",
    "start": "199730",
    "end": "201334"
  },
  {
    "text": "Yes, as I suggest that that's\nactually what a shell is.",
    "start": "201335",
    "end": "204660"
  },
  {
    "text": "So if I type something like\n2 plus 3, and I hit Return,",
    "start": "204660",
    "end": "208560"
  },
  {
    "text": "Python is going\nto respond with 5.",
    "start": "208560",
    "end": "210569"
  },
  {
    "text": "And so we can use this\nPython Interactive",
    "start": "210570",
    "end": "213240"
  },
  {
    "text": "Shell as a basic\ncalculator, so if I",
    "start": "213240",
    "end": "216660"
  },
  {
    "text": "know that Paris and London\nare seven or eight kilometers",
    "start": "216660",
    "end": "220080"
  },
  {
    "text": "apart, and I want to know\nwhat that is in miles.",
    "start": "220080",
    "end": "223080"
  },
  {
    "text": "Here's the formula, miles\nequals 0.6214 times kilometers,",
    "start": "223080",
    "end": "226590"
  },
  {
    "text": "and so I can ask Python.",
    "start": "226590",
    "end": "229080"
  },
  {
    "text": "780 times 0.6214,\nin computer science,",
    "start": "229080",
    "end": "233650"
  },
  {
    "text": "we usually use the asterisks\nin place of the multiplication",
    "start": "233650",
    "end": "237030"
  },
  {
    "text": "sign.",
    "start": "237030",
    "end": "238230"
  },
  {
    "text": "And you can see that Python\nreplies that 484.38 miles.",
    "start": "238230",
    "end": "243030"
  },
  {
    "text": "And we can do\nsimilar calculations,",
    "start": "243030",
    "end": "244950"
  },
  {
    "text": "let's say I want to convert\nfrom Celsius in Fahrenheit.",
    "start": "244950",
    "end": "247810"
  },
  {
    "text": "So I have a friend\nwho's in Paris,",
    "start": "247810",
    "end": "249900"
  },
  {
    "text": "and she says it's\n19 degrees Celsius,",
    "start": "249900",
    "end": "252780"
  },
  {
    "text": "I have to say I really do\nhave no idea what that means.",
    "start": "252780",
    "end": "257489"
  },
  {
    "text": "But I do know what the\nformula is for conversion,",
    "start": "257490",
    "end": "259560"
  },
  {
    "text": "here's the formula\nfor conversion",
    "start": "259560",
    "end": "260935"
  },
  {
    "text": "and so I can say,\nhey, Python 19 times,",
    "start": "260935",
    "end": "264720"
  },
  {
    "text": "again using the asterisks for\ntimes, 9 divided by 5 plus 32.",
    "start": "264720",
    "end": "269640"
  },
  {
    "text": "And you can see we use\nthe there for division,",
    "start": "269640",
    "end": "273060"
  },
  {
    "text": "and Python is going to\nreturn with 66.2 degrees.",
    "start": "273060",
    "end": "276990"
  },
  {
    "text": "That sounds OK, maybe\na little cold for me.",
    "start": "276990",
    "end": "281849"
  },
  {
    "text": "And so here are the basic\narithmetic operations",
    "start": "281850",
    "end": "285030"
  },
  {
    "text": "that you can perform in Python.",
    "start": "285030",
    "end": "286440"
  },
  {
    "text": "You can add and subtract,\nyou can multiply and divide,",
    "start": "286440",
    "end": "289380"
  },
  {
    "text": "so those all look pretty\nnormal except for the use",
    "start": "289380",
    "end": "291720"
  },
  {
    "text": "of the astererisk\nfor multiplication,",
    "start": "291720",
    "end": "293650"
  },
  {
    "text": "which I mentioned several times.",
    "start": "293650",
    "end": "295229"
  },
  {
    "text": "And then this next line-- the\ndouble slash and the percentage",
    "start": "295230",
    "end": "298740"
  },
  {
    "text": "is used for inner division and\nthe percentage gets modulus.",
    "start": "298740",
    "end": "302940"
  },
  {
    "text": "I'll take a close look\nat that in a minute.",
    "start": "302940",
    "end": "304990"
  },
  {
    "text": "The double asterisk\ngives us power,",
    "start": "304990",
    "end": "306660"
  },
  {
    "text": "which again I'll take a\nlook at in just a minute.",
    "start": "306660",
    "end": "308800"
  },
  {
    "text": "So what's the difference between\ndivision and integer division?",
    "start": "308800",
    "end": "311940"
  },
  {
    "text": "Well, if I take 17\nand I divide it by 4",
    "start": "311940",
    "end": "314670"
  },
  {
    "text": "and I'm going to get a floating\npoint number, I get 4.25.",
    "start": "314670",
    "end": "319650"
  },
  {
    "text": "But if I don't want a\nfloating point number,",
    "start": "319650",
    "end": "323160"
  },
  {
    "text": "if I want just an\ninteger, I can use",
    "start": "323160",
    "end": "325420"
  },
  {
    "text": "a double, 17 double slash or\ninter division by 4 gives me 4.",
    "start": "325420",
    "end": "332280"
  },
  {
    "text": "We know that's not completely\naccurate, because we must have",
    "start": "332280",
    "end": "335250"
  },
  {
    "text": "some sort of integer remainder.",
    "start": "335250",
    "end": "336690"
  },
  {
    "text": "And so to get the\ninteger remainder,",
    "start": "336690",
    "end": "338190"
  },
  {
    "text": "I use the 17% 4 and\nagain the is referred",
    "start": "338190",
    "end": "342240"
  },
  {
    "text": "to as the modulus\noperator, and so 17 modulus",
    "start": "342240",
    "end": "345599"
  },
  {
    "text": "4 it gives me one.",
    "start": "345600",
    "end": "347850"
  },
  {
    "text": "So we can see that if I divide\n17 by 4 either have 4.25",
    "start": "347850",
    "end": "354750"
  },
  {
    "text": "or by carrying out these\ntwo separate operations I",
    "start": "354750",
    "end": "357660"
  },
  {
    "text": "can see that that is a 4 with\nan integer remainder of 1.",
    "start": "357660",
    "end": "362730"
  },
  {
    "text": "Why would I want to do this?",
    "start": "362730",
    "end": "363930"
  },
  {
    "text": "One common, reason why you\nmight want to do this is you're",
    "start": "363930",
    "end": "366509"
  },
  {
    "text": "working with times.",
    "start": "366510",
    "end": "367350"
  },
  {
    "text": "If I've got too hard 36\nminutes, and I want to know",
    "start": "367350",
    "end": "370230"
  },
  {
    "text": "how many hours that is?",
    "start": "370230",
    "end": "373620"
  },
  {
    "text": "I can take the 236 use\nin integer division",
    "start": "373620",
    "end": "377250"
  },
  {
    "text": "by 60, which will give me three.",
    "start": "377250",
    "end": "379560"
  },
  {
    "text": "And then I can use the modulus\noperator, which gives me 56.",
    "start": "379560",
    "end": "382650"
  },
  {
    "text": "And so I can say 236 minutes\nis 3 hours and 56 minutes.",
    "start": "382650",
    "end": "388590"
  },
  {
    "text": "OK, what about this power,\nthe double asterisk Well,",
    "start": "388590",
    "end": "394199"
  },
  {
    "text": "we're going to return to our\ndiscussion on binary here.",
    "start": "394200",
    "end": "398040"
  },
  {
    "text": "I'm sure some of you\nare thrilled great.",
    "start": "398040",
    "end": "401730"
  },
  {
    "text": "So what it's 2 to the eighth\npower or how many different",
    "start": "401730",
    "end": "404160"
  },
  {
    "text": "combinations of bits\ncan I have in 8 bits?",
    "start": "404160",
    "end": "410040"
  },
  {
    "text": "OK, so we know that we have 2\ndo the 8 different combinations",
    "start": "410040",
    "end": "414270"
  },
  {
    "text": "of zeros and ones in 8 bits.",
    "start": "414270",
    "end": "416430"
  },
  {
    "text": "What is 2 to the eighth?",
    "start": "416430",
    "end": "417770"
  },
  {
    "text": "Well, if I say 2\nasterisk 8, I get 256.",
    "start": "417770",
    "end": "424789"
  },
  {
    "text": "One issue that\ncomes up when we're",
    "start": "424790",
    "end": "426350"
  },
  {
    "text": "starting to do this\ninteger arithmetic",
    "start": "426350",
    "end": "428510"
  },
  {
    "text": "is something called\noperator precedent.",
    "start": "428510",
    "end": "430730"
  },
  {
    "text": "If I have 5 plus 3\ntimes 5, this could",
    "start": "430730",
    "end": "433370"
  },
  {
    "text": "be interpreted as 5\nplus and then 3 times",
    "start": "433370",
    "end": "436430"
  },
  {
    "text": "5, which would\ngive me 20; or this",
    "start": "436430",
    "end": "439220"
  },
  {
    "text": "could be interpreted as 5 plus\n3 times 5, which gives me 40.",
    "start": "439220",
    "end": "444920"
  },
  {
    "text": "And so it turns\nout that Python is",
    "start": "444920",
    "end": "446695"
  },
  {
    "text": "going to use the same rules\nthat you might remember",
    "start": "446695",
    "end": "448820"
  },
  {
    "text": "from algebra, and it's going\nto take the 3 times 5 as more",
    "start": "448820",
    "end": "452210"
  },
  {
    "text": "important and having higher\nprecedence than the 5 plus 3.",
    "start": "452210",
    "end": "455880"
  },
  {
    "text": "So 5 plus 3 times 5\nwith no parentheses",
    "start": "455880",
    "end": "459380"
  },
  {
    "text": "is going to give me\n5 plus 3 times 5,",
    "start": "459380",
    "end": "463400"
  },
  {
    "text": "so that's going to give me 20.",
    "start": "463400",
    "end": "465500"
  },
  {
    "text": "And these are actually\nthe same rules",
    "start": "465500",
    "end": "467540"
  },
  {
    "text": "that you might\nremember from algebra.",
    "start": "467540",
    "end": "469950"
  },
  {
    "text": "So multiplication and\ndivision will take precedence",
    "start": "469950",
    "end": "472400"
  },
  {
    "text": "over addition and subtraction.",
    "start": "472400",
    "end": "475580"
  },
  {
    "text": "Another area where it's\nambiguous on what happens",
    "start": "475580",
    "end": "479389"
  },
  {
    "text": "is the order in which operations\nwill take place if we've",
    "start": "479390",
    "end": "482150"
  },
  {
    "text": "got the same operation.",
    "start": "482150",
    "end": "484060"
  },
  {
    "text": "So 12 minus 6 minus 6 could\nbe 12 minus 6 minus 6,",
    "start": "484060",
    "end": "490940"
  },
  {
    "text": "which would give us 12; or it\ncould be 12 minus 6 minus 6,",
    "start": "490940",
    "end": "495260"
  },
  {
    "text": "which would give us zero.",
    "start": "495260",
    "end": "496680"
  },
  {
    "text": "And so here, Python is going to\ngroup these from left to right.",
    "start": "496680",
    "end": "499830"
  },
  {
    "text": "So 12 minus 6 minus 6 is\nactually 12 minus 6 minus 6,",
    "start": "499830",
    "end": "504349"
  },
  {
    "text": "and so that would\nactually give us a 0.",
    "start": "504350",
    "end": "506840"
  },
  {
    "text": "If you're ever in\ndoubt and you're not",
    "start": "506840",
    "end": "509030"
  },
  {
    "text": "really sure what the\nprecedent's operators are,",
    "start": "509030",
    "end": "511490"
  },
  {
    "text": "I'm just putting in parentheses.",
    "start": "511490",
    "end": "513200"
  },
  {
    "text": "By using the parentheses,\nyou completely",
    "start": "513200",
    "end": "515000"
  },
  {
    "text": "control what order these\nthings get carried out",
    "start": "515000",
    "end": "518840"
  },
  {
    "text": "and it's totally acceptable\nto go ahead and put",
    "start": "518840",
    "end": "522080"
  },
  {
    "text": "an extra parentheses.",
    "start": "522080",
    "end": "523099"
  },
  {
    "text": "And I often actually\nput in parentheses",
    "start": "523100",
    "end": "525319"
  },
  {
    "text": "to just sort of emphasize\nwhat's really going on.",
    "start": "525320",
    "end": "528480"
  },
  {
    "text": "So one thing that\nhappens when we're",
    "start": "528480",
    "end": "530240"
  },
  {
    "text": "starting to carry out\ncomplex calculations",
    "start": "530240",
    "end": "531995"
  },
  {
    "text": "is sometimes we'll want to\nstore intermediate results.",
    "start": "531995",
    "end": "536180"
  },
  {
    "text": "So if I'm trying to carry out\nthese operations in my head,",
    "start": "536180",
    "end": "539540"
  },
  {
    "text": "I may just write some\nintermediate results",
    "start": "539540",
    "end": "541579"
  },
  {
    "text": "on a piece of paper.",
    "start": "541580",
    "end": "542930"
  },
  {
    "text": "If we're working\nwith a calculator,",
    "start": "542930",
    "end": "545330"
  },
  {
    "text": "fancier calculator actually\nhave calculator memory",
    "start": "545330",
    "end": "547610"
  },
  {
    "text": "and the super fancy calculator\nactually have multiple memory",
    "start": "547610",
    "end": "550370"
  },
  {
    "text": "so I could say, hey, here's\nan intermediate result",
    "start": "550370",
    "end": "552589"
  },
  {
    "text": "I want to start that memory 1,\nhere's intermediate result I",
    "start": "552590",
    "end": "555920"
  },
  {
    "text": "want to start that memory 2,\nlet me recall it's in memory 1,",
    "start": "555920",
    "end": "559399"
  },
  {
    "text": "let me recall it to memory 2.",
    "start": "559400",
    "end": "561930"
  },
  {
    "text": "In programming when\nwe're writing programs",
    "start": "561930",
    "end": "564720"
  },
  {
    "text": "for the computer, we have an\ninfinite number of memories",
    "start": "564720",
    "end": "567420"
  },
  {
    "text": "and we don't want to\nhave to deal with,",
    "start": "567420",
    "end": "569579"
  },
  {
    "text": "Oh, did I store that in memory\n3, did I store that memory 72,",
    "start": "569580",
    "end": "573600"
  },
  {
    "text": "and so we're going to go ahead\nand give our memory locations",
    "start": "573600",
    "end": "577230"
  },
  {
    "text": "names to distinguish them.",
    "start": "577230",
    "end": "579029"
  },
  {
    "text": "And in computer science, these\nstorage locations in a program",
    "start": "579030",
    "end": "583440"
  },
  {
    "text": "are referred to as variables.",
    "start": "583440",
    "end": "585880"
  },
  {
    "text": "So here I want to store\nthe temperature in Celsius",
    "start": "585880",
    "end": "589715"
  },
  {
    "text": "and so I'm going to go ahead\nand create a variable called",
    "start": "589715",
    "end": "592090"
  },
  {
    "text": "Celsius and I'm going\nto go ahead and store",
    "start": "592090",
    "end": "594270"
  },
  {
    "text": "a 19 into that memory location.",
    "start": "594270",
    "end": "597180"
  },
  {
    "text": "And then I can go\nahead and retrieve",
    "start": "597180",
    "end": "598680"
  },
  {
    "text": "the value of what's in\nthat memory location",
    "start": "598680",
    "end": "600630"
  },
  {
    "text": "by just using the name Celsius.",
    "start": "600630",
    "end": "602170"
  },
  {
    "text": "So if I said Celsius\nequals 19, that",
    "start": "602170",
    "end": "606149"
  },
  {
    "text": "stores the 19 into the\nCelsius memory location.",
    "start": "606150",
    "end": "608670"
  },
  {
    "text": "And then when I\nagain say Celsius",
    "start": "608670",
    "end": "610500"
  },
  {
    "text": "times 9 divided by 5\nplus 32, the computer",
    "start": "610500",
    "end": "614130"
  },
  {
    "text": "sees that Celsius there--",
    "start": "614130",
    "end": "616830"
  },
  {
    "text": "it retrieves whatever is in\nthe Celsius computer storage",
    "start": "616830",
    "end": "620250"
  },
  {
    "text": "location and it uses it inside\nof our little mathematical",
    "start": "620250",
    "end": "623160"
  },
  {
    "text": "formula here.",
    "start": "623160",
    "end": "624329"
  },
  {
    "text": "And when it carries\nout the calculation,",
    "start": "624330",
    "end": "626940"
  },
  {
    "text": "it's actually going\nto give us 66.",
    "start": "626940",
    "end": "630320"
  },
  {
    "text": "If I change the value\nin the storage location",
    "start": "630320",
    "end": "632730"
  },
  {
    "text": "to let's say I say\nCelsius equals 30,",
    "start": "632730",
    "end": "635199"
  },
  {
    "text": "and then I carry out Celsius\ntimes 9 divided by 5 plus 32,",
    "start": "635200",
    "end": "639000"
  },
  {
    "text": "it retrieves the 30\ninstead of the 19,",
    "start": "639000",
    "end": "642690"
  },
  {
    "text": "and we can see that\ngives us an 86.",
    "start": "642690",
    "end": "645570"
  },
  {
    "text": "And so we have two\ndifferent steps here.",
    "start": "645570",
    "end": "648480"
  },
  {
    "text": "We have what's referred to\nas variable assignment where",
    "start": "648480",
    "end": "650790"
  },
  {
    "text": "we have the name of the\nvariable on the left followed",
    "start": "650790",
    "end": "653399"
  },
  {
    "text": "by an equal sign,\nfollowed by the value",
    "start": "653400",
    "end": "656310"
  },
  {
    "text": "we want to store into\nthat storage location",
    "start": "656310",
    "end": "658680"
  },
  {
    "text": "or into that variable.",
    "start": "658680",
    "end": "660130"
  },
  {
    "text": "And then we have\nvariable retrieval",
    "start": "660130",
    "end": "662010"
  },
  {
    "text": "where we refer to a particular\nvariable or star's location",
    "start": "662010",
    "end": "665550"
  },
  {
    "text": "by name and we want\nto retrieve the value.",
    "start": "665550",
    "end": "668980"
  },
  {
    "text": "And so the distinction here\nis if the name of the variable",
    "start": "668980",
    "end": "671910"
  },
  {
    "text": "is on the left-hand-side\nof an equal sign,",
    "start": "671910",
    "end": "673740"
  },
  {
    "text": "we are assigning into\nthat store's location.",
    "start": "673740",
    "end": "675959"
  },
  {
    "text": "And if a variable appears\nanywhere else other",
    "start": "675960",
    "end": "678690"
  },
  {
    "text": "than on the left-hand-side\nof equal sign--",
    "start": "678690",
    "end": "680670"
  },
  {
    "text": "so in the second example\nI have Celsius times 9,",
    "start": "680670",
    "end": "683519"
  },
  {
    "text": "that's not on the left-hand-side\nof the equals sign.",
    "start": "683520",
    "end": "685860"
  },
  {
    "text": "If I see the name of a\nvariable anywhere other",
    "start": "685860",
    "end": "688204"
  },
  {
    "text": "than on the left-hand-side\nof an equal sign, that's",
    "start": "688205",
    "end": "690330"
  },
  {
    "text": "a variable retrieval,\nwe're going",
    "start": "690330",
    "end": "692040"
  },
  {
    "text": "to go ahead and get the\nvalue that it's being stored",
    "start": "692040",
    "end": "694560"
  },
  {
    "text": "in that storage location.",
    "start": "694560",
    "end": "697300"
  },
  {
    "text": "Now, any time you're working\nwith variables in a programming",
    "start": "697300",
    "end": "701529"
  },
  {
    "text": "language, you need to know\nwhat the rules are for how",
    "start": "701530",
    "end": "704950"
  },
  {
    "text": "you can name those variables.",
    "start": "704950",
    "end": "706400"
  },
  {
    "text": "And here are the\nrules in Python.",
    "start": "706400",
    "end": "708760"
  },
  {
    "text": "Your variable names\nmust start with a letter",
    "start": "708760",
    "end": "710800"
  },
  {
    "text": "or the underscore character.",
    "start": "710800",
    "end": "714220"
  },
  {
    "text": "And they can only contain\nletters, numeric digits-",
    "start": "714220",
    "end": "718240"
  },
  {
    "text": "in other words zero\nor nine, or underscore",
    "start": "718240",
    "end": "721070"
  },
  {
    "text": "so you can't have dashes,\nyou can't have spaces,",
    "start": "721070",
    "end": "723520"
  },
  {
    "text": "you certainly can't have\nany punctuation symbols.",
    "start": "723520",
    "end": "726250"
  },
  {
    "text": "Just start it with the letter\nand mix letters and numbers",
    "start": "726250",
    "end": "730120"
  },
  {
    "text": "and underscores.",
    "start": "730120",
    "end": "732040"
  },
  {
    "text": "They are case sensitive.",
    "start": "732040",
    "end": "733290"
  },
  {
    "text": "So if I have Celsius\nwith a capital C",
    "start": "733290",
    "end": "735850"
  },
  {
    "text": "and Celsius with a\nlower case c, these",
    "start": "735850",
    "end": "738100"
  },
  {
    "text": "are going to refer to\ndifferent stores locations.",
    "start": "738100",
    "end": "740350"
  },
  {
    "text": "If I store something in\nCelsius with a capital C",
    "start": "740350",
    "end": "743529"
  },
  {
    "text": "and then I have a formula that\nuses Celsius with a lower case",
    "start": "743530",
    "end": "746265"
  },
  {
    "text": "c, that's not going to\nwork because it's going",
    "start": "746265",
    "end": "748990"
  },
  {
    "text": "to try and retrieve from the\nCelsius lowercase c location",
    "start": "748990",
    "end": "752770"
  },
  {
    "text": "not the Celsius with\nthe capital C. So that's",
    "start": "752770",
    "end": "755560"
  },
  {
    "text": "definitely something\nto pay attention to.",
    "start": "755560",
    "end": "757360"
  },
  {
    "text": "Some programming languages\nare case sensitive",
    "start": "757360",
    "end": "759310"
  },
  {
    "text": "and some are not.",
    "start": "759310",
    "end": "761918"
  },
  {
    "text": "Another issue that's\ngoing to come up",
    "start": "761918",
    "end": "763460"
  },
  {
    "text": "is programming languages\nuse different data types.",
    "start": "763460",
    "end": "766950"
  },
  {
    "text": "And so, in Python, we\nhave integer numbers",
    "start": "766950",
    "end": "771080"
  },
  {
    "text": "like for example 3, and\nthese are sometimes referred",
    "start": "771080",
    "end": "774200"
  },
  {
    "text": "to just shorthand as \"ints.\"",
    "start": "774200",
    "end": "775820"
  },
  {
    "text": "So you hear somebody\ntalking about an \"int\"",
    "start": "775820",
    "end": "778670"
  },
  {
    "text": "and they're a\nprogrammer, they're",
    "start": "778670",
    "end": "780320"
  },
  {
    "text": "talking about a integer value.",
    "start": "780320",
    "end": "783800"
  },
  {
    "text": "We have floating point\nnumbers like say 3.14,",
    "start": "783800",
    "end": "786740"
  },
  {
    "text": "these are numbers with\ndecimal point in them.",
    "start": "786740",
    "end": "790120"
  },
  {
    "text": "These are sometimes referred\nto just as \"floats.\"",
    "start": "790120",
    "end": "792500"
  },
  {
    "text": "And then we have strings, which\nare used to represent text.",
    "start": "792500",
    "end": "795980"
  },
  {
    "text": "And the term \"string\" comes\nfrom the concept of a string",
    "start": "795980",
    "end": "799790"
  },
  {
    "text": "of individual characters.",
    "start": "799790",
    "end": "803225"
  },
  {
    "text": "When we want to\nwrite a \"string,\"",
    "start": "803225",
    "end": "804600"
  },
  {
    "text": "we're going to use quotes.",
    "start": "804600",
    "end": "806360"
  },
  {
    "text": "If we don't have\nquotes, we basically",
    "start": "806360",
    "end": "808700"
  },
  {
    "text": "have have a variable name.",
    "start": "808700",
    "end": "809910"
  },
  {
    "text": "So I just see the word\nstanford by itself",
    "start": "809910",
    "end": "813740"
  },
  {
    "text": "with no quotes, that\nis actually referring",
    "start": "813740",
    "end": "815930"
  },
  {
    "text": "to the stanford variable.",
    "start": "815930",
    "end": "818060"
  },
  {
    "text": "And so the Python would\nsee the word Stanford",
    "start": "818060",
    "end": "821690"
  },
  {
    "text": "and say, Oh, you must\nhave a storage location",
    "start": "821690",
    "end": "824840"
  },
  {
    "text": "or variable name\nstanford, let me go ahead",
    "start": "824840",
    "end": "826740"
  },
  {
    "text": "and try and retrieve the value\nin that storage location.",
    "start": "826740",
    "end": "830130"
  },
  {
    "text": "If you put quotes\naround \"stanford,\"",
    "start": "830130",
    "end": "831830"
  },
  {
    "text": "it says, Oh, that's the string\nof character \"stanford,\"",
    "start": "831830",
    "end": "834440"
  },
  {
    "text": "you must be wanting to\nmanipulate and work with text.",
    "start": "834440",
    "end": "838910"
  },
  {
    "text": "Also note that\nwhen you're working",
    "start": "838910",
    "end": "841970"
  },
  {
    "text": "with a program such as\nMicrosoft Word or PowerPoint,",
    "start": "841970",
    "end": "847009"
  },
  {
    "text": "there are these angle quotes.",
    "start": "847010",
    "end": "848300"
  },
  {
    "text": "We've talked about this before,\nwe saw this with HTML and CSS,",
    "start": "848300",
    "end": "852380"
  },
  {
    "text": "those angled quotes\ndo not work for when",
    "start": "852380",
    "end": "856010"
  },
  {
    "text": "you're trying to designate\nsomething as a string.",
    "start": "856010",
    "end": "858650"
  },
  {
    "text": "And we use the non-angled quotes\naround the word \"stanford.\"",
    "start": "858650",
    "end": "861470"
  },
  {
    "text": "That's the string of characters\nrepresenting s-t-a-n-f-o-r-d.",
    "start": "861470",
    "end": "867920"
  },
  {
    "text": "If I put the angled quotes\naround the word \"stanford,\"",
    "start": "867920",
    "end": "871519"
  },
  {
    "text": "Python is going to be\nlike, Patrick, what",
    "start": "871520",
    "end": "873742"
  },
  {
    "text": "the heck are you doing?",
    "start": "873742",
    "end": "874700"
  },
  {
    "text": "I have no idea what this is.",
    "start": "874700",
    "end": "876600"
  },
  {
    "text": "All right.",
    "start": "876600",
    "end": "877100"
  },
  {
    "text": "We're going to return to\nstrings in the next lecture,",
    "start": "877100",
    "end": "879311"
  },
  {
    "text": "and you'll see why we\nmight want to use strings",
    "start": "879312",
    "end": "881270"
  },
  {
    "text": "and how we can use strings.",
    "start": "881270",
    "end": "883280"
  },
  {
    "text": "So far, what we've seen is\nthat the Python shell can",
    "start": "883280",
    "end": "885680"
  },
  {
    "text": "be used as a super\ncalculator which is handy",
    "start": "885680",
    "end": "888589"
  },
  {
    "text": "but we're not really quite\nthere for programming.",
    "start": "888590",
    "end": "890990"
  },
  {
    "text": "So tune into the\nnext video and we'll",
    "start": "890990",
    "end": "893390"
  },
  {
    "text": "add in some more\nPython features that",
    "start": "893390",
    "end": "895040"
  },
  {
    "text": "will allow us to create\nsome real programs.",
    "start": "895040",
    "end": "897759"
  },
  {
    "start": "897760",
    "end": "902358"
  }
]