[
  {
    "start": "0",
    "end": "7000"
  },
  {
    "text": "Hi, everyone. Let's get started. Hope the first\nhomework is going well.",
    "start": "7000",
    "end": "14800"
  },
  {
    "text": "So the topic for today\nis arithmetic coding. ",
    "start": "14800",
    "end": "20800"
  },
  {
    "text": "OK. OK, so quickly going over the\nquiz questions from last time.",
    "start": "20800",
    "end": "27079"
  },
  {
    "text": "So we had a question on you have\na binary source with this set,",
    "start": "27080",
    "end": "33670"
  },
  {
    "text": "with this probability\ndistribution, so Bernoulli 1/2. And we asked, What is the\nsize of the typical set",
    "start": "33670",
    "end": "39820"
  },
  {
    "text": "as a function of n? Anybody wants to\nguess the answer?",
    "start": "39820",
    "end": "46115"
  },
  {
    "start": "46115",
    "end": "51913"
  },
  {
    "text": "2 to the power of n. Yeah, I'm hearing 2 to the\npower n which is correct.",
    "start": "51913",
    "end": "57270"
  },
  {
    "text": "So this is sort\nof a special case. So last time we drew this\ndiagram where we said--",
    "start": "57270",
    "end": "62490"
  },
  {
    "text": "so this is like\nall the sequences and then we said like\nthere's a much smaller set, the typical set which has\nthe typical sequences.",
    "start": "62490",
    "end": "70830"
  },
  {
    "text": "But in this case, the\nentropy is actually 1. So actually, every\nsequence is typical.",
    "start": "70830",
    "end": "77085"
  },
  {
    "start": "77085",
    "end": "82260"
  },
  {
    "text": "Not every, like almost\nevery sequence is typical. ",
    "start": "82260",
    "end": "88780"
  },
  {
    "text": "I guess it depends on your\ndefinition of typicality. So if you consider\na definition where",
    "start": "88780",
    "end": "95810"
  },
  {
    "text": "if it's typical, if you\nhave exactly half zeros, half ones, then not every\nsequence is typical clearly.",
    "start": "95810",
    "end": "103910"
  },
  {
    "text": "But there are other\ndefinitions of typical under which typicality under\nwhich every sequence is typical.",
    "start": "103910",
    "end": "112115"
  },
  {
    "start": "112115",
    "end": "117229"
  },
  {
    "text": "Anybody who didn't\nget this question? I just want to hear\nlike some other views",
    "start": "117230",
    "end": "122930"
  },
  {
    "text": "on how people approach this just\nto make sure people followed. ",
    "start": "122930",
    "end": "133020"
  },
  {
    "text": "OK. OK, meet me after\nclass I guess if you thought of a different\nway of solving this. ",
    "start": "133020",
    "end": "141140"
  },
  {
    "text": "OK, so this question was about\nKL divergence relative entropy. So here we said we have a\nsource, Bernoulli 1/2 again.",
    "start": "141140",
    "end": "150870"
  },
  {
    "text": "We said Zoro knows the\ndistribution of this source, designs up per-symbol Huffman\ncode for this sequence.",
    "start": "150870",
    "end": "158510"
  },
  {
    "text": "So this code as you\nhave seen now many times",
    "start": "158510",
    "end": "165349"
  },
  {
    "text": "is just going to be\nthis very simple code because on two symbols\nthis is the Huffman code.",
    "start": "165350",
    "end": "171970"
  },
  {
    "text": "However, Luffy doesn't\nknow the distribution and encodes it using a\nper-symbol code assuming some other distribution.",
    "start": "171970",
    "end": "179530"
  },
  {
    "text": "But you again know that for\nbinary per-symbol Huffman code",
    "start": "179530",
    "end": "185110"
  },
  {
    "text": "is always going to be this tree. So the question was, How many\nextra bits in expectation",
    "start": "185110",
    "end": "191590"
  },
  {
    "text": "does Luffy need\nover Zoro to encode a sequence from the source, P?",
    "start": "191590",
    "end": "196630"
  },
  {
    "text": " It's going to be 0. There is no penalty\nbecause it's the same code.",
    "start": "196630",
    "end": "204745"
  },
  {
    "text": " Yeah, next question\nwas we asked you",
    "start": "204745",
    "end": "214210"
  },
  {
    "text": "to tell the KL divergence\nbetween the distributions, P and Q. And I calculated\nthis at home.",
    "start": "214210",
    "end": "220060"
  },
  {
    "text": "So this is just this calculation\nbased on the formula of the KL divergence. ",
    "start": "220060",
    "end": "233440"
  },
  {
    "text": "And this comes out to be 0.2. And the third part\nwas, OK, so this",
    "start": "233440",
    "end": "239990"
  },
  {
    "text": "is more of the real question. That in class we learned\nthat KL divergence, so last time covered that KL\ndivergence is an indicator.",
    "start": "239990",
    "end": "247280"
  },
  {
    "text": "Like it tells you how much\nexcess code length would you use if your distribution\nfor which you designed the code",
    "start": "247280",
    "end": "253640"
  },
  {
    "text": "doesn't match the\nreal distribution from which the data is coming. But we see here that we are\nnot paying any penalty here.",
    "start": "253640",
    "end": "261230"
  },
  {
    "text": "Even though the KL divergence\nis 0.2075, why is that?",
    "start": "261230",
    "end": "277900"
  },
  {
    "text": "Is an indicator of like how\nmuch you may have of entropy. And since in this case you're--",
    "start": "277900",
    "end": "284259"
  },
  {
    "text": "it was a little bit\neasier for 2 pi over-- we got actually-- ",
    "start": "284260",
    "end": "292620"
  },
  {
    "text": "Yeah, so a suggestion is that\nthe way it was stated last time",
    "start": "292620",
    "end": "298380"
  },
  {
    "text": "was that if you have an optimal\ncode for both distributions using log 1/P bits\nor log 1/Q bits then",
    "start": "298380",
    "end": "306270"
  },
  {
    "text": "you compute the penalty\nfor using the wrong code. But in this particular case, you\nsee that this code this does not",
    "start": "306270",
    "end": "319450"
  },
  {
    "text": "achieve the entropy for Q. So if\nyou had a large block size, then",
    "start": "319450",
    "end": "339420"
  },
  {
    "text": "actually this would hold. So then you would get--",
    "start": "339420",
    "end": "344490"
  },
  {
    "text": "So oftentimes, many of these\nresults are for large and or when you're\napproaching optimality.",
    "start": "344490",
    "end": "349920"
  },
  {
    "text": "They may or may\nnot hold when you have in the last quiz we saw an\nexample where you had something",
    "start": "349920",
    "end": "356310"
  },
  {
    "text": "where Huffman code was\noptimal in expectation but it was not optimal\nfor a particular instance of the source.",
    "start": "356310",
    "end": "362460"
  },
  {
    "text": "Similarly, a code like this\nresult can hold in expectation.",
    "start": "362460",
    "end": "367680"
  },
  {
    "text": "It holds on average when\nyou have optimal codes but it might not hold if you are\nlooking at a particular sequence",
    "start": "367680",
    "end": "374550"
  },
  {
    "text": "or if you do not\nhave optimal codes. ",
    "start": "374550",
    "end": "381879"
  },
  {
    "text": "OK, any questions on the quiz? ",
    "start": "381880",
    "end": "389860"
  },
  {
    "text": "OK, so now we'll get started. Almost all of these\nslides are from last year",
    "start": "389860",
    "end": "394930"
  },
  {
    "text": "where Kedar made the slides\nand taught the lecture, so I will be using them. ",
    "start": "394930",
    "end": "405240"
  },
  {
    "text": "So this is a recurring\ntheme we have been seeing for a few lectures now. So we'll finally look\nat a good solution",
    "start": "405240",
    "end": "410670"
  },
  {
    "text": "which is that symbol\ncodes are not optimal. So this particular\nexample, let's",
    "start": "410670",
    "end": "416340"
  },
  {
    "text": "say you have A and B where\nA has probability 0.1, B has probability 0.9.",
    "start": "416340",
    "end": "422250"
  },
  {
    "text": "And the entropy here you\ncan calculate is 0.47 bits. But we saw that a\nsymbol Huffman code only",
    "start": "422250",
    "end": "428790"
  },
  {
    "text": "gets you one bit per symbol. So clearly, there is a gap. We have seen that now.",
    "start": "428790",
    "end": "435840"
  },
  {
    "text": "Ideally, and we also read\nthat in an ideal setting for a symbol, s,\nyou want to spend",
    "start": "435840",
    "end": "441780"
  },
  {
    "text": "log 1/P of s bits per\nsymbol for that symbol. But the issue happens is that\nthis is an important point that",
    "start": "441780",
    "end": "451259"
  },
  {
    "text": "you are using symbol codes so\nyou cannot use fractional bits. So whenever this log\n1/Ps is not an integer,",
    "start": "451260",
    "end": "457650"
  },
  {
    "text": "it is just impossible\nfor you to be optimal. You pay the ceiling of that\nor something like that.",
    "start": "457650",
    "end": "464100"
  },
  {
    "text": "So that just poses a\nfundamental limit on if you are using\nsymbol codes, there",
    "start": "464100",
    "end": "469360"
  },
  {
    "text": "will be some\nsuboptimality there. So that's why we see this\none bit overhead which",
    "start": "469360",
    "end": "476410"
  },
  {
    "text": "we have been seeing. We saw that-- we saw this\nresult a few lectures ago",
    "start": "476410",
    "end": "483590"
  },
  {
    "text": "where you had like the expected\nlength of Huffman codes was less than or equal to the\nexpected length of Shannon",
    "start": "483590",
    "end": "490820"
  },
  {
    "text": "codes. And you had the lower\nbound which was the entropy",
    "start": "490820",
    "end": "495850"
  },
  {
    "text": "and you had the upper bound\nwhich was entropy plus 1.",
    "start": "495850",
    "end": "501370"
  },
  {
    "text": "So there was this plus 1\nfactor we have been seeing. ",
    "start": "501370",
    "end": "507120"
  },
  {
    "text": "Another thing we saw in the last\nlecture was this AEP property.",
    "start": "507120",
    "end": "512610"
  },
  {
    "text": "And what was AEP property? We saw that in the\nquiz question just now. That you have the universe\nof all possible n length",
    "start": "512610",
    "end": "520320"
  },
  {
    "text": "sequences and then you\nhave the typical set which is a much smaller subset. And what we saw was as you--",
    "start": "520320",
    "end": "530490"
  },
  {
    "text": "as n becomes bigger and bigger,\nalmost all of the probability",
    "start": "530490",
    "end": "535680"
  },
  {
    "text": "is concentrated in this\nsmall set in the typical set. And within the typical\nset, you effectively",
    "start": "535680",
    "end": "541680"
  },
  {
    "text": "have a uniform distribution. So really, what happens is\nlike when n becomes bigger,",
    "start": "541680",
    "end": "547200"
  },
  {
    "text": "you have a very small\nnumber of sequences that comprise the whole probability. And within that small\nnumber of sequences,",
    "start": "547200",
    "end": "553710"
  },
  {
    "text": "it's a uniform distribution. And based on that, we\nsaw a coding scheme that we saw worked pretty well.",
    "start": "553710",
    "end": "561509"
  },
  {
    "text": "So really, this is the reason\nlike if you take a Huffman code",
    "start": "561510",
    "end": "566550"
  },
  {
    "text": "and you keep on increasing\nthe block size more and more, at some scale what\nyou will start seeing is all the\ntypical sequences start",
    "start": "566550",
    "end": "574020"
  },
  {
    "text": "getting similar code lengths\nwith the Huffman code. And all the\nnon-typical sequences start getting very long code\nlengths with the Huffman code",
    "start": "574020",
    "end": "581790"
  },
  {
    "text": "or Shannon codes. Any of these codes they will\nhave the same property where your set is sort of\nsplit into two parts",
    "start": "581790",
    "end": "589290"
  },
  {
    "text": "to some degree of\napproximation where all the typical sequences are\ncoded with a fixed length code,",
    "start": "589290",
    "end": "595140"
  },
  {
    "text": "and all the non typical are also\ncoded with a fixed length code but with a much longer length.",
    "start": "595140",
    "end": "600990"
  },
  {
    "text": "So that's just intuition we saw. But that doesn't tell us how\nto actually do this practically",
    "start": "600990",
    "end": "606940"
  },
  {
    "text": "and that is the theme\nof today's lecture. OK, so we saw the solution.",
    "start": "606940",
    "end": "612790"
  },
  {
    "text": "One solution was\nto use block codes. And we said we could-- we did some examples\nin quiz and in class",
    "start": "612790",
    "end": "618752"
  },
  {
    "text": "where you have-- you take\ntwo symbols at a time and then overhead is\none bit per two symbols. So it's like half\nbit per symbol.",
    "start": "618752",
    "end": "624970"
  },
  {
    "text": "And here you keep\nincreasing the block size, your entropy is 0.47.",
    "start": "624970",
    "end": "630820"
  },
  {
    "text": "And you see how the average\ncode length it slowly decreases and actually becomes\nvery close to the entropy after",
    "start": "630820",
    "end": "637360"
  },
  {
    "text": "at block length 5. So that's good. ",
    "start": "637360",
    "end": "644800"
  },
  {
    "text": "And here you draw\nsome code lengths. So at block size 1, it's\njust the simple code, AB.",
    "start": "644800",
    "end": "650800"
  },
  {
    "text": "Block size 2, block size 3,\nyou can keep making these. ",
    "start": "650800",
    "end": "661089"
  },
  {
    "text": "And these are the\nresults that we saw where the expected\nlength is between X plus 1",
    "start": "661090",
    "end": "666340"
  },
  {
    "text": "and HX for a single\nsymbol, and when you're working with\nblocks of size B then the overhead\nbecomes 1/B instead of 1.",
    "start": "666340",
    "end": "674050"
  },
  {
    "text": "And this is just a recap still. ",
    "start": "674050",
    "end": "681570"
  },
  {
    "text": "OK, any questions so far? Are we comfortable with why\nblock codes will achieve entropy",
    "start": "681570",
    "end": "688080"
  },
  {
    "text": "as you make the\nblock size bigger and bigger because your\noverhead becomes 1/B? And as B becomes\nbigger, the overhead",
    "start": "688080",
    "end": "693810"
  },
  {
    "text": "becomes smaller and smaller.  OK.",
    "start": "693810",
    "end": "700089"
  },
  {
    "text": "Yeah, still recap. So we see that the convergence\nto entropy is good,",
    "start": "700090",
    "end": "705870"
  },
  {
    "text": "1/B is not the worst\nconvergence rate. It's not very practical.",
    "start": "705870",
    "end": "713370"
  },
  {
    "text": "We saw last time this\nexponential curve. As your codebook size increases,\nyou need more space to store it,",
    "start": "713370",
    "end": "721320"
  },
  {
    "text": "you need more space to\nconstruct the codebook. So your memory usage increases.",
    "start": "721320",
    "end": "727620"
  },
  {
    "text": "It very quickly as you might\nhave seen in other places, exponential complexity\nis very bad. At 10 maybe it's manageable,\nat 20 it's filling up your RAM.",
    "start": "727620",
    "end": "736140"
  },
  {
    "text": "And at 30 it won't\nfit any supercomputer. It increases very fast.",
    "start": "736140",
    "end": "741680"
  },
  {
    "text": "So really, it's not like\nthe appropriate way. ",
    "start": "741680",
    "end": "749589"
  },
  {
    "text": "And one sort of point is\nthat the problem really becomes very acute.",
    "start": "749590",
    "end": "755950"
  },
  {
    "text": "If HX is small,\nthen what happens",
    "start": "755950",
    "end": "761670"
  },
  {
    "text": "is the 1/B overhead might be\nvery, very big compared to HX.",
    "start": "761670",
    "end": "766980"
  },
  {
    "text": "And in that case, you really\nneed a very big block size to get close to the entropy. So if your HX is\nlike let's say 0.01,",
    "start": "766980",
    "end": "775139"
  },
  {
    "text": "then you need block size around\n100 to be within a factor of 2",
    "start": "775140",
    "end": "781170"
  },
  {
    "text": "for like 2x entropy, basically.",
    "start": "781170",
    "end": "786821"
  },
  {
    "start": "786821",
    "end": "794480"
  },
  {
    "text": "So there are situations\nwhere this is just not going to work out.",
    "start": "794480",
    "end": "799950"
  },
  {
    "text": "So larger codebook, difficult\nto handle device memory. Another aspect that we\nmaybe haven't talked as much",
    "start": "799950",
    "end": "807090"
  },
  {
    "text": "is latency. So now what happens if\nyou have a big block size? You cannot start decoding until\nyou have received B symbols",
    "start": "807090",
    "end": "815330"
  },
  {
    "text": "at a time. So you can only encode\nB symbols at a time. You can only decode\nB symbols at a time.",
    "start": "815330",
    "end": "821590"
  },
  {
    "text": "So it's not streaming,\nit's not really streaming. It's more blocky which may or\nmay not be a problem depending",
    "start": "821590",
    "end": "830183"
  },
  {
    "text": "on your setting.  OK, maybe let me\nwrite another issue is",
    "start": "830183",
    "end": "837050"
  },
  {
    "text": "that depending on your\nblock size, you will have--",
    "start": "837050",
    "end": "842990"
  },
  {
    "text": "you will have these\nboundary conditions where if your if your data is\nnot a multiple of B, so then",
    "start": "842990",
    "end": "853140"
  },
  {
    "text": "you also need to handle\nall those cases where you have some data at the\nend which is not exactly",
    "start": "853140",
    "end": "859050"
  },
  {
    "text": "a multiple of B.",
    "start": "859050",
    "end": "867220"
  },
  {
    "text": "OK. OK, so that's it for the recap. I will stop here. ",
    "start": "867220",
    "end": "873790"
  },
  {
    "text": "We will clearly see there\nis a need for something better than block coding.",
    "start": "873790",
    "end": "879220"
  },
  {
    "text": "So let's see what\nis the new thing. OK.",
    "start": "879220",
    "end": "884550"
  },
  {
    "text": "So arithmetic coding. This is the thing\nwe will learn about. So after Shannon did\nhis work in 1948,",
    "start": "884550",
    "end": "894240"
  },
  {
    "text": "there was a very long\ntime before somebody was able to achieve the entropy\nin a practical way which",
    "start": "894240",
    "end": "901170"
  },
  {
    "text": "was arithmetic coding. This was in the 1970s. Unfortunately, they\npatented the algorithm",
    "start": "901170",
    "end": "907740"
  },
  {
    "text": "which led to a further\ndelay of like 15, 20 years before people actually\nstarted using it widely.",
    "start": "907740",
    "end": "915960"
  },
  {
    "text": "But it's a very nice algorithm. So let's look at some\nof its properties first.",
    "start": "915960",
    "end": "922620"
  },
  {
    "text": "So first property is that\nthe data, entire data",
    "start": "922620",
    "end": "928029"
  },
  {
    "text": "is a single block. You don't need to split\nthe data into block size, B. If you give it like\n1 million symbols,",
    "start": "928030",
    "end": "934120"
  },
  {
    "text": "you get a block\nsize of 1 million. So it's a streaming\nalgorithm in that sense.",
    "start": "934120",
    "end": "941110"
  },
  {
    "text": "The codeword is\ncomputed on the fly. So you don't need to maintain\na huge codebook in your memory.",
    "start": "941110",
    "end": "948130"
  },
  {
    "text": "It is on the fly. And it is very efficient in the\nsense of you remember that 1/B,",
    "start": "948130",
    "end": "954850"
  },
  {
    "text": "here you have 2/n. But you see that you can\nmake n very, very large.",
    "start": "954850",
    "end": "960279"
  },
  {
    "text": "If your data is 1 million,\nthis is 2/1,000,000, overhead over entropy. It's very efficient.",
    "start": "960280",
    "end": "967890"
  },
  {
    "text": " And obviously, it's bound like\nin practice it might actually",
    "start": "967890",
    "end": "972970"
  },
  {
    "text": "be less than the 2/n. ",
    "start": "972970",
    "end": "979580"
  },
  {
    "text": "Yep, any questions? ",
    "start": "979580",
    "end": "986310"
  },
  {
    "text": "Are you explaining that the\nentire data is a single block? On that one right there.",
    "start": "986310",
    "end": "992700"
  },
  {
    "text": "Yeah. Yeah, so it's like if you give\nit a sequence of length, n, if you're using Huffman coding\nwith block size B, what you",
    "start": "992700",
    "end": "999210"
  },
  {
    "text": "would do is you would split\nthe n, n/B parts each of which",
    "start": "999210",
    "end": "1004430"
  },
  {
    "text": "you will encode separately. Here you encode the\nentire sequence at once",
    "start": "1004430",
    "end": "1011510"
  },
  {
    "text": "in a single pass, in a way. So it's just like a stream\ngoing in a stream going out.",
    "start": "1011510",
    "end": "1016550"
  },
  {
    "text": "There is no notion of\nblocking the data in any way. And I think the best way\nto understand this block",
    "start": "1016550",
    "end": "1024560"
  },
  {
    "text": "size equal to n is that the\noverhead of the algorithm is in terms of n. So if your data is\nlike of size 1,000,",
    "start": "1024560",
    "end": "1031130"
  },
  {
    "text": "then your overhead is 2/1,000. Was that the full problem?",
    "start": "1031130",
    "end": "1036699"
  },
  {
    "text": "We will come to that\ntowards the end of the-- that's algorithm-specific. Yeah, yeah.",
    "start": "1036700",
    "end": "1041970"
  },
  {
    "start": "1041970",
    "end": "1051049"
  },
  {
    "text": "Yeah.  So basically here this method\nhas the advantage because we're",
    "start": "1051050",
    "end": "1059790"
  },
  {
    "text": "computing on the fly, so\nwe save all that memory but it's still because of that\nwe like in the previous scheme",
    "start": "1059790",
    "end": "1067799"
  },
  {
    "text": "that for block coding\nwe could get within 1/n but now we're within 2/n. So is that basically\nthat the trade-off",
    "start": "1067800",
    "end": "1074070"
  },
  {
    "text": "like one extra bit for being\nable to compute on the fly? Yes. You can think in that way.",
    "start": "1074070",
    "end": "1079920"
  },
  {
    "text": "That's a good-- yeah, so\nmaybe if we make a table, maybe that will be useful. So you have block coding\nand you have arithmetic.",
    "start": "1079920",
    "end": "1088980"
  },
  {
    "text": " I think the real difference\nis in the complexity.",
    "start": "1088980",
    "end": "1094970"
  },
  {
    "text": "So I guess the\nupper bound on size",
    "start": "1094970",
    "end": "1100740"
  },
  {
    "text": "let's say we use the\nsame n for both of them. So here you have HX plus 1/n.",
    "start": "1100740",
    "end": "1107240"
  },
  {
    "text": "Here you have HX plus 2/n. ",
    "start": "1107240",
    "end": "1112320"
  },
  {
    "text": "And then the second is-- I guess you have only\ntwo rows, complexity. Here it's 2/n, so\nit's exponential in n.",
    "start": "1112320",
    "end": "1120540"
  },
  {
    "text": "Here it's maybe you\ncan read like big often so it's linear in n.",
    "start": "1120540",
    "end": "1128400"
  },
  {
    "text": "So you can just make n so much\nlarger than you could ever do for a block code.",
    "start": "1128400",
    "end": "1134490"
  },
  {
    "text": "And this is nothing. 1/n versus 2/n and for a\nlarge n that's nothing.",
    "start": "1134490",
    "end": "1139740"
  },
  {
    "text": "The extra over it is basically-- ",
    "start": "1139740",
    "end": "1145020"
  },
  {
    "text": "I'm sure some\npeople were unhappy, but I think for\nthe vast majority of people who are interested\nin the practical numbers it's",
    "start": "1145020",
    "end": "1152100"
  },
  {
    "text": "a very small gap. OK. ",
    "start": "1152100",
    "end": "1159220"
  },
  {
    "text": "OK, so the main question,\nWhat is the algorithm? So most of the\nrest of the lecture we'll just understand the\nalgorithm, the arithmetic coding",
    "start": "1159220",
    "end": "1166120"
  },
  {
    "text": "algorithm. And why is it called\narithmetic coding? What does it have to\ndo with arithmetic?",
    "start": "1166120",
    "end": "1172715"
  },
  {
    "text": "OK.  So there are two steps\nin arithmetic coding.",
    "start": "1172715",
    "end": "1182080"
  },
  {
    "text": "You map your input sequence\nto the number line or range on the number line.",
    "start": "1182080",
    "end": "1188320"
  },
  {
    "text": "And then you communicate\nthat range on the number line to the decoder. ",
    "start": "1188320",
    "end": "1195250"
  },
  {
    "text": "So let us try to do\na simple example.",
    "start": "1195250",
    "end": "1204145"
  },
  {
    "text": " OK, let's do this first.",
    "start": "1204145",
    "end": "1210190"
  },
  {
    "text": "So I have 0, I have 1.  I have a range, let's\nsay 0.35 to 0.55.",
    "start": "1210190",
    "end": "1225820"
  },
  {
    "text": "Let's say I had to\ncommunicate this-- OK, I have this range.",
    "start": "1225820",
    "end": "1233110"
  },
  {
    "text": "Can you tell me one\nnumber within this range that you can represent\nvery succinctly?",
    "start": "1233110",
    "end": "1238210"
  },
  {
    "text": "Like let's write a few numbers\nthat are within this range. There is like 0.355555,\nand there is like 0.41786.",
    "start": "1238210",
    "end": "1249370"
  },
  {
    "text": "So tell me one number\nwhich is very succinctly described within this range.",
    "start": "1249370",
    "end": "1255400"
  },
  {
    "text": "Fewest number of\ndecimal places, I guess. 0.5.",
    "start": "1255400",
    "end": "1260950"
  },
  {
    "text": "Yes, I hear 0.5. So 0.5, I hear maybe 0.4. There are these very easy to\ndescribe numbers in this range.",
    "start": "1260950",
    "end": "1270580"
  },
  {
    "text": " OK, we'll get to why we do this.",
    "start": "1270580",
    "end": "1277120"
  },
  {
    "start": "1277120",
    "end": "1285250"
  },
  {
    "text": "Now, let's do another range.  0.35672, 0.3568.",
    "start": "1285250",
    "end": "1297970"
  },
  {
    "text": "OK, now tell me a\nnumber in this range that is any number\nin this range that",
    "start": "1297970",
    "end": "1303850"
  },
  {
    "text": "has the shortest description. ",
    "start": "1303850",
    "end": "1318080"
  },
  {
    "text": "0.35675. OK, so I hear 0.35675.",
    "start": "1318080",
    "end": "1324203"
  },
  {
    "text": "It's within the range. It has a description\nof five decimal places.",
    "start": "1324203",
    "end": "1329230"
  },
  {
    "text": "And you can convince yourself\nthat you can't really do much better. This is basically-- so the\nfirst intuition you will get",
    "start": "1329230",
    "end": "1337360"
  },
  {
    "text": "is that shorter intervals\ntake more bits to describe.",
    "start": "1337360",
    "end": "1354299"
  },
  {
    "text": " Do we generally agree with this? If you have a very\nshort interval",
    "start": "1354300",
    "end": "1360500"
  },
  {
    "text": "and you want to send me a\nnumber in that short interval, typically your number\nwill be very long.",
    "start": "1360500",
    "end": "1365570"
  },
  {
    "text": "Like lots of decimal\nplaces in that number. And we'll see more rigorously\nhow this plays out.",
    "start": "1365570",
    "end": "1372390"
  },
  {
    "text": "But OK, for now\nlet's stick to this. ",
    "start": "1372390",
    "end": "1389120"
  },
  {
    "text": "OK, now let's do this. I have an alphabet of size\n4 where my probabilities are",
    "start": "1389120",
    "end": "1396680"
  },
  {
    "text": "like is 0.1, B is let's say 0.3,\nC is let's say 0.5, D is 0.1.",
    "start": "1396680",
    "end": "1410310"
  },
  {
    "text": "And I map them to the\nnumber line like this.",
    "start": "1410310",
    "end": "1416580"
  },
  {
    "text": "So I say like A will\nget a length of 0.1, B will get a length of 0.3,\nC will get a length of 0.5.",
    "start": "1416580",
    "end": "1423530"
  },
  {
    "text": "D will get a length of 0.1. So what I'm going to\ndo is I take my input,",
    "start": "1423530",
    "end": "1429560"
  },
  {
    "text": "I map it on the\nnumber line where the lengths of each\nof those sequences is equal to their probability.",
    "start": "1429560",
    "end": "1437059"
  },
  {
    "text": "So here the second thing that--\nso the first thing we saw in the previous slide which\nwas that shorter intervals take",
    "start": "1437060",
    "end": "1442970"
  },
  {
    "text": "more bits to describe. The second thing I\nwill do is map sequence",
    "start": "1442970",
    "end": "1456090"
  },
  {
    "text": "to interval with length equal\nto probability of the sequence.",
    "start": "1456090",
    "end": "1465419"
  },
  {
    "text": " So what you are going to do,\nyou are going to do two steps.",
    "start": "1465420",
    "end": "1470980"
  },
  {
    "text": "First, you will map your\ninput into the number line such that your length\nis proportional to the--",
    "start": "1470980",
    "end": "1478030"
  },
  {
    "text": "or equal to the\nprobability of the thing. And then you are going to\ndescribe that interval. And we already saw\nthat describing",
    "start": "1478030",
    "end": "1485200"
  },
  {
    "text": "shorter intervals is harder\ndescribing bigger intervals is easier. So and we'll look at a\nvery concrete example.",
    "start": "1485200",
    "end": "1492750"
  },
  {
    "text": "For now just trying to\nbuild this basic intuition that 1 plus 2, the two\nthings we saw before",
    "start": "1492750",
    "end": "1498090"
  },
  {
    "text": "imply that I guess\nmore probable sequence",
    "start": "1498090",
    "end": "1510150"
  },
  {
    "text": "will get a bigger interval which\nwill have a shorter bit length.",
    "start": "1510150",
    "end": "1524965"
  },
  {
    "text": " Is this somewhat clear?",
    "start": "1524965",
    "end": "1532180"
  },
  {
    "text": "So there are two steps again. Map your sequence to a interval,\nand then describe that interval.",
    "start": "1532180",
    "end": "1539590"
  },
  {
    "text": "And what we are\ngoing to do is more probable sequences will get\nbigger intervals and hence",
    "start": "1539590",
    "end": "1544899"
  },
  {
    "text": "shorter bit length. Keep that in mind. And let's look at an example\nand then I will take questions.",
    "start": "1544900",
    "end": "1554050"
  },
  {
    "start": "1554050",
    "end": "1570970"
  },
  {
    "text": "OK, let's come back\nto this in a bit after we look at the example. This is just like you can\ndo the number line in binary",
    "start": "1570970",
    "end": "1577120"
  },
  {
    "text": "but we won't need\nit for the moment. OK, very concrete example now.",
    "start": "1577120",
    "end": "1583540"
  },
  {
    "text": "We will work with this example\nwhere you have this A, B, C, 0.3, 0.5, 0.2.",
    "start": "1583540",
    "end": "1589180"
  },
  {
    "text": "And you have a\nparticular input sequence that you want to encode. Remember that the\narithmetic coding is useful",
    "start": "1589180",
    "end": "1594490"
  },
  {
    "text": "because we don't want\nto do per-symbol coding. We want to encode sequences\nat once so we'll just take this sequence, BACB.",
    "start": "1594490",
    "end": "1600310"
  },
  {
    "text": "OK, BACB, OK. So OK, I hope you\ncan see that clearly.",
    "start": "1600310",
    "end": "1608130"
  },
  {
    "text": "OK, so first step, this\nis where you did just now. You take your number\nline from 0 to 1.",
    "start": "1608130",
    "end": "1615750"
  },
  {
    "text": "You split it where the lengths\nare equal to the probabilities.",
    "start": "1615750",
    "end": "1621240"
  },
  {
    "text": "So here this thing is equal\nto the probability of A.",
    "start": "1621240",
    "end": "1628300"
  },
  {
    "text": "This length is equal\nto probability of B. And since the probability is\nsum to 1, you fill up the thing.",
    "start": "1628300",
    "end": "1635070"
  },
  {
    "text": "OK, next. ",
    "start": "1635070",
    "end": "1642649"
  },
  {
    "text": "First symbol you\nneed to encode is B. So therefore you go to the\npart of the thing which is B.",
    "start": "1642650",
    "end": "1649390"
  },
  {
    "text": "So you go to the\nmiddle part here. OK, and now your\ninterval is this,",
    "start": "1649390",
    "end": "1655000"
  },
  {
    "text": "0.3 to 0.8 which is the\ninterval corresponding to B. So every step we\nare going to make",
    "start": "1655000",
    "end": "1661419"
  },
  {
    "text": "this interval shorter\nand shorter as you will see in a sec. ",
    "start": "1661420",
    "end": "1669740"
  },
  {
    "text": "OK, and this is how\nyou exactly do it. So the idea is\nthat you maintain--",
    "start": "1669740",
    "end": "1676669"
  },
  {
    "text": "so this is your probabilities. ",
    "start": "1676670",
    "end": "1681920"
  },
  {
    "text": "And this is your\ncumulative probabilities. ",
    "start": "1681920",
    "end": "1688049"
  },
  {
    "text": "So the way you can think of it\nis that you have this thing. So we have A, B, C.\nAnd this is PA, PB, PC.",
    "start": "1688050",
    "end": "1706110"
  },
  {
    "text": "And you have--\nwe'll call this CB.",
    "start": "1706110",
    "end": "1713140"
  },
  {
    "text": "And we'll call this CC. ",
    "start": "1713140",
    "end": "1721270"
  },
  {
    "text": "So really, this interval, the\ninterval corresponding to B is what is this?",
    "start": "1721270",
    "end": "1727005"
  },
  {
    "text": "This is the cumulative B\nstarting there to CB plus PB.",
    "start": "1727005",
    "end": "1734060"
  },
  {
    "text": " Is that OK? ",
    "start": "1734060",
    "end": "1740980"
  },
  {
    "text": "I just take a minute,\nmake sure you understand. This is very important. If you don't understand\nit, stop me here",
    "start": "1740980",
    "end": "1747370"
  },
  {
    "text": "because otherwise you will\nhave more and more issues. ",
    "start": "1747370",
    "end": "1784100"
  },
  {
    "text": "OK, let's keep going. And we'll do an example later. ",
    "start": "1784100",
    "end": "1794620"
  },
  {
    "text": "Yep, OK. Now, this is where the beauty\nof the whole thing comes in.",
    "start": "1794620",
    "end": "1801290"
  },
  {
    "text": "Because OK, you\nmade these intervals",
    "start": "1801290",
    "end": "1806860"
  },
  {
    "text": "but we want to encode\nlong sequences. We don't want to just\nencode one symbol. So how do you do the sequences?",
    "start": "1806860",
    "end": "1812620"
  },
  {
    "text": "So what you do is now you\nrecursively break down this thing. So after you see a B, you again\nbreak this smaller interval",
    "start": "1812620",
    "end": "1820120"
  },
  {
    "text": "into BC, BB, BA. So BA, BC, BB. So into three parts again where\nthey are again proportional",
    "start": "1820120",
    "end": "1826720"
  },
  {
    "text": "to the probabilities. So this thing is I\nguess let's call this--",
    "start": "1826720",
    "end": "1835630"
  },
  {
    "text": "if these are A, B, C, then\nthe ratio of A to B to C is 0.3, to 0.5, to 0.2.",
    "start": "1835630",
    "end": "1844390"
  },
  {
    "text": "So you again split the B\ninterval into the same way as you did in the first step.",
    "start": "1844390",
    "end": "1852370"
  },
  {
    "text": "So you are going to\nrecursively split them. And now you see that\nyour next symbol is BA.",
    "start": "1852370",
    "end": "1858100"
  },
  {
    "text": "So now you move into this\nsecond part, 0.3 to 0.45",
    "start": "1858100",
    "end": "1863440"
  },
  {
    "text": "which is this smaller interval. So every step we are going to\nmake the smaller and smaller interval. ",
    "start": "1863440",
    "end": "1873580"
  },
  {
    "text": "OK, and you can\ndo the calculation based on this basically ratios.",
    "start": "1873580",
    "end": "1881680"
  },
  {
    "text": "So let's do the\ncalculation maybe. So the interval corresponding\nto B goes from 0.3 to 0.8.",
    "start": "1881680",
    "end": "1894100"
  },
  {
    "text": "So now the length of\nthis thing is 0.5.",
    "start": "1894100",
    "end": "1904450"
  },
  {
    "text": "So the first part, the\npart corresponding to B will be 0.5 multiplied by\n0.3 which is equal to 0.15.",
    "start": "1904450",
    "end": "1915220"
  },
  {
    "text": "So therefore the BA interval\nwill be 0.3 to 0.3 plus 0.15.",
    "start": "1915220",
    "end": "1925840"
  },
  {
    "text": "So just split the interval\ncorresponding to B into three portions proportional\nto the probabilities of A, B,",
    "start": "1925840",
    "end": "1932664"
  },
  {
    "text": "C. Please stop me\nif you are confused.",
    "start": "1932665",
    "end": "1942890"
  },
  {
    "text": "Otherwise, we will keep moving. ",
    "start": "1942890",
    "end": "1951600"
  },
  {
    "text": "And then the idea is the same. You keep doing it. You come to-- the\nnext one you see a C.",
    "start": "1951600",
    "end": "1958950"
  },
  {
    "text": "And then you again split\nthis BA into BAA, BAB, BAC, and then you get this\nsmall BAC interval",
    "start": "1958950",
    "end": "1965790"
  },
  {
    "text": "with this interval,\n0.42 to 0.45. And then you--",
    "start": "1965790",
    "end": "1972192"
  },
  {
    "text": "I guess the smallest\ninterval, OK. Then you again split it into\nthree parts, BACA, BACB, BACC",
    "start": "1972192",
    "end": "1981059"
  },
  {
    "text": "where again, the\nlengths are proportional to your probabilities.",
    "start": "1981060",
    "end": "1987820"
  },
  {
    "text": "So you get this. And yep, that's\nbasically the process.",
    "start": "1987820",
    "end": "1996110"
  },
  {
    "text": "This is the process of mapping\na sequence to an interval. This is the step one of\narithmetic coding where you're",
    "start": "1996110",
    "end": "2003039"
  },
  {
    "text": "mapping a long, long sequence\ninto an interval on the number line.",
    "start": "2003040",
    "end": "2009309"
  },
  {
    "text": "OK, I think what\nwe'll do is we'll just do an example together in\nwhich will make me confident",
    "start": "2009310",
    "end": "2015130"
  },
  {
    "text": "that everybody understands. So these are just\nsteps written up.",
    "start": "2015130",
    "end": "2020919"
  },
  {
    "text": " So after you encode\nevery step, you see the interval is becoming\nsmaller and smaller.",
    "start": "2020920",
    "end": "2027230"
  },
  {
    "text": "So you're slowly\nnarrowing down your range. ",
    "start": "2027230",
    "end": "2033760"
  },
  {
    "text": "OK, let's do this\nexample together. ",
    "start": "2033760",
    "end": "2046450"
  },
  {
    "text": "So your P is A is 0.2,\nB is 0.4, C is 0.4.",
    "start": "2046450",
    "end": "2065599"
  },
  {
    "text": "And your sequence is BAAB. ",
    "start": "2065600",
    "end": "2073619"
  },
  {
    "text": "OK, let's start. Step one. Anybody, please tell me\nhow should I split my--",
    "start": "2073620",
    "end": "2081179"
  },
  {
    "text": "this is 0 to 1. yeah, please help me out.",
    "start": "2081179",
    "end": "2086354"
  },
  {
    "text": "It's the, like-- you have A\nbeing 0.2 according to the--",
    "start": "2086354",
    "end": "2091510"
  },
  {
    "text": "OK, so let's go slowly. A starts at 0 and ends where?",
    "start": "2091510",
    "end": "2097471"
  },
  {
    "text": "0.2. 0.2. OK. B starts at 0.2 ends where?",
    "start": "2097471",
    "end": "2102816"
  },
  {
    "text": "0.6. 0.6, right? And yeah, we'll do-- slowly.",
    "start": "2102816",
    "end": "2108730"
  },
  {
    "text": "OK.  OK, yeah.",
    "start": "2108730",
    "end": "2113740"
  },
  {
    "text": "If you find it very\neasy, that's great. We won't need to--",
    "start": "2113740",
    "end": "2119530"
  },
  {
    "text": "arithmetic coding you will see\nwill come up again and again. It's very deep-- we\nare right now seeing it",
    "start": "2119530",
    "end": "2127240"
  },
  {
    "text": "for a very special\nsetting but really, I",
    "start": "2127240",
    "end": "2133600"
  },
  {
    "text": "guess in lecture 8, 9, 10 you\nwill see it will just recur.",
    "start": "2133600",
    "end": "2139630"
  },
  {
    "text": "Now let's expand it out again.  So this is 0.2.",
    "start": "2139630",
    "end": "2146550"
  },
  {
    "text": "OK, Why did I expand B? Because B was my first symbol. So that's why I'm\nnow expanding out B because that's my first symbol.",
    "start": "2146550",
    "end": "2154260"
  },
  {
    "text": "OK, now can somebody help\nme calculate what is the-- again, How do I divide\ninto three parts?",
    "start": "2154260",
    "end": "2159390"
  },
  {
    "text": " So what is the part for BA? Just help me out with the math\nand then I will calculate.",
    "start": "2159390",
    "end": "2168359"
  },
  {
    "text": " So I guess BA.",
    "start": "2168360",
    "end": "2173730"
  },
  {
    "text": "So tell me the length for BA. How long should be\nthe BA portion of it?",
    "start": "2173730",
    "end": "2182550"
  },
  {
    "text": "Hint, the B portion is 0.4. 0.08.",
    "start": "2182550",
    "end": "2190240"
  },
  {
    "text": "OK, I hear 0.08 which is correct\nbecause B was 0.4 and A is 0.2.",
    "start": "2190240",
    "end": "2196960"
  },
  {
    "text": "So this is 0.08. And then BB will be\n0.4 times 0.4, so 0.16.",
    "start": "2196960",
    "end": "2208190"
  },
  {
    "text": "And then BC will also be 0.16. Is that clear?",
    "start": "2208190",
    "end": "2214270"
  },
  {
    "text": "We are again dividing it\nin the same proportion. So let's do it.",
    "start": "2214270",
    "end": "2219599"
  },
  {
    "text": "So BA, BB, BC.",
    "start": "2219600",
    "end": "2225480"
  },
  {
    "text": "And so this goes from 0.2 to\n0.28 because 0.2 plus 0.08.",
    "start": "2225480",
    "end": "2230640"
  },
  {
    "text": "And then 0.28 to 0.44. OK, now which of these three\nI go into to further expand?",
    "start": "2230640",
    "end": "2238890"
  },
  {
    "text": " The first one.",
    "start": "2238890",
    "end": "2244820"
  },
  {
    "text": "Do I hear the first one? How many think it's the BA one? OK, some people think\nit's the BA one.",
    "start": "2244820",
    "end": "2251240"
  },
  {
    "text": "It's the BA one because the\nsecond symbol in my sequence is A. So this is the\none I further expand.",
    "start": "2251240",
    "end": "2257645"
  },
  {
    "text": " OK, this one let me try to do.",
    "start": "2257645",
    "end": "2264370"
  },
  {
    "text": "So we have 0.2\nhere and 0.28 here. So BAA, the length\nof BAA is the length",
    "start": "2264370",
    "end": "2276970"
  },
  {
    "text": "of BA multiplied by\nthe probability of A",
    "start": "2276970",
    "end": "2282609"
  },
  {
    "text": "because the third\nsymbol this A. And this is 0.08 multiplied by\n0.2 which will be 0.016.",
    "start": "2282610",
    "end": "2292480"
  },
  {
    "text": "So the calculations as\nyou see are getting harder to do by hand. We will give up shortly.",
    "start": "2292480",
    "end": "2299710"
  },
  {
    "text": "Yeah, so this is 0.216. And we only really need BAA,\nso let's just expand this out.",
    "start": "2299710",
    "end": "2307800"
  },
  {
    "text": "The other ones we don't care\nbecause A is our next symbol. So maybe let's try to make\nthat clear with some coloring.",
    "start": "2307800",
    "end": "2314925"
  },
  {
    "text": " So this B here\ncorresponds to this B.",
    "start": "2314925",
    "end": "2324696"
  },
  {
    "text": "And this second A here\ncorresponds to this second A.",
    "start": "2324696",
    "end": "2333520"
  },
  {
    "text": "And the third A here\ncorresponds to this third A. So there is a correspondence.",
    "start": "2333520",
    "end": "2338650"
  },
  {
    "text": "You just keep going like this. ",
    "start": "2338650",
    "end": "2345560"
  },
  {
    "text": "OK. And Kedar kindly calculated\nit for us where--",
    "start": "2345560",
    "end": "2351279"
  },
  {
    "start": "2351280",
    "end": "2362490"
  },
  {
    "text": "sorry. This is just cheating because\nit was like 0.2, 0.4, 0.4 here. But now it becomes like\nbecame 0.4, 0.4, 0.2.",
    "start": "2362490",
    "end": "2371400"
  },
  {
    "text": "This is not OK. We will just say-- ",
    "start": "2371400",
    "end": "2376680"
  },
  {
    "text": "OK, so don't worry\nabout this one. But I think we did the\ncalculations correct. ",
    "start": "2376680",
    "end": "2394230"
  },
  {
    "text": "OK, we will send this\nto Kedar as a note. But anyway, I think we--",
    "start": "2394230",
    "end": "2400740"
  },
  {
    "text": "I hope we get the idea. You just keep\nexpanding out the-- as you get each\nsymbol, you expand out",
    "start": "2400740",
    "end": "2406680"
  },
  {
    "text": "a particular sub-interval\nin your current interval. ",
    "start": "2406680",
    "end": "2423810"
  },
  {
    "text": "OK, let's look at a pseudocode\njust so that it's very concrete.",
    "start": "2423810",
    "end": "2429400"
  },
  {
    "text": "So the encode block\nfunction, the step one is to find the interval\ncorresponding to the input.",
    "start": "2429400",
    "end": "2434950"
  },
  {
    "text": "So this is in SCL,\nyou might guess. So initially you start with\nlow and high as 0 and 1.",
    "start": "2434950",
    "end": "2443560"
  },
  {
    "text": "And then you go over every\nsymbol in your input. And you shrink range. So shrink range is really the\ncore function of arithmetic",
    "start": "2443560",
    "end": "2452080"
  },
  {
    "text": "encoding. And what does\nshrinkage range do? It starts with the\ncurrent range and it",
    "start": "2452080",
    "end": "2460360"
  },
  {
    "text": "calculates the new\nL and the new H. It's exactly like\nthe formula we saw",
    "start": "2460360",
    "end": "2467650"
  },
  {
    "text": "before represented in a\nslightly different notation. But yeah, I encourage you to--",
    "start": "2467650",
    "end": "2474640"
  },
  {
    "text": "like here, for example, rng\nis like the previous range.",
    "start": "2474640",
    "end": "2482049"
  },
  {
    "text": " This thing is probability\nof the current symbol.",
    "start": "2482050",
    "end": "2492315"
  },
  {
    "text": " And the product of\nthese is the next range.",
    "start": "2492315",
    "end": "2504680"
  },
  {
    "text": "And you need to keep that\ncumulative probability table because you need\nto know where you start. So if you look at\nthe example we did,",
    "start": "2504680",
    "end": "2515470"
  },
  {
    "text": "like here this 0.2 here is the\ncumulative probability thing",
    "start": "2515470",
    "end": "2522020"
  },
  {
    "text": "where you need to know--\nso basically at every step you need to calculate\nthe low, you need to calculate\nthe length, and then",
    "start": "2522020",
    "end": "2527720"
  },
  {
    "text": "high is low plus\nlength which is high. ",
    "start": "2527720",
    "end": "2538760"
  },
  {
    "text": "OK, any questions so far? This is the encoding. And we'll do the\ndecoding in a minute. ",
    "start": "2538760",
    "end": "2549098"
  },
  {
    "text": "Actually, maybe\nlet's do the decoding now so that we don't do\nlike a full round trip pass. ",
    "start": "2549098",
    "end": "2567580"
  },
  {
    "text": "OK, so let's say we have\nthis example, 0.3, 0.5, 0.2.",
    "start": "2567580",
    "end": "2573250"
  },
  {
    "text": "And you have-- you\nencoded BACB and you",
    "start": "2573250",
    "end": "2578890"
  },
  {
    "text": "got this range, 0.429 to 0.444.",
    "start": "2578890",
    "end": "2594329"
  },
  {
    "text": "0.3, 0.5, 0.2, and your final\ninterval was 0.429 to 0.444.",
    "start": "2594330",
    "end": "2615140"
  },
  {
    "text": "So 0.43 is a number\nin this range. Do we all agree? 0.43 is a number in this range.",
    "start": "2615140",
    "end": "2627870"
  },
  {
    "text": "So decoding. So here we are doing decoding. ",
    "start": "2627870",
    "end": "2635680"
  },
  {
    "text": "So we again do the\nsame thing where we divide it into three parts.",
    "start": "2635680",
    "end": "2641480"
  },
  {
    "text": "So this is 0.8, C. And the\nnumber you received is 0.43.",
    "start": "2641480",
    "end": "2660619"
  },
  {
    "text": "OK, can somebody suggest\nwhat is the first symbol? So I'm now decoding.",
    "start": "2660620",
    "end": "2666490"
  },
  {
    "text": "I don't know what I encoded. What would be the first symbol\nI would decode if I received",
    "start": "2666490",
    "end": "2671830"
  },
  {
    "text": "this 0.43 as my encoding?",
    "start": "2671830",
    "end": "2677536"
  },
  {
    "text": "A. I heard an A. Somebody who\nsaid A, Can you explain why A?",
    "start": "2677536",
    "end": "2683330"
  },
  {
    "start": "2683330",
    "end": "2689174"
  },
  {
    "text": "I guess those who\nsaid B explain why B. Well, since it falls between\nthings like the range of B,",
    "start": "2689174",
    "end": "2697700"
  },
  {
    "text": "we know that when we\nencoded it the first one, we gave extra to get that\nrange so that we could--",
    "start": "2697700",
    "end": "2703880"
  },
  {
    "text": " Yeah. So very good.",
    "start": "2703880",
    "end": "2709980"
  },
  {
    "text": "So the intuition here\nis that as you encoded, the range only gets\nsmaller and smaller.",
    "start": "2709980",
    "end": "2717590"
  },
  {
    "text": "So if you are going\nto end up with 0.43, you better start\nwith B because if you",
    "start": "2717590",
    "end": "2723050"
  },
  {
    "text": "start with something else,\nyou will never get to 0.43. So your range will get\nsmaller and smaller.",
    "start": "2723050",
    "end": "2729890"
  },
  {
    "text": "So it has to be B, it\nhas to be this thing. ",
    "start": "2729890",
    "end": "2736089"
  },
  {
    "text": "Now we will again\nexpand it out as usual. ",
    "start": "2736090",
    "end": "2745770"
  },
  {
    "text": "So after you do it, I\nthink it will be 0.39.",
    "start": "2745770",
    "end": "2763500"
  },
  {
    "text": "Let's do it carefully. So the length of the interval\nis 0.5 multiplied by probability 0.3 so it will be 0.45.",
    "start": "2763500",
    "end": "2774890"
  },
  {
    "text": "And then 0.5 times 0.25, so 0.7.",
    "start": "2774890",
    "end": "2790783"
  },
  {
    "text": "After you do all that, same. So this is sort of identical\nbetween the encoder and the decoder. OK, now you know your original\nnumber you received was 0.43.",
    "start": "2790783",
    "end": "2800049"
  },
  {
    "text": "So can somebody tell me what is\nthe next symbol I should decode? ",
    "start": "2800050",
    "end": "2810152"
  },
  {
    "text": "A. I hear an A from a couple\nof places which is correct. Can somebody explain why A?",
    "start": "2810152",
    "end": "2815520"
  },
  {
    "text": " It's very simple, very simple.",
    "start": "2815520",
    "end": "2820829"
  },
  {
    "text": "0.43 lies in the BA\nrange, that's why. That's it, basically. At every step you just see\nthe number that you received.",
    "start": "2820830",
    "end": "2827850"
  },
  {
    "text": "Where does it lie? Which range-- which\nsubinterval does it lie in? So it lies in 0.3 to 0.45.",
    "start": "2827850",
    "end": "2834359"
  },
  {
    "text": "So you see that this\nlies here, so BA. So now you have\nencoded two symbols.",
    "start": "2834360",
    "end": "2839970"
  },
  {
    "text": "You have decoded B,\nand you have decoded A. And I think you can\nsee how this goes.",
    "start": "2839970",
    "end": "2846300"
  },
  {
    "text": "Every step-- you basically\nrepeat the same process from encoding. You split your sub\ninterval into subintervals.",
    "start": "2846300",
    "end": "2852599"
  },
  {
    "text": "The number you received\nyou see, Where does it lie in those subintervals? And you decode symbol by symbol.",
    "start": "2852600",
    "end": "2861750"
  },
  {
    "text": "OK, so now what have\nwe seen so far is-- ",
    "start": "2861750",
    "end": "2868470"
  },
  {
    "text": "so we have seen how\nyou go from sequence",
    "start": "2868470",
    "end": "2873750"
  },
  {
    "text": "to interval back to sequence.",
    "start": "2873750",
    "end": "2878870"
  },
  {
    "text": " So we have-- yep. When do you know when to stop?",
    "start": "2878870",
    "end": "2885850"
  },
  {
    "text": "Because you could\njust keep going and make up a\nlonger to add into?",
    "start": "2885850",
    "end": "2892018"
  },
  {
    "text": " So the question is, How\ndo you know when to stop?",
    "start": "2892018",
    "end": "2900010"
  },
  {
    "text": "Like in this example,\nI could have just gone on and on with my 0.43.",
    "start": "2900010",
    "end": "2905050"
  },
  {
    "text": "I could have decoded like a\nbillion symbols if I wanted to.",
    "start": "2905050",
    "end": "2910600"
  },
  {
    "text": "There are a-- OK, so maybe let's write it\ndown and clearly answer it.",
    "start": "2910600",
    "end": "2915790"
  },
  {
    "text": " So the question is\nwhen to stop decoding.",
    "start": "2915790",
    "end": "2922450"
  },
  {
    "text": " So the first method which\nis what we will use--",
    "start": "2922450",
    "end": "2929640"
  },
  {
    "text": "we use in our\nlibrary for example is at the start I guess we\nprepend the length, basically,",
    "start": "2929640",
    "end": "2951250"
  },
  {
    "text": "n, at the start. You just store the\nlength, basically.",
    "start": "2951250",
    "end": "2957470"
  },
  {
    "text": "So that is one way. There is a second\nway which I've seen in some places is you create\na special symbol called--",
    "start": "2957470",
    "end": "2972150"
  },
  {
    "text": "you can call it like end\nof file, for example. So end of file.",
    "start": "2972150",
    "end": "2977220"
  },
  {
    "start": "2977220",
    "end": "2982340"
  },
  {
    "text": "Then you need to assign-- because you created\na new symbol, it wasn't in your ABC set,\nyou created a new symbol",
    "start": "2982340",
    "end": "2987860"
  },
  {
    "text": "which is end of file, you need\nto assign it some probability",
    "start": "2987860",
    "end": "2994380"
  },
  {
    "text": "and basically\nencode your sequence",
    "start": "2994380",
    "end": "3000619"
  },
  {
    "text": "followed by this special\nEOF token, basically.",
    "start": "3000620",
    "end": "3006250"
  },
  {
    "text": "So there are two ways\nto make sure that you can end at the right one. One is that you just prepend\nthe length at the start",
    "start": "3006250",
    "end": "3012460"
  },
  {
    "text": "so then the decoder\nfirst reads the length, it knows how much\nI need to decode, it will stop decoding\nat the right time, or you put this\nend of file token.",
    "start": "3012460",
    "end": "3019015"
  },
  {
    "text": " If you have done like generative\nmodels, LMS and stuff,",
    "start": "3019015",
    "end": "3024690"
  },
  {
    "text": "they also have a token\nwhere, how does your ChatGPT know when to stop?",
    "start": "3024690",
    "end": "3030510"
  },
  {
    "text": "So sometimes you need\nthis special tokens to know when to stop.",
    "start": "3030510",
    "end": "3035655"
  },
  {
    "text": " OK, any other questions?",
    "start": "3035655",
    "end": "3041510"
  },
  {
    "text": " I think I went a\nbit out of order.",
    "start": "3041510",
    "end": "3047119"
  },
  {
    "text": "Some of this might already be\nin the slides, but OK, anyway. So now there are a\nfew things left to do.",
    "start": "3047120",
    "end": "3054290"
  },
  {
    "text": "This is not enough. We need to-- the parts that\nare left are we actually need to put this into bits.",
    "start": "3054290",
    "end": "3061490"
  },
  {
    "text": "And then from bits we need\nto go back to an interval. And then we go to the sequence.",
    "start": "3061490",
    "end": "3067540"
  },
  {
    "text": "So this is the part\nthat we need to fill in. Did you have a question? OK, yep.",
    "start": "3067540",
    "end": "3072970"
  },
  {
    "text": "So this is one\nthing we need to do. And the second\nthing we need to do is calculate the number of\nbits you use, basically.",
    "start": "3072970",
    "end": "3083830"
  },
  {
    "text": "The proof that the 2/n thing\nthat we talked about earlier. ",
    "start": "3083830",
    "end": "3123640"
  },
  {
    "text": "OK, so first thing\nwe'll do is we'll try to understand, What\nis the interval length? How does the interval\nlength change as we",
    "start": "3123640",
    "end": "3130660"
  },
  {
    "text": "keep on doing the sequence? So first observation\nwhich should be very clear if you understood the thing\nis that every time we encode",
    "start": "3130660",
    "end": "3137680"
  },
  {
    "text": "we make the interval smaller. So every step is making the\ninterval smaller and smaller. So the question is, What\nis the size of the interval",
    "start": "3137680",
    "end": "3146860"
  },
  {
    "text": "for a particular sequence? Can you write that down\nin terms of the sequence",
    "start": "3146860",
    "end": "3151930"
  },
  {
    "text": "of its probabilities? Any guesses? ",
    "start": "3151930",
    "end": "3160180"
  },
  {
    "text": "Which is the probability\nof that sequence. So I hear an answer which is\nthat it is the probability",
    "start": "3160180",
    "end": "3165810"
  },
  {
    "text": "of that sequence. Can you elaborate? Because when you encode\nfor the first character--",
    "start": "3165810",
    "end": "3173910"
  },
  {
    "text": "Yeah. --the length of it will be\nthe probability of the first character multiplied\nwith this determinant--",
    "start": "3173910",
    "end": "3182609"
  },
  {
    "text": "Yep. Yep, yep. So the right answer\nis that yeah, it is the probability of the\nsequence where we are always",
    "start": "3182610",
    "end": "3189530"
  },
  {
    "text": "assuming this IRD model. That the sequence, the\nprobability of the sequence is the product of the\nprobabilities of all the terms.",
    "start": "3189530",
    "end": "3198050"
  },
  {
    "text": "And why is that? Because step one you take the\ninterval corresponding to x1,",
    "start": "3198050",
    "end": "3203660"
  },
  {
    "text": "so which is like\nPx1, you split it. And then step two you take the\nthing corresponding to Px2,",
    "start": "3203660",
    "end": "3211470"
  },
  {
    "text": "and then you split it further. So at every step you are\ntaking the subinterval which",
    "start": "3211470",
    "end": "3216870"
  },
  {
    "text": "is proportional to the\nprobability of that symbol, so at every step you are\nreducing the interval",
    "start": "3216870",
    "end": "3223410"
  },
  {
    "text": "according to the probability\nof that sequence. ",
    "start": "3223410",
    "end": "3230750"
  },
  {
    "text": "Let's look at the example just\nso we are very confident here. ",
    "start": "3230750",
    "end": "3240950"
  },
  {
    "text": "Maybe let's look at this one. So here after step\none the length",
    "start": "3240950",
    "end": "3247940"
  },
  {
    "text": "is probability of\nB which is 0.5. You can verify. After step two the\nlength is probability",
    "start": "3247940",
    "end": "3255530"
  },
  {
    "text": "of B times probability of\nA which is 0.5 times 0.3.",
    "start": "3255530",
    "end": "3261650"
  },
  {
    "text": "And here the length will\nbe like I guess this thing.",
    "start": "3261650",
    "end": "3266819"
  },
  {
    "text": "So 0.5 times 0.3 multiplied by\nthe probability of C, and so on.",
    "start": "3266820",
    "end": "3272980"
  },
  {
    "text": "So every step the\nlength of the interval is the previous step\nmultiplied by the probability",
    "start": "3272980",
    "end": "3278850"
  },
  {
    "text": "of the current symbol. So it's like every step you\nmultiplied by the probability of that symbol. ",
    "start": "3278850",
    "end": "3292599"
  },
  {
    "text": "At the very start\nI talked about--  what we wanted was that for\nhigh probability sequences,",
    "start": "3292600",
    "end": "3300220"
  },
  {
    "text": "we wanted larger intervals. And you see already that we\nare getting that property. If your sequence has a\nhigh probability, then",
    "start": "3300220",
    "end": "3307329"
  },
  {
    "text": "every step you will go into a\nbig-ish interval, and so overall your size of the\ninterval will be bigger",
    "start": "3307330",
    "end": "3313869"
  },
  {
    "text": "at the end of the encoding. OK, is that OK? ",
    "start": "3313870",
    "end": "3322510"
  },
  {
    "text": "OK, right. So here just what\nwe said just now that the length\nof the interval is",
    "start": "3322510",
    "end": "3329200"
  },
  {
    "text": "the probability of the\nproduct of the probabilities which is the probability of the\noverall sequence under the IRD",
    "start": "3329200",
    "end": "3336420"
  },
  {
    "text": "model. ",
    "start": "3336420",
    "end": "3341609"
  },
  {
    "text": "OK. ",
    "start": "3341610",
    "end": "3352370"
  },
  {
    "text": "OK, now we come\nto the second step which is, How do you\ncommunicate the interval?",
    "start": "3352370",
    "end": "3357530"
  },
  {
    "text": "Now you made the\ninterval, But how do you communicate the interval? And the simplest idea\nthat comes to mind",
    "start": "3357530",
    "end": "3363230"
  },
  {
    "text": "is let's just communicate\na point in that interval.",
    "start": "3363230",
    "end": "3368520"
  },
  {
    "text": "And then the decoder-- we saw the decoding\nprocess already. So as long as I communicate\na point in that interval,",
    "start": "3368520",
    "end": "3373890"
  },
  {
    "text": "the decoder can do its job. And the way we did\nit was we found",
    "start": "3373890",
    "end": "3378990"
  },
  {
    "text": "like a number which\nhad a small binary or a small decimal\nrepresentation.",
    "start": "3378990",
    "end": "3385319"
  },
  {
    "text": "But here we will do it\nslightly more formally but conceptually, it's\nreally the same thing. So in this particular\nexample, your interval",
    "start": "3385320",
    "end": "3394500"
  },
  {
    "text": "was 0.429 to 0.444. So what we are going\nto do is we are going to take the\nmidpoint of this range.",
    "start": "3394500",
    "end": "3401490"
  },
  {
    "text": "So at the end of your encoding,\nyou did like a few steps and then you did like--\nyou kept on expanding.",
    "start": "3401490",
    "end": "3408750"
  },
  {
    "text": "And at the end you ended up\nwith this thing, 0.429 to 0.444.",
    "start": "3408750",
    "end": "3415140"
  },
  {
    "text": "So this is L, Low,\nthis is H, High. And then you are going\nto define a Z which",
    "start": "3415140",
    "end": "3421260"
  },
  {
    "text": "is L plus H divided by 2. So it's the midpoint\nof the interval, and that is what we are\ngoing to communicate.",
    "start": "3421260",
    "end": "3427049"
  },
  {
    "start": "3427050",
    "end": "3434400"
  },
  {
    "text": "These are the decoding slides. I think we already did decoding. So let me just skip this. But you can look\nat these at home.",
    "start": "3434400",
    "end": "3441660"
  },
  {
    "text": "It's basically what we saw. ",
    "start": "3441660",
    "end": "3447130"
  },
  {
    "text": "So this step shows that\nduring encoding, your interval and the decoding, basically\nthe encoding and the decoding",
    "start": "3447130",
    "end": "3453910"
  },
  {
    "text": "are very symmetric. At every step you follow\nthe same sequence of steps exactly as encoding,\nso decoding.",
    "start": "3453910",
    "end": "3461859"
  },
  {
    "start": "3461860",
    "end": "3467340"
  },
  {
    "text": "I won't go through\nthe pseudocode now. ",
    "start": "3467340",
    "end": "3486790"
  },
  {
    "text": "OK, now let's come back to this\nprimer which is till now we have been working with\ndecimal number line",
    "start": "3486790",
    "end": "3493510"
  },
  {
    "text": "because that's just easier\nfor us to think about. But obviously, just like you\nknow that every number can be",
    "start": "3493510",
    "end": "3498579"
  },
  {
    "text": "represented as a binary number. Similarly, you can represent any\nfraction as a binary fraction.",
    "start": "3498580",
    "end": "3504970"
  },
  {
    "text": "So how do binary fractions work? So 0.1 in binary\nis equal to 1/2.",
    "start": "3504970",
    "end": "3510490"
  },
  {
    "text": "0.01 in binary is equal\nto 1/2 square, and so on. So 0.11 in binary will be\nlike 1/2 plus 1/2 square.",
    "start": "3510490",
    "end": "3519940"
  },
  {
    "text": "So this is like 3/4. So this is basically binary.",
    "start": "3519940",
    "end": "3524950"
  },
  {
    "text": "You won't need to do it,\nreally, but good to know. You can do it in any base.",
    "start": "3524950",
    "end": "3531910"
  },
  {
    "text": "So for example, if we\nwanted to do 0.3333,",
    "start": "3531910",
    "end": "3538099"
  },
  {
    "text": "this sort of thing, so in\nbinary it will be like 0.3333",
    "start": "3538100",
    "end": "3544350"
  },
  {
    "text": "is between 0.25 and 0.5\nso it will start with 0.1. I think it will look\nsomething like 0.01,",
    "start": "3544350",
    "end": "3551910"
  },
  {
    "text": "some sort of sequence. ",
    "start": "3551910",
    "end": "3559710"
  },
  {
    "text": "And if you don't\nwant to do it, you can use some utility functions\nin Python or in SCL to do it.",
    "start": "3559710",
    "end": "3569190"
  },
  {
    "start": "3569190",
    "end": "3576295"
  },
  {
    "text": "Don't worry about it.  This is not-- ",
    "start": "3576295",
    "end": "3583820"
  },
  {
    "text": "OK. OK, yeah. So that was just\nto say that when you want to describe\nZ, what you do",
    "start": "3583820",
    "end": "3590390"
  },
  {
    "text": "is you represent Z\nas a binary sequence, and then you just send\nover the entire sequence,",
    "start": "3590390",
    "end": "3598099"
  },
  {
    "text": "the binary sequence. But as you know, you need\na terminating decimal.",
    "start": "3598100",
    "end": "3605539"
  },
  {
    "text": "If you had-- in math,\nyou study that if you write 1/3 in decimal it's\nlike 0.3333, it never ends.",
    "start": "3605540",
    "end": "3615110"
  },
  {
    "text": "That's not something\nyou can encode so you need something which is finite. So Z is binary\nrepresentation can be long",
    "start": "3615110",
    "end": "3622820"
  },
  {
    "text": "and it can have\ninfinitely many bits. So this is not something\nin practice you can encode. So what we are going to do\nis you need a Z hat such",
    "start": "3622820",
    "end": "3635869"
  },
  {
    "text": "that your Z hat\nis within L and H and it has a short\nbinary representation.",
    "start": "3635870",
    "end": "3642320"
  },
  {
    "text": "So we already-- like\nintuitively we can do this, but we are just trying to\ndo it in a more formal way.",
    "start": "3642320",
    "end": "3647630"
  },
  {
    "text": "Like How do you prove\nthat you can always find a Z hat which has a small\nbinary representation that",
    "start": "3647630",
    "end": "3652940"
  },
  {
    "text": "lies within this range? So that is what we are\ngoing on about here.",
    "start": "3652940",
    "end": "3658280"
  },
  {
    "text": "Like how do you prove that\ngiven a particular L to H you can always find some Z\nhat which has a short enough",
    "start": "3658280",
    "end": "3663859"
  },
  {
    "text": "binary representation? ",
    "start": "3663860",
    "end": "3673900"
  },
  {
    "text": "So let's say k is\nthe number of bits you decide to truncate it to. So you find that\nbinary expansion of Z.",
    "start": "3673900",
    "end": "3681040"
  },
  {
    "text": "And then you\ntruncate it to k bits and then you send those\nk bits on the other side.",
    "start": "3681040",
    "end": "3686050"
  },
  {
    "start": "3686050",
    "end": "3697090"
  },
  {
    "text": "Now you come into some sort of\nlike tricky business where-- so what we are saying\nhere is if Z hat has",
    "start": "3697090",
    "end": "3703880"
  },
  {
    "text": "a binary representation\nsomething, then not only does Z hat\nneed to belong within--",
    "start": "3703880",
    "end": "3712640"
  },
  {
    "text": "so basically, Z hat needs\nto lie in the L to H range.",
    "start": "3712640",
    "end": "3717849"
  },
  {
    "text": "But if you extend Z hat with\nsome arbitrary binary stuff, that should also lie in the set\nL to H. Otherwise, what happens",
    "start": "3717850",
    "end": "3728180"
  },
  {
    "text": "is that there can\nbe doubts about how to exactly decode this.",
    "start": "3728180",
    "end": "3734110"
  },
  {
    "text": "I will not go into the\ntechnical details here, but because last year we\nhad a homework question",
    "start": "3734110",
    "end": "3740410"
  },
  {
    "text": "and then it was very hard. We made a mistake and then\nstudents made mistakes.",
    "start": "3740410",
    "end": "3746289"
  },
  {
    "text": "But there are\nreasons, basically. If you don't do this\ncorrectly, then there are cases where decoder will\nmake the wrong decisions.",
    "start": "3746290",
    "end": "3753340"
  },
  {
    "text": "So just basically let me sort\nof quickly go through this.",
    "start": "3753340",
    "end": "3759860"
  },
  {
    "text": "So the point is that what\nyou need is that Z hat-- and this whole interval should\nlie within this other interval.",
    "start": "3759860",
    "end": "3767200"
  },
  {
    "text": "So you need to find a case\nas that Z hat to Z hat plus 2 to the minus k is\nwithin this thing.",
    "start": "3767200",
    "end": "3773290"
  },
  {
    "text": "OK, I will just skip.  I'll skip.",
    "start": "3773290",
    "end": "3779240"
  },
  {
    "text": "OK, this is what you get\nat the end of the day. That if your length of\nyour interval is H minus L,",
    "start": "3779240",
    "end": "3786579"
  },
  {
    "text": "then you need k which is\nthis thing, log of 1/H",
    "start": "3786580",
    "end": "3792250"
  },
  {
    "text": "minus L plus 1. ",
    "start": "3792250",
    "end": "3804720"
  },
  {
    "text": "OK, apologies for not\ngoing over it in detail. But let us do an\nexample and let's",
    "start": "3804720",
    "end": "3811049"
  },
  {
    "text": "try to build some\nintuition, at least. So if I have 0.35\nto 0.45, let's say.",
    "start": "3811050",
    "end": "3818250"
  },
  {
    "text": "So this has length equal to 0.1.",
    "start": "3818250",
    "end": "3823860"
  },
  {
    "text": "And you can find a\nnumber which is like 0.4 which lies in this range.",
    "start": "3823860",
    "end": "3829350"
  },
  {
    "text": "Is that-- people agree? 0.4 lies in this\nrange, 0.35 to 0.45.",
    "start": "3829350",
    "end": "3839330"
  },
  {
    "text": "OK, now let's do this one. 0.355 to 0.365.",
    "start": "3839330",
    "end": "3848210"
  },
  {
    "text": "What is the length\nof this thing? ",
    "start": "3848210",
    "end": "3853776"
  },
  {
    "text": "0.01. Yeah, 0.01, right? And can you tell me a number\nthat lies within this range?",
    "start": "3853776",
    "end": "3860693"
  },
  {
    "text": "0.36. Yeah, 0.36 lies\nwithin this range. So 0.36 lies within\n0.355 to 0.36.",
    "start": "3860694",
    "end": "3871060"
  },
  {
    "text": "Sometimes it's just easier\nto look at examples. OK, now let's do one more. ",
    "start": "3871060",
    "end": "3878660"
  },
  {
    "text": "OK, what is the length here? 0.355 to 0.3565.",
    "start": "3878660",
    "end": "3892250"
  },
  {
    "text": "I would say, length isn't.  Yeah, length is just like 0.001.",
    "start": "3892250",
    "end": "3898430"
  },
  {
    "text": "And you can find a number\nwhich is like 0.356 here.",
    "start": "3898430",
    "end": "3906579"
  },
  {
    "text": "So the intuition here is that\nthe number of bits needed",
    "start": "3906580",
    "end": "3917610"
  },
  {
    "text": "is roughly the log of\nthe interval length.",
    "start": "3917610",
    "end": "3926550"
  },
  {
    "text": "That is the intuition I\nthink you will develop. I think if you look\nat a few examples, it becomes very clear that as\nyour interval goes shorter,",
    "start": "3926550",
    "end": "3933930"
  },
  {
    "text": "you need more and more-- longer and longer decimals\nto find within that range.",
    "start": "3933930",
    "end": "3939450"
  },
  {
    "text": "But the length of\nthat decimal is roughly logarithmic in the\nlength of the interval.",
    "start": "3939450",
    "end": "3945510"
  },
  {
    "text": "Yeah, like in this example, as I\nmade my length 10 times smaller, I needed one more digit.",
    "start": "3945510",
    "end": "3951390"
  },
  {
    "text": "Similarly, if you-- in\nthe binary case, if you make your interval\ntwo times larger, you will need one\nmore bit, and then",
    "start": "3951390",
    "end": "3957030"
  },
  {
    "text": "you make it two times\nlarger again you need one more bit so that that's\nsort of the intuition here.",
    "start": "3957030",
    "end": "3962115"
  },
  {
    "start": "3962115",
    "end": "3974070"
  },
  {
    "text": "So quick story here. So we studied arithmetic coding\nwhen we did our information",
    "start": "3974070",
    "end": "3979200"
  },
  {
    "text": "theory classes a long time ago. Intuition is very easy. Basic intuition is\nvery, very simple.",
    "start": "3979200",
    "end": "3985650"
  },
  {
    "text": "Even if you take that\naway, that's enough. More probable sequence goes\nto longer intervals which can",
    "start": "3985650",
    "end": "3992188"
  },
  {
    "text": "be represented with fewer bits. That's it. And then we wanted to make\nthis compression library.",
    "start": "3992188",
    "end": "3997290"
  },
  {
    "text": "We wanted to implement\nit in practice. And then you just run into\na million different issues.",
    "start": "3997290",
    "end": "4003080"
  },
  {
    "text": "Like issues like this\nwhere it's very tricky, complicated to prove. And we haven't even come\nto even bigger issues.",
    "start": "4003080",
    "end": "4010880"
  },
  {
    "text": "So yeah, just be thankful\nto the people who like implemented it in C for you\nand then you can just use it.",
    "start": "4010880",
    "end": "4017630"
  },
  {
    "text": "You don't need to worry\nabout all these details. But yeah, yeah.",
    "start": "4017630",
    "end": "4023240"
  },
  {
    "text": "It's a bit tricky. Like there are parts of it\nI cannot claim that I fully",
    "start": "4023240",
    "end": "4028560"
  },
  {
    "text": "understand. We'll come to those later. I think Kedar\nimplemented it, but I think if you ask him today, he\nwould have forgotten probably.",
    "start": "4028560",
    "end": "4035122"
  },
  {
    "text": "So just very, very\ncomplicated stuff. Just keeps coming. ",
    "start": "4035122",
    "end": "4042450"
  },
  {
    "text": "So we saw that the\nsize of the interval",
    "start": "4042450",
    "end": "4047520"
  },
  {
    "text": "was log of the probability. And we saw that the\nkey was this thing.",
    "start": "4047520",
    "end": "4055520"
  },
  {
    "text": "You get the plus 2 because\nyou have the ceiling function. And after you basically\nuse this formula--",
    "start": "4055520",
    "end": "4063440"
  },
  {
    "text": "OK, so this is what\nyou get, basically. That the length of\nthe overall thing is less than or equal to log\nof the probability plus 2.",
    "start": "4063440",
    "end": "4072920"
  },
  {
    "text": "So you are just losing two\nbits for the entire sequence. So this is the main result\nof arithmetic coding.",
    "start": "4072920",
    "end": "4079730"
  },
  {
    "text": "That if you have a sequence\nof probability, p, then you pay log 1/p plus 2 however\nlong your sequence may be.",
    "start": "4079730",
    "end": "4088099"
  },
  {
    "start": "4088100",
    "end": "4098470"
  },
  {
    "text": "So let's just do super\nquick expected code length.",
    "start": "4098470",
    "end": "4104460"
  },
  {
    "text": "It's equal to the expectation\nof log 1/pxn equal to n times--",
    "start": "4104460",
    "end": "4114850"
  },
  {
    "text": "because of the IRD-ness. ",
    "start": "4114850",
    "end": "4122380"
  },
  {
    "text": "Is less than or equal 2. ",
    "start": "4122380",
    "end": "4130788"
  },
  {
    "text": "So what you get at\nthe end of the day is that your\nexpected code length is less than or equal to n\ntimes the entropy plus 2.",
    "start": "4130788",
    "end": "4137429"
  },
  {
    "text": " So this is the main result here\nthat with arithmetic coding",
    "start": "4137429",
    "end": "4146830"
  },
  {
    "text": "you get your expected\nbits per symbol between HX and HX plus 2/n.",
    "start": "4146830",
    "end": "4155250"
  },
  {
    "text": "And I think somebody\nasked at the very like towards the start of the thing,\nwhere does the 2 come from?",
    "start": "4155250",
    "end": "4160619"
  },
  {
    "start": "4160619",
    "end": "4165850"
  },
  {
    "text": "And yeah, this is\nwhere the 2 comes from. You get one from the ceiling\nfunction, and you have a 1 here.",
    "start": "4165850",
    "end": "4172420"
  },
  {
    "text": "So that is where\nthe 2 comes from. I don't know if it's very-- adds any intuition but\nthat's how it comes.",
    "start": "4172420",
    "end": "4179725"
  },
  {
    "text": " OK, sorry I have\nto move a bit fast.",
    "start": "4179725",
    "end": "4185154"
  },
  {
    "text": " OK, just to summarize,\ngiven any distribution, P,",
    "start": "4185155",
    "end": "4192179"
  },
  {
    "text": "you will achieve basically\nwithin two bits of the entropy.",
    "start": "4192180",
    "end": "4198160"
  },
  {
    "text": "Encoding and decoding are\nlinear time very efficient. We saw that only\nthing you need to do is like you need to\nmultiply some numbers",
    "start": "4198160",
    "end": "4204548"
  },
  {
    "text": "and make those intervals. You do not need to\nsave a large codebook.",
    "start": "4204548",
    "end": "4209602"
  },
  {
    "text": "Neither the encoder\nnor the decoder actually needs to\npreconstruct a codebook, you just go on the fly. Every step you just\nneed that interval",
    "start": "4209602",
    "end": "4216489"
  },
  {
    "text": "and you make it smaller. One thing to note is you\ndon't even need to compute--",
    "start": "4216490",
    "end": "4227200"
  },
  {
    "text": "you don't even need to compute\nP, sort of XN, sort of things.",
    "start": "4227200",
    "end": "4236750"
  },
  {
    "text": "You don't need to compute all-- if you have done like Huffman\ncoding and Huffman coding, you would first\nmake a table where",
    "start": "4236750",
    "end": "4242727"
  },
  {
    "text": "what is the probability of AAA,\nAAB, AAC, BAA sort of thing. You need to make a\nbig table and then",
    "start": "4242727",
    "end": "4249050"
  },
  {
    "text": "you can actually start\ndoing the encoding. Here, nothing. You just need per\nsymbol probabilities",
    "start": "4249050",
    "end": "4254750"
  },
  {
    "text": "and you just go sequentially.  And this last point\nis going to be",
    "start": "4254750",
    "end": "4261320"
  },
  {
    "text": "very crucial in the\nnext few lectures. Don't worry about it for now. Is that here we assume that P\nwas fixed but you can actually",
    "start": "4261320",
    "end": "4268010"
  },
  {
    "text": "vary P at every step and it\nstill works with arithmetic coding. So it's a very, very\npowerful algorithm.",
    "start": "4268010",
    "end": "4275400"
  },
  {
    "text": "This is like\nlecture 8 next week.",
    "start": "4275400",
    "end": "4280540"
  },
  {
    "start": "4280540",
    "end": "4287030"
  },
  {
    "text": "OK, in the few\nminutes we have left let's talk about a\ncouple practical issues. So as we keep doing this,\nWhat do you observe?",
    "start": "4287030",
    "end": "4295280"
  },
  {
    "text": "Do you think you will\nrun into some issues if you have a 100 length\nsequence or a 1,000 length sequence?",
    "start": "4295280",
    "end": "4301840"
  },
  {
    "text": "What do you see the intervals? Are there looking-- what\ndo you observe, basically?",
    "start": "4301840",
    "end": "4308326"
  },
  {
    "text": "You would have precision,\nwhich as you go--",
    "start": "4308326",
    "end": "4313570"
  },
  {
    "text": "Yeah. Yeah, so one suggestion is that\nas you go more and more right, the high and the low are getting\ncloser and closer to each other.",
    "start": "4313570",
    "end": "4320730"
  },
  {
    "text": "Very soon you will run\ninto precision issues because on your computer. If you have a 64-bit float, it\ncan only have so much precision.",
    "start": "4320730",
    "end": "4328170"
  },
  {
    "text": "And it's very quick. Like within like 100 symbols you\nwould run into precision issues",
    "start": "4328170",
    "end": "4333540"
  },
  {
    "text": "where your high and low\ncannot be distinguished on your hardware. So any suggestions\non what you could do?",
    "start": "4333540",
    "end": "4345250"
  },
  {
    "text": " Let me not ask for suggestions.",
    "start": "4345250",
    "end": "4351260"
  },
  {
    "text": "Let me tell you what you do. You basically-- if you reach a\npoint where L and H have become",
    "start": "4351260",
    "end": "4357780"
  },
  {
    "text": "very close, what you do is\nyou say that, OK, if you have any initial digits which\nare common between L and H,",
    "start": "4357780",
    "end": "4364140"
  },
  {
    "text": "you release those bits. You say that OK, these bits,\nso what we are saying here is let's say you are in\nthis very small range that's",
    "start": "4364140",
    "end": "4372820"
  },
  {
    "text": "from 0.429 to 0.444.",
    "start": "4372820",
    "end": "4380020"
  },
  {
    "text": "You already know first\ndigit is going to be 4.",
    "start": "4380020",
    "end": "4386570"
  },
  {
    "text": "Whatever interval you are\ngoing to end up with you know the first digit is 4. So what you can do\nis you can release",
    "start": "4386570",
    "end": "4392840"
  },
  {
    "text": "that 4 and you can\nmake a new thing which is going from 0.29 to 0.44.",
    "start": "4392840",
    "end": "4399980"
  },
  {
    "text": "This is just like\nan illustration. So the idea is that you can\nkeep releasing those bits. You don't need to keep L and\nH getting closer and closer.",
    "start": "4399980",
    "end": "4409099"
  },
  {
    "text": "At some point, if you\nsee that L and H have a lot of common prefix, you\njust release the prefix.",
    "start": "4409100",
    "end": "4415040"
  },
  {
    "text": "This is the sort of thing\nthat gets very tricky when you actually start to implement it. ",
    "start": "4415040",
    "end": "4421530"
  },
  {
    "text": "So the idea is that\nif L and H both start with a common substring, then\nany value lying within this",
    "start": "4421530",
    "end": "4428310"
  },
  {
    "text": "will also start with this. So you output the\nbits, basically.",
    "start": "4428310",
    "end": "4434809"
  },
  {
    "text": "So it's a streaming algorithm. It's not like you need\nto wait till the very end to output a single bit. As you go along, you\nkeep on rescaling.",
    "start": "4434810",
    "end": "4442650"
  },
  {
    "text": " We will not do rescaling now. OK, let's keep going.",
    "start": "4442650",
    "end": "4449000"
  },
  {
    "start": "4449000",
    "end": "4454830"
  },
  {
    "text": "If you're interested,\nI think some of you might be interested in\nhow it actually works. We encourage you to look\nat the SCL representation",
    "start": "4454830",
    "end": "4462210"
  },
  {
    "text": "and implementation. And what you will see is\nthat the SCL implementation has links to some blog\nposts which are basically",
    "start": "4462210",
    "end": "4469102"
  },
  {
    "text": "the only places\nwhere you can find a description of the algorithm\nlike a readable description. So just go to those blog posts\nif you want to understand.",
    "start": "4469103",
    "end": "4478140"
  },
  {
    "text": "Here we are just trying to give\nyou like the high level idea. And in the assignments\nyou will do some examples.",
    "start": "4478140",
    "end": "4484860"
  },
  {
    "text": "There will be a\nfinal project if you want to do some of\nthis in more detail.",
    "start": "4484860",
    "end": "4489990"
  },
  {
    "text": "So there are a\nfew variants here. There is arithmetic\ncoding, there is something called\nrange coding where you work with bytes so it's\nmore efficient on a computer.",
    "start": "4489990",
    "end": "4498600"
  },
  {
    "text": "A few variants for practical--\nfor the purpose of this class all of them are the same,\nexactly same intuition,",
    "start": "4498600",
    "end": "4507120"
  },
  {
    "text": "very commonly used. All these image and\nvideo coders heavily",
    "start": "4507120",
    "end": "4513100"
  },
  {
    "text": "rely on arithmetic coding. Many of these you will see in\nthe second half of the class in the lossy compression part.",
    "start": "4513100",
    "end": "4519190"
  },
  {
    "text": "And many of these\nexperimentals extremely like high compression\nratio compressors",
    "start": "4519190",
    "end": "4525460"
  },
  {
    "text": "they rely on arithmetic coding. And these we will see\nin lecture 9, basically.",
    "start": "4525460",
    "end": "4530980"
  },
  {
    "text": "So this is the second\nhalf lecture 9.",
    "start": "4530980",
    "end": "4539320"
  },
  {
    "text": "OK, last thing is\nthat arithmetic coding is pretty fast. It's linear time but it's\ndue to all these arithmetic",
    "start": "4539320",
    "end": "4545650"
  },
  {
    "text": "operations you are doing with\nmultiplications and divisions. It is actually significantly\nslower than Huffman coding.",
    "start": "4545650",
    "end": "4552010"
  },
  {
    "text": "So here you see Huffman coding\nand arithmetic coding compared. You see the compression\nis better for arithmetic",
    "start": "4552010",
    "end": "4557289"
  },
  {
    "text": "coding because you get a\nbigger block size effectively. So this is good but this is bad.",
    "start": "4557290",
    "end": "4562989"
  },
  {
    "text": "The speeds are not good. So depending on the\napplication, this may or may not be a bottleneck.",
    "start": "4562990",
    "end": "4570580"
  },
  {
    "text": "So the next lecture,\nwhich Pulkit will take, you will see two\nvery modern codes.",
    "start": "4570580",
    "end": "4576699"
  },
  {
    "text": "Arithmetic coding was 1970s. These two are like\n2010s, basically.",
    "start": "4576700",
    "end": "4581950"
  },
  {
    "text": "So in the last 10, 20 years\nthese have been developed. They-- especially\nthis tANS, this",
    "start": "4581950",
    "end": "4588130"
  },
  {
    "text": "is like somewhere between\narithmetic and Huffman coding and very\nfast decompression.",
    "start": "4588130",
    "end": "4594030"
  },
  {
    "text": "Still getting the same roughly\nthe same compression as arithmetic coding. So you will see something very\nnew and novel which is now",
    "start": "4594030",
    "end": "4603810"
  },
  {
    "text": "used in basically every codecs\nor codec or every compressor built after like or something\nor after 2015 is probably",
    "start": "4603810",
    "end": "4613080"
  },
  {
    "text": "using tANS instead of arithmetic\ncoding because of the high speed it offers.",
    "start": "4613080",
    "end": "4619110"
  },
  {
    "text": "OK, before I leave,\njust remember this.",
    "start": "4619110",
    "end": "4626980"
  },
  {
    "text": "None of it else really\nmatters as much. The main point is more\nprobable sequences",
    "start": "4626980",
    "end": "4632380"
  },
  {
    "text": "lead to bigger intervals which\nlead to shorter bit lengths. This is the takeaway. This is what matters\nin the next--",
    "start": "4632380",
    "end": "4640780"
  },
  {
    "text": "yeah, this is the intuition\nbehind arithmetic coding. And yeah, feel free\nto ask questions.",
    "start": "4640780",
    "end": "4647320"
  },
  {
    "text": "Thank you. ",
    "start": "4647320",
    "end": "4654000"
  }
]